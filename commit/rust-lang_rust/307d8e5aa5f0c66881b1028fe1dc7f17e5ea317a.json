{"sha": "307d8e5aa5f0c66881b1028fe1dc7f17e5ea317a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjMwN2Q4ZTVhYTVmMGM2Njg4MWIxMDI4ZmUxZGM3ZjE3ZTVlYTMxN2E=", "commit": {"author": {"name": "Marco A L Barbosa", "email": "malbarbo@gmail.com", "date": "2017-05-12T18:18:34Z"}, "committer": {"name": "Marco A L Barbosa", "email": "malbarbo@gmail.com", "date": "2017-05-17T21:20:50Z"}, "message": "ci: allows shared scripts", "tree": {"sha": "99a7c0369c1ab325e86a5ad9096caa97ba106d26", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/99a7c0369c1ab325e86a5ad9096caa97ba106d26"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/307d8e5aa5f0c66881b1028fe1dc7f17e5ea317a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/307d8e5aa5f0c66881b1028fe1dc7f17e5ea317a", "html_url": "https://github.com/rust-lang/rust/commit/307d8e5aa5f0c66881b1028fe1dc7f17e5ea317a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/307d8e5aa5f0c66881b1028fe1dc7f17e5ea317a/comments", "author": {"login": "malbarbo", "id": 1678126, "node_id": "MDQ6VXNlcjE2NzgxMjY=", "avatar_url": "https://avatars.githubusercontent.com/u/1678126?v=4", "gravatar_id": "", "url": "https://api.github.com/users/malbarbo", "html_url": "https://github.com/malbarbo", "followers_url": "https://api.github.com/users/malbarbo/followers", "following_url": "https://api.github.com/users/malbarbo/following{/other_user}", "gists_url": "https://api.github.com/users/malbarbo/gists{/gist_id}", "starred_url": "https://api.github.com/users/malbarbo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/malbarbo/subscriptions", "organizations_url": "https://api.github.com/users/malbarbo/orgs", "repos_url": "https://api.github.com/users/malbarbo/repos", "events_url": "https://api.github.com/users/malbarbo/events{/privacy}", "received_events_url": "https://api.github.com/users/malbarbo/received_events", "type": "User", "site_admin": false}, "committer": {"login": "malbarbo", "id": 1678126, "node_id": "MDQ6VXNlcjE2NzgxMjY=", "avatar_url": "https://avatars.githubusercontent.com/u/1678126?v=4", "gravatar_id": "", "url": "https://api.github.com/users/malbarbo", "html_url": "https://github.com/malbarbo", "followers_url": "https://api.github.com/users/malbarbo/followers", "following_url": "https://api.github.com/users/malbarbo/following{/other_user}", "gists_url": "https://api.github.com/users/malbarbo/gists{/gist_id}", "starred_url": "https://api.github.com/users/malbarbo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/malbarbo/subscriptions", "organizations_url": "https://api.github.com/users/malbarbo/orgs", "repos_url": "https://api.github.com/users/malbarbo/repos", "events_url": "https://api.github.com/users/malbarbo/events{/privacy}", "received_events_url": "https://api.github.com/users/malbarbo/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7b5c3d2b208f47b0750ea6c39f6f3f97cb1ca1bb", "url": "https://api.github.com/repos/rust-lang/rust/commits/7b5c3d2b208f47b0750ea6c39f6f3f97cb1ca1bb", "html_url": "https://github.com/rust-lang/rust/commit/7b5c3d2b208f47b0750ea6c39f6f3f97cb1ca1bb"}], "stats": {"total": 497, "additions": 237, "deletions": 260}, "files": [{"sha": "c3d83c087e52fee5a5ccec4206a6e936656d99f1", "filename": "src/ci/docker/android-ndk.sh", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/307d8e5aa5f0c66881b1028fe1dc7f17e5ea317a/src%2Fci%2Fdocker%2Fandroid-ndk.sh", "raw_url": "https://github.com/rust-lang/rust/raw/307d8e5aa5f0c66881b1028fe1dc7f17e5ea317a/src%2Fci%2Fdocker%2Fandroid-ndk.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fandroid-ndk.sh?ref=307d8e5aa5f0c66881b1028fe1dc7f17e5ea317a", "patch": "@@ -1,4 +1,3 @@\n-#!/bin/sh\n # Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n # file at the top-level directory of this distribution and at\n # http://rust-lang.org/COPYRIGHT.\n@@ -33,3 +32,9 @@ make_standalone_toolchain() {\n remove_ndk() {\n     rm -rf /android/ndk/ndk\n }\n+\n+download_and_make_toolchain() {\n+    download_ndk $1 && \\\n+    make_standalone_toolchain $2 $3 && \\\n+    remove_ndk\n+}"}, {"sha": "7d8110efedec936d2ac49c8813c0b445193f21d7", "filename": "src/ci/docker/android-sdk.sh", "status": "renamed", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/307d8e5aa5f0c66881b1028fe1dc7f17e5ea317a/src%2Fci%2Fdocker%2Fandroid-sdk.sh", "raw_url": "https://github.com/rust-lang/rust/raw/307d8e5aa5f0c66881b1028fe1dc7f17e5ea317a/src%2Fci%2Fdocker%2Fandroid-sdk.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fandroid-sdk.sh?ref=307d8e5aa5f0c66881b1028fe1dc7f17e5ea317a", "patch": "@@ -1,4 +1,3 @@\n-#!/bin/sh\n # Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n # file at the top-level directory of this distribution and at\n # http://rust-lang.org/COPYRIGHT.\n@@ -47,3 +46,8 @@ create_avd() {\n             --abi $abi\n }\n \n+download_and_create_avd() {\n+    download_sdk $1\n+    download_sysimage $2 $3\n+    create_avd $2 $3\n+}", "previous_filename": "src/ci/docker/arm-android/install-sdk.sh"}, {"sha": "cd3369d5eaddc7da93f844b4fa3fd7ceceee021f", "filename": "src/ci/docker/android-start-emulator.sh", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/307d8e5aa5f0c66881b1028fe1dc7f17e5ea317a/src%2Fci%2Fdocker%2Fandroid-start-emulator.sh", "raw_url": "https://github.com/rust-lang/rust/raw/307d8e5aa5f0c66881b1028fe1dc7f17e5ea317a/src%2Fci%2Fdocker%2Fandroid-start-emulator.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fandroid-start-emulator.sh?ref=307d8e5aa5f0c66881b1028fe1dc7f17e5ea317a", "previous_filename": "src/ci/docker/arm-android/start-emulator.sh"}, {"sha": "6fd3ed7c6a9e9b18526045eb960a058370ace9e7", "filename": "src/ci/docker/arm-android/Dockerfile", "status": "modified", "additions": 33, "deletions": 37, "changes": 70, "blob_url": "https://github.com/rust-lang/rust/blob/307d8e5aa5f0c66881b1028fe1dc7f17e5ea317a/src%2Fci%2Fdocker%2Farm-android%2FDockerfile", "raw_url": "https://github.com/rust-lang/rust/raw/307d8e5aa5f0c66881b1028fe1dc7f17e5ea317a/src%2Fci%2Fdocker%2Farm-android%2FDockerfile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Farm-android%2FDockerfile?ref=307d8e5aa5f0c66881b1028fe1dc7f17e5ea317a", "patch": "@@ -2,52 +2,44 @@ FROM ubuntu:16.04\n \n RUN apt-get update && \\\n     apt-get install -y --no-install-recommends \\\n+  ca-certificates \\\n+  cmake \\\n+  curl \\\n+  file \\\n   g++ \\\n+  git \\\n+  libssl-dev \\\n   make \\\n-  file \\\n-  curl \\\n-  ca-certificates \\\n+  pkg-config \\\n   python2.7 \\\n-  git \\\n-  cmake \\\n-  unzip \\\n   sudo \\\n-  xz-utils \\\n-  libssl-dev \\\n-  pkg-config\n-\n-RUN curl -OL https://github.com/Yelp/dumb-init/releases/download/v1.2.0/dumb-init_1.2.0_amd64.deb && \\\n-    dpkg -i dumb-init_*.deb && \\\n-    rm dumb-init_*.deb\n+  unzip \\\n+  xz-utils\n \n-RUN curl -o /usr/local/bin/sccache \\\n-      https://s3.amazonaws.com/rust-lang-ci/rust-ci-mirror/2017-05-12-sccache-x86_64-unknown-linux-musl && \\\n-    chmod +x /usr/local/bin/sccache\n+# dumb-init\n+COPY dumb-init.sh /scripts/\n+RUN sh /scripts/dumb-init.sh\n \n-# Install NDK\n-COPY install-ndk.sh /tmp\n-RUN . /tmp/install-ndk.sh && \\\n-    download_ndk android-ndk-r13b-linux-x86_64.zip && \\\n-    make_standalone_toolchain arm 9 && \\\n-    remove_ndk\n+# ndk\n+COPY android-ndk.sh /scripts/\n+RUN . /scripts/android-ndk.sh && \\\n+    download_and_make_toolchain android-ndk-r13b-linux-x86_64.zip arm 9\n \n-# Install SDK\n+# sdk\n RUN dpkg --add-architecture i386 && \\\n     apt-get update && \\\n     apt-get install -y --no-install-recommends \\\n-  openjdk-9-jre-headless \\\n-  tzdata \\\n-  libstdc++6:i386 \\\n   libgl1-mesa-glx \\\n-  libpulse0\n+  libpulse0 \\\n+  libstdc++6:i386 \\\n+  openjdk-9-jre-headless \\\n+  tzdata\n \n-COPY install-sdk.sh /tmp\n-RUN . /tmp/install-sdk.sh && \\\n-    download_sdk tools_r25.2.5-linux.zip && \\\n-    download_sysimage armeabi-v7a 18 && \\\n-    create_avd armeabi-v7a 18\n+COPY android-sdk.sh /scripts/\n+RUN . /scripts/android-sdk.sh && \\\n+    download_and_create_avd tools_r25.2.5-linux.zip armeabi-v7a 18\n \n-# Setup env\n+# env\n ENV PATH=$PATH:/android/sdk/tools\n ENV PATH=$PATH:/android/sdk/platform-tools\n \n@@ -57,8 +49,12 @@ ENV RUST_CONFIGURE_ARGS \\\n       --target=$TARGETS \\\n       --arm-linux-androideabi-ndk=/android/ndk/arm-9\n \n-ENV SCRIPT python2.7 ../x.py test --target $TARGETS --verbose\n+ENV SCRIPT python2.7 ../x.py test --target $TARGETS\n+\n+# sccache\n+COPY sccache.sh /scripts/\n+RUN sh /scripts/sccache.sh\n \n-# Entrypoint\n-COPY start-emulator.sh /android/\n-ENTRYPOINT [\"/usr/bin/dumb-init\", \"--\", \"/android/start-emulator.sh\"]\n+# init\n+COPY android-start-emulator.sh /scripts/\n+ENTRYPOINT [\"/usr/bin/dumb-init\", \"--\", \"/scripts/android-start-emulator.sh\"]"}, {"sha": "80818721199838adf8fa0a6b509739366098e9c5", "filename": "src/ci/docker/arm-android/install-ndk.sh", "status": "removed", "additions": 0, "deletions": 35, "changes": 35, "blob_url": "https://github.com/rust-lang/rust/blob/7b5c3d2b208f47b0750ea6c39f6f3f97cb1ca1bb/src%2Fci%2Fdocker%2Farm-android%2Finstall-ndk.sh", "raw_url": "https://github.com/rust-lang/rust/raw/7b5c3d2b208f47b0750ea6c39f6f3f97cb1ca1bb/src%2Fci%2Fdocker%2Farm-android%2Finstall-ndk.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Farm-android%2Finstall-ndk.sh?ref=7b5c3d2b208f47b0750ea6c39f6f3f97cb1ca1bb", "patch": "@@ -1,35 +0,0 @@\n-#!/bin/sh\n-# Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n-# file at the top-level directory of this distribution and at\n-# http://rust-lang.org/COPYRIGHT.\n-#\n-# Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-# http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-# <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-# option. This file may not be copied, modified, or distributed\n-# except according to those terms.\n-\n-set -ex\n-\n-URL=https://dl.google.com/android/repository\n-\n-download_ndk() {\n-    mkdir -p /android/ndk\n-    cd /android/ndk\n-    curl -O $URL/$1\n-    unzip -q $1\n-    rm $1\n-    mv android-ndk-* ndk\n-}\n-\n-make_standalone_toolchain() {\n-    # See https://developer.android.com/ndk/guides/standalone_toolchain.html\n-    python2.7 /android/ndk/ndk/build/tools/make_standalone_toolchain.py \\\n-        --install-dir /android/ndk/$1-$2 \\\n-        --arch $1 \\\n-        --api $2\n-}\n-\n-remove_ndk() {\n-    rm -rf /android/ndk/ndk\n-}"}, {"sha": "03e0b78ba89b3d83a8c3e2b6444aa0c7fe54b25d", "filename": "src/ci/docker/armhf-gnu/Dockerfile", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/307d8e5aa5f0c66881b1028fe1dc7f17e5ea317a/src%2Fci%2Fdocker%2Farmhf-gnu%2FDockerfile", "raw_url": "https://github.com/rust-lang/rust/raw/307d8e5aa5f0c66881b1028fe1dc7f17e5ea317a/src%2Fci%2Fdocker%2Farmhf-gnu%2FDockerfile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Farmhf-gnu%2FDockerfile?ref=307d8e5aa5f0c66881b1028fe1dc7f17e5ea317a", "patch": "@@ -31,7 +31,7 @@ WORKDIR /build\n # The `vexpress_config` config file was a previously generated config file for\n # the kernel. This file was generated by running `make vexpress_defconfig`\n # followed by `make menuconfig` and then enabling the IPv6 protocol page.\n-COPY vexpress_config /build/.config\n+COPY armhf-gnu/vexpress_config /build/.config\n RUN curl https://cdn.kernel.org/pub/linux/kernel/v4.x/linux-4.4.42.tar.xz | \\\n       tar xJf - && \\\n       cd /build/linux-4.4.42 && \\\n@@ -63,11 +63,11 @@ RUN curl http://cdimage.ubuntu.com/ubuntu-base/releases/16.04/release/ubuntu-bas\n \n # Copy over our init script, which starts up our test server and also a few\n # other misc tasks.\n-COPY rcS rootfs/etc/init.d/rcS\n+COPY armhf-gnu/rcS rootfs/etc/init.d/rcS\n RUN chmod +x rootfs/etc/init.d/rcS\n \n # Helper to quickly fill the entropy pool in the kernel.\n-COPY addentropy.c /tmp/\n+COPY armhf-gnu/addentropy.c /tmp/\n RUN arm-linux-gnueabihf-gcc addentropy.c -o rootfs/addentropy -static\n \n # TODO: What is this?!"}, {"sha": "7759d91e1bb635c41ba6b89a426616ebda65a293", "filename": "src/ci/docker/cross/Dockerfile", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/307d8e5aa5f0c66881b1028fe1dc7f17e5ea317a/src%2Fci%2Fdocker%2Fcross%2FDockerfile", "raw_url": "https://github.com/rust-lang/rust/raw/307d8e5aa5f0c66881b1028fe1dc7f17e5ea317a/src%2Fci%2Fdocker%2Fcross%2FDockerfile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fcross%2FDockerfile?ref=307d8e5aa5f0c66881b1028fe1dc7f17e5ea317a", "patch": "@@ -32,10 +32,10 @@ ENTRYPOINT [\"/usr/bin/dumb-init\", \"--\"]\n \n WORKDIR /tmp\n \n-COPY build-rumprun.sh /tmp/\n+COPY cross/build-rumprun.sh /tmp/\n RUN ./build-rumprun.sh\n \n-COPY build-arm-musl.sh /tmp/\n+COPY cross/build-arm-musl.sh /tmp/\n RUN ./build-arm-musl.sh\n \n # originally from"}, {"sha": "5a966518759e453d604914d9f17653d01a25836c", "filename": "src/ci/docker/disabled/dist-aarch64-android/Dockerfile", "status": "modified", "additions": 24, "deletions": 23, "changes": 47, "blob_url": "https://github.com/rust-lang/rust/blob/307d8e5aa5f0c66881b1028fe1dc7f17e5ea317a/src%2Fci%2Fdocker%2Fdisabled%2Fdist-aarch64-android%2FDockerfile", "raw_url": "https://github.com/rust-lang/rust/raw/307d8e5aa5f0c66881b1028fe1dc7f17e5ea317a/src%2Fci%2Fdocker%2Fdisabled%2Fdist-aarch64-android%2FDockerfile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fdisabled%2Fdist-aarch64-android%2FDockerfile?ref=307d8e5aa5f0c66881b1028fe1dc7f17e5ea317a", "patch": "@@ -2,36 +2,30 @@ FROM ubuntu:16.04\n \n RUN apt-get update && \\\n     apt-get install -y --no-install-recommends \\\n+  ca-certificates \\\n+  cmake \\\n+  curl \\\n+  file \\\n   g++ \\\n+  git \\\n+  libssl-dev \\\n   make \\\n-  file \\\n-  curl \\\n-  ca-certificates \\\n+  pkg-config \\\n   python2.7 \\\n-  git \\\n-  cmake \\\n-  unzip \\\n   sudo \\\n-  xz-utils \\\n-  libssl-dev \\\n-  pkg-config\n-\n-RUN curl -OL https://github.com/Yelp/dumb-init/releases/download/v1.2.0/dumb-init_1.2.0_amd64.deb && \\\n-    dpkg -i dumb-init_*.deb && \\\n-    rm dumb-init_*.deb\n-\n-RUN curl -o /usr/local/bin/sccache \\\n-      https://s3.amazonaws.com/rust-lang-ci/rust-ci-mirror/2017-05-12-sccache-x86_64-unknown-linux-musl && \\\n-      chmod +x /usr/local/bin/sccache\n+  unzip \\\n+  xz-utils\n \n-ENTRYPOINT [\"/usr/bin/dumb-init\", \"--\"]\n+# dumb-init\n+COPY dumb-init.sh /scripts/\n+RUN sh /scripts/dumb-init.sh\n \n-COPY android-ndk.sh /\n-RUN . /android-ndk.sh && \\\n-    download_ndk android-ndk-r13b-linux-x86_64.zip && \\\n-    make_standalone_toolchain arm64 21 && \\\n-    remove_ndk\n+# ndk\n+COPY android-ndk.sh /scripts/\n+RUN . /scripts/android-ndk.sh && \\\n+    download_and_make_toolchain android-ndk-r13b-linux-x86_64.zip arm64 21\n \n+# env\n ENV PATH=$PATH:/android/ndk/arm64-21/bin\n \n ENV DEP_Z_ROOT=/android/ndk/arm64-21/sysroot/usr/\n@@ -47,3 +41,10 @@ ENV RUST_CONFIGURE_ARGS \\\n       --enable-cargo-openssl-static\n \n ENV SCRIPT python2.7 ../x.py dist --target $HOSTS --host $HOSTS\n+\n+# sccache\n+COPY sccache.sh /scripts/\n+RUN sh /scripts/sccache.sh\n+\n+# init\n+ENTRYPOINT [\"/usr/bin/dumb-init\", \"--\"]"}, {"sha": "f92a28a794612928ea81261d56229524262f8a6e", "filename": "src/ci/docker/disabled/dist-armv7-android/Dockerfile", "status": "modified", "additions": 26, "deletions": 23, "changes": 49, "blob_url": "https://github.com/rust-lang/rust/blob/307d8e5aa5f0c66881b1028fe1dc7f17e5ea317a/src%2Fci%2Fdocker%2Fdisabled%2Fdist-armv7-android%2FDockerfile", "raw_url": "https://github.com/rust-lang/rust/raw/307d8e5aa5f0c66881b1028fe1dc7f17e5ea317a/src%2Fci%2Fdocker%2Fdisabled%2Fdist-armv7-android%2FDockerfile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fdisabled%2Fdist-armv7-android%2FDockerfile?ref=307d8e5aa5f0c66881b1028fe1dc7f17e5ea317a", "patch": "@@ -2,37 +2,36 @@ FROM ubuntu:16.04\n \n RUN apt-get update && \\\n     apt-get install -y --no-install-recommends \\\n+  ca-certificates \\\n+  cmake \\\n+  curl \\\n+  file \\\n   g++ \\\n+  git \\\n+  libssl-dev \\\n   make \\\n-  file \\\n-  curl \\\n-  ca-certificates \\\n+  pkg-config \\\n   python2.7 \\\n-  git \\\n-  cmake \\\n-  unzip \\\n   sudo \\\n-  xz-utils \\\n-  libssl-dev \\\n-  pkg-config\n-\n-RUN curl -OL https://github.com/Yelp/dumb-init/releases/download/v1.2.0/dumb-init_1.2.0_amd64.deb && \\\n-    dpkg -i dumb-init_*.deb && \\\n-    rm dumb-init_*.deb\n-\n-RUN curl -o /usr/local/bin/sccache \\\n-      https://s3.amazonaws.com/rust-lang-ci/rust-ci-mirror/2017-05-12-sccache-x86_64-unknown-linux-musl && \\\n-      chmod +x /usr/local/bin/sccache\n+  unzip \\\n+  xz-utils\n \n-ENTRYPOINT [\"/usr/bin/dumb-init\", \"--\"]\n+# dumb-init\n+COPY dumb-init.sh /scripts/\n+RUN sh /scripts/dumb-init.sh\n \n-COPY android-ndk.sh /\n-RUN . /android-ndk.sh && \\\n+# ndk\n+COPY android-ndk.sh /scripts/\n+RUN . /scripts/android-ndk.sh && \\\n     download_ndk android-ndk-r13b-linux-x86_64.zip && \\\n     make_standalone_toolchain arm 9 && \\\n     make_standalone_toolchain arm 21 && \\\n     remove_ndk\n \n+RUN chmod 777 /android/ndk && \\\n+    ln -s /android/ndk/arm-21 /android/ndk/arm\n+\n+# env\n ENV PATH=$PATH:/android/ndk/arm-9/bin\n \n ENV DEP_Z_ROOT=/android/ndk/arm-9/sysroot/usr/\n@@ -54,12 +53,16 @@ ENV RUST_CONFIGURE_ARGS \\\n # level 9), the default linker behavior is to generate an error, to allow the\n # build to finish we use --warn-unresolved-symbols. Note that the missing\n # symbols does not affect std, only the compiler (llvm) and cargo (openssl).\n-RUN chmod 777 /android/ndk && \\\n-    ln -s /android/ndk/arm-21 /android/ndk/arm\n-\n ENV SCRIPT \\\n   python2.7 ../x.py build src/llvm --host $HOSTS --target $HOSTS && \\\n   (export RUSTFLAGS=\"\\\"-C link-arg=-Wl,--warn-unresolved-symbols\\\"\"; \\\n     rm /android/ndk/arm && \\\n     ln -s /android/ndk/arm-9 /android/ndk/arm && \\\n     python2.7 ../x.py dist --host $HOSTS --target $HOSTS)\n+\n+# sccache\n+COPY sccache.sh /scripts/\n+RUN sh /scripts/sccache.sh\n+\n+# init\n+ENTRYPOINT [\"/usr/bin/dumb-init\", \"--\"]"}, {"sha": "c475c19ebde76a28b0955f16fefbe9a240c79343", "filename": "src/ci/docker/disabled/dist-i686-android/Dockerfile", "status": "modified", "additions": 26, "deletions": 23, "changes": 49, "blob_url": "https://github.com/rust-lang/rust/blob/307d8e5aa5f0c66881b1028fe1dc7f17e5ea317a/src%2Fci%2Fdocker%2Fdisabled%2Fdist-i686-android%2FDockerfile", "raw_url": "https://github.com/rust-lang/rust/raw/307d8e5aa5f0c66881b1028fe1dc7f17e5ea317a/src%2Fci%2Fdocker%2Fdisabled%2Fdist-i686-android%2FDockerfile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fdisabled%2Fdist-i686-android%2FDockerfile?ref=307d8e5aa5f0c66881b1028fe1dc7f17e5ea317a", "patch": "@@ -2,37 +2,36 @@ FROM ubuntu:16.04\n \n RUN apt-get update && \\\n     apt-get install -y --no-install-recommends \\\n+  ca-certificates \\\n+  cmake \\\n+  curl \\\n+  file \\\n   g++ \\\n+  git \\\n+  libssl-dev \\\n   make \\\n-  file \\\n-  curl \\\n-  ca-certificates \\\n+  pkg-config \\\n   python2.7 \\\n-  git \\\n-  cmake \\\n-  unzip \\\n   sudo \\\n-  xz-utils \\\n-  libssl-dev \\\n-  pkg-config\n-\n-RUN curl -OL https://github.com/Yelp/dumb-init/releases/download/v1.2.0/dumb-init_1.2.0_amd64.deb && \\\n-    dpkg -i dumb-init_*.deb && \\\n-    rm dumb-init_*.deb\n-\n-RUN curl -o /usr/local/bin/sccache \\\n-      https://s3.amazonaws.com/rust-lang-ci/rust-ci-mirror/2017-05-12-sccache-x86_64-unknown-linux-musl && \\\n-      chmod +x /usr/local/bin/sccache\n+  unzip \\\n+  xz-utils\n \n-ENTRYPOINT [\"/usr/bin/dumb-init\", \"--\"]\n+# dumb-init\n+COPY dumb-init.sh /scripts/\n+RUN sh /scripts/dumb-init.sh\n \n-COPY android-ndk.sh /\n-RUN . /android-ndk.sh && \\\n+# ndk\n+COPY android-ndk.sh /scripts/\n+RUN . /scripts/android-ndk.sh && \\\n     download_ndk android-ndk-r13b-linux-x86_64.zip && \\\n     make_standalone_toolchain x86 9 && \\\n     make_standalone_toolchain x86 21 && \\\n     remove_ndk\n \n+RUN chmod 777 /android/ndk && \\\n+    ln -s /android/ndk/x86-21 /android/ndk/x86\n+\n+# env\n ENV PATH=$PATH:/android/ndk/x86-9/bin\n \n ENV DEP_Z_ROOT=/android/ndk/x86-9/sysroot/usr/\n@@ -54,12 +53,16 @@ ENV RUST_CONFIGURE_ARGS \\\n # level 9), the default linker behavior is to generate an error, to allow the\n # build to finish we use --warn-unresolved-symbols. Note that the missing\n # symbols does not affect std, only the compiler (llvm) and cargo (openssl).\n-RUN chmod 777 /android/ndk && \\\n-    ln -s /android/ndk/x86-21 /android/ndk/x86\n-\n ENV SCRIPT \\\n   python2.7 ../x.py build src/llvm --host $HOSTS --target $HOSTS && \\\n   (export RUSTFLAGS=\"\\\"-C link-arg=-Wl,--warn-unresolved-symbols\\\"\"; \\\n     rm /android/ndk/x86 && \\\n     ln -s /android/ndk/x86-9 /android/ndk/x86 && \\\n     python2.7 ../x.py dist --host $HOSTS --target $HOSTS)\n+\n+# sccache\n+COPY sccache.sh /scripts/\n+RUN sh /scripts/sccache.sh\n+\n+# init\n+ENTRYPOINT [\"/usr/bin/dumb-init\", \"--\"]"}, {"sha": "4f4f5fae18d1877c968c6f3523b894d41de8886b", "filename": "src/ci/docker/disabled/dist-x86_64-android/Dockerfile", "status": "modified", "additions": 24, "deletions": 23, "changes": 47, "blob_url": "https://github.com/rust-lang/rust/blob/307d8e5aa5f0c66881b1028fe1dc7f17e5ea317a/src%2Fci%2Fdocker%2Fdisabled%2Fdist-x86_64-android%2FDockerfile", "raw_url": "https://github.com/rust-lang/rust/raw/307d8e5aa5f0c66881b1028fe1dc7f17e5ea317a/src%2Fci%2Fdocker%2Fdisabled%2Fdist-x86_64-android%2FDockerfile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fdisabled%2Fdist-x86_64-android%2FDockerfile?ref=307d8e5aa5f0c66881b1028fe1dc7f17e5ea317a", "patch": "@@ -2,36 +2,30 @@ FROM ubuntu:16.04\n \n RUN apt-get update && \\\n     apt-get install -y --no-install-recommends \\\n+  ca-certificates \\\n+  cmake \\\n+  curl \\\n+  file \\\n   g++ \\\n+  git \\\n+  libssl-dev \\\n   make \\\n-  file \\\n-  curl \\\n-  ca-certificates \\\n+  pkg-config \\\n   python2.7 \\\n-  git \\\n-  cmake \\\n-  unzip \\\n   sudo \\\n-  xz-utils \\\n-  libssl-dev \\\n-  pkg-config\n-\n-RUN curl -OL https://github.com/Yelp/dumb-init/releases/download/v1.2.0/dumb-init_1.2.0_amd64.deb && \\\n-    dpkg -i dumb-init_*.deb && \\\n-    rm dumb-init_*.deb\n-\n-RUN curl -o /usr/local/bin/sccache \\\n-      https://s3.amazonaws.com/rust-lang-ci/rust-ci-mirror/2017-05-12-sccache-x86_64-unknown-linux-musl && \\\n-      chmod +x /usr/local/bin/sccache\n+  unzip \\\n+  xz-utils\n \n-ENTRYPOINT [\"/usr/bin/dumb-init\", \"--\"]\n+# dumb-init\n+COPY dumb-init.sh /scripts/\n+RUN sh /scripts/dumb-init.sh\n \n-COPY android-ndk.sh /\n-RUN . /android-ndk.sh && \\\n-    download_ndk android-ndk-r13b-linux-x86_64.zip && \\\n-    make_standalone_toolchain x86_64 21 && \\\n-    remove_ndk\n+# ndk\n+COPY android-ndk.sh /scripts/\n+RUN . /scripts/android-ndk.sh && \\\n+    download_and_make_toolchain android-ndk-r13b-linux-x86_64.zip x86_64 21\n \n+# env\n ENV PATH=$PATH:/android/ndk/x86_64-21/bin\n \n ENV DEP_Z_ROOT=/android/ndk/x86_64-21/sysroot/usr/\n@@ -47,3 +41,10 @@ ENV RUST_CONFIGURE_ARGS \\\n       --enable-cargo-openssl-static\n \n ENV SCRIPT python2.7 ../x.py dist --target $HOSTS --host $HOSTS\n+\n+# sccache\n+COPY sccache.sh /scripts/\n+RUN sh /scripts/sccache.sh\n+\n+# init\n+ENTRYPOINT [\"/usr/bin/dumb-init\", \"--\"]"}, {"sha": "0134a5407932ad08906e86e786fcaa5da3a05700", "filename": "src/ci/docker/dist-aarch64-linux/Dockerfile", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/307d8e5aa5f0c66881b1028fe1dc7f17e5ea317a/src%2Fci%2Fdocker%2Fdist-aarch64-linux%2FDockerfile", "raw_url": "https://github.com/rust-lang/rust/raw/307d8e5aa5f0c66881b1028fe1dc7f17e5ea317a/src%2Fci%2Fdocker%2Fdist-aarch64-linux%2FDockerfile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fdist-aarch64-linux%2FDockerfile?ref=307d8e5aa5f0c66881b1028fe1dc7f17e5ea317a", "patch": "@@ -56,7 +56,7 @@ RUN mkdir /x-tools && chown rustbuild:rustbuild /x-tools\n USER rustbuild\n WORKDIR /tmp\n \n-COPY aarch64-linux-gnu.config build-toolchains.sh /tmp/\n+COPY dist-aarch64-linux/aarch64-linux-gnu.config dist-aarch64-linux/build-toolchains.sh /tmp/\n RUN ./build-toolchains.sh\n \n USER root"}, {"sha": "13d76536113b28d1eeec4456ec56483a21604b58", "filename": "src/ci/docker/dist-android/Dockerfile", "status": "modified", "additions": 23, "deletions": 21, "changes": 44, "blob_url": "https://github.com/rust-lang/rust/blob/307d8e5aa5f0c66881b1028fe1dc7f17e5ea317a/src%2Fci%2Fdocker%2Fdist-android%2FDockerfile", "raw_url": "https://github.com/rust-lang/rust/raw/307d8e5aa5f0c66881b1028fe1dc7f17e5ea317a/src%2Fci%2Fdocker%2Fdist-android%2FDockerfile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fdist-android%2FDockerfile?ref=307d8e5aa5f0c66881b1028fe1dc7f17e5ea317a", "patch": "@@ -2,40 +2,35 @@ FROM ubuntu:16.04\n \n RUN apt-get update && \\\n     apt-get install -y --no-install-recommends \\\n+  ca-certificates \\\n+  cmake \\\n+  curl \\\n+  file \\\n   g++ \\\n+  git \\\n+  libssl-dev \\\n   make \\\n-  file \\\n-  curl \\\n-  ca-certificates \\\n+  pkg-config \\\n   python2.7 \\\n-  git \\\n-  cmake \\\n-  unzip \\\n   sudo \\\n-  xz-utils \\\n-  libssl-dev \\\n-  pkg-config\n-\n-RUN curl -OL https://github.com/Yelp/dumb-init/releases/download/v1.2.0/dumb-init_1.2.0_amd64.deb && \\\n-    dpkg -i dumb-init_*.deb && \\\n-    rm dumb-init_*.deb\n-\n-RUN curl -o /usr/local/bin/sccache \\\n-      https://s3.amazonaws.com/rust-lang-ci/rust-ci-mirror/2017-05-12-sccache-x86_64-unknown-linux-musl && \\\n-    chmod +x /usr/local/bin/sccache\n+  unzip \\\n+  xz-utils\n \n-ENTRYPOINT [\"/usr/bin/dumb-init\", \"--\"]\n+# dumb-init\n+COPY dumb-init.sh /scripts/\n+RUN sh /scripts/dumb-init.sh\n \n-# Install NDK\n-COPY install-ndk.sh /tmp\n-RUN . /tmp/install-ndk.sh && \\\n+# ndk\n+COPY android-ndk.sh /scripts/\n+RUN . /scripts/android-ndk.sh && \\\n     download_ndk android-ndk-r13b-linux-x86_64.zip && \\\n     make_standalone_toolchain arm 9 && \\\n     make_standalone_toolchain x86 9 && \\\n     make_standalone_toolchain arm64 21 && \\\n     make_standalone_toolchain x86_64 21 && \\\n     remove_ndk\n \n+# env\n ENV TARGETS=arm-linux-androideabi\n ENV TARGETS=$TARGETS,armv7-linux-androideabi\n ENV TARGETS=$TARGETS,i686-linux-android\n@@ -52,3 +47,10 @@ ENV RUST_CONFIGURE_ARGS \\\n       --x86_64-linux-android-ndk=/android/ndk/x86_64-21\n \n ENV SCRIPT python2.7 ../x.py dist --target $TARGETS\n+\n+# cache\n+COPY sccache.sh /scripts/\n+RUN sh /scripts/sccache.sh\n+\n+# init\n+ENTRYPOINT [\"/usr/bin/dumb-init\", \"--\"]"}, {"sha": "80818721199838adf8fa0a6b509739366098e9c5", "filename": "src/ci/docker/dist-android/install-ndk.sh", "status": "removed", "additions": 0, "deletions": 35, "changes": 35, "blob_url": "https://github.com/rust-lang/rust/blob/7b5c3d2b208f47b0750ea6c39f6f3f97cb1ca1bb/src%2Fci%2Fdocker%2Fdist-android%2Finstall-ndk.sh", "raw_url": "https://github.com/rust-lang/rust/raw/7b5c3d2b208f47b0750ea6c39f6f3f97cb1ca1bb/src%2Fci%2Fdocker%2Fdist-android%2Finstall-ndk.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fdist-android%2Finstall-ndk.sh?ref=7b5c3d2b208f47b0750ea6c39f6f3f97cb1ca1bb", "patch": "@@ -1,35 +0,0 @@\n-#!/bin/sh\n-# Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n-# file at the top-level directory of this distribution and at\n-# http://rust-lang.org/COPYRIGHT.\n-#\n-# Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-# http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-# <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-# option. This file may not be copied, modified, or distributed\n-# except according to those terms.\n-\n-set -ex\n-\n-URL=https://dl.google.com/android/repository\n-\n-download_ndk() {\n-    mkdir -p /android/ndk\n-    cd /android/ndk\n-    curl -O $URL/$1\n-    unzip -q $1\n-    rm $1\n-    mv android-ndk-* ndk\n-}\n-\n-make_standalone_toolchain() {\n-    # See https://developer.android.com/ndk/guides/standalone_toolchain.html\n-    python2.7 /android/ndk/ndk/build/tools/make_standalone_toolchain.py \\\n-        --install-dir /android/ndk/$1-$2 \\\n-        --arch $1 \\\n-        --api $2\n-}\n-\n-remove_ndk() {\n-    rm -rf /android/ndk/ndk\n-}"}, {"sha": "862818a7c918250b43f6d7ac20287cd829520a3e", "filename": "src/ci/docker/dist-arm-linux/Dockerfile", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/307d8e5aa5f0c66881b1028fe1dc7f17e5ea317a/src%2Fci%2Fdocker%2Fdist-arm-linux%2FDockerfile", "raw_url": "https://github.com/rust-lang/rust/raw/307d8e5aa5f0c66881b1028fe1dc7f17e5ea317a/src%2Fci%2Fdocker%2Fdist-arm-linux%2FDockerfile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fdist-arm-linux%2FDockerfile?ref=307d8e5aa5f0c66881b1028fe1dc7f17e5ea317a", "patch": "@@ -56,7 +56,7 @@ RUN mkdir /x-tools && chown rustbuild:rustbuild /x-tools\n USER rustbuild\n WORKDIR /tmp\n \n-COPY arm-linux-gnueabi.config build-toolchains.sh /tmp/\n+COPY dist-arm-linux/arm-linux-gnueabi.config dist-arm-linux/build-toolchains.sh /tmp/\n RUN ./build-toolchains.sh\n \n USER root"}, {"sha": "7f1f91f844c771ba31c15fa22029ab6a5ddfecdf", "filename": "src/ci/docker/dist-armhf-linux/Dockerfile", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/307d8e5aa5f0c66881b1028fe1dc7f17e5ea317a/src%2Fci%2Fdocker%2Fdist-armhf-linux%2FDockerfile", "raw_url": "https://github.com/rust-lang/rust/raw/307d8e5aa5f0c66881b1028fe1dc7f17e5ea317a/src%2Fci%2Fdocker%2Fdist-armhf-linux%2FDockerfile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fdist-armhf-linux%2FDockerfile?ref=307d8e5aa5f0c66881b1028fe1dc7f17e5ea317a", "patch": "@@ -56,7 +56,7 @@ RUN mkdir /x-tools && chown rustbuild:rustbuild /x-tools\n USER rustbuild\n WORKDIR /tmp\n \n-COPY arm-linux-gnueabihf.config build-toolchains.sh /tmp/\n+COPY dist-armhf-linux/arm-linux-gnueabihf.config dist-armhf-linux/build-toolchains.sh /tmp/\n RUN ./build-toolchains.sh\n \n USER root"}, {"sha": "030fd24ebcdd0c1daa5d69b724175d65c21c4933", "filename": "src/ci/docker/dist-armv7-linux/Dockerfile", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/307d8e5aa5f0c66881b1028fe1dc7f17e5ea317a/src%2Fci%2Fdocker%2Fdist-armv7-linux%2FDockerfile", "raw_url": "https://github.com/rust-lang/rust/raw/307d8e5aa5f0c66881b1028fe1dc7f17e5ea317a/src%2Fci%2Fdocker%2Fdist-armv7-linux%2FDockerfile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fdist-armv7-linux%2FDockerfile?ref=307d8e5aa5f0c66881b1028fe1dc7f17e5ea317a", "patch": "@@ -56,7 +56,7 @@ RUN mkdir /x-tools && chown rustbuild:rustbuild /x-tools\n USER rustbuild\n WORKDIR /tmp\n \n-COPY build-toolchains.sh armv7-linux-gnueabihf.config /tmp/\n+COPY dist-armv7-linux/build-toolchains.sh dist-armv7-linux/armv7-linux-gnueabihf.config /tmp/\n RUN ./build-toolchains.sh\n \n USER root"}, {"sha": "d1d9767d35e631c9c70f572b55a2ebc07f90a4ba", "filename": "src/ci/docker/dist-fuchsia/Dockerfile", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/307d8e5aa5f0c66881b1028fe1dc7f17e5ea317a/src%2Fci%2Fdocker%2Fdist-fuchsia%2FDockerfile", "raw_url": "https://github.com/rust-lang/rust/raw/307d8e5aa5f0c66881b1028fe1dc7f17e5ea317a/src%2Fci%2Fdocker%2Fdist-fuchsia%2FDockerfile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fdist-fuchsia%2FDockerfile?ref=307d8e5aa5f0c66881b1028fe1dc7f17e5ea317a", "patch": "@@ -21,7 +21,7 @@ RUN curl -L https://cmake.org/files/v3.8/cmake-3.8.0-rc1-Linux-x86_64.tar.gz | \\\n       tar xzf - -C /usr/local --strip-components=1\n \n WORKDIR /tmp\n-COPY shared.sh build-toolchain.sh compiler-rt-dso-handle.patch /tmp/\n+COPY dist-fuchsia/shared.sh dist-fuchsia/build-toolchain.sh dist-fuchsia/compiler-rt-dso-handle.patch /tmp/\n RUN /tmp/build-toolchain.sh\n \n RUN curl -OL https://github.com/Yelp/dumb-init/releases/download/v1.2.0/dumb-init_1.2.0_amd64.deb && \\"}, {"sha": "805d238de1f9b5c78dcc4a9d7d281e07c38ca717", "filename": "src/ci/docker/dist-i586-gnu-i686-musl/Dockerfile", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/307d8e5aa5f0c66881b1028fe1dc7f17e5ea317a/src%2Fci%2Fdocker%2Fdist-i586-gnu-i686-musl%2FDockerfile", "raw_url": "https://github.com/rust-lang/rust/raw/307d8e5aa5f0c66881b1028fe1dc7f17e5ea317a/src%2Fci%2Fdocker%2Fdist-i586-gnu-i686-musl%2FDockerfile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fdist-i586-gnu-i686-musl%2FDockerfile?ref=307d8e5aa5f0c66881b1028fe1dc7f17e5ea317a", "patch": "@@ -17,7 +17,7 @@ RUN apt-get update && apt-get install -y --no-install-recommends \\\n   pkg-config\n \n WORKDIR /build/\n-COPY musl-libunwind-patch.patch build-musl.sh /build/\n+COPY dist-i586-gnu-i686-musl/musl-libunwind-patch.patch dist-i586-gnu-i686-musl/build-musl.sh /build/\n RUN sh /build/build-musl.sh && rm -rf /build\n \n RUN curl -OL https://github.com/Yelp/dumb-init/releases/download/v1.2.0/dumb-init_1.2.0_amd64.deb && \\"}, {"sha": "9c4d43bfa92bc600899cc8acd0881bd343f4b2cb", "filename": "src/ci/docker/dist-i686-freebsd/Dockerfile", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/307d8e5aa5f0c66881b1028fe1dc7f17e5ea317a/src%2Fci%2Fdocker%2Fdist-i686-freebsd%2FDockerfile", "raw_url": "https://github.com/rust-lang/rust/raw/307d8e5aa5f0c66881b1028fe1dc7f17e5ea317a/src%2Fci%2Fdocker%2Fdist-i686-freebsd%2FDockerfile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fdist-i686-freebsd%2FDockerfile?ref=307d8e5aa5f0c66881b1028fe1dc7f17e5ea317a", "patch": "@@ -16,7 +16,7 @@ RUN apt-get update && apt-get install -y --no-install-recommends \\\n   libssl-dev \\\n   pkg-config\n \n-COPY build-toolchain.sh /tmp/\n+COPY dist-i686-freebsd/build-toolchain.sh /tmp/\n RUN /tmp/build-toolchain.sh i686\n \n RUN curl -OL https://github.com/Yelp/dumb-init/releases/download/v1.2.0/dumb-init_1.2.0_amd64.deb && \\"}, {"sha": "a3c08e93ed158ce47175d05deef91f95bd5feaf5", "filename": "src/ci/docker/dist-i686-linux/Dockerfile", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/307d8e5aa5f0c66881b1028fe1dc7f17e5ea317a/src%2Fci%2Fdocker%2Fdist-i686-linux%2FDockerfile", "raw_url": "https://github.com/rust-lang/rust/raw/307d8e5aa5f0c66881b1028fe1dc7f17e5ea317a/src%2Fci%2Fdocker%2Fdist-i686-linux%2FDockerfile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fdist-i686-linux%2FDockerfile?ref=307d8e5aa5f0c66881b1028fe1dc7f17e5ea317a", "patch": "@@ -29,13 +29,13 @@ ENV PATH=/rustroot/bin:$PATH\n ENV LD_LIBRARY_PATH=/rustroot/lib64:/rustroot/lib\n ENV PKG_CONFIG_PATH=/rustroot/lib/pkgconfig\n WORKDIR /tmp\n-COPY shared.sh build-binutils.sh /tmp/\n+COPY dist-i686-linux/shared.sh dist-i686-linux/build-binutils.sh /tmp/\n \n # We need a build of openssl which supports SNI to download artifacts from\n # static.rust-lang.org. This'll be used to link into libcurl below (and used\n # later as well), so build a copy of OpenSSL with dynamic libraries into our\n # generic root.\n-COPY build-openssl.sh /tmp/\n+COPY dist-i686-linux/build-openssl.sh /tmp/\n RUN ./build-openssl.sh\n \n # The `curl` binary on CentOS doesn't support SNI which is needed for fetching\n@@ -44,7 +44,7 @@ RUN ./build-openssl.sh\n #\n # Note that we also disable a bunch of optional features of curl that we don't\n # really need.\n-COPY build-curl.sh /tmp/\n+COPY dist-i686-linux/build-curl.sh /tmp/\n RUN ./build-curl.sh\n \n # binutils < 2.22 has a bug where the 32-bit executables it generates\n@@ -54,26 +54,26 @@ RUN ./build-curl.sh\n RUN ./build-binutils.sh\n \n # Need a newer version of gcc than centos has to compile LLVM nowadays\n-COPY build-gcc.sh /tmp/\n+COPY dist-i686-linux/build-gcc.sh /tmp/\n RUN ./build-gcc.sh\n \n # CentOS 5.5 has Python 2.4 by default, but LLVM needs 2.7+\n-COPY build-python.sh /tmp/\n+COPY dist-i686-linux/build-python.sh /tmp/\n RUN ./build-python.sh\n \n # Apparently CentOS 5.5 desn't have `git` in yum, but we're gonna need it for\n # cloning, so download and build it here.\n-COPY build-git.sh /tmp/\n+COPY dist-i686-linux/build-git.sh /tmp/\n RUN ./build-git.sh\n \n # libssh2 (a dependency of Cargo) requires cmake 2.8.11 or higher but CentOS\n # only has 2.6.4, so build our own\n-COPY build-cmake.sh /tmp/\n+COPY dist-i686-linux/build-cmake.sh /tmp/\n RUN ./build-cmake.sh\n \n # for sanitizers, we need kernel headers files newer than the ones CentOS ships\n # with so we install newer ones here\n-COPY build-headers.sh /tmp/\n+COPY dist-i686-linux/build-headers.sh /tmp/\n RUN ./build-headers.sh\n \n RUN curl -Lo /rustroot/dumb-init \\"}, {"sha": "bd38ee0c111582a2f88dbf4f53d2ddb87b7eac57", "filename": "src/ci/docker/dist-powerpc64-linux/Dockerfile", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/307d8e5aa5f0c66881b1028fe1dc7f17e5ea317a/src%2Fci%2Fdocker%2Fdist-powerpc64-linux%2FDockerfile", "raw_url": "https://github.com/rust-lang/rust/raw/307d8e5aa5f0c66881b1028fe1dc7f17e5ea317a/src%2Fci%2Fdocker%2Fdist-powerpc64-linux%2FDockerfile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fdist-powerpc64-linux%2FDockerfile?ref=307d8e5aa5f0c66881b1028fe1dc7f17e5ea317a", "patch": "@@ -56,8 +56,8 @@ RUN mkdir /x-tools && chown rustbuild:rustbuild /x-tools\n USER rustbuild\n WORKDIR /tmp\n \n-COPY patches/ /tmp/patches/\n-COPY shared.sh powerpc64-linux-gnu.config build-powerpc64-toolchain.sh /tmp/\n+COPY dist-powerpc64-linux/patches/ /tmp/patches/\n+COPY dist-powerpc64-linux/shared.sh dist-powerpc64-linux/powerpc64-linux-gnu.config dist-powerpc64-linux/build-powerpc64-toolchain.sh /tmp/\n RUN ./build-powerpc64-toolchain.sh\n \n USER root"}, {"sha": "cbded156b4cbde53f26d4ce6508eaeeb9e74395b", "filename": "src/ci/docker/dist-powerpc64le-linux/Dockerfile", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/307d8e5aa5f0c66881b1028fe1dc7f17e5ea317a/src%2Fci%2Fdocker%2Fdist-powerpc64le-linux%2FDockerfile", "raw_url": "https://github.com/rust-lang/rust/raw/307d8e5aa5f0c66881b1028fe1dc7f17e5ea317a/src%2Fci%2Fdocker%2Fdist-powerpc64le-linux%2FDockerfile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fdist-powerpc64le-linux%2FDockerfile?ref=307d8e5aa5f0c66881b1028fe1dc7f17e5ea317a", "patch": "@@ -59,7 +59,7 @@ WORKDIR /tmp\n USER root\n \n RUN apt-get install -y --no-install-recommends rpm2cpio cpio\n-COPY shared.sh build-powerpc64le-toolchain.sh /tmp/\n+COPY dist-powerpc64le-linux/shared.sh dist-powerpc64le-linux/build-powerpc64le-toolchain.sh /tmp/\n RUN ./build-powerpc64le-toolchain.sh\n \n RUN curl -o /usr/local/bin/sccache \\"}, {"sha": "5c00287107aa3be399eda238a718a0050ec65b82", "filename": "src/ci/docker/dist-s390x-linux/Dockerfile", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/307d8e5aa5f0c66881b1028fe1dc7f17e5ea317a/src%2Fci%2Fdocker%2Fdist-s390x-linux%2FDockerfile", "raw_url": "https://github.com/rust-lang/rust/raw/307d8e5aa5f0c66881b1028fe1dc7f17e5ea317a/src%2Fci%2Fdocker%2Fdist-s390x-linux%2FDockerfile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fdist-s390x-linux%2FDockerfile?ref=307d8e5aa5f0c66881b1028fe1dc7f17e5ea317a", "patch": "@@ -56,8 +56,8 @@ RUN mkdir /x-tools && chown rustbuild:rustbuild /x-tools\n USER rustbuild\n WORKDIR /tmp\n \n-COPY patches/ /tmp/patches/\n-COPY s390x-linux-gnu.config build-s390x-toolchain.sh /tmp/\n+COPY dist-s390x-linux/patches/ /tmp/patches/\n+COPY dist-s390x-linux/s390x-linux-gnu.config dist-s390x-linux/build-s390x-toolchain.sh /tmp/\n RUN ./build-s390x-toolchain.sh\n \n USER root"}, {"sha": "a6c4eee5e812c5407e07fdce89ee73c4864e60de", "filename": "src/ci/docker/dist-x86_64-freebsd/Dockerfile", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/307d8e5aa5f0c66881b1028fe1dc7f17e5ea317a/src%2Fci%2Fdocker%2Fdist-x86_64-freebsd%2FDockerfile", "raw_url": "https://github.com/rust-lang/rust/raw/307d8e5aa5f0c66881b1028fe1dc7f17e5ea317a/src%2Fci%2Fdocker%2Fdist-x86_64-freebsd%2FDockerfile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fdist-x86_64-freebsd%2FDockerfile?ref=307d8e5aa5f0c66881b1028fe1dc7f17e5ea317a", "patch": "@@ -16,7 +16,7 @@ RUN apt-get update && apt-get install -y --no-install-recommends \\\n   libssl-dev \\\n   pkg-config\n \n-COPY build-toolchain.sh /tmp/\n+COPY dist-x86_64-freebsd/build-toolchain.sh /tmp/\n RUN /tmp/build-toolchain.sh x86_64\n \n RUN curl -OL https://github.com/Yelp/dumb-init/releases/download/v1.2.0/dumb-init_1.2.0_amd64.deb && \\"}, {"sha": "e2e42836dcdaf136786b7ad9b0194493d817cc83", "filename": "src/ci/docker/dist-x86_64-linux/Dockerfile", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/307d8e5aa5f0c66881b1028fe1dc7f17e5ea317a/src%2Fci%2Fdocker%2Fdist-x86_64-linux%2FDockerfile", "raw_url": "https://github.com/rust-lang/rust/raw/307d8e5aa5f0c66881b1028fe1dc7f17e5ea317a/src%2Fci%2Fdocker%2Fdist-x86_64-linux%2FDockerfile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fdist-x86_64-linux%2FDockerfile?ref=307d8e5aa5f0c66881b1028fe1dc7f17e5ea317a", "patch": "@@ -29,13 +29,13 @@ ENV PATH=/rustroot/bin:$PATH\n ENV LD_LIBRARY_PATH=/rustroot/lib64:/rustroot/lib\n ENV PKG_CONFIG_PATH=/rustroot/lib/pkgconfig\n WORKDIR /tmp\n-COPY shared.sh build-binutils.sh /tmp/\n+COPY dist-x86_64-linux/shared.sh dist-x86_64-linux/build-binutils.sh /tmp/\n \n # We need a build of openssl which supports SNI to download artifacts from\n # static.rust-lang.org. This'll be used to link into libcurl below (and used\n # later as well), so build a copy of OpenSSL with dynamic libraries into our\n # generic root.\n-COPY build-openssl.sh /tmp/\n+COPY dist-x86_64-linux/build-openssl.sh /tmp/\n RUN ./build-openssl.sh\n \n # The `curl` binary on CentOS doesn't support SNI which is needed for fetching\n@@ -44,7 +44,7 @@ RUN ./build-openssl.sh\n #\n # Note that we also disable a bunch of optional features of curl that we don't\n # really need.\n-COPY build-curl.sh /tmp/\n+COPY dist-x86_64-linux/build-curl.sh /tmp/\n RUN ./build-curl.sh\n \n # binutils < 2.22 has a bug where the 32-bit executables it generates\n@@ -54,26 +54,26 @@ RUN ./build-curl.sh\n RUN ./build-binutils.sh\n \n # Need a newer version of gcc than centos has to compile LLVM nowadays\n-COPY build-gcc.sh /tmp/\n+COPY dist-x86_64-linux/build-gcc.sh /tmp/\n RUN ./build-gcc.sh\n \n # CentOS 5.5 has Python 2.4 by default, but LLVM needs 2.7+\n-COPY build-python.sh /tmp/\n+COPY dist-x86_64-linux/build-python.sh /tmp/\n RUN ./build-python.sh\n \n # Apparently CentOS 5.5 desn't have `git` in yum, but we're gonna need it for\n # cloning, so download and build it here.\n-COPY build-git.sh /tmp/\n+COPY dist-x86_64-linux/build-git.sh /tmp/\n RUN ./build-git.sh\n \n # libssh2 (a dependency of Cargo) requires cmake 2.8.11 or higher but CentOS\n # only has 2.6.4, so build our own\n-COPY build-cmake.sh /tmp/\n+COPY dist-x86_64-linux/build-cmake.sh /tmp/\n RUN ./build-cmake.sh\n \n # for sanitizers, we need kernel headers files newer than the ones CentOS ships\n # with so we install newer ones here\n-COPY build-headers.sh /tmp/\n+COPY dist-x86_64-linux/build-headers.sh /tmp/\n RUN ./build-headers.sh\n \n RUN curl -Lo /rustroot/dumb-init \\"}, {"sha": "2eea5ab1469728e210795b257e85ce33f2fb56db", "filename": "src/ci/docker/dist-x86_64-musl/Dockerfile", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/307d8e5aa5f0c66881b1028fe1dc7f17e5ea317a/src%2Fci%2Fdocker%2Fdist-x86_64-musl%2FDockerfile", "raw_url": "https://github.com/rust-lang/rust/raw/307d8e5aa5f0c66881b1028fe1dc7f17e5ea317a/src%2Fci%2Fdocker%2Fdist-x86_64-musl%2FDockerfile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fdist-x86_64-musl%2FDockerfile?ref=307d8e5aa5f0c66881b1028fe1dc7f17e5ea317a", "patch": "@@ -17,7 +17,7 @@ RUN apt-get update && apt-get install -y --no-install-recommends \\\n   pkg-config\n \n WORKDIR /build/\n-COPY build-musl.sh /build/\n+COPY dist-x86_64-musl/build-musl.sh /build/\n RUN sh /build/build-musl.sh && rm -rf /build\n \n RUN curl -OL https://github.com/Yelp/dumb-init/releases/download/v1.2.0/dumb-init_1.2.0_amd64.deb && \\"}, {"sha": "f76e6271f4c8c22eddfbb4eec38760f60570fac3", "filename": "src/ci/docker/dist-x86_64-netbsd/Dockerfile", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/307d8e5aa5f0c66881b1028fe1dc7f17e5ea317a/src%2Fci%2Fdocker%2Fdist-x86_64-netbsd%2FDockerfile", "raw_url": "https://github.com/rust-lang/rust/raw/307d8e5aa5f0c66881b1028fe1dc7f17e5ea317a/src%2Fci%2Fdocker%2Fdist-x86_64-netbsd%2FDockerfile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fdist-x86_64-netbsd%2FDockerfile?ref=307d8e5aa5f0c66881b1028fe1dc7f17e5ea317a", "patch": "@@ -56,7 +56,7 @@ RUN mkdir /x-tools && chown rustbuild:rustbuild /x-tools\n USER rustbuild\n WORKDIR /tmp\n \n-COPY build-netbsd-toolchain.sh /tmp/\n+COPY dist-x86_64-netbsd/build-netbsd-toolchain.sh /tmp/\n RUN ./build-netbsd-toolchain.sh\n \n USER root"}, {"sha": "839c390799278c98ef227d6c63b2f440e2cb421e", "filename": "src/ci/docker/dumb-init.sh", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/307d8e5aa5f0c66881b1028fe1dc7f17e5ea317a/src%2Fci%2Fdocker%2Fdumb-init.sh", "raw_url": "https://github.com/rust-lang/rust/raw/307d8e5aa5f0c66881b1028fe1dc7f17e5ea317a/src%2Fci%2Fdocker%2Fdumb-init.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fdumb-init.sh?ref=307d8e5aa5f0c66881b1028fe1dc7f17e5ea317a", "patch": "@@ -0,0 +1,15 @@\n+# Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n+# file at the top-level directory of this distribution and at\n+# http://rust-lang.org/COPYRIGHT.\n+#\n+# Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+# http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+# <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+# option. This file may not be copied, modified, or distributed\n+# except according to those terms.\n+\n+set -ex\n+\n+curl -OL https://github.com/Yelp/dumb-init/releases/download/v1.2.0/dumb-init_1.2.0_amd64.deb\n+dpkg -i dumb-init_*.deb\n+rm dumb-init_*.deb"}, {"sha": "0f0e5b69c32cf787d2a2fafb6dacbd370bce6c7a", "filename": "src/ci/docker/emscripten/Dockerfile", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/307d8e5aa5f0c66881b1028fe1dc7f17e5ea317a/src%2Fci%2Fdocker%2Femscripten%2FDockerfile", "raw_url": "https://github.com/rust-lang/rust/raw/307d8e5aa5f0c66881b1028fe1dc7f17e5ea317a/src%2Fci%2Fdocker%2Femscripten%2FDockerfile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Femscripten%2FDockerfile?ref=307d8e5aa5f0c66881b1028fe1dc7f17e5ea317a", "patch": "@@ -24,7 +24,7 @@ RUN curl -OL https://github.com/Yelp/dumb-init/releases/download/v1.2.0/dumb-ini\n ENTRYPOINT [\"/usr/bin/dumb-init\", \"--\"]\n \n WORKDIR /tmp\n-COPY build-emscripten.sh /tmp/\n+COPY emscripten/build-emscripten.sh /tmp/\n RUN ./build-emscripten.sh\n ENV PATH=$PATH:/tmp/emsdk_portable\n ENV PATH=$PATH:/tmp/emsdk_portable/clang/tag-e1.37.10/build_tag-e1.37.10_32/bin"}, {"sha": "bb9a860574dd2f175245cd6e8e97fc911d8787c7", "filename": "src/ci/docker/run.sh", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/307d8e5aa5f0c66881b1028fe1dc7f17e5ea317a/src%2Fci%2Fdocker%2Frun.sh", "raw_url": "https://github.com/rust-lang/rust/raw/307d8e5aa5f0c66881b1028fe1dc7f17e5ea317a/src%2Fci%2Fdocker%2Frun.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Frun.sh?ref=307d8e5aa5f0c66881b1028fe1dc7f17e5ea317a", "patch": "@@ -26,7 +26,8 @@ if [ -f \"$docker_dir/$image/Dockerfile\" ]; then\n       build \\\n       --rm \\\n       -t rust-ci \\\n-      \"$docker_dir/$image\"\n+      -f \"$docker_dir/$image/Dockerfile\" \\\n+      \"$docker_dir\"\n elif [ -f \"$docker_dir/disabled/$image/Dockerfile\" ]; then\n     if [ -n \"$TRAVIS_OS_NAME\" ]; then\n         echo Cannot run disabled images on travis!"}, {"sha": "7a2befaf6715ff692a9c7d49409a6294c030d49a", "filename": "src/ci/docker/sccache.sh", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/307d8e5aa5f0c66881b1028fe1dc7f17e5ea317a/src%2Fci%2Fdocker%2Fsccache.sh", "raw_url": "https://github.com/rust-lang/rust/raw/307d8e5aa5f0c66881b1028fe1dc7f17e5ea317a/src%2Fci%2Fdocker%2Fsccache.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fsccache.sh?ref=307d8e5aa5f0c66881b1028fe1dc7f17e5ea317a", "patch": "@@ -0,0 +1,16 @@\n+# Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n+# file at the top-level directory of this distribution and at\n+# http://rust-lang.org/COPYRIGHT.\n+#\n+# Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+# http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+# <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+# option. This file may not be copied, modified, or distributed\n+# except according to those terms.\n+\n+set -ex\n+\n+curl -o /usr/local/bin/sccache \\\n+  https://s3.amazonaws.com/rust-lang-ci/rust-ci-mirror/2017-05-12-sccache-x86_64-unknown-linux-musl\n+\n+chmod +x /usr/local/bin/sccache"}]}