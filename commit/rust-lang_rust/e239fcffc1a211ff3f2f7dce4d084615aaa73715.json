{"sha": "e239fcffc1a211ff3f2f7dce4d084615aaa73715", "node_id": "MDY6Q29tbWl0NzI0NzEyOmUyMzlmY2ZmYzFhMjExZmYzZjJmN2RjZTRkMDg0NjE1YWFhNzM3MTU=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2018-08-27T15:08:42Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2018-08-30T08:42:18Z"}, "message": "new tests for new fn arg passing code", "tree": {"sha": "b52fee7a8686219097d9e508ed3c463f0bdb679b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b52fee7a8686219097d9e508ed3c463f0bdb679b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e239fcffc1a211ff3f2f7dce4d084615aaa73715", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e239fcffc1a211ff3f2f7dce4d084615aaa73715", "html_url": "https://github.com/rust-lang/rust/commit/e239fcffc1a211ff3f2f7dce4d084615aaa73715", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e239fcffc1a211ff3f2f7dce4d084615aaa73715/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "904923fa7a4635636b0bc5c33e9901773e7f6747", "url": "https://api.github.com/repos/rust-lang/rust/commits/904923fa7a4635636b0bc5c33e9901773e7f6747", "html_url": "https://github.com/rust-lang/rust/commit/904923fa7a4635636b0bc5c33e9901773e7f6747"}], "stats": {"total": 31, "additions": 27, "deletions": 4}, "files": [{"sha": "0add977bf97b417af68ce2957ec7d893dd74d104", "filename": "tests/compile-fail/cast_fn_ptr.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/e239fcffc1a211ff3f2f7dce4d084615aaa73715/tests%2Fcompile-fail%2Fcast_fn_ptr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e239fcffc1a211ff3f2f7dce4d084615aaa73715/tests%2Fcompile-fail%2Fcast_fn_ptr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail%2Fcast_fn_ptr.rs?ref=e239fcffc1a211ff3f2f7dce4d084615aaa73715", "patch": "@@ -5,6 +5,5 @@ fn main() {\n         std::mem::transmute::<fn(), fn(i32)>(f)\n     };\n \n-    g(42) //~ ERROR constant evaluation error\n-    //~^ NOTE tried to call a function with sig fn() through a function pointer of type fn(i32)\n+    g(42) //~ ERROR tried to call a function with incorrect number of arguments\n }"}, {"sha": "5af527016fb6fecd3bf4253fa6cfd453f744ccb1", "filename": "tests/compile-fail/cast_fn_ptr2.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/e239fcffc1a211ff3f2f7dce4d084615aaa73715/tests%2Fcompile-fail%2Fcast_fn_ptr2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e239fcffc1a211ff3f2f7dce4d084615aaa73715/tests%2Fcompile-fail%2Fcast_fn_ptr2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail%2Fcast_fn_ptr2.rs?ref=e239fcffc1a211ff3f2f7dce4d084615aaa73715", "patch": "@@ -5,6 +5,5 @@ fn main() {\n         std::mem::transmute::<fn((i32,i32)), fn(i32)>(f)\n     };\n \n-    g(42) //~ ERROR constant evaluation error\n-    //~^ NOTE tried to call a function with sig fn((i32, i32)) through a function pointer of type fn(i32)\n+    g(42) //~ ERROR tried to call a function with argument of type (i32, i32) passing data of type i32\n }"}, {"sha": "29507e7c7cf54c6e7b92065c02df68cc6c0e4838", "filename": "tests/compile-fail/cast_fn_ptr3.rs", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/e239fcffc1a211ff3f2f7dce4d084615aaa73715/tests%2Fcompile-fail%2Fcast_fn_ptr3.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e239fcffc1a211ff3f2f7dce4d084615aaa73715/tests%2Fcompile-fail%2Fcast_fn_ptr3.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail%2Fcast_fn_ptr3.rs?ref=e239fcffc1a211ff3f2f7dce4d084615aaa73715", "patch": "@@ -0,0 +1,10 @@\n+fn main() {\n+    fn f(_ : (i32,i32)) {}\n+\n+    let g = unsafe {\n+        std::mem::transmute::<fn((i32,i32)), fn()>(f)\n+    };\n+\n+    g() //~ ERROR tried to call a function with incorrect number of arguments\n+}\n+"}, {"sha": "f9a2cf9f6965e5bed02e30eccc7204f8472fe6d8", "filename": "tests/compile-fail/cast_fn_ptr4.rs", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/e239fcffc1a211ff3f2f7dce4d084615aaa73715/tests%2Fcompile-fail%2Fcast_fn_ptr4.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e239fcffc1a211ff3f2f7dce4d084615aaa73715/tests%2Fcompile-fail%2Fcast_fn_ptr4.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail%2Fcast_fn_ptr4.rs?ref=e239fcffc1a211ff3f2f7dce4d084615aaa73715", "patch": "@@ -0,0 +1,9 @@\n+fn main() {\n+    fn f(_ : *const [i32]) {}\n+\n+    let g = unsafe {\n+        std::mem::transmute::<fn(*const [i32]), fn(*const i32)>(f)\n+    };\n+\n+    g(&42 as *const i32) //~ ERROR tried to call a function with argument of type *const [i32] passing data of type *const i32\n+}"}, {"sha": "d48c4df45944a12a6ddae736d1ccce87b4f4f9e8", "filename": "tests/run-pass/non_capture_closure_to_fn_ptr.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/e239fcffc1a211ff3f2f7dce4d084615aaa73715/tests%2Frun-pass%2Fnon_capture_closure_to_fn_ptr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e239fcffc1a211ff3f2f7dce4d084615aaa73715/tests%2Frun-pass%2Fnon_capture_closure_to_fn_ptr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Fnon_capture_closure_to_fn_ptr.rs?ref=e239fcffc1a211ff3f2f7dce4d084615aaa73715", "patch": "@@ -4,11 +4,17 @@ static FOO: fn() = || { assert_ne!(42, 43) };\n #[allow(const_err)]\n static BAR: fn(i32, i32) = |a, b| { assert_ne!(a, b) };\n \n+// use to first make the closure FnOnce() before making it fn()\n+fn magic<F: FnOnce()>(f: F) -> F { f }\n+\n fn main() {\n     FOO();\n     BAR(44, 45);\n     let bar: unsafe fn(i32, i32) = BAR;\n     unsafe { bar(46, 47) };\n     let boo: &Fn(i32, i32) = &BAR;\n     boo(48, 49);\n+\n+    let f = magic(||{}) as fn();\n+    f();\n }"}]}