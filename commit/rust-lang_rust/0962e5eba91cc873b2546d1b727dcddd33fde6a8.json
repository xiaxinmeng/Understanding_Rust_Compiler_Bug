{"sha": "0962e5eba91cc873b2546d1b727dcddd33fde6a8", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA5NjJlNWViYTkxY2M4NzNiMjU0NmQxYjcyN2RjZGRkMzNmZGU2YTg=", "commit": {"author": {"name": "Tyson Nottingham", "email": "tgnottingham@gmail.com", "date": "2021-01-06T20:41:36Z"}, "committer": {"name": "Tyson Nottingham", "email": "tgnottingham@gmail.com", "date": "2021-01-12T19:22:58Z"}, "message": "Return to defining crate_hash similarly to other query providers", "tree": {"sha": "cddd5ed12914e9bcdecebb0be60d77032fe59197", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/cddd5ed12914e9bcdecebb0be60d77032fe59197"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0962e5eba91cc873b2546d1b727dcddd33fde6a8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0962e5eba91cc873b2546d1b727dcddd33fde6a8", "html_url": "https://github.com/rust-lang/rust/commit/0962e5eba91cc873b2546d1b727dcddd33fde6a8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0962e5eba91cc873b2546d1b727dcddd33fde6a8/comments", "author": {"login": "tgnottingham", "id": 3668166, "node_id": "MDQ6VXNlcjM2NjgxNjY=", "avatar_url": "https://avatars.githubusercontent.com/u/3668166?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tgnottingham", "html_url": "https://github.com/tgnottingham", "followers_url": "https://api.github.com/users/tgnottingham/followers", "following_url": "https://api.github.com/users/tgnottingham/following{/other_user}", "gists_url": "https://api.github.com/users/tgnottingham/gists{/gist_id}", "starred_url": "https://api.github.com/users/tgnottingham/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tgnottingham/subscriptions", "organizations_url": "https://api.github.com/users/tgnottingham/orgs", "repos_url": "https://api.github.com/users/tgnottingham/repos", "events_url": "https://api.github.com/users/tgnottingham/events{/privacy}", "received_events_url": "https://api.github.com/users/tgnottingham/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tgnottingham", "id": 3668166, "node_id": "MDQ6VXNlcjM2NjgxNjY=", "avatar_url": "https://avatars.githubusercontent.com/u/3668166?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tgnottingham", "html_url": "https://github.com/tgnottingham", "followers_url": "https://api.github.com/users/tgnottingham/followers", "following_url": "https://api.github.com/users/tgnottingham/following{/other_user}", "gists_url": "https://api.github.com/users/tgnottingham/gists{/gist_id}", "starred_url": "https://api.github.com/users/tgnottingham/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tgnottingham/subscriptions", "organizations_url": "https://api.github.com/users/tgnottingham/orgs", "repos_url": "https://api.github.com/users/tgnottingham/repos", "events_url": "https://api.github.com/users/tgnottingham/events{/privacy}", "received_events_url": "https://api.github.com/users/tgnottingham/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "62139ffad4a77d45b9651b04b440c89c5b9c1b5c", "url": "https://api.github.com/repos/rust-lang/rust/commits/62139ffad4a77d45b9651b04b440c89c5b9c1b5c", "html_url": "https://github.com/rust-lang/rust/commit/62139ffad4a77d45b9651b04b440c89c5b9c1b5c"}], "stats": {"total": 22, "additions": 5, "deletions": 17}, "files": [{"sha": "85507b8f843596c7cb6ed9a45cfaa69b93beb63b", "filename": "compiler/rustc_metadata/src/rmeta/decoder/cstore_impl.rs", "status": "modified", "additions": 5, "deletions": 17, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/0962e5eba91cc873b2546d1b727dcddd33fde6a8/compiler%2Frustc_metadata%2Fsrc%2Frmeta%2Fdecoder%2Fcstore_impl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0962e5eba91cc873b2546d1b727dcddd33fde6a8/compiler%2Frustc_metadata%2Fsrc%2Frmeta%2Fdecoder%2Fcstore_impl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_metadata%2Fsrc%2Frmeta%2Fdecoder%2Fcstore_impl.rs?ref=0962e5eba91cc873b2546d1b727dcddd33fde6a8", "patch": "@@ -44,7 +44,10 @@ macro_rules! provide {\n                 let ($def_id, $other) = def_id_arg.into_args();\n                 assert!(!$def_id.is_local());\n \n-                if $tcx.dep_graph.is_fully_enabled() {\n+                // External query providers call `crate_hash` in order to register a dependency\n+                // on the crate metadata. The exception is `crate_hash` itself, which obviously\n+                // doesn't need to do this (and can't, as it would cause a query cycle).\n+                if stringify!($name) != \"crate_hash\" && $tcx.dep_graph.is_fully_enabled() {\n                     $tcx.ensure().crate_hash($def_id.krate);\n                 }\n \n@@ -53,24 +56,8 @@ macro_rules! provide {\n                 $compute\n             })*\n \n-            // The other external query providers call `crate_hash` in order to register a\n-            // dependency on the crate metadata. The `crate_hash` implementation differs in\n-            // that it doesn't need to do this (and can't, as it would cause a query cycle).\n-            fn crate_hash<'tcx>(\n-                tcx: TyCtxt<'tcx>,\n-                def_id_arg: ty::query::query_keys::crate_hash<'tcx>,\n-            ) -> ty::query::query_values::crate_hash<'tcx> {\n-                let _prof_timer = tcx.prof.generic_activity(\"metadata_decode_entry_crate_hash\");\n-\n-                let (def_id, _) = def_id_arg.into_args();\n-                assert!(!def_id.is_local());\n-\n-                CStore::from_tcx(tcx).get_crate_data(def_id.krate).root.hash\n-            }\n-\n             *providers = Providers {\n                 $($name,)*\n-                crate_hash,\n                 ..*providers\n             };\n         }\n@@ -206,6 +193,7 @@ provide! { <'tcx> tcx, def_id, other, cdata,\n         })\n     }\n     crate_disambiguator => { cdata.root.disambiguator }\n+    crate_hash => { cdata.root.hash }\n     crate_host_hash => { cdata.host_hash }\n     original_crate_name => { cdata.root.name }\n "}]}