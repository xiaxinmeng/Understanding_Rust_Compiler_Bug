{"sha": "420c970cb1edccbf60ff2aeb51ca01e2300b09ef", "node_id": "C_kwDOAAsO6NoAKDQyMGM5NzBjYjFlZGNjYmY2MGZmMmFlYjUxY2EwMWUyMzAwYjA5ZWY", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-06-09T18:20:08Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-06-09T18:20:08Z"}, "message": "Auto merge of #97911 - dtolnay:numcpu, r=Mark-Simulacrum\n\nRevert \"remove num_cpus dependency\" in rustc and update cargo\n\nFixes #97549. This PR reverts #94524 and does a Cargo update to pull in rust-lang/cargo#10737.\n\nRust 1.61.0 has a regression in which it misidentifies the number of available CPUs in some environments, leading to enormously increased memory usage and failing builds. In between Rust 1.60 and 1.61 both rustc and cargo replaced some uses of `num_cpus` with `available_parallelism`, which eliminated support for cgroupv1, still apparently in common use. This PR switches both rustc and cargo back to using `num_cpus` in order to support environments where the available parallelism is controlled by cgroupv1. Both can use `available_parallism` again once it handles cgroupv1 (if ever).\n\nI have confirmed that the rustc part of this PR fixes the memory usage regression in my non-Cargo environment, and others have confirmed in #97549 that the Cargo regression was at fault for the memory usage regression in their environments.", "tree": {"sha": "5863ed47015b553bfecba9f524318a64b64c9f94", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5863ed47015b553bfecba9f524318a64b64c9f94"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/420c970cb1edccbf60ff2aeb51ca01e2300b09ef", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/420c970cb1edccbf60ff2aeb51ca01e2300b09ef", "html_url": "https://github.com/rust-lang/rust/commit/420c970cb1edccbf60ff2aeb51ca01e2300b09ef", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/420c970cb1edccbf60ff2aeb51ca01e2300b09ef/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d7b8d77be5b4a091fe99c2f32b1334b931a2f4aa", "url": "https://api.github.com/repos/rust-lang/rust/commits/d7b8d77be5b4a091fe99c2f32b1334b931a2f4aa", "html_url": "https://github.com/rust-lang/rust/commit/d7b8d77be5b4a091fe99c2f32b1334b931a2f4aa"}, {"sha": "fbc86e07a94490fd23b9ef0fdd0f9118c50e5780", "url": "https://api.github.com/repos/rust-lang/rust/commits/fbc86e07a94490fd23b9ef0fdd0f9118c50e5780", "html_url": "https://github.com/rust-lang/rust/commit/fbc86e07a94490fd23b9ef0fdd0f9118c50e5780"}], "stats": {"total": 21, "additions": 13, "deletions": 8}, "files": [{"sha": "51b0da65b3145bfd66a5f7217f21852a25d5e058", "filename": "Cargo.lock", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/420c970cb1edccbf60ff2aeb51ca01e2300b09ef/Cargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/420c970cb1edccbf60ff2aeb51ca01e2300b09ef/Cargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.lock?ref=420c970cb1edccbf60ff2aeb51ca01e2300b09ef", "patch": "@@ -219,6 +219,7 @@ dependencies = [\n  \"hex 0.4.2\",\n  \"ignore\",\n  \"libc\",\n+ \"num_cpus\",\n  \"once_cell\",\n  \"opener\",\n  \"pretty_assertions 0.7.2\",\n@@ -250,6 +251,7 @@ dependencies = [\n  \"anyhow\",\n  \"flate2\",\n  \"hex 0.4.2\",\n+ \"num_cpus\",\n  \"rayon\",\n  \"serde\",\n  \"serde_json\",\n@@ -349,6 +351,7 @@ dependencies = [\n  \"libgit2-sys\",\n  \"log\",\n  \"memchr\",\n+ \"num_cpus\",\n  \"opener\",\n  \"openssl\",\n  \"os_info\",\n@@ -4419,6 +4422,7 @@ name = \"rustc_session\"\n version = \"0.0.0\"\n dependencies = [\n  \"getopts\",\n+ \"num_cpus\",\n  \"rustc_ast\",\n  \"rustc_data_structures\",\n  \"rustc_errors\","}, {"sha": "37cfc4a0dc3c2b91d586228a5d61df1dda0e7912", "filename": "compiler/rustc_session/Cargo.toml", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/420c970cb1edccbf60ff2aeb51ca01e2300b09ef/compiler%2Frustc_session%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/420c970cb1edccbf60ff2aeb51ca01e2300b09ef/compiler%2Frustc_session%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_session%2FCargo.toml?ref=420c970cb1edccbf60ff2aeb51ca01e2300b09ef", "patch": "@@ -15,5 +15,6 @@ rustc_serialize = { path = \"../rustc_serialize\" }\n rustc_data_structures = { path = \"../rustc_data_structures\" }\n rustc_span = { path = \"../rustc_span\" }\n rustc_fs_util = { path = \"../rustc_fs_util\" }\n+num_cpus = \"1.0\"\n rustc_ast = { path = \"../rustc_ast\" }\n rustc_lint_defs = { path = \"../rustc_lint_defs\" }"}, {"sha": "d89c61c2e44c65a951b65a02f9c46bfcac8d86c8", "filename": "compiler/rustc_session/src/options.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/420c970cb1edccbf60ff2aeb51ca01e2300b09ef/compiler%2Frustc_session%2Fsrc%2Foptions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/420c970cb1edccbf60ff2aeb51ca01e2300b09ef/compiler%2Frustc_session%2Fsrc%2Foptions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_session%2Fsrc%2Foptions.rs?ref=420c970cb1edccbf60ff2aeb51ca01e2300b09ef", "patch": "@@ -578,7 +578,7 @@ mod parse {\n     pub(crate) fn parse_threads(slot: &mut usize, v: Option<&str>) -> bool {\n         match v.and_then(|s| s.parse().ok()) {\n             Some(0) => {\n-                *slot = std::thread::available_parallelism().map_or(1, std::num::NonZeroUsize::get);\n+                *slot = ::num_cpus::get();\n                 true\n             }\n             Some(i) => {"}, {"sha": "f5d9e46f9e21b24fc09f24eb95c325aa74ee7186", "filename": "src/bootstrap/Cargo.toml", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/420c970cb1edccbf60ff2aeb51ca01e2300b09ef/src%2Fbootstrap%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/420c970cb1edccbf60ff2aeb51ca01e2300b09ef/src%2Fbootstrap%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2FCargo.toml?ref=420c970cb1edccbf60ff2aeb51ca01e2300b09ef", "patch": "@@ -37,6 +37,7 @@ test = false\n [dependencies]\n cmake = \"0.1.38\"\n filetime = \"0.2\"\n+num_cpus = \"1.0\"\n getopts = \"0.2.19\"\n cc = \"1.0.69\"\n libc = \"0.2\""}, {"sha": "28663af135cd8389299d6cddea4ce6f8f6ec5019", "filename": "src/bootstrap/config.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/420c970cb1edccbf60ff2aeb51ca01e2300b09ef/src%2Fbootstrap%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/420c970cb1edccbf60ff2aeb51ca01e2300b09ef/src%2Fbootstrap%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fconfig.rs?ref=420c970cb1edccbf60ff2aeb51ca01e2300b09ef", "patch": "@@ -1418,7 +1418,7 @@ fn set<T>(field: &mut T, val: Option<T>) {\n \n fn threads_from_config(v: u32) -> u32 {\n     match v {\n-        0 => std::thread::available_parallelism().map_or(1, std::num::NonZeroUsize::get) as u32,\n+        0 => num_cpus::get() as u32,\n         n => n,\n     }\n }"}, {"sha": "9d4bb978bdc4ded69c524013411e886a9d7811a3", "filename": "src/bootstrap/flags.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/420c970cb1edccbf60ff2aeb51ca01e2300b09ef/src%2Fbootstrap%2Fflags.rs", "raw_url": "https://github.com/rust-lang/rust/raw/420c970cb1edccbf60ff2aeb51ca01e2300b09ef/src%2Fbootstrap%2Fflags.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fflags.rs?ref=420c970cb1edccbf60ff2aeb51ca01e2300b09ef", "patch": "@@ -210,7 +210,7 @@ To learn more about a subcommand, run `./x.py <subcommand> -h`\",\n         let j_msg = format!(\n             \"number of jobs to run in parallel; \\\n              defaults to {} (this host's logical CPU count)\",\n-            std::thread::available_parallelism().map_or(1, std::num::NonZeroUsize::get)\n+            num_cpus::get()\n         );\n         opts.optopt(\"j\", \"jobs\", &j_msg, \"JOBS\");\n         opts.optflag(\"h\", \"help\", \"print this help message\");"}, {"sha": "b4333566f07d909bffca24fec628866ae906501d", "filename": "src/bootstrap/lib.rs", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/420c970cb1edccbf60ff2aeb51ca01e2300b09ef/src%2Fbootstrap%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/420c970cb1edccbf60ff2aeb51ca01e2300b09ef/src%2Fbootstrap%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Flib.rs?ref=420c970cb1edccbf60ff2aeb51ca01e2300b09ef", "patch": "@@ -1032,9 +1032,7 @@ impl Build {\n     /// Returns the number of parallel jobs that have been configured for this\n     /// build.\n     fn jobs(&self) -> u32 {\n-        self.config.jobs.unwrap_or_else(|| {\n-            std::thread::available_parallelism().map_or(1, std::num::NonZeroUsize::get) as u32\n-        })\n+        self.config.jobs.unwrap_or_else(|| num_cpus::get() as u32)\n     }\n \n     fn debuginfo_map_to(&self, which: GitRepo) -> Option<String> {"}, {"sha": "c022d3aa0acd7ca18c18add8b97507f9a7678f6e", "filename": "src/tools/build-manifest/Cargo.toml", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/420c970cb1edccbf60ff2aeb51ca01e2300b09ef/src%2Ftools%2Fbuild-manifest%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/420c970cb1edccbf60ff2aeb51ca01e2300b09ef/src%2Ftools%2Fbuild-manifest%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fbuild-manifest%2FCargo.toml?ref=420c970cb1edccbf60ff2aeb51ca01e2300b09ef", "patch": "@@ -13,3 +13,4 @@ tar = \"0.4.29\"\n sha2 = \"0.10.1\"\n rayon = \"1.5.1\"\n hex = \"0.4.2\"\n+num_cpus = \"1.13.0\""}, {"sha": "6338e467055cd9a3ed909c02ac8081230eb82b6b", "filename": "src/tools/build-manifest/src/main.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/420c970cb1edccbf60ff2aeb51ca01e2300b09ef/src%2Ftools%2Fbuild-manifest%2Fsrc%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/420c970cb1edccbf60ff2aeb51ca01e2300b09ef/src%2Ftools%2Fbuild-manifest%2Fsrc%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fbuild-manifest%2Fsrc%2Fmain.rs?ref=420c970cb1edccbf60ff2aeb51ca01e2300b09ef", "patch": "@@ -210,7 +210,7 @@ fn main() {\n     let num_threads = if let Some(num) = env::var_os(\"BUILD_MANIFEST_NUM_THREADS\") {\n         num.to_str().unwrap().parse().expect(\"invalid number for BUILD_MANIFEST_NUM_THREADS\")\n     } else {\n-        std::thread::available_parallelism().map_or(1, std::num::NonZeroUsize::get)\n+        num_cpus::get()\n     };\n     rayon::ThreadPoolBuilder::new()\n         .num_threads(num_threads)"}, {"sha": "4d92f07f34ba7fb7d7f207564942508f46c225d3", "filename": "src/tools/cargo", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": null, "raw_url": null, "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fcargo?ref=420c970cb1edccbf60ff2aeb51ca01e2300b09ef", "patch": "@@ -1 +1 @@\n-Subproject commit 85e457e158db216a2938d51bc3b617a5a7fe6015\n+Subproject commit 4d92f07f34ba7fb7d7f207564942508f46c225d3"}]}