{"sha": "81e03236105263c048e113b856399b899e215303", "node_id": "MDY6Q29tbWl0NzI0NzEyOjgxZTAzMjM2MTA1MjYzYzA0OGUxMTNiODU2Mzk5Yjg5OWUyMTUzMDM=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2016-03-08T11:31:30Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2016-03-08T11:31:30Z"}, "message": "Auto merge of #31957 - GuillaumeGomez:error_display, r=brson\n\nAdd error file for E0152\n\nIt completes #31818.\n\nHowever it is not complete yet:\n * test will need to be updated\n * the file name displayed is a bit too unclear.\n\nI'm not sure yet what's the \"correct\" file name to display. If anyone has an idea on this, it'd be very appreciated.\n\nr? @brson", "tree": {"sha": "aa057533a6c079a5d42f864964d4874fd061a0e0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/aa057533a6c079a5d42f864964d4874fd061a0e0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/81e03236105263c048e113b856399b899e215303", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/81e03236105263c048e113b856399b899e215303", "html_url": "https://github.com/rust-lang/rust/commit/81e03236105263c048e113b856399b899e215303", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/81e03236105263c048e113b856399b899e215303/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3af60f831f75ae2632bbfd4c1aa66049ec2d486a", "url": "https://api.github.com/repos/rust-lang/rust/commits/3af60f831f75ae2632bbfd4c1aa66049ec2d486a", "html_url": "https://github.com/rust-lang/rust/commit/3af60f831f75ae2632bbfd4c1aa66049ec2d486a"}, {"sha": "7ab9345fe63f56091c11fc4eda4891d6771003ff", "url": "https://api.github.com/repos/rust-lang/rust/commits/7ab9345fe63f56091c11fc4eda4891d6771003ff", "html_url": "https://github.com/rust-lang/rust/commit/7ab9345fe63f56091c11fc4eda4891d6771003ff"}], "stats": {"total": 34, "additions": 23, "deletions": 11}, "files": [{"sha": "c432095ff0697a43c07a970d4c4989b4b734439c", "filename": "src/librustc/middle/lang_items.rs", "status": "modified", "additions": 20, "deletions": 9, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/81e03236105263c048e113b856399b899e215303/src%2Flibrustc%2Fmiddle%2Flang_items.rs", "raw_url": "https://github.com/rust-lang/rust/raw/81e03236105263c048e113b856399b899e215303/src%2Flibrustc%2Fmiddle%2Flang_items.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Flang_items.rs?ref=81e03236105263c048e113b856399b899e215303", "patch": "@@ -32,7 +32,6 @@ use util::nodemap::FnvHashMap;\n \n use syntax::ast;\n use syntax::attr::AttrMetaMethods;\n-use syntax::codemap::{DUMMY_SP, Span};\n use syntax::parse::token::InternedString;\n use rustc_front::intravisit::Visitor;\n use rustc_front::hir;\n@@ -158,7 +157,7 @@ impl<'a, 'v, 'tcx> Visitor<'v> for LanguageItemCollector<'a, 'tcx> {\n             let item_index = self.item_refs.get(&value[..]).cloned();\n \n             if let Some(item_index) = item_index {\n-                self.collect_item(item_index, self.ast_map.local_def_id(item.id), item.span)\n+                self.collect_item(item_index, self.ast_map.local_def_id(item.id))\n             }\n         }\n     }\n@@ -180,15 +179,26 @@ impl<'a, 'tcx> LanguageItemCollector<'a, 'tcx> {\n     }\n \n     pub fn collect_item(&mut self, item_index: usize,\n-                        item_def_id: DefId, span: Span) {\n+                        item_def_id: DefId) {\n         // Check for duplicates.\n         match self.items.items[item_index] {\n             Some(original_def_id) if original_def_id != item_def_id => {\n                 let cstore = &self.session.cstore;\n-                span_err!(self.session, span, E0152,\n-                          \"duplicate entry for `{}`, first definition found in `{}`\",\n-                          LanguageItems::item_name(item_index),\n-                          cstore.crate_name(item_def_id.krate));\n+                let span = self.ast_map.span_if_local(item_def_id)\n+                                       .expect(\"we should have found local duplicate earlier\");\n+                let mut err = struct_span_err!(self.session,\n+                                               span,\n+                                               E0152,\n+                                               \"duplicate lang item found: `{}`.\",\n+                                               LanguageItems::item_name(item_index));\n+                if let Some(span) = self.ast_map.span_if_local(original_def_id) {\n+                    span_note!(&mut err, span,\n+                               \"first defined here.\");\n+                } else {\n+                    err.note(&format!(\"first defined in crate `{}`.\",\n+                                      cstore.crate_name(original_def_id.krate)));\n+                }\n+                err.emit();\n             }\n             _ => {\n                 // OK.\n@@ -205,17 +215,18 @@ impl<'a, 'tcx> LanguageItemCollector<'a, 'tcx> {\n \n     pub fn collect_external_language_items(&mut self) {\n         let cstore = &self.session.cstore;\n+\n         for cnum in cstore.crates() {\n             for (index, item_index) in cstore.lang_items(cnum) {\n                 let def_id = DefId { krate: cnum, index: index };\n-                self.collect_item(item_index, def_id, DUMMY_SP);\n+                self.collect_item(item_index, def_id);\n             }\n         }\n     }\n \n     pub fn collect(&mut self, krate: &hir::Crate) {\n-        self.collect_local_language_items(krate);\n         self.collect_external_language_items();\n+        self.collect_local_language_items(krate);\n     }\n }\n "}, {"sha": "ad5ea29159968fc44d7035eea88ecdd073d42b56", "filename": "src/test/compile-fail/duplicate_entry_error.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/81e03236105263c048e113b856399b899e215303/src%2Ftest%2Fcompile-fail%2Fduplicate_entry_error.rs", "raw_url": "https://github.com/rust-lang/rust/raw/81e03236105263c048e113b856399b899e215303/src%2Ftest%2Fcompile-fail%2Fduplicate_entry_error.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fduplicate_entry_error.rs?ref=81e03236105263c048e113b856399b899e215303", "patch": "@@ -8,14 +8,15 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// Test for issue #31788\n+// note-pattern: first defined in crate `std`.\n \n-// error-pattern: duplicate entry for `panic_fmt`, first definition found in `std`\n+// Test for issue #31788 and E0152\n \n #![feature(lang_items)]\n \n #[lang = \"panic_fmt\"]\n fn panic_fmt() -> ! {\n+//~^ ERROR: duplicate lang item found: `panic_fmt`.\n     loop {}\n }\n "}]}