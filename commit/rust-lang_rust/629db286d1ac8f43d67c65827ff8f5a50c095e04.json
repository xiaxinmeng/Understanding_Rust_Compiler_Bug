{"sha": "629db286d1ac8f43d67c65827ff8f5a50c095e04", "node_id": "C_kwDOAAsO6NoAKDYyOWRiMjg2ZDFhYzhmNDNkNjdjNjU4MjdmZjhmNWE1MGMwOTVlMDQ", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2021-09-28T19:38:59Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-09-28T19:38:59Z"}, "message": "Merge #10373\n\n10373: fix: `into_iterator` not completed on `Vec<{unknown}>` r=iDawer a=iDawer\n\nFixes  #10297 \n\nCo-authored-by: Dawer <7803845+iDawer@users.noreply.github.com>", "tree": {"sha": "0b7c9d80738329b6a2afd0dcf502c9da3c8e2223", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0b7c9d80738329b6a2afd0dcf502c9da3c8e2223"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/629db286d1ac8f43d67c65827ff8f5a50c095e04", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJhU29TCRBK7hj4Ov3rIwAAuBoIAD8pfPyn9XjDkUuGIZ4BZxQJ\n/LtRsyRV85HP/tJkFLwA94/1wm26EvmITuMUqlJxLerFEd0HbLf5Bide9QA8ggCo\nJePASYyEL0wd2xVjS/19TOK9MDfmQrnMEOuuFjVSfk4xNwtBCBXy5YPUawRdt+Iu\nuPvqrXj0zbPLrlcKNItcpIwBgvapjdMG0p8ZksF6OVtqAV7W5w+ICnqVY85Jk+lZ\ndhNz+H7CRD/NI48N8Ay9E2X1zq4mTuEktll0PmUq4mkU5g8uQLJnSlBDpXhQP7Fb\n0R33BxZheLx9si39UBH8skSroQXflyuCWGAA24zB1NegYiUjQGUPLysOcL5mXpY=\n=JwSj\n-----END PGP SIGNATURE-----\n", "payload": "tree 0b7c9d80738329b6a2afd0dcf502c9da3c8e2223\nparent cd9f27d42445bcc4bb6b857bd441170c833b0475\nparent f222665ebe81cfcd8699c1bb5da3c936b6b2d2f9\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1632857939 +0000\ncommitter GitHub <noreply@github.com> 1632857939 +0000\n\nMerge #10373\n\n10373: fix: `into_iterator` not completed on `Vec<{unknown}>` r=iDawer a=iDawer\n\nFixes  #10297 \n\nCo-authored-by: Dawer <7803845+iDawer@users.noreply.github.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/629db286d1ac8f43d67c65827ff8f5a50c095e04", "html_url": "https://github.com/rust-lang/rust/commit/629db286d1ac8f43d67c65827ff8f5a50c095e04", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/629db286d1ac8f43d67c65827ff8f5a50c095e04/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cd9f27d42445bcc4bb6b857bd441170c833b0475", "url": "https://api.github.com/repos/rust-lang/rust/commits/cd9f27d42445bcc4bb6b857bd441170c833b0475", "html_url": "https://github.com/rust-lang/rust/commit/cd9f27d42445bcc4bb6b857bd441170c833b0475"}, {"sha": "f222665ebe81cfcd8699c1bb5da3c936b6b2d2f9", "url": "https://api.github.com/repos/rust-lang/rust/commits/f222665ebe81cfcd8699c1bb5da3c936b6b2d2f9", "html_url": "https://github.com/rust-lang/rust/commit/f222665ebe81cfcd8699c1bb5da3c936b6b2d2f9"}], "stats": {"total": 32, "additions": 25, "deletions": 7}, "files": [{"sha": "ed1776640cf22d0ab884e57fcd81e7d62860f226", "filename": "crates/hir/src/lib.rs", "status": "modified", "additions": 3, "deletions": 7, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/629db286d1ac8f43d67c65827ff8f5a50c095e04/crates%2Fhir%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/629db286d1ac8f43d67c65827ff8f5a50c095e04/crates%2Fhir%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir%2Fsrc%2Flib.rs?ref=629db286d1ac8f43d67c65827ff8f5a50c095e04", "patch": "@@ -2504,9 +2504,8 @@ impl Type {\n \n     pub fn autoderef<'a>(&'a self, db: &'a dyn HirDatabase) -> impl Iterator<Item = Type> + 'a {\n         // There should be no inference vars in types passed here\n-        // FIXME check that?\n-        let canonical =\n-            Canonical { value: self.ty.clone(), binders: CanonicalVarKinds::empty(&Interner) };\n+        let ty = hir_ty::replace_errors_with_variables(&self.ty).value;\n+        let canonical = Canonical { value: ty, binders: CanonicalVarKinds::empty(&Interner) };\n         let environment = self.env.env.clone();\n         let ty = InEnvironment { goal: canonical, environment };\n         autoderef(db, Some(self.krate), ty)\n@@ -2600,10 +2599,7 @@ impl Type {\n         callback: &mut dyn FnMut(&Ty, AssocItemId) -> ControlFlow<()>,\n     ) {\n         // There should be no inference vars in types passed here\n-        // FIXME check that?\n-        // FIXME replace Unknown by bound vars here\n-        let canonical =\n-            Canonical { value: self.ty.clone(), binders: CanonicalVarKinds::empty(&Interner) };\n+        let canonical = hir_ty::replace_errors_with_variables(&self.ty);\n \n         let env = self.env.clone();\n         let krate = krate.id;"}, {"sha": "213cb701704a622218fda0fe93c3dfe469c1f4df", "filename": "crates/ide_completion/src/completions/dot.rs", "status": "modified", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/629db286d1ac8f43d67c65827ff8f5a50c095e04/crates%2Fide_completion%2Fsrc%2Fcompletions%2Fdot.rs", "raw_url": "https://github.com/rust-lang/rust/raw/629db286d1ac8f43d67c65827ff8f5a50c095e04/crates%2Fide_completion%2Fsrc%2Fcompletions%2Fdot.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_completion%2Fsrc%2Fcompletions%2Fdot.rs?ref=629db286d1ac8f43d67c65827ff8f5a50c095e04", "patch": "@@ -697,4 +697,26 @@ fn f() {\n             \"#]],\n         );\n     }\n+\n+    #[test]\n+    fn completes_method_call_when_receiver_type_has_errors_issue_10297() {\n+        check(\n+            r#\"\n+//- minicore: iterator, sized\n+struct Vec<T>;\n+impl<T> IntoIterator for Vec<T> {\n+    type Item = ();\n+    type IntoIter = ();\n+    fn into_iter(self);\n+}\n+fn main() {\n+    let x: Vec<_>;\n+    x.$0;\n+}\n+\"#,\n+            expect![[r#\"\n+                me into_iter() (as IntoIterator) fn(self) -> <Self as IntoIterator>::IntoIter\n+            \"#]],\n+        )\n+    }\n }"}]}