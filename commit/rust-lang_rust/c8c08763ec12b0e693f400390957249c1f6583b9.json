{"sha": "c8c08763ec12b0e693f400390957249c1f6583b9", "node_id": "MDY6Q29tbWl0NzI0NzEyOmM4YzA4NzYzZWMxMmIwZTY5M2Y0MDAzOTA5NTcyNDljMWY2NTgzYjk=", "commit": {"author": {"name": "Jed Davis", "email": "jld@panix.com", "date": "2013-08-29T01:21:04Z"}, "committer": {"name": "Jed Davis", "email": "jld@panix.com", "date": "2013-10-29T16:09:20Z"}, "message": "Add repr attributes in various places that need them.", "tree": {"sha": "e28bae70bd092448e8f803e350486f488a1cebfb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e28bae70bd092448e8f803e350486f488a1cebfb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c8c08763ec12b0e693f400390957249c1f6583b9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c8c08763ec12b0e693f400390957249c1f6583b9", "html_url": "https://github.com/rust-lang/rust/commit/c8c08763ec12b0e693f400390957249c1f6583b9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c8c08763ec12b0e693f400390957249c1f6583b9/comments", "author": {"login": "jld", "id": 254973, "node_id": "MDQ6VXNlcjI1NDk3Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/254973?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jld", "html_url": "https://github.com/jld", "followers_url": "https://api.github.com/users/jld/followers", "following_url": "https://api.github.com/users/jld/following{/other_user}", "gists_url": "https://api.github.com/users/jld/gists{/gist_id}", "starred_url": "https://api.github.com/users/jld/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jld/subscriptions", "organizations_url": "https://api.github.com/users/jld/orgs", "repos_url": "https://api.github.com/users/jld/repos", "events_url": "https://api.github.com/users/jld/events{/privacy}", "received_events_url": "https://api.github.com/users/jld/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jld", "id": 254973, "node_id": "MDQ6VXNlcjI1NDk3Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/254973?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jld", "html_url": "https://github.com/jld", "followers_url": "https://api.github.com/users/jld/followers", "following_url": "https://api.github.com/users/jld/following{/other_user}", "gists_url": "https://api.github.com/users/jld/gists{/gist_id}", "starred_url": "https://api.github.com/users/jld/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jld/subscriptions", "organizations_url": "https://api.github.com/users/jld/orgs", "repos_url": "https://api.github.com/users/jld/repos", "events_url": "https://api.github.com/users/jld/events{/privacy}", "received_events_url": "https://api.github.com/users/jld/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ac311ecaab5d5a92fa86e9b201971bf92bcfbf99", "url": "https://api.github.com/repos/rust-lang/rust/commits/ac311ecaab5d5a92fa86e9b201971bf92bcfbf99", "html_url": "https://github.com/rust-lang/rust/commit/ac311ecaab5d5a92fa86e9b201971bf92bcfbf99"}], "stats": {"total": 17, "additions": 12, "deletions": 5}, "files": [{"sha": "e0b1e694a4908cc6fd5b9e2031f7456548d46f01", "filename": "src/libextra/enum_set.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c8c08763ec12b0e693f400390957249c1f6583b9/src%2Flibextra%2Fenum_set.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c8c08763ec12b0e693f400390957249c1f6583b9/src%2Flibextra%2Fenum_set.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibextra%2Fenum_set.rs?ref=c8c08763ec12b0e693f400390957249c1f6583b9", "patch": "@@ -139,7 +139,7 @@ mod test {\n \n     use enum_set::*;\n \n-    #[deriving(Eq)]\n+    #[deriving(Eq)] #[repr(uint)]\n     enum Foo {\n         A, B, C\n     }"}, {"sha": "4eb8a0b8fa644c6d924082fab3ce4b1f621064be", "filename": "src/librustc/lib/llvm.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/c8c08763ec12b0e693f400390957249c1f6583b9/src%2Flibrustc%2Flib%2Fllvm.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c8c08763ec12b0e693f400390957249c1f6583b9/src%2Flibrustc%2Flib%2Fllvm.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Flib%2Fllvm.rs?ref=c8c08763ec12b0e693f400390957249c1f6583b9", "patch": "@@ -147,6 +147,7 @@ pub static Vector: TypeKind    = 13;\n pub static Metadata: TypeKind  = 14;\n pub static X86_MMX: TypeKind   = 15;\n \n+#[repr(C)]\n pub enum AtomicBinOp {\n     Xchg = 0,\n     Add  = 1,\n@@ -161,6 +162,7 @@ pub enum AtomicBinOp {\n     UMin = 10,\n }\n \n+#[repr(C)]\n pub enum AtomicOrdering {\n     NotAtomic = 0,\n     Unordered = 1,\n@@ -173,6 +175,7 @@ pub enum AtomicOrdering {\n }\n \n // Consts for the LLVMCodeGenFileType type (in include/llvm/c/TargetMachine.h)\n+#[repr(C)]\n pub enum FileType {\n     AssemblyFile = 0,\n     ObjectFile = 1\n@@ -194,20 +197,23 @@ pub enum AsmDialect {\n }\n \n #[deriving(Eq)]\n+#[repr(C)]\n pub enum CodeGenOptLevel {\n     CodeGenLevelNone = 0,\n     CodeGenLevelLess = 1,\n     CodeGenLevelDefault = 2,\n     CodeGenLevelAggressive = 3,\n }\n \n+#[repr(C)]\n pub enum RelocMode {\n     RelocDefault = 0,\n     RelocStatic = 1,\n     RelocPIC = 2,\n     RelocDynamicNoPic = 3,\n }\n \n+#[repr(C)]\n pub enum CodeGenModel {\n     CodeModelDefault = 0,\n     CodeModelJITDefault = 1,"}, {"sha": "3692d571a53a7ec2045e568ea0806ef9478f3424", "filename": "src/librustc/metadata/common.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/c8c08763ec12b0e693f400390957249c1f6583b9/src%2Flibrustc%2Fmetadata%2Fcommon.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c8c08763ec12b0e693f400390957249c1f6583b9/src%2Flibrustc%2Fmetadata%2Fcommon.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmetadata%2Fcommon.rs?ref=c8c08763ec12b0e693f400390957249c1f6583b9", "patch": "@@ -111,7 +111,7 @@ pub static tag_items_data_item_reexport_def_id: uint = 0x4e;\n pub static tag_items_data_item_reexport_name: uint = 0x4f;\n \n // used to encode crate_ctxt side tables\n-#[deriving(Eq)]\n+#[deriving(Eq)] #[repr(uint)]\n pub enum astencode_tag { // Reserves 0x50 -- 0x6f\n     tag_ast = 0x50,\n \n@@ -143,7 +143,7 @@ impl astencode_tag {\n     pub fn from_uint(value : uint) -> Option<astencode_tag> {\n         let is_a_tag = first_astencode_tag <= value && value <= last_astencode_tag;\n         if !is_a_tag { None } else {\n-            Some(unsafe { cast::transmute(value as int) })\n+            Some(unsafe { cast::transmute(value) })\n         }\n     }\n }"}, {"sha": "7d4fafb29f65af4787afd3ed4975b59781c3fcef", "filename": "src/librustc/middle/ty.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c8c08763ec12b0e693f400390957249c1f6583b9/src%2Flibrustc%2Fmiddle%2Fty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c8c08763ec12b0e693f400390957249c1f6583b9/src%2Flibrustc%2Fmiddle%2Fty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fty.rs?ref=c8c08763ec12b0e693f400390957249c1f6583b9", "patch": "@@ -715,7 +715,7 @@ pub struct ParamBounds {\n \n pub type BuiltinBounds = EnumSet<BuiltinBound>;\n \n-#[deriving(Clone, Eq, IterBytes, ToStr)]\n+#[deriving(Clone, Eq, IterBytes, ToStr)] #[repr(uint)]\n pub enum BuiltinBound {\n     BoundStatic,\n     BoundSend,"}, {"sha": "b782d713950d90c36e70ec31a37f08cdaa07d029", "filename": "src/libstd/rt/io/signal.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c8c08763ec12b0e693f400390957249c1f6583b9/src%2Flibstd%2Frt%2Fio%2Fsignal.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c8c08763ec12b0e693f400390957249c1f6583b9/src%2Flibstd%2Frt%2Fio%2Fsignal.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Frt%2Fio%2Fsignal.rs?ref=c8c08763ec12b0e693f400390957249c1f6583b9", "patch": "@@ -26,6 +26,7 @@ use result::{Err, Ok};\n use rt::io::io_error;\n use rt::rtio::{IoFactory, RtioSignal, with_local_io};\n \n+#[repr(int)]\n #[deriving(Eq, IterBytes)]\n pub enum Signum {\n     /// Equivalent to SIGBREAK, delivered when the user presses Ctrl-Break."}, {"sha": "c2c8213517ce2613f7256a07056f3bf4775b858e", "filename": "src/test/run-pass/issue-2718.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c8c08763ec12b0e693f400390957249c1f6583b9/src%2Ftest%2Frun-pass%2Fissue-2718.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c8c08763ec12b0e693f400390957249c1f6583b9/src%2Ftest%2Frun-pass%2Fissue-2718.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-2718.rs?ref=c8c08763ec12b0e693f400390957249c1f6583b9", "patch": "@@ -26,7 +26,7 @@ pub mod pipes {\n         payload: Option<T>\n     }\n \n-    #[deriving(Eq)]\n+    #[deriving(Eq)] #[repr(int)]\n     pub enum state {\n         empty,\n         full,"}]}