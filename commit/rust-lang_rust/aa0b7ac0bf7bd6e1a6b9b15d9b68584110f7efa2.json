{"sha": "aa0b7ac0bf7bd6e1a6b9b15d9b68584110f7efa2", "node_id": "C_kwDOAAsO6NoAKGFhMGI3YWMwYmY3YmQ2ZTFhNmI5YjE1ZDliNjg1ODQxMTBmN2VmYTI", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2022-02-24T06:48:07Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-02-24T06:48:07Z"}, "message": "Rollup merge of #94273 - Dylan-DPC:doc/errorkind, r=joshtriplett\n\nadd matching doc to errorkind\n\nRework of #90706", "tree": {"sha": "2f72d57615b5094d754fd6d78eac223e91a28c64", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2f72d57615b5094d754fd6d78eac223e91a28c64"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/aa0b7ac0bf7bd6e1a6b9b15d9b68584110f7efa2", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJiFyonCRBK7hj4Ov3rIwAAI8sIAB11NsHkz8vuHdlztxyjJZA0\nhS312QYo0C9L8w9kmnuxxqPicmh437OmqteAaG4KMdWtQMWZW04qWpNc9vPormCb\nruIUJ1vf7fn1HTgVUmZoEfg3OWIzCbQATL8o43Jvxq3J+Mmi0ELddCKzBPUGS5hi\n6ZtHjqAb7sifagNkJx95+w1BXxUiUEDu6BKUQQwTZDbu1LQg/dMPteHli8ROLEQG\nJ+1m+qeVmPDlIvogQr7iIw2OD7h6pfucFwvNKw7v1i5qsgrtG1zxfjFhA/+TFo43\njvCj4juaZe3ZBzk+aUrwXRv4W0roRt6K6rH8lKDrTvUHUQ0NoQ7pjG0FdegKSII=\n=vfQG\n-----END PGP SIGNATURE-----\n", "payload": "tree 2f72d57615b5094d754fd6d78eac223e91a28c64\nparent 3cd1dc1d6ec80efa2cff237d8494d825ab983da6\nparent 3f4b039e33f2a6da6413bac416be97c1b0738ca8\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1645685287 +0100\ncommitter GitHub <noreply@github.com> 1645685287 +0100\n\nRollup merge of #94273 - Dylan-DPC:doc/errorkind, r=joshtriplett\n\nadd matching doc to errorkind\n\nRework of #90706\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/aa0b7ac0bf7bd6e1a6b9b15d9b68584110f7efa2", "html_url": "https://github.com/rust-lang/rust/commit/aa0b7ac0bf7bd6e1a6b9b15d9b68584110f7efa2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/aa0b7ac0bf7bd6e1a6b9b15d9b68584110f7efa2/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3cd1dc1d6ec80efa2cff237d8494d825ab983da6", "url": "https://api.github.com/repos/rust-lang/rust/commits/3cd1dc1d6ec80efa2cff237d8494d825ab983da6", "html_url": "https://github.com/rust-lang/rust/commit/3cd1dc1d6ec80efa2cff237d8494d825ab983da6"}, {"sha": "3f4b039e33f2a6da6413bac416be97c1b0738ca8", "url": "https://api.github.com/repos/rust-lang/rust/commits/3f4b039e33f2a6da6413bac416be97c1b0738ca8", "html_url": "https://github.com/rust-lang/rust/commit/3f4b039e33f2a6da6413bac416be97c1b0738ca8"}], "stats": {"total": 13, "additions": 13, "deletions": 0}, "files": [{"sha": "17e2b97545a94d43878659b6a972ebbb95452267", "filename": "library/std/src/io/error.rs", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/aa0b7ac0bf7bd6e1a6b9b15d9b68584110f7efa2/library%2Fstd%2Fsrc%2Fio%2Ferror.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aa0b7ac0bf7bd6e1a6b9b15d9b68584110f7efa2/library%2Fstd%2Fsrc%2Fio%2Ferror.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fio%2Ferror.rs?ref=aa0b7ac0bf7bd6e1a6b9b15d9b68584110f7efa2", "patch": "@@ -141,6 +141,19 @@ struct Custom {\n /// It is used with the [`io::Error`] type.\n ///\n /// [`io::Error`]: Error\n+///\n+/// # Handling errors and matching on `ErrorKind`\n+///\n+/// In application code, use `match` for the `ErrorKind` values you are\n+/// expecting; use `_` to match \"all other errors\".\n+///\n+/// In comprehensive and thorough tests that want to verify that a test doesn't\n+/// return any known incorrect error kind, you may want to cut-and-paste the\n+/// current full list of errors from here into your test code, and then match\n+/// `_` as the correct case. This seems counterintuitive, but it will make your\n+/// tests more robust. In particular, if you want to verify that your code does\n+/// produce an unrecognized error kind, the robust solution is to check for all\n+/// the recognized error kinds and fail in those cases.\n #[derive(Clone, Copy, Debug, Eq, Hash, Ord, PartialEq, PartialOrd)]\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n #[allow(deprecated)]"}]}