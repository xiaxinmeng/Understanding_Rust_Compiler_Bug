{"sha": "93e29823a9eb8de01c33fe48e9f47caf822a2fda", "node_id": "MDY6Q29tbWl0NzI0NzEyOjkzZTI5ODIzYTllYjhkZTAxYzMzZmU0OGU5ZjQ3Y2FmODIyYTJmZGE=", "commit": {"author": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2020-06-05T21:14:34Z"}, "committer": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2020-06-22T18:51:07Z"}, "message": "add new coherence tests and update the documentation", "tree": {"sha": "46ec162ec73d96eb600d95c4d7d60f0ee44e46ea", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/46ec162ec73d96eb600d95c4d7d60f0ee44e46ea"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/93e29823a9eb8de01c33fe48e9f47caf822a2fda", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/93e29823a9eb8de01c33fe48e9f47caf822a2fda", "html_url": "https://github.com/rust-lang/rust/commit/93e29823a9eb8de01c33fe48e9f47caf822a2fda", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/93e29823a9eb8de01c33fe48e9f47caf822a2fda/comments", "author": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "be0d10f149579d3ed53507ff8c2f6511b56456f7", "url": "https://api.github.com/repos/rust-lang/rust/commits/be0d10f149579d3ed53507ff8c2f6511b56456f7", "html_url": "https://github.com/rust-lang/rust/commit/be0d10f149579d3ed53507ff8c2f6511b56456f7"}], "stats": {"total": 57, "additions": 53, "deletions": 4}, "files": [{"sha": "99f805f7f0f6320db244f8ee133087b9fa5c8dba", "filename": "src/test/ui/coherence/coherence-fn-covariant-bound-vs-static.rs", "status": "added", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/93e29823a9eb8de01c33fe48e9f47caf822a2fda/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-fn-covariant-bound-vs-static.rs", "raw_url": "https://github.com/rust-lang/rust/raw/93e29823a9eb8de01c33fe48e9f47caf822a2fda/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-fn-covariant-bound-vs-static.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-fn-covariant-bound-vs-static.rs?ref=93e29823a9eb8de01c33fe48e9f47caf822a2fda", "patch": "@@ -0,0 +1,26 @@\n+// Test that impls for these two types are considered ovelapping:\n+//\n+// * `for<'r> fn(fn(&'r u32))`\n+// * `fn(fn(&'a u32)` where `'a` is free\n+//\n+// This is because, for `'a = 'static`, the two types overlap.\n+// Effectively for them to be equal to you get:\n+//\n+// * `for<'r> fn(fn(&'r u32)) <: fn(fn(&'static u32))`\n+//   * true if `exists<'r> { 'r: 'static }` (obviously true)\n+// * `fn(fn(&'static u32)) <: for<'r> fn(fn(&'r u32))`\n+//   * true if `forall<'r> { 'static: 'r }` (also true)\n+\n+trait Trait {}\n+\n+impl Trait for for<'r> fn(fn(&'r ())) {}\n+impl<'a> Trait for fn(fn(&'a ())) {}\n+//~^ ERROR conflicting implementations\n+//\n+// Note in particular that we do NOT get a future-compatibility warning\n+// here. This is because the new leak-check proposed in [MCP 295] does not\n+// \"error\" when these two types are equated.\n+//\n+// [MCP 295]: https://github.com/rust-lang/compiler-team/issues/295\n+\n+fn main() {}"}, {"sha": "1f3a18c7fad9a6f48bd63028e9870342e6053064", "filename": "src/test/ui/coherence/coherence-fn-covariant-bound-vs-static.stderr", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/93e29823a9eb8de01c33fe48e9f47caf822a2fda/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-fn-covariant-bound-vs-static.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/93e29823a9eb8de01c33fe48e9f47caf822a2fda/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-fn-covariant-bound-vs-static.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-fn-covariant-bound-vs-static.stderr?ref=93e29823a9eb8de01c33fe48e9f47caf822a2fda", "patch": "@@ -0,0 +1,13 @@\n+error[E0119]: conflicting implementations of trait `Trait` for type `for<'r> fn(fn(&'r ()))`:\n+  --> $DIR/coherence-fn-covariant-bound-vs-static.rs:14:1\n+   |\n+LL | impl Trait for for<'r> fn(fn(&'r ())) {}\n+   | ------------------------------------- first implementation here\n+LL | impl<'a> Trait for fn(fn(&'a ())) {}\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ conflicting implementation for `for<'r> fn(fn(&'r ()))`\n+   |\n+   = note: this behavior recently changed as a result of a bug fix; see rust-lang/rust#56105 for details\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0119`."}, {"sha": "4539af9a32e387a70048b4849c57cc7156272b4d", "filename": "src/test/ui/coherence/coherence-fn-implied-bounds.rs", "status": "modified", "additions": 13, "deletions": 1, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/93e29823a9eb8de01c33fe48e9f47caf822a2fda/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-fn-implied-bounds.rs", "raw_url": "https://github.com/rust-lang/rust/raw/93e29823a9eb8de01c33fe48e9f47caf822a2fda/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-fn-implied-bounds.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-fn-implied-bounds.rs?ref=93e29823a9eb8de01c33fe48e9f47caf822a2fda", "patch": "@@ -1,4 +1,16 @@\n-// Example of coherence impls that we accept\n+// Test that our leak-check is not smart enough to take implied bounds\n+// into account (yet). Here we have two types that look like they\n+// should not be equivalent, but because of the rules on implied\n+// bounds we ought to know that, in fact, `'a = 'b` must always hold,\n+// and hence they are.\n+//\n+// Rustc can't figure this out and hence it accepts the impls but\n+// gives a future-compatibility warning (because we'd like to make\n+// this an error someday).\n+//\n+// Note that while we would like to make this a hard error, we also\n+// give the same warning for `coherence-wasm-bindgen.rs`, which ought\n+// to be accepted.\n \n #![deny(coherence_leak_check)]\n "}, {"sha": "3afec5c5459afeebe5ead6a4e26e098b80840deb", "filename": "src/test/ui/coherence/coherence-fn-inputs.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/93e29823a9eb8de01c33fe48e9f47caf822a2fda/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-fn-inputs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/93e29823a9eb8de01c33fe48e9f47caf822a2fda/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-fn-inputs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-fn-inputs.rs?ref=93e29823a9eb8de01c33fe48e9f47caf822a2fda", "patch": "@@ -10,8 +10,6 @@\n // * `'c` can be the intersection of `'a` and `'b` (and there is always an intersection)\n // * `'a` and `'b` can both be equal to `'c`\n \n-#![deny(coherence_leak_check)]\n-\n trait Trait {}\n impl Trait for for<'a, 'b> fn(&'a u32, &'b u32) {}\n impl Trait for for<'c> fn(&'c u32, &'c u32) {"}, {"sha": "56ab873a393201ff2434056271b4662a8da6682a", "filename": "src/test/ui/coherence/coherence-fn-inputs.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/93e29823a9eb8de01c33fe48e9f47caf822a2fda/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-fn-inputs.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/93e29823a9eb8de01c33fe48e9f47caf822a2fda/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-fn-inputs.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-fn-inputs.stderr?ref=93e29823a9eb8de01c33fe48e9f47caf822a2fda", "patch": "@@ -1,5 +1,5 @@\n error[E0119]: conflicting implementations of trait `Trait` for type `for<'a, 'b> fn(&'a u32, &'b u32)`:\n-  --> $DIR/coherence-fn-inputs.rs:17:1\n+  --> $DIR/coherence-fn-inputs.rs:15:1\n    |\n LL | impl Trait for for<'a, 'b> fn(&'a u32, &'b u32) {}\n    | ----------------------------------------------- first implementation here"}]}