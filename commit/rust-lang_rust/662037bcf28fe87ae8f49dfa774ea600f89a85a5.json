{"sha": "662037bcf28fe87ae8f49dfa774ea600f89a85a5", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY2MjAzN2JjZjI4ZmU4N2FlOGY0OWRmYTc3NGVhNjAwZjg5YTg1YTU=", "commit": {"author": {"name": "flip1995", "email": "hello@philkrones.com", "date": "2019-06-24T07:51:19Z"}, "committer": {"name": "flip1995", "email": "hello@philkrones.com", "date": "2019-06-24T07:51:53Z"}, "message": "Simplify unsugar_if to just an if expr check", "tree": {"sha": "476b381cbb044ba7ad6d30a2ca5e37b3c7ddea68", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/476b381cbb044ba7ad6d30a2ca5e37b3c7ddea68"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/662037bcf28fe87ae8f49dfa774ea600f89a85a5", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEZxoS6lESXlRGMHWcaTCGhp1QZjcFAl0QgRkACgkQaTCGhp1Q\nZjeuoBAAkFU3j0N4wmuQ7TnSylF0kgtbkKIs0nrefQtqAguD9Tubbj4skCR478IS\njX5KA+U1uRi14AF9qQnA+djPlPbY21t2a4XnV1LaMyyMsJ0A0XWph1o99s2GNnaA\nCnAFZzB3t04ur05FVHEbeGJG3CSZpcom0KdRELz5Tq5lUWfh8Hm9ZETuTmAUCXH0\noKAGfkc2pG27FG4AccyUvJeRI4hP4oTz/1DvybQz9fNYzNOe3BFnDRnbIqhr8rj0\nB7t5dCzCUTYeB2i1dHYtaHd9p3Zm4q2b8sVy0Qi58uK9IrIabQ9hIds72Rfvg/P2\n8E2RoCRT4ssJoShDRTiYsjFO8QDWYSnE3jVHc0K3ebdIq5yo6rxAj+So/0mIBWta\nwKpMfGrIq2CgUzKleL0tS+Wfa7JsKXLOOJsxOh7y4FxR0MjEQ1w+qQFAgdkFx8zT\n4wLjH5HPV+QTIdoVvPJCDYVe4LQGut0PqQFNdcHaOVM98pjDGgUZ9gykwsbHgK3h\n9NEnvJuEsrkdtVNe9mH+n6RK8kGaJMcFJx7OsI4whDYae1ColWfZSc82jcKz+y3d\n9yzsZldAMzdwakHjztc7shOOSB47JEre5VeaOUPbc829xgusXRWF6pMQd30ZR4Jm\nDdwodrlFS45e+9Sxk1YKlMnTXY9o4xcCgDCYJ4W7JW6CPXlq9LE=\n=qGx1\n-----END PGP SIGNATURE-----", "payload": "tree 476b381cbb044ba7ad6d30a2ca5e37b3c7ddea68\nparent c192c079301b61cffb288701cefef19f3292ef43\nauthor flip1995 <hello@philkrones.com> 1561362679 +0200\ncommitter flip1995 <hello@philkrones.com> 1561362713 +0200\n\nSimplify unsugar_if to just an if expr check\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/662037bcf28fe87ae8f49dfa774ea600f89a85a5", "html_url": "https://github.com/rust-lang/rust/commit/662037bcf28fe87ae8f49dfa774ea600f89a85a5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/662037bcf28fe87ae8f49dfa774ea600f89a85a5/comments", "author": {"login": "flip1995", "id": 9744647, "node_id": "MDQ6VXNlcjk3NDQ2NDc=", "avatar_url": "https://avatars.githubusercontent.com/u/9744647?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flip1995", "html_url": "https://github.com/flip1995", "followers_url": "https://api.github.com/users/flip1995/followers", "following_url": "https://api.github.com/users/flip1995/following{/other_user}", "gists_url": "https://api.github.com/users/flip1995/gists{/gist_id}", "starred_url": "https://api.github.com/users/flip1995/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flip1995/subscriptions", "organizations_url": "https://api.github.com/users/flip1995/orgs", "repos_url": "https://api.github.com/users/flip1995/repos", "events_url": "https://api.github.com/users/flip1995/events{/privacy}", "received_events_url": "https://api.github.com/users/flip1995/received_events", "type": "User", "site_admin": false}, "committer": {"login": "flip1995", "id": 9744647, "node_id": "MDQ6VXNlcjk3NDQ2NDc=", "avatar_url": "https://avatars.githubusercontent.com/u/9744647?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flip1995", "html_url": "https://github.com/flip1995", "followers_url": "https://api.github.com/users/flip1995/followers", "following_url": "https://api.github.com/users/flip1995/following{/other_user}", "gists_url": "https://api.github.com/users/flip1995/gists{/gist_id}", "starred_url": "https://api.github.com/users/flip1995/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flip1995/subscriptions", "organizations_url": "https://api.github.com/users/flip1995/orgs", "repos_url": "https://api.github.com/users/flip1995/repos", "events_url": "https://api.github.com/users/flip1995/events{/privacy}", "received_events_url": "https://api.github.com/users/flip1995/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c192c079301b61cffb288701cefef19f3292ef43", "url": "https://api.github.com/repos/rust-lang/rust/commits/c192c079301b61cffb288701cefef19f3292ef43", "html_url": "https://github.com/rust-lang/rust/commit/c192c079301b61cffb288701cefef19f3292ef43"}], "stats": {"total": 24, "additions": 12, "deletions": 12}, "files": [{"sha": "f20c95d7684c9fb40b8abf24519805627543caf9", "filename": "clippy_lints/src/formatting.rs", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/662037bcf28fe87ae8f49dfa774ea600f89a85a5/clippy_lints%2Fsrc%2Fformatting.rs", "raw_url": "https://github.com/rust-lang/rust/raw/662037bcf28fe87ae8f49dfa774ea600f89a85a5/clippy_lints%2Fsrc%2Fformatting.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fformatting.rs?ref=662037bcf28fe87ae8f49dfa774ea600f89a85a5", "patch": "@@ -3,7 +3,6 @@ use if_chain::if_chain;\n use rustc::lint::{in_external_macro, EarlyContext, EarlyLintPass, LintArray, LintPass};\n use rustc::{declare_lint_pass, declare_tool_lint};\n use syntax::ast::*;\n-use syntax::ptr::P;\n \n declare_clippy_lint! {\n     /// **What it does:** Checks for use of the non-existent `=*`, `=!` and `=-`\n@@ -137,8 +136,8 @@ fn check_assign(cx: &EarlyContext<'_>, expr: &Expr) {\n /// Implementation of the `SUSPICIOUS_ELSE_FORMATTING` lint for weird `else`.\n fn check_else(cx: &EarlyContext<'_>, expr: &Expr) {\n     if_chain! {\n-        if let Some((then, &Some(ref else_))) = unsugar_if(expr);\n-        if is_block(else_) || unsugar_if(else_).is_some();\n+        if let ExprKind::If(_, then, Some(else_)) = &expr.node;\n+        if is_block(else_) || is_if(else_);\n         if !differing_macro_contexts(then.span, else_.span);\n         if !in_macro_or_desugar(then.span) && !in_external_macro(cx.sess, expr.span);\n \n@@ -154,7 +153,7 @@ fn check_else(cx: &EarlyContext<'_>, expr: &Expr) {\n         if let Some(else_snippet) = snippet_opt(cx, else_span);\n         if let Some(else_pos) = else_snippet.find(\"else\");\n         if else_snippet[else_pos..].contains('\\n');\n-        let else_desc = if unsugar_if(else_).is_some() { \"if\" } else { \"{..}\" };\n+        let else_desc = if is_if(else_) { \"if\" } else { \"{..}\" };\n \n         then {\n             span_note_and_lint(\n@@ -207,15 +206,15 @@ fn check_array(cx: &EarlyContext<'_>, expr: &Expr) {\n fn check_missing_else(cx: &EarlyContext<'_>, first: &Expr, second: &Expr) {\n     if !differing_macro_contexts(first.span, second.span)\n         && !in_macro_or_desugar(first.span)\n-        && unsugar_if(first).is_some()\n-        && (is_block(second) || unsugar_if(second).is_some())\n+        && is_if(first)\n+        && (is_block(second) || is_if(second))\n     {\n         // where the else would be\n         let else_span = first.span.between(second.span);\n \n         if let Some(else_snippet) = snippet_opt(cx, else_span) {\n             if !else_snippet.contains('\\n') {\n-                let (looks_like, next_thing) = if unsugar_if(second).is_some() {\n+                let (looks_like, next_thing) = if is_if(second) {\n                     (\"an `else if`\", \"the second `if`\")\n                 } else {\n                     (\"an `else {..}`\", \"the next block\")\n@@ -245,10 +244,11 @@ fn is_block(expr: &Expr) -> bool {\n     }\n }\n \n-/// Match `if` or `if let` expressions and return the `then` and `else` block.\n-fn unsugar_if(expr: &Expr) -> Option<(&P<Block>, &Option<P<Expr>>)> {\n-    match expr.node {\n-        ExprKind::If(_, ref then, ref else_) => Some((then, else_)),\n-        _ => None,\n+/// Check if the expression is an `if` or `if let`\n+fn is_if(expr: &Expr) -> bool {\n+    if let ExprKind::If(..) = expr.node {\n+        true\n+    } else {\n+        false\n     }\n }"}]}