{"sha": "76bb98c76e07f97ff83da8dd7854e33e7c559cdd", "node_id": "C_kwDOAAsO6NoAKDc2YmI5OGM3NmUwN2Y5N2ZmODNkYThkZDc4NTRlMzNlN2M1NTljZGQ", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2023-05-26T22:23:59Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2023-05-26T22:23:59Z"}, "message": "Rollup merge of #111976 - jyn514:doc-bootstrap, r=ozkanonur\n\nGenerate docs for bootstrap itself\n\nThis verifies the intra-doc links are correct, and hopefully makes things easier for new contributors.\n\nNote that this will conflict with https://github.com/rust-lang/rust/pull/111955, i'm pretty sure i typo-ed some of the intra-doc links lol", "tree": {"sha": "d5917edd952a518182aaf465e77ef81246d5e86c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d5917edd952a518182aaf465e77ef81246d5e86c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/76bb98c76e07f97ff83da8dd7854e33e7c559cdd", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJkcTF/CRBK7hj4Ov3rIwAAM0YIAGj3pm7wfpS59whMs+Agj/oy\n10+3mlDLSreqvPgBIDLc01KYuUaY3Tr7NcGXA3TGo+q1utJmQqtiStJGpADN/xp9\nPZK8xFu77NYwuWM7EpgT3iFRFzQaNI2w1UROi2OR8YqQ6cUAQhZs9iJcIXONFy5w\nabqVMXzhw3OF5gBRZi9uLXEllEoy0iGxlukBEGnvRNHEP9HIAKPLa4V0euxxFqH8\n3XEz2WcynsGgIO6JUQ8JODZf2+YyW3OLQfnj4qpcar6iWY9aif+I5gR5VNbKSKJI\nyyRbnSLp3HnGxOsYCCkvgLpInthhDV/RKNARUfA1KLIAClyOnGusd0vRm2uikvg=\n=Lzcm\n-----END PGP SIGNATURE-----\n", "payload": "tree d5917edd952a518182aaf465e77ef81246d5e86c\nparent 18398ad337996ba85e3a8f641e4a3d65f28b1833\nparent b084c525d34ef72618b96f469e47b5fae6105b8c\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1685139839 +0200\ncommitter GitHub <noreply@github.com> 1685139839 +0200\n\nRollup merge of #111976 - jyn514:doc-bootstrap, r=ozkanonur\n\nGenerate docs for bootstrap itself\n\nThis verifies the intra-doc links are correct, and hopefully makes things easier for new contributors.\n\nNote that this will conflict with https://github.com/rust-lang/rust/pull/111955, i'm pretty sure i typo-ed some of the intra-doc links lol\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/76bb98c76e07f97ff83da8dd7854e33e7c559cdd", "html_url": "https://github.com/rust-lang/rust/commit/76bb98c76e07f97ff83da8dd7854e33e7c559cdd", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/76bb98c76e07f97ff83da8dd7854e33e7c559cdd/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "18398ad337996ba85e3a8f641e4a3d65f28b1833", "url": "https://api.github.com/repos/rust-lang/rust/commits/18398ad337996ba85e3a8f641e4a3d65f28b1833", "html_url": "https://github.com/rust-lang/rust/commit/18398ad337996ba85e3a8f641e4a3d65f28b1833"}, {"sha": "b084c525d34ef72618b96f469e47b5fae6105b8c", "url": "https://api.github.com/repos/rust-lang/rust/commits/b084c525d34ef72618b96f469e47b5fae6105b8c", "html_url": "https://github.com/rust-lang/rust/commit/b084c525d34ef72618b96f469e47b5fae6105b8c"}], "stats": {"total": 16, "additions": 12, "deletions": 4}, "files": [{"sha": "f9de87c3f0dae104938530a2b325a4e02304b24b", "filename": "src/bootstrap/builder.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/76bb98c76e07f97ff83da8dd7854e33e7c559cdd/src%2Fbootstrap%2Fbuilder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/76bb98c76e07f97ff83da8dd7854e33e7c559cdd/src%2Fbootstrap%2Fbuilder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fbuilder.rs?ref=76bb98c76e07f97ff83da8dd7854e33e7c559cdd", "patch": "@@ -264,7 +264,7 @@ impl PathSet {\n \n     /// A convenience wrapper for Steps which know they have no aliases and all their sets contain only a single path.\n     ///\n-    /// This can be used with [`ShouldRun::krate`], [`ShouldRun::path`], or [`ShouldRun::alias`].\n+    /// This can be used with [`ShouldRun::crate_or_deps`], [`ShouldRun::path`], or [`ShouldRun::alias`].\n     #[track_caller]\n     pub fn assert_single_path(&self) -> &TaskPath {\n         match self {\n@@ -787,6 +787,7 @@ impl<'a> Builder<'a> {\n                 doc::EditionGuide,\n                 doc::StyleGuide,\n                 doc::Tidy,\n+                doc::Bootstrap,\n             ),\n             Kind::Dist => describe!(\n                 dist::Docs,"}, {"sha": "b52c3b68cc4ff3d8d4555e2669d8c38fdf4a87a3", "filename": "src/bootstrap/doc.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/76bb98c76e07f97ff83da8dd7854e33e7c559cdd/src%2Fbootstrap%2Fdoc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/76bb98c76e07f97ff83da8dd7854e33e7c559cdd/src%2Fbootstrap%2Fdoc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fdoc.rs?ref=76bb98c76e07f97ff83da8dd7854e33e7c559cdd", "patch": "@@ -839,6 +839,8 @@ macro_rules! tool_doc {\n                 )+\n \n                 cargo.rustdocflag(\"--document-private-items\");\n+                // Since we always pass --document-private-items, there's no need to warn about linking to private items.\n+                cargo.rustdocflag(\"-Arustdoc::private-intra-doc-links\");\n                 cargo.rustdocflag(\"--enable-index-page\");\n                 cargo.rustdocflag(\"--show-type-layout\");\n                 cargo.rustdocflag(\"--generate-link-to-definition\");\n@@ -882,7 +884,8 @@ tool_doc!(\n         // \"cargo-credential-wincred\",\n     ]\n );\n-tool_doc!(Tidy, \"tidy\", \"src/tools/tidy\", [\"tidy\"]);\n+tool_doc!(Tidy, \"tidy\", \"src/tools/tidy\", rustc_tool = false, [\"tidy\"]);\n+tool_doc!(Bootstrap, \"bootstrap\", \"src/bootstrap\", rustc_tool = false, [\"bootstrap\"]);\n \n #[derive(Ord, PartialOrd, Debug, Copy, Clone, Hash, PartialEq, Eq)]\n pub struct ErrorIndex {"}, {"sha": "c7969d2a2c7bed1e1b635c2b07d3f61deab9c446", "filename": "src/bootstrap/download.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/76bb98c76e07f97ff83da8dd7854e33e7c559cdd/src%2Fbootstrap%2Fdownload.rs", "raw_url": "https://github.com/rust-lang/rust/raw/76bb98c76e07f97ff83da8dd7854e33e7c559cdd/src%2Fbootstrap%2Fdownload.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fdownload.rs?ref=76bb98c76e07f97ff83da8dd7854e33e7c559cdd", "patch": "@@ -123,7 +123,7 @@ impl Config {\n     /// This is only required on NixOS and uses the PatchELF utility to\n     /// change the interpreter/RPATH of ELF executables.\n     ///\n-    /// Please see https://nixos.org/patchelf.html for more information\n+    /// Please see <https://nixos.org/patchelf.html> for more information\n     fn fix_bin_or_dylib(&self, fname: &Path) {\n         assert_eq!(SHOULD_FIX_BINS_AND_DYLIBS.get(), Some(&true));\n         println!(\"attempting to patch {}\", fname.display());"}, {"sha": "943f513415a1689ff4d9f364079dacc0442dc387", "filename": "src/bootstrap/lib.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/76bb98c76e07f97ff83da8dd7854e33e7c559cdd/src%2Fbootstrap%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/76bb98c76e07f97ff83da8dd7854e33e7c559cdd/src%2Fbootstrap%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Flib.rs?ref=76bb98c76e07f97ff83da8dd7854e33e7c559cdd", "patch": "@@ -1011,6 +1011,8 @@ impl Build {\n     }\n \n     /// Return a `Group` guard for a [`Step`] that is built for each `--stage`.\n+    ///\n+    /// [`Step`]: crate::builder::Step\n     fn msg(\n         &self,\n         action: impl Into<Kind>,\n@@ -1035,6 +1037,8 @@ impl Build {\n     }\n \n     /// Return a `Group` guard for a [`Step`] that is only built once and isn't affected by `--stage`.\n+    ///\n+    /// [`Step`]: crate::builder::Step\n     fn msg_unstaged(\n         &self,\n         action: impl Into<Kind>,"}, {"sha": "9bfdc77e6b6cc39b50c2f5ab73c11fb4cdeed5ae", "filename": "src/bootstrap/util.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/76bb98c76e07f97ff83da8dd7854e33e7c559cdd/src%2Fbootstrap%2Futil.rs", "raw_url": "https://github.com/rust-lang/rust/raw/76bb98c76e07f97ff83da8dd7854e33e7c559cdd/src%2Fbootstrap%2Futil.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Futil.rs?ref=76bb98c76e07f97ff83da8dd7854e33e7c559cdd", "patch": "@@ -488,7 +488,7 @@ fn absolute_windows(path: &std::path::Path) -> std::io::Result<std::path::PathBu\n     }\n }\n \n-/// Adapted from https://github.com/llvm/llvm-project/blob/782e91224601e461c019e0a4573bbccc6094fbcd/llvm/cmake/modules/HandleLLVMOptions.cmake#L1058-L1079\n+/// Adapted from <https://github.com/llvm/llvm-project/blob/782e91224601e461c019e0a4573bbccc6094fbcd/llvm/cmake/modules/HandleLLVMOptions.cmake#L1058-L1079>\n ///\n /// When `clang-cl` is used with instrumentation, we need to add clang's runtime library resource\n /// directory to the linker flags, otherwise there will be linker errors about the profiler runtime"}]}