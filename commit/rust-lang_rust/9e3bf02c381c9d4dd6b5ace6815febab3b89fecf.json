{"sha": "9e3bf02c381c9d4dd6b5ace6815febab3b89fecf", "node_id": "MDY6Q29tbWl0NzI0NzEyOjllM2JmMDJjMzgxYzlkNGRkNmI1YWNlNjgxNWZlYmFiM2I4OWZlY2Y=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2014-09-24T15:45:48Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2014-09-24T15:45:48Z"}, "message": "auto merge of #17472 : kaseyc/rust/ICE_fix, r=aturon\n\nAdd checks for null bytes in the value strings for the export_name and link_section attributes, reporting an error if any are found, before calling with_c_str on them.\r\n\r\nFixes #16478", "tree": {"sha": "7954143350a0b4ed555a5c1193f16cd0c84620c2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7954143350a0b4ed555a5c1193f16cd0c84620c2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9e3bf02c381c9d4dd6b5ace6815febab3b89fecf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9e3bf02c381c9d4dd6b5ace6815febab3b89fecf", "html_url": "https://github.com/rust-lang/rust/commit/9e3bf02c381c9d4dd6b5ace6815febab3b89fecf", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9e3bf02c381c9d4dd6b5ace6815febab3b89fecf/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5366cfecf3fd4e3b589c140b85eee4bb4b35d97c", "url": "https://api.github.com/repos/rust-lang/rust/commits/5366cfecf3fd4e3b589c140b85eee4bb4b35d97c", "html_url": "https://github.com/rust-lang/rust/commit/5366cfecf3fd4e3b589c140b85eee4bb4b35d97c"}, {"sha": "3e8ad539397743045cb0b4337afc79c37b77ca65", "url": "https://api.github.com/repos/rust-lang/rust/commits/3e8ad539397743045cb0b4337afc79c37b77ca65", "html_url": "https://github.com/rust-lang/rust/commit/3e8ad539397743045cb0b4337afc79c37b77ca65"}], "stats": {"total": 23, "additions": 19, "deletions": 4}, "files": [{"sha": "cac6a8bbfed4cd370ebbe2d63c4a75c566160e5d", "filename": "src/librustc/middle/trans/base.rs", "status": "modified", "additions": 19, "deletions": 4, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/9e3bf02c381c9d4dd6b5ace6815febab3b89fecf/src%2Flibrustc%2Fmiddle%2Ftrans%2Fbase.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9e3bf02c381c9d4dd6b5ace6815febab3b89fecf/src%2Flibrustc%2Fmiddle%2Ftrans%2Fbase.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftrans%2Fbase.rs?ref=9e3bf02c381c9d4dd6b5ace6815febab3b89fecf", "patch": "@@ -2670,6 +2670,10 @@ fn exported_name(ccx: &CrateContext, id: ast::NodeId,\n     }\n }\n \n+fn contains_null(s: &str) -> bool {\n+    s.bytes().any(|b| b == 0)\n+}\n+\n pub fn get_item_val(ccx: &CrateContext, id: ast::NodeId) -> ValueRef {\n     debug!(\"get_item_val(id=`{:?}`)\", id);\n \n@@ -2701,6 +2705,11 @@ pub fn get_item_val(ccx: &CrateContext, id: ast::NodeId) -> ValueRef {\n \n                     unsafe {\n                         let llty = llvm::LLVMTypeOf(v);\n+                        if contains_null(sym.as_slice()) {\n+                            ccx.sess().fatal(\n+                                format!(\"Illegal null byte in export_name value: `{}`\",\n+                                        sym).as_slice());\n+                        }\n                         let g = sym.as_slice().with_c_str(|buf| {\n                             llvm::LLVMAddGlobal(ccx.llmod(), llty, buf)\n                         });\n@@ -2764,10 +2773,16 @@ pub fn get_item_val(ccx: &CrateContext, id: ast::NodeId) -> ValueRef {\n \n             match attr::first_attr_value_str_by_name(i.attrs.as_slice(),\n                                                      \"link_section\") {\n-                Some(sect) => unsafe {\n-                    sect.get().with_c_str(|buf| {\n-                        llvm::LLVMSetSection(v, buf);\n-                    })\n+                Some(sect) => {\n+                    if contains_null(sect.get()) {\n+                        ccx.sess().fatal(format!(\"Illegal null byte in link_section value: `{}`\",\n+                                                 sect.get()).as_slice());\n+                    }\n+                    unsafe {\n+                        sect.get().with_c_str(|buf| {\n+                            llvm::LLVMSetSection(v, buf);\n+                        })\n+                    }\n                 },\n                 None => ()\n             }"}]}