{"sha": "62b517772a11e2ff5accffd03e1832535f9bdc1d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjYyYjUxNzc3MmExMWUyZmY1YWNjZmZkMDNlMTgzMjUzNWY5YmRjMWQ=", "commit": {"author": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2015-02-12T17:41:31Z"}, "committer": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2015-02-18T15:25:29Z"}, "message": "Fallout: add phantom data to the type inferencer", "tree": {"sha": "43dd5bb8d202d7ce9e3f01c5f6701eb94a33fcf2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/43dd5bb8d202d7ce9e3f01c5f6701eb94a33fcf2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/62b517772a11e2ff5accffd03e1832535f9bdc1d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/62b517772a11e2ff5accffd03e1832535f9bdc1d", "html_url": "https://github.com/rust-lang/rust/commit/62b517772a11e2ff5accffd03e1832535f9bdc1d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/62b517772a11e2ff5accffd03e1832535f9bdc1d/comments", "author": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "199b992e6306ead7a2be1e086768879983c08a20", "url": "https://api.github.com/repos/rust-lang/rust/commits/199b992e6306ead7a2be1e086768879983c08a20", "html_url": "https://github.com/rust-lang/rust/commit/199b992e6306ead7a2be1e086768879983c08a20"}], "stats": {"total": 14, "additions": 8, "deletions": 6}, "files": [{"sha": "a856137af090a706c68461ad0beac834086e1aa5", "filename": "src/librustc/middle/infer/type_variable.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/62b517772a11e2ff5accffd03e1832535f9bdc1d/src%2Flibrustc%2Fmiddle%2Finfer%2Ftype_variable.rs", "raw_url": "https://github.com/rust-lang/rust/raw/62b517772a11e2ff5accffd03e1832535f9bdc1d/src%2Flibrustc%2Fmiddle%2Finfer%2Ftype_variable.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Finfer%2Ftype_variable.rs?ref=62b517772a11e2ff5accffd03e1832535f9bdc1d", "patch": "@@ -14,6 +14,7 @@ use self::UndoEntry::*;\n \n use middle::ty::{self, Ty};\n use std::cmp::min;\n+use std::marker::PhantomData;\n use std::mem;\n use std::u32;\n use util::snapshot_vec as sv;\n@@ -42,7 +43,7 @@ enum UndoEntry {\n     Relate(ty::TyVid, ty::TyVid),\n }\n \n-struct Delegate<'tcx>;\n+struct Delegate<'tcx>(PhantomData<&'tcx ()>);\n \n type Relation = (RelationDir, ty::TyVid);\n \n@@ -64,7 +65,7 @@ impl RelationDir {\n \n impl<'tcx> TypeVariableTable<'tcx> {\n     pub fn new() -> TypeVariableTable<'tcx> {\n-        TypeVariableTable { values: sv::SnapshotVec::new(Delegate) }\n+        TypeVariableTable { values: sv::SnapshotVec::new(Delegate(PhantomData)) }\n     }\n \n     fn relations<'a>(&'a mut self, a: ty::TyVid) -> &'a mut Vec<Relation> {"}, {"sha": "07cb316c5bfc244e2ab0c06d6ebd6463463b3bf2", "filename": "src/librustc/middle/infer/unify.rs", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/62b517772a11e2ff5accffd03e1832535f9bdc1d/src%2Flibrustc%2Fmiddle%2Finfer%2Funify.rs", "raw_url": "https://github.com/rust-lang/rust/raw/62b517772a11e2ff5accffd03e1832535f9bdc1d/src%2Flibrustc%2Fmiddle%2Finfer%2Funify.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Finfer%2Funify.rs?ref=62b517772a11e2ff5accffd03e1832535f9bdc1d", "patch": "@@ -18,6 +18,7 @@ use middle::infer::{uok, ures};\n use middle::infer::InferCtxt;\n use std::cell::RefCell;\n use std::fmt::Debug;\n+use std::marker::PhantomData;\n use syntax::ast;\n use util::snapshot_vec as sv;\n \n@@ -79,7 +80,7 @@ pub struct UnificationTable<K:UnifyKey> {\n /// made during the snapshot may either be *committed* or *rolled back*.\n pub struct Snapshot<K:UnifyKey> {\n     // Link snapshot to the key type `K` of the table.\n-    marker: marker::CovariantType<K>,\n+    marker: marker::PhantomData<K>,\n     snapshot: sv::Snapshot,\n }\n \n@@ -92,7 +93,7 @@ pub struct Node<K:UnifyKey> {\n }\n \n #[derive(Copy)]\n-pub struct Delegate<K>;\n+pub struct Delegate<K>(PhantomData<K>);\n \n // We can't use V:LatticeValue, much as I would like to,\n // because frequently the pattern is that V=Option<U> for some\n@@ -102,14 +103,14 @@ pub struct Delegate<K>;\n impl<K:UnifyKey> UnificationTable<K> {\n     pub fn new() -> UnificationTable<K> {\n         UnificationTable {\n-            values: sv::SnapshotVec::new(Delegate),\n+            values: sv::SnapshotVec::new(Delegate(PhantomData)),\n         }\n     }\n \n     /// Starts a new snapshot. Each snapshot must be either\n     /// rolled back or committed in a \"LIFO\" (stack) order.\n     pub fn snapshot(&mut self) -> Snapshot<K> {\n-        Snapshot { marker: marker::CovariantType::<K>,\n+        Snapshot { marker: marker::PhantomData::<K>,\n                    snapshot: self.values.start_snapshot() }\n     }\n "}]}