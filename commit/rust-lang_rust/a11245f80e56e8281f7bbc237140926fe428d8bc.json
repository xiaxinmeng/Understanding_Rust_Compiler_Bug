{"sha": "a11245f80e56e8281f7bbc237140926fe428d8bc", "node_id": "MDY6Q29tbWl0NzI0NzEyOmExMTI0NWY4MGU1NmU4MjgxZjdiYmMyMzcxNDA5MjZmZTQyOGQ4YmM=", "commit": {"author": {"name": "David Wood", "email": "david@davidtw.co", "date": "2018-06-27T20:18:07Z"}, "committer": {"name": "David Wood", "email": "david@davidtw.co", "date": "2018-07-01T15:14:25Z"}, "message": "Ensure that changed errors are lower case.", "tree": {"sha": "f906782e83902d85885bfaa3f574d71727e1e18e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f906782e83902d85885bfaa3f574d71727e1e18e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a11245f80e56e8281f7bbc237140926fe428d8bc", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEWwgxPGhT5b/6kagXAXYLT59T8VQFAls479EACgkQAXYLT59T\n8VQ/vxAAjDqnSXNv2hixZ6rHCdj8XMDbdLu91xBjMJdeVsovnmJxO7hhDbD0/DQc\nruR7poEnlFYY/KSJ1tu8s7eP4g4o9eMNcfrD0IPzsDavBeCCxN5VWcxHAskaKmUO\nmT0ZyJh5n9uakskkxgqnT55z4oi15VMf7x/XLPZWybFs07WCoSOpAzChn0+mdcke\nSu+5UodP5v4AcI3iC+s1mAGa+z+d4dSa1TiqzeMGj9SybyEPq7CzVqDd1Igsiwpo\nCuZyoc40YFu2MyJZSwCAt3jEETI3EnPVAb92iCWlpoLclbzys6QMu7AqCPc26wGj\nQAStwqV8vtG5NYsOas1L5O9yi37MtVu2X+UO0oqZZXvIar8eDXV/OhXdOf69hmUE\n+IRab2CeazlrqXkLnqMPj7036CugX+ig7ImoHBS7QADansbHDGFIv7J4KgwmudTx\nX5iFa1uyGRmGsovV2q3XGYvcgAS7Gb4/rAaa7XryS+9o5au5EoaXxJ7svN2+2ptv\nZKxC8XhaadJDcvvuol4T2xb44qE6PczZPi9z34wtk8mlJZiFftx623i22zq/rZQp\nAQCktapfE2MMoSA/+y0hj+TqCJGG9S8yW8ejQINi5YmJ6kZhdCxhTXL55PCOs+VQ\n6nAYWKk+zjuvW4srMENLq9DCmcc36mBVDiLebQS405zNFF+bZbw=\n=TEy6\n-----END PGP SIGNATURE-----", "payload": "tree f906782e83902d85885bfaa3f574d71727e1e18e\nparent 59e64e908504a6ce6cd549acd735e38871f88368\nauthor David Wood <david@davidtw.co> 1530130687 +0100\ncommitter David Wood <david@davidtw.co> 1530458065 +0100\n\nEnsure that changed errors are lower case.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a11245f80e56e8281f7bbc237140926fe428d8bc", "html_url": "https://github.com/rust-lang/rust/commit/a11245f80e56e8281f7bbc237140926fe428d8bc", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a11245f80e56e8281f7bbc237140926fe428d8bc/comments", "author": {"login": "davidtwco", "id": 1295100, "node_id": "MDQ6VXNlcjEyOTUxMDA=", "avatar_url": "https://avatars.githubusercontent.com/u/1295100?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidtwco", "html_url": "https://github.com/davidtwco", "followers_url": "https://api.github.com/users/davidtwco/followers", "following_url": "https://api.github.com/users/davidtwco/following{/other_user}", "gists_url": "https://api.github.com/users/davidtwco/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidtwco/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidtwco/subscriptions", "organizations_url": "https://api.github.com/users/davidtwco/orgs", "repos_url": "https://api.github.com/users/davidtwco/repos", "events_url": "https://api.github.com/users/davidtwco/events{/privacy}", "received_events_url": "https://api.github.com/users/davidtwco/received_events", "type": "User", "site_admin": false}, "committer": {"login": "davidtwco", "id": 1295100, "node_id": "MDQ6VXNlcjEyOTUxMDA=", "avatar_url": "https://avatars.githubusercontent.com/u/1295100?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidtwco", "html_url": "https://github.com/davidtwco", "followers_url": "https://api.github.com/users/davidtwco/followers", "following_url": "https://api.github.com/users/davidtwco/following{/other_user}", "gists_url": "https://api.github.com/users/davidtwco/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidtwco/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidtwco/subscriptions", "organizations_url": "https://api.github.com/users/davidtwco/orgs", "repos_url": "https://api.github.com/users/davidtwco/repos", "events_url": "https://api.github.com/users/davidtwco/events{/privacy}", "received_events_url": "https://api.github.com/users/davidtwco/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "59e64e908504a6ce6cd549acd735e38871f88368", "url": "https://api.github.com/repos/rust-lang/rust/commits/59e64e908504a6ce6cd549acd735e38871f88368", "html_url": "https://github.com/rust-lang/rust/commit/59e64e908504a6ce6cd549acd735e38871f88368"}], "stats": {"total": 90, "additions": 45, "deletions": 45}, "files": [{"sha": "f3372f6be703b0c0efbd417187d070ed617edfef", "filename": "src/librustc_mir/borrow_check/nll/region_infer/error_reporting.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/a11245f80e56e8281f7bbc237140926fe428d8bc/src%2Flibrustc_mir%2Fborrow_check%2Fnll%2Fregion_infer%2Ferror_reporting.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a11245f80e56e8281f7bbc237140926fe428d8bc/src%2Flibrustc_mir%2Fborrow_check%2Fnll%2Fregion_infer%2Ferror_reporting.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Fnll%2Fregion_infer%2Ferror_reporting.rs?ref=a11245f80e56e8281f7bbc237140926fe428d8bc", "patch": "@@ -37,11 +37,11 @@ enum ConstraintCategory {\n impl fmt::Display for ConstraintCategory {\n     fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {\n         match self {\n-            ConstraintCategory::Assignment => write!(f, \"Assignment\"),\n-            ConstraintCategory::Return => write!(f, \"Return\"),\n-            ConstraintCategory::Cast => write!(f, \"Cast\"),\n-            ConstraintCategory::CallArgument => write!(f, \"Argument\"),\n-            _ => write!(f, \"Free region\"),\n+            ConstraintCategory::Assignment => write!(f, \"assignment\"),\n+            ConstraintCategory::Return => write!(f, \"return\"),\n+            ConstraintCategory::Cast => write!(f, \"cast\"),\n+            ConstraintCategory::CallArgument => write!(f, \"argument\"),\n+            _ => write!(f, \"free region\"),\n         }\n     }\n }"}, {"sha": "a62d81c0333339334b114d109d0cb2c9ecb37dee", "filename": "src/test/ui/borrowck/issue-45983.nll.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a11245f80e56e8281f7bbc237140926fe428d8bc/src%2Ftest%2Fui%2Fborrowck%2Fissue-45983.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a11245f80e56e8281f7bbc237140926fe428d8bc/src%2Ftest%2Fui%2Fborrowck%2Fissue-45983.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fborrowck%2Fissue-45983.nll.stderr?ref=a11245f80e56e8281f7bbc237140926fe428d8bc", "patch": "@@ -4,7 +4,7 @@ warning: not reporting region error due to nll\n LL |     give_any(|y| x = Some(y));\n    |                           ^\n \n-error: Assignment requires that data must outlive free region `'_#2r`\n+error: assignment requires that data must outlive free region `'_#2r`\n   --> $DIR/issue-45983.rs:17:27\n    |\n LL |     give_any(|y| x = Some(y));"}, {"sha": "7a4db0802a8464c742130b9ff7c425639f1cd2c4", "filename": "src/test/ui/borrowck/regions-escape-bound-fn-2.nll.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a11245f80e56e8281f7bbc237140926fe428d8bc/src%2Ftest%2Fui%2Fborrowck%2Fregions-escape-bound-fn-2.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a11245f80e56e8281f7bbc237140926fe428d8bc/src%2Ftest%2Fui%2Fborrowck%2Fregions-escape-bound-fn-2.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fborrowck%2Fregions-escape-bound-fn-2.nll.stderr?ref=a11245f80e56e8281f7bbc237140926fe428d8bc", "patch": "@@ -4,7 +4,7 @@ warning: not reporting region error due to nll\n LL |     with_int(|y| x = Some(y));\n    |                           ^\n \n-error: Assignment requires that data must outlive free region `'_#2r`\n+error: assignment requires that data must outlive free region `'_#2r`\n   --> $DIR/regions-escape-bound-fn-2.rs:18:27\n    |\n LL |     with_int(|y| x = Some(y));"}, {"sha": "5a71e75d4b2cd7e3d86f4af2adfa28896deb40b3", "filename": "src/test/ui/nll/closure-requirements/propagate-approximated-shorter-to-static-comparing-against-free.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a11245f80e56e8281f7bbc237140926fe428d8bc/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fpropagate-approximated-shorter-to-static-comparing-against-free.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a11245f80e56e8281f7bbc237140926fe428d8bc/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fpropagate-approximated-shorter-to-static-comparing-against-free.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fpropagate-approximated-shorter-to-static-comparing-against-free.rs?ref=a11245f80e56e8281f7bbc237140926fe428d8bc", "patch": "@@ -31,7 +31,7 @@ fn case1() {\n     foo(cell, |cell_a, cell_x| {\n         //~^ WARNING not reporting region error due to nll\n         cell_a.set(cell_x.get()); // forces 'x: 'a, error in closure\n-        //~^ ERROR Argument requires that data must outlive free region\n+        //~^ ERROR argument requires that data must outlive free region\n     })\n }\n "}, {"sha": "656c1b46a3ce5341c55ecf0cd0dfd841d50ae0c5", "filename": "src/test/ui/nll/closure-requirements/propagate-approximated-shorter-to-static-comparing-against-free.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/a11245f80e56e8281f7bbc237140926fe428d8bc/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fpropagate-approximated-shorter-to-static-comparing-against-free.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a11245f80e56e8281f7bbc237140926fe428d8bc/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fpropagate-approximated-shorter-to-static-comparing-against-free.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fpropagate-approximated-shorter-to-static-comparing-against-free.stderr?ref=a11245f80e56e8281f7bbc237140926fe428d8bc", "patch": "@@ -4,7 +4,7 @@ warning: not reporting region error due to nll\n LL |     foo(cell, |cell_a, cell_x| {\n    |     ^^^\n \n-error: Argument requires that data must outlive free region `'_#1r`\n+error: argument requires that data must outlive free region `'_#1r`\n   --> $DIR/propagate-approximated-shorter-to-static-comparing-against-free.rs:33:20\n    |\n LL |         cell_a.set(cell_x.get()); // forces 'x: 'a, error in closure\n@@ -17,7 +17,7 @@ LL |       foo(cell, |cell_a, cell_x| {\n    |  _______________^\n LL | |         //~^ WARNING not reporting region error due to nll\n LL | |         cell_a.set(cell_x.get()); // forces 'x: 'a, error in closure\n-LL | |         //~^ ERROR Argument requires that data must outlive free region\n+LL | |         //~^ ERROR argument requires that data must outlive free region\n LL | |     })\n    | |_____^\n    |"}, {"sha": "b25b0e25df2111ccad22c867b8a1d3a5993ed49c", "filename": "src/test/ui/nll/closure-requirements/propagate-approximated-shorter-to-static-no-bound.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a11245f80e56e8281f7bbc237140926fe428d8bc/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fpropagate-approximated-shorter-to-static-no-bound.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a11245f80e56e8281f7bbc237140926fe428d8bc/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fpropagate-approximated-shorter-to-static-no-bound.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fpropagate-approximated-shorter-to-static-no-bound.rs?ref=a11245f80e56e8281f7bbc237140926fe428d8bc", "patch": "@@ -43,7 +43,7 @@ fn demand_y<'x, 'y>(_cell_x: &Cell<&'x u32>, _cell_y: &Cell<&'y u32>, _y: &'y u3\n #[rustc_regions]\n fn supply<'a, 'b>(cell_a: Cell<&'a u32>, cell_b: Cell<&'b u32>) {\n     establish_relationships(&cell_a, &cell_b, |_outlives, x, y| {\n-        //~^ ERROR Argument requires that data must outlive free region\n+        //~^ ERROR argument requires that data must outlive free region\n \n         // Only works if 'x: 'y:\n         demand_y(x, y, x.get()) //~ WARNING not reporting region error due to nll"}, {"sha": "582417b0da934013c31f9b4ddfeaebeb2f0a572b", "filename": "src/test/ui/nll/closure-requirements/propagate-approximated-shorter-to-static-no-bound.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/a11245f80e56e8281f7bbc237140926fe428d8bc/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fpropagate-approximated-shorter-to-static-no-bound.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a11245f80e56e8281f7bbc237140926fe428d8bc/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fpropagate-approximated-shorter-to-static-no-bound.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fpropagate-approximated-shorter-to-static-no-bound.stderr?ref=a11245f80e56e8281f7bbc237140926fe428d8bc", "patch": "@@ -9,7 +9,7 @@ note: External requirements\n    |\n LL |       establish_relationships(&cell_a, &cell_b, |_outlives, x, y| {\n    |  _______________________________________________^\n-LL | |         //~^ ERROR Argument requires that data must outlive free region\n+LL | |         //~^ ERROR argument requires that data must outlive free region\n LL | |\n LL | |         // Only works if 'x: 'y:\n LL | |         demand_y(x, y, x.get()) //~ WARNING not reporting region error due to nll\n@@ -23,11 +23,11 @@ LL | |     });\n    = note: number of external vids: 2\n    = note: where '_#1r: '_#0r\n \n-error: Argument requires that data must outlive free region `ReStatic`\n+error: argument requires that data must outlive free region `ReStatic`\n   --> $DIR/propagate-approximated-shorter-to-static-no-bound.rs:45:5\n    |\n LL | /     establish_relationships(&cell_a, &cell_b, |_outlives, x, y| {\n-LL | |         //~^ ERROR Argument requires that data must outlive free region\n+LL | |         //~^ ERROR argument requires that data must outlive free region\n LL | |\n LL | |         // Only works if 'x: 'y:\n LL | |         demand_y(x, y, x.get()) //~ WARNING not reporting region error due to nll\n@@ -39,7 +39,7 @@ note: No external requirements\n    |\n LL | / fn supply<'a, 'b>(cell_a: Cell<&'a u32>, cell_b: Cell<&'b u32>) {\n LL | |     establish_relationships(&cell_a, &cell_b, |_outlives, x, y| {\n-LL | |         //~^ ERROR Argument requires that data must outlive free region\n+LL | |         //~^ ERROR argument requires that data must outlive free region\n LL | |\n ...  |\n LL | |     });"}, {"sha": "db9951bcc0f213f7b774646f5ccda247908a5311", "filename": "src/test/ui/nll/closure-requirements/propagate-approximated-shorter-to-static-wrong-bound.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a11245f80e56e8281f7bbc237140926fe428d8bc/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fpropagate-approximated-shorter-to-static-wrong-bound.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a11245f80e56e8281f7bbc237140926fe428d8bc/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fpropagate-approximated-shorter-to-static-wrong-bound.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fpropagate-approximated-shorter-to-static-wrong-bound.rs?ref=a11245f80e56e8281f7bbc237140926fe428d8bc", "patch": "@@ -46,7 +46,7 @@ fn demand_y<'x, 'y>(_cell_x: &Cell<&'x u32>, _cell_y: &Cell<&'y u32>, _y: &'y u3\n #[rustc_regions]\n fn supply<'a, 'b>(cell_a: Cell<&'a u32>, cell_b: Cell<&'b u32>) {\n     establish_relationships(&cell_a, &cell_b, |_outlives1, _outlives2, x, y| {\n-        //~^ ERROR Argument requires that data must outlive free region\n+        //~^ ERROR argument requires that data must outlive free region\n         // Only works if 'x: 'y:\n         demand_y(x, y, x.get())\n         //~^ WARNING not reporting region error due to nll"}, {"sha": "481ba512972fa605ef0420d9a078a2f89a9d39cc", "filename": "src/test/ui/nll/closure-requirements/propagate-approximated-shorter-to-static-wrong-bound.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/a11245f80e56e8281f7bbc237140926fe428d8bc/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fpropagate-approximated-shorter-to-static-wrong-bound.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a11245f80e56e8281f7bbc237140926fe428d8bc/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fpropagate-approximated-shorter-to-static-wrong-bound.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fpropagate-approximated-shorter-to-static-wrong-bound.stderr?ref=a11245f80e56e8281f7bbc237140926fe428d8bc", "patch": "@@ -9,7 +9,7 @@ note: External requirements\n    |\n LL |       establish_relationships(&cell_a, &cell_b, |_outlives1, _outlives2, x, y| {\n    |  _______________________________________________^\n-LL | |         //~^ ERROR Argument requires that data must outlive free region\n+LL | |         //~^ ERROR argument requires that data must outlive free region\n LL | |         // Only works if 'x: 'y:\n LL | |         demand_y(x, y, x.get())\n LL | |         //~^ WARNING not reporting region error due to nll\n@@ -23,11 +23,11 @@ LL | |     });\n    = note: number of external vids: 3\n    = note: where '_#1r: '_#0r\n \n-error: Argument requires that data must outlive free region `ReStatic`\n+error: argument requires that data must outlive free region `ReStatic`\n   --> $DIR/propagate-approximated-shorter-to-static-wrong-bound.rs:48:5\n    |\n LL | /     establish_relationships(&cell_a, &cell_b, |_outlives1, _outlives2, x, y| {\n-LL | |         //~^ ERROR Argument requires that data must outlive free region\n+LL | |         //~^ ERROR argument requires that data must outlive free region\n LL | |         // Only works if 'x: 'y:\n LL | |         demand_y(x, y, x.get())\n LL | |         //~^ WARNING not reporting region error due to nll\n@@ -39,7 +39,7 @@ note: No external requirements\n    |\n LL | / fn supply<'a, 'b>(cell_a: Cell<&'a u32>, cell_b: Cell<&'b u32>) {\n LL | |     establish_relationships(&cell_a, &cell_b, |_outlives1, _outlives2, x, y| {\n-LL | |         //~^ ERROR Argument requires that data must outlive free region\n+LL | |         //~^ ERROR argument requires that data must outlive free region\n LL | |         // Only works if 'x: 'y:\n ...  |\n LL | |     });"}, {"sha": "316268e7e726dffcc69eaf59e76320e3a857eeb5", "filename": "src/test/ui/nll/closure-requirements/propagate-fail-to-approximate-longer-no-bounds.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a11245f80e56e8281f7bbc237140926fe428d8bc/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fpropagate-fail-to-approximate-longer-no-bounds.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a11245f80e56e8281f7bbc237140926fe428d8bc/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fpropagate-fail-to-approximate-longer-no-bounds.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fpropagate-fail-to-approximate-longer-no-bounds.rs?ref=a11245f80e56e8281f7bbc237140926fe428d8bc", "patch": "@@ -46,7 +46,7 @@ fn supply<'a, 'b>(cell_a: Cell<&'a u32>, cell_b: Cell<&'b u32>) {\n         // Only works if 'x: 'y:\n         demand_y(x, y, x.get())\n         //~^ WARN not reporting region error due to nll\n-        //~| ERROR Argument requires that data must outlive free region\n+        //~| ERROR argument requires that data must outlive free region\n     });\n }\n "}, {"sha": "74c0576e03b628f5055a3926f9b88a4057988ec4", "filename": "src/test/ui/nll/closure-requirements/propagate-fail-to-approximate-longer-no-bounds.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/a11245f80e56e8281f7bbc237140926fe428d8bc/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fpropagate-fail-to-approximate-longer-no-bounds.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a11245f80e56e8281f7bbc237140926fe428d8bc/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fpropagate-fail-to-approximate-longer-no-bounds.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fpropagate-fail-to-approximate-longer-no-bounds.stderr?ref=a11245f80e56e8281f7bbc237140926fe428d8bc", "patch": "@@ -4,7 +4,7 @@ warning: not reporting region error due to nll\n LL |         demand_y(x, y, x.get())\n    |         ^^^^^^^^^^^^^^^^^^^^^^^\n \n-error: Argument requires that data must outlive free region `ReFree(DefId(0/1:18 ~ propagate_fail_to_approximate_longer_no_bounds[317d]::supply[0]::{{closure}}[0]), BrAnon(2))`\n+error: argument requires that data must outlive free region `ReFree(DefId(0/1:18 ~ propagate_fail_to_approximate_longer_no_bounds[317d]::supply[0]::{{closure}}[0]), BrAnon(2))`\n   --> $DIR/propagate-fail-to-approximate-longer-no-bounds.rs:47:9\n    |\n LL |         demand_y(x, y, x.get())\n@@ -18,7 +18,7 @@ LL |       establish_relationships(&cell_a, &cell_b, |_outlives, x, y| {\n LL | |         // Only works if 'x: 'y:\n LL | |         demand_y(x, y, x.get())\n LL | |         //~^ WARN not reporting region error due to nll\n-LL | |         //~| ERROR Argument requires that data must outlive free region\n+LL | |         //~| ERROR argument requires that data must outlive free region\n LL | |     });\n    | |_____^\n    |"}, {"sha": "3832be6288aef3965da8af08fc9bcffcd7dc6f2c", "filename": "src/test/ui/nll/ty-outlives/projection-one-region-closure.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/a11245f80e56e8281f7bbc237140926fe428d8bc/src%2Ftest%2Fui%2Fnll%2Fty-outlives%2Fprojection-one-region-closure.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a11245f80e56e8281f7bbc237140926fe428d8bc/src%2Ftest%2Fui%2Fnll%2Fty-outlives%2Fprojection-one-region-closure.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fty-outlives%2Fprojection-one-region-closure.rs?ref=a11245f80e56e8281f7bbc237140926fe428d8bc", "patch": "@@ -55,7 +55,7 @@ where\n     with_signature(cell, t, |cell, t| require(cell, t));\n     //~^ WARNING not reporting region error due to nll\n     //~| ERROR the parameter type `T` may not live long enough\n-    //~| ERROR Argument requires that data must outlive free region\n+    //~| ERROR argument requires that data must outlive free region\n }\n \n #[rustc_regions]\n@@ -67,7 +67,7 @@ where\n     with_signature(cell, t, |cell, t| require(cell, t));\n     //~^ WARNING not reporting region error due to nll\n     //~| ERROR the parameter type `T` may not live long enough\n-    //~| ERROR Argument requires that data must outlive free region\n+    //~| ERROR argument requires that data must outlive free region\n }\n \n #[rustc_regions]\n@@ -89,7 +89,7 @@ where\n     with_signature(cell, t, |cell, t| require(cell, t));\n     //~^ WARNING not reporting region error due to nll\n     //~| ERROR the parameter type `T` may not live long enough\n-    //~| ERROR Argument requires that data must outlive free region\n+    //~| ERROR argument requires that data must outlive free region\n }\n \n #[rustc_regions]"}, {"sha": "898c995e09b9d6b3269457d230672bdb0d1bf4dc", "filename": "src/test/ui/nll/ty-outlives/projection-one-region-closure.stderr", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/a11245f80e56e8281f7bbc237140926fe428d8bc/src%2Ftest%2Fui%2Fnll%2Fty-outlives%2Fprojection-one-region-closure.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a11245f80e56e8281f7bbc237140926fe428d8bc/src%2Ftest%2Fui%2Fnll%2Fty-outlives%2Fprojection-one-region-closure.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fty-outlives%2Fprojection-one-region-closure.stderr?ref=a11245f80e56e8281f7bbc237140926fe428d8bc", "patch": "@@ -40,7 +40,7 @@ LL |     with_signature(cell, t, |cell, t| require(cell, t));\n    |\n    = help: consider adding an explicit lifetime bound `T: ReFree(DefId(0/0:8 ~ projection_one_region_closure[317d]::no_relationships_late[0]), BrNamed(crate0:DefIndex(1:16), 'a))`...\n \n-error: Argument requires that data must outlive free region `ReFree(DefId(0/0:8 ~ projection_one_region_closure[317d]::no_relationships_late[0]), BrNamed(crate0:DefIndex(1:16), 'a))`\n+error: argument requires that data must outlive free region `ReFree(DefId(0/0:8 ~ projection_one_region_closure[317d]::no_relationships_late[0]), BrNamed(crate0:DefIndex(1:16), 'a))`\n   --> $DIR/projection-one-region-closure.rs:55:5\n    |\n LL |     with_signature(cell, t, |cell, t| require(cell, t));\n@@ -54,7 +54,7 @@ LL | | where\n LL | |     T: Anything<'b>,\n LL | | {\n ...  |\n-LL | |     //~| ERROR Argument requires that data must outlive free region\n+LL | |     //~| ERROR argument requires that data must outlive free region\n LL | | }\n    | |_^\n    |\n@@ -88,7 +88,7 @@ LL |     with_signature(cell, t, |cell, t| require(cell, t));\n    |\n    = help: consider adding an explicit lifetime bound `T: ReEarlyBound(0, 'a)`...\n \n-error: Argument requires that data must outlive free region `ReEarlyBound(0, 'a)`\n+error: argument requires that data must outlive free region `ReEarlyBound(0, 'a)`\n   --> $DIR/projection-one-region-closure.rs:67:5\n    |\n LL |     with_signature(cell, t, |cell, t| require(cell, t));\n@@ -102,7 +102,7 @@ LL | | where\n LL | |     T: Anything<'b>,\n LL | |     'a: 'a,\n ...  |\n-LL | |     //~| ERROR Argument requires that data must outlive free region\n+LL | |     //~| ERROR argument requires that data must outlive free region\n LL | | }\n    | |_^\n    |\n@@ -137,7 +137,7 @@ LL |     with_signature(cell, t, |cell, t| require(cell, t));\n    |\n    = help: consider adding an explicit lifetime bound `T: ReEarlyBound(0, 'a)`...\n \n-error: Argument requires that data must outlive free region `ReEarlyBound(0, 'a)`\n+error: argument requires that data must outlive free region `ReEarlyBound(0, 'a)`\n   --> $DIR/projection-one-region-closure.rs:89:5\n    |\n LL |     with_signature(cell, t, |cell, t| require(cell, t));\n@@ -151,7 +151,7 @@ LL | | where\n LL | |     T: Anything<'b>,\n LL | |     T::AssocType: 'a,\n ...  |\n-LL | |     //~| ERROR Argument requires that data must outlive free region\n+LL | |     //~| ERROR argument requires that data must outlive free region\n LL | | }\n    | |_^\n    |"}, {"sha": "da76193459b30a54b47524ae06071d1ddbe5d0f5", "filename": "src/test/ui/nll/ty-outlives/projection-one-region-trait-bound-closure.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/a11245f80e56e8281f7bbc237140926fe428d8bc/src%2Ftest%2Fui%2Fnll%2Fty-outlives%2Fprojection-one-region-trait-bound-closure.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a11245f80e56e8281f7bbc237140926fe428d8bc/src%2Ftest%2Fui%2Fnll%2Fty-outlives%2Fprojection-one-region-trait-bound-closure.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fty-outlives%2Fprojection-one-region-trait-bound-closure.rs?ref=a11245f80e56e8281f7bbc237140926fe428d8bc", "patch": "@@ -46,7 +46,7 @@ where\n {\n     with_signature(cell, t, |cell, t| require(cell, t));\n     //~^ WARNING not reporting region error due to nll\n-    //~| ERROR Argument requires that data must outlive free region\n+    //~| ERROR argument requires that data must outlive free region\n }\n \n #[rustc_regions]\n@@ -57,7 +57,7 @@ where\n {\n     with_signature(cell, t, |cell, t| require(cell, t));\n     //~^ WARNING not reporting region error due to nll\n-    //~| ERROR Argument requires that data must outlive free region\n+    //~| ERROR argument requires that data must outlive free region\n }\n \n #[rustc_regions]\n@@ -78,7 +78,7 @@ where\n \n     with_signature(cell, t, |cell, t| require(cell, t));\n     //~^ WARNING not reporting region error due to nll\n-    //~| ERROR Argument requires that data must outlive free region\n+    //~| ERROR argument requires that data must outlive free region\n }\n \n #[rustc_regions]"}, {"sha": "be11c6249f0ba0dfb04bc96536ef04bee2d5564c", "filename": "src/test/ui/nll/ty-outlives/projection-one-region-trait-bound-closure.stderr", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/a11245f80e56e8281f7bbc237140926fe428d8bc/src%2Ftest%2Fui%2Fnll%2Fty-outlives%2Fprojection-one-region-trait-bound-closure.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a11245f80e56e8281f7bbc237140926fe428d8bc/src%2Ftest%2Fui%2Fnll%2Fty-outlives%2Fprojection-one-region-trait-bound-closure.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fty-outlives%2Fprojection-one-region-trait-bound-closure.stderr?ref=a11245f80e56e8281f7bbc237140926fe428d8bc", "patch": "@@ -31,7 +31,7 @@ LL |     with_signature(cell, t, |cell, t| require(cell, t));\n    = note: number of external vids: 3\n    = note: where '_#1r: '_#2r\n \n-error: Argument requires that data must outlive free region `ReFree(DefId(0/0:8 ~ projection_one_region_trait_bound_closure[317d]::no_relationships_late[0]), BrNamed(crate0:DefIndex(1:16), 'a))`\n+error: argument requires that data must outlive free region `ReFree(DefId(0/0:8 ~ projection_one_region_trait_bound_closure[317d]::no_relationships_late[0]), BrNamed(crate0:DefIndex(1:16), 'a))`\n   --> $DIR/projection-one-region-trait-bound-closure.rs:47:5\n    |\n LL |     with_signature(cell, t, |cell, t| require(cell, t));\n@@ -45,7 +45,7 @@ LL | | where\n LL | |     T: Anything<'b>,\n LL | | {\n ...  |\n-LL | |     //~| ERROR Argument requires that data must outlive free region\n+LL | |     //~| ERROR argument requires that data must outlive free region\n LL | | }\n    | |_^\n    |\n@@ -70,7 +70,7 @@ LL |     with_signature(cell, t, |cell, t| require(cell, t));\n    = note: number of external vids: 4\n    = note: where '_#2r: '_#3r\n \n-error: Argument requires that data must outlive free region `ReEarlyBound(0, 'a)`\n+error: argument requires that data must outlive free region `ReEarlyBound(0, 'a)`\n   --> $DIR/projection-one-region-trait-bound-closure.rs:58:5\n    |\n LL |     with_signature(cell, t, |cell, t| require(cell, t));\n@@ -84,7 +84,7 @@ LL | | where\n LL | |     T: Anything<'b>,\n LL | |     'a: 'a,\n ...  |\n-LL | |     //~| ERROR Argument requires that data must outlive free region\n+LL | |     //~| ERROR argument requires that data must outlive free region\n LL | | }\n    | |_^\n    |\n@@ -110,7 +110,7 @@ LL |     with_signature(cell, t, |cell, t| require(cell, t));\n    = note: number of external vids: 4\n    = note: where '_#2r: '_#3r\n \n-error: Argument requires that data must outlive free region `ReEarlyBound(0, 'a)`\n+error: argument requires that data must outlive free region `ReEarlyBound(0, 'a)`\n   --> $DIR/projection-one-region-trait-bound-closure.rs:79:5\n    |\n LL |     with_signature(cell, t, |cell, t| require(cell, t));\n@@ -124,7 +124,7 @@ LL | | where\n LL | |     T: Anything<'b>,\n LL | |     T::AssocType: 'a,\n ...  |\n-LL | |     //~| ERROR Argument requires that data must outlive free region\n+LL | |     //~| ERROR argument requires that data must outlive free region\n LL | | }\n    | |_^\n    |"}, {"sha": "5e481a9626f08166ff50ac80ce86775041be1a2f", "filename": "src/test/ui/nll/ty-outlives/projection-two-region-trait-bound-closure.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a11245f80e56e8281f7bbc237140926fe428d8bc/src%2Ftest%2Fui%2Fnll%2Fty-outlives%2Fprojection-two-region-trait-bound-closure.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a11245f80e56e8281f7bbc237140926fe428d8bc/src%2Ftest%2Fui%2Fnll%2Fty-outlives%2Fprojection-two-region-trait-bound-closure.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fty-outlives%2Fprojection-two-region-trait-bound-closure.rs?ref=a11245f80e56e8281f7bbc237140926fe428d8bc", "patch": "@@ -107,7 +107,7 @@ where\n {\n     with_signature(cell, t, |cell, t| require(cell, t));\n     //~^ WARNING not reporting region error due to nll\n-    //~| ERROR Argument requires that data must outlive free region\n+    //~| ERROR argument requires that data must outlive free region\n }\n \n #[rustc_regions]"}, {"sha": "546384e8545e3fa357693fdb593d944a68bb72c2", "filename": "src/test/ui/nll/ty-outlives/projection-two-region-trait-bound-closure.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/a11245f80e56e8281f7bbc237140926fe428d8bc/src%2Ftest%2Fui%2Fnll%2Fty-outlives%2Fprojection-two-region-trait-bound-closure.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a11245f80e56e8281f7bbc237140926fe428d8bc/src%2Ftest%2Fui%2Fnll%2Fty-outlives%2Fprojection-two-region-trait-bound-closure.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fty-outlives%2Fprojection-two-region-trait-bound-closure.stderr?ref=a11245f80e56e8281f7bbc237140926fe428d8bc", "patch": "@@ -239,7 +239,7 @@ LL |     with_signature(cell, t, |cell, t| require(cell, t));\n    = note: number of external vids: 3\n    = note: where <T as Anything<ReClosureBound('_#1r), ReClosureBound('_#1r)>>::AssocType: '_#2r\n \n-error: Argument requires that data must outlive free region `ReFree(DefId(0/0:13 ~ projection_two_region_trait_bound_closure[317d]::two_regions[0]), BrNamed(crate0:DefIndex(1:43), 'a))`\n+error: argument requires that data must outlive free region `ReFree(DefId(0/0:13 ~ projection_two_region_trait_bound_closure[317d]::two_regions[0]), BrNamed(crate0:DefIndex(1:43), 'a))`\n   --> $DIR/projection-two-region-trait-bound-closure.rs:108:5\n    |\n LL |     with_signature(cell, t, |cell, t| require(cell, t));\n@@ -253,7 +253,7 @@ LL | | where\n LL | |     T: Anything<'b, 'b>,\n LL | | {\n ...  |\n-LL | |     //~| ERROR Argument requires that data must outlive free region\n+LL | |     //~| ERROR argument requires that data must outlive free region\n LL | | }\n    | |_^\n    |"}, {"sha": "49f9044b19b248c13836a364263640eee72a4c65", "filename": "src/test/ui/underscore-lifetime/dyn-trait-underscore.nll.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a11245f80e56e8281f7bbc237140926fe428d8bc/src%2Ftest%2Fui%2Funderscore-lifetime%2Fdyn-trait-underscore.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a11245f80e56e8281f7bbc237140926fe428d8bc/src%2Ftest%2Fui%2Funderscore-lifetime%2Fdyn-trait-underscore.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Funderscore-lifetime%2Fdyn-trait-underscore.nll.stderr?ref=a11245f80e56e8281f7bbc237140926fe428d8bc", "patch": "@@ -22,7 +22,7 @@ warning: not reporting region error due to nll\n LL |     Box::new(items.iter()) //~ ERROR cannot infer an appropriate lifetime\n    |     ^^^^^^^^^^^^^^^^^^^^^^\n \n-error: Cast requires that data must outlive free region `'static`\n+error: cast requires that data must outlive free region `'static`\n   --> $DIR/dyn-trait-underscore.rs:18:5\n    |\n LL |     Box::new(items.iter()) //~ ERROR cannot infer an appropriate lifetime"}]}