{"sha": "c4c15363fbb18d02e01aae9ffd386ff93446c0a3", "node_id": "MDY6Q29tbWl0NzI0NzEyOmM0YzE1MzYzZmJiMThkMDJlMDFhYWU5ZmZkMzg2ZmY5MzQ0NmMwYTM=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2020-02-25T10:09:14Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-02-25T10:09:14Z"}, "message": "Merge #3295\n\n3295: Refactoring fetchArtifactReleaseInfo() r=matklad a=Veetaha\n\nhttps://github.com/typescript-eslint/typescript-eslint/blob/master/packages/eslint-plugin/docs/rules/no-unnecessary-type-assertion.md\r\n\r\nI fact this rule doesn't work when you put an unnecessary non-null assertion in an expression (as we had `(awat f())!`, but it is useful in other cases...\r\n\r\nCloses #3295, i guess...\n\nCo-authored-by: Veetaha <gerzoh1@gmail.com>", "tree": {"sha": "d09d525548e3f816378c61fc21f0e63b2e487617", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d09d525548e3f816378c61fc21f0e63b2e487617"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c4c15363fbb18d02e01aae9ffd386ff93446c0a3", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJeVPJKCRBK7hj4Ov3rIwAAdHIIAJBedeRgmx4DntTUs8NTjr0L\naVYVmHX0AiQ5fCuTjgyCOttaqF2cNr/2V4ijd2yaUcsruKWtzcYuDSNGD3/G+YQr\nHwfjWn8LZAzrvnhw/mRp+RZL/T9pbnRDce2X45dBSpDavMwSn4R9vKQgxcngc57N\nrzKnOpXBR+P9ZQH1VM7a+8CHhuC/oye6ghoa79ISC1p4UQ9GNTLdqxuzi/m10DWp\nILAQg1/UOoCB28iyeNdna+sfxiebTHglv4uv9aSkh9Zne0XU785HebqgM2llz9Z/\nlGzhhHabldHyh4Wn19glPppGx4SRJTsLu8+Njxj/0rufE3pNRMwksbybq1Q6qps=\n=2Bn1\n-----END PGP SIGNATURE-----\n", "payload": "tree d09d525548e3f816378c61fc21f0e63b2e487617\nparent 1fe48a0115c24240f5a3e1b329e642f18e2715d6\nparent 6ec4a7db42be5980f7a4b20f349cb10709dbf71b\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1582625354 +0000\ncommitter GitHub <noreply@github.com> 1582625354 +0000\n\nMerge #3295\n\n3295: Refactoring fetchArtifactReleaseInfo() r=matklad a=Veetaha\n\nhttps://github.com/typescript-eslint/typescript-eslint/blob/master/packages/eslint-plugin/docs/rules/no-unnecessary-type-assertion.md\r\n\r\nI fact this rule doesn't work when you put an unnecessary non-null assertion in an expression (as we had `(awat f())!`, but it is useful in other cases...\r\n\r\nCloses #3295, i guess...\n\nCo-authored-by: Veetaha <gerzoh1@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c4c15363fbb18d02e01aae9ffd386ff93446c0a3", "html_url": "https://github.com/rust-lang/rust/commit/c4c15363fbb18d02e01aae9ffd386ff93446c0a3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c4c15363fbb18d02e01aae9ffd386ff93446c0a3/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1fe48a0115c24240f5a3e1b329e642f18e2715d6", "url": "https://api.github.com/repos/rust-lang/rust/commits/1fe48a0115c24240f5a3e1b329e642f18e2715d6", "html_url": "https://github.com/rust-lang/rust/commit/1fe48a0115c24240f5a3e1b329e642f18e2715d6"}, {"sha": "6ec4a7db42be5980f7a4b20f349cb10709dbf71b", "url": "https://api.github.com/repos/rust-lang/rust/commits/6ec4a7db42be5980f7a4b20f349cb10709dbf71b", "html_url": "https://github.com/rust-lang/rust/commit/6ec4a7db42be5980f7a4b20f349cb10709dbf71b"}], "stats": {"total": 63, "additions": 42, "deletions": 21}, "files": [{"sha": "c6bf410f4b56f009534563ce51713cf43f2f9a09", "filename": "editors/code/.eslintrc.js", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/c4c15363fbb18d02e01aae9ffd386ff93446c0a3/editors%2Fcode%2F.eslintrc.js", "raw_url": "https://github.com/rust-lang/rust/raw/c4c15363fbb18d02e01aae9ffd386ff93446c0a3/editors%2Fcode%2F.eslintrc.js", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2F.eslintrc.js?ref=c4c15363fbb18d02e01aae9ffd386ff93446c0a3", "patch": "@@ -32,6 +32,7 @@ module.exports = {\n         \"@typescript-eslint/semi\": [\n             \"error\",\n             \"always\"\n-        ]\n+        ],\n+        \"@typescript-eslint/no-unnecessary-type-assertion\": \"error\"\n     }\n };"}, {"sha": "b1b5a3485ccc7a1436875acdaafef073222c809c", "filename": "editors/code/src/installation/fetch_artifact_release_info.ts", "status": "modified", "additions": 39, "deletions": 19, "changes": 58, "blob_url": "https://github.com/rust-lang/rust/blob/c4c15363fbb18d02e01aae9ffd386ff93446c0a3/editors%2Fcode%2Fsrc%2Finstallation%2Ffetch_artifact_release_info.ts", "raw_url": "https://github.com/rust-lang/rust/raw/c4c15363fbb18d02e01aae9ffd386ff93446c0a3/editors%2Fcode%2Fsrc%2Finstallation%2Ffetch_artifact_release_info.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Finstallation%2Ffetch_artifact_release_info.ts?ref=c4c15363fbb18d02e01aae9ffd386ff93446c0a3", "patch": "@@ -4,41 +4,61 @@ import { log } from \"../util\";\n \n const GITHUB_API_ENDPOINT_URL = \"https://api.github.com\";\n \n-\n /**\n- * Fetches the release with `releaseTag` (or just latest release when not specified)\n- * from GitHub `repo` and returns metadata about `artifactFileName` shipped with\n- * this release or `null` if no such artifact was published.\n+ * Fetches the release with `releaseTag` from GitHub `repo` and\n+ * returns metadata about `artifactFileName` shipped with\n+ * this release.\n+ *\n+ * @throws Error upon network failure or if no such repository, release, or artifact exists.\n  */\n export async function fetchArtifactReleaseInfo(\n-    repo: GithubRepo, artifactFileName: string, releaseTag?: string\n-): Promise<null | ArtifactReleaseInfo> {\n+    repo: GithubRepo,\n+    artifactFileName: string,\n+    releaseTag: string\n+): Promise<ArtifactReleaseInfo> {\n \n     const repoOwner = encodeURIComponent(repo.owner);\n     const repoName = encodeURIComponent(repo.name);\n \n-    const apiEndpointPath = releaseTag\n-        ? `/repos/${repoOwner}/${repoName}/releases/tags/${releaseTag}`\n-        : `/repos/${repoOwner}/${repoName}/releases/latest`;\n+    const apiEndpointPath = `/repos/${repoOwner}/${repoName}/releases/tags/${releaseTag}`;\n \n     const requestUrl = GITHUB_API_ENDPOINT_URL + apiEndpointPath;\n \n-    // We skip runtime type checks for simplicity (here we cast from `any` to `GithubRelease`)\n-\n     log.debug(\"Issuing request for released artifacts metadata to\", requestUrl);\n \n-    // FIXME: handle non-ok response\n-    const response: GithubRelease = await fetch(requestUrl, {\n-        headers: { Accept: \"application/vnd.github.v3+json\" }\n-    })\n-        .then(res => res.json());\n+    const response = await fetch(requestUrl, { headers: { Accept: \"application/vnd.github.v3+json\" } });\n \n-    const artifact = response.assets.find(artifact => artifact.name === artifactFileName);\n+    if (!response.ok) {\n+        log.error(\"Error fetching artifact release info\", {\n+            requestUrl,\n+            releaseTag,\n+            artifactFileName,\n+            response: {\n+                headers: response.headers,\n+                status: response.status,\n+                body: await response.text(),\n+            }\n+        });\n+\n+        throw new Error(\n+            `Got response ${response.status} when trying to fetch ` +\n+            `\"${artifactFileName}\" artifact release info for ${releaseTag} release`\n+        );\n+    }\n \n-    if (!artifact) return null;\n+    // We skip runtime type checks for simplicity (here we cast from `any` to `GithubRelease`)\n+    const release: GithubRelease = await response.json();\n+\n+    const artifact = release.assets.find(artifact => artifact.name === artifactFileName);\n+\n+    if (!artifact) {\n+        throw new Error(\n+            `Artifact ${artifactFileName} was not found in ${release.name} release!`\n+        );\n+    }\n \n     return {\n-        releaseName: response.name,\n+        releaseName: release.name,\n         downloadUrl: artifact.browser_download_url\n     };\n "}, {"sha": "cb5e568448aedf979afd8fe3c1525eb6f4d11a34", "filename": "editors/code/src/installation/server.ts", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c4c15363fbb18d02e01aae9ffd386ff93446c0a3/editors%2Fcode%2Fsrc%2Finstallation%2Fserver.ts", "raw_url": "https://github.com/rust-lang/rust/raw/c4c15363fbb18d02e01aae9ffd386ff93446c0a3/editors%2Fcode%2Fsrc%2Finstallation%2Fserver.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Finstallation%2Fserver.ts?ref=c4c15363fbb18d02e01aae9ffd386ff93446c0a3", "patch": "@@ -63,7 +63,7 @@ export async function ensureServerBinary(source: null | BinarySource): Promise<n\n \n async function downloadServer(source: BinarySource.GithubRelease): Promise<boolean> {\n     try {\n-        const releaseInfo = (await fetchArtifactReleaseInfo(source.repo, source.file, source.version))!;\n+        const releaseInfo = await fetchArtifactReleaseInfo(source.repo, source.file, source.version);\n \n         await downloadArtifact(releaseInfo, source.file, source.dir, \"language server\");\n         await setServerVersion(source.storage, releaseInfo.releaseName);"}]}