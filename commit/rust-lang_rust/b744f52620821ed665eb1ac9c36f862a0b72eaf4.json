{"sha": "b744f52620821ed665eb1ac9c36f862a0b72eaf4", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI3NDRmNTI2MjA4MjFlZDY2NWViMWFjOWMzNmY4NjJhMGI3MmVhZjQ=", "commit": {"author": {"name": "Michael Sullivan", "email": "sully@msully.net", "date": "2012-05-30T17:46:22Z"}, "committer": {"name": "Michael Sullivan", "email": "sully@msully.net", "date": "2012-05-30T17:46:22Z"}, "message": "Make heap closures always require a capture clause to capture mutable variables. Closes #2446.", "tree": {"sha": "b6f3cfb9c3776208eb92dd496807b0290761eee0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b6f3cfb9c3776208eb92dd496807b0290761eee0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b744f52620821ed665eb1ac9c36f862a0b72eaf4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b744f52620821ed665eb1ac9c36f862a0b72eaf4", "html_url": "https://github.com/rust-lang/rust/commit/b744f52620821ed665eb1ac9c36f862a0b72eaf4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b744f52620821ed665eb1ac9c36f862a0b72eaf4/comments", "author": {"login": "msullivan", "id": 340349, "node_id": "MDQ6VXNlcjM0MDM0OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/340349?v=4", "gravatar_id": "", "url": "https://api.github.com/users/msullivan", "html_url": "https://github.com/msullivan", "followers_url": "https://api.github.com/users/msullivan/followers", "following_url": "https://api.github.com/users/msullivan/following{/other_user}", "gists_url": "https://api.github.com/users/msullivan/gists{/gist_id}", "starred_url": "https://api.github.com/users/msullivan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/msullivan/subscriptions", "organizations_url": "https://api.github.com/users/msullivan/orgs", "repos_url": "https://api.github.com/users/msullivan/repos", "events_url": "https://api.github.com/users/msullivan/events{/privacy}", "received_events_url": "https://api.github.com/users/msullivan/received_events", "type": "User", "site_admin": false}, "committer": {"login": "msullivan", "id": 340349, "node_id": "MDQ6VXNlcjM0MDM0OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/340349?v=4", "gravatar_id": "", "url": "https://api.github.com/users/msullivan", "html_url": "https://github.com/msullivan", "followers_url": "https://api.github.com/users/msullivan/followers", "following_url": "https://api.github.com/users/msullivan/following{/other_user}", "gists_url": "https://api.github.com/users/msullivan/gists{/gist_id}", "starred_url": "https://api.github.com/users/msullivan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/msullivan/subscriptions", "organizations_url": "https://api.github.com/users/msullivan/orgs", "repos_url": "https://api.github.com/users/msullivan/repos", "events_url": "https://api.github.com/users/msullivan/events{/privacy}", "received_events_url": "https://api.github.com/users/msullivan/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "736ff34e8ac714671fcce7ca903144832fec0338", "url": "https://api.github.com/repos/rust-lang/rust/commits/736ff34e8ac714671fcce7ca903144832fec0338", "html_url": "https://github.com/rust-lang/rust/commit/736ff34e8ac714671fcce7ca903144832fec0338"}], "stats": {"total": 22, "additions": 9, "deletions": 13}, "files": [{"sha": "54c39899355f0ad7212ff84fcb2a12d6f0b7c9a3", "filename": "src/rustc/middle/kind.rs", "status": "modified", "additions": 6, "deletions": 10, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/b744f52620821ed665eb1ac9c36f862a0b72eaf4/src%2Frustc%2Fmiddle%2Fkind.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b744f52620821ed665eb1ac9c36f862a0b72eaf4/src%2Frustc%2Fmiddle%2Fkind.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustc%2Fmiddle%2Fkind.rs?ref=b744f52620821ed665eb1ac9c36f862a0b72eaf4", "patch": "@@ -96,10 +96,8 @@ fn with_appropriate_checker(cx: ctx, id: node_id, b: fn(check_fn)) {\n         if !is_move { check_copy(cx, var_t, sp, is_implicit); }\n \n         // check that only immutable variables are implicitly copied in\n-        if !is_move {\n-            for fv.each { |fv|\n-                check_imm_free_var(cx, fv.def, fv.span);\n-            }\n+        for fv.each { |fv|\n+            check_imm_free_var(cx, fv.def, fv.span);\n         }\n     }\n \n@@ -110,10 +108,8 @@ fn with_appropriate_checker(cx: ctx, id: node_id, b: fn(check_fn)) {\n         if !is_move { check_copy(cx, var_t, sp, is_implicit); }\n \n         // check that only immutable variables are implicitly copied in\n-        if !is_move {\n-            for fv.each { |fv|\n-                check_imm_free_var(cx, fv.def, fv.span);\n-            }\n+        for fv.each { |fv|\n+            check_imm_free_var(cx, fv.def, fv.span);\n         }\n     }\n \n@@ -391,8 +387,8 @@ fn check_imm_free_var(cx: ctx, def: def, sp: span) {\n       }\n       def_arg(_, mode) {\n         alt ty::resolved_mode(cx.tcx, mode) {\n-          by_ref | by_val { /* ok */ }\n-          by_mutbl_ref | by_move | by_copy {\n+          by_ref | by_val | by_move | by_copy { /* ok */ }\n+          by_mutbl_ref {\n             cx.tcx.sess.span_err(sp, msg);\n           }\n         }"}, {"sha": "d646d6db07f821554ac43a3a3b25711e12fdc862", "filename": "src/test/compile-fail/kindck-implicit-close-over-mut-var.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/b744f52620821ed665eb1ac9c36f862a0b72eaf4/src%2Ftest%2Fcompile-fail%2Fkindck-implicit-close-over-mut-var.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b744f52620821ed665eb1ac9c36f862a0b72eaf4/src%2Ftest%2Fcompile-fail%2Fkindck-implicit-close-over-mut-var.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fkindck-implicit-close-over-mut-var.rs?ref=b744f52620821ed665eb1ac9c36f862a0b72eaf4", "patch": "@@ -1,10 +1,10 @@\n fn use(_i: int) {}\n \n fn foo() {\n-    // Here, i is *moved* into the closure: OK\n+    // Here, i is *moved* into the closure: Not actually OK\n     let mut i = 0;\n     task::spawn {||\n-        use(i);\n+        use(i); //! ERROR mutable variables cannot be implicitly captured\n     }\n }\n \n@@ -32,4 +32,4 @@ fn car() {\n }\n \n fn main() {\n-}\n\\ No newline at end of file\n+}"}]}