{"sha": "981346fc07dd5ef414c5b1b21999f7604cece006", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk4MTM0NmZjMDdkZDVlZjQxNGM1YjFiMjE5OTlmNzYwNGNlY2UwMDY=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-10-20T16:59:23Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-10-20T16:59:23Z"}, "message": "Auto merge of #78151 - tmiasko:disable-match-branch-simplification, r=wesleywiser\n\nDisable MatchBranchSimplification\n\nThis optimization can result in unsoundness, because it introduces\nadditional uses of a place holding the discriminant value without\nensuring that it is valid to do so.\n\nFound by validation from #77369 / #78147.", "tree": {"sha": "7ef3070474d5953a659ea06ea86d544cf81ea748", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7ef3070474d5953a659ea06ea86d544cf81ea748"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/981346fc07dd5ef414c5b1b21999f7604cece006", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/981346fc07dd5ef414c5b1b21999f7604cece006", "html_url": "https://github.com/rust-lang/rust/commit/981346fc07dd5ef414c5b1b21999f7604cece006", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/981346fc07dd5ef414c5b1b21999f7604cece006/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9832374f6e378971e1a933362cf9781b121bb845", "url": "https://api.github.com/repos/rust-lang/rust/commits/9832374f6e378971e1a933362cf9781b121bb845", "html_url": "https://github.com/rust-lang/rust/commit/9832374f6e378971e1a933362cf9781b121bb845"}, {"sha": "c2af254e3bc20792da5ddc21eaf2306b2c379f1a", "url": "https://api.github.com/repos/rust-lang/rust/commits/c2af254e3bc20792da5ddc21eaf2306b2c379f1a", "html_url": "https://github.com/rust-lang/rust/commit/c2af254e3bc20792da5ddc21eaf2306b2c379f1a"}], "stats": {"total": 329, "additions": 179, "deletions": 150}, "files": [{"sha": "0f9b2ff5ab81ef798d8ba1041639c80848ae4185", "filename": "compiler/rustc_mir/src/transform/match_branches.rs", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/981346fc07dd5ef414c5b1b21999f7604cece006/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Fmatch_branches.rs", "raw_url": "https://github.com/rust-lang/rust/raw/981346fc07dd5ef414c5b1b21999f7604cece006/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Fmatch_branches.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Fmatch_branches.rs?ref=981346fc07dd5ef414c5b1b21999f7604cece006", "patch": "@@ -38,6 +38,13 @@ pub struct MatchBranchSimplification;\n \n impl<'tcx> MirPass<'tcx> for MatchBranchSimplification {\n     fn run_pass(&self, tcx: TyCtxt<'tcx>, body: &mut Body<'tcx>) {\n+        // FIXME: This optimization can result in unsoundness, because it introduces\n+        // additional uses of a place holding the discriminant value without ensuring that\n+        // it is valid to do so.\n+        if !tcx.sess.opts.debugging_opts.unsound_mir_opts {\n+            return;\n+        }\n+\n         let param_env = tcx.param_env(body.source.def_id());\n         let bbs = body.basic_blocks_mut();\n         'outer: for bb_idx in bbs.indices() {"}, {"sha": "648cf241cbaba0ac7e9d1f3006a1dbc4395a11e9", "filename": "src/test/mir-opt/matches_reduce_branches.bar.MatchBranchSimplification.32bit.diff", "status": "modified", "additions": 58, "deletions": 58, "changes": 116, "blob_url": "https://github.com/rust-lang/rust/blob/981346fc07dd5ef414c5b1b21999f7604cece006/src%2Ftest%2Fmir-opt%2Fmatches_reduce_branches.bar.MatchBranchSimplification.32bit.diff", "raw_url": "https://github.com/rust-lang/rust/raw/981346fc07dd5ef414c5b1b21999f7604cece006/src%2Ftest%2Fmir-opt%2Fmatches_reduce_branches.bar.MatchBranchSimplification.32bit.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fmatches_reduce_branches.bar.MatchBranchSimplification.32bit.diff?ref=981346fc07dd5ef414c5b1b21999f7604cece006", "patch": "@@ -2,83 +2,83 @@\n + // MIR for `bar` after MatchBranchSimplification\n   \n   fn bar(_1: i32) -> (bool, bool, bool, bool) {\n-      debug i => _1;                       // in scope 0 at $DIR/matches_reduce_branches.rs:11:8: 11:9\n-      let mut _0: (bool, bool, bool, bool); // return place in scope 0 at $DIR/matches_reduce_branches.rs:11:19: 11:43\n-      let _2: bool;                        // in scope 0 at $DIR/matches_reduce_branches.rs:12:9: 12:10\n-      let _6: ();                          // in scope 0 at $DIR/matches_reduce_branches.rs:17:5: 32:6\n-      let mut _7: bool;                    // in scope 0 at $DIR/matches_reduce_branches.rs:34:6: 34:7\n-      let mut _8: bool;                    // in scope 0 at $DIR/matches_reduce_branches.rs:34:9: 34:10\n-      let mut _9: bool;                    // in scope 0 at $DIR/matches_reduce_branches.rs:34:12: 34:13\n-      let mut _10: bool;                   // in scope 0 at $DIR/matches_reduce_branches.rs:34:15: 34:16\n+      debug i => _1;                       // in scope 0 at $DIR/matches_reduce_branches.rs:12:8: 12:9\n+      let mut _0: (bool, bool, bool, bool); // return place in scope 0 at $DIR/matches_reduce_branches.rs:12:19: 12:43\n+      let _2: bool;                        // in scope 0 at $DIR/matches_reduce_branches.rs:13:9: 13:10\n+      let _6: ();                          // in scope 0 at $DIR/matches_reduce_branches.rs:18:5: 33:6\n+      let mut _7: bool;                    // in scope 0 at $DIR/matches_reduce_branches.rs:35:6: 35:7\n+      let mut _8: bool;                    // in scope 0 at $DIR/matches_reduce_branches.rs:35:9: 35:10\n+      let mut _9: bool;                    // in scope 0 at $DIR/matches_reduce_branches.rs:35:12: 35:13\n+      let mut _10: bool;                   // in scope 0 at $DIR/matches_reduce_branches.rs:35:15: 35:16\n       scope 1 {\n-          debug a => _2;                   // in scope 1 at $DIR/matches_reduce_branches.rs:12:9: 12:10\n-          let _3: bool;                    // in scope 1 at $DIR/matches_reduce_branches.rs:13:9: 13:10\n+          debug a => _2;                   // in scope 1 at $DIR/matches_reduce_branches.rs:13:9: 13:10\n+          let _3: bool;                    // in scope 1 at $DIR/matches_reduce_branches.rs:14:9: 14:10\n           scope 2 {\n-              debug b => _3;               // in scope 2 at $DIR/matches_reduce_branches.rs:13:9: 13:10\n-              let _4: bool;                // in scope 2 at $DIR/matches_reduce_branches.rs:14:9: 14:10\n+              debug b => _3;               // in scope 2 at $DIR/matches_reduce_branches.rs:14:9: 14:10\n+              let _4: bool;                // in scope 2 at $DIR/matches_reduce_branches.rs:15:9: 15:10\n               scope 3 {\n-                  debug c => _4;           // in scope 3 at $DIR/matches_reduce_branches.rs:14:9: 14:10\n-                  let _5: bool;            // in scope 3 at $DIR/matches_reduce_branches.rs:15:9: 15:10\n+                  debug c => _4;           // in scope 3 at $DIR/matches_reduce_branches.rs:15:9: 15:10\n+                  let _5: bool;            // in scope 3 at $DIR/matches_reduce_branches.rs:16:9: 16:10\n                   scope 4 {\n-                      debug d => _5;       // in scope 4 at $DIR/matches_reduce_branches.rs:15:9: 15:10\n+                      debug d => _5;       // in scope 4 at $DIR/matches_reduce_branches.rs:16:9: 16:10\n                   }\n               }\n           }\n       }\n   \n       bb0: {\n-          StorageLive(_2);                 // scope 0 at $DIR/matches_reduce_branches.rs:12:9: 12:10\n-          StorageLive(_3);                 // scope 1 at $DIR/matches_reduce_branches.rs:13:9: 13:10\n-          StorageLive(_4);                 // scope 2 at $DIR/matches_reduce_branches.rs:14:9: 14:10\n-          StorageLive(_5);                 // scope 3 at $DIR/matches_reduce_branches.rs:15:9: 15:10\n-          StorageLive(_6);                 // scope 4 at $DIR/matches_reduce_branches.rs:17:5: 32:6\n--         switchInt(_1) -> [7_i32: bb2, otherwise: bb1]; // scope 4 at $DIR/matches_reduce_branches.rs:18:9: 18:10\n-+         _2 = Ne(_1, const 7_i32);        // scope 4 at $DIR/matches_reduce_branches.rs:19:13: 19:22\n-+         _3 = Eq(_1, const 7_i32);        // scope 4 at $DIR/matches_reduce_branches.rs:20:13: 20:21\n-+         _4 = const false;                // scope 4 at $DIR/matches_reduce_branches.rs:21:13: 21:22\n-+         _5 = const true;                 // scope 4 at $DIR/matches_reduce_branches.rs:22:13: 22:21\n-+         goto -> bb3;                     // scope 4 at $DIR/matches_reduce_branches.rs:18:9: 18:10\n+          StorageLive(_2);                 // scope 0 at $DIR/matches_reduce_branches.rs:13:9: 13:10\n+          StorageLive(_3);                 // scope 1 at $DIR/matches_reduce_branches.rs:14:9: 14:10\n+          StorageLive(_4);                 // scope 2 at $DIR/matches_reduce_branches.rs:15:9: 15:10\n+          StorageLive(_5);                 // scope 3 at $DIR/matches_reduce_branches.rs:16:9: 16:10\n+          StorageLive(_6);                 // scope 4 at $DIR/matches_reduce_branches.rs:18:5: 33:6\n+-         switchInt(_1) -> [7_i32: bb2, otherwise: bb1]; // scope 4 at $DIR/matches_reduce_branches.rs:19:9: 19:10\n++         _2 = Ne(_1, const 7_i32);        // scope 4 at $DIR/matches_reduce_branches.rs:20:13: 20:22\n++         _3 = Eq(_1, const 7_i32);        // scope 4 at $DIR/matches_reduce_branches.rs:21:13: 21:21\n++         _4 = const false;                // scope 4 at $DIR/matches_reduce_branches.rs:22:13: 22:22\n++         _5 = const true;                 // scope 4 at $DIR/matches_reduce_branches.rs:23:13: 23:21\n++         goto -> bb3;                     // scope 4 at $DIR/matches_reduce_branches.rs:19:9: 19:10\n       }\n   \n       bb1: {\n-          _2 = const true;                 // scope 4 at $DIR/matches_reduce_branches.rs:26:13: 26:21\n-          _3 = const false;                // scope 4 at $DIR/matches_reduce_branches.rs:27:13: 27:22\n-          _4 = const false;                // scope 4 at $DIR/matches_reduce_branches.rs:28:13: 28:22\n-          _5 = const true;                 // scope 4 at $DIR/matches_reduce_branches.rs:29:13: 29:21\n-          goto -> bb3;                     // scope 4 at $DIR/matches_reduce_branches.rs:17:5: 32:6\n+          _2 = const true;                 // scope 4 at $DIR/matches_reduce_branches.rs:27:13: 27:21\n+          _3 = const false;                // scope 4 at $DIR/matches_reduce_branches.rs:28:13: 28:22\n+          _4 = const false;                // scope 4 at $DIR/matches_reduce_branches.rs:29:13: 29:22\n+          _5 = const true;                 // scope 4 at $DIR/matches_reduce_branches.rs:30:13: 30:21\n+          goto -> bb3;                     // scope 4 at $DIR/matches_reduce_branches.rs:18:5: 33:6\n       }\n   \n       bb2: {\n-          _2 = const false;                // scope 4 at $DIR/matches_reduce_branches.rs:19:13: 19:22\n-          _3 = const true;                 // scope 4 at $DIR/matches_reduce_branches.rs:20:13: 20:21\n-          _4 = const false;                // scope 4 at $DIR/matches_reduce_branches.rs:21:13: 21:22\n-          _5 = const true;                 // scope 4 at $DIR/matches_reduce_branches.rs:22:13: 22:21\n-          goto -> bb3;                     // scope 4 at $DIR/matches_reduce_branches.rs:17:5: 32:6\n+          _2 = const false;                // scope 4 at $DIR/matches_reduce_branches.rs:20:13: 20:22\n+          _3 = const true;                 // scope 4 at $DIR/matches_reduce_branches.rs:21:13: 21:21\n+          _4 = const false;                // scope 4 at $DIR/matches_reduce_branches.rs:22:13: 22:22\n+          _5 = const true;                 // scope 4 at $DIR/matches_reduce_branches.rs:23:13: 23:21\n+          goto -> bb3;                     // scope 4 at $DIR/matches_reduce_branches.rs:18:5: 33:6\n       }\n   \n       bb3: {\n-          StorageDead(_6);                 // scope 4 at $DIR/matches_reduce_branches.rs:32:6: 32:7\n-          StorageLive(_7);                 // scope 4 at $DIR/matches_reduce_branches.rs:34:6: 34:7\n-          _7 = _2;                         // scope 4 at $DIR/matches_reduce_branches.rs:34:6: 34:7\n-          StorageLive(_8);                 // scope 4 at $DIR/matches_reduce_branches.rs:34:9: 34:10\n-          _8 = _3;                         // scope 4 at $DIR/matches_reduce_branches.rs:34:9: 34:10\n-          StorageLive(_9);                 // scope 4 at $DIR/matches_reduce_branches.rs:34:12: 34:13\n-          _9 = _4;                         // scope 4 at $DIR/matches_reduce_branches.rs:34:12: 34:13\n-          StorageLive(_10);                // scope 4 at $DIR/matches_reduce_branches.rs:34:15: 34:16\n-          _10 = _5;                        // scope 4 at $DIR/matches_reduce_branches.rs:34:15: 34:16\n-          (_0.0: bool) = move _7;          // scope 4 at $DIR/matches_reduce_branches.rs:34:5: 34:17\n-          (_0.1: bool) = move _8;          // scope 4 at $DIR/matches_reduce_branches.rs:34:5: 34:17\n-          (_0.2: bool) = move _9;          // scope 4 at $DIR/matches_reduce_branches.rs:34:5: 34:17\n-          (_0.3: bool) = move _10;         // scope 4 at $DIR/matches_reduce_branches.rs:34:5: 34:17\n-          StorageDead(_10);                // scope 4 at $DIR/matches_reduce_branches.rs:34:16: 34:17\n-          StorageDead(_9);                 // scope 4 at $DIR/matches_reduce_branches.rs:34:16: 34:17\n-          StorageDead(_8);                 // scope 4 at $DIR/matches_reduce_branches.rs:34:16: 34:17\n-          StorageDead(_7);                 // scope 4 at $DIR/matches_reduce_branches.rs:34:16: 34:17\n-          StorageDead(_5);                 // scope 3 at $DIR/matches_reduce_branches.rs:35:1: 35:2\n-          StorageDead(_4);                 // scope 2 at $DIR/matches_reduce_branches.rs:35:1: 35:2\n-          StorageDead(_3);                 // scope 1 at $DIR/matches_reduce_branches.rs:35:1: 35:2\n-          StorageDead(_2);                 // scope 0 at $DIR/matches_reduce_branches.rs:35:1: 35:2\n-          return;                          // scope 0 at $DIR/matches_reduce_branches.rs:35:2: 35:2\n+          StorageDead(_6);                 // scope 4 at $DIR/matches_reduce_branches.rs:33:6: 33:7\n+          StorageLive(_7);                 // scope 4 at $DIR/matches_reduce_branches.rs:35:6: 35:7\n+          _7 = _2;                         // scope 4 at $DIR/matches_reduce_branches.rs:35:6: 35:7\n+          StorageLive(_8);                 // scope 4 at $DIR/matches_reduce_branches.rs:35:9: 35:10\n+          _8 = _3;                         // scope 4 at $DIR/matches_reduce_branches.rs:35:9: 35:10\n+          StorageLive(_9);                 // scope 4 at $DIR/matches_reduce_branches.rs:35:12: 35:13\n+          _9 = _4;                         // scope 4 at $DIR/matches_reduce_branches.rs:35:12: 35:13\n+          StorageLive(_10);                // scope 4 at $DIR/matches_reduce_branches.rs:35:15: 35:16\n+          _10 = _5;                        // scope 4 at $DIR/matches_reduce_branches.rs:35:15: 35:16\n+          (_0.0: bool) = move _7;          // scope 4 at $DIR/matches_reduce_branches.rs:35:5: 35:17\n+          (_0.1: bool) = move _8;          // scope 4 at $DIR/matches_reduce_branches.rs:35:5: 35:17\n+          (_0.2: bool) = move _9;          // scope 4 at $DIR/matches_reduce_branches.rs:35:5: 35:17\n+          (_0.3: bool) = move _10;         // scope 4 at $DIR/matches_reduce_branches.rs:35:5: 35:17\n+          StorageDead(_10);                // scope 4 at $DIR/matches_reduce_branches.rs:35:16: 35:17\n+          StorageDead(_9);                 // scope 4 at $DIR/matches_reduce_branches.rs:35:16: 35:17\n+          StorageDead(_8);                 // scope 4 at $DIR/matches_reduce_branches.rs:35:16: 35:17\n+          StorageDead(_7);                 // scope 4 at $DIR/matches_reduce_branches.rs:35:16: 35:17\n+          StorageDead(_5);                 // scope 3 at $DIR/matches_reduce_branches.rs:36:1: 36:2\n+          StorageDead(_4);                 // scope 2 at $DIR/matches_reduce_branches.rs:36:1: 36:2\n+          StorageDead(_3);                 // scope 1 at $DIR/matches_reduce_branches.rs:36:1: 36:2\n+          StorageDead(_2);                 // scope 0 at $DIR/matches_reduce_branches.rs:36:1: 36:2\n+          return;                          // scope 0 at $DIR/matches_reduce_branches.rs:36:2: 36:2\n       }\n   }\n   "}, {"sha": "648cf241cbaba0ac7e9d1f3006a1dbc4395a11e9", "filename": "src/test/mir-opt/matches_reduce_branches.bar.MatchBranchSimplification.64bit.diff", "status": "modified", "additions": 58, "deletions": 58, "changes": 116, "blob_url": "https://github.com/rust-lang/rust/blob/981346fc07dd5ef414c5b1b21999f7604cece006/src%2Ftest%2Fmir-opt%2Fmatches_reduce_branches.bar.MatchBranchSimplification.64bit.diff", "raw_url": "https://github.com/rust-lang/rust/raw/981346fc07dd5ef414c5b1b21999f7604cece006/src%2Ftest%2Fmir-opt%2Fmatches_reduce_branches.bar.MatchBranchSimplification.64bit.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fmatches_reduce_branches.bar.MatchBranchSimplification.64bit.diff?ref=981346fc07dd5ef414c5b1b21999f7604cece006", "patch": "@@ -2,83 +2,83 @@\n + // MIR for `bar` after MatchBranchSimplification\n   \n   fn bar(_1: i32) -> (bool, bool, bool, bool) {\n-      debug i => _1;                       // in scope 0 at $DIR/matches_reduce_branches.rs:11:8: 11:9\n-      let mut _0: (bool, bool, bool, bool); // return place in scope 0 at $DIR/matches_reduce_branches.rs:11:19: 11:43\n-      let _2: bool;                        // in scope 0 at $DIR/matches_reduce_branches.rs:12:9: 12:10\n-      let _6: ();                          // in scope 0 at $DIR/matches_reduce_branches.rs:17:5: 32:6\n-      let mut _7: bool;                    // in scope 0 at $DIR/matches_reduce_branches.rs:34:6: 34:7\n-      let mut _8: bool;                    // in scope 0 at $DIR/matches_reduce_branches.rs:34:9: 34:10\n-      let mut _9: bool;                    // in scope 0 at $DIR/matches_reduce_branches.rs:34:12: 34:13\n-      let mut _10: bool;                   // in scope 0 at $DIR/matches_reduce_branches.rs:34:15: 34:16\n+      debug i => _1;                       // in scope 0 at $DIR/matches_reduce_branches.rs:12:8: 12:9\n+      let mut _0: (bool, bool, bool, bool); // return place in scope 0 at $DIR/matches_reduce_branches.rs:12:19: 12:43\n+      let _2: bool;                        // in scope 0 at $DIR/matches_reduce_branches.rs:13:9: 13:10\n+      let _6: ();                          // in scope 0 at $DIR/matches_reduce_branches.rs:18:5: 33:6\n+      let mut _7: bool;                    // in scope 0 at $DIR/matches_reduce_branches.rs:35:6: 35:7\n+      let mut _8: bool;                    // in scope 0 at $DIR/matches_reduce_branches.rs:35:9: 35:10\n+      let mut _9: bool;                    // in scope 0 at $DIR/matches_reduce_branches.rs:35:12: 35:13\n+      let mut _10: bool;                   // in scope 0 at $DIR/matches_reduce_branches.rs:35:15: 35:16\n       scope 1 {\n-          debug a => _2;                   // in scope 1 at $DIR/matches_reduce_branches.rs:12:9: 12:10\n-          let _3: bool;                    // in scope 1 at $DIR/matches_reduce_branches.rs:13:9: 13:10\n+          debug a => _2;                   // in scope 1 at $DIR/matches_reduce_branches.rs:13:9: 13:10\n+          let _3: bool;                    // in scope 1 at $DIR/matches_reduce_branches.rs:14:9: 14:10\n           scope 2 {\n-              debug b => _3;               // in scope 2 at $DIR/matches_reduce_branches.rs:13:9: 13:10\n-              let _4: bool;                // in scope 2 at $DIR/matches_reduce_branches.rs:14:9: 14:10\n+              debug b => _3;               // in scope 2 at $DIR/matches_reduce_branches.rs:14:9: 14:10\n+              let _4: bool;                // in scope 2 at $DIR/matches_reduce_branches.rs:15:9: 15:10\n               scope 3 {\n-                  debug c => _4;           // in scope 3 at $DIR/matches_reduce_branches.rs:14:9: 14:10\n-                  let _5: bool;            // in scope 3 at $DIR/matches_reduce_branches.rs:15:9: 15:10\n+                  debug c => _4;           // in scope 3 at $DIR/matches_reduce_branches.rs:15:9: 15:10\n+                  let _5: bool;            // in scope 3 at $DIR/matches_reduce_branches.rs:16:9: 16:10\n                   scope 4 {\n-                      debug d => _5;       // in scope 4 at $DIR/matches_reduce_branches.rs:15:9: 15:10\n+                      debug d => _5;       // in scope 4 at $DIR/matches_reduce_branches.rs:16:9: 16:10\n                   }\n               }\n           }\n       }\n   \n       bb0: {\n-          StorageLive(_2);                 // scope 0 at $DIR/matches_reduce_branches.rs:12:9: 12:10\n-          StorageLive(_3);                 // scope 1 at $DIR/matches_reduce_branches.rs:13:9: 13:10\n-          StorageLive(_4);                 // scope 2 at $DIR/matches_reduce_branches.rs:14:9: 14:10\n-          StorageLive(_5);                 // scope 3 at $DIR/matches_reduce_branches.rs:15:9: 15:10\n-          StorageLive(_6);                 // scope 4 at $DIR/matches_reduce_branches.rs:17:5: 32:6\n--         switchInt(_1) -> [7_i32: bb2, otherwise: bb1]; // scope 4 at $DIR/matches_reduce_branches.rs:18:9: 18:10\n-+         _2 = Ne(_1, const 7_i32);        // scope 4 at $DIR/matches_reduce_branches.rs:19:13: 19:22\n-+         _3 = Eq(_1, const 7_i32);        // scope 4 at $DIR/matches_reduce_branches.rs:20:13: 20:21\n-+         _4 = const false;                // scope 4 at $DIR/matches_reduce_branches.rs:21:13: 21:22\n-+         _5 = const true;                 // scope 4 at $DIR/matches_reduce_branches.rs:22:13: 22:21\n-+         goto -> bb3;                     // scope 4 at $DIR/matches_reduce_branches.rs:18:9: 18:10\n+          StorageLive(_2);                 // scope 0 at $DIR/matches_reduce_branches.rs:13:9: 13:10\n+          StorageLive(_3);                 // scope 1 at $DIR/matches_reduce_branches.rs:14:9: 14:10\n+          StorageLive(_4);                 // scope 2 at $DIR/matches_reduce_branches.rs:15:9: 15:10\n+          StorageLive(_5);                 // scope 3 at $DIR/matches_reduce_branches.rs:16:9: 16:10\n+          StorageLive(_6);                 // scope 4 at $DIR/matches_reduce_branches.rs:18:5: 33:6\n+-         switchInt(_1) -> [7_i32: bb2, otherwise: bb1]; // scope 4 at $DIR/matches_reduce_branches.rs:19:9: 19:10\n++         _2 = Ne(_1, const 7_i32);        // scope 4 at $DIR/matches_reduce_branches.rs:20:13: 20:22\n++         _3 = Eq(_1, const 7_i32);        // scope 4 at $DIR/matches_reduce_branches.rs:21:13: 21:21\n++         _4 = const false;                // scope 4 at $DIR/matches_reduce_branches.rs:22:13: 22:22\n++         _5 = const true;                 // scope 4 at $DIR/matches_reduce_branches.rs:23:13: 23:21\n++         goto -> bb3;                     // scope 4 at $DIR/matches_reduce_branches.rs:19:9: 19:10\n       }\n   \n       bb1: {\n-          _2 = const true;                 // scope 4 at $DIR/matches_reduce_branches.rs:26:13: 26:21\n-          _3 = const false;                // scope 4 at $DIR/matches_reduce_branches.rs:27:13: 27:22\n-          _4 = const false;                // scope 4 at $DIR/matches_reduce_branches.rs:28:13: 28:22\n-          _5 = const true;                 // scope 4 at $DIR/matches_reduce_branches.rs:29:13: 29:21\n-          goto -> bb3;                     // scope 4 at $DIR/matches_reduce_branches.rs:17:5: 32:6\n+          _2 = const true;                 // scope 4 at $DIR/matches_reduce_branches.rs:27:13: 27:21\n+          _3 = const false;                // scope 4 at $DIR/matches_reduce_branches.rs:28:13: 28:22\n+          _4 = const false;                // scope 4 at $DIR/matches_reduce_branches.rs:29:13: 29:22\n+          _5 = const true;                 // scope 4 at $DIR/matches_reduce_branches.rs:30:13: 30:21\n+          goto -> bb3;                     // scope 4 at $DIR/matches_reduce_branches.rs:18:5: 33:6\n       }\n   \n       bb2: {\n-          _2 = const false;                // scope 4 at $DIR/matches_reduce_branches.rs:19:13: 19:22\n-          _3 = const true;                 // scope 4 at $DIR/matches_reduce_branches.rs:20:13: 20:21\n-          _4 = const false;                // scope 4 at $DIR/matches_reduce_branches.rs:21:13: 21:22\n-          _5 = const true;                 // scope 4 at $DIR/matches_reduce_branches.rs:22:13: 22:21\n-          goto -> bb3;                     // scope 4 at $DIR/matches_reduce_branches.rs:17:5: 32:6\n+          _2 = const false;                // scope 4 at $DIR/matches_reduce_branches.rs:20:13: 20:22\n+          _3 = const true;                 // scope 4 at $DIR/matches_reduce_branches.rs:21:13: 21:21\n+          _4 = const false;                // scope 4 at $DIR/matches_reduce_branches.rs:22:13: 22:22\n+          _5 = const true;                 // scope 4 at $DIR/matches_reduce_branches.rs:23:13: 23:21\n+          goto -> bb3;                     // scope 4 at $DIR/matches_reduce_branches.rs:18:5: 33:6\n       }\n   \n       bb3: {\n-          StorageDead(_6);                 // scope 4 at $DIR/matches_reduce_branches.rs:32:6: 32:7\n-          StorageLive(_7);                 // scope 4 at $DIR/matches_reduce_branches.rs:34:6: 34:7\n-          _7 = _2;                         // scope 4 at $DIR/matches_reduce_branches.rs:34:6: 34:7\n-          StorageLive(_8);                 // scope 4 at $DIR/matches_reduce_branches.rs:34:9: 34:10\n-          _8 = _3;                         // scope 4 at $DIR/matches_reduce_branches.rs:34:9: 34:10\n-          StorageLive(_9);                 // scope 4 at $DIR/matches_reduce_branches.rs:34:12: 34:13\n-          _9 = _4;                         // scope 4 at $DIR/matches_reduce_branches.rs:34:12: 34:13\n-          StorageLive(_10);                // scope 4 at $DIR/matches_reduce_branches.rs:34:15: 34:16\n-          _10 = _5;                        // scope 4 at $DIR/matches_reduce_branches.rs:34:15: 34:16\n-          (_0.0: bool) = move _7;          // scope 4 at $DIR/matches_reduce_branches.rs:34:5: 34:17\n-          (_0.1: bool) = move _8;          // scope 4 at $DIR/matches_reduce_branches.rs:34:5: 34:17\n-          (_0.2: bool) = move _9;          // scope 4 at $DIR/matches_reduce_branches.rs:34:5: 34:17\n-          (_0.3: bool) = move _10;         // scope 4 at $DIR/matches_reduce_branches.rs:34:5: 34:17\n-          StorageDead(_10);                // scope 4 at $DIR/matches_reduce_branches.rs:34:16: 34:17\n-          StorageDead(_9);                 // scope 4 at $DIR/matches_reduce_branches.rs:34:16: 34:17\n-          StorageDead(_8);                 // scope 4 at $DIR/matches_reduce_branches.rs:34:16: 34:17\n-          StorageDead(_7);                 // scope 4 at $DIR/matches_reduce_branches.rs:34:16: 34:17\n-          StorageDead(_5);                 // scope 3 at $DIR/matches_reduce_branches.rs:35:1: 35:2\n-          StorageDead(_4);                 // scope 2 at $DIR/matches_reduce_branches.rs:35:1: 35:2\n-          StorageDead(_3);                 // scope 1 at $DIR/matches_reduce_branches.rs:35:1: 35:2\n-          StorageDead(_2);                 // scope 0 at $DIR/matches_reduce_branches.rs:35:1: 35:2\n-          return;                          // scope 0 at $DIR/matches_reduce_branches.rs:35:2: 35:2\n+          StorageDead(_6);                 // scope 4 at $DIR/matches_reduce_branches.rs:33:6: 33:7\n+          StorageLive(_7);                 // scope 4 at $DIR/matches_reduce_branches.rs:35:6: 35:7\n+          _7 = _2;                         // scope 4 at $DIR/matches_reduce_branches.rs:35:6: 35:7\n+          StorageLive(_8);                 // scope 4 at $DIR/matches_reduce_branches.rs:35:9: 35:10\n+          _8 = _3;                         // scope 4 at $DIR/matches_reduce_branches.rs:35:9: 35:10\n+          StorageLive(_9);                 // scope 4 at $DIR/matches_reduce_branches.rs:35:12: 35:13\n+          _9 = _4;                         // scope 4 at $DIR/matches_reduce_branches.rs:35:12: 35:13\n+          StorageLive(_10);                // scope 4 at $DIR/matches_reduce_branches.rs:35:15: 35:16\n+          _10 = _5;                        // scope 4 at $DIR/matches_reduce_branches.rs:35:15: 35:16\n+          (_0.0: bool) = move _7;          // scope 4 at $DIR/matches_reduce_branches.rs:35:5: 35:17\n+          (_0.1: bool) = move _8;          // scope 4 at $DIR/matches_reduce_branches.rs:35:5: 35:17\n+          (_0.2: bool) = move _9;          // scope 4 at $DIR/matches_reduce_branches.rs:35:5: 35:17\n+          (_0.3: bool) = move _10;         // scope 4 at $DIR/matches_reduce_branches.rs:35:5: 35:17\n+          StorageDead(_10);                // scope 4 at $DIR/matches_reduce_branches.rs:35:16: 35:17\n+          StorageDead(_9);                 // scope 4 at $DIR/matches_reduce_branches.rs:35:16: 35:17\n+          StorageDead(_8);                 // scope 4 at $DIR/matches_reduce_branches.rs:35:16: 35:17\n+          StorageDead(_7);                 // scope 4 at $DIR/matches_reduce_branches.rs:35:16: 35:17\n+          StorageDead(_5);                 // scope 3 at $DIR/matches_reduce_branches.rs:36:1: 36:2\n+          StorageDead(_4);                 // scope 2 at $DIR/matches_reduce_branches.rs:36:1: 36:2\n+          StorageDead(_3);                 // scope 1 at $DIR/matches_reduce_branches.rs:36:1: 36:2\n+          StorageDead(_2);                 // scope 0 at $DIR/matches_reduce_branches.rs:36:1: 36:2\n+          return;                          // scope 0 at $DIR/matches_reduce_branches.rs:36:2: 36:2\n       }\n   }\n   "}, {"sha": "a52abfb1a727d860b4e32507ac8494a2e81de7a1", "filename": "src/test/mir-opt/matches_reduce_branches.foo.MatchBranchSimplification.32bit.diff", "status": "modified", "additions": 11, "deletions": 11, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/981346fc07dd5ef414c5b1b21999f7604cece006/src%2Ftest%2Fmir-opt%2Fmatches_reduce_branches.foo.MatchBranchSimplification.32bit.diff", "raw_url": "https://github.com/rust-lang/rust/raw/981346fc07dd5ef414c5b1b21999f7604cece006/src%2Ftest%2Fmir-opt%2Fmatches_reduce_branches.foo.MatchBranchSimplification.32bit.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fmatches_reduce_branches.foo.MatchBranchSimplification.32bit.diff?ref=981346fc07dd5ef414c5b1b21999f7604cece006", "patch": "@@ -2,17 +2,17 @@\n + // MIR for `foo` after MatchBranchSimplification\n   \n   fn foo(_1: Option<()>) -> () {\n-      debug bar => _1;                     // in scope 0 at $DIR/matches_reduce_branches.rs:5:8: 5:11\n-      let mut _0: ();                      // return place in scope 0 at $DIR/matches_reduce_branches.rs:5:25: 5:25\n+      debug bar => _1;                     // in scope 0 at $DIR/matches_reduce_branches.rs:6:8: 6:11\n+      let mut _0: ();                      // return place in scope 0 at $DIR/matches_reduce_branches.rs:6:25: 6:25\n       let mut _2: bool;                    // in scope 0 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n-      let mut _3: isize;                   // in scope 0 at $DIR/matches_reduce_branches.rs:6:22: 6:26\n+      let mut _3: isize;                   // in scope 0 at $DIR/matches_reduce_branches.rs:7:22: 7:26\n   \n       bb0: {\n           StorageLive(_2);                 // scope 0 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n-          _3 = discriminant(_1);           // scope 0 at $DIR/matches_reduce_branches.rs:6:22: 6:26\n--         switchInt(move _3) -> [0_isize: bb2, otherwise: bb1]; // scope 0 at $DIR/matches_reduce_branches.rs:6:22: 6:26\n+          _3 = discriminant(_1);           // scope 0 at $DIR/matches_reduce_branches.rs:7:22: 7:26\n+-         switchInt(move _3) -> [0_isize: bb2, otherwise: bb1]; // scope 0 at $DIR/matches_reduce_branches.rs:7:22: 7:26\n +         _2 = Eq(_3, const 0_isize);      // scope 0 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n-+         goto -> bb3;                     // scope 0 at $DIR/matches_reduce_branches.rs:6:22: 6:26\n++         goto -> bb3;                     // scope 0 at $DIR/matches_reduce_branches.rs:7:22: 7:26\n       }\n   \n       bb1: {\n@@ -26,17 +26,17 @@\n       }\n   \n       bb3: {\n-          switchInt(_2) -> [false: bb4, otherwise: bb5]; // scope 0 at $DIR/matches_reduce_branches.rs:6:5: 8:6\n+          switchInt(_2) -> [false: bb4, otherwise: bb5]; // scope 0 at $DIR/matches_reduce_branches.rs:7:5: 9:6\n       }\n   \n       bb4: {\n-          _0 = const ();                   // scope 0 at $DIR/matches_reduce_branches.rs:6:5: 8:6\n-          goto -> bb5;                     // scope 0 at $DIR/matches_reduce_branches.rs:6:5: 8:6\n+          _0 = const ();                   // scope 0 at $DIR/matches_reduce_branches.rs:7:5: 9:6\n+          goto -> bb5;                     // scope 0 at $DIR/matches_reduce_branches.rs:7:5: 9:6\n       }\n   \n       bb5: {\n-          StorageDead(_2);                 // scope 0 at $DIR/matches_reduce_branches.rs:9:1: 9:2\n-          return;                          // scope 0 at $DIR/matches_reduce_branches.rs:9:2: 9:2\n+          StorageDead(_2);                 // scope 0 at $DIR/matches_reduce_branches.rs:10:1: 10:2\n+          return;                          // scope 0 at $DIR/matches_reduce_branches.rs:10:2: 10:2\n       }\n   }\n   "}, {"sha": "a52abfb1a727d860b4e32507ac8494a2e81de7a1", "filename": "src/test/mir-opt/matches_reduce_branches.foo.MatchBranchSimplification.64bit.diff", "status": "modified", "additions": 11, "deletions": 11, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/981346fc07dd5ef414c5b1b21999f7604cece006/src%2Ftest%2Fmir-opt%2Fmatches_reduce_branches.foo.MatchBranchSimplification.64bit.diff", "raw_url": "https://github.com/rust-lang/rust/raw/981346fc07dd5ef414c5b1b21999f7604cece006/src%2Ftest%2Fmir-opt%2Fmatches_reduce_branches.foo.MatchBranchSimplification.64bit.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fmatches_reduce_branches.foo.MatchBranchSimplification.64bit.diff?ref=981346fc07dd5ef414c5b1b21999f7604cece006", "patch": "@@ -2,17 +2,17 @@\n + // MIR for `foo` after MatchBranchSimplification\n   \n   fn foo(_1: Option<()>) -> () {\n-      debug bar => _1;                     // in scope 0 at $DIR/matches_reduce_branches.rs:5:8: 5:11\n-      let mut _0: ();                      // return place in scope 0 at $DIR/matches_reduce_branches.rs:5:25: 5:25\n+      debug bar => _1;                     // in scope 0 at $DIR/matches_reduce_branches.rs:6:8: 6:11\n+      let mut _0: ();                      // return place in scope 0 at $DIR/matches_reduce_branches.rs:6:25: 6:25\n       let mut _2: bool;                    // in scope 0 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n-      let mut _3: isize;                   // in scope 0 at $DIR/matches_reduce_branches.rs:6:22: 6:26\n+      let mut _3: isize;                   // in scope 0 at $DIR/matches_reduce_branches.rs:7:22: 7:26\n   \n       bb0: {\n           StorageLive(_2);                 // scope 0 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n-          _3 = discriminant(_1);           // scope 0 at $DIR/matches_reduce_branches.rs:6:22: 6:26\n--         switchInt(move _3) -> [0_isize: bb2, otherwise: bb1]; // scope 0 at $DIR/matches_reduce_branches.rs:6:22: 6:26\n+          _3 = discriminant(_1);           // scope 0 at $DIR/matches_reduce_branches.rs:7:22: 7:26\n+-         switchInt(move _3) -> [0_isize: bb2, otherwise: bb1]; // scope 0 at $DIR/matches_reduce_branches.rs:7:22: 7:26\n +         _2 = Eq(_3, const 0_isize);      // scope 0 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n-+         goto -> bb3;                     // scope 0 at $DIR/matches_reduce_branches.rs:6:22: 6:26\n++         goto -> bb3;                     // scope 0 at $DIR/matches_reduce_branches.rs:7:22: 7:26\n       }\n   \n       bb1: {\n@@ -26,17 +26,17 @@\n       }\n   \n       bb3: {\n-          switchInt(_2) -> [false: bb4, otherwise: bb5]; // scope 0 at $DIR/matches_reduce_branches.rs:6:5: 8:6\n+          switchInt(_2) -> [false: bb4, otherwise: bb5]; // scope 0 at $DIR/matches_reduce_branches.rs:7:5: 9:6\n       }\n   \n       bb4: {\n-          _0 = const ();                   // scope 0 at $DIR/matches_reduce_branches.rs:6:5: 8:6\n-          goto -> bb5;                     // scope 0 at $DIR/matches_reduce_branches.rs:6:5: 8:6\n+          _0 = const ();                   // scope 0 at $DIR/matches_reduce_branches.rs:7:5: 9:6\n+          goto -> bb5;                     // scope 0 at $DIR/matches_reduce_branches.rs:7:5: 9:6\n       }\n   \n       bb5: {\n-          StorageDead(_2);                 // scope 0 at $DIR/matches_reduce_branches.rs:9:1: 9:2\n-          return;                          // scope 0 at $DIR/matches_reduce_branches.rs:9:2: 9:2\n+          StorageDead(_2);                 // scope 0 at $DIR/matches_reduce_branches.rs:10:1: 10:2\n+          return;                          // scope 0 at $DIR/matches_reduce_branches.rs:10:2: 10:2\n       }\n   }\n   "}, {"sha": "54b79a84263fe1983ee80af8014355ba8963c690", "filename": "src/test/mir-opt/matches_reduce_branches.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/981346fc07dd5ef414c5b1b21999f7604cece006/src%2Ftest%2Fmir-opt%2Fmatches_reduce_branches.rs", "raw_url": "https://github.com/rust-lang/rust/raw/981346fc07dd5ef414c5b1b21999f7604cece006/src%2Ftest%2Fmir-opt%2Fmatches_reduce_branches.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fmatches_reduce_branches.rs?ref=981346fc07dd5ef414c5b1b21999f7604cece006", "patch": "@@ -1,3 +1,4 @@\n+// compile-flags: -Zunsound-mir-opts\n // EMIT_MIR_FOR_EACH_BIT_WIDTH\n // EMIT_MIR matches_reduce_branches.foo.MatchBranchSimplification.diff\n // EMIT_MIR matches_reduce_branches.bar.MatchBranchSimplification.diff"}, {"sha": "39830946aebd647e560942d81684c3997d2c298f", "filename": "src/test/mir-opt/not_equal_false.opt.InstCombine.diff", "status": "modified", "additions": 33, "deletions": 12, "changes": 45, "blob_url": "https://github.com/rust-lang/rust/blob/981346fc07dd5ef414c5b1b21999f7604cece006/src%2Ftest%2Fmir-opt%2Fnot_equal_false.opt.InstCombine.diff", "raw_url": "https://github.com/rust-lang/rust/raw/981346fc07dd5ef414c5b1b21999f7604cece006/src%2Ftest%2Fmir-opt%2Fnot_equal_false.opt.InstCombine.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fnot_equal_false.opt.InstCombine.diff?ref=981346fc07dd5ef414c5b1b21999f7604cece006", "patch": "@@ -12,36 +12,57 @@\n       bb0: {\n           StorageLive(_2);                 // scope 0 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n           _3 = discriminant(_1);           // scope 0 at $DIR/not_equal_false.rs:4:17: 4:21\n-          _2 = Eq(_3, const 0_isize);      // scope 0 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n-          goto -> bb4;                     // scope 0 at $DIR/not_equal_false.rs:4:17: 4:21\n+          switchInt(move _3) -> [0_isize: bb6, otherwise: bb5]; // scope 0 at $DIR/not_equal_false.rs:4:17: 4:21\n       }\n   \n       bb1: {\n           _0 = const true;                 // scope 0 at $DIR/not_equal_false.rs:4:5: 4:46\n-          goto -> bb3;                     // scope 0 at $DIR/not_equal_false.rs:4:5: 4:46\n+          goto -> bb4;                     // scope 0 at $DIR/not_equal_false.rs:4:5: 4:46\n       }\n   \n       bb2: {\n+          _0 = const false;                // scope 0 at $DIR/not_equal_false.rs:4:5: 4:46\n+          goto -> bb4;                     // scope 0 at $DIR/not_equal_false.rs:4:5: 4:46\n+      }\n+  \n+      bb3: {\n           StorageLive(_4);                 // scope 0 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n           _5 = discriminant(_1);           // scope 0 at $DIR/not_equal_false.rs:4:38: 4:45\n-          _4 = Eq(_5, const 1_isize);      // scope 0 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n-          goto -> bb5;                     // scope 0 at $DIR/not_equal_false.rs:4:38: 4:45\n+          switchInt(move _5) -> [1_isize: bb9, otherwise: bb8]; // scope 0 at $DIR/not_equal_false.rs:4:38: 4:45\n       }\n   \n-      bb3: {\n+      bb4: {\n           StorageDead(_4);                 // scope 0 at $DIR/not_equal_false.rs:4:45: 4:46\n           StorageDead(_2);                 // scope 0 at $DIR/not_equal_false.rs:4:45: 4:46\n           return;                          // scope 0 at $DIR/not_equal_false.rs:5:2: 5:2\n       }\n   \n-      bb4: {\n-          switchInt(move _2) -> [false: bb2, otherwise: bb1]; // scope 0 at $DIR/not_equal_false.rs:4:5: 4:46\n+      bb5: {\n+          _2 = const false;                // scope 0 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+          goto -> bb7;                     // scope 0 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n       }\n   \n-      bb5: {\n--         _0 = Ne(_4, const false);        // scope 0 at $DIR/not_equal_false.rs:4:5: 4:46\n-+         _0 = _4;                         // scope 0 at $DIR/not_equal_false.rs:4:5: 4:46\n-          goto -> bb3;                     // scope 0 at $DIR/not_equal_false.rs:4:5: 4:46\n+      bb6: {\n+          _2 = const true;                 // scope 0 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+          goto -> bb7;                     // scope 0 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+      }\n+  \n+      bb7: {\n+          switchInt(move _2) -> [false: bb3, otherwise: bb1]; // scope 0 at $DIR/not_equal_false.rs:4:5: 4:46\n+      }\n+  \n+      bb8: {\n+          _4 = const false;                // scope 0 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+          goto -> bb10;                    // scope 0 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+      }\n+  \n+      bb9: {\n+          _4 = const true;                 // scope 0 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+          goto -> bb10;                    // scope 0 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+      }\n+  \n+      bb10: {\n+          switchInt(move _4) -> [false: bb2, otherwise: bb1]; // scope 0 at $DIR/not_equal_false.rs:4:5: 4:46\n       }\n   }\n   "}]}