{"sha": "efa11da26a882aaf57f7eae747e48d128c474bf3", "node_id": "MDY6Q29tbWl0NzI0NzEyOmVmYTExZGEyNmE4ODJhYWY1N2Y3ZWFlNzQ3ZTQ4ZDEyOGM0NzRiZjM=", "commit": {"author": {"name": "Josh Stone", "email": "jistone@redhat.com", "date": "2018-07-27T00:20:02Z"}, "committer": {"name": "Josh Stone", "email": "jistone@redhat.com", "date": "2018-07-27T00:20:02Z"}, "message": "rustc_metadata: test loading atoi instead of cos\n\nSome platforms don't actually have `libm` already linked in the test\ninfrastructure, and then `dynamic_lib::tests::test_loading_cosine` would\nfail to find the \"cos\" symbol.  Every platform running this test should\nhave `libc` and \"atoi\" though, so try to use that symbol instead.\n\nFixes #45410.", "tree": {"sha": "fd4cfe1c8a962355cd1003a29809344a810dc554", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fd4cfe1c8a962355cd1003a29809344a810dc554"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/efa11da26a882aaf57f7eae747e48d128c474bf3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/efa11da26a882aaf57f7eae747e48d128c474bf3", "html_url": "https://github.com/rust-lang/rust/commit/efa11da26a882aaf57f7eae747e48d128c474bf3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/efa11da26a882aaf57f7eae747e48d128c474bf3/comments", "author": {"login": "cuviper", "id": 36186, "node_id": "MDQ6VXNlcjM2MTg2", "avatar_url": "https://avatars.githubusercontent.com/u/36186?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cuviper", "html_url": "https://github.com/cuviper", "followers_url": "https://api.github.com/users/cuviper/followers", "following_url": "https://api.github.com/users/cuviper/following{/other_user}", "gists_url": "https://api.github.com/users/cuviper/gists{/gist_id}", "starred_url": "https://api.github.com/users/cuviper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cuviper/subscriptions", "organizations_url": "https://api.github.com/users/cuviper/orgs", "repos_url": "https://api.github.com/users/cuviper/repos", "events_url": "https://api.github.com/users/cuviper/events{/privacy}", "received_events_url": "https://api.github.com/users/cuviper/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cuviper", "id": 36186, "node_id": "MDQ6VXNlcjM2MTg2", "avatar_url": "https://avatars.githubusercontent.com/u/36186?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cuviper", "html_url": "https://github.com/cuviper", "followers_url": "https://api.github.com/users/cuviper/followers", "following_url": "https://api.github.com/users/cuviper/following{/other_user}", "gists_url": "https://api.github.com/users/cuviper/gists{/gist_id}", "starred_url": "https://api.github.com/users/cuviper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cuviper/subscriptions", "organizations_url": "https://api.github.com/users/cuviper/orgs", "repos_url": "https://api.github.com/users/cuviper/repos", "events_url": "https://api.github.com/users/cuviper/events{/privacy}", "received_events_url": "https://api.github.com/users/cuviper/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "45b48b9b6d70065a16cc119fe934ed342c664c78", "url": "https://api.github.com/repos/rust-lang/rust/commits/45b48b9b6d70065a16cc119fe934ed342c664c78", "html_url": "https://github.com/rust-lang/rust/commit/45b48b9b6d70065a16cc119fe934ed342c664c78"}], "stats": {"total": 25, "additions": 12, "deletions": 13}, "files": [{"sha": "182a071277ece97d193ec156af5951745a649c3d", "filename": "src/librustc_metadata/dynamic_lib.rs", "status": "modified", "additions": 12, "deletions": 13, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/efa11da26a882aaf57f7eae747e48d128c474bf3/src%2Flibrustc_metadata%2Fdynamic_lib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/efa11da26a882aaf57f7eae747e48d128c474bf3/src%2Flibrustc_metadata%2Fdynamic_lib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_metadata%2Fdynamic_lib.rs?ref=efa11da26a882aaf57f7eae747e48d128c474bf3", "patch": "@@ -90,30 +90,29 @@ mod tests {\n     use std::mem;\n \n     #[test]\n-    fn test_loading_cosine() {\n+    fn test_loading_atoi() {\n         if cfg!(windows) {\n             return\n         }\n \n-        // The math library does not need to be loaded since it is already\n-        // statically linked in\n-        let libm = match DynamicLibrary::open(None) {\n+        // The C library does not need to be loaded since it is already linked in\n+        let lib = match DynamicLibrary::open(None) {\n             Err(error) => panic!(\"Could not load self as module: {}\", error),\n-            Ok(libm) => libm\n+            Ok(lib) => lib\n         };\n \n-        let cosine: extern fn(libc::c_double) -> libc::c_double = unsafe {\n-            match libm.symbol(\"cos\") {\n-                Err(error) => panic!(\"Could not load function cos: {}\", error),\n-                Ok(cosine) => mem::transmute::<*mut u8, _>(cosine)\n+        let atoi: extern fn(*const libc::c_char) -> libc::c_int = unsafe {\n+            match lib.symbol(\"atoi\") {\n+                Err(error) => panic!(\"Could not load function atoi: {}\", error),\n+                Ok(atoi) => mem::transmute::<*mut u8, _>(atoi)\n             }\n         };\n \n-        let argument = 0.0;\n-        let expected_result = 1.0;\n-        let result = cosine(argument);\n+        let argument = CString::new(\"1383428980\").unwrap();\n+        let expected_result = 0x52757374;\n+        let result = atoi(argument.as_ptr());\n         if result != expected_result {\n-            panic!(\"cos({}) != {} but equaled {} instead\", argument,\n+            panic!(\"atoi({:?}) != {} but equaled {} instead\", argument,\n                    expected_result, result)\n         }\n     }"}]}