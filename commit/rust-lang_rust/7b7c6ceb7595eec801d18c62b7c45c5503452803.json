{"sha": "7b7c6ceb7595eec801d18c62b7c45c5503452803", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdiN2M2Y2ViNzU5NWVlYzgwMWQxOGM2MmI3YzQ1YzU1MDM0NTI4MDM=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2018-11-05T14:11:28Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2018-11-05T14:11:28Z"}, "message": "add method to obtain the ptr offset of a Scalar", "tree": {"sha": "7b865c9037a3c775d34630211265e913b845d3a9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7b865c9037a3c775d34630211265e913b845d3a9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7b7c6ceb7595eec801d18c62b7c45c5503452803", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7b7c6ceb7595eec801d18c62b7c45c5503452803", "html_url": "https://github.com/rust-lang/rust/commit/7b7c6ceb7595eec801d18c62b7c45c5503452803", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7b7c6ceb7595eec801d18c62b7c45c5503452803/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a0074cafb10567e76bbac508355059a12112d1ae", "url": "https://api.github.com/repos/rust-lang/rust/commits/a0074cafb10567e76bbac508355059a12112d1ae", "html_url": "https://github.com/rust-lang/rust/commit/a0074cafb10567e76bbac508355059a12112d1ae"}], "stats": {"total": 13, "additions": 13, "deletions": 0}, "files": [{"sha": "3f5399396abcf837ea2f3b874427cd197ffae868", "filename": "src/librustc/mir/interpret/value.rs", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/7b7c6ceb7595eec801d18c62b7c45c5503452803/src%2Flibrustc%2Fmir%2Finterpret%2Fvalue.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7b7c6ceb7595eec801d18c62b7c45c5503452803/src%2Flibrustc%2Fmir%2Finterpret%2Fvalue.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmir%2Finterpret%2Fvalue.rs?ref=7b7c6ceb7595eec801d18c62b7c45c5503452803", "patch": "@@ -202,6 +202,19 @@ impl<'tcx, Tag> Scalar<Tag> {\n         }\n     }\n \n+    /// Returns this pointers offset from the allocation base, or from NULL (for\n+    /// integer pointers).\n+    #[inline]\n+    pub fn get_ptr_offset(self, cx: &impl HasDataLayout) -> Size {\n+        match self {\n+            Scalar::Bits { bits, size } => {\n+                assert_eq!(size as u64, cx.pointer_size().bytes());\n+                Size::from_bytes(bits as u64)\n+            }\n+            Scalar::Ptr(ptr) => ptr.offset,\n+        }\n+    }\n+\n     #[inline]\n     pub fn is_null_ptr(self, cx: &impl HasDataLayout) -> bool {\n         match self {"}]}