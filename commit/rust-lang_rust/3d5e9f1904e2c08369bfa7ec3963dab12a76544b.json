{"sha": "3d5e9f1904e2c08369bfa7ec3963dab12a76544b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNkNWU5ZjE5MDRlMmMwODM2OWJmYTdlYzM5NjNkYWIxMmE3NjU0NGI=", "commit": {"author": {"name": "The8472", "email": "git@infinite-source.de", "date": "2019-11-23T17:26:52Z"}, "committer": {"name": "The8472", "email": "git@infinite-source.de", "date": "2020-09-03T18:59:18Z"}, "message": "bench in-place zip", "tree": {"sha": "4aa60525412d45cf3a777f74f1d4484a443abf8f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4aa60525412d45cf3a777f74f1d4484a443abf8f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3d5e9f1904e2c08369bfa7ec3963dab12a76544b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3d5e9f1904e2c08369bfa7ec3963dab12a76544b", "html_url": "https://github.com/rust-lang/rust/commit/3d5e9f1904e2c08369bfa7ec3963dab12a76544b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3d5e9f1904e2c08369bfa7ec3963dab12a76544b/comments", "author": {"login": "the8472", "id": 1065730, "node_id": "MDQ6VXNlcjEwNjU3MzA=", "avatar_url": "https://avatars.githubusercontent.com/u/1065730?v=4", "gravatar_id": "", "url": "https://api.github.com/users/the8472", "html_url": "https://github.com/the8472", "followers_url": "https://api.github.com/users/the8472/followers", "following_url": "https://api.github.com/users/the8472/following{/other_user}", "gists_url": "https://api.github.com/users/the8472/gists{/gist_id}", "starred_url": "https://api.github.com/users/the8472/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/the8472/subscriptions", "organizations_url": "https://api.github.com/users/the8472/orgs", "repos_url": "https://api.github.com/users/the8472/repos", "events_url": "https://api.github.com/users/the8472/events{/privacy}", "received_events_url": "https://api.github.com/users/the8472/received_events", "type": "User", "site_admin": false}, "committer": {"login": "the8472", "id": 1065730, "node_id": "MDQ6VXNlcjEwNjU3MzA=", "avatar_url": "https://avatars.githubusercontent.com/u/1065730?v=4", "gravatar_id": "", "url": "https://api.github.com/users/the8472", "html_url": "https://github.com/the8472", "followers_url": "https://api.github.com/users/the8472/followers", "following_url": "https://api.github.com/users/the8472/following{/other_user}", "gists_url": "https://api.github.com/users/the8472/gists{/gist_id}", "starred_url": "https://api.github.com/users/the8472/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/the8472/subscriptions", "organizations_url": "https://api.github.com/users/the8472/orgs", "repos_url": "https://api.github.com/users/the8472/repos", "events_url": "https://api.github.com/users/the8472/events{/privacy}", "received_events_url": "https://api.github.com/users/the8472/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2b0b2ae9f61c26338dc00c70eee936230b4b75c0", "url": "https://api.github.com/repos/rust-lang/rust/commits/2b0b2ae9f61c26338dc00c70eee936230b4b75c0", "html_url": "https://github.com/rust-lang/rust/commit/2b0b2ae9f61c26338dc00c70eee936230b4b75c0"}], "stats": {"total": 37, "additions": 37, "deletions": 0}, "files": [{"sha": "a6af316e6a09bc430023eeb67f873a18e9d3a8ea", "filename": "library/alloc/benches/vec.rs", "status": "modified", "additions": 37, "deletions": 0, "changes": 37, "blob_url": "https://github.com/rust-lang/rust/blob/3d5e9f1904e2c08369bfa7ec3963dab12a76544b/library%2Falloc%2Fbenches%2Fvec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3d5e9f1904e2c08369bfa7ec3963dab12a76544b/library%2Falloc%2Fbenches%2Fvec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Fbenches%2Fvec.rs?ref=3d5e9f1904e2c08369bfa7ec3963dab12a76544b", "patch": "@@ -1,3 +1,4 @@\n+use rand::prelude::*;\n use std::iter::{repeat, FromIterator};\n use test::{black_box, Bencher};\n \n@@ -501,6 +502,42 @@ fn bench_in_place_recycle(b: &mut test::Bencher) {\n     });\n }\n \n+#[bench]\n+fn bench_in_place_zip_recycle(b: &mut test::Bencher) {\n+    let mut data = vec![0u8; 256];\n+    let mut rng = rand::thread_rng();\n+    let mut subst = (0..=255u8).collect::<Vec<_>>();\n+    subst.shuffle(&mut rng);\n+\n+    b.iter(|| {\n+        let tmp = std::mem::replace(&mut data, Vec::new());\n+        let mangled = tmp\n+            .into_iter()\n+            .zip(subst.iter().copied())\n+            .enumerate()\n+            .map(|(i, (d, s))| d.wrapping_add(i as u8) ^ s)\n+            .collect::<Vec<_>>();\n+        assert_eq!(mangled.len(), 256);\n+        std::mem::replace(&mut data, black_box(mangled));\n+    });\n+}\n+\n+#[bench]\n+fn bench_in_place_zip_iter_mut(b: &mut test::Bencher) {\n+    let mut data = vec![0u8; 256];\n+    let mut rng = rand::thread_rng();\n+    let mut subst = (0..=255u8).collect::<Vec<_>>();\n+    subst.shuffle(&mut rng);\n+\n+    b.iter(|| {\n+        data.iter_mut().enumerate().for_each(|(i, d)| {\n+            *d = d.wrapping_add(i as u8) ^ subst[i];\n+        });\n+    });\n+\n+    black_box(data);\n+}\n+\n #[derive(Clone)]\n struct Droppable(usize);\n "}]}