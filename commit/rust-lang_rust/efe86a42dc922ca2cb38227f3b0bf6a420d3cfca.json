{"sha": "efe86a42dc922ca2cb38227f3b0bf6a420d3cfca", "node_id": "MDY6Q29tbWl0NzI0NzEyOmVmZTg2YTQyZGM5MjJjYTJjYjM4MjI3ZjNiMGJmNmE0MjBkM2NmY2E=", "commit": {"author": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2020-12-07T18:05:06Z"}, "committer": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2020-12-07T18:58:17Z"}, "message": "Remove raw pre and suffixes from string attr literals", "tree": {"sha": "f89891e7746701bbe1a70af4f3200f96040c63f7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f89891e7746701bbe1a70af4f3200f96040c63f7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/efe86a42dc922ca2cb38227f3b0bf6a420d3cfca", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/efe86a42dc922ca2cb38227f3b0bf6a420d3cfca", "html_url": "https://github.com/rust-lang/rust/commit/efe86a42dc922ca2cb38227f3b0bf6a420d3cfca", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/efe86a42dc922ca2cb38227f3b0bf6a420d3cfca/comments", "author": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1caaa201fa55caaedaa124d23934c178bdf15b18", "url": "https://api.github.com/repos/rust-lang/rust/commits/1caaa201fa55caaedaa124d23934c178bdf15b18", "html_url": "https://github.com/rust-lang/rust/commit/1caaa201fa55caaedaa124d23934c178bdf15b18"}], "stats": {"total": 7, "additions": 5, "deletions": 2}, "files": [{"sha": "4e8b908d0195ff78f5d66d23e694de02a3c506ef", "filename": "crates/hir_def/src/attr.rs", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/efe86a42dc922ca2cb38227f3b0bf6a420d3cfca/crates%2Fhir_def%2Fsrc%2Fattr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/efe86a42dc922ca2cb38227f3b0bf6a420d3cfca/crates%2Fhir_def%2Fsrc%2Fattr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_def%2Fsrc%2Fattr.rs?ref=efe86a42dc922ca2cb38227f3b0bf6a420d3cfca", "patch": "@@ -195,8 +195,11 @@ impl Attr {\n     fn from_src(ast: ast::Attr, hygiene: &Hygiene) -> Option<Attr> {\n         let path = ModPath::from_src(ast.path()?, hygiene)?;\n         let input = if let Some(lit) = ast.literal() {\n-            // FIXME: escape? raw string?\n-            let value = lit.syntax().first_token()?.text().trim_matches('\"').into();\n+            let value = if let ast::LiteralKind::String(string) = lit.kind() {\n+                string.value()?.into()\n+            } else {\n+                lit.syntax().first_token()?.text().trim_matches('\"').into()\n+            };\n             Some(AttrInput::Literal(value))\n         } else if let Some(tt) = ast.token_tree() {\n             Some(AttrInput::TokenTree(ast_to_token_tree(&tt)?.0))"}]}