{"sha": "642576404504160d770c3e08c361bf3d703debee", "node_id": "C_kwDOAAsO6NoAKDY0MjU3NjQwNDUwNDE2MGQ3NzBjM2UwOGMzNjFiZjNkNzAzZGViZWU", "commit": {"author": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2022-10-29T12:18:05Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-10-29T12:18:05Z"}, "message": "Rollup merge of #103719 - joseluis:fix-typos-try-reserve, r=the8472\n\nfix typo in `try_reserve` method from `HashMap` and `HashSet`\n\nCurrently refers to the `reserve` method, instead of `try_reserve`. Other collections like [Vec](https://doc.rust-lang.org/std/vec/struct.Vec.html#method.try_reserve) & [VecDeque](https://doc.rust-lang.org/std/collections/vec_deque/struct.VecDeque.html#method.try_reserve) shows it well.", "tree": {"sha": "8504a616af8f9d1232c82b197b2deacd0372e6bc", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8504a616af8f9d1232c82b197b2deacd0372e6bc"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/642576404504160d770c3e08c361bf3d703debee", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJjXRn9CRBK7hj4Ov3rIwAAnOAIAJtWYQKgYAPfljpMMdwq9BSV\nGrHGunzI2FRYSflXBRKUWM1DRnUlgNldZ6kwpu2G0ZIBHG8gkUeSKTXuJrq3gP0A\nnx+zghDjCF0AKWTUhNMRBX722yG2mXnfctJYu8skVZFeV1DabDBK9ENAWeH22Hly\nG5Vu42h2+/kr6UB4UDMxrhYvEztfDgnof/QaoAw98wdAiUXaILH+y5G0ZYO541Ri\nCrkLfUSz6sENKnenrOyE9Oju6HrdWoWlbWlqMWeuafmqps3HSVlmLBSYkdnBA+Pk\naTc+l2WahwVz0/9aNNMgyOrPTdyTIu22dPTRuOkl5BAq2SMleN0JgRlfDUYH1h0=\n=pOzs\n-----END PGP SIGNATURE-----\n", "payload": "tree 8504a616af8f9d1232c82b197b2deacd0372e6bc\nparent 679771f147e2b682a0343b5bf994d3e1c2b14ed2\nparent 4b353132f53b6b06c2eda7691a4b007838b1f013\nauthor Guillaume Gomez <guillaume1.gomez@gmail.com> 1667045885 +0200\ncommitter GitHub <noreply@github.com> 1667045885 +0200\n\nRollup merge of #103719 - joseluis:fix-typos-try-reserve, r=the8472\n\nfix typo in `try_reserve` method from `HashMap` and `HashSet`\n\nCurrently refers to the `reserve` method, instead of `try_reserve`. Other collections like [Vec](https://doc.rust-lang.org/std/vec/struct.Vec.html#method.try_reserve) & [VecDeque](https://doc.rust-lang.org/std/collections/vec_deque/struct.VecDeque.html#method.try_reserve) shows it well.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/642576404504160d770c3e08c361bf3d703debee", "html_url": "https://github.com/rust-lang/rust/commit/642576404504160d770c3e08c361bf3d703debee", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/642576404504160d770c3e08c361bf3d703debee/comments", "author": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "679771f147e2b682a0343b5bf994d3e1c2b14ed2", "url": "https://api.github.com/repos/rust-lang/rust/commits/679771f147e2b682a0343b5bf994d3e1c2b14ed2", "html_url": "https://github.com/rust-lang/rust/commit/679771f147e2b682a0343b5bf994d3e1c2b14ed2"}, {"sha": "4b353132f53b6b06c2eda7691a4b007838b1f013", "url": "https://api.github.com/repos/rust-lang/rust/commits/4b353132f53b6b06c2eda7691a4b007838b1f013", "html_url": "https://github.com/rust-lang/rust/commit/4b353132f53b6b06c2eda7691a4b007838b1f013"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "708edc5de4751f0232f04ca98e1d7f6acbf3cc87", "filename": "library/std/src/collections/hash/map.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/642576404504160d770c3e08c361bf3d703debee/library%2Fstd%2Fsrc%2Fcollections%2Fhash%2Fmap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/642576404504160d770c3e08c361bf3d703debee/library%2Fstd%2Fsrc%2Fcollections%2Fhash%2Fmap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fcollections%2Fhash%2Fmap.rs?ref=642576404504160d770c3e08c361bf3d703debee", "patch": "@@ -759,7 +759,7 @@ where\n \n     /// Tries to reserve capacity for at least `additional` more elements to be inserted\n     /// in the `HashMap`. The collection may reserve more space to speculatively\n-    /// avoid frequent reallocations. After calling `reserve`,\n+    /// avoid frequent reallocations. After calling `try_reserve`,\n     /// capacity will be greater than or equal to `self.len() + additional` if\n     /// it returns `Ok(())`.\n     /// Does nothing if capacity is already sufficient."}, {"sha": "cee884145c7116fd3f695389b94a4ad3501475ca", "filename": "library/std/src/collections/hash/set.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/642576404504160d770c3e08c361bf3d703debee/library%2Fstd%2Fsrc%2Fcollections%2Fhash%2Fset.rs", "raw_url": "https://github.com/rust-lang/rust/raw/642576404504160d770c3e08c361bf3d703debee/library%2Fstd%2Fsrc%2Fcollections%2Fhash%2Fset.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fcollections%2Fhash%2Fset.rs?ref=642576404504160d770c3e08c361bf3d703debee", "patch": "@@ -462,7 +462,7 @@ where\n \n     /// Tries to reserve capacity for at least `additional` more elements to be inserted\n     /// in the `HashSet`. The collection may reserve more space to speculatively\n-    /// avoid frequent reallocations. After calling `reserve`,\n+    /// avoid frequent reallocations. After calling `try_reserve`,\n     /// capacity will be greater than or equal to `self.len() + additional` if\n     /// it returns `Ok(())`.\n     /// Does nothing if capacity is already sufficient."}]}