{"sha": "1db9fabdf7ba45fcb5ee184254cabd696faf6414", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFkYjlmYWJkZjdiYTQ1ZmNiNWVlMTg0MjU0Y2FiZDY5NmZhZjY0MTQ=", "commit": {"author": {"name": "varkor", "email": "github@varkor.com", "date": "2018-04-17T23:50:41Z"}, "committer": {"name": "varkor", "email": "github@varkor.com", "date": "2018-04-18T09:49:00Z"}, "message": "Do not rebuild LLVM for x.py check", "tree": {"sha": "57bd36c42c22e6586bae0f676bff25e1b74a8516", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/57bd36c42c22e6586bae0f676bff25e1b74a8516"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1db9fabdf7ba45fcb5ee184254cabd696faf6414", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1db9fabdf7ba45fcb5ee184254cabd696faf6414", "html_url": "https://github.com/rust-lang/rust/commit/1db9fabdf7ba45fcb5ee184254cabd696faf6414", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1db9fabdf7ba45fcb5ee184254cabd696faf6414/comments", "author": {"login": "varkor", "id": 3943692, "node_id": "MDQ6VXNlcjM5NDM2OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3943692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/varkor", "html_url": "https://github.com/varkor", "followers_url": "https://api.github.com/users/varkor/followers", "following_url": "https://api.github.com/users/varkor/following{/other_user}", "gists_url": "https://api.github.com/users/varkor/gists{/gist_id}", "starred_url": "https://api.github.com/users/varkor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/varkor/subscriptions", "organizations_url": "https://api.github.com/users/varkor/orgs", "repos_url": "https://api.github.com/users/varkor/repos", "events_url": "https://api.github.com/users/varkor/events{/privacy}", "received_events_url": "https://api.github.com/users/varkor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "varkor", "id": 3943692, "node_id": "MDQ6VXNlcjM5NDM2OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3943692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/varkor", "html_url": "https://github.com/varkor", "followers_url": "https://api.github.com/users/varkor/followers", "following_url": "https://api.github.com/users/varkor/following{/other_user}", "gists_url": "https://api.github.com/users/varkor/gists{/gist_id}", "starred_url": "https://api.github.com/users/varkor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/varkor/subscriptions", "organizations_url": "https://api.github.com/users/varkor/orgs", "repos_url": "https://api.github.com/users/varkor/repos", "events_url": "https://api.github.com/users/varkor/events{/privacy}", "received_events_url": "https://api.github.com/users/varkor/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f31c01c713de320b4f5de7670c6fedfad48401e4", "url": "https://api.github.com/repos/rust-lang/rust/commits/f31c01c713de320b4f5de7670c6fedfad48401e4", "html_url": "https://github.com/rust-lang/rust/commit/f31c01c713de320b4f5de7670c6fedfad48401e4"}], "stats": {"total": 16, "additions": 13, "deletions": 3}, "files": [{"sha": "872271c453ecc67de5aadb58982350f48896ea11", "filename": "src/bootstrap/builder.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/1db9fabdf7ba45fcb5ee184254cabd696faf6414/src%2Fbootstrap%2Fbuilder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1db9fabdf7ba45fcb5ee184254cabd696faf6414/src%2Fbootstrap%2Fbuilder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fbuilder.rs?ref=1db9fabdf7ba45fcb5ee184254cabd696faf6414", "patch": "@@ -552,6 +552,12 @@ impl<'a> Builder<'a> {\n              .arg(\"--target\")\n              .arg(target);\n \n+        // Set a flag for `check` so that certain build scripts can do less work\n+        // (e.g. not building/requiring LLVM).\n+        if cmd == \"check\" {\n+            cargo.env(\"RUST_CHECK\", \"1\");\n+        }\n+\n         // If we were invoked from `make` then that's already got a jobserver\n         // set up for us so no need to tell Cargo about jobs all over again.\n         if env::var_os(\"MAKEFLAGS\").is_none() && env::var_os(\"MFLAGS\").is_none() {"}, {"sha": "61e02b25e58347c1e9f8161c299958bc7aa5bca5", "filename": "src/bootstrap/check.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/1db9fabdf7ba45fcb5ee184254cabd696faf6414/src%2Fbootstrap%2Fcheck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1db9fabdf7ba45fcb5ee184254cabd696faf6414/src%2Fbootstrap%2Fcheck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fcheck.rs?ref=1db9fabdf7ba45fcb5ee184254cabd696faf6414", "patch": "@@ -11,7 +11,6 @@\n //! Implementation of compiling the compiler and standard library, in \"check\" mode.\n \n use compile::{run_cargo, std_cargo, test_cargo, rustc_cargo, rustc_cargo_env, add_to_sysroot};\n-use compile::build_codegen_backend;\n use builder::{RunConfig, Builder, ShouldRun, Step};\n use {Compiler, Mode};\n use cache::{INTERNER, Interned};\n@@ -138,11 +137,11 @@ impl Step for CodegenBackend {\n         let backend = self.backend;\n \n         let mut cargo = builder.cargo(compiler, Mode::Librustc, target, \"check\");\n-        let mut features = build.rustc_features().to_string();\n+        let features = build.rustc_features().to_string();\n         cargo.arg(\"--manifest-path\").arg(build.src.join(\"src/librustc_trans/Cargo.toml\"));\n         rustc_cargo_env(build, &mut cargo);\n \n-        features += &build_codegen_backend(&builder, &mut cargo, &compiler, target, backend);\n+        // We won't build LLVM if it's not available, as it shouldn't affect `check`.\n \n         let _folder = build.fold_output(|| format!(\"stage{}-rustc_trans\", compiler.stage));\n         run_cargo(build,"}, {"sha": "d09a3e8b9dad2fb42a9a0d4f10b9e905d5a4c8c3", "filename": "src/librustc_llvm/build.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/1db9fabdf7ba45fcb5ee184254cabd696faf6414/src%2Flibrustc_llvm%2Fbuild.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1db9fabdf7ba45fcb5ee184254cabd696faf6414/src%2Flibrustc_llvm%2Fbuild.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_llvm%2Fbuild.rs?ref=1db9fabdf7ba45fcb5ee184254cabd696faf6414", "patch": "@@ -28,6 +28,11 @@ fn detect_llvm_link() -> (&'static str, &'static str) {\n }\n \n fn main() {\n+    if env::var_os(\"RUST_CHECK\").is_some() {\n+        // If we're just running `check`, there's no need for LLVM to be built.\n+        return;\n+    }\n+\n     let target = env::var(\"TARGET\").expect(\"TARGET was not set\");\n     let llvm_config = env::var_os(\"LLVM_CONFIG\")\n         .map(PathBuf::from)"}]}