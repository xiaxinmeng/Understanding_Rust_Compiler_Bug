{"sha": "b9c7ee5cfa566b07c5b4099de7cea232e7153e59", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI5YzdlZTVjZmE1NjZiMDdjNWI0MDk5ZGU3Y2VhMjMyZTcxNTNlNTk=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2013-04-01T00:06:42Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2013-04-01T00:06:42Z"}, "message": "auto merge of #5647 : thestinger/rust/execstack, r=brson\n\nCloses #5643", "tree": {"sha": "0e43afa9f9cf08d3536958fdafbb792fb30fa633", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0e43afa9f9cf08d3536958fdafbb792fb30fa633"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b9c7ee5cfa566b07c5b4099de7cea232e7153e59", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b9c7ee5cfa566b07c5b4099de7cea232e7153e59", "html_url": "https://github.com/rust-lang/rust/commit/b9c7ee5cfa566b07c5b4099de7cea232e7153e59", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b9c7ee5cfa566b07c5b4099de7cea232e7153e59/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f336afd45990f3799f0fa5667a992c2c06789fc3", "url": "https://api.github.com/repos/rust-lang/rust/commits/f336afd45990f3799f0fa5667a992c2c06789fc3", "html_url": "https://github.com/rust-lang/rust/commit/f336afd45990f3799f0fa5667a992c2c06789fc3"}, {"sha": "c0be7df5de2d5b5137f66743a428d1843b98ba9b", "url": "https://api.github.com/repos/rust-lang/rust/commits/c0be7df5de2d5b5137f66743a428d1843b98ba9b", "html_url": "https://github.com/rust-lang/rust/commit/c0be7df5de2d5b5137f66743a428d1843b98ba9b"}], "stats": {"total": 118, "additions": 94, "deletions": 24}, "files": [{"sha": "16b5ba452f4c9142cf75ca5f88da51cbe1784f5b", "filename": "mk/platform.mk", "status": "modified", "additions": 3, "deletions": 5, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/b9c7ee5cfa566b07c5b4099de7cea232e7153e59/mk%2Fplatform.mk", "raw_url": "https://github.com/rust-lang/rust/raw/b9c7ee5cfa566b07c5b4099de7cea232e7153e59/mk%2Fplatform.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mk%2Fplatform.mk?ref=b9c7ee5cfa566b07c5b4099de7cea232e7153e59", "patch": "@@ -61,8 +61,6 @@ ifdef CFG_VALGRIND\n endif\n \n ifneq ($(findstring linux,$(CFG_OSTYPE)),)\n-  # -znoexecstack is here because librt is for some reason being created\n-  # with executable stack and Fedora (or SELinux) doesn't like that (#798)\n   ifdef CFG_PERF\n     ifneq ($(CFG_PERF_WITH_LOGFD),)\n         CFG_PERF_TOOL := $(CFG_PERF) stat -r 3 --log-fd 2\n@@ -126,7 +124,7 @@ CFG_GCCISH_CXXFLAGS_x86_64-unknown-linux-gnu := -fno-rtti\n CFG_GCCISH_LINK_FLAGS_x86_64-unknown-linux-gnu := -shared -fPIC -ldl -lpthread -lrt -g -m64\n CFG_GCCISH_DEF_FLAG_x86_64-unknown-linux-gnu := -Wl,--export-dynamic,--dynamic-list=\n CFG_GCCISH_PRE_LIB_FLAGS_x86_64-unknown-linux-gnu := -Wl,-whole-archive\n-CFG_GCCISH_POST_LIB_FLAGS_x86_64-unknown-linux-gnu := -Wl,-no-whole-archive -Wl,-znoexecstack\n+CFG_GCCISH_POST_LIB_FLAGS_x86_64-unknown-linux-gnu := -Wl,-no-whole-archive\n CFG_DEF_SUFFIX_x86_64-unknown-linux-gnu := .linux.def\n CFG_INSTALL_NAME_x86_64-unknown-linux-gnu =\n CFG_LIBUV_LINK_FLAGS_x86_64-unknown-linux-gnu =\n@@ -152,7 +150,7 @@ CFG_GCCISH_CXXFLAGS_i686-unknown-linux-gnu := -fno-rtti\n CFG_GCCISH_LINK_FLAGS_i686-unknown-linux-gnu := -shared -fPIC -ldl -lpthread -lrt -g -m32\n CFG_GCCISH_DEF_FLAG_i686-unknown-linux-gnu := -Wl,--export-dynamic,--dynamic-list=\n CFG_GCCISH_PRE_LIB_FLAGS_i686-unknown-linux-gnu := -Wl,-whole-archive\n-CFG_GCCISH_POST_LIB_FLAGS_i686-unknown-linux-gnu := -Wl,-no-whole-archive -Wl,-znoexecstack\n+CFG_GCCISH_POST_LIB_FLAGS_i686-unknown-linux-gnu := -Wl,-no-whole-archive\n CFG_DEF_SUFFIX_i686-unknown-linux-gnu := .linux.def\n CFG_INSTALL_NAME_i686-unknown-linux-gnu =\n CFG_LIBUV_LINK_FLAGS_i686-unknown-linux-gnu =\n@@ -228,7 +226,7 @@ CFG_GCCISH_CXXFLAGS_arm-linux-androideabi := -fno-rtti\n CFG_GCCISH_LINK_FLAGS_arm-linux-androideabi := -shared -fPIC -ldl -g -lm -lsupc++ -lgnustl_shared\n CFG_GCCISH_DEF_FLAG_arm-linux-androideabi := -Wl,--export-dynamic,--dynamic-list=\n CFG_GCCISH_PRE_LIB_FLAGS_arm-linux-androideabi := -Wl,-whole-archive\n-CFG_GCCISH_POST_LIB_FLAGS_arm-linux-androideabi := -Wl,-no-whole-archive -Wl,-znoexecstack\n+CFG_GCCISH_POST_LIB_FLAGS_arm-linux-androideabi := -Wl,-no-whole-archive\n CFG_DEF_SUFFIX_arm-linux-androideabi := .android.def\n CFG_INSTALL_NAME_arm-linux-androideabi =\n CFG_LIBUV_LINK_FLAGS_arm-linux-androideabi ="}, {"sha": "b29575aada9f71d7915090f143aca442b85d4de8", "filename": "src/rt/arch/arm/_context.S", "status": "modified", "additions": 9, "deletions": 4, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/b9c7ee5cfa566b07c5b4099de7cea232e7153e59/src%2Frt%2Farch%2Farm%2F_context.S", "raw_url": "https://github.com/rust-lang/rust/raw/b9c7ee5cfa566b07c5b4099de7cea232e7153e59/src%2Frt%2Farch%2Farm%2F_context.S", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Farch%2Farm%2F_context.S?ref=b9c7ee5cfa566b07c5b4099de7cea232e7153e59", "patch": "@@ -1,3 +1,8 @@\n+// Mark stack as non-executable\n+#if defined(__linux__) && defined(__ELF__)\n+.section\t.note.GNU-stack, \"\", @progbits\n+#endif\n+\n .text\n .code 32\n .arm\n@@ -17,12 +22,12 @@ swap_registers:\n \tstr r10, [r0, #40]\n \tstr r11, [r0, #44]\n \tstr r12, [r0, #48]\n-\tstr sp, [r0, #52] \n+\tstr sp, [r0, #52]\n \tstr lr, [r0, #56]\n \n \tmrs r2, cpsr\n \tstr r2, [r0, #64]\n-\t\n+\n \n \tldr r0, [r1, #0]\n \tldr r3, [r1, #12]\n@@ -35,10 +40,10 @@ swap_registers:\n \tldr r10, [r1, #40]\n \tldr r11, [r1, #44]\n \tldr r12, [r1, #48]\n-\t\n+\n \tldr sp, [r1, #52]\n \tldr lr, [r1, #56]\n-\t \n+\n \tldr r2, [r1, #64]\n \tmsr cpsr_cxsf, r2\n "}, {"sha": "52806d67837bc56e5632ebedd75d7c2e0141b9cc", "filename": "src/rt/arch/arm/ccall.S", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/b9c7ee5cfa566b07c5b4099de7cea232e7153e59/src%2Frt%2Farch%2Farm%2Fccall.S", "raw_url": "https://github.com/rust-lang/rust/raw/b9c7ee5cfa566b07c5b4099de7cea232e7153e59/src%2Frt%2Farch%2Farm%2Fccall.S", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Farch%2Farm%2Fccall.S?ref=b9c7ee5cfa566b07c5b4099de7cea232e7153e59", "patch": "@@ -1,3 +1,8 @@\n+// Mark stack as non-executable\n+#if defined(__linux__) && defined(__ELF__)\n+.section\t.note.GNU-stack, \"\", @progbits\n+#endif\n+\n .text\n .code 32\n .arm\n@@ -19,4 +24,3 @@ __morestack:\n \tpop {r4, fp, lr}\n \tmov pc, lr\n \t.fnend\n-"}, {"sha": "ccb23037f79f18eb8ca37aea9ddd7196033a13dd", "filename": "src/rt/arch/arm/morestack.S", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/b9c7ee5cfa566b07c5b4099de7cea232e7153e59/src%2Frt%2Farch%2Farm%2Fmorestack.S", "raw_url": "https://github.com/rust-lang/rust/raw/b9c7ee5cfa566b07c5b4099de7cea232e7153e59/src%2Frt%2Farch%2Farm%2Fmorestack.S", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Farch%2Farm%2Fmorestack.S?ref=b9c7ee5cfa566b07c5b4099de7cea232e7153e59", "patch": "@@ -1,3 +1,8 @@\n+// Mark stack as non-executable\n+#if defined(__linux__) && defined(__ELF__)\n+.section\t.note.GNU-stack, \"\", @progbits\n+#endif\n+\n .text\n .code 32\n .arm"}, {"sha": "528359420e628a3e5efd4e77912070ad1257f295", "filename": "src/rt/arch/arm/record_sp.S", "status": "modified", "additions": 8, "deletions": 3, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/b9c7ee5cfa566b07c5b4099de7cea232e7153e59/src%2Frt%2Farch%2Farm%2Frecord_sp.S", "raw_url": "https://github.com/rust-lang/rust/raw/b9c7ee5cfa566b07c5b4099de7cea232e7153e59/src%2Frt%2Farch%2Farm%2Frecord_sp.S", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Farch%2Farm%2Frecord_sp.S?ref=b9c7ee5cfa566b07c5b4099de7cea232e7153e59", "patch": "@@ -1,3 +1,8 @@\n+// Mark stack as non-executable\n+#if defined(__linux__) && defined(__ELF__)\n+.section\t.note.GNU-stack, \"\", @progbits\n+#endif\n+\n .text\n .code 32\n .arm\n@@ -45,17 +50,17 @@ get_sp_limit:\n get_sp:\n \tmov r0, sp\n \tmov pc, lr\n-\t\n+\n .data\n my_cpu:\t.long\t0\n .global my_array\n-my_array:\t\n+my_array:\n+\t.long\t0\n \t.long\t0\n \t.long\t0\n \t.long\t0\n \t.long\t0\n \t.long\t0\n \t.long\t0\n \t.long\t0\n-\t.long\t0\t\n .end"}, {"sha": "d2643d07c3df63d027d5353e7617acdec059d9c3", "filename": "src/rt/arch/i386/_context.S", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/b9c7ee5cfa566b07c5b4099de7cea232e7153e59/src%2Frt%2Farch%2Fi386%2F_context.S", "raw_url": "https://github.com/rust-lang/rust/raw/b9c7ee5cfa566b07c5b4099de7cea232e7153e59/src%2Frt%2Farch%2Fi386%2F_context.S", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Farch%2Fi386%2F_context.S?ref=b9c7ee5cfa566b07c5b4099de7cea232e7153e59", "patch": "@@ -1,3 +1,8 @@\n+// Mark stack as non-executable\n+#if defined(__linux__) && defined(__ELF__)\n+.section\t.note.GNU-stack, \"\", @progbits\n+#endif\n+\n         .text\n \n /*"}, {"sha": "e47d51bbdb721eb2132a244b66c86e2022bc7e5e", "filename": "src/rt/arch/i386/ccall.S", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/b9c7ee5cfa566b07c5b4099de7cea232e7153e59/src%2Frt%2Farch%2Fi386%2Fccall.S", "raw_url": "https://github.com/rust-lang/rust/raw/b9c7ee5cfa566b07c5b4099de7cea232e7153e59/src%2Frt%2Farch%2Fi386%2Fccall.S", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Farch%2Fi386%2Fccall.S?ref=b9c7ee5cfa566b07c5b4099de7cea232e7153e59", "patch": "@@ -1,3 +1,8 @@\n+// Mark stack as non-executable\n+#if defined(__linux__) && defined(__ELF__)\n+.section\t.note.GNU-stack, \"\", @progbits\n+#endif\n+\n /*\n \tThe function for switching to the C stack.  It is called\n \t__morestack because gdb allows any frame with that name to"}, {"sha": "e8a9c1312ed2cac6972c6abdcbd0f02f53908fbd", "filename": "src/rt/arch/i386/morestack.S", "status": "modified", "additions": 8, "deletions": 3, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/b9c7ee5cfa566b07c5b4099de7cea232e7153e59/src%2Frt%2Farch%2Fi386%2Fmorestack.S", "raw_url": "https://github.com/rust-lang/rust/raw/b9c7ee5cfa566b07c5b4099de7cea232e7153e59/src%2Frt%2Farch%2Fi386%2Fmorestack.S", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Farch%2Fi386%2Fmorestack.S?ref=b9c7ee5cfa566b07c5b4099de7cea232e7153e59", "patch": "@@ -1,3 +1,8 @@\n+// Mark stack as non-executable\n+#if defined(__linux__) && defined(__ELF__)\n+.section\t.note.GNU-stack, \"\", @progbits\n+#endif\n+\n /*\n \t__morestack\n \n@@ -218,11 +223,11 @@ MORESTACK:\n .L$bail:\n \tmovl 32(%esp),%eax\n \tinc %eax\n-\t\n+\n \taddl $44, %esp\n \tpopl %ebp\n \taddl $4+8,%esp\n-\t\n+\n \tjmpl *%eax\n \n #if defined(__linux__) || defined(__APPLE__) || defined(__FreeBSD__)\n@@ -241,7 +246,7 @@ L_rust_get_task$stub:\n L_upcall_new_stack$stub:\n \t.indirect_symbol _upcall_new_stack\n \t.ascii\t \"\\364\\364\\364\\364\\364\"\n-\t\n+\n L_upcall_del_stack$stub:\n \t.indirect_symbol _upcall_del_stack\n \t.ascii\t \"\\364\\364\\364\\364\\364\""}, {"sha": "12d9a2b6456cacf36c3535f685e1f1f1257e573a", "filename": "src/rt/arch/i386/record_sp.S", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/b9c7ee5cfa566b07c5b4099de7cea232e7153e59/src%2Frt%2Farch%2Fi386%2Frecord_sp.S", "raw_url": "https://github.com/rust-lang/rust/raw/b9c7ee5cfa566b07c5b4099de7cea232e7153e59/src%2Frt%2Farch%2Fi386%2Frecord_sp.S", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Farch%2Fi386%2Frecord_sp.S?ref=b9c7ee5cfa566b07c5b4099de7cea232e7153e59", "patch": "@@ -0,0 +1,4 @@\n+// Mark stack as non-executable\n+#if defined(__linux__) && defined(__ELF__)\n+.section\t.note.GNU-stack, \"\", @progbits\n+#endif"}, {"sha": "c926a03798d2d3948e90d058b91be7b21655ffaa", "filename": "src/rt/arch/mips/_context.S", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/b9c7ee5cfa566b07c5b4099de7cea232e7153e59/src%2Frt%2Farch%2Fmips%2F_context.S", "raw_url": "https://github.com/rust-lang/rust/raw/b9c7ee5cfa566b07c5b4099de7cea232e7153e59/src%2Frt%2Farch%2Fmips%2F_context.S", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Farch%2Fmips%2F_context.S?ref=b9c7ee5cfa566b07c5b4099de7cea232e7153e59", "patch": "@@ -1,3 +1,8 @@\n+// Mark stack as non-executable\n+#if defined(__linux__) && defined(__ELF__)\n+.section\t.note.GNU-stack, \"\", @progbits\n+#endif\n+\n .text\n .globl swap_registers\n .align 2"}, {"sha": "f41d8e721f66fd18ec8a624a005886b3b5fb5127", "filename": "src/rt/arch/mips/ccall.S", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/b9c7ee5cfa566b07c5b4099de7cea232e7153e59/src%2Frt%2Farch%2Fmips%2Fccall.S", "raw_url": "https://github.com/rust-lang/rust/raw/b9c7ee5cfa566b07c5b4099de7cea232e7153e59/src%2Frt%2Farch%2Fmips%2Fccall.S", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Farch%2Fmips%2Fccall.S?ref=b9c7ee5cfa566b07c5b4099de7cea232e7153e59", "patch": "@@ -1,3 +1,8 @@\n+// Mark stack as non-executable\n+#if defined(__linux__) && defined(__ELF__)\n+.section\t.note.GNU-stack, \"\", @progbits\n+#endif\n+\n .text\n \n .globl __morestack"}, {"sha": "dd4d2f393754d1c8ac4aba049cb2289e2a7094f5", "filename": "src/rt/arch/mips/record_sp.S", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/b9c7ee5cfa566b07c5b4099de7cea232e7153e59/src%2Frt%2Farch%2Fmips%2Frecord_sp.S", "raw_url": "https://github.com/rust-lang/rust/raw/b9c7ee5cfa566b07c5b4099de7cea232e7153e59/src%2Frt%2Farch%2Fmips%2Frecord_sp.S", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Farch%2Fmips%2Frecord_sp.S?ref=b9c7ee5cfa566b07c5b4099de7cea232e7153e59", "patch": "@@ -1,3 +1,8 @@\n+// Mark stack as non-executable\n+#if defined(__linux__) && defined(__ELF__)\n+.section\t.note.GNU-stack, \"\", @progbits\n+#endif\n+\n .text\n \n .globl record_sp_limit"}, {"sha": "bedd685546756753f96d481666b92efbe2ed0f33", "filename": "src/rt/arch/x86_64/_context.S", "status": "modified", "additions": 10, "deletions": 5, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/b9c7ee5cfa566b07c5b4099de7cea232e7153e59/src%2Frt%2Farch%2Fx86_64%2F_context.S", "raw_url": "https://github.com/rust-lang/rust/raw/b9c7ee5cfa566b07c5b4099de7cea232e7153e59/src%2Frt%2Farch%2Fx86_64%2F_context.S", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Farch%2Fx86_64%2F_context.S?ref=b9c7ee5cfa566b07c5b4099de7cea232e7153e59", "patch": "@@ -1,7 +1,12 @@\n+// Mark stack as non-executable\n+#if defined(__linux__) && defined(__ELF__)\n+.section\t.note.GNU-stack, \"\", @progbits\n+#endif\n+\n #include \"regs.h\"\n #define ARG0 RUSTRT_ARG0_S\n #define ARG1 RUSTRT_ARG1_S\n-        \n+\n         .text\n \n /*\n@@ -11,7 +16,7 @@ and Microsoft discussion at\n http://msdn.microsoft.com/en-US/library/9z1stfyw%28v=VS.80%29.aspx.\n \n BOTH CALLING CONVENTIONS\n-        \n+\n Callee save registers:\n \tR12--R15, RDI, RSI, RBX, RBP, RSP\n         XMM0--XMM5\n@@ -30,7 +35,7 @@ User flags have no specified role and are not preserved\n         across calls, with the exception of DF in %rFLAGS,\n         which must be clear (set to \"forward\" direction)\n         on function entry and return.\n-        \n+\n MICROSOFT CALLING CONVENTIONS\n \n Return value: RAX\n@@ -39,15 +44,15 @@ First four arguments:\n         RCX, RDX, R8, R9\n         XMM0, XMM1, XMM2, XMM3\n */\n-\t\n+\n /*\n         Stores current registers into arg0/RCX and restores\n         registers found in arg1/RDX. This is used by our\n \t    implementation of getcontext.  Only saves/restores nonvolatile\n         registers and the register used for the first argument.\n         Volatile registers in general ought to be saved by the caller\n         anyhow.\n-*/\t\n+*/\n \n #if defined(__APPLE__) || defined(_WIN32)\n #define SWAP_REGISTERS _swap_registers"}, {"sha": "d4bc37fee957d3f6ac62b43e4c6b7369693a3d5f", "filename": "src/rt/arch/x86_64/ccall.S", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/b9c7ee5cfa566b07c5b4099de7cea232e7153e59/src%2Frt%2Farch%2Fx86_64%2Fccall.S", "raw_url": "https://github.com/rust-lang/rust/raw/b9c7ee5cfa566b07c5b4099de7cea232e7153e59/src%2Frt%2Farch%2Fx86_64%2Fccall.S", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Farch%2Fx86_64%2Fccall.S?ref=b9c7ee5cfa566b07c5b4099de7cea232e7153e59", "patch": "@@ -1,3 +1,8 @@\n+// Mark stack as non-executable\n+#if defined(__linux__) && defined(__ELF__)\n+.section\t.note.GNU-stack, \"\", @progbits\n+#endif\n+\n /*\n \tThe function for switching to the C stack.  It is called\n \t__morestack because gdb allows any frame with that name to\n@@ -10,7 +15,7 @@\n #define ARG0 RUSTRT_ARG0_S\n #define ARG1 RUSTRT_ARG1_S\n #define ARG2 RUSTRT_ARG2_S\n-        \n+\n         .text\n \n #if defined(__APPLE__) || defined(_WIN32)"}, {"sha": "e4dfc033bf4331e02d4f07e3e6db211e0e553bd6", "filename": "src/rt/arch/x86_64/morestack.S", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/b9c7ee5cfa566b07c5b4099de7cea232e7153e59/src%2Frt%2Farch%2Fx86_64%2Fmorestack.S", "raw_url": "https://github.com/rust-lang/rust/raw/b9c7ee5cfa566b07c5b4099de7cea232e7153e59/src%2Frt%2Farch%2Fx86_64%2Fmorestack.S", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Farch%2Fx86_64%2Fmorestack.S?ref=b9c7ee5cfa566b07c5b4099de7cea232e7153e59", "patch": "@@ -1,3 +1,8 @@\n+// Mark stack as non-executable\n+#if defined(__linux__) && defined(__ELF__)\n+.section\t.note.GNU-stack, \"\", @progbits\n+#endif\n+\n /*\n \t__morestack\n \n@@ -78,7 +83,7 @@ MORESTACK:\n \tmovq %r11, %rdx // Size of stack arguments\n \tmovq %rax, %rsi // Address of stack arguments\n \tmovq %r10, %rdi // The amount of stack needed\n-        \n+\n #ifdef __APPLE__\n \tcall UPCALL_NEW_STACK\n #endif\n@@ -132,7 +137,7 @@ MORESTACK:\n \tpopq %rax // Restore the return value\n \tpopq %rbp\n \tret\n-\t\n+\n \t.cfi_endproc\n \n #else"}, {"sha": "12d9a2b6456cacf36c3535f685e1f1f1257e573a", "filename": "src/rt/arch/x86_64/record_sp.S", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/b9c7ee5cfa566b07c5b4099de7cea232e7153e59/src%2Frt%2Farch%2Fx86_64%2Frecord_sp.S", "raw_url": "https://github.com/rust-lang/rust/raw/b9c7ee5cfa566b07c5b4099de7cea232e7153e59/src%2Frt%2Farch%2Fx86_64%2Frecord_sp.S", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Farch%2Fx86_64%2Frecord_sp.S?ref=b9c7ee5cfa566b07c5b4099de7cea232e7153e59", "patch": "@@ -0,0 +1,4 @@\n+// Mark stack as non-executable\n+#if defined(__linux__) && defined(__ELF__)\n+.section\t.note.GNU-stack, \"\", @progbits\n+#endif"}]}