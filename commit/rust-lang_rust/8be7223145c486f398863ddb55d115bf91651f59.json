{"sha": "8be7223145c486f398863ddb55d115bf91651f59", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhiZTcyMjMxNDVjNDg2ZjM5ODg2M2RkYjU1ZDExNWJmOTE2NTFmNTk=", "commit": {"author": {"name": "Elichai Turkel", "email": "elichai.turkel@gmail.com", "date": "2019-12-04T13:13:43Z"}, "committer": {"name": "Elichai Turkel", "email": "elichai.turkel@gmail.com", "date": "2019-12-04T13:20:47Z"}, "message": "Fix docs for formatting delegations", "tree": {"sha": "e4d7a7a6d8892d15a5fcf4555fc0a42c4f22c359", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e4d7a7a6d8892d15a5fcf4555fc0a42c4f22c359"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8be7223145c486f398863ddb55d115bf91651f59", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQJNBAABCAA3FiEEC5PUstyhDoo+NyfXk4PN6ejman8FAl3nsrwZHGVsaWNoYWku\ndHVya2VsQGdtYWlsLmNvbQAKCRCTg83p6OZqf1DuD/9bMthLC6Uk1pzkhztbbXMw\nbciN3jUP0MoCytuw279pcwmiLxqIIaFFfPzipciSyKQoN0SM5uibzYon9UccMvqr\nj/LV2sVJLfa9/HdKR8KBVtAVICrhRsI75k/KlsdqyVWK7Ai1lZIFgwDukd+/bk2e\nKfq7KnAIhYTFPDIZs02ndzCT3ZdM4KdT5/OQCnvMkalEPvvtFnSZZYQJrsEw8SlK\n/7Q92XAPl+vBYhNHDjBzyerkt/3TUEohmARr9jyxJV16bUPUxa2Lbsb/Q6qZICFT\n46DkUdRX5wYrsV4PBRtI5MjdXoAeR2eXaTnsDhG1E/tx5YGd0Da8XHkW3b6Equfu\nyZStHV5XCzF7sU0UPI7Vw+Hjo9vCycBW6+t5HcfaIu7ijZGN1LM4cKM7aRXHOVM+\nA+ePHzQaZPbGcEBEZqTe4zoL3bGOrshr2n/9/2y6p9bRX6gbikrlKjZde5YORwzv\ntoAC6gy0WFmhYFaaMYZfLNrcnACvIzD9LaFhJvmxcm486gm1eix0EIK2e2VoZ1LZ\n1nXhG0VeFBXYNKySW5ES4+bBg8xcfeI3BKMZ99de9p+i9qyf7vg8qosu9+3/F+0G\nQj/q5hf+Lk5wWLhu6zyqTOpPiD1qCVwkOdzy3mQegl+mx3Bpkxh0wLJ/D/bfcy9i\n1VngOKYAeQ2+ZygIJ8CT9w==\n=TQzr\n-----END PGP SIGNATURE-----", "payload": "tree e4d7a7a6d8892d15a5fcf4555fc0a42c4f22c359\nparent 5f1d6c44034ac143f7a3e56ae7ea8858dcbb61ca\nauthor Elichai Turkel <elichai.turkel@gmail.com> 1575465223 +0200\ncommitter Elichai Turkel <elichai.turkel@gmail.com> 1575465647 +0200\n\nFix docs for formatting delegations\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8be7223145c486f398863ddb55d115bf91651f59", "html_url": "https://github.com/rust-lang/rust/commit/8be7223145c486f398863ddb55d115bf91651f59", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8be7223145c486f398863ddb55d115bf91651f59/comments", "author": {"login": "elichai", "id": 2167860, "node_id": "MDQ6VXNlcjIxNjc4NjA=", "avatar_url": "https://avatars.githubusercontent.com/u/2167860?v=4", "gravatar_id": "", "url": "https://api.github.com/users/elichai", "html_url": "https://github.com/elichai", "followers_url": "https://api.github.com/users/elichai/followers", "following_url": "https://api.github.com/users/elichai/following{/other_user}", "gists_url": "https://api.github.com/users/elichai/gists{/gist_id}", "starred_url": "https://api.github.com/users/elichai/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/elichai/subscriptions", "organizations_url": "https://api.github.com/users/elichai/orgs", "repos_url": "https://api.github.com/users/elichai/repos", "events_url": "https://api.github.com/users/elichai/events{/privacy}", "received_events_url": "https://api.github.com/users/elichai/received_events", "type": "User", "site_admin": false}, "committer": {"login": "elichai", "id": 2167860, "node_id": "MDQ6VXNlcjIxNjc4NjA=", "avatar_url": "https://avatars.githubusercontent.com/u/2167860?v=4", "gravatar_id": "", "url": "https://api.github.com/users/elichai", "html_url": "https://github.com/elichai", "followers_url": "https://api.github.com/users/elichai/followers", "following_url": "https://api.github.com/users/elichai/following{/other_user}", "gists_url": "https://api.github.com/users/elichai/gists{/gist_id}", "starred_url": "https://api.github.com/users/elichai/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/elichai/subscriptions", "organizations_url": "https://api.github.com/users/elichai/orgs", "repos_url": "https://api.github.com/users/elichai/repos", "events_url": "https://api.github.com/users/elichai/events{/privacy}", "received_events_url": "https://api.github.com/users/elichai/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5f1d6c44034ac143f7a3e56ae7ea8858dcbb61ca", "url": "https://api.github.com/repos/rust-lang/rust/commits/5f1d6c44034ac143f7a3e56ae7ea8858dcbb61ca", "html_url": "https://github.com/rust-lang/rust/commit/5f1d6c44034ac143f7a3e56ae7ea8858dcbb61ca"}], "stats": {"total": 11, "additions": 6, "deletions": 5}, "files": [{"sha": "e2f49ee25a756f92b58b6521852d8fc485035e45", "filename": "src/libcore/fmt/mod.rs", "status": "modified", "additions": 6, "deletions": 5, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/8be7223145c486f398863ddb55d115bf91651f59/src%2Flibcore%2Ffmt%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8be7223145c486f398863ddb55d115bf91651f59/src%2Flibcore%2Ffmt%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Ffmt%2Fmod.rs?ref=8be7223145c486f398863ddb55d115bf91651f59", "patch": "@@ -662,7 +662,7 @@ pub trait Display {\n ///     fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {\n ///         let val = self.0;\n ///\n-///         write!(f, \"{:o}\", val) // delegate to i32's implementation\n+///         fmt::Octal::fmt(&val, f) // delegate to i32's implementation\n ///     }\n /// }\n ///\n@@ -712,7 +712,7 @@ pub trait Octal {\n ///     fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {\n ///         let val = self.0;\n ///\n-///         write!(f, \"{:b}\", val) // delegate to i32's implementation\n+///         fmt::Binary::fmt(&val, f) // delegate to i32's implementation\n ///     }\n /// }\n ///\n@@ -771,7 +771,7 @@ pub trait Binary {\n ///     fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {\n ///         let val = self.0;\n ///\n-///         write!(f, \"{:x}\", val) // delegate to i32's implementation\n+///         fmt::LowerHex::fmt(&val, f) // delegate to i32's implementation\n ///     }\n /// }\n ///\n@@ -824,7 +824,7 @@ pub trait LowerHex {\n ///     fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {\n ///         let val = self.0;\n ///\n-///         write!(f, \"{:X}\", val) // delegate to i32's implementation\n+///         fmt::UpperHex::fmt(&val, f) // delegate to i32's implementation\n ///     }\n /// }\n ///\n@@ -869,7 +869,8 @@ pub trait UpperHex {\n ///     fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {\n ///         // use `as` to convert to a `*const T`, which implements Pointer, which we can use\n ///\n-///         write!(f, \"{:p}\", self as *const Length)\n+///         let ptr = self as *const Self;\n+///         fmt::Pointer::fmt(&ptr, f)\n ///     }\n /// }\n ///"}]}