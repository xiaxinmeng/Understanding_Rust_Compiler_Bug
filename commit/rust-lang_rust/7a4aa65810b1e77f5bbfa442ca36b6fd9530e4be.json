{"sha": "7a4aa65810b1e77f5bbfa442ca36b6fd9530e4be", "node_id": "C_kwDOAAsO6NoAKDdhNGFhNjU4MTBiMWU3N2Y1YmJmYTQ0MmNhMzZiNmZkOTUzMGU0YmU", "commit": {"author": {"name": "b-naber", "email": "bn263@gmx.de", "date": "2021-11-09T19:41:13Z"}, "committer": {"name": "b-naber", "email": "bn263@gmx.de", "date": "2021-11-12T22:39:16Z"}, "message": "add tests", "tree": {"sha": "ae59b43e870bacfdcd4d85aadd4cb40e5709b5f4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ae59b43e870bacfdcd4d85aadd4cb40e5709b5f4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7a4aa65810b1e77f5bbfa442ca36b6fd9530e4be", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7a4aa65810b1e77f5bbfa442ca36b6fd9530e4be", "html_url": "https://github.com/rust-lang/rust/commit/7a4aa65810b1e77f5bbfa442ca36b6fd9530e4be", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7a4aa65810b1e77f5bbfa442ca36b6fd9530e4be/comments", "author": {"login": "b-naber", "id": 71934879, "node_id": "MDQ6VXNlcjcxOTM0ODc5", "avatar_url": "https://avatars.githubusercontent.com/u/71934879?v=4", "gravatar_id": "", "url": "https://api.github.com/users/b-naber", "html_url": "https://github.com/b-naber", "followers_url": "https://api.github.com/users/b-naber/followers", "following_url": "https://api.github.com/users/b-naber/following{/other_user}", "gists_url": "https://api.github.com/users/b-naber/gists{/gist_id}", "starred_url": "https://api.github.com/users/b-naber/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/b-naber/subscriptions", "organizations_url": "https://api.github.com/users/b-naber/orgs", "repos_url": "https://api.github.com/users/b-naber/repos", "events_url": "https://api.github.com/users/b-naber/events{/privacy}", "received_events_url": "https://api.github.com/users/b-naber/received_events", "type": "User", "site_admin": false}, "committer": {"login": "b-naber", "id": 71934879, "node_id": "MDQ6VXNlcjcxOTM0ODc5", "avatar_url": "https://avatars.githubusercontent.com/u/71934879?v=4", "gravatar_id": "", "url": "https://api.github.com/users/b-naber", "html_url": "https://github.com/b-naber", "followers_url": "https://api.github.com/users/b-naber/followers", "following_url": "https://api.github.com/users/b-naber/following{/other_user}", "gists_url": "https://api.github.com/users/b-naber/gists{/gist_id}", "starred_url": "https://api.github.com/users/b-naber/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/b-naber/subscriptions", "organizations_url": "https://api.github.com/users/b-naber/orgs", "repos_url": "https://api.github.com/users/b-naber/repos", "events_url": "https://api.github.com/users/b-naber/events{/privacy}", "received_events_url": "https://api.github.com/users/b-naber/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "26ca71fdb2070ae970ea9ce40a52a7b663897940", "url": "https://api.github.com/repos/rust-lang/rust/commits/26ca71fdb2070ae970ea9ce40a52a7b663897940", "html_url": "https://github.com/rust-lang/rust/commit/26ca71fdb2070ae970ea9ce40a52a7b663897940"}], "stats": {"total": 80, "additions": 80, "deletions": 0}, "files": [{"sha": "e150ecfe9a0dc396c4ab8e1d302e2f06337587dc", "filename": "src/test/ui/higher-rank-trait-bounds/normalize-under-binder/issue-90612.rs", "status": "added", "additions": 43, "deletions": 0, "changes": 43, "blob_url": "https://github.com/rust-lang/rust/blob/7a4aa65810b1e77f5bbfa442ca36b6fd9530e4be/src%2Ftest%2Fui%2Fhigher-rank-trait-bounds%2Fnormalize-under-binder%2Fissue-90612.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7a4aa65810b1e77f5bbfa442ca36b6fd9530e4be/src%2Ftest%2Fui%2Fhigher-rank-trait-bounds%2Fnormalize-under-binder%2Fissue-90612.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fhigher-rank-trait-bounds%2Fnormalize-under-binder%2Fissue-90612.rs?ref=7a4aa65810b1e77f5bbfa442ca36b6fd9530e4be", "patch": "@@ -0,0 +1,43 @@\n+// check-pass\n+\n+#![feature(generic_associated_types)]\n+\n+use std::marker::PhantomData;\n+\n+trait Family: Sized {\n+    type Item<'a>;\n+\n+    fn apply_all<F>(&self, f: F)\n+    where\n+        F: FamilyItemFn<Self> { }\n+}\n+\n+struct Array<T>(PhantomData<T>);\n+\n+impl<T: 'static> Family for Array<T> {\n+    type Item<'a> = &'a T;\n+}\n+\n+trait FamilyItemFn<T: Family> {\n+    fn apply(&self, item: T::Item<'_>);\n+}\n+\n+impl<T, F> FamilyItemFn<T> for F\n+where\n+    T: Family,\n+    for<'a> F: Fn(T::Item<'a>)\n+{\n+    fn apply(&self, item: T::Item<'_>) {\n+        (*self)(item);\n+    }\n+}\n+\n+fn process<T: 'static>(array: Array<T>) {\n+    // Works\n+    array.apply_all(|x: &T| { });\n+\n+    // ICE: NoSolution\n+    array.apply_all(|x: <Array<T> as Family>::Item<'_>| { });\n+}\n+\n+fn main() {}"}, {"sha": "18b7f383482a1c4963c12bc1ccb7261aff08a2a1", "filename": "src/test/ui/higher-rank-trait-bounds/normalize-under-binder/issue-90638.rs", "status": "added", "additions": 37, "deletions": 0, "changes": 37, "blob_url": "https://github.com/rust-lang/rust/blob/7a4aa65810b1e77f5bbfa442ca36b6fd9530e4be/src%2Ftest%2Fui%2Fhigher-rank-trait-bounds%2Fnormalize-under-binder%2Fissue-90638.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7a4aa65810b1e77f5bbfa442ca36b6fd9530e4be/src%2Ftest%2Fui%2Fhigher-rank-trait-bounds%2Fnormalize-under-binder%2Fissue-90638.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fhigher-rank-trait-bounds%2Fnormalize-under-binder%2Fissue-90638.rs?ref=7a4aa65810b1e77f5bbfa442ca36b6fd9530e4be", "patch": "@@ -0,0 +1,37 @@\n+//check-pass\n+\n+#![feature(generic_associated_types)]\n+\n+trait Yokeable<'a>: 'static {\n+    type Output: 'a;\n+}\n+\n+trait IsCovariant<'a> {}\n+\n+struct Yoke<Y: for<'a> Yokeable<'a>> {\n+    data: Y,\n+}\n+\n+impl<Y: for<'a> Yokeable<'a>> Yoke<Y> {\n+    fn project<Y2: for<'a> Yokeable<'a>>(&self, _f: for<'a> fn(<Y as Yokeable<'a>>::Output, &'a ())\n+      -> <Y2 as Yokeable<'a>>::Output) -> Yoke<Y2> {\n+\n+        unimplemented!()\n+    }\n+}\n+\n+fn _upcast<Y>(x: Yoke<Y>) -> Yoke<Box<dyn IsCovariant<'static> + 'static>> where\n+    Y: for<'a> Yokeable<'a>,\n+    for<'a> <Y as Yokeable<'a>>::Output: IsCovariant<'a>\n+    {\n+    x.project(|data, _| {\n+        Box::new(data)\n+    })\n+}\n+\n+\n+impl<'a> Yokeable<'a> for Box<dyn IsCovariant<'static> + 'static> {\n+    type Output = Box<dyn IsCovariant<'a> + 'a>;\n+}\n+\n+fn main() {}"}]}