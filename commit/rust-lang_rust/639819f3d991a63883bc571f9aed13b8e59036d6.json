{"sha": "639819f3d991a63883bc571f9aed13b8e59036d6", "node_id": "MDY6Q29tbWl0NzI0NzEyOjYzOTgxOWYzZDk5MWE2Mzg4M2JjNTcxZjlhZWQxM2I4ZTU5MDM2ZDY=", "commit": {"author": {"name": "James Miller", "email": "james@aatch.net", "date": "2013-07-28T08:45:23Z"}, "committer": {"name": "James Miller", "email": "james@aatch.net", "date": "2013-07-28T08:45:23Z"}, "message": "Fix spelling errors", "tree": {"sha": "1f52d861c5c92a7a86cbb482f6059eaded8794d9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1f52d861c5c92a7a86cbb482f6059eaded8794d9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/639819f3d991a63883bc571f9aed13b8e59036d6", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/639819f3d991a63883bc571f9aed13b8e59036d6", "html_url": "https://github.com/rust-lang/rust/commit/639819f3d991a63883bc571f9aed13b8e59036d6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/639819f3d991a63883bc571f9aed13b8e59036d6/comments", "author": {"login": "Aatch", "id": 342416, "node_id": "MDQ6VXNlcjM0MjQxNg==", "avatar_url": "https://avatars.githubusercontent.com/u/342416?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Aatch", "html_url": "https://github.com/Aatch", "followers_url": "https://api.github.com/users/Aatch/followers", "following_url": "https://api.github.com/users/Aatch/following{/other_user}", "gists_url": "https://api.github.com/users/Aatch/gists{/gist_id}", "starred_url": "https://api.github.com/users/Aatch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Aatch/subscriptions", "organizations_url": "https://api.github.com/users/Aatch/orgs", "repos_url": "https://api.github.com/users/Aatch/repos", "events_url": "https://api.github.com/users/Aatch/events{/privacy}", "received_events_url": "https://api.github.com/users/Aatch/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Aatch", "id": 342416, "node_id": "MDQ6VXNlcjM0MjQxNg==", "avatar_url": "https://avatars.githubusercontent.com/u/342416?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Aatch", "html_url": "https://github.com/Aatch", "followers_url": "https://api.github.com/users/Aatch/followers", "following_url": "https://api.github.com/users/Aatch/following{/other_user}", "gists_url": "https://api.github.com/users/Aatch/gists{/gist_id}", "starred_url": "https://api.github.com/users/Aatch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Aatch/subscriptions", "organizations_url": "https://api.github.com/users/Aatch/orgs", "repos_url": "https://api.github.com/users/Aatch/repos", "events_url": "https://api.github.com/users/Aatch/events{/privacy}", "received_events_url": "https://api.github.com/users/Aatch/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5c7e016700cd002647508ec4be764606c0086ce8", "url": "https://api.github.com/repos/rust-lang/rust/commits/5c7e016700cd002647508ec4be764606c0086ce8", "html_url": "https://github.com/rust-lang/rust/commit/5c7e016700cd002647508ec4be764606c0086ce8"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "6f514ca609dbf3b29d423614c25ed32412acc9c2", "filename": "src/libstd/unstable/atomics.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/639819f3d991a63883bc571f9aed13b8e59036d6/src%2Flibstd%2Funstable%2Fatomics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/639819f3d991a63883bc571f9aed13b8e59036d6/src%2Flibstd%2Funstable%2Fatomics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Funstable%2Fatomics.rs?ref=639819f3d991a63883bc571f9aed13b8e59036d6", "patch": "@@ -577,8 +577,8 @@ pub unsafe fn atomic_umin<T>(dst: &mut T, val: T, order: Ordering) -> T {\n  * An atomic fence.\n  *\n  * A fence 'A' which has `Release` ordering semantics, synchronizes with a\n- * fence 'B' with (at least) `Aquire` semantics, if and only if there exists\n- * atomic operations X and Y, bother operating on some atomic object 'M' such\n+ * fence 'B' with (at least) `Acquire` semantics, if and only if there exists\n+ * atomic operations X and Y, both operating on some atomic object 'M' such\n  * that A is sequenced before X, Y is synchronized before B and Y obsevers\n  * the change to M. This provides a happens-before dependence between A and B.\n  *"}]}