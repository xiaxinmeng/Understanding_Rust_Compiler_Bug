{"sha": "84ff4ab5a238558a009e1cc6f375b0922053b95b", "node_id": "C_kwDOAAsO6NoAKDg0ZmY0YWI1YTIzODU1OGEwMDllMWNjNmYzNzViMDkyMjA1M2I5NWI", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2022-11-24T07:42:35Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-11-24T07:42:35Z"}, "message": "Rollup merge of #104771 - est31:if_let_chain_broken_mir_test, r=davidtwco\n\nAdd regression test for issue #99938\n\nThat issue was a dupe of #99852, and it got fixed since, but it's always better to have multiple regression tests rather than one.\n\ncloses #99938", "tree": {"sha": "e31da327a86e298d7fe813a8448eea88efb6e565", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e31da327a86e298d7fe813a8448eea88efb6e565"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/84ff4ab5a238558a009e1cc6f375b0922053b95b", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJjfyBrCRBK7hj4Ov3rIwAAAj0IAC7qeG784HTBAu/oEBXJycTc\ng1T99bk3UnDP1WpESHtZg0ozdA0VhImYMD0FuBx3xUbVAhMePDjRkdaNQjV0VGFX\nojkNh/foufYdkBdOkKAgNpD/pxoBNSAF0vZzeAbksGMvvHGuwDc17IfxFy8sVkBn\nVrflV0nxdjjBH5uKt1BqodSH/dzjRprYm7GLZoAUCteyCQwDDZCBzeekkJoehE5M\nub3mqSQV5OI1hbsPMawaAutBm8rpIs6dHPQTH8PzlsRIX3LLixjj0nSM52tNPnj4\nXsTl0xaiO2fTGqggT4LORYm/sULY/MfzuFZDnlOXkrUcE+iX+hG9La21hkIO+78=\n=MrIS\n-----END PGP SIGNATURE-----\n", "payload": "tree e31da327a86e298d7fe813a8448eea88efb6e565\nparent 6938717ca5fe8035d4aea3cf89664afdd6b137b1\nparent 9abd785543710c382b99a8346a1e360aa539da13\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1669275755 +0100\ncommitter GitHub <noreply@github.com> 1669275755 +0100\n\nRollup merge of #104771 - est31:if_let_chain_broken_mir_test, r=davidtwco\n\nAdd regression test for issue #99938\n\nThat issue was a dupe of #99852, and it got fixed since, but it's always better to have multiple regression tests rather than one.\n\ncloses #99938\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/84ff4ab5a238558a009e1cc6f375b0922053b95b", "html_url": "https://github.com/rust-lang/rust/commit/84ff4ab5a238558a009e1cc6f375b0922053b95b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/84ff4ab5a238558a009e1cc6f375b0922053b95b/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6938717ca5fe8035d4aea3cf89664afdd6b137b1", "url": "https://api.github.com/repos/rust-lang/rust/commits/6938717ca5fe8035d4aea3cf89664afdd6b137b1", "html_url": "https://github.com/rust-lang/rust/commit/6938717ca5fe8035d4aea3cf89664afdd6b137b1"}, {"sha": "9abd785543710c382b99a8346a1e360aa539da13", "url": "https://api.github.com/repos/rust-lang/rust/commits/9abd785543710c382b99a8346a1e360aa539da13", "html_url": "https://github.com/rust-lang/rust/commit/9abd785543710c382b99a8346a1e360aa539da13"}], "stats": {"total": 31, "additions": 31, "deletions": 0}, "files": [{"sha": "bd81ce0b19c0639d45652b174d96dad7976744a0", "filename": "src/test/ui/rfc-2497-if-let-chains/issue-99938.rs", "status": "added", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/rust-lang/rust/blob/84ff4ab5a238558a009e1cc6f375b0922053b95b/src%2Ftest%2Fui%2Frfc-2497-if-let-chains%2Fissue-99938.rs", "raw_url": "https://github.com/rust-lang/rust/raw/84ff4ab5a238558a009e1cc6f375b0922053b95b/src%2Ftest%2Fui%2Frfc-2497-if-let-chains%2Fissue-99938.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2497-if-let-chains%2Fissue-99938.rs?ref=84ff4ab5a238558a009e1cc6f375b0922053b95b", "patch": "@@ -0,0 +1,31 @@\n+// compile-flags: -Zvalidate-mir -C opt-level=3\n+// build-pass\n+#![feature(let_chains)]\n+struct TupleIter<T, I: Iterator<Item = T>> {\n+    inner: I,\n+}\n+\n+impl<T, I: Iterator<Item = T>> Iterator for TupleIter<T, I> {\n+    type Item = (T, T, T);\n+\n+    fn next(&mut self) -> Option<Self::Item> {\n+        let inner = &mut self.inner;\n+\n+        if let Some(first) = inner.next()\n+            && let Some(second) = inner.next()\n+            && let Some(third) = inner.next()\n+        {\n+            Some((first, second, third))\n+        } else {\n+            None\n+        }\n+    }\n+}\n+\n+fn main() {\n+    let vec: Vec<u8> = Vec::new();\n+    let mut tup_iter = TupleIter {\n+        inner: vec.into_iter(),\n+    };\n+    tup_iter.next();\n+}"}]}