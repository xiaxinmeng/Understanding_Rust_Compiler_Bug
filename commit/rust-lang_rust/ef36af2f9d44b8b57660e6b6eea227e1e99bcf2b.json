{"sha": "ef36af2f9d44b8b57660e6b6eea227e1e99bcf2b", "node_id": "C_kwDOAAsO6NoAKGVmMzZhZjJmOWQ0NGI4YjU3NjYwZTZiNmVlYTIyN2UxZTk5YmNmMmI", "commit": {"author": {"name": "Ellen", "email": "supbscripter@gmail.com", "date": "2022-09-08T20:09:23Z"}, "committer": {"name": "Ellen", "email": "supbscripter@gmail.com", "date": "2022-09-08T20:09:23Z"}, "message": "ptr: 43276834268743978", "tree": {"sha": "3eade170b60a6cc498e6f71682f23dd865ca5b16", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3eade170b60a6cc498e6f71682f23dd865ca5b16"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ef36af2f9d44b8b57660e6b6eea227e1e99bcf2b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ef36af2f9d44b8b57660e6b6eea227e1e99bcf2b", "html_url": "https://github.com/rust-lang/rust/commit/ef36af2f9d44b8b57660e6b6eea227e1e99bcf2b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ef36af2f9d44b8b57660e6b6eea227e1e99bcf2b/comments", "author": {"login": "BoxyUwU", "id": 21149742, "node_id": "MDQ6VXNlcjIxMTQ5NzQy", "avatar_url": "https://avatars.githubusercontent.com/u/21149742?v=4", "gravatar_id": "", "url": "https://api.github.com/users/BoxyUwU", "html_url": "https://github.com/BoxyUwU", "followers_url": "https://api.github.com/users/BoxyUwU/followers", "following_url": "https://api.github.com/users/BoxyUwU/following{/other_user}", "gists_url": "https://api.github.com/users/BoxyUwU/gists{/gist_id}", "starred_url": "https://api.github.com/users/BoxyUwU/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/BoxyUwU/subscriptions", "organizations_url": "https://api.github.com/users/BoxyUwU/orgs", "repos_url": "https://api.github.com/users/BoxyUwU/repos", "events_url": "https://api.github.com/users/BoxyUwU/events{/privacy}", "received_events_url": "https://api.github.com/users/BoxyUwU/received_events", "type": "User", "site_admin": false}, "committer": {"login": "BoxyUwU", "id": 21149742, "node_id": "MDQ6VXNlcjIxMTQ5NzQy", "avatar_url": "https://avatars.githubusercontent.com/u/21149742?v=4", "gravatar_id": "", "url": "https://api.github.com/users/BoxyUwU", "html_url": "https://github.com/BoxyUwU", "followers_url": "https://api.github.com/users/BoxyUwU/followers", "following_url": "https://api.github.com/users/BoxyUwU/following{/other_user}", "gists_url": "https://api.github.com/users/BoxyUwU/gists{/gist_id}", "starred_url": "https://api.github.com/users/BoxyUwU/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/BoxyUwU/subscriptions", "organizations_url": "https://api.github.com/users/BoxyUwU/orgs", "repos_url": "https://api.github.com/users/BoxyUwU/repos", "events_url": "https://api.github.com/users/BoxyUwU/events{/privacy}", "received_events_url": "https://api.github.com/users/BoxyUwU/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "87788097b776f8e3662f76627944230684b671bd", "url": "https://api.github.com/repos/rust-lang/rust/commits/87788097b776f8e3662f76627944230684b671bd", "html_url": "https://github.com/rust-lang/rust/commit/87788097b776f8e3662f76627944230684b671bd"}], "stats": {"total": 15, "additions": 14, "deletions": 1}, "files": [{"sha": "4635a9d5575d41adcbb90b6aae8466aa9430ef0a", "filename": "compiler/rustc_middle/src/ty/mod.rs", "status": "modified", "additions": 14, "deletions": 1, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/ef36af2f9d44b8b57660e6b6eea227e1e99bcf2b/compiler%2Frustc_middle%2Fsrc%2Fty%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ef36af2f9d44b8b57660e6b6eea227e1e99bcf2b/compiler%2Frustc_middle%2Fsrc%2Fty%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fty%2Fmod.rs?ref=ef36af2f9d44b8b57660e6b6eea227e1e99bcf2b", "patch": "@@ -915,12 +915,25 @@ pub struct CoercePredicate<'tcx> {\n }\n pub type PolyCoercePredicate<'tcx> = ty::Binder<'tcx, CoercePredicate<'tcx>>;\n \n-#[derive(Clone, Copy, Debug, PartialEq, Eq, PartialOrd, Ord, Hash)]\n+#[derive(Clone, Copy, PartialEq, Eq, PartialOrd, Ord, Hash)]\n pub struct Term<'tcx> {\n     ptr: NonZeroUsize,\n     marker: PhantomData<(Ty<'tcx>, Const<'tcx>)>,\n }\n \n+impl Debug for Term<'_> {\n+    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {\n+        let data = if let Some(ty) = self.ty() {\n+            format!(\"Term::Ty({:?})\", ty)\n+        } else if let Some(ct) = self.ct() {\n+            format!(\"Term::Ct({:?})\", ct)\n+        } else {\n+            unreachable!()\n+        };\n+        f.write_str(&data)\n+    }\n+}\n+\n impl<'tcx> From<Ty<'tcx>> for Term<'tcx> {\n     fn from(ty: Ty<'tcx>) -> Self {\n         TermKind::Ty(ty).pack()"}]}