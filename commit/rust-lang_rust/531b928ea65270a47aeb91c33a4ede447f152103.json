{"sha": "531b928ea65270a47aeb91c33a4ede447f152103", "node_id": "MDY6Q29tbWl0NzI0NzEyOjUzMWI5MjhlYTY1MjcwYTQ3YWViOTFjMzNhNGVkZTQ0N2YxNTIxMDM=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2016-03-13T00:18:34Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2016-03-13T00:18:34Z"}, "message": "Auto merge of #32140 - ruud-v-a:avx-intrinsics, r=alexcrichton\n\nAdd AVX broadcast and conversion intrinsics\n\nThis adds the following intrinsics:\n\n * `_mm256_broadcast_pd`\n * `_mm256_broadcast_ps`\n * `_mm256_cvtepi32_pd`\n * `_mm256_cvtepi32_ps`\n * `_mm256_cvtpd_epi32`\n * `_mm256_cvtpd_ps`\n * `_mm256_cvtps_epi32`\n * `_mm256_cvtps_pd`\n * `_mm256_cvttpd_epi32`\n * `_mm256_cvttps_epi32`\n\nThe \"avx\" codegen feature must be enabled to use these.", "tree": {"sha": "271fd3d4aa59b41b8edb7035daa012a1e077fc46", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/271fd3d4aa59b41b8edb7035daa012a1e077fc46"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/531b928ea65270a47aeb91c33a4ede447f152103", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/531b928ea65270a47aeb91c33a4ede447f152103", "html_url": "https://github.com/rust-lang/rust/commit/531b928ea65270a47aeb91c33a4ede447f152103", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/531b928ea65270a47aeb91c33a4ede447f152103/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a2c56de7643c3b989c703758f0fb9f426403bca2", "url": "https://api.github.com/repos/rust-lang/rust/commits/a2c56de7643c3b989c703758f0fb9f426403bca2", "html_url": "https://github.com/rust-lang/rust/commit/a2c56de7643c3b989c703758f0fb9f426403bca2"}, {"sha": "c306853edafb8b740c3e224ce4fa1842a6924dc5", "url": "https://api.github.com/repos/rust-lang/rust/commits/c306853edafb8b740c3e224ce4fa1842a6924dc5", "html_url": "https://github.com/rust-lang/rust/commit/c306853edafb8b740c3e224ce4fa1842a6924dc5"}], "stats": {"total": 113, "additions": 113, "deletions": 0}, "files": [{"sha": "08524fbd6dd8a5e2ca27407a23959e084d942aa8", "filename": "src/etc/platform-intrinsics/x86/avx.json", "status": "modified", "additions": 63, "deletions": 0, "changes": 63, "blob_url": "https://github.com/rust-lang/rust/blob/531b928ea65270a47aeb91c33a4ede447f152103/src%2Fetc%2Fplatform-intrinsics%2Fx86%2Favx.json", "raw_url": "https://github.com/rust-lang/rust/raw/531b928ea65270a47aeb91c33a4ede447f152103/src%2Fetc%2Fplatform-intrinsics%2Fx86%2Favx.json", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fetc%2Fplatform-intrinsics%2Fx86%2Favx.json?ref=531b928ea65270a47aeb91c33a4ede447f152103", "patch": "@@ -8,6 +8,69 @@\n             \"ret\": \"f(32-64)\",\n             \"args\": [\"0\", \"0\"]\n         },\n+        {\n+            \"intrinsic\": \"256_broadcast_{0.data_type}\",\n+            \"width\": [256],\n+            \"llvm\": \"vbroadcastf128.{0.data_type}.256\",\n+            \"ret\": \"f(32-64)\",\n+            \"args\": [\"s8SPc\"]\n+        },\n+        {\n+            \"intrinsic\": \"256_cvtepi32_pd\",\n+            \"width\": [256],\n+            \"llvm\": \"cvtdq2.pd.256\",\n+            \"ret\": \"f64\",\n+            \"args\": [\"s32h\"]\n+        },\n+        {\n+            \"intrinsic\": \"256_cvtepi32_ps\",\n+            \"width\": [256],\n+            \"llvm\": \"cvtdq2.ps.256\",\n+            \"ret\": \"f32\",\n+            \"args\": [\"s32\"]\n+        },\n+        {\n+            \"intrinsic\": \"256_cvtpd_epi32\",\n+            \"width\": [256],\n+            \"llvm\": \"cvt.pd2dq.256\",\n+            \"ret\": \"s32h\",\n+            \"args\": [\"f64\"]\n+        },\n+        {\n+            \"intrinsic\": \"256_cvtpd_ps\",\n+            \"width\": [256],\n+            \"llvm\": \"cvt.pd2.ps.256\",\n+            \"ret\": \"f32h\",\n+            \"args\": [\"f64\"]\n+        },\n+        {\n+            \"intrinsic\": \"256_cvtps_epi32\",\n+            \"width\": [256],\n+            \"llvm\": \"cvt.ps2dq.256\",\n+            \"ret\": \"s32\",\n+            \"args\": [\"f32\"]\n+        },\n+        {\n+            \"intrinsic\": \"256_cvtps_pd\",\n+            \"width\": [256],\n+            \"llvm\": \"cvt.ps2.pd.256\",\n+            \"ret\": \"f64\",\n+            \"args\": [\"f32h\"]\n+        },\n+        {\n+            \"intrinsic\": \"256_cvttpd_epi32\",\n+            \"width\": [256],\n+            \"llvm\": \"cvtt.pd2dq.256\",\n+            \"ret\": \"s32h\",\n+            \"args\": [\"f64\"]\n+        },\n+        {\n+            \"intrinsic\": \"256_cvttps_epi32\",\n+            \"width\": [256],\n+            \"llvm\": \"cvtt.ps2dq.256\",\n+            \"ret\": \"s32\",\n+            \"args\": [\"f32\"]\n+        },\n         {\n             \"intrinsic\": \"256_dp_ps\",\n             \"width\": [256],"}, {"sha": "d8aaf151267f6e1280b6085fdf3b88a9b99f6c0a", "filename": "src/librustc_platform_intrinsics/x86.rs", "status": "modified", "additions": 50, "deletions": 0, "changes": 50, "blob_url": "https://github.com/rust-lang/rust/blob/531b928ea65270a47aeb91c33a4ede447f152103/src%2Flibrustc_platform_intrinsics%2Fx86.rs", "raw_url": "https://github.com/rust-lang/rust/raw/531b928ea65270a47aeb91c33a4ede447f152103/src%2Flibrustc_platform_intrinsics%2Fx86.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_platform_intrinsics%2Fx86.rs?ref=531b928ea65270a47aeb91c33a4ede447f152103", "patch": "@@ -498,6 +498,56 @@ pub fn find<'tcx>(_tcx: &TyCtxt<'tcx>, name: &str) -> Option<Intrinsic> {\n             output: v(f(64), 4),\n             definition: Named(\"llvm.x86.avx.addsub.pd.256\")\n         },\n+        \"256_broadcast_ps\" => Intrinsic {\n+            inputs: vec![p(true, i(8), None)],\n+            output: v(f(32), 8),\n+            definition: Named(\"llvm.x86.avx.vbroadcastf128.ps.256\")\n+        },\n+        \"256_broadcast_pd\" => Intrinsic {\n+            inputs: vec![p(true, i(8), None)],\n+            output: v(f(64), 4),\n+            definition: Named(\"llvm.x86.avx.vbroadcastf128.pd.256\")\n+        },\n+        \"256_cvtepi32_pd\" => Intrinsic {\n+            inputs: vec![v(i(32), 4)],\n+            output: v(f(64), 4),\n+            definition: Named(\"llvm.x86.avx.cvtdq2.pd.256\")\n+        },\n+        \"256_cvtepi32_ps\" => Intrinsic {\n+            inputs: vec![v(i(32), 8)],\n+            output: v(f(32), 8),\n+            definition: Named(\"llvm.x86.avx.cvtdq2.ps.256\")\n+        },\n+        \"256_cvtpd_epi32\" => Intrinsic {\n+            inputs: vec![v(f(64), 4)],\n+            output: v(i(32), 4),\n+            definition: Named(\"llvm.x86.avx.cvt.pd2dq.256\")\n+        },\n+        \"256_cvtpd_ps\" => Intrinsic {\n+            inputs: vec![v(f(64), 4)],\n+            output: v(f(32), 4),\n+            definition: Named(\"llvm.x86.avx.cvt.pd2.ps.256\")\n+        },\n+        \"256_cvtps_epi32\" => Intrinsic {\n+            inputs: vec![v(f(32), 8)],\n+            output: v(i(32), 8),\n+            definition: Named(\"llvm.x86.avx.cvt.ps2dq.256\")\n+        },\n+        \"256_cvtps_pd\" => Intrinsic {\n+            inputs: vec![v(f(32), 4)],\n+            output: v(f(64), 4),\n+            definition: Named(\"llvm.x86.avx.cvt.ps2.pd.256\")\n+        },\n+        \"256_cvttpd_epi32\" => Intrinsic {\n+            inputs: vec![v(f(64), 4)],\n+            output: v(i(32), 4),\n+            definition: Named(\"llvm.x86.avx.cvtt.pd2dq.256\")\n+        },\n+        \"256_cvttps_epi32\" => Intrinsic {\n+            inputs: vec![v(f(32), 8)],\n+            output: v(i(32), 8),\n+            definition: Named(\"llvm.x86.avx.cvtt.ps2dq.256\")\n+        },\n         \"256_dp_ps\" => Intrinsic {\n             inputs: vec![v(f(32), 8), v(f(32), 8), i_(32, 8)],\n             output: v(f(32), 8),"}]}