{"sha": "2a7dac05e7d774c0b2138fbb7139f73f86808cdd", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJhN2RhYzA1ZTdkNzc0YzBiMjEzOGZiYjcxMzlmNzNmODY4MDhjZGQ=", "commit": {"author": {"name": "kennytm", "email": "kennytm@gmail.com", "date": "2018-03-17T09:20:41Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2018-03-17T09:20:41Z"}, "message": "Rollup merge of #48943 - comex:verbose, r=kennytm\n\nSupport extra-verbose builds\n\n- The bootstrap crate currently passes -v to Cargo if itself invoked with -vv.  But Cargo supports -vv (to show build script output), so make bootstrap pass that if itself invoked with -vvv.  (More specifically, pass N '-v's to Cargo if invoked with N+1 of them.)\n\n- bootstrap.py currently tries to pass on up to two '-v's to cargo when building bootstrap, but incorrectly ('-v' is marked as 'store_true', so argparse stores either False or True, ignoring multiple '-v's).  Fix this, allow passing any number of '-v's, and make it consistent with bootstrap's invocation of Cargo (i.e. subtract one from the number of '-v's).\n\n- Also improve bootstrap.py's config.toml 'parsing' to support arbitrary verbosity levels, + allow command line to override it.", "tree": {"sha": "88a87b497b4247223cab1518751f237feca85e53", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/88a87b497b4247223cab1518751f237feca85e53"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2a7dac05e7d774c0b2138fbb7139f73f86808cdd", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJarN3pCRBK7hj4Ov3rIwAAdHIIAEYCJ8+PkZuTUZCCYQLlXjbH\nvrriRQMrIah+l5gCzPVtKLAgOPw17BHRS4AKSht+yGecJqoKitTw7mEFeAx/bjGz\nKDkBrLlCNL9dwgrvDoqgrGF3aJt1DVi0jCBnecHzFHcLTUjs3UY0VBUoGxJjIgqK\nH7BMfXBb81CGnEWAEfjh9VdFbZ0UVJz6BXJmPRmo6L7tB0ayUy75wPdfTgrDtWXk\nvX7pSdHNBcACx/M1vJHnVhsgpKs1StTpD8mtz7PZ4hkDfosHKD5SuE5UhofwILCZ\nRaZwg7AHmhVO2C15xzgzb5bTQmXb0+7F6XCu1PrENq2yz/0mvCOMQrOVeGnwI/Y=\n=pgW0\n-----END PGP SIGNATURE-----\n", "payload": "tree 88a87b497b4247223cab1518751f237feca85e53\nparent 8cabda4ce8d675868acff69e69250ad0b08d059b\nparent ec49234f44adbaf858efa646df67a41055fc905d\nauthor kennytm <kennytm@gmail.com> 1521278441 +0800\ncommitter GitHub <noreply@github.com> 1521278441 +0800\n\nRollup merge of #48943 - comex:verbose, r=kennytm\n\nSupport extra-verbose builds\n\n- The bootstrap crate currently passes -v to Cargo if itself invoked with -vv.  But Cargo supports -vv (to show build script output), so make bootstrap pass that if itself invoked with -vvv.  (More specifically, pass N '-v's to Cargo if invoked with N+1 of them.)\n\n- bootstrap.py currently tries to pass on up to two '-v's to cargo when building bootstrap, but incorrectly ('-v' is marked as 'store_true', so argparse stores either False or True, ignoring multiple '-v's).  Fix this, allow passing any number of '-v's, and make it consistent with bootstrap's invocation of Cargo (i.e. subtract one from the number of '-v's).\n\n- Also improve bootstrap.py's config.toml 'parsing' to support arbitrary verbosity levels, + allow command line to override it.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2a7dac05e7d774c0b2138fbb7139f73f86808cdd", "html_url": "https://github.com/rust-lang/rust/commit/2a7dac05e7d774c0b2138fbb7139f73f86808cdd", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2a7dac05e7d774c0b2138fbb7139f73f86808cdd/comments", "author": {"login": "kennytm", "id": 103023, "node_id": "MDQ6VXNlcjEwMzAyMw==", "avatar_url": "https://avatars.githubusercontent.com/u/103023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kennytm", "html_url": "https://github.com/kennytm", "followers_url": "https://api.github.com/users/kennytm/followers", "following_url": "https://api.github.com/users/kennytm/following{/other_user}", "gists_url": "https://api.github.com/users/kennytm/gists{/gist_id}", "starred_url": "https://api.github.com/users/kennytm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kennytm/subscriptions", "organizations_url": "https://api.github.com/users/kennytm/orgs", "repos_url": "https://api.github.com/users/kennytm/repos", "events_url": "https://api.github.com/users/kennytm/events{/privacy}", "received_events_url": "https://api.github.com/users/kennytm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8cabda4ce8d675868acff69e69250ad0b08d059b", "url": "https://api.github.com/repos/rust-lang/rust/commits/8cabda4ce8d675868acff69e69250ad0b08d059b", "html_url": "https://github.com/rust-lang/rust/commit/8cabda4ce8d675868acff69e69250ad0b08d059b"}, {"sha": "ec49234f44adbaf858efa646df67a41055fc905d", "url": "https://api.github.com/repos/rust-lang/rust/commits/ec49234f44adbaf858efa646df67a41055fc905d", "html_url": "https://github.com/rust-lang/rust/commit/ec49234f44adbaf858efa646df67a41055fc905d"}], "stats": {"total": 21, "additions": 7, "deletions": 14}, "files": [{"sha": "11f174a52a6316a0b88f16ad14649d6674396d6f", "filename": "src/bootstrap/bootstrap.py", "status": "modified", "additions": 5, "deletions": 8, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/2a7dac05e7d774c0b2138fbb7139f73f86808cdd/src%2Fbootstrap%2Fbootstrap.py", "raw_url": "https://github.com/rust-lang/rust/raw/2a7dac05e7d774c0b2138fbb7139f73f86808cdd/src%2Fbootstrap%2Fbootstrap.py", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fbootstrap.py?ref=2a7dac05e7d774c0b2138fbb7139f73f86808cdd", "patch": "@@ -597,10 +597,8 @@ def build_bootstrap(self):\n                 self.cargo()))\n         args = [self.cargo(), \"build\", \"--manifest-path\",\n                 os.path.join(self.rust_root, \"src/bootstrap/Cargo.toml\")]\n-        if self.verbose:\n+        for _ in range(1, self.verbose):\n             args.append(\"--verbose\")\n-            if self.verbose > 1:\n-                args.append(\"--verbose\")\n         if self.use_locked_deps:\n             args.append(\"--locked\")\n         if self.use_vendored_sources:\n@@ -675,7 +673,7 @@ def bootstrap(help_triggered):\n     parser.add_argument('--config')\n     parser.add_argument('--build')\n     parser.add_argument('--clean', action='store_true')\n-    parser.add_argument('-v', '--verbose', action='store_true')\n+    parser.add_argument('-v', '--verbose', action='count', default=0)\n \n     args = [a for a in sys.argv if a != '-h' and a != '--help']\n     args, _ = parser.parse_known_args(args)\n@@ -691,10 +689,9 @@ def bootstrap(help_triggered):\n     except (OSError, IOError):\n         pass\n \n-    if '\\nverbose = 2' in build.config_toml:\n-        build.verbose = 2\n-    elif '\\nverbose = 1' in build.config_toml:\n-        build.verbose = 1\n+    match = re.search(r'\\nverbose = (\\d+)', build.config_toml)\n+    if match is not None:\n+        build.verbose = max(build.verbose, int(match.group(1)))\n \n     build.use_vendored_sources = '\\nvendor = true' in build.config_toml\n "}, {"sha": "675d3dd437eef9deb3cc60d7956b038628c81e05", "filename": "src/bootstrap/builder.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2a7dac05e7d774c0b2138fbb7139f73f86808cdd/src%2Fbootstrap%2Fbuilder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2a7dac05e7d774c0b2138fbb7139f73f86808cdd/src%2Fbootstrap%2Fbuilder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fbuilder.rs?ref=2a7dac05e7d774c0b2138fbb7139f73f86808cdd", "patch": "@@ -763,7 +763,7 @@ impl<'a> Builder<'a> {\n             cargo.env(\"WINAPI_NO_BUNDLED_LIBRARIES\", \"1\");\n         }\n \n-        if self.is_very_verbose() {\n+        for _ in 1..self.verbosity {\n             cargo.arg(\"-v\");\n         }\n "}, {"sha": "c5af0f8e2e15331cc45fbf779b471731cde82149", "filename": "src/bootstrap/flags.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2a7dac05e7d774c0b2138fbb7139f73f86808cdd/src%2Fbootstrap%2Fflags.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2a7dac05e7d774c0b2138fbb7139f73f86808cdd/src%2Fbootstrap%2Fflags.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fflags.rs?ref=2a7dac05e7d774c0b2138fbb7139f73f86808cdd", "patch": "@@ -29,7 +29,7 @@ use cache::{Interned, INTERNER};\n \n /// Deserialized version of all flags for this compile.\n pub struct Flags {\n-    pub verbose: usize, // verbosity level: 0 == not verbose, 1 == verbose, 2 == very verbose\n+    pub verbose: usize, // number of -v args; each extra -v after the first is passed to Cargo\n     pub on_fail: Option<String>,\n     pub stage: Option<u32>,\n     pub keep_stage: Option<u32>,"}, {"sha": "b778ba33d89ccfd06e71d372596400c509ffd1b4", "filename": "src/bootstrap/lib.rs", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/2a7dac05e7d774c0b2138fbb7139f73f86808cdd/src%2Fbootstrap%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2a7dac05e7d774c0b2138fbb7139f73f86808cdd/src%2Fbootstrap%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Flib.rs?ref=2a7dac05e7d774c0b2138fbb7139f73f86808cdd", "patch": "@@ -606,10 +606,6 @@ impl Build {\n         self.verbosity > 0\n     }\n \n-    pub fn is_very_verbose(&self) -> bool {\n-        self.verbosity > 1\n-    }\n-\n     /// Prints a message if this build is configured in verbose mode.\n     fn verbose(&self, msg: &str) {\n         if self.is_verbose() {"}]}