{"sha": "f1b52b34f201456d8a0e9da907e3e5619fa24ac7", "node_id": "MDY6Q29tbWl0NzI0NzEyOmYxYjUyYjM0ZjIwMTQ1NmQ4YTBlOWRhOTA3ZTNlNTYxOWZhMjRhYzc=", "commit": {"author": {"name": "John VanEnk", "email": "jvanenk@fastly.com", "date": "2020-01-11T01:42:30Z"}, "committer": {"name": "Eduard-Mihai Burtescu", "email": "edy.burt@gmail.com", "date": "2020-02-08T04:17:03Z"}, "message": "Add a test that demonstrates an incorrect return value when calling into rust with non-c-like-enums.", "tree": {"sha": "19b186e20bba81a2d0b7a790ce24c3c8c711c2ef", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/19b186e20bba81a2d0b7a790ce24c3c8c711c2ef"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f1b52b34f201456d8a0e9da907e3e5619fa24ac7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f1b52b34f201456d8a0e9da907e3e5619fa24ac7", "html_url": "https://github.com/rust-lang/rust/commit/f1b52b34f201456d8a0e9da907e3e5619fa24ac7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f1b52b34f201456d8a0e9da907e3e5619fa24ac7/comments", "author": {"login": "sw17ch", "id": 95705, "node_id": "MDQ6VXNlcjk1NzA1", "avatar_url": "https://avatars.githubusercontent.com/u/95705?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sw17ch", "html_url": "https://github.com/sw17ch", "followers_url": "https://api.github.com/users/sw17ch/followers", "following_url": "https://api.github.com/users/sw17ch/following{/other_user}", "gists_url": "https://api.github.com/users/sw17ch/gists{/gist_id}", "starred_url": "https://api.github.com/users/sw17ch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sw17ch/subscriptions", "organizations_url": "https://api.github.com/users/sw17ch/orgs", "repos_url": "https://api.github.com/users/sw17ch/repos", "events_url": "https://api.github.com/users/sw17ch/events{/privacy}", "received_events_url": "https://api.github.com/users/sw17ch/received_events", "type": "User", "site_admin": false}, "committer": {"login": "eddyb", "id": 77424, "node_id": "MDQ6VXNlcjc3NDI0", "avatar_url": "https://avatars.githubusercontent.com/u/77424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eddyb", "html_url": "https://github.com/eddyb", "followers_url": "https://api.github.com/users/eddyb/followers", "following_url": "https://api.github.com/users/eddyb/following{/other_user}", "gists_url": "https://api.github.com/users/eddyb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eddyb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eddyb/subscriptions", "organizations_url": "https://api.github.com/users/eddyb/orgs", "repos_url": "https://api.github.com/users/eddyb/repos", "events_url": "https://api.github.com/users/eddyb/events{/privacy}", "received_events_url": "https://api.github.com/users/eddyb/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cd5ad993d093f8ee5eedb63ed888a2ae2c35299f", "url": "https://api.github.com/repos/rust-lang/rust/commits/cd5ad993d093f8ee5eedb63ed888a2ae2c35299f", "html_url": "https://github.com/rust-lang/rust/commit/cd5ad993d093f8ee5eedb63ed888a2ae2c35299f"}], "stats": {"total": 65, "additions": 65, "deletions": 0}, "files": [{"sha": "5b5d620efe655f3e31f80d150beaabbeb6facd79", "filename": "src/test/run-make-fulldeps/arguments-non-c-like-enum/Makefile", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/f1b52b34f201456d8a0e9da907e3e5619fa24ac7/src%2Ftest%2Frun-make-fulldeps%2Farguments-non-c-like-enum%2FMakefile", "raw_url": "https://github.com/rust-lang/rust/raw/f1b52b34f201456d8a0e9da907e3e5619fa24ac7/src%2Ftest%2Frun-make-fulldeps%2Farguments-non-c-like-enum%2FMakefile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Farguments-non-c-like-enum%2FMakefile?ref=f1b52b34f201456d8a0e9da907e3e5619fa24ac7", "patch": "@@ -0,0 +1,7 @@\n+-include ../tools.mk\n+\n+all:\n+\t$(RUSTC) --crate-type=staticlib nonclike.rs\n+\t$(CC) test.c $(call STATICLIB,nonclike) $(call OUT_EXE,test) \\\n+\t\t$(EXTRACFLAGS) $(EXTRACXXFLAGS)\n+\t$(call RUN,test)"}, {"sha": "563f907608bd02fa9a88b2e4e52ae6686907e530", "filename": "src/test/run-make-fulldeps/arguments-non-c-like-enum/nonclike.rs", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/f1b52b34f201456d8a0e9da907e3e5619fa24ac7/src%2Ftest%2Frun-make-fulldeps%2Farguments-non-c-like-enum%2Fnonclike.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f1b52b34f201456d8a0e9da907e3e5619fa24ac7/src%2Ftest%2Frun-make-fulldeps%2Farguments-non-c-like-enum%2Fnonclike.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Farguments-non-c-like-enum%2Fnonclike.rs?ref=f1b52b34f201456d8a0e9da907e3e5619fa24ac7", "patch": "@@ -0,0 +1,18 @@\n+#![crate_type = \"lib\"]\n+#![crate_name = \"nonclike\"]\n+\n+#[repr(C,u8)]\n+pub enum T {\n+    A(u64),\n+    B,\n+}\n+\n+#[no_mangle]\n+pub extern \"C\" fn t_add(a: T, b: T) -> u64 {\n+    match (a,b) {\n+        (T::A(a), T::A(b)) => a + b,\n+        (T::A(a), T::B) => a,\n+        (T::B, T::A(b)) => b,\n+        _ => 0,\n+    }\n+}"}, {"sha": "f622471e7d1fa1d405390690921704f3d878aec3", "filename": "src/test/run-make-fulldeps/arguments-non-c-like-enum/test.c", "status": "added", "additions": 40, "deletions": 0, "changes": 40, "blob_url": "https://github.com/rust-lang/rust/blob/f1b52b34f201456d8a0e9da907e3e5619fa24ac7/src%2Ftest%2Frun-make-fulldeps%2Farguments-non-c-like-enum%2Ftest.c", "raw_url": "https://github.com/rust-lang/rust/raw/f1b52b34f201456d8a0e9da907e3e5619fa24ac7/src%2Ftest%2Frun-make-fulldeps%2Farguments-non-c-like-enum%2Ftest.c", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Farguments-non-c-like-enum%2Ftest.c?ref=f1b52b34f201456d8a0e9da907e3e5619fa24ac7", "patch": "@@ -0,0 +1,40 @@\n+#include <stdint.h>\n+#include <assert.h>\n+\n+#include <stdio.h>\n+\n+/* This is the code generated by cbindgen 0.12.1 for the `enum T` type\n+ * in nonclike.rs . */\n+enum T_Tag {\n+  A,\n+  B,\n+};\n+typedef uint8_t T_Tag;\n+\n+typedef struct {\n+  uint64_t _0;\n+} A_Body;\n+\n+typedef struct {\n+  T_Tag tag;\n+  union {\n+    A_Body a;\n+  };\n+} T;\n+\n+/* This symbol is defined by the Rust staticlib built from\n+ * nonclike.rs. */\n+extern uint64_t t_add(T a, T b);\n+\n+int main(int argc, char *argv[]) {\n+  (void)argc; (void)argv;\n+\n+  T x = { .tag = A, .a = { ._0 = 1 } };\n+  T y = { .tag = A, .a = { ._0 = 10 } };\n+\n+  uint64_t r = t_add(x, y);\n+\n+  assert(11 == r);\n+\n+  return 0;\n+}"}]}