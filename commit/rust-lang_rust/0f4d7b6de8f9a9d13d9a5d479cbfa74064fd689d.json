{"sha": "0f4d7b6de8f9a9d13d9a5d479cbfa74064fd689d", "node_id": "C_kwDOAAsO6NoAKDBmNGQ3YjZkZThmOWE5ZDEzZDlhNWQ0NzljYmZhNzQwNjRmZDY4OWQ", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2022-09-21T20:20:40Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2022-09-21T20:20:40Z"}, "message": "OpTy: fix a method taking self rather than &self", "tree": {"sha": "7b6acf92405f91d6d192e3058ad0fb9cbc1e7603", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7b6acf92405f91d6d192e3058ad0fb9cbc1e7603"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0f4d7b6de8f9a9d13d9a5d479cbfa74064fd689d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0f4d7b6de8f9a9d13d9a5d479cbfa74064fd689d", "html_url": "https://github.com/rust-lang/rust/commit/0f4d7b6de8f9a9d13d9a5d479cbfa74064fd689d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0f4d7b6de8f9a9d13d9a5d479cbfa74064fd689d/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "db4b4d3becf257e7b1c051540fc7e317958d8d2d", "url": "https://api.github.com/repos/rust-lang/rust/commits/db4b4d3becf257e7b1c051540fc7e317958d8d2d", "html_url": "https://github.com/rust-lang/rust/commit/db4b4d3becf257e7b1c051540fc7e317958d8d2d"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "bc1aa43b73a993e43a4d3a4ee80d391f5ebb2efc", "filename": "compiler/rustc_const_eval/src/interpret/place.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0f4d7b6de8f9a9d13d9a5d479cbfa74064fd689d/compiler%2Frustc_const_eval%2Fsrc%2Finterpret%2Fplace.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f4d7b6de8f9a9d13d9a5d479cbfa74064fd689d/compiler%2Frustc_const_eval%2Fsrc%2Finterpret%2Fplace.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_const_eval%2Fsrc%2Finterpret%2Fplace.rs?ref=0f4d7b6de8f9a9d13d9a5d479cbfa74064fd689d", "patch": "@@ -280,7 +280,7 @@ impl<'tcx, Prov: Provenance> PlaceTy<'tcx, Prov> {\n \n     #[inline(always)]\n     #[cfg_attr(debug_assertions, track_caller)] // only in debug builds due to perf (see #98980)\n-    pub fn assert_mem_place(self) -> MPlaceTy<'tcx, Prov> {\n+    pub fn assert_mem_place(&self) -> MPlaceTy<'tcx, Prov> {\n         self.try_as_mplace().unwrap()\n     }\n }"}]}