{"sha": "a7641f1fcc90ec7596c859bc0faff533a9fb33d2", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE3NjQxZjFmY2M5MGVjNzU5NmM4NTliYzBmYWZmNTMzYTlmYjMzZDI=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-12-19T09:42:07Z"}, "committer": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-12-20T21:22:44Z"}, "message": "address review comments", "tree": {"sha": "b7ac45d81e5ee276a13bac2838a41e3602cf596f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b7ac45d81e5ee276a13bac2838a41e3602cf596f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a7641f1fcc90ec7596c859bc0faff533a9fb33d2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a7641f1fcc90ec7596c859bc0faff533a9fb33d2", "html_url": "https://github.com/rust-lang/rust/commit/a7641f1fcc90ec7596c859bc0faff533a9fb33d2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a7641f1fcc90ec7596c859bc0faff533a9fb33d2/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a7aec3f207fb40f0c4c857fb91a03372ac8bcd69", "url": "https://api.github.com/repos/rust-lang/rust/commits/a7aec3f207fb40f0c4c857fb91a03372ac8bcd69", "html_url": "https://github.com/rust-lang/rust/commit/a7aec3f207fb40f0c4c857fb91a03372ac8bcd69"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "06ec3f380091560484f1e91b1732ead11dcbeb5b", "filename": "src/librustc_lint/unused.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/a7641f1fcc90ec7596c859bc0faff533a9fb33d2/src%2Flibrustc_lint%2Funused.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a7641f1fcc90ec7596c859bc0faff533a9fb33d2/src%2Flibrustc_lint%2Funused.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_lint%2Funused.rs?ref=a7641f1fcc90ec7596c859bc0faff533a9fb33d2", "patch": "@@ -392,7 +392,7 @@ impl UnusedParens {\n         avoid_or: bool,\n         avoid_mut: bool,\n     ) {\n-        use ast::{PatKind, BindingMode::ByValue, Mutability::Mut};\n+        use ast::{PatKind, BindingMode, Mutability};\n \n         if let PatKind::Paren(inner) = &value.kind {\n             match inner.kind {\n@@ -404,7 +404,7 @@ impl UnusedParens {\n                 // Avoid `p0 | .. | pn` if we should.\n                 PatKind::Or(..) if avoid_or => return,\n                 // Avoid `mut x` and `mut x @ p` if we should:\n-                PatKind::Ident(ByValue(Mut), ..) if avoid_mut => return,\n+                PatKind::Ident(BindingMode::ByValue(Mutability::Mut), ..) if avoid_mut => return,\n                 // Otherwise proceed with linting.\n                 _ => {}\n             }"}]}