{"sha": "264bfc418cc6a0d3f2b695f58fc8aaaea7800a4f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI2NGJmYzQxOGNjNmEwZDNmMmI2OTVmNThmYzhhYWFlYTc4MDBhNGY=", "commit": {"author": {"name": "kennytm", "email": "kennytm@gmail.com", "date": "2017-11-07T07:52:11Z"}, "committer": {"name": "kennytm", "email": "kennytm@gmail.com", "date": "2017-11-07T14:40:13Z"}, "message": "Rollup merge of #45714 - sdroege:thread-panic-docs, r=dtolnay\n\nUpdate the std::thread docs and clarify that panics can nowadays be caught", "tree": {"sha": "6ca5663db4876df881c24f996d8ab525166e77e8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6ca5663db4876df881c24f996d8ab525166e77e8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/264bfc418cc6a0d3f2b695f58fc8aaaea7800a4f", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEZ1R8CLMp8f2GxWoQ/vbIBR0OATwFAloBxc4ACgkQ/vbIBR0O\nATwpwhAApzzFjOAWDxJdhdLN4fJOkFcf6xtQyzA0nsAuq//WLtRXWjVWWocti6yX\nGbzWsQ7XypmUYcFbfjQ2Tmr996cUIKjJT5WxO9yuKeRBTWFNtx70YPSxiI2JfSD2\n4+zIbKIACxPc7MBihCEeIc9gT2MGMTw55t1UEZAcdGiVGCWepivBZOwe8sLjxceJ\nqDGFmLCKi4rSneHssFsV0Wy8qHfsf/d/fP03AjIZiE9iMV36KLRJkTLnQL+XGvlB\nhd0AiIti3hm8jSqcXOHhuGuWy2t5Q8VgrEo8FSInB3m87ErxPi9eTnZzoyMgPD3X\nKLJnvYOJtPfyckIUQj49MKEGVDK10FcPljo+6D6B9v+zS+vTIi27C5yU7sBKnv7T\npe2iSqm3djg66SsQQCinFXcWGKPw9M4UdBTqtLxlXZPomVnkLEFLFBop6f/tYBk3\n+Ge5SlAPcuZThqjjABt0cXNv1xK8TC3CSdAtTTUn0wlpSdz4v3vSs25Wcw+5iV21\nYDaG824bo2LhdWdy7MhpqNLAhh1dqiUjqvgqgPyOw3AWSXR9xZAYoxm48nAlrU0l\n5ovx0loEfCwkcpGh8DpJ9EEMxaK9yGuhMyeOh8aoWQDdVu5s/tp+ynpD1yMCHMiN\nWGEwDvvlUbTl8sH9LD4XUcXf4+bWDtW5X8dfISpNI//AfGpKmFU=\n=IjOF\n-----END PGP SIGNATURE-----", "payload": "tree 6ca5663db4876df881c24f996d8ab525166e77e8\nparent eae36714dff92b1c149bb48d3f6ecb515c9c0470\nparent b86bba594023591f4d6c795cf4da115640c3a918\nauthor kennytm <kennytm@gmail.com> 1510041131 +0800\ncommitter kennytm <kennytm@gmail.com> 1510065613 +0800\n\nRollup merge of #45714 - sdroege:thread-panic-docs, r=dtolnay\n\nUpdate the std::thread docs and clarify that panics can nowadays be caught\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/264bfc418cc6a0d3f2b695f58fc8aaaea7800a4f", "html_url": "https://github.com/rust-lang/rust/commit/264bfc418cc6a0d3f2b695f58fc8aaaea7800a4f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/264bfc418cc6a0d3f2b695f58fc8aaaea7800a4f/comments", "author": {"login": "kennytm", "id": 103023, "node_id": "MDQ6VXNlcjEwMzAyMw==", "avatar_url": "https://avatars.githubusercontent.com/u/103023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kennytm", "html_url": "https://github.com/kennytm", "followers_url": "https://api.github.com/users/kennytm/followers", "following_url": "https://api.github.com/users/kennytm/following{/other_user}", "gists_url": "https://api.github.com/users/kennytm/gists{/gist_id}", "starred_url": "https://api.github.com/users/kennytm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kennytm/subscriptions", "organizations_url": "https://api.github.com/users/kennytm/orgs", "repos_url": "https://api.github.com/users/kennytm/repos", "events_url": "https://api.github.com/users/kennytm/events{/privacy}", "received_events_url": "https://api.github.com/users/kennytm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kennytm", "id": 103023, "node_id": "MDQ6VXNlcjEwMzAyMw==", "avatar_url": "https://avatars.githubusercontent.com/u/103023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kennytm", "html_url": "https://github.com/kennytm", "followers_url": "https://api.github.com/users/kennytm/followers", "following_url": "https://api.github.com/users/kennytm/following{/other_user}", "gists_url": "https://api.github.com/users/kennytm/gists{/gist_id}", "starred_url": "https://api.github.com/users/kennytm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kennytm/subscriptions", "organizations_url": "https://api.github.com/users/kennytm/orgs", "repos_url": "https://api.github.com/users/kennytm/repos", "events_url": "https://api.github.com/users/kennytm/events{/privacy}", "received_events_url": "https://api.github.com/users/kennytm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "eae36714dff92b1c149bb48d3f6ecb515c9c0470", "url": "https://api.github.com/repos/rust-lang/rust/commits/eae36714dff92b1c149bb48d3f6ecb515c9c0470", "html_url": "https://github.com/rust-lang/rust/commit/eae36714dff92b1c149bb48d3f6ecb515c9c0470"}, {"sha": "b86bba594023591f4d6c795cf4da115640c3a918", "url": "https://api.github.com/repos/rust-lang/rust/commits/b86bba594023591f4d6c795cf4da115640c3a918", "html_url": "https://github.com/rust-lang/rust/commit/b86bba594023591f4d6c795cf4da115640c3a918"}], "stats": {"total": 14, "additions": 9, "deletions": 5}, "files": [{"sha": "ee49bf796b86f9d3da596c7c9d5ca85c58226a8a", "filename": "src/libstd/thread/mod.rs", "status": "modified", "additions": 9, "deletions": 5, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/264bfc418cc6a0d3f2b695f58fc8aaaea7800a4f/src%2Flibstd%2Fthread%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/264bfc418cc6a0d3f2b695f58fc8aaaea7800a4f/src%2Flibstd%2Fthread%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fthread%2Fmod.rs?ref=264bfc418cc6a0d3f2b695f58fc8aaaea7800a4f", "patch": "@@ -25,11 +25,15 @@\n //!\n //! Fatal logic errors in Rust cause *thread panic*, during which\n //! a thread will unwind the stack, running destructors and freeing\n-//! owned resources. Thread panic is unrecoverable from within\n-//! the panicking thread (i.e. there is no 'try/catch' in Rust), but\n-//! the panic may optionally be detected from a different thread. If\n-//! the main thread panics, the application will exit with a non-zero\n-//! exit code.\n+//! owned resources. While not meant as a 'try/catch' mechanism, panics\n+//! in Rust can nonetheless be caught (unless compiling with `panic=abort`) with\n+//! [`catch_unwind`](../../std/panic/fn.catch_unwind.html) and recovered\n+//! from, or alternatively be resumed with\n+//! [`resume_unwind`](../../std/panic/fn.resume_unwind.html). If the panic\n+//! is not caught the thread will exit, but the panic may optionally be\n+//! detected from a different thread with [`join`]. If the main thread panics\n+//! without the panic being caught, the application will exit with a\n+//! non-zero exit code.\n //!\n //! When the main thread of a Rust program terminates, the entire program shuts\n //! down, even if other threads are still running. However, this module provides"}]}