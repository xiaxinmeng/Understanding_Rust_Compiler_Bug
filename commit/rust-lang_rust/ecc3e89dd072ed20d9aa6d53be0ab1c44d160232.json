{"sha": "ecc3e89dd072ed20d9aa6d53be0ab1c44d160232", "node_id": "MDY6Q29tbWl0NzI0NzEyOmVjYzNlODlkZDA3MmVkMjBkOWFhNmQ1M2JlMGFiMWM0NGQxNjAyMzI=", "commit": {"author": {"name": "Charles Lew", "email": "crlf0710@gmail.com", "date": "2019-02-11T02:09:26Z"}, "committer": {"name": "CrLF0710", "email": "crlf0710@gmail.com", "date": "2019-04-04T18:32:21Z"}, "message": "Stabilize boxed_closure_impls in 1.35.0.", "tree": {"sha": "0cd68314a770eb4fdff72b596e0e0736d2ca97d7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0cd68314a770eb4fdff72b596e0e0736d2ca97d7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ecc3e89dd072ed20d9aa6d53be0ab1c44d160232", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ecc3e89dd072ed20d9aa6d53be0ab1c44d160232", "html_url": "https://github.com/rust-lang/rust/commit/ecc3e89dd072ed20d9aa6d53be0ab1c44d160232", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ecc3e89dd072ed20d9aa6d53be0ab1c44d160232/comments", "author": {"login": "crlf0710", "id": 451806, "node_id": "MDQ6VXNlcjQ1MTgwNg==", "avatar_url": "https://avatars.githubusercontent.com/u/451806?v=4", "gravatar_id": "", "url": "https://api.github.com/users/crlf0710", "html_url": "https://github.com/crlf0710", "followers_url": "https://api.github.com/users/crlf0710/followers", "following_url": "https://api.github.com/users/crlf0710/following{/other_user}", "gists_url": "https://api.github.com/users/crlf0710/gists{/gist_id}", "starred_url": "https://api.github.com/users/crlf0710/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/crlf0710/subscriptions", "organizations_url": "https://api.github.com/users/crlf0710/orgs", "repos_url": "https://api.github.com/users/crlf0710/repos", "events_url": "https://api.github.com/users/crlf0710/events{/privacy}", "received_events_url": "https://api.github.com/users/crlf0710/received_events", "type": "User", "site_admin": false}, "committer": {"login": "crlf0710", "id": 451806, "node_id": "MDQ6VXNlcjQ1MTgwNg==", "avatar_url": "https://avatars.githubusercontent.com/u/451806?v=4", "gravatar_id": "", "url": "https://api.github.com/users/crlf0710", "html_url": "https://github.com/crlf0710", "followers_url": "https://api.github.com/users/crlf0710/followers", "following_url": "https://api.github.com/users/crlf0710/following{/other_user}", "gists_url": "https://api.github.com/users/crlf0710/gists{/gist_id}", "starred_url": "https://api.github.com/users/crlf0710/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/crlf0710/subscriptions", "organizations_url": "https://api.github.com/users/crlf0710/orgs", "repos_url": "https://api.github.com/users/crlf0710/repos", "events_url": "https://api.github.com/users/crlf0710/events{/privacy}", "received_events_url": "https://api.github.com/users/crlf0710/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "45c0b28bcb6e383cd9d24d3845ee8accda31c889", "url": "https://api.github.com/repos/rust-lang/rust/commits/45c0b28bcb6e383cd9d24d3845ee8accda31c889", "html_url": "https://github.com/rust-lang/rust/commit/45c0b28bcb6e383cd9d24d3845ee8accda31c889"}], "stats": {"total": 112, "additions": 3, "deletions": 109}, "files": [{"sha": "5ceb54ff3b96e065a55e3711869ee7521ca69e50", "filename": "src/doc/unstable-book/src/library-features/boxed-closure-impls.md", "status": "removed", "additions": 0, "deletions": 98, "changes": 98, "blob_url": "https://github.com/rust-lang/rust/blob/45c0b28bcb6e383cd9d24d3845ee8accda31c889/src%2Fdoc%2Funstable-book%2Fsrc%2Flibrary-features%2Fboxed-closure-impls.md", "raw_url": "https://github.com/rust-lang/rust/raw/45c0b28bcb6e383cd9d24d3845ee8accda31c889/src%2Fdoc%2Funstable-book%2Fsrc%2Flibrary-features%2Fboxed-closure-impls.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Funstable-book%2Fsrc%2Flibrary-features%2Fboxed-closure-impls.md?ref=45c0b28bcb6e383cd9d24d3845ee8accda31c889", "patch": "@@ -1,98 +0,0 @@\n-# `boxed_closure_impls`\n-\n-The tracking issue for this feature is [#48055]\n-\n-[#48055]: https://github.com/rust-lang/rust/issues/48055\n-\n-------------------------\n-\n-This includes the following blanket impls for closure traits:\n-\n-```rust,ignore\n-impl<A, F: FnOnce<A> + ?Sized> FnOnce for Box<F> {\n-    // ...\n-}\n-impl<A, F: FnMut<A> + ?Sized> FnMut for Box<F> {\n-    // ...\n-}\n-impl<A, F: Fn<A> + ?Sized> Fn for Box<F> {\n-    // ...\n-}\n-```\n-\n-## Usage\n-\n-`Box` can be used almost transparently. You can even use `Box<dyn FnOnce>` now.\n-\n-```rust\n-#![feature(boxed_closure_impls)]\n-\n-fn main() {\n-    let resource = \"hello\".to_owned();\n-    // Create a boxed once-callable closure\n-    let f: Box<dyn FnOnce(&i32)> = Box::new(|x| {\n-        let s = resource;\n-        println!(\"{}\", x);\n-        println!(\"{}\", s);\n-    });\n-\n-    // Call it\n-    f(&42);\n-}\n-```\n-\n-## The reason for instability\n-\n-This is unstable because of the first impl.\n-\n-It would have been easy if we're allowed to tighten the bound:\n-\n-```rust,ignore\n-impl<A, F: FnMut<A> + ?Sized> FnOnce for Box<F> {\n-    // ...\n-}\n-```\n-\n-However, `Box<dyn FnOnce()>` drops out of the modified impl.\n-To rescue this, we had had a temporary solution called [`fnbox`][fnbox].\n-\n-[fnbox]: library-features/fnbox.html\n-\n-Unfortunately, due to minor coherence reasons, `fnbox` and\n-`FnOnce for Box<impl FnMut>` had not been able to coexist.\n-We had preferred `fnbox` for the time being.\n-\n-Now, as [`unsized_locals`][unsized_locals] is implemented, we can just write the\n-original impl:\n-\n-[unsized_locals]: language-features/unsized-locals.html\n-\n-```rust,ignore\n-impl<A, F: FnOnce<A> + ?Sized> FnOnce for Box<F> {\n-    type Output = <F as FnOnce<A>>::Output;\n-\n-    extern \"rust-call\" fn call_once(self, args: A) -> Self::Output {\n-        // *self is an unsized rvalue\n-        <F as FnOnce<A>>::call_once(*self, args)\n-    }\n-}\n-```\n-\n-However, since `unsized_locals` is a very young feature, we're careful about\n-this `FnOnce` impl now.\n-\n-There's another reason for instability: for compatibility with `fnbox`,\n-we currently allow specialization of the `Box<impl FnOnce>` impl:\n-\n-```rust,ignore\n-impl<A, F: FnOnce<A> + ?Sized> FnOnce for Box<F> {\n-    type Output = <F as FnOnce<A>>::Output;\n-\n-    // we have \"default\" here\n-    default extern \"rust-call\" fn call_once(self, args: A) -> Self::Output {\n-        <F as FnOnce<A>>::call_once(*self, args)\n-    }\n-}\n-```\n-\n-This isn't what we desire in the long term."}, {"sha": "f6dee7c9eefd6e0f42e7f2cfd2ba251cef394449", "filename": "src/liballoc/boxed.rs", "status": "modified", "additions": 3, "deletions": 9, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/ecc3e89dd072ed20d9aa6d53be0ab1c44d160232/src%2Fliballoc%2Fboxed.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ecc3e89dd072ed20d9aa6d53be0ab1c44d160232/src%2Fliballoc%2Fboxed.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Fboxed.rs?ref=ecc3e89dd072ed20d9aa6d53be0ab1c44d160232", "patch": "@@ -694,9 +694,7 @@ impl<I: ExactSizeIterator + ?Sized> ExactSizeIterator for Box<I> {\n #[stable(feature = \"fused\", since = \"1.26.0\")]\n impl<I: FusedIterator + ?Sized> FusedIterator for Box<I> {}\n \n-#[unstable(feature = \"boxed_closure_impls\",\n-           reason = \"Box<FnOnce> relies on unsized rvalues and needs to be tested more\",\n-           issue = \"48055\")]\n+#[stable(feature = \"boxed_closure_impls\", since = \"1.35.0\")]\n impl<A, F: FnOnce<A> + ?Sized> FnOnce<A> for Box<F> {\n     type Output = <F as FnOnce<A>>::Output;\n \n@@ -705,18 +703,14 @@ impl<A, F: FnOnce<A> + ?Sized> FnOnce<A> for Box<F> {\n     }\n }\n \n-#[unstable(feature = \"boxed_closure_impls\",\n-           reason = \"Box<FnOnce> relies on unsized rvalues and needs to be tested more\",\n-           issue = \"48055\")]\n+#[stable(feature = \"boxed_closure_impls\", since = \"1.35.0\")]\n impl<A, F: FnMut<A> + ?Sized> FnMut<A> for Box<F> {\n     extern \"rust-call\" fn call_mut(&mut self, args: A) -> Self::Output {\n         <F as FnMut<A>>::call_mut(self, args)\n     }\n }\n \n-#[unstable(feature = \"boxed_closure_impls\",\n-           reason = \"Box<FnOnce> relies on unsized rvalues and needs to be tested more\",\n-           issue = \"48055\")]\n+#[stable(feature = \"boxed_closure_impls\", since = \"1.35.0\")]\n impl<A, F: Fn<A> + ?Sized> Fn<A> for Box<F> {\n     extern \"rust-call\" fn call(&self, args: A) -> Self::Output {\n         <F as Fn<A>>::call(self, args)"}, {"sha": "16bdeae4fad41fc2708c5a468efe2ec8b141ef8f", "filename": "src/test/run-pass/unsized-locals/box-fnonce.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ecc3e89dd072ed20d9aa6d53be0ab1c44d160232/src%2Ftest%2Frun-pass%2Funsized-locals%2Fbox-fnonce.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ecc3e89dd072ed20d9aa6d53be0ab1c44d160232/src%2Ftest%2Frun-pass%2Funsized-locals%2Fbox-fnonce.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Funsized-locals%2Fbox-fnonce.rs?ref=ecc3e89dd072ed20d9aa6d53be0ab1c44d160232", "patch": "@@ -1,5 +1,3 @@\n-#![feature(boxed_closure_impls)]\n-\n fn call_it<T>(f: Box<dyn FnOnce() -> T>) -> T {\n     f()\n }"}]}