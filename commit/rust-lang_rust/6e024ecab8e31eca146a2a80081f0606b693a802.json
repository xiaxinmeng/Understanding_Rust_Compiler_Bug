{"sha": "6e024ecab8e31eca146a2a80081f0606b693a802", "node_id": "C_kwDOAAsO6NoAKDZlMDI0ZWNhYjhlMzFlY2ExNDZhMmE4MDA4MWYwNjA2YjY5M2E4MDI", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2023-06-03T18:38:11Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2023-06-03T18:38:11Z"}, "message": "Rollup merge of #111702 - cgwalters:option-map-or-else-with-result, r=Mark-Simulacrum\n\nOption::map_or_else: Show an example of integrating with Result\n\nMoving this from https://github.com/rust-lang/libs-team/issues/59 where an API addition was rejected.  But I think it's valuable to add this example to the documentation at least.", "tree": {"sha": "2c463a62a05e00c144e7985102f26acba6c1c786", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2c463a62a05e00c144e7985102f26acba6c1c786"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6e024ecab8e31eca146a2a80081f0606b693a802", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJke4iTCRBK7hj4Ov3rIwAATLoIAEHv+1R954oZ/kyM4YNmc92V\nxMzKjm4hVMQKl4uT5y1Sj/VPDJWz7sGTYUkzRNEjDGtpt01oXB6DLTyN1FjXF+dI\nGKEwHPJUKDWVXWz3YRASSowafrfNjxkTNKv91UHlcMePNCSODGNOzSZExY4saMCW\nXztuiBPi4npYwznG7esGDH+jobvqu4DQcFFJnvZiHXU7cl8maF+th5mrkoJNW3Do\n1Unz2+8pDFawCsiXa82OBdw2+OiQL5tPfFVoZ8BFdWeoJr/lXmLJugEgZR7X3G8f\nuY5nxvvuE/jVUDzK1XBXVobc5R9xA73roK2scMmWIqqB9Ty4O1lgFmfE72Qo3NA=\n=c/tg\n-----END PGP SIGNATURE-----\n", "payload": "tree 2c463a62a05e00c144e7985102f26acba6c1c786\nparent 91f222f931796225ded16ffe7d26a6c69e9f52f6\nparent 440912b74f5ac063d8993741120a519bed3882f2\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1685817491 +0200\ncommitter GitHub <noreply@github.com> 1685817491 +0200\n\nRollup merge of #111702 - cgwalters:option-map-or-else-with-result, r=Mark-Simulacrum\n\nOption::map_or_else: Show an example of integrating with Result\n\nMoving this from https://github.com/rust-lang/libs-team/issues/59 where an API addition was rejected.  But I think it's valuable to add this example to the documentation at least.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6e024ecab8e31eca146a2a80081f0606b693a802", "html_url": "https://github.com/rust-lang/rust/commit/6e024ecab8e31eca146a2a80081f0606b693a802", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6e024ecab8e31eca146a2a80081f0606b693a802/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "91f222f931796225ded16ffe7d26a6c69e9f52f6", "url": "https://api.github.com/repos/rust-lang/rust/commits/91f222f931796225ded16ffe7d26a6c69e9f52f6", "html_url": "https://github.com/rust-lang/rust/commit/91f222f931796225ded16ffe7d26a6c69e9f52f6"}, {"sha": "440912b74f5ac063d8993741120a519bed3882f2", "url": "https://api.github.com/repos/rust-lang/rust/commits/440912b74f5ac063d8993741120a519bed3882f2", "html_url": "https://github.com/rust-lang/rust/commit/440912b74f5ac063d8993741120a519bed3882f2"}], "stats": {"total": 21, "additions": 20, "deletions": 1}, "files": [{"sha": "b93b40e300361765ec6ec1f76ce19bb887c29a5f", "filename": "library/core/src/option.rs", "status": "modified", "additions": 20, "deletions": 1, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/6e024ecab8e31eca146a2a80081f0606b693a802/library%2Fcore%2Fsrc%2Foption.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6e024ecab8e31eca146a2a80081f0606b693a802/library%2Fcore%2Fsrc%2Foption.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Foption.rs?ref=6e024ecab8e31eca146a2a80081f0606b693a802", "patch": "@@ -1138,7 +1138,7 @@ impl<T> Option<T> {\n     /// Computes a default function result (if none), or\n     /// applies a different function to the contained value (if any).\n     ///\n-    /// # Examples\n+    /// # Basic examples\n     ///\n     /// ```\n     /// let k = 21;\n@@ -1149,6 +1149,25 @@ impl<T> Option<T> {\n     /// let x: Option<&str> = None;\n     /// assert_eq!(x.map_or_else(|| 2 * k, |v| v.len()), 42);\n     /// ```\n+    ///\n+    /// # Handling a Result-based fallback\n+    ///\n+    /// A somewhat common occurrence when dealing with optional values\n+    /// in combination with [`Result<T, E>`] is the case where one wants to invoke\n+    /// a fallible fallback if the option is not present.  This example\n+    /// parses a command line argument (if present), or the contents of a file to\n+    /// an integer.  However, unlike accessing the command line argument, reading\n+    /// the file is fallible, so it must be wrapped with `Ok`.\n+    ///\n+    /// ```no_run\n+    /// # fn main() -> Result<(), Box<dyn std::error::Error>> {\n+    /// let v: u64 = std::env::args()\n+    ///    .nth(1)\n+    ///    .map_or_else(|| std::fs::read_to_string(\"/etc/someconfig.conf\"), Ok)?\n+    ///    .parse()?;\n+    /// #   Ok(())\n+    /// # }\n+    /// ```\n     #[inline]\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n     pub fn map_or_else<U, D, F>(self, default: D, f: F) -> U"}]}