{"sha": "f089690a21357ca6d396bce98bf598f0954199b5", "node_id": "MDY6Q29tbWl0NzI0NzEyOmYwODk2OTBhMjEzNTdjYTZkMzk2YmNlOThiZjU5OGYwOTU0MTk5YjU=", "commit": {"author": {"name": "Paul Daniel Faria", "email": "Nashenas88@users.noreply.github.com", "date": "2020-08-07T00:55:29Z"}, "committer": {"name": "Paul Daniel Faria", "email": "Nashenas88@users.noreply.github.com", "date": "2020-08-07T00:55:29Z"}, "message": "Account for static mut in missing unsafe diagnostic", "tree": {"sha": "e88bc4e5f2ee86d4a7c03ff3d72eadd5d392309b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e88bc4e5f2ee86d4a7c03ff3d72eadd5d392309b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f089690a21357ca6d396bce98bf598f0954199b5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f089690a21357ca6d396bce98bf598f0954199b5", "html_url": "https://github.com/rust-lang/rust/commit/f089690a21357ca6d396bce98bf598f0954199b5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f089690a21357ca6d396bce98bf598f0954199b5/comments", "author": {"login": "Nashenas88", "id": 1673130, "node_id": "MDQ6VXNlcjE2NzMxMzA=", "avatar_url": "https://avatars.githubusercontent.com/u/1673130?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Nashenas88", "html_url": "https://github.com/Nashenas88", "followers_url": "https://api.github.com/users/Nashenas88/followers", "following_url": "https://api.github.com/users/Nashenas88/following{/other_user}", "gists_url": "https://api.github.com/users/Nashenas88/gists{/gist_id}", "starred_url": "https://api.github.com/users/Nashenas88/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Nashenas88/subscriptions", "organizations_url": "https://api.github.com/users/Nashenas88/orgs", "repos_url": "https://api.github.com/users/Nashenas88/repos", "events_url": "https://api.github.com/users/Nashenas88/events{/privacy}", "received_events_url": "https://api.github.com/users/Nashenas88/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Nashenas88", "id": 1673130, "node_id": "MDQ6VXNlcjE2NzMxMzA=", "avatar_url": "https://avatars.githubusercontent.com/u/1673130?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Nashenas88", "html_url": "https://github.com/Nashenas88", "followers_url": "https://api.github.com/users/Nashenas88/followers", "following_url": "https://api.github.com/users/Nashenas88/following{/other_user}", "gists_url": "https://api.github.com/users/Nashenas88/gists{/gist_id}", "starred_url": "https://api.github.com/users/Nashenas88/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Nashenas88/subscriptions", "organizations_url": "https://api.github.com/users/Nashenas88/orgs", "repos_url": "https://api.github.com/users/Nashenas88/repos", "events_url": "https://api.github.com/users/Nashenas88/events{/privacy}", "received_events_url": "https://api.github.com/users/Nashenas88/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f1d507270c7d915ef0177feca7b6745d95169ac8", "url": "https://api.github.com/repos/rust-lang/rust/commits/f1d507270c7d915ef0177feca7b6745d95169ac8", "html_url": "https://github.com/rust-lang/rust/commit/f1d507270c7d915ef0177feca7b6745d95169ac8"}], "stats": {"total": 38, "additions": 35, "deletions": 3}, "files": [{"sha": "61ffbf5d1519111c71ed52f6637252dbcc26f342", "filename": "crates/ra_hir_ty/src/diagnostics/unsafe_check.rs", "status": "modified", "additions": 35, "deletions": 3, "changes": 38, "blob_url": "https://github.com/rust-lang/rust/blob/f089690a21357ca6d396bce98bf598f0954199b5/crates%2Fra_hir_ty%2Fsrc%2Fdiagnostics%2Funsafe_check.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f089690a21357ca6d396bce98bf598f0954199b5/crates%2Fra_hir_ty%2Fsrc%2Fdiagnostics%2Funsafe_check.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_ty%2Fsrc%2Fdiagnostics%2Funsafe_check.rs?ref=f089690a21357ca6d396bce98bf598f0954199b5", "patch": "@@ -6,6 +6,7 @@ use std::sync::Arc;\n use hir_def::{\n     body::Body,\n     expr::{Expr, ExprId, UnaryOp},\n+    resolver::{resolver_for_expr, ResolveValueResult, ValueNs},\n     DefWithBodyId,\n };\n use hir_expand::diagnostics::DiagnosticSink;\n@@ -70,7 +71,7 @@ pub fn unsafe_expressions(\n ) -> Vec<UnsafeExpr> {\n     let mut unsafe_exprs = vec![];\n     let body = db.body(def);\n-    walk_unsafe(&mut unsafe_exprs, db, infer, &body, body.body_expr, false);\n+    walk_unsafe(&mut unsafe_exprs, db, infer, def, &body, body.body_expr, false);\n \n     unsafe_exprs\n }\n@@ -79,6 +80,7 @@ fn walk_unsafe(\n     unsafe_exprs: &mut Vec<UnsafeExpr>,\n     db: &dyn HirDatabase,\n     infer: &InferenceResult,\n+    def: DefWithBodyId,\n     body: &Body,\n     current: ExprId,\n     inside_unsafe_block: bool,\n@@ -97,6 +99,15 @@ fn walk_unsafe(\n                 }\n             }\n         }\n+        Expr::Path(path) => {\n+            let resolver = resolver_for_expr(db.upcast(), def, current);\n+            let value_or_partial = resolver.resolve_path_in_value_ns(db.upcast(), path.mod_path());\n+            if let Some(ResolveValueResult::ValueNs(ValueNs::StaticId(id))) = value_or_partial {\n+                if db.static_data(id).mutable {\n+                    unsafe_exprs.push(UnsafeExpr { expr: current, inside_unsafe_block });\n+                }\n+            }\n+        }\n         Expr::MethodCall { .. } => {\n             if infer\n                 .method_resolution(current)\n@@ -112,13 +123,13 @@ fn walk_unsafe(\n             }\n         }\n         Expr::Unsafe { body: child } => {\n-            return walk_unsafe(unsafe_exprs, db, infer, body, *child, true);\n+            return walk_unsafe(unsafe_exprs, db, infer, def, body, *child, true);\n         }\n         _ => {}\n     }\n \n     expr.walk_child_exprs(|child| {\n-        walk_unsafe(unsafe_exprs, db, infer, body, child, inside_unsafe_block);\n+        walk_unsafe(unsafe_exprs, db, infer, def, body, child, inside_unsafe_block);\n     });\n }\n \n@@ -167,6 +178,27 @@ fn main() {\n         HasUnsafe.unsafe_fn();\n     }\n }\n+\"#,\n+        );\n+    }\n+\n+    #[test]\n+    fn missing_unsafe_diagnostic_with_static_mut() {\n+        check_diagnostics(\n+            r#\"\n+struct Ty {\n+    a: u8,\n+}\n+\n+static mut static_mut: Ty = Ty { a: 0 };\n+\n+fn main() {\n+    let x = static_mut.a;\n+          //^^^^^^^^^^ This operation is unsafe and requires an unsafe function or block\n+    unsafe {\n+        let x = static_mut.a;\n+    }\n+}\n \"#,\n         );\n     }"}]}