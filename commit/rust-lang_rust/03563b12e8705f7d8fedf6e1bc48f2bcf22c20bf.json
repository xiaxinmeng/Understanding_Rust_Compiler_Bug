{"sha": "03563b12e8705f7d8fedf6e1bc48f2bcf22c20bf", "node_id": "MDY6Q29tbWl0NzI0NzEyOjAzNTYzYjEyZTg3MDVmN2Q4ZmVkZjZlMWJjNDhmMmJjZjIyYzIwYmY=", "commit": {"author": {"name": "Wang Xuerui", "email": "idontknw.wang@gmail.com", "date": "2016-05-21T15:08:30Z"}, "committer": {"name": "Wang Xuerui", "email": "idontknw.wang@gmail.com", "date": "2016-07-13T19:10:46Z"}, "message": "format: add tests for ergonomic format_args!\n\nformat: workaround pretty-printer to pass tests", "tree": {"sha": "efa8d6be077b0f3a5586dca196b7ff3280dd599d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/efa8d6be077b0f3a5586dca196b7ff3280dd599d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/03563b12e8705f7d8fedf6e1bc48f2bcf22c20bf", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v2\n\niQIcBAABCAAGBQJXhpI2AAoJEHg5bO9pIxDsW8kQAJPtAo4nld5glhOMaZvU2+N1\n+yDpKdrmGX+UYqFVU9+A45FvQ7R5XuBoscGVbRqRK2L/JmOarBqKEtSBcGM2Hl+E\nS3LALTLRcS9AYqRkTv17Wgqfr7V+q8NLcHwLDrZmS8n1bfCuHlJv1VgkBTmJkAV9\nUr3x7Tc7g0z83YPd3p86H/V5FiGv9Sa/m0Fwsx3ZCv+dB4c8LnxRBOHFcaOtoBhJ\nUF99fM7Eqd0uGkYlN/aPGjISI5j3v4c4a7NztoCyeeToIo+vBvR6IPs/Kq5+vRg5\ngnJMff5y9X1ZJkL4JnspC22OYUnu1PaQmORCHKDbuFYC9Ss5kmrunMDyPQopnbGj\nNtlBD75VHs/qH0TtBRpNmdp9/TAZcF6PIGkbQv+IwdQQq//dMAyMfxrCMwSXjw5n\nImjdcAKadQ7R/Ipi5Y3G7w+xelsCAFBQrWvb8Urt9zxcOIuJZYLW+Dl+xSHBPg/O\nL3SDgUmDQXCw44afOrERGTYcDKt2HBt7QlCPnoqJ9do8y6dXwCait2jVafn1SMw7\nK7ePkbsxYZV81UeI9azONsPflxajtnlZNMghqAo+TZ6/W4IPuJ3Lsi4JM9m+rh1T\n6f4Sr4GdpRTaVdTxkiMIqItk6hPgXtcs9j8hWzlYRrT6lggF7Ckgjb34vd/tpOa0\njBaiMlssdEkTFndg94IZ\n=RJXR\n-----END PGP SIGNATURE-----", "payload": "tree efa8d6be077b0f3a5586dca196b7ff3280dd599d\nparent 718099435bfc1b76650f3cbdc78d334a16d99176\nauthor Wang Xuerui <idontknw.wang@gmail.com> 1463843310 +0800\ncommitter Wang Xuerui <idontknw.wang@gmail.com> 1468437046 +0800\n\nformat: add tests for ergonomic format_args!\n\nformat: workaround pretty-printer to pass tests\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/03563b12e8705f7d8fedf6e1bc48f2bcf22c20bf", "html_url": "https://github.com/rust-lang/rust/commit/03563b12e8705f7d8fedf6e1bc48f2bcf22c20bf", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/03563b12e8705f7d8fedf6e1bc48f2bcf22c20bf/comments", "author": {"login": "xen0n", "id": 1175567, "node_id": "MDQ6VXNlcjExNzU1Njc=", "avatar_url": "https://avatars.githubusercontent.com/u/1175567?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xen0n", "html_url": "https://github.com/xen0n", "followers_url": "https://api.github.com/users/xen0n/followers", "following_url": "https://api.github.com/users/xen0n/following{/other_user}", "gists_url": "https://api.github.com/users/xen0n/gists{/gist_id}", "starred_url": "https://api.github.com/users/xen0n/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xen0n/subscriptions", "organizations_url": "https://api.github.com/users/xen0n/orgs", "repos_url": "https://api.github.com/users/xen0n/repos", "events_url": "https://api.github.com/users/xen0n/events{/privacy}", "received_events_url": "https://api.github.com/users/xen0n/received_events", "type": "User", "site_admin": false}, "committer": {"login": "xen0n", "id": 1175567, "node_id": "MDQ6VXNlcjExNzU1Njc=", "avatar_url": "https://avatars.githubusercontent.com/u/1175567?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xen0n", "html_url": "https://github.com/xen0n", "followers_url": "https://api.github.com/users/xen0n/followers", "following_url": "https://api.github.com/users/xen0n/following{/other_user}", "gists_url": "https://api.github.com/users/xen0n/gists{/gist_id}", "starred_url": "https://api.github.com/users/xen0n/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xen0n/subscriptions", "organizations_url": "https://api.github.com/users/xen0n/orgs", "repos_url": "https://api.github.com/users/xen0n/repos", "events_url": "https://api.github.com/users/xen0n/events{/privacy}", "received_events_url": "https://api.github.com/users/xen0n/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "718099435bfc1b76650f3cbdc78d334a16d99176", "url": "https://api.github.com/repos/rust-lang/rust/commits/718099435bfc1b76650f3cbdc78d334a16d99176", "html_url": "https://github.com/rust-lang/rust/commit/718099435bfc1b76650f3cbdc78d334a16d99176"}], "stats": {"total": 33, "additions": 33, "deletions": 0}, "files": [{"sha": "0a69ccf47dd9f99959e154c3b12e949670a377c4", "filename": "src/test/run-pass/ifmt.rs", "status": "modified", "additions": 33, "deletions": 0, "changes": 33, "blob_url": "https://github.com/rust-lang/rust/blob/03563b12e8705f7d8fedf6e1bc48f2bcf22c20bf/src%2Ftest%2Frun-pass%2Fifmt.rs", "raw_url": "https://github.com/rust-lang/rust/raw/03563b12e8705f7d8fedf6e1bc48f2bcf22c20bf/src%2Ftest%2Frun-pass%2Fifmt.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fifmt.rs?ref=03563b12e8705f7d8fedf6e1bc48f2bcf22c20bf", "patch": "@@ -163,6 +163,24 @@ pub fn main() {\n     t!(format!(\"{:?}\", 0.0), \"0\");\n \n \n+    // Ergonomic format_args!\n+    t!(format!(\"{0:x} {0:X}\", 15), \"f F\");\n+    t!(format!(\"{0:x} {0:X} {}\", 15), \"f F 15\");\n+    // NOTE: For now the longer test cases must not be followed immediately by\n+    // >1 empty lines, or the pretty printer will break. Since no one wants to\n+    // touch the current pretty printer (#751), we have no choice but to work\n+    // around it. Some of the following test cases are also affected.\n+    t!(format!(\"{:x}{0:X}{a:x}{:X}{1:x}{a:X}\", 13, 14, a=15), \"dDfEeF\");\n+    t!(format!(\"{a:x} {a:X}\", a=15), \"f F\");\n+\n+    // And its edge cases\n+    t!(format!(\"{a:.0$} {b:.0$} {0:.0$}\\n{a:.c$} {b:.c$} {c:.c$}\",\n+               4, a=\"abcdefg\", b=\"hijklmn\", c=3),\n+               \"abcd hijk 4\\nabc hij 3\");\n+    t!(format!(\"{a:.*} {0} {:.*}\", 4, 3, \"efgh\", a=\"abcdef\"), \"abcd 4 efg\");\n+    t!(format!(\"{:.a$} {a} {a:#x}\", \"aaaaaa\", a=2), \"aa 2 0x2\");\n+\n+\n     // Test that pointers don't get truncated.\n     {\n         let val = usize::MAX;\n@@ -177,6 +195,7 @@ pub fn main() {\n     test_write();\n     test_print();\n     test_order();\n+    test_once();\n \n     // make sure that format! doesn't move out of local variables\n     let a: Box<_> = box 3;\n@@ -260,3 +279,17 @@ fn test_order() {\n                        foo(), foo(), foo(), a=foo(), b=foo(), c=foo()),\n                \"1 2 4 5 3 6\".to_string());\n }\n+\n+fn test_once() {\n+    // Make sure each argument are evaluted only once even though it may be\n+    // formatted multiple times\n+    fn foo() -> isize {\n+        static mut FOO: isize = 0;\n+        unsafe {\n+            FOO += 1;\n+            FOO\n+        }\n+    }\n+    assert_eq!(format!(\"{0} {0} {0} {a} {a} {a}\", foo(), a=foo()),\n+               \"1 1 1 2 2 2\".to_string());\n+}"}]}