{"sha": "fa6e0b0d38d2a030b959be91232927b9c096272b", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZhNmUwYjBkMzhkMmEwMzBiOTU5YmU5MTIzMjkyN2I5YzA5NjI3MmI=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-01-08T09:23:10Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-01-08T09:23:10Z"}, "message": "itroduce trait for ast tokens", "tree": {"sha": "81b546c105388e1fc3154c90a42a8cc5fb930d0b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/81b546c105388e1fc3154c90a42a8cc5fb930d0b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fa6e0b0d38d2a030b959be91232927b9c096272b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fa6e0b0d38d2a030b959be91232927b9c096272b", "html_url": "https://github.com/rust-lang/rust/commit/fa6e0b0d38d2a030b959be91232927b9c096272b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fa6e0b0d38d2a030b959be91232927b9c096272b/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3f4be819125ce4a22edd86721fa56b5caba99c2e", "url": "https://api.github.com/repos/rust-lang/rust/commits/3f4be819125ce4a22edd86721fa56b5caba99c2e", "html_url": "https://github.com/rust-lang/rust/commit/3f4be819125ce4a22edd86721fa56b5caba99c2e"}], "stats": {"total": 93, "additions": 34, "deletions": 59}, "files": [{"sha": "98554dd4cdd73b0eccf829bf653811f8c119d790", "filename": "crates/ra_analysis/src/imp.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fa6e0b0d38d2a030b959be91232927b9c096272b/crates%2Fra_analysis%2Fsrc%2Fimp.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fa6e0b0d38d2a030b959be91232927b9c096272b/crates%2Fra_analysis%2Fsrc%2Fimp.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_analysis%2Fsrc%2Fimp.rs?ref=fa6e0b0d38d2a030b959be91232927b9c096272b", "patch": "@@ -115,7 +115,7 @@ impl db::RootDatabase {\n         let name = ast_module.name().unwrap();\n         Ok(vec![NavigationTarget {\n             file_id,\n-            name: name.text(),\n+            name: name.text().clone(),\n             range: name.syntax().range(),\n             kind: MODULE,\n             ptr: None,"}, {"sha": "8dd15b40e573b413f618dd4637e40d37160de90e", "filename": "crates/ra_analysis/src/symbol_index.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fa6e0b0d38d2a030b959be91232927b9c096272b/crates%2Fra_analysis%2Fsrc%2Fsymbol_index.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fa6e0b0d38d2a030b959be91232927b9c096272b/crates%2Fra_analysis%2Fsrc%2Fsymbol_index.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_analysis%2Fsrc%2Fsymbol_index.rs?ref=fa6e0b0d38d2a030b959be91232927b9c096272b", "patch": "@@ -205,7 +205,7 @@ pub(crate) struct FileSymbol {\n \n fn to_symbol(node: &SyntaxNode) -> Option<(SmolStr, LocalSyntaxPtr)> {\n     fn decl<N: NameOwner>(node: &N) -> Option<(SmolStr, LocalSyntaxPtr)> {\n-        let name = node.name()?.text();\n+        let name = node.name()?.text().clone();\n         let ptr = LocalSyntaxPtr::new(node.syntax());\n         Some((name, ptr))\n     }"}, {"sha": "2eda7cae2080032bb53cbf1848d50c8bd1eb8876", "filename": "crates/ra_editor/src/assists/add_impl.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fa6e0b0d38d2a030b959be91232927b9c096272b/crates%2Fra_editor%2Fsrc%2Fassists%2Fadd_impl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fa6e0b0d38d2a030b959be91232927b9c096272b/crates%2Fra_editor%2Fsrc%2Fassists%2Fadd_impl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_editor%2Fsrc%2Fassists%2Fadd_impl.rs?ref=fa6e0b0d38d2a030b959be91232927b9c096272b", "patch": "@@ -1,6 +1,6 @@\n use join_to_string::join;\n use ra_syntax::{\n-    ast::{self, AstNode, NameOwner, TypeParamsOwner},\n+    ast::{self, AstNode, AstToken, NameOwner, TypeParamsOwner},\n     TextUnit,\n };\n "}, {"sha": "3e6ce8b95572226edec4ec90632637018d67091e", "filename": "crates/ra_hir/src/name.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/fa6e0b0d38d2a030b959be91232927b9c096272b/crates%2Fra_hir%2Fsrc%2Fname.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fa6e0b0d38d2a030b959be91232927b9c096272b/crates%2Fra_hir%2Fsrc%2Fname.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fname.rs?ref=fa6e0b0d38d2a030b959be91232927b9c096272b", "patch": "@@ -76,13 +76,13 @@ pub(crate) trait AsName {\n \n impl AsName for ast::NameRef {\n     fn as_name(&self) -> Name {\n-        Name::new(self.text())\n+        Name::new(self.text().clone())\n     }\n }\n \n impl AsName for ast::Name {\n     fn as_name(&self) -> Name {\n-        Name::new(self.text())\n+        Name::new(self.text().clone())\n     }\n }\n "}, {"sha": "59a80376181ae31e5069057f796c1652bd0de946", "filename": "crates/ra_hir/src/source_binder.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fa6e0b0d38d2a030b959be91232927b9c096272b/crates%2Fra_hir%2Fsrc%2Fsource_binder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fa6e0b0d38d2a030b959be91232927b9c096272b/crates%2Fra_hir%2Fsrc%2Fsource_binder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fsource_binder.rs?ref=fa6e0b0d38d2a030b959be91232927b9c096272b", "patch": "@@ -177,7 +177,7 @@ pub fn macro_symbols(\n                 if let Some(name) = trait_def.name() {\n                     let dst_range = name.syntax().range();\n                     if let Some(src_range) = exp.map_range_back(dst_range) {\n-                        res.push((name.text(), src_range + off))\n+                        res.push((name.text().clone(), src_range + off))\n                     }\n                 }\n             }"}, {"sha": "96879ae5a386063f91fdfeecc85fe2f1a13a59f6", "filename": "crates/ra_syntax/src/ast.rs", "status": "modified", "additions": 10, "deletions": 42, "changes": 52, "blob_url": "https://github.com/rust-lang/rust/blob/fa6e0b0d38d2a030b959be91232927b9c096272b/crates%2Fra_syntax%2Fsrc%2Fast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fa6e0b0d38d2a030b959be91232927b9c096272b/crates%2Fra_syntax%2Fsrc%2Fast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Fsrc%2Fast.rs?ref=fa6e0b0d38d2a030b959be91232927b9c096272b", "patch": "@@ -23,6 +23,12 @@ pub trait AstNode: rowan::TransparentNewType<Repr = rowan::SyntaxNode<RaTypes>>\n     fn to_owned(&self) -> TreePtr<Self>;\n }\n \n+pub trait AstToken: AstNode {\n+    fn text(&self) -> &SmolStr {\n+        self.syntax().leaf_text().unwrap()\n+    }\n+}\n+\n pub trait NameOwner: AstNode {\n     fn name(&self) -> Option<&Name> {\n         child_opt(self)\n@@ -155,41 +161,7 @@ impl Attr {\n     }\n }\n \n-impl Lifetime {\n-    pub fn text(&self) -> SmolStr {\n-        self.syntax().leaf_text().unwrap().clone()\n-    }\n-}\n-\n-impl Char {\n-    pub fn text(&self) -> &SmolStr {\n-        &self.syntax().leaf_text().unwrap()\n-    }\n-}\n-\n-impl Byte {\n-    pub fn text(&self) -> &SmolStr {\n-        &self.syntax().leaf_text().unwrap()\n-    }\n-}\n-\n-impl ByteString {\n-    pub fn text(&self) -> &SmolStr {\n-        &self.syntax().leaf_text().unwrap()\n-    }\n-}\n-\n-impl String {\n-    pub fn text(&self) -> &SmolStr {\n-        &self.syntax().leaf_text().unwrap()\n-    }\n-}\n-\n impl Comment {\n-    pub fn text(&self) -> &SmolStr {\n-        self.syntax().leaf_text().unwrap()\n-    }\n-\n     pub fn flavor(&self) -> CommentFlavor {\n         let text = self.text();\n         if text.starts_with(\"///\") {\n@@ -248,10 +220,6 @@ impl CommentFlavor {\n }\n \n impl Whitespace {\n-    pub fn text(&self) -> &SmolStr {\n-        &self.syntax().leaf_text().unwrap()\n-    }\n-\n     pub fn count_newlines_lazy(&self) -> impl Iterator<Item = &()> {\n         self.text().chars().filter(|&c| c == '\\n').map(|_| &())\n     }\n@@ -262,16 +230,16 @@ impl Whitespace {\n }\n \n impl Name {\n-    pub fn text(&self) -> SmolStr {\n+    pub fn text(&self) -> &SmolStr {\n         let ident = self.syntax().first_child().unwrap();\n-        ident.leaf_text().unwrap().clone()\n+        ident.leaf_text().unwrap()\n     }\n }\n \n impl NameRef {\n-    pub fn text(&self) -> SmolStr {\n+    pub fn text(&self) -> &SmolStr {\n         let ident = self.syntax().first_child().unwrap();\n-        ident.leaf_text().unwrap().clone()\n+        ident.leaf_text().unwrap()\n     }\n }\n "}, {"sha": "547e3c0033b7143dfd7596351ea4b049fb7fbb44", "filename": "crates/ra_syntax/src/ast/generated.rs", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/fa6e0b0d38d2a030b959be91232927b9c096272b/crates%2Fra_syntax%2Fsrc%2Fast%2Fgenerated.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fa6e0b0d38d2a030b959be91232927b9c096272b/crates%2Fra_syntax%2Fsrc%2Fast%2Fgenerated.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Fsrc%2Fast%2Fgenerated.rs?ref=fa6e0b0d38d2a030b959be91232927b9c096272b", "patch": "@@ -288,6 +288,7 @@ impl AstNode for Byte {\n }\n \n \n+impl ast::AstToken for Byte {}\n impl Byte {}\n \n // ByteString\n@@ -312,6 +313,7 @@ impl AstNode for ByteString {\n }\n \n \n+impl ast::AstToken for ByteString {}\n impl ByteString {}\n \n // CallExpr\n@@ -397,6 +399,7 @@ impl AstNode for Char {\n }\n \n \n+impl ast::AstToken for Char {}\n impl Char {}\n \n // Comment\n@@ -421,6 +424,7 @@ impl AstNode for Comment {\n }\n \n \n+impl ast::AstToken for Comment {}\n impl Comment {}\n \n // Condition\n@@ -1270,6 +1274,7 @@ impl AstNode for Lifetime {\n }\n \n \n+impl ast::AstToken for Lifetime {}\n impl Lifetime {}\n \n // LifetimeParam\n@@ -2766,6 +2771,7 @@ impl AstNode for String {\n }\n \n \n+impl ast::AstToken for String {}\n impl String {}\n \n // StructDef\n@@ -3391,5 +3397,6 @@ impl AstNode for Whitespace {\n }\n \n \n+impl ast::AstToken for Whitespace {}\n impl Whitespace {}\n "}, {"sha": "bddd96a5ce5f7d440792218903bbdd07598b5d87", "filename": "crates/ra_syntax/src/grammar.ron", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/fa6e0b0d38d2a030b959be91232927b9c096272b/crates%2Fra_syntax%2Fsrc%2Fgrammar.ron", "raw_url": "https://github.com/rust-lang/rust/raw/fa6e0b0d38d2a030b959be91232927b9c096272b/crates%2Fra_syntax%2Fsrc%2Fgrammar.ron", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Fsrc%2Fgrammar.ron?ref=fa6e0b0d38d2a030b959be91232927b9c096272b", "patch": "@@ -424,10 +424,10 @@ Grammar(\n         \"PrefixExpr\": (options: [\"Expr\"]),\n         \"RangeExpr\": (),\n         \"BinExpr\": (),\n-        \"String\": (),\n-        \"Byte\": (),\n-        \"ByteString\": (),\n-        \"Char\": (),\n+        \"String\": ( traits: [\"AstToken\"] ),\n+        \"Byte\": ( traits: [\"AstToken\"] ),\n+        \"ByteString\": ( traits: [\"AstToken\"] ),\n+        \"Char\": ( traits: [\"AstToken\"] ),\n         \"Literal\": (),\n \n         \"Expr\": (\n@@ -505,7 +505,7 @@ Grammar(\n         ),\n         \"TypeParam\": ( traits: [\"NameOwner\"] ),\n         \"LifetimeParam\": ( options: [ \"Lifetime\" ] ),\n-        \"Lifetime\": (),\n+        \"Lifetime\": ( traits: [\"AstToken\"] ),\n         \"WhereClause\": (),\n         \"ExprStmt\": (\n             options: [ [\"expr\", \"Expr\"] ]\n@@ -562,7 +562,7 @@ Grammar(\n         \"PathSegment\": (\n             options: [ \"NameRef\" ]\n         ),\n-        \"Comment\": (),\n-        \"Whitespace\": (),\n+        \"Comment\": ( traits: [\"AstToken\"] ),\n+        \"Whitespace\": ( traits: [\"AstToken\"] ),\n     },\n )"}, {"sha": "9ab4b18a3d80ce252ad904c649214ffe08879db0", "filename": "crates/ra_syntax/src/validation/byte.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fa6e0b0d38d2a030b959be91232927b9c096272b/crates%2Fra_syntax%2Fsrc%2Fvalidation%2Fbyte.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fa6e0b0d38d2a030b959be91232927b9c096272b/crates%2Fra_syntax%2Fsrc%2Fvalidation%2Fbyte.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Fsrc%2Fvalidation%2Fbyte.rs?ref=fa6e0b0d38d2a030b959be91232927b9c096272b", "patch": "@@ -1,7 +1,7 @@\n //! Validation of byte literals\n \n use crate::{\n-    ast::{self, AstNode},\n+    ast::{self, AstNode, AstToken},\n     string_lexing::{self, StringComponentKind},\n     TextRange,\n     validation::char,"}, {"sha": "cd41a0a68e08608901e108cb10952c9ed3e5df09", "filename": "crates/ra_syntax/src/validation/byte_string.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fa6e0b0d38d2a030b959be91232927b9c096272b/crates%2Fra_syntax%2Fsrc%2Fvalidation%2Fbyte_string.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fa6e0b0d38d2a030b959be91232927b9c096272b/crates%2Fra_syntax%2Fsrc%2Fvalidation%2Fbyte_string.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Fsrc%2Fvalidation%2Fbyte_string.rs?ref=fa6e0b0d38d2a030b959be91232927b9c096272b", "patch": "@@ -1,5 +1,5 @@\n use crate::{\n-    ast::{self, AstNode},\n+    ast::{self, AstNode, AstToken},\n     string_lexing::{self, StringComponentKind},\n     yellow::{\n         SyntaxError,"}, {"sha": "169c88f56e344f8a07a4417f1fc15dbfe6d4b7f3", "filename": "crates/ra_syntax/src/validation/char.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fa6e0b0d38d2a030b959be91232927b9c096272b/crates%2Fra_syntax%2Fsrc%2Fvalidation%2Fchar.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fa6e0b0d38d2a030b959be91232927b9c096272b/crates%2Fra_syntax%2Fsrc%2Fvalidation%2Fchar.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Fsrc%2Fvalidation%2Fchar.rs?ref=fa6e0b0d38d2a030b959be91232927b9c096272b", "patch": "@@ -5,7 +5,7 @@ use std::u32;\n use arrayvec::ArrayString;\n \n use crate::{\n-    ast::{self, AstNode},\n+    ast::{self, AstNode, AstToken},\n     string_lexing::{self, StringComponentKind},\n     TextRange,\n     yellow::{"}, {"sha": "cb86b765f8da7601cd68b8533f20248be1d66868", "filename": "crates/ra_syntax/src/validation/string.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fa6e0b0d38d2a030b959be91232927b9c096272b/crates%2Fra_syntax%2Fsrc%2Fvalidation%2Fstring.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fa6e0b0d38d2a030b959be91232927b9c096272b/crates%2Fra_syntax%2Fsrc%2Fvalidation%2Fstring.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Fsrc%2Fvalidation%2Fstring.rs?ref=fa6e0b0d38d2a030b959be91232927b9c096272b", "patch": "@@ -1,5 +1,5 @@\n use crate::{\n-    ast::{self, AstNode},\n+    ast::{self, AstNode, AstToken},\n     string_lexing,\n     yellow::{\n         SyntaxError,"}]}