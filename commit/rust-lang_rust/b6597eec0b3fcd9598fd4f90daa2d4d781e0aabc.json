{"sha": "b6597eec0b3fcd9598fd4f90daa2d4d781e0aabc", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI2NTk3ZWVjMGIzZmNkOTU5OGZkNGY5MGRhYTJkNGQ3ODFlMGFhYmM=", "commit": {"author": {"name": "Takayuki Maeda", "email": "takoyaki0316@gmail.com", "date": "2021-03-13T16:37:33Z"}, "committer": {"name": "Takayuki Maeda", "email": "takoyaki0316@gmail.com", "date": "2021-03-17T15:51:18Z"}, "message": "remove unused arguments", "tree": {"sha": "3d9e3abe47a6fd7cd8c1a47bddeacca75c03d430", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3d9e3abe47a6fd7cd8c1a47bddeacca75c03d430"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b6597eec0b3fcd9598fd4f90daa2d4d781e0aabc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b6597eec0b3fcd9598fd4f90daa2d4d781e0aabc", "html_url": "https://github.com/rust-lang/rust/commit/b6597eec0b3fcd9598fd4f90daa2d4d781e0aabc", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b6597eec0b3fcd9598fd4f90daa2d4d781e0aabc/comments", "author": {"login": "TaKO8Ki", "id": 41065217, "node_id": "MDQ6VXNlcjQxMDY1MjE3", "avatar_url": "https://avatars.githubusercontent.com/u/41065217?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TaKO8Ki", "html_url": "https://github.com/TaKO8Ki", "followers_url": "https://api.github.com/users/TaKO8Ki/followers", "following_url": "https://api.github.com/users/TaKO8Ki/following{/other_user}", "gists_url": "https://api.github.com/users/TaKO8Ki/gists{/gist_id}", "starred_url": "https://api.github.com/users/TaKO8Ki/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TaKO8Ki/subscriptions", "organizations_url": "https://api.github.com/users/TaKO8Ki/orgs", "repos_url": "https://api.github.com/users/TaKO8Ki/repos", "events_url": "https://api.github.com/users/TaKO8Ki/events{/privacy}", "received_events_url": "https://api.github.com/users/TaKO8Ki/received_events", "type": "User", "site_admin": false}, "committer": {"login": "TaKO8Ki", "id": 41065217, "node_id": "MDQ6VXNlcjQxMDY1MjE3", "avatar_url": "https://avatars.githubusercontent.com/u/41065217?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TaKO8Ki", "html_url": "https://github.com/TaKO8Ki", "followers_url": "https://api.github.com/users/TaKO8Ki/followers", "following_url": "https://api.github.com/users/TaKO8Ki/following{/other_user}", "gists_url": "https://api.github.com/users/TaKO8Ki/gists{/gist_id}", "starred_url": "https://api.github.com/users/TaKO8Ki/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TaKO8Ki/subscriptions", "organizations_url": "https://api.github.com/users/TaKO8Ki/orgs", "repos_url": "https://api.github.com/users/TaKO8Ki/repos", "events_url": "https://api.github.com/users/TaKO8Ki/events{/privacy}", "received_events_url": "https://api.github.com/users/TaKO8Ki/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0c81311bf0093e991c0b5ca8b69096a5c5cd161c", "url": "https://api.github.com/repos/rust-lang/rust/commits/0c81311bf0093e991c0b5ca8b69096a5c5cd161c", "html_url": "https://github.com/rust-lang/rust/commit/0c81311bf0093e991c0b5ca8b69096a5c5cd161c"}], "stats": {"total": 27, "additions": 6, "deletions": 21}, "files": [{"sha": "1588eec88824bfdfc97ebee00565fe846a81f179", "filename": "clippy_lints/src/methods/filter_flat_map.rs", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/b6597eec0b3fcd9598fd4f90daa2d4d781e0aabc/clippy_lints%2Fsrc%2Fmethods%2Ffilter_flat_map.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b6597eec0b3fcd9598fd4f90daa2d4d781e0aabc/clippy_lints%2Fsrc%2Fmethods%2Ffilter_flat_map.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmethods%2Ffilter_flat_map.rs?ref=b6597eec0b3fcd9598fd4f90daa2d4d781e0aabc", "patch": "@@ -7,12 +7,7 @@ use rustc_span::sym;\n use super::FILTER_MAP;\n \n /// lint use of `filter().flat_map()` for `Iterators`\n-pub(super) fn check<'tcx>(\n-    cx: &LateContext<'tcx>,\n-    expr: &'tcx hir::Expr<'_>,\n-    _filter_args: &'tcx [hir::Expr<'_>],\n-    _map_args: &'tcx [hir::Expr<'_>],\n-) {\n+pub(super) fn check<'tcx>(cx: &LateContext<'tcx>, expr: &'tcx hir::Expr<'_>) {\n     // lint if caller of `.filter().flat_map()` is an Iterator\n     if is_trait_method(cx, expr, sym::Iterator) {\n         let msg = \"called `filter(..).flat_map(..)` on an `Iterator`\";"}, {"sha": "741b1e7e361255c09560bbdadd26ca46e32963b7", "filename": "clippy_lints/src/methods/filter_map_flat_map.rs", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/b6597eec0b3fcd9598fd4f90daa2d4d781e0aabc/clippy_lints%2Fsrc%2Fmethods%2Ffilter_map_flat_map.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b6597eec0b3fcd9598fd4f90daa2d4d781e0aabc/clippy_lints%2Fsrc%2Fmethods%2Ffilter_map_flat_map.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmethods%2Ffilter_map_flat_map.rs?ref=b6597eec0b3fcd9598fd4f90daa2d4d781e0aabc", "patch": "@@ -7,12 +7,7 @@ use rustc_span::sym;\n use super::FILTER_MAP;\n \n /// lint use of `filter_map().flat_map()` for `Iterators`\n-pub(super) fn check<'tcx>(\n-    cx: &LateContext<'tcx>,\n-    expr: &'tcx hir::Expr<'_>,\n-    _filter_args: &'tcx [hir::Expr<'_>],\n-    _map_args: &'tcx [hir::Expr<'_>],\n-) {\n+pub(super) fn check<'tcx>(cx: &LateContext<'tcx>, expr: &'tcx hir::Expr<'_>) {\n     // lint if caller of `.filter_map().flat_map()` is an Iterator\n     if is_trait_method(cx, expr, sym::Iterator) {\n         let msg = \"called `filter_map(..).flat_map(..)` on an `Iterator`\";"}, {"sha": "713bbf258370d9ac08b1cf67d288e173abe4dd14", "filename": "clippy_lints/src/methods/filter_map_map.rs", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/b6597eec0b3fcd9598fd4f90daa2d4d781e0aabc/clippy_lints%2Fsrc%2Fmethods%2Ffilter_map_map.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b6597eec0b3fcd9598fd4f90daa2d4d781e0aabc/clippy_lints%2Fsrc%2Fmethods%2Ffilter_map_map.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmethods%2Ffilter_map_map.rs?ref=b6597eec0b3fcd9598fd4f90daa2d4d781e0aabc", "patch": "@@ -7,12 +7,7 @@ use rustc_span::sym;\n use super::FILTER_MAP;\n \n /// lint use of `filter_map().map()` for `Iterators`\n-pub(super) fn check<'tcx>(\n-    cx: &LateContext<'tcx>,\n-    expr: &'tcx hir::Expr<'_>,\n-    _filter_args: &'tcx [hir::Expr<'_>],\n-    _map_args: &'tcx [hir::Expr<'_>],\n-) {\n+pub(super) fn check<'tcx>(cx: &LateContext<'tcx>, expr: &'tcx hir::Expr<'_>) {\n     // lint if caller of `.filter_map().map()` is an Iterator\n     if is_trait_method(cx, expr, sym::Iterator) {\n         let msg = \"called `filter_map(..).map(..)` on an `Iterator`\";"}, {"sha": "044348a2c3455c852d25db10a503d242174671e1", "filename": "clippy_lints/src/methods/mod.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/b6597eec0b3fcd9598fd4f90daa2d4d781e0aabc/clippy_lints%2Fsrc%2Fmethods%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b6597eec0b3fcd9598fd4f90daa2d4d781e0aabc/clippy_lints%2Fsrc%2Fmethods%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmethods%2Fmod.rs?ref=b6597eec0b3fcd9598fd4f90daa2d4d781e0aabc", "patch": "@@ -1715,11 +1715,11 @@ impl<'tcx> LateLintPass<'tcx> for Methods {\n             [\"next\", \"skip_while\"] => skip_while_next::check(cx, expr, arg_lists[1]),\n             [\"next\", \"iter\"] => iter_next_slice::check(cx, expr, arg_lists[1]),\n             [\"map\", \"filter\"] => filter_map::check(cx, expr, false),\n-            [\"map\", \"filter_map\"] => filter_map_map::check(cx, expr, arg_lists[1], arg_lists[0]),\n+            [\"map\", \"filter_map\"] => filter_map_map::check(cx, expr),\n             [\"next\", \"filter_map\"] => filter_map_next::check(cx, expr, arg_lists[1], self.msrv.as_ref()),\n             [\"map\", \"find\"] => filter_map::check(cx, expr, true),\n-            [\"flat_map\", \"filter\"] => filter_flat_map::check(cx, expr, arg_lists[1], arg_lists[0]),\n-            [\"flat_map\", \"filter_map\"] => filter_map_flat_map::check(cx, expr, arg_lists[1], arg_lists[0]),\n+            [\"flat_map\", \"filter\"] => filter_flat_map::check(cx, expr),\n+            [\"flat_map\", \"filter_map\"] => filter_map_flat_map::check(cx, expr),\n             [\"flat_map\", ..] => flat_map_identity::check(cx, expr, arg_lists[0], method_spans[0]),\n             [\"flatten\", \"map\"] => map_flatten::check(cx, expr, arg_lists[1]),\n             [\"is_some\", \"find\"] => search_is_some::check(cx, expr, \"find\", arg_lists[1], arg_lists[0], method_spans[1]),"}]}