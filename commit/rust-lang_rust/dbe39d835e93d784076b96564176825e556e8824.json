{"sha": "dbe39d835e93d784076b96564176825e556e8824", "node_id": "C_kwDOAAsO6NoAKGRiZTM5ZDgzNWU5M2Q3ODQwNzZiOTY1NjQxNzY4MjVlNTU2ZTg4MjQ", "commit": {"author": {"name": "Adrian Tombu", "email": "adrian@otso.fr", "date": "2022-08-22T21:43:09Z"}, "committer": {"name": "Adrian Tombu", "email": "adrian@otso.fr", "date": "2022-08-25T16:06:11Z"}, "message": "Start moving rustc_driver to SessionDiagnostic", "tree": {"sha": "bde0a725f8f1a4938649411ff48620676edc18ab", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bde0a725f8f1a4938649411ff48620676edc18ab"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/dbe39d835e93d784076b96564176825e556e8824", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQFDBAABCAAtFiEEPq029qEtTUDaayZUnNjpedOpQ/4FAmMHnfMPHGFkcmlhbkBv\ndHNvLmZyAAoJEJzY6XnTqUP+uQAIAKUR3C0jR0GCPnspVfdbjz5gtq8kqYI+dN/I\ncfiPetkbdQ2dNzQEGNZgpSLZYeLUweuESjblJNDTd7HsVS+egrbU+zNW1SU2EWrt\nUVlrZaqAM26KDQsMt7aT9IFf7MOywHdZcjq8yXuTAp8J5MGfPP/5l8MJMDC73S7k\nRmLZVAb+F6O7TkvoFaGJgVLUxbti2IDepCphDPF/5a+VLuM4gHWcTLOav/m8lP2u\nXze+6Pnw57IDca8Ye8998bzAl2sE+gqCxxXki2lIbpl2o4cPajnxfFW9nWf7OMIY\nuT2jT6LqAUTCX0WB8/sZnrPYyzNuU0MrRzGfbZ8V17khsIEQzOY=\n=AfdK\n-----END PGP SIGNATURE-----", "payload": "tree bde0a725f8f1a4938649411ff48620676edc18ab\nparent 4d45b0745ab227feb9000bc15713ade4b99241ea\nauthor Adrian Tombu <adrian@otso.fr> 1661204589 +0200\ncommitter Adrian Tombu <adrian@otso.fr> 1661443571 +0200\n\nStart moving rustc_driver to SessionDiagnostic\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/dbe39d835e93d784076b96564176825e556e8824", "html_url": "https://github.com/rust-lang/rust/commit/dbe39d835e93d784076b96564176825e556e8824", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/dbe39d835e93d784076b96564176825e556e8824/comments", "author": {"login": "adriantombu", "id": 383297, "node_id": "MDQ6VXNlcjM4MzI5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/383297?v=4", "gravatar_id": "", "url": "https://api.github.com/users/adriantombu", "html_url": "https://github.com/adriantombu", "followers_url": "https://api.github.com/users/adriantombu/followers", "following_url": "https://api.github.com/users/adriantombu/following{/other_user}", "gists_url": "https://api.github.com/users/adriantombu/gists{/gist_id}", "starred_url": "https://api.github.com/users/adriantombu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/adriantombu/subscriptions", "organizations_url": "https://api.github.com/users/adriantombu/orgs", "repos_url": "https://api.github.com/users/adriantombu/repos", "events_url": "https://api.github.com/users/adriantombu/events{/privacy}", "received_events_url": "https://api.github.com/users/adriantombu/received_events", "type": "User", "site_admin": false}, "committer": {"login": "adriantombu", "id": 383297, "node_id": "MDQ6VXNlcjM4MzI5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/383297?v=4", "gravatar_id": "", "url": "https://api.github.com/users/adriantombu", "html_url": "https://github.com/adriantombu", "followers_url": "https://api.github.com/users/adriantombu/followers", "following_url": "https://api.github.com/users/adriantombu/following{/other_user}", "gists_url": "https://api.github.com/users/adriantombu/gists{/gist_id}", "starred_url": "https://api.github.com/users/adriantombu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/adriantombu/subscriptions", "organizations_url": "https://api.github.com/users/adriantombu/orgs", "repos_url": "https://api.github.com/users/adriantombu/repos", "events_url": "https://api.github.com/users/adriantombu/events{/privacy}", "received_events_url": "https://api.github.com/users/adriantombu/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4d45b0745ab227feb9000bc15713ade4b99241ea", "url": "https://api.github.com/repos/rust-lang/rust/commits/4d45b0745ab227feb9000bc15713ade4b99241ea", "html_url": "https://github.com/rust-lang/rust/commit/4d45b0745ab227feb9000bc15713ade4b99241ea"}], "stats": {"total": 62, "additions": 57, "deletions": 5}, "files": [{"sha": "3776d562ff8cb38f2726f2c0b40d9cfd6c80005e", "filename": "Cargo.lock", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/dbe39d835e93d784076b96564176825e556e8824/Cargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/dbe39d835e93d784076b96564176825e556e8824/Cargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.lock?ref=dbe39d835e93d784076b96564176825e556e8824", "patch": "@@ -3820,6 +3820,7 @@ dependencies = [\n  \"rustc_interface\",\n  \"rustc_lint\",\n  \"rustc_log\",\n+ \"rustc_macros\",\n  \"rustc_metadata\",\n  \"rustc_middle\",\n  \"rustc_parse\","}, {"sha": "4570c1448337eec7b661868deb0d81d64f219916", "filename": "compiler/rustc_driver/Cargo.toml", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/dbe39d835e93d784076b96564176825e556e8824/compiler%2Frustc_driver%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/dbe39d835e93d784076b96564176825e556e8824/compiler%2Frustc_driver%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_driver%2FCargo.toml?ref=dbe39d835e93d784076b96564176825e556e8824", "patch": "@@ -19,6 +19,7 @@ rustc_errors = { path = \"../rustc_errors\" }\n rustc_feature = { path = \"../rustc_feature\" }\n rustc_hir = { path = \"../rustc_hir\" }\n rustc_hir_pretty = { path = \"../rustc_hir_pretty\" }\n+rustc_macros = { path = \"../rustc_macros\" }\n rustc_metadata = { path = \"../rustc_metadata\" }\n rustc_parse = { path = \"../rustc_parse\" }\n rustc_plugin_impl = { path = \"../rustc_plugin_impl\" }"}, {"sha": "a34face14a99329ca9de14901f67a1922c61afe0", "filename": "compiler/rustc_driver/src/lib.rs", "status": "modified", "additions": 24, "deletions": 5, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/dbe39d835e93d784076b96564176825e556e8824/compiler%2Frustc_driver%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dbe39d835e93d784076b96564176825e556e8824/compiler%2Frustc_driver%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_driver%2Fsrc%2Flib.rs?ref=dbe39d835e93d784076b96564176825e556e8824", "patch": "@@ -9,6 +9,8 @@\n #![feature(once_cell)]\n #![recursion_limit = \"256\"]\n #![allow(rustc::potential_query_instability)]\n+#![deny(rustc::untranslatable_diagnostic)]\n+#![deny(rustc::diagnostic_outside_of_impl)]\n \n #[macro_use]\n extern crate tracing;\n@@ -56,6 +58,9 @@ use std::time::Instant;\n \n pub mod args;\n pub mod pretty;\n+mod session_diagnostics;\n+\n+use crate::session_diagnostics::{RlinkNotAFile, RlinkUnableToDeserialize, RlinkUnableToRead};\n \n /// Exit status code used for successful compilation and help output.\n pub const EXIT_SUCCESS: i32 = 0;\n@@ -545,7 +550,11 @@ fn handle_explain(registry: Registry, code: &str, output: ErrorOutputType) {\n \n fn show_content_with_pager(content: &str) {\n     let pager_name = env::var_os(\"PAGER\").unwrap_or_else(|| {\n-        if cfg!(windows) { OsString::from(\"more.com\") } else { OsString::from(\"less\") }\n+        if cfg!(windows) {\n+            OsString::from(\"more.com\")\n+        } else {\n+            OsString::from(\"less\")\n+        }\n     });\n \n     let mut fallback_to_println = false;\n@@ -581,18 +590,24 @@ pub fn try_process_rlink(sess: &Session, compiler: &interface::Compiler) -> Comp\n             sess.init_crate_types(collect_crate_types(sess, &[]));\n             let outputs = compiler.build_output_filenames(sess, &[]);\n             let rlink_data = fs::read(file).unwrap_or_else(|err| {\n-                sess.fatal(&format!(\"failed to read rlink file: {}\", err));\n+                sess.fatal(RlinkUnableToRead {\n+                    span: Default::default(),\n+                    error_message: err.to_string(),\n+                });\n             });\n             let codegen_results = match CodegenResults::deserialize_rlink(rlink_data) {\n                 Ok(codegen) => codegen,\n                 Err(error) => {\n-                    sess.fatal(&format!(\"Could not deserialize .rlink file: {error}\"));\n+                    sess.fatal(RlinkUnableToDeserialize {\n+                        span: Default::default(),\n+                        error_message: error.to_string(),\n+                    });\n                 }\n             };\n             let result = compiler.codegen_backend().link(sess, codegen_results, &outputs);\n             abort_on_err(result, sess);\n         } else {\n-            sess.fatal(\"rlink must be a file\")\n+            sess.fatal(RlinkNotAFile { span: Default::default() })\n         }\n         Compilation::Stop\n     } else {\n@@ -1116,7 +1131,11 @@ fn extra_compiler_flags() -> Option<(Vec<String>, bool)> {\n         }\n     }\n \n-    if !result.is_empty() { Some((result, excluded_cargo_defaults)) } else { None }\n+    if !result.is_empty() {\n+        Some((result, excluded_cargo_defaults))\n+    } else {\n+        None\n+    }\n }\n \n /// Runs a closure and catches unwinds triggered by fatal errors."}, {"sha": "19468cb678d295e41cfd02785cbc2fda74f828c4", "filename": "compiler/rustc_driver/src/session_diagnostics.rs", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/dbe39d835e93d784076b96564176825e556e8824/compiler%2Frustc_driver%2Fsrc%2Fsession_diagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dbe39d835e93d784076b96564176825e556e8824/compiler%2Frustc_driver%2Fsrc%2Fsession_diagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_driver%2Fsrc%2Fsession_diagnostics.rs?ref=dbe39d835e93d784076b96564176825e556e8824", "patch": "@@ -0,0 +1,25 @@\n+use rustc_macros::SessionDiagnostic;\n+use rustc_span::Span;\n+\n+#[derive(SessionDiagnostic)]\n+#[error(driver::rlink_unable_to_read)]\n+pub(crate) struct RlinkUnableToRead {\n+    #[primary_span]\n+    pub span: Span,\n+    pub error_message: String,\n+}\n+\n+#[derive(SessionDiagnostic)]\n+#[error(driver::rlink_unable_to_deserialize)]\n+pub(crate) struct RlinkUnableToDeserialize {\n+    #[primary_span]\n+    pub span: Span,\n+    pub error_message: String,\n+}\n+\n+#[derive(SessionDiagnostic)]\n+#[error(driver::rlink_no_a_file)]\n+pub(crate) struct RlinkNotAFile {\n+    #[primary_span]\n+    pub span: Span,\n+}"}, {"sha": "57104612cc8e4703d467910223b228bd6cf1c1f8", "filename": "compiler/rustc_error_messages/locales/en-US/driver.ftl", "status": "added", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/dbe39d835e93d784076b96564176825e556e8824/compiler%2Frustc_error_messages%2Flocales%2Fen-US%2Fdriver.ftl", "raw_url": "https://github.com/rust-lang/rust/raw/dbe39d835e93d784076b96564176825e556e8824/compiler%2Frustc_error_messages%2Flocales%2Fen-US%2Fdriver.ftl", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_error_messages%2Flocales%2Fen-US%2Fdriver.ftl?ref=dbe39d835e93d784076b96564176825e556e8824", "patch": "@@ -0,0 +1,5 @@\n+driver_rlink_unable_to_read = failed to read rlink file: `{$error_message}`\n+\n+driver_rlink_unable_to_deserialize = could not deserialize .rlink file: `{$error_message}`\n+\n+driver_rlink_no_a_file = rlink must be a file"}, {"sha": "2ea07ca1a487af5d622f395f4bde92e84429c709", "filename": "compiler/rustc_error_messages/src/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/dbe39d835e93d784076b96564176825e556e8824/compiler%2Frustc_error_messages%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dbe39d835e93d784076b96564176825e556e8824/compiler%2Frustc_error_messages%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_error_messages%2Fsrc%2Flib.rs?ref=dbe39d835e93d784076b96564176825e556e8824", "patch": "@@ -36,6 +36,7 @@ fluent_messages! {\n     borrowck => \"../locales/en-US/borrowck.ftl\",\n     builtin_macros => \"../locales/en-US/builtin_macros.ftl\",\n     const_eval => \"../locales/en-US/const_eval.ftl\",\n+    driver => \"../locales/en-US/driver.ftl\",\n     expand => \"../locales/en-US/expand.ftl\",\n     interface => \"../locales/en-US/interface.ftl\",\n     lint => \"../locales/en-US/lint.ftl\","}]}