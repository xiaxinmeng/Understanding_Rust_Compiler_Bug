{"sha": "87040140de546376a4f97216cfad704fb59ea0fb", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg3MDQwMTQwZGU1NDYzNzZhNGY5NzIxNmNmYWQ3MDRmYjU5ZWEwZmI=", "commit": {"author": {"name": "Nikita Popov", "email": "nikita.ppv@gmail.com", "date": "2019-07-07T18:19:19Z"}, "committer": {"name": "Nikita Popov", "email": "nikita.ppv@gmail.com", "date": "2019-07-15T07:45:14Z"}, "message": "Update transparent aggregate codegen test for byval changes", "tree": {"sha": "5c9253599d6a60cbefa83ee0a3ddd79db2da575b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5c9253599d6a60cbefa83ee0a3ddd79db2da575b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/87040140de546376a4f97216cfad704fb59ea0fb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/87040140de546376a4f97216cfad704fb59ea0fb", "html_url": "https://github.com/rust-lang/rust/commit/87040140de546376a4f97216cfad704fb59ea0fb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/87040140de546376a4f97216cfad704fb59ea0fb/comments", "author": {"login": "nikic", "id": 216080, "node_id": "MDQ6VXNlcjIxNjA4MA==", "avatar_url": "https://avatars.githubusercontent.com/u/216080?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikic", "html_url": "https://github.com/nikic", "followers_url": "https://api.github.com/users/nikic/followers", "following_url": "https://api.github.com/users/nikic/following{/other_user}", "gists_url": "https://api.github.com/users/nikic/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikic/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikic/subscriptions", "organizations_url": "https://api.github.com/users/nikic/orgs", "repos_url": "https://api.github.com/users/nikic/repos", "events_url": "https://api.github.com/users/nikic/events{/privacy}", "received_events_url": "https://api.github.com/users/nikic/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikic", "id": 216080, "node_id": "MDQ6VXNlcjIxNjA4MA==", "avatar_url": "https://avatars.githubusercontent.com/u/216080?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikic", "html_url": "https://github.com/nikic", "followers_url": "https://api.github.com/users/nikic/followers", "following_url": "https://api.github.com/users/nikic/following{/other_user}", "gists_url": "https://api.github.com/users/nikic/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikic/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikic/subscriptions", "organizations_url": "https://api.github.com/users/nikic/orgs", "repos_url": "https://api.github.com/users/nikic/repos", "events_url": "https://api.github.com/users/nikic/events{/privacy}", "received_events_url": "https://api.github.com/users/nikic/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d6c818e8d7fa00e0f1ce45822b0c9add61343b70", "url": "https://api.github.com/repos/rust-lang/rust/commits/d6c818e8d7fa00e0f1ce45822b0c9add61343b70", "html_url": "https://github.com/rust-lang/rust/commit/d6c818e8d7fa00e0f1ce45822b0c9add61343b70"}], "stats": {"total": 18, "additions": 10, "deletions": 8}, "files": [{"sha": "1c8959619d3b2331f183b865c948202a3847152f", "filename": "src/test/codegen/repr-transparent-aggregates-1.rs", "status": "modified", "additions": 10, "deletions": 8, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/87040140de546376a4f97216cfad704fb59ea0fb/src%2Ftest%2Fcodegen%2Frepr-transparent-aggregates-1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/87040140de546376a4f97216cfad704fb59ea0fb/src%2Ftest%2Fcodegen%2Frepr-transparent-aggregates-1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcodegen%2Frepr-transparent-aggregates-1.rs?ref=87040140de546376a4f97216cfad704fb59ea0fb", "patch": "@@ -1,11 +1,13 @@\n // compile-flags: -C no-prepopulate-passes\n // ignore-tidy-linelength\n \n+// min-system-llvm-version: 9.0\n // ignore-arm\n // ignore-mips\n // ignore-mips64\n // ignore-powerpc\n // ignore-powerpc64\n+// ignore-windows\n // See repr-transparent.rs\n \n #![feature(transparent_enums, transparent_unions)]\n@@ -30,19 +32,19 @@ pub enum TeBigS {\n     Variant(BigS),\n }\n \n-// CHECK: define void @test_BigS(%BigS* [[BIGS_RET_ATTRS:.*]], %BigS* [[BIGS_ARG_ATTRS:.*]])\n+// CHECK: define void @test_BigS(%BigS* [[BIGS_RET_ATTRS:.*]], %BigS* [[BIGS_ARG_ATTRS1:.*]] byval(%BigS) [[BIGS_ARG_ATTRS2:.*]])\n #[no_mangle]\n pub extern fn test_BigS(_: BigS) -> BigS { loop {} }\n \n-// CHECK: define void @test_TsBigS(%TsBigS* [[BIGS_RET_ATTRS]], %TsBigS* [[BIGS_ARG_ATTRS]])\n+// CHECK: define void @test_TsBigS(%TsBigS* [[BIGS_RET_ATTRS]], %TsBigS* [[BIGS_ARG_ATTRS1]] byval(%TsBigS) [[BIGS_ARG_ATTRS2:.*]])\n #[no_mangle]\n pub extern fn test_TsBigS(_: TsBigS) -> TsBigS { loop {} }\n \n-// CHECK: define void @test_TuBigS(%TuBigS* [[BIGS_RET_ATTRS]], %TuBigS* [[BIGS_ARG_ATTRS]])\n+// CHECK: define void @test_TuBigS(%TuBigS* [[BIGS_RET_ATTRS]], %TuBigS* [[BIGS_ARG_ATTRS1]] byval(%TuBigS) [[BIGS_ARG_ATTRS2:.*]])\n #[no_mangle]\n pub extern fn test_TuBigS(_: TuBigS) -> TuBigS { loop {} }\n \n-// CHECK: define void @test_TeBigS(%\"TeBigS::Variant\"* [[BIGS_RET_ATTRS]], %\"TeBigS::Variant\"* [[BIGS_ARG_ATTRS]])\n+// CHECK: define void @test_TeBigS(%\"TeBigS::Variant\"* [[BIGS_RET_ATTRS]], %\"TeBigS::Variant\"* [[BIGS_ARG_ATTRS1]] byval(%\"TeBigS::Variant\") [[BIGS_ARG_ATTRS2]])\n #[no_mangle]\n pub extern fn test_TeBigS(_: TeBigS) -> TeBigS { loop {} }\n \n@@ -66,18 +68,18 @@ pub enum TeBigU {\n     Variant(BigU),\n }\n \n-// CHECK: define void @test_BigU(%BigU* [[BIGU_RET_ATTRS:.*]], %BigU* [[BIGU_ARG_ATTRS:.*]])\n+// CHECK: define void @test_BigU(%BigU* [[BIGU_RET_ATTRS:.*]], %BigU* [[BIGU_ARG_ATTRS1:.*]] byval(%BigU) [[BIGU_ARG_ATTRS2:.*]])\n #[no_mangle]\n pub extern fn test_BigU(_: BigU) -> BigU { loop {} }\n \n-// CHECK: define void @test_TsBigU(%TsBigU* [[BIGU_RET_ATTRS:.*]], %TsBigU* [[BIGU_ARG_ATTRS]])\n+// CHECK: define void @test_TsBigU(%TsBigU* [[BIGU_RET_ATTRS:.*]], %TsBigU* [[BIGU_ARG_ATTRS1]] byval(%TsBigU) [[BIGU_ARG_ATTRS2]])\n #[no_mangle]\n pub extern fn test_TsBigU(_: TsBigU) -> TsBigU { loop {} }\n \n-// CHECK: define void @test_TuBigU(%TuBigU* [[BIGU_RET_ATTRS]], %TuBigU* [[BIGU_ARG_ATTRS]])\n+// CHECK: define void @test_TuBigU(%TuBigU* [[BIGU_RET_ATTRS]], %TuBigU* [[BIGU_ARG_ATTRS1]] byval(%TuBigU) [[BIGU_ARG_ATTRS2]])\n #[no_mangle]\n pub extern fn test_TuBigU(_: TuBigU) -> TuBigU { loop {} }\n \n-// CHECK: define void @test_TeBigU(%\"TeBigU::Variant\"* [[BIGU_RET_ATTRS]], %\"TeBigU::Variant\"* [[BIGU_ARG_ATTRS]])\n+// CHECK: define void @test_TeBigU(%\"TeBigU::Variant\"* [[BIGU_RET_ATTRS]], %\"TeBigU::Variant\"* [[BIGU_ARG_ATTRS1]] byval(%\"TeBigU::Variant\") [[BIGU_ARG_ATTRS2]])\n #[no_mangle]\n pub extern fn test_TeBigU(_: TeBigU) -> TeBigU { loop {} }"}]}