{"sha": "2c71adaaa21e5d9e4fe80625e41982ac83303df8", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJjNzFhZGFhYTIxZTVkOWU0ZmU4MDYyNWU0MTk4MmFjODMzMDNkZjg=", "commit": {"author": {"name": "John K\u00e5re Alsaker", "email": "john.kare.alsaker@gmail.com", "date": "2015-01-15T08:22:27Z"}, "committer": {"name": "John K\u00e5re Alsaker", "email": "john.kare.alsaker@gmail.com", "date": "2015-01-15T08:22:27Z"}, "message": "Disable -C lto optimizations on opt_level=0\n\nFixes #21184", "tree": {"sha": "7051d0a6ee657c60f29c5fe57acf6ced1555d1ef", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7051d0a6ee657c60f29c5fe57acf6ced1555d1ef"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2c71adaaa21e5d9e4fe80625e41982ac83303df8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2c71adaaa21e5d9e4fe80625e41982ac83303df8", "html_url": "https://github.com/rust-lang/rust/commit/2c71adaaa21e5d9e4fe80625e41982ac83303df8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2c71adaaa21e5d9e4fe80625e41982ac83303df8/comments", "author": {"login": "Zoxc", "id": 25784, "node_id": "MDQ6VXNlcjI1Nzg0", "avatar_url": "https://avatars.githubusercontent.com/u/25784?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Zoxc", "html_url": "https://github.com/Zoxc", "followers_url": "https://api.github.com/users/Zoxc/followers", "following_url": "https://api.github.com/users/Zoxc/following{/other_user}", "gists_url": "https://api.github.com/users/Zoxc/gists{/gist_id}", "starred_url": "https://api.github.com/users/Zoxc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Zoxc/subscriptions", "organizations_url": "https://api.github.com/users/Zoxc/orgs", "repos_url": "https://api.github.com/users/Zoxc/repos", "events_url": "https://api.github.com/users/Zoxc/events{/privacy}", "received_events_url": "https://api.github.com/users/Zoxc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Zoxc", "id": 25784, "node_id": "MDQ6VXNlcjI1Nzg0", "avatar_url": "https://avatars.githubusercontent.com/u/25784?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Zoxc", "html_url": "https://github.com/Zoxc", "followers_url": "https://api.github.com/users/Zoxc/followers", "following_url": "https://api.github.com/users/Zoxc/following{/other_user}", "gists_url": "https://api.github.com/users/Zoxc/gists{/gist_id}", "starred_url": "https://api.github.com/users/Zoxc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Zoxc/subscriptions", "organizations_url": "https://api.github.com/users/Zoxc/orgs", "repos_url": "https://api.github.com/users/Zoxc/repos", "events_url": "https://api.github.com/users/Zoxc/events{/privacy}", "received_events_url": "https://api.github.com/users/Zoxc/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0c96037ec1676b420002a06ea337865f95abbf2c", "url": "https://api.github.com/repos/rust-lang/rust/commits/0c96037ec1676b420002a06ea337865f95abbf2c", "html_url": "https://github.com/rust-lang/rust/commit/0c96037ec1676b420002a06ea337865f95abbf2c"}], "stats": {"total": 3, "additions": 3, "deletions": 0}, "files": [{"sha": "c0b1492a7845099c2d22a2a13f5738c269b11d2c", "filename": "src/librustc_trans/back/lto.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/2c71adaaa21e5d9e4fe80625e41982ac83303df8/src%2Flibrustc_trans%2Fback%2Flto.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2c71adaaa21e5d9e4fe80625e41982ac83303df8/src%2Flibrustc_trans%2Fback%2Flto.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Fback%2Flto.rs?ref=2c71adaaa21e5d9e4fe80625e41982ac83303df8", "patch": "@@ -167,7 +167,10 @@ pub fn run(sess: &session::Session, llmod: ModuleRef,\n         llvm::LLVMRustAddAnalysisPasses(tm, pm, llmod);\n         llvm::LLVMRustAddPass(pm, \"verify\\0\".as_ptr() as *const _);\n \n+        let opt = sess.opts.cg.opt_level.unwrap_or(0) as libc::c_uint;\n+\n         let builder = llvm::LLVMPassManagerBuilderCreate();\n+        llvm::LLVMPassManagerBuilderSetOptLevel(builder, opt);\n         llvm::LLVMPassManagerBuilderPopulateLTOPassManager(builder, pm,\n             /* Internalize = */ False,\n             /* RunInliner = */ True);"}]}