{"sha": "252eb78dc3852707969b27b8a30f8844289aa985", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI1MmViNzhkYzM4NTI3MDc5NjliMjdiOGEzMGY4ODQ0Mjg5YWE5ODU=", "commit": {"author": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2021-04-10T14:56:32Z"}, "committer": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2021-04-10T14:56:32Z"}, "message": "Implement more precise binary op return type prediction", "tree": {"sha": "5bb3f755bd5d154233758a63122817381e3b66d1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5bb3f755bd5d154233758a63122817381e3b66d1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/252eb78dc3852707969b27b8a30f8844289aa985", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/252eb78dc3852707969b27b8a30f8844289aa985", "html_url": "https://github.com/rust-lang/rust/commit/252eb78dc3852707969b27b8a30f8844289aa985", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/252eb78dc3852707969b27b8a30f8844289aa985/comments", "author": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e357b6bb36828ecf3404fcc382da09216eef0997", "url": "https://api.github.com/repos/rust-lang/rust/commits/e357b6bb36828ecf3404fcc382da09216eef0997", "html_url": "https://github.com/rust-lang/rust/commit/e357b6bb36828ecf3404fcc382da09216eef0997"}], "stats": {"total": 68, "additions": 51, "deletions": 17}, "files": [{"sha": "0222de2bc21012aef9290bfde6cf5e2af7ae7df7", "filename": "crates/hir_ty/src/op.rs", "status": "modified", "additions": 46, "deletions": 12, "changes": 58, "blob_url": "https://github.com/rust-lang/rust/blob/252eb78dc3852707969b27b8a30f8844289aa985/crates%2Fhir_ty%2Fsrc%2Fop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/252eb78dc3852707969b27b8a30f8844289aa985/crates%2Fhir_ty%2Fsrc%2Fop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_ty%2Fsrc%2Fop.rs?ref=252eb78dc3852707969b27b8a30f8844289aa985", "patch": "@@ -9,21 +9,55 @@ pub(super) fn binary_op_return_ty(op: BinaryOp, lhs_ty: Ty, rhs_ty: Ty) -> Ty {\n         BinaryOp::LogicOp(_) | BinaryOp::CmpOp(_) => TyKind::Scalar(Scalar::Bool).intern(&Interner),\n         BinaryOp::Assignment { .. } => TyBuilder::unit(),\n         BinaryOp::ArithOp(ArithOp::Shl) | BinaryOp::ArithOp(ArithOp::Shr) => {\n-            match lhs_ty.kind(&Interner) {\n+            // all integer combinations are valid here\n+            if matches!(\n+                lhs_ty.kind(&Interner),\n                 TyKind::Scalar(Scalar::Int(_))\n-                | TyKind::Scalar(Scalar::Uint(_))\n-                | TyKind::Scalar(Scalar::Float(_)) => lhs_ty,\n-                TyKind::InferenceVar(_, TyVariableKind::Integer)\n-                | TyKind::InferenceVar(_, TyVariableKind::Float) => lhs_ty,\n-                _ => TyKind::Error.intern(&Interner),\n+                    | TyKind::Scalar(Scalar::Uint(_))\n+                    | TyKind::InferenceVar(_, TyVariableKind::Integer)\n+            ) && matches!(\n+                rhs_ty.kind(&Interner),\n+                TyKind::Scalar(Scalar::Int(_))\n+                    | TyKind::Scalar(Scalar::Uint(_))\n+                    | TyKind::InferenceVar(_, TyVariableKind::Integer)\n+            ) {\n+                lhs_ty\n+            } else {\n+                TyKind::Error.intern(&Interner)\n             }\n         }\n-        BinaryOp::ArithOp(_) => match rhs_ty.kind(&Interner) {\n-            TyKind::Scalar(Scalar::Int(_))\n-            | TyKind::Scalar(Scalar::Uint(_))\n-            | TyKind::Scalar(Scalar::Float(_)) => rhs_ty,\n-            TyKind::InferenceVar(_, TyVariableKind::Integer)\n-            | TyKind::InferenceVar(_, TyVariableKind::Float) => rhs_ty,\n+        BinaryOp::ArithOp(_) => match (lhs_ty.kind(&Interner), rhs_ty.kind(&Interner)) {\n+            // (int, int) | (uint, uint) | (float, float)\n+            (TyKind::Scalar(Scalar::Int(_)), TyKind::Scalar(Scalar::Int(_)))\n+            | (TyKind::Scalar(Scalar::Uint(_)), TyKind::Scalar(Scalar::Uint(_)))\n+            | (TyKind::Scalar(Scalar::Float(_)), TyKind::Scalar(Scalar::Float(_))) => rhs_ty,\n+            // ({int}, int) | ({int}, uint)\n+            (TyKind::InferenceVar(_, TyVariableKind::Integer), TyKind::Scalar(Scalar::Int(_)))\n+            | (TyKind::InferenceVar(_, TyVariableKind::Integer), TyKind::Scalar(Scalar::Uint(_))) => {\n+                rhs_ty\n+            }\n+            // (int, {int}) | (uint, {int})\n+            (TyKind::Scalar(Scalar::Int(_)), TyKind::InferenceVar(_, TyVariableKind::Integer))\n+            | (TyKind::Scalar(Scalar::Uint(_)), TyKind::InferenceVar(_, TyVariableKind::Integer)) => {\n+                lhs_ty\n+            }\n+            // ({float} | float)\n+            (TyKind::InferenceVar(_, TyVariableKind::Float), TyKind::Scalar(Scalar::Float(_))) => {\n+                rhs_ty\n+            }\n+            // (float, {float})\n+            (TyKind::Scalar(Scalar::Float(_)), TyKind::InferenceVar(_, TyVariableKind::Float)) => {\n+                lhs_ty\n+            }\n+            // ({int}, {int}) | ({float}, {float})\n+            (\n+                TyKind::InferenceVar(_, TyVariableKind::Integer),\n+                TyKind::InferenceVar(_, TyVariableKind::Integer),\n+            )\n+            | (\n+                TyKind::InferenceVar(_, TyVariableKind::Float),\n+                TyKind::InferenceVar(_, TyVariableKind::Float),\n+            ) => rhs_ty,\n             _ => TyKind::Error.intern(&Interner),\n         },\n     }"}, {"sha": "89b65fb5fe769c089bbc34f7460c5e3e72c4aee7", "filename": "crates/hir_ty/src/tests/traits.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/252eb78dc3852707969b27b8a30f8844289aa985/crates%2Fhir_ty%2Fsrc%2Ftests%2Ftraits.rs", "raw_url": "https://github.com/rust-lang/rust/raw/252eb78dc3852707969b27b8a30f8844289aa985/crates%2Fhir_ty%2Fsrc%2Ftests%2Ftraits.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_ty%2Fsrc%2Ftests%2Ftraits.rs?ref=252eb78dc3852707969b27b8a30f8844289aa985", "patch": "@@ -1936,14 +1936,14 @@ fn closure_2() {\n             84..85 'f': F\n             84..88 'f(1)': {unknown}\n             86..87 '1': i32\n-            98..99 'g': |u64| -> i32\n-            102..111 '|v| v + 1': |u64| -> i32\n+            98..99 'g': |u64| -> {unknown}\n+            102..111 '|v| v + 1': |u64| -> {unknown}\n             103..104 'v': u64\n             106..107 'v': u64\n-            106..111 'v + 1': i32\n+            106..111 'v + 1': {unknown}\n             110..111 '1': i32\n-            117..118 'g': |u64| -> i32\n-            117..124 'g(1u64)': i32\n+            117..118 'g': |u64| -> {unknown}\n+            117..124 'g(1u64)': {unknown}\n             119..123 '1u64': u64\n             134..135 'h': |u128| -> u128\n             138..151 '|v| 1u128 + v': |u128| -> u128"}]}