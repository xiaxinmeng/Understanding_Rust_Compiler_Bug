{"sha": "afb7acff57cf301f6229eb9a07060d694ed2b3ed", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFmYjdhY2ZmNTdjZjMwMWY2MjI5ZWI5YTA3MDYwZDY5NGVkMmIzZWQ=", "commit": {"author": {"name": "Felix S. Klock II", "email": "pnkfelix@pnkfx.org", "date": "2015-04-10T14:26:11Z"}, "committer": {"name": "Felix S. Klock II", "email": "pnkfelix@pnkfx.org", "date": "2015-04-10T14:32:31Z"}, "message": "Re-add a fixme after some investigation into what's going on.", "tree": {"sha": "7924eb8b5da058201b70a38a4b62e0884017f8cb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7924eb8b5da058201b70a38a4b62e0884017f8cb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/afb7acff57cf301f6229eb9a07060d694ed2b3ed", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/afb7acff57cf301f6229eb9a07060d694ed2b3ed", "html_url": "https://github.com/rust-lang/rust/commit/afb7acff57cf301f6229eb9a07060d694ed2b3ed", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/afb7acff57cf301f6229eb9a07060d694ed2b3ed/comments", "author": {"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c44d40e77f4dabbfff95a715006523b73918a7c4", "url": "https://api.github.com/repos/rust-lang/rust/commits/c44d40e77f4dabbfff95a715006523b73918a7c4", "html_url": "https://github.com/rust-lang/rust/commit/c44d40e77f4dabbfff95a715006523b73918a7c4"}], "stats": {"total": 11, "additions": 11, "deletions": 0}, "files": [{"sha": "de77baa0ef21fe48620ddf10d6dd8d1ef2107cc7", "filename": "src/libsyntax/ext/deriving/generic/mod.rs", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/afb7acff57cf301f6229eb9a07060d694ed2b3ed/src%2Flibsyntax%2Fext%2Fderiving%2Fgeneric%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/afb7acff57cf301f6229eb9a07060d694ed2b3ed/src%2Flibsyntax%2Fext%2Fderiving%2Fgeneric%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fderiving%2Fgeneric%2Fmod.rs?ref=afb7acff57cf301f6229eb9a07060d694ed2b3ed", "patch": "@@ -1181,6 +1181,17 @@ impl<'a> MethodDef<'a> {\n                     rules: ast::UnsafeBlock(ast::CompilerGenerated),\n                     span: sp }));\n \n+                // FIXME: This unconditionally casts to `isize`. However:\n+                //\n+                // 1. On 32-bit platforms, that will truncate 64-bit enums\n+                //    that are making use of the upper 32 bits, and\n+                //\n+                // 2. On all platforms, it will misinterpret the sign bit\n+                //    of a 64-bit enum.\n+                //\n+                // What it should do is lookup whether the enum has an\n+                // repr-attribute and cast to that if necessary. But\n+                // attributes are not yet available to this function.\n                 let target_ty = cx.ty_ident(sp, cx.ident_of(\"isize\"));\n                 let variant_disr = cx.expr_cast(sp, variant_value, target_ty);\n                 let let_stmt = cx.stmt_let(sp, false, ident, variant_disr);"}]}