{"sha": "e5300ad3baf80c9903235a98a12b6cfd409e9f10", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU1MzAwYWQzYmFmODBjOTkwMzIzNWE5OGExMmI2Y2ZkNDA5ZTlmMTA=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-10-30T14:28:30Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-10-30T14:43:14Z"}, "message": "remove forward pointer for type_ref", "tree": {"sha": "ad15ef9afdda85d9978fa2e4fccbc890723fab08", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ad15ef9afdda85d9978fa2e4fccbc890723fab08"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e5300ad3baf80c9903235a98a12b6cfd409e9f10", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e5300ad3baf80c9903235a98a12b6cfd409e9f10", "html_url": "https://github.com/rust-lang/rust/commit/e5300ad3baf80c9903235a98a12b6cfd409e9f10", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e5300ad3baf80c9903235a98a12b6cfd409e9f10/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e56433432057712086ca623c4a1ef40089004839", "url": "https://api.github.com/repos/rust-lang/rust/commits/e56433432057712086ca623c4a1ef40089004839", "html_url": "https://github.com/rust-lang/rust/commit/e56433432057712086ca623c4a1ef40089004839"}], "stats": {"total": 51, "additions": 27, "deletions": 24}, "files": [{"sha": "d16b3a1cced2cac5b62659c2cfcf7fe39c1087c0", "filename": "crates/ra_hir/src/adt.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/e5300ad3baf80c9903235a98a12b6cfd409e9f10/crates%2Fra_hir%2Fsrc%2Fadt.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e5300ad3baf80c9903235a98a12b6cfd409e9f10/crates%2Fra_hir%2Fsrc%2Fadt.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fadt.rs?ref=e5300ad3baf80c9903235a98a12b6cfd409e9f10", "patch": "@@ -3,13 +3,12 @@\n \n use std::sync::Arc;\n \n-use hir_def::name::AsName;\n+use hir_def::{name::AsName, type_ref::TypeRef};\n use ra_arena::{impl_arena_id, Arena, RawId};\n use ra_syntax::ast::{self, NameOwner, StructKind, TypeAscriptionOwner};\n \n use crate::{\n     db::{AstDatabase, DefDatabase, HirDatabase},\n-    type_ref::TypeRef,\n     Enum, EnumVariant, FieldSource, HasSource, Module, Name, Source, Struct, StructField,\n };\n "}, {"sha": "d865c972e3f957a21f38f95a1e4db085ab36e35c", "filename": "crates/ra_hir/src/code_model.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/e5300ad3baf80c9903235a98a12b6cfd409e9f10/crates%2Fra_hir%2Fsrc%2Fcode_model.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e5300ad3baf80c9903235a98a12b6cfd409e9f10/crates%2Fra_hir%2Fsrc%2Fcode_model.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fcode_model.rs?ref=e5300ad3baf80c9903235a98a12b6cfd409e9f10", "patch": "@@ -10,6 +10,7 @@ use hir_def::{\n         self, AsName, BOOL, CHAR, F32, F64, I128, I16, I32, I64, I8, ISIZE, SELF_TYPE, STR, U128,\n         U16, U32, U64, U8, USIZE,\n     },\n+    type_ref::{Mutability, TypeRef},\n     CrateModuleId, ModuleId,\n };\n use ra_db::{CrateId, Edition};\n@@ -33,8 +34,6 @@ use crate::{\n         primitive::{FloatBitness, FloatTy, IntBitness, IntTy, Signedness},\n         InferenceResult, TraitRef,\n     },\n-    type_ref::Mutability,\n-    type_ref::TypeRef,\n     Either, HasSource, Name, Ty,\n };\n "}, {"sha": "6e23197a4d1c6d99f4a9da92058f236b9fb08c15", "filename": "crates/ra_hir/src/expr.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/e5300ad3baf80c9903235a98a12b6cfd409e9f10/crates%2Fra_hir%2Fsrc%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e5300ad3baf80c9903235a98a12b6cfd409e9f10/crates%2Fra_hir%2Fsrc%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fexpr.rs?ref=e5300ad3baf80c9903235a98a12b6cfd409e9f10", "patch": "@@ -6,15 +6,17 @@ pub(crate) mod validation;\n \n use std::{ops::Index, sync::Arc};\n \n-use hir_def::path::GenericArgs;\n+use hir_def::{\n+    path::GenericArgs,\n+    type_ref::{Mutability, TypeRef},\n+};\n use ra_arena::{impl_arena_id, map::ArenaMap, Arena, RawId};\n use ra_syntax::{ast, AstPtr};\n use rustc_hash::FxHashMap;\n \n use crate::{\n     db::HirDatabase,\n     ty::primitive::{UncertainFloatTy, UncertainIntTy},\n-    type_ref::{Mutability, TypeRef},\n     DefWithBody, Either, HasSource, Name, Path, Resolver, Source,\n };\n "}, {"sha": "ad029b868f94c9585f71219718b5dd61ef72d10d", "filename": "crates/ra_hir/src/expr/lower.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e5300ad3baf80c9903235a98a12b6cfd409e9f10/crates%2Fra_hir%2Fsrc%2Fexpr%2Flower.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e5300ad3baf80c9903235a98a12b6cfd409e9f10/crates%2Fra_hir%2Fsrc%2Fexpr%2Flower.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fexpr%2Flower.rs?ref=e5300ad3baf80c9903235a98a12b6cfd409e9f10", "patch": "@@ -3,6 +3,7 @@\n use hir_def::{\n     name::{self, AsName, Name},\n     path::GenericArgs,\n+    type_ref::TypeRef,\n };\n use ra_arena::Arena;\n use ra_syntax::{\n@@ -17,7 +18,6 @@ use test_utils::tested_by;\n use crate::{\n     db::HirDatabase,\n     ty::primitive::{FloatTy, IntTy, UncertainFloatTy, UncertainIntTy},\n-    type_ref::TypeRef,\n     AstId, DefWithBody, Either, HirFileId, MacroCallLoc, MacroFileKind, Mutability, Path, Resolver,\n     Source,\n };"}, {"sha": "9d5d18564838ec13c33ce1179c13831bfb5542f9", "filename": "crates/ra_hir/src/generics.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e5300ad3baf80c9903235a98a12b6cfd409e9f10/crates%2Fra_hir%2Fsrc%2Fgenerics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e5300ad3baf80c9903235a98a12b6cfd409e9f10/crates%2Fra_hir%2Fsrc%2Fgenerics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fgenerics.rs?ref=e5300ad3baf80c9903235a98a12b6cfd409e9f10", "patch": "@@ -8,12 +8,12 @@ use std::sync::Arc;\n use hir_def::{\n     name::{self, AsName},\n     path::Path,\n+    type_ref::{TypeBound, TypeRef},\n };\n use ra_syntax::ast::{self, DefaultTypeParamOwner, NameOwner, TypeBoundsOwner, TypeParamsOwner};\n \n use crate::{\n     db::{AstDatabase, DefDatabase, HirDatabase},\n-    type_ref::{TypeBound, TypeRef},\n     Adt, Const, Container, Enum, EnumVariant, Function, HasSource, ImplBlock, Name, Struct, Trait,\n     TypeAlias, Union,\n };"}, {"sha": "8584686fd0ccb7acac472100b7e2983244e1c665", "filename": "crates/ra_hir/src/impl_block.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e5300ad3baf80c9903235a98a12b6cfd409e9f10/crates%2Fra_hir%2Fsrc%2Fimpl_block.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e5300ad3baf80c9903235a98a12b6cfd409e9f10/crates%2Fra_hir%2Fsrc%2Fimpl_block.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fimpl_block.rs?ref=e5300ad3baf80c9903235a98a12b6cfd409e9f10", "patch": "@@ -3,6 +3,7 @@\n use rustc_hash::FxHashMap;\n use std::sync::Arc;\n \n+use hir_def::type_ref::TypeRef;\n use ra_arena::{impl_arena_id, map::ArenaMap, Arena, RawId};\n use ra_cfg::CfgOptions;\n use ra_syntax::{\n@@ -19,7 +20,6 @@ use crate::{\n     ids::MacroCallLoc,\n     resolve::Resolver,\n     ty::Ty,\n-    type_ref::TypeRef,\n     AssocItem, AstId, Const, Function, HasSource, HirFileId, MacroFileKind, Path, Source, TraitRef,\n     TypeAlias,\n };"}, {"sha": "4dd99c74f51e72d07c2d21867c2d3d6c414d242c", "filename": "crates/ra_hir/src/lib.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/e5300ad3baf80c9903235a98a12b6cfd409e9f10/crates%2Fra_hir%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e5300ad3baf80c9903235a98a12b6cfd409e9f10/crates%2Fra_hir%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Flib.rs?ref=e5300ad3baf80c9903235a98a12b6cfd409e9f10", "patch": "@@ -39,7 +39,6 @@ mod nameres;\n mod adt;\n mod traits;\n mod type_alias;\n-mod type_ref;\n mod ty;\n mod attr;\n mod impl_block;\n@@ -75,7 +74,6 @@ pub use crate::{\n     ty::{\n         display::HirDisplay, ApplicationTy, CallableDef, Substs, TraitRef, Ty, TypeCtor, TypeWalk,\n     },\n-    type_ref::Mutability,\n };\n \n pub use self::code_model::{\n@@ -89,4 +87,5 @@ pub use self::code_model::{\n pub use hir_def::{\n     name::Name,\n     path::{Path, PathKind},\n+    type_ref::Mutability,\n };"}, {"sha": "d2bfcdc7dbcb981e5c271ef2947df54f673d488e", "filename": "crates/ra_hir/src/ty.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e5300ad3baf80c9903235a98a12b6cfd409e9f10/crates%2Fra_hir%2Fsrc%2Fty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e5300ad3baf80c9903235a98a12b6cfd409e9f10/crates%2Fra_hir%2Fsrc%2Fty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fty.rs?ref=e5300ad3baf80c9903235a98a12b6cfd409e9f10", "patch": "@@ -17,8 +17,8 @@ use std::sync::Arc;\n use std::{fmt, iter, mem};\n \n use crate::{\n-    db::HirDatabase, expr::ExprId, type_ref::Mutability, util::make_mut_slice, Adt, Crate,\n-    DefWithBody, GenericParams, HasGenericParams, Name, Trait, TypeAlias,\n+    db::HirDatabase, expr::ExprId, util::make_mut_slice, Adt, Crate, DefWithBody, GenericParams,\n+    HasGenericParams, Mutability, Name, Trait, TypeAlias,\n };\n use display::{HirDisplay, HirFormatter};\n "}, {"sha": "7466ee3413890df7f6cdf43dd951fbfe69f787db", "filename": "crates/ra_hir/src/ty/infer.rs", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/e5300ad3baf80c9903235a98a12b6cfd409e9f10/crates%2Fra_hir%2Fsrc%2Fty%2Finfer.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e5300ad3baf80c9903235a98a12b6cfd409e9f10/crates%2Fra_hir%2Fsrc%2Fty%2Finfer.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fty%2Finfer.rs?ref=e5300ad3baf80c9903235a98a12b6cfd409e9f10", "patch": "@@ -21,7 +21,11 @@ use std::sync::Arc;\n use ena::unify::{InPlaceUnificationTable, NoError, UnifyKey, UnifyValue};\n use rustc_hash::FxHashMap;\n \n-use hir_def::{name, path::known};\n+use hir_def::{\n+    name,\n+    path::known,\n+    type_ref::{Mutability, TypeRef},\n+};\n use ra_arena::map::ArenaMap;\n use ra_prof::profile;\n use test_utils::tested_by;\n@@ -40,7 +44,6 @@ use crate::{\n     expr::{BindingAnnotation, Body, ExprId, PatId},\n     resolve::{Resolver, TypeNs},\n     ty::infer::diagnostics::InferenceDiagnostic,\n-    type_ref::{Mutability, TypeRef},\n     Adt, AssocItem, ConstData, DefWithBody, FnData, Function, HasBody, Path, StructField,\n };\n "}, {"sha": "6ea135126a5cf207807cdb5959df8212b2b69b04", "filename": "crates/ra_hir/src/ty/infer/coerce.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/e5300ad3baf80c9903235a98a12b6cfd409e9f10/crates%2Fra_hir%2Fsrc%2Fty%2Finfer%2Fcoerce.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e5300ad3baf80c9903235a98a12b6cfd409e9f10/crates%2Fra_hir%2Fsrc%2Fty%2Finfer%2Fcoerce.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fty%2Finfer%2Fcoerce.rs?ref=e5300ad3baf80c9903235a98a12b6cfd409e9f10", "patch": "@@ -14,8 +14,7 @@ use crate::{\n     lang_item::LangItemTarget,\n     resolve::Resolver,\n     ty::{autoderef, Substs, Ty, TypeCtor, TypeWalk},\n-    type_ref::Mutability,\n-    Adt,\n+    Adt, Mutability,\n };\n \n impl<'a, D: HirDatabase> InferenceContext<'a, D> {"}, {"sha": "0f49a0e541df484699f6d3e0222bd63ac8cc17e3", "filename": "crates/ra_hir/src/ty/lower.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/e5300ad3baf80c9903235a98a12b6cfd409e9f10/crates%2Fra_hir%2Fsrc%2Fty%2Flower.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e5300ad3baf80c9903235a98a12b6cfd409e9f10/crates%2Fra_hir%2Fsrc%2Fty%2Flower.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fty%2Flower.rs?ref=e5300ad3baf80c9903235a98a12b6cfd409e9f10", "patch": "@@ -8,7 +8,10 @@\n use std::iter;\n use std::sync::Arc;\n \n-use hir_def::path::{GenericArg, PathSegment};\n+use hir_def::{\n+    path::{GenericArg, PathSegment},\n+    type_ref::{TypeBound, TypeRef},\n+};\n \n use super::{\n     FnSig, GenericPredicate, ProjectionPredicate, ProjectionTy, Substs, TraitRef, Ty, TypeCtor,\n@@ -22,7 +25,6 @@ use crate::{\n     nameres::Namespace,\n     resolve::{Resolver, TypeNs},\n     ty::Adt,\n-    type_ref::{TypeBound, TypeRef},\n     util::make_mut_slice,\n     BuiltinType, Const, Enum, EnumVariant, Function, ModuleDef, Path, Static, Struct, StructField,\n     Trait, TypeAlias, Union,"}, {"sha": "eb69344f6a7425ae9f765cbddbe3ba28e1fe8bfb", "filename": "crates/ra_hir/src/ty/method_resolution.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/e5300ad3baf80c9903235a98a12b6cfd409e9f10/crates%2Fra_hir%2Fsrc%2Fty%2Fmethod_resolution.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e5300ad3baf80c9903235a98a12b6cfd409e9f10/crates%2Fra_hir%2Fsrc%2Fty%2Fmethod_resolution.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fty%2Fmethod_resolution.rs?ref=e5300ad3baf80c9903235a98a12b6cfd409e9f10", "patch": "@@ -15,8 +15,7 @@ use crate::{\n     resolve::Resolver,\n     ty::primitive::{FloatBitness, UncertainFloatTy, UncertainIntTy},\n     ty::{Ty, TypeCtor},\n-    type_ref::Mutability,\n-    AssocItem, Crate, Function, Module, Name, Trait,\n+    AssocItem, Crate, Function, Module, Mutability, Name, Trait,\n };\n \n /// This is used as a key for indexing impls."}, {"sha": "87126ee7f412016697896ef0d7c99928ab2b9498", "filename": "crates/ra_hir/src/type_alias.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/e5300ad3baf80c9903235a98a12b6cfd409e9f10/crates%2Fra_hir%2Fsrc%2Ftype_alias.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e5300ad3baf80c9903235a98a12b6cfd409e9f10/crates%2Fra_hir%2Fsrc%2Ftype_alias.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Ftype_alias.rs?ref=e5300ad3baf80c9903235a98a12b6cfd409e9f10", "patch": "@@ -2,12 +2,14 @@\n \n use std::sync::Arc;\n \n-use hir_def::name::{AsName, Name};\n+use hir_def::{\n+    name::{AsName, Name},\n+    type_ref::TypeRef,\n+};\n use ra_syntax::ast::NameOwner;\n \n use crate::{\n     db::{AstDatabase, DefDatabase},\n-    type_ref::TypeRef,\n     HasSource, TypeAlias,\n };\n "}, {"sha": "bd56ddbe61aecd57fe3b6d7d82981fa22dd1ad87", "filename": "crates/ra_hir/src/type_ref.rs", "status": "removed", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/e56433432057712086ca623c4a1ef40089004839/crates%2Fra_hir%2Fsrc%2Ftype_ref.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e56433432057712086ca623c4a1ef40089004839/crates%2Fra_hir%2Fsrc%2Ftype_ref.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Ftype_ref.rs?ref=e56433432057712086ca623c4a1ef40089004839", "patch": "@@ -1 +0,0 @@\n-pub use hir_def::type_ref::*;"}]}