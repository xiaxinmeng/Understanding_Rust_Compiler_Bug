{"sha": "202086e48ff3ca955a52137d71ca8713f39cd5ff", "node_id": "MDY6Q29tbWl0NzI0NzEyOjIwMjA4NmU0OGZmM2NhOTU1YTUyMTM3ZDcxY2E4NzEzZjM5Y2Q1ZmY=", "commit": {"author": {"name": "Felix Raimundo", "email": "felix.raimundo@tweag.io", "date": "2017-05-09T17:06:56Z"}, "committer": {"name": "Felix Raimundo", "email": "felix.raimundo@tweag.io", "date": "2017-05-09T17:06:56Z"}, "message": "Fix warnings in  examples", "tree": {"sha": "96c86007004da33f3bc4b90ca38695867e590137", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/96c86007004da33f3bc4b90ca38695867e590137"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/202086e48ff3ca955a52137d71ca8713f39cd5ff", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/202086e48ff3ca955a52137d71ca8713f39cd5ff", "html_url": "https://github.com/rust-lang/rust/commit/202086e48ff3ca955a52137d71ca8713f39cd5ff", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/202086e48ff3ca955a52137d71ca8713f39cd5ff/comments", "author": null, "committer": null, "parents": [{"sha": "656efcd3ab029491fd0bd01f3b596516884cabe1", "url": "https://api.github.com/repos/rust-lang/rust/commits/656efcd3ab029491fd0bd01f3b596516884cabe1", "html_url": "https://github.com/rust-lang/rust/commit/656efcd3ab029491fd0bd01f3b596516884cabe1"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "425cb0ada08eb5adb88621969babd5d973b117ee", "filename": "src/libstd/thread/mod.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/202086e48ff3ca955a52137d71ca8713f39cd5ff/src%2Flibstd%2Fthread%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/202086e48ff3ca955a52137d71ca8713f39cd5ff/src%2Flibstd%2Fthread%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fthread%2Fmod.rs?ref=202086e48ff3ca955a52137d71ca8713f39cd5ff", "patch": "@@ -425,15 +425,15 @@ impl Builder {\n /// let (tx, rx) = channel();\n ///\n /// let sender = thread::spawn(move || {\n-///     tx.send(\"Hello, thread\".to_owned());\n+///     let _ = tx.send(\"Hello, thread\".to_owned());\n /// });\n ///\n /// let receiver = thread::spawn(move || {\n ///     println!(\"{}\", rx.recv().unwrap());\n /// });\n ///\n-/// sender.join();\n-/// receiver.join();\n+/// let _ = sender.join();\n+/// let _ = receiver.join();\n /// ```\n ///\n /// A thread can also return a value through its [`JoinHandle`], you can use\n@@ -449,7 +449,7 @@ impl Builder {\n /// });\n ///\n /// let result = computation.join().unwrap();\n-/// println!(\"{}\", v);\n+/// println!(\"{}\", result);\n /// ```\n ///\n /// [`channels`]: ../../std/sync/mpsc/index.html"}]}