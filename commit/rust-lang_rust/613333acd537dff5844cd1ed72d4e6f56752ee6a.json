{"sha": "613333acd537dff5844cd1ed72d4e6f56752ee6a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjYxMzMzM2FjZDUzN2RmZjU4NDRjZDFlZDcyZDRlNmY1Njc1MmVlNmE=", "commit": {"author": {"name": "Eduardo Broto", "email": "ebroto@tutanota.com", "date": "2020-11-29T17:08:47Z"}, "committer": {"name": "flip1995", "email": "philipp.krones@embecosm.com", "date": "2020-12-10T08:57:29Z"}, "message": "Pin Clippy to a nightly", "tree": {"sha": "343699e76348812ac9c81cd6bdcfc0057e393e84", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/343699e76348812ac9c81cd6bdcfc0057e393e84"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/613333acd537dff5844cd1ed72d4e6f56752ee6a", "comment_count": 0, "verification": {"verified": false, "reason": "bad_email", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEij1UXJ/PQTcb99vTHKDfKvWdaKUFAl/R4vkACgkQHKDfKvWd\naKWauBAAwjpodYLvuQskHbufr64GalxvlZ537to1Lf9ePGlsO93UubdVdvw19JwO\n5a35703wtPOo+fxPKXh3pNdSuDLfJiGGmZKa0zQmU7Dp8HY5EkUin4J1WqCQ+/Us\nLkzhWRAoU2EUculbXSmDgkiUfzgAYKY1Q0M8/tDa8wbIFb7/dDnzMr2TKfThX9Fd\neu9RNLtpTIIgkpEU2c3ePOrdejCrlubk0nAKAIoucv9XBjCE5o1YrDJEOGz+KoZF\ntlqfSK9aYOvSPOAX6VY8g/eL1b94shCJv/45fWeywDznZ4Ege20WZGszQ38jbXgu\na3Nxio5vYwHSPZ3rVpR/jzNMlouA4pQv54ZhccPWWmzsVrkzNoh5wORHZooittyR\nhrZqu7yUCBrT7BfCzSufM6sq4UibwuulAxNyvSbG6czBfJUtGwdb1Pe4uTXDUvtW\ns2ciQNixhVeJt+wpNgebD/q2rNpvTW/rdaFmRl8cJgX7N8mijhmSUuCAlFlE33kK\nnzuh1zioQfJlwCCzpeTPjiDh36IQHNavObRLDEL8coz6qwzRj/scnsfILbNcrAnN\nw5vPhvHttgrvzmAY/NowZr4D1ri8z2L8fMgywR/bUAAmx0jKyve34J/Iz47y8Dyi\nwCFeyKrmsW5Eiew2L6bgV4udz0F6YbFgko2RvT0g3K9ywUdCuwI=\n=IqeQ\n-----END PGP SIGNATURE-----", "payload": "tree 343699e76348812ac9c81cd6bdcfc0057e393e84\nparent 6c70133faa059a9e71dc386d70121a23a65715ab\nauthor Eduardo Broto <ebroto@tutanota.com> 1606669727 +0100\ncommitter flip1995 <philipp.krones@embecosm.com> 1607590649 +0100\n\nPin Clippy to a nightly\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/613333acd537dff5844cd1ed72d4e6f56752ee6a", "html_url": "https://github.com/rust-lang/rust/commit/613333acd537dff5844cd1ed72d4e6f56752ee6a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/613333acd537dff5844cd1ed72d4e6f56752ee6a/comments", "author": {"login": "ebroto", "id": 816908, "node_id": "MDQ6VXNlcjgxNjkwOA==", "avatar_url": "https://avatars.githubusercontent.com/u/816908?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ebroto", "html_url": "https://github.com/ebroto", "followers_url": "https://api.github.com/users/ebroto/followers", "following_url": "https://api.github.com/users/ebroto/following{/other_user}", "gists_url": "https://api.github.com/users/ebroto/gists{/gist_id}", "starred_url": "https://api.github.com/users/ebroto/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ebroto/subscriptions", "organizations_url": "https://api.github.com/users/ebroto/orgs", "repos_url": "https://api.github.com/users/ebroto/repos", "events_url": "https://api.github.com/users/ebroto/events{/privacy}", "received_events_url": "https://api.github.com/users/ebroto/received_events", "type": "User", "site_admin": false}, "committer": {"login": "flip1995", "id": 9744647, "node_id": "MDQ6VXNlcjk3NDQ2NDc=", "avatar_url": "https://avatars.githubusercontent.com/u/9744647?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flip1995", "html_url": "https://github.com/flip1995", "followers_url": "https://api.github.com/users/flip1995/followers", "following_url": "https://api.github.com/users/flip1995/following{/other_user}", "gists_url": "https://api.github.com/users/flip1995/gists{/gist_id}", "starred_url": "https://api.github.com/users/flip1995/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flip1995/subscriptions", "organizations_url": "https://api.github.com/users/flip1995/orgs", "repos_url": "https://api.github.com/users/flip1995/repos", "events_url": "https://api.github.com/users/flip1995/events{/privacy}", "received_events_url": "https://api.github.com/users/flip1995/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6c70133faa059a9e71dc386d70121a23a65715ab", "url": "https://api.github.com/repos/rust-lang/rust/commits/6c70133faa059a9e71dc386d70121a23a65715ab", "html_url": "https://github.com/rust-lang/rust/commit/6c70133faa059a9e71dc386d70121a23a65715ab"}], "stats": {"total": 103, "additions": 18, "deletions": 85}, "files": [{"sha": "181b3bab421624dee4196d28af5a2b13146151ab", "filename": ".github/workflows/clippy.yml", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/613333acd537dff5844cd1ed72d4e6f56752ee6a/.github%2Fworkflows%2Fclippy.yml", "raw_url": "https://github.com/rust-lang/rust/raw/613333acd537dff5844cd1ed72d4e6f56752ee6a/.github%2Fworkflows%2Fclippy.yml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/.github%2Fworkflows%2Fclippy.yml?ref=613333acd537dff5844cd1ed72d4e6f56752ee6a", "patch": "@@ -56,9 +56,6 @@ jobs:\n         restore-keys: |\n           ${{ runner.os }}-x86_64-unknown-linux-gnu\n \n-    - name: Master Toolchain Setup\n-      run: bash setup-toolchain.sh\n-\n     # Run\n     - name: Set LD_LIBRARY_PATH (Linux)\n       run: |"}, {"sha": "f08182365fc7002afde85a05f3267d583d34e9bb", "filename": ".github/workflows/clippy_bors.yml", "status": "modified", "additions": 0, "deletions": 11, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/613333acd537dff5844cd1ed72d4e6f56752ee6a/.github%2Fworkflows%2Fclippy_bors.yml", "raw_url": "https://github.com/rust-lang/rust/raw/613333acd537dff5844cd1ed72d4e6f56752ee6a/.github%2Fworkflows%2Fclippy_bors.yml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/.github%2Fworkflows%2Fclippy_bors.yml?ref=613333acd537dff5844cd1ed72d4e6f56752ee6a", "patch": "@@ -105,11 +105,6 @@ jobs:\n         restore-keys: |\n           ${{ runner.os }}-${{ matrix.host }}\n \n-    - name: Master Toolchain Setup\n-      run: bash setup-toolchain.sh\n-      env:\n-        HOST_TOOLCHAIN: ${{ matrix.host }}\n-\n     # Run\n     - name: Set LD_LIBRARY_PATH (Linux)\n       if: runner.os == 'Linux'\n@@ -192,9 +187,6 @@ jobs:\n         restore-keys: |\n           ${{ runner.os }}-x86_64-unknown-linux-gnu\n \n-    - name: Master Toolchain Setup\n-      run: bash setup-toolchain.sh\n-\n     # Run\n     - name: Build Integration Test\n       run: cargo test --test integration --features integration --no-run\n@@ -273,9 +265,6 @@ jobs:\n         restore-keys: |\n           ${{ runner.os }}-x86_64-unknown-linux-gnu\n \n-    - name: Master Toolchain Setup\n-      run: bash setup-toolchain.sh\n-\n     # Download\n     - name: Download target dir\n       uses: actions/download-artifact@v1"}, {"sha": "29cbe2a08ecf8ed33f322de5c978b27d3e930b8b", "filename": "CONTRIBUTING.md", "status": "modified", "additions": 12, "deletions": 9, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/613333acd537dff5844cd1ed72d4e6f56752ee6a/CONTRIBUTING.md", "raw_url": "https://github.com/rust-lang/rust/raw/613333acd537dff5844cd1ed72d4e6f56752ee6a/CONTRIBUTING.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/CONTRIBUTING.md?ref=613333acd537dff5844cd1ed72d4e6f56752ee6a", "patch": "@@ -182,18 +182,21 @@ That's why the `else_if_without_else` example uses the `register_early_pass` fun\n [early_lint_pass]: https://doc.rust-lang.org/nightly/nightly-rustc/rustc_lint/trait.EarlyLintPass.html\n [late_lint_pass]: https://doc.rust-lang.org/nightly/nightly-rustc/rustc_lint/trait.LateLintPass.html\n \n-## Fixing build failures caused by Rust\n+## Syncing changes from [`rust-lang/rust`] to Clippy\n \n-Clippy currently gets built with `rustc` of the `rust-lang/rust` `master`\n-branch. Most of the times we have to adapt to the changes and only very rarely\n-there's an actual bug in Rust.\n+Clippy currently gets built with a pinned nightly version.\n \n-If you decide to make Clippy work again with a Rust commit that breaks it, you\n-have to sync the `rust-lang/rust-clippy` repository with the `subtree` copy of\n-Clippy in the `rust-lang/rust` repository.\n+In the `rust-lang/rust` repository, where rustc resides, there's a copy of Clippy\n+that compiler hackers modify from time to time to adapt to changes in the unstable\n+API of the compiler.\n \n-For general information about `subtree`s in the Rust repository see [Rust's\n-`CONTRIBUTING.md`][subtree].\n+We need to sync these changes back to this repository periodically. If you want\n+to help with that, you have to sync the `rust-lang/rust-clippy` repository with \n+the `subtree` copy of Clippy in the `rust-lang/rust` repository, and update\n+the `rustc-toolchain` file accordingly.\n+\n+For general information about `subtree`s in the Rust repository\n+see [Rust's `CONTRIBUTING.md`][subtree].\n \n ### Patching git-subtree to work with big repos\n "}, {"sha": "8b2a8a238900a7aab09f24bb6e7be16d807a8cc8", "filename": "doc/basics.md", "status": "modified", "additions": 3, "deletions": 25, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/613333acd537dff5844cd1ed72d4e6f56752ee6a/doc%2Fbasics.md", "raw_url": "https://github.com/rust-lang/rust/raw/613333acd537dff5844cd1ed72d4e6f56752ee6a/doc%2Fbasics.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/doc%2Fbasics.md?ref=613333acd537dff5844cd1ed72d4e6f56752ee6a", "patch": "@@ -1,16 +1,14 @@\n # Basics for hacking on Clippy\n \n This document explains the basics for hacking on Clippy. Besides others, this\n-includes how to set-up the development environment, how to build and how to test\n-Clippy. For a more in depth description on the codebase take a look at [Adding\n-Lints] or [Common Tools].\n+includes how to build and test Clippy. For a more in depth description on\n+the codebase take a look at [Adding Lints] or [Common Tools].\n \n [Adding Lints]: https://github.com/rust-lang/rust-clippy/blob/master/doc/adding_lints.md\n [Common Tools]: https://github.com/rust-lang/rust-clippy/blob/master/doc/common_tools_writing_lints.md\n \n - [Basics for hacking on Clippy](#basics-for-hacking-on-clippy)\n   - [Get the code](#get-the-code)\n-  - [Setup](#setup)\n   - [Building and Testing](#building-and-testing)\n   - [`cargo dev`](#cargo-dev)\n   - [PR](#pr)\n@@ -38,29 +36,9 @@ git rebase upstream/master\n git push\n ```\n \n-## Setup\n-\n-Next we need to setup the toolchain to compile Clippy. Since Clippy heavily\n-relies on compiler internals it is build with the latest rustc master. To get\n-this toolchain, you can just use the `setup-toolchain.sh` script or use\n-`rustup-toolchain-install-master`:\n-\n-```bash\n-bash setup-toolchain.sh\n-# OR\n-cargo install rustup-toolchain-install-master\n-# For better IDE integration also add `-c rustfmt -c rust-src` (optional)\n-rustup-toolchain-install-master -f -n master -c rustc-dev -c llvm-tools\n-rustup override set master\n-```\n-\n-_Note:_ Sometimes you may get compiler errors when building Clippy, even if you\n-didn't change anything. Normally those will be fixed by a maintainer in a few hours. \n-\n ## Building and Testing\n \n-Once the `master` toolchain is installed, you can build and test Clippy like\n-every other Rust project:\n+You can build and test Clippy like every other Rust project:\n \n ```bash\n cargo build  # builds Clippy"}, {"sha": "dba3e57bcf7b7a4ece08a77275925092085eb566", "filename": "rust-toolchain", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/613333acd537dff5844cd1ed72d4e6f56752ee6a/rust-toolchain", "raw_url": "https://github.com/rust-lang/rust/raw/613333acd537dff5844cd1ed72d4e6f56752ee6a/rust-toolchain", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/rust-toolchain?ref=613333acd537dff5844cd1ed72d4e6f56752ee6a", "patch": "@@ -1 +1,3 @@\n-nightly\n+[toolchain]\n+channel = \"nightly-2020-11-29\"\n+components = [\"llvm-tools-preview\", \"rustc-dev\", \"rust-src\", \"rustfmt\"]"}, {"sha": "191ea4315a6b5a8a29e56f6440f88115c466e8b9", "filename": "setup-toolchain.sh", "status": "removed", "additions": 0, "deletions": 36, "changes": 36, "blob_url": "https://github.com/rust-lang/rust/blob/6c70133faa059a9e71dc386d70121a23a65715ab/setup-toolchain.sh", "raw_url": "https://github.com/rust-lang/rust/raw/6c70133faa059a9e71dc386d70121a23a65715ab/setup-toolchain.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/setup-toolchain.sh?ref=6c70133faa059a9e71dc386d70121a23a65715ab", "patch": "@@ -1,36 +0,0 @@\n-#!/usr/bin/env bash\n-# Set up the appropriate rustc toolchain\n-\n-set -e\n-\n-cd \"$(dirname \"$0\")\"\n-\n-RTIM_PATH=$(command -v rustup-toolchain-install-master) || INSTALLED=false\n-CARGO_HOME=${CARGO_HOME:-$HOME/.cargo}\n-\n-# Check if RTIM is not installed or installed in other locations not in ~/.cargo/bin\n-if [[ \"$INSTALLED\" == false || \"$RTIM_PATH\" == $CARGO_HOME/bin/rustup-toolchain-install-master ]]; then\n-    cargo +nightly install rustup-toolchain-install-master\n-else\n-    VERSION=$(rustup-toolchain-install-master -V | grep -o \"[0-9.]*\")\n-    REMOTE=$(cargo +nightly search rustup-toolchain-install-master | grep -o \"[0-9.]*\")\n-    echo \"info: skipping updating rustup-toolchain-install-master at $RTIM_PATH\"\n-    echo \"      current version : $VERSION\"\n-    echo \"      remote version  : $REMOTE\"\n-fi\n-\n-RUST_COMMIT=$(git ls-remote https://github.com/rust-lang/rust master | awk '{print $1}')\n-\n-if rustc +master -Vv 2>/dev/null | grep -q \"$RUST_COMMIT\"; then\n-    echo \"info: master toolchain is up-to-date\"\n-    exit 0\n-fi\n-\n-if [[ -n \"$HOST_TOOLCHAIN\" ]]; then\n-    TOOLCHAIN=('--host' \"$HOST_TOOLCHAIN\")\n-else\n-    TOOLCHAIN=()\n-fi\n-\n-rustup-toolchain-install-master -f -n master \"${TOOLCHAIN[@]}\" -c rustc-dev -c llvm-tools -- \"$RUST_COMMIT\"\n-rustup override set master"}]}