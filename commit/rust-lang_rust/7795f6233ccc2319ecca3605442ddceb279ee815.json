{"sha": "7795f6233ccc2319ecca3605442ddceb279ee815", "node_id": "C_kwDOAAsO6NoAKDc3OTVmNjIzM2NjYzIzMTllY2NhMzYwNTQ0MmRkY2ViMjc5ZWU4MTU", "commit": {"author": {"name": "Oli Scherer", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2022-01-26T16:19:49Z"}, "committer": {"name": "Oli Scherer", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2022-02-02T15:40:11Z"}, "message": "Add explanation for early abort in TAIT hidden type computation", "tree": {"sha": "467ac32917c854f1ea7a9724743aca1322d37980", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/467ac32917c854f1ea7a9724743aca1322d37980"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7795f6233ccc2319ecca3605442ddceb279ee815", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7795f6233ccc2319ecca3605442ddceb279ee815", "html_url": "https://github.com/rust-lang/rust/commit/7795f6233ccc2319ecca3605442ddceb279ee815", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7795f6233ccc2319ecca3605442ddceb279ee815/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "64c5b9a3d6f26659e0bd388fbb00cd92d888178d", "url": "https://api.github.com/repos/rust-lang/rust/commits/64c5b9a3d6f26659e0bd388fbb00cd92d888178d", "html_url": "https://github.com/rust-lang/rust/commit/64c5b9a3d6f26659e0bd388fbb00cd92d888178d"}], "stats": {"total": 9, "additions": 9, "deletions": 0}, "files": [{"sha": "4b61e21c0e0cfa39bf75d26b9ac7d19550e6d15a", "filename": "compiler/rustc_typeck/src/collect/type_of.rs", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/7795f6233ccc2319ecca3605442ddceb279ee815/compiler%2Frustc_typeck%2Fsrc%2Fcollect%2Ftype_of.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7795f6233ccc2319ecca3605442ddceb279ee815/compiler%2Frustc_typeck%2Fsrc%2Fcollect%2Ftype_of.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcollect%2Ftype_of.rs?ref=7795f6233ccc2319ecca3605442ddceb279ee815", "patch": "@@ -598,6 +598,15 @@ fn find_opaque_ty_constraints(tcx: TyCtxt<'_>, def_id: LocalDefId) -> Ty<'_> {\n             }\n             // Calling `mir_borrowck` can lead to cycle errors through\n             // const-checking, avoid calling it if we don't have to.\n+            // ```rust\n+            // type Foo = impl Fn() -> usize; // when computing type for this\n+            // const fn bar() -> Foo {\n+            //     || 0usize\n+            // }\n+            // const BAZR: Foo = bar(); // we would mir-borrowck this, causing cycles\n+            // // because we again need to reveal `Foo` so we can check whether the\n+            // // constant does not contain interior mutability.\n+            // ```\n             if self.tcx.typeck(def_id).concrete_opaque_types.get(&self.def_id).is_none() {\n                 debug!(\"no constraints in typeck results\");\n                 return;"}]}