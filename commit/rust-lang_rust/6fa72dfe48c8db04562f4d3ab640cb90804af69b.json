{"sha": "6fa72dfe48c8db04562f4d3ab640cb90804af69b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZmYTcyZGZlNDhjOGRiMDQ1NjJmNGQzYWI2NDBjYjkwODA0YWY2OWI=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2014-03-17T03:41:57Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2014-03-17T03:41:57Z"}, "message": "auto merge of #12942 : alan-andrade/rust/docathon-getopts, r=alexcrichton\n\nhttps://docs.google.com/spreadsheet/ccc?key=0An9tLRVf1SSfdE9jX1Q2QkhiUGVwTnh5YTJnMHVUYXc&usp=sharing#gid=6", "tree": {"sha": "02c65e74f67505d8b26424536218b288e38246b1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/02c65e74f67505d8b26424536218b288e38246b1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6fa72dfe48c8db04562f4d3ab640cb90804af69b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6fa72dfe48c8db04562f4d3ab640cb90804af69b", "html_url": "https://github.com/rust-lang/rust/commit/6fa72dfe48c8db04562f4d3ab640cb90804af69b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6fa72dfe48c8db04562f4d3ab640cb90804af69b/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ffe72e95368aba02d002be0095522548e8f0ee79", "url": "https://api.github.com/repos/rust-lang/rust/commits/ffe72e95368aba02d002be0095522548e8f0ee79", "html_url": "https://github.com/rust-lang/rust/commit/ffe72e95368aba02d002be0095522548e8f0ee79"}, {"sha": "6b2888aeec08c56200ed26576eafb2d27ca079b8", "url": "https://api.github.com/repos/rust-lang/rust/commits/6b2888aeec08c56200ed26576eafb2d27ca079b8", "html_url": "https://github.com/rust-lang/rust/commit/6b2888aeec08c56200ed26576eafb2d27ca079b8"}], "stats": {"total": 19, "additions": 15, "deletions": 4}, "files": [{"sha": "43b05e7e2e71f823527fae99a26bc7182e6e5660", "filename": "src/libgetopts/lib.rs", "status": "modified", "additions": 15, "deletions": 4, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/6fa72dfe48c8db04562f4d3ab640cb90804af69b/src%2Flibgetopts%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6fa72dfe48c8db04562f4d3ab640cb90804af69b/src%2Flibgetopts%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibgetopts%2Flib.rs?ref=6fa72dfe48c8db04562f4d3ab640cb90804af69b", "patch": "@@ -98,27 +98,34 @@ use std::vec;\n \n /// Name of an option. Either a string or a single char.\n #[deriving(Clone, Eq)]\n-#[allow(missing_doc)]\n pub enum Name {\n+    /// A string representing the long name of an option.\n+    /// For example: \"help\"\n     Long(~str),\n+    /// A char representing the short name of an option.\n+    /// For example: 'h'\n     Short(char),\n }\n \n /// Describes whether an option has an argument.\n #[deriving(Clone, Eq)]\n-#[allow(missing_doc)]\n pub enum HasArg {\n+    /// The option requires an argument.\n     Yes,\n+    /// The option is just a flag, therefore no argument.\n     No,\n+    /// The option argument is optional and it could or not exist.\n     Maybe,\n }\n \n /// Describes how often an option may occur.\n #[deriving(Clone, Eq)]\n-#[allow(missing_doc)]\n pub enum Occur {\n+    /// The option occurs once.\n     Req,\n+    /// The option could or not occur.\n     Optional,\n+    /// The option occurs once or multiple times.\n     Multi,\n }\n \n@@ -176,12 +183,16 @@ pub struct Matches {\n /// expected format. Call the `to_err_msg` method to retrieve the\n /// error as a string.\n #[deriving(Clone, Eq, Show)]\n-#[allow(missing_doc)]\n pub enum Fail_ {\n+    /// The option requires an argument but none was passed.\n     ArgumentMissing(~str),\n+    /// The passed option is not declared among the possible options.\n     UnrecognizedOption(~str),\n+    /// A required option is not present.\n     OptionMissing(~str),\n+    /// A single occurence option is being used multiple times.\n     OptionDuplicated(~str),\n+    /// There's an argument being passed to a non-argument option.\n     UnexpectedArgument(~str),\n }\n "}]}