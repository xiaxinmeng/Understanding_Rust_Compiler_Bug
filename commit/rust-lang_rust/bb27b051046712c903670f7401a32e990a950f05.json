{"sha": "bb27b051046712c903670f7401a32e990a950f05", "node_id": "C_kwDOAAsO6NoAKGJiMjdiMDUxMDQ2NzEyYzkwMzY3MGY3NDAxYTMyZTk5MGE5NTBmMDU", "commit": {"author": {"name": "Dylan MacKenzie", "email": "ecstaticmorse@gmail.com", "date": "2021-11-30T18:14:50Z"}, "committer": {"name": "Dylan MacKenzie", "email": "ecstaticmorse@gmail.com", "date": "2021-12-01T01:14:48Z"}, "message": "Separate `RemoveFalseEdges` from `SimplifyBranches`\n\nOtherwise dataflow state will propagate along false edges and cause\nthings to be marked as maybe init unnecessarily. These should be\nseparate, since `SimplifyBranches` also makes `if true {} else {}` into\na `goto`, which means we wouldn't lint anything in the `else` block.", "tree": {"sha": "e7c9e2040b75d9088b2a400677fc393ed9b5f596", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e7c9e2040b75d9088b2a400677fc393ed9b5f596"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bb27b051046712c903670f7401a32e990a950f05", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bb27b051046712c903670f7401a32e990a950f05", "html_url": "https://github.com/rust-lang/rust/commit/bb27b051046712c903670f7401a32e990a950f05", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bb27b051046712c903670f7401a32e990a950f05/comments", "author": {"login": "ecstatic-morse", "id": 29463364, "node_id": "MDQ6VXNlcjI5NDYzMzY0", "avatar_url": "https://avatars.githubusercontent.com/u/29463364?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ecstatic-morse", "html_url": "https://github.com/ecstatic-morse", "followers_url": "https://api.github.com/users/ecstatic-morse/followers", "following_url": "https://api.github.com/users/ecstatic-morse/following{/other_user}", "gists_url": "https://api.github.com/users/ecstatic-morse/gists{/gist_id}", "starred_url": "https://api.github.com/users/ecstatic-morse/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ecstatic-morse/subscriptions", "organizations_url": "https://api.github.com/users/ecstatic-morse/orgs", "repos_url": "https://api.github.com/users/ecstatic-morse/repos", "events_url": "https://api.github.com/users/ecstatic-morse/events{/privacy}", "received_events_url": "https://api.github.com/users/ecstatic-morse/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ecstatic-morse", "id": 29463364, "node_id": "MDQ6VXNlcjI5NDYzMzY0", "avatar_url": "https://avatars.githubusercontent.com/u/29463364?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ecstatic-morse", "html_url": "https://github.com/ecstatic-morse", "followers_url": "https://api.github.com/users/ecstatic-morse/followers", "following_url": "https://api.github.com/users/ecstatic-morse/following{/other_user}", "gists_url": "https://api.github.com/users/ecstatic-morse/gists{/gist_id}", "starred_url": "https://api.github.com/users/ecstatic-morse/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ecstatic-morse/subscriptions", "organizations_url": "https://api.github.com/users/ecstatic-morse/orgs", "repos_url": "https://api.github.com/users/ecstatic-morse/repos", "events_url": "https://api.github.com/users/ecstatic-morse/events{/privacy}", "received_events_url": "https://api.github.com/users/ecstatic-morse/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6db0a0e9a4a2f55b1a85954e114ada0b45c32e45", "url": "https://api.github.com/repos/rust-lang/rust/commits/6db0a0e9a4a2f55b1a85954e114ada0b45c32e45", "html_url": "https://github.com/rust-lang/rust/commit/6db0a0e9a4a2f55b1a85954e114ada0b45c32e45"}], "stats": {"total": 53, "additions": 38, "deletions": 15}, "files": [{"sha": "5ae06a3ececdcfba52ffb13f1d2922c5e29db159", "filename": "compiler/rustc_mir_transform/src/lib.rs", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/bb27b051046712c903670f7401a32e990a950f05/compiler%2Frustc_mir_transform%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bb27b051046712c903670f7401a32e990a950f05/compiler%2Frustc_mir_transform%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir_transform%2Fsrc%2Flib.rs?ref=bb27b051046712c903670f7401a32e990a950f05", "patch": "@@ -60,6 +60,7 @@ mod match_branches;\n mod multiple_return_terminators;\n mod normalize_array_len;\n mod nrvo;\n+mod remove_false_edges;\n mod remove_noop_landing_pads;\n mod remove_storage_markers;\n mod remove_unneeded_drops;\n@@ -456,7 +457,7 @@ fn run_post_borrowck_cleanup_passes<'tcx>(tcx: TyCtxt<'tcx>, body: &mut Body<'tc\n \n     let post_borrowck_cleanup: &[&dyn MirPass<'tcx>] = &[\n         // Remove all things only needed by analysis\n-        &simplify_branches::SimplifyBranches::new(\"initial\"),\n+        &simplify_branches::SimplifyConstCondition::new(\"initial\"),\n         &remove_noop_landing_pads::RemoveNoopLandingPads,\n         &cleanup_post_borrowck::CleanupNonCodegenStatements,\n         &simplify::SimplifyCfg::new(\"early-opt\"),\n@@ -515,13 +516,13 @@ fn run_optimization_passes<'tcx>(tcx: TyCtxt<'tcx>, body: &mut Body<'tcx>) {\n         &instcombine::InstCombine,\n         &separate_const_switch::SeparateConstSwitch,\n         &const_prop::ConstProp,\n-        &simplify_branches::SimplifyBranches::new(\"after-const-prop\"),\n+        &simplify_branches::SimplifyConstCondition::new(\"after-const-prop\"),\n         &early_otherwise_branch::EarlyOtherwiseBranch,\n         &simplify_comparison_integral::SimplifyComparisonIntegral,\n         &simplify_try::SimplifyArmIdentity,\n         &simplify_try::SimplifyBranchSame,\n         &dest_prop::DestinationPropagation,\n-        &simplify_branches::SimplifyBranches::new(\"final\"),\n+        &simplify_branches::SimplifyConstCondition::new(\"final\"),\n         &remove_noop_landing_pads::RemoveNoopLandingPads,\n         &simplify::SimplifyCfg::new(\"final\"),\n         &nrvo::RenameReturnPlace,"}, {"sha": "71f5ccf7e2465330252f0f48a69ee033f109c86e", "filename": "compiler/rustc_mir_transform/src/remove_false_edges.rs", "status": "added", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/bb27b051046712c903670f7401a32e990a950f05/compiler%2Frustc_mir_transform%2Fsrc%2Fremove_false_edges.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bb27b051046712c903670f7401a32e990a950f05/compiler%2Frustc_mir_transform%2Fsrc%2Fremove_false_edges.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir_transform%2Fsrc%2Fremove_false_edges.rs?ref=bb27b051046712c903670f7401a32e990a950f05", "patch": "@@ -0,0 +1,29 @@\n+use rustc_middle::mir::{Body, TerminatorKind};\n+use rustc_middle::ty::TyCtxt;\n+\n+use crate::MirPass;\n+\n+/// Removes `FalseEdge` and `FalseUnwind` terminators from the MIR.\n+///\n+/// These are only needed for borrow checking, and can be removed afterwards.\n+///\n+/// FIXME: This should probably have its own MIR phase.\n+pub struct RemoveFalseEdges;\n+\n+impl<'tcx> MirPass<'tcx> for RemoveFalseEdges {\n+    fn run_pass(&self, _: TyCtxt<'tcx>, body: &mut Body<'tcx>) {\n+        for block in body.basic_blocks_mut() {\n+            let terminator = block.terminator_mut();\n+            terminator.kind = match terminator.kind {\n+                TerminatorKind::FalseEdge { real_target, .. } => {\n+                    TerminatorKind::Goto { target: real_target }\n+                }\n+                TerminatorKind::FalseUnwind { real_target, .. } => {\n+                    TerminatorKind::Goto { target: real_target }\n+                }\n+\n+                _ => continue,\n+            }\n+        }\n+    }\n+}"}, {"sha": "4b261334f3e545d7d4718de15b106861abed1c24", "filename": "compiler/rustc_mir_transform/src/simplify_branches.rs", "status": "modified", "additions": 5, "deletions": 12, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/bb27b051046712c903670f7401a32e990a950f05/compiler%2Frustc_mir_transform%2Fsrc%2Fsimplify_branches.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bb27b051046712c903670f7401a32e990a950f05/compiler%2Frustc_mir_transform%2Fsrc%2Fsimplify_branches.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir_transform%2Fsrc%2Fsimplify_branches.rs?ref=bb27b051046712c903670f7401a32e990a950f05", "patch": "@@ -1,22 +1,21 @@\n-//! A pass that simplifies branches when their condition is known.\n-\n use crate::MirPass;\n use rustc_middle::mir::*;\n use rustc_middle::ty::TyCtxt;\n \n use std::borrow::Cow;\n \n-pub struct SimplifyBranches {\n+/// A pass that replaces a branch with a goto when its condition is known.\n+pub struct SimplifyConstCondition {\n     label: String,\n }\n \n-impl SimplifyBranches {\n+impl SimplifyConstCondition {\n     pub fn new(label: &str) -> Self {\n-        SimplifyBranches { label: format!(\"SimplifyBranches-{}\", label) }\n+        SimplifyConstCondition { label: format!(\"SimplifyConstCondition-{}\", label) }\n     }\n }\n \n-impl<'tcx> MirPass<'tcx> for SimplifyBranches {\n+impl<'tcx> MirPass<'tcx> for SimplifyConstCondition {\n     fn name(&self) -> Cow<'_, str> {\n         Cow::Borrowed(&self.label)\n     }\n@@ -53,12 +52,6 @@ impl<'tcx> MirPass<'tcx> for SimplifyBranches {\n                     Some(v) if v == expected => TerminatorKind::Goto { target },\n                     _ => continue,\n                 },\n-                TerminatorKind::FalseEdge { real_target, .. } => {\n-                    TerminatorKind::Goto { target: real_target }\n-                }\n-                TerminatorKind::FalseUnwind { real_target, .. } => {\n-                    TerminatorKind::Goto { target: real_target }\n-                }\n                 _ => continue,\n             };\n         }"}]}