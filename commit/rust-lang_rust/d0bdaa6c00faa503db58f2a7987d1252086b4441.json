{"sha": "d0bdaa6c00faa503db58f2a7987d1252086b4441", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQwYmRhYTZjMDBmYWE1MDNkYjU4ZjJhNzk4N2QxMjUyMDg2YjQ0NDE=", "commit": {"author": {"name": "Florian Diebold", "email": "flodiebold@gmail.com", "date": "2019-01-07T18:12:19Z"}, "committer": {"name": "Florian Diebold", "email": "flodiebold@gmail.com", "date": "2019-01-12T14:01:27Z"}, "message": "Complete inherent methods", "tree": {"sha": "c304f66a307b6b5e9227f048ac5d5a4adf4f47a1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c304f66a307b6b5e9227f048ac5d5a4adf4f47a1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d0bdaa6c00faa503db58f2a7987d1252086b4441", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d0bdaa6c00faa503db58f2a7987d1252086b4441", "html_url": "https://github.com/rust-lang/rust/commit/d0bdaa6c00faa503db58f2a7987d1252086b4441", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d0bdaa6c00faa503db58f2a7987d1252086b4441/comments", "author": {"login": "flodiebold", "id": 906069, "node_id": "MDQ6VXNlcjkwNjA2OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/906069?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flodiebold", "html_url": "https://github.com/flodiebold", "followers_url": "https://api.github.com/users/flodiebold/followers", "following_url": "https://api.github.com/users/flodiebold/following{/other_user}", "gists_url": "https://api.github.com/users/flodiebold/gists{/gist_id}", "starred_url": "https://api.github.com/users/flodiebold/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flodiebold/subscriptions", "organizations_url": "https://api.github.com/users/flodiebold/orgs", "repos_url": "https://api.github.com/users/flodiebold/repos", "events_url": "https://api.github.com/users/flodiebold/events{/privacy}", "received_events_url": "https://api.github.com/users/flodiebold/received_events", "type": "User", "site_admin": false}, "committer": {"login": "flodiebold", "id": 906069, "node_id": "MDQ6VXNlcjkwNjA2OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/906069?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flodiebold", "html_url": "https://github.com/flodiebold", "followers_url": "https://api.github.com/users/flodiebold/followers", "following_url": "https://api.github.com/users/flodiebold/following{/other_user}", "gists_url": "https://api.github.com/users/flodiebold/gists{/gist_id}", "starred_url": "https://api.github.com/users/flodiebold/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flodiebold/subscriptions", "organizations_url": "https://api.github.com/users/flodiebold/orgs", "repos_url": "https://api.github.com/users/flodiebold/repos", "events_url": "https://api.github.com/users/flodiebold/events{/privacy}", "received_events_url": "https://api.github.com/users/flodiebold/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "082ef52bcb15d779c6aff78d9860d328bf7df9b2", "url": "https://api.github.com/repos/rust-lang/rust/commits/082ef52bcb15d779c6aff78d9860d328bf7df9b2", "html_url": "https://github.com/rust-lang/rust/commit/082ef52bcb15d779c6aff78d9860d328bf7df9b2"}], "stats": {"total": 67, "additions": 63, "deletions": 4}, "files": [{"sha": "9b01eb0aba1f1f05c00466a895067def3399ebc8", "filename": "crates/ra_ide_api/src/completion/complete_dot.rs", "status": "modified", "additions": 56, "deletions": 3, "changes": 59, "blob_url": "https://github.com/rust-lang/rust/blob/d0bdaa6c00faa503db58f2a7987d1252086b4441/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fcomplete_dot.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d0bdaa6c00faa503db58f2a7987d1252086b4441/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fcomplete_dot.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fcomplete_dot.rs?ref=d0bdaa6c00faa503db58f2a7987d1252086b4441", "patch": "@@ -17,8 +17,9 @@ pub(super) fn complete_dot(acc: &mut Completions, ctx: &CompletionContext) -> Ca\n     };\n     let receiver_ty = infer_result[expr].clone();\n     if !ctx.is_call {\n-        complete_fields(acc, ctx, receiver_ty)?;\n+        complete_fields(acc, ctx, receiver_ty.clone())?;\n     }\n+    complete_methods(acc, ctx, receiver_ty)?;\n     Ok(())\n }\n \n@@ -55,6 +56,24 @@ fn complete_fields(acc: &mut Completions, ctx: &CompletionContext, receiver: Ty)\n     Ok(())\n }\n \n+fn complete_methods(\n+    acc: &mut Completions,\n+    ctx: &CompletionContext,\n+    receiver: Ty,\n+) -> Cancelable<()> {\n+    receiver.iterate_methods(ctx.db, |func| {\n+        let sig = func.signature(ctx.db);\n+        if sig.has_self_arg() {\n+            CompletionItem::new(CompletionKind::Reference, sig.name().to_string())\n+                .from_function(ctx, func)\n+                .kind(CompletionItemKind::Method)\n+                .add_to(acc);\n+        }\n+        Ok(None::<()>)\n+    })?;\n+    Ok(())\n+}\n+\n #[cfg(test)]\n mod tests {\n     use crate::completion::*;\n@@ -87,7 +106,8 @@ mod tests {\n                 }\n             }\n             \",\n-            r#\"the_field \"(u32,)\"\"#,\n+            r#\"the_field \"(u32,)\"\n+               foo \"foo($0)\"\"#,\n         );\n     }\n \n@@ -102,7 +122,8 @@ mod tests {\n                 }\n             }\n             \",\n-            r#\"the_field \"(u32, i32)\"\"#,\n+            r#\"the_field \"(u32, i32)\"\n+               foo \"foo($0)\"\"#,\n         );\n     }\n \n@@ -118,4 +139,36 @@ mod tests {\n             r#\"\"#,\n         );\n     }\n+\n+    #[test]\n+    fn test_method_completion() {\n+        check_ref_completion(\n+            r\"\n+            struct A {}\n+            impl A {\n+                fn the_method(&self) {}\n+            }\n+            fn foo(a: A) {\n+               a.<|>\n+            }\n+            \",\n+            r#\"the_method \"the_method($0)\"\"#,\n+        );\n+    }\n+\n+    #[test]\n+    fn test_no_non_self_method() {\n+        check_ref_completion(\n+            r\"\n+            struct A {}\n+            impl A {\n+                fn the_method() {}\n+            }\n+            fn foo(a: A) {\n+               a.<|>\n+            }\n+            \",\n+            r#\"\"#,\n+        );\n+    }\n }"}, {"sha": "9ce7784875f44a2010b726ccfbb272a867188448", "filename": "crates/ra_ide_api/src/completion/completion_item.rs", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/d0bdaa6c00faa503db58f2a7987d1252086b4441/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fcompletion_item.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d0bdaa6c00faa503db58f2a7987d1252086b4441/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fcompletion_item.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fcompletion_item.rs?ref=d0bdaa6c00faa503db58f2a7987d1252086b4441", "patch": "@@ -37,6 +37,7 @@ pub enum CompletionItemKind {\n     Const,\n     Trait,\n     TypeAlias,\n+    Method,\n }\n \n #[derive(Debug, PartialEq, Eq)]\n@@ -183,7 +184,11 @@ impl Builder {\n         self\n     }\n \n-    fn from_function(mut self, ctx: &CompletionContext, function: hir::Function) -> Builder {\n+    pub(super) fn from_function(\n+        mut self,\n+        ctx: &CompletionContext,\n+        function: hir::Function,\n+    ) -> Builder {\n         // If not an import, add parenthesis automatically.\n         if ctx.use_item_syntax.is_none() && !ctx.is_call {\n             if function.signature(ctx.db).args().is_empty() {"}, {"sha": "22b8e9221bf225a4e561d5a51f229ea9747d2c34", "filename": "crates/ra_lsp_server/src/conv.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d0bdaa6c00faa503db58f2a7987d1252086b4441/crates%2Fra_lsp_server%2Fsrc%2Fconv.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d0bdaa6c00faa503db58f2a7987d1252086b4441/crates%2Fra_lsp_server%2Fsrc%2Fconv.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_lsp_server%2Fsrc%2Fconv.rs?ref=d0bdaa6c00faa503db58f2a7987d1252086b4441", "patch": "@@ -69,6 +69,7 @@ impl Conv for CompletionItemKind {\n             CompletionItemKind::TypeAlias => Struct,\n             CompletionItemKind::Const => Constant,\n             CompletionItemKind::Static => Value,\n+            CompletionItemKind::Method => Method,\n         }\n     }\n }"}]}