{"sha": "afea84f99c8c9a7bb7c7afb22bc1d5aceceb1a8d", "node_id": "C_kwDOAAsO6NoAKGFmZWE4NGY5OWM4YzlhN2JiN2M3YWZiMjJiYzFkNWFjZWNlYjFhOGQ", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2023-04-18T04:44:45Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2023-04-18T04:44:45Z"}, "message": "Rollup merge of #110348 - GuillaumeGomez:disambiguators-suffixes-rustdoc-book, r=Manishearth\n\nAdd list of supported disambiguators and suffixes for intra-doc links in the rustdoc book\n\nThis information is otherwise only provided in case an error occurs, which isn't great.\n\nr? ```@notriddle```", "tree": {"sha": "3e2bc004b21ac36c5cb8b2775c7a22c80d3ac4bb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3e2bc004b21ac36c5cb8b2775c7a22c80d3ac4bb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/afea84f99c8c9a7bb7c7afb22bc1d5aceceb1a8d", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJkPiA9CRBK7hj4Ov3rIwAANEUIAHA5FIDbfr19Ue5juckEiP6m\nY4H0+kK4/ySguQpTRt6D8qlm5h19j90REY0YhkIkVPBnmiwx9LslkbKJ+AysfQzG\nWQCiVABk4SuvSjICnolBEYHeFwLvyeu/E5Sa9iuRAUFRn00Fq8PZLHwjDL1A7kbN\nTVkn0sUQAw8ucsQeQW1yQxJOf4hX5/jLpflj/C3WjXr+PP9nJ2jjjPUCOKRnB/NC\ndHrVfLocdFK/uHD3gBUIEjvEN9ts87sCbd7ptDCYRN/pcsvLYyM5ldm6WjyCUcRk\nTufk1mXBlCMUjCLeTDFd3j2kiLQUZ5rJh2gM62QAwS33AqivL4GbQFo9hiPa6QQ=\n=SdOf\n-----END PGP SIGNATURE-----\n", "payload": "tree 3e2bc004b21ac36c5cb8b2775c7a22c80d3ac4bb\nparent 06d403d67076dabd263ff038979f791b07853a3f\nparent 1531c95c5d3f4e9ef4cfc122c35947e7b9cca53e\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1681793085 +0200\ncommitter GitHub <noreply@github.com> 1681793085 +0200\n\nRollup merge of #110348 - GuillaumeGomez:disambiguators-suffixes-rustdoc-book, r=Manishearth\n\nAdd list of supported disambiguators and suffixes for intra-doc links in the rustdoc book\n\nThis information is otherwise only provided in case an error occurs, which isn't great.\n\nr? ```@notriddle```\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/afea84f99c8c9a7bb7c7afb22bc1d5aceceb1a8d", "html_url": "https://github.com/rust-lang/rust/commit/afea84f99c8c9a7bb7c7afb22bc1d5aceceb1a8d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/afea84f99c8c9a7bb7c7afb22bc1d5aceceb1a8d/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "06d403d67076dabd263ff038979f791b07853a3f", "url": "https://api.github.com/repos/rust-lang/rust/commits/06d403d67076dabd263ff038979f791b07853a3f", "html_url": "https://github.com/rust-lang/rust/commit/06d403d67076dabd263ff038979f791b07853a3f"}, {"sha": "1531c95c5d3f4e9ef4cfc122c35947e7b9cca53e", "url": "https://api.github.com/repos/rust-lang/rust/commits/1531c95c5d3f4e9ef4cfc122c35947e7b9cca53e", "html_url": "https://github.com/rust-lang/rust/commit/1531c95c5d3f4e9ef4cfc122c35947e7b9cca53e"}], "stats": {"total": 11, "additions": 8, "deletions": 3}, "files": [{"sha": "72157b5cd9bcee76bca3166d05d3d483d067fc07", "filename": "src/doc/rustdoc/src/write-documentation/linking-to-items-by-name.md", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/afea84f99c8c9a7bb7c7afb22bc1d5aceceb1a8d/src%2Fdoc%2Frustdoc%2Fsrc%2Fwrite-documentation%2Flinking-to-items-by-name.md", "raw_url": "https://github.com/rust-lang/rust/raw/afea84f99c8c9a7bb7c7afb22bc1d5aceceb1a8d/src%2Fdoc%2Frustdoc%2Fsrc%2Fwrite-documentation%2Flinking-to-items-by-name.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Frustdoc%2Fsrc%2Fwrite-documentation%2Flinking-to-items-by-name.md?ref=afea84f99c8c9a7bb7c7afb22bc1d5aceceb1a8d", "patch": "@@ -88,13 +88,16 @@ fn Foo() {}\n ```\n \n These prefixes will be stripped when displayed in the documentation, so `[struct@Foo]` will be\n-rendered as `Foo`.\n+rendered as `Foo`. The following prefixes are available: `struct`, `enum`, `trait`, `union`,\n+`mod`, `module`, `const`, `constant`, `fn`, `function`, `method`, `derive`, `type`, `value`,\n+`macro`, `prim` or `primitive`.\n \n You can also disambiguate for functions by adding `()` after the function name,\n-or for macros by adding `!` after the macro name:\n+or for macros by adding `!` after the macro name. The macro `!` can be followed by `()`, `{}`,\n+or `[]`. Example:\n \n ```rust\n-/// This is different from [`foo!`]\n+/// This is different from [`foo!()`].\n fn foo() {}\n \n /// This is different from [`foo()`]"}, {"sha": "33e80df9ed77bb2b4ef4ceadec740892fa7627a8", "filename": "src/librustdoc/passes/collect_intra_doc_links.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/afea84f99c8c9a7bb7c7afb22bc1d5aceceb1a8d/src%2Flibrustdoc%2Fpasses%2Fcollect_intra_doc_links.rs", "raw_url": "https://github.com/rust-lang/rust/raw/afea84f99c8c9a7bb7c7afb22bc1d5aceceb1a8d/src%2Flibrustdoc%2Fpasses%2Fcollect_intra_doc_links.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fpasses%2Fcollect_intra_doc_links.rs?ref=afea84f99c8c9a7bb7c7afb22bc1d5aceceb1a8d", "patch": "@@ -1419,6 +1419,7 @@ impl Disambiguator {\n         if let Some(idx) = link.find('@') {\n             let (prefix, rest) = link.split_at(idx);\n             let d = match prefix {\n+                // If you update this list, please also update the relevant rustdoc book section!\n                 \"struct\" => Kind(DefKind::Struct),\n                 \"enum\" => Kind(DefKind::Enum),\n                 \"trait\" => Kind(DefKind::Trait),\n@@ -1437,6 +1438,7 @@ impl Disambiguator {\n             Ok(Some((d, &rest[1..], &rest[1..])))\n         } else {\n             let suffixes = [\n+                // If you update this list, please also update the relevant rustdoc book section!\n                 (\"!()\", DefKind::Macro(MacroKind::Bang)),\n                 (\"!{}\", DefKind::Macro(MacroKind::Bang)),\n                 (\"![]\", DefKind::Macro(MacroKind::Bang)),"}]}