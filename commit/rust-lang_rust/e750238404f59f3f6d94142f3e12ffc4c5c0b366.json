{"sha": "e750238404f59f3f6d94142f3e12ffc4c5c0b366", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU3NTAyMzg0MDRmNTlmM2Y2ZDk0MTQyZjNlMTJmZmM0YzVjMGIzNjY=", "commit": {"author": {"name": "Ethan Brierley", "email": "ethanboxx@gmail.com", "date": "2020-10-26T18:16:25Z"}, "committer": {"name": "Ethan Brierley", "email": "ethanboxx@gmail.com", "date": "2020-10-26T18:16:25Z"}, "message": "Fix typo", "tree": {"sha": "902be8be256dd9ffa1973e9d2fbea75f7f64a993", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/902be8be256dd9ffa1973e9d2fbea75f7f64a993"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e750238404f59f3f6d94142f3e12ffc4c5c0b366", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e750238404f59f3f6d94142f3e12ffc4c5c0b366", "html_url": "https://github.com/rust-lang/rust/commit/e750238404f59f3f6d94142f3e12ffc4c5c0b366", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e750238404f59f3f6d94142f3e12ffc4c5c0b366/comments", "author": {"login": "eopb", "id": 8074468, "node_id": "MDQ6VXNlcjgwNzQ0Njg=", "avatar_url": "https://avatars.githubusercontent.com/u/8074468?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eopb", "html_url": "https://github.com/eopb", "followers_url": "https://api.github.com/users/eopb/followers", "following_url": "https://api.github.com/users/eopb/following{/other_user}", "gists_url": "https://api.github.com/users/eopb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eopb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eopb/subscriptions", "organizations_url": "https://api.github.com/users/eopb/orgs", "repos_url": "https://api.github.com/users/eopb/repos", "events_url": "https://api.github.com/users/eopb/events{/privacy}", "received_events_url": "https://api.github.com/users/eopb/received_events", "type": "User", "site_admin": false}, "committer": {"login": "eopb", "id": 8074468, "node_id": "MDQ6VXNlcjgwNzQ0Njg=", "avatar_url": "https://avatars.githubusercontent.com/u/8074468?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eopb", "html_url": "https://github.com/eopb", "followers_url": "https://api.github.com/users/eopb/followers", "following_url": "https://api.github.com/users/eopb/following{/other_user}", "gists_url": "https://api.github.com/users/eopb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eopb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eopb/subscriptions", "organizations_url": "https://api.github.com/users/eopb/orgs", "repos_url": "https://api.github.com/users/eopb/repos", "events_url": "https://api.github.com/users/eopb/events{/privacy}", "received_events_url": "https://api.github.com/users/eopb/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ad2d93da1f051970555a8be0baa8e6277b3a06c1", "url": "https://api.github.com/repos/rust-lang/rust/commits/ad2d93da1f051970555a8be0baa8e6277b3a06c1", "html_url": "https://github.com/rust-lang/rust/commit/ad2d93da1f051970555a8be0baa8e6277b3a06c1"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "41342764ba773b299db01e39e2786280c6fef1b1", "filename": "compiler/rustc_middle/src/middle/limits.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e750238404f59f3f6d94142f3e12ffc4c5c0b366/compiler%2Frustc_middle%2Fsrc%2Fmiddle%2Flimits.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e750238404f59f3f6d94142f3e12ffc4c5c0b366/compiler%2Frustc_middle%2Fsrc%2Fmiddle%2Flimits.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fmiddle%2Flimits.rs?ref=e750238404f59f3f6d94142f3e12ffc4c5c0b366", "patch": "@@ -52,7 +52,7 @@ fn update_limit(\n                         IntErrorKind::Empty => \"`limit` must be a non-negative integer\",\n                         IntErrorKind::InvalidDigit => \"not a valid integer\",\n                         IntErrorKind::NegOverflow => {\n-                            bug!(\"`limit` should never negatively underflow\")\n+                            bug!(\"`limit` should never negatively overflow\")\n                         }\n                         IntErrorKind::Zero => bug!(\"zero is a valid `limit`\"),\n                         kind => bug!(\"unimplemented IntErrorKind variant: {:?}\", kind),"}]}