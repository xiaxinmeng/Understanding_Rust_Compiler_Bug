{"sha": "3ef610b627fc64bfdef0a07ddfd06839a473e65d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNlZjYxMGI2MjdmYzY0YmZkZWYwYTA3ZGRmZDA2ODM5YTQ3M2U2NWQ=", "commit": {"author": {"name": "Huon Wilson", "email": "dbau.pp+github@gmail.com", "date": "2015-08-28T23:49:01Z"}, "committer": {"name": "Huon Wilson", "email": "dbau.pp+github@gmail.com", "date": "2015-08-29T22:36:16Z"}, "message": "Autogenerate most AArch64 platform intrinsics.", "tree": {"sha": "b2fd24c703220fc244cdaf2a472cc99acdaf74e3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b2fd24c703220fc244cdaf2a472cc99acdaf74e3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3ef610b627fc64bfdef0a07ddfd06839a473e65d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3ef610b627fc64bfdef0a07ddfd06839a473e65d", "html_url": "https://github.com/rust-lang/rust/commit/3ef610b627fc64bfdef0a07ddfd06839a473e65d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3ef610b627fc64bfdef0a07ddfd06839a473e65d/comments", "author": {"login": "huonw", "id": 1203825, "node_id": "MDQ6VXNlcjEyMDM4MjU=", "avatar_url": "https://avatars.githubusercontent.com/u/1203825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/huonw", "html_url": "https://github.com/huonw", "followers_url": "https://api.github.com/users/huonw/followers", "following_url": "https://api.github.com/users/huonw/following{/other_user}", "gists_url": "https://api.github.com/users/huonw/gists{/gist_id}", "starred_url": "https://api.github.com/users/huonw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/huonw/subscriptions", "organizations_url": "https://api.github.com/users/huonw/orgs", "repos_url": "https://api.github.com/users/huonw/repos", "events_url": "https://api.github.com/users/huonw/events{/privacy}", "received_events_url": "https://api.github.com/users/huonw/received_events", "type": "User", "site_admin": false}, "committer": {"login": "huonw", "id": 1203825, "node_id": "MDQ6VXNlcjEyMDM4MjU=", "avatar_url": "https://avatars.githubusercontent.com/u/1203825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/huonw", "html_url": "https://github.com/huonw", "followers_url": "https://api.github.com/users/huonw/followers", "following_url": "https://api.github.com/users/huonw/following{/other_user}", "gists_url": "https://api.github.com/users/huonw/gists{/gist_id}", "starred_url": "https://api.github.com/users/huonw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/huonw/subscriptions", "organizations_url": "https://api.github.com/users/huonw/orgs", "repos_url": "https://api.github.com/users/huonw/repos", "events_url": "https://api.github.com/users/huonw/events{/privacy}", "received_events_url": "https://api.github.com/users/huonw/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "73811917f463d6cf52f04cd226507fdab891d8b9", "url": "https://api.github.com/repos/rust-lang/rust/commits/73811917f463d6cf52f04cd226507fdab891d8b9", "html_url": "https://github.com/rust-lang/rust/commit/73811917f463d6cf52f04cd226507fdab891d8b9"}], "stats": {"total": 3385, "additions": 3347, "deletions": 38}, "files": [{"sha": "83340e3d6f97a85c6d20a357615bfb813b2d779a", "filename": "src/etc/platform-intrinsics/aarch64.json", "status": "added", "additions": 550, "deletions": 0, "changes": 550, "blob_url": "https://github.com/rust-lang/rust/blob/3ef610b627fc64bfdef0a07ddfd06839a473e65d/src%2Fetc%2Fplatform-intrinsics%2Faarch64.json", "raw_url": "https://github.com/rust-lang/rust/raw/3ef610b627fc64bfdef0a07ddfd06839a473e65d/src%2Fetc%2Fplatform-intrinsics%2Faarch64.json", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fetc%2Fplatform-intrinsics%2Faarch64.json?ref=3ef610b627fc64bfdef0a07ddfd06839a473e65d", "patch": "@@ -0,0 +1,550 @@\n+{\n+    \"platform\": \"aarch64\",\n+    \"intrinsic_prefix\": \"aarch64_v\",\n+    \"llvm_prefix\": \"llvm.aarch64.neon.\",\n+    \"number_info\": {\n+        \"signed\": {\n+            \"kind\": \"s\",\n+            \"data_type\": { \"pattern\": \"s{bitwidth}\" }\n+        },\n+        \"unsigned\": {\n+            \"kind\": \"u\",\n+            \"data_type\": { \"pattern\": \"u{bitwidth}\" }\n+        },\n+        \"float\": {\n+            \"kind\": \"f\",\n+            \"data_type\": { \"pattern\": \"f{bitwidth}\" }\n+        }\n+    },\n+    \"widths\": {\n+        \"64\": \"\",\n+        \"128\": \"q\"\n+    },\n+    \"intrinsics\": [\n+        {\n+            \"intrinsic\": \"hadd{0.width}_{0.data_type}\",\n+            \"width\": [64, 128],\n+            \"llvm\": \"{0.kind}hadd.{0.llvm_name}\",\n+            \"ret\": \"i(8-32)\",\n+            \"args\": [\"0\", \"0\"]\n+        },\n+        {\n+            \"intrinsic\": \"rhadd{0.width}_{0.data_type}\",\n+            \"width\": [64, 128],\n+            \"llvm\": \"{0.kind}rhadd.{0.llvm_name}\",\n+            \"ret\": \"i(8-32)\",\n+            \"args\": [\"0\", \"0\"]\n+        },\n+        {\n+            \"intrinsic\": \"qadd{0.width}_{0.data_type}\",\n+            \"width\": [64, 128],\n+            \"llvm\": \"{0.kind}qadd.{0.llvm_name}\",\n+            \"ret\": \"i(8-64)\",\n+            \"args\": [\"0\", \"0\"]\n+        },\n+        {\n+            \"intrinsic\": \"uqadd_{0.data_type}\",\n+            \"width\": [128],\n+            \"llvm\": \"suqadd.{0.llvm_name}\",\n+            \"ret\": \"s(8-64)\",\n+            \"args\": [\"0\", \"0u\"]\n+        },\n+        {\n+            \"intrinsic\": \"sqadd_{0.data_type}\",\n+            \"width\": [128],\n+            \"llvm\": \"usqadd.{0.llvm_name}\",\n+            \"ret\": \"u(8-64)\",\n+            \"args\": [\"0\", \"0s\"]\n+        },\n+        {\n+            \"intrinsic\": \"raddhn_{1.data_type}\",\n+            \"width\": [64],\n+            \"llvm\": \"raddhn.{0.llvm_name}\",\n+            \"ret\": \"i(8-32)\",\n+            \"args\": [\"0w\", \"0w\"]\n+        },\n+        {\n+            \"intrinsic\": \"fmulx{0.width}_{0.data_type}\",\n+            \"width\": [64, 128],\n+            \"llvm\": \"fmulx.{0.llvm_name}\",\n+            \"ret\": \"f(32-64)\",\n+            \"args\": [\"0\", \"0\"]\n+        },\n+        {\n+            \"intrinsic\": \"fma{0.width}_{0.data_type}\",\n+            \"width\": [64, 128],\n+            \"llvm\": \"!llvm.fma.{0.llvm_name}\",\n+            \"ret\": \"f(32-64)\",\n+            \"args\": [\"0\", \"0\"]\n+        },\n+        {\n+            \"intrinsic\": \"qdmulh{0.width}_{0.data_type}\",\n+            \"width\": [64, 128],\n+            \"llvm\": \"sqdmulh.{0.llvm_name}\",\n+            \"ret\": \"s(16-32)\",\n+            \"args\": [\"0\", \"0\"]\n+        },\n+        {\n+            \"intrinsic\": \"qrdmulh{0.width}_{0.data_type}\",\n+            \"width\": [64, 128],\n+            \"llvm\": \"sqrdmulh.{0.llvm_name}\",\n+            \"ret\": \"s(16-32)\",\n+            \"args\": [\"0\", \"0\"]\n+        },\n+        {\n+            \"intrinsic\": \"mull_{1.data_type}\",\n+            \"width\": [128],\n+            \"llvm\": \"{0.kind}mull.{0.llvm_name}\",\n+            \"ret\": \"i(16-64)\",\n+            \"args\": [\"0n\", \"0n\"]\n+        },\n+        {\n+            \"intrinsic\": \"qdmull{0.width}_{1.data_type}\",\n+            \"width\": [128],\n+            \"llvm\": \"sqdmull.{0.llvm_name}\",\n+            \"ret\": \"s(16-32)\",\n+            \"args\": [\"0n\", \"0n\"]\n+        },\n+        {\n+            \"intrinsic\": \"hsub{0.width}_{1.data_type}\",\n+            \"width\": [64, 128],\n+            \"llvm\": \"{0.kind}hsub.{0.llvm_name}\",\n+            \"ret\": \"i(8-32)\",\n+            \"args\": [\"0\", \"0\"]\n+        },\n+        {\n+            \"intrinsic\": \"qsub{0.width}_{1.data_type}\",\n+            \"width\": [64, 128],\n+            \"llvm\": \"{0.kind}qsub.{0.llvm_name}\",\n+            \"ret\": \"i(8-64)\",\n+            \"args\": [\"0\", \"0\"]\n+        },\n+        {\n+            \"intrinsic\": \"rsubhn_{1.data_type}\",\n+            \"width\": [64],\n+            \"llvm\": \"rsubhn.{0.llvm_name}\",\n+            \"ret\": \"i(8-32)\",\n+            \"args\": [\"0w\", \"0w\"]\n+        },\n+        {\n+            \"intrinsic\": \"abd{0.width}_{1.data_type}\",\n+            \"width\": [64, 128],\n+            \"llvm\": \"{0.kind}abd.{0.llvm_name}\",\n+            \"ret\": [\"i(8-32)\",\"f(32-64)\"],\n+            \"args\": [\"0\", \"0\"]\n+        },\n+        {\n+            \"intrinsic\": \"max{0.width}_{0.data_type}\",\n+            \"width\": [64, 128],\n+            \"llvm\": \"{0.kind}max.{0.llvm_name}\",\n+            \"ret\": [\"i(8-32)\",\"f(32-64)\"],\n+            \"args\": [\"0\", \"0\"]\n+        },\n+        {\n+            \"intrinsic\": \"min{0.width}_{0.data_type}\",\n+            \"width\": [64, 128],\n+            \"llvm\": \"{0.kind}min.{0.llvm_name}\",\n+            \"ret\": [\"i(8-32)\",\"f(32-64)\"],\n+            \"args\": [\"0\", \"0\"]\n+        },\n+        {\n+            \"intrinsic\": \"maxnm{0.width}_{0.data_type}\",\n+            \"width\": [64, 128],\n+            \"llvm\": \"{0.kind}maxnm.{0.llvm_name}\",\n+            \"ret\": \"f(32-64)\",\n+            \"args\": [\"0\", \"0\"]\n+        },\n+        {\n+            \"intrinsic\": \"minnm{0.width}_{0.data_type}\",\n+            \"width\": [64, 128],\n+            \"llvm\": \"{0.kind}minnm.{0.llvm_name}\",\n+            \"ret\": \"f(32-64)\",\n+            \"args\": [\"0\", \"0\"]\n+        },\n+        {\n+            \"intrinsic\": \"shl{0.width}_{0.data_type}\",\n+            \"width\": [64, 128],\n+            \"llvm\": \"{0.kind}shl.{0.llvm_name}\",\n+            \"ret\": \"i(8-64)\",\n+            \"args\": [\"0\", \"0s\"]\n+        },\n+        {\n+            \"intrinsic\": \"qshl{0.width}_{0.data_type}\",\n+            \"width\": [64, 128],\n+            \"llvm\": \"{0.kind}qshl.{0.llvm_name}\",\n+            \"ret\": \"i(8-64)\",\n+            \"args\": [\"0\", \"0s\"]\n+        },\n+        {\n+            \"intrinsic\": \"rshl{0.width}_{0.data_type}\",\n+            \"width\": [64, 128],\n+            \"llvm\": \"{0.kind}rshl.{0.llvm_name}\",\n+            \"ret\": \"i(8-64)\",\n+            \"args\": [\"0\", \"0s\"]\n+        },\n+        {\n+            \"intrinsic\": \"qrshl{0.width}_{0.data_type}\",\n+            \"width\": [64, 128],\n+            \"llvm\": \"{0.kind}qrshl.{0.llvm_name}\",\n+            \"ret\": \"i(8-64)\",\n+            \"args\": [\"0\", \"0s\"]\n+        },\n+        {\n+            \"intrinsic\": \"qshrun_n_{1.data_type}\",\n+            \"width\": [64],\n+            \"llvm\": \"sqshrun.{0.llvm_name}\",\n+            \"ret\": \"s(8-32)\",\n+            \"args\": [\"0w\", \"U32\"]\n+        },\n+        {\n+            \"intrinsic\": \"qrshrun_n_{1.data_type}\",\n+            \"width\": [64],\n+            \"llvm\": \"sqrshrun.{0.llvm_name}\",\n+            \"ret\": \"s(8-32)\",\n+            \"args\": [\"0w\", \"U32\"]\n+        },\n+        {\n+            \"intrinsic\": \"qshrn_n_{1.data_type}\",\n+            \"width\": [64],\n+            \"llvm\": \"{0.kind}qshrn.{0.llvm_name}\",\n+            \"ret\": \"i(8-32)\",\n+            \"args\": [\"0w\", \"U32\"]\n+        },\n+        {\n+            \"intrinsic\": \"rshrn_n_{1.data_type}\",\n+            \"width\": [64],\n+            \"llvm\": \"rshrn.{0.llvm_name}\",\n+            \"ret\": \"i(8-32)\",\n+            \"args\": [\"0w\", \"U32\"]\n+        },\n+        {\n+            \"intrinsic\": \"qrshrn_n_{1.data_type}\",\n+            \"width\": [64],\n+            \"llvm\": \"{0.kind}qrshrn.{0.llvm_name}\",\n+            \"ret\": \"i(8-32)\",\n+            \"args\": [\"0w\", \"U32\"]\n+        },\n+        {\n+            \"intrinsic\": \"sri{0.width}_{0.data_type}\",\n+            \"width\": [64, 128],\n+            \"llvm\": \"vsri.{0.llvm_name}\",\n+            \"ret\": \"i(8-64)\",\n+            \"args\": [\"0\", \"0\"]\n+        },\n+        {\n+            \"intrinsic\": \"sli{0.width}_{0.data_type}\",\n+            \"width\": [64, 128],\n+            \"llvm\": \"vsli.{0.llvm_name}\",\n+            \"ret\": \"i(8-64)\",\n+            \"args\": [\"0\", \"0\"]\n+        },\n+        {\n+            \"intrinsic\": \"vqmovn_{1.data_type}\",\n+            \"width\": [64],\n+            \"llvm\": \"{0.kind}qxtn.{0.llvm_name}\",\n+            \"ret\": \"i(8-32)\",\n+            \"args\": [\"0w\"]\n+        },\n+        {\n+            \"intrinsic\": \"abs{0.width}_{0.data_type}\",\n+            \"width\": [64,128],\n+            \"llvm\": \"abs.{0.llvm_name}\",\n+            \"ret\": \"s(8-64)\",\n+            \"args\": [\"0\"]\n+        },\n+        {\n+            \"intrinsic\": \"abs{0.width}_{0.data_type}\",\n+            \"width\": [64, 128],\n+            \"llvm\": \"!llvm.fabs.{0.llvm_name}\",\n+            \"ret\": \"f(32-64)\",\n+            \"args\": [\"0\"]\n+        },\n+        {\n+            \"intrinsic\": \"qabs{0.width}_{0.data_type}\",\n+            \"width\": [64,128],\n+            \"llvm\": \"sqabs.{0.llvm_name}\",\n+            \"ret\": \"s(8-64)\",\n+            \"args\": [\"0\"]\n+        },\n+        {\n+            \"intrinsic\": \"qneg{0.width}_{0.data_type}\",\n+            \"width\": [64, 128],\n+            \"llvm\": \"sqneg.{0.llvm_name}\",\n+            \"ret\": \"s(8-64)\",\n+            \"args\": [\"0\"]\n+        },\n+        {\n+            \"intrinsic\": \"clz{0.width}_{0.data_type}\",\n+            \"width\": [64, 128],\n+            \"llvm\": \"!llvm.ctlz.{0.llvm_name}\",\n+            \"ret\": \"i(8-32)\",\n+            \"args\": [\"0\"]\n+        },\n+        {\n+            \"intrinsic\": \"cls{0.width}_{0.data_type}\",\n+            \"width\": [64, 128],\n+            \"llvm\": \"cls.{0.llvm_name}\",\n+            \"ret\": \"i(8-32)\",\n+            \"args\": [\"0\"]\n+        },\n+        {\n+            \"intrinsic\": \"cnt{0.width}_{0.data_type}\",\n+            \"width\": [64, 128],\n+            \"llvm\": \"!llvm.ctpop.{0.llvm_name}\",\n+            \"ret\": \"i8\",\n+            \"args\": [\"0\"]\n+        },\n+        {\n+            \"intrinsic\": \"recpe{0.width}_{0.data_type}\",\n+            \"width\": [64, 128],\n+            \"llvm\": \"{0.kind}recpe.{0.llvm_name}\",\n+            \"ret\": [\"u32\",\"f(32-64)\"],\n+            \"args\": [\"0\"]\n+        },\n+        {\n+            \"intrinsic\": \"recps{0.width}_{0.data_type}\",\n+            \"width\": [64,128],\n+            \"llvm\": \"frecps.{0.llvm_name}\",\n+            \"ret\": \"f(32-64)\",\n+            \"args\": [\"0\", \"0\"]\n+        },\n+        {\n+            \"intrinsic\": \"sqrt{0.width}_{0.data_type}\",\n+            \"width\": [64, 128],\n+            \"llvm\": \"!llvm.sqrt.{0.llvm_name}\",\n+            \"ret\": \"f(32-64)\",\n+            \"args\": [\"0\"]\n+        },\n+        {\n+            \"intrinsic\": \"rsqrte{0.width}_{0.data_type}\",\n+            \"width\": [64, 128],\n+            \"llvm\": \"{0.kind}rsqrte.{0.llvm_name}\",\n+            \"ret\": [\"u32\",\"f(32-64)\"],\n+            \"args\": [\"0\"]\n+        },\n+        {\n+            \"intrinsic\": \"rsqrts{0.width}_{0.data_type}\",\n+            \"width\": [64,128],\n+            \"llvm\": \"frsqrts.{0.llvm_name}\",\n+            \"ret\": \"f(32-64)\",\n+            \"args\": [\"0\", \"0\"]\n+        },\n+        {\n+            \"intrinsic\": \"rbit{0.width}_{0.data_type}\",\n+            \"width\": [64, 128],\n+            \"llvm\": \"rbit.{0.llvm_name}\",\n+            \"ret\": \"i8\",\n+            \"args\": [\"0\"]\n+        },\n+        {\n+            \"intrinsic\": \"padd{0.width}_{0.data_type}\",\n+            \"width\": [64, 128],\n+            \"llvm\": \"addp.{0.llvm_name}\",\n+            \"ret\": [\"i(8-32)\",\"f32\"],\n+            \"args\": [\"0\", \"0\"]\n+        },\n+        {\n+            \"intrinsic\": \"padd{0.width}_{0.data_type}\",\n+            \"width\": [128],\n+            \"llvm\": \"addp.{0.llvm_name}\",\n+            \"ret\": [\"i64\",\"f64\"],\n+            \"args\": [\"0\", \"0\"]\n+        },\n+        {\n+            \"intrinsic\": \"paddl{0.width}_{0.data_type}\",\n+            \"width\": [64, 128],\n+            \"llvm\": \"{0.kind}addlp.{0.llvm_name}.{1.llvm_name}\",\n+            \"ret\": \"i(16-64)\",\n+            \"args\": [\"0dn\"]\n+        },\n+        {\n+            \"intrinsic\": \"pmax{0.width}_{0.data_type}\",\n+            \"width\": [64, 128],\n+            \"llvm\": \"{0.kind}maxp.{0.llvm_name}\",\n+            \"ret\": [\"i(8-32)\",\"f32\"],\n+            \"args\": [\"0\", \"0\"]\n+        },\n+        {\n+            \"intrinsic\": \"pmax{0.width}_{0.data_type}\",\n+            \"width\": [128],\n+            \"llvm\": \"{0.kind}maxp.{0.llvm_name}\",\n+            \"ret\": [\"i64\",\"f64\"],\n+            \"args\": [\"0\", \"0\"]\n+        },\n+        {\n+            \"intrinsic\": \"pmin{0.width}_{0.data_type}\",\n+            \"width\": [64, 128],\n+            \"llvm\": \"{0.kind}minp.{0.llvm_name}\",\n+            \"ret\": [\"i(8-32)\",\"f32\"],\n+            \"args\": [\"0\", \"0\"]\n+        },\n+        {\n+            \"intrinsic\": \"pmin{0.width}_{0.data_type}\",\n+            \"width\": [128],\n+            \"llvm\": \"{0.kind}minp.{0.llvm_name}\",\n+            \"ret\": [\"i64\",\"f64\"],\n+            \"args\": [\"0\", \"0\"]\n+        },\n+        {\n+            \"intrinsic\": \"pmaxnm{0.width}_{0.data_type}\",\n+            \"width\": [64, 128],\n+            \"llvm\": \"{0.kind}maxnmp.{0.llvm_name}\",\n+            \"ret\": [\"i(8-32)\",\"f32\"],\n+            \"args\": [\"0\", \"0\"]\n+        },\n+        {\n+            \"intrinsic\": \"pmaxnm{0.width}_{0.data_type}\",\n+            \"width\": [128],\n+            \"llvm\": \"{0.kind}maxnmp.{0.llvm_name}\",\n+            \"ret\": [\"i64\",\"f64\"],\n+            \"args\": [\"0\", \"0\"]\n+        },\n+        {\n+            \"intrinsic\": \"pminnm{0.width}_{0.data_type}\",\n+            \"width\": [64, 128],\n+            \"llvm\": \"{0.kind}minnmp.{0.llvm_name}\",\n+            \"ret\": \"f32\",\n+            \"args\": [\"0\", \"0\"]\n+        },\n+        {\n+            \"intrinsic\": \"pminnm{0.width}_{0.data_type}\",\n+            \"width\": [128],\n+            \"llvm\": \"{0.kind}minnmp.{0.llvm_name}\",\n+            \"ret\": \"f64\",\n+            \"args\": [\"0\", \"0\"]\n+        },\n+        {\n+            \"intrinsic\": \"addv{1.width}_{0.data_type}\",\n+            \"width\": [64, 128],\n+            \"llvm\": \"{0.kind}addv.{0.llvm_name}.{1.llvm_name}\",\n+            \"ret\": [\"I(8-32)\",\"F32\"],\n+            \"args\": [\"0v\"]\n+        },\n+        {\n+            \"intrinsic\": \"addv{1.width}_{0.data_type}\",\n+            \"width\": [128],\n+            \"llvm\": \"{0.kind}addv.{0.llvm_name}.{1.llvm_name}\",\n+            \"ret\": [\"I64\",\"F64\"],\n+            \"args\": [\"0v\"]\n+        },\n+        {\n+            \"intrinsic\": \"addlv{1.width}_{1.data_type}\",\n+            \"width\": [64, 128],\n+            \"llvm\": \"{0.kind}addlv.{0.llvm_name}.{1.llvm_name}\",\n+            \"ret\": \"I(16-64)\",\n+            \"args\": [\"0vdn\"]\n+        },\n+        {\n+            \"intrinsic\": \"maxv{1.width}_{0.data_type}\",\n+            \"width\": [64, 128],\n+            \"llvm\": \"{0.kind}maxv.{0.llvm_name}.{1.llvm_name}\",\n+            \"ret\": [\"I(8-32)\",\"F32\"],\n+            \"args\": [\"0v\"]\n+        },\n+        {\n+            \"intrinsic\": \"maxv{1.width}_{0.data_type}\",\n+            \"width\": [128],\n+            \"llvm\": \"{0.kind}maxv.{0.llvm_name}.{1.llvm_name}\",\n+            \"ret\": \"F64\",\n+            \"args\": [\"0v\"]\n+        },\n+        {\n+            \"intrinsic\": \"minv{1.width}_{0.data_type}\",\n+            \"width\": [64, 128],\n+            \"llvm\": \"{0.kind}minv.{0.llvm_name}.{1.llvm_name}\",\n+            \"ret\": [\"I(8-32)\",\"F32\"],\n+            \"args\": [\"0v\"]\n+        },\n+        {\n+            \"intrinsic\": \"minv{1.width}_{0.data_type}\",\n+            \"width\": [128],\n+            \"llvm\": \"{0.kind}minv.{0.llvm_name}.{1.llvm_name}\",\n+            \"ret\": \"F64\",\n+            \"args\": [\"0v\"]\n+        },\n+        {\n+            \"intrinsic\": \"maxnmv{1.width}_{0.data_type}\",\n+            \"width\": [64, 128],\n+            \"llvm\": \"{0.kind}maxnmv.{0.llvm_name}.{1.llvm_name}\",\n+            \"ret\": \"F32\",\n+            \"args\": [\"0v\"]\n+        },\n+        {\n+            \"intrinsic\": \"maxnmv{1.width}_{0.data_type}\",\n+            \"width\": [128],\n+            \"llvm\": \"{0.kind}maxnmv.{0.llvm_name}.{1.llvm_name}\",\n+            \"ret\": \"F64\",\n+            \"args\": [\"0v\"]\n+        },\n+        {\n+            \"intrinsic\": \"minnmv{1.width}_{0.data_type}\",\n+            \"width\": [64, 128],\n+            \"llvm\": \"{0.kind}minnmv.{0.llvm_name}.{1.llvm_name}\",\n+            \"ret\": \"F32\",\n+            \"args\": [\"0v\"]\n+        },\n+        {\n+            \"intrinsic\": \"minnmv{1.width}_{0.data_type}\",\n+            \"width\": [128],\n+            \"llvm\": \"{0.kind}minnmv.{0.llvm_name}.{1.llvm_name}\",\n+            \"ret\": \"F64\",\n+            \"args\": [\"0v\"]\n+        },\n+        {\n+            \"intrinsic\": \"qtbl1{0.width}_{0.data_type}\",\n+            \"width\": [64, 128],\n+            \"llvm\": \"tbl1.{0.llvm_name}\",\n+            \"ret\": \"i8\",\n+            \"args\": [\"0x128\", \"0u\"]\n+        },\n+        {\n+            \"intrinsic\": \"qtbx1{0.width}_{0.data_type}\",\n+            \"width\": [64, 128],\n+            \"llvm\": \"tbx1.{0.llvm_name}\",\n+            \"ret\": \"i8\",\n+            \"args\": [\"0\", \"0x128\", \"0u\"]\n+        },\n+        {\n+            \"intrinsic\": \"qtbl2{0.width}_{0.data_type}\",\n+            \"width\": [64, 128],\n+            \"llvm\": \"tbl2.{0.llvm_name}\",\n+            \"ret\": \"i8\",\n+            \"args\": [\"(0x128,0x128)f\", \"0u\"]\n+        },\n+        {\n+            \"intrinsic\": \"qtbx2{0.width}_{0.data_type}\",\n+            \"width\": [64, 128],\n+            \"llvm\": \"tbx2.{0.llvm_name}\",\n+            \"ret\": \"i8\",\n+            \"args\": [\"(0x128,0x128)f\", \"0u\"]\n+        },\n+        {\n+            \"intrinsic\": \"qtbl3{0.width}_{0.data_type}\",\n+            \"width\": [64, 128],\n+            \"llvm\": \"tbl3.{0.llvm_name}\",\n+            \"ret\": \"i8\",\n+            \"args\": [\"(0x128,0x128,0x128)f\", \"0u\"]\n+        },\n+        {\n+            \"intrinsic\": \"qtbx3{0.width}_{0.data_type}\",\n+            \"width\": [64, 128],\n+            \"llvm\": \"tbx3.{0.llvm_name}\",\n+            \"ret\": \"i8\",\n+            \"args\": [\"0\", \"(0x128,0x128,0x128)f\", \"0u\"]\n+        },\n+        {\n+            \"intrinsic\": \"qtbl4{0.width}_{0.data_type}\",\n+            \"width\": [64, 128],\n+            \"llvm\": \"tbl4.{0.llvm_name}\",\n+            \"ret\": \"i8\",\n+            \"args\": [\"(0x128,0x128,0x128,0x128)f\", \"0u\"]\n+        },\n+        {\n+            \"intrinsic\": \"qtbx4{0.width}_{0.data_type}\",\n+            \"width\": [64, 128],\n+            \"llvm\": \"tbx4.{0.llvm_name}\",\n+            \"ret\": \"i8\",\n+            \"args\": [\"0\", \"(0x128,0x128,0x128,0x128)f\", \"0u\"]\n+        }\n+    ]\n+}"}, {"sha": "2f23cc17e146306a5a90950b775ffbc7f20aa709", "filename": "src/librustc_platform_intrinsics/aarch64.rs", "status": "modified", "additions": 2797, "deletions": 38, "changes": 2835, "blob_url": "https://github.com/rust-lang/rust/blob/3ef610b627fc64bfdef0a07ddfd06839a473e65d/src%2Flibrustc_platform_intrinsics%2Faarch64.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3ef610b627fc64bfdef0a07ddfd06839a473e65d/src%2Flibrustc_platform_intrinsics%2Faarch64.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_platform_intrinsics%2Faarch64.rs?ref=3ef610b627fc64bfdef0a07ddfd06839a473e65d"}]}