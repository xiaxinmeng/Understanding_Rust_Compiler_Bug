{"sha": "0ff271d38ff436f988d366561027d8d185e05692", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBmZjI3MWQzOGZmNDM2Zjk4OGQzNjY1NjEwMjdkOGQxODVlMDU2OTI=", "commit": {"author": {"name": "Dawer", "email": "7803845+iDawer@users.noreply.github.com", "date": "2021-09-17T18:04:20Z"}, "committer": {"name": "Dawer", "email": "7803845+iDawer@users.noreply.github.com", "date": "2021-09-17T18:04:20Z"}, "message": "fix completion handler trying to seek outside of character boundaries.\n\nWith this patch, in these examples\n```rust\nfn main() {\n    \"\u229e$0\";\n}\n```\n\n```rust\nstruct S {\n\u0434$0 u8\n}\n```\nentering ':' character in `$0` places shouldn't cause panics.", "tree": {"sha": "b52109b57699ec3ad8096cd803253ac4bf4b8f3e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b52109b57699ec3ad8096cd803253ac4bf4b8f3e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0ff271d38ff436f988d366561027d8d185e05692", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0ff271d38ff436f988d366561027d8d185e05692", "html_url": "https://github.com/rust-lang/rust/commit/0ff271d38ff436f988d366561027d8d185e05692", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0ff271d38ff436f988d366561027d8d185e05692/comments", "author": {"login": "iDawer", "id": 7803845, "node_id": "MDQ6VXNlcjc4MDM4NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/7803845?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iDawer", "html_url": "https://github.com/iDawer", "followers_url": "https://api.github.com/users/iDawer/followers", "following_url": "https://api.github.com/users/iDawer/following{/other_user}", "gists_url": "https://api.github.com/users/iDawer/gists{/gist_id}", "starred_url": "https://api.github.com/users/iDawer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iDawer/subscriptions", "organizations_url": "https://api.github.com/users/iDawer/orgs", "repos_url": "https://api.github.com/users/iDawer/repos", "events_url": "https://api.github.com/users/iDawer/events{/privacy}", "received_events_url": "https://api.github.com/users/iDawer/received_events", "type": "User", "site_admin": false}, "committer": {"login": "iDawer", "id": 7803845, "node_id": "MDQ6VXNlcjc4MDM4NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/7803845?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iDawer", "html_url": "https://github.com/iDawer", "followers_url": "https://api.github.com/users/iDawer/followers", "following_url": "https://api.github.com/users/iDawer/following{/other_user}", "gists_url": "https://api.github.com/users/iDawer/gists{/gist_id}", "starred_url": "https://api.github.com/users/iDawer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iDawer/subscriptions", "organizations_url": "https://api.github.com/users/iDawer/orgs", "repos_url": "https://api.github.com/users/iDawer/repos", "events_url": "https://api.github.com/users/iDawer/events{/privacy}", "received_events_url": "https://api.github.com/users/iDawer/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "00b19846c9a50a2bd151375eaf22881f665e560d", "url": "https://api.github.com/repos/rust-lang/rust/commits/00b19846c9a50a2bd151375eaf22881f665e560d", "html_url": "https://github.com/rust-lang/rust/commit/00b19846c9a50a2bd151375eaf22881f665e560d"}], "stats": {"total": 17, "additions": 7, "deletions": 10}, "files": [{"sha": "dbbe1841fc9b236606ae873a17061052804656a4", "filename": "crates/rust-analyzer/src/handlers.rs", "status": "modified", "additions": 7, "deletions": 10, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/0ff271d38ff436f988d366561027d8d185e05692/crates%2Frust-analyzer%2Fsrc%2Fhandlers.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0ff271d38ff436f988d366561027d8d185e05692/crates%2Frust-analyzer%2Fsrc%2Fhandlers.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fhandlers.rs?ref=0ff271d38ff436f988d366561027d8d185e05692", "patch": "@@ -27,7 +27,7 @@ use lsp_types::{\n use project_model::TargetKind;\n use serde_json::json;\n use stdx::{format_to, never};\n-use syntax::{algo, ast, AstNode, TextRange, TextSize};\n+use syntax::{algo, ast, AstNode, TextRange, TextSize, T};\n \n use crate::{\n     cargo_target_spec::CargoTargetSpec,\n@@ -727,16 +727,13 @@ pub(crate) fn handle_completion(\n     let completion_triggered_after_single_colon = {\n         let mut res = false;\n         if let Some(ctx) = params.context {\n-            if ctx.trigger_character.unwrap_or_default() == \":\" {\n+            if ctx.trigger_character.as_deref() == Some(\":\") {\n                 let source_file = snap.analysis.parse(position.file_id)?;\n-                let syntax = source_file.syntax();\n-                let text = syntax.text();\n-                if let Some(next_char) = text.char_at(position.offset) {\n-                    let diff = TextSize::of(next_char) + TextSize::of(':');\n-                    let prev_char = position.offset - diff;\n-                    if text.char_at(prev_char) != Some(':') {\n-                        res = true;\n-                    }\n+                let left_token =\n+                    source_file.syntax().token_at_offset(position.offset).left_biased();\n+                match left_token {\n+                    Some(left_token) => res = left_token.kind() == T![:],\n+                    None => res = true,\n                 }\n             }\n         }"}]}