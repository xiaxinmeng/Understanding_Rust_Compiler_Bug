{"sha": "c21f1d09de3a6a7bb4952f400919e936032b8ee2", "node_id": "C_kwDOAAsO6NoAKGMyMWYxZDA5ZGUzYTZhN2JiNDk1MmY0MDA5MTllOTM2MDMyYjhlZTI", "commit": {"author": {"name": "Tomasz Mi\u0105sko", "email": "tomasz.miasko@gmail.com", "date": "2023-03-11T00:00:00Z"}, "committer": {"name": "Tomasz Mi\u0105sko", "email": "tomasz.miasko@gmail.com", "date": "2023-03-11T16:04:41Z"}, "message": "read_buf_exact: on error, all read bytes are appended to the buffer\n\nGuarantee that when `read_buf_exact` returns, all bytes read will be\nappended to the buffer. Including the case when the operations fails.\n\nThe motivating use case are operations on a non-blocking reader. When\n`read_buf_exact` fails with `ErrorKind::WouldBlock` error, the operation\ncan be resumed at a later time.", "tree": {"sha": "766aca0c8bc2f800c45056480f50dfaf804aab10", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/766aca0c8bc2f800c45056480f50dfaf804aab10"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c21f1d09de3a6a7bb4952f400919e936032b8ee2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c21f1d09de3a6a7bb4952f400919e936032b8ee2", "html_url": "https://github.com/rust-lang/rust/commit/c21f1d09de3a6a7bb4952f400919e936032b8ee2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c21f1d09de3a6a7bb4952f400919e936032b8ee2/comments", "author": {"login": "tmiasko", "id": 51362316, "node_id": "MDQ6VXNlcjUxMzYyMzE2", "avatar_url": "https://avatars.githubusercontent.com/u/51362316?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tmiasko", "html_url": "https://github.com/tmiasko", "followers_url": "https://api.github.com/users/tmiasko/followers", "following_url": "https://api.github.com/users/tmiasko/following{/other_user}", "gists_url": "https://api.github.com/users/tmiasko/gists{/gist_id}", "starred_url": "https://api.github.com/users/tmiasko/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tmiasko/subscriptions", "organizations_url": "https://api.github.com/users/tmiasko/orgs", "repos_url": "https://api.github.com/users/tmiasko/repos", "events_url": "https://api.github.com/users/tmiasko/events{/privacy}", "received_events_url": "https://api.github.com/users/tmiasko/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tmiasko", "id": 51362316, "node_id": "MDQ6VXNlcjUxMzYyMzE2", "avatar_url": "https://avatars.githubusercontent.com/u/51362316?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tmiasko", "html_url": "https://github.com/tmiasko", "followers_url": "https://api.github.com/users/tmiasko/followers", "following_url": "https://api.github.com/users/tmiasko/following{/other_user}", "gists_url": "https://api.github.com/users/tmiasko/gists{/gist_id}", "starred_url": "https://api.github.com/users/tmiasko/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tmiasko/subscriptions", "organizations_url": "https://api.github.com/users/tmiasko/orgs", "repos_url": "https://api.github.com/users/tmiasko/repos", "events_url": "https://api.github.com/users/tmiasko/events{/privacy}", "received_events_url": "https://api.github.com/users/tmiasko/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e350fe4e608b653da47e8012d13ef701613e717b", "url": "https://api.github.com/repos/rust-lang/rust/commits/e350fe4e608b653da47e8012d13ef701613e717b", "html_url": "https://github.com/rust-lang/rust/commit/e350fe4e608b653da47e8012d13ef701613e717b"}], "stats": {"total": 18, "additions": 16, "deletions": 2}, "files": [{"sha": "4b31c552eedd2c06d84a593963a2209d8569995c", "filename": "library/std/src/io/mod.rs", "status": "modified", "additions": 16, "deletions": 2, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/c21f1d09de3a6a7bb4952f400919e936032b8ee2/library%2Fstd%2Fsrc%2Fio%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c21f1d09de3a6a7bb4952f400919e936032b8ee2/library%2Fstd%2Fsrc%2Fio%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fio%2Fmod.rs?ref=c21f1d09de3a6a7bb4952f400919e936032b8ee2", "patch": "@@ -823,8 +823,22 @@ pub trait Read {\n \n     /// Read the exact number of bytes required to fill `cursor`.\n     ///\n-    /// This is equivalent to the [`read_exact`](Read::read_exact) method, except that it is passed a [`BorrowedCursor`] rather than `[u8]` to\n-    /// allow use with uninitialized buffers.\n+    /// This is similar to the [`read_exact`](Read::read_exact) method, except\n+    /// that it is passed a [`BorrowedCursor`] rather than `[u8]` to allow use\n+    /// with uninitialized buffers.\n+    ///\n+    /// # Errors\n+    ///\n+    /// If this function encounters an error of the kind [`ErrorKind::Interrupted`]\n+    /// then the error is ignored and the operation will continue.\n+    ///\n+    /// If this function encounters an \"end of file\" before completely filling\n+    /// the buffer, it returns an error of the kind [`ErrorKind::UnexpectedEof`].\n+    ///\n+    /// If any other read error is encountered then this function immediately\n+    /// returns.\n+    ///\n+    /// If this function returns an error, all bytes read will be appended to `cursor`.\n     #[unstable(feature = \"read_buf\", issue = \"78485\")]\n     fn read_buf_exact(&mut self, mut cursor: BorrowedCursor<'_>) -> Result<()> {\n         while cursor.capacity() > 0 {"}]}