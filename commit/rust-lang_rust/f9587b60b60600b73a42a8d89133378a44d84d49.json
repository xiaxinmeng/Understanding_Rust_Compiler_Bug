{"sha": "f9587b60b60600b73a42a8d89133378a44d84d49", "node_id": "C_kwDOAAsO6NoAKGY5NTg3YjYwYjYwNjAwYjczYTQyYThkODkxMzMzNzhhNDRkODRkNDk", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2021-12-04T01:26:24Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-12-04T01:26:24Z"}, "message": "Rollup merge of #91478 - estebank:fix-newline-in-cast-suggestion, r=camelid\n\nRemove incorrect newline from float cast suggestion", "tree": {"sha": "a75619a63c6f0e1a02f9833d60873930eab74944", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a75619a63c6f0e1a02f9833d60873930eab74944"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f9587b60b60600b73a42a8d89133378a44d84d49", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJhqsPACRBK7hj4Ov3rIwAAgTkIAGuYl5q/Ze+a3ItSS7uwThuv\nCv1mIiZOo09IS09Wa+81onN+vZYfv5P9vvUUigxlkwC29Oer0I6EHnRPEpGtpE55\nT1FWkm6MjCFqHseKKOX/e9u4DNWtf5kdzjF+uL6gEqSLnNzIV9XOL7o6w583mZjO\nAEjDiXb2caQ9nNUC3X43B/Cdxs/1fnnP+I7VuSM5agbd+fvFmWEF17s5ZDoidWJe\nC2v0AVmdEbCKHuuSPCT8EbIh+olp3nobc8JdFvhofatywCCUwvloSqhVeTsywZmf\nNrYZkbQOu2QJ0oe0WfnSxfppWdudpYHkG+SoYovFjk/8TQfi5F+xtwaTI7unVXo=\n=H5MM\n-----END PGP SIGNATURE-----\n", "payload": "tree a75619a63c6f0e1a02f9833d60873930eab74944\nparent 2b64476b9c8161974c85d35cb29cfaa5f5cc136d\nparent 5b5df0fa17a36ab1a182313c2cb4db0799b9249f\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1638581184 +0100\ncommitter GitHub <noreply@github.com> 1638581184 +0100\n\nRollup merge of #91478 - estebank:fix-newline-in-cast-suggestion, r=camelid\n\nRemove incorrect newline from float cast suggestion\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f9587b60b60600b73a42a8d89133378a44d84d49", "html_url": "https://github.com/rust-lang/rust/commit/f9587b60b60600b73a42a8d89133378a44d84d49", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f9587b60b60600b73a42a8d89133378a44d84d49/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2b64476b9c8161974c85d35cb29cfaa5f5cc136d", "url": "https://api.github.com/repos/rust-lang/rust/commits/2b64476b9c8161974c85d35cb29cfaa5f5cc136d", "html_url": "https://github.com/rust-lang/rust/commit/2b64476b9c8161974c85d35cb29cfaa5f5cc136d"}, {"sha": "5b5df0fa17a36ab1a182313c2cb4db0799b9249f", "url": "https://api.github.com/repos/rust-lang/rust/commits/5b5df0fa17a36ab1a182313c2cb4db0799b9249f", "html_url": "https://github.com/rust-lang/rust/commit/5b5df0fa17a36ab1a182313c2cb4db0799b9249f"}], "stats": {"total": 22, "additions": 11, "deletions": 11}, "files": [{"sha": "b210c78cae007989d7ea08f895bebc42dab1da13", "filename": "compiler/rustc_typeck/src/check/demand.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f9587b60b60600b73a42a8d89133378a44d84d49/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fdemand.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f9587b60b60600b73a42a8d89133378a44d84d49/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fdemand.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fdemand.rs?ref=f9587b60b60600b73a42a8d89133378a44d84d49", "patch": "@@ -1223,7 +1223,7 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n                     // Missing try_into implementation for `{integer}` to `{float}`\n                     err.multipart_suggestion_verbose(\n                         &format!(\n-                            \"{}, producing the floating point representation of the integer,\n+                            \"{}, producing the floating point representation of the integer, \\\n                                  rounded if necessary\",\n                             cast_msg,\n                         ),"}, {"sha": "b8f2d88ab4957e9fb246700d708eab9f34528959", "filename": "src/test/ui/numeric/numeric-cast.stderr", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/f9587b60b60600b73a42a8d89133378a44d84d49/src%2Ftest%2Fui%2Fnumeric%2Fnumeric-cast.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f9587b60b60600b73a42a8d89133378a44d84d49/src%2Ftest%2Fui%2Fnumeric%2Fnumeric-cast.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnumeric%2Fnumeric-cast.stderr?ref=f9587b60b60600b73a42a8d89133378a44d84d49", "patch": "@@ -994,8 +994,8 @@ error[E0308]: mismatched types\n LL |     foo::<f64>(x_usize);\n    |                ^^^^^^^ expected `f64`, found `usize`\n    |\n-help: you can cast a `usize` to an `f64`, producing the floating point representation of the integer,\n-   |                                              rounded if necessary\n+help: you can cast a `usize` to an `f64`, producing the floating point representation of the integer, rounded if necessary\n+   |\n LL |     foo::<f64>(x_usize as f64);\n    |                        ++++++\n \n@@ -1005,8 +1005,8 @@ error[E0308]: mismatched types\n LL |     foo::<f64>(x_u64);\n    |                ^^^^^ expected `f64`, found `u64`\n    |\n-help: you can cast a `u64` to an `f64`, producing the floating point representation of the integer,\n-   |                                              rounded if necessary\n+help: you can cast a `u64` to an `f64`, producing the floating point representation of the integer, rounded if necessary\n+   |\n LL |     foo::<f64>(x_u64 as f64);\n    |                      ++++++\n \n@@ -1115,8 +1115,8 @@ error[E0308]: mismatched types\n LL |     foo::<f32>(x_usize);\n    |                ^^^^^^^ expected `f32`, found `usize`\n    |\n-help: you can cast a `usize` to an `f32`, producing the floating point representation of the integer,\n-   |                                              rounded if necessary\n+help: you can cast a `usize` to an `f32`, producing the floating point representation of the integer, rounded if necessary\n+   |\n LL |     foo::<f32>(x_usize as f32);\n    |                        ++++++\n \n@@ -1126,8 +1126,8 @@ error[E0308]: mismatched types\n LL |     foo::<f32>(x_u64);\n    |                ^^^^^ expected `f32`, found `u64`\n    |\n-help: you can cast a `u64` to an `f32`, producing the floating point representation of the integer,\n-   |                                              rounded if necessary\n+help: you can cast a `u64` to an `f32`, producing the floating point representation of the integer, rounded if necessary\n+   |\n LL |     foo::<f32>(x_u64 as f32);\n    |                      ++++++\n \n@@ -1137,8 +1137,8 @@ error[E0308]: mismatched types\n LL |     foo::<f32>(x_u32);\n    |                ^^^^^ expected `f32`, found `u32`\n    |\n-help: you can cast a `u32` to an `f32`, producing the floating point representation of the integer,\n-   |                                              rounded if necessary\n+help: you can cast a `u32` to an `f32`, producing the floating point representation of the integer, rounded if necessary\n+   |\n LL |     foo::<f32>(x_u32 as f32);\n    |                      ++++++\n "}]}