{"sha": "7855893ac7cbac32dcc801dcefe1ec845fa92616", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc4NTU4OTNhYzdjYmFjMzJkY2M4MDFkY2VmZTFlYzg0NWZhOTI2MTY=", "commit": {"author": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2014-12-10T22:24:10Z"}, "committer": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2014-12-14T16:11:55Z"}, "message": "Add a bunch of new tests per Alex's suggestion.", "tree": {"sha": "2439d40a18e01b4c29887ef13f475b1a655ec2ee", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2439d40a18e01b4c29887ef13f475b1a655ec2ee"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7855893ac7cbac32dcc801dcefe1ec845fa92616", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7855893ac7cbac32dcc801dcefe1ec845fa92616", "html_url": "https://github.com/rust-lang/rust/commit/7855893ac7cbac32dcc801dcefe1ec845fa92616", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7855893ac7cbac32dcc801dcefe1ec845fa92616/comments", "author": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5fe0ad1c0fde4c93ec010e95457d5831d11f013d", "url": "https://api.github.com/repos/rust-lang/rust/commits/5fe0ad1c0fde4c93ec010e95457d5831d11f013d", "html_url": "https://github.com/rust-lang/rust/commit/5fe0ad1c0fde4c93ec010e95457d5831d11f013d"}], "stats": {"total": 102, "additions": 102, "deletions": 0}, "files": [{"sha": "d5437690acdc74705e1b6ea3831c035ca42462db", "filename": "src/test/auxiliary/trait-safety-lib.rs", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/7855893ac7cbac32dcc801dcefe1ec845fa92616/src%2Ftest%2Fauxiliary%2Ftrait-safety-lib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7855893ac7cbac32dcc801dcefe1ec845fa92616/src%2Ftest%2Fauxiliary%2Ftrait-safety-lib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fauxiliary%2Ftrait-safety-lib.rs?ref=7855893ac7cbac32dcc801dcefe1ec845fa92616", "patch": "@@ -0,0 +1,19 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// Simple smoke test that unsafe traits can be compiled etc.\n+\n+pub unsafe trait Foo {\n+    fn foo(&self) -> int;\n+}\n+\n+unsafe impl Foo for int {\n+    fn foo(&self) -> int { *self }\n+}"}, {"sha": "21dd5a237c5db970421a2a29f0bc94bd346f4971", "filename": "src/test/compile-fail/trait-safety-trait-impl-cc.rs", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/7855893ac7cbac32dcc801dcefe1ec845fa92616/src%2Ftest%2Fcompile-fail%2Ftrait-safety-trait-impl-cc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7855893ac7cbac32dcc801dcefe1ec845fa92616/src%2Ftest%2Fcompile-fail%2Ftrait-safety-trait-impl-cc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Ftrait-safety-trait-impl-cc.rs?ref=7855893ac7cbac32dcc801dcefe1ec845fa92616", "patch": "@@ -0,0 +1,25 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// aux-build:trait-safety-lib.rs\n+\n+// Check that unsafe traits require unsafe impls and that inherent\n+// impls cannot be unsafe.\n+\n+extern crate \"trait-safety-lib\" as lib;\n+\n+struct Bar;\n+impl lib::Foo for Bar { //~ ERROR requires an `unsafe impl` declaration\n+    fn foo(&self) -> int {\n+        *self as int\n+    }\n+}\n+\n+fn main() { }"}, {"sha": "99203d3e24acc7e569a1be3e7fdb99637cdfe7e2", "filename": "src/test/run-pass/trait-safety-ok-cc.rs", "status": "added", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/7855893ac7cbac32dcc801dcefe1ec845fa92616/src%2Ftest%2Frun-pass%2Ftrait-safety-ok-cc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7855893ac7cbac32dcc801dcefe1ec845fa92616/src%2Ftest%2Frun-pass%2Ftrait-safety-ok-cc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ftrait-safety-ok-cc.rs?ref=7855893ac7cbac32dcc801dcefe1ec845fa92616", "patch": "@@ -0,0 +1,32 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// aux-build:trait-safety-lib.rs\n+\n+// Simple smoke test that unsafe traits can be compiled across crates.\n+\n+extern crate \"trait-safety-lib\" as lib;\n+\n+use lib::Foo;\n+\n+struct Bar { x: int }\n+unsafe impl Foo for Bar {\n+    fn foo(&self) -> int { self.x }\n+}\n+\n+fn take_foo<F:Foo>(f: &F) -> int { f.foo() }\n+\n+fn main() {\n+    let x: int = 22;\n+    assert_eq!(22, take_foo(&x));\n+\n+    let x: Bar = Bar { x: 23 };\n+    assert_eq!(23, take_foo(&x));\n+}"}, {"sha": "a24796a7d0c31025929372e3a6a20464835d7ec9", "filename": "src/test/run-pass/trait-safety-ok.rs", "status": "added", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/7855893ac7cbac32dcc801dcefe1ec845fa92616/src%2Ftest%2Frun-pass%2Ftrait-safety-ok.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7855893ac7cbac32dcc801dcefe1ec845fa92616/src%2Ftest%2Frun-pass%2Ftrait-safety-ok.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ftrait-safety-ok.rs?ref=7855893ac7cbac32dcc801dcefe1ec845fa92616", "patch": "@@ -0,0 +1,26 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// Simple smoke test that unsafe traits can be compiled etc.\n+\n+unsafe trait Foo {\n+    fn foo(&self) -> int;\n+}\n+\n+unsafe impl Foo for int {\n+    fn foo(&self) -> int { *self }\n+}\n+\n+fn take_foo<F:Foo>(f: &F) -> int { f.foo() }\n+\n+fn main() {\n+    let x: int = 22;\n+    assert_eq!(22, take_foo(&x));\n+}"}]}