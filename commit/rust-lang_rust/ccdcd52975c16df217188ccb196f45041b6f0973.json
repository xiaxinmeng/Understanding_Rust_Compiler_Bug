{"sha": "ccdcd52975c16df217188ccb196f45041b6f0973", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNjZGNkNTI5NzVjMTZkZjIxNzE4OGNjYjE5NmY0NTA0MWI2ZjA5NzM=", "commit": {"author": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2020-11-12T16:47:58Z"}, "committer": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2020-11-12T17:44:37Z"}, "message": "Add extra test to extract_struct_from_enum_variant", "tree": {"sha": "3753bd44830b7e8540cec6eb2ffbc42fbd455db7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3753bd44830b7e8540cec6eb2ffbc42fbd455db7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ccdcd52975c16df217188ccb196f45041b6f0973", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ccdcd52975c16df217188ccb196f45041b6f0973", "html_url": "https://github.com/rust-lang/rust/commit/ccdcd52975c16df217188ccb196f45041b6f0973", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ccdcd52975c16df217188ccb196f45041b6f0973/comments", "author": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9454a9e536d96c7e46378744b8d93cc039fa3b98", "url": "https://api.github.com/repos/rust-lang/rust/commits/9454a9e536d96c7e46378744b8d93cc039fa3b98", "html_url": "https://github.com/rust-lang/rust/commit/9454a9e536d96c7e46378744b8d93cc039fa3b98"}], "stats": {"total": 29, "additions": 28, "deletions": 1}, "files": [{"sha": "067afabf2edf7b45c765ac40c32d82e693ad10e0", "filename": "crates/assists/src/handlers/extract_struct_from_enum_variant.rs", "status": "modified", "additions": 28, "deletions": 1, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/ccdcd52975c16df217188ccb196f45041b6f0973/crates%2Fassists%2Fsrc%2Fhandlers%2Fextract_struct_from_enum_variant.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ccdcd52975c16df217188ccb196f45041b6f0973/crates%2Fassists%2Fsrc%2Fhandlers%2Fextract_struct_from_enum_variant.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fassists%2Fsrc%2Fhandlers%2Fextract_struct_from_enum_variant.rs?ref=ccdcd52975c16df217188ccb196f45041b6f0973", "patch": "@@ -140,7 +140,7 @@ fn insert_import(\n         enum_module_def.clone(),\n         ctx.config.insert_use.prefix_kind,\n     );\n-    if let Some(mut mod_path) = mod_path.filter(|path| !path.is_ident()) {\n+    if let Some(mut mod_path) = mod_path {\n         mod_path.segments.pop();\n         mod_path.segments.push(variant_hir_name.clone());\n         let scope = ImportScope::find_insert_use_container(scope_node, ctx)?;\n@@ -449,6 +449,33 @@ fn f() {\n         )\n     }\n \n+    #[test]\n+    fn test_extract_struct_record_nested_call_exp() {\n+        check_assist(\n+            extract_struct_from_enum_variant,\n+            r#\"\n+enum A { <|>One { a: u32, b: u32 } }\n+\n+struct B(A);\n+\n+fn foo() {\n+    let _ = B(A::One { a: 1, b: 2 });\n+}\n+\"#,\n+            r#\"\n+struct One{ pub a: u32, pub b: u32 }\n+\n+enum A { One(One) }\n+\n+struct B(A);\n+\n+fn foo() {\n+    let _ = B(A::One(One { a: 1, b: 2 }));\n+}\n+\"#,\n+        );\n+    }\n+\n     fn check_not_applicable(ra_fixture: &str) {\n         let fixture =\n             format!(\"//- /main.rs crate:main deps:core\\n{}\\n{}\", ra_fixture, FamousDefs::FIXTURE);"}]}