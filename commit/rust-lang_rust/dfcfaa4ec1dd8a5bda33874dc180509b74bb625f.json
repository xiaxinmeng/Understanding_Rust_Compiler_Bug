{"sha": "dfcfaa4ec1dd8a5bda33874dc180509b74bb625f", "node_id": "C_kwDOAAsO6NoAKGRmY2ZhYTRlYzFkZDhhNWJkYTMzODc0ZGMxODA1MDliNzRiYjYyNWY", "commit": {"author": {"name": "Simonas Kazlauskas", "email": "git@kazlauskas.me", "date": "2021-07-23T11:42:36Z"}, "committer": {"name": "Simonas Kazlauskas", "email": "git@kazlauskas.me", "date": "2022-02-27T19:21:38Z"}, "message": "Do not pass through features without +/- prefix\n\nLLVM really dislikes this and will assert, saying something along the\nlines of:\n\n```\nrustc: llvm/lib/MC/MCSubtargetInfo.cpp:60: void ApplyFeatureFlag(\n  llvm::FeatureBitset&, llvm::StringRef, llvm::ArrayRef<llvm::SubtargetFeatureKV>\n): Assertion\n  `SubtargetFeatures::hasFlag(Feature) && \"Feature flags should start with '+' or '-'\"`\nfailed.\n```", "tree": {"sha": "4ed06fdf5a430f9eda3c0ce522ab12349b86f01c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4ed06fdf5a430f9eda3c0ce522ab12349b86f01c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/dfcfaa4ec1dd8a5bda33874dc180509b74bb625f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/dfcfaa4ec1dd8a5bda33874dc180509b74bb625f", "html_url": "https://github.com/rust-lang/rust/commit/dfcfaa4ec1dd8a5bda33874dc180509b74bb625f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/dfcfaa4ec1dd8a5bda33874dc180509b74bb625f/comments", "author": {"login": "nagisa", "id": 679122, "node_id": "MDQ6VXNlcjY3OTEyMg==", "avatar_url": "https://avatars.githubusercontent.com/u/679122?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nagisa", "html_url": "https://github.com/nagisa", "followers_url": "https://api.github.com/users/nagisa/followers", "following_url": "https://api.github.com/users/nagisa/following{/other_user}", "gists_url": "https://api.github.com/users/nagisa/gists{/gist_id}", "starred_url": "https://api.github.com/users/nagisa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nagisa/subscriptions", "organizations_url": "https://api.github.com/users/nagisa/orgs", "repos_url": "https://api.github.com/users/nagisa/repos", "events_url": "https://api.github.com/users/nagisa/events{/privacy}", "received_events_url": "https://api.github.com/users/nagisa/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nagisa", "id": 679122, "node_id": "MDQ6VXNlcjY3OTEyMg==", "avatar_url": "https://avatars.githubusercontent.com/u/679122?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nagisa", "html_url": "https://github.com/nagisa", "followers_url": "https://api.github.com/users/nagisa/followers", "following_url": "https://api.github.com/users/nagisa/following{/other_user}", "gists_url": "https://api.github.com/users/nagisa/gists{/gist_id}", "starred_url": "https://api.github.com/users/nagisa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nagisa/subscriptions", "organizations_url": "https://api.github.com/users/nagisa/orgs", "repos_url": "https://api.github.com/users/nagisa/repos", "events_url": "https://api.github.com/users/nagisa/events{/privacy}", "received_events_url": "https://api.github.com/users/nagisa/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3b1fe7e7c95e14dd8a420edf2f8a160c70211e04", "url": "https://api.github.com/repos/rust-lang/rust/commits/3b1fe7e7c95e14dd8a420edf2f8a160c70211e04", "html_url": "https://github.com/rust-lang/rust/commit/3b1fe7e7c95e14dd8a420edf2f8a160c70211e04"}], "stats": {"total": 45, "additions": 28, "deletions": 17}, "files": [{"sha": "69eacafb1b59450d7803de4d7ba255feaa6993ce", "filename": "compiler/rustc_codegen_llvm/src/llvm_util.rs", "status": "modified", "additions": 16, "deletions": 17, "changes": 33, "blob_url": "https://github.com/rust-lang/rust/blob/dfcfaa4ec1dd8a5bda33874dc180509b74bb625f/compiler%2Frustc_codegen_llvm%2Fsrc%2Fllvm_util.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dfcfaa4ec1dd8a5bda33874dc180509b74bb625f/compiler%2Frustc_codegen_llvm%2Fsrc%2Fllvm_util.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_llvm%2Fsrc%2Fllvm_util.rs?ref=dfcfaa4ec1dd8a5bda33874dc180509b74bb625f", "patch": "@@ -221,7 +221,11 @@ pub fn target_features(sess: &Session) -> Vec<Symbol> {\n         supported_target_features(sess)\n             .iter()\n             .filter_map(|&(feature, gate)| {\n-                if sess.is_nightly_build() || gate.is_none() { Some(feature) } else { None }\n+                if sess.is_nightly_build() || gate.is_none() {\n+                    Some(feature)\n+                } else {\n+                    None\n+                }\n             })\n             .filter(|feature| {\n                 for llvm_feature in to_llvm_feature(sess, feature) {\n@@ -428,20 +432,15 @@ pub fn llvm_global_features(sess: &Session) -> Vec<String> {\n     }\n \n     let filter = |s: &str| {\n-        if s.is_empty() {\n-            return vec![];\n-        }\n-        let feature = strip(s);\n-        if feature == s {\n-            return vec![s.to_string()];\n-        }\n-\n-        // Rustc-specific feature requests like `+crt-static` or `-crt-static`\n-        // are not passed down to LLVM.\n-        if RUSTC_SPECIFIC_FEATURES.contains(&feature) {\n-            return vec![];\n-        }\n-        // ... otherwise though we run through `to_llvm_feature` feature when\n+        // features must start with a `+` or `-`.\n+        let feature = match s.strip_prefix(&['+', '-'][..]) {\n+            None => return vec![],\n+            // Rustc-specific feature requests like `+crt-static` or `-crt-static`\n+            // are not passed down to LLVM.\n+            Some(feature) if RUSTC_SPECIFIC_FEATURES.contains(&feature) => return vec![],\n+            Some(feature) => feature,\n+        };\n+        // ... otherwise though we run through `to_llvm_feature` when\n         // passing requests down to LLVM. This means that all in-language\n         // features also work on the command line instead of having two\n         // different names when the LLVM name and the Rust name differ.\n@@ -458,11 +457,11 @@ pub fn llvm_global_features(sess: &Session) -> Vec<String> {\n         check_tied_features(sess, &feats.iter().map(|f| (strip(f), !f.starts_with(\"-\"))).collect())\n     {\n         sess.err(&format!(\n-            \"Target features {} must all be enabled or disabled together\",\n+            \"target features {} must all be enabled or disabled together\",\n             f.join(\", \")\n         ));\n     }\n-    features.extend(feats.iter().flat_map(|&f| filter(f)));\n+    features.extend(feats.iter().flat_map(&filter));\n     features\n }\n "}, {"sha": "131687289027982ea492ce9ce68070635105c9a1", "filename": "src/test/ui/target-feature/missing-plusminus-2.rs", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/dfcfaa4ec1dd8a5bda33874dc180509b74bb625f/src%2Ftest%2Fui%2Ftarget-feature%2Fmissing-plusminus-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dfcfaa4ec1dd8a5bda33874dc180509b74bb625f/src%2Ftest%2Fui%2Ftarget-feature%2Fmissing-plusminus-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftarget-feature%2Fmissing-plusminus-2.rs?ref=dfcfaa4ec1dd8a5bda33874dc180509b74bb625f", "patch": "@@ -0,0 +1,6 @@\n+// compile-flags: -Ctarget-feature=rdrand --crate-type=rlib --target=x86_64-unknown-linux-gnu\n+// build-pass\n+// needs-llvm-components: x86\n+\n+#![feature(no_core)]\n+#![no_core]"}, {"sha": "5ed2652a06df261de59e1784025d346513c69869", "filename": "src/test/ui/target-feature/missing-plusminus-2.stderr", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/dfcfaa4ec1dd8a5bda33874dc180509b74bb625f/src%2Ftest%2Fui%2Ftarget-feature%2Fmissing-plusminus-2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/dfcfaa4ec1dd8a5bda33874dc180509b74bb625f/src%2Ftest%2Fui%2Ftarget-feature%2Fmissing-plusminus-2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftarget-feature%2Fmissing-plusminus-2.stderr?ref=dfcfaa4ec1dd8a5bda33874dc180509b74bb625f", "patch": "@@ -0,0 +1,6 @@\n+warning: unknown feature specified for `-Ctarget-feature`: `rdrand`\n+   |\n+   = note: features must begin with a `+` to enable or `-` to disable it\n+\n+warning: 1 warning emitted\n+"}]}