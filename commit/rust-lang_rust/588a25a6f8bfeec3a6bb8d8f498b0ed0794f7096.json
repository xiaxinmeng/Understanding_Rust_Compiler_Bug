{"sha": "588a25a6f8bfeec3a6bb8d8f498b0ed0794f7096", "node_id": "C_kwDOAAsO6NoAKDU4OGEyNWE2ZjhiZmVlYzNhNmJiOGQ4ZjQ5OGIwZWQwNzk0ZjcwOTY", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2022-09-30T08:22:39Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-09-30T08:22:39Z"}, "message": "Rollup merge of #102499 - cuviper:llvm-16-s390x, r=nikic\n\nAdjust the s390x data layout for LLVM 16\n\nLLVM [D131158] changed the SystemZ data layout to always set 64-bit\nvector alignment, which used to be conditional on the \"vector\" feature.\n\n[D131158]: https://reviews.llvm.org/D131158\n\nr? `@nikic`", "tree": {"sha": "de254c2ad21a40cafb55abee9b15f5cddc9ee9cc", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/de254c2ad21a40cafb55abee9b15f5cddc9ee9cc"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/588a25a6f8bfeec3a6bb8d8f498b0ed0794f7096", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJjNqdPCRBK7hj4Ov3rIwAAnm4IAEpQxB7HNamZqh7k7ilhUE0w\nNDy2+YOTUiY/AXLJF7T/69+8qiywSztRrCep1o4Sz859p5FheEMtEQJsMsXE6iLs\nN6U8SHVuZqdT0Vq6JR3d3cK6riyRn6nMegvoCnksueUhu5R6CaTaxLPVHUHZnDUR\nGOmN2Bkmw7bD8LE/nu4tpwiSNZcFEHVC+xoIH3wWXTafu4YIakzXRH3zy0rgSvxs\nsQdzKPC92hVJT7MCgi4n5GFkrXImFMAdz5gyMFkXFBAEmYDMbwY005dLdop/F1M9\nnk+U77/+vFTtG5bzMJjVHqfl7zq+cMegrJOSZdhnLiKGrwqhYT/iV9eaZiCmsnw=\n=PLET\n-----END PGP SIGNATURE-----\n", "payload": "tree de254c2ad21a40cafb55abee9b15f5cddc9ee9cc\nparent e36c3c12ccacc13dbb6c4cd9c163d1aa53be8251\nparent 2e7a96448537809bc3718f4d6f7d696ededd1584\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1664526159 +0200\ncommitter GitHub <noreply@github.com> 1664526159 +0200\n\nRollup merge of #102499 - cuviper:llvm-16-s390x, r=nikic\n\nAdjust the s390x data layout for LLVM 16\n\nLLVM [D131158] changed the SystemZ data layout to always set 64-bit\nvector alignment, which used to be conditional on the \"vector\" feature.\n\n[D131158]: https://reviews.llvm.org/D131158\n\nr? `@nikic`\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/588a25a6f8bfeec3a6bb8d8f498b0ed0794f7096", "html_url": "https://github.com/rust-lang/rust/commit/588a25a6f8bfeec3a6bb8d8f498b0ed0794f7096", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/588a25a6f8bfeec3a6bb8d8f498b0ed0794f7096/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e36c3c12ccacc13dbb6c4cd9c163d1aa53be8251", "url": "https://api.github.com/repos/rust-lang/rust/commits/e36c3c12ccacc13dbb6c4cd9c163d1aa53be8251", "html_url": "https://github.com/rust-lang/rust/commit/e36c3c12ccacc13dbb6c4cd9c163d1aa53be8251"}, {"sha": "2e7a96448537809bc3718f4d6f7d696ededd1584", "url": "https://api.github.com/repos/rust-lang/rust/commits/2e7a96448537809bc3718f4d6f7d696ededd1584", "html_url": "https://github.com/rust-lang/rust/commit/2e7a96448537809bc3718f4d6f7d696ededd1584"}], "stats": {"total": 21, "additions": 13, "deletions": 8}, "files": [{"sha": "2ab69d2541169fc51580a1f83cf77ea1cd23224f", "filename": "compiler/rustc_codegen_llvm/src/context.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/588a25a6f8bfeec3a6bb8d8f498b0ed0794f7096/compiler%2Frustc_codegen_llvm%2Fsrc%2Fcontext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/588a25a6f8bfeec3a6bb8d8f498b0ed0794f7096/compiler%2Frustc_codegen_llvm%2Fsrc%2Fcontext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_llvm%2Fsrc%2Fcontext.rs?ref=588a25a6f8bfeec3a6bb8d8f498b0ed0794f7096", "patch": "@@ -154,6 +154,11 @@ pub unsafe fn create_module<'ll>(\n             target_data_layout = target_data_layout.replace(\"-p10:8:8-p20:8:8\", \"\");\n         }\n     }\n+    if llvm_version < (16, 0, 0) {\n+        if sess.target.arch == \"s390x\" {\n+            target_data_layout = target_data_layout.replace(\"-v128:64\", \"\");\n+        }\n+    }\n \n     // Ensure the data-layout values hardcoded remain the defaults.\n     if sess.target.is_builtin {"}, {"sha": "cda88de0ea40693558af4084af4a49adcaa33ea4", "filename": "compiler/rustc_target/src/spec/s390x_unknown_linux_gnu.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/588a25a6f8bfeec3a6bb8d8f498b0ed0794f7096/compiler%2Frustc_target%2Fsrc%2Fspec%2Fs390x_unknown_linux_gnu.rs", "raw_url": "https://github.com/rust-lang/rust/raw/588a25a6f8bfeec3a6bb8d8f498b0ed0794f7096/compiler%2Frustc_target%2Fsrc%2Fspec%2Fs390x_unknown_linux_gnu.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_target%2Fsrc%2Fspec%2Fs390x_unknown_linux_gnu.rs?ref=588a25a6f8bfeec3a6bb8d8f498b0ed0794f7096", "patch": "@@ -6,9 +6,9 @@ pub fn target() -> Target {\n     base.endian = Endian::Big;\n     // z10 is the oldest CPU supported by LLVM\n     base.cpu = \"z10\".into();\n-    // FIXME: The data_layout string below and the ABI implementation in\n-    // cabi_s390x.rs are for now hard-coded to assume the no-vector ABI.\n-    // Pass the -vector feature string to LLVM to respect this assumption.\n+    // FIXME: The ABI implementation in cabi_s390x.rs is for now hard-coded to assume the no-vector\n+    // ABI. Pass the -vector feature string to LLVM to respect this assumption. On LLVM < 16, we\n+    // also strip v128 from the data_layout below to match the older LLVM's expectation.\n     base.features = \"-vector\".into();\n     base.max_atomic_width = Some(64);\n     base.min_global_align = Some(16);\n@@ -17,7 +17,7 @@ pub fn target() -> Target {\n     Target {\n         llvm_target: \"s390x-unknown-linux-gnu\".into(),\n         pointer_width: 64,\n-        data_layout: \"E-m:e-i1:8:16-i8:8:16-i64:64-f128:64-a:8:16-n32:64\".into(),\n+        data_layout: \"E-m:e-i1:8:16-i8:8:16-i64:64-f128:64-v128:64-a:8:16-n32:64\".into(),\n         arch: \"s390x\".into(),\n         options: base,\n     }"}, {"sha": "91e63aee5e49020211443eec54f3c776b0be92e7", "filename": "compiler/rustc_target/src/spec/s390x_unknown_linux_musl.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/588a25a6f8bfeec3a6bb8d8f498b0ed0794f7096/compiler%2Frustc_target%2Fsrc%2Fspec%2Fs390x_unknown_linux_musl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/588a25a6f8bfeec3a6bb8d8f498b0ed0794f7096/compiler%2Frustc_target%2Fsrc%2Fspec%2Fs390x_unknown_linux_musl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_target%2Fsrc%2Fspec%2Fs390x_unknown_linux_musl.rs?ref=588a25a6f8bfeec3a6bb8d8f498b0ed0794f7096", "patch": "@@ -6,9 +6,9 @@ pub fn target() -> Target {\n     base.endian = Endian::Big;\n     // z10 is the oldest CPU supported by LLVM\n     base.cpu = \"z10\".into();\n-    // FIXME: The data_layout string below and the ABI implementation in\n-    // cabi_s390x.rs are for now hard-coded to assume the no-vector ABI.\n-    // Pass the -vector feature string to LLVM to respect this assumption.\n+    // FIXME: The ABI implementation in cabi_s390x.rs is for now hard-coded to assume the no-vector\n+    // ABI. Pass the -vector feature string to LLVM to respect this assumption. On LLVM < 16, we\n+    // also strip v128 from the data_layout below to match the older LLVM's expectation.\n     base.features = \"-vector\".into();\n     base.max_atomic_width = Some(64);\n     base.min_global_align = Some(16);\n@@ -18,7 +18,7 @@ pub fn target() -> Target {\n     Target {\n         llvm_target: \"s390x-unknown-linux-musl\".into(),\n         pointer_width: 64,\n-        data_layout: \"E-m:e-i1:8:16-i8:8:16-i64:64-f128:64-a:8:16-n32:64\".into(),\n+        data_layout: \"E-m:e-i1:8:16-i8:8:16-i64:64-f128:64-v128:64-a:8:16-n32:64\".into(),\n         arch: \"s390x\".into(),\n         options: base,\n     }"}]}