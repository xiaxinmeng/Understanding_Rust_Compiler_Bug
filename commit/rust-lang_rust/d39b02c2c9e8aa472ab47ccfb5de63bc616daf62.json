{"sha": "d39b02c2c9e8aa472ab47ccfb5de63bc616daf62", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQzOWIwMmMyYzllOGFhNDcyYWI0N2NjZmI1ZGU2M2JjNjE2ZGFmNjI=", "commit": {"author": {"name": "Tatsuyuki Ishi", "email": "ishitatsuyuki@gmail.com", "date": "2018-03-25T07:08:03Z"}, "committer": {"name": "Tatsuyuki Ishi", "email": "ishitatsuyuki@gmail.com", "date": "2018-03-25T07:08:03Z"}, "message": "Use a more conservative way to deinit stack guard", "tree": {"sha": "157abeb2a25f800799450d092bbe4814824d1b57", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/157abeb2a25f800799450d092bbe4814824d1b57"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d39b02c2c9e8aa472ab47ccfb5de63bc616daf62", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d39b02c2c9e8aa472ab47ccfb5de63bc616daf62", "html_url": "https://github.com/rust-lang/rust/commit/d39b02c2c9e8aa472ab47ccfb5de63bc616daf62", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d39b02c2c9e8aa472ab47ccfb5de63bc616daf62/comments", "author": {"login": "ishitatsuyuki", "id": 12389383, "node_id": "MDQ6VXNlcjEyMzg5Mzgz", "avatar_url": "https://avatars.githubusercontent.com/u/12389383?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ishitatsuyuki", "html_url": "https://github.com/ishitatsuyuki", "followers_url": "https://api.github.com/users/ishitatsuyuki/followers", "following_url": "https://api.github.com/users/ishitatsuyuki/following{/other_user}", "gists_url": "https://api.github.com/users/ishitatsuyuki/gists{/gist_id}", "starred_url": "https://api.github.com/users/ishitatsuyuki/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ishitatsuyuki/subscriptions", "organizations_url": "https://api.github.com/users/ishitatsuyuki/orgs", "repos_url": "https://api.github.com/users/ishitatsuyuki/repos", "events_url": "https://api.github.com/users/ishitatsuyuki/events{/privacy}", "received_events_url": "https://api.github.com/users/ishitatsuyuki/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ishitatsuyuki", "id": 12389383, "node_id": "MDQ6VXNlcjEyMzg5Mzgz", "avatar_url": "https://avatars.githubusercontent.com/u/12389383?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ishitatsuyuki", "html_url": "https://github.com/ishitatsuyuki", "followers_url": "https://api.github.com/users/ishitatsuyuki/followers", "following_url": "https://api.github.com/users/ishitatsuyuki/following{/other_user}", "gists_url": "https://api.github.com/users/ishitatsuyuki/gists{/gist_id}", "starred_url": "https://api.github.com/users/ishitatsuyuki/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ishitatsuyuki/subscriptions", "organizations_url": "https://api.github.com/users/ishitatsuyuki/orgs", "repos_url": "https://api.github.com/users/ishitatsuyuki/repos", "events_url": "https://api.github.com/users/ishitatsuyuki/events{/privacy}", "received_events_url": "https://api.github.com/users/ishitatsuyuki/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "91279904345e2ecd3f52b17339183bbe3bd11203", "url": "https://api.github.com/repos/rust-lang/rust/commits/91279904345e2ecd3f52b17339183bbe3bd11203", "html_url": "https://github.com/rust-lang/rust/commit/91279904345e2ecd3f52b17339183bbe3bd11203"}], "stats": {"total": 20, "additions": 15, "deletions": 5}, "files": [{"sha": "6064b55489efb0796491e67869398c94d0f190e0", "filename": "src/libstd/sys/unix/thread.rs", "status": "modified", "additions": 15, "deletions": 5, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/d39b02c2c9e8aa472ab47ccfb5de63bc616daf62/src%2Flibstd%2Fsys%2Funix%2Fthread.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d39b02c2c9e8aa472ab47ccfb5de63bc616daf62/src%2Flibstd%2Fsys%2Funix%2Fthread.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Funix%2Fthread.rs?ref=d39b02c2c9e8aa472ab47ccfb5de63bc616daf62", "patch": "@@ -223,8 +223,8 @@ pub mod guard {\n #[cfg_attr(test, allow(dead_code))]\n pub mod guard {\n     use libc;\n-    use libc::{mmap, munmap};\n-    use libc::{PROT_NONE, MAP_PRIVATE, MAP_ANON, MAP_FAILED, MAP_FIXED};\n+    use libc::mmap;\n+    use libc::{PROT_NONE, PROT_READ, PROT_WRITE, MAP_PRIVATE, MAP_ANON, MAP_FAILED, MAP_FIXED};\n     use ops::Range;\n     use sys::os;\n \n@@ -347,9 +347,19 @@ pub mod guard {\n     pub unsafe fn deinit() {\n         if !cfg!(target_os = \"linux\") {\n             if let Some(stackaddr) = get_stack_start_aligned() {\n-                // Undo the guard page mapping.\n-                if munmap(stackaddr, PAGE_SIZE) != 0 {\n-                    panic!(\"unable to deallocate the guard page\");\n+                // Remove the protection on the guard page.\n+                // FIXME: we cannot unmap the page, because when we mmap()\n+                // above it may be already mapped by the OS, which we can't\n+                // detect from mmap()'s return value. If we unmap this page,\n+                // it will lead to failure growing stack size on platforms like\n+                // macOS. Instead, just restore the page to a writable state.\n+                // This ain't Linux, so we probably don't need to care about\n+                // execstack.\n+                let result = mmap(stackaddr, PAGE_SIZE, PROT_READ | PROT_WRITE,\n+                                  MAP_PRIVATE | MAP_ANON | MAP_FIXED, -1, 0);\n+\n+                if result != stackaddr || result == MAP_FAILED {\n+                    panic!(\"unable to reset the guard page\");\n                 }\n             }\n         }"}]}