{"sha": "6d7294a00c3f831ed7d60a530911bff67f4e54ba", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZkNzI5NGEwMGMzZjgzMWVkN2Q2MGE1MzA5MTFiZmY2N2Y0ZTU0YmE=", "commit": {"author": {"name": "Aaron Hill", "email": "aa1ronham@gmail.com", "date": "2021-03-21T04:17:19Z"}, "committer": {"name": "Aaron Hill", "email": "aa1ronham@gmail.com", "date": "2021-03-21T04:41:12Z"}, "message": "Perform 'deep recollection' in test helper macros\n\nCurrently, the print helper macro performs 'recollection' by doing\n`token_stream.into_iter().collect()`. However, this will not affect\nnonterminals that occur nested inside delimited groups, since the\nwrapping delimited group will be left untouched.\n\nThis commit adds 'deep recollection', which recursively recollects every\ndelimited group in the token stream. As with normal recollection, we\nonly print out something if deep recollection results in a different\nstringified token stream.\n\nThis is useful for catching bugs where we update the AST of a\nnonterminal (which affects pretty-printing), but do not update the\nattatched `TokenStream`", "tree": {"sha": "4ab5bd0b59be4d3b716b2d1feddfbef390b54fcb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4ab5bd0b59be4d3b716b2d1feddfbef390b54fcb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6d7294a00c3f831ed7d60a530911bff67f4e54ba", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE7J9Gc3TfBwj2K399tAh+UQ6YsWQFAmBWzmkACgkQtAh+UQ6Y\nsWTzFQ//ah1mIttR9t35GHiM/GbJFrMZb+dsYuE2UlLOqz9ktPbOIOS36ORVt4HT\n9R2ugv+0SpyxtB2ymWq5n0T5v8peMl0ARJEokkQvnMiRWK6DERCTOz366NAk1wS5\nWjfACZlPeSy4ZBZYi4IUz7MWy50Lk57agdpsAb0/PMULrbN+GLTQVlwPmi/RxiJR\nz1ErSgU1jDYKZ9OQT2Y/ZrgRjsSkoQDAH2rq++krsrY99EjaRgDb1QPrBkmYPKSR\nt1AUvNZTCJhzfUzhdsyNW33y933GsOC1m0KAOF7FGPcYbeCoFRRwurenUzlttP+K\ntQMYsQxq2KdklKJSwFHnnZz9xB6F8pyrY3T5k4TZDvE09lXme7Sg2EJaAwd8HLOR\nJP3w2FDco5xJJH4geSu8VoHxpIM0ZYShvfAVogQ3V5B7mkYGautNFhUB7idS9ejX\nfEBrLi6kTTGqV2sCVX110yR/exe72IXQnGTz/jKsZAxAqpM+bFR1JZ5NUp0WnRAh\nm6iIzxjPSf28Q9G4MNU/+l++xh2mPcvRBu4DdWDskmGfquYWB7k61xqPLgNdp/cH\niE+zKB9yPYO1+AwfVhiWlbokp76ypeqc+JVC/XOtd+LlAM0C/2iaGfWPGq7NZRLi\nhRjNKE8gpQ1yxm2mhGsoR0NJsKiWSm/CjkmHdv9cCD27VviIiEw=\n=0B1O\n-----END PGP SIGNATURE-----", "payload": "tree 4ab5bd0b59be4d3b716b2d1feddfbef390b54fcb\nparent 61edfd591cedff66fca639c02f66984f6271e5a6\nauthor Aaron Hill <aa1ronham@gmail.com> 1616300239 -0400\ncommitter Aaron Hill <aa1ronham@gmail.com> 1616301672 -0400\n\nPerform 'deep recollection' in test helper macros\n\nCurrently, the print helper macro performs 'recollection' by doing\n`token_stream.into_iter().collect()`. However, this will not affect\nnonterminals that occur nested inside delimited groups, since the\nwrapping delimited group will be left untouched.\n\nThis commit adds 'deep recollection', which recursively recollects every\ndelimited group in the token stream. As with normal recollection, we\nonly print out something if deep recollection results in a different\nstringified token stream.\n\nThis is useful for catching bugs where we update the AST of a\nnonterminal (which affects pretty-printing), but do not update the\nattatched `TokenStream`\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6d7294a00c3f831ed7d60a530911bff67f4e54ba", "html_url": "https://github.com/rust-lang/rust/commit/6d7294a00c3f831ed7d60a530911bff67f4e54ba", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6d7294a00c3f831ed7d60a530911bff67f4e54ba/comments", "author": {"login": "Aaron1011", "id": 1408859, "node_id": "MDQ6VXNlcjE0MDg4NTk=", "avatar_url": "https://avatars.githubusercontent.com/u/1408859?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Aaron1011", "html_url": "https://github.com/Aaron1011", "followers_url": "https://api.github.com/users/Aaron1011/followers", "following_url": "https://api.github.com/users/Aaron1011/following{/other_user}", "gists_url": "https://api.github.com/users/Aaron1011/gists{/gist_id}", "starred_url": "https://api.github.com/users/Aaron1011/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Aaron1011/subscriptions", "organizations_url": "https://api.github.com/users/Aaron1011/orgs", "repos_url": "https://api.github.com/users/Aaron1011/repos", "events_url": "https://api.github.com/users/Aaron1011/events{/privacy}", "received_events_url": "https://api.github.com/users/Aaron1011/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Aaron1011", "id": 1408859, "node_id": "MDQ6VXNlcjE0MDg4NTk=", "avatar_url": "https://avatars.githubusercontent.com/u/1408859?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Aaron1011", "html_url": "https://github.com/Aaron1011", "followers_url": "https://api.github.com/users/Aaron1011/followers", "following_url": "https://api.github.com/users/Aaron1011/following{/other_user}", "gists_url": "https://api.github.com/users/Aaron1011/gists{/gist_id}", "starred_url": "https://api.github.com/users/Aaron1011/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Aaron1011/subscriptions", "organizations_url": "https://api.github.com/users/Aaron1011/orgs", "repos_url": "https://api.github.com/users/Aaron1011/repos", "events_url": "https://api.github.com/users/Aaron1011/events{/privacy}", "received_events_url": "https://api.github.com/users/Aaron1011/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "61edfd591cedff66fca639c02f66984f6271e5a6", "url": "https://api.github.com/repos/rust-lang/rust/commits/61edfd591cedff66fca639c02f66984f6271e5a6", "html_url": "https://github.com/rust-lang/rust/commit/61edfd591cedff66fca639c02f66984f6271e5a6"}], "stats": {"total": 35, "additions": 34, "deletions": 1}, "files": [{"sha": "7a46aee462b7db456069e6aaff5c332860087819", "filename": "src/test/ui/proc-macro/auxiliary/test-macros.rs", "status": "modified", "additions": 32, "deletions": 1, "changes": 33, "blob_url": "https://github.com/rust-lang/rust/blob/6d7294a00c3f831ed7d60a530911bff67f4e54ba/src%2Ftest%2Fui%2Fproc-macro%2Fauxiliary%2Ftest-macros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6d7294a00c3f831ed7d60a530911bff67f4e54ba/src%2Ftest%2Fui%2Fproc-macro%2Fauxiliary%2Ftest-macros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fauxiliary%2Ftest-macros.rs?ref=6d7294a00c3f831ed7d60a530911bff67f4e54ba", "patch": "@@ -83,21 +83,52 @@ fn print_helper(input: TokenStream, kind: &str) -> TokenStream {\n     print_helper_ext(input, kind, true)\n }\n \n+fn deep_recollect(input: TokenStream) -> TokenStream {\n+    input.into_iter().map(|tree| {\n+        match tree {\n+            TokenTree::Group(group) => {\n+                let inner = deep_recollect(group.stream());\n+                let mut new_group = TokenTree::Group(\n+                    proc_macro::Group::new(group.delimiter(), inner)\n+                );\n+                new_group.set_span(group.span());\n+                new_group\n+            }\n+            _ => tree,\n+        }\n+    }).collect()\n+}\n+\n fn print_helper_ext(input: TokenStream, kind: &str, debug: bool) -> TokenStream {\n     let input_display = format!(\"{}\", input);\n     let input_debug = format!(\"{:#?}\", input);\n-    let recollected = input.into_iter().collect();\n+    let recollected = input.clone().into_iter().collect();\n     let recollected_display = format!(\"{}\", recollected);\n     let recollected_debug = format!(\"{:#?}\", recollected);\n+\n+    let deep_recollected = deep_recollect(input);\n+    let deep_recollected_display = format!(\"{}\", deep_recollected);\n+    let deep_recollected_debug = format!(\"{:#?}\", deep_recollected);\n+\n+\n+\n     println!(\"PRINT-{} INPUT (DISPLAY): {}\", kind, input_display);\n     if recollected_display != input_display {\n         println!(\"PRINT-{} RE-COLLECTED (DISPLAY): {}\", kind, recollected_display);\n     }\n+\n+    if deep_recollected_display != recollected_display {\n+        println!(\"PRINT-{} DEEP-RE-COLLECTED (DISPLAY): {}\", kind, deep_recollected_display);\n+    }\n+\n     if debug {\n         println!(\"PRINT-{} INPUT (DEBUG): {}\", kind, input_debug);\n         if recollected_debug != input_debug {\n             println!(\"PRINT-{} RE-COLLECTED (DEBUG): {}\", kind, recollected_debug);\n         }\n+        if deep_recollected_debug != recollected_debug {\n+            println!(\"PRINT-{} DEEP-RE-COLLETED (DEBUG): {}\", kind, deep_recollected_debug);\n+        }\n     }\n     recollected\n }"}, {"sha": "9b467a5970bab0d2df0c9f93c3c9bc8c592f6b71", "filename": "src/test/ui/proc-macro/issue-78675-captured-inner-attrs.stdout", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/6d7294a00c3f831ed7d60a530911bff67f4e54ba/src%2Ftest%2Fui%2Fproc-macro%2Fissue-78675-captured-inner-attrs.stdout", "raw_url": "https://github.com/rust-lang/rust/raw/6d7294a00c3f831ed7d60a530911bff67f4e54ba/src%2Ftest%2Fui%2Fproc-macro%2Fissue-78675-captured-inner-attrs.stdout", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fissue-78675-captured-inner-attrs.stdout?ref=6d7294a00c3f831ed7d60a530911bff67f4e54ba", "patch": "@@ -1,6 +1,7 @@\n PRINT-BANG INPUT (DISPLAY): foo ! { #[fake_attr] mod bar {\n     #![doc = r\" Foo\"]\n } }\n+PRINT-BANG DEEP-RE-COLLECTED (DISPLAY): foo ! { #[fake_attr] mod bar { # ! [doc = r\" Foo\"] } }\n PRINT-BANG INPUT (DEBUG): TokenStream [\n     Ident {\n         ident: \"foo\","}, {"sha": "4ffe3f35e8e42fe10954cd218d5ff35d184ed7c0", "filename": "src/test/ui/proc-macro/nodelim-groups.stdout", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/6d7294a00c3f831ed7d60a530911bff67f4e54ba/src%2Ftest%2Fui%2Fproc-macro%2Fnodelim-groups.stdout", "raw_url": "https://github.com/rust-lang/rust/raw/6d7294a00c3f831ed7d60a530911bff67f4e54ba/src%2Ftest%2Fui%2Fproc-macro%2Fnodelim-groups.stdout", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fnodelim-groups.stdout?ref=6d7294a00c3f831ed7d60a530911bff67f4e54ba", "patch": "@@ -71,6 +71,7 @@ PRINT-BANG INPUT (DEBUG): TokenStream [\n     },\n ]\n PRINT-BANG INPUT (DISPLAY): \"hi\" \"hello\".len() + \"world\".len() (1 + 1)\n+PRINT-BANG DEEP-RE-COLLECTED (DISPLAY): \"hi\" \"hello\" . len() + \"world\" . len() (1 + 1)\n PRINT-BANG INPUT (DEBUG): TokenStream [\n     Literal {\n         kind: Str,"}]}