{"sha": "f2ba2048d1afb816623d037f265f4445a2f44b54", "node_id": "MDY6Q29tbWl0NzI0NzEyOmYyYmEyMDQ4ZDFhZmI4MTY2MjNkMDM3ZjI2NWY0NDQ1YTJmNDRiNTQ=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2021-01-15T12:49:59Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2021-01-15T12:49:59Z"}, "message": "Insert `;` when completing keywords in let", "tree": {"sha": "e5b5f19b0207028a0ac99d7b211d843cba6f9b8c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e5b5f19b0207028a0ac99d7b211d843cba6f9b8c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f2ba2048d1afb816623d037f265f4445a2f44b54", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f2ba2048d1afb816623d037f265f4445a2f44b54", "html_url": "https://github.com/rust-lang/rust/commit/f2ba2048d1afb816623d037f265f4445a2f44b54", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f2ba2048d1afb816623d037f265f4445a2f44b54/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "41ea2602017027e22f5a68df3d6ad98e2ae880f8", "url": "https://api.github.com/repos/rust-lang/rust/commits/41ea2602017027e22f5a68df3d6ad98e2ae880f8", "html_url": "https://github.com/rust-lang/rust/commit/41ea2602017027e22f5a68df3d6ad98e2ae880f8"}], "stats": {"total": 76, "additions": 69, "deletions": 7}, "files": [{"sha": "c1af348dc642926e285333887a0be454e6651a2c", "filename": "crates/completion/src/completions/keyword.rs", "status": "modified", "additions": 57, "deletions": 1, "changes": 58, "blob_url": "https://github.com/rust-lang/rust/blob/f2ba2048d1afb816623d037f265f4445a2f44b54/crates%2Fcompletion%2Fsrc%2Fcompletions%2Fkeyword.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f2ba2048d1afb816623d037f265f4445a2f44b54/crates%2Fcompletion%2Fsrc%2Fcompletions%2Fkeyword.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fcompletion%2Fsrc%2Fcompletions%2Fkeyword.rs?ref=f2ba2048d1afb816623d037f265f4445a2f44b54", "patch": "@@ -161,7 +161,17 @@ fn add_keyword(ctx: &CompletionContext, acc: &mut Completions, kw: &str, snippet\n     let builder = CompletionItem::new(CompletionKind::Keyword, ctx.source_range(), kw)\n         .kind(CompletionItemKind::Keyword);\n     let builder = match ctx.config.snippet_cap {\n-        Some(cap) => builder.insert_snippet(cap, snippet),\n+        Some(cap) => {\n+            let tmp;\n+            let snippet = if snippet.ends_with('}') && ctx.incomplete_let {\n+                mark::hit!(let_semi);\n+                tmp = format!(\"{};\", snippet);\n+                &tmp\n+            } else {\n+                snippet\n+            };\n+            builder.insert_snippet(cap, snippet)\n+        }\n         None => builder.insert_text(if snippet.contains('$') { kw } else { snippet }),\n     };\n     acc.add(builder.build());\n@@ -601,4 +611,50 @@ fn foo() {\n             \"#]],\n         );\n     }\n+\n+    #[test]\n+    fn let_semi() {\n+        mark::check!(let_semi);\n+        check_edit(\n+            \"match\",\n+            r#\"\n+fn main() { let x = $0 }\n+\"#,\n+            r#\"\n+fn main() { let x = match $0 {}; }\n+\"#,\n+        );\n+\n+        check_edit(\n+            \"if\",\n+            r#\"\n+fn main() {\n+    let x = $0\n+    let y = 92;\n+}\n+\"#,\n+            r#\"\n+fn main() {\n+    let x = if $0 {};\n+    let y = 92;\n+}\n+\"#,\n+        );\n+\n+        check_edit(\n+            \"loop\",\n+            r#\"\n+fn main() {\n+    let x = $0\n+    bar();\n+}\n+\"#,\n+            r#\"\n+fn main() {\n+    let x = loop {$0};\n+    bar();\n+}\n+\"#,\n+        );\n+    }\n }"}, {"sha": "d809460e2b04fefdeacf12f7a09f2ddde6499797", "filename": "crates/completion/src/context.rs", "status": "modified", "additions": 12, "deletions": 6, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/f2ba2048d1afb816623d037f265f4445a2f44b54/crates%2Fcompletion%2Fsrc%2Fcontext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f2ba2048d1afb816623d037f265f4445a2f44b54/crates%2Fcompletion%2Fsrc%2Fcontext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fcompletion%2Fsrc%2Fcontext.rs?ref=f2ba2048d1afb816623d037f265f4445a2f44b54", "patch": "@@ -92,6 +92,7 @@ pub(crate) struct CompletionContext<'a> {\n     pub(super) has_item_list_or_source_file_parent: bool,\n     pub(super) for_is_prev2: bool,\n     pub(super) fn_is_prev: bool,\n+    pub(super) incomplete_let: bool,\n     pub(super) locals: Vec<(String, Local)>,\n }\n \n@@ -132,9 +133,9 @@ impl<'a> CompletionContext<'a> {\n             scope,\n             db,\n             config,\n+            position,\n             original_token,\n             token,\n-            position,\n             krate,\n             expected_type: None,\n             name_ref_syntax: None,\n@@ -155,30 +156,31 @@ impl<'a> CompletionContext<'a> {\n             is_expr: false,\n             is_new_item: false,\n             dot_receiver: None,\n+            dot_receiver_is_ambiguous_float_literal: false,\n             is_call: false,\n             is_pattern_call: false,\n             is_macro_call: false,\n             is_path_type: false,\n             has_type_args: false,\n-            dot_receiver_is_ambiguous_float_literal: false,\n             attribute_under_caret: None,\n             mod_declaration_under_caret: None,\n             unsafe_is_prev: false,\n-            in_loop_body: false,\n-            ref_pat_parent: false,\n-            bind_pat_parent: false,\n+            if_is_prev: false,\n             block_expr_parent: false,\n+            bind_pat_parent: false,\n+            ref_pat_parent: false,\n+            in_loop_body: false,\n             has_trait_parent: false,\n             has_impl_parent: false,\n             inside_impl_trait_block: false,\n             has_field_list_parent: false,\n             trait_as_prev_sibling: false,\n             impl_as_prev_sibling: false,\n-            if_is_prev: false,\n             is_match_arm: false,\n             has_item_list_or_source_file_parent: false,\n             for_is_prev2: false,\n             fn_is_prev: false,\n+            incomplete_let: false,\n             locals,\n         };\n \n@@ -270,6 +272,10 @@ impl<'a> CompletionContext<'a> {\n                 .filter(|module| module.item_list().is_none());\n         self.for_is_prev2 = for_is_prev2(syntax_element.clone());\n         self.fn_is_prev = fn_is_prev(syntax_element.clone());\n+        self.incomplete_let =\n+            syntax_element.ancestors().take(6).find_map(ast::LetStmt::cast).map_or(false, |it| {\n+                it.syntax().text_range().end() == syntax_element.text_range().end()\n+            });\n     }\n \n     fn fill("}]}