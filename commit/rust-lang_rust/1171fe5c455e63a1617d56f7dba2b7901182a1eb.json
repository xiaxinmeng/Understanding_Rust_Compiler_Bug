{"sha": "1171fe5c455e63a1617d56f7dba2b7901182a1eb", "node_id": "C_kwDOAAsO6NoAKDExNzFmZTVjNDU1ZTYzYTE2MTdkNTZmN2RiYTJiNzkwMTE4MmExZWI", "commit": {"author": {"name": "Boxy", "email": "supbscripter@gmail.com", "date": "2023-01-18T04:45:35Z"}, "committer": {"name": "Boxy", "email": "supbscripter@gmail.com", "date": "2023-01-18T04:45:43Z"}, "message": "i am free", "tree": {"sha": "a9acd2ad13718cd11347d9a9a3f056f3987f3103", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a9acd2ad13718cd11347d9a9a3f056f3987f3103"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1171fe5c455e63a1617d56f7dba2b7901182a1eb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1171fe5c455e63a1617d56f7dba2b7901182a1eb", "html_url": "https://github.com/rust-lang/rust/commit/1171fe5c455e63a1617d56f7dba2b7901182a1eb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1171fe5c455e63a1617d56f7dba2b7901182a1eb/comments", "author": {"login": "BoxyUwU", "id": 21149742, "node_id": "MDQ6VXNlcjIxMTQ5NzQy", "avatar_url": "https://avatars.githubusercontent.com/u/21149742?v=4", "gravatar_id": "", "url": "https://api.github.com/users/BoxyUwU", "html_url": "https://github.com/BoxyUwU", "followers_url": "https://api.github.com/users/BoxyUwU/followers", "following_url": "https://api.github.com/users/BoxyUwU/following{/other_user}", "gists_url": "https://api.github.com/users/BoxyUwU/gists{/gist_id}", "starred_url": "https://api.github.com/users/BoxyUwU/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/BoxyUwU/subscriptions", "organizations_url": "https://api.github.com/users/BoxyUwU/orgs", "repos_url": "https://api.github.com/users/BoxyUwU/repos", "events_url": "https://api.github.com/users/BoxyUwU/events{/privacy}", "received_events_url": "https://api.github.com/users/BoxyUwU/received_events", "type": "User", "site_admin": false}, "committer": {"login": "BoxyUwU", "id": 21149742, "node_id": "MDQ6VXNlcjIxMTQ5NzQy", "avatar_url": "https://avatars.githubusercontent.com/u/21149742?v=4", "gravatar_id": "", "url": "https://api.github.com/users/BoxyUwU", "html_url": "https://github.com/BoxyUwU", "followers_url": "https://api.github.com/users/BoxyUwU/followers", "following_url": "https://api.github.com/users/BoxyUwU/following{/other_user}", "gists_url": "https://api.github.com/users/BoxyUwU/gists{/gist_id}", "starred_url": "https://api.github.com/users/BoxyUwU/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/BoxyUwU/subscriptions", "organizations_url": "https://api.github.com/users/BoxyUwU/orgs", "repos_url": "https://api.github.com/users/BoxyUwU/repos", "events_url": "https://api.github.com/users/BoxyUwU/events{/privacy}", "received_events_url": "https://api.github.com/users/BoxyUwU/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a2a50f96f3532347a0ad61f2d6bfed4c64de4e54", "url": "https://api.github.com/repos/rust-lang/rust/commits/a2a50f96f3532347a0ad61f2d6bfed4c64de4e54", "html_url": "https://github.com/rust-lang/rust/commit/a2a50f96f3532347a0ad61f2d6bfed4c64de4e54"}], "stats": {"total": 33, "additions": 18, "deletions": 15}, "files": [{"sha": "aed7051bb993dc7d6d7a71257cbf6f9b397348d3", "filename": "compiler/rustc_middle/src/ty/print/pretty.rs", "status": "modified", "additions": 11, "deletions": 8, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/1171fe5c455e63a1617d56f7dba2b7901182a1eb/compiler%2Frustc_middle%2Fsrc%2Fty%2Fprint%2Fpretty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1171fe5c455e63a1617d56f7dba2b7901182a1eb/compiler%2Frustc_middle%2Fsrc%2Fty%2Fprint%2Fpretty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fty%2Fprint%2Fpretty.rs?ref=1171fe5c455e63a1617d56f7dba2b7901182a1eb", "patch": "@@ -1290,15 +1290,18 @@ pub trait PrettyPrinter<'tcx>:\n                         p!(print_value_path(def.did, substs))\n                     }\n                     DefKind::AnonConst => {\n-                        if def.is_local() {\n-                            let span = self.tcx().def_span(def.did);\n-                            if let Ok(snip) = self.tcx().sess.source_map().span_to_snippet(span) {\n-                                p!(write(\"{}\", snip))\n-                            } else {\n-                                p!(print_value_path(def.did, substs))\n-                            }\n+                        if def.is_local()\n+                            && let span = self.tcx().def_span(def.did)\n+                            && let Ok(snip) = self.tcx().sess.source_map().span_to_snippet(span)\n+                        {\n+                            p!(write(\"{}\", snip))\n                         } else {\n-                            p!(print_value_path(def.did, substs))\n+                            // Do not call `print_value_path` as if a parent of this anon const is an impl it will\n+                            // attempt to print out the impl trait ref i.e. `<T as Trait>::{constant#0}`. This would\n+                            // cause printing to enter an infinite recursion if the anon const is in the self type i.e.\n+                            // `impl<T: Default> Default for [T; 32 - 1 - 1 - 1] {`\n+                            // where we would try to print `<[T; /* print `constant#0` again */] as Default>::{constant#0}`\n+                            p!(write(\"{}::{}\", self.tcx().crate_name(def.did.krate), self.tcx().def_path(def.did).to_string_no_crate_verbose()))\n                         }\n                     }\n                     defkind => bug!(\"`{:?}` has unexpcted defkind {:?}\", ct, defkind),"}, {"sha": "798e45df8ca766f8c0bdf0daac9492cbe7b23944", "filename": "tests/mir-opt/nll/region_subtyping_basic.main.nll.0.32bit.mir", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1171fe5c455e63a1617d56f7dba2b7901182a1eb/tests%2Fmir-opt%2Fnll%2Fregion_subtyping_basic.main.nll.0.32bit.mir", "raw_url": "https://github.com/rust-lang/rust/raw/1171fe5c455e63a1617d56f7dba2b7901182a1eb/tests%2Fmir-opt%2Fnll%2Fregion_subtyping_basic.main.nll.0.32bit.mir", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fmir-opt%2Fnll%2Fregion_subtyping_basic.main.nll.0.32bit.mir?ref=1171fe5c455e63a1617d56f7dba2b7901182a1eb", "patch": "@@ -22,7 +22,7 @@\n |\n fn main() -> () {\n     let mut _0: ();                      // return place in scope 0 at $DIR/region_subtyping_basic.rs:+0:11: +0:11\n-    let mut _1: [usize; Const { ty: usize, kind: Value(Leaf(0x00000003)) }]; // in scope 0 at $DIR/region_subtyping_basic.rs:+1:9: +1:14\n+    let mut _1: [usize; Const(Value(Leaf(0x00000003)): usize)]; // in scope 0 at $DIR/region_subtyping_basic.rs:+1:9: +1:14\n     let _3: usize;                       // in scope 0 at $DIR/region_subtyping_basic.rs:+2:16: +2:17\n     let mut _4: usize;                   // in scope 0 at $DIR/region_subtyping_basic.rs:+2:14: +2:18\n     let mut _5: bool;                    // in scope 0 at $DIR/region_subtyping_basic.rs:+2:14: +2:18"}, {"sha": "4767bfc76ed9de92c1632622e26392765d54cb87", "filename": "tests/mir-opt/nll/region_subtyping_basic.main.nll.0.64bit.mir", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1171fe5c455e63a1617d56f7dba2b7901182a1eb/tests%2Fmir-opt%2Fnll%2Fregion_subtyping_basic.main.nll.0.64bit.mir", "raw_url": "https://github.com/rust-lang/rust/raw/1171fe5c455e63a1617d56f7dba2b7901182a1eb/tests%2Fmir-opt%2Fnll%2Fregion_subtyping_basic.main.nll.0.64bit.mir", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fmir-opt%2Fnll%2Fregion_subtyping_basic.main.nll.0.64bit.mir?ref=1171fe5c455e63a1617d56f7dba2b7901182a1eb", "patch": "@@ -22,7 +22,7 @@\n |\n fn main() -> () {\n     let mut _0: ();                      // return place in scope 0 at $DIR/region_subtyping_basic.rs:+0:11: +0:11\n-    let mut _1: [usize; Const { ty: usize, kind: Value(Leaf(0x0000000000000003)) }]; // in scope 0 at $DIR/region_subtyping_basic.rs:+1:9: +1:14\n+    let mut _1: [usize; Const(Value(Leaf(0x0000000000000003)): usize)]; // in scope 0 at $DIR/region_subtyping_basic.rs:+1:9: +1:14\n     let _3: usize;                       // in scope 0 at $DIR/region_subtyping_basic.rs:+2:16: +2:17\n     let mut _4: usize;                   // in scope 0 at $DIR/region_subtyping_basic.rs:+2:14: +2:18\n     let mut _5: bool;                    // in scope 0 at $DIR/region_subtyping_basic.rs:+2:14: +2:18"}, {"sha": "3926c830adb7a2f0762bb21f38ddc65e34913308", "filename": "tests/ui/const-generics/generic_const_exprs/non_local_anon_const_diagnostics.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1171fe5c455e63a1617d56f7dba2b7901182a1eb/tests%2Fui%2Fconst-generics%2Fgeneric_const_exprs%2Fnon_local_anon_const_diagnostics.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1171fe5c455e63a1617d56f7dba2b7901182a1eb/tests%2Fui%2Fconst-generics%2Fgeneric_const_exprs%2Fnon_local_anon_const_diagnostics.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fconst-generics%2Fgeneric_const_exprs%2Fnon_local_anon_const_diagnostics.stderr?ref=1171fe5c455e63a1617d56f7dba2b7901182a1eb", "patch": "@@ -2,10 +2,10 @@ error[E0308]: mismatched types\n   --> $DIR/non_local_anon_const_diagnostics.rs:12:43\n    |\n LL |     let _: anon_const_non_local::Foo<2> = anon_const_non_local::foo::<M>();\n-   |                                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `2`, found `foo::<M>::{constant#0}`\n+   |                                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `2`, found `anon_const_non_local::::foo::{constant#0}`\n    |\n    = note: expected constant `2`\n-              found constant `foo::<M>::{constant#0}`\n+              found constant `anon_const_non_local::::foo::{constant#0}`\n \n error: aborting due to previous error\n "}, {"sha": "0d79fc0c770698246470e96fbf2291491cd712bd", "filename": "tests/ui/limits/issue-15919-32.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1171fe5c455e63a1617d56f7dba2b7901182a1eb/tests%2Fui%2Flimits%2Fissue-15919-32.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1171fe5c455e63a1617d56f7dba2b7901182a1eb/tests%2Fui%2Flimits%2Fissue-15919-32.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Flimits%2Fissue-15919-32.stderr?ref=1171fe5c455e63a1617d56f7dba2b7901182a1eb", "patch": "@@ -1,4 +1,4 @@\n-error: values of the type `[usize; 4294967295]` are too big for the current architecture\n+error: values of the type `[usize; usize::MAX]` are too big for the current architecture\n   --> $DIR/issue-15919-32.rs:9:9\n    |\n LL |     let x = [0usize; 0xffff_ffff];"}, {"sha": "56cf5d831bd7e7491d8b75baacd8c05a3b7a5b1e", "filename": "tests/ui/limits/issue-17913.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1171fe5c455e63a1617d56f7dba2b7901182a1eb/tests%2Fui%2Flimits%2Fissue-17913.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1171fe5c455e63a1617d56f7dba2b7901182a1eb/tests%2Fui%2Flimits%2Fissue-17913.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Flimits%2Fissue-17913.rs?ref=1171fe5c455e63a1617d56f7dba2b7901182a1eb", "patch": "@@ -1,5 +1,5 @@\n // build-fail\n-// normalize-stderr-test \"\\[&usize; \\d+\\]\" -> \"[&usize; N]\"\n+// normalize-stderr-test \"\\[&usize; \\d+\\]\" -> \"[&usize; usize::MAX]\"\n // error-pattern: too big for the current architecture\n \n // FIXME https://github.com/rust-lang/rust/issues/59774"}, {"sha": "684db53a9190988b8ab31b73ef7a893fe67ec5ae", "filename": "tests/ui/limits/issue-17913.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1171fe5c455e63a1617d56f7dba2b7901182a1eb/tests%2Fui%2Flimits%2Fissue-17913.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1171fe5c455e63a1617d56f7dba2b7901182a1eb/tests%2Fui%2Flimits%2Fissue-17913.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Flimits%2Fissue-17913.stderr?ref=1171fe5c455e63a1617d56f7dba2b7901182a1eb", "patch": "@@ -1,4 +1,4 @@\n-error: values of the type `[&usize; N]` are too big for the current architecture\n+error: values of the type `[&usize; usize::MAX]` are too big for the current architecture\n \n error: aborting due to previous error\n "}]}