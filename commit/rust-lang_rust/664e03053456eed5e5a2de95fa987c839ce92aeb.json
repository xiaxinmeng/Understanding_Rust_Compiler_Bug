{"sha": "664e03053456eed5e5a2de95fa987c839ce92aeb", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY2NGUwMzA1MzQ1NmVlZDVlNWEyZGU5NWZhOTg3YzgzOWNlOTJhZWI=", "commit": {"author": {"name": "topecongiro", "email": "seuchida@gmail.com", "date": "2017-11-13T07:42:04Z"}, "committer": {"name": "topecongiro", "email": "seuchida@gmail.com", "date": "2017-11-13T08:33:32Z"}, "message": "Update tests", "tree": {"sha": "38856481c777e8d92089919d0a127a4c4edf91eb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/38856481c777e8d92089919d0a127a4c4edf91eb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/664e03053456eed5e5a2de95fa987c839ce92aeb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/664e03053456eed5e5a2de95fa987c839ce92aeb", "html_url": "https://github.com/rust-lang/rust/commit/664e03053456eed5e5a2de95fa987c839ce92aeb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/664e03053456eed5e5a2de95fa987c839ce92aeb/comments", "author": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "committer": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6003eae6a3e7107a74f84e5d496df8542572d92c", "url": "https://api.github.com/repos/rust-lang/rust/commits/6003eae6a3e7107a74f84e5d496df8542572d92c", "html_url": "https://github.com/rust-lang/rust/commit/6003eae6a3e7107a74f84e5d496df8542572d92c"}], "stats": {"total": 131, "additions": 54, "deletions": 77}, "files": [{"sha": "a581703b7e534cfdd7252a18c1838c91cdfe8bff", "filename": "tests/target/chains-visual.rs", "status": "modified", "additions": 25, "deletions": 37, "changes": 62, "blob_url": "https://github.com/rust-lang/rust/blob/664e03053456eed5e5a2de95fa987c839ce92aeb/tests%2Ftarget%2Fchains-visual.rs", "raw_url": "https://github.com/rust-lang/rust/raw/664e03053456eed5e5a2de95fa987c839ce92aeb/tests%2Ftarget%2Fchains-visual.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fchains-visual.rs?ref=664e03053456eed5e5a2de95fa987c839ce92aeb", "patch": "@@ -17,17 +17,15 @@ fn main() {\n     // Test case where first chain element isn't a path, but is shorter than\n     // the size of a tab.\n     x().y(|| match cond() {\n-        true => (),\n-        false => (),\n-    });\n+              true => (),\n+              false => (),\n+          });\n \n-    loong_func().quux(move || {\n-        if true {\n-            1\n-        } else {\n-            2\n-        }\n-    });\n+    loong_func().quux(move || if true {\n+                          1\n+                      } else {\n+                          2\n+                      });\n \n     some_fuuuuuuuuunction().method_call_a(aaaaa, bbbbb, |c| {\n         let x = c;\n@@ -49,10 +47,10 @@ fn main() {\n         });\n     });\n \n-    let suuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuum =\n-        xxxxxxx.map(|x| x + 5)\n-               .map(|x| x / 2)\n-               .fold(0, |acc, x| acc + x);\n+    let suuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuum = xxxxxxx.map(|x| x + 5)\n+                                                                          .map(|x| x / 2)\n+                                                                          .fold(0,\n+                                                                                |acc, x| acc + x);\n \n     aaaaaaaaaaaaaaaa.map(|x| {\n         x += 1;\n@@ -62,15 +60,11 @@ fn main() {\n }\n \n fn floaters() {\n-    let z = Foo {\n-        field1: val1,\n-        field2: val2,\n-    };\n-\n-    let x = Foo {\n-                field1: val1,\n-                field2: val2,\n-            }.method_call()\n+    let z = Foo { field1: val1,\n+                  field2: val2, };\n+\n+    let x = Foo { field1: val1,\n+                  field2: val2, }.method_call()\n             .method_call();\n \n     let y = if cond {\n@@ -83,12 +77,10 @@ fn floaters() {\n         match x {\n             PushParam => {\n                 // params are 1-indexed\n-                stack.push(\n-                    mparams[match cur.to_digit(10) {\n-                                Some(d) => d as usize - 1,\n-                                None => return Err(\"bad param number\".to_owned()),\n-                            }].clone(),\n-                );\n+                stack.push(mparams[match cur.to_digit(10) {\n+                                       Some(d) => d as usize - 1,\n+                                       None => return Err(\"bad param number\".to_owned()),\n+                                   }].clone());\n             }\n         }\n     }\n@@ -106,10 +98,8 @@ fn floaters() {\n     })\n                   .quux();\n \n-    Foo {\n-        y: i_am_multi_line,\n-        z: ok,\n-    }.baz(|| {\n+    Foo { y: i_am_multi_line,\n+          z: ok, }.baz(|| {\n         force();\n         multiline();\n     })\n@@ -157,10 +147,8 @@ fn issue1434() {\n     for _ in 0..100 {\n         let prototype_id =\n             PrototypeIdData::from_reader::<_, B>(&mut self.file_cursor).chain_err(|| {\n-                format!(\n-                    \"could not read prototype ID at offset {:#010x}\",\n-                    current_offset\n-                )\n+                format!(\"could not read prototype ID at offset {:#010x}\",\n+                        current_offset)\n             })?;\n     }\n }"}, {"sha": "491075a146d1b378e2b24331baca241a74d73d75", "filename": "tests/target/configs-generics_indent-visual.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/664e03053456eed5e5a2de95fa987c839ce92aeb/tests%2Ftarget%2Fconfigs-generics_indent-visual.rs", "raw_url": "https://github.com/rust-lang/rust/raw/664e03053456eed5e5a2de95fa987c839ce92aeb/tests%2Ftarget%2Fconfigs-generics_indent-visual.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fconfigs-generics_indent-visual.rs?ref=664e03053456eed5e5a2de95fa987c839ce92aeb", "patch": "@@ -14,7 +14,7 @@ fn lorem<Ipsum: Eq = usize,\n     amet: Amet,\n     adipiscing: Adipiscing,\n     consectetur: Consectetur,\n-    elit: Elit,\n-) -> T {\n+    elit: Elit)\n+    -> T {\n     // body\n }"}, {"sha": "45799dcd5fcdd385656fba0db421fd0aba32d61a", "filename": "tests/target/configs-where_pred_indent-visual.rs", "status": "modified", "additions": 4, "deletions": 5, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/664e03053456eed5e5a2de95fa987c839ce92aeb/tests%2Ftarget%2Fconfigs-where_pred_indent-visual.rs", "raw_url": "https://github.com/rust-lang/rust/raw/664e03053456eed5e5a2de95fa987c839ce92aeb/tests%2Ftarget%2Fconfigs-where_pred_indent-visual.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fconfigs-where_pred_indent-visual.rs?ref=664e03053456eed5e5a2de95fa987c839ce92aeb", "patch": "@@ -2,11 +2,10 @@\n // Where predicate indent\n \n fn lorem<Ipsum, Dolor, Sit, Amet>() -> T\n-where\n-    Ipsum: Eq,\n-    Dolor: Eq,\n-    Sit: Eq,\n-    Amet: Eq,\n+    where Ipsum: Eq,\n+          Dolor: Eq,\n+          Sit: Eq,\n+          Amet: Eq\n {\n     // body\n }"}, {"sha": "369feae71d25079bedff046ab243240fa4f0e50a", "filename": "tests/target/struct_tuple_visual.rs", "status": "modified", "additions": 23, "deletions": 33, "changes": 56, "blob_url": "https://github.com/rust-lang/rust/blob/664e03053456eed5e5a2de95fa987c839ce92aeb/tests%2Ftarget%2Fstruct_tuple_visual.rs", "raw_url": "https://github.com/rust-lang/rust/raw/664e03053456eed5e5a2de95fa987c839ce92aeb/tests%2Ftarget%2Fstruct_tuple_visual.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fstruct_tuple_visual.rs?ref=664e03053456eed5e5a2de95fa987c839ce92aeb", "patch": "@@ -5,43 +5,33 @@\n fn foo() {\n     Fooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo(f(), b());\n \n-    Foooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo(\n-        // Comment\n-        foo(), // Comment\n-        // Comment\n-        bar(), // Comment\n-    );\n+    Foooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo(// Comment\n+                                                                                      foo(), /* Comment */\n+                                                                                      // Comment\n+                                                                                      bar() /* Comment */);\n \n     Foo(Bar, f());\n \n-    Quux(\n-        if cond {\n-            bar();\n-        },\n-        baz(),\n-    );\n+    Quux(if cond {\n+             bar();\n+         },\n+         baz());\n \n-    Baz(\n-        xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx,\n-        zzzzz, // test\n-    );\n+    Baz(xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx,\n+        zzzzz /* test */);\n \n-    A(\n-        // Lorem ipsum dolor sit amet, consectetur adipiscing elit. Donec a diam lectus. Sed sit\n-        // amet ipsum mauris. Maecenas congue ligula ac quam viverra nec consectetur ante\n-        // hendrerit. Donec et mollis dolor.\n-        item(),\n-        // Praesent et diam eget libero egestas mattis sit amet vitae augue.\n-        // Nam tincidunt congue enim, ut porta lorem lacinia consectetur.\n-        Item,\n-    );\n+    A(// Lorem ipsum dolor sit amet, consectetur adipiscing elit. Donec a diam lectus. Sed sit\n+      // amet ipsum mauris. Maecenas congue ligula ac quam viverra nec consectetur ante\n+      // hendrerit. Donec et mollis dolor.\n+      item(),\n+      // Praesent et diam eget libero egestas mattis sit amet vitae augue.\n+      // Nam tincidunt congue enim, ut porta lorem lacinia consectetur.\n+      Item);\n \n-    Diagram(\n-        //                 o        This graph demonstrates how\n-        //                / \\       significant whitespace is\n-        //               o   o      preserved.\n-        //              /|\\   \\\n-        //             o o o   o\n-        G,\n-    )\n+    Diagram(//                 o        This graph demonstrates how\n+            //                / \\       significant whitespace is\n+            //               o   o      preserved.\n+            //              /|\\   \\\n+            //             o o o   o\n+            G)\n }"}]}