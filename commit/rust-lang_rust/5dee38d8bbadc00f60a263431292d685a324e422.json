{"sha": "5dee38d8bbadc00f60a263431292d685a324e422", "node_id": "MDY6Q29tbWl0NzI0NzEyOjVkZWUzOGQ4YmJhZGMwMGY2MGEyNjM0MzEyOTJkNjg1YTMyNGU0MjI=", "commit": {"author": {"name": "Vishnunarayan K I", "email": "appukuttancr@gmail.com", "date": "2020-11-02T07:00:38Z"}, "committer": {"name": "Vishnunarayan K I", "email": "appukuttancr@gmail.com", "date": "2020-11-02T07:00:38Z"}, "message": "update some ui tests and update move ref drop semantics output", "tree": {"sha": "2f4c4099813756b811f1aabbb80a8dc2b410d51d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2f4c4099813756b811f1aabbb80a8dc2b410d51d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5dee38d8bbadc00f60a263431292d685a324e422", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5dee38d8bbadc00f60a263431292d685a324e422", "html_url": "https://github.com/rust-lang/rust/commit/5dee38d8bbadc00f60a263431292d685a324e422", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5dee38d8bbadc00f60a263431292d685a324e422/comments", "author": {"login": "vn-ki", "id": 31964688, "node_id": "MDQ6VXNlcjMxOTY0Njg4", "avatar_url": "https://avatars.githubusercontent.com/u/31964688?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vn-ki", "html_url": "https://github.com/vn-ki", "followers_url": "https://api.github.com/users/vn-ki/followers", "following_url": "https://api.github.com/users/vn-ki/following{/other_user}", "gists_url": "https://api.github.com/users/vn-ki/gists{/gist_id}", "starred_url": "https://api.github.com/users/vn-ki/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vn-ki/subscriptions", "organizations_url": "https://api.github.com/users/vn-ki/orgs", "repos_url": "https://api.github.com/users/vn-ki/repos", "events_url": "https://api.github.com/users/vn-ki/events{/privacy}", "received_events_url": "https://api.github.com/users/vn-ki/received_events", "type": "User", "site_admin": false}, "committer": {"login": "vn-ki", "id": 31964688, "node_id": "MDQ6VXNlcjMxOTY0Njg4", "avatar_url": "https://avatars.githubusercontent.com/u/31964688?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vn-ki", "html_url": "https://github.com/vn-ki", "followers_url": "https://api.github.com/users/vn-ki/followers", "following_url": "https://api.github.com/users/vn-ki/following{/other_user}", "gists_url": "https://api.github.com/users/vn-ki/gists{/gist_id}", "starred_url": "https://api.github.com/users/vn-ki/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vn-ki/subscriptions", "organizations_url": "https://api.github.com/users/vn-ki/orgs", "repos_url": "https://api.github.com/users/vn-ki/repos", "events_url": "https://api.github.com/users/vn-ki/events{/privacy}", "received_events_url": "https://api.github.com/users/vn-ki/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c93d25b6af6849f726bc52332fb993e8d6898a00", "url": "https://api.github.com/repos/rust-lang/rust/commits/c93d25b6af6849f726bc52332fb993e8d6898a00", "html_url": "https://github.com/rust-lang/rust/commit/c93d25b6af6849f726bc52332fb993e8d6898a00"}], "stats": {"total": 54, "additions": 27, "deletions": 27}, "files": [{"sha": "de410a8b3120c22dc4696ad1ecf6bb3d50ea074e", "filename": "src/test/ui/borrowck/borrowck-move-error-with-note.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5dee38d8bbadc00f60a263431292d685a324e422/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-move-error-with-note.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/5dee38d8bbadc00f60a263431292d685a324e422/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-move-error-with-note.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-move-error-with-note.stderr?ref=5dee38d8bbadc00f60a263431292d685a324e422", "patch": "@@ -1,4 +1,4 @@\n-error[E0507]: cannot move out of `f.0` which is behind a shared reference\n+error[E0507]: cannot move out of `f.1` which is behind a shared reference\n   --> $DIR/borrowck-move-error-with-note.rs:11:11\n    |\n LL |     match *f {"}, {"sha": "f7fa467c4682c566724b9e1858aefeed446e925f", "filename": "src/test/ui/borrowck/borrowck-slice-pattern-element-loan-slice.stderr", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/5dee38d8bbadc00f60a263431292d685a324e422/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-slice-pattern-element-loan-slice.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/5dee38d8bbadc00f60a263431292d685a324e422/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-slice-pattern-element-loan-slice.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-slice-pattern-element-loan-slice.stderr?ref=5dee38d8bbadc00f60a263431292d685a324e422", "patch": "@@ -32,23 +32,23 @@ error[E0502]: cannot borrow `s[..]` as mutable because it is also borrowed as im\n   --> $DIR/borrowck-slice-pattern-element-loan-slice.rs:25:23\n    |\n LL |     if let [.., _, ref from_end4, ref from_end3, _, ref from_end1] = *s {\n-   |                                   ------------- immutable borrow occurs here\n+   |                    ------------- immutable borrow occurs here\n ...\n LL |         if let [_, _, ref mut from_begin2, ..] = *s {\n    |                       ^^^^^^^^^^^^^^^^^^^ mutable borrow occurs here\n LL |             nop(&[from_begin2, from_end1, from_end3, from_end4]);\n-   |                                           --------- immutable borrow later used here\n+   |                                                      --------- immutable borrow later used here\n \n error[E0502]: cannot borrow `s[..]` as mutable because it is also borrowed as immutable\n   --> $DIR/borrowck-slice-pattern-element-loan-slice.rs:28:26\n    |\n LL |     if let [.., _, ref from_end4, ref from_end3, _, ref from_end1] = *s {\n-   |                                   ------------- immutable borrow occurs here\n+   |                    ------------- immutable borrow occurs here\n ...\n LL |         if let [_, _, _, ref mut from_begin3, ..] = *s {\n    |                          ^^^^^^^^^^^^^^^^^^^ mutable borrow occurs here\n LL |             nop(&[from_begin3, from_end1, from_end3, from_end4]);\n-   |                                           --------- immutable borrow later used here\n+   |                                                      --------- immutable borrow later used here\n \n error[E0502]: cannot borrow `s[..]` as mutable because it is also borrowed as immutable\n   --> $DIR/borrowck-slice-pattern-element-loan-slice.rs:33:21\n@@ -75,12 +75,12 @@ error[E0502]: cannot borrow `s[..]` as mutable because it is also borrowed as im\n   --> $DIR/borrowck-slice-pattern-element-loan-slice.rs:39:21\n    |\n LL |     if let [ref from_begin0, ref from_begin1, _, ref from_begin3, _, ..] = *s {\n-   |                              --------------- immutable borrow occurs here\n+   |                                                  --------------- immutable borrow occurs here\n ...\n LL |         if let [.., ref mut from_end4, _, _, _] = *s {\n    |                     ^^^^^^^^^^^^^^^^^ mutable borrow occurs here\n LL |             nop(&[from_begin0, from_begin1, from_begin3, from_end4]);\n-   |                                ----------- immutable borrow later used here\n+   |                                             ----------- immutable borrow later used here\n \n error[E0502]: cannot borrow `s[..]` as mutable because it is also borrowed as immutable\n   --> $DIR/borrowck-slice-pattern-element-loan-slice.rs:47:20"}, {"sha": "2a88d8f0524ace1bc740cd2dd6aad769efb46f1b", "filename": "src/test/ui/issues/issue-12567.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/5dee38d8bbadc00f60a263431292d685a324e422/src%2Ftest%2Fui%2Fissues%2Fissue-12567.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/5dee38d8bbadc00f60a263431292d685a324e422/src%2Ftest%2Fui%2Fissues%2Fissue-12567.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-12567.stderr?ref=5dee38d8bbadc00f60a263431292d685a324e422", "patch": "@@ -8,7 +8,7 @@ LL |         (&[], &[hd, ..]) | (&[hd, ..], &[])\n    |                 -- data moved here\n LL |             => println!(\"one empty\"),\n LL |         (&[hd1, ..], &[hd2, ..])\n-   |            --- ...and here\n+   |                        --- ...and here\n    |\n    = note: move occurs because these variables have types that don't implement the `Copy` trait\n \n@@ -22,7 +22,7 @@ LL |         (&[], &[hd, ..]) | (&[hd, ..], &[])\n    |                 -- data moved here\n LL |             => println!(\"one empty\"),\n LL |         (&[hd1, ..], &[hd2, ..])\n-   |                        --- ...and here\n+   |            --- ...and here\n    |\n    = note: move occurs because these variables have types that don't implement the `Copy` trait\n "}, {"sha": "b69ed0bb875a212135152ce30cde93fec02c62b9", "filename": "src/test/ui/nll/move-errors.stderr", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/5dee38d8bbadc00f60a263431292d685a324e422/src%2Ftest%2Fui%2Fnll%2Fmove-errors.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/5dee38d8bbadc00f60a263431292d685a324e422/src%2Ftest%2Fui%2Fnll%2Fmove-errors.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fmove-errors.stderr?ref=5dee38d8bbadc00f60a263431292d685a324e422", "patch": "@@ -97,18 +97,6 @@ LL |         B::U(D(s)) => (),\n    |                data moved here\n    |                move occurs because `s` has type `String`, which does not implement the `Copy` trait\n \n-error[E0509]: cannot move out of type `D`, which implements the `Drop` trait\n-  --> $DIR/move-errors.rs:92:11\n-   |\n-LL |     match x {\n-   |           ^ cannot move out of here\n-...\n-LL |         (D(s), &t) => (),\n-   |            -\n-   |            |\n-   |            data moved here\n-   |            move occurs because `s` has type `String`, which does not implement the `Copy` trait\n-\n error[E0507]: cannot move out of `*x.1` which is behind a shared reference\n   --> $DIR/move-errors.rs:92:11\n    |\n@@ -121,6 +109,18 @@ LL |         (D(s), &t) => (),\n    |                 data moved here\n    |                 move occurs because `t` has type `String`, which does not implement the `Copy` trait\n \n+error[E0509]: cannot move out of type `D`, which implements the `Drop` trait\n+  --> $DIR/move-errors.rs:92:11\n+   |\n+LL |     match x {\n+   |           ^ cannot move out of here\n+...\n+LL |         (D(s), &t) => (),\n+   |            -\n+   |            |\n+   |            data moved here\n+   |            move occurs because `s` has type `String`, which does not implement the `Copy` trait\n+\n error[E0509]: cannot move out of type `F`, which implements the `Drop` trait\n   --> $DIR/move-errors.rs:102:11\n    |"}, {"sha": "fdf92b66945131b7025ea37f67fd33a1f16f4600", "filename": "src/test/ui/pattern/move-ref-patterns/move-ref-patterns-dynamic-semantics.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5dee38d8bbadc00f60a263431292d685a324e422/src%2Ftest%2Fui%2Fpattern%2Fmove-ref-patterns%2Fmove-ref-patterns-dynamic-semantics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5dee38d8bbadc00f60a263431292d685a324e422/src%2Ftest%2Fui%2Fpattern%2Fmove-ref-patterns%2Fmove-ref-patterns-dynamic-semantics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fpattern%2Fmove-ref-patterns%2Fmove-ref-patterns-dynamic-semantics.rs?ref=5dee38d8bbadc00f60a263431292d685a324e422", "patch": "@@ -74,6 +74,6 @@ fn main() {\n         };\n         lam((mk(19), mk(20), mk(21), mk(22)));\n     }\n-    let expected = [2, 3, 6, 5, 7, 8, 12, 11, 9, 10, 18, 13, 14, 15, 16, 17, 21, 19, 20, 22, 4, 1];\n+    let expected = [2, 3, 6, 5, 7, 8, 12, 11, 9, 10, 13, 18, 14, 15, 16, 17, 19, 21, 20, 22, 4, 1];\n     assert_eq!(&*d.borrow(), &expected);\n }"}, {"sha": "e01c1f87428f0f11301dee5362f7c7523f7bd353", "filename": "src/test/ui/span/dropck_direct_cycle_with_drop.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/5dee38d8bbadc00f60a263431292d685a324e422/src%2Ftest%2Fui%2Fspan%2Fdropck_direct_cycle_with_drop.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/5dee38d8bbadc00f60a263431292d685a324e422/src%2Ftest%2Fui%2Fspan%2Fdropck_direct_cycle_with_drop.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspan%2Fdropck_direct_cycle_with_drop.stderr?ref=5dee38d8bbadc00f60a263431292d685a324e422", "patch": "@@ -8,9 +8,7 @@ LL | }\n    | -\n    | |\n    | `d2` dropped here while still borrowed\n-   | borrow might be used here, when `d1` is dropped and runs the `Drop` code for type `D`\n-   |\n-   = note: values in a scope are dropped in the opposite order they are defined\n+   | borrow might be used here, when `d2` is dropped and runs the `Drop` code for type `D`\n \n error[E0597]: `d1` does not live long enough\n   --> $DIR/dropck_direct_cycle_with_drop.rs:38:19\n@@ -22,7 +20,9 @@ LL | }\n    | -\n    | |\n    | `d1` dropped here while still borrowed\n-   | borrow might be used here, when `d1` is dropped and runs the `Drop` code for type `D`\n+   | borrow might be used here, when `d2` is dropped and runs the `Drop` code for type `D`\n+   |\n+   = note: values in a scope are dropped in the opposite order they are defined\n \n error: aborting due to 2 previous errors\n "}, {"sha": "e4aa2aed24e42998bf998e57d8baf7b1c16db4a7", "filename": "src/test/ui/span/send-is-not-static-std-sync-2.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5dee38d8bbadc00f60a263431292d685a324e422/src%2Ftest%2Fui%2Fspan%2Fsend-is-not-static-std-sync-2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/5dee38d8bbadc00f60a263431292d685a324e422/src%2Ftest%2Fui%2Fspan%2Fsend-is-not-static-std-sync-2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspan%2Fsend-is-not-static-std-sync-2.stderr?ref=5dee38d8bbadc00f60a263431292d685a324e422", "patch": "@@ -24,7 +24,7 @@ error[E0597]: `x` does not live long enough\n   --> $DIR/send-is-not-static-std-sync-2.rs:31:25\n    |\n LL |     let (_tx, rx) = {\n-   |          --- borrow later used here\n+   |               -- borrow later used here\n ...\n LL |         let _ = tx.send(&x);\n    |                         ^^ borrowed value does not live long enough"}]}