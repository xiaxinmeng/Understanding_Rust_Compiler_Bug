{"sha": "3d93e2108e182350e8bbf51d02a76c85ef831f8e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNkOTNlMjEwOGUxODIzNTBlOGJiZjUxZDAyYTc2Yzg1ZWY4MzFmOGU=", "commit": {"author": {"name": "Veetaha", "email": "gerzoh1@gmail.com", "date": "2020-02-29T21:19:58Z"}, "committer": {"name": "Veetaha", "email": "gerzoh1@gmail.com", "date": "2020-03-07T12:08:35Z"}, "message": "vscode: refresh all editors on text changes, simplify inlays api", "tree": {"sha": "714204f0bb94d73e6adad86b9151abacb50a96d0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/714204f0bb94d73e6adad86b9151abacb50a96d0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3d93e2108e182350e8bbf51d02a76c85ef831f8e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3d93e2108e182350e8bbf51d02a76c85ef831f8e", "html_url": "https://github.com/rust-lang/rust/commit/3d93e2108e182350e8bbf51d02a76c85ef831f8e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3d93e2108e182350e8bbf51d02a76c85ef831f8e/comments", "author": null, "committer": null, "parents": [{"sha": "057cd959dab18133db418979f5c711a1f98c007c", "url": "https://api.github.com/repos/rust-lang/rust/commits/057cd959dab18133db418979f5c711a1f98c007c", "html_url": "https://github.com/rust-lang/rust/commit/057cd959dab18133db418979f5c711a1f98c007c"}], "stats": {"total": 24, "additions": 11, "deletions": 13}, "files": [{"sha": "161b34037b4ab7c9696e2d233def5737e2587d2a", "filename": "editors/code/src/inlay_hints.ts", "status": "modified", "additions": 11, "deletions": 13, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/3d93e2108e182350e8bbf51d02a76c85ef831f8e/editors%2Fcode%2Fsrc%2Finlay_hints.ts", "raw_url": "https://github.com/rust-lang/rust/raw/3d93e2108e182350e8bbf51d02a76c85ef831f8e/editors%2Fcode%2Fsrc%2Finlay_hints.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Finlay_hints.ts?ref=3d93e2108e182350e8bbf51d02a76c85ef831f8e", "patch": "@@ -9,9 +9,7 @@ export function activateInlayHints(ctx: Ctx) {\n     const hintsUpdater = new HintsUpdater(ctx.client);\n \n     vscode.window.onDidChangeVisibleTextEditors(\n-        visibleEditors => hintsUpdater.refreshVisibleRustEditors(\n-            visibleEditors.filter(isRustTextEditor)\n-        ),\n+        () => hintsUpdater.refreshVisibleRustEditors(),\n         null,\n         ctx.subscriptions\n     );\n@@ -21,7 +19,7 @@ export function activateInlayHints(ctx: Ctx) {\n             if (contentChanges.length === 0) return;\n             if (!isRustTextDocument(document)) return;\n \n-            hintsUpdater.refreshRustDocument(document);\n+            hintsUpdater.forceRefreshVisibleRustEditors();\n         },\n         null,\n         ctx.subscriptions\n@@ -92,7 +90,7 @@ class HintsUpdater {\n         this.enabled = enabled;\n \n         if (this.enabled) {\n-            this.refreshVisibleRustEditors(vscode.window.visibleTextEditors.filter(isRustTextEditor));\n+            this.refreshVisibleRustEditors();\n         } else {\n             this.clearHints();\n         }\n@@ -105,20 +103,20 @@ class HintsUpdater {\n         }\n     }\n \n-    refreshRustDocument(document: RustTextDocument) {\n+    forceRefreshVisibleRustEditors() {\n         if (!this.enabled) return;\n \n-        const file = this.sourceFiles.getSourceFile(document.uri.toString());\n-\n-        assert(!!file, \"Document must be opened in some text editor!\");\n-\n-        void file.fetchAndRenderHints(this.client);\n+        for (const file of this.sourceFiles) {\n+            void file.fetchAndRenderHints(this.client);\n+        }\n     }\n \n-    refreshVisibleRustEditors(visibleEditors: RustTextEditor[]) {\n+    refreshVisibleRustEditors() {\n         if (!this.enabled) return;\n \n-        const visibleSourceFiles = this.sourceFiles.drainEditors(visibleEditors);\n+        const visibleSourceFiles = this.sourceFiles.drainEditors(\n+            vscode.window.visibleTextEditors.filter(isRustTextEditor)\n+        );\n \n         // Cancel requests for source files whose editors were disposed (leftovers after drain).\n         for (const { inlaysRequest } of this.sourceFiles) inlaysRequest?.cancel();"}]}