{"sha": "f9a81e476992b8c1a7e9b67cf8a943a0ff03b978", "node_id": "C_kwDOAAsO6NoAKGY5YTgxZTQ3Njk5MmI4YzFhN2U5YjY3Y2Y4YTk0M2EwZmYwM2I5Nzg", "commit": {"author": {"name": "jyn", "email": "github@jyn.dev", "date": "2023-06-04T14:13:54Z"}, "committer": {"name": "jyn", "email": "github@jyn.dev", "date": "2023-06-04T14:18:23Z"}, "message": "Don't require the output from libtest to be valid UTF-8\n\nOn Windows this is sometimes not the case, for reasons I can't track down.\n\nThis works around the problem, although I'm not sure how to confirm we're not generating invalid\nbuild metrics in this case.", "tree": {"sha": "e85e03202b875ee82a824a68774647a1f7680720", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e85e03202b875ee82a824a68774647a1f7680720"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f9a81e476992b8c1a7e9b67cf8a943a0ff03b978", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f9a81e476992b8c1a7e9b67cf8a943a0ff03b978", "html_url": "https://github.com/rust-lang/rust/commit/f9a81e476992b8c1a7e9b67cf8a943a0ff03b978", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f9a81e476992b8c1a7e9b67cf8a943a0ff03b978/comments", "author": {"login": "jyn514", "id": 23638587, "node_id": "MDQ6VXNlcjIzNjM4NTg3", "avatar_url": "https://avatars.githubusercontent.com/u/23638587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jyn514", "html_url": "https://github.com/jyn514", "followers_url": "https://api.github.com/users/jyn514/followers", "following_url": "https://api.github.com/users/jyn514/following{/other_user}", "gists_url": "https://api.github.com/users/jyn514/gists{/gist_id}", "starred_url": "https://api.github.com/users/jyn514/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jyn514/subscriptions", "organizations_url": "https://api.github.com/users/jyn514/orgs", "repos_url": "https://api.github.com/users/jyn514/repos", "events_url": "https://api.github.com/users/jyn514/events{/privacy}", "received_events_url": "https://api.github.com/users/jyn514/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jyn514", "id": 23638587, "node_id": "MDQ6VXNlcjIzNjM4NTg3", "avatar_url": "https://avatars.githubusercontent.com/u/23638587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jyn514", "html_url": "https://github.com/jyn514", "followers_url": "https://api.github.com/users/jyn514/followers", "following_url": "https://api.github.com/users/jyn514/following{/other_user}", "gists_url": "https://api.github.com/users/jyn514/gists{/gist_id}", "starred_url": "https://api.github.com/users/jyn514/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jyn514/subscriptions", "organizations_url": "https://api.github.com/users/jyn514/orgs", "repos_url": "https://api.github.com/users/jyn514/repos", "events_url": "https://api.github.com/users/jyn514/events{/privacy}", "received_events_url": "https://api.github.com/users/jyn514/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2f5e6bb817c115c067ff47453eb9aa89a0a31358", "url": "https://api.github.com/repos/rust-lang/rust/commits/2f5e6bb817c115c067ff47453eb9aa89a0a31358", "html_url": "https://github.com/rust-lang/rust/commit/2f5e6bb817c115c067ff47453eb9aa89a0a31358"}], "stats": {"total": 11, "additions": 6, "deletions": 5}, "files": [{"sha": "06ab820953d0817f1021b1495f9e99af51daac30", "filename": "src/bootstrap/render_tests.rs", "status": "modified", "additions": 6, "deletions": 5, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/f9a81e476992b8c1a7e9b67cf8a943a0ff03b978/src%2Fbootstrap%2Frender_tests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f9a81e476992b8c1a7e9b67cf8a943a0ff03b978/src%2Fbootstrap%2Frender_tests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Frender_tests.rs?ref=f9a81e476992b8c1a7e9b67cf8a943a0ff03b978", "patch": "@@ -88,10 +88,10 @@ impl<'a> Renderer<'a> {\n     }\n \n     fn render_all(mut self) {\n-        let mut line = String::new();\n+        let mut line = Vec::new();\n         loop {\n             line.clear();\n-            match self.stdout.read_line(&mut line) {\n+            match self.stdout.read_until(b'\\n', &mut line) {\n                 Ok(_) => {}\n                 Err(err) if err.kind() == std::io::ErrorKind::UnexpectedEof => break,\n                 Err(err) => panic!(\"failed to read output of test runner: {err}\"),\n@@ -100,12 +100,13 @@ impl<'a> Renderer<'a> {\n                 break;\n             }\n \n-            match serde_json::from_str(&line) {\n+            match serde_json::from_slice(&line) {\n                 Ok(parsed) => self.render_message(parsed),\n                 Err(_err) => {\n                     // Handle non-JSON output, for example when --nocapture is passed.\n-                    print!(\"{line}\");\n-                    let _ = std::io::stdout().flush();\n+                    let mut stdout = std::io::stdout();\n+                    stdout.write_all(&line).unwrap();\n+                    let _ = stdout.flush();\n                 }\n             }\n         }"}]}