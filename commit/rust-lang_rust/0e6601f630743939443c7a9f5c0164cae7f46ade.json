{"sha": "0e6601f630743939443c7a9f5c0164cae7f46ade", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBlNjYwMWY2MzA3NDM5Mzk0NDNjN2E5ZjVjMDE2NGNhZTdmNDZhZGU=", "commit": {"author": {"name": "Diggory Blake", "email": "diggsey@googlemail.com", "date": "2018-01-11T17:51:49Z"}, "committer": {"name": "Diggory Blake", "email": "diggsey@googlemail.com", "date": "2018-01-30T23:22:23Z"}, "message": "Add wasm_syscall feature to build system", "tree": {"sha": "ccd8f7c59f6aa0b7ba0eb91be7f1a1eb86dac525", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ccd8f7c59f6aa0b7ba0eb91be7f1a1eb86dac525"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0e6601f630743939443c7a9f5c0164cae7f46ade", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0e6601f630743939443c7a9f5c0164cae7f46ade", "html_url": "https://github.com/rust-lang/rust/commit/0e6601f630743939443c7a9f5c0164cae7f46ade", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0e6601f630743939443c7a9f5c0164cae7f46ade/comments", "author": {"login": "Diggsey", "id": 451321, "node_id": "MDQ6VXNlcjQ1MTMyMQ==", "avatar_url": "https://avatars.githubusercontent.com/u/451321?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Diggsey", "html_url": "https://github.com/Diggsey", "followers_url": "https://api.github.com/users/Diggsey/followers", "following_url": "https://api.github.com/users/Diggsey/following{/other_user}", "gists_url": "https://api.github.com/users/Diggsey/gists{/gist_id}", "starred_url": "https://api.github.com/users/Diggsey/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Diggsey/subscriptions", "organizations_url": "https://api.github.com/users/Diggsey/orgs", "repos_url": "https://api.github.com/users/Diggsey/repos", "events_url": "https://api.github.com/users/Diggsey/events{/privacy}", "received_events_url": "https://api.github.com/users/Diggsey/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Diggsey", "id": 451321, "node_id": "MDQ6VXNlcjQ1MTMyMQ==", "avatar_url": "https://avatars.githubusercontent.com/u/451321?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Diggsey", "html_url": "https://github.com/Diggsey", "followers_url": "https://api.github.com/users/Diggsey/followers", "following_url": "https://api.github.com/users/Diggsey/following{/other_user}", "gists_url": "https://api.github.com/users/Diggsey/gists{/gist_id}", "starred_url": "https://api.github.com/users/Diggsey/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Diggsey/subscriptions", "organizations_url": "https://api.github.com/users/Diggsey/orgs", "repos_url": "https://api.github.com/users/Diggsey/repos", "events_url": "https://api.github.com/users/Diggsey/events{/privacy}", "received_events_url": "https://api.github.com/users/Diggsey/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "36695a37c52a0e6cc582247a506ab0b3c764b48f", "url": "https://api.github.com/repos/rust-lang/rust/commits/36695a37c52a0e6cc582247a506ab0b3c764b48f", "html_url": "https://github.com/rust-lang/rust/commit/36695a37c52a0e6cc582247a506ab0b3c764b48f"}], "stats": {"total": 19, "additions": 19, "deletions": 0}, "files": [{"sha": "9ca0f563d0af1472c489b179118d3eb94c5ffa0a", "filename": "config.toml.example", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/0e6601f630743939443c7a9f5c0164cae7f46ade/config.toml.example", "raw_url": "https://github.com/rust-lang/rust/raw/0e6601f630743939443c7a9f5c0164cae7f46ade/config.toml.example", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/config.toml.example?ref=0e6601f630743939443c7a9f5c0164cae7f46ade", "patch": "@@ -312,6 +312,11 @@\n # bootstrap)\n #codegen-backends = [\"llvm\"]\n \n+# Flag indicating whether `libstd` calls an imported function to hande basic IO\n+# when targetting WebAssembly. Enable this to debug tests for the `wasm32-unknown-unknown`\n+# target, as without this option the test output will not be captured.\n+#wasm-syscall = false\n+\n # =============================================================================\n # Options for specific targets\n #"}, {"sha": "0da04bebac51386995a44ddda9102a78f0671fb9", "filename": "src/bootstrap/config.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/0e6601f630743939443c7a9f5c0164cae7f46ade/src%2Fbootstrap%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0e6601f630743939443c7a9f5c0164cae7f46ade/src%2Fbootstrap%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fconfig.rs?ref=0e6601f630743939443c7a9f5c0164cae7f46ade", "patch": "@@ -107,6 +107,7 @@ pub struct Config {\n     pub debug_jemalloc: bool,\n     pub use_jemalloc: bool,\n     pub backtrace: bool, // support for RUST_BACKTRACE\n+    pub wasm_syscall: bool,\n \n     // misc\n     pub low_priority: bool,\n@@ -282,6 +283,7 @@ struct Rust {\n     test_miri: Option<bool>,\n     save_toolstates: Option<String>,\n     codegen_backends: Option<Vec<String>>,\n+    wasm_syscall: Option<bool>,\n }\n \n /// TOML representation of how each build target is configured.\n@@ -463,6 +465,7 @@ impl Config {\n             set(&mut config.rust_dist_src, rust.dist_src);\n             set(&mut config.quiet_tests, rust.quiet_tests);\n             set(&mut config.test_miri, rust.test_miri);\n+            set(&mut config.wasm_syscall, rust.wasm_syscall);\n             config.rustc_parallel_queries = rust.experimental_parallel_queries.unwrap_or(false);\n             config.rustc_default_linker = rust.default_linker.clone();\n             config.musl_root = rust.musl_root.clone().map(PathBuf::from);"}, {"sha": "f2a7ce30c8ac77195ef9c0ef23487befd7a7afa1", "filename": "src/bootstrap/lib.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/0e6601f630743939443c7a9f5c0164cae7f46ade/src%2Fbootstrap%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0e6601f630743939443c7a9f5c0164cae7f46ade/src%2Fbootstrap%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Flib.rs?ref=0e6601f630743939443c7a9f5c0164cae7f46ade", "patch": "@@ -423,6 +423,9 @@ impl Build {\n         if self.config.profiler {\n             features.push_str(\" profiler\");\n         }\n+        if self.config.wasm_syscall {\n+            features.push_str(\" wasm_syscall\");\n+        }\n         features\n     }\n "}, {"sha": "5fdc6e009206458a42d7939af533c284e12a0bc8", "filename": "src/bootstrap/test.rs", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/0e6601f630743939443c7a9f5c0164cae7f46ade/src%2Fbootstrap%2Ftest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0e6601f630743939443c7a9f5c0164cae7f46ade/src%2Fbootstrap%2Ftest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Ftest.rs?ref=0e6601f630743939443c7a9f5c0164cae7f46ade", "patch": "@@ -1286,6 +1286,14 @@ impl Step for Crate {\n             cargo.env(format!(\"CARGO_TARGET_{}_RUNNER\", envify(&target)),\n                       build.config.nodejs.as_ref().expect(\"nodejs not configured\"));\n         } else if target.starts_with(\"wasm32\") {\n+            // Warn about running tests without the `wasm_syscall` feature enabled.\n+            // The javascript shim implements the syscall interface so that test\n+            // output can be correctly reported.\n+            if !build.config.wasm_syscall {\n+                println!(\"Libstd was built without `wasm_syscall` feature enabled: \\\n+                          test output may not be visible.\");\n+            }\n+\n             // On the wasm32-unknown-unknown target we're using LTO which is\n             // incompatible with `-C prefer-dynamic`, so disable that here\n             cargo.env(\"RUSTC_NO_PREFER_DYNAMIC\", \"1\");"}]}