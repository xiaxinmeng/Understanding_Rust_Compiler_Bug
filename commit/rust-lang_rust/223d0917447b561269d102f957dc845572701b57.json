{"sha": "223d0917447b561269d102f957dc845572701b57", "node_id": "MDY6Q29tbWl0NzI0NzEyOjIyM2QwOTE3NDQ3YjU2MTI2OWQxMDJmOTU3ZGM4NDU1NzI3MDFiNTc=", "commit": {"author": {"name": "Sunjay Varma", "email": "varma.sunjay@gmail.com", "date": "2017-11-19T05:18:43Z"}, "committer": {"name": "Sunjay Varma", "email": "varma.sunjay@gmail.com", "date": "2017-12-01T06:26:29Z"}, "message": "Parsing where clauses correctly and documenting the grammar being parsed", "tree": {"sha": "91d9b93d59fb098eae7af576520fb03532e64fef", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/91d9b93d59fb098eae7af576520fb03532e64fef"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/223d0917447b561269d102f957dc845572701b57", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/223d0917447b561269d102f957dc845572701b57", "html_url": "https://github.com/rust-lang/rust/commit/223d0917447b561269d102f957dc845572701b57", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/223d0917447b561269d102f957dc845572701b57/comments", "author": {"login": "sunjay", "id": 530939, "node_id": "MDQ6VXNlcjUzMDkzOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/530939?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sunjay", "html_url": "https://github.com/sunjay", "followers_url": "https://api.github.com/users/sunjay/followers", "following_url": "https://api.github.com/users/sunjay/following{/other_user}", "gists_url": "https://api.github.com/users/sunjay/gists{/gist_id}", "starred_url": "https://api.github.com/users/sunjay/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sunjay/subscriptions", "organizations_url": "https://api.github.com/users/sunjay/orgs", "repos_url": "https://api.github.com/users/sunjay/repos", "events_url": "https://api.github.com/users/sunjay/events{/privacy}", "received_events_url": "https://api.github.com/users/sunjay/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sunjay", "id": 530939, "node_id": "MDQ6VXNlcjUzMDkzOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/530939?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sunjay", "html_url": "https://github.com/sunjay", "followers_url": "https://api.github.com/users/sunjay/followers", "following_url": "https://api.github.com/users/sunjay/following{/other_user}", "gists_url": "https://api.github.com/users/sunjay/gists{/gist_id}", "starred_url": "https://api.github.com/users/sunjay/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sunjay/subscriptions", "organizations_url": "https://api.github.com/users/sunjay/orgs", "repos_url": "https://api.github.com/users/sunjay/repos", "events_url": "https://api.github.com/users/sunjay/events{/privacy}", "received_events_url": "https://api.github.com/users/sunjay/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c2aaba9b4455290ecc8b4cbfb96077fe056ba8b0", "url": "https://api.github.com/repos/rust-lang/rust/commits/c2aaba9b4455290ecc8b4cbfb96077fe056ba8b0", "html_url": "https://github.com/rust-lang/rust/commit/c2aaba9b4455290ecc8b4cbfb96077fe056ba8b0"}], "stats": {"total": 12, "additions": 9, "deletions": 3}, "files": [{"sha": "5a20c7f40e628447203a684e45610c4ad7df133c", "filename": "src/libsyntax/parse/parser.rs", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/223d0917447b561269d102f957dc845572701b57/src%2Flibsyntax%2Fparse%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/223d0917447b561269d102f957dc845572701b57/src%2Flibsyntax%2Fparse%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fparser.rs?ref=223d0917447b561269d102f957dc845572701b57", "patch": "@@ -4443,6 +4443,8 @@ impl<'a> Parser<'a> {\n         })\n     }\n \n+    /// Parses the following grammar:\n+    ///     TraitItemAssocTy = Ident [\"<\"...\">\"] [\":\" [TyParamBounds]] [\"where\" ...] [\"=\" Ty]\n     fn parse_trait_item_assoc_ty(&mut self, preceding_attrs: Vec<Attribute>)\n         -> PResult<'a, (ast::Generics, TyParam)> {\n         let span = self.span;\n@@ -4455,13 +4457,13 @@ impl<'a> Parser<'a> {\n         } else {\n             Vec::new()\n         };\n+        generics.where_clause = self.parse_where_clause()?;\n \n         let default = if self.eat(&token::Eq) {\n             Some(self.parse_ty()?)\n         } else {\n             None\n         };\n-        generics.where_clause = self.parse_where_clause()?;\n \n         Ok((generics, TyParam {\n             attrs: preceding_attrs.into(),\n@@ -5014,14 +5016,18 @@ impl<'a> Parser<'a> {\n         let vis = self.parse_visibility(false)?;\n         let defaultness = self.parse_defaultness()?;\n         let (name, node, generics) = if self.eat_keyword(keywords::Type) {\n+            // This parses the grammar:\n+            //     ImplItemAssocTy = Ident [\"<\"...\">\"] [\"where\" ...] \"=\" Ty \";\"\n             let name = self.parse_ident()?;\n             let mut generics = self.parse_generics()?;\n+            generics.where_clause = self.parse_where_clause()?;\n             self.expect(&token::Eq)?;\n             let typ = self.parse_ty()?;\n-            generics.where_clause = self.parse_where_clause()?;\n             self.expect(&token::Semi)?;\n             (name, ast::ImplItemKind::Type(typ), generics)\n         } else if self.is_const_item() {\n+            // This parses the grammar:\n+            //     ImplItemConst = \"const\" Ident \":\" Ty \"=\" Expr \";\"\n             self.expect_keyword(keywords::Const)?;\n             let name = self.parse_ident()?;\n             self.expect(&token::Colon)?;"}, {"sha": "cad8a96b8f0815dbe5203ef946b734584e4985af", "filename": "src/test/run-pass/rfc1598-generic-associated-types/generic-associated-types-where.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/223d0917447b561269d102f957dc845572701b57/src%2Ftest%2Frun-pass%2Frfc1598-generic-associated-types%2Fgeneric-associated-types-where.rs", "raw_url": "https://github.com/rust-lang/rust/raw/223d0917447b561269d102f957dc845572701b57/src%2Ftest%2Frun-pass%2Frfc1598-generic-associated-types%2Fgeneric-associated-types-where.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Frfc1598-generic-associated-types%2Fgeneric-associated-types-where.rs?ref=223d0917447b561269d102f957dc845572701b57", "patch": "@@ -18,7 +18,7 @@ use std::fmt::{Display, Debug};\n trait Foo {\n     type Assoc where Self: Sized;\n     type Assoc2<T> where T: Display;\n-    type WithDefault<T> = Iterator<Item=T> where T: Debug;\n+    type WithDefault<T> where T: Debug = Iterator<Item=T>;\n }\n \n struct Bar;"}]}