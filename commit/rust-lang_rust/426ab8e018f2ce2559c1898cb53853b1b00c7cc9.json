{"sha": "426ab8e018f2ce2559c1898cb53853b1b00c7cc9", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQyNmFiOGUwMThmMmNlMjU1OWMxODk4Y2I1Mzg1M2IxYjAwYzdjYzk=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-04-13T22:39:48Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-04-13T22:39:48Z"}, "message": "Rollup merge of #59890 - GuillaumeGomez:empty-json-variables, r=QuietMisdreavus\n\nDon't generate empty json variables\n\nr? @rust-lang/rustdoc", "tree": {"sha": "5311f55df8b1d199683b1208896335b4148281b3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5311f55df8b1d199683b1208896335b4148281b3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/426ab8e018f2ce2559c1898cb53853b1b00c7cc9", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJcsmU0CRBK7hj4Ov3rIwAAdHIIAAQtbAmfulgX6FFaEzQ4xImY\n+VcMORlfvQ6/q+xpcb+ZvsV+lxCLK4gP7oJwqJSS+dwtBtNWNvotw6ck5I+9yJdt\nMAA79daB8rVxIToGlzPTCXnD8HBHocnUsNYtbe8PF9reCDPG3iNADbcfH3575I6v\n/8cWsCKWATkPePkK06C3sMgUDgRXZg+PCecYQKwpWhc33vP27K6pVyt/dJ3ez6L4\nWLxHGesy2NX+Pp2fp4BkeqvTROJHakDnBIK8YZJoV56lsV/j0r8qvzBMlDYCn1uM\nJVG6AwyzBfqyizvuw0KDP9ACygTyY5CEnzy1C7PVVwDeoyKnXf2+3rrjDF7AdWU=\n=i/Qi\n-----END PGP SIGNATURE-----\n", "payload": "tree 5311f55df8b1d199683b1208896335b4148281b3\nparent 021a8eca475af9dc0b4adc234c2c581e8e1b2f92\nparent 796e6e37d6fa76b719dbf9b38872daffdc9caa70\nauthor Mazdak Farrokhzad <twingoow@gmail.com> 1555195188 +0200\ncommitter GitHub <noreply@github.com> 1555195188 +0200\n\nRollup merge of #59890 - GuillaumeGomez:empty-json-variables, r=QuietMisdreavus\n\nDon't generate empty json variables\n\nr? @rust-lang/rustdoc\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/426ab8e018f2ce2559c1898cb53853b1b00c7cc9", "html_url": "https://github.com/rust-lang/rust/commit/426ab8e018f2ce2559c1898cb53853b1b00c7cc9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/426ab8e018f2ce2559c1898cb53853b1b00c7cc9/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "021a8eca475af9dc0b4adc234c2c581e8e1b2f92", "url": "https://api.github.com/repos/rust-lang/rust/commits/021a8eca475af9dc0b4adc234c2c581e8e1b2f92", "html_url": "https://github.com/rust-lang/rust/commit/021a8eca475af9dc0b4adc234c2c581e8e1b2f92"}, {"sha": "796e6e37d6fa76b719dbf9b38872daffdc9caa70", "url": "https://api.github.com/repos/rust-lang/rust/commits/796e6e37d6fa76b719dbf9b38872daffdc9caa70", "html_url": "https://github.com/rust-lang/rust/commit/796e6e37d6fa76b719dbf9b38872daffdc9caa70"}], "stats": {"total": 53, "additions": 34, "deletions": 19}, "files": [{"sha": "0b463b082333c65b60403d33a79a794abb10c12a", "filename": "src/librustdoc/html/render.rs", "status": "modified", "additions": 15, "deletions": 4, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/426ab8e018f2ce2559c1898cb53853b1b00c7cc9/src%2Flibrustdoc%2Fhtml%2Frender.rs", "raw_url": "https://github.com/rust-lang/rust/raw/426ab8e018f2ce2559c1898cb53853b1b00c7cc9/src%2Flibrustdoc%2Fhtml%2Frender.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender.rs?ref=426ab8e018f2ce2559c1898cb53853b1b00c7cc9", "patch": "@@ -1064,11 +1064,22 @@ themePicker.onblur = handleThemeButtonsBlur;\n                                                         .expect(\"invalid osstring conversion\")))\n                                       .collect::<Vec<_>>();\n             files.sort_unstable_by(|a, b| a.cmp(b));\n-            // FIXME(imperio): we could avoid to generate \"dirs\" and \"files\" if they're empty.\n-            format!(\"{{\\\"name\\\":\\\"{name}\\\",\\\"dirs\\\":[{subs}],\\\"files\\\":[{files}]}}\",\n+            let subs = subs.iter().map(|s| s.to_json_string()).collect::<Vec<_>>().join(\",\");\n+            let dirs = if subs.is_empty() {\n+                String::new()\n+            } else {\n+                format!(\",\\\"dirs\\\":[{}]\", subs)\n+            };\n+            let files = files.join(\",\");\n+            let files = if files.is_empty() {\n+                String::new()\n+            } else {\n+                format!(\",\\\"files\\\":[{}]\", files)\n+            };\n+            format!(\"{{\\\"name\\\":\\\"{name}\\\"{dirs}{files}}}\",\n                     name=self.elem.to_str().expect(\"invalid osstring conversion\"),\n-                    subs=subs.iter().map(|s| s.to_json_string()).collect::<Vec<_>>().join(\",\"),\n-                    files=files.join(\",\"))\n+                    dirs=dirs,\n+                    files=files)\n         }\n     }\n "}, {"sha": "567022b4139adaf7b97c9f203d0ac734b89d39c1", "filename": "src/librustdoc/html/static/source-script.js", "status": "modified", "additions": 19, "deletions": 15, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/426ab8e018f2ce2559c1898cb53853b1b00c7cc9/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fsource-script.js", "raw_url": "https://github.com/rust-lang/rust/raw/426ab8e018f2ce2559c1898cb53853b1b00c7cc9/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fsource-script.js", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fsource-script.js?ref=426ab8e018f2ce2559c1898cb53853b1b00c7cc9", "patch": "@@ -39,28 +39,32 @@ function createDirEntry(elem, parent, fullPath, currentFile, hasFoundFile) {\n     children.className = \"children\";\n     var folders = document.createElement(\"div\");\n     folders.className = \"folders\";\n-    for (var i = 0; i < elem.dirs.length; ++i) {\n-        if (createDirEntry(elem.dirs[i], folders, fullPath, currentFile,\n-                           hasFoundFile) === true) {\n-            addClass(name, \"expand\");\n-            hasFoundFile = true;\n+    if (elem.dirs) {\n+        for (var i = 0; i < elem.dirs.length; ++i) {\n+            if (createDirEntry(elem.dirs[i], folders, fullPath, currentFile,\n+                               hasFoundFile) === true) {\n+                addClass(name, \"expand\");\n+                hasFoundFile = true;\n+            }\n         }\n     }\n     children.appendChild(folders);\n \n     var files = document.createElement(\"div\");\n     files.className = \"files\";\n-    for (i = 0; i < elem.files.length; ++i) {\n-        var file = document.createElement(\"a\");\n-        file.innerText = elem.files[i];\n-        file.href = window.rootPath + \"src/\" + fullPath + elem.files[i] + \".html\";\n-        if (hasFoundFile === false &&\n-                currentFile === fullPath + elem.files[i]) {\n-            file.className = \"selected\";\n-            addClass(name, \"expand\");\n-            hasFoundFile = true;\n+    if (elem.files) {\n+        for (i = 0; i < elem.files.length; ++i) {\n+            var file = document.createElement(\"a\");\n+            file.innerText = elem.files[i];\n+            file.href = window.rootPath + \"src/\" + fullPath + elem.files[i] + \".html\";\n+            if (hasFoundFile === false &&\n+                    currentFile === fullPath + elem.files[i]) {\n+                file.className = \"selected\";\n+                addClass(name, \"expand\");\n+                hasFoundFile = true;\n+            }\n+            files.appendChild(file);\n         }\n-        files.appendChild(file);\n     }\n     search.fullPath = fullPath;\n     children.appendChild(files);"}]}