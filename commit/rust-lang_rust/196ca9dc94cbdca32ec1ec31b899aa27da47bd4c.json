{"sha": "196ca9dc94cbdca32ec1ec31b899aa27da47bd4c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE5NmNhOWRjOTRjYmRjYTMyZWMxZWMzMWI4OTlhYTI3ZGE0N2JkNGM=", "commit": {"author": {"name": "Tyler Mandry", "email": "tmandry@gmail.com", "date": "2019-12-09T22:33:13Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-12-09T22:33:13Z"}, "message": "Rollup merge of #67155 - kraai:move-instead-of-binding-to-reference, r=cramertj\n\nMove `Layout`s instead of binding by reference", "tree": {"sha": "185e5907b1a57be781e80ed23bd4bbf803670fac", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/185e5907b1a57be781e80ed23bd4bbf803670fac"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/196ca9dc94cbdca32ec1ec31b899aa27da47bd4c", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJd7suqCRBK7hj4Ov3rIwAAdHIIAG4+i88wqZRjn1Z1kfOoQbG4\ni+10g2NdW0SCRJrE6w2wfkzDJTNfRaq99jkpZrtSSVp/npuTXgL8v0iUjnFEOYPh\nCLldsK2T+oaOXHYZfto4f34yWC2z5cPr3R0FURzCc5vhq/26fMuSV+vD2MW41rBa\n95WRM5Kaw/BMy3/fRsx5TW3EK5+g+TcyCJl08Mp0DqLOylN101apEXmE4sVF2QXC\nio2+bXNIJNj8dFKYp+0YR5hRs0amqTKtiIXI9yblxDCGU7TwdHHnZuLGuDVGDb1y\nt/L+STKUL9blEMQsJ61Ff0SvmjfjqDclHeHYSasp8tjJQlOTdTtkDCQaDffN7tk=\n=B5qD\n-----END PGP SIGNATURE-----\n", "payload": "tree 185e5907b1a57be781e80ed23bd4bbf803670fac\nparent c2702e38e45d50b66839ebac8a874f84144b1d16\nparent 4ea7bb8f12b36f7e6b831f92df6285686ad2557a\nauthor Tyler Mandry <tmandry@gmail.com> 1575930793 -0800\ncommitter GitHub <noreply@github.com> 1575930793 -0800\n\nRollup merge of #67155 - kraai:move-instead-of-binding-to-reference, r=cramertj\n\nMove `Layout`s instead of binding by reference\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/196ca9dc94cbdca32ec1ec31b899aa27da47bd4c", "html_url": "https://github.com/rust-lang/rust/commit/196ca9dc94cbdca32ec1ec31b899aa27da47bd4c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/196ca9dc94cbdca32ec1ec31b899aa27da47bd4c/comments", "author": {"login": "tmandry", "id": 2280544, "node_id": "MDQ6VXNlcjIyODA1NDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/2280544?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tmandry", "html_url": "https://github.com/tmandry", "followers_url": "https://api.github.com/users/tmandry/followers", "following_url": "https://api.github.com/users/tmandry/following{/other_user}", "gists_url": "https://api.github.com/users/tmandry/gists{/gist_id}", "starred_url": "https://api.github.com/users/tmandry/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tmandry/subscriptions", "organizations_url": "https://api.github.com/users/tmandry/orgs", "repos_url": "https://api.github.com/users/tmandry/repos", "events_url": "https://api.github.com/users/tmandry/events{/privacy}", "received_events_url": "https://api.github.com/users/tmandry/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c2702e38e45d50b66839ebac8a874f84144b1d16", "url": "https://api.github.com/repos/rust-lang/rust/commits/c2702e38e45d50b66839ebac8a874f84144b1d16", "html_url": "https://github.com/rust-lang/rust/commit/c2702e38e45d50b66839ebac8a874f84144b1d16"}, {"sha": "4ea7bb8f12b36f7e6b831f92df6285686ad2557a", "url": "https://api.github.com/repos/rust-lang/rust/commits/4ea7bb8f12b36f7e6b831f92df6285686ad2557a", "html_url": "https://github.com/rust-lang/rust/commit/4ea7bb8f12b36f7e6b831f92df6285686ad2557a"}], "stats": {"total": 12, "additions": 6, "deletions": 6}, "files": [{"sha": "f37c57e38b540e088a8e1040038b5da19943724c", "filename": "src/libcore/alloc.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/196ca9dc94cbdca32ec1ec31b899aa27da47bd4c/src%2Flibcore%2Falloc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/196ca9dc94cbdca32ec1ec31b899aa27da47bd4c/src%2Flibcore%2Falloc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Falloc.rs?ref=196ca9dc94cbdca32ec1ec31b899aa27da47bd4c", "patch": "@@ -1142,9 +1142,9 @@ pub unsafe trait Alloc {\n         where Self: Sized\n     {\n         match Layout::array::<T>(n) {\n-            Ok(ref layout) if layout.size() > 0 => {\n+            Ok(layout) if layout.size() > 0 => {\n                 unsafe {\n-                    self.alloc(layout.clone()).map(|p| p.cast())\n+                    self.alloc(layout).map(|p| p.cast())\n                 }\n             }\n             _ => Err(AllocErr),\n@@ -1192,9 +1192,9 @@ pub unsafe trait Alloc {\n         where Self: Sized\n     {\n         match (Layout::array::<T>(n_old), Layout::array::<T>(n_new)) {\n-            (Ok(ref k_old), Ok(ref k_new)) if k_old.size() > 0 && k_new.size() > 0 => {\n+            (Ok(k_old), Ok(k_new)) if k_old.size() > 0 && k_new.size() > 0 => {\n                 debug_assert!(k_old.align() == k_new.align());\n-                self.realloc(ptr.cast(), k_old.clone(), k_new.size()).map(NonNull::cast)\n+                self.realloc(ptr.cast(), k_old, k_new.size()).map(NonNull::cast)\n             }\n             _ => {\n                 Err(AllocErr)\n@@ -1226,8 +1226,8 @@ pub unsafe trait Alloc {\n         where Self: Sized\n     {\n         match Layout::array::<T>(n) {\n-            Ok(ref k) if k.size() > 0 => {\n-                Ok(self.dealloc(ptr.cast(), k.clone()))\n+            Ok(k) if k.size() > 0 => {\n+                Ok(self.dealloc(ptr.cast(), k))\n             }\n             _ => {\n                 Err(AllocErr)"}]}