{"sha": "4553a4baf2b365541c2322462a31eb5e5f43f3b5", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ1NTNhNGJhZjJiMzY1NTQxYzIzMjI0NjJhMzFlYjVlNWY0M2YzYjU=", "commit": {"author": {"name": "Noah Lev", "email": "camelidcamel@gmail.com", "date": "2021-09-01T18:07:33Z"}, "committer": {"name": "Noah Lev", "email": "camelidcamel@gmail.com", "date": "2021-09-01T18:10:58Z"}, "message": "Remove redundant `Span` in `QueryJobInfo`\n\nPreviously, `QueryJobInfo` was composed of two parts: a `QueryInfo` and\na `QueryJob`. However, both `QueryInfo` and `QueryJob` have a `span`\nfield, which seem to be the same. So, the `span` was recorded twice.\n\nNow, `QueryJobInfo` is composed of a `QueryStackFrame` (the other field\nof `QueryInfo`) and a `QueryJob`. So, now, the `span` is only recorded\nonce.", "tree": {"sha": "8b8417f2b8b34a21aeddb70d982897fc4982b876", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8b8417f2b8b34a21aeddb70d982897fc4982b876"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4553a4baf2b365541c2322462a31eb5e5f43f3b5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4553a4baf2b365541c2322462a31eb5e5f43f3b5", "html_url": "https://github.com/rust-lang/rust/commit/4553a4baf2b365541c2322462a31eb5e5f43f3b5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4553a4baf2b365541c2322462a31eb5e5f43f3b5/comments", "author": {"login": "camelid", "id": 37223377, "node_id": "MDQ6VXNlcjM3MjIzMzc3", "avatar_url": "https://avatars.githubusercontent.com/u/37223377?v=4", "gravatar_id": "", "url": "https://api.github.com/users/camelid", "html_url": "https://github.com/camelid", "followers_url": "https://api.github.com/users/camelid/followers", "following_url": "https://api.github.com/users/camelid/following{/other_user}", "gists_url": "https://api.github.com/users/camelid/gists{/gist_id}", "starred_url": "https://api.github.com/users/camelid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/camelid/subscriptions", "organizations_url": "https://api.github.com/users/camelid/orgs", "repos_url": "https://api.github.com/users/camelid/repos", "events_url": "https://api.github.com/users/camelid/events{/privacy}", "received_events_url": "https://api.github.com/users/camelid/received_events", "type": "User", "site_admin": false}, "committer": {"login": "camelid", "id": 37223377, "node_id": "MDQ6VXNlcjM3MjIzMzc3", "avatar_url": "https://avatars.githubusercontent.com/u/37223377?v=4", "gravatar_id": "", "url": "https://api.github.com/users/camelid", "html_url": "https://github.com/camelid", "followers_url": "https://api.github.com/users/camelid/followers", "following_url": "https://api.github.com/users/camelid/following{/other_user}", "gists_url": "https://api.github.com/users/camelid/gists{/gist_id}", "starred_url": "https://api.github.com/users/camelid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/camelid/subscriptions", "organizations_url": "https://api.github.com/users/camelid/orgs", "repos_url": "https://api.github.com/users/camelid/repos", "events_url": "https://api.github.com/users/camelid/events{/privacy}", "received_events_url": "https://api.github.com/users/camelid/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ad3407f482d29f26c67700974d86f89b3f2ab993", "url": "https://api.github.com/repos/rust-lang/rust/commits/ad3407f482d29f26c67700974d86f89b3f2ab993", "html_url": "https://github.com/rust-lang/rust/commit/ad3407f482d29f26c67700974d86f89b3f2ab993"}], "stats": {"total": 19, "additions": 8, "deletions": 11}, "files": [{"sha": "c3fdf4fc228511b0ebc767267f052461f681196a", "filename": "compiler/rustc_query_system/src/query/job.rs", "status": "modified", "additions": 6, "deletions": 9, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/4553a4baf2b365541c2322462a31eb5e5f43f3b5/compiler%2Frustc_query_system%2Fsrc%2Fquery%2Fjob.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4553a4baf2b365541c2322462a31eb5e5f43f3b5/compiler%2Frustc_query_system%2Fsrc%2Fquery%2Fjob.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_query_system%2Fsrc%2Fquery%2Fjob.rs?ref=4553a4baf2b365541c2322462a31eb5e5f43f3b5", "patch": "@@ -61,7 +61,7 @@ where\n     }\n \n     fn query(self, map: &QueryMap<D>) -> QueryStackFrame {\n-        map.get(&self).unwrap().info.query.clone()\n+        map.get(&self).unwrap().query.clone()\n     }\n \n     #[cfg(parallel_compiler)]\n@@ -81,7 +81,7 @@ where\n }\n \n pub struct QueryJobInfo<D> {\n-    pub info: QueryInfo,\n+    pub query: QueryStackFrame,\n     pub job: QueryJob<D>,\n }\n \n@@ -155,7 +155,7 @@ where\n \n         while let Some(job) = current_job {\n             let info = query_map.get(&job).unwrap();\n-            cycle.push(info.info.clone());\n+            cycle.push(QueryInfo { span: info.job.span, query: info.query.clone() });\n \n             if job == *self {\n                 cycle.reverse();\n@@ -170,7 +170,7 @@ where\n                     .job\n                     .parent\n                     .as_ref()\n-                    .map(|parent| (info.info.span, parent.query(&query_map)));\n+                    .map(|parent| (info.job.span, parent.query(&query_map)));\n                 return CycleError { usage, cycle };\n             }\n \n@@ -649,13 +649,10 @@ pub fn print_query_stack<CTX: QueryContext>(\n         };\n         let mut diag = Diagnostic::new(\n             Level::FailureNote,\n-            &format!(\n-                \"#{} [{}] {}\",\n-                i, query_info.info.query.name, query_info.info.query.description\n-            ),\n+            &format!(\"#{} [{}] {}\", i, query_info.query.name, query_info.query.description),\n         );\n         diag.span =\n-            tcx.dep_context().sess().source_map().guess_head_span(query_info.info.span).into();\n+            tcx.dep_context().sess().source_map().guess_head_span(query_info.job.span).into();\n         handler.force_print_diagnostic(diag);\n \n         current_query = query_info.job.parent;"}, {"sha": "3f22de6fba4077987d673cb21dfe8a4fea89b830", "filename": "compiler/rustc_query_system/src/query/plumbing.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/4553a4baf2b365541c2322462a31eb5e5f43f3b5/compiler%2Frustc_query_system%2Fsrc%2Fquery%2Fplumbing.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4553a4baf2b365541c2322462a31eb5e5f43f3b5/compiler%2Frustc_query_system%2Fsrc%2Fquery%2Fplumbing.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_query_system%2Fsrc%2Fquery%2Fplumbing.rs?ref=4553a4baf2b365541c2322462a31eb5e5f43f3b5", "patch": "@@ -130,8 +130,8 @@ where\n             for (k, v) in shard.active.iter() {\n                 if let QueryResult::Started(ref job) = *v {\n                     let id = QueryJobId::new(job.id, shard_id, kind);\n-                    let info = QueryInfo { span: job.span, query: make_query(tcx, k.clone()) };\n-                    jobs.insert(id, QueryJobInfo { info, job: job.clone() });\n+                    let query = make_query(tcx, k.clone());\n+                    jobs.insert(id, QueryJobInfo { query, job: job.clone() });\n                 }\n             }\n         }"}]}