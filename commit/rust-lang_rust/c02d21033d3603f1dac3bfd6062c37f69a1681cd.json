{"sha": "c02d21033d3603f1dac3bfd6062c37f69a1681cd", "node_id": "MDY6Q29tbWl0NzI0NzEyOmMwMmQyMTAzM2QzNjAzZjFkYWMzYmZkNjA2MmMzN2Y2OWExNjgxY2Q=", "commit": {"author": {"name": "Vadim Petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2021-02-22T21:07:36Z"}, "committer": {"name": "Vadim Petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2021-02-22T21:45:53Z"}, "message": "Add tests", "tree": {"sha": "677f3ed473be9a4a4802aa7c708d5941dc950c1d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/677f3ed473be9a4a4802aa7c708d5941dc950c1d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c02d21033d3603f1dac3bfd6062c37f69a1681cd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c02d21033d3603f1dac3bfd6062c37f69a1681cd", "html_url": "https://github.com/rust-lang/rust/commit/c02d21033d3603f1dac3bfd6062c37f69a1681cd", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c02d21033d3603f1dac3bfd6062c37f69a1681cd/comments", "author": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "committer": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a15f484b918a4533ad633ea903ccce82910af342", "url": "https://api.github.com/repos/rust-lang/rust/commits/a15f484b918a4533ad633ea903ccce82910af342", "html_url": "https://github.com/rust-lang/rust/commit/a15f484b918a4533ad633ea903ccce82910af342"}], "stats": {"total": 93, "additions": 87, "deletions": 6}, "files": [{"sha": "a7ed4bc88250d96ca5af94a3fb862f4e0d6591b6", "filename": "src/test/ui/proc-macro/auxiliary/test-macros.rs", "status": "modified", "additions": 16, "deletions": 6, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/c02d21033d3603f1dac3bfd6062c37f69a1681cd/src%2Ftest%2Fui%2Fproc-macro%2Fauxiliary%2Ftest-macros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c02d21033d3603f1dac3bfd6062c37f69a1681cd/src%2Ftest%2Fui%2Fproc-macro%2Fauxiliary%2Ftest-macros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fauxiliary%2Ftest-macros.rs?ref=c02d21033d3603f1dac3bfd6062c37f69a1681cd", "patch": "@@ -7,7 +7,7 @@\n #![crate_type = \"proc-macro\"]\n \n extern crate proc_macro;\n-use proc_macro::TokenStream;\n+use proc_macro::{TokenStream, TokenTree};\n \n // Macro that return empty token stream.\n \n@@ -80,6 +80,10 @@ pub fn recollect_derive(input: TokenStream) -> TokenStream {\n // Macros that print their input in the original and re-collected forms (if they differ).\n \n fn print_helper(input: TokenStream, kind: &str) -> TokenStream {\n+    print_helper_ext(input, kind, true)\n+}\n+\n+fn print_helper_ext(input: TokenStream, kind: &str, debug: bool) -> TokenStream {\n     let input_display = format!(\"{}\", input);\n     let input_debug = format!(\"{:#?}\", input);\n     let recollected = input.into_iter().collect();\n@@ -89,9 +93,11 @@ fn print_helper(input: TokenStream, kind: &str) -> TokenStream {\n     if recollected_display != input_display {\n         println!(\"PRINT-{} RE-COLLECTED (DISPLAY): {}\", kind, recollected_display);\n     }\n-    println!(\"PRINT-{} INPUT (DEBUG): {}\", kind, input_debug);\n-    if recollected_debug != input_debug {\n-        println!(\"PRINT-{} RE-COLLECTED (DEBUG): {}\", kind, recollected_debug);\n+    if debug {\n+        println!(\"PRINT-{} INPUT (DEBUG): {}\", kind, input_debug);\n+        if recollected_debug != input_debug {\n+            println!(\"PRINT-{} RE-COLLECTED (DEBUG): {}\", kind, recollected_debug);\n+        }\n     }\n     recollected\n }\n@@ -108,8 +114,12 @@ pub fn print_bang_consume(input: TokenStream) -> TokenStream {\n }\n \n #[proc_macro_attribute]\n-pub fn print_attr(_: TokenStream, input: TokenStream) -> TokenStream {\n-    print_helper(input, \"ATTR\")\n+pub fn print_attr(args: TokenStream, input: TokenStream) -> TokenStream {\n+    let debug = match &args.into_iter().collect::<Vec<_>>()[..] {\n+        [TokenTree::Ident(ident)] if ident.to_string() == \"nodebug\" => false,\n+        _ => true,\n+    };\n+    print_helper_ext(input, \"ATTR\", debug)\n }\n \n #[proc_macro_attribute]"}, {"sha": "8180aab0caa131be829d8929ca2cbe7b03b81f1a", "filename": "src/test/ui/proc-macro/derive-helper-legacy-spurious.rs", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/c02d21033d3603f1dac3bfd6062c37f69a1681cd/src%2Ftest%2Fui%2Fproc-macro%2Fderive-helper-legacy-spurious.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c02d21033d3603f1dac3bfd6062c37f69a1681cd/src%2Ftest%2Fui%2Fproc-macro%2Fderive-helper-legacy-spurious.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fderive-helper-legacy-spurious.rs?ref=c02d21033d3603f1dac3bfd6062c37f69a1681cd", "patch": "@@ -0,0 +1,13 @@\n+// aux-build:test-macros.rs\n+\n+#![dummy] //~ ERROR cannot find attribute `dummy` in this scope\n+\n+#[macro_use]\n+extern crate test_macros;\n+\n+#[derive(Empty)] //~ ERROR cannot determine resolution for the attribute macro `derive`\n+#[empty_helper] //~ WARN derive helper attribute is used before it is introduced\n+                //~| WARN this was previously accepted\n+struct Foo {}\n+\n+fn main() {}"}, {"sha": "96754fed9933c4647a0a2181bcdd2bcc5d26a798", "filename": "src/test/ui/proc-macro/derive-helper-legacy-spurious.stderr", "status": "added", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/c02d21033d3603f1dac3bfd6062c37f69a1681cd/src%2Ftest%2Fui%2Fproc-macro%2Fderive-helper-legacy-spurious.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/c02d21033d3603f1dac3bfd6062c37f69a1681cd/src%2Ftest%2Fui%2Fproc-macro%2Fderive-helper-legacy-spurious.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fderive-helper-legacy-spurious.stderr?ref=c02d21033d3603f1dac3bfd6062c37f69a1681cd", "patch": "@@ -0,0 +1,28 @@\n+error: cannot find attribute `dummy` in this scope\n+  --> $DIR/derive-helper-legacy-spurious.rs:3:4\n+   |\n+LL | #![dummy]\n+   |    ^^^^^\n+\n+error: cannot determine resolution for the attribute macro `derive`\n+  --> $DIR/derive-helper-legacy-spurious.rs:8:3\n+   |\n+LL | #[derive(Empty)]\n+   |   ^^^^^^\n+   |\n+   = note: import resolution is stuck, try simplifying macro imports\n+\n+warning: derive helper attribute is used before it is introduced\n+  --> $DIR/derive-helper-legacy-spurious.rs:9:3\n+   |\n+LL | #[derive(Empty)]\n+   |          ----- the attribute is introduced here\n+LL | #[empty_helper]\n+   |   ^^^^^^^^^^^^\n+   |\n+   = note: `#[warn(legacy_derive_helpers)]` on by default\n+   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n+   = note: for more information, see issue #79202 <https://github.com/rust-lang/rust/issues/79202>\n+\n+error: aborting due to 2 previous errors; 1 warning emitted\n+"}, {"sha": "f8079675641169c2303f8894e8757aab3fb576cc", "filename": "src/test/ui/proc-macro/inert-attribute-order.rs", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/c02d21033d3603f1dac3bfd6062c37f69a1681cd/src%2Ftest%2Fui%2Fproc-macro%2Finert-attribute-order.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c02d21033d3603f1dac3bfd6062c37f69a1681cd/src%2Ftest%2Fui%2Fproc-macro%2Finert-attribute-order.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Finert-attribute-order.rs?ref=c02d21033d3603f1dac3bfd6062c37f69a1681cd", "patch": "@@ -0,0 +1,23 @@\n+// Order of inert attributes, both built-in and custom is preserved during expansion.\n+\n+// check-pass\n+// compile-flags: -Z span-debug\n+// aux-build:test-macros.rs\n+\n+#![no_std] // Don't load unnecessary hygiene information from std\n+extern crate std;\n+\n+#[macro_use]\n+extern crate test_macros;\n+\n+/// 1\n+#[rustfmt::attr2]\n+#[doc = \"3\"]\n+#[print_attr(nodebug)]\n+#[doc = \"4\"]\n+#[rustfmt::attr5]\n+/// 6\n+#[print_attr(nodebug)]\n+struct S;\n+\n+fn main() {}"}, {"sha": "7c0620b50b30f4694ccf8c09484d26a20b322f98", "filename": "src/test/ui/proc-macro/inert-attribute-order.stdout", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/c02d21033d3603f1dac3bfd6062c37f69a1681cd/src%2Ftest%2Fui%2Fproc-macro%2Finert-attribute-order.stdout", "raw_url": "https://github.com/rust-lang/rust/raw/c02d21033d3603f1dac3bfd6062c37f69a1681cd/src%2Ftest%2Fui%2Fproc-macro%2Finert-attribute-order.stdout", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Finert-attribute-order.stdout?ref=c02d21033d3603f1dac3bfd6062c37f69a1681cd", "patch": "@@ -0,0 +1,7 @@\n+PRINT-ATTR INPUT (DISPLAY): /// 1\n+#[doc = \"3\"] #[doc = \"4\"] #[rustfmt :: attr5] /// 6\n+#[print_attr(nodebug)] #[rustfmt :: attr2] struct S ;\n+PRINT-ATTR RE-COLLECTED (DISPLAY): #[doc = \" 1\"] #[doc = \"3\"] #[doc = \"4\"] #[rustfmt :: attr5] #[doc = \" 6\"]\n+#[print_attr(nodebug)] #[rustfmt :: attr2] struct S ;\n+PRINT-ATTR INPUT (DISPLAY): #[doc = \" 1\"] #[doc = \"3\"] #[doc = \"4\"] #[doc = \" 6\"] #[rustfmt :: attr2]\n+#[rustfmt :: attr5] struct S ;"}]}