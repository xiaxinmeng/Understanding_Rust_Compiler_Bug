{"sha": "a9d15a6e92f2f68dad632b20ad26d3698dec75f8", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE5ZDE1YTZlOTJmMmY2OGRhZDYzMmIyMGFkMjZkMzY5OGRlYzc1Zjg=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2015-11-23T22:53:14Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2015-11-23T22:53:14Z"}, "message": "Auto merge of #29955 - bltavares:makefile-29554, r=brson\n\nReference #29554", "tree": {"sha": "49cd72bdb18516a954f8d224d1ed69d7358d5520", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/49cd72bdb18516a954f8d224d1ed69d7358d5520"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a9d15a6e92f2f68dad632b20ad26d3698dec75f8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a9d15a6e92f2f68dad632b20ad26d3698dec75f8", "html_url": "https://github.com/rust-lang/rust/commit/a9d15a6e92f2f68dad632b20ad26d3698dec75f8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a9d15a6e92f2f68dad632b20ad26d3698dec75f8/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "040a77f772d7693598499a161f53ed230fb61c52", "url": "https://api.github.com/repos/rust-lang/rust/commits/040a77f772d7693598499a161f53ed230fb61c52", "html_url": "https://github.com/rust-lang/rust/commit/040a77f772d7693598499a161f53ed230fb61c52"}, {"sha": "07b7f2fbc922ec7aa0c99d06d042e1d553e2a25a", "url": "https://api.github.com/repos/rust-lang/rust/commits/07b7f2fbc922ec7aa0c99d06d042e1d553e2a25a", "html_url": "https://github.com/rust-lang/rust/commit/07b7f2fbc922ec7aa0c99d06d042e1d553e2a25a"}], "stats": {"total": 13, "additions": 9, "deletions": 4}, "files": [{"sha": "1c63f74db3b9b03b0a233d0dc29f87966c805eef", "filename": "configure", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/a9d15a6e92f2f68dad632b20ad26d3698dec75f8/configure", "raw_url": "https://github.com/rust-lang/rust/raw/a9d15a6e92f2f68dad632b20ad26d3698dec75f8/configure", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/configure?ref=a9d15a6e92f2f68dad632b20ad26d3698dec75f8", "patch": "@@ -1053,12 +1053,13 @@ fi\n # point in the script; after this point, script logic should inspect\n # $CFG_USING_CLANG rather than $CFG_ENABLE_CLANG.\n \n-# Set CFG_{CC,CXX,CPP,CFLAGS,CXXFLAGS}\n+# Set CFG_{CC,CXX,CPP,CFLAGS,CXXFLAGS,LDFLAGS}\n envopt CC\n envopt CXX\n envopt CPP\n envopt CFLAGS\n envopt CXXFLAGS\n+envopt LDFLAGS\n \n # stdc++ name in use\n # used to manage non-standard name (on OpenBSD for example)\n@@ -1667,9 +1668,9 @@ do\n \n         CXX=$LLVM_CXX\n         CC=$LLVM_CC\n-        CFLAGS=$LLVM_CFLAGS\n-        CXXFLAGS=$LLVM_CXXFLAGS\n-        LDFLAGS=$LLVM_LDFLAGS\n+        CFLAGS=\"$CFLAGS $LLVM_CFLAGS\"\n+        CXXFLAGS=\"$CXXFLAGS $LLVM_CXXFLAGS\"\n+        LDFLAGS=\"$LDFLAGS $LLVM_LDFLAGS\"\n \n         if [ -z \"$CFG_DISABLE_LIBCPP\" ] && [ -n \"$CFG_USING_CLANG\" ]; then\n             LLVM_OPTS=\"$LLVM_OPTS --enable-libcpp\""}, {"sha": "fd8416e8a6e61b8399e73e42acc98538fc702690", "filename": "mk/platform.mk", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/a9d15a6e92f2f68dad632b20ad26d3698dec75f8/mk%2Fplatform.mk", "raw_url": "https://github.com/rust-lang/rust/raw/a9d15a6e92f2f68dad632b20ad26d3698dec75f8/mk%2Fplatform.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mk%2Fplatform.mk?ref=a9d15a6e92f2f68dad632b20ad26d3698dec75f8", "patch": "@@ -189,21 +189,25 @@ define CFG_MAKE_TOOLCHAIN\n   endif\n \n   CFG_COMPILE_C_$(1) = $$(CC_$(1)) \\\n+        $$(CFLAGS) \\\n         $$(CFG_GCCISH_CFLAGS) \\\n         $$(CFG_GCCISH_CFLAGS_$(1)) \\\n         -c $$(call CFG_CC_OUTPUT_$(1),$$(1)) $$(2)\n   CFG_LINK_C_$(1) = $$(CC_$(1)) \\\n+        $$(LDFLAGS) \\\n         $$(CFG_GCCISH_LINK_FLAGS) -o $$(1) \\\n         $$(CFG_GCCISH_LINK_FLAGS_$(1)) \\\n         $$(CFG_GCCISH_DEF_FLAG_$(1))$$(3) $$(2) \\\n         $$(call CFG_INSTALL_NAME_$(1),$$(4))\n   CFG_COMPILE_CXX_$(1) = $$(CXX_$(1)) \\\n+        $$(CXXFLAGS) \\\n         $$(CFG_GCCISH_CFLAGS) \\\n         $$(CFG_GCCISH_CXXFLAGS) \\\n         $$(CFG_GCCISH_CFLAGS_$(1)) \\\n         $$(CFG_GCCISH_CXXFLAGS_$(1)) \\\n         -c $$(call CFG_CC_OUTPUT_$(1),$$(1)) $$(2)\n   CFG_LINK_CXX_$(1) = $$(CXX_$(1)) \\\n+        $$(LDFLAGS) \\\n         $$(CFG_GCCISH_LINK_FLAGS) -o $$(1) \\\n         $$(CFG_GCCISH_LINK_FLAGS_$(1)) \\\n         $$(CFG_GCCISH_DEF_FLAG_$(1))$$(3) $$(2) \\"}]}