{"sha": "991850bc3c2ff34fe8b3e63815067307d8d90db6", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk5MTg1MGJjM2MyZmYzNGZlOGIzZTYzODE1MDY3MzA3ZDhkOTBkYjY=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-07-01T10:31:03Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-07-01T10:31:03Z"}, "message": "Unify magic env var name", "tree": {"sha": "78b54055f2f5394ce4b75bbaf6f97bad466710ae", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/78b54055f2f5394ce4b75bbaf6f97bad466710ae"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/991850bc3c2ff34fe8b3e63815067307d8d90db6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/991850bc3c2ff34fe8b3e63815067307d8d90db6", "html_url": "https://github.com/rust-lang/rust/commit/991850bc3c2ff34fe8b3e63815067307d8d90db6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/991850bc3c2ff34fe8b3e63815067307d8d90db6/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7b0113b3d588fdc1f95eca1286fb2f6881abe65a", "url": "https://api.github.com/repos/rust-lang/rust/commits/7b0113b3d588fdc1f95eca1286fb2f6881abe65a", "html_url": "https://github.com/rust-lang/rust/commit/7b0113b3d588fdc1f95eca1286fb2f6881abe65a"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "7b4232497ef9ee431c0e484b4417b4ea712d7f7c", "filename": "crates/ra_syntax/src/tests.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/991850bc3c2ff34fe8b3e63815067307d8d90db6/crates%2Fra_syntax%2Fsrc%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/991850bc3c2ff34fe8b3e63815067307d8d90db6/crates%2Fra_syntax%2Fsrc%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Fsrc%2Ftests.rs?ref=991850bc3c2ff34fe8b3e63815067307d8d90db6", "patch": "@@ -274,7 +274,7 @@ fn assert_equal_text(expected: &str, actual: &str, path: &Path) {\n         fs::write(path, actual).unwrap();\n         return;\n     }\n-    if env::var(\"UPDATE_EXPECTATIONS\").is_ok() {\n+    if env::var(\"UPDATE_EXPECT\").is_ok() {\n         println!(\"rewriting {}\", pretty_path.display());\n         fs::write(path, actual).unwrap();\n         return;"}, {"sha": "f87462400473135e14c03cf4f10896f1c492b1ac", "filename": "docs/dev/README.md", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/991850bc3c2ff34fe8b3e63815067307d8d90db6/docs%2Fdev%2FREADME.md", "raw_url": "https://github.com/rust-lang/rust/raw/991850bc3c2ff34fe8b3e63815067307d8d90db6/docs%2Fdev%2FREADME.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/docs%2Fdev%2FREADME.md?ref=991850bc3c2ff34fe8b3e63815067307d8d90db6", "patch": "@@ -361,10 +361,10 @@ There are two kinds of tests:\n The purpose of inline tests is not to achieve full coverage by test cases, but to explain to the reader of the code what each particular `if` and `match` is responsible for.\n If you are tempted to add a large inline test, it might be a good idea to leave only the simplest example in place, and move the test to a manual `parser/ok` test.\n \n-To update test data, run with `UPDATE_EXPECTATIONS` variable:\n+To update test data, run with `UPDATE_EXPECT` variable:\n \n ```bash\n-env UPDATE_EXPECTATIONS=1 cargo qt\n+env UPDATE_EXPECT=1 cargo qt\n ```\n \n After adding a new inline test you need to run `cargo xtest codegen` and also update the test data as described above."}]}