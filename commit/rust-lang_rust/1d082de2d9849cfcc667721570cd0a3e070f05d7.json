{"sha": "1d082de2d9849cfcc667721570cd0a3e070f05d7", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFkMDgyZGUyZDk4NDljZmNjNjY3NzIxNTcwY2QwYTNlMDcwZjA1ZDc=", "commit": {"author": {"name": "Steve Klabnik", "email": "steve@steveklabnik.com", "date": "2015-04-21T01:15:54Z"}, "committer": {"name": "Steve Klabnik", "email": "steve@steveklabnik.com", "date": "2015-04-21T01:15:54Z"}, "message": "Rollup merge of #24643 - steveklabnik:doc_if_let, r=jakub-\n\nand while let", "tree": {"sha": "e0ee0e653aff47b75375d0daca62a1cc41d000c5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e0ee0e653aff47b75375d0daca62a1cc41d000c5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1d082de2d9849cfcc667721570cd0a3e070f05d7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1d082de2d9849cfcc667721570cd0a3e070f05d7", "html_url": "https://github.com/rust-lang/rust/commit/1d082de2d9849cfcc667721570cd0a3e070f05d7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1d082de2d9849cfcc667721570cd0a3e070f05d7/comments", "author": {"login": "steveklabnik", "id": 27786, "node_id": "MDQ6VXNlcjI3Nzg2", "avatar_url": "https://avatars.githubusercontent.com/u/27786?v=4", "gravatar_id": "", "url": "https://api.github.com/users/steveklabnik", "html_url": "https://github.com/steveklabnik", "followers_url": "https://api.github.com/users/steveklabnik/followers", "following_url": "https://api.github.com/users/steveklabnik/following{/other_user}", "gists_url": "https://api.github.com/users/steveklabnik/gists{/gist_id}", "starred_url": "https://api.github.com/users/steveklabnik/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/steveklabnik/subscriptions", "organizations_url": "https://api.github.com/users/steveklabnik/orgs", "repos_url": "https://api.github.com/users/steveklabnik/repos", "events_url": "https://api.github.com/users/steveklabnik/events{/privacy}", "received_events_url": "https://api.github.com/users/steveklabnik/received_events", "type": "User", "site_admin": false}, "committer": {"login": "steveklabnik", "id": 27786, "node_id": "MDQ6VXNlcjI3Nzg2", "avatar_url": "https://avatars.githubusercontent.com/u/27786?v=4", "gravatar_id": "", "url": "https://api.github.com/users/steveklabnik", "html_url": "https://github.com/steveklabnik", "followers_url": "https://api.github.com/users/steveklabnik/followers", "following_url": "https://api.github.com/users/steveklabnik/following{/other_user}", "gists_url": "https://api.github.com/users/steveklabnik/gists{/gist_id}", "starred_url": "https://api.github.com/users/steveklabnik/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/steveklabnik/subscriptions", "organizations_url": "https://api.github.com/users/steveklabnik/orgs", "repos_url": "https://api.github.com/users/steveklabnik/repos", "events_url": "https://api.github.com/users/steveklabnik/events{/privacy}", "received_events_url": "https://api.github.com/users/steveklabnik/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d09a0cda3a2268c081311c7ddf262c104130c7d2", "url": "https://api.github.com/repos/rust-lang/rust/commits/d09a0cda3a2268c081311c7ddf262c104130c7d2", "html_url": "https://github.com/rust-lang/rust/commit/d09a0cda3a2268c081311c7ddf262c104130c7d2"}, {"sha": "570b250b8f04f5e32f9710b90eba2d566d2f4594", "url": "https://api.github.com/repos/rust-lang/rust/commits/570b250b8f04f5e32f9710b90eba2d566d2f4594", "html_url": "https://github.com/rust-lang/rust/commit/570b250b8f04f5e32f9710b90eba2d566d2f4594"}], "stats": {"total": 81, "additions": 80, "deletions": 1}, "files": [{"sha": "7173303e3b15203109a9b094e62b2ccc989daca4", "filename": "src/doc/trpl/if-let.md", "status": "modified", "additions": 80, "deletions": 1, "changes": 81, "blob_url": "https://github.com/rust-lang/rust/blob/1d082de2d9849cfcc667721570cd0a3e070f05d7/src%2Fdoc%2Ftrpl%2Fif-let.md", "raw_url": "https://github.com/rust-lang/rust/raw/1d082de2d9849cfcc667721570cd0a3e070f05d7/src%2Fdoc%2Ftrpl%2Fif-let.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Ftrpl%2Fif-let.md?ref=1d082de2d9849cfcc667721570cd0a3e070f05d7", "patch": "@@ -1,3 +1,82 @@\n % if let\n \n-COMING SOON\n+`if let` allows you to combine `if` and `let` together to reduce the overhead\n+of certain kinds of pattern matches.\n+\n+For example, let\u2019s say we have some sort of `Option<T>`. We want to call a function\n+on it if it\u2019s `Some<T>`, but do nothing if it\u2019s `None`. That looks like this:\n+\n+```rust\n+# let option = Some(5);\n+# fn foo(x: i32) { }\n+match option {\n+    Some(x) => { foo(x) },\n+    None => {},\n+}\n+```\n+\n+We don\u2019t have to use `match` here, for example, we could use `if`:\n+\n+```rust\n+# let option = Some(5);\n+# fn foo(x: i32) { }\n+if option.is_some() {\n+    let x = option.unwrap();\n+    foo(x);\n+}\n+```\n+\n+Neither of these options is particularly appealing. We can use `if let` to\n+do the same thing in a nicer way:\n+\n+```rust\n+# let option = Some(5);\n+# fn foo(x: i32) { }\n+if let Some(x) = option {\n+    foo(x);\n+}\n+```\n+\n+If a [pattern][patterns] matches successfully, it binds any appropriate parts of\n+the value to the identifiers in the pattern, then evaluates the expression. If\n+the pattern doesn\u2019t match, nothing happens.\n+\n+If you\u2019d rather to do something else when the pattern does not match, you can\n+use `else`:\n+\n+```rust\n+# let option = Some(5);\n+# fn foo(x: i32) { }\n+# fn bar() { }\n+if let Some(x) = option {\n+    foo(x);\n+} else {\n+    bar();\n+}\n+```\n+\n+## `while let`\n+\n+In a similar fashion, `while let` can be used when you want to conditionally\n+loop as long as a value matches a certain pattern. It turns code like this:\n+\n+```rust\n+# let option: Option<i32> = None;\n+loop {\n+    match option {\n+        Some(x) => println!(\"{}\", x),\n+\t_ => break,\n+    }\n+}\n+```\n+\n+Into code like this:\n+\n+```rust\n+# let option: Option<i32> = None;\n+while let Some(x) = option {\n+    println!(\"{}\", x);\n+}\n+```\n+\n+[patterns]: patterns.html"}]}