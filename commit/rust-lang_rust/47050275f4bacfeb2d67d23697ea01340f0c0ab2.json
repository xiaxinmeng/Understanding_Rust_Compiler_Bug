{"sha": "47050275f4bacfeb2d67d23697ea01340f0c0ab2", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ3MDUwMjc1ZjRiYWNmZWIyZDY3ZDIzNjk3ZWEwMTM0MGYwYzBhYjI=", "commit": {"author": {"name": "Yuki Okushi", "email": "jtitor@2k36.org", "date": "2021-05-07T06:20:29Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-05-07T06:20:29Z"}, "message": "Rollup merge of #84972 - RalfJung:null-ptr-msg, r=oli-obk\n\nCTFE inbounds-error-messages tweak\n\n* use CheckInAllocMsg::PointerArithmeticTest for ptr_offset error\n* nicer errors for some null pointer cases\n\nr? `@oli-obk`", "tree": {"sha": "9b56520739044e290d4e1cc789ba8eaca61a8255", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9b56520739044e290d4e1cc789ba8eaca61a8255"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/47050275f4bacfeb2d67d23697ea01340f0c0ab2", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJglNwtCRBK7hj4Ov3rIwAAhrQIAHy97r/SgMJwb19Wrx8F5vmZ\nNdmLdyGlUK6Mb/CaCv/lTAsZzjl4tC+FzXDOT6gm+Wd3G597M2n9hAD4zuU0yRrh\n494WDKfLNLf5ES3BxVqJ1540EdICRhtGYsmEa3F/tceUrMqHmE+z8EB0LlS1RGha\n4SBYYQkwL/QiB4DYS0wi01BDuEuIrzrd2ExSMt3EUcapgCatxZL/Us7sh05xJ0G8\nGQP6d9jGCZy7VJ0VR+0jl6rgAvxKGuTcY9bs/uCO20iIr0KldFxpR61O0icgC9Ul\neyD5dLTHJHUOkq8qN+wXb+6vCnfmSNEE0TYNDAxlargDjHWZARMUnMkayw1B4f4=\n=XwSh\n-----END PGP SIGNATURE-----\n", "payload": "tree 9b56520739044e290d4e1cc789ba8eaca61a8255\nparent 326fec27a6e7df3947e7b62bec43ab86b776ea9d\nparent bcf622b87d83867c1a765ca699ca3c15e462e5f8\nauthor Yuki Okushi <jtitor@2k36.org> 1620368429 +0900\ncommitter GitHub <noreply@github.com> 1620368429 +0900\n\nRollup merge of #84972 - RalfJung:null-ptr-msg, r=oli-obk\n\nCTFE inbounds-error-messages tweak\n\n* use CheckInAllocMsg::PointerArithmeticTest for ptr_offset error\n* nicer errors for some null pointer cases\n\nr? `@oli-obk`\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/47050275f4bacfeb2d67d23697ea01340f0c0ab2", "html_url": "https://github.com/rust-lang/rust/commit/47050275f4bacfeb2d67d23697ea01340f0c0ab2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/47050275f4bacfeb2d67d23697ea01340f0c0ab2/comments", "author": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "326fec27a6e7df3947e7b62bec43ab86b776ea9d", "url": "https://api.github.com/repos/rust-lang/rust/commits/326fec27a6e7df3947e7b62bec43ab86b776ea9d", "html_url": "https://github.com/rust-lang/rust/commit/326fec27a6e7df3947e7b62bec43ab86b776ea9d"}, {"sha": "bcf622b87d83867c1a765ca699ca3c15e462e5f8", "url": "https://api.github.com/repos/rust-lang/rust/commits/bcf622b87d83867c1a765ca699ca3c15e462e5f8", "html_url": "https://github.com/rust-lang/rust/commit/bcf622b87d83867c1a765ca699ca3c15e462e5f8"}], "stats": {"total": 26, "additions": 15, "deletions": 11}, "files": [{"sha": "ea582d470f906c4fe814ce392196be6905176fe4", "filename": "compiler/rustc_middle/src/mir/interpret/error.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/47050275f4bacfeb2d67d23697ea01340f0c0ab2/compiler%2Frustc_middle%2Fsrc%2Fmir%2Finterpret%2Ferror.rs", "raw_url": "https://github.com/rust-lang/rust/raw/47050275f4bacfeb2d67d23697ea01340f0c0ab2/compiler%2Frustc_middle%2Fsrc%2Fmir%2Finterpret%2Ferror.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fmir%2Finterpret%2Ferror.rs?ref=47050275f4bacfeb2d67d23697ea01340f0c0ab2", "patch": "@@ -306,6 +306,9 @@ impl fmt::Display for UndefinedBehaviorInfo<'_> {\n                 ptr.alloc_id,\n                 allocation_size.bytes()\n             ),\n+            DanglingIntPointer(_, CheckInAllocMsg::InboundsTest) => {\n+                write!(f, \"null pointer is not allowed for this operation\")\n+            }\n             DanglingIntPointer(i, msg) => {\n                 write!(f, \"{} failed: 0x{:x} is not a valid pointer\", msg, i)\n             }"}, {"sha": "69ab50fa86ede291ca440996b60dc85869a79e28", "filename": "compiler/rustc_mir/src/interpret/intrinsics.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/47050275f4bacfeb2d67d23697ea01340f0c0ab2/compiler%2Frustc_mir%2Fsrc%2Finterpret%2Fintrinsics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/47050275f4bacfeb2d67d23697ea01340f0c0ab2/compiler%2Frustc_mir%2Fsrc%2Finterpret%2Fintrinsics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir%2Fsrc%2Finterpret%2Fintrinsics.rs?ref=47050275f4bacfeb2d67d23697ea01340f0c0ab2", "patch": "@@ -526,7 +526,7 @@ impl<'mir, 'tcx: 'mir, M: Machine<'mir, 'tcx>> InterpCx<'mir, 'tcx, M> {\n             min_ptr,\n             Size::from_bytes(size),\n             None,\n-            CheckInAllocMsg::InboundsTest,\n+            CheckInAllocMsg::PointerArithmeticTest,\n         )?;\n         Ok(offset_ptr)\n     }"}, {"sha": "52baf1a63305748e130813c822fed9ad3ad4254d", "filename": "compiler/rustc_mir/src/interpret/machine.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/47050275f4bacfeb2d67d23697ea01340f0c0ab2/compiler%2Frustc_mir%2Fsrc%2Finterpret%2Fmachine.rs", "raw_url": "https://github.com/rust-lang/rust/raw/47050275f4bacfeb2d67d23697ea01340f0c0ab2/compiler%2Frustc_mir%2Fsrc%2Finterpret%2Fmachine.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir%2Fsrc%2Finterpret%2Fmachine.rs?ref=47050275f4bacfeb2d67d23697ea01340f0c0ab2", "patch": "@@ -369,6 +369,7 @@ pub trait Machine<'mir, 'tcx>: Sized {\n     ) -> InterpResult<'tcx, Pointer<Self::PointerTag>> {\n         Err((if int == 0 {\n             // This is UB, seriously.\n+            // (`DanglingIntPointer` with these exact arguments has special printing code.)\n             err_ub!(DanglingIntPointer(0, CheckInAllocMsg::InboundsTest))\n         } else {\n             // This is just something we cannot support during const-eval."}, {"sha": "6e6e64d25ac38cb50c2efddc2cd3d0d9442d900c", "filename": "compiler/rustc_mir/src/interpret/validity.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/47050275f4bacfeb2d67d23697ea01340f0c0ab2/compiler%2Frustc_mir%2Fsrc%2Finterpret%2Fvalidity.rs", "raw_url": "https://github.com/rust-lang/rust/raw/47050275f4bacfeb2d67d23697ea01340f0c0ab2/compiler%2Frustc_mir%2Fsrc%2Finterpret%2Fvalidity.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir%2Fsrc%2Finterpret%2Fvalidity.rs?ref=47050275f4bacfeb2d67d23697ea01340f0c0ab2", "patch": "@@ -330,7 +330,7 @@ impl<'rt, 'mir, 'tcx: 'mir, M: Machine<'mir, 'tcx>> ValidityVisitor<'rt, 'mir, '\n                         vtable,\n                         3 * self.ecx.tcx.data_layout.pointer_size, // drop, size, align\n                         Some(self.ecx.tcx.data_layout.pointer_align.abi),\n-                        CheckInAllocMsg::InboundsTest,\n+                        CheckInAllocMsg::InboundsTest, // will anyway be replaced by validity message\n                     ),\n                     self.path,\n                     err_ub!(DanglingIntPointer(..)) |\n@@ -416,7 +416,7 @@ impl<'rt, 'mir, 'tcx: 'mir, M: Machine<'mir, 'tcx>> ValidityVisitor<'rt, 'mir, '\n                 place.ptr,\n                 size,\n                 Some(align),\n-                CheckInAllocMsg::InboundsTest,\n+                CheckInAllocMsg::InboundsTest, // will anyway be replaced by validity message\n             ),\n             self.path,\n             err_ub!(AlignmentCheckFailed { required, has }) =>"}, {"sha": "404ce409d93bc67801e6cf86cc485c4a7fcd36ca", "filename": "src/test/ui/consts/const-eval/ub-wide-ptr.32bit.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/47050275f4bacfeb2d67d23697ea01340f0c0ab2/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fub-wide-ptr.32bit.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/47050275f4bacfeb2d67d23697ea01340f0c0ab2/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fub-wide-ptr.32bit.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fub-wide-ptr.32bit.stderr?ref=47050275f4bacfeb2d67d23697ea01340f0c0ab2", "patch": "@@ -296,7 +296,7 @@ error[E0080]: could not evaluate static initializer\n   --> $DIR/ub-wide-ptr.rs:135:5\n    |\n LL |     mem::transmute::<_, &dyn Trait>((&92u8, 0usize))\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ inbounds test failed: 0x0 is not a valid pointer\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ null pointer is not allowed for this operation\n \n error[E0080]: could not evaluate static initializer\n   --> $DIR/ub-wide-ptr.rs:139:5"}, {"sha": "39c5654276284ded2e5e1c1d4d446d8fce645ebc", "filename": "src/test/ui/consts/const-eval/ub-wide-ptr.64bit.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/47050275f4bacfeb2d67d23697ea01340f0c0ab2/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fub-wide-ptr.64bit.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/47050275f4bacfeb2d67d23697ea01340f0c0ab2/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fub-wide-ptr.64bit.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fub-wide-ptr.64bit.stderr?ref=47050275f4bacfeb2d67d23697ea01340f0c0ab2", "patch": "@@ -296,7 +296,7 @@ error[E0080]: could not evaluate static initializer\n   --> $DIR/ub-wide-ptr.rs:135:5\n    |\n LL |     mem::transmute::<_, &dyn Trait>((&92u8, 0usize))\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ inbounds test failed: 0x0 is not a valid pointer\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ null pointer is not allowed for this operation\n \n error[E0080]: could not evaluate static initializer\n   --> $DIR/ub-wide-ptr.rs:139:5"}, {"sha": "d5d213f9c79d4ceb783fa99a117839c6482711d4", "filename": "src/test/ui/consts/offset_from_ub.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/47050275f4bacfeb2d67d23697ea01340f0c0ab2/src%2Ftest%2Fui%2Fconsts%2Foffset_from_ub.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/47050275f4bacfeb2d67d23697ea01340f0c0ab2/src%2Ftest%2Fui%2Fconsts%2Foffset_from_ub.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Foffset_from_ub.stderr?ref=47050275f4bacfeb2d67d23697ea01340f0c0ab2", "patch": "@@ -74,7 +74,7 @@ error: any use of this value will cause an error\n LL |           unsafe { intrinsics::ptr_offset_from(self, origin) }\n    |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |                    |\n-   |                    inbounds test failed: 0x0 is not a valid pointer\n+   |                    null pointer is not allowed for this operation\n    |                    inside `ptr::const_ptr::<impl *const u8>::offset_from` at $SRC_DIR/core/src/ptr/const_ptr.rs:LL:COL\n    |                    inside `OFFSET_FROM_NULL` at $DIR/offset_from_ub.rs:36:14\n    | "}, {"sha": "45203d3e271199b82e42e735f8d6685b51aa901e", "filename": "src/test/ui/consts/offset_ub.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/47050275f4bacfeb2d67d23697ea01340f0c0ab2/src%2Ftest%2Fui%2Fconsts%2Foffset_ub.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/47050275f4bacfeb2d67d23697ea01340f0c0ab2/src%2Ftest%2Fui%2Fconsts%2Foffset_ub.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Foffset_ub.stderr?ref=47050275f4bacfeb2d67d23697ea01340f0c0ab2", "patch": "@@ -23,7 +23,7 @@ error: any use of this value will cause an error\n LL |         unsafe { intrinsics::offset(self, count) }\n    |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |                  |\n-   |                  inbounds test failed: pointer must be in-bounds at offset 2, but is outside bounds of allocN which has size 1\n+   |                  pointer arithmetic failed: pointer must be in-bounds at offset 2, but is outside bounds of allocN which has size 1\n    |                  inside `ptr::const_ptr::<impl *const u8>::offset` at $SRC_DIR/core/src/ptr/const_ptr.rs:LL:COL\n    |                  inside `AFTER_END` at $DIR/offset_ub.rs:7:43\n    | \n@@ -41,7 +41,7 @@ error: any use of this value will cause an error\n LL |         unsafe { intrinsics::offset(self, count) }\n    |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |                  |\n-   |                  inbounds test failed: pointer must be in-bounds at offset 101, but is outside bounds of allocN which has size 100\n+   |                  pointer arithmetic failed: pointer must be in-bounds at offset 101, but is outside bounds of allocN which has size 100\n    |                  inside `ptr::const_ptr::<impl *const u8>::offset` at $SRC_DIR/core/src/ptr/const_ptr.rs:LL:COL\n    |                  inside `AFTER_ARRAY` at $DIR/offset_ub.rs:8:45\n    | \n@@ -131,7 +131,7 @@ error: any use of this value will cause an error\n LL |         unsafe { intrinsics::offset(self, count) }\n    |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |                  |\n-   |                  inbounds test failed: pointer must be in-bounds at offset 1, but is outside bounds of allocN which has size 0\n+   |                  pointer arithmetic failed: pointer must be in-bounds at offset 1, but is outside bounds of allocN which has size 0\n    |                  inside `ptr::const_ptr::<impl *const u8>::offset` at $SRC_DIR/core/src/ptr/const_ptr.rs:LL:COL\n    |                  inside `ZERO_SIZED_ALLOC` at $DIR/offset_ub.rs:15:50\n    | \n@@ -167,7 +167,7 @@ error: any use of this value will cause an error\n LL |         unsafe { intrinsics::offset(self, count) }\n    |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |                  |\n-   |                  inbounds test failed: 0x0 is not a valid pointer\n+   |                  pointer arithmetic failed: 0x0 is not a valid pointer\n    |                  inside `ptr::const_ptr::<impl *const u8>::offset` at $SRC_DIR/core/src/ptr/const_ptr.rs:LL:COL\n    |                  inside `NULL_OFFSET_ZERO` at $DIR/offset_ub.rs:19:50\n    | "}, {"sha": "62b33000e60b8e214fb41a2c29c2e406024f3db6", "filename": "src/test/ui/consts/ptr_comparisons.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/47050275f4bacfeb2d67d23697ea01340f0c0ab2/src%2Ftest%2Fui%2Fconsts%2Fptr_comparisons.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/47050275f4bacfeb2d67d23697ea01340f0c0ab2/src%2Ftest%2Fui%2Fconsts%2Fptr_comparisons.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fptr_comparisons.stderr?ref=47050275f4bacfeb2d67d23697ea01340f0c0ab2", "patch": "@@ -4,7 +4,7 @@ error: any use of this value will cause an error\n LL |         unsafe { intrinsics::offset(self, count) }\n    |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |                  |\n-   |                  inbounds test failed: pointer must be in-bounds at offset $TWO_WORDS, but is outside bounds of alloc2 which has size $WORD\n+   |                  pointer arithmetic failed: pointer must be in-bounds at offset $TWO_WORDS, but is outside bounds of alloc2 which has size $WORD\n    |                  inside `ptr::const_ptr::<impl *const usize>::offset` at $SRC_DIR/core/src/ptr/const_ptr.rs:LL:COL\n    |                  inside `_` at $DIR/ptr_comparisons.rs:61:34\n    | "}]}