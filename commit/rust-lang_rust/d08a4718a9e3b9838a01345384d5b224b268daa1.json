{"sha": "d08a4718a9e3b9838a01345384d5b224b268daa1", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQwOGE0NzE4YTllM2I5ODM4YTAxMzQ1Mzg0ZDViMjI0YjI2OGRhYTE=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-06-28T03:43:39Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-06-28T03:43:39Z"}, "message": "Auto merge of #85876 - jeanlucthumm:master, r=GuillaumeGomez\n\nAdd `go_to_first` query param to jump to first result\n\nFixes #84214\n\nNote that while the issue initially wanted to navigate to an entry on exact match, the discussion settled on using a query parameter (`&go_to_first=true`) instead, regardless of exact or partial match.\n\nDemonstration is attached\n\nhttps://user-images.githubusercontent.com/4934853/120258768-7ff28980-c247-11eb-8c8f-1a2ceb242788.mp4", "tree": {"sha": "2e8b273fa5202ae51bd947e993d6ddf77ef0ec75", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2e8b273fa5202ae51bd947e993d6ddf77ef0ec75"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d08a4718a9e3b9838a01345384d5b224b268daa1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d08a4718a9e3b9838a01345384d5b224b268daa1", "html_url": "https://github.com/rust-lang/rust/commit/d08a4718a9e3b9838a01345384d5b224b268daa1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d08a4718a9e3b9838a01345384d5b224b268daa1/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "345530412f6f198a8c27258020ab65e5b9a0305a", "url": "https://api.github.com/repos/rust-lang/rust/commits/345530412f6f198a8c27258020ab65e5b9a0305a", "html_url": "https://github.com/rust-lang/rust/commit/345530412f6f198a8c27258020ab65e5b9a0305a"}, {"sha": "6c5c0a58535e050501afe66204f477c013468e54", "url": "https://api.github.com/repos/rust-lang/rust/commits/6c5c0a58535e050501afe66204f477c013468e54", "html_url": "https://github.com/rust-lang/rust/commit/6c5c0a58535e050501afe66204f477c013468e54"}], "stats": {"total": 34, "additions": 30, "deletions": 4}, "files": [{"sha": "3fa91bb51f02fb7d8c0ee8d2a6fac50c6aa410da", "filename": "src/doc/rustdoc/src/SUMMARY.md", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d08a4718a9e3b9838a01345384d5b224b268daa1/src%2Fdoc%2Frustdoc%2Fsrc%2FSUMMARY.md", "raw_url": "https://github.com/rust-lang/rust/raw/d08a4718a9e3b9838a01345384d5b224b268daa1/src%2Fdoc%2Frustdoc%2Fsrc%2FSUMMARY.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Frustdoc%2Fsrc%2FSUMMARY.md?ref=d08a4718a9e3b9838a01345384d5b224b268daa1", "patch": "@@ -10,5 +10,6 @@\n - [Lints](lints.md)\n - [Advanced features](advanced-features.md)\n - [Unstable features](unstable-features.md)\n+- [Website features](website-features.md)\n - [Passes](passes.md)\n - [References](references.md)"}, {"sha": "5fade4e84a992d969796a9b72d6ee49f08e34082", "filename": "src/doc/rustdoc/src/website-features.md", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/d08a4718a9e3b9838a01345384d5b224b268daa1/src%2Fdoc%2Frustdoc%2Fsrc%2Fwebsite-features.md", "raw_url": "https://github.com/rust-lang/rust/raw/d08a4718a9e3b9838a01345384d5b224b268daa1/src%2Fdoc%2Frustdoc%2Fsrc%2Fwebsite-features.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Frustdoc%2Fsrc%2Fwebsite-features.md?ref=d08a4718a9e3b9838a01345384d5b224b268daa1", "patch": "@@ -0,0 +1,25 @@\n+# Website features\n+\n+These features are about using the website generated by `rustdoc`.\n+\n+## Custom search engines\n+\n+If you find yourself often referencing online Rust docs you might enjoy using a custom search\n+engine. This allows you to use the navigation bar directly to search a `rustdoc` website.\n+Most browsers support this feature by letting you define a URL template containing `%s`\n+which will be substituted for the search term. As an example, for the standard library you could use\n+this template:\n+\n+```text\n+https://doc.rust-lang.org/stable/std/?search=%s\n+```\n+\n+Note that this will take you to a results page listing all matches. If you want to navigate to the first\n+result right away (which is often the best match) use the following instead:\n+\n+```text\n+https://doc.rust-lang.org/stable/std/?search=%s&go_to_first=true\n+```\n+\n+This URL adds the `go_to_first=true` query parameter which can be appended to any `rustdoc` search URL\n+to automatically go to the first result."}, {"sha": "0aebb0e9d65889f48f92ea0f4920c6402758b116", "filename": "src/librustdoc/html/static/search.js", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/d08a4718a9e3b9838a01345384d5b224b268daa1/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fsearch.js", "raw_url": "https://github.com/rust-lang/rust/raw/d08a4718a9e3b9838a01345384d5b224b268daa1/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fsearch.js", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fsearch.js?ref=d08a4718a9e3b9838a01345384d5b224b268daa1", "patch": "@@ -1058,14 +1058,14 @@ window.initSearch = function(rawSearchIndex) {\n         return \"<button>\" + text + \" <div class=\\\"count\\\">(\" + nbElems + \")</div></button>\";\n     }\n \n-    function showResults(results) {\n+    function showResults(results, go_to_first) {\n         var search = searchState.outputElement();\n-        if (results.others.length === 1\n+        if (go_to_first || (results.others.length === 1\n             && getSettingValue(\"go-to-only-result\") === \"true\"\n             // By default, the search DOM element is \"empty\" (meaning it has no children not\n             // text content). Once a search has been run, it won't be empty, even if you press\n             // ESC or empty the search input (which also \"cancels\" the search).\n-            && (!search.firstChild || search.firstChild.innerText !== searchState.loadingText))\n+            && (!search.firstChild || search.firstChild.innerText !== searchState.loadingText)))\n         {\n             var elem = document.createElement(\"a\");\n             elem.href = results.others[0].href;\n@@ -1242,7 +1242,7 @@ window.initSearch = function(rawSearchIndex) {\n         }\n \n         var filterCrates = getFilterCrates();\n-        showResults(execSearch(query, index, filterCrates));\n+        showResults(execSearch(query, index, filterCrates), params.go_to_first);\n     }\n \n     function buildIndex(rawSearchIndex) {"}]}