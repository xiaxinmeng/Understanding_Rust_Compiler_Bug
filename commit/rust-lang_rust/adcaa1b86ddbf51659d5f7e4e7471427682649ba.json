{"sha": "adcaa1b86ddbf51659d5f7e4e7471427682649ba", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFkY2FhMWI4NmRkYmY1MTY1OWQ1ZjdlNGU3NDcxNDI3NjgyNjQ5YmE=", "commit": {"author": {"name": "David Tolnay", "email": "dtolnay@gmail.com", "date": "2020-04-03T01:22:18Z"}, "committer": {"name": "David Tolnay", "email": "dtolnay@gmail.com", "date": "2020-04-03T01:31:31Z"}, "message": "Downgrade let_unit_value to pedantic", "tree": {"sha": "a59bd8b2074ddc6829115a757c8dce1e50485f24", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a59bd8b2074ddc6829115a757c8dce1e50485f24"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/adcaa1b86ddbf51659d5f7e4e7471427682649ba", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEERijF2Cz/ZdaBZKeK+boUO5X/bYIFAl6GkfMACgkQ+boUO5X/\nbYK8iRAAj4KkiGZP2RU1qg6Z7XcUShLg6Vv9ENorELQtD5WP03c2oQdDSooZoQby\n2y4iVzohyDw9uTHN3klXqSpQLfdLJ9j9o87ykIAimN+tRiuGFxQWHjcEuzx+flKx\nhN+U5kr9K75L18NhhvVu/XWIsrzSfMJC5T6I9/Qk+aVL7VAdhUGNxW+y9QST7s9g\nTHcx5euy65iqKJQXSOvCl1WHGa+75uUFhSEDNyP42mQDrkHgGu1+WBs0O9xG0BJI\n8D/Vurw2ZZJsKjS8MXp9pg994omaRh6gC9j18cZ4l15T9fcIk7OWnzp90P0gCyaC\nqxuyonW85Ccs+oMg1X0d2iCMXWQGaJqBwf/XRH7J3Lj7obMVncHjiDIX1PvKqhxb\nVuvGXQjKo4Nj2uMKwEirKpiTqBszCqPZfYVStNlz2MhccY+bpdILekX5E8CsN0jD\nEXDtb3Vzw3GhKvWZLV7M6yb92/vaLmOa2CYp0KkamAwms6Bm2PvDDle8jym8CqS9\nga1mFiBZmuKUw8HV0X7kWK+VDARL60BbauqIVmZNBThwh3YrCfQbwh8yHf8HfdoO\ntDu32z5RnOnPixS4Cf/ayv/YBDDYzvFF0g2ViveKkdtOZ1EbB0Ew5oTwHcOV2hlu\nDtlvjaKj/7u8mIX0wB4a2k1NkZJm3OtFFf4WrTgfLdu5baCGmwY=\n=KeGy\n-----END PGP SIGNATURE-----", "payload": "tree a59bd8b2074ddc6829115a757c8dce1e50485f24\nparent 949a5bab3333adc5ffcbca618cc93718d0615281\nauthor David Tolnay <dtolnay@gmail.com> 1585876938 -0700\ncommitter David Tolnay <dtolnay@gmail.com> 1585877491 -0700\n\nDowngrade let_unit_value to pedantic\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/adcaa1b86ddbf51659d5f7e4e7471427682649ba", "html_url": "https://github.com/rust-lang/rust/commit/adcaa1b86ddbf51659d5f7e4e7471427682649ba", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/adcaa1b86ddbf51659d5f7e4e7471427682649ba/comments", "author": {"login": "dtolnay", "id": 1940490, "node_id": "MDQ6VXNlcjE5NDA0OTA=", "avatar_url": "https://avatars.githubusercontent.com/u/1940490?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dtolnay", "html_url": "https://github.com/dtolnay", "followers_url": "https://api.github.com/users/dtolnay/followers", "following_url": "https://api.github.com/users/dtolnay/following{/other_user}", "gists_url": "https://api.github.com/users/dtolnay/gists{/gist_id}", "starred_url": "https://api.github.com/users/dtolnay/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dtolnay/subscriptions", "organizations_url": "https://api.github.com/users/dtolnay/orgs", "repos_url": "https://api.github.com/users/dtolnay/repos", "events_url": "https://api.github.com/users/dtolnay/events{/privacy}", "received_events_url": "https://api.github.com/users/dtolnay/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dtolnay", "id": 1940490, "node_id": "MDQ6VXNlcjE5NDA0OTA=", "avatar_url": "https://avatars.githubusercontent.com/u/1940490?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dtolnay", "html_url": "https://github.com/dtolnay", "followers_url": "https://api.github.com/users/dtolnay/followers", "following_url": "https://api.github.com/users/dtolnay/following{/other_user}", "gists_url": "https://api.github.com/users/dtolnay/gists{/gist_id}", "starred_url": "https://api.github.com/users/dtolnay/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dtolnay/subscriptions", "organizations_url": "https://api.github.com/users/dtolnay/orgs", "repos_url": "https://api.github.com/users/dtolnay/repos", "events_url": "https://api.github.com/users/dtolnay/events{/privacy}", "received_events_url": "https://api.github.com/users/dtolnay/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "949a5bab3333adc5ffcbca618cc93718d0615281", "url": "https://api.github.com/repos/rust-lang/rust/commits/949a5bab3333adc5ffcbca618cc93718d0615281", "html_url": "https://github.com/rust-lang/rust/commit/949a5bab3333adc5ffcbca618cc93718d0615281"}], "stats": {"total": 17, "additions": 7, "deletions": 10}, "files": [{"sha": "84b89311fa0b8903d861b34b9c1c2e696e1384a9", "filename": "clippy_lints/src/lib.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/adcaa1b86ddbf51659d5f7e4e7471427682649ba/clippy_lints%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/adcaa1b86ddbf51659d5f7e4e7471427682649ba/clippy_lints%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flib.rs?ref=adcaa1b86ddbf51659d5f7e4e7471427682649ba", "patch": "@@ -1125,6 +1125,7 @@ pub fn register_plugins(store: &mut rustc_lint::LintStore, sess: &Session, conf:\n         LintId::of(&types::CAST_PRECISION_LOSS),\n         LintId::of(&types::CAST_SIGN_LOSS),\n         LintId::of(&types::INVALID_UPCAST_COMPARISONS),\n+        LintId::of(&types::LET_UNIT_VALUE),\n         LintId::of(&types::LINKEDLIST),\n         LintId::of(&types::OPTION_OPTION),\n         LintId::of(&unicode::NON_ASCII_LITERAL),\n@@ -1376,7 +1377,6 @@ pub fn register_plugins(store: &mut rustc_lint::LintStore, sess: &Session, conf:\n         LintId::of(&types::FN_TO_NUMERIC_CAST),\n         LintId::of(&types::FN_TO_NUMERIC_CAST_WITH_TRUNCATION),\n         LintId::of(&types::IMPLICIT_HASHER),\n-        LintId::of(&types::LET_UNIT_VALUE),\n         LintId::of(&types::REDUNDANT_ALLOCATION),\n         LintId::of(&types::TYPE_COMPLEXITY),\n         LintId::of(&types::UNIT_ARG),\n@@ -1489,7 +1489,6 @@ pub fn register_plugins(store: &mut rustc_lint::LintStore, sess: &Session, conf:\n         LintId::of(&types::FN_TO_NUMERIC_CAST),\n         LintId::of(&types::FN_TO_NUMERIC_CAST_WITH_TRUNCATION),\n         LintId::of(&types::IMPLICIT_HASHER),\n-        LintId::of(&types::LET_UNIT_VALUE),\n         LintId::of(&unsafe_removed_from_name::UNSAFE_REMOVED_FROM_NAME),\n         LintId::of(&write::PRINTLN_EMPTY_STRING),\n         LintId::of(&write::PRINT_LITERAL),"}, {"sha": "171852d41e36475b40ec2bf215bf11755a3b338b", "filename": "clippy_lints/src/types.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/adcaa1b86ddbf51659d5f7e4e7471427682649ba/clippy_lints%2Fsrc%2Ftypes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/adcaa1b86ddbf51659d5f7e4e7471427682649ba/clippy_lints%2Fsrc%2Ftypes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Ftypes.rs?ref=adcaa1b86ddbf51659d5f7e4e7471427682649ba", "patch": "@@ -593,7 +593,7 @@ declare_clippy_lint! {\n     /// };\n     /// ```\n     pub LET_UNIT_VALUE,\n-    style,\n+    pedantic,\n     \"creating a `let` binding to a value of unit type, which usually can't be used afterwards\"\n }\n "}, {"sha": "79e337f5530747db8e210a678d3be17c6da83788", "filename": "src/lintlist/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/adcaa1b86ddbf51659d5f7e4e7471427682649ba/src%2Flintlist%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/adcaa1b86ddbf51659d5f7e4e7471427682649ba/src%2Flintlist%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flintlist%2Fmod.rs?ref=adcaa1b86ddbf51659d5f7e4e7471427682649ba", "patch": "@@ -999,7 +999,7 @@ pub static ref ALL_LINTS: Vec<Lint> = vec![\n     },\n     Lint {\n         name: \"let_unit_value\",\n-        group: \"style\",\n+        group: \"pedantic\",\n         desc: \"creating a `let` binding to a value of unit type, which usually can\\'t be used afterwards\",\n         deprecation: None,\n         module: \"types\","}, {"sha": "484aa72d59a25a43c6276ebf4d48dd7ba12e7c01", "filename": "tests/ui/doc_unsafe.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/adcaa1b86ddbf51659d5f7e4e7471427682649ba/tests%2Fui%2Fdoc_unsafe.rs", "raw_url": "https://github.com/rust-lang/rust/raw/adcaa1b86ddbf51659d5f7e4e7471427682649ba/tests%2Fui%2Fdoc_unsafe.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fdoc_unsafe.rs?ref=adcaa1b86ddbf51659d5f7e4e7471427682649ba", "patch": "@@ -88,7 +88,6 @@ very_unsafe!();\n // we don't lint code from external macros\n undocd_unsafe!();\n \n-#[allow(clippy::let_unit_value)]\n fn main() {\n     unsafe {\n         you_dont_see_me();"}, {"sha": "538fa1ed9cb021341511fbe33f59fb34acc5df29", "filename": "tests/ui/redundant_pattern_matching.fixed", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/adcaa1b86ddbf51659d5f7e4e7471427682649ba/tests%2Fui%2Fredundant_pattern_matching.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/adcaa1b86ddbf51659d5f7e4e7471427682649ba/tests%2Fui%2Fredundant_pattern_matching.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fredundant_pattern_matching.fixed?ref=adcaa1b86ddbf51659d5f7e4e7471427682649ba", "patch": "@@ -2,7 +2,7 @@\n \n #![warn(clippy::all)]\n #![warn(clippy::redundant_pattern_matching)]\n-#![allow(clippy::unit_arg, clippy::let_unit_value, unused_must_use)]\n+#![allow(clippy::unit_arg, unused_must_use)]\n \n fn main() {\n     Ok::<i32, i32>(42).is_ok();"}, {"sha": "34d2cd62e54e92db0439cf44d2765c4900b2593d", "filename": "tests/ui/redundant_pattern_matching.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/adcaa1b86ddbf51659d5f7e4e7471427682649ba/tests%2Fui%2Fredundant_pattern_matching.rs", "raw_url": "https://github.com/rust-lang/rust/raw/adcaa1b86ddbf51659d5f7e4e7471427682649ba/tests%2Fui%2Fredundant_pattern_matching.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fredundant_pattern_matching.rs?ref=adcaa1b86ddbf51659d5f7e4e7471427682649ba", "patch": "@@ -2,7 +2,7 @@\n \n #![warn(clippy::all)]\n #![warn(clippy::redundant_pattern_matching)]\n-#![allow(clippy::unit_arg, clippy::let_unit_value, unused_must_use)]\n+#![allow(clippy::unit_arg, unused_must_use)]\n \n fn main() {\n     if let Ok(_) = Ok::<i32, i32>(42) {}"}, {"sha": "f42b884e0f0e546ce0bb95dd5793fbb85dda4e34", "filename": "tests/ui/uninit.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/adcaa1b86ddbf51659d5f7e4e7471427682649ba/tests%2Fui%2Funinit.rs", "raw_url": "https://github.com/rust-lang/rust/raw/adcaa1b86ddbf51659d5f7e4e7471427682649ba/tests%2Fui%2Funinit.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Funinit.rs?ref=adcaa1b86ddbf51659d5f7e4e7471427682649ba", "patch": "@@ -2,7 +2,6 @@\n \n use std::mem::MaybeUninit;\n \n-#[allow(clippy::let_unit_value)]\n fn main() {\n     let _: usize = unsafe { MaybeUninit::uninit().assume_init() };\n "}, {"sha": "a37233ecddaee0dd4181bb95e80ecc347d9210e2", "filename": "tests/ui/uninit.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/adcaa1b86ddbf51659d5f7e4e7471427682649ba/tests%2Fui%2Funinit.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/adcaa1b86ddbf51659d5f7e4e7471427682649ba/tests%2Fui%2Funinit.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Funinit.stderr?ref=adcaa1b86ddbf51659d5f7e4e7471427682649ba", "patch": "@@ -1,13 +1,13 @@\n error: this call for this type may be undefined behavior\n-  --> $DIR/uninit.rs:7:29\n+  --> $DIR/uninit.rs:6:29\n    |\n LL |     let _: usize = unsafe { MaybeUninit::uninit().assume_init() };\n    |                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: `#[deny(clippy::uninit_assumed_init)]` on by default\n \n error: this call for this type may be undefined behavior\n-  --> $DIR/uninit.rs:10:31\n+  --> $DIR/uninit.rs:9:31\n    |\n LL |     let _: [u8; 0] = unsafe { MaybeUninit::uninit().assume_init() };\n    |                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^"}]}