{"sha": "6ae36a37ac1279d2ce20eca927cd89136a15a346", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZhZTM2YTM3YWMxMjc5ZDJjZTIwZWNhOTI3Y2Q4OTEzNmExNWEzNDY=", "commit": {"author": {"name": "Andreas Jonson", "email": "andjo403@users.noreply.github.com", "date": "2019-10-09T15:45:19Z"}, "committer": {"name": "Andreas Jonson", "email": "andjo403@users.noreply.github.com", "date": "2019-10-09T15:45:19Z"}, "message": "make it possible to add args to cargo in x.py\n\neg. make it easier to test -Ztimings for rustc", "tree": {"sha": "b7eaf8d1e84ba0a9b2fa3469b60008dde8703de4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b7eaf8d1e84ba0a9b2fa3469b60008dde8703de4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6ae36a37ac1279d2ce20eca927cd89136a15a346", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6ae36a37ac1279d2ce20eca927cd89136a15a346", "html_url": "https://github.com/rust-lang/rust/commit/6ae36a37ac1279d2ce20eca927cd89136a15a346", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6ae36a37ac1279d2ce20eca927cd89136a15a346/comments", "author": {"login": "andjo403", "id": 844398, "node_id": "MDQ6VXNlcjg0NDM5OA==", "avatar_url": "https://avatars.githubusercontent.com/u/844398?v=4", "gravatar_id": "", "url": "https://api.github.com/users/andjo403", "html_url": "https://github.com/andjo403", "followers_url": "https://api.github.com/users/andjo403/followers", "following_url": "https://api.github.com/users/andjo403/following{/other_user}", "gists_url": "https://api.github.com/users/andjo403/gists{/gist_id}", "starred_url": "https://api.github.com/users/andjo403/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/andjo403/subscriptions", "organizations_url": "https://api.github.com/users/andjo403/orgs", "repos_url": "https://api.github.com/users/andjo403/repos", "events_url": "https://api.github.com/users/andjo403/events{/privacy}", "received_events_url": "https://api.github.com/users/andjo403/received_events", "type": "User", "site_admin": false}, "committer": {"login": "andjo403", "id": 844398, "node_id": "MDQ6VXNlcjg0NDM5OA==", "avatar_url": "https://avatars.githubusercontent.com/u/844398?v=4", "gravatar_id": "", "url": "https://api.github.com/users/andjo403", "html_url": "https://github.com/andjo403", "followers_url": "https://api.github.com/users/andjo403/followers", "following_url": "https://api.github.com/users/andjo403/following{/other_user}", "gists_url": "https://api.github.com/users/andjo403/gists{/gist_id}", "starred_url": "https://api.github.com/users/andjo403/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/andjo403/subscriptions", "organizations_url": "https://api.github.com/users/andjo403/orgs", "repos_url": "https://api.github.com/users/andjo403/repos", "events_url": "https://api.github.com/users/andjo403/events{/privacy}", "received_events_url": "https://api.github.com/users/andjo403/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7870050796e5904a0fc85ecbe6fa6dde1cfe0c91", "url": "https://api.github.com/repos/rust-lang/rust/commits/7870050796e5904a0fc85ecbe6fa6dde1cfe0c91", "html_url": "https://github.com/rust-lang/rust/commit/7870050796e5904a0fc85ecbe6fa6dde1cfe0c91"}], "stats": {"total": 10, "additions": 10, "deletions": 0}, "files": [{"sha": "b8071b98f707f43e7da2b4bb9410b876af1575e4", "filename": "src/bootstrap/builder.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/6ae36a37ac1279d2ce20eca927cd89136a15a346/src%2Fbootstrap%2Fbuilder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6ae36a37ac1279d2ce20eca927cd89136a15a346/src%2Fbootstrap%2Fbuilder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fbuilder.rs?ref=6ae36a37ac1279d2ce20eca927cd89136a15a346", "patch": "@@ -817,12 +817,22 @@ impl<'a> Builder<'a> {\n \n         let mut rustflags = Rustflags::new(&target);\n         if stage != 0 {\n+            if let Ok(s) = env::var(\"CARGOFLAGS_NOT_BOOTSTRAP\") {\n+                cargo.args(s.split_whitespace());\n+            }\n             rustflags.env(\"RUSTFLAGS_NOT_BOOTSTRAP\");\n         } else {\n+            if let Ok(s) = env::var(\"CARGOFLAGS_BOOTSTRAP\") {\n+                cargo.args(s.split_whitespace());\n+            }\n             rustflags.env(\"RUSTFLAGS_BOOTSTRAP\");\n             rustflags.arg(\"--cfg=bootstrap\");\n         }\n \n+        if let Ok(s) = env::var(\"CARGOFLAGS\") {\n+            cargo.args(s.split_whitespace());\n+        }\n+\n         match mode {\n             Mode::Std | Mode::ToolBootstrap | Mode::ToolStd => {},\n             Mode::Rustc | Mode::Codegen | Mode::ToolRustc => {"}]}