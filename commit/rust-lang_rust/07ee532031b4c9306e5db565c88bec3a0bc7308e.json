{"sha": "07ee532031b4c9306e5db565c88bec3a0bc7308e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA3ZWU1MzIwMzFiNGM5MzA2ZTVkYjU2NWM4OGJlYzNhMGJjNzMwOGU=", "commit": {"author": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2019-06-10T21:22:02Z"}, "committer": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2019-07-02T16:15:20Z"}, "message": "improve tests with migration mode, mir mode", "tree": {"sha": "39e090d3b61374ee273c3a592f4fa22b100df30b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/39e090d3b61374ee273c3a592f4fa22b100df30b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/07ee532031b4c9306e5db565c88bec3a0bc7308e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/07ee532031b4c9306e5db565c88bec3a0bc7308e", "html_url": "https://github.com/rust-lang/rust/commit/07ee532031b4c9306e5db565c88bec3a0bc7308e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/07ee532031b4c9306e5db565c88bec3a0bc7308e/comments", "author": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cc581bfa0e448f23060a2a6987a19f59461e0534", "url": "https://api.github.com/repos/rust-lang/rust/commits/cc581bfa0e448f23060a2a6987a19f59461e0534", "html_url": "https://github.com/rust-lang/rust/commit/cc581bfa0e448f23060a2a6987a19f59461e0534"}], "stats": {"total": 195, "additions": 101, "deletions": 94}, "files": [{"sha": "a4eafbd3850e419a1abceb7ec38df8cfedd76f3f", "filename": "src/test/ui/impl-trait/multiple-lifetimes/inverse-bounds.migrate.stderr", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/07ee532031b4c9306e5db565c88bec3a0bc7308e/src%2Ftest%2Fui%2Fimpl-trait%2Fmultiple-lifetimes%2Finverse-bounds.migrate.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/07ee532031b4c9306e5db565c88bec3a0bc7308e/src%2Ftest%2Fui%2Fimpl-trait%2Fmultiple-lifetimes%2Finverse-bounds.migrate.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimpl-trait%2Fmultiple-lifetimes%2Finverse-bounds.migrate.stderr?ref=07ee532031b4c9306e5db565c88bec3a0bc7308e", "patch": "@@ -0,0 +1,19 @@\n+warning[E0700]: hidden type for `impl Trait` captures lifetime that does not appear in bounds\n+  --> $DIR/inverse-bounds.rs:18:70\n+   |\n+LL | fn upper_bounds<'a, 'b, 'c, 'd, 'e>(a: Invert<'a>, b: Invert<'b>) -> impl Trait<'d, 'e>\n+   |                                                                      ^^^^^^^^^^^^^^^^^^\n+   |\n+   = note: hidden type `Invert<'_>` captures lifetime '_#8r\n+   = warning: this error has been downgraded to a warning for backwards compatibility with previous releases\n+   = warning: this represents potential undefined behavior in your code and this warning will become a hard error in the future\n+   = note: for more information, try `rustc --explain E0729`\n+\n+warning: the feature `pin` has been stable since 1.33.0 and no longer requires an attribute to enable\n+  --> $DIR/inverse-bounds.rs:6:60\n+   |\n+LL | #![feature(arbitrary_self_types, async_await, await_macro, pin)]\n+   |                                                            ^^^\n+   |\n+   = note: #[warn(stable_features)] on by default\n+"}, {"sha": "ac240e8ccde30fffdf53aa427efaccc8954964af", "filename": "src/test/ui/impl-trait/multiple-lifetimes/inverse-bounds.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/07ee532031b4c9306e5db565c88bec3a0bc7308e/src%2Ftest%2Fui%2Fimpl-trait%2Fmultiple-lifetimes%2Finverse-bounds.rs", "raw_url": "https://github.com/rust-lang/rust/raw/07ee532031b4c9306e5db565c88bec3a0bc7308e/src%2Ftest%2Fui%2Fimpl-trait%2Fmultiple-lifetimes%2Finverse-bounds.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimpl-trait%2Fmultiple-lifetimes%2Finverse-bounds.rs?ref=07ee532031b4c9306e5db565c88bec3a0bc7308e", "patch": "@@ -1,4 +1,7 @@\n // edition:2018\n+// run-pass\n+// revisions: migrate mir\n+//[mir]compile-flags: -Z borrowck=mir\n \n #![feature(arbitrary_self_types, async_await, await_macro, pin)]\n "}, {"sha": "4de872e8441efe4c0fcf36a3ea4507717996b780", "filename": "src/test/ui/impl-trait/multiple-lifetimes/inverse-bounds.stderr", "status": "modified", "additions": 13, "deletions": 19, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/07ee532031b4c9306e5db565c88bec3a0bc7308e/src%2Ftest%2Fui%2Fimpl-trait%2Fmultiple-lifetimes%2Finverse-bounds.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/07ee532031b4c9306e5db565c88bec3a0bc7308e/src%2Ftest%2Fui%2Fimpl-trait%2Fmultiple-lifetimes%2Finverse-bounds.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimpl-trait%2Fmultiple-lifetimes%2Finverse-bounds.stderr?ref=07ee532031b4c9306e5db565c88bec3a0bc7308e", "patch": "@@ -1,25 +1,19 @@\n-error: impl Trait captures unexpected lifetime\n-  --> $DIR/inverse-bounds.rs:15:70\n+warning[E0700]: hidden type for `impl Trait` captures lifetime that does not appear in bounds\n+  --> $DIR/inverse-bounds.rs:16:70\n    |\n LL | fn upper_bounds<'a, 'b, 'c, 'd, 'e>(a: Invert<'a>, b: Invert<'b>) -> impl Trait<'d, 'e>\n-   |                                                                      ^^^^^^^^^^^^^^^^^^ only lifetimes that appear in the impl Trait bounds may be captured\n+   |                                                                      ^^^^^^^^^^^^^^^^^^\n    |\n-note: hidden type captures the lifetime 'd as defined on the function body at 15:29\n-  --> $DIR/inverse-bounds.rs:15:29\n-   |\n-LL | fn upper_bounds<'a, 'b, 'c, 'd, 'e>(a: Invert<'a>, b: Invert<'b>) -> impl Trait<'d, 'e>\n-   |                             ^^\n-note: hidden type would be allowed to capture the lifetime 'd as defined on the function body at 15:29\n-  --> $DIR/inverse-bounds.rs:15:29\n+   = note: hidden type `Invert<'_>` captures lifetime '_#8r\n+   = warning: this error has been downgraded to a warning for backwards compatibility with previous releases\n+   = warning: this represents potential undefined behavior in your code and this warning will become a hard error in the future\n+   = note: for more information, try `rustc --explain E0729`\n+\n+warning: the feature `pin` has been stable since 1.33.0 and no longer requires an attribute to enable\n+  --> $DIR/inverse-bounds.rs:4:60\n    |\n-LL | fn upper_bounds<'a, 'b, 'c, 'd, 'e>(a: Invert<'a>, b: Invert<'b>) -> impl Trait<'d, 'e>\n-   |                             ^^\n-note: hidden type would be allowed to capture the lifetime 'e as defined on the function body at 15:33\n-  --> $DIR/inverse-bounds.rs:15:33\n+LL | #![feature(arbitrary_self_types, async_await, await_macro, pin)]\n+   |                                                            ^^^\n    |\n-LL | fn upper_bounds<'a, 'b, 'c, 'd, 'e>(a: Invert<'a>, b: Invert<'b>) -> impl Trait<'d, 'e>\n-   |                                 ^^\n-   = note: hidden type would be allowed to capture the static lifetime\n-\n-error: aborting due to previous error\n+   = note: #[warn(stable_features)] on by default\n "}, {"sha": "3c6fe0b8de6b8a8af110cb8c9a5e117222402759", "filename": "src/test/ui/impl-trait/multiple-lifetimes/ordinary-bounds-pick-original.migrate.stderr", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/07ee532031b4c9306e5db565c88bec3a0bc7308e/src%2Ftest%2Fui%2Fimpl-trait%2Fmultiple-lifetimes%2Fordinary-bounds-pick-original.migrate.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/07ee532031b4c9306e5db565c88bec3a0bc7308e/src%2Ftest%2Fui%2Fimpl-trait%2Fmultiple-lifetimes%2Fordinary-bounds-pick-original.migrate.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimpl-trait%2Fmultiple-lifetimes%2Fordinary-bounds-pick-original.migrate.stderr?ref=07ee532031b4c9306e5db565c88bec3a0bc7308e", "patch": "@@ -0,0 +1,22 @@\n+warning[E0700]: hidden type for `impl Trait` captures lifetime that does not appear in bounds\n+  --> $DIR/ordinary-bounds-pick-original.rs:12:50\n+   |\n+LL | fn upper_bounds<'a, 'b>(a: &'a u8, b: &'b u8) -> impl Trait<'a, 'b> {\n+   |                                                  ^^^^^^^^^^^^^^^^^^\n+   |\n+   = note: hidden type `(&u8, &u8)` captures lifetime '_#6r\n+   = warning: this error has been downgraded to a warning for backwards compatibility with previous releases\n+   = warning: this represents potential undefined behavior in your code and this warning will become a hard error in the future\n+   = note: for more information, try `rustc --explain E0729`\n+\n+warning[E0700]: hidden type for `impl Trait` captures lifetime that does not appear in bounds\n+  --> $DIR/ordinary-bounds-pick-original.rs:12:50\n+   |\n+LL | fn upper_bounds<'a, 'b>(a: &'a u8, b: &'b u8) -> impl Trait<'a, 'b> {\n+   |                                                  ^^^^^^^^^^^^^^^^^^\n+   |\n+   = note: hidden type `(&u8, &u8)` captures lifetime '_#7r\n+   = warning: this error has been downgraded to a warning for backwards compatibility with previous releases\n+   = warning: this represents potential undefined behavior in your code and this warning will become a hard error in the future\n+   = note: for more information, try `rustc --explain E0729`\n+"}, {"sha": "0d04980d37a8fdb7de6d25eda72f69dba0eba35f", "filename": "src/test/ui/impl-trait/multiple-lifetimes/ordinary-bounds-pick-original.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/07ee532031b4c9306e5db565c88bec3a0bc7308e/src%2Ftest%2Fui%2Fimpl-trait%2Fmultiple-lifetimes%2Fordinary-bounds-pick-original.rs", "raw_url": "https://github.com/rust-lang/rust/raw/07ee532031b4c9306e5db565c88bec3a0bc7308e/src%2Ftest%2Fui%2Fimpl-trait%2Fmultiple-lifetimes%2Fordinary-bounds-pick-original.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimpl-trait%2Fmultiple-lifetimes%2Fordinary-bounds-pick-original.rs?ref=07ee532031b4c9306e5db565c88bec3a0bc7308e", "patch": "@@ -1,6 +1,7 @@\n // edition:2018\n-\n-#![feature(arbitrary_self_types, async_await, await_macro, pin)]\n+// run-pass\n+// revisions: migrate mir\n+//[mir]compile-flags: -Z borrowck=mir\n \n trait Trait<'a, 'b> { }\n impl<T> Trait<'_, '_> for T { }"}, {"sha": "f55bba987ec3f72ab31075493c61e95984759392", "filename": "src/test/ui/impl-trait/multiple-lifetimes/ordinary-bounds-pick-original.stderr", "status": "modified", "additions": 14, "deletions": 40, "changes": 54, "blob_url": "https://github.com/rust-lang/rust/blob/07ee532031b4c9306e5db565c88bec3a0bc7308e/src%2Ftest%2Fui%2Fimpl-trait%2Fmultiple-lifetimes%2Fordinary-bounds-pick-original.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/07ee532031b4c9306e5db565c88bec3a0bc7308e/src%2Ftest%2Fui%2Fimpl-trait%2Fmultiple-lifetimes%2Fordinary-bounds-pick-original.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimpl-trait%2Fmultiple-lifetimes%2Fordinary-bounds-pick-original.stderr?ref=07ee532031b4c9306e5db565c88bec3a0bc7308e", "patch": "@@ -1,48 +1,22 @@\n-error: impl Trait captures unexpected lifetime\n-  --> $DIR/ordinary-bounds-pick-original.rs:11:50\n+warning[E0700]: hidden type for `impl Trait` captures lifetime that does not appear in bounds\n+  --> $DIR/ordinary-bounds-pick-original.rs:10:50\n    |\n LL | fn upper_bounds<'a, 'b>(a: &'a u8, b: &'b u8) -> impl Trait<'a, 'b> {\n-   |                                                  ^^^^^^^^^^^^^^^^^^ only lifetimes that appear in the impl Trait bounds may be captured\n+   |                                                  ^^^^^^^^^^^^^^^^^^\n    |\n-note: hidden type captures the lifetime 'a as defined on the function body at 11:17\n-  --> $DIR/ordinary-bounds-pick-original.rs:11:17\n-   |\n-LL | fn upper_bounds<'a, 'b>(a: &'a u8, b: &'b u8) -> impl Trait<'a, 'b> {\n-   |                 ^^\n-note: hidden type would be allowed to capture the lifetime 'a as defined on the function body at 11:17\n-  --> $DIR/ordinary-bounds-pick-original.rs:11:17\n-   |\n-LL | fn upper_bounds<'a, 'b>(a: &'a u8, b: &'b u8) -> impl Trait<'a, 'b> {\n-   |                 ^^\n-note: hidden type would be allowed to capture the lifetime 'b as defined on the function body at 11:21\n-  --> $DIR/ordinary-bounds-pick-original.rs:11:21\n-   |\n-LL | fn upper_bounds<'a, 'b>(a: &'a u8, b: &'b u8) -> impl Trait<'a, 'b> {\n-   |                     ^^\n-   = note: hidden type would be allowed to capture the static lifetime\n+   = note: hidden type `(&u8, &u8)` captures lifetime '_#6r\n+   = warning: this error has been downgraded to a warning for backwards compatibility with previous releases\n+   = warning: this represents potential undefined behavior in your code and this warning will become a hard error in the future\n+   = note: for more information, try `rustc --explain E0729`\n \n-error: impl Trait captures unexpected lifetime\n-  --> $DIR/ordinary-bounds-pick-original.rs:11:50\n+warning[E0700]: hidden type for `impl Trait` captures lifetime that does not appear in bounds\n+  --> $DIR/ordinary-bounds-pick-original.rs:10:50\n    |\n LL | fn upper_bounds<'a, 'b>(a: &'a u8, b: &'b u8) -> impl Trait<'a, 'b> {\n-   |                                                  ^^^^^^^^^^^^^^^^^^ only lifetimes that appear in the impl Trait bounds may be captured\n-   |\n-note: hidden type captures the lifetime 'b as defined on the function body at 11:21\n-  --> $DIR/ordinary-bounds-pick-original.rs:11:21\n+   |                                                  ^^^^^^^^^^^^^^^^^^\n    |\n-LL | fn upper_bounds<'a, 'b>(a: &'a u8, b: &'b u8) -> impl Trait<'a, 'b> {\n-   |                     ^^\n-note: hidden type would be allowed to capture the lifetime 'a as defined on the function body at 11:17\n-  --> $DIR/ordinary-bounds-pick-original.rs:11:17\n-   |\n-LL | fn upper_bounds<'a, 'b>(a: &'a u8, b: &'b u8) -> impl Trait<'a, 'b> {\n-   |                 ^^\n-note: hidden type would be allowed to capture the lifetime 'b as defined on the function body at 11:21\n-  --> $DIR/ordinary-bounds-pick-original.rs:11:21\n-   |\n-LL | fn upper_bounds<'a, 'b>(a: &'a u8, b: &'b u8) -> impl Trait<'a, 'b> {\n-   |                     ^^\n-   = note: hidden type would be allowed to capture the static lifetime\n-\n-error: aborting due to 2 previous errors\n+   = note: hidden type `(&u8, &u8)` captures lifetime '_#7r\n+   = warning: this error has been downgraded to a warning for backwards compatibility with previous releases\n+   = warning: this represents potential undefined behavior in your code and this warning will become a hard error in the future\n+   = note: for more information, try `rustc --explain E0729`\n "}, {"sha": "f1c2fc8695acd350a4335bdbe30b3dfd02a829e1", "filename": "src/test/ui/impl-trait/multiple-lifetimes/ordinary-bounds-pick-other.migrate.stderr", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/07ee532031b4c9306e5db565c88bec3a0bc7308e/src%2Ftest%2Fui%2Fimpl-trait%2Fmultiple-lifetimes%2Fordinary-bounds-pick-other.migrate.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/07ee532031b4c9306e5db565c88bec3a0bc7308e/src%2Ftest%2Fui%2Fimpl-trait%2Fmultiple-lifetimes%2Fordinary-bounds-pick-other.migrate.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimpl-trait%2Fmultiple-lifetimes%2Fordinary-bounds-pick-other.migrate.stderr?ref=07ee532031b4c9306e5db565c88bec3a0bc7308e", "patch": "@@ -0,0 +1,11 @@\n+warning[E0700]: hidden type for `impl Trait` captures lifetime that does not appear in bounds\n+  --> $DIR/ordinary-bounds-pick-other.rs:19:74\n+   |\n+LL | fn upper_bounds<'a, 'b, 'c, 'd, 'e>(a: Ordinary<'a>, b: Ordinary<'b>) -> impl Trait<'d, 'e>\n+   |                                                                          ^^^^^^^^^^^^^^^^^^\n+   |\n+   = note: hidden type `Ordinary<'_>` captures lifetime '_#8r\n+   = warning: this error has been downgraded to a warning for backwards compatibility with previous releases\n+   = warning: this represents potential undefined behavior in your code and this warning will become a hard error in the future\n+   = note: for more information, try `rustc --explain E0729`\n+"}, {"sha": "6555bacba67160fda4a450c6a3808d02554313e8", "filename": "src/test/ui/impl-trait/multiple-lifetimes/ordinary-bounds-pick-other.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/07ee532031b4c9306e5db565c88bec3a0bc7308e/src%2Ftest%2Fui%2Fimpl-trait%2Fmultiple-lifetimes%2Fordinary-bounds-pick-other.rs", "raw_url": "https://github.com/rust-lang/rust/raw/07ee532031b4c9306e5db565c88bec3a0bc7308e/src%2Ftest%2Fui%2Fimpl-trait%2Fmultiple-lifetimes%2Fordinary-bounds-pick-other.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimpl-trait%2Fmultiple-lifetimes%2Fordinary-bounds-pick-other.rs?ref=07ee532031b4c9306e5db565c88bec3a0bc7308e", "patch": "@@ -1,6 +1,7 @@\n // edition:2018\n-\n-#![feature(arbitrary_self_types, async_await, await_macro, pin)]\n+// run-pass\n+// revisions: migrate mir\n+//[mir]compile-flags: -Z borrowck=mir\n \n trait Trait<'a, 'b> {}\n impl<T> Trait<'_, '_> for T {}"}, {"sha": "a9b56210b0feab56b799608bdd051426b786257c", "filename": "src/test/ui/impl-trait/multiple-lifetimes/ordinary-bounds-pick-other.stderr", "status": "modified", "additions": 7, "deletions": 21, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/07ee532031b4c9306e5db565c88bec3a0bc7308e/src%2Ftest%2Fui%2Fimpl-trait%2Fmultiple-lifetimes%2Fordinary-bounds-pick-other.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/07ee532031b4c9306e5db565c88bec3a0bc7308e/src%2Ftest%2Fui%2Fimpl-trait%2Fmultiple-lifetimes%2Fordinary-bounds-pick-other.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimpl-trait%2Fmultiple-lifetimes%2Fordinary-bounds-pick-other.stderr?ref=07ee532031b4c9306e5db565c88bec3a0bc7308e", "patch": "@@ -1,25 +1,11 @@\n-error: impl Trait captures unexpected lifetime\n-  --> $DIR/ordinary-bounds-pick-other.rs:18:74\n+warning[E0700]: hidden type for `impl Trait` captures lifetime that does not appear in bounds\n+  --> $DIR/ordinary-bounds-pick-other.rs:17:74\n    |\n LL | fn upper_bounds<'a, 'b, 'c, 'd, 'e>(a: Ordinary<'a>, b: Ordinary<'b>) -> impl Trait<'d, 'e>\n-   |                                                                          ^^^^^^^^^^^^^^^^^^ only lifetimes that appear in the impl Trait bounds may be captured\n+   |                                                                          ^^^^^^^^^^^^^^^^^^\n    |\n-note: hidden type captures the lifetime 'e as defined on the function body at 18:33\n-  --> $DIR/ordinary-bounds-pick-other.rs:18:33\n-   |\n-LL | fn upper_bounds<'a, 'b, 'c, 'd, 'e>(a: Ordinary<'a>, b: Ordinary<'b>) -> impl Trait<'d, 'e>\n-   |                                 ^^\n-note: hidden type would be allowed to capture the lifetime 'd as defined on the function body at 18:29\n-  --> $DIR/ordinary-bounds-pick-other.rs:18:29\n-   |\n-LL | fn upper_bounds<'a, 'b, 'c, 'd, 'e>(a: Ordinary<'a>, b: Ordinary<'b>) -> impl Trait<'d, 'e>\n-   |                             ^^\n-note: hidden type would be allowed to capture the lifetime 'e as defined on the function body at 18:33\n-  --> $DIR/ordinary-bounds-pick-other.rs:18:33\n-   |\n-LL | fn upper_bounds<'a, 'b, 'c, 'd, 'e>(a: Ordinary<'a>, b: Ordinary<'b>) -> impl Trait<'d, 'e>\n-   |                                 ^^\n-   = note: hidden type would be allowed to capture the static lifetime\n-\n-error: aborting due to previous error\n+   = note: hidden type `Ordinary<'_>` captures lifetime '_#8r\n+   = warning: this error has been downgraded to a warning for backwards compatibility with previous releases\n+   = warning: this represents potential undefined behavior in your code and this warning will become a hard error in the future\n+   = note: for more information, try `rustc --explain E0729`\n "}, {"sha": "3a97624647efd79be70c7549def20b0c8631c466", "filename": "src/test/ui/impl-trait/multiple-lifetimes/ordinary-bounds-unrelated.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/07ee532031b4c9306e5db565c88bec3a0bc7308e/src%2Ftest%2Fui%2Fimpl-trait%2Fmultiple-lifetimes%2Fordinary-bounds-unrelated.rs", "raw_url": "https://github.com/rust-lang/rust/raw/07ee532031b4c9306e5db565c88bec3a0bc7308e/src%2Ftest%2Fui%2Fimpl-trait%2Fmultiple-lifetimes%2Fordinary-bounds-unrelated.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimpl-trait%2Fmultiple-lifetimes%2Fordinary-bounds-unrelated.rs?ref=07ee532031b4c9306e5db565c88bec3a0bc7308e", "patch": "@@ -1,7 +1,5 @@\n // edition:2018\n \n-#![feature(arbitrary_self_types, async_await, await_macro, pin)]\n-\n trait Trait<'a, 'b> {}\n impl<T> Trait<'_, '_> for T {}\n "}, {"sha": "c807048ce54683bedacdde6d5457796420c942b2", "filename": "src/test/ui/impl-trait/multiple-lifetimes/ordinary-bounds-unrelated.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/07ee532031b4c9306e5db565c88bec3a0bc7308e/src%2Ftest%2Fui%2Fimpl-trait%2Fmultiple-lifetimes%2Fordinary-bounds-unrelated.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/07ee532031b4c9306e5db565c88bec3a0bc7308e/src%2Ftest%2Fui%2Fimpl-trait%2Fmultiple-lifetimes%2Fordinary-bounds-unrelated.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimpl-trait%2Fmultiple-lifetimes%2Fordinary-bounds-unrelated.stderr?ref=07ee532031b4c9306e5db565c88bec3a0bc7308e", "patch": "@@ -1,11 +1,11 @@\n error[E0700]: hidden type for `impl Trait` captures lifetime that does not appear in bounds\n-  --> $DIR/ordinary-bounds-unrelated.rs:18:74\n+  --> $DIR/ordinary-bounds-unrelated.rs:16:74\n    |\n LL | fn upper_bounds<'a, 'b, 'c, 'd, 'e>(a: Ordinary<'a>, b: Ordinary<'b>) -> impl Trait<'d, 'e>\n    |                                                                          ^^^^^^^^^^^^^^^^^^\n    |\n-note: hidden type `Ordinary<'_>` captures the scope of call-site for function at 23:1\n-  --> $DIR/ordinary-bounds-unrelated.rs:23:1\n+note: hidden type `Ordinary<'_>` captures the scope of call-site for function at 21:1\n+  --> $DIR/ordinary-bounds-unrelated.rs:21:1\n    |\n LL | / {\n LL | |     // Hidden type `Ordinary<'0>` with constraints:"}, {"sha": "85c478d8d313a8c4a9963d64294112e7acfe1595", "filename": "src/test/ui/impl-trait/multiple-lifetimes/ordinary-bounds-unsuited.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/07ee532031b4c9306e5db565c88bec3a0bc7308e/src%2Ftest%2Fui%2Fimpl-trait%2Fmultiple-lifetimes%2Fordinary-bounds-unsuited.rs", "raw_url": "https://github.com/rust-lang/rust/raw/07ee532031b4c9306e5db565c88bec3a0bc7308e/src%2Ftest%2Fui%2Fimpl-trait%2Fmultiple-lifetimes%2Fordinary-bounds-unsuited.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimpl-trait%2Fmultiple-lifetimes%2Fordinary-bounds-unsuited.rs?ref=07ee532031b4c9306e5db565c88bec3a0bc7308e", "patch": "@@ -1,7 +1,5 @@\n // edition:2018\n \n-#![feature(arbitrary_self_types, async_await, await_macro, pin)]\n-\n trait Trait<'a, 'b> {}\n impl<T> Trait<'_, '_> for T {}\n "}, {"sha": "6687c40f957a686ace3c8f893bb39bad3a02b4d1", "filename": "src/test/ui/impl-trait/multiple-lifetimes/ordinary-bounds-unsuited.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/07ee532031b4c9306e5db565c88bec3a0bc7308e/src%2Ftest%2Fui%2Fimpl-trait%2Fmultiple-lifetimes%2Fordinary-bounds-unsuited.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/07ee532031b4c9306e5db565c88bec3a0bc7308e/src%2Ftest%2Fui%2Fimpl-trait%2Fmultiple-lifetimes%2Fordinary-bounds-unsuited.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimpl-trait%2Fmultiple-lifetimes%2Fordinary-bounds-unsuited.stderr?ref=07ee532031b4c9306e5db565c88bec3a0bc7308e", "patch": "@@ -1,11 +1,11 @@\n error[E0700]: hidden type for `impl Trait` captures lifetime that does not appear in bounds\n-  --> $DIR/ordinary-bounds-unsuited.rs:20:62\n+  --> $DIR/ordinary-bounds-unsuited.rs:18:62\n    |\n LL | fn upper_bounds<'a, 'b>(a: Ordinary<'a>, b: Ordinary<'b>) -> impl Trait<'a, 'b>\n    |                                                              ^^^^^^^^^^^^^^^^^^\n    |\n-note: hidden type `Ordinary<'_>` captures the scope of call-site for function at 22:1\n-  --> $DIR/ordinary-bounds-unsuited.rs:22:1\n+note: hidden type `Ordinary<'_>` captures the scope of call-site for function at 20:1\n+  --> $DIR/ordinary-bounds-unsuited.rs:20:1\n    |\n LL | / {\n LL | |     // We return a value:"}]}