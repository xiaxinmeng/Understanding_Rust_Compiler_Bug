{"sha": "d2827aa9bc58383c20d92fc1c5a5003160565884", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQyODI3YWE5YmM1ODM4M2MyMGQ5MmZjMWM1YTUwMDMxNjA1NjU4ODQ=", "commit": {"author": {"name": "Andrew Cann", "email": "shum@canndrew.org", "date": "2016-12-01T04:41:21Z"}, "committer": {"name": "Andrew Cann", "email": "shum@canndrew.org", "date": "2017-01-03T07:48:29Z"}, "message": "Fix build after rebase", "tree": {"sha": "173eca744160408820726647142350e063e7f3a7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/173eca744160408820726647142350e063e7f3a7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d2827aa9bc58383c20d92fc1c5a5003160565884", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d2827aa9bc58383c20d92fc1c5a5003160565884", "html_url": "https://github.com/rust-lang/rust/commit/d2827aa9bc58383c20d92fc1c5a5003160565884", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d2827aa9bc58383c20d92fc1c5a5003160565884/comments", "author": {"login": "canndrew", "id": 5555066, "node_id": "MDQ6VXNlcjU1NTUwNjY=", "avatar_url": "https://avatars.githubusercontent.com/u/5555066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/canndrew", "html_url": "https://github.com/canndrew", "followers_url": "https://api.github.com/users/canndrew/followers", "following_url": "https://api.github.com/users/canndrew/following{/other_user}", "gists_url": "https://api.github.com/users/canndrew/gists{/gist_id}", "starred_url": "https://api.github.com/users/canndrew/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/canndrew/subscriptions", "organizations_url": "https://api.github.com/users/canndrew/orgs", "repos_url": "https://api.github.com/users/canndrew/repos", "events_url": "https://api.github.com/users/canndrew/events{/privacy}", "received_events_url": "https://api.github.com/users/canndrew/received_events", "type": "User", "site_admin": false}, "committer": {"login": "canndrew", "id": 5555066, "node_id": "MDQ6VXNlcjU1NTUwNjY=", "avatar_url": "https://avatars.githubusercontent.com/u/5555066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/canndrew", "html_url": "https://github.com/canndrew", "followers_url": "https://api.github.com/users/canndrew/followers", "following_url": "https://api.github.com/users/canndrew/following{/other_user}", "gists_url": "https://api.github.com/users/canndrew/gists{/gist_id}", "starred_url": "https://api.github.com/users/canndrew/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/canndrew/subscriptions", "organizations_url": "https://api.github.com/users/canndrew/orgs", "repos_url": "https://api.github.com/users/canndrew/repos", "events_url": "https://api.github.com/users/canndrew/events{/privacy}", "received_events_url": "https://api.github.com/users/canndrew/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cfc45d52bb90a1b893ea964b1b91d7dd125ae36d", "url": "https://api.github.com/repos/rust-lang/rust/commits/cfc45d52bb90a1b893ea964b1b91d7dd125ae36d", "html_url": "https://github.com/rust-lang/rust/commit/cfc45d52bb90a1b893ea964b1b91d7dd125ae36d"}], "stats": {"total": 10, "additions": 5, "deletions": 5}, "files": [{"sha": "b92558680af8c703b0ca1dfcd7c516aa305124dc", "filename": "src/librustc_const_eval/pattern.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/d2827aa9bc58383c20d92fc1c5a5003160565884/src%2Flibrustc_const_eval%2Fpattern.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d2827aa9bc58383c20d92fc1c5a5003160565884/src%2Flibrustc_const_eval%2Fpattern.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_const_eval%2Fpattern.rs?ref=d2827aa9bc58383c20d92fc1c5a5003160565884", "patch": "@@ -408,7 +408,7 @@ impl<'a, 'gcx, 'tcx> PatternContext<'a, 'gcx, 'tcx> {\n                                        pattern: self.lower_pattern(field),\n                                    })\n                                    .collect();\n-                self.lower_variant_or_leaf(def, subpatterns)\n+                self.lower_variant_or_leaf(def, ty, subpatterns)\n             }\n \n             PatKind::Struct(ref qpath, ref fields, _) => {\n@@ -441,7 +441,7 @@ impl<'a, 'gcx, 'tcx> PatternContext<'a, 'gcx, 'tcx> {\n                           })\n                           .collect();\n \n-                self.lower_variant_or_leaf(def, subpatterns)\n+                self.lower_variant_or_leaf(def, ty, subpatterns)\n             }\n         };\n \n@@ -531,15 +531,15 @@ impl<'a, 'gcx, 'tcx> PatternContext<'a, 'gcx, 'tcx> {\n     fn lower_variant_or_leaf(\n         &mut self,\n         def: Def,\n+        ty: Ty<'tcx>,\n         subpatterns: Vec<FieldPattern<'tcx>>)\n         -> PatternKind<'tcx>\n     {\n         match def {\n             Def::Variant(variant_id) | Def::VariantCtor(variant_id, ..) => {\n-                let ty = self.tcx.tables().node_id_to_type(pat.id);\n                 let (adt_def, substs) = match ty.sty {\n                     TypeVariants::TyAdt(adt_def, substs) => (adt_def, substs),\n-                    _ => span_bug!(pat.span, \"inappropriate type for def\"),\n+                    _ => bug!(\"inappropriate type for def\"),\n                 };\n                 if adt_def.variants.len() > 1 {\n                     PatternKind::Variant {\n@@ -584,7 +584,7 @@ impl<'a, 'gcx, 'tcx> PatternContext<'a, 'gcx, 'tcx> {\n                     }\n                 }\n             }\n-            _ => self.lower_variant_or_leaf(def, vec![])\n+            _ => self.lower_variant_or_leaf(def, ty, vec![])\n         };\n \n         Pattern {"}]}