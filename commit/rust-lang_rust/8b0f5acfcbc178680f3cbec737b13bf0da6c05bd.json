{"sha": "8b0f5acfcbc178680f3cbec737b13bf0da6c05bd", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhiMGY1YWNmY2JjMTc4NjgwZjNjYmVjNzM3YjEzYmYwZGE2YzA1YmQ=", "commit": {"author": {"name": "Christian Poveda", "email": "christianpoveda@protonmail.com", "date": "2019-11-21T13:45:34Z"}, "committer": {"name": "Christian Poveda", "email": "christianpoveda@protonmail.com", "date": "2019-12-02T14:03:41Z"}, "message": "Add tests for mutable borrows in const fns", "tree": {"sha": "5105663217e58409d363ceda176aed78001c6cb6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5105663217e58409d363ceda176aed78001c6cb6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8b0f5acfcbc178680f3cbec737b13bf0da6c05bd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8b0f5acfcbc178680f3cbec737b13bf0da6c05bd", "html_url": "https://github.com/rust-lang/rust/commit/8b0f5acfcbc178680f3cbec737b13bf0da6c05bd", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8b0f5acfcbc178680f3cbec737b13bf0da6c05bd/comments", "author": {"login": "pvdrz", "id": 31802960, "node_id": "MDQ6VXNlcjMxODAyOTYw", "avatar_url": "https://avatars.githubusercontent.com/u/31802960?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pvdrz", "html_url": "https://github.com/pvdrz", "followers_url": "https://api.github.com/users/pvdrz/followers", "following_url": "https://api.github.com/users/pvdrz/following{/other_user}", "gists_url": "https://api.github.com/users/pvdrz/gists{/gist_id}", "starred_url": "https://api.github.com/users/pvdrz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pvdrz/subscriptions", "organizations_url": "https://api.github.com/users/pvdrz/orgs", "repos_url": "https://api.github.com/users/pvdrz/repos", "events_url": "https://api.github.com/users/pvdrz/events{/privacy}", "received_events_url": "https://api.github.com/users/pvdrz/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pvdrz", "id": 31802960, "node_id": "MDQ6VXNlcjMxODAyOTYw", "avatar_url": "https://avatars.githubusercontent.com/u/31802960?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pvdrz", "html_url": "https://github.com/pvdrz", "followers_url": "https://api.github.com/users/pvdrz/followers", "following_url": "https://api.github.com/users/pvdrz/following{/other_user}", "gists_url": "https://api.github.com/users/pvdrz/gists{/gist_id}", "starred_url": "https://api.github.com/users/pvdrz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pvdrz/subscriptions", "organizations_url": "https://api.github.com/users/pvdrz/orgs", "repos_url": "https://api.github.com/users/pvdrz/repos", "events_url": "https://api.github.com/users/pvdrz/events{/privacy}", "received_events_url": "https://api.github.com/users/pvdrz/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bb2a4238946563ef87eed6fe7e833ca731fa4c79", "url": "https://api.github.com/repos/rust-lang/rust/commits/bb2a4238946563ef87eed6fe7e833ca731fa4c79", "html_url": "https://github.com/rust-lang/rust/commit/bb2a4238946563ef87eed6fe7e833ca731fa4c79"}], "stats": {"total": 34, "additions": 34, "deletions": 0}, "files": [{"sha": "2207599815ee8056198f2a3bbdcb03ffa93bab66", "filename": "src/test/ui/consts/const-eval/feature-gate-const_fn_mut_refs.rs", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/8b0f5acfcbc178680f3cbec737b13bf0da6c05bd/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Ffeature-gate-const_fn_mut_refs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8b0f5acfcbc178680f3cbec737b13bf0da6c05bd/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Ffeature-gate-const_fn_mut_refs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Ffeature-gate-const_fn_mut_refs.rs?ref=8b0f5acfcbc178680f3cbec737b13bf0da6c05bd", "patch": "@@ -0,0 +1,7 @@\n+fn main() {\n+    foo(&mut 5);\n+}\n+\n+const fn foo(x: &mut i32) -> i32 { //~ ERROR mutable references in const fn are unstable\n+    *x + 1\n+}"}, {"sha": "26a61d38f8c3c6571bd2037f25ff61ac0b213eb8", "filename": "src/test/ui/consts/const-eval/feature-gate-const_fn_mut_refs.stderr", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/8b0f5acfcbc178680f3cbec737b13bf0da6c05bd/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Ffeature-gate-const_fn_mut_refs.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/8b0f5acfcbc178680f3cbec737b13bf0da6c05bd/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Ffeature-gate-const_fn_mut_refs.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Ffeature-gate-const_fn_mut_refs.stderr?ref=8b0f5acfcbc178680f3cbec737b13bf0da6c05bd", "patch": "@@ -0,0 +1,12 @@\n+error[E0723]: mutable references in const fn are unstable\n+  --> $DIR/feature-gate-const_fn_mut_refs.rs:5:14\n+   |\n+LL | const fn foo(x: &mut i32) -> i32 {\n+   |              ^\n+   |\n+   = note: for more information, see issue https://github.com/rust-lang/rust/issues/57563\n+   = help: add `#![feature(const_fn)]` to the crate attributes to enable\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0723`."}, {"sha": "764c45b386b062587a96d389ccb6dba9bace4704", "filename": "src/test/ui/consts/const_fn_mut_refs.rs", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/8b0f5acfcbc178680f3cbec737b13bf0da6c05bd/src%2Ftest%2Fui%2Fconsts%2Fconst_fn_mut_refs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8b0f5acfcbc178680f3cbec737b13bf0da6c05bd/src%2Ftest%2Fui%2Fconsts%2Fconst_fn_mut_refs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst_fn_mut_refs.rs?ref=8b0f5acfcbc178680f3cbec737b13bf0da6c05bd", "patch": "@@ -0,0 +1,15 @@\n+// run-pass\n+\n+#![feature(const_fn_mut_refs)]\n+\n+struct Foo {\n+    x: i32\n+}\n+\n+const fn bar(foo: &mut Foo) -> i32 {\n+    foo.x + 1\n+}\n+\n+fn main() {\n+    assert_eq!(bar(&mut Foo{x: 0}), 1);\n+}"}]}