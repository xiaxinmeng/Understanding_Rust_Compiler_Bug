{"sha": "16d7f87b6cd416175cf145a17230051f83b15bf8", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE2ZDdmODdiNmNkNDE2MTc1Y2YxNDVhMTcyMzAwNTFmODNiMTViZjg=", "commit": {"author": {"name": "mark", "email": "markm@cs.wisc.edu", "date": "2018-06-23T00:59:29Z"}, "committer": {"name": "mark", "email": "markm@cs.wisc.edu", "date": "2018-06-24T21:16:14Z"}, "message": "used debug, not info", "tree": {"sha": "1825559ad14e04e8bc49061595abe6daf9410919", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1825559ad14e04e8bc49061595abe6daf9410919"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/16d7f87b6cd416175cf145a17230051f83b15bf8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/16d7f87b6cd416175cf145a17230051f83b15bf8", "html_url": "https://github.com/rust-lang/rust/commit/16d7f87b6cd416175cf145a17230051f83b15bf8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/16d7f87b6cd416175cf145a17230051f83b15bf8/comments", "author": {"login": "mark-i-m", "id": 8827840, "node_id": "MDQ6VXNlcjg4Mjc4NDA=", "avatar_url": "https://avatars.githubusercontent.com/u/8827840?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mark-i-m", "html_url": "https://github.com/mark-i-m", "followers_url": "https://api.github.com/users/mark-i-m/followers", "following_url": "https://api.github.com/users/mark-i-m/following{/other_user}", "gists_url": "https://api.github.com/users/mark-i-m/gists{/gist_id}", "starred_url": "https://api.github.com/users/mark-i-m/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mark-i-m/subscriptions", "organizations_url": "https://api.github.com/users/mark-i-m/orgs", "repos_url": "https://api.github.com/users/mark-i-m/repos", "events_url": "https://api.github.com/users/mark-i-m/events{/privacy}", "received_events_url": "https://api.github.com/users/mark-i-m/received_events", "type": "User", "site_admin": false}, "committer": {"login": "mark-i-m", "id": 8827840, "node_id": "MDQ6VXNlcjg4Mjc4NDA=", "avatar_url": "https://avatars.githubusercontent.com/u/8827840?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mark-i-m", "html_url": "https://github.com/mark-i-m", "followers_url": "https://api.github.com/users/mark-i-m/followers", "following_url": "https://api.github.com/users/mark-i-m/following{/other_user}", "gists_url": "https://api.github.com/users/mark-i-m/gists{/gist_id}", "starred_url": "https://api.github.com/users/mark-i-m/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mark-i-m/subscriptions", "organizations_url": "https://api.github.com/users/mark-i-m/orgs", "repos_url": "https://api.github.com/users/mark-i-m/repos", "events_url": "https://api.github.com/users/mark-i-m/events{/privacy}", "received_events_url": "https://api.github.com/users/mark-i-m/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "997655cf87bc981b58b303c842343c750d104efa", "url": "https://api.github.com/repos/rust-lang/rust/commits/997655cf87bc981b58b303c842343c750d104efa", "html_url": "https://github.com/rust-lang/rust/commit/997655cf87bc981b58b303c842343c750d104efa"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "60d28d8098b4ca656b7b86cbb6617c63adf3dba7", "filename": "src/librustc_allocator/expand.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/16d7f87b6cd416175cf145a17230051f83b15bf8/src%2Flibrustc_allocator%2Fexpand.rs", "raw_url": "https://github.com/rust-lang/rust/raw/16d7f87b6cd416175cf145a17230051f83b15bf8/src%2Flibrustc_allocator%2Fexpand.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_allocator%2Fexpand.rs?ref=16d7f87b6cd416175cf145a17230051f83b15bf8", "patch": "@@ -66,7 +66,7 @@ struct ExpandAllocatorDirectives<'a> {\n \n impl<'a> Folder for ExpandAllocatorDirectives<'a> {\n     fn fold_item(&mut self, item: P<Item>) -> SmallVector<P<Item>> {\n-        info!(\"in submodule {}\", self.in_submod);\n+        debug!(\"in submodule {}\", self.in_submod);\n \n         let name = if attr::contains_name(&item.attrs, \"global_allocator\") {\n             \"global_allocator\"\n@@ -160,11 +160,11 @@ impl<'a> Folder for ExpandAllocatorDirectives<'a> {\n \n     // If we enter a submodule, take note.\n     fn fold_mod(&mut self, m: Mod) -> Mod {\n-        info!(\"enter submodule\");\n+        debug!(\"enter submodule\");\n         self.in_submod += 1;\n         let ret = fold::noop_fold_mod(m, self);\n         self.in_submod -= 1;\n-        info!(\"exit submodule\");\n+        debug!(\"exit submodule\");\n         ret\n     }\n "}]}