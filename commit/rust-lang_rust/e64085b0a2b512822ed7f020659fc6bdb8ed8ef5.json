{"sha": "e64085b0a2b512822ed7f020659fc6bdb8ed8ef5", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU2NDA4NWIwYTJiNTEyODIyZWQ3ZjAyMDY1OWZjNmJkYjhlZDhlZjU=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2011-03-09T02:11:00Z"}, "committer": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2011-03-09T02:11:00Z"}, "message": "rustc: Fold over the paths in tag patterns so that we can resolve type variables in them", "tree": {"sha": "5693bb0b4ab3eb47f46e3c773dfb91852b5c246c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5693bb0b4ab3eb47f46e3c773dfb91852b5c246c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e64085b0a2b512822ed7f020659fc6bdb8ed8ef5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e64085b0a2b512822ed7f020659fc6bdb8ed8ef5", "html_url": "https://github.com/rust-lang/rust/commit/e64085b0a2b512822ed7f020659fc6bdb8ed8ef5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e64085b0a2b512822ed7f020659fc6bdb8ed8ef5/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5b7c3b8b5df8292e27943908fd4c16323c7833a8", "url": "https://api.github.com/repos/rust-lang/rust/commits/5b7c3b8b5df8292e27943908fd4c16323c7833a8", "html_url": "https://github.com/rust-lang/rust/commit/5b7c3b8b5df8292e27943908fd4c16323c7833a8"}], "stats": {"total": 5, "additions": 4, "deletions": 1}, "files": [{"sha": "ccf3457b7bd8700c76c7799d00011da50d846a58", "filename": "src/comp/middle/fold.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/e64085b0a2b512822ed7f020659fc6bdb8ed8ef5/src%2Fcomp%2Fmiddle%2Ffold.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e64085b0a2b512822ed7f020659fc6bdb8ed8ef5/src%2Fcomp%2Fmiddle%2Ffold.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Ffold.rs?ref=e64085b0a2b512822ed7f020659fc6bdb8ed8ef5", "patch": "@@ -452,11 +452,14 @@ fn fold_pat[ENV](&ENV env, ast_fold[ENV] fld, @ast.pat p) -> @ast.pat {\n             ret fld.fold_pat_bind(env_, p.span, id, did, t);\n         }\n         case (ast.pat_tag(?path, ?pats, ?d, ?t)) {\n+            auto ppath = fold_path(env, fld, path);\n+\n             let vec[@ast.pat] ppats = vec();\n             for (@ast.pat pat in pats) {\n                 ppats += vec(fold_pat(env_, fld, pat));\n             }\n-            ret fld.fold_pat_tag(env_, p.span, path, ppats, d, t);\n+\n+            ret fld.fold_pat_tag(env_, p.span, ppath, ppats, d, t);\n         }\n     }\n }"}]}