{"sha": "11f181083136f1a91feb4061c640d8c753e3c5f0", "node_id": "C_kwDOAAsO6NoAKDExZjE4MTA4MzEzNmYxYTkxZmViNDA2MWM2NDBkOGM3NTNlM2M1ZjA", "commit": {"author": {"name": "Santiago Pastorino", "email": "spastorino@gmail.com", "date": "2023-03-13T22:02:28Z"}, "committer": {"name": "Santiago Pastorino", "email": "spastorino@gmail.com", "date": "2023-03-15T19:58:37Z"}, "message": "Feed is_type_alias_impl_trait for RPITITs on the trait side", "tree": {"sha": "a1eb34efa78c198b0d36771d76cb0510b0cf50c0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a1eb34efa78c198b0d36771d76cb0510b0cf50c0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/11f181083136f1a91feb4061c640d8c753e3c5f0", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEF0ntrgrd9qf9uuThgTGiTgx5768FAmQSI20ACgkQgTGiTgx5\n769GOw/9GT1vDVKZ8CJZWVbIDxgvcVdxGbZR6ClOje9ZZSJDB7zT/2eqGixDjcWC\nr5hkfVlE+JDbdLr/7pT7y+ozmwewfD1YAbrtU0OW+7Ltiv9b/qoosI0xvKTtWajY\nu7XmcE4K/g5Wna1vX6HL4W7PWhQBsup//0mTwsQACvn5BYPG/rFc79MK+pUKLrcZ\nkUINIdv81dNVwSmQN7kJAvtrsxjDZfPkYxQhC3yByoT9nFSVB30KFNdRmBTx/ujK\nWflQBECvKeNWNDpjKzAUB2gSTAo2DpLWQ3leuYU/ncqhr3kjdRx8ijOUZACSiVZj\nMLjYMBwlw7sM/3TVpTTfYyRcif4RbdcOFiNeNz3iJ1eSb20V+aR1VWs4eQzmXStp\nSejpBTd6ZvD1nnQQ1CMA6R3VqXPbu+Mc8G/3HmhT+hJBpYzFktlJdzwy0P+2EKM9\nsyuEdsqq+MJXO+Su4GblMrW6+Kh14hU/V4KlqosynpQWcxS7OQOpkBBcCOY5pceg\ncy6naOAgzQJ9fp+xZnAtv1jFKWWMEoLajVaRufxW/ZbVywIcWu/Z+t1rkIeonPEZ\not2T1I5QIyZxeiWFs9G82Ly+JZPWudUCJ6bHqNS0JPxJeGxDa7sYkxDpBJU+0qMQ\nwijamZh8z9PUn81nKFg7VLt/Jef6kb3AWk+iidMvBhw1FEqd2Hk=\n=6anC\n-----END PGP SIGNATURE-----", "payload": "tree a1eb34efa78c198b0d36771d76cb0510b0cf50c0\nparent e41491fe05a6a11a89b7c494ea0d95d3b32a6b0f\nauthor Santiago Pastorino <spastorino@gmail.com> 1678744948 -0300\ncommitter Santiago Pastorino <spastorino@gmail.com> 1678910317 -0300\n\nFeed is_type_alias_impl_trait for RPITITs on the trait side\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/11f181083136f1a91feb4061c640d8c753e3c5f0", "html_url": "https://github.com/rust-lang/rust/commit/11f181083136f1a91feb4061c640d8c753e3c5f0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/11f181083136f1a91feb4061c640d8c753e3c5f0/comments", "author": {"login": "spastorino", "id": 52642, "node_id": "MDQ6VXNlcjUyNjQy", "avatar_url": "https://avatars.githubusercontent.com/u/52642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spastorino", "html_url": "https://github.com/spastorino", "followers_url": "https://api.github.com/users/spastorino/followers", "following_url": "https://api.github.com/users/spastorino/following{/other_user}", "gists_url": "https://api.github.com/users/spastorino/gists{/gist_id}", "starred_url": "https://api.github.com/users/spastorino/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spastorino/subscriptions", "organizations_url": "https://api.github.com/users/spastorino/orgs", "repos_url": "https://api.github.com/users/spastorino/repos", "events_url": "https://api.github.com/users/spastorino/events{/privacy}", "received_events_url": "https://api.github.com/users/spastorino/received_events", "type": "User", "site_admin": false}, "committer": {"login": "spastorino", "id": 52642, "node_id": "MDQ6VXNlcjUyNjQy", "avatar_url": "https://avatars.githubusercontent.com/u/52642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spastorino", "html_url": "https://github.com/spastorino", "followers_url": "https://api.github.com/users/spastorino/followers", "following_url": "https://api.github.com/users/spastorino/following{/other_user}", "gists_url": "https://api.github.com/users/spastorino/gists{/gist_id}", "starred_url": "https://api.github.com/users/spastorino/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spastorino/subscriptions", "organizations_url": "https://api.github.com/users/spastorino/orgs", "repos_url": "https://api.github.com/users/spastorino/repos", "events_url": "https://api.github.com/users/spastorino/events{/privacy}", "received_events_url": "https://api.github.com/users/spastorino/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e41491fe05a6a11a89b7c494ea0d95d3b32a6b0f", "url": "https://api.github.com/repos/rust-lang/rust/commits/e41491fe05a6a11a89b7c494ea0d95d3b32a6b0f", "html_url": "https://github.com/rust-lang/rust/commit/e41491fe05a6a11a89b7c494ea0d95d3b32a6b0f"}], "stats": {"total": 3, "additions": 3, "deletions": 0}, "files": [{"sha": "690a0b8b04d7009d89af3a4e1d9ac16c2a4ddcd8", "filename": "compiler/rustc_middle/src/query/mod.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/11f181083136f1a91feb4061c640d8c753e3c5f0/compiler%2Frustc_middle%2Fsrc%2Fquery%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/11f181083136f1a91feb4061c640d8c753e3c5f0/compiler%2Frustc_middle%2Fsrc%2Fquery%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fquery%2Fmod.rs?ref=11f181083136f1a91feb4061c640d8c753e3c5f0", "patch": "@@ -191,6 +191,7 @@ rustc_queries! {\n     {\n         desc { \"determine whether the opaque is a type-alias impl trait\" }\n         separate_provide_extern\n+        feedable\n     }\n \n     query unsizing_params_for_adt(key: DefId) -> &'tcx rustc_index::bit_set::BitSet<u32>"}, {"sha": "68b1086e8e3f5d8f87fd6374364e3d68c44ca848", "filename": "compiler/rustc_ty_utils/src/assoc.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/11f181083136f1a91feb4061c640d8c753e3c5f0/compiler%2Frustc_ty_utils%2Fsrc%2Fassoc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/11f181083136f1a91feb4061c640d8c753e3c5f0/compiler%2Frustc_ty_utils%2Fsrc%2Fassoc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_ty_utils%2Fsrc%2Fassoc.rs?ref=11f181083136f1a91feb4061c640d8c753e3c5f0", "patch": "@@ -289,6 +289,8 @@ fn associated_item_for_impl_trait_in_trait(\n         InternalSubsts::identity_for_item(tcx, opaque_ty_def_id.to_def_id()),\n     )));\n \n+    trait_assoc_ty.is_type_alias_impl_trait(false);\n+\n     // Copy generics_of of the opaque type item but the trait is the parent.\n     trait_assoc_ty.generics_of({\n         let opaque_ty_generics = tcx.generics_of(opaque_ty_def_id);"}]}