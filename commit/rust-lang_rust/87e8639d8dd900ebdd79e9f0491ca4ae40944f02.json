{"sha": "87e8639d8dd900ebdd79e9f0491ca4ae40944f02", "node_id": "C_kwDOAAsO6NoAKDg3ZTg2MzlkOGRkOTAwZWJkZDc5ZTlmMDQ5MWNhNGFlNDA5NDRmMDI", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-12-21T05:42:10Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-12-21T05:42:10Z"}, "message": "Auto merge of #91903 - tmiasko:bit-set-hash, r=jackh726\n\nImplement StableHash for BitSet and BitMatrix via Hash\n\nThis fixes an issue where bit sets / bit matrices the same word\ncontent but a different domain size would receive the same hash.", "tree": {"sha": "5564c3cea73e5b96a6e63eeda129c7a3ea6112b3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5564c3cea73e5b96a6e63eeda129c7a3ea6112b3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/87e8639d8dd900ebdd79e9f0491ca4ae40944f02", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/87e8639d8dd900ebdd79e9f0491ca4ae40944f02", "html_url": "https://github.com/rust-lang/rust/commit/87e8639d8dd900ebdd79e9f0491ca4ae40944f02", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/87e8639d8dd900ebdd79e9f0491ca4ae40944f02/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "46171fa96c12bcea41b6e0efb8ff6b58fe1b1e3b", "url": "https://api.github.com/repos/rust-lang/rust/commits/46171fa96c12bcea41b6e0efb8ff6b58fe1b1e3b", "html_url": "https://github.com/rust-lang/rust/commit/46171fa96c12bcea41b6e0efb8ff6b58fe1b1e3b"}, {"sha": "d0281bcb25d779a7b27cd8d5de394f2c9f72f33c", "url": "https://api.github.com/repos/rust-lang/rust/commits/d0281bcb25d779a7b27cd8d5de394f2c9f72f33c", "html_url": "https://github.com/rust-lang/rust/commit/d0281bcb25d779a7b27cd8d5de394f2c9f72f33c"}], "stats": {"total": 39, "additions": 33, "deletions": 6}, "files": [{"sha": "d87aa5ed0d5525bd1d36bb7bd159b8bbe75d5faa", "filename": "compiler/rustc_data_structures/src/stable_hasher.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/87e8639d8dd900ebdd79e9f0491ca4ae40944f02/compiler%2Frustc_data_structures%2Fsrc%2Fstable_hasher.rs", "raw_url": "https://github.com/rust-lang/rust/raw/87e8639d8dd900ebdd79e9f0491ca4ae40944f02/compiler%2Frustc_data_structures%2Fsrc%2Fstable_hasher.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_data_structures%2Fsrc%2Fstable_hasher.rs?ref=87e8639d8dd900ebdd79e9f0491ca4ae40944f02", "patch": "@@ -478,14 +478,14 @@ where\n }\n \n impl<I: vec::Idx, CTX> HashStable<CTX> for bit_set::BitSet<I> {\n-    fn hash_stable(&self, ctx: &mut CTX, hasher: &mut StableHasher) {\n-        self.words().hash_stable(ctx, hasher);\n+    fn hash_stable(&self, _ctx: &mut CTX, hasher: &mut StableHasher) {\n+        ::std::hash::Hash::hash(self, hasher);\n     }\n }\n \n impl<R: vec::Idx, C: vec::Idx, CTX> HashStable<CTX> for bit_set::BitMatrix<R, C> {\n-    fn hash_stable(&self, ctx: &mut CTX, hasher: &mut StableHasher) {\n-        self.words().hash_stable(ctx, hasher);\n+    fn hash_stable(&self, _ctx: &mut CTX, hasher: &mut StableHasher) {\n+        ::std::hash::Hash::hash(self, hasher);\n     }\n }\n "}, {"sha": "391db67d29dbb282e2333336806b2c5ca632345b", "filename": "compiler/rustc_data_structures/src/stable_hasher/tests.rs", "status": "modified", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/87e8639d8dd900ebdd79e9f0491ca4ae40944f02/compiler%2Frustc_data_structures%2Fsrc%2Fstable_hasher%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/87e8639d8dd900ebdd79e9f0491ca4ae40944f02/compiler%2Frustc_data_structures%2Fsrc%2Fstable_hasher%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_data_structures%2Fsrc%2Fstable_hasher%2Ftests.rs?ref=87e8639d8dd900ebdd79e9f0491ca4ae40944f02", "patch": "@@ -71,3 +71,30 @@ fn test_hash_isize() {\n \n     assert_eq!(h.finalize(), expected);\n }\n+\n+fn hash<T: HashStable<()>>(t: &T) -> u128 {\n+    let mut h = StableHasher::new();\n+    let ctx = &mut ();\n+    t.hash_stable(ctx, &mut h);\n+    h.finish()\n+}\n+\n+// Check that bit set hash includes the domain size.\n+#[test]\n+fn test_hash_bit_set() {\n+    use rustc_index::bit_set::BitSet;\n+    let a: BitSet<usize> = BitSet::new_empty(1);\n+    let b: BitSet<usize> = BitSet::new_empty(2);\n+    assert_ne!(a, b);\n+    assert_ne!(hash(&a), hash(&b));\n+}\n+\n+// Check that bit matrix hash includes the matrix dimensions.\n+#[test]\n+fn test_hash_bit_matrix() {\n+    use rustc_index::bit_set::BitMatrix;\n+    let a: BitMatrix<usize, usize> = BitMatrix::new(1, 1);\n+    let b: BitMatrix<usize, usize> = BitMatrix::new(1, 2);\n+    assert_ne!(a, b);\n+    assert_ne!(hash(&a), hash(&b));\n+}"}, {"sha": "241cbe234874d7c0adcd0640997c9aa8249a155a", "filename": "compiler/rustc_index/src/bit_set.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/87e8639d8dd900ebdd79e9f0491ca4ae40944f02/compiler%2Frustc_index%2Fsrc%2Fbit_set.rs", "raw_url": "https://github.com/rust-lang/rust/raw/87e8639d8dd900ebdd79e9f0491ca4ae40944f02/compiler%2Frustc_index%2Fsrc%2Fbit_set.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_index%2Fsrc%2Fbit_set.rs?ref=87e8639d8dd900ebdd79e9f0491ca4ae40944f02", "patch": "@@ -87,7 +87,7 @@ macro_rules! bit_relations_inherent_impls {\n /// to or greater than the domain size. All operations that involve two bitsets\n /// will panic if the bitsets have differing domain sizes.\n ///\n-#[derive(Eq, PartialEq, Decodable, Encodable)]\n+#[derive(Eq, PartialEq, Hash, Decodable, Encodable)]\n pub struct BitSet<T> {\n     domain_size: usize,\n     words: Vec<Word>,\n@@ -987,7 +987,7 @@ impl<T: Idx> GrowableBitSet<T> {\n ///\n /// All operations that involve a row and/or column index will panic if the\n /// index exceeds the relevant bound.\n-#[derive(Clone, Eq, PartialEq, Decodable, Encodable)]\n+#[derive(Clone, Eq, PartialEq, Hash, Decodable, Encodable)]\n pub struct BitMatrix<R: Idx, C: Idx> {\n     num_rows: usize,\n     num_columns: usize,"}]}