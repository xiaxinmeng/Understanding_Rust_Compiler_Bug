{"sha": "b462eb96b867cd38c60fb3d94ffd7688cec70f21", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI0NjJlYjk2Yjg2N2NkMzhjNjBmYjNkOTRmZmQ3Njg4Y2VjNzBmMjE=", "commit": {"author": {"name": "Shotaro Yamada", "email": "sinkuu@sinkuu.xyz", "date": "2019-10-14T08:21:38Z"}, "committer": {"name": "Shotaro Yamada", "email": "sinkuu@sinkuu.xyz", "date": "2019-10-14T08:21:38Z"}, "message": "import make_mut_arc_slice", "tree": {"sha": "11646ed45ac51a08ff50bc3b78a00f1c5b846f7f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/11646ed45ac51a08ff50bc3b78a00f1c5b846f7f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b462eb96b867cd38c60fb3d94ffd7688cec70f21", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b462eb96b867cd38c60fb3d94ffd7688cec70f21", "html_url": "https://github.com/rust-lang/rust/commit/b462eb96b867cd38c60fb3d94ffd7688cec70f21", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b462eb96b867cd38c60fb3d94ffd7688cec70f21/comments", "author": {"login": "sinkuu", "id": 7091080, "node_id": "MDQ6VXNlcjcwOTEwODA=", "avatar_url": "https://avatars.githubusercontent.com/u/7091080?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sinkuu", "html_url": "https://github.com/sinkuu", "followers_url": "https://api.github.com/users/sinkuu/followers", "following_url": "https://api.github.com/users/sinkuu/following{/other_user}", "gists_url": "https://api.github.com/users/sinkuu/gists{/gist_id}", "starred_url": "https://api.github.com/users/sinkuu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sinkuu/subscriptions", "organizations_url": "https://api.github.com/users/sinkuu/orgs", "repos_url": "https://api.github.com/users/sinkuu/repos", "events_url": "https://api.github.com/users/sinkuu/events{/privacy}", "received_events_url": "https://api.github.com/users/sinkuu/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sinkuu", "id": 7091080, "node_id": "MDQ6VXNlcjcwOTEwODA=", "avatar_url": "https://avatars.githubusercontent.com/u/7091080?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sinkuu", "html_url": "https://github.com/sinkuu", "followers_url": "https://api.github.com/users/sinkuu/followers", "following_url": "https://api.github.com/users/sinkuu/following{/other_user}", "gists_url": "https://api.github.com/users/sinkuu/gists{/gist_id}", "starred_url": "https://api.github.com/users/sinkuu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sinkuu/subscriptions", "organizations_url": "https://api.github.com/users/sinkuu/orgs", "repos_url": "https://api.github.com/users/sinkuu/repos", "events_url": "https://api.github.com/users/sinkuu/events{/privacy}", "received_events_url": "https://api.github.com/users/sinkuu/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "965ca0d271bdb467ec1f7fe309094aff8cac6aaa", "url": "https://api.github.com/repos/rust-lang/rust/commits/965ca0d271bdb467ec1f7fe309094aff8cac6aaa", "html_url": "https://github.com/rust-lang/rust/commit/965ca0d271bdb467ec1f7fe309094aff8cac6aaa"}], "stats": {"total": 3, "additions": 2, "deletions": 1}, "files": [{"sha": "639518f27330c3c97abdd848ee34c7b6af7fae1d", "filename": "crates/ra_hir/src/ty/lower.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/b462eb96b867cd38c60fb3d94ffd7688cec70f21/crates%2Fra_hir%2Fsrc%2Fty%2Flower.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b462eb96b867cd38c60fb3d94ffd7688cec70f21/crates%2Fra_hir%2Fsrc%2Fty%2Flower.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fty%2Flower.rs?ref=b462eb96b867cd38c60fb3d94ffd7688cec70f21", "patch": "@@ -22,6 +22,7 @@ use crate::{\n     resolve::{Resolver, TypeNs},\n     ty::Adt,\n     type_ref::{TypeBound, TypeRef},\n+    util::make_mut_arc_slice,\n     BuiltinType, Const, Enum, EnumVariant, Function, ModuleDef, Path, Static, Struct, StructField,\n     Trait, TypeAlias, Union,\n };\n@@ -390,7 +391,7 @@ impl TraitRef {\n     ) -> Self {\n         let mut substs = TraitRef::substs_from_path(db, resolver, segment, resolved);\n         if let Some(self_ty) = explicit_self_ty {\n-            crate::util::make_mut_arc_slice(&mut substs.0, |substs| {\n+            make_mut_arc_slice(&mut substs.0, |substs| {\n                 substs[0] = self_ty;\n             });\n         }"}]}