{"sha": "73d7f1d41b0521da8385f9910a20c1c116246dd4", "node_id": "MDY6Q29tbWl0NzI0NzEyOjczZDdmMWQ0MWIwNTIxZGE4Mzg1Zjk5MTBhMjBjMWMxMTYyNDZkZDQ=", "commit": {"author": {"name": "Oliver Schneider", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2016-11-04T08:34:54Z"}, "committer": {"name": "Oliver Schneider", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2016-11-04T08:34:54Z"}, "message": "implement drop for NonZero optimized enums", "tree": {"sha": "04bcc7ae05805c69dcba44395d28190862a0ed29", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/04bcc7ae05805c69dcba44395d28190862a0ed29"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/73d7f1d41b0521da8385f9910a20c1c116246dd4", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQIcBAABAgAGBQJYHEguAAoJEFbW7qD8Z6xGaRQP/0Fs1WtpWMFYXgzVgAvxgmpu\nxiVGegfoMy6Gv4JSQ35ppNmMwvEMDXkOuJXPR84pK0NS5Vx/wJCVgFabn5R6ZVmz\n19Ha4l+86lH1zJUxn0595QcpFfEywYDkxuw4oO5jMwpi25+phEpPLkwBzFyyOSn2\nlq7Q8z90VjNIKZZBbCu2M7px/Wp0F3BPT78f0Gl66gF6der+1i8KRekOzvJFpRiH\nIH6/rFD01gleKNt6Vu5w6taQLhN7oBSInhm5/tZ3OZ4N1lsRLmr1+mA7u4d+jmlK\n1F2UoyMR/CHQEhY+ecH7TLrg6Ua6kkvAf4ZeCaMs/fw6em3kk2i/7A8s0xvy5xwz\nJMw6T3BL/RiYDakWSX8wHTmdDC8SQvVgyOuWWhUh272FLJD66T50NVdnaUmm4PvF\nBhnuk/9lNLfcnGJ3iGo2zrIZQE8usdLje1YjqjvXYLhA2l3zpo/1beXVFeRW67wt\nB9j3ngEmlj5upxMzL0rSOFU9DTYccw28WXHQlJHygsziKBye61NsBm3bmbKBAEdR\nlDYOrlRFPYCDcAWdWnxlPBY5uFVOADwSD1LOzQUnc31/VUug1EnaQzwT9tO0cBA3\nLkp5w1h18g2/x83hFa43F/BXn+r2zqHJHvJSW8ppLOFHb9vXubpQCx5vlRHrd4iQ\nNvqrf5CjI1FOo7CTg6oo\n=qpfJ\n-----END PGP SIGNATURE-----", "payload": "tree 04bcc7ae05805c69dcba44395d28190862a0ed29\nparent ff95efc52575c7ef8deb3c6628328d7a07442ec9\nauthor Oliver Schneider <git-spam-no-reply9815368754983@oli-obk.de> 1478248494 +0100\ncommitter Oliver Schneider <git-spam-no-reply9815368754983@oli-obk.de> 1478248494 +0100\n\nimplement drop for NonZero optimized enums"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/73d7f1d41b0521da8385f9910a20c1c116246dd4", "html_url": "https://github.com/rust-lang/rust/commit/73d7f1d41b0521da8385f9910a20c1c116246dd4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/73d7f1d41b0521da8385f9910a20c1c116246dd4/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ff95efc52575c7ef8deb3c6628328d7a07442ec9", "url": "https://api.github.com/repos/rust-lang/rust/commits/ff95efc52575c7ef8deb3c6628328d7a07442ec9", "html_url": "https://github.com/rust-lang/rust/commit/ff95efc52575c7ef8deb3c6628328d7a07442ec9"}], "stats": {"total": 60, "additions": 60, "deletions": 0}, "files": [{"sha": "6c400a040fb284e36a366644219ff6f4953c58f1", "filename": "src/interpreter/terminator/mod.rs", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/73d7f1d41b0521da8385f9910a20c1c116246dd4/src%2Finterpreter%2Fterminator%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/73d7f1d41b0521da8385f9910a20c1c116246dd4/src%2Finterpreter%2Fterminator%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Finterpreter%2Fterminator%2Fmod.rs?ref=73d7f1d41b0521da8385f9910a20c1c116246dd4", "patch": "@@ -560,6 +560,21 @@ impl<'a, 'tcx> EvalContext<'a, 'tcx> {\n                             return Ok(()); // nothing to do, this is zero sized (e.g. `None`)\n                         }\n                     },\n+                    Layout::RawNullablePointer { nndiscr, .. } => {\n+                        let discr = self.read_discriminant_value(adt_ptr, ty)?;\n+                        if discr == nndiscr {\n+                            assert_eq!(adt_def.variants[discr as usize].fields.len(), 1);\n+                            let field_ty = &adt_def.variants[discr as usize].fields[0];\n+                            let field_ty = self.monomorphize_field_ty(field_ty, substs);\n+                            // FIXME: once read_discriminant_value works with lvalue, don't force\n+                            // alloc in the RawNullablePointer case\n+                            self.drop(Lvalue::from_ptr(adt_ptr), field_ty, drop)?;\n+                            return Ok(());\n+                        } else {\n+                            // FIXME: the zst variant might contain zst types that impl Drop\n+                            return Ok(()); // nothing to do, this is zero sized (e.g. `None`)\n+                        }\n+                    },\n                     _ => bug!(\"{:?} is not an adt layout\", layout),\n                 };\n                 for (field_ty, offset) in fields {"}, {"sha": "1aef95d8a3f30b4d5917ec80a574f360ac713440", "filename": "tests/run-pass/regions-lifetime-nonfree-late-bound.rs", "status": "added", "additions": 45, "deletions": 0, "changes": 45, "blob_url": "https://github.com/rust-lang/rust/blob/73d7f1d41b0521da8385f9910a20c1c116246dd4/tests%2Frun-pass%2Fregions-lifetime-nonfree-late-bound.rs", "raw_url": "https://github.com/rust-lang/rust/raw/73d7f1d41b0521da8385f9910a20c1c116246dd4/tests%2Frun-pass%2Fregions-lifetime-nonfree-late-bound.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Fregions-lifetime-nonfree-late-bound.rs?ref=73d7f1d41b0521da8385f9910a20c1c116246dd4", "patch": "@@ -0,0 +1,45 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// This is a regression test for the ICE from issue #10846.\n+//\n+// The original issue causing the ICE: the LUB-computations during\n+// type inference were encountering late-bound lifetimes, and\n+// asserting that such lifetimes should have already been substituted\n+// with a concrete lifetime.\n+//\n+// However, those encounters were occurring within the lexical scope\n+// of the binding for the late-bound lifetime; that is, the late-bound\n+// lifetimes were perfectly valid.  The core problem was that the type\n+// folding code was over-zealously passing back all lifetimes when\n+// doing region-folding, when really all clients of the region-folding\n+// case only want to see FREE lifetime variables, not bound ones.\n+\n+// pretty-expanded FIXME #23616\n+\n+#![allow(unused_features)]\n+#![feature(box_syntax)]\n+\n+pub fn main() {\n+    fn explicit() {\n+        fn test<F>(_x: Option<Box<F>>) where F: FnMut(Box<for<'a> FnMut(&'a isize)>) {}\n+        test(Some(box |_f: Box<for<'a> FnMut(&'a isize)>| {}));\n+    }\n+\n+    // The code below is shorthand for the code above (and more likely\n+    // to represent what one encounters in practice).\n+    fn implicit() {\n+        fn test<F>(_x: Option<Box<F>>) where F: FnMut(Box<        FnMut(&   isize)>) {}\n+        test(Some(box |_f: Box<        FnMut(&   isize)>| {}));\n+    }\n+\n+    explicit();\n+    implicit();\n+}"}]}