{"sha": "e99fc20f9595590597e09795de5bfa3d361517a9", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU5OWZjMjBmOTU5NTU5MDU5N2UwOTc5NWRlNWJmYTNkMzYxNTE3YTk=", "commit": {"author": {"name": "Michael Neumann", "email": "mneumann@ntecs.de", "date": "2014-07-31T00:01:16Z"}, "committer": {"name": "Michael Neumann", "email": "mneumann@ntecs.de", "date": "2014-07-31T00:01:16Z"}, "message": "Fix trailing whitespace", "tree": {"sha": "6dbbc96c8344edb54463544953fde7b681c7100e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6dbbc96c8344edb54463544953fde7b681c7100e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e99fc20f9595590597e09795de5bfa3d361517a9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e99fc20f9595590597e09795de5bfa3d361517a9", "html_url": "https://github.com/rust-lang/rust/commit/e99fc20f9595590597e09795de5bfa3d361517a9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e99fc20f9595590597e09795de5bfa3d361517a9/comments", "author": {"login": "mneumann", "id": 34112, "node_id": "MDQ6VXNlcjM0MTEy", "avatar_url": "https://avatars.githubusercontent.com/u/34112?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mneumann", "html_url": "https://github.com/mneumann", "followers_url": "https://api.github.com/users/mneumann/followers", "following_url": "https://api.github.com/users/mneumann/following{/other_user}", "gists_url": "https://api.github.com/users/mneumann/gists{/gist_id}", "starred_url": "https://api.github.com/users/mneumann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mneumann/subscriptions", "organizations_url": "https://api.github.com/users/mneumann/orgs", "repos_url": "https://api.github.com/users/mneumann/repos", "events_url": "https://api.github.com/users/mneumann/events{/privacy}", "received_events_url": "https://api.github.com/users/mneumann/received_events", "type": "User", "site_admin": false}, "committer": {"login": "mneumann", "id": 34112, "node_id": "MDQ6VXNlcjM0MTEy", "avatar_url": "https://avatars.githubusercontent.com/u/34112?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mneumann", "html_url": "https://github.com/mneumann", "followers_url": "https://api.github.com/users/mneumann/followers", "following_url": "https://api.github.com/users/mneumann/following{/other_user}", "gists_url": "https://api.github.com/users/mneumann/gists{/gist_id}", "starred_url": "https://api.github.com/users/mneumann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mneumann/subscriptions", "organizations_url": "https://api.github.com/users/mneumann/orgs", "repos_url": "https://api.github.com/users/mneumann/repos", "events_url": "https://api.github.com/users/mneumann/events{/privacy}", "received_events_url": "https://api.github.com/users/mneumann/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2e2f53fad210543be39f6997991abcd403533676", "url": "https://api.github.com/repos/rust-lang/rust/commits/2e2f53fad210543be39f6997991abcd403533676", "html_url": "https://github.com/rust-lang/rust/commit/2e2f53fad210543be39f6997991abcd403533676"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "80493ebb4a936907563cf443e9689a7b68cc1997", "filename": "src/libstd/rt/backtrace.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e99fc20f9595590597e09795de5bfa3d361517a9/src%2Flibstd%2Frt%2Fbacktrace.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e99fc20f9595590597e09795de5bfa3d361517a9/src%2Flibstd%2Frt%2Fbacktrace.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Frt%2Fbacktrace.rs?ref=e99fc20f9595590597e09795de5bfa3d361517a9", "patch": "@@ -465,13 +465,13 @@ mod imp {\n         // be in \"permanent memory\", so we copy it to a static and then use the\n         // static as the pointer.\n         //\n-        // FIXME: We also call self_exe_name() on DragonFly BSD. I haven't \n+        // FIXME: We also call self_exe_name() on DragonFly BSD. I haven't\n         //        tested if this is required or not.\n         unsafe fn init_state() -> *mut backtrace_state {\n             static mut STATE: *mut backtrace_state = 0 as *mut backtrace_state;\n             static mut LAST_FILENAME: [libc::c_char, ..256] = [0, ..256];\n             if !STATE.is_null() { return STATE }\n-            let selfname = if cfg!(target_os = \"freebsd\") || \n+            let selfname = if cfg!(target_os = \"freebsd\") ||\n                               cfg!(target_os = \"dragonfly\") {\n                 os::self_exe_name()\n             } else {"}, {"sha": "c50a5661973f5ed69f109388032e13ab01a6f385", "filename": "src/libsyntax/abi.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e99fc20f9595590597e09795de5bfa3d361517a9/src%2Flibsyntax%2Fabi.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e99fc20f9595590597e09795de5bfa3d361517a9/src%2Flibsyntax%2Fabi.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fabi.rs?ref=e99fc20f9595590597e09795de5bfa3d361517a9", "patch": "@@ -11,7 +11,7 @@\n use std::fmt;\n \n #[deriving(PartialEq)]\n-pub enum Os { OsWin32, OsMacos, OsLinux, OsAndroid, OsFreebsd, OsiOS, \n+pub enum Os { OsWin32, OsMacos, OsLinux, OsAndroid, OsFreebsd, OsiOS,\n               OsDragonfly }\n \n #[deriving(PartialEq, Eq, Hash, Encodable, Decodable, Clone)]"}]}