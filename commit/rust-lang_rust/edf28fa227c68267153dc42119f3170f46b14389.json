{"sha": "edf28fa227c68267153dc42119f3170f46b14389", "node_id": "MDY6Q29tbWl0NzI0NzEyOmVkZjI4ZmEyMjdjNjgyNjcxNTNkYzQyMTE5ZjMxNzBmNDZiMTQzODk=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2018-10-08T08:22:26Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2018-10-09T18:13:46Z"}, "message": "only allow offset-by-0 on integer pointers", "tree": {"sha": "2689e814db9e7a2ff4223e7fbb1f793ca576ab8b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2689e814db9e7a2ff4223e7fbb1f793ca576ab8b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/edf28fa227c68267153dc42119f3170f46b14389", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/edf28fa227c68267153dc42119f3170f46b14389", "html_url": "https://github.com/rust-lang/rust/commit/edf28fa227c68267153dc42119f3170f46b14389", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/edf28fa227c68267153dc42119f3170f46b14389/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e058baf1d380d5c0c07ed1597a7366d3f7d32d78", "url": "https://api.github.com/repos/rust-lang/rust/commits/e058baf1d380d5c0c07ed1597a7366d3f7d32d78", "html_url": "https://github.com/rust-lang/rust/commit/e058baf1d380d5c0c07ed1597a7366d3f7d32d78"}], "stats": {"total": 26, "additions": 15, "deletions": 11}, "files": [{"sha": "6fed43914e16d94a9c4b4e572a75b59ab9be0507", "filename": "src/operator.rs", "status": "modified", "additions": 7, "deletions": 11, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/edf28fa227c68267153dc42119f3170f46b14389/src%2Foperator.rs", "raw_url": "https://github.com/rust-lang/rust/raw/edf28fa227c68267153dc42119f3170f46b14389/src%2Foperator.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Foperator.rs?ref=edf28fa227c68267153dc42119f3170f46b14389", "patch": "@@ -281,14 +281,6 @@ impl<'a, 'mir, 'tcx> EvalContextExt<'tcx> for EvalContext<'a, 'mir, 'tcx, super:\n         pointee_ty: Ty<'tcx>,\n         offset: i64,\n     ) -> EvalResult<'tcx, Scalar> {\n-        if ptr.is_null() {\n-            // NULL pointers must only be offset by 0\n-            return if offset == 0 {\n-                Ok(ptr)\n-            } else {\n-                err!(InvalidNullPointerUsage)\n-            };\n-        }\n         // FIXME: assuming here that type size is < i64::max_value()\n         let pointee_size = self.layout_of(pointee_ty)?.size.bytes() as i64;\n         let offset = offset.checked_mul(pointee_size).ok_or_else(|| EvalErrorKind::Overflow(mir::BinOp::Mul))?;\n@@ -301,9 +293,13 @@ impl<'a, 'mir, 'tcx> EvalContextExt<'tcx> for EvalContext<'a, 'mir, 'tcx, super:\n             self.memory.check_bounds(ptr, false)?;\n             Ok(Scalar::Ptr(ptr))\n         } else {\n-            // An integer pointer. They can move around freely, as long as they do not overflow\n-            // (which ptr_signed_offset checks).\n-            ptr.ptr_signed_offset(offset, self)\n+            // An integer pointer. They can only be offset by 0, and we pretend there\n+            // is a little zero-sized allocation here.\n+            if offset == 0 {\n+                Ok(ptr)\n+            } else {\n+                err!(InvalidPointerMath)\n+            }\n         }\n     }\n }"}, {"sha": "fa4efa323654ae9e4b430a136ebe631595ba7462", "filename": "tests/compile-fail/ptr_offset_int_plus_int.rs", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/edf28fa227c68267153dc42119f3170f46b14389/tests%2Fcompile-fail%2Fptr_offset_int_plus_int.rs", "raw_url": "https://github.com/rust-lang/rust/raw/edf28fa227c68267153dc42119f3170f46b14389/tests%2Fcompile-fail%2Fptr_offset_int_plus_int.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail%2Fptr_offset_int_plus_int.rs?ref=edf28fa227c68267153dc42119f3170f46b14389", "patch": "@@ -0,0 +1,8 @@\n+// error-pattern: invalid arithmetic on pointers\n+\n+fn main() {\n+    // Can't offset an integer pointer by non-zero offset.\n+    unsafe {\n+        let _ = (1 as *mut u8).offset(1);\n+    }\n+}"}]}