{"sha": "f5d72ab69b997a62dc5c240de1a180b8a96daf71", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY1ZDcyYWI2OWI5OTdhNjJkYzVjMjQwZGUxYTE4MGI4YTk2ZGFmNzE=", "commit": {"author": {"name": "Mara Bos", "email": "m-ou.se@m-ou.se", "date": "2020-11-02T19:40:12Z"}, "committer": {"name": "Mara Bos", "email": "m-ou.se@m-ou.se", "date": "2021-04-22T12:24:30Z"}, "message": "Add better test for BinaryHeap::retain.", "tree": {"sha": "0ff587c8b6164e3c243237fb9dcf459df958d207", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0ff587c8b6164e3c243237fb9dcf459df958d207"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f5d72ab69b997a62dc5c240de1a180b8a96daf71", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f5d72ab69b997a62dc5c240de1a180b8a96daf71", "html_url": "https://github.com/rust-lang/rust/commit/f5d72ab69b997a62dc5c240de1a180b8a96daf71", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f5d72ab69b997a62dc5c240de1a180b8a96daf71/comments", "author": {"login": "m-ou-se", "id": 783247, "node_id": "MDQ6VXNlcjc4MzI0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/783247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-ou-se", "html_url": "https://github.com/m-ou-se", "followers_url": "https://api.github.com/users/m-ou-se/followers", "following_url": "https://api.github.com/users/m-ou-se/following{/other_user}", "gists_url": "https://api.github.com/users/m-ou-se/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-ou-se/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-ou-se/subscriptions", "organizations_url": "https://api.github.com/users/m-ou-se/orgs", "repos_url": "https://api.github.com/users/m-ou-se/repos", "events_url": "https://api.github.com/users/m-ou-se/events{/privacy}", "received_events_url": "https://api.github.com/users/m-ou-se/received_events", "type": "User", "site_admin": false}, "committer": {"login": "m-ou-se", "id": 783247, "node_id": "MDQ6VXNlcjc4MzI0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/783247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-ou-se", "html_url": "https://github.com/m-ou-se", "followers_url": "https://api.github.com/users/m-ou-se/followers", "following_url": "https://api.github.com/users/m-ou-se/following{/other_user}", "gists_url": "https://api.github.com/users/m-ou-se/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-ou-se/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-ou-se/subscriptions", "organizations_url": "https://api.github.com/users/m-ou-se/orgs", "repos_url": "https://api.github.com/users/m-ou-se/repos", "events_url": "https://api.github.com/users/m-ou-se/events{/privacy}", "received_events_url": "https://api.github.com/users/m-ou-se/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "62226eecb6a287b5e0ba360e54349cca7afbf0bc", "url": "https://api.github.com/repos/rust-lang/rust/commits/62226eecb6a287b5e0ba360e54349cca7afbf0bc", "html_url": "https://github.com/rust-lang/rust/commit/62226eecb6a287b5e0ba360e54349cca7afbf0bc"}], "stats": {"total": 19, "additions": 16, "deletions": 3}, "files": [{"sha": "a7913dcd28740bb88f343909828f47e078b0a71d", "filename": "library/alloc/tests/binary_heap.rs", "status": "modified", "additions": 16, "deletions": 3, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/f5d72ab69b997a62dc5c240de1a180b8a96daf71/library%2Falloc%2Ftests%2Fbinary_heap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f5d72ab69b997a62dc5c240de1a180b8a96daf71/library%2Falloc%2Ftests%2Fbinary_heap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Ftests%2Fbinary_heap.rs?ref=f5d72ab69b997a62dc5c240de1a180b8a96daf71", "patch": "@@ -386,10 +386,23 @@ fn assert_covariance() {\n \n #[test]\n fn test_retain() {\n-    let mut a = BinaryHeap::from(vec![-10, -5, 1, 2, 4, 13]);\n-    a.retain(|x| x % 2 == 0);\n+    let mut a = BinaryHeap::from(vec![100, 10, 50, 1, 2, 20, 30]);\n+    a.retain(|&x| x != 2);\n \n-    assert_eq!(a.into_sorted_vec(), [-10, 2, 4])\n+    // Check that 20 moved into 10's place.\n+    assert_eq!(a.clone().into_vec(), [100, 20, 50, 1, 10, 30]);\n+\n+    a.retain(|_| true);\n+\n+    assert_eq!(a.clone().into_vec(), [100, 20, 50, 1, 10, 30]);\n+\n+    a.retain(|&x| x < 50);\n+\n+    assert_eq!(a.clone().into_vec(), [30, 20, 10, 1]);\n+\n+    a.retain(|_| false);\n+\n+    assert!(a.is_empty());\n }\n \n // old binaryheap failed this test"}]}