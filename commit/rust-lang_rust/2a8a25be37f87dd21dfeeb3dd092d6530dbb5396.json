{"sha": "2a8a25be37f87dd21dfeeb3dd092d6530dbb5396", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJhOGEyNWJlMzdmODdkZDIxZGZlZWIzZGQwOTJkNjUzMGRiYjUzOTY=", "commit": {"author": {"name": "varkor", "email": "github@varkor.com", "date": "2019-02-05T21:51:23Z"}, "committer": {"name": "varkor", "email": "github@varkor.com", "date": "2019-02-11T11:17:35Z"}, "message": "Display \"Deprecation planned\" in rustdoc for future rustc deprecations", "tree": {"sha": "85b46116803fdb881360fd72d8656d199263b82c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/85b46116803fdb881360fd72d8656d199263b82c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2a8a25be37f87dd21dfeeb3dd092d6530dbb5396", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2a8a25be37f87dd21dfeeb3dd092d6530dbb5396", "html_url": "https://github.com/rust-lang/rust/commit/2a8a25be37f87dd21dfeeb3dd092d6530dbb5396", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2a8a25be37f87dd21dfeeb3dd092d6530dbb5396/comments", "author": {"login": "varkor", "id": 3943692, "node_id": "MDQ6VXNlcjM5NDM2OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3943692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/varkor", "html_url": "https://github.com/varkor", "followers_url": "https://api.github.com/users/varkor/followers", "following_url": "https://api.github.com/users/varkor/following{/other_user}", "gists_url": "https://api.github.com/users/varkor/gists{/gist_id}", "starred_url": "https://api.github.com/users/varkor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/varkor/subscriptions", "organizations_url": "https://api.github.com/users/varkor/orgs", "repos_url": "https://api.github.com/users/varkor/repos", "events_url": "https://api.github.com/users/varkor/events{/privacy}", "received_events_url": "https://api.github.com/users/varkor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "varkor", "id": 3943692, "node_id": "MDQ6VXNlcjM5NDM2OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3943692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/varkor", "html_url": "https://github.com/varkor", "followers_url": "https://api.github.com/users/varkor/followers", "following_url": "https://api.github.com/users/varkor/following{/other_user}", "gists_url": "https://api.github.com/users/varkor/gists{/gist_id}", "starred_url": "https://api.github.com/users/varkor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/varkor/subscriptions", "organizations_url": "https://api.github.com/users/varkor/orgs", "repos_url": "https://api.github.com/users/varkor/repos", "events_url": "https://api.github.com/users/varkor/events{/privacy}", "received_events_url": "https://api.github.com/users/varkor/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "87cd09b94c00a07f2bd19366c71ac0c12579ee0e", "url": "https://api.github.com/repos/rust-lang/rust/commits/87cd09b94c00a07f2bd19366c71ac0c12579ee0e", "html_url": "https://github.com/rust-lang/rust/commit/87cd09b94c00a07f2bd19366c71ac0c12579ee0e"}], "stats": {"total": 31, "additions": 22, "deletions": 9}, "files": [{"sha": "00ee24e59c223ba9bf67ddd92c3b7e7c2f0ab7b3", "filename": "src/librustdoc/html/render.rs", "status": "modified", "additions": 22, "deletions": 9, "changes": 31, "blob_url": "https://github.com/rust-lang/rust/blob/2a8a25be37f87dd21dfeeb3dd092d6530dbb5396/src%2Flibrustdoc%2Fhtml%2Frender.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2a8a25be37f87dd21dfeeb3dd092d6530dbb5396/src%2Flibrustdoc%2Fhtml%2Frender.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender.rs?ref=2a8a25be37f87dd21dfeeb3dd092d6530dbb5396", "patch": "@@ -2817,7 +2817,17 @@ fn stability_tags(item: &clean::Item) -> String {\n \n     // The trailing space after each tag is to space it properly against the rest of the docs.\n     if item.deprecation().is_some() {\n-        tags += &tag_html(\"deprecated\", \"Deprecated\");\n+        let mut message = \"Deprecated\";\n+        if let Some(ref stab) = item.stability {\n+            if let Some(ref depr) = stab.deprecation {\n+                if let Some(ref since) = depr.since {\n+                    if !stability::deprecation_in_effect(&since) {\n+                        message = \"Deprecation planned\";\n+                    }\n+                }\n+            }\n+        }\n+        tags += &tag_html(\"deprecated\", message);\n     }\n \n     if let Some(stab) = item\n@@ -2848,15 +2858,18 @@ fn short_stability(item: &clean::Item, cx: &Context) -> Vec<String> {\n     if let Some(Deprecation { note, .. }) = &item.deprecation() {\n         // We display deprecation messages for #[deprecated] and #[rustc_deprecated]\n         // but only display the future-deprecation messages for #[rustc_deprecated].\n-        let mut message = if let Some(since) = item.stability.deprecation.since {\n-            if stability::deprecation_in_effect(since) {\n-                format!(\"Deprecated since {}\", Escape(since))\n-            } else {\n-                format!(\"Deprecating in {}\", Escape(since))\n+        let mut message = String::from(\"Deprecated\");\n+        if let Some(ref stab) = item.stability {\n+            if let Some(ref depr) = stab.deprecation {\n+                if let Some(ref since) = depr.since {\n+                    if stability::deprecation_in_effect(&since) {\n+                        message = format!(\"Deprecated since {}\", Escape(&since));\n+                    } else {\n+                        message = format!(\"Deprecating in {}\", Escape(&since));\n+                    }\n+                }\n             }\n-        } else {\n-            String::from(\"Deprecated\")\n-        };\n+        }\n \n         if let Some(note) = note {\n             let mut ids = cx.id_map.borrow_mut();"}]}