{"sha": "803e35abf7c2949fe04d1c403d69605f570d5637", "node_id": "C_kwDOAAsO6NoAKDgwM2UzNWFiZjdjMjk0OWZlMDRkMWM0MDNkNjk2MDVmNTcwZDU2Mzc", "commit": {"author": {"name": "Guillaume Gomez", "email": "guillaume.gomez@huawei.com", "date": "2022-08-31T15:05:38Z"}, "committer": {"name": "Guillaume Gomez", "email": "guillaume.gomez@huawei.com", "date": "2022-08-31T16:13:39Z"}, "message": "Remove unneeded extra whitespace before where clause", "tree": {"sha": "b13003d314f3200e9c84e7394e55df14a20f809d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b13003d314f3200e9c84e7394e55df14a20f809d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/803e35abf7c2949fe04d1c403d69605f570d5637", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/803e35abf7c2949fe04d1c403d69605f570d5637", "html_url": "https://github.com/rust-lang/rust/commit/803e35abf7c2949fe04d1c403d69605f570d5637", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/803e35abf7c2949fe04d1c403d69605f570d5637/comments", "author": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "committer": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7a42ca942cda0d197a63373127e7e373305957a0", "url": "https://api.github.com/repos/rust-lang/rust/commits/7a42ca942cda0d197a63373127e7e373305957a0", "html_url": "https://github.com/rust-lang/rust/commit/7a42ca942cda0d197a63373127e7e373305957a0"}], "stats": {"total": 25, "additions": 10, "deletions": 15}, "files": [{"sha": "05d10f8137fe872afe970a661e1b3f38cfdb7337", "filename": "src/librustdoc/html/format.rs", "status": "modified", "additions": 4, "deletions": 9, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/803e35abf7c2949fe04d1c403d69605f570d5637/src%2Flibrustdoc%2Fhtml%2Fformat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/803e35abf7c2949fe04d1c403d69605f570d5637/src%2Flibrustdoc%2Fhtml%2Fformat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fformat.rs?ref=803e35abf7c2949fe04d1c403d69605f570d5637", "patch": "@@ -349,8 +349,7 @@ pub(crate) fn print_where_clause<'a, 'tcx: 'a>(\n         let where_preds = comma_sep(where_predicates, false);\n         let clause = if f.alternate() {\n             if ending == Ending::Newline {\n-                // add a space so stripping <br> tags and breaking spaces still renders properly\n-                format!(\" where{where_preds}, \")\n+                format!(\" where{where_preds},\")\n             } else {\n                 format!(\" where{where_preds}\")\n             }\n@@ -364,20 +363,16 @@ pub(crate) fn print_where_clause<'a, 'tcx: 'a>(\n \n             if ending == Ending::Newline {\n                 let mut clause = \"&nbsp;\".repeat(indent.saturating_sub(1));\n-                // add a space so stripping <br> tags and breaking spaces still renders properly\n-                write!(\n-                    clause,\n-                    \" <span class=\\\"where fmt-newline\\\">where{where_preds},&nbsp;</span>\"\n-                )?;\n+                write!(clause, \"<span class=\\\"where fmt-newline\\\">where{where_preds},</span>\")?;\n                 clause\n             } else {\n                 // insert a <br> tag after a single space but before multiple spaces at the start\n                 if indent == 0 {\n-                    format!(\" <br><span class=\\\"where\\\">where{where_preds}</span>\")\n+                    format!(\"<br><span class=\\\"where\\\">where{where_preds}</span>\")\n                 } else {\n                     let mut clause = br_with_padding;\n                     clause.truncate(clause.len() - 5 * \"&nbsp;\".len());\n-                    write!(clause, \" <span class=\\\"where\\\">where{where_preds}</span>\")?;\n+                    write!(clause, \"<span class=\\\"where\\\">where{where_preds}</span>\")?;\n                     clause\n                 }\n             }"}, {"sha": "bff12e6fee9bddcf16abe3338d6997c9ee9c0195", "filename": "src/librustdoc/html/render/mod.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/803e35abf7c2949fe04d1c403d69605f570d5637/src%2Flibrustdoc%2Fhtml%2Frender%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/803e35abf7c2949fe04d1c403d69605f570d5637/src%2Flibrustdoc%2Fhtml%2Frender%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender%2Fmod.rs?ref=803e35abf7c2949fe04d1c403d69605f570d5637", "patch": "@@ -1739,8 +1739,8 @@ pub(crate) fn render_impl_summary(\n     // in documentation pages for trait with automatic implementations like \"Send\" and \"Sync\".\n     aliases: &[String],\n ) {\n-    let id =\n-        cx.derive_id(get_id_for_impl(&i.inner_impl().for_, i.inner_impl().trait_.as_ref(), cx));\n+    let inner_impl = i.inner_impl();\n+    let id = cx.derive_id(get_id_for_impl(&inner_impl.for_, inner_impl.trait_.as_ref(), cx));\n     let aliases = if aliases.is_empty() {\n         String::new()\n     } else {\n@@ -1752,9 +1752,9 @@ pub(crate) fn render_impl_summary(\n     write!(w, \"<h3 class=\\\"code-header in-band\\\">\");\n \n     if let Some(use_absolute) = use_absolute {\n-        write!(w, \"{}\", i.inner_impl().print(use_absolute, cx));\n+        write!(w, \"{}\", inner_impl.print(use_absolute, cx));\n         if show_def_docs {\n-            for it in &i.inner_impl().items {\n+            for it in &inner_impl.items {\n                 if let clean::AssocTypeItem(ref tydef, ref _bounds) = *it.kind {\n                     w.write_str(\"<span class=\\\"where fmt-newline\\\">  \");\n                     assoc_type(\n@@ -1772,11 +1772,11 @@ pub(crate) fn render_impl_summary(\n             }\n         }\n     } else {\n-        write!(w, \"{}\", i.inner_impl().print(false, cx));\n+        write!(w, \"{}\", inner_impl.print(false, cx));\n     }\n     write!(w, \"</h3>\");\n \n-    let is_trait = i.inner_impl().trait_.is_some();\n+    let is_trait = inner_impl.trait_.is_some();\n     if is_trait {\n         if let Some(portability) = portability(&i.impl_item, Some(parent)) {\n             write!(w, \"<span class=\\\"item-info\\\">{}</span>\", portability);"}]}