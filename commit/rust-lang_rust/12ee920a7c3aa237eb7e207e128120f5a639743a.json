{"sha": "12ee920a7c3aa237eb7e207e128120f5a639743a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjEyZWU5MjBhN2MzYWEyMzdlYjdlMjA3ZTEyODEyMGY1YTYzOTc0M2E=", "commit": {"author": {"name": "Camelid", "email": "camelidcamel@gmail.com", "date": "2021-04-13T02:42:26Z"}, "committer": {"name": "Camelid", "email": "camelidcamel@gmail.com", "date": "2021-05-11T16:55:31Z"}, "message": "Only show type layout info if `--show-type-layout` is passed", "tree": {"sha": "86261e367548e095d74a6f573844480bfa5101bf", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/86261e367548e095d74a6f573844480bfa5101bf"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/12ee920a7c3aa237eb7e207e128120f5a639743a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/12ee920a7c3aa237eb7e207e128120f5a639743a", "html_url": "https://github.com/rust-lang/rust/commit/12ee920a7c3aa237eb7e207e128120f5a639743a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/12ee920a7c3aa237eb7e207e128120f5a639743a/comments", "author": {"login": "camelid", "id": 37223377, "node_id": "MDQ6VXNlcjM3MjIzMzc3", "avatar_url": "https://avatars.githubusercontent.com/u/37223377?v=4", "gravatar_id": "", "url": "https://api.github.com/users/camelid", "html_url": "https://github.com/camelid", "followers_url": "https://api.github.com/users/camelid/followers", "following_url": "https://api.github.com/users/camelid/following{/other_user}", "gists_url": "https://api.github.com/users/camelid/gists{/gist_id}", "starred_url": "https://api.github.com/users/camelid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/camelid/subscriptions", "organizations_url": "https://api.github.com/users/camelid/orgs", "repos_url": "https://api.github.com/users/camelid/repos", "events_url": "https://api.github.com/users/camelid/events{/privacy}", "received_events_url": "https://api.github.com/users/camelid/received_events", "type": "User", "site_admin": false}, "committer": {"login": "camelid", "id": 37223377, "node_id": "MDQ6VXNlcjM3MjIzMzc3", "avatar_url": "https://avatars.githubusercontent.com/u/37223377?v=4", "gravatar_id": "", "url": "https://api.github.com/users/camelid", "html_url": "https://github.com/camelid", "followers_url": "https://api.github.com/users/camelid/followers", "following_url": "https://api.github.com/users/camelid/following{/other_user}", "gists_url": "https://api.github.com/users/camelid/gists{/gist_id}", "starred_url": "https://api.github.com/users/camelid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/camelid/subscriptions", "organizations_url": "https://api.github.com/users/camelid/orgs", "repos_url": "https://api.github.com/users/camelid/repos", "events_url": "https://api.github.com/users/camelid/events{/privacy}", "received_events_url": "https://api.github.com/users/camelid/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "48da66f28f078c0dc31068a30977e9079c876d90", "url": "https://api.github.com/repos/rust-lang/rust/commits/48da66f28f078c0dc31068a30977e9079c876d90", "html_url": "https://github.com/rust-lang/rust/commit/48da66f28f078c0dc31068a30977e9079c876d90"}], "stats": {"total": 21, "additions": 21, "deletions": 0}, "files": [{"sha": "b75e98ae16c16f2718d49d7313bc48865ecff5b3", "filename": "src/librustdoc/config.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/12ee920a7c3aa237eb7e207e128120f5a639743a/src%2Flibrustdoc%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/12ee920a7c3aa237eb7e207e128120f5a639743a/src%2Flibrustdoc%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fconfig.rs?ref=12ee920a7c3aa237eb7e207e128120f5a639743a", "patch": "@@ -267,6 +267,8 @@ crate struct RenderOptions {\n     crate document_hidden: bool,\n     /// If `true`, generate a JSON file in the crate folder instead of HTML redirection files.\n     crate generate_redirect_map: bool,\n+    /// Show the memory layout of types in the docs.\n+    crate show_type_layout: bool,\n     crate unstable_features: rustc_feature::UnstableFeatures,\n     crate emit: Vec<EmitType>,\n }\n@@ -636,6 +638,7 @@ impl Options {\n         let document_hidden = matches.opt_present(\"document-hidden-items\");\n         let run_check = matches.opt_present(\"check\");\n         let generate_redirect_map = matches.opt_present(\"generate-redirect-map\");\n+        let show_type_layout = matches.opt_present(\"show-type-layout\");\n \n         let (lint_opts, describe_lints, lint_cap) = get_cmd_lint_options(matches, error_format);\n \n@@ -695,6 +698,7 @@ impl Options {\n                 document_private,\n                 document_hidden,\n                 generate_redirect_map,\n+                show_type_layout,\n                 unstable_features: rustc_feature::UnstableFeatures::from_environment(\n                     crate_name.as_deref(),\n                 ),"}, {"sha": "666d9dfc3e9e4d27e9acd0e5731d9fe25a6093ff", "filename": "src/librustdoc/html/render/context.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/12ee920a7c3aa237eb7e207e128120f5a639743a/src%2Flibrustdoc%2Fhtml%2Frender%2Fcontext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/12ee920a7c3aa237eb7e207e128120f5a639743a/src%2Flibrustdoc%2Fhtml%2Frender%2Fcontext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender%2Fcontext.rs?ref=12ee920a7c3aa237eb7e207e128120f5a639743a", "patch": "@@ -91,6 +91,8 @@ crate struct SharedContext<'tcx> {\n     crate include_sources: bool,\n     /// The local file sources we've emitted and their respective url-paths.\n     crate local_sources: FxHashMap<PathBuf, String>,\n+    /// Show the memory layout of types in the docs.\n+    pub(super) show_type_layout: bool,\n     /// Whether the collapsed pass ran\n     collapsed: bool,\n     /// The base-URL of the issue tracker for when an item has been tagged with\n@@ -373,6 +375,7 @@ impl<'tcx> FormatRenderer<'tcx> for Context<'tcx> {\n             generate_search_filter,\n             unstable_features,\n             generate_redirect_map,\n+            show_type_layout,\n             ..\n         } = options;\n \n@@ -446,6 +449,7 @@ impl<'tcx> FormatRenderer<'tcx> for Context<'tcx> {\n             all: RefCell::new(AllTypes::new()),\n             errors: receiver,\n             redirections: if generate_redirect_map { Some(Default::default()) } else { None },\n+            show_type_layout,\n         };\n \n         // Add the default themes to the `Vec` of stylepaths"}, {"sha": "2de1a2226f5c28e7e228ecbc993da12f0e5b1760", "filename": "src/librustdoc/html/render/print_item.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/12ee920a7c3aa237eb7e207e128120f5a639743a/src%2Flibrustdoc%2Fhtml%2Frender%2Fprint_item.rs", "raw_url": "https://github.com/rust-lang/rust/raw/12ee920a7c3aa237eb7e207e128120f5a639743a/src%2Flibrustdoc%2Fhtml%2Frender%2Fprint_item.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender%2Fprint_item.rs?ref=12ee920a7c3aa237eb7e207e128120f5a639743a", "patch": "@@ -1536,6 +1536,10 @@ fn document_non_exhaustive(w: &mut Buffer, item: &clean::Item) {\n }\n \n fn document_ty_layout(w: &mut Buffer, cx: &Context<'_>, ty_def_id: DefId) {\n+    if !cx.shared.show_type_layout {\n+        return;\n+    }\n+\n     let param_env = cx.tcx().param_env(ty_def_id);\n     let ty = cx.tcx().type_of(ty_def_id);\n     match cx.tcx().layout_of(param_env.and(ty)) {"}, {"sha": "5ede3780e87ae8cbe50dec1bab5eaa14786d98e6", "filename": "src/librustdoc/lib.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/12ee920a7c3aa237eb7e207e128120f5a639743a/src%2Flibrustdoc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/12ee920a7c3aa237eb7e207e128120f5a639743a/src%2Flibrustdoc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Flib.rs?ref=12ee920a7c3aa237eb7e207e128120f5a639743a", "patch": "@@ -594,6 +594,9 @@ fn opts() -> Vec<RustcOptGroup> {\n             )\n         }),\n         unstable(\"no-run\", |o| o.optflag(\"\", \"no-run\", \"Compile doctests without running them\")),\n+        unstable(\"show-type-layout\", |o| {\n+            o.optflag(\"\", \"show-type-layout\", \"Include the memory layout of types in the docs\")\n+        }),\n     ]\n }\n "}, {"sha": "a01fbd229508b1331627fb9f896f20e6ae9437b0", "filename": "src/test/rustdoc/type-layout-flag-required.rs", "status": "added", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/12ee920a7c3aa237eb7e207e128120f5a639743a/src%2Ftest%2Frustdoc%2Ftype-layout-flag-required.rs", "raw_url": "https://github.com/rust-lang/rust/raw/12ee920a7c3aa237eb7e207e128120f5a639743a/src%2Ftest%2Frustdoc%2Ftype-layout-flag-required.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Ftype-layout-flag-required.rs?ref=12ee920a7c3aa237eb7e207e128120f5a639743a", "patch": "@@ -0,0 +1,4 @@\n+// Tests that `--show-type-layout` is required in order to show layout info.\n+\n+// @!has type_layout_flag_required/struct.Foo.html 'Size: '\n+pub struct Foo(usize);"}, {"sha": "9fd8f92aeb9760a585e44eea8712d82e1365099b", "filename": "src/test/rustdoc/type-layout.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/12ee920a7c3aa237eb7e207e128120f5a639743a/src%2Ftest%2Frustdoc%2Ftype-layout.rs", "raw_url": "https://github.com/rust-lang/rust/raw/12ee920a7c3aa237eb7e207e128120f5a639743a/src%2Ftest%2Frustdoc%2Ftype-layout.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Ftype-layout.rs?ref=12ee920a7c3aa237eb7e207e128120f5a639743a", "patch": "@@ -1,3 +1,5 @@\n+// compile-flags: --show-type-layout -Z unstable-options\n+\n // @has type_layout/struct.Foo.html 'Size: '\n // @has - ' bytes'\n pub struct Foo {"}]}