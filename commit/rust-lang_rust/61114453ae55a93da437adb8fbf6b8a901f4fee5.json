{"sha": "61114453ae55a93da437adb8fbf6b8a901f4fee5", "node_id": "MDY6Q29tbWl0NzI0NzEyOjYxMTE0NDUzYWU1NWE5M2RhNDM3YWRiOGZiZjZiOGE5MDFmNGZlZTU=", "commit": {"author": {"name": "LeSeulArtichaut", "email": "leseulartichaut@gmail.com", "date": "2021-02-19T21:40:28Z"}, "committer": {"name": "LeSeulArtichaut", "email": "leseulartichaut@gmail.com", "date": "2021-03-03T14:11:26Z"}, "message": "Add `-Z unpretty` flags for the AST", "tree": {"sha": "12460eae888c7177918e36bc8575cf5e664eea44", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/12460eae888c7177918e36bc8575cf5e664eea44"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/61114453ae55a93da437adb8fbf6b8a901f4fee5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/61114453ae55a93da437adb8fbf6b8a901f4fee5", "html_url": "https://github.com/rust-lang/rust/commit/61114453ae55a93da437adb8fbf6b8a901f4fee5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/61114453ae55a93da437adb8fbf6b8a901f4fee5/comments", "author": {"login": "LeSeulArtichaut", "id": 38361244, "node_id": "MDQ6VXNlcjM4MzYxMjQ0", "avatar_url": "https://avatars.githubusercontent.com/u/38361244?v=4", "gravatar_id": "", "url": "https://api.github.com/users/LeSeulArtichaut", "html_url": "https://github.com/LeSeulArtichaut", "followers_url": "https://api.github.com/users/LeSeulArtichaut/followers", "following_url": "https://api.github.com/users/LeSeulArtichaut/following{/other_user}", "gists_url": "https://api.github.com/users/LeSeulArtichaut/gists{/gist_id}", "starred_url": "https://api.github.com/users/LeSeulArtichaut/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/LeSeulArtichaut/subscriptions", "organizations_url": "https://api.github.com/users/LeSeulArtichaut/orgs", "repos_url": "https://api.github.com/users/LeSeulArtichaut/repos", "events_url": "https://api.github.com/users/LeSeulArtichaut/events{/privacy}", "received_events_url": "https://api.github.com/users/LeSeulArtichaut/received_events", "type": "User", "site_admin": false}, "committer": {"login": "LeSeulArtichaut", "id": 38361244, "node_id": "MDQ6VXNlcjM4MzYxMjQ0", "avatar_url": "https://avatars.githubusercontent.com/u/38361244?v=4", "gravatar_id": "", "url": "https://api.github.com/users/LeSeulArtichaut", "html_url": "https://github.com/LeSeulArtichaut", "followers_url": "https://api.github.com/users/LeSeulArtichaut/followers", "following_url": "https://api.github.com/users/LeSeulArtichaut/following{/other_user}", "gists_url": "https://api.github.com/users/LeSeulArtichaut/gists{/gist_id}", "starred_url": "https://api.github.com/users/LeSeulArtichaut/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/LeSeulArtichaut/subscriptions", "organizations_url": "https://api.github.com/users/LeSeulArtichaut/orgs", "repos_url": "https://api.github.com/users/LeSeulArtichaut/repos", "events_url": "https://api.github.com/users/LeSeulArtichaut/events{/privacy}", "received_events_url": "https://api.github.com/users/LeSeulArtichaut/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "939b14334dfec68d85b01b62c1be0172cee03339", "url": "https://api.github.com/repos/rust-lang/rust/commits/939b14334dfec68d85b01b62c1be0172cee03339", "html_url": "https://github.com/rust-lang/rust/commit/939b14334dfec68d85b01b62c1be0172cee03339"}], "stats": {"total": 68, "additions": 46, "deletions": 22}, "files": [{"sha": "38c493a920d26f0bee16a00d28f7c09b7d14154b", "filename": "compiler/rustc_driver/src/pretty.rs", "status": "modified", "additions": 29, "deletions": 19, "changes": 48, "blob_url": "https://github.com/rust-lang/rust/blob/61114453ae55a93da437adb8fbf6b8a901f4fee5/compiler%2Frustc_driver%2Fsrc%2Fpretty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/61114453ae55a93da437adb8fbf6b8a901f4fee5/compiler%2Frustc_driver%2Fsrc%2Fpretty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_driver%2Fsrc%2Fpretty.rs?ref=61114453ae55a93da437adb8fbf6b8a901f4fee5", "patch": "@@ -9,7 +9,7 @@ use rustc_hir_pretty as pprust_hir;\n use rustc_middle::hir::map as hir_map;\n use rustc_middle::ty::{self, TyCtxt};\n use rustc_mir::util::{write_mir_graphviz, write_mir_pretty};\n-use rustc_session::config::{Input, PpHirMode, PpMode, PpSourceMode};\n+use rustc_session::config::{Input, PpAstTreeMode, PpHirMode, PpMode, PpSourceMode};\n use rustc_session::Session;\n use rustc_span::symbol::Ident;\n use rustc_span::FileName;\n@@ -391,24 +391,29 @@ pub fn print_after_parsing(\n ) {\n     let (src, src_name) = get_source(input, sess);\n \n-    let out = if let Source(s) = ppm {\n-        // Silently ignores an identified node.\n-        call_with_pp_support(&s, sess, None, move |annotation| {\n-            debug!(\"pretty printing source code {:?}\", s);\n-            let sess = annotation.sess();\n-            let parse = &sess.parse_sess;\n-            pprust::print_crate(\n-                sess.source_map(),\n-                krate,\n-                src_name,\n-                src,\n-                annotation.pp_ann(),\n-                false,\n-                parse.edition,\n-            )\n-        })\n-    } else {\n-        unreachable!()\n+    let out = match ppm {\n+        Source(s) => {\n+            // Silently ignores an identified node.\n+            call_with_pp_support(&s, sess, None, move |annotation| {\n+                debug!(\"pretty printing source code {:?}\", s);\n+                let sess = annotation.sess();\n+                let parse = &sess.parse_sess;\n+                pprust::print_crate(\n+                    sess.source_map(),\n+                    krate,\n+                    src_name,\n+                    src,\n+                    annotation.pp_ann(),\n+                    false,\n+                    parse.edition,\n+                )\n+            })\n+        }\n+        AstTree(PpAstTreeMode::Normal) => {\n+            debug!(\"pretty printing AST tree\");\n+            format!(\"{:#?}\", krate)\n+        }\n+        _ => unreachable!(),\n     };\n \n     write_or_print(&out, ofile);\n@@ -447,6 +452,11 @@ pub fn print_after_hir_lowering<'tcx>(\n             })\n         }\n \n+        AstTree(PpAstTreeMode::Expanded) => {\n+            debug!(\"pretty-printing expanded AST\");\n+            format!(\"{:#?}\", krate)\n+        }\n+\n         Hir(s) => call_with_pp_support_hir(&s, tcx, move |annotation, krate| {\n             debug!(\"pretty printing HIR {:?}\", s);\n             let sess = annotation.sess();"}, {"sha": "77a9a2b227ca0c9b799247b04feca030ed93ad01", "filename": "compiler/rustc_session/src/config.rs", "status": "modified", "additions": 15, "deletions": 3, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/61114453ae55a93da437adb8fbf6b8a901f4fee5/compiler%2Frustc_session%2Fsrc%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/61114453ae55a93da437adb8fbf6b8a901f4fee5/compiler%2Frustc_session%2Fsrc%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_session%2Fsrc%2Fconfig.rs?ref=61114453ae55a93da437adb8fbf6b8a901f4fee5", "patch": "@@ -2066,6 +2066,8 @@ fn parse_pretty(\n             (\"expanded\", _) => Source(PpSourceMode::Expanded),\n             (\"expanded,identified\", _) => Source(PpSourceMode::ExpandedIdentified),\n             (\"expanded,hygiene\", _) => Source(PpSourceMode::ExpandedHygiene),\n+            (\"ast-tree\", true) => AstTree(PpAstTreeMode::Normal),\n+            (\"ast-tree,expanded\", true) => AstTree(PpAstTreeMode::Expanded),\n             (\"hir\", true) => Hir(PpHirMode::Normal),\n             (\"hir,identified\", true) => Hir(PpHirMode::Identified),\n             (\"hir,typed\", true) => Hir(PpHirMode::Typed),\n@@ -2080,8 +2082,8 @@ fn parse_pretty(\n                             \"argument to `unpretty` must be one of `normal`, \\\n                                         `expanded`, `identified`, `expanded,identified`, \\\n                                         `expanded,hygiene`, `everybody_loops`, \\\n-                                        `hir`, `hir,identified`, `hir,typed`, `hir-tree`, \\\n-                                        `mir` or `mir-cfg`; got {}\",\n+                                        `ast-tree`, `ast-tree,expanded`, `hir`, `hir,identified`, \\\n+                                        `hir,typed`, `hir-tree`, `mir` or `mir-cfg`; got {}\",\n                             name\n                         ),\n                     );\n@@ -2233,6 +2235,14 @@ pub enum PpSourceMode {\n     ExpandedHygiene,\n }\n \n+#[derive(Copy, Clone, PartialEq, Debug)]\n+pub enum PpAstTreeMode {\n+    /// `-Zunpretty=ast`\n+    Normal,\n+    /// `-Zunpretty=ast,expanded`\n+    Expanded,\n+}\n+\n #[derive(Copy, Clone, PartialEq, Debug)]\n pub enum PpHirMode {\n     /// `-Zunpretty=hir`\n@@ -2248,6 +2258,7 @@ pub enum PpMode {\n     /// Options that print the source code, i.e.\n     /// `--pretty` and `-Zunpretty=everybody_loops`\n     Source(PpSourceMode),\n+    AstTree(PpAstTreeMode),\n     /// Options that print the HIR, i.e. `-Zunpretty=hir`\n     Hir(PpHirMode),\n     /// `-Zunpretty=hir-tree`\n@@ -2263,9 +2274,10 @@ impl PpMode {\n         use PpMode::*;\n         use PpSourceMode::*;\n         match *self {\n-            Source(Normal | Identified) => false,\n+            Source(Normal | Identified) | AstTree(PpAstTreeMode::Normal) => false,\n \n             Source(Expanded | EveryBodyLoops | ExpandedIdentified | ExpandedHygiene)\n+            | AstTree(PpAstTreeMode::Expanded)\n             | Hir(_)\n             | HirTree\n             | Mir"}, {"sha": "6e7d39547a143e0758fc9fd3db519e718334fd13", "filename": "compiler/rustc_session/src/options.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/61114453ae55a93da437adb8fbf6b8a901f4fee5/compiler%2Frustc_session%2Fsrc%2Foptions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/61114453ae55a93da437adb8fbf6b8a901f4fee5/compiler%2Frustc_session%2Fsrc%2Foptions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_session%2Fsrc%2Foptions.rs?ref=61114453ae55a93da437adb8fbf6b8a901f4fee5", "patch": "@@ -1158,6 +1158,8 @@ options! {DebuggingOptions, DebuggingSetter, basic_debugging_options,\n         `expanded`, `expanded,identified`,\n         `expanded,hygiene` (with internal representations),\n         `everybody_loops` (all function bodies replaced with `loop {}`),\n+        `ast-tree` (raw AST before expansion),\n+        `ast-tree,expanded` (raw AST after expansion),\n         `hir` (the HIR), `hir,identified`,\n         `hir,typed` (HIR with types for each node),\n         `hir-tree` (dump the raw HIR),"}]}