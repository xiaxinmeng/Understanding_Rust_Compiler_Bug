{"sha": "519f92f2aa7f2ec6833c57460283784a5077f73e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjUxOWY5MmYyYWE3ZjJlYzY4MzNjNTc0NjAyODM3ODRhNTA3N2Y3M2U=", "commit": {"author": {"name": "kennytm", "email": "kennytm@gmail.com", "date": "2017-12-04T14:31:57Z"}, "committer": {"name": "kennytm", "email": "kennytm@gmail.com", "date": "2017-12-26T16:00:45Z"}, "message": "Upload the toolstate to the remote repository.", "tree": {"sha": "343e2e354a3c7b11e4ffe5ae2b202bc97996dfa6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/343e2e354a3c7b11e4ffe5ae2b202bc97996dfa6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/519f92f2aa7f2ec6833c57460283784a5077f73e", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEZ1R8CLMp8f2GxWoQ/vbIBR0OATwFAlpCci0ACgkQ/vbIBR0O\nATx9sg/+K6vSd0p6FMUUYn9YjRG80yw6eGHs+sQbyJFjZZT9m9vddimcQ9iQLjMS\noncCgkUHjlis8ZrHPvLWWGhi0GnccqFWe/Ih4ZP+sayqeIIPuEbZAjbA5TA5Ki78\nqaHUwd53Xu+bz3zjocqiZyg2n8Q0cpz66YTl3ikw1PtVtUJUt4PXzfXh9+XHVOD3\nD1QPknoLs4nRnwQ1j+pvlzaiZ8S4+44Ez3Okguxhzuu4hpybOyuucR+hD070oNqj\nMcmEGcTJZMUypF4Rm5YFAsSuqNQPy88l1mPQ5M+G9XDHAs6idgK4ZsQGsslgaUMJ\n6gsRgke5SpVDzJNNZ04Dpfzn+utPiVQ0PkAyt9DZE2sFJiAC6QaY0jzZiPO+72T2\nnUkHAMvTxAdbQPSZPXC36kL+OAq1ni2vfML/jVNfHfS8vxUMUdkeCHymV8PdYLo8\nocbXT3GV1dAPUTTpU8+ajQo/OBfPovOT6FgsOuwMfsG1sTJhqOpZy+Dorlb7i7Xl\n3/GOhkEXYPgD9gyGAu9quqbLYbx9VO9fqb3kqRnP+VCRW6EfvDKWVYrKkYIYMsQB\nUSvrTzflOwaHMApd3wXsRtK+dmJpkgXwgSp/AAndvTu7mgQTCgtXA/GYYlKiQLt9\n4SPRIuN8NASJ5SM4DzOq6JemCB/T6/JUeYrI1bCZbZKCad4kDtE=\n=rbH+\n-----END PGP SIGNATURE-----", "payload": "tree 343e2e354a3c7b11e4ffe5ae2b202bc97996dfa6\nparent 0692b3df2e3f9f5e0d3ba7505dbdd667e9822f9e\nauthor kennytm <kennytm@gmail.com> 1512397917 +0800\ncommitter kennytm <kennytm@gmail.com> 1514304045 +0800\n\nUpload the toolstate to the remote repository.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/519f92f2aa7f2ec6833c57460283784a5077f73e", "html_url": "https://github.com/rust-lang/rust/commit/519f92f2aa7f2ec6833c57460283784a5077f73e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/519f92f2aa7f2ec6833c57460283784a5077f73e/comments", "author": {"login": "kennytm", "id": 103023, "node_id": "MDQ6VXNlcjEwMzAyMw==", "avatar_url": "https://avatars.githubusercontent.com/u/103023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kennytm", "html_url": "https://github.com/kennytm", "followers_url": "https://api.github.com/users/kennytm/followers", "following_url": "https://api.github.com/users/kennytm/following{/other_user}", "gists_url": "https://api.github.com/users/kennytm/gists{/gist_id}", "starred_url": "https://api.github.com/users/kennytm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kennytm/subscriptions", "organizations_url": "https://api.github.com/users/kennytm/orgs", "repos_url": "https://api.github.com/users/kennytm/repos", "events_url": "https://api.github.com/users/kennytm/events{/privacy}", "received_events_url": "https://api.github.com/users/kennytm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kennytm", "id": 103023, "node_id": "MDQ6VXNlcjEwMzAyMw==", "avatar_url": "https://avatars.githubusercontent.com/u/103023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kennytm", "html_url": "https://github.com/kennytm", "followers_url": "https://api.github.com/users/kennytm/followers", "following_url": "https://api.github.com/users/kennytm/following{/other_user}", "gists_url": "https://api.github.com/users/kennytm/gists{/gist_id}", "starred_url": "https://api.github.com/users/kennytm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kennytm/subscriptions", "organizations_url": "https://api.github.com/users/kennytm/orgs", "repos_url": "https://api.github.com/users/kennytm/repos", "events_url": "https://api.github.com/users/kennytm/events{/privacy}", "received_events_url": "https://api.github.com/users/kennytm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0692b3df2e3f9f5e0d3ba7505dbdd667e9822f9e", "url": "https://api.github.com/repos/rust-lang/rust/commits/0692b3df2e3f9f5e0d3ba7505dbdd667e9822f9e", "html_url": "https://github.com/rust-lang/rust/commit/0692b3df2e3f9f5e0d3ba7505dbdd667e9822f9e"}], "stats": {"total": 241, "additions": 230, "deletions": 11}, "files": [{"sha": "4a55aab5a411437d85ba26170b178cf9dd7e6107", "filename": ".travis.yml", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/519f92f2aa7f2ec6833c57460283784a5077f73e/.travis.yml", "raw_url": "https://github.com/rust-lang/rust/raw/519f92f2aa7f2ec6833c57460283784a5077f73e/.travis.yml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/.travis.yml?ref=519f92f2aa7f2ec6833c57460283784a5077f73e", "patch": "@@ -179,13 +179,26 @@ matrix:\n     - env: IMAGE=x86_64-gnu-incremental\n       if: branch = auto\n \n+    - stage: publish toolstate\n+      if: branch = master AND type = push\n+      before_install: []\n+      install: []\n+      cache: false\n+      sudo: false\n+      script:\n+        MESSAGE_FILE=$(mktemp -t msg.XXXXXX);\n+        . src/ci/docker/x86_64-gnu-tools/repo.sh;\n+        commit_toolstate_change \"$MESSAGE_FILE\" \"$TRAVIS_BUILD_DIR/src/ci/docker/x86_64-gnu-tools/publish.py\" \"$(git rev-parse HEAD)\" \"$(git log --format=%s -n1 HEAD)\" \"$MESSAGE_FILE\"\n+\n env:\n   global:\n     - SCCACHE_BUCKET=rust-lang-ci-sccache2\n     - SCCACHE_REGION=us-west-1\n     - AWS_ACCESS_KEY_ID=AKIAJAMV3QAMMA6AXHFQ\n     # AWS_SECRET_ACCESS_KEY=...\n     - secure: \"j96XxTVOSUf4s4r4htIxn/fvIa5DWbMgLqWl7r8z2QfgUwscmkMXAwXuFNc7s7bGTpV/+CgDiMFFM6BAFLGKutytIF6oA02s9b+usQYnM0th7YQ2AIgm9GtMTJCJp4AoyfFmh8F2faUICBZlfVLUJ34udHEe35vOklix+0k4WDo=\"\n+    # TOOLSTATE_REPO_ACCESS_TOKEN=...\n+    - secure: \"cFh8thThqEJLC98XKI5pfqflUzOlxsYPRW20AWRaYOOgYHPTiGWypTXiPbGSKaeAXTZoOA+DpQtEmefc0U6lt9dHc7a/MIaK6isFurjlnKYiLOeTruzyu1z7PWCeZ/jKXsU2RK/88DBtlNwfMdaMIeuKj14IVfpepPPL71ETbuk=\"\n \n before_install:\n   - zcat $HOME/docker/rust-ci.tar.gz | docker load || true"}, {"sha": "da7885540491de471a66081cb6347234c93f9077", "filename": "appveyor.yml", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/519f92f2aa7f2ec6833c57460283784a5077f73e/appveyor.yml", "raw_url": "https://github.com/rust-lang/rust/raw/519f92f2aa7f2ec6833c57460283784a5077f73e/appveyor.yml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/appveyor.yml?ref=519f92f2aa7f2ec6833c57460283784a5077f73e", "patch": "@@ -5,6 +5,8 @@ environment:\n   AWS_SECRET_ACCESS_KEY:\n     secure: 7Y+JiquYedOAgnUU26uL0DPzrxmTtR+qIwG6rNKSuWDffqU3vVZxbGXim9QpTO80\n   SCCACHE_DIGEST: f808afabb4a4eb1d7112bcb3fa6be03b61e93412890c88e177c667eb37f46353d7ec294e559b16f9f4b5e894f2185fe7670a0df15fd064889ecbd80f0c34166c\n+  TOOLSTATE_REPO_ACCESS_TOKEN:\n+    secure: PTZiSxJMVUZ0VnMR5i13E4OagbXfglj7pcskDQiKufVrDm13mLoI0vDJAEM35+bY\n \n   # By default schannel checks revocation of certificates unlike some other SSL\n   # backends, but we've historically had problems on CI where a revocation\n@@ -27,8 +29,8 @@ environment:\n \n   # MSVC tools tests\n   - MSYS_BITS: 64\n-    SCRIPT: src/ci/docker/x86_64-gnu-tools/checktools.sh x.py toolstates.json\n-    RUST_CONFIGURE_ARGS: --build=x86_64-pc-windows-msvc --save-toolstates=toolstates.json --enable-test-miri\n+    SCRIPT: src/ci/docker/x86_64-gnu-tools/checktools.sh x.py /tmp/toolstates.json windows\n+    RUST_CONFIGURE_ARGS: --build=x86_64-pc-windows-msvc --save-toolstates=/tmp/toolstates.json --enable-test-miri\n \n   # 32/64-bit MinGW builds.\n   #"}, {"sha": "f743c976f91a2ae989d33b2e60687e825dbba9e3", "filename": "src/ci/docker/run.sh", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/519f92f2aa7f2ec6833c57460283784a5077f73e/src%2Fci%2Fdocker%2Frun.sh", "raw_url": "https://github.com/rust-lang/rust/raw/519f92f2aa7f2ec6833c57460283784a5077f73e/src%2Fci%2Fdocker%2Frun.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Frun.sh?ref=519f92f2aa7f2ec6833c57460283784a5077f73e", "patch": "@@ -99,6 +99,7 @@ exec docker \\\n   --env LOCAL_USER_ID=`id -u` \\\n   --env TRAVIS \\\n   --env TRAVIS_BRANCH \\\n+  --env TOOLSTATE_REPO_ACCESS_TOKEN \\\n   --volume \"$HOME/.cargo:/cargo\" \\\n   --volume \"$HOME/rustsrc:$HOME/rustsrc\" \\\n   --init \\"}, {"sha": "8975d419d2055e01f5a5ea5a79e89fe8a13ae809", "filename": "src/ci/docker/x86_64-gnu-tools/Dockerfile", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/519f92f2aa7f2ec6833c57460283784a5077f73e/src%2Fci%2Fdocker%2Fx86_64-gnu-tools%2FDockerfile", "raw_url": "https://github.com/rust-lang/rust/raw/519f92f2aa7f2ec6833c57460283784a5077f73e/src%2Fci%2Fdocker%2Fx86_64-gnu-tools%2FDockerfile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fx86_64-gnu-tools%2FDockerfile?ref=519f92f2aa7f2ec6833c57460283784a5077f73e", "patch": "@@ -18,9 +18,10 @@ COPY scripts/sccache.sh /scripts/\n RUN sh /scripts/sccache.sh\n \n COPY x86_64-gnu-tools/checktools.sh /tmp/\n+COPY x86_64-gnu-tools/repo.sh /tmp/\n \n ENV RUST_CONFIGURE_ARGS \\\n   --build=x86_64-unknown-linux-gnu \\\n   --enable-test-miri \\\n   --save-toolstates=/tmp/toolstates.json\n-ENV SCRIPT /tmp/checktools.sh ../x.py /tmp/toolstates.json\n+ENV SCRIPT /tmp/checktools.sh ../x.py /tmp/toolstates.json linux"}, {"sha": "e06b6ab3d1bd0d7b6eb05ebdd4b91e2fb4aa36bf", "filename": "src/ci/docker/x86_64-gnu-tools/checktools.sh", "status": "modified", "additions": 15, "deletions": 8, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/519f92f2aa7f2ec6833c57460283784a5077f73e/src%2Fci%2Fdocker%2Fx86_64-gnu-tools%2Fchecktools.sh", "raw_url": "https://github.com/rust-lang/rust/raw/519f92f2aa7f2ec6833c57460283784a5077f73e/src%2Fci%2Fdocker%2Fx86_64-gnu-tools%2Fchecktools.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fx86_64-gnu-tools%2Fchecktools.sh?ref=519f92f2aa7f2ec6833c57460283784a5077f73e", "patch": "@@ -13,7 +13,9 @@\n set -eu\n \n X_PY=\"$1\"\n-TOOLSTATE_FILE=\"$2\"\n+TOOLSTATE_FILE=\"$(realpath $2)\"\n+OS=\"$3\"\n+COMMIT=\"$(git rev-parse HEAD)\"\n \n touch \"$TOOLSTATE_FILE\"\n \n@@ -23,17 +25,22 @@ python2.7 \"$X_PY\" test --no-fail-fast \\\n     src/tools/rustfmt \\\n     src/tools/miri \\\n     src/tools/clippy\n-TEST_RESULT=$?\n set -e\n \n-# FIXME: Upload this file to the repository.\n cat \"$TOOLSTATE_FILE\"\n \n-# FIXME: After we can properly inform dev-tool maintainers about failure,\n-#        comment out the `exit 0` below.\n if [ \"$RUST_RELEASE_CHANNEL\" = nightly ]; then\n-    # exit 0\n-    true\n+    . \"$(dirname $0)/repo.sh\"\n+    MESSAGE_FILE=$(mktemp -t msg.XXXXXX)\n+    echo \"($OS CI update)\" > \"$MESSAGE_FILE\"\n+    commit_toolstate_change \"$MESSAGE_FILE\" \\\n+        sed -i \"1 a\\\\\n+$COMMIT\\t$(cat \"$TOOLSTATE_FILE\")\n+\" \"history/$OS.tsv\"\n+    rm -f \"$MESSAGE_FILE\"\n+    exit 0\n fi\n \n-exit $TEST_RESULT\n+if grep -q 'Broken\\|Compiling' \"$TOOLSTATE_FILE\"; then\n+    exit 4\n+fi"}, {"sha": "b90947e5a434a3f03725779456dceb6aa0fe33b9", "filename": "src/ci/docker/x86_64-gnu-tools/publish.py", "status": "added", "additions": 105, "deletions": 0, "changes": 105, "blob_url": "https://github.com/rust-lang/rust/blob/519f92f2aa7f2ec6833c57460283784a5077f73e/src%2Fci%2Fdocker%2Fx86_64-gnu-tools%2Fpublish.py", "raw_url": "https://github.com/rust-lang/rust/raw/519f92f2aa7f2ec6833c57460283784a5077f73e/src%2Fci%2Fdocker%2Fx86_64-gnu-tools%2Fpublish.py", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fx86_64-gnu-tools%2Fpublish.py?ref=519f92f2aa7f2ec6833c57460283784a5077f73e", "patch": "@@ -0,0 +1,105 @@\n+#!/usr/bin/env python\n+# -*- coding: utf-8 -*-\n+\n+# Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n+# file at the top-level directory of this distribution and at\n+# http://rust-lang.org/COPYRIGHT.\n+#\n+# Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+# http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+# <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+# option. This file may not be copied, modified, or distributed\n+# except according to those terms.\n+\n+import sys\n+import re\n+import json\n+import copy\n+import datetime\n+import collections\n+\n+# List of people to ping when the status of a tool changed.\n+MAINTAINERS = {\n+    'miri': '@oli-obk @RalfJung @eddyb',\n+    'clippy-driver': '@Manishearth @llogiq @mcarton @oli-obk',\n+    'rls': '@nrc',\n+    'rustfmt': '@nrc',\n+}\n+\n+\n+def read_current_status(current_commit, path):\n+    '''Reads build status of `current_commit` from content of `history/*.tsv`\n+    '''\n+    with open(path, 'rU') as f:\n+        for line in f:\n+            (commit, status) = line.split('\\t', 1)\n+            if commit == current_commit:\n+                return json.loads(status)\n+    return {}\n+\n+\n+def update_latest(current_commit, relevant_pr_number, current_datetime):\n+    '''Updates `_data/latest.json` to match build result of the given commit.\n+    '''\n+    with open('_data/latest.json', 'rb+') as f:\n+        latest = json.load(f, object_pairs_hook=collections.OrderedDict)\n+\n+        current_status = {\n+            os: read_current_status(current_commit, 'history/' + os + '.tsv')\n+            for os in ['windows', 'linux']\n+        }\n+\n+        slug = 'rust-lang/rust'\n+        message = '\ud83d\udce3 Toolstate changed by {}!\\n\\nTested on commit {}@{}.\\n\\n' \\\n+            .format(relevant_pr_number, slug, current_commit)\n+        anything_changed = False\n+        for status in latest:\n+            tool = status['tool']\n+            changed = False\n+\n+            for os, s in current_status.items():\n+                old = status[os]\n+                new = s.get(tool, old)\n+                status[os] = new\n+                if new > old:\n+                    changed = True\n+                    message += '\ud83c\udf89 {} on {}: {} \u2192 {}.\\n' \\\n+                        .format(tool, os, old, new)\n+                elif new < old:\n+                    changed = True\n+                    message += '\ud83d\udc94 {} on {}: {} \u2192 {} (cc {}).\\n' \\\n+                        .format(tool, os, old, new, MAINTAINERS[tool])\n+\n+            if changed:\n+                status['commit'] = current_commit\n+                status['datetime'] = current_datetime\n+                anything_changed = True\n+\n+        if not anything_changed:\n+            return ''\n+\n+        f.seek(0)\n+        f.truncate(0)\n+        json.dump(latest, f, indent=4, separators=(',', ': '))\n+        return message\n+\n+\n+if __name__ == '__main__':\n+    cur_commit = sys.argv[1]\n+    cur_datetime = datetime.datetime.utcnow().strftime('%Y-%m-%dT%H:%M:%SZ')\n+    cur_commit_msg = sys.argv[2]\n+    save_message_to_path = sys.argv[3]\n+\n+    relevant_pr_match = re.search('#[0-9]+', cur_commit_msg)\n+    if relevant_pr_match:\n+        relevant_pr_number = 'rust-lang/rust' + relevant_pr_match.group(0)\n+    else:\n+        relevant_pr_number = '<unknown PR>'\n+\n+    message = update_latest(cur_commit, relevant_pr_number, cur_datetime)\n+    if message:\n+        print(message)\n+        with open(save_message_to_path, 'w') as f:\n+            f.write(message)\n+    else:\n+        print('<Nothing changed>')"}, {"sha": "c10afef753e810e25f62126927ba739c49b10381", "filename": "src/ci/docker/x86_64-gnu-tools/repo.sh", "status": "added", "additions": 90, "deletions": 0, "changes": 90, "blob_url": "https://github.com/rust-lang/rust/blob/519f92f2aa7f2ec6833c57460283784a5077f73e/src%2Fci%2Fdocker%2Fx86_64-gnu-tools%2Frepo.sh", "raw_url": "https://github.com/rust-lang/rust/raw/519f92f2aa7f2ec6833c57460283784a5077f73e/src%2Fci%2Fdocker%2Fx86_64-gnu-tools%2Frepo.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fx86_64-gnu-tools%2Frepo.sh?ref=519f92f2aa7f2ec6833c57460283784a5077f73e", "patch": "@@ -0,0 +1,90 @@\n+#!/bin/sh\n+\n+# Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n+# file at the top-level directory of this distribution and at\n+# http://rust-lang.org/COPYRIGHT.\n+#\n+# Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+# http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+# <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+# option. This file may not be copied, modified, or distributed\n+# except according to those terms.\n+\n+# This file provides the function `commit_toolstate_change` for pushing a change\n+# to the `rust-toolstate` repository.\n+#\n+# The function relies on a GitHub bot user, which should have a Personal access\n+# token defined in the environment variable $TOOLSTATE_REPO_ACCESS_TOKEN. If for\n+# some reason you need to change the token, please update `.travis.yml` and\n+# `appveyor.yml`:\n+#\n+#   1. Generate a new Personal access token:\n+#\n+#       * Login to the bot account, and go to Settings -> Developer settings ->\n+#           Personal access tokens\n+#       * Click \"Generate new token\"\n+#       * Enable the \"public_repo\" permission, then click \"Generate token\"\n+#       * Copy the generated token (should be a 40-digit hexadecimal number).\n+#           Save it somewhere secure, as the token would be gone once you leave\n+#           the page.\n+#\n+#   2. Encrypt the token for Travis CI\n+#\n+#       * Install the `travis` tool locally (`gem install travis`).\n+#       * Encrypt the token:\n+#           ```\n+#           travis -r rust-lang/rust encrypt \\\n+#                   TOOLSTATE_REPO_ACCESS_TOKEN=aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\n+#           ```\n+#       * Copy output to replace the existing one in `.travis.yml`.\n+#       * Details of this step can be found in\n+#           <https://docs.travis-ci.com/user/encryption-keys/>\n+#\n+#   3. Encrypt the token for AppVeyor\n+#\n+#       * Login to AppVeyor using your main account, and login as the rust-lang\n+#           organization.\n+#       * Open the [\"Encrypt data\" tool](https://ci.appveyor.com/tools/encrypt)\n+#       * Paste the 40-digit token into the \"Value to encrypt\" box, then click\n+#           \"Encrypt\"\n+#       * Copy the output to replace the existing one in `appveyor.yml`.\n+#       * Details of this step can be found in\n+#           <https://www.appveyor.com/docs/how-to/git-push/>\n+#\n+#   4. Replace the email address below if the bot account identity is changed\n+#\n+#       * See <https://help.github.com/articles/about-commit-email-addresses/>\n+#           if a private email by GitHub is wanted.\n+\n+commit_toolstate_change() {\n+    OLDFLAGS=\"$-\"\n+    set -eu\n+\n+    git config --global user.email '34210020+rust-toolstate-update@users.noreply.github.com'\n+    git config --global user.name 'Rust Toolstate Update'\n+    git config --global credential.helper store\n+    printf 'https://%s:x-oauth-basic@github.com\\n' \"$TOOLSTATE_REPO_ACCESS_TOKEN\" \\\n+        > \"$HOME/.git-credentials\"\n+    git clone --depth=1 https://github.com/rust-lang-nursery/rust-toolstate.git\n+\n+    cd rust-toolstate\n+    FAILURE=1\n+    MESSAGE_FILE=\"$1\"\n+    shift\n+    for RETRY_COUNT in 1 2 3 4 5; do\n+        \"$@\"\n+        # `git commit` failing means nothing to commit.\n+        FAILURE=0\n+        git commit -a -F \"$MESSAGE_FILE\" || break\n+        # On failure randomly sleep for 0 to 3 seconds as a crude way to introduce jittering.\n+        git push origin master && break || sleep $(LC_ALL=C tr -cd 0-3 < /dev/urandom | head -c 1)\n+        FAILURE=1\n+        git fetch origin master\n+        git reset --hard origin/master\n+    done\n+    cd ..\n+\n+    set +eu\n+    set \"-$OLDFLAGS\"\n+    return $FAILURE\n+}"}]}