{"sha": "e9c539a488a5b59293b24701b8f121fb7fae1636", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU5YzUzOWE0ODhhNWI1OTI5M2IyNDcwMWI4ZjEyMWZiN2ZhZTE2MzY=", "commit": {"author": {"name": "Q.P.Liu", "email": "qpliu@yahoo.com", "date": "2014-02-08T05:50:49Z"}, "committer": {"name": "Q.P.Liu", "email": "qpliu@yahoo.com", "date": "2014-02-09T01:42:38Z"}, "message": "Fix infinite loop in MemReader::read_until.", "tree": {"sha": "ce422deb67fdf99868034c4e0a329f39c910ca83", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ce422deb67fdf99868034c4e0a329f39c910ca83"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e9c539a488a5b59293b24701b8f121fb7fae1636", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e9c539a488a5b59293b24701b8f121fb7fae1636", "html_url": "https://github.com/rust-lang/rust/commit/e9c539a488a5b59293b24701b8f121fb7fae1636", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e9c539a488a5b59293b24701b8f121fb7fae1636/comments", "author": {"login": "qpliu", "id": 251248, "node_id": "MDQ6VXNlcjI1MTI0OA==", "avatar_url": "https://avatars.githubusercontent.com/u/251248?v=4", "gravatar_id": "", "url": "https://api.github.com/users/qpliu", "html_url": "https://github.com/qpliu", "followers_url": "https://api.github.com/users/qpliu/followers", "following_url": "https://api.github.com/users/qpliu/following{/other_user}", "gists_url": "https://api.github.com/users/qpliu/gists{/gist_id}", "starred_url": "https://api.github.com/users/qpliu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/qpliu/subscriptions", "organizations_url": "https://api.github.com/users/qpliu/orgs", "repos_url": "https://api.github.com/users/qpliu/repos", "events_url": "https://api.github.com/users/qpliu/events{/privacy}", "received_events_url": "https://api.github.com/users/qpliu/received_events", "type": "User", "site_admin": false}, "committer": {"login": "qpliu", "id": 251248, "node_id": "MDQ6VXNlcjI1MTI0OA==", "avatar_url": "https://avatars.githubusercontent.com/u/251248?v=4", "gravatar_id": "", "url": "https://api.github.com/users/qpliu", "html_url": "https://github.com/qpliu", "followers_url": "https://api.github.com/users/qpliu/followers", "following_url": "https://api.github.com/users/qpliu/following{/other_user}", "gists_url": "https://api.github.com/users/qpliu/gists{/gist_id}", "starred_url": "https://api.github.com/users/qpliu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/qpliu/subscriptions", "organizations_url": "https://api.github.com/users/qpliu/orgs", "repos_url": "https://api.github.com/users/qpliu/repos", "events_url": "https://api.github.com/users/qpliu/events{/privacy}", "received_events_url": "https://api.github.com/users/qpliu/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a2290db7971a1e14e4d15316cecaf5c33cc6b0ba", "url": "https://api.github.com/repos/rust-lang/rust/commits/a2290db7971a1e14e4d15316cecaf5c33cc6b0ba", "html_url": "https://github.com/rust-lang/rust/commit/a2290db7971a1e14e4d15316cecaf5c33cc6b0ba"}], "stats": {"total": 10, "additions": 9, "deletions": 1}, "files": [{"sha": "2f0e1e599d98b750858a24ce03c77612c66de8c1", "filename": "src/libstd/io/mem.rs", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/e9c539a488a5b59293b24701b8f121fb7fae1636/src%2Flibstd%2Fio%2Fmem.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e9c539a488a5b59293b24701b8f121fb7fae1636/src%2Flibstd%2Fio%2Fmem.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fio%2Fmem.rs?ref=e9c539a488a5b59293b24701b8f121fb7fae1636", "patch": "@@ -177,7 +177,11 @@ impl Seek for MemReader {\n \n impl Buffer for MemReader {\n     fn fill<'a>(&'a mut self) -> IoResult<&'a [u8]> {\n-        Ok(self.buf.slice_from(self.pos))\n+        if self.pos < self.buf.len() {\n+            Ok(self.buf.slice_from(self.pos))\n+        } else {\n+            Err(io::standard_error(io::EndOfFile))\n+        }\n     }\n     fn consume(&mut self, amt: uint) { self.pos += amt; }\n }\n@@ -421,6 +425,10 @@ mod test {\n         assert_eq!(reader.read(buf), Ok(3));\n         assert_eq!(buf.slice(0, 3), [5, 6, 7]);\n         assert!(reader.read(buf).is_err());\n+        let mut reader = MemReader::new(~[0, 1, 2, 3, 4, 5, 6, 7]);\n+        assert_eq!(reader.read_until(3).unwrap(), ~[0, 1, 2, 3]);\n+        assert_eq!(reader.read_until(3).unwrap(), ~[4, 5, 6, 7]);\n+        assert!(reader.read(buf).is_err());\n     }\n \n     #[test]"}]}