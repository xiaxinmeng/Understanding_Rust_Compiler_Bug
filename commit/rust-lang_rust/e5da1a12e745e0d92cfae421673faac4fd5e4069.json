{"sha": "e5da1a12e745e0d92cfae421673faac4fd5e4069", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU1ZGExYTEyZTc0NWUwZDkyY2ZhZTQyMTY3M2ZhYWM0ZmQ1ZTQwNjk=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-11-06T02:28:09Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-11-06T02:28:09Z"}, "message": "Rollup merge of #66054 - petrochenkov:delspan, r=estebank\n\nsyntax: Avoid span arithmetic for delimiter tokens\n\nThe +/-1 logic is from the time where the whole group had a single span and the delimiter spans had to be calculated from it.\nNow the delimiters have their own spans which are constructed by lexer or proc macro API and can be used directly.\nIf those spans are not perfect, then it should be fixed by tweaking the corresponding lexer logic rather than by trying to add or substract `1` from the span boundaries.\n\nFixes https://github.com/rust-lang/rust/issues/62524\nr? @estebank", "tree": {"sha": "7899e2184908bc21c9eb2b07698513ea1982030c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7899e2184908bc21c9eb2b07698513ea1982030c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e5da1a12e745e0d92cfae421673faac4fd5e4069", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJdwi+5CRBK7hj4Ov3rIwAAdHIIAD4/ZVTEQftarnRW4FCW8KX9\ncH5m/zcXJDl+W7yEcwsIForSjd+JhAPjkeQ8mn+FP/7ZHzbpDzzA6cZTJ++HnBND\nlsMv+TkoiHYGJU4KTYu6g/jQridHVCzc11CtPuCEY7nfmDxa6UBgeFQz9u0h8a1b\nu9tTGbk1SGOQ5kZWc4aFTHccvG4njI3pmyI1MHazb5ttHLtLJrfhfu72+6u94rCV\n1LE5q9Xh58bkLFyoOjHcfArxZ7mgdppSC8oI+nAS7fp4c6CnP70iXnpa16Ovo9dT\nRMzgDCw23Lj/aqUlIZnJ0MmqCvJYpYea2KIa0ijvaxTZubOG4Bh50ck76PcWPVQ=\n=Q9Ym\n-----END PGP SIGNATURE-----\n", "payload": "tree 7899e2184908bc21c9eb2b07698513ea1982030c\nparent 5c4a595ff09d08c46ee3b23d343da47b0d12243d\nparent 90f891d8ae9073623769fac18f00c4f1031fcb59\nauthor Mazdak Farrokhzad <twingoow@gmail.com> 1573007289 +0100\ncommitter GitHub <noreply@github.com> 1573007289 +0100\n\nRollup merge of #66054 - petrochenkov:delspan, r=estebank\n\nsyntax: Avoid span arithmetic for delimiter tokens\n\nThe +/-1 logic is from the time where the whole group had a single span and the delimiter spans had to be calculated from it.\nNow the delimiters have their own spans which are constructed by lexer or proc macro API and can be used directly.\nIf those spans are not perfect, then it should be fixed by tweaking the corresponding lexer logic rather than by trying to add or substract `1` from the span boundaries.\n\nFixes https://github.com/rust-lang/rust/issues/62524\nr? @estebank\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e5da1a12e745e0d92cfae421673faac4fd5e4069", "html_url": "https://github.com/rust-lang/rust/commit/e5da1a12e745e0d92cfae421673faac4fd5e4069", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e5da1a12e745e0d92cfae421673faac4fd5e4069/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5c4a595ff09d08c46ee3b23d343da47b0d12243d", "url": "https://api.github.com/repos/rust-lang/rust/commits/5c4a595ff09d08c46ee3b23d343da47b0d12243d", "html_url": "https://github.com/rust-lang/rust/commit/5c4a595ff09d08c46ee3b23d343da47b0d12243d"}, {"sha": "90f891d8ae9073623769fac18f00c4f1031fcb59", "url": "https://api.github.com/repos/rust-lang/rust/commits/90f891d8ae9073623769fac18f00c4f1031fcb59", "html_url": "https://github.com/rust-lang/rust/commit/90f891d8ae9073623769fac18f00c4f1031fcb59"}], "stats": {"total": 92, "additions": 46, "deletions": 46}, "files": [{"sha": "7652c730e51b6bcee39ce4513df1de921bea7429", "filename": "src/libsyntax/parse/parser.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e5da1a12e745e0d92cfae421673faac4fd5e4069/src%2Flibsyntax%2Fparse%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e5da1a12e745e0d92cfae421673faac4fd5e4069/src%2Flibsyntax%2Fparse%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fparser.rs?ref=e5da1a12e745e0d92cfae421673faac4fd5e4069", "patch": "@@ -209,12 +209,12 @@ impl TokenCursor {\n         loop {\n             let tree = if !self.frame.open_delim {\n                 self.frame.open_delim = true;\n-                TokenTree::open_tt(self.frame.span.open, self.frame.delim)\n+                TokenTree::open_tt(self.frame.span, self.frame.delim)\n             } else if let Some(tree) = self.frame.tree_cursor.next() {\n                 tree\n             } else if !self.frame.close_delim {\n                 self.frame.close_delim = true;\n-                TokenTree::close_tt(self.frame.span.close, self.frame.delim)\n+                TokenTree::close_tt(self.frame.span, self.frame.delim)\n             } else if let Some(frame) = self.stack.pop() {\n                 self.frame = frame;\n                 continue"}, {"sha": "7e0582797c7ac6d1b762fd9186175bd22b3fdf20", "filename": "src/libsyntax/tokenstream.rs", "status": "modified", "additions": 5, "deletions": 15, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/e5da1a12e745e0d92cfae421673faac4fd5e4069/src%2Flibsyntax%2Ftokenstream.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e5da1a12e745e0d92cfae421673faac4fd5e4069/src%2Flibsyntax%2Ftokenstream.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Ftokenstream.rs?ref=e5da1a12e745e0d92cfae421673faac4fd5e4069", "patch": "@@ -15,7 +15,7 @@\n \n use crate::parse::token::{self, DelimToken, Token, TokenKind};\n \n-use syntax_pos::{BytePos, Span, DUMMY_SP};\n+use syntax_pos::{Span, DUMMY_SP};\n #[cfg(target_arch = \"x86_64\")]\n use rustc_data_structures::static_assert_size;\n use rustc_data_structures::sync::Lrc;\n@@ -110,23 +110,13 @@ impl TokenTree {\n     }\n \n     /// Returns the opening delimiter as a token tree.\n-    pub fn open_tt(span: Span, delim: DelimToken) -> TokenTree {\n-        let open_span = if span.is_dummy() {\n-            span\n-        } else {\n-            span.with_hi(span.lo() + BytePos(delim.len() as u32))\n-        };\n-        TokenTree::token(token::OpenDelim(delim), open_span)\n+    pub fn open_tt(span: DelimSpan, delim: DelimToken) -> TokenTree {\n+        TokenTree::token(token::OpenDelim(delim), span.open)\n     }\n \n     /// Returns the closing delimiter as a token tree.\n-    pub fn close_tt(span: Span, delim: DelimToken) -> TokenTree {\n-        let close_span = if span.is_dummy() {\n-            span\n-        } else {\n-            span.with_lo(span.hi() - BytePos(delim.len() as u32))\n-        };\n-        TokenTree::token(token::CloseDelim(delim), close_span)\n+    pub fn close_tt(span: DelimSpan, delim: DelimToken) -> TokenTree {\n+        TokenTree::token(token::CloseDelim(delim), span.close)\n     }\n }\n "}, {"sha": "06e0cde3ad88c345c5888627ee4abaa028e7d144", "filename": "src/libsyntax_expand/mbe.rs", "status": "modified", "additions": 7, "deletions": 17, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/e5da1a12e745e0d92cfae421673faac4fd5e4069/src%2Flibsyntax_expand%2Fmbe.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e5da1a12e745e0d92cfae421673faac4fd5e4069/src%2Flibsyntax_expand%2Fmbe.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax_expand%2Fmbe.rs?ref=e5da1a12e745e0d92cfae421673faac4fd5e4069", "patch": "@@ -13,7 +13,7 @@ use syntax::ast;\n use syntax::parse::token::{self, Token, TokenKind};\n use syntax::tokenstream::{DelimSpan};\n \n-use syntax_pos::{BytePos, Span};\n+use syntax_pos::Span;\n \n use rustc_data_structures::sync::Lrc;\n \n@@ -27,23 +27,13 @@ struct Delimited {\n \n impl Delimited {\n     /// Returns a `self::TokenTree` with a `Span` corresponding to the opening delimiter.\n-    fn open_tt(&self, span: Span) -> TokenTree {\n-        let open_span = if span.is_dummy() {\n-            span\n-        } else {\n-            span.with_hi(span.lo() + BytePos(self.delim.len() as u32))\n-        };\n-        TokenTree::token(token::OpenDelim(self.delim), open_span)\n+    fn open_tt(&self, span: DelimSpan) -> TokenTree {\n+        TokenTree::token(token::OpenDelim(self.delim), span.open)\n     }\n \n     /// Returns a `self::TokenTree` with a `Span` corresponding to the closing delimiter.\n-    fn close_tt(&self, span: Span) -> TokenTree {\n-        let close_span = if span.is_dummy() {\n-            span\n-        } else {\n-            span.with_lo(span.hi() - BytePos(self.delim.len() as u32))\n-        };\n-        TokenTree::token(token::CloseDelim(self.delim), close_span)\n+    fn close_tt(&self, span: DelimSpan) -> TokenTree {\n+        TokenTree::token(token::CloseDelim(self.delim), span.close)\n     }\n }\n \n@@ -138,10 +128,10 @@ impl TokenTree {\n             }\n             (&TokenTree::Delimited(span, ref delimed), _) => {\n                 if index == 0 {\n-                    return delimed.open_tt(span.open);\n+                    return delimed.open_tt(span);\n                 }\n                 if index == delimed.tts.len() + 1 {\n-                    return delimed.close_tt(span.close);\n+                    return delimed.close_tt(span);\n                 }\n                 delimed.tts[index - 1].clone()\n             }"}, {"sha": "bfdc4c52b5a5efb0767b98dd81f0bed310d8d108", "filename": "src/libsyntax_expand/mbe/macro_rules.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/e5da1a12e745e0d92cfae421673faac4fd5e4069/src%2Flibsyntax_expand%2Fmbe%2Fmacro_rules.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e5da1a12e745e0d92cfae421673faac4fd5e4069/src%2Flibsyntax_expand%2Fmbe%2Fmacro_rules.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax_expand%2Fmbe%2Fmacro_rules.rs?ref=e5da1a12e745e0d92cfae421673faac4fd5e4069", "patch": "@@ -566,7 +566,7 @@ impl FirstSets {\n                     }\n                     TokenTree::Delimited(span, ref delimited) => {\n                         build_recur(sets, &delimited.tts[..]);\n-                        first.replace_with(delimited.open_tt(span.open));\n+                        first.replace_with(delimited.open_tt(span));\n                     }\n                     TokenTree::Sequence(sp, ref seq_rep) => {\n                         let subfirst = build_recur(sets, &seq_rep.tts[..]);\n@@ -628,7 +628,7 @@ impl FirstSets {\n                     return first;\n                 }\n                 TokenTree::Delimited(span, ref delimited) => {\n-                    first.add_one(delimited.open_tt(span.open));\n+                    first.add_one(delimited.open_tt(span));\n                     return first;\n                 }\n                 TokenTree::Sequence(sp, ref seq_rep) => {\n@@ -826,7 +826,7 @@ fn check_matcher_core(\n                 }\n             }\n             TokenTree::Delimited(span, ref d) => {\n-                let my_suffix = TokenSet::singleton(d.close_tt(span.close));\n+                let my_suffix = TokenSet::singleton(d.close_tt(span));\n                 check_matcher_core(sess, features, attrs, first_sets, &d.tts, &my_suffix);\n                 // don't track non NT tokens\n                 last.replace_with_irrelevant();"}, {"sha": "862a31b44653726fe59e7ac8e187ea54ec1da1cd", "filename": "src/test/ui/imports/import-prefix-macro-1.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e5da1a12e745e0d92cfae421673faac4fd5e4069/src%2Ftest%2Fui%2Fimports%2Fimport-prefix-macro-1.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e5da1a12e745e0d92cfae421673faac4fd5e4069/src%2Ftest%2Fui%2Fimports%2Fimport-prefix-macro-1.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimports%2Fimport-prefix-macro-1.stderr?ref=e5da1a12e745e0d92cfae421673faac4fd5e4069", "patch": "@@ -2,7 +2,7 @@ error: expected one of `::`, `;`, or `as`, found `{`\n   --> $DIR/import-prefix-macro-1.rs:11:27\n    |\n LL |     ($p: path) => (use $p {S, Z});\n-   |                           ^ expected one of `::`, `;`, or `as` here\n+   |                           ^^^^^^ expected one of `::`, `;`, or `as` here\n ...\n LL | import! { a::b::c }\n    | ------------------- in this macro invocation"}, {"sha": "47aa8e17a304bf07cea3507facc065ea3e17112b", "filename": "src/test/ui/issues/issue-39848.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e5da1a12e745e0d92cfae421673faac4fd5e4069/src%2Ftest%2Fui%2Fissues%2Fissue-39848.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e5da1a12e745e0d92cfae421673faac4fd5e4069/src%2Ftest%2Fui%2Fissues%2Fissue-39848.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-39848.stderr?ref=e5da1a12e745e0d92cfae421673faac4fd5e4069", "patch": "@@ -2,7 +2,7 @@ error: expected `{`, found `foo`\n   --> $DIR/issue-39848.rs:8:19\n    |\n LL |         if $tgt.has_$field() {}\n-   |         --                 - help: try placing this code inside a block: `{ ) }`\n+   |         --                -- help: try placing this code inside a block: `{ () }`\n    |         |\n    |         this `if` statement has a condition, but no block\n ..."}, {"sha": "f935d58c6468848cb09f745cffce9bb9c620eb43", "filename": "src/test/ui/parser/issue-62973.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e5da1a12e745e0d92cfae421673faac4fd5e4069/src%2Ftest%2Fui%2Fparser%2Fissue-62973.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e5da1a12e745e0d92cfae421673faac4fd5e4069/src%2Ftest%2Fui%2Fparser%2Fissue-62973.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fissue-62973.stderr?ref=e5da1a12e745e0d92cfae421673faac4fd5e4069", "patch": "@@ -36,13 +36,13 @@ LL | )\n    |\n \n error: expected one of `.`, `?`, `{`, or an operator, found `}`\n-  --> $DIR/issue-62973.rs:8:1\n+  --> $DIR/issue-62973.rs:8:2\n    |\n LL | fn p() { match s { v, E { [) {) }\n    |          ----- while parsing this match expression\n LL | \n LL | \n-   | ^ expected one of `.`, `?`, `{`, or an operator here\n+   |  ^ expected one of `.`, `?`, `{`, or an operator here\n \n error: incorrect close delimiter: `)`\n   --> $DIR/issue-62973.rs:6:28"}, {"sha": "8e8087978a3666fc8d5a88e530fa13b2db263349", "filename": "src/test/ui/parser/issue-63135.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/e5da1a12e745e0d92cfae421673faac4fd5e4069/src%2Ftest%2Fui%2Fparser%2Fissue-63135.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e5da1a12e745e0d92cfae421673faac4fd5e4069/src%2Ftest%2Fui%2Fparser%2Fissue-63135.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fissue-63135.stderr?ref=e5da1a12e745e0d92cfae421673faac4fd5e4069", "patch": "@@ -23,16 +23,16 @@ LL | fn i(n{...,f #\n    |        `..` must be at the end and cannot have a trailing comma\n \n error: expected `[`, found `}`\n-  --> $DIR/issue-63135.rs:3:15\n+  --> $DIR/issue-63135.rs:3:16\n    |\n LL | fn i(n{...,f #\n-   |               ^ expected `[`\n+   |                ^ expected `[`\n \n error: expected one of `:` or `|`, found `)`\n-  --> $DIR/issue-63135.rs:3:15\n+  --> $DIR/issue-63135.rs:3:16\n    |\n LL | fn i(n{...,f #\n-   |               ^ expected one of `:` or `|` here\n+   |                ^ expected one of `:` or `|` here\n \n error: aborting due to 5 previous errors\n "}, {"sha": "023d1a3e039f8151c50c63ccc0140a334070ce0c", "filename": "src/test/ui/parser/macro/macro-doc-comments-2.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e5da1a12e745e0d92cfae421673faac4fd5e4069/src%2Ftest%2Fui%2Fparser%2Fmacro%2Fmacro-doc-comments-2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e5da1a12e745e0d92cfae421673faac4fd5e4069/src%2Ftest%2Fui%2Fparser%2Fmacro%2Fmacro-doc-comments-2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fmacro%2Fmacro-doc-comments-2.stderr?ref=e5da1a12e745e0d92cfae421673faac4fd5e4069", "patch": "@@ -5,7 +5,7 @@ LL | macro_rules! inner {\n    | ------------------ when calling this macro\n ...\n LL |     /// Outer\n-   |     ^ no rules expected this token in macro call\n+   |     ^^^^^^^^^ no rules expected this token in macro call\n \n error: aborting due to previous error\n "}, {"sha": "4f7c5eea1d18342ebfc3ab12940242f5d4e254ff", "filename": "src/test/ui/parser/missing_right_paren.rs", "status": "added", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/e5da1a12e745e0d92cfae421673faac4fd5e4069/src%2Ftest%2Fui%2Fparser%2Fmissing_right_paren.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e5da1a12e745e0d92cfae421673faac4fd5e4069/src%2Ftest%2Fui%2Fparser%2Fmissing_right_paren.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fmissing_right_paren.rs?ref=e5da1a12e745e0d92cfae421673faac4fd5e4069", "patch": "@@ -0,0 +1,3 @@\n+// ignore-tidy-trailing-newlines\n+// error-pattern: aborting due to 2 previous errors\n+fn main((\u063c\n\\ No newline at end of file"}, {"sha": "fc75b031e76a82b2577f2fccb57b8d46dbe16992", "filename": "src/test/ui/parser/missing_right_paren.stderr", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/e5da1a12e745e0d92cfae421673faac4fd5e4069/src%2Ftest%2Fui%2Fparser%2Fmissing_right_paren.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e5da1a12e745e0d92cfae421673faac4fd5e4069/src%2Ftest%2Fui%2Fparser%2Fmissing_right_paren.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fmissing_right_paren.stderr?ref=e5da1a12e745e0d92cfae421673faac4fd5e4069", "patch": "@@ -0,0 +1,17 @@\n+error: this file contains an un-closed delimiter\n+  --> $DIR/missing_right_paren.rs:3:11\n+   |\n+LL | fn main((\u063c\n+   |        -- ^\n+   |        ||\n+   |        |un-closed delimiter\n+   |        un-closed delimiter\n+\n+error: expected one of `:` or `|`, found `)`\n+  --> $DIR/missing_right_paren.rs:3:11\n+   |\n+LL | fn main((\u063c\n+   |           ^ expected one of `:` or `|` here\n+\n+error: aborting due to 2 previous errors\n+"}]}