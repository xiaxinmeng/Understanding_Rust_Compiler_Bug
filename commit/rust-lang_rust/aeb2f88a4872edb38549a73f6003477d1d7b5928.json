{"sha": "aeb2f88a4872edb38549a73f6003477d1d7b5928", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFlYjJmODhhNDg3MmVkYjM4NTQ5YTczZjYwMDM0NzdkMWQ3YjU5Mjg=", "commit": {"author": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2013-09-03T04:50:50Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2013-09-03T04:50:50Z"}, "message": "Raise the file descriptor limits when running compiletest\n\nWe already do this for libstd tests automatically, and compiletest runs into the\nsame problems where when forking lots of processes lots of file descriptors are\ncreated. On OSX we can use specific syscalls to raise the limits, in this\nsituation, though.\n\nCloses #8904", "tree": {"sha": "3cbd074f508ca945aa3a39f7b699a64f1ab89b42", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3cbd074f508ca945aa3a39f7b699a64f1ab89b42"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/aeb2f88a4872edb38549a73f6003477d1d7b5928", "comment_count": 9, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/aeb2f88a4872edb38549a73f6003477d1d7b5928", "html_url": "https://github.com/rust-lang/rust/commit/aeb2f88a4872edb38549a73f6003477d1d7b5928", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/aeb2f88a4872edb38549a73f6003477d1d7b5928/comments", "author": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fc9fa2cb6ca2b0979137134713fe3f693090a9d9", "url": "https://api.github.com/repos/rust-lang/rust/commits/fc9fa2cb6ca2b0979137134713fe3f693090a9d9", "html_url": "https://github.com/rust-lang/rust/commit/fc9fa2cb6ca2b0979137134713fe3f693090a9d9"}], "stats": {"total": 15, "additions": 13, "deletions": 2}, "files": [{"sha": "969f4e4373a243c0849f87c59347efa251f2c95b", "filename": "src/compiletest/compiletest.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/aeb2f88a4872edb38549a73f6003477d1d7b5928/src%2Fcompiletest%2Fcompiletest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aeb2f88a4872edb38549a73f6003477d1d7b5928/src%2Fcompiletest%2Fcompiletest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcompiletest%2Fcompiletest.rs?ref=aeb2f88a4872edb38549a73f6003477d1d7b5928", "patch": "@@ -16,6 +16,7 @@\n extern mod extra;\n \n use std::os;\n+use std::rt;\n use std::f64;\n \n use extra::getopts;\n@@ -223,6 +224,10 @@ pub fn mode_str(mode: mode) -> ~str {\n pub fn run_tests(config: &config) {\n     let opts = test_opts(config);\n     let tests = make_tests(config);\n+    // sadly osx needs some file descriptor limits raised for running tests in\n+    // parallel (especially when we have lots and lots of child processes).\n+    // For context, see #8904\n+    rt::test::prepare_for_lots_of_tests();\n     let res = test::run_tests_console(&opts, tests);\n     if !res { fail!(\"Some tests failed\"); }\n }"}, {"sha": "2c293af1eaf101fcab9e6c900d42fa19794b2c35", "filename": "src/libstd/rt/test.rs", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/aeb2f88a4872edb38549a73f6003477d1d7b5928/src%2Flibstd%2Frt%2Ftest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aeb2f88a4872edb38549a73f6003477d1d7b5928/src%2Flibstd%2Frt%2Ftest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Frt%2Ftest.rs?ref=aeb2f88a4872edb38549a73f6003477d1d7b5928", "patch": "@@ -144,6 +144,12 @@ mod darwin_fd_limit {\n     pub unsafe fn raise_fd_limit() {}\n }\n \n+#[doc(hidden)]\n+pub fn prepare_for_lots_of_tests() {\n+    // Bump the fd limit on OS X. See darwin_fd_limit for an explanation.\n+    unsafe { darwin_fd_limit::raise_fd_limit() }\n+}\n+\n /// Create more than one scheduler and run a function in a task\n /// in one of the schedulers. The schedulers will stay alive\n /// until the function `f` returns.\n@@ -153,8 +159,8 @@ pub fn run_in_mt_newsched_task(f: ~fn()) {\n     use rt::sched::Shutdown;\n     use rt::util;\n \n-    // Bump the fd limit on OS X. See darwin_fd_limit for an explanation.\n-    unsafe { darwin_fd_limit::raise_fd_limit() }\n+    // see comment in other function (raising fd limits)\n+    prepare_for_lots_of_tests();\n \n     let f = Cell::new(f);\n "}]}