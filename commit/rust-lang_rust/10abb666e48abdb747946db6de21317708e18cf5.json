{"sha": "10abb666e48abdb747946db6de21317708e18cf5", "node_id": "MDY6Q29tbWl0NzI0NzEyOjEwYWJiNjY2ZTQ4YWJkYjc0Nzk0NmRiNmRlMjEzMTc3MDhlMThjZjU=", "commit": {"author": {"name": "Kaiyin Zhong", "email": "kindlychung@gmail.com", "date": "2016-04-26T15:40:59Z"}, "committer": {"name": "Kaiyin Zhong", "email": "kindlychung@gmail.com", "date": "2016-04-26T15:40:59Z"}, "message": "Update references-and-borrowing.md\n\nadd as 2nd example.", "tree": {"sha": "30104e022a7cd5db89e755c863717d061344abd7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/30104e022a7cd5db89e755c863717d061344abd7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/10abb666e48abdb747946db6de21317708e18cf5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/10abb666e48abdb747946db6de21317708e18cf5", "html_url": "https://github.com/rust-lang/rust/commit/10abb666e48abdb747946db6de21317708e18cf5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/10abb666e48abdb747946db6de21317708e18cf5/comments", "author": {"login": "kindlychung", "id": 995761, "node_id": "MDQ6VXNlcjk5NTc2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/995761?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kindlychung", "html_url": "https://github.com/kindlychung", "followers_url": "https://api.github.com/users/kindlychung/followers", "following_url": "https://api.github.com/users/kindlychung/following{/other_user}", "gists_url": "https://api.github.com/users/kindlychung/gists{/gist_id}", "starred_url": "https://api.github.com/users/kindlychung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kindlychung/subscriptions", "organizations_url": "https://api.github.com/users/kindlychung/orgs", "repos_url": "https://api.github.com/users/kindlychung/repos", "events_url": "https://api.github.com/users/kindlychung/events{/privacy}", "received_events_url": "https://api.github.com/users/kindlychung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kindlychung", "id": 995761, "node_id": "MDQ6VXNlcjk5NTc2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/995761?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kindlychung", "html_url": "https://github.com/kindlychung", "followers_url": "https://api.github.com/users/kindlychung/followers", "following_url": "https://api.github.com/users/kindlychung/following{/other_user}", "gists_url": "https://api.github.com/users/kindlychung/gists{/gist_id}", "starred_url": "https://api.github.com/users/kindlychung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kindlychung/subscriptions", "organizations_url": "https://api.github.com/users/kindlychung/orgs", "repos_url": "https://api.github.com/users/kindlychung/repos", "events_url": "https://api.github.com/users/kindlychung/events{/privacy}", "received_events_url": "https://api.github.com/users/kindlychung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a3f5d8aea1e43a1c5b0814dac407e6ddfab07417", "url": "https://api.github.com/repos/rust-lang/rust/commits/a3f5d8aea1e43a1c5b0814dac407e6ddfab07417", "html_url": "https://github.com/rust-lang/rust/commit/a3f5d8aea1e43a1c5b0814dac407e6ddfab07417"}], "stats": {"total": 18, "additions": 18, "deletions": 0}, "files": [{"sha": "67a8a82f2a33bc2db49f2f938919494dfa49cd46", "filename": "src/doc/book/references-and-borrowing.md", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/10abb666e48abdb747946db6de21317708e18cf5/src%2Fdoc%2Fbook%2Freferences-and-borrowing.md", "raw_url": "https://github.com/rust-lang/rust/raw/10abb666e48abdb747946db6de21317708e18cf5/src%2Fdoc%2Fbook%2Freferences-and-borrowing.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Fbook%2Freferences-and-borrowing.md?ref=10abb666e48abdb747946db6de21317708e18cf5", "patch": "@@ -61,6 +61,24 @@ let (v1, v2, answer) = foo(v1, v2);\n This is not idiomatic Rust, however, as it doesn\u2019t take advantage of borrowing. Here\u2019s\n the first step:\n \n+```rust\n+fn foo(v1: &Vec<i32>, v2: &Vec<i32>) -> i32 {\n+    // do stuff with v1 and v2\n+\n+    // return the answer\n+    42\n+}\n+\n+let v1 = vec![1, 2, 3];\n+let v2 = vec![1, 2, 3];\n+\n+let answer = foo(&v1, &v2);\n+\n+// we can use v1 and v2 here!\n+```\n+\n+A more concrete example:\n+\n ```rust\n fn main() {\n     // Don't worry if you don't understand how `fold` works, the point here is that an immutable reference is borrowed."}]}