{"sha": "7a55863c3dfda75dd51d2940b737818ba2fa2fcc", "node_id": "C_kwDOAAsO6NoAKDdhNTU4NjNjM2RmZGE3NWRkNTFkMjk0MGI3Mzc4MThiYTJmYTJmY2M", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-05-12T10:30:37Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-05-12T10:30:37Z"}, "message": "Auto merge of #12223 - Veykril:config-stuff, r=Veykril\n\ninternal: Rename primeCaches config keys", "tree": {"sha": "dc1c315e52410fd4bd04daec9384089f4b6173cb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/dc1c315e52410fd4bd04daec9384089f4b6173cb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7a55863c3dfda75dd51d2940b737818ba2fa2fcc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7a55863c3dfda75dd51d2940b737818ba2fa2fcc", "html_url": "https://github.com/rust-lang/rust/commit/7a55863c3dfda75dd51d2940b737818ba2fa2fcc", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7a55863c3dfda75dd51d2940b737818ba2fa2fcc/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d12130797741edf8d9c6a0233001eb10a11579b3", "url": "https://api.github.com/repos/rust-lang/rust/commits/d12130797741edf8d9c6a0233001eb10a11579b3", "html_url": "https://github.com/rust-lang/rust/commit/d12130797741edf8d9c6a0233001eb10a11579b3"}, {"sha": "84176f6b247bb549da064b68935e763aa751b112", "url": "https://api.github.com/repos/rust-lang/rust/commits/84176f6b247bb549da064b68935e763aa751b112", "html_url": "https://github.com/rust-lang/rust/commit/84176f6b247bb549da064b68935e763aa751b112"}], "stats": {"total": 70, "additions": 36, "deletions": 34}, "files": [{"sha": "d4257fb20668d68c701e74248e7ca606eabff3cd", "filename": "crates/rust-analyzer/src/config.rs", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/7a55863c3dfda75dd51d2940b737818ba2fa2fcc/crates%2Frust-analyzer%2Fsrc%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7a55863c3dfda75dd51d2940b737818ba2fa2fcc/crates%2Frust-analyzer%2Fsrc%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fconfig.rs?ref=7a55863c3dfda75dd51d2940b737818ba2fa2fcc", "patch": "@@ -57,6 +57,11 @@ config_data! {\n         /// Placeholder expression to use for missing expressions in assists.\n         assist_expressionFillDefault: ExprFillDefaultDef              = \"\\\"todo\\\"\",\n \n+        /// Warm up caches on project load.\n+        cachePriming_enable: bool = \"true\",\n+        /// How many worker threads to to handle priming caches. The default `0` means to pick automatically.\n+        cachePriming_numThreads: ParallelCachePrimingNumThreads = \"0\",\n+\n         /// Automatically refresh project info via `cargo metadata` on\n         /// `Cargo.toml` or `.cargo/config.toml` changes.\n         cargo_autoreload: bool           = \"true\",\n@@ -320,11 +325,6 @@ config_data! {\n         /// Whether to show `can't find Cargo.toml` error message.\n         notifications_cargoTomlNotFound: bool      = \"true\",\n \n-        /// Warm up caches on project load.\n-        primeCaches_enable: bool = \"true\",\n-        /// How many worker threads to to handle priming caches. The default `0` means to pick automatically.\n-        primeCaches_numThreads: ParallelPrimeCachesNumThreads = \"0\",\n-\n         /// Expand attribute macros. Requires `#rust-analyzer.procMacro.enable#` to be set.\n         procMacro_attributes_enable: bool = \"true\",\n         /// Enable support for procedural macros, implies `#rust-analyzer.cargo.buildScripts.enable#`.\n@@ -402,7 +402,7 @@ pub struct Config {\n     snippets: Vec<Snippet>,\n }\n \n-type ParallelPrimeCachesNumThreads = u8;\n+type ParallelCachePrimingNumThreads = u8;\n \n #[derive(Debug, Clone, Eq, PartialEq)]\n pub enum LinkedProject {\n@@ -716,7 +716,7 @@ impl Config {\n     }\n \n     pub fn prefill_caches(&self) -> bool {\n-        self.data.primeCaches_enable\n+        self.data.cachePriming_enable\n     }\n \n     pub fn location_link(&self) -> bool {\n@@ -1189,7 +1189,7 @@ impl Config {\n     }\n \n     pub fn prime_caches_num_threads(&self) -> u8 {\n-        match self.data.primeCaches_numThreads {\n+        match self.data.cachePriming_numThreads {\n             0 => num_cpus::get_physical().try_into().unwrap_or(u8::MAX),\n             n => n,\n         }\n@@ -1661,7 +1661,7 @@ fn field_props(field: &str, ty: &str, doc: &[&str], default: &str) -> serde_json\n                 \"Search for all symbols kinds\"\n             ],\n         },\n-        \"ParallelPrimeCachesNumThreads\" => set! {\n+        \"ParallelCachePrimingNumThreads\" => set! {\n             \"type\": \"number\",\n             \"minimum\": 0,\n             \"maximum\": 255"}, {"sha": "04b14f73db0b8f40421d7dbf57283c8678e0b3c3", "filename": "crates/rust-analyzer/src/config/patch_old_style.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/7a55863c3dfda75dd51d2940b737818ba2fa2fcc/crates%2Frust-analyzer%2Fsrc%2Fconfig%2Fpatch_old_style.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7a55863c3dfda75dd51d2940b737818ba2fa2fcc/crates%2Frust-analyzer%2Fsrc%2Fconfig%2Fpatch_old_style.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fconfig%2Fpatch_old_style.rs?ref=7a55863c3dfda75dd51d2940b737818ba2fa2fcc", "patch": "@@ -34,7 +34,8 @@ pub(super) fn patch_json_for_outdated_configs(json: &mut Value) {\n         assist.importMergeBehaviour -> imports.granularity.group;\n         assist.importGroup -> imports.group.enable;\n         assist.importPrefix -> imports.prefix;\n-        cache.warmup -> primeCaches.enable;\n+        primeCaches.enable -> cachePriming.enable;\n+        cache.warmup -> cachePriming.enable;\n         cargo.loadOutDirsFromCheck -> cargo.buildScripts.enable;\n         cargo.runBuildScripts -> cargo.buildScripts.enable;\n         cargo.runBuildScriptsCommand -> cargo.buildScripts.overrideCommand;\n@@ -50,7 +51,7 @@ pub(super) fn patch_json_for_outdated_configs(json: &mut Value) {\n         hover.linksInHover -> hover.links.enable;\n         hoverActions.linksInHover -> hover.links.enable;\n         hoverActions.debug -> hoverActions.debug.enable;\n-        hoverActions.enable -> hoverActions.enable.enable;\n+        hoverActions.enable -> hoverActions.enable;\n         hoverActions.gotoTypeDef -> hoverActions.gotoTypeDef.enable;\n         hoverActions.implementations -> hoverActions.implementations.enable;\n         hoverActions.references -> hoverActions.references.enable;"}, {"sha": "61c5867e73a0f2e1b843946102261f37f8e61ca9", "filename": "docs/user/generated_config.adoc", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/7a55863c3dfda75dd51d2940b737818ba2fa2fcc/docs%2Fuser%2Fgenerated_config.adoc", "raw_url": "https://github.com/rust-lang/rust/raw/7a55863c3dfda75dd51d2940b737818ba2fa2fcc/docs%2Fuser%2Fgenerated_config.adoc", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/docs%2Fuser%2Fgenerated_config.adoc?ref=7a55863c3dfda75dd51d2940b737818ba2fa2fcc", "patch": "@@ -3,6 +3,16 @@\n --\n Placeholder expression to use for missing expressions in assists.\n --\n+[[rust-analyzer.cachePriming.enable]]rust-analyzer.cachePriming.enable (default: `true`)::\n++\n+--\n+Warm up caches on project load.\n+--\n+[[rust-analyzer.cachePriming.numThreads]]rust-analyzer.cachePriming.numThreads (default: `0`)::\n++\n+--\n+How many worker threads to to handle priming caches. The default `0` means to pick automatically.\n+--\n [[rust-analyzer.cargo.autoreload]]rust-analyzer.cargo.autoreload (default: `true`)::\n +\n --\n@@ -477,16 +487,6 @@ Number of syntax trees rust-analyzer keeps in memory. Defaults to 128.\n --\n Whether to show `can't find Cargo.toml` error message.\n --\n-[[rust-analyzer.primeCaches.enable]]rust-analyzer.primeCaches.enable (default: `true`)::\n-+\n---\n-Warm up caches on project load.\n---\n-[[rust-analyzer.primeCaches.numThreads]]rust-analyzer.primeCaches.numThreads (default: `0`)::\n-+\n---\n-How many worker threads to to handle priming caches. The default `0` means to pick automatically.\n---\n [[rust-analyzer.procMacro.attributes.enable]]rust-analyzer.procMacro.attributes.enable (default: `true`)::\n +\n --"}, {"sha": "86766872a3201d83479d52513d2c13a8d374ccaf", "filename": "editors/code/package.json", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/7a55863c3dfda75dd51d2940b737818ba2fa2fcc/editors%2Fcode%2Fpackage.json", "raw_url": "https://github.com/rust-lang/rust/raw/7a55863c3dfda75dd51d2940b737818ba2fa2fcc/editors%2Fcode%2Fpackage.json", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fpackage.json?ref=7a55863c3dfda75dd51d2940b737818ba2fa2fcc", "patch": "@@ -381,6 +381,18 @@\n                         \"Fill missing expressions with reasonable defaults, `new` or `default` constructors.\"\n                     ]\n                 },\n+                \"rust-analyzer.cachePriming.enable\": {\n+                    \"markdownDescription\": \"Warm up caches on project load.\",\n+                    \"default\": true,\n+                    \"type\": \"boolean\"\n+                },\n+                \"rust-analyzer.cachePriming.numThreads\": {\n+                    \"markdownDescription\": \"How many worker threads to to handle priming caches. The default `0` means to pick automatically.\",\n+                    \"default\": 0,\n+                    \"type\": \"number\",\n+                    \"minimum\": 0,\n+                    \"maximum\": 255\n+                },\n                 \"rust-analyzer.cargo.autoreload\": {\n                     \"markdownDescription\": \"Automatically refresh project info via `cargo metadata` on\\n`Cargo.toml` or `.cargo/config.toml` changes.\",\n                     \"default\": true,\n@@ -918,18 +930,6 @@\n                     \"default\": true,\n                     \"type\": \"boolean\"\n                 },\n-                \"rust-analyzer.primeCaches.enable\": {\n-                    \"markdownDescription\": \"Warm up caches on project load.\",\n-                    \"default\": true,\n-                    \"type\": \"boolean\"\n-                },\n-                \"rust-analyzer.primeCaches.numThreads\": {\n-                    \"markdownDescription\": \"How many worker threads to to handle priming caches. The default `0` means to pick automatically.\",\n-                    \"default\": 0,\n-                    \"type\": \"number\",\n-                    \"minimum\": 0,\n-                    \"maximum\": 255\n-                },\n                 \"rust-analyzer.procMacro.attributes.enable\": {\n                     \"markdownDescription\": \"Expand attribute macros. Requires `#rust-analyzer.procMacro.enable#` to be set.\",\n                     \"default\": true,"}, {"sha": "7e79eaab8e90754b59ff6ba2ce43cbd3d4bdb17f", "filename": "editors/code/src/config.ts", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/7a55863c3dfda75dd51d2940b737818ba2fa2fcc/editors%2Fcode%2Fsrc%2Fconfig.ts", "raw_url": "https://github.com/rust-lang/rust/raw/7a55863c3dfda75dd51d2940b737818ba2fa2fcc/editors%2Fcode%2Fsrc%2Fconfig.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Fconfig.ts?ref=7a55863c3dfda75dd51d2940b737818ba2fa2fcc", "patch": "@@ -146,7 +146,8 @@ export async function updateConfig(config: vscode.WorkspaceConfiguration) {\n         [\"assist.importMergeBehaviour\", \"imports.granularity.group\",],\n         [\"assist.importGroup\", \"imports.group.enable\",],\n         [\"assist.importPrefix\", \"imports.prefix\",],\n-        [\"cache.warmup\", \"primeCaches.enable\",],\n+        [\"primeCaches.enable\", \"cachePriming.enable\",],\n+        [\"cache.warmup\", \"cachePriming.enable\",],\n         [\"cargo.loadOutDirsFromCheck\", \"cargo.buildScripts.enable\",],\n         [\"cargo.runBuildScripts\", \"cargo.buildScripts.enable\",],\n         [\"cargo.runBuildScriptsCommand\", \"cargo.buildScripts.overrideCommand\",],"}]}