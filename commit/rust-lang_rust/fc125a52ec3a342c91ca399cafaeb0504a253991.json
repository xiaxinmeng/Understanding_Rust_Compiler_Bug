{"sha": "fc125a52ec3a342c91ca399cafaeb0504a253991", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZjMTI1YTUyZWMzYTM0MmM5MWNhMzk5Y2FmYWViMDUwNGEyNTM5OTE=", "commit": {"author": {"name": "asquared31415", "email": "34665709+asquared31415@users.noreply.github.com", "date": "2021-08-30T00:08:40Z"}, "committer": {"name": "asquared31415", "email": "34665709+asquared31415@users.noreply.github.com", "date": "2021-08-30T00:22:19Z"}, "message": "emit specific warning to clarify that foreign items can't have no_mangle\nremove extra commented code\nDeduplicate some diagnostics code\nadd code symbols, machine applicable suggestion\nclarify error message", "tree": {"sha": "79601e9ccffd9cbc5c9a2cd84f4199666e8172a7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/79601e9ccffd9cbc5c9a2cd84f4199666e8172a7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fc125a52ec3a342c91ca399cafaeb0504a253991", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fc125a52ec3a342c91ca399cafaeb0504a253991", "html_url": "https://github.com/rust-lang/rust/commit/fc125a52ec3a342c91ca399cafaeb0504a253991", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fc125a52ec3a342c91ca399cafaeb0504a253991/comments", "author": {"login": "asquared31415", "id": 34665709, "node_id": "MDQ6VXNlcjM0NjY1NzA5", "avatar_url": "https://avatars.githubusercontent.com/u/34665709?v=4", "gravatar_id": "", "url": "https://api.github.com/users/asquared31415", "html_url": "https://github.com/asquared31415", "followers_url": "https://api.github.com/users/asquared31415/followers", "following_url": "https://api.github.com/users/asquared31415/following{/other_user}", "gists_url": "https://api.github.com/users/asquared31415/gists{/gist_id}", "starred_url": "https://api.github.com/users/asquared31415/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/asquared31415/subscriptions", "organizations_url": "https://api.github.com/users/asquared31415/orgs", "repos_url": "https://api.github.com/users/asquared31415/repos", "events_url": "https://api.github.com/users/asquared31415/events{/privacy}", "received_events_url": "https://api.github.com/users/asquared31415/received_events", "type": "User", "site_admin": false}, "committer": {"login": "asquared31415", "id": 34665709, "node_id": "MDQ6VXNlcjM0NjY1NzA5", "avatar_url": "https://avatars.githubusercontent.com/u/34665709?v=4", "gravatar_id": "", "url": "https://api.github.com/users/asquared31415", "html_url": "https://github.com/asquared31415", "followers_url": "https://api.github.com/users/asquared31415/followers", "following_url": "https://api.github.com/users/asquared31415/following{/other_user}", "gists_url": "https://api.github.com/users/asquared31415/gists{/gist_id}", "starred_url": "https://api.github.com/users/asquared31415/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/asquared31415/subscriptions", "organizations_url": "https://api.github.com/users/asquared31415/orgs", "repos_url": "https://api.github.com/users/asquared31415/repos", "events_url": "https://api.github.com/users/asquared31415/events{/privacy}", "received_events_url": "https://api.github.com/users/asquared31415/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2f662b14033c4369b0a7b5c2656592ef08edf434", "url": "https://api.github.com/repos/rust-lang/rust/commits/2f662b14033c4369b0a7b5c2656592ef08edf434", "html_url": "https://github.com/rust-lang/rust/commit/2f662b14033c4369b0a7b5c2656592ef08edf434"}], "stats": {"total": 102, "additions": 102, "deletions": 0}, "files": [{"sha": "fd438bdc9005ac5557c389bfa58ec7c9a5c860fe", "filename": "compiler/rustc_passes/src/check_attr.rs", "status": "modified", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/fc125a52ec3a342c91ca399cafaeb0504a253991/compiler%2Frustc_passes%2Fsrc%2Fcheck_attr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fc125a52ec3a342c91ca399cafaeb0504a253991/compiler%2Frustc_passes%2Fsrc%2Fcheck_attr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_passes%2Fsrc%2Fcheck_attr.rs?ref=fc125a52ec3a342c91ca399cafaeb0504a253991", "patch": "@@ -1331,6 +1331,36 @@ impl CheckAttrVisitor<'tcx> {\n             Target::Field | Target::Arm | Target::MacroDef => {\n                 self.inline_attr_str_error_with_macro_def(hir_id, attr, \"no_mangle\");\n             }\n+            // FIXME: #[no_mangle] was previously allowed on non-functions/statics, this should be an error\n+            // The error should specify that the item that is wrong is specifically a *foreign* fn/static\n+            // otherwise the error seems odd\n+            Target::ForeignFn | Target::ForeignStatic => {\n+                let foreign_item_kind = match target {\n+                    Target::ForeignFn => \"function\",\n+                    Target::ForeignStatic => \"static\",\n+                    _ => unreachable!(),\n+                };\n+                self.tcx.struct_span_lint_hir(UNUSED_ATTRIBUTES, hir_id, attr.span, |lint| {\n+                    lint.build(&format!(\n+                        \"`#[no_mangle]` has no effect on a foreign {}\",\n+                        foreign_item_kind\n+                    ))\n+                    .warn(\n+                        \"this was previously accepted by the compiler but is \\\n+                            being phased out; it will become a hard error in \\\n+                            a future release!\",\n+                    )\n+                    .span_label(*span, format!(\"foreign {}\", foreign_item_kind))\n+                    .note(\"symbol names in extern blocks are not mangled\")\n+                    .span_suggestion(\n+                        attr.span,\n+                        \"remove this attribute\",\n+                        String::new(),\n+                        Applicability::MachineApplicable,\n+                    )\n+                    .emit();\n+                });\n+            }\n             _ => {\n                 // FIXME: #[no_mangle] was previously allowed on non-functions/statics and some\n                 // crates used this, so only emit a warning."}, {"sha": "ab7c9824af03915711e99d77a94712d101983b5a", "filename": "src/test/ui/extern/extern-no-mangle.rs", "status": "added", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/fc125a52ec3a342c91ca399cafaeb0504a253991/src%2Ftest%2Fui%2Fextern%2Fextern-no-mangle.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fc125a52ec3a342c91ca399cafaeb0504a253991/src%2Ftest%2Fui%2Fextern%2Fextern-no-mangle.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fextern%2Fextern-no-mangle.rs?ref=fc125a52ec3a342c91ca399cafaeb0504a253991", "patch": "@@ -0,0 +1,30 @@\n+#![warn(unused_attributes)]\n+\n+// Tests that placing the #[no_mangle] attribute on a foreign fn or static emits\n+// a specialized warning.\n+// The previous warning only talks about a \"function or static\" but foreign fns/statics\n+// are also not allowed to have #[no_mangle]\n+\n+// build-pass\n+\n+extern \"C\" {\n+    #[no_mangle]\n+    //~^ WARNING `#[no_mangle]` has no effect on a foreign static\n+    //~^^ WARNING this was previously accepted by the compiler\n+    pub static FOO: u8;\n+\n+    #[no_mangle]\n+    //~^ WARNING `#[no_mangle]` has no effect on a foreign function\n+    //~^^ WARNING this was previously accepted by the compiler\n+    pub fn bar();\n+}\n+\n+fn no_new_warn() {\n+    // Should emit the generic \"not a function or static\" warning\n+    #[no_mangle]\n+    //~^ WARNING attribute should be applied to a free function, impl method or static\n+    //~^^ WARNING this was previously accepted by the compiler\n+    let x = 0_u8;\n+}\n+\n+fn main() {}"}, {"sha": "b56428141141dacbcb81946c6b5023bc61fb1a0d", "filename": "src/test/ui/extern/extern-no-mangle.stderr", "status": "added", "additions": 42, "deletions": 0, "changes": 42, "blob_url": "https://github.com/rust-lang/rust/blob/fc125a52ec3a342c91ca399cafaeb0504a253991/src%2Ftest%2Fui%2Fextern%2Fextern-no-mangle.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fc125a52ec3a342c91ca399cafaeb0504a253991/src%2Ftest%2Fui%2Fextern%2Fextern-no-mangle.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fextern%2Fextern-no-mangle.stderr?ref=fc125a52ec3a342c91ca399cafaeb0504a253991", "patch": "@@ -0,0 +1,42 @@\n+warning: attribute should be applied to a free function, impl method or static\n+  --> $DIR/extern-no-mangle.rs:24:5\n+   |\n+LL |     #[no_mangle]\n+   |     ^^^^^^^^^^^^\n+...\n+LL |     let x = 0_u8;\n+   |     ------------- not a free function, impl method or static\n+   |\n+note: the lint level is defined here\n+  --> $DIR/extern-no-mangle.rs:1:9\n+   |\n+LL | #![warn(unused_attributes)]\n+   |         ^^^^^^^^^^^^^^^^^\n+   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n+\n+warning: `#[no_mangle]` has no effect on a foreign static\n+  --> $DIR/extern-no-mangle.rs:11:5\n+   |\n+LL |     #[no_mangle]\n+   |     ^^^^^^^^^^^^ help: remove this attribute\n+...\n+LL |     pub static FOO: u8;\n+   |     ------------------- foreign static\n+   |\n+   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n+   = note: symbol names in extern blocks are not mangled\n+\n+warning: `#[no_mangle]` has no effect on a foreign function\n+  --> $DIR/extern-no-mangle.rs:16:5\n+   |\n+LL |     #[no_mangle]\n+   |     ^^^^^^^^^^^^ help: remove this attribute\n+...\n+LL |     pub fn bar();\n+   |     ------------- foreign function\n+   |\n+   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n+   = note: symbol names in extern blocks are not mangled\n+\n+warning: 3 warnings emitted\n+"}]}