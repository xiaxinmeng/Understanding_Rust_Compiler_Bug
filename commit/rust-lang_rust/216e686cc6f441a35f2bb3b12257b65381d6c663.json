{"sha": "216e686cc6f441a35f2bb3b12257b65381d6c663", "node_id": "MDY6Q29tbWl0NzI0NzEyOjIxNmU2ODZjYzZmNDQxYTM1ZjJiYjNiMTIyNTdiNjUzODFkNmM2NjM=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-04-17T12:20:03Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-04-17T12:20:03Z"}, "message": "Auto merge of #1344 - RalfJung:rustup, r=RalfJung\n\nrustup for FieldsShape::Primitive", "tree": {"sha": "9ca882bbe238a103b9b038af926c52f0845887d6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9ca882bbe238a103b9b038af926c52f0845887d6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/216e686cc6f441a35f2bb3b12257b65381d6c663", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/216e686cc6f441a35f2bb3b12257b65381d6c663", "html_url": "https://github.com/rust-lang/rust/commit/216e686cc6f441a35f2bb3b12257b65381d6c663", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/216e686cc6f441a35f2bb3b12257b65381d6c663/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "562d60242204d149fef3c580cb70e6ccbb0a3723", "url": "https://api.github.com/repos/rust-lang/rust/commits/562d60242204d149fef3c580cb70e6ccbb0a3723", "html_url": "https://github.com/rust-lang/rust/commit/562d60242204d149fef3c580cb70e6ccbb0a3723"}, {"sha": "6ad0187265dfbd9dc145042a5a809db688abbe7a", "url": "https://api.github.com/repos/rust-lang/rust/commits/6ad0187265dfbd9dc145042a5a809db688abbe7a", "html_url": "https://github.com/rust-lang/rust/commit/6ad0187265dfbd9dc145042a5a809db688abbe7a"}], "stats": {"total": 11, "additions": 5, "deletions": 6}, "files": [{"sha": "e9b00f649776853dcdd29c232a9fc1ed72bb4238", "filename": "rust-version", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/216e686cc6f441a35f2bb3b12257b65381d6c663/rust-version", "raw_url": "https://github.com/rust-lang/rust/raw/216e686cc6f441a35f2bb3b12257b65381d6c663/rust-version", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/rust-version?ref=216e686cc6f441a35f2bb3b12257b65381d6c663", "patch": "@@ -1 +1 @@\n-df768c5c8fcb361c4dc94b4c776d6a78c12862e1\n+b2c1a606feb1fbdb0ac0acba76f881ef172ed474"}, {"sha": "40a33f09a83c4f5d9bbee1ee326bd0641de0bdf6", "filename": "src/helpers.rs", "status": "modified", "additions": 4, "deletions": 5, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/216e686cc6f441a35f2bb3b12257b65381d6c663/src%2Fhelpers.rs", "raw_url": "https://github.com/rust-lang/rust/raw/216e686cc6f441a35f2bb3b12257b65381d6c663/src%2Fhelpers.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fhelpers.rs?ref=216e686cc6f441a35f2bb3b12257b65381d6c663", "patch": "@@ -1,5 +1,6 @@\n use std::convert::TryFrom;\n use std::mem;\n+use std::num::NonZeroUsize;\n \n use log::trace;\n \n@@ -333,17 +334,15 @@ pub trait EvalContextExt<'mir, 'tcx: 'mir>: crate::MiriEvalContextExt<'mir, 'tcx\n                         places.sort_by_key(|place| place.ptr.assert_ptr().offset);\n                         self.walk_aggregate(place, places.into_iter().map(Ok))\n                     }\n-                    FieldsShape::Union { .. } => {\n+                    FieldsShape::Union { .. } | FieldsShape::Primitive => {\n                         // Uh, what?\n-                        bug!(\"a union is not an aggregate we should ever visit\")\n+                        bug!(\"unions/primitives are not aggregates we should ever visit\")\n                     }\n                 }\n             }\n \n             // We have to do *something* for unions.\n-            fn visit_union(&mut self, v: MPlaceTy<'tcx, Tag>, fields: usize) -> InterpResult<'tcx> {\n-                assert!(fields > 0); // we should never reach \"pseudo-unions\" with 0 fields, like primitives\n-\n+            fn visit_union(&mut self, v: MPlaceTy<'tcx, Tag>, _fields: NonZeroUsize) -> InterpResult<'tcx> {\n                 // With unions, we fall back to whatever the type says, to hopefully be consistent\n                 // with LLVM IR.\n                 // FIXME: are we consistent, and is this really the behavior we want?"}]}