{"sha": "7111c27cec76e88cbb485946881a8d6204bd8b8e", "node_id": "C_kwDOAAsO6NoAKDcxMTFjMjdjZWM3NmU4OGNiYjQ4NTk0Njg4MWE4ZDYyMDRiZDhiOGU", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2022-01-06T12:41:02Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-01-06T12:41:02Z"}, "message": "Merge #11211\n\n11211: fix: Fix parsing of `#[derive]` paths r=jonas-schievink a=jonas-schievink\n\nCurrently this code produces an empty derive path for every `,`, which makes the IDE layer resolve derive paths to the wrong derive macro in the list. Skip `,`s to fix that. (nameres just ignored them, so it didn't cause problems there)\r\n\r\nbors r+\n\nCo-authored-by: Jonas Schievink <jonas.schievink@ferrous-systems.com>", "tree": {"sha": "b69174214188d3b7033c858cb79dab32ba47d556", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b69174214188d3b7033c858cb79dab32ba47d556"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7111c27cec76e88cbb485946881a8d6204bd8b8e", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJh1uNeCRBK7hj4Ov3rIwAAdZ8IADr7L2zHneZLFggboZ1yXW8V\nOlmrO1s9qpLPcxxwM/Cw7mC5KHEKzjyVWKARt2qxlEO/AoapIBllfKOSJY938Ihl\npyoFhQr5DEqIIC1diQZxVodjKsZ13s/+2jgmzZ7+Zf3w/1ynUgDwty+YcQfK2P8u\nxFW4HKQm2PfclkfNcRuGf+4YLFTZ0xRlraEygCsvC6ttfRLPGobd8xw1ZPloM4Hw\nqP+UHhGTnaNZ64uHV8YPTk0y8bwoN192FHcUG3d/wUSXamxOgCgX5e7/1DkIewRi\nZoyh6XIff0kFOTDIP9MvjuhjM2R2DeX03wOfJmKNWY5CXgFCAYqQwhM1RjcEyY0=\n=vaeP\n-----END PGP SIGNATURE-----\n", "payload": "tree b69174214188d3b7033c858cb79dab32ba47d556\nparent 4a1e4eed65762e6685d7ddf0a4599cc6ed502ad2\nparent b1d6aea3946ae9f52c6ecd0124ab31f6f74f7e2f\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1641472862 +0000\ncommitter GitHub <noreply@github.com> 1641472862 +0000\n\nMerge #11211\n\n11211: fix: Fix parsing of `#[derive]` paths r=jonas-schievink a=jonas-schievink\n\nCurrently this code produces an empty derive path for every `,`, which makes the IDE layer resolve derive paths to the wrong derive macro in the list. Skip `,`s to fix that. (nameres just ignored them, so it didn't cause problems there)\r\n\r\nbors r+\n\nCo-authored-by: Jonas Schievink <jonas.schievink@ferrous-systems.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7111c27cec76e88cbb485946881a8d6204bd8b8e", "html_url": "https://github.com/rust-lang/rust/commit/7111c27cec76e88cbb485946881a8d6204bd8b8e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7111c27cec76e88cbb485946881a8d6204bd8b8e/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4a1e4eed65762e6685d7ddf0a4599cc6ed502ad2", "url": "https://api.github.com/repos/rust-lang/rust/commits/4a1e4eed65762e6685d7ddf0a4599cc6ed502ad2", "html_url": "https://github.com/rust-lang/rust/commit/4a1e4eed65762e6685d7ddf0a4599cc6ed502ad2"}, {"sha": "b1d6aea3946ae9f52c6ecd0124ab31f6f74f7e2f", "url": "https://api.github.com/repos/rust-lang/rust/commits/b1d6aea3946ae9f52c6ecd0124ab31f6f74f7e2f", "html_url": "https://github.com/rust-lang/rust/commit/b1d6aea3946ae9f52c6ecd0124ab31f6f74f7e2f"}], "stats": {"total": 1, "additions": 1, "deletions": 0}, "files": [{"sha": "b0be892c7d3a0811a5957ebbaceaf13cbfe4b862", "filename": "crates/hir_def/src/attr.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/7111c27cec76e88cbb485946881a8d6204bd8b8e/crates%2Fhir_def%2Fsrc%2Fattr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7111c27cec76e88cbb485946881a8d6204bd8b8e/crates%2Fhir_def%2Fsrc%2Fattr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_def%2Fsrc%2Fattr.rs?ref=7111c27cec76e88cbb485946881a8d6204bd8b8e", "patch": "@@ -737,6 +737,7 @@ impl Attr {\n                 matches!(tt, tt::TokenTree::Leaf(tt::Leaf::Punct(Punct { char: ',', .. })))\n             })\n             .into_iter()\n+            .filter(|(comma, _)| !*comma)\n             .map(|(_, tts)| {\n                 let segments = tts.filter_map(|tt| match tt {\n                     tt::TokenTree::Leaf(tt::Leaf::Ident(id)) => Some(id.as_name()),"}]}