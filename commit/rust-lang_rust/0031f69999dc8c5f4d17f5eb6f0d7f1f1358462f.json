{"sha": "0031f69999dc8c5f4d17f5eb6f0d7f1f1358462f", "node_id": "C_kwDOAAsO6NoAKDAwMzFmNjk5OTlkYzhjNWY0ZDE3ZjVlYjZmMGQ3ZjFmMTM1ODQ2MmY", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-03-30T16:04:14Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-03-30T16:04:14Z"}, "message": "Auto merge of #8592 - c410-f3r:stuff, r=flip1995\n\nDo not fire `panic` in a constant environment\n\nLet rustc handle panics in constant environments.\n\nSince https://github.com/rust-lang/rust-clippy/issues/8348 I thought that such modification would require a lot of work but thanks to https://github.com/rust-lang/rust-clippy/pull/8588 I now know that it is not the case.\n\nchangelog: [`panic`]: No longer lint in constant context. `rustc` already handles this.", "tree": {"sha": "ab6a8aa3fce747dc70d3a7f9b1583e09f130ae08", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ab6a8aa3fce747dc70d3a7f9b1583e09f130ae08"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0031f69999dc8c5f4d17f5eb6f0d7f1f1358462f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0031f69999dc8c5f4d17f5eb6f0d7f1f1358462f", "html_url": "https://github.com/rust-lang/rust/commit/0031f69999dc8c5f4d17f5eb6f0d7f1f1358462f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0031f69999dc8c5f4d17f5eb6f0d7f1f1358462f/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e1ddf29ee3e722942653525f58147c5d88e92492", "url": "https://api.github.com/repos/rust-lang/rust/commits/e1ddf29ee3e722942653525f58147c5d88e92492", "html_url": "https://github.com/rust-lang/rust/commit/e1ddf29ee3e722942653525f58147c5d88e92492"}, {"sha": "af8ed04e094e78316de9f37b926c9c4750bbddab", "url": "https://api.github.com/repos/rust-lang/rust/commits/af8ed04e094e78316de9f37b926c9c4750bbddab", "html_url": "https://github.com/rust-lang/rust/commit/af8ed04e094e78316de9f37b926c9c4750bbddab"}], "stats": {"total": 53, "additions": 36, "deletions": 17}, "files": [{"sha": "2f3007658ea6296f8e2b7b1c541f0224cc10fca0", "filename": "clippy_lints/src/panic_unimplemented.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/0031f69999dc8c5f4d17f5eb6f0d7f1f1358462f/clippy_lints%2Fsrc%2Fpanic_unimplemented.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0031f69999dc8c5f4d17f5eb6f0d7f1f1358462f/clippy_lints%2Fsrc%2Fpanic_unimplemented.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fpanic_unimplemented.rs?ref=0031f69999dc8c5f4d17f5eb6f0d7f1f1358462f", "patch": "@@ -78,6 +78,10 @@ impl<'tcx> LateLintPass<'tcx> for PanicUnimplemented {\n     fn check_expr(&mut self, cx: &LateContext<'tcx>, expr: &'tcx Expr<'_>) {\n         let Some(macro_call) = root_macro_call_first_node(cx, expr) else { return };\n         if is_panic(cx, macro_call.def_id) {\n+            if cx.tcx.hir().is_inside_const_context(expr.hir_id) {\n+                return;\n+            }\n+\n             span_lint(\n                 cx,\n                 PANIC,"}, {"sha": "12a0c776ae2fd6feb90371be57be32ddd59379de", "filename": "tests/ui/panicking_macros.rs", "status": "modified", "additions": 16, "deletions": 1, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/0031f69999dc8c5f4d17f5eb6f0d7f1f1358462f/tests%2Fui%2Fpanicking_macros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0031f69999dc8c5f4d17f5eb6f0d7f1f1358462f/tests%2Fui%2Fpanicking_macros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fpanicking_macros.rs?ref=0031f69999dc8c5f4d17f5eb6f0d7f1f1358462f", "patch": "@@ -1,8 +1,23 @@\n-#![warn(clippy::unimplemented, clippy::unreachable, clippy::todo, clippy::panic)]\n #![allow(clippy::assertions_on_constants, clippy::eq_op)]\n+#![feature(inline_const)]\n+#![warn(clippy::unimplemented, clippy::unreachable, clippy::todo, clippy::panic)]\n \n extern crate core;\n \n+const _: () = {\n+    if 1 == 0 {\n+        panic!(\"A balanced diet means a cupcake in each hand\");\n+    }\n+};\n+\n+fn inline_const() {\n+    let _ = const {\n+        if 1 == 0 {\n+            panic!(\"When nothing goes right, go left\")\n+        }\n+    };\n+}\n+\n fn panic() {\n     let a = 2;\n     panic!();"}, {"sha": "4ceb6d1440f61c58d718ae051124d8e7c12285c4", "filename": "tests/ui/panicking_macros.stderr", "status": "modified", "additions": 16, "deletions": 16, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/0031f69999dc8c5f4d17f5eb6f0d7f1f1358462f/tests%2Fui%2Fpanicking_macros.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/0031f69999dc8c5f4d17f5eb6f0d7f1f1358462f/tests%2Fui%2Fpanicking_macros.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fpanicking_macros.stderr?ref=0031f69999dc8c5f4d17f5eb6f0d7f1f1358462f", "patch": "@@ -1,103 +1,103 @@\n error: `panic` should not be present in production code\n-  --> $DIR/panicking_macros.rs:8:5\n+  --> $DIR/panicking_macros.rs:23:5\n    |\n LL |     panic!();\n    |     ^^^^^^^^\n    |\n    = note: `-D clippy::panic` implied by `-D warnings`\n \n error: `panic` should not be present in production code\n-  --> $DIR/panicking_macros.rs:9:5\n+  --> $DIR/panicking_macros.rs:24:5\n    |\n LL |     panic!(\"message\");\n    |     ^^^^^^^^^^^^^^^^^\n \n error: `panic` should not be present in production code\n-  --> $DIR/panicking_macros.rs:10:5\n+  --> $DIR/panicking_macros.rs:25:5\n    |\n LL |     panic!(\"{} {}\", \"panic with\", \"multiple arguments\");\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: `todo` should not be present in production code\n-  --> $DIR/panicking_macros.rs:16:5\n+  --> $DIR/panicking_macros.rs:31:5\n    |\n LL |     todo!();\n    |     ^^^^^^^\n    |\n    = note: `-D clippy::todo` implied by `-D warnings`\n \n error: `todo` should not be present in production code\n-  --> $DIR/panicking_macros.rs:17:5\n+  --> $DIR/panicking_macros.rs:32:5\n    |\n LL |     todo!(\"message\");\n    |     ^^^^^^^^^^^^^^^^\n \n error: `todo` should not be present in production code\n-  --> $DIR/panicking_macros.rs:18:5\n+  --> $DIR/panicking_macros.rs:33:5\n    |\n LL |     todo!(\"{} {}\", \"panic with\", \"multiple arguments\");\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: `unimplemented` should not be present in production code\n-  --> $DIR/panicking_macros.rs:24:5\n+  --> $DIR/panicking_macros.rs:39:5\n    |\n LL |     unimplemented!();\n    |     ^^^^^^^^^^^^^^^^\n    |\n    = note: `-D clippy::unimplemented` implied by `-D warnings`\n \n error: `unimplemented` should not be present in production code\n-  --> $DIR/panicking_macros.rs:25:5\n+  --> $DIR/panicking_macros.rs:40:5\n    |\n LL |     unimplemented!(\"message\");\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: `unimplemented` should not be present in production code\n-  --> $DIR/panicking_macros.rs:26:5\n+  --> $DIR/panicking_macros.rs:41:5\n    |\n LL |     unimplemented!(\"{} {}\", \"panic with\", \"multiple arguments\");\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: usage of the `unreachable!` macro\n-  --> $DIR/panicking_macros.rs:32:5\n+  --> $DIR/panicking_macros.rs:47:5\n    |\n LL |     unreachable!();\n    |     ^^^^^^^^^^^^^^\n    |\n    = note: `-D clippy::unreachable` implied by `-D warnings`\n \n error: usage of the `unreachable!` macro\n-  --> $DIR/panicking_macros.rs:33:5\n+  --> $DIR/panicking_macros.rs:48:5\n    |\n LL |     unreachable!(\"message\");\n    |     ^^^^^^^^^^^^^^^^^^^^^^^\n \n error: usage of the `unreachable!` macro\n-  --> $DIR/panicking_macros.rs:34:5\n+  --> $DIR/panicking_macros.rs:49:5\n    |\n LL |     unreachable!(\"{} {}\", \"panic with\", \"multiple arguments\");\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: `panic` should not be present in production code\n-  --> $DIR/panicking_macros.rs:40:5\n+  --> $DIR/panicking_macros.rs:55:5\n    |\n LL |     panic!();\n    |     ^^^^^^^^\n \n error: `todo` should not be present in production code\n-  --> $DIR/panicking_macros.rs:41:5\n+  --> $DIR/panicking_macros.rs:56:5\n    |\n LL |     todo!();\n    |     ^^^^^^^\n \n error: `unimplemented` should not be present in production code\n-  --> $DIR/panicking_macros.rs:42:5\n+  --> $DIR/panicking_macros.rs:57:5\n    |\n LL |     unimplemented!();\n    |     ^^^^^^^^^^^^^^^^\n \n error: usage of the `unreachable!` macro\n-  --> $DIR/panicking_macros.rs:43:5\n+  --> $DIR/panicking_macros.rs:58:5\n    |\n LL |     unreachable!();\n    |     ^^^^^^^^^^^^^^"}]}