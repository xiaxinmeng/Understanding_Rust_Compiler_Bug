{"sha": "21c1571e79e7f25f1a683befee33758c91693b6a", "node_id": "C_kwDOAAsO6NoAKDIxYzE1NzFlNzllN2YyNWYxYTY4M2JlZmVlMzM3NThjOTE2OTNiNmE", "commit": {"author": {"name": "David Tolnay", "email": "dtolnay@gmail.com", "date": "2022-01-20T02:58:33Z"}, "committer": {"name": "David Tolnay", "email": "dtolnay@gmail.com", "date": "2022-01-20T03:04:36Z"}, "message": "Deduplicate branches of print_break implementation", "tree": {"sha": "bb083e433dc5d7f3642ac9848f2e01d9dfc856b0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bb083e433dc5d7f3642ac9848f2e01d9dfc856b0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/21c1571e79e7f25f1a683befee33758c91693b6a", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEERijF2Cz/ZdaBZKeK+boUO5X/bYIFAmHo0UQACgkQ+boUO5X/\nbYLN3w/8CHqMHarY3rqSr/s71JaFQMJCozAzdmjCrgg+hM1DBFMsDv8wt4IUi58K\nqUjYGg4GvVvkVCkjOCjeAyiekNKZ4rmRv84kgs8DhnsFFEUyjY2P7G7thGUKh7xP\nw2chd6zMy2mQIYT34lkyAty6otZWuXof3rnjpA5g3uJdWAdfgif3lZmlA9pBGvvi\nOsmmzwbP8cZLVu+ngfFuHjl91pEy7E3r/7DURkeI2n7jqjIMFLuRrUCe2ngYKYOf\nnRAQ8nEnr7yhh5ePtRXgK76fojYqYsjcxPOJJbnGaoMYH31e8neGLgIf4/e3V/Xa\ndC7IeeOE/z9hSrCzpf+S9QjOivCvdl543q2JCeJmI/YAmMaSCvBupKZ3b41psTIW\n89XL/KwfQuhX/q3H+X/87ND1Goz3pdmk3uRBuuut5cbWjA421BftPLMA900DRfCh\n+vSf7Ej3s8zmtJ6JkTZr9j5j4B+ar/bgeZe+Xmx80ivf9dZTGKFtZxpvyOGQt95X\nXkrNmGg7y3mJvoGBV6AzFk/zMMny7q2PDVEyz2OZjR0LfylYRJMr6MjUV68JW7uD\nSeeD7gc/tbre4WSnt0ZZvx0ic3sTmm8H6jfqqp5Db5QdiAAAxHm0bIkW44HbPvbB\nVitWCglv89HodFahz4ATNY1jyV/3kPNqCbbOYzj3tH2Q+KCUhUg=\n=mRf+\n-----END PGP SIGNATURE-----", "payload": "tree bb083e433dc5d7f3642ac9848f2e01d9dfc856b0\nparent 51eeb82d9db71bfb90ed6e0149d032787bcb3ee6\nauthor David Tolnay <dtolnay@gmail.com> 1642647513 -0800\ncommitter David Tolnay <dtolnay@gmail.com> 1642647876 -0800\n\nDeduplicate branches of print_break implementation\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/21c1571e79e7f25f1a683befee33758c91693b6a", "html_url": "https://github.com/rust-lang/rust/commit/21c1571e79e7f25f1a683befee33758c91693b6a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/21c1571e79e7f25f1a683befee33758c91693b6a/comments", "author": {"login": "dtolnay", "id": 1940490, "node_id": "MDQ6VXNlcjE5NDA0OTA=", "avatar_url": "https://avatars.githubusercontent.com/u/1940490?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dtolnay", "html_url": "https://github.com/dtolnay", "followers_url": "https://api.github.com/users/dtolnay/followers", "following_url": "https://api.github.com/users/dtolnay/following{/other_user}", "gists_url": "https://api.github.com/users/dtolnay/gists{/gist_id}", "starred_url": "https://api.github.com/users/dtolnay/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dtolnay/subscriptions", "organizations_url": "https://api.github.com/users/dtolnay/orgs", "repos_url": "https://api.github.com/users/dtolnay/repos", "events_url": "https://api.github.com/users/dtolnay/events{/privacy}", "received_events_url": "https://api.github.com/users/dtolnay/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dtolnay", "id": 1940490, "node_id": "MDQ6VXNlcjE5NDA0OTA=", "avatar_url": "https://avatars.githubusercontent.com/u/1940490?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dtolnay", "html_url": "https://github.com/dtolnay", "followers_url": "https://api.github.com/users/dtolnay/followers", "following_url": "https://api.github.com/users/dtolnay/following{/other_user}", "gists_url": "https://api.github.com/users/dtolnay/gists{/gist_id}", "starred_url": "https://api.github.com/users/dtolnay/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dtolnay/subscriptions", "organizations_url": "https://api.github.com/users/dtolnay/orgs", "repos_url": "https://api.github.com/users/dtolnay/repos", "events_url": "https://api.github.com/users/dtolnay/events{/privacy}", "received_events_url": "https://api.github.com/users/dtolnay/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "51eeb82d9db71bfb90ed6e0149d032787bcb3ee6", "url": "https://api.github.com/repos/rust-lang/rust/commits/51eeb82d9db71bfb90ed6e0149d032787bcb3ee6", "html_url": "https://github.com/rust-lang/rust/commit/51eeb82d9db71bfb90ed6e0149d032787bcb3ee6"}], "stats": {"total": 33, "additions": 14, "deletions": 19}, "files": [{"sha": "82c40868d18f5c47f14b7364dccb0cda6f850fb8", "filename": "compiler/rustc_ast_pretty/src/pp.rs", "status": "modified", "additions": 14, "deletions": 19, "changes": 33, "blob_url": "https://github.com/rust-lang/rust/blob/21c1571e79e7f25f1a683befee33758c91693b6a/compiler%2Frustc_ast_pretty%2Fsrc%2Fpp.rs", "raw_url": "https://github.com/rust-lang/rust/raw/21c1571e79e7f25f1a683befee33758c91693b6a/compiler%2Frustc_ast_pretty%2Fsrc%2Fpp.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_ast_pretty%2Fsrc%2Fpp.rs?ref=21c1571e79e7f25f1a683befee33758c91693b6a", "patch": "@@ -385,26 +385,21 @@ impl Printer {\n     }\n \n     fn print_break(&mut self, token: BreakToken, size: isize) {\n-        match self.get_top() {\n-            PrintFrame::Fits => {\n-                self.pending_indentation += token.blank_space;\n-                self.space -= token.blank_space;\n-            }\n-            PrintFrame::Broken { offset, breaks: Breaks::Consistent } => {\n-                self.out.push('\\n');\n-                self.pending_indentation = offset + token.offset;\n-                self.space = self.margin - (offset + token.offset);\n-            }\n-            PrintFrame::Broken { offset, breaks: Breaks::Inconsistent } => {\n-                if size > self.space {\n-                    self.out.push('\\n');\n-                    self.pending_indentation = offset + token.offset;\n-                    self.space = self.margin - (offset + token.offset);\n-                } else {\n-                    self.pending_indentation += token.blank_space;\n-                    self.space -= token.blank_space;\n+        let break_offset =\n+            match self.get_top() {\n+                PrintFrame::Fits => None,\n+                PrintFrame::Broken { offset, breaks: Breaks::Consistent } => Some(offset),\n+                PrintFrame::Broken { offset, breaks: Breaks::Inconsistent } => {\n+                    if size > self.space { Some(offset) } else { None }\n                 }\n-            }\n+            };\n+        if let Some(offset) = break_offset {\n+            self.out.push('\\n');\n+            self.pending_indentation = offset + token.offset;\n+            self.space = self.margin - (offset + token.offset);\n+        } else {\n+            self.pending_indentation += token.blank_space;\n+            self.space -= token.blank_space;\n         }\n     }\n "}]}