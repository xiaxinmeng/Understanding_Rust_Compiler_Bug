{"sha": "ae0143007839fada3fadd790dc9b8c1a36c61dee", "node_id": "C_kwDOAAsO6NoAKGFlMDE0MzAwNzgzOWZhZGEzZmFkZDc5MGRjOWI4YzFhMzZjNjFkZWU", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2023-02-21T22:02:00Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2023-02-21T22:02:00Z"}, "message": "Rollup merge of #108295 - compiler-errors:wtf-is-this, r=cjgillot\n\nUse DefKind to give more item kind information during BindingObligation note\n\nThe current label says \"required by a bound in this\". When I see that label, my immediate impression is \"this... **what**?\". It feels like it was cut short.\n\nAlternative to this would be saying \"in this item\", but adding the item kind is strictly more informational and adds very little overhead to the existing error presentation.", "tree": {"sha": "cd377aac8ca4ab978e86c1489f3d10d68e2d48eb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/cd377aac8ca4ab978e86c1489f3d10d68e2d48eb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ae0143007839fada3fadd790dc9b8c1a36c61dee", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJj9T9YCRBK7hj4Ov3rIwAAr/EIAAa0iw9MBL3VkW77UkrOp+UM\n8Fdm9QWlX9TBqWx/o///8vcxsMj+O2npmYa/6ZYv27mXcz8OZGUGKh9nlVxqudRB\nC5Z4n7z3g42vhqsR3HfJmVATLQZW6H6mkkJvptZyE0f5FW1/5tA7CKJgHjMzP5JR\nsKam/Hio2xFZ8XxzC2L/sz141Lq+UtyNhLaLRu1is0HTc4hANvFNDfZDgyl1+LN3\nlAeZSCiFeRPNOoCh5pCoocEWz6Gkgt4IWguKlLfB8boc9Ebs4rlV7LiB+DYD59sE\nlYPoiYakNTUZYgqWqcQ09he0C1+PdH/k4D1kPHbyO8rMxFoJ1YrbLMi4d2WfjSg=\n=HAQv\n-----END PGP SIGNATURE-----\n", "payload": "tree cd377aac8ca4ab978e86c1489f3d10d68e2d48eb\nparent 8a5843f07f20ae70b8caa24d78857ef221b54ccb\nparent a58682d7ccef5248ae814e9ec8c851cf019fd787\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1677016920 +0100\ncommitter GitHub <noreply@github.com> 1677016920 +0100\n\nRollup merge of #108295 - compiler-errors:wtf-is-this, r=cjgillot\n\nUse DefKind to give more item kind information during BindingObligation note\n\nThe current label says \"required by a bound in this\". When I see that label, my immediate impression is \"this... **what**?\". It feels like it was cut short.\n\nAlternative to this would be saying \"in this item\", but adding the item kind is strictly more informational and adds very little overhead to the existing error presentation.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ae0143007839fada3fadd790dc9b8c1a36c61dee", "html_url": "https://github.com/rust-lang/rust/commit/ae0143007839fada3fadd790dc9b8c1a36c61dee", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ae0143007839fada3fadd790dc9b8c1a36c61dee/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8a5843f07f20ae70b8caa24d78857ef221b54ccb", "url": "https://api.github.com/repos/rust-lang/rust/commits/8a5843f07f20ae70b8caa24d78857ef221b54ccb", "html_url": "https://github.com/rust-lang/rust/commit/8a5843f07f20ae70b8caa24d78857ef221b54ccb"}, {"sha": "a58682d7ccef5248ae814e9ec8c851cf019fd787", "url": "https://api.github.com/repos/rust-lang/rust/commits/a58682d7ccef5248ae814e9ec8c851cf019fd787", "html_url": "https://github.com/rust-lang/rust/commit/a58682d7ccef5248ae814e9ec8c851cf019fd787"}], "stats": {"total": 380, "additions": 193, "deletions": 187}, "files": [{"sha": "824264c21d0d083839332a1b147eee600d268a2f", "filename": "compiler/rustc_trait_selection/src/traits/error_reporting/suggestions.rs", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/ae0143007839fada3fadd790dc9b8c1a36c61dee/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Ferror_reporting%2Fsuggestions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ae0143007839fada3fadd790dc9b8c1a36c61dee/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Ferror_reporting%2Fsuggestions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Ferror_reporting%2Fsuggestions.rs?ref=ae0143007839fada3fadd790dc9b8c1a36c61dee", "patch": "@@ -2784,7 +2784,13 @@ impl<'tcx> TypeErrCtxtExt<'tcx> for TypeErrCtxt<'_, 'tcx> {\n                             _ => true,\n                         };\n                     if ident.span.is_visible(sm) && !ident.span.overlaps(span) && !same_line {\n-                        multispan.push_span_label(ident.span, \"required by a bound in this\");\n+                        multispan.push_span_label(\n+                            ident.span,\n+                            format!(\n+                                \"required by a bound in this {}\",\n+                                tcx.def_kind(item_def_id).descr(item_def_id)\n+                            ),\n+                        );\n                     }\n                 }\n                 let descr = format!(\"required by a bound in `{item_name}`\");"}, {"sha": "3e1142d5d9560b3f3432b536b859267f30abb249", "filename": "tests/ui/associated-types/associated-types-eq-hr.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ae0143007839fada3fadd790dc9b8c1a36c61dee/tests%2Fui%2Fassociated-types%2Fassociated-types-eq-hr.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ae0143007839fada3fadd790dc9b8c1a36c61dee/tests%2Fui%2Fassociated-types%2Fassociated-types-eq-hr.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fassociated-types%2Fassociated-types-eq-hr.stderr?ref=ae0143007839fada3fadd790dc9b8c1a36c61dee", "patch": "@@ -15,7 +15,7 @@ note: required by a bound in `foo`\n   --> $DIR/associated-types-eq-hr.rs:45:36\n    |\n LL | fn foo<T>()\n-   |    --- required by a bound in this\n+   |    --- required by a bound in this function\n LL | where\n LL |     T: for<'x> TheTrait<&'x isize, A = &'x isize>,\n    |                                    ^^^^^^^^^^^^^ required by this bound in `foo`\n@@ -37,7 +37,7 @@ note: required by a bound in `bar`\n   --> $DIR/associated-types-eq-hr.rs:52:36\n    |\n LL | fn bar<T>()\n-   |    --- required by a bound in this\n+   |    --- required by a bound in this function\n LL | where\n LL |     T: for<'x> TheTrait<&'x isize, A = &'x usize>,\n    |                                    ^^^^^^^^^^^^^ required by this bound in `bar`"}, {"sha": "2485758757b9bd80b49aee2a03b4c8a3b48d4117", "filename": "tests/ui/associated-types/defaults-suitability.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/ae0143007839fada3fadd790dc9b8c1a36c61dee/tests%2Fui%2Fassociated-types%2Fdefaults-suitability.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ae0143007839fada3fadd790dc9b8c1a36c61dee/tests%2Fui%2Fassociated-types%2Fdefaults-suitability.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fassociated-types%2Fdefaults-suitability.stderr?ref=ae0143007839fada3fadd790dc9b8c1a36c61dee", "patch": "@@ -27,7 +27,7 @@ LL |     Self::Ty: Clone,\n    |               ^^^^^ required by this bound in `Tr2::Ty`\n LL | {\n LL |     type Ty = NotClone;\n-   |          -- required by a bound in this\n+   |          -- required by a bound in this associated type\n help: consider annotating `NotClone` with `#[derive(Clone)]`\n    |\n LL | #[derive(Clone)]\n@@ -75,7 +75,7 @@ LL |     Self::Assoc: IsU8<Self::Assoc>,\n    |                  ^^^^^^^^^^^^^^^^^ required by this bound in `D::Assoc`\n ...\n LL |     type Assoc = NotClone;\n-   |          ----- required by a bound in this\n+   |          ----- required by a bound in this associated type\n \n error[E0277]: the trait bound `<Self as Foo2<T>>::Baz: Clone` is not satisfied\n   --> $DIR/defaults-suitability.rs:65:23\n@@ -124,7 +124,7 @@ LL |     Self::Baz: Clone,\n    |                ^^^^^ required by this bound in `Foo3::Baz`\n ...\n LL |     type Baz = T;\n-   |          --- required by a bound in this\n+   |          --- required by a bound in this associated type\n help: consider further restricting type parameter `T`\n    |\n LL |     Self::Baz: Clone, T: std::clone::Clone"}, {"sha": "b380a1b6f06582ca977855f6aa0cba2b7a766f4b", "filename": "tests/ui/associated-types/hr-associated-type-bound-1.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ae0143007839fada3fadd790dc9b8c1a36c61dee/tests%2Fui%2Fassociated-types%2Fhr-associated-type-bound-1.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ae0143007839fada3fadd790dc9b8c1a36c61dee/tests%2Fui%2Fassociated-types%2Fhr-associated-type-bound-1.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fassociated-types%2Fhr-associated-type-bound-1.stderr?ref=ae0143007839fada3fadd790dc9b8c1a36c61dee", "patch": "@@ -9,7 +9,7 @@ note: required by a bound in `X`\n   --> $DIR/hr-associated-type-bound-1.rs:3:33\n    |\n LL | trait X<'a>\n-   |       - required by a bound in this\n+   |       - required by a bound in this trait\n LL | where\n LL |     for<'b> <Self as X<'b>>::U: Clone,\n    |                                 ^^^^^ required by this bound in `X`"}, {"sha": "a0a6f76a58371f0ab9f4082f86a0e4a201bb6233", "filename": "tests/ui/associated-types/hr-associated-type-bound-object.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ae0143007839fada3fadd790dc9b8c1a36c61dee/tests%2Fui%2Fassociated-types%2Fhr-associated-type-bound-object.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ae0143007839fada3fadd790dc9b8c1a36c61dee/tests%2Fui%2Fassociated-types%2Fhr-associated-type-bound-object.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fassociated-types%2Fhr-associated-type-bound-object.stderr?ref=ae0143007839fada3fadd790dc9b8c1a36c61dee", "patch": "@@ -8,7 +8,7 @@ note: required by a bound in `X`\n   --> $DIR/hr-associated-type-bound-object.rs:3:33\n    |\n LL | trait X<'a>\n-   |       - required by a bound in this\n+   |       - required by a bound in this trait\n LL | where\n LL |     for<'b> <Self as X<'b>>::U: Clone,\n    |                                 ^^^^^ required by this bound in `X`"}, {"sha": "e249f2e0c27999e5122cf9b4c53b58f85b347553", "filename": "tests/ui/associated-types/hr-associated-type-bound-param-1.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ae0143007839fada3fadd790dc9b8c1a36c61dee/tests%2Fui%2Fassociated-types%2Fhr-associated-type-bound-param-1.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ae0143007839fada3fadd790dc9b8c1a36c61dee/tests%2Fui%2Fassociated-types%2Fhr-associated-type-bound-param-1.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fassociated-types%2Fhr-associated-type-bound-param-1.stderr?ref=ae0143007839fada3fadd790dc9b8c1a36c61dee", "patch": "@@ -9,7 +9,7 @@ note: required by a bound in `Y`\n   --> $DIR/hr-associated-type-bound-param-1.rs:4:36\n    |\n LL | trait Y<'a, T: ?Sized>\n-   |       - required by a bound in this\n+   |       - required by a bound in this trait\n ...\n LL |     for<'b> <Self as Y<'b, T>>::V: Clone,\n    |                                    ^^^^^ required by this bound in `Y`"}, {"sha": "366670269d7cd449bf8802569ec4e9e02f1e56a6", "filename": "tests/ui/associated-types/hr-associated-type-bound-param-2.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/ae0143007839fada3fadd790dc9b8c1a36c61dee/tests%2Fui%2Fassociated-types%2Fhr-associated-type-bound-param-2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ae0143007839fada3fadd790dc9b8c1a36c61dee/tests%2Fui%2Fassociated-types%2Fhr-associated-type-bound-param-2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fassociated-types%2Fhr-associated-type-bound-param-2.stderr?ref=ae0143007839fada3fadd790dc9b8c1a36c61dee", "patch": "@@ -9,7 +9,7 @@ note: required by a bound in `Z`\n   --> $DIR/hr-associated-type-bound-param-2.rs:6:35\n    |\n LL | trait Z<'a, T: ?Sized>\n-   |       - required by a bound in this\n+   |       - required by a bound in this trait\n ...\n LL |     for<'b> <T as Z<'b, u16>>::W: Clone,\n    |                                   ^^^^^ required by this bound in `Z`\n@@ -25,7 +25,7 @@ note: required by a bound in `Z`\n   --> $DIR/hr-associated-type-bound-param-2.rs:6:35\n    |\n LL | trait Z<'a, T: ?Sized>\n-   |       - required by a bound in this\n+   |       - required by a bound in this trait\n ...\n LL |     for<'b> <T as Z<'b, u16>>::W: Clone,\n    |                                   ^^^^^ required by this bound in `Z`\n@@ -41,7 +41,7 @@ note: required by a bound in `Z`\n   --> $DIR/hr-associated-type-bound-param-2.rs:6:35\n    |\n LL | trait Z<'a, T: ?Sized>\n-   |       - required by a bound in this\n+   |       - required by a bound in this trait\n ...\n LL |     for<'b> <T as Z<'b, u16>>::W: Clone,\n    |                                   ^^^^^ required by this bound in `Z`"}, {"sha": "f49439d3573d3b01bf5f87d1ca0a18c0ca08520e", "filename": "tests/ui/associated-types/hr-associated-type-bound-param-3.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ae0143007839fada3fadd790dc9b8c1a36c61dee/tests%2Fui%2Fassociated-types%2Fhr-associated-type-bound-param-3.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ae0143007839fada3fadd790dc9b8c1a36c61dee/tests%2Fui%2Fassociated-types%2Fhr-associated-type-bound-param-3.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fassociated-types%2Fhr-associated-type-bound-param-3.stderr?ref=ae0143007839fada3fadd790dc9b8c1a36c61dee", "patch": "@@ -9,7 +9,7 @@ note: required by a bound in `X`\n   --> $DIR/hr-associated-type-bound-param-3.rs:4:33\n    |\n LL | trait X<'a, T>\n-   |       - required by a bound in this\n+   |       - required by a bound in this trait\n ...\n LL |     for<'b> <T as X<'b, T>>::U: Clone,\n    |                                 ^^^^^ required by this bound in `X`"}, {"sha": "f8733b423d778f78eec1e7085b8a1e57a1e2f649", "filename": "tests/ui/associated-types/hr-associated-type-bound-param-4.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ae0143007839fada3fadd790dc9b8c1a36c61dee/tests%2Fui%2Fassociated-types%2Fhr-associated-type-bound-param-4.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ae0143007839fada3fadd790dc9b8c1a36c61dee/tests%2Fui%2Fassociated-types%2Fhr-associated-type-bound-param-4.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fassociated-types%2Fhr-associated-type-bound-param-4.stderr?ref=ae0143007839fada3fadd790dc9b8c1a36c61dee", "patch": "@@ -9,7 +9,7 @@ note: required by a bound in `X`\n   --> $DIR/hr-associated-type-bound-param-4.rs:4:36\n    |\n LL | trait X<'a, T>\n-   |       - required by a bound in this\n+   |       - required by a bound in this trait\n ...\n LL |     for<'b> <(T,) as X<'b, T>>::U: Clone,\n    |                                    ^^^^^ required by this bound in `X`"}, {"sha": "aae80a9b2e196b87684a6713fe96e1b89963af6c", "filename": "tests/ui/associated-types/hr-associated-type-bound-param-5.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ae0143007839fada3fadd790dc9b8c1a36c61dee/tests%2Fui%2Fassociated-types%2Fhr-associated-type-bound-param-5.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ae0143007839fada3fadd790dc9b8c1a36c61dee/tests%2Fui%2Fassociated-types%2Fhr-associated-type-bound-param-5.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fassociated-types%2Fhr-associated-type-bound-param-5.stderr?ref=ae0143007839fada3fadd790dc9b8c1a36c61dee", "patch": "@@ -9,7 +9,7 @@ note: required by a bound in `X`\n   --> $DIR/hr-associated-type-bound-param-5.rs:17:45\n    |\n LL | trait X<'a, T: Cycle + for<'b> X<'b, T>>\n-   |       - required by a bound in this\n+   |       - required by a bound in this trait\n ...\n LL |     for<'b> <T::Next as X<'b, T::Next>>::U: Clone,\n    |                                             ^^^^^ required by this bound in `X`\n@@ -25,7 +25,7 @@ note: required by a bound in `X`\n   --> $DIR/hr-associated-type-bound-param-5.rs:17:45\n    |\n LL | trait X<'a, T: Cycle + for<'b> X<'b, T>>\n-   |       - required by a bound in this\n+   |       - required by a bound in this trait\n ...\n LL |     for<'b> <T::Next as X<'b, T::Next>>::U: Clone,\n    |                                             ^^^^^ required by this bound in `X`"}, {"sha": "dd0389c34e6942347f4f8e7f833875040a15ff45", "filename": "tests/ui/associated-types/hr-associated-type-projection-1.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ae0143007839fada3fadd790dc9b8c1a36c61dee/tests%2Fui%2Fassociated-types%2Fhr-associated-type-projection-1.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ae0143007839fada3fadd790dc9b8c1a36c61dee/tests%2Fui%2Fassociated-types%2Fhr-associated-type-projection-1.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fassociated-types%2Fhr-associated-type-projection-1.stderr?ref=ae0143007839fada3fadd790dc9b8c1a36c61dee", "patch": "@@ -10,7 +10,7 @@ note: required by a bound in `UnsafeCopy`\n   --> $DIR/hr-associated-type-projection-1.rs:3:64\n    |\n LL | trait UnsafeCopy<'a, T: Copy>\n-   |       ---------- required by a bound in this\n+   |       ---------- required by a bound in this trait\n LL | where\n LL |     for<'b> <Self as UnsafeCopy<'b, T>>::Item: std::ops::Deref<Target = T>,\n    |                                                                ^^^^^^^^^^ required by this bound in `UnsafeCopy`"}, {"sha": "3b4689e08ccfa1c7a27c74dfcace3493ab8b2e55", "filename": "tests/ui/associated-types/point-at-type-on-obligation-failure-2.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ae0143007839fada3fadd790dc9b8c1a36c61dee/tests%2Fui%2Fassociated-types%2Fpoint-at-type-on-obligation-failure-2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ae0143007839fada3fadd790dc9b8c1a36c61dee/tests%2Fui%2Fassociated-types%2Fpoint-at-type-on-obligation-failure-2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fassociated-types%2Fpoint-at-type-on-obligation-failure-2.stderr?ref=ae0143007839fada3fadd790dc9b8c1a36c61dee", "patch": "@@ -23,7 +23,7 @@ LL |     Self::Assoc: Bar,\n    |                  ^^^ required by this bound in `Baz::Assoc`\n LL | {\n LL |     type Assoc;\n-   |          ----- required by a bound in this\n+   |          ----- required by a bound in this associated type\n \n error[E0277]: the trait bound `bool: Bar` is not satisfied\n   --> $DIR/point-at-type-on-obligation-failure-2.rs:30:18\n@@ -38,7 +38,7 @@ LL |     <Self as Bat>::Assoc: Bar,\n    |                           ^^^ required by this bound in `Bat::Assoc`\n LL | {\n LL |     type Assoc;\n-   |          ----- required by a bound in this\n+   |          ----- required by a bound in this associated type\n \n error: aborting due to 3 previous errors\n "}, {"sha": "c5089295063dd85ffc7b194a2342b4764ac102c1", "filename": "tests/ui/closure-expected-type/expect-infer-var-appearing-twice.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ae0143007839fada3fadd790dc9b8c1a36c61dee/tests%2Fui%2Fclosure-expected-type%2Fexpect-infer-var-appearing-twice.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ae0143007839fada3fadd790dc9b8c1a36c61dee/tests%2Fui%2Fclosure-expected-type%2Fexpect-infer-var-appearing-twice.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fclosure-expected-type%2Fexpect-infer-var-appearing-twice.stderr?ref=ae0143007839fada3fadd790dc9b8c1a36c61dee", "patch": "@@ -12,7 +12,7 @@ note: required by a bound in `with_closure`\n   --> $DIR/expect-infer-var-appearing-twice.rs:2:14\n    |\n LL | fn with_closure<F, A>(_: F)\n-   |    ------------ required by a bound in this\n+   |    ------------ required by a bound in this function\n LL |     where F: FnOnce(A, A)\n    |              ^^^^^^^^^^^^ required by this bound in `with_closure`\n "}, {"sha": "bd9bfcd7dadf60745a34afbc6ff9db82d2e3a0cc", "filename": "tests/ui/const-generics/defaults/wfness.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ae0143007839fada3fadd790dc9b8c1a36c61dee/tests%2Fui%2Fconst-generics%2Fdefaults%2Fwfness.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ae0143007839fada3fadd790dc9b8c1a36c61dee/tests%2Fui%2Fconst-generics%2Fdefaults%2Fwfness.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fconst-generics%2Fdefaults%2Fwfness.stderr?ref=ae0143007839fada3fadd790dc9b8c1a36c61dee", "patch": "@@ -23,7 +23,7 @@ note: required by a bound in `WhereClause`\n   --> $DIR/wfness.rs:8:9\n    |\n LL | struct WhereClause<const N: u8 = 2>\n-   |        ----------- required by a bound in this\n+   |        ----------- required by a bound in this struct\n LL | where\n LL |     (): Trait<N>;\n    |         ^^^^^^^^ required by this bound in `WhereClause`"}, {"sha": "ab2871ff28127171384fa98dfbeaf775701bc424", "filename": "tests/ui/const-generics/ensure_is_evaluatable.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ae0143007839fada3fadd790dc9b8c1a36c61dee/tests%2Fui%2Fconst-generics%2Fensure_is_evaluatable.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ae0143007839fada3fadd790dc9b8c1a36c61dee/tests%2Fui%2Fconst-generics%2Fensure_is_evaluatable.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fconst-generics%2Fensure_is_evaluatable.stderr?ref=ae0143007839fada3fadd790dc9b8c1a36c61dee", "patch": "@@ -9,7 +9,7 @@ note: required by a bound in `bar`\n   --> $DIR/ensure_is_evaluatable.rs:15:10\n    |\n LL | fn bar<const N: usize>() -> [(); N]\n-   |    --- required by a bound in this\n+   |    --- required by a bound in this function\n LL | where\n LL |     [(); N + 1]:,\n    |          ^^^^^ required by this bound in `bar`"}, {"sha": "c124010aab05b920b2fb4c7ec028460e97446ac1", "filename": "tests/ui/const-generics/fn_with_two_const_inputs.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ae0143007839fada3fadd790dc9b8c1a36c61dee/tests%2Fui%2Fconst-generics%2Ffn_with_two_const_inputs.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ae0143007839fada3fadd790dc9b8c1a36c61dee/tests%2Fui%2Fconst-generics%2Ffn_with_two_const_inputs.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fconst-generics%2Ffn_with_two_const_inputs.stderr?ref=ae0143007839fada3fadd790dc9b8c1a36c61dee", "patch": "@@ -9,7 +9,7 @@ note: required by a bound in `bar`\n   --> $DIR/fn_with_two_const_inputs.rs:18:10\n    |\n LL | fn bar<const N: usize>() -> [(); N]\n-   |    --- required by a bound in this\n+   |    --- required by a bound in this function\n LL | where\n LL |     [(); N + 1]:,\n    |          ^^^^^ required by this bound in `bar`"}, {"sha": "996b75493e618f92f55794dad818ae7e1824f961", "filename": "tests/ui/const-generics/generic_const_exprs/issue-72819-generic-in-const-eval.full.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ae0143007839fada3fadd790dc9b8c1a36c61dee/tests%2Fui%2Fconst-generics%2Fgeneric_const_exprs%2Fissue-72819-generic-in-const-eval.full.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ae0143007839fada3fadd790dc9b8c1a36c61dee/tests%2Fui%2Fconst-generics%2Fgeneric_const_exprs%2Fissue-72819-generic-in-const-eval.full.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fconst-generics%2Fgeneric_const_exprs%2Fissue-72819-generic-in-const-eval.full.stderr?ref=ae0143007839fada3fadd790dc9b8c1a36c61dee", "patch": "@@ -10,7 +10,7 @@ note: required by a bound in `Arr`\n   --> $DIR/issue-72819-generic-in-const-eval.rs:8:39\n    |\n LL | struct Arr<const N: usize>\n-   |        --- required by a bound in this\n+   |        --- required by a bound in this struct\n LL | where Assert::<{N < usize::MAX / 2}>: IsTrue,\n    |                                       ^^^^^^ required by this bound in `Arr`\n \n@@ -26,7 +26,7 @@ note: required by a bound in `Arr`\n   --> $DIR/issue-72819-generic-in-const-eval.rs:8:39\n    |\n LL | struct Arr<const N: usize>\n-   |        --- required by a bound in this\n+   |        --- required by a bound in this struct\n LL | where Assert::<{N < usize::MAX / 2}>: IsTrue,\n    |                                       ^^^^^^ required by this bound in `Arr`\n "}, {"sha": "63e6fcc8e119b65219a47f3b518ff289c4b1750b", "filename": "tests/ui/const-generics/generic_const_exprs/obligation-cause.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ae0143007839fada3fadd790dc9b8c1a36c61dee/tests%2Fui%2Fconst-generics%2Fgeneric_const_exprs%2Fobligation-cause.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ae0143007839fada3fadd790dc9b8c1a36c61dee/tests%2Fui%2Fconst-generics%2Fgeneric_const_exprs%2Fobligation-cause.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fconst-generics%2Fgeneric_const_exprs%2Fobligation-cause.stderr?ref=ae0143007839fada3fadd790dc9b8c1a36c61dee", "patch": "@@ -10,7 +10,7 @@ note: required by a bound in `g`\n   --> $DIR/obligation-cause.rs:13:44\n    |\n LL | fn g<T>()\n-   |    - required by a bound in this\n+   |    - required by a bound in this function\n ...\n LL |     Is<{ std::mem::size_of::<T>() == 0 }>: True,\n    |                                            ^^^^ required by this bound in `g`"}, {"sha": "032b0c41047fc9d04dd4390d5297e3a0f41baf2d", "filename": "tests/ui/const-generics/issues/issue-67185-2.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/ae0143007839fada3fadd790dc9b8c1a36c61dee/tests%2Fui%2Fconst-generics%2Fissues%2Fissue-67185-2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ae0143007839fada3fadd790dc9b8c1a36c61dee/tests%2Fui%2Fconst-generics%2Fissues%2Fissue-67185-2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fconst-generics%2Fissues%2Fissue-67185-2.stderr?ref=ae0143007839fada3fadd790dc9b8c1a36c61dee", "patch": "@@ -35,7 +35,7 @@ note: required by a bound in `Foo`\n   --> $DIR/issue-67185-2.rs:15:25\n    |\n LL | trait Foo\n-   |       --- required by a bound in this\n+   |       --- required by a bound in this trait\n ...\n LL |     <u8 as Baz>::Quaks: Bar,\n    |                         ^^^ required by this bound in `Foo`\n@@ -53,7 +53,7 @@ note: required by a bound in `Foo`\n   --> $DIR/issue-67185-2.rs:14:30\n    |\n LL | trait Foo\n-   |       --- required by a bound in this\n+   |       --- required by a bound in this trait\n LL | where\n LL |     [<u8 as Baz>::Quaks; 2]: Bar,\n    |                              ^^^ required by this bound in `Foo`\n@@ -71,7 +71,7 @@ note: required by a bound in `Foo`\n   --> $DIR/issue-67185-2.rs:14:30\n    |\n LL | trait Foo\n-   |       --- required by a bound in this\n+   |       --- required by a bound in this trait\n LL | where\n LL |     [<u8 as Baz>::Quaks; 2]: Bar,\n    |                              ^^^ required by this bound in `Foo`\n@@ -89,7 +89,7 @@ note: required by a bound in `Foo`\n   --> $DIR/issue-67185-2.rs:15:25\n    |\n LL | trait Foo\n-   |       --- required by a bound in this\n+   |       --- required by a bound in this trait\n ...\n LL |     <u8 as Baz>::Quaks: Bar,\n    |                         ^^^ required by this bound in `Foo`"}, {"sha": "c56b45cc8faf16b11e0692ed8ca117d8fe5c151b", "filename": "tests/ui/const-generics/issues/issue-73260.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ae0143007839fada3fadd790dc9b8c1a36c61dee/tests%2Fui%2Fconst-generics%2Fissues%2Fissue-73260.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ae0143007839fada3fadd790dc9b8c1a36c61dee/tests%2Fui%2Fconst-generics%2Fissues%2Fissue-73260.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fconst-generics%2Fissues%2Fissue-73260.stderr?ref=ae0143007839fada3fadd790dc9b8c1a36c61dee", "patch": "@@ -10,7 +10,7 @@ note: required by a bound in `Arr`\n   --> $DIR/issue-73260.rs:5:37\n    |\n LL | struct Arr<const N: usize>\n-   |        --- required by a bound in this\n+   |        --- required by a bound in this struct\n LL | where\n LL |     Assert::<{N < usize::MAX / 2}>: IsTrue,\n    |                                     ^^^^^^ required by this bound in `Arr`\n@@ -27,7 +27,7 @@ note: required by a bound in `Arr`\n   --> $DIR/issue-73260.rs:5:37\n    |\n LL | struct Arr<const N: usize>\n-   |        --- required by a bound in this\n+   |        --- required by a bound in this struct\n LL | where\n LL |     Assert::<{N < usize::MAX / 2}>: IsTrue,\n    |                                     ^^^^^^ required by this bound in `Arr`"}, {"sha": "ba7fd2ca3ccf3692a72d91faa79403da6534808c", "filename": "tests/ui/const-generics/issues/issue-79674.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ae0143007839fada3fadd790dc9b8c1a36c61dee/tests%2Fui%2Fconst-generics%2Fissues%2Fissue-79674.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ae0143007839fada3fadd790dc9b8c1a36c61dee/tests%2Fui%2Fconst-generics%2Fissues%2Fissue-79674.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fconst-generics%2Fissues%2Fissue-79674.stderr?ref=ae0143007839fada3fadd790dc9b8c1a36c61dee", "patch": "@@ -10,7 +10,7 @@ note: required by a bound in `requires_distinct`\n   --> $DIR/issue-79674.rs:23:37\n    |\n LL | fn requires_distinct<A, B>(_a: A, _b: B) where\n-   |    ----------------- required by a bound in this\n+   |    ----------------- required by a bound in this function\n LL |     A: MiniTypeId, B: MiniTypeId,\n LL |     Lift<{is_same_type::<A, B>()}>: IsFalse {}\n    |                                     ^^^^^^^ required by this bound in `requires_distinct`"}, {"sha": "620ed4f0fb2cc5e65e55c22ff56623a3ae809b1a", "filename": "tests/ui/const-generics/issues/issue-86530.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ae0143007839fada3fadd790dc9b8c1a36c61dee/tests%2Fui%2Fconst-generics%2Fissues%2Fissue-86530.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ae0143007839fada3fadd790dc9b8c1a36c61dee/tests%2Fui%2Fconst-generics%2Fissues%2Fissue-86530.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fconst-generics%2Fissues%2Fissue-86530.stderr?ref=ae0143007839fada3fadd790dc9b8c1a36c61dee", "patch": "@@ -10,7 +10,7 @@ note: required by a bound in `z`\n   --> $DIR/issue-86530.rs:10:8\n    |\n LL | fn z<T>(t: T)\n-   |    - required by a bound in this\n+   |    - required by a bound in this function\n LL | where\n LL |     T: X,\n    |        ^ required by this bound in `z`"}, {"sha": "51ef354e3ed4a779fbd4e58d45c06897f7d7926d", "filename": "tests/ui/const-generics/occurs-check/unused-substs-1.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ae0143007839fada3fadd790dc9b8c1a36c61dee/tests%2Fui%2Fconst-generics%2Foccurs-check%2Funused-substs-1.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ae0143007839fada3fadd790dc9b8c1a36c61dee/tests%2Fui%2Fconst-generics%2Foccurs-check%2Funused-substs-1.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fconst-generics%2Foccurs-check%2Funused-substs-1.stderr?ref=ae0143007839fada3fadd790dc9b8c1a36c61dee", "patch": "@@ -9,7 +9,7 @@ note: required by a bound in `A`\n   --> $DIR/unused-substs-1.rs:9:11\n    |\n LL | struct A<const N: usize>\n-   |        - required by a bound in this\n+   |        - required by a bound in this unit struct\n LL | where\n LL |     A<N>: Bar<N>;\n    |           ^^^^^^ required by this bound in `A`"}, {"sha": "d4d78b5962789bd83e4dd422c15266867d9bcc42", "filename": "tests/ui/const-generics/unify_with_nested_expr.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ae0143007839fada3fadd790dc9b8c1a36c61dee/tests%2Fui%2Fconst-generics%2Funify_with_nested_expr.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ae0143007839fada3fadd790dc9b8c1a36c61dee/tests%2Fui%2Fconst-generics%2Funify_with_nested_expr.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fconst-generics%2Funify_with_nested_expr.stderr?ref=ae0143007839fada3fadd790dc9b8c1a36c61dee", "patch": "@@ -8,7 +8,7 @@ note: required by a bound in `bar`\n   --> $DIR/unify_with_nested_expr.rs:14:10\n    |\n LL | fn bar<const N: usize>()\n-   |    --- required by a bound in this\n+   |    --- required by a bound in this function\n LL | where\n LL |     [(); N + 1]:,\n    |          ^^^^^ required by this bound in `bar`"}, {"sha": "fa20077da7efeeacbe03219990d18edf252d6775", "filename": "tests/ui/consts/ct-var-in-collect_all_mismatches.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ae0143007839fada3fadd790dc9b8c1a36c61dee/tests%2Fui%2Fconsts%2Fct-var-in-collect_all_mismatches.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ae0143007839fada3fadd790dc9b8c1a36c61dee/tests%2Fui%2Fconsts%2Fct-var-in-collect_all_mismatches.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fconsts%2Fct-var-in-collect_all_mismatches.stderr?ref=ae0143007839fada3fadd790dc9b8c1a36c61dee", "patch": "@@ -8,7 +8,7 @@ note: required by a bound in `Foo::<T, N>::unsatisfied`\n   --> $DIR/ct-var-in-collect_all_mismatches.rs:15:12\n    |\n LL |     fn unsatisfied(self)\n-   |        ----------- required by a bound in this\n+   |        ----------- required by a bound in this associated function\n LL |     where\n LL |         T: Bar<N>,\n    |            ^^^^^^ required by this bound in `Foo::<T, N>::unsatisfied`"}, {"sha": "a26dbf3f27c466aa8c1c3a30a76e69fc38d15b25", "filename": "tests/ui/generator/generator-yielding-or-returning-itself.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ae0143007839fada3fadd790dc9b8c1a36c61dee/tests%2Fui%2Fgenerator%2Fgenerator-yielding-or-returning-itself.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ae0143007839fada3fadd790dc9b8c1a36c61dee/tests%2Fui%2Fgenerator%2Fgenerator-yielding-or-returning-itself.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fgenerator%2Fgenerator-yielding-or-returning-itself.stderr?ref=ae0143007839fada3fadd790dc9b8c1a36c61dee", "patch": "@@ -19,7 +19,7 @@ note: required by a bound in `want_cyclic_generator_return`\n   --> $DIR/generator-yielding-or-returning-itself.rs:10:36\n    |\n LL | pub fn want_cyclic_generator_return<T>(_: T)\n-   |        ---------------------------- required by a bound in this\n+   |        ---------------------------- required by a bound in this function\n LL |     where T: Generator<Yield = (), Return = T>\n    |                                    ^^^^^^^^^^ required by this bound in `want_cyclic_generator_return`\n \n@@ -44,7 +44,7 @@ note: required by a bound in `want_cyclic_generator_yield`\n   --> $DIR/generator-yielding-or-returning-itself.rs:23:24\n    |\n LL | pub fn want_cyclic_generator_yield<T>(_: T)\n-   |        --------------------------- required by a bound in this\n+   |        --------------------------- required by a bound in this function\n LL |     where T: Generator<Yield = T, Return = ()>\n    |                        ^^^^^^^^^ required by this bound in `want_cyclic_generator_yield`\n "}, {"sha": "a2047f103d488810f73b7f462ac808d5aa9641a9", "filename": "tests/ui/generic-associated-types/bugs/issue-88460.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ae0143007839fada3fadd790dc9b8c1a36c61dee/tests%2Fui%2Fgeneric-associated-types%2Fbugs%2Fissue-88460.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ae0143007839fada3fadd790dc9b8c1a36c61dee/tests%2Fui%2Fgeneric-associated-types%2Fbugs%2Fissue-88460.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fgeneric-associated-types%2Fbugs%2Fissue-88460.stderr?ref=ae0143007839fada3fadd790dc9b8c1a36c61dee", "patch": "@@ -11,7 +11,7 @@ note: required by a bound in `test`\n   --> $DIR/issue-88460.rs:15:27\n    |\n LL | fn test<T>(value: T)\n-   |    ---- required by a bound in this\n+   |    ---- required by a bound in this function\n ...\n LL |     for<'a> T::Assoc<'a>: Marker,\n    |                           ^^^^^^ required by this bound in `test`"}, {"sha": "5c8db617c173163fe08f99c46bc481f99d36efb0", "filename": "tests/ui/generic-associated-types/issue-101020.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ae0143007839fada3fadd790dc9b8c1a36c61dee/tests%2Fui%2Fgeneric-associated-types%2Fissue-101020.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ae0143007839fada3fadd790dc9b8c1a36c61dee/tests%2Fui%2Fgeneric-associated-types%2Fissue-101020.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fgeneric-associated-types%2Fissue-101020.stderr?ref=ae0143007839fada3fadd790dc9b8c1a36c61dee", "patch": "@@ -13,7 +13,7 @@ note: required by a bound in `LendingIterator::consume`\n   --> $DIR/issue-101020.rs:9:33\n    |\n LL |     fn consume<F>(self, _f: F)\n-   |        ------- required by a bound in this\n+   |        ------- required by a bound in this associated function\n ...\n LL |         for<'a> Self::Item<'a>: FuncInput<'a, Self::Item<'a>>,\n    |                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ required by this bound in `LendingIterator::consume`"}, {"sha": "b1b8ffa8c548336a75f06f80439a71f174492fd1", "filename": "tests/ui/higher-rank-trait-bounds/hrtb-higher-ranker-supertraits-transitive.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ae0143007839fada3fadd790dc9b8c1a36c61dee/tests%2Fui%2Fhigher-rank-trait-bounds%2Fhrtb-higher-ranker-supertraits-transitive.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ae0143007839fada3fadd790dc9b8c1a36c61dee/tests%2Fui%2Fhigher-rank-trait-bounds%2Fhrtb-higher-ranker-supertraits-transitive.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fhigher-rank-trait-bounds%2Fhrtb-higher-ranker-supertraits-transitive.stderr?ref=ae0143007839fada3fadd790dc9b8c1a36c61dee", "patch": "@@ -10,7 +10,7 @@ note: required by a bound in `want_bar_for_any_ccx`\n   --> $DIR/hrtb-higher-ranker-supertraits-transitive.rs:32:15\n    |\n LL | fn want_bar_for_any_ccx<B>(b: &B)\n-   |    -------------------- required by a bound in this\n+   |    -------------------- required by a bound in this function\n LL |     where B : for<'ccx> Bar<'ccx>\n    |               ^^^^^^^^^^^^^^^^^^^ required by this bound in `want_bar_for_any_ccx`\n help: consider further restricting this bound"}, {"sha": "7f96909b6e76e3afc51cd0854a2c4c5a58b1a3d0", "filename": "tests/ui/higher-rank-trait-bounds/hrtb-higher-ranker-supertraits.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ae0143007839fada3fadd790dc9b8c1a36c61dee/tests%2Fui%2Fhigher-rank-trait-bounds%2Fhrtb-higher-ranker-supertraits.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ae0143007839fada3fadd790dc9b8c1a36c61dee/tests%2Fui%2Fhigher-rank-trait-bounds%2Fhrtb-higher-ranker-supertraits.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fhigher-rank-trait-bounds%2Fhrtb-higher-ranker-supertraits.stderr?ref=ae0143007839fada3fadd790dc9b8c1a36c61dee", "patch": "@@ -10,7 +10,7 @@ note: required by a bound in `want_foo_for_any_tcx`\n   --> $DIR/hrtb-higher-ranker-supertraits.rs:22:15\n    |\n LL | fn want_foo_for_any_tcx<F>(f: &F)\n-   |    -------------------- required by a bound in this\n+   |    -------------------- required by a bound in this function\n LL |     where F : for<'tcx> Foo<'tcx>\n    |               ^^^^^^^^^^^^^^^^^^^ required by this bound in `want_foo_for_any_tcx`\n help: consider further restricting this bound\n@@ -30,7 +30,7 @@ note: required by a bound in `want_bar_for_any_ccx`\n   --> $DIR/hrtb-higher-ranker-supertraits.rs:39:15\n    |\n LL | fn want_bar_for_any_ccx<B>(b: &B)\n-   |    -------------------- required by a bound in this\n+   |    -------------------- required by a bound in this function\n LL |     where B : for<'ccx> Bar<'ccx>\n    |               ^^^^^^^^^^^^^^^^^^^ required by this bound in `want_bar_for_any_ccx`\n help: consider further restricting this bound"}, {"sha": "4d470ae70229f1f5fe1fd4804433073bb4e8c598", "filename": "tests/ui/higher-rank-trait-bounds/issue-62203-hrtb-ice.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ae0143007839fada3fadd790dc9b8c1a36c61dee/tests%2Fui%2Fhigher-rank-trait-bounds%2Fissue-62203-hrtb-ice.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ae0143007839fada3fadd790dc9b8c1a36c61dee/tests%2Fui%2Fhigher-rank-trait-bounds%2Fissue-62203-hrtb-ice.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fhigher-rank-trait-bounds%2Fissue-62203-hrtb-ice.stderr?ref=ae0143007839fada3fadd790dc9b8c1a36c61dee", "patch": "@@ -25,7 +25,7 @@ note: required by a bound in `T1::m`\n   --> $DIR/issue-62203-hrtb-ice.rs:27:51\n    |\n LL |     fn m<'a, B: Ty<'a>, F>(&self, f: F) -> Unit1\n-   |        - required by a bound in this\n+   |        - required by a bound in this associated function\n LL |     where\n LL |         F: for<'r> T0<'r, (<Self as Ty<'r>>::V,), O = <B as Ty<'r>>::V>,\n    |                                                   ^^^^^^^^^^^^^^^^^^^^ required by this bound in `T1::m`\n@@ -56,7 +56,7 @@ note: required by a bound in `T1::m`\n   --> $DIR/issue-62203-hrtb-ice.rs:27:12\n    |\n LL |     fn m<'a, B: Ty<'a>, F>(&self, f: F) -> Unit1\n-   |        - required by a bound in this\n+   |        - required by a bound in this associated function\n LL |     where\n LL |         F: for<'r> T0<'r, (<Self as Ty<'r>>::V,), O = <B as Ty<'r>>::V>,\n    |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ required by this bound in `T1::m`"}, {"sha": "edef6ccd34e615acea21e604eac409dcb7d13541", "filename": "tests/ui/higher-rank-trait-bounds/normalize-under-binder/issue-89118.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/ae0143007839fada3fadd790dc9b8c1a36c61dee/tests%2Fui%2Fhigher-rank-trait-bounds%2Fnormalize-under-binder%2Fissue-89118.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ae0143007839fada3fadd790dc9b8c1a36c61dee/tests%2Fui%2Fhigher-rank-trait-bounds%2Fnormalize-under-binder%2Fissue-89118.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fhigher-rank-trait-bounds%2Fnormalize-under-binder%2Fissue-89118.stderr?ref=ae0143007839fada3fadd790dc9b8c1a36c61dee", "patch": "@@ -15,7 +15,7 @@ note: required by a bound in `StackContext`\n   --> $DIR/issue-89118.rs:9:14\n    |\n LL | trait StackContext\n-   |       ------------ required by a bound in this\n+   |       ------------ required by a bound in this trait\n LL | where\n LL |     Ctx<()>: for<'a> BufferUdpStateContext<&'a ()>,\n    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ required by this bound in `StackContext`\n@@ -37,7 +37,7 @@ note: required by a bound in `EthernetWorker`\n   --> $DIR/issue-89118.rs:28:14\n    |\n LL | struct EthernetWorker<C>(C)\n-   |        -------------- required by a bound in this\n+   |        -------------- required by a bound in this struct\n LL | where\n LL |     Ctx<()>: for<'a> BufferUdpStateContext<&'a ()>;\n    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ required by this bound in `EthernetWorker`\n@@ -59,7 +59,7 @@ note: required by a bound in `StackContext`\n   --> $DIR/issue-89118.rs:9:14\n    |\n LL | trait StackContext\n-   |       ------------ required by a bound in this\n+   |       ------------ required by a bound in this trait\n LL | where\n LL |     Ctx<()>: for<'a> BufferUdpStateContext<&'a ()>,\n    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ required by this bound in `StackContext`"}, {"sha": "5be33bccdc317cb403b374e711d51da901bcc055", "filename": "tests/ui/higher-rank-trait-bounds/normalize-under-binder/issue-90950.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ae0143007839fada3fadd790dc9b8c1a36c61dee/tests%2Fui%2Fhigher-rank-trait-bounds%2Fnormalize-under-binder%2Fissue-90950.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ae0143007839fada3fadd790dc9b8c1a36c61dee/tests%2Fui%2Fhigher-rank-trait-bounds%2Fnormalize-under-binder%2Fissue-90950.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fhigher-rank-trait-bounds%2Fnormalize-under-binder%2Fissue-90950.stderr?ref=ae0143007839fada3fadd790dc9b8c1a36c61dee", "patch": "@@ -11,7 +11,7 @@ note: required by a bound in `upcast`\n   --> $DIR/issue-90950.rs:27:42\n    |\n LL | fn upcast<Y>(x: Yoke<Y>) -> Yoke<Box<dyn IsCovariant<'static> + 'static>> where\n-   |    ------ required by a bound in this\n+   |    ------ required by a bound in this function\n LL |     Y: for<'a> Yokeable<'a>,\n LL |     for<'a> <Y as Yokeable<'a>>::Output: IsCovariant<'a>\n    |                                          ^^^^^^^^^^^^^^^ required by this bound in `upcast`"}, {"sha": "73388a72574e2bbbe193b83523ced04b2e3d5b8b", "filename": "tests/ui/higher-rank-trait-bounds/normalize-under-binder/norm-before-method-resolution.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ae0143007839fada3fadd790dc9b8c1a36c61dee/tests%2Fui%2Fhigher-rank-trait-bounds%2Fnormalize-under-binder%2Fnorm-before-method-resolution.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ae0143007839fada3fadd790dc9b8c1a36c61dee/tests%2Fui%2Fhigher-rank-trait-bounds%2Fnormalize-under-binder%2Fnorm-before-method-resolution.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fhigher-rank-trait-bounds%2Fnormalize-under-binder%2Fnorm-before-method-resolution.stderr?ref=ae0143007839fada3fadd790dc9b8c1a36c61dee", "patch": "@@ -8,7 +8,7 @@ note: required by a bound in `weird_bound`\n   --> $DIR/norm-before-method-resolution.rs:18:40\n    |\n LL | fn weird_bound<X>() -> X\n-   |    ----------- required by a bound in this\n+   |    ----------- required by a bound in this function\n ...\n LL |         for<'a> <X as Trait<'a>>::Out: Copy\n    |                                        ^^^^ required by this bound in `weird_bound`"}, {"sha": "dba0353377fa2cd7dfc874da0a243696dd5d3efa", "filename": "tests/ui/implied-bounds/issue-100690.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ae0143007839fada3fadd790dc9b8c1a36c61dee/tests%2Fui%2Fimplied-bounds%2Fissue-100690.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ae0143007839fada3fadd790dc9b8c1a36c61dee/tests%2Fui%2Fimplied-bounds%2Fissue-100690.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fimplied-bounds%2Fissue-100690.stderr?ref=ae0143007839fada3fadd790dc9b8c1a36c61dee", "patch": "@@ -12,7 +12,7 @@ note: required by a bound in `real_dispatch`\n   --> $DIR/issue-100690.rs:9:8\n    |\n LL | fn real_dispatch<T, F>(f: F) -> Result<(), io::Error>\n-   |    ------------- required by a bound in this\n+   |    ------------- required by a bound in this function\n ...\n LL |     F: FnOnce(&mut UIView<T>) -> Result<(), io::Error> + Send + 'static,\n    |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ required by this bound in `real_dispatch`"}, {"sha": "563690c9a5d6d090eecd52cd40f2490e9e7428e9", "filename": "tests/ui/issues/issue-60218.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ae0143007839fada3fadd790dc9b8c1a36c61dee/tests%2Fui%2Fissues%2Fissue-60218.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ae0143007839fada3fadd790dc9b8c1a36c61dee/tests%2Fui%2Fissues%2Fissue-60218.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fissues%2Fissue-60218.stderr?ref=ae0143007839fada3fadd790dc9b8c1a36c61dee", "patch": "@@ -10,7 +10,7 @@ note: required by a bound in `trigger_error`\n   --> $DIR/issue-60218.rs:13:72\n    |\n LL | pub fn trigger_error<I, F>(iterable: I, functor: F)\n-   |        ------------- required by a bound in this\n+   |        ------------- required by a bound in this function\n ...\n LL | for<'t> <Map<<&'t I as IntoIterator>::IntoIter, F> as Iterator>::Item: Foo,\n    |                                                                        ^^^ required by this bound in `trigger_error`"}, {"sha": "c428ea9ea2c5beeb543d6388ff5729c808c66d54", "filename": "tests/ui/issues/issue-69683.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ae0143007839fada3fadd790dc9b8c1a36c61dee/tests%2Fui%2Fissues%2Fissue-69683.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ae0143007839fada3fadd790dc9b8c1a36c61dee/tests%2Fui%2Fissues%2Fissue-69683.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fissues%2Fissue-69683.stderr?ref=ae0143007839fada3fadd790dc9b8c1a36c61dee", "patch": "@@ -31,7 +31,7 @@ LL |     u8: Element<I>,\n    |         ^^^^^^^^^^ required by this bound in `Foo::foo`\n LL | {\n LL |     fn foo(self, x: <u8 as Element<I>>::Array);\n-   |        --- required by a bound in this\n+   |        --- required by a bound in this associated function\n help: try using a fully qualified path to specify the expected types\n    |\n LL |     <u16 as Foo<I>>::foo(0u16, b);"}, {"sha": "69d6ee5cbd5a04d2092190baf10709f093303ca2", "filename": "tests/ui/mismatched_types/issue-47706.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ae0143007839fada3fadd790dc9b8c1a36c61dee/tests%2Fui%2Fmismatched_types%2Fissue-47706.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ae0143007839fada3fadd790dc9b8c1a36c61dee/tests%2Fui%2Fmismatched_types%2Fissue-47706.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmismatched_types%2Fissue-47706.stderr?ref=ae0143007839fada3fadd790dc9b8c1a36c61dee", "patch": "@@ -27,7 +27,7 @@ note: required by a bound in `foo`\n   --> $DIR/issue-47706.rs:22:8\n    |\n LL | fn foo<F>(f: F)\n-   |    --- required by a bound in this\n+   |    --- required by a bound in this function\n LL | where\n LL |     F: Fn(),\n    |        ^^^^ required by this bound in `foo`"}, {"sha": "fc5a521746a51c39c15cb6fa576b06a0b95664b3", "filename": "tests/ui/suggestions/imm-ref-trait-object-literal-bound-regions.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ae0143007839fada3fadd790dc9b8c1a36c61dee/tests%2Fui%2Fsuggestions%2Fimm-ref-trait-object-literal-bound-regions.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ae0143007839fada3fadd790dc9b8c1a36c61dee/tests%2Fui%2Fsuggestions%2Fimm-ref-trait-object-literal-bound-regions.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fsuggestions%2Fimm-ref-trait-object-literal-bound-regions.stderr?ref=ae0143007839fada3fadd790dc9b8c1a36c61dee", "patch": "@@ -12,7 +12,7 @@ note: required by a bound in `foo`\n   --> $DIR/imm-ref-trait-object-literal-bound-regions.rs:11:20\n    |\n LL | fn foo<X>(_: X)\n-   |    --- required by a bound in this\n+   |    --- required by a bound in this function\n LL | where\n LL |     for<'b> &'b X: Trait,\n    |                    ^^^^^ required by this bound in `foo`"}, {"sha": "55c89884a5f6ca56cd7dbfc545087738ae69d43f", "filename": "tests/ui/suggestions/issue-84973.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ae0143007839fada3fadd790dc9b8c1a36c61dee/tests%2Fui%2Fsuggestions%2Fissue-84973.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ae0143007839fada3fadd790dc9b8c1a36c61dee/tests%2Fui%2Fsuggestions%2Fissue-84973.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fsuggestions%2Fissue-84973.stderr?ref=ae0143007839fada3fadd790dc9b8c1a36c61dee", "patch": "@@ -13,7 +13,7 @@ LL |     G: SomeTrait,\n    |        ^^^^^^^^^ required by this bound in `Other::<'a, G>::new`\n LL | {\n LL |     pub fn new(g: G) -> Self {\n-   |            --- required by a bound in this\n+   |            --- required by a bound in this associated function\n help: consider borrowing here\n    |\n LL |     let o = Other::new(&f);"}, {"sha": "e927f26e96dd9f1c38301cea011e6a5aef1b7ec5", "filename": "tests/ui/traits/multidispatch-convert-ambig-dest.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ae0143007839fada3fadd790dc9b8c1a36c61dee/tests%2Fui%2Ftraits%2Fmultidispatch-convert-ambig-dest.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ae0143007839fada3fadd790dc9b8c1a36c61dee/tests%2Fui%2Ftraits%2Fmultidispatch-convert-ambig-dest.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ftraits%2Fmultidispatch-convert-ambig-dest.stderr?ref=ae0143007839fada3fadd790dc9b8c1a36c61dee", "patch": "@@ -29,7 +29,7 @@ note: required by a bound in `test`\n   --> $DIR/multidispatch-convert-ambig-dest.rs:21:11\n    |\n LL | fn test<T,U>(_: T, _: U)\n-   |    ---- required by a bound in this\n+   |    ---- required by a bound in this function\n LL | where T : Convert<U>\n    |           ^^^^^^^^^^ required by this bound in `test`\n help: consider specifying the generic arguments"}, {"sha": "ed9b57cb1bd59d1abe1406b0046a27dc23b8ea4d", "filename": "tests/ui/traits/non_lifetime_binders/bad-sized-cond.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/ae0143007839fada3fadd790dc9b8c1a36c61dee/tests%2Fui%2Ftraits%2Fnon_lifetime_binders%2Fbad-sized-cond.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ae0143007839fada3fadd790dc9b8c1a36c61dee/tests%2Fui%2Ftraits%2Fnon_lifetime_binders%2Fbad-sized-cond.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ftraits%2Fnon_lifetime_binders%2Fbad-sized-cond.stderr?ref=ae0143007839fada3fadd790dc9b8c1a36c61dee", "patch": "@@ -18,7 +18,7 @@ note: required by a bound in `foo`\n   --> $DIR/bad-sized-cond.rs:6:15\n    |\n LL | pub fn foo()\n-   |        --- required by a bound in this\n+   |        --- required by a bound in this function\n LL | where\n LL |     for<V> V: Sized,\n    |               ^^^^^ required by this bound in `foo`\n@@ -35,7 +35,7 @@ note: required by a bound in `bar`\n   --> $DIR/bad-sized-cond.rs:12:15\n    |\n LL | pub fn bar()\n-   |        --- required by a bound in this\n+   |        --- required by a bound in this function\n LL | where\n LL |     for<V> V: IntoIterator,\n    |               ^^^^^^^^^^^^ required by this bound in `bar`\n@@ -52,7 +52,7 @@ note: required by a bound in `bar`\n   --> $DIR/bad-sized-cond.rs:12:15\n    |\n LL | pub fn bar()\n-   |        --- required by a bound in this\n+   |        --- required by a bound in this function\n LL | where\n LL |     for<V> V: IntoIterator,\n    |               ^^^^^^^^^^^^ required by this bound in `bar`"}, {"sha": "7bd02550fb3849be754007e6ef4e25b517a82aeb", "filename": "tests/ui/traits/non_lifetime_binders/fail.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ae0143007839fada3fadd790dc9b8c1a36c61dee/tests%2Fui%2Ftraits%2Fnon_lifetime_binders%2Ffail.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ae0143007839fada3fadd790dc9b8c1a36c61dee/tests%2Fui%2Ftraits%2Fnon_lifetime_binders%2Ffail.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ftraits%2Fnon_lifetime_binders%2Ffail.stderr?ref=ae0143007839fada3fadd790dc9b8c1a36c61dee", "patch": "@@ -17,7 +17,7 @@ note: required by a bound in `fail`\n   --> $DIR/fail.rs:10:15\n    |\n LL | fn fail()\n-   |    ---- required by a bound in this\n+   |    ---- required by a bound in this function\n LL | where\n LL |     for<T> T: Trait,\n    |               ^^^^^ required by this bound in `fail`\n@@ -33,7 +33,7 @@ note: required by a bound in `auto_trait`\n   --> $DIR/fail.rs:15:15\n    |\n LL | fn auto_trait()\n-   |    ---------- required by a bound in this\n+   |    ---------- required by a bound in this function\n LL | where\n LL |     for<T> T: Send,\n    |               ^^^^ required by this bound in `auto_trait`"}, {"sha": "848b4e69a4bb846b0243c8eca52ed35d35cf9500", "filename": "tests/ui/traits/object/enforce-supertrait-projection.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ae0143007839fada3fadd790dc9b8c1a36c61dee/tests%2Fui%2Ftraits%2Fobject%2Fenforce-supertrait-projection.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ae0143007839fada3fadd790dc9b8c1a36c61dee/tests%2Fui%2Ftraits%2Fobject%2Fenforce-supertrait-projection.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ftraits%2Fobject%2Fenforce-supertrait-projection.stderr?ref=ae0143007839fada3fadd790dc9b8c1a36c61dee", "patch": "@@ -16,7 +16,7 @@ note: required by a bound in `foo`\n   --> $DIR/enforce-supertrait-projection.rs:15:8\n    |\n LL | fn foo<A, B, T: ?Sized>(x: T::A) -> B\n-   |    --- required by a bound in this\n+   |    --- required by a bound in this function\n LL | where\n LL |     T: Trait<B = B>,\n    |        ^^^^^^^^^^^^ required by this bound in `foo`"}, {"sha": "164e88ede202f3020a2d4ceca992de0d7ad10ce5", "filename": "tests/ui/transmutability/arrays/should_require_well_defined_layout.stderr", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/ae0143007839fada3fadd790dc9b8c1a36c61dee/tests%2Fui%2Ftransmutability%2Farrays%2Fshould_require_well_defined_layout.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ae0143007839fada3fadd790dc9b8c1a36c61dee/tests%2Fui%2Ftransmutability%2Farrays%2Fshould_require_well_defined_layout.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ftransmutability%2Farrays%2Fshould_require_well_defined_layout.stderr?ref=ae0143007839fada3fadd790dc9b8c1a36c61dee", "patch": "@@ -9,7 +9,7 @@ note: required by a bound in `is_maybe_transmutable`\n   --> $DIR/should_require_well_defined_layout.rs:13:14\n    |\n LL |       pub fn is_maybe_transmutable<Src, Dst>()\n-   |              --------------------- required by a bound in this\n+   |              --------------------- required by a bound in this function\n LL |       where\n LL |           Dst: BikeshedIntrinsicFrom<Src, Context, {\n    |  ______________^\n@@ -31,7 +31,7 @@ note: required by a bound in `is_maybe_transmutable`\n   --> $DIR/should_require_well_defined_layout.rs:13:14\n    |\n LL |       pub fn is_maybe_transmutable<Src, Dst>()\n-   |              --------------------- required by a bound in this\n+   |              --------------------- required by a bound in this function\n LL |       where\n LL |           Dst: BikeshedIntrinsicFrom<Src, Context, {\n    |  ______________^\n@@ -53,7 +53,7 @@ note: required by a bound in `is_maybe_transmutable`\n   --> $DIR/should_require_well_defined_layout.rs:13:14\n    |\n LL |       pub fn is_maybe_transmutable<Src, Dst>()\n-   |              --------------------- required by a bound in this\n+   |              --------------------- required by a bound in this function\n LL |       where\n LL |           Dst: BikeshedIntrinsicFrom<Src, Context, {\n    |  ______________^\n@@ -75,7 +75,7 @@ note: required by a bound in `is_maybe_transmutable`\n   --> $DIR/should_require_well_defined_layout.rs:13:14\n    |\n LL |       pub fn is_maybe_transmutable<Src, Dst>()\n-   |              --------------------- required by a bound in this\n+   |              --------------------- required by a bound in this function\n LL |       where\n LL |           Dst: BikeshedIntrinsicFrom<Src, Context, {\n    |  ______________^\n@@ -97,7 +97,7 @@ note: required by a bound in `is_maybe_transmutable`\n   --> $DIR/should_require_well_defined_layout.rs:13:14\n    |\n LL |       pub fn is_maybe_transmutable<Src, Dst>()\n-   |              --------------------- required by a bound in this\n+   |              --------------------- required by a bound in this function\n LL |       where\n LL |           Dst: BikeshedIntrinsicFrom<Src, Context, {\n    |  ______________^\n@@ -119,7 +119,7 @@ note: required by a bound in `is_maybe_transmutable`\n   --> $DIR/should_require_well_defined_layout.rs:13:14\n    |\n LL |       pub fn is_maybe_transmutable<Src, Dst>()\n-   |              --------------------- required by a bound in this\n+   |              --------------------- required by a bound in this function\n LL |       where\n LL |           Dst: BikeshedIntrinsicFrom<Src, Context, {\n    |  ______________^"}, {"sha": "0f0f77f168372a57929f947edfe639097f172a62", "filename": "tests/ui/transmutability/enums/repr/primitive_reprs_should_have_correct_length.stderr", "status": "modified", "additions": 20, "deletions": 20, "changes": 40, "blob_url": "https://github.com/rust-lang/rust/blob/ae0143007839fada3fadd790dc9b8c1a36c61dee/tests%2Fui%2Ftransmutability%2Fenums%2Frepr%2Fprimitive_reprs_should_have_correct_length.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ae0143007839fada3fadd790dc9b8c1a36c61dee/tests%2Fui%2Ftransmutability%2Fenums%2Frepr%2Fprimitive_reprs_should_have_correct_length.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ftransmutability%2Fenums%2Frepr%2Fprimitive_reprs_should_have_correct_length.stderr?ref=ae0143007839fada3fadd790dc9b8c1a36c61dee", "patch": "@@ -9,7 +9,7 @@ note: required by a bound in `is_transmutable`\n   --> $DIR/primitive_reprs_should_have_correct_length.rs:12:14\n    |\n LL |       pub fn is_transmutable<Src, Dst, Context>()\n-   |              --------------- required by a bound in this\n+   |              --------------- required by a bound in this function\n LL |       where\n LL |           Dst: BikeshedIntrinsicFrom<Src, Context, {\n    |  ______________^\n@@ -32,7 +32,7 @@ note: required by a bound in `is_transmutable`\n   --> $DIR/primitive_reprs_should_have_correct_length.rs:12:14\n    |\n LL |       pub fn is_transmutable<Src, Dst, Context>()\n-   |              --------------- required by a bound in this\n+   |              --------------- required by a bound in this function\n LL |       where\n LL |           Dst: BikeshedIntrinsicFrom<Src, Context, {\n    |  ______________^\n@@ -55,7 +55,7 @@ note: required by a bound in `is_transmutable`\n   --> $DIR/primitive_reprs_should_have_correct_length.rs:12:14\n    |\n LL |       pub fn is_transmutable<Src, Dst, Context>()\n-   |              --------------- required by a bound in this\n+   |              --------------- required by a bound in this function\n LL |       where\n LL |           Dst: BikeshedIntrinsicFrom<Src, Context, {\n    |  ______________^\n@@ -78,7 +78,7 @@ note: required by a bound in `is_transmutable`\n   --> $DIR/primitive_reprs_should_have_correct_length.rs:12:14\n    |\n LL |       pub fn is_transmutable<Src, Dst, Context>()\n-   |              --------------- required by a bound in this\n+   |              --------------- required by a bound in this function\n LL |       where\n LL |           Dst: BikeshedIntrinsicFrom<Src, Context, {\n    |  ______________^\n@@ -101,7 +101,7 @@ note: required by a bound in `is_transmutable`\n   --> $DIR/primitive_reprs_should_have_correct_length.rs:12:14\n    |\n LL |       pub fn is_transmutable<Src, Dst, Context>()\n-   |              --------------- required by a bound in this\n+   |              --------------- required by a bound in this function\n LL |       where\n LL |           Dst: BikeshedIntrinsicFrom<Src, Context, {\n    |  ______________^\n@@ -124,7 +124,7 @@ note: required by a bound in `is_transmutable`\n   --> $DIR/primitive_reprs_should_have_correct_length.rs:12:14\n    |\n LL |       pub fn is_transmutable<Src, Dst, Context>()\n-   |              --------------- required by a bound in this\n+   |              --------------- required by a bound in this function\n LL |       where\n LL |           Dst: BikeshedIntrinsicFrom<Src, Context, {\n    |  ______________^\n@@ -147,7 +147,7 @@ note: required by a bound in `is_transmutable`\n   --> $DIR/primitive_reprs_should_have_correct_length.rs:12:14\n    |\n LL |       pub fn is_transmutable<Src, Dst, Context>()\n-   |              --------------- required by a bound in this\n+   |              --------------- required by a bound in this function\n LL |       where\n LL |           Dst: BikeshedIntrinsicFrom<Src, Context, {\n    |  ______________^\n@@ -170,7 +170,7 @@ note: required by a bound in `is_transmutable`\n   --> $DIR/primitive_reprs_should_have_correct_length.rs:12:14\n    |\n LL |       pub fn is_transmutable<Src, Dst, Context>()\n-   |              --------------- required by a bound in this\n+   |              --------------- required by a bound in this function\n LL |       where\n LL |           Dst: BikeshedIntrinsicFrom<Src, Context, {\n    |  ______________^\n@@ -193,7 +193,7 @@ note: required by a bound in `is_transmutable`\n   --> $DIR/primitive_reprs_should_have_correct_length.rs:12:14\n    |\n LL |       pub fn is_transmutable<Src, Dst, Context>()\n-   |              --------------- required by a bound in this\n+   |              --------------- required by a bound in this function\n LL |       where\n LL |           Dst: BikeshedIntrinsicFrom<Src, Context, {\n    |  ______________^\n@@ -216,7 +216,7 @@ note: required by a bound in `is_transmutable`\n   --> $DIR/primitive_reprs_should_have_correct_length.rs:12:14\n    |\n LL |       pub fn is_transmutable<Src, Dst, Context>()\n-   |              --------------- required by a bound in this\n+   |              --------------- required by a bound in this function\n LL |       where\n LL |           Dst: BikeshedIntrinsicFrom<Src, Context, {\n    |  ______________^\n@@ -239,7 +239,7 @@ note: required by a bound in `is_transmutable`\n   --> $DIR/primitive_reprs_should_have_correct_length.rs:12:14\n    |\n LL |       pub fn is_transmutable<Src, Dst, Context>()\n-   |              --------------- required by a bound in this\n+   |              --------------- required by a bound in this function\n LL |       where\n LL |           Dst: BikeshedIntrinsicFrom<Src, Context, {\n    |  ______________^\n@@ -262,7 +262,7 @@ note: required by a bound in `is_transmutable`\n   --> $DIR/primitive_reprs_should_have_correct_length.rs:12:14\n    |\n LL |       pub fn is_transmutable<Src, Dst, Context>()\n-   |              --------------- required by a bound in this\n+   |              --------------- required by a bound in this function\n LL |       where\n LL |           Dst: BikeshedIntrinsicFrom<Src, Context, {\n    |  ______________^\n@@ -285,7 +285,7 @@ note: required by a bound in `is_transmutable`\n   --> $DIR/primitive_reprs_should_have_correct_length.rs:12:14\n    |\n LL |       pub fn is_transmutable<Src, Dst, Context>()\n-   |              --------------- required by a bound in this\n+   |              --------------- required by a bound in this function\n LL |       where\n LL |           Dst: BikeshedIntrinsicFrom<Src, Context, {\n    |  ______________^\n@@ -308,7 +308,7 @@ note: required by a bound in `is_transmutable`\n   --> $DIR/primitive_reprs_should_have_correct_length.rs:12:14\n    |\n LL |       pub fn is_transmutable<Src, Dst, Context>()\n-   |              --------------- required by a bound in this\n+   |              --------------- required by a bound in this function\n LL |       where\n LL |           Dst: BikeshedIntrinsicFrom<Src, Context, {\n    |  ______________^\n@@ -331,7 +331,7 @@ note: required by a bound in `is_transmutable`\n   --> $DIR/primitive_reprs_should_have_correct_length.rs:12:14\n    |\n LL |       pub fn is_transmutable<Src, Dst, Context>()\n-   |              --------------- required by a bound in this\n+   |              --------------- required by a bound in this function\n LL |       where\n LL |           Dst: BikeshedIntrinsicFrom<Src, Context, {\n    |  ______________^\n@@ -354,7 +354,7 @@ note: required by a bound in `is_transmutable`\n   --> $DIR/primitive_reprs_should_have_correct_length.rs:12:14\n    |\n LL |       pub fn is_transmutable<Src, Dst, Context>()\n-   |              --------------- required by a bound in this\n+   |              --------------- required by a bound in this function\n LL |       where\n LL |           Dst: BikeshedIntrinsicFrom<Src, Context, {\n    |  ______________^\n@@ -377,7 +377,7 @@ note: required by a bound in `is_transmutable`\n   --> $DIR/primitive_reprs_should_have_correct_length.rs:12:14\n    |\n LL |       pub fn is_transmutable<Src, Dst, Context>()\n-   |              --------------- required by a bound in this\n+   |              --------------- required by a bound in this function\n LL |       where\n LL |           Dst: BikeshedIntrinsicFrom<Src, Context, {\n    |  ______________^\n@@ -400,7 +400,7 @@ note: required by a bound in `is_transmutable`\n   --> $DIR/primitive_reprs_should_have_correct_length.rs:12:14\n    |\n LL |       pub fn is_transmutable<Src, Dst, Context>()\n-   |              --------------- required by a bound in this\n+   |              --------------- required by a bound in this function\n LL |       where\n LL |           Dst: BikeshedIntrinsicFrom<Src, Context, {\n    |  ______________^\n@@ -423,7 +423,7 @@ note: required by a bound in `is_transmutable`\n   --> $DIR/primitive_reprs_should_have_correct_length.rs:12:14\n    |\n LL |       pub fn is_transmutable<Src, Dst, Context>()\n-   |              --------------- required by a bound in this\n+   |              --------------- required by a bound in this function\n LL |       where\n LL |           Dst: BikeshedIntrinsicFrom<Src, Context, {\n    |  ______________^\n@@ -446,7 +446,7 @@ note: required by a bound in `is_transmutable`\n   --> $DIR/primitive_reprs_should_have_correct_length.rs:12:14\n    |\n LL |       pub fn is_transmutable<Src, Dst, Context>()\n-   |              --------------- required by a bound in this\n+   |              --------------- required by a bound in this function\n LL |       where\n LL |           Dst: BikeshedIntrinsicFrom<Src, Context, {\n    |  ______________^"}, {"sha": "d456a746f5ebd1b65350f6e0876bd1d342eaed79", "filename": "tests/ui/transmutability/enums/repr/should_require_well_defined_layout.stderr", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/ae0143007839fada3fadd790dc9b8c1a36c61dee/tests%2Fui%2Ftransmutability%2Fenums%2Frepr%2Fshould_require_well_defined_layout.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ae0143007839fada3fadd790dc9b8c1a36c61dee/tests%2Fui%2Ftransmutability%2Fenums%2Frepr%2Fshould_require_well_defined_layout.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ftransmutability%2Fenums%2Frepr%2Fshould_require_well_defined_layout.stderr?ref=ae0143007839fada3fadd790dc9b8c1a36c61dee", "patch": "@@ -9,7 +9,7 @@ note: required by a bound in `is_maybe_transmutable`\n   --> $DIR/should_require_well_defined_layout.rs:14:14\n    |\n LL |       pub fn is_maybe_transmutable<Src, Dst>()\n-   |              --------------------- required by a bound in this\n+   |              --------------------- required by a bound in this function\n LL |       where\n LL |           Dst: BikeshedIntrinsicFrom<Src, Context, {\n    |  ______________^\n@@ -32,7 +32,7 @@ note: required by a bound in `is_maybe_transmutable`\n   --> $DIR/should_require_well_defined_layout.rs:14:14\n    |\n LL |       pub fn is_maybe_transmutable<Src, Dst>()\n-   |              --------------------- required by a bound in this\n+   |              --------------------- required by a bound in this function\n LL |       where\n LL |           Dst: BikeshedIntrinsicFrom<Src, Context, {\n    |  ______________^\n@@ -55,7 +55,7 @@ note: required by a bound in `is_maybe_transmutable`\n   --> $DIR/should_require_well_defined_layout.rs:14:14\n    |\n LL |       pub fn is_maybe_transmutable<Src, Dst>()\n-   |              --------------------- required by a bound in this\n+   |              --------------------- required by a bound in this function\n LL |       where\n LL |           Dst: BikeshedIntrinsicFrom<Src, Context, {\n    |  ______________^\n@@ -78,7 +78,7 @@ note: required by a bound in `is_maybe_transmutable`\n   --> $DIR/should_require_well_defined_layout.rs:14:14\n    |\n LL |       pub fn is_maybe_transmutable<Src, Dst>()\n-   |              --------------------- required by a bound in this\n+   |              --------------------- required by a bound in this function\n LL |       where\n LL |           Dst: BikeshedIntrinsicFrom<Src, Context, {\n    |  ______________^\n@@ -101,7 +101,7 @@ note: required by a bound in `is_maybe_transmutable`\n   --> $DIR/should_require_well_defined_layout.rs:14:14\n    |\n LL |       pub fn is_maybe_transmutable<Src, Dst>()\n-   |              --------------------- required by a bound in this\n+   |              --------------------- required by a bound in this function\n LL |       where\n LL |           Dst: BikeshedIntrinsicFrom<Src, Context, {\n    |  ______________^\n@@ -124,7 +124,7 @@ note: required by a bound in `is_maybe_transmutable`\n   --> $DIR/should_require_well_defined_layout.rs:14:14\n    |\n LL |       pub fn is_maybe_transmutable<Src, Dst>()\n-   |              --------------------- required by a bound in this\n+   |              --------------------- required by a bound in this function\n LL |       where\n LL |           Dst: BikeshedIntrinsicFrom<Src, Context, {\n    |  ______________^"}, {"sha": "f4988239df943ac7970cdf9f087e454641aa20b1", "filename": "tests/ui/transmutability/enums/should_pad_variants.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ae0143007839fada3fadd790dc9b8c1a36c61dee/tests%2Fui%2Ftransmutability%2Fenums%2Fshould_pad_variants.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ae0143007839fada3fadd790dc9b8c1a36c61dee/tests%2Fui%2Ftransmutability%2Fenums%2Fshould_pad_variants.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ftransmutability%2Fenums%2Fshould_pad_variants.stderr?ref=ae0143007839fada3fadd790dc9b8c1a36c61dee", "patch": "@@ -9,7 +9,7 @@ note: required by a bound in `is_transmutable`\n   --> $DIR/should_pad_variants.rs:13:14\n    |\n LL |       pub fn is_transmutable<Src, Dst, Context>()\n-   |              --------------- required by a bound in this\n+   |              --------------- required by a bound in this function\n LL |       where\n LL |           Dst: BikeshedIntrinsicFrom<Src, Context, {\n    |  ______________^"}, {"sha": "350583b0b8515cdf63aa1eefe3947d7ee3f85f3f", "filename": "tests/ui/transmutability/enums/should_respect_endianness.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ae0143007839fada3fadd790dc9b8c1a36c61dee/tests%2Fui%2Ftransmutability%2Fenums%2Fshould_respect_endianness.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ae0143007839fada3fadd790dc9b8c1a36c61dee/tests%2Fui%2Ftransmutability%2Fenums%2Fshould_respect_endianness.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ftransmutability%2Fenums%2Fshould_respect_endianness.stderr?ref=ae0143007839fada3fadd790dc9b8c1a36c61dee", "patch": "@@ -9,7 +9,7 @@ note: required by a bound in `is_transmutable`\n   --> $DIR/should_respect_endianness.rs:14:14\n    |\n LL |       pub fn is_transmutable<Src, Dst>()\n-   |              --------------- required by a bound in this\n+   |              --------------- required by a bound in this function\n LL |       where\n LL |           Dst: BikeshedIntrinsicFrom<Src, Context, {\n    |  ______________^"}, {"sha": "22decf15e546b0eccddec8cb62acbcd15df78933", "filename": "tests/ui/transmutability/primitives/bool.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ae0143007839fada3fadd790dc9b8c1a36c61dee/tests%2Fui%2Ftransmutability%2Fprimitives%2Fbool.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ae0143007839fada3fadd790dc9b8c1a36c61dee/tests%2Fui%2Ftransmutability%2Fprimitives%2Fbool.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ftransmutability%2Fprimitives%2Fbool.stderr?ref=ae0143007839fada3fadd790dc9b8c1a36c61dee", "patch": "@@ -9,7 +9,7 @@ note: required by a bound in `is_transmutable`\n   --> $DIR/bool.rs:12:14\n    |\n LL |     pub fn is_transmutable<Src, Dst>()\n-   |            --------------- required by a bound in this\n+   |            --------------- required by a bound in this function\n LL |     where\n LL |         Dst: BikeshedIntrinsicFrom<Src, Context, { Assume::SAFETY }>\n    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ required by this bound in `is_transmutable`"}, {"sha": "c04a0e82aa283ccf719c167121dd6cef35519ef2", "filename": "tests/ui/transmutability/primitives/numbers.stderr", "status": "modified", "additions": 57, "deletions": 57, "changes": 114, "blob_url": "https://github.com/rust-lang/rust/blob/ae0143007839fada3fadd790dc9b8c1a36c61dee/tests%2Fui%2Ftransmutability%2Fprimitives%2Fnumbers.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ae0143007839fada3fadd790dc9b8c1a36c61dee/tests%2Fui%2Ftransmutability%2Fprimitives%2Fnumbers.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ftransmutability%2Fprimitives%2Fnumbers.stderr?ref=ae0143007839fada3fadd790dc9b8c1a36c61dee", "patch": "@@ -9,7 +9,7 @@ note: required by a bound in `is_transmutable`\n   --> $DIR/numbers.rs:12:14\n    |\n LL |     pub fn is_transmutable<Src, Dst>()\n-   |            --------------- required by a bound in this\n+   |            --------------- required by a bound in this function\n LL |     where\n LL |         Dst: BikeshedIntrinsicFrom<Src, Context>\n    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ required by this bound in `is_transmutable`\n@@ -25,7 +25,7 @@ note: required by a bound in `is_transmutable`\n   --> $DIR/numbers.rs:12:14\n    |\n LL |     pub fn is_transmutable<Src, Dst>()\n-   |            --------------- required by a bound in this\n+   |            --------------- required by a bound in this function\n LL |     where\n LL |         Dst: BikeshedIntrinsicFrom<Src, Context>\n    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ required by this bound in `is_transmutable`\n@@ -41,7 +41,7 @@ note: required by a bound in `is_transmutable`\n   --> $DIR/numbers.rs:12:14\n    |\n LL |     pub fn is_transmutable<Src, Dst>()\n-   |            --------------- required by a bound in this\n+   |            --------------- required by a bound in this function\n LL |     where\n LL |         Dst: BikeshedIntrinsicFrom<Src, Context>\n    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ required by this bound in `is_transmutable`\n@@ -57,7 +57,7 @@ note: required by a bound in `is_transmutable`\n   --> $DIR/numbers.rs:12:14\n    |\n LL |     pub fn is_transmutable<Src, Dst>()\n-   |            --------------- required by a bound in this\n+   |            --------------- required by a bound in this function\n LL |     where\n LL |         Dst: BikeshedIntrinsicFrom<Src, Context>\n    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ required by this bound in `is_transmutable`\n@@ -73,7 +73,7 @@ note: required by a bound in `is_transmutable`\n   --> $DIR/numbers.rs:12:14\n    |\n LL |     pub fn is_transmutable<Src, Dst>()\n-   |            --------------- required by a bound in this\n+   |            --------------- required by a bound in this function\n LL |     where\n LL |         Dst: BikeshedIntrinsicFrom<Src, Context>\n    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ required by this bound in `is_transmutable`\n@@ -89,7 +89,7 @@ note: required by a bound in `is_transmutable`\n   --> $DIR/numbers.rs:12:14\n    |\n LL |     pub fn is_transmutable<Src, Dst>()\n-   |            --------------- required by a bound in this\n+   |            --------------- required by a bound in this function\n LL |     where\n LL |         Dst: BikeshedIntrinsicFrom<Src, Context>\n    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ required by this bound in `is_transmutable`\n@@ -105,7 +105,7 @@ note: required by a bound in `is_transmutable`\n   --> $DIR/numbers.rs:12:14\n    |\n LL |     pub fn is_transmutable<Src, Dst>()\n-   |            --------------- required by a bound in this\n+   |            --------------- required by a bound in this function\n LL |     where\n LL |         Dst: BikeshedIntrinsicFrom<Src, Context>\n    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ required by this bound in `is_transmutable`\n@@ -121,7 +121,7 @@ note: required by a bound in `is_transmutable`\n   --> $DIR/numbers.rs:12:14\n    |\n LL |     pub fn is_transmutable<Src, Dst>()\n-   |            --------------- required by a bound in this\n+   |            --------------- required by a bound in this function\n LL |     where\n LL |         Dst: BikeshedIntrinsicFrom<Src, Context>\n    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ required by this bound in `is_transmutable`\n@@ -137,7 +137,7 @@ note: required by a bound in `is_transmutable`\n   --> $DIR/numbers.rs:12:14\n    |\n LL |     pub fn is_transmutable<Src, Dst>()\n-   |            --------------- required by a bound in this\n+   |            --------------- required by a bound in this function\n LL |     where\n LL |         Dst: BikeshedIntrinsicFrom<Src, Context>\n    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ required by this bound in `is_transmutable`\n@@ -153,7 +153,7 @@ note: required by a bound in `is_transmutable`\n   --> $DIR/numbers.rs:12:14\n    |\n LL |     pub fn is_transmutable<Src, Dst>()\n-   |            --------------- required by a bound in this\n+   |            --------------- required by a bound in this function\n LL |     where\n LL |         Dst: BikeshedIntrinsicFrom<Src, Context>\n    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ required by this bound in `is_transmutable`\n@@ -169,7 +169,7 @@ note: required by a bound in `is_transmutable`\n   --> $DIR/numbers.rs:12:14\n    |\n LL |     pub fn is_transmutable<Src, Dst>()\n-   |            --------------- required by a bound in this\n+   |            --------------- required by a bound in this function\n LL |     where\n LL |         Dst: BikeshedIntrinsicFrom<Src, Context>\n    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ required by this bound in `is_transmutable`\n@@ -185,7 +185,7 @@ note: required by a bound in `is_transmutable`\n   --> $DIR/numbers.rs:12:14\n    |\n LL |     pub fn is_transmutable<Src, Dst>()\n-   |            --------------- required by a bound in this\n+   |            --------------- required by a bound in this function\n LL |     where\n LL |         Dst: BikeshedIntrinsicFrom<Src, Context>\n    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ required by this bound in `is_transmutable`\n@@ -201,7 +201,7 @@ note: required by a bound in `is_transmutable`\n   --> $DIR/numbers.rs:12:14\n    |\n LL |     pub fn is_transmutable<Src, Dst>()\n-   |            --------------- required by a bound in this\n+   |            --------------- required by a bound in this function\n LL |     where\n LL |         Dst: BikeshedIntrinsicFrom<Src, Context>\n    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ required by this bound in `is_transmutable`\n@@ -217,7 +217,7 @@ note: required by a bound in `is_transmutable`\n   --> $DIR/numbers.rs:12:14\n    |\n LL |     pub fn is_transmutable<Src, Dst>()\n-   |            --------------- required by a bound in this\n+   |            --------------- required by a bound in this function\n LL |     where\n LL |         Dst: BikeshedIntrinsicFrom<Src, Context>\n    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ required by this bound in `is_transmutable`\n@@ -233,7 +233,7 @@ note: required by a bound in `is_transmutable`\n   --> $DIR/numbers.rs:12:14\n    |\n LL |     pub fn is_transmutable<Src, Dst>()\n-   |            --------------- required by a bound in this\n+   |            --------------- required by a bound in this function\n LL |     where\n LL |         Dst: BikeshedIntrinsicFrom<Src, Context>\n    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ required by this bound in `is_transmutable`\n@@ -249,7 +249,7 @@ note: required by a bound in `is_transmutable`\n   --> $DIR/numbers.rs:12:14\n    |\n LL |     pub fn is_transmutable<Src, Dst>()\n-   |            --------------- required by a bound in this\n+   |            --------------- required by a bound in this function\n LL |     where\n LL |         Dst: BikeshedIntrinsicFrom<Src, Context>\n    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ required by this bound in `is_transmutable`\n@@ -265,7 +265,7 @@ note: required by a bound in `is_transmutable`\n   --> $DIR/numbers.rs:12:14\n    |\n LL |     pub fn is_transmutable<Src, Dst>()\n-   |            --------------- required by a bound in this\n+   |            --------------- required by a bound in this function\n LL |     where\n LL |         Dst: BikeshedIntrinsicFrom<Src, Context>\n    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ required by this bound in `is_transmutable`\n@@ -281,7 +281,7 @@ note: required by a bound in `is_transmutable`\n   --> $DIR/numbers.rs:12:14\n    |\n LL |     pub fn is_transmutable<Src, Dst>()\n-   |            --------------- required by a bound in this\n+   |            --------------- required by a bound in this function\n LL |     where\n LL |         Dst: BikeshedIntrinsicFrom<Src, Context>\n    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ required by this bound in `is_transmutable`\n@@ -297,7 +297,7 @@ note: required by a bound in `is_transmutable`\n   --> $DIR/numbers.rs:12:14\n    |\n LL |     pub fn is_transmutable<Src, Dst>()\n-   |            --------------- required by a bound in this\n+   |            --------------- required by a bound in this function\n LL |     where\n LL |         Dst: BikeshedIntrinsicFrom<Src, Context>\n    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ required by this bound in `is_transmutable`\n@@ -313,7 +313,7 @@ note: required by a bound in `is_transmutable`\n   --> $DIR/numbers.rs:12:14\n    |\n LL |     pub fn is_transmutable<Src, Dst>()\n-   |            --------------- required by a bound in this\n+   |            --------------- required by a bound in this function\n LL |     where\n LL |         Dst: BikeshedIntrinsicFrom<Src, Context>\n    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ required by this bound in `is_transmutable`\n@@ -329,7 +329,7 @@ note: required by a bound in `is_transmutable`\n   --> $DIR/numbers.rs:12:14\n    |\n LL |     pub fn is_transmutable<Src, Dst>()\n-   |            --------------- required by a bound in this\n+   |            --------------- required by a bound in this function\n LL |     where\n LL |         Dst: BikeshedIntrinsicFrom<Src, Context>\n    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ required by this bound in `is_transmutable`\n@@ -345,7 +345,7 @@ note: required by a bound in `is_transmutable`\n   --> $DIR/numbers.rs:12:14\n    |\n LL |     pub fn is_transmutable<Src, Dst>()\n-   |            --------------- required by a bound in this\n+   |            --------------- required by a bound in this function\n LL |     where\n LL |         Dst: BikeshedIntrinsicFrom<Src, Context>\n    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ required by this bound in `is_transmutable`\n@@ -361,7 +361,7 @@ note: required by a bound in `is_transmutable`\n   --> $DIR/numbers.rs:12:14\n    |\n LL |     pub fn is_transmutable<Src, Dst>()\n-   |            --------------- required by a bound in this\n+   |            --------------- required by a bound in this function\n LL |     where\n LL |         Dst: BikeshedIntrinsicFrom<Src, Context>\n    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ required by this bound in `is_transmutable`\n@@ -377,7 +377,7 @@ note: required by a bound in `is_transmutable`\n   --> $DIR/numbers.rs:12:14\n    |\n LL |     pub fn is_transmutable<Src, Dst>()\n-   |            --------------- required by a bound in this\n+   |            --------------- required by a bound in this function\n LL |     where\n LL |         Dst: BikeshedIntrinsicFrom<Src, Context>\n    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ required by this bound in `is_transmutable`\n@@ -393,7 +393,7 @@ note: required by a bound in `is_transmutable`\n   --> $DIR/numbers.rs:12:14\n    |\n LL |     pub fn is_transmutable<Src, Dst>()\n-   |            --------------- required by a bound in this\n+   |            --------------- required by a bound in this function\n LL |     where\n LL |         Dst: BikeshedIntrinsicFrom<Src, Context>\n    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ required by this bound in `is_transmutable`\n@@ -409,7 +409,7 @@ note: required by a bound in `is_transmutable`\n   --> $DIR/numbers.rs:12:14\n    |\n LL |     pub fn is_transmutable<Src, Dst>()\n-   |            --------------- required by a bound in this\n+   |            --------------- required by a bound in this function\n LL |     where\n LL |         Dst: BikeshedIntrinsicFrom<Src, Context>\n    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ required by this bound in `is_transmutable`\n@@ -425,7 +425,7 @@ note: required by a bound in `is_transmutable`\n   --> $DIR/numbers.rs:12:14\n    |\n LL |     pub fn is_transmutable<Src, Dst>()\n-   |            --------------- required by a bound in this\n+   |            --------------- required by a bound in this function\n LL |     where\n LL |         Dst: BikeshedIntrinsicFrom<Src, Context>\n    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ required by this bound in `is_transmutable`\n@@ -441,7 +441,7 @@ note: required by a bound in `is_transmutable`\n   --> $DIR/numbers.rs:12:14\n    |\n LL |     pub fn is_transmutable<Src, Dst>()\n-   |            --------------- required by a bound in this\n+   |            --------------- required by a bound in this function\n LL |     where\n LL |         Dst: BikeshedIntrinsicFrom<Src, Context>\n    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ required by this bound in `is_transmutable`\n@@ -457,7 +457,7 @@ note: required by a bound in `is_transmutable`\n   --> $DIR/numbers.rs:12:14\n    |\n LL |     pub fn is_transmutable<Src, Dst>()\n-   |            --------------- required by a bound in this\n+   |            --------------- required by a bound in this function\n LL |     where\n LL |         Dst: BikeshedIntrinsicFrom<Src, Context>\n    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ required by this bound in `is_transmutable`\n@@ -473,7 +473,7 @@ note: required by a bound in `is_transmutable`\n   --> $DIR/numbers.rs:12:14\n    |\n LL |     pub fn is_transmutable<Src, Dst>()\n-   |            --------------- required by a bound in this\n+   |            --------------- required by a bound in this function\n LL |     where\n LL |         Dst: BikeshedIntrinsicFrom<Src, Context>\n    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ required by this bound in `is_transmutable`\n@@ -489,7 +489,7 @@ note: required by a bound in `is_transmutable`\n   --> $DIR/numbers.rs:12:14\n    |\n LL |     pub fn is_transmutable<Src, Dst>()\n-   |            --------------- required by a bound in this\n+   |            --------------- required by a bound in this function\n LL |     where\n LL |         Dst: BikeshedIntrinsicFrom<Src, Context>\n    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ required by this bound in `is_transmutable`\n@@ -505,7 +505,7 @@ note: required by a bound in `is_transmutable`\n   --> $DIR/numbers.rs:12:14\n    |\n LL |     pub fn is_transmutable<Src, Dst>()\n-   |            --------------- required by a bound in this\n+   |            --------------- required by a bound in this function\n LL |     where\n LL |         Dst: BikeshedIntrinsicFrom<Src, Context>\n    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ required by this bound in `is_transmutable`\n@@ -521,7 +521,7 @@ note: required by a bound in `is_transmutable`\n   --> $DIR/numbers.rs:12:14\n    |\n LL |     pub fn is_transmutable<Src, Dst>()\n-   |            --------------- required by a bound in this\n+   |            --------------- required by a bound in this function\n LL |     where\n LL |         Dst: BikeshedIntrinsicFrom<Src, Context>\n    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ required by this bound in `is_transmutable`\n@@ -537,7 +537,7 @@ note: required by a bound in `is_transmutable`\n   --> $DIR/numbers.rs:12:14\n    |\n LL |     pub fn is_transmutable<Src, Dst>()\n-   |            --------------- required by a bound in this\n+   |            --------------- required by a bound in this function\n LL |     where\n LL |         Dst: BikeshedIntrinsicFrom<Src, Context>\n    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ required by this bound in `is_transmutable`\n@@ -553,7 +553,7 @@ note: required by a bound in `is_transmutable`\n   --> $DIR/numbers.rs:12:14\n    |\n LL |     pub fn is_transmutable<Src, Dst>()\n-   |            --------------- required by a bound in this\n+   |            --------------- required by a bound in this function\n LL |     where\n LL |         Dst: BikeshedIntrinsicFrom<Src, Context>\n    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ required by this bound in `is_transmutable`\n@@ -569,7 +569,7 @@ note: required by a bound in `is_transmutable`\n   --> $DIR/numbers.rs:12:14\n    |\n LL |     pub fn is_transmutable<Src, Dst>()\n-   |            --------------- required by a bound in this\n+   |            --------------- required by a bound in this function\n LL |     where\n LL |         Dst: BikeshedIntrinsicFrom<Src, Context>\n    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ required by this bound in `is_transmutable`\n@@ -585,7 +585,7 @@ note: required by a bound in `is_transmutable`\n   --> $DIR/numbers.rs:12:14\n    |\n LL |     pub fn is_transmutable<Src, Dst>()\n-   |            --------------- required by a bound in this\n+   |            --------------- required by a bound in this function\n LL |     where\n LL |         Dst: BikeshedIntrinsicFrom<Src, Context>\n    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ required by this bound in `is_transmutable`\n@@ -601,7 +601,7 @@ note: required by a bound in `is_transmutable`\n   --> $DIR/numbers.rs:12:14\n    |\n LL |     pub fn is_transmutable<Src, Dst>()\n-   |            --------------- required by a bound in this\n+   |            --------------- required by a bound in this function\n LL |     where\n LL |         Dst: BikeshedIntrinsicFrom<Src, Context>\n    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ required by this bound in `is_transmutable`\n@@ -617,7 +617,7 @@ note: required by a bound in `is_transmutable`\n   --> $DIR/numbers.rs:12:14\n    |\n LL |     pub fn is_transmutable<Src, Dst>()\n-   |            --------------- required by a bound in this\n+   |            --------------- required by a bound in this function\n LL |     where\n LL |         Dst: BikeshedIntrinsicFrom<Src, Context>\n    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ required by this bound in `is_transmutable`\n@@ -633,7 +633,7 @@ note: required by a bound in `is_transmutable`\n   --> $DIR/numbers.rs:12:14\n    |\n LL |     pub fn is_transmutable<Src, Dst>()\n-   |            --------------- required by a bound in this\n+   |            --------------- required by a bound in this function\n LL |     where\n LL |         Dst: BikeshedIntrinsicFrom<Src, Context>\n    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ required by this bound in `is_transmutable`\n@@ -649,7 +649,7 @@ note: required by a bound in `is_transmutable`\n   --> $DIR/numbers.rs:12:14\n    |\n LL |     pub fn is_transmutable<Src, Dst>()\n-   |            --------------- required by a bound in this\n+   |            --------------- required by a bound in this function\n LL |     where\n LL |         Dst: BikeshedIntrinsicFrom<Src, Context>\n    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ required by this bound in `is_transmutable`\n@@ -665,7 +665,7 @@ note: required by a bound in `is_transmutable`\n   --> $DIR/numbers.rs:12:14\n    |\n LL |     pub fn is_transmutable<Src, Dst>()\n-   |            --------------- required by a bound in this\n+   |            --------------- required by a bound in this function\n LL |     where\n LL |         Dst: BikeshedIntrinsicFrom<Src, Context>\n    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ required by this bound in `is_transmutable`\n@@ -681,7 +681,7 @@ note: required by a bound in `is_transmutable`\n   --> $DIR/numbers.rs:12:14\n    |\n LL |     pub fn is_transmutable<Src, Dst>()\n-   |            --------------- required by a bound in this\n+   |            --------------- required by a bound in this function\n LL |     where\n LL |         Dst: BikeshedIntrinsicFrom<Src, Context>\n    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ required by this bound in `is_transmutable`\n@@ -697,7 +697,7 @@ note: required by a bound in `is_transmutable`\n   --> $DIR/numbers.rs:12:14\n    |\n LL |     pub fn is_transmutable<Src, Dst>()\n-   |            --------------- required by a bound in this\n+   |            --------------- required by a bound in this function\n LL |     where\n LL |         Dst: BikeshedIntrinsicFrom<Src, Context>\n    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ required by this bound in `is_transmutable`\n@@ -713,7 +713,7 @@ note: required by a bound in `is_transmutable`\n   --> $DIR/numbers.rs:12:14\n    |\n LL |     pub fn is_transmutable<Src, Dst>()\n-   |            --------------- required by a bound in this\n+   |            --------------- required by a bound in this function\n LL |     where\n LL |         Dst: BikeshedIntrinsicFrom<Src, Context>\n    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ required by this bound in `is_transmutable`\n@@ -729,7 +729,7 @@ note: required by a bound in `is_transmutable`\n   --> $DIR/numbers.rs:12:14\n    |\n LL |     pub fn is_transmutable<Src, Dst>()\n-   |            --------------- required by a bound in this\n+   |            --------------- required by a bound in this function\n LL |     where\n LL |         Dst: BikeshedIntrinsicFrom<Src, Context>\n    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ required by this bound in `is_transmutable`\n@@ -745,7 +745,7 @@ note: required by a bound in `is_transmutable`\n   --> $DIR/numbers.rs:12:14\n    |\n LL |     pub fn is_transmutable<Src, Dst>()\n-   |            --------------- required by a bound in this\n+   |            --------------- required by a bound in this function\n LL |     where\n LL |         Dst: BikeshedIntrinsicFrom<Src, Context>\n    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ required by this bound in `is_transmutable`\n@@ -761,7 +761,7 @@ note: required by a bound in `is_transmutable`\n   --> $DIR/numbers.rs:12:14\n    |\n LL |     pub fn is_transmutable<Src, Dst>()\n-   |            --------------- required by a bound in this\n+   |            --------------- required by a bound in this function\n LL |     where\n LL |         Dst: BikeshedIntrinsicFrom<Src, Context>\n    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ required by this bound in `is_transmutable`\n@@ -777,7 +777,7 @@ note: required by a bound in `is_transmutable`\n   --> $DIR/numbers.rs:12:14\n    |\n LL |     pub fn is_transmutable<Src, Dst>()\n-   |            --------------- required by a bound in this\n+   |            --------------- required by a bound in this function\n LL |     where\n LL |         Dst: BikeshedIntrinsicFrom<Src, Context>\n    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ required by this bound in `is_transmutable`\n@@ -793,7 +793,7 @@ note: required by a bound in `is_transmutable`\n   --> $DIR/numbers.rs:12:14\n    |\n LL |     pub fn is_transmutable<Src, Dst>()\n-   |            --------------- required by a bound in this\n+   |            --------------- required by a bound in this function\n LL |     where\n LL |         Dst: BikeshedIntrinsicFrom<Src, Context>\n    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ required by this bound in `is_transmutable`\n@@ -809,7 +809,7 @@ note: required by a bound in `is_transmutable`\n   --> $DIR/numbers.rs:12:14\n    |\n LL |     pub fn is_transmutable<Src, Dst>()\n-   |            --------------- required by a bound in this\n+   |            --------------- required by a bound in this function\n LL |     where\n LL |         Dst: BikeshedIntrinsicFrom<Src, Context>\n    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ required by this bound in `is_transmutable`\n@@ -825,7 +825,7 @@ note: required by a bound in `is_transmutable`\n   --> $DIR/numbers.rs:12:14\n    |\n LL |     pub fn is_transmutable<Src, Dst>()\n-   |            --------------- required by a bound in this\n+   |            --------------- required by a bound in this function\n LL |     where\n LL |         Dst: BikeshedIntrinsicFrom<Src, Context>\n    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ required by this bound in `is_transmutable`\n@@ -841,7 +841,7 @@ note: required by a bound in `is_transmutable`\n   --> $DIR/numbers.rs:12:14\n    |\n LL |     pub fn is_transmutable<Src, Dst>()\n-   |            --------------- required by a bound in this\n+   |            --------------- required by a bound in this function\n LL |     where\n LL |         Dst: BikeshedIntrinsicFrom<Src, Context>\n    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ required by this bound in `is_transmutable`\n@@ -857,7 +857,7 @@ note: required by a bound in `is_transmutable`\n   --> $DIR/numbers.rs:12:14\n    |\n LL |     pub fn is_transmutable<Src, Dst>()\n-   |            --------------- required by a bound in this\n+   |            --------------- required by a bound in this function\n LL |     where\n LL |         Dst: BikeshedIntrinsicFrom<Src, Context>\n    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ required by this bound in `is_transmutable`\n@@ -873,7 +873,7 @@ note: required by a bound in `is_transmutable`\n   --> $DIR/numbers.rs:12:14\n    |\n LL |     pub fn is_transmutable<Src, Dst>()\n-   |            --------------- required by a bound in this\n+   |            --------------- required by a bound in this function\n LL |     where\n LL |         Dst: BikeshedIntrinsicFrom<Src, Context>\n    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ required by this bound in `is_transmutable`\n@@ -889,7 +889,7 @@ note: required by a bound in `is_transmutable`\n   --> $DIR/numbers.rs:12:14\n    |\n LL |     pub fn is_transmutable<Src, Dst>()\n-   |            --------------- required by a bound in this\n+   |            --------------- required by a bound in this function\n LL |     where\n LL |         Dst: BikeshedIntrinsicFrom<Src, Context>\n    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ required by this bound in `is_transmutable`\n@@ -905,7 +905,7 @@ note: required by a bound in `is_transmutable`\n   --> $DIR/numbers.rs:12:14\n    |\n LL |     pub fn is_transmutable<Src, Dst>()\n-   |            --------------- required by a bound in this\n+   |            --------------- required by a bound in this function\n LL |     where\n LL |         Dst: BikeshedIntrinsicFrom<Src, Context>\n    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ required by this bound in `is_transmutable`"}, {"sha": "988cd33b3bf7be1801ba9e2e13b78484151a4681", "filename": "tests/ui/transmutability/primitives/unit.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ae0143007839fada3fadd790dc9b8c1a36c61dee/tests%2Fui%2Ftransmutability%2Fprimitives%2Funit.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ae0143007839fada3fadd790dc9b8c1a36c61dee/tests%2Fui%2Ftransmutability%2Fprimitives%2Funit.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ftransmutability%2Fprimitives%2Funit.stderr?ref=ae0143007839fada3fadd790dc9b8c1a36c61dee", "patch": "@@ -9,7 +9,7 @@ note: required by a bound in `is_transmutable`\n   --> $DIR/unit.rs:12:14\n    |\n LL |       pub fn is_transmutable<Src, Dst, Context>()\n-   |              --------------- required by a bound in this\n+   |              --------------- required by a bound in this function\n LL |       where\n LL |           Dst: BikeshedIntrinsicFrom<Src, Context, {\n    |  ______________^"}, {"sha": "eb3bd03fd3169e5db1e9e4d8bdc57a1364009f6f", "filename": "tests/ui/transmutability/references.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ae0143007839fada3fadd790dc9b8c1a36c61dee/tests%2Fui%2Ftransmutability%2Freferences.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ae0143007839fada3fadd790dc9b8c1a36c61dee/tests%2Fui%2Ftransmutability%2Freferences.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ftransmutability%2Freferences.stderr?ref=ae0143007839fada3fadd790dc9b8c1a36c61dee", "patch": "@@ -9,7 +9,7 @@ note: required by a bound in `is_maybe_transmutable`\n   --> $DIR/references.rs:13:14\n    |\n LL |       pub fn is_maybe_transmutable<Src, Dst>()\n-   |              --------------------- required by a bound in this\n+   |              --------------------- required by a bound in this function\n LL |       where\n LL |           Dst: BikeshedIntrinsicFrom<Src, Context, {\n    |  ______________^"}, {"sha": "d9aebac6417b35206a77a7d6d77481d172f9d8fa", "filename": "tests/ui/transmutability/structs/repr/should_require_well_defined_layout.stderr", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/ae0143007839fada3fadd790dc9b8c1a36c61dee/tests%2Fui%2Ftransmutability%2Fstructs%2Frepr%2Fshould_require_well_defined_layout.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ae0143007839fada3fadd790dc9b8c1a36c61dee/tests%2Fui%2Ftransmutability%2Fstructs%2Frepr%2Fshould_require_well_defined_layout.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ftransmutability%2Fstructs%2Frepr%2Fshould_require_well_defined_layout.stderr?ref=ae0143007839fada3fadd790dc9b8c1a36c61dee", "patch": "@@ -9,7 +9,7 @@ note: required by a bound in `is_maybe_transmutable`\n   --> $DIR/should_require_well_defined_layout.rs:13:14\n    |\n LL |       pub fn is_maybe_transmutable<Src, Dst>()\n-   |              --------------------- required by a bound in this\n+   |              --------------------- required by a bound in this function\n LL |       where\n LL |           Dst: BikeshedIntrinsicFrom<Src, Context, {\n    |  ______________^\n@@ -32,7 +32,7 @@ note: required by a bound in `is_maybe_transmutable`\n   --> $DIR/should_require_well_defined_layout.rs:13:14\n    |\n LL |       pub fn is_maybe_transmutable<Src, Dst>()\n-   |              --------------------- required by a bound in this\n+   |              --------------------- required by a bound in this function\n LL |       where\n LL |           Dst: BikeshedIntrinsicFrom<Src, Context, {\n    |  ______________^\n@@ -55,7 +55,7 @@ note: required by a bound in `is_maybe_transmutable`\n   --> $DIR/should_require_well_defined_layout.rs:13:14\n    |\n LL |       pub fn is_maybe_transmutable<Src, Dst>()\n-   |              --------------------- required by a bound in this\n+   |              --------------------- required by a bound in this function\n LL |       where\n LL |           Dst: BikeshedIntrinsicFrom<Src, Context, {\n    |  ______________^\n@@ -78,7 +78,7 @@ note: required by a bound in `is_maybe_transmutable`\n   --> $DIR/should_require_well_defined_layout.rs:13:14\n    |\n LL |       pub fn is_maybe_transmutable<Src, Dst>()\n-   |              --------------------- required by a bound in this\n+   |              --------------------- required by a bound in this function\n LL |       where\n LL |           Dst: BikeshedIntrinsicFrom<Src, Context, {\n    |  ______________^\n@@ -101,7 +101,7 @@ note: required by a bound in `is_maybe_transmutable`\n   --> $DIR/should_require_well_defined_layout.rs:13:14\n    |\n LL |       pub fn is_maybe_transmutable<Src, Dst>()\n-   |              --------------------- required by a bound in this\n+   |              --------------------- required by a bound in this function\n LL |       where\n LL |           Dst: BikeshedIntrinsicFrom<Src, Context, {\n    |  ______________^\n@@ -124,7 +124,7 @@ note: required by a bound in `is_maybe_transmutable`\n   --> $DIR/should_require_well_defined_layout.rs:13:14\n    |\n LL |       pub fn is_maybe_transmutable<Src, Dst>()\n-   |              --------------------- required by a bound in this\n+   |              --------------------- required by a bound in this function\n LL |       where\n LL |           Dst: BikeshedIntrinsicFrom<Src, Context, {\n    |  ______________^\n@@ -147,7 +147,7 @@ note: required by a bound in `is_maybe_transmutable`\n   --> $DIR/should_require_well_defined_layout.rs:13:14\n    |\n LL |       pub fn is_maybe_transmutable<Src, Dst>()\n-   |              --------------------- required by a bound in this\n+   |              --------------------- required by a bound in this function\n LL |       where\n LL |           Dst: BikeshedIntrinsicFrom<Src, Context, {\n    |  ______________^\n@@ -170,7 +170,7 @@ note: required by a bound in `is_maybe_transmutable`\n   --> $DIR/should_require_well_defined_layout.rs:13:14\n    |\n LL |       pub fn is_maybe_transmutable<Src, Dst>()\n-   |              --------------------- required by a bound in this\n+   |              --------------------- required by a bound in this function\n LL |       where\n LL |           Dst: BikeshedIntrinsicFrom<Src, Context, {\n    |  ______________^\n@@ -193,7 +193,7 @@ note: required by a bound in `is_maybe_transmutable`\n   --> $DIR/should_require_well_defined_layout.rs:13:14\n    |\n LL |       pub fn is_maybe_transmutable<Src, Dst>()\n-   |              --------------------- required by a bound in this\n+   |              --------------------- required by a bound in this function\n LL |       where\n LL |           Dst: BikeshedIntrinsicFrom<Src, Context, {\n    |  ______________^\n@@ -216,7 +216,7 @@ note: required by a bound in `is_maybe_transmutable`\n   --> $DIR/should_require_well_defined_layout.rs:13:14\n    |\n LL |       pub fn is_maybe_transmutable<Src, Dst>()\n-   |              --------------------- required by a bound in this\n+   |              --------------------- required by a bound in this function\n LL |       where\n LL |           Dst: BikeshedIntrinsicFrom<Src, Context, {\n    |  ______________^\n@@ -239,7 +239,7 @@ note: required by a bound in `is_maybe_transmutable`\n   --> $DIR/should_require_well_defined_layout.rs:13:14\n    |\n LL |       pub fn is_maybe_transmutable<Src, Dst>()\n-   |              --------------------- required by a bound in this\n+   |              --------------------- required by a bound in this function\n LL |       where\n LL |           Dst: BikeshedIntrinsicFrom<Src, Context, {\n    |  ______________^\n@@ -262,7 +262,7 @@ note: required by a bound in `is_maybe_transmutable`\n   --> $DIR/should_require_well_defined_layout.rs:13:14\n    |\n LL |       pub fn is_maybe_transmutable<Src, Dst>()\n-   |              --------------------- required by a bound in this\n+   |              --------------------- required by a bound in this function\n LL |       where\n LL |           Dst: BikeshedIntrinsicFrom<Src, Context, {\n    |  ______________^"}, {"sha": "aa0cbc51b1b227b38d2aea0cc0c433e380778292", "filename": "tests/ui/transmutability/unions/repr/should_require_well_defined_layout.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ae0143007839fada3fadd790dc9b8c1a36c61dee/tests%2Fui%2Ftransmutability%2Funions%2Frepr%2Fshould_require_well_defined_layout.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ae0143007839fada3fadd790dc9b8c1a36c61dee/tests%2Fui%2Ftransmutability%2Funions%2Frepr%2Fshould_require_well_defined_layout.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ftransmutability%2Funions%2Frepr%2Fshould_require_well_defined_layout.stderr?ref=ae0143007839fada3fadd790dc9b8c1a36c61dee", "patch": "@@ -9,7 +9,7 @@ note: required by a bound in `is_maybe_transmutable`\n   --> $DIR/should_require_well_defined_layout.rs:13:14\n    |\n LL |       pub fn is_maybe_transmutable<Src, Dst>()\n-   |              --------------------- required by a bound in this\n+   |              --------------------- required by a bound in this function\n LL |       where\n LL |           Dst: BikeshedIntrinsicFrom<Src, Context, {\n    |  ______________^\n@@ -32,7 +32,7 @@ note: required by a bound in `is_maybe_transmutable`\n   --> $DIR/should_require_well_defined_layout.rs:13:14\n    |\n LL |       pub fn is_maybe_transmutable<Src, Dst>()\n-   |              --------------------- required by a bound in this\n+   |              --------------------- required by a bound in this function\n LL |       where\n LL |           Dst: BikeshedIntrinsicFrom<Src, Context, {\n    |  ______________^"}, {"sha": "f4988239df943ac7970cdf9f087e454641aa20b1", "filename": "tests/ui/transmutability/unions/should_pad_variants.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ae0143007839fada3fadd790dc9b8c1a36c61dee/tests%2Fui%2Ftransmutability%2Funions%2Fshould_pad_variants.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ae0143007839fada3fadd790dc9b8c1a36c61dee/tests%2Fui%2Ftransmutability%2Funions%2Fshould_pad_variants.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ftransmutability%2Funions%2Fshould_pad_variants.stderr?ref=ae0143007839fada3fadd790dc9b8c1a36c61dee", "patch": "@@ -9,7 +9,7 @@ note: required by a bound in `is_transmutable`\n   --> $DIR/should_pad_variants.rs:13:14\n    |\n LL |       pub fn is_transmutable<Src, Dst, Context>()\n-   |              --------------- required by a bound in this\n+   |              --------------- required by a bound in this function\n LL |       where\n LL |           Dst: BikeshedIntrinsicFrom<Src, Context, {\n    |  ______________^"}, {"sha": "fa7dcc3d22a9bf603e98abe84b28d6f5db81a144", "filename": "tests/ui/transmutability/unions/should_reject_contraction.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ae0143007839fada3fadd790dc9b8c1a36c61dee/tests%2Fui%2Ftransmutability%2Funions%2Fshould_reject_contraction.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ae0143007839fada3fadd790dc9b8c1a36c61dee/tests%2Fui%2Ftransmutability%2Funions%2Fshould_reject_contraction.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ftransmutability%2Funions%2Fshould_reject_contraction.stderr?ref=ae0143007839fada3fadd790dc9b8c1a36c61dee", "patch": "@@ -9,7 +9,7 @@ note: required by a bound in `is_transmutable`\n   --> $DIR/should_reject_contraction.rs:13:14\n    |\n LL |     pub fn is_transmutable<Src, Dst>()\n-   |            --------------- required by a bound in this\n+   |            --------------- required by a bound in this function\n LL |     where\n LL |         Dst: BikeshedIntrinsicFrom<Src, Context, { Assume::SAFETY }>\n    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ required by this bound in `is_transmutable`"}, {"sha": "880e4cd89403e8cda995322513c74385e80f9a3b", "filename": "tests/ui/transmutability/unions/should_reject_disjoint.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ae0143007839fada3fadd790dc9b8c1a36c61dee/tests%2Fui%2Ftransmutability%2Funions%2Fshould_reject_disjoint.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ae0143007839fada3fadd790dc9b8c1a36c61dee/tests%2Fui%2Ftransmutability%2Funions%2Fshould_reject_disjoint.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ftransmutability%2Funions%2Fshould_reject_disjoint.stderr?ref=ae0143007839fada3fadd790dc9b8c1a36c61dee", "patch": "@@ -9,7 +9,7 @@ note: required by a bound in `is_maybe_transmutable`\n   --> $DIR/should_reject_disjoint.rs:13:14\n    |\n LL |     pub fn is_maybe_transmutable<Src, Dst>()\n-   |            --------------------- required by a bound in this\n+   |            --------------------- required by a bound in this function\n LL |     where\n LL |         Dst: BikeshedIntrinsicFrom<Src, Context, { Assume::SAFETY.and(Assume::VALIDITY) }>\n    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ required by this bound in `is_maybe_transmutable`\n@@ -25,7 +25,7 @@ note: required by a bound in `is_maybe_transmutable`\n   --> $DIR/should_reject_disjoint.rs:13:14\n    |\n LL |     pub fn is_maybe_transmutable<Src, Dst>()\n-   |            --------------------- required by a bound in this\n+   |            --------------------- required by a bound in this function\n LL |     where\n LL |         Dst: BikeshedIntrinsicFrom<Src, Context, { Assume::SAFETY.and(Assume::VALIDITY) }>\n    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ required by this bound in `is_maybe_transmutable`"}, {"sha": "501760b0809607df773c3b68dc7d723014e5defb", "filename": "tests/ui/transmutability/unions/should_reject_intersecting.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ae0143007839fada3fadd790dc9b8c1a36c61dee/tests%2Fui%2Ftransmutability%2Funions%2Fshould_reject_intersecting.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ae0143007839fada3fadd790dc9b8c1a36c61dee/tests%2Fui%2Ftransmutability%2Funions%2Fshould_reject_intersecting.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ftransmutability%2Funions%2Fshould_reject_intersecting.stderr?ref=ae0143007839fada3fadd790dc9b8c1a36c61dee", "patch": "@@ -9,7 +9,7 @@ note: required by a bound in `is_transmutable`\n   --> $DIR/should_reject_intersecting.rs:14:14\n    |\n LL |     pub fn is_transmutable<Src, Dst>()\n-   |            --------------- required by a bound in this\n+   |            --------------- required by a bound in this function\n LL |     where\n LL |         Dst: BikeshedIntrinsicFrom<Src, Context, { Assume::SAFETY }>\n    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ required by this bound in `is_transmutable`\n@@ -25,7 +25,7 @@ note: required by a bound in `is_transmutable`\n   --> $DIR/should_reject_intersecting.rs:14:14\n    |\n LL |     pub fn is_transmutable<Src, Dst>()\n-   |            --------------- required by a bound in this\n+   |            --------------- required by a bound in this function\n LL |     where\n LL |         Dst: BikeshedIntrinsicFrom<Src, Context, { Assume::SAFETY }>\n    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ required by this bound in `is_transmutable`"}, {"sha": "afbba653b83458d46ea0a5e2c0343017c7aa59a7", "filename": "tests/ui/transmutability/visibility/should_reject_if_dst_has_private_field.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ae0143007839fada3fadd790dc9b8c1a36c61dee/tests%2Fui%2Ftransmutability%2Fvisibility%2Fshould_reject_if_dst_has_private_field.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ae0143007839fada3fadd790dc9b8c1a36c61dee/tests%2Fui%2Ftransmutability%2Fvisibility%2Fshould_reject_if_dst_has_private_field.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ftransmutability%2Fvisibility%2Fshould_reject_if_dst_has_private_field.stderr?ref=ae0143007839fada3fadd790dc9b8c1a36c61dee", "patch": "@@ -9,7 +9,7 @@ note: required by a bound in `is_transmutable`\n   --> $DIR/should_reject_if_dst_has_private_field.rs:13:14\n    |\n LL |     pub fn is_transmutable<Src, Dst, Context>()\n-   |            --------------- required by a bound in this\n+   |            --------------- required by a bound in this function\n LL |     where\n LL |         Dst: BikeshedIntrinsicFrom<Src, Context> // safety is NOT assumed\n    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ required by this bound in `is_transmutable`"}, {"sha": "f14b5d8b2cb588514be95c6035f354649ac7b00e", "filename": "tests/ui/transmutability/visibility/should_reject_if_dst_has_private_variant.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ae0143007839fada3fadd790dc9b8c1a36c61dee/tests%2Fui%2Ftransmutability%2Fvisibility%2Fshould_reject_if_dst_has_private_variant.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ae0143007839fada3fadd790dc9b8c1a36c61dee/tests%2Fui%2Ftransmutability%2Fvisibility%2Fshould_reject_if_dst_has_private_variant.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ftransmutability%2Fvisibility%2Fshould_reject_if_dst_has_private_variant.stderr?ref=ae0143007839fada3fadd790dc9b8c1a36c61dee", "patch": "@@ -9,7 +9,7 @@ note: required by a bound in `is_transmutable`\n   --> $DIR/should_reject_if_dst_has_private_variant.rs:13:14\n    |\n LL |     pub fn is_transmutable<Src, Dst, Context>()\n-   |            --------------- required by a bound in this\n+   |            --------------- required by a bound in this function\n LL |     where\n LL |         Dst: BikeshedIntrinsicFrom<Src, Context> // safety is NOT assumed\n    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ required by this bound in `is_transmutable`"}, {"sha": "01ae8bea25618fc3f1dee25d7de3170412ceba48", "filename": "tests/ui/transmutability/visibility/should_reject_if_dst_has_unreachable_field.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ae0143007839fada3fadd790dc9b8c1a36c61dee/tests%2Fui%2Ftransmutability%2Fvisibility%2Fshould_reject_if_dst_has_unreachable_field.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ae0143007839fada3fadd790dc9b8c1a36c61dee/tests%2Fui%2Ftransmutability%2Fvisibility%2Fshould_reject_if_dst_has_unreachable_field.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ftransmutability%2Fvisibility%2Fshould_reject_if_dst_has_unreachable_field.stderr?ref=ae0143007839fada3fadd790dc9b8c1a36c61dee", "patch": "@@ -9,7 +9,7 @@ note: required by a bound in `is_transmutable`\n   --> $DIR/should_reject_if_dst_has_unreachable_field.rs:15:14\n    |\n LL |     pub fn is_transmutable<Src, Dst, Context>()\n-   |            --------------- required by a bound in this\n+   |            --------------- required by a bound in this function\n LL |     where\n LL |         Dst: BikeshedIntrinsicFrom<Src, Context> // safety is NOT assumed\n    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ required by this bound in `is_transmutable`"}, {"sha": "20a680a748456ed8cb934cd3241dad11fdc1eae9", "filename": "tests/ui/transmutability/visibility/should_reject_if_dst_has_unreachable_ty.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ae0143007839fada3fadd790dc9b8c1a36c61dee/tests%2Fui%2Ftransmutability%2Fvisibility%2Fshould_reject_if_dst_has_unreachable_ty.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ae0143007839fada3fadd790dc9b8c1a36c61dee/tests%2Fui%2Ftransmutability%2Fvisibility%2Fshould_reject_if_dst_has_unreachable_ty.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ftransmutability%2Fvisibility%2Fshould_reject_if_dst_has_unreachable_ty.stderr?ref=ae0143007839fada3fadd790dc9b8c1a36c61dee", "patch": "@@ -21,7 +21,7 @@ note: required by a bound in `is_transmutable`\n   --> $DIR/should_reject_if_dst_has_unreachable_ty.rs:15:14\n    |\n LL |     pub fn is_transmutable<Src, Dst, Context>()\n-   |            --------------- required by a bound in this\n+   |            --------------- required by a bound in this function\n LL |     where\n LL |         Dst: BikeshedIntrinsicFrom<Src, Context> // safety is NOT assumed\n    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ required by this bound in `is_transmutable`"}, {"sha": "87fd4fb663086db48699457537f2db6f07ea82bf", "filename": "tests/ui/transmute/transmute-padding-ice.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ae0143007839fada3fadd790dc9b8c1a36c61dee/tests%2Fui%2Ftransmute%2Ftransmute-padding-ice.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ae0143007839fada3fadd790dc9b8c1a36c61dee/tests%2Fui%2Ftransmute%2Ftransmute-padding-ice.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ftransmute%2Ftransmute-padding-ice.stderr?ref=ae0143007839fada3fadd790dc9b8c1a36c61dee", "patch": "@@ -9,7 +9,7 @@ note: required by a bound in `is_maybe_transmutable`\n   --> $DIR/transmute-padding-ice.rs:11:14\n    |\n LL |       pub fn is_maybe_transmutable<Src, Dst>()\n-   |              --------------------- required by a bound in this\n+   |              --------------------- required by a bound in this function\n LL |       where\n LL |           Dst: BikeshedIntrinsicFrom<\n    |  ______________^"}, {"sha": "846a44ce4d7a94b7c8a8606f886e309e4914b7b0", "filename": "tests/ui/unboxed-closures/unboxed-closures-infer-fn-once-move-from-projection.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ae0143007839fada3fadd790dc9b8c1a36c61dee/tests%2Fui%2Funboxed-closures%2Funboxed-closures-infer-fn-once-move-from-projection.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ae0143007839fada3fadd790dc9b8c1a36c61dee/tests%2Fui%2Funboxed-closures%2Funboxed-closures-infer-fn-once-move-from-projection.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Funboxed-closures%2Funboxed-closures-infer-fn-once-move-from-projection.stderr?ref=ae0143007839fada3fadd790dc9b8c1a36c61dee", "patch": "@@ -14,7 +14,7 @@ note: required by a bound in `foo`\n   --> $DIR/unboxed-closures-infer-fn-once-move-from-projection.rs:4:14\n    |\n LL | fn foo<F>(f: F)\n-   |    --- required by a bound in this\n+   |    --- required by a bound in this function\n LL |     where F: Fn()\n    |              ^^^^ required by this bound in `foo`\n "}, {"sha": "b57b3015e475d98bd2ffe761613a645987ea8d07", "filename": "tests/ui/unsized/issue-71659.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ae0143007839fada3fadd790dc9b8c1a36c61dee/tests%2Fui%2Funsized%2Fissue-71659.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ae0143007839fada3fadd790dc9b8c1a36c61dee/tests%2Fui%2Funsized%2Fissue-71659.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Funsized%2Fissue-71659.stderr?ref=ae0143007839fada3fadd790dc9b8c1a36c61dee", "patch": "@@ -8,7 +8,7 @@ note: required by a bound in `Cast::cast`\n   --> $DIR/issue-71659.rs:19:15\n    |\n LL |     fn cast<T: ?Sized>(&self) -> &T\n-   |        ---- required by a bound in this\n+   |        ---- required by a bound in this associated function\n LL |     where\n LL |         Self: CastTo<T>,\n    |               ^^^^^^^^^ required by this bound in `Cast::cast`"}, {"sha": "191a8ca8ebcf37c44eeb535c964ff87ee034e0cf", "filename": "tests/ui/where-clauses/higher-ranked-fn-type.quiet.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ae0143007839fada3fadd790dc9b8c1a36c61dee/tests%2Fui%2Fwhere-clauses%2Fhigher-ranked-fn-type.quiet.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ae0143007839fada3fadd790dc9b8c1a36c61dee/tests%2Fui%2Fwhere-clauses%2Fhigher-ranked-fn-type.quiet.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fwhere-clauses%2Fhigher-ranked-fn-type.quiet.stderr?ref=ae0143007839fada3fadd790dc9b8c1a36c61dee", "patch": "@@ -8,7 +8,7 @@ note: required by a bound in `called`\n   --> $DIR/higher-ranked-fn-type.rs:12:25\n    |\n LL | fn called()\n-   |    ------ required by a bound in this\n+   |    ------ required by a bound in this function\n LL | where\n LL |     for<'b> fn(&'b ()): Foo,\n    |                         ^^^ required by this bound in `called`"}, {"sha": "f4c7acd5c58971967ebe1d32764d45712e3b5763", "filename": "tests/ui/where-clauses/higher-ranked-fn-type.verbose.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ae0143007839fada3fadd790dc9b8c1a36c61dee/tests%2Fui%2Fwhere-clauses%2Fhigher-ranked-fn-type.verbose.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ae0143007839fada3fadd790dc9b8c1a36c61dee/tests%2Fui%2Fwhere-clauses%2Fhigher-ranked-fn-type.verbose.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fwhere-clauses%2Fhigher-ranked-fn-type.verbose.stderr?ref=ae0143007839fada3fadd790dc9b8c1a36c61dee", "patch": "@@ -8,7 +8,7 @@ note: required by a bound in `called`\n   --> $DIR/higher-ranked-fn-type.rs:12:25\n    |\n LL | fn called()\n-   |    ------ required by a bound in this\n+   |    ------ required by a bound in this function\n LL | where\n LL |     for<'b> fn(&'b ()): Foo,\n    |                         ^^^ required by this bound in `called`"}]}