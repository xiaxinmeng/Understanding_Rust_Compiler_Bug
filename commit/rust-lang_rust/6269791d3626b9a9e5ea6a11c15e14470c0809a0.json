{"sha": "6269791d3626b9a9e5ea6a11c15e14470c0809a0", "node_id": "MDY6Q29tbWl0NzI0NzEyOjYyNjk3OTFkMzYyNmI5YTllNWVhNmExMWMxNWUxNDQ3MGMwODA5YTA=", "commit": {"author": {"name": "Florian Diebold", "email": "flodiebold@gmail.com", "date": "2019-04-27T19:05:59Z"}, "committer": {"name": "Florian Diebold", "email": "flodiebold@gmail.com", "date": "2019-05-04T16:18:30Z"}, "message": "Add Ty::Bound variant for use in Chalk integration", "tree": {"sha": "0084f156f0eabb2631bc650aea6a398ac62f4222", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0084f156f0eabb2631bc650aea6a398ac62f4222"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6269791d3626b9a9e5ea6a11c15e14470c0809a0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6269791d3626b9a9e5ea6a11c15e14470c0809a0", "html_url": "https://github.com/rust-lang/rust/commit/6269791d3626b9a9e5ea6a11c15e14470c0809a0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6269791d3626b9a9e5ea6a11c15e14470c0809a0/comments", "author": {"login": "flodiebold", "id": 906069, "node_id": "MDQ6VXNlcjkwNjA2OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/906069?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flodiebold", "html_url": "https://github.com/flodiebold", "followers_url": "https://api.github.com/users/flodiebold/followers", "following_url": "https://api.github.com/users/flodiebold/following{/other_user}", "gists_url": "https://api.github.com/users/flodiebold/gists{/gist_id}", "starred_url": "https://api.github.com/users/flodiebold/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flodiebold/subscriptions", "organizations_url": "https://api.github.com/users/flodiebold/orgs", "repos_url": "https://api.github.com/users/flodiebold/repos", "events_url": "https://api.github.com/users/flodiebold/events{/privacy}", "received_events_url": "https://api.github.com/users/flodiebold/received_events", "type": "User", "site_admin": false}, "committer": {"login": "flodiebold", "id": 906069, "node_id": "MDQ6VXNlcjkwNjA2OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/906069?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flodiebold", "html_url": "https://github.com/flodiebold", "followers_url": "https://api.github.com/users/flodiebold/followers", "following_url": "https://api.github.com/users/flodiebold/following{/other_user}", "gists_url": "https://api.github.com/users/flodiebold/gists{/gist_id}", "starred_url": "https://api.github.com/users/flodiebold/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flodiebold/subscriptions", "organizations_url": "https://api.github.com/users/flodiebold/orgs", "repos_url": "https://api.github.com/users/flodiebold/repos", "events_url": "https://api.github.com/users/flodiebold/events{/privacy}", "received_events_url": "https://api.github.com/users/flodiebold/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e1ea2500fcc5e136fbe6a14c488f558e28519c45", "url": "https://api.github.com/repos/rust-lang/rust/commits/e1ea2500fcc5e136fbe6a14c488f558e28519c45", "html_url": "https://github.com/rust-lang/rust/commit/e1ea2500fcc5e136fbe6a14c488f558e28519c45"}], "stats": {"total": 9, "additions": 7, "deletions": 2}, "files": [{"sha": "094de62a3e5f17ed4afe6a4a724479074c93bbd9", "filename": "crates/ra_hir/src/ty.rs", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/6269791d3626b9a9e5ea6a11c15e14470c0809a0/crates%2Fra_hir%2Fsrc%2Fty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6269791d3626b9a9e5ea6a11c15e14470c0809a0/crates%2Fra_hir%2Fsrc%2Fty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fty.rs?ref=6269791d3626b9a9e5ea6a11c15e14470c0809a0", "patch": "@@ -121,6 +121,10 @@ pub enum Ty {\n         name: Name,\n     },\n \n+    /// A bound type variable. Only used during trait resolution to represent\n+    /// Chalk variables.\n+    Bound(u32),\n+\n     /// A type variable used during type checking. Not to be confused with a\n     /// type parameter.\n     Infer(InferTy),\n@@ -260,7 +264,7 @@ impl Ty {\n                     t.walk(f);\n                 }\n             }\n-            Ty::Param { .. } | Ty::Infer(_) | Ty::Unknown => {}\n+            Ty::Param { .. } | Ty::Bound(_) | Ty::Infer(_) | Ty::Unknown => {}\n         }\n         f(self);\n     }\n@@ -270,7 +274,7 @@ impl Ty {\n             Ty::Apply(a_ty) => {\n                 a_ty.parameters.walk_mut(f);\n             }\n-            Ty::Param { .. } | Ty::Infer(_) | Ty::Unknown => {}\n+            Ty::Param { .. } | Ty::Bound(_) | Ty::Infer(_) | Ty::Unknown => {}\n         }\n         f(self);\n     }\n@@ -472,6 +476,7 @@ impl HirDisplay for Ty {\n         match self {\n             Ty::Apply(a_ty) => a_ty.hir_fmt(f)?,\n             Ty::Param { name, .. } => write!(f, \"{}\", name)?,\n+            Ty::Bound(idx) => write!(f, \"?{}\", idx)?,\n             Ty::Unknown => write!(f, \"{{unknown}}\")?,\n             Ty::Infer(..) => write!(f, \"_\")?,\n         }"}]}