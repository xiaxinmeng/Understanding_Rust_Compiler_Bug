{"sha": "9125dd74bdbd0c41d6f8341366992db514e56246", "node_id": "C_kwDOAAsO6NoAKDkxMjVkZDc0YmRiZDBjNDFkNmY4MzQxMzY2OTkyZGI1MTRlNTYyNDY", "commit": {"author": {"name": "David Tolnay", "email": "dtolnay@gmail.com", "date": "2021-11-26T02:27:36Z"}, "committer": {"name": "David Tolnay", "email": "dtolnay@gmail.com", "date": "2021-11-26T02:27:40Z"}, "message": "Eliminate an unreachable codepath from String::from_utf8_lossy\n\nUtf8Lossy's Iterator implementation ensures that only the final chunk\nhas an empty slice for broken. Thus the only way the first chunk could\nhave an empty broken is if it is the final chunk, i.e. there is only one\nchunk total. And the only way that there could be one chunk total is if\nthe whole input is valid utf8 and non-empty. That condition has already\nbeen handled by an early return, so at the point that the first\nREPLACEMENT is being pushed, it's impossible for first_broken to be\nempty.", "tree": {"sha": "08f4cca7edcdc579ee9c59ba1af5706a1966d5a9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/08f4cca7edcdc579ee9c59ba1af5706a1966d5a9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9125dd74bdbd0c41d6f8341366992db514e56246", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEERijF2Cz/ZdaBZKeK+boUO5X/bYIFAmGgR30ACgkQ+boUO5X/\nbYLDCw//clp8hHL8e8Th23b/GQFSgs63OuvlzZE3DCtIhD6gXti2j+HSLo9wruZI\nslLSQdFYSEMNnNmoW1lo8qiJkw33yiqLCMjOzDTK3PYeioUS3a19Gc3FR4vfoNaT\ngXkNCufiNLlTPWgWhYuv9//QjAKEfhgzpegLbPHk0pOK+yRsr8sSz3JqARTu7kZW\nokqY3VJ+aGxAu8YNn+TAjIj25h6tkZ6VAo01/FXzfTvufrAbT5Cp/SJHh0yH4Uxy\nW82YxC5R8il5SvycbF/fxBRlSwcsjZYQFFDObM90NabJlPkBRwJnrcJ8DJ9ndDcN\nj1+DZTpShSp9/89ODOKI7Cjq7CiTwjw9GpK8//58oJDb0Gfqy33RzwoW2ECwYDRg\nDscKyrpX0gL67kj7554ekOmyhzgXqQYWsuc0o7r7mUTzcAZxEv7Jc5bCXXJjfeCs\nLUaPZ2Kdq6sgEennLWaSFdrAOygLGeCnn2fOuP8hfc+ZqywAoPAlxVQTt9QLtjdm\nNCqrk8pG9HqTfnq3dl8AZDXEA1L18jyTNE2kMjIR3CMeddqgjGScy5c2sXKbORko\nuoE/DxTJ9ppLaMDO8wk2mBCECtZsVAgyWDFFvLufPaxGSljm74P7wln7szVpNOkI\nXbJB2W7VQ0ABDPwCcwpQwrtoPlkkHBpbdfKlcLbms1SAwPkLI1U=\n=BiaQ\n-----END PGP SIGNATURE-----", "payload": "tree 08f4cca7edcdc579ee9c59ba1af5706a1966d5a9\nparent dd549dcab404ec4c7d07b5a83aca5bdd7171138f\nauthor David Tolnay <dtolnay@gmail.com> 1637893656 -0800\ncommitter David Tolnay <dtolnay@gmail.com> 1637893660 -0800\n\nEliminate an unreachable codepath from String::from_utf8_lossy\n\nUtf8Lossy's Iterator implementation ensures that only the final chunk\nhas an empty slice for broken. Thus the only way the first chunk could\nhave an empty broken is if it is the final chunk, i.e. there is only one\nchunk total. And the only way that there could be one chunk total is if\nthe whole input is valid utf8 and non-empty. That condition has already\nbeen handled by an early return, so at the point that the first\nREPLACEMENT is being pushed, it's impossible for first_broken to be\nempty.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9125dd74bdbd0c41d6f8341366992db514e56246", "html_url": "https://github.com/rust-lang/rust/commit/9125dd74bdbd0c41d6f8341366992db514e56246", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9125dd74bdbd0c41d6f8341366992db514e56246/comments", "author": {"login": "dtolnay", "id": 1940490, "node_id": "MDQ6VXNlcjE5NDA0OTA=", "avatar_url": "https://avatars.githubusercontent.com/u/1940490?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dtolnay", "html_url": "https://github.com/dtolnay", "followers_url": "https://api.github.com/users/dtolnay/followers", "following_url": "https://api.github.com/users/dtolnay/following{/other_user}", "gists_url": "https://api.github.com/users/dtolnay/gists{/gist_id}", "starred_url": "https://api.github.com/users/dtolnay/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dtolnay/subscriptions", "organizations_url": "https://api.github.com/users/dtolnay/orgs", "repos_url": "https://api.github.com/users/dtolnay/repos", "events_url": "https://api.github.com/users/dtolnay/events{/privacy}", "received_events_url": "https://api.github.com/users/dtolnay/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dtolnay", "id": 1940490, "node_id": "MDQ6VXNlcjE5NDA0OTA=", "avatar_url": "https://avatars.githubusercontent.com/u/1940490?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dtolnay", "html_url": "https://github.com/dtolnay", "followers_url": "https://api.github.com/users/dtolnay/followers", "following_url": "https://api.github.com/users/dtolnay/following{/other_user}", "gists_url": "https://api.github.com/users/dtolnay/gists{/gist_id}", "starred_url": "https://api.github.com/users/dtolnay/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dtolnay/subscriptions", "organizations_url": "https://api.github.com/users/dtolnay/orgs", "repos_url": "https://api.github.com/users/dtolnay/repos", "events_url": "https://api.github.com/users/dtolnay/events{/privacy}", "received_events_url": "https://api.github.com/users/dtolnay/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "dd549dcab404ec4c7d07b5a83aca5bdd7171138f", "url": "https://api.github.com/repos/rust-lang/rust/commits/dd549dcab404ec4c7d07b5a83aca5bdd7171138f", "html_url": "https://github.com/rust-lang/rust/commit/dd549dcab404ec4c7d07b5a83aca5bdd7171138f"}], "stats": {"total": 12, "additions": 5, "deletions": 7}, "files": [{"sha": "4f926d99c6dbc46e992aa73d4b89b6cd82852a11", "filename": "library/alloc/src/string.rs", "status": "modified", "additions": 5, "deletions": 7, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/9125dd74bdbd0c41d6f8341366992db514e56246/library%2Falloc%2Fsrc%2Fstring.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9125dd74bdbd0c41d6f8341366992db514e56246/library%2Falloc%2Fsrc%2Fstring.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Fsrc%2Fstring.rs?ref=9125dd74bdbd0c41d6f8341366992db514e56246", "patch": "@@ -558,13 +558,13 @@ impl String {\n     pub fn from_utf8_lossy(v: &[u8]) -> Cow<'_, str> {\n         let mut iter = lossy::Utf8Lossy::from_bytes(v).chunks();\n \n-        let (first_valid, first_broken) = if let Some(chunk) = iter.next() {\n+        let first_valid = if let Some(chunk) = iter.next() {\n             let lossy::Utf8LossyChunk { valid, broken } = chunk;\n-            if valid.len() == v.len() {\n-                debug_assert!(broken.is_empty());\n+            if broken.is_empty() {\n+                debug_assert_eq!(valid.len(), v.len());\n                 return Cow::Borrowed(valid);\n             }\n-            (valid, broken)\n+            valid\n         } else {\n             return Cow::Borrowed(\"\");\n         };\n@@ -573,9 +573,7 @@ impl String {\n \n         let mut res = String::with_capacity(v.len());\n         res.push_str(first_valid);\n-        if !first_broken.is_empty() {\n-            res.push_str(REPLACEMENT);\n-        }\n+        res.push_str(REPLACEMENT);\n \n         for lossy::Utf8LossyChunk { valid, broken } in iter {\n             res.push_str(valid);"}]}