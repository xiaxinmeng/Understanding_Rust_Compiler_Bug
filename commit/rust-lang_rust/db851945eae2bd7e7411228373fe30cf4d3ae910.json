{"sha": "db851945eae2bd7e7411228373fe30cf4d3ae910", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRiODUxOTQ1ZWFlMmJkN2U3NDExMjI4MzczZmUzMGNmNGQzYWU5MTA=", "commit": {"author": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2019-06-11T15:22:22Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-06-11T15:22:22Z"}, "message": "Merge pull request #435 from bjorn3/write_dylib_metadata\n\nRead and write dylib metadata", "tree": {"sha": "c853924b9871178c32922c8b15baee49fe9ec179", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c853924b9871178c32922c8b15baee49fe9ec179"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/db851945eae2bd7e7411228373fe30cf4d3ae910", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJc/8cuCRBK7hj4Ov3rIwAAdHIIAKS0EH5Xg+/Y27qQQzElw0JX\nkIn1DZEDOFfUIl+MJQFcgXJ9/B8OA6dTxoBlulcl+1qtEIbqFNHSwqW5vTKGt1j+\nS1B/9i3oENsIqiRtTn4YM6GhQP/Oa+G2ErL1fWlWwHNrFais5/q7J4R0p/Q8pdSv\nGa3SPLdGqaw6iDWqYemWr77DxmRZDnrtDNKjXxpj5ZoLYVLUd51TXX0L+rm3SgpF\n1mkIbe21+64zMqk+jhbbB8Tg/tO8lQHheyzVXtj9Z6qI0n/NKDuWdDH3zGS1xQU9\nxwiLB6t+x/tyBR8sLd6QJNCbKiLlw1aixKSYprHEb3fz1efEEj8zxSjEeUVfl2o=\n=OdkE\n-----END PGP SIGNATURE-----\n", "payload": "tree c853924b9871178c32922c8b15baee49fe9ec179\nparent 8fb70f259f133c832aac003e83f0f77f89bbb8f7\nparent 44a35507995b94751a4eaa58607b4a04a1310098\nauthor bjorn3 <bjorn3@users.noreply.github.com> 1560266542 +0200\ncommitter GitHub <noreply@github.com> 1560266542 +0200\n\nMerge pull request #435 from bjorn3/write_dylib_metadata\n\nRead and write dylib metadata"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/db851945eae2bd7e7411228373fe30cf4d3ae910", "html_url": "https://github.com/rust-lang/rust/commit/db851945eae2bd7e7411228373fe30cf4d3ae910", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/db851945eae2bd7e7411228373fe30cf4d3ae910/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8fb70f259f133c832aac003e83f0f77f89bbb8f7", "url": "https://api.github.com/repos/rust-lang/rust/commits/8fb70f259f133c832aac003e83f0f77f89bbb8f7", "html_url": "https://github.com/rust-lang/rust/commit/8fb70f259f133c832aac003e83f0f77f89bbb8f7"}, {"sha": "44a35507995b94751a4eaa58607b4a04a1310098", "url": "https://api.github.com/repos/rust-lang/rust/commits/44a35507995b94751a4eaa58607b4a04a1310098", "html_url": "https://github.com/rust-lang/rust/commit/44a35507995b94751a4eaa58607b4a04a1310098"}], "stats": {"total": 253, "additions": 231, "deletions": 22}, "files": [{"sha": "ecd803172bc77aea006c2211e2de5faedb3c9fae", "filename": "Cargo.lock", "status": "modified", "additions": 115, "deletions": 4, "changes": 119, "blob_url": "https://github.com/rust-lang/rust/blob/db851945eae2bd7e7411228373fe30cf4d3ae910/Cargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/db851945eae2bd7e7411228373fe30cf4d3ae910/Cargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.lock?ref=db851945eae2bd7e7411228373fe30cf4d3ae910", "patch": "@@ -1,5 +1,10 @@\n # This file is automatically @generated by Cargo.\n # It is not intended for manual editing.\n+[[package]]\n+name = \"adler32\"\n+version = \"1.0.3\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+\n [[package]]\n name = \"aho-corasick\"\n version = \"0.7.3\"\n@@ -73,6 +78,11 @@ name = \"bitflags\"\n version = \"1.1.0\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n \n+[[package]]\n+name = \"build_const\"\n+version = \"0.2.1\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+\n [[package]]\n name = \"byteorder\"\n version = \"1.3.2\"\n@@ -161,7 +171,7 @@ source = \"git+https://github.com/CraneStation/cranelift.git#f3f7cadd0157d06089c9\n dependencies = [\n  \"cranelift-codegen 0.30.0 (git+https://github.com/CraneStation/cranelift.git)\",\n  \"cranelift-module 0.30.0 (git+https://github.com/CraneStation/cranelift.git)\",\n- \"faerie 0.10.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"faerie 0.10.0 (git+https://github.com/m4b/faerie.git)\",\n  \"failure 0.1.5 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"goblin 0.0.21 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"target-lexicon 0.4.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n@@ -213,6 +223,22 @@ dependencies = [\n  \"winapi 0.3.7 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n+[[package]]\n+name = \"crc\"\n+version = \"1.8.1\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+dependencies = [\n+ \"build_const 0.2.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n+]\n+\n+[[package]]\n+name = \"crc32fast\"\n+version = \"1.2.0\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+dependencies = [\n+ \"cfg-if 0.1.9 (registry+https://github.com/rust-lang/crates.io-index)\",\n+]\n+\n [[package]]\n name = \"env_logger\"\n version = \"0.6.1\"\n@@ -247,7 +273,7 @@ dependencies = [\n [[package]]\n name = \"faerie\"\n version = \"0.10.0\"\n-source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+source = \"git+https://github.com/m4b/faerie.git#f6ce890950950d9ee85b7cb5de5fff9c9291f194\"\n dependencies = [\n  \"env_logger 0.6.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"failure 0.1.5 (registry+https://github.com/rust-lang/crates.io-index)\",\n@@ -286,6 +312,17 @@ name = \"fallible-iterator\"\n version = \"0.2.0\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n \n+[[package]]\n+name = \"flate2\"\n+version = \"1.0.7\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+dependencies = [\n+ \"crc32fast 1.2.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"libc 0.2.58 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"miniz-sys 0.1.11 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"miniz_oxide_c_api 0.2.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n+]\n+\n [[package]]\n name = \"fuchsia-cprng\"\n version = \"0.1.1\"\n@@ -318,6 +355,16 @@ dependencies = [\n  \"scroll 0.9.2 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n+[[package]]\n+name = \"goblin\"\n+version = \"0.0.22\"\n+source = \"git+https://github.com/m4b/goblin?rev=f34cf128fb4d1f3c93e5cf129cf673c9d787217b#f34cf128fb4d1f3c93e5cf129cf673c9d787217b\"\n+dependencies = [\n+ \"log 0.4.6 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"plain 0.2.3 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"scroll 0.9.2 (registry+https://github.com/rust-lang/crates.io-index)\",\n+]\n+\n [[package]]\n name = \"heck\"\n version = \"0.3.1\"\n@@ -375,6 +422,34 @@ name = \"memchr\"\n version = \"2.2.0\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n \n+[[package]]\n+name = \"miniz-sys\"\n+version = \"0.1.11\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+dependencies = [\n+ \"cc 1.0.37 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"libc 0.2.58 (registry+https://github.com/rust-lang/crates.io-index)\",\n+]\n+\n+[[package]]\n+name = \"miniz_oxide\"\n+version = \"0.2.1\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+dependencies = [\n+ \"adler32 1.0.3 (registry+https://github.com/rust-lang/crates.io-index)\",\n+]\n+\n+[[package]]\n+name = \"miniz_oxide_c_api\"\n+version = \"0.2.1\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+dependencies = [\n+ \"cc 1.0.37 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"crc 1.8.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"libc 0.2.58 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"miniz_oxide 0.2.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n+]\n+\n [[package]]\n name = \"nodrop\"\n version = \"0.1.13\"\n@@ -385,6 +460,24 @@ name = \"numtoa\"\n version = \"0.1.0\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n \n+[[package]]\n+name = \"object\"\n+version = \"0.12.0\"\n+source = \"git+https://github.com/gimli-rs/object.git#aced06a20eb59867c88e23c03e15613ffd582618\"\n+dependencies = [\n+ \"flate2 1.0.7 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"goblin 0.0.22 (git+https://github.com/m4b/goblin?rev=f34cf128fb4d1f3c93e5cf129cf673c9d787217b)\",\n+ \"parity-wasm 0.38.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"scroll 0.9.2 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"target-lexicon 0.4.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"uuid 0.7.4 (registry+https://github.com/rust-lang/crates.io-index)\",\n+]\n+\n+[[package]]\n+name = \"parity-wasm\"\n+version = \"0.38.0\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+\n [[package]]\n name = \"plain\"\n version = \"0.2.3\"\n@@ -593,10 +686,11 @@ dependencies = [\n  \"cranelift-faerie 0.30.0 (git+https://github.com/CraneStation/cranelift.git)\",\n  \"cranelift-module 0.30.0 (git+https://github.com/CraneStation/cranelift.git)\",\n  \"cranelift-simplejit 0.30.0 (git+https://github.com/CraneStation/cranelift.git)\",\n- \"faerie 0.10.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"faerie 0.10.0 (git+https://github.com/m4b/faerie.git)\",\n  \"gimli 0.18.0 (git+https://github.com/gimli-rs/gimli.git)\",\n  \"indexmap 1.0.2 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"libc 0.2.58 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"object 0.12.0 (git+https://github.com/gimli-rs/object.git)\",\n  \"target-lexicon 0.4.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"tempfile 3.0.8 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n@@ -803,6 +897,11 @@ name = \"utf8-ranges\"\n version = \"1.0.3\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n \n+[[package]]\n+name = \"uuid\"\n+version = \"0.7.4\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+\n [[package]]\n name = \"vec_map\"\n version = \"0.8.1\"\n@@ -845,6 +944,7 @@ dependencies = [\n ]\n \n [metadata]\n+\"checksum adler32 1.0.3 (registry+https://github.com/rust-lang/crates.io-index)\" = \"7e522997b529f05601e05166c07ed17789691f562762c7f3b987263d2dedee5c\"\n \"checksum aho-corasick 0.7.3 (registry+https://github.com/rust-lang/crates.io-index)\" = \"e6f484ae0c99fec2e858eb6134949117399f222608d84cadb3f58c1f97c2364c\"\n \"checksum ansi_term 0.11.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"ee49baf6cb617b853aa8d93bf420db2383fab46d314482ca2803b40d5fde979b\"\n \"checksum ar 0.7.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"6c1afd66a96a235fa8eeec0ee757ec0d2c0db7cb89b4e04ae159f37952b97bd5\"\n@@ -854,6 +954,7 @@ dependencies = [\n \"checksum backtrace 0.3.30 (registry+https://github.com/rust-lang/crates.io-index)\" = \"ada4c783bb7e7443c14e0480f429ae2cc99da95065aeab7ee1b81ada0419404f\"\n \"checksum backtrace-sys 0.1.28 (registry+https://github.com/rust-lang/crates.io-index)\" = \"797c830ac25ccc92a7f8a7b9862bde440715531514594a6154e3d4a54dd769b6\"\n \"checksum bitflags 1.1.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"3d155346769a6855b86399e9bc3814ab343cd3d62c7e985113d46a0ec3c281fd\"\n+\"checksum build_const 0.2.1 (registry+https://github.com/rust-lang/crates.io-index)\" = \"39092a32794787acd8525ee150305ff051b0aa6cc2abaf193924f5ab05425f39\"\n \"checksum byteorder 1.3.2 (registry+https://github.com/rust-lang/crates.io-index)\" = \"a7c3dd8985a7111efc5c80b44e23ecdd8c007de8ade3b96595387e812b957cf5\"\n \"checksum cc 1.0.37 (registry+https://github.com/rust-lang/crates.io-index)\" = \"39f75544d7bbaf57560d2168f28fd649ff9c76153874db88bdbdfd839b1a7e7d\"\n \"checksum cfg-if 0.1.9 (registry+https://github.com/rust-lang/crates.io-index)\" = \"b486ce3ccf7ffd79fdeb678eac06a9e6c09fc88d33836340becb8fffe87c5e33\"\n@@ -869,17 +970,21 @@ dependencies = [\n \"checksum cranelift-module 0.30.0 (git+https://github.com/CraneStation/cranelift.git)\" = \"<none>\"\n \"checksum cranelift-native 0.30.0 (git+https://github.com/CraneStation/cranelift.git)\" = \"<none>\"\n \"checksum cranelift-simplejit 0.30.0 (git+https://github.com/CraneStation/cranelift.git)\" = \"<none>\"\n+\"checksum crc 1.8.1 (registry+https://github.com/rust-lang/crates.io-index)\" = \"d663548de7f5cca343f1e0a48d14dcfb0e9eb4e079ec58883b7251539fa10aeb\"\n+\"checksum crc32fast 1.2.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"ba125de2af0df55319f41944744ad91c71113bf74a4646efff39afe1f6842db1\"\n \"checksum env_logger 0.6.1 (registry+https://github.com/rust-lang/crates.io-index)\" = \"b61fa891024a945da30a9581546e8cfaf5602c7b3f4c137a2805cf388f92075a\"\n \"checksum errno 0.2.4 (registry+https://github.com/rust-lang/crates.io-index)\" = \"c2a071601ed01b988f896ab14b95e67335d1eeb50190932a1320f7fe3cadc84e\"\n \"checksum errno-dragonfly 0.1.1 (registry+https://github.com/rust-lang/crates.io-index)\" = \"14ca354e36190500e1e1fb267c647932382b54053c50b14970856c0b00a35067\"\n-\"checksum faerie 0.10.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"3c6d75e6376216d6228fbab8025087523666623d9302ff17dd023d024bf98302\"\n+\"checksum faerie 0.10.0 (git+https://github.com/m4b/faerie.git)\" = \"<none>\"\n \"checksum failure 0.1.5 (registry+https://github.com/rust-lang/crates.io-index)\" = \"795bd83d3abeb9220f257e597aa0080a508b27533824adf336529648f6abf7e2\"\n \"checksum failure_derive 0.1.5 (registry+https://github.com/rust-lang/crates.io-index)\" = \"ea1063915fd7ef4309e222a5a07cf9c319fb9c7836b1f89b85458672dbb127e1\"\n \"checksum fallible-iterator 0.2.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"4443176a9f2c162692bd3d352d745ef9413eec5782a80d8fd6f8a1ac692a07f7\"\n+\"checksum flate2 1.0.7 (registry+https://github.com/rust-lang/crates.io-index)\" = \"f87e68aa82b2de08a6e037f1385455759df6e445a8df5e005b4297191dbf18aa\"\n \"checksum fuchsia-cprng 0.1.1 (registry+https://github.com/rust-lang/crates.io-index)\" = \"a06f77d526c1a601b7c4cdd98f54b5eaabffc14d5f2f0296febdc7f357c6d3ba\"\n \"checksum gcc 0.3.55 (registry+https://github.com/rust-lang/crates.io-index)\" = \"8f5f3913fa0bfe7ee1fd8248b6b9f42a5af4b9d65ec2dd2c3c26132b950ecfc2\"\n \"checksum gimli 0.18.0 (git+https://github.com/gimli-rs/gimli.git)\" = \"<none>\"\n \"checksum goblin 0.0.21 (registry+https://github.com/rust-lang/crates.io-index)\" = \"6a4013e9182f2345c6b7829b9ef6e670bce0dfca12c6f974457ed2160c2c7fe9\"\n+\"checksum goblin 0.0.22 (git+https://github.com/m4b/goblin?rev=f34cf128fb4d1f3c93e5cf129cf673c9d787217b)\" = \"<none>\"\n \"checksum heck 0.3.1 (registry+https://github.com/rust-lang/crates.io-index)\" = \"20564e78d53d2bb135c343b3f47714a56af2061f1c928fdb541dc7b9fdd94205\"\n \"checksum humantime 1.2.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"3ca7e5f2e110db35f93b837c81797f3714500b81d517bf20c431b16d3ca4f114\"\n \"checksum indexmap 1.0.2 (registry+https://github.com/rust-lang/crates.io-index)\" = \"7e81a7c05f79578dbc15793d8b619db9ba32b4577003ef3af1a91c416798c58d\"\n@@ -889,8 +994,13 @@ dependencies = [\n \"checksum log 0.4.6 (registry+https://github.com/rust-lang/crates.io-index)\" = \"c84ec4b527950aa83a329754b01dbe3f58361d1c5efacd1f6d68c494d08a17c6\"\n \"checksum mach 0.2.3 (registry+https://github.com/rust-lang/crates.io-index)\" = \"86dd2487cdfea56def77b88438a2c915fb45113c5319bfe7e14306ca4cd0b0e1\"\n \"checksum memchr 2.2.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"2efc7bc57c883d4a4d6e3246905283d8dae951bb3bd32f49d6ef297f546e1c39\"\n+\"checksum miniz-sys 0.1.11 (registry+https://github.com/rust-lang/crates.io-index)\" = \"0300eafb20369952951699b68243ab4334f4b10a88f411c221d444b36c40e649\"\n+\"checksum miniz_oxide 0.2.1 (registry+https://github.com/rust-lang/crates.io-index)\" = \"c468f2369f07d651a5d0bb2c9079f8488a66d5466efe42d0c5c6466edcb7f71e\"\n+\"checksum miniz_oxide_c_api 0.2.1 (registry+https://github.com/rust-lang/crates.io-index)\" = \"b7fe927a42e3807ef71defb191dc87d4e24479b221e67015fe38ae2b7b447bab\"\n \"checksum nodrop 0.1.13 (registry+https://github.com/rust-lang/crates.io-index)\" = \"2f9667ddcc6cc8a43afc9b7917599d7216aa09c463919ea32c59ed6cac8bc945\"\n \"checksum numtoa 0.1.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"b8f8bdf33df195859076e54ab11ee78a1b208382d3a26ec40d142ffc1ecc49ef\"\n+\"checksum object 0.12.0 (git+https://github.com/gimli-rs/object.git)\" = \"<none>\"\n+\"checksum parity-wasm 0.38.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"20d7e522a7f994cc4ae32970b1ce0d99ecf91b8e1df080517a26faa6d2e2ee62\"\n \"checksum plain 0.2.3 (registry+https://github.com/rust-lang/crates.io-index)\" = \"b4596b6d070b27117e987119b4dac604f3c58cfb0b191112e24771b2faeac1a6\"\n \"checksum proc-macro2 0.4.30 (registry+https://github.com/rust-lang/crates.io-index)\" = \"cf3d2011ab5c909338f7887f4fc896d35932e29146c12c8d01da6b22a80ba759\"\n \"checksum quick-error 1.2.2 (registry+https://github.com/rust-lang/crates.io-index)\" = \"9274b940887ce9addde99c4eee6b5c44cc494b182b97e73dc8ffdcb3397fd3f0\"\n@@ -940,6 +1050,7 @@ dependencies = [\n \"checksum unicode-width 0.1.5 (registry+https://github.com/rust-lang/crates.io-index)\" = \"882386231c45df4700b275c7ff55b6f3698780a650026380e72dabe76fa46526\"\n \"checksum unicode-xid 0.1.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"fc72304796d0818e357ead4e000d19c9c174ab23dc11093ac919054d20a6a7fc\"\n \"checksum utf8-ranges 1.0.3 (registry+https://github.com/rust-lang/crates.io-index)\" = \"9d50aa7650df78abf942826607c62468ce18d9019673d4a2ebe1865dbb96ffde\"\n+\"checksum uuid 0.7.4 (registry+https://github.com/rust-lang/crates.io-index)\" = \"90dbc611eb48397705a6b0f6e917da23ae517e4d127123d2cf7674206627d32a\"\n \"checksum vec_map 0.8.1 (registry+https://github.com/rust-lang/crates.io-index)\" = \"05c78687fb1a80548ae3250346c3db86a80a7cdd77bda190189f2d0a0987c81a\"\n \"checksum winapi 0.3.7 (registry+https://github.com/rust-lang/crates.io-index)\" = \"f10e386af2b13e47c89e7236a7a14a086791a2b88ebad6df9bf42040195cf770\"\n \"checksum winapi-i686-pc-windows-gnu 0.4.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"ac3b87c63620426dd9b991e5ce0329eff545bccbbb34f3be09ff6fb6ab51b7b6\""}, {"sha": "59d66d07fa953b2e8c2730161978c66ca2cc4dc2", "filename": "Cargo.toml", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/db851945eae2bd7e7411228373fe30cf4d3ae910/Cargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/db851945eae2bd7e7411228373fe30cf4d3ae910/Cargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.toml?ref=db851945eae2bd7e7411228373fe30cf4d3ae910", "patch": "@@ -25,6 +25,7 @@ libc = \"0.2.53\"\n tempfile = \"3.0.7\"\n gimli = { git = \"https://github.com/gimli-rs/gimli.git\" }\n indexmap = \"1.0.2\"\n+object = \"0.12.0\"\n \n # Uncomment to use local checkout of cranelift\n #[patch.\"https://github.com/CraneStation/cranelift.git\"]\n@@ -39,5 +40,9 @@ indexmap = \"1.0.2\"\n [target.'cfg(not(target_arch = \"wasm32\"))'.dependencies]\n cranelift-simplejit = { git = \"https://github.com/CraneStation/cranelift.git\" }\n \n+[patch.crates-io]\n+faerie = { git = \"https://github.com/m4b/faerie.git\" }\n+object = { git = \"https://github.com/gimli-rs/object.git\" }\n+\n [profile.dev.overrides.\"*\"]\n opt-level = 3"}, {"sha": "7fbd41128895d7e83f4f7a805b6d5a5685a6fb68", "filename": "config.sh", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/db851945eae2bd7e7411228373fe30cf4d3ae910/config.sh", "raw_url": "https://github.com/rust-lang/rust/raw/db851945eae2bd7e7411228373fe30cf4d3ae910/config.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/config.sh?ref=db851945eae2bd7e7411228373fe30cf4d3ae910", "patch": "@@ -20,4 +20,4 @@ fi\n \n export RUSTFLAGS='-Zalways-encode-mir -Cpanic=abort -Cdebuginfo=2 -Zcodegen-backend='$(pwd)'/target/'$channel'/librustc_codegen_cranelift.'$dylib_ext' --sysroot '$(pwd)'/build_sysroot/sysroot'\n RUSTC=\"rustc $RUSTFLAGS -L crate=target/out --out-dir target/out\"\n-export RUST_LOG=warn # display metadata load errors\n+export RUSTC_LOG=warn # display metadata load errors"}, {"sha": "0e9846807021188a0e56474ddcef27b33907951d", "filename": "src/debuginfo.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/db851945eae2bd7e7411228373fe30cf4d3ae910/src%2Fdebuginfo.rs", "raw_url": "https://github.com/rust-lang/rust/raw/db851945eae2bd7e7411228373fe30cf4d3ae910/src%2Fdebuginfo.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdebuginfo.rs?ref=db851945eae2bd7e7411228373fe30cf4d3ae910", "patch": "@@ -191,7 +191,7 @@ impl<'a, 'tcx: 'a> DebugContext<'tcx> {\n         let _: Result<()> = sections.for_each_mut(|id, section| {\n             if !section.writer.slice().is_empty() {\n                 artifact\n-                    .declare_with(id.name(), Decl::debug_section(), section.writer.take())\n+                    .declare_with(id.name(), Decl::section(SectionKind::Debug), section.writer.take())\n                     .unwrap();\n             }\n             Ok(())"}, {"sha": "391154f80c1cdb03918d7d74e90a93d5ed424a67", "filename": "src/driver.rs", "status": "modified", "additions": 33, "deletions": 8, "changes": 41, "blob_url": "https://github.com/rust-lang/rust/blob/db851945eae2bd7e7411228373fe30cf4d3ae910/src%2Fdriver.rs", "raw_url": "https://github.com/rust-lang/rust/raw/db851945eae2bd7e7411228373fe30cf4d3ae910/src%2Fdriver.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdriver.rs?ref=db851945eae2bd7e7411228373fe30cf4d3ae910", "patch": "@@ -98,7 +98,7 @@ fn run_jit<'a, 'tcx: 'a>(tcx: TyCtxt<'a, 'tcx, 'tcx>, log: &mut Option<File>) ->\n fn run_aot<'a, 'tcx: 'a>(\n     tcx: TyCtxt<'a, 'tcx, 'tcx>,\n     metadata: EncodedMetadata,\n-    _need_metadata_module: bool,\n+    need_metadata_module: bool,\n     log: &mut Option<File>,\n ) -> Box<CodegenResults> {\n     let new_module = |name: String| {\n@@ -166,6 +166,37 @@ fn run_aot<'a, 'tcx: 'a>(\n     rustc_incremental::save_dep_graph(tcx);\n     rustc_incremental::finalize_session_directory(tcx.sess, tcx.crate_hash(LOCAL_CRATE));\n \n+    let metadata_module = if need_metadata_module {\n+        use rustc::mir::mono::CodegenUnitNameBuilder;\n+\n+        let cgu_name_builder = &mut CodegenUnitNameBuilder::new(tcx);\n+        let metadata_cgu_name = cgu_name_builder\n+            .build_cgu_name(LOCAL_CRATE, &[\"crate\"], Some(\"metadata\"))\n+            .as_str()\n+            .to_string();\n+\n+        let mut metadata_artifact =\n+            faerie::Artifact::new(crate::build_isa(tcx.sess).triple().clone(), metadata_cgu_name.clone());\n+        crate::metadata::write_metadata(tcx, &mut metadata_artifact);\n+\n+        let tmp_file = tcx\n+            .output_filenames(LOCAL_CRATE)\n+            .temp_path(OutputType::Metadata, Some(&metadata_cgu_name));\n+\n+        let obj = metadata_artifact.emit().unwrap();\n+        std::fs::write(&tmp_file, obj).unwrap();\n+\n+        Some(CompiledModule {\n+            name: metadata_cgu_name,\n+            kind: ModuleKind::Metadata,\n+            object: Some(tmp_file),\n+            bytecode: None,\n+            bytecode_compressed: None,\n+        })\n+    } else {\n+        None\n+    };\n+\n     Box::new(CodegenResults {\n         crate_name: tcx.crate_name(LOCAL_CRATE),\n         modules: vec![emit_module(\n@@ -184,13 +215,7 @@ fn run_aot<'a, 'tcx: 'a>(\n         } else {\n             None\n         },\n-        metadata_module: Some(CompiledModule {\n-            name: \"dummy_metadata\".to_string(),\n-            kind: ModuleKind::Metadata,\n-            object: None,\n-            bytecode: None,\n-            bytecode_compressed: None,\n-        }),\n+        metadata_module,\n         crate_hash: tcx.crate_hash(LOCAL_CRATE),\n         metadata,\n         windows_subsystem: None, // Windows is not yet supported"}, {"sha": "be46d638b1097dd67326d4110ee209901e0cf977", "filename": "src/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/db851945eae2bd7e7411228373fe30cf4d3ae910/src%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/db851945eae2bd7e7411228373fe30cf4d3ae910/src%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flib.rs?ref=db851945eae2bd7e7411228373fe30cf4d3ae910", "patch": "@@ -1,6 +1,7 @@\n #![feature(rustc_private, never_type, decl_macro)]\n #![allow(intra_doc_link_resolution_failure)]\n \n+extern crate flate2;\n extern crate rustc;\n extern crate rustc_allocator;\n extern crate rustc_codegen_ssa;"}, {"sha": "56ce208a71aa3d819dc4bcb56566bb256b1fc77e", "filename": "src/metadata.rs", "status": "modified", "additions": 74, "deletions": 7, "changes": 81, "blob_url": "https://github.com/rust-lang/rust/blob/db851945eae2bd7e7411228373fe30cf4d3ae910/src%2Fmetadata.rs", "raw_url": "https://github.com/rust-lang/rust/raw/db851945eae2bd7e7411228373fe30cf4d3ae910/src%2Fmetadata.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fmetadata.rs?ref=db851945eae2bd7e7411228373fe30cf4d3ae910", "patch": "@@ -1,16 +1,20 @@\n-use rustc::middle::cstore::MetadataLoader;\n+use std::fs::File;\n+use std::path::Path;\n+\n+use rustc::session::config;\n+use rustc::ty::TyCtxt;\n+use rustc::middle::cstore::{EncodedMetadata, MetadataLoader};\n use rustc_codegen_ssa::METADATA_FILENAME;\n use rustc_data_structures::owning_ref::{self, OwningRef};\n use rustc_data_structures::rustc_erase_owner;\n-use std::fs::File;\n-use std::path::Path;\n+use rustc_target::spec::Target;\n \n pub struct CraneliftMetadataLoader;\n \n impl MetadataLoader for CraneliftMetadataLoader {\n     fn get_rlib_metadata(\n         &self,\n-        _target: &crate::rustc_target::spec::Target,\n+        _target: &Target,\n         path: &Path,\n     ) -> Result<owning_ref::ErasedBoxRef<[u8]>, String> {\n         let mut archive = ar::Archive::new(File::open(path).map_err(|e| format!(\"{:?}\", e))?);\n@@ -31,9 +35,72 @@ impl MetadataLoader for CraneliftMetadataLoader {\n \n     fn get_dylib_metadata(\n         &self,\n-        _target: &crate::rustc_target::spec::Target,\n-        _path: &Path,\n+        _target: &Target,\n+        path: &Path,\n     ) -> Result<owning_ref::ErasedBoxRef<[u8]>, String> {\n-        Err(\"dylib metadata loading is not yet supported\".to_string())\n+        use object::Object;\n+        let file = std::fs::read(path).map_err(|e| format!(\"read:{:?}\", e))?;\n+        let file = object::File::parse(&file).map_err(|e| format!(\"parse: {:?}\", e))?;\n+        let buf = file.section_data_by_name(\".rustc\").ok_or(\"no .rustc section\")?.into_owned();\n+        let buf: OwningRef<Vec<u8>, [u8]> = OwningRef::new(buf).into();\n+        Ok(rustc_erase_owner!(buf.map_owner_box()))\n+    }\n+}\n+\n+// Adapted from https://github.com/rust-lang/rust/blob/da573206f87b5510de4b0ee1a9c044127e409bd3/src/librustc_codegen_llvm/base.rs#L47-L112\n+pub fn write_metadata<'a, 'gcx>(\n+    tcx: TyCtxt<'a, 'gcx, 'gcx>,\n+    artifact: &mut faerie::Artifact\n+) -> EncodedMetadata {\n+    use std::io::Write;\n+    use flate2::Compression;\n+    use flate2::write::DeflateEncoder;\n+\n+    #[derive(PartialEq, Eq, PartialOrd, Ord)]\n+    enum MetadataKind {\n+        None,\n+        Uncompressed,\n+        Compressed\n+    }\n+\n+    let kind = tcx.sess.crate_types.borrow().iter().map(|ty| {\n+        match *ty {\n+            config::CrateType::Executable |\n+            config::CrateType::Staticlib |\n+            config::CrateType::Cdylib => MetadataKind::None,\n+\n+            config::CrateType::Rlib => MetadataKind::Uncompressed,\n+\n+            config::CrateType::Dylib |\n+            config::CrateType::ProcMacro => MetadataKind::Compressed,\n+        }\n+    }).max().unwrap_or(MetadataKind::None);\n+\n+    if kind == MetadataKind::None {\n+        return EncodedMetadata::new();\n     }\n+\n+    let metadata = tcx.encode_metadata();\n+    if kind == MetadataKind::Uncompressed {\n+        return metadata;\n+    }\n+\n+    assert!(kind == MetadataKind::Compressed);\n+    let mut compressed = tcx.metadata_encoding_version();\n+    DeflateEncoder::new(&mut compressed, Compression::fast())\n+        .write_all(&metadata.raw_data).unwrap();\n+\n+    artifact.declare(\".rustc\", faerie::Decl::section(faerie::SectionKind::Data)).unwrap();\n+    artifact.define_with_symbols(\".rustc\", compressed, {\n+        let mut map = std::collections::BTreeMap::new();\n+        // FIXME implement faerie elf backend section custom symbols\n+        // For MachO this is necessary to prevent the linker from throwing away the .rustc section,\n+        // but for ELF it isn't.\n+        if tcx.sess.target.target.options.is_like_osx {\n+            map.insert(rustc::middle::exported_symbols::metadata_symbol_name(tcx), 0);\n+        }\n+        map\n+    }).unwrap();\n+\n+    metadata\n }"}, {"sha": "1dfbf9247546c0e27988aaac4518d7cd3a515fb4", "filename": "test.sh", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/db851945eae2bd7e7411228373fe30cf4d3ae910/test.sh", "raw_url": "https://github.com/rust-lang/rust/raw/db851945eae2bd7e7411228373fe30cf4d3ae910/test.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/test.sh?ref=db851945eae2bd7e7411228373fe30cf4d3ae910", "patch": "@@ -5,7 +5,7 @@ rm -r target/out || true\n mkdir -p target/out/clif\n \n echo \"[BUILD] mini_core\"\n-$RUSTC example/mini_core.rs --crate-name mini_core --crate-type lib\n+$RUSTC example/mini_core.rs --crate-name mini_core --crate-type dylib\n \n echo \"[BUILD] example\"\n $RUSTC example/example.rs --crate-type lib"}]}