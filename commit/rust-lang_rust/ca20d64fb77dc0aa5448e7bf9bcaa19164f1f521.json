{"sha": "ca20d64fb77dc0aa5448e7bf9bcaa19164f1f521", "node_id": "C_kwDOAAsO6NoAKGNhMjBkNjRmYjc3ZGMwYWE1NDQ4ZTdiZjliY2FhMTkxNjRmMWY1MjE", "commit": {"author": {"name": "Noah Lev", "email": "camelidcamel@gmail.com", "date": "2022-01-06T22:12:48Z"}, "committer": {"name": "Noah Lev", "email": "camelidcamel@gmail.com", "date": "2022-01-11T03:23:26Z"}, "message": "Enable ignored part of test\n\nInherent associated types *are* supported, just unstable.", "tree": {"sha": "bd4743fe79fe87f1ee92bdea6ea3dd325dee98f7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bd4743fe79fe87f1ee92bdea6ea3dd325dee98f7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ca20d64fb77dc0aa5448e7bf9bcaa19164f1f521", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ca20d64fb77dc0aa5448e7bf9bcaa19164f1f521", "html_url": "https://github.com/rust-lang/rust/commit/ca20d64fb77dc0aa5448e7bf9bcaa19164f1f521", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ca20d64fb77dc0aa5448e7bf9bcaa19164f1f521/comments", "author": {"login": "camelid", "id": 37223377, "node_id": "MDQ6VXNlcjM3MjIzMzc3", "avatar_url": "https://avatars.githubusercontent.com/u/37223377?v=4", "gravatar_id": "", "url": "https://api.github.com/users/camelid", "html_url": "https://github.com/camelid", "followers_url": "https://api.github.com/users/camelid/followers", "following_url": "https://api.github.com/users/camelid/following{/other_user}", "gists_url": "https://api.github.com/users/camelid/gists{/gist_id}", "starred_url": "https://api.github.com/users/camelid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/camelid/subscriptions", "organizations_url": "https://api.github.com/users/camelid/orgs", "repos_url": "https://api.github.com/users/camelid/repos", "events_url": "https://api.github.com/users/camelid/events{/privacy}", "received_events_url": "https://api.github.com/users/camelid/received_events", "type": "User", "site_admin": false}, "committer": {"login": "camelid", "id": 37223377, "node_id": "MDQ6VXNlcjM3MjIzMzc3", "avatar_url": "https://avatars.githubusercontent.com/u/37223377?v=4", "gravatar_id": "", "url": "https://api.github.com/users/camelid", "html_url": "https://github.com/camelid", "followers_url": "https://api.github.com/users/camelid/followers", "following_url": "https://api.github.com/users/camelid/following{/other_user}", "gists_url": "https://api.github.com/users/camelid/gists{/gist_id}", "starred_url": "https://api.github.com/users/camelid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/camelid/subscriptions", "organizations_url": "https://api.github.com/users/camelid/orgs", "repos_url": "https://api.github.com/users/camelid/repos", "events_url": "https://api.github.com/users/camelid/events{/privacy}", "received_events_url": "https://api.github.com/users/camelid/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e18b23b7f494d57090be94351e92c1d69251f1a9", "url": "https://api.github.com/repos/rust-lang/rust/commits/e18b23b7f494d57090be94351e92c1d69251f1a9", "html_url": "https://github.com/rust-lang/rust/commit/e18b23b7f494d57090be94351e92c1d69251f1a9"}], "stats": {"total": 9, "additions": 5, "deletions": 4}, "files": [{"sha": "7a65723d77b21182efe2a94a716be9d7e0403e9a", "filename": "src/test/rustdoc/intra-doc/prim-self.rs", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/ca20d64fb77dc0aa5448e7bf9bcaa19164f1f521/src%2Ftest%2Frustdoc%2Fintra-doc%2Fprim-self.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca20d64fb77dc0aa5448e7bf9bcaa19164f1f521/src%2Ftest%2Frustdoc%2Fintra-doc%2Fprim-self.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fintra-doc%2Fprim-self.rs?ref=ca20d64fb77dc0aa5448e7bf9bcaa19164f1f521", "patch": "@@ -1,7 +1,9 @@\n #![deny(rustdoc::broken_intra_doc_links)]\n+#![allow(incomplete_features)] // inherent_associated_types\n #![feature(lang_items)]\n #![feature(no_core)]\n #![feature(rustdoc_internals)]\n+#![feature(inherent_associated_types)]\n #![no_core]\n \n #[lang = \"usize\"]\n@@ -17,10 +19,9 @@ impl usize {\n     /// 10 and 2^32 are basically the same.\n     pub const MAX: usize = 10;\n \n-    // FIXME(#8995) uncomment this when associated types in inherent impls are supported\n-    // @ has - '//a[@href=\"{{channel}}/std/primitive.usize.html#associatedtype.ME\"]' 'Self::ME'\n-    // / [Self::ME]\n-    //pub type ME = usize;\n+    // @has - '//a[@href=\"primitive.usize.html#associatedtype.ME\"]' 'Self::ME'\n+    /// [Self::ME]\n+    pub type ME = usize;\n }\n \n #[doc(primitive = \"usize\")]"}]}