{"sha": "2809b0155af72fd9e6c5c3d27942dd95b6718ef7", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI4MDliMDE1NWFmNzJmZDllNmM1YzNkMjc5NDJkZDk1YjY3MThlZjc=", "commit": {"author": {"name": "gnzlbg", "email": "gonzalobg88@gmail.com", "date": "2018-05-09T14:01:52Z"}, "committer": {"name": "gnzlbg", "email": "gonzalobg88@gmail.com", "date": "2018-05-24T14:04:39Z"}, "message": "add run-time test and missing codegen test", "tree": {"sha": "9153b7aa5d9eeb4c6e48014b6f6e498dfcde5b34", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9153b7aa5d9eeb4c6e48014b6f6e498dfcde5b34"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2809b0155af72fd9e6c5c3d27942dd95b6718ef7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2809b0155af72fd9e6c5c3d27942dd95b6718ef7", "html_url": "https://github.com/rust-lang/rust/commit/2809b0155af72fd9e6c5c3d27942dd95b6718ef7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2809b0155af72fd9e6c5c3d27942dd95b6718ef7/comments", "author": {"login": "gnzlbg", "id": 904614, "node_id": "MDQ6VXNlcjkwNDYxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/904614?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gnzlbg", "html_url": "https://github.com/gnzlbg", "followers_url": "https://api.github.com/users/gnzlbg/followers", "following_url": "https://api.github.com/users/gnzlbg/following{/other_user}", "gists_url": "https://api.github.com/users/gnzlbg/gists{/gist_id}", "starred_url": "https://api.github.com/users/gnzlbg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gnzlbg/subscriptions", "organizations_url": "https://api.github.com/users/gnzlbg/orgs", "repos_url": "https://api.github.com/users/gnzlbg/repos", "events_url": "https://api.github.com/users/gnzlbg/events{/privacy}", "received_events_url": "https://api.github.com/users/gnzlbg/received_events", "type": "User", "site_admin": false}, "committer": {"login": "gnzlbg", "id": 904614, "node_id": "MDQ6VXNlcjkwNDYxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/904614?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gnzlbg", "html_url": "https://github.com/gnzlbg", "followers_url": "https://api.github.com/users/gnzlbg/followers", "following_url": "https://api.github.com/users/gnzlbg/following{/other_user}", "gists_url": "https://api.github.com/users/gnzlbg/gists{/gist_id}", "starred_url": "https://api.github.com/users/gnzlbg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gnzlbg/subscriptions", "organizations_url": "https://api.github.com/users/gnzlbg/orgs", "repos_url": "https://api.github.com/users/gnzlbg/repos", "events_url": "https://api.github.com/users/gnzlbg/events{/privacy}", "received_events_url": "https://api.github.com/users/gnzlbg/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7a6a23d818a288d11a3131b247d7d88a6d318db8", "url": "https://api.github.com/repos/rust-lang/rust/commits/7a6a23d818a288d11a3131b247d7d88a6d318db8", "html_url": "https://github.com/rust-lang/rust/commit/7a6a23d818a288d11a3131b247d7d88a6d318db8"}], "stats": {"total": 194, "additions": 194, "deletions": 0}, "files": [{"sha": "dd77294c824fb221014ada6eb9099d0cd4195096", "filename": "src/test/codegen/simd-intrinsic-float-log.rs", "status": "added", "additions": 104, "deletions": 0, "changes": 104, "blob_url": "https://github.com/rust-lang/rust/blob/2809b0155af72fd9e6c5c3d27942dd95b6718ef7/src%2Ftest%2Fcodegen%2Fsimd-intrinsic-float-log.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2809b0155af72fd9e6c5c3d27942dd95b6718ef7/src%2Ftest%2Fcodegen%2Fsimd-intrinsic-float-log.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcodegen%2Fsimd-intrinsic-float-log.rs?ref=2809b0155af72fd9e6c5c3d27942dd95b6718ef7", "patch": "@@ -0,0 +1,104 @@\n+// Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// ignore-emscripten\n+\n+// compile-flags: -C no-prepopulate-passes\n+\n+#![crate_type = \"lib\"]\n+\n+#![feature(repr_simd, platform_intrinsics)]\n+#![allow(non_camel_case_types)]\n+\n+#[repr(simd)]\n+#[derive(Copy, Clone, PartialEq, Debug)]\n+pub struct f32x2(pub f32, pub f32);\n+\n+#[repr(simd)]\n+#[derive(Copy, Clone, PartialEq, Debug)]\n+pub struct f32x4(pub f32, pub f32, pub f32, pub f32);\n+\n+#[repr(simd)]\n+#[derive(Copy, Clone, PartialEq, Debug)]\n+pub struct f32x8(pub f32, pub f32, pub f32, pub f32,\n+                 pub f32, pub f32, pub f32, pub f32);\n+\n+#[repr(simd)]\n+#[derive(Copy, Clone, PartialEq, Debug)]\n+pub struct f32x16(pub f32, pub f32, pub f32, pub f32,\n+                  pub f32, pub f32, pub f32, pub f32,\n+                  pub f32, pub f32, pub f32, pub f32,\n+                  pub f32, pub f32, pub f32, pub f32);\n+\n+extern \"platform-intrinsic\" {\n+    fn simd_flog<T>(x: T) -> T;\n+}\n+\n+// CHECK-LABEL: @log_32x2\n+#[no_mangle]\n+pub unsafe fn log_32x2(a: f32x2) -> f32x2 {\n+    // CHECK: call <2 x float> @llvm.log.v2f32\n+    simd_flog(a)\n+}\n+\n+// CHECK-LABEL: @log_32x4\n+#[no_mangle]\n+pub unsafe fn log_32x4(a: f32x4) -> f32x4 {\n+    // CHECK: call <4 x float> @llvm.log.v4f32\n+    simd_flog(a)\n+}\n+\n+// CHECK-LABEL: @log_32x8\n+#[no_mangle]\n+pub unsafe fn log_32x8(a: f32x8) -> f32x8 {\n+    // CHECK: call <8 x float> @llvm.log.v8f32\n+    simd_flog(a)\n+}\n+\n+// CHECK-LABEL: @log_32x16\n+#[no_mangle]\n+pub unsafe fn log_32x16(a: f32x16) -> f32x16 {\n+    // CHECK: call <16 x float> @llvm.log.v16f32\n+    simd_flog(a)\n+}\n+\n+#[repr(simd)]\n+#[derive(Copy, Clone, PartialEq, Debug)]\n+pub struct f64x2(pub f64, pub f64);\n+\n+#[repr(simd)]\n+#[derive(Copy, Clone, PartialEq, Debug)]\n+pub struct f64x4(pub f64, pub f64, pub f64, pub f64);\n+\n+#[repr(simd)]\n+#[derive(Copy, Clone, PartialEq, Debug)]\n+pub struct f64x8(pub f64, pub f64, pub f64, pub f64,\n+                 pub f64, pub f64, pub f64, pub f64);\n+\n+// CHECK-LABEL: @log_64x4\n+#[no_mangle]\n+pub unsafe fn log_64x4(a: f64x4) -> f64x4 {\n+    // CHECK: call <4 x double> @llvm.log.v4f64\n+    simd_flog(a)\n+}\n+\n+// CHECK-LABEL: @log_64x2\n+#[no_mangle]\n+pub unsafe fn log_64x2(a: f64x2) -> f64x2 {\n+    // CHECK: call <2 x double> @llvm.log.v2f64\n+    simd_flog(a)\n+}\n+\n+// CHECK-LABEL: @log_64x8\n+#[no_mangle]\n+pub unsafe fn log_64x8(a: f64x8) -> f64x8 {\n+    // CHECK: call <8 x double> @llvm.log.v8f64\n+    simd_flog(a)\n+}"}, {"sha": "e2bf310641c87e6a5e52dc42cebf518b6f5aa979", "filename": "src/test/run-pass/simd-intrinsic-float-math.rs", "status": "added", "additions": 90, "deletions": 0, "changes": 90, "blob_url": "https://github.com/rust-lang/rust/blob/2809b0155af72fd9e6c5c3d27942dd95b6718ef7/src%2Ftest%2Frun-pass%2Fsimd-intrinsic-float-math.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2809b0155af72fd9e6c5c3d27942dd95b6718ef7/src%2Ftest%2Frun-pass%2Fsimd-intrinsic-float-math.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fsimd-intrinsic-float-math.rs?ref=2809b0155af72fd9e6c5c3d27942dd95b6718ef7", "patch": "@@ -0,0 +1,90 @@\n+// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// ignore-emscripten\n+// error-pattern: panicked\n+\n+// Test that the simd floating-point math intrinsics produce correct results.\n+\n+#![feature(repr_simd, platform_intrinsics)]\n+#![allow(non_camel_case_types)]\n+\n+#[repr(simd)]\n+#[derive(Copy, Clone, PartialEq, Debug)]\n+struct f32x4(pub f32, pub f32, pub f32, pub f32);\n+\n+extern \"platform-intrinsic\" {\n+    fn simd_fsqrt<T>(x: T) -> T;\n+    fn simd_fabs<T>(x: T) -> T;\n+    fn simd_fsin<T>(x: T) -> T;\n+    fn simd_fcos<T>(x: T) -> T;\n+    fn simd_ceil<T>(x: T) -> T;\n+    fn simd_fexp<T>(x: T) -> T;\n+    fn simd_fexp2<T>(x: T) -> T;\n+    fn simd_floor<T>(x: T) -> T;\n+    fn simd_fma<T>(x: T, y: T, z: T) -> T;\n+    fn simd_flog<T>(x: T) -> T;\n+    fn simd_flog10<T>(x: T) -> T;\n+    fn simd_flog2<T>(x: T) -> T;\n+    fn simd_fpow<T>(x: T, y: T) -> T;\n+    fn simd_fpowi<T>(x: T, y: i32) -> T;\n+}\n+\n+fn main() {\n+    let x = f32x4(1.0, 1.0, 1.0, 1.0);\n+    let y = f32x4(-1.0, -1.0, -1.0, -1.0);\n+    let z = f32x4(0.0, 0.0, 0.0, 0.0);\n+\n+    let h = f32x4(0.5, 0.5, 0.5, 0.5);\n+\n+    unsafe {\n+        let r = simd_fabs(y);\n+        assert_eq!(x, r);\n+\n+        let r = simd_fcos(z);\n+        assert_eq!(x, r);\n+\n+        let r = simd_ceil(h);\n+        assert_eq!(x, r);\n+\n+        let r = simd_fexp(z);\n+        assert_eq!(x, r);\n+\n+        let r = simd_fexp2(z);\n+        assert_eq!(x, r);\n+\n+        let r = simd_floor(h);\n+        assert_eq!(z, r);\n+\n+        let r = simd_fma(x, h, h);\n+        assert_eq!(x, r);\n+\n+        let r = simd_fsqrt(x);\n+        assert_eq!(x, r);\n+\n+        let r = simd_flog(x);\n+        assert_eq!(z, r);\n+\n+        let r = simd_flog2(x);\n+        assert_eq!(z, r);\n+\n+        let r = simd_flog10(x);\n+        assert_eq!(z, r);\n+\n+        let r = simd_fpow(h, x);\n+        assert_eq!(h, r);\n+\n+        let r = simd_fpowi(h, 1);\n+        assert_eq!(h, r);\n+\n+        let r = simd_fsin(z);\n+        assert_eq!(z, r);\n+    }\n+}"}]}