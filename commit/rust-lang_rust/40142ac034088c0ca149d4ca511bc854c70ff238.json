{"sha": "40142ac034088c0ca149d4ca511bc854c70ff238", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQwMTQyYWMwMzQwODhjMGNhMTQ5ZDRjYTUxMWJjODU0YzcwZmYyMzg=", "commit": {"author": {"name": "Caleb Zulawski", "email": "caleb.zulawski@gmail.com", "date": "2021-08-07T21:15:24Z"}, "committer": {"name": "Caleb Zulawski", "email": "caleb.zulawski@gmail.com", "date": "2021-08-07T21:15:24Z"}, "message": "Remove aliases", "tree": {"sha": "c9135fa1224da264a245dde7090730c3621ed722", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c9135fa1224da264a245dde7090730c3621ed722"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/40142ac034088c0ca149d4ca511bc854c70ff238", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/40142ac034088c0ca149d4ca511bc854c70ff238", "html_url": "https://github.com/rust-lang/rust/commit/40142ac034088c0ca149d4ca511bc854c70ff238", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/40142ac034088c0ca149d4ca511bc854c70ff238/comments", "author": {"login": "calebzulawski", "id": 563826, "node_id": "MDQ6VXNlcjU2MzgyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/563826?v=4", "gravatar_id": "", "url": "https://api.github.com/users/calebzulawski", "html_url": "https://github.com/calebzulawski", "followers_url": "https://api.github.com/users/calebzulawski/followers", "following_url": "https://api.github.com/users/calebzulawski/following{/other_user}", "gists_url": "https://api.github.com/users/calebzulawski/gists{/gist_id}", "starred_url": "https://api.github.com/users/calebzulawski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/calebzulawski/subscriptions", "organizations_url": "https://api.github.com/users/calebzulawski/orgs", "repos_url": "https://api.github.com/users/calebzulawski/repos", "events_url": "https://api.github.com/users/calebzulawski/events{/privacy}", "received_events_url": "https://api.github.com/users/calebzulawski/received_events", "type": "User", "site_admin": false}, "committer": {"login": "calebzulawski", "id": 563826, "node_id": "MDQ6VXNlcjU2MzgyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/563826?v=4", "gravatar_id": "", "url": "https://api.github.com/users/calebzulawski", "html_url": "https://github.com/calebzulawski", "followers_url": "https://api.github.com/users/calebzulawski/followers", "following_url": "https://api.github.com/users/calebzulawski/following{/other_user}", "gists_url": "https://api.github.com/users/calebzulawski/gists{/gist_id}", "starred_url": "https://api.github.com/users/calebzulawski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/calebzulawski/subscriptions", "organizations_url": "https://api.github.com/users/calebzulawski/orgs", "repos_url": "https://api.github.com/users/calebzulawski/repos", "events_url": "https://api.github.com/users/calebzulawski/events{/privacy}", "received_events_url": "https://api.github.com/users/calebzulawski/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "275889f7f464614069e88ea8efbf41c560da0a06", "url": "https://api.github.com/repos/rust-lang/rust/commits/275889f7f464614069e88ea8efbf41c560da0a06", "html_url": "https://github.com/rust-lang/rust/commit/275889f7f464614069e88ea8efbf41c560da0a06"}], "stats": {"total": 154, "additions": 60, "deletions": 94}, "files": [{"sha": "710d23a71d0362ea1a5588829ea1287eb9688c5e", "filename": "crates/core_simd/src/select.rs", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/40142ac034088c0ca149d4ca511bc854c70ff238/crates%2Fcore_simd%2Fsrc%2Fselect.rs", "raw_url": "https://github.com/rust-lang/rust/raw/40142ac034088c0ca149d4ca511bc854c70ff238/crates%2Fcore_simd%2Fsrc%2Fselect.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fcore_simd%2Fsrc%2Fselect.rs?ref=40142ac034088c0ca149d4ca511bc854c70ff238", "patch": "@@ -60,21 +60,21 @@ where\n     ///\n     /// ```\n     /// # #![feature(portable_simd)]\n-    /// # use core_simd::{Mask32, SimdI32};\n-    /// let a = SimdI32::from_array([0, 1, 2, 3]);\n-    /// let b = SimdI32::from_array([4, 5, 6, 7]);\n-    /// let mask = Mask32::from_array([true, false, false, true]);\n+    /// # use core_simd::{Mask, Simd};\n+    /// let a = Simd::from_array([0, 1, 2, 3]);\n+    /// let b = Simd::from_array([4, 5, 6, 7]);\n+    /// let mask = Mask::from_array([true, false, false, true]);\n     /// let c = mask.select(a, b);\n     /// assert_eq!(c.to_array(), [0, 5, 6, 3]);\n     /// ```\n     ///\n     /// `select` can also be used on masks:\n     /// ```\n     /// # #![feature(portable_simd)]\n-    /// # use core_simd::Mask32;\n-    /// let a = Mask32::from_array([true, true, false, false]);\n-    /// let b = Mask32::from_array([false, false, true, true]);\n-    /// let mask = Mask32::from_array([true, false, false, true]);\n+    /// # use core_simd::Mask;\n+    /// let a = Mask::<i32, 4>::from_array([true, true, false, false]);\n+    /// let b = Mask::<i32, 4>::from_array([false, false, true, true]);\n+    /// let mask = Mask::<i32, 4>::from_array([true, false, false, true]);\n     /// let c = mask.select(a, b);\n     /// assert_eq!(c.to_array(), [true, false, true, false]);\n     /// ```"}, {"sha": "6ef88ddebc68a010624141c9545819a97033d784", "filename": "crates/core_simd/src/vector/float.rs", "status": "modified", "additions": 7, "deletions": 13, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/40142ac034088c0ca149d4ca511bc854c70ff238/crates%2Fcore_simd%2Fsrc%2Fvector%2Ffloat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/40142ac034088c0ca149d4ca511bc854c70ff238/crates%2Fcore_simd%2Fsrc%2Fvector%2Ffloat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fcore_simd%2Fsrc%2Fvector%2Ffloat.rs?ref=40142ac034088c0ca149d4ca511bc854c70ff238", "patch": "@@ -183,32 +183,26 @@ macro_rules! impl_float_vector {\n     };\n }\n \n-/// A SIMD vector of containing `LANES` `f32` values.\n-pub type SimdF32<const LANES: usize> = crate::Simd<f32, LANES>;\n-\n-/// A SIMD vector of containing `LANES` `f64` values.\n-pub type SimdF64<const LANES: usize> = crate::Simd<f64, LANES>;\n-\n impl_float_vector! { f32, u32, i32 }\n impl_float_vector! { f64, u64, i64 }\n \n /// Vector of two `f32` values\n-pub type f32x2 = SimdF32<2>;\n+pub type f32x2 = Simd<f32, 2>;\n \n /// Vector of four `f32` values\n-pub type f32x4 = SimdF32<4>;\n+pub type f32x4 = Simd<f32, 4>;\n \n /// Vector of eight `f32` values\n-pub type f32x8 = SimdF32<8>;\n+pub type f32x8 = Simd<f32, 8>;\n \n /// Vector of 16 `f32` values\n-pub type f32x16 = SimdF32<16>;\n+pub type f32x16 = Simd<f32, 16>;\n \n /// Vector of two `f64` values\n-pub type f64x2 = SimdF64<2>;\n+pub type f64x2 = Simd<f64, 2>;\n \n /// Vector of four `f64` values\n-pub type f64x4 = SimdF64<4>;\n+pub type f64x4 = Simd<f64, 4>;\n \n /// Vector of eight `f64` values\n-pub type f64x8 = SimdF64<8>;\n+pub type f64x8 = Simd<f64, 8>;"}, {"sha": "5f435e16b6877edc8ef35421e671ea6532ea4efd", "filename": "crates/core_simd/src/vector/int.rs", "status": "modified", "additions": 20, "deletions": 35, "changes": 55, "blob_url": "https://github.com/rust-lang/rust/blob/40142ac034088c0ca149d4ca511bc854c70ff238/crates%2Fcore_simd%2Fsrc%2Fvector%2Fint.rs", "raw_url": "https://github.com/rust-lang/rust/raw/40142ac034088c0ca149d4ca511bc854c70ff238/crates%2Fcore_simd%2Fsrc%2Fvector%2Fint.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fcore_simd%2Fsrc%2Fvector%2Fint.rs?ref=40142ac034088c0ca149d4ca511bc854c70ff238", "patch": "@@ -36,83 +36,68 @@ macro_rules! impl_integer_vector {\n     }\n }\n \n-/// A SIMD vector of containing `LANES` `i8` values.\n-pub type SimdI8<const LANES: usize> = crate::Simd<i8, LANES>;\n-\n-/// A SIMD vector of containing `LANES` `i16` values.\n-pub type SimdI16<const LANES: usize> = crate::Simd<i16, LANES>;\n-\n-/// A SIMD vector of containing `LANES` `i32` values.\n-pub type SimdI32<const LANES: usize> = crate::Simd<i32, LANES>;\n-\n-/// A SIMD vector of containing `LANES` `i64` values.\n-pub type SimdI64<const LANES: usize> = crate::Simd<i64, LANES>;\n-\n-/// A SIMD vector of containing `LANES` `isize` values.\n-pub type SimdIsize<const LANES: usize> = crate::Simd<isize, LANES>;\n-\n impl_integer_vector! { isize }\n impl_integer_vector! { i16 }\n impl_integer_vector! { i32 }\n impl_integer_vector! { i64 }\n impl_integer_vector! { i8 }\n \n /// Vector of two `isize` values\n-pub type isizex2 = SimdIsize<2>;\n+pub type isizex2 = Simd<isize, 2>;\n \n /// Vector of four `isize` values\n-pub type isizex4 = SimdIsize<4>;\n+pub type isizex4 = Simd<isize, 4>;\n \n /// Vector of eight `isize` values\n-pub type isizex8 = SimdIsize<8>;\n+pub type isizex8 = Simd<isize, 8>;\n \n /// Vector of two `i16` values\n-pub type i16x2 = SimdI16<2>;\n+pub type i16x2 = Simd<i16, 2>;\n \n /// Vector of four `i16` values\n-pub type i16x4 = SimdI16<4>;\n+pub type i16x4 = Simd<i16, 4>;\n \n /// Vector of eight `i16` values\n-pub type i16x8 = SimdI16<8>;\n+pub type i16x8 = Simd<i16, 8>;\n \n /// Vector of 16 `i16` values\n-pub type i16x16 = SimdI16<16>;\n+pub type i16x16 = Simd<i16, 16>;\n \n /// Vector of 32 `i16` values\n-pub type i16x32 = SimdI16<32>;\n+pub type i16x32 = Simd<i16, 32>;\n \n /// Vector of two `i32` values\n-pub type i32x2 = SimdI32<2>;\n+pub type i32x2 = Simd<i32, 2>;\n \n /// Vector of four `i32` values\n-pub type i32x4 = SimdI32<4>;\n+pub type i32x4 = Simd<i32, 4>;\n \n /// Vector of eight `i32` values\n-pub type i32x8 = SimdI32<8>;\n+pub type i32x8 = Simd<i32, 8>;\n \n /// Vector of 16 `i32` values\n-pub type i32x16 = SimdI32<16>;\n+pub type i32x16 = Simd<i32, 16>;\n \n /// Vector of two `i64` values\n-pub type i64x2 = SimdI64<2>;\n+pub type i64x2 = Simd<i64, 2>;\n \n /// Vector of four `i64` values\n-pub type i64x4 = SimdI64<4>;\n+pub type i64x4 = Simd<i64, 4>;\n \n /// Vector of eight `i64` values\n-pub type i64x8 = SimdI64<8>;\n+pub type i64x8 = Simd<i64, 8>;\n \n /// Vector of four `i8` values\n-pub type i8x4 = SimdI8<4>;\n+pub type i8x4 = Simd<i8, 4>;\n \n /// Vector of eight `i8` values\n-pub type i8x8 = SimdI8<8>;\n+pub type i8x8 = Simd<i8, 8>;\n \n /// Vector of 16 `i8` values\n-pub type i8x16 = SimdI8<16>;\n+pub type i8x16 = Simd<i8, 16>;\n \n /// Vector of 32 `i8` values\n-pub type i8x32 = SimdI8<32>;\n+pub type i8x32 = Simd<i8, 32>;\n \n /// Vector of 64 `i8` values\n-pub type i8x64 = SimdI8<64>;\n+pub type i8x64 = Simd<i8, 64>;"}, {"sha": "b3dd199a54630bec303a9a5eee4ed07282ff3648", "filename": "crates/core_simd/src/vector/uint.rs", "status": "modified", "additions": 21, "deletions": 34, "changes": 55, "blob_url": "https://github.com/rust-lang/rust/blob/40142ac034088c0ca149d4ca511bc854c70ff238/crates%2Fcore_simd%2Fsrc%2Fvector%2Fuint.rs", "raw_url": "https://github.com/rust-lang/rust/raw/40142ac034088c0ca149d4ca511bc854c70ff238/crates%2Fcore_simd%2Fsrc%2Fvector%2Fuint.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fcore_simd%2Fsrc%2Fvector%2Fuint.rs?ref=40142ac034088c0ca149d4ca511bc854c70ff238", "patch": "@@ -1,76 +1,63 @@\n #![allow(non_camel_case_types)]\n \n-/// A SIMD vector of containing `LANES` `u8` values.\n-pub type SimdU8<const LANES: usize> = crate::Simd<u8, LANES>;\n-\n-/// A SIMD vector of containing `LANES` `u16` values.\n-pub type SimdU16<const LANES: usize> = crate::Simd<u16, LANES>;\n-\n-/// A SIMD vector of containing `LANES` `u32` values.\n-pub type SimdU32<const LANES: usize> = crate::Simd<u32, LANES>;\n-\n-/// A SIMD vector of containing `LANES` `u64` values.\n-pub type SimdU64<const LANES: usize> = crate::Simd<u64, LANES>;\n-\n-/// A SIMD vector of containing `LANES` `usize` values.\n-pub type SimdUsize<const LANES: usize> = crate::Simd<usize, LANES>;\n+use crate::Simd;\n \n /// Vector of two `usize` values\n-pub type usizex2 = SimdUsize<2>;\n+pub type usizex2 = Simd<usize, 2>;\n \n /// Vector of four `usize` values\n-pub type usizex4 = SimdUsize<4>;\n+pub type usizex4 = Simd<usize, 4>;\n \n /// Vector of eight `usize` values\n-pub type usizex8 = SimdUsize<8>;\n+pub type usizex8 = Simd<usize, 8>;\n \n /// Vector of two `u16` values\n-pub type u16x2 = SimdU16<2>;\n+pub type u16x2 = Simd<u16, 2>;\n \n /// Vector of four `u16` values\n-pub type u16x4 = SimdU16<4>;\n+pub type u16x4 = Simd<u16, 4>;\n \n /// Vector of eight `u16` values\n-pub type u16x8 = SimdU16<8>;\n+pub type u16x8 = Simd<u16, 8>;\n \n /// Vector of 16 `u16` values\n-pub type u16x16 = SimdU16<16>;\n+pub type u16x16 = Simd<u16, 16>;\n \n /// Vector of 32 `u16` values\n-pub type u16x32 = SimdU16<32>;\n+pub type u16x32 = Simd<u16, 32>;\n \n /// Vector of two `u32` values\n-pub type u32x2 = SimdU32<2>;\n+pub type u32x2 = Simd<u32, 2>;\n \n /// Vector of four `u32` values\n-pub type u32x4 = SimdU32<4>;\n+pub type u32x4 = Simd<u32, 4>;\n \n /// Vector of eight `u32` values\n-pub type u32x8 = SimdU32<8>;\n+pub type u32x8 = Simd<u32, 8>;\n \n /// Vector of 16 `u32` values\n-pub type u32x16 = SimdU32<16>;\n+pub type u32x16 = Simd<u32, 16>;\n \n /// Vector of two `u64` values\n-pub type u64x2 = SimdU64<2>;\n+pub type u64x2 = Simd<u64, 2>;\n \n /// Vector of four `u64` values\n-pub type u64x4 = SimdU64<4>;\n+pub type u64x4 = Simd<u64, 4>;\n \n /// Vector of eight `u64` values\n-pub type u64x8 = SimdU64<8>;\n+pub type u64x8 = Simd<u64, 8>;\n \n /// Vector of four `u8` values\n-pub type u8x4 = SimdU8<4>;\n+pub type u8x4 = Simd<u8, 4>;\n \n /// Vector of eight `u8` values\n-pub type u8x8 = SimdU8<8>;\n+pub type u8x8 = Simd<u8, 8>;\n \n /// Vector of 16 `u8` values\n-pub type u8x16 = SimdU8<16>;\n+pub type u8x16 = Simd<u8, 16>;\n \n /// Vector of 32 `u8` values\n-pub type u8x32 = SimdU8<32>;\n+pub type u8x32 = Simd<u8, 32>;\n \n /// Vector of 64 `u8` values\n-pub type u8x64 = SimdU8<64>;\n+pub type u8x64 = Simd<u8, 64>;"}, {"sha": "11d617a6c2c56a639a066025de2c0488ec1fa7c9", "filename": "crates/core_simd/tests/round.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/40142ac034088c0ca149d4ca511bc854c70ff238/crates%2Fcore_simd%2Ftests%2Fround.rs", "raw_url": "https://github.com/rust-lang/rust/raw/40142ac034088c0ca149d4ca511bc854c70ff238/crates%2Fcore_simd%2Ftests%2Fround.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fcore_simd%2Ftests%2Fround.rs?ref=40142ac034088c0ca149d4ca511bc854c70ff238", "patch": "@@ -1,9 +1,9 @@\n #![feature(portable_simd)]\n \n macro_rules! float_rounding_test {\n-    { $vector:ident, $scalar:tt, $int_scalar:tt } => {\n+    { $scalar:tt, $int_scalar:tt } => {\n         mod $scalar {\n-            type Vector<const LANES: usize> = core_simd::$vector<LANES>;\n+            type Vector<const LANES: usize> = core_simd::Simd<$scalar, LANES>;\n             type Scalar = $scalar;\n             type IntScalar = $int_scalar;\n \n@@ -88,5 +88,5 @@ macro_rules! float_rounding_test {\n     }\n }\n \n-float_rounding_test! { SimdF32, f32, i32 }\n-float_rounding_test! { SimdF64, f64, i64 }\n+float_rounding_test! { f32, i32 }\n+float_rounding_test! { f64, i64 }"}]}