{"sha": "51463c3b17749801e80513d297351ede0f683418", "node_id": "MDY6Q29tbWl0NzI0NzEyOjUxNDYzYzNiMTc3NDk4MDFlODA1MTNkMjk3MzUxZWRlMGY2ODM0MTg=", "commit": {"author": {"name": "Nick Hamann", "email": "nick@wabbo.org", "date": "2015-05-04T04:47:10Z"}, "committer": {"name": "Nick Hamann", "email": "nick@wabbo.org", "date": "2015-05-04T04:47:10Z"}, "message": "Improve std::vec module documentation.\n\nThis changes the std::vec module docs to use full sentences. It also adds an example\nfor indexing vectors.", "tree": {"sha": "b0091b16f6c8e4b669872971e5e981cb7192253c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b0091b16f6c8e4b669872971e5e981cb7192253c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/51463c3b17749801e80513d297351ede0f683418", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/51463c3b17749801e80513d297351ede0f683418", "html_url": "https://github.com/rust-lang/rust/commit/51463c3b17749801e80513d297351ede0f683418", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/51463c3b17749801e80513d297351ede0f683418/comments", "author": null, "committer": null, "parents": [{"sha": "45b9a34a7b0ad3ccf85cd8f5a92cfe2e01861e69", "url": "https://api.github.com/repos/rust-lang/rust/commits/45b9a34a7b0ad3ccf85cd8f5a92cfe2e01861e69", "html_url": "https://github.com/rust-lang/rust/commit/45b9a34a7b0ad3ccf85cd8f5a92cfe2e01861e69"}], "stats": {"total": 16, "additions": 12, "deletions": 4}, "files": [{"sha": "ecb07582932cd4fafc695aca22f1927ad47446b8", "filename": "src/libcollections/vec.rs", "status": "modified", "additions": 12, "deletions": 4, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/51463c3b17749801e80513d297351ede0f683418/src%2Flibcollections%2Fvec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/51463c3b17749801e80513d297351ede0f683418/src%2Flibcollections%2Fvec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcollections%2Fvec.rs?ref=51463c3b17749801e80513d297351ede0f683418", "patch": "@@ -15,35 +15,43 @@\n //!\n //! # Examples\n //!\n-//! Explicitly creating a `Vec<T>` with `new()`:\n+//! You can explicitly create a `Vec<T>` with `new()`:\n //!\n //! ```\n //! let xs: Vec<i32> = Vec::new();\n //! ```\n //!\n-//! Using the `vec!` macro:\n+//! ...or by using the `vec!` macro:\n //!\n //! ```\n //! let ys: Vec<i32> = vec![];\n //!\n //! let zs = vec![1i32, 2, 3, 4, 5];\n //! ```\n //!\n-//! Push:\n+//! You can `push` values onto the end of a vector (which will grow the vector as needed):\n //!\n //! ```\n //! let mut xs = vec![1i32, 2];\n //!\n //! xs.push(3);\n //! ```\n //!\n-//! And pop:\n+//! Popping values works in much the same way:\n //!\n //! ```\n //! let mut xs = vec![1i32, 2];\n //!\n //! let two = xs.pop();\n //! ```\n+//!\n+//! Vectors also support indexing (through the `Index` and `IndexMut` traits):\n+//!\n+//! ```\n+//! let mut xs = vec![1i32, 2, 3];\n+//! let three = xs[2];\n+//! xs[1] = xs[1] + 5;\n+//! ```\n \n #![stable(feature = \"rust1\", since = \"1.0.0\")]\n "}]}