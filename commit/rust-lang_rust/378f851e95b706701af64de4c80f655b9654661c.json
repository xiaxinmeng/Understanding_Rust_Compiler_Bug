{"sha": "378f851e95b706701af64de4c80f655b9654661c", "node_id": "C_kwDOAAsO6NoAKDM3OGY4NTFlOTViNzA2NzAxYWY2NGRlNGM4MGY2NTViOTY1NDY2MWM", "commit": {"author": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2022-08-26T12:08:47Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-08-26T12:08:47Z"}, "message": "Rollup merge of #100956 - GuillaumeGomez:reduce-rightside-dom-size, r=notriddle\n\nReduce right-side DOM size\n\nThis is another follow-up of https://github.com/rust-lang/rust/pull/100429 but not in code blocks this time.\n\nSo the idea is: if there is only one element in the `.rightside` element, there is no need to wrap it, we can just create one node.\n\nOn each page, I run this JS: `document.getElementsByTagName('*').length`. Important to note: the bigger the number of elements inside the page, the greater the gain. It also doesn't work very nicely on std docs because there are a lot of version annotations. So with this PR, It allows to get the following results:\n\n| file name | before this PR | with this PR | diff |\n|-|-|-|-|\n| std/default/trait.Default.html | 2189 | 1331 | 39.2% |\n| std/vec/struct.Vec.html | 14073 | 13842 | 1.7% |\n| std/fmt/trait.Debug.html | 5313 | 4907 | 7.7% |\n| std/ops/trait.Index.html | 642 | 630 | 1.9% |\n| gtk4/WidgetExt | 3269 | 3061 | 6.4% |\n\nYou can test it [here](https://rustdoc.crud.net/imperio/reduce-rightsize-dom-size/gtk4/prelude/trait.WidgetExt.html).\n\nr? `@notriddle`", "tree": {"sha": "32fdee552c9337421e0078e80e6251661dd90be2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/32fdee552c9337421e0078e80e6251661dd90be2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/378f851e95b706701af64de4c80f655b9654661c", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJjCLfPCRBK7hj4Ov3rIwAAmlsIAISd6vWF7oKwF+CZyngDf6SE\n16ml5GQGL29x64EdIk6tnoHG8rFBrZM+0UbtaZi+0/p0zNp1Yqa/pMRHLiWoBceB\nLn28TJ4UUBsnllYBq19Bc7r9EEF2oCG5tOb7/Y94eL62sfgIdDysElvTtx+bjpxS\nN+l9BADb+ArQMMCPPbtnVLA7dpA2d1wASVCHLU9rHeHyi+zh2a20L9xqiNCYCOdA\n2O1m3hMHPo9d/d4CErmH4JnvOsicpyeM2wsceS3F9jzEQnL7REOTAwnjlOb8cGKo\n6NmYiGaBoGD40odQPFrZhtVenJjRYHbdmmM/AUg9KFO3Vi2KprQmxZVhu18Z55A=\n=kbG2\n-----END PGP SIGNATURE-----\n", "payload": "tree 32fdee552c9337421e0078e80e6251661dd90be2\nparent 7881e0576b5462ebb1f3468f049fc810857e8c69\nparent 38eb33b305bb7ac5203704b6e09fab7b9829a4c0\nauthor Guillaume Gomez <guillaume1.gomez@gmail.com> 1661515727 +0200\ncommitter GitHub <noreply@github.com> 1661515727 +0200\n\nRollup merge of #100956 - GuillaumeGomez:reduce-rightside-dom-size, r=notriddle\n\nReduce right-side DOM size\n\nThis is another follow-up of https://github.com/rust-lang/rust/pull/100429 but not in code blocks this time.\n\nSo the idea is: if there is only one element in the `.rightside` element, there is no need to wrap it, we can just create one node.\n\nOn each page, I run this JS: `document.getElementsByTagName('*').length`. Important to note: the bigger the number of elements inside the page, the greater the gain. It also doesn't work very nicely on std docs because there are a lot of version annotations. So with this PR, It allows to get the following results:\n\n| file name | before this PR | with this PR | diff |\n|-|-|-|-|\n| std/default/trait.Default.html | 2189 | 1331 | 39.2% |\n| std/vec/struct.Vec.html | 14073 | 13842 | 1.7% |\n| std/fmt/trait.Debug.html | 5313 | 4907 | 7.7% |\n| std/ops/trait.Index.html | 642 | 630 | 1.9% |\n| gtk4/WidgetExt | 3269 | 3061 | 6.4% |\n\nYou can test it [here](https://rustdoc.crud.net/imperio/reduce-rightsize-dom-size/gtk4/prelude/trait.WidgetExt.html).\n\nr? `@notriddle`\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/378f851e95b706701af64de4c80f655b9654661c", "html_url": "https://github.com/rust-lang/rust/commit/378f851e95b706701af64de4c80f655b9654661c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/378f851e95b706701af64de4c80f655b9654661c/comments", "author": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7881e0576b5462ebb1f3468f049fc810857e8c69", "url": "https://api.github.com/repos/rust-lang/rust/commits/7881e0576b5462ebb1f3468f049fc810857e8c69", "html_url": "https://github.com/rust-lang/rust/commit/7881e0576b5462ebb1f3468f049fc810857e8c69"}, {"sha": "38eb33b305bb7ac5203704b6e09fab7b9829a4c0", "url": "https://api.github.com/repos/rust-lang/rust/commits/38eb33b305bb7ac5203704b6e09fab7b9829a4c0", "html_url": "https://github.com/rust-lang/rust/commit/38eb33b305bb7ac5203704b6e09fab7b9829a4c0"}], "stats": {"total": 246, "additions": 186, "deletions": 60}, "files": [{"sha": "b1d2872019ef6f3b7d137e5abf3d4ca4d92bbe10", "filename": "src/librustdoc/html/render/mod.rs", "status": "modified", "additions": 34, "deletions": 15, "changes": 49, "blob_url": "https://github.com/rust-lang/rust/blob/378f851e95b706701af64de4c80f655b9654661c/src%2Flibrustdoc%2Fhtml%2Frender%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/378f851e95b706701af64de4c80f655b9654661c/src%2Flibrustdoc%2Fhtml%2Frender%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender%2Fmod.rs?ref=378f851e95b706701af64de4c80f655b9654661c", "patch": "@@ -191,12 +191,6 @@ impl StylePath {\n     }\n }\n \n-fn write_srclink(cx: &Context<'_>, item: &clean::Item, buf: &mut Buffer) {\n-    if let Some(l) = cx.src_href(item) {\n-        write!(buf, \"<a class=\\\"srclink\\\" href=\\\"{}\\\">source</a>\", l)\n-    }\n-}\n-\n #[derive(Debug, Eq, PartialEq, Hash)]\n struct ItemEntry {\n     url: String,\n@@ -840,12 +834,13 @@ fn assoc_method(\n /// Note that it is possible for an unstable function to be const-stable. In that case, the span\n /// will include the const-stable version, but no stable version will be emitted, as a natural\n /// consequence of the above rules.\n-fn render_stability_since_raw(\n+fn render_stability_since_raw_with_extra(\n     w: &mut Buffer,\n     ver: Option<Symbol>,\n     const_stability: Option<ConstStability>,\n     containing_ver: Option<Symbol>,\n     containing_const_ver: Option<Symbol>,\n+    extra_class: &str,\n ) -> bool {\n     let stable_version = ver.filter(|inner| !inner.is_empty() && Some(*inner) != containing_ver);\n \n@@ -893,12 +888,30 @@ fn render_stability_since_raw(\n     }\n \n     if !stability.is_empty() {\n-        write!(w, r#\"<span class=\"since\" title=\"{}\">{}</span>\"#, title, stability);\n+        write!(w, r#\"<span class=\"since{extra_class}\" title=\"{title}\">{stability}</span>\"#);\n     }\n \n     !stability.is_empty()\n }\n \n+#[inline]\n+fn render_stability_since_raw(\n+    w: &mut Buffer,\n+    ver: Option<Symbol>,\n+    const_stability: Option<ConstStability>,\n+    containing_ver: Option<Symbol>,\n+    containing_const_ver: Option<Symbol>,\n+) -> bool {\n+    render_stability_since_raw_with_extra(\n+        w,\n+        ver,\n+        const_stability,\n+        containing_ver,\n+        containing_const_ver,\n+        \"\",\n+    )\n+}\n+\n fn render_assoc_item(\n     w: &mut Buffer,\n     item: &clean::Item,\n@@ -1681,23 +1694,29 @@ fn render_rightside(\n         RenderMode::Normal => (item.const_stability(tcx), containing_item.const_stable_since(tcx)),\n         RenderMode::ForDeref { .. } => (None, None),\n     };\n+    let src_href = cx.src_href(item);\n+    let has_src_ref = src_href.is_some();\n \n     let mut rightside = Buffer::new();\n-    let has_stability = render_stability_since_raw(\n+    let has_stability = render_stability_since_raw_with_extra(\n         &mut rightside,\n         item.stable_since(tcx),\n         const_stability,\n         containing_item.stable_since(tcx),\n         const_stable_since,\n+        if has_src_ref { \"\" } else { \" rightside\" },\n     );\n-    let mut srclink = Buffer::empty_from(w);\n-    write_srclink(cx, item, &mut srclink);\n-    if has_stability && !srclink.is_empty() {\n-        rightside.write_str(\" \u00b7 \");\n+    if let Some(l) = src_href {\n+        if has_stability {\n+            write!(rightside, \" \u00b7 <a class=\\\"srclink\\\" href=\\\"{}\\\">source</a>\", l)\n+        } else {\n+            write!(rightside, \"<a class=\\\"srclink rightside\\\" href=\\\"{}\\\">source</a>\", l)\n+        }\n     }\n-    rightside.push_buffer(srclink);\n-    if !rightside.is_empty() {\n+    if has_stability && has_src_ref {\n         write!(w, \"<span class=\\\"rightside\\\">{}</span>\", rightside.into_inner());\n+    } else {\n+        w.push_buffer(rightside);\n     }\n }\n "}, {"sha": "a5668b318dcdc8f18a60e560e6754af8db65b54a", "filename": "src/librustdoc/html/render/print_item.rs", "status": "modified", "additions": 9, "deletions": 25, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/378f851e95b706701af64de4c80f655b9654661c/src%2Flibrustdoc%2Fhtml%2Frender%2Fprint_item.rs", "raw_url": "https://github.com/rust-lang/rust/raw/378f851e95b706701af64de4c80f655b9654661c/src%2Flibrustdoc%2Fhtml%2Frender%2Fprint_item.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender%2Fprint_item.rs?ref=378f851e95b706701af64de4c80f655b9654661c", "patch": "@@ -18,7 +18,7 @@ use std::rc::Rc;\n use super::{\n     collect_paths_for_type, document, ensure_trailing_slash, item_ty_to_section,\n     notable_traits_decl, render_assoc_item, render_assoc_items, render_attributes_in_code,\n-    render_attributes_in_pre, render_impl, render_stability_since_raw, write_srclink,\n+    render_attributes_in_pre, render_impl, render_rightside, render_stability_since_raw,\n     AssocItemLink, Context, ImplRenderingParameters,\n };\n use crate::clean;\n@@ -709,14 +709,7 @@ fn item_trait(w: &mut Buffer, cx: &mut Context<'_>, it: &clean::Item, t: &clean:\n             write!(w, \"<details class=\\\"rustdoc-toggle\\\" open><summary>\");\n         }\n         write!(w, \"<div id=\\\"{}\\\" class=\\\"method has-srclink\\\">\", id);\n-        write!(w, \"<div class=\\\"rightside\\\">\");\n-\n-        let has_stability = render_stability_since(w, m, t, cx.tcx());\n-        if has_stability {\n-            w.write_str(\" \u00b7 \");\n-        }\n-        write_srclink(cx, m, w);\n-        write!(w, \"</div>\");\n+        render_rightside(w, cx, m, t, RenderMode::Normal);\n         write!(w, \"<h4 class=\\\"code-header\\\">\");\n         render_assoc_item(\n             w,\n@@ -1260,7 +1253,13 @@ fn item_enum(w: &mut Buffer, cx: &mut Context<'_>, it: &clean::Item, e: &clean::\n                 w.write_str(\")\");\n             }\n             w.write_str(\"</code>\");\n-            render_stability_since(w, variant, it, cx.tcx());\n+            render_stability_since_raw(\n+                w,\n+                variant.stable_since(cx.tcx()),\n+                variant.const_stability(cx.tcx()),\n+                it.stable_since(cx.tcx()),\n+                it.const_stable_since(cx.tcx()),\n+            );\n             w.write_str(\"</h3>\");\n \n             use crate::clean::Variant;\n@@ -1591,21 +1590,6 @@ where\n     w.write_str(\"</code></pre>\");\n }\n \n-fn render_stability_since(\n-    w: &mut Buffer,\n-    item: &clean::Item,\n-    containing_item: &clean::Item,\n-    tcx: TyCtxt<'_>,\n-) -> bool {\n-    render_stability_since_raw(\n-        w,\n-        item.stable_since(tcx),\n-        item.const_stability(tcx),\n-        containing_item.stable_since(tcx),\n-        containing_item.const_stable_since(tcx),\n-    )\n-}\n-\n fn compare_impl<'a, 'b>(lhs: &'a &&Impl, rhs: &'b &&Impl, cx: &Context<'_>) -> Ordering {\n     let lhss = format!(\"{}\", lhs.inner_impl().print(false, cx));\n     let rhss = format!(\"{}\", rhs.inner_impl().print(false, cx));"}, {"sha": "8591f22d6de608987b54f1f21a035402da8d8649", "filename": "src/librustdoc/html/static/css/themes/ayu.css", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/378f851e95b706701af64de4c80f655b9654661c/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fcss%2Fthemes%2Fayu.css", "raw_url": "https://github.com/rust-lang/rust/raw/378f851e95b706701af64de4c80f655b9654661c/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fcss%2Fthemes%2Fayu.css", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fcss%2Fthemes%2Fayu.css?ref=378f851e95b706701af64de4c80f655b9654661c", "patch": "@@ -199,7 +199,7 @@ details.rustdoc-toggle > summary::before {\n \tbackground: none;\n }\n \n-.rightside,\n+.rightside:not(a),\n .out-of-band {\n \tcolor: grey;\n }"}, {"sha": "d5cd47c3e19d5f00c5c4245c7bd1195e4ea937a3", "filename": "src/librustdoc/html/static/css/themes/dark.css", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/378f851e95b706701af64de4c80f655b9654661c/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fcss%2Fthemes%2Fdark.css", "raw_url": "https://github.com/rust-lang/rust/raw/378f851e95b706701af64de4c80f655b9654661c/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fcss%2Fthemes%2Fdark.css", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fcss%2Fthemes%2Fdark.css?ref=378f851e95b706701af64de4c80f655b9654661c", "patch": "@@ -165,7 +165,7 @@ details.rustdoc-toggle > summary::before {\n \tbackground: none;\n }\n \n-.rightside,\n+.rightside:not(a),\n .out-of-band {\n \tcolor: grey;\n }"}, {"sha": "cff70268144f35852468925b80424e7c1fdcc47d", "filename": "src/librustdoc/html/static/css/themes/light.css", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/378f851e95b706701af64de4c80f655b9654661c/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fcss%2Fthemes%2Flight.css", "raw_url": "https://github.com/rust-lang/rust/raw/378f851e95b706701af64de4c80f655b9654661c/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fcss%2Fthemes%2Flight.css", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fcss%2Fthemes%2Flight.css?ref=378f851e95b706701af64de4c80f655b9654661c", "patch": "@@ -148,7 +148,7 @@ details.rustdoc-toggle > summary::before {\n .stab { background: #FFF5D6; border-color: #FFC600; }\n .stab.portability > code { background: none; }\n \n-.rightside,\n+.rightside:not(a),\n .out-of-band {\n \tcolor: grey;\n }"}, {"sha": "3ad62c721b4b83768cb40efbc6fbdddb037855d3", "filename": "src/test/rustdoc-gui/anchors.goml", "status": "modified", "additions": 124, "deletions": 4, "changes": 128, "blob_url": "https://github.com/rust-lang/rust/blob/378f851e95b706701af64de4c80f655b9654661c/src%2Ftest%2Frustdoc-gui%2Fanchors.goml", "raw_url": "https://github.com/rust-lang/rust/raw/378f851e95b706701af64de4c80f655b9654661c/src%2Ftest%2Frustdoc-gui%2Fanchors.goml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-gui%2Fanchors.goml?ref=378f851e95b706701af64de4c80f655b9654661c", "patch": "@@ -1,6 +1,5 @@\n // This test is to ensure that the anchors (`\u00a7`) have the expected color and position.\n-goto: file://|DOC_PATH|/test_docs/struct.HeavilyDocumentedStruct.html\n-show-text: true\n+goto: file://|DOC_PATH|/staged_api/struct.Foo.html\n \n // This is needed to ensure that the text color is computed.\n show-text: true\n@@ -13,10 +12,31 @@ reload:\n assert-css: (\"#toggle-all-docs\", {\"color\": \"rgb(0, 0, 0)\"})\n assert-css: (\".fqn .in-band a:nth-of-type(1)\", {\"color\": \"rgb(0, 0, 0)\"})\n assert-css: (\".fqn .in-band a:nth-of-type(2)\", {\"color\": \"rgb(173, 55, 138)\"})\n-assert-css: (\".srclink\", {\"color\": \"rgb(56, 115, 173)\"})\n+assert-css: (\n+    \".rightside .srclink\",\n+    {\"color\": \"rgb(56, 115, 173)\", \"text-decoration\": \"none solid rgb(56, 115, 173)\"},\n+    ALL,\n+)\n+compare-elements-css: (\".rightside .srclink\", \".rightside.srclink\", [\"color\", \"text-decoration\"])\n+compare-elements-css: (\".main-heading .srclink\", \".rightside.srclink\", [\"color\", \"text-decoration\"])\n \n move-cursor-to: \".main-heading .srclink\"\n-assert-css: (\".srclink\", {\"text-decoration\": \"underline solid rgb(56, 115, 173)\"})\n+assert-css: (\n+    \".main-heading .srclink\",\n+    {\"color\": \"rgb(56, 115, 173)\", \"text-decoration\": \"underline solid rgb(56, 115, 173)\"},\n+)\n+move-cursor-to: \".impl-items .rightside .srclink\"\n+assert-css: (\n+    \".impl-items .rightside .srclink\",\n+    {\"color\": \"rgb(56, 115, 173)\", \"text-decoration\": \"none solid rgb(56, 115, 173)\"},\n+)\n+move-cursor-to: \".impl-items .rightside.srclink\"\n+assert-css: (\n+    \".impl-items .rightside.srclink\",\n+    {\"color\": \"rgb(56, 115, 173)\", \"text-decoration\": \"none solid rgb(56, 115, 173)\"},\n+)\n+\n+goto: file://|DOC_PATH|/test_docs/struct.HeavilyDocumentedStruct.html\n \n assert-css: (\"#top-doc-prose-title\", {\"color\": \"rgb(0, 0, 0)\"})\n \n@@ -32,3 +52,103 @@ move-cursor-to: \"#impl-HeavilyDocumentedStruct\"\n assert-css: (\"#impl-HeavilyDocumentedStruct a.anchor\", {\"color\": \"rgb(0, 0, 0)\"})\n \n assert-css: (\"#title-for-struct-impl-item-doc\", {\"margin-left\": \"0px\"})\n+\n+//\n+// We do the same checks with the dark theme now.\n+//\n+local-storage: {\"rustdoc-theme\": \"dark\", \"rustdoc-use-system-theme\": \"false\"}\n+goto: file://|DOC_PATH|/staged_api/struct.Foo.html\n+\n+assert-css: (\"#toggle-all-docs\", {\"color\": \"rgb(221, 221, 221)\"})\n+assert-css: (\".fqn .in-band a:nth-of-type(1)\", {\"color\": \"rgb(221, 221, 221)\"})\n+assert-css: (\".fqn .in-band a:nth-of-type(2)\", {\"color\": \"rgb(45, 191, 184)\"})\n+assert-css: (\n+    \".rightside .srclink\",\n+    {\"color\": \"rgb(210, 153, 29)\", \"text-decoration\": \"none solid rgb(210, 153, 29)\"},\n+    ALL,\n+)\n+compare-elements-css: (\".rightside .srclink\", \".rightside.srclink\", [\"color\", \"text-decoration\"])\n+compare-elements-css: (\".main-heading .srclink\", \".rightside.srclink\", [\"color\", \"text-decoration\"])\n+\n+move-cursor-to: \".main-heading .srclink\"\n+assert-css: (\n+    \".main-heading .srclink\",\n+    {\"color\": \"rgb(210, 153, 29)\", \"text-decoration\": \"underline solid rgb(210, 153, 29)\"},\n+)\n+move-cursor-to: \".impl-items .rightside .srclink\"\n+assert-css: (\n+    \".impl-items .rightside .srclink\",\n+    {\"color\": \"rgb(210, 153, 29)\", \"text-decoration\": \"none solid rgb(210, 153, 29)\"},\n+)\n+move-cursor-to: \".impl-items .rightside.srclink\"\n+assert-css: (\n+    \".impl-items .rightside.srclink\",\n+    {\"color\": \"rgb(210, 153, 29)\", \"text-decoration\": \"none solid rgb(210, 153, 29)\"},\n+)\n+\n+goto: file://|DOC_PATH|/test_docs/struct.HeavilyDocumentedStruct.html\n+\n+assert-css: (\"#top-doc-prose-title\", {\"color\": \"rgb(221, 221, 221)\"})\n+\n+assert-css: (\".sidebar a\", {\"color\": \"rgb(253, 191, 53)\"})\n+assert-css: (\".in-band a\", {\"color\": \"rgb(221, 221, 221)\"})\n+\n+// We move the cursor over the \"Implementations\" title so the anchor is displayed.\n+move-cursor-to: \"h2#implementations\"\n+assert-css: (\"h2#implementations a.anchor\", {\"color\": \"rgb(221, 221, 221)\"})\n+\n+// Same thing with the impl block title.\n+move-cursor-to: \"#impl-HeavilyDocumentedStruct\"\n+assert-css: (\"#impl-HeavilyDocumentedStruct a.anchor\", {\"color\": \"rgb(221, 221, 221)\"})\n+\n+assert-css: (\"#title-for-struct-impl-item-doc\", {\"margin-left\": \"0px\"})\n+\n+//\n+// We do the same checks with the ayu theme now.\n+//\n+local-storage: {\"rustdoc-theme\": \"ayu\", \"rustdoc-use-system-theme\": \"false\"}\n+goto: file://|DOC_PATH|/staged_api/struct.Foo.html\n+\n+assert-css: (\"#toggle-all-docs\", {\"color\": \"rgb(197, 197, 197)\"})\n+assert-css: (\".fqn .in-band a:nth-of-type(1)\", {\"color\": \"rgb(255, 255, 255)\"})\n+assert-css: (\".fqn .in-band a:nth-of-type(2)\", {\"color\": \"rgb(255, 160, 165)\"})\n+assert-css: (\n+    \".rightside .srclink\",\n+    {\"color\": \"rgb(57, 175, 215)\", \"text-decoration\": \"none solid rgb(57, 175, 215)\"},\n+    ALL,\n+)\n+compare-elements-css: (\".rightside .srclink\", \".rightside.srclink\", [\"color\", \"text-decoration\"])\n+compare-elements-css: (\".main-heading .srclink\", \".rightside.srclink\", [\"color\", \"text-decoration\"])\n+\n+move-cursor-to: \".main-heading .srclink\"\n+assert-css: (\n+    \".main-heading .srclink\",\n+    {\"color\": \"rgb(57, 175, 215)\", \"text-decoration\": \"underline solid rgb(57, 175, 215)\"},\n+)\n+move-cursor-to: \".impl-items .rightside .srclink\"\n+assert-css: (\n+    \".impl-items .rightside .srclink\",\n+    {\"color\": \"rgb(57, 175, 215)\", \"text-decoration\": \"none solid rgb(57, 175, 215)\"},\n+)\n+move-cursor-to: \".impl-items .rightside.srclink\"\n+assert-css: (\n+    \".impl-items .rightside.srclink\",\n+    {\"color\": \"rgb(57, 175, 215)\", \"text-decoration\": \"none solid rgb(57, 175, 215)\"},\n+)\n+\n+goto: file://|DOC_PATH|/test_docs/struct.HeavilyDocumentedStruct.html\n+\n+assert-css: (\"#top-doc-prose-title\", {\"color\": \"rgb(255, 255, 255)\"})\n+\n+assert-css: (\".sidebar a\", {\"color\": \"rgb(83, 177, 219)\"})\n+assert-css: (\".in-band a\", {\"color\": \"rgb(255, 255, 255)\"})\n+\n+// We move the cursor over the \"Implementations\" title so the anchor is displayed.\n+move-cursor-to: \"h2#implementations\"\n+assert-css: (\"h2#implementations a.anchor\", {\"color\": \"rgb(197, 197, 197)\"})\n+\n+// Same thing with the impl block title.\n+move-cursor-to: \"#impl-HeavilyDocumentedStruct\"\n+assert-css: (\"#impl-HeavilyDocumentedStruct a.anchor\", {\"color\": \"rgb(197, 197, 197)\"})\n+\n+assert-css: (\"#title-for-struct-impl-item-doc\", {\"margin-left\": \"0px\"})"}, {"sha": "ed07e777b1880991054783102d85f78ae585c842", "filename": "src/test/rustdoc-gui/headings.goml", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/378f851e95b706701af64de4c80f655b9654661c/src%2Ftest%2Frustdoc-gui%2Fheadings.goml", "raw_url": "https://github.com/rust-lang/rust/raw/378f851e95b706701af64de4c80f655b9654661c/src%2Ftest%2Frustdoc-gui%2Fheadings.goml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-gui%2Fheadings.goml?ref=378f851e95b706701af64de4c80f655b9654661c", "patch": "@@ -247,12 +247,12 @@ assert-css: (\n \n local-storage: {\"rustdoc-theme\": \"light\"}\n goto: file://|DOC_PATH|/staged_api/struct.Foo.html\n-assert-css: (\".since\", {\"color\": \"rgb(128, 128, 128)\"})\n+assert-css: (\".since\", {\"color\": \"rgb(128, 128, 128)\"}, ALL)\n \n local-storage: {\"rustdoc-theme\": \"dark\"}\n reload:\n-assert-css: (\".since\", {\"color\": \"rgb(128, 128, 128)\"})\n+assert-css: (\".since\", {\"color\": \"rgb(128, 128, 128)\"}, ALL)\n \n local-storage: {\"rustdoc-theme\": \"ayu\"}\n reload:\n-assert-css: (\".since\", {\"color\": \"rgb(128, 128, 128)\"})\n+assert-css: (\".since\", {\"color\": \"rgb(128, 128, 128)\"}, ALL)"}, {"sha": "b231be6eee902f049ccc85f1d5379b8b84272c30", "filename": "src/test/rustdoc-gui/src/staged_api/Cargo.toml", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/378f851e95b706701af64de4c80f655b9654661c/src%2Ftest%2Frustdoc-gui%2Fsrc%2Fstaged_api%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/378f851e95b706701af64de4c80f655b9654661c/src%2Ftest%2Frustdoc-gui%2Fsrc%2Fstaged_api%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-gui%2Fsrc%2Fstaged_api%2FCargo.toml?ref=378f851e95b706701af64de4c80f655b9654661c", "patch": "@@ -7,5 +7,6 @@ edition = \"2021\"\n path = \"lib.rs\"\n \n [features]\n-default = [\"some_feature\"]\n+default = [\"some_feature\", \"some_other_feature\"]\n some_feature = []\n+some_other_feature = []"}, {"sha": "5934593a8999b94c6e711a41d8e14b2573dd17af", "filename": "src/test/rustdoc-gui/src/staged_api/lib.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/378f851e95b706701af64de4c80f655b9654661c/src%2Ftest%2Frustdoc-gui%2Fsrc%2Fstaged_api%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/378f851e95b706701af64de4c80f655b9654661c/src%2Ftest%2Frustdoc-gui%2Fsrc%2Fstaged_api%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-gui%2Fsrc%2Fstaged_api%2Flib.rs?ref=378f851e95b706701af64de4c80f655b9654661c", "patch": "@@ -7,4 +7,6 @@ pub struct Foo {}\n impl Foo {\n     #[stable(feature = \"some_feature\", since = \"1.3.5\")]\n     pub fn bar() {}\n+    #[stable(feature = \"some_other_feature\", since = \"1.3.6\")]\n+    pub fn yo() {}\n }"}, {"sha": "4da1ffead2a4c61a39971d02496f74c38827e07a", "filename": "src/test/rustdoc/anchors.no_const_anchor.html", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/378f851e95b706701af64de4c80f655b9654661c/src%2Ftest%2Frustdoc%2Fanchors.no_const_anchor.html", "raw_url": "https://github.com/rust-lang/rust/raw/378f851e95b706701af64de4c80f655b9654661c/src%2Ftest%2Frustdoc%2Fanchors.no_const_anchor.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fanchors.no_const_anchor.html?ref=378f851e95b706701af64de4c80f655b9654661c", "patch": "@@ -1 +1 @@\n-<div id=\"associatedconstant.YOLO\" class=\"method has-srclink\"><div class=\"rightside\"><a class=\"srclink\" href=\"../src/foo/anchors.rs.html#16\">source</a></div><h4 class=\"code-header\">const <a href=\"#associatedconstant.YOLO\" class=\"constant\">YOLO</a>: <a class=\"primitive\" href=\"{{channel}}/std/primitive.u32.html\">u32</a></h4></div>\n+<div id=\"associatedconstant.YOLO\" class=\"method has-srclink\"><a class=\"srclink rightside\" href=\"../src/foo/anchors.rs.html#16\">source</a><h4 class=\"code-header\">const <a href=\"#associatedconstant.YOLO\" class=\"constant\">YOLO</a>: <a class=\"primitive\" href=\"{{channel}}/std/primitive.u32.html\">u32</a></h4></div>\n\\ No newline at end of file"}, {"sha": "c002519760242a4ce4d216f3918c1735d8e725cd", "filename": "src/test/rustdoc/anchors.no_const_anchor2.html", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/378f851e95b706701af64de4c80f655b9654661c/src%2Ftest%2Frustdoc%2Fanchors.no_const_anchor2.html", "raw_url": "https://github.com/rust-lang/rust/raw/378f851e95b706701af64de4c80f655b9654661c/src%2Ftest%2Frustdoc%2Fanchors.no_const_anchor2.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fanchors.no_const_anchor2.html?ref=378f851e95b706701af64de4c80f655b9654661c", "patch": "@@ -1 +1 @@\n-<section id=\"associatedconstant.X\" class=\"associatedconstant has-srclink\"><span class=\"rightside\"><a class=\"srclink\" href=\"../src/foo/anchors.rs.html#42\">source</a></span><h4 class=\"code-header\">pub const <a href=\"#associatedconstant.X\" class=\"constant\">X</a>: <a class=\"primitive\" href=\"{{channel}}/std/primitive.i32.html\">i32</a> = 0i32</h4></section>\n+<section id=\"associatedconstant.X\" class=\"associatedconstant has-srclink\"><a class=\"srclink rightside\" href=\"../src/foo/anchors.rs.html#42\">source</a><h4 class=\"code-header\">pub const <a href=\"#associatedconstant.X\" class=\"constant\">X</a>: <a class=\"primitive\" href=\"{{channel}}/std/primitive.i32.html\">i32</a> = 0i32</h4></section>\n\\ No newline at end of file"}, {"sha": "521fdcb7877a707c061af17dbc5ac9b52c9253e6", "filename": "src/test/rustdoc/anchors.no_method_anchor.html", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/378f851e95b706701af64de4c80f655b9654661c/src%2Ftest%2Frustdoc%2Fanchors.no_method_anchor.html", "raw_url": "https://github.com/rust-lang/rust/raw/378f851e95b706701af64de4c80f655b9654661c/src%2Ftest%2Frustdoc%2Fanchors.no_method_anchor.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fanchors.no_method_anchor.html?ref=378f851e95b706701af64de4c80f655b9654661c", "patch": "@@ -1 +1 @@\n-<section id=\"method.new\" class=\"method has-srclink\"><span class=\"rightside\"><a class=\"srclink\" href=\"../src/foo/anchors.rs.html#48\">source</a></span><h4 class=\"code-header\">pub fn <a href=\"#method.new\" class=\"fnname\">new</a>() -&gt; Self</h4></section>\n\\ No newline at end of file\n+<section id=\"method.new\" class=\"method has-srclink\"><a class=\"srclink rightside\" href=\"../src/foo/anchors.rs.html#48\">source</a><h4 class=\"code-header\">pub fn <a href=\"#method.new\" class=\"fnname\">new</a>() -&gt; Self</h4></section>\n\\ No newline at end of file"}, {"sha": "6b78c7c811a068caeb9f993bac0282411fcabe97", "filename": "src/test/rustdoc/anchors.no_trait_method_anchor.html", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/378f851e95b706701af64de4c80f655b9654661c/src%2Ftest%2Frustdoc%2Fanchors.no_trait_method_anchor.html", "raw_url": "https://github.com/rust-lang/rust/raw/378f851e95b706701af64de4c80f655b9654661c/src%2Ftest%2Frustdoc%2Fanchors.no_trait_method_anchor.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fanchors.no_trait_method_anchor.html?ref=378f851e95b706701af64de4c80f655b9654661c", "patch": "@@ -1 +1 @@\n-<div id=\"method.bar\" class=\"method has-srclink\"><div class=\"rightside\"><a class=\"srclink\" href=\"../src/foo/anchors.rs.html#23\">source</a></div><h4 class=\"code-header\">fn <a href=\"#method.bar\" class=\"fnname\">bar</a>()</h4></div>\n\\ No newline at end of file\n+<div id=\"method.bar\" class=\"method has-srclink\"><a class=\"srclink rightside\" href=\"../src/foo/anchors.rs.html#23\">source</a><h4 class=\"code-header\">fn <a href=\"#method.bar\" class=\"fnname\">bar</a>()</h4></div>\n\\ No newline at end of file"}, {"sha": "c08f4427cf697309c56499ed992eeef9b0d2c193", "filename": "src/test/rustdoc/anchors.no_tymethod_anchor.html", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/378f851e95b706701af64de4c80f655b9654661c/src%2Ftest%2Frustdoc%2Fanchors.no_tymethod_anchor.html", "raw_url": "https://github.com/rust-lang/rust/raw/378f851e95b706701af64de4c80f655b9654661c/src%2Ftest%2Frustdoc%2Fanchors.no_tymethod_anchor.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fanchors.no_tymethod_anchor.html?ref=378f851e95b706701af64de4c80f655b9654661c", "patch": "@@ -1 +1 @@\n-<div id=\"tymethod.foo\" class=\"method has-srclink\"><div class=\"rightside\"><a class=\"srclink\" href=\"../src/foo/anchors.rs.html#20\">source</a></div><h4 class=\"code-header\">fn <a href=\"#tymethod.foo\" class=\"fnname\">foo</a>()</h4></div>\n\\ No newline at end of file\n+<div id=\"tymethod.foo\" class=\"method has-srclink\"><a class=\"srclink rightside\" href=\"../src/foo/anchors.rs.html#20\">source</a><h4 class=\"code-header\">fn <a href=\"#tymethod.foo\" class=\"fnname\">foo</a>()</h4></div>\n\\ No newline at end of file"}, {"sha": "ba8e65443ec8132241f4d098a5c728ad7ab7663f", "filename": "src/test/rustdoc/anchors.no_type_anchor.html", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/378f851e95b706701af64de4c80f655b9654661c/src%2Ftest%2Frustdoc%2Fanchors.no_type_anchor.html", "raw_url": "https://github.com/rust-lang/rust/raw/378f851e95b706701af64de4c80f655b9654661c/src%2Ftest%2Frustdoc%2Fanchors.no_type_anchor.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fanchors.no_type_anchor.html?ref=378f851e95b706701af64de4c80f655b9654661c", "patch": "@@ -1 +1 @@\n-<div id=\"associatedtype.T\" class=\"method has-srclink\"><div class=\"rightside\"><a class=\"srclink\" href=\"../src/foo/anchors.rs.html#13\">source</a></div><h4 class=\"code-header\">type <a href=\"#associatedtype.T\" class=\"associatedtype\">T</a></h4></div>\n\\ No newline at end of file\n+<div id=\"associatedtype.T\" class=\"method has-srclink\"><a class=\"srclink rightside\" href=\"../src/foo/anchors.rs.html#13\">source</a><h4 class=\"code-header\">type <a href=\"#associatedtype.T\" class=\"associatedtype\">T</a></h4></div>\n\\ No newline at end of file"}, {"sha": "c65387080f11b3f34611cca9a4c171135e6a9590", "filename": "src/test/rustdoc/ensure-src-link.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/378f851e95b706701af64de4c80f655b9654661c/src%2Ftest%2Frustdoc%2Fensure-src-link.rs", "raw_url": "https://github.com/rust-lang/rust/raw/378f851e95b706701af64de4c80f655b9654661c/src%2Ftest%2Frustdoc%2Fensure-src-link.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fensure-src-link.rs?ref=378f851e95b706701af64de4c80f655b9654661c", "patch": "@@ -2,5 +2,5 @@\n \n // This test ensures that the [src] link is present on traits items.\n \n-// @has foo/trait.Iterator.html '//*[@id=\"method.zip\"]//a[@class=\"srclink\"]' \"source\"\n+// @has foo/trait.Iterator.html '//*[@id=\"method.zip\"]//a[@class=\"srclink rightside\"]' \"source\"\n pub use std::iter::Iterator;"}, {"sha": "313a4b1189334c7f04bf4f2477907fb2d55aba89", "filename": "src/test/rustdoc/src-links-auto-impls.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/378f851e95b706701af64de4c80f655b9654661c/src%2Ftest%2Frustdoc%2Fsrc-links-auto-impls.rs", "raw_url": "https://github.com/rust-lang/rust/raw/378f851e95b706701af64de4c80f655b9654661c/src%2Ftest%2Frustdoc%2Fsrc-links-auto-impls.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fsrc-links-auto-impls.rs?ref=378f851e95b706701af64de4c80f655b9654661c", "patch": "@@ -6,7 +6,7 @@\n // @has - '//*[@id=\"impl-Sync-for-Unsized\"]/h3[@class=\"code-header in-band\"]' 'impl Sync for Unsized'\n // @!has - '//*[@id=\"impl-Sync-for-Unsized\"]//a[@class=\"srclink\"]' 'source'\n // @has - '//*[@id=\"impl-Any-for-Unsized\"]/h3[@class=\"code-header in-band\"]' 'impl<T> Any for T'\n-// @has - '//*[@id=\"impl-Any-for-Unsized\"]//a[@class=\"srclink\"]' 'source'\n+// @has - '//*[@id=\"impl-Any-for-Unsized\"]//a[@class=\"srclink rightside\"]' 'source'\n pub struct Unsized {\n     data: [u8],\n }"}, {"sha": "04ea46a7f3a01a3cfbf85dc7e9ba7a41794bce0c", "filename": "src/test/rustdoc/version-separator-without-source.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/378f851e95b706701af64de4c80f655b9654661c/src%2Ftest%2Frustdoc%2Fversion-separator-without-source.rs", "raw_url": "https://github.com/rust-lang/rust/raw/378f851e95b706701af64de4c80f655b9654661c/src%2Ftest%2Frustdoc%2Fversion-separator-without-source.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fversion-separator-without-source.rs?ref=378f851e95b706701af64de4c80f655b9654661c", "patch": "@@ -16,7 +16,7 @@ pub fn foo() {}\n pub struct Bar;\n \n impl Bar {\n-    // @has - '//*[@id=\"method.bar\"]/*[@class=\"rightside\"]' '2.0'\n+    // @has - '//*[@id=\"method.bar\"]/*[@class=\"since rightside\"]' '2.0'\n     // @!has - '//*[@id=\"method.bar\"]/*[@class=\"rightside\"]' '2.0 \u00b7'\n     #[stable(feature = \"foobar\", since = \"2.0\")]\n     pub fn bar() {}"}]}