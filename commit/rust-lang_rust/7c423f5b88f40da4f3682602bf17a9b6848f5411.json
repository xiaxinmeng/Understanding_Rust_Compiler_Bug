{"sha": "7c423f5b88f40da4f3682602bf17a9b6848f5411", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdjNDIzZjViODhmNDBkYTRmMzY4MjYwMmJmMTdhOWI2ODQ4ZjU0MTE=", "commit": {"author": {"name": "Florian Diebold", "email": "flodiebold@gmail.com", "date": "2021-05-15T19:30:40Z"}, "committer": {"name": "Florian Diebold", "email": "flodiebold@gmail.com", "date": "2021-05-21T15:48:34Z"}, "message": "Fix panic", "tree": {"sha": "423abd599da26c500be29abe18eb9d53eed1e431", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/423abd599da26c500be29abe18eb9d53eed1e431"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7c423f5b88f40da4f3682602bf17a9b6848f5411", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7c423f5b88f40da4f3682602bf17a9b6848f5411", "html_url": "https://github.com/rust-lang/rust/commit/7c423f5b88f40da4f3682602bf17a9b6848f5411", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7c423f5b88f40da4f3682602bf17a9b6848f5411/comments", "author": {"login": "flodiebold", "id": 906069, "node_id": "MDQ6VXNlcjkwNjA2OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/906069?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flodiebold", "html_url": "https://github.com/flodiebold", "followers_url": "https://api.github.com/users/flodiebold/followers", "following_url": "https://api.github.com/users/flodiebold/following{/other_user}", "gists_url": "https://api.github.com/users/flodiebold/gists{/gist_id}", "starred_url": "https://api.github.com/users/flodiebold/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flodiebold/subscriptions", "organizations_url": "https://api.github.com/users/flodiebold/orgs", "repos_url": "https://api.github.com/users/flodiebold/repos", "events_url": "https://api.github.com/users/flodiebold/events{/privacy}", "received_events_url": "https://api.github.com/users/flodiebold/received_events", "type": "User", "site_admin": false}, "committer": {"login": "flodiebold", "id": 906069, "node_id": "MDQ6VXNlcjkwNjA2OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/906069?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flodiebold", "html_url": "https://github.com/flodiebold", "followers_url": "https://api.github.com/users/flodiebold/followers", "following_url": "https://api.github.com/users/flodiebold/following{/other_user}", "gists_url": "https://api.github.com/users/flodiebold/gists{/gist_id}", "starred_url": "https://api.github.com/users/flodiebold/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flodiebold/subscriptions", "organizations_url": "https://api.github.com/users/flodiebold/orgs", "repos_url": "https://api.github.com/users/flodiebold/repos", "events_url": "https://api.github.com/users/flodiebold/events{/privacy}", "received_events_url": "https://api.github.com/users/flodiebold/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8397734cfe26793d3e9f9ec5f8392655a4b8e106", "url": "https://api.github.com/repos/rust-lang/rust/commits/8397734cfe26793d3e9f9ec5f8392655a4b8e106", "html_url": "https://github.com/rust-lang/rust/commit/8397734cfe26793d3e9f9ec5f8392655a4b8e106"}], "stats": {"total": 5, "additions": 4, "deletions": 1}, "files": [{"sha": "259feecf1d7e39e4271b1b5f818f28b2f6f9a555", "filename": "crates/hir_ty/src/infer/unify.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/7c423f5b88f40da4f3682602bf17a9b6848f5411/crates%2Fhir_ty%2Fsrc%2Finfer%2Funify.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7c423f5b88f40da4f3682602bf17a9b6848f5411/crates%2Fhir_ty%2Fsrc%2Finfer%2Funify.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_ty%2Fsrc%2Finfer%2Funify.rs?ref=7c423f5b88f40da4f3682602bf17a9b6848f5411", "patch": "@@ -149,7 +149,9 @@ impl TypeVariableTable {\n \n     fn fallback_value(&self, iv: InferenceVar, kind: TyVariableKind) -> Ty {\n         match kind {\n-            _ if self.inner[iv.index() as usize].diverging => TyKind::Never,\n+            _ if self.inner.get(iv.index() as usize).map_or(false, |data| data.diverging) => {\n+                TyKind::Never\n+            }\n             TyVariableKind::General => TyKind::Error,\n             TyVariableKind::Integer => TyKind::Scalar(Scalar::Int(IntTy::I32)),\n             TyVariableKind::Float => TyKind::Scalar(Scalar::Float(FloatTy::F64)),\n@@ -205,6 +207,7 @@ impl<'a> InferenceTable<'a> {\n     fn new_var(&mut self, kind: TyVariableKind, diverging: bool) -> Ty {\n         let var = self.var_unification_table.new_variable(UniverseIndex::ROOT);\n         // Chalk might have created some type variables for its own purposes that we don't know about...\n+        // TODO refactor this?\n         self.type_variable_table.inner.extend(\n             (0..1 + var.index() as usize - self.type_variable_table.inner.len())\n                 .map(|_| TypeVariableData { diverging: false }),"}]}