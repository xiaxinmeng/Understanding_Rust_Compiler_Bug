{"sha": "1efd220f2f844596dd22bfd73a8a0c596354be38", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFlZmQyMjBmMmY4NDQ1OTZkZDIyYmZkNzNhOGEwYzU5NjM1NGJlMzg=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2021-03-23T10:20:47Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-03-23T10:20:47Z"}, "message": "Merge #8162\n\n8162: Compute more mathematically well-rounded notion of transitive deps r=Veykril a=matklad\n\nBy including the crate itself, we make the resulting set closed with\r\nrespect to `transitve_reveres_dependencies` operation, as it becomes a\r\nproper transitive closure. This just feels more proper and mathy.\r\n\r\nAnd, indeed, this actually allows us to simplify call sites somewhat.\n\nCo-authored-by: Aleksey Kladov <aleksey.kladov@gmail.com>", "tree": {"sha": "eeba1d8e0e89d6d40ad4802f32dc72af0dfa3e15", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/eeba1d8e0e89d6d40ad4802f32dc72af0dfa3e15"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1efd220f2f844596dd22bfd73a8a0c596354be38", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJgWcD/CRBK7hj4Ov3rIwAAdHIIAET3ORb+f6rjaTBhCwsmmFk4\n2a1OMtTw4jSoip4SV6eXNTlnp8lLN8Kd5yxxhtrViBnVIzgSlcbUUjw65ReMpCk7\ngMA0iXPaPnfh8DnYUGeTPr8K0N9KQqm92rD3755BpgygeUPRPgQIclGr6OzkbAg+\nEha/FJhNByKNkJ+yuEKDKRnPWXOXGTwlsuBxs7les+7JzlA9MUzFLE1KVRYdKFUu\nxQuR1BSWOkdAkEWkgUbBYwZh0sgaImt2vfmFGq2YEtN1JBt+aE2GIgDQ1l87baOv\nkS8Ltza97XPopegD7pCjHlnrZs8FVuIpaJZyZERa9F92yH9To8ypIog6QsFzrc0=\n=AKQD\n-----END PGP SIGNATURE-----\n", "payload": "tree eeba1d8e0e89d6d40ad4802f32dc72af0dfa3e15\nparent bf3a8eb40a1c684ffc9cb40477558ec276253c3b\nparent fa9c6eb4560c3c72a726dba4210af2edbb3dd4bb\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1616494847 +0000\ncommitter GitHub <noreply@github.com> 1616494847 +0000\n\nMerge #8162\n\n8162: Compute more mathematically well-rounded notion of transitive deps r=Veykril a=matklad\n\nBy including the crate itself, we make the resulting set closed with\r\nrespect to `transitve_reveres_dependencies` operation, as it becomes a\r\nproper transitive closure. This just feels more proper and mathy.\r\n\r\nAnd, indeed, this actually allows us to simplify call sites somewhat.\n\nCo-authored-by: Aleksey Kladov <aleksey.kladov@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1efd220f2f844596dd22bfd73a8a0c596354be38", "html_url": "https://github.com/rust-lang/rust/commit/1efd220f2f844596dd22bfd73a8a0c596354be38", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1efd220f2f844596dd22bfd73a8a0c596354be38/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bf3a8eb40a1c684ffc9cb40477558ec276253c3b", "url": "https://api.github.com/repos/rust-lang/rust/commits/bf3a8eb40a1c684ffc9cb40477558ec276253c3b", "html_url": "https://github.com/rust-lang/rust/commit/bf3a8eb40a1c684ffc9cb40477558ec276253c3b"}, {"sha": "fa9c6eb4560c3c72a726dba4210af2edbb3dd4bb", "url": "https://api.github.com/repos/rust-lang/rust/commits/fa9c6eb4560c3c72a726dba4210af2edbb3dd4bb", "html_url": "https://github.com/rust-lang/rust/commit/fa9c6eb4560c3c72a726dba4210af2edbb3dd4bb"}], "stats": {"total": 27, "additions": 10, "deletions": 17}, "files": [{"sha": "07628935f0e86d23c80c2730b49501766721ba3d", "filename": "crates/base_db/src/input.rs", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/1efd220f2f844596dd22bfd73a8a0c596354be38/crates%2Fbase_db%2Fsrc%2Finput.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1efd220f2f844596dd22bfd73a8a0c596354be38/crates%2Fbase_db%2Fsrc%2Finput.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fbase_db%2Fsrc%2Finput.rs?ref=1efd220f2f844596dd22bfd73a8a0c596354be38", "patch": "@@ -257,7 +257,8 @@ impl CrateGraph {\n         self.arena.keys().copied()\n     }\n \n-    /// Returns an iterator over all transitive dependencies of the given crate.\n+    /// Returns an iterator over all transitive dependencies of the given crate,\n+    /// including the crate itself.\n     pub fn transitive_deps(&self, of: CrateId) -> impl Iterator<Item = CrateId> + '_ {\n         let mut worklist = vec![of];\n         let mut deps = FxHashSet::default();\n@@ -270,17 +271,16 @@ impl CrateGraph {\n             worklist.extend(self[krate].dependencies.iter().map(|dep| dep.crate_id));\n         }\n \n-        deps.remove(&of);\n         deps.into_iter()\n     }\n \n-    /// Returns an iterator over all transitive reverse dependencies of the given crate.\n-    pub fn transitive_reverse_dependencies(\n-        &self,\n-        of: CrateId,\n-    ) -> impl Iterator<Item = CrateId> + '_ {\n+    /// Returns all transitive reverse dependencies of the given crate,\n+    /// including the crate itself.\n+    pub fn transitive_rev_deps(&self, of: CrateId) -> impl Iterator<Item = CrateId> + '_ {\n         let mut worklist = vec![of];\n         let mut rev_deps = FxHashSet::default();\n+        rev_deps.insert(of);\n+\n         let mut inverted_graph = FxHashMap::<_, Vec<_>>::default();\n         self.arena.iter().for_each(|(&krate, data)| {\n             data.dependencies"}, {"sha": "68f4551c0cfc7536942cb8d2eab680ab08de7567", "filename": "crates/hir/src/lib.rs", "status": "modified", "additions": 2, "deletions": 7, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/1efd220f2f844596dd22bfd73a8a0c596354be38/crates%2Fhir%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1efd220f2f844596dd22bfd73a8a0c596354be38/crates%2Fhir%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir%2Fsrc%2Flib.rs?ref=1efd220f2f844596dd22bfd73a8a0c596354be38", "patch": "@@ -154,11 +154,7 @@ impl Crate {\n     }\n \n     pub fn transitive_reverse_dependencies(self, db: &dyn HirDatabase) -> Vec<Crate> {\n-        db.crate_graph()\n-            .transitive_reverse_dependencies(self.id)\n-            .into_iter()\n-            .map(|id| Crate { id })\n-            .collect()\n+        db.crate_graph().transitive_rev_deps(self.id).into_iter().map(|id| Crate { id }).collect()\n     }\n \n     pub fn root_module(self, db: &dyn HirDatabase) -> Module {\n@@ -1572,8 +1568,7 @@ impl Impl {\n     pub fn all_for_trait(db: &dyn HirDatabase, trait_: Trait) -> Vec<Impl> {\n         let krate = trait_.module(db).krate();\n         let mut all = Vec::new();\n-        for Crate { id } in krate.transitive_reverse_dependencies(db).into_iter().chain(Some(krate))\n-        {\n+        for Crate { id } in krate.transitive_reverse_dependencies(db).into_iter() {\n             let impls = db.trait_impls_in_crate(id);\n             all.extend(impls.for_trait(trait_.id).map(Self::from))\n         }"}, {"sha": "8e93de277e91c74f9e0daf5fe9f83da57440e0e0", "filename": "crates/ide_db/src/search.rs", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1efd220f2f844596dd22bfd73a8a0c596354be38/crates%2Fide_db%2Fsrc%2Fsearch.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1efd220f2f844596dd22bfd73a8a0c596354be38/crates%2Fide_db%2Fsrc%2Fsearch.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_db%2Fsrc%2Fsearch.rs?ref=1efd220f2f844596dd22bfd73a8a0c596354be38", "patch": "@@ -245,9 +245,7 @@ impl Definition {\n         }\n \n         if let Some(Visibility::Public) = vis {\n-            let source_root_id = db.file_source_root(file_id);\n-            let source_root = db.source_root(source_root_id);\n-            let mut res = source_root.iter().map(|id| (id, None)).collect::<FxHashMap<_, _>>();\n+            let mut res = FxHashMap::default();\n \n             let krate = module.krate();\n             for rev_dep in krate.transitive_reverse_dependencies(db) {"}]}