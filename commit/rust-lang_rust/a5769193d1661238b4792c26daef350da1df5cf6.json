{"sha": "a5769193d1661238b4792c26daef350da1df5cf6", "node_id": "C_kwDOAAsO6NoAKGE1NzY5MTkzZDE2NjEyMzhiNDc5MmMyNmRhZWYzNTBkYTFkZjVjZjY", "commit": {"author": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2023-02-11T21:01:11Z"}, "committer": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2023-02-18T21:35:02Z"}, "message": "Remove special case in rvalue codegen.", "tree": {"sha": "3307080d6c59a0c48e745738cd9e176bbcdac30d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3307080d6c59a0c48e745738cd9e176bbcdac30d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a5769193d1661238b4792c26daef350da1df5cf6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a5769193d1661238b4792c26daef350da1df5cf6", "html_url": "https://github.com/rust-lang/rust/commit/a5769193d1661238b4792c26daef350da1df5cf6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a5769193d1661238b4792c26daef350da1df5cf6/comments", "author": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e9c73ea502d789fc103e012c052e25cf55f653e3", "url": "https://api.github.com/repos/rust-lang/rust/commits/e9c73ea502d789fc103e012c052e25cf55f653e3", "html_url": "https://github.com/rust-lang/rust/commit/e9c73ea502d789fc103e012c052e25cf55f653e3"}], "stats": {"total": 12, "additions": 0, "deletions": 12}, "files": [{"sha": "41cd1c09a4e70e637aa1adea65c58e33699b23d1", "filename": "compiler/rustc_codegen_ssa/src/mir/rvalue.rs", "status": "modified", "additions": 0, "deletions": 12, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/a5769193d1661238b4792c26daef350da1df5cf6/compiler%2Frustc_codegen_ssa%2Fsrc%2Fmir%2Frvalue.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a5769193d1661238b4792c26daef350da1df5cf6/compiler%2Frustc_codegen_ssa%2Fsrc%2Fmir%2Frvalue.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_ssa%2Fsrc%2Fmir%2Frvalue.rs?ref=a5769193d1661238b4792c26daef350da1df5cf6", "patch": "@@ -652,18 +652,6 @@ impl<'a, 'tcx, Bx: BuilderMethods<'a, 'tcx>> FunctionCx<'a, 'tcx, Bx> {\n         rhs: Bx::Value,\n         input_ty: Ty<'tcx>,\n     ) -> OperandValue<Bx::Value> {\n-        // This case can currently arise only from functions marked\n-        // with #[rustc_inherit_overflow_checks] and inlined from\n-        // another crate (mostly core::num generic/#[inline] fns),\n-        // while the current crate doesn't use overflow checks.\n-        //\n-        // As an optimization, we emit an unchecked binop when overflow checks are disabled,\n-        // as the overflow flag would be ignored anyway.\n-        if !bx.cx().check_overflow() {\n-            let val = self.codegen_scalar_binop(bx, op, lhs, rhs, input_ty);\n-            return OperandValue::Pair(val, bx.cx().const_bool(false));\n-        }\n-\n         let (val, of) = match op {\n             // These are checked using intrinsics\n             mir::BinOp::Add | mir::BinOp::Sub | mir::BinOp::Mul => {"}]}