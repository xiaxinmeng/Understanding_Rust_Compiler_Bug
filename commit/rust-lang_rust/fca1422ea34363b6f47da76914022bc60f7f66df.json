{"sha": "fca1422ea34363b6f47da76914022bc60f7f66df", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZjYTE0MjJlYTM0MzYzYjZmNDdkYTc2OTE0MDIyYmM2MGY3ZjY2ZGY=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-01-01T19:12:05Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-01-01T19:15:35Z"}, "message": "add tests for macro generated items", "tree": {"sha": "e46abefded22f84565a84985a6fc054cd05faf14", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e46abefded22f84565a84985a6fc054cd05faf14"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fca1422ea34363b6f47da76914022bc60f7f66df", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fca1422ea34363b6f47da76914022bc60f7f66df", "html_url": "https://github.com/rust-lang/rust/commit/fca1422ea34363b6f47da76914022bc60f7f66df", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fca1422ea34363b6f47da76914022bc60f7f66df/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "756e8781584fb28af208218615bafbbd9164dfbc", "url": "https://api.github.com/repos/rust-lang/rust/commits/756e8781584fb28af208218615bafbbd9164dfbc", "html_url": "https://github.com/rust-lang/rust/commit/756e8781584fb28af208218615bafbbd9164dfbc"}], "stats": {"total": 84, "additions": 83, "deletions": 1}, "files": [{"sha": "a6a0bea3160e4189e9815aa56179c0f1903801f3", "filename": "crates/ra_hir/src/module/nameres/tests.rs", "status": "modified", "additions": 83, "deletions": 1, "changes": 84, "blob_url": "https://github.com/rust-lang/rust/blob/fca1422ea34363b6f47da76914022bc60f7f66df/crates%2Fra_hir%2Fsrc%2Fmodule%2Fnameres%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fca1422ea34363b6f47da76914022bc60f7f66df/crates%2Fra_hir%2Fsrc%2Fmodule%2Fnameres%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fmodule%2Fnameres%2Ftests.rs?ref=fca1422ea34363b6f47da76914022bc60f7f66df", "patch": "@@ -77,6 +77,35 @@ fn item_map_smoke_test() {\n     );\n }\n \n+#[test]\n+fn item_map_contains_items_from_expansions() {\n+    let (item_map, module_id) = item_map(\n+        \"\n+        //- /lib.rs\n+        mod foo;\n+\n+        use crate::foo::bar::Baz;\n+        <|>\n+\n+        //- /foo/mod.rs\n+        pub mod bar;\n+\n+        //- /foo/bar.rs\n+        salsa::query_group! {\n+            trait Baz {}\n+        }\n+    \",\n+    );\n+    check_module_item_map(\n+        &item_map,\n+        module_id,\n+        \"\n+            Baz: t\n+            foo: t\n+        \",\n+    );\n+}\n+\n #[test]\n fn item_map_using_self() {\n     let (item_map, module_id) = item_map(\n@@ -141,6 +170,59 @@ fn item_map_across_crates() {\n \n #[test]\n fn typing_inside_a_function_should_not_invalidate_item_map() {\n+    let (mut db, pos) = MockDatabase::with_position(\n+        \"\n+        //- /lib.rs\n+        mod foo;\n+\n+        use crate::foo::bar::Baz;\n+\n+        //- /foo/mod.rs\n+        pub mod bar;\n+\n+        //- /foo/bar.rs\n+        <|>\n+        salsa::query_group! {\n+            trait Baz {\n+                fn foo() -> i32 { 1 + 1 }\n+            }\n+        }\n+        \",\n+    );\n+    let source_root = db.file_source_root(pos.file_id);\n+    {\n+        let events = db.log_executed(|| {\n+            db.item_map(source_root).unwrap();\n+        });\n+        assert!(format!(\"{:?}\", events).contains(\"item_map\"))\n+    }\n+\n+    let new_text = \"\n+        salsa::query_group! {\n+            trait Baz {\n+                fn foo() -> i32 { 92 }\n+            }\n+        }\n+    \"\n+    .to_string();\n+\n+    db.query_mut(ra_db::FileTextQuery)\n+        .set(pos.file_id, Arc::new(new_text));\n+\n+    {\n+        let events = db.log_executed(|| {\n+            db.item_map(source_root).unwrap();\n+        });\n+        assert!(\n+            !format!(\"{:?}\", events).contains(\"item_map\"),\n+            \"{:#?}\",\n+            events\n+        )\n+    }\n+}\n+\n+#[test]\n+fn typing_inside_a_function_inside_a_macro_should_not_invalidate_item_map() {\n     let (mut db, pos) = MockDatabase::with_position(\n         \"\n         //- /lib.rs\n@@ -183,7 +265,7 @@ fn typing_inside_a_function_should_not_invalidate_item_map() {\n             db.item_map(source_root).unwrap();\n         });\n         assert!(\n-            !format!(\"{:?}\", events).contains(\"_item_map\"),\n+            !format!(\"{:?}\", events).contains(\"item_map\"),\n             \"{:#?}\",\n             events\n         )"}]}