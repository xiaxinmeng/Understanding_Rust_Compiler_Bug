{"sha": "21ffc5350d436f673cf20f868cd0d0802905eea7", "node_id": "C_kwDOAAsO6NoAKDIxZmZjNTM1MGQ0MzZmNjczY2YyMGY4NjhjZDBkMDgwMjkwNWVlYTc", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2022-03-12T13:35:25Z"}, "committer": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2022-03-12T15:50:49Z"}, "message": "fix clippy::redundant_clone", "tree": {"sha": "1ac6d31d04438a392f9ad0ee8451c431d8ca0caa", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1ac6d31d04438a392f9ad0ee8451c431d8ca0caa"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/21ffc5350d436f673cf20f868cd0d0802905eea7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/21ffc5350d436f673cf20f868cd0d0802905eea7", "html_url": "https://github.com/rust-lang/rust/commit/21ffc5350d436f673cf20f868cd0d0802905eea7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/21ffc5350d436f673cf20f868cd0d0802905eea7/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d64d711db221e7959994e8fe22c6d8a975efcc4f", "url": "https://api.github.com/repos/rust-lang/rust/commits/d64d711db221e7959994e8fe22c6d8a975efcc4f", "html_url": "https://github.com/rust-lang/rust/commit/d64d711db221e7959994e8fe22c6d8a975efcc4f"}], "stats": {"total": 16, "additions": 6, "deletions": 10}, "files": [{"sha": "a9d15274fa9ec9d63372f105fd4b5b079c8f4494", "filename": "crates/hir/src/lib.rs", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/21ffc5350d436f673cf20f868cd0d0802905eea7/crates%2Fhir%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/21ffc5350d436f673cf20f868cd0d0802905eea7/crates%2Fhir%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir%2Fsrc%2Flib.rs?ref=21ffc5350d436f673cf20f868cd0d0802905eea7", "patch": "@@ -1530,11 +1530,7 @@ impl SelfParam {\n         let ctx = hir_ty::TyLoweringContext::new(db, &resolver);\n         let environment = db.trait_environment(self.func.into());\n \n-        Type {\n-            krate,\n-            env: environment.clone(),\n-            ty: ctx.lower_ty(&db.function_data(self.func).params[0].1),\n-        }\n+        Type { krate, env: environment, ty: ctx.lower_ty(&db.function_data(self.func).params[0].1) }\n     }\n }\n "}, {"sha": "3650204ee9d7327f7c0d051e00b61b61b9f33532", "filename": "crates/hir_def/src/nameres/attr_resolution.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/21ffc5350d436f673cf20f868cd0d0802905eea7/crates%2Fhir_def%2Fsrc%2Fnameres%2Fattr_resolution.rs", "raw_url": "https://github.com/rust-lang/rust/raw/21ffc5350d436f673cf20f868cd0d0802905eea7/crates%2Fhir_def%2Fsrc%2Fnameres%2Fattr_resolution.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_def%2Fsrc%2Fnameres%2Fattr_resolution.rs?ref=21ffc5350d436f673cf20f868cd0d0802905eea7", "patch": "@@ -52,7 +52,7 @@ impl DefMap {\n                     return Ok(ResolvedAttr::Other);\n                 }\n             }\n-            None => return Err(UnresolvedMacro { path: ast_id.path.clone() }),\n+            None => return Err(UnresolvedMacro { path: ast_id.path }),\n         };\n \n         Ok(ResolvedAttr::Macro(attr_macro_as_call_id("}, {"sha": "0c62f58940df85133b77e4171634b32b73d281d4", "filename": "crates/hir_ty/src/infer.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/21ffc5350d436f673cf20f868cd0d0802905eea7/crates%2Fhir_ty%2Fsrc%2Finfer.rs", "raw_url": "https://github.com/rust-lang/rust/raw/21ffc5350d436f673cf20f868cd0d0802905eea7/crates%2Fhir_ty%2Fsrc%2Finfer.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_ty%2Fsrc%2Finfer.rs?ref=21ffc5350d436f673cf20f868cd0d0802905eea7", "patch": "@@ -82,7 +82,7 @@ pub(crate) fn normalize(db: &dyn HirDatabase, owner: DefWithBodyId, ty: Ty) -> T\n     let trait_env = owner\n         .as_generic_def_id()\n         .map_or_else(|| Arc::new(TraitEnvironment::empty(krate)), |d| db.trait_environment(d));\n-    let mut table = unify::InferenceTable::new(db, trait_env.clone());\n+    let mut table = unify::InferenceTable::new(db, trait_env);\n \n     let ty_with_vars = table.normalize_associated_types_in(ty);\n     table.resolve_obligations_as_possible();"}, {"sha": "00c0de7f93b164bddd297cd71b75514ecad65f58", "filename": "crates/hir_ty/src/method_resolution.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/21ffc5350d436f673cf20f868cd0d0802905eea7/crates%2Fhir_ty%2Fsrc%2Fmethod_resolution.rs", "raw_url": "https://github.com/rust-lang/rust/raw/21ffc5350d436f673cf20f868cd0d0802905eea7/crates%2Fhir_ty%2Fsrc%2Fmethod_resolution.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_ty%2Fsrc%2Fmethod_resolution.rs?ref=21ffc5350d436f673cf20f868cd0d0802905eea7", "patch": "@@ -663,7 +663,7 @@ pub fn iterate_method_candidates_dyn(\n             iterate_method_candidates_for_self_ty(\n                 ty,\n                 db,\n-                env.clone(),\n+                env,\n                 traits_in_scope,\n                 visible_from_module,\n                 name,\n@@ -731,7 +731,7 @@ fn iterate_method_candidates_with_autoref(\n         first_adjustment.with_autoref(Mutability::Mut),\n         deref_chain,\n         db,\n-        env.clone(),\n+        env,\n         traits_in_scope,\n         visible_from_module,\n         name,"}, {"sha": "e60c3b04e85721c7bd6c10a6cd024fc1160f9580", "filename": "crates/ide_db/src/defs.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/21ffc5350d436f673cf20f868cd0d0802905eea7/crates%2Fide_db%2Fsrc%2Fdefs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/21ffc5350d436f673cf20f868cd0d0802905eea7/crates%2Fide_db%2Fsrc%2Fdefs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_db%2Fsrc%2Fdefs.rs?ref=21ffc5350d436f673cf20f868cd0d0802905eea7", "patch": "@@ -306,7 +306,7 @@ impl NameClass {\n \n         if let Some(it) = ast::LifetimeParam::cast(parent.clone()) {\n             sema.to_def(&it).map(Into::into).map(Definition::GenericParam)\n-        } else if let Some(it) = ast::Label::cast(parent.clone()) {\n+        } else if let Some(it) = ast::Label::cast(parent) {\n             sema.to_def(&it).map(Definition::Label)\n         } else {\n             None"}]}