{"sha": "3999d64f12d8b211371a8adb9f1ce39f162a60f0", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM5OTlkNjRmMTJkOGIyMTEzNzFhOGFkYjlmMWNlMzlmMTYyYTYwZjA=", "commit": {"author": {"name": "topecongiro", "email": "seuchida@gmail.com", "date": "2018-03-11T23:41:19Z"}, "committer": {"name": "topecongiro", "email": "seuchida@gmail.com", "date": "2018-03-11T23:41:19Z"}, "message": "Simplify IgnoreList", "tree": {"sha": "96fb6bf58feb415e01f052666495603585718950", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/96fb6bf58feb415e01f052666495603585718950"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3999d64f12d8b211371a8adb9f1ce39f162a60f0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3999d64f12d8b211371a8adb9f1ce39f162a60f0", "html_url": "https://github.com/rust-lang/rust/commit/3999d64f12d8b211371a8adb9f1ce39f162a60f0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3999d64f12d8b211371a8adb9f1ce39f162a60f0/comments", "author": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "committer": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "84ad70c1517f49e8881c9fffbdceaeee39c48bd4", "url": "https://api.github.com/repos/rust-lang/rust/commits/84ad70c1517f49e8881c9fffbdceaeee39c48bd4", "html_url": "https://github.com/rust-lang/rust/commit/84ad70c1517f49e8881c9fffbdceaeee39c48bd4"}], "stats": {"total": 44, "additions": 12, "deletions": 32}, "files": [{"sha": "2b9cd13ad3368c012ea174d8c3cdd356fcecf955", "filename": "Configurations.md", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/3999d64f12d8b211371a8adb9f1ce39f162a60f0/Configurations.md", "raw_url": "https://github.com/rust-lang/rust/raw/3999d64f12d8b211371a8adb9f1ce39f162a60f0/Configurations.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Configurations.md?ref=3999d64f12d8b211371a8adb9f1ce39f162a60f0", "patch": "@@ -2149,8 +2149,7 @@ Skip formatting the specified files and directories.\n If you want to ignore specific files, put the following to your config file:\n \n ```toml\n-[ignore]\n-files = [\n+ignore = [\n     \"src/types.rs\",\n     \"src/foo/bar.rs\",\n ]\n@@ -2159,8 +2158,7 @@ files = [\n If you want to ignore every file under `examples/`, put the following to your config file:\n \n ```toml\n-[ignore]\n-directories = [\n+ignore [\n     \"examples\",\n ]\n ```"}, {"sha": "31f7d106d1a3a049a9052bbdddf67057eea7562f", "filename": "src/config/options.rs", "status": "modified", "additions": 10, "deletions": 28, "changes": 38, "blob_url": "https://github.com/rust-lang/rust/blob/3999d64f12d8b211371a8adb9f1ce39f162a60f0/src%2Fconfig%2Foptions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3999d64f12d8b211371a8adb9f1ce39f162a60f0/src%2Fconfig%2Foptions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fconfig%2Foptions.rs?ref=3999d64f12d8b211371a8adb9f1ce39f162a60f0", "patch": "@@ -252,14 +252,12 @@ impl ::std::str::FromStr for WidthHeuristics {\n \n /// A set of directories, files and modules that rustfmt should ignore.\n #[derive(Default, Deserialize, Serialize, Clone, Debug)]\n-pub struct IgnoreList {\n-    directories: Option<HashSet<PathBuf>>,\n-    files: Option<HashSet<PathBuf>>,\n-}\n+pub struct IgnoreList(HashSet<PathBuf>);\n \n impl IgnoreList {\n-    fn add_prefix_inner(set: &HashSet<PathBuf>, dir: &Path) -> HashSet<PathBuf> {\n-        set.iter()\n+    pub fn add_prefix(&mut self, dir: &Path) {\n+        self.0 = self.0\n+            .iter()\n             .map(|s| {\n                 if s.has_root() {\n                     s.clone()\n@@ -269,29 +267,13 @@ impl IgnoreList {\n                     path\n                 }\n             })\n-            .collect()\n-    }\n-\n-    pub fn add_prefix(&mut self, dir: &Path) {\n-        macro add_prefix_inner_with ($($field: ident),* $(,)*) {\n-            $(if let Some(set) = self.$field.as_mut() {\n-                *set = IgnoreList::add_prefix_inner(set, dir);\n-            })*\n-        }\n-\n-        add_prefix_inner_with!(directories, files);\n+            .collect();\n     }\n \n-    fn is_ignore_file(&self, path: &Path) -> bool {\n-        self.files.as_ref().map_or(false, |set| set.contains(path))\n-    }\n-\n-    fn is_under_ignore_dir(&self, path: &Path) -> bool {\n-        if let Some(ref dirs) = self.directories {\n-            for dir in dirs {\n-                if path.starts_with(dir) {\n-                    return true;\n-                }\n+    fn skip_file_inner(&self, file: &Path) -> bool {\n+        for path in &self.0 {\n+            if file.starts_with(path) {\n+                return true;\n             }\n         }\n \n@@ -300,7 +282,7 @@ impl IgnoreList {\n \n     pub fn skip_file(&self, file: &FileName) -> bool {\n         if let FileName::Real(ref path) = file {\n-            self.is_ignore_file(path) || self.is_under_ignore_dir(path)\n+            self.skip_file_inner(path)\n         } else {\n             false\n         }"}]}