{"sha": "94b36594c628d6703f879856b9b3d4d08a6debfa", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk0YjM2NTk0YzYyOGQ2NzAzZjg3OTg1NmI5YjNkNGQwOGE2ZGViZmE=", "commit": {"author": {"name": "Nicholas Nethercote", "email": "nnethercote@mozilla.com", "date": "2016-10-04T01:04:19Z"}, "committer": {"name": "Nicholas Nethercote", "email": "nnethercote@mozilla.com", "date": "2016-10-04T21:57:37Z"}, "message": "Clarify StringReader::bump.\n\nThis commit renames the variables to make it clearer which char each one\nrefers to. It also slightly reorders and rearranges some statements.", "tree": {"sha": "7453d1bedb25e24a3d33e12d2fe6d29ddab885ea", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7453d1bedb25e24a3d33e12d2fe6d29ddab885ea"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/94b36594c628d6703f879856b9b3d4d08a6debfa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/94b36594c628d6703f879856b9b3d4d08a6debfa", "html_url": "https://github.com/rust-lang/rust/commit/94b36594c628d6703f879856b9b3d4d08a6debfa", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/94b36594c628d6703f879856b9b3d4d08a6debfa/comments", "author": {"login": "nnethercote", "id": 1940286, "node_id": "MDQ6VXNlcjE5NDAyODY=", "avatar_url": "https://avatars.githubusercontent.com/u/1940286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nnethercote", "html_url": "https://github.com/nnethercote", "followers_url": "https://api.github.com/users/nnethercote/followers", "following_url": "https://api.github.com/users/nnethercote/following{/other_user}", "gists_url": "https://api.github.com/users/nnethercote/gists{/gist_id}", "starred_url": "https://api.github.com/users/nnethercote/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nnethercote/subscriptions", "organizations_url": "https://api.github.com/users/nnethercote/orgs", "repos_url": "https://api.github.com/users/nnethercote/repos", "events_url": "https://api.github.com/users/nnethercote/events{/privacy}", "received_events_url": "https://api.github.com/users/nnethercote/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nnethercote", "id": 1940286, "node_id": "MDQ6VXNlcjE5NDAyODY=", "avatar_url": "https://avatars.githubusercontent.com/u/1940286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nnethercote", "html_url": "https://github.com/nnethercote", "followers_url": "https://api.github.com/users/nnethercote/followers", "following_url": "https://api.github.com/users/nnethercote/following{/other_user}", "gists_url": "https://api.github.com/users/nnethercote/gists{/gist_id}", "starred_url": "https://api.github.com/users/nnethercote/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nnethercote/subscriptions", "organizations_url": "https://api.github.com/users/nnethercote/orgs", "repos_url": "https://api.github.com/users/nnethercote/repos", "events_url": "https://api.github.com/users/nnethercote/events{/privacy}", "received_events_url": "https://api.github.com/users/nnethercote/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e2631208b1888d6a340938314457446a7f8ed2fc", "url": "https://api.github.com/repos/rust-lang/rust/commits/e2631208b1888d6a340938314457446a7f8ed2fc", "html_url": "https://github.com/rust-lang/rust/commit/e2631208b1888d6a340938314457446a7f8ed2fc"}], "stats": {"total": 29, "additions": 16, "deletions": 13}, "files": [{"sha": "aca41bd7b5915a83eb44a2736741ddec6a0d6dbc", "filename": "src/libsyntax/parse/lexer/mod.rs", "status": "modified", "additions": 16, "deletions": 13, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/94b36594c628d6703f879856b9b3d4d08a6debfa/src%2Flibsyntax%2Fparse%2Flexer%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/94b36594c628d6703f879856b9b3d4d08a6debfa/src%2Flibsyntax%2Fparse%2Flexer%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Flexer%2Fmod.rs?ref=94b36594c628d6703f879856b9b3d4d08a6debfa", "patch": "@@ -414,27 +414,30 @@ impl<'a> StringReader<'a> {\n     /// Advance the StringReader by one character. If a newline is\n     /// discovered, add it to the FileMap's list of line start offsets.\n     pub fn bump(&mut self) {\n-        self.pos = self.next_pos;\n-        let current_byte_offset = self.byte_offset(self.next_pos).to_usize();\n-        if current_byte_offset < self.source_text.len() {\n-            let last_char = self.ch.unwrap();\n-            let ch = char_at(&self.source_text, current_byte_offset);\n-            let byte_offset_diff = ch.len_utf8();\n-            self.next_pos = self.next_pos + Pos::from_usize(byte_offset_diff);\n-            self.ch = Some(ch);\n-            self.col = self.col + CharPos(1);\n-            if last_char == '\\n' {\n+        let new_pos = self.next_pos;\n+        let new_byte_offset = self.byte_offset(new_pos).to_usize();\n+        if new_byte_offset < self.source_text.len() {\n+            let old_ch_is_newline = self.ch.unwrap() == '\\n';\n+            let new_ch = char_at(&self.source_text, new_byte_offset);\n+            let new_ch_len = new_ch.len_utf8();\n+\n+            self.ch = Some(new_ch);\n+            self.pos = new_pos;\n+            self.next_pos = new_pos + Pos::from_usize(new_ch_len);\n+            if old_ch_is_newline {\n                 if self.save_new_lines {\n                     self.filemap.next_line(self.pos);\n                 }\n                 self.col = CharPos(0);\n+            } else {\n+                self.col = self.col + CharPos(1);\n             }\n-\n-            if byte_offset_diff > 1 {\n-                self.filemap.record_multibyte_char(self.pos, byte_offset_diff);\n+            if new_ch_len > 1 {\n+                self.filemap.record_multibyte_char(self.pos, new_ch_len);\n             }\n         } else {\n             self.ch = None;\n+            self.pos = new_pos;\n         }\n     }\n "}]}