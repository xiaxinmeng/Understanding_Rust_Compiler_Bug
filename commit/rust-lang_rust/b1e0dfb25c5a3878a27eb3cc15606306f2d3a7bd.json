{"sha": "b1e0dfb25c5a3878a27eb3cc15606306f2d3a7bd", "node_id": "MDY6Q29tbWl0NzI0NzEyOmIxZTBkZmIyNWM1YTM4NzhhMjdlYjNjYzE1NjA2MzA2ZjJkM2E3YmQ=", "commit": {"author": {"name": "Camille TJHOA", "email": "camille.tjhoa@outlook.com", "date": "2015-03-04T22:09:03Z"}, "committer": {"name": "Camille TJHOA", "email": "camille.tjhoa@outlook.com", "date": "2015-03-04T22:09:03Z"}, "message": "docs(path.rs): fix ends_with method", "tree": {"sha": "83d91707743a98f11cb4f7cd3cfb9eb322da4341", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/83d91707743a98f11cb4f7cd3cfb9eb322da4341"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b1e0dfb25c5a3878a27eb3cc15606306f2d3a7bd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b1e0dfb25c5a3878a27eb3cc15606306f2d3a7bd", "html_url": "https://github.com/rust-lang/rust/commit/b1e0dfb25c5a3878a27eb3cc15606306f2d3a7bd", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b1e0dfb25c5a3878a27eb3cc15606306f2d3a7bd/comments", "author": {"login": "ctjhoa", "id": 1716173, "node_id": "MDQ6VXNlcjE3MTYxNzM=", "avatar_url": "https://avatars.githubusercontent.com/u/1716173?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ctjhoa", "html_url": "https://github.com/ctjhoa", "followers_url": "https://api.github.com/users/ctjhoa/followers", "following_url": "https://api.github.com/users/ctjhoa/following{/other_user}", "gists_url": "https://api.github.com/users/ctjhoa/gists{/gist_id}", "starred_url": "https://api.github.com/users/ctjhoa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ctjhoa/subscriptions", "organizations_url": "https://api.github.com/users/ctjhoa/orgs", "repos_url": "https://api.github.com/users/ctjhoa/repos", "events_url": "https://api.github.com/users/ctjhoa/events{/privacy}", "received_events_url": "https://api.github.com/users/ctjhoa/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ctjhoa", "id": 1716173, "node_id": "MDQ6VXNlcjE3MTYxNzM=", "avatar_url": "https://avatars.githubusercontent.com/u/1716173?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ctjhoa", "html_url": "https://github.com/ctjhoa", "followers_url": "https://api.github.com/users/ctjhoa/followers", "following_url": "https://api.github.com/users/ctjhoa/following{/other_user}", "gists_url": "https://api.github.com/users/ctjhoa/gists{/gist_id}", "starred_url": "https://api.github.com/users/ctjhoa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ctjhoa/subscriptions", "organizations_url": "https://api.github.com/users/ctjhoa/orgs", "repos_url": "https://api.github.com/users/ctjhoa/repos", "events_url": "https://api.github.com/users/ctjhoa/events{/privacy}", "received_events_url": "https://api.github.com/users/ctjhoa/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3b3bb0e682c2d252e9f62dd9df5cff9552af91ad", "url": "https://api.github.com/repos/rust-lang/rust/commits/3b3bb0e682c2d252e9f62dd9df5cff9552af91ad", "html_url": "https://github.com/rust-lang/rust/commit/3b3bb0e682c2d252e9f62dd9df5cff9552af91ad"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "4fd263f96c4761098d71d3b73044ff5822a98d03", "filename": "src/libstd/path.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b1e0dfb25c5a3878a27eb3cc15606306f2d3a7bd/src%2Flibstd%2Fpath.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b1e0dfb25c5a3878a27eb3cc15606306f2d3a7bd/src%2Flibstd%2Fpath.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fpath.rs?ref=b1e0dfb25c5a3878a27eb3cc15606306f2d3a7bd", "patch": "@@ -1193,7 +1193,7 @@ impl Path {\n         iter_after(self.components(), base.as_path().components()).is_some()\n     }\n \n-    /// Determines whether `base` is a suffix of `self`.\n+    /// Determines whether `child` is a suffix of `self`.\n     pub fn ends_with<P: ?Sized>(&self, child: &P) -> bool where P: AsPath {\n         iter_after(self.components().rev(), child.as_path().components().rev()).is_some()\n     }"}]}