{"sha": "539175c026c70e32150ca8c5ed2e0bacd3bb12e6", "node_id": "C_kwDOAAsO6NoAKDUzOTE3NWMwMjZjNzBlMzIxNTBjYThjNWVkMmUwYmFjZDNiYjEyZTY", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2022-01-15T10:28:28Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-01-15T10:28:28Z"}, "message": "Rollup merge of #92892 - compiler-errors:const-param-env-for-const-block, r=fee1-dead\n\nDo not fail evaluation in const blocks\n\nEvaluate const blocks with a const param-env, so we properly check `~const` trait bounds.\n\nFixes #92713\n(I will fix the poor diagnostics in #92713 and #92712 in a separate PR)\n\ncc `@nbdd0121` who wrote the code this PR touches in #89561", "tree": {"sha": "ff0a003ba0175b321403bff0885636893e33b818", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ff0a003ba0175b321403bff0885636893e33b818"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/539175c026c70e32150ca8c5ed2e0bacd3bb12e6", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJh4qHMCRBK7hj4Ov3rIwAAxsEIAAggRub+hsIxOKNQ+ybEjS71\npmyWbloPxkHht92OidHIMy26JwMgca9Is8QtVk0gV4hiVNVZwX/uTF/YyoHEqp2J\nYmjgubo8R8Le0vKbae2wjuBN5jbTHFbY+7/xD90d6HPvLC/Q15jVnoIdHKKEMX5A\ndAD2LZ/DIBiHMgMJry1NnI/L9ARf22bjGX2IVJ93a2bpkalVDAh1jJq9SKbgtISr\nvCdS2fpUd+0sQVXWcIYXT9zvID3qgRlnru9GTaqiwZ3kAHX+MbbWKF4qg59bOWr7\nfpl+2wx9ho8jv57DPDSwoEhBHZdTt7LKRlsYL8QBU7TI0gi6hNHgt7w6aFELmF8=\n=Mixc\n-----END PGP SIGNATURE-----\n", "payload": "tree ff0a003ba0175b321403bff0885636893e33b818\nparent 784e4ba9a4bcbda44021c6ca8345819c91b45066\nparent b9a3c32f31d4aff6988c678036c563c4b425f0bc\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1642242508 +0100\ncommitter GitHub <noreply@github.com> 1642242508 +0100\n\nRollup merge of #92892 - compiler-errors:const-param-env-for-const-block, r=fee1-dead\n\nDo not fail evaluation in const blocks\n\nEvaluate const blocks with a const param-env, so we properly check `~const` trait bounds.\n\nFixes #92713\n(I will fix the poor diagnostics in #92713 and #92712 in a separate PR)\n\ncc `@nbdd0121` who wrote the code this PR touches in #89561\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/539175c026c70e32150ca8c5ed2e0bacd3bb12e6", "html_url": "https://github.com/rust-lang/rust/commit/539175c026c70e32150ca8c5ed2e0bacd3bb12e6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/539175c026c70e32150ca8c5ed2e0bacd3bb12e6/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "784e4ba9a4bcbda44021c6ca8345819c91b45066", "url": "https://api.github.com/repos/rust-lang/rust/commits/784e4ba9a4bcbda44021c6ca8345819c91b45066", "html_url": "https://github.com/rust-lang/rust/commit/784e4ba9a4bcbda44021c6ca8345819c91b45066"}, {"sha": "b9a3c32f31d4aff6988c678036c563c4b425f0bc", "url": "https://api.github.com/repos/rust-lang/rust/commits/b9a3c32f31d4aff6988c678036c563c4b425f0bc", "html_url": "https://github.com/rust-lang/rust/commit/b9a3c32f31d4aff6988c678036c563c4b425f0bc"}], "stats": {"total": 40, "additions": 39, "deletions": 1}, "files": [{"sha": "faf3ef1e543c97d3beaf51c62b2fa770e9ee4f17", "filename": "compiler/rustc_typeck/src/check/expr.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/539175c026c70e32150ca8c5ed2e0bacd3bb12e6/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/539175c026c70e32150ca8c5ed2e0bacd3bb12e6/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fexpr.rs?ref=539175c026c70e32150ca8c5ed2e0bacd3bb12e6", "patch": "@@ -1226,7 +1226,7 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n         let body = self.tcx.hir().body(anon_const.body);\n \n         // Create a new function context.\n-        let fcx = FnCtxt::new(self, self.param_env, body.value.hir_id);\n+        let fcx = FnCtxt::new(self, self.param_env.with_const(), body.value.hir_id);\n         crate::check::GatherLocalsVisitor::new(&fcx).visit_body(body);\n \n         let ty = fcx.check_expr_with_expectation(&body.value, expected);"}, {"sha": "3bfc759a9aef72131bda31b2550e1e5cc0eb582b", "filename": "src/test/ui/consts/const-block-const-bound.rs", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/539175c026c70e32150ca8c5ed2e0bacd3bb12e6/src%2Ftest%2Fui%2Fconsts%2Fconst-block-const-bound.rs", "raw_url": "https://github.com/rust-lang/rust/raw/539175c026c70e32150ca8c5ed2e0bacd3bb12e6/src%2Ftest%2Fui%2Fconsts%2Fconst-block-const-bound.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst-block-const-bound.rs?ref=539175c026c70e32150ca8c5ed2e0bacd3bb12e6", "patch": "@@ -0,0 +1,17 @@\n+#![allow(unused)]\n+#![feature(const_fn_trait_bound, const_trait_impl, inline_const)]\n+\n+const fn f<T: ~const Drop>(x: T) {}\n+\n+struct UnconstDrop;\n+\n+impl Drop for UnconstDrop {\n+    fn drop(&mut self) {}\n+}\n+\n+fn main() {\n+    const {\n+        f(UnconstDrop);\n+        //~^ ERROR the trait bound `UnconstDrop: Drop` is not satisfied\n+    }\n+}"}, {"sha": "0e6e426e7c2c83c5c2361bbc513e4e0bad90ffb2", "filename": "src/test/ui/consts/const-block-const-bound.stderr", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/539175c026c70e32150ca8c5ed2e0bacd3bb12e6/src%2Ftest%2Fui%2Fconsts%2Fconst-block-const-bound.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/539175c026c70e32150ca8c5ed2e0bacd3bb12e6/src%2Ftest%2Fui%2Fconsts%2Fconst-block-const-bound.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst-block-const-bound.stderr?ref=539175c026c70e32150ca8c5ed2e0bacd3bb12e6", "patch": "@@ -0,0 +1,21 @@\n+error[E0277]: the trait bound `UnconstDrop: Drop` is not satisfied\n+  --> $DIR/const-block-const-bound.rs:14:11\n+   |\n+LL |         f(UnconstDrop);\n+   |         - ^^^^^^^^^^^ the trait `Drop` is not implemented for `UnconstDrop`\n+   |         |\n+   |         required by a bound introduced by this call\n+   |\n+note: required by a bound in `f`\n+  --> $DIR/const-block-const-bound.rs:4:15\n+   |\n+LL | const fn f<T: ~const Drop>(x: T) {}\n+   |               ^^^^^^^^^^^ required by this bound in `f`\n+help: consider introducing a `where` bound, but there might be an alternative better way to express this requirement\n+   |\n+LL | fn main() where UnconstDrop: Drop {\n+   |           +++++++++++++++++++++++\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0277`."}]}