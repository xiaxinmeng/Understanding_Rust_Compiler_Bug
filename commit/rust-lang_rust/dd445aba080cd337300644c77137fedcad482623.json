{"sha": "dd445aba080cd337300644c77137fedcad482623", "node_id": "C_kwDOAAsO6NoAKGRkNDQ1YWJhMDgwY2QzMzczMDA2NDRjNzcxMzdmZWRjYWQ0ODI2MjM", "commit": {"author": {"name": "Ulyssa", "email": "git@ulyssa.dev", "date": "2021-09-15T15:58:23Z"}, "committer": {"name": "Caleb Cartwright", "email": "calebcartwright@users.noreply.github.com", "date": "2021-09-21T01:05:52Z"}, "message": "Trailing comma on match block goes missing when guard is on its own line", "tree": {"sha": "08baa4c48904f177716c6a7be9b898c5dc5d3c40", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/08baa4c48904f177716c6a7be9b898c5dc5d3c40"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/dd445aba080cd337300644c77137fedcad482623", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/dd445aba080cd337300644c77137fedcad482623", "html_url": "https://github.com/rust-lang/rust/commit/dd445aba080cd337300644c77137fedcad482623", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/dd445aba080cd337300644c77137fedcad482623/comments", "author": {"login": "ulyssa", "id": 71818175, "node_id": "MDQ6VXNlcjcxODE4MTc1", "avatar_url": "https://avatars.githubusercontent.com/u/71818175?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ulyssa", "html_url": "https://github.com/ulyssa", "followers_url": "https://api.github.com/users/ulyssa/followers", "following_url": "https://api.github.com/users/ulyssa/following{/other_user}", "gists_url": "https://api.github.com/users/ulyssa/gists{/gist_id}", "starred_url": "https://api.github.com/users/ulyssa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ulyssa/subscriptions", "organizations_url": "https://api.github.com/users/ulyssa/orgs", "repos_url": "https://api.github.com/users/ulyssa/repos", "events_url": "https://api.github.com/users/ulyssa/events{/privacy}", "received_events_url": "https://api.github.com/users/ulyssa/received_events", "type": "User", "site_admin": false}, "committer": {"login": "calebcartwright", "id": 13042488, "node_id": "MDQ6VXNlcjEzMDQyNDg4", "avatar_url": "https://avatars.githubusercontent.com/u/13042488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/calebcartwright", "html_url": "https://github.com/calebcartwright", "followers_url": "https://api.github.com/users/calebcartwright/followers", "following_url": "https://api.github.com/users/calebcartwright/following{/other_user}", "gists_url": "https://api.github.com/users/calebcartwright/gists{/gist_id}", "starred_url": "https://api.github.com/users/calebcartwright/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/calebcartwright/subscriptions", "organizations_url": "https://api.github.com/users/calebcartwright/orgs", "repos_url": "https://api.github.com/users/calebcartwright/repos", "events_url": "https://api.github.com/users/calebcartwright/events{/privacy}", "received_events_url": "https://api.github.com/users/calebcartwright/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7aa69e5bc87f32fdcbf037abce2d575335480b9a", "url": "https://api.github.com/repos/rust-lang/rust/commits/7aa69e5bc87f32fdcbf037abce2d575335480b9a", "html_url": "https://github.com/rust-lang/rust/commit/7aa69e5bc87f32fdcbf037abce2d575335480b9a"}], "stats": {"total": 19, "additions": 19, "deletions": 0}, "files": [{"sha": "5a6ed0ec06e55a37ca203bafdbd9625a2ad3ce4c", "filename": "src/matches.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/dd445aba080cd337300644c77137fedcad482623/src%2Fmatches.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dd445aba080cd337300644c77137fedcad482623/src%2Fmatches.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fmatches.rs?ref=dd445aba080cd337300644c77137fedcad482623", "patch": "@@ -409,6 +409,7 @@ fn rewrite_match_body(\n             }\n             result.push_str(&nested_indent_str);\n             result.push_str(&body_str);\n+            result.push_str(&comma);\n             return Some(result);\n         }\n "}, {"sha": "baa05b79c16175e5001ef80682b31d8cff0fe80b", "filename": "tests/source/match-block-trailing-comma.rs", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/dd445aba080cd337300644c77137fedcad482623/tests%2Fsource%2Fmatch-block-trailing-comma.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dd445aba080cd337300644c77137fedcad482623/tests%2Fsource%2Fmatch-block-trailing-comma.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Fmatch-block-trailing-comma.rs?ref=dd445aba080cd337300644c77137fedcad482623", "patch": "@@ -8,6 +8,14 @@ fn foo() {\n             \"line1\";\n             \"line2\"\n         }\n+        ThisIsA::Guard if true => {\n+            \"line1\";\n+            \"line2\"\n+        }\n+        ThisIsA::ReallyLongPattern(ThatWillForce::TheGuard, ToWrapOnto::TheFollowingLine) if true => {\n+            \"line1\";\n+            \"line2\"\n+        }\n         b => (aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa,\n               bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb),\n     }"}, {"sha": "5ab433a2e6cf65d8fff85bbbf19a136e7b181e51", "filename": "tests/target/match-block-trailing-comma.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/dd445aba080cd337300644c77137fedcad482623/tests%2Ftarget%2Fmatch-block-trailing-comma.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dd445aba080cd337300644c77137fedcad482623/tests%2Ftarget%2Fmatch-block-trailing-comma.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fmatch-block-trailing-comma.rs?ref=dd445aba080cd337300644c77137fedcad482623", "patch": "@@ -8,6 +8,16 @@ fn foo() {\n             \"line1\";\n             \"line2\"\n         },\n+        ThisIsA::Guard if true => {\n+            \"line1\";\n+            \"line2\"\n+        },\n+        ThisIsA::ReallyLongPattern(ThatWillForce::TheGuard, ToWrapOnto::TheFollowingLine)\n+            if true =>\n+        {\n+            \"line1\";\n+            \"line2\"\n+        },\n         b => (\n             aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa,\n             bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb,"}]}