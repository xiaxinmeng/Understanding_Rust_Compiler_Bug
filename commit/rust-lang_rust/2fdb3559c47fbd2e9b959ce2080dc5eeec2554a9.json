{"sha": "2fdb3559c47fbd2e9b959ce2080dc5eeec2554a9", "node_id": "C_kwDOAAsO6NoAKDJmZGIzNTU5YzQ3ZmJkMmU5Yjk1OWNlMjA4MGRjNWVlZWMyNTU0YTk", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2023-02-03T05:30:23Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2023-02-03T05:30:23Z"}, "message": "Rollup merge of #106805 - madsravn:master, r=compiler-errors\n\nSuggest `{var:?}` when finding `{?:var}` in inline format strings\n\nLink to issue: https://github.com/rust-lang/rust/issues/106572\n\nThis is my first PR to this project, so hopefully I can get some good pointers with me from the first PR.\n\nCurrently my idea was to test out whether or not this is the correct solution to this issue and then hopefully expand upon the idea to not only work for Debug formatting but for all of  them. If this is a valid solution, I will create a new issue to give a better error message to a broader range of wrong-order formatting.", "tree": {"sha": "1bec960c0de2ae5fbf16a048d1451f2ddd6f399b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1bec960c0de2ae5fbf16a048d1451f2ddd6f399b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2fdb3559c47fbd2e9b959ce2080dc5eeec2554a9", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJj3JvvCRBK7hj4Ov3rIwAArCkIACPArDsKH/VWZkwIG8iF/dmE\nt80sm1KgqPB/xR3sOTF1prxKRNhvUw2arEXVuP8SXtBHFkRQ1qZaH8NOZHJUvZ1w\nFaWvVH8BzDD3PP8RYv2ozQzQVdvqRjlvzZkMIo9NjbweJSX4qX+TnLhz75qUz17Q\n0Wp54wASl9YL7RRWPRgEnXLac5UoIs1b2xC9RfclVoaD4PZWZyoyh/YPDyvIgC4K\nlzetTIdS/R8pP5tbOUeFA6wWko5V7UUEiQl13bdCzHoCxqFNDB3aV2vEt+lhbsOh\ny4eOS0Pf6ZNZTrRufU3N18aS0f3XnjeqPlPArM+AvZGIQAk+lKsaxq3F/YFe+6A=\n=AJ+L\n-----END PGP SIGNATURE-----\n", "payload": "tree 1bec960c0de2ae5fbf16a048d1451f2ddd6f399b\nparent 6b94f4dccc8bd68ff407819fd51f2d62d9ca1ade\nparent f922c8395d1cfc54c67cbd645f8456a13fb0189f\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1675402223 +0100\ncommitter GitHub <noreply@github.com> 1675402223 +0100\n\nRollup merge of #106805 - madsravn:master, r=compiler-errors\n\nSuggest `{var:?}` when finding `{?:var}` in inline format strings\n\nLink to issue: https://github.com/rust-lang/rust/issues/106572\n\nThis is my first PR to this project, so hopefully I can get some good pointers with me from the first PR.\n\nCurrently my idea was to test out whether or not this is the correct solution to this issue and then hopefully expand upon the idea to not only work for Debug formatting but for all of  them. If this is a valid solution, I will create a new issue to give a better error message to a broader range of wrong-order formatting.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2fdb3559c47fbd2e9b959ce2080dc5eeec2554a9", "html_url": "https://github.com/rust-lang/rust/commit/2fdb3559c47fbd2e9b959ce2080dc5eeec2554a9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2fdb3559c47fbd2e9b959ce2080dc5eeec2554a9/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6b94f4dccc8bd68ff407819fd51f2d62d9ca1ade", "url": "https://api.github.com/repos/rust-lang/rust/commits/6b94f4dccc8bd68ff407819fd51f2d62d9ca1ade", "html_url": "https://github.com/rust-lang/rust/commit/6b94f4dccc8bd68ff407819fd51f2d62d9ca1ade"}, {"sha": "f922c8395d1cfc54c67cbd645f8456a13fb0189f", "url": "https://api.github.com/repos/rust-lang/rust/commits/f922c8395d1cfc54c67cbd645f8456a13fb0189f", "html_url": "https://github.com/rust-lang/rust/commit/f922c8395d1cfc54c67cbd645f8456a13fb0189f"}], "stats": {"total": 98, "additions": 97, "deletions": 1}, "files": [{"sha": "088a87ca5710457386e77017260650aa8cfb4daf", "filename": "compiler/rustc_parse_format/src/lib.rs", "status": "modified", "additions": 28, "deletions": 1, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/2fdb3559c47fbd2e9b959ce2080dc5eeec2554a9/compiler%2Frustc_parse_format%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2fdb3559c47fbd2e9b959ce2080dc5eeec2554a9/compiler%2Frustc_parse_format%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_parse_format%2Fsrc%2Flib.rs?ref=2fdb3559c47fbd2e9b959ce2080dc5eeec2554a9", "patch": "@@ -273,7 +273,13 @@ impl<'a> Iterator for Parser<'a> {\n                                 );\n                             }\n                         } else {\n-                            self.suggest_positional_arg_instead_of_captured_arg(arg);\n+                            if let Some(&(_, maybe)) = self.cur.peek() {\n+                                if maybe == '?' {\n+                                    self.suggest_format();\n+                                } else {\n+                                    self.suggest_positional_arg_instead_of_captured_arg(arg);\n+                                }\n+                            }\n                         }\n                         Some(NextArgument(Box::new(arg)))\n                     }\n@@ -832,6 +838,27 @@ impl<'a> Parser<'a> {\n         if found { Some(cur) } else { None }\n     }\n \n+    fn suggest_format(&mut self) {\n+        if let (Some(pos), Some(_)) = (self.consume_pos('?'), self.consume_pos(':')) {\n+            let word = self.word();\n+            let _end = self.current_pos();\n+            let pos = self.to_span_index(pos);\n+            self.errors.insert(\n+                0,\n+                ParseError {\n+                    description: \"expected format parameter to occur after `:`\".to_owned(),\n+                    note: Some(\n+                        format!(\"`?` comes after `:`, try `{}:{}` instead\", word, \"?\").to_owned(),\n+                    ),\n+                    label: \"expected `?` to occur after `:`\".to_owned(),\n+                    span: pos.to(pos),\n+                    secondary_label: None,\n+                    should_be_replaced_with_positional_argument: false,\n+                },\n+            );\n+        }\n+    }\n+\n     fn suggest_positional_arg_instead_of_captured_arg(&mut self, arg: Argument<'a>) {\n         if let Some(end) = self.consume_pos('.') {\n             let byte_pos = self.to_span_index(end);"}, {"sha": "0bad54023965fecbf8f0b5ddd90b8b56f8bd3d6c", "filename": "tests/ui/fmt/format-string-wrong-order.rs", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/2fdb3559c47fbd2e9b959ce2080dc5eeec2554a9/tests%2Fui%2Ffmt%2Fformat-string-wrong-order.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2fdb3559c47fbd2e9b959ce2080dc5eeec2554a9/tests%2Fui%2Ffmt%2Fformat-string-wrong-order.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ffmt%2Fformat-string-wrong-order.rs?ref=2fdb3559c47fbd2e9b959ce2080dc5eeec2554a9", "patch": "@@ -0,0 +1,15 @@\n+fn main() {\n+    let bar = 3;\n+    format!(\"{?:}\", bar);\n+    //~^ ERROR invalid format string: expected format parameter to occur after `:`\n+    format!(\"{?:bar}\");\n+    //~^ ERROR invalid format string: expected format parameter to occur after `:`\n+    format!(\"{?:?}\", bar);\n+    //~^ ERROR invalid format string: expected format parameter to occur after `:`\n+    format!(\"{??}\", bar);\n+    //~^ ERROR invalid format string: expected `'}'`, found `'?'`\n+    format!(\"{?;bar}\");\n+    //~^ ERROR invalid format string: expected `'}'`, found `'?'`\n+    format!(\"{?:#?}\", bar);\n+    //~^ ERROR invalid format string: expected format parameter to occur after `:`\n+}"}, {"sha": "461af354a4e15c274d20f3fc46ad8bd979724d7f", "filename": "tests/ui/fmt/format-string-wrong-order.stderr", "status": "added", "additions": 54, "deletions": 0, "changes": 54, "blob_url": "https://github.com/rust-lang/rust/blob/2fdb3559c47fbd2e9b959ce2080dc5eeec2554a9/tests%2Fui%2Ffmt%2Fformat-string-wrong-order.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/2fdb3559c47fbd2e9b959ce2080dc5eeec2554a9/tests%2Fui%2Ffmt%2Fformat-string-wrong-order.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ffmt%2Fformat-string-wrong-order.stderr?ref=2fdb3559c47fbd2e9b959ce2080dc5eeec2554a9", "patch": "@@ -0,0 +1,54 @@\n+error: invalid format string: expected format parameter to occur after `:`\n+  --> $DIR/format-string-wrong-order.rs:3:15\n+   |\n+LL |     format!(\"{?:}\", bar);\n+   |               ^ expected `?` to occur after `:` in format string\n+   |\n+   = note: `?` comes after `:`, try `:?` instead\n+\n+error: invalid format string: expected format parameter to occur after `:`\n+  --> $DIR/format-string-wrong-order.rs:5:15\n+   |\n+LL |     format!(\"{?:bar}\");\n+   |               ^ expected `?` to occur after `:` in format string\n+   |\n+   = note: `?` comes after `:`, try `bar:?` instead\n+\n+error: invalid format string: expected format parameter to occur after `:`\n+  --> $DIR/format-string-wrong-order.rs:7:15\n+   |\n+LL |     format!(\"{?:?}\", bar);\n+   |               ^ expected `?` to occur after `:` in format string\n+   |\n+   = note: `?` comes after `:`, try `:?` instead\n+\n+error: invalid format string: expected `'}'`, found `'?'`\n+  --> $DIR/format-string-wrong-order.rs:9:15\n+   |\n+LL |     format!(\"{??}\", bar);\n+   |              -^ expected `}` in format string\n+   |              |\n+   |              because of this opening brace\n+   |\n+   = note: if you intended to print `{`, you can escape it using `{{`\n+\n+error: invalid format string: expected `'}'`, found `'?'`\n+  --> $DIR/format-string-wrong-order.rs:11:15\n+   |\n+LL |     format!(\"{?;bar}\");\n+   |              -^ expected `}` in format string\n+   |              |\n+   |              because of this opening brace\n+   |\n+   = note: if you intended to print `{`, you can escape it using `{{`\n+\n+error: invalid format string: expected format parameter to occur after `:`\n+  --> $DIR/format-string-wrong-order.rs:13:15\n+   |\n+LL |     format!(\"{?:#?}\", bar);\n+   |               ^ expected `?` to occur after `:` in format string\n+   |\n+   = note: `?` comes after `:`, try `:?` instead\n+\n+error: aborting due to 6 previous errors\n+"}]}