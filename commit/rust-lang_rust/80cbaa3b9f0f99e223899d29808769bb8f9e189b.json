{"sha": "80cbaa3b9f0f99e223899d29808769bb8f9e189b", "node_id": "C_kwDOAAsO6NoAKDgwY2JhYTNiOWYwZjk5ZTIyMzg5OWQyOTgwODc2OWJiOGY5ZTE4OWI", "commit": {"author": {"name": "Antoni Boucher", "email": "bouanto@zoho.com", "date": "2022-06-07T12:50:13Z"}, "committer": {"name": "Antoni Boucher", "email": "bouanto@zoho.com", "date": "2022-06-07T12:50:13Z"}, "message": "Remove unused macro rule", "tree": {"sha": "3bac58c2b3fe542e68bf15b6f3f3f0b5754b0810", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3bac58c2b3fe542e68bf15b6f3f3f0b5754b0810"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/80cbaa3b9f0f99e223899d29808769bb8f9e189b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/80cbaa3b9f0f99e223899d29808769bb8f9e189b", "html_url": "https://github.com/rust-lang/rust/commit/80cbaa3b9f0f99e223899d29808769bb8f9e189b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/80cbaa3b9f0f99e223899d29808769bb8f9e189b/comments", "author": {"login": "antoyo", "id": 584972, "node_id": "MDQ6VXNlcjU4NDk3Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/584972?v=4", "gravatar_id": "", "url": "https://api.github.com/users/antoyo", "html_url": "https://github.com/antoyo", "followers_url": "https://api.github.com/users/antoyo/followers", "following_url": "https://api.github.com/users/antoyo/following{/other_user}", "gists_url": "https://api.github.com/users/antoyo/gists{/gist_id}", "starred_url": "https://api.github.com/users/antoyo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/antoyo/subscriptions", "organizations_url": "https://api.github.com/users/antoyo/orgs", "repos_url": "https://api.github.com/users/antoyo/repos", "events_url": "https://api.github.com/users/antoyo/events{/privacy}", "received_events_url": "https://api.github.com/users/antoyo/received_events", "type": "User", "site_admin": false}, "committer": {"login": "antoyo", "id": 584972, "node_id": "MDQ6VXNlcjU4NDk3Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/584972?v=4", "gravatar_id": "", "url": "https://api.github.com/users/antoyo", "html_url": "https://github.com/antoyo", "followers_url": "https://api.github.com/users/antoyo/followers", "following_url": "https://api.github.com/users/antoyo/following{/other_user}", "gists_url": "https://api.github.com/users/antoyo/gists{/gist_id}", "starred_url": "https://api.github.com/users/antoyo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/antoyo/subscriptions", "organizations_url": "https://api.github.com/users/antoyo/orgs", "repos_url": "https://api.github.com/users/antoyo/repos", "events_url": "https://api.github.com/users/antoyo/events{/privacy}", "received_events_url": "https://api.github.com/users/antoyo/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3fac982e07a859ffedba37865bcc6c508e47893b", "url": "https://api.github.com/repos/rust-lang/rust/commits/3fac982e07a859ffedba37865bcc6c508e47893b", "html_url": "https://github.com/rust-lang/rust/commit/3fac982e07a859ffedba37865bcc6c508e47893b"}], "stats": {"total": 3, "additions": 0, "deletions": 3}, "files": [{"sha": "2401f3350186ebb07c68556b70b74f965cff17f6", "filename": "compiler/rustc_codegen_gcc/src/intrinsic/simd.rs", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/80cbaa3b9f0f99e223899d29808769bb8f9e189b/compiler%2Frustc_codegen_gcc%2Fsrc%2Fintrinsic%2Fsimd.rs", "raw_url": "https://github.com/rust-lang/rust/raw/80cbaa3b9f0f99e223899d29808769bb8f9e189b/compiler%2Frustc_codegen_gcc%2Fsrc%2Fintrinsic%2Fsimd.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_gcc%2Fsrc%2Fintrinsic%2Fsimd.rs?ref=80cbaa3b9f0f99e223899d29808769bb8f9e189b", "patch": "@@ -449,9 +449,6 @@ pub fn generic_simd_intrinsic<'a, 'gcc, 'tcx>(bx: &mut Builder<'a, 'gcc, 'tcx>,\n         args: &[OperandRef<'tcx, RValue<'gcc>>],\n     ) -> Result<RValue<'gcc>, ()> {\n         macro_rules! emit_error {\n-            ($msg: tt) => {\n-                emit_error!($msg, )\n-            };\n             ($msg: tt, $($fmt: tt)*) => {\n                 span_invalid_monomorphization_error(\n                     bx.sess(), span,"}]}