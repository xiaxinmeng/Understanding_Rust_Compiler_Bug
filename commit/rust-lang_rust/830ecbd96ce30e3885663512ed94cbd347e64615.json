{"sha": "830ecbd96ce30e3885663512ed94cbd347e64615", "node_id": "C_kwDOAAsO6NoAKDgzMGVjYmQ5NmNlMzBlMzg4NTY2MzUxMmVkOTRjYmQzNDdlNjQ2MTU", "commit": {"author": {"name": "Matt Brubeck", "email": "mbrubeck@limpet.net", "date": "2021-09-28T19:50:38Z"}, "committer": {"name": "Matt Brubeck", "email": "mbrubeck@limpet.net", "date": "2021-09-28T19:50:38Z"}, "message": "Optimize is_sorted for Range and RangeInclusive\n\nThe `Step` trait guarantees that `Range<impl Step>` yields items in\nsorted order.  We can override the `Iterator::is_sorted` method based on\nthis guarantee, as we already do for `Iterator::min` and `max`.", "tree": {"sha": "1f5824c8a5ecec64f0d2d9fe54192b1f22dd669f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1f5824c8a5ecec64f0d2d9fe54192b1f22dd669f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/830ecbd96ce30e3885663512ed94cbd347e64615", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/830ecbd96ce30e3885663512ed94cbd347e64615", "html_url": "https://github.com/rust-lang/rust/commit/830ecbd96ce30e3885663512ed94cbd347e64615", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/830ecbd96ce30e3885663512ed94cbd347e64615/comments", "author": {"login": "mbrubeck", "id": 5920, "node_id": "MDQ6VXNlcjU5MjA=", "avatar_url": "https://avatars.githubusercontent.com/u/5920?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mbrubeck", "html_url": "https://github.com/mbrubeck", "followers_url": "https://api.github.com/users/mbrubeck/followers", "following_url": "https://api.github.com/users/mbrubeck/following{/other_user}", "gists_url": "https://api.github.com/users/mbrubeck/gists{/gist_id}", "starred_url": "https://api.github.com/users/mbrubeck/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mbrubeck/subscriptions", "organizations_url": "https://api.github.com/users/mbrubeck/orgs", "repos_url": "https://api.github.com/users/mbrubeck/repos", "events_url": "https://api.github.com/users/mbrubeck/events{/privacy}", "received_events_url": "https://api.github.com/users/mbrubeck/received_events", "type": "User", "site_admin": false}, "committer": {"login": "mbrubeck", "id": 5920, "node_id": "MDQ6VXNlcjU5MjA=", "avatar_url": "https://avatars.githubusercontent.com/u/5920?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mbrubeck", "html_url": "https://github.com/mbrubeck", "followers_url": "https://api.github.com/users/mbrubeck/followers", "following_url": "https://api.github.com/users/mbrubeck/following{/other_user}", "gists_url": "https://api.github.com/users/mbrubeck/gists{/gist_id}", "starred_url": "https://api.github.com/users/mbrubeck/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mbrubeck/subscriptions", "organizations_url": "https://api.github.com/users/mbrubeck/orgs", "repos_url": "https://api.github.com/users/mbrubeck/repos", "events_url": "https://api.github.com/users/mbrubeck/events{/privacy}", "received_events_url": "https://api.github.com/users/mbrubeck/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8f8092cc32ec171becef8ceacec7dbb06c5d7d7e", "url": "https://api.github.com/repos/rust-lang/rust/commits/8f8092cc32ec171becef8ceacec7dbb06c5d7d7e", "html_url": "https://github.com/rust-lang/rust/commit/8f8092cc32ec171becef8ceacec7dbb06c5d7d7e"}], "stats": {"total": 10, "additions": 10, "deletions": 0}, "files": [{"sha": "0f835689699fc110626c214a5a565396669a7f59", "filename": "library/core/src/iter/range.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/830ecbd96ce30e3885663512ed94cbd347e64615/library%2Fcore%2Fsrc%2Fiter%2Frange.rs", "raw_url": "https://github.com/rust-lang/rust/raw/830ecbd96ce30e3885663512ed94cbd347e64615/library%2Fcore%2Fsrc%2Fiter%2Frange.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fiter%2Frange.rs?ref=830ecbd96ce30e3885663512ed94cbd347e64615", "patch": "@@ -672,6 +672,11 @@ impl<A: Step> Iterator for ops::Range<A> {\n         self.next_back()\n     }\n \n+    #[inline]\n+    fn is_sorted(self) -> bool {\n+        true\n+    }\n+\n     #[inline]\n     #[doc(hidden)]\n     unsafe fn __iterator_get_unchecked(&mut self, idx: usize) -> Self::Item\n@@ -1095,6 +1100,11 @@ impl<A: Step> Iterator for ops::RangeInclusive<A> {\n     fn max(mut self) -> Option<A> {\n         self.next_back()\n     }\n+\n+    #[inline]\n+    fn is_sorted(self) -> bool {\n+        true\n+    }\n }\n \n #[stable(feature = \"inclusive_range\", since = \"1.26.0\")]"}]}