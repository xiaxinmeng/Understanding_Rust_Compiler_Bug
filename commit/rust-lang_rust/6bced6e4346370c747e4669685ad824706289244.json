{"sha": "6bced6e4346370c747e4669685ad824706289244", "node_id": "C_kwDOAAsO6NoAKDZiY2VkNmU0MzQ2MzcwYzc0N2U0NjY5Njg1YWQ4MjQ3MDYyODkyNDQ", "commit": {"author": {"name": "bjorn3", "email": "17426603+bjorn3@users.noreply.github.com", "date": "2023-03-24T09:24:17Z"}, "committer": {"name": "bjorn3", "email": "17426603+bjorn3@users.noreply.github.com", "date": "2023-03-24T09:24:17Z"}, "message": "Ignore Inlined spans when computing caller location\n\ncc rust-lang/rust#109307", "tree": {"sha": "a499214013f81f0b279775607763bd5b43b99060", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a499214013f81f0b279775607763bd5b43b99060"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6bced6e4346370c747e4669685ad824706289244", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6bced6e4346370c747e4669685ad824706289244", "html_url": "https://github.com/rust-lang/rust/commit/6bced6e4346370c747e4669685ad824706289244", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6bced6e4346370c747e4669685ad824706289244/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5c9f0073ee64d48d3e449df28c3e29a325ed23a9", "url": "https://api.github.com/repos/rust-lang/rust/commits/5c9f0073ee64d48d3e449df28c3e29a325ed23a9", "html_url": "https://github.com/rust-lang/rust/commit/5c9f0073ee64d48d3e449df28c3e29a325ed23a9"}], "stats": {"total": 6, "additions": 5, "deletions": 1}, "files": [{"sha": "de36d6ce44dc206479ceca53fabdfa940753fa64", "filename": "src/common.rs", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/6bced6e4346370c747e4669685ad824706289244/src%2Fcommon.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6bced6e4346370c747e4669685ad824706289244/src%2Fcommon.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcommon.rs?ref=6bced6e4346370c747e4669685ad824706289244", "patch": "@@ -431,7 +431,11 @@ impl<'tcx> FunctionCx<'_, '_, 'tcx> {\n \n     // Note: must be kept in sync with get_caller_location from cg_ssa\n     pub(crate) fn get_caller_location(&mut self, mut source_info: mir::SourceInfo) -> CValue<'tcx> {\n-        let span_to_caller_location = |fx: &mut FunctionCx<'_, '_, 'tcx>, span: Span| {\n+        let span_to_caller_location = |fx: &mut FunctionCx<'_, '_, 'tcx>, mut span: Span| {\n+            // Remove `Inlined` marks as they pollute `expansion_cause`.\n+            while span.is_inlined() {\n+                span.remove_mark();\n+            }\n             let topmost = span.ctxt().outer_expn().expansion_cause().unwrap_or(span);\n             let caller = fx.tcx.sess.source_map().lookup_char_pos(topmost.lo());\n             let const_loc = fx.tcx.const_caller_location(("}]}