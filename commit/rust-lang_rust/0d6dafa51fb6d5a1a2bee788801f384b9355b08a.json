{"sha": "0d6dafa51fb6d5a1a2bee788801f384b9355b08a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBkNmRhZmE1MWZiNmQ1YTFhMmJlZTc4ODgwMWYzODRiOTM1NWIwOGE=", "commit": {"author": {"name": "John Gallagher", "email": "jgallagher@bignerdranch.com", "date": "2014-10-03T05:09:01Z"}, "committer": {"name": "John Gallagher", "email": "jgallagher@bignerdranch.com", "date": "2014-10-11T00:30:32Z"}, "message": "Add `while let` to the reference\n\nCloses #17687", "tree": {"sha": "7d9fda2472e7892c485a352fa9a35178cbba9f87", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7d9fda2472e7892c485a352fa9a35178cbba9f87"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0d6dafa51fb6d5a1a2bee788801f384b9355b08a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0d6dafa51fb6d5a1a2bee788801f384b9355b08a", "html_url": "https://github.com/rust-lang/rust/commit/0d6dafa51fb6d5a1a2bee788801f384b9355b08a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0d6dafa51fb6d5a1a2bee788801f384b9355b08a/comments", "author": {"login": "hydhknn", "id": 62813007, "node_id": "MDQ6VXNlcjYyODEzMDA3", "avatar_url": "https://avatars.githubusercontent.com/u/62813007?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hydhknn", "html_url": "https://github.com/hydhknn", "followers_url": "https://api.github.com/users/hydhknn/followers", "following_url": "https://api.github.com/users/hydhknn/following{/other_user}", "gists_url": "https://api.github.com/users/hydhknn/gists{/gist_id}", "starred_url": "https://api.github.com/users/hydhknn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hydhknn/subscriptions", "organizations_url": "https://api.github.com/users/hydhknn/orgs", "repos_url": "https://api.github.com/users/hydhknn/repos", "events_url": "https://api.github.com/users/hydhknn/events{/privacy}", "received_events_url": "https://api.github.com/users/hydhknn/received_events", "type": "User", "site_admin": false}, "committer": {"login": "hydhknn", "id": 62813007, "node_id": "MDQ6VXNlcjYyODEzMDA3", "avatar_url": "https://avatars.githubusercontent.com/u/62813007?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hydhknn", "html_url": "https://github.com/hydhknn", "followers_url": "https://api.github.com/users/hydhknn/followers", "following_url": "https://api.github.com/users/hydhknn/following{/other_user}", "gists_url": "https://api.github.com/users/hydhknn/gists{/gist_id}", "starred_url": "https://api.github.com/users/hydhknn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hydhknn/subscriptions", "organizations_url": "https://api.github.com/users/hydhknn/orgs", "repos_url": "https://api.github.com/users/hydhknn/repos", "events_url": "https://api.github.com/users/hydhknn/events{/privacy}", "received_events_url": "https://api.github.com/users/hydhknn/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b5db97b354e5b1e1b5d99f513a40493f223fddae", "url": "https://api.github.com/repos/rust-lang/rust/commits/b5db97b354e5b1e1b5d99f513a40493f223fddae", "html_url": "https://github.com/rust-lang/rust/commit/b5db97b354e5b1e1b5d99f513a40493f223fddae"}], "stats": {"total": 12, "additions": 12, "deletions": 0}, "files": [{"sha": "4ad64576e1588a01e7e53ef96bf9532407a901ae", "filename": "src/doc/reference.md", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/0d6dafa51fb6d5a1a2bee788801f384b9355b08a/src%2Fdoc%2Freference.md", "raw_url": "https://github.com/rust-lang/rust/raw/0d6dafa51fb6d5a1a2bee788801f384b9355b08a/src%2Fdoc%2Freference.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Freference.md?ref=0d6dafa51fb6d5a1a2bee788801f384b9355b08a", "patch": "@@ -3511,6 +3511,18 @@ of a condition expression it expects a refutable let statement. If the value of\n expression on the right hand side of the let statement matches the pattern, the corresponding\n block will execute, otherwise flow proceeds to the first `else` block that follows.\n \n+### While let loops\n+\n+```{.ebnf .gram}\n+while_let_expr : \"while\" \"let\" pat '=' expr '{' block '}' ;\n+```\n+\n+A `while let` loop is semantically identical to a `while` loop but in place of a\n+condition expression it expects a refutable let statement. If the value of the\n+expression on the right hand side of the let statement matches the pattern, the\n+loop body block executes and control returns to the pattern matching statement.\n+Otherwise, the while expression completes.\n+\n ### Return expressions\n \n ```{.ebnf .gram}"}]}