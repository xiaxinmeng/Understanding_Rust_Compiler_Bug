{"sha": "83ce1aad428d79ac455fa43b40e0e01b07fcf7cf", "node_id": "C_kwDOAAsO6NoAKDgzY2UxYWFkNDI4ZDc5YWM0NTVmYTQzYjQwZTBlMDFiMDdmY2Y3Y2Y", "commit": {"author": {"name": "Esteban Kuber", "email": "esteban@kuber.com.ar", "date": "2021-10-15T15:13:21Z"}, "committer": {"name": "Esteban Kuber", "email": "esteban@kuber.com.ar", "date": "2021-12-10T03:08:25Z"}, "message": "Tweak wording", "tree": {"sha": "e6eecfd26be39db8d1c57468d5c1103ceedfb8ba", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e6eecfd26be39db8d1c57468d5c1103ceedfb8ba"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/83ce1aad428d79ac455fa43b40e0e01b07fcf7cf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/83ce1aad428d79ac455fa43b40e0e01b07fcf7cf", "html_url": "https://github.com/rust-lang/rust/commit/83ce1aad428d79ac455fa43b40e0e01b07fcf7cf", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/83ce1aad428d79ac455fa43b40e0e01b07fcf7cf/comments", "author": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "committer": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ff13ad710f7332079d4ea494f5b0bced68d41429", "url": "https://api.github.com/repos/rust-lang/rust/commits/ff13ad710f7332079d4ea494f5b0bced68d41429", "html_url": "https://github.com/rust-lang/rust/commit/ff13ad710f7332079d4ea494f5b0bced68d41429"}], "stats": {"total": 100, "additions": 50, "deletions": 50}, "files": [{"sha": "1176f131107e63e776475a2c86fa56d0a0a8c888", "filename": "compiler/rustc_infer/src/infer/error_reporting/nice_region_error/static_impl_trait.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/83ce1aad428d79ac455fa43b40e0e01b07fcf7cf/compiler%2Frustc_infer%2Fsrc%2Finfer%2Ferror_reporting%2Fnice_region_error%2Fstatic_impl_trait.rs", "raw_url": "https://github.com/rust-lang/rust/raw/83ce1aad428d79ac455fa43b40e0e01b07fcf7cf/compiler%2Frustc_infer%2Fsrc%2Finfer%2Ferror_reporting%2Fnice_region_error%2Fstatic_impl_trait.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_infer%2Fsrc%2Finfer%2Ferror_reporting%2Fnice_region_error%2Fstatic_impl_trait.rs?ref=83ce1aad428d79ac455fa43b40e0e01b07fcf7cf", "patch": "@@ -76,7 +76,7 @@ impl<'a, 'tcx> NiceRegionError<'a, 'tcx> {\n                     err.span_label(\n                         cause.span,\n                         &format!(\n-                            \"...is captured and required to live as long as `'static` here \\\n+                            \"...is used and required to live as long as `'static` here \\\n                              because of an implicit lifetime bound on the {}\",\n                             match ctxt.assoc_item.container {\n                                 AssocItemContainer::TraitContainer(id) =>\n@@ -158,15 +158,15 @@ impl<'a, 'tcx> NiceRegionError<'a, 'tcx> {\n \n         // We try to make the output have fewer overlapping spans if possible.\n         let require_msg = if spans.is_empty() {\n-            \"...is captured and required to live as long as `'static` here\"\n+            \"...is used and required to live as long as `'static` here\"\n         } else {\n             \"...and is required to live as long as `'static` here\"\n         };\n         let require_span =\n             if sup_origin.span().overlaps(return_sp) { sup_origin.span() } else { return_sp };\n \n         for span in &spans {\n-            err.span_label(*span, \"...is captured here...\");\n+            err.span_label(*span, \"...is used here...\");\n         }\n \n         if spans.iter().any(|sp| sp.overlaps(return_sp) || *sp > return_sp) {"}, {"sha": "33f1e0f05b252810821306c839e3383e3ce9f54a", "filename": "src/test/ui/associated-types/cache/project-fn-ret-contravariant.transmute.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/83ce1aad428d79ac455fa43b40e0e01b07fcf7cf/src%2Ftest%2Fui%2Fassociated-types%2Fcache%2Fproject-fn-ret-contravariant.transmute.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/83ce1aad428d79ac455fa43b40e0e01b07fcf7cf/src%2Ftest%2Fui%2Fassociated-types%2Fcache%2Fproject-fn-ret-contravariant.transmute.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fassociated-types%2Fcache%2Fproject-fn-ret-contravariant.transmute.stderr?ref=83ce1aad428d79ac455fa43b40e0e01b07fcf7cf", "patch": "@@ -4,7 +4,7 @@ error[E0759]: `x` has lifetime `'a` but it needs to satisfy a `'static` lifetime\n LL | fn baz<'a,'b>(x: &'a u32) -> &'static u32 {\n    |                  ------- this data with lifetime `'a`...\n LL |    bar(foo, x)\n-   |        ^^^  - ...is captured and required to live as long as `'static` here\n+   |        ^^^  - ...is used and required to live as long as `'static` here\n \n error: aborting due to previous error\n "}, {"sha": "609627aaa9ef0a9f47d9fee6b18f19f70f55cdad", "filename": "src/test/ui/associated-types/cache/project-fn-ret-invariant.transmute.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/83ce1aad428d79ac455fa43b40e0e01b07fcf7cf/src%2Ftest%2Fui%2Fassociated-types%2Fcache%2Fproject-fn-ret-invariant.transmute.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/83ce1aad428d79ac455fa43b40e0e01b07fcf7cf/src%2Ftest%2Fui%2Fassociated-types%2Fcache%2Fproject-fn-ret-invariant.transmute.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fassociated-types%2Fcache%2Fproject-fn-ret-invariant.transmute.stderr?ref=83ce1aad428d79ac455fa43b40e0e01b07fcf7cf", "patch": "@@ -5,7 +5,7 @@ LL | fn baz<'a, 'b>(x: Type<'a>) -> Type<'static> {\n    |                   -------- this data with lifetime `'a`...\n ...\n LL |     bar(foo, x)\n-   |         ^^^  - ...is captured and required to live as long as `'static` here\n+   |         ^^^  - ...is used and required to live as long as `'static` here\n    |\n note: `'static` lifetime requirement introduced by the return type\n   --> $DIR/project-fn-ret-invariant.rs:45:37"}, {"sha": "e23277543c66f3b14e5ba4cc5a40b7dd1826d28a", "filename": "src/test/ui/async-await/issues/issue-62097.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/83ce1aad428d79ac455fa43b40e0e01b07fcf7cf/src%2Ftest%2Fui%2Fasync-await%2Fissues%2Fissue-62097.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/83ce1aad428d79ac455fa43b40e0e01b07fcf7cf/src%2Ftest%2Fui%2Fasync-await%2Fissues%2Fissue-62097.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fasync-await%2Fissues%2Fissue-62097.stderr?ref=83ce1aad428d79ac455fa43b40e0e01b07fcf7cf", "patch": "@@ -4,7 +4,7 @@ error[E0759]: `self` has an anonymous lifetime `'_` but it needs to satisfy a `'\n LL |     pub async fn run_dummy_fn(&self) {\n    |                               ^^^^^ this data with an anonymous lifetime `'_`...\n LL |         foo(|| self.bar()).await;\n-   |         --- ...is captured and required to live as long as `'static` here\n+   |         --- ...is used and required to live as long as `'static` here\n    |\n note: `'static` lifetime requirement introduced by this bound\n   --> $DIR/issue-62097.rs:4:19"}, {"sha": "eb7d12e290cb670c16425044529a86b0db939d62", "filename": "src/test/ui/async-await/issues/issue-72312.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/83ce1aad428d79ac455fa43b40e0e01b07fcf7cf/src%2Ftest%2Fui%2Fasync-await%2Fissues%2Fissue-72312.rs", "raw_url": "https://github.com/rust-lang/rust/raw/83ce1aad428d79ac455fa43b40e0e01b07fcf7cf/src%2Ftest%2Fui%2Fasync-await%2Fissues%2Fissue-72312.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fasync-await%2Fissues%2Fissue-72312.rs?ref=83ce1aad428d79ac455fa43b40e0e01b07fcf7cf", "patch": "@@ -11,7 +11,7 @@ impl Problem {\n         //~^ NOTE this data with an anonymous lifetime `'_`\n         //~| NOTE in this expansion of desugaring of `async` block or function\n         require_static(async move { //~ NOTE ...and is required to live as long as `'static` here\n-            &self; //~ NOTE ...is captured here...\n+            &self; //~ NOTE ...is used here...\n         });\n     }\n }"}, {"sha": "798f755765cc144bac14a62a570d8ed63fa26869", "filename": "src/test/ui/async-await/issues/issue-72312.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/83ce1aad428d79ac455fa43b40e0e01b07fcf7cf/src%2Ftest%2Fui%2Fasync-await%2Fissues%2Fissue-72312.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/83ce1aad428d79ac455fa43b40e0e01b07fcf7cf/src%2Ftest%2Fui%2Fasync-await%2Fissues%2Fissue-72312.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fasync-await%2Fissues%2Fissue-72312.stderr?ref=83ce1aad428d79ac455fa43b40e0e01b07fcf7cf", "patch": "@@ -5,7 +5,7 @@ LL |     pub async fn start(&self) {\n    |                        ^^^^^ this data with an anonymous lifetime `'_`...\n ...\n LL |             &self;\n-   |             ----- ...is captured here...\n+   |             ----- ...is used here...\n    |\n note: ...and is required to live as long as `'static` here\n   --> $DIR/issue-72312.rs:13:9"}, {"sha": "2307572cc3f24ca05e608c92f7e8581bc5e60851", "filename": "src/test/ui/impl-header-lifetime-elision/dyn-trait.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/83ce1aad428d79ac455fa43b40e0e01b07fcf7cf/src%2Ftest%2Fui%2Fimpl-header-lifetime-elision%2Fdyn-trait.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/83ce1aad428d79ac455fa43b40e0e01b07fcf7cf/src%2Ftest%2Fui%2Fimpl-header-lifetime-elision%2Fdyn-trait.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimpl-header-lifetime-elision%2Fdyn-trait.stderr?ref=83ce1aad428d79ac455fa43b40e0e01b07fcf7cf", "patch": "@@ -4,7 +4,7 @@ error[E0759]: `x` has lifetime `'a` but it needs to satisfy a `'static` lifetime\n LL | fn with_dyn_debug_static<'a>(x: Box<dyn Debug + 'a>) {\n    |                                 ------------------- this data with lifetime `'a`...\n LL |     static_val(x);\n-   |                ^ ...is captured here...\n+   |                ^ ...is used here...\n    |\n note: ...and is required to live as long as `'static` here\n   --> $DIR/dyn-trait.rs:20:5"}, {"sha": "de5d3b612c9c2648fd48b71aab6ce7656a46e837", "filename": "src/test/ui/impl-trait/must_outlive_least_region_or_bound.stderr", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/83ce1aad428d79ac455fa43b40e0e01b07fcf7cf/src%2Ftest%2Fui%2Fimpl-trait%2Fmust_outlive_least_region_or_bound.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/83ce1aad428d79ac455fa43b40e0e01b07fcf7cf/src%2Ftest%2Fui%2Fimpl-trait%2Fmust_outlive_least_region_or_bound.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimpl-trait%2Fmust_outlive_least_region_or_bound.stderr?ref=83ce1aad428d79ac455fa43b40e0e01b07fcf7cf", "patch": "@@ -28,7 +28,7 @@ error[E0759]: `x` has an anonymous lifetime `'_` but it needs to satisfy a `'sta\n   --> $DIR/must_outlive_least_region_or_bound.rs:9:46\n    |\n LL | fn elided2(x: &i32) -> impl Copy + 'static { x }\n-   |               ----                           ^ ...is captured here...\n+   |               ----                           ^ ...is used here...\n    |               |\n    |               this data with an anonymous lifetime `'_`...\n    |\n@@ -50,7 +50,7 @@ error[E0759]: `x` has lifetime `'a` but it needs to satisfy a `'static` lifetime\n   --> $DIR/must_outlive_least_region_or_bound.rs:11:55\n    |\n LL | fn explicit2<'a>(x: &'a i32) -> impl Copy + 'static { x }\n-   |                     -------                           ^ ...is captured here...\n+   |                     -------                           ^ ...is used here...\n    |                     |\n    |                     this data with lifetime `'a`...\n    |\n@@ -80,7 +80,7 @@ error[E0759]: `x` has an anonymous lifetime `'_` but it needs to satisfy a `'sta\n   --> $DIR/must_outlive_least_region_or_bound.rs:24:65\n    |\n LL | fn elided5(x: &i32) -> (Box<dyn Debug>, impl Debug) { (Box::new(x), x) }\n-   |               ---- this data with an anonymous lifetime `'_`... ^ ...is captured and required to live as long as `'static` here\n+   |               ---- this data with an anonymous lifetime `'_`... ^ ...is used and required to live as long as `'static` here\n    |\n help: to declare that the trait object captures data from argument `x`, you can add an explicit `'_` lifetime bound\n    |\n@@ -95,7 +95,7 @@ error[E0759]: `x` has lifetime `'a` but it needs to satisfy a `'static` lifetime\n   --> $DIR/must_outlive_least_region_or_bound.rs:29:69\n    |\n LL | fn with_bound<'a>(x: &'a i32) -> impl LifetimeTrait<'a> + 'static { x }\n-   |                      ------- this data with lifetime `'a`...        ^ ...is captured here...\n+   |                      ------- this data with lifetime `'a`...        ^ ...is used here...\n    |\n note: ...and is required to live as long as `'static` here\n   --> $DIR/must_outlive_least_region_or_bound.rs:29:34\n@@ -136,12 +136,12 @@ error[E0759]: `x` has an anonymous lifetime `'_` but it needs to satisfy a `'sta\n   --> $DIR/must_outlive_least_region_or_bound.rs:16:50\n    |\n LL | fn elided3(x: &i32) -> Box<dyn Debug> { Box::new(x) }\n-   |               ----                               ^ ...is captured and required to live as long as `'static` here\n+   |               ----                               ^ ...is used and required to live as long as `'static` here\n    |               |\n    |               this data with an anonymous lifetime `'_`...\n    |\n note: `'static` lifetime requirement introduced by the return type\n-  --> $DIR/must_outlive_least_region_or_bound.rs:14:28\n+  --> $DIR/must_outlive_least_region_or_bound.rs:16:28\n    |\n LL | fn elided3(x: &i32) -> Box<dyn Debug> { Box::new(x) }\n    |                            ^^^^^^^^^    ----------- because of this returned expression\n@@ -156,12 +156,12 @@ error[E0759]: `x` has lifetime `'a` but it needs to satisfy a `'static` lifetime\n   --> $DIR/must_outlive_least_region_or_bound.rs:18:59\n    |\n LL | fn explicit3<'a>(x: &'a i32) -> Box<dyn Debug> { Box::new(x) }\n-   |                     -------                               ^ ...is captured and required to live as long as `'static` here\n+   |                     -------                               ^ ...is used and required to live as long as `'static` here\n    |                     |\n    |                     this data with lifetime `'a`...\n    |\n note: `'static` lifetime requirement introduced by the return type\n-  --> $DIR/must_outlive_least_region_or_bound.rs:16:37\n+  --> $DIR/must_outlive_least_region_or_bound.rs:18:37\n    |\n LL | fn explicit3<'a>(x: &'a i32) -> Box<dyn Debug> { Box::new(x) }\n    |                                     ^^^^^^^^^    ----------- because of this returned expression\n@@ -176,12 +176,12 @@ error[E0759]: `x` has an anonymous lifetime `'_` but it needs to satisfy a `'sta\n   --> $DIR/must_outlive_least_region_or_bound.rs:20:60\n    |\n LL | fn elided4(x: &i32) -> Box<dyn Debug + 'static> { Box::new(x) }\n-   |               ----                                         ^ ...is captured and required to live as long as `'static` here\n+   |               ----                                         ^ ...is used and required to live as long as `'static` here\n    |               |\n    |               this data with an anonymous lifetime `'_`...\n    |\n note: `'static` lifetime requirement introduced by the return type\n-  --> $DIR/must_outlive_least_region_or_bound.rs:18:40\n+  --> $DIR/must_outlive_least_region_or_bound.rs:20:40\n    |\n LL | fn elided4(x: &i32) -> Box<dyn Debug + 'static> { Box::new(x) }\n    |                                        ^^^^^^^    ----------- because of this returned expression\n@@ -200,10 +200,10 @@ error[E0759]: `x` has lifetime `'a` but it needs to satisfy a `'static` lifetime\n   --> $DIR/must_outlive_least_region_or_bound.rs:22:69\n    |\n LL | fn explicit4<'a>(x: &'a i32) -> Box<dyn Debug + 'static> { Box::new(x) }\n-   |                     ------- this data with lifetime `'a`...         ^ ...is captured and required to live as long as `'static` here\n+   |                     ------- this data with lifetime `'a`...         ^ ...is used and required to live as long as `'static` here\n    |\n note: `'static` lifetime requirement introduced by the return type\n-  --> $DIR/must_outlive_least_region_or_bound.rs:20:49\n+  --> $DIR/must_outlive_least_region_or_bound.rs:22:49\n    |\n LL | fn explicit4<'a>(x: &'a i32) -> Box<dyn Debug + 'static> { Box::new(x) }\n    |                                                 ^^^^^^^    ----------- because of this returned expression"}, {"sha": "53405a660f861c47b824a886a1f2f01a6413fe4e", "filename": "src/test/ui/issues/issue-16922.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/83ce1aad428d79ac455fa43b40e0e01b07fcf7cf/src%2Ftest%2Fui%2Fissues%2Fissue-16922.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/83ce1aad428d79ac455fa43b40e0e01b07fcf7cf/src%2Ftest%2Fui%2Fissues%2Fissue-16922.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-16922.stderr?ref=83ce1aad428d79ac455fa43b40e0e01b07fcf7cf", "patch": "@@ -4,7 +4,7 @@ error[E0759]: `value` has an anonymous lifetime `'_` but it needs to satisfy a `\n LL | fn foo<T: Any>(value: &T) -> Box<dyn Any> {\n    |                       -- this data with an anonymous lifetime `'_`...\n LL |     Box::new(value) as Box<dyn Any>\n-   |              ^^^^^ ...is captured and required to live as long as `'static` here\n+   |              ^^^^^ ...is used and required to live as long as `'static` here\n    |\n help: to declare that the trait object captures data from argument `value`, you can add an explicit `'_` lifetime bound\n    |"}, {"sha": "4a6378b84f1e6f9b3dbb3c65412957eaab82eea9", "filename": "src/test/ui/nll/user-annotations/constant-in-expr-inherent-1.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/83ce1aad428d79ac455fa43b40e0e01b07fcf7cf/src%2Ftest%2Fui%2Fnll%2Fuser-annotations%2Fconstant-in-expr-inherent-1.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/83ce1aad428d79ac455fa43b40e0e01b07fcf7cf/src%2Ftest%2Fui%2Fnll%2Fuser-annotations%2Fconstant-in-expr-inherent-1.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fuser-annotations%2Fconstant-in-expr-inherent-1.stderr?ref=83ce1aad428d79ac455fa43b40e0e01b07fcf7cf", "patch": "@@ -4,7 +4,7 @@ error[E0759]: `fn` parameter has lifetime `'a` but it needs to satisfy a `'stati\n LL | fn foo<'a>(_: &'a u32) -> &'static u32 {\n    |               ------- this data with lifetime `'a`...\n LL |     <Foo<'a>>::C\n-   |     ^^^^^^^^^^^^ ...is captured and required to live as long as `'static` here\n+   |     ^^^^^^^^^^^^ ...is used and required to live as long as `'static` here\n \n error: aborting due to previous error\n "}, {"sha": "1708700f77aaa21e005c4c19003156efb0eb655e", "filename": "src/test/ui/object-lifetime/object-lifetime-default-from-box-error.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/83ce1aad428d79ac455fa43b40e0e01b07fcf7cf/src%2Ftest%2Fui%2Fobject-lifetime%2Fobject-lifetime-default-from-box-error.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/83ce1aad428d79ac455fa43b40e0e01b07fcf7cf/src%2Ftest%2Fui%2Fobject-lifetime%2Fobject-lifetime-default-from-box-error.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fobject-lifetime%2Fobject-lifetime-default-from-box-error.stderr?ref=83ce1aad428d79ac455fa43b40e0e01b07fcf7cf", "patch": "@@ -5,7 +5,7 @@ LL | fn load(ss: &mut SomeStruct) -> Box<dyn SomeTrait> {\n    |             --------------- this data with an anonymous lifetime `'_`...\n ...\n LL |     ss.r\n-   |     ^^^^ ...is captured and required to live as long as `'static` here\n+   |     ^^^^ ...is used and required to live as long as `'static` here\n    |\n note: `'static` lifetime requirement introduced by the return type\n   --> $DIR/object-lifetime-default-from-box-error.rs:14:37"}, {"sha": "d8932c067acd863f39e49aedcba529c6ee444684", "filename": "src/test/ui/regions/region-object-lifetime-in-coercion.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/83ce1aad428d79ac455fa43b40e0e01b07fcf7cf/src%2Ftest%2Fui%2Fregions%2Fregion-object-lifetime-in-coercion.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/83ce1aad428d79ac455fa43b40e0e01b07fcf7cf/src%2Ftest%2Fui%2Fregions%2Fregion-object-lifetime-in-coercion.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fregions%2Fregion-object-lifetime-in-coercion.stderr?ref=83ce1aad428d79ac455fa43b40e0e01b07fcf7cf", "patch": "@@ -4,7 +4,7 @@ error[E0759]: `v` has an anonymous lifetime `'_` but it needs to satisfy a `'sta\n LL | fn a(v: &[u8]) -> Box<dyn Foo + 'static> {\n    |         ----- this data with an anonymous lifetime `'_`...\n LL |     let x: Box<dyn Foo + 'static> = Box::new(v);\n-   |                                              ^ ...is captured and required to live as long as `'static` here\n+   |                                              ^ ...is used and required to live as long as `'static` here\n    |\n help: consider changing the trait object's explicit `'static` bound to the lifetime of argument `v`\n    |\n@@ -21,7 +21,7 @@ error[E0759]: `v` has an anonymous lifetime `'_` but it needs to satisfy a `'sta\n LL | fn b(v: &[u8]) -> Box<dyn Foo + 'static> {\n    |         ----- this data with an anonymous lifetime `'_`...\n LL |     Box::new(v)\n-   |              ^ ...is captured and required to live as long as `'static` here\n+   |              ^ ...is used and required to live as long as `'static` here\n    |\n note: `'static` lifetime requirement introduced by the return type\n   --> $DIR/region-object-lifetime-in-coercion.rs:12:33\n@@ -46,7 +46,7 @@ LL | fn c(v: &[u8]) -> Box<dyn Foo> {\n    |         ----- this data with an anonymous lifetime `'_`...\n ...\n LL |     Box::new(v)\n-   |              ^ ...is captured and required to live as long as `'static` here\n+   |              ^ ...is used and required to live as long as `'static` here\n    |\n note: `'static` lifetime requirement introduced by the return type\n   --> $DIR/region-object-lifetime-in-coercion.rs:16:23"}, {"sha": "3453c6458f1da4d4d3f85a188623da0b9e98e98a", "filename": "src/test/ui/regions/regions-addr-of-self.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/83ce1aad428d79ac455fa43b40e0e01b07fcf7cf/src%2Ftest%2Fui%2Fregions%2Fregions-addr-of-self.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/83ce1aad428d79ac455fa43b40e0e01b07fcf7cf/src%2Ftest%2Fui%2Fregions%2Fregions-addr-of-self.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fregions%2Fregions-addr-of-self.stderr?ref=83ce1aad428d79ac455fa43b40e0e01b07fcf7cf", "patch": "@@ -4,7 +4,7 @@ error[E0759]: `self` has an anonymous lifetime `'_` but it needs to satisfy a `'\n LL |     pub fn chase_cat(&mut self) {\n    |                      --------- this data with an anonymous lifetime `'_`...\n LL |         let p: &'static mut usize = &mut self.cats_chased;\n-   |                                     ^^^^^^^^^^^^^^^^^^^^^ ...is captured and required to live as long as `'static` here\n+   |                                     ^^^^^^^^^^^^^^^^^^^^^ ...is used and required to live as long as `'static` here\n \n error: aborting due to previous error\n "}, {"sha": "4153f4f29bc2836fcfbc817fb58d5770498d9128", "filename": "src/test/ui/regions/regions-close-object-into-object-2.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/83ce1aad428d79ac455fa43b40e0e01b07fcf7cf/src%2Ftest%2Fui%2Fregions%2Fregions-close-object-into-object-2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/83ce1aad428d79ac455fa43b40e0e01b07fcf7cf/src%2Ftest%2Fui%2Fregions%2Fregions-close-object-into-object-2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fregions%2Fregions-close-object-into-object-2.stderr?ref=83ce1aad428d79ac455fa43b40e0e01b07fcf7cf", "patch": "@@ -4,7 +4,7 @@ error[E0759]: `v` has lifetime `'a` but it needs to satisfy a `'static` lifetime\n LL | fn g<'a, T: 'static>(v: Box<dyn A<T> + 'a>) -> Box<dyn X + 'static> {\n    |                         ------------------ this data with lifetime `'a`...\n LL |     Box::new(B(&*v)) as Box<dyn X>\n-   |                ^^^ ...is captured and required to live as long as `'static` here\n+   |                ^^^ ...is used and required to live as long as `'static` here\n    |\n note: `'static` lifetime requirement introduced by the return type\n   --> $DIR/regions-close-object-into-object-2.rs:8:60"}, {"sha": "2ea4b431b38dab0a6424d3bef5695cd30eadf2e6", "filename": "src/test/ui/regions/regions-close-object-into-object-4.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/83ce1aad428d79ac455fa43b40e0e01b07fcf7cf/src%2Ftest%2Fui%2Fregions%2Fregions-close-object-into-object-4.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/83ce1aad428d79ac455fa43b40e0e01b07fcf7cf/src%2Ftest%2Fui%2Fregions%2Fregions-close-object-into-object-4.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fregions%2Fregions-close-object-into-object-4.stderr?ref=83ce1aad428d79ac455fa43b40e0e01b07fcf7cf", "patch": "@@ -4,7 +4,7 @@ error[E0759]: `v` has lifetime `'a` but it needs to satisfy a `'static` lifetime\n LL | fn i<'a, T, U>(v: Box<dyn A<U>+'a>) -> Box<dyn X + 'static> {\n    |                   ---------------- this data with lifetime `'a`...\n LL |     Box::new(B(&*v)) as Box<dyn X>\n-   |                ^^^ ...is captured and required to live as long as `'static` here\n+   |                ^^^ ...is used and required to live as long as `'static` here\n    |\n note: `'static` lifetime requirement introduced by the return type\n   --> $DIR/regions-close-object-into-object-4.rs:8:52"}, {"sha": "2ebe874da9350298c0d1cb942cda478afd3ad43d", "filename": "src/test/ui/regions/regions-proc-bound-capture.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/83ce1aad428d79ac455fa43b40e0e01b07fcf7cf/src%2Ftest%2Fui%2Fregions%2Fregions-proc-bound-capture.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/83ce1aad428d79ac455fa43b40e0e01b07fcf7cf/src%2Ftest%2Fui%2Fregions%2Fregions-proc-bound-capture.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fregions%2Fregions-proc-bound-capture.stderr?ref=83ce1aad428d79ac455fa43b40e0e01b07fcf7cf", "patch": "@@ -5,7 +5,7 @@ LL | fn static_proc(x: &isize) -> Box<dyn FnMut() -> (isize) + 'static> {\n    |                   ------ this data with an anonymous lifetime `'_`...\n LL |     // This is illegal, because the region bound on `proc` is 'static.\n LL |     Box::new(move || { *x })\n-   |              ^^^^^^^^^^^^^^ ...is captured and required to live as long as `'static` here\n+   |              ^^^^^^^^^^^^^^ ...is used and required to live as long as `'static` here\n    |\n note: `'static` lifetime requirement introduced by the return type\n   --> $DIR/regions-proc-bound-capture.rs:7:59"}, {"sha": "63d291ed7cdb95e24fa76fbaa85475d746b29122", "filename": "src/test/ui/suggestions/impl-on-dyn-trait-with-implicit-static-bound-needing-more-suggestions.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/83ce1aad428d79ac455fa43b40e0e01b07fcf7cf/src%2Ftest%2Fui%2Fsuggestions%2Fimpl-on-dyn-trait-with-implicit-static-bound-needing-more-suggestions.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/83ce1aad428d79ac455fa43b40e0e01b07fcf7cf/src%2Ftest%2Fui%2Fsuggestions%2Fimpl-on-dyn-trait-with-implicit-static-bound-needing-more-suggestions.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fimpl-on-dyn-trait-with-implicit-static-bound-needing-more-suggestions.stderr?ref=83ce1aad428d79ac455fa43b40e0e01b07fcf7cf", "patch": "@@ -22,7 +22,7 @@ error[E0772]: `val` has lifetime `'a` but calling `use_self` introduces an impli\n LL |     fn use_it<'a>(val: Box<dyn ObjectTrait<Assoc = i32> + 'a>) -> &'a () {\n    |                        -------------------------------------- this data with lifetime `'a`...\n LL |         val.use_self()\n-   |             ^^^^^^^^ ...is captured and required to live as long as `'static` here\n+   |             ^^^^^^^^ ...is used and required to live as long as `'static` here\n    |\n note: the used `impl` has a `'static` requirement\n   --> $DIR/impl-on-dyn-trait-with-implicit-static-bound-needing-more-suggestions.rs:60:30"}, {"sha": "55a1bbf18ab9fbfee2ad49631fbcf3dd7d0e07f7", "filename": "src/test/ui/suggestions/impl-on-dyn-trait-with-implicit-static-bound.stderr", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/83ce1aad428d79ac455fa43b40e0e01b07fcf7cf/src%2Ftest%2Fui%2Fsuggestions%2Fimpl-on-dyn-trait-with-implicit-static-bound.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/83ce1aad428d79ac455fa43b40e0e01b07fcf7cf/src%2Ftest%2Fui%2Fsuggestions%2Fimpl-on-dyn-trait-with-implicit-static-bound.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fimpl-on-dyn-trait-with-implicit-static-bound.stderr?ref=83ce1aad428d79ac455fa43b40e0e01b07fcf7cf", "patch": "@@ -4,7 +4,7 @@ error[E0759]: `val` has lifetime `'a` but it needs to satisfy a `'static` lifeti\n LL |     fn use_it<'a, T>(val: &'a dyn ObjectTrait<T>) -> impl OtherTrait<'a> + 'a {\n    |                           ---------------------- this data with lifetime `'a`...\n LL |         val.use_self::<T>()\n-   |             ^^^^^^^^ ...is captured and required to live as long as `'static` here\n+   |             ^^^^^^^^ ...is used and required to live as long as `'static` here\n    |\n note: the used `impl` has a `'static` requirement\n   --> $DIR/impl-on-dyn-trait-with-implicit-static-bound.rs:14:32\n@@ -24,7 +24,7 @@ error[E0772]: `val` has lifetime `'a` but calling `use_self` introduces an impli\n LL |     fn use_it<'a>(val: &'a dyn ObjectTrait) -> impl OtherTrait<'a> + 'a {\n    |                        ------------------- this data with lifetime `'a`...\n LL |         val.use_self()\n-   |             ^^^^^^^^ ...is captured and required to live as long as `'static` here because of an implicit lifetime bound on the inherent `impl`\n+   |             ^^^^^^^^ ...is used and required to live as long as `'static` here because of an implicit lifetime bound on the inherent `impl`\n    |\n note: the used `impl` has a `'static` requirement\n   --> $DIR/impl-on-dyn-trait-with-implicit-static-bound.rs:64:14\n@@ -44,7 +44,7 @@ error[E0759]: `val` has lifetime `'a` but it needs to satisfy a `'static` lifeti\n LL |     fn use_it<'a>(val: &'a dyn ObjectTrait) -> impl OtherTrait<'a> {\n    |                        ------------------- this data with lifetime `'a`...\n LL |         val.use_self()\n-   |             ^^^^^^^^ ...is captured and required to live as long as `'static` here\n+   |             ^^^^^^^^ ...is used and required to live as long as `'static` here\n    |\n note: the used `impl` has a `'static` requirement\n   --> $DIR/impl-on-dyn-trait-with-implicit-static-bound.rs:85:26\n@@ -69,7 +69,7 @@ error[E0759]: `val` has lifetime `'a` but it needs to satisfy a `'static` lifeti\n LL |     fn use_it<'a>(val: &'a dyn ObjectTrait) -> impl OtherTrait<'a> + 'a {\n    |                        ------------------- this data with lifetime `'a`...\n LL |         MyTrait::use_self(val)\n-   |                           ^^^ ...is captured here...\n+   |                           ^^^ ...is used here...\n    |\n note: ...and is required to live as long as `'static` here\n   --> $DIR/impl-on-dyn-trait-with-implicit-static-bound.rs:108:9\n@@ -95,7 +95,7 @@ error[E0772]: `val` has lifetime `'a` but calling `use_self` introduces an impli\n LL |     fn use_it<'a>(val: &'a dyn ObjectTrait) -> &'a () {\n    |                        ------------------- this data with lifetime `'a`...\n LL |         val.use_self()\n-   |             ^^^^^^^^ ...is captured and required to live as long as `'static` here\n+   |             ^^^^^^^^ ...is used and required to live as long as `'static` here\n    |\n note: the used `impl` has a `'static` requirement\n   --> $DIR/impl-on-dyn-trait-with-implicit-static-bound.rs:31:26\n@@ -115,7 +115,7 @@ error[E0772]: `val` has lifetime `'a` but calling `use_self` introduces an impli\n LL |     fn use_it<'a>(val: &'a Box<dyn ObjectTrait + 'a>) -> &'a () {\n    |                        ----------------------------- this data with lifetime `'a`...\n LL |         val.use_self()\n-   |             ^^^^^^^^ ...is captured and required to live as long as `'static` here\n+   |             ^^^^^^^^ ...is used and required to live as long as `'static` here\n    |\n note: the used `impl` has a `'static` requirement\n   --> $DIR/impl-on-dyn-trait-with-implicit-static-bound.rs:48:30"}, {"sha": "a5b50634c71ea28103dbce76f4adef2b038b4a7f", "filename": "src/test/ui/suggestions/lifetimes/trait-object-nested-in-impl-trait.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/83ce1aad428d79ac455fa43b40e0e01b07fcf7cf/src%2Ftest%2Fui%2Fsuggestions%2Flifetimes%2Ftrait-object-nested-in-impl-trait.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/83ce1aad428d79ac455fa43b40e0e01b07fcf7cf/src%2Ftest%2Fui%2Fsuggestions%2Flifetimes%2Ftrait-object-nested-in-impl-trait.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Flifetimes%2Ftrait-object-nested-in-impl-trait.stderr?ref=83ce1aad428d79ac455fa43b40e0e01b07fcf7cf", "patch": "@@ -7,7 +7,7 @@ LL |     fn iter(&self) -> impl Iterator<Item = Box<dyn Foo>> {\n LL |             remaining: self.0.iter(),\n    |                        ------ ^^^^\n    |                        |\n-   |                        ...is captured here...\n+   |                        ...is used here...\n    |\n note: ...and is required to live as long as `'static` here\n   --> $DIR/trait-object-nested-in-impl-trait.rs:27:23\n@@ -32,7 +32,7 @@ LL |     fn iter(&self) -> impl Iterator<Item = Box<dyn Foo>> + '_ {\n LL |             remaining: self.0.iter(),\n    |                        ------ ^^^^\n    |                        |\n-   |                        ...is captured here...\n+   |                        ...is used here...\n    |\n note: ...and is required to live as long as `'static` here\n   --> $DIR/trait-object-nested-in-impl-trait.rs:38:23\n@@ -53,7 +53,7 @@ LL |     fn iter<'a>(&'a self) -> impl Iterator<Item = Box<dyn Foo>> + 'a {\n LL |             remaining: self.0.iter(),\n    |                        ------ ^^^^\n    |                        |\n-   |                        ...is captured here...\n+   |                        ...is used here...\n    |\n note: ...and is required to live as long as `'static` here\n   --> $DIR/trait-object-nested-in-impl-trait.rs:49:30\n@@ -74,7 +74,7 @@ LL |     fn iter<'a>(&'a self) -> impl Iterator<Item = Box<dyn Foo>> {\n LL |             remaining: self.0.iter(),\n    |                        ------ ^^^^\n    |                        |\n-   |                        ...is captured here...\n+   |                        ...is used here...\n    |\n note: ...and is required to live as long as `'static` here\n   --> $DIR/trait-object-nested-in-impl-trait.rs:60:30"}, {"sha": "d4bb9350b0b4e6e064dc9acf222cbf7c36fadddb", "filename": "src/test/ui/traits/trait-upcasting/type-checking-test-4.stderr", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/83ce1aad428d79ac455fa43b40e0e01b07fcf7cf/src%2Ftest%2Fui%2Ftraits%2Ftrait-upcasting%2Ftype-checking-test-4.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/83ce1aad428d79ac455fa43b40e0e01b07fcf7cf/src%2Ftest%2Fui%2Ftraits%2Ftrait-upcasting%2Ftype-checking-test-4.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftraits%2Ftrait-upcasting%2Ftype-checking-test-4.stderr?ref=83ce1aad428d79ac455fa43b40e0e01b07fcf7cf", "patch": "@@ -36,10 +36,10 @@ LL | fn test_wrong3<'a>(x: &dyn Foo<'a>) -> Option<&'static u32> {\n LL |     let y = x as &dyn Bar<'_, '_>;\n    |             -             ^^\n    |             |\n-   |             ...is captured here...\n+   |             ...is used here...\n LL |\n LL |     y.get_b() // ERROR\n-   |     - ...is captured here...\n+   |     - ...is used here...\n    |\n note: ...and is required to live as long as `'static` here\n   --> $DIR/type-checking-test-4.rs:29:5\n@@ -61,7 +61,7 @@ error[E0759]: `x` has lifetime `'a` but it needs to satisfy a `'static` lifetime\n LL | fn test_wrong4<'a>(x: &dyn Foo<'a>) -> Option<&'static u32> {\n    |                       ------------ this data with lifetime `'a`...\n LL |     <_ as Bar>::get_b(x) // ERROR\n-   |     ^^^^^^^^^^^^^^^^^ ...is captured and required to live as long as `'static` here\n+   |     ^^^^^^^^^^^^^^^^^ ...is used and required to live as long as `'static` here\n    |\n note: `'static` lifetime requirement introduced by the return type\n   --> $DIR/type-checking-test-4.rs:32:48\n@@ -77,7 +77,7 @@ error[E0759]: `x` has lifetime `'a` but it needs to satisfy a `'static` lifetime\n LL | fn test_wrong5<'a>(x: &dyn Foo<'a>) -> Option<&'static u32> {\n    |                       ------------ this data with lifetime `'a`...\n LL |     <_ as Bar<'_, '_>>::get_b(x) // ERROR\n-   |     ----------^^------------- ...is captured and required to live as long as `'static` here\n+   |     ----------^^------------- ...is used and required to live as long as `'static` here\n    |\n note: `'static` lifetime requirement introduced by the return type\n   --> $DIR/type-checking-test-4.rs:37:48\n@@ -95,13 +95,13 @@ LL | fn test_wrong6<'a>(x: &dyn Foo<'a>) -> Option<&'static u32> {\n LL |     let y = x as &dyn Bar<'_, '_>;\n    |             -             ^^\n    |             |\n-   |             ...is captured here...\n+   |             ...is used here...\n LL |\n LL |     y.get_b(); // ERROR\n-   |     - ...is captured here...\n+   |     - ...is used here...\n LL |     let z = y;\n LL |     z.get_b() // ERROR\n-   |     - ...is captured here...\n+   |     - ...is used here...\n    |\n note: ...and is required to live as long as `'static` here\n   --> $DIR/type-checking-test-4.rs:47:5"}, {"sha": "f4285a0f98e7cae08b457a6c34e5f1cde009b3c9", "filename": "src/test/ui/underscore-lifetime/dyn-trait-underscore.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/83ce1aad428d79ac455fa43b40e0e01b07fcf7cf/src%2Ftest%2Fui%2Funderscore-lifetime%2Fdyn-trait-underscore.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/83ce1aad428d79ac455fa43b40e0e01b07fcf7cf/src%2Ftest%2Fui%2Funderscore-lifetime%2Fdyn-trait-underscore.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Funderscore-lifetime%2Fdyn-trait-underscore.stderr?ref=83ce1aad428d79ac455fa43b40e0e01b07fcf7cf", "patch": "@@ -7,7 +7,7 @@ LL |     //                      ^^^^^^^^^^^^^^^^^^^^^ bound *here* defaults to\n LL |     Box::new(items.iter())\n    |              ----- ^^^^\n    |              |\n-   |              ...is captured and required to live as long as `'static` here\n+   |              ...is used and required to live as long as `'static` here\n    |\n note: `'static` lifetime requirement introduced by the return type\n   --> $DIR/dyn-trait-underscore.rs:6:29"}]}