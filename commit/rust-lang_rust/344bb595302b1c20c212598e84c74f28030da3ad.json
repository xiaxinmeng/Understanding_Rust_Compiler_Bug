{"sha": "344bb595302b1c20c212598e84c74f28030da3ad", "node_id": "C_kwDOAAsO6NoAKDM0NGJiNTk1MzAyYjFjMjBjMjEyNTk4ZTg0Yzc0ZjI4MDMwZGEzYWQ", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2022-02-02T06:11:09Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-02-02T06:11:09Z"}, "message": "Rollup merge of #93560 - steffahn:a_typo, r=petrochenkov\n\nFix two incorrect \"it's\" (typos in comments)\n\nFound one of these while reading the documentation online. The other came up because it's in the same file.", "tree": {"sha": "ccf15ae68cfe680aa65f11310e7006faf94401ae", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ccf15ae68cfe680aa65f11310e7006faf94401ae"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/344bb595302b1c20c212598e84c74f28030da3ad", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJh+iB9CRBK7hj4Ov3rIwAA6fUIAKaFwe3cvUZMm6mzksvwAgGP\n9D0gBohd2am/wI1IuLeMswfmT2AaN7kmwQ5mfQt2WASuerTVM/Flirrk9JXMt+iy\nBZD+BQc0zziaMJZr+OAhLF3t3X4QZcrfCd5Lirqvje1sPIfNrjYbXI4nUY7BEvHy\nkDjO/XcLwiKAvh+E6IqwxthxeSm/iBipsTTeiJsSy4FZ/dNnwxxNCFvcX/XW9nyp\nqWZLKxfv3wRJkMQFNNcTsCwaPD3mwF6XiHAhzzlZ30tcNlrIlnK8XHV9Z0fHsu+m\niZ50Qo8u3YczFX8Ih+IPGHmgaTJpH4KP3T1+w4DuqVVmNRNuE8cQPHEZUe5YLd4=\n=06sJ\n-----END PGP SIGNATURE-----\n", "payload": "tree ccf15ae68cfe680aa65f11310e7006faf94401ae\nparent c483b9f1bff855143bc257bfd089ee4b5b634bcf\nparent 63b12aea27a5a6cd7a792660bbdeacb6c7eafbef\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1643782269 +0100\ncommitter GitHub <noreply@github.com> 1643782269 +0100\n\nRollup merge of #93560 - steffahn:a_typo, r=petrochenkov\n\nFix two incorrect \"it's\" (typos in comments)\n\nFound one of these while reading the documentation online. The other came up because it's in the same file.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/344bb595302b1c20c212598e84c74f28030da3ad", "html_url": "https://github.com/rust-lang/rust/commit/344bb595302b1c20c212598e84c74f28030da3ad", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/344bb595302b1c20c212598e84c74f28030da3ad/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c483b9f1bff855143bc257bfd089ee4b5b634bcf", "url": "https://api.github.com/repos/rust-lang/rust/commits/c483b9f1bff855143bc257bfd089ee4b5b634bcf", "html_url": "https://github.com/rust-lang/rust/commit/c483b9f1bff855143bc257bfd089ee4b5b634bcf"}, {"sha": "63b12aea27a5a6cd7a792660bbdeacb6c7eafbef", "url": "https://api.github.com/repos/rust-lang/rust/commits/63b12aea27a5a6cd7a792660bbdeacb6c7eafbef", "html_url": "https://github.com/rust-lang/rust/commit/63b12aea27a5a6cd7a792660bbdeacb6c7eafbef"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "e9e6d61331077e4575757b67cb93953e19eda54c", "filename": "compiler/rustc_middle/src/mir/mod.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/344bb595302b1c20c212598e84c74f28030da3ad/compiler%2Frustc_middle%2Fsrc%2Fmir%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/344bb595302b1c20c212598e84c74f28030da3ad/compiler%2Frustc_middle%2Fsrc%2Fmir%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fmir%2Fmod.rs?ref=344bb595302b1c20c212598e84c74f28030da3ad", "patch": "@@ -1642,7 +1642,7 @@ pub enum FakeReadCause {\n     ForMatchedPlace(Option<DefId>),\n \n     /// A fake read of the RefWithinGuard version of a bind-by-value variable\n-    /// in a match guard to ensure that it's value hasn't change by the time\n+    /// in a match guard to ensure that its value hasn't change by the time\n     /// we create the OutsideGuard version.\n     ForGuardBinding,\n \n@@ -2939,7 +2939,7 @@ impl Location {\n         let mut visited = FxHashSet::default();\n \n         while let Some(block) = queue.pop() {\n-            // If we haven't visited this block before, then make sure we visit it's predecessors.\n+            // If we haven't visited this block before, then make sure we visit its predecessors.\n             if visited.insert(block) {\n                 queue.extend(predecessors[block].iter().cloned());\n             } else {"}]}