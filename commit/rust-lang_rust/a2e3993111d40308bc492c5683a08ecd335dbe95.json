{"sha": "a2e3993111d40308bc492c5683a08ecd335dbe95", "node_id": "MDY6Q29tbWl0NzI0NzEyOmEyZTM5OTMxMTFkNDAzMDhiYzQ5MmM1NjgzYTA4ZWNkMzM1ZGJlOTU=", "commit": {"author": {"name": "Richo Healey", "email": "richo@psych0tik.net", "date": "2015-01-10T04:20:15Z"}, "committer": {"name": "Richo Healey", "email": "richo@psych0tik.net", "date": "2015-01-12T05:14:31Z"}, "message": "powerpc: Add libstd utils", "tree": {"sha": "1dc67aa797968e6dcd0a00f93b84e220135594aa", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1dc67aa797968e6dcd0a00f93b84e220135594aa"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a2e3993111d40308bc492c5683a08ecd335dbe95", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a2e3993111d40308bc492c5683a08ecd335dbe95", "html_url": "https://github.com/rust-lang/rust/commit/a2e3993111d40308bc492c5683a08ecd335dbe95", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a2e3993111d40308bc492c5683a08ecd335dbe95/comments", "author": {"login": "richo", "id": 476418, "node_id": "MDQ6VXNlcjQ3NjQxOA==", "avatar_url": "https://avatars.githubusercontent.com/u/476418?v=4", "gravatar_id": "", "url": "https://api.github.com/users/richo", "html_url": "https://github.com/richo", "followers_url": "https://api.github.com/users/richo/followers", "following_url": "https://api.github.com/users/richo/following{/other_user}", "gists_url": "https://api.github.com/users/richo/gists{/gist_id}", "starred_url": "https://api.github.com/users/richo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/richo/subscriptions", "organizations_url": "https://api.github.com/users/richo/orgs", "repos_url": "https://api.github.com/users/richo/repos", "events_url": "https://api.github.com/users/richo/events{/privacy}", "received_events_url": "https://api.github.com/users/richo/received_events", "type": "User", "site_admin": false}, "committer": {"login": "richo", "id": 476418, "node_id": "MDQ6VXNlcjQ3NjQxOA==", "avatar_url": "https://avatars.githubusercontent.com/u/476418?v=4", "gravatar_id": "", "url": "https://api.github.com/users/richo", "html_url": "https://github.com/richo", "followers_url": "https://api.github.com/users/richo/followers", "following_url": "https://api.github.com/users/richo/following{/other_user}", "gists_url": "https://api.github.com/users/richo/gists{/gist_id}", "starred_url": "https://api.github.com/users/richo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/richo/subscriptions", "organizations_url": "https://api.github.com/users/richo/orgs", "repos_url": "https://api.github.com/users/richo/repos", "events_url": "https://api.github.com/users/richo/events{/privacy}", "received_events_url": "https://api.github.com/users/richo/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c055d995261203f9869399120a4174824481a305", "url": "https://api.github.com/repos/rust-lang/rust/commits/c055d995261203f9869399120a4174824481a305", "html_url": "https://github.com/rust-lang/rust/commit/c055d995261203f9869399120a4174824481a305"}], "stats": {"total": 19, "additions": 15, "deletions": 4}, "files": [{"sha": "9f7b9668bce53ba9a7a897961fd00522133fbcd5", "filename": "src/libstd/os.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/a2e3993111d40308bc492c5683a08ecd335dbe95/src%2Flibstd%2Fos.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a2e3993111d40308bc492c5683a08ecd335dbe95/src%2Flibstd%2Fos.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fos.rs?ref=a2e3993111d40308bc492c5683a08ecd335dbe95", "patch": "@@ -1422,6 +1422,11 @@ mod arch_consts {\n     pub const ARCH: &'static str = \"mipsel\";\n }\n \n+#[cfg(target_arch = \"powerpc\")]\n+mod arch_consts {\n+    pub const ARCH: &'static str = \"powerpc\";\n+}\n+\n #[cfg(test)]\n mod tests {\n     use prelude::v1::*;"}, {"sha": "68ba7e1dd29e6716ab313ae576dc141df0bfc1ff", "filename": "src/libstd/rand/os.rs", "status": "modified", "additions": 10, "deletions": 4, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/a2e3993111d40308bc492c5683a08ecd335dbe95/src%2Flibstd%2Frand%2Fos.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a2e3993111d40308bc492c5683a08ecd335dbe95/src%2Flibstd%2Frand%2Fos.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Frand%2Fos.rs?ref=a2e3993111d40308bc492c5683a08ecd335dbe95", "patch": "@@ -32,7 +32,8 @@ mod imp {\n               any(target_arch = \"x86_64\",\n                   target_arch = \"x86\",\n                   target_arch = \"arm\",\n-                  target_arch = \"aarch64\")))]\n+                  target_arch = \"aarch64\",\n+                  target_arch = \"powerpc\")))]\n     fn getrandom(buf: &mut [u8]) -> libc::c_long {\n         extern \"C\" {\n             fn syscall(number: libc::c_long, ...) -> libc::c_long;\n@@ -44,6 +45,8 @@ mod imp {\n         const NR_GETRANDOM: libc::c_long = 355;\n         #[cfg(any(target_arch = \"arm\", target_arch = \"aarch64\"))]\n         const NR_GETRANDOM: libc::c_long = 384;\n+        #[cfg(target_arch = \"powerpc\")]\n+        const NR_GETRANDOM: libc::c_long = 384;\n \n         unsafe {\n             syscall(NR_GETRANDOM, buf.as_mut_ptr(), buf.len(), 0u)\n@@ -54,7 +57,8 @@ mod imp {\n                   any(target_arch = \"x86_64\",\n                       target_arch = \"x86\",\n                       target_arch = \"arm\",\n-                      target_arch = \"aarch64\"))))]\n+                      target_arch = \"aarch64\",\n+                      target_arch = \"powerpc\"))))]\n     fn getrandom(_buf: &mut [u8]) -> libc::c_long { -1 }\n \n     fn getrandom_fill_bytes(v: &mut [u8]) {\n@@ -91,7 +95,8 @@ mod imp {\n               any(target_arch = \"x86_64\",\n                   target_arch = \"x86\",\n                   target_arch = \"arm\",\n-                  target_arch = \"aarch64\")))]\n+                  target_arch = \"aarch64\",\n+                  target_arch = \"powerpc\")))]\n     fn is_getrandom_available() -> bool {\n         use sync::atomic::{AtomicBool, ATOMIC_BOOL_INIT, Ordering};\n \n@@ -119,7 +124,8 @@ mod imp {\n                   any(target_arch = \"x86_64\",\n                       target_arch = \"x86\",\n                       target_arch = \"arm\",\n-                      target_arch = \"aarch64\"))))]\n+                      target_arch = \"aarch64\",\n+                      target_arch = \"powerpc\"))))]\n     fn is_getrandom_available() -> bool { false }\n \n     /// A random number generator that retrieves randomness straight from"}]}