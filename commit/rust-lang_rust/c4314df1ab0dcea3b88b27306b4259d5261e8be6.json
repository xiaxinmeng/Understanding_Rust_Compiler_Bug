{"sha": "c4314df1ab0dcea3b88b27306b4259d5261e8be6", "node_id": "MDY6Q29tbWl0NzI0NzEyOmM0MzE0ZGYxYWIwZGNlYTNiODhiMjczMDZiNDI1OWQ1MjYxZThiZTY=", "commit": {"author": {"name": "Nick Cameron", "email": "nrc@ncameron.org", "date": "2018-02-04T22:28:58Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2018-02-04T22:28:58Z"}, "message": "Merge pull request #2412 from topecongiro/issue-2399\n\nDo not reorder items with '#[macro_use]'", "tree": {"sha": "6da76df8116fb1cf5fa3ed8b394b4edea114e941", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6da76df8116fb1cf5fa3ed8b394b4edea114e941"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c4314df1ab0dcea3b88b27306b4259d5261e8be6", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJad4kqCRBK7hj4Ov3rIwAAdHIIAGECnSHwjnfq0LoDIR85WayL\nPmlDb6Y222pS+p/4gGs6/viXB5dzV7vEgvpokOM3Z5jYdZ9k5ikXjfmWEueRb5tf\n0v5201gHkLzHgtMUxd0t0byb6a9wFe1fKztSDAQPTRQlWu3PJ38XE1N0x2OoWy1/\n8d9nFZE2oRUoWecK9uLVITvcqsZH2fwVBuudEvjQB4j40yOryvmTyCS+8SAIsLD9\n8ssq01EcQcYlyS6GfTTuMfmvTPH84tYEalFQhHPz1TSj4cbi5POv14QtoMy8YDta\nq59fxy0qyzeCcOT5ui42xx/nrJIo8phDeUMDeM1wHc2EPuHtgHhU2G6L/axYlpU=\n=6kxC\n-----END PGP SIGNATURE-----\n", "payload": "tree 6da76df8116fb1cf5fa3ed8b394b4edea114e941\nparent c45c20378fbedc34814c122c399556866432073e\nparent 3bb0a2a7495011868a52cdbb848f87e59bdc98d8\nauthor Nick Cameron <nrc@ncameron.org> 1517783338 +1300\ncommitter GitHub <noreply@github.com> 1517783338 +1300\n\nMerge pull request #2412 from topecongiro/issue-2399\n\nDo not reorder items with '#[macro_use]'"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c4314df1ab0dcea3b88b27306b4259d5261e8be6", "html_url": "https://github.com/rust-lang/rust/commit/c4314df1ab0dcea3b88b27306b4259d5261e8be6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c4314df1ab0dcea3b88b27306b4259d5261e8be6/comments", "author": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c45c20378fbedc34814c122c399556866432073e", "url": "https://api.github.com/repos/rust-lang/rust/commits/c45c20378fbedc34814c122c399556866432073e", "html_url": "https://github.com/rust-lang/rust/commit/c45c20378fbedc34814c122c399556866432073e"}, {"sha": "3bb0a2a7495011868a52cdbb848f87e59bdc98d8", "url": "https://api.github.com/repos/rust-lang/rust/commits/3bb0a2a7495011868a52cdbb848f87e59bdc98d8", "html_url": "https://github.com/rust-lang/rust/commit/3bb0a2a7495011868a52cdbb848f87e59bdc98d8"}], "stats": {"total": 68, "additions": 64, "deletions": 4}, "files": [{"sha": "c28eed561a54a1469a931f491f866d11b5d2161d", "filename": "src/visitor.rs", "status": "modified", "additions": 20, "deletions": 4, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/c4314df1ab0dcea3b88b27306b4259d5261e8be6/src%2Fvisitor.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c4314df1ab0dcea3b88b27306b4259d5261e8be6/src%2Fvisitor.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvisitor.rs?ref=c4314df1ab0dcea3b88b27306b4259d5261e8be6", "patch": "@@ -11,7 +11,7 @@\n use std::cmp;\n \n use syntax::{ast, visit};\n-use syntax::attr::HasAttrs;\n+use syntax::attr::{self, HasAttrs};\n use syntax::codemap::{self, BytePos, CodeMap, Pos, Span};\n use syntax::parse::ParseSess;\n \n@@ -49,11 +49,15 @@ fn is_mod_decl(item: &ast::Item) -> bool {\n     }\n }\n \n+fn contains_macro_use_attr(attrs: &[ast::Attribute], span: Span) -> bool {\n+    attr::contains_name(&filter_inline_attrs(attrs, span), \"macro_use\")\n+}\n+\n /// Returns true for `mod foo;` without any inline attributes.\n /// We cannot reorder modules with attributes because doing so can break the code.\n /// e.g. `#[macro_use]`.\n fn is_mod_decl_without_attr(item: &ast::Item) -> bool {\n-    is_mod_decl(item) && filter_inline_attrs(&item.attrs, item.span()).is_empty()\n+    is_mod_decl(item) && !contains_macro_use_attr(&item.attrs, item.span())\n }\n \n fn is_use_item(item: &ast::Item) -> bool {\n@@ -63,13 +67,21 @@ fn is_use_item(item: &ast::Item) -> bool {\n     }\n }\n \n+fn is_use_item_without_attr(item: &ast::Item) -> bool {\n+    is_use_item(item) && !contains_macro_use_attr(&item.attrs, item.span())\n+}\n+\n fn is_extern_crate(item: &ast::Item) -> bool {\n     match item.node {\n         ast::ItemKind::ExternCrate(..) => true,\n         _ => false,\n     }\n }\n \n+fn is_extern_crate_without_attr(item: &ast::Item) -> bool {\n+    is_extern_crate(item) && !contains_macro_use_attr(&item.attrs, item.span())\n+}\n+\n /// Creates a string slice corresponding to the specified span.\n pub struct SnippetProvider<'a> {\n     /// A pointer to the content of the file we are formatting.\n@@ -676,11 +688,15 @@ impl<'b, 'a: 'b> FmtVisitor<'a> {\n             // subsequent items that have the same item kind to be reordered within\n             // `format_imports`. Otherwise, just format the next item for output.\n             {\n-                try_reorder_items_with!(reorder_imports, reorder_imports_in_group, is_use_item);\n+                try_reorder_items_with!(\n+                    reorder_imports,\n+                    reorder_imports_in_group,\n+                    is_use_item_without_attr\n+                );\n                 try_reorder_items_with!(\n                     reorder_extern_crates,\n                     reorder_extern_crates_in_group,\n-                    is_extern_crate\n+                    is_extern_crate_without_attr\n                 );\n                 try_reorder_items_with!(reorder_modules, reorder_modules, is_mod_decl_without_attr);\n             }"}, {"sha": "6bef132e5c322599cf2d4ccc52fb882316599853", "filename": "tests/source/configs/reorder_extern_crates/false.rs", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/c4314df1ab0dcea3b88b27306b4259d5261e8be6/tests%2Fsource%2Fconfigs%2Freorder_extern_crates%2Ffalse.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c4314df1ab0dcea3b88b27306b4259d5261e8be6/tests%2Fsource%2Fconfigs%2Freorder_extern_crates%2Ffalse.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Fconfigs%2Freorder_extern_crates%2Ffalse.rs?ref=c4314df1ab0dcea3b88b27306b4259d5261e8be6", "patch": "@@ -0,0 +1,11 @@\n+// rustfmt-reorder_extern_crates: false\n+\n+extern crate foo;\n+extern crate bar;\n+extern crate foobar;\n+\n+#[macro_use]\n+extern crate nom;\n+extern crate regex;\n+#[macro_use]\n+extern crate log;"}, {"sha": "bdf00f57cdada8dbb27d1dddb5dad45f164ec3ac", "filename": "tests/source/configs/reorder_extern_crates/true.rs", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/c4314df1ab0dcea3b88b27306b4259d5261e8be6/tests%2Fsource%2Fconfigs%2Freorder_extern_crates%2Ftrue.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c4314df1ab0dcea3b88b27306b4259d5261e8be6/tests%2Fsource%2Fconfigs%2Freorder_extern_crates%2Ftrue.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Fconfigs%2Freorder_extern_crates%2Ftrue.rs?ref=c4314df1ab0dcea3b88b27306b4259d5261e8be6", "patch": "@@ -0,0 +1,11 @@\n+// rustfmt-reorder_extern_crates: true\n+\n+extern crate foo;\n+extern crate bar;\n+extern crate foobar;\n+\n+#[macro_use]\n+extern crate nom;\n+extern crate regex;\n+#[macro_use]\n+extern crate log;"}, {"sha": "6bef132e5c322599cf2d4ccc52fb882316599853", "filename": "tests/target/configs/reorder_extern_crates/false.rs", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/c4314df1ab0dcea3b88b27306b4259d5261e8be6/tests%2Ftarget%2Fconfigs%2Freorder_extern_crates%2Ffalse.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c4314df1ab0dcea3b88b27306b4259d5261e8be6/tests%2Ftarget%2Fconfigs%2Freorder_extern_crates%2Ffalse.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fconfigs%2Freorder_extern_crates%2Ffalse.rs?ref=c4314df1ab0dcea3b88b27306b4259d5261e8be6", "patch": "@@ -0,0 +1,11 @@\n+// rustfmt-reorder_extern_crates: false\n+\n+extern crate foo;\n+extern crate bar;\n+extern crate foobar;\n+\n+#[macro_use]\n+extern crate nom;\n+extern crate regex;\n+#[macro_use]\n+extern crate log;"}, {"sha": "86aba38b5d11c0114442f53635106edf649f7e0c", "filename": "tests/target/configs/reorder_extern_crates/true.rs", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/c4314df1ab0dcea3b88b27306b4259d5261e8be6/tests%2Ftarget%2Fconfigs%2Freorder_extern_crates%2Ftrue.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c4314df1ab0dcea3b88b27306b4259d5261e8be6/tests%2Ftarget%2Fconfigs%2Freorder_extern_crates%2Ftrue.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fconfigs%2Freorder_extern_crates%2Ftrue.rs?ref=c4314df1ab0dcea3b88b27306b4259d5261e8be6", "patch": "@@ -0,0 +1,11 @@\n+// rustfmt-reorder_extern_crates: true\n+\n+extern crate bar;\n+extern crate foo;\n+extern crate foobar;\n+\n+#[macro_use]\n+extern crate nom;\n+extern crate regex;\n+#[macro_use]\n+extern crate log;"}]}