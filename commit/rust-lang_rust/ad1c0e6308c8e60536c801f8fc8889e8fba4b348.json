{"sha": "ad1c0e6308c8e60536c801f8fc8889e8fba4b348", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFkMWMwZTYzMDhjOGU2MDUzNmM4MDFmOGZjODg4OWU4ZmJhNGIzNDg=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2011-07-18T21:59:44Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2011-07-18T21:59:44Z"}, "message": "Reformulate x86stdcall test so it works with check-fast\n\nHopefully this puts out the burning win32 tinderbox", "tree": {"sha": "7cf14d40010e5897e96301966f6ca34bcbaa5091", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7cf14d40010e5897e96301966f6ca34bcbaa5091"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ad1c0e6308c8e60536c801f8fc8889e8fba4b348", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ad1c0e6308c8e60536c801f8fc8889e8fba4b348", "html_url": "https://github.com/rust-lang/rust/commit/ad1c0e6308c8e60536c801f8fc8889e8fba4b348", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ad1c0e6308c8e60536c801f8fc8889e8fba4b348/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b78eee873209de3933e3e30c541a6a7350b3da36", "url": "https://api.github.com/repos/rust-lang/rust/commits/b78eee873209de3933e3e30c541a6a7350b3da36", "html_url": "https://github.com/rust-lang/rust/commit/b78eee873209de3933e3e30c541a6a7350b3da36"}], "stats": {"total": 21, "additions": 10, "deletions": 11}, "files": [{"sha": "e7af50eaa3c4ccfff31987006ac38f6d1218ffc8", "filename": "src/test/run-pass/x86stdcall.rs", "status": "modified", "additions": 10, "deletions": 11, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/ad1c0e6308c8e60536c801f8fc8889e8fba4b348/src%2Ftest%2Frun-pass%2Fx86stdcall.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ad1c0e6308c8e60536c801f8fc8889e8fba4b348/src%2Ftest%2Frun-pass%2Fx86stdcall.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fx86stdcall.rs?ref=ad1c0e6308c8e60536c801f8fc8889e8fba4b348", "patch": "@@ -1,18 +1,17 @@\n // xfail-stage0\n \n #[cfg(target_os = \"win32\")]\n-mod m {\n-    native \"x86stdcall\" mod kernel32 {\n-        fn SetLastError(uint err);\n-        fn GetLastError() -> uint;\n-    }\n+native \"x86stdcall\" mod kernel32 {\n+  fn SetLastError(uint err);\n+  fn GetLastError() -> uint;\n+}\n \n-    fn main() {\n-        auto expected = 10u;\n-        kernel32::SetLastError(expected);\n-        auto actual = kernel32::GetLastError();\n-        assert expected == actual;\n-    }\n+#[cfg(target_os = \"win32\")]\n+fn main() {\n+  auto expected = 10u;\n+  kernel32::SetLastError(expected);\n+  auto actual = kernel32::GetLastError();\n+  assert expected == actual;\n }\n \n #[cfg(target_os = \"macos\")]"}]}