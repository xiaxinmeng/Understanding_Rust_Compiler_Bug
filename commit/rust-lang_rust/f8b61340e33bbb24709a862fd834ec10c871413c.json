{"sha": "f8b61340e33bbb24709a862fd834ec10c871413c", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY4YjYxMzQwZTMzYmJiMjQ3MDlhODYyZmQ4MzRlYzEwYzg3MTQxM2M=", "commit": {"author": {"name": "Scott Olson", "email": "scott@solson.me", "date": "2015-12-30T12:55:51Z"}, "committer": {"name": "Scott Olson", "email": "scott@solson.me", "date": "2015-12-30T12:55:51Z"}, "message": "Refactor MIR building for arguments.", "tree": {"sha": "152d319fd7f8c23701433c9e2f39f573454a397a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/152d319fd7f8c23701433c9e2f39f573454a397a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f8b61340e33bbb24709a862fd834ec10c871413c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f8b61340e33bbb24709a862fd834ec10c871413c", "html_url": "https://github.com/rust-lang/rust/commit/f8b61340e33bbb24709a862fd834ec10c871413c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f8b61340e33bbb24709a862fd834ec10c871413c/comments", "author": {"login": "solson", "id": 26806, "node_id": "MDQ6VXNlcjI2ODA2", "avatar_url": "https://avatars.githubusercontent.com/u/26806?v=4", "gravatar_id": "", "url": "https://api.github.com/users/solson", "html_url": "https://github.com/solson", "followers_url": "https://api.github.com/users/solson/followers", "following_url": "https://api.github.com/users/solson/following{/other_user}", "gists_url": "https://api.github.com/users/solson/gists{/gist_id}", "starred_url": "https://api.github.com/users/solson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/solson/subscriptions", "organizations_url": "https://api.github.com/users/solson/orgs", "repos_url": "https://api.github.com/users/solson/repos", "events_url": "https://api.github.com/users/solson/events{/privacy}", "received_events_url": "https://api.github.com/users/solson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "solson", "id": 26806, "node_id": "MDQ6VXNlcjI2ODA2", "avatar_url": "https://avatars.githubusercontent.com/u/26806?v=4", "gravatar_id": "", "url": "https://api.github.com/users/solson", "html_url": "https://github.com/solson", "followers_url": "https://api.github.com/users/solson/followers", "following_url": "https://api.github.com/users/solson/following{/other_user}", "gists_url": "https://api.github.com/users/solson/gists{/gist_id}", "starred_url": "https://api.github.com/users/solson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/solson/subscriptions", "organizations_url": "https://api.github.com/users/solson/orgs", "repos_url": "https://api.github.com/users/solson/repos", "events_url": "https://api.github.com/users/solson/events{/privacy}", "received_events_url": "https://api.github.com/users/solson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b65277496c8848cd6f08b55e8b413096c74b92af", "url": "https://api.github.com/repos/rust-lang/rust/commits/b65277496c8848cd6f08b55e8b413096c74b92af", "html_url": "https://github.com/rust-lang/rust/commit/b65277496c8848cd6f08b55e8b413096c74b92af"}], "stats": {"total": 32, "additions": 14, "deletions": 18}, "files": [{"sha": "8347a03cda6f72318b879e8daae6dab3c2567c0c", "filename": "src/librustc_mir/build/mod.rs", "status": "modified", "additions": 14, "deletions": 18, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/f8b61340e33bbb24709a862fd834ec10c871413c/src%2Flibrustc_mir%2Fbuild%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f8b61340e33bbb24709a862fd834ec10c871413c/src%2Flibrustc_mir%2Fbuild%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fbuild%2Fmod.rs?ref=f8b61340e33bbb24709a862fd834ec10c871413c", "patch": "@@ -138,29 +138,25 @@ impl<'a,'tcx> Builder<'a,'tcx> {\n                      -> BlockAnd<Vec<ArgDecl<'tcx>>>\n     {\n         self.in_scope(argument_extent, block, |this| {\n-            let arg_decls = {\n-                let num_implicit_args = implicit_arguments.len();\n-                let implicit_arg_decls = implicit_arguments.into_iter()\n-                                                           .map(|ty| ArgDecl { ty: ty });\n-\n-                // to start, translate the argument patterns and collect the\n-                // argument types.\n-                let explicit_arg_decls =\n-                    explicit_arguments\n-                    .into_iter()\n-                    .enumerate()\n-                    .map(|(index, (ty, pattern))| {\n-                        let lvalue = Lvalue::Arg((num_implicit_args + index) as u32);\n+            // to start, translate the argument patterns and collect the argument types.\n+            let implicits = implicit_arguments.into_iter().map(|ty| (ty, None));\n+            let explicits = explicit_arguments.into_iter().map(|(ty, pat)| (ty, Some(pat)));\n+            let arg_decls =\n+                implicits\n+                .chain(explicits)\n+                .enumerate()\n+                .map(|(index, (ty, pattern))| {\n+                    if let Some(pattern) = pattern {\n+                        let lvalue = Lvalue::Arg(index as u32);\n                         let pattern = this.hir.irrefutable_pat(pattern);\n                         unpack!(block = this.lvalue_into_pattern(block,\n                                                                  argument_extent,\n                                                                  pattern,\n                                                                  &lvalue));\n-                        ArgDecl { ty: ty }\n-                    });\n-\n-                implicit_arg_decls.chain(explicit_arg_decls).collect()\n-            };\n+                    }\n+                    ArgDecl { ty: ty }\n+                })\n+                .collect();\n \n             // start the first basic block and translate the body\n             unpack!(block = this.ast_block(&Lvalue::ReturnPointer, block, ast_block));"}]}