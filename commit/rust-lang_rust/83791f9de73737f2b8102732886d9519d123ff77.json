{"sha": "83791f9de73737f2b8102732886d9519d123ff77", "node_id": "C_kwDOAAsO6NoAKDgzNzkxZjlkZTczNzM3ZjJiODEwMjczMjg4NmQ5NTE5ZDEyM2ZmNzc", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2023-03-09T11:11:52Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2023-03-09T11:11:52Z"}, "message": "Rollup merge of #106915 - notriddle:notriddle/load-only-one-theme, r=GuillaumeGomez,jsha\n\nOnly load one CSS theme by default\n\nThis is a tweaked version of #103971 that uses `document.write` to create the stylesheet link at startup, avoiding a FOUC during page navigation. It also rebases the PR, making it work with the new hashed filenames.\n\nFixes #82614\n\nPreview: http://notriddle.com/notriddle-rustdoc-demos/load-only-one-theme-v2/std/index.html", "tree": {"sha": "806974444cbe7ed885e2d55370f06da00443b79f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/806974444cbe7ed885e2d55370f06da00443b79f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/83791f9de73737f2b8102732886d9519d123ff77", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJkCb74CRBK7hj4Ov3rIwAA3BcIAKBk2M0dHCNmKkHvJf6Kyqrn\nZY4V1rax9xr+DToYfat1jre5RtnNsvAotfZlhP7TkovVfViWXtMYPbKSyvFneL5g\ncA9CsuGlgOuZCw3wOj6hNn/TtCHX3HvwUYLFy2f77/XcSU2lPmc7fVlUgi1h4dEy\nAKFt45LnhTX5aHq8NwY2+aJbkXwFFt7GEvFjlDY6zR0sc3u0d/0zM/RkG4MHaGdg\nqIB0cwgkJpuqM7biKn4peGkjs3pN6Q2DgpUGCX78OLgnTfFDizm3pdma5dzkdGex\nXkqmu0aBIoWgpo88lAODyhQ8gBS9UojjHcZd8BYqP0BVGwA6dSSV84uko4fKeVQ=\n=USgD\n-----END PGP SIGNATURE-----\n", "payload": "tree 806974444cbe7ed885e2d55370f06da00443b79f\nparent 39f2657d1101b50f9b71ae460b762d330cc8426b\nparent 255fdb398ecaa36a274b7ef6c5760233187dc3ad\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1678360312 +0100\ncommitter GitHub <noreply@github.com> 1678360312 +0100\n\nRollup merge of #106915 - notriddle:notriddle/load-only-one-theme, r=GuillaumeGomez,jsha\n\nOnly load one CSS theme by default\n\nThis is a tweaked version of #103971 that uses `document.write` to create the stylesheet link at startup, avoiding a FOUC during page navigation. It also rebases the PR, making it work with the new hashed filenames.\n\nFixes #82614\n\nPreview: http://notriddle.com/notriddle-rustdoc-demos/load-only-one-theme-v2/std/index.html\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/83791f9de73737f2b8102732886d9519d123ff77", "html_url": "https://github.com/rust-lang/rust/commit/83791f9de73737f2b8102732886d9519d123ff77", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/83791f9de73737f2b8102732886d9519d123ff77/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "39f2657d1101b50f9b71ae460b762d330cc8426b", "url": "https://api.github.com/repos/rust-lang/rust/commits/39f2657d1101b50f9b71ae460b762d330cc8426b", "html_url": "https://github.com/rust-lang/rust/commit/39f2657d1101b50f9b71ae460b762d330cc8426b"}, {"sha": "255fdb398ecaa36a274b7ef6c5760233187dc3ad", "url": "https://api.github.com/repos/rust-lang/rust/commits/255fdb398ecaa36a274b7ef6c5760233187dc3ad", "html_url": "https://github.com/rust-lang/rust/commit/255fdb398ecaa36a274b7ef6c5760233187dc3ad"}], "stats": {"total": 165, "additions": 106, "deletions": 59}, "files": [{"sha": "ed1eb66b97c36f9235a18dc8b4877e01290c6193", "filename": "src/librustdoc/html/render/context.rs", "status": "modified", "additions": 26, "deletions": 2, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/83791f9de73737f2b8102732886d9519d123ff77/src%2Flibrustdoc%2Fhtml%2Frender%2Fcontext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/83791f9de73737f2b8102732886d9519d123ff77/src%2Flibrustdoc%2Fhtml%2Frender%2Fcontext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender%2Fcontext.rs?ref=83791f9de73737f2b8102732886d9519d123ff77", "patch": "@@ -647,11 +647,35 @@ impl<'tcx> FormatRenderer<'tcx> for Context<'tcx> {\n                      </noscript>\\\n                      <link rel=\\\"stylesheet\\\" \\\n                          href=\\\"{static_root_path}{settings_css}\\\">\\\n-                     <script defer src=\\\"{static_root_path}{settings_js}\\\"></script>\",\n+                     <script defer src=\\\"{static_root_path}{settings_js}\\\"></script>\\\n+                     <link rel=\\\"preload\\\" href=\\\"{static_root_path}{theme_light_css}\\\" \\\n+                         as=\\\"style\\\">\\\n+                     <link rel=\\\"preload\\\" href=\\\"{static_root_path}{theme_dark_css}\\\" \\\n+                         as=\\\"style\\\">\\\n+                     <link rel=\\\"preload\\\" href=\\\"{static_root_path}{theme_ayu_css}\\\" \\\n+                         as=\\\"style\\\">\",\n                     static_root_path = page.get_static_root_path(),\n                     settings_css = static_files::STATIC_FILES.settings_css,\n                     settings_js = static_files::STATIC_FILES.settings_js,\n-                )\n+                    theme_light_css = static_files::STATIC_FILES.theme_light_css,\n+                    theme_dark_css = static_files::STATIC_FILES.theme_dark_css,\n+                    theme_ayu_css = static_files::STATIC_FILES.theme_ayu_css,\n+                );\n+                // Pre-load all theme CSS files, so that switching feels seamless.\n+                //\n+                // When loading settings.html as a popover, the equivalent HTML is\n+                // generated in main.js.\n+                for file in &shared.style_files {\n+                    if let Ok(theme) = file.basename() {\n+                        write!(\n+                            buf,\n+                            \"<link rel=\\\"preload\\\" href=\\\"{root_path}{theme}{suffix}.css\\\" \\\n+                                as=\\\"style\\\">\",\n+                            root_path = page.static_root_path.unwrap_or(\"\"),\n+                            suffix = page.resource_suffix,\n+                        );\n+                    }\n+                }\n             },\n             &shared.style_files,\n         );"}, {"sha": "403b5004d6558a46f522bc442ad149701efc524c", "filename": "src/librustdoc/html/static/js/main.js", "status": "modified", "additions": 27, "deletions": 12, "changes": 39, "blob_url": "https://github.com/rust-lang/rust/blob/83791f9de73737f2b8102732886d9519d123ff77/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fjs%2Fmain.js", "raw_url": "https://github.com/rust-lang/rust/raw/83791f9de73737f2b8102732886d9519d123ff77/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fjs%2Fmain.js", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fjs%2Fmain.js?ref=83791f9de73737f2b8102732886d9519d123ff77", "patch": "@@ -1,20 +1,9 @@\n // Local js definitions:\n /* global addClass, getSettingValue, hasClass, searchState */\n-/* global onEach, onEachLazy, removeClass */\n+/* global onEach, onEachLazy, removeClass, getVar */\n \n \"use strict\";\n \n-// Get a value from the rustdoc-vars div, which is used to convey data from\n-// Rust to the JS. If there is no such element, return null.\n-function getVar(name) {\n-    const el = document.getElementById(\"rustdoc-vars\");\n-    if (el) {\n-        return el.attributes[\"data-\" + name].value;\n-    } else {\n-        return null;\n-    }\n-}\n-\n // Given a basename (e.g. \"storage\") and an extension (e.g. \".js\"), return a URL\n // for a resource under the root-path, with the resource-suffix.\n function resourcePath(basename, extension) {\n@@ -187,6 +176,15 @@ function loadCss(cssUrl) {\n     document.getElementsByTagName(\"head\")[0].appendChild(link);\n }\n \n+function preLoadCss(cssUrl) {\n+    // https://developer.mozilla.org/en-US/docs/Web/HTML/Link_types/preload\n+    const link = document.createElement(\"link\");\n+    link.href = cssUrl;\n+    link.rel = \"preload\";\n+    link.as = \"style\";\n+    document.getElementsByTagName(\"head\")[0].appendChild(link);\n+}\n+\n (function() {\n     const isHelpPage = window.location.pathname.endsWith(\"/help.html\");\n \n@@ -207,6 +205,23 @@ function loadCss(cssUrl) {\n         // hopefully be loaded when the JS will generate the settings content.\n         loadCss(getVar(\"static-root-path\") + getVar(\"settings-css\"));\n         loadScript(getVar(\"static-root-path\") + getVar(\"settings-js\"));\n+        preLoadCss(getVar(\"static-root-path\") + getVar(\"theme-light-css\"));\n+        preLoadCss(getVar(\"static-root-path\") + getVar(\"theme-dark-css\"));\n+        preLoadCss(getVar(\"static-root-path\") + getVar(\"theme-ayu-css\"));\n+        // Pre-load all theme CSS files, so that switching feels seamless.\n+        //\n+        // When loading settings.html as a standalone page, the equivalent HTML is\n+        // generated in context.rs.\n+        setTimeout(() => {\n+            const themes = getVar(\"themes\").split(\",\");\n+            for (const theme of themes) {\n+                // if there are no themes, do nothing\n+                // \"\".split(\",\") == [\"\"]\n+                if (theme !== \"\") {\n+                    preLoadCss(getVar(\"root-path\") + theme + \".css\");\n+                }\n+            }\n+        }, 0);\n     };\n \n     window.searchState = {"}, {"sha": "c3fed9a72d4e23fc470ea65857b9a7328b75118d", "filename": "src/librustdoc/html/static/js/storage.js", "status": "modified", "additions": 26, "deletions": 21, "changes": 47, "blob_url": "https://github.com/rust-lang/rust/blob/83791f9de73737f2b8102732886d9519d123ff77/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fjs%2Fstorage.js", "raw_url": "https://github.com/rust-lang/rust/raw/83791f9de73737f2b8102732886d9519d123ff77/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fjs%2Fstorage.js", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fjs%2Fstorage.js?ref=83791f9de73737f2b8102732886d9519d123ff77", "patch": "@@ -7,7 +7,6 @@\n \n const darkThemes = [\"dark\", \"ayu\"];\n window.currentTheme = document.getElementById(\"themeStyle\");\n-window.mainTheme = document.getElementById(\"mainThemeStyle\");\n \n // WARNING: RUSTDOC_MOBILE_BREAKPOINT MEDIA QUERY\n // If you update this line, then you also need to update the media query with the same\n@@ -44,8 +43,6 @@ function getSettingValue(settingName) {\n \n const localStoredTheme = getSettingValue(\"theme\");\n \n-const savedHref = [];\n-\n // eslint-disable-next-line no-unused-vars\n function hasClass(elem, className) {\n     return elem && elem.classList && elem.classList.contains(className);\n@@ -102,6 +99,7 @@ function onEach(arr, func, reversed) {\n  * @param {function(?)}                   func       - The callback\n  * @param {boolean}                       [reversed] - Whether to iterate in reverse\n  */\n+// eslint-disable-next-line no-unused-vars\n function onEachLazy(lazyArray, func, reversed) {\n     return onEach(\n         Array.prototype.slice.call(lazyArray),\n@@ -125,30 +123,37 @@ function getCurrentValue(name) {\n     }\n }\n \n-function switchTheme(styleElem, mainStyleElem, newThemeName, saveTheme) {\n+// Get a value from the rustdoc-vars div, which is used to convey data from\n+// Rust to the JS. If there is no such element, return null.\n+const getVar = (function getVar(name) {\n+    const el = document.getElementById(\"rustdoc-vars\");\n+    if (el) {\n+        return el.attributes[\"data-\" + name].value;\n+    } else {\n+        return null;\n+    }\n+});\n+\n+function switchTheme(newThemeName, saveTheme) {\n     // If this new value comes from a system setting or from the previously\n     // saved theme, no need to save it.\n     if (saveTheme) {\n         updateLocalStorage(\"theme\", newThemeName);\n     }\n \n-    if (savedHref.length === 0) {\n-        onEachLazy(document.getElementsByTagName(\"link\"), el => {\n-            savedHref.push(el.href);\n-        });\n+    let newHref;\n+\n+    if (newThemeName === \"light\" || newThemeName === \"dark\" || newThemeName === \"ayu\") {\n+        newHref = getVar(\"static-root-path\") + getVar(\"theme-\" + newThemeName + \"-css\");\n+    } else {\n+        newHref = getVar(\"root-path\") + newThemeName + getVar(\"resource-suffix\") + \".css\";\n     }\n-    const newHref = savedHref.find(url => {\n-        const m = url.match(/static\\.files\\/(.*)-[a-f0-9]{16}\\.css$/);\n-        if (m && m[1] === newThemeName) {\n-            return true;\n-        }\n-        const m2 = url.match(/\\/([^/]*)\\.css$/);\n-        if (m2 && m2[1].startsWith(newThemeName)) {\n-            return true;\n-        }\n-    });\n-    if (newHref && newHref !== styleElem.href) {\n-        styleElem.href = newHref;\n+\n+    if (!window.currentTheme) {\n+        document.write(`<link rel=\"stylesheet\" id=\"themeStyle\" href=\"${newHref}\">`);\n+        window.currentTheme = document.getElementById(\"themeStyle\");\n+    } else if (newHref !== window.currentTheme.href) {\n+        window.currentTheme.href = newHref;\n     }\n }\n \n@@ -164,7 +169,7 @@ const updateTheme = (function() {\n      */\n     function updateTheme() {\n         const use = (theme, saveTheme) => {\n-            switchTheme(window.currentTheme, window.mainTheme, theme, saveTheme);\n+            switchTheme(theme, saveTheme);\n         };\n \n         // maybe the user has disabled the setting in the meantime!"}, {"sha": "532660e3d33c73bf200b6a4b4af0cd060ab07466", "filename": "src/librustdoc/html/templates/page.html", "status": "modified", "additions": 21, "deletions": 18, "changes": 39, "blob_url": "https://github.com/rust-lang/rust/blob/83791f9de73737f2b8102732886d9519d123ff77/src%2Flibrustdoc%2Fhtml%2Ftemplates%2Fpage.html", "raw_url": "https://github.com/rust-lang/rust/raw/83791f9de73737f2b8102732886d9519d123ff77/src%2Flibrustdoc%2Fhtml%2Ftemplates%2Fpage.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Ftemplates%2Fpage.html?ref=83791f9de73737f2b8102732886d9519d123ff77", "patch": "@@ -17,19 +17,28 @@\n     <link rel=\"stylesheet\" {#+ #}\n           href=\"{{static_root_path|safe}}{{files.rustdoc_css}}\" {#+ #}\n           id=\"mainThemeStyle\"> {# #}\n-    <link rel=\"stylesheet\" id=\"themeStyle\" href=\"{{static_root_path|safe}}{{files.theme_light_css}}\"> {# #}\n-    <link rel=\"stylesheet\" disabled href=\"{{static_root_path|safe}}{{files.theme_dark_css}}\"> {# #}\n-    <link rel=\"stylesheet\" disabled href=\"{{static_root_path|safe}}{{files.theme_ayu_css}}\"> {# #}\n-    {% for theme in themes %}\n-        <link rel=\"stylesheet\" disabled href=\"{{page.root_path|safe}}{{theme}}{{page.resource_suffix}}.css\"> {# #}\n-    {% endfor %}\n     {% if !layout.default_settings.is_empty() %}\n     <script id=\"default-settings\" {#+ #}\n       {%~ for (k, v) in layout.default_settings ~%}\n         data-{{k}}=\"{{v}}\"\n       {% endfor %}\n     ></script> {# #}\n     {% endif %}\n+    <div id=\"rustdoc-vars\" {#+ #}\n+         data-root-path=\"{{page.root_path|safe}}\" {#+ #}\n+         data-static-root-path=\"{{static_root_path|safe}}\" {#+ #}\n+         data-current-crate=\"{{layout.krate}}\" {#+ #}\n+         data-themes=\"{{themes|join(\",\") }}\" {#+ #}\n+         data-resource-suffix=\"{{page.resource_suffix}}\" {#+ #}\n+         data-rustdoc-version=\"{{rustdoc_version}}\" {#+ #}\n+         data-search-js=\"{{files.search_js}}\" {#+ #}\n+         data-settings-js=\"{{files.settings_js}}\" {#+ #}\n+         data-settings-css=\"{{files.settings_css}}\" {#+ #}\n+         data-theme-light-css=\"{{files.theme_light_css}}\" {#+ #}\n+         data-theme-dark-css=\"{{files.theme_dark_css}}\" {#+ #}\n+         data-theme-ayu-css=\"{{files.theme_ayu_css}}\" {#+ #}\n+    > {# #}\n+    </div> {# #}\n     <script src=\"{{static_root_path|safe}}{{files.storage_js}}\"></script> {# #}\n     {% if page.css_class.contains(\"crate\") %}\n     <script defer src=\"{{page.root_path|safe}}crates{{page.resource_suffix}}.js\"></script> {# #}\n@@ -44,6 +53,12 @@\n     <script defer src=\"{{static_root_path|safe}}{{files.scrape_examples_js}}\"></script> {# #}\n     {% endif %}\n     <noscript> {# #}\n+        <link rel=\"stylesheet\" {#+ #}\n+           media=\"(prefers-color-scheme:light)\" {#+ #}\n+           href=\"{{static_root_path|safe}}{{files.theme_light_css}}\"> {# #}\n+        <link rel=\"stylesheet\" {#+ #}\n+           media=\"(prefers-color-scheme:dark)\" {#+ #}\n+           href=\"{{static_root_path|safe}}{{files.theme_dark_css}}\"> {# #}\n         <link rel=\"stylesheet\" {#+ #}\n            href=\"{{static_root_path|safe}}{{files.noscript_css}}\"> {# #}\n     </noscript> {# #}\n@@ -132,17 +147,5 @@ <h2></h2> {# #}\n         {% if page.css_class != \"source\" %}</div>{% endif %}\n     </main> {# #}\n     {{ layout.external_html.after_content|safe }}\n-    <div id=\"rustdoc-vars\" {#+ #}\n-         data-root-path=\"{{page.root_path|safe}}\" {#+ #}\n-         data-static-root-path=\"{{static_root_path|safe}}\" {#+ #}\n-         data-current-crate=\"{{layout.krate}}\" {#+ #}\n-         data-themes=\"{{themes|join(\",\") }}\" {#+ #}\n-         data-resource-suffix=\"{{page.resource_suffix}}\" {#+ #}\n-         data-rustdoc-version=\"{{rustdoc_version}}\" {#+ #}\n-         data-search-js=\"{{files.search_js}}\" {#+ #}\n-         data-settings-js=\"{{files.settings_js}}\" {#+ #}\n-         data-settings-css=\"{{files.settings_css}}\" {#+ #}\n-    > {# #}\n-    </div> {# #}\n </body> {# #}\n </html> {# #}"}, {"sha": "995544aeff998032afe209c2518bec27de2ec215", "filename": "tests/run-make-fulldeps/rustdoc-themes/foo.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/83791f9de73737f2b8102732886d9519d123ff77/tests%2Frun-make-fulldeps%2Frustdoc-themes%2Ffoo.rs", "raw_url": "https://github.com/rust-lang/rust/raw/83791f9de73737f2b8102732886d9519d123ff77/tests%2Frun-make-fulldeps%2Frustdoc-themes%2Ffoo.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-make-fulldeps%2Frustdoc-themes%2Ffoo.rs?ref=83791f9de73737f2b8102732886d9519d123ff77", "patch": "@@ -1,4 +1,4 @@\n // @has test.css\n // @has foo/struct.Foo.html\n-// @has - '//link[@rel=\"stylesheet\"]/@href' '../test.css'\n+// @has - '//*[@id=\"rustdoc-vars\"]/@data-themes' 'test'\n pub struct Foo;"}, {"sha": "16f0ced8c6eaab1b4a9d9b35b23fd730d2e083d4", "filename": "tests/rustdoc-gui/scrape-examples-button-focus.goml", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/83791f9de73737f2b8102732886d9519d123ff77/tests%2Frustdoc-gui%2Fscrape-examples-button-focus.goml", "raw_url": "https://github.com/rust-lang/rust/raw/83791f9de73737f2b8102732886d9519d123ff77/tests%2Frustdoc-gui%2Fscrape-examples-button-focus.goml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-gui%2Fscrape-examples-button-focus.goml?ref=83791f9de73737f2b8102732886d9519d123ff77", "patch": "@@ -8,24 +8,24 @@ focus: \".scraped-example-list > .scraped-example .next\"\n press-key: \"Enter\"\n assert-property-false: (\".scraped-example-list > .scraped-example pre\", {\n     \"scrollTop\": |initialScrollTop|\n-})\n+}, NEAR)\n focus: \".scraped-example-list > .scraped-example .prev\"\n press-key: \"Enter\"\n assert-property: (\".scraped-example-list > .scraped-example pre\", {\n     \"scrollTop\": |initialScrollTop|\n-})\n+}, NEAR)\n \n // The expand button increases the scrollHeight of the minimized code viewport\n store-property: (smallOffsetHeight, \".scraped-example-list > .scraped-example pre\", \"offsetHeight\")\n assert-property-false: (\".scraped-example-list > .scraped-example pre\", {\n     \"scrollHeight\": |smallOffsetHeight|\n-})\n+}, NEAR)\n focus: \".scraped-example-list > .scraped-example .expand\"\n press-key: \"Enter\"\n assert-property-false: (\".scraped-example-list > .scraped-example pre\", {\n     \"offsetHeight\": |smallOffsetHeight|\n-})\n+}, NEAR)\n store-property: (fullOffsetHeight, \".scraped-example-list > .scraped-example pre\", \"offsetHeight\")\n assert-property: (\".scraped-example-list > .scraped-example pre\", {\n     \"scrollHeight\": |fullOffsetHeight|\n-})\n+}, NEAR)"}]}