{"sha": "10f46336af2dea648c3b2ecf999d789d33bbfdd0", "node_id": "MDY6Q29tbWl0NzI0NzEyOjEwZjQ2MzM2YWYyZGVhNjQ4YzNiMmVjZjk5OWQ3ODlkMzNiYmZkZDA=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2019-08-03T15:20:16Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2019-08-03T15:21:30Z"}, "message": "set RUSTC_DEBUG_ASSERTIONS for when we are in bootstrap", "tree": {"sha": "5b60b818abd199fcaea60362596cf6c73def2891", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5b60b818abd199fcaea60362596cf6c73def2891"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/10f46336af2dea648c3b2ecf999d789d33bbfdd0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/10f46336af2dea648c3b2ecf999d789d33bbfdd0", "html_url": "https://github.com/rust-lang/rust/commit/10f46336af2dea648c3b2ecf999d789d33bbfdd0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/10f46336af2dea648c3b2ecf999d789d33bbfdd0/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ab22da8ce8b08f06e01e325c277f19072717fe9c", "url": "https://api.github.com/repos/rust-lang/rust/commits/ab22da8ce8b08f06e01e325c277f19072717fe9c", "html_url": "https://github.com/rust-lang/rust/commit/ab22da8ce8b08f06e01e325c277f19072717fe9c"}], "stats": {"total": 14, "additions": 9, "deletions": 5}, "files": [{"sha": "1c0d23336e61a154cb917c8bd7d18fffcdb65b12", "filename": "src/bin/cargo-miri.rs", "status": "modified", "additions": 9, "deletions": 5, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/10f46336af2dea648c3b2ecf999d789d33bbfdd0/src%2Fbin%2Fcargo-miri.rs", "raw_url": "https://github.com/rust-lang/rust/raw/10f46336af2dea648c3b2ecf999d789d33bbfdd0/src%2Fbin%2Fcargo-miri.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbin%2Fcargo-miri.rs?ref=10f46336af2dea648c3b2ecf999d789d33bbfdd0", "patch": "@@ -310,17 +310,21 @@ version = \"0.0.0\"\n path = \"lib.rs\"\n         \"#).unwrap();\n     File::create(dir.join(\"lib.rs\")).unwrap();\n-    // Run xargo.\n+    // Prepare xargo invocation.\n     let target = get_arg_flag_value(\"--target\");\n     let print_env = !ask_user && has_arg_flag(\"--env\"); // whether we just print the necessary environment variable\n     let mut command = xargo();\n-    command.arg(\"build\").arg(\"-q\")\n-        .current_dir(&dir)\n-        .env(\"RUSTFLAGS\", miri::miri_default_args().join(\" \"))\n-        .env(\"XARGO_HOME\", dir.to_str().unwrap());\n+    command.arg(\"build\").arg(\"-q\");\n+    command.current_dir(&dir);\n+    command.env(\"RUSTFLAGS\", miri::miri_default_args().join(\" \"));\n+    command.env(\"XARGO_HOME\", dir.to_str().unwrap());\n+    // In bootstrap, make sure we don't get debug assertons into our libstd.\n+    command.env(\"RUSTC_DEBUG_ASSERTIONS\", \"false\");\n+    // Handle target flag.\n     if let Some(ref target) = target {\n         command.arg(\"--target\").arg(&target);\n     }\n+    // Finally run it!\n     if !command.status()\n         .expect(\"failed to run xargo\")\n         .success()"}]}