{"sha": "f7e5d8418c0e6dcd17efc61f7f5eb641dce8653d", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY3ZTVkODQxOGMwZTZkY2QxN2VmYzYxZjdmNWViNjQxZGNlODY1M2Q=", "commit": {"author": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2014-02-07T19:42:48Z"}, "committer": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2014-02-11T21:55:22Z"}, "message": "ty -- minor refactorings, helper methods", "tree": {"sha": "30a59ca38f94bf3671fcea949d99458be3af9df0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/30a59ca38f94bf3671fcea949d99458be3af9df0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f7e5d8418c0e6dcd17efc61f7f5eb641dce8653d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f7e5d8418c0e6dcd17efc61f7f5eb641dce8653d", "html_url": "https://github.com/rust-lang/rust/commit/f7e5d8418c0e6dcd17efc61f7f5eb641dce8653d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f7e5d8418c0e6dcd17efc61f7f5eb641dce8653d/comments", "author": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0e005ab84892aa201f720cc60d2aef002bfd7a4a", "url": "https://api.github.com/repos/rust-lang/rust/commits/0e005ab84892aa201f720cc60d2aef002bfd7a4a", "html_url": "https://github.com/rust-lang/rust/commit/0e005ab84892aa201f720cc60d2aef002bfd7a4a"}], "stats": {"total": 47, "additions": 46, "deletions": 1}, "files": [{"sha": "5b58ec57c63eec423047c3afe38f1728c2949b69", "filename": "src/librustc/middle/ty.rs", "status": "modified", "additions": 46, "deletions": 1, "changes": 47, "blob_url": "https://github.com/rust-lang/rust/blob/f7e5d8418c0e6dcd17efc61f7f5eb641dce8653d/src%2Flibrustc%2Fmiddle%2Fty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f7e5d8418c0e6dcd17efc61f7f5eb641dce8653d/src%2Flibrustc%2Fmiddle%2Fty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fty.rs?ref=f7e5d8418c0e6dcd17efc61f7f5eb641dce8653d", "patch": "@@ -45,6 +45,7 @@ use syntax::attr;\n use syntax::attr::AttrMetaMethods;\n use syntax::codemap::Span;\n use syntax::parse::token;\n+use syntax::parse::token::InternedString;\n use syntax::{ast, ast_map};\n use syntax::opt_vec::OptVec;\n use syntax::opt_vec;\n@@ -2668,8 +2669,13 @@ pub fn node_id_to_trait_ref(cx: ctxt, id: ast::NodeId) -> @ty::TraitRef {\n     }\n }\n \n+pub fn try_node_id_to_type(cx: ctxt, id: ast::NodeId) -> Option<t> {\n+    let node_types = cx.node_types.borrow();\n+    node_types.get().find_copy(&(id as uint))\n+}\n+\n pub fn node_id_to_type(cx: ctxt, id: ast::NodeId) -> t {\n-    match node_id_to_type_opt(cx, id) {\n+    match try_node_id_to_type(cx, id) {\n        Some(t) => t,\n        None => cx.sess.bug(\n            format!(\"node_id_to_type: no type for node `{}`\",\n@@ -2883,6 +2889,45 @@ pub fn expr_ty_adjusted(cx: ctxt, expr: &ast::Expr) -> t {\n     adjust_ty(cx, expr.span, unadjusted_ty, adjustment)\n }\n \n+pub fn expr_span(cx: ctxt, id: NodeId) -> Span {\n+    match cx.items.find(id) {\n+        Some(ast_map::NodeExpr(e)) => {\n+            e.span\n+        }\n+        Some(f) => {\n+            cx.sess.bug(format!(\"Node id {} is not an expr: {:?}\",\n+                                id, f));\n+        }\n+        None => {\n+            cx.sess.bug(format!(\"Node id {} is not present \\\n+                                in the node map\", id));\n+        }\n+    }\n+}\n+\n+pub fn local_var_name_str(cx: ctxt, id: NodeId) -> InternedString {\n+    match cx.items.find(id) {\n+        Some(ast_map::NodeLocal(pat)) => {\n+            match pat.node {\n+                ast::PatIdent(_, ref path, _) => {\n+                    let ident = ast_util::path_to_ident(path);\n+                    token::get_ident(ident.name)\n+                }\n+                _ => {\n+                    cx.sess.bug(\n+                        format!(\"Variable id {} maps to {:?}, not local\",\n+                                id, pat));\n+                }\n+            }\n+        }\n+        r => {\n+            cx.sess.bug(\n+                format!(\"Variable id {} maps to {:?}, not local\",\n+                        id, r));\n+        }\n+    }\n+}\n+\n pub fn adjust_ty(cx: ctxt,\n                  span: Span,\n                  unadjusted_ty: ty::t,"}]}