{"sha": "ccab6afabc931ff323a6d0199b157e03f6c3d180", "node_id": "C_kwDOAAsO6NoAKGNjYWI2YWZhYmM5MzFmZjMyM2E2ZDAxOTliMTU3ZTAzZjZjM2QxODA", "commit": {"author": {"name": "bellau", "email": "laurent.belmonte@gmail.com", "date": "2022-02-12T14:17:10Z"}, "committer": {"name": "bellau", "email": "laurent.belmonte@gmail.com", "date": "2022-02-12T14:17:10Z"}, "message": "Fix  Immovable generator syntax (static ||) not recognized #11448", "tree": {"sha": "14c2b46b448426c220ead68cb493c4b51dfe4c49", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/14c2b46b448426c220ead68cb493c4b51dfe4c49"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ccab6afabc931ff323a6d0199b157e03f6c3d180", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ccab6afabc931ff323a6d0199b157e03f6c3d180", "html_url": "https://github.com/rust-lang/rust/commit/ccab6afabc931ff323a6d0199b157e03f6c3d180", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ccab6afabc931ff323a6d0199b157e03f6c3d180/comments", "author": {"login": "bellau", "id": 475393, "node_id": "MDQ6VXNlcjQ3NTM5Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/475393?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bellau", "html_url": "https://github.com/bellau", "followers_url": "https://api.github.com/users/bellau/followers", "following_url": "https://api.github.com/users/bellau/following{/other_user}", "gists_url": "https://api.github.com/users/bellau/gists{/gist_id}", "starred_url": "https://api.github.com/users/bellau/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bellau/subscriptions", "organizations_url": "https://api.github.com/users/bellau/orgs", "repos_url": "https://api.github.com/users/bellau/repos", "events_url": "https://api.github.com/users/bellau/events{/privacy}", "received_events_url": "https://api.github.com/users/bellau/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bellau", "id": 475393, "node_id": "MDQ6VXNlcjQ3NTM5Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/475393?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bellau", "html_url": "https://github.com/bellau", "followers_url": "https://api.github.com/users/bellau/followers", "following_url": "https://api.github.com/users/bellau/following{/other_user}", "gists_url": "https://api.github.com/users/bellau/gists{/gist_id}", "starred_url": "https://api.github.com/users/bellau/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bellau/subscriptions", "organizations_url": "https://api.github.com/users/bellau/orgs", "repos_url": "https://api.github.com/users/bellau/repos", "events_url": "https://api.github.com/users/bellau/events{/privacy}", "received_events_url": "https://api.github.com/users/bellau/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4449a336f6965ebdfa9b7408e6ff40a6a990a43d", "url": "https://api.github.com/repos/rust-lang/rust/commits/4449a336f6965ebdfa9b7408e6ff40a6a990a43d", "html_url": "https://github.com/rust-lang/rust/commit/4449a336f6965ebdfa9b7408e6ff40a6a990a43d"}], "stats": {"total": 21, "additions": 20, "deletions": 1}, "files": [{"sha": "7f9b9768dad5bbffb037dca0f1f177d36c4f0090", "filename": "crates/parser/src/grammar/expressions/atom.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ccab6afabc931ff323a6d0199b157e03f6c3d180/crates%2Fparser%2Fsrc%2Fgrammar%2Fexpressions%2Fatom.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ccab6afabc931ff323a6d0199b157e03f6c3d180/crates%2Fparser%2Fsrc%2Fgrammar%2Fexpressions%2Fatom.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Fsrc%2Fgrammar%2Fexpressions%2Fatom.rs?ref=ccab6afabc931ff323a6d0199b157e03f6c3d180", "patch": "@@ -74,6 +74,7 @@ pub(super) fn atom_expr(p: &mut Parser, r: Restrictions) -> Option<(CompletedMar\n         T![|] => closure_expr(p),\n         T![move] if la == T![|] => closure_expr(p),\n         T![async] if la == T![|] || (la == T![move] && p.nth(2) == T![|]) => closure_expr(p),\n+        T![static] if la == T![|] => closure_expr(p),\n         T![if] => if_expr(p),\n \n         T![loop] => loop_expr(p, None),\n@@ -234,17 +235,20 @@ fn array_expr(p: &mut Parser) -> CompletedMarker {\n //     async || {};\n //     move || {};\n //     async move || {};\n+//     static || {};\n // }\n fn closure_expr(p: &mut Parser) -> CompletedMarker {\n     assert!(\n         p.at(T![|])\n             || (p.at(T![move]) && p.nth(1) == T![|])\n             || (p.at(T![async]) && p.nth(1) == T![|])\n             || (p.at(T![async]) && p.nth(1) == T![move] && p.nth(2) == T![|])\n+            || (p.at(T![static]) && p.nth(1) == T![|])\n     );\n     let m = p.start();\n     p.eat(T![async]);\n     p.eat(T![move]);\n+    p.eat(T![static]);\n     params::param_list_closure(p);\n     if opt_ret_type(p) {\n         // test lambda_ret_block"}, {"sha": "ab3c8a8a8b51b6a0463e698beb974fef6c4bfb87", "filename": "crates/parser/src/grammar/items.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ccab6afabc931ff323a6d0199b157e03f6c3d180/crates%2Fparser%2Fsrc%2Fgrammar%2Fitems.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ccab6afabc931ff323a6d0199b157e03f6c3d180/crates%2Fparser%2Fsrc%2Fgrammar%2Fitems.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Fsrc%2Fgrammar%2Fitems.rs?ref=ccab6afabc931ff323a6d0199b157e03f6c3d180", "patch": "@@ -230,7 +230,7 @@ fn opt_item_without_modifiers(p: &mut Parser, m: Marker) -> Result<(), Marker> {\n         IDENT if p.at_contextual_kw(T![macro_rules]) && p.nth(1) == BANG => macro_rules(p, m),\n \n         T![const] if (la == IDENT || la == T![_] || la == T![mut]) => consts::konst(p, m),\n-        T![static] => consts::static_(p, m),\n+        T![static] if (la != PIPE ) => consts::static_(p, m),\n \n         _ => return Err(m),\n     };"}, {"sha": "4d7d325395d73f5b4152c2236970896331f4790d", "filename": "crates/parser/test_data/parser/inline/ok/0106_lambda_expr.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/ccab6afabc931ff323a6d0199b157e03f6c3d180/crates%2Fparser%2Ftest_data%2Fparser%2Finline%2Fok%2F0106_lambda_expr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ccab6afabc931ff323a6d0199b157e03f6c3d180/crates%2Fparser%2Ftest_data%2Fparser%2Finline%2Fok%2F0106_lambda_expr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Finline%2Fok%2F0106_lambda_expr.rs?ref=ccab6afabc931ff323a6d0199b157e03f6c3d180", "patch": "@@ -6,4 +6,5 @@ fn foo() {\n     async || {};\n     move || {};\n     async move || {};\n+    static || {};\n }"}, {"sha": "0ef0ee59b71b53bf40039d91b3ca1b7595bb97fc", "filename": "crates/parser/test_data/parser/inline/ok/0106_lambda_expr.txt", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/ccab6afabc931ff323a6d0199b157e03f6c3d180/crates%2Fparser%2Ftest_data%2Fparser%2Finline%2Fok%2F0106_lambda_expr.txt", "raw_url": "https://github.com/rust-lang/rust/raw/ccab6afabc931ff323a6d0199b157e03f6c3d180/crates%2Fparser%2Ftest_data%2Fparser%2Finline%2Fok%2F0106_lambda_expr.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Ftest_data%2Fparser%2Finline%2Fok%2F0106_lambda_expr.txt?ref=ccab6afabc931ff323a6d0199b157e03f6c3d180", "patch": "@@ -135,6 +135,20 @@ SOURCE_FILE\n                 L_CURLY \"{\"\n                 R_CURLY \"}\"\n           SEMICOLON \";\"\n+        WHITESPACE \"\\n    \"\n+        EXPR_STMT\n+          CLOSURE_EXPR\n+            STATIC_KW \"static\"\n+            WHITESPACE \" \"\n+            PARAM_LIST\n+              PIPE \"|\"\n+              PIPE \"|\"\n+            WHITESPACE \" \"\n+            BLOCK_EXPR\n+              STMT_LIST\n+                L_CURLY \"{\"\n+                R_CURLY \"}\"\n+          SEMICOLON \";\"\n         WHITESPACE \"\\n\"\n         R_CURLY \"}\"\n   WHITESPACE \"\\n\""}]}