{"sha": "2123d6a2785799fc3f32e972a0e548d37f883521", "node_id": "MDY6Q29tbWl0NzI0NzEyOjIxMjNkNmEyNzg1Nzk5ZmMzZjMyZTk3MmEwZTU0OGQzN2Y4ODM1MjE=", "commit": {"author": {"name": "Theodore DeRego", "email": "tedsta@google.com", "date": "2017-02-28T04:26:55Z"}, "committer": {"name": "Theodore DeRego", "email": "tedsta@google.com", "date": "2017-02-28T18:28:46Z"}, "message": "std::process for fuchsia: updated to latest liblaunchpad", "tree": {"sha": "3b0708037ae16bb9b6e11897c4481ad41b2cf641", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3b0708037ae16bb9b6e11897c4481ad41b2cf641"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2123d6a2785799fc3f32e972a0e548d37f883521", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2123d6a2785799fc3f32e972a0e548d37f883521", "html_url": "https://github.com/rust-lang/rust/commit/2123d6a2785799fc3f32e972a0e548d37f883521", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2123d6a2785799fc3f32e972a0e548d37f883521/comments", "author": {"login": "tedsta", "id": 1218723, "node_id": "MDQ6VXNlcjEyMTg3MjM=", "avatar_url": "https://avatars.githubusercontent.com/u/1218723?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tedsta", "html_url": "https://github.com/tedsta", "followers_url": "https://api.github.com/users/tedsta/followers", "following_url": "https://api.github.com/users/tedsta/following{/other_user}", "gists_url": "https://api.github.com/users/tedsta/gists{/gist_id}", "starred_url": "https://api.github.com/users/tedsta/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tedsta/subscriptions", "organizations_url": "https://api.github.com/users/tedsta/orgs", "repos_url": "https://api.github.com/users/tedsta/repos", "events_url": "https://api.github.com/users/tedsta/events{/privacy}", "received_events_url": "https://api.github.com/users/tedsta/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tedsta", "id": 1218723, "node_id": "MDQ6VXNlcjEyMTg3MjM=", "avatar_url": "https://avatars.githubusercontent.com/u/1218723?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tedsta", "html_url": "https://github.com/tedsta", "followers_url": "https://api.github.com/users/tedsta/followers", "following_url": "https://api.github.com/users/tedsta/following{/other_user}", "gists_url": "https://api.github.com/users/tedsta/gists{/gist_id}", "starred_url": "https://api.github.com/users/tedsta/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tedsta/subscriptions", "organizations_url": "https://api.github.com/users/tedsta/orgs", "repos_url": "https://api.github.com/users/tedsta/repos", "events_url": "https://api.github.com/users/tedsta/events{/privacy}", "received_events_url": "https://api.github.com/users/tedsta/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0ed75e1f47d099a17de22eb2c1d2b43ce89ea390", "url": "https://api.github.com/repos/rust-lang/rust/commits/0ed75e1f47d099a17de22eb2c1d2b43ce89ea390", "html_url": "https://github.com/rust-lang/rust/commit/0ed75e1f47d099a17de22eb2c1d2b43ce89ea390"}], "stats": {"total": 58, "additions": 31, "deletions": 27}, "files": [{"sha": "07f29784df607eb5ff56e14b3e32c5d26b32c2ba", "filename": "src/libstd/sys/unix/process/magenta.rs", "status": "modified", "additions": 16, "deletions": 6, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/2123d6a2785799fc3f32e972a0e548d37f883521/src%2Flibstd%2Fsys%2Funix%2Fprocess%2Fmagenta.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2123d6a2785799fc3f32e972a0e548d37f883521/src%2Flibstd%2Fsys%2Funix%2Fprocess%2Fmagenta.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Funix%2Fprocess%2Fmagenta.rs?ref=2123d6a2785799fc3f32e972a0e548d37f883521", "patch": "@@ -156,18 +156,18 @@ extern {\n     pub fn launchpad_create(job: mx_handle_t, name: *const c_char,\n                             lp: *mut *mut launchpad_t) -> mx_status_t;\n \n-    pub fn launchpad_start(lp: *mut launchpad_t) -> mx_status_t;\n+    pub fn launchpad_go(lp: *mut launchpad_t,\n+                        proc_handle: *mut mx_handle_t,\n+                        err_msg: *mut *const c_char) -> mx_status_t;\n \n     pub fn launchpad_destroy(lp: *mut launchpad_t);\n \n-    pub fn launchpad_arguments(lp: *mut launchpad_t, argc: c_int,\n+    pub fn launchpad_set_args(lp: *mut launchpad_t, argc: c_int,\n                                argv: *const *const c_char) -> mx_status_t;\n \n-    pub fn launchpad_environ(lp: *mut launchpad_t, envp: *const *const c_char) -> mx_status_t;\n+    pub fn launchpad_set_environ(lp: *mut launchpad_t, envp: *const *const c_char) -> mx_status_t;\n \n-    pub fn launchpad_clone_mxio_root(lp: *mut launchpad_t) -> mx_status_t;\n-\n-    pub fn launchpad_clone_mxio_cwd(lp: *mut launchpad_t) -> mx_status_t;\n+    pub fn launchpad_clone(lp: *mut launchpad_t, what: u32) -> mx_status_t;\n \n     pub fn launchpad_clone_fd(lp: *mut launchpad_t, fd: c_int, target_fd: c_int) -> mx_status_t;\n \n@@ -182,6 +182,16 @@ extern {\n     pub fn launchpad_vmo_from_file(filename: *const c_char) -> mx_handle_t;\n }\n \n+// Launchpad clone constants\n+\n+pub const LP_CLONE_MXIO_ROOT: u32 = 0x0001;\n+pub const LP_CLONE_MXIO_CWD: u32 = 0x0002;\n+// LP_CLONE_MXIO_STDIO = 0x0004\n+// LP_CLONE_MXIO_ALL = 0x00FF\n+// LP_CLONE_ENVIRON = 0x0100\n+// LP_CLONE_DEFAULT_JOB = 0x0200\n+// LP_CLONE_ALL = 0xFFFF\n+\n // Errors\n \n #[allow(unused)] pub const ERR_INTERNAL: mx_status_t = -1;"}, {"sha": "7d583cb3dfce31f016d65f06d5e55efbecda459a", "filename": "src/libstd/sys/unix/process/process_fuchsia.rs", "status": "modified", "additions": 15, "deletions": 21, "changes": 36, "blob_url": "https://github.com/rust-lang/rust/blob/2123d6a2785799fc3f32e972a0e548d37f883521/src%2Flibstd%2Fsys%2Funix%2Fprocess%2Fprocess_fuchsia.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2123d6a2785799fc3f32e972a0e548d37f883521/src%2Flibstd%2Fsys%2Funix%2Fprocess%2Fprocess_fuchsia.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Funix%2Fprocess%2Fprocess_fuchsia.rs?ref=2123d6a2785799fc3f32e972a0e548d37f883521", "patch": "@@ -13,7 +13,7 @@ use libc;\n use mem;\n use ptr;\n \n-use sys::process::magenta::{Handle, launchpad_t, mx_handle_t};\n+use sys::process::magenta::{Handle, mx_handle_t};\n use sys::process::process_common::*;\n \n ////////////////////////////////////////////////////////////////////////////////\n@@ -30,9 +30,9 @@ impl Command {\n \n         let (ours, theirs) = self.setup_io(default, needs_stdin)?;\n \n-        let (launchpad, process_handle) = unsafe { self.do_exec(theirs)? };\n+        let process_handle = unsafe { self.do_exec(theirs)? };\n \n-        Ok((Process { launchpad: launchpad, handle: Handle::new(process_handle) }, ours))\n+        Ok((Process { handle: Handle::new(process_handle) }, ours))\n     }\n \n     pub fn exec(&mut self, default: Stdio) -> io::Error {\n@@ -51,7 +51,7 @@ impl Command {\n     }\n \n     unsafe fn do_exec(&mut self, stdio: ChildPipes)\n-                      -> io::Result<(*mut launchpad_t, mx_handle_t)> {\n+                      -> io::Result<mx_handle_t> {\n         use sys::process::magenta::*;\n \n         let job_handle = mx_job_default();\n@@ -75,16 +75,15 @@ impl Command {\n         let launchpad_destructor = LaunchpadDestructor(launchpad);\n \n         // Set the process argv\n-        mx_cvt(launchpad_arguments(launchpad, self.get_argv().len() as i32 - 1,\n-                                   self.get_argv().as_ptr()))?;\n+        mx_cvt(launchpad_set_args(launchpad, self.get_argv().len() as i32 - 1,\n+                                  self.get_argv().as_ptr()))?;\n         // Setup the environment vars\n-        mx_cvt(launchpad_environ(launchpad, envp))?;\n+        mx_cvt(launchpad_set_environ(launchpad, envp))?;\n         mx_cvt(launchpad_add_vdso_vmo(launchpad))?;\n-        mx_cvt(launchpad_clone_mxio_root(launchpad))?;\n         // Load the executable\n         mx_cvt(launchpad_elf_load(launchpad, launchpad_vmo_from_file(self.get_argv()[0])))?;\n         mx_cvt(launchpad_load_vdso(launchpad, MX_HANDLE_INVALID))?;\n-        mx_cvt(launchpad_clone_mxio_cwd(launchpad))?;\n+        mx_cvt(launchpad_clone(launchpad, LP_CLONE_MXIO_ROOT | LP_CLONE_MXIO_CWD))?;\n \n         // Clone stdin, stdout, and stderr\n         if let Some(fd) = stdio.stdin.fd() {\n@@ -111,12 +110,15 @@ impl Command {\n             callback()?;\n         }\n \n-        let process_handle = mx_cvt(launchpad_start(launchpad))?;\n-\n-        // Successfully started the launchpad\n+        // `launchpad_go` destroys the launchpad, so we must not\n         mem::forget(launchpad_destructor);\n \n-        Ok((launchpad, process_handle))\n+        let mut process_handle: mx_handle_t = 0;\n+        let mut err_msg: *const libc::c_char = ptr::null();\n+        mx_cvt(launchpad_go(launchpad, &mut process_handle, &mut err_msg))?;\n+        // FIXME: See if we want to do something with that err_msg\n+\n+        Ok(process_handle)\n     }\n }\n \n@@ -125,7 +127,6 @@ impl Command {\n ////////////////////////////////////////////////////////////////////////////////\n \n pub struct Process {\n-    launchpad: *mut launchpad_t,\n     handle: Handle,\n }\n \n@@ -195,10 +196,3 @@ impl Process {\n         Ok(Some(ExitStatus::new(proc_info.rec.return_code)))\n     }\n }\n-\n-impl Drop for Process {\n-    fn drop(&mut self) {\n-        use sys::process::magenta::launchpad_destroy;\n-        unsafe { launchpad_destroy(self.launchpad); }\n-    }\n-}"}]}