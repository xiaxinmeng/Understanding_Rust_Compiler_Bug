{"sha": "daedcc2b77187486fde13a2813809b06b2385ac0", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRhZWRjYzJiNzcxODc0ODZmZGUxM2EyODEzODA5YjA2YjIzODVhYzA=", "commit": {"author": {"name": "Kirill Bulatov", "email": "mail4score@gmail.com", "date": "2021-05-23T10:57:04Z"}, "committer": {"name": "Kirill Bulatov", "email": "mail4score@gmail.com", "date": "2021-05-23T10:57:04Z"}, "message": "More style fixes", "tree": {"sha": "60b2b267baadbc1be09ac338611c68de59fd0174", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/60b2b267baadbc1be09ac338611c68de59fd0174"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/daedcc2b77187486fde13a2813809b06b2385ac0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/daedcc2b77187486fde13a2813809b06b2385ac0", "html_url": "https://github.com/rust-lang/rust/commit/daedcc2b77187486fde13a2813809b06b2385ac0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/daedcc2b77187486fde13a2813809b06b2385ac0/comments", "author": {"login": "SomeoneToIgnore", "id": 2690773, "node_id": "MDQ6VXNlcjI2OTA3NzM=", "avatar_url": "https://avatars.githubusercontent.com/u/2690773?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SomeoneToIgnore", "html_url": "https://github.com/SomeoneToIgnore", "followers_url": "https://api.github.com/users/SomeoneToIgnore/followers", "following_url": "https://api.github.com/users/SomeoneToIgnore/following{/other_user}", "gists_url": "https://api.github.com/users/SomeoneToIgnore/gists{/gist_id}", "starred_url": "https://api.github.com/users/SomeoneToIgnore/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SomeoneToIgnore/subscriptions", "organizations_url": "https://api.github.com/users/SomeoneToIgnore/orgs", "repos_url": "https://api.github.com/users/SomeoneToIgnore/repos", "events_url": "https://api.github.com/users/SomeoneToIgnore/events{/privacy}", "received_events_url": "https://api.github.com/users/SomeoneToIgnore/received_events", "type": "User", "site_admin": false}, "committer": {"login": "SomeoneToIgnore", "id": 2690773, "node_id": "MDQ6VXNlcjI2OTA3NzM=", "avatar_url": "https://avatars.githubusercontent.com/u/2690773?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SomeoneToIgnore", "html_url": "https://github.com/SomeoneToIgnore", "followers_url": "https://api.github.com/users/SomeoneToIgnore/followers", "following_url": "https://api.github.com/users/SomeoneToIgnore/following{/other_user}", "gists_url": "https://api.github.com/users/SomeoneToIgnore/gists{/gist_id}", "starred_url": "https://api.github.com/users/SomeoneToIgnore/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SomeoneToIgnore/subscriptions", "organizations_url": "https://api.github.com/users/SomeoneToIgnore/orgs", "repos_url": "https://api.github.com/users/SomeoneToIgnore/repos", "events_url": "https://api.github.com/users/SomeoneToIgnore/events{/privacy}", "received_events_url": "https://api.github.com/users/SomeoneToIgnore/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "223dbd2187e5b966d192dac9745d47831dccb9b3", "url": "https://api.github.com/repos/rust-lang/rust/commits/223dbd2187e5b966d192dac9745d47831dccb9b3", "html_url": "https://github.com/rust-lang/rust/commit/223dbd2187e5b966d192dac9745d47831dccb9b3"}], "stats": {"total": 35, "additions": 19, "deletions": 16}, "files": [{"sha": "fbb7a556a86e8abfd2e16e274a5cbc68016e8ee7", "filename": "editors/code/src/config.ts", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/daedcc2b77187486fde13a2813809b06b2385ac0/editors%2Fcode%2Fsrc%2Fconfig.ts", "raw_url": "https://github.com/rust-lang/rust/raw/daedcc2b77187486fde13a2813809b06b2385ac0/editors%2Fcode%2Fsrc%2Fconfig.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Fconfig.ts?ref=daedcc2b77187486fde13a2813809b06b2385ac0", "patch": "@@ -4,7 +4,7 @@ import { log } from \"./util\";\n \n export type UpdatesChannel = \"stable\" | \"nightly\";\n \n-export const NIGHTLY_TAG = \"nightly\";\n+const NIGHTLY_TAG = \"nightly\";\n \n export type RunnableEnvCfg = undefined | Record<string, string> | { mask?: string; env: Record<string, string> }[];\n \n@@ -170,4 +170,8 @@ export class Config {\n             gotoTypeDef: this.get<boolean>(\"hoverActions.gotoTypeDef\"),\n         };\n     }\n+\n+    get currentExtensionIsNightly() {\n+        return this.package.releaseTag === NIGHTLY_TAG;\n+    }\n }"}, {"sha": "aaedc243143bd37590786e3df034ac9501c7ffb0", "filename": "editors/code/src/main.ts", "status": "modified", "additions": 14, "deletions": 15, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/daedcc2b77187486fde13a2813809b06b2385ac0/editors%2Fcode%2Fsrc%2Fmain.ts", "raw_url": "https://github.com/rust-lang/rust/raw/daedcc2b77187486fde13a2813809b06b2385ac0/editors%2Fcode%2Fsrc%2Fmain.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Fmain.ts?ref=daedcc2b77187486fde13a2813809b06b2385ac0", "patch": "@@ -6,7 +6,7 @@ import { promises as fs, PathLike } from \"fs\";\n import * as commands from './commands';\n import { activateInlayHints } from './inlay_hints';\n import { Ctx } from './ctx';\n-import { Config, NIGHTLY_TAG } from './config';\n+import { Config } from './config';\n import { log, assert, isValidExecutable } from './util';\n import { PersistentState } from './persistent_state';\n import { fetchRelease, download } from './net';\n@@ -156,7 +156,7 @@ export async function deactivate() {\n async function bootstrap(config: Config, state: PersistentState): Promise<string> {\n     await fs.mkdir(config.globalStoragePath, { recursive: true });\n \n-    if (config.package.releaseTag !== NIGHTLY_TAG) {\n+    if (!config.currentExtensionIsNightly) {\n         await state.updateNightlyReleaseId(undefined);\n     }\n     await bootstrapExtension(config, state);\n@@ -166,9 +166,8 @@ async function bootstrap(config: Config, state: PersistentState): Promise<string\n \n async function bootstrapExtension(config: Config, state: PersistentState): Promise<void> {\n     if (config.package.releaseTag === null) return;\n-    const currentExtensionIsNightly = config.package.releaseTag === NIGHTLY_TAG;\n     if (config.channel === \"stable\") {\n-        if (currentExtensionIsNightly) {\n+        if (config.currentExtensionIsNightly) {\n             void vscode.window.showWarningMessage(\n                 `You are running a nightly version of rust-analyzer extension. ` +\n                 `To switch to stable, uninstall the extension and re-install it from the marketplace`\n@@ -179,43 +178,43 @@ async function bootstrapExtension(config: Config, state: PersistentState): Promi\n     if (serverPath(config)) return;\n \n     const now = Date.now();\n-    const isInitialDownload = state.nightlyReleaseId === undefined;\n-    if (currentExtensionIsNightly) {\n+    const isInitialNightlyDownload = state.nightlyReleaseId === undefined;\n+    if (config.currentExtensionIsNightly) {\n         // Check if we should poll github api for the new nightly version\n         // if we haven't done it during the past hour\n         const lastCheck = state.lastCheck;\n \n         const anHour = 60 * 60 * 1000;\n-        const shouldCheckForNewNightly = isInitialDownload || (now - (lastCheck ?? 0)) > anHour;\n+        const shouldCheckForNewNightly = isInitialNightlyDownload || (now - (lastCheck ?? 0)) > anHour;\n \n         if (!shouldCheckForNewNightly) return;\n     }\n \n-    const release = await downloadWithRetryDialog(state, async () => {\n+    const latestNightlyRelease = await downloadWithRetryDialog(state, async () => {\n         return await fetchRelease(\"nightly\", state.githubToken, config.httpProxy);\n     }).catch(async (e) => {\n         log.error(e);\n-        if (isInitialDownload) {\n+        if (isInitialNightlyDownload) {\n             await vscode.window.showErrorMessage(`Failed to download rust-analyzer nightly: ${e}`);\n         }\n         return;\n     });\n-    if (release === undefined) {\n-        if (isInitialDownload) {\n+    if (latestNightlyRelease === undefined) {\n+        if (isInitialNightlyDownload) {\n             await vscode.window.showErrorMessage(\"Failed to download rust-analyzer nightly: empty release contents returned\");\n         }\n         return;\n     }\n-    if (currentExtensionIsNightly && release.id === state.nightlyReleaseId) return;\n+    if (config.currentExtensionIsNightly && latestNightlyRelease.id === state.nightlyReleaseId) return;\n \n     const userResponse = await vscode.window.showInformationMessage(\n         \"New version of rust-analyzer (nightly) is available (requires reload).\",\n         \"Update\"\n     );\n     if (userResponse !== \"Update\") return;\n \n-    const artifact = release.assets.find(artifact => artifact.name === \"rust-analyzer.vsix\");\n-    assert(!!artifact, `Bad release: ${JSON.stringify(release)}`);\n+    const artifact = latestNightlyRelease.assets.find(artifact => artifact.name === \"rust-analyzer.vsix\");\n+    assert(!!artifact, `Bad release: ${JSON.stringify(latestNightlyRelease)}`);\n \n     const dest = path.join(config.globalStoragePath, \"rust-analyzer.vsix\");\n \n@@ -231,7 +230,7 @@ async function bootstrapExtension(config: Config, state: PersistentState): Promi\n     await vscode.commands.executeCommand(\"workbench.extensions.installExtension\", vscode.Uri.file(dest));\n     await fs.unlink(dest);\n \n-    await state.updateNightlyReleaseId(release.id);\n+    await state.updateNightlyReleaseId(latestNightlyRelease.id);\n     await state.updateLastCheck(now);\n     await vscode.commands.executeCommand(\"workbench.action.reloadWindow\");\n }"}]}