{"sha": "1f49e02d1dd4cd4198ed658c7b36592c491f8563", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFmNDllMDJkMWRkNGNkNDE5OGVkNjU4YzdiMzY1OTJjNDkxZjg1NjM=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2014-09-04T04:51:05Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2014-09-04T04:51:05Z"}, "message": "auto merge of #16909 : carols10cents/rust/docs-links, r=alexcrichton\n\nThis has the primary advantage of not interfering with browser default behavior for links like being able to cmd/ctrl+click on a result to open the result in a new tab but leave the current page as-is (previous behavior both opened a new tab and changed the current tab's location to the result's).\r\n\r\nI've done my best to keep the rest of the behavior and the appearance the same-- the whole row still highlights, still has a hand cursor, still moves to the result page with a normal click, arrows+enter still work. If the result is on the current page, the search is simply hidden.\r\n\r\nThe biggest difference in behavior is that people using tab to navigate through the links will have to hit tab twice for each row, since each cell has its own `a` tag.. I could fix this by switching to `div`s and `span`s instead of a table, but that's potentially more CSS finicky?\r\n\r\nThe biggest difference in appearance is probably that all the text in the search results is Fira Sans now, instead of just the method name with the rest of the text in Source Serif Pro. I can put this appearance back, but it looks like all links anywhere on the page are Fira Sans. Only the name was in an `a` tag before, but the whole row was ACTING like a link, so I think this is actually more consistent.\r\n\r\n[I've pushed these changes to a gh-pages repo](https://carols10cents.github.io/rustdoc-playground/std/index.html?search=t) if you'd like to take a look at the effects; note that I also have my changes for PR #16735 there too so the search results will be sorted differently than on master.", "tree": {"sha": "052cddaf2ef66e2aadb4a12529d4068a7437a467", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/052cddaf2ef66e2aadb4a12529d4068a7437a467"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1f49e02d1dd4cd4198ed658c7b36592c491f8563", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1f49e02d1dd4cd4198ed658c7b36592c491f8563", "html_url": "https://github.com/rust-lang/rust/commit/1f49e02d1dd4cd4198ed658c7b36592c491f8563", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1f49e02d1dd4cd4198ed658c7b36592c491f8563/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c95aa9950fdbab2788b211e31e77d05ff3be7bc2", "url": "https://api.github.com/repos/rust-lang/rust/commits/c95aa9950fdbab2788b211e31e77d05ff3be7bc2", "html_url": "https://github.com/rust-lang/rust/commit/c95aa9950fdbab2788b211e31e77d05ff3be7bc2"}, {"sha": "3dc9deb6e5b41859dcbbe28d1e326d296a5e1bb9", "url": "https://api.github.com/repos/rust-lang/rust/commits/3dc9deb6e5b41859dcbbe28d1e326d296a5e1bb9", "html_url": "https://github.com/rust-lang/rust/commit/3dc9deb6e5b41859dcbbe28d1e326d296a5e1bb9"}], "stats": {"total": 74, "additions": 36, "deletions": 38}, "files": [{"sha": "6a7fc907c0baee44d01958faf00ec4c5155355e9", "filename": "src/librustdoc/html/static/main.css", "status": "modified", "additions": 13, "deletions": 7, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/1f49e02d1dd4cd4198ed658c7b36592c491f8563/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fmain.css", "raw_url": "https://github.com/rust-lang/rust/raw/1f49e02d1dd4cd4198ed658c7b36592c491f8563/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fmain.css", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fmain.css?ref=1f49e02d1dd4cd4198ed658c7b36592c491f8563", "patch": "@@ -218,11 +218,10 @@ nav.sub {\n }\n \n .content .highlighted {\n-    cursor: pointer;\n     color: #000 !important;\n     background-color: #ccc;\n }\n-.content .highlighted a { color: #000 !important; }\n+.content .highlighted a, .content .highlighted span { color: #000 !important; }\n .content .highlighted.trait { background-color: #fece7e; }\n .content .highlighted.mod { background-color: #afc6e4; }\n .content .highlighted.enum { background-color: #b4d1b9; }\n@@ -335,11 +334,11 @@ a {\n p a { color: #4e8bca; }\n p a:hover { text-decoration: underline; }\n \n-.content a.trait, .block a.current.trait { color: #ed9603; }\n-.content a.mod, .block a.current.mod { color: #4d76ae; }\n-.content a.enum, .block a.current.enum { color: #5e9766; }\n-.content a.struct, .block a.current.struct { color: #e53700; }\n-.content a.fn, .block a.current.fn { color: #8c6067; }\n+.content span.trait, .block a.current.trait { color: #ed9603; }\n+.content span.mod, .block a.current.mod { color: #4d76ae; }\n+.content span.enum, .block a.current.enum { color: #5e9766; }\n+.content span.struct, .block a.current.struct { color: #e53700; }\n+.content span.fn, .block a.current.fn { color: #8c6067; }\n .content .fnname { color: #8c6067; }\n \n .search-input {\n@@ -377,6 +376,13 @@ p a:hover { text-decoration: underline; }\n     display: block;\n }\n \n+.search-results a {\n+    display: block;\n+}\n+\n+.content .search-results td:first-child { padding-right: 0; }\n+.content .search-results td:first-child a { padding-right: 10px; }\n+\n #help {\n     background: #e9e9e9;\n     border-radius: 4px;"}, {"sha": "99cb41d89813de56b99669f7a3ae1fc5ea5b0467", "filename": "src/librustdoc/html/static/main.js", "status": "modified", "additions": 23, "deletions": 31, "changes": 54, "blob_url": "https://github.com/rust-lang/rust/blob/1f49e02d1dd4cd4198ed658c7b36592c491f8563/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fmain.js", "raw_url": "https://github.com/rust-lang/rust/raw/1f49e02d1dd4cd4198ed658c7b36592c491f8563/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fmain.js", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fmain.js?ref=1f49e02d1dd4cd4198ed658c7b36592c491f8563", "patch": "@@ -395,8 +395,8 @@\n                 if (window.location.pathname == dst.pathname) {\n                     $('#search').addClass('hidden');\n                     $('#main').removeClass('hidden');\n+                    document.location.href = dst.href;\n                 }\n-                document.location.href = dst.href;\n             }).on('mouseover', function() {\n                 var $el = $(this);\n                 clearTimeout(hoverTimeout);\n@@ -451,7 +451,7 @@\n                 shown = [];\n \n                 results.forEach(function(item) {\n-                    var name, type;\n+                    var name, type, href, displayPath;\n \n                     if (shown.indexOf(item) !== -1) {\n                         return;\n@@ -461,43 +461,35 @@\n                     name = item.name;\n                     type = itemTypes[item.ty];\n \n-                    output += '<tr class=\"' + type + ' result\"><td>';\n-\n                     if (type === 'mod') {\n-                        output += item.path +\n-                            '::<a href=\"' + rootPath +\n-                            item.path.replace(/::/g, '/') + '/' +\n-                            name + '/index.html\" class=\"' +\n-                            type + '\">' + name + '</a>';\n+                        displayPath = item.path + '::';\n+                        href = rootPath + item.path.replace(/::/g, '/') + '/' +\n+                               name + '/index.html';\n                     } else if (type === 'static' || type === 'reexport') {\n-                        output += item.path +\n-                            '::<a href=\"' + rootPath +\n-                            item.path.replace(/::/g, '/') +\n-                            '/index.html\" class=\"' + type +\n-                            '\">' + name + '</a>';\n+                        displayPath = item.path + '::';\n+                        href = rootPath + item.path.replace(/::/g, '/') +\n+                               '/index.html';\n                     } else if (item.parent !== undefined) {\n                         var myparent = item.parent;\n                         var anchor = '#' + type + '.' + name;\n-                        output += item.path + '::' + myparent.name +\n-                            '::<a href=\"' + rootPath +\n-                            item.path.replace(/::/g, '/') +\n-                            '/' + itemTypes[myparent.ty] +\n-                            '.' + myparent.name +\n-                            '.html' + anchor +\n-                            '\" class=\"' + type +\n-                            '\">' + name + '</a>';\n+                        displayPath = item.path + '::' + myparent.name + '::';\n+                        href = rootPath + item.path.replace(/::/g, '/') +\n+                               '/' + itemTypes[myparent.ty] +\n+                               '.' + myparent.name +\n+                               '.html' + anchor;\n                     } else {\n-                        output += item.path +\n-                            '::<a href=\"' + rootPath +\n-                            item.path.replace(/::/g, '/') +\n-                            '/' + type +\n-                            '.' + name +\n-                            '.html\" class=\"' + type +\n-                            '\">' + name + '</a>';\n+                        displayPath = item.path + '::';\n+                        href = rootPath + item.path.replace(/::/g, '/') +\n+                               '/' + type + '.' + name + '.html';\n                     }\n \n-                    output += '</td><td><span class=\"desc\">' + item.desc +\n-                        '</span></td></tr>';\n+                    output += '<tr class=\"' + type + ' result\"><td>' +\n+                              '<a href=\"' + href + '\">' +\n+                              displayPath + '<span class=\"' + type + '\">' +\n+                              name + '</span></a></td><td>' +\n+                              '<a href=\"' + href + '\">' +\n+                              '<span class=\"desc\">' + item.desc +\n+                              '&nbsp;</span></a></td></tr>';\n                 });\n             } else {\n                 output += 'No results :( <a href=\"https://duckduckgo.com/?q=' +"}]}