{"sha": "bfdefdbfb740a2b41dbdf01299ecdf1610c54907", "node_id": "C_kwDOAAsO6NoAKGJmZGVmZGJmYjc0MGEyYjQxZGJkZjAxMjk5ZWNkZjE2MTBjNTQ5MDc", "commit": {"author": {"name": "Bryan Garza", "email": "1396101+bryangarza@users.noreply.github.com", "date": "2022-10-27T22:55:50Z"}, "committer": {"name": "Bryan Garza", "email": "1396101+bryangarza@users.noreply.github.com", "date": "2022-10-27T22:58:54Z"}, "message": "Update tests based on feedback\n\n- Add comment to some tests that will break when #102745 is implemented\n- Mark a test with known-bug\n- Delete duplicate test", "tree": {"sha": "046ff76cd6db2a4aa187793c2ccf4be9198827cd", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/046ff76cd6db2a4aa187793c2ccf4be9198827cd"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bfdefdbfb740a2b41dbdf01299ecdf1610c54907", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bfdefdbfb740a2b41dbdf01299ecdf1610c54907", "html_url": "https://github.com/rust-lang/rust/commit/bfdefdbfb740a2b41dbdf01299ecdf1610c54907", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bfdefdbfb740a2b41dbdf01299ecdf1610c54907/comments", "author": {"login": "bryangarza", "id": 1396101, "node_id": "MDQ6VXNlcjEzOTYxMDE=", "avatar_url": "https://avatars.githubusercontent.com/u/1396101?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bryangarza", "html_url": "https://github.com/bryangarza", "followers_url": "https://api.github.com/users/bryangarza/followers", "following_url": "https://api.github.com/users/bryangarza/following{/other_user}", "gists_url": "https://api.github.com/users/bryangarza/gists{/gist_id}", "starred_url": "https://api.github.com/users/bryangarza/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bryangarza/subscriptions", "organizations_url": "https://api.github.com/users/bryangarza/orgs", "repos_url": "https://api.github.com/users/bryangarza/repos", "events_url": "https://api.github.com/users/bryangarza/events{/privacy}", "received_events_url": "https://api.github.com/users/bryangarza/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bryangarza", "id": 1396101, "node_id": "MDQ6VXNlcjEzOTYxMDE=", "avatar_url": "https://avatars.githubusercontent.com/u/1396101?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bryangarza", "html_url": "https://github.com/bryangarza", "followers_url": "https://api.github.com/users/bryangarza/followers", "following_url": "https://api.github.com/users/bryangarza/following{/other_user}", "gists_url": "https://api.github.com/users/bryangarza/gists{/gist_id}", "starred_url": "https://api.github.com/users/bryangarza/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bryangarza/subscriptions", "organizations_url": "https://api.github.com/users/bryangarza/orgs", "repos_url": "https://api.github.com/users/bryangarza/repos", "events_url": "https://api.github.com/users/bryangarza/events{/privacy}", "received_events_url": "https://api.github.com/users/bryangarza/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0b3b04643624027aadc891212dacfdcfa931ed0b", "url": "https://api.github.com/repos/rust-lang/rust/commits/0b3b04643624027aadc891212dacfdcfa931ed0b", "html_url": "https://github.com/rust-lang/rust/commit/0b3b04643624027aadc891212dacfdcfa931ed0b"}], "stats": {"total": 33, "additions": 7, "deletions": 26}, "files": [{"sha": "61d7e2520eab7a8cea7c3f8f97fd2a932aa4d5bd", "filename": "src/test/ui/async-await/in-trait/async-example-desugared-boxed.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/bfdefdbfb740a2b41dbdf01299ecdf1610c54907/src%2Ftest%2Fui%2Fasync-await%2Fin-trait%2Fasync-example-desugared-boxed.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bfdefdbfb740a2b41dbdf01299ecdf1610c54907/src%2Ftest%2Fui%2Fasync-await%2Fin-trait%2Fasync-example-desugared-boxed.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fasync-await%2Fin-trait%2Fasync-example-desugared-boxed.rs?ref=bfdefdbfb740a2b41dbdf01299ecdf1610c54907", "patch": "@@ -13,6 +13,7 @@ trait MyTrait {\n }\n \n impl MyTrait for i32 {\n+    // This will break once a PR that implements #102745 is merged\n     fn foo(&self) -> Pin<Box<dyn Future<Output = i32> + '_>> {\n         Box::pin(async {\n             *self"}, {"sha": "feeda719e0306605bce7df6e8b8d74dff26c3972", "filename": "src/test/ui/async-await/in-trait/async-example-desugared-in-trait.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/bfdefdbfb740a2b41dbdf01299ecdf1610c54907/src%2Ftest%2Fui%2Fasync-await%2Fin-trait%2Fasync-example-desugared-in-trait.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bfdefdbfb740a2b41dbdf01299ecdf1610c54907/src%2Ftest%2Fui%2Fasync-await%2Fin-trait%2Fasync-example-desugared-in-trait.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fasync-await%2Fin-trait%2Fasync-example-desugared-in-trait.rs?ref=bfdefdbfb740a2b41dbdf01299ecdf1610c54907", "patch": "@@ -12,6 +12,7 @@ trait MyTrait {\n }\n \n impl MyTrait for i32 {\n+    // This will break once a PR that implements #102745 is merged\n     async fn foo(&self) -> i32 {\n         *self\n     }"}, {"sha": "1313c9edd861c213850af2725cadc84f52146fed", "filename": "src/test/ui/async-await/in-trait/async-example-desugared.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/bfdefdbfb740a2b41dbdf01299ecdf1610c54907/src%2Ftest%2Fui%2Fasync-await%2Fin-trait%2Fasync-example-desugared.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bfdefdbfb740a2b41dbdf01299ecdf1610c54907/src%2Ftest%2Fui%2Fasync-await%2Fin-trait%2Fasync-example-desugared.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fasync-await%2Fin-trait%2Fasync-example-desugared.rs?ref=bfdefdbfb740a2b41dbdf01299ecdf1610c54907", "patch": "@@ -12,6 +12,7 @@ trait MyTrait {\n }\n \n impl MyTrait for i32 {\n+    // This will break once a PR that implements #102745 is merged\n     fn foo(&self) -> impl Future<Output = i32> + '_ {\n         async {\n             *self"}, {"sha": "acbac471cf7e8638e0a989e531c4f63b6ef5f519", "filename": "src/test/ui/async-await/in-trait/async-lifetimes.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/bfdefdbfb740a2b41dbdf01299ecdf1610c54907/src%2Ftest%2Fui%2Fasync-await%2Fin-trait%2Fasync-lifetimes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bfdefdbfb740a2b41dbdf01299ecdf1610c54907/src%2Ftest%2Fui%2Fasync-await%2Fin-trait%2Fasync-lifetimes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fasync-await%2Fin-trait%2Fasync-lifetimes.rs?ref=bfdefdbfb740a2b41dbdf01299ecdf1610c54907", "patch": "@@ -1,12 +1,12 @@\n+// check-fail\n+// known-bug: #102682\n // edition: 2021\n \n #![feature(async_fn_in_trait)]\n #![allow(incomplete_features)]\n \n trait MyTrait<'a, 'b, T> {\n     async fn foo(&'a self, key: &'b T) -> (&'a Self, &'b T);\n-    //~^ ERROR the parameter type `Self` may not live long enough\n-    //~| ERROR the parameter type `T` may not live long enough\n }\n \n impl<'a, 'b, T, U> MyTrait<'a, 'b, T> for U {"}, {"sha": "9a7d294bb17669f6de727d113abcc4c78903e990", "filename": "src/test/ui/async-await/in-trait/async-lifetimes.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/bfdefdbfb740a2b41dbdf01299ecdf1610c54907/src%2Ftest%2Fui%2Fasync-await%2Fin-trait%2Fasync-lifetimes.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/bfdefdbfb740a2b41dbdf01299ecdf1610c54907/src%2Ftest%2Fui%2Fasync-await%2Fin-trait%2Fasync-lifetimes.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fasync-await%2Fin-trait%2Fasync-lifetimes.stderr?ref=bfdefdbfb740a2b41dbdf01299ecdf1610c54907", "patch": "@@ -1,5 +1,5 @@\n error[E0309]: the parameter type `Self` may not live long enough\n-  --> $DIR/async-lifetimes.rs:7:43\n+  --> $DIR/async-lifetimes.rs:9:43\n    |\n LL |     async fn foo(&'a self, key: &'b T) -> (&'a Self, &'b T);\n    |                                           ^^^^^^^^^^^^^^^^^\n@@ -8,7 +8,7 @@ LL |     async fn foo(&'a self, key: &'b T) -> (&'a Self, &'b T);\n    = note: ...so that the reference type `&'a Self` does not outlive the data it points at\n \n error[E0309]: the parameter type `T` may not live long enough\n-  --> $DIR/async-lifetimes.rs:7:43\n+  --> $DIR/async-lifetimes.rs:9:43\n    |\n LL |     async fn foo(&'a self, key: &'b T) -> (&'a Self, &'b T);\n    |                                           ^^^^^^^^^^^^^^^^^ ...so that the reference type `&'b T` does not outlive the data it points at"}, {"sha": "faf9a43d352d5a097c1f2c05987c5bd7062dc20c", "filename": "src/test/ui/async-await/in-trait/fn-not-async-err2-rpitit.rs", "status": "removed", "additions": 0, "deletions": 22, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/0b3b04643624027aadc891212dacfdcfa931ed0b/src%2Ftest%2Fui%2Fasync-await%2Fin-trait%2Ffn-not-async-err2-rpitit.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0b3b04643624027aadc891212dacfdcfa931ed0b/src%2Ftest%2Fui%2Fasync-await%2Fin-trait%2Ffn-not-async-err2-rpitit.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fasync-await%2Fin-trait%2Ffn-not-async-err2-rpitit.rs?ref=0b3b04643624027aadc891212dacfdcfa931ed0b", "patch": "@@ -1,22 +0,0 @@\n-// check-pass\n-// edition: 2021\n-\n-#![feature(async_fn_in_trait)]\n-#![feature(return_position_impl_trait_in_trait)]\n-#![allow(incomplete_features)]\n-\n-use std::future::Future;\n-\n-trait MyTrait {\n-    async fn foo(&self) -> i32;\n-}\n-\n-impl MyTrait for i32 {\n-    fn foo(&self) -> impl Future<Output = i32> + '_ {\n-        async {\n-            *self\n-        }\n-    }\n-}\n-\n-fn main() {}"}]}