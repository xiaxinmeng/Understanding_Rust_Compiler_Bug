{"sha": "22d295ceaaee76dbd555cdeedc0ed7578e66279d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjIyZDI5NWNlYWFlZTc2ZGJkNTU1Y2RlZWRjMGVkNzU3OGU2NjI3OWQ=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-07-31T19:45:29Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-07-31T19:45:29Z"}, "message": "Rename DotDotPat -> RestPat", "tree": {"sha": "ae48a497fbe6ef49c5b8a9a0431c778953c428a0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ae48a497fbe6ef49c5b8a9a0431c778953c428a0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/22d295ceaaee76dbd555cdeedc0ed7578e66279d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/22d295ceaaee76dbd555cdeedc0ed7578e66279d", "html_url": "https://github.com/rust-lang/rust/commit/22d295ceaaee76dbd555cdeedc0ed7578e66279d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/22d295ceaaee76dbd555cdeedc0ed7578e66279d/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "215b9b9cccd66c9e9413e7581931371daa0c94e5", "url": "https://api.github.com/repos/rust-lang/rust/commits/215b9b9cccd66c9e9413e7581931371daa0c94e5", "html_url": "https://github.com/rust-lang/rust/commit/215b9b9cccd66c9e9413e7581931371daa0c94e5"}], "stats": {"total": 110, "additions": 55, "deletions": 55}, "files": [{"sha": "0d0365370d8f30bb8919a084c7afc37e0d79de0f", "filename": "crates/ra_hir_def/src/body/lower.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/22d295ceaaee76dbd555cdeedc0ed7578e66279d/crates%2Fra_hir_def%2Fsrc%2Fbody%2Flower.rs", "raw_url": "https://github.com/rust-lang/rust/raw/22d295ceaaee76dbd555cdeedc0ed7578e66279d/crates%2Fra_hir_def%2Fsrc%2Fbody%2Flower.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_def%2Fsrc%2Fbody%2Flower.rs?ref=22d295ceaaee76dbd555cdeedc0ed7578e66279d", "patch": "@@ -826,7 +826,7 @@ impl ExprCollector<'_> {\n                     Pat::Missing\n                 }\n             }\n-            ast::Pat::DotDotPat(_) => {\n+            ast::Pat::RestPat(_) => {\n                 // `DotDotPat` requires special handling and should not be mapped\n                 // to a Pat. Here we are using `Pat::Missing` as a fallback for\n                 // when `DotDotPat` is mapped to `Pat`, which can easily happen\n@@ -853,10 +853,10 @@ impl ExprCollector<'_> {\n     fn collect_tuple_pat(&mut self, args: AstChildren<ast::Pat>) -> (Vec<PatId>, Option<usize>) {\n         // Find the location of the `..`, if there is one. Note that we do not\n         // consider the possiblity of there being multiple `..` here.\n-        let ellipsis = args.clone().position(|p| matches!(p, ast::Pat::DotDotPat(_)));\n+        let ellipsis = args.clone().position(|p| matches!(p, ast::Pat::RestPat(_)));\n         // We want to skip the `..` pattern here, since we account for it above.\n         let args = args\n-            .filter(|p| !matches!(p, ast::Pat::DotDotPat(_)))\n+            .filter(|p| !matches!(p, ast::Pat::RestPat(_)))\n             .map(|p| self.collect_pat(p))\n             .collect();\n "}, {"sha": "32f34ef108b60115e4878b95e61933cea4796a27", "filename": "crates/ra_ide/src/syntax_highlighting.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/22d295ceaaee76dbd555cdeedc0ed7578e66279d/crates%2Fra_ide%2Fsrc%2Fsyntax_highlighting.rs", "raw_url": "https://github.com/rust-lang/rust/raw/22d295ceaaee76dbd555cdeedc0ed7578e66279d/crates%2Fra_ide%2Fsrc%2Fsyntax_highlighting.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fsyntax_highlighting.rs?ref=22d295ceaaee76dbd555cdeedc0ed7578e66279d", "patch": "@@ -577,7 +577,7 @@ fn highlight_element(\n             _ if element.parent().and_then(ast::RangePat::cast).is_some() => {\n                 HighlightTag::Operator.into()\n             }\n-            _ if element.parent().and_then(ast::DotDotPat::cast).is_some() => {\n+            _ if element.parent().and_then(ast::RestPat::cast).is_some() => {\n                 HighlightTag::Operator.into()\n             }\n             _ if element.parent().and_then(ast::Attr::cast).is_some() => {"}, {"sha": "716bdc978402bc07346e8acc5925f91d18931158", "filename": "crates/ra_parser/src/grammar/patterns.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/22d295ceaaee76dbd555cdeedc0ed7578e66279d/crates%2Fra_parser%2Fsrc%2Fgrammar%2Fpatterns.rs", "raw_url": "https://github.com/rust-lang/rust/raw/22d295ceaaee76dbd555cdeedc0ed7578e66279d/crates%2Fra_parser%2Fsrc%2Fgrammar%2Fpatterns.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_parser%2Fsrc%2Fgrammar%2Fpatterns.rs?ref=22d295ceaaee76dbd555cdeedc0ed7578e66279d", "patch": "@@ -192,7 +192,7 @@ fn record_field_pat_list(p: &mut Parser) {\n     p.bump(T!['{']);\n     while !p.at(EOF) && !p.at(T!['}']) {\n         match p.current() {\n-            // A trailing `..` is *not* treated as a DOT_DOT_PAT.\n+            // A trailing `..` is *not* treated as a REST_PAT.\n             T![.] if p.at(T![..]) => p.bump(T![..]),\n             T!['{'] => error_block(p, \"expected ident\"),\n \n@@ -267,7 +267,7 @@ fn dot_dot_pat(p: &mut Parser) -> CompletedMarker {\n     assert!(p.at(T![..]));\n     let m = p.start();\n     p.bump(T![..]);\n-    m.complete(p, DOT_DOT_PAT)\n+    m.complete(p, REST_PAT)\n }\n \n // test ref_pat"}, {"sha": "b18653aa5e49811226644cd1da13449b71b67c56", "filename": "crates/ra_parser/src/syntax_kind/generated.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/22d295ceaaee76dbd555cdeedc0ed7578e66279d/crates%2Fra_parser%2Fsrc%2Fsyntax_kind%2Fgenerated.rs", "raw_url": "https://github.com/rust-lang/rust/raw/22d295ceaaee76dbd555cdeedc0ed7578e66279d/crates%2Fra_parser%2Fsrc%2Fsyntax_kind%2Fgenerated.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_parser%2Fsrc%2Fsyntax_kind%2Fgenerated.rs?ref=22d295ceaaee76dbd555cdeedc0ed7578e66279d", "patch": "@@ -158,7 +158,7 @@ pub enum SyntaxKind {\n     BOX_PAT,\n     IDENT_PAT,\n     WILDCARD_PAT,\n-    DOT_DOT_PAT,\n+    REST_PAT,\n     PATH_PAT,\n     RECORD_PAT,\n     RECORD_PAT_FIELD_LIST,"}, {"sha": "6cb637b1d14e04b1848bb5ce27e1de49fd421df3", "filename": "crates/ra_syntax/src/ast/generated/nodes.rs", "status": "modified", "additions": 11, "deletions": 11, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/22d295ceaaee76dbd555cdeedc0ed7578e66279d/crates%2Fra_syntax%2Fsrc%2Fast%2Fgenerated%2Fnodes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/22d295ceaaee76dbd555cdeedc0ed7578e66279d/crates%2Fra_syntax%2Fsrc%2Fast%2Fgenerated%2Fnodes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Fsrc%2Fast%2Fgenerated%2Fnodes.rs?ref=22d295ceaaee76dbd555cdeedc0ed7578e66279d", "patch": "@@ -1130,10 +1130,10 @@ impl BoxPat {\n     pub fn pat(&self) -> Option<Pat> { support::child(&self.syntax) }\n }\n #[derive(Debug, Clone, PartialEq, Eq, Hash)]\n-pub struct DotDotPat {\n+pub struct RestPat {\n     pub(crate) syntax: SyntaxNode,\n }\n-impl DotDotPat {\n+impl RestPat {\n     pub fn dotdot_token(&self) -> Option<SyntaxToken> { support::token(&self.syntax, T![..]) }\n }\n #[derive(Debug, Clone, PartialEq, Eq, Hash)]\n@@ -1336,7 +1336,7 @@ pub enum Stmt {\n pub enum Pat {\n     IdentPat(IdentPat),\n     BoxPat(BoxPat),\n-    DotDotPat(DotDotPat),\n+    RestPat(RestPat),\n     LiteralPat(LiteralPat),\n     MacroPat(MacroPat),\n     OrPat(OrPat),\n@@ -2577,8 +2577,8 @@ impl AstNode for BoxPat {\n     }\n     fn syntax(&self) -> &SyntaxNode { &self.syntax }\n }\n-impl AstNode for DotDotPat {\n-    fn can_cast(kind: SyntaxKind) -> bool { kind == DOT_DOT_PAT }\n+impl AstNode for RestPat {\n+    fn can_cast(kind: SyntaxKind) -> bool { kind == REST_PAT }\n     fn cast(syntax: SyntaxNode) -> Option<Self> {\n         if Self::can_cast(syntax.kind()) {\n             Some(Self { syntax })\n@@ -3141,8 +3141,8 @@ impl From<IdentPat> for Pat {\n impl From<BoxPat> for Pat {\n     fn from(node: BoxPat) -> Pat { Pat::BoxPat(node) }\n }\n-impl From<DotDotPat> for Pat {\n-    fn from(node: DotDotPat) -> Pat { Pat::DotDotPat(node) }\n+impl From<RestPat> for Pat {\n+    fn from(node: RestPat) -> Pat { Pat::RestPat(node) }\n }\n impl From<LiteralPat> for Pat {\n     fn from(node: LiteralPat) -> Pat { Pat::LiteralPat(node) }\n@@ -3183,7 +3183,7 @@ impl From<TupleStructPat> for Pat {\n impl AstNode for Pat {\n     fn can_cast(kind: SyntaxKind) -> bool {\n         match kind {\n-            IDENT_PAT | BOX_PAT | DOT_DOT_PAT | LITERAL_PAT | MACRO_PAT | OR_PAT | PAREN_PAT\n+            IDENT_PAT | BOX_PAT | REST_PAT | LITERAL_PAT | MACRO_PAT | OR_PAT | PAREN_PAT\n             | PATH_PAT | WILDCARD_PAT | RANGE_PAT | RECORD_PAT | REF_PAT | SLICE_PAT\n             | TUPLE_PAT | TUPLE_STRUCT_PAT => true,\n             _ => false,\n@@ -3193,7 +3193,7 @@ impl AstNode for Pat {\n         let res = match syntax.kind() {\n             IDENT_PAT => Pat::IdentPat(IdentPat { syntax }),\n             BOX_PAT => Pat::BoxPat(BoxPat { syntax }),\n-            DOT_DOT_PAT => Pat::DotDotPat(DotDotPat { syntax }),\n+            REST_PAT => Pat::RestPat(RestPat { syntax }),\n             LITERAL_PAT => Pat::LiteralPat(LiteralPat { syntax }),\n             MACRO_PAT => Pat::MacroPat(MacroPat { syntax }),\n             OR_PAT => Pat::OrPat(OrPat { syntax }),\n@@ -3214,7 +3214,7 @@ impl AstNode for Pat {\n         match self {\n             Pat::IdentPat(it) => &it.syntax,\n             Pat::BoxPat(it) => &it.syntax,\n-            Pat::DotDotPat(it) => &it.syntax,\n+            Pat::RestPat(it) => &it.syntax,\n             Pat::LiteralPat(it) => &it.syntax,\n             Pat::MacroPat(it) => &it.syntax,\n             Pat::OrPat(it) => &it.syntax,\n@@ -3990,7 +3990,7 @@ impl std::fmt::Display for BoxPat {\n         std::fmt::Display::fmt(self.syntax(), f)\n     }\n }\n-impl std::fmt::Display for DotDotPat {\n+impl std::fmt::Display for RestPat {\n     fn fmt(&self, f: &mut std::fmt::Formatter<'_>) -> std::fmt::Result {\n         std::fmt::Display::fmt(self.syntax(), f)\n     }"}, {"sha": "2ffb83819d8fc0981d32dbb54f85b726e77b0ae3", "filename": "crates/ra_syntax/src/ast/node_ext.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/22d295ceaaee76dbd555cdeedc0ed7578e66279d/crates%2Fra_syntax%2Fsrc%2Fast%2Fnode_ext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/22d295ceaaee76dbd555cdeedc0ed7578e66279d/crates%2Fra_syntax%2Fsrc%2Fast%2Fnode_ext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Fsrc%2Fast%2Fnode_ext.rs?ref=22d295ceaaee76dbd555cdeedc0ed7578e66279d", "patch": "@@ -293,15 +293,15 @@ impl ast::SlicePat {\n         let mut args = self.args().peekable();\n         let prefix = args\n             .peeking_take_while(|p| match p {\n-                ast::Pat::DotDotPat(_) => false,\n+                ast::Pat::RestPat(_) => false,\n                 ast::Pat::IdentPat(bp) => match bp.pat() {\n-                    Some(ast::Pat::DotDotPat(_)) => false,\n+                    Some(ast::Pat::RestPat(_)) => false,\n                     _ => true,\n                 },\n                 ast::Pat::RefPat(rp) => match rp.pat() {\n-                    Some(ast::Pat::DotDotPat(_)) => false,\n+                    Some(ast::Pat::RestPat(_)) => false,\n                     Some(ast::Pat::IdentPat(bp)) => match bp.pat() {\n-                        Some(ast::Pat::DotDotPat(_)) => false,\n+                        Some(ast::Pat::RestPat(_)) => false,\n                         _ => true,\n                     },\n                     _ => true,"}, {"sha": "7d2f7eab05b0accc7af904b9f0c8ef541aaa15d1", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0008_path_part.rast", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/22d295ceaaee76dbd555cdeedc0ed7578e66279d/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0008_path_part.rast", "raw_url": "https://github.com/rust-lang/rust/raw/22d295ceaaee76dbd555cdeedc0ed7578e66279d/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0008_path_part.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0008_path_part.rast?ref=22d295ceaaee76dbd555cdeedc0ed7578e66279d", "patch": "@@ -81,7 +81,7 @@ SOURCE_FILE@0..103\n               NAME_REF@87..90\n                 IDENT@87..90 \"Bar\"\n           L_PAREN@90..91 \"(\"\n-          DOT_DOT_PAT@91..93\n+          REST_PAT@91..93\n             DOT2@91..93 \"..\"\n           R_PAREN@93..94 \")\"\n         WHITESPACE@94..95 \" \""}, {"sha": "2dbce34b61e4a3a56f7a6b14da2552e59ce1528e", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0024_slice_pat.rast", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/22d295ceaaee76dbd555cdeedc0ed7578e66279d/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0024_slice_pat.rast", "raw_url": "https://github.com/rust-lang/rust/raw/22d295ceaaee76dbd555cdeedc0ed7578e66279d/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0024_slice_pat.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0024_slice_pat.rast?ref=22d295ceaaee76dbd555cdeedc0ed7578e66279d", "patch": "@@ -26,7 +26,7 @@ SOURCE_FILE@0..39\n               IDENT@24..25 \"b\"\n           COMMA@25..26 \",\"\n           WHITESPACE@26..27 \" \"\n-          DOT_DOT_PAT@27..29\n+          REST_PAT@27..29\n             DOT2@27..29 \"..\"\n           R_BRACK@29..30 \"]\"\n         WHITESPACE@30..31 \" \""}, {"sha": "467a30134699c2a7de7a7612f64bb4948dba2394", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0026_tuple_pat_fields.rast", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/22d295ceaaee76dbd555cdeedc0ed7578e66279d/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0026_tuple_pat_fields.rast", "raw_url": "https://github.com/rust-lang/rust/raw/22d295ceaaee76dbd555cdeedc0ed7578e66279d/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0026_tuple_pat_fields.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0026_tuple_pat_fields.rast?ref=22d295ceaaee76dbd555cdeedc0ed7578e66279d", "patch": "@@ -83,7 +83,7 @@ SOURCE_FILE@0..97\n             UNDERSCORE@78..79 \"_\"\n           COMMA@79..80 \",\"\n           WHITESPACE@80..81 \" \"\n-          DOT_DOT_PAT@81..83\n+          REST_PAT@81..83\n             DOT2@81..83 \"..\"\n           WHITESPACE@83..84 \" \"\n           COMMA@84..85 \",\""}, {"sha": "b82ed0230b1f8b825ff4f45563e72578e8adcbe7", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0111_tuple_pat.rast", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/22d295ceaaee76dbd555cdeedc0ed7578e66279d/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0111_tuple_pat.rast", "raw_url": "https://github.com/rust-lang/rust/raw/22d295ceaaee76dbd555cdeedc0ed7578e66279d/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0111_tuple_pat.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0111_tuple_pat.rast?ref=22d295ceaaee76dbd555cdeedc0ed7578e66279d", "patch": "@@ -26,7 +26,7 @@ SOURCE_FILE@0..94\n               IDENT@24..25 \"b\"\n           COMMA@25..26 \",\"\n           WHITESPACE@26..27 \" \"\n-          DOT_DOT_PAT@27..29\n+          REST_PAT@27..29\n             DOT2@27..29 \"..\"\n           R_PAREN@29..30 \")\"\n         WHITESPACE@30..31 \" \"\n@@ -60,7 +60,7 @@ SOURCE_FILE@0..94\n         WHITESPACE@63..64 \" \"\n         TUPLE_PAT@64..68\n           L_PAREN@64..65 \"(\"\n-          DOT_DOT_PAT@65..67\n+          REST_PAT@65..67\n             DOT2@65..67 \"..\"\n           R_PAREN@67..68 \")\"\n         WHITESPACE@68..69 \" \""}, {"sha": "8a5bde0b6af637ce8e10af58ffc7470eb7134ec2", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0144_dot_dot_pat.rast", "status": "modified", "additions": 24, "deletions": 24, "changes": 48, "blob_url": "https://github.com/rust-lang/rust/blob/22d295ceaaee76dbd555cdeedc0ed7578e66279d/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0144_dot_dot_pat.rast", "raw_url": "https://github.com/rust-lang/rust/raw/22d295ceaaee76dbd555cdeedc0ed7578e66279d/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0144_dot_dot_pat.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0144_dot_dot_pat.rast?ref=22d295ceaaee76dbd555cdeedc0ed7578e66279d", "patch": "@@ -14,7 +14,7 @@ SOURCE_FILE@0..555\n       LET_STMT@16..28\n         LET_KW@16..19 \"let\"\n         WHITESPACE@19..20 \" \"\n-        DOT_DOT_PAT@20..22\n+        REST_PAT@20..22\n           DOT2@20..22 \"..\"\n         WHITESPACE@22..23 \" \"\n         EQ@23..24 \"=\"\n@@ -40,7 +40,7 @@ SOURCE_FILE@0..555\n               IDENT@66..67 \"a\"\n           COMMA@67..68 \",\"\n           WHITESPACE@68..69 \" \"\n-          DOT_DOT_PAT@69..71\n+          REST_PAT@69..71\n             DOT2@69..71 \"..\"\n           R_PAREN@71..72 \")\"\n         WHITESPACE@72..73 \" \"\n@@ -61,7 +61,7 @@ SOURCE_FILE@0..555\n               IDENT@88..89 \"a\"\n           COMMA@89..90 \",\"\n           WHITESPACE@90..91 \" \"\n-          DOT_DOT_PAT@91..93\n+          REST_PAT@91..93\n             DOT2@91..93 \"..\"\n           COMMA@93..94 \",\"\n           R_PAREN@94..95 \")\"\n@@ -87,7 +87,7 @@ SOURCE_FILE@0..555\n               IDENT@116..117 \"a\"\n           COMMA@117..118 \",\"\n           WHITESPACE@118..119 \" \"\n-          DOT_DOT_PAT@119..121\n+          REST_PAT@119..121\n             DOT2@119..121 \"..\"\n           R_PAREN@121..122 \")\"\n         WHITESPACE@122..123 \" \"\n@@ -112,7 +112,7 @@ SOURCE_FILE@0..555\n               IDENT@143..144 \"a\"\n           COMMA@144..145 \",\"\n           WHITESPACE@145..146 \" \"\n-          DOT_DOT_PAT@146..148\n+          REST_PAT@146..148\n             DOT2@146..148 \"..\"\n           COMMA@148..149 \",\"\n           R_PAREN@149..150 \")\"\n@@ -129,11 +129,11 @@ SOURCE_FILE@0..555\n         WHITESPACE@164..165 \" \"\n         TUPLE_PAT@165..173\n           L_PAREN@165..166 \"(\"\n-          DOT_DOT_PAT@166..168\n+          REST_PAT@166..168\n             DOT2@166..168 \"..\"\n           COMMA@168..169 \",\"\n           WHITESPACE@169..170 \" \"\n-          DOT_DOT_PAT@170..172\n+          REST_PAT@170..172\n             DOT2@170..172 \"..\"\n           R_PAREN@172..173 \")\"\n         WHITESPACE@173..174 \" \"\n@@ -153,11 +153,11 @@ SOURCE_FILE@0..555\n               NAME_REF@188..193\n                 IDENT@188..193 \"Tuple\"\n           L_PAREN@193..194 \"(\"\n-          DOT_DOT_PAT@194..196\n+          REST_PAT@194..196\n             DOT2@194..196 \"..\"\n           COMMA@196..197 \",\"\n           WHITESPACE@197..198 \" \"\n-          DOT_DOT_PAT@198..200\n+          REST_PAT@198..200\n             DOT2@198..200 \"..\"\n           R_PAREN@200..201 \")\"\n         WHITESPACE@201..202 \" \"\n@@ -173,7 +173,7 @@ SOURCE_FILE@0..555\n         WHITESPACE@215..216 \" \"\n         TUPLE_PAT@216..227\n           L_PAREN@216..217 \"(\"\n-          DOT_DOT_PAT@217..219\n+          REST_PAT@217..219\n             DOT2@217..219 \"..\"\n           COMMA@219..220 \",\"\n           WHITESPACE@220..221 \" \"\n@@ -182,7 +182,7 @@ SOURCE_FILE@0..555\n               IDENT@221..222 \"a\"\n           COMMA@222..223 \",\"\n           WHITESPACE@223..224 \" \"\n-          DOT_DOT_PAT@224..226\n+          REST_PAT@224..226\n             DOT2@224..226 \"..\"\n           R_PAREN@226..227 \")\"\n         WHITESPACE@227..228 \" \"\n@@ -202,7 +202,7 @@ SOURCE_FILE@0..555\n               NAME_REF@242..247\n                 IDENT@242..247 \"Tuple\"\n           L_PAREN@247..248 \"(\"\n-          DOT_DOT_PAT@248..250\n+          REST_PAT@248..250\n             DOT2@248..250 \"..\"\n           COMMA@250..251 \",\"\n           WHITESPACE@251..252 \" \"\n@@ -211,7 +211,7 @@ SOURCE_FILE@0..555\n               IDENT@252..253 \"a\"\n           COMMA@253..254 \",\"\n           WHITESPACE@254..255 \" \"\n-          DOT_DOT_PAT@255..257\n+          REST_PAT@255..257\n             DOT2@255..257 \"..\"\n           R_PAREN@257..258 \")\"\n         WHITESPACE@258..259 \" \"\n@@ -233,7 +233,7 @@ SOURCE_FILE@0..555\n         WHITESPACE@300..301 \" \"\n         SLICE_PAT@301..305\n           L_BRACK@301..302 \"[\"\n-          DOT_DOT_PAT@302..304\n+          REST_PAT@302..304\n             DOT2@302..304 \"..\"\n           R_BRACK@304..305 \"]\"\n         WHITESPACE@305..306 \" \"\n@@ -254,7 +254,7 @@ SOURCE_FILE@0..555\n               IDENT@321..325 \"head\"\n           COMMA@325..326 \",\"\n           WHITESPACE@326..327 \" \"\n-          DOT_DOT_PAT@327..329\n+          REST_PAT@327..329\n             DOT2@327..329 \"..\"\n           R_BRACK@329..330 \"]\"\n         WHITESPACE@330..331 \" \"\n@@ -281,7 +281,7 @@ SOURCE_FILE@0..555\n             WHITESPACE@356..357 \" \"\n             AT@357..358 \"@\"\n             WHITESPACE@358..359 \" \"\n-            DOT_DOT_PAT@359..361\n+            REST_PAT@359..361\n               DOT2@359..361 \"..\"\n           R_BRACK@361..362 \"]\"\n         WHITESPACE@362..363 \" \"\n@@ -302,7 +302,7 @@ SOURCE_FILE@0..555\n               IDENT@378..382 \"head\"\n           COMMA@382..383 \",\"\n           WHITESPACE@383..384 \" \"\n-          DOT_DOT_PAT@384..386\n+          REST_PAT@384..386\n             DOT2@384..386 \"..\"\n           COMMA@386..387 \",\"\n           WHITESPACE@387..388 \" \"\n@@ -334,7 +334,7 @@ SOURCE_FILE@0..555\n             WHITESPACE@418..419 \" \"\n             AT@419..420 \"@\"\n             WHITESPACE@420..421 \" \"\n-            DOT_DOT_PAT@421..423\n+            REST_PAT@421..423\n               DOT2@421..423 \"..\"\n           COMMA@423..424 \",\"\n           WHITESPACE@424..425 \" \"\n@@ -360,11 +360,11 @@ SOURCE_FILE@0..555\n               IDENT@446..450 \"head\"\n           COMMA@450..451 \",\"\n           WHITESPACE@451..452 \" \"\n-          DOT_DOT_PAT@452..454\n+          REST_PAT@452..454\n             DOT2@452..454 \"..\"\n           COMMA@454..455 \",\"\n           WHITESPACE@455..456 \" \"\n-          DOT_DOT_PAT@456..458\n+          REST_PAT@456..458\n             DOT2@456..458 \"..\"\n           COMMA@458..459 \",\"\n           WHITESPACE@459..460 \" \"\n@@ -390,7 +390,7 @@ SOURCE_FILE@0..555\n               IDENT@481..485 \"head\"\n           COMMA@485..486 \",\"\n           WHITESPACE@486..487 \" \"\n-          DOT_DOT_PAT@487..489\n+          REST_PAT@487..489\n             DOT2@487..489 \"..\"\n           COMMA@489..490 \",\"\n           WHITESPACE@490..491 \" \"\n@@ -405,7 +405,7 @@ SOURCE_FILE@0..555\n             WHITESPACE@500..501 \" \"\n             AT@501..502 \"@\"\n             WHITESPACE@502..503 \" \"\n-            DOT_DOT_PAT@503..505\n+            REST_PAT@503..505\n               DOT2@503..505 \"..\"\n           R_BRACK@505..506 \"]\"\n         WHITESPACE@506..507 \" \"\n@@ -426,7 +426,7 @@ SOURCE_FILE@0..555\n               IDENT@522..526 \"head\"\n           COMMA@526..527 \",\"\n           WHITESPACE@527..528 \" \"\n-          DOT_DOT_PAT@528..530\n+          REST_PAT@528..530\n             DOT2@528..530 \"..\"\n           COMMA@530..531 \",\"\n           WHITESPACE@531..532 \" \"\n@@ -435,7 +435,7 @@ SOURCE_FILE@0..555\n               IDENT@532..535 \"mid\"\n           COMMA@535..536 \",\"\n           WHITESPACE@536..537 \" \"\n-          DOT_DOT_PAT@537..539\n+          REST_PAT@537..539\n             DOT2@537..539 \"..\"\n           COMMA@539..540 \",\"\n           WHITESPACE@540..541 \" \""}, {"sha": "5bb9363a80afaf212a41f39949f42c92091abb18", "filename": "crates/ra_syntax/test_data/parser/ok/0035_weird_exprs.rast", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/22d295ceaaee76dbd555cdeedc0ed7578e66279d/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0035_weird_exprs.rast", "raw_url": "https://github.com/rust-lang/rust/raw/22d295ceaaee76dbd555cdeedc0ed7578e66279d/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0035_weird_exprs.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0035_weird_exprs.rast?ref=22d295ceaaee76dbd555cdeedc0ed7578e66279d", "patch": "@@ -1634,7 +1634,7 @@ SOURCE_FILE@0..3813\n                       PARAM@2952..2962\n                         TUPLE_PAT@2952..2956\n                           L_PAREN@2952..2953 \"(\"\n-                          DOT_DOT_PAT@2953..2955\n+                          REST_PAT@2953..2955\n                             DOT2@2953..2955 \"..\"\n                           R_PAREN@2955..2956 \")\"\n                         COLON@2956..2957 \":\""}, {"sha": "1386fc4e726078822d2af14b7daad6e7a3c1aa40", "filename": "xtask/src/ast_src.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/22d295ceaaee76dbd555cdeedc0ed7578e66279d/xtask%2Fsrc%2Fast_src.rs", "raw_url": "https://github.com/rust-lang/rust/raw/22d295ceaaee76dbd555cdeedc0ed7578e66279d/xtask%2Fsrc%2Fast_src.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/xtask%2Fsrc%2Fast_src.rs?ref=22d295ceaaee76dbd555cdeedc0ed7578e66279d", "patch": "@@ -128,7 +128,7 @@ pub(crate) const KINDS_SRC: KindsSrc = KindsSrc {\n         \"BOX_PAT\",\n         \"IDENT_PAT\",\n         \"WILDCARD_PAT\",\n-        \"DOT_DOT_PAT\",\n+        \"REST_PAT\",\n         \"PATH_PAT\",\n         \"RECORD_PAT\",\n         \"RECORD_PAT_FIELD_LIST\","}, {"sha": "02f5aa732026a08828c31ba93e5a6e7b08225a7d", "filename": "xtask/src/codegen/rust.ungram", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/22d295ceaaee76dbd555cdeedc0ed7578e66279d/xtask%2Fsrc%2Fcodegen%2Frust.ungram", "raw_url": "https://github.com/rust-lang/rust/raw/22d295ceaaee76dbd555cdeedc0ed7578e66279d/xtask%2Fsrc%2Fcodegen%2Frust.ungram", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/xtask%2Fsrc%2Fcodegen%2Frust.ungram?ref=22d295ceaaee76dbd555cdeedc0ed7578e66279d", "patch": "@@ -498,7 +498,7 @@ TypeBound =\n Pat =\n   IdentPat\n | BoxPat\n-| DotDotPat\n+| RestPat\n | LiteralPat\n | MacroPat\n | OrPat\n@@ -560,7 +560,7 @@ OrPat =\n BoxPat =\n   'box' Pat\n \n-DotDotPat =\n+RestPat =\n   '..'\n \n MacroPat ="}]}