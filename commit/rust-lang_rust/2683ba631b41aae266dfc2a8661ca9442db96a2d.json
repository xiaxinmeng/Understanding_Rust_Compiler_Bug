{"sha": "2683ba631b41aae266dfc2a8661ca9442db96a2d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI2ODNiYTYzMWI0MWFhZTI2NmRmYzJhODY2MWNhOTQ0MmRiOTZhMmQ=", "commit": {"author": {"name": "Nick Cameron", "email": "ncameron@mozilla.com", "date": "2017-08-02T22:20:01Z"}, "committer": {"name": "Nick Cameron", "email": "ncameron@mozilla.com", "date": "2017-08-03T04:31:25Z"}, "message": "Appease tidy and fix save-analysis config for dist builds", "tree": {"sha": "81fae31caa6469ad6a02b1448b4fe1ae008f9777", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/81fae31caa6469ad6a02b1448b4fe1ae008f9777"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2683ba631b41aae266dfc2a8661ca9442db96a2d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2683ba631b41aae266dfc2a8661ca9442db96a2d", "html_url": "https://github.com/rust-lang/rust/commit/2683ba631b41aae266dfc2a8661ca9442db96a2d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2683ba631b41aae266dfc2a8661ca9442db96a2d/comments", "author": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5abbf798e7dc1a9bfbe287d3d3d19e764b28225b", "url": "https://api.github.com/repos/rust-lang/rust/commits/5abbf798e7dc1a9bfbe287d3d3d19e764b28225b", "html_url": "https://github.com/rust-lang/rust/commit/5abbf798e7dc1a9bfbe287d3d3d19e764b28225b"}], "stats": {"total": 25, "additions": 13, "deletions": 12}, "files": [{"sha": "f6ed4ee91b3c5b66b2ead3cbbdfa5e406f705179", "filename": "src/bootstrap/bin/rustc.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2683ba631b41aae266dfc2a8661ca9442db96a2d/src%2Fbootstrap%2Fbin%2Frustc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2683ba631b41aae266dfc2a8661ca9442db96a2d/src%2Fbootstrap%2Fbin%2Frustc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fbin%2Frustc.rs?ref=2683ba631b41aae266dfc2a8661ca9442db96a2d", "patch": "@@ -188,7 +188,7 @@ fn main() {\n             cmd.arg(\"-Zsave-analysis\");\n             cmd.env(\"RUST_SAVE_ANALYSIS_CONFIG\",\n                     \"{\\\"output_file\\\": null,\\\"full_docs\\\": false,\\\"pub_only\\\": true,\\\n-                     \\\"signatures\\\": false,\\\"borrow_data\\\": false}\");\n+                     \\\"distro_crate\\\": true,\\\"signatures\\\": false,\\\"borrow_data\\\": false}\");\n         }\n \n         // Dealing with rpath here is a little special, so let's go into some"}, {"sha": "4740f9a0d5a59662808fc170494908df69e565a2", "filename": "src/librustc_save_analysis/dump_visitor.rs", "status": "modified", "additions": 12, "deletions": 11, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/2683ba631b41aae266dfc2a8661ca9442db96a2d/src%2Flibrustc_save_analysis%2Fdump_visitor.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2683ba631b41aae266dfc2a8661ca9442db96a2d/src%2Flibrustc_save_analysis%2Fdump_visitor.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_save_analysis%2Fdump_visitor.rs?ref=2683ba631b41aae266dfc2a8661ca9442db96a2d", "patch": "@@ -561,17 +561,18 @@ impl<'l, 'tcx: 'l, 'll, O: DumpOutput + 'll> DumpVisitor<'l, 'tcx, 'll, O> {\n             if let ast::ItemKind::Struct(ast::VariantData::Struct(ref fields, _), _) = item.node\n         {\n             let include_priv_fields = !self.save_ctxt.config.pub_only;\n-            let fields_str = fields.iter()\n-                                   .enumerate()\n-                                   .filter_map(|(i, f)| {\n-                                        if include_priv_fields || f.vis == ast::Visibility::Public {\n-                                            f.ident.map(|i| i.to_string()).or_else(|| Some(i.to_string()))\n-                                        } else {\n-                                            None\n-                                        }\n-                                   })\n-                                   .collect::<Vec<_>>()\n-                                   .join(\", \");\n+            let fields_str = fields\n+                .iter()\n+                .enumerate()\n+                .filter_map(|(i, f)| {\n+                     if include_priv_fields || f.vis == ast::Visibility::Public {\n+                         f.ident.map(|i| i.to_string()).or_else(|| Some(i.to_string()))\n+                     } else {\n+                         None\n+                     }\n+                })\n+                .collect::<Vec<_>>()\n+                .join(\", \");\n             let value = format!(\"{} {{ {} }}\", name, fields_str);\n             (value, fields.iter().map(|f| ::id_from_node_id(f.id, &self.save_ctxt)).collect())\n         } else {"}]}