{"sha": "5440149229068ef202af1b59846d123a24e4c62f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU0NDAxNDkyMjkwNjhlZjIwMmFmMWI1OTg0NmQxMjNhMjRlNGM2MmY=", "commit": {"author": {"name": "Taiki Endo", "email": "te316e89@gmail.com", "date": "2019-02-03T21:00:16Z"}, "committer": {"name": "Taiki Endo", "email": "te316e89@gmail.com", "date": "2019-02-03T21:00:16Z"}, "message": "libunwind => 2018", "tree": {"sha": "57cba115d19616dd0b829714be8c0dff9a92d65e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/57cba115d19616dd0b829714be8c0dff9a92d65e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5440149229068ef202af1b59846d123a24e4c62f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5440149229068ef202af1b59846d123a24e4c62f", "html_url": "https://github.com/rust-lang/rust/commit/5440149229068ef202af1b59846d123a24e4c62f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5440149229068ef202af1b59846d123a24e4c62f/comments", "author": {"login": "taiki-e", "id": 43724913, "node_id": "MDQ6VXNlcjQzNzI0OTEz", "avatar_url": "https://avatars.githubusercontent.com/u/43724913?v=4", "gravatar_id": "", "url": "https://api.github.com/users/taiki-e", "html_url": "https://github.com/taiki-e", "followers_url": "https://api.github.com/users/taiki-e/followers", "following_url": "https://api.github.com/users/taiki-e/following{/other_user}", "gists_url": "https://api.github.com/users/taiki-e/gists{/gist_id}", "starred_url": "https://api.github.com/users/taiki-e/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/taiki-e/subscriptions", "organizations_url": "https://api.github.com/users/taiki-e/orgs", "repos_url": "https://api.github.com/users/taiki-e/repos", "events_url": "https://api.github.com/users/taiki-e/events{/privacy}", "received_events_url": "https://api.github.com/users/taiki-e/received_events", "type": "User", "site_admin": false}, "committer": {"login": "taiki-e", "id": 43724913, "node_id": "MDQ6VXNlcjQzNzI0OTEz", "avatar_url": "https://avatars.githubusercontent.com/u/43724913?v=4", "gravatar_id": "", "url": "https://api.github.com/users/taiki-e", "html_url": "https://github.com/taiki-e", "followers_url": "https://api.github.com/users/taiki-e/followers", "following_url": "https://api.github.com/users/taiki-e/following{/other_user}", "gists_url": "https://api.github.com/users/taiki-e/gists{/gist_id}", "starred_url": "https://api.github.com/users/taiki-e/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/taiki-e/subscriptions", "organizations_url": "https://api.github.com/users/taiki-e/orgs", "repos_url": "https://api.github.com/users/taiki-e/repos", "events_url": "https://api.github.com/users/taiki-e/events{/privacy}", "received_events_url": "https://api.github.com/users/taiki-e/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e858c2637fa5bac40ac450628b30c56c2b4327b4", "url": "https://api.github.com/repos/rust-lang/rust/commits/e858c2637fa5bac40ac450628b30c56c2b4327b4", "html_url": "https://github.com/rust-lang/rust/commit/e858c2637fa5bac40ac450628b30c56c2b4327b4"}], "stats": {"total": 15, "additions": 8, "deletions": 7}, "files": [{"sha": "2378b0a315a169701182fd1d398c1bdc0a9e1d70", "filename": "src/libunwind/Cargo.toml", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/5440149229068ef202af1b59846d123a24e4c62f/src%2Flibunwind%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/5440149229068ef202af1b59846d123a24e4c62f/src%2Flibunwind%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibunwind%2FCargo.toml?ref=5440149229068ef202af1b59846d123a24e4c62f", "patch": "@@ -3,6 +3,7 @@ authors = [\"The Rust Project Developers\"]\n name = \"unwind\"\n version = \"0.0.0\"\n build = \"build.rs\"\n+edition = \"2018\"\n \n [lib]\n name = \"unwind\""}, {"sha": "b9a9929ef8b87e1d0dea85cfba05080076452ad8", "filename": "src/libunwind/lib.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/5440149229068ef202af1b59846d123a24e4c62f/src%2Flibunwind%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5440149229068ef202af1b59846d123a24e4c62f/src%2Flibunwind%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibunwind%2Flib.rs?ref=5440149229068ef202af1b59846d123a24e4c62f", "patch": "@@ -1,8 +1,9 @@\n #![no_std]\n #![unstable(feature = \"panic_unwind\", issue = \"32837\")]\n \n+#![deny(rust_2018_idioms)]\n+\n #![feature(link_cfg)]\n-#![feature(nll)]\n #![feature(staged_api)]\n #![feature(unwind_attributes)]\n #![feature(static_nobundle)]\n@@ -18,7 +19,6 @@ cfg_if! {\n     } else if #[cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))] {\n         // no unwinder on the system!\n     } else {\n-        extern crate libc;\n         mod libunwind;\n         pub use libunwind::*;\n     }"}, {"sha": "339b554ed6abd2568083f0bb4cb0c09ca7fcb399", "filename": "src/libunwind/libunwind.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/5440149229068ef202af1b59846d123a24e4c62f/src%2Flibunwind%2Flibunwind.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5440149229068ef202af1b59846d123a24e4c62f/src%2Flibunwind%2Flibunwind.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibunwind%2Flibunwind.rs?ref=5440149229068ef202af1b59846d123a24e4c62f", "patch": "@@ -21,7 +21,7 @@ pub enum _Unwind_Reason_Code {\n     _URC_CONTINUE_UNWIND = 8,\n     _URC_FAILURE = 9, // used only by ARM EHABI\n }\n-pub use self::_Unwind_Reason_Code::*;\n+pub use _Unwind_Reason_Code::*;\n \n pub type _Unwind_Exception_Class = u64;\n pub type _Unwind_Word = uintptr_t;\n@@ -94,7 +94,7 @@ if #[cfg(all(any(target_os = \"ios\", target_os = \"netbsd\", not(target_arch = \"arm\n         _UA_FORCE_UNWIND = 8,\n         _UA_END_OF_STACK = 16,\n     }\n-    pub use self::_Unwind_Action::*;\n+    pub use _Unwind_Action::*;\n \n     extern \"C\" {\n         pub fn _Unwind_GetGR(ctx: *mut _Unwind_Context, reg_index: c_int) -> _Unwind_Word;\n@@ -118,7 +118,7 @@ if #[cfg(all(any(target_os = \"ios\", target_os = \"netbsd\", not(target_arch = \"arm\n         _US_FORCE_UNWIND = 8,\n         _US_END_OF_STACK = 16,\n     }\n-    pub use self::_Unwind_State::*;\n+    pub use _Unwind_State::*;\n \n     #[repr(C)]\n     enum _Unwind_VRS_Result {\n@@ -134,7 +134,7 @@ if #[cfg(all(any(target_os = \"ios\", target_os = \"netbsd\", not(target_arch = \"arm\n         _UVRSC_WMMXD = 3,\n         _UVRSC_WMMXC = 4,\n     }\n-    use self::_Unwind_VRS_RegClass::*;\n+    use _Unwind_VRS_RegClass::*;\n     #[repr(C)]\n     enum _Unwind_VRS_DataRepresentation {\n         _UVRSD_UINT32 = 0,\n@@ -144,7 +144,7 @@ if #[cfg(all(any(target_os = \"ios\", target_os = \"netbsd\", not(target_arch = \"arm\n         _UVRSD_FLOAT = 4,\n         _UVRSD_DOUBLE = 5,\n     }\n-    use self::_Unwind_VRS_DataRepresentation::*;\n+    use _Unwind_VRS_DataRepresentation::*;\n \n     pub const UNWIND_POINTER_REG: c_int = 12;\n     pub const UNWIND_IP_REG: c_int = 15;"}]}