{"sha": "356da40db5ad56ed9efbf6c2757422a9fd2fd3d2", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM1NmRhNDBkYjVhZDU2ZWQ5ZWZiZjZjMjc1NzQyMmE5ZmQyZmQzZDI=", "commit": {"author": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2019-11-13T14:27:59Z"}, "committer": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2019-11-14T12:05:56Z"}, "message": "Adapt error index generator to the new format", "tree": {"sha": "1cbddf7fa23b9679cb8dd044721154d471f76490", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1cbddf7fa23b9679cb8dd044721154d471f76490"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/356da40db5ad56ed9efbf6c2757422a9fd2fd3d2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/356da40db5ad56ed9efbf6c2757422a9fd2fd3d2", "html_url": "https://github.com/rust-lang/rust/commit/356da40db5ad56ed9efbf6c2757422a9fd2fd3d2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/356da40db5ad56ed9efbf6c2757422a9fd2fd3d2/comments", "author": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "committer": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ec50a750f96164e588adcc9ef5d47b8ac89869d1", "url": "https://api.github.com/repos/rust-lang/rust/commits/ec50a750f96164e588adcc9ef5d47b8ac89869d1", "html_url": "https://github.com/rust-lang/rust/commit/ec50a750f96164e588adcc9ef5d47b8ac89869d1"}], "stats": {"total": 37, "additions": 20, "deletions": 17}, "files": [{"sha": "781184af9a96c85b573f11196b157e5c8f018d4e", "filename": "Cargo.lock", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/356da40db5ad56ed9efbf6c2757422a9fd2fd3d2/Cargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/356da40db5ad56ed9efbf6c2757422a9fd2fd3d2/Cargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.lock?ref=356da40db5ad56ed9efbf6c2757422a9fd2fd3d2", "patch": "@@ -3120,6 +3120,7 @@ dependencies = [\n  \"graphviz\",\n  \"jobserver\",\n  \"log\",\n+ \"measureme\",\n  \"num_cpus\",\n  \"parking_lot 0.9.0\",\n  \"polonius-engine\","}, {"sha": "9ea56271f593fa244dc88a57907b90e9f4a97b62", "filename": "src/test/ui/explain.stdout", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/356da40db5ad56ed9efbf6c2757422a9fd2fd3d2/src%2Ftest%2Fui%2Fexplain.stdout", "raw_url": "https://github.com/rust-lang/rust/raw/356da40db5ad56ed9efbf6c2757422a9fd2fd3d2/src%2Ftest%2Fui%2Fexplain.stdout", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fexplain.stdout?ref=356da40db5ad56ed9efbf6c2757422a9fd2fd3d2", "patch": "@@ -1,4 +1,4 @@\n-er [RFC 401][rfc401], if you have a function declaration `foo`:\n+Per [RFC 401][rfc401], if you have a function declaration `foo`:\n \n ```\n // For the purposes of this explanation, all of these"}, {"sha": "b04aff4939b0f4b86fb3c6f3dd237f40e73dd073", "filename": "src/tools/error_index_generator/build.rs", "status": "modified", "additions": 18, "deletions": 16, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/356da40db5ad56ed9efbf6c2757422a9fd2fd3d2/src%2Ftools%2Ferror_index_generator%2Fbuild.rs", "raw_url": "https://github.com/rust-lang/rust/raw/356da40db5ad56ed9efbf6c2757422a9fd2fd3d2/src%2Ftools%2Ferror_index_generator%2Fbuild.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Ferror_index_generator%2Fbuild.rs?ref=356da40db5ad56ed9efbf6c2757422a9fd2fd3d2", "patch": "@@ -8,21 +8,26 @@ fn main() {\n     // directory.\n     let out_dir = PathBuf::from(env::var(\"OUT_DIR\").unwrap());\n     let dest = out_dir.join(\"error_codes.rs\");\n-    let mut idx = 0;\n-    for entry in WalkDir::new(\"../../../src\") {\n-        let entry = entry.unwrap();\n-        if entry.file_name() == \"error_codes.rs\" {\n-            println!(\"cargo:rerun-if-changed={}\", entry.path().to_str().unwrap());\n-            let file = fs::read_to_string(entry.path()).unwrap()\n-                .replace(\"crate::register_diagnostics!\", \"register_diagnostics!\")\n-                .replace(\": include_str!(\\\"./\",\n-                         \": include_str!(\\\"../../../../../../../../src/librustc_error_codes/\");\n-            let contents = format!(\"(|| {{\\n{}\\n}})()\", file);\n \n-            fs::write(&out_dir.join(&format!(\"error_{}.rs\", idx)), &contents).unwrap();\n+    let error_codes_path = \"../../../src/librustc_error_codes/error_codes.rs\";\n+\n+    println!(\"cargo:rerun-if-changed={}\", error_codes_path);\n+    let file = fs::read_to_string(error_codes_path).unwrap()\n+                  .replace(\"crate::register_diagnostics!\", \"register_diagnostics!\")\n+                  .replace(\": include_str!(\\\"./error_codes/\", \": include_str!(\\\"./\");\n+    let contents = format!(\"(|| {{\\n{}\\n}})()\", file);\n+    fs::write(&out_dir.join(\"all_error_codes.rs\"), &contents).unwrap();\n \n-            idx += 1;\n+    // We copy the md files as well to the target directory.\n+    for entry in WalkDir::new(\"../../../src/librustc_error_codes/error_codes\") {\n+        let entry = entry.unwrap();\n+        match entry.path().extension() {\n+            Some(s) if s == \"md\" => {}\n+            _ => continue,\n         }\n+        println!(\"cargo:rerun-if-changed={}\", entry.path().to_str().unwrap());\n+        let md_content = fs::read_to_string(entry.path()).unwrap();\n+        fs::write(&out_dir.join(entry.file_name()), &md_content).unwrap();\n     }\n \n     let mut all = String::new();\n@@ -48,10 +53,7 @@ fn register_all() -> Vec<(&'static str, Option<&'static str>)> {\n         )\n     }\n \"###);\n-    for idx in 0..idx {\n-        all.push_str(&format!(r#\"include!(concat!(env!(\"OUT_DIR\"), \"/error_{}.rs\"));\"#, idx));\n-        all.push_str(\"\\n\");\n-    }\n+    all.push_str(r#\"include!(concat!(env!(\"OUT_DIR\"), \"/all_error_codes.rs\"));\"#);\n     all.push_str(\"\\nlong_codes\\n\");\n     all.push_str(\"}\\n\");\n "}]}