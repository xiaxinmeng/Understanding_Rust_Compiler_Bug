{"sha": "b3be6b44b6a19b36ea7c579f757fb5764e83663b", "node_id": "C_kwDOAAsO6NoAKGIzYmU2YjQ0YjZhMTliMzZlYTdjNTc5Zjc1N2ZiNTc2NGU4MzY2M2I", "commit": {"author": {"name": "Noah Lev", "email": "camelidcamel@gmail.com", "date": "2021-10-24T20:43:47Z"}, "committer": {"name": "Noah Lev", "email": "camelidcamel@gmail.com", "date": "2021-11-10T19:36:42Z"}, "message": "Add tests for `-Zmiri-check-number-validity`", "tree": {"sha": "5db6caa53e679065a5685355250fd2754b6cd2e2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5db6caa53e679065a5685355250fd2754b6cd2e2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b3be6b44b6a19b36ea7c579f757fb5764e83663b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b3be6b44b6a19b36ea7c579f757fb5764e83663b", "html_url": "https://github.com/rust-lang/rust/commit/b3be6b44b6a19b36ea7c579f757fb5764e83663b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b3be6b44b6a19b36ea7c579f757fb5764e83663b/comments", "author": {"login": "camelid", "id": 37223377, "node_id": "MDQ6VXNlcjM3MjIzMzc3", "avatar_url": "https://avatars.githubusercontent.com/u/37223377?v=4", "gravatar_id": "", "url": "https://api.github.com/users/camelid", "html_url": "https://github.com/camelid", "followers_url": "https://api.github.com/users/camelid/followers", "following_url": "https://api.github.com/users/camelid/following{/other_user}", "gists_url": "https://api.github.com/users/camelid/gists{/gist_id}", "starred_url": "https://api.github.com/users/camelid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/camelid/subscriptions", "organizations_url": "https://api.github.com/users/camelid/orgs", "repos_url": "https://api.github.com/users/camelid/repos", "events_url": "https://api.github.com/users/camelid/events{/privacy}", "received_events_url": "https://api.github.com/users/camelid/received_events", "type": "User", "site_admin": false}, "committer": {"login": "camelid", "id": 37223377, "node_id": "MDQ6VXNlcjM3MjIzMzc3", "avatar_url": "https://avatars.githubusercontent.com/u/37223377?v=4", "gravatar_id": "", "url": "https://api.github.com/users/camelid", "html_url": "https://github.com/camelid", "followers_url": "https://api.github.com/users/camelid/followers", "following_url": "https://api.github.com/users/camelid/following{/other_user}", "gists_url": "https://api.github.com/users/camelid/gists{/gist_id}", "starred_url": "https://api.github.com/users/camelid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/camelid/subscriptions", "organizations_url": "https://api.github.com/users/camelid/orgs", "repos_url": "https://api.github.com/users/camelid/repos", "events_url": "https://api.github.com/users/camelid/events{/privacy}", "received_events_url": "https://api.github.com/users/camelid/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1659ef42069c53595dc41a530839a5fc04c5988b", "url": "https://api.github.com/repos/rust-lang/rust/commits/1659ef42069c53595dc41a530839a5fc04c5988b", "html_url": "https://github.com/rust-lang/rust/commit/1659ef42069c53595dc41a530839a5fc04c5988b"}], "stats": {"total": 32, "additions": 32, "deletions": 0}, "files": [{"sha": "06953e1ced96698bb7d7749145b75d3c486b44ab", "filename": "tests/compile-fail/uninit_float.rs", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/b3be6b44b6a19b36ea7c579f757fb5764e83663b/tests%2Fcompile-fail%2Funinit_float.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b3be6b44b6a19b36ea7c579f757fb5764e83663b/tests%2Fcompile-fail%2Funinit_float.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail%2Funinit_float.rs?ref=b3be6b44b6a19b36ea7c579f757fb5764e83663b", "patch": "@@ -0,0 +1,8 @@\n+// compile-flags: -Zmiri-check-number-validity\n+\n+// This test is adapted from https://github.com/rust-lang/miri/issues/1340#issue-600900312.\n+\n+fn main() {\n+    let _val = unsafe { std::mem::MaybeUninit::<f32>::uninit().assume_init() };\n+    //~^ ERROR type validation failed at .value: encountered uninitialized bytes, but expected initialized plain (non-pointer) bytes\n+}"}, {"sha": "757f69c050fe50f1b71c289bb78ab8e55bbf5198", "filename": "tests/compile-fail/uninit_integer.rs", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/b3be6b44b6a19b36ea7c579f757fb5764e83663b/tests%2Fcompile-fail%2Funinit_integer.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b3be6b44b6a19b36ea7c579f757fb5764e83663b/tests%2Fcompile-fail%2Funinit_integer.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail%2Funinit_integer.rs?ref=b3be6b44b6a19b36ea7c579f757fb5764e83663b", "patch": "@@ -0,0 +1,8 @@\n+// compile-flags: -Zmiri-check-number-validity\n+\n+// This test is from https://github.com/rust-lang/miri/issues/1340#issue-600900312.\n+\n+fn main() {\n+    let _val = unsafe { std::mem::MaybeUninit::<usize>::uninit().assume_init() };\n+    //~^ ERROR type validation failed at .value: encountered uninitialized bytes, but expected initialized plain (non-pointer) bytes\n+}"}, {"sha": "bb5d7314a7c1f8d536af40ed55018528b75851ec", "filename": "tests/compile-fail/uninit_integer_signed.rs", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/b3be6b44b6a19b36ea7c579f757fb5764e83663b/tests%2Fcompile-fail%2Funinit_integer_signed.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b3be6b44b6a19b36ea7c579f757fb5764e83663b/tests%2Fcompile-fail%2Funinit_integer_signed.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail%2Funinit_integer_signed.rs?ref=b3be6b44b6a19b36ea7c579f757fb5764e83663b", "patch": "@@ -0,0 +1,8 @@\n+// compile-flags: -Zmiri-check-number-validity\n+\n+// This test is adapted from https://github.com/rust-lang/miri/issues/1340#issue-600900312.\n+\n+fn main() {\n+    let _val = unsafe { std::mem::MaybeUninit::<i32>::uninit().assume_init() };\n+    //~^ ERROR type validation failed at .value: encountered uninitialized bytes, but expected initialized plain (non-pointer) bytes\n+}"}, {"sha": "77d6af6e99cf7a029ada6df42ef446fd07c9efc8", "filename": "tests/run-pass/uninit_number_ignored.rs", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/b3be6b44b6a19b36ea7c579f757fb5764e83663b/tests%2Frun-pass%2Funinit_number_ignored.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b3be6b44b6a19b36ea7c579f757fb5764e83663b/tests%2Frun-pass%2Funinit_number_ignored.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Funinit_number_ignored.rs?ref=b3be6b44b6a19b36ea7c579f757fb5764e83663b", "patch": "@@ -0,0 +1,8 @@\n+// This test is adapted from https://github.com/rust-lang/miri/issues/1340#issue-600900312.\n+// This test passes because -Zmiri-check-number-validity is not passed.\n+\n+fn main() {\n+    let _val1 = unsafe { std::mem::MaybeUninit::<usize>::uninit().assume_init() };\n+    let _val2 = unsafe { std::mem::MaybeUninit::<i32>::uninit().assume_init() };\n+    let _val3 = unsafe { std::mem::MaybeUninit::<f32>::uninit().assume_init() };\n+}"}]}