{"sha": "95db3c147684ced6b5ddfd4612b21b90d6903b30", "node_id": "C_kwDOAAsO6NoAKDk1ZGIzYzE0NzY4NGNlZDZiNWRkZmQ0NjEyYjIxYjkwZDY5MDNiMzA", "commit": {"author": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2022-02-15T09:09:19Z"}, "committer": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2022-02-15T09:09:19Z"}, "message": "fix: keyword hover works on non-keyword tokens if expanded to keyword", "tree": {"sha": "d40bc5cfb72a43afcbfd17ab23eeda44ee42208c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d40bc5cfb72a43afcbfd17ab23eeda44ee42208c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/95db3c147684ced6b5ddfd4612b21b90d6903b30", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/95db3c147684ced6b5ddfd4612b21b90d6903b30", "html_url": "https://github.com/rust-lang/rust/commit/95db3c147684ced6b5ddfd4612b21b90d6903b30", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/95db3c147684ced6b5ddfd4612b21b90d6903b30/comments", "author": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9bc2ee34b0f67bb84254d5a2178bcfddde6a7924", "url": "https://api.github.com/repos/rust-lang/rust/commits/9bc2ee34b0f67bb84254d5a2178bcfddde6a7924", "html_url": "https://github.com/rust-lang/rust/commit/9bc2ee34b0f67bb84254d5a2178bcfddde6a7924"}], "stats": {"total": 17, "additions": 10, "deletions": 7}, "files": [{"sha": "0eba0b09ba6e2dfded2f179b785f18c7e1bcd5a0", "filename": "crates/ide/src/hover.rs", "status": "modified", "additions": 10, "deletions": 7, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/95db3c147684ced6b5ddfd4612b21b90d6903b30/crates%2Fide%2Fsrc%2Fhover.rs", "raw_url": "https://github.com/rust-lang/rust/raw/95db3c147684ced6b5ddfd4612b21b90d6903b30/crates%2Fide%2Fsrc%2Fhover.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fhover.rs?ref=95db3c147684ced6b5ddfd4612b21b90d6903b30", "patch": "@@ -94,11 +94,10 @@ pub(crate) fn hover(\n     let sema = &hir::Semantics::new(db);\n     let file = sema.parse(file_id).syntax().clone();\n \n-    let offset = if !range.is_empty() {\n+    if !range.is_empty() {\n         return hover_ranged(&file, range, sema, config);\n-    } else {\n-        range.start()\n-    };\n+    }\n+    let offset = range.start();\n \n     let original_token = pick_best_token(file.token_at_offset(offset), |kind| match kind {\n         IDENT | INT_NUMBER | LIFETIME_IDENT | T![self] | T![super] | T![crate] => 3,\n@@ -118,10 +117,11 @@ pub(crate) fn hover(\n     let descended = sema.descend_into_macros(original_token.clone());\n \n     // FIXME: Definition should include known lints and the like instead of having this special case here\n-    if let Some(res) = descended.iter().find_map(|token| {\n+    let hovered_lint = descended.iter().find_map(|token| {\n         let attr = token.ancestors().find_map(ast::Attr::cast)?;\n         render::try_for_lint(&attr, token)\n-    }) {\n+    });\n+    if let Some(res) = hovered_lint {\n         return Some(RangeInfo::new(original_token.text_range(), res));\n     }\n \n@@ -143,7 +143,9 @@ pub(crate) fn hover(\n \n     if result.is_none() {\n         // fallbacks, show keywords or types\n-        if let Some(res) = render::keyword(sema, config, &original_token) {\n+\n+        let res = descended.iter().find_map(|token| render::keyword(sema, config, &token));\n+        if let Some(res) = res {\n             return Some(RangeInfo::new(original_token.text_range(), res));\n         }\n         let res = descended\n@@ -199,6 +201,7 @@ fn hover_ranged(\n     sema: &Semantics<RootDatabase>,\n     config: &HoverConfig,\n ) -> Option<RangeInfo<HoverResult>> {\n+    // FIXME: make this work in attributes\n     let expr_or_pat = file.covering_element(range).ancestors().find_map(|it| {\n         match_ast! {\n             match it {"}]}