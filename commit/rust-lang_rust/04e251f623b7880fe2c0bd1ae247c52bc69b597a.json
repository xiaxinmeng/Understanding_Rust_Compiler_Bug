{"sha": "04e251f623b7880fe2c0bd1ae247c52bc69b597a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA0ZTI1MWY2MjNiNzg4MGZlMmMwYmQxYWUyNDdjNTJiYzY5YjU5N2E=", "commit": {"author": {"name": "Philipp Hansch", "email": "dev@phansch.net", "date": "2018-12-10T21:04:27Z"}, "committer": {"name": "Philipp Hansch", "email": "dev@phansch.net", "date": "2018-12-10T21:04:27Z"}, "message": "readme: tool lints are stable now", "tree": {"sha": "cb46265db7a75130064e86e9fcc73aec9b7fa345", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/cb46265db7a75130064e86e9fcc73aec9b7fa345"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/04e251f623b7880fe2c0bd1ae247c52bc69b597a", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEvUKv4zqIn2RHUgCKtvoGpuDiZlsFAlwO1QkACgkQtvoGpuDi\nZlsneBAAgVOzWpmd+C3nNdtzLw2Sxxep3G631O+2My2Dc3zbcfVzUvhRkSPVtFt8\nZ13hVJ3mO3halG09fEsO0h0oJiDXRnnVYSazrYs67Noo1WhtC42O+Y0j/nIekOcI\nugpr2WEmxh/kNV/A5U1PcHhskCJCrJS81pPB4y6Kp47Qliv0fJ81rC96ZVy5SH4O\nE64K8TY0jczVlG2Xcd0tEwWrQeB17W0wcyCEg7am+9x2uKny8+l4tZVCyGqNtKJw\n6LW70twu5TwRjnCyz0A55MVjQstxMGHQmheP5d6mAVYvwGn6VFgw9/82k7yWh6CB\nfFMO7K3zPPHvSKSEpgG1Q53r+sJ5NNNtc7Y/98snP1TgQPpAKkTtYgb519LGNdWr\nKE3zl6RB/PLYPgZb2OZ61WIoKeBKXbpDrvkVefEa8MFFDC2Jk3gZNEe849npCipJ\nfIg45+5NFuQOkYjHkQpz2CPNj/hyJCgFLVGQ1ONq48wKQg0ALsZuDC1QC7gDguXO\nqCUOGSyPHa5tgQAU0fKyuAVCUSZEkivef3d5bWMNZxZtEudX+jTtMArx01TtoIt+\ndU6ZXRoWTa/3N8XjSuNEznLNtmomZIhRFHsb+D6QuufWLj5RidSi52fueanN2EQv\nIbir53aYueOjDqnwKzgYXpIr5Xpud/YknwA8UyVCEW3Ixq86fTw=\n=Cd7S\n-----END PGP SIGNATURE-----", "payload": "tree cb46265db7a75130064e86e9fcc73aec9b7fa345\nparent 5b01f7a0d6be3ed7485dc6421d0cffa456b63ade\nauthor Philipp Hansch <dev@phansch.net> 1544475867 +0100\ncommitter Philipp Hansch <dev@phansch.net> 1544475867 +0100\n\nreadme: tool lints are stable now\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/04e251f623b7880fe2c0bd1ae247c52bc69b597a", "html_url": "https://github.com/rust-lang/rust/commit/04e251f623b7880fe2c0bd1ae247c52bc69b597a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/04e251f623b7880fe2c0bd1ae247c52bc69b597a/comments", "author": {"login": "phansch", "id": 2042399, "node_id": "MDQ6VXNlcjIwNDIzOTk=", "avatar_url": "https://avatars.githubusercontent.com/u/2042399?v=4", "gravatar_id": "", "url": "https://api.github.com/users/phansch", "html_url": "https://github.com/phansch", "followers_url": "https://api.github.com/users/phansch/followers", "following_url": "https://api.github.com/users/phansch/following{/other_user}", "gists_url": "https://api.github.com/users/phansch/gists{/gist_id}", "starred_url": "https://api.github.com/users/phansch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/phansch/subscriptions", "organizations_url": "https://api.github.com/users/phansch/orgs", "repos_url": "https://api.github.com/users/phansch/repos", "events_url": "https://api.github.com/users/phansch/events{/privacy}", "received_events_url": "https://api.github.com/users/phansch/received_events", "type": "User", "site_admin": false}, "committer": {"login": "phansch", "id": 2042399, "node_id": "MDQ6VXNlcjIwNDIzOTk=", "avatar_url": "https://avatars.githubusercontent.com/u/2042399?v=4", "gravatar_id": "", "url": "https://api.github.com/users/phansch", "html_url": "https://github.com/phansch", "followers_url": "https://api.github.com/users/phansch/followers", "following_url": "https://api.github.com/users/phansch/following{/other_user}", "gists_url": "https://api.github.com/users/phansch/gists{/gist_id}", "starred_url": "https://api.github.com/users/phansch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/phansch/subscriptions", "organizations_url": "https://api.github.com/users/phansch/orgs", "repos_url": "https://api.github.com/users/phansch/repos", "events_url": "https://api.github.com/users/phansch/events{/privacy}", "received_events_url": "https://api.github.com/users/phansch/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5b01f7a0d6be3ed7485dc6421d0cffa456b63ade", "url": "https://api.github.com/repos/rust-lang/rust/commits/5b01f7a0d6be3ed7485dc6421d0cffa456b63ade", "html_url": "https://github.com/rust-lang/rust/commit/5b01f7a0d6be3ed7485dc6421d0cffa456b63ade"}], "stats": {"total": 16, "additions": 1, "deletions": 15}, "files": [{"sha": "928c961c017e590844518d07dab319615013f5b8", "filename": "README.md", "status": "modified", "additions": 1, "deletions": 15, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/04e251f623b7880fe2c0bd1ae247c52bc69b597a/README.md", "raw_url": "https://github.com/rust-lang/rust/raw/04e251f623b7880fe2c0bd1ae247c52bc69b597a/README.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/README.md?ref=04e251f623b7880fe2c0bd1ae247c52bc69b597a", "patch": "@@ -149,21 +149,7 @@ You can add options to your code to `allow`/`warn`/`deny` Clippy lints:\n \n Note: `deny` produces errors instead of warnings.\n \n-Note: To use the new `clippy::lint_name` syntax, a recent compiler has to be used\n-currently. If you want to compile your code with the stable toolchain you can use a `cfg_attr` to\n-activate the `tool_lints` feature:\n-```rust\n-#![cfg_attr(feature = \"cargo-clippy\", allow(clippy::lint_name))]\n-```\n-\n-For this to work you have to use Clippy on the nightly toolchain: `cargo +nightly clippy`. If you\n-want to use Clippy with the stable toolchain, you can stick to the old unscoped method to\n-enable/disable Clippy lints until `tool_lints` are stable:\n-```rust\n-#![cfg_attr(feature = \"cargo-clippy\", allow(clippy_lint))]\n-```\n-\n-If you do not want to include your lint levels in your code, you can globally enable/disable lints by passing extra flags to clippy during the run: `cargo clippy -- -A lint_name` will run clippy with `lint_name` disabled and `cargo clippy -- -W lint_name` will run it with that enabled. On newer compilers you may need to use `clippy::lint_name` instead.\n+If you do not want to include your lint levels in your code, you can globally enable/disable lints by passing extra flags to clippy during the run: `cargo clippy -- -A clippy::lint_name` will run clippy with `lint_name` disabled and `cargo clippy -- -W clippy::lint_name` will run it with that enabled.\n \n ## License\n "}]}