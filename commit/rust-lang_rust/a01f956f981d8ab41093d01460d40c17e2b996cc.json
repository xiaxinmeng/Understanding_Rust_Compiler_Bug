{"sha": "a01f956f981d8ab41093d01460d40c17e2b996cc", "node_id": "MDY6Q29tbWl0NzI0NzEyOmEwMWY5NTZmOTgxZDhhYjQxMDkzZDAxNDYwZDQwYzE3ZTJiOTk2Y2M=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-12-21T14:29:45Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-12-21T14:29:45Z"}, "message": "Rollup merge of #67422 - GuillaumeGomez:cleanup-err-codes, r=Dylan-DPC\n\nCleanup err codes\n\nr? @Dylan-DPC", "tree": {"sha": "28928dd1f547667fc8d4301fab61b4da4f7ddfb4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/28928dd1f547667fc8d4301fab61b4da4f7ddfb4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a01f956f981d8ab41093d01460d40c17e2b996cc", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJd/ixaCRBK7hj4Ov3rIwAAdHIIACZ3xwz/723VdAyWaOGDIPP7\nfeACcrszuoW9CNfzrusG2Tyc7KqgCk2M05LL97WlOXykvv8oixlItLtp3Eoxbxrb\ngckgHl8yk6erXQV7n2UNOZaI6Gg56tBqn0u3aZpu+vtu9FPNv5FZXM7AgdupdHLj\nYnPBAaQvvrKG+FE94OLj8AVxKLmLrPSKPcm4pTgqI7ax0g4u6kd05TrYGoc0qju2\nmZB+mFMFWLNmBc7UtzjdiiVVuGCx9BAd2HRw7vblQLKOTyy3nGWA4xhYEkoLf+gu\nqZvRmcpCSQzKGqP8Z8cvFKbOSp1SzUuDmnNkrhuNAv2g0NIog8OpmpIjcLj0T4M=\n=xkiu\n-----END PGP SIGNATURE-----\n", "payload": "tree 28928dd1f547667fc8d4301fab61b4da4f7ddfb4\nparent 6e3b1d63b6445cb55d75b1c360e99752e7c1fb94\nparent dce0f06f953d4f0f46cc7ca108c55f326febc790\nauthor Mazdak Farrokhzad <twingoow@gmail.com> 1576938585 +0100\ncommitter GitHub <noreply@github.com> 1576938585 +0100\n\nRollup merge of #67422 - GuillaumeGomez:cleanup-err-codes, r=Dylan-DPC\n\nCleanup err codes\n\nr? @Dylan-DPC\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a01f956f981d8ab41093d01460d40c17e2b996cc", "html_url": "https://github.com/rust-lang/rust/commit/a01f956f981d8ab41093d01460d40c17e2b996cc", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a01f956f981d8ab41093d01460d40c17e2b996cc/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6e3b1d63b6445cb55d75b1c360e99752e7c1fb94", "url": "https://api.github.com/repos/rust-lang/rust/commits/6e3b1d63b6445cb55d75b1c360e99752e7c1fb94", "html_url": "https://github.com/rust-lang/rust/commit/6e3b1d63b6445cb55d75b1c360e99752e7c1fb94"}, {"sha": "dce0f06f953d4f0f46cc7ca108c55f326febc790", "url": "https://api.github.com/repos/rust-lang/rust/commits/dce0f06f953d4f0f46cc7ca108c55f326febc790", "html_url": "https://github.com/rust-lang/rust/commit/dce0f06f953d4f0f46cc7ca108c55f326febc790"}], "stats": {"total": 34, "additions": 25, "deletions": 9}, "files": [{"sha": "dc7258d87317fd7ad811b3655ac963f2ad8f8031", "filename": "src/librustc_error_codes/error_codes/E0120.md", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/a01f956f981d8ab41093d01460d40c17e2b996cc/src%2Flibrustc_error_codes%2Ferror_codes%2FE0120.md", "raw_url": "https://github.com/rust-lang/rust/raw/a01f956f981d8ab41093d01460d40c17e2b996cc/src%2Flibrustc_error_codes%2Ferror_codes%2FE0120.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_error_codes%2Ferror_codes%2FE0120.md?ref=a01f956f981d8ab41093d01460d40c17e2b996cc", "patch": "@@ -1,5 +1,7 @@\n-An attempt was made to implement Drop on a trait, which is not allowed: only\n-structs and enums can implement Drop. An example causing this error:\n+Drop was implemented on a trait, which is not allowed: only structs and\n+enums can implement Drop.\n+\n+Erroneous code example:\n \n ```compile_fail,E0120\n trait MyTrait {}\n@@ -10,7 +12,7 @@ impl Drop for MyTrait {\n ```\n \n A workaround for this problem is to wrap the trait up in a struct, and implement\n-Drop on that. An example is shown below:\n+Drop on that:\n \n ```\n trait MyTrait {}\n@@ -22,7 +24,7 @@ impl <T: MyTrait> Drop for MyWrapper<T> {\n \n ```\n \n-Alternatively, wrapping trait objects requires something like the following:\n+Alternatively, wrapping trait objects requires something:\n \n ```\n trait MyTrait {}"}, {"sha": "06fe396d50d3b2d5dac334ec7fdf8482adf1786b", "filename": "src/librustc_error_codes/error_codes/E0121.md", "status": "modified", "additions": 19, "deletions": 5, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/a01f956f981d8ab41093d01460d40c17e2b996cc/src%2Flibrustc_error_codes%2Ferror_codes%2FE0121.md", "raw_url": "https://github.com/rust-lang/rust/raw/a01f956f981d8ab41093d01460d40c17e2b996cc/src%2Flibrustc_error_codes%2Ferror_codes%2FE0121.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_error_codes%2Ferror_codes%2FE0121.md?ref=a01f956f981d8ab41093d01460d40c17e2b996cc", "patch": "@@ -1,10 +1,24 @@\n-In order to be consistent with Rust's lack of global type inference,\n-type and const placeholders are disallowed by design in item signatures.\n+The type placeholder `_` was used within a type on an item's signature.\n \n-Examples of this error include:\n+Erroneous code example:\n \n ```compile_fail,E0121\n-fn foo() -> _ { 5 } // error, explicitly write out the return type instead\n+fn foo() -> _ { 5 } // error\n \n-static BAR: _ = \"test\"; // error, explicitly write out the type instead\n+static BAR: _ = \"test\"; // error\n+```\n+\n+In those cases, you need to provide the type explicitly:\n+\n+```\n+fn foo() -> i32 { 5 } // ok!\n+\n+static BAR: &str = \"test\"; // ok!\n+```\n+\n+The type placeholder `_` can be used outside item's signature as follows:\n+\n+```\n+let x = \"a4a\".split('4')\n+    .collect::<Vec<_>>(); // No need to precise the Vec's generic type.\n ```"}]}