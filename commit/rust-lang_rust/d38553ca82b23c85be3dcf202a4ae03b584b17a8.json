{"sha": "d38553ca82b23c85be3dcf202a4ae03b584b17a8", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQzODU1M2NhODJiMjNjODViZTNkY2YyMDJhNGFlMDNiNTg0YjE3YTg=", "commit": {"author": {"name": "oli", "email": "github35764891676564198441@oli-obk.de", "date": "2021-01-25T09:34:33Z"}, "committer": {"name": "oli", "email": "github35764891676564198441@oli-obk.de", "date": "2021-01-25T09:34:33Z"}, "message": "Ignore a test on wasm, because that changes landing pads", "tree": {"sha": "8b6a42d0cecff62cbbafd8504b7e3b487074824f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8b6a42d0cecff62cbbafd8504b7e3b487074824f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d38553ca82b23c85be3dcf202a4ae03b584b17a8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d38553ca82b23c85be3dcf202a4ae03b584b17a8", "html_url": "https://github.com/rust-lang/rust/commit/d38553ca82b23c85be3dcf202a4ae03b584b17a8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d38553ca82b23c85be3dcf202a4ae03b584b17a8/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "03c6364160316fb0625877e26fe471973599b3c6", "url": "https://api.github.com/repos/rust-lang/rust/commits/03c6364160316fb0625877e26fe471973599b3c6", "html_url": "https://github.com/rust-lang/rust/commit/03c6364160316fb0625877e26fe471973599b3c6"}], "stats": {"total": 76, "additions": 39, "deletions": 37}, "files": [{"sha": "54dd545dfb9a6eaa4a081a0db321776352e04f70", "filename": "src/test/mir-opt/inline/cycle.f.Inline.diff", "status": "modified", "additions": 19, "deletions": 19, "changes": 38, "blob_url": "https://github.com/rust-lang/rust/blob/d38553ca82b23c85be3dcf202a4ae03b584b17a8/src%2Ftest%2Fmir-opt%2Finline%2Fcycle.f.Inline.diff", "raw_url": "https://github.com/rust-lang/rust/raw/d38553ca82b23c85be3dcf202a4ae03b584b17a8/src%2Ftest%2Fmir-opt%2Finline%2Fcycle.f.Inline.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Finline%2Fcycle.f.Inline.diff?ref=d38553ca82b23c85be3dcf202a4ae03b584b17a8", "patch": "@@ -2,41 +2,41 @@\n + // MIR for `f` after Inline\n   \n   fn f(_1: impl Fn()) -> () {\n-      debug g => _1;                       // in scope 0 at $DIR/cycle.rs:3:6: 3:7\n-      let mut _0: ();                      // return place in scope 0 at $DIR/cycle.rs:3:20: 3:20\n-      let _2: ();                          // in scope 0 at $DIR/cycle.rs:4:5: 4:8\n-      let mut _3: &impl Fn();              // in scope 0 at $DIR/cycle.rs:4:5: 4:6\n-      let mut _4: ();                      // in scope 0 at $DIR/cycle.rs:4:5: 4:8\n+      debug g => _1;                       // in scope 0 at $DIR/cycle.rs:5:6: 5:7\n+      let mut _0: ();                      // return place in scope 0 at $DIR/cycle.rs:5:20: 5:20\n+      let _2: ();                          // in scope 0 at $DIR/cycle.rs:6:5: 6:8\n+      let mut _3: &impl Fn();              // in scope 0 at $DIR/cycle.rs:6:5: 6:6\n+      let mut _4: ();                      // in scope 0 at $DIR/cycle.rs:6:5: 6:8\n   \n       bb0: {\n-          StorageLive(_2);                 // scope 0 at $DIR/cycle.rs:4:5: 4:8\n-          StorageLive(_3);                 // scope 0 at $DIR/cycle.rs:4:5: 4:6\n-          _3 = &_1;                        // scope 0 at $DIR/cycle.rs:4:5: 4:6\n-          StorageLive(_4);                 // scope 0 at $DIR/cycle.rs:4:5: 4:8\n-          _2 = <impl Fn() as Fn<()>>::call(move _3, move _4) -> [return: bb1, unwind: bb3]; // scope 0 at $DIR/cycle.rs:4:5: 4:8\n+          StorageLive(_2);                 // scope 0 at $DIR/cycle.rs:6:5: 6:8\n+          StorageLive(_3);                 // scope 0 at $DIR/cycle.rs:6:5: 6:6\n+          _3 = &_1;                        // scope 0 at $DIR/cycle.rs:6:5: 6:6\n+          StorageLive(_4);                 // scope 0 at $DIR/cycle.rs:6:5: 6:8\n+          _2 = <impl Fn() as Fn<()>>::call(move _3, move _4) -> [return: bb1, unwind: bb3]; // scope 0 at $DIR/cycle.rs:6:5: 6:8\n                                            // mir::Constant\n-                                           // + span: $DIR/cycle.rs:4:5: 4:6\n+                                           // + span: $DIR/cycle.rs:6:5: 6:6\n                                            // + literal: Const { ty: for<'r> extern \"rust-call\" fn(&'r impl Fn(), ()) -> <impl Fn() as std::ops::FnOnce<()>>::Output {<impl Fn() as std::ops::Fn<()>>::call}, val: Value(Scalar(<ZST>)) }\n       }\n   \n       bb1: {\n-          StorageDead(_4);                 // scope 0 at $DIR/cycle.rs:4:7: 4:8\n-          StorageDead(_3);                 // scope 0 at $DIR/cycle.rs:4:7: 4:8\n-          StorageDead(_2);                 // scope 0 at $DIR/cycle.rs:4:8: 4:9\n-          _0 = const ();                   // scope 0 at $DIR/cycle.rs:3:20: 5:2\n-          drop(_1) -> [return: bb2, unwind: bb4]; // scope 0 at $DIR/cycle.rs:5:1: 5:2\n+          StorageDead(_4);                 // scope 0 at $DIR/cycle.rs:6:7: 6:8\n+          StorageDead(_3);                 // scope 0 at $DIR/cycle.rs:6:7: 6:8\n+          StorageDead(_2);                 // scope 0 at $DIR/cycle.rs:6:8: 6:9\n+          _0 = const ();                   // scope 0 at $DIR/cycle.rs:5:20: 7:2\n+          drop(_1) -> [return: bb2, unwind: bb4]; // scope 0 at $DIR/cycle.rs:7:1: 7:2\n       }\n   \n       bb2: {\n-          return;                          // scope 0 at $DIR/cycle.rs:5:2: 5:2\n+          return;                          // scope 0 at $DIR/cycle.rs:7:2: 7:2\n       }\n   \n       bb3 (cleanup): {\n-          drop(_1) -> bb4;                 // scope 0 at $DIR/cycle.rs:5:1: 5:2\n+          drop(_1) -> bb4;                 // scope 0 at $DIR/cycle.rs:7:1: 7:2\n       }\n   \n       bb4 (cleanup): {\n-          resume;                          // scope 0 at $DIR/cycle.rs:3:1: 5:2\n+          resume;                          // scope 0 at $DIR/cycle.rs:5:1: 7:2\n       }\n   }\n   "}, {"sha": "46f5e5e20655bd43d7fb50b6df1957a010396e74", "filename": "src/test/mir-opt/inline/cycle.g.Inline.diff", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/d38553ca82b23c85be3dcf202a4ae03b584b17a8/src%2Ftest%2Fmir-opt%2Finline%2Fcycle.g.Inline.diff", "raw_url": "https://github.com/rust-lang/rust/raw/d38553ca82b23c85be3dcf202a4ae03b584b17a8/src%2Ftest%2Fmir-opt%2Finline%2Fcycle.g.Inline.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Finline%2Fcycle.g.Inline.diff?ref=d38553ca82b23c85be3dcf202a4ae03b584b17a8", "patch": "@@ -2,24 +2,24 @@\n + // MIR for `g` after Inline\n   \n   fn g() -> () {\n-      let mut _0: ();                      // return place in scope 0 at $DIR/cycle.rs:9:8: 9:8\n-      let _1: ();                          // in scope 0 at $DIR/cycle.rs:10:5: 10:12\n+      let mut _0: ();                      // return place in scope 0 at $DIR/cycle.rs:11:8: 11:8\n+      let _1: ();                          // in scope 0 at $DIR/cycle.rs:12:5: 12:12\n   \n       bb0: {\n-          StorageLive(_1);                 // scope 0 at $DIR/cycle.rs:10:5: 10:12\n-          _1 = f::<fn() {main}>(main) -> bb1; // scope 0 at $DIR/cycle.rs:10:5: 10:12\n+          StorageLive(_1);                 // scope 0 at $DIR/cycle.rs:12:5: 12:12\n+          _1 = f::<fn() {main}>(main) -> bb1; // scope 0 at $DIR/cycle.rs:12:5: 12:12\n                                            // mir::Constant\n-                                           // + span: $DIR/cycle.rs:10:5: 10:6\n+                                           // + span: $DIR/cycle.rs:12:5: 12:6\n                                            // + literal: Const { ty: fn(fn() {main}) {f::<fn() {main}>}, val: Value(Scalar(<ZST>)) }\n                                            // mir::Constant\n-                                           // + span: $DIR/cycle.rs:10:7: 10:11\n+                                           // + span: $DIR/cycle.rs:12:7: 12:11\n                                            // + literal: Const { ty: fn() {main}, val: Value(Scalar(<ZST>)) }\n       }\n   \n       bb1: {\n-          StorageDead(_1);                 // scope 0 at $DIR/cycle.rs:10:12: 10:13\n-          _0 = const ();                   // scope 0 at $DIR/cycle.rs:9:8: 11:2\n-          return;                          // scope 0 at $DIR/cycle.rs:11:2: 11:2\n+          StorageDead(_1);                 // scope 0 at $DIR/cycle.rs:12:12: 12:13\n+          _0 = const ();                   // scope 0 at $DIR/cycle.rs:11:8: 13:2\n+          return;                          // scope 0 at $DIR/cycle.rs:13:2: 13:2\n       }\n   }\n   "}, {"sha": "c8d1448d949d44707efac924bc109e865a084de7", "filename": "src/test/mir-opt/inline/cycle.main.Inline.diff", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/d38553ca82b23c85be3dcf202a4ae03b584b17a8/src%2Ftest%2Fmir-opt%2Finline%2Fcycle.main.Inline.diff", "raw_url": "https://github.com/rust-lang/rust/raw/d38553ca82b23c85be3dcf202a4ae03b584b17a8/src%2Ftest%2Fmir-opt%2Finline%2Fcycle.main.Inline.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Finline%2Fcycle.main.Inline.diff?ref=d38553ca82b23c85be3dcf202a4ae03b584b17a8", "patch": "@@ -2,24 +2,24 @@\n + // MIR for `main` after Inline\n   \n   fn main() -> () {\n-      let mut _0: ();                      // return place in scope 0 at $DIR/cycle.rs:14:11: 14:11\n-      let _1: ();                          // in scope 0 at $DIR/cycle.rs:15:5: 15:9\n+      let mut _0: ();                      // return place in scope 0 at $DIR/cycle.rs:16:11: 16:11\n+      let _1: ();                          // in scope 0 at $DIR/cycle.rs:17:5: 17:9\n   \n       bb0: {\n-          StorageLive(_1);                 // scope 0 at $DIR/cycle.rs:15:5: 15:9\n-          _1 = f::<fn() {g}>(g) -> bb1;    // scope 0 at $DIR/cycle.rs:15:5: 15:9\n+          StorageLive(_1);                 // scope 0 at $DIR/cycle.rs:17:5: 17:9\n+          _1 = f::<fn() {g}>(g) -> bb1;    // scope 0 at $DIR/cycle.rs:17:5: 17:9\n                                            // mir::Constant\n-                                           // + span: $DIR/cycle.rs:15:5: 15:6\n+                                           // + span: $DIR/cycle.rs:17:5: 17:6\n                                            // + literal: Const { ty: fn(fn() {g}) {f::<fn() {g}>}, val: Value(Scalar(<ZST>)) }\n                                            // mir::Constant\n-                                           // + span: $DIR/cycle.rs:15:7: 15:8\n+                                           // + span: $DIR/cycle.rs:17:7: 17:8\n                                            // + literal: Const { ty: fn() {g}, val: Value(Scalar(<ZST>)) }\n       }\n   \n       bb1: {\n-          StorageDead(_1);                 // scope 0 at $DIR/cycle.rs:15:9: 15:10\n-          _0 = const ();                   // scope 0 at $DIR/cycle.rs:14:11: 16:2\n-          return;                          // scope 0 at $DIR/cycle.rs:16:2: 16:2\n+          StorageDead(_1);                 // scope 0 at $DIR/cycle.rs:17:9: 17:10\n+          _0 = const ();                   // scope 0 at $DIR/cycle.rs:16:11: 18:2\n+          return;                          // scope 0 at $DIR/cycle.rs:18:2: 18:2\n       }\n   }\n   "}, {"sha": "9e8950d8a3d61e160cd6ed701c18e3cf0c5e167d", "filename": "src/test/mir-opt/inline/cycle.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d38553ca82b23c85be3dcf202a4ae03b584b17a8/src%2Ftest%2Fmir-opt%2Finline%2Fcycle.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d38553ca82b23c85be3dcf202a4ae03b584b17a8/src%2Ftest%2Fmir-opt%2Finline%2Fcycle.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Finline%2Fcycle.rs?ref=d38553ca82b23c85be3dcf202a4ae03b584b17a8", "patch": "@@ -1,3 +1,5 @@\n+// ignore-wasm32-bare compiled with panic=abort by default\n+\n // EMIT_MIR cycle.f.Inline.diff\n #[inline(always)]\n fn f(g: impl Fn()) {"}]}