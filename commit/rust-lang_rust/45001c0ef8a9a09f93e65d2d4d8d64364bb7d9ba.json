{"sha": "45001c0ef8a9a09f93e65d2d4d8d64364bb7d9ba", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ1MDAxYzBlZjhhOWEwOWY5M2U2NWQyZDRkOGQ2NDM2NGJiN2Q5YmE=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2015-05-25T15:54:39Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2015-05-25T15:54:39Z"}, "message": "Auto merge of #25773 - dotdash:deref_dst, r=eddyb\n\nFat pointers aren't immediate, so in a datum, they're not actually\r\nByValue but ByRef.\r\n\r\nFixes #24589", "tree": {"sha": "5eb59dab591867e8fd869e305e4faadc2b406410", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5eb59dab591867e8fd869e305e4faadc2b406410"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/45001c0ef8a9a09f93e65d2d4d8d64364bb7d9ba", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/45001c0ef8a9a09f93e65d2d4d8d64364bb7d9ba", "html_url": "https://github.com/rust-lang/rust/commit/45001c0ef8a9a09f93e65d2d4d8d64364bb7d9ba", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/45001c0ef8a9a09f93e65d2d4d8d64364bb7d9ba/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "38c943f7efc4ac76efc1611a702e903ff8ad67b2", "url": "https://api.github.com/repos/rust-lang/rust/commits/38c943f7efc4ac76efc1611a702e903ff8ad67b2", "html_url": "https://github.com/rust-lang/rust/commit/38c943f7efc4ac76efc1611a702e903ff8ad67b2"}, {"sha": "efd3e75503074e93958a03fa1ee2b9a5abcad7e4", "url": "https://api.github.com/repos/rust-lang/rust/commits/efd3e75503074e93958a03fa1ee2b9a5abcad7e4", "html_url": "https://github.com/rust-lang/rust/commit/efd3e75503074e93958a03fa1ee2b9a5abcad7e4"}], "stats": {"total": 30, "additions": 29, "deletions": 1}, "files": [{"sha": "63158cdee92471cd801a780204cc0615bc64988a", "filename": "src/librustc_trans/trans/expr.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/45001c0ef8a9a09f93e65d2d4d8d64364bb7d9ba/src%2Flibrustc_trans%2Ftrans%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/45001c0ef8a9a09f93e65d2d4d8d64364bb7d9ba/src%2Flibrustc_trans%2Ftrans%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Ftrans%2Fexpr.rs?ref=45001c0ef8a9a09f93e65d2d4d8d64364bb7d9ba", "patch": "@@ -2180,7 +2180,9 @@ fn auto_ref<'blk, 'tcx>(bcx: Block<'blk, 'tcx>,\n     // Construct the resulting datum, using what was the \"by ref\"\n     // ValueRef of type `referent_ty` to be the \"by value\" ValueRef\n     // of type `&referent_ty`.\n-    DatumBlock::new(bcx, Datum::new(llref, ptr_ty, RvalueExpr(Rvalue::new(ByValue))))\n+    // Pointers to DST types are non-immediate, and therefore still use ByRef.\n+    let kind  = if type_is_sized(bcx.tcx(), referent_ty) { ByValue } else { ByRef };\n+    DatumBlock::new(bcx, Datum::new(llref, ptr_ty, RvalueExpr(Rvalue::new(kind))))\n }\n \n fn deref_multiple<'blk, 'tcx>(bcx: Block<'blk, 'tcx>,"}, {"sha": "2fa8c8e98c0de0fe7acddf2a3a503f32f72637df", "filename": "src/test/run-pass/issue-24589.rs", "status": "added", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/45001c0ef8a9a09f93e65d2d4d8d64364bb7d9ba/src%2Ftest%2Frun-pass%2Fissue-24589.rs", "raw_url": "https://github.com/rust-lang/rust/raw/45001c0ef8a9a09f93e65d2d4d8d64364bb7d9ba/src%2Ftest%2Frun-pass%2Fissue-24589.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-24589.rs?ref=45001c0ef8a9a09f93e65d2d4d8d64364bb7d9ba", "patch": "@@ -0,0 +1,26 @@\n+// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+pub struct _X([u8]);\n+\n+impl std::ops::Deref for _X {\n+    type Target = [u8];\n+\n+    fn deref(&self) -> &[u8] {\n+        &self.0\n+    }\n+}\n+\n+pub fn _g(x: &_X) -> &[u8] {\n+    x\n+}\n+\n+fn main() {\n+}"}]}