{"sha": "eb17e90eba1113702349af93c0ff51269123b922", "node_id": "C_kwDOAAsO6NoAKGViMTdlOTBlYmExMTEzNzAyMzQ5YWY5M2MwZmY1MTI2OTEyM2I5MjI", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2021-09-24T15:12:17Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-09-24T15:12:17Z"}, "message": "Merge #10105\n\n10105: RfC: Use `todo!()` instead of `()` for missing fields r=jonas-schievink a=jo-so\n\nMost commonly a field of a struct can be initialized with its default value than an empty tuple.\n\nCo-authored-by: J\u00f6rg Sommer <joerg@jo-so.de>", "tree": {"sha": "baabf607f7b1bb100a9cd32d3f2b69b8498389fe", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/baabf607f7b1bb100a9cd32d3f2b69b8498389fe"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/eb17e90eba1113702349af93c0ff51269123b922", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJhTerRCRBK7hj4Ov3rIwAAu7wIAKljwr8evHxSpub77Vvp79yG\n+oc/oSx70WO+SHBs9iBeR2p1q1eEmQK2jTfoYKnXKY1ba/q2R2qeeV8QItqtI/Rj\n8bshXkS6h9G6Znjzg4WBn+0UzODhYXsPbUKqHkfDn5cznA9j+uwOsVMz+aFVBnxY\n1LTW5R/uYaXziYzdqSj+NrlX3UOPwT/fqqid+syTSBHc6T5q1y8373QCqPHXmWUQ\niaX58ha6EzTJIo/0oNV7wDJE1VRemlDTLgCz+w/btFrdsOXeCpWRvkrMniRmBMWc\n/Ha1H4UPMA1LCnqeCJjKm3uhnc8c5trRHjljTdpmz9jbqkQw2IbRTQgr4TaS4Ek=\n=VZ65\n-----END PGP SIGNATURE-----\n", "payload": "tree baabf607f7b1bb100a9cd32d3f2b69b8498389fe\nparent 377476ac458a24c2bb2f02917afe023f4b099b94\nparent c87b860d3db771cbe3649956113d64697744dd05\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1632496337 +0000\ncommitter GitHub <noreply@github.com> 1632496337 +0000\n\nMerge #10105\n\n10105: RfC: Use `todo!()` instead of `()` for missing fields r=jonas-schievink a=jo-so\n\nMost commonly a field of a struct can be initialized with its default value than an empty tuple.\n\nCo-authored-by: J\u00f6rg Sommer <joerg@jo-so.de>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/eb17e90eba1113702349af93c0ff51269123b922", "html_url": "https://github.com/rust-lang/rust/commit/eb17e90eba1113702349af93c0ff51269123b922", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/eb17e90eba1113702349af93c0ff51269123b922/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "377476ac458a24c2bb2f02917afe023f4b099b94", "url": "https://api.github.com/repos/rust-lang/rust/commits/377476ac458a24c2bb2f02917afe023f4b099b94", "html_url": "https://github.com/rust-lang/rust/commit/377476ac458a24c2bb2f02917afe023f4b099b94"}, {"sha": "c87b860d3db771cbe3649956113d64697744dd05", "url": "https://api.github.com/repos/rust-lang/rust/commits/c87b860d3db771cbe3649956113d64697744dd05", "html_url": "https://github.com/rust-lang/rust/commit/c87b860d3db771cbe3649956113d64697744dd05"}], "stats": {"total": 22, "additions": 12, "deletions": 10}, "files": [{"sha": "03656ad925bae133ed39730480f01140f5676260", "filename": "crates/ide_diagnostics/src/handlers/missing_fields.rs", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/eb17e90eba1113702349af93c0ff51269123b922/crates%2Fide_diagnostics%2Fsrc%2Fhandlers%2Fmissing_fields.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eb17e90eba1113702349af93c0ff51269123b922/crates%2Fide_diagnostics%2Fsrc%2Fhandlers%2Fmissing_fields.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_diagnostics%2Fsrc%2Fhandlers%2Fmissing_fields.rs?ref=eb17e90eba1113702349af93c0ff51269123b922", "patch": "@@ -69,10 +69,10 @@ fn fixes(ctx: &DiagnosticsContext<'_>, d: &hir::MissingFields) -> Option<Vec<Ass\n             if ty.could_unify_with(ctx.sema.db, &candidate_ty) {\n                 None\n             } else {\n-                Some(make::expr_unit())\n+                Some(make::ext::expr_todo())\n             }\n         } else {\n-            Some(make::expr_unit())\n+            Some(make::ext::expr_todo())\n         };\n         let field =\n             make::record_expr_field(make::name_ref(&f.name(ctx.sema.db).to_string()), field_expr)\n@@ -167,7 +167,7 @@ fn main() {\n pub struct Foo { pub a: i32, pub b: i32 }\n \"#,\n             r#\"\n-fn some(, b: () ) {}\n+fn some(, b: todo!() ) {}\n fn items() {}\n fn here() {}\n \n@@ -196,7 +196,7 @@ fn test_fn() {\n struct TestStruct { one: i32, two: i64 }\n \n fn test_fn() {\n-    let s = TestStruct { one: (), two: () };\n+    let s = TestStruct { one: todo!(), two: todo!() };\n }\n \"#,\n         );\n@@ -216,7 +216,7 @@ impl TestStruct {\n struct TestStruct { one: i32 }\n \n impl TestStruct {\n-    fn test_fn() { let s = Self { one: () }; }\n+    fn test_fn() { let s = Self { one: todo!() }; }\n }\n \"#,\n         );\n@@ -264,7 +264,7 @@ fn test_fn() {\n struct TestStruct { one: i32, two: i64 }\n \n fn test_fn() {\n-    let s = TestStruct{ two: 2, one: () };\n+    let s = TestStruct{ two: 2, one: todo!() };\n }\n \",\n         );\n@@ -284,7 +284,7 @@ fn test_fn() {\n struct TestStruct { r#type: u8 }\n \n fn test_fn() {\n-    TestStruct { r#type: ()  };\n+    TestStruct { r#type: todo!()  };\n }\n \",\n         );\n@@ -335,8 +335,8 @@ struct S { a: (), b: () }\n \n fn f() {\n     S {\n-        a: (),\n-        b: (),\n+        a: todo!(),\n+        b: todo!(),\n     };\n }\n \"#,\n@@ -395,7 +395,7 @@ fn f() {\n     let b = 1usize;\n     S {\n         a,\n-        b: (),\n+        b: todo!(),\n     };\n }\n \"#,"}, {"sha": "3071da45fa8aecd7e140bdf07ecdc46af2d7dc46", "filename": "crates/rust-analyzer/tests/slow-tests/tidy.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/eb17e90eba1113702349af93c0ff51269123b922/crates%2Frust-analyzer%2Ftests%2Fslow-tests%2Ftidy.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eb17e90eba1113702349af93c0ff51269123b922/crates%2Frust-analyzer%2Ftests%2Fslow-tests%2Ftidy.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Ftests%2Fslow-tests%2Ftidy.rs?ref=eb17e90eba1113702349af93c0ff51269123b922", "patch": "@@ -282,6 +282,8 @@ fn check_todo(path: &Path, text: &str) {\n         \"ide_db/src/helpers/generated_lints.rs\",\n         \"ide_assists/src/utils/gen_trait_fn_body.rs\",\n         \"ide_assists/src/tests/generated.rs\",\n+        // The tests for missing fields\n+        \"ide_diagnostics/src/handlers/missing_fields.rs\",\n     ];\n     if need_todo.iter().any(|p| path.ends_with(p)) {\n         return;"}]}