{"sha": "e500f1c1e9de96edc3ac1ce1bccc0f241fa41c0a", "node_id": "C_kwDOAAsO6NoAKGU1MDBmMWMxZTlkZTk2ZWRjM2FjMWNlMWJjY2MwZjI0MWZhNDFjMGE", "commit": {"author": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2021-10-04T06:13:17Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-10-04T06:13:17Z"}, "message": "Rollup merge of #87910 - iago-lito:mark_unsafe_nonzero_arithmetics_as_const, r=joshtriplett\n\nMark unsafe methods NonZero*::unchecked_(add|mul) as const.\n\nNow that https://github.com/rust-lang/rfcs/pull/3016 has landed, these two unstable `std` function can be marked `const`, according to this detail of #84186.", "tree": {"sha": "37c5c37893cbf9b7667c84502ca015d8a7bfd943", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/37c5c37893cbf9b7667c84502ca015d8a7bfd943"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e500f1c1e9de96edc3ac1ce1bccc0f241fa41c0a", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJhWpt9CRBK7hj4Ov3rIwAAutYIAI/+mHwJFGpA21pJpD0WTlrJ\nva1CLtn944MfkC2KDkt9jcIUQj3o5L/pcvl9gFZv8cOiqDnDnJQORbH7HGWddgux\ni8/stXi7OvrWbajnxg7LY50o4Mu8IZR7UJk0LaqBit3qvMV9rrX9m76i5tsciqoW\nAznsEzAs28c5wD7c9oF7D6RxrAdzUl17c136e31piV4ePL1Vw2x/gaWx45iD79n2\nC0lZH7lUchxiCHU13KMvbE4ZzfiSGioi5gvsS9AesAvzvKljeZT+wEuslN8Yt97Q\nNZHWkivIPH+8iv8BVBMdpmddhHuzJqjVoEJ6jlHGyBuZ7Ca8KeCfztGnbn1uPlM=\n=fdLu\n-----END PGP SIGNATURE-----\n", "payload": "tree 37c5c37893cbf9b7667c84502ca015d8a7bfd943\nparent 0f9e960241aa9f8c1c899ea5176ab71c04580cd8\nparent 74c4c0172ab1f5c19fef69a163349a0a3f9cd927\nauthor Manish Goregaokar <manishsmail@gmail.com> 1633327997 -0700\ncommitter GitHub <noreply@github.com> 1633327997 -0700\n\nRollup merge of #87910 - iago-lito:mark_unsafe_nonzero_arithmetics_as_const, r=joshtriplett\n\nMark unsafe methods NonZero*::unchecked_(add|mul) as const.\n\nNow that https://github.com/rust-lang/rfcs/pull/3016 has landed, these two unstable `std` function can be marked `const`, according to this detail of #84186.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e500f1c1e9de96edc3ac1ce1bccc0f241fa41c0a", "html_url": "https://github.com/rust-lang/rust/commit/e500f1c1e9de96edc3ac1ce1bccc0f241fa41c0a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e500f1c1e9de96edc3ac1ce1bccc0f241fa41c0a/comments", "author": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0f9e960241aa9f8c1c899ea5176ab71c04580cd8", "url": "https://api.github.com/repos/rust-lang/rust/commits/0f9e960241aa9f8c1c899ea5176ab71c04580cd8", "html_url": "https://github.com/rust-lang/rust/commit/0f9e960241aa9f8c1c899ea5176ab71c04580cd8"}, {"sha": "74c4c0172ab1f5c19fef69a163349a0a3f9cd927", "url": "https://api.github.com/repos/rust-lang/rust/commits/74c4c0172ab1f5c19fef69a163349a0a3f9cd927", "html_url": "https://github.com/rust-lang/rust/commit/74c4c0172ab1f5c19fef69a163349a0a3f9cd927"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "e44597279baf232b930e9b9844a4324dc750337b", "filename": "library/core/src/num/nonzero.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e500f1c1e9de96edc3ac1ce1bccc0f241fa41c0a/library%2Fcore%2Fsrc%2Fnum%2Fnonzero.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e500f1c1e9de96edc3ac1ce1bccc0f241fa41c0a/library%2Fcore%2Fsrc%2Fnum%2Fnonzero.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fnum%2Fnonzero.rs?ref=e500f1c1e9de96edc3ac1ce1bccc0f241fa41c0a", "patch": "@@ -379,7 +379,7 @@ macro_rules! nonzero_unsigned_operations {\n                 /// ```\n                 #[unstable(feature = \"nonzero_ops\", issue = \"84186\")]\n                 #[inline]\n-                pub unsafe fn unchecked_add(self, other: $Int) -> $Ty {\n+                pub const unsafe fn unchecked_add(self, other: $Int) -> $Ty {\n                     // SAFETY: The caller ensures there is no overflow.\n                     unsafe { $Ty::new_unchecked(self.get().unchecked_add(other)) }\n                 }\n@@ -750,7 +750,7 @@ macro_rules! nonzero_unsigned_signed_operations {\n                 /// ```\n                 #[unstable(feature = \"nonzero_ops\", issue = \"84186\")]\n                 #[inline]\n-                pub unsafe fn unchecked_mul(self, other: $Ty) -> $Ty {\n+                pub const unsafe fn unchecked_mul(self, other: $Ty) -> $Ty {\n                     // SAFETY: The caller ensures there is no overflow.\n                     unsafe { $Ty::new_unchecked(self.get().unchecked_mul(other.get())) }\n                 }"}]}