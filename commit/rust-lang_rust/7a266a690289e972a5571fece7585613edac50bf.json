{"sha": "7a266a690289e972a5571fece7585613edac50bf", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdhMjY2YTY5MDI4OWU5NzJhNTU3MWZlY2U3NTg1NjEzZWRhYzUwYmY=", "commit": {"author": {"name": "gaurikholkar", "email": "f2013002@goa.bits-pilani.ac.in", "date": "2018-03-03T12:20:11Z"}, "committer": {"name": "gaurikholkar", "email": "f2013002@goa.bits-pilani.ac.in", "date": "2018-03-10T15:22:22Z"}, "message": "minor changes", "tree": {"sha": "4bece5f6001022f5dd6f77d15c77b703bcea919e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4bece5f6001022f5dd6f77d15c77b703bcea919e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7a266a690289e972a5571fece7585613edac50bf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7a266a690289e972a5571fece7585613edac50bf", "html_url": "https://github.com/rust-lang/rust/commit/7a266a690289e972a5571fece7585613edac50bf", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7a266a690289e972a5571fece7585613edac50bf/comments", "author": {"login": "gaurikholkar", "id": 117768111, "node_id": "U_kgDOBwT_rw", "avatar_url": "https://avatars.githubusercontent.com/u/117768111?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gaurikholkar", "html_url": "https://github.com/gaurikholkar", "followers_url": "https://api.github.com/users/gaurikholkar/followers", "following_url": "https://api.github.com/users/gaurikholkar/following{/other_user}", "gists_url": "https://api.github.com/users/gaurikholkar/gists{/gist_id}", "starred_url": "https://api.github.com/users/gaurikholkar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gaurikholkar/subscriptions", "organizations_url": "https://api.github.com/users/gaurikholkar/orgs", "repos_url": "https://api.github.com/users/gaurikholkar/repos", "events_url": "https://api.github.com/users/gaurikholkar/events{/privacy}", "received_events_url": "https://api.github.com/users/gaurikholkar/received_events", "type": "User", "site_admin": false}, "committer": {"login": "gaurikholkar", "id": 117768111, "node_id": "U_kgDOBwT_rw", "avatar_url": "https://avatars.githubusercontent.com/u/117768111?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gaurikholkar", "html_url": "https://github.com/gaurikholkar", "followers_url": "https://api.github.com/users/gaurikholkar/followers", "following_url": "https://api.github.com/users/gaurikholkar/following{/other_user}", "gists_url": "https://api.github.com/users/gaurikholkar/gists{/gist_id}", "starred_url": "https://api.github.com/users/gaurikholkar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gaurikholkar/subscriptions", "organizations_url": "https://api.github.com/users/gaurikholkar/orgs", "repos_url": "https://api.github.com/users/gaurikholkar/repos", "events_url": "https://api.github.com/users/gaurikholkar/events{/privacy}", "received_events_url": "https://api.github.com/users/gaurikholkar/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bfc9b761596a024e4ba6fc32997ffc74d0ba9abb", "url": "https://api.github.com/repos/rust-lang/rust/commits/bfc9b761596a024e4ba6fc32997ffc74d0ba9abb", "html_url": "https://github.com/rust-lang/rust/commit/bfc9b761596a024e4ba6fc32997ffc74d0ba9abb"}], "stats": {"total": 34, "additions": 24, "deletions": 10}, "files": [{"sha": "db3dd73d138f315ed3ed7ad35bb777bd72c63ca2", "filename": "src/librustc_mir/borrow_check/mod.rs", "status": "modified", "additions": 19, "deletions": 6, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/7a266a690289e972a5571fece7585613edac50bf/src%2Flibrustc_mir%2Fborrow_check%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7a266a690289e972a5571fece7585613edac50bf/src%2Flibrustc_mir%2Fborrow_check%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Fmod.rs?ref=7a266a690289e972a5571fece7585613edac50bf", "patch": "@@ -1536,8 +1536,15 @@ impl<'cx, 'gcx, 'tcx> MirBorrowckCtxt<'cx, 'gcx, 'tcx> {\n         is_local_mutation_allowed: LocalMutationIsAllowed,\n     ) -> bool {\n         debug!(\n+<<<<<<< HEAD\n             \"check_access_permissions({:?}, {:?}, {:?})\",\n             place, kind, is_local_mutation_allowed\n+=======\n+            \" ({:?}, {:?}, {:?})\",\n+            place,\n+            kind,\n+            is_local_mutation_allowed\n+>>>>>>> minor changes\n         );\n         let mut error_reported = false;\n         match kind {\n@@ -1573,13 +1580,15 @@ impl<'cx, 'gcx, 'tcx> MirBorrowckCtxt<'cx, 'gcx, 'tcx> {\n                 if let Err(place_err) = self.is_mutable(place, is_local_mutation_allowed) {\n                     error_reported = true;\n \n-                    match *place{\n-                        Place::Local(local) => {let locations = self.mir.find_assignments(local);\n-                        \n-                        for n in &locations{\n-                            debug!(\"locations ={:?}\", n);}\n+                    let err_help = match *place {\n+                        Place::Local(local) => {\n+                            let locations = self.mir.find_assignments(local);\n+                                Some((self.mir.source_info(locations[0]).span, \"consider changing this to be a mutable reference: `&mut `\"))\n                         }\n-                        _ => {}}\n+                        _ => {\n+                                None\n+                            }\n+                    };\n \n                     let item_msg = if error_reported{\n                         if let Some(name) = self.describe_place(place_err) {\n@@ -1602,6 +1611,10 @@ impl<'cx, 'gcx, 'tcx> MirBorrowckCtxt<'cx, 'gcx, 'tcx> {\n                     if place != place_err {\n                         err.span_label(span, \"cannot assign through `&`-reference\");                        \n                     }\n+\n+                    if !err_help.is_none(){\n+                        let (err_help_span, err_help_stmt) = err_help.unwrap();\n+                        err.span_help(err_help_span, err_help_stmt);}\n                     err.emit();\n                 }\n             }"}, {"sha": "f455a657b4784babefdb63df444df1e05965857a", "filename": "src/librustc_mir/util/collect_writes.rs", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/7a266a690289e972a5571fece7585613edac50bf/src%2Flibrustc_mir%2Futil%2Fcollect_writes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7a266a690289e972a5571fece7585613edac50bf/src%2Flibrustc_mir%2Futil%2Fcollect_writes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Futil%2Fcollect_writes.rs?ref=7a266a690289e972a5571fece7585613edac50bf", "patch": "@@ -26,18 +26,19 @@ impl<'tcx> Visitor<'tcx> for FindLocalAssignmentVisitor {\n                 self.locations.push(location);\n             }\n             PlaceContext::AsmOutput | PlaceContext::Drop| PlaceContext::Inspect |\n-            PlaceContext::Borrow{..}| PlaceContext::Projection(..)| PlaceContext::Copy| \n+            PlaceContext::Borrow{..}| PlaceContext::Projection(..)| PlaceContext::Copy|\n             PlaceContext::Move| PlaceContext::StorageLive| PlaceContext::StorageDead|\n             PlaceContext::Validate => {\n+                // self.super_local(local)\n             }\n         }\n-\n-        Visitor::visit_local(self,local,place_context,location)\n     }\n+\n+    // fn super_local()\n }\n \n crate trait FindAssignments { \n-    fn find_assignments(&self, local: Local) -> Vec<Location>;                                         \n+    fn find_assignments(&self, local: Local) -> Vec<Location>;                              \n     }\n     \n impl<'tcx> FindAssignments for Mir<'tcx>{"}]}