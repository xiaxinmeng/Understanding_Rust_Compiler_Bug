{"sha": "db8be04e49f32d36270e87b71b74c4b71764647e", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRiOGJlMDRlNDlmMzJkMzYyNzBlODdiNzFiNzRjNGI3MTc2NDY0N2U=", "commit": {"author": {"name": "Joshua Sheard", "email": "mail@jsheard.com", "date": "2017-05-06T14:46:16Z"}, "committer": {"name": "Joshua Sheard", "email": "mail@jsheard.com", "date": "2017-05-06T14:46:16Z"}, "message": "Fix definitions of ULONG_PTR", "tree": {"sha": "b771451bd73c2454066820b3ed0575ac871c197e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b771451bd73c2454066820b3ed0575ac871c197e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/db8be04e49f32d36270e87b71b74c4b71764647e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/db8be04e49f32d36270e87b71b74c4b71764647e", "html_url": "https://github.com/rust-lang/rust/commit/db8be04e49f32d36270e87b71b74c4b71764647e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/db8be04e49f32d36270e87b71b74c4b71764647e/comments", "author": {"login": "jsheard", "id": 3153547, "node_id": "MDQ6VXNlcjMxNTM1NDc=", "avatar_url": "https://avatars.githubusercontent.com/u/3153547?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsheard", "html_url": "https://github.com/jsheard", "followers_url": "https://api.github.com/users/jsheard/followers", "following_url": "https://api.github.com/users/jsheard/following{/other_user}", "gists_url": "https://api.github.com/users/jsheard/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsheard/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsheard/subscriptions", "organizations_url": "https://api.github.com/users/jsheard/orgs", "repos_url": "https://api.github.com/users/jsheard/repos", "events_url": "https://api.github.com/users/jsheard/events{/privacy}", "received_events_url": "https://api.github.com/users/jsheard/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jsheard", "id": 3153547, "node_id": "MDQ6VXNlcjMxNTM1NDc=", "avatar_url": "https://avatars.githubusercontent.com/u/3153547?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsheard", "html_url": "https://github.com/jsheard", "followers_url": "https://api.github.com/users/jsheard/followers", "following_url": "https://api.github.com/users/jsheard/following{/other_user}", "gists_url": "https://api.github.com/users/jsheard/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsheard/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsheard/subscriptions", "organizations_url": "https://api.github.com/users/jsheard/orgs", "repos_url": "https://api.github.com/users/jsheard/repos", "events_url": "https://api.github.com/users/jsheard/events{/privacy}", "received_events_url": "https://api.github.com/users/jsheard/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8aad3a3524fd04db3e6ddf59604d33c8e3797108", "url": "https://api.github.com/repos/rust-lang/rust/commits/8aad3a3524fd04db3e6ddf59604d33c8e3797108", "html_url": "https://github.com/rust-lang/rust/commit/8aad3a3524fd04db3e6ddf59604d33c8e3797108"}], "stats": {"total": 15, "additions": 8, "deletions": 7}, "files": [{"sha": "a7e90071ceae87386524cc92450d6f831341dbbf", "filename": "src/libpanic_unwind/windows.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/db8be04e49f32d36270e87b71b74c4b71764647e/src%2Flibpanic_unwind%2Fwindows.rs", "raw_url": "https://github.com/rust-lang/rust/raw/db8be04e49f32d36270e87b71b74c4b71764647e/src%2Flibpanic_unwind%2Fwindows.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibpanic_unwind%2Fwindows.rs?ref=db8be04e49f32d36270e87b71b74c4b71764647e", "patch": "@@ -12,11 +12,11 @@\n #![allow(dead_code)]\n #![cfg(windows)]\n \n-use libc::{c_long, c_ulong, c_ulonglong, c_void};\n+use libc::{c_long, c_ulong, c_void};\n \n pub type DWORD = c_ulong;\n pub type LONG = c_long;\n-pub type ULONG_PTR = c_ulonglong;\n+pub type ULONG_PTR = usize;\n pub type LPVOID = *mut c_void;\n \n pub const EXCEPTION_MAXIMUM_PARAMETERS: usize = 15;"}, {"sha": "ff1ebb11b72215df9dcc966d327396509249ddfb", "filename": "src/librustc_data_structures/flock.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/db8be04e49f32d36270e87b71b74c4b71764647e/src%2Flibrustc_data_structures%2Fflock.rs", "raw_url": "https://github.com/rust-lang/rust/raw/db8be04e49f32d36270e87b71b74c4b71764647e/src%2Flibrustc_data_structures%2Fflock.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_data_structures%2Fflock.rs?ref=db8be04e49f32d36270e87b71b74c4b71764647e", "patch": "@@ -247,11 +247,11 @@ mod imp {\n     use std::os::windows::raw::HANDLE;\n     use std::path::Path;\n     use std::fs::{File, OpenOptions};\n-    use std::os::raw::{c_ulong, c_ulonglong, c_int};\n+    use std::os::raw::{c_ulong, c_int};\n \n     type DWORD = c_ulong;\n     type BOOL = c_int;\n-    type ULONG_PTR = c_ulonglong;\n+    type ULONG_PTR = usize;\n \n     type LPOVERLAPPED = *mut OVERLAPPED;\n     const LOCKFILE_EXCLUSIVE_LOCK: DWORD = 0x00000002;"}, {"sha": "5e46069cf7ddfb2257eb8d4f5423cb1d153f83fb", "filename": "src/libstd/sys/windows/c.rs", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/db8be04e49f32d36270e87b71b74c4b71764647e/src%2Flibstd%2Fsys%2Fwindows%2Fc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/db8be04e49f32d36270e87b71b74c4b71764647e/src%2Flibstd%2Fsys%2Fwindows%2Fc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Fwindows%2Fc.rs?ref=db8be04e49f32d36270e87b71b74c4b71764647e", "patch": "@@ -14,8 +14,9 @@\n #![cfg_attr(test, allow(dead_code))]\n #![unstable(issue = \"0\", feature = \"windows_c\")]\n \n-use os::raw::{c_int, c_uint, c_ulong, c_long, c_longlong, c_ushort,};\n-use os::raw::{c_char, c_ulonglong};\n+use os::raw::{c_int, c_uint, c_ulong, c_long, c_longlong, c_ushort, c_char};\n+#[cfg(target_arch = \"x86_64\")]\n+use os::raw::c_ulonglong;\n use libc::{wchar_t, size_t, c_void};\n use ptr;\n \n@@ -45,7 +46,7 @@ pub type SIZE_T = usize;\n pub type WORD = u16;\n pub type CHAR = c_char;\n pub type HCRYPTPROV = LONG_PTR;\n-pub type ULONG_PTR = c_ulonglong;\n+pub type ULONG_PTR = usize;\n pub type ULONG = c_ulong;\n #[cfg(target_arch = \"x86_64\")]\n pub type ULONGLONG = u64;"}]}