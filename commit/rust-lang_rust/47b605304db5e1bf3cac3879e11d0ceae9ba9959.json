{"sha": "47b605304db5e1bf3cac3879e11d0ceae9ba9959", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ3YjYwNTMwNGRiNWUxYmYzY2FjMzg3OWUxMWQwY2VhZTliYTk5NTk=", "commit": {"author": {"name": "Georg Brandl", "email": "georg@python.org", "date": "2015-08-16T06:54:43Z"}, "committer": {"name": "Georg Brandl", "email": "georg@python.org", "date": "2015-08-16T06:55:34Z"}, "message": "all: organize imports\n\n* remove unused imports\n* separate external and internal imports\n* consistent import of rustc::lint\n* move #[allow(unused_imports)] to local impl", "tree": {"sha": "629f25f47a5b029d58a168afd1369981a9c405d8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/629f25f47a5b029d58a168afd1369981a9c405d8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/47b605304db5e1bf3cac3879e11d0ceae9ba9959", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/47b605304db5e1bf3cac3879e11d0ceae9ba9959", "html_url": "https://github.com/rust-lang/rust/commit/47b605304db5e1bf3cac3879e11d0ceae9ba9959", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/47b605304db5e1bf3cac3879e11d0ceae9ba9959/comments", "author": {"login": "birkenfeld", "id": 144359, "node_id": "MDQ6VXNlcjE0NDM1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/144359?v=4", "gravatar_id": "", "url": "https://api.github.com/users/birkenfeld", "html_url": "https://github.com/birkenfeld", "followers_url": "https://api.github.com/users/birkenfeld/followers", "following_url": "https://api.github.com/users/birkenfeld/following{/other_user}", "gists_url": "https://api.github.com/users/birkenfeld/gists{/gist_id}", "starred_url": "https://api.github.com/users/birkenfeld/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/birkenfeld/subscriptions", "organizations_url": "https://api.github.com/users/birkenfeld/orgs", "repos_url": "https://api.github.com/users/birkenfeld/repos", "events_url": "https://api.github.com/users/birkenfeld/events{/privacy}", "received_events_url": "https://api.github.com/users/birkenfeld/received_events", "type": "User", "site_admin": false}, "committer": {"login": "birkenfeld", "id": 144359, "node_id": "MDQ6VXNlcjE0NDM1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/144359?v=4", "gravatar_id": "", "url": "https://api.github.com/users/birkenfeld", "html_url": "https://github.com/birkenfeld", "followers_url": "https://api.github.com/users/birkenfeld/followers", "following_url": "https://api.github.com/users/birkenfeld/following{/other_user}", "gists_url": "https://api.github.com/users/birkenfeld/gists{/gist_id}", "starred_url": "https://api.github.com/users/birkenfeld/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/birkenfeld/subscriptions", "organizations_url": "https://api.github.com/users/birkenfeld/orgs", "repos_url": "https://api.github.com/users/birkenfeld/repos", "events_url": "https://api.github.com/users/birkenfeld/events{/privacy}", "received_events_url": "https://api.github.com/users/birkenfeld/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "997f34504685085da149221c5fda4e4cd941ae53", "url": "https://api.github.com/repos/rust-lang/rust/commits/997f34504685085da149221c5fda4e4cd941ae53", "html_url": "https://github.com/rust-lang/rust/commit/997f34504685085da149221c5fda4e4cd941ae53"}], "stats": {"total": 107, "additions": 40, "deletions": 67}, "files": [{"sha": "cfd646765c9b3af72bafe137e2cd27053d52764d", "filename": "src/approx_const.rs", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/47b605304db5e1bf3cac3879e11d0ceae9ba9959/src%2Fapprox_const.rs", "raw_url": "https://github.com/rust-lang/rust/raw/47b605304db5e1bf3cac3879e11d0ceae9ba9959/src%2Fapprox_const.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fapprox_const.rs?ref=47b605304db5e1bf3cac3879e11d0ceae9ba9959", "patch": "@@ -1,12 +1,8 @@\n-use rustc::plugin::Registry;\n use rustc::lint::*;\n-use rustc::middle::const_eval::lookup_const_by_id;\n-use rustc::middle::def::*;\n use syntax::ast::*;\n-use syntax::ast_util::{is_comparison_binop, binop_to_string};\n-use syntax::ptr::P;\n use syntax::codemap::Span;\n use std::f64::consts as f64;\n+\n use utils::span_lint;\n \n declare_lint! {"}, {"sha": "3e451ac5edaf655cdda36836f42591b4a4ef7d6d", "filename": "src/attrs.rs", "status": "modified", "additions": 3, "deletions": 5, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/47b605304db5e1bf3cac3879e11d0ceae9ba9959/src%2Fattrs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/47b605304db5e1bf3cac3879e11d0ceae9ba9959/src%2Fattrs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fattrs.rs?ref=47b605304db5e1bf3cac3879e11d0ceae9ba9959", "patch": "@@ -1,11 +1,9 @@\n-/// checks for attributes\n+//! checks for attributes\n \n-use rustc::plugin::Registry;\n use rustc::lint::*;\n use syntax::ast::*;\n-use syntax::ptr::P;\n-use syntax::codemap::{Span, ExpnInfo};\n-use syntax::parse::token::InternedString;\n+use syntax::codemap::ExpnInfo;\n+\n use utils::{in_macro, match_path, span_lint};\n \n declare_lint! { pub INLINE_ALWAYS, Warn,"}, {"sha": "ec937dbab6cdc143415a759f84e61abe1d6c4a6b", "filename": "src/bit_mask.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/47b605304db5e1bf3cac3879e11d0ceae9ba9959/src%2Fbit_mask.rs", "raw_url": "https://github.com/rust-lang/rust/raw/47b605304db5e1bf3cac3879e11d0ceae9ba9959/src%2Fbit_mask.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbit_mask.rs?ref=47b605304db5e1bf3cac3879e11d0ceae9ba9959", "patch": "@@ -1,11 +1,10 @@\n-use rustc::plugin::Registry;\n use rustc::lint::*;\n use rustc::middle::const_eval::lookup_const_by_id;\n use rustc::middle::def::*;\n use syntax::ast::*;\n-use syntax::ast_util::{is_comparison_binop, binop_to_string};\n-use syntax::ptr::P;\n+use syntax::ast_util::is_comparison_binop;\n use syntax::codemap::Span;\n+\n use utils::span_lint;\n \n declare_lint! {"}, {"sha": "0b6dfc19e6b5bd1d789b17f29f5bdddfabbfbaad", "filename": "src/collapsible_if.rs", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/47b605304db5e1bf3cac3879e11d0ceae9ba9959/src%2Fcollapsible_if.rs", "raw_url": "https://github.com/rust-lang/rust/raw/47b605304db5e1bf3cac3879e11d0ceae9ba9959/src%2Fcollapsible_if.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcollapsible_if.rs?ref=47b605304db5e1bf3cac3879e11d0ceae9ba9959", "patch": "@@ -12,12 +12,10 @@\n //!\n //! This lint is **warn** by default\n \n-use rustc::plugin::Registry;\n use rustc::lint::*;\n-use rustc::middle::def::*;\n use syntax::ast::*;\n-use syntax::ptr::P;\n-use syntax::codemap::{Span, Spanned, ExpnInfo};\n+use syntax::codemap::{Spanned, ExpnInfo};\n+\n use utils::{in_macro, span_help_and_lint, snippet, snippet_block};\n \n declare_lint! {"}, {"sha": "50b61e233564e4165328d83ce9b934117a777730", "filename": "src/eq_op.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/47b605304db5e1bf3cac3879e11d0ceae9ba9959/src%2Feq_op.rs", "raw_url": "https://github.com/rust-lang/rust/raw/47b605304db5e1bf3cac3879e11d0ceae9ba9959/src%2Feq_op.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Feq_op.rs?ref=47b605304db5e1bf3cac3879e11d0ceae9ba9959", "patch": "@@ -3,6 +3,7 @@ use syntax::ast::*;\n use syntax::ast_util as ast_util;\n use syntax::ptr::P;\n use syntax::codemap as code;\n+\n use utils::span_lint;\n \n declare_lint! {"}, {"sha": "6712e7872783d3850a163c1640f499ea3ac68bc1", "filename": "src/eta_reduction.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/47b605304db5e1bf3cac3879e11d0ceae9ba9959/src%2Feta_reduction.rs", "raw_url": "https://github.com/rust-lang/rust/raw/47b605304db5e1bf3cac3879e11d0ceae9ba9959/src%2Feta_reduction.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Feta_reduction.rs?ref=47b605304db5e1bf3cac3879e11d0ceae9ba9959", "patch": "@@ -1,6 +1,5 @@\n+use rustc::lint::*;\n use syntax::ast::*;\n-use rustc::lint::{Context, LintPass, LintArray, Lint, Level};\n-use syntax::codemap::{Span, Spanned};\n use syntax::print::pprust::expr_to_string;\n \n use utils::span_lint;"}, {"sha": "18a475bb7374985f91edd63e6b9480617c71bb54", "filename": "src/identity_op.rs", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/47b605304db5e1bf3cac3879e11d0ceae9ba9959/src%2Fidentity_op.rs", "raw_url": "https://github.com/rust-lang/rust/raw/47b605304db5e1bf3cac3879e11d0ceae9ba9959/src%2Fidentity_op.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fidentity_op.rs?ref=47b605304db5e1bf3cac3879e11d0ceae9ba9959", "patch": "@@ -1,10 +1,7 @@\n-use rustc::plugin::Registry;\n use rustc::lint::*;\n use rustc::middle::const_eval::lookup_const_by_id;\n use rustc::middle::def::*;\n use syntax::ast::*;\n-use syntax::ast_util::{is_comparison_binop, binop_to_string};\n-use syntax::ptr::P;\n use syntax::codemap::Span;\n \n use utils::{span_lint, snippet};"}, {"sha": "073dcea582d652450184a0d72f7a45cd94d354b7", "filename": "src/len_zero.rs", "status": "modified", "additions": 4, "deletions": 9, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/47b605304db5e1bf3cac3879e11d0ceae9ba9959/src%2Flen_zero.rs", "raw_url": "https://github.com/rust-lang/rust/raw/47b605304db5e1bf3cac3879e11d0ceae9ba9959/src%2Flen_zero.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flen_zero.rs?ref=47b605304db5e1bf3cac3879e11d0ceae9ba9959", "patch": "@@ -1,14 +1,9 @@\n-extern crate rustc_typeck as typeck;\n-\n-use std::rc::Rc;\n-use std::cell::RefCell;\n+use rustc::lint::*;\n+use syntax::ast::*;\n use syntax::ptr::P;\n-use rustc::lint::{Context, LintPass, LintArray, Lint};\n-use rustc::util::nodemap::DefIdMap;\n-use rustc::middle::ty::{self, TypeVariants, TypeAndMut, MethodTraitItemId, ImplOrTraitItemId};\n-use rustc::middle::def::{DefTy, DefStruct, DefTrait};\n use syntax::codemap::{Span, Spanned};\n-use syntax::ast::*;\n+use rustc::middle::ty::{self, MethodTraitItemId, ImplOrTraitItemId};\n+\n use utils::{span_lint, walk_ptrs_ty, snippet};\n \n declare_lint!(pub LEN_ZERO, Warn,"}, {"sha": "3ce5c1f9f3cceb18739e490a3981928cf7d48ab6", "filename": "src/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/47b605304db5e1bf3cac3879e11d0ceae9ba9959/src%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/47b605304db5e1bf3cac3879e11d0ceae9ba9959/src%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flib.rs?ref=47b605304db5e1bf3cac3879e11d0ceae9ba9959", "patch": "@@ -1,7 +1,6 @@\n #![feature(plugin_registrar, box_syntax)]\n #![feature(rustc_private, collections)]\n #![feature(str_split_at)]\n-#![allow(unused_imports, unknown_lints)]\n \n #[macro_use]\n extern crate syntax;"}, {"sha": "9d07df4a3ed21a5e7822326578907c08603ba585", "filename": "src/lifetimes.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/47b605304db5e1bf3cac3879e11d0ceae9ba9959/src%2Flifetimes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/47b605304db5e1bf3cac3879e11d0ceae9ba9959/src%2Flifetimes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flifetimes.rs?ref=47b605304db5e1bf3cac3879e11d0ceae9ba9959", "patch": "@@ -1,10 +1,10 @@\n use syntax::ast::*;\n-use rustc::lint::{Context, LintPass, LintArray, Lint};\n+use rustc::lint::*;\n use syntax::codemap::Span;\n-use syntax::visit::{Visitor, FnKind, walk_ty};\n-use utils::{in_external_macro, span_lint};\n+use syntax::visit::{Visitor, walk_ty};\n use std::collections::HashSet;\n-use std::iter::FromIterator;\n+\n+use utils::{in_external_macro, span_lint};\n \n declare_lint!(pub NEEDLESS_LIFETIMES, Warn,\n               \"using explicit lifetimes for references in function arguments when elision rules \\"}, {"sha": "6d0707ccbeed940fd9c46a74661bbe6ca13f5f32", "filename": "src/methods.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/47b605304db5e1bf3cac3879e11d0ceae9ba9959/src%2Fmethods.rs", "raw_url": "https://github.com/rust-lang/rust/raw/47b605304db5e1bf3cac3879e11d0ceae9ba9959/src%2Fmethods.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fmethods.rs?ref=47b605304db5e1bf3cac3879e11d0ceae9ba9959", "patch": "@@ -1,5 +1,5 @@\n use syntax::ast::*;\n-use rustc::lint::{Context, LintPass, LintArray};\n+use rustc::lint::*;\n use rustc::middle::ty;\n \n use utils::{span_lint, match_def_path, walk_ptrs_ty};"}, {"sha": "1fc41cf486222941f2888a99ff400d5a32ef48e8", "filename": "src/misc.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/47b605304db5e1bf3cac3879e11d0ceae9ba9959/src%2Fmisc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/47b605304db5e1bf3cac3879e11d0ceae9ba9959/src%2Fmisc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fmisc.rs?ref=47b605304db5e1bf3cac3879e11d0ceae9ba9959", "patch": "@@ -1,11 +1,11 @@\n+use rustc::lint::*;\n use syntax::ptr::P;\n use syntax::ast;\n use syntax::ast::*;\n use syntax::ast_util::{is_comparison_binop, binop_to_string};\n-use syntax::visit::{FnKind};\n-use rustc::lint::{Context, LintPass, LintArray, Lint, Level};\n-use rustc::middle::ty;\n use syntax::codemap::{Span, Spanned};\n+use syntax::visit::FnKind;\n+use rustc::middle::ty;\n use std::borrow::Cow;\n \n use utils::{match_path, snippet, snippet_block, span_lint, span_help_and_lint, walk_ptrs_ty};"}, {"sha": "fbcb70e17d39196b667c4aab9282f56055ba1934", "filename": "src/mut_mut.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/47b605304db5e1bf3cac3879e11d0ceae9ba9959/src%2Fmut_mut.rs", "raw_url": "https://github.com/rust-lang/rust/raw/47b605304db5e1bf3cac3879e11d0ceae9ba9959/src%2Fmut_mut.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fmut_mut.rs?ref=47b605304db5e1bf3cac3879e11d0ceae9ba9959", "patch": "@@ -1,8 +1,8 @@\n-use syntax::ptr::P;\n+use rustc::lint::*;\n use syntax::ast::*;\n-use rustc::lint::{Context, LintPass, LintArray, Lint};\n-use rustc::middle::ty::{TypeVariants, TypeAndMut, TyRef};\n-use syntax::codemap::{BytePos, ExpnInfo, Span};\n+use syntax::codemap::ExpnInfo;\n+use rustc::middle::ty::{TypeAndMut, TyRef};\n+\n use utils::{in_macro, span_lint};\n \n declare_lint!(pub MUT_MUT, Warn,"}, {"sha": "18d98f1f0630a0ca2aaeb05d959bb3d21fedfdee", "filename": "src/needless_bool.rs", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/47b605304db5e1bf3cac3879e11d0ceae9ba9959/src%2Fneedless_bool.rs", "raw_url": "https://github.com/rust-lang/rust/raw/47b605304db5e1bf3cac3879e11d0ceae9ba9959/src%2Fneedless_bool.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fneedless_bool.rs?ref=47b605304db5e1bf3cac3879e11d0ceae9ba9959", "patch": "@@ -2,14 +2,9 @@\n //!\n //! This lint is **warn** by default\n \n-use rustc::plugin::Registry;\n use rustc::lint::*;\n-use rustc::middle::const_eval::lookup_const_by_id;\n-use rustc::middle::def::*;\n use syntax::ast::*;\n-use syntax::ast_util::{is_comparison_binop, binop_to_string};\n-use syntax::ptr::P;\n-use syntax::codemap::Span;\n+\n use utils::{de_p, span_lint, snippet};\n \n declare_lint! {"}, {"sha": "2748d187a4ed88b8d91b789ec2e9115f426b4cff", "filename": "src/ptr_arg.rs", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/47b605304db5e1bf3cac3879e11d0ceae9ba9959/src%2Fptr_arg.rs", "raw_url": "https://github.com/rust-lang/rust/raw/47b605304db5e1bf3cac3879e11d0ceae9ba9959/src%2Fptr_arg.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fptr_arg.rs?ref=47b605304db5e1bf3cac3879e11d0ceae9ba9959", "patch": "@@ -2,14 +2,10 @@\n //!\n //! This lint is **warn** by default\n \n-use rustc::plugin::Registry;\n use rustc::lint::*;\n-use rustc::middle::const_eval::lookup_const_by_id;\n-use rustc::middle::def::*;\n use syntax::ast::*;\n-use syntax::ast_util::{is_comparison_binop, binop_to_string};\n-use syntax::ptr::P;\n use syntax::codemap::Span;\n+\n use types::match_ty_unwrap;\n use utils::span_lint;\n "}, {"sha": "df0b93f301eae573a2923823a4d8730037229a2d", "filename": "src/returns.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/47b605304db5e1bf3cac3879e11d0ceae9ba9959/src%2Freturns.rs", "raw_url": "https://github.com/rust-lang/rust/raw/47b605304db5e1bf3cac3879e11d0ceae9ba9959/src%2Freturns.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Freturns.rs?ref=47b605304db5e1bf3cac3879e11d0ceae9ba9959", "patch": "@@ -1,8 +1,7 @@\n-use syntax::ast;\n+use rustc::lint::*;\n use syntax::ast::*;\n use syntax::codemap::{Span, Spanned};\n use syntax::visit::FnKind;\n-use rustc::lint::{Context, LintPass, LintArray, Level};\n \n use utils::{span_lint, snippet, match_path};\n \n@@ -101,7 +100,7 @@ impl LintPass for ReturnPass {\n     }\n \n     fn check_fn(&mut self, cx: &Context, _: FnKind, _: &FnDecl,\n-                block: &Block, _: Span, _: ast::NodeId) {\n+                block: &Block, _: Span, _: NodeId) {\n         self.check_block_return(cx, block);\n         self.check_let_return(cx, block);\n     }"}, {"sha": "7981b7858501a295c9d685ccc7e341532cd479f8", "filename": "src/strings.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/47b605304db5e1bf3cac3879e11d0ceae9ba9959/src%2Fstrings.rs", "raw_url": "https://github.com/rust-lang/rust/raw/47b605304db5e1bf3cac3879e11d0ceae9ba9959/src%2Fstrings.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fstrings.rs?ref=47b605304db5e1bf3cac3879e11d0ceae9ba9959", "patch": "@@ -6,9 +6,9 @@\n use rustc::lint::*;\n use rustc::middle::ty::TypeVariants::TyStruct;\n use syntax::ast::*;\n-use syntax::codemap::{Span, Spanned};\n+use syntax::codemap::Spanned;\n+\n use eq_op::is_exp_equal;\n-use types::match_ty_unwrap;\n use utils::{match_def_path, span_lint, walk_ptrs_ty, get_parent_expr};\n \n declare_lint! {"}, {"sha": "25af398a0b4d0c795860f6d54f6b781450b98f7d", "filename": "src/types.rs", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/47b605304db5e1bf3cac3879e11d0ceae9ba9959/src%2Ftypes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/47b605304db5e1bf3cac3879e11d0ceae9ba9959/src%2Ftypes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftypes.rs?ref=47b605304db5e1bf3cac3879e11d0ceae9ba9959", "patch": "@@ -1,9 +1,9 @@\n-use syntax::ptr::P;\n+use rustc::lint::*;\n use syntax::ast;\n use syntax::ast::*;\n+use syntax::ptr::P;\n use rustc::middle::ty;\n-use rustc::lint::{Context, LintPass, LintArray, Lint, Level};\n-use syntax::codemap::{ExpnInfo, Span};\n+use syntax::codemap::ExpnInfo;\n \n use utils::{in_macro, snippet, span_lint, span_help_and_lint};\n \n@@ -40,6 +40,7 @@ pub fn match_ty_unwrap<'a>(ty: &'a Ty, segments: &[&str]) -> Option<&'a [P<Ty>]>\n     }\n }\n \n+#[allow(unused_imports)]\n impl LintPass for TypePass {\n     fn get_lints(&self) -> LintArray {\n         lint_array!(BOX_VEC, LINKEDLIST)"}, {"sha": "ab48fd1bef2ddbbea9b888aa4debfe28cc5ee19d", "filename": "src/unicode.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/47b605304db5e1bf3cac3879e11d0ceae9ba9959/src%2Funicode.rs", "raw_url": "https://github.com/rust-lang/rust/raw/47b605304db5e1bf3cac3879e11d0ceae9ba9959/src%2Funicode.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Funicode.rs?ref=47b605304db5e1bf3cac3879e11d0ceae9ba9959", "patch": "@@ -1,6 +1,7 @@\n use rustc::lint::*;\n use syntax::ast::*;\n use syntax::codemap::{BytePos, Span};\n+\n use utils::span_lint;\n \n declare_lint!{ pub ZERO_WIDTH_SPACE, Deny,"}, {"sha": "47e3a3456d68b7c674b5874fae362971b20cb810", "filename": "src/utils.rs", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/47b605304db5e1bf3cac3879e11d0ceae9ba9959/src%2Futils.rs", "raw_url": "https://github.com/rust-lang/rust/raw/47b605304db5e1bf3cac3879e11d0ceae9ba9959/src%2Futils.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Futils.rs?ref=47b605304db5e1bf3cac3879e11d0ceae9ba9959", "patch": "@@ -1,11 +1,10 @@\n-use rustc::lint::{Context, Lint, Level};\n-use syntax::ast::{DefId, Expr, Name, NodeId, Path};\n+use rustc::lint::*;\n+use syntax::ast::*;\n use syntax::codemap::{ExpnInfo, Span};\n use syntax::ptr::P;\n use rustc::ast_map::Node::NodeExpr;\n use rustc::middle::ty;\n-use std::borrow::{Cow, IntoCow};\n-use std::convert::From;\n+use std::borrow::Cow;\n \n /// returns true if the macro that expanded the crate was outside of\n /// the current crate or was a compiler plugin"}]}