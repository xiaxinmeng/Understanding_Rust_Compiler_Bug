{"sha": "72688eaa132403fcb5f103cb13756ef50ed804c0", "node_id": "MDY6Q29tbWl0NzI0NzEyOjcyNjg4ZWFhMTMyNDAzZmNiNWYxMDNjYjEzNzU2ZWY1MGVkODA0YzA=", "commit": {"author": {"name": "Erick Tryzelaar", "email": "erick.tryzelaar@gmail.com", "date": "2013-08-07T04:11:10Z"}, "committer": {"name": "Erick Tryzelaar", "email": "erick.tryzelaar@gmail.com", "date": "2013-08-07T21:06:50Z"}, "message": "std: Make CString::new unsafe b/c it can mutate a *T ptr", "tree": {"sha": "0cbd2c9e41b23fa0c33b220fc81e3f40f158b771", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0cbd2c9e41b23fa0c33b220fc81e3f40f158b771"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/72688eaa132403fcb5f103cb13756ef50ed804c0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/72688eaa132403fcb5f103cb13756ef50ed804c0", "html_url": "https://github.com/rust-lang/rust/commit/72688eaa132403fcb5f103cb13756ef50ed804c0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/72688eaa132403fcb5f103cb13756ef50ed804c0/comments", "author": {"login": "erickt", "id": 84711, "node_id": "MDQ6VXNlcjg0NzEx", "avatar_url": "https://avatars.githubusercontent.com/u/84711?v=4", "gravatar_id": "", "url": "https://api.github.com/users/erickt", "html_url": "https://github.com/erickt", "followers_url": "https://api.github.com/users/erickt/followers", "following_url": "https://api.github.com/users/erickt/following{/other_user}", "gists_url": "https://api.github.com/users/erickt/gists{/gist_id}", "starred_url": "https://api.github.com/users/erickt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/erickt/subscriptions", "organizations_url": "https://api.github.com/users/erickt/orgs", "repos_url": "https://api.github.com/users/erickt/repos", "events_url": "https://api.github.com/users/erickt/events{/privacy}", "received_events_url": "https://api.github.com/users/erickt/received_events", "type": "User", "site_admin": false}, "committer": {"login": "erickt", "id": 84711, "node_id": "MDQ6VXNlcjg0NzEx", "avatar_url": "https://avatars.githubusercontent.com/u/84711?v=4", "gravatar_id": "", "url": "https://api.github.com/users/erickt", "html_url": "https://github.com/erickt", "followers_url": "https://api.github.com/users/erickt/followers", "following_url": "https://api.github.com/users/erickt/following{/other_user}", "gists_url": "https://api.github.com/users/erickt/gists{/gist_id}", "starred_url": "https://api.github.com/users/erickt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/erickt/subscriptions", "organizations_url": "https://api.github.com/users/erickt/orgs", "repos_url": "https://api.github.com/users/erickt/repos", "events_url": "https://api.github.com/users/erickt/events{/privacy}", "received_events_url": "https://api.github.com/users/erickt/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d6257b315be2a18ccb3a28c48a73b1619ab57df4", "url": "https://api.github.com/repos/rust-lang/rust/commits/d6257b315be2a18ccb3a28c48a73b1619ab57df4", "html_url": "https://github.com/rust-lang/rust/commit/d6257b315be2a18ccb3a28c48a73b1619ab57df4"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "ac9bbfb1dfb63761b13b7363d29b6788fa96b2dd", "filename": "src/libstd/c_str.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/72688eaa132403fcb5f103cb13756ef50ed804c0/src%2Flibstd%2Fc_str.rs", "raw_url": "https://github.com/rust-lang/rust/raw/72688eaa132403fcb5f103cb13756ef50ed804c0/src%2Flibstd%2Fc_str.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fc_str.rs?ref=72688eaa132403fcb5f103cb13756ef50ed804c0", "patch": "@@ -29,7 +29,7 @@ pub struct CString {\n \n impl CString {\n     /// Create a C String from a pointer.\n-    pub fn new(buf: *libc::c_char, owns_buffer: bool) -> CString {\n+    pub unsafe fn new(buf: *libc::c_char, owns_buffer: bool) -> CString {\n         CString { buf: buf, owns_buffer_: owns_buffer }\n     }\n \n@@ -187,7 +187,7 @@ mod tests {\n \n     #[test]\n     fn test_is_null() {\n-        let c_str = CString::new(ptr::null(), false);\n+        let c_str = unsafe { CString::new(ptr::null(), false) };\n         assert!(c_str.is_null());\n         assert!(!c_str.is_not_null());\n     }"}]}