{"sha": "da305a2b00530aa34dea4e48389204c26fa35dbb", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRhMzA1YTJiMDA1MzBhYTM0ZGVhNGU0ODM4OTIwNGMyNmZhMzVkYmI=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-01-05T17:07:25Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-01-05T17:07:25Z"}, "message": "Auto merge of #80711 - camelid:intrinsic-of-val-safety, r=oli-obk\n\nMake `size_of_val` and `min_align_of_val` intrinsics unsafe\n\nFixes #80668.\n\nr? `@oli-obk`", "tree": {"sha": "2459ab0519f0820001582c2e085c570ede31b2aa", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2459ab0519f0820001582c2e085c570ede31b2aa"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/da305a2b00530aa34dea4e48389204c26fa35dbb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/da305a2b00530aa34dea4e48389204c26fa35dbb", "html_url": "https://github.com/rust-lang/rust/commit/da305a2b00530aa34dea4e48389204c26fa35dbb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/da305a2b00530aa34dea4e48389204c26fa35dbb/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3b63e16552bbc3bfdddad67ba219455a2a3ac03c", "url": "https://api.github.com/repos/rust-lang/rust/commits/3b63e16552bbc3bfdddad67ba219455a2a3ac03c", "html_url": "https://github.com/rust-lang/rust/commit/3b63e16552bbc3bfdddad67ba219455a2a3ac03c"}, {"sha": "bbf175df3cd17763ff601151eed6f84d0cabda13", "url": "https://api.github.com/repos/rust-lang/rust/commits/bbf175df3cd17763ff601151eed6f84d0cabda13", "html_url": "https://github.com/rust-lang/rust/commit/bbf175df3cd17763ff601151eed6f84d0cabda13"}], "stats": {"total": 18, "additions": 11, "deletions": 7}, "files": [{"sha": "e4e6cf73c7e23b6838451ec7e089b24dca0a7341", "filename": "compiler/rustc_typeck/src/check/intrinsic.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/da305a2b00530aa34dea4e48389204c26fa35dbb/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fintrinsic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/da305a2b00530aa34dea4e48389204c26fa35dbb/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fintrinsic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fintrinsic.rs?ref=da305a2b00530aa34dea4e48389204c26fa35dbb", "patch": "@@ -63,8 +63,6 @@ pub fn intrinsic_operation_unsafety(intrinsic: Symbol) -> hir::Unsafety {\n         | sym::min_align_of\n         | sym::needs_drop\n         | sym::caller_location\n-        | sym::size_of_val\n-        | sym::min_align_of_val\n         | sym::add_with_overflow\n         | sym::sub_with_overflow\n         | sym::mul_with_overflow"}, {"sha": "64cf5286eb14a62813ddf8867765bb9499e11adb", "filename": "library/core/src/mem/mod.rs", "status": "modified", "additions": 11, "deletions": 5, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/da305a2b00530aa34dea4e48389204c26fa35dbb/library%2Fcore%2Fsrc%2Fmem%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/da305a2b00530aa34dea4e48389204c26fa35dbb/library%2Fcore%2Fsrc%2Fmem%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fmem%2Fmod.rs?ref=da305a2b00530aa34dea4e48389204c26fa35dbb", "patch": "@@ -4,6 +4,7 @@\n //! types, initializing and manipulating memory.\n \n #![stable(feature = \"rust1\", since = \"1.0.0\")]\n+#![cfg_attr(bootstrap, allow(unused_unsafe))]\n \n use crate::clone;\n use crate::cmp;\n@@ -333,7 +334,8 @@ pub const fn size_of<T>() -> usize {\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n #[rustc_const_unstable(feature = \"const_size_of_val\", issue = \"46571\")]\n pub const fn size_of_val<T: ?Sized>(val: &T) -> usize {\n-    intrinsics::size_of_val(val)\n+    // SAFETY: `val` is a reference, so it's a valid raw pointer\n+    unsafe { intrinsics::size_of_val(val) }\n }\n \n /// Returns the size of the pointed-to value in bytes.\n@@ -381,7 +383,8 @@ pub const fn size_of_val<T: ?Sized>(val: &T) -> usize {\n #[unstable(feature = \"layout_for_ptr\", issue = \"69835\")]\n #[rustc_const_unstable(feature = \"const_size_of_val_raw\", issue = \"46571\")]\n pub const unsafe fn size_of_val_raw<T: ?Sized>(val: *const T) -> usize {\n-    intrinsics::size_of_val(val)\n+    // SAFETY: the caller must provide a valid raw pointer\n+    unsafe { intrinsics::size_of_val(val) }\n }\n \n /// Returns the [ABI]-required minimum alignment of a type.\n@@ -425,7 +428,8 @@ pub fn min_align_of<T>() -> usize {\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n #[rustc_deprecated(reason = \"use `align_of_val` instead\", since = \"1.2.0\")]\n pub fn min_align_of_val<T: ?Sized>(val: &T) -> usize {\n-    intrinsics::min_align_of_val(val)\n+    // SAFETY: val is a reference, so it's a valid raw pointer\n+    unsafe { intrinsics::min_align_of_val(val) }\n }\n \n /// Returns the [ABI]-required minimum alignment of a type.\n@@ -469,7 +473,8 @@ pub const fn align_of<T>() -> usize {\n #[rustc_const_unstable(feature = \"const_align_of_val\", issue = \"46571\")]\n #[allow(deprecated)]\n pub const fn align_of_val<T: ?Sized>(val: &T) -> usize {\n-    intrinsics::min_align_of_val(val)\n+    // SAFETY: val is a reference, so it's a valid raw pointer\n+    unsafe { intrinsics::min_align_of_val(val) }\n }\n \n /// Returns the [ABI]-required minimum alignment of the type of the value that `val` points to.\n@@ -513,7 +518,8 @@ pub const fn align_of_val<T: ?Sized>(val: &T) -> usize {\n #[unstable(feature = \"layout_for_ptr\", issue = \"69835\")]\n #[rustc_const_unstable(feature = \"const_align_of_val_raw\", issue = \"46571\")]\n pub const unsafe fn align_of_val_raw<T: ?Sized>(val: *const T) -> usize {\n-    intrinsics::min_align_of_val(val)\n+    // SAFETY: the caller must provide a valid raw pointer\n+    unsafe { intrinsics::min_align_of_val(val) }\n }\n \n /// Returns `true` if dropping values of type `T` matters."}]}