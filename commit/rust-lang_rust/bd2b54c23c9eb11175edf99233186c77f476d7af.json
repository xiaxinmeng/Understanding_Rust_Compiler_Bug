{"sha": "bd2b54c23c9eb11175edf99233186c77f476d7af", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJkMmI1NGMyM2M5ZWIxMTE3NWVkZjk5MjMzMTg2Yzc3ZjQ3NmQ3YWY=", "commit": {"author": {"name": "ashtneoi", "email": "ashtneoi@gmail.com", "date": "2018-08-14T19:38:37Z"}, "committer": {"name": "ashtneoi", "email": "ashtneoi@gmail.com", "date": "2018-08-15T22:14:21Z"}, "message": "Bless tests", "tree": {"sha": "e965bb816a7d0f82a51f1c570a96fd4fed556f47", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e965bb816a7d0f82a51f1c570a96fd4fed556f47"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bd2b54c23c9eb11175edf99233186c77f476d7af", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bd2b54c23c9eb11175edf99233186c77f476d7af", "html_url": "https://github.com/rust-lang/rust/commit/bd2b54c23c9eb11175edf99233186c77f476d7af", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bd2b54c23c9eb11175edf99233186c77f476d7af/comments", "author": {"login": "ashtneoi", "id": 33603534, "node_id": "MDQ6VXNlcjMzNjAzNTM0", "avatar_url": "https://avatars.githubusercontent.com/u/33603534?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ashtneoi", "html_url": "https://github.com/ashtneoi", "followers_url": "https://api.github.com/users/ashtneoi/followers", "following_url": "https://api.github.com/users/ashtneoi/following{/other_user}", "gists_url": "https://api.github.com/users/ashtneoi/gists{/gist_id}", "starred_url": "https://api.github.com/users/ashtneoi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ashtneoi/subscriptions", "organizations_url": "https://api.github.com/users/ashtneoi/orgs", "repos_url": "https://api.github.com/users/ashtneoi/repos", "events_url": "https://api.github.com/users/ashtneoi/events{/privacy}", "received_events_url": "https://api.github.com/users/ashtneoi/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ashtneoi", "id": 33603534, "node_id": "MDQ6VXNlcjMzNjAzNTM0", "avatar_url": "https://avatars.githubusercontent.com/u/33603534?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ashtneoi", "html_url": "https://github.com/ashtneoi", "followers_url": "https://api.github.com/users/ashtneoi/followers", "following_url": "https://api.github.com/users/ashtneoi/following{/other_user}", "gists_url": "https://api.github.com/users/ashtneoi/gists{/gist_id}", "starred_url": "https://api.github.com/users/ashtneoi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ashtneoi/subscriptions", "organizations_url": "https://api.github.com/users/ashtneoi/orgs", "repos_url": "https://api.github.com/users/ashtneoi/repos", "events_url": "https://api.github.com/users/ashtneoi/events{/privacy}", "received_events_url": "https://api.github.com/users/ashtneoi/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a5b008c45065989e58a1afa5809df0daac481a75", "url": "https://api.github.com/repos/rust-lang/rust/commits/a5b008c45065989e58a1afa5809df0daac481a75", "html_url": "https://github.com/rust-lang/rust/commit/a5b008c45065989e58a1afa5809df0daac481a75"}], "stats": {"total": 240, "additions": 178, "deletions": 62}, "files": [{"sha": "fda6c24dc8710a8e5d97bf5bf119d843e95cb793", "filename": "src/test/ui/E0508-fail.mir.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bd2b54c23c9eb11175edf99233186c77f476d7af/src%2Ftest%2Fui%2FE0508-fail.mir.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/bd2b54c23c9eb11175edf99233186c77f476d7af/src%2Ftest%2Fui%2FE0508-fail.mir.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2FE0508-fail.mir.stderr?ref=bd2b54c23c9eb11175edf99233186c77f476d7af", "patch": "@@ -5,7 +5,7 @@ LL |     let _value = array[0];  //[ast]~ ERROR [E0508]\n    |                  ^^^^^^^^\n    |                  |\n    |                  cannot move out of here\n-   |                  help: consider using a reference instead: `&array[0]`\n+   |                  help: consider borrowing here: `&array[0]`\n \n error: aborting due to previous error\n "}, {"sha": "b9de60f43f703f72c82096ffa92e995bea3c211d", "filename": "src/test/ui/access-mode-in-closures.nll.stderr", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/bd2b54c23c9eb11175edf99233186c77f476d7af/src%2Ftest%2Fui%2Faccess-mode-in-closures.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/bd2b54c23c9eb11175edf99233186c77f476d7af/src%2Ftest%2Fui%2Faccess-mode-in-closures.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Faccess-mode-in-closures.nll.stderr?ref=bd2b54c23c9eb11175edf99233186c77f476d7af", "patch": "@@ -2,10 +2,16 @@ error[E0507]: cannot move out of borrowed content\n   --> $DIR/access-mode-in-closures.rs:19:15\n    |\n LL |         match *s { sty(v) => v } //~ ERROR cannot move out\n-   |               ^^       - move occurs because v has type `std::vec::Vec<isize>`, which does not implement the `Copy` trait\n+   |               ^^       - data moved here\n    |               |\n    |               cannot move out of borrowed content\n-   |               help: consider removing this dereference operator: `s`\n+   |               help: consider removing the `*`: `s`\n+   |\n+note: move occurs because `v` has type `std::vec::Vec<isize>`, which does not implement the `Copy` trait\n+  --> $DIR/access-mode-in-closures.rs:19:24\n+   |\n+LL |         match *s { sty(v) => v } //~ ERROR cannot move out\n+   |                        ^\n \n error: aborting due to previous error\n "}, {"sha": "25eb69ad9377dfe21b260a35ad50463847956d75", "filename": "src/test/ui/borrowck/borrowck-for-loop-correct-cmt-for-pattern.nll.stderr", "status": "modified", "additions": 30, "deletions": 12, "changes": 42, "blob_url": "https://github.com/rust-lang/rust/blob/bd2b54c23c9eb11175edf99233186c77f476d7af/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-for-loop-correct-cmt-for-pattern.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/bd2b54c23c9eb11175edf99233186c77f476d7af/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-for-loop-correct-cmt-for-pattern.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-for-loop-correct-cmt-for-pattern.nll.stderr?ref=bd2b54c23c9eb11175edf99233186c77f476d7af", "patch": "@@ -2,28 +2,46 @@ error[E0507]: cannot move out of borrowed content\n   --> $DIR/borrowck-for-loop-correct-cmt-for-pattern.rs:22:15\n    |\n LL |     for &a in x.iter() {    //~ ERROR cannot move out\n-   |          -    ^^^^^^^^ cannot move out of borrowed content\n-   |          |\n-   |          data moved here\n-   |          help: to prevent move, use ref or ref mut: `ref a`\n+   |         --    ^^^^^^^^ cannot move out of borrowed content\n+   |         ||\n+   |         |data moved here\n+   |         help: consider removing the `&`: `a`\n+   |\n+note: move occurs because `a` has type `&mut i32`, which does not implement the `Copy` trait\n+  --> $DIR/borrowck-for-loop-correct-cmt-for-pattern.rs:22:10\n+   |\n+LL |     for &a in x.iter() {    //~ ERROR cannot move out\n+   |          ^\n \n error[E0507]: cannot move out of borrowed content\n   --> $DIR/borrowck-for-loop-correct-cmt-for-pattern.rs:28:15\n    |\n LL |     for &a in &f.a {  //~ ERROR cannot move out\n-   |          -    ^^^^ cannot move out of borrowed content\n-   |          |\n-   |          data moved here\n-   |          help: to prevent move, use ref or ref mut: `ref a`\n+   |         --    ^^^^ cannot move out of borrowed content\n+   |         ||\n+   |         |data moved here\n+   |         help: consider removing the `&`: `a`\n+   |\n+note: move occurs because `a` has type `std::boxed::Box<isize>`, which does not implement the `Copy` trait\n+  --> $DIR/borrowck-for-loop-correct-cmt-for-pattern.rs:28:10\n+   |\n+LL |     for &a in &f.a {  //~ ERROR cannot move out\n+   |          ^\n \n error[E0507]: cannot move out of borrowed content\n   --> $DIR/borrowck-for-loop-correct-cmt-for-pattern.rs:32:15\n    |\n LL |     for &a in x.iter() {    //~ ERROR cannot move out\n-   |          -    ^^^^^^^^ cannot move out of borrowed content\n-   |          |\n-   |          data moved here\n-   |          help: to prevent move, use ref or ref mut: `ref a`\n+   |         --    ^^^^^^^^ cannot move out of borrowed content\n+   |         ||\n+   |         |data moved here\n+   |         help: consider removing the `&`: `a`\n+   |\n+note: move occurs because `a` has type `std::boxed::Box<i32>`, which does not implement the `Copy` trait\n+  --> $DIR/borrowck-for-loop-correct-cmt-for-pattern.rs:32:10\n+   |\n+LL |     for &a in x.iter() {    //~ ERROR cannot move out\n+   |          ^\n \n error: aborting due to 3 previous errors\n "}, {"sha": "cdbfab8bd054a1903c2d53ce953bc577d7f9faeb", "filename": "src/test/ui/borrowck/borrowck-issue-2657-2.nll.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bd2b54c23c9eb11175edf99233186c77f476d7af/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-issue-2657-2.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/bd2b54c23c9eb11175edf99233186c77f476d7af/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-issue-2657-2.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-issue-2657-2.nll.stderr?ref=bd2b54c23c9eb11175edf99233186c77f476d7af", "patch": "@@ -5,7 +5,7 @@ LL |         let _b = *y; //~ ERROR cannot move out\n    |                  ^^\n    |                  |\n    |                  cannot move out of borrowed content\n-   |                  help: consider removing this dereference operator: `y`\n+   |                  help: consider removing the `*`: `y`\n \n error: aborting due to previous error\n "}, {"sha": "f823a6f08d789485e47546b7e9fa34f4ec5f1f34", "filename": "src/test/ui/borrowck/borrowck-move-from-unsafe-ptr.nll.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bd2b54c23c9eb11175edf99233186c77f476d7af/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-move-from-unsafe-ptr.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/bd2b54c23c9eb11175edf99233186c77f476d7af/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-move-from-unsafe-ptr.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-move-from-unsafe-ptr.nll.stderr?ref=bd2b54c23c9eb11175edf99233186c77f476d7af", "patch": "@@ -5,7 +5,7 @@ LL |     let y = *x; //~ ERROR cannot move out of dereference of raw pointer\n    |             ^^\n    |             |\n    |             cannot move out of borrowed content\n-   |             help: consider using a reference instead: `&*x`\n+   |             help: consider removing the `*`: `x`\n \n error: aborting due to previous error\n "}, {"sha": "49c2ec0dcf4e7c996e77b3f918f482664288f74f", "filename": "src/test/ui/borrowck/borrowck-move-in-irrefut-pat.ast.nll.stderr", "status": "modified", "additions": 24, "deletions": 6, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/bd2b54c23c9eb11175edf99233186c77f476d7af/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-move-in-irrefut-pat.ast.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/bd2b54c23c9eb11175edf99233186c77f476d7af/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-move-in-irrefut-pat.ast.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-move-in-irrefut-pat.ast.nll.stderr?ref=bd2b54c23c9eb11175edf99233186c77f476d7af", "patch": "@@ -5,8 +5,14 @@ LL | fn arg_item(&_x: &String) {}\n    |             ^--\n    |             ||\n    |             |data moved here\n-   |             |help: to prevent move, use ref or ref mut: `ref _x`\n    |             cannot move out of borrowed content\n+   |             help: consider removing the `&`: `_x`\n+   |\n+note: move occurs because `_x` has type `std::string::String`, which does not implement the `Copy` trait\n+  --> $DIR/borrowck-move-in-irrefut-pat.rs:16:14\n+   |\n+LL | fn arg_item(&_x: &String) {}\n+   |              ^^\n \n error[E0507]: cannot move out of borrowed content\n   --> $DIR/borrowck-move-in-irrefut-pat.rs:21:11\n@@ -15,17 +21,29 @@ LL |     with(|&_x| ())\n    |           ^--\n    |           ||\n    |           |data moved here\n-   |           |help: to prevent move, use ref or ref mut: `ref _x`\n    |           cannot move out of borrowed content\n+   |           help: consider removing the `&`: `_x`\n+   |\n+note: move occurs because `_x` has type `std::string::String`, which does not implement the `Copy` trait\n+  --> $DIR/borrowck-move-in-irrefut-pat.rs:21:12\n+   |\n+LL |     with(|&_x| ())\n+   |            ^^\n \n error[E0507]: cannot move out of borrowed content\n   --> $DIR/borrowck-move-in-irrefut-pat.rs:27:15\n    |\n LL |     let &_x = &\"hi\".to_string();\n-   |          --   ^^^^^^^^^^^^^^^^^ cannot move out of borrowed content\n-   |          |\n-   |          data moved here\n-   |          help: to prevent move, use ref or ref mut: `ref _x`\n+   |         ---   ^^^^^^^^^^^^^^^^^ cannot move out of borrowed content\n+   |         ||\n+   |         |data moved here\n+   |         help: consider removing the `&`: `_x`\n+   |\n+note: move occurs because `_x` has type `std::string::String`, which does not implement the `Copy` trait\n+  --> $DIR/borrowck-move-in-irrefut-pat.rs:27:10\n+   |\n+LL |     let &_x = &\"hi\".to_string();\n+   |          ^^\n \n error: aborting due to 3 previous errors\n "}, {"sha": "49c2ec0dcf4e7c996e77b3f918f482664288f74f", "filename": "src/test/ui/borrowck/borrowck-move-in-irrefut-pat.mir.stderr", "status": "modified", "additions": 24, "deletions": 6, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/bd2b54c23c9eb11175edf99233186c77f476d7af/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-move-in-irrefut-pat.mir.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/bd2b54c23c9eb11175edf99233186c77f476d7af/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-move-in-irrefut-pat.mir.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-move-in-irrefut-pat.mir.stderr?ref=bd2b54c23c9eb11175edf99233186c77f476d7af", "patch": "@@ -5,8 +5,14 @@ LL | fn arg_item(&_x: &String) {}\n    |             ^--\n    |             ||\n    |             |data moved here\n-   |             |help: to prevent move, use ref or ref mut: `ref _x`\n    |             cannot move out of borrowed content\n+   |             help: consider removing the `&`: `_x`\n+   |\n+note: move occurs because `_x` has type `std::string::String`, which does not implement the `Copy` trait\n+  --> $DIR/borrowck-move-in-irrefut-pat.rs:16:14\n+   |\n+LL | fn arg_item(&_x: &String) {}\n+   |              ^^\n \n error[E0507]: cannot move out of borrowed content\n   --> $DIR/borrowck-move-in-irrefut-pat.rs:21:11\n@@ -15,17 +21,29 @@ LL |     with(|&_x| ())\n    |           ^--\n    |           ||\n    |           |data moved here\n-   |           |help: to prevent move, use ref or ref mut: `ref _x`\n    |           cannot move out of borrowed content\n+   |           help: consider removing the `&`: `_x`\n+   |\n+note: move occurs because `_x` has type `std::string::String`, which does not implement the `Copy` trait\n+  --> $DIR/borrowck-move-in-irrefut-pat.rs:21:12\n+   |\n+LL |     with(|&_x| ())\n+   |            ^^\n \n error[E0507]: cannot move out of borrowed content\n   --> $DIR/borrowck-move-in-irrefut-pat.rs:27:15\n    |\n LL |     let &_x = &\"hi\".to_string();\n-   |          --   ^^^^^^^^^^^^^^^^^ cannot move out of borrowed content\n-   |          |\n-   |          data moved here\n-   |          help: to prevent move, use ref or ref mut: `ref _x`\n+   |         ---   ^^^^^^^^^^^^^^^^^ cannot move out of borrowed content\n+   |         ||\n+   |         |data moved here\n+   |         help: consider removing the `&`: `_x`\n+   |\n+note: move occurs because `_x` has type `std::string::String`, which does not implement the `Copy` trait\n+  --> $DIR/borrowck-move-in-irrefut-pat.rs:27:10\n+   |\n+LL |     let &_x = &\"hi\".to_string();\n+   |          ^^\n \n error: aborting due to 3 previous errors\n "}, {"sha": "34f9f035188b8d4276c21c2f5afc674365cb5f29", "filename": "src/test/ui/borrowck/borrowck-move-out-of-struct-with-dtor.ast.nll.stderr", "status": "modified", "additions": 19, "deletions": 6, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/bd2b54c23c9eb11175edf99233186c77f476d7af/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-move-out-of-struct-with-dtor.ast.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/bd2b54c23c9eb11175edf99233186c77f476d7af/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-move-out-of-struct-with-dtor.ast.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-move-out-of-struct-with-dtor.ast.nll.stderr?ref=bd2b54c23c9eb11175edf99233186c77f476d7af", "patch": "@@ -5,10 +5,13 @@ LL |     match (S {f:\"foo\".to_string()}) {\n    |           ^^^^^^^^^^^^^^^^^^^^^^^^^ cannot move out of here\n LL |         //[mir]~^ ERROR [E0509]\n LL |         S {f:_s} => {}\n-   |              --\n-   |              |\n-   |              data moved here\n-   |              help: to prevent move, use ref or ref mut: `ref _s`\n+   |              -- data moved here\n+   |\n+note: move occurs because `_s` has type `std::string::String`, which does not implement the `Copy` trait\n+  --> $DIR/borrowck-move-out-of-struct-with-dtor.rs:22:14\n+   |\n+LL |         S {f:_s} => {}\n+   |              ^^\n \n error[E0509]: cannot move out of type `S`, which implements the `Drop` trait\n   --> $DIR/borrowck-move-out-of-struct-with-dtor.rs:28:20\n@@ -17,7 +20,12 @@ LL |     let S {f:_s} = S {f:\"foo\".to_string()};\n    |              --    ^^^^^^^^^^^^^^^^^^^^^^^ cannot move out of here\n    |              |\n    |              data moved here\n-   |              help: to prevent move, use ref or ref mut: `ref _s`\n+   |\n+note: move occurs because `_s` has type `std::string::String`, which does not implement the `Copy` trait\n+  --> $DIR/borrowck-move-out-of-struct-with-dtor.rs:28:14\n+   |\n+LL |     let S {f:_s} = S {f:\"foo\".to_string()};\n+   |              ^^\n \n error[E0509]: cannot move out of type `S`, which implements the `Drop` trait\n   --> $DIR/borrowck-move-out-of-struct-with-dtor.rs:33:19\n@@ -26,8 +34,13 @@ LL | fn move_in_fn_arg(S {f:_s}: S) {\n    |                   ^^^^^--^\n    |                   |    |\n    |                   |    data moved here\n-   |                   |    help: to prevent move, use ref or ref mut: `ref _s`\n    |                   cannot move out of here\n+   |\n+note: move occurs because `_s` has type `std::string::String`, which does not implement the `Copy` trait\n+  --> $DIR/borrowck-move-out-of-struct-with-dtor.rs:33:24\n+   |\n+LL | fn move_in_fn_arg(S {f:_s}: S) {\n+   |                        ^^\n \n error: aborting due to 3 previous errors\n "}, {"sha": "34f9f035188b8d4276c21c2f5afc674365cb5f29", "filename": "src/test/ui/borrowck/borrowck-move-out-of-struct-with-dtor.mir.stderr", "status": "modified", "additions": 19, "deletions": 6, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/bd2b54c23c9eb11175edf99233186c77f476d7af/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-move-out-of-struct-with-dtor.mir.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/bd2b54c23c9eb11175edf99233186c77f476d7af/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-move-out-of-struct-with-dtor.mir.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-move-out-of-struct-with-dtor.mir.stderr?ref=bd2b54c23c9eb11175edf99233186c77f476d7af", "patch": "@@ -5,10 +5,13 @@ LL |     match (S {f:\"foo\".to_string()}) {\n    |           ^^^^^^^^^^^^^^^^^^^^^^^^^ cannot move out of here\n LL |         //[mir]~^ ERROR [E0509]\n LL |         S {f:_s} => {}\n-   |              --\n-   |              |\n-   |              data moved here\n-   |              help: to prevent move, use ref or ref mut: `ref _s`\n+   |              -- data moved here\n+   |\n+note: move occurs because `_s` has type `std::string::String`, which does not implement the `Copy` trait\n+  --> $DIR/borrowck-move-out-of-struct-with-dtor.rs:22:14\n+   |\n+LL |         S {f:_s} => {}\n+   |              ^^\n \n error[E0509]: cannot move out of type `S`, which implements the `Drop` trait\n   --> $DIR/borrowck-move-out-of-struct-with-dtor.rs:28:20\n@@ -17,7 +20,12 @@ LL |     let S {f:_s} = S {f:\"foo\".to_string()};\n    |              --    ^^^^^^^^^^^^^^^^^^^^^^^ cannot move out of here\n    |              |\n    |              data moved here\n-   |              help: to prevent move, use ref or ref mut: `ref _s`\n+   |\n+note: move occurs because `_s` has type `std::string::String`, which does not implement the `Copy` trait\n+  --> $DIR/borrowck-move-out-of-struct-with-dtor.rs:28:14\n+   |\n+LL |     let S {f:_s} = S {f:\"foo\".to_string()};\n+   |              ^^\n \n error[E0509]: cannot move out of type `S`, which implements the `Drop` trait\n   --> $DIR/borrowck-move-out-of-struct-with-dtor.rs:33:19\n@@ -26,8 +34,13 @@ LL | fn move_in_fn_arg(S {f:_s}: S) {\n    |                   ^^^^^--^\n    |                   |    |\n    |                   |    data moved here\n-   |                   |    help: to prevent move, use ref or ref mut: `ref _s`\n    |                   cannot move out of here\n+   |\n+note: move occurs because `_s` has type `std::string::String`, which does not implement the `Copy` trait\n+  --> $DIR/borrowck-move-out-of-struct-with-dtor.rs:33:24\n+   |\n+LL | fn move_in_fn_arg(S {f:_s}: S) {\n+   |                        ^^\n \n error: aborting due to 3 previous errors\n "}, {"sha": "278c33c71e24549f00090137180e5a32f9df8d7d", "filename": "src/test/ui/borrowck/borrowck-move-out-of-tuple-struct-with-dtor.nll.stderr", "status": "modified", "additions": 19, "deletions": 6, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/bd2b54c23c9eb11175edf99233186c77f476d7af/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-move-out-of-tuple-struct-with-dtor.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/bd2b54c23c9eb11175edf99233186c77f476d7af/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-move-out-of-tuple-struct-with-dtor.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-move-out-of-tuple-struct-with-dtor.nll.stderr?ref=bd2b54c23c9eb11175edf99233186c77f476d7af", "patch": "@@ -4,10 +4,13 @@ error[E0509]: cannot move out of type `S`, which implements the `Drop` trait\n LL |     match S(\"foo\".to_string()) {\n    |           ^^^^^^^^^^^^^^^^^^^^ cannot move out of here\n LL |         S(_s) => {}\n-   |           --\n-   |           |\n-   |           data moved here\n-   |           help: to prevent move, use ref or ref mut: `ref _s`\n+   |           -- data moved here\n+   |\n+note: move occurs because `_s` has type `std::string::String`, which does not implement the `Copy` trait\n+  --> $DIR/borrowck-move-out-of-tuple-struct-with-dtor.rs:18:11\n+   |\n+LL |         S(_s) => {}\n+   |           ^^\n \n error[E0509]: cannot move out of type `S`, which implements the `Drop` trait\n   --> $DIR/borrowck-move-out-of-tuple-struct-with-dtor.rs:24:17\n@@ -16,7 +19,12 @@ LL |     let S(_s) = S(\"foo\".to_string());\n    |           --    ^^^^^^^^^^^^^^^^^^^^ cannot move out of here\n    |           |\n    |           data moved here\n-   |           help: to prevent move, use ref or ref mut: `ref _s`\n+   |\n+note: move occurs because `_s` has type `std::string::String`, which does not implement the `Copy` trait\n+  --> $DIR/borrowck-move-out-of-tuple-struct-with-dtor.rs:24:11\n+   |\n+LL |     let S(_s) = S(\"foo\".to_string());\n+   |           ^^\n \n error[E0509]: cannot move out of type `S`, which implements the `Drop` trait\n   --> $DIR/borrowck-move-out-of-tuple-struct-with-dtor.rs:28:19\n@@ -25,8 +33,13 @@ LL | fn move_in_fn_arg(S(_s): S) {\n    |                   ^^--^\n    |                   | |\n    |                   | data moved here\n-   |                   | help: to prevent move, use ref or ref mut: `ref _s`\n    |                   cannot move out of here\n+   |\n+note: move occurs because `_s` has type `std::string::String`, which does not implement the `Copy` trait\n+  --> $DIR/borrowck-move-out-of-tuple-struct-with-dtor.rs:28:21\n+   |\n+LL | fn move_in_fn_arg(S(_s): S) {\n+   |                     ^^\n \n error: aborting due to 3 previous errors\n "}, {"sha": "92e10c258c269efbd9cca6855d1dcd0e351bf573", "filename": "src/test/ui/borrowck/borrowck-overloaded-index-move-from-vec.nll.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bd2b54c23c9eb11175edf99233186c77f476d7af/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-overloaded-index-move-from-vec.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/bd2b54c23c9eb11175edf99233186c77f476d7af/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-overloaded-index-move-from-vec.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-overloaded-index-move-from-vec.nll.stderr?ref=bd2b54c23c9eb11175edf99233186c77f476d7af", "patch": "@@ -5,7 +5,7 @@ LL |     let bad = v[0];\n    |               ^^^^\n    |               |\n    |               cannot move out of borrowed content\n-   |               help: consider using a reference instead: `&v[0]`\n+   |               help: consider borrowing here: `&v[0]`\n \n error: aborting due to previous error\n "}, {"sha": "491b5b5bd74abef53a40f7b6d0e963f9c0683bd5", "filename": "src/test/ui/by-move-pattern-binding.nll.stderr", "status": "modified", "additions": 10, "deletions": 4, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/bd2b54c23c9eb11175edf99233186c77f476d7af/src%2Ftest%2Fui%2Fby-move-pattern-binding.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/bd2b54c23c9eb11175edf99233186c77f476d7af/src%2Ftest%2Fui%2Fby-move-pattern-binding.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fby-move-pattern-binding.nll.stderr?ref=bd2b54c23c9eb11175edf99233186c77f476d7af", "patch": "@@ -5,10 +5,16 @@ LL |     match &s.x {\n    |           ^^^^ cannot move out of borrowed content\n LL |         &E::Foo => {}\n LL |         &E::Bar(identifier) => f(identifier.clone())  //~ ERROR cannot move\n-   |                 ----------\n-   |                 |\n-   |                 data moved here\n-   |                 help: to prevent move, use ref or ref mut: `ref identifier`\n+   |         -------------------\n+   |         |       |\n+   |         |       data moved here\n+   |         help: consider removing the `&`: `E::Bar(identifier)`\n+   |\n+note: move occurs because `identifier` has type `std::string::String`, which does not implement the `Copy` trait\n+  --> $DIR/by-move-pattern-binding.rs:26:17\n+   |\n+LL |         &E::Bar(identifier) => f(identifier.clone())  //~ ERROR cannot move\n+   |                 ^^^^^^^^^^\n \n error: aborting due to previous error\n "}, {"sha": "5522e22fb1fa28089a33a6c8851a39b7b52cf70a", "filename": "src/test/ui/check-static-values-constraints.nll.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bd2b54c23c9eb11175edf99233186c77f476d7af/src%2Ftest%2Fui%2Fcheck-static-values-constraints.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/bd2b54c23c9eb11175edf99233186c77f476d7af/src%2Ftest%2Fui%2Fcheck-static-values-constraints.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcheck-static-values-constraints.nll.stderr?ref=bd2b54c23c9eb11175edf99233186c77f476d7af", "patch": "@@ -56,7 +56,7 @@ LL |     let y = { static x: Box<isize> = box 3; x };\n    |                                             ^\n    |                                             |\n    |                                             cannot move out of static item\n-   |                                             help: consider using a reference instead: `&x`\n+   |                                             help: consider borrowing here: `&x`\n \n error[E0010]: allocations are not allowed in statics\n   --> $DIR/check-static-values-constraints.rs:120:38"}, {"sha": "8e0599370287fb886ef239e8b593c5088c94d7dd", "filename": "src/test/ui/disallowed-deconstructing/disallowed-deconstructing-destructing-struct-let.nll.stderr", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/bd2b54c23c9eb11175edf99233186c77f476d7af/src%2Ftest%2Fui%2Fdisallowed-deconstructing%2Fdisallowed-deconstructing-destructing-struct-let.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/bd2b54c23c9eb11175edf99233186c77f476d7af/src%2Ftest%2Fui%2Fdisallowed-deconstructing%2Fdisallowed-deconstructing-destructing-struct-let.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fdisallowed-deconstructing%2Fdisallowed-deconstructing-destructing-struct-let.nll.stderr?ref=bd2b54c23c9eb11175edf99233186c77f476d7af", "patch": "@@ -5,7 +5,12 @@ LL |     let X { x: y } = x; //~ ERROR cannot move out of type\n    |                -     ^ cannot move out of here\n    |                |\n    |                data moved here\n-   |                help: to prevent move, use ref or ref mut: `ref y`\n+   |\n+note: move occurs because `y` has type `std::string::String`, which does not implement the `Copy` trait\n+  --> $DIR/disallowed-deconstructing-destructing-struct-let.rs:22:16\n+   |\n+LL |     let X { x: y } = x; //~ ERROR cannot move out of type\n+   |                ^\n \n error: aborting due to previous error\n "}, {"sha": "dd1a3ef2a2b9835c1403c0796b7475cb4b7de57d", "filename": "src/test/ui/disallowed-deconstructing/disallowed-deconstructing-destructing-struct-match.nll.stderr", "status": "modified", "additions": 7, "deletions": 4, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/bd2b54c23c9eb11175edf99233186c77f476d7af/src%2Ftest%2Fui%2Fdisallowed-deconstructing%2Fdisallowed-deconstructing-destructing-struct-match.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/bd2b54c23c9eb11175edf99233186c77f476d7af/src%2Ftest%2Fui%2Fdisallowed-deconstructing%2Fdisallowed-deconstructing-destructing-struct-match.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fdisallowed-deconstructing%2Fdisallowed-deconstructing-destructing-struct-match.nll.stderr?ref=bd2b54c23c9eb11175edf99233186c77f476d7af", "patch": "@@ -4,10 +4,13 @@ error[E0509]: cannot move out of type `X`, which implements the `Drop` trait\n LL |     match x {\n    |           ^ cannot move out of here\n LL |         X { x: y } => println!(\"contents: {}\", y)\n-   |                -\n-   |                |\n-   |                data moved here\n-   |                help: to prevent move, use ref or ref mut: `ref y`\n+   |                - data moved here\n+   |\n+note: move occurs because `y` has type `std::string::String`, which does not implement the `Copy` trait\n+  --> $DIR/disallowed-deconstructing-destructing-struct-match.rs:25:16\n+   |\n+LL |         X { x: y } => println!(\"contents: {}\", y)\n+   |                ^\n \n error: aborting due to previous error\n "}, {"sha": "aa62b457ecdf378cef6c96e4a6256aa36293a886", "filename": "src/test/ui/moves/move-out-of-slice-1.nll.stderr", "status": "modified", "additions": 7, "deletions": 4, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/bd2b54c23c9eb11175edf99233186c77f476d7af/src%2Ftest%2Fui%2Fmoves%2Fmove-out-of-slice-1.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/bd2b54c23c9eb11175edf99233186c77f476d7af/src%2Ftest%2Fui%2Fmoves%2Fmove-out-of-slice-1.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmoves%2Fmove-out-of-slice-1.nll.stderr?ref=bd2b54c23c9eb11175edf99233186c77f476d7af", "patch": "@@ -4,10 +4,13 @@ error[E0508]: cannot move out of type `[A]`, a non-copy slice\n LL |     match a {\n    |           ^ cannot move out of here\n LL |         box [a] => {}, //~ ERROR cannot move out of type `[A]`, a non-copy slice\n-   |              -\n-   |              |\n-   |              data moved here\n-   |              help: to prevent move, use ref or ref mut: `ref a`\n+   |              - data moved here\n+   |\n+note: move occurs because `a` has type `A`, which does not implement the `Copy` trait\n+  --> $DIR/move-out-of-slice-1.rs:18:14\n+   |\n+LL |         box [a] => {}, //~ ERROR cannot move out of type `[A]`, a non-copy slice\n+   |              ^\n \n error: aborting due to previous error\n "}]}