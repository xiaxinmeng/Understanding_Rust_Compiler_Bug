{"sha": "aced4ce145bf23cc945c58a6c9c1bc1f33359a06", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFjZWQ0Y2UxNDViZjIzY2M5NDVjNThhNmM5YzFiYzFmMzMzNTlhMDY=", "commit": {"author": {"name": "Brian Anderson", "email": "andersrb@gmail.com", "date": "2011-03-27T22:51:25Z"}, "committer": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2011-03-29T04:14:04Z"}, "message": "Handle structural types as the result of if expressions", "tree": {"sha": "92d233fd79b9ee0f119bc89ee329b6be07047c09", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/92d233fd79b9ee0f119bc89ee329b6be07047c09"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/aced4ce145bf23cc945c58a6c9c1bc1f33359a06", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/aced4ce145bf23cc945c58a6c9c1bc1f33359a06", "html_url": "https://github.com/rust-lang/rust/commit/aced4ce145bf23cc945c58a6c9c1bc1f33359a06", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/aced4ce145bf23cc945c58a6c9c1bc1f33359a06/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a5a319fa047b04b525066d560115ad93a18e4a4f", "url": "https://api.github.com/repos/rust-lang/rust/commits/a5a319fa047b04b525066d560115ad93a18e4a4f", "html_url": "https://github.com/rust-lang/rust/commit/a5a319fa047b04b525066d560115ad93a18e4a4f"}], "stats": {"total": 27, "additions": 27, "deletions": 0}, "files": [{"sha": "433a80128739d344038b65d85fab6f4a8235b3ba", "filename": "src/comp/middle/trans.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/aced4ce145bf23cc945c58a6c9c1bc1f33359a06/src%2Fcomp%2Fmiddle%2Ftrans.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aced4ce145bf23cc945c58a6c9c1bc1f33359a06/src%2Fcomp%2Fmiddle%2Ftrans.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Ftrans.rs?ref=aced4ce145bf23cc945c58a6c9c1bc1f33359a06", "patch": "@@ -3049,6 +3049,9 @@ fn trans_if(@block_ctxt cx, @ast.expr cond,\n             // FIXME: Handle dynamic type sizes\n             auto expr_ty = ty.expr_ty(elexpr);\n             expr_llty = type_of(else_res.bcx.fcx.ccx, expr_ty);\n+            if (ty.type_is_structural(expr_ty)) {\n+                expr_llty = T_ptr(expr_llty);\n+            }\n         }\n         case (_) {\n             else_res = res(else_cx, C_nil());"}, {"sha": "df20a3bae603079835b3e05a4836d1674e613512", "filename": "src/test/run-pass/expr-if-struct.rs", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/aced4ce145bf23cc945c58a6c9c1bc1f33359a06/src%2Ftest%2Frun-pass%2Fexpr-if-struct.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aced4ce145bf23cc945c58a6c9c1bc1f33359a06/src%2Ftest%2Frun-pass%2Fexpr-if-struct.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fexpr-if-struct.rs?ref=aced4ce145bf23cc945c58a6c9c1bc1f33359a06", "patch": "@@ -0,0 +1,24 @@\n+// xfail-boot\n+// -*- rust -*-\n+\n+// Tests for if as expressions returning structural types\n+\n+fn test_rec() {\n+  auto res = if (true) { rec(i = 100) } else { rec(i = 101) };\n+  check (res == rec(i = 100));\n+}\n+\n+fn test_tag() {\n+  tag mood {\n+    happy;\n+    sad;\n+  }\n+\n+  auto res = if (true) { happy } else { sad };\n+  check (res == happy);\n+}\n+\n+fn main() {\n+  test_rec();\n+  test_tag();\n+}\n\\ No newline at end of file"}]}