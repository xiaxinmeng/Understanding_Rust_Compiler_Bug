{"sha": "b9ae3db4ac47c80ecfb647920ceda77c22dd648c", "node_id": "C_kwDOAAsO6NoAKGI5YWUzZGI0YWM0N2M4MGVjZmI2NDc5MjBjZWRhNzdjMjJkZDY0OGM", "commit": {"author": {"name": "Lo\u00efc BRANSTETT", "email": "lolo.branstett@numericable.fr", "date": "2022-04-25T10:07:21Z"}, "committer": {"name": "Urgau", "email": "urgau@numericable.fr", "date": "2022-05-24T11:51:36Z"}, "message": "RFC3239: Add tests for compact `cfg(target(..))`", "tree": {"sha": "14a3e5de93c17c95d9dbf0f6391bb9ae88707f9a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/14a3e5de93c17c95d9dbf0f6391bb9ae88707f9a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b9ae3db4ac47c80ecfb647920ceda77c22dd648c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b9ae3db4ac47c80ecfb647920ceda77c22dd648c", "html_url": "https://github.com/rust-lang/rust/commit/b9ae3db4ac47c80ecfb647920ceda77c22dd648c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b9ae3db4ac47c80ecfb647920ceda77c22dd648c/comments", "author": {"login": "Urgau", "id": 3616612, "node_id": "MDQ6VXNlcjM2MTY2MTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3616612?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Urgau", "html_url": "https://github.com/Urgau", "followers_url": "https://api.github.com/users/Urgau/followers", "following_url": "https://api.github.com/users/Urgau/following{/other_user}", "gists_url": "https://api.github.com/users/Urgau/gists{/gist_id}", "starred_url": "https://api.github.com/users/Urgau/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Urgau/subscriptions", "organizations_url": "https://api.github.com/users/Urgau/orgs", "repos_url": "https://api.github.com/users/Urgau/repos", "events_url": "https://api.github.com/users/Urgau/events{/privacy}", "received_events_url": "https://api.github.com/users/Urgau/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Urgau", "id": 3616612, "node_id": "MDQ6VXNlcjM2MTY2MTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3616612?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Urgau", "html_url": "https://github.com/Urgau", "followers_url": "https://api.github.com/users/Urgau/followers", "following_url": "https://api.github.com/users/Urgau/following{/other_user}", "gists_url": "https://api.github.com/users/Urgau/gists{/gist_id}", "starred_url": "https://api.github.com/users/Urgau/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Urgau/subscriptions", "organizations_url": "https://api.github.com/users/Urgau/orgs", "repos_url": "https://api.github.com/users/Urgau/repos", "events_url": "https://api.github.com/users/Urgau/events{/privacy}", "received_events_url": "https://api.github.com/users/Urgau/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8345571cd07a00c780f5c156dd2d20a84b432807", "url": "https://api.github.com/repos/rust-lang/rust/commits/8345571cd07a00c780f5c156dd2d20a84b432807", "html_url": "https://github.com/rust-lang/rust/commit/8345571cd07a00c780f5c156dd2d20a84b432807"}], "stats": {"total": 152, "additions": 152, "deletions": 0}, "files": [{"sha": "bca2275b1a957781988f76268f7590997aba3113", "filename": "src/test/ui/cfg/cfg-target-compact-errors.rs", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/b9ae3db4ac47c80ecfb647920ceda77c22dd648c/src%2Ftest%2Fui%2Fcfg%2Fcfg-target-compact-errors.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b9ae3db4ac47c80ecfb647920ceda77c22dd648c/src%2Ftest%2Fui%2Fcfg%2Fcfg-target-compact-errors.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcfg%2Fcfg-target-compact-errors.rs?ref=b9ae3db4ac47c80ecfb647920ceda77c22dd648c", "patch": "@@ -0,0 +1,17 @@\n+// check-fail\n+\n+#![feature(cfg_target_compact)]\n+\n+#[cfg(target(o::o))]\n+//~^ ERROR `cfg` predicate key must be an identifier\n+fn one() {}\n+\n+#[cfg(target(os = 8))]\n+//~^ ERROR literal in `cfg` predicate value must be a string\n+fn two() {}\n+\n+#[cfg(target(os = \"linux\", pointer(width = \"64\")))]\n+//~^ ERROR invalid predicate `target_pointer`\n+fn three() {}\n+\n+fn main() {}"}, {"sha": "bb858301eb58196f28e3d56356a321726c55a15f", "filename": "src/test/ui/cfg/cfg-target-compact-errors.stderr", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/b9ae3db4ac47c80ecfb647920ceda77c22dd648c/src%2Ftest%2Fui%2Fcfg%2Fcfg-target-compact-errors.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b9ae3db4ac47c80ecfb647920ceda77c22dd648c/src%2Ftest%2Fui%2Fcfg%2Fcfg-target-compact-errors.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcfg%2Fcfg-target-compact-errors.stderr?ref=b9ae3db4ac47c80ecfb647920ceda77c22dd648c", "patch": "@@ -0,0 +1,22 @@\n+error: `cfg` predicate key must be an identifier\n+  --> $DIR/cfg-target-compact-errors.rs:5:14\n+   |\n+LL | #[cfg(target(o::o))]\n+   |              ^^^^\n+\n+error[E0565]: literal in `cfg` predicate value must be a string\n+  --> $DIR/cfg-target-compact-errors.rs:9:19\n+   |\n+LL | #[cfg(target(os = 8))]\n+   |                   ^\n+\n+error[E0537]: invalid predicate `target_pointer`\n+  --> $DIR/cfg-target-compact-errors.rs:13:28\n+   |\n+LL | #[cfg(target(os = \"linux\", pointer(width = \"64\")))]\n+   |                            ^^^^^^^^^^^^^^^^^^^^^\n+\n+error: aborting due to 3 previous errors\n+\n+Some errors have detailed explanations: E0537, E0565.\n+For more information about an error, try `rustc --explain E0537`."}, {"sha": "dc95a80915c4307ed32591e89ecac5773fac9926", "filename": "src/test/ui/cfg/cfg-target-compact.rs", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/b9ae3db4ac47c80ecfb647920ceda77c22dd648c/src%2Ftest%2Fui%2Fcfg%2Fcfg-target-compact.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b9ae3db4ac47c80ecfb647920ceda77c22dd648c/src%2Ftest%2Fui%2Fcfg%2Fcfg-target-compact.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcfg%2Fcfg-target-compact.rs?ref=b9ae3db4ac47c80ecfb647920ceda77c22dd648c", "patch": "@@ -0,0 +1,10 @@\n+// run-pass\n+#![feature(cfg_target_compact)]\n+\n+#[cfg(target(os = \"linux\", pointer_width = \"64\"))]\n+pub fn main() {\n+}\n+\n+#[cfg(not(target(os = \"linux\", pointer_width = \"64\")))]\n+pub fn main() {\n+}"}, {"sha": "bff807400396580b801b7faa38d079c9a9918f06", "filename": "src/test/ui/check-cfg/compact-names.rs", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/b9ae3db4ac47c80ecfb647920ceda77c22dd648c/src%2Ftest%2Fui%2Fcheck-cfg%2Fcompact-names.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b9ae3db4ac47c80ecfb647920ceda77c22dd648c/src%2Ftest%2Fui%2Fcheck-cfg%2Fcompact-names.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcheck-cfg%2Fcompact-names.rs?ref=b9ae3db4ac47c80ecfb647920ceda77c22dd648c", "patch": "@@ -0,0 +1,15 @@\n+// This test check that we correctly emit an warning for compact cfg\n+//\n+// check-pass\n+// compile-flags:--check-cfg=names() -Z unstable-options\n+\n+#![feature(cfg_target_compact)]\n+\n+#[cfg(target(os = \"linux\", arch = \"arm\"))]\n+pub fn expected() {}\n+\n+#[cfg(target(os = \"linux\", architecture = \"arm\"))]\n+//~^ WARNING unexpected `cfg` condition name\n+pub fn unexpected() {}\n+\n+fn main() {}"}, {"sha": "f1fc4285a71b79a0f852934cefa28b2c27e4b245", "filename": "src/test/ui/check-cfg/compact-names.stderr", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/b9ae3db4ac47c80ecfb647920ceda77c22dd648c/src%2Ftest%2Fui%2Fcheck-cfg%2Fcompact-names.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b9ae3db4ac47c80ecfb647920ceda77c22dd648c/src%2Ftest%2Fui%2Fcheck-cfg%2Fcompact-names.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcheck-cfg%2Fcompact-names.stderr?ref=b9ae3db4ac47c80ecfb647920ceda77c22dd648c", "patch": "@@ -0,0 +1,10 @@\n+warning: unexpected `cfg` condition name\n+  --> $DIR/compact-names.rs:11:28\n+   |\n+LL | #[cfg(target(os = \"linux\", architecture = \"arm\"))]\n+   |                            ^^^^^^^^^^^^^^^^^^^^\n+   |\n+   = note: `#[warn(unexpected_cfgs)]` on by default\n+\n+warning: 1 warning emitted\n+"}, {"sha": "1f17057840ccadb5a56abfc50ca59c73a0a64d90", "filename": "src/test/ui/check-cfg/compact-values.rs", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/b9ae3db4ac47c80ecfb647920ceda77c22dd648c/src%2Ftest%2Fui%2Fcheck-cfg%2Fcompact-values.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b9ae3db4ac47c80ecfb647920ceda77c22dd648c/src%2Ftest%2Fui%2Fcheck-cfg%2Fcompact-values.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcheck-cfg%2Fcompact-values.rs?ref=b9ae3db4ac47c80ecfb647920ceda77c22dd648c", "patch": "@@ -0,0 +1,15 @@\n+// This test check that we correctly emit an warning for compact cfg\n+//\n+// check-pass\n+// compile-flags:--check-cfg=values() -Z unstable-options\n+\n+#![feature(cfg_target_compact)]\n+\n+#[cfg(target(os = \"linux\", arch = \"arm\"))]\n+pub fn expected() {}\n+\n+#[cfg(target(os = \"linux\", arch = \"X\"))]\n+//~^ WARNING unexpected `cfg` condition value\n+pub fn unexpected() {}\n+\n+fn main() {}"}, {"sha": "a196e1537df57b09e5f2491a74c115369b111a75", "filename": "src/test/ui/check-cfg/compact-values.stderr", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/b9ae3db4ac47c80ecfb647920ceda77c22dd648c/src%2Ftest%2Fui%2Fcheck-cfg%2Fcompact-values.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b9ae3db4ac47c80ecfb647920ceda77c22dd648c/src%2Ftest%2Fui%2Fcheck-cfg%2Fcompact-values.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcheck-cfg%2Fcompact-values.stderr?ref=b9ae3db4ac47c80ecfb647920ceda77c22dd648c", "patch": "@@ -0,0 +1,11 @@\n+warning: unexpected `cfg` condition value\n+  --> $DIR/compact-values.rs:11:28\n+   |\n+LL | #[cfg(target(os = \"linux\", arch = \"X\"))]\n+   |                            ^^^^^^^^^^\n+   |\n+   = note: `#[warn(unexpected_cfgs)]` on by default\n+   = note: expected values for `target_arch` are: aarch64, arm, avr, bpf, hexagon, m68k, mips, mips64, msp430, nvptx64, powerpc, powerpc64, riscv32, riscv64, s390x, sparc, sparc64, wasm32, wasm64, x86, x86_64\n+\n+warning: 1 warning emitted\n+"}, {"sha": "df81b7d2297eae80732c4bebc28299789edd1060", "filename": "src/test/ui/feature-gates/feature-gate-cfg-target-compact.rs", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/b9ae3db4ac47c80ecfb647920ceda77c22dd648c/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-cfg-target-compact.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b9ae3db4ac47c80ecfb647920ceda77c22dd648c/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-cfg-target-compact.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-cfg-target-compact.rs?ref=b9ae3db4ac47c80ecfb647920ceda77c22dd648c", "patch": "@@ -0,0 +1,13 @@\n+#[cfg(target(os = \"x\"))] //~ ERROR compact `cfg(target(..))` is experimental\n+struct Foo(u64, u64);\n+\n+#[cfg_attr(target(os = \"x\"), x)] //~ ERROR compact `cfg(target(..))` is experimental\n+struct Bar(u64, u64);\n+\n+#[cfg(not(any(all(target(os = \"x\")))))] //~ ERROR compact `cfg(target(..))` is experimental\n+fn foo() {}\n+\n+fn main() {\n+    cfg!(target(os = \"x\"));\n+    //~^ ERROR compact `cfg(target(..))` is experimental and subject to change\n+}"}, {"sha": "be6fe23ded17188799f13e35d87e7c54cf283ddd", "filename": "src/test/ui/feature-gates/feature-gate-cfg-target-compact.stderr", "status": "added", "additions": 39, "deletions": 0, "changes": 39, "blob_url": "https://github.com/rust-lang/rust/blob/b9ae3db4ac47c80ecfb647920ceda77c22dd648c/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-cfg-target-compact.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b9ae3db4ac47c80ecfb647920ceda77c22dd648c/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-cfg-target-compact.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-cfg-target-compact.stderr?ref=b9ae3db4ac47c80ecfb647920ceda77c22dd648c", "patch": "@@ -0,0 +1,39 @@\n+error[E0658]: compact `cfg(target(..))` is experimental and subject to change\n+  --> $DIR/feature-gate-cfg-target-compact.rs:1:7\n+   |\n+LL | #[cfg(target(os = \"x\"))]\n+   |       ^^^^^^^^^^^^^^^^\n+   |\n+   = note: see issue #96901 <https://github.com/rust-lang/rust/issues/96901> for more information\n+   = help: add `#![feature(cfg_target_compact)]` to the crate attributes to enable\n+\n+error[E0658]: compact `cfg(target(..))` is experimental and subject to change\n+  --> $DIR/feature-gate-cfg-target-compact.rs:4:12\n+   |\n+LL | #[cfg_attr(target(os = \"x\"), x)]\n+   |            ^^^^^^^^^^^^^^^^\n+   |\n+   = note: see issue #96901 <https://github.com/rust-lang/rust/issues/96901> for more information\n+   = help: add `#![feature(cfg_target_compact)]` to the crate attributes to enable\n+\n+error[E0658]: compact `cfg(target(..))` is experimental and subject to change\n+  --> $DIR/feature-gate-cfg-target-compact.rs:7:19\n+   |\n+LL | #[cfg(not(any(all(target(os = \"x\")))))]\n+   |                   ^^^^^^^^^^^^^^^^\n+   |\n+   = note: see issue #96901 <https://github.com/rust-lang/rust/issues/96901> for more information\n+   = help: add `#![feature(cfg_target_compact)]` to the crate attributes to enable\n+\n+error[E0658]: compact `cfg(target(..))` is experimental and subject to change\n+  --> $DIR/feature-gate-cfg-target-compact.rs:11:10\n+   |\n+LL |     cfg!(target(os = \"x\"));\n+   |          ^^^^^^^^^^^^^^^^\n+   |\n+   = note: see issue #96901 <https://github.com/rust-lang/rust/issues/96901> for more information\n+   = help: add `#![feature(cfg_target_compact)]` to the crate attributes to enable\n+\n+error: aborting due to 4 previous errors\n+\n+For more information about this error, try `rustc --explain E0658`."}]}