{"sha": "140bb5d292bb1fd0de95bca223227bad985f893f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE0MGJiNWQyOTJiYjFmZDBkZTk1YmNhMjIzMjI3YmFkOTg1Zjg5M2Y=", "commit": {"author": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2019-03-09T01:27:03Z"}, "committer": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2019-03-09T01:27:03Z"}, "message": "Fix duplicated bounds printing in rustdoc", "tree": {"sha": "3f74bcc8343278fcaea01a0f63bff50b090c2e90", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3f74bcc8343278fcaea01a0f63bff50b090c2e90"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/140bb5d292bb1fd0de95bca223227bad985f893f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/140bb5d292bb1fd0de95bca223227bad985f893f", "html_url": "https://github.com/rust-lang/rust/commit/140bb5d292bb1fd0de95bca223227bad985f893f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/140bb5d292bb1fd0de95bca223227bad985f893f/comments", "author": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "committer": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "88f755f8a84df1d9e6b17cf10c96ae8b93481b2e", "url": "https://api.github.com/repos/rust-lang/rust/commits/88f755f8a84df1d9e6b17cf10c96ae8b93481b2e", "html_url": "https://github.com/rust-lang/rust/commit/88f755f8a84df1d9e6b17cf10c96ae8b93481b2e"}], "stats": {"total": 22, "additions": 11, "deletions": 11}, "files": [{"sha": "d739d696337161b7487abf136de64d243ba90b29", "filename": "src/librustdoc/html/format.rs", "status": "modified", "additions": 11, "deletions": 11, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/140bb5d292bb1fd0de95bca223227bad985f893f/src%2Flibrustdoc%2Fhtml%2Fformat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/140bb5d292bb1fd0de95bca223227bad985f893f/src%2Flibrustdoc%2Fhtml%2Fformat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fformat.rs?ref=140bb5d292bb1fd0de95bca223227bad985f893f", "patch": "@@ -9,6 +9,7 @@ use std::borrow::Cow;\n use std::fmt;\n \n use rustc::hir::def_id::DefId;\n+use rustc::util::nodemap::FxHashSet;\n use rustc_target::spec::abi::Abi;\n use rustc::hir;\n \n@@ -106,8 +107,10 @@ impl<'a, T: fmt::Display> fmt::Display for CommaSep<'a, T> {\n \n impl<'a> fmt::Display for GenericBounds<'a> {\n     fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {\n+        let mut bounds_dup = FxHashSet::default();\n         let &GenericBounds(bounds) = self;\n-        for (i, bound) in bounds.iter().enumerate() {\n+\n+        for (i, bound) in bounds.iter().filter(|b| bounds_dup.insert(b.to_string())).enumerate() {\n             if i > 0 {\n                 f.write_str(\" + \")?;\n             }\n@@ -205,16 +208,13 @@ impl<'a> fmt::Display for WhereClause<'a> {\n                         clause.push_str(&format!(\"{}: {}\", ty, GenericBounds(bounds)));\n                     }\n                 }\n-                &clean::WherePredicate::RegionPredicate { ref lifetime,\n-                                                          ref bounds } => {\n-                    clause.push_str(&format!(\"{}: \", lifetime));\n-                    for (i, lifetime) in bounds.iter().enumerate() {\n-                        if i > 0 {\n-                            clause.push_str(\" + \");\n-                        }\n-\n-                        clause.push_str(&lifetime.to_string());\n-                    }\n+                &clean::WherePredicate::RegionPredicate { ref lifetime, ref bounds } => {\n+                    clause.push_str(&format!(\"{}: {}\",\n+                                             lifetime,\n+                                             bounds.iter()\n+                                                   .map(|b| b.to_string())\n+                                                   .collect::<Vec<_>>()\n+                                                   .join(\" + \")));\n                 }\n                 &clean::WherePredicate::EqPredicate { ref lhs, ref rhs } => {\n                     if f.alternate() {"}]}