{"sha": "ab8b961677ac5c74762dcea955aa0ff4d7fe4915", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFiOGI5NjE2NzdhYzVjNzQ3NjJkY2VhOTU1YWEwZmY0ZDdmZTQ5MTU=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2018-03-26T15:48:06Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2018-03-26T15:48:06Z"}, "message": "Auto merge of #49379 - TimNN:rollup, r=TimNN\n\nRollup of 7 pull requests\n\n- Successful merges: #48693, #48932, #49103, #49170, #49187, #49346, #49353\n- Failed merges:", "tree": {"sha": "11020d105058713d694130b47400ae11ba66f1d2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/11020d105058713d694130b47400ae11ba66f1d2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ab8b961677ac5c74762dcea955aa0ff4d7fe4915", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ab8b961677ac5c74762dcea955aa0ff4d7fe4915", "html_url": "https://github.com/rust-lang/rust/commit/ab8b961677ac5c74762dcea955aa0ff4d7fe4915", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ab8b961677ac5c74762dcea955aa0ff4d7fe4915/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "13a86f4d8555702085b97de3a42234a82ddc045d", "url": "https://api.github.com/repos/rust-lang/rust/commits/13a86f4d8555702085b97de3a42234a82ddc045d", "html_url": "https://github.com/rust-lang/rust/commit/13a86f4d8555702085b97de3a42234a82ddc045d"}, {"sha": "1233aa29de2d6f5e293f84b38ba2b02cfaf1fa0e", "url": "https://api.github.com/repos/rust-lang/rust/commits/1233aa29de2d6f5e293f84b38ba2b02cfaf1fa0e", "html_url": "https://github.com/rust-lang/rust/commit/1233aa29de2d6f5e293f84b38ba2b02cfaf1fa0e"}], "stats": {"total": 218, "additions": 181, "deletions": 37}, "files": [{"sha": "a1318086af7e93fbbd5237bd012080d619c9f265", "filename": "src/bootstrap/compile.rs", "status": "modified", "additions": 5, "deletions": 6, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/ab8b961677ac5c74762dcea955aa0ff4d7fe4915/src%2Fbootstrap%2Fcompile.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ab8b961677ac5c74762dcea955aa0ff4d7fe4915/src%2Fbootstrap%2Fcompile.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fcompile.rs?ref=ab8b961677ac5c74762dcea955aa0ff4d7fe4915", "patch": "@@ -98,7 +98,7 @@ impl Step for Std {\n             copy_musl_third_party_objects(build, target, &libdir);\n         }\n \n-        let out_dir = build.stage_out(compiler, Mode::Libstd);\n+        let out_dir = build.cargo_out(compiler, Mode::Libstd, target);\n         build.clear_if_dirty(&out_dir, &builder.rustc(compiler));\n         let mut cargo = builder.cargo(compiler, Mode::Libstd, target, \"build\");\n         std_cargo(builder, &compiler, target, &mut cargo);\n@@ -360,7 +360,7 @@ impl Step for Test {\n             return;\n         }\n \n-        let out_dir = build.stage_out(compiler, Mode::Libtest);\n+        let out_dir = build.cargo_out(compiler, Mode::Libtest, target);\n         build.clear_if_dirty(&out_dir, &libstd_stamp(build, compiler, target));\n         let mut cargo = builder.cargo(compiler, Mode::Libtest, target, \"build\");\n         test_cargo(build, &compiler, target, &mut cargo);\n@@ -482,10 +482,9 @@ impl Step for Rustc {\n             compiler: builder.compiler(self.compiler.stage, build.build),\n             target: build.build,\n         });\n-\n-        let stage_out = builder.stage_out(compiler, Mode::Librustc);\n-        build.clear_if_dirty(&stage_out, &libstd_stamp(build, compiler, target));\n-        build.clear_if_dirty(&stage_out, &libtest_stamp(build, compiler, target));\n+        let cargo_out = builder.cargo_out(compiler, Mode::Librustc, target);\n+        build.clear_if_dirty(&cargo_out, &libstd_stamp(build, compiler, target));\n+        build.clear_if_dirty(&cargo_out, &libtest_stamp(build, compiler, target));\n \n         let mut cargo = builder.cargo(compiler, Mode::Librustc, target, \"build\");\n         rustc_cargo(build, &mut cargo);"}, {"sha": "669308c8dd0efe208b37e5369806a8805a9cd1a3", "filename": "src/bootstrap/tool.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ab8b961677ac5c74762dcea955aa0ff4d7fe4915/src%2Fbootstrap%2Ftool.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ab8b961677ac5c74762dcea955aa0ff4d7fe4915/src%2Fbootstrap%2Ftool.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Ftool.rs?ref=ab8b961677ac5c74762dcea955aa0ff4d7fe4915", "patch": "@@ -338,6 +338,10 @@ impl Step for Rustdoc {\n         };\n \n         builder.ensure(compile::Rustc { compiler: build_compiler, target });\n+        builder.ensure(compile::Rustc {\n+            compiler: build_compiler,\n+            target: builder.build.build,\n+        });\n \n         let mut cargo = prepare_tool_cargo(builder,\n                                            build_compiler,"}, {"sha": "cddfa557f6aed7e43ac04c326cfe6509417e0c0d", "filename": "src/ci/docker/dist-aarch64-linux/Dockerfile", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ab8b961677ac5c74762dcea955aa0ff4d7fe4915/src%2Fci%2Fdocker%2Fdist-aarch64-linux%2FDockerfile", "raw_url": "https://github.com/rust-lang/rust/raw/ab8b961677ac5c74762dcea955aa0ff4d7fe4915/src%2Fci%2Fdocker%2Fdist-aarch64-linux%2FDockerfile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fdist-aarch64-linux%2FDockerfile?ref=ab8b961677ac5c74762dcea955aa0ff4d7fe4915", "patch": "@@ -32,5 +32,5 @@ ENV CC_aarch64_unknown_linux_gnu=aarch64-unknown-linux-gnueabi-gcc \\\n \n ENV HOSTS=aarch64-unknown-linux-gnu\n \n-ENV RUST_CONFIGURE_ARGS --enable-extended\n+ENV RUST_CONFIGURE_ARGS --enable-extended --disable-docs\n ENV SCRIPT python2.7 ../x.py dist --host $HOSTS --target $HOSTS"}, {"sha": "e00c23dac89b087dd66edbec4e1ff6db704cb9fd", "filename": "src/ci/docker/dist-android/Dockerfile", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/ab8b961677ac5c74762dcea955aa0ff4d7fe4915/src%2Fci%2Fdocker%2Fdist-android%2FDockerfile", "raw_url": "https://github.com/rust-lang/rust/raw/ab8b961677ac5c74762dcea955aa0ff4d7fe4915/src%2Fci%2Fdocker%2Fdist-android%2FDockerfile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fdist-android%2FDockerfile?ref=ab8b961677ac5c74762dcea955aa0ff4d7fe4915", "patch": "@@ -26,7 +26,8 @@ ENV RUST_CONFIGURE_ARGS \\\n       --armv7-linux-androideabi-ndk=/android/ndk/arm-14 \\\n       --i686-linux-android-ndk=/android/ndk/x86-14 \\\n       --aarch64-linux-android-ndk=/android/ndk/arm64-21 \\\n-      --x86_64-linux-android-ndk=/android/ndk/x86_64-21\n+      --x86_64-linux-android-ndk=/android/ndk/x86_64-21 \\\n+      --disable-docs\n \n ENV SCRIPT python2.7 ../x.py dist --target $TARGETS\n "}, {"sha": "6ddc5c1e04ae35223c38a6002ac6ef996f23a3e0", "filename": "src/ci/docker/dist-arm-linux/Dockerfile", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ab8b961677ac5c74762dcea955aa0ff4d7fe4915/src%2Fci%2Fdocker%2Fdist-arm-linux%2FDockerfile", "raw_url": "https://github.com/rust-lang/rust/raw/ab8b961677ac5c74762dcea955aa0ff4d7fe4915/src%2Fci%2Fdocker%2Fdist-arm-linux%2FDockerfile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fdist-arm-linux%2FDockerfile?ref=ab8b961677ac5c74762dcea955aa0ff4d7fe4915", "patch": "@@ -32,5 +32,5 @@ ENV CC_arm_unknown_linux_gnueabi=arm-unknown-linux-gnueabi-gcc \\\n \n ENV HOSTS=arm-unknown-linux-gnueabi\n \n-ENV RUST_CONFIGURE_ARGS --enable-extended\n+ENV RUST_CONFIGURE_ARGS --enable-extended --disable-docs\n ENV SCRIPT python2.7 ../x.py dist --host $HOSTS --target $HOSTS"}, {"sha": "e4d4b2feeec40270c84f97b3277bfc4dfd6bb911", "filename": "src/ci/docker/dist-armhf-linux/Dockerfile", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ab8b961677ac5c74762dcea955aa0ff4d7fe4915/src%2Fci%2Fdocker%2Fdist-armhf-linux%2FDockerfile", "raw_url": "https://github.com/rust-lang/rust/raw/ab8b961677ac5c74762dcea955aa0ff4d7fe4915/src%2Fci%2Fdocker%2Fdist-armhf-linux%2FDockerfile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fdist-armhf-linux%2FDockerfile?ref=ab8b961677ac5c74762dcea955aa0ff4d7fe4915", "patch": "@@ -32,5 +32,5 @@ ENV CC_arm_unknown_linux_gnueabihf=arm-unknown-linux-gnueabihf-gcc \\\n \n ENV HOSTS=arm-unknown-linux-gnueabihf\n \n-ENV RUST_CONFIGURE_ARGS --enable-extended\n+ENV RUST_CONFIGURE_ARGS --enable-extended --disable-docs\n ENV SCRIPT python2.7 ../x.py dist --host $HOSTS --target $HOSTS"}, {"sha": "99fe7bd7b8f7871fc5aa607f00ec2fb2103bfcb5", "filename": "src/ci/docker/dist-armv7-linux/Dockerfile", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ab8b961677ac5c74762dcea955aa0ff4d7fe4915/src%2Fci%2Fdocker%2Fdist-armv7-linux%2FDockerfile", "raw_url": "https://github.com/rust-lang/rust/raw/ab8b961677ac5c74762dcea955aa0ff4d7fe4915/src%2Fci%2Fdocker%2Fdist-armv7-linux%2FDockerfile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fdist-armv7-linux%2FDockerfile?ref=ab8b961677ac5c74762dcea955aa0ff4d7fe4915", "patch": "@@ -32,5 +32,5 @@ ENV CC_armv7_unknown_linux_gnueabihf=armv7-unknown-linux-gnueabihf-gcc \\\n \n ENV HOSTS=armv7-unknown-linux-gnueabihf\n \n-ENV RUST_CONFIGURE_ARGS --enable-extended\n+ENV RUST_CONFIGURE_ARGS --enable-extended --disable-docs\n ENV SCRIPT python2.7 ../x.py dist --host $HOSTS --target $HOSTS"}, {"sha": "e12bed3abc5ad05dc401cb4d773cdb922bb32aac", "filename": "src/ci/docker/dist-i586-gnu-i586-i686-musl/Dockerfile", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/ab8b961677ac5c74762dcea955aa0ff4d7fe4915/src%2Fci%2Fdocker%2Fdist-i586-gnu-i586-i686-musl%2FDockerfile", "raw_url": "https://github.com/rust-lang/rust/raw/ab8b961677ac5c74762dcea955aa0ff4d7fe4915/src%2Fci%2Fdocker%2Fdist-i586-gnu-i586-i686-musl%2FDockerfile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fdist-i586-gnu-i586-i686-musl%2FDockerfile?ref=ab8b961677ac5c74762dcea955aa0ff4d7fe4915", "patch": "@@ -32,7 +32,8 @@ RUN sh /scripts/sccache.sh\n ENV RUST_CONFIGURE_ARGS \\\n       --musl-root-i586=/musl-i586 \\\n       --musl-root-i686=/musl-i686 \\\n-      --enable-extended\n+      --enable-extended \\\n+      --disable-docs\n \n # Newer binutils broke things on some vms/distros (i.e., linking against\n # unknown relocs disabled by the following flag), so we need to go out of our"}, {"sha": "6f6a663a3309387abf8ec5785f5f1df2f7687aa3", "filename": "src/ci/docker/dist-i686-freebsd/Dockerfile", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ab8b961677ac5c74762dcea955aa0ff4d7fe4915/src%2Fci%2Fdocker%2Fdist-i686-freebsd%2FDockerfile", "raw_url": "https://github.com/rust-lang/rust/raw/ab8b961677ac5c74762dcea955aa0ff4d7fe4915/src%2Fci%2Fdocker%2Fdist-i686-freebsd%2FDockerfile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fdist-i686-freebsd%2FDockerfile?ref=ab8b961677ac5c74762dcea955aa0ff4d7fe4915", "patch": "@@ -29,5 +29,5 @@ ENV \\\n \n ENV HOSTS=i686-unknown-freebsd\n \n-ENV RUST_CONFIGURE_ARGS --enable-extended\n+ENV RUST_CONFIGURE_ARGS --enable-extended --disable-docs\n ENV SCRIPT python2.7 ../x.py dist --host $HOSTS --target $HOSTS"}, {"sha": "466def1f80fbfd9cbdbf6d86d5e4d98630f1bd1e", "filename": "src/ci/docker/dist-mips-linux/Dockerfile", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ab8b961677ac5c74762dcea955aa0ff4d7fe4915/src%2Fci%2Fdocker%2Fdist-mips-linux%2FDockerfile", "raw_url": "https://github.com/rust-lang/rust/raw/ab8b961677ac5c74762dcea955aa0ff4d7fe4915/src%2Fci%2Fdocker%2Fdist-mips-linux%2FDockerfile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fdist-mips-linux%2FDockerfile?ref=ab8b961677ac5c74762dcea955aa0ff4d7fe4915", "patch": "@@ -22,5 +22,5 @@ RUN sh /scripts/sccache.sh\n \n ENV HOSTS=mips-unknown-linux-gnu\n \n-ENV RUST_CONFIGURE_ARGS --enable-extended\n+ENV RUST_CONFIGURE_ARGS --enable-extended --disable-docs\n ENV SCRIPT python2.7 ../x.py dist --host $HOSTS --target $HOSTS"}, {"sha": "2205b733e99f1e5826fa92656fa68a94c509e30e", "filename": "src/ci/docker/dist-mips64-linux/Dockerfile", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ab8b961677ac5c74762dcea955aa0ff4d7fe4915/src%2Fci%2Fdocker%2Fdist-mips64-linux%2FDockerfile", "raw_url": "https://github.com/rust-lang/rust/raw/ab8b961677ac5c74762dcea955aa0ff4d7fe4915/src%2Fci%2Fdocker%2Fdist-mips64-linux%2FDockerfile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fdist-mips64-linux%2FDockerfile?ref=ab8b961677ac5c74762dcea955aa0ff4d7fe4915", "patch": "@@ -21,5 +21,5 @@ RUN sh /scripts/sccache.sh\n \n ENV HOSTS=mips64-unknown-linux-gnuabi64\n \n-ENV RUST_CONFIGURE_ARGS --enable-extended\n+ENV RUST_CONFIGURE_ARGS --enable-extended --disable-docs\n ENV SCRIPT python2.7 ../x.py dist --host $HOSTS --target $HOSTS"}, {"sha": "f1d9dad46ea3f6dd58be2443f5caef48940cd3f6", "filename": "src/ci/docker/dist-mips64el-linux/Dockerfile", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ab8b961677ac5c74762dcea955aa0ff4d7fe4915/src%2Fci%2Fdocker%2Fdist-mips64el-linux%2FDockerfile", "raw_url": "https://github.com/rust-lang/rust/raw/ab8b961677ac5c74762dcea955aa0ff4d7fe4915/src%2Fci%2Fdocker%2Fdist-mips64el-linux%2FDockerfile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fdist-mips64el-linux%2FDockerfile?ref=ab8b961677ac5c74762dcea955aa0ff4d7fe4915", "patch": "@@ -22,5 +22,5 @@ RUN sh /scripts/sccache.sh\n \n ENV HOSTS=mips64el-unknown-linux-gnuabi64\n \n-ENV RUST_CONFIGURE_ARGS --enable-extended\n+ENV RUST_CONFIGURE_ARGS --enable-extended --disable-docs\n ENV SCRIPT python2.7 ../x.py dist --host $HOSTS --target $HOSTS"}, {"sha": "ee73e29c76e35926ee5389ecf998f47a29ce4c1a", "filename": "src/ci/docker/dist-mipsel-linux/Dockerfile", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ab8b961677ac5c74762dcea955aa0ff4d7fe4915/src%2Fci%2Fdocker%2Fdist-mipsel-linux%2FDockerfile", "raw_url": "https://github.com/rust-lang/rust/raw/ab8b961677ac5c74762dcea955aa0ff4d7fe4915/src%2Fci%2Fdocker%2Fdist-mipsel-linux%2FDockerfile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fdist-mipsel-linux%2FDockerfile?ref=ab8b961677ac5c74762dcea955aa0ff4d7fe4915", "patch": "@@ -21,5 +21,5 @@ RUN sh /scripts/sccache.sh\n \n ENV HOSTS=mipsel-unknown-linux-gnu\n \n-ENV RUST_CONFIGURE_ARGS --enable-extended\n+ENV RUST_CONFIGURE_ARGS --enable-extended --disable-docs\n ENV SCRIPT python2.7 ../x.py dist --host $HOSTS --target $HOSTS"}, {"sha": "f03aff060c1034065c5361930ac2fdf917129320", "filename": "src/ci/docker/dist-powerpc-linux/Dockerfile", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ab8b961677ac5c74762dcea955aa0ff4d7fe4915/src%2Fci%2Fdocker%2Fdist-powerpc-linux%2FDockerfile", "raw_url": "https://github.com/rust-lang/rust/raw/ab8b961677ac5c74762dcea955aa0ff4d7fe4915/src%2Fci%2Fdocker%2Fdist-powerpc-linux%2FDockerfile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fdist-powerpc-linux%2FDockerfile?ref=ab8b961677ac5c74762dcea955aa0ff4d7fe4915", "patch": "@@ -34,7 +34,7 @@ ENV \\\n \n ENV HOSTS=powerpc-unknown-linux-gnu\n \n-ENV RUST_CONFIGURE_ARGS --enable-extended\n+ENV RUST_CONFIGURE_ARGS --enable-extended --disable-docs\n ENV SCRIPT python2.7 ../x.py dist --host $HOSTS --target $HOSTS\n \n # FIXME(#36150) this will fail the bootstrap. Probably means something bad is"}, {"sha": "bb30210c0563aa5433672b744fab108100aa4f1f", "filename": "src/ci/docker/dist-powerpc64-linux/Dockerfile", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ab8b961677ac5c74762dcea955aa0ff4d7fe4915/src%2Fci%2Fdocker%2Fdist-powerpc64-linux%2FDockerfile", "raw_url": "https://github.com/rust-lang/rust/raw/ab8b961677ac5c74762dcea955aa0ff4d7fe4915/src%2Fci%2Fdocker%2Fdist-powerpc64-linux%2FDockerfile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fdist-powerpc64-linux%2FDockerfile?ref=ab8b961677ac5c74762dcea955aa0ff4d7fe4915", "patch": "@@ -35,5 +35,5 @@ ENV \\\n \n ENV HOSTS=powerpc64-unknown-linux-gnu\n \n-ENV RUST_CONFIGURE_ARGS --enable-extended\n+ENV RUST_CONFIGURE_ARGS --enable-extended --disable-docs\n ENV SCRIPT python2.7 ../x.py dist --host $HOSTS --target $HOSTS"}, {"sha": "ee9e4550483525ada46d587e492b623b07129d6b", "filename": "src/ci/docker/dist-powerpc64le-linux/Dockerfile", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ab8b961677ac5c74762dcea955aa0ff4d7fe4915/src%2Fci%2Fdocker%2Fdist-powerpc64le-linux%2FDockerfile", "raw_url": "https://github.com/rust-lang/rust/raw/ab8b961677ac5c74762dcea955aa0ff4d7fe4915/src%2Fci%2Fdocker%2Fdist-powerpc64le-linux%2FDockerfile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fdist-powerpc64le-linux%2FDockerfile?ref=ab8b961677ac5c74762dcea955aa0ff4d7fe4915", "patch": "@@ -32,5 +32,5 @@ ENV \\\n \n ENV HOSTS=powerpc64le-unknown-linux-gnu\n \n-ENV RUST_CONFIGURE_ARGS --enable-extended\n+ENV RUST_CONFIGURE_ARGS --enable-extended --disable-docs\n ENV SCRIPT python2.7 ../x.py dist --host $HOSTS --target $HOSTS"}, {"sha": "7ba6fe643c2ae80b9f59bdcdf4197db18fa3c736", "filename": "src/ci/docker/dist-s390x-linux/Dockerfile", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ab8b961677ac5c74762dcea955aa0ff4d7fe4915/src%2Fci%2Fdocker%2Fdist-s390x-linux%2FDockerfile", "raw_url": "https://github.com/rust-lang/rust/raw/ab8b961677ac5c74762dcea955aa0ff4d7fe4915/src%2Fci%2Fdocker%2Fdist-s390x-linux%2FDockerfile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fdist-s390x-linux%2FDockerfile?ref=ab8b961677ac5c74762dcea955aa0ff4d7fe4915", "patch": "@@ -34,5 +34,5 @@ ENV \\\n \n ENV HOSTS=s390x-unknown-linux-gnu\n \n-ENV RUST_CONFIGURE_ARGS --enable-extended\n+ENV RUST_CONFIGURE_ARGS --enable-extended --disable-docs\n ENV SCRIPT python2.7 ../x.py dist --host $HOSTS --target $HOSTS"}, {"sha": "b398e9a3c92ef8dce5e5fced67cc12114a6f484c", "filename": "src/ci/docker/dist-various-1/Dockerfile", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/ab8b961677ac5c74762dcea955aa0ff4d7fe4915/src%2Fci%2Fdocker%2Fdist-various-1%2FDockerfile", "raw_url": "https://github.com/rust-lang/rust/raw/ab8b961677ac5c74762dcea955aa0ff4d7fe4915/src%2Fci%2Fdocker%2Fdist-various-1%2FDockerfile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fdist-various-1%2FDockerfile?ref=ab8b961677ac5c74762dcea955aa0ff4d7fe4915", "patch": "@@ -95,7 +95,8 @@ ENV RUST_CONFIGURE_ARGS \\\n       --musl-root-aarch64=/musl-aarch64 \\\n       --musl-root-mips=/musl-mips \\\n       --musl-root-mipsel=/musl-mipsel \\\n-      --enable-emscripten\n+      --enable-emscripten \\\n+      --disable-docs\n \n ENV SCRIPT python2.7 ../x.py dist --target $TARGETS\n "}, {"sha": "e8d6c12de4474284c529a8852863c81eb9ff317f", "filename": "src/ci/docker/dist-various-2/Dockerfile", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ab8b961677ac5c74762dcea955aa0ff4d7fe4915/src%2Fci%2Fdocker%2Fdist-various-2%2FDockerfile", "raw_url": "https://github.com/rust-lang/rust/raw/ab8b961677ac5c74762dcea955aa0ff4d7fe4915/src%2Fci%2Fdocker%2Fdist-various-2%2FDockerfile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fdist-various-2%2FDockerfile?ref=ab8b961677ac5c74762dcea955aa0ff4d7fe4915", "patch": "@@ -55,5 +55,5 @@ ENV TARGETS=$TARGETS,x86_64-sun-solaris\n ENV TARGETS=$TARGETS,x86_64-unknown-linux-gnux32\n ENV TARGETS=$TARGETS,x86_64-unknown-cloudabi\n \n-ENV RUST_CONFIGURE_ARGS --enable-extended\n+ENV RUST_CONFIGURE_ARGS --enable-extended --disable-docs\n ENV SCRIPT python2.7 ../x.py dist --target $TARGETS"}, {"sha": "698b81a92e935464724259a1e9b659c802351316", "filename": "src/ci/docker/dist-x86_64-freebsd/Dockerfile", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ab8b961677ac5c74762dcea955aa0ff4d7fe4915/src%2Fci%2Fdocker%2Fdist-x86_64-freebsd%2FDockerfile", "raw_url": "https://github.com/rust-lang/rust/raw/ab8b961677ac5c74762dcea955aa0ff4d7fe4915/src%2Fci%2Fdocker%2Fdist-x86_64-freebsd%2FDockerfile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fdist-x86_64-freebsd%2FDockerfile?ref=ab8b961677ac5c74762dcea955aa0ff4d7fe4915", "patch": "@@ -29,5 +29,5 @@ ENV \\\n \n ENV HOSTS=x86_64-unknown-freebsd\n \n-ENV RUST_CONFIGURE_ARGS --enable-extended\n+ENV RUST_CONFIGURE_ARGS --enable-extended --disable-docs\n ENV SCRIPT python2.7 ../x.py dist --host $HOSTS --target $HOSTS"}, {"sha": "06f8a2fbba836de9843927eb40b2392eb704cb0a", "filename": "src/ci/docker/dist-x86_64-musl/Dockerfile", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/ab8b961677ac5c74762dcea955aa0ff4d7fe4915/src%2Fci%2Fdocker%2Fdist-x86_64-musl%2FDockerfile", "raw_url": "https://github.com/rust-lang/rust/raw/ab8b961677ac5c74762dcea955aa0ff4d7fe4915/src%2Fci%2Fdocker%2Fdist-x86_64-musl%2FDockerfile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fdist-x86_64-musl%2FDockerfile?ref=ab8b961677ac5c74762dcea955aa0ff4d7fe4915", "patch": "@@ -31,7 +31,8 @@ RUN sh /scripts/sccache.sh\n \n ENV RUST_CONFIGURE_ARGS \\\n       --musl-root-x86_64=/musl-x86_64 \\\n-      --enable-extended\n+      --enable-extended \\\n+      --disable-docs\n \n # Newer binutils broke things on some vms/distros (i.e., linking against\n # unknown relocs disabled by the following flag), so we need to go out of our"}, {"sha": "a17a7ebc03dd165f92b588d2bf802d3b5d7ec754", "filename": "src/ci/docker/dist-x86_64-netbsd/Dockerfile", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ab8b961677ac5c74762dcea955aa0ff4d7fe4915/src%2Fci%2Fdocker%2Fdist-x86_64-netbsd%2FDockerfile", "raw_url": "https://github.com/rust-lang/rust/raw/ab8b961677ac5c74762dcea955aa0ff4d7fe4915/src%2Fci%2Fdocker%2Fdist-x86_64-netbsd%2FDockerfile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fdist-x86_64-netbsd%2FDockerfile?ref=ab8b961677ac5c74762dcea955aa0ff4d7fe4915", "patch": "@@ -33,5 +33,5 @@ ENV \\\n \n ENV HOSTS=x86_64-unknown-netbsd\n \n-ENV RUST_CONFIGURE_ARGS --enable-extended\n+ENV RUST_CONFIGURE_ARGS --enable-extended --disable-docs\n ENV SCRIPT python2.7 ../x.py dist --host $HOSTS --target $HOSTS"}, {"sha": "cada190032aa064c806545b65c9c96ec05e3b65b", "filename": "src/liballoc/btree/map.rs", "status": "modified", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/ab8b961677ac5c74762dcea955aa0ff4d7fe4915/src%2Fliballoc%2Fbtree%2Fmap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ab8b961677ac5c74762dcea955aa0ff4d7fe4915/src%2Fliballoc%2Fbtree%2Fmap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Fbtree%2Fmap.rs?ref=ab8b961677ac5c74762dcea955aa0ff4d7fe4915", "patch": "@@ -576,6 +576,33 @@ impl<K: Ord, V> BTreeMap<K, V> {\n         }\n     }\n \n+    /// Returns the key-value pair corresponding to the supplied key.\n+    ///\n+    /// The supplied key may be any borrowed form of the map's key type, but the ordering\n+    /// on the borrowed form *must* match the ordering on the key type.\n+    ///\n+    /// # Examples\n+    ///\n+    /// ```\n+    /// #![feature(map_get_key_value)]\n+    /// use std::collections::BTreeMap;\n+    ///\n+    /// let mut map = BTreeMap::new();\n+    /// map.insert(1, \"a\");\n+    /// assert_eq!(map.get_key_value(&1), Some((&1, &\"a\")));\n+    /// assert_eq!(map.get_key_value(&2), None);\n+    /// ```\n+    #[unstable(feature = \"map_get_key_value\", issue = \"49347\")]\n+    pub fn get_key_value<Q: ?Sized>(&self, k: &Q) -> Option<(&K, &V)>\n+        where K: Borrow<Q>,\n+              Q: Ord\n+    {\n+        match search::search_tree(self.root.as_ref(), k) {\n+            Found(handle) => Some(handle.into_kv()),\n+            GoDown(_) => None,\n+        }\n+    }\n+\n     /// Returns `true` if the map contains a value for the specified key.\n     ///\n     /// The key may be any borrowed form of the map's key type, but the ordering"}, {"sha": "4451ab445cc5c9e5315598a76032d7aa50d0f13c", "filename": "src/libcore/fmt/num.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ab8b961677ac5c74762dcea955aa0ff4d7fe4915/src%2Flibcore%2Ffmt%2Fnum.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ab8b961677ac5c74762dcea955aa0ff4d7fe4915/src%2Flibcore%2Ffmt%2Fnum.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Ffmt%2Fnum.rs?ref=ab8b961677ac5c74762dcea955aa0ff4d7fe4915", "patch": "@@ -63,7 +63,7 @@ trait GenericRadix {\n         // characters for a base 2 number.\n         let zero = T::zero();\n         let is_nonnegative = x >= zero;\n-        let mut buf = [0; 128];\n+        let mut buf: [u8; 128] = unsafe { mem::uninitialized() };\n         let mut curr = buf.len();\n         let base = T::from_u8(Self::BASE);\n         if is_nonnegative {"}, {"sha": "31f77f92435d83ff72a9f04582bb6717f1c1bedd", "filename": "src/libcore/iter/iterator.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/ab8b961677ac5c74762dcea955aa0ff4d7fe4915/src%2Flibcore%2Fiter%2Fiterator.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ab8b961677ac5c74762dcea955aa0ff4d7fe4915/src%2Flibcore%2Fiter%2Fiterator.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fiter%2Fiterator.rs?ref=ab8b961677ac5c74762dcea955aa0ff4d7fe4915", "patch": "@@ -974,13 +974,13 @@ pub trait Iterator {\n     ///     // each iteration, we'll multiply the state by the element\n     ///     *state = *state * x;\n     ///\n-    ///     // the value passed on to the next iteration\n-    ///     Some(*state)\n+    ///     // then, we'll yield the negation of the state\n+    ///     Some(-*state)\n     /// });\n     ///\n-    /// assert_eq!(iter.next(), Some(1));\n-    /// assert_eq!(iter.next(), Some(2));\n-    /// assert_eq!(iter.next(), Some(6));\n+    /// assert_eq!(iter.next(), Some(-1));\n+    /// assert_eq!(iter.next(), Some(-2));\n+    /// assert_eq!(iter.next(), Some(-6));\n     /// assert_eq!(iter.next(), None);\n     /// ```\n     #[inline]"}, {"sha": "d934706be67d9337154ae023541880431fae4e38", "filename": "src/libcore/sync/atomic.rs", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/ab8b961677ac5c74762dcea955aa0ff4d7fe4915/src%2Flibcore%2Fsync%2Fatomic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ab8b961677ac5c74762dcea955aa0ff4d7fe4915/src%2Flibcore%2Fsync%2Fatomic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fsync%2Fatomic.rs?ref=ab8b961677ac5c74762dcea955aa0ff4d7fe4915", "patch": "@@ -205,8 +205,11 @@ pub enum Ordering {\n     /// [`Release`]: http://llvm.org/docs/Atomics.html#release\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n     Acquire,\n-    /// When coupled with a load, uses [`Acquire`] ordering, and with a store\n-    /// [`Release`] ordering.\n+    /// Has the effects of both [`Acquire`] and [`Release`] together.\n+    ///\n+    /// This ordering is only applicable for operations that combine both loads and stores.\n+    ///\n+    /// For loads it uses [`Acquire`] ordering. For stores it uses the [`Release`] ordering.\n     ///\n     /// [`Acquire`]: http://llvm.org/docs/Atomics.html#acquire\n     /// [`Release`]: http://llvm.org/docs/Atomics.html#release"}, {"sha": "4d11960c320bff936d1a5eafc1c9f5144ed50163", "filename": "src/librustc_resolve/lib.rs", "status": "modified", "additions": 58, "deletions": 3, "changes": 61, "blob_url": "https://github.com/rust-lang/rust/blob/ab8b961677ac5c74762dcea955aa0ff4d7fe4915/src%2Flibrustc_resolve%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ab8b961677ac5c74762dcea955aa0ff4d7fe4915/src%2Flibrustc_resolve%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Flib.rs?ref=ab8b961677ac5c74762dcea955aa0ff4d7fe4915", "patch": "@@ -162,6 +162,10 @@ enum ResolutionError<'a> {\n     ForwardDeclaredTyParam,\n }\n \n+/// Combines an error with provided span and emits it\n+///\n+/// This takes the error provided, combines it with the span and any additional spans inside the\n+/// error and emits it.\n fn resolve_error<'sess, 'a>(resolver: &'sess Resolver,\n                             span: Span,\n                             resolution_error: ResolutionError<'a>) {\n@@ -486,7 +490,7 @@ struct BindingInfo {\n     binding_mode: BindingMode,\n }\n \n-// Map from the name in a pattern to its binding mode.\n+/// Map from the name in a pattern to its binding mode.\n type BindingMap = FxHashMap<Ident, BindingInfo>;\n \n #[derive(Copy, Clone, PartialEq, Eq, Debug)]\n@@ -681,13 +685,17 @@ impl<'a> PathSource<'a> {\n     }\n }\n \n+/// Different kinds of symbols don't influence each other.\n+///\n+/// Therefore, they have a separate universe (namespace).\n #[derive(Copy, Clone, PartialEq, Eq, PartialOrd, Ord, Hash, Debug)]\n pub enum Namespace {\n     TypeNS,\n     ValueNS,\n     MacroNS,\n }\n \n+/// Just a helper \u2012 separate structure for each namespace.\n #[derive(Clone, Default, Debug)]\n pub struct PerNS<T> {\n     value_ns: T,\n@@ -784,6 +792,7 @@ impl<'tcx> Visitor<'tcx> for UsePlacementFinder {\n     }\n }\n \n+/// This thing walks the whole crate in DFS manner, visiting each item, resolving names as it goes.\n impl<'a, 'tcx> Visitor<'tcx> for Resolver<'a> {\n     fn visit_item(&mut self, item: &'tcx Item) {\n         self.resolve_item(item);\n@@ -910,7 +919,9 @@ impl<'a, 'tcx> Visitor<'tcx> for Resolver<'a> {\n     fn visit_generics(&mut self, generics: &'tcx Generics) {\n         // For type parameter defaults, we have to ban access\n         // to following type parameters, as the Substs can only\n-        // provide previous type parameters as they're built.\n+        // provide previous type parameters as they're built. We\n+        // put all the parameters on the ban list and then remove\n+        // them one by one as they are processed and become available.\n         let mut default_ban_rib = Rib::new(ForwardTyParamBanRibKind);\n         default_ban_rib.bindings.extend(generics.params.iter()\n             .filter_map(|p| if let GenericParam::Type(ref tp) = *p { Some(tp) } else { None })\n@@ -986,6 +997,17 @@ enum RibKind<'a> {\n }\n \n /// One local scope.\n+///\n+/// A rib represents a scope names can live in. Note that these appear in many places, not just\n+/// around braces. At any place where the list of accessible names (of the given namespace)\n+/// changes or a new restrictions on the name accessibility are introduced, a new rib is put onto a\n+/// stack. This may be, for example, a `let` statement (because it introduces variables), a macro,\n+/// etc.\n+///\n+/// Different [rib kinds](enum.RibKind) are transparent for different names.\n+///\n+/// The resolution keeps a separate stack of ribs as it traverses the AST for each namespace. When\n+/// resolving, the name is looked up from inside out.\n #[derive(Debug)]\n struct Rib<'a> {\n     bindings: FxHashMap<Ident, Def>,\n@@ -1001,6 +1023,11 @@ impl<'a> Rib<'a> {\n     }\n }\n \n+/// An intermediate resolution result.\n+///\n+/// This refers to the thing referred by a name. The difference between `Def` and `Item` is that\n+/// items are visible in their whole block, while defs only from the place they are defined\n+/// forward.\n enum LexicalScopeBinding<'a> {\n     Item(&'a NameBinding<'a>),\n     Def(Def),\n@@ -1031,7 +1058,26 @@ enum PathResult<'a> {\n }\n \n enum ModuleKind {\n+    /// An anonymous module, eg. just a block.\n+    ///\n+    /// ```\n+    /// fn main() {\n+    ///     fn f() {} // (1)\n+    ///     { // This is an anonymous module\n+    ///         f(); // This resolves to (2) as we are inside the block.\n+    ///         fn f() {} // (2)\n+    ///     }\n+    ///     f(); // Resolves to (1)\n+    /// }\n+    /// ```\n     Block(NodeId),\n+    /// Any module with a name.\n+    ///\n+    /// This could be:\n+    ///\n+    /// * A normal module \u2012 either `mod from_file;` or `mod from_block { }`.\n+    /// * A trait or an enum (it implicitly contains associated types, methods and variant\n+    ///   constructors).\n     Def(Def, Name),\n }\n \n@@ -1316,6 +1362,9 @@ impl<'a> NameBinding<'a> {\n }\n \n /// Interns the names of the primitive types.\n+///\n+/// All other types are defined somewhere and possibly imported, but the primitive ones need\n+/// special handling, since they have no place of origin.\n struct PrimitiveTypeTable {\n     primitive_types: FxHashMap<Name, PrimTy>,\n }\n@@ -1350,6 +1399,8 @@ impl PrimitiveTypeTable {\n }\n \n /// The main resolver class.\n+///\n+/// This is the visitor that walks the whole crate.\n pub struct Resolver<'a> {\n     session: &'a Session,\n     cstore: &'a CrateStore,\n@@ -1481,6 +1532,7 @@ pub struct Resolver<'a> {\n     injected_crate: Option<Module<'a>>,\n }\n \n+/// Nothing really interesting here, it just provides memory for the rest of the crate.\n pub struct ResolverArenas<'a> {\n     modules: arena::TypedArena<ModuleData<'a>>,\n     local_modules: RefCell<Vec<Module<'a>>>,\n@@ -1526,10 +1578,12 @@ impl<'a, 'b: 'a> ty::DefIdTree for &'a Resolver<'b> {\n         match id.krate {\n             LOCAL_CRATE => self.definitions.def_key(id.index).parent,\n             _ => self.cstore.def_key(id).parent,\n-        }.map(|index| DefId { index: index, ..id })\n+        }.map(|index| DefId { index, ..id })\n     }\n }\n \n+/// This interface is used through the AST\u2192HIR step, to embed full paths into the HIR. After that\n+/// the resolver is no longer needed as all the relevant information is inline.\n impl<'a> hir::lowering::Resolver for Resolver<'a> {\n     fn resolve_hir_path(&mut self, path: &mut hir::Path, is_value: bool) {\n         self.resolve_hir_path_cb(path, is_value,\n@@ -1752,6 +1806,7 @@ impl<'a> Resolver<'a> {\n         }\n     }\n \n+    /// Runs the function on each namespace.\n     fn per_ns<T, F: FnMut(&mut Self, Namespace) -> T>(&mut self, mut f: F) -> PerNS<T> {\n         PerNS {\n             type_ns: f(self, TypeNS),"}, {"sha": "f0bb781411fb4103026cf5d3d2954ef9761d8207", "filename": "src/libstd/collections/hash/map.rs", "status": "modified", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/ab8b961677ac5c74762dcea955aa0ff4d7fe4915/src%2Flibstd%2Fcollections%2Fhash%2Fmap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ab8b961677ac5c74762dcea955aa0ff4d7fe4915/src%2Flibstd%2Fcollections%2Fhash%2Fmap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fcollections%2Fhash%2Fmap.rs?ref=ab8b961677ac5c74762dcea955aa0ff4d7fe4915", "patch": "@@ -1184,6 +1184,34 @@ impl<K, V, S> HashMap<K, V, S>\n         self.search(k).map(|bucket| bucket.into_refs().1)\n     }\n \n+    /// Returns the key-value pair corresponding to the supplied key.\n+    ///\n+    /// The supplied key may be any borrowed form of the map's key type, but\n+    /// [`Hash`] and [`Eq`] on the borrowed form *must* match those for\n+    /// the key type.\n+    ///\n+    /// [`Eq`]: ../../std/cmp/trait.Eq.html\n+    /// [`Hash`]: ../../std/hash/trait.Hash.html\n+    ///\n+    /// # Examples\n+    ///\n+    /// ```\n+    /// #![feature(map_get_key_value)]\n+    /// use std::collections::HashMap;\n+    ///\n+    /// let mut map = HashMap::new();\n+    /// map.insert(1, \"a\");\n+    /// assert_eq!(map.get_key_value(&1), Some((&1, &\"a\")));\n+    /// assert_eq!(map.get_key_value(&2), None);\n+    /// ```\n+    #[unstable(feature = \"map_get_key_value\", issue = \"49347\")]\n+    pub fn get_key_value<Q: ?Sized>(&self, k: &Q) -> Option<(&K, &V)>\n+        where K: Borrow<Q>,\n+              Q: Hash + Eq\n+    {\n+        self.search(k).map(|bucket| bucket.into_refs())\n+    }\n+\n     /// Returns true if the map contains a value for the specified key.\n     ///\n     /// The key may be any borrowed form of the map's key type, but"}, {"sha": "bc2c9f522d3b0c35c69b3d33028a9f24923efaf4", "filename": "src/libstd/net/addr.rs", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/ab8b961677ac5c74762dcea955aa0ff4d7fe4915/src%2Flibstd%2Fnet%2Faddr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ab8b961677ac5c74762dcea955aa0ff4d7fe4915/src%2Flibstd%2Fnet%2Faddr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fnet%2Faddr.rs?ref=ab8b961677ac5c74762dcea955aa0ff4d7fe4915", "patch": "@@ -28,6 +28,9 @@ use slice;\n /// as possibly some version-dependent additional information. See [`SocketAddrV4`]'s and\n /// [`SocketAddrV6`]'s respective documentation for more details.\n ///\n+/// The size of a `SocketAddr` instance may vary depending on the target operating\n+/// system.\n+///\n /// [IP address]: ../../std/net/enum.IpAddr.html\n /// [`SocketAddrV4`]: ../../std/net/struct.SocketAddrV4.html\n /// [`SocketAddrV6`]: ../../std/net/struct.SocketAddrV6.html\n@@ -61,6 +64,9 @@ pub enum SocketAddr {\n ///\n /// See [`SocketAddr`] for a type encompassing both IPv4 and IPv6 socket addresses.\n ///\n+/// The size of a `SocketAddrV4` struct may vary depending on the target operating\n+/// system.\n+///\n /// [IETF RFC 793]: https://tools.ietf.org/html/rfc793\n /// [IPv4 address]: ../../std/net/struct.Ipv4Addr.html\n /// [`SocketAddr`]: ../../std/net/enum.SocketAddr.html\n@@ -88,6 +94,9 @@ pub struct SocketAddrV4 { inner: c::sockaddr_in }\n ///\n /// See [`SocketAddr`] for a type encompassing both IPv4 and IPv6 socket addresses.\n ///\n+/// The size of a `SocketAddrV6` struct may vary depending on the target operating\n+/// system.\n+///\n /// [IETF RFC 2553, Section 3.3]: https://tools.ietf.org/html/rfc2553#section-3.3\n /// [IPv6 address]: ../../std/net/struct.Ipv6Addr.html\n /// [`SocketAddr`]: ../../std/net/enum.SocketAddr.html"}, {"sha": "031fae6d59bf8be0407bf999e731fd1e48e20494", "filename": "src/libstd/net/ip.rs", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/ab8b961677ac5c74762dcea955aa0ff4d7fe4915/src%2Flibstd%2Fnet%2Fip.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ab8b961677ac5c74762dcea955aa0ff4d7fe4915/src%2Flibstd%2Fnet%2Fip.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fnet%2Fip.rs?ref=ab8b961677ac5c74762dcea955aa0ff4d7fe4915", "patch": "@@ -26,6 +26,9 @@ use sys_common::{AsInner, FromInner};\n /// This enum can contain either an [`Ipv4Addr`] or an [`Ipv6Addr`], see their\n /// respective documentation for more details.\n ///\n+/// The size of an `IpAddr` instance may vary depending on the target operating\n+/// system.\n+///\n /// [`Ipv4Addr`]: ../../std/net/struct.Ipv4Addr.html\n /// [`Ipv6Addr`]: ../../std/net/struct.Ipv6Addr.html\n ///\n@@ -61,6 +64,9 @@ pub enum IpAddr {\n ///\n /// See [`IpAddr`] for a type encompassing both IPv4 and IPv6 addresses.\n ///\n+/// The size of an `Ipv4Addr` struct may vary depending on the target operating\n+/// system.\n+///\n /// [IETF RFC 791]: https://tools.ietf.org/html/rfc791\n /// [`IpAddr`]: ../../std/net/enum.IpAddr.html\n ///\n@@ -93,6 +99,9 @@ pub struct Ipv4Addr {\n ///\n /// See [`IpAddr`] for a type encompassing both IPv4 and IPv6 addresses.\n ///\n+/// The size of an `Ipv6Addr` struct may vary depending on the target operating\n+/// system.\n+///\n /// [IETF RFC 4291]: https://tools.ietf.org/html/rfc4291\n /// [`IpAddr`]: ../../std/net/enum.IpAddr.html\n ///"}, {"sha": "7256ac43e27e48272f97a59d9675176bfd58ecce", "filename": "src/libstd/time.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/ab8b961677ac5c74762dcea955aa0ff4d7fe4915/src%2Flibstd%2Ftime.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ab8b961677ac5c74762dcea955aa0ff4d7fe4915/src%2Flibstd%2Ftime.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Ftime.rs?ref=ab8b961677ac5c74762dcea955aa0ff4d7fe4915", "patch": "@@ -49,6 +49,9 @@ pub use core::time::Duration;\n /// allows measuring the duration between two instants (or comparing two\n /// instants).\n ///\n+/// The size of an `Instant` struct may vary depending on the target operating\n+/// system.\n+///\n /// Example:\n ///\n /// ```no_run\n@@ -88,6 +91,9 @@ pub struct Instant(time::Instant);\n /// fixed point in time, a `SystemTime` can be converted to a human-readable time,\n /// or perhaps some other string representation.\n ///\n+/// The size of a `SystemTime` struct may vary depending on the target operating\n+/// system.\n+///\n /// [`Instant`]: ../../std/time/struct.Instant.html\n /// [`Result`]: ../../std/result/enum.Result.html\n /// [`Duration`]: ../../std/time/struct.Duration.html"}]}