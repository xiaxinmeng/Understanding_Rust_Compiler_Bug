{"sha": "36603e0478bace705b9a3b59aebb8a6918a1700b", "node_id": "C_kwDOAAsO6NoAKDM2NjAzZTA0NzhiYWNlNzA1YjlhM2I1OWFlYmI4YTY5MThhMTcwMGI", "commit": {"author": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2022-02-26T13:51:13Z"}, "committer": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2022-02-26T13:52:42Z"}, "message": "Rename test highlighting output files", "tree": {"sha": "a27335cbfe8399e0882924a013e88c3d93acc658", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a27335cbfe8399e0882924a013e88c3d93acc658"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/36603e0478bace705b9a3b59aebb8a6918a1700b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/36603e0478bace705b9a3b59aebb8a6918a1700b", "html_url": "https://github.com/rust-lang/rust/commit/36603e0478bace705b9a3b59aebb8a6918a1700b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/36603e0478bace705b9a3b59aebb8a6918a1700b/comments", "author": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c99fb4b1acefe575f6943390451d498cf2855e38", "url": "https://api.github.com/repos/rust-lang/rust/commits/c99fb4b1acefe575f6943390451d498cf2855e38", "html_url": "https://github.com/rust-lang/rust/commit/c99fb4b1acefe575f6943390451d498cf2855e38"}], "stats": {"total": 261, "additions": 176, "deletions": 85}, "files": [{"sha": "9fe2b50cde79f93c68c1efde93d525423fdb7d1f", "filename": "crates/ide/src/syntax_highlighting/test_data/highlight_attributes.html", "status": "added", "additions": 57, "deletions": 0, "changes": 57, "blob_url": "https://github.com/rust-lang/rust/blob/36603e0478bace705b9a3b59aebb8a6918a1700b/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftest_data%2Fhighlight_attributes.html", "raw_url": "https://github.com/rust-lang/rust/raw/36603e0478bace705b9a3b59aebb8a6918a1700b/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftest_data%2Fhighlight_attributes.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftest_data%2Fhighlight_attributes.html?ref=36603e0478bace705b9a3b59aebb8a6918a1700b", "patch": "@@ -0,0 +1,57 @@\n+\n+<style>\n+body                { margin: 0; }\n+pre                 { color: #DCDCCC; background: #3F3F3F; font-size: 22px; padding: 0.4em; }\n+\n+.lifetime           { color: #DFAF8F; font-style: italic; }\n+.label              { color: #DFAF8F; font-style: italic; }\n+.comment            { color: #7F9F7F; }\n+.documentation      { color: #629755; }\n+.intra_doc_link     { font-style: italic; }\n+.injected           { opacity: 0.65 ; }\n+.struct, .enum      { color: #7CB8BB; }\n+.enum_variant       { color: #BDE0F3; }\n+.string_literal     { color: #CC9393; }\n+.field              { color: #94BFF3; }\n+.function           { color: #93E0E3; }\n+.function.unsafe    { color: #BC8383; }\n+.trait.unsafe       { color: #BC8383; }\n+.operator.unsafe    { color: #BC8383; }\n+.mutable.unsafe     { color: #BC8383; text-decoration: underline; }\n+.keyword.unsafe     { color: #BC8383; font-weight: bold; }\n+.parameter          { color: #94BFF3; }\n+.text               { color: #DCDCCC; }\n+.type               { color: #7CB8BB; }\n+.builtin_type       { color: #8CD0D3; }\n+.type_param         { color: #DFAF8F; }\n+.attribute          { color: #94BFF3; }\n+.numeric_literal    { color: #BFEBBF; }\n+.bool_literal       { color: #BFE6EB; }\n+.macro              { color: #94BFF3; }\n+.derive             { color: #94BFF3; font-style: italic; }\n+.module             { color: #AFD8AF; }\n+.value_param        { color: #DCDCCC; }\n+.variable           { color: #DCDCCC; }\n+.format_specifier   { color: #CC696B; }\n+.mutable            { text-decoration: underline; }\n+.escape_sequence    { color: #94BFF3; }\n+.keyword            { color: #F0DFAF; font-weight: bold; }\n+.control            { font-style: italic; }\n+.reference          { font-style: italic; font-weight: bold; }\n+\n+.unresolved_reference { color: #FC5555; text-decoration: wavy underline; }\n+</style>\n+<pre><code><span class=\"attribute_bracket attribute\">#</span><span class=\"attribute_bracket attribute\">[</span><span class=\"builtin_attr attribute library\">allow</span><span class=\"parenthesis attribute\">(</span><span class=\"none attribute\">dead_code</span><span class=\"parenthesis attribute\">)</span><span class=\"attribute_bracket attribute\">]</span>\n+<span class=\"attribute_bracket attribute\">#</span><span class=\"attribute_bracket attribute\">[</span><span class=\"tool_module attribute library\">rustfmt</span><span class=\"operator attribute\">::</span><span class=\"tool_module attribute library\">skip</span><span class=\"attribute_bracket attribute\">]</span>\n+<span class=\"attribute_bracket attribute\">#</span><span class=\"attribute_bracket attribute\">[</span><span class=\"module attribute crate_root library\">proc_macros</span><span class=\"operator attribute\">::</span><span class=\"attribute attribute library\">identity</span><span class=\"attribute_bracket attribute\">]</span>\n+<span class=\"attribute_bracket attribute\">#</span><span class=\"attribute_bracket attribute\">[</span><span class=\"attribute attribute default_library library\">derive</span><span class=\"parenthesis attribute\">(</span><span class=\"derive attribute default_library library\">Copy</span><span class=\"parenthesis attribute\">)</span><span class=\"attribute_bracket attribute\">]</span>\n+<span class=\"comment documentation\">/// This is a doc comment</span>\n+<span class=\"comment\">// This is a normal comment</span>\n+<span class=\"comment documentation\">/// This is a doc comment</span>\n+<span class=\"attribute_bracket attribute\">#</span><span class=\"attribute_bracket attribute\">[</span><span class=\"attribute attribute default_library library\">derive</span><span class=\"parenthesis attribute\">(</span><span class=\"derive attribute default_library library\">Copy</span><span class=\"parenthesis attribute\">)</span><span class=\"attribute_bracket attribute\">]</span>\n+<span class=\"comment\">// This is another normal comment</span>\n+<span class=\"comment documentation\">/// This is another doc comment</span>\n+<span class=\"comment\">// This is another normal comment</span>\n+<span class=\"attribute_bracket attribute\">#</span><span class=\"attribute_bracket attribute\">[</span><span class=\"attribute attribute default_library library\">derive</span><span class=\"parenthesis attribute\">(</span><span class=\"derive attribute default_library library\">Copy</span><span class=\"parenthesis attribute\">)</span><span class=\"attribute_bracket attribute\">]</span>\n+<span class=\"comment\">// The reason for these being here is to test AttrIds</span>\n+<span class=\"keyword\">struct</span> <span class=\"struct declaration\">Foo</span><span class=\"semicolon\">;</span></code></pre>\n\\ No newline at end of file"}, {"sha": "22bdfffa3ef439f01f6af200dbcafb02112ed233", "filename": "crates/ide/src/syntax_highlighting/test_data/highlight_general.html", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/36603e0478bace705b9a3b59aebb8a6918a1700b/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftest_data%2Fhighlight_general.html", "raw_url": "https://github.com/rust-lang/rust/raw/36603e0478bace705b9a3b59aebb8a6918a1700b/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftest_data%2Fhighlight_general.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftest_data%2Fhighlight_general.html?ref=36603e0478bace705b9a3b59aebb8a6918a1700b", "previous_filename": "crates/ide/src/syntax_highlighting/test_data/highlighting.html"}, {"sha": "023e791f8bb842148335e0910f59cd4be39572d9", "filename": "crates/ide/src/syntax_highlighting/test_data/highlight_injection.html", "status": "modified", "additions": 12, "deletions": 5, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/36603e0478bace705b9a3b59aebb8a6918a1700b/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftest_data%2Fhighlight_injection.html", "raw_url": "https://github.com/rust-lang/rust/raw/36603e0478bace705b9a3b59aebb8a6918a1700b/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftest_data%2Fhighlight_injection.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftest_data%2Fhighlight_injection.html?ref=36603e0478bace705b9a3b59aebb8a6918a1700b", "patch": "@@ -45,10 +45,17 @@\n \n <span class=\"keyword\">fn</span> <span class=\"function declaration\">main</span><span class=\"parenthesis\">(</span><span class=\"parenthesis\">)</span> <span class=\"brace\">{</span>\n     <span class=\"function\">fixture</span><span class=\"parenthesis\">(</span><span class=\"string_literal\">r#\"</span>\n-        <span class=\"keyword\">trait</span> <span class=\"trait declaration\">Foo</span> <span class=\"brace\">{</span>\n-            <span class=\"keyword\">fn</span> <span class=\"function associated declaration static trait\">foo</span><span class=\"parenthesis\">(</span><span class=\"parenthesis\">)</span> <span class=\"brace\">{</span>\n-                <span class=\"unresolved_reference\">println</span><span class=\"macro_bang\">!</span><span class=\"parenthesis\">(</span><span class=\"string_literal\">\"2 + 2 = {}\"</span><span class=\"comma\">,</span> <span class=\"numeric_literal\">4</span><span class=\"parenthesis\">)</span><span class=\"semicolon\">;</span>\n-            <span class=\"brace\">}</span>\n-        <span class=\"brace\">}</span><span class=\"string_literal\">\"#</span>\n+<span class=\"keyword\">trait</span> <span class=\"trait declaration\">Foo</span> <span class=\"brace\">{</span>\n+    <span class=\"keyword\">fn</span> <span class=\"function associated declaration static trait\">foo</span><span class=\"parenthesis\">(</span><span class=\"parenthesis\">)</span> <span class=\"brace\">{</span>\n+        <span class=\"unresolved_reference\">println</span><span class=\"macro_bang\">!</span><span class=\"parenthesis\">(</span><span class=\"string_literal\">\"2 + 2 = {}\"</span><span class=\"comma\">,</span> <span class=\"numeric_literal\">4</span><span class=\"parenthesis\">)</span><span class=\"semicolon\">;</span>\n+    <span class=\"brace\">}</span>\n+<span class=\"brace\">}</span><span class=\"string_literal\">\"#</span>\n+    <span class=\"parenthesis\">)</span><span class=\"semicolon\">;</span>\n+    <span class=\"function\">fixture</span><span class=\"parenthesis\">(</span><span class=\"string_literal\">r\"</span>\n+<span class=\"keyword\">fn</span> <span class=\"function declaration\">foo</span><span class=\"parenthesis\">(</span><span class=\"parenthesis\">)</span> <span class=\"brace\">{</span>\n+    <span class=\"function\">foo</span><span class=\"parenthesis\">(</span><span class=\"keyword\">$0</span><span class=\"brace\">{</span>\n+        <span class=\"numeric_literal\">92</span>\n+    <span class=\"brace\">}</span><span class=\"keyword\">$0</span><span class=\"parenthesis\">)</span>\n+<span class=\"brace\">}</span><span class=\"string_literal\">\"</span>\n     <span class=\"parenthesis\">)</span><span class=\"semicolon\">;</span>\n <span class=\"brace\">}</span></code></pre>\n\\ No newline at end of file"}, {"sha": "c3f71d443f6713d4e68cf26ef7f2e8daa8067aa3", "filename": "crates/ide/src/syntax_highlighting/test_data/highlight_macros.html", "status": "added", "additions": 88, "deletions": 0, "changes": 88, "blob_url": "https://github.com/rust-lang/rust/blob/36603e0478bace705b9a3b59aebb8a6918a1700b/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftest_data%2Fhighlight_macros.html", "raw_url": "https://github.com/rust-lang/rust/raw/36603e0478bace705b9a3b59aebb8a6918a1700b/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftest_data%2Fhighlight_macros.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftest_data%2Fhighlight_macros.html?ref=36603e0478bace705b9a3b59aebb8a6918a1700b", "patch": "@@ -0,0 +1,88 @@\n+\n+<style>\n+body                { margin: 0; }\n+pre                 { color: #DCDCCC; background: #3F3F3F; font-size: 22px; padding: 0.4em; }\n+\n+.lifetime           { color: #DFAF8F; font-style: italic; }\n+.label              { color: #DFAF8F; font-style: italic; }\n+.comment            { color: #7F9F7F; }\n+.documentation      { color: #629755; }\n+.intra_doc_link     { font-style: italic; }\n+.injected           { opacity: 0.65 ; }\n+.struct, .enum      { color: #7CB8BB; }\n+.enum_variant       { color: #BDE0F3; }\n+.string_literal     { color: #CC9393; }\n+.field              { color: #94BFF3; }\n+.function           { color: #93E0E3; }\n+.function.unsafe    { color: #BC8383; }\n+.trait.unsafe       { color: #BC8383; }\n+.operator.unsafe    { color: #BC8383; }\n+.mutable.unsafe     { color: #BC8383; text-decoration: underline; }\n+.keyword.unsafe     { color: #BC8383; font-weight: bold; }\n+.parameter          { color: #94BFF3; }\n+.text               { color: #DCDCCC; }\n+.type               { color: #7CB8BB; }\n+.builtin_type       { color: #8CD0D3; }\n+.type_param         { color: #DFAF8F; }\n+.attribute          { color: #94BFF3; }\n+.numeric_literal    { color: #BFEBBF; }\n+.bool_literal       { color: #BFE6EB; }\n+.macro              { color: #94BFF3; }\n+.derive             { color: #94BFF3; font-style: italic; }\n+.module             { color: #AFD8AF; }\n+.value_param        { color: #DCDCCC; }\n+.variable           { color: #DCDCCC; }\n+.format_specifier   { color: #CC696B; }\n+.mutable            { text-decoration: underline; }\n+.escape_sequence    { color: #94BFF3; }\n+.keyword            { color: #F0DFAF; font-weight: bold; }\n+.control            { font-style: italic; }\n+.reference          { font-style: italic; font-weight: bold; }\n+\n+.unresolved_reference { color: #FC5555; text-decoration: wavy underline; }\n+</style>\n+<pre><code><span class=\"module crate_root library\">proc_macros</span><span class=\"operator\">::</span><span class=\"macro library\">mirror</span><span class=\"macro_bang\">!</span> <span class=\"brace\">{</span>\n+    <span class=\"brace\">{</span>\n+        <span class=\"comma\">,</span><span class=\"builtin_type\">i32</span> <span class=\"colon\">:</span><span class=\"field declaration public\">x</span> <span class=\"keyword\">pub</span>\n+        <span class=\"comma\">,</span><span class=\"builtin_type\">i32</span> <span class=\"colon\">:</span><span class=\"field declaration public\">y</span> <span class=\"keyword\">pub</span>\n+    <span class=\"brace\">}</span> <span class=\"struct declaration\">Foo</span> <span class=\"keyword\">struct</span>\n+<span class=\"brace\">}</span>\n+<span class=\"keyword\">macro_rules</span><span class=\"punctuation\">!</span> <span class=\"macro declaration\">def_fn</span> <span class=\"brace\">{</span>\n+    <span class=\"parenthesis\">(</span><span class=\"punctuation\">$</span><span class=\"parenthesis\">(</span><span class=\"punctuation\">$</span>tt<span class=\"colon\">:</span>tt<span class=\"parenthesis\">)</span><span class=\"punctuation\">*</span><span class=\"parenthesis\">)</span> <span class=\"operator\">=</span><span class=\"angle\">&gt;</span> <span class=\"brace\">{</span><span class=\"punctuation\">$</span><span class=\"parenthesis\">(</span><span class=\"punctuation\">$</span>tt<span class=\"parenthesis\">)</span><span class=\"punctuation\">*</span><span class=\"brace\">}</span>\n+<span class=\"brace\">}</span>\n+\n+<span class=\"macro\">def_fn</span><span class=\"macro_bang\">!</span> <span class=\"brace\">{</span>\n+    <span class=\"keyword\">fn</span> <span class=\"function declaration\">bar</span><span class=\"parenthesis\">(</span><span class=\"parenthesis\">)</span> <span class=\"operator\">-</span><span class=\"operator\">&gt;</span> <span class=\"builtin_type\">u32</span> <span class=\"brace\">{</span>\n+        <span class=\"numeric_literal\">100</span>\n+    <span class=\"brace\">}</span>\n+<span class=\"brace\">}</span>\n+\n+<span class=\"keyword\">macro_rules</span><span class=\"punctuation\">!</span> <span class=\"macro declaration\">dont_color_me_braces</span> <span class=\"brace\">{</span>\n+    <span class=\"parenthesis\">(</span><span class=\"parenthesis\">)</span> <span class=\"operator\">=</span><span class=\"angle\">&gt;</span> <span class=\"brace\">{</span><span class=\"numeric_literal\">0</span><span class=\"brace\">}</span>\n+<span class=\"brace\">}</span>\n+\n+<span class=\"keyword\">macro_rules</span><span class=\"punctuation\">!</span> <span class=\"macro declaration\">noop</span> <span class=\"brace\">{</span>\n+    <span class=\"parenthesis\">(</span><span class=\"punctuation\">$</span>expr<span class=\"colon\">:</span>expr<span class=\"parenthesis\">)</span> <span class=\"operator\">=</span><span class=\"angle\">&gt;</span> <span class=\"brace\">{</span>\n+        <span class=\"punctuation\">$</span>expr\n+    <span class=\"brace\">}</span>\n+<span class=\"brace\">}</span>\n+\n+<span class=\"keyword\">macro_rules</span><span class=\"punctuation\">!</span> <span class=\"macro declaration\">keyword_frag</span> <span class=\"brace\">{</span>\n+    <span class=\"parenthesis\">(</span><span class=\"punctuation\">$</span>type<span class=\"colon\">:</span>ty<span class=\"parenthesis\">)</span> <span class=\"operator\">=</span><span class=\"angle\">&gt;</span> <span class=\"parenthesis\">(</span><span class=\"punctuation\">$</span>type<span class=\"parenthesis\">)</span>\n+<span class=\"brace\">}</span>\n+\n+<span class=\"keyword\">macro</span> <span class=\"macro declaration\">with_args</span><span class=\"parenthesis\">(</span><span class=\"punctuation\">$</span>i<span class=\"colon\">:</span>ident<span class=\"parenthesis\">)</span> <span class=\"brace\">{</span>\n+    <span class=\"punctuation\">$</span>i\n+<span class=\"brace\">}</span>\n+\n+<span class=\"keyword\">macro</span> <span class=\"macro declaration\">without_args</span> <span class=\"brace\">{</span>\n+    <span class=\"parenthesis\">(</span><span class=\"punctuation\">$</span>i<span class=\"colon\">:</span>ident<span class=\"parenthesis\">)</span> <span class=\"operator\">=</span><span class=\"angle\">&gt;</span> <span class=\"brace\">{</span>\n+        <span class=\"punctuation\">$</span>i\n+    <span class=\"brace\">}</span>\n+<span class=\"brace\">}</span>\n+\n+<span class=\"keyword\">fn</span> <span class=\"function declaration\">main</span><span class=\"parenthesis\">(</span><span class=\"parenthesis\">)</span> <span class=\"brace\">{</span>\n+    <span class=\"unresolved_reference\">println</span><span class=\"macro_bang\">!</span><span class=\"parenthesis\">(</span><span class=\"string_literal\">\"Hello, {}!\"</span><span class=\"comma\">,</span> <span class=\"numeric_literal\">92</span><span class=\"parenthesis\">)</span><span class=\"semicolon\">;</span>\n+    <span class=\"macro\">dont_color_me_braces</span><span class=\"macro_bang\">!</span><span class=\"parenthesis\">(</span><span class=\"parenthesis\">)</span><span class=\"semicolon\">;</span>\n+    <span class=\"macro\">noop</span><span class=\"macro_bang\">!</span><span class=\"parenthesis\">(</span><span class=\"macro\">noop</span><span class=\"macro_bang\">!</span><span class=\"parenthesis\">(</span><span class=\"numeric_literal\">1</span><span class=\"parenthesis\">)</span><span class=\"parenthesis\">)</span><span class=\"semicolon\">;</span>\n+<span class=\"brace\">}</span></code></pre>\n\\ No newline at end of file"}, {"sha": "e0287f11858beeecaced66bdf87fa481e8062be1", "filename": "crates/ide/src/syntax_highlighting/test_data/highlight_rainbow.html", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/36603e0478bace705b9a3b59aebb8a6918a1700b/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftest_data%2Fhighlight_rainbow.html", "raw_url": "https://github.com/rust-lang/rust/raw/36603e0478bace705b9a3b59aebb8a6918a1700b/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftest_data%2Fhighlight_rainbow.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftest_data%2Fhighlight_rainbow.html?ref=36603e0478bace705b9a3b59aebb8a6918a1700b", "previous_filename": "crates/ide/src/syntax_highlighting/test_data/rainbow_highlighting.html"}, {"sha": "ce4e22379e9c45418cfbcf93bc5dbec42a0026c6", "filename": "crates/ide/src/syntax_highlighting/test_data/injection.html", "status": "removed", "additions": 0, "deletions": 52, "changes": 52, "blob_url": "https://github.com/rust-lang/rust/blob/c99fb4b1acefe575f6943390451d498cf2855e38/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftest_data%2Finjection.html", "raw_url": "https://github.com/rust-lang/rust/raw/c99fb4b1acefe575f6943390451d498cf2855e38/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftest_data%2Finjection.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftest_data%2Finjection.html?ref=c99fb4b1acefe575f6943390451d498cf2855e38", "patch": "@@ -1,52 +0,0 @@\n-\n-<style>\n-body                { margin: 0; }\n-pre                 { color: #DCDCCC; background: #3F3F3F; font-size: 22px; padding: 0.4em; }\n-\n-.lifetime           { color: #DFAF8F; font-style: italic; }\n-.label              { color: #DFAF8F; font-style: italic; }\n-.comment            { color: #7F9F7F; }\n-.documentation      { color: #629755; }\n-.intra_doc_link     { font-style: italic; }\n-.injected           { opacity: 0.65 ; }\n-.struct, .enum      { color: #7CB8BB; }\n-.enum_variant       { color: #BDE0F3; }\n-.string_literal     { color: #CC9393; }\n-.field              { color: #94BFF3; }\n-.function           { color: #93E0E3; }\n-.function.unsafe    { color: #BC8383; }\n-.trait.unsafe       { color: #BC8383; }\n-.operator.unsafe    { color: #BC8383; }\n-.mutable.unsafe     { color: #BC8383; text-decoration: underline; }\n-.keyword.unsafe     { color: #BC8383; font-weight: bold; }\n-.parameter          { color: #94BFF3; }\n-.text               { color: #DCDCCC; }\n-.type               { color: #7CB8BB; }\n-.builtin_type       { color: #8CD0D3; }\n-.type_param         { color: #DFAF8F; }\n-.attribute          { color: #94BFF3; }\n-.numeric_literal    { color: #BFEBBF; }\n-.bool_literal       { color: #BFE6EB; }\n-.macro              { color: #94BFF3; }\n-.derive             { color: #94BFF3; font-style: italic; }\n-.module             { color: #AFD8AF; }\n-.value_param        { color: #DCDCCC; }\n-.variable           { color: #DCDCCC; }\n-.format_specifier   { color: #CC696B; }\n-.mutable            { text-decoration: underline; }\n-.escape_sequence    { color: #94BFF3; }\n-.keyword            { color: #F0DFAF; font-weight: bold; }\n-.control            { font-style: italic; }\n-.reference          { font-style: italic; font-weight: bold; }\n-\n-.unresolved_reference { color: #FC5555; text-decoration: wavy underline; }\n-</style>\n-<pre><code><span class=\"keyword\">fn</span> <span class=\"function declaration\">f</span><span class=\"parenthesis\">(</span><span class=\"value_param declaration reference\">ra_fixture</span><span class=\"colon\">:</span> <span class=\"operator\">&</span><span class=\"builtin_type\">str</span><span class=\"parenthesis\">)</span> <span class=\"brace\">{</span><span class=\"brace\">}</span>\n-<span class=\"keyword\">fn</span> <span class=\"function declaration\">main</span><span class=\"parenthesis\">(</span><span class=\"parenthesis\">)</span> <span class=\"brace\">{</span>\n-    <span class=\"function\">f</span><span class=\"parenthesis\">(</span><span class=\"string_literal\">r\"</span>\n-<span class=\"keyword\">fn</span> <span class=\"function declaration\">foo</span><span class=\"parenthesis\">(</span><span class=\"parenthesis\">)</span> <span class=\"brace\">{</span>\n-    <span class=\"function\">foo</span><span class=\"parenthesis\">(</span><span class=\"keyword\">$0</span><span class=\"brace\">{</span>\n-        <span class=\"numeric_literal\">92</span>\n-    <span class=\"brace\">}</span><span class=\"keyword\">$0</span><span class=\"parenthesis\">)</span>\n-<span class=\"brace\">}</span><span class=\"string_literal\">\"</span><span class=\"parenthesis\">)</span><span class=\"semicolon\">;</span>\n-<span class=\"brace\">}</span></code></pre>\n\\ No newline at end of file"}, {"sha": "ec50fde3562cb87042b7e6efb448e7845be4f108", "filename": "crates/ide/src/syntax_highlighting/tests.rs", "status": "modified", "additions": 19, "deletions": 28, "changes": 47, "blob_url": "https://github.com/rust-lang/rust/blob/36603e0478bace705b9a3b59aebb8a6918a1700b/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/36603e0478bace705b9a3b59aebb8a6918a1700b/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftests.rs?ref=36603e0478bace705b9a3b59aebb8a6918a1700b", "patch": "@@ -27,7 +27,7 @@ fn attributes() {\n // The reason for these being here is to test AttrIds\n struct Foo;\n \"#,\n-        expect_file![\"./test_data/attributes.html\"],\n+        expect_file![\"./test_data/highlight_attributes.html\"],\n         false,\n     );\n }\n@@ -82,11 +82,13 @@ fn main() {\n     noop!(noop!(1));\n }\n \"#,\n-        expect_file![\"./test_data/macros.html\"],\n+        expect_file![\"./test_data/highlight_macros.html\"],\n         false,\n     );\n }\n \n+/// If what you want to test feels like a specific entity consider making a new test instead,\n+/// this test fixture here in fact should shrink instead of grow ideally.\n #[test]\n fn test_highlighting() {\n     check_highlighting(\n@@ -305,7 +307,7 @@ macro_rules! die {\n     };\n }\n \"#,\n-        expect_file![\"./test_data/highlighting.html\"],\n+        expect_file![\"./test_data/highlight_general.html\"],\n         false,\n     );\n }\n@@ -762,17 +764,26 @@ impl t for foo {\n fn test_injection() {\n     check_highlighting(\n         r##\"\n-fn f(ra_fixture: &str) {}\n+fn fixture(ra_fixture: &str) {}\n+\n fn main() {\n-    f(r\"\n+    fixture(r#\"\n+trait Foo {\n+    fn foo() {\n+        println!(\"2 + 2 = {}\", 4);\n+    }\n+}\"#\n+    );\n+    fixture(r\"\n fn foo() {\n     foo(\\$0{\n         92\n     }\\$0)\n-}\");\n+}\"\n+    );\n }\n \"##,\n-        expect_file![\"./test_data/injection.html\"],\n+        expect_file![\"./test_data/highlight_injection.html\"],\n         false,\n     );\n }\n@@ -794,7 +805,7 @@ fn bar() {\n     let mut hello = \"hello\";\n }\n \"#,\n-        expect_file![\"./test_data/rainbow_highlighting.html\"],\n+        expect_file![\"./test_data/highlight_rainbow.html\"],\n         true,\n     );\n }\n@@ -819,26 +830,6 @@ struct Foo {\n     assert_eq!(&highlights[0].highlight.to_string(), \"field.declaration.public\");\n }\n \n-#[test]\n-fn test_flattening() {\n-    check_highlighting(\n-        r##\"\n-fn fixture(ra_fixture: &str) {}\n-\n-fn main() {\n-    fixture(r#\"\n-        trait Foo {\n-            fn foo() {\n-                println!(\"2 + 2 = {}\", 4);\n-            }\n-        }\"#\n-    );\n-}\"##,\n-        expect_file![\"./test_data/highlight_injection.html\"],\n-        false,\n-    );\n-}\n-\n #[test]\n fn ranges_sorted() {\n     let (analysis, file_id) = fixture::file("}]}