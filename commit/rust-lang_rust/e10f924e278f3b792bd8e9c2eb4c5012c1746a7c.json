{"sha": "e10f924e278f3b792bd8e9c2eb4c5012c1746a7c", "node_id": "C_kwDOAAsO6NoAKGUxMGY5MjRlMjc4ZjNiNzkyYmQ4ZTljMmViNGM1MDEyYzE3NDZhN2M", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2022-08-10T05:21:33Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-08-10T05:21:33Z"}, "message": "Rollup merge of #99573 - tbodt:stabilize-backtrace, r=yaahc\n\nStabilize backtrace\n\nThis PR stabilizes the std::backtrace module. As of #99431, the std::Error::backtrace item has been removed, and so the rest of the backtrace feature is set to be stabilized.\n\nPrevious discussion can be found in #72981, #3156.\n\nStabilized API summary:\n```rust\npub mod std {\n    pub mod backtrace {\n        pub struct Backtrace { }\n        pub enum BacktraceStatus {\n            Unsupported,\n            Disabled,\n            Captured,\n        }\n        impl fmt::Debug for Backtrace {}\n        impl Backtrace {\n            pub fn capture() -> Backtrace;\n            pub fn force_capture() -> Backtrace;\n            pub const fn disabled() -> Backtrace;\n            pub fn status(&self) -> BacktraceStatus;\n        }\n        impl fmt::Display for Backtrace {}\n    }\n}\n```\n\n`@yaahc`", "tree": {"sha": "850acf96d8a150d6054a1d75267a9674bf06c7a4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/850acf96d8a150d6054a1d75267a9674bf06c7a4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e10f924e278f3b792bd8e9c2eb4c5012c1746a7c", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJi80BdCRBK7hj4Ov3rIwAARRkIAJBMOPOuxxold8nJoKtsoZbq\nEKKihmId6Xr4uWL5H3ylh4aDv3llk2IINqCFAopev3abxg1zECvMrViwbN1hVzSR\nXZHE0jfzcivRUaBTDLimvr1UoA94uvhyGU7WCGD2T9Nm18JosvU2SMqrZ2ulSdBG\nBU1Ny5B1kvxF4gtQLjO5fcjYlTvPx32G+AqMxXQI6o+DuTsJSrqV4cN31RYZLHsv\ndE1YJNZ4VNncaV1VUjkCDmeMY+Qt5+VEwtmS1gjbv1p0oJk+/MPT5sxzKh1GKZNM\nq/HWjAYYaTB35vr96CAp/ohnb2mtzp2P/BayBRbbL048xz7EiAucBiHX+tnQxzc=\n=My/H\n-----END PGP SIGNATURE-----\n", "payload": "tree 850acf96d8a150d6054a1d75267a9674bf06c7a4\nparent 34a6cae28e7013ff0e640026a8e46f315426829d\nparent 21396828e4743cd5ff50488b98ee3fbfa150dee4\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1660108893 +0200\ncommitter GitHub <noreply@github.com> 1660108893 +0200\n\nRollup merge of #99573 - tbodt:stabilize-backtrace, r=yaahc\n\nStabilize backtrace\n\nThis PR stabilizes the std::backtrace module. As of #99431, the std::Error::backtrace item has been removed, and so the rest of the backtrace feature is set to be stabilized.\n\nPrevious discussion can be found in #72981, #3156.\n\nStabilized API summary:\n```rust\npub mod std {\n    pub mod backtrace {\n        pub struct Backtrace { }\n        pub enum BacktraceStatus {\n            Unsupported,\n            Disabled,\n            Captured,\n        }\n        impl fmt::Debug for Backtrace {}\n        impl Backtrace {\n            pub fn capture() -> Backtrace;\n            pub fn force_capture() -> Backtrace;\n            pub const fn disabled() -> Backtrace;\n            pub fn status(&self) -> BacktraceStatus;\n        }\n        impl fmt::Display for Backtrace {}\n    }\n}\n```\n\n`@yaahc`\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e10f924e278f3b792bd8e9c2eb4c5012c1746a7c", "html_url": "https://github.com/rust-lang/rust/commit/e10f924e278f3b792bd8e9c2eb4c5012c1746a7c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e10f924e278f3b792bd8e9c2eb4c5012c1746a7c/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "34a6cae28e7013ff0e640026a8e46f315426829d", "url": "https://api.github.com/repos/rust-lang/rust/commits/34a6cae28e7013ff0e640026a8e46f315426829d", "html_url": "https://github.com/rust-lang/rust/commit/34a6cae28e7013ff0e640026a8e46f315426829d"}, {"sha": "21396828e4743cd5ff50488b98ee3fbfa150dee4", "url": "https://api.github.com/repos/rust-lang/rust/commits/21396828e4743cd5ff50488b98ee3fbfa150dee4", "html_url": "https://github.com/rust-lang/rust/commit/21396828e4743cd5ff50488b98ee3fbfa150dee4"}], "stats": {"total": 26, "additions": 11, "deletions": 15}, "files": [{"sha": "15c1858023de7f0de498a09245e7257fda773372", "filename": "compiler/rustc_errors/src/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/e10f924e278f3b792bd8e9c2eb4c5012c1746a7c/compiler%2Frustc_errors%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e10f924e278f3b792bd8e9c2eb4c5012c1746a7c/compiler%2Frustc_errors%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_errors%2Fsrc%2Flib.rs?ref=e10f924e278f3b792bd8e9c2eb4c5012c1746a7c", "patch": "@@ -4,7 +4,6 @@\n \n #![doc(html_root_url = \"https://doc.rust-lang.org/nightly/nightly-rustc/\")]\n #![feature(drain_filter)]\n-#![feature(backtrace)]\n #![feature(if_let_guard)]\n #![cfg_attr(bootstrap, feature(let_chains))]\n #![feature(let_else)]"}, {"sha": "4e1254efd179fa7f4b4f9f3578e18d731914083d", "filename": "compiler/rustc_middle/src/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/e10f924e278f3b792bd8e9c2eb4c5012c1746a7c/compiler%2Frustc_middle%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e10f924e278f3b792bd8e9c2eb4c5012c1746a7c/compiler%2Frustc_middle%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Flib.rs?ref=e10f924e278f3b792bd8e9c2eb4c5012c1746a7c", "patch": "@@ -26,7 +26,6 @@\n #![feature(allocator_api)]\n #![feature(array_windows)]\n #![feature(assert_matches)]\n-#![feature(backtrace)]\n #![feature(box_patterns)]\n #![feature(core_intrinsics)]\n #![feature(discriminant_kind)]"}, {"sha": "b91db03a3d55355405bce81a06ad53a06f6c5751", "filename": "library/std/src/backtrace.rs", "status": "modified", "additions": 11, "deletions": 7, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/e10f924e278f3b792bd8e9c2eb4c5012c1746a7c/library%2Fstd%2Fsrc%2Fbacktrace.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e10f924e278f3b792bd8e9c2eb4c5012c1746a7c/library%2Fstd%2Fsrc%2Fbacktrace.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fbacktrace.rs?ref=e10f924e278f3b792bd8e9c2eb4c5012c1746a7c", "patch": "@@ -9,12 +9,6 @@\n //! implementing `std::error::Error`) to get a causal chain of where an error\n //! was generated.\n //!\n-//! > **Note**: this module is unstable and is designed in [RFC 2504], and you\n-//! > can learn more about its status in the [tracking issue].\n-//!\n-//! [RFC 2504]: https://github.com/rust-lang/rfcs/blob/master/text/2504-fix-error.md\n-//! [tracking issue]: https://github.com/rust-lang/rust/issues/53487\n-//!\n //! ## Accuracy\n //!\n //! Backtraces are attempted to be as accurate as possible, but no guarantees\n@@ -64,7 +58,7 @@\n //! `RUST_LIB_BACKTRACE` or `RUST_BACKTRACE` at runtime might not actually change\n //! how backtraces are captured.\n \n-#![unstable(feature = \"backtrace\", issue = \"53487\")]\n+#![stable(feature = \"backtrace\", since = \"1.65.0\")]\n \n #[cfg(test)]\n mod tests;\n@@ -110,13 +104,15 @@ use crate::vec::Vec;\n /// previous point in time. In some instances the `Backtrace` type may\n /// internally be empty due to configuration. For more information see\n /// `Backtrace::capture`.\n+#[stable(feature = \"backtrace\", since = \"1.65.0\")]\n #[must_use]\n pub struct Backtrace {\n     inner: Inner,\n }\n \n /// The current status of a backtrace, indicating whether it was captured or\n /// whether it is empty for some other reason.\n+#[stable(feature = \"backtrace\", since = \"1.65.0\")]\n #[non_exhaustive]\n #[derive(Debug, PartialEq, Eq)]\n pub enum BacktraceStatus {\n@@ -174,6 +170,7 @@ enum BytesOrWide {\n     Wide(Vec<u16>),\n }\n \n+#[stable(feature = \"backtrace\", since = \"1.65.0\")]\n impl fmt::Debug for Backtrace {\n     fn fmt(&self, fmt: &mut fmt::Formatter<'_>) -> fmt::Result {\n         let capture = match &self.inner {\n@@ -200,6 +197,7 @@ impl fmt::Debug for Backtrace {\n     }\n }\n \n+#[unstable(feature = \"backtrace_frames\", issue = \"79676\")]\n impl fmt::Debug for BacktraceFrame {\n     fn fmt(&self, fmt: &mut fmt::Formatter<'_>) -> fmt::Result {\n         let mut dbg = fmt.debug_list();\n@@ -288,6 +286,7 @@ impl Backtrace {\n     ///\n     /// To forcibly capture a backtrace regardless of environment variables, use\n     /// the `Backtrace::force_capture` function.\n+    #[stable(feature = \"backtrace\", since = \"1.65.0\")]\n     #[inline(never)] // want to make sure there's a frame here to remove\n     pub fn capture() -> Backtrace {\n         if !Backtrace::enabled() {\n@@ -306,13 +305,16 @@ impl Backtrace {\n     /// Note that capturing a backtrace can be an expensive operation on some\n     /// platforms, so this should be used with caution in performance-sensitive\n     /// parts of code.\n+    #[stable(feature = \"backtrace\", since = \"1.65.0\")]\n     #[inline(never)] // want to make sure there's a frame here to remove\n     pub fn force_capture() -> Backtrace {\n         Backtrace::create(Backtrace::force_capture as usize)\n     }\n \n     /// Forcibly captures a disabled backtrace, regardless of environment\n     /// variable configuration.\n+    #[stable(feature = \"backtrace\", since = \"1.65.0\")]\n+    #[rustc_const_stable(feature = \"backtrace\", since = \"1.65.0\")]\n     pub const fn disabled() -> Backtrace {\n         Backtrace { inner: Inner::Disabled }\n     }\n@@ -356,6 +358,7 @@ impl Backtrace {\n     /// Returns the status of this backtrace, indicating whether this backtrace\n     /// request was unsupported, disabled, or a stack trace was actually\n     /// captured.\n+    #[stable(feature = \"backtrace\", since = \"1.65.0\")]\n     #[must_use]\n     pub fn status(&self) -> BacktraceStatus {\n         match self.inner {\n@@ -375,6 +378,7 @@ impl<'a> Backtrace {\n     }\n }\n \n+#[stable(feature = \"backtrace\", since = \"1.65.0\")]\n impl fmt::Display for Backtrace {\n     fn fmt(&self, fmt: &mut fmt::Formatter<'_>) -> fmt::Result {\n         let capture = match &self.inner {"}, {"sha": "df7a49d258282488ff8e1e8e54d13da68bdb0f61", "filename": "library/std/src/error.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/e10f924e278f3b792bd8e9c2eb4c5012c1746a7c/library%2Fstd%2Fsrc%2Ferror.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e10f924e278f3b792bd8e9c2eb4c5012c1746a7c/library%2Fstd%2Fsrc%2Ferror.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Ferror.rs?ref=e10f924e278f3b792bd8e9c2eb4c5012c1746a7c", "patch": "@@ -1454,7 +1454,6 @@ impl<E> Report<E> {\n     ///\n     /// ```rust\n     /// #![feature(error_reporter)]\n-    /// #![feature(backtrace)]\n     /// #![feature(provide_any)]\n     /// #![feature(error_generic_member_access)]\n     /// # use std::error::Error;"}, {"sha": "a2c7a31b7c329b7654e806575805d70ec24eb9d8", "filename": "src/test/run-make-fulldeps/issue-47551/eh_frame-terminator.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/e10f924e278f3b792bd8e9c2eb4c5012c1746a7c/src%2Ftest%2Frun-make-fulldeps%2Fissue-47551%2Feh_frame-terminator.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e10f924e278f3b792bd8e9c2eb4c5012c1746a7c/src%2Ftest%2Frun-make-fulldeps%2Fissue-47551%2Feh_frame-terminator.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fissue-47551%2Feh_frame-terminator.rs?ref=e10f924e278f3b792bd8e9c2eb4c5012c1746a7c", "patch": "@@ -1,6 +1,5 @@\n // run-pass\n \n-#![feature(backtrace)]\n #[derive(Clone, Copy)]\n struct Foo {\n     array: [u64; 10240],"}, {"sha": "3844ebcfd30d71a5e56b4f1ca4f24d1d557e122d", "filename": "src/test/ui/backtrace-apple-no-dsymutil.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e10f924e278f3b792bd8e9c2eb4c5012c1746a7c/src%2Ftest%2Fui%2Fbacktrace-apple-no-dsymutil.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e10f924e278f3b792bd8e9c2eb4c5012c1746a7c/src%2Ftest%2Fui%2Fbacktrace-apple-no-dsymutil.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fbacktrace-apple-no-dsymutil.rs?ref=e10f924e278f3b792bd8e9c2eb4c5012c1746a7c", "patch": "@@ -4,8 +4,6 @@\n // compile-flags:-g -Csplit-debuginfo=unpacked\n // only-macos\n \n-#![feature(backtrace)]\n-\n use std::process::Command;\n use std::str;\n "}, {"sha": "3f8306baf8a217454028845bac589362015b3163", "filename": "src/test/ui/std-backtrace.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e10f924e278f3b792bd8e9c2eb4c5012c1746a7c/src%2Ftest%2Fui%2Fstd-backtrace.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e10f924e278f3b792bd8e9c2eb4c5012c1746a7c/src%2Ftest%2Fui%2Fstd-backtrace.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fstd-backtrace.rs?ref=e10f924e278f3b792bd8e9c2eb4c5012c1746a7c", "patch": "@@ -7,8 +7,6 @@\n // compile-flags:-g\n // compile-flags:-Cstrip=none\n \n-#![feature(backtrace)]\n-\n use std::env;\n use std::process::Command;\n use std::str;"}]}