{"sha": "acd51cb361720458615bd1ceb909b0f4461328df", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFjZDUxY2IzNjE3MjA0NTg2MTViZDFjZWI5MDliMGY0NDYxMzI4ZGY=", "commit": {"author": {"name": "Adolfo Ochagav\u00eda", "email": "aochagavia92@gmail.com", "date": "2018-11-16T11:16:20Z"}, "committer": {"name": "Adolfo Ochagav\u00eda", "email": "aochagavia92@gmail.com", "date": "2018-11-16T11:16:20Z"}, "message": "cargo format", "tree": {"sha": "00706a794c4ed567090d2e24403ee9729c8557ae", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/00706a794c4ed567090d2e24403ee9729c8557ae"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/acd51cb361720458615bd1ceb909b0f4461328df", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/acd51cb361720458615bd1ceb909b0f4461328df", "html_url": "https://github.com/rust-lang/rust/commit/acd51cb361720458615bd1ceb909b0f4461328df", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/acd51cb361720458615bd1ceb909b0f4461328df/comments", "author": {"login": "aochagavia", "id": 5196584, "node_id": "MDQ6VXNlcjUxOTY1ODQ=", "avatar_url": "https://avatars.githubusercontent.com/u/5196584?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aochagavia", "html_url": "https://github.com/aochagavia", "followers_url": "https://api.github.com/users/aochagavia/followers", "following_url": "https://api.github.com/users/aochagavia/following{/other_user}", "gists_url": "https://api.github.com/users/aochagavia/gists{/gist_id}", "starred_url": "https://api.github.com/users/aochagavia/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aochagavia/subscriptions", "organizations_url": "https://api.github.com/users/aochagavia/orgs", "repos_url": "https://api.github.com/users/aochagavia/repos", "events_url": "https://api.github.com/users/aochagavia/events{/privacy}", "received_events_url": "https://api.github.com/users/aochagavia/received_events", "type": "User", "site_admin": false}, "committer": {"login": "aochagavia", "id": 5196584, "node_id": "MDQ6VXNlcjUxOTY1ODQ=", "avatar_url": "https://avatars.githubusercontent.com/u/5196584?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aochagavia", "html_url": "https://github.com/aochagavia", "followers_url": "https://api.github.com/users/aochagavia/followers", "following_url": "https://api.github.com/users/aochagavia/following{/other_user}", "gists_url": "https://api.github.com/users/aochagavia/gists{/gist_id}", "starred_url": "https://api.github.com/users/aochagavia/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aochagavia/subscriptions", "organizations_url": "https://api.github.com/users/aochagavia/orgs", "repos_url": "https://api.github.com/users/aochagavia/repos", "events_url": "https://api.github.com/users/aochagavia/events{/privacy}", "received_events_url": "https://api.github.com/users/aochagavia/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bccbee5ba3eea3decaf3d00a5dc09dd6cbc632f1", "url": "https://api.github.com/repos/rust-lang/rust/commits/bccbee5ba3eea3decaf3d00a5dc09dd6cbc632f1", "html_url": "https://github.com/rust-lang/rust/commit/bccbee5ba3eea3decaf3d00a5dc09dd6cbc632f1"}], "stats": {"total": 112, "additions": 98, "deletions": 14}, "files": [{"sha": "aab7e4081c6c667764f872556bdc353317e290dd", "filename": "crates/ra_editor/src/line_index.rs", "status": "modified", "additions": 98, "deletions": 14, "changes": 112, "blob_url": "https://github.com/rust-lang/rust/blob/acd51cb361720458615bd1ceb909b0f4461328df/crates%2Fra_editor%2Fsrc%2Fline_index.rs", "raw_url": "https://github.com/rust-lang/rust/raw/acd51cb361720458615bd1ceb909b0f4461328df/crates%2Fra_editor%2Fsrc%2Fline_index.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_editor%2Fsrc%2Fline_index.rs?ref=acd51cb361720458615bd1ceb909b0f4461328df", "patch": "@@ -126,23 +126,107 @@ impl LineIndex {\n fn test_line_index() {\n     let text = \"hello\\nworld\";\n     let index = LineIndex::new(text);\n-    assert_eq!(index.line_col(0.into()), LineCol { line: 0, col_utf16: 0 });\n-    assert_eq!(index.line_col(1.into()), LineCol { line: 0, col_utf16: 1 });\n-    assert_eq!(index.line_col(5.into()), LineCol { line: 0, col_utf16: 5 });\n-    assert_eq!(index.line_col(6.into()), LineCol { line: 1, col_utf16: 0 });\n-    assert_eq!(index.line_col(7.into()), LineCol { line: 1, col_utf16: 1 });\n-    assert_eq!(index.line_col(8.into()), LineCol { line: 1, col_utf16: 2 });\n-    assert_eq!(index.line_col(10.into()), LineCol { line: 1, col_utf16: 4 });\n-    assert_eq!(index.line_col(11.into()), LineCol { line: 1, col_utf16: 5 });\n-    assert_eq!(index.line_col(12.into()), LineCol { line: 1, col_utf16: 6 });\n+    assert_eq!(\n+        index.line_col(0.into()),\n+        LineCol {\n+            line: 0,\n+            col_utf16: 0\n+        }\n+    );\n+    assert_eq!(\n+        index.line_col(1.into()),\n+        LineCol {\n+            line: 0,\n+            col_utf16: 1\n+        }\n+    );\n+    assert_eq!(\n+        index.line_col(5.into()),\n+        LineCol {\n+            line: 0,\n+            col_utf16: 5\n+        }\n+    );\n+    assert_eq!(\n+        index.line_col(6.into()),\n+        LineCol {\n+            line: 1,\n+            col_utf16: 0\n+        }\n+    );\n+    assert_eq!(\n+        index.line_col(7.into()),\n+        LineCol {\n+            line: 1,\n+            col_utf16: 1\n+        }\n+    );\n+    assert_eq!(\n+        index.line_col(8.into()),\n+        LineCol {\n+            line: 1,\n+            col_utf16: 2\n+        }\n+    );\n+    assert_eq!(\n+        index.line_col(10.into()),\n+        LineCol {\n+            line: 1,\n+            col_utf16: 4\n+        }\n+    );\n+    assert_eq!(\n+        index.line_col(11.into()),\n+        LineCol {\n+            line: 1,\n+            col_utf16: 5\n+        }\n+    );\n+    assert_eq!(\n+        index.line_col(12.into()),\n+        LineCol {\n+            line: 1,\n+            col_utf16: 6\n+        }\n+    );\n \n     let text = \"\\nhello\\nworld\";\n     let index = LineIndex::new(text);\n-    assert_eq!(index.line_col(0.into()), LineCol { line: 0, col_utf16: 0 });\n-    assert_eq!(index.line_col(1.into()), LineCol { line: 1, col_utf16: 0 });\n-    assert_eq!(index.line_col(2.into()), LineCol { line: 1, col_utf16: 1 });\n-    assert_eq!(index.line_col(6.into()), LineCol { line: 1, col_utf16: 5 });\n-    assert_eq!(index.line_col(7.into()), LineCol { line: 2, col_utf16: 0 });\n+    assert_eq!(\n+        index.line_col(0.into()),\n+        LineCol {\n+            line: 0,\n+            col_utf16: 0\n+        }\n+    );\n+    assert_eq!(\n+        index.line_col(1.into()),\n+        LineCol {\n+            line: 1,\n+            col_utf16: 0\n+        }\n+    );\n+    assert_eq!(\n+        index.line_col(2.into()),\n+        LineCol {\n+            line: 1,\n+            col_utf16: 1\n+        }\n+    );\n+    assert_eq!(\n+        index.line_col(6.into()),\n+        LineCol {\n+            line: 1,\n+            col_utf16: 5\n+        }\n+    );\n+    assert_eq!(\n+        index.line_col(7.into()),\n+        LineCol {\n+            line: 2,\n+            col_utf16: 0\n+        }\n+    );\n }\n \n #[cfg(test)]"}]}