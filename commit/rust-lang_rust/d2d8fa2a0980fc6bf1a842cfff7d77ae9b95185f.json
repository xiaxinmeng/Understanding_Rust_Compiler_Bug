{"sha": "d2d8fa2a0980fc6bf1a842cfff7d77ae9b95185f", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQyZDhmYTJhMDk4MGZjNmJmMWE4NDJjZmZmN2Q3N2FlOWI5NTE4NWY=", "commit": {"author": {"name": "Cameron Zwarich", "email": "zwarich@mozilla.com", "date": "2014-06-14T03:48:09Z"}, "committer": {"name": "Cameron Zwarich", "email": "zwarich@mozilla.com", "date": "2014-06-14T03:48:09Z"}, "message": "Make analyze_move_out_from use a loop rather than recursion\n\nIt will be simpler to make some of the changes that I need to make to\nanalyze_move_out if it uses a loop rather than recursion.", "tree": {"sha": "0e204ccb4314e65c2b7060c85e0072fc3e950501", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0e204ccb4314e65c2b7060c85e0072fc3e950501"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d2d8fa2a0980fc6bf1a842cfff7d77ae9b95185f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d2d8fa2a0980fc6bf1a842cfff7d77ae9b95185f", "html_url": "https://github.com/rust-lang/rust/commit/d2d8fa2a0980fc6bf1a842cfff7d77ae9b95185f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d2d8fa2a0980fc6bf1a842cfff7d77ae9b95185f/comments", "author": null, "committer": null, "parents": [{"sha": "3851d68a27d41dfd15e12a75b590f362a0675870", "url": "https://api.github.com/repos/rust-lang/rust/commits/3851d68a27d41dfd15e12a75b590f362a0675870", "html_url": "https://github.com/rust-lang/rust/commit/3851d68a27d41dfd15e12a75b590f362a0675870"}], "stats": {"total": 33, "additions": 20, "deletions": 13}, "files": [{"sha": "8ec93bb51b6beb7789b78d98abdb3d9ef0b8a481", "filename": "src/librustc/middle/borrowck/check_loans.rs", "status": "modified", "additions": 20, "deletions": 13, "changes": 33, "blob_url": "https://github.com/rust-lang/rust/blob/d2d8fa2a0980fc6bf1a842cfff7d77ae9b95185f/src%2Flibrustc%2Fmiddle%2Fborrowck%2Fcheck_loans.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d2d8fa2a0980fc6bf1a842cfff7d77ae9b95185f/src%2Flibrustc%2Fmiddle%2Fborrowck%2Fcheck_loans.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fborrowck%2Fcheck_loans.rs?ref=d2d8fa2a0980fc6bf1a842cfff7d77ae9b95185f", "patch": "@@ -874,23 +874,30 @@ impl<'a> CheckLoanCtxt<'a> {\n         // We must check every element of a move path. See\n         // `borrowck-move-subcomponent.rs` for a test case.\n \n-        // check for a conflicting loan:\n         let mut ret = MoveOk;\n-        self.each_in_scope_restriction(expr_id, move_path, |loan, _| {\n-            // Any restriction prevents moves.\n-            ret = MoveWhileBorrowed(loan.loan_path.clone(), loan.span);\n-            false\n-        });\n+        let mut loan_path = move_path;\n+        loop {\n+            // check for a conflicting loan:\n+            self.each_in_scope_restriction(expr_id, loan_path, |loan, _| {\n+                // Any restriction prevents moves.\n+                ret = MoveWhileBorrowed(loan.loan_path.clone(), loan.span);\n+                false\n+            });\n \n-        if ret != MoveOk {\n-            return ret\n-        }\n+            if ret != MoveOk {\n+                return ret\n+            }\n \n-        match *move_path {\n-            LpVar(_) => MoveOk,\n-            LpExtend(ref subpath, _, _) => {\n-                self.analyze_move_out_from(expr_id, &**subpath)\n+            match *loan_path {\n+                LpVar(_) => {\n+                    ret = MoveOk;\n+                    break;\n+                }\n+                LpExtend(ref lp_base, _, _) => {\n+                    loan_path = &**lp_base;\n+                }\n             }\n         }\n+        ret\n     }\n }"}]}