{"sha": "90eeb92e10d3a1ca058aa1fed24721aa3b7553cb", "node_id": "MDY6Q29tbWl0NzI0NzEyOjkwZWViOTJlMTBkM2ExY2EwNThhYTFmZWQyNDcyMWFhM2I3NTUzY2I=", "commit": {"author": {"name": "Luqman Aden", "email": "laden@csclub.uwaterloo.ca", "date": "2014-05-20T21:42:20Z"}, "committer": {"name": "Luqman Aden", "email": "laden@csclub.uwaterloo.ca", "date": "2014-05-23T01:06:24Z"}, "message": "Update to LLVM head and mark various ptrs as nonnull.", "tree": {"sha": "8706201b901d6cda7b43501e4eb2b0fc46416a9c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8706201b901d6cda7b43501e4eb2b0fc46416a9c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/90eeb92e10d3a1ca058aa1fed24721aa3b7553cb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/90eeb92e10d3a1ca058aa1fed24721aa3b7553cb", "html_url": "https://github.com/rust-lang/rust/commit/90eeb92e10d3a1ca058aa1fed24721aa3b7553cb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/90eeb92e10d3a1ca058aa1fed24721aa3b7553cb/comments", "author": {"login": "luqmana", "id": 287063, "node_id": "MDQ6VXNlcjI4NzA2Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/287063?v=4", "gravatar_id": "", "url": "https://api.github.com/users/luqmana", "html_url": "https://github.com/luqmana", "followers_url": "https://api.github.com/users/luqmana/followers", "following_url": "https://api.github.com/users/luqmana/following{/other_user}", "gists_url": "https://api.github.com/users/luqmana/gists{/gist_id}", "starred_url": "https://api.github.com/users/luqmana/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/luqmana/subscriptions", "organizations_url": "https://api.github.com/users/luqmana/orgs", "repos_url": "https://api.github.com/users/luqmana/repos", "events_url": "https://api.github.com/users/luqmana/events{/privacy}", "received_events_url": "https://api.github.com/users/luqmana/received_events", "type": "User", "site_admin": false}, "committer": {"login": "luqmana", "id": 287063, "node_id": "MDQ6VXNlcjI4NzA2Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/287063?v=4", "gravatar_id": "", "url": "https://api.github.com/users/luqmana", "html_url": "https://github.com/luqmana", "followers_url": "https://api.github.com/users/luqmana/followers", "following_url": "https://api.github.com/users/luqmana/following{/other_user}", "gists_url": "https://api.github.com/users/luqmana/gists{/gist_id}", "starred_url": "https://api.github.com/users/luqmana/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/luqmana/subscriptions", "organizations_url": "https://api.github.com/users/luqmana/orgs", "repos_url": "https://api.github.com/users/luqmana/repos", "events_url": "https://api.github.com/users/luqmana/events{/privacy}", "received_events_url": "https://api.github.com/users/luqmana/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "87ad19eb78239707f1ceed43e475c6aa052efdbc", "url": "https://api.github.com/repos/rust-lang/rust/commits/87ad19eb78239707f1ceed43e475c6aa052efdbc", "html_url": "https://github.com/rust-lang/rust/commit/87ad19eb78239707f1ceed43e475c6aa052efdbc"}], "stats": {"total": 42, "additions": 39, "deletions": 3}, "files": [{"sha": "0e7a904c967826e959c77bdbaa9760ea5b7cca9b", "filename": "src/librustc/lib/llvm.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/90eeb92e10d3a1ca058aa1fed24721aa3b7553cb/src%2Flibrustc%2Flib%2Fllvm.rs", "raw_url": "https://github.com/rust-lang/rust/raw/90eeb92e10d3a1ca058aa1fed24721aa3b7553cb/src%2Flibrustc%2Flib%2Fllvm.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Flib%2Fllvm.rs?ref=90eeb92e10d3a1ca058aa1fed24721aa3b7553cb", "patch": "@@ -716,6 +716,9 @@ pub mod llvm {\n \n         pub fn LLVMAddColdAttribute(Fn: ValueRef);\n \n+        pub fn LLVMAddNonNullAttribute(Arg: ValueRef);\n+        pub fn LLVMAddNonNullReturnAttribute(Fn: ValueRef);\n+\n         pub fn LLVMRemoveFunctionAttr(Fn: ValueRef,\n                                       PA: c_ulonglong,\n                                       HighPA: c_ulonglong);"}, {"sha": "6413d798e0e2a909f3c1ffe8af5613ca7663d061", "filename": "src/librustc/middle/trans/base.rs", "status": "modified", "additions": 21, "deletions": 1, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/90eeb92e10d3a1ca058aa1fed24721aa3b7553cb/src%2Flibrustc%2Fmiddle%2Ftrans%2Fbase.rs", "raw_url": "https://github.com/rust-lang/rust/raw/90eeb92e10d3a1ca058aa1fed24721aa3b7553cb/src%2Flibrustc%2Fmiddle%2Ftrans%2Fbase.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftrans%2Fbase.rs?ref=90eeb92e10d3a1ca058aa1fed24721aa3b7553cb", "patch": "@@ -259,12 +259,14 @@ pub fn decl_rust_fn(ccx: &CrateContext, has_env: bool,\n             ty::ty_uniq(..) => {\n                 unsafe {\n                     llvm::LLVMAddAttribute(llarg, lib::llvm::NoAliasAttribute as c_uint);\n+                    llvm::LLVMAddNonNullAttribute(llarg);\n                 }\n             }\n             // `&mut` pointer parameters never alias other parameters, or mutable global data\n             ty::ty_rptr(_, mt) if mt.mutbl == ast::MutMutable => {\n                 unsafe {\n                     llvm::LLVMAddAttribute(llarg, lib::llvm::NoAliasAttribute as c_uint);\n+                    llvm::LLVMAddNonNullAttribute(llarg);\n                 }\n             }\n             // When a reference in an argument has no named lifetime, it's impossible for that\n@@ -273,6 +275,13 @@ pub fn decl_rust_fn(ccx: &CrateContext, has_env: bool,\n                 debug!(\"marking argument of {} as nocapture because of anonymous lifetime\", name);\n                 unsafe {\n                     llvm::LLVMAddAttribute(llarg, lib::llvm::NoCaptureAttribute as c_uint);\n+                    llvm::LLVMAddNonNullAttribute(llarg);\n+                }\n+            }\n+            // `&` pointer parameters are never null\n+            ty::ty_rptr(..) => {\n+                unsafe {\n+                    llvm::LLVMAddNonNullAttribute(llarg);\n                 }\n             }\n             _ => {\n@@ -290,12 +299,23 @@ pub fn decl_rust_fn(ccx: &CrateContext, has_env: bool,\n \n     // The out pointer will never alias with any other pointers, as the object only exists at a\n     // language level after the call. It can also be tagged with SRet to indicate that it is\n-    // guaranteed to point to a usable block of memory for the type.\n+    // guaranteed to point to a usable block of memory for the type. We also know that it's\n+    // never null\n     if uses_outptr {\n         unsafe {\n             let outptr = llvm::LLVMGetParam(llfn, 0);\n             llvm::LLVMAddAttribute(outptr, lib::llvm::StructRetAttribute as c_uint);\n             llvm::LLVMAddAttribute(outptr, lib::llvm::NoAliasAttribute as c_uint);\n+            llvm::LLVMAddNonNullAttribute(outptr);\n+        }\n+    } else {\n+        match ty::get(output).sty {\n+            ty::ty_uniq(..) | ty::ty_rptr(..) => {\n+                unsafe {\n+                    llvm::LLVMAddNonNullReturnAttribute(llfn);\n+                }\n+            }\n+            _ => {}\n         }\n     }\n "}, {"sha": "0a894645cf120539876e9eb4eb0d7b572dfa9d14", "filename": "src/llvm", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": null, "raw_url": null, "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fllvm?ref=90eeb92e10d3a1ca058aa1fed24721aa3b7553cb", "patch": "@@ -1 +1 @@\n-Subproject commit 4b4d0533b4f76cc3fbba31bd9e7ac02e0c738b1d\n+Subproject commit 0a894645cf120539876e9eb4eb0d7b572dfa9d14"}, {"sha": "195b044ccdcef57ee72d6524b10bc65bc27c1add", "filename": "src/rustllvm/PassWrapper.cpp", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/90eeb92e10d3a1ca058aa1fed24721aa3b7553cb/src%2Frustllvm%2FPassWrapper.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/90eeb92e10d3a1ca058aa1fed24721aa3b7553cb/src%2Frustllvm%2FPassWrapper.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustllvm%2FPassWrapper.cpp?ref=90eeb92e10d3a1ca058aa1fed24721aa3b7553cb", "patch": "@@ -13,6 +13,7 @@\n #include \"rustllvm.h\"\n \n #include \"llvm/Support/CBindingWrapping.h\"\n+#include \"llvm/Support/FileSystem.h\"\n #include \"llvm/Target/TargetLibraryInfo.h\"\n #include \"llvm/Transforms/IPO/PassManagerBuilder.h\"\n "}, {"sha": "3661d152d59995d9a64353d65a3d1026d3498d66", "filename": "src/rustllvm/RustWrapper.cpp", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/90eeb92e10d3a1ca058aa1fed24721aa3b7553cb/src%2Frustllvm%2FRustWrapper.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/90eeb92e10d3a1ca058aa1fed24721aa3b7553cb/src%2Frustllvm%2FRustWrapper.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustllvm%2FRustWrapper.cpp?ref=90eeb92e10d3a1ca058aa1fed24721aa3b7553cb", "patch": "@@ -119,8 +119,20 @@ extern \"C\" void LLVMAddColdAttribute(LLVMValueRef Fn) {\n   Function *A = unwrap<Function>(Fn);\n   A->addAttribute(AttributeSet::FunctionIndex, Attribute::Cold);\n }\n+\n+extern \"C\" void LLVMAddNonNullAttribute(LLVMValueRef Arg) {\n+  Argument *A = unwrap<Argument>(Arg);\n+  A->addAttr(AttributeSet::get(A->getContext(), A->getArgNo() + 1, Attribute::NonNull));\n+}\n+\n+extern \"C\" void LLVMAddNonNullReturnAttribute(LLVMValueRef Fn) {\n+  Function *A = unwrap<Function>(Fn);\n+  A->addAttribute(AttributeSet::ReturnIndex, Attribute::NonNull);\n+}\n #else\n extern \"C\" void LLVMAddColdAttribute(LLVMValueRef Fn) {}\n+extern \"C\" void LLVMAddNonNullAttribute(LLVMValueRef Arg) {}\n+extern \"C\" void LLVMAddNonNullReturnAttribute(LLVMValueRef Fn) {}\n #endif\n \n extern \"C\" LLVMValueRef LLVMBuildAtomicLoad(LLVMBuilderRef B,"}, {"sha": "4e599ad115db36dc9e66602a112073caae7ce50d", "filename": "src/rustllvm/llvm-auto-clean-trigger", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/90eeb92e10d3a1ca058aa1fed24721aa3b7553cb/src%2Frustllvm%2Fllvm-auto-clean-trigger", "raw_url": "https://github.com/rust-lang/rust/raw/90eeb92e10d3a1ca058aa1fed24721aa3b7553cb/src%2Frustllvm%2Fllvm-auto-clean-trigger", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustllvm%2Fllvm-auto-clean-trigger?ref=90eeb92e10d3a1ca058aa1fed24721aa3b7553cb", "patch": "@@ -1,4 +1,4 @@\n # If this file is modified, then llvm will be forcibly cleaned and then rebuilt.\n # The actual contents of this file do not matter, but to trigger a change on the\n # build bots then the contents should be changed so git updates the mtime.\n-2014-04-14\n+2014-05-20"}]}