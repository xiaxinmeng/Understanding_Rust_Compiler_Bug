{"sha": "cdfdb99c9ecd3cc9bd4ac1ad30786ad318518e4e", "node_id": "C_kwDOAAsO6NoAKGNkZmRiOTljOWVjZDNjYzliZDRhYzFhZDMwNzg2YWQzMTg1MThlNGU", "commit": {"author": {"name": "Tomasz Mi\u0105sko", "email": "tomasz.miasko@gmail.com", "date": "2022-04-30T00:00:00Z"}, "committer": {"name": "Tomasz Mi\u0105sko", "email": "tomasz.miasko@gmail.com", "date": "2022-04-30T14:40:49Z"}, "message": "Add element iterator for ChunkedBitSet", "tree": {"sha": "010abf6846917e1274a020d6325c12d00a3becd3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/010abf6846917e1274a020d6325c12d00a3becd3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cdfdb99c9ecd3cc9bd4ac1ad30786ad318518e4e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cdfdb99c9ecd3cc9bd4ac1ad30786ad318518e4e", "html_url": "https://github.com/rust-lang/rust/commit/cdfdb99c9ecd3cc9bd4ac1ad30786ad318518e4e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cdfdb99c9ecd3cc9bd4ac1ad30786ad318518e4e/comments", "author": {"login": "tmiasko", "id": 51362316, "node_id": "MDQ6VXNlcjUxMzYyMzE2", "avatar_url": "https://avatars.githubusercontent.com/u/51362316?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tmiasko", "html_url": "https://github.com/tmiasko", "followers_url": "https://api.github.com/users/tmiasko/followers", "following_url": "https://api.github.com/users/tmiasko/following{/other_user}", "gists_url": "https://api.github.com/users/tmiasko/gists{/gist_id}", "starred_url": "https://api.github.com/users/tmiasko/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tmiasko/subscriptions", "organizations_url": "https://api.github.com/users/tmiasko/orgs", "repos_url": "https://api.github.com/users/tmiasko/repos", "events_url": "https://api.github.com/users/tmiasko/events{/privacy}", "received_events_url": "https://api.github.com/users/tmiasko/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tmiasko", "id": 51362316, "node_id": "MDQ6VXNlcjUxMzYyMzE2", "avatar_url": "https://avatars.githubusercontent.com/u/51362316?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tmiasko", "html_url": "https://github.com/tmiasko", "followers_url": "https://api.github.com/users/tmiasko/followers", "following_url": "https://api.github.com/users/tmiasko/following{/other_user}", "gists_url": "https://api.github.com/users/tmiasko/gists{/gist_id}", "starred_url": "https://api.github.com/users/tmiasko/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tmiasko/subscriptions", "organizations_url": "https://api.github.com/users/tmiasko/orgs", "repos_url": "https://api.github.com/users/tmiasko/repos", "events_url": "https://api.github.com/users/tmiasko/events{/privacy}", "received_events_url": "https://api.github.com/users/tmiasko/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "76d4862fdd131b6f79dc0a31857f888d26bcdb27", "url": "https://api.github.com/repos/rust-lang/rust/commits/76d4862fdd131b6f79dc0a31857f888d26bcdb27", "html_url": "https://github.com/rust-lang/rust/commit/76d4862fdd131b6f79dc0a31857f888d26bcdb27"}], "stats": {"total": 82, "additions": 82, "deletions": 0}, "files": [{"sha": "059755a743b6676f9db2cba0b79fb3acd13329e6", "filename": "compiler/rustc_index/src/bit_set.rs", "status": "modified", "additions": 48, "deletions": 0, "changes": 48, "blob_url": "https://github.com/rust-lang/rust/blob/cdfdb99c9ecd3cc9bd4ac1ad30786ad318518e4e/compiler%2Frustc_index%2Fsrc%2Fbit_set.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cdfdb99c9ecd3cc9bd4ac1ad30786ad318518e4e/compiler%2Frustc_index%2Fsrc%2Fbit_set.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_index%2Fsrc%2Fbit_set.rs?ref=cdfdb99c9ecd3cc9bd4ac1ad30786ad318518e4e", "patch": "@@ -479,6 +479,11 @@ impl<T: Idx> ChunkedBitSet<T> {\n         }\n     }\n \n+    #[inline]\n+    pub fn iter(&self) -> ChunkedBitIter<'_, T> {\n+        ChunkedBitIter::new(self)\n+    }\n+\n     /// Insert `elem`. Returns whether the set has changed.\n     pub fn insert(&mut self, elem: T) -> bool {\n         assert!(elem.index() < self.domain_size);\n@@ -697,6 +702,49 @@ impl<T> Clone for ChunkedBitSet<T> {\n     }\n }\n \n+pub struct ChunkedBitIter<'a, T: Idx> {\n+    index: usize,\n+    bitset: &'a ChunkedBitSet<T>,\n+}\n+\n+impl<'a, T: Idx> ChunkedBitIter<'a, T> {\n+    #[inline]\n+    fn new(bitset: &'a ChunkedBitSet<T>) -> ChunkedBitIter<'a, T> {\n+        ChunkedBitIter { index: 0, bitset }\n+    }\n+}\n+\n+impl<'a, T: Idx> Iterator for ChunkedBitIter<'a, T> {\n+    type Item = T;\n+    fn next(&mut self) -> Option<T> {\n+        while self.index < self.bitset.domain_size() {\n+            let elem = T::new(self.index);\n+            let chunk = &self.bitset.chunks[chunk_index(elem)];\n+            match &chunk {\n+                Zeros(chunk_domain_size) => {\n+                    self.index += *chunk_domain_size as usize;\n+                }\n+                Ones(_chunk_domain_size) => {\n+                    self.index += 1;\n+                    return Some(elem);\n+                }\n+                Mixed(_chunk_domain_size, _, words) => loop {\n+                    let elem = T::new(self.index);\n+                    self.index += 1;\n+                    let (word_index, mask) = chunk_word_index_and_mask(elem);\n+                    if (words[word_index] & mask) != 0 {\n+                        return Some(elem);\n+                    }\n+                    if self.index % CHUNK_BITS == 0 {\n+                        break;\n+                    }\n+                },\n+            }\n+        }\n+        None\n+    }\n+}\n+\n impl Chunk {\n     #[cfg(test)]\n     fn assert_valid(&self) {"}, {"sha": "cfc891e97a32bbf4f79b041b794834686f67de96", "filename": "compiler/rustc_index/src/bit_set/tests.rs", "status": "modified", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/cdfdb99c9ecd3cc9bd4ac1ad30786ad318518e4e/compiler%2Frustc_index%2Fsrc%2Fbit_set%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cdfdb99c9ecd3cc9bd4ac1ad30786ad318518e4e/compiler%2Frustc_index%2Fsrc%2Fbit_set%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_index%2Fsrc%2Fbit_set%2Ftests.rs?ref=cdfdb99c9ecd3cc9bd4ac1ad30786ad318518e4e", "patch": "@@ -342,6 +342,40 @@ fn chunked_bitset() {\n     b10000b.assert_valid();\n }\n \n+#[test]\n+fn chunked_bitset_iter() {\n+    fn with_elements(elements: &[usize], domain_size: usize) -> ChunkedBitSet<usize> {\n+        let mut s = ChunkedBitSet::new_empty(domain_size);\n+        for &e in elements {\n+            s.insert(e);\n+        }\n+        s\n+    }\n+\n+    // Empty\n+    let vec: Vec<usize> = Vec::new();\n+    let bit = with_elements(&vec, 9000);\n+    assert_eq!(vec, bit.iter().collect::<Vec<_>>());\n+\n+    // Filled\n+    let n = 10000;\n+    let vec: Vec<usize> = (0..n).collect();\n+    let bit = with_elements(&vec, n);\n+    assert_eq!(vec, bit.iter().collect::<Vec<_>>());\n+\n+    // Filled with trailing zeros\n+    let n = 10000;\n+    let vec: Vec<usize> = (0..n).collect();\n+    let bit = with_elements(&vec, 2 * n);\n+    assert_eq!(vec, bit.iter().collect::<Vec<_>>());\n+\n+    // Mixed\n+    let n = 12345;\n+    let vec: Vec<usize> = vec![0, 1, 2, 2010, 2047, 2099, 6000, 6002, 6004];\n+    let bit = with_elements(&vec, n);\n+    assert_eq!(vec, bit.iter().collect::<Vec<_>>());\n+}\n+\n #[test]\n fn grow() {\n     let mut set: GrowableBitSet<usize> = GrowableBitSet::with_capacity(65);"}]}