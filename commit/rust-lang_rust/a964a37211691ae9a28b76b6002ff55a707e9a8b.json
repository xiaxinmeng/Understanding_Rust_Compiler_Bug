{"sha": "a964a37211691ae9a28b76b6002ff55a707e9a8b", "node_id": "C_kwDOAAsO6NoAKGE5NjRhMzcyMTE2OTFhZTlhMjhiNzZiNjAwMmZmNTVhNzA3ZTlhOGI", "commit": {"author": {"name": "Scott McMurray", "email": "scottmcm@users.noreply.github.com", "date": "2022-11-29T08:24:15Z"}, "committer": {"name": "Scott McMurray", "email": "scottmcm@users.noreply.github.com", "date": "2022-11-29T08:24:15Z"}, "message": "Send `VecDeque::from_iter` via `Vec::from_iter`\n\nSince it's O(1) to convert between them now, might as well reuse the logic.\n\nMostly for the various specializations it does, but might also save some monomorphization work if, say, people collect slice iterators into both `Vec`s and `VecDeque`s.", "tree": {"sha": "aeb9f17d3e21752037330cab238f235f81aec1bd", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/aeb9f17d3e21752037330cab238f235f81aec1bd"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a964a37211691ae9a28b76b6002ff55a707e9a8b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a964a37211691ae9a28b76b6002ff55a707e9a8b", "html_url": "https://github.com/rust-lang/rust/commit/a964a37211691ae9a28b76b6002ff55a707e9a8b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a964a37211691ae9a28b76b6002ff55a707e9a8b/comments", "author": {"login": "scottmcm", "id": 18526288, "node_id": "MDQ6VXNlcjE4NTI2Mjg4", "avatar_url": "https://avatars.githubusercontent.com/u/18526288?v=4", "gravatar_id": "", "url": "https://api.github.com/users/scottmcm", "html_url": "https://github.com/scottmcm", "followers_url": "https://api.github.com/users/scottmcm/followers", "following_url": "https://api.github.com/users/scottmcm/following{/other_user}", "gists_url": "https://api.github.com/users/scottmcm/gists{/gist_id}", "starred_url": "https://api.github.com/users/scottmcm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/scottmcm/subscriptions", "organizations_url": "https://api.github.com/users/scottmcm/orgs", "repos_url": "https://api.github.com/users/scottmcm/repos", "events_url": "https://api.github.com/users/scottmcm/events{/privacy}", "received_events_url": "https://api.github.com/users/scottmcm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "scottmcm", "id": 18526288, "node_id": "MDQ6VXNlcjE4NTI2Mjg4", "avatar_url": "https://avatars.githubusercontent.com/u/18526288?v=4", "gravatar_id": "", "url": "https://api.github.com/users/scottmcm", "html_url": "https://github.com/scottmcm", "followers_url": "https://api.github.com/users/scottmcm/followers", "following_url": "https://api.github.com/users/scottmcm/following{/other_user}", "gists_url": "https://api.github.com/users/scottmcm/gists{/gist_id}", "starred_url": "https://api.github.com/users/scottmcm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/scottmcm/subscriptions", "organizations_url": "https://api.github.com/users/scottmcm/orgs", "repos_url": "https://api.github.com/users/scottmcm/repos", "events_url": "https://api.github.com/users/scottmcm/events{/privacy}", "received_events_url": "https://api.github.com/users/scottmcm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1ef685ea39280cc4a4a32f7c3c586d2ce946e8f0", "url": "https://api.github.com/repos/rust-lang/rust/commits/1ef685ea39280cc4a4a32f7c3c586d2ce946e8f0", "html_url": "https://github.com/rust-lang/rust/commit/1ef685ea39280cc4a4a32f7c3c586d2ce946e8f0"}], "stats": {"total": 17, "additions": 12, "deletions": 5}, "files": [{"sha": "a477bab068b7e0ef13dbb8cf5cbdc87774bce0bc", "filename": "library/alloc/src/collections/vec_deque/mod.rs", "status": "modified", "additions": 12, "deletions": 5, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/a964a37211691ae9a28b76b6002ff55a707e9a8b/library%2Falloc%2Fsrc%2Fcollections%2Fvec_deque%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a964a37211691ae9a28b76b6002ff55a707e9a8b/library%2Falloc%2Fsrc%2Fcollections%2Fvec_deque%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Fsrc%2Fcollections%2Fvec_deque%2Fmod.rs?ref=a964a37211691ae9a28b76b6002ff55a707e9a8b", "patch": "@@ -2700,12 +2700,18 @@ impl<T, A: Allocator> IndexMut<usize> for VecDeque<T, A> {\n \n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n impl<T> FromIterator<T> for VecDeque<T> {\n+    #[inline]\n     fn from_iter<I: IntoIterator<Item = T>>(iter: I) -> VecDeque<T> {\n-        let iterator = iter.into_iter();\n-        let (lower, _) = iterator.size_hint();\n-        let mut deq = VecDeque::with_capacity(lower);\n-        deq.extend(iterator);\n-        deq\n+        // Since converting is O(1) now, might as well re-use that logic\n+        // (including things like the `vec::IntoIter`\u2192`Vec` specialization)\n+        // especially as that could save us some monomorphiziation work\n+        // if one uses the same iterators (like slice ones) with both.\n+        return from_iter_via_vec(iter.into_iter());\n+\n+        #[inline]\n+        fn from_iter_via_vec<U>(iter: impl Iterator<Item = U>) -> VecDeque<U> {\n+            Vec::from_iter(iter).into()\n+        }\n     }\n }\n \n@@ -2792,6 +2798,7 @@ impl<T, A: Allocator> From<Vec<T, A>> for VecDeque<T, A> {\n     /// In its current implementation, this is a very cheap\n     /// conversion. This isn't yet a guarantee though, and\n     /// shouldn't be relied on.\n+    #[inline]\n     fn from(other: Vec<T, A>) -> Self {\n         let (ptr, len, cap, alloc) = other.into_raw_parts_with_alloc();\n         Self { head: 0, len, buf: unsafe { RawVec::from_raw_parts_in(ptr, cap, alloc) } }"}]}