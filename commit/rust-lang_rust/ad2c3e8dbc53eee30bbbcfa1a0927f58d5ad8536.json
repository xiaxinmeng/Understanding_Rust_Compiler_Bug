{"sha": "ad2c3e8dbc53eee30bbbcfa1a0927f58d5ad8536", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFkMmMzZThkYmM1M2VlZTMwYmJiY2ZhMWEwOTI3ZjU4ZDVhZDg1MzY=", "commit": {"author": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2015-01-21T17:14:37Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2015-01-21T17:14:37Z"}, "message": "rollup merge of #21391: klutzy/rt-time-cleanup\n\nThey are unused since libtime is gone.\n\ncc #20861", "tree": {"sha": "6055eaef12298c5ab82a7ac228c35b92efbbe937", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6055eaef12298c5ab82a7ac228c35b92efbbe937"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ad2c3e8dbc53eee30bbbcfa1a0927f58d5ad8536", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ad2c3e8dbc53eee30bbbcfa1a0927f58d5ad8536", "html_url": "https://github.com/rust-lang/rust/commit/ad2c3e8dbc53eee30bbbcfa1a0927f58d5ad8536", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ad2c3e8dbc53eee30bbbcfa1a0927f58d5ad8536/comments", "author": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8b10733e7a5fd92cdc4fb44e7c808dc47e28e3f2", "url": "https://api.github.com/repos/rust-lang/rust/commits/8b10733e7a5fd92cdc4fb44e7c808dc47e28e3f2", "html_url": "https://github.com/rust-lang/rust/commit/8b10733e7a5fd92cdc4fb44e7c808dc47e28e3f2"}, {"sha": "d2623f2a9c2fd9ca4734cdcc25e61f66c479112a", "url": "https://api.github.com/repos/rust-lang/rust/commits/d2623f2a9c2fd9ca4734cdcc25e61f66c479112a", "html_url": "https://github.com/rust-lang/rust/commit/d2623f2a9c2fd9ca4734cdcc25e61f66c479112a"}], "stats": {"total": 138, "additions": 0, "deletions": 138}, "files": [{"sha": "03cd3fd6b88ea45fcec630a09da75ff76fe4fc31", "filename": "src/rt/rust_builtin.c", "status": "modified", "additions": 0, "deletions": 138, "changes": 138, "blob_url": "https://github.com/rust-lang/rust/blob/ad2c3e8dbc53eee30bbbcfa1a0927f58d5ad8536/src%2Frt%2Frust_builtin.c", "raw_url": "https://github.com/rust-lang/rust/raw/ad2c3e8dbc53eee30bbbcfa1a0927f58d5ad8536/src%2Frt%2Frust_builtin.c", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_builtin.c?ref=ad2c3e8dbc53eee30bbbcfa1a0927f58d5ad8536", "patch": "@@ -41,29 +41,6 @@\n //include valgrind.h after stdint.h so that uintptr_t is defined for msys2 w64\n #include \"valgrind/valgrind.h\"\n \n-#ifdef __ANDROID__\n-time_t\n-timegm(struct tm *tm)\n-{\n-    time_t ret;\n-    char *tz;\n-\n-    tz = getenv(\"TZ\");\n-    if (tz)\n-        tz = strdup(tz);\n-    setenv(\"TZ\", \"\", 1);\n-    tzset();\n-    ret = mktime(tm);\n-    if (tz) {\n-        setenv(\"TZ\", tz, 1);\n-        free(tz);\n-    } else\n-        unsetenv(\"TZ\");\n-    tzset();\n-    return ret;\n-}\n-#endif\n-\n #ifdef __APPLE__\n #if (TARGET_OS_IPHONE)\n extern char **environ;\n@@ -100,121 +77,6 @@ rust_list_dir_val(struct dirent* entry_ptr) {\n }\n #endif\n \n-typedef struct {\n-    int32_t tm_sec;\n-    int32_t tm_min;\n-    int32_t tm_hour;\n-    int32_t tm_mday;\n-    int32_t tm_mon;\n-    int32_t tm_year;\n-    int32_t tm_wday;\n-    int32_t tm_yday;\n-    int32_t tm_isdst;\n-    int32_t tm_gmtoff;\n-    int32_t tm_nsec;\n-} rust_tm;\n-\n-void rust_tm_to_tm(rust_tm* in_tm, struct tm* out_tm) {\n-    memset(out_tm, 0, sizeof(struct tm));\n-    out_tm->tm_sec = in_tm->tm_sec;\n-    out_tm->tm_min = in_tm->tm_min;\n-    out_tm->tm_hour = in_tm->tm_hour;\n-    out_tm->tm_mday = in_tm->tm_mday;\n-    out_tm->tm_mon = in_tm->tm_mon;\n-    out_tm->tm_year = in_tm->tm_year;\n-    out_tm->tm_wday = in_tm->tm_wday;\n-    out_tm->tm_yday = in_tm->tm_yday;\n-    out_tm->tm_isdst = in_tm->tm_isdst;\n-}\n-\n-void tm_to_rust_tm(struct tm* in_tm,\n-                   rust_tm* out_tm,\n-                   int32_t gmtoff,\n-                   int32_t nsec) {\n-    out_tm->tm_sec = in_tm->tm_sec;\n-    out_tm->tm_min = in_tm->tm_min;\n-    out_tm->tm_hour = in_tm->tm_hour;\n-    out_tm->tm_mday = in_tm->tm_mday;\n-    out_tm->tm_mon = in_tm->tm_mon;\n-    out_tm->tm_year = in_tm->tm_year;\n-    out_tm->tm_wday = in_tm->tm_wday;\n-    out_tm->tm_yday = in_tm->tm_yday;\n-    out_tm->tm_isdst = in_tm->tm_isdst;\n-    out_tm->tm_gmtoff = gmtoff;\n-    out_tm->tm_nsec = nsec;\n-}\n-\n-#if defined(__WIN32__)\n-#define TZSET() _tzset()\n-#if defined(_MSC_VER) && (_MSC_VER >= 1400)\n-#define GMTIME(clock, result) gmtime_s((result), (clock))\n-#define LOCALTIME(clock, result) localtime_s((result), (clock))\n-#define TIMEGM(result) _mkgmtime64(result)\n-#else\n-struct tm* GMTIME(const time_t *clock, struct tm *result) {\n-    struct tm* t = gmtime(clock);\n-    if (t == NULL || result == NULL) { return NULL; }\n-    *result = *t;\n-    return result;\n-}\n-struct tm* LOCALTIME(const time_t *clock, struct tm *result) {\n-    struct tm* t = localtime(clock);\n-    if (t == NULL || result == NULL) { return NULL; }\n-    *result = *t;\n-    return result;\n-}\n-#define TIMEGM(result) mktime((result)) - _timezone\n-#endif\n-#else\n-#define TZSET() tzset()\n-#define GMTIME(clock, result) gmtime_r((clock), (result))\n-#define LOCALTIME(clock, result) localtime_r((clock), (result))\n-#define TIMEGM(result) timegm(result)\n-#endif\n-\n-void\n-rust_tzset() {\n-    TZSET();\n-}\n-\n-void\n-rust_gmtime(int64_t sec, int32_t nsec, rust_tm *timeptr) {\n-    struct tm tm;\n-    time_t s = sec;\n-    GMTIME(&s, &tm);\n-\n-    tm_to_rust_tm(&tm, timeptr, 0, nsec);\n-}\n-\n-void\n-rust_localtime(int64_t sec, int32_t nsec, rust_tm *timeptr) {\n-    struct tm tm;\n-    time_t s = sec;\n-    LOCALTIME(&s, &tm);\n-\n-#if defined(__WIN32__)\n-    int32_t gmtoff = -timezone;\n-#else\n-    int32_t gmtoff = tm.tm_gmtoff;\n-#endif\n-\n-    tm_to_rust_tm(&tm, timeptr, gmtoff, nsec);\n-}\n-\n-int64_t\n-rust_timegm(rust_tm* timeptr) {\n-    struct tm t;\n-    rust_tm_to_tm(timeptr, &t);\n-    return TIMEGM(&t);\n-}\n-\n-int64_t\n-rust_mktime(rust_tm* timeptr) {\n-    struct tm t;\n-    rust_tm_to_tm(timeptr, &t);\n-    return mktime(&t);\n-}\n-\n #ifndef _WIN32\n \n DIR*"}]}