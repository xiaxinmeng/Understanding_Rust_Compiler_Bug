{"sha": "3efb7f54593c19dad53c1f2df13c5b446921fe11", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNlZmI3ZjU0NTkzYzE5ZGFkNTNjMWYyZGYxM2M1YjQ0NjkyMWZlMTE=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2011-04-09T01:13:49Z"}, "committer": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2011-04-09T01:14:31Z"}, "message": "rustc: Push down types for all expressions; add logic for recv and send", "tree": {"sha": "634b224db0b8e8e102e9520375c5d471e29d9f15", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/634b224db0b8e8e102e9520375c5d471e29d9f15"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3efb7f54593c19dad53c1f2df13c5b446921fe11", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3efb7f54593c19dad53c1f2df13c5b446921fe11", "html_url": "https://github.com/rust-lang/rust/commit/3efb7f54593c19dad53c1f2df13c5b446921fe11", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3efb7f54593c19dad53c1f2df13c5b446921fe11/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "35573144c59c747d572dee31975d61faf7b1eaef", "url": "https://api.github.com/repos/rust-lang/rust/commits/35573144c59c747d572dee31975d61faf7b1eaef", "html_url": "https://github.com/rust-lang/rust/commit/35573144c59c747d572dee31975d61faf7b1eaef"}], "stats": {"total": 28, "additions": 26, "deletions": 2}, "files": [{"sha": "897b834dc903c33c808f54fae0abefc61ebf1dac", "filename": "src/comp/middle/ty.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3efb7f54593c19dad53c1f2df13c5b446921fe11/src%2Fcomp%2Fmiddle%2Fty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3efb7f54593c19dad53c1f2df13c5b446921fe11/src%2Fcomp%2Fmiddle%2Fty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Fty.rs?ref=3efb7f54593c19dad53c1f2df13c5b446921fe11", "patch": "@@ -792,6 +792,8 @@ fn expr_ty(@ast.expr expr) -> @t {\n         case (ast.expr_recv(_, _, ?ann))      { ret ann_to_type(ann); }\n \n         case (ast.expr_fail(_))               { ret plain_ty(ty_nil); }\n+        case (ast.expr_break(_))              { ret plain_ty(ty_nil); }\n+        case (ast.expr_cont(_))               { ret plain_ty(ty_nil); }\n         case (ast.expr_log(_,_))              { ret plain_ty(ty_nil); }\n         case (ast.expr_check_expr(_,_))       { ret plain_ty(ty_nil); }\n         case (ast.expr_ret(_,_))              { ret plain_ty(ty_nil); }"}, {"sha": "58ad5cf0ba135b362780b81f91db5c97135e87b8", "filename": "src/comp/middle/typeck.rs", "status": "modified", "additions": 24, "deletions": 2, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/3efb7f54593c19dad53c1f2df13c5b446921fe11/src%2Fcomp%2Fmiddle%2Ftypeck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3efb7f54593c19dad53c1f2df13c5b446921fe11/src%2Fcomp%2Fmiddle%2Ftypeck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Ftypeck.rs?ref=3efb7f54593c19dad53c1f2df13c5b446921fe11", "patch": "@@ -1437,9 +1437,28 @@ mod Pushdown {\n                 e_1 = ast.expr_alt(discrim, arms_1, triv_ann(t));\n             }\n \n+            case (ast.expr_recv(?lval_0, ?expr_0, ?ann)) {\n+                auto lval_1 = pushdown_expr(fcx, next_ty_var(fcx.ccx),\n+                                            lval_0);\n+                auto t = expr_ty(lval_1);\n+                auto expr_1 = pushdown_expr(fcx, plain_ty(ty.ty_port(t)),\n+                                            expr_0);\n+                e_1 = ast.expr_recv(lval_1, expr_1, ann);\n+            }\n+\n+            case (ast.expr_send(?lval_0, ?expr_0, ?ann)) {\n+                auto expr_1 = pushdown_expr(fcx, next_ty_var(fcx.ccx),\n+                                            expr_0);\n+                auto t = expr_ty(expr_1);\n+                auto lval_1 = pushdown_expr(fcx, plain_ty(ty.ty_chan(t)),\n+                                            lval_0);\n+                e_1 = ast.expr_send(lval_1, expr_1, ann);\n+            }\n+\n             case (_) {\n                 fcx.ccx.sess.span_unimpl(e.span,\n-                    \"type unification for expression variant\");\n+                    #fmt(\"type unification for expression variant: %s\",\n+                         pretty.pprust.expr_to_str(e)));\n                 fail;\n             }\n         }\n@@ -2591,6 +2610,7 @@ fn check_stmt(&@fn_ctxt fcx, &@ast.stmt stmt) -> @ast.stmt {\n \n         case (ast.stmt_expr(?expr,?a)) {\n             auto expr_t = check_expr(fcx, expr);\n+            expr_t = Pushdown.pushdown_expr(fcx, expr_ty(expr_t), expr_t);\n             ret @fold.respan[ast.stmt_](stmt.span, ast.stmt_expr(expr_t, a));\n         }\n     }\n@@ -2608,7 +2628,9 @@ fn check_block(&@fn_ctxt fcx, &ast.block block) -> ast.block {\n     alt (block.node.expr) {\n         case (none[@ast.expr]) { /* empty */ }\n         case (some[@ast.expr](?e)) {\n-            expr = some[@ast.expr](check_expr(fcx, e));\n+            auto expr_t = check_expr(fcx, e);\n+            expr_t = Pushdown.pushdown_expr(fcx, expr_ty(expr_t), expr_t);\n+            expr = some[@ast.expr](expr_t);\n         }\n     }\n "}]}