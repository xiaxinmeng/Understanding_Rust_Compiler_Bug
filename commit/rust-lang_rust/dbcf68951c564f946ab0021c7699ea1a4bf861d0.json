{"sha": "dbcf68951c564f946ab0021c7699ea1a4bf861d0", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRiY2Y2ODk1MWM1NjRmOTQ2YWIwMDIxYzc2OTllYTFhNGJmODYxZDA=", "commit": {"author": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2018-12-20T12:28:55Z"}, "committer": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2018-12-24T17:19:36Z"}, "message": "Add no-crate filter option on rustdoc", "tree": {"sha": "9cece544cb93236c1ee9fd9ec562e423bace7299", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9cece544cb93236c1ee9fd9ec562e423bace7299"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/dbcf68951c564f946ab0021c7699ea1a4bf861d0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/dbcf68951c564f946ab0021c7699ea1a4bf861d0", "html_url": "https://github.com/rust-lang/rust/commit/dbcf68951c564f946ab0021c7699ea1a4bf861d0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/dbcf68951c564f946ab0021c7699ea1a4bf861d0/comments", "author": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "committer": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "50f3d6eccb85a24a02b7c1daf5e242768dddf3b5", "url": "https://api.github.com/repos/rust-lang/rust/commits/50f3d6eccb85a24a02b7c1daf5e242768dddf3b5", "html_url": "https://github.com/rust-lang/rust/commit/50f3d6eccb85a24a02b7c1daf5e242768dddf3b5"}], "stats": {"total": 97, "additions": 78, "deletions": 19}, "files": [{"sha": "7962b45907a7d241c986459592e4a10845c5af16", "filename": "src/librustdoc/config.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/dbcf68951c564f946ab0021c7699ea1a4bf861d0/src%2Flibrustdoc%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dbcf68951c564f946ab0021c7699ea1a4bf861d0/src%2Flibrustdoc%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fconfig.rs?ref=dbcf68951c564f946ab0021c7699ea1a4bf861d0", "patch": "@@ -195,6 +195,9 @@ pub struct RenderOptions {\n     /// If present, playground URL to use in the \"Run\" button added to code samples generated from\n     /// standalone Markdown files. If not present, `playground_url` is used.\n     pub markdown_playground_url: Option<String>,\n+    /// If false, the `select` element to have search filtering by crates on rendered docs\n+    /// won't be generated.\n+    pub generate_search_filter: bool,\n }\n \n impl Options {\n@@ -437,6 +440,7 @@ impl Options {\n         let crate_version = matches.opt_str(\"crate-version\");\n         let enable_index_page = matches.opt_present(\"enable-index-page\") || index_page.is_some();\n         let static_root_path = matches.opt_str(\"static-root-path\");\n+        let generate_search_filter = !matches.opt_present(\"disable-per-crate-search\");\n \n         let (lint_opts, describe_lints, lint_cap) = get_cmd_lint_options(matches, error_format);\n \n@@ -479,6 +483,7 @@ impl Options {\n                 markdown_no_toc,\n                 markdown_css,\n                 markdown_playground_url,\n+                generate_search_filter,\n             }\n         })\n     }"}, {"sha": "9caeec39ab104d627699c7d9948f404f3f90a705", "filename": "src/librustdoc/html/layout.rs", "status": "modified", "additions": 17, "deletions": 8, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/dbcf68951c564f946ab0021c7699ea1a4bf861d0/src%2Flibrustdoc%2Fhtml%2Flayout.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dbcf68951c564f946ab0021c7699ea1a4bf861d0/src%2Flibrustdoc%2Fhtml%2Flayout.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Flayout.rs?ref=dbcf68951c564f946ab0021c7699ea1a4bf861d0", "patch": "@@ -35,10 +35,15 @@ pub struct Page<'a> {\n }\n \n pub fn render<T: fmt::Display, S: fmt::Display>(\n-    dst: &mut dyn io::Write, layout: &Layout, page: &Page, sidebar: &S, t: &T,\n-    css_file_extension: bool, themes: &[PathBuf])\n-    -> io::Result<()>\n-{\n+    dst: &mut dyn io::Write,\n+    layout: &Layout,\n+    page: &Page,\n+    sidebar: &S,\n+    t: &T,\n+    css_file_extension: bool,\n+    themes: &[PathBuf],\n+    generate_search_filter: bool,\n+) -> io::Result<()> {\n     let static_root_path = page.static_root_path.unwrap_or(page.root_path);\n     write!(dst,\n \"<!DOCTYPE html>\\\n@@ -91,10 +96,7 @@ pub fn render<T: fmt::Display, S: fmt::Display>(\n     <nav class=\\\"sub\\\">\\\n         <form class=\\\"search-form js-only\\\">\\\n             <div class=\\\"search-container\\\">\\\n-                <div>\\\n-                    <select id=\\\"crate-search\\\">\\\n-                        <option value=\\\"All crates\\\">All crates</option>\\\n-                    </select>\\\n+                <div>{filter_crates}\\\n                     <input class=\\\"search-input\\\" name=\\\"search\\\" \\\n                            autocomplete=\\\"off\\\" \\\n                            spellcheck=\\\"false\\\" \\\n@@ -224,6 +226,13 @@ pub fn render<T: fmt::Display, S: fmt::Display>(\n                 root_path=page.root_path,\n                 extra_script=e)\n     }).collect::<String>(),\n+    filter_crates=if generate_search_filter {\n+        \"<select id=\\\"crate-search\\\">\\\n+            <option value=\\\"All crates\\\">All crates</option>\\\n+        </select>\"\n+    } else {\n+        \"\"\n+    },\n     )\n }\n "}, {"sha": "5974cc114511776048b291114858f1501d6dad74", "filename": "src/librustdoc/html/render.rs", "status": "modified", "additions": 15, "deletions": 5, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/dbcf68951c564f946ab0021c7699ea1a4bf861d0/src%2Flibrustdoc%2Fhtml%2Frender.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dbcf68951c564f946ab0021c7699ea1a4bf861d0/src%2Flibrustdoc%2Fhtml%2Frender.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender.rs?ref=dbcf68951c564f946ab0021c7699ea1a4bf861d0", "patch": "@@ -143,6 +143,9 @@ struct SharedContext {\n     /// Optional path string to be used to load static files on output pages. If not set, uses\n     /// combinations of `../` to reach the documentation root.\n     pub static_root_path: Option<String>,\n+    /// If false, the `select` element to have search filtering by crates on rendered docs\n+    /// won't be generated.\n+    pub generate_search_filter: bool,\n }\n \n impl SharedContext {\n@@ -510,6 +513,7 @@ pub fn run(mut krate: clean::Crate,\n         extern_html_root_urls,\n         resource_suffix,\n         static_root_path,\n+        generate_search_filter,\n         ..\n     } = options;\n \n@@ -538,6 +542,7 @@ pub fn run(mut krate: clean::Crate,\n         themes,\n         resource_suffix,\n         static_root_path,\n+        generate_search_filter,\n     };\n \n     // If user passed in `--playground-url` arg, we fill in crate name here\n@@ -1109,7 +1114,8 @@ themePicker.onblur = handleThemeButtonsBlur;\n             try_err!(layout::render(&mut w, &cx.shared.layout,\n                                     &page, &(\"\"), &content,\n                                     cx.shared.css_file_extension.is_some(),\n-                                    &cx.shared.themes), &dst);\n+                                    &cx.shared.themes,\n+                                    cx.shared.generate_search_filter), &dst);\n             try_err!(w.flush(), &dst);\n         }\n     }\n@@ -1384,7 +1390,8 @@ impl<'a> SourceCollector<'a> {\n         layout::render(&mut w, &self.scx.layout,\n                        &page, &(\"\"), &Source(contents),\n                        self.scx.css_file_extension.is_some(),\n-                       &self.scx.themes)?;\n+                       &self.scx.themes,\n+                       self.scx.generate_search_filter)?;\n         w.flush()?;\n         self.scx.local_sources.insert(p.clone(), href);\n         Ok(())\n@@ -1986,7 +1993,8 @@ impl Context {\n         try_err!(layout::render(&mut w, &self.shared.layout,\n                                 &page, &sidebar, &all,\n                                 self.shared.css_file_extension.is_some(),\n-                                &self.shared.themes),\n+                                &self.shared.themes,\n+                                self.shared.generate_search_filter),\n                  &final_file);\n \n         // Generating settings page.\n@@ -2006,7 +2014,8 @@ impl Context {\n         try_err!(layout::render(&mut w, &layout,\n                                 &page, &sidebar, &settings,\n                                 self.shared.css_file_extension.is_some(),\n-                                &themes),\n+                                &themes,\n+                                self.shared.generate_search_filter),\n                  &settings_file);\n \n         Ok(())\n@@ -2067,7 +2076,8 @@ impl Context {\n                            &Sidebar{ cx: self, item: it },\n                            &Item{ cx: self, item: it },\n                            self.shared.css_file_extension.is_some(),\n-                           &self.shared.themes)?;\n+                           &self.shared.themes,\n+                           self.shared.generate_search_filter)?;\n         } else {\n             let mut url = self.root_path();\n             if let Some(&(ref names, ty)) = cache().paths.get(&it.def_id) {"}, {"sha": "3052e30afb1c0c3e237cec252903c5a616617d44", "filename": "src/librustdoc/html/static/main.js", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/dbcf68951c564f946ab0021c7699ea1a4bf861d0/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fmain.js", "raw_url": "https://github.com/rust-lang/rust/raw/dbcf68951c564f946ab0021c7699ea1a4bf861d0/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fmain.js", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fmain.js?ref=dbcf68951c564f946ab0021c7699ea1a4bf861d0", "patch": "@@ -2434,9 +2434,11 @@ if (!DOMTokenList.prototype.remove) {\n             return;\n         }\n         var crates_text = [];\n-        for (var crate in crates) {\n-            if (crates.hasOwnProperty(crate)) {\n-                crates_text.push(crate);\n+        if (crates.length > 1) {\n+            for (var crate in crates) {\n+                if (crates.hasOwnProperty(crate)) {\n+                    crates_text.push(crate);\n+                }\n             }\n         }\n         crates_text.sort(function(a, b) {"}, {"sha": "86241671ecd26388b6cbb6d18264930f95a65725", "filename": "src/librustdoc/html/static/rustdoc.css", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/dbcf68951c564f946ab0021c7699ea1a4bf861d0/src%2Flibrustdoc%2Fhtml%2Fstatic%2Frustdoc.css", "raw_url": "https://github.com/rust-lang/rust/raw/dbcf68951c564f946ab0021c7699ea1a4bf861d0/src%2Flibrustdoc%2Fhtml%2Fstatic%2Frustdoc.css", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Frustdoc.css?ref=dbcf68951c564f946ab0021c7699ea1a4bf861d0", "patch": "@@ -661,7 +661,7 @@ a {\n \tbox-sizing: border-box !important;\n \toutline: none;\n \tborder: none;\n-\tborder-radius: 0 1px 1px 0;\n+\tborder-radius: 1px;\n \tmargin-top: 5px;\n \tpadding: 10px 16px;\n \tfont-size: 17px;\n@@ -671,6 +671,10 @@ a {\n \twidth: 100%;\n }\n \n+#crate-search + .search-input {\n+\tborder-radius: 0 1px 1px 0;\n+}\n+\n .search-input:focus {\n \tborder-radius: 2px;\n \tborder: 0;"}, {"sha": "f5c07dd85d1a185d7c1574db975d6dfddb73339c", "filename": "src/librustdoc/html/static/themes/dark.css", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/dbcf68951c564f946ab0021c7699ea1a4bf861d0/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fthemes%2Fdark.css", "raw_url": "https://github.com/rust-lang/rust/raw/dbcf68951c564f946ab0021c7699ea1a4bf861d0/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fthemes%2Fdark.css", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fthemes%2Fdark.css?ref=dbcf68951c564f946ab0021c7699ea1a4bf861d0", "patch": "@@ -194,14 +194,18 @@ a.test-arrow {\n \n .search-input {\n \tcolor: #111;\n-\tbox-shadow: 1px 0 0 1px #000, 0 0 0 2px transparent;\n+\tbox-shadow: 0 0 0 1px #000, 0 0 0 2px transparent;\n \tbackground-color: #f0f0f0;\n }\n \n .search-input:focus {\n \tborder-color: #008dfd;\n }\n \n+#crate-search + .search-input {\n+\tbox-shadow: 1px 0 0 1px #000, 0 0 0 2px transparent;\n+}\n+\n .stab.unstable { background: #FFF5D6; border-color: #FFC600; color: #404040; }\n .stab.internal { background: #FFB9B3; border-color: #B71C1C; color: #404040; }\n .stab.deprecated { background: #F3DFFF; border-color: #7F0087;  color: #404040; }"}, {"sha": "446e765252f7a8eb07991e63d4319a48bb9c83f0", "filename": "src/librustdoc/html/static/themes/light.css", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/dbcf68951c564f946ab0021c7699ea1a4bf861d0/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fthemes%2Flight.css", "raw_url": "https://github.com/rust-lang/rust/raw/dbcf68951c564f946ab0021c7699ea1a4bf861d0/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fthemes%2Flight.css", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fthemes%2Flight.css?ref=dbcf68951c564f946ab0021c7699ea1a4bf861d0", "patch": "@@ -195,14 +195,18 @@ a.test-arrow {\n \n .search-input {\n \tcolor: #555;\n-\tbox-shadow: 1px 0 0 1px #e0e0e0, 0 0 0 2px transparent;\n+\tbox-shadow: 0 0 0 1px #e0e0e0, 0 0 0 2px transparent;\n \tbackground-color: white;\n }\n \n .search-input:focus {\n \tborder-color: #66afe9;\n }\n \n+#crate-search + .search-input {\n+\tbox-shadow: 1px 0 0 1px #e0e0e0, 0 0 0 2px transparent;\n+}\n+\n .stab.unstable { background: #FFF5D6; border-color: #FFC600; }\n .stab.internal { background: #FFB9B3; border-color: #B71C1C; }\n .stab.deprecated { background: #F3DFFF; border-color: #7F0087; }"}, {"sha": "6edb0ea74cff489868cbdc91743766d7d1a395fe", "filename": "src/librustdoc/lib.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/dbcf68951c564f946ab0021c7699ea1a4bf861d0/src%2Flibrustdoc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dbcf68951c564f946ab0021c7699ea1a4bf861d0/src%2Flibrustdoc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Flib.rs?ref=dbcf68951c564f946ab0021c7699ea1a4bf861d0", "patch": "@@ -346,6 +346,11 @@ fn opts() -> Vec<RustcOptGroup> {\n                       If not set, uses combinations of '../' to reach the documentation root.\",\n                      \"PATH\")\n         }),\n+        unstable(\"disable-per-crate-search\", |o| {\n+            o.optflag(\"\",\n+                      \"disable-per-crate-search\",\n+                      \"disables generating the crate selector on the search box\")\n+        }),\n     ]\n }\n "}, {"sha": "e49ce9e088ec65bb9fb50ee4f0a9d409444b4674", "filename": "src/test/rustdoc/no-crate-filter.rs", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/dbcf68951c564f946ab0021c7699ea1a4bf861d0/src%2Ftest%2Frustdoc%2Fno-crate-filter.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dbcf68951c564f946ab0021c7699ea1a4bf861d0/src%2Ftest%2Frustdoc%2Fno-crate-filter.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fno-crate-filter.rs?ref=dbcf68951c564f946ab0021c7699ea1a4bf861d0", "patch": "@@ -0,0 +1,16 @@\n+// Copyright 2018 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![crate_name = \"foo\"]\n+\n+// compile-flags: -Z unstable-options --disable-per-crate-search\n+\n+// @!has 'foo/struct.Foo.html' '//*[id=\"crate-search\"]'\n+pub struct Foo;"}]}