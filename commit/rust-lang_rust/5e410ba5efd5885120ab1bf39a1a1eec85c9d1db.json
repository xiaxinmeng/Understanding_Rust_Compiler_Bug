{"sha": "5e410ba5efd5885120ab1bf39a1a1eec85c9d1db", "node_id": "MDY6Q29tbWl0NzI0NzEyOjVlNDEwYmE1ZWZkNTg4NTEyMGFiMWJmMzlhMWExZWVjODVjOWQxZGI=", "commit": {"author": {"name": "Ariel Ben-Yehuda", "email": "arielb1@mail.tau.ac.il", "date": "2017-04-05T23:01:10Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2017-04-05T23:01:10Z"}, "message": "Rollup merge of #41028 - bluss:rev-rfind, r=alexcrichton\n\nLet .rev()'s find use the underlying rfind and vice versa\n\n- Connect the plumbing in an obvious way from Rev's find \u2192 underlying rfind and vice versa\n- A style change in the provided implementation for Iterator::rfind, using simple next_back when it is enough", "tree": {"sha": "3e8b2d36540f03ae4014b0bb3179a8d50326fb5c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3e8b2d36540f03ae4014b0bb3179a8d50326fb5c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5e410ba5efd5885120ab1bf39a1a1eec85c9d1db", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5e410ba5efd5885120ab1bf39a1a1eec85c9d1db", "html_url": "https://github.com/rust-lang/rust/commit/5e410ba5efd5885120ab1bf39a1a1eec85c9d1db", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5e410ba5efd5885120ab1bf39a1a1eec85c9d1db/comments", "author": null, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b712950d7b3a91e78d195adff49afb4a27abeb8d", "url": "https://api.github.com/repos/rust-lang/rust/commits/b712950d7b3a91e78d195adff49afb4a27abeb8d", "html_url": "https://github.com/rust-lang/rust/commit/b712950d7b3a91e78d195adff49afb4a27abeb8d"}, {"sha": "74f8ea263e119f947264f373229a8f1a940ae877", "url": "https://api.github.com/repos/rust-lang/rust/commits/74f8ea263e119f947264f373229a8f1a940ae877", "html_url": "https://github.com/rust-lang/rust/commit/74f8ea263e119f947264f373229a8f1a940ae877"}], "stats": {"total": 14, "additions": 13, "deletions": 1}, "files": [{"sha": "273f9d0e6f6d31cf9581cbafb0fde73d7f569f96", "filename": "src/libcore/iter/mod.rs", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/5e410ba5efd5885120ab1bf39a1a1eec85c9d1db/src%2Flibcore%2Fiter%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5e410ba5efd5885120ab1bf39a1a1eec85c9d1db/src%2Flibcore%2Fiter%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fiter%2Fmod.rs?ref=5e410ba5efd5885120ab1bf39a1a1eec85c9d1db", "patch": "@@ -358,12 +358,24 @@ impl<I> Iterator for Rev<I> where I: DoubleEndedIterator {\n     fn next(&mut self) -> Option<<I as Iterator>::Item> { self.iter.next_back() }\n     #[inline]\n     fn size_hint(&self) -> (usize, Option<usize>) { self.iter.size_hint() }\n+\n+    fn find<P>(&mut self, predicate: P) -> Option<Self::Item>\n+        where P: FnMut(&Self::Item) -> bool\n+    {\n+        self.iter.rfind(predicate)\n+    }\n }\n \n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n impl<I> DoubleEndedIterator for Rev<I> where I: DoubleEndedIterator {\n     #[inline]\n     fn next_back(&mut self) -> Option<<I as Iterator>::Item> { self.iter.next() }\n+\n+    fn rfind<P>(&mut self, predicate: P) -> Option<Self::Item>\n+        where P: FnMut(&Self::Item) -> bool\n+    {\n+        self.iter.find(predicate)\n+    }\n }\n \n #[stable(feature = \"rust1\", since = \"1.0.0\")]"}, {"sha": "798dda199281310a58c3740c084803a41fa37a5e", "filename": "src/libcore/iter/traits.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5e410ba5efd5885120ab1bf39a1a1eec85c9d1db/src%2Flibcore%2Fiter%2Ftraits.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5e410ba5efd5885120ab1bf39a1a1eec85c9d1db/src%2Flibcore%2Fiter%2Ftraits.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fiter%2Ftraits.rs?ref=5e410ba5efd5885120ab1bf39a1a1eec85c9d1db", "patch": "@@ -467,7 +467,7 @@ pub trait DoubleEndedIterator: Iterator {\n         Self: Sized,\n         P: FnMut(&Self::Item) -> bool\n     {\n-        for x in self.by_ref().rev() {\n+        while let Some(x) = self.next_back() {\n             if predicate(&x) { return Some(x) }\n         }\n         None"}]}