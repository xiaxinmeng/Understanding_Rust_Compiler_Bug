{"sha": "8ad4a1d1187326e66a0de73133ea7197992c3837", "node_id": "C_kwDOAAsO6NoAKDhhZDRhMWQxMTg3MzI2ZTY2YTBkZTczMTMzZWE3MTk3OTkyYzM4Mzc", "commit": {"author": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2022-11-07T10:45:52Z"}, "committer": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2022-11-07T11:01:12Z"}, "message": "Update sysroot crates", "tree": {"sha": "d6015621702bceaeb783093502bd55480c9e1b42", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d6015621702bceaeb783093502bd55480c9e1b42"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8ad4a1d1187326e66a0de73133ea7197992c3837", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8ad4a1d1187326e66a0de73133ea7197992c3837", "html_url": "https://github.com/rust-lang/rust/commit/8ad4a1d1187326e66a0de73133ea7197992c3837", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8ad4a1d1187326e66a0de73133ea7197992c3837/comments", "author": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e47460b208b81af656b5141d7fa1159145ef5fcb", "url": "https://api.github.com/repos/rust-lang/rust/commits/e47460b208b81af656b5141d7fa1159145ef5fcb", "html_url": "https://github.com/rust-lang/rust/commit/e47460b208b81af656b5141d7fa1159145ef5fcb"}], "stats": {"total": 98, "additions": 31, "deletions": 67}, "files": [{"sha": "f6c09a27c9d7ea1a03727550603237348454feab", "filename": "crates/project-model/src/sysroot.rs", "status": "modified", "additions": 17, "deletions": 10, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/8ad4a1d1187326e66a0de73133ea7197992c3837/crates%2Fproject-model%2Fsrc%2Fsysroot.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8ad4a1d1187326e66a0de73133ea7197992c3837/crates%2Fproject-model%2Fsrc%2Fsysroot.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fproject-model%2Fsrc%2Fsysroot.rs?ref=8ad4a1d1187326e66a0de73133ea7197992c3837", "patch": "@@ -128,14 +128,18 @@ impl Sysroot {\n         }\n \n         if let Some(alloc) = sysroot.by_name(\"alloc\") {\n-            if let Some(core) = sysroot.by_name(\"core\") {\n-                sysroot.crates[alloc].deps.push(core);\n+            for dep in ALLOC_DEPS.trim().lines() {\n+                if let Some(dep) = sysroot.by_name(dep) {\n+                    sysroot.crates[alloc].deps.push(dep)\n+                }\n             }\n         }\n \n         if let Some(proc_macro) = sysroot.by_name(\"proc_macro\") {\n-            if let Some(std) = sysroot.by_name(\"std\") {\n-                sysroot.crates[proc_macro].deps.push(std);\n+            for dep in PROC_MACRO_DEPS.trim().lines() {\n+                if let Some(dep) = sysroot.by_name(dep) {\n+                    sysroot.crates[proc_macro].deps.push(dep)\n+                }\n             }\n         }\n \n@@ -239,24 +243,27 @@ fn get_rust_src(sysroot_path: &AbsPath) -> Option<AbsPathBuf> {\n \n const SYSROOT_CRATES: &str = \"\n alloc\n+backtrace\n core\n panic_abort\n panic_unwind\n proc_macro\n profiler_builtins\n std\n stdarch/crates/std_detect\n-term\n test\n unwind\";\n \n+const ALLOC_DEPS: &str = \"core\";\n+\n const STD_DEPS: &str = \"\n alloc\n-core\n-panic_abort\n panic_unwind\n+panic_abort\n+core\n profiler_builtins\n+unwind\n std_detect\n-term\n-test\n-unwind\";\n+test\";\n+\n+const PROC_MACRO_DEPS: &str = \"std\";"}, {"sha": "a1cb438bddc4c6cd6a00450378d44b384705aea9", "filename": "crates/project-model/src/tests.rs", "status": "modified", "additions": 14, "deletions": 57, "changes": 71, "blob_url": "https://github.com/rust-lang/rust/blob/8ad4a1d1187326e66a0de73133ea7197992c3837/crates%2Fproject-model%2Fsrc%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8ad4a1d1187326e66a0de73133ea7197992c3837/crates%2Fproject-model%2Fsrc%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fproject-model%2Fsrc%2Ftests.rs?ref=8ad4a1d1187326e66a0de73133ea7197992c3837", "patch": "@@ -1566,10 +1566,10 @@ fn rust_project_hello_world_project_model() {\n                             },\n                             Dependency {\n                                 crate_id: CrateId(\n-                                    1,\n+                                    3,\n                                 ),\n                                 name: CrateName(\n-                                    \"core\",\n+                                    \"panic_unwind\",\n                                 ),\n                                 prelude: true,\n                             },\n@@ -1584,10 +1584,10 @@ fn rust_project_hello_world_project_model() {\n                             },\n                             Dependency {\n                                 crate_id: CrateId(\n-                                    3,\n+                                    1,\n                                 ),\n                                 name: CrateName(\n-                                    \"panic_unwind\",\n+                                    \"core\",\n                                 ),\n                                 prelude: true,\n                             },\n@@ -1602,40 +1602,31 @@ fn rust_project_hello_world_project_model() {\n                             },\n                             Dependency {\n                                 crate_id: CrateId(\n-                                    7,\n+                                    9,\n                                 ),\n                                 name: CrateName(\n-                                    \"std_detect\",\n+                                    \"unwind\",\n                                 ),\n                                 prelude: true,\n                             },\n                             Dependency {\n                                 crate_id: CrateId(\n-                                    8,\n+                                    7,\n                                 ),\n                                 name: CrateName(\n-                                    \"term\",\n+                                    \"std_detect\",\n                                 ),\n                                 prelude: true,\n                             },\n                             Dependency {\n                                 crate_id: CrateId(\n-                                    9,\n+                                    8,\n                                 ),\n                                 name: CrateName(\n                                     \"test\",\n                                 ),\n                                 prelude: true,\n                             },\n-                            Dependency {\n-                                crate_id: CrateId(\n-                                    10,\n-                                ),\n-                                name: CrateName(\n-                                    \"unwind\",\n-                                ),\n-                                prelude: true,\n-                            },\n                         ],\n                         proc_macro: Err(\n                             \"no proc macro loaded for sysroot crate\",\n@@ -1687,40 +1678,6 @@ fn rust_project_hello_world_project_model() {\n                         ),\n                         edition: Edition2018,\n                         version: None,\n-                        display_name: Some(\n-                            CrateDisplayName {\n-                                crate_name: CrateName(\n-                                    \"term\",\n-                                ),\n-                                canonical_name: \"term\",\n-                            },\n-                        ),\n-                        cfg_options: CfgOptions(\n-                            [],\n-                        ),\n-                        potential_cfg_options: CfgOptions(\n-                            [],\n-                        ),\n-                        env: Env {\n-                            entries: {},\n-                        },\n-                        dependencies: [],\n-                        proc_macro: Err(\n-                            \"no proc macro loaded for sysroot crate\",\n-                        ),\n-                        origin: Lang(\n-                            Other,\n-                        ),\n-                        is_proc_macro: false,\n-                    },\n-                    CrateId(\n-                        9,\n-                    ): CrateData {\n-                        root_file_id: FileId(\n-                            10,\n-                        ),\n-                        edition: Edition2018,\n-                        version: None,\n                         display_name: Some(\n                             CrateDisplayName {\n                                 crate_name: CrateName(\n@@ -1748,10 +1705,10 @@ fn rust_project_hello_world_project_model() {\n                         is_proc_macro: false,\n                     },\n                     CrateId(\n-                        10,\n+                        9,\n                     ): CrateData {\n                         root_file_id: FileId(\n-                            11,\n+                            10,\n                         ),\n                         edition: Edition2018,\n                         version: None,\n@@ -1782,10 +1739,10 @@ fn rust_project_hello_world_project_model() {\n                         is_proc_macro: false,\n                     },\n                     CrateId(\n-                        11,\n+                        10,\n                     ): CrateData {\n                         root_file_id: FileId(\n-                            12,\n+                            11,\n                         ),\n                         edition: Edition2018,\n                         version: None,\n@@ -1836,7 +1793,7 @@ fn rust_project_hello_world_project_model() {\n                             },\n                             Dependency {\n                                 crate_id: CrateId(\n-                                    9,\n+                                    8,\n                                 ),\n                                 name: CrateName(\n                                     \"test\","}]}