{"sha": "cf3f71d2a22f6ca884428b47b4c3eb5c77f1dae3", "node_id": "C_kwDOAAsO6NoAKGNmM2Y3MWQyYTIyZjZjYTg4NDQyOGI0N2I0YzNlYjVjNzdmMWRhZTM", "commit": {"author": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2022-08-07T13:21:11Z"}, "committer": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2022-08-10T16:34:54Z"}, "message": "Do not consider method call receiver as an argument in AST.", "tree": {"sha": "edeae28470572f4e640674ebb3da919cfcf51c99", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/edeae28470572f4e640674ebb3da919cfcf51c99"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cf3f71d2a22f6ca884428b47b4c3eb5c77f1dae3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cf3f71d2a22f6ca884428b47b4c3eb5c77f1dae3", "html_url": "https://github.com/rust-lang/rust/commit/cf3f71d2a22f6ca884428b47b4c3eb5c77f1dae3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cf3f71d2a22f6ca884428b47b4c3eb5c77f1dae3/comments", "author": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f719599c0f8eedc504ddedfcbb9e196128b8b129", "url": "https://api.github.com/repos/rust-lang/rust/commits/f719599c0f8eedc504ddedfcbb9e196128b8b129", "html_url": "https://github.com/rust-lang/rust/commit/f719599c0f8eedc504ddedfcbb9e196128b8b129"}], "stats": {"total": 24, "additions": 12, "deletions": 12}, "files": [{"sha": "0f1d701865e7d711bbf8ae1bdb949c31d5214611", "filename": "clippy_lints/src/double_parens.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/cf3f71d2a22f6ca884428b47b4c3eb5c77f1dae3/clippy_lints%2Fsrc%2Fdouble_parens.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cf3f71d2a22f6ca884428b47b4c3eb5c77f1dae3/clippy_lints%2Fsrc%2Fdouble_parens.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fdouble_parens.rs?ref=cf3f71d2a22f6ca884428b47b4c3eb5c77f1dae3", "patch": "@@ -61,9 +61,8 @@ impl EarlyLintPass for DoubleParens {\n                     }\n                 }\n             },\n-            ExprKind::MethodCall(_, ref params, _) => {\n-                if params.len() == 2 {\n-                    let param = &params[1];\n+            ExprKind::MethodCall(_, _, ref params, _) => {\n+                if let [ref param] = params[..] {\n                     if let ExprKind::Paren(_) = param.kind {\n                         span_lint(cx, DOUBLE_PARENS, param.span, msg);\n                     }"}, {"sha": "d9ee031c9f9756ffe11968f79499cd56b0277bca", "filename": "clippy_lints/src/option_env_unwrap.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/cf3f71d2a22f6ca884428b47b4c3eb5c77f1dae3/clippy_lints%2Fsrc%2Foption_env_unwrap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cf3f71d2a22f6ca884428b47b4c3eb5c77f1dae3/clippy_lints%2Fsrc%2Foption_env_unwrap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Foption_env_unwrap.rs?ref=cf3f71d2a22f6ca884428b47b4c3eb5c77f1dae3", "patch": "@@ -37,9 +37,9 @@ declare_lint_pass!(OptionEnvUnwrap => [OPTION_ENV_UNWRAP]);\n impl EarlyLintPass for OptionEnvUnwrap {\n     fn check_expr(&mut self, cx: &EarlyContext<'_>, expr: &Expr) {\n         if_chain! {\n-            if let ExprKind::MethodCall(path_segment, args, _) = &expr.kind;\n+            if let ExprKind::MethodCall(path_segment, receiver, _, _) = &expr.kind;\n             if matches!(path_segment.ident.name, sym::expect | sym::unwrap);\n-            if let ExprKind::Call(caller, _) = &args[0].kind;\n+            if let ExprKind::Call(caller, _) = &receiver.kind;\n             if is_direct_expn_of(caller.span, \"option_env\").is_some();\n             then {\n                 span_lint_and_help("}, {"sha": "e6e3ad05ad70abbee15e673653f9b076a43affff", "filename": "clippy_lints/src/precedence.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/cf3f71d2a22f6ca884428b47b4c3eb5c77f1dae3/clippy_lints%2Fsrc%2Fprecedence.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cf3f71d2a22f6ca884428b47b4c3eb5c77f1dae3/clippy_lints%2Fsrc%2Fprecedence.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fprecedence.rs?ref=cf3f71d2a22f6ca884428b47b4c3eb5c77f1dae3", "patch": "@@ -109,12 +109,12 @@ impl EarlyLintPass for Precedence {\n             let mut arg = operand;\n \n             let mut all_odd = true;\n-            while let ExprKind::MethodCall(path_segment, args, _) = &arg.kind {\n+            while let ExprKind::MethodCall(path_segment, receiver, _, _) = &arg.kind {\n                 let path_segment_str = path_segment.ident.name.as_str();\n                 all_odd &= ALLOWED_ODD_FUNCTIONS\n                     .iter()\n                     .any(|odd_function| **odd_function == *path_segment_str);\n-                arg = args.first().expect(\"A method always has a receiver.\");\n+                arg = receiver;\n             }\n \n             if_chain! {"}, {"sha": "5d36f0f5ff8bc91cde11f88026437c7ceb826f21", "filename": "clippy_lints/src/suspicious_operation_groupings.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/cf3f71d2a22f6ca884428b47b4c3eb5c77f1dae3/clippy_lints%2Fsrc%2Fsuspicious_operation_groupings.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cf3f71d2a22f6ca884428b47b4c3eb5c77f1dae3/clippy_lints%2Fsrc%2Fsuspicious_operation_groupings.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fsuspicious_operation_groupings.rs?ref=cf3f71d2a22f6ca884428b47b4c3eb5c77f1dae3", "patch": "@@ -595,7 +595,7 @@ fn ident_difference_expr_with_base_location(\n         | (Unary(_, _), Unary(_, _))\n         | (Binary(_, _, _), Binary(_, _, _))\n         | (Tup(_), Tup(_))\n-        | (MethodCall(_, _, _), MethodCall(_, _, _))\n+        | (MethodCall(_, _, _, _), MethodCall(_, _, _, _))\n         | (Call(_, _), Call(_, _))\n         | (ConstBlock(_), ConstBlock(_))\n         | (Array(_), Array(_))"}, {"sha": "e1ec357838dbd88846e97ef43c602d33500ebe85", "filename": "clippy_lints/src/unused_rounding.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/cf3f71d2a22f6ca884428b47b4c3eb5c77f1dae3/clippy_lints%2Fsrc%2Funused_rounding.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cf3f71d2a22f6ca884428b47b4c3eb5c77f1dae3/clippy_lints%2Fsrc%2Funused_rounding.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Funused_rounding.rs?ref=cf3f71d2a22f6ca884428b47b4c3eb5c77f1dae3", "patch": "@@ -30,11 +30,10 @@ declare_clippy_lint! {\n declare_lint_pass!(UnusedRounding => [UNUSED_ROUNDING]);\n \n fn is_useless_rounding(expr: &Expr) -> Option<(&str, String)> {\n-    if let ExprKind::MethodCall(name_ident, args, _) = &expr.kind\n+    if let ExprKind::MethodCall(name_ident, receiver, _, _) = &expr.kind\n         && let method_name = name_ident.ident.name.as_str()\n         && (method_name == \"ceil\" || method_name == \"round\" || method_name == \"floor\")\n-        && !args.is_empty()\n-        && let ExprKind::Lit(spanned) = &args[0].kind\n+        && let ExprKind::Lit(spanned) = &receiver.kind\n         && let LitKind::Float(symbol, ty) = spanned.kind {\n             let f = symbol.as_str().parse::<f64>().unwrap();\n             let f_str = symbol.to_string() + if let LitFloatType::Suffixed(ty) = ty {"}, {"sha": "9f74729bdfa18487463011020784ac9c8873bbc7", "filename": "clippy_utils/src/ast_utils.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/cf3f71d2a22f6ca884428b47b4c3eb5c77f1dae3/clippy_utils%2Fsrc%2Fast_utils.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cf3f71d2a22f6ca884428b47b4c3eb5c77f1dae3/clippy_utils%2Fsrc%2Fast_utils.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_utils%2Fsrc%2Fast_utils.rs?ref=cf3f71d2a22f6ca884428b47b4c3eb5c77f1dae3", "patch": "@@ -147,7 +147,9 @@ pub fn eq_expr(l: &Expr, r: &Expr) -> bool {\n         (Array(l), Array(r)) | (Tup(l), Tup(r)) => over(l, r, |l, r| eq_expr(l, r)),\n         (Repeat(le, ls), Repeat(re, rs)) => eq_expr(le, re) && eq_expr(&ls.value, &rs.value),\n         (Call(lc, la), Call(rc, ra)) => eq_expr(lc, rc) && over(la, ra, |l, r| eq_expr(l, r)),\n-        (MethodCall(lc, la, _), MethodCall(rc, ra, _)) => eq_path_seg(lc, rc) && over(la, ra, |l, r| eq_expr(l, r)),\n+        (MethodCall(lc, ls, la, _), MethodCall(rc, rs, ra, _)) => {\n+            eq_path_seg(lc, rc) && eq_expr(ls, rs) && over(la, ra, |l, r| eq_expr(l, r))\n+        },\n         (Binary(lo, ll, lr), Binary(ro, rl, rr)) => lo.node == ro.node && eq_expr(ll, rl) && eq_expr(lr, rr),\n         (Unary(lo, l), Unary(ro, r)) => mem::discriminant(lo) == mem::discriminant(ro) && eq_expr(l, r),\n         (Lit(l), Lit(r)) => l.kind == r.kind,"}]}