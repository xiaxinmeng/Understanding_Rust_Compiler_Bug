{"sha": "fda71d676d07415f78c7835a6fa67b6aacb62c97", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZkYTcxZDY3NmQwNzQxNWY3OGM3ODM1YTZmYTY3YjZhYWNiNjJjOTc=", "commit": {"author": {"name": "LingMan", "email": "LingMan@users.noreply.github.com", "date": "2021-02-12T09:27:08Z"}, "committer": {"name": "LingMan", "email": "LingMan@users.noreply.github.com", "date": "2021-02-12T09:27:08Z"}, "message": "Push a `char` instead of a `str` with len one into a String", "tree": {"sha": "bff7bb79c1afbff903c7e1db503033bcf50cbd8b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bff7bb79c1afbff903c7e1db503033bcf50cbd8b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fda71d676d07415f78c7835a6fa67b6aacb62c97", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fda71d676d07415f78c7835a6fa67b6aacb62c97", "html_url": "https://github.com/rust-lang/rust/commit/fda71d676d07415f78c7835a6fa67b6aacb62c97", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fda71d676d07415f78c7835a6fa67b6aacb62c97/comments", "author": {"login": "LingMan", "id": 18645382, "node_id": "MDQ6VXNlcjE4NjQ1Mzgy", "avatar_url": "https://avatars.githubusercontent.com/u/18645382?v=4", "gravatar_id": "", "url": "https://api.github.com/users/LingMan", "html_url": "https://github.com/LingMan", "followers_url": "https://api.github.com/users/LingMan/followers", "following_url": "https://api.github.com/users/LingMan/following{/other_user}", "gists_url": "https://api.github.com/users/LingMan/gists{/gist_id}", "starred_url": "https://api.github.com/users/LingMan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/LingMan/subscriptions", "organizations_url": "https://api.github.com/users/LingMan/orgs", "repos_url": "https://api.github.com/users/LingMan/repos", "events_url": "https://api.github.com/users/LingMan/events{/privacy}", "received_events_url": "https://api.github.com/users/LingMan/received_events", "type": "User", "site_admin": false}, "committer": {"login": "LingMan", "id": 18645382, "node_id": "MDQ6VXNlcjE4NjQ1Mzgy", "avatar_url": "https://avatars.githubusercontent.com/u/18645382?v=4", "gravatar_id": "", "url": "https://api.github.com/users/LingMan", "html_url": "https://github.com/LingMan", "followers_url": "https://api.github.com/users/LingMan/followers", "following_url": "https://api.github.com/users/LingMan/following{/other_user}", "gists_url": "https://api.github.com/users/LingMan/gists{/gist_id}", "starred_url": "https://api.github.com/users/LingMan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/LingMan/subscriptions", "organizations_url": "https://api.github.com/users/LingMan/orgs", "repos_url": "https://api.github.com/users/LingMan/repos", "events_url": "https://api.github.com/users/LingMan/events{/privacy}", "received_events_url": "https://api.github.com/users/LingMan/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e9920ef7749d11fc71cc32ca4ba055bcfeaab945", "url": "https://api.github.com/repos/rust-lang/rust/commits/e9920ef7749d11fc71cc32ca4ba055bcfeaab945", "html_url": "https://github.com/rust-lang/rust/commit/e9920ef7749d11fc71cc32ca4ba055bcfeaab945"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "4f90f2877ed910c363884d63a4653a88cdee704b", "filename": "compiler/rustc_typeck/src/check/upvar.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fda71d676d07415f78c7835a6fa67b6aacb62c97/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fupvar.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fda71d676d07415f78c7835a6fa67b6aacb62c97/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fupvar.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fupvar.rs?ref=fda71d676d07415f78c7835a6fa67b6aacb62c97", "patch": "@@ -1211,7 +1211,7 @@ fn construct_place_string(tcx: TyCtxt<'_>, place: &Place<'tcx>) -> String {\n             ProjectionKind::Subslice => String::from(\"Subslice\"),\n         };\n         if i != 0 {\n-            projections_str.push_str(\",\");\n+            projections_str.push(',');\n         }\n         projections_str.push_str(proj.as_str());\n     }"}]}