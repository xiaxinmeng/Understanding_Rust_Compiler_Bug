{"sha": "3e5dcba2ee446ac712a4a57b042ca4b7f6a46ecc", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNlNWRjYmEyZWU0NDZhYzcxMmE0YTU3YjA0MmNhNGI3ZjZhNDZlY2M=", "commit": {"author": {"name": "Jason Newcomb", "email": "jsnewcomb@pm.me", "date": "2021-08-26T15:27:43Z"}, "committer": {"name": "Jason Newcomb", "email": "jsnewcomb@pm.me", "date": "2021-08-26T15:44:36Z"}, "message": "Small cleanup of `option_if_let_else` and additional tests.", "tree": {"sha": "d2b504b46e2d551a072fca039b511c41b981c435", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d2b504b46e2d551a072fca039b511c41b981c435"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3e5dcba2ee446ac712a4a57b042ca4b7f6a46ecc", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\nComment: Created with Krypton\n\niF4EABYKAAYFAmEntukACgkQ2lnoZDo37QaACwEAlht8SD3nVOPkxHBRbDgsVGgV\nrsKHGO+KMzCRZe/xULkA/iXoTDJeJYUa1j4xIzImNyEmMsMcp/VWBlUYnsMrchIM\n=gCuR\n-----END PGP SIGNATURE-----", "payload": "tree d2b504b46e2d551a072fca039b511c41b981c435\nparent 8b3ca9a315aeb9ece9ca9df27e69f581629c51aa\nauthor Jason Newcomb <jsnewcomb@pm.me> 1629991663 -0400\ncommitter Jason Newcomb <jsnewcomb@pm.me> 1629992676 -0400\n\nSmall cleanup of `option_if_let_else` and additional tests.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3e5dcba2ee446ac712a4a57b042ca4b7f6a46ecc", "html_url": "https://github.com/rust-lang/rust/commit/3e5dcba2ee446ac712a4a57b042ca4b7f6a46ecc", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3e5dcba2ee446ac712a4a57b042ca4b7f6a46ecc/comments", "author": {"login": "Jarcho", "id": 7761774, "node_id": "MDQ6VXNlcjc3NjE3NzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/7761774?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Jarcho", "html_url": "https://github.com/Jarcho", "followers_url": "https://api.github.com/users/Jarcho/followers", "following_url": "https://api.github.com/users/Jarcho/following{/other_user}", "gists_url": "https://api.github.com/users/Jarcho/gists{/gist_id}", "starred_url": "https://api.github.com/users/Jarcho/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Jarcho/subscriptions", "organizations_url": "https://api.github.com/users/Jarcho/orgs", "repos_url": "https://api.github.com/users/Jarcho/repos", "events_url": "https://api.github.com/users/Jarcho/events{/privacy}", "received_events_url": "https://api.github.com/users/Jarcho/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Jarcho", "id": 7761774, "node_id": "MDQ6VXNlcjc3NjE3NzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/7761774?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Jarcho", "html_url": "https://github.com/Jarcho", "followers_url": "https://api.github.com/users/Jarcho/followers", "following_url": "https://api.github.com/users/Jarcho/following{/other_user}", "gists_url": "https://api.github.com/users/Jarcho/gists{/gist_id}", "starred_url": "https://api.github.com/users/Jarcho/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Jarcho/subscriptions", "organizations_url": "https://api.github.com/users/Jarcho/orgs", "repos_url": "https://api.github.com/users/Jarcho/repos", "events_url": "https://api.github.com/users/Jarcho/events{/privacy}", "received_events_url": "https://api.github.com/users/Jarcho/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8b3ca9a315aeb9ece9ca9df27e69f581629c51aa", "url": "https://api.github.com/repos/rust-lang/rust/commits/8b3ca9a315aeb9ece9ca9df27e69f581629c51aa", "html_url": "https://github.com/rust-lang/rust/commit/8b3ca9a315aeb9ece9ca9df27e69f581629c51aa"}], "stats": {"total": 74, "additions": 57, "deletions": 17}, "files": [{"sha": "0614c14462b7f77f069ef502d6af530cc5c09b7f", "filename": "clippy_lints/src/option_if_let_else.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/3e5dcba2ee446ac712a4a57b042ca4b7f6a46ecc/clippy_lints%2Fsrc%2Foption_if_let_else.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3e5dcba2ee446ac712a4a57b042ca4b7f6a46ecc/clippy_lints%2Fsrc%2Foption_if_let_else.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Foption_if_let_else.rs?ref=3e5dcba2ee446ac712a4a57b042ca4b7f6a46ecc", "patch": "@@ -174,9 +174,9 @@ fn detect_option_if_let_else<'tcx>(\n                     ExprKind::Field(e, _) | ExprKind::AddrOf(_, _, e) => Some(e),\n                     _ => None,\n                 });\n-                if let ExprKind::Path(QPath::Resolved(None, Path { res: Res::Local(l), .. })) = e.kind {\n-                    match some_captures.get(l)\n-                        .or_else(|| (method_sugg == \"map_or_else\").then(|| ()).and_then(|_| none_captures.get(l)))\n+                if let ExprKind::Path(QPath::Resolved(None, Path { res: Res::Local(local_id), .. })) = e.kind {\n+                    match some_captures.get(local_id)\n+                        .or_else(|| (method_sugg == \"map_or_else\").then(|| ()).and_then(|_| none_captures.get(local_id)))\n                     {\n                         Some(CaptureKind::Value | CaptureKind::Ref(Mutability::Mut)) => return None,\n                         Some(CaptureKind::Ref(Mutability::Not)) if as_mut => return None,"}, {"sha": "d1815d0aec331692f66945f584d298fdb9e8d839", "filename": "tests/ui/option_if_let_else.fixed", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/3e5dcba2ee446ac712a4a57b042ca4b7f6a46ecc/tests%2Fui%2Foption_if_let_else.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/3e5dcba2ee446ac712a4a57b042ca4b7f6a46ecc/tests%2Fui%2Foption_if_let_else.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Foption_if_let_else.fixed?ref=3e5dcba2ee446ac712a4a57b042ca4b7f6a46ecc", "patch": "@@ -1,3 +1,4 @@\n+// edition:2018\n // run-rustfix\n #![warn(clippy::option_if_let_else)]\n #![allow(clippy::redundant_closure)]\n@@ -128,4 +129,23 @@ fn main() {\n         let _s = s;\n         10\n     };\n+\n+    let mut s = Some(String::new());\n+    // Don't lint, `Some` branch mutably borrows `s`, but else branch also borrows  `s`\n+    let _ = if let Some(x) = &mut s {\n+        x.push_str(\"test\");\n+        x.len()\n+    } else {\n+        let _s = &s;\n+        10\n+    };\n+\n+    async fn _f1(x: u32) -> u32 {\n+        x\n+    }\n+\n+    async fn _f2() {\n+        // Don't lint. `await` can't be moved into a closure.\n+        let _ = if let Some(x) = Some(0) { _f1(x).await } else { 0 };\n+    }\n }"}, {"sha": "a15627338cb4aaeaa8460c83d03f5e30f5c86c2d", "filename": "tests/ui/option_if_let_else.rs", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/3e5dcba2ee446ac712a4a57b042ca4b7f6a46ecc/tests%2Fui%2Foption_if_let_else.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3e5dcba2ee446ac712a4a57b042ca4b7f6a46ecc/tests%2Fui%2Foption_if_let_else.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Foption_if_let_else.rs?ref=3e5dcba2ee446ac712a4a57b042ca4b7f6a46ecc", "patch": "@@ -1,3 +1,4 @@\n+// edition:2018\n // run-rustfix\n #![warn(clippy::option_if_let_else)]\n #![allow(clippy::redundant_closure)]\n@@ -153,4 +154,23 @@ fn main() {\n         let _s = s;\n         10\n     };\n+\n+    let mut s = Some(String::new());\n+    // Don't lint, `Some` branch mutably borrows `s`, but else branch also borrows  `s`\n+    let _ = if let Some(x) = &mut s {\n+        x.push_str(\"test\");\n+        x.len()\n+    } else {\n+        let _s = &s;\n+        10\n+    };\n+\n+    async fn _f1(x: u32) -> u32 {\n+        x\n+    }\n+\n+    async fn _f2() {\n+        // Don't lint. `await` can't be moved into a closure.\n+        let _ = if let Some(x) = Some(0) { _f1(x).await } else { 0 };\n+    }\n }"}, {"sha": "ed748ee8b39e4422c034f9a96982316dbb256745", "filename": "tests/ui/option_if_let_else.stderr", "status": "modified", "additions": 14, "deletions": 14, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/3e5dcba2ee446ac712a4a57b042ca4b7f6a46ecc/tests%2Fui%2Foption_if_let_else.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/3e5dcba2ee446ac712a4a57b042ca4b7f6a46ecc/tests%2Fui%2Foption_if_let_else.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Foption_if_let_else.stderr?ref=3e5dcba2ee446ac712a4a57b042ca4b7f6a46ecc", "patch": "@@ -1,5 +1,5 @@\n error: use Option::map_or instead of an if let/else\n-  --> $DIR/option_if_let_else.rs:7:5\n+  --> $DIR/option_if_let_else.rs:8:5\n    |\n LL | /     if let Some(x) = string {\n LL | |         (true, x)\n@@ -11,19 +11,19 @@ LL | |     }\n    = note: `-D clippy::option-if-let-else` implied by `-D warnings`\n \n error: use Option::map_or instead of an if let/else\n-  --> $DIR/option_if_let_else.rs:25:13\n+  --> $DIR/option_if_let_else.rs:26:13\n    |\n LL |     let _ = if let Some(s) = *string { s.len() } else { 0 };\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `string.map_or(0, |s| s.len())`\n \n error: use Option::map_or instead of an if let/else\n-  --> $DIR/option_if_let_else.rs:26:13\n+  --> $DIR/option_if_let_else.rs:27:13\n    |\n LL |     let _ = if let Some(s) = &num { s } else { &0 };\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `num.as_ref().map_or(&0, |s| s)`\n \n error: use Option::map_or instead of an if let/else\n-  --> $DIR/option_if_let_else.rs:27:13\n+  --> $DIR/option_if_let_else.rs:28:13\n    |\n LL |       let _ = if let Some(s) = &mut num {\n    |  _____________^\n@@ -43,13 +43,13 @@ LL ~     });\n    |\n \n error: use Option::map_or instead of an if let/else\n-  --> $DIR/option_if_let_else.rs:33:13\n+  --> $DIR/option_if_let_else.rs:34:13\n    |\n LL |     let _ = if let Some(ref s) = num { s } else { &0 };\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `num.as_ref().map_or(&0, |s| s)`\n \n error: use Option::map_or instead of an if let/else\n-  --> $DIR/option_if_let_else.rs:34:13\n+  --> $DIR/option_if_let_else.rs:35:13\n    |\n LL |       let _ = if let Some(mut s) = num {\n    |  _____________^\n@@ -69,7 +69,7 @@ LL ~     });\n    |\n \n error: use Option::map_or instead of an if let/else\n-  --> $DIR/option_if_let_else.rs:40:13\n+  --> $DIR/option_if_let_else.rs:41:13\n    |\n LL |       let _ = if let Some(ref mut s) = num {\n    |  _____________^\n@@ -89,7 +89,7 @@ LL ~     });\n    |\n \n error: use Option::map_or instead of an if let/else\n-  --> $DIR/option_if_let_else.rs:49:5\n+  --> $DIR/option_if_let_else.rs:50:5\n    |\n LL | /     if let Some(x) = arg {\n LL | |         let y = x * x;\n@@ -108,7 +108,7 @@ LL +     })\n    |\n \n error: use Option::map_or_else instead of an if let/else\n-  --> $DIR/option_if_let_else.rs:62:13\n+  --> $DIR/option_if_let_else.rs:63:13\n    |\n LL |       let _ = if let Some(x) = arg {\n    |  _____________^\n@@ -120,7 +120,7 @@ LL | |     };\n    | |_____^ help: try: `arg.map_or_else(|| side_effect(), |x| x)`\n \n error: use Option::map_or_else instead of an if let/else\n-  --> $DIR/option_if_let_else.rs:71:13\n+  --> $DIR/option_if_let_else.rs:72:13\n    |\n LL |       let _ = if let Some(x) = arg {\n    |  _____________^\n@@ -143,13 +143,13 @@ LL ~     }, |x| x * x * x * x);\n    |\n \n error: use Option::map_or instead of an if let/else\n-  --> $DIR/option_if_let_else.rs:100:13\n+  --> $DIR/option_if_let_else.rs:101:13\n    |\n LL |     let _ = if let Some(x) = optional { x + 2 } else { 5 };\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `optional.map_or(5, |x| x + 2)`\n \n error: use Option::map_or instead of an if let/else\n-  --> $DIR/option_if_let_else.rs:109:13\n+  --> $DIR/option_if_let_else.rs:110:13\n    |\n LL |       let _ = if let Some(x) = Some(0) {\n    |  _____________^\n@@ -171,13 +171,13 @@ LL ~         });\n    |\n \n error: use Option::map_or_else instead of an if let/else\n-  --> $DIR/option_if_let_else.rs:137:13\n+  --> $DIR/option_if_let_else.rs:138:13\n    |\n LL |     let _ = if let Some(x) = Some(0) { s.len() + x } else { s.len() };\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `Some(0).map_or_else(|| s.len(), |x| s.len() + x)`\n \n error: use Option::map_or instead of an if let/else\n-  --> $DIR/option_if_let_else.rs:141:13\n+  --> $DIR/option_if_let_else.rs:142:13\n    |\n LL |       let _ = if let Some(x) = Some(0) {\n    |  _____________^"}]}