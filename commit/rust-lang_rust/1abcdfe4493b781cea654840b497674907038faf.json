{"sha": "1abcdfe4493b781cea654840b497674907038faf", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFhYmNkZmU0NDkzYjc4MWNlYTY1NDg0MGI0OTc2NzQ5MDcwMzhmYWY=", "commit": {"author": {"name": "Dan Gohman", "email": "dev@sunfishcode.online", "date": "2021-02-19T15:31:01Z"}, "committer": {"name": "Dan Gohman", "email": "dev@sunfishcode.online", "date": "2021-02-19T15:31:01Z"}, "message": "x.py fmt", "tree": {"sha": "f9eb61041f2593533bb16c0b65082264381b3bdc", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f9eb61041f2593533bb16c0b65082264381b3bdc"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1abcdfe4493b781cea654840b497674907038faf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1abcdfe4493b781cea654840b497674907038faf", "html_url": "https://github.com/rust-lang/rust/commit/1abcdfe4493b781cea654840b497674907038faf", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1abcdfe4493b781cea654840b497674907038faf/comments", "author": {"login": "sunfishcode", "id": 4503403, "node_id": "MDQ6VXNlcjQ1MDM0MDM=", "avatar_url": "https://avatars.githubusercontent.com/u/4503403?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sunfishcode", "html_url": "https://github.com/sunfishcode", "followers_url": "https://api.github.com/users/sunfishcode/followers", "following_url": "https://api.github.com/users/sunfishcode/following{/other_user}", "gists_url": "https://api.github.com/users/sunfishcode/gists{/gist_id}", "starred_url": "https://api.github.com/users/sunfishcode/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sunfishcode/subscriptions", "organizations_url": "https://api.github.com/users/sunfishcode/orgs", "repos_url": "https://api.github.com/users/sunfishcode/repos", "events_url": "https://api.github.com/users/sunfishcode/events{/privacy}", "received_events_url": "https://api.github.com/users/sunfishcode/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sunfishcode", "id": 4503403, "node_id": "MDQ6VXNlcjQ1MDM0MDM=", "avatar_url": "https://avatars.githubusercontent.com/u/4503403?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sunfishcode", "html_url": "https://github.com/sunfishcode", "followers_url": "https://api.github.com/users/sunfishcode/followers", "following_url": "https://api.github.com/users/sunfishcode/following{/other_user}", "gists_url": "https://api.github.com/users/sunfishcode/gists{/gist_id}", "starred_url": "https://api.github.com/users/sunfishcode/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sunfishcode/subscriptions", "organizations_url": "https://api.github.com/users/sunfishcode/orgs", "repos_url": "https://api.github.com/users/sunfishcode/repos", "events_url": "https://api.github.com/users/sunfishcode/events{/privacy}", "received_events_url": "https://api.github.com/users/sunfishcode/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0060c91cfc9b8c0a73e7a23e16cddf8ac09440fb", "url": "https://api.github.com/repos/rust-lang/rust/commits/0060c91cfc9b8c0a73e7a23e16cddf8ac09440fb", "html_url": "https://github.com/rust-lang/rust/commit/0060c91cfc9b8c0a73e7a23e16cddf8ac09440fb"}], "stats": {"total": 7, "additions": 1, "deletions": 6}, "files": [{"sha": "83debdfc86043d76449906fdd1a33083a467d1b9", "filename": "library/std/src/sys/wasi/fs.rs", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/1abcdfe4493b781cea654840b497674907038faf/library%2Fstd%2Fsrc%2Fsys%2Fwasi%2Ffs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1abcdfe4493b781cea654840b497674907038faf/library%2Fstd%2Fsrc%2Fsys%2Fwasi%2Ffs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys%2Fwasi%2Ffs.rs?ref=1abcdfe4493b781cea654840b497674907038faf", "patch": "@@ -558,12 +558,7 @@ pub fn link(original: &Path, link: &Path) -> io::Result<()> {\n     let (original, original_file) = open_parent(original)?;\n     let (link, link_file) = open_parent(link)?;\n     // Pass 0 as the flags argument, meaning don't follow symlinks.\n-    original.link(\n-        0,\n-        osstr2str(original_file.as_ref())?,\n-        &link,\n-        osstr2str(link_file.as_ref())?,\n-    )\n+    original.link(0, osstr2str(original_file.as_ref())?, &link, osstr2str(link_file.as_ref())?)\n }\n \n pub fn stat(p: &Path) -> io::Result<FileAttr> {"}]}