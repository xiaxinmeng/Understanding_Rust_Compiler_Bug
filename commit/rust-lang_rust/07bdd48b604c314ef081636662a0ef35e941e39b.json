{"sha": "07bdd48b604c314ef081636662a0ef35e941e39b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA3YmRkNDhiNjA0YzMxNGVmMDgxNjM2NjYyYTBlZjM1ZTk0MWUzOWI=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2018-08-25T15:10:08Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2018-08-27T16:12:49Z"}, "message": "expand comment on how statics work", "tree": {"sha": "dc3e546d23bb42ecc13c308b96439786af7465da", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/dc3e546d23bb42ecc13c308b96439786af7465da"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/07bdd48b604c314ef081636662a0ef35e941e39b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/07bdd48b604c314ef081636662a0ef35e941e39b", "html_url": "https://github.com/rust-lang/rust/commit/07bdd48b604c314ef081636662a0ef35e941e39b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/07bdd48b604c314ef081636662a0ef35e941e39b/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c898e1911d3e7280441839762a86ea351f3fdae5", "url": "https://api.github.com/repos/rust-lang/rust/commits/c898e1911d3e7280441839762a86ea351f3fdae5", "html_url": "https://github.com/rust-lang/rust/commit/c898e1911d3e7280441839762a86ea351f3fdae5"}], "stats": {"total": 12, "additions": 9, "deletions": 3}, "files": [{"sha": "e031c86ee96de0df6eb2623d392756b27b9b763b", "filename": "src/librustc_mir/interpret/place.rs", "status": "modified", "additions": 9, "deletions": 3, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/07bdd48b604c314ef081636662a0ef35e941e39b/src%2Flibrustc_mir%2Finterpret%2Fplace.rs", "raw_url": "https://github.com/rust-lang/rust/raw/07bdd48b604c314ef081636662a0ef35e941e39b/src%2Flibrustc_mir%2Finterpret%2Fplace.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Finterpret%2Fplace.rs?ref=07bdd48b604c314ef081636662a0ef35e941e39b", "patch": "@@ -489,11 +489,17 @@ impl<'a, 'mir, 'tcx, M: Machine<'mir, 'tcx>> EvalContext<'a, 'mir, 'tcx, M> {\n                     promoted: None\n                 };\n                 // Just create a lazy reference, so we can support recursive statics.\n+                // tcx takes are of assigning every static one and only one unique AllocId.\n                 // When the data here is ever actually used, memory will notice,\n                 // and it knows how to deal with alloc_id that are present in the\n-                // global table but not in its local memory.\n-                let alloc = self.tcx.alloc_map.lock()\n-                    .intern_static(cid.instance.def_id());\n+                // global table but not in its local memory: It calls back into tcx through\n+                // a query, triggering the CTFE machinery to actually turn this lazy reference\n+                // into a bunch of bytes.  IOW, statics are evaluated with CTFE even when\n+                // this EvalContext uses another Machine (e.g., in miri).  This is what we\n+                // want!  This way, computing statics works concistently between codegen\n+                // and miri: They use the same query to eventually obtain a `ty::Const`\n+                // and use that for further computation.\n+                let alloc = self.tcx.alloc_map.lock().intern_static(cid.instance.def_id());\n                 MPlaceTy::from_aligned_ptr(alloc.into(), layout)\n             }\n "}]}