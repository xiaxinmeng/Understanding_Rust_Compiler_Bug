{"sha": "d27007fd6d41a8e9f16228d036c1fedaf0449efd", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQyNzAwN2ZkNmQ0MWE4ZTlmMTYyMjhkMDM2YzFmZWRhZjA0NDllZmQ=", "commit": {"author": {"name": "Bastian Kauschke", "email": "bastian_kauschke@hotmail.de", "date": "2020-05-18T19:24:37Z"}, "committer": {"name": "Bastian Kauschke", "email": "bastian_kauschke@hotmail.de", "date": "2020-07-30T08:50:34Z"}, "message": "add tests for array_chunks", "tree": {"sha": "038d1bd34871185eabd26cbb1a01cb55e9780395", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/038d1bd34871185eabd26cbb1a01cb55e9780395"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d27007fd6d41a8e9f16228d036c1fedaf0449efd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d27007fd6d41a8e9f16228d036c1fedaf0449efd", "html_url": "https://github.com/rust-lang/rust/commit/d27007fd6d41a8e9f16228d036c1fedaf0449efd", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d27007fd6d41a8e9f16228d036c1fedaf0449efd/comments", "author": {"login": "lcnr", "id": 29864074, "node_id": "MDQ6VXNlcjI5ODY0MDc0", "avatar_url": "https://avatars.githubusercontent.com/u/29864074?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lcnr", "html_url": "https://github.com/lcnr", "followers_url": "https://api.github.com/users/lcnr/followers", "following_url": "https://api.github.com/users/lcnr/following{/other_user}", "gists_url": "https://api.github.com/users/lcnr/gists{/gist_id}", "starred_url": "https://api.github.com/users/lcnr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lcnr/subscriptions", "organizations_url": "https://api.github.com/users/lcnr/orgs", "repos_url": "https://api.github.com/users/lcnr/repos", "events_url": "https://api.github.com/users/lcnr/events{/privacy}", "received_events_url": "https://api.github.com/users/lcnr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "lcnr", "id": 29864074, "node_id": "MDQ6VXNlcjI5ODY0MDc0", "avatar_url": "https://avatars.githubusercontent.com/u/29864074?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lcnr", "html_url": "https://github.com/lcnr", "followers_url": "https://api.github.com/users/lcnr/followers", "following_url": "https://api.github.com/users/lcnr/following{/other_user}", "gists_url": "https://api.github.com/users/lcnr/gists{/gist_id}", "starred_url": "https://api.github.com/users/lcnr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lcnr/subscriptions", "organizations_url": "https://api.github.com/users/lcnr/orgs", "repos_url": "https://api.github.com/users/lcnr/repos", "events_url": "https://api.github.com/users/lcnr/events{/privacy}", "received_events_url": "https://api.github.com/users/lcnr/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d405347f095a20d832261bbf777c8214d7e61dc9", "url": "https://api.github.com/repos/rust-lang/rust/commits/d405347f095a20d832261bbf777c8214d7e61dc9", "html_url": "https://github.com/rust-lang/rust/commit/d405347f095a20d832261bbf777c8214d7e61dc9"}], "stats": {"total": 93, "additions": 92, "deletions": 1}, "files": [{"sha": "e33dad38d4b0d04c7c10d017721e6202403c22f5", "filename": "library/core/src/slice/mod.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d27007fd6d41a8e9f16228d036c1fedaf0449efd/library%2Fcore%2Fsrc%2Fslice%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d27007fd6d41a8e9f16228d036c1fedaf0449efd/library%2Fcore%2Fsrc%2Fslice%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fslice%2Fmod.rs?ref=d27007fd6d41a8e9f16228d036c1fedaf0449efd", "patch": "@@ -865,7 +865,6 @@ impl<T> [T] {\n     /// ```\n     ///\n     /// [`chunks`]: #method.chunks\n-    /// [`rchunks_exact`]: #method.rchunks_exact\n     #[unstable(feature = \"array_chunks\", issue = \"none\")]\n     #[inline]\n     pub fn array_chunks<const N: usize>(&self) -> ArrayChunks<'_, T, N> {"}, {"sha": "6b28a815f033ae1889ee36b9c545bacf7b7738a3", "filename": "library/core/tests/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d27007fd6d41a8e9f16228d036c1fedaf0449efd/library%2Fcore%2Ftests%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d27007fd6d41a8e9f16228d036c1fedaf0449efd/library%2Fcore%2Ftests%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Ftests%2Flib.rs?ref=d27007fd6d41a8e9f16228d036c1fedaf0449efd", "patch": "@@ -1,4 +1,5 @@\n #![feature(alloc_layout_extra)]\n+#![feature(array_chunks)]\n #![feature(bool_to_option)]\n #![feature(bound_cloned)]\n #![feature(box_syntax)]"}, {"sha": "27cc7fce1daa35df798e58cdbcb1a0a7c8711cce", "filename": "library/core/tests/slice.rs", "status": "modified", "additions": 91, "deletions": 0, "changes": 91, "blob_url": "https://github.com/rust-lang/rust/blob/d27007fd6d41a8e9f16228d036c1fedaf0449efd/library%2Fcore%2Ftests%2Fslice.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d27007fd6d41a8e9f16228d036c1fedaf0449efd/library%2Fcore%2Ftests%2Fslice.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Ftests%2Fslice.rs?ref=d27007fd6d41a8e9f16228d036c1fedaf0449efd", "patch": "@@ -473,6 +473,97 @@ fn test_chunks_exact_mut_zip() {\n     assert_eq!(v1, [13, 14, 19, 20, 4]);\n }\n \n+#[test]\n+fn test_array_chunks_infer() {\n+    let v: &[i32] = &[0, 1, 2, 3, 4, -4];\n+    let c = v.array_chunks();\n+    for &[a, b, c] in c {\n+        assert_eq!(a + b + c, 3);\n+    }\n+\n+    let v2: &[i32] = &[0, 1, 2, 3, 4, 5, 6];\n+    let total = v2.array_chunks().map(|&[a, b]| a * b).sum::<i32>();\n+    assert_eq!(total, 2 * 3 + 4 * 5);\n+}\n+\n+#[test]\n+fn test_array_chunks_count() {\n+    let v: &[i32] = &[0, 1, 2, 3, 4, 5];\n+    let c = v.array_chunks::<3>();\n+    assert_eq!(c.count(), 2);\n+\n+    let v2: &[i32] = &[0, 1, 2, 3, 4];\n+    let c2 = v2.array_chunks::<2>();\n+    assert_eq!(c2.count(), 2);\n+\n+    let v3: &[i32] = &[];\n+    let c3 = v3.array_chunks::<2>();\n+    assert_eq!(c3.count(), 0);\n+}\n+\n+#[test]\n+fn test_array_chunks_nth() {\n+    let v: &[i32] = &[0, 1, 2, 3, 4, 5];\n+    let mut c = v.array_chunks::<2>();\n+    assert_eq!(c.nth(1).unwrap(), &[2, 3]);\n+    assert_eq!(c.next().unwrap(), &[4, 5]);\n+\n+    let v2: &[i32] = &[0, 1, 2, 3, 4, 5, 6];\n+    let mut c2 = v2.array_chunks::<3>();\n+    assert_eq!(c2.nth(1).unwrap(), &[3, 4, 5]);\n+    assert_eq!(c2.next(), None);\n+}\n+\n+#[test]\n+fn test_array_chunks_nth_back() {\n+    let v: &[i32] = &[0, 1, 2, 3, 4, 5];\n+    let mut c = v.array_chunks::<2>();\n+    assert_eq!(c.nth_back(1).unwrap(), &[2, 3]);\n+    assert_eq!(c.next().unwrap(), &[0, 1]);\n+    assert_eq!(c.next(), None);\n+\n+    let v2: &[i32] = &[0, 1, 2, 3, 4];\n+    let mut c2 = v2.array_chunks::<3>();\n+    assert_eq!(c2.nth_back(0).unwrap(), &[0, 1, 2]);\n+    assert_eq!(c2.next(), None);\n+    assert_eq!(c2.next_back(), None);\n+\n+    let v3: &[i32] = &[0, 1, 2, 3, 4];\n+    let mut c3 = v3.array_chunks::<10>();\n+    assert_eq!(c3.nth_back(0), None);\n+}\n+\n+#[test]\n+fn test_array_chunks_last() {\n+    let v: &[i32] = &[0, 1, 2, 3, 4, 5];\n+    let c = v.array_chunks::<2>();\n+    assert_eq!(c.last().unwrap(), &[4, 5]);\n+\n+    let v2: &[i32] = &[0, 1, 2, 3, 4];\n+    let c2 = v2.array_chunks::<2>();\n+    assert_eq!(c2.last().unwrap(), &[2, 3]);\n+}\n+\n+#[test]\n+fn test_array_chunks_remainder() {\n+    let v: &[i32] = &[0, 1, 2, 3, 4];\n+    let c = v.array_chunks::<2>();\n+    assert_eq!(c.remainder(), &[4]);\n+}\n+\n+#[test]\n+fn test_array_chunks_zip() {\n+    let v1: &[i32] = &[0, 1, 2, 3, 4];\n+    let v2: &[i32] = &[6, 7, 8, 9, 10];\n+\n+    let res = v1\n+        .array_chunks::<2>()\n+        .zip(v2.array_chunks::<2>())\n+        .map(|(a, b)| a.iter().sum::<i32>() + b.iter().sum::<i32>())\n+        .collect::<Vec<_>>();\n+    assert_eq!(res, vec![14, 22]);\n+}\n+\n #[test]\n fn test_rchunks_count() {\n     let v: &[i32] = &[0, 1, 2, 3, 4, 5];"}]}