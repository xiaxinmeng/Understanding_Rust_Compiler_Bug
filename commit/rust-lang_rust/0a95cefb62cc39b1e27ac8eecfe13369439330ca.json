{"sha": "0a95cefb62cc39b1e27ac8eecfe13369439330ca", "node_id": "C_kwDOAAsO6NoAKDBhOTVjZWZiNjJjYzM5YjFlMjdhYzhlZWNmZTEzMzY5NDM5MzMwY2E", "commit": {"author": {"name": "Guillaume Gomez", "email": "guillaume.gomez@huawei.com", "date": "2022-01-17T13:50:48Z"}, "committer": {"name": "Guillaume Gomez", "email": "guillaume.gomez@huawei.com", "date": "2022-01-17T13:50:48Z"}, "message": "Correctly handle pure generics", "tree": {"sha": "88cdef35dd1ccd20c8cc6c7cc80c7ca49509636a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/88cdef35dd1ccd20c8cc6c7cc80c7ca49509636a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0a95cefb62cc39b1e27ac8eecfe13369439330ca", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0a95cefb62cc39b1e27ac8eecfe13369439330ca", "html_url": "https://github.com/rust-lang/rust/commit/0a95cefb62cc39b1e27ac8eecfe13369439330ca", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0a95cefb62cc39b1e27ac8eecfe13369439330ca/comments", "author": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "committer": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "16679a616187b6f14b308aba5b1dcef8887b231f", "url": "https://api.github.com/repos/rust-lang/rust/commits/16679a616187b6f14b308aba5b1dcef8887b231f", "html_url": "https://github.com/rust-lang/rust/commit/16679a616187b6f14b308aba5b1dcef8887b231f"}], "stats": {"total": 10, "additions": 6, "deletions": 4}, "files": [{"sha": "0ee67467c383beb9ff7c9cb7f152bdae2f7e02d9", "filename": "src/librustdoc/html/render/search_index.rs", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/0a95cefb62cc39b1e27ac8eecfe13369439330ca/src%2Flibrustdoc%2Fhtml%2Frender%2Fsearch_index.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0a95cefb62cc39b1e27ac8eecfe13369439330ca/src%2Flibrustdoc%2Fhtml%2Frender%2Fsearch_index.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender%2Fsearch_index.rs?ref=0a95cefb62cc39b1e27ac8eecfe13369439330ca", "patch": "@@ -3,7 +3,7 @@ use std::collections::BTreeMap;\n \n use rustc_data_structures::fx::FxHashMap;\n use rustc_middle::ty::TyCtxt;\n-use rustc_span::symbol::Symbol;\n+use rustc_span::symbol::{kw, Symbol};\n use serde::ser::{Serialize, SerializeStruct, Serializer};\n \n use crate::clean;\n@@ -220,7 +220,8 @@ fn get_index_type_name(clean_type: &clean::Type) -> Option<Symbol> {\n             let path = &bounds[0].trait_;\n             Some(path.segments.last().unwrap().name)\n         }\n-        clean::Generic(s) => Some(s),\n+        // We return an empty name because we don't care about the generic name itself.\n+        clean::Generic(_) => Some(kw::Empty),\n         clean::Primitive(ref p) => Some(p.as_sym()),\n         clean::BorrowedRef { ref type_, .. } => get_index_type_name(type_),\n         clean::BareFunction(_)\n@@ -258,9 +259,10 @@ fn add_generics_and_bounds_as_types<'tcx>(\n         cache: &Cache,\n     ) {\n         let is_full_generic = ty.is_full_generic();\n+        let generics_empty = generics.is_empty();\n \n         if is_full_generic {\n-            if generics.is_empty() {\n+            if generics_empty {\n                 // This is a type parameter with no trait bounds (for example: `T` in\n                 // `fn f<T>(p: T)`, so not useful for the rustdoc search because we would end up\n                 // with an empty type with an empty name. Let's just discard it.\n@@ -307,7 +309,7 @@ fn add_generics_and_bounds_as_types<'tcx>(\n             }\n         }\n         let mut index_ty = get_index_type(&ty, generics);\n-        if index_ty.name.as_ref().map(|s| s.is_empty()).unwrap_or(true) {\n+        if index_ty.name.as_ref().map(|s| s.is_empty() && generics_empty).unwrap_or(true) {\n             return;\n         }\n         if is_full_generic {"}]}