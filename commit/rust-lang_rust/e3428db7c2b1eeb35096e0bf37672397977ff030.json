{"sha": "e3428db7c2b1eeb35096e0bf37672397977ff030", "node_id": "MDY6Q29tbWl0NzI0NzEyOmUzNDI4ZGI3YzJiMWVlYjM1MDk2ZTBiZjM3NjcyMzk3OTc3ZmYwMzA=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2019-03-31T20:28:00Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2019-03-31T20:28:00Z"}, "message": "Auto merge of #59577 - dlrobertson:fix_58881, r=nagisa\n\nFix LLVM IR generated for C-variadic arguments\n\nIt is possible to create malformed LLVM IR given variadic arguments that\nare aggregate types. This occurs due to improper tracking of the current\nargument in the functions list of arguments.\n\nFixes: #58881", "tree": {"sha": "6342506bcf71975160f13747c879d2fec7684a55", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6342506bcf71975160f13747c879d2fec7684a55"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e3428db7c2b1eeb35096e0bf37672397977ff030", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e3428db7c2b1eeb35096e0bf37672397977ff030", "html_url": "https://github.com/rust-lang/rust/commit/e3428db7c2b1eeb35096e0bf37672397977ff030", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e3428db7c2b1eeb35096e0bf37672397977ff030/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4fac5c98b22faa7fce2d5d64bf34c61340883302", "url": "https://api.github.com/repos/rust-lang/rust/commits/4fac5c98b22faa7fce2d5d64bf34c61340883302", "html_url": "https://github.com/rust-lang/rust/commit/4fac5c98b22faa7fce2d5d64bf34c61340883302"}, {"sha": "a9d62be557a648f254c6850e2a08917686a26976", "url": "https://api.github.com/repos/rust-lang/rust/commits/a9d62be557a648f254c6850e2a08917686a26976", "html_url": "https://github.com/rust-lang/rust/commit/a9d62be557a648f254c6850e2a08917686a26976"}], "stats": {"total": 36, "additions": 23, "deletions": 13}, "files": [{"sha": "26442faa3215c48a39e51312757992fc36f9b224", "filename": "src/librustc_codegen_ssa/mir/block.rs", "status": "modified", "additions": 2, "deletions": 13, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/e3428db7c2b1eeb35096e0bf37672397977ff030/src%2Flibrustc_codegen_ssa%2Fmir%2Fblock.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e3428db7c2b1eeb35096e0bf37672397977ff030/src%2Flibrustc_codegen_ssa%2Fmir%2Fblock.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_ssa%2Fmir%2Fblock.rs?ref=e3428db7c2b1eeb35096e0bf37672397977ff030", "patch": "@@ -20,7 +20,7 @@ use syntax_pos::Pos;\n \n use super::{FunctionCx, LocalRef};\n use super::place::PlaceRef;\n-use super::operand::{OperandValue, OperandRef};\n+use super::operand::OperandRef;\n use super::operand::OperandValue::{Pair, Ref, Immediate};\n \n /// Used by `FunctionCx::codegen_terminator` for emitting common patterns\n@@ -695,18 +695,7 @@ impl<'a, 'tcx: 'a, Bx: BuilderMethods<'a, 'tcx>> FunctionCx<'a, 'tcx, Bx> {\n             // an \"spoofed\" `VaList`. This argument is ignored, but we need to\n             // populate it with a dummy operand so that the users real arguments\n             // are not overwritten.\n-            let i = if sig.c_variadic && last_arg_idx.map(|x| x == i).unwrap_or(false) {\n-                let layout = match self.cx.tcx().lang_items().va_list() {\n-                    Some(did) => bx.cx().layout_of(bx.tcx().type_of(did)),\n-                    None => bug!(\"`va_list` language item required for C-variadics\"),\n-                };\n-                let op = OperandRef {\n-                    val: OperandValue::Immediate(\n-                        bx.cx().const_undef(bx.cx().immediate_backend_type(layout)\n-                    )),\n-                    layout: layout,\n-                };\n-                self.codegen_argument(&mut bx, op, &mut llargs, &fn_ty.args[i]);\n+            let i = if sig.c_variadic && last_arg_idx.map(|x| i >= x).unwrap_or(false) {\n                 if i + 1 < fn_ty.args.len() {\n                     i + 1\n                 } else {"}, {"sha": "de451324f03c45e05db65128ee2e6584c860856e", "filename": "src/test/codegen/issue-58881.rs", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/e3428db7c2b1eeb35096e0bf37672397977ff030/src%2Ftest%2Fcodegen%2Fissue-58881.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e3428db7c2b1eeb35096e0bf37672397977ff030/src%2Ftest%2Fcodegen%2Fissue-58881.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcodegen%2Fissue-58881.rs?ref=e3428db7c2b1eeb35096e0bf37672397977ff030", "patch": "@@ -0,0 +1,21 @@\n+// compile-flags: -C no-prepopulate-passes\n+//\n+// only-x86_64\n+// ignore-windows\n+\n+#![crate_type = \"lib\"]\n+\n+extern \"C\" {\n+    fn variadic_fn(_: i32, ...);\n+}\n+\n+#[repr(C)]\n+struct Foo(u8);\n+#[repr(C)]\n+struct Bar(u64, u64, u64);\n+\n+// Ensure that emit arguments of the correct type.\n+pub unsafe fn test_call_variadic() {\n+    // CHECK: call void (i32, ...) @variadic_fn(i32 0, i8 {{.*}}, %Bar* {{.*}})\n+    variadic_fn(0, Foo(0), Bar(0, 0, 0))\n+}"}]}