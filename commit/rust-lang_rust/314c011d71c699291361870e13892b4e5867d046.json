{"sha": "314c011d71c699291361870e13892b4e5867d046", "node_id": "MDY6Q29tbWl0NzI0NzEyOjMxNGMwMTFkNzFjNjk5MjkxMzYxODcwZTEzODkyYjRlNTg2N2QwNDY=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2011-10-18T17:35:33Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2011-10-18T17:37:04Z"}, "message": "Immutable and mutable? are covariant on their inner types\n\nWhereas [mutable T] is invariant with respect to T, [T] and [mutable? T]\nare covariant with respect to T.", "tree": {"sha": "f0c57d6737e882e8511a4f51202e0060d52877ce", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f0c57d6737e882e8511a4f51202e0060d52877ce"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/314c011d71c699291361870e13892b4e5867d046", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/314c011d71c699291361870e13892b4e5867d046", "html_url": "https://github.com/rust-lang/rust/commit/314c011d71c699291361870e13892b4e5867d046", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/314c011d71c699291361870e13892b4e5867d046/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "71a4a661359dbe92493f7321f8b3677dec734df9", "url": "https://api.github.com/repos/rust-lang/rust/commits/71a4a661359dbe92493f7321f8b3677dec734df9", "html_url": "https://github.com/rust-lang/rust/commit/71a4a661359dbe92493f7321f8b3677dec734df9"}], "stats": {"total": 39, "additions": 36, "deletions": 3}, "files": [{"sha": "1288de9fa22b1620deb33efecd5115fa857d74fe", "filename": "src/comp/middle/ty.rs", "status": "modified", "additions": 10, "deletions": 3, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/314c011d71c699291361870e13892b4e5867d046/src%2Fcomp%2Fmiddle%2Fty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/314c011d71c699291361870e13892b4e5867d046/src%2Fcomp%2Fmiddle%2Fty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Fty.rs?ref=314c011d71c699291361870e13892b4e5867d046", "patch": "@@ -1947,9 +1947,16 @@ mod unify {\n                  variance: variance) ->\n        option::t<(ast::mutability, variance)> {\n \n-        // If you're unifying mutability then the thing inside\n-        // will be invariant on anything it contains\n-        let newvariance = variance_transform(variance, invariant);\n+        // If you're unifying on something mutable then we have to\n+        // be invariant on the inner type\n+        let newvariance = alt expected {\n+          ast::mut. {\n+            variance_transform(variance, invariant)\n+          }\n+          _ {\n+            variance_transform(variance, covariant)\n+          }\n+        };\n \n         if expected == actual { ret some((expected, newvariance)); }\n         if variance == covariant {"}, {"sha": "5fb49cf88ce1944ce1a0fdb1b3fd7cd32850b578", "filename": "src/test/run-pass/mutable-huh-variance-vec1.rs", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/314c011d71c699291361870e13892b4e5867d046/src%2Ftest%2Frun-pass%2Fmutable-huh-variance-vec1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/314c011d71c699291361870e13892b4e5867d046/src%2Ftest%2Frun-pass%2Fmutable-huh-variance-vec1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fmutable-huh-variance-vec1.rs?ref=314c011d71c699291361870e13892b4e5867d046", "patch": "@@ -0,0 +1,13 @@\n+// error-pattern: mismatched types\n+\n+fn main() {\n+    let v = [[0]];\n+\n+    // This is ok because the outer vec is covariant with respect\n+    // to the inner vec. If the outer vec was mutable then we\n+    // couldn't do this.\n+    fn f(&&v: [[mutable? int]]) {\n+    }\n+\n+    f(v);\n+}"}, {"sha": "1e254e8680680e6325b8be330d14f687d13e837f", "filename": "src/test/run-pass/mutable-huh-variance-vec2.rs", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/314c011d71c699291361870e13892b4e5867d046/src%2Ftest%2Frun-pass%2Fmutable-huh-variance-vec2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/314c011d71c699291361870e13892b4e5867d046/src%2Ftest%2Frun-pass%2Fmutable-huh-variance-vec2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fmutable-huh-variance-vec2.rs?ref=314c011d71c699291361870e13892b4e5867d046", "patch": "@@ -0,0 +1,13 @@\n+// error-pattern: mismatched types\n+\n+fn main() {\n+    let v = [[0]];\n+\n+    // This is ok because the outer vec is covariant with respect\n+    // to the inner vec. If the outer vec was mutable then we\n+    // couldn't do this.\n+    fn f(&&v: [mutable? [mutable? int]]) {\n+    }\n+\n+    f(v);\n+}"}]}