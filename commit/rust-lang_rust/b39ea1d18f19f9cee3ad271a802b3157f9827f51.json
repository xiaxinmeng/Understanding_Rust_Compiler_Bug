{"sha": "b39ea1d18f19f9cee3ad271a802b3157f9827f51", "node_id": "MDY6Q29tbWl0NzI0NzEyOmIzOWVhMWQxOGYxOWY5Y2VlM2FkMjcxYTgwMmIzMTU3Zjk4MjdmNTE=", "commit": {"author": {"name": "Josef Reinhard Brandl", "email": "mail@josefbrandl.de", "date": "2018-06-26T19:13:36Z"}, "committer": {"name": "Josef Reinhard Brandl", "email": "mail@josefbrandl.de", "date": "2018-06-26T19:13:36Z"}, "message": "Move spawn errors into executor.rs", "tree": {"sha": "70a56dac874a0486e01efff84a1ca80d31ee7be0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/70a56dac874a0486e01efff84a1ca80d31ee7be0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b39ea1d18f19f9cee3ad271a802b3157f9827f51", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b39ea1d18f19f9cee3ad271a802b3157f9827f51", "html_url": "https://github.com/rust-lang/rust/commit/b39ea1d18f19f9cee3ad271a802b3157f9827f51", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b39ea1d18f19f9cee3ad271a802b3157f9827f51/comments", "author": {"login": "MajorBreakfast", "id": 340142, "node_id": "MDQ6VXNlcjM0MDE0Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/340142?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MajorBreakfast", "html_url": "https://github.com/MajorBreakfast", "followers_url": "https://api.github.com/users/MajorBreakfast/followers", "following_url": "https://api.github.com/users/MajorBreakfast/following{/other_user}", "gists_url": "https://api.github.com/users/MajorBreakfast/gists{/gist_id}", "starred_url": "https://api.github.com/users/MajorBreakfast/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MajorBreakfast/subscriptions", "organizations_url": "https://api.github.com/users/MajorBreakfast/orgs", "repos_url": "https://api.github.com/users/MajorBreakfast/repos", "events_url": "https://api.github.com/users/MajorBreakfast/events{/privacy}", "received_events_url": "https://api.github.com/users/MajorBreakfast/received_events", "type": "User", "site_admin": false}, "committer": {"login": "MajorBreakfast", "id": 340142, "node_id": "MDQ6VXNlcjM0MDE0Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/340142?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MajorBreakfast", "html_url": "https://github.com/MajorBreakfast", "followers_url": "https://api.github.com/users/MajorBreakfast/followers", "following_url": "https://api.github.com/users/MajorBreakfast/following{/other_user}", "gists_url": "https://api.github.com/users/MajorBreakfast/gists{/gist_id}", "starred_url": "https://api.github.com/users/MajorBreakfast/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MajorBreakfast/subscriptions", "organizations_url": "https://api.github.com/users/MajorBreakfast/orgs", "repos_url": "https://api.github.com/users/MajorBreakfast/repos", "events_url": "https://api.github.com/users/MajorBreakfast/events{/privacy}", "received_events_url": "https://api.github.com/users/MajorBreakfast/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c055fef0104f017b9f6aaa25ba0fc69ccb34ae8e", "url": "https://api.github.com/repos/rust-lang/rust/commits/c055fef0104f017b9f6aaa25ba0fc69ccb34ae8e", "html_url": "https://github.com/rust-lang/rust/commit/c055fef0104f017b9f6aaa25ba0fc69ccb34ae8e"}], "stats": {"total": 117, "additions": 50, "deletions": 67}, "files": [{"sha": "73bf80d2f9997782ab3c5324f77d82685d8eed10", "filename": "src/libcore/task/executor.rs", "status": "modified", "additions": 47, "deletions": 1, "changes": 48, "blob_url": "https://github.com/rust-lang/rust/blob/b39ea1d18f19f9cee3ad271a802b3157f9827f51/src%2Flibcore%2Ftask%2Fexecutor.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b39ea1d18f19f9cee3ad271a802b3157f9827f51/src%2Flibcore%2Ftask%2Fexecutor.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Ftask%2Fexecutor.rs?ref=b39ea1d18f19f9cee3ad271a802b3157f9827f51", "patch": "@@ -12,7 +12,8 @@\n             reason = \"futures in libcore are unstable\",\n             issue = \"50547\")]\n \n-use super::{TaskObj, SpawnObjError, SpawnErrorKind};\n+use fmt;\n+use super::{TaskObj, LocalTaskObj};\n \n /// A task executor.\n ///\n@@ -42,3 +43,48 @@ pub trait Executor {\n         Ok(())\n     }\n }\n+\n+/// Provides the reason that an executor was unable to spawn.\n+pub struct SpawnErrorKind {\n+    _hidden: (),\n+}\n+\n+impl fmt::Debug for SpawnErrorKind {\n+    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {\n+        f.debug_tuple(\"SpawnErrorKind\")\n+            .field(&\"shutdown\")\n+            .finish()\n+    }\n+}\n+\n+impl SpawnErrorKind {\n+    /// Spawning is failing because the executor has been shut down.\n+    pub fn shutdown() -> SpawnErrorKind {\n+        SpawnErrorKind { _hidden: () }\n+    }\n+\n+    /// Check whether this error is the `shutdown` error.\n+    pub fn is_shutdown(&self) -> bool {\n+        true\n+    }\n+}\n+\n+/// The result of a failed spawn\n+#[derive(Debug)]\n+pub struct SpawnObjError {\n+    /// The kind of error\n+    pub kind: SpawnErrorKind,\n+\n+    /// The task for which spawning was attempted\n+    pub task: TaskObj,\n+}\n+\n+/// The result of a failed spawn\n+#[derive(Debug)]\n+pub struct SpawnLocalObjError {\n+    /// The kind of error\n+    pub kind: SpawnErrorKind,\n+\n+    /// The task for which spawning was attempted\n+    pub task: LocalTaskObj,\n+}"}, {"sha": "d167a37410553081101572465c41fc625583d1ec", "filename": "src/libcore/task/mod.rs", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/b39ea1d18f19f9cee3ad271a802b3157f9827f51/src%2Flibcore%2Ftask%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b39ea1d18f19f9cee3ad271a802b3157f9827f51/src%2Flibcore%2Ftask%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Ftask%2Fmod.rs?ref=b39ea1d18f19f9cee3ad271a802b3157f9827f51", "patch": "@@ -18,14 +18,13 @@ mod context;\n pub use self::context::Context;\n \n mod executor;\n-pub use self::executor::Executor;\n+pub use self::executor::{\n+  Executor, SpawnErrorKind, SpawnObjError, SpawnLocalObjError\n+};\n \n mod poll;\n pub use self::poll::Poll;\n \n-mod spawn_error;\n-pub use self::spawn_error::{SpawnErrorKind, SpawnObjError, SpawnLocalObjError};\n-\n mod task;\n pub use self::task::{TaskObj, LocalTaskObj, UnsafeTask};\n "}, {"sha": "42d37efbe1977e63149f473958569682fb164efe", "filename": "src/libcore/task/spawn_error.rs", "status": "removed", "additions": 0, "deletions": 62, "changes": 62, "blob_url": "https://github.com/rust-lang/rust/blob/c055fef0104f017b9f6aaa25ba0fc69ccb34ae8e/src%2Flibcore%2Ftask%2Fspawn_error.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c055fef0104f017b9f6aaa25ba0fc69ccb34ae8e/src%2Flibcore%2Ftask%2Fspawn_error.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Ftask%2Fspawn_error.rs?ref=c055fef0104f017b9f6aaa25ba0fc69ccb34ae8e", "patch": "@@ -1,62 +0,0 @@\n-// Copyright 2018 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n-#![unstable(feature = \"futures_api\",\n-            reason = \"futures in libcore are unstable\",\n-            issue = \"50547\")]\n-\n-use fmt;\n-use mem;\n-use super::{TaskObj, LocalTaskObj};\n-\n-/// Provides the reason that an executor was unable to spawn.\n-pub struct SpawnErrorKind {\n-    _hidden: (),\n-}\n-\n-impl fmt::Debug for SpawnErrorKind {\n-    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {\n-        f.debug_tuple(\"SpawnErrorKind\")\n-            .field(&\"shutdown\")\n-            .finish()\n-    }\n-}\n-\n-impl SpawnErrorKind {\n-    /// Spawning is failing because the executor has been shut down.\n-    pub fn shutdown() -> SpawnErrorKind {\n-        SpawnErrorKind { _hidden: () }\n-    }\n-\n-    /// Check whether this error is the `shutdown` error.\n-    pub fn is_shutdown(&self) -> bool {\n-        true\n-    }\n-}\n-\n-/// The result of a failed spawn\n-#[derive(Debug)]\n-pub struct SpawnObjError {\n-    /// The kind of error\n-    pub kind: SpawnErrorKind,\n-\n-    /// The task for which spawning was attempted\n-    pub task: TaskObj,\n-}\n-\n-/// The result of a failed spawn\n-#[derive(Debug)]\n-pub struct SpawnLocalObjError {\n-    /// The kind of error\n-    pub kind: SpawnErrorKind,\n-\n-    /// The task for which spawning was attempted\n-    pub task: LocalTaskObj,\n-}"}]}