{"sha": "6df6eb8ae8358ebab76fcfa35ac7cc41e18a2560", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZkZjZlYjhhZTgzNThlYmFiNzZmY2ZhMzVhYzdjYzQxZTE4YTI1NjA=", "commit": {"author": {"name": "jackh726", "email": "jack.huey@umassmed.edu", "date": "2021-08-16T14:49:36Z"}, "committer": {"name": "jackh726", "email": "jack.huey@umassmed.edu", "date": "2021-08-23T21:45:04Z"}, "message": "Add a couple more tests", "tree": {"sha": "d6bd67dedffdb273006f0c85e359700f9126f656", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d6bd67dedffdb273006f0c85e359700f9126f656"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6df6eb8ae8358ebab76fcfa35ac7cc41e18a2560", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6df6eb8ae8358ebab76fcfa35ac7cc41e18a2560", "html_url": "https://github.com/rust-lang/rust/commit/6df6eb8ae8358ebab76fcfa35ac7cc41e18a2560", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6df6eb8ae8358ebab76fcfa35ac7cc41e18a2560/comments", "author": {"login": "jackh726", "id": 31162821, "node_id": "MDQ6VXNlcjMxMTYyODIx", "avatar_url": "https://avatars.githubusercontent.com/u/31162821?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jackh726", "html_url": "https://github.com/jackh726", "followers_url": "https://api.github.com/users/jackh726/followers", "following_url": "https://api.github.com/users/jackh726/following{/other_user}", "gists_url": "https://api.github.com/users/jackh726/gists{/gist_id}", "starred_url": "https://api.github.com/users/jackh726/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jackh726/subscriptions", "organizations_url": "https://api.github.com/users/jackh726/orgs", "repos_url": "https://api.github.com/users/jackh726/repos", "events_url": "https://api.github.com/users/jackh726/events{/privacy}", "received_events_url": "https://api.github.com/users/jackh726/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jackh726", "id": 31162821, "node_id": "MDQ6VXNlcjMxMTYyODIx", "avatar_url": "https://avatars.githubusercontent.com/u/31162821?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jackh726", "html_url": "https://github.com/jackh726", "followers_url": "https://api.github.com/users/jackh726/followers", "following_url": "https://api.github.com/users/jackh726/following{/other_user}", "gists_url": "https://api.github.com/users/jackh726/gists{/gist_id}", "starred_url": "https://api.github.com/users/jackh726/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jackh726/subscriptions", "organizations_url": "https://api.github.com/users/jackh726/orgs", "repos_url": "https://api.github.com/users/jackh726/repos", "events_url": "https://api.github.com/users/jackh726/events{/privacy}", "received_events_url": "https://api.github.com/users/jackh726/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d9242ff0aae0189570c0abd173bc05e5ff82d48f", "url": "https://api.github.com/repos/rust-lang/rust/commits/d9242ff0aae0189570c0abd173bc05e5ff82d48f", "html_url": "https://github.com/rust-lang/rust/commit/d9242ff0aae0189570c0abd173bc05e5ff82d48f"}], "stats": {"total": 81, "additions": 81, "deletions": 0}, "files": [{"sha": "9ee07c2f1e1cc953a0535c22080bcfbe37faeb8d", "filename": "src/test/ui/generic-associated-types/issue-87429-associated-type-default.rs", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/6df6eb8ae8358ebab76fcfa35ac7cc41e18a2560/src%2Ftest%2Fui%2Fgeneric-associated-types%2Fissue-87429-associated-type-default.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6df6eb8ae8358ebab76fcfa35ac7cc41e18a2560/src%2Ftest%2Fui%2Fgeneric-associated-types%2Fissue-87429-associated-type-default.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fgeneric-associated-types%2Fissue-87429-associated-type-default.rs?ref=6df6eb8ae8358ebab76fcfa35ac7cc41e18a2560", "patch": "@@ -0,0 +1,18 @@\n+// check-fail\n+\n+#![feature(associated_type_defaults)]\n+#![feature(generic_associated_types)]\n+\n+trait Family {\n+    // Fine, i32: PartialEq<i32>\n+    type Member<'a>: for<'b> PartialEq<Self::Member<'b>> = i32;\n+}\n+\n+struct Foo;\n+trait Family2 {\n+    // Not fine, not Foo: PartialEq<Foo>\n+    type Member<'a>: for<'b> PartialEq<Self::Member<'b>> = Foo;\n+    //~^ ERROR can't compare\n+}\n+\n+fn main() {}"}, {"sha": "8f031c7618360deae24a9e3341cae15eacfd0b9d", "filename": "src/test/ui/generic-associated-types/issue-87429-associated-type-default.stderr", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/6df6eb8ae8358ebab76fcfa35ac7cc41e18a2560/src%2Ftest%2Fui%2Fgeneric-associated-types%2Fissue-87429-associated-type-default.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6df6eb8ae8358ebab76fcfa35ac7cc41e18a2560/src%2Ftest%2Fui%2Fgeneric-associated-types%2Fissue-87429-associated-type-default.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fgeneric-associated-types%2Fissue-87429-associated-type-default.stderr?ref=6df6eb8ae8358ebab76fcfa35ac7cc41e18a2560", "patch": "@@ -0,0 +1,14 @@\n+error[E0277]: can't compare `Foo` with `Foo`\n+  --> $DIR/issue-87429-associated-type-default.rs:14:5\n+   |\n+LL |     type Member<'a>: for<'b> PartialEq<Self::Member<'b>> = Foo;\n+   |     ^^^^^^^^^^^^^^^^^-----------------------------------^^^^^^^\n+   |     |                |\n+   |     |                required by this bound in `Family2::Member`\n+   |     no implementation for `Foo == Foo`\n+   |\n+   = help: the trait `PartialEq` is not implemented for `Foo`\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0277`."}, {"sha": "b365e07feb28a957e7e3ad9bc9bf420199591505", "filename": "src/test/ui/generic-associated-types/issue-87429-specialization.rs", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/6df6eb8ae8358ebab76fcfa35ac7cc41e18a2560/src%2Ftest%2Fui%2Fgeneric-associated-types%2Fissue-87429-specialization.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6df6eb8ae8358ebab76fcfa35ac7cc41e18a2560/src%2Ftest%2Fui%2Fgeneric-associated-types%2Fissue-87429-specialization.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fgeneric-associated-types%2Fissue-87429-specialization.rs?ref=6df6eb8ae8358ebab76fcfa35ac7cc41e18a2560", "patch": "@@ -0,0 +1,25 @@\n+// check-fail\n+\n+#![feature(specialization)]\n+//~^ WARN incomplete\n+#![feature(generic_associated_types)]\n+\n+trait Family {\n+    type Member<'a>: for<'b> PartialEq<Self::Member<'b>>;\n+}\n+\n+struct I32Family;\n+\n+impl Family for I32Family {\n+    default type Member<'a> = i32;\n+}\n+\n+struct Foo;\n+struct FooFamily;\n+\n+impl Family for FooFamily {\n+    default type Member<'a> = Foo;\n+    //~^ ERROR can't compare\n+}\n+\n+fn main() {}"}, {"sha": "05d40f9e7cc1fdd24d33c69a23611c94a05de639", "filename": "src/test/ui/generic-associated-types/issue-87429-specialization.stderr", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/6df6eb8ae8358ebab76fcfa35ac7cc41e18a2560/src%2Ftest%2Fui%2Fgeneric-associated-types%2Fissue-87429-specialization.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6df6eb8ae8358ebab76fcfa35ac7cc41e18a2560/src%2Ftest%2Fui%2Fgeneric-associated-types%2Fissue-87429-specialization.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fgeneric-associated-types%2Fissue-87429-specialization.stderr?ref=6df6eb8ae8358ebab76fcfa35ac7cc41e18a2560", "patch": "@@ -0,0 +1,24 @@\n+warning: the feature `specialization` is incomplete and may not be safe to use and/or cause compiler crashes\n+  --> $DIR/issue-87429-specialization.rs:3:12\n+   |\n+LL | #![feature(specialization)]\n+   |            ^^^^^^^^^^^^^^\n+   |\n+   = note: `#[warn(incomplete_features)]` on by default\n+   = note: see issue #31844 <https://github.com/rust-lang/rust/issues/31844> for more information\n+   = help: consider using `min_specialization` instead, which is more stable and complete\n+\n+error[E0277]: can't compare `Foo` with `Foo`\n+  --> $DIR/issue-87429-specialization.rs:21:5\n+   |\n+LL |     type Member<'a>: for<'b> PartialEq<Self::Member<'b>>;\n+   |                      ----------------------------------- required by this bound in `Family::Member`\n+...\n+LL |     default type Member<'a> = Foo;\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ no implementation for `Foo == Foo`\n+   |\n+   = help: the trait `PartialEq` is not implemented for `Foo`\n+\n+error: aborting due to previous error; 1 warning emitted\n+\n+For more information about this error, try `rustc --explain E0277`."}]}