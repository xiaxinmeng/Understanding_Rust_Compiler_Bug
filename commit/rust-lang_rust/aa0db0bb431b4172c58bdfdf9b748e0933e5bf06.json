{"sha": "aa0db0bb431b4172c58bdfdf9b748e0933e5bf06", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFhMGRiMGJiNDMxYjQxNzJjNThiZGZkZjliNzQ4ZTA5MzNlNWJmMDY=", "commit": {"author": {"name": "Dylan DPC", "email": "dylan.dpc@gmail.com", "date": "2020-04-16T21:34:42Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-04-16T21:34:42Z"}, "message": "Rollup merge of #71197 - ljedrz:unsafe_unused, r=ecstatic-morse\n\nDon't use the HirId to NodeId map in MIR\n\nAnother step towards not having to build a `HirId` to `NodeId` map other than for doc and RLS purposes.\n\nWe are currently sorting `unsafe` blocks by `NodeId` in `check_unsafety`; change it to sorting by `Span` instead; this passes the tests, but better ideas are welcome.\n\nIn addition, simplify the split between the used and unused `unsafe` blocks for readability and less sorting.\n\ncc https://github.com/rust-lang/rust/issues/50928", "tree": {"sha": "173a2da77478e741e486c6fe4f9fd92f2b575282", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/173a2da77478e741e486c6fe4f9fd92f2b575282"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/aa0db0bb431b4172c58bdfdf9b748e0933e5bf06", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJemM9yCRBK7hj4Ov3rIwAAdHIIALC1QIfMz2hAvB0ZaZrQIo3w\nk+48BeXqGvjmcVIUqfSTt2SGOmBP99XQdFpWVnLLxpeM1lT+XoMHr7iOrbjW0OmA\nyaYCqTiLM7H9ffiD9zMN8nkOqqvX7NiN7YNMnopRJKVfl7aVVMrPQQXmtPr1LoRq\n8+2mkC4pZPSm1/IFzwAl6lwOwsxMYa74OIErQs9O3EWeP58kZBpGeH8fr8uCXxNT\nCz5/+MVy6dgvjFqkBW4XnSkjy+TMe6ifA/kKc9HnhlU0yyyI/jBx8xcn9sQx5L3K\nzG4db4AZfKu9bnYldUZ5ye3fj3h1C5W6RxcyZD7wSKsB1v5Njh0HqWDoRdT8nKE=\n=iXfM\n-----END PGP SIGNATURE-----\n", "payload": "tree 173a2da77478e741e486c6fe4f9fd92f2b575282\nparent c68c71e24e098d617fd1bbb82b6120d03ff3e252\nparent 66575c9962188aa2f16df04fa1fef1786f0d216f\nauthor Dylan DPC <dylan.dpc@gmail.com> 1587072882 +0200\ncommitter GitHub <noreply@github.com> 1587072882 +0200\n\nRollup merge of #71197 - ljedrz:unsafe_unused, r=ecstatic-morse\n\nDon't use the HirId to NodeId map in MIR\n\nAnother step towards not having to build a `HirId` to `NodeId` map other than for doc and RLS purposes.\n\nWe are currently sorting `unsafe` blocks by `NodeId` in `check_unsafety`; change it to sorting by `Span` instead; this passes the tests, but better ideas are welcome.\n\nIn addition, simplify the split between the used and unused `unsafe` blocks for readability and less sorting.\n\ncc https://github.com/rust-lang/rust/issues/50928\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/aa0db0bb431b4172c58bdfdf9b748e0933e5bf06", "html_url": "https://github.com/rust-lang/rust/commit/aa0db0bb431b4172c58bdfdf9b748e0933e5bf06", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/aa0db0bb431b4172c58bdfdf9b748e0933e5bf06/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c68c71e24e098d617fd1bbb82b6120d03ff3e252", "url": "https://api.github.com/repos/rust-lang/rust/commits/c68c71e24e098d617fd1bbb82b6120d03ff3e252", "html_url": "https://github.com/rust-lang/rust/commit/c68c71e24e098d617fd1bbb82b6120d03ff3e252"}, {"sha": "66575c9962188aa2f16df04fa1fef1786f0d216f", "url": "https://api.github.com/repos/rust-lang/rust/commits/66575c9962188aa2f16df04fa1fef1786f0d216f", "html_url": "https://github.com/rust-lang/rust/commit/66575c9962188aa2f16df04fa1fef1786f0d216f"}], "stats": {"total": 20, "additions": 13, "deletions": 7}, "files": [{"sha": "9f6b1963ce7942a167f1e0f6143698cd8923b936", "filename": "src/librustc_mir/transform/check_unsafety.rs", "status": "modified", "additions": 13, "deletions": 7, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/aa0db0bb431b4172c58bdfdf9b748e0933e5bf06/src%2Flibrustc_mir%2Ftransform%2Fcheck_unsafety.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aa0db0bb431b4172c58bdfdf9b748e0933e5bf06/src%2Flibrustc_mir%2Ftransform%2Fcheck_unsafety.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Fcheck_unsafety.rs?ref=aa0db0bb431b4172c58bdfdf9b748e0933e5bf06", "patch": "@@ -641,13 +641,19 @@ pub fn check_unsafety(tcx: TyCtxt<'_>, def_id: DefId) {\n         }\n     }\n \n-    let mut unsafe_blocks: Vec<_> = unsafe_blocks.iter().collect();\n-    unsafe_blocks.sort_by_cached_key(|(hir_id, _)| tcx.hir().hir_id_to_node_id(*hir_id));\n-    let used_unsafe: FxHashSet<_> =\n-        unsafe_blocks.iter().flat_map(|&&(id, used)| used.then_some(id)).collect();\n-    for &(block_id, is_used) in unsafe_blocks {\n-        if !is_used {\n-            report_unused_unsafe(tcx, &used_unsafe, block_id);\n+    let (mut unsafe_used, mut unsafe_unused): (FxHashSet<_>, Vec<_>) = Default::default();\n+    for &(block_id, is_used) in unsafe_blocks.iter() {\n+        if is_used {\n+            unsafe_used.insert(block_id);\n+        } else {\n+            unsafe_unused.push(block_id);\n         }\n     }\n+    // The unused unsafe blocks might not be in source order; sort them so that the unused unsafe\n+    // error messages are properly aligned and the issue-45107 and lint-unused-unsafe tests pass.\n+    unsafe_unused.sort_by_cached_key(|hir_id| tcx.hir().span(*hir_id));\n+\n+    for &block_id in &unsafe_unused {\n+        report_unused_unsafe(tcx, &unsafe_used, block_id);\n+    }\n }"}]}