{"sha": "c4d7bebd950306b44e6820646ae9ea29404a5323", "node_id": "C_kwDOAAsO6NoAKGM0ZDdiZWJkOTUwMzA2YjQ0ZTY4MjA2NDZhZTllYTI5NDA0YTUzMjM", "commit": {"author": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2021-06-06T11:50:57Z"}, "committer": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2021-11-04T19:29:21Z"}, "message": "Remove eval_always for inherent_impls.", "tree": {"sha": "c6ade11aac7306f3df5f5747619a95a6042f4406", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c6ade11aac7306f3df5f5747619a95a6042f4406"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c4d7bebd950306b44e6820646ae9ea29404a5323", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c4d7bebd950306b44e6820646ae9ea29404a5323", "html_url": "https://github.com/rust-lang/rust/commit/c4d7bebd950306b44e6820646ae9ea29404a5323", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c4d7bebd950306b44e6820646ae9ea29404a5323/comments", "author": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c4ff03f689c03d73d3a8af49611b1f2b54d6a300", "url": "https://api.github.com/repos/rust-lang/rust/commits/c4ff03f689c03d73d3a8af49611b1f2b54d6a300", "html_url": "https://github.com/rust-lang/rust/commit/c4ff03f689c03d73d3a8af49611b1f2b54d6a300"}], "stats": {"total": 6, "additions": 1, "deletions": 5}, "files": [{"sha": "3a9c249b9382f4f886fbfabd472d92606d5b43cc", "filename": "compiler/rustc_middle/src/query/mod.rs", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/c4d7bebd950306b44e6820646ae9ea29404a5323/compiler%2Frustc_middle%2Fsrc%2Fquery%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c4d7bebd950306b44e6820646ae9ea29404a5323/compiler%2Frustc_middle%2Fsrc%2Fquery%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fquery%2Fmod.rs?ref=c4d7bebd950306b44e6820646ae9ea29404a5323", "patch": "@@ -649,7 +649,6 @@ rustc_queries! {\n     /// Methods in these implementations don't need to be exported.\n     query inherent_impls(key: DefId) -> &'tcx [DefId] {\n         desc { |tcx| \"collecting inherent impls for `{}`\", tcx.def_path_str(key) }\n-        eval_always\n         separate_provide_extern\n     }\n \n@@ -808,15 +807,12 @@ rustc_queries! {\n     /// Not meant to be used directly outside of coherence.\n     query crate_inherent_impls(k: ()) -> CrateInherentImpls {\n         storage(ArenaCacheSelector<'tcx>)\n-        eval_always\n         desc { \"all inherent impls defined in crate\" }\n     }\n \n     /// Checks all types in the crate for overlap in their inherent impls. Reports errors.\n     /// Not meant to be used directly outside of coherence.\n-    query crate_inherent_impls_overlap_check(_: ())\n-        -> () {\n-        eval_always\n+    query crate_inherent_impls_overlap_check(_: ()) -> () {\n         desc { \"check for overlap between inherent impls defined in this crate\" }\n     }\n "}]}