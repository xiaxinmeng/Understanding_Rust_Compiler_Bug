{"sha": "516a177273b1f6943f63abd2a74ffa5f53542fdb", "node_id": "MDY6Q29tbWl0NzI0NzEyOjUxNmExNzcyNzNiMWY2OTQzZjYzYWJkMmE3NGZmYTVmNTM1NDJmZGI=", "commit": {"author": {"name": "Cameron Zwarich", "email": "zwarich@mozilla.com", "date": "2014-05-22T04:44:49Z"}, "committer": {"name": "Cameron Zwarich", "email": "zwarich@mozilla.com", "date": "2014-05-22T05:04:22Z"}, "message": "Add a suggestion to use a `let` binding on some borrowck errors.", "tree": {"sha": "667444242fb06d414812e03d63e1f3690da1e641", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/667444242fb06d414812e03d63e1f3690da1e641"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/516a177273b1f6943f63abd2a74ffa5f53542fdb", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/516a177273b1f6943f63abd2a74ffa5f53542fdb", "html_url": "https://github.com/rust-lang/rust/commit/516a177273b1f6943f63abd2a74ffa5f53542fdb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/516a177273b1f6943f63abd2a74ffa5f53542fdb/comments", "author": null, "committer": null, "parents": [{"sha": "f78eb1434152224dae7d0f48528b5b0c064e9bc6", "url": "https://api.github.com/repos/rust-lang/rust/commits/f78eb1434152224dae7d0f48528b5b0c064e9bc6", "html_url": "https://github.com/rust-lang/rust/commit/f78eb1434152224dae7d0f48528b5b0c064e9bc6"}], "stats": {"total": 39, "additions": 38, "deletions": 1}, "files": [{"sha": "eaa39ee231df3fa347d8076193aec53f6d8fdaea", "filename": "src/librustc/middle/borrowck/mod.rs", "status": "modified", "additions": 18, "deletions": 1, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/516a177273b1f6943f63abd2a74ffa5f53542fdb/src%2Flibrustc%2Fmiddle%2Fborrowck%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/516a177273b1f6943f63abd2a74ffa5f53542fdb/src%2Flibrustc%2Fmiddle%2Fborrowck%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fborrowck%2Fmod.rs?ref=516a177273b1f6943f63abd2a74ffa5f53542fdb", "patch": "@@ -689,11 +689,16 @@ impl<'a> BorrowckCtxt<'a> {\n                     \"reference must be valid for \",\n                     sub_scope,\n                     \"...\");\n+                let suggestion = if is_statement_scope(self.tcx, super_scope) {\n+                    \"; consider using a `let` binding to increase its lifetime\"\n+                } else {\n+                    \"\"\n+                };\n                 note_and_explain_region(\n                     self.tcx,\n                     \"...but borrowed value is only valid for \",\n                     super_scope,\n-                    \"\");\n+                    suggestion);\n             }\n \n             err_borrowed_pointer_too_short(loan_scope, ptr_scope, _) => {\n@@ -779,6 +784,18 @@ impl<'a> BorrowckCtxt<'a> {\n     }\n }\n \n+fn is_statement_scope(tcx: &ty::ctxt, region: ty::Region) -> bool {\n+     match region {\n+         ty::ReScope(node_id) => {\n+             match tcx.map.find(node_id) {\n+                 Some(ast_map::NodeStmt(_)) => true,\n+                 _ => false\n+             }\n+         }\n+         _ => false\n+     }\n+}\n+\n impl DataFlowOperator for LoanDataFlowOperator {\n     #[inline]\n     fn initial_value(&self) -> bool {"}, {"sha": "a03087f9b2dad46b2d3131b57a7e00ffbb5207ae", "filename": "src/test/compile-fail/borrowck-let-suggestion.rs", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/516a177273b1f6943f63abd2a74ffa5f53542fdb/src%2Ftest%2Fcompile-fail%2Fborrowck-let-suggestion.rs", "raw_url": "https://github.com/rust-lang/rust/raw/516a177273b1f6943f63abd2a74ffa5f53542fdb/src%2Ftest%2Fcompile-fail%2Fborrowck-let-suggestion.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fborrowck-let-suggestion.rs?ref=516a177273b1f6943f63abd2a74ffa5f53542fdb", "patch": "@@ -0,0 +1,20 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+fn f() {\n+    let x = [1].iter(); //~ ERROR borrowed value does not live long enough\n+                        //~^^ NOTE reference must be valid for the block\n+                        //~^^ NOTE consider using a `let` binding to increase its lifetime\n+}\n+\n+fn main() {\n+    f();\n+}\n+"}]}