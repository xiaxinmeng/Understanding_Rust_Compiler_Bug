{"sha": "b25564fc8abb5cac1738d19235efbb5ec2cc3a70", "node_id": "MDY6Q29tbWl0NzI0NzEyOmIyNTU2NGZjOGFiYjVjYWMxNzM4ZDE5MjM1ZWZiYjVlYzJjYzNhNzA=", "commit": {"author": {"name": "Mateusz Miku\u0142a", "email": "matti@marinelayer.io", "date": "2019-03-18T11:04:06Z"}, "committer": {"name": "Mateusz Miku\u0142a", "email": "mati865@gmail.com", "date": "2019-03-18T11:54:10Z"}, "message": "name -> ident_str", "tree": {"sha": "b26e5665e00ae7ec786884f75d2b82038f1989f0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b26e5665e00ae7ec786884f75d2b82038f1989f0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b25564fc8abb5cac1738d19235efbb5ec2cc3a70", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b25564fc8abb5cac1738d19235efbb5ec2cc3a70", "html_url": "https://github.com/rust-lang/rust/commit/b25564fc8abb5cac1738d19235efbb5ec2cc3a70", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b25564fc8abb5cac1738d19235efbb5ec2cc3a70/comments", "author": {"login": "mati865", "id": 1174646, "node_id": "MDQ6VXNlcjExNzQ2NDY=", "avatar_url": "https://avatars.githubusercontent.com/u/1174646?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mati865", "html_url": "https://github.com/mati865", "followers_url": "https://api.github.com/users/mati865/followers", "following_url": "https://api.github.com/users/mati865/following{/other_user}", "gists_url": "https://api.github.com/users/mati865/gists{/gist_id}", "starred_url": "https://api.github.com/users/mati865/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mati865/subscriptions", "organizations_url": "https://api.github.com/users/mati865/orgs", "repos_url": "https://api.github.com/users/mati865/repos", "events_url": "https://api.github.com/users/mati865/events{/privacy}", "received_events_url": "https://api.github.com/users/mati865/received_events", "type": "User", "site_admin": false}, "committer": {"login": "mati865", "id": 1174646, "node_id": "MDQ6VXNlcjExNzQ2NDY=", "avatar_url": "https://avatars.githubusercontent.com/u/1174646?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mati865", "html_url": "https://github.com/mati865", "followers_url": "https://api.github.com/users/mati865/followers", "following_url": "https://api.github.com/users/mati865/following{/other_user}", "gists_url": "https://api.github.com/users/mati865/gists{/gist_id}", "starred_url": "https://api.github.com/users/mati865/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mati865/subscriptions", "organizations_url": "https://api.github.com/users/mati865/orgs", "repos_url": "https://api.github.com/users/mati865/repos", "events_url": "https://api.github.com/users/mati865/events{/privacy}", "received_events_url": "https://api.github.com/users/mati865/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e63a685412e763a0eb04cf8a5daccdbe090d364e", "url": "https://api.github.com/repos/rust-lang/rust/commits/e63a685412e763a0eb04cf8a5daccdbe090d364e", "html_url": "https://github.com/rust-lang/rust/commit/e63a685412e763a0eb04cf8a5daccdbe090d364e"}], "stats": {"total": 10, "additions": 7, "deletions": 3}, "files": [{"sha": "66a1d72ec2d3afb995c4da21440ea09c46e9cf2f", "filename": "clippy_lints/src/attrs.rs", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/b25564fc8abb5cac1738d19235efbb5ec2cc3a70/clippy_lints%2Fsrc%2Fattrs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b25564fc8abb5cac1738d19235efbb5ec2cc3a70/clippy_lints%2Fsrc%2Fattrs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fattrs.rs?ref=b25564fc8abb5cac1738d19235efbb5ec2cc3a70", "patch": "@@ -208,7 +208,8 @@ impl LintPass for AttrPass {\n impl<'a, 'tcx> LateLintPass<'a, 'tcx> for AttrPass {\n     fn check_attribute(&mut self, cx: &LateContext<'a, 'tcx>, attr: &'tcx Attribute) {\n         if let Some(items) = &attr.meta_item_list() {\n-            match &*attr.name().as_str() {\n+            if let Some(ident) = attr.ident_str() {\n+                match ident {\n                 \"allow\" | \"warn\" | \"deny\" | \"forbid\" => {\n                     check_clippy_lint_names(cx, items);\n                 },\n@@ -229,6 +230,7 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for AttrPass {\n             }\n         }\n     }\n+    }\n \n     fn check_item(&mut self, cx: &LateContext<'a, 'tcx>, item: &'tcx Item) {\n         if is_relevant_item(cx.tcx, item) {\n@@ -240,7 +242,8 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for AttrPass {\n \n                 for attr in &item.attrs {\n                     if let Some(lint_list) = &attr.meta_item_list() {\n-                        match &*attr.name().as_str() {\n+                        if let Some(ident) = attr.ident_str() {\n+                            match ident {\n                             \"allow\" | \"warn\" | \"deny\" | \"forbid\" => {\n                                 // whitelist `unused_imports` and `deprecated` for `use` items\n                                 // and `unused_imports` for `extern crate` items with `macro_use`\n@@ -288,6 +291,7 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for AttrPass {\n                         }\n                     }\n                 }\n+                }\n             },\n             _ => {},\n         }"}, {"sha": "1cff51d19486555f66af3ddd5cabd88f2f53f042", "filename": "clippy_lints/src/missing_doc.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b25564fc8abb5cac1738d19235efbb5ec2cc3a70/clippy_lints%2Fsrc%2Fmissing_doc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b25564fc8abb5cac1738d19235efbb5ec2cc3a70/clippy_lints%2Fsrc%2Fmissing_doc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmissing_doc.rs?ref=b25564fc8abb5cac1738d19235efbb5ec2cc3a70", "patch": "@@ -58,7 +58,7 @@ impl MissingDoc {\n             if let Some(meta) = meta;\n             if let MetaItemKind::List(list) = meta.node;\n             if let Some(meta) = list.get(0);\n-            if let Some(name) = meta.name();\n+            if let Some(name) = meta.ident_str();\n             then {\n                 name == \"include\"\n             } else {"}]}