{"sha": "0eb17e3f3134a7cf83f659d4f1b6e25aa6bcdde9", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBlYjE3ZTNmMzEzNGE3Y2Y4M2Y2NTlkNGYxYjZlMjVhYTZiY2RkZTk=", "commit": {"author": {"name": "Ariel Ben-Yehuda", "email": "ariel.byd@gmail.com", "date": "2014-10-18T20:12:02Z"}, "committer": {"name": "Ariel Ben-Yehuda", "email": "ariel.byd@gmail.com", "date": "2014-10-19T20:54:45Z"}, "message": "Ensure that the return type of a function is Sized\n\nWhile no real rvalue of an unsized type can exist, a diverging function\ncan still \"return\" a value of such a type, which causes an ICE.\n\nFixes #18107.", "tree": {"sha": "1ea16a26b04c85219e678737dfd746a8abc4a468", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1ea16a26b04c85219e678737dfd746a8abc4a468"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0eb17e3f3134a7cf83f659d4f1b6e25aa6bcdde9", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0eb17e3f3134a7cf83f659d4f1b6e25aa6bcdde9", "html_url": "https://github.com/rust-lang/rust/commit/0eb17e3f3134a7cf83f659d4f1b6e25aa6bcdde9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0eb17e3f3134a7cf83f659d4f1b6e25aa6bcdde9/comments", "author": {"login": "arielb1", "id": 1830974, "node_id": "MDQ6VXNlcjE4MzA5NzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1830974?v=4", "gravatar_id": "", "url": "https://api.github.com/users/arielb1", "html_url": "https://github.com/arielb1", "followers_url": "https://api.github.com/users/arielb1/followers", "following_url": "https://api.github.com/users/arielb1/following{/other_user}", "gists_url": "https://api.github.com/users/arielb1/gists{/gist_id}", "starred_url": "https://api.github.com/users/arielb1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/arielb1/subscriptions", "organizations_url": "https://api.github.com/users/arielb1/orgs", "repos_url": "https://api.github.com/users/arielb1/repos", "events_url": "https://api.github.com/users/arielb1/events{/privacy}", "received_events_url": "https://api.github.com/users/arielb1/received_events", "type": "User", "site_admin": false}, "committer": {"login": "arielb1", "id": 1830974, "node_id": "MDQ6VXNlcjE4MzA5NzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1830974?v=4", "gravatar_id": "", "url": "https://api.github.com/users/arielb1", "html_url": "https://github.com/arielb1", "followers_url": "https://api.github.com/users/arielb1/followers", "following_url": "https://api.github.com/users/arielb1/following{/other_user}", "gists_url": "https://api.github.com/users/arielb1/gists{/gist_id}", "starred_url": "https://api.github.com/users/arielb1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/arielb1/subscriptions", "organizations_url": "https://api.github.com/users/arielb1/orgs", "repos_url": "https://api.github.com/users/arielb1/repos", "events_url": "https://api.github.com/users/arielb1/events{/privacy}", "received_events_url": "https://api.github.com/users/arielb1/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c121cbab35c9ff9ba133c578976a4ec35c011bcf", "url": "https://api.github.com/repos/rust-lang/rust/commits/c121cbab35c9ff9ba133c578976a4ec35c011bcf", "html_url": "https://github.com/rust-lang/rust/commit/c121cbab35c9ff9ba133c578976a4ec35c011bcf"}], "stats": {"total": 66, "additions": 52, "deletions": 14}, "files": [{"sha": "f0282804540f527d6f44b9bdbac87f6d307d4a4a", "filename": "src/librustc/middle/traits/mod.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/0eb17e3f3134a7cf83f659d4f1b6e25aa6bcdde9/src%2Flibrustc%2Fmiddle%2Ftraits%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0eb17e3f3134a7cf83f659d4f1b6e25aa6bcdde9/src%2Flibrustc%2Fmiddle%2Ftraits%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftraits%2Fmod.rs?ref=0eb17e3f3134a7cf83f659d4f1b6e25aa6bcdde9", "patch": "@@ -77,6 +77,7 @@ pub enum ObligationCauseCode {\n     AssignmentLhsSized,        // L = X implies that L is Sized\n     StructInitializerSized,    // S { ... } must be Sized\n     VariableType(ast::NodeId), // Type of each variable must be Sized\n+    ReturnType,                // Return type must be Sized\n     RepeatVec,                 // [T,..n] --> T must be Copy\n \n     // Captures of variable the given id by a closure (span is the"}, {"sha": "a9c4317b9ee5d4f9543392d7200695a23e5b3a33", "filename": "src/librustc/middle/typeck/check/mod.rs", "status": "modified", "additions": 4, "deletions": 7, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/0eb17e3f3134a7cf83f659d4f1b6e25aa6bcdde9/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fcheck%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0eb17e3f3134a7cf83f659d4f1b6e25aa6bcdde9/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fcheck%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fcheck%2Fmod.rs?ref=0eb17e3f3134a7cf83f659d4f1b6e25aa6bcdde9", "patch": "@@ -555,16 +555,12 @@ fn check_fn<'a, 'tcx>(ccx: &'a CrateCtxt<'a, 'tcx>,\n \n     // Remember return type so that regionck can access it later.\n     let fn_sig_tys: Vec<ty::t> =\n-        arg_tys.iter()\n-        .chain([ret_ty].iter())\n-        .map(|&ty| ty)\n-        .collect();\n+        arg_tys.iter().chain([ret_ty].iter()).map(|&ty| ty).collect();\n     debug!(\"fn-sig-map: fn_id={} fn_sig_tys={}\",\n            fn_id,\n            fn_sig_tys.repr(tcx));\n-    inherited.fn_sig_map\n-        .borrow_mut()\n-        .insert(fn_id, fn_sig_tys);\n+\n+    inherited.fn_sig_map.borrow_mut().insert(fn_id, fn_sig_tys);\n \n     {\n         let mut visit = GatherLocalsVisitor { fcx: &fcx, };\n@@ -591,6 +587,7 @@ fn check_fn<'a, 'tcx>(ccx: &'a CrateCtxt<'a, 'tcx>,\n \n         visit.visit_block(body);\n     }\n+    fcx.require_type_is_sized(ret_ty, decl.output.span, traits::ReturnType);\n \n     check_block_with_expected(&fcx, body, ExpectHasType(ret_ty));\n "}, {"sha": "d557a2b713be7127a3169de9ba05facef2fe4ce4", "filename": "src/librustc/middle/typeck/check/vtable2.rs", "status": "modified", "additions": 8, "deletions": 3, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/0eb17e3f3134a7cf83f659d4f1b6e25aa6bcdde9/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fcheck%2Fvtable2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0eb17e3f3134a7cf83f659d4f1b6e25aa6bcdde9/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fcheck%2Fvtable2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fcheck%2Fvtable2.rs?ref=0eb17e3f3134a7cf83f659d4f1b6e25aa6bcdde9", "patch": "@@ -366,15 +366,20 @@ fn note_obligation_cause(fcx: &FnCtxt,\n         traits::RepeatVec => {\n             tcx.sess.span_note(\n                 obligation.cause.span,\n-                format!(\n-                    \"the `Copy` trait is required because the \\\n-                     repeated element will be copied\").as_slice());\n+                \"the `Copy` trait is required because the \\\n+                 repeated element will be copied\");\n         }\n         traits::VariableType(_) => {\n             tcx.sess.span_note(\n                 obligation.cause.span,\n                 \"all local variables must have a statically known size\");\n         }\n+        traits::ReturnType => {\n+            tcx.sess.span_note(\n+                obligation.cause.span,\n+                \"the return type of a function must have a \\\n+                 statically known size\");\n+        }\n         traits::AssignmentLhsSized => {\n             tcx.sess.span_note(\n                 obligation.cause.span,"}, {"sha": "967f49924d4054f3a1698593b304b308f44f76a1", "filename": "src/test/auxiliary/lang-item-public.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/0eb17e3f3134a7cf83f659d4f1b6e25aa6bcdde9/src%2Ftest%2Fauxiliary%2Flang-item-public.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0eb17e3f3134a7cf83f659d4f1b6e25aa6bcdde9/src%2Ftest%2Fauxiliary%2Flang-item-public.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fauxiliary%2Flang-item-public.rs?ref=0eb17e3f3134a7cf83f659d4f1b6e25aa6bcdde9", "patch": "@@ -11,6 +11,9 @@\n #![no_std]\n #![feature(lang_items)]\n \n+#[lang=\"sized\"]\n+pub trait Sized for Sized? {}\n+\n #[lang=\"fail\"]\n fn fail(_: &(&'static str, &'static str, uint)) -> ! { loop {} }\n "}, {"sha": "5e076a0dfbb4d1dbb87d8aebe0b81b7e24fea689", "filename": "src/test/compile-fail/issue-17025.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/0eb17e3f3134a7cf83f659d4f1b6e25aa6bcdde9/src%2Ftest%2Fcompile-fail%2Fissue-17025.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0eb17e3f3134a7cf83f659d4f1b6e25aa6bcdde9/src%2Ftest%2Fcompile-fail%2Fissue-17025.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-17025.rs?ref=0eb17e3f3134a7cf83f659d4f1b6e25aa6bcdde9", "patch": "@@ -13,8 +13,9 @@ enum A {\n     C([Box<A>]),\n }\n \n-fn c(c:char) -> A {\n-    B(c) //~ ERROR cannot move a value of type A: the size of A cannot be statically determined\n+fn c(c:char) {\n+    B(c);\n+    //~^ ERROR cannot move a value of type A: the size of A cannot be statically determined\n }\n \n pub fn main() {}"}, {"sha": "6cebf7f9da14d94a219d6293a8fd79bf9432dac8", "filename": "src/test/compile-fail/issue-18107.rs", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/0eb17e3f3134a7cf83f659d4f1b6e25aa6bcdde9/src%2Ftest%2Fcompile-fail%2Fissue-18107.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0eb17e3f3134a7cf83f659d4f1b6e25aa6bcdde9/src%2Ftest%2Fcompile-fail%2Fissue-18107.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-18107.rs?ref=0eb17e3f3134a7cf83f659d4f1b6e25aa6bcdde9", "patch": "@@ -0,0 +1,25 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+\n+\n+pub trait AbstractRenderer {}\n+\n+fn _create_render(_: &()) ->\n+    AbstractRenderer\n+//~^ ERROR: the trait `core::kinds::Sized` is not implemented\n+{\n+    match 0u {\n+        _ => unimplemented!()\n+    }\n+}\n+\n+fn main() {\n+}"}, {"sha": "96088052e91bf7718b3dece988471e4da9267543", "filename": "src/test/compile-fail/issue-5883.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/0eb17e3f3134a7cf83f659d4f1b6e25aa6bcdde9/src%2Ftest%2Fcompile-fail%2Fissue-5883.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0eb17e3f3134a7cf83f659d4f1b6e25aa6bcdde9/src%2Ftest%2Fcompile-fail%2Fissue-5883.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-5883.rs?ref=0eb17e3f3134a7cf83f659d4f1b6e25aa6bcdde9", "patch": "@@ -14,7 +14,8 @@ struct Struct {\n     r: A+'static\n }\n \n-fn new_struct(r: A+'static) -> Struct {\n+fn new_struct(r: A+'static)\n+    -> Struct { //~^  ERROR the trait `core::kinds::Sized` is not implemented\n     //~^ ERROR the trait `core::kinds::Sized` is not implemented\n     Struct { r: r }\n     //~^ ERROR the trait `core::kinds::Sized` is not implemented"}, {"sha": "b65ad2a2e6aae6d7a58743c1535bfefc52272716", "filename": "src/test/compile-fail/privacy4.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/0eb17e3f3134a7cf83f659d4f1b6e25aa6bcdde9/src%2Ftest%2Fcompile-fail%2Fprivacy4.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0eb17e3f3134a7cf83f659d4f1b6e25aa6bcdde9/src%2Ftest%2Fcompile-fail%2Fprivacy4.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fprivacy4.rs?ref=0eb17e3f3134a7cf83f659d4f1b6e25aa6bcdde9", "patch": "@@ -8,9 +8,11 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![feature(globs)]\n+#![feature(globs, lang_items)]\n #![no_std] // makes debugging this test *a lot* easier (during resolve)\n \n+#[lang = \"sized\"] pub trait Sized for Sized? {}\n+\n // Test to make sure that private items imported through globs remain private\n // when  they're used.\n "}, {"sha": "dd11ec645b42ebfc48ed9c7dfdf83f11c92bd480", "filename": "src/test/compile-fail/required-lang-item.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/0eb17e3f3134a7cf83f659d4f1b6e25aa6bcdde9/src%2Ftest%2Fcompile-fail%2Frequired-lang-item.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0eb17e3f3134a7cf83f659d4f1b6e25aa6bcdde9/src%2Ftest%2Fcompile-fail%2Frequired-lang-item.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Frequired-lang-item.rs?ref=0eb17e3f3134a7cf83f659d4f1b6e25aa6bcdde9", "patch": "@@ -8,8 +8,11 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#![feature(lang_items)]\n #![no_std]\n \n+#[lang=\"sized\"] pub trait Sized for Sized? {}\n+\n // error-pattern:requires `start` lang_item\n \n fn main() {}"}]}