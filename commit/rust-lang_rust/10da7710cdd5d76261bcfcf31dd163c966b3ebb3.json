{"sha": "10da7710cdd5d76261bcfcf31dd163c966b3ebb3", "node_id": "C_kwDOAAsO6NoAKDEwZGE3NzEwY2RkNWQ3NjI2MWJjZmNmMzFkZDE2M2M5NjZiM2ViYjM", "commit": {"author": {"name": "Ali MJ Al-Nasrawy", "email": "alimjalnasrawy@gmail.com", "date": "2023-03-03T03:26:01Z"}, "committer": {"name": "Ali MJ Al-Nasrawy", "email": "alimjalnasrawy@gmail.com", "date": "2023-03-03T11:12:05Z"}, "message": "ignore bivariant regions in opaque types", "tree": {"sha": "3bb1efa9d948caa45a05c3b85efe490486f4a030", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3bb1efa9d948caa45a05c3b85efe490486f4a030"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/10da7710cdd5d76261bcfcf31dd163c966b3ebb3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/10da7710cdd5d76261bcfcf31dd163c966b3ebb3", "html_url": "https://github.com/rust-lang/rust/commit/10da7710cdd5d76261bcfcf31dd163c966b3ebb3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/10da7710cdd5d76261bcfcf31dd163c966b3ebb3/comments", "author": {"login": "aliemjay", "id": 28497461, "node_id": "MDQ6VXNlcjI4NDk3NDYx", "avatar_url": "https://avatars.githubusercontent.com/u/28497461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aliemjay", "html_url": "https://github.com/aliemjay", "followers_url": "https://api.github.com/users/aliemjay/followers", "following_url": "https://api.github.com/users/aliemjay/following{/other_user}", "gists_url": "https://api.github.com/users/aliemjay/gists{/gist_id}", "starred_url": "https://api.github.com/users/aliemjay/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aliemjay/subscriptions", "organizations_url": "https://api.github.com/users/aliemjay/orgs", "repos_url": "https://api.github.com/users/aliemjay/repos", "events_url": "https://api.github.com/users/aliemjay/events{/privacy}", "received_events_url": "https://api.github.com/users/aliemjay/received_events", "type": "User", "site_admin": false}, "committer": {"login": "aliemjay", "id": 28497461, "node_id": "MDQ6VXNlcjI4NDk3NDYx", "avatar_url": "https://avatars.githubusercontent.com/u/28497461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aliemjay", "html_url": "https://github.com/aliemjay", "followers_url": "https://api.github.com/users/aliemjay/followers", "following_url": "https://api.github.com/users/aliemjay/following{/other_user}", "gists_url": "https://api.github.com/users/aliemjay/gists{/gist_id}", "starred_url": "https://api.github.com/users/aliemjay/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aliemjay/subscriptions", "organizations_url": "https://api.github.com/users/aliemjay/orgs", "repos_url": "https://api.github.com/users/aliemjay/repos", "events_url": "https://api.github.com/users/aliemjay/events{/privacy}", "received_events_url": "https://api.github.com/users/aliemjay/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9d74bff829174c4a707ee2ab17ac6e01490d9a6a", "url": "https://api.github.com/repos/rust-lang/rust/commits/9d74bff829174c4a707ee2ab17ac6e01490d9a6a", "html_url": "https://github.com/rust-lang/rust/commit/9d74bff829174c4a707ee2ab17ac6e01490d9a6a"}], "stats": {"total": 52, "additions": 32, "deletions": 20}, "files": [{"sha": "3137e71781ca43cf01725f9cc53ab4dddff6e15d", "filename": "compiler/rustc_borrowck/src/region_infer/mod.rs", "status": "modified", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/10da7710cdd5d76261bcfcf31dd163c966b3ebb3/compiler%2Frustc_borrowck%2Fsrc%2Fregion_infer%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/10da7710cdd5d76261bcfcf31dd163c966b3ebb3/compiler%2Frustc_borrowck%2Fsrc%2Fregion_infer%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_borrowck%2Fsrc%2Fregion_infer%2Fmod.rs?ref=10da7710cdd5d76261bcfcf31dd163c966b3ebb3", "patch": "@@ -1097,6 +1097,36 @@ impl<'tcx> RegionInferenceContext<'tcx> {\n     ) -> Option<ClosureOutlivesSubject<'tcx>> {\n         let tcx = infcx.tcx;\n \n+        // Opaque types' substs may include useless lifetimes.\n+        // We will replace them with ReStatic.\n+        struct OpaqueFolder<'tcx> {\n+            tcx: TyCtxt<'tcx>,\n+        }\n+        impl<'tcx> ty::TypeFolder<TyCtxt<'tcx>> for OpaqueFolder<'tcx> {\n+            fn interner(&self) -> TyCtxt<'tcx> {\n+                self.tcx\n+            }\n+            fn fold_ty(&mut self, t: Ty<'tcx>) -> Ty<'tcx> {\n+                use ty::TypeSuperFoldable as _;\n+                let tcx = self.tcx;\n+                let &ty::Alias(ty::Opaque, ty::AliasTy { substs, def_id, .. }) = t.kind() else {\n+                    return t.super_fold_with(self);\n+                };\n+                let substs =\n+                    std::iter::zip(substs, tcx.variances_of(def_id)).map(|(arg, v)| {\n+                        match (arg.unpack(), v) {\n+                            (ty::GenericArgKind::Lifetime(_), ty::Bivariant) => {\n+                                tcx.lifetimes.re_static.into()\n+                            }\n+                            _ => arg.fold_with(self),\n+                        }\n+                    });\n+                tcx.mk_opaque(def_id, tcx.mk_substs_from_iter(substs))\n+            }\n+        }\n+\n+        let ty = ty.fold_with(&mut OpaqueFolder { tcx });\n+\n         let ty = tcx.fold_regions(ty, |r, _depth| {\n             let r_vid = self.to_region_vid(r);\n             let r_scc = self.constraint_sccs.scc(r_vid);"}, {"sha": "55905850f0c97ec3799d05cac322b7bad9c63c5a", "filename": "tests/ui/nll/closure-requirements/type-test-subject-opaque-2.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/10da7710cdd5d76261bcfcf31dd163c966b3ebb3/tests%2Fui%2Fnll%2Fclosure-requirements%2Ftype-test-subject-opaque-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/10da7710cdd5d76261bcfcf31dd163c966b3ebb3/tests%2Fui%2Fnll%2Fclosure-requirements%2Ftype-test-subject-opaque-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fnll%2Fclosure-requirements%2Ftype-test-subject-opaque-2.rs?ref=10da7710cdd5d76261bcfcf31dd163c966b3ebb3", "patch": "@@ -1,5 +1,5 @@\n-// check-fail\n-// known-bug: #107516\n+// Resgression test for #107516.\n+// check-pass\n \n fn iter1<'a: 'a>() -> impl Iterator<Item = &'static str> {\n     None.into_iter()"}, {"sha": "f6266dd4eb5dce21d6f2e59b0d07109036deb289", "filename": "tests/ui/nll/closure-requirements/type-test-subject-opaque-2.stderr", "status": "removed", "additions": 0, "deletions": 18, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/9d74bff829174c4a707ee2ab17ac6e01490d9a6a/tests%2Fui%2Fnll%2Fclosure-requirements%2Ftype-test-subject-opaque-2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9d74bff829174c4a707ee2ab17ac6e01490d9a6a/tests%2Fui%2Fnll%2Fclosure-requirements%2Ftype-test-subject-opaque-2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fnll%2Fclosure-requirements%2Ftype-test-subject-opaque-2.stderr?ref=9d74bff829174c4a707ee2ab17ac6e01490d9a6a", "patch": "@@ -1,18 +0,0 @@\n-error[E0310]: the opaque type `iter1<'_>::{opaque#0}` may not live long enough\n-  --> $DIR/type-test-subject-opaque-2.rs:15:16\n-   |\n-LL |     let _ = || Bivar(iter1());\n-   |                ^^^^^^^^^^^^^^\n-   |\n-   = help: consider adding an explicit lifetime bound `iter1<'_>::{opaque#0}: 'static`...\n-   = note: ...so that the type `impl Iterator<Item = &'static str>` will meet its required lifetime bounds\n-\n-error: `iter2<'_>::{opaque#0}<'_>` does not live long enough\n-  --> $DIR/type-test-subject-opaque-2.rs:16:16\n-   |\n-LL |     let _ = || Bivar(iter2());\n-   |                ^^^^^^^^^^^^^^\n-\n-error: aborting due to 2 previous errors\n-\n-For more information about this error, try `rustc --explain E0310`."}]}