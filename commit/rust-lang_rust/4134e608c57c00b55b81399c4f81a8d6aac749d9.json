{"sha": "4134e608c57c00b55b81399c4f81a8d6aac749d9", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQxMzRlNjA4YzU3YzAwYjU1YjgxMzk5YzRmODFhOGQ2YWFjNzQ5ZDk=", "commit": {"author": {"name": "Lzu Tao", "email": "taolzu@gmail.com", "date": "2019-08-23T05:42:45Z"}, "committer": {"name": "Lzu Tao", "email": "taolzu@gmail.com", "date": "2019-08-23T05:42:45Z"}, "message": "Update Unicode lint tests", "tree": {"sha": "98a5ebeaddeae994bad36658a4c97eeaca0c0850", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/98a5ebeaddeae994bad36658a4c97eeaca0c0850"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4134e608c57c00b55b81399c4f81a8d6aac749d9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4134e608c57c00b55b81399c4f81a8d6aac749d9", "html_url": "https://github.com/rust-lang/rust/commit/4134e608c57c00b55b81399c4f81a8d6aac749d9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4134e608c57c00b55b81399c4f81a8d6aac749d9/comments", "author": {"login": "tesuji", "id": 15225902, "node_id": "MDQ6VXNlcjE1MjI1OTAy", "avatar_url": "https://avatars.githubusercontent.com/u/15225902?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tesuji", "html_url": "https://github.com/tesuji", "followers_url": "https://api.github.com/users/tesuji/followers", "following_url": "https://api.github.com/users/tesuji/following{/other_user}", "gists_url": "https://api.github.com/users/tesuji/gists{/gist_id}", "starred_url": "https://api.github.com/users/tesuji/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tesuji/subscriptions", "organizations_url": "https://api.github.com/users/tesuji/orgs", "repos_url": "https://api.github.com/users/tesuji/repos", "events_url": "https://api.github.com/users/tesuji/events{/privacy}", "received_events_url": "https://api.github.com/users/tesuji/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tesuji", "id": 15225902, "node_id": "MDQ6VXNlcjE1MjI1OTAy", "avatar_url": "https://avatars.githubusercontent.com/u/15225902?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tesuji", "html_url": "https://github.com/tesuji", "followers_url": "https://api.github.com/users/tesuji/followers", "following_url": "https://api.github.com/users/tesuji/following{/other_user}", "gists_url": "https://api.github.com/users/tesuji/gists{/gist_id}", "starred_url": "https://api.github.com/users/tesuji/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tesuji/subscriptions", "organizations_url": "https://api.github.com/users/tesuji/orgs", "repos_url": "https://api.github.com/users/tesuji/repos", "events_url": "https://api.github.com/users/tesuji/events{/privacy}", "received_events_url": "https://api.github.com/users/tesuji/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6d9ee9e5eba16612bb2fc253f77673b823812b8a", "url": "https://api.github.com/repos/rust-lang/rust/commits/6d9ee9e5eba16612bb2fc253f77673b823812b8a", "html_url": "https://github.com/rust-lang/rust/commit/6d9ee9e5eba16612bb2fc253f77673b823812b8a"}], "stats": {"total": 18, "additions": 9, "deletions": 9}, "files": [{"sha": "f7e1edae5162fc1f5d37baba00dd669dc3d341a8", "filename": "clippy_lints/src/unicode.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/4134e608c57c00b55b81399c4f81a8d6aac749d9/clippy_lints%2Fsrc%2Funicode.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4134e608c57c00b55b81399c4f81a8d6aac749d9/clippy_lints%2Fsrc%2Funicode.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Funicode.rs?ref=4134e608c57c00b55b81399c4f81a8d6aac749d9", "patch": "@@ -56,17 +56,17 @@ declare_clippy_lint! {\n     ///\n     /// **Known problems** None.\n     ///\n-    /// **Example:** You may not see it, but \u201ca\u0300\u201d and \u201c\u00e0\u201d aren't the same string. The\n+    /// **Example:** You may not see it, but \"a\u0300\"\" and \"\u00e0\"\" aren't the same string. The\n     /// former when escaped is actually `\"a\\u{300}\"` while the latter is `\"\\u{e0}\"`.\n     pub UNICODE_NOT_NFC,\n     pedantic,\n-    \"using a unicode literal not in NFC normal form (see [unicode tr15](http://www.unicode.org/reports/tr15/) for further information)\"\n+    \"using a Unicode literal not in NFC normal form (see [Unicode tr15](http://www.unicode.org/reports/tr15/) for further information)\"\n }\n \n declare_lint_pass!(Unicode => [ZERO_WIDTH_SPACE, NON_ASCII_LITERAL, UNICODE_NOT_NFC]);\n \n-impl<'a, 'tcx> LateLintPass<'a, 'tcx> for Unicode {\n-    fn check_expr(&mut self, cx: &LateContext<'a, 'tcx>, expr: &'tcx Expr) {\n+impl LateLintPass<'_, '_> for Unicode {\n+    fn check_expr(&mut self, cx: &LateContext<'_, '_>, expr: &'_ Expr) {\n         if let ExprKind::Lit(ref lit) = expr.node {\n             if let LitKind::Str(_, _) = lit.node {\n                 check_str(cx, lit.span, expr.hir_id)\n@@ -122,7 +122,7 @@ fn check_str(cx: &LateContext<'_, '_>, span: Span, id: HirId) {\n             cx,\n             UNICODE_NOT_NFC,\n             span,\n-            \"non-nfc unicode sequence detected\",\n+            \"non-NFC Unicode sequence detected\",\n             \"consider replacing the string with\",\n             string.nfc().collect::<String>(),\n             Applicability::MachineApplicable,"}, {"sha": "4575a132e5b2c8de599253e5e944993133443138", "filename": "tests/ui/unicode.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/4134e608c57c00b55b81399c4f81a8d6aac749d9/tests%2Fui%2Funicode.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4134e608c57c00b55b81399c4f81a8d6aac749d9/tests%2Fui%2Funicode.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Funicode.stderr?ref=4134e608c57c00b55b81399c4f81a8d6aac749d9", "patch": "@@ -2,23 +2,23 @@ error: zero-width space detected\n   --> $DIR/unicode.rs:3:12\n    |\n LL |     print!(\"Here >\u200b< is a ZWS, and \u200banother\");\n-   |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider replacing the string with: `\"Here >/u{200B}< is a ZWS, and /u{200B}another\"`\n    |\n    = note: `-D clippy::zero-width-space` implied by `-D warnings`\n \n-error: non-nfc unicode sequence detected\n+error: non-NFC Unicode sequence detected\n   --> $DIR/unicode.rs:9:12\n    |\n LL |     print!(\"\u0300a\u0300h?\");\n-   |            ^^^^^\n+   |            ^^^^^ help: consider replacing the string with: `\"\u0300\u00e0h?\"`\n    |\n    = note: `-D clippy::unicode-not-nfc` implied by `-D warnings`\n \n error: literal non-ASCII character detected\n   --> $DIR/unicode.rs:15:12\n    |\n LL |     print!(\"\u00dcben!\");\n-   |            ^^^^^^^\n+   |            ^^^^^^^ help: consider replacing the string with: `\"/u{dc}ben!\"`\n    |\n    = note: `-D clippy::non-ascii-literal` implied by `-D warnings`\n "}]}