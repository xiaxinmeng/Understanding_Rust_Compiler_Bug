{"sha": "b727d079ed211b35cbea7184c1b4cf7927e00350", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI3MjdkMDc5ZWQyMTFiMzVjYmVhNzE4NGMxYjRjZjc5MjdlMDAzNTA=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2011-06-16T20:00:19Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2011-06-16T21:21:43Z"}, "message": "rustc: Pretty print module inner attributes\n\nIssue #487", "tree": {"sha": "01f9b3a6d90a94245f007e8674c3c38b18043bf0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/01f9b3a6d90a94245f007e8674c3c38b18043bf0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b727d079ed211b35cbea7184c1b4cf7927e00350", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b727d079ed211b35cbea7184c1b4cf7927e00350", "html_url": "https://github.com/rust-lang/rust/commit/b727d079ed211b35cbea7184c1b4cf7927e00350", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b727d079ed211b35cbea7184c1b4cf7927e00350/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "43cbbabccb10d361fc9111369450f882f6688f84", "url": "https://api.github.com/repos/rust-lang/rust/commits/43cbbabccb10d361fc9111369450f882f6688f84", "html_url": "https://github.com/rust-lang/rust/commit/43cbbabccb10d361fc9111369450f882f6688f84"}], "stats": {"total": 24, "additions": 17, "deletions": 7}, "files": [{"sha": "2ef84b2e4974c132117be60bc4bbd2c3c14835f7", "filename": "src/comp/pretty/pprust.rs", "status": "modified", "additions": 17, "deletions": 7, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/b727d079ed211b35cbea7184c1b4cf7927e00350/src%2Fcomp%2Fpretty%2Fpprust.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b727d079ed211b35cbea7184c1b4cf7927e00350/src%2Fcomp%2Fpretty%2Fpprust.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fpretty%2Fpprust.rs?ref=b727d079ed211b35cbea7184c1b4cf7927e00350", "patch": "@@ -264,9 +264,9 @@ fn print_type(&ps s, &ast::ty ty) {\n fn print_item(&ps s, &@ast::item item) {\n     hardbreak(s.s);\n     maybe_print_comment(s, item.span.lo);\n+    print_outer_attributes(s, item.attrs);\n     alt (item.node) {\n         case (ast::item_const(?ty, ?expr)) {\n-            print_outer_attributes(s, item.attrs);\n             head(s, \"const\");\n             print_type(s, *ty);\n             space(s.s);\n@@ -280,21 +280,19 @@ fn print_item(&ps s, &@ast::item item) {\n \n         }\n         case (ast::item_fn(?_fn, ?typarams)) {\n-            print_outer_attributes(s, item.attrs);\n             print_fn(s, _fn.decl, _fn.proto, item.ident, typarams);\n             word(s.s, \" \");\n             print_block(s, _fn.body);\n         }\n         case (ast::item_mod(?_mod)) {\n-            print_outer_attributes(s, item.attrs);\n             head(s, \"mod\");\n             word_nbsp(s, item.ident);\n             bopen(s);\n+            print_inner_attributes(s, item.attrs);\n             for (@ast::item itm in _mod.items) { print_item(s, itm); }\n             bclose(s, item.span);\n         }\n         case (ast::item_native_mod(?nmod)) {\n-            print_outer_attributes(s, item.attrs);\n             head(s, \"native\");\n             alt (nmod.abi) {\n                 case (ast::native_abi_rust) { word_nbsp(s, \"\\\"rust\\\"\"); }\n@@ -338,7 +336,6 @@ fn print_item(&ps s, &@ast::item item) {\n             bclose(s, item.span);\n         }\n         case (ast::item_ty(?ty, ?params)) {\n-            print_outer_attributes(s, item.attrs);\n             ibox(s, indent_unit);\n             ibox(s, 0u);\n             word_nbsp(s, \"type\");\n@@ -355,7 +352,6 @@ fn print_item(&ps s, &@ast::item item) {\n             break_offset(s.s, 0u, 0);\n         }\n         case (ast::item_tag(?variants, ?params)) {\n-            print_outer_attributes(s, item.attrs);\n             head(s, \"tag\");\n             word(s.s, item.ident);\n             print_type_params(s, params);\n@@ -379,7 +375,6 @@ fn print_item(&ps s, &@ast::item item) {\n             bclose(s, item.span);\n         }\n         case (ast::item_obj(?_obj, ?params, _)) {\n-            print_outer_attributes(s, item.attrs);\n             head(s, \"obj\");\n             word(s.s, item.ident);\n             print_type_params(s, params);\n@@ -438,6 +433,21 @@ fn print_outer_attributes(&ps s, vec[ast::attribute] attrs) {\n     if (count > 0) { hardbreak(s.s); }\n }\n \n+fn print_inner_attributes(&ps s, vec[ast::attribute] attrs) {\n+    auto count = 0;\n+    for (ast::attribute attr in attrs) {\n+        alt (attr.node.style) {\n+            case (ast::attr_inner) {\n+                print_attribute(s, attr);\n+                word(s.s, \";\");\n+                count += 1;\n+            }\n+            case (_) { /* fallthrough */ }\n+        }\n+    }\n+    if (count > 0) { hardbreak(s.s); }\n+}\n+\n fn print_attribute(&ps s, &ast::attribute attr) {\n     hardbreak(s.s);\n     maybe_print_comment(s, attr.span.lo);"}]}