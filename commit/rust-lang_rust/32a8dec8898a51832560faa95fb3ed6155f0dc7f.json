{"sha": "32a8dec8898a51832560faa95fb3ed6155f0dc7f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjMyYThkZWM4ODk4YTUxODMyNTYwZmFhOTVmYjNlZDYxNTVmMGRjN2Y=", "commit": {"author": {"name": "varkor", "email": "github@varkor.com", "date": "2018-11-20T21:33:57Z"}, "committer": {"name": "varkor", "email": "github@varkor.com", "date": "2018-11-29T20:58:38Z"}, "message": "Clarify undecided semantics", "tree": {"sha": "b5e5224006a1edf4738a82b36c1227bbc32ac18f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b5e5224006a1edf4738a82b36c1227bbc32ac18f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/32a8dec8898a51832560faa95fb3ed6155f0dc7f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/32a8dec8898a51832560faa95fb3ed6155f0dc7f", "html_url": "https://github.com/rust-lang/rust/commit/32a8dec8898a51832560faa95fb3ed6155f0dc7f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/32a8dec8898a51832560faa95fb3ed6155f0dc7f/comments", "author": {"login": "varkor", "id": 3943692, "node_id": "MDQ6VXNlcjM5NDM2OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3943692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/varkor", "html_url": "https://github.com/varkor", "followers_url": "https://api.github.com/users/varkor/followers", "following_url": "https://api.github.com/users/varkor/following{/other_user}", "gists_url": "https://api.github.com/users/varkor/gists{/gist_id}", "starred_url": "https://api.github.com/users/varkor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/varkor/subscriptions", "organizations_url": "https://api.github.com/users/varkor/orgs", "repos_url": "https://api.github.com/users/varkor/repos", "events_url": "https://api.github.com/users/varkor/events{/privacy}", "received_events_url": "https://api.github.com/users/varkor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "varkor", "id": 3943692, "node_id": "MDQ6VXNlcjM5NDM2OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3943692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/varkor", "html_url": "https://github.com/varkor", "followers_url": "https://api.github.com/users/varkor/followers", "following_url": "https://api.github.com/users/varkor/following{/other_user}", "gists_url": "https://api.github.com/users/varkor/gists{/gist_id}", "starred_url": "https://api.github.com/users/varkor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/varkor/subscriptions", "organizations_url": "https://api.github.com/users/varkor/orgs", "repos_url": "https://api.github.com/users/varkor/repos", "events_url": "https://api.github.com/users/varkor/events{/privacy}", "received_events_url": "https://api.github.com/users/varkor/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d2b340758b59cd9f467913ac7baa0b1a8dd3467e", "url": "https://api.github.com/repos/rust-lang/rust/commits/d2b340758b59cd9f467913ac7baa0b1a8dd3467e", "html_url": "https://github.com/rust-lang/rust/commit/d2b340758b59cd9f467913ac7baa0b1a8dd3467e"}], "stats": {"total": 14, "additions": 10, "deletions": 4}, "files": [{"sha": "721d5e14ccc6378c63520d15d9ca29b3cad346f5", "filename": "src/librustc/ty/inhabitedness/mod.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/32a8dec8898a51832560faa95fb3ed6155f0dc7f/src%2Flibrustc%2Fty%2Finhabitedness%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/32a8dec8898a51832560faa95fb3ed6155f0dc7f/src%2Flibrustc%2Fty%2Finhabitedness%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Finhabitedness%2Fmod.rs?ref=32a8dec8898a51832560faa95fb3ed6155f0dc7f", "patch": "@@ -169,6 +169,7 @@ impl<'a, 'gcx, 'tcx> VariantDef {\n     {\n         let is_enum = match adt_kind {\n             // For now, `union`s are never considered uninhabited.\n+            // The precise semantics of inhabitedness with respect to unions is currently undecided.\n             AdtKind::Union => return DefIdForest::empty(),\n             AdtKind::Enum => true,\n             AdtKind::Struct => false,\n@@ -267,6 +268,8 @@ impl<'a, 'gcx, 'tcx> TyS<'tcx> {\n             // References to uninitialised memory is valid for any type, including\n             // uninhabited types, in unsafe code, so we treat all references as\n             // inhabited.\n+            // The precise semantics of inhabitedness with respect to references is currently\n+            // undecided.\n             Ref(..) => DefIdForest::empty(),\n \n             _ => DefIdForest::empty(),"}, {"sha": "b2f2818cb71b2fc2b49657db7d2b30384176e1b5", "filename": "src/test/ui/always-inhabited-union-ref.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/32a8dec8898a51832560faa95fb3ed6155f0dc7f/src%2Ftest%2Fui%2Falways-inhabited-union-ref.rs", "raw_url": "https://github.com/rust-lang/rust/raw/32a8dec8898a51832560faa95fb3ed6155f0dc7f/src%2Ftest%2Fui%2Falways-inhabited-union-ref.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Falways-inhabited-union-ref.rs?ref=32a8dec8898a51832560faa95fb3ed6155f0dc7f", "patch": "@@ -1,3 +1,6 @@\n+// The precise semantics of inhabitedness with respect to unions and references is currently\n+// undecided. This test file currently checks a conservative choice.\n+\n #![feature(exhaustive_patterns)]\n #![feature(never_type)]\n "}, {"sha": "bd6179a0b56d899b6f3b1b183161fabb0535ca3c", "filename": "src/test/ui/always-inhabited-union-ref.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/32a8dec8898a51832560faa95fb3ed6155f0dc7f/src%2Ftest%2Fui%2Falways-inhabited-union-ref.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/32a8dec8898a51832560faa95fb3ed6155f0dc7f/src%2Ftest%2Fui%2Falways-inhabited-union-ref.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Falways-inhabited-union-ref.stderr?ref=32a8dec8898a51832560faa95fb3ed6155f0dc7f", "patch": "@@ -1,23 +1,23 @@\n error[E0004]: non-exhaustive patterns: type &'static ! is non-empty\n-  --> $DIR/always-inhabited-union-ref.rs:20:11\n+  --> $DIR/always-inhabited-union-ref.rs:23:11\n    |\n LL |     match uninhab_ref() {\n    |           ^^^^^^^^^^^^^\n    |\n help: ensure that all possible cases are being handled, possibly by adding wildcards or more match arms\n-  --> $DIR/always-inhabited-union-ref.rs:20:11\n+  --> $DIR/always-inhabited-union-ref.rs:23:11\n    |\n LL |     match uninhab_ref() {\n    |           ^^^^^^^^^^^^^\n \n error[E0004]: non-exhaustive patterns: type Foo is non-empty\n-  --> $DIR/always-inhabited-union-ref.rs:24:11\n+  --> $DIR/always-inhabited-union-ref.rs:27:11\n    |\n LL |     match uninhab_union() {\n    |           ^^^^^^^^^^^^^^^\n    |\n help: ensure that all possible cases are being handled, possibly by adding wildcards or more match arms\n-  --> $DIR/always-inhabited-union-ref.rs:24:11\n+  --> $DIR/always-inhabited-union-ref.rs:27:11\n    |\n LL |     match uninhab_union() {\n    |           ^^^^^^^^^^^^^^^"}]}