{"sha": "6254d7a80a77db4d314353e418d36e1a6317c749", "node_id": "MDY6Q29tbWl0NzI0NzEyOjYyNTRkN2E4MGE3N2RiNGQzMTQzNTNlNDE4ZDM2ZTFhNjMxN2M3NDk=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-09-21T14:01:32Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-09-21T14:01:32Z"}, "message": "Rollup merge of #64640 - Wind-River:master, r=alexcrichton\n\nNo home directory on vxWorks\n\nr? @alexcrichton", "tree": {"sha": "b23ecca7bf3db8a693c791bea7f47bfc50b5676a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b23ecca7bf3db8a693c791bea7f47bfc50b5676a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6254d7a80a77db4d314353e418d36e1a6317c749", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJdhi08CRBK7hj4Ov3rIwAAdHIIAGqlfhLJqC0zlLyj6dGlNaex\nugLA255CB2t8f09LFZx1p4p3Y7C8UYf7/m/OWQ6RRSarzgC1D81Ir2jOcbGVdtkN\nfjH2G07I8D19v/eUm+LyDHf9Hp6dQap4LMEAtyMqukyIP7AvWX887GtXwCXI4B6K\n3iss7QnGYmgeXc0Yt87CMEFg2MAqw3UfDej2P6VKVE4RJvVx127tbRD9+gAKsbcQ\nmySON/BiiRKFD2Ur90FbLs4CB3xAuMJwaH1WHSRS0DhPWivwOKPfV4Y2xj84C1+F\nvIPWhpycEQIP9x9jiJqLLMOIxbu73S6vSa4ykEnz+S3AC/uGIrou2Odyqsi687I=\n=0EfC\n-----END PGP SIGNATURE-----\n", "payload": "tree b23ecca7bf3db8a693c791bea7f47bfc50b5676a\nparent 176e216c8e5807f766d393b8a726eae484edb780\nparent 494d83c89279a955dfb559ded5d5ac2ac06fc255\nauthor Mazdak Farrokhzad <twingoow@gmail.com> 1569074492 +0200\ncommitter GitHub <noreply@github.com> 1569074492 +0200\n\nRollup merge of #64640 - Wind-River:master, r=alexcrichton\n\nNo home directory on vxWorks\n\nr? @alexcrichton\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6254d7a80a77db4d314353e418d36e1a6317c749", "html_url": "https://github.com/rust-lang/rust/commit/6254d7a80a77db4d314353e418d36e1a6317c749", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6254d7a80a77db4d314353e418d36e1a6317c749/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "176e216c8e5807f766d393b8a726eae484edb780", "url": "https://api.github.com/repos/rust-lang/rust/commits/176e216c8e5807f766d393b8a726eae484edb780", "html_url": "https://github.com/rust-lang/rust/commit/176e216c8e5807f766d393b8a726eae484edb780"}, {"sha": "494d83c89279a955dfb559ded5d5ac2ac06fc255", "url": "https://api.github.com/repos/rust-lang/rust/commits/494d83c89279a955dfb559ded5d5ac2ac06fc255", "html_url": "https://github.com/rust-lang/rust/commit/494d83c89279a955dfb559ded5d5ac2ac06fc255"}], "stats": {"total": 25, "additions": 2, "deletions": 23}, "files": [{"sha": "51fdb1c0e55ec9dbbd1596424424a31b58fd5e03", "filename": "src/libstd/sys/vxworks/fs.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6254d7a80a77db4d314353e418d36e1a6317c749/src%2Flibstd%2Fsys%2Fvxworks%2Ffs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6254d7a80a77db4d314353e418d36e1a6317c749/src%2Flibstd%2Fsys%2Fvxworks%2Ffs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Fvxworks%2Ffs.rs?ref=6254d7a80a77db4d314353e418d36e1a6317c749", "patch": "@@ -529,7 +529,7 @@ pub fn stat(p: &Path) -> io::Result<FileAttr> {\n     let p = cstr(p)?;\n     let mut stat: stat64 = unsafe { mem::zeroed() };\n     cvt(unsafe {\n-        libc::lstat(p.as_ptr(), &mut stat as *mut _ as *mut _)\n+        libc::stat(p.as_ptr(), &mut stat as *mut _ as *mut _)\n     })?;\n     Ok(FileAttr { stat })\n }"}, {"sha": "f4798da1876cf66e6ff6e0235492820e6bfa3c37", "filename": "src/libstd/sys/vxworks/os.rs", "status": "modified", "additions": 1, "deletions": 22, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/6254d7a80a77db4d314353e418d36e1a6317c749/src%2Flibstd%2Fsys%2Fvxworks%2Fos.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6254d7a80a77db4d314353e418d36e1a6317c749/src%2Flibstd%2Fsys%2Fvxworks%2Fos.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Fvxworks%2Fos.rs?ref=6254d7a80a77db4d314353e418d36e1a6317c749", "patch": "@@ -287,28 +287,7 @@ pub fn temp_dir() -> PathBuf {\n }\n \n pub fn home_dir() -> Option<PathBuf> {\n-    return crate::env::var_os(\"HOME\").or_else(|| unsafe {\n-        fallback()\n-    }).map(PathBuf::from);\n-\n-    unsafe fn fallback() -> Option<OsString> {\n-        let amt = match libc::sysconf(libc::_SC_GETPW_R_SIZE_MAX) {\n-            n if n < 0 => 512 as usize,\n-            n => n as usize,\n-        };\n-        let mut buf = Vec::with_capacity(amt);\n-        let mut passwd: libc::passwd = mem::zeroed();\n-        let mut result = ptr::null_mut();\n-        match libc::getpwuid_r(libc::getuid(), &mut passwd, buf.as_mut_ptr(),\n-                                buf.capacity(), &mut result) {\n-            0 if !result.is_null() => {\n-                let ptr = passwd.pw_dir as *const _;\n-                let bytes = CStr::from_ptr(ptr).to_bytes().to_vec();\n-                Some(OsStringExt::from_vec(bytes))\n-            },\n-            _ => None,\n-        }\n-    }\n+    None\n }\n \n pub fn exit(code: i32) -> ! {"}]}