{"sha": "643ae957d24ee994ea64d7a0d476fa5115723453", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY0M2FlOTU3ZDI0ZWU5OTRlYTY0ZDdhMGQ0NzZmYTUxMTU3MjM0NTM=", "commit": {"author": {"name": "Tyler Mandry", "email": "tmandry@gmail.com", "date": "2019-10-02T06:06:22Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-10-02T06:06:22Z"}, "message": "Rollup merge of #64974 - ecstatic-morse:generic-graphviz-zebra, r=petrochenkov\n\nFix zebra-striping in generic dataflow visualization\n\nA small formatting improvement to #64828.\n\nPrior to this, the background color of the first row of the table for each basic block changed seemingly at random. You can see this in [basic block #5](https://github.com/rust-lang/rust/pull/64828#issuecomment-536690047) under \"New table\". Now it is always light.\n\nThis also updates the example table to match the current output.", "tree": {"sha": "72cb35cf579cdbda67e58e52a638acff579c94c5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/72cb35cf579cdbda67e58e52a638acff579c94c5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/643ae957d24ee994ea64d7a0d476fa5115723453", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJdlD5eCRBK7hj4Ov3rIwAAdHIIAITq3IILGo00SJTKCH8P4W5J\ntCDDoNv31gSmo7KdnpjncA1Djb+XonhS4E4s3NJdcFIIiqMsRQYsA3QKh520WZpV\nAsbiuxkFie4GshW4h+lanNZdrbRoxAkbwPEAHIKvNiyDH6sQxcz2ywKhYp6j4eZ8\nxal+JNN8xzWnfqnIFQft8cAKvZvUJDAbdTF8eEcFJPSPCv0BWgkV+WYSbmzeziHx\njbR+Ek7eTL5bf5dqqQXF9Y75puxeiWDiSCiIudlCscPuB4zaPx/q5vbKXsjCnRNs\nUxuFDJj++8GZkwtfHShQQOmdAsp9JlVuXLBu9uDDINq/zpceGutOyavKcSAM/Jo=\n=vh7s\n-----END PGP SIGNATURE-----\n", "payload": "tree 72cb35cf579cdbda67e58e52a638acff579c94c5\nparent 2f29548cb452627831493fdacfce1cea06500c7d\nparent ffc52a7fe6b5b928b5e1dce43cf04e188c34f9e4\nauthor Tyler Mandry <tmandry@gmail.com> 1569996382 -0700\ncommitter GitHub <noreply@github.com> 1569996382 -0700\n\nRollup merge of #64974 - ecstatic-morse:generic-graphviz-zebra, r=petrochenkov\n\nFix zebra-striping in generic dataflow visualization\n\nA small formatting improvement to #64828.\n\nPrior to this, the background color of the first row of the table for each basic block changed seemingly at random. You can see this in [basic block #5](https://github.com/rust-lang/rust/pull/64828#issuecomment-536690047) under \"New table\". Now it is always light.\n\nThis also updates the example table to match the current output.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/643ae957d24ee994ea64d7a0d476fa5115723453", "html_url": "https://github.com/rust-lang/rust/commit/643ae957d24ee994ea64d7a0d476fa5115723453", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/643ae957d24ee994ea64d7a0d476fa5115723453/comments", "author": {"login": "tmandry", "id": 2280544, "node_id": "MDQ6VXNlcjIyODA1NDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/2280544?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tmandry", "html_url": "https://github.com/tmandry", "followers_url": "https://api.github.com/users/tmandry/followers", "following_url": "https://api.github.com/users/tmandry/following{/other_user}", "gists_url": "https://api.github.com/users/tmandry/gists{/gist_id}", "starred_url": "https://api.github.com/users/tmandry/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tmandry/subscriptions", "organizations_url": "https://api.github.com/users/tmandry/orgs", "repos_url": "https://api.github.com/users/tmandry/repos", "events_url": "https://api.github.com/users/tmandry/events{/privacy}", "received_events_url": "https://api.github.com/users/tmandry/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2f29548cb452627831493fdacfce1cea06500c7d", "url": "https://api.github.com/repos/rust-lang/rust/commits/2f29548cb452627831493fdacfce1cea06500c7d", "html_url": "https://github.com/rust-lang/rust/commit/2f29548cb452627831493fdacfce1cea06500c7d"}, {"sha": "ffc52a7fe6b5b928b5e1dce43cf04e188c34f9e4", "url": "https://api.github.com/repos/rust-lang/rust/commits/ffc52a7fe6b5b928b5e1dce43cf04e188c34f9e4", "html_url": "https://github.com/rust-lang/rust/commit/ffc52a7fe6b5b928b5e1dce43cf04e188c34f9e4"}], "stats": {"total": 39, "additions": 20, "deletions": 19}, "files": [{"sha": "47ace8f33ecacecea50a6b8035c5fc39a03e55bd", "filename": "src/librustc_mir/dataflow/generic/graphviz.rs", "status": "modified", "additions": 20, "deletions": 19, "changes": 39, "blob_url": "https://github.com/rust-lang/rust/blob/643ae957d24ee994ea64d7a0d476fa5115723453/src%2Flibrustc_mir%2Fdataflow%2Fgeneric%2Fgraphviz.rs", "raw_url": "https://github.com/rust-lang/rust/raw/643ae957d24ee994ea64d7a0d476fa5115723453/src%2Flibrustc_mir%2Fdataflow%2Fgeneric%2Fgraphviz.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fdataflow%2Fgeneric%2Fgraphviz.rs?ref=643ae957d24ee994ea64d7a0d476fa5115723453", "patch": "@@ -165,25 +165,25 @@ where\n         block: BasicBlock,\n     ) -> io::Result<()> {\n         //   Sample output:\n-        //   +-+--------------------------------------------------+\n-        // A |                         bb4                        |\n-        //   +-+----------------------------------+---------------+\n-        // B |               MIR                  |     STATE     |\n-        //   +-+----------------------------------+---------------+\n-        // C | | (on entry)                       | {_0,_2,_3}    |\n-        //   +-+----------------------------------+---------------+\n-        // D |0|  0: StorageLive(_7)              |               |\n-        //   +-+----------------------------------+---------------+\n-        //   |1|  1: StorageLive(_8)              |               |\n-        //   +-+----------------------------------+---------------+\n-        //   |2|  2: _8 = &mut _1                 | +_8           |\n-        //   +-+----------------------------------+---------------+\n-        // E |T| _7 = const Foo::twiddle(move _8) | -_8           |\n-        //   +-+----------------------------------+---------------+\n-        // F | | (on unwind)                      | {_0,_2,_3,_7} |\n-        //   +-+----------------------------------+---------------+\n-        //   | | (on successful return)           | +_7           |\n-        //   +-+----------------------------------+---------------+\n+        //   +-+-----------------------------------------------+\n+        // A |                      bb4                        |\n+        //   +-+----------------------------------+------------+\n+        // B |                MIR                 |   STATE    |\n+        //   +-+----------------------------------+------------+\n+        // C | | (on entry)                       | {_0,_2,_3} |\n+        //   +-+----------------------------------+------------+\n+        // D |0| StorageLive(_7)                  |            |\n+        //   +-+----------------------------------+------------+\n+        //   |1| StorageLive(_8)                  |            |\n+        //   +-+----------------------------------+------------+\n+        //   |2| _8 = &mut _1                     | +_8        |\n+        //   +-+----------------------------------+------------+\n+        // E |T| _4 = const Foo::twiddle(move _2) | -_2        |\n+        //   +-+----------------------------------+------------+\n+        // F | | (on unwind)                      | {_0,_3,_8} |\n+        //   +-+----------------------------------+------------+\n+        //   | | (on successful return)           | +_4        |\n+        //   +-+----------------------------------+------------+\n \n         write!(\n             w,\n@@ -211,6 +211,7 @@ where\n         )?;\n \n         // C: Entry state\n+        self.bg = Background::Light;\n         self.results.seek_to_block_start(block);\n         self.write_row_with_curr_state(w, \"\", \"(on entry)\")?;\n         self.prev_state.overwrite(self.results.get());"}]}