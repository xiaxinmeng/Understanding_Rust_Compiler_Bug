{"sha": "7a80fa647ad7f634c9626e7fed1caa618e1fd6cc", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdhODBmYTY0N2FkN2Y2MzRjOTYyNmU3ZmVkMWNhYTYxOGUxZmQ2Y2M=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2014-02-01T00:20:57Z"}, "committer": {"name": "Huon Wilson", "email": "dbau.pp+github@gmail.com", "date": "2014-02-01T14:44:49Z"}, "message": "test: Remove `@str` from the test suite", "tree": {"sha": "7e85e7dae61f738c795cfcc4754a844faba4f61c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7e85e7dae61f738c795cfcc4754a844faba4f61c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7a80fa647ad7f634c9626e7fed1caa618e1fd6cc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7a80fa647ad7f634c9626e7fed1caa618e1fd6cc", "html_url": "https://github.com/rust-lang/rust/commit/7a80fa647ad7f634c9626e7fed1caa618e1fd6cc", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7a80fa647ad7f634c9626e7fed1caa618e1fd6cc/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "huonw", "id": 1203825, "node_id": "MDQ6VXNlcjEyMDM4MjU=", "avatar_url": "https://avatars.githubusercontent.com/u/1203825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/huonw", "html_url": "https://github.com/huonw", "followers_url": "https://api.github.com/users/huonw/followers", "following_url": "https://api.github.com/users/huonw/following{/other_user}", "gists_url": "https://api.github.com/users/huonw/gists{/gist_id}", "starred_url": "https://api.github.com/users/huonw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/huonw/subscriptions", "organizations_url": "https://api.github.com/users/huonw/orgs", "repos_url": "https://api.github.com/users/huonw/repos", "events_url": "https://api.github.com/users/huonw/events{/privacy}", "received_events_url": "https://api.github.com/users/huonw/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "17b01041c24d5537a3f82a81f7c6642b9db48521", "url": "https://api.github.com/repos/rust-lang/rust/commits/17b01041c24d5537a3f82a81f7c6642b9db48521", "html_url": "https://github.com/rust-lang/rust/commit/17b01041c24d5537a3f82a81f7c6642b9db48521"}], "stats": {"total": 67, "additions": 1, "deletions": 66}, "files": [{"sha": "d99d29fb810803c94529d3e644d95c7f5cb63568", "filename": "src/test/compile-fail/estr-subtyping.rs", "status": "modified", "additions": 0, "deletions": 11, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/7a80fa647ad7f634c9626e7fed1caa618e1fd6cc/src%2Ftest%2Fcompile-fail%2Festr-subtyping.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7a80fa647ad7f634c9626e7fed1caa618e1fd6cc/src%2Ftest%2Fcompile-fail%2Festr-subtyping.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Festr-subtyping.rs?ref=7a80fa647ad7f634c9626e7fed1caa618e1fd6cc", "patch": "@@ -8,26 +8,15 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#[feature(managed_boxes)];\n-\n-fn wants_box(x: @str) { }\n fn wants_uniq(x: ~str) { }\n fn wants_slice(x: &str) { }\n \n-fn has_box(x: @str) {\n-   wants_box(x);\n-   wants_uniq(x); //~ ERROR str storage differs: expected `~` but found `@`\n-   wants_slice(x);\n-}\n-\n fn has_uniq(x: ~str) {\n-   wants_box(x); //~ ERROR str storage differs: expected `@` but found `~`\n    wants_uniq(x);\n    wants_slice(x);\n }\n \n fn has_slice(x: &str) {\n-   wants_box(x); //~ ERROR str storage differs: expected `@` but found `&`\n    wants_uniq(x); //~ ERROR str storage differs: expected `~` but found `&`\n    wants_slice(x);\n }"}, {"sha": "0c19988bef4263ef57919c2c44f2ffeee7eb7622", "filename": "src/test/compile-fail/lint-heap-memory.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/7a80fa647ad7f634c9626e7fed1caa618e1fd6cc/src%2Ftest%2Fcompile-fail%2Flint-heap-memory.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7a80fa647ad7f634c9626e7fed1caa618e1fd6cc/src%2Ftest%2Fcompile-fail%2Flint-heap-memory.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Flint-heap-memory.rs?ref=7a80fa647ad7f634c9626e7fed1caa618e1fd6cc", "patch": "@@ -25,7 +25,6 @@ fn main() {\n     @[1]; //~ ERROR type uses managed\n     //~^ ERROR type uses managed\n     fn f(_: @Clone) {} //~ ERROR type uses managed\n-    @\"\"; //~ ERROR type uses managed\n     //~^ ERROR type uses managed\n \n     ~2; //~ ERROR type uses owned"}, {"sha": "7bcf98c3f41bcbd4b29bcc218fec87991552a9f0", "filename": "src/test/run-pass/auto-ref-slice-plus-ref.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/7a80fa647ad7f634c9626e7fed1caa618e1fd6cc/src%2Ftest%2Frun-pass%2Fauto-ref-slice-plus-ref.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7a80fa647ad7f634c9626e7fed1caa618e1fd6cc/src%2Ftest%2Frun-pass%2Fauto-ref-slice-plus-ref.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fauto-ref-slice-plus-ref.rs?ref=7a80fa647ad7f634c9626e7fed1caa618e1fd6cc", "patch": "@@ -34,7 +34,6 @@ pub fn main() {\n     (&[1]).test_imm();\n     (\"test\").test_imm();\n     (~\"test\").test_imm();\n-    (@\"test\").test_imm();\n     (&\"test\").test_imm();\n \n     // FIXME: Other types of mutable vecs don't currently exist"}, {"sha": "07a13e5395fc3c1d363218db177a087691292c17", "filename": "src/test/run-pass/borrowed-ptr-pattern-infallible.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/7a80fa647ad7f634c9626e7fed1caa618e1fd6cc/src%2Ftest%2Frun-pass%2Fborrowed-ptr-pattern-infallible.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7a80fa647ad7f634c9626e7fed1caa618e1fd6cc/src%2Ftest%2Frun-pass%2Fborrowed-ptr-pattern-infallible.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fborrowed-ptr-pattern-infallible.rs?ref=7a80fa647ad7f634c9626e7fed1caa618e1fd6cc", "patch": "@@ -11,8 +11,7 @@\n #[feature(managed_boxes)];\n \n pub fn main() {\n-    let (&x, &y, &z) = (&3, &'a', &@\"No pets!\");\n+    let (&x, &y) = (&3, &'a');\n     assert_eq!(x, 3);\n     assert_eq!(y, 'a');\n-    assert_eq!(z, @\"No pets!\");\n }"}, {"sha": "7ccb40c8e7b37b4475e735dce12ed6ae70cbee60", "filename": "src/test/run-pass/borrowed-ptr-pattern.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/7a80fa647ad7f634c9626e7fed1caa618e1fd6cc/src%2Ftest%2Frun-pass%2Fborrowed-ptr-pattern.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7a80fa647ad7f634c9626e7fed1caa618e1fd6cc/src%2Ftest%2Frun-pass%2Fborrowed-ptr-pattern.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fborrowed-ptr-pattern.rs?ref=7a80fa647ad7f634c9626e7fed1caa618e1fd6cc", "patch": "@@ -17,5 +17,4 @@ fn foo<T:Clone>(x: &T) -> T{\n pub fn main() {\n     assert_eq!(foo(&3), 3);\n     assert_eq!(foo(&'a'), 'a');\n-    assert_eq!(foo(&@\"Dogs rule, cats drool\"), @\"Dogs rule, cats drool\");\n }"}, {"sha": "73837a46df707be879f1f21089b7d60d34e55b94", "filename": "src/test/run-pass/estr-shared.rs", "status": "removed", "additions": 0, "deletions": 15, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/17b01041c24d5537a3f82a81f7c6642b9db48521/src%2Ftest%2Frun-pass%2Festr-shared.rs", "raw_url": "https://github.com/rust-lang/rust/raw/17b01041c24d5537a3f82a81f7c6642b9db48521/src%2Ftest%2Frun-pass%2Festr-shared.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Festr-shared.rs?ref=17b01041c24d5537a3f82a81f7c6642b9db48521", "patch": "@@ -1,15 +0,0 @@\n-// Copyright 2012 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n-#[feature(managed_boxes)];\n-\n-pub fn main() {\n-    let _x : @str = @\"hello\";\n-}"}, {"sha": "cc59ce5d8b24589b384c6b94fcf06c4079e6f83b", "filename": "src/test/run-pass/ifmt.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7a80fa647ad7f634c9626e7fed1caa618e1fd6cc/src%2Ftest%2Frun-pass%2Fifmt.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7a80fa647ad7f634c9626e7fed1caa618e1fd6cc/src%2Ftest%2Frun-pass%2Fifmt.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fifmt.rs?ref=7a80fa647ad7f634c9626e7fed1caa618e1fd6cc", "patch": "@@ -58,7 +58,6 @@ pub fn main() {\n     t!(format!(\"{}\", 1.0f64), \"1\");\n     t!(format!(\"{}\", \"a\"), \"a\");\n     t!(format!(\"{}\", ~\"a\"), \"a\");\n-    t!(format!(\"{}\", @\"a\"), \"a\");\n     t!(format!(\"{}\", false), \"false\");\n     t!(format!(\"{}\", 'a'), \"a\");\n \n@@ -73,7 +72,6 @@ pub fn main() {\n     t!(format!(\"{:X}\", 10u), \"A\");\n     t!(format!(\"{:s}\", \"foo\"), \"foo\");\n     t!(format!(\"{:s}\", ~\"foo\"), \"foo\");\n-    t!(format!(\"{:s}\", @\"foo\"), \"foo\");\n     t!(format!(\"{:p}\", 0x1234 as *int), \"0x1234\");\n     t!(format!(\"{:p}\", 0x1234 as *mut int), \"0x1234\");\n     t!(format!(\"{:d}\", A), \"aloha\");"}, {"sha": "ace27c5ea11f61ad56e2f17bd20aacf367721a26", "filename": "src/test/run-pass/issue-3574.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/7a80fa647ad7f634c9626e7fed1caa618e1fd6cc/src%2Ftest%2Frun-pass%2Fissue-3574.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7a80fa647ad7f634c9626e7fed1caa618e1fd6cc/src%2Ftest%2Frun-pass%2Fissue-3574.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-3574.rs?ref=7a80fa647ad7f634c9626e7fed1caa618e1fd6cc", "patch": "@@ -26,5 +26,4 @@ pub fn main()\n {\n     assert!(compare(\"foo\", \"foo\"));\n     assert!(compare(~\"foo\", ~\"foo\"));\n-    assert!(compare(@\"foo\", @\"foo\"));\n }"}, {"sha": "62174a70d07fe2983deda38134b18734ba5e1615", "filename": "src/test/run-pass/issue-4092.rs", "status": "removed", "additions": 0, "deletions": 18, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/17b01041c24d5537a3f82a81f7c6642b9db48521/src%2Ftest%2Frun-pass%2Fissue-4092.rs", "raw_url": "https://github.com/rust-lang/rust/raw/17b01041c24d5537a3f82a81f7c6642b9db48521/src%2Ftest%2Frun-pass%2Fissue-4092.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-4092.rs?ref=17b01041c24d5537a3f82a81f7c6642b9db48521", "patch": "@@ -1,18 +0,0 @@\n-// Copyright 2012 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n-#[feature(managed_boxes)];\n-\n-use std::hashmap::HashMap;\n-\n-pub fn main() {\n-    let mut x = HashMap::new();\n-    x.insert((@\"abc\", 0), 0);\n-}"}, {"sha": "b0f31f70f53c0e4803e68f44fedaa3abce373a7f", "filename": "src/test/run-pass/match-borrowed_str.rs", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/7a80fa647ad7f634c9626e7fed1caa618e1fd6cc/src%2Ftest%2Frun-pass%2Fmatch-borrowed_str.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7a80fa647ad7f634c9626e7fed1caa618e1fd6cc/src%2Ftest%2Frun-pass%2Fmatch-borrowed_str.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fmatch-borrowed_str.rs?ref=7a80fa647ad7f634c9626e7fed1caa618e1fd6cc", "patch": "@@ -43,19 +43,15 @@ fn g2(ref_1: &str, ref_2: &str) -> ~str {\n }\n \n pub fn main() {\n-    assert_eq!(f1(@\"a\"), ~\"found a\");\n     assert_eq!(f1(~\"b\"), ~\"found b\");\n     assert_eq!(f1(&\"c\"), ~\"not found\");\n     assert_eq!(f1(\"d\"), ~\"not found\");\n-    assert_eq!(f2(@\"a\"), ~\"found a\");\n     assert_eq!(f2(~\"b\"), ~\"found b\");\n     assert_eq!(f2(&\"c\"), ~\"not found (c)\");\n     assert_eq!(f2(\"d\"), ~\"not found (d)\");\n-    assert_eq!(g1(@\"a\", @\"b\"), ~\"found a,b\");\n     assert_eq!(g1(~\"b\", ~\"c\"), ~\"found b,c\");\n     assert_eq!(g1(&\"c\", &\"d\"), ~\"not found\");\n     assert_eq!(g1(\"d\", \"e\"), ~\"not found\");\n-    assert_eq!(g2(@\"a\", @\"b\"), ~\"found a,b\");\n     assert_eq!(g2(~\"b\", ~\"c\"), ~\"found b,c\");\n     assert_eq!(g2(&\"c\", &\"d\"), ~\"not found (c, d)\");\n     assert_eq!(g2(\"d\", \"e\"), ~\"not found (d, e)\");"}, {"sha": "32803283bf94096e69dd518fb3195e9f30613487", "filename": "src/test/run-pass/nullable-pointer-iotareduction.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/7a80fa647ad7f634c9626e7fed1caa618e1fd6cc/src%2Ftest%2Frun-pass%2Fnullable-pointer-iotareduction.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7a80fa647ad7f634c9626e7fed1caa618e1fd6cc/src%2Ftest%2Frun-pass%2Fnullable-pointer-iotareduction.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fnullable-pointer-iotareduction.rs?ref=7a80fa647ad7f634c9626e7fed1caa618e1fd6cc", "patch": "@@ -79,7 +79,6 @@ pub fn main() {\n     check_type!(~18: ~int);\n     check_type!(@19: @int);\n     check_type!(~\"foo\": ~str);\n-    check_type!(@\"bar\": @str);\n     check_type!(~[20, 22]: ~[int]);\n     check_type!(@[]: @[int]);\n     check_type!(@[24, 26]: @[int]);"}, {"sha": "5117d0849fb97b9d2a944ef33089df71b63c7551", "filename": "src/test/run-pass/nullable-pointer-size.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/7a80fa647ad7f634c9626e7fed1caa618e1fd6cc/src%2Ftest%2Frun-pass%2Fnullable-pointer-size.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7a80fa647ad7f634c9626e7fed1caa618e1fd6cc/src%2Ftest%2Frun-pass%2Fnullable-pointer-size.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fnullable-pointer-size.rs?ref=7a80fa647ad7f634c9626e7fed1caa618e1fd6cc", "patch": "@@ -41,7 +41,6 @@ pub fn main() {\n     check_type!(~int);\n     check_type!(@int);\n     check_type!(~str);\n-    check_type!(@str);\n     check_type!(~[int]);\n     check_type!(@[int]);\n     check_type!(extern fn());"}, {"sha": "38000a43518b4c4bb5e1478846f3133c2945415c", "filename": "src/test/run-pass/reflect-visit-data.rs", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/7a80fa647ad7f634c9626e7fed1caa618e1fd6cc/src%2Ftest%2Frun-pass%2Freflect-visit-data.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7a80fa647ad7f634c9626e7fed1caa618e1fd6cc/src%2Ftest%2Frun-pass%2Freflect-visit-data.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Freflect-visit-data.rs?ref=7a80fa647ad7f634c9626e7fed1caa618e1fd6cc", "patch": "@@ -180,9 +180,6 @@ impl<V:TyVisitor + movable_ptr> TyVisitor for ptr_visit_adaptor<V> {\n     }\n \n     fn visit_estr_box(&mut self) -> bool {\n-        self.align_to::<@str>();\n-        if ! self.inner().visit_estr_box() { return false; }\n-        self.bump_past::<@str>();\n         true\n     }\n "}, {"sha": "dc7e51c3c2364cb5c60c79933c4b93e71451df7e", "filename": "src/test/run-pass/send_str_hashmap.rs", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/7a80fa647ad7f634c9626e7fed1caa618e1fd6cc/src%2Ftest%2Frun-pass%2Fsend_str_hashmap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7a80fa647ad7f634c9626e7fed1caa618e1fd6cc/src%2Ftest%2Frun-pass%2Fsend_str_hashmap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fsend_str_hashmap.rs?ref=7a80fa647ad7f634c9626e7fed1caa618e1fd6cc", "patch": "@@ -63,11 +63,6 @@ pub fn main() {\n     assert_eq!(map.find_equiv(&(~\"cde\")), Some(&c));\n     assert_eq!(map.find_equiv(&(~\"def\")), Some(&d));\n \n-    assert_eq!(map.find_equiv(&(@\"abc\")), Some(&a));\n-    assert_eq!(map.find_equiv(&(@\"bcd\")), Some(&b));\n-    assert_eq!(map.find_equiv(&(@\"cde\")), Some(&c));\n-    assert_eq!(map.find_equiv(&(@\"def\")), Some(&d));\n-\n     assert_eq!(map.find_equiv(&SendStrStatic(\"abc\")), Some(&a));\n     assert_eq!(map.find_equiv(&SendStrStatic(\"bcd\")), Some(&b));\n     assert_eq!(map.find_equiv(&SendStrStatic(\"cde\")), Some(&c));"}]}