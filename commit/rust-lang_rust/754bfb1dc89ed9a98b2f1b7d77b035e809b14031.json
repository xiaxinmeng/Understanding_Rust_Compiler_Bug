{"sha": "754bfb1dc89ed9a98b2f1b7d77b035e809b14031", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc1NGJmYjFkYzg5ZWQ5YTk4YjJmMWI3ZDc3YjAzNWU4MDliMTQwMzE=", "commit": {"author": {"name": "ThibsG", "email": "Thibs@debian.com", "date": "2020-06-28T10:14:04Z"}, "committer": {"name": "ThibsG", "email": "Thibs@debian.com", "date": "2020-07-03T15:29:54Z"}, "message": "Add configurable threshold for `type_repetition_in_bounds` lint", "tree": {"sha": "f3d13368c4e315196c4f75938aa3dc7a7d812d9c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f3d13368c4e315196c4f75938aa3dc7a7d812d9c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/754bfb1dc89ed9a98b2f1b7d77b035e809b14031", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/754bfb1dc89ed9a98b2f1b7d77b035e809b14031", "html_url": "https://github.com/rust-lang/rust/commit/754bfb1dc89ed9a98b2f1b7d77b035e809b14031", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/754bfb1dc89ed9a98b2f1b7d77b035e809b14031/comments", "author": {"login": "ThibsG", "id": 12683889, "node_id": "MDQ6VXNlcjEyNjgzODg5", "avatar_url": "https://avatars.githubusercontent.com/u/12683889?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ThibsG", "html_url": "https://github.com/ThibsG", "followers_url": "https://api.github.com/users/ThibsG/followers", "following_url": "https://api.github.com/users/ThibsG/following{/other_user}", "gists_url": "https://api.github.com/users/ThibsG/gists{/gist_id}", "starred_url": "https://api.github.com/users/ThibsG/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ThibsG/subscriptions", "organizations_url": "https://api.github.com/users/ThibsG/orgs", "repos_url": "https://api.github.com/users/ThibsG/repos", "events_url": "https://api.github.com/users/ThibsG/events{/privacy}", "received_events_url": "https://api.github.com/users/ThibsG/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ThibsG", "id": 12683889, "node_id": "MDQ6VXNlcjEyNjgzODg5", "avatar_url": "https://avatars.githubusercontent.com/u/12683889?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ThibsG", "html_url": "https://github.com/ThibsG", "followers_url": "https://api.github.com/users/ThibsG/followers", "following_url": "https://api.github.com/users/ThibsG/following{/other_user}", "gists_url": "https://api.github.com/users/ThibsG/gists{/gist_id}", "starred_url": "https://api.github.com/users/ThibsG/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ThibsG/subscriptions", "organizations_url": "https://api.github.com/users/ThibsG/orgs", "repos_url": "https://api.github.com/users/ThibsG/repos", "events_url": "https://api.github.com/users/ThibsG/events{/privacy}", "received_events_url": "https://api.github.com/users/ThibsG/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c493090a8a601baea39a592fdbe199bd64d6db22", "url": "https://api.github.com/repos/rust-lang/rust/commits/c493090a8a601baea39a592fdbe199bd64d6db22", "html_url": "https://github.com/rust-lang/rust/commit/c493090a8a601baea39a592fdbe199bd64d6db22"}], "stats": {"total": 66, "additions": 54, "deletions": 12}, "files": [{"sha": "38f8d007c72f9037f9dda150d71fdce7433f5dd2", "filename": "clippy_lints/src/lib.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/754bfb1dc89ed9a98b2f1b7d77b035e809b14031/clippy_lints%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/754bfb1dc89ed9a98b2f1b7d77b035e809b14031/clippy_lints%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flib.rs?ref=754bfb1dc89ed9a98b2f1b7d77b035e809b14031", "patch": "@@ -996,7 +996,8 @@ pub fn register_plugins(store: &mut rustc_lint::LintStore, sess: &Session, conf:\n     store.register_late_pass(|| box checked_conversions::CheckedConversions);\n     store.register_late_pass(|| box integer_division::IntegerDivision);\n     store.register_late_pass(|| box inherent_to_string::InherentToString);\n-    store.register_late_pass(|| box trait_bounds::TraitBounds);\n+    let max_trait_bounds = conf.max_trait_bounds;\n+    store.register_late_pass(move || box trait_bounds::TraitBounds::new(max_trait_bounds));\n     store.register_late_pass(|| box comparison_chain::ComparisonChain);\n     store.register_late_pass(|| box mut_key::MutableKeyType);\n     store.register_late_pass(|| box modulo_arithmetic::ModuloArithmetic);\n@@ -1033,7 +1034,7 @@ pub fn register_plugins(store: &mut rustc_lint::LintStore, sess: &Session, conf:\n     let array_size_threshold = conf.array_size_threshold;\n     store.register_late_pass(move || box large_stack_arrays::LargeStackArrays::new(array_size_threshold));\n     store.register_late_pass(move || box large_const_arrays::LargeConstArrays::new(array_size_threshold));\n-    store.register_late_pass(move || box floating_point_arithmetic::FloatingPointArithmetic);\n+    store.register_late_pass(|| box floating_point_arithmetic::FloatingPointArithmetic);\n     store.register_early_pass(|| box as_conversions::AsConversions);\n     store.register_early_pass(|| box utils::internal_lints::ProduceIce);\n     store.register_late_pass(|| box let_underscore::LetUnderscore);"}, {"sha": "650edbb4b11c72b7a19b7ce34d21bd435aa18b6d", "filename": "clippy_lints/src/trait_bounds.rs", "status": "modified", "additions": 15, "deletions": 3, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/754bfb1dc89ed9a98b2f1b7d77b035e809b14031/clippy_lints%2Fsrc%2Ftrait_bounds.rs", "raw_url": "https://github.com/rust-lang/rust/raw/754bfb1dc89ed9a98b2f1b7d77b035e809b14031/clippy_lints%2Fsrc%2Ftrait_bounds.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Ftrait_bounds.rs?ref=754bfb1dc89ed9a98b2f1b7d77b035e809b14031", "patch": "@@ -5,9 +5,6 @@ use rustc_hir::{GenericBound, Generics, WherePredicate};\n use rustc_lint::{LateContext, LateLintPass};\n use rustc_session::{declare_tool_lint, impl_lint_pass};\n \n-#[derive(Copy, Clone)]\n-pub struct TraitBounds;\n-\n declare_clippy_lint! {\n     /// **What it does:** This lint warns about unnecessary type repetitions in trait bounds\n     ///\n@@ -29,6 +26,18 @@ declare_clippy_lint! {\n     \"Types are repeated unnecessary in trait bounds use `+` instead of using `T: _, T: _`\"\n }\n \n+#[derive(Copy, Clone)]\n+pub struct TraitBounds {\n+    max_trait_bounds: u64,\n+}\n+\n+impl TraitBounds {\n+    #[must_use]\n+    pub fn new(max_trait_bounds: u64) -> Self {\n+        Self { max_trait_bounds }\n+    }\n+}\n+\n impl_lint_pass!(TraitBounds => [TYPE_REPETITION_IN_BOUNDS]);\n \n impl<'tcx> LateLintPass<'tcx> for TraitBounds {\n@@ -45,6 +54,9 @@ impl<'tcx> LateLintPass<'tcx> for TraitBounds {\n         let mut applicability = Applicability::MaybeIncorrect;\n         for bound in gen.where_clause.predicates {\n             if let WherePredicate::BoundPredicate(ref p) = bound {\n+                if p.bounds.len() as u64 > self.max_trait_bounds {\n+                    return;\n+                }\n                 let h = hash(&p.bounded_ty);\n                 if let Some(ref v) = map.insert(h, p.bounds.iter().collect::<Vec<_>>()) {\n                     let mut hint_string = format!("}, {"sha": "de425211e38ef60b99011a5307377d6fb63c55cf", "filename": "clippy_lints/src/utils/conf.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/754bfb1dc89ed9a98b2f1b7d77b035e809b14031/clippy_lints%2Fsrc%2Futils%2Fconf.rs", "raw_url": "https://github.com/rust-lang/rust/raw/754bfb1dc89ed9a98b2f1b7d77b035e809b14031/clippy_lints%2Fsrc%2Futils%2Fconf.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Futils%2Fconf.rs?ref=754bfb1dc89ed9a98b2f1b7d77b035e809b14031", "patch": "@@ -156,6 +156,8 @@ define_Conf! {\n     (array_size_threshold, \"array_size_threshold\": u64, 512_000),\n     /// Lint: VEC_BOX. The size of the boxed type in bytes, where boxing in a `Vec` is allowed\n     (vec_box_size_threshold, \"vec_box_size_threshold\": u64, 4096),\n+    /// Lint: TYPE_REPETITION_IN_BOUNDS. The maximum number of bounds a trait can have to be linted\n+    (max_trait_bounds, \"max_trait_bounds\": u64, 3),\n     /// Lint: STRUCT_EXCESSIVE_BOOLS. The maximum number of bools a struct can have\n     (max_struct_bools, \"max_struct_bools\": u64, 3),\n     /// Lint: FN_PARAMS_EXCESSIVE_BOOLS. The maximum number of bools function parameters can have"}, {"sha": "6fbba01416a8d5a27ed47c0b8ae60206ccc1f5fe", "filename": "tests/ui-toml/toml_unknown_key/conf_unknown_key.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/754bfb1dc89ed9a98b2f1b7d77b035e809b14031/tests%2Fui-toml%2Ftoml_unknown_key%2Fconf_unknown_key.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/754bfb1dc89ed9a98b2f1b7d77b035e809b14031/tests%2Fui-toml%2Ftoml_unknown_key%2Fconf_unknown_key.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui-toml%2Ftoml_unknown_key%2Fconf_unknown_key.stderr?ref=754bfb1dc89ed9a98b2f1b7d77b035e809b14031", "patch": "@@ -1,4 +1,4 @@\n-error: error reading Clippy's configuration file `$DIR/clippy.toml`: unknown field `foobar`, expected one of `blacklisted-names`, `cognitive-complexity-threshold`, `cyclomatic-complexity-threshold`, `doc-valid-idents`, `too-many-arguments-threshold`, `type-complexity-threshold`, `single-char-binding-names-threshold`, `too-large-for-stack`, `enum-variant-name-threshold`, `enum-variant-size-threshold`, `verbose-bit-mask-threshold`, `literal-representation-threshold`, `trivial-copy-size-limit`, `too-many-lines-threshold`, `array-size-threshold`, `vec-box-size-threshold`, `max-struct-bools`, `max-fn-params-bools`, `warn-on-all-wildcard-imports`, `third-party` at line 5 column 1\n+error: error reading Clippy's configuration file `$DIR/clippy.toml`: unknown field `foobar`, expected one of `blacklisted-names`, `cognitive-complexity-threshold`, `cyclomatic-complexity-threshold`, `doc-valid-idents`, `too-many-arguments-threshold`, `type-complexity-threshold`, `single-char-binding-names-threshold`, `too-large-for-stack`, `enum-variant-name-threshold`, `enum-variant-size-threshold`, `verbose-bit-mask-threshold`, `literal-representation-threshold`, `trivial-copy-size-limit`, `too-many-lines-threshold`, `array-size-threshold`, `vec-box-size-threshold`, `max-trait-bounds`, `max-struct-bools`, `max-fn-params-bools`, `warn-on-all-wildcard-imports`, `third-party` at line 5 column 1\n \n error: aborting due to previous error\n "}, {"sha": "60b994548b5c6672f94174d613f4d5fb352a38e9", "filename": "tests/ui/type_repetition_in_bounds.rs", "status": "modified", "additions": 20, "deletions": 1, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/754bfb1dc89ed9a98b2f1b7d77b035e809b14031/tests%2Fui%2Ftype_repetition_in_bounds.rs", "raw_url": "https://github.com/rust-lang/rust/raw/754bfb1dc89ed9a98b2f1b7d77b035e809b14031/tests%2Fui%2Ftype_repetition_in_bounds.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ftype_repetition_in_bounds.rs?ref=754bfb1dc89ed9a98b2f1b7d77b035e809b14031", "patch": "@@ -1,4 +1,6 @@\n-#[deny(clippy::type_repetition_in_bounds)]\n+#![deny(clippy::type_repetition_in_bounds)]\n+\n+use std::ops::{Add, AddAssign, Div, DivAssign, Mul, MulAssign, Sub, SubAssign};\n \n pub fn foo<T>(_t: T)\n where\n@@ -16,4 +18,21 @@ where\n     unimplemented!();\n }\n \n+trait LintBounds\n+where\n+    Self: Clone,\n+    Self: Copy + Default + Ord,\n+    Self: Add<Output = Self> + AddAssign + Sub<Output = Self> + SubAssign,\n+    Self: Mul<Output = Self> + MulAssign + Div<Output = Self> + DivAssign,\n+{\n+}\n+\n+trait LotsOfBounds\n+where\n+    Self: Clone + Copy + Default + Ord,\n+    Self: Add<Output = Self> + AddAssign + Sub<Output = Self> + SubAssign,\n+    Self: Mul<Output = Self> + MulAssign + Div<Output = Self> + DivAssign,\n+{\n+}\n+\n fn main() {}"}, {"sha": "6a1073a23f6972dad31d0985b5bb9f82ad86f049", "filename": "tests/ui/type_repetition_in_bounds.stderr", "status": "modified", "additions": 13, "deletions": 5, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/754bfb1dc89ed9a98b2f1b7d77b035e809b14031/tests%2Fui%2Ftype_repetition_in_bounds.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/754bfb1dc89ed9a98b2f1b7d77b035e809b14031/tests%2Fui%2Ftype_repetition_in_bounds.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ftype_repetition_in_bounds.stderr?ref=754bfb1dc89ed9a98b2f1b7d77b035e809b14031", "patch": "@@ -1,15 +1,23 @@\n error: this type has already been used as a bound predicate\n-  --> $DIR/type_repetition_in_bounds.rs:6:5\n+  --> $DIR/type_repetition_in_bounds.rs:8:5\n    |\n LL |     T: Clone,\n    |     ^^^^^^^^\n    |\n note: the lint level is defined here\n-  --> $DIR/type_repetition_in_bounds.rs:1:8\n+  --> $DIR/type_repetition_in_bounds.rs:1:9\n    |\n-LL | #[deny(clippy::type_repetition_in_bounds)]\n-   |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+LL | #![deny(clippy::type_repetition_in_bounds)]\n+   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    = help: consider combining the bounds: `T: Copy + Clone`\n \n-error: aborting due to previous error\n+error: this type has already been used as a bound predicate\n+  --> $DIR/type_repetition_in_bounds.rs:24:5\n+   |\n+LL |     Self: Copy + Default + Ord,\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |\n+   = help: consider combining the bounds: `Self: Clone + Copy + Default + Ord`\n+\n+error: aborting due to 2 previous errors\n "}]}