{"sha": "9fb66969e38f1ce4b269f9506faf7ebc161ececa", "node_id": "C_kwDOAAsO6NoAKDlmYjY2OTY5ZTM4ZjFjZTRiMjY5Zjk1MDZmYWY3ZWJjMTYxZWNlY2E", "commit": {"author": {"name": "Pietro Albini", "email": "pietro.albini@ferrous-systems.com", "date": "2021-10-27T14:56:57Z"}, "committer": {"name": "Pietro Albini", "email": "pietro.albini@ferrous-systems.com", "date": "2021-10-27T15:00:46Z"}, "message": "replace `|` with `||` in {unsigned_int}::borrowing_sub\n\nUsing short-circuiting operators makes it easier to perform some kinds\nof source code analysis, like MC/DC code coverage (a requirement in\nsafety-critical environments). The optimized x86_64 assembly is the same\nbetween the old and new versions:\n\n```\nmov eax, edi\nadd dl, -1\nsbb eax, esi\nsetb dl\nret\n```", "tree": {"sha": "d2d909cf1eb177776d924ba420bd4d8539603f2a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d2d909cf1eb177776d924ba420bd4d8539603f2a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9fb66969e38f1ce4b269f9506faf7ebc161ececa", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEMycKYjxLY0eb13b7zXazX3c0dp4FAmF5aZ4ACgkQzXazX3c0\ndp4Itw/8DH2pVUeXf6dQjSUG87yxYtis47SMyz2h79zISAYWBzlM5P3JW4tRU8gQ\nvfoUT6b2EIDQGc8mQqXTD7fLfJmMZ2iEKjJ6bqvqz9/+9rMgVevwtEyok1T/Bt1i\nk9b8X6fHPXltIT1BCdafUJcUIV3wuti3eaUTKV/2nRBujv70TdnPmrNHKul5CAbR\ncmogDmSQfShHmYZlY9gafKrhJK72vrYUFi0jSOBaQRsRxHmhAmV1P87A04UtqG11\njY6U5TDGPtPoow6eXp/TQbDrWjjKvZopd7NJn6ud9opa4fDq5RRwI5useY1zvrFm\n6Hn6OjYy/rdObGFVFKLcIJ0IZ9Lodnxm37AsLiqvOSMbWAM0Lc5u1cgLIpL3v5Kg\nDLAFaNAM5YTYg6n12PDtb9isAUAH2QfWG+7ib9H64AVlzfX2VHHjGCXWV8o4xXgM\nU1Y6wKUIewVS6ySrpuM5MgVq91nFWKz4J9DWuH4q8r6E4wzTmm+p3WMpRwPsdx5X\n8WV2vpp5eJ7yBVcogKEVvqfHtJe1H8O22NVph/BeY1O2APHBoDFE971Wx66b8AhM\nX69NT6dJfw/ynk6XGAA/K3loHANUkDOS5gm40OJ2P87mPT+6osZLna5KbZfiuVco\nuDQlQofOP0F4S02kpRV2uAlHm7oebk4qfFU13NqZzvdr8/8m75c=\n=9hWI\n-----END PGP SIGNATURE-----", "payload": "tree d2d909cf1eb177776d924ba420bd4d8539603f2a\nparent 5913ef6660aa7977d7cbee01b115d8a5e926b893\nauthor Pietro Albini <pietro.albini@ferrous-systems.com> 1635346617 +0200\ncommitter Pietro Albini <pietro.albini@ferrous-systems.com> 1635346846 +0200\n\nreplace `|` with `||` in {unsigned_int}::borrowing_sub\n\nUsing short-circuiting operators makes it easier to perform some kinds\nof source code analysis, like MC/DC code coverage (a requirement in\nsafety-critical environments). The optimized x86_64 assembly is the same\nbetween the old and new versions:\n\n```\nmov eax, edi\nadd dl, -1\nsbb eax, esi\nsetb dl\nret\n```\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9fb66969e38f1ce4b269f9506faf7ebc161ececa", "html_url": "https://github.com/rust-lang/rust/commit/9fb66969e38f1ce4b269f9506faf7ebc161ececa", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9fb66969e38f1ce4b269f9506faf7ebc161ececa/comments", "author": {"login": "pietroalbini", "id": 2299951, "node_id": "MDQ6VXNlcjIyOTk5NTE=", "avatar_url": "https://avatars.githubusercontent.com/u/2299951?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pietroalbini", "html_url": "https://github.com/pietroalbini", "followers_url": "https://api.github.com/users/pietroalbini/followers", "following_url": "https://api.github.com/users/pietroalbini/following{/other_user}", "gists_url": "https://api.github.com/users/pietroalbini/gists{/gist_id}", "starred_url": "https://api.github.com/users/pietroalbini/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pietroalbini/subscriptions", "organizations_url": "https://api.github.com/users/pietroalbini/orgs", "repos_url": "https://api.github.com/users/pietroalbini/repos", "events_url": "https://api.github.com/users/pietroalbini/events{/privacy}", "received_events_url": "https://api.github.com/users/pietroalbini/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pietroalbini", "id": 2299951, "node_id": "MDQ6VXNlcjIyOTk5NTE=", "avatar_url": "https://avatars.githubusercontent.com/u/2299951?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pietroalbini", "html_url": "https://github.com/pietroalbini", "followers_url": "https://api.github.com/users/pietroalbini/followers", "following_url": "https://api.github.com/users/pietroalbini/following{/other_user}", "gists_url": "https://api.github.com/users/pietroalbini/gists{/gist_id}", "starred_url": "https://api.github.com/users/pietroalbini/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pietroalbini/subscriptions", "organizations_url": "https://api.github.com/users/pietroalbini/orgs", "repos_url": "https://api.github.com/users/pietroalbini/repos", "events_url": "https://api.github.com/users/pietroalbini/events{/privacy}", "received_events_url": "https://api.github.com/users/pietroalbini/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5913ef6660aa7977d7cbee01b115d8a5e926b893", "url": "https://api.github.com/repos/rust-lang/rust/commits/5913ef6660aa7977d7cbee01b115d8a5e926b893", "html_url": "https://github.com/rust-lang/rust/commit/5913ef6660aa7977d7cbee01b115d8a5e926b893"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "691d0891b144888dc0f8d11a44f9930848977f2a", "filename": "library/core/src/num/uint_macros.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9fb66969e38f1ce4b269f9506faf7ebc161ececa/library%2Fcore%2Fsrc%2Fnum%2Fuint_macros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9fb66969e38f1ce4b269f9506faf7ebc161ececa/library%2Fcore%2Fsrc%2Fnum%2Fuint_macros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fnum%2Fuint_macros.rs?ref=9fb66969e38f1ce4b269f9506faf7ebc161ececa", "patch": "@@ -1606,7 +1606,7 @@ macro_rules! uint_impl {\n             //   to generate optimal code for now, and LLVM doesn't have an equivalent intrinsic\n             let (a, b) = self.overflowing_sub(rhs);\n             let (c, d) = a.overflowing_sub(borrow as $SelfT);\n-            (c, b | d)\n+            (c, b || d)\n         }\n \n         /// Computes the absolute difference between `self` and `other`."}]}