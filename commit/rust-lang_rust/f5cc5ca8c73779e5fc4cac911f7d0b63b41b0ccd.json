{"sha": "f5cc5ca8c73779e5fc4cac911f7d0b63b41b0ccd", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY1Y2M1Y2E4YzczNzc5ZTVmYzRjYWM5MTFmN2QwYjYzYjQxYjBjY2Q=", "commit": {"author": {"name": "Oliver Schneider", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2018-02-06T09:24:53Z"}, "committer": {"name": "Oliver Schneider", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2018-03-08T07:34:16Z"}, "message": "Remove dead code", "tree": {"sha": "b30dd710d5fa7f29450de3aed6616e55d311f132", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b30dd710d5fa7f29450de3aed6616e55d311f132"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f5cc5ca8c73779e5fc4cac911f7d0b63b41b0ccd", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEYFTdM4NKd7XQft77pp+NIls619kFAlqg53gACgkQpp+NIls6\n19lPBxAAtVDySfmPho6b8EILNFdVOtI1cEfq5GhdA4SgLtEf3Pwka0feSshxdWgk\n3w+U9RwqZ8QIrWs2OxFhS41ntpeNWadK8tvIpJLNmmdi+lPkrANtPGiKse+QGIf8\nK2j1S42UTY48PjE3AQo1oh3yO8W1b160TL05yHIr8zurm3z+Q07bIHXh0NrP9kDo\nMDebgd0nP6MYVR1kqeapOyIV7SIHaPCnqIZMd9sFlS32G5uFzfhTFPVXxpc/x2Ue\n1MxOjrlBV3IL4Cp5qIQUBwW1NDeNo/jAob0RnJ4iHdiOFvJnmHYgXAcZisV/QOe0\n2WZJxi0X3RqSiNoH13TjLmX/l5Pp8xWuNiGhQdsouTzxPWar6ckpvOFNtGtq+7ea\n5GE03UFL3iVnJM0ZSv3YBFGuU8+9bxOm26VDtT/+zVGB97zMMKBA0euw8mL1Opd5\nYfHYvdyp9+2RmNN+y1+XxTkTHqsc+6xdrW8J4uS8tMcjBBK5QADr26oyCgKpXohF\nsmpR/79YE778LO+LXj4aq+TyKdIEuDoZZ1mLgBUpJn+GQmHMdcRRU9TgPoWRGIT4\nsKOnqi3en2yxr7mMQUHg+YP0ei/qQXZWfywN7eoF322vV5IJnKiX1xt2sT3zvV20\nO1nbSfcXXUIx7rTYcKT3PiF5Wgf0aT6Lax8VCdDvJEt3C/ZnQD0=\n=fW4G\n-----END PGP SIGNATURE-----", "payload": "tree b30dd710d5fa7f29450de3aed6616e55d311f132\nparent 1f9d846a5882dbdc4c599fa33e6256d2e37841a6\nauthor Oliver Schneider <git-spam-no-reply9815368754983@oli-obk.de> 1517909093 +0100\ncommitter Oliver Schneider <git-spam-no-reply9815368754983@oli-obk.de> 1520494456 +0100\n\nRemove dead code\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f5cc5ca8c73779e5fc4cac911f7d0b63b41b0ccd", "html_url": "https://github.com/rust-lang/rust/commit/f5cc5ca8c73779e5fc4cac911f7d0b63b41b0ccd", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f5cc5ca8c73779e5fc4cac911f7d0b63b41b0ccd/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1f9d846a5882dbdc4c599fa33e6256d2e37841a6", "url": "https://api.github.com/repos/rust-lang/rust/commits/1f9d846a5882dbdc4c599fa33e6256d2e37841a6", "html_url": "https://github.com/rust-lang/rust/commit/1f9d846a5882dbdc4c599fa33e6256d2e37841a6"}], "stats": {"total": 42, "additions": 37, "deletions": 5}, "files": [{"sha": "a3295aac80157690501b7e2de459e5b23d396e12", "filename": "src/librustc_mir/hair/pattern/_match.rs", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/f5cc5ca8c73779e5fc4cac911f7d0b63b41b0ccd/src%2Flibrustc_mir%2Fhair%2Fpattern%2F_match.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f5cc5ca8c73779e5fc4cac911f7d0b63b41b0ccd/src%2Flibrustc_mir%2Fhair%2Fpattern%2F_match.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fhair%2Fpattern%2F_match.rs?ref=f5cc5ca8c73779e5fc4cac911f7d0b63b41b0ccd", "patch": "@@ -905,7 +905,6 @@ fn constructor_sub_pattern_tys<'a, 'tcx: 'a>(cx: &MatchCheckCtxt<'a, 'tcx>,\n         ty::TySlice(ty) | ty::TyArray(ty, _) => match *ctor {\n             Slice(length) => (0..length).map(|_| ty).collect(),\n             ConstantValue(_) => vec![],\n-            Single => vec![ty],\n             _ => bug!(\"bad slice pattern {:?} {:?}\", ctor, ty)\n         },\n         ty::TyRef(_, ref ty_and_mut) => vec![ty_and_mut.ty],\n@@ -914,9 +913,6 @@ fn constructor_sub_pattern_tys<'a, 'tcx: 'a>(cx: &MatchCheckCtxt<'a, 'tcx>,\n                 // Use T as the sub pattern type of Box<T>.\n                 vec![substs.type_at(0)]\n             } else {\n-                if let ConstantValue(_) = *ctor {\n-                    return vec![];\n-                }\n                 adt.variants[ctor.variant_index_for_adt(adt)].fields.iter().map(|field| {\n                     let is_visible = adt.is_enum()\n                         || field.vis.is_accessible_from(cx.module, cx.tcx);\n@@ -1025,7 +1021,6 @@ fn constructor_covered_by_range(ctor: &Constructor,\n                       (end == RangeEnd::Excluded && to == Ordering::Equal);\n             Ok(some_or_ok!(cmp_from(&from.val)) && end)\n         }\n-        Variant(_) |\n         Single => Ok(true),\n         _ => bug!(),\n     }"}, {"sha": "4a2f0a7f38cda285489343fe85c1faf4cc6a2715", "filename": "src/test/ui/const-eval/issue-47971.rs", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/f5cc5ca8c73779e5fc4cac911f7d0b63b41b0ccd/src%2Ftest%2Fui%2Fconst-eval%2Fissue-47971.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f5cc5ca8c73779e5fc4cac911f7d0b63b41b0ccd/src%2Ftest%2Fui%2Fconst-eval%2Fissue-47971.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-eval%2Fissue-47971.rs?ref=f5cc5ca8c73779e5fc4cac911f7d0b63b41b0ccd", "patch": "@@ -0,0 +1,21 @@\n+// Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// must-compile-successfully\n+\n+#![feature(const_fn)]\n+\n+struct S(pub &'static u32, pub u32);\n+\n+const fn g(ss: &S) -> &u32 { &ss.1 }\n+\n+static T: S = S(g(&T), 0);\n+\n+fn main () { }"}, {"sha": "ac29d635a920dbdb0a674726fa5e038f1c44f435", "filename": "src/test/ui/lint/unused_parens_json_suggestion.stderr", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/f5cc5ca8c73779e5fc4cac911f7d0b63b41b0ccd/src%2Ftest%2Fui%2Flint%2Funused_parens_json_suggestion.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f5cc5ca8c73779e5fc4cac911f7d0b63b41b0ccd/src%2Ftest%2Fui%2Flint%2Funused_parens_json_suggestion.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Funused_parens_json_suggestion.stderr?ref=f5cc5ca8c73779e5fc4cac911f7d0b63b41b0ccd", "patch": "@@ -24,6 +24,7 @@\n       ],\n       \"label\": null,\n       \"suggested_replacement\": null,\n+      \"suggestion_approximate\": null,\n       \"expansion\": null\n     }\n   ],\n@@ -51,6 +52,7 @@\n           ],\n           \"label\": null,\n           \"suggested_replacement\": null,\n+          \"suggestion_approximate\": null,\n           \"expansion\": null\n         }\n       ],\n@@ -80,6 +82,7 @@\n           ],\n           \"label\": null,\n           \"suggested_replacement\": \"1 / (2 + 3)\",\n+          \"suggestion_approximate\": null,\n           \"expansion\": null\n         }\n       ],"}, {"sha": "33cd61342f0e7fcb371d2fc925b56e602ef6732b", "filename": "src/test/ui/lint/use_suggestion_json.stderr", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/f5cc5ca8c73779e5fc4cac911f7d0b63b41b0ccd/src%2Ftest%2Fui%2Flint%2Fuse_suggestion_json.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f5cc5ca8c73779e5fc4cac911f7d0b63b41b0ccd/src%2Ftest%2Fui%2Flint%2Fuse_suggestion_json.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Fuse_suggestion_json.stderr?ref=f5cc5ca8c73779e5fc4cac911f7d0b63b41b0ccd", "patch": "@@ -89,6 +89,7 @@ mod foo {\n       ],\n       \"label\": \"not found in this scope\",\n       \"suggested_replacement\": null,\n+      \"suggestion_approximate\": null,\n       \"expansion\": null\n     }\n   ],\n@@ -118,6 +119,7 @@ mod foo {\n           \"suggested_replacement\": \"use std::collections::binary_heap::Iter;\n \n \",\n+          \"suggestion_approximate\": null,\n           \"expansion\": null\n         },\n         {\n@@ -140,6 +142,7 @@ mod foo {\n           \"suggested_replacement\": \"use std::collections::btree_map::Iter;\n \n \",\n+          \"suggestion_approximate\": null,\n           \"expansion\": null\n         },\n         {\n@@ -162,6 +165,7 @@ mod foo {\n           \"suggested_replacement\": \"use std::collections::btree_set::Iter;\n \n \",\n+          \"suggestion_approximate\": null,\n           \"expansion\": null\n         },\n         {\n@@ -184,6 +188,7 @@ mod foo {\n           \"suggested_replacement\": \"use std::collections::hash_map::Iter;\n \n \",\n+          \"suggestion_approximate\": null,\n           \"expansion\": null\n         },\n         {\n@@ -206,6 +211,7 @@ mod foo {\n           \"suggested_replacement\": \"use std::collections::hash_set::Iter;\n \n \",\n+          \"suggestion_approximate\": null,\n           \"expansion\": null\n         },\n         {\n@@ -228,6 +234,7 @@ mod foo {\n           \"suggested_replacement\": \"use std::collections::linked_list::Iter;\n \n \",\n+          \"suggestion_approximate\": null,\n           \"expansion\": null\n         },\n         {\n@@ -250,6 +257,7 @@ mod foo {\n           \"suggested_replacement\": \"use std::collections::vec_deque::Iter;\n \n \",\n+          \"suggestion_approximate\": null,\n           \"expansion\": null\n         },\n         {\n@@ -272,6 +280,7 @@ mod foo {\n           \"suggested_replacement\": \"use std::option::Iter;\n \n \",\n+          \"suggestion_approximate\": null,\n           \"expansion\": null\n         },\n         {\n@@ -294,6 +303,7 @@ mod foo {\n           \"suggested_replacement\": \"use std::path::Iter;\n \n \",\n+          \"suggestion_approximate\": null,\n           \"expansion\": null\n         },\n         {\n@@ -316,6 +326,7 @@ mod foo {\n           \"suggested_replacement\": \"use std::result::Iter;\n \n \",\n+          \"suggestion_approximate\": null,\n           \"expansion\": null\n         },\n         {\n@@ -338,6 +349,7 @@ mod foo {\n           \"suggested_replacement\": \"use std::slice::Iter;\n \n \",\n+          \"suggestion_approximate\": null,\n           \"expansion\": null\n         },\n         {\n@@ -360,6 +372,7 @@ mod foo {\n           \"suggested_replacement\": \"use std::sync::mpsc::Iter;\n \n \",\n+          \"suggestion_approximate\": null,\n           \"expansion\": null\n         }\n       ],"}]}