{"sha": "67a835d755a97770edb320d315d542859b11f854", "node_id": "C_kwDOAAsO6NoAKDY3YTgzNWQ3NTVhOTc3NzBlZGIzMjBkMzE1ZDU0Mjg1OWIxMWY4NTQ", "commit": {"author": {"name": "The 8472", "email": "git@infinite-source.de", "date": "2023-04-05T19:15:32Z"}, "committer": {"name": "The 8472", "email": "git@infinite-source.de", "date": "2023-04-28T21:08:54Z"}, "message": "fix codegen test", "tree": {"sha": "e0e1ba3814017bc7a3b40af37dcebe6113de52eb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e0e1ba3814017bc7a3b40af37dcebe6113de52eb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/67a835d755a97770edb320d315d542859b11f854", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/67a835d755a97770edb320d315d542859b11f854", "html_url": "https://github.com/rust-lang/rust/commit/67a835d755a97770edb320d315d542859b11f854", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/67a835d755a97770edb320d315d542859b11f854/comments", "author": {"login": "the8472", "id": 1065730, "node_id": "MDQ6VXNlcjEwNjU3MzA=", "avatar_url": "https://avatars.githubusercontent.com/u/1065730?v=4", "gravatar_id": "", "url": "https://api.github.com/users/the8472", "html_url": "https://github.com/the8472", "followers_url": "https://api.github.com/users/the8472/followers", "following_url": "https://api.github.com/users/the8472/following{/other_user}", "gists_url": "https://api.github.com/users/the8472/gists{/gist_id}", "starred_url": "https://api.github.com/users/the8472/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/the8472/subscriptions", "organizations_url": "https://api.github.com/users/the8472/orgs", "repos_url": "https://api.github.com/users/the8472/repos", "events_url": "https://api.github.com/users/the8472/events{/privacy}", "received_events_url": "https://api.github.com/users/the8472/received_events", "type": "User", "site_admin": false}, "committer": {"login": "the8472", "id": 1065730, "node_id": "MDQ6VXNlcjEwNjU3MzA=", "avatar_url": "https://avatars.githubusercontent.com/u/1065730?v=4", "gravatar_id": "", "url": "https://api.github.com/users/the8472", "html_url": "https://github.com/the8472", "followers_url": "https://api.github.com/users/the8472/followers", "following_url": "https://api.github.com/users/the8472/following{/other_user}", "gists_url": "https://api.github.com/users/the8472/gists{/gist_id}", "starred_url": "https://api.github.com/users/the8472/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/the8472/subscriptions", "organizations_url": "https://api.github.com/users/the8472/orgs", "repos_url": "https://api.github.com/users/the8472/repos", "events_url": "https://api.github.com/users/the8472/events{/privacy}", "received_events_url": "https://api.github.com/users/the8472/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1a51ec686439b52bd652b32f8f7aaf7817faf5a7", "url": "https://api.github.com/repos/rust-lang/rust/commits/1a51ec686439b52bd652b32f8f7aaf7817faf5a7", "html_url": "https://github.com/rust-lang/rust/commit/1a51ec686439b52bd652b32f8f7aaf7817faf5a7"}], "stats": {"total": 9, "additions": 6, "deletions": 3}, "files": [{"sha": "da64692d27d92fd46f65df77de5253361e3f54c6", "filename": "tests/codegen/issues/issue-103840.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/67a835d755a97770edb320d315d542859b11f854/tests%2Fcodegen%2Fissues%2Fissue-103840.rs", "raw_url": "https://github.com/rust-lang/rust/raw/67a835d755a97770edb320d315d542859b11f854/tests%2Fcodegen%2Fissues%2Fissue-103840.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcodegen%2Fissues%2Fissue-103840.rs?ref=67a835d755a97770edb320d315d542859b11f854", "patch": "@@ -1,4 +1,5 @@\n // compile-flags: -O\n+// min-llvm-version: 16.0\n #![crate_type = \"lib\"]\n \n pub fn foo(t: &mut Vec<usize>) {"}, {"sha": "2ee4d7cca0e3c30620016b5011fd14c7865a9dc7", "filename": "tests/codegen/issues/issue-105386-ub-in-debuginfo.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/67a835d755a97770edb320d315d542859b11f854/tests%2Fcodegen%2Fissues%2Fissue-105386-ub-in-debuginfo.rs", "raw_url": "https://github.com/rust-lang/rust/raw/67a835d755a97770edb320d315d542859b11f854/tests%2Fcodegen%2Fissues%2Fissue-105386-ub-in-debuginfo.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcodegen%2Fissues%2Fissue-105386-ub-in-debuginfo.rs?ref=67a835d755a97770edb320d315d542859b11f854", "patch": "@@ -19,4 +19,5 @@ pub fn outer_function(x: S, y: S) -> usize {\n // CHECK-NOT: [[ptr_tmp:%.*]] = getelementptr inbounds %\"[closure@{{.*.rs}}:9:23: 9:25]\", ptr [[spill]]\n // CHECK-NOT: [[load:%.*]] = load ptr, ptr\n // CHECK: call void @llvm.lifetime.start{{.*}}({{.*}}, ptr [[spill]])\n-// CHECK: call void @llvm.memcpy{{.*}}(ptr {{align .*}} [[spill]], ptr {{align .*}} %x\n+// CHECK: [[inner:%.*]] = getelementptr inbounds %\"{{.*}}\", ptr [[spill]]\n+// CHECK: call void @llvm.memcpy{{.*}}(ptr {{align .*}} [[inner]], ptr {{align .*}} %x"}, {"sha": "c0be7fab2f3e04724869ed5d3cf7dc150c277bba", "filename": "tests/codegen/issues/issue-86106.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/67a835d755a97770edb320d315d542859b11f854/tests%2Fcodegen%2Fissues%2Fissue-86106.rs", "raw_url": "https://github.com/rust-lang/rust/raw/67a835d755a97770edb320d315d542859b11f854/tests%2Fcodegen%2Fissues%2Fissue-86106.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcodegen%2Fissues%2Fissue-86106.rs?ref=67a835d755a97770edb320d315d542859b11f854", "patch": "@@ -1,4 +1,5 @@\n // min-llvm-version: 15.0\n+// only-64bit llvm appears to use stores instead of memset on 32bit\n // compile-flags: -C opt-level=3 -Z merge-functions=disabled\n \n // The below two functions ensure that both `String::new()` and `\"\".to_string()`\n@@ -19,9 +20,9 @@ pub fn string_new() -> String {\n // CHECK-LABEL: define void @empty_to_string\n #[no_mangle]\n pub fn empty_to_string() -> String {\n-    // CHECK: getelementptr\n+    // CHECK: store ptr inttoptr\n+    // CHECK-NEXT: getelementptr\n     // CHECK-NEXT: call void @llvm.memset\n-    // CHECK-NEXT: store ptr inttoptr\n     // CHECK-NEXT: ret void\n     \"\".to_string()\n }"}]}