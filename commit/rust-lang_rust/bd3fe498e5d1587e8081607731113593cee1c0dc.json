{"sha": "bd3fe498e5d1587e8081607731113593cee1c0dc", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJkM2ZlNDk4ZTVkMTU4N2U4MDgxNjA3NzMxMTEzNTkzY2VlMWMwZGM=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2015-12-29T22:33:58Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2016-02-06T20:56:31Z"}, "message": "Add support for i686-unknown-linux-musl", "tree": {"sha": "0cd74833355be8385ac8a5af8d962ea03797e115", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0cd74833355be8385ac8a5af8d962ea03797e115"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bd3fe498e5d1587e8081607731113593cee1c0dc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bd3fe498e5d1587e8081607731113593cee1c0dc", "html_url": "https://github.com/rust-lang/rust/commit/bd3fe498e5d1587e8081607731113593cee1c0dc", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bd3fe498e5d1587e8081607731113593cee1c0dc/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "81ba4a78b506c71daa66b2be9c12c10aa97830ce", "url": "https://api.github.com/repos/rust-lang/rust/commits/81ba4a78b506c71daa66b2be9c12c10aa97830ce", "html_url": "https://github.com/rust-lang/rust/commit/81ba4a78b506c71daa66b2be9c12c10aa97830ce"}], "stats": {"total": 82, "additions": 80, "deletions": 2}, "files": [{"sha": "ac05798c7673b1d598cf75a4949ab294f2601f1d", "filename": "mk/cfg/i686-unknown-linux-musl.mk", "status": "added", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/bd3fe498e5d1587e8081607731113593cee1c0dc/mk%2Fcfg%2Fi686-unknown-linux-musl.mk", "raw_url": "https://github.com/rust-lang/rust/raw/bd3fe498e5d1587e8081607731113593cee1c0dc/mk%2Fcfg%2Fi686-unknown-linux-musl.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mk%2Fcfg%2Fi686-unknown-linux-musl.mk?ref=bd3fe498e5d1587e8081607731113593cee1c0dc", "patch": "@@ -0,0 +1,28 @@\n+# i686-unknown-linux-musl configuration\n+CC_i686-unknown-linux-musl=$(CFG_MUSL_ROOT)/bin/musl-gcc\n+CXX_i686-unknown-linux-musl=notaprogram\n+CPP_i686-unknown-linux-musl=$(CFG_MUSL_ROOT)/bin/musl-gcc -E\n+AR_i686-unknown-linux-musl=$(AR)\n+CFG_INSTALL_ONLY_RLIB_i686-unknown-linux-musl = 1\n+CFG_LIB_NAME_i686-unknown-linux-musl=lib$(1).so\n+CFG_STATIC_LIB_NAME_i686-unknown-linux-musl=lib$(1).a\n+CFG_LIB_GLOB_i686-unknown-linux-musl=lib$(1)-*.so\n+CFG_JEMALLOC_CFLAGS_i686-unknown-linux-musl := -m32 -Wl,-melf_i386\n+CFG_GCCISH_CFLAGS_i686-unknown-linux-musl := -Wall -Werror -g -fPIC -m32 -Wl,-melf_i386\n+CFG_GCCISH_CXXFLAGS_i686-unknown-linux-musl :=\n+CFG_GCCISH_LINK_FLAGS_i686-unknown-linux-musl :=\n+CFG_GCCISH_DEF_FLAG_i686-unknown-linux-musl :=\n+CFG_LLC_FLAGS_i686-unknown-linux-musl :=\n+CFG_INSTALL_NAME_i686-unknown-linux-musl =\n+CFG_EXE_SUFFIX_i686-unknown-linux-musl =\n+CFG_WINDOWSY_i686-unknown-linux-musl :=\n+CFG_UNIXY_i686-unknown-linux-musl := 1\n+CFG_LDPATH_i686-unknown-linux-musl :=\n+CFG_RUN_i686-unknown-linux-musl=$(2)\n+CFG_RUN_TARG_i686-unknown-linux-musl=$(call CFG_RUN_i686-unknown-linux-musl,,$(2))\n+CFG_GNU_TRIPLE_i686-unknown-linux-musl := i686-unknown-linux-musl\n+CFG_THIRD_PARTY_OBJECTS_i686-unknown-linux-musl := crt1.o crti.o crtn.o\n+CFG_INSTALLED_OBJECTS_i686-unknown-linux-musl := crt1.o crti.o crtn.o\n+\n+NATIVE_DEPS_libc_T_i686-unknown-linux-musl += libc.a\n+NATIVE_DEPS_std_T_i686-unknown-linux-musl += libunwind.a crt1.o crti.o crtn.o"}, {"sha": "dff9c33f8db45f5687ffdc9f218513f157b4c000", "filename": "mk/main.mk", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/bd3fe498e5d1587e8081607731113593cee1c0dc/mk%2Fmain.mk", "raw_url": "https://github.com/rust-lang/rust/raw/bd3fe498e5d1587e8081607731113593cee1c0dc/mk%2Fmain.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mk%2Fmain.mk?ref=bd3fe498e5d1587e8081607731113593cee1c0dc", "patch": "@@ -361,6 +361,9 @@ export CFG_DISABLE_UNSTABLE_FEATURES\n export RUSTC_BOOTSTRAP_KEY:=$(CFG_BOOTSTRAP_KEY)\n endif\n export CFG_BOOTSTRAP_KEY\n+ifdef CFG_MUSL_ROOT\n+export CFG_MUSL_ROOT\n+endif\n \n ######################################################################\n # Per-stage targets and runner"}, {"sha": "77bc7bb51755d6a6fe52775130f5c69cdfbe6706", "filename": "src/librustc_back/target/i686_unknown_linux_musl.rs", "status": "added", "additions": 46, "deletions": 0, "changes": 46, "blob_url": "https://github.com/rust-lang/rust/blob/bd3fe498e5d1587e8081607731113593cee1c0dc/src%2Flibrustc_back%2Ftarget%2Fi686_unknown_linux_musl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bd3fe498e5d1587e8081607731113593cee1c0dc/src%2Flibrustc_back%2Ftarget%2Fi686_unknown_linux_musl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_back%2Ftarget%2Fi686_unknown_linux_musl.rs?ref=bd3fe498e5d1587e8081607731113593cee1c0dc", "patch": "@@ -0,0 +1,46 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// See x86_64_unknown_linux_musl for explanation of arguments\n+\n+use target::Target;\n+\n+pub fn target() -> Target {\n+    let mut base = super::linux_base::opts();\n+    base.cpu = \"pentium4\".to_string();\n+    base.pre_link_args.push(\"-m32\".to_string());\n+    base.pre_link_args.push(\"-Wl,-melf_i386\".to_string());\n+\n+    base.pre_link_args.push(\"-nostdlib\".to_string());\n+    base.pre_link_args.push(\"-static\".to_string());\n+    base.pre_link_args.push(\"-Wl,--eh-frame-hdr\".to_string());\n+\n+    base.pre_link_args.push(\"-Wl,-(\".to_string());\n+    base.post_link_args.push(\"-Wl,-)\".to_string());\n+\n+    base.pre_link_objects_exe.push(\"crt1.o\".to_string());\n+    base.pre_link_objects_exe.push(\"crti.o\".to_string());\n+    base.post_link_objects.push(\"crtn.o\".to_string());\n+\n+    base.dynamic_linking = false;\n+    base.has_rpath = false;\n+    base.position_independent_executables = false;\n+\n+    Target {\n+        llvm_target: \"i686-unknown-linux-musl\".to_string(),\n+        target_endian: \"little\".to_string(),\n+        target_pointer_width: \"32\".to_string(),\n+        arch: \"x86\".to_string(),\n+        target_os: \"linux\".to_string(),\n+        target_env: \"musl\".to_string(),\n+        target_vendor: \"unknown\".to_string(),\n+        options: base,\n+    }\n+}"}, {"sha": "c61ae547a2254d2e3fd1cfeab747a0277fe11a0c", "filename": "src/librustc_back/target/mod.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/bd3fe498e5d1587e8081607731113593cee1c0dc/src%2Flibrustc_back%2Ftarget%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bd3fe498e5d1587e8081607731113593cee1c0dc/src%2Flibrustc_back%2Ftarget%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_back%2Ftarget%2Fmod.rs?ref=bd3fe498e5d1587e8081607731113593cee1c0dc", "patch": "@@ -431,6 +431,7 @@ impl Target {\n             armv7_unknown_linux_gnueabihf,\n             aarch64_unknown_linux_gnu,\n             x86_64_unknown_linux_musl,\n+            i686_unknown_linux_musl,\n             mips_unknown_linux_musl,\n             mipsel_unknown_linux_musl,\n "}, {"sha": "9d74bcb58242024b4fda574f6ec11cf1d8f0487e", "filename": "src/libstd/sys/unix/thread.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/bd3fe498e5d1587e8081607731113593cee1c0dc/src%2Flibstd%2Fsys%2Funix%2Fthread.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bd3fe498e5d1587e8081607731113593cee1c0dc/src%2Flibstd%2Fsys%2Funix%2Fthread.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Funix%2Fthread.rs?ref=bd3fe498e5d1587e8081607731113593cee1c0dc", "patch": "@@ -168,7 +168,7 @@ impl Drop for Thread {\n     }\n }\n \n-#[cfg(all(not(target_os = \"linux\"),\n+#[cfg(all(not(all(target_os = \"linux\", not(target_env = \"musl\"))),\n           not(target_os = \"macos\"),\n           not(target_os = \"bitrig\"),\n           not(all(target_os = \"netbsd\", not(target_vendor = \"rumprun\"))),\n@@ -181,7 +181,7 @@ pub mod guard {\n }\n \n \n-#[cfg(any(target_os = \"linux\",\n+#[cfg(any(all(target_os = \"linux\", not(target_env = \"musl\")),\n           target_os = \"macos\",\n           target_os = \"bitrig\",\n           all(target_os = \"netbsd\", not(target_vendor = \"rumprun\")),"}]}