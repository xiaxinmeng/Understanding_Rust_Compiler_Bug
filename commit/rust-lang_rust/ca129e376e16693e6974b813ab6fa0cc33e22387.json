{"sha": "ca129e376e16693e6974b813ab6fa0cc33e22387", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNhMTI5ZTM3NmUxNjY5M2U2OTc0YjgxM2FiNmZhMGNjMzNlMjIzODc=", "commit": {"author": {"name": "Sean McArthur", "email": "sean.monstar@gmail.com", "date": "2016-03-09T18:12:24Z"}, "committer": {"name": "Sean McArthur", "email": "sean.monstar@gmail.com", "date": "2016-03-09T19:36:05Z"}, "message": "lint: mark associated types as live for the dead_code pass", "tree": {"sha": "57d9fa59d68b86506070a36d08554bb3ab47b84e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/57d9fa59d68b86506070a36d08554bb3ab47b84e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ca129e376e16693e6974b813ab6fa0cc33e22387", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ca129e376e16693e6974b813ab6fa0cc33e22387", "html_url": "https://github.com/rust-lang/rust/commit/ca129e376e16693e6974b813ab6fa0cc33e22387", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ca129e376e16693e6974b813ab6fa0cc33e22387/comments", "author": {"login": "seanmonstar", "id": 51479, "node_id": "MDQ6VXNlcjUxNDc5", "avatar_url": "https://avatars.githubusercontent.com/u/51479?v=4", "gravatar_id": "", "url": "https://api.github.com/users/seanmonstar", "html_url": "https://github.com/seanmonstar", "followers_url": "https://api.github.com/users/seanmonstar/followers", "following_url": "https://api.github.com/users/seanmonstar/following{/other_user}", "gists_url": "https://api.github.com/users/seanmonstar/gists{/gist_id}", "starred_url": "https://api.github.com/users/seanmonstar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/seanmonstar/subscriptions", "organizations_url": "https://api.github.com/users/seanmonstar/orgs", "repos_url": "https://api.github.com/users/seanmonstar/repos", "events_url": "https://api.github.com/users/seanmonstar/events{/privacy}", "received_events_url": "https://api.github.com/users/seanmonstar/received_events", "type": "User", "site_admin": false}, "committer": {"login": "seanmonstar", "id": 51479, "node_id": "MDQ6VXNlcjUxNDc5", "avatar_url": "https://avatars.githubusercontent.com/u/51479?v=4", "gravatar_id": "", "url": "https://api.github.com/users/seanmonstar", "html_url": "https://github.com/seanmonstar", "followers_url": "https://api.github.com/users/seanmonstar/followers", "following_url": "https://api.github.com/users/seanmonstar/following{/other_user}", "gists_url": "https://api.github.com/users/seanmonstar/gists{/gist_id}", "starred_url": "https://api.github.com/users/seanmonstar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/seanmonstar/subscriptions", "organizations_url": "https://api.github.com/users/seanmonstar/orgs", "repos_url": "https://api.github.com/users/seanmonstar/repos", "events_url": "https://api.github.com/users/seanmonstar/events{/privacy}", "received_events_url": "https://api.github.com/users/seanmonstar/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2f34986eb0f14b3ce5e17db577abc632a9176380", "url": "https://api.github.com/repos/rust-lang/rust/commits/2f34986eb0f14b3ce5e17db577abc632a9176380", "html_url": "https://github.com/rust-lang/rust/commit/2f34986eb0f14b3ce5e17db577abc632a9176380"}], "stats": {"total": 39, "additions": 30, "deletions": 9}, "files": [{"sha": "4ceac287d19dfd463e9e96840acb51a12a347f5f", "filename": "src/librustc/middle/dead.rs", "status": "modified", "additions": 3, "deletions": 9, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/ca129e376e16693e6974b813ab6fa0cc33e22387/src%2Flibrustc%2Fmiddle%2Fdead.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca129e376e16693e6974b813ab6fa0cc33e22387/src%2Flibrustc%2Fmiddle%2Fdead.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fdead.rs?ref=ca129e376e16693e6974b813ab6fa0cc33e22387", "patch": "@@ -351,15 +351,9 @@ impl<'v> Visitor<'v> for LifeSeeder {\n             }\n             hir::ItemImpl(_, _, _, ref opt_trait, _, ref impl_items) => {\n                 for impl_item in impl_items {\n-                    match impl_item.node {\n-                        hir::ImplItemKind::Const(..) |\n-                        hir::ImplItemKind::Method(..) => {\n-                            if opt_trait.is_some() ||\n-                                    has_allow_dead_code_or_lang_attr(&impl_item.attrs) {\n-                                self.worklist.push(impl_item.id);\n-                            }\n-                        }\n-                        hir::ImplItemKind::Type(_) => {}\n+                    if opt_trait.is_some() ||\n+                            has_allow_dead_code_or_lang_attr(&impl_item.attrs) {\n+                        self.worklist.push(impl_item.id);\n                     }\n                 }\n             }"}, {"sha": "1ae078ba2211a651c9b25937cee584483bea92bb", "filename": "src/test/run-pass/lint-dead-code-associated-type.rs", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/ca129e376e16693e6974b813ab6fa0cc33e22387/src%2Ftest%2Frun-pass%2Flint-dead-code-associated-type.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca129e376e16693e6974b813ab6fa0cc33e22387/src%2Ftest%2Frun-pass%2Flint-dead-code-associated-type.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Flint-dead-code-associated-type.rs?ref=ca129e376e16693e6974b813ab6fa0cc33e22387", "patch": "@@ -0,0 +1,27 @@\n+// Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![deny(dead_code)]\n+\n+trait Foo {\n+    type Bar;\n+}\n+\n+struct Used;\n+\n+struct Ex;\n+\n+impl Foo for Ex {\n+    type Bar = Used;\n+}\n+\n+pub fn main() {\n+    let _x = Ex;\n+}"}]}