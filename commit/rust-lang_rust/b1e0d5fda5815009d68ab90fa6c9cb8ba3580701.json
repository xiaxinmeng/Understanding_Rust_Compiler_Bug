{"sha": "b1e0d5fda5815009d68ab90fa6c9cb8ba3580701", "node_id": "MDY6Q29tbWl0NzI0NzEyOmIxZTBkNWZkYTU4MTUwMDlkNjhhYjkwZmE2YzljYjhiYTM1ODA3MDE=", "commit": {"author": {"name": "Dylan DPC", "email": "dylan.dpc@gmail.com", "date": "2021-05-23T01:23:37Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-05-23T01:23:37Z"}, "message": "Rollup merge of #85288 - Geal:clarify-std-io-read, r=dtolnay\n\nadd an example to explain std::io::Read::read returning 0 in some cases\n\nI have always found the explanation about `Read::read` returning 0 to indicate EOF but not indefinitely, so here's more info using Linux as example. I can also add example code if necessary", "tree": {"sha": "c43f3da88cb98c435b7590e0831dff986feb6d15", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c43f3da88cb98c435b7590e0831dff986feb6d15"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b1e0d5fda5815009d68ab90fa6c9cb8ba3580701", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJgqa6bCRBK7hj4Ov3rIwAA96QIAF/S8b1A4u0no8JF5zSJzdK5\nT+Zqa5OcZ/UB9sZHaY570IC+dZFRq2tujCA0UeRVdkGxKR8GBBswd97IAlGceTXn\nY6AnkCX17AgdwXLX2Jva8AXitkcScrDw0ufUTEltVAl+nNwi/ozZo11ZEA76GsCs\nzYkdPOV9E86NdjuadJnqJpWjTLOgLNd4nf+SeWQ4igp0irt+SZKHHpBS17J014YE\n5fDXYmNKcqhGmoGFGOmsh/VDz3T91dn9j9h8UaumztyAOJXUHkiOBoaJ3HgFj535\n3DXbLGyb10nPkfMj5vcPCoygpXy9Ydp362phmxlEGfSjfO3RVE2NVYrHG1zQbqQ=\n=Ck3D\n-----END PGP SIGNATURE-----\n", "payload": "tree c43f3da88cb98c435b7590e0831dff986feb6d15\nparent d5fa533ab0bfdbb02a1d37ae7787472b20291f11\nparent 95ccdb11dab922fa8d6b1b7a24acd82b0b30f071\nauthor Dylan DPC <dylan.dpc@gmail.com> 1621733017 +0200\ncommitter GitHub <noreply@github.com> 1621733017 +0200\n\nRollup merge of #85288 - Geal:clarify-std-io-read, r=dtolnay\n\nadd an example to explain std::io::Read::read returning 0 in some cases\n\nI have always found the explanation about `Read::read` returning 0 to indicate EOF but not indefinitely, so here's more info using Linux as example. I can also add example code if necessary\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b1e0d5fda5815009d68ab90fa6c9cb8ba3580701", "html_url": "https://github.com/rust-lang/rust/commit/b1e0d5fda5815009d68ab90fa6c9cb8ba3580701", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b1e0d5fda5815009d68ab90fa6c9cb8ba3580701/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d5fa533ab0bfdbb02a1d37ae7787472b20291f11", "url": "https://api.github.com/repos/rust-lang/rust/commits/d5fa533ab0bfdbb02a1d37ae7787472b20291f11", "html_url": "https://github.com/rust-lang/rust/commit/d5fa533ab0bfdbb02a1d37ae7787472b20291f11"}, {"sha": "95ccdb11dab922fa8d6b1b7a24acd82b0b30f071", "url": "https://api.github.com/repos/rust-lang/rust/commits/95ccdb11dab922fa8d6b1b7a24acd82b0b30f071", "html_url": "https://github.com/rust-lang/rust/commit/95ccdb11dab922fa8d6b1b7a24acd82b0b30f071"}], "stats": {"total": 8, "additions": 7, "deletions": 1}, "files": [{"sha": "b838a655346a07dde521b2f43ddd6371776b3eaf", "filename": "library/std/src/io/mod.rs", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/b1e0d5fda5815009d68ab90fa6c9cb8ba3580701/library%2Fstd%2Fsrc%2Fio%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b1e0d5fda5815009d68ab90fa6c9cb8ba3580701/library%2Fstd%2Fsrc%2Fio%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fio%2Fmod.rs?ref=b1e0d5fda5815009d68ab90fa6c9cb8ba3580701", "patch": "@@ -526,7 +526,12 @@ pub trait Read {\n     ///\n     /// 1. This reader has reached its \"end of file\" and will likely no longer\n     ///    be able to produce bytes. Note that this does not mean that the\n-    ///    reader will *always* no longer be able to produce bytes.\n+    ///    reader will *always* no longer be able to produce bytes. As an example,\n+    ///    on Linux, this method will call the `recv` syscall for a [`TcpStream`],\n+    ///    where returning zero indicates the connection was shut down correctly. While\n+    ///    for [`File`], it is possible to reach the end of file and get zero as result,\n+    ///    but if more data is appended to the file, future calls to `read` will return\n+    ///    more data.\n     /// 2. The buffer specified was 0 bytes in length.\n     ///\n     /// It is not an error if the returned value `n` is smaller than the buffer size,\n@@ -568,6 +573,7 @@ pub trait Read {\n     ///\n     /// [`Ok(n)`]: Ok\n     /// [`File`]: crate::fs::File\n+    /// [`TcpStream`]: crate::net::TcpStream\n     ///\n     /// ```no_run\n     /// use std::io;"}]}