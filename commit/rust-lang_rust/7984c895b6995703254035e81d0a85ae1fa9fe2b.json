{"sha": "7984c895b6995703254035e81d0a85ae1fa9fe2b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc5ODRjODk1YjY5OTU3MDMyNTQwMzVlODFkMGE4NWFlMWZhOWZlMmI=", "commit": {"author": {"name": "kennytm", "email": "kennytm@gmail.com", "date": "2018-02-10T21:05:11Z"}, "committer": {"name": "kennytm", "email": "kennytm@gmail.com", "date": "2018-02-13T14:48:16Z"}, "message": "Improve debuggability of #48116.\n\n1. When the invalid condition is hit, write out the relevant variables too\n2. In compile-fail/parse-fail tests, check for ICE first, so the invalid\n   error patterns won't mask our ICE output.", "tree": {"sha": "5ecc1324cd524185940419cebf3c37beaffc2186", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5ecc1324cd524185940419cebf3c37beaffc2186"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7984c895b6995703254035e81d0a85ae1fa9fe2b", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEZ1R8CLMp8f2GxWoQ/vbIBR0OATwFAlqC+rAACgkQ/vbIBR0O\nATznMQ/+On7l3EmBpP++VjppD0cneJ6ctr2nOarsCEEzIXRr6jmCk7NFBX2t/eFB\nrtyhQnZozVvWRdif659Z1zJujF+5FoP0lpgqxASQif8KijXL9gkiB2GJS8PSXND9\nzGdpDm5yQDSDVPW75cb/h4TYXeNNZ116nY0f7a4lyIBxuSlQZqJ1Cj0RW1QV1PfS\nNJS0h2SDQab3+pQPoIQ8jFKJkPZFpxkdLXJC9+9IcWct+n9HE5Xq94HUu7re2/0M\n9usxzj5/JZR9KF9OIw5SEUjB70xZfFx4yLcaAL8mr2eKHO0kxySw3NaFM4okgGHg\nU+MlMEjkha+z0FDTQOt5a/3sYTQjhomGdQmNw3DU8wgpb0sEdZmq+ClH/tdPj4px\nbu5Wiv5Rb8XnkgyPhK477BQhEdBGZnUmrWaxNFdFcBGp2cK6eIrq0pW6lMBwGp/B\nnMmV0ahkBTd+Fg74nA7gItnbaxCj2rk/fF1AicdtJLd6LrS3us8ewLjy+23JOAi1\n3OUFWusjtRsrMDcMoITpj+VAFtpoeESdL4XooojtNb4fI/W9ucIiUNcKgljOZn0+\nlb3kBzi6eIrZr/1j45CuqgNlCPIhmMf2BAT6bNRRh5EugCmzMj3RHhz6u64A+qG8\npPTTthK0+72aBAy7Q04gcR/Z4ajiBoxvi2/wqqLNhyIYUINnE1Q=\n=ZgFy\n-----END PGP SIGNATURE-----", "payload": "tree 5ecc1324cd524185940419cebf3c37beaffc2186\nparent 4d2d3fc5dadf894a8ad709a5860a549f2c0b1032\nauthor kennytm <kennytm@gmail.com> 1518296711 +0800\ncommitter kennytm <kennytm@gmail.com> 1518533296 +0800\n\nImprove debuggability of #48116.\n\n1. When the invalid condition is hit, write out the relevant variables too\n2. In compile-fail/parse-fail tests, check for ICE first, so the invalid\n   error patterns won't mask our ICE output.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7984c895b6995703254035e81d0a85ae1fa9fe2b", "html_url": "https://github.com/rust-lang/rust/commit/7984c895b6995703254035e81d0a85ae1fa9fe2b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7984c895b6995703254035e81d0a85ae1fa9fe2b/comments", "author": {"login": "kennytm", "id": 103023, "node_id": "MDQ6VXNlcjEwMzAyMw==", "avatar_url": "https://avatars.githubusercontent.com/u/103023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kennytm", "html_url": "https://github.com/kennytm", "followers_url": "https://api.github.com/users/kennytm/followers", "following_url": "https://api.github.com/users/kennytm/following{/other_user}", "gists_url": "https://api.github.com/users/kennytm/gists{/gist_id}", "starred_url": "https://api.github.com/users/kennytm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kennytm/subscriptions", "organizations_url": "https://api.github.com/users/kennytm/orgs", "repos_url": "https://api.github.com/users/kennytm/repos", "events_url": "https://api.github.com/users/kennytm/events{/privacy}", "received_events_url": "https://api.github.com/users/kennytm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kennytm", "id": 103023, "node_id": "MDQ6VXNlcjEwMzAyMw==", "avatar_url": "https://avatars.githubusercontent.com/u/103023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kennytm", "html_url": "https://github.com/kennytm", "followers_url": "https://api.github.com/users/kennytm/followers", "following_url": "https://api.github.com/users/kennytm/following{/other_user}", "gists_url": "https://api.github.com/users/kennytm/gists{/gist_id}", "starred_url": "https://api.github.com/users/kennytm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kennytm/subscriptions", "organizations_url": "https://api.github.com/users/kennytm/orgs", "repos_url": "https://api.github.com/users/kennytm/repos", "events_url": "https://api.github.com/users/kennytm/events{/privacy}", "received_events_url": "https://api.github.com/users/kennytm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4d2d3fc5dadf894a8ad709a5860a549f2c0b1032", "url": "https://api.github.com/repos/rust-lang/rust/commits/4d2d3fc5dadf894a8ad709a5860a549f2c0b1032", "html_url": "https://github.com/rust-lang/rust/commit/4d2d3fc5dadf894a8ad709a5860a549f2c0b1032"}], "stats": {"total": 17, "additions": 14, "deletions": 3}, "files": [{"sha": "a8070c553bdbcb34dd8bde7bf8435abc2d21ba12", "filename": "src/librustc_resolve/resolve_imports.rs", "status": "modified", "additions": 13, "deletions": 2, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/7984c895b6995703254035e81d0a85ae1fa9fe2b/src%2Flibrustc_resolve%2Fresolve_imports.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7984c895b6995703254035e81d0a85ae1fa9fe2b/src%2Flibrustc_resolve%2Fresolve_imports.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Fresolve_imports.rs?ref=7984c895b6995703254035e81d0a85ae1fa9fe2b", "patch": "@@ -1026,6 +1026,8 @@ fn import_path_to_string(names: &[SpannedIdent],\n         if names.is_empty() {\n             import_directive_subclass_to_string(subclass)\n         } else {\n+            // FIXME: Remove this entire logic after #48116 is fixed.\n+            //\n             // Note that this code looks a little wonky, it's currently here to\n             // hopefully help debug #48116, but otherwise isn't intended to\n             // cause any problems.\n@@ -1034,8 +1036,17 @@ fn import_path_to_string(names: &[SpannedIdent],\n                 names_to_string(names),\n                 import_directive_subclass_to_string(subclass),\n             );\n-            assert!(!names.is_empty());\n-            assert!(!x.starts_with(\"::\"));\n+            if names.is_empty() || x.starts_with(\"::\") {\n+                span_bug!(\n+                    span,\n+                    \"invalid name `{}` at {:?}; global = {}, names = {:?}, subclass = {:?}\",\n+                    x,\n+                    span,\n+                    global,\n+                    names,\n+                    subclass\n+                );\n+            }\n             return x\n         }\n     }"}, {"sha": "bef085e17ea160eb8703745deb55a935e0475a9d", "filename": "src/tools/compiletest/src/runtest.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7984c895b6995703254035e81d0a85ae1fa9fe2b/src%2Ftools%2Fcompiletest%2Fsrc%2Fruntest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7984c895b6995703254035e81d0a85ae1fa9fe2b/src%2Ftools%2Fcompiletest%2Fsrc%2Fruntest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fcompiletest%2Fsrc%2Fruntest.rs?ref=7984c895b6995703254035e81d0a85ae1fa9fe2b", "patch": "@@ -250,6 +250,7 @@ impl<'test> TestCx<'test> {\n     fn run_cfail_test(&self) {\n         let proc_res = self.compile_test();\n         self.check_if_test_should_compile(&proc_res);\n+        self.check_no_compiler_crash(&proc_res);\n \n         let output_to_check = self.get_output(&proc_res);\n         let expected_errors = errors::load_errors(&self.testpaths.file, self.revision);\n@@ -262,7 +263,6 @@ impl<'test> TestCx<'test> {\n             self.check_error_patterns(&output_to_check, &proc_res);\n         }\n \n-        self.check_no_compiler_crash(&proc_res);\n         self.check_forbid_output(&output_to_check, &proc_res);\n     }\n "}]}