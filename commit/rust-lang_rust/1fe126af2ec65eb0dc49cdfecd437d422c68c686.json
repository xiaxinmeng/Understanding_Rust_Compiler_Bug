{"sha": "1fe126af2ec65eb0dc49cdfecd437d422c68c686", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFmZTEyNmFmMmVjNjVlYjBkYzQ5Y2RmZWNkNDM3ZDQyMmM2OGM2ODY=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2015-09-16T05:48:49Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2015-09-16T05:48:49Z"}, "message": "Auto merge of #28420 - christopherdumas:intergrate_error_burnstushi, r=steveklabnik\n\nThis was pointed out by @filsmick and @swatteau in #28412.", "tree": {"sha": "0148835bea6e25a34e68292a4b909a06ff4cf719", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0148835bea6e25a34e68292a4b909a06ff4cf719"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1fe126af2ec65eb0dc49cdfecd437d422c68c686", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1fe126af2ec65eb0dc49cdfecd437d422c68c686", "html_url": "https://github.com/rust-lang/rust/commit/1fe126af2ec65eb0dc49cdfecd437d422c68c686", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1fe126af2ec65eb0dc49cdfecd437d422c68c686/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0f1f5fc746919b15e619cfcfd4cd939ef47f58bd", "url": "https://api.github.com/repos/rust-lang/rust/commits/0f1f5fc746919b15e619cfcfd4cd939ef47f58bd", "html_url": "https://github.com/rust-lang/rust/commit/0f1f5fc746919b15e619cfcfd4cd939ef47f58bd"}, {"sha": "e66a1dcde9dbfe8139d1a6e292964144ceac6632", "url": "https://api.github.com/repos/rust-lang/rust/commits/e66a1dcde9dbfe8139d1a6e292964144ceac6632", "html_url": "https://github.com/rust-lang/rust/commit/e66a1dcde9dbfe8139d1a6e292964144ceac6632"}], "stats": {"total": 11, "additions": 5, "deletions": 6}, "files": [{"sha": "e335d59b1929db05e90b27ecb820abe66ea4ecec", "filename": "src/doc/trpl/error-handling.md", "status": "modified", "additions": 5, "deletions": 6, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/1fe126af2ec65eb0dc49cdfecd437d422c68c686/src%2Fdoc%2Ftrpl%2Ferror-handling.md", "raw_url": "https://github.com/rust-lang/rust/raw/1fe126af2ec65eb0dc49cdfecd437d422c68c686/src%2Fdoc%2Ftrpl%2Ferror-handling.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Ftrpl%2Ferror-handling.md?ref=1fe126af2ec65eb0dc49cdfecd437d422c68c686", "patch": "@@ -24,7 +24,7 @@ systems may want to jump around.\n * [The Basics](#the-basics)\n     * [Unwrapping explained](#unwrapping-explained)\n     * [The `Option` type](#the-option-type)\n-        * [Composing `Option<T>` values](#composing-optiont-values)\n+        * [Composing `Option<T>` values](#composing-option<t>-values)\n     * [The `Result` type](#the-result-type)\n         * [Parsing integers](#parsing-integers)\n         * [The `Result` type alias idiom](#the-result-type-alias-idiom)\n@@ -33,19 +33,19 @@ systems may want to jump around.\n     * [Composing `Option` and `Result`](#composing-option-and-result)\n     * [The limits of combinators](#the-limits-of-combinators)\n     * [Early returns](#early-returns)\n-    * [The `try!` macro](#the-try-macro)\n+    * [The `try!` macro](#the-try!-macro)\n     * [Defining your own error type](#defining-your-own-error-type)\n * [Standard library traits used for error handling](#standard-library-traits-used-for-error-handling)\n     * [The `Error` trait](#the-error-trait)\n     * [The `From` trait](#the-from-trait)\n-    * [The real `try!` macro](#the-real-try-macro)\n+    * [The real `try!` macro](#the-real-try!-macro)\n     * [Composing custom error types](#composing-custom-error-types)\n     * [Advice for library writers](#advice-for-library-writers)\n * [Case study: A program to read population data](#case-study-a-program-to-read-population-data)\n     * [Initial setup](#initial-setup)\n     * [Argument parsing](#argument-parsing)\n     * [Writing the logic](#writing-the-logic)\n-    * [Error handling with `Box<Error>`](#error-handling-with-boxerror)\n+    * [Error handling with `Box<Error>`](#error-handling-with-box<error>)\n     * [Reading from stdin](#reading-from-stdin)\n     * [Error handling with a custom type](#error-handling-with-a-custom-type)\n     * [Adding functionality](#adding-functionality)\n@@ -122,8 +122,7 @@ types. Both of these types have a method called `unwrap` defined on them.\n \n ## The `Option` type\n \n-The `Option` type is\n-[defined in the standard library][1]: \n+The `Option` type is [defined in the standard library][5]:\n \n ```rust\n enum Option<T> {"}]}