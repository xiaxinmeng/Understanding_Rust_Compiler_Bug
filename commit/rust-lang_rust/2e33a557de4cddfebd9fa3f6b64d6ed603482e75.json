{"sha": "2e33a557de4cddfebd9fa3f6b64d6ed603482e75", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJlMzNhNTU3ZGU0Y2RkZmViZDlmYTNmNmI2NGQ2ZWQ2MDM0ODJlNzU=", "commit": {"author": {"name": "Oliver Schneider", "email": "github35764891676564198441@oli-obk.de", "date": "2018-07-23T12:56:36Z"}, "committer": {"name": "Oliver Schneider", "email": "github35764891676564198441@oli-obk.de", "date": "2018-07-24T08:07:45Z"}, "message": "Allow declaring existential types inside blocks", "tree": {"sha": "a664a21af5008bdb5ac80da764fd08b6dd0149a8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a664a21af5008bdb5ac80da764fd08b6dd0149a8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2e33a557de4cddfebd9fa3f6b64d6ed603482e75", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2e33a557de4cddfebd9fa3f6b64d6ed603482e75", "html_url": "https://github.com/rust-lang/rust/commit/2e33a557de4cddfebd9fa3f6b64d6ed603482e75", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2e33a557de4cddfebd9fa3f6b64d6ed603482e75/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3900bf8ae3aafdd3ab13a0e6400d47bc5cb2e121", "url": "https://api.github.com/repos/rust-lang/rust/commits/3900bf8ae3aafdd3ab13a0e6400d47bc5cb2e121", "html_url": "https://github.com/rust-lang/rust/commit/3900bf8ae3aafdd3ab13a0e6400d47bc5cb2e121"}], "stats": {"total": 28, "additions": 28, "deletions": 0}, "files": [{"sha": "564eba0a553fa2e5823058884106a7297c40d90b", "filename": "src/libsyntax/parse/parser.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/2e33a557de4cddfebd9fa3f6b64d6ed603482e75/src%2Flibsyntax%2Fparse%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2e33a557de4cddfebd9fa3f6b64d6ed603482e75/src%2Flibsyntax%2Fparse%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fparser.rs?ref=2e33a557de4cddfebd9fa3f6b64d6ed603482e75", "patch": "@@ -4391,6 +4391,11 @@ impl<'a> Parser<'a> {\n         self.token.is_keyword(keywords::Extern) && self.look_ahead(1, |t| t != &token::ModSep)\n     }\n \n+    fn is_existential_type_decl(&self) -> bool {\n+        self.token.is_keyword(keywords::Existential) &&\n+        self.look_ahead(1, |t| t.is_keyword(keywords::Type))\n+    }\n+\n     fn is_auto_trait_item(&mut self) -> bool {\n         // auto trait\n         (self.token.is_keyword(keywords::Auto)\n@@ -4495,6 +4500,7 @@ impl<'a> Parser<'a> {\n                   !self.is_union_item() &&\n                   !self.is_crate_vis() &&\n                   !self.is_extern_non_path() &&\n+                  !self.is_existential_type_decl() &&\n                   !self.is_auto_trait_item() {\n             let pth = self.parse_path(PathStyle::Expr)?;\n "}, {"sha": "20f9e0d77c3127f50d0b36b7276523efa2b1cbd8", "filename": "src/test/ui/impl-trait/existential_type_in_fn_body.rs", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/2e33a557de4cddfebd9fa3f6b64d6ed603482e75/src%2Ftest%2Fui%2Fimpl-trait%2Fexistential_type_in_fn_body.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2e33a557de4cddfebd9fa3f6b64d6ed603482e75/src%2Ftest%2Fui%2Fimpl-trait%2Fexistential_type_in_fn_body.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimpl-trait%2Fexistential_type_in_fn_body.rs?ref=2e33a557de4cddfebd9fa3f6b64d6ed603482e75", "patch": "@@ -0,0 +1,22 @@\n+// Copyright 2018 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// compile-pass\n+\n+#![feature(existential_type)]\n+\n+use std::fmt::Debug;\n+\n+fn main() {\n+    existential type Existential: Debug;\n+\n+    fn f() -> Existential {}\n+    println!(\"{:?}\", f());\n+}"}]}