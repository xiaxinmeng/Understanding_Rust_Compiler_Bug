{"sha": "bb8721da69e4c54fc2e22c3352d74c406e817049", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJiODcyMWRhNjllNGM1NGZjMmUyMmMzMzUyZDc0YzQwNmU4MTcwNDk=", "commit": {"author": {"name": "Erick Tryzelaar", "email": "erick.tryzelaar@gmail.com", "date": "2014-02-14T16:09:51Z"}, "committer": {"name": "Erick Tryzelaar", "email": "erick.tryzelaar@gmail.com", "date": "2014-02-22T03:57:02Z"}, "message": "syntax: Allow syntax extensions to have attributes", "tree": {"sha": "3c9293668bc095df45dc62e1d02702592d1c6c4a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3c9293668bc095df45dc62e1d02702592d1c6c4a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bb8721da69e4c54fc2e22c3352d74c406e817049", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bb8721da69e4c54fc2e22c3352d74c406e817049", "html_url": "https://github.com/rust-lang/rust/commit/bb8721da69e4c54fc2e22c3352d74c406e817049", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bb8721da69e4c54fc2e22c3352d74c406e817049/comments", "author": {"login": "erickt", "id": 84711, "node_id": "MDQ6VXNlcjg0NzEx", "avatar_url": "https://avatars.githubusercontent.com/u/84711?v=4", "gravatar_id": "", "url": "https://api.github.com/users/erickt", "html_url": "https://github.com/erickt", "followers_url": "https://api.github.com/users/erickt/followers", "following_url": "https://api.github.com/users/erickt/following{/other_user}", "gists_url": "https://api.github.com/users/erickt/gists{/gist_id}", "starred_url": "https://api.github.com/users/erickt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/erickt/subscriptions", "organizations_url": "https://api.github.com/users/erickt/orgs", "repos_url": "https://api.github.com/users/erickt/repos", "events_url": "https://api.github.com/users/erickt/events{/privacy}", "received_events_url": "https://api.github.com/users/erickt/received_events", "type": "User", "site_admin": false}, "committer": {"login": "erickt", "id": 84711, "node_id": "MDQ6VXNlcjg0NzEx", "avatar_url": "https://avatars.githubusercontent.com/u/84711?v=4", "gravatar_id": "", "url": "https://api.github.com/users/erickt", "html_url": "https://github.com/erickt", "followers_url": "https://api.github.com/users/erickt/followers", "following_url": "https://api.github.com/users/erickt/following{/other_user}", "gists_url": "https://api.github.com/users/erickt/gists{/gist_id}", "starred_url": "https://api.github.com/users/erickt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/erickt/subscriptions", "organizations_url": "https://api.github.com/users/erickt/orgs", "repos_url": "https://api.github.com/users/erickt/repos", "events_url": "https://api.github.com/users/erickt/events{/privacy}", "received_events_url": "https://api.github.com/users/erickt/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "87f936f193286e54c38245a6853d8b2977f2aa5b", "url": "https://api.github.com/repos/rust-lang/rust/commits/87f936f193286e54c38245a6853d8b2977f2aa5b", "html_url": "https://github.com/rust-lang/rust/commit/87f936f193286e54c38245a6853d8b2977f2aa5b"}], "stats": {"total": 34, "additions": 26, "deletions": 8}, "files": [{"sha": "f52a2accd8d8266c9de63ccd7deae26f38e697e8", "filename": "src/libsyntax/ext/deriving/clone.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bb8721da69e4c54fc2e22c3352d74c406e817049/src%2Flibsyntax%2Fext%2Fderiving%2Fclone.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bb8721da69e4c54fc2e22c3352d74c406e817049/src%2Flibsyntax%2Fext%2Fderiving%2Fclone.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fderiving%2Fclone.rs?ref=bb8721da69e4c54fc2e22c3352d74c406e817049", "patch": "@@ -21,6 +21,7 @@ pub fn expand_deriving_clone(cx: &mut ExtCtxt,\n                              push: |@Item|) {\n     let trait_def = TraitDef {\n         span: span,\n+        attributes: ~[],\n         path: Path::new(~[\"std\", \"clone\", \"Clone\"]),\n         additional_bounds: ~[],\n         generics: LifetimeBounds::empty(),\n@@ -48,6 +49,7 @@ pub fn expand_deriving_deep_clone(cx: &mut ExtCtxt,\n                                   push: |@Item|) {\n     let trait_def = TraitDef {\n         span: span,\n+        attributes: ~[],\n         path: Path::new(~[\"std\", \"clone\", \"DeepClone\"]),\n         additional_bounds: ~[],\n         generics: LifetimeBounds::empty(),"}, {"sha": "b031f69084d33201c9bca5b6ac2228426fa408d1", "filename": "src/libsyntax/ext/deriving/cmp/eq.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/bb8721da69e4c54fc2e22c3352d74c406e817049/src%2Flibsyntax%2Fext%2Fderiving%2Fcmp%2Feq.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bb8721da69e4c54fc2e22c3352d74c406e817049/src%2Flibsyntax%2Fext%2Fderiving%2Fcmp%2Feq.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fderiving%2Fcmp%2Feq.rs?ref=bb8721da69e4c54fc2e22c3352d74c406e817049", "patch": "@@ -47,6 +47,7 @@ pub fn expand_deriving_eq(cx: &mut ExtCtxt,\n \n     let trait_def = TraitDef {\n         span: span,\n+        attributes: ~[],\n         path: Path::new(~[\"std\", \"cmp\", \"Eq\"]),\n         additional_bounds: ~[],\n         generics: LifetimeBounds::empty(),"}, {"sha": "10a416045cbda7cb0899c31faa9599f18030b55c", "filename": "src/libsyntax/ext/deriving/cmp/ord.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/bb8721da69e4c54fc2e22c3352d74c406e817049/src%2Flibsyntax%2Fext%2Fderiving%2Fcmp%2Ford.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bb8721da69e4c54fc2e22c3352d74c406e817049/src%2Flibsyntax%2Fext%2Fderiving%2Fcmp%2Ford.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fderiving%2Fcmp%2Ford.rs?ref=bb8721da69e4c54fc2e22c3352d74c406e817049", "patch": "@@ -37,6 +37,7 @@ pub fn expand_deriving_ord(cx: &mut ExtCtxt,\n \n     let trait_def = TraitDef {\n         span: span,\n+        attributes: ~[],\n         path: Path::new(~[\"std\", \"cmp\", \"Ord\"]),\n         additional_bounds: ~[],\n         generics: LifetimeBounds::empty(),"}, {"sha": "2bfab8646a6aa211e47a0953c3365ac164ae8fda", "filename": "src/libsyntax/ext/deriving/cmp/totaleq.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/bb8721da69e4c54fc2e22c3352d74c406e817049/src%2Flibsyntax%2Fext%2Fderiving%2Fcmp%2Ftotaleq.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bb8721da69e4c54fc2e22c3352d74c406e817049/src%2Flibsyntax%2Fext%2Fderiving%2Fcmp%2Ftotaleq.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fderiving%2Fcmp%2Ftotaleq.rs?ref=bb8721da69e4c54fc2e22c3352d74c406e817049", "patch": "@@ -26,6 +26,7 @@ pub fn expand_deriving_totaleq(cx: &mut ExtCtxt,\n \n     let trait_def = TraitDef {\n         span: span,\n+        attributes: ~[],\n         path: Path::new(~[\"std\", \"cmp\", \"TotalEq\"]),\n         additional_bounds: ~[],\n         generics: LifetimeBounds::empty(),"}, {"sha": "2e6c4a5422892c348d2abd38faf3f901ca06765a", "filename": "src/libsyntax/ext/deriving/cmp/totalord.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/bb8721da69e4c54fc2e22c3352d74c406e817049/src%2Flibsyntax%2Fext%2Fderiving%2Fcmp%2Ftotalord.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bb8721da69e4c54fc2e22c3352d74c406e817049/src%2Flibsyntax%2Fext%2Fderiving%2Fcmp%2Ftotalord.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fderiving%2Fcmp%2Ftotalord.rs?ref=bb8721da69e4c54fc2e22c3352d74c406e817049", "patch": "@@ -23,6 +23,7 @@ pub fn expand_deriving_totalord(cx: &mut ExtCtxt,\n                                 push: |@Item|) {\n     let trait_def = TraitDef {\n         span: span,\n+        attributes: ~[],\n         path: Path::new(~[\"std\", \"cmp\", \"TotalOrd\"]),\n         additional_bounds: ~[],\n         generics: LifetimeBounds::empty(),"}, {"sha": "623e8ef766c698159f8ea01dd514eda22a04e1eb", "filename": "src/libsyntax/ext/deriving/decodable.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/bb8721da69e4c54fc2e22c3352d74c406e817049/src%2Flibsyntax%2Fext%2Fderiving%2Fdecodable.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bb8721da69e4c54fc2e22c3352d74c406e817049/src%2Flibsyntax%2Fext%2Fderiving%2Fdecodable.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fderiving%2Fdecodable.rs?ref=bb8721da69e4c54fc2e22c3352d74c406e817049", "patch": "@@ -28,6 +28,7 @@ pub fn expand_deriving_decodable(cx: &mut ExtCtxt,\n                                  push: |@Item|) {\n     let trait_def = TraitDef {\n         span: span,\n+        attributes: ~[],\n         path: Path::new_(~[\"serialize\", \"Decodable\"], None,\n                          ~[~Literal(Path::new_local(\"__D\"))], true),\n         additional_bounds: ~[],"}, {"sha": "c5ef86273b65a38bb0f78d313fc9d61075fd7a97", "filename": "src/libsyntax/ext/deriving/default.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/bb8721da69e4c54fc2e22c3352d74c406e817049/src%2Flibsyntax%2Fext%2Fderiving%2Fdefault.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bb8721da69e4c54fc2e22c3352d74c406e817049/src%2Flibsyntax%2Fext%2Fderiving%2Fdefault.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fderiving%2Fdefault.rs?ref=bb8721da69e4c54fc2e22c3352d74c406e817049", "patch": "@@ -21,6 +21,7 @@ pub fn expand_deriving_default(cx: &mut ExtCtxt,\n                             push: |@Item|) {\n     let trait_def = TraitDef {\n         span: span,\n+        attributes: ~[],\n         path: Path::new(~[\"std\", \"default\", \"Default\"]),\n         additional_bounds: ~[],\n         generics: LifetimeBounds::empty(),"}, {"sha": "2bc661ff27a4513b7d5b7c25591b02191d3c35aa", "filename": "src/libsyntax/ext/deriving/encodable.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/bb8721da69e4c54fc2e22c3352d74c406e817049/src%2Flibsyntax%2Fext%2Fderiving%2Fencodable.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bb8721da69e4c54fc2e22c3352d74c406e817049/src%2Flibsyntax%2Fext%2Fderiving%2Fencodable.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fderiving%2Fencodable.rs?ref=bb8721da69e4c54fc2e22c3352d74c406e817049", "patch": "@@ -95,6 +95,7 @@ pub fn expand_deriving_encodable(cx: &mut ExtCtxt,\n                                  push: |@Item|) {\n     let trait_def = TraitDef {\n         span: span,\n+        attributes: ~[],\n         path: Path::new_(~[\"serialize\", \"Encodable\"], None,\n                          ~[~Literal(Path::new_local(\"__E\"))], true),\n         additional_bounds: ~[],"}, {"sha": "a3bef1b5eddcb0a274cbe3b30b3ae06552701ea9", "filename": "src/libsyntax/ext/deriving/generic.rs", "status": "modified", "additions": 11, "deletions": 8, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/bb8721da69e4c54fc2e22c3352d74c406e817049/src%2Flibsyntax%2Fext%2Fderiving%2Fgeneric.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bb8721da69e4c54fc2e22c3352d74c406e817049/src%2Flibsyntax%2Fext%2Fderiving%2Fgeneric.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fderiving%2Fgeneric.rs?ref=bb8721da69e4c54fc2e22c3352d74c406e817049", "patch": "@@ -196,6 +196,8 @@ pub struct TraitDef<'a> {\n     /// The span for the current #[deriving(Foo)] header.\n     span: Span,\n \n+    attributes: ~[ast::Attribute],\n+\n     /// Path of the trait, including any type parameters\n     path: Path<'a>,\n \n@@ -355,7 +357,8 @@ impl<'a> TraitDef<'a> {\n      */\n     fn create_derived_impl(&self,\n                            cx: &mut ExtCtxt,\n-                           type_ident: Ident, generics: &Generics,\n+                           type_ident: Ident,\n+                           generics: &Generics,\n                            methods: ~[@ast::Method]) -> @ast::Item {\n         let trait_path = self.path.to_path(cx, self.span, type_ident, generics);\n \n@@ -408,16 +411,16 @@ impl<'a> TraitDef<'a> {\n         cx.item(\n             self.span,\n             ident,\n-            ~[doc_attr],\n+            vec::append(~[doc_attr], self.attributes),\n             ast::ItemImpl(trait_generics, opt_trait_ref,\n                           self_type, methods.map(|x| *x)))\n     }\n \n-    fn expand_struct_def(&self,\n-                         cx: &mut ExtCtxt,\n-                         struct_def: &StructDef,\n-                         type_ident: Ident,\n-                         generics: &Generics) -> @ast::Item {\n+    pub fn expand_struct_def(&self,\n+                             cx: &mut ExtCtxt,\n+                             struct_def: &StructDef,\n+                             type_ident: Ident,\n+                             generics: &Generics) -> @ast::Item {\n         let methods = self.methods.map(|method_def| {\n             let (explicit_self, self_args, nonself_args, tys) =\n                 method_def.split_self_nonself_args(\n@@ -447,7 +450,7 @@ impl<'a> TraitDef<'a> {\n         self.create_derived_impl(cx, type_ident, generics, methods)\n     }\n \n-    fn expand_enum_def(&self,\n+    pub fn expand_enum_def(&self,\n                        cx: &mut ExtCtxt,\n                        enum_def: &EnumDef,\n                        type_ident: Ident,"}, {"sha": "b39e22bc1adc65f88e1113b67c126e01d372d157", "filename": "src/libsyntax/ext/deriving/iter_bytes.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/bb8721da69e4c54fc2e22c3352d74c406e817049/src%2Flibsyntax%2Fext%2Fderiving%2Fiter_bytes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bb8721da69e4c54fc2e22c3352d74c406e817049/src%2Flibsyntax%2Fext%2Fderiving%2Fiter_bytes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fderiving%2Fiter_bytes.rs?ref=bb8721da69e4c54fc2e22c3352d74c406e817049", "patch": "@@ -22,6 +22,7 @@ pub fn expand_deriving_iter_bytes(cx: &mut ExtCtxt,\n                                   push: |@Item|) {\n     let trait_def = TraitDef {\n         span: span,\n+        attributes: ~[],\n         path: Path::new(~[\"std\", \"to_bytes\", \"IterBytes\"]),\n         additional_bounds: ~[],\n         generics: LifetimeBounds::empty(),"}, {"sha": "03192cc1cd2f20952052d1d8ced53aca925e8db2", "filename": "src/libsyntax/ext/deriving/primitive.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/bb8721da69e4c54fc2e22c3352d74c406e817049/src%2Flibsyntax%2Fext%2Fderiving%2Fprimitive.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bb8721da69e4c54fc2e22c3352d74c406e817049/src%2Flibsyntax%2Fext%2Fderiving%2Fprimitive.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fderiving%2Fprimitive.rs?ref=bb8721da69e4c54fc2e22c3352d74c406e817049", "patch": "@@ -23,6 +23,7 @@ pub fn expand_deriving_from_primitive(cx: &mut ExtCtxt,\n                                       push: |@Item|) {\n     let trait_def = TraitDef {\n         span: span,\n+        attributes: ~[],\n         path: Path::new(~[\"std\", \"num\", \"FromPrimitive\"]),\n         additional_bounds: ~[],\n         generics: LifetimeBounds::empty(),"}, {"sha": "6efe48015928058938f1618ca41dda4e913c6e5b", "filename": "src/libsyntax/ext/deriving/rand.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/bb8721da69e4c54fc2e22c3352d74c406e817049/src%2Flibsyntax%2Fext%2Fderiving%2Frand.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bb8721da69e4c54fc2e22c3352d74c406e817049/src%2Flibsyntax%2Fext%2Fderiving%2Frand.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fderiving%2Frand.rs?ref=bb8721da69e4c54fc2e22c3352d74c406e817049", "patch": "@@ -23,6 +23,7 @@ pub fn expand_deriving_rand(cx: &mut ExtCtxt,\n                             push: |@Item|) {\n     let trait_def = TraitDef {\n         span: span,\n+        attributes: ~[],\n         path: Path::new(~[\"std\", \"rand\", \"Rand\"]),\n         additional_bounds: ~[],\n         generics: LifetimeBounds::empty(),"}, {"sha": "56493000a92a37281afec146b17a5fd833649c11", "filename": "src/libsyntax/ext/deriving/show.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/bb8721da69e4c54fc2e22c3352d74c406e817049/src%2Flibsyntax%2Fext%2Fderiving%2Fshow.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bb8721da69e4c54fc2e22c3352d74c406e817049/src%2Flibsyntax%2Fext%2Fderiving%2Fshow.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fderiving%2Fshow.rs?ref=bb8721da69e4c54fc2e22c3352d74c406e817049", "patch": "@@ -31,6 +31,7 @@ pub fn expand_deriving_show(cx: &mut ExtCtxt,\n \n     let trait_def = TraitDef {\n         span: span,\n+        attributes: ~[],\n         path: Path::new(~[\"std\", \"fmt\", \"Show\"]),\n         additional_bounds: ~[],\n         generics: LifetimeBounds::empty(),"}, {"sha": "5cb81d9e762ae7074db533a274f5edb7c100e666", "filename": "src/libsyntax/ext/deriving/to_str.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/bb8721da69e4c54fc2e22c3352d74c406e817049/src%2Flibsyntax%2Fext%2Fderiving%2Fto_str.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bb8721da69e4c54fc2e22c3352d74c406e817049/src%2Flibsyntax%2Fext%2Fderiving%2Fto_str.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fderiving%2Fto_str.rs?ref=bb8721da69e4c54fc2e22c3352d74c406e817049", "patch": "@@ -24,6 +24,7 @@ pub fn expand_deriving_to_str(cx: &mut ExtCtxt,\n                               push: |@Item|) {\n     let trait_def = TraitDef {\n         span: span,\n+        attributes: ~[],\n         path: Path::new(~[\"std\", \"to_str\", \"ToStr\"]),\n         additional_bounds: ~[],\n         generics: LifetimeBounds::empty(),"}, {"sha": "90f4fa0eb5897672ba83c557fd0d9241dfd4007e", "filename": "src/libsyntax/ext/deriving/zero.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/bb8721da69e4c54fc2e22c3352d74c406e817049/src%2Flibsyntax%2Fext%2Fderiving%2Fzero.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bb8721da69e4c54fc2e22c3352d74c406e817049/src%2Flibsyntax%2Fext%2Fderiving%2Fzero.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fderiving%2Fzero.rs?ref=bb8721da69e4c54fc2e22c3352d74c406e817049", "patch": "@@ -21,6 +21,7 @@ pub fn expand_deriving_zero(cx: &mut ExtCtxt,\n                             push: |@Item|) {\n     let trait_def = TraitDef {\n         span: span,\n+        attributes: ~[],\n         path: Path::new(~[\"std\", \"num\", \"Zero\"]),\n         additional_bounds: ~[],\n         generics: LifetimeBounds::empty(),"}]}