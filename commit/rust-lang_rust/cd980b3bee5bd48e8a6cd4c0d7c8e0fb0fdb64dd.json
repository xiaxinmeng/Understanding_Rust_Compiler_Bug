{"sha": "cd980b3bee5bd48e8a6cd4c0d7c8e0fb0fdb64dd", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNkOTgwYjNiZWU1YmQ0OGU4YTZjZDRjMGQ3YzhlMGZiMGZkYjY0ZGQ=", "commit": {"author": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2015-04-21T22:42:05Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2015-04-27T17:11:15Z"}, "message": "mk: Add support for musl-based builds\n\nThis commit adds support to the makefiles, configuration script, and build\nsystem to understand MUSL. This is broken up into a few parts:\n\n* Any target of the form `*-musl` requires the `--musl-root` option to\n  `./configure` which will indicate the root of the MUSL installation. It is\n  also expected that there is a libunwind build inside of that installation\n  built against that MUSL.\n\n* Objects from MUSL are copied into the build tree for Rust to be statically\n  linked into the appropriate Rust library.\n\n* Objects for binary startup and shutdown are included in each Rust installation\n  by default for MUSL. This requires MUSL to only be installed on the machine\n  compiling rust. Only a linker will be necessary for compiling against MUSL on\n  a target machine.\n\nEventually a MUSL and/or libunwind build may be integrated by default into the\nbuild but for now they are just always assumed to exist externally.", "tree": {"sha": "b545a394c5ff594eb0ec06d2321440dfe672ceb1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b545a394c5ff594eb0ec06d2321440dfe672ceb1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cd980b3bee5bd48e8a6cd4c0d7c8e0fb0fdb64dd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cd980b3bee5bd48e8a6cd4c0d7c8e0fb0fdb64dd", "html_url": "https://github.com/rust-lang/rust/commit/cd980b3bee5bd48e8a6cd4c0d7c8e0fb0fdb64dd", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cd980b3bee5bd48e8a6cd4c0d7c8e0fb0fdb64dd/comments", "author": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ba2380d7b328ae59261d134970593c2a2668c690", "url": "https://api.github.com/repos/rust-lang/rust/commits/ba2380d7b328ae59261d134970593c2a2668c690", "html_url": "https://github.com/rust-lang/rust/commit/ba2380d7b328ae59261d134970593c2a2668c690"}], "stats": {"total": 82, "additions": 68, "deletions": 14}, "files": [{"sha": "71d608fbdaa7a6be77de42b186668775db0913e9", "filename": "configure", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/cd980b3bee5bd48e8a6cd4c0d7c8e0fb0fdb64dd/configure", "raw_url": "https://github.com/rust-lang/rust/raw/cd980b3bee5bd48e8a6cd4c0d7c8e0fb0fdb64dd/configure", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/configure?ref=cd980b3bee5bd48e8a6cd4c0d7c8e0fb0fdb64dd", "patch": "@@ -583,6 +583,7 @@ valopt jemalloc-root \"\" \"set directory where libjemalloc_pic.a is located\"\n valopt build \"${DEFAULT_BUILD}\" \"GNUs ./configure syntax LLVM build triple\"\n valopt android-cross-path \"/opt/ndk_standalone\" \"Android NDK standalone path\"\n valopt release-channel \"dev\" \"the name of the release channel to build\"\n+valopt musl-root \"/usr/local\" \"MUSL root installation directory\"\n \n # Many of these are saved below during the \"writing configuration\" step\n # (others are conditionally saved).\n@@ -1058,6 +1059,13 @@ do\n             fi\n             ;;\n \n+\n+        *-musl)\n+            if [ ! -f $CFG_MUSL_ROOT/lib/libc.a ]\n+            then\n+                err \"musl libc $CFG_MUSL_ROOT/lib/libc.a not found\"\n+            fi\n+            ;;\n         *)\n             ;;\n     esac"}, {"sha": "b3dea6f97cbc11a05ea751c9fb809e66c792c6ff", "filename": "mk/cfg/x86_64-unknown-linux-musl.mk", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/cd980b3bee5bd48e8a6cd4c0d7c8e0fb0fdb64dd/mk%2Fcfg%2Fx86_64-unknown-linux-musl.mk", "raw_url": "https://github.com/rust-lang/rust/raw/cd980b3bee5bd48e8a6cd4c0d7c8e0fb0fdb64dd/mk%2Fcfg%2Fx86_64-unknown-linux-musl.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mk%2Fcfg%2Fx86_64-unknown-linux-musl.mk?ref=cd980b3bee5bd48e8a6cd4c0d7c8e0fb0fdb64dd", "patch": "@@ -0,0 +1,27 @@\n+# x86_64-unknown-linux-musl configuration\n+CC_x86_64-unknown-linux-musl=$(CFG_MUSL_ROOT)/bin/musl-gcc\n+CXX_x86_64-unknown-linux-musl=notaprogram\n+CPP_x86_64-unknown-linux-musl=$(CFG_MUSL_ROOT)/bin/musl-gcc -E\n+AR_x86_64-unknown-linux-musl=$(AR)\n+CFG_LIB_NAME_x86_64-unknown-linux-musl=lib$(1).so\n+CFG_STATIC_LIB_NAME_x86_64-unknown-linux-musl=lib$(1).a\n+CFG_LIB_GLOB_x86_64-unknown-linux-musl=lib$(1)-*.so\n+CFG_JEMALLOC_CFLAGS_x86_64-unknown-linux-musl := -m64\n+CFG_GCCISH_CFLAGS_x86_64-unknown-linux-musl := -Wall -Werror -g -fPIC -m64\n+CFG_GCCISH_CXXFLAGS_x86_64-unknown-linux-musl :=\n+CFG_GCCISH_LINK_FLAGS_x86_64-unknown-linux-musl :=\n+CFG_GCCISH_DEF_FLAG_x86_64-unknown-linux-musl :=\n+CFG_LLC_FLAGS_x86_64-unknown-linux-musl :=\n+CFG_INSTALL_NAME_x86_64-unknown-linux-musl =\n+CFG_EXE_SUFFIX_x86_64-unknown-linux-musl =\n+CFG_WINDOWSY_x86_64-unknown-linux-musl :=\n+CFG_UNIXY_x86_64-unknown-linux-musl := 1\n+CFG_LDPATH_x86_64-unknown-linux-musl :=\n+CFG_RUN_x86_64-unknown-linux-musl=$(2)\n+CFG_RUN_TARG_x86_64-unknown-linux-musl=$(call CFG_RUN_x86_64-unknown-linux-musl,,$(2))\n+CFG_GNU_TRIPLE_x86_64-unknown-linux-musl := x86_64-unknown-linux-musl\n+\n+NATIVE_DEPS_libc_T_x86_64-unknown-linux-musl += libc.a\n+NATIVE_DEPS_std_T_x86_64-unknown-linux-musl += libunwind.a \\\n+\tcrt1.o crti.o crtn.o\n+INSTALLED_OBJECTS_x86_64-unknown-linux-musl += crt1.o crti.o crtn.o"}, {"sha": "367c25a8a6d495f5281ae94980101e70b699f0b2", "filename": "mk/crates.mk", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/cd980b3bee5bd48e8a6cd4c0d7c8e0fb0fdb64dd/mk%2Fcrates.mk", "raw_url": "https://github.com/rust-lang/rust/raw/cd980b3bee5bd48e8a6cd4c0d7c8e0fb0fdb64dd/mk%2Fcrates.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mk%2Fcrates.mk?ref=cd980b3bee5bd48e8a6cd4c0d7c8e0fb0fdb64dd", "patch": "@@ -123,6 +123,9 @@ ONLY_RLIB_rustc_bitflags := 1\n # Documented-by-default crates\n DOC_CRATES := std alloc collections core libc rustc_unicode\n \n+# Installed objects/libraries by default\n+INSTALLED_OBJECTS := libmorestack.a libcompiler-rt.a\n+\n ################################################################################\n # You should not need to edit below this line\n ################################################################################"}, {"sha": "9ac96aa90f6b9b9a1035b40994bbbfeb6f7784cd", "filename": "mk/main.mk", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/cd980b3bee5bd48e8a6cd4c0d7c8e0fb0fdb64dd/mk%2Fmain.mk", "raw_url": "https://github.com/rust-lang/rust/raw/cd980b3bee5bd48e8a6cd4c0d7c8e0fb0fdb64dd/mk%2Fmain.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mk%2Fmain.mk?ref=cd980b3bee5bd48e8a6cd4c0d7c8e0fb0fdb64dd", "patch": "@@ -399,8 +399,10 @@ endif\n # Prerequisites for using the stageN compiler to build target artifacts\n TSREQ$(1)_T_$(2)_H_$(3) = \\\n \t$$(HSREQ$(1)_H_$(3)) \\\n-\t$$(TLIB$(1)_T_$(2)_H_$(3))/libmorestack.a \\\n-\t$$(TLIB$(1)_T_$(2)_H_$(3))/libcompiler-rt.a\n+\t$$(foreach obj,$$(INSTALLED_OBJECTS),\\\n+\t\t$$(TLIB$(1)_T_$(2)_H_$(3))/$$(obj)) \\\n+\t$$(foreach obj,$$(INSTALLED_OBJECTS_$(2)),\\\n+\t\t$$(TLIB$(1)_T_$(2)_H_$(3))/$$(obj))\n \n # Prerequisites for a working stageN compiler and libraries, for a specific\n # target"}, {"sha": "1382d160e13999063b3ac7674ab95c0de600854b", "filename": "mk/prepare.mk", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/cd980b3bee5bd48e8a6cd4c0d7c8e0fb0fdb64dd/mk%2Fprepare.mk", "raw_url": "https://github.com/rust-lang/rust/raw/cd980b3bee5bd48e8a6cd4c0d7c8e0fb0fdb64dd/mk%2Fprepare.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mk%2Fprepare.mk?ref=cd980b3bee5bd48e8a6cd4c0d7c8e0fb0fdb64dd", "patch": "@@ -140,8 +140,8 @@ prepare-target-$(2)-host-$(3)-$(1)-$(4): prepare-maybe-clean-$(4) \\\n           $$(if $$(findstring $(2),$$(CFG_HOST)), \\\n             $$(foreach crate,$$(HOST_CRATES), \\\n               $$(call PREPARE_LIB,$$(call CFG_LIB_GLOB_$(2),$$(crate)))),) \\\n-          $$(call PREPARE_LIB,libmorestack.a) \\\n-          $$(call PREPARE_LIB,libcompiler-rt.a),),),)\n+\t  $$(foreach object,$$(INSTALLED_OBJECTS) $$(INSTALLED_OBJECTS_$(2)),\\\n+\t    $$(call PREPARE_LIB,$$(object))),),),)\n endef\n \n define INSTALL_GDB_DEBUGGER_SCRIPTS_COMMANDS"}, {"sha": "6ca1445644122b50878481c90e684fd7da21560d", "filename": "mk/rt.mk", "status": "modified", "additions": 20, "deletions": 1, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/cd980b3bee5bd48e8a6cd4c0d7c8e0fb0fdb64dd/mk%2Frt.mk", "raw_url": "https://github.com/rust-lang/rust/raw/cd980b3bee5bd48e8a6cd4c0d7c8e0fb0fdb64dd/mk%2Frt.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mk%2Frt.mk?ref=cd980b3bee5bd48e8a6cd4c0d7c8e0fb0fdb64dd", "patch": "@@ -74,7 +74,8 @@ $$(RT_OUTPUT_DIR_$(1))/%.o: $(S)src/rt/%.ll $$(MKFILE_DEPS) \\\n \t@mkdir -p $$(@D)\n \t@$$(call E, compile: $$@)\n \t$$(Q)$$(LLC_$$(CFG_BUILD)) $$(CFG_LLC_FLAGS_$(1)) \\\n-\t    -filetype=obj -mtriple=$$(CFG_LLVM_TARGET_$(1)) -relocation-model=pic -o $$@ $$<\n+\t    -filetype=obj -mtriple=$$(CFG_LLVM_TARGET_$(1)) \\\n+\t    -relocation-model=pic -o $$@ $$<\n \n $$(RT_OUTPUT_DIR_$(1))/%.o: $(S)src/rt/%.c $$(MKFILE_DEPS)\n \t@mkdir -p $$(@D)\n@@ -110,6 +111,11 @@ $$(RT_OUTPUT_DIR_$(1))/$$(NATIVE_$(2)_$(1)): $$(OBJS_$(2)_$(1))\n \t@$$(call E, link: $$@)\n \t$$(Q)$$(AR_$(1)) rcs $$@ $$^\n \n+ifeq ($$(findstring windows,$(1)),windows)\n+$$(RT_OUTPUT_DIR_$(1))/lib$(2).a: $$(RT_OUTPUT_DIR_$(1))/$$(NATIVE_$(2)_$(1))\n+\t$$(Q)cp $$< $$^\n+endif\n+\n endef\n \n $(foreach target,$(CFG_TARGET), \\\n@@ -312,6 +318,19 @@ endif # endif for windowsy\n endif # endif for ios\n endif # endif for darwin\n \n+################################################################################\n+# libc/libunwind for musl\n+#\n+# When we're building a musl-like target we're going to link libc/libunwind\n+# statically into the standard library and liblibc, so we need to make sure\n+# they're in a location that we can find\n+################################################################################\n+\n+ifeq ($$(findstring musl,$(1)),musl)\n+$$(RT_OUTPUT_DIR_$(1))/%: $$(CFG_MUSL_ROOT)/lib/%\n+\tcp $$^ $$@\n+endif\n+\n endef\n \n # Instantiate template for all stages/targets"}, {"sha": "319f44fd35b77c1058c4627b77640cf913ffc09f", "filename": "mk/target.mk", "status": "modified", "additions": 4, "deletions": 9, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/cd980b3bee5bd48e8a6cd4c0d7c8e0fb0fdb64dd/mk%2Ftarget.mk", "raw_url": "https://github.com/rust-lang/rust/raw/cd980b3bee5bd48e8a6cd4c0d7c8e0fb0fdb64dd/mk%2Ftarget.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mk%2Ftarget.mk?ref=cd980b3bee5bd48e8a6cd4c0d7c8e0fb0fdb64dd", "patch": "@@ -35,7 +35,9 @@ CRATE_FULLDEPS_$(1)_T_$(2)_H_$(3)_$(4) := \\\n \t\t$$(foreach dep,$$(RUST_DEPS_$(4)), \\\n \t\t  $$(TLIB$(1)_T_$(2)_H_$(3))/stamp.$$(dep)) \\\n \t\t$$(foreach dep,$$(NATIVE_DEPS_$(4)), \\\n-\t\t  $$(RT_OUTPUT_DIR_$(2))/$$(call CFG_STATIC_LIB_NAME_$(2),$$(dep)))\n+\t\t  $$(RT_OUTPUT_DIR_$(2))/$$(call CFG_STATIC_LIB_NAME_$(2),$$(dep))) \\\n+\t\t$$(foreach dep,$$(NATIVE_DEPS_$(4)_T_$(2)), \\\n+\t\t  $$(RT_OUTPUT_DIR_$(2))/$$(dep))\n endef\n \n $(foreach host,$(CFG_HOST), \\\n@@ -143,14 +145,7 @@ $$(TBIN$(1)_T_$(2)_H_$(3))/:\n $$(TLIB$(1)_T_$(2)_H_$(3))/:\n \tmkdir -p $$@\n \n-$$(TLIB$(1)_T_$(2)_H_$(3))/libcompiler-rt.a: \\\n-\t    $$(RT_OUTPUT_DIR_$(2))/$$(call CFG_STATIC_LIB_NAME_$(2),compiler-rt) \\\n-\t    | $$(TLIB$(1)_T_$(2)_H_$(3))/ $$(SNAPSHOT_RUSTC_POST_CLEANUP)\n-\t@$$(call E, cp: $$@)\n-\t$$(Q)cp $$< $$@\n-\n-$$(TLIB$(1)_T_$(2)_H_$(3))/libmorestack.a: \\\n-\t    $$(RT_OUTPUT_DIR_$(2))/$$(call CFG_STATIC_LIB_NAME_$(2),morestack) \\\n+$$(TLIB$(1)_T_$(2)_H_$(3))/%: $$(RT_OUTPUT_DIR_$(2))/% \\\n \t    | $$(TLIB$(1)_T_$(2)_H_$(3))/ $$(SNAPSHOT_RUSTC_POST_CLEANUP)\n \t@$$(call E, cp: $$@)\n \t$$(Q)cp $$< $$@"}]}