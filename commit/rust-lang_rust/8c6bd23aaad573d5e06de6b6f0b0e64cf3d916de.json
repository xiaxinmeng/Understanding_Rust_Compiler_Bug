{"sha": "8c6bd23aaad573d5e06de6b6f0b0e64cf3d916de", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhjNmJkMjNhYWFkNTczZDVlMDZkZTZiNmYwYjBlNjRjZjNkOTE2ZGU=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2016-06-10T17:37:35Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2016-06-10T17:37:35Z"}, "message": "Auto merge of #34199 - jseyfried:visit_all_attrs, r=nrc\n\nVisit statement and expression attributes in the AST visitor\n\nCurrently, these attributes are not visited, so they are not gated feature checked in the post expansion visitor. This only affects crates using `#![feature(stmt_expr_attributes)]`.\nr? @nrc", "tree": {"sha": "84b652e7433155bbf35510b0004b3c54560ad399", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/84b652e7433155bbf35510b0004b3c54560ad399"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8c6bd23aaad573d5e06de6b6f0b0e64cf3d916de", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8c6bd23aaad573d5e06de6b6f0b0e64cf3d916de", "html_url": "https://github.com/rust-lang/rust/commit/8c6bd23aaad573d5e06de6b6f0b0e64cf3d916de", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8c6bd23aaad573d5e06de6b6f0b0e64cf3d916de/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a267d6cee40c2f2fa3db999afbb2bd1384f7840a", "url": "https://api.github.com/repos/rust-lang/rust/commits/a267d6cee40c2f2fa3db999afbb2bd1384f7840a", "html_url": "https://github.com/rust-lang/rust/commit/a267d6cee40c2f2fa3db999afbb2bd1384f7840a"}, {"sha": "8475a4b0c6adce70940617ea5bbb5b691d50d975", "url": "https://api.github.com/repos/rust-lang/rust/commits/8475a4b0c6adce70940617ea5bbb5b691d50d975", "html_url": "https://github.com/rust-lang/rust/commit/8475a4b0c6adce70940617ea5bbb5b691d50d975"}], "stats": {"total": 13, "additions": 12, "deletions": 1}, "files": [{"sha": "07a6317706b84d96b912c9f4fb8eaa4b558f1bb3", "filename": "src/libsyntax/visit.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/8c6bd23aaad573d5e06de6b6f0b0e64cf3d916de/src%2Flibsyntax%2Fvisit.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8c6bd23aaad573d5e06de6b6f0b0e64cf3d916de/src%2Flibsyntax%2Fvisit.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fvisit.rs?ref=8c6bd23aaad573d5e06de6b6f0b0e64cf3d916de", "patch": "@@ -185,6 +185,9 @@ pub fn walk_mod<'v, V: Visitor<'v>>(visitor: &mut V, module: &'v Mod) {\n }\n \n pub fn walk_local<'v, V: Visitor<'v>>(visitor: &mut V, local: &'v Local) {\n+    for attr in local.attrs.as_attr_slice() {\n+        visitor.visit_attribute(attr);\n+    }\n     visitor.visit_pat(&local.pat);\n     walk_list!(visitor, visit_ty, &local.ty);\n     walk_list!(visitor, visit_expr, &local.init);\n@@ -635,6 +638,9 @@ pub fn walk_mac<'v, V: Visitor<'v>>(_: &mut V, _: &'v Mac) {\n }\n \n pub fn walk_expr<'v, V: Visitor<'v>>(visitor: &mut V, expression: &'v Expr) {\n+    for attr in expression.attrs.as_attr_slice() {\n+        visitor.visit_attribute(attr);\n+    }\n     match expression.node {\n         ExprKind::Box(ref subexpression) => {\n             visitor.visit_expr(subexpression)"}, {"sha": "eff734230ee238e011a72bb35f579c9fb3ded34a", "filename": "src/test/compile-fail/custom_attribute.rs", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/8c6bd23aaad573d5e06de6b6f0b0e64cf3d916de/src%2Ftest%2Fcompile-fail%2Fcustom_attribute.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8c6bd23aaad573d5e06de6b6f0b0e64cf3d916de/src%2Ftest%2Fcompile-fail%2Fcustom_attribute.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fcustom_attribute.rs?ref=8c6bd23aaad573d5e06de6b6f0b0e64cf3d916de", "patch": "@@ -8,7 +8,12 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#![feature(stmt_expr_attributes)]\n+\n #[foo] //~ ERROR The attribute `foo`\n fn main() {\n-\n+    #[foo] //~ ERROR The attribute `foo`\n+    let x = ();\n+    #[foo] //~ ERROR The attribute `foo`\n+    x\n }"}]}