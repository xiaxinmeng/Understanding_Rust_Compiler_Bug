{"sha": "e19ad45107ee89331ec77f88d00dd39898ce9bff", "node_id": "MDY6Q29tbWl0NzI0NzEyOmUxOWFkNDUxMDdlZTg5MzMxZWM3N2Y4OGQwMGRkMzk4OThjZTliZmY=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-05-11T21:41:38Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-05-11T21:41:38Z"}, "message": "Rollup merge of #60727 - chpio:master, r=sfackler\n\nadd comment to `Rc`/`Arc`'s `Eq` specialization\n\nin addition to https://github.com/rust-lang/rust/pull/56550\n\nhttps://github.com/rust-lang/rust/pull/42965#issuecomment-312702479", "tree": {"sha": "5b44b6fea9f9bd2f2ac42f6a892fad3e48760dfc", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5b44b6fea9f9bd2f2ac42f6a892fad3e48760dfc"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e19ad45107ee89331ec77f88d00dd39898ce9bff", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJc10GTCRBK7hj4Ov3rIwAAdHIIAIZgSWE8d0boVOIhF8eyUDz9\n8DUHISjdGZmgze5RUS8rMfF/M1Kkhz1bW4mitr96+vChGXnN/+A+zNsKCEwuEdOR\nn6qyqpOab2BLbENs8ZzZSEQmXbT8yMLJrHYJ61Raj1b4ryyJUbodZPxQyPT9fJzL\nCGkBWZPMnMY6nYVmNIjxJj+gBOphXhtphei7k/alRdU4WPm7EU3hJM625uyx0EM7\nGyumywQLnixN24vHs4TRe0aWx367wR4fwrcuWdwH2mP2I5pYcKTNznQ6DLT84Nqo\naIugVlaUDVoJf24AT1F3Zm5DPxkKzHftIgcM1cNPA4cP2TkBA0AJakmOBGH+hy8=\n=HgDC\n-----END PGP SIGNATURE-----\n", "payload": "tree 5b44b6fea9f9bd2f2ac42f6a892fad3e48760dfc\nparent 5da009e23ae59f07041a930c3a5ae696f76572ce\nparent 740a8dabb413abecd88a202f2370252b33e73a7f\nauthor Mazdak Farrokhzad <twingoow@gmail.com> 1557610898 +0200\ncommitter GitHub <noreply@github.com> 1557610898 +0200\n\nRollup merge of #60727 - chpio:master, r=sfackler\n\nadd comment to `Rc`/`Arc`'s `Eq` specialization\n\nin addition to https://github.com/rust-lang/rust/pull/56550\n\nhttps://github.com/rust-lang/rust/pull/42965#issuecomment-312702479\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e19ad45107ee89331ec77f88d00dd39898ce9bff", "html_url": "https://github.com/rust-lang/rust/commit/e19ad45107ee89331ec77f88d00dd39898ce9bff", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e19ad45107ee89331ec77f88d00dd39898ce9bff/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5da009e23ae59f07041a930c3a5ae696f76572ce", "url": "https://api.github.com/repos/rust-lang/rust/commits/5da009e23ae59f07041a930c3a5ae696f76572ce", "html_url": "https://github.com/rust-lang/rust/commit/5da009e23ae59f07041a930c3a5ae696f76572ce"}, {"sha": "740a8dabb413abecd88a202f2370252b33e73a7f", "url": "https://api.github.com/repos/rust-lang/rust/commits/740a8dabb413abecd88a202f2370252b33e73a7f", "html_url": "https://github.com/rust-lang/rust/commit/740a8dabb413abecd88a202f2370252b33e73a7f"}], "stats": {"total": 10, "additions": 10, "deletions": 0}, "files": [{"sha": "0dffb19476f3d318dc64968dd31d11663fededd7", "filename": "src/liballoc/rc.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/e19ad45107ee89331ec77f88d00dd39898ce9bff/src%2Fliballoc%2Frc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e19ad45107ee89331ec77f88d00dd39898ce9bff/src%2Fliballoc%2Frc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Frc.rs?ref=e19ad45107ee89331ec77f88d00dd39898ce9bff", "patch": "@@ -932,6 +932,11 @@ impl<T: ?Sized + PartialEq> RcEqIdent<T> for Rc<T> {\n     }\n }\n \n+/// We're doing this specialization here, and not as a more general optimization on `&T`, because it\n+/// would otherwise add a cost to all equality checks on refs. We assume that `Rc`s are used to\n+/// store large values, that are slow to clone, but also heavy to check for equality, causing this\n+/// cost to pay off more easily. It's also more likely to have two `Rc` clones, that point to\n+/// the same value, than two `&T`s.\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n impl<T: ?Sized + Eq> RcEqIdent<T> for Rc<T> {\n     #[inline]"}, {"sha": "90c7859b3db9ec457acdbc4f0b0f67fea0f105bf", "filename": "src/liballoc/sync.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/e19ad45107ee89331ec77f88d00dd39898ce9bff/src%2Fliballoc%2Fsync.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e19ad45107ee89331ec77f88d00dd39898ce9bff/src%2Fliballoc%2Fsync.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Fsync.rs?ref=e19ad45107ee89331ec77f88d00dd39898ce9bff", "patch": "@@ -1377,6 +1377,11 @@ impl<T: ?Sized + PartialEq> ArcEqIdent<T> for Arc<T> {\n     }\n }\n \n+/// We're doing this specialization here, and not as a more general optimization on `&T`, because it\n+/// would otherwise add a cost to all equality checks on refs. We assume that `Arc`s are used to\n+/// store large values, that are slow to clone, but also heavy to check for equality, causing this\n+/// cost to pay off more easily. It's also more likely to have two `Arc` clones, that point to\n+/// the same value, than two `&T`s.\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n impl<T: ?Sized + Eq> ArcEqIdent<T> for Arc<T> {\n     #[inline]"}]}