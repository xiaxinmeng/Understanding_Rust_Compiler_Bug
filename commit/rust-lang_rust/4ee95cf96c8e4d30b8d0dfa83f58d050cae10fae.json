{"sha": "4ee95cf96c8e4d30b8d0dfa83f58d050cae10fae", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRlZTk1Y2Y5NmM4ZTRkMzBiOGQwZGZhODNmNThkMDUwY2FlMTBmYWU=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2013-12-30T23:34:28Z"}, "committer": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2014-01-02T22:16:08Z"}, "message": "libsyntax: De-`@mut` `Parser::restriction`", "tree": {"sha": "5587f535860638b644688e7958669c68b040ab1b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5587f535860638b644688e7958669c68b040ab1b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4ee95cf96c8e4d30b8d0dfa83f58d050cae10fae", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4ee95cf96c8e4d30b8d0dfa83f58d050cae10fae", "html_url": "https://github.com/rust-lang/rust/commit/4ee95cf96c8e4d30b8d0dfa83f58d050cae10fae", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4ee95cf96c8e4d30b8d0dfa83f58d050cae10fae/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6992a5c77d948a5600f719387786c51d36fdcd0a", "url": "https://api.github.com/repos/rust-lang/rust/commits/6992a5c77d948a5600f719387786c51d36fdcd0a", "html_url": "https://github.com/rust-lang/rust/commit/6992a5c77d948a5600f719387786c51d36fdcd0a"}], "stats": {"total": 14, "additions": 7, "deletions": 7}, "files": [{"sha": "749000d00d26fdddc0af344174bd55e494a724ae", "filename": "src/libsyntax/parse/parser.rs", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/4ee95cf96c8e4d30b8d0dfa83f58d050cae10fae/src%2Flibsyntax%2Fparse%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4ee95cf96c8e4d30b8d0dfa83f58d050cae10fae/src%2Flibsyntax%2Fparse%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fparser.rs?ref=4ee95cf96c8e4d30b8d0dfa83f58d050cae10fae", "patch": "@@ -314,7 +314,7 @@ pub fn Parser(sess: @mut ParseSess, cfg: ast::CrateConfig, rdr: @mut reader)\n         buffer_start: 0,\n         buffer_end: 0,\n         tokens_consumed: 0,\n-        restriction: @mut UNRESTRICTED,\n+        restriction: UNRESTRICTED,\n         quote_depth: 0,\n         obsolete_set: @mut HashSet::new(),\n         mod_path_stack: @mut ~[],\n@@ -339,7 +339,7 @@ pub struct Parser {\n     buffer_start: int,\n     buffer_end: int,\n     tokens_consumed: uint,\n-    restriction: @mut restriction,\n+    restriction: restriction,\n     quote_depth: uint, // not (yet) related to the quasiquoter\n     reader: @mut reader,\n     interner: @token::ident_interner,\n@@ -2356,7 +2356,7 @@ impl Parser {\n         // scope of the borrows.\n         {\n             let token: &token::Token = &self.token;\n-            let restriction: &restriction = self.restriction;\n+            let restriction: &restriction = &self.restriction;\n             match (token, restriction) {\n                 (&token::BINOP(token::OR), &RESTRICT_NO_BAR_OP) => return lhs,\n                 (&token::BINOP(token::OR),\n@@ -2700,10 +2700,10 @@ impl Parser {\n \n     // parse an expression, subject to the given restriction\n     fn parse_expr_res(&mut self, r: restriction) -> @Expr {\n-        let old = *self.restriction;\n-        *self.restriction = r;\n+        let old = self.restriction;\n+        self.restriction = r;\n         let e = self.parse_assign_expr();\n-        *self.restriction = old;\n+        self.restriction = old;\n         return e;\n     }\n \n@@ -3310,7 +3310,7 @@ impl Parser {\n \n     // is this expression a successfully-parsed statement?\n     fn expr_is_complete(&mut self, e: @Expr) -> bool {\n-        return *self.restriction == RESTRICT_STMT_EXPR &&\n+        return self.restriction == RESTRICT_STMT_EXPR &&\n             !classify::expr_requires_semi_to_be_stmt(e);\n     }\n "}]}