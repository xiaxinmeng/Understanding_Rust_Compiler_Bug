{"sha": "0cdd693bf6c8eb5aa0b4f2b2f82c545e5bd56f59", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBjZGQ2OTNiZjZjOGViNWFhMGI0ZjJiMmY4MmM1NDVlNWJkNTZmNTk=", "commit": {"author": {"name": "Joe Richey", "email": "joerichey@google.com", "date": "2019-07-29T06:09:21Z"}, "committer": {"name": "Joe Richey", "email": "joerichey@google.com", "date": "2019-07-29T06:09:21Z"}, "message": "vxworks: Remove Linux-specific comments.", "tree": {"sha": "6631b9654619ed61ba6b102d769d552669e0d6c8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6631b9654619ed61ba6b102d769d552669e0d6c8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0cdd693bf6c8eb5aa0b4f2b2f82c545e5bd56f59", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0cdd693bf6c8eb5aa0b4f2b2f82c545e5bd56f59", "html_url": "https://github.com/rust-lang/rust/commit/0cdd693bf6c8eb5aa0b4f2b2f82c545e5bd56f59", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0cdd693bf6c8eb5aa0b4f2b2f82c545e5bd56f59/comments", "author": {"login": "josephlr", "id": 5506060, "node_id": "MDQ6VXNlcjU1MDYwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/5506060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/josephlr", "html_url": "https://github.com/josephlr", "followers_url": "https://api.github.com/users/josephlr/followers", "following_url": "https://api.github.com/users/josephlr/following{/other_user}", "gists_url": "https://api.github.com/users/josephlr/gists{/gist_id}", "starred_url": "https://api.github.com/users/josephlr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/josephlr/subscriptions", "organizations_url": "https://api.github.com/users/josephlr/orgs", "repos_url": "https://api.github.com/users/josephlr/repos", "events_url": "https://api.github.com/users/josephlr/events{/privacy}", "received_events_url": "https://api.github.com/users/josephlr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "josephlr", "id": 5506060, "node_id": "MDQ6VXNlcjU1MDYwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/5506060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/josephlr", "html_url": "https://github.com/josephlr", "followers_url": "https://api.github.com/users/josephlr/followers", "following_url": "https://api.github.com/users/josephlr/following{/other_user}", "gists_url": "https://api.github.com/users/josephlr/gists{/gist_id}", "starred_url": "https://api.github.com/users/josephlr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/josephlr/subscriptions", "organizations_url": "https://api.github.com/users/josephlr/orgs", "repos_url": "https://api.github.com/users/josephlr/repos", "events_url": "https://api.github.com/users/josephlr/events{/privacy}", "received_events_url": "https://api.github.com/users/josephlr/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8b94e9e9188b65df38a5f1ae723617dc2dfb3155", "url": "https://api.github.com/repos/rust-lang/rust/commits/8b94e9e9188b65df38a5f1ae723617dc2dfb3155", "html_url": "https://github.com/rust-lang/rust/commit/8b94e9e9188b65df38a5f1ae723617dc2dfb3155"}], "stats": {"total": 26, "additions": 1, "deletions": 25}, "files": [{"sha": "d537d2258fda79318915d0646021776fd76cd807", "filename": "src/libstd/sys/vxworks/fs.rs", "status": "modified", "additions": 1, "deletions": 16, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/0cdd693bf6c8eb5aa0b4f2b2f82c545e5bd56f59/src%2Flibstd%2Fsys%2Fvxworks%2Ffs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0cdd693bf6c8eb5aa0b4f2b2f82c545e5bd56f59/src%2Flibstd%2Fsys%2Fvxworks%2Ffs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Fvxworks%2Ffs.rs?ref=0cdd693bf6c8eb5aa0b4f2b2f82c545e5bd56f59", "patch": "@@ -287,22 +287,7 @@ impl File {\n         let fd = cvt_r(|| unsafe {\n             open(path.as_ptr(), flags, opts.mode as c_int)\n         })?;\n-        let fd = FileDesc::new(fd);\n-        // Currently the standard library supports Linux 2.6.18 which did not\n-        // have the O_CLOEXEC flag (passed above). If we're running on an older\n-        // Linux kernel then the flag is just ignored by the OS. After we open\n-        // the first file, we check whether it has CLOEXEC set. If it doesn't,\n-        // we will explicitly ask for a CLOEXEC fd for every further file we\n-        // open, if it does, we will skip that step.\n-        //\n-        // The CLOEXEC flag, however, is supported on versions of macOS/BSD/etc\n-        // that we support, so we only do this on Linux currently.\n-        fn ensure_cloexec(_: &FileDesc) -> io::Result<()> {\n-            Ok(())\n-        }\n-\n-        ensure_cloexec(&fd)?;\n-        Ok(File(fd))\n+        Ok(File(FileDesc::new(fd)))\n     }\n \n     pub fn file_attr(&self) -> io::Result<FileAttr> {"}, {"sha": "56962e11dcf95a4c646e13827f6732bf1c86b0de", "filename": "src/libstd/sys/vxworks/net.rs", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/0cdd693bf6c8eb5aa0b4f2b2f82c545e5bd56f59/src%2Flibstd%2Fsys%2Fvxworks%2Fnet.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0cdd693bf6c8eb5aa0b4f2b2f82c545e5bd56f59/src%2Flibstd%2Fsys%2Fvxworks%2Fnet.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Fvxworks%2Fnet.rs?ref=0cdd693bf6c8eb5aa0b4f2b2f82c545e5bd56f59", "patch": "@@ -141,10 +141,6 @@ impl Socket {\n \n     pub fn accept(&self, storage: *mut sockaddr, len: *mut socklen_t)\n                   -> io::Result<Socket> {\n-        // Unfortunately the only known way right now to accept a socket and\n-        // atomically set the CLOEXEC flag is to use the `accept4` syscall on\n-        // Linux. This was added in 2.6.28, however, and because we support\n-        // 2.6.18 we must detect this support dynamically.\n         let fd = cvt_r(|| unsafe {\n             libc::accept(self.0.raw(), storage, len)\n         })?;"}, {"sha": "e09dbe6e99ba8898bc71f29294b721fd1b0d25df", "filename": "src/libstd/sys/vxworks/pipe.rs", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/0cdd693bf6c8eb5aa0b4f2b2f82c545e5bd56f59/src%2Flibstd%2Fsys%2Fvxworks%2Fpipe.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0cdd693bf6c8eb5aa0b4f2b2f82c545e5bd56f59/src%2Flibstd%2Fsys%2Fvxworks%2Fpipe.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Fvxworks%2Fpipe.rs?ref=0cdd693bf6c8eb5aa0b4f2b2f82c545e5bd56f59", "patch": "@@ -11,11 +11,6 @@ pub fn anon_pipe() -> io::Result<(AnonPipe, AnonPipe)> {\n     static INVALID: AtomicBool = AtomicBool::new(false);\n \n     let mut fds = [0; 2];\n-\n-    // Unfortunately the only known way right now to create atomically set the\n-    // CLOEXEC flag is to use the `pipe2` syscall on Linux. This was added in\n-    // 2.6.27, however, and because we support 2.6.18 we must detect this\n-    // support dynamically.\n     cvt(unsafe { libc::pipe(fds.as_mut_ptr()) })?;\n \n     let fd0 = FileDesc::new(fds[0]);"}]}