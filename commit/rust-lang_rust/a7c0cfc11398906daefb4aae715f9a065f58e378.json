{"sha": "a7c0cfc11398906daefb4aae715f9a065f58e378", "node_id": "C_kwDOAAsO6NoAKGE3YzBjZmMxMTM5ODkwNmRhZWZiNGFhZTcxNWY5YTA2NWY1OGUzNzg", "commit": {"author": {"name": "bjorn3", "email": "17426603+bjorn3@users.noreply.github.com", "date": "2023-02-17T19:39:07Z"}, "committer": {"name": "bjorn3", "email": "17426603+bjorn3@users.noreply.github.com", "date": "2023-02-18T14:56:26Z"}, "message": "Fix return address type", "tree": {"sha": "658d12513ba8b80a032b32a675e79fe26359017b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/658d12513ba8b80a032b32a675e79fe26359017b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a7c0cfc11398906daefb4aae715f9a065f58e378", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a7c0cfc11398906daefb4aae715f9a065f58e378", "html_url": "https://github.com/rust-lang/rust/commit/a7c0cfc11398906daefb4aae715f9a065f58e378", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a7c0cfc11398906daefb4aae715f9a065f58e378/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "dd5ffc2e18d145f292068095fef543c83bc9a16a", "url": "https://api.github.com/repos/rust-lang/rust/commits/dd5ffc2e18d145f292068095fef543c83bc9a16a", "html_url": "https://github.com/rust-lang/rust/commit/dd5ffc2e18d145f292068095fef543c83bc9a16a"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "2ed2dc84bc80e57e5400c9b5a8dffeec093e989c", "filename": "src/abi/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a7c0cfc11398906daefb4aae715f9a065f58e378/src%2Fabi%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a7c0cfc11398906daefb4aae715f9a065f58e378/src%2Fabi%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fabi%2Fmod.rs?ref=a7c0cfc11398906daefb4aae715f9a065f58e378", "patch": "@@ -142,7 +142,7 @@ impl<'tcx> FunctionCx<'_, '_, 'tcx> {\n             let indirect_ret_val = returns.len() == 1 && returns[0].value_type == types::I128;\n \n             if indirect_ret_val {\n-                params.insert(0, AbiParam::new(types::I128));\n+                params.insert(0, AbiParam::new(self.pointer_type));\n                 let ret_ptr =\n                     Pointer::stack_slot(self.bcx.create_sized_stack_slot(StackSlotData {\n                         kind: StackSlotKind::ExplicitSlot,"}]}