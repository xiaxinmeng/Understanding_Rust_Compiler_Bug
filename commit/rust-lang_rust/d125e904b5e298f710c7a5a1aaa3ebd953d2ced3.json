{"sha": "d125e904b5e298f710c7a5a1aaa3ebd953d2ced3", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQxMjVlOTA0YjVlMjk4ZjcxMGM3YTVhMWFhYTNlYmQ5NTNkMmNlZDM=", "commit": {"author": {"name": "Oliver Schneider", "email": "github35764891676564198441@oli-obk.de", "date": "2018-08-29T11:20:43Z"}, "committer": {"name": "Oliver Schneider", "email": "github35764891676564198441@oli-obk.de", "date": "2018-08-31T06:40:00Z"}, "message": "Restrict most uses of `const_fn` to `min_const_fn`", "tree": {"sha": "d7205cb1b42043cc15c1dedaf5c40b0150f9bfe2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d7205cb1b42043cc15c1dedaf5c40b0150f9bfe2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d125e904b5e298f710c7a5a1aaa3ebd953d2ced3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d125e904b5e298f710c7a5a1aaa3ebd953d2ced3", "html_url": "https://github.com/rust-lang/rust/commit/d125e904b5e298f710c7a5a1aaa3ebd953d2ced3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d125e904b5e298f710c7a5a1aaa3ebd953d2ced3/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7b3d930ca6f8269d07bce30ace4a9be2f316a63a", "url": "https://api.github.com/repos/rust-lang/rust/commits/7b3d930ca6f8269d07bce30ace4a9be2f316a63a", "html_url": "https://github.com/rust-lang/rust/commit/7b3d930ca6f8269d07bce30ace4a9be2f316a63a"}], "stats": {"total": 85, "additions": 43, "deletions": 42}, "files": [{"sha": "452d2b1472ff4a2fb8d9b29e7097ae6da75700fb", "filename": "src/liballoc/lib.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/d125e904b5e298f710c7a5a1aaa3ebd953d2ced3/src%2Fliballoc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d125e904b5e298f710c7a5a1aaa3ebd953d2ced3/src%2Fliballoc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Flib.rs?ref=d125e904b5e298f710c7a5a1aaa3ebd953d2ced3", "patch": "@@ -88,7 +88,8 @@\n #![feature(box_syntax)]\n #![feature(cfg_target_has_atomic)]\n #![feature(coerce_unsized)]\n-#![feature(const_fn)]\n+#![cfg_attr(stage0, feature(const_fn))]\n+#![cfg_attr(not(stage0), feature(min_const_fn))]\n #![feature(core_intrinsics)]\n #![feature(custom_attribute)]\n #![feature(dropck_eyepatch)]"}, {"sha": "710c659ac53962b18c1b6bb4bf75900171ac9fca", "filename": "src/liballoc/tests/lib.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/d125e904b5e298f710c7a5a1aaa3ebd953d2ced3/src%2Fliballoc%2Ftests%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d125e904b5e298f710c7a5a1aaa3ebd953d2ced3/src%2Fliballoc%2Ftests%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Ftests%2Flib.rs?ref=d125e904b5e298f710c7a5a1aaa3ebd953d2ced3", "patch": "@@ -11,7 +11,8 @@\n #![feature(allocator_api)]\n #![feature(alloc_system)]\n #![feature(box_syntax)]\n-#![feature(const_fn)]\n+#![cfg_attr(stage0, feature(const_fn))]\n+#![cfg_attr(not(stage0), feature(min_const_fn))]\n #![feature(drain_filter)]\n #![feature(exact_size_is_empty)]\n #![feature(pattern)]"}, {"sha": "d79281666d63914e7f137927c04100b96ec02368", "filename": "src/librustc/lib.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/d125e904b5e298f710c7a5a1aaa3ebd953d2ced3/src%2Flibrustc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d125e904b5e298f710c7a5a1aaa3ebd953d2ced3/src%2Flibrustc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Flib.rs?ref=d125e904b5e298f710c7a5a1aaa3ebd953d2ced3", "patch": "@@ -42,7 +42,8 @@\n \n #![feature(box_patterns)]\n #![feature(box_syntax)]\n-#![feature(const_fn)]\n+#![cfg_attr(stage0, feature(const_fn))]\n+#![cfg_attr(not(stage0), feature(min_const_fn))]\n #![feature(core_intrinsics)]\n #![feature(drain_filter)]\n #![cfg_attr(windows, feature(libc))]"}, {"sha": "6f087221b80242629502d381742701024708549c", "filename": "src/librustc_mir/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d125e904b5e298f710c7a5a1aaa3ebd953d2ced3/src%2Flibrustc_mir%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d125e904b5e298f710c7a5a1aaa3ebd953d2ced3/src%2Flibrustc_mir%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Flib.rs?ref=d125e904b5e298f710c7a5a1aaa3ebd953d2ced3", "patch": "@@ -23,7 +23,6 @@ Rust MIR: a lowered representation of Rust. Also: an experiment!\n #![feature(box_patterns)]\n #![feature(box_syntax)]\n #![feature(crate_visibility_modifier)]\n-#![feature(const_fn)]\n #![feature(core_intrinsics)]\n #![feature(decl_macro)]\n #![cfg_attr(stage0, feature(macro_vis_matcher))]"}, {"sha": "e4d958e3b6f3520e84ae3a76b6f6fa098a65fc25", "filename": "src/librustc_target/lib.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/d125e904b5e298f710c7a5a1aaa3ebd953d2ced3/src%2Flibrustc_target%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d125e904b5e298f710c7a5a1aaa3ebd953d2ced3/src%2Flibrustc_target%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Flib.rs?ref=d125e904b5e298f710c7a5a1aaa3ebd953d2ced3", "patch": "@@ -22,7 +22,8 @@\n       html_root_url = \"https://doc.rust-lang.org/nightly/\")]\n \n #![feature(box_syntax)]\n-#![feature(const_fn)]\n+#![cfg_attr(stage0, feature(const_fn))]\n+#![cfg_attr(not(stage0), feature(min_const_fn))]\n #![cfg_attr(not(stage0), feature(nll))]\n #![cfg_attr(not(stage0), feature(infer_outlives_requirements))]\n #![feature(slice_patterns)]"}, {"sha": "14624176436000dbd682ee8d1b1aa564a70a92d9", "filename": "src/test/codegen-units/item-collection/unreferenced-const-fn.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d125e904b5e298f710c7a5a1aaa3ebd953d2ced3/src%2Ftest%2Fcodegen-units%2Fitem-collection%2Funreferenced-const-fn.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d125e904b5e298f710c7a5a1aaa3ebd953d2ced3/src%2Ftest%2Fcodegen-units%2Fitem-collection%2Funreferenced-const-fn.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcodegen-units%2Fitem-collection%2Funreferenced-const-fn.rs?ref=d125e904b5e298f710c7a5a1aaa3ebd953d2ced3", "patch": "@@ -13,7 +13,7 @@\n \n // NB: We do not expect *any* monomorphization to be generated here.\n \n-#![feature(const_fn)]\n+#![feature(min_const_fn)]\n #![deny(dead_code)]\n #![crate_type = \"rlib\"]\n "}, {"sha": "3ea20aa921e1bf6f6646bf9aa3a7dceae2432da3", "filename": "src/test/codegen/link-dead-code.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d125e904b5e298f710c7a5a1aaa3ebd953d2ced3/src%2Ftest%2Fcodegen%2Flink-dead-code.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d125e904b5e298f710c7a5a1aaa3ebd953d2ced3/src%2Ftest%2Fcodegen%2Flink-dead-code.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcodegen%2Flink-dead-code.rs?ref=d125e904b5e298f710c7a5a1aaa3ebd953d2ced3", "patch": "@@ -10,7 +10,7 @@\n \n // compile-flags:-Clink-dead-code\n \n-#![feature(const_fn)]\n+#![feature(min_const_fn)]\n #![crate_type = \"rlib\"]\n \n // This test makes sure that, when -Clink-dead-code is specified, we generate"}, {"sha": "fea81f0cc8fa4c6a48f2600646aa58d7caadd19b", "filename": "src/test/compile-fail/issue-43733-2.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d125e904b5e298f710c7a5a1aaa3ebd953d2ced3/src%2Ftest%2Fcompile-fail%2Fissue-43733-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d125e904b5e298f710c7a5a1aaa3ebd953d2ced3/src%2Ftest%2Fcompile-fail%2Fissue-43733-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-43733-2.rs?ref=d125e904b5e298f710c7a5a1aaa3ebd953d2ced3", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![feature(const_fn)]\n+#![feature(min_const_fn)]\n #![feature(cfg_target_thread_local, thread_local_internals)]\n \n // On platforms *without* `#[thread_local]`, use"}, {"sha": "1bf740fdec6192beaf4cc5e25ed26d849193f876", "filename": "src/test/mir-opt/lower_128bit_debug_test.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d125e904b5e298f710c7a5a1aaa3ebd953d2ced3/src%2Ftest%2Fmir-opt%2Flower_128bit_debug_test.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d125e904b5e298f710c7a5a1aaa3ebd953d2ced3/src%2Ftest%2Fmir-opt%2Flower_128bit_debug_test.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Flower_128bit_debug_test.rs?ref=d125e904b5e298f710c7a5a1aaa3ebd953d2ced3", "patch": "@@ -15,7 +15,7 @@\n \n // compile-flags: -Z lower_128bit_ops=yes -C debug_assertions=yes\n \n-#![feature(const_fn)]\n+#![feature(min_const_fn)]\n \n static TEST_SIGNED: i128 = const_signed(-222);\n static TEST_UNSIGNED: u128 = const_unsigned(200);"}, {"sha": "235df8a6785d4d4d100d1d2d3afccaf165e8a845", "filename": "src/test/mir-opt/lower_128bit_test.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d125e904b5e298f710c7a5a1aaa3ebd953d2ced3/src%2Ftest%2Fmir-opt%2Flower_128bit_test.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d125e904b5e298f710c7a5a1aaa3ebd953d2ced3/src%2Ftest%2Fmir-opt%2Flower_128bit_test.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Flower_128bit_test.rs?ref=d125e904b5e298f710c7a5a1aaa3ebd953d2ced3", "patch": "@@ -12,7 +12,7 @@\n \n // compile-flags: -Z lower_128bit_ops=yes -C debug_assertions=no -O\n \n-#![feature(const_fn)]\n+#![feature(min_const_fn)]\n \n static TEST_SIGNED: i128 = const_signed(-222);\n static TEST_UNSIGNED: u128 = const_unsigned(200);"}, {"sha": "30efe3b9ab2c48cd0fceaf3007e3a83b072f5b31", "filename": "src/test/run-fail/issue-29798.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d125e904b5e298f710c7a5a1aaa3ebd953d2ced3/src%2Ftest%2Frun-fail%2Fissue-29798.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d125e904b5e298f710c7a5a1aaa3ebd953d2ced3/src%2Ftest%2Frun-fail%2Fissue-29798.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Fissue-29798.rs?ref=d125e904b5e298f710c7a5a1aaa3ebd953d2ced3", "patch": "@@ -10,7 +10,7 @@\n \n // error-pattern:index out of bounds: the len is 5 but the index is 5\n \n-#![feature(const_fn)]\n+#![feature(min_const_fn)]\n const fn test(x: usize) -> i32 {\n     [42;5][x]\n }"}, {"sha": "6985a6527c874eb51562d2a2da695af198692421", "filename": "src/test/run-pass/auxiliary/const_fn_lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d125e904b5e298f710c7a5a1aaa3ebd953d2ced3/src%2Ftest%2Frun-pass%2Fauxiliary%2Fconst_fn_lib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d125e904b5e298f710c7a5a1aaa3ebd953d2ced3/src%2Ftest%2Frun-pass%2Fauxiliary%2Fconst_fn_lib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fauxiliary%2Fconst_fn_lib.rs?ref=d125e904b5e298f710c7a5a1aaa3ebd953d2ced3", "patch": "@@ -11,6 +11,6 @@\n // Crate that exports a const fn. Used for testing cross-crate.\n \n #![crate_type=\"rlib\"]\n-#![feature(const_fn)]\n+#![feature(min_const_fn)]\n \n pub const fn foo() -> usize { 22 }"}, {"sha": "5351a40916b7d44df25f6e7c8bec63a0460fd13a", "filename": "src/test/run-pass/auxiliary/issue-36954.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d125e904b5e298f710c7a5a1aaa3ebd953d2ced3/src%2Ftest%2Frun-pass%2Fauxiliary%2Fissue-36954.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d125e904b5e298f710c7a5a1aaa3ebd953d2ced3/src%2Ftest%2Frun-pass%2Fauxiliary%2Fissue-36954.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fauxiliary%2Fissue-36954.rs?ref=d125e904b5e298f710c7a5a1aaa3ebd953d2ced3", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![feature(const_fn)]\n+#![feature(min_const_fn)]\n #![crate_type = \"lib\"]\n \n const fn foo(i: i32) -> i32 {"}, {"sha": "3fe27ca200cb00d4b300f932d7b959ced146b0f4", "filename": "src/test/run-pass/const-fn-const-eval.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d125e904b5e298f710c7a5a1aaa3ebd953d2ced3/src%2Ftest%2Frun-pass%2Fconst-fn-const-eval.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d125e904b5e298f710c7a5a1aaa3ebd953d2ced3/src%2Ftest%2Frun-pass%2Fconst-fn-const-eval.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fconst-fn-const-eval.rs?ref=d125e904b5e298f710c7a5a1aaa3ebd953d2ced3", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![feature(const_fn)]\n+#![feature(min_const_fn)]\n \n const fn add(x: usize, y: usize) -> usize {\n     x + y"}, {"sha": "bed78f1e8978f6dc3c9304c1853432609cce0bd8", "filename": "src/test/run-pass/const-fn-method.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d125e904b5e298f710c7a5a1aaa3ebd953d2ced3/src%2Ftest%2Frun-pass%2Fconst-fn-method.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d125e904b5e298f710c7a5a1aaa3ebd953d2ced3/src%2Ftest%2Frun-pass%2Fconst-fn-method.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fconst-fn-method.rs?ref=d125e904b5e298f710c7a5a1aaa3ebd953d2ced3", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![feature(const_fn)]\n+#![feature(min_const_fn)]\n \n struct Foo { value: u32 }\n "}, {"sha": "d5959a89e51a5bf597dc7a7d248783e409be3859", "filename": "src/test/run-pass/const-fn-nested.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d125e904b5e298f710c7a5a1aaa3ebd953d2ced3/src%2Ftest%2Frun-pass%2Fconst-fn-nested.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d125e904b5e298f710c7a5a1aaa3ebd953d2ced3/src%2Ftest%2Frun-pass%2Fconst-fn-nested.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fconst-fn-nested.rs?ref=d125e904b5e298f710c7a5a1aaa3ebd953d2ced3", "patch": "@@ -10,7 +10,7 @@\n \n // Test a call whose argument is the result of another call.\n \n-#![feature(const_fn)]\n+#![feature(min_const_fn)]\n \n const fn sub(x: u32, y: u32) -> u32 {\n     x - y"}, {"sha": "836716051d2132e1bd9b7f197fde1bb96cb21c80", "filename": "src/test/run-pass/const-meth-pattern.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d125e904b5e298f710c7a5a1aaa3ebd953d2ced3/src%2Ftest%2Frun-pass%2Fconst-meth-pattern.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d125e904b5e298f710c7a5a1aaa3ebd953d2ced3/src%2Ftest%2Frun-pass%2Fconst-meth-pattern.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fconst-meth-pattern.rs?ref=d125e904b5e298f710c7a5a1aaa3ebd953d2ced3", "patch": "@@ -7,7 +7,7 @@\n // <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n-#![feature(const_fn)]\n+#![feature(min_const_fn)]\n \n struct A;\n "}, {"sha": "689ae19e7d4f4cfa4f09f039ca0bff8052ca5def", "filename": "src/test/run-pass/const-pattern-variant.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d125e904b5e298f710c7a5a1aaa3ebd953d2ced3/src%2Ftest%2Frun-pass%2Fconst-pattern-variant.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d125e904b5e298f710c7a5a1aaa3ebd953d2ced3/src%2Ftest%2Frun-pass%2Fconst-pattern-variant.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fconst-pattern-variant.rs?ref=d125e904b5e298f710c7a5a1aaa3ebd953d2ced3", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![feature(const_fn)]\n+#![feature(min_const_fn)]\n \n #[derive(PartialEq, Eq)]\n enum Cake {"}, {"sha": "245dd673b512cff1f465cef0b92f514ecf92de51", "filename": "src/test/run-pass/const-size_of-align_of.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d125e904b5e298f710c7a5a1aaa3ebd953d2ced3/src%2Ftest%2Frun-pass%2Fconst-size_of-align_of.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d125e904b5e298f710c7a5a1aaa3ebd953d2ced3/src%2Ftest%2Frun-pass%2Fconst-size_of-align_of.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fconst-size_of-align_of.rs?ref=d125e904b5e298f710c7a5a1aaa3ebd953d2ced3", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![feature(const_fn)]\n+#![feature(min_const_fn)]\n \n use std::mem;\n "}, {"sha": "b267245b789694770615ba1aa8166c33c047f7ee", "filename": "src/test/run-pass/const-unsafe-fn.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d125e904b5e298f710c7a5a1aaa3ebd953d2ced3/src%2Ftest%2Frun-pass%2Fconst-unsafe-fn.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d125e904b5e298f710c7a5a1aaa3ebd953d2ced3/src%2Ftest%2Frun-pass%2Fconst-unsafe-fn.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fconst-unsafe-fn.rs?ref=d125e904b5e298f710c7a5a1aaa3ebd953d2ced3", "patch": "@@ -10,7 +10,7 @@\n \n // A quick test of 'unsafe const fn' functionality\n \n-#![feature(const_fn)]\n+#![feature(min_const_fn)]\n \n const unsafe fn dummy(v: u32) -> u32 {\n     !v"}, {"sha": "574fb29e82c7df08be4371a0019a0ea2e1e64dd1", "filename": "src/test/run-pass/consts-in-patterns.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d125e904b5e298f710c7a5a1aaa3ebd953d2ced3/src%2Ftest%2Frun-pass%2Fconsts-in-patterns.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d125e904b5e298f710c7a5a1aaa3ebd953d2ced3/src%2Ftest%2Frun-pass%2Fconsts-in-patterns.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fconsts-in-patterns.rs?ref=d125e904b5e298f710c7a5a1aaa3ebd953d2ced3", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![feature(const_fn)]\n+#![feature(min_const_fn)]\n \n const FOO: isize = 10;\n const BAR: isize = 3;"}, {"sha": "f59a6810e3a78f76bea3112c1dc0ba2e883df9ec", "filename": "src/test/run-pass/ctfe/ice-48279.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d125e904b5e298f710c7a5a1aaa3ebd953d2ced3/src%2Ftest%2Frun-pass%2Fctfe%2Fice-48279.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d125e904b5e298f710c7a5a1aaa3ebd953d2ced3/src%2Ftest%2Frun-pass%2Fctfe%2Fice-48279.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fctfe%2Fice-48279.rs?ref=d125e904b5e298f710c7a5a1aaa3ebd953d2ced3", "patch": "@@ -10,7 +10,7 @@\n \n // https://github.com/rust-lang/rust/issues/48279\n \n-#![feature(const_fn)]\n+#![feature(min_const_fn)]\n \n #[derive(PartialEq, Eq)]\n pub struct NonZeroU32 {"}, {"sha": "352958f4c6a454f82f0d5219432658e6e377f4da", "filename": "src/test/run-pass/ctfe/match-const-fn-structs.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d125e904b5e298f710c7a5a1aaa3ebd953d2ced3/src%2Ftest%2Frun-pass%2Fctfe%2Fmatch-const-fn-structs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d125e904b5e298f710c7a5a1aaa3ebd953d2ced3/src%2Ftest%2Frun-pass%2Fctfe%2Fmatch-const-fn-structs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fctfe%2Fmatch-const-fn-structs.rs?ref=d125e904b5e298f710c7a5a1aaa3ebd953d2ced3", "patch": "@@ -10,7 +10,7 @@\n \n // https://github.com/rust-lang/rust/issues/46114\n \n-#![feature(const_fn)]\n+#![feature(min_const_fn)]\n \n #[derive(Eq, PartialEq)]\n struct A { value: u32 }"}, {"sha": "87fdac4bfb4fe296daa58fd4bc08aa29ededfb79", "filename": "src/test/run-pass/ctfe/return-in-const-fn.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d125e904b5e298f710c7a5a1aaa3ebd953d2ced3/src%2Ftest%2Frun-pass%2Fctfe%2Freturn-in-const-fn.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d125e904b5e298f710c7a5a1aaa3ebd953d2ced3/src%2Ftest%2Frun-pass%2Fctfe%2Freturn-in-const-fn.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fctfe%2Freturn-in-const-fn.rs?ref=d125e904b5e298f710c7a5a1aaa3ebd953d2ced3", "patch": "@@ -10,7 +10,7 @@\n \n // https://github.com/rust-lang/rust/issues/43754\n \n-#![feature(const_fn)]\n+#![feature(min_const_fn)]\n const fn foo(x: usize) -> usize {\n     return x;\n }"}, {"sha": "10482139a978c49297794d919ada6ddc2eb95666", "filename": "src/test/run-pass/issue-28822.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d125e904b5e298f710c7a5a1aaa3ebd953d2ced3/src%2Ftest%2Frun-pass%2Fissue-28822.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d125e904b5e298f710c7a5a1aaa3ebd953d2ced3/src%2Ftest%2Frun-pass%2Fissue-28822.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-28822.rs?ref=d125e904b5e298f710c7a5a1aaa3ebd953d2ced3", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![feature(const_fn)]\n+#![feature(min_const_fn)]\n \n fn main() {}\n "}, {"sha": "3079d9de3c23861af323b2e8e3cb40a1635f4441", "filename": "src/test/run-pass/issue-29927.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d125e904b5e298f710c7a5a1aaa3ebd953d2ced3/src%2Ftest%2Frun-pass%2Fissue-29927.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d125e904b5e298f710c7a5a1aaa3ebd953d2ced3/src%2Ftest%2Frun-pass%2Fissue-29927.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-29927.rs?ref=d125e904b5e298f710c7a5a1aaa3ebd953d2ced3", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![feature(const_fn)]\n+#![feature(min_const_fn)]\n struct A {\n     field: usize,\n }"}, {"sha": "7be79f3a450974bb6c76b6b93e29c8ff1f5813cc", "filename": "src/test/run-pass/issue-33537.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d125e904b5e298f710c7a5a1aaa3ebd953d2ced3/src%2Ftest%2Frun-pass%2Fissue-33537.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d125e904b5e298f710c7a5a1aaa3ebd953d2ced3/src%2Ftest%2Frun-pass%2Fissue-33537.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-33537.rs?ref=d125e904b5e298f710c7a5a1aaa3ebd953d2ced3", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![feature(const_fn)]\n+#![feature(min_const_fn)]\n \n const fn foo() -> *const i8 {\n     b\"foo\" as *const _ as *const i8"}, {"sha": "9b3289e67859a8da0cb2d9c292ba3393b2341227", "filename": "src/test/run-pass/issue-37991.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d125e904b5e298f710c7a5a1aaa3ebd953d2ced3/src%2Ftest%2Frun-pass%2Fissue-37991.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d125e904b5e298f710c7a5a1aaa3ebd953d2ced3/src%2Ftest%2Frun-pass%2Fissue-37991.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-37991.rs?ref=d125e904b5e298f710c7a5a1aaa3ebd953d2ced3", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![feature(const_fn)]\n+#![feature(min_const_fn)]\n \n const fn foo() -> i64 {\n     3"}, {"sha": "488bc6e6927a077561ae9153365407aa07f4c8c1", "filename": "src/test/run-pass/issue29927-1.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d125e904b5e298f710c7a5a1aaa3ebd953d2ced3/src%2Ftest%2Frun-pass%2Fissue29927-1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d125e904b5e298f710c7a5a1aaa3ebd953d2ced3/src%2Ftest%2Frun-pass%2Fissue29927-1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue29927-1.rs?ref=d125e904b5e298f710c7a5a1aaa3ebd953d2ced3", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![feature(const_fn)]\n+#![feature(min_const_fn)]\n const fn f() -> usize {\n     5\n }"}, {"sha": "0c1eedc86ccfd83cdcd60d6155fc670566cfa77a", "filename": "src/test/rustdoc/auxiliary/issue-27362.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d125e904b5e298f710c7a5a1aaa3ebd953d2ced3/src%2Ftest%2Frustdoc%2Fauxiliary%2Fissue-27362.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d125e904b5e298f710c7a5a1aaa3ebd953d2ced3/src%2Ftest%2Frustdoc%2Fauxiliary%2Fissue-27362.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fauxiliary%2Fissue-27362.rs?ref=d125e904b5e298f710c7a5a1aaa3ebd953d2ced3", "patch": "@@ -10,7 +10,7 @@\n \n // compile-flags: -Cmetadata=aux\n \n-#![feature(const_fn)]\n+#![feature(min_const_fn)]\n \n pub const fn foo() {}\n pub const unsafe fn bar() {}"}, {"sha": "dc7a2799b46a911a0c3e92583613ff021e9c0371", "filename": "src/test/rustdoc/const-fn.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d125e904b5e298f710c7a5a1aaa3ebd953d2ced3/src%2Ftest%2Frustdoc%2Fconst-fn.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d125e904b5e298f710c7a5a1aaa3ebd953d2ced3/src%2Ftest%2Frustdoc%2Fconst-fn.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fconst-fn.rs?ref=d125e904b5e298f710c7a5a1aaa3ebd953d2ced3", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![feature(const_fn)]\n+#![feature(min_const_fn)]\n #![crate_name = \"foo\"]\n \n // @has foo/fn.bar.html"}, {"sha": "49694e3ae08d1830599ce2d7946d8a8da2e15081", "filename": "src/test/rustdoc/const.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d125e904b5e298f710c7a5a1aaa3ebd953d2ced3/src%2Ftest%2Frustdoc%2Fconst.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d125e904b5e298f710c7a5a1aaa3ebd953d2ced3/src%2Ftest%2Frustdoc%2Fconst.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fconst.rs?ref=d125e904b5e298f710c7a5a1aaa3ebd953d2ced3", "patch": "@@ -10,7 +10,7 @@\n \n #![crate_type=\"lib\"]\n \n-#![feature(const_fn)]\n+#![feature(min_const_fn)]\n \n pub struct Foo;\n "}, {"sha": "d71c8462587d06e8e1411930b0791d66255ea65d", "filename": "src/test/ui/borrowck/move-in-static-initializer-issue-38520.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d125e904b5e298f710c7a5a1aaa3ebd953d2ced3/src%2Ftest%2Fui%2Fborrowck%2Fmove-in-static-initializer-issue-38520.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d125e904b5e298f710c7a5a1aaa3ebd953d2ced3/src%2Ftest%2Fui%2Fborrowck%2Fmove-in-static-initializer-issue-38520.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fborrowck%2Fmove-in-static-initializer-issue-38520.rs?ref=d125e904b5e298f710c7a5a1aaa3ebd953d2ced3", "patch": "@@ -15,7 +15,7 @@\n // permitted as `Foo` is not copy (even in a static/const\n // initializer).\n \n-#![feature(const_fn)]\n+#![feature(min_const_fn)]\n \n struct Foo(usize);\n "}, {"sha": "499227e71a74cc42bf5314b1de9a1ddd2a85b241", "filename": "src/test/ui/consts/auxiliary/const_fn_lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d125e904b5e298f710c7a5a1aaa3ebd953d2ced3/src%2Ftest%2Fui%2Fconsts%2Fauxiliary%2Fconst_fn_lib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d125e904b5e298f710c7a5a1aaa3ebd953d2ced3/src%2Ftest%2Fui%2Fconsts%2Fauxiliary%2Fconst_fn_lib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fauxiliary%2Fconst_fn_lib.rs?ref=d125e904b5e298f710c7a5a1aaa3ebd953d2ced3", "patch": "@@ -11,6 +11,6 @@\n // Crate that exports a const fn. Used for testing cross-crate.\n \n #![crate_type=\"rlib\"]\n-#![feature(const_fn)]\n+#![feature(min_const_fn)]\n \n pub const fn foo() -> usize { 22 } //~ ERROR const fn is unstable"}, {"sha": "200f423f6e39b5de9d5718650fcd299fc3577cbd", "filename": "src/test/ui/consts/const-eval/issue-43197.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d125e904b5e298f710c7a5a1aaa3ebd953d2ced3/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fissue-43197.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d125e904b5e298f710c7a5a1aaa3ebd953d2ced3/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fissue-43197.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fissue-43197.rs?ref=d125e904b5e298f710c7a5a1aaa3ebd953d2ced3", "patch": "@@ -10,7 +10,7 @@\n \n #![warn(const_err)]\n \n-#![feature(const_fn)]\n+#![feature(min_const_fn)]\n \n const fn foo(x: u32) -> u32 {\n     x"}, {"sha": "2bc860e3ef94fb2890dc870a709674a050893032", "filename": "src/test/ui/consts/const-eval/issue-47971.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d125e904b5e298f710c7a5a1aaa3ebd953d2ced3/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fissue-47971.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d125e904b5e298f710c7a5a1aaa3ebd953d2ced3/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fissue-47971.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fissue-47971.rs?ref=d125e904b5e298f710c7a5a1aaa3ebd953d2ced3", "patch": "@@ -10,7 +10,7 @@\n \n // compile-pass\n \n-#![feature(const_fn)]\n+#![feature(min_const_fn)]\n \n struct S(pub &'static u32, pub u32);\n "}, {"sha": "4f02b1eef3a0fef1a81922bc43a6c3aca273615c", "filename": "src/test/ui/consts/const-pattern-not-const-evaluable.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d125e904b5e298f710c7a5a1aaa3ebd953d2ced3/src%2Ftest%2Fui%2Fconsts%2Fconst-pattern-not-const-evaluable.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d125e904b5e298f710c7a5a1aaa3ebd953d2ced3/src%2Ftest%2Fui%2Fconsts%2Fconst-pattern-not-const-evaluable.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst-pattern-not-const-evaluable.rs?ref=d125e904b5e298f710c7a5a1aaa3ebd953d2ced3", "patch": "@@ -10,7 +10,7 @@\n \n // compile-pass\n \n-#![feature(const_fn)]\n+#![feature(min_const_fn)]\n \n #[derive(PartialEq, Eq)]\n enum Cake {"}, {"sha": "04c054f8b6db25dfa5ade5642953eb02ed8f73e2", "filename": "src/test/ui/consts/const-size_of-cycle.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d125e904b5e298f710c7a5a1aaa3ebd953d2ced3/src%2Ftest%2Fui%2Fconsts%2Fconst-size_of-cycle.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d125e904b5e298f710c7a5a1aaa3ebd953d2ced3/src%2Ftest%2Fui%2Fconsts%2Fconst-size_of-cycle.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst-size_of-cycle.rs?ref=d125e904b5e298f710c7a5a1aaa3ebd953d2ced3", "patch": "@@ -10,8 +10,6 @@\n \n // error-pattern: cycle detected\n \n-#![feature(const_fn)]\n-\n struct Foo {\n     bytes: [u8; std::mem::size_of::<Foo>()]\n }"}, {"sha": "63ae18cf9c2fa1d3c0cf735e778afb8aae26c965", "filename": "src/test/ui/infinite/infinite-recursion-const-fn.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d125e904b5e298f710c7a5a1aaa3ebd953d2ced3/src%2Ftest%2Fui%2Finfinite%2Finfinite-recursion-const-fn.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d125e904b5e298f710c7a5a1aaa3ebd953d2ced3/src%2Ftest%2Fui%2Finfinite%2Finfinite-recursion-const-fn.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Finfinite%2Finfinite-recursion-const-fn.rs?ref=d125e904b5e298f710c7a5a1aaa3ebd953d2ced3", "patch": "@@ -10,7 +10,7 @@\n \n //https://github.com/rust-lang/rust/issues/31364\n \n-#![feature(const_fn)]\n+#![feature(min_const_fn)]\n const fn a() -> usize { b() }\n const fn b() -> usize { a() }\n const ARR: [i32; a()] = [5; 6]; //~ ERROR could not evaluate constant expression"}, {"sha": "bd50f93945c51f00b0dfb18b93c75851bab993c2", "filename": "src/test/ui/issues/issue-44415.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d125e904b5e298f710c7a5a1aaa3ebd953d2ced3/src%2Ftest%2Fui%2Fissues%2Fissue-44415.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d125e904b5e298f710c7a5a1aaa3ebd953d2ced3/src%2Ftest%2Fui%2Fissues%2Fissue-44415.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-44415.rs?ref=d125e904b5e298f710c7a5a1aaa3ebd953d2ced3", "patch": "@@ -10,7 +10,7 @@\n \n //~^^^^^^^^^^ ERROR cycle detected when computing layout of\n \n-#![feature(const_fn)]\n+\n #![feature(core_intrinsics)]\n \n use std::intrinsics;"}, {"sha": "fe0bb7533a86f316f53ed19a548d763ea4a136bc", "filename": "src/test/ui/unsafe/unsafe-const-fn.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d125e904b5e298f710c7a5a1aaa3ebd953d2ced3/src%2Ftest%2Fui%2Funsafe%2Funsafe-const-fn.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d125e904b5e298f710c7a5a1aaa3ebd953d2ced3/src%2Ftest%2Fui%2Funsafe%2Funsafe-const-fn.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Funsafe%2Funsafe-const-fn.rs?ref=d125e904b5e298f710c7a5a1aaa3ebd953d2ced3", "patch": "@@ -10,7 +10,7 @@\n \n // A quick test of 'unsafe const fn' functionality\n \n-#![feature(const_fn)]\n+#![feature(min_const_fn)]\n \n const unsafe fn dummy(v: u32) -> u32 {\n     !v"}]}