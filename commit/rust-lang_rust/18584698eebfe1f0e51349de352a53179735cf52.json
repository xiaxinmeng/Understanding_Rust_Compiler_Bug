{"sha": "18584698eebfe1f0e51349de352a53179735cf52", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE4NTg0Njk4ZWViZmUxZjBlNTEzNDlkZTM1MmE1MzE3OTczNWNmNTI=", "commit": {"author": {"name": "Peter F\u00fcrstenau", "email": "fuerstenau@mathematik.tu-darmstadt.de", "date": "2018-12-19T19:46:12Z"}, "committer": {"name": "Peter F\u00fcrstenau", "email": "fuerstenau@mathematik.tu-darmstadt.de", "date": "2018-12-19T19:50:18Z"}, "message": "Add failing test", "tree": {"sha": "ff3c9148a39479b96a3ec61f6ba7c607529aa448", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ff3c9148a39479b96a3ec61f6ba7c607529aa448"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/18584698eebfe1f0e51349de352a53179735cf52", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/18584698eebfe1f0e51349de352a53179735cf52", "html_url": "https://github.com/rust-lang/rust/commit/18584698eebfe1f0e51349de352a53179735cf52", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/18584698eebfe1f0e51349de352a53179735cf52/comments", "author": {"login": "fuerstenau", "id": 44474815, "node_id": "MDQ6VXNlcjQ0NDc0ODE1", "avatar_url": "https://avatars.githubusercontent.com/u/44474815?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fuerstenau", "html_url": "https://github.com/fuerstenau", "followers_url": "https://api.github.com/users/fuerstenau/followers", "following_url": "https://api.github.com/users/fuerstenau/following{/other_user}", "gists_url": "https://api.github.com/users/fuerstenau/gists{/gist_id}", "starred_url": "https://api.github.com/users/fuerstenau/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fuerstenau/subscriptions", "organizations_url": "https://api.github.com/users/fuerstenau/orgs", "repos_url": "https://api.github.com/users/fuerstenau/repos", "events_url": "https://api.github.com/users/fuerstenau/events{/privacy}", "received_events_url": "https://api.github.com/users/fuerstenau/received_events", "type": "User", "site_admin": false}, "committer": {"login": "fuerstenau", "id": 44474815, "node_id": "MDQ6VXNlcjQ0NDc0ODE1", "avatar_url": "https://avatars.githubusercontent.com/u/44474815?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fuerstenau", "html_url": "https://github.com/fuerstenau", "followers_url": "https://api.github.com/users/fuerstenau/followers", "following_url": "https://api.github.com/users/fuerstenau/following{/other_user}", "gists_url": "https://api.github.com/users/fuerstenau/gists{/gist_id}", "starred_url": "https://api.github.com/users/fuerstenau/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fuerstenau/subscriptions", "organizations_url": "https://api.github.com/users/fuerstenau/orgs", "repos_url": "https://api.github.com/users/fuerstenau/repos", "events_url": "https://api.github.com/users/fuerstenau/events{/privacy}", "received_events_url": "https://api.github.com/users/fuerstenau/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e722b1338e22c46bbe74a8e7a82bc29916570105", "url": "https://api.github.com/repos/rust-lang/rust/commits/e722b1338e22c46bbe74a8e7a82bc29916570105", "html_url": "https://github.com/rust-lang/rust/commit/e722b1338e22c46bbe74a8e7a82bc29916570105"}], "stats": {"total": 61, "additions": 35, "deletions": 26}, "files": [{"sha": "880c163e833e6963f85c0278d0c76c5ac4eb6b92", "filename": "tests/ui/question_mark.rs", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/18584698eebfe1f0e51349de352a53179735cf52/tests%2Fui%2Fquestion_mark.rs", "raw_url": "https://github.com/rust-lang/rust/raw/18584698eebfe1f0e51349de352a53179735cf52/tests%2Fui%2Fquestion_mark.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fquestion_mark.rs?ref=18584698eebfe1f0e51349de352a53179735cf52", "patch": "@@ -15,6 +15,15 @@ fn some_func(a: Option<u32>) -> Option<u32> {\n     a\n }\n \n+fn some_other_func(a: Option<u32>) -> Option<u32> {\n+    if a.is_none() {\n+        return None;\n+    } else {\n+       return Some(0);\n+    }\n+    unreachable!()\n+}\n+\n pub enum SeemsOption<T> {\n     Some(T),\n     None,"}, {"sha": "f55a83d43c890dbd7c7e4281ff1c1776824f20e6", "filename": "tests/ui/question_mark.stderr", "status": "modified", "additions": 26, "deletions": 26, "changes": 52, "blob_url": "https://github.com/rust-lang/rust/blob/18584698eebfe1f0e51349de352a53179735cf52/tests%2Fui%2Fquestion_mark.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/18584698eebfe1f0e51349de352a53179735cf52/tests%2Fui%2Fquestion_mark.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fquestion_mark.stderr?ref=18584698eebfe1f0e51349de352a53179735cf52", "patch": "@@ -9,54 +9,54 @@ error: this block may be rewritten with the `?` operator\n    = note: `-D clippy::question-mark` implied by `-D warnings`\n \n error: this block may be rewritten with the `?` operator\n-  --> $DIR/question_mark.rs:47:9\n+  --> $DIR/question_mark.rs:56:9\n    |\n-47 | /         if (self.opt).is_none() {\n-48 | |             return None;\n-49 | |         }\n+56 | /         if (self.opt).is_none() {\n+57 | |             return None;\n+58 | |         }\n    | |_________^ help: replace_it_with: `(self.opt)?;`\n \n error: this block may be rewritten with the `?` operator\n-  --> $DIR/question_mark.rs:51:9\n+  --> $DIR/question_mark.rs:60:9\n    |\n-51 | /         if self.opt.is_none() {\n-52 | |             return None\n-53 | |         }\n+60 | /         if self.opt.is_none() {\n+61 | |             return None\n+62 | |         }\n    | |_________^ help: replace_it_with: `self.opt?;`\n \n error: this block may be rewritten with the `?` operator\n-  --> $DIR/question_mark.rs:55:17\n+  --> $DIR/question_mark.rs:64:17\n    |\n-55 |           let _ = if self.opt.is_none() {\n+64 |           let _ = if self.opt.is_none() {\n    |  _________________^\n-56 | |             return None;\n-57 | |         } else {\n-58 | |             self.opt\n-59 | |         };\n+65 | |             return None;\n+66 | |         } else {\n+67 | |             self.opt\n+68 | |         };\n    | |_________^ help: replace_it_with: `Some(self.opt?)`\n \n error: this block may be rewritten with the `?` operator\n-  --> $DIR/question_mark.rs:72:9\n+  --> $DIR/question_mark.rs:81:9\n    |\n-72 | /         if self.opt.is_none() {\n-73 | |             return None;\n-74 | |         }\n+81 | /         if self.opt.is_none() {\n+82 | |             return None;\n+83 | |         }\n    | |_________^ help: replace_it_with: `self.opt.as_ref()?;`\n \n error: this block may be rewritten with the `?` operator\n-  --> $DIR/question_mark.rs:80:9\n+  --> $DIR/question_mark.rs:89:9\n    |\n-80 | /         if self.opt.is_none() {\n-81 | |             return None;\n-82 | |         }\n+89 | /         if self.opt.is_none() {\n+90 | |             return None;\n+91 | |         }\n    | |_________^ help: replace_it_with: `self.opt.as_ref()?;`\n \n error: this block may be rewritten with the `?` operator\n-  --> $DIR/question_mark.rs:88:9\n+  --> $DIR/question_mark.rs:97:9\n    |\n-88 | /         if self.opt.is_none() {\n-89 | |             return None;\n-90 | |         }\n+97 | /         if self.opt.is_none() {\n+98 | |             return None;\n+99 | |         }\n    | |_________^ help: replace_it_with: `self.opt.as_ref()?;`\n \n error: aborting due to 7 previous errors"}]}