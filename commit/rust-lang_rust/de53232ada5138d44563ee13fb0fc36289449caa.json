{"sha": "de53232ada5138d44563ee13fb0fc36289449caa", "node_id": "C_kwDOAAsO6NoAKGRlNTMyMzJhZGE1MTM4ZDQ0NTYzZWUxM2ZiMGZjMzYyODk0NDljYWE", "commit": {"author": {"name": "Lauren\u021biu Nicola", "email": "lnicola@dend.ro", "date": "2022-03-17T13:10:25Z"}, "committer": {"name": "Lauren\u021biu Nicola", "email": "lnicola@dend.ro", "date": "2022-03-17T13:10:25Z"}, "message": "Emit #[must_use] in Generate enum is_variant assist", "tree": {"sha": "48f3e9fbd1604581324ce851cf49e155c643cd76", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/48f3e9fbd1604581324ce851cf49e155c643cd76"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/de53232ada5138d44563ee13fb0fc36289449caa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/de53232ada5138d44563ee13fb0fc36289449caa", "html_url": "https://github.com/rust-lang/rust/commit/de53232ada5138d44563ee13fb0fc36289449caa", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/de53232ada5138d44563ee13fb0fc36289449caa/comments", "author": {"login": "lnicola", "id": 308347, "node_id": "MDQ6VXNlcjMwODM0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/308347?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lnicola", "html_url": "https://github.com/lnicola", "followers_url": "https://api.github.com/users/lnicola/followers", "following_url": "https://api.github.com/users/lnicola/following{/other_user}", "gists_url": "https://api.github.com/users/lnicola/gists{/gist_id}", "starred_url": "https://api.github.com/users/lnicola/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lnicola/subscriptions", "organizations_url": "https://api.github.com/users/lnicola/orgs", "repos_url": "https://api.github.com/users/lnicola/repos", "events_url": "https://api.github.com/users/lnicola/events{/privacy}", "received_events_url": "https://api.github.com/users/lnicola/received_events", "type": "User", "site_admin": false}, "committer": {"login": "lnicola", "id": 308347, "node_id": "MDQ6VXNlcjMwODM0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/308347?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lnicola", "html_url": "https://github.com/lnicola", "followers_url": "https://api.github.com/users/lnicola/followers", "following_url": "https://api.github.com/users/lnicola/following{/other_user}", "gists_url": "https://api.github.com/users/lnicola/gists{/gist_id}", "starred_url": "https://api.github.com/users/lnicola/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lnicola/subscriptions", "organizations_url": "https://api.github.com/users/lnicola/orgs", "repos_url": "https://api.github.com/users/lnicola/repos", "events_url": "https://api.github.com/users/lnicola/events{/privacy}", "received_events_url": "https://api.github.com/users/lnicola/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "98143da79924fe2044acae749ffb01923f2f14c6", "url": "https://api.github.com/repos/rust-lang/rust/commits/98143da79924fe2044acae749ffb01923f2f14c6", "html_url": "https://github.com/rust-lang/rust/commit/98143da79924fe2044acae749ffb01923f2f14c6"}], "stats": {"total": 12, "additions": 12, "deletions": 0}, "files": [{"sha": "863ada79ba44c9020051a2f793365951da8b016c", "filename": "crates/ide_assists/src/handlers/generate_enum_is_method.rs", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/de53232ada5138d44563ee13fb0fc36289449caa/crates%2Fide_assists%2Fsrc%2Fhandlers%2Fgenerate_enum_is_method.rs", "raw_url": "https://github.com/rust-lang/rust/raw/de53232ada5138d44563ee13fb0fc36289449caa/crates%2Fide_assists%2Fsrc%2Fhandlers%2Fgenerate_enum_is_method.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_assists%2Fsrc%2Fhandlers%2Fgenerate_enum_is_method.rs?ref=de53232ada5138d44563ee13fb0fc36289449caa", "patch": "@@ -30,6 +30,7 @@ use crate::{\n //     /// Returns `true` if the version is [`Minor`].\n //     ///\n //     /// [`Minor`]: Version::Minor\n+//     #[must_use]\n //     fn is_minor(&self) -> bool {\n //         matches!(self, Self::Minor)\n //     }\n@@ -63,6 +64,7 @@ pub(crate) fn generate_enum_is_method(acc: &mut Assists, ctx: &AssistContext) ->\n                 \"    /// Returns `true` if the {} is [`{variant}`].\n     ///\n     /// [`{variant}`]: {}::{variant}\n+    #[must_use]\n     {}fn {}(&self) -> bool {{\n         matches!(self, Self::{variant}{})\n     }}\",\n@@ -105,6 +107,7 @@ impl Variant {\n     /// Returns `true` if the variant is [`Minor`].\n     ///\n     /// [`Minor`]: Variant::Minor\n+    #[must_use]\n     fn is_minor(&self) -> bool {\n         matches!(self, Self::Minor)\n     }\n@@ -151,6 +154,7 @@ impl Variant {\n     /// Returns `true` if the variant is [`Minor`].\n     ///\n     /// [`Minor`]: Variant::Minor\n+    #[must_use]\n     fn is_minor(&self) -> bool {\n         matches!(self, Self::Minor(..))\n     }\n@@ -178,6 +182,7 @@ impl Variant {\n     /// Returns `true` if the variant is [`Minor`].\n     ///\n     /// [`Minor`]: Variant::Minor\n+    #[must_use]\n     fn is_minor(&self) -> bool {\n         matches!(self, Self::Minor { .. })\n     }\n@@ -197,6 +202,7 @@ impl Variant {\n     /// Returns `true` if the variant is [`Undefined`].\n     ///\n     /// [`Undefined`]: Variant::Undefined\n+    #[must_use]\n     fn is_undefined(&self) -> bool {\n         matches!(self, Self::Undefined)\n     }\n@@ -224,6 +230,7 @@ impl Variant {\n     /// Returns `true` if the variant is [`Minor`].\n     ///\n     /// [`Minor`]: Variant::Minor\n+    #[must_use]\n     pub(crate) fn is_minor(&self) -> bool {\n         matches!(self, Self::Minor)\n     }\n@@ -246,6 +253,7 @@ impl Variant {\n     /// Returns `true` if the variant is [`Minor`].\n     ///\n     /// [`Minor`]: Variant::Minor\n+    #[must_use]\n     fn is_minor(&self) -> bool {\n         matches!(self, Self::Minor)\n     }\n@@ -260,13 +268,15 @@ impl Variant {\n     /// Returns `true` if the variant is [`Minor`].\n     ///\n     /// [`Minor`]: Variant::Minor\n+    #[must_use]\n     fn is_minor(&self) -> bool {\n         matches!(self, Self::Minor)\n     }\n \n     /// Returns `true` if the variant is [`Major`].\n     ///\n     /// [`Major`]: Variant::Major\n+    #[must_use]\n     fn is_major(&self) -> bool {\n         matches!(self, Self::Major)\n     }\n@@ -294,6 +304,7 @@ impl GeneratorState {\n     /// Returns `true` if the generator state is [`Complete`].\n     ///\n     /// [`Complete`]: GeneratorState::Complete\n+    #[must_use]\n     fn is_complete(&self) -> bool {\n         matches!(self, Self::Complete)\n     }"}, {"sha": "588ec1e114eaade90543fe8a8fda67fe29c97aed", "filename": "crates/ide_assists/src/tests/generated.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/de53232ada5138d44563ee13fb0fc36289449caa/crates%2Fide_assists%2Fsrc%2Ftests%2Fgenerated.rs", "raw_url": "https://github.com/rust-lang/rust/raw/de53232ada5138d44563ee13fb0fc36289449caa/crates%2Fide_assists%2Fsrc%2Ftests%2Fgenerated.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_assists%2Fsrc%2Ftests%2Fgenerated.rs?ref=de53232ada5138d44563ee13fb0fc36289449caa", "patch": "@@ -922,6 +922,7 @@ impl Version {\n     /// Returns `true` if the version is [`Minor`].\n     ///\n     /// [`Minor`]: Version::Minor\n+    #[must_use]\n     fn is_minor(&self) -> bool {\n         matches!(self, Self::Minor)\n     }"}]}