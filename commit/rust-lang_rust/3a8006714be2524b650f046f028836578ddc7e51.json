{"sha": "3a8006714be2524b650f046f028836578ddc7e51", "node_id": "C_kwDOAAsO6NoAKDNhODAwNjcxNGJlMjUyNGI2NTBmMDQ2ZjAyODgzNjU3OGRkYzdlNTE", "commit": {"author": {"name": "R\u00e9my Rakic", "email": "remy.rakic+github@gmail.com", "date": "2022-04-01T19:01:47Z"}, "committer": {"name": "R\u00e9my Rakic", "email": "remy.rakic+github@gmail.com", "date": "2022-04-07T13:47:20Z"}, "message": "simplify a self-profiling activity call in the LLVM backend\n\nand so that it doesn't allocate unless event argument recording is turned on", "tree": {"sha": "6423b27be4cc11d4084c4070316db380c4e797df", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6423b27be4cc11d4084c4070316db380c4e797df"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3a8006714be2524b650f046f028836578ddc7e51", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3a8006714be2524b650f046f028836578ddc7e51", "html_url": "https://github.com/rust-lang/rust/commit/3a8006714be2524b650f046f028836578ddc7e51", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3a8006714be2524b650f046f028836578ddc7e51/comments", "author": {"login": "lqd", "id": 247183, "node_id": "MDQ6VXNlcjI0NzE4Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/247183?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lqd", "html_url": "https://github.com/lqd", "followers_url": "https://api.github.com/users/lqd/followers", "following_url": "https://api.github.com/users/lqd/following{/other_user}", "gists_url": "https://api.github.com/users/lqd/gists{/gist_id}", "starred_url": "https://api.github.com/users/lqd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lqd/subscriptions", "organizations_url": "https://api.github.com/users/lqd/orgs", "repos_url": "https://api.github.com/users/lqd/repos", "events_url": "https://api.github.com/users/lqd/events{/privacy}", "received_events_url": "https://api.github.com/users/lqd/received_events", "type": "User", "site_admin": false}, "committer": {"login": "lqd", "id": 247183, "node_id": "MDQ6VXNlcjI0NzE4Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/247183?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lqd", "html_url": "https://github.com/lqd", "followers_url": "https://api.github.com/users/lqd/followers", "following_url": "https://api.github.com/users/lqd/following{/other_user}", "gists_url": "https://api.github.com/users/lqd/gists{/gist_id}", "starred_url": "https://api.github.com/users/lqd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lqd/subscriptions", "organizations_url": "https://api.github.com/users/lqd/orgs", "repos_url": "https://api.github.com/users/lqd/repos", "events_url": "https://api.github.com/users/lqd/events{/privacy}", "received_events_url": "https://api.github.com/users/lqd/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "75852696735110cb41903e0699a4fc0e8617fce8", "url": "https://api.github.com/repos/rust-lang/rust/commits/75852696735110cb41903e0699a4fc0e8617fce8", "html_url": "https://github.com/rust-lang/rust/commit/75852696735110cb41903e0699a4fc0e8617fce8"}], "stats": {"total": 3, "additions": 1, "deletions": 2}, "files": [{"sha": "7ef3b12cd08dab5c5a2b7f71ca1ceb70668c388d", "filename": "compiler/rustc_codegen_llvm/src/back/write.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/3a8006714be2524b650f046f028836578ddc7e51/compiler%2Frustc_codegen_llvm%2Fsrc%2Fback%2Fwrite.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3a8006714be2524b650f046f028836578ddc7e51/compiler%2Frustc_codegen_llvm%2Fsrc%2Fback%2Fwrite.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_llvm%2Fsrc%2Fback%2Fwrite.rs?ref=3a8006714be2524b650f046f028836578ddc7e51", "patch": "@@ -721,8 +721,7 @@ pub(crate) fn link(\n \n     let mut linker = Linker::new(first.module_llvm.llmod());\n     for module in elements {\n-        let _timer =\n-            cgcx.prof.generic_activity_with_arg(\"LLVM_link_module\", format!(\"{:?}\", module.name));\n+        let _timer = cgcx.prof.generic_activity_with_arg(\"LLVM_link_module\", &*module.name);\n         let buffer = ModuleBuffer::new(module.module_llvm.llmod());\n         linker.add(buffer.data()).map_err(|()| {\n             let msg = format!(\"failed to serialize module {:?}\", module.name);"}]}