{"sha": "1e960999185ecba7525285fc72695b7407833268", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFlOTYwOTk5MTg1ZWNiYTc1MjUyODVmYzcyNjk1Yjc0MDc4MzMyNjg=", "commit": {"author": {"name": "Eric Holk", "email": "eric.holk@gmail.com", "date": "2012-08-15T17:45:10Z"}, "committer": {"name": "Eric Holk", "email": "eric.holk@gmail.com", "date": "2012-08-15T18:45:32Z"}, "message": "Add trace_macros!", "tree": {"sha": "1aba5745ad76e44583d7023453baf5dc1b4deead", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1aba5745ad76e44583d7023453baf5dc1b4deead"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1e960999185ecba7525285fc72695b7407833268", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1e960999185ecba7525285fc72695b7407833268", "html_url": "https://github.com/rust-lang/rust/commit/1e960999185ecba7525285fc72695b7407833268", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1e960999185ecba7525285fc72695b7407833268/comments", "author": {"login": "eholk", "id": 105766, "node_id": "MDQ6VXNlcjEwNTc2Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/105766?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eholk", "html_url": "https://github.com/eholk", "followers_url": "https://api.github.com/users/eholk/followers", "following_url": "https://api.github.com/users/eholk/following{/other_user}", "gists_url": "https://api.github.com/users/eholk/gists{/gist_id}", "starred_url": "https://api.github.com/users/eholk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eholk/subscriptions", "organizations_url": "https://api.github.com/users/eholk/orgs", "repos_url": "https://api.github.com/users/eholk/repos", "events_url": "https://api.github.com/users/eholk/events{/privacy}", "received_events_url": "https://api.github.com/users/eholk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "eholk", "id": 105766, "node_id": "MDQ6VXNlcjEwNTc2Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/105766?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eholk", "html_url": "https://github.com/eholk", "followers_url": "https://api.github.com/users/eholk/followers", "following_url": "https://api.github.com/users/eholk/following{/other_user}", "gists_url": "https://api.github.com/users/eholk/gists{/gist_id}", "starred_url": "https://api.github.com/users/eholk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eholk/subscriptions", "organizations_url": "https://api.github.com/users/eholk/orgs", "repos_url": "https://api.github.com/users/eholk/repos", "events_url": "https://api.github.com/users/eholk/events{/privacy}", "received_events_url": "https://api.github.com/users/eholk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "00ef5418d44a191b464db87b99d8034202c86c7d", "url": "https://api.github.com/repos/rust-lang/rust/commits/00ef5418d44a191b464db87b99d8034202c86c7d", "html_url": "https://github.com/rust-lang/rust/commit/00ef5418d44a191b464db87b99d8034202c86c7d"}], "stats": {"total": 58, "additions": 51, "deletions": 7}, "files": [{"sha": "b8c036f5724ddbfedbe7a8e9be8c88ad11425fd4", "filename": "src/libsyntax/ext/base.rs", "status": "modified", "additions": 15, "deletions": 2, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/1e960999185ecba7525285fc72695b7407833268/src%2Flibsyntax%2Fext%2Fbase.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1e960999185ecba7525285fc72695b7407833268/src%2Flibsyntax%2Fext%2Fbase.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fbase.rs?ref=1e960999185ecba7525285fc72695b7407833268", "patch": "@@ -111,6 +111,9 @@ fn syntax_expander_table() -> hashmap<~str, syntax_extension> {\n                             builtin(ext::source_util::expand_mod));\n     syntax_expanders.insert(~\"proto\",\n                             builtin_item_tt(ext::pipes::expand_proto));\n+    syntax_expanders.insert(\n+        ~\"trace_macros\",\n+        builtin_expr_tt(ext::trace_macros::expand_trace_macros));\n     return syntax_expanders;\n }\n \n@@ -136,14 +139,17 @@ trait ext_ctxt {\n     fn span_bug(sp: span, msg: ~str) -> !;\n     fn bug(msg: ~str) -> !;\n     fn next_id() -> ast::node_id;\n+    pure fn trace_macros() -> bool;\n+    fn set_trace_macros(x: bool);\n }\n \n fn mk_ctxt(parse_sess: parse::parse_sess,\n            cfg: ast::crate_cfg) -> ext_ctxt {\n     type ctxt_repr = {parse_sess: parse::parse_sess,\n                       cfg: ast::crate_cfg,\n                       mut backtrace: expn_info,\n-                      mut mod_path: ~[ast::ident]};\n+                      mut mod_path: ~[ast::ident],\n+                      mut trace_mac: bool};\n     impl ctxt_repr: ext_ctxt {\n         fn codemap() -> codemap { self.parse_sess.cm }\n         fn parse_sess() -> parse::parse_sess { self.parse_sess }\n@@ -199,12 +205,19 @@ fn mk_ctxt(parse_sess: parse::parse_sess,\n         fn next_id() -> ast::node_id {\n             return parse::next_node_id(self.parse_sess);\n         }\n+        pure fn trace_macros() -> bool {\n+            self.trace_mac\n+        }\n+        fn set_trace_macros(x: bool) {\n+            self.trace_mac = x\n+        }\n     }\n     let imp : ctxt_repr = {\n         parse_sess: parse_sess,\n         cfg: cfg,\n         mut backtrace: none,\n-        mut mod_path: ~[]\n+        mut mod_path: ~[],\n+        mut trace_mac: false\n     };\n     return imp as ext_ctxt\n }"}, {"sha": "d4f1493169f18b3b0466170f0c2d7e7a884ddd7c", "filename": "src/libsyntax/ext/trace_macros.rs", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/1e960999185ecba7525285fc72695b7407833268/src%2Flibsyntax%2Fext%2Ftrace_macros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1e960999185ecba7525285fc72695b7407833268/src%2Flibsyntax%2Fext%2Ftrace_macros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Ftrace_macros.rs?ref=1e960999185ecba7525285fc72695b7407833268", "patch": "@@ -0,0 +1,27 @@\n+import codemap::span;\n+import ext::base::ext_ctxt;\n+import ast::tt_delim;\n+import parse::lexer::{new_tt_reader, reader};\n+import parse::parser::{parser, SOURCE_FILE};\n+import parse::common::parser_common;\n+\n+fn expand_trace_macros(cx: ext_ctxt, sp: span,\n+                       tt: ~[ast::token_tree]) -> base::mac_result\n+{\n+    let sess = cx.parse_sess();\n+    let cfg = cx.cfg();\n+    let tt_rdr = new_tt_reader(cx.parse_sess().span_diagnostic,\n+                               cx.parse_sess().interner, none, tt);\n+    let rdr = tt_rdr as reader;\n+    let rust_parser = parser(sess, cfg, rdr.dup(), SOURCE_FILE);\n+\n+    let arg = rust_parser.parse_ident();\n+    match arg {\n+      @~\"true\"  => cx.set_trace_macros(true),\n+      @~\"false\" => cx.set_trace_macros(false),\n+      _ => cx.span_fatal(sp, ~\"trace_macros! only accepts `true` or `false`\")\n+    }\n+    let rust_parser = parser(sess, cfg, rdr.dup(), SOURCE_FILE);\n+    let result = rust_parser.parse_expr();\n+    base::mr_expr(result)\n+}"}, {"sha": "05db498a0221e5d6207fefce502e96c8ab8a6197", "filename": "src/libsyntax/ext/tt/macro_rules.rs", "status": "modified", "additions": 7, "deletions": 5, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/1e960999185ecba7525285fc72695b7407833268/src%2Flibsyntax%2Fext%2Ftt%2Fmacro_rules.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1e960999185ecba7525285fc72695b7407833268/src%2Flibsyntax%2Fext%2Ftt%2Fmacro_rules.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Ftt%2Fmacro_rules.rs?ref=1e960999185ecba7525285fc72695b7407833268", "patch": "@@ -47,15 +47,17 @@ fn add_new_extension(cx: ext_ctxt, sp: span, name: ident,\n     };\n \n     // Given `lhses` and `rhses`, this is the new macro we create\n-    fn generic_extension(cx: ext_ctxt, sp: span, _name: ident,\n+    fn generic_extension(cx: ext_ctxt, sp: span, name: ident,\n                          arg: ~[ast::token_tree],\n                          lhses: ~[@named_match], rhses: ~[@named_match])\n     -> mac_result {\n \n-        //io::println(fmt!(\"%s! { %s }\", *name,\n-        //                 print::pprust::unexpanded_tt_to_str(\n-        //                     ast::tt_delim(arg),\n-        //                     cx.parse_sess().interner)));\n+        if cx.trace_macros() {\n+            io::println(fmt!(\"%s! { %s }\", *name,\n+                             print::pprust::unexpanded_tt_to_str(\n+                                 ast::tt_delim(arg),\n+                                 cx.parse_sess().interner)));\n+        }\n \n         // Which arm's failure should we report? (the one furthest along)\n         let mut best_fail_spot = {lo: 0u, hi: 0u, expn_info: none};"}, {"sha": "ab2a83342eb40e6e7417ea32ee17958102341ab2", "filename": "src/libsyntax/syntax.rc", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1e960999185ecba7525285fc72695b7407833268/src%2Flibsyntax%2Fsyntax.rc", "raw_url": "https://github.com/rust-lang/rust/raw/1e960999185ecba7525285fc72695b7407833268/src%2Flibsyntax%2Fsyntax.rc", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fsyntax.rc?ref=1e960999185ecba7525285fc72695b7407833268", "patch": "@@ -89,4 +89,6 @@ mod ext {\n         mod check;\n         mod liveness;\n     }\n+\n+    mod trace_macros;\n }"}]}