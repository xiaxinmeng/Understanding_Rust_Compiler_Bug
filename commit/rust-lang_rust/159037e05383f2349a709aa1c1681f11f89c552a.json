{"sha": "159037e05383f2349a709aa1c1681f11f89c552a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE1OTAzN2UwNTM4M2YyMzQ5YTcwOWFhMWMxNjgxZjExZjg5YzU1MmE=", "commit": {"author": {"name": "Felix S. Klock II", "email": "pnkfelix@pnkfx.org", "date": "2017-12-14T23:34:16Z"}, "committer": {"name": "Felix S. Klock II", "email": "pnkfelix@pnkfx.org", "date": "2017-12-14T23:34:16Z"}, "message": "Address review feedback: don't treat \"first\" activation special.\n\nInstead, filter out (non-)conflicts of activiations with themselves in\nthe same manner that we filter out non-conflict between an activation\nand its reservation.", "tree": {"sha": "4dbd23ec3e112d27232282db1871d4544d23c52f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4dbd23ec3e112d27232282db1871d4544d23c52f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/159037e05383f2349a709aa1c1681f11f89c552a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/159037e05383f2349a709aa1c1681f11f89c552a", "html_url": "https://github.com/rust-lang/rust/commit/159037e05383f2349a709aa1c1681f11f89c552a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/159037e05383f2349a709aa1c1681f11f89c552a/comments", "author": {"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d654cd3b8bdbeee7a0bf9dac89de7e3e4f535e99", "url": "https://api.github.com/repos/rust-lang/rust/commits/d654cd3b8bdbeee7a0bf9dac89de7e3e4f535e99", "html_url": "https://github.com/rust-lang/rust/commit/d654cd3b8bdbeee7a0bf9dac89de7e3e4f535e99"}], "stats": {"total": 20, "additions": 14, "deletions": 6}, "files": [{"sha": "39bcd2b6ae06382e738be72c314573fef832c326", "filename": "src/librustc_mir/borrow_check/mod.rs", "status": "modified", "additions": 14, "deletions": 6, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/159037e05383f2349a709aa1c1681f11f89c552a/src%2Flibrustc_mir%2Fborrow_check%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/159037e05383f2349a709aa1c1681f11f89c552a/src%2Flibrustc_mir%2Fborrow_check%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Fmod.rs?ref=159037e05383f2349a709aa1c1681f11f89c552a", "patch": "@@ -732,10 +732,19 @@ impl<'cx, 'gcx, 'tcx> MirBorrowckCtxt<'cx, 'gcx, 'tcx> {\n             (sd, place_span.0),\n             flow_state,\n             |this, index, borrow| match (rw, borrow.kind) {\n-                // Obviously an activation is compatible with its own reservation;\n-                // so don't check if they interfere.\n-                (Activation(_, activating), _) if index.is_reservation() &&\n-                    activating == index.borrow_index() => Control::Continue,\n+                // Obviously an activation is compatible with its own\n+                // reservation (or even prior activating uses of same\n+                // borrow); so don't check if they interfere.\n+                //\n+                // NOTE: *reservations* do conflict with themselves;\n+                // thus aren't injecting unsoundenss w/ this check.)\n+                (Activation(_, activating), _) if activating == index.borrow_index() =>\n+                {\n+                    debug!(\"check_access_for_conflict place_span: {:?} sd: {:?} rw: {:?} \\\n+                            skipping {:?} b/c activation of same borrow_index: {:?}\",\n+                           place_span, sd, rw, (index, borrow), index.borrow_index());\n+                    Control::Continue\n+                }\n \n                 (Read(_), BorrowKind::Shared) |\n                 (Reservation(..), BorrowKind::Shared) => Control::Continue,\n@@ -1086,8 +1095,7 @@ impl<'cx, 'gcx, 'tcx> MirBorrowckCtxt<'cx, 'gcx, 'tcx> {\n         let domain = flow_state.borrows.operator();\n         let data = domain.borrows();\n         flow_state.borrows.each_gen_bit(|gen| {\n-            if gen.is_activation() && // must be activation,\n-                !flow_state.borrows.contains(&gen) // and newly generated.\n+            if gen.is_activation()\n             {\n                 let borrow_index = gen.borrow_index();\n                 let borrow = &data[borrow_index];"}]}