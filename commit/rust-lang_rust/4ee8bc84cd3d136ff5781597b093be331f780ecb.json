{"sha": "4ee8bc84cd3d136ff5781597b093be331f780ecb", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRlZThiYzg0Y2QzZDEzNmZmNTc4MTU5N2IwOTNiZTMzMWY3ODBlY2I=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2019-09-09T16:56:51Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2019-09-09T16:56:51Z"}, "message": "Auto merge of #4527 - rust-lang:more-vec-diag-items, r=oli-obk\n\nChanged more `Vec` paths to diagnostic_items\n\nIn #4519, I missed a few instances of path matching for `Vec`, so here they are.\n\nr? @oli-obk\n\nchangelog: none", "tree": {"sha": "d8899bbec5dda1b54fb3f02b43edb1393087583a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d8899bbec5dda1b54fb3f02b43edb1393087583a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4ee8bc84cd3d136ff5781597b093be331f780ecb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4ee8bc84cd3d136ff5781597b093be331f780ecb", "html_url": "https://github.com/rust-lang/rust/commit/4ee8bc84cd3d136ff5781597b093be331f780ecb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4ee8bc84cd3d136ff5781597b093be331f780ecb/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c733376a5f0af6ed0f57a79a172e50ca1895b678", "url": "https://api.github.com/repos/rust-lang/rust/commits/c733376a5f0af6ed0f57a79a172e50ca1895b678", "html_url": "https://github.com/rust-lang/rust/commit/c733376a5f0af6ed0f57a79a172e50ca1895b678"}, {"sha": "507c03a85955ab0d165df55a20c781808296017c", "url": "https://api.github.com/repos/rust-lang/rust/commits/507c03a85955ab0d165df55a20c781808296017c", "html_url": "https://github.com/rust-lang/rust/commit/507c03a85955ab0d165df55a20c781808296017c"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "7431b7818e7b050534eefae9e3d97ca7cf8c4575", "filename": "clippy_lints/src/get_last_with_len.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/4ee8bc84cd3d136ff5781597b093be331f780ecb/clippy_lints%2Fsrc%2Fget_last_with_len.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4ee8bc84cd3d136ff5781597b093be331f780ecb/clippy_lints%2Fsrc%2Fget_last_with_len.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fget_last_with_len.rs?ref=4ee8bc84cd3d136ff5781597b093be331f780ecb", "patch": "@@ -1,6 +1,6 @@\n //! lint on using `x.get(x.len() - 1)` instead of `x.last()`\n \n-use crate::utils::{match_type, paths, snippet_with_applicability, span_lint_and_sugg, SpanlessEq};\n+use crate::utils::{is_type_diagnostic_item, snippet_with_applicability, span_lint_and_sugg, SpanlessEq};\n use if_chain::if_chain;\n use rustc::hir::{BinOpKind, Expr, ExprKind};\n use rustc::lint::{LateContext, LateLintPass, LintArray, LintPass};\n@@ -56,7 +56,7 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for GetLastWithLen {\n             // Argument 0 (the struct we're calling the method on) is a vector\n             if let Some(struct_calling_on) = args.get(0);\n             let struct_ty = cx.tables.expr_ty(struct_calling_on);\n-            if match_type(cx, struct_ty, &paths::VEC);\n+            if is_type_diagnostic_item(cx, struct_ty, Symbol::intern(\"vec_type\"));\n \n             // Argument to \"get\" is a subtraction\n             if let Some(get_index_arg) = args.get(1);"}, {"sha": "5816224a27562b04fc457e28c41623e2f33d54b3", "filename": "clippy_lints/src/loops.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4ee8bc84cd3d136ff5781597b093be331f780ecb/clippy_lints%2Fsrc%2Floops.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4ee8bc84cd3d136ff5781597b093be331f780ecb/clippy_lints%2Fsrc%2Floops.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Floops.rs?ref=4ee8bc84cd3d136ff5781597b093be331f780ecb", "patch": "@@ -2399,7 +2399,7 @@ fn check_needless_collect<'a, 'tcx>(expr: &'tcx Expr, cx: &LateContext<'a, 'tcx>\n         if let Some(GenericArg::Type(ref ty)) = generic_args.args.get(0);\n         then {\n             let ty = cx.tables.node_type(ty.hir_id);\n-            if match_type(cx, ty, &paths::VEC) ||\n+            if is_type_diagnostic_item(cx, ty, Symbol::intern(\"vec_type\")) ||\n                 match_type(cx, ty, &paths::VEC_DEQUE) ||\n                 match_type(cx, ty, &paths::BTREEMAP) ||\n                 match_type(cx, ty, &paths::HASHMAP) {"}, {"sha": "7a2f6fcf28d1193c724a684cb7eff2280099e3fc", "filename": "clippy_lints/src/methods/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4ee8bc84cd3d136ff5781597b093be331f780ecb/clippy_lints%2Fsrc%2Fmethods%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4ee8bc84cd3d136ff5781597b093be331f780ecb/clippy_lints%2Fsrc%2Fmethods%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmethods%2Fmod.rs?ref=4ee8bc84cd3d136ff5781597b093be331f780ecb", "patch": "@@ -1988,7 +1988,7 @@ fn derefs_to_slice<'a, 'tcx>(\n         match ty.sty {\n             ty::Slice(_) => true,\n             ty::Adt(def, _) if def.is_box() => may_slice(cx, ty.boxed_ty()),\n-            ty::Adt(..) => match_type(cx, ty, &paths::VEC),\n+            ty::Adt(..) => is_type_diagnostic_item(cx, ty, Symbol::intern(\"vec_type\")),\n             ty::Array(_, size) => size.eval_usize(cx.tcx, cx.param_env) < 32,\n             ty::Ref(_, inner, _) => may_slice(cx, inner),\n             _ => false,"}]}