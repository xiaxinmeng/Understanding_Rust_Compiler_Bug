{"sha": "8ffab392ab286ac4e8028adcdae78e512c6409eb", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhmZmFiMzkyYWIyODZhYzRlODAyOGFkY2RhZTc4ZTUxMmM2NDA5ZWI=", "commit": {"author": {"name": "Ben Blum", "email": "bblum@andrew.cmu.edu", "date": "2012-07-09T17:56:47Z"}, "committer": {"name": "Ben Blum", "email": "bblum@andrew.cmu.edu", "date": "2012-07-09T18:01:39Z"}, "message": "change borrowck error msg: 'declared in outer block' -> 'captured in a closure' (properly this time)", "tree": {"sha": "535bf806723466feae5fc90d454ecaddbb2a54d3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/535bf806723466feae5fc90d454ecaddbb2a54d3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8ffab392ab286ac4e8028adcdae78e512c6409eb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8ffab392ab286ac4e8028adcdae78e512c6409eb", "html_url": "https://github.com/rust-lang/rust/commit/8ffab392ab286ac4e8028adcdae78e512c6409eb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8ffab392ab286ac4e8028adcdae78e512c6409eb/comments", "author": {"login": "bblum", "id": 1820515, "node_id": "MDQ6VXNlcjE4MjA1MTU=", "avatar_url": "https://avatars.githubusercontent.com/u/1820515?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bblum", "html_url": "https://github.com/bblum", "followers_url": "https://api.github.com/users/bblum/followers", "following_url": "https://api.github.com/users/bblum/following{/other_user}", "gists_url": "https://api.github.com/users/bblum/gists{/gist_id}", "starred_url": "https://api.github.com/users/bblum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bblum/subscriptions", "organizations_url": "https://api.github.com/users/bblum/orgs", "repos_url": "https://api.github.com/users/bblum/repos", "events_url": "https://api.github.com/users/bblum/events{/privacy}", "received_events_url": "https://api.github.com/users/bblum/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bblum", "id": 1820515, "node_id": "MDQ6VXNlcjE4MjA1MTU=", "avatar_url": "https://avatars.githubusercontent.com/u/1820515?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bblum", "html_url": "https://github.com/bblum", "followers_url": "https://api.github.com/users/bblum/followers", "following_url": "https://api.github.com/users/bblum/following{/other_user}", "gists_url": "https://api.github.com/users/bblum/gists{/gist_id}", "starred_url": "https://api.github.com/users/bblum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bblum/subscriptions", "organizations_url": "https://api.github.com/users/bblum/orgs", "repos_url": "https://api.github.com/users/bblum/repos", "events_url": "https://api.github.com/users/bblum/events{/privacy}", "received_events_url": "https://api.github.com/users/bblum/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e41029d236c940e7ffb08c43e6cee23025ba029d", "url": "https://api.github.com/repos/rust-lang/rust/commits/e41029d236c940e7ffb08c43e6cee23025ba029d", "html_url": "https://github.com/rust-lang/rust/commit/e41029d236c940e7ffb08c43e6cee23025ba029d"}], "stats": {"total": 22, "additions": 12, "deletions": 10}, "files": [{"sha": "eb78e46f273bccd1f6a45fb1d3e5780a9ff212e6", "filename": "src/rustc/middle/borrowck.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/8ffab392ab286ac4e8028adcdae78e512c6409eb/src%2Frustc%2Fmiddle%2Fborrowck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8ffab392ab286ac4e8028adcdae78e512c6409eb/src%2Frustc%2Fmiddle%2Fborrowck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustc%2Fmiddle%2Fborrowck.rs?ref=8ffab392ab286ac4e8028adcdae78e512c6409eb", "patch": "@@ -467,15 +467,17 @@ impl to_str_methods for borrowck_ctxt {\n           cat_special(sk_method) { \"method\" }\n           cat_special(sk_static_item) { \"static item\" }\n           cat_special(sk_self) { \"self reference\" }\n-          cat_special(sk_heap_upvar) { \"variable declared in an outer block\" }\n+          cat_special(sk_heap_upvar) {\n+              \"captured outer variable in a heap closure\"\n+          }\n           cat_rvalue { \"non-lvalue\" }\n           cat_local(_) { mut_str + \" local variable\" }\n           cat_binding(_) { \"pattern binding\" }\n           cat_arg(_) { \"argument\" }\n           cat_deref(_, _, pk) { #fmt[\"dereference of %s %s pointer\",\n                                      mut_str, self.pk_to_sigil(pk)] }\n           cat_stack_upvar(_) {\n-            mut_str + \" variable declared in an outer block\"\n+            \"captured outer \" + mut_str + \" variable in a stack closure\"\n           }\n           cat_comp(_, comp_field(*)) { mut_str + \" field\" }\n           cat_comp(_, comp_tuple) { \"tuple content\" }"}, {"sha": "cfcf2bffb34476b02a2dde2d9298f5335c006218", "filename": "src/test/compile-fail/block-deinitializes-upvar.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8ffab392ab286ac4e8028adcdae78e512c6409eb/src%2Ftest%2Fcompile-fail%2Fblock-deinitializes-upvar.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8ffab392ab286ac4e8028adcdae78e512c6409eb/src%2Ftest%2Fcompile-fail%2Fblock-deinitializes-upvar.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fblock-deinitializes-upvar.rs?ref=8ffab392ab286ac4e8028adcdae78e512c6409eb", "patch": "@@ -1,4 +1,4 @@\n-// error-pattern:moving out of immutable variable declared in an outer block\n+// error-pattern:moving out of captured outer immutable variable in a stack closure\n fn force(f: fn()) { f(); }\n fn main() {\n     let mut x = @{x: 17, y: 2};"}, {"sha": "9a0af32e78be0a20be2fc110b256b01618f2383e", "filename": "src/test/compile-fail/borrowck-lend-flow.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/8ffab392ab286ac4e8028adcdae78e512c6409eb/src%2Ftest%2Fcompile-fail%2Fborrowck-lend-flow.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8ffab392ab286ac4e8028adcdae78e512c6409eb/src%2Ftest%2Fcompile-fail%2Fborrowck-lend-flow.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fborrowck-lend-flow.rs?ref=8ffab392ab286ac4e8028adcdae78e512c6409eb", "patch": "@@ -63,7 +63,7 @@ fn loop_in_block() {\n     let mut v = ~3, w = ~4;\n     let mut _x = &mut w;\n     for uint::range(0u, 10u) |_i| {\n-        borrow(v); //~ ERROR loan of mutable variable declared in an outer block as immutable conflicts with prior loan\n+        borrow(v); //~ ERROR loan of captured outer mutable variable in a stack closure as immutable conflicts with prior loan\n         _x = &mut v; //~ NOTE prior loan as mutable granted here\n     }\n }\n@@ -77,7 +77,7 @@ fn at_most_once_block() {\n     let mut v = ~3, w = ~4;\n     let mut _x = &mut w;\n     do at_most_once {\n-        borrow(v); //~ ERROR loan of mutable variable declared in an outer block as immutable conflicts with prior loan\n+        borrow(v); //~ ERROR loan of captured outer mutable variable in a stack closure as immutable conflicts with prior loan\n         _x = &mut v; //~ NOTE prior loan as mutable granted here\n     }\n }"}, {"sha": "2483c3e24f6356c95ffbb5bb5539bffa5d715727", "filename": "src/test/compile-fail/borrowck-loan-blocks-mut-uniq.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8ffab392ab286ac4e8028adcdae78e512c6409eb/src%2Ftest%2Fcompile-fail%2Fborrowck-loan-blocks-mut-uniq.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8ffab392ab286ac4e8028adcdae78e512c6409eb/src%2Ftest%2Fcompile-fail%2Fborrowck-loan-blocks-mut-uniq.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fborrowck-loan-blocks-mut-uniq.rs?ref=8ffab392ab286ac4e8028adcdae78e512c6409eb", "patch": "@@ -5,7 +5,7 @@ fn borrow(v: &int, f: fn(x: &int)) {\n fn box_imm() {\n     let mut v = ~3;\n     do borrow(v) |w| { //~ NOTE loan of mutable local variable granted here\n-        v = ~4; //~ ERROR assigning to mutable variable declared in an outer block prohibited due to outstanding loan\n+        v = ~4; //~ ERROR assigning to captured outer mutable variable in a stack closure prohibited due to outstanding loan\n         assert *v == 3;\n         assert *w == 4;\n     }"}, {"sha": "6fd57cd09e234b7cef7f65292f3deaaf316c4592", "filename": "src/test/compile-fail/cap-clause-move-upvar.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8ffab392ab286ac4e8028adcdae78e512c6409eb/src%2Ftest%2Fcompile-fail%2Fcap-clause-move-upvar.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8ffab392ab286ac4e8028adcdae78e512c6409eb/src%2Ftest%2Fcompile-fail%2Fcap-clause-move-upvar.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fcap-clause-move-upvar.rs?ref=8ffab392ab286ac4e8028adcdae78e512c6409eb", "patch": "@@ -1,7 +1,7 @@\n fn main() {\n     let x = 5;\n     let _y = fn~(move x) -> int {\n-        let _z = fn~(move x) -> int { x }; //~ ERROR moving out of variable declared in an outer block\n+        let _z = fn~(move x) -> int { x }; //~ ERROR moving out of captured outer variable in a heap closure\n         22\n     };\n }"}, {"sha": "9742acba1e3185593fa40dd894aa0ad6f3ff7b39", "filename": "src/test/compile-fail/issue-1965.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8ffab392ab286ac4e8028adcdae78e512c6409eb/src%2Ftest%2Fcompile-fail%2Fissue-1965.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8ffab392ab286ac4e8028adcdae78e512c6409eb/src%2Ftest%2Fcompile-fail%2Fissue-1965.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-1965.rs?ref=8ffab392ab286ac4e8028adcdae78e512c6409eb", "patch": "@@ -1,4 +1,4 @@\n-// error-pattern:moving out of immutable variable declared in an outer block\n+// error-pattern:moving out of captured outer immutable variable in a stack closure\n fn test(-x: uint) {}\n \n fn main() {"}, {"sha": "8b673e2b3074eacf35dfed23b05fc57f8da30a54", "filename": "src/test/compile-fail/lambda-mutate-nested.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8ffab392ab286ac4e8028adcdae78e512c6409eb/src%2Ftest%2Fcompile-fail%2Flambda-mutate-nested.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8ffab392ab286ac4e8028adcdae78e512c6409eb/src%2Ftest%2Fcompile-fail%2Flambda-mutate-nested.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Flambda-mutate-nested.rs?ref=8ffab392ab286ac4e8028adcdae78e512c6409eb", "patch": "@@ -1,4 +1,4 @@\n-// error-pattern:assigning to immutable variable declared in an outer block\n+// error-pattern:assigning to captured outer immutable variable in a stack closure\n // Make sure that nesting a block within a fn@ doesn't let us\n // mutate upvars from a fn@.\n fn f2(x: fn()) { x(); }"}, {"sha": "8886f930e201e0a8f5a37c167d5493ad6191595a", "filename": "src/test/compile-fail/lambda-mutate.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8ffab392ab286ac4e8028adcdae78e512c6409eb/src%2Ftest%2Fcompile-fail%2Flambda-mutate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8ffab392ab286ac4e8028adcdae78e512c6409eb/src%2Ftest%2Fcompile-fail%2Flambda-mutate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Flambda-mutate.rs?ref=8ffab392ab286ac4e8028adcdae78e512c6409eb", "patch": "@@ -1,4 +1,4 @@\n-// error-pattern:assigning to variable declared in an outer block\n+// error-pattern:assigning to captured outer variable in a heap closure\n // Make sure we can't write to upvars from fn@s\n fn main() {\n     let i = 0;"}]}