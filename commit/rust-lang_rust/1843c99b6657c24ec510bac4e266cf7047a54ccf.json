{"sha": "1843c99b6657c24ec510bac4e266cf7047a54ccf", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE4NDNjOTliNjY1N2MyNGVjNTEwYmFjNGUyNjZjZjcwNDdhNTRjY2Y=", "commit": {"author": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2010-07-12T20:25:59Z"}, "committer": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2010-07-12T20:26:28Z"}, "message": "Revert previous wrong-change on issue #106; was papering over wrongness in the runtime. Sad times. Closes #106 more correctly (and adds comment to explain).", "tree": {"sha": "5e12e9d225cf37f72bd3d516c46242082279437e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5e12e9d225cf37f72bd3d516c46242082279437e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1843c99b6657c24ec510bac4e266cf7047a54ccf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1843c99b6657c24ec510bac4e266cf7047a54ccf", "html_url": "https://github.com/rust-lang/rust/commit/1843c99b6657c24ec510bac4e266cf7047a54ccf", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1843c99b6657c24ec510bac4e266cf7047a54ccf/comments", "author": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "committer": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7c837b8c9bd05d69083dd98f9a29d47d4a62c206", "url": "https://api.github.com/repos/rust-lang/rust/commits/7c837b8c9bd05d69083dd98f9a29d47d4a62c206", "html_url": "https://github.com/rust-lang/rust/commit/7c837b8c9bd05d69083dd98f9a29d47d4a62c206"}], "stats": {"total": 16, "additions": 12, "deletions": 4}, "files": [{"sha": "6e0b57e1a9ceb5b4df98842c6ccd4c3631614d8a", "filename": "src/boot/me/typestate.ml", "status": "modified", "additions": 12, "deletions": 4, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/1843c99b6657c24ec510bac4e266cf7047a54ccf/src%2Fboot%2Fme%2Ftypestate.ml", "raw_url": "https://github.com/rust-lang/rust/raw/1843c99b6657c24ec510bac4e266cf7047a54ccf/src%2Fboot%2Fme%2Ftypestate.ml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fboot%2Fme%2Ftypestate.ml?ref=1843c99b6657c24ec510bac4e266cf7047a54ccf", "patch": "@@ -1044,8 +1044,16 @@ let lifecycle_visitor\n                 Ast.STMT_ret _\n               | Ast.STMT_be _ ->\n                   () (* Taken care of in visit_stmt_post below. *)\n-            | _ ->\n-                let slots = stk_elts_from_bot blk_slots in\n+              | _ ->\n+                (* The blk_slots stack we have has accumulated slots in\n+                 * declaration order as we walked the block; the top of the\n+                 * stack is the last-declared slot. We want to generate\n+                 * slot-drop obligations here for the slots in top-down order\n+                 * (starting with the last-declared) but only hitting those\n+                 * slots that actually got initialized (went live) at some\n+                 * point in the block.\n+                 *)\n+                let slots = stk_elts_from_top blk_slots in\n                 let live =\n                   List.filter\n                     (fun i -> Hashtbl.mem live_block_slots i)\n@@ -1122,7 +1130,7 @@ let lifecycle_visitor\n                 (fst f.Ast.for_each_slot).id\n \n \n-        | _ -> ()\n+          | _ -> ()\n     end;\n     inner.Walk.visit_stmt_pre s\n   in\n@@ -1133,7 +1141,7 @@ let lifecycle_visitor\n         Ast.STMT_ret _\n       | Ast.STMT_be _ ->\n           let stks = stk_elts_from_top block_slots in\n-          let slots = List.concat (List.map stk_elts_from_bot stks) in\n+          let slots = List.concat (List.map stk_elts_from_top stks) in\n           let live =\n             List.filter\n               (fun i -> Hashtbl.mem live_block_slots i)"}]}