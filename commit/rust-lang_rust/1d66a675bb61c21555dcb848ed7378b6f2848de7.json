{"sha": "1d66a675bb61c21555dcb848ed7378b6f2848de7", "node_id": "C_kwDOAAsO6NoAKDFkNjZhNjc1YmI2MWMyMTU1NWRjYjg0OGVkNzM3OGI2ZjI4NDhkZTc", "commit": {"author": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2023-01-09T18:07:34Z"}, "committer": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2023-01-09T18:07:34Z"}, "message": "review comment", "tree": {"sha": "6de2a8db055caa13eef877a3696f91e6c494c9be", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6de2a8db055caa13eef877a3696f91e6c494c9be"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1d66a675bb61c21555dcb848ed7378b6f2848de7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1d66a675bb61c21555dcb848ed7378b6f2848de7", "html_url": "https://github.com/rust-lang/rust/commit/1d66a675bb61c21555dcb848ed7378b6f2848de7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1d66a675bb61c21555dcb848ed7378b6f2848de7/comments", "author": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "050bc95ce2b23b034d5f41e5c3a8c6e627dfd52a", "url": "https://api.github.com/repos/rust-lang/rust/commits/050bc95ce2b23b034d5f41e5c3a8c6e627dfd52a", "html_url": "https://github.com/rust-lang/rust/commit/050bc95ce2b23b034d5f41e5c3a8c6e627dfd52a"}], "stats": {"total": 21, "additions": 13, "deletions": 8}, "files": [{"sha": "7d62d67d64f078256ed63ba4d1f211858fca1b09", "filename": "compiler/rustc_resolve/src/diagnostics.rs", "status": "modified", "additions": 5, "deletions": 6, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/1d66a675bb61c21555dcb848ed7378b6f2848de7/compiler%2Frustc_resolve%2Fsrc%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1d66a675bb61c21555dcb848ed7378b6f2848de7/compiler%2Frustc_resolve%2Fsrc%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_resolve%2Fsrc%2Fdiagnostics.rs?ref=1d66a675bb61c21555dcb848ed7378b6f2848de7", "patch": "@@ -161,7 +161,7 @@ impl<'a> Resolver<'a> {\n                     found_use,\n                     DiagnosticMode::Normal,\n                     path,\n-                    None,\n+                    \"\",\n                 );\n                 err.emit();\n             } else if let Some((span, msg, sugg, appl)) = suggestion {\n@@ -691,7 +691,7 @@ impl<'a> Resolver<'a> {\n                         FoundUse::Yes,\n                         DiagnosticMode::Pattern,\n                         vec![],\n-                        None,\n+                        \"\",\n                     );\n                 }\n                 err\n@@ -1346,7 +1346,7 @@ impl<'a> Resolver<'a> {\n             FoundUse::Yes,\n             DiagnosticMode::Normal,\n             vec![],\n-            None,\n+            \"\",\n         );\n \n         if macro_kind == MacroKind::Derive && (ident.name == sym::Send || ident.name == sym::Sync) {\n@@ -2328,7 +2328,7 @@ pub(crate) fn import_candidates(\n     use_placement_span: Option<Span>,\n     candidates: &[ImportSuggestion],\n     mode: DiagnosticMode,\n-    append: Option<&str>,\n+    append: &str,\n ) {\n     show_candidates(\n         session,\n@@ -2358,12 +2358,11 @@ fn show_candidates(\n     found_use: FoundUse,\n     mode: DiagnosticMode,\n     path: Vec<Segment>,\n-    append: Option<&str>,\n+    append: &str,\n ) {\n     if candidates.is_empty() {\n         return;\n     }\n-    let append = append.unwrap_or(\"\");\n \n     let mut accessible_path_strings: Vec<(String, &str, Option<DefId>, &Option<String>)> =\n         Vec::new();"}, {"sha": "00f65ac37b6a8eaaa0105b5fd422184229679c2c", "filename": "compiler/rustc_resolve/src/imports.rs", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/1d66a675bb61c21555dcb848ed7378b6f2848de7/compiler%2Frustc_resolve%2Fsrc%2Fimports.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1d66a675bb61c21555dcb848ed7378b6f2848de7/compiler%2Frustc_resolve%2Fsrc%2Fimports.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_resolve%2Fsrc%2Fimports.rs?ref=1d66a675bb61c21555dcb848ed7378b6f2848de7", "patch": "@@ -554,7 +554,10 @@ impl<'a, 'b> ImportResolver<'a, 'b> {\n                         Some(err.span),\n                         &candidates,\n                         DiagnosticMode::Import,\n-                        (source != target).then(|| format!(\" as {target}\")).as_deref(),\n+                        (source != target)\n+                            .then(|| format!(\" as {target}\"))\n+                            .as_deref()\n+                            .unwrap_or(\"\"),\n                     ),\n                     ImportKind::Single { nested: true, source, target, .. } => {\n                         import_candidates(\n@@ -564,7 +567,10 @@ impl<'a, 'b> ImportResolver<'a, 'b> {\n                             None,\n                             &candidates,\n                             DiagnosticMode::Normal,\n-                            (source != target).then(|| format!(\" as {target}\")).as_deref(),\n+                            (source != target)\n+                                .then(|| format!(\" as {target}\"))\n+                                .as_deref()\n+                                .unwrap_or(\"\"),\n                         );\n                     }\n                     _ => {}"}]}