{"sha": "a503259d8b6437550fd1563368cfae618f8ab426", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE1MDMyNTlkOGI2NDM3NTUwZmQxNTYzMzY4Y2ZhZTYxOGY4YWI0MjY=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2019-04-17T06:35:06Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2019-04-17T14:02:57Z"}, "message": "organize stacked borrows run-pass tests", "tree": {"sha": "dce074b87dfd2b2ac096ac523d254b09a748a539", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/dce074b87dfd2b2ac096ac523d254b09a748a539"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a503259d8b6437550fd1563368cfae618f8ab426", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a503259d8b6437550fd1563368cfae618f8ab426", "html_url": "https://github.com/rust-lang/rust/commit/a503259d8b6437550fd1563368cfae618f8ab426", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a503259d8b6437550fd1563368cfae618f8ab426/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "97c34c266f492ff548ca1584ccb7f1c3c49dcf82", "url": "https://api.github.com/repos/rust-lang/rust/commits/97c34c266f492ff548ca1584ccb7f1c3c49dcf82", "html_url": "https://github.com/rust-lang/rust/commit/97c34c266f492ff548ca1584ccb7f1c3c49dcf82"}], "stats": {"total": 90, "additions": 45, "deletions": 45}, "files": [{"sha": "93cef1572a3e13d5c88b4e1315ecfe0357c2ec7e", "filename": "tests/run-pass/refcell.rs", "status": "modified", "additions": 1, "deletions": 45, "changes": 46, "blob_url": "https://github.com/rust-lang/rust/blob/a503259d8b6437550fd1563368cfae618f8ab426/tests%2Frun-pass%2Frefcell.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a503259d8b6437550fd1563368cfae618f8ab426/tests%2Frun-pass%2Frefcell.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Frefcell.rs?ref=a503259d8b6437550fd1563368cfae618f8ab426", "patch": "@@ -1,6 +1,6 @@\n use std::cell::RefCell;\n \n-fn lots_of_funny_borrows() {\n+fn main() {\n     let c = RefCell::new(42);\n     {\n         let s1 = c.borrow();\n@@ -31,47 +31,3 @@ fn lots_of_funny_borrows() {\n         let _y: i32 = *s2;\n     }\n }\n-\n-fn aliasing_mut_and_shr() {\n-    fn inner(rc: &RefCell<i32>, aliasing: &mut i32) {\n-        *aliasing += 4;\n-        let _escape_to_raw = rc as *const _;\n-        *aliasing += 4;\n-        let _shr = &*rc;\n-        *aliasing += 4;\n-        // also turning this into a frozen ref now must work\n-        let aliasing = &*aliasing;\n-        let _val = *aliasing;\n-        let _escape_to_raw = rc as *const _; // this must NOT unfreeze\n-        let _val = *aliasing;\n-        let _shr = &*rc; // this must NOT unfreeze\n-        let _val = *aliasing;\n-    }\n-\n-    let rc = RefCell::new(23);\n-    let mut bmut = rc.borrow_mut();\n-    inner(&rc, &mut *bmut);\n-    drop(bmut);\n-    assert_eq!(*rc.borrow(), 23+12);\n-}\n-\n-fn aliasing_frz_and_shr() {\n-    fn inner(rc: &RefCell<i32>, aliasing: &i32) {\n-        let _val = *aliasing;\n-        let _escape_to_raw = rc as *const _; // this must NOT unfreeze\n-        let _val = *aliasing;\n-        let _shr = &*rc; // this must NOT unfreeze\n-        let _val = *aliasing;\n-    }\n-\n-    let rc = RefCell::new(23);\n-    let bshr = rc.borrow();\n-    inner(&rc, &*bshr);\n-    assert_eq!(*rc.borrow(), 23);\n-}\n-\n-fn main() {\n-    lots_of_funny_borrows();\n-    aliasing_mut_and_shr();\n-    aliasing_frz_and_shr();\n-}"}, {"sha": "87ecb4aef065b95f52d6298b96a2a218db5a4b28", "filename": "tests/run-pass/stacked-borrows/2phase.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/a503259d8b6437550fd1563368cfae618f8ab426/tests%2Frun-pass%2Fstacked-borrows%2F2phase.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a503259d8b6437550fd1563368cfae618f8ab426/tests%2Frun-pass%2Fstacked-borrows%2F2phase.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Fstacked-borrows%2F2phase.rs?ref=a503259d8b6437550fd1563368cfae618f8ab426", "previous_filename": "tests/run-pass/2phase.rs"}, {"sha": "dddc7089d02d0d8958660fef693fa5976382828d", "filename": "tests/run-pass/stacked-borrows/refcell.rs", "status": "added", "additions": 44, "deletions": 0, "changes": 44, "blob_url": "https://github.com/rust-lang/rust/blob/a503259d8b6437550fd1563368cfae618f8ab426/tests%2Frun-pass%2Fstacked-borrows%2Frefcell.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a503259d8b6437550fd1563368cfae618f8ab426/tests%2Frun-pass%2Fstacked-borrows%2Frefcell.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Fstacked-borrows%2Frefcell.rs?ref=a503259d8b6437550fd1563368cfae618f8ab426", "patch": "@@ -0,0 +1,44 @@\n+use std::cell::RefCell;\n+\n+fn main() {\n+    aliasing_mut_and_shr();\n+    aliasing_frz_and_shr();\n+}\n+\n+fn aliasing_mut_and_shr() {\n+    fn inner(rc: &RefCell<i32>, aliasing: &mut i32) {\n+        *aliasing += 4;\n+        let _escape_to_raw = rc as *const _;\n+        *aliasing += 4;\n+        let _shr = &*rc;\n+        *aliasing += 4;\n+        // also turning this into a frozen ref now must work\n+        let aliasing = &*aliasing;\n+        let _val = *aliasing;\n+        let _escape_to_raw = rc as *const _; // this must NOT unfreeze\n+        let _val = *aliasing;\n+        let _shr = &*rc; // this must NOT unfreeze\n+        let _val = *aliasing;\n+    }\n+\n+    let rc = RefCell::new(23);\n+    let mut bmut = rc.borrow_mut();\n+    inner(&rc, &mut *bmut);\n+    drop(bmut);\n+    assert_eq!(*rc.borrow(), 23+12);\n+}\n+\n+fn aliasing_frz_and_shr() {\n+    fn inner(rc: &RefCell<i32>, aliasing: &i32) {\n+        let _val = *aliasing;\n+        let _escape_to_raw = rc as *const _; // this must NOT unfreeze\n+        let _val = *aliasing;\n+        let _shr = &*rc; // this must NOT unfreeze\n+        let _val = *aliasing;\n+    }\n+\n+    let rc = RefCell::new(23);\n+    let bshr = rc.borrow();\n+    inner(&rc, &*bshr);\n+    assert_eq!(*rc.borrow(), 23);\n+}"}, {"sha": "711026c02dfc0d1700342482875aed11cf597f17", "filename": "tests/run-pass/stacked-borrows/stacked-borrows.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/a503259d8b6437550fd1563368cfae618f8ab426/tests%2Frun-pass%2Fstacked-borrows%2Fstacked-borrows.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a503259d8b6437550fd1563368cfae618f8ab426/tests%2Frun-pass%2Fstacked-borrows%2Fstacked-borrows.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Fstacked-borrows%2Fstacked-borrows.rs?ref=a503259d8b6437550fd1563368cfae618f8ab426", "previous_filename": "tests/run-pass/stacked-borrows.rs"}]}