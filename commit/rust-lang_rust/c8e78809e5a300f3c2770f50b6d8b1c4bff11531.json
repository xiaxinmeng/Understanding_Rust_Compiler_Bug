{"sha": "c8e78809e5a300f3c2770f50b6d8b1c4bff11531", "node_id": "MDY6Q29tbWl0NzI0NzEyOmM4ZTc4ODA5ZTVhMzAwZjNjMjc3MGY1MGI2ZDhiMWM0YmZmMTE1MzE=", "commit": {"author": {"name": "bors[bot]", "email": "bors[bot]@users.noreply.github.com", "date": "2019-02-27T11:09:47Z"}, "committer": {"name": "bors[bot]", "email": "bors[bot]@users.noreply.github.com", "date": "2019-02-27T11:09:47Z"}, "message": "Merge #903\n\n903: Work around for issue in vscode reporting a failure in request r=matklad a=vipentti\n\nvscode would report \"A request has failed\" when it got \"Content modified\"\r\nmessage and this would cause a pop-up to appear. This works around the issue by\r\nreturning an \"empty\" response that vscode can ignore.\n\nCo-authored-by: Ville Penttinen <villem.penttinen@gmail.com>", "tree": {"sha": "b6d466dc0987e64e692a2b4de1111c49e18cf40c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b6d466dc0987e64e692a2b4de1111c49e18cf40c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c8e78809e5a300f3c2770f50b6d8b1c4bff11531", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c8e78809e5a300f3c2770f50b6d8b1c4bff11531", "html_url": "https://github.com/rust-lang/rust/commit/c8e78809e5a300f3c2770f50b6d8b1c4bff11531", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c8e78809e5a300f3c2770f50b6d8b1c4bff11531/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "parents": [{"sha": "4248b39993e2446c66f732ae9e45fb2f564099f5", "url": "https://api.github.com/repos/rust-lang/rust/commits/4248b39993e2446c66f732ae9e45fb2f564099f5", "html_url": "https://github.com/rust-lang/rust/commit/4248b39993e2446c66f732ae9e45fb2f564099f5"}, {"sha": "6eb45c1c2be0fb780c4160aaa93c8d3d81e607e2", "url": "https://api.github.com/repos/rust-lang/rust/commits/6eb45c1c2be0fb780c4160aaa93c8d3d81e607e2", "html_url": "https://github.com/rust-lang/rust/commit/6eb45c1c2be0fb780c4160aaa93c8d3d81e607e2"}], "stats": {"total": 17, "additions": 13, "deletions": 4}, "files": [{"sha": "ce50fb3019865b50154ca8539458b225f8b61153", "filename": "crates/ra_lsp_server/src/main_loop.rs", "status": "modified", "additions": 13, "deletions": 4, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/c8e78809e5a300f3c2770f50b6d8b1c4bff11531/crates%2Fra_lsp_server%2Fsrc%2Fmain_loop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c8e78809e5a300f3c2770f50b6d8b1c4bff11531/crates%2Fra_lsp_server%2Fsrc%2Fmain_loop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_lsp_server%2Fsrc%2Fmain_loop.rs?ref=c8e78809e5a300f3c2770f50b6d8b1c4bff11531", "patch": "@@ -416,11 +416,20 @@ impl<'a> PoolDispatcher<'a> {\n                             }\n                             Err(e) => {\n                                 if is_canceled(&e) {\n-                                    RawResponse::err(\n+                                    // FIXME: When https://github.com/Microsoft/vscode-languageserver-node/issues/457\n+                                    // gets fixed, we can return the proper response.\n+                                    // This works around the issue where \"content modified\" error would continuously\n+                                    // show an message pop-up in VsCode\n+                                    // RawResponse::err(\n+                                    //     id,\n+                                    //     ErrorCode::ContentModified as i32,\n+                                    //     \"content modified\".to_string(),\n+                                    // )\n+                                    RawResponse {\n                                         id,\n-                                        ErrorCode::ContentModified as i32,\n-                                        \"content modified\".to_string(),\n-                                    )\n+                                        result: Some(serde_json::to_value(&()).unwrap()),\n+                                        error: None,\n+                                    }\n                                 } else {\n                                     RawResponse::err(\n                                         id,"}]}