{"sha": "3a87aa5318bfadbc21d4b90043fcb3904c7e32d3", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNhODdhYTUzMThiZmFkYmMyMWQ0YjkwMDQzZmNiMzkwNGM3ZTMyZDM=", "commit": {"author": {"name": "Nick Cameron", "email": "nrc@ncameron.org", "date": "2016-05-30T13:25:09Z"}, "committer": {"name": "Nick Cameron", "email": "nrc@ncameron.org", "date": "2016-05-30T13:25:09Z"}, "message": "Merge pull request #1022 from kamalmarhubi/update-syntex-syntax\n\ndeps: Update syntex_syntax to 0.33", "tree": {"sha": "5d8513250292bdf4f8855d31976866d9302f22bb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5d8513250292bdf4f8855d31976866d9302f22bb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3a87aa5318bfadbc21d4b90043fcb3904c7e32d3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3a87aa5318bfadbc21d4b90043fcb3904c7e32d3", "html_url": "https://github.com/rust-lang/rust/commit/3a87aa5318bfadbc21d4b90043fcb3904c7e32d3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3a87aa5318bfadbc21d4b90043fcb3904c7e32d3/comments", "author": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0678152e73e1ff6ed15be371eede85e027ff60bc", "url": "https://api.github.com/repos/rust-lang/rust/commits/0678152e73e1ff6ed15be371eede85e027ff60bc", "html_url": "https://github.com/rust-lang/rust/commit/0678152e73e1ff6ed15be371eede85e027ff60bc"}, {"sha": "120e1a0b51224a4ec16095a6e322bdb0039946db", "url": "https://api.github.com/repos/rust-lang/rust/commits/120e1a0b51224a4ec16095a6e322bdb0039946db", "html_url": "https://github.com/rust-lang/rust/commit/120e1a0b51224a4ec16095a6e322bdb0039946db"}], "stats": {"total": 46, "additions": 22, "deletions": 24}, "files": [{"sha": "621659c737f55dfc28ac7ddc07cf0b974431cff3", "filename": "Cargo.lock", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/3a87aa5318bfadbc21d4b90043fcb3904c7e32d3/Cargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/3a87aa5318bfadbc21d4b90043fcb3904c7e32d3/Cargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.lock?ref=3a87aa5318bfadbc21d4b90043fcb3904c7e32d3", "patch": "@@ -10,7 +10,7 @@ dependencies = [\n  \"regex 0.1.71 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"rustc-serialize 0.3.19 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"strings 0.0.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"syntex_syntax 0.32.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"syntex_syntax 0.33.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"term 0.4.4 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"toml 0.1.30 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"unicode-segmentation 0.1.2 (registry+https://github.com/rust-lang/crates.io-index)\",\n@@ -112,7 +112,7 @@ dependencies = [\n \n [[package]]\n name = \"syntex_syntax\"\n-version = \"0.32.0\"\n+version = \"0.33.0\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n  \"bitflags 0.5.0 (registry+https://github.com/rust-lang/crates.io-index)\","}, {"sha": "756fcc600e9c782b792e35b6dd529ea956bedad5", "filename": "Cargo.toml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3a87aa5318bfadbc21d4b90043fcb3904c7e32d3/Cargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/3a87aa5318bfadbc21d4b90043fcb3904c7e32d3/Cargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.toml?ref=3a87aa5318bfadbc21d4b90043fcb3904c7e32d3", "patch": "@@ -21,7 +21,7 @@ regex = \"0.1\"\n term = \"0.4\"\n strings = \"0.0.1\"\n diff = \"0.1\"\n-syntex_syntax = \"0.32\"\n+syntex_syntax = \"0.33\"\n log = \"0.3\"\n env_logger = \"0.3\"\n getopts = \"0.2\""}, {"sha": "73b76534f750bd70dd10769e1c0ef9b5f08d2cbd", "filename": "src/expr.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/3a87aa5318bfadbc21d4b90043fcb3904c7e32d3/src%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3a87aa5318bfadbc21d4b90043fcb3904c7e32d3/src%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fexpr.rs?ref=3a87aa5318bfadbc21d4b90043fcb3904c7e32d3", "patch": "@@ -581,15 +581,15 @@ impl Rewrite for ast::Stmt {\n struct Loop<'a> {\n     cond: Option<&'a ast::Expr>,\n     block: &'a ast::Block,\n-    label: Option<ast::Ident>,\n+    label: Option<ast::SpannedIdent>,\n     pat: Option<&'a ast::Pat>,\n     keyword: &'a str,\n     matcher: &'a str,\n     connector: &'a str,\n }\n \n impl<'a> Loop<'a> {\n-    fn new_loop(block: &'a ast::Block, label: Option<ast::Ident>) -> Loop<'a> {\n+    fn new_loop(block: &'a ast::Block, label: Option<ast::SpannedIdent>) -> Loop<'a> {\n         Loop {\n             cond: None,\n             block: block,\n@@ -604,7 +604,7 @@ impl<'a> Loop<'a> {\n     fn new_while(pat: Option<&'a ast::Pat>,\n                  cond: &'a ast::Expr,\n                  block: &'a ast::Block,\n-                 label: Option<ast::Ident>)\n+                 label: Option<ast::SpannedIdent>)\n                  -> Loop<'a> {\n         Loop {\n             cond: Some(cond),\n@@ -623,7 +623,7 @@ impl<'a> Loop<'a> {\n     fn new_for(pat: &'a ast::Pat,\n                cond: &'a ast::Expr,\n                block: &'a ast::Block,\n-               label: Option<ast::Ident>)\n+               label: Option<ast::SpannedIdent>)\n                -> Loop<'a> {\n         Loop {\n             cond: Some(cond),\n@@ -676,9 +676,9 @@ impl<'a> Rewrite for Loop<'a> {\n     }\n }\n \n-fn rewrite_label(label: Option<ast::Ident>) -> String {\n+fn rewrite_label(label: Option<ast::SpannedIdent>) -> String {\n     match label {\n-        Some(ident) => format!(\"{}: \", ident),\n+        Some(ident) => format!(\"{}: \", ident.node),\n         None => \"\".to_owned(),\n     }\n }"}, {"sha": "6bbf0dd5044b348bad778d17ce6d618b462c7010", "filename": "src/items.rs", "status": "modified", "additions": 2, "deletions": 8, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/3a87aa5318bfadbc21d4b90043fcb3904c7e32d3/src%2Fitems.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3a87aa5318bfadbc21d4b90043fcb3904c7e32d3/src%2Fitems.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fitems.rs?ref=3a87aa5318bfadbc21d4b90043fcb3904c7e32d3", "patch": "@@ -116,7 +116,6 @@ impl<'a> FmtVisitor<'a> {\n                                               indent,\n                                               item.ident,\n                                               fn_decl,\n-                                              None,\n                                               generics,\n                                               ast::Unsafety::Normal,\n                                               ast::Constness::NotConst,\n@@ -169,7 +168,6 @@ impl<'a> FmtVisitor<'a> {\n                       indent: Indent,\n                       ident: ast::Ident,\n                       fd: &ast::FnDecl,\n-                      explicit_self: Option<&ast::ExplicitSelf>,\n                       generics: &ast::Generics,\n                       unsafety: ast::Unsafety,\n                       constness: ast::Constness,\n@@ -189,7 +187,6 @@ impl<'a> FmtVisitor<'a> {\n                                                                          indent,\n                                                                          ident,\n                                                                          fd,\n-                                                                         explicit_self,\n                                                                          generics,\n                                                                          unsafety,\n                                                                          constness,\n@@ -234,7 +231,6 @@ impl<'a> FmtVisitor<'a> {\n                                                        indent,\n                                                        ident,\n                                                        &sig.decl,\n-                                                       Some(&sig.explicit_self),\n                                                        &sig.generics,\n                                                        sig.unsafety,\n                                                        sig.constness,\n@@ -1129,7 +1125,7 @@ fn rewrite_explicit_self(explicit_self: &ast::ExplicitSelf,\n                          context: &RewriteContext)\n                          -> Option<String> {\n     match explicit_self.node {\n-        ast::SelfKind::Region(lt, m, _) => {\n+        ast::SelfKind::Region(lt, m) => {\n             let mut_str = format_mutability(m);\n             match lt {\n                 Some(ref l) => {\n@@ -1155,7 +1151,6 @@ fn rewrite_explicit_self(explicit_self: &ast::ExplicitSelf,\n \n             Some(format!(\"{}self\", format_mutability(mutability)))\n         }\n-        _ => None,\n     }\n }\n \n@@ -1229,7 +1224,6 @@ fn rewrite_fn_base(context: &RewriteContext,\n                    indent: Indent,\n                    ident: ast::Ident,\n                    fd: &ast::FnDecl,\n-                   explicit_self: Option<&ast::ExplicitSelf>,\n                    generics: &ast::Generics,\n                    unsafety: ast::Unsafety,\n                    constness: ast::Constness,\n@@ -1328,7 +1322,7 @@ fn rewrite_fn_base(context: &RewriteContext,\n                           span_for_return(&fd.output).lo);\n     let arg_str = try_opt!(rewrite_args(context,\n                                         &fd.inputs,\n-                                        explicit_self,\n+                                        fd.get_self().as_ref(),\n                                         one_line_budget,\n                                         multi_line_budget,\n                                         indent,"}, {"sha": "1c147a3e74b4516e164eaf3cef519adcfc9aa309", "filename": "src/patterns.rs", "status": "modified", "additions": 10, "deletions": 5, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/3a87aa5318bfadbc21d4b90043fcb3904c7e32d3/src%2Fpatterns.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3a87aa5318bfadbc21d4b90043fcb3904c7e32d3/src%2Fpatterns.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fpatterns.rs?ref=3a87aa5318bfadbc21d4b90043fcb3904c7e32d3", "patch": "@@ -59,19 +59,25 @@ impl Rewrite for Pat {\n                 let prefix = format!(\"&{}\", format_mutability(mutability));\n                 rewrite_unary_prefix(context, &prefix, &**pat, width, offset)\n             }\n-            PatKind::Tup(ref items) => {\n+            // FIXME(#1021): Handle `..` in tuple / tuple struct patterns (RFC 1492)\n+            PatKind::Tuple(ref items, dotdot_pos) => {\n+                if dotdot_pos.is_some() {\n+                    return None;\n+                }\n                 rewrite_tuple(context,\n                               items.iter().map(|x| &**x),\n                               self.span,\n                               width,\n                               offset)\n             }\n             PatKind::Path(ref path) => rewrite_path(context, true, None, path, width, offset),\n-            PatKind::TupleStruct(ref path, ref pat_vec) => {\n+            PatKind::TupleStruct(ref path, ref pat_vec, dotdot_pos) => {\n                 let path_str = try_opt!(rewrite_path(context, true, None, path, width, offset));\n \n-                match *pat_vec {\n-                    Some(ref pat_vec) => {\n+                // FIXME(#1021): Handle `..` in tuple / tuple struct patterns (RFC 1492)\n+                match dotdot_pos {\n+                    Some(_) => Some(format!(\"{}(..)\", path_str)),\n+                    None => {\n                         if pat_vec.is_empty() {\n                             Some(path_str)\n                         } else {\n@@ -95,7 +101,6 @@ impl Rewrite for Pat {\n                                                                    context.config))))\n                         }\n                     }\n-                    None => Some(format!(\"{}(..)\", path_str)),\n                 }\n             }\n             PatKind::Lit(ref expr) => expr.rewrite(context, width, offset),"}, {"sha": "8b5be1b41910f183d610fa598e8f6c7c758ff282", "filename": "src/types.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/3a87aa5318bfadbc21d4b90043fcb3904c7e32d3/src%2Ftypes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3a87aa5318bfadbc21d4b90043fcb3904c7e32d3/src%2Ftypes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftypes.rs?ref=3a87aa5318bfadbc21d4b90043fcb3904c7e32d3", "patch": "@@ -588,6 +588,7 @@ impl Rewrite for ast::Ty {\n             }\n             ast::TyKind::Mac(..) |\n             ast::TyKind::Typeof(..) => unreachable!(),\n+            ast::TyKind::ImplicitSelf => Some(String::from(\"\")),\n         }\n     }\n }"}, {"sha": "b70ae8bb2407c1c86e01debc93c9db07acd68b36", "filename": "src/visitor.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3a87aa5318bfadbc21d4b90043fcb3904c7e32d3/src%2Fvisitor.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3a87aa5318bfadbc21d4b90043fcb3904c7e32d3/src%2Fvisitor.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvisitor.rs?ref=3a87aa5318bfadbc21d4b90043fcb3904c7e32d3", "patch": "@@ -142,7 +142,6 @@ impl<'a> FmtVisitor<'a> {\n                 self.rewrite_fn(indent,\n                                 ident,\n                                 fd,\n-                                None,\n                                 generics,\n                                 unsafety,\n                                 constness,\n@@ -155,7 +154,6 @@ impl<'a> FmtVisitor<'a> {\n                 self.rewrite_fn(indent,\n                                 ident,\n                                 fd,\n-                                Some(&sig.explicit_self),\n                                 &sig.generics,\n                                 sig.unsafety,\n                                 sig.constness,"}]}