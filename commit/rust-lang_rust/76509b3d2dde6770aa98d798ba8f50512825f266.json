{"sha": "76509b3d2dde6770aa98d798ba8f50512825f266", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc2NTA5YjNkMmRkZTY3NzBhYTk4ZDc5OGJhOGY1MDUxMjgyNWYyNjY=", "commit": {"author": {"name": "Jonas Schievink", "email": "jonas.schievink@ferrous-systems.com", "date": "2020-07-24T15:38:18Z"}, "committer": {"name": "Jonas Schievink", "email": "jonas.schievink@ferrous-systems.com", "date": "2020-07-24T15:38:18Z"}, "message": "Allow filtering diagnostics", "tree": {"sha": "23c8c9ad03abaaa86062610b56c568a29f3cbf19", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/23c8c9ad03abaaa86062610b56c568a29f3cbf19"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/76509b3d2dde6770aa98d798ba8f50512825f266", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/76509b3d2dde6770aa98d798ba8f50512825f266", "html_url": "https://github.com/rust-lang/rust/commit/76509b3d2dde6770aa98d798ba8f50512825f266", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/76509b3d2dde6770aa98d798ba8f50512825f266/comments", "author": {"login": "jonas-schievink", "id": 1786438, "node_id": "MDQ6VXNlcjE3ODY0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1786438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonas-schievink", "html_url": "https://github.com/jonas-schievink", "followers_url": "https://api.github.com/users/jonas-schievink/followers", "following_url": "https://api.github.com/users/jonas-schievink/following{/other_user}", "gists_url": "https://api.github.com/users/jonas-schievink/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonas-schievink/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonas-schievink/subscriptions", "organizations_url": "https://api.github.com/users/jonas-schievink/orgs", "repos_url": "https://api.github.com/users/jonas-schievink/repos", "events_url": "https://api.github.com/users/jonas-schievink/events{/privacy}", "received_events_url": "https://api.github.com/users/jonas-schievink/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jonas-schievink", "id": 1786438, "node_id": "MDQ6VXNlcjE3ODY0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1786438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonas-schievink", "html_url": "https://github.com/jonas-schievink", "followers_url": "https://api.github.com/users/jonas-schievink/followers", "following_url": "https://api.github.com/users/jonas-schievink/following{/other_user}", "gists_url": "https://api.github.com/users/jonas-schievink/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonas-schievink/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonas-schievink/subscriptions", "organizations_url": "https://api.github.com/users/jonas-schievink/orgs", "repos_url": "https://api.github.com/users/jonas-schievink/repos", "events_url": "https://api.github.com/users/jonas-schievink/events{/privacy}", "received_events_url": "https://api.github.com/users/jonas-schievink/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6f02befee4249618a2a7858d27649fa389888ea8", "url": "https://api.github.com/repos/rust-lang/rust/commits/6f02befee4249618a2a7858d27649fa389888ea8", "html_url": "https://github.com/rust-lang/rust/commit/6f02befee4249618a2a7858d27649fa389888ea8"}], "stats": {"total": 25, "additions": 22, "deletions": 3}, "files": [{"sha": "84ba97b14a1fedd42f4ee77268f068336731e9ab", "filename": "crates/ra_hir_expand/src/diagnostics.rs", "status": "modified", "additions": 22, "deletions": 3, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/76509b3d2dde6770aa98d798ba8f50512825f266/crates%2Fra_hir_expand%2Fsrc%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/76509b3d2dde6770aa98d798ba8f50512825f266/crates%2Fra_hir_expand%2Fsrc%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_expand%2Fsrc%2Fdiagnostics.rs?ref=76509b3d2dde6770aa98d798ba8f50512825f266", "patch": "@@ -24,6 +24,9 @@ pub trait Diagnostic: Any + Send + Sync + fmt::Debug + 'static {\n     fn message(&self) -> String;\n     fn source(&self) -> InFile<SyntaxNodePtr>;\n     fn as_any(&self) -> &(dyn Any + Send + 'static);\n+    fn is_experimental(&self) -> bool {\n+        false\n+    }\n }\n \n pub trait AstDiagnostic {\n@@ -44,6 +47,7 @@ impl dyn Diagnostic {\n \n pub struct DiagnosticSink<'a> {\n     callbacks: Vec<Box<dyn FnMut(&dyn Diagnostic) -> Result<(), ()> + 'a>>,\n+    filters: Vec<Box<dyn FnMut(&dyn Diagnostic) -> bool + 'a>>,\n     default_callback: Box<dyn FnMut(&dyn Diagnostic) + 'a>,\n }\n \n@@ -54,7 +58,12 @@ impl<'a> DiagnosticSink<'a> {\n     }\n \n     fn _push(&mut self, d: &dyn Diagnostic) {\n-        for cb in self.callbacks.iter_mut() {\n+        for filter in &mut self.filters {\n+            if !filter(d) {\n+                return;\n+            }\n+        }\n+        for cb in &mut self.callbacks {\n             match cb(d) {\n                 Ok(()) => return,\n                 Err(()) => (),\n@@ -66,11 +75,17 @@ impl<'a> DiagnosticSink<'a> {\n \n pub struct DiagnosticSinkBuilder<'a> {\n     callbacks: Vec<Box<dyn FnMut(&dyn Diagnostic) -> Result<(), ()> + 'a>>,\n+    filters: Vec<Box<dyn FnMut(&dyn Diagnostic) -> bool + 'a>>,\n }\n \n impl<'a> DiagnosticSinkBuilder<'a> {\n     pub fn new() -> Self {\n-        Self { callbacks: Vec::new() }\n+        Self { callbacks: Vec::new(), filters: Vec::new() }\n+    }\n+\n+    pub fn filter<F: FnMut(&dyn Diagnostic) -> bool + 'a>(mut self, cb: F) -> Self {\n+        self.filters.push(Box::new(cb));\n+        self\n     }\n \n     pub fn on<D: Diagnostic, F: FnMut(&D) + 'a>(mut self, mut cb: F) -> Self {\n@@ -86,6 +101,10 @@ impl<'a> DiagnosticSinkBuilder<'a> {\n     }\n \n     pub fn build<F: FnMut(&dyn Diagnostic) + 'a>(self, default_callback: F) -> DiagnosticSink<'a> {\n-        DiagnosticSink { callbacks: self.callbacks, default_callback: Box::new(default_callback) }\n+        DiagnosticSink {\n+            callbacks: self.callbacks,\n+            filters: self.filters,\n+            default_callback: Box::new(default_callback),\n+        }\n     }\n }"}]}