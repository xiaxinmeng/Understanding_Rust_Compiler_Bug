{"sha": "8c551155d900872fd10b1abd7c4fb3f2c03cda87", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhjNTUxMTU1ZDkwMDg3MmZkMTBiMWFiZDdjNGZiM2YyYzAzY2RhODc=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-01-22T11:20:33Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-01-22T11:20:33Z"}, "message": "Rollup merge of #57798 - hellow554:master, r=davidtwco\n\nCorrected spelling inconsistency\n\nresolves #57773", "tree": {"sha": "68d8a961926073d78c03c7facab729590b76c985", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/68d8a961926073d78c03c7facab729590b76c985"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8c551155d900872fd10b1abd7c4fb3f2c03cda87", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJcRvyBCRBK7hj4Ov3rIwAAdHIIAJ7xyviXGwR/s/eLXXm51VPb\nYBbBMZFooAhWGcmqBsvKRrNZZsXJ8zsUwpjxvi2uvFSq+6NPeauKf5KZgKBGWJPM\nLixA6d/2P47zPUO7zwVQ83gT5zg2WoUpdZTiMU+Tzv3qTUmC6AHLl0s+BnLF2rwc\nq8ZL3b7pOvJOfjLybvML0Ku8p+aPo3lTWAIkpTOgWHHM1EkGX2N0/bIURWpIFElW\n1beo7iZKpJ9fgBScdkxuH3GyA2rLduJHs5czgK/ZzYUJjdMXSd1jJJEjyOGBcIGI\nNnSKj6tVADmFiTl39cu26DERZjzd8lUlKPk/8ZEgqiDRxS358MG75xSrjKaKkZs=\n=fhtf\n-----END PGP SIGNATURE-----\n", "payload": "tree 68d8a961926073d78c03c7facab729590b76c985\nparent 892e6930ce2e7d3511d1752ae4fb6b603ab522bc\nparent 051835b903181ac0a2e549327de9e8d89cf3d457\nauthor Mazdak Farrokhzad <twingoow@gmail.com> 1548156033 +0100\ncommitter GitHub <noreply@github.com> 1548156033 +0100\n\nRollup merge of #57798 - hellow554:master, r=davidtwco\n\nCorrected spelling inconsistency\n\nresolves #57773\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8c551155d900872fd10b1abd7c4fb3f2c03cda87", "html_url": "https://github.com/rust-lang/rust/commit/8c551155d900872fd10b1abd7c4fb3f2c03cda87", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8c551155d900872fd10b1abd7c4fb3f2c03cda87/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "892e6930ce2e7d3511d1752ae4fb6b603ab522bc", "url": "https://api.github.com/repos/rust-lang/rust/commits/892e6930ce2e7d3511d1752ae4fb6b603ab522bc", "html_url": "https://github.com/rust-lang/rust/commit/892e6930ce2e7d3511d1752ae4fb6b603ab522bc"}, {"sha": "051835b903181ac0a2e549327de9e8d89cf3d457", "url": "https://api.github.com/repos/rust-lang/rust/commits/051835b903181ac0a2e549327de9e8d89cf3d457", "html_url": "https://github.com/rust-lang/rust/commit/051835b903181ac0a2e549327de9e8d89cf3d457"}], "stats": {"total": 32, "additions": 16, "deletions": 16}, "files": [{"sha": "905a3ceed81c9d04bd957241a773c7de0102ca70", "filename": "src/librustc/hir/lowering.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/8c551155d900872fd10b1abd7c4fb3f2c03cda87/src%2Flibrustc%2Fhir%2Flowering.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8c551155d900872fd10b1abd7c4fb3f2c03cda87/src%2Flibrustc%2Fhir%2Flowering.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fhir%2Flowering.rs?ref=8c551155d900872fd10b1abd7c4fb3f2c03cda87", "patch": "@@ -1931,7 +1931,7 @@ impl<'a> LoweringContext<'a> {\n \n     fn lower_parenthesized_parameter_data(\n         &mut self,\n-        data: &ParenthesisedArgs,\n+        data: &ParenthesizedArgs,\n     ) -> (hir::GenericArgs, bool) {\n         // Switch to `PassThrough` mode for anonymous lifetimes: this\n         // means that we permit things like `&Ref<T>`, where `Ref` has\n@@ -1941,7 +1941,7 @@ impl<'a> LoweringContext<'a> {\n         self.with_anonymous_lifetime_mode(\n             AnonymousLifetimeMode::PassThrough,\n             |this| {\n-                let &ParenthesisedArgs { ref inputs, ref output, span } = data;\n+                let &ParenthesizedArgs { ref inputs, ref output, span } = data;\n                 let inputs = inputs\n                     .iter()\n                     .map(|ty| this.lower_ty_direct(ty, ImplTraitContext::disallowed()))"}, {"sha": "798f14dcba955216cb588413bc361117f6d3334e", "filename": "src/libsyntax/ast.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/8c551155d900872fd10b1abd7c4fb3f2c03cda87/src%2Flibsyntax%2Fast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8c551155d900872fd10b1abd7c4fb3f2c03cda87/src%2Flibsyntax%2Fast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fast.rs?ref=8c551155d900872fd10b1abd7c4fb3f2c03cda87", "patch": "@@ -136,7 +136,7 @@ pub enum GenericArgs {\n     /// The `<'a, A,B,C>` in `foo::bar::baz::<'a, A,B,C>`\n     AngleBracketed(AngleBracketedArgs),\n     /// The `(A,B)` and `C` in `Foo(A,B) -> C`\n-    Parenthesized(ParenthesisedArgs),\n+    Parenthesized(ParenthesizedArgs),\n }\n \n impl GenericArgs {\n@@ -173,15 +173,15 @@ impl Into<Option<P<GenericArgs>>> for AngleBracketedArgs {\n     }\n }\n \n-impl Into<Option<P<GenericArgs>>> for ParenthesisedArgs {\n+impl Into<Option<P<GenericArgs>>> for ParenthesizedArgs {\n     fn into(self) -> Option<P<GenericArgs>> {\n         Some(P(GenericArgs::Parenthesized(self)))\n     }\n }\n \n /// A path like `Foo(A,B) -> C`\n #[derive(Clone, RustcEncodable, RustcDecodable, Debug)]\n-pub struct ParenthesisedArgs {\n+pub struct ParenthesizedArgs {\n     /// Overall span\n     pub span: Span,\n \n@@ -192,7 +192,7 @@ pub struct ParenthesisedArgs {\n     pub output: Option<P<Ty>>,\n }\n \n-impl ParenthesisedArgs {\n+impl ParenthesizedArgs {\n     pub fn as_angle_bracketed_args(&self) -> AngleBracketedArgs {\n         AngleBracketedArgs {\n             span: self.span,"}, {"sha": "fdcbbb939a6cf16167c86ecc7bb20725c7151470", "filename": "src/libsyntax/fold.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/8c551155d900872fd10b1abd7c4fb3f2c03cda87/src%2Flibsyntax%2Ffold.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8c551155d900872fd10b1abd7c4fb3f2c03cda87/src%2Flibsyntax%2Ffold.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Ffold.rs?ref=8c551155d900872fd10b1abd7c4fb3f2c03cda87", "patch": "@@ -207,8 +207,8 @@ pub trait Folder : Sized {\n         noop_fold_angle_bracketed_parameter_data(p, self)\n     }\n \n-    fn fold_parenthesized_parameter_data(&mut self, p: ParenthesisedArgs)\n-                                         -> ParenthesisedArgs\n+    fn fold_parenthesized_parameter_data(&mut self, p: ParenthesizedArgs)\n+                                         -> ParenthesizedArgs\n     {\n         noop_fold_parenthesized_parameter_data(p, self)\n     }\n@@ -504,12 +504,12 @@ pub fn noop_fold_angle_bracketed_parameter_data<T: Folder>(data: AngleBracketedA\n     }\n }\n \n-pub fn noop_fold_parenthesized_parameter_data<T: Folder>(data: ParenthesisedArgs,\n+pub fn noop_fold_parenthesized_parameter_data<T: Folder>(data: ParenthesizedArgs,\n                                                          fld: &mut T)\n-                                                         -> ParenthesisedArgs\n+                                                         -> ParenthesizedArgs\n {\n-    let ParenthesisedArgs { inputs, output, span } = data;\n-    ParenthesisedArgs {\n+    let ParenthesizedArgs { inputs, output, span } = data;\n+    ParenthesizedArgs {\n         inputs: inputs.move_map(|ty| fld.fold_ty(ty)),\n         output: output.map(|ty| fld.fold_ty(ty)),\n         span: fld.new_span(span)"}, {"sha": "09ea099525326015c87b3c9893d4df0559515548", "filename": "src/libsyntax/parse/parser.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/8c551155d900872fd10b1abd7c4fb3f2c03cda87/src%2Flibsyntax%2Fparse%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8c551155d900872fd10b1abd7c4fb3f2c03cda87/src%2Flibsyntax%2Fparse%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fparser.rs?ref=8c551155d900872fd10b1abd7c4fb3f2c03cda87", "patch": "@@ -1,5 +1,5 @@\n use rustc_target::spec::abi::{self, Abi};\n-use ast::{AngleBracketedArgs, ParenthesisedArgs, AttrStyle, BareFnTy};\n+use ast::{AngleBracketedArgs, ParenthesizedArgs, AttrStyle, BareFnTy};\n use ast::{GenericBound, TraitBoundModifier};\n use ast::Unsafety;\n use ast::{Mod, AnonConst, Arg, Arm, Guard, Attribute, BindingMode, TraitItemKind};\n@@ -2203,7 +2203,7 @@ impl<'a> Parser<'a> {\n                 } else {\n                     None\n                 };\n-                ParenthesisedArgs { inputs, output, span }.into()\n+                ParenthesizedArgs { inputs, output, span }.into()\n             };\n \n             PathSegment { ident, args, id: ast::DUMMY_NODE_ID }"}, {"sha": "0b4ccdd5a56d4939ce553c2bc25bd6f717558479", "filename": "src/test/ui/parenthesized-deref-suggestion.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/8c551155d900872fd10b1abd7c4fb3f2c03cda87/src%2Ftest%2Fui%2Fparenthesized-deref-suggestion.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8c551155d900872fd10b1abd7c4fb3f2c03cda87/src%2Ftest%2Fui%2Fparenthesized-deref-suggestion.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparenthesized-deref-suggestion.rs?ref=8c551155d900872fd10b1abd7c4fb3f2c03cda87", "previous_filename": "src/test/ui/parenthesised-deref-suggestion.rs"}, {"sha": "fd9b0e8216b4113b56814b25efa3ccd0d070f5b8", "filename": "src/test/ui/parenthesized-deref-suggestion.stderr", "status": "renamed", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/8c551155d900872fd10b1abd7c4fb3f2c03cda87/src%2Ftest%2Fui%2Fparenthesized-deref-suggestion.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/8c551155d900872fd10b1abd7c4fb3f2c03cda87/src%2Ftest%2Fui%2Fparenthesized-deref-suggestion.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparenthesized-deref-suggestion.stderr?ref=8c551155d900872fd10b1abd7c4fb3f2c03cda87", "patch": "@@ -1,5 +1,5 @@\n error[E0609]: no field `opts` on type `*const Session`\n-  --> $DIR/parenthesised-deref-suggestion.rs:7:30\n+  --> $DIR/parenthesized-deref-suggestion.rs:7:30\n    |\n LL |     (sess as *const Session).opts; //~ ERROR no field `opts` on type `*const Session`\n    |                              ^^^^\n@@ -9,7 +9,7 @@ LL |     (*(sess as *const Session)).opts; //~ ERROR no field `opts` on type `*c\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error[E0609]: no field `0` on type `[u32; 1]`\n-  --> $DIR/parenthesised-deref-suggestion.rs:10:21\n+  --> $DIR/parenthesized-deref-suggestion.rs:10:21\n    |\n LL |     (x as [u32; 1]).0; //~ ERROR no field `0` on type `[u32; 1]`\n    |     ----------------^", "previous_filename": "src/test/ui/parenthesised-deref-suggestion.stderr"}]}