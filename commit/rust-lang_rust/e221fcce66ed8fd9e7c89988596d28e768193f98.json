{"sha": "e221fcce66ed8fd9e7c89988596d28e768193f98", "node_id": "MDY6Q29tbWl0NzI0NzEyOmUyMjFmY2NlNjZlZDhmZDllN2M4OTk4ODU5NmQyOGU3NjgxOTNmOTg=", "commit": {"author": {"name": "Alexander Regueiro", "email": "alexreg@me.com", "date": "2018-08-09T20:51:12Z"}, "committer": {"name": "Alexander Regueiro", "email": "alexreg@me.com", "date": "2018-08-20T20:57:56Z"}, "message": "Removed `raw_identifiers` feature gate.", "tree": {"sha": "e046b5f37b202e70a7d15a8f5f72a4159f4eb32d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e046b5f37b202e70a7d15a8f5f72a4159f4eb32d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e221fcce66ed8fd9e7c89988596d28e768193f98", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e221fcce66ed8fd9e7c89988596d28e768193f98", "html_url": "https://github.com/rust-lang/rust/commit/e221fcce66ed8fd9e7c89988596d28e768193f98", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e221fcce66ed8fd9e7c89988596d28e768193f98/comments", "author": {"login": "alexreg", "id": 67036, "node_id": "MDQ6VXNlcjY3MDM2", "avatar_url": "https://avatars.githubusercontent.com/u/67036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexreg", "html_url": "https://github.com/alexreg", "followers_url": "https://api.github.com/users/alexreg/followers", "following_url": "https://api.github.com/users/alexreg/following{/other_user}", "gists_url": "https://api.github.com/users/alexreg/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexreg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexreg/subscriptions", "organizations_url": "https://api.github.com/users/alexreg/orgs", "repos_url": "https://api.github.com/users/alexreg/repos", "events_url": "https://api.github.com/users/alexreg/events{/privacy}", "received_events_url": "https://api.github.com/users/alexreg/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexreg", "id": 67036, "node_id": "MDQ6VXNlcjY3MDM2", "avatar_url": "https://avatars.githubusercontent.com/u/67036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexreg", "html_url": "https://github.com/alexreg", "followers_url": "https://api.github.com/users/alexreg/followers", "following_url": "https://api.github.com/users/alexreg/following{/other_user}", "gists_url": "https://api.github.com/users/alexreg/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexreg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexreg/subscriptions", "organizations_url": "https://api.github.com/users/alexreg/orgs", "repos_url": "https://api.github.com/users/alexreg/repos", "events_url": "https://api.github.com/users/alexreg/events{/privacy}", "received_events_url": "https://api.github.com/users/alexreg/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1558ae7cfd5e1190d3388dcc6f0f734589e4e478", "url": "https://api.github.com/repos/rust-lang/rust/commits/1558ae7cfd5e1190d3388dcc6f0f734589e4e478", "html_url": "https://github.com/rust-lang/rust/commit/1558ae7cfd5e1190d3388dcc6f0f734589e4e478"}], "stats": {"total": 151, "additions": 42, "deletions": 109}, "files": [{"sha": "102c806734407542d1992feafff955ee00f42b88", "filename": "src/librustc_lint/builtin.rs", "status": "modified", "additions": 6, "deletions": 8, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/e221fcce66ed8fd9e7c89988596d28e768193f98/src%2Flibrustc_lint%2Fbuiltin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e221fcce66ed8fd9e7c89988596d28e768193f98/src%2Flibrustc_lint%2Fbuiltin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_lint%2Fbuiltin.rs?ref=e221fcce66ed8fd9e7c89988596d28e768193f98", "patch": "@@ -1928,14 +1928,12 @@ impl Async2018 {\n         );\n \n         // Don't suggest about raw identifiers if the feature isn't active\n-        if cx.sess.features_untracked().raw_identifiers {\n-            lint.span_suggestion_with_applicability(\n-                span,\n-                \"you can use a raw identifier to stay compatible\",\n-                \"r#async\".to_string(),\n-                Applicability::MachineApplicable,\n-            );\n-        }\n+        lint.span_suggestion_with_applicability(\n+            span,\n+            \"you can use a raw identifier to stay compatible\",\n+            \"r#async\".to_string(),\n+            Applicability::MachineApplicable,\n+        );\n         lint.emit()\n     }\n }"}, {"sha": "89af57a085807c74ccfd1702ca7c1a1322783299", "filename": "src/libsyntax/diagnostic_list.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/e221fcce66ed8fd9e7c89988596d28e768193f98/src%2Flibsyntax%2Fdiagnostic_list.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e221fcce66ed8fd9e7c89988596d28e768193f98/src%2Flibsyntax%2Fdiagnostic_list.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fdiagnostic_list.rs?ref=e221fcce66ed8fd9e7c89988596d28e768193f98", "patch": "@@ -382,8 +382,9 @@ Erroneous code example:\n \n ```ignore (limited to a warning during 2018 edition development)\n #![feature(rust_2018_preview)]\n-#![feature(raw_identifiers)] // error: the feature `raw_identifiers` is\n-                             // included in the Rust 2018 edition\n+#![feature(impl_header_lifetime_elision)] // error: the feature\n+                                          // `impl_header_lifetime_elision` is\n+                                          // included in the Rust 2018 edition\n ```\n \n \"##,"}, {"sha": "8a595113fcb5dcdd242c2f669dffc67e45d9cdc5", "filename": "src/libsyntax/feature_gate.rs", "status": "modified", "additions": 2, "deletions": 13, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/e221fcce66ed8fd9e7c89988596d28e768193f98/src%2Flibsyntax%2Ffeature_gate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e221fcce66ed8fd9e7c89988596d28e768193f98/src%2Flibsyntax%2Ffeature_gate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Ffeature_gate.rs?ref=e221fcce66ed8fd9e7c89988596d28e768193f98", "patch": "@@ -423,9 +423,6 @@ declare_features! (\n     // `use path as _;` and `extern crate c as _;`\n     (active, underscore_imports, \"1.26.0\", Some(48216), None),\n \n-    // Allows keywords to be escaped for use as identifiers\n-    (active, raw_identifiers, \"1.26.0\", Some(48589), Some(Edition::Edition2018)),\n-\n     // Allows macro invocations in `extern {}` blocks\n     (active, macros_in_extern, \"1.27.0\", Some(49476), None),\n \n@@ -651,6 +648,8 @@ declare_features! (\n     // Allows importing and reexporting macros with `use`,\n     // enables macro modularization in general.\n     (accepted, use_extern_macros, \"1.30.0\", Some(35896), None),\n+    // Allows keywords to be escaped for use as identifiers\n+    (accepted, raw_identifiers, \"1.30.0\", Some(48589), None),\n );\n \n // If you change this, please modify src/doc/unstable-book as well. You must\n@@ -2072,16 +2071,6 @@ pub fn check_crate(krate: &ast::Crate,\n         plugin_attributes,\n     };\n \n-    if !features.raw_identifiers {\n-        for &span in sess.raw_identifier_spans.borrow().iter() {\n-            if !span.allows_unstable() {\n-                gate_feature!(&ctx, raw_identifiers, span,\n-                    \"raw identifiers are experimental and subject to change\"\n-                );\n-            }\n-        }\n-    }\n-\n     let visitor = &mut PostExpansionVisitor { context: &ctx };\n     visitor.whole_crate_feature_gates(krate);\n     visit::walk_crate(visitor, krate);"}, {"sha": "f8ed2c7f432eb6a52dd1a7386a66c6d87a13aa58", "filename": "src/test/run-pass/auxiliary/edition-kw-macro-2015.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e221fcce66ed8fd9e7c89988596d28e768193f98/src%2Ftest%2Frun-pass%2Fauxiliary%2Fedition-kw-macro-2015.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e221fcce66ed8fd9e7c89988596d28e768193f98/src%2Ftest%2Frun-pass%2Fauxiliary%2Fedition-kw-macro-2015.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fauxiliary%2Fedition-kw-macro-2015.rs?ref=e221fcce66ed8fd9e7c89988596d28e768193f98", "patch": "@@ -10,8 +10,6 @@\n \n // edition:2015\n \n-#![feature(raw_identifiers)]\n-\n #[macro_export]\n macro_rules! produces_async {\n     () => (pub fn async() {})"}, {"sha": "1751eacc6b7ce42bb90b831fd87870d6aff0d40a", "filename": "src/test/run-pass/edition-keywords-2015-2015.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e221fcce66ed8fd9e7c89988596d28e768193f98/src%2Ftest%2Frun-pass%2Fedition-keywords-2015-2015.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e221fcce66ed8fd9e7c89988596d28e768193f98/src%2Ftest%2Frun-pass%2Fedition-keywords-2015-2015.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fedition-keywords-2015-2015.rs?ref=e221fcce66ed8fd9e7c89988596d28e768193f98", "patch": "@@ -11,8 +11,6 @@\n // edition:2015\n // aux-build:edition-kw-macro-2015.rs\n \n-#![feature(raw_identifiers)]\n-\n #[macro_use]\n extern crate edition_kw_macro_2015;\n "}, {"sha": "f2794a4b8d81ab403c2a5007e7e8ac71425e48c4", "filename": "src/test/run-pass/edition-keywords-2015-2018.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e221fcce66ed8fd9e7c89988596d28e768193f98/src%2Ftest%2Frun-pass%2Fedition-keywords-2015-2018.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e221fcce66ed8fd9e7c89988596d28e768193f98/src%2Ftest%2Frun-pass%2Fedition-keywords-2015-2018.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fedition-keywords-2015-2018.rs?ref=e221fcce66ed8fd9e7c89988596d28e768193f98", "patch": "@@ -11,8 +11,6 @@\n // edition:2015\n // aux-build:edition-kw-macro-2018.rs\n \n-#![feature(raw_identifiers)]\n-\n #[macro_use]\n extern crate edition_kw_macro_2018;\n "}, {"sha": "2ef9fba2076add70307e2be38398a0809f88b1c8", "filename": "src/test/run-pass/rfc-2151-raw-identifiers/attr.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e221fcce66ed8fd9e7c89988596d28e768193f98/src%2Ftest%2Frun-pass%2Frfc-2151-raw-identifiers%2Fattr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e221fcce66ed8fd9e7c89988596d28e768193f98/src%2Ftest%2Frun-pass%2Frfc-2151-raw-identifiers%2Fattr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Frfc-2151-raw-identifiers%2Fattr.rs?ref=e221fcce66ed8fd9e7c89988596d28e768193f98", "patch": "@@ -8,8 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![feature(raw_identifiers)]\n-\n use std::mem;\n \n #[r#repr(r#C, r#packed)]"}, {"sha": "eefce3981bec1f64c1a9a25b739c0d825355465f", "filename": "src/test/run-pass/rfc-2151-raw-identifiers/basic.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e221fcce66ed8fd9e7c89988596d28e768193f98/src%2Ftest%2Frun-pass%2Frfc-2151-raw-identifiers%2Fbasic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e221fcce66ed8fd9e7c89988596d28e768193f98/src%2Ftest%2Frun-pass%2Frfc-2151-raw-identifiers%2Fbasic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Frfc-2151-raw-identifiers%2Fbasic.rs?ref=e221fcce66ed8fd9e7c89988596d28e768193f98", "patch": "@@ -8,8 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![feature(raw_identifiers)]\n-\n fn r#fn(r#match: u32) -> u32 {\n     r#match\n }"}, {"sha": "4306ffe2042af6d326cfe748f858c967d59a8872", "filename": "src/test/run-pass/rfc-2151-raw-identifiers/items.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e221fcce66ed8fd9e7c89988596d28e768193f98/src%2Ftest%2Frun-pass%2Frfc-2151-raw-identifiers%2Fitems.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e221fcce66ed8fd9e7c89988596d28e768193f98/src%2Ftest%2Frun-pass%2Frfc-2151-raw-identifiers%2Fitems.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Frfc-2151-raw-identifiers%2Fitems.rs?ref=e221fcce66ed8fd9e7c89988596d28e768193f98", "patch": "@@ -8,8 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![feature(raw_identifiers)]\n-\n #[derive(Debug, PartialEq, Eq)]\n struct IntWrapper(u32);\n "}, {"sha": "9e89b79266cface4c335c39e1a6db9e29108411b", "filename": "src/test/run-pass/rfc-2151-raw-identifiers/macros.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/e221fcce66ed8fd9e7c89988596d28e768193f98/src%2Ftest%2Frun-pass%2Frfc-2151-raw-identifiers%2Fmacros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e221fcce66ed8fd9e7c89988596d28e768193f98/src%2Ftest%2Frun-pass%2Frfc-2151-raw-identifiers%2Fmacros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Frfc-2151-raw-identifiers%2Fmacros.rs?ref=e221fcce66ed8fd9e7c89988596d28e768193f98", "patch": "@@ -9,7 +9,6 @@\n // except according to those terms.\n \n #![feature(decl_macro)]\n-#![feature(raw_identifiers)]\n \n r#macro_rules! r#struct {\n     ($r#struct:expr) => { $r#struct }"}, {"sha": "2e3492937acb976d514f606b93518cab0487db02", "filename": "src/test/ui/E0705.rs", "status": "modified", "additions": 3, "deletions": 6, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/e221fcce66ed8fd9e7c89988596d28e768193f98/src%2Ftest%2Fui%2FE0705.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e221fcce66ed8fd9e7c89988596d28e768193f98/src%2Ftest%2Fui%2FE0705.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2FE0705.rs?ref=e221fcce66ed8fd9e7c89988596d28e768193f98", "patch": "@@ -10,11 +10,8 @@\n \n // compile-pass\n \n-#![feature(raw_identifiers)]\n-//~^ WARN the feature `raw_identifiers` is included in the Rust 2018 edition\n+#![feature(impl_header_lifetime_elision)]\n+//~^ WARN the feature `impl_header_lifetime_elision` is included in the Rust 2018 edition\n #![feature(rust_2018_preview)]\n \n-fn main() {\n-    let foo = 0;\n-    let bar = r#foo;\n-}\n+fn main() {}"}, {"sha": "c40064d38d2ffda28f942c01f89e53eab11d7962", "filename": "src/test/ui/E0705.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/e221fcce66ed8fd9e7c89988596d28e768193f98/src%2Ftest%2Fui%2FE0705.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e221fcce66ed8fd9e7c89988596d28e768193f98/src%2Ftest%2Fui%2FE0705.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2FE0705.stderr?ref=e221fcce66ed8fd9e7c89988596d28e768193f98", "patch": "@@ -1,6 +1,6 @@\n-warning[E0705]: the feature `raw_identifiers` is included in the Rust 2018 edition\n+warning[E0705]: the feature `impl_header_lifetime_elision` is included in the Rust 2018 edition\n   --> $DIR/E0705.rs:13:12\n    |\n-LL | #![feature(raw_identifiers)]\n-   |            ^^^^^^^^^^^^^^^\n+LL | #![feature(impl_header_lifetime_elision)]\n+   |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n "}, {"sha": "5b8832ddaf27ca4496335a43e3f400b367965ae2", "filename": "src/test/ui/editions/auxiliary/edition-kw-macro-2015.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/e221fcce66ed8fd9e7c89988596d28e768193f98/src%2Ftest%2Fui%2Feditions%2Fauxiliary%2Fedition-kw-macro-2015.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e221fcce66ed8fd9e7c89988596d28e768193f98/src%2Ftest%2Fui%2Feditions%2Fauxiliary%2Fedition-kw-macro-2015.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Feditions%2Fauxiliary%2Fedition-kw-macro-2015.rs?ref=e221fcce66ed8fd9e7c89988596d28e768193f98", "patch": "@@ -10,7 +10,6 @@\n \n // edition:2015\n \n-#![feature(raw_identifiers)]\n #![allow(async_idents)]\n \n #[macro_export]"}, {"sha": "a9037a50ecb6b94c6f87b9d6494854f7693230cc", "filename": "src/test/ui/editions/edition-keywords-2015-2015-expansion.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/e221fcce66ed8fd9e7c89988596d28e768193f98/src%2Ftest%2Fui%2Feditions%2Fedition-keywords-2015-2015-expansion.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e221fcce66ed8fd9e7c89988596d28e768193f98/src%2Ftest%2Fui%2Feditions%2Fedition-keywords-2015-2015-expansion.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Feditions%2Fedition-keywords-2015-2015-expansion.rs?ref=e221fcce66ed8fd9e7c89988596d28e768193f98", "patch": "@@ -12,7 +12,6 @@\n // aux-build:edition-kw-macro-2015.rs\n // compile-pass\n \n-#![feature(raw_identifiers)]\n #![allow(async_idents)]\n \n #[macro_use]"}, {"sha": "bdb190c748acea248d0bbfd7e1880cd420e34ab9", "filename": "src/test/ui/editions/edition-keywords-2015-2015-parsing.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e221fcce66ed8fd9e7c89988596d28e768193f98/src%2Ftest%2Fui%2Feditions%2Fedition-keywords-2015-2015-parsing.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e221fcce66ed8fd9e7c89988596d28e768193f98/src%2Ftest%2Fui%2Feditions%2Fedition-keywords-2015-2015-parsing.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Feditions%2Fedition-keywords-2015-2015-parsing.rs?ref=e221fcce66ed8fd9e7c89988596d28e768193f98", "patch": "@@ -11,8 +11,6 @@\n // edition:2015\n // aux-build:edition-kw-macro-2015.rs\n \n-#![feature(raw_identifiers)]\n-\n #[macro_use]\n extern crate edition_kw_macro_2015;\n "}, {"sha": "a629d13e6c31bd72526a5e4c64b4c62868344f70", "filename": "src/test/ui/editions/edition-keywords-2015-2015-parsing.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e221fcce66ed8fd9e7c89988596d28e768193f98/src%2Ftest%2Fui%2Feditions%2Fedition-keywords-2015-2015-parsing.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e221fcce66ed8fd9e7c89988596d28e768193f98/src%2Ftest%2Fui%2Feditions%2Fedition-keywords-2015-2015-parsing.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Feditions%2Fedition-keywords-2015-2015-parsing.stderr?ref=e221fcce66ed8fd9e7c89988596d28e768193f98", "patch": "@@ -1,11 +1,11 @@\n error: no rules expected the token `r#async`\n-  --> $DIR/edition-keywords-2015-2015-parsing.rs:24:31\n+  --> $DIR/edition-keywords-2015-2015-parsing.rs:22:31\n    |\n LL |     r#async = consumes_async!(r#async); //~ ERROR no rules expected the token `r#async`\n    |                               ^^^^^^^\n \n error: no rules expected the token `async`\n-  --> $DIR/edition-keywords-2015-2015-parsing.rs:25:35\n+  --> $DIR/edition-keywords-2015-2015-parsing.rs:23:35\n    |\n LL |     r#async = consumes_async_raw!(async); //~ ERROR no rules expected the token `async`\n    |                                   ^^^^^"}, {"sha": "291fd0285e57c922efb4bc8a862caa24196bdf1d", "filename": "src/test/ui/editions/edition-keywords-2015-2018-expansion.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e221fcce66ed8fd9e7c89988596d28e768193f98/src%2Ftest%2Fui%2Feditions%2Fedition-keywords-2015-2018-expansion.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e221fcce66ed8fd9e7c89988596d28e768193f98/src%2Ftest%2Fui%2Feditions%2Fedition-keywords-2015-2018-expansion.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Feditions%2Fedition-keywords-2015-2018-expansion.rs?ref=e221fcce66ed8fd9e7c89988596d28e768193f98", "patch": "@@ -11,8 +11,6 @@\n // edition:2015\n // aux-build:edition-kw-macro-2018.rs\n \n-#![feature(raw_identifiers)]\n-\n #[macro_use]\n extern crate edition_kw_macro_2018;\n "}, {"sha": "d087146d7a14a592c198c9d7a1a269bb055c318b", "filename": "src/test/ui/editions/edition-keywords-2015-2018-expansion.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e221fcce66ed8fd9e7c89988596d28e768193f98/src%2Ftest%2Fui%2Feditions%2Fedition-keywords-2015-2018-expansion.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e221fcce66ed8fd9e7c89988596d28e768193f98/src%2Ftest%2Fui%2Feditions%2Fedition-keywords-2015-2018-expansion.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Feditions%2Fedition-keywords-2015-2018-expansion.stderr?ref=e221fcce66ed8fd9e7c89988596d28e768193f98", "patch": "@@ -1,5 +1,5 @@\n error: expected identifier, found reserved keyword `async`\n-  --> $DIR/edition-keywords-2015-2018-expansion.rs:20:5\n+  --> $DIR/edition-keywords-2015-2018-expansion.rs:18:5\n    |\n LL |     produces_async! {} //~ ERROR expected identifier, found reserved keyword\n    |     ^^^^^^^^^^^^^^^^^^ expected identifier, found reserved keyword"}, {"sha": "1b7bfb530596a0b782cef4cbfb790ac705bbfbec", "filename": "src/test/ui/editions/edition-keywords-2015-2018-parsing.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e221fcce66ed8fd9e7c89988596d28e768193f98/src%2Ftest%2Fui%2Feditions%2Fedition-keywords-2015-2018-parsing.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e221fcce66ed8fd9e7c89988596d28e768193f98/src%2Ftest%2Fui%2Feditions%2Fedition-keywords-2015-2018-parsing.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Feditions%2Fedition-keywords-2015-2018-parsing.rs?ref=e221fcce66ed8fd9e7c89988596d28e768193f98", "patch": "@@ -11,8 +11,6 @@\n // edition:2015\n // aux-build:edition-kw-macro-2018.rs\n \n-#![feature(raw_identifiers)]\n-\n #[macro_use]\n extern crate edition_kw_macro_2018;\n "}, {"sha": "ab8a34a4a9e3dabee4decdcbcfe8fe50a533d8fe", "filename": "src/test/ui/editions/edition-keywords-2015-2018-parsing.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e221fcce66ed8fd9e7c89988596d28e768193f98/src%2Ftest%2Fui%2Feditions%2Fedition-keywords-2015-2018-parsing.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e221fcce66ed8fd9e7c89988596d28e768193f98/src%2Ftest%2Fui%2Feditions%2Fedition-keywords-2015-2018-parsing.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Feditions%2Fedition-keywords-2015-2018-parsing.stderr?ref=e221fcce66ed8fd9e7c89988596d28e768193f98", "patch": "@@ -1,11 +1,11 @@\n error: no rules expected the token `r#async`\n-  --> $DIR/edition-keywords-2015-2018-parsing.rs:24:31\n+  --> $DIR/edition-keywords-2015-2018-parsing.rs:22:31\n    |\n LL |     r#async = consumes_async!(r#async); //~ ERROR no rules expected the token `r#async`\n    |                               ^^^^^^^\n \n error: no rules expected the token `async`\n-  --> $DIR/edition-keywords-2015-2018-parsing.rs:25:35\n+  --> $DIR/edition-keywords-2015-2018-parsing.rs:23:35\n    |\n LL |     r#async = consumes_async_raw!(async); //~ ERROR no rules expected the token `async`\n    |                                   ^^^^^"}, {"sha": "38024feb432d9f31587a2f8787b895d8b9169763", "filename": "src/test/ui/feature-gates/feature-gate-raw-identifiers.rs", "status": "removed", "additions": 0, "deletions": 14, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/1558ae7cfd5e1190d3388dcc6f0f734589e4e478/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-raw-identifiers.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1558ae7cfd5e1190d3388dcc6f0f734589e4e478/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-raw-identifiers.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-raw-identifiers.rs?ref=1558ae7cfd5e1190d3388dcc6f0f734589e4e478", "patch": "@@ -1,14 +0,0 @@\n-// Copyright 2018 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n-fn main() {\n-    let r#foo = 3; //~ ERROR raw identifiers are experimental and subject to change\n-    println!(\"{}\", foo);\n-}"}, {"sha": "02eff7247c47bf6f1e705f11ae9d0855cb451987", "filename": "src/test/ui/feature-gates/feature-gate-raw-identifiers.stderr", "status": "removed", "additions": 0, "deletions": 11, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/1558ae7cfd5e1190d3388dcc6f0f734589e4e478/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-raw-identifiers.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1558ae7cfd5e1190d3388dcc6f0f734589e4e478/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-raw-identifiers.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-raw-identifiers.stderr?ref=1558ae7cfd5e1190d3388dcc6f0f734589e4e478", "patch": "@@ -1,11 +0,0 @@\n-error[E0658]: raw identifiers are experimental and subject to change (see issue #48589)\n-  --> $DIR/feature-gate-raw-identifiers.rs:12:9\n-   |\n-LL |     let r#foo = 3; //~ ERROR raw identifiers are experimental and subject to change\n-   |         ^^^^^\n-   |\n-   = help: add #![feature(raw_identifiers)] to the crate attributes to enable\n-\n-error: aborting due to previous error\n-\n-For more information about this error, try `rustc --explain E0658`."}, {"sha": "f1bfbc95eb39564b80948b42910e7d0a7414fbe5", "filename": "src/test/ui/raw/raw-literal-keywords.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e221fcce66ed8fd9e7c89988596d28e768193f98/src%2Ftest%2Fui%2Fraw%2Fraw-literal-keywords.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e221fcce66ed8fd9e7c89988596d28e768193f98/src%2Ftest%2Fui%2Fraw%2Fraw-literal-keywords.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fraw%2Fraw-literal-keywords.rs?ref=e221fcce66ed8fd9e7c89988596d28e768193f98", "patch": "@@ -10,8 +10,6 @@\n \n // compile-flags: -Z parse-only\n \n-#![feature(raw_identifiers)]\n-\n fn test_if() {\n     r#if true { } //~ ERROR found `true`\n }"}, {"sha": "8a6b91b4b4b6f2f1230618db0821c92a71f9904b", "filename": "src/test/ui/raw/raw-literal-keywords.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/e221fcce66ed8fd9e7c89988596d28e768193f98/src%2Ftest%2Fui%2Fraw%2Fraw-literal-keywords.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e221fcce66ed8fd9e7c89988596d28e768193f98/src%2Ftest%2Fui%2Fraw%2Fraw-literal-keywords.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fraw%2Fraw-literal-keywords.stderr?ref=e221fcce66ed8fd9e7c89988596d28e768193f98", "patch": "@@ -1,17 +1,17 @@\n error: expected one of `!`, `.`, `::`, `;`, `?`, `{`, `}`, or an operator, found `true`\n-  --> $DIR/raw-literal-keywords.rs:16:10\n+  --> $DIR/raw-literal-keywords.rs:14:10\n    |\n LL |     r#if true { } //~ ERROR found `true`\n    |          ^^^^ expected one of 8 possible tokens here\n \n error: expected one of `!`, `.`, `::`, `;`, `?`, `{`, `}`, or an operator, found `Test`\n-  --> $DIR/raw-literal-keywords.rs:20:14\n+  --> $DIR/raw-literal-keywords.rs:18:14\n    |\n LL |     r#struct Test; //~ ERROR found `Test`\n    |              ^^^^ expected one of 8 possible tokens here\n \n error: expected one of `!`, `.`, `::`, `;`, `?`, `{`, `}`, or an operator, found `Test`\n-  --> $DIR/raw-literal-keywords.rs:24:13\n+  --> $DIR/raw-literal-keywords.rs:22:13\n    |\n LL |     r#union Test; //~ ERROR found `Test`\n    |             ^^^^ expected one of 8 possible tokens here"}, {"sha": "17496d767b6226b95b56c0590d0f7f2e8bc82cf7", "filename": "src/test/ui/raw/raw-literal-self.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e221fcce66ed8fd9e7c89988596d28e768193f98/src%2Ftest%2Fui%2Fraw%2Fraw-literal-self.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e221fcce66ed8fd9e7c89988596d28e768193f98/src%2Ftest%2Fui%2Fraw%2Fraw-literal-self.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fraw%2Fraw-literal-self.rs?ref=e221fcce66ed8fd9e7c89988596d28e768193f98", "patch": "@@ -10,8 +10,6 @@\n \n // compile-flags: -Z parse-only\n \n-#![feature(raw_identifiers)]\n-\n fn self_test(r#self: u32) {\n     //~^ ERROR `r#self` is not currently supported.\n }"}, {"sha": "f4b759372471cdb79dfd34fe990d3e4f3bc22298", "filename": "src/test/ui/raw/raw-literal-self.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e221fcce66ed8fd9e7c89988596d28e768193f98/src%2Ftest%2Fui%2Fraw%2Fraw-literal-self.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e221fcce66ed8fd9e7c89988596d28e768193f98/src%2Ftest%2Fui%2Fraw%2Fraw-literal-self.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fraw%2Fraw-literal-self.stderr?ref=e221fcce66ed8fd9e7c89988596d28e768193f98", "patch": "@@ -1,5 +1,5 @@\n error: `r#self` is not currently supported.\n-  --> $DIR/raw-literal-self.rs:15:14\n+  --> $DIR/raw-literal-self.rs:13:14\n    |\n LL | fn self_test(r#self: u32) {\n    |              ^^^^^^"}, {"sha": "741c1c70209bc91f60d9703bbc8e4d0daa112297", "filename": "src/test/ui/rust-2018/async-ident-allowed.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e221fcce66ed8fd9e7c89988596d28e768193f98/src%2Ftest%2Fui%2Frust-2018%2Fasync-ident-allowed.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e221fcce66ed8fd9e7c89988596d28e768193f98/src%2Ftest%2Fui%2Frust-2018%2Fasync-ident-allowed.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frust-2018%2Fasync-ident-allowed.stderr?ref=e221fcce66ed8fd9e7c89988596d28e768193f98", "patch": "@@ -2,7 +2,7 @@ error: `async` is a keyword in the 2018 edition\n   --> $DIR/async-ident-allowed.rs:19:9\n    |\n LL |     let async = 3; //~ ERROR: is a keyword\n-   |         ^^^^^\n+   |         ^^^^^ help: you can use a raw identifier to stay compatible: `r#async`\n    |\n note: lint level defined here\n   --> $DIR/async-ident-allowed.rs:13:9"}, {"sha": "15b8eec3bea99071182c90165c9b98726682d97a", "filename": "src/test/ui/rust-2018/async-ident.fixed", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/e221fcce66ed8fd9e7c89988596d28e768193f98/src%2Ftest%2Fui%2Frust-2018%2Fasync-ident.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/e221fcce66ed8fd9e7c89988596d28e768193f98/src%2Ftest%2Fui%2Frust-2018%2Fasync-ident.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frust-2018%2Fasync-ident.fixed?ref=e221fcce66ed8fd9e7c89988596d28e768193f98", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![feature(raw_identifiers)]\n #![allow(dead_code, unused_variables, non_camel_case_types, non_upper_case_globals)]\n #![deny(async_idents)]\n "}, {"sha": "6087d2c16423ea7c537299e8acfcb4361ba97a66", "filename": "src/test/ui/rust-2018/async-ident.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/e221fcce66ed8fd9e7c89988596d28e768193f98/src%2Ftest%2Fui%2Frust-2018%2Fasync-ident.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e221fcce66ed8fd9e7c89988596d28e768193f98/src%2Ftest%2Fui%2Frust-2018%2Fasync-ident.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frust-2018%2Fasync-ident.rs?ref=e221fcce66ed8fd9e7c89988596d28e768193f98", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![feature(raw_identifiers)]\n #![allow(dead_code, unused_variables, non_camel_case_types, non_upper_case_globals)]\n #![deny(async_idents)]\n "}, {"sha": "06d68a38c5f381769660947e68890b095603596e", "filename": "src/test/ui/rust-2018/async-ident.stderr", "status": "modified", "additions": 15, "deletions": 15, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/e221fcce66ed8fd9e7c89988596d28e768193f98/src%2Ftest%2Fui%2Frust-2018%2Fasync-ident.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e221fcce66ed8fd9e7c89988596d28e768193f98/src%2Ftest%2Fui%2Frust-2018%2Fasync-ident.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frust-2018%2Fasync-ident.stderr?ref=e221fcce66ed8fd9e7c89988596d28e768193f98", "patch": "@@ -1,19 +1,19 @@\n error: `async` is a keyword in the 2018 edition\n-  --> $DIR/async-ident.rs:18:4\n+  --> $DIR/async-ident.rs:17:4\n    |\n LL | fn async() {} //~ ERROR async\n    |    ^^^^^ help: you can use a raw identifier to stay compatible: `r#async`\n    |\n note: lint level defined here\n-  --> $DIR/async-ident.rs:13:9\n+  --> $DIR/async-ident.rs:12:9\n    |\n LL | #![deny(async_idents)]\n    |         ^^^^^^^^^^^^\n    = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\n    = note: for more information, see issue #49716 <https://github.com/rust-lang/rust/issues/49716>\n \n error: `async` is a keyword in the 2018 edition\n-  --> $DIR/async-ident.rs:23:7\n+  --> $DIR/async-ident.rs:22:7\n    |\n LL |     ($async:expr, async) => {};\n    |       ^^^^^ help: you can use a raw identifier to stay compatible: `r#async`\n@@ -22,7 +22,7 @@ LL |     ($async:expr, async) => {};\n    = note: for more information, see issue #49716 <https://github.com/rust-lang/rust/issues/49716>\n \n error: `async` is a keyword in the 2018 edition\n-  --> $DIR/async-ident.rs:23:19\n+  --> $DIR/async-ident.rs:22:19\n    |\n LL |     ($async:expr, async) => {};\n    |                   ^^^^^ help: you can use a raw identifier to stay compatible: `r#async`\n@@ -31,7 +31,7 @@ LL |     ($async:expr, async) => {};\n    = note: for more information, see issue #49716 <https://github.com/rust-lang/rust/issues/49716>\n \n error: `async` is a keyword in the 2018 edition\n-  --> $DIR/async-ident.rs:37:11\n+  --> $DIR/async-ident.rs:36:11\n    |\n LL |     trait async {}\n    |           ^^^^^ help: you can use a raw identifier to stay compatible: `r#async`\n@@ -40,7 +40,7 @@ LL |     trait async {}\n    = note: for more information, see issue #49716 <https://github.com/rust-lang/rust/issues/49716>\n \n error: `async` is a keyword in the 2018 edition\n-  --> $DIR/async-ident.rs:41:10\n+  --> $DIR/async-ident.rs:40:10\n    |\n LL |     impl async for MyStruct {}\n    |          ^^^^^ help: you can use a raw identifier to stay compatible: `r#async`\n@@ -49,7 +49,7 @@ LL |     impl async for MyStruct {}\n    = note: for more information, see issue #49716 <https://github.com/rust-lang/rust/issues/49716>\n \n error: `async` is a keyword in the 2018 edition\n-  --> $DIR/async-ident.rs:47:12\n+  --> $DIR/async-ident.rs:46:12\n    |\n LL |     static async: u32 = 0;\n    |            ^^^^^ help: you can use a raw identifier to stay compatible: `r#async`\n@@ -58,7 +58,7 @@ LL |     static async: u32 = 0;\n    = note: for more information, see issue #49716 <https://github.com/rust-lang/rust/issues/49716>\n \n error: `async` is a keyword in the 2018 edition\n-  --> $DIR/async-ident.rs:53:11\n+  --> $DIR/async-ident.rs:52:11\n    |\n LL |     const async: u32 = 0;\n    |           ^^^^^ help: you can use a raw identifier to stay compatible: `r#async`\n@@ -67,7 +67,7 @@ LL |     const async: u32 = 0;\n    = note: for more information, see issue #49716 <https://github.com/rust-lang/rust/issues/49716>\n \n error: `async` is a keyword in the 2018 edition\n-  --> $DIR/async-ident.rs:59:15\n+  --> $DIR/async-ident.rs:58:15\n    |\n LL | impl Foo { fn async() {} }\n    |               ^^^^^ help: you can use a raw identifier to stay compatible: `r#async`\n@@ -76,7 +76,7 @@ LL | impl Foo { fn async() {} }\n    = note: for more information, see issue #49716 <https://github.com/rust-lang/rust/issues/49716>\n \n error: `async` is a keyword in the 2018 edition\n-  --> $DIR/async-ident.rs:64:12\n+  --> $DIR/async-ident.rs:63:12\n    |\n LL |     struct async {}\n    |            ^^^^^ help: you can use a raw identifier to stay compatible: `r#async`\n@@ -85,7 +85,7 @@ LL |     struct async {}\n    = note: for more information, see issue #49716 <https://github.com/rust-lang/rust/issues/49716>\n \n error: `async` is a keyword in the 2018 edition\n-  --> $DIR/async-ident.rs:67:9\n+  --> $DIR/async-ident.rs:66:9\n    |\n LL |     let async: async = async {};\n    |         ^^^^^ help: you can use a raw identifier to stay compatible: `r#async`\n@@ -94,7 +94,7 @@ LL |     let async: async = async {};\n    = note: for more information, see issue #49716 <https://github.com/rust-lang/rust/issues/49716>\n \n error: `async` is a keyword in the 2018 edition\n-  --> $DIR/async-ident.rs:67:16\n+  --> $DIR/async-ident.rs:66:16\n    |\n LL |     let async: async = async {};\n    |                ^^^^^ help: you can use a raw identifier to stay compatible: `r#async`\n@@ -103,7 +103,7 @@ LL |     let async: async = async {};\n    = note: for more information, see issue #49716 <https://github.com/rust-lang/rust/issues/49716>\n \n error: `async` is a keyword in the 2018 edition\n-  --> $DIR/async-ident.rs:67:24\n+  --> $DIR/async-ident.rs:66:24\n    |\n LL |     let async: async = async {};\n    |                        ^^^^^ help: you can use a raw identifier to stay compatible: `r#async`\n@@ -112,7 +112,7 @@ LL |     let async: async = async {};\n    = note: for more information, see issue #49716 <https://github.com/rust-lang/rust/issues/49716>\n \n error: `async` is a keyword in the 2018 edition\n-  --> $DIR/async-ident.rs:78:19\n+  --> $DIR/async-ident.rs:77:19\n    |\n LL |     () => (pub fn async() {})\n    |                   ^^^^^ help: you can use a raw identifier to stay compatible: `r#async`\n@@ -121,7 +121,7 @@ LL |     () => (pub fn async() {})\n    = note: for more information, see issue #49716 <https://github.com/rust-lang/rust/issues/49716>\n \n error: `async` is a keyword in the 2018 edition\n-  --> $DIR/async-ident.rs:85:6\n+  --> $DIR/async-ident.rs:84:6\n    |\n LL |     (async) => (1)\n    |      ^^^^^ help: you can use a raw identifier to stay compatible: `r#async`"}]}