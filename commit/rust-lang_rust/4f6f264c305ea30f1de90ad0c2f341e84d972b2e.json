{"sha": "4f6f264c305ea30f1de90ad0c2f341e84d972b2e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRmNmYyNjRjMzA1ZWEzMGYxZGU5MGFkMGMyZjM0MWU4NGQ5NzJiMmU=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2019-08-15T09:37:38Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2019-08-15T09:37:38Z"}, "message": "Auto merge of #909 - RalfJung:deny-warn, r=oli-obk\n\ndeny warnings on CI", "tree": {"sha": "33c99adb656ec31c17cc33e16c23363f3d753b43", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/33c99adb656ec31c17cc33e16c23363f3d753b43"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4f6f264c305ea30f1de90ad0c2f341e84d972b2e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4f6f264c305ea30f1de90ad0c2f341e84d972b2e", "html_url": "https://github.com/rust-lang/rust/commit/4f6f264c305ea30f1de90ad0c2f341e84d972b2e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4f6f264c305ea30f1de90ad0c2f341e84d972b2e/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c71b240f8548612e753c964a15479c9ecb754722", "url": "https://api.github.com/repos/rust-lang/rust/commits/c71b240f8548612e753c964a15479c9ecb754722", "html_url": "https://github.com/rust-lang/rust/commit/c71b240f8548612e753c964a15479c9ecb754722"}, {"sha": "f9241be73493f9f1e26631a5389b599557ef4f2f", "url": "https://api.github.com/repos/rust-lang/rust/commits/f9241be73493f9f1e26631a5389b599557ef4f2f", "html_url": "https://github.com/rust-lang/rust/commit/f9241be73493f9f1e26631a5389b599557ef4f2f"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "6de2391137ac6ed915b0f754c913573c609ef22e", "filename": "miri", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4f6f264c305ea30f1de90ad0c2f341e84d972b2e/miri", "raw_url": "https://github.com/rust-lang/rust/raw/4f6f264c305ea30f1de90ad0c2f341e84d972b2e/miri", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/miri?ref=4f6f264c305ea30f1de90ad0c2f341e84d972b2e", "patch": "@@ -45,7 +45,7 @@ fi\n # We set the rpath so that Miri finds the private rustc libraries it needs.\n # We enable debug-assertions to get tracing.\n # We enable line-only debuginfo for backtraces.\n-export RUSTFLAGS=\"-C link-args=-Wl,-rpath,$LIBDIR -C debug-assertions -C debuginfo=1\"\n+export RUSTFLAGS=\"-C link-args=-Wl,-rpath,$LIBDIR -C debug-assertions -C debuginfo=1 $RUSTC_EXTRA_FLAGS\"\n \n ## Helper functions\n "}, {"sha": "39da414de14a354affbe4a98f2310068cdfe7736", "filename": "src/eval.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4f6f264c305ea30f1de90ad0c2f341e84d972b2e/src%2Feval.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4f6f264c305ea30f1de90ad0c2f341e84d972b2e/src%2Feval.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Feval.rs?ref=4f6f264c305ea30f1de90ad0c2f341e84d972b2e", "patch": "@@ -40,7 +40,7 @@ pub fn create_ecx<'mir, 'tcx: 'mir>(\n         MemoryExtra::new(StdRng::seed_from_u64(config.seed.unwrap_or(0)), config.validate),\n     );\n     // Complete initialization.\n-    EnvVars::init(&mut ecx, config.communicate);\n+    EnvVars::init(&mut ecx);\n \n     // Setup first stack-frame\n     let main_instance = ty::Instance::mono(ecx.tcx.tcx, main_id);"}, {"sha": "eb5722a5a3d82714b98a8ec75a1eaca527a6a3c1", "filename": "src/shims/env.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/4f6f264c305ea30f1de90ad0c2f341e84d972b2e/src%2Fshims%2Fenv.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4f6f264c305ea30f1de90ad0c2f341e84d972b2e/src%2Fshims%2Fenv.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fshims%2Fenv.rs?ref=4f6f264c305ea30f1de90ad0c2f341e84d972b2e", "patch": "@@ -13,9 +13,8 @@ pub struct EnvVars {\n impl EnvVars {\n     pub(crate) fn init<'mir, 'tcx>(\n         ecx: &mut InterpCx<'mir, 'tcx, Evaluator<'tcx>>,\n-        communicate: bool,\n     ) {\n-        if communicate {\n+        if ecx.machine.communicate {\n             for (name, value) in std::env::vars() {\n                 let value = alloc_env_value(value.as_bytes(), ecx.memory_mut());\n                 ecx.machine.env_vars.map.insert(name.into_bytes(), value);"}, {"sha": "6f14be44ef0ac77f70408a9676244ede20f95b1b", "filename": "travis.sh", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/4f6f264c305ea30f1de90ad0c2f341e84d972b2e/travis.sh", "raw_url": "https://github.com/rust-lang/rust/raw/4f6f264c305ea30f1de90ad0c2f341e84d972b2e/travis.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/travis.sh?ref=4f6f264c305ea30f1de90ad0c2f341e84d972b2e", "patch": "@@ -8,6 +8,7 @@ else\n   FOREIGN_TARGET=i686-unknown-linux-gnu\n fi\n export CARGO_EXTRA_FLAGS=\"--all-features\"\n+export RUSTC_EXTRA_FLAGS=\"-D warnings\"\n \n # Prepare\n echo \"Build and install miri\""}]}