{"sha": "701eb3f62bca0b34fd6ff1bb245a787c33af2084", "node_id": "MDY6Q29tbWl0NzI0NzEyOjcwMWViM2Y2MmJjYTBiMzRmZDZmZjFiYjI0NWE3ODdjMzNhZjIwODQ=", "commit": {"author": {"name": "Scott Olson", "email": "scott@solson.me", "date": "2016-10-16T23:18:56Z"}, "committer": {"name": "Scott Olson", "email": "scott@solson.me", "date": "2016-10-16T23:18:56Z"}, "message": "Make locals debug printing smarter.", "tree": {"sha": "1fe6bd868e0b4fc3c2dc288bf0e446029303a752", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1fe6bd868e0b4fc3c2dc288bf0e446029303a752"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/701eb3f62bca0b34fd6ff1bb245a787c33af2084", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/701eb3f62bca0b34fd6ff1bb245a787c33af2084", "html_url": "https://github.com/rust-lang/rust/commit/701eb3f62bca0b34fd6ff1bb245a787c33af2084", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/701eb3f62bca0b34fd6ff1bb245a787c33af2084/comments", "author": {"login": "solson", "id": 26806, "node_id": "MDQ6VXNlcjI2ODA2", "avatar_url": "https://avatars.githubusercontent.com/u/26806?v=4", "gravatar_id": "", "url": "https://api.github.com/users/solson", "html_url": "https://github.com/solson", "followers_url": "https://api.github.com/users/solson/followers", "following_url": "https://api.github.com/users/solson/following{/other_user}", "gists_url": "https://api.github.com/users/solson/gists{/gist_id}", "starred_url": "https://api.github.com/users/solson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/solson/subscriptions", "organizations_url": "https://api.github.com/users/solson/orgs", "repos_url": "https://api.github.com/users/solson/repos", "events_url": "https://api.github.com/users/solson/events{/privacy}", "received_events_url": "https://api.github.com/users/solson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "solson", "id": 26806, "node_id": "MDQ6VXNlcjI2ODA2", "avatar_url": "https://avatars.githubusercontent.com/u/26806?v=4", "gravatar_id": "", "url": "https://api.github.com/users/solson", "html_url": "https://github.com/solson", "followers_url": "https://api.github.com/users/solson/followers", "following_url": "https://api.github.com/users/solson/following{/other_user}", "gists_url": "https://api.github.com/users/solson/gists{/gist_id}", "starred_url": "https://api.github.com/users/solson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/solson/subscriptions", "organizations_url": "https://api.github.com/users/solson/orgs", "repos_url": "https://api.github.com/users/solson/repos", "events_url": "https://api.github.com/users/solson/events{/privacy}", "received_events_url": "https://api.github.com/users/solson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7728de3e608ee0b020bd024b9ea0ae386bad3f40", "url": "https://api.github.com/repos/rust-lang/rust/commits/7728de3e608ee0b020bd024b9ea0ae386bad3f40", "html_url": "https://github.com/rust-lang/rust/commit/7728de3e608ee0b020bd024b9ea0ae386bad3f40"}], "stats": {"total": 32, "additions": 22, "deletions": 10}, "files": [{"sha": "c600b315eabee92527de1c3c1062d743305ba380", "filename": "src/interpreter/mod.rs", "status": "modified", "additions": 22, "deletions": 10, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/701eb3f62bca0b34fd6ff1bb245a787c33af2084/src%2Finterpreter%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/701eb3f62bca0b34fd6ff1bb245a787c33af2084/src%2Finterpreter%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Finterpreter%2Fmod.rs?ref=701eb3f62bca0b34fd6ff1bb245a787c33af2084", "patch": "@@ -1389,6 +1389,27 @@ impl<'a, 'tcx> EvalContext<'a, 'tcx> {\n         }\n         Ok(())\n     }\n+\n+    fn dump_locals(&self, limit: usize) {\n+        for (frame_index, frame) in self.stack.iter().enumerate() {\n+            trace!(\"frame[{}]:\", frame_index);\n+\n+            let locals: Vec<(mir::Local, Value)> = frame.mir.local_decls\n+                .indices()\n+                .filter_map(|i| {\n+                    if i == mir::RETURN_POINTER { return None; }\n+                    frame.get_local(i).map(|local| (i, local))\n+                })\n+                .collect();\n+\n+            for &(i, v) in locals.iter().take(limit) {\n+                trace!(\"  {:?}: {:?}\", i, v);\n+            }\n+            if locals.len() > limit {\n+                trace!(\"  ...\");\n+            }\n+        }\n+    }\n }\n \n impl<'a, 'tcx: 'a> Frame<'a, 'tcx> {\n@@ -1471,16 +1492,7 @@ pub fn eval_main<'a, 'tcx: 'a>(\n     for _ in 0..step_limit {\n         match ecx.step() {\n             Ok(true) => {\n-                let limit = 5;\n-                for (frame_index, frame) in ecx.stack.iter().enumerate() {\n-                    trace!(\"frame[{}]:\", frame_index);\n-                    for (i, v) in frame.locals.iter().enumerate().take(limit) {\n-                        trace!(\"  _{}: {:?}\", i + 1, v);\n-                    }\n-                    if frame.locals.len() > limit {\n-                        trace!(\"  ...\");\n-                    }\n-                }\n+                ecx.dump_locals(5);\n             }\n             Ok(false) => return,\n             Err(e) => {"}]}