{"sha": "74390283748ca1478bb6958a2a81d9b94dade2b6", "node_id": "C_kwDOAAsO6NoAKDc0MzkwMjgzNzQ4Y2ExNDc4YmI2OTU4YTJhODFkOWI5NGRhZGUyYjY", "commit": {"author": {"name": "Nicholas Nethercote", "email": "n.nethercote@gmail.com", "date": "2023-02-13T02:44:56Z"}, "committer": {"name": "Nicholas Nethercote", "email": "n.nethercote@gmail.com", "date": "2023-02-14T22:02:44Z"}, "message": "Remove `reuse_or_mk_region`.\n\nIt's not used on any hot paths, and so has little perf benefit, and it\ninterferes with the optimizations in the following commits.", "tree": {"sha": "2f943bd80128c5384846aae0e99d47907d17f59e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2f943bd80128c5384846aae0e99d47907d17f59e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/74390283748ca1478bb6958a2a81d9b94dade2b6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/74390283748ca1478bb6958a2a81d9b94dade2b6", "html_url": "https://github.com/rust-lang/rust/commit/74390283748ca1478bb6958a2a81d9b94dade2b6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/74390283748ca1478bb6958a2a81d9b94dade2b6/comments", "author": {"login": "nnethercote", "id": 1940286, "node_id": "MDQ6VXNlcjE5NDAyODY=", "avatar_url": "https://avatars.githubusercontent.com/u/1940286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nnethercote", "html_url": "https://github.com/nnethercote", "followers_url": "https://api.github.com/users/nnethercote/followers", "following_url": "https://api.github.com/users/nnethercote/following{/other_user}", "gists_url": "https://api.github.com/users/nnethercote/gists{/gist_id}", "starred_url": "https://api.github.com/users/nnethercote/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nnethercote/subscriptions", "organizations_url": "https://api.github.com/users/nnethercote/orgs", "repos_url": "https://api.github.com/users/nnethercote/repos", "events_url": "https://api.github.com/users/nnethercote/events{/privacy}", "received_events_url": "https://api.github.com/users/nnethercote/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nnethercote", "id": 1940286, "node_id": "MDQ6VXNlcjE5NDAyODY=", "avatar_url": "https://avatars.githubusercontent.com/u/1940286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nnethercote", "html_url": "https://github.com/nnethercote", "followers_url": "https://api.github.com/users/nnethercote/followers", "following_url": "https://api.github.com/users/nnethercote/following{/other_user}", "gists_url": "https://api.github.com/users/nnethercote/gists{/gist_id}", "starred_url": "https://api.github.com/users/nnethercote/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nnethercote/subscriptions", "organizations_url": "https://api.github.com/users/nnethercote/orgs", "repos_url": "https://api.github.com/users/nnethercote/repos", "events_url": "https://api.github.com/users/nnethercote/events{/privacy}", "received_events_url": "https://api.github.com/users/nnethercote/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6e0115778b0aedc90b59e035476c38e1b8c5c29b", "url": "https://api.github.com/repos/rust-lang/rust/commits/6e0115778b0aedc90b59e035476c38e1b8c5c29b", "html_url": "https://github.com/rust-lang/rust/commit/6e0115778b0aedc90b59e035476c38e1b8c5c29b"}], "stats": {"total": 15, "additions": 4, "deletions": 11}, "files": [{"sha": "9455b9a1425c87d1f1ea791fe9c0fa44d80977e8", "filename": "compiler/rustc_infer/src/infer/canonical/canonicalizer.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/74390283748ca1478bb6958a2a81d9b94dade2b6/compiler%2Frustc_infer%2Fsrc%2Finfer%2Fcanonical%2Fcanonicalizer.rs", "raw_url": "https://github.com/rust-lang/rust/raw/74390283748ca1478bb6958a2a81d9b94dade2b6/compiler%2Frustc_infer%2Fsrc%2Finfer%2Fcanonical%2Fcanonicalizer.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_infer%2Fsrc%2Finfer%2Fcanonical%2Fcanonicalizer.rs?ref=74390283748ca1478bb6958a2a81d9b94dade2b6", "patch": "@@ -363,7 +363,7 @@ impl<'cx, 'tcx> TypeFolder<TyCtxt<'tcx>> for Canonicalizer<'cx, 'tcx> {\n                      opportunistically resolved to {:?}\",\n                     vid, resolved_vid\n                 );\n-                let r = self.tcx.reuse_or_mk_region(r, ty::ReVar(resolved_vid));\n+                let r = self.tcx.mk_region(ty::ReVar(resolved_vid));\n                 self.canonicalize_mode.canonicalize_free_region(self, r)\n             }\n "}, {"sha": "b203a4a98825d8fab9eb5f57befd40e4dc7fc653", "filename": "compiler/rustc_infer/src/infer/region_constraints/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/74390283748ca1478bb6958a2a81d9b94dade2b6/compiler%2Frustc_infer%2Fsrc%2Finfer%2Fregion_constraints%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/74390283748ca1478bb6958a2a81d9b94dade2b6/compiler%2Frustc_infer%2Fsrc%2Finfer%2Fregion_constraints%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_infer%2Fsrc%2Finfer%2Fregion_constraints%2Fmod.rs?ref=74390283748ca1478bb6958a2a81d9b94dade2b6", "patch": "@@ -651,7 +651,7 @@ impl<'tcx> RegionConstraintCollector<'_, 'tcx> {\n                 let unified_region = self.unification_table().probe_value(rid);\n                 unified_region.0.unwrap_or_else(|| {\n                     let root = self.unification_table().find(rid).vid;\n-                    tcx.reuse_or_mk_region(region, ty::ReVar(root))\n+                    tcx.mk_region(ty::ReVar(root))\n                 })\n             }\n             _ => region,"}, {"sha": "2020264757891ae646e1d67b69754969a5760dbd", "filename": "compiler/rustc_infer/src/infer/resolve.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/74390283748ca1478bb6958a2a81d9b94dade2b6/compiler%2Frustc_infer%2Fsrc%2Finfer%2Fresolve.rs", "raw_url": "https://github.com/rust-lang/rust/raw/74390283748ca1478bb6958a2a81d9b94dade2b6/compiler%2Frustc_infer%2Fsrc%2Finfer%2Fresolve.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_infer%2Fsrc%2Finfer%2Fresolve.rs?ref=74390283748ca1478bb6958a2a81d9b94dade2b6", "patch": "@@ -95,7 +95,7 @@ impl<'a, 'tcx> TypeFolder<TyCtxt<'tcx>> for OpportunisticRegionResolver<'a, 'tcx\n                     .borrow_mut()\n                     .unwrap_region_constraints()\n                     .opportunistic_resolve_var(rid);\n-                TypeFolder::interner(self).reuse_or_mk_region(r, ty::ReVar(resolved))\n+                TypeFolder::interner(self).mk_region(ty::ReVar(resolved))\n             }\n             _ => r,\n         }"}, {"sha": "c251560718a82455f1104a2837fd6f01bd073a97", "filename": "compiler/rustc_middle/src/ty/context.rs", "status": "modified", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/74390283748ca1478bb6958a2a81d9b94dade2b6/compiler%2Frustc_middle%2Fsrc%2Fty%2Fcontext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/74390283748ca1478bb6958a2a81d9b94dade2b6/compiler%2Frustc_middle%2Fsrc%2Fty%2Fcontext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fty%2Fcontext.rs?ref=74390283748ca1478bb6958a2a81d9b94dade2b6", "patch": "@@ -1631,13 +1631,6 @@ impl<'tcx> TyCtxt<'tcx> {\n         })\n     }\n \n-    /// Same a `self.mk_region(kind)`, but avoids accessing the interners if\n-    /// `*r == kind`.\n-    #[inline]\n-    pub fn reuse_or_mk_region(self, r: Region<'tcx>, kind: RegionKind<'tcx>) -> Region<'tcx> {\n-        if *r == kind { r } else { self.mk_region(kind) }\n-    }\n-\n     // Avoid this in favour of more specific `mk_*` methods, where possible.\n     #[allow(rustc::usage_of_ty_tykind)]\n     #[inline]"}, {"sha": "13db1239059aa2db6aa094dfc820e8188c8059ab", "filename": "compiler/rustc_middle/src/ty/fold.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/74390283748ca1478bb6958a2a81d9b94dade2b6/compiler%2Frustc_middle%2Fsrc%2Fty%2Ffold.rs", "raw_url": "https://github.com/rust-lang/rust/raw/74390283748ca1478bb6958a2a81d9b94dade2b6/compiler%2Frustc_middle%2Fsrc%2Fty%2Ffold.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fty%2Ffold.rs?ref=74390283748ca1478bb6958a2a81d9b94dade2b6", "patch": "@@ -234,7 +234,7 @@ where\n                     // debruijn index. Then we adjust it to the\n                     // correct depth.\n                     assert_eq!(debruijn1, ty::INNERMOST);\n-                    self.tcx.reuse_or_mk_region(region, ty::ReLateBound(debruijn, br))\n+                    self.tcx.mk_region(ty::ReLateBound(debruijn, br))\n                 } else {\n                     region\n                 }"}]}