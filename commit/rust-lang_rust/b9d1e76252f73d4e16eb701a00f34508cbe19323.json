{"sha": "b9d1e76252f73d4e16eb701a00f34508cbe19323", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI5ZDFlNzYyNTJmNzNkNGUxNmViNzAxYTAwZjM0NTA4Y2JlMTkzMjM=", "commit": {"author": {"name": "Alex Burka", "email": "durka42+github@gmail.com", "date": "2016-05-12T01:01:29Z"}, "committer": {"name": "Alex Burka", "email": "aburka@seas.upenn.edu", "date": "2016-05-21T00:30:08Z"}, "message": "update tracking issue for once_poison\n\nThe tracking issue for once_poison was noted as #31688 which was closed, so it now points to the new #33577.", "tree": {"sha": "8bbc4a5d803a5a2211b05f0de37b17aaa73bdb63", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8bbc4a5d803a5a2211b05f0de37b17aaa73bdb63"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b9d1e76252f73d4e16eb701a00f34508cbe19323", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b9d1e76252f73d4e16eb701a00f34508cbe19323", "html_url": "https://github.com/rust-lang/rust/commit/b9d1e76252f73d4e16eb701a00f34508cbe19323", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b9d1e76252f73d4e16eb701a00f34508cbe19323/comments", "author": {"login": "durka", "id": 47007, "node_id": "MDQ6VXNlcjQ3MDA3", "avatar_url": "https://avatars.githubusercontent.com/u/47007?v=4", "gravatar_id": "", "url": "https://api.github.com/users/durka", "html_url": "https://github.com/durka", "followers_url": "https://api.github.com/users/durka/followers", "following_url": "https://api.github.com/users/durka/following{/other_user}", "gists_url": "https://api.github.com/users/durka/gists{/gist_id}", "starred_url": "https://api.github.com/users/durka/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/durka/subscriptions", "organizations_url": "https://api.github.com/users/durka/orgs", "repos_url": "https://api.github.com/users/durka/repos", "events_url": "https://api.github.com/users/durka/events{/privacy}", "received_events_url": "https://api.github.com/users/durka/received_events", "type": "User", "site_admin": false}, "committer": {"login": "durka", "id": 47007, "node_id": "MDQ6VXNlcjQ3MDA3", "avatar_url": "https://avatars.githubusercontent.com/u/47007?v=4", "gravatar_id": "", "url": "https://api.github.com/users/durka", "html_url": "https://github.com/durka", "followers_url": "https://api.github.com/users/durka/followers", "following_url": "https://api.github.com/users/durka/following{/other_user}", "gists_url": "https://api.github.com/users/durka/gists{/gist_id}", "starred_url": "https://api.github.com/users/durka/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/durka/subscriptions", "organizations_url": "https://api.github.com/users/durka/orgs", "repos_url": "https://api.github.com/users/durka/repos", "events_url": "https://api.github.com/users/durka/events{/privacy}", "received_events_url": "https://api.github.com/users/durka/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "179539f6eb61f75244a0dde641b6e4e09c0921ec", "url": "https://api.github.com/repos/rust-lang/rust/commits/179539f6eb61f75244a0dde641b6e4e09c0921ec", "html_url": "https://github.com/rust-lang/rust/commit/179539f6eb61f75244a0dde641b6e4e09c0921ec"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "e9ea465cc9993654da5437284f4546397b55017f", "filename": "src/libstd/sync/once.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/b9d1e76252f73d4e16eb701a00f34508cbe19323/src%2Flibstd%2Fsync%2Fonce.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b9d1e76252f73d4e16eb701a00f34508cbe19323/src%2Flibstd%2Fsync%2Fonce.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsync%2Fonce.rs?ref=b9d1e76252f73d4e16eb701a00f34508cbe19323", "patch": "@@ -101,7 +101,7 @@ unsafe impl Send for Once {}\n \n /// State yielded to the `call_once_force` method which can be used to query\n /// whether the `Once` was previously poisoned or not.\n-#[unstable(feature = \"once_poison\", issue = \"31688\")]\n+#[unstable(feature = \"once_poison\", issue = \"33577\")]\n pub struct OnceState {\n     poisoned: bool,\n }\n@@ -218,7 +218,7 @@ impl Once {\n     /// The closure `f` is yielded a structure which can be used to query the\n     /// state of this `Once` (whether initialization has previously panicked or\n     /// not).\n-    #[unstable(feature = \"once_poison\", issue = \"31688\")]\n+    #[unstable(feature = \"once_poison\", issue = \"33577\")]\n     pub fn call_once_force<F>(&'static self, f: F) where F: FnOnce(&OnceState) {\n         // same as above, just with a different parameter to `call_inner`.\n         if self.state.load(Ordering::SeqCst) == COMPLETE {\n@@ -360,7 +360,7 @@ impl OnceState {\n     ///\n     /// Once an initalization routine for a `Once` has panicked it will forever\n     /// indicate to future forced initialization routines that it is poisoned.\n-    #[unstable(feature = \"once_poison\", issue = \"31688\")]\n+    #[unstable(feature = \"once_poison\", issue = \"33577\")]\n     pub fn poisoned(&self) -> bool {\n         self.poisoned\n     }"}]}