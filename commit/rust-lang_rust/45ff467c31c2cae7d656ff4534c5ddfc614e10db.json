{"sha": "45ff467c31c2cae7d656ff4534c5ddfc614e10db", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ1ZmY0NjdjMzFjMmNhZTdkNjU2ZmY0NTM0YzVkZGZjNjE0ZTEwZGI=", "commit": {"author": {"name": "Stanislav Tkach", "email": "stanislav.tkach@gmail.com", "date": "2017-08-14T20:04:56Z"}, "committer": {"name": "Stanislav Tkach", "email": "stanislav.tkach@xdev.re", "date": "2017-08-23T14:00:39Z"}, "message": "Fix borrowed_box lint for Box<Any>", "tree": {"sha": "cf7c0efd07cf962b5e5cb2da370938f1ac241719", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/cf7c0efd07cf962b5e5cb2da370938f1ac241719"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/45ff467c31c2cae7d656ff4534c5ddfc614e10db", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/45ff467c31c2cae7d656ff4534c5ddfc614e10db", "html_url": "https://github.com/rust-lang/rust/commit/45ff467c31c2cae7d656ff4534c5ddfc614e10db", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/45ff467c31c2cae7d656ff4534c5ddfc614e10db/comments", "author": {"login": "stanislav-tkach", "id": 2997902, "node_id": "MDQ6VXNlcjI5OTc5MDI=", "avatar_url": "https://avatars.githubusercontent.com/u/2997902?v=4", "gravatar_id": "", "url": "https://api.github.com/users/stanislav-tkach", "html_url": "https://github.com/stanislav-tkach", "followers_url": "https://api.github.com/users/stanislav-tkach/followers", "following_url": "https://api.github.com/users/stanislav-tkach/following{/other_user}", "gists_url": "https://api.github.com/users/stanislav-tkach/gists{/gist_id}", "starred_url": "https://api.github.com/users/stanislav-tkach/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/stanislav-tkach/subscriptions", "organizations_url": "https://api.github.com/users/stanislav-tkach/orgs", "repos_url": "https://api.github.com/users/stanislav-tkach/repos", "events_url": "https://api.github.com/users/stanislav-tkach/events{/privacy}", "received_events_url": "https://api.github.com/users/stanislav-tkach/received_events", "type": "User", "site_admin": false}, "committer": {"login": "stanislav-tkach", "id": 2997902, "node_id": "MDQ6VXNlcjI5OTc5MDI=", "avatar_url": "https://avatars.githubusercontent.com/u/2997902?v=4", "gravatar_id": "", "url": "https://api.github.com/users/stanislav-tkach", "html_url": "https://github.com/stanislav-tkach", "followers_url": "https://api.github.com/users/stanislav-tkach/followers", "following_url": "https://api.github.com/users/stanislav-tkach/following{/other_user}", "gists_url": "https://api.github.com/users/stanislav-tkach/gists{/gist_id}", "starred_url": "https://api.github.com/users/stanislav-tkach/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/stanislav-tkach/subscriptions", "organizations_url": "https://api.github.com/users/stanislav-tkach/orgs", "repos_url": "https://api.github.com/users/stanislav-tkach/repos", "events_url": "https://api.github.com/users/stanislav-tkach/events{/privacy}", "received_events_url": "https://api.github.com/users/stanislav-tkach/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7cdaeae1b877ca03b26ccb9b82754b826b03da5d", "url": "https://api.github.com/repos/rust-lang/rust/commits/7cdaeae1b877ca03b26ccb9b82754b826b03da5d", "html_url": "https://github.com/rust-lang/rust/commit/7cdaeae1b877ca03b26ccb9b82754b826b03da5d"}], "stats": {"total": 64, "additions": 63, "deletions": 1}, "files": [{"sha": "b537ad5e7177e5ebf95b91b54fb09ae857884330", "filename": "clippy_lints/src/types.rs", "status": "modified", "additions": 12, "deletions": 1, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/45ff467c31c2cae7d656ff4534c5ddfc614e10db/clippy_lints%2Fsrc%2Ftypes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/45ff467c31c2cae7d656ff4534c5ddfc614e10db/clippy_lints%2Fsrc%2Ftypes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Ftypes.rs?ref=45ff467c31c2cae7d656ff4534c5ddfc614e10db", "patch": "@@ -10,7 +10,7 @@ use syntax::ast::{IntTy, UintTy, FloatTy};\n use syntax::attr::IntType;\n use syntax::codemap::Span;\n use utils::{comparisons, higher, in_external_macro, in_macro, match_def_path, snippet, span_help_and_lint, span_lint,\n-            span_lint_and_sugg, opt_def_id, last_path_segment, type_size};\n+            span_lint_and_sugg, opt_def_id, last_path_segment, type_size, match_path_old};\n use utils::paths;\n \n /// Handles all the linting of funky types\n@@ -212,6 +212,17 @@ fn check_ty(cx: &LateContext, ast_ty: &hir::Ty, is_local: bool) {\n                         let PathParameters::AngleBracketedParameters(ref ab_data) = bx.parameters,\n                         let [ref inner] = *ab_data.types\n                     ], {\n+                        if_let_chain! {[\n+                            let TyTraitObject(ref traits, _) = inner.node,\n+                            traits.len() >= 1,\n+                            // Only Send/Sync can be used as additional traits, so it is enough to\n+                            // check only the first trait.\n+                            match_path_old(&traits[0].trait_ref.path, &paths::ANY_TRAIT)\n+                        ], {\n+                            // Ignore `Box<Any>` types, see #1884 for details.\n+                            return;\n+                        }}\n+\n                         let ltopt = if lt.is_elided() {\n                             \"\".to_owned()\n                         } else {"}, {"sha": "d5d252009fc541c14e6c8e924fd74c537277be35", "filename": "clippy_lints/src/utils/paths.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/45ff467c31c2cae7d656ff4534c5ddfc614e10db/clippy_lints%2Fsrc%2Futils%2Fpaths.rs", "raw_url": "https://github.com/rust-lang/rust/raw/45ff467c31c2cae7d656ff4534c5ddfc614e10db/clippy_lints%2Fsrc%2Futils%2Fpaths.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Futils%2Fpaths.rs?ref=45ff467c31c2cae7d656ff4534c5ddfc614e10db", "patch": "@@ -1,6 +1,7 @@\n //! This module contains paths to types and functions Clippy needs to know\n //! about.\n \n+pub const ANY_TRAIT: [&'static str; 3] = [\"std\", \"any\", \"Any\"];\n pub const ASMUT_TRAIT: [&'static str; 3] = [\"core\", \"convert\", \"AsMut\"];\n pub const ASREF_TRAIT: [&'static str; 3] = [\"core\", \"convert\", \"AsRef\"];\n pub const BEGIN_PANIC: [&'static str; 3] = [\"std\", \"panicking\", \"begin_panic\"];"}, {"sha": "b5543da6e35c531ee0db9606b31ce31db1421e4b", "filename": "tests/ui/borrow_box.rs", "status": "modified", "additions": 50, "deletions": 0, "changes": 50, "blob_url": "https://github.com/rust-lang/rust/blob/45ff467c31c2cae7d656ff4534c5ddfc614e10db/tests%2Fui%2Fborrow_box.rs", "raw_url": "https://github.com/rust-lang/rust/raw/45ff467c31c2cae7d656ff4534c5ddfc614e10db/tests%2Fui%2Fborrow_box.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fborrow_box.rs?ref=45ff467c31c2cae7d656ff4534c5ddfc614e10db", "patch": "@@ -28,7 +28,57 @@ impl<'a> Test4 for Test3<'a> {\n     }\n }\n \n+use std::any::Any;\n+\n+pub fn test5(foo: &mut Box<Any>) {\n+    println!(\"{:?}\", foo)\n+}\n+\n+pub fn test6() {\n+    let foo: &Box<Any>;\n+}\n+\n+struct Test7<'a> {\n+    foo: &'a Box<Any>\n+}\n+\n+trait Test8 {\n+    fn test8(a: &Box<Any>);\n+}\n+\n+impl<'a> Test8 for Test7<'a> {\n+    fn test8(a: &Box<Any>) {\n+        unimplemented!();\n+    }\n+}\n+\n+pub fn test9(foo: &mut Box<Any + Send + Sync>) {\n+    let _ = foo;\n+}\n+\n+pub fn test10() {\n+    let foo: &Box<Any + Send + 'static>;\n+}\n+\n+struct Test11<'a> {\n+    foo: &'a Box<Any + Send>\n+}\n+\n+trait Test12 {\n+    fn test4(a: &Box<Any + 'static>);\n+}\n+\n+impl<'a> Test12 for Test11<'a> {\n+    fn test4(a: &Box<Any + 'static>) {\n+        unimplemented!();\n+    }\n+}\n+\n fn main(){\n     test1(&mut Box::new(false));\n     test2();\n+    test5(&mut (Box::new(false) as Box<Any>));\n+    test6();\n+    test9(&mut (Box::new(false) as Box<Any + Send + Sync>));\n+    test10();\n }"}]}