{"sha": "16052053ac2668b5540a55383924ce36e7018933", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE2MDUyMDUzYWMyNjY4YjU1NDBhNTUzODM5MjRjZTM2ZTcwMTg5MzM=", "commit": {"author": {"name": "Kevin Ballard", "email": "kevin@sb.org", "date": "2015-04-08T00:29:33Z"}, "committer": {"name": "Kevin Ballard", "email": "kevin@sb.org", "date": "2015-04-09T04:25:59Z"}, "message": "Implement io::Seek for io::BufWriter<W> where W: io::Seek\n\nSeeking the `BufWriter` writes out its internal buffer before seeking.", "tree": {"sha": "ddd1f2f588a2d99a7d443ba2e9e24ad8d2cf6229", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ddd1f2f588a2d99a7d443ba2e9e24ad8d2cf6229"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/16052053ac2668b5540a55383924ce36e7018933", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/16052053ac2668b5540a55383924ce36e7018933", "html_url": "https://github.com/rust-lang/rust/commit/16052053ac2668b5540a55383924ce36e7018933", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/16052053ac2668b5540a55383924ce36e7018933/comments", "author": {"login": "lilyball", "id": 714, "node_id": "MDQ6VXNlcjcxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/714?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lilyball", "html_url": "https://github.com/lilyball", "followers_url": "https://api.github.com/users/lilyball/followers", "following_url": "https://api.github.com/users/lilyball/following{/other_user}", "gists_url": "https://api.github.com/users/lilyball/gists{/gist_id}", "starred_url": "https://api.github.com/users/lilyball/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lilyball/subscriptions", "organizations_url": "https://api.github.com/users/lilyball/orgs", "repos_url": "https://api.github.com/users/lilyball/repos", "events_url": "https://api.github.com/users/lilyball/events{/privacy}", "received_events_url": "https://api.github.com/users/lilyball/received_events", "type": "User", "site_admin": false}, "committer": {"login": "lilyball", "id": 714, "node_id": "MDQ6VXNlcjcxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/714?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lilyball", "html_url": "https://github.com/lilyball", "followers_url": "https://api.github.com/users/lilyball/followers", "following_url": "https://api.github.com/users/lilyball/following{/other_user}", "gists_url": "https://api.github.com/users/lilyball/gists{/gist_id}", "starred_url": "https://api.github.com/users/lilyball/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lilyball/subscriptions", "organizations_url": "https://api.github.com/users/lilyball/orgs", "repos_url": "https://api.github.com/users/lilyball/repos", "events_url": "https://api.github.com/users/lilyball/events{/privacy}", "received_events_url": "https://api.github.com/users/lilyball/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0a380a9318cb450fc54153c1327a35cf02fab8e6", "url": "https://api.github.com/repos/rust-lang/rust/commits/0a380a9318cb450fc54153c1327a35cf02fab8e6", "html_url": "https://github.com/rust-lang/rust/commit/0a380a9318cb450fc54153c1327a35cf02fab8e6"}], "stats": {"total": 22, "additions": 22, "deletions": 0}, "files": [{"sha": "bd44a9547b49677591d7b4c75f7eda101649f042", "filename": "src/libstd/io/buffered.rs", "status": "modified", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/16052053ac2668b5540a55383924ce36e7018933/src%2Flibstd%2Fio%2Fbuffered.rs", "raw_url": "https://github.com/rust-lang/rust/raw/16052053ac2668b5540a55383924ce36e7018933/src%2Flibstd%2Fio%2Fbuffered.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fio%2Fbuffered.rs?ref=16052053ac2668b5540a55383924ce36e7018933", "patch": "@@ -284,6 +284,16 @@ impl<W: Write> fmt::Debug for BufWriter<W> where W: fmt::Debug {\n     }\n }\n \n+#[unstable(feature = \"buf_seek\", reason = \"recently added\")]\n+impl<W: Write+Seek> Seek for BufWriter<W> {\n+    /// Seek to the offset, in bytes, in the underlying writer.\n+    ///\n+    /// Seeking always writes out the internal buffer before seeking.\n+    fn seek(&mut self, pos: SeekFrom) -> io::Result<u64> {\n+        self.flush_buf().and_then(|_| self.get_mut().seek(pos))\n+    }\n+}\n+\n #[unsafe_destructor]\n impl<W: Write> Drop for BufWriter<W> {\n     fn drop(&mut self) {\n@@ -683,6 +693,18 @@ mod tests {\n         assert_eq!(w, [0, 1]);\n     }\n \n+    #[test]\n+    fn test_buffered_writer_seek() {\n+        let mut w = BufWriter::with_capacity(3, io::Cursor::new(Vec::new()));\n+        w.write_all(&[0, 1, 2, 3, 4, 5]).unwrap();\n+        w.write_all(&[6, 7]).unwrap();\n+        assert_eq!(w.seek(SeekFrom::Current(0)).ok(), Some(8));\n+        assert_eq!(&w.get_ref().get_ref()[..], &[0, 1, 2, 3, 4, 5, 6, 7][..]);\n+        assert_eq!(w.seek(SeekFrom::Start(2)).ok(), Some(2));\n+        w.write_all(&[8, 9]).unwrap();\n+        assert_eq!(&w.into_inner().unwrap().into_inner()[..], &[0, 1, 8, 9, 4, 5, 6, 7]);\n+    }\n+\n     // This is just here to make sure that we don't infinite loop in the\n     // newtype struct autoderef weirdness\n     #[test]"}]}