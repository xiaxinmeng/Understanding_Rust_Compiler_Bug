{"sha": "3087e91bed673edd86e63f962c04cead50bc9241", "node_id": "MDY6Q29tbWl0NzI0NzEyOjMwODdlOTFiZWQ2NzNlZGQ4NmU2M2Y5NjJjMDRjZWFkNTBiYzkyNDE=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2019-08-01T08:40:15Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2019-08-01T08:40:15Z"}, "message": "Auto merge of #4316 - phansch:method_rs_cleanup2, r=flip1995\n\nUI Test Cleanup: No wrong_self_convention in methods.rs\n\nThese cases are already covered in `tests/ui/wrong_self_convention.rs`.\n\ncc #2038\n\nchangelog: none", "tree": {"sha": "6c0e95ada4f1f352708eb3748acfc47860f64d45", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6c0e95ada4f1f352708eb3748acfc47860f64d45"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3087e91bed673edd86e63f962c04cead50bc9241", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3087e91bed673edd86e63f962c04cead50bc9241", "html_url": "https://github.com/rust-lang/rust/commit/3087e91bed673edd86e63f962c04cead50bc9241", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3087e91bed673edd86e63f962c04cead50bc9241/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5d061d7058c45e17a27ded16fed1ee55e23014e8", "url": "https://api.github.com/repos/rust-lang/rust/commits/5d061d7058c45e17a27ded16fed1ee55e23014e8", "html_url": "https://github.com/rust-lang/rust/commit/5d061d7058c45e17a27ded16fed1ee55e23014e8"}, {"sha": "533abfa613aae4ac8b8575dba426bf03199e014d", "url": "https://api.github.com/repos/rust-lang/rust/commits/533abfa613aae4ac8b8575dba426bf03199e014d", "html_url": "https://github.com/rust-lang/rust/commit/533abfa613aae4ac8b8575dba426bf03199e014d"}], "stats": {"total": 65, "additions": 23, "deletions": 42}, "files": [{"sha": "32e73988d442ab9bf9481621379f5caf41def7fc", "filename": "tests/ui/methods.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/3087e91bed673edd86e63f962c04cead50bc9241/tests%2Fui%2Fmethods.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3087e91bed673edd86e63f962c04cead50bc9241/tests%2Fui%2Fmethods.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmethods.rs?ref=3087e91bed673edd86e63f962c04cead50bc9241", "patch": "@@ -12,7 +12,8 @@\n     clippy::default_trait_access,\n     clippy::use_self,\n     clippy::new_ret_no_self,\n-    clippy::useless_format\n+    clippy::useless_format,\n+    clippy::wrong_self_convention\n )]\n \n #[macro_use]"}, {"sha": "ab97621784ae9b759760b12e9309ea9e26a14cbd", "filename": "tests/ui/methods.stderr", "status": "modified", "additions": 21, "deletions": 41, "changes": 62, "blob_url": "https://github.com/rust-lang/rust/blob/3087e91bed673edd86e63f962c04cead50bc9241/tests%2Fui%2Fmethods.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/3087e91bed673edd86e63f962c04cead50bc9241/tests%2Fui%2Fmethods.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmethods.stderr?ref=3087e91bed673edd86e63f962c04cead50bc9241", "patch": "@@ -1,5 +1,5 @@\n error: defining a method called `add` on this type; consider implementing the `std::ops::Add` trait or choosing a less ambiguous name\n-  --> $DIR/methods.rs:35:5\n+  --> $DIR/methods.rs:36:5\n    |\n LL | /     pub fn add(self, other: T) -> T {\n LL | |         self\n@@ -8,28 +8,8 @@ LL | |     }\n    |\n    = note: `-D clippy::should-implement-trait` implied by `-D warnings`\n \n-error: methods called `into_*` usually take self by value; consider choosing a less ambiguous name\n-  --> $DIR/methods.rs:70:17\n-   |\n-LL |     fn into_u16(&self) -> u16 {\n-   |                 ^^^^^\n-   |\n-   = note: `-D clippy::wrong-self-convention` implied by `-D warnings`\n-\n-error: methods called `to_*` usually take self by reference; consider choosing a less ambiguous name\n-  --> $DIR/methods.rs:74:21\n-   |\n-LL |     fn to_something(self) -> u32 {\n-   |                     ^^^^\n-\n-error: methods called `new` usually take no self; consider choosing a less ambiguous name\n-  --> $DIR/methods.rs:78:12\n-   |\n-LL |     fn new(self) -> Self {\n-   |            ^^^^\n-\n error: called `map(f).unwrap_or(a)` on an Option value. This can be done more directly by calling `map_or(a, f)` instead\n-  --> $DIR/methods.rs:157:13\n+  --> $DIR/methods.rs:158:13\n    |\n LL |       let _ = opt.map(|x| x + 1)\n    |  _____________^\n@@ -41,7 +21,7 @@ LL | |                .unwrap_or(0);\n    = note: replace `map(|x| x + 1).unwrap_or(0)` with `map_or(0, |x| x + 1)`\n \n error: called `map(f).unwrap_or(a)` on an Option value. This can be done more directly by calling `map_or(a, f)` instead\n-  --> $DIR/methods.rs:161:13\n+  --> $DIR/methods.rs:162:13\n    |\n LL |       let _ = opt.map(|x| {\n    |  _____________^\n@@ -51,7 +31,7 @@ LL | |               ).unwrap_or(0);\n    | |____________________________^\n \n error: called `map(f).unwrap_or(a)` on an Option value. This can be done more directly by calling `map_or(a, f)` instead\n-  --> $DIR/methods.rs:165:13\n+  --> $DIR/methods.rs:166:13\n    |\n LL |       let _ = opt.map(|x| x + 1)\n    |  _____________^\n@@ -61,15 +41,15 @@ LL | |                 });\n    | |__________________^\n \n error: called `map(f).unwrap_or(None)` on an Option value. This can be done more directly by calling `and_then(f)` instead\n-  --> $DIR/methods.rs:170:13\n+  --> $DIR/methods.rs:171:13\n    |\n LL |     let _ = opt.map(|x| Some(x + 1)).unwrap_or(None);\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: replace `map(|x| Some(x + 1)).unwrap_or(None)` with `and_then(|x| Some(x + 1))`\n \n error: called `map(f).unwrap_or(None)` on an Option value. This can be done more directly by calling `and_then(f)` instead\n-  --> $DIR/methods.rs:172:13\n+  --> $DIR/methods.rs:173:13\n    |\n LL |       let _ = opt.map(|x| {\n    |  _____________^\n@@ -79,7 +59,7 @@ LL | |     ).unwrap_or(None);\n    | |_____________________^\n \n error: called `map(f).unwrap_or(None)` on an Option value. This can be done more directly by calling `and_then(f)` instead\n-  --> $DIR/methods.rs:176:13\n+  --> $DIR/methods.rs:177:13\n    |\n LL |       let _ = opt\n    |  _____________^\n@@ -90,15 +70,15 @@ LL | |         .unwrap_or(None);\n    = note: replace `map(|x| Some(x + 1)).unwrap_or(None)` with `and_then(|x| Some(x + 1))`\n \n error: called `map(f).unwrap_or(a)` on an Option value. This can be done more directly by calling `map_or(a, f)` instead\n-  --> $DIR/methods.rs:187:13\n+  --> $DIR/methods.rs:188:13\n    |\n LL |     let _ = Some(\"prefix\").map(|p| format!(\"{}.\", p)).unwrap_or(id);\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: replace `map(|p| format!(\"{}.\", p)).unwrap_or(id)` with `map_or(id, |p| format!(\"{}.\", p))`\n \n error: called `map(f).unwrap_or_else(g)` on an Option value. This can be done more directly by calling `map_or_else(g, f)` instead\n-  --> $DIR/methods.rs:191:13\n+  --> $DIR/methods.rs:192:13\n    |\n LL |       let _ = opt.map(|x| x + 1)\n    |  _____________^\n@@ -110,7 +90,7 @@ LL | |                .unwrap_or_else(|| 0);\n    = note: replace `map(|x| x + 1).unwrap_or_else(|| 0)` with `map_or_else(|| 0, |x| x + 1)`\n \n error: called `map(f).unwrap_or_else(g)` on an Option value. This can be done more directly by calling `map_or_else(g, f)` instead\n-  --> $DIR/methods.rs:195:13\n+  --> $DIR/methods.rs:196:13\n    |\n LL |       let _ = opt.map(|x| {\n    |  _____________^\n@@ -120,7 +100,7 @@ LL | |               ).unwrap_or_else(|| 0);\n    | |____________________________________^\n \n error: called `map(f).unwrap_or_else(g)` on an Option value. This can be done more directly by calling `map_or_else(g, f)` instead\n-  --> $DIR/methods.rs:199:13\n+  --> $DIR/methods.rs:200:13\n    |\n LL |       let _ = opt.map(|x| x + 1)\n    |  _____________^\n@@ -130,7 +110,7 @@ LL | |                 );\n    | |_________________^\n \n error: called `filter(p).next()` on an `Iterator`. This is more succinctly expressed by calling `.find(p)` instead.\n-  --> $DIR/methods.rs:229:13\n+  --> $DIR/methods.rs:230:13\n    |\n LL |     let _ = v.iter().filter(|&x| *x < 0).next();\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -139,7 +119,7 @@ LL |     let _ = v.iter().filter(|&x| *x < 0).next();\n    = note: replace `filter(|&x| *x < 0).next()` with `find(|&x| *x < 0)`\n \n error: called `filter(p).next()` on an `Iterator`. This is more succinctly expressed by calling `.find(p)` instead.\n-  --> $DIR/methods.rs:232:13\n+  --> $DIR/methods.rs:233:13\n    |\n LL |       let _ = v.iter().filter(|&x| {\n    |  _____________^\n@@ -149,7 +129,7 @@ LL | |                    ).next();\n    | |___________________________^\n \n error: called `is_some()` after searching an `Iterator` with find. This is more succinctly expressed by calling `any()`.\n-  --> $DIR/methods.rs:248:13\n+  --> $DIR/methods.rs:249:13\n    |\n LL |     let _ = v.iter().find(|&x| *x < 0).is_some();\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -158,7 +138,7 @@ LL |     let _ = v.iter().find(|&x| *x < 0).is_some();\n    = note: replace `find(|&x| *x < 0).is_some()` with `any(|x| *x < 0)`\n \n error: called `is_some()` after searching an `Iterator` with find. This is more succinctly expressed by calling `any()`.\n-  --> $DIR/methods.rs:251:13\n+  --> $DIR/methods.rs:252:13\n    |\n LL |       let _ = v.iter().find(|&x| {\n    |  _____________^\n@@ -168,15 +148,15 @@ LL | |                    ).is_some();\n    | |______________________________^\n \n error: called `is_some()` after searching an `Iterator` with position. This is more succinctly expressed by calling `any()`.\n-  --> $DIR/methods.rs:257:13\n+  --> $DIR/methods.rs:258:13\n    |\n LL |     let _ = v.iter().position(|&x| x < 0).is_some();\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: replace `position(|&x| x < 0).is_some()` with `any(|&x| x < 0)`\n \n error: called `is_some()` after searching an `Iterator` with position. This is more succinctly expressed by calling `any()`.\n-  --> $DIR/methods.rs:260:13\n+  --> $DIR/methods.rs:261:13\n    |\n LL |       let _ = v.iter().position(|&x| {\n    |  _____________^\n@@ -186,15 +166,15 @@ LL | |                    ).is_some();\n    | |______________________________^\n \n error: called `is_some()` after searching an `Iterator` with rposition. This is more succinctly expressed by calling `any()`.\n-  --> $DIR/methods.rs:266:13\n+  --> $DIR/methods.rs:267:13\n    |\n LL |     let _ = v.iter().rposition(|&x| x < 0).is_some();\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: replace `rposition(|&x| x < 0).is_some()` with `any(|&x| x < 0)`\n \n error: called `is_some()` after searching an `Iterator` with rposition. This is more succinctly expressed by calling `any()`.\n-  --> $DIR/methods.rs:269:13\n+  --> $DIR/methods.rs:270:13\n    |\n LL |       let _ = v.iter().rposition(|&x| {\n    |  _____________^\n@@ -204,12 +184,12 @@ LL | |                    ).is_some();\n    | |______________________________^\n \n error: used unwrap() on an Option value. If you don't want to handle the None case gracefully, consider using expect() to provide a better panic message\n-  --> $DIR/methods.rs:284:13\n+  --> $DIR/methods.rs:285:13\n    |\n LL |     let _ = opt.unwrap();\n    |             ^^^^^^^^^^^^\n    |\n    = note: `-D clippy::option-unwrap-used` implied by `-D warnings`\n \n-error: aborting due to 23 previous errors\n+error: aborting due to 20 previous errors\n "}]}