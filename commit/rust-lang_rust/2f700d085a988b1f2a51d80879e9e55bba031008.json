{"sha": "2f700d085a988b1f2a51d80879e9e55bba031008", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJmNzAwZDA4NWE5ODhiMWYyYTUxZDgwODc5ZTllNTViYmEwMzEwMDg=", "commit": {"author": {"name": "The8472", "email": "git@infinite-source.de", "date": "2019-11-19T22:10:43Z"}, "committer": {"name": "The8472", "email": "git@infinite-source.de", "date": "2020-09-03T18:59:12Z"}, "message": "add benches from bluss' gists", "tree": {"sha": "6fec6bc799e32958b309c050727237358dab77f4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6fec6bc799e32958b309c050727237358dab77f4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2f700d085a988b1f2a51d80879e9e55bba031008", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2f700d085a988b1f2a51d80879e9e55bba031008", "html_url": "https://github.com/rust-lang/rust/commit/2f700d085a988b1f2a51d80879e9e55bba031008", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2f700d085a988b1f2a51d80879e9e55bba031008/comments", "author": {"login": "the8472", "id": 1065730, "node_id": "MDQ6VXNlcjEwNjU3MzA=", "avatar_url": "https://avatars.githubusercontent.com/u/1065730?v=4", "gravatar_id": "", "url": "https://api.github.com/users/the8472", "html_url": "https://github.com/the8472", "followers_url": "https://api.github.com/users/the8472/followers", "following_url": "https://api.github.com/users/the8472/following{/other_user}", "gists_url": "https://api.github.com/users/the8472/gists{/gist_id}", "starred_url": "https://api.github.com/users/the8472/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/the8472/subscriptions", "organizations_url": "https://api.github.com/users/the8472/orgs", "repos_url": "https://api.github.com/users/the8472/repos", "events_url": "https://api.github.com/users/the8472/events{/privacy}", "received_events_url": "https://api.github.com/users/the8472/received_events", "type": "User", "site_admin": false}, "committer": {"login": "the8472", "id": 1065730, "node_id": "MDQ6VXNlcjEwNjU3MzA=", "avatar_url": "https://avatars.githubusercontent.com/u/1065730?v=4", "gravatar_id": "", "url": "https://api.github.com/users/the8472", "html_url": "https://github.com/the8472", "followers_url": "https://api.github.com/users/the8472/followers", "following_url": "https://api.github.com/users/the8472/following{/other_user}", "gists_url": "https://api.github.com/users/the8472/gists{/gist_id}", "starred_url": "https://api.github.com/users/the8472/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/the8472/subscriptions", "organizations_url": "https://api.github.com/users/the8472/orgs", "repos_url": "https://api.github.com/users/the8472/repos", "events_url": "https://api.github.com/users/the8472/events{/privacy}", "received_events_url": "https://api.github.com/users/the8472/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a4e385a0d0c1966870a18db5e138a55b8ebc7b04", "url": "https://api.github.com/repos/rust-lang/rust/commits/a4e385a0d0c1966870a18db5e138a55b8ebc7b04", "html_url": "https://github.com/rust-lang/rust/commit/a4e385a0d0c1966870a18db5e138a55b8ebc7b04"}], "stats": {"total": 104, "additions": 104, "deletions": 0}, "files": [{"sha": "df11aa9355f5bd3f429534a6bcbcf5e7888c946e", "filename": "library/alloc/benches/vec.rs", "status": "modified", "additions": 104, "deletions": 0, "changes": 104, "blob_url": "https://github.com/rust-lang/rust/blob/2f700d085a988b1f2a51d80879e9e55bba031008/library%2Falloc%2Fbenches%2Fvec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2f700d085a988b1f2a51d80879e9e55bba031008/library%2Falloc%2Fbenches%2Fvec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Fbenches%2Fvec.rs?ref=2f700d085a988b1f2a51d80879e9e55bba031008", "patch": "@@ -471,3 +471,107 @@ bench_in_place![\n     bench_in_place_u128_i1_0100,   u128,    100, 1;\n     bench_in_place_u128_i1_1000,   u128,   1000, 1\n ];\n+\n+#[bench]\n+fn bench_chain_collect(b: &mut test::Bencher) {\n+    let data = black_box([0; LEN]);\n+    b.iter(|| data.iter().cloned().chain([1].iter().cloned()).collect::<Vec<_>>());\n+}\n+\n+#[bench]\n+fn bench_chain_chain_collect(b: &mut test::Bencher) {\n+    let data = black_box([0; LEN]);\n+    b.iter(|| {\n+        data.iter()\n+            .cloned()\n+            .chain([1].iter().cloned())\n+            .chain([2].iter().cloned())\n+            .collect::<Vec<_>>()\n+    });\n+}\n+\n+#[bench]\n+fn bench_nest_chain_chain_collect(b: &mut test::Bencher) {\n+    let data = black_box([0; LEN]);\n+    b.iter(|| {\n+        data.iter().cloned().chain([1].iter().chain([2].iter()).cloned()).collect::<Vec<_>>()\n+    });\n+}\n+\n+pub fn example_plain_slow(l: &[u32]) -> Vec<u32> {\n+    let mut result = Vec::with_capacity(l.len());\n+    result.extend(l.iter().rev());\n+    result\n+}\n+\n+pub fn map_fast(l: &[(u32, u32)]) -> Vec<u32> {\n+    let mut result = Vec::with_capacity(l.len());\n+    for i in 0..l.len() {\n+        unsafe {\n+            *result.get_unchecked_mut(i) = l[i].0;\n+            result.set_len(i);\n+        }\n+    }\n+    result\n+}\n+\n+const LEN: usize = 16384;\n+\n+#[bench]\n+fn bench_range_map_collect(b: &mut test::Bencher) {\n+    b.iter(|| (0..LEN).map(|_| u32::default()).collect::<Vec<_>>());\n+}\n+\n+#[bench]\n+fn bench_chain_extend_ref(b: &mut test::Bencher) {\n+    let data = black_box([0; LEN]);\n+    b.iter(|| {\n+        let mut v = Vec::<u32>::with_capacity(data.len() + 1);\n+        v.extend(data.iter().chain([1].iter()));\n+        v\n+    });\n+}\n+\n+#[bench]\n+fn bench_chain_extend_value(b: &mut test::Bencher) {\n+    let data = black_box([0; LEN]);\n+    b.iter(|| {\n+        let mut v = Vec::<u32>::with_capacity(data.len() + 1);\n+        v.extend(data.iter().cloned().chain(Some(1)));\n+        v\n+    });\n+}\n+\n+#[bench]\n+fn bench_rev_1(b: &mut test::Bencher) {\n+    let data = black_box([0; LEN]);\n+    b.iter(|| {\n+        let mut v = Vec::<u32>::new();\n+        v.extend(data.iter().rev());\n+        v\n+    });\n+}\n+\n+#[bench]\n+fn bench_rev_2(b: &mut test::Bencher) {\n+    let data = black_box([0; LEN]);\n+    b.iter(|| {\n+        example_plain_slow(&data);\n+    });\n+}\n+\n+#[bench]\n+fn bench_map_regular(b: &mut test::Bencher) {\n+    let data = black_box([(0, 0); LEN]);\n+    b.iter(|| {\n+        let mut v = Vec::<u32>::new();\n+        v.extend(data.iter().map(|t| t.1));\n+        v\n+    });\n+}\n+\n+#[bench]\n+fn bench_map_fast(b: &mut test::Bencher) {\n+    let data = black_box([(0, 0); LEN]);\n+    b.iter(|| map_fast(&data));\n+}"}]}