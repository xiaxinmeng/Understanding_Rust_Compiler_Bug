{"sha": "596376ea55256ddea22afd2d854438c23075b592", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU5NjM3NmVhNTUyNTZkZGVhMjJhZmQyZDg1NDQzOGMyMzA3NWI1OTI=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-04-09T22:54:51Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-04-09T23:03:06Z"}, "message": "rt: Allow 2x normal stack during unwinding. Closes #2173\n\nAllows room for destructors to run without allowing the stack to grow forever.", "tree": {"sha": "a51a261820edb6f2c7e43c89a3ae0f5a404b36cc", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a51a261820edb6f2c7e43c89a3ae0f5a404b36cc"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/596376ea55256ddea22afd2d854438c23075b592", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/596376ea55256ddea22afd2d854438c23075b592", "html_url": "https://github.com/rust-lang/rust/commit/596376ea55256ddea22afd2d854438c23075b592", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/596376ea55256ddea22afd2d854438c23075b592/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b42c6d07dc4b1aeb66901bd29b14ab34f9ef1183", "url": "https://api.github.com/repos/rust-lang/rust/commits/b42c6d07dc4b1aeb66901bd29b14ab34f9ef1183", "html_url": "https://github.com/rust-lang/rust/commit/b42c6d07dc4b1aeb66901bd29b14ab34f9ef1183"}], "stats": {"total": 47, "additions": 35, "deletions": 12}, "files": [{"sha": "b4c38de99e7ff8735e42a2bc01b8768fbd297d32", "filename": "src/rt/rust_task.cpp", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/596376ea55256ddea22afd2d854438c23075b592/src%2Frt%2Frust_task.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/596376ea55256ddea22afd2d854438c23075b592/src%2Frt%2Frust_task.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_task.cpp?ref=596376ea55256ddea22afd2d854438c23075b592", "patch": "@@ -512,19 +512,19 @@ rust_task::new_stack(size_t requested_sz) {\n     size_t rust_stk_sz = get_next_stack_size(min_sz,\n                                              current_sz, requested_sz);\n \n-    if (total_stack_sz + rust_stk_sz > kernel->env->max_stack_size) {\n+    size_t max_stack = kernel->env->max_stack_size;\n+    size_t used_stack = total_stack_sz + rust_stk_sz;\n+\n+    // Don't allow stacks to grow forever. During unwinding we have to allow\n+    // for more stack than normal in order to allow destructors room to run,\n+    // arbitrarily selected as 2x the maximum stack size.\n+    if (!unwinding && used_stack > max_stack) {\n         LOG_ERR(this, task, \"task %\" PRIxPTR \" ran out of stack\", this);\n-        if (!unwinding) {\n-            fail();\n-        } else {\n-            // FIXME: Because we have landing pads that may need more\n-            // stack than normally allowed we have to go allow the stack\n-            // to grow unbounded during unwinding. Would be nice to\n-            // have a different solution - maybe just double the limit.\n-            LOG_ERR(this, task, \"task %\" PRIxPTR \" has blown its stack \"\n-                    \"budget but we are unwinding so growing the stack \"\n-                    \"anyway\");\n-        }\n+        fail();\n+    } else if (unwinding && used_stack > max_stack) {\n+        LOG_ERR(this, task,\n+                \"task %\" PRIxPTR \" ran out of stack during unwinding\", this);\n+        fail();\n     }\n \n     size_t sz = rust_stk_sz + RED_ZONE_SIZE;"}, {"sha": "e56361e2f72f502622c2a99e9d1b87a836f2a131", "filename": "src/test/run-fail/too-much-recursion-unwinding.rs", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/596376ea55256ddea22afd2d854438c23075b592/src%2Ftest%2Frun-fail%2Ftoo-much-recursion-unwinding.rs", "raw_url": "https://github.com/rust-lang/rust/raw/596376ea55256ddea22afd2d854438c23075b592/src%2Ftest%2Frun-fail%2Ftoo-much-recursion-unwinding.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Ftoo-much-recursion-unwinding.rs?ref=596376ea55256ddea22afd2d854438c23075b592", "patch": "@@ -0,0 +1,23 @@\n+// error-pattern:ran out of stack\n+// xfail-test - right now we leak when we fail during failure\n+\n+// Test that the task fails after hiting the recursion limit\n+// durnig unwinding\n+\n+fn recurse() {\n+    log(debug, \"don't optimize me out\");\n+    recurse();\n+}\n+\n+resource r(recursed: *mut bool) unsafe {\n+    if !*recursed {\n+        *recursed = true;\n+        recurse();\n+    }\n+}\n+\n+fn main() {\n+    let mut recursed = false;\n+    let _r = r(ptr::mut_addr_of(recursed));\n+    recurse();\n+}\n\\ No newline at end of file"}]}