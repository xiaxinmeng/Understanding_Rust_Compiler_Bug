{"sha": "18511ba1cb6199aae13d7c8dd987e328259a4702", "node_id": "C_kwDOAAsO6NoAKDE4NTExYmExY2I2MTk5YWFlMTNkN2M4ZGQ5ODdlMzI4MjU5YTQ3MDI", "commit": {"author": {"name": "yukang", "email": "moorekang@gmail.com", "date": "2022-11-04T08:56:48Z"}, "committer": {"name": "yukang", "email": "moorekang@gmail.com", "date": "2022-11-04T13:48:56Z"}, "message": "test tidy should not count untracked paths towards entries limit", "tree": {"sha": "01af15a0575a7f1f22a2eba3532fda133511b863", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/01af15a0575a7f1f22a2eba3532fda133511b863"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/18511ba1cb6199aae13d7c8dd987e328259a4702", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/18511ba1cb6199aae13d7c8dd987e328259a4702", "html_url": "https://github.com/rust-lang/rust/commit/18511ba1cb6199aae13d7c8dd987e328259a4702", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/18511ba1cb6199aae13d7c8dd987e328259a4702/comments", "author": {"login": "chenyukang", "id": 230646, "node_id": "MDQ6VXNlcjIzMDY0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/230646?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chenyukang", "html_url": "https://github.com/chenyukang", "followers_url": "https://api.github.com/users/chenyukang/followers", "following_url": "https://api.github.com/users/chenyukang/following{/other_user}", "gists_url": "https://api.github.com/users/chenyukang/gists{/gist_id}", "starred_url": "https://api.github.com/users/chenyukang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chenyukang/subscriptions", "organizations_url": "https://api.github.com/users/chenyukang/orgs", "repos_url": "https://api.github.com/users/chenyukang/repos", "events_url": "https://api.github.com/users/chenyukang/events{/privacy}", "received_events_url": "https://api.github.com/users/chenyukang/received_events", "type": "User", "site_admin": false}, "committer": {"login": "chenyukang", "id": 230646, "node_id": "MDQ6VXNlcjIzMDY0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/230646?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chenyukang", "html_url": "https://github.com/chenyukang", "followers_url": "https://api.github.com/users/chenyukang/followers", "following_url": "https://api.github.com/users/chenyukang/following{/other_user}", "gists_url": "https://api.github.com/users/chenyukang/gists{/gist_id}", "starred_url": "https://api.github.com/users/chenyukang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chenyukang/subscriptions", "organizations_url": "https://api.github.com/users/chenyukang/orgs", "repos_url": "https://api.github.com/users/chenyukang/repos", "events_url": "https://api.github.com/users/chenyukang/events{/privacy}", "received_events_url": "https://api.github.com/users/chenyukang/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "126dbdc9c78446ad4cf41f5f8510a7cee59ff966", "url": "https://api.github.com/repos/rust-lang/rust/commits/126dbdc9c78446ad4cf41f5f8510a7cee59ff966", "html_url": "https://github.com/rust-lang/rust/commit/126dbdc9c78446ad4cf41f5f8510a7cee59ff966"}], "stats": {"total": 61, "additions": 35, "deletions": 26}, "files": [{"sha": "cea17ecc3d4098a0e026cc56dec6d9f3f0de343e", "filename": "Cargo.lock", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/18511ba1cb6199aae13d7c8dd987e328259a4702/Cargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/18511ba1cb6199aae13d7c8dd987e328259a4702/Cargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.lock?ref=18511ba1cb6199aae13d7c8dd987e328259a4702", "patch": "@@ -4919,6 +4919,7 @@ name = \"tidy\"\n version = \"0.1.0\"\n dependencies = [\n  \"cargo_metadata 0.14.0\",\n+ \"ignore\",\n  \"lazy_static\",\n  \"regex\",\n  \"walkdir\","}, {"sha": "8a6fbaecd6980efbd6cd3fe07d69638abf57cbf0", "filename": "src/tools/tidy/Cargo.toml", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/18511ba1cb6199aae13d7c8dd987e328259a4702/src%2Ftools%2Ftidy%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/18511ba1cb6199aae13d7c8dd987e328259a4702/src%2Ftools%2Ftidy%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Ftidy%2FCargo.toml?ref=18511ba1cb6199aae13d7c8dd987e328259a4702", "patch": "@@ -9,6 +9,7 @@ cargo_metadata = \"0.14\"\n regex = \"1\"\n lazy_static = \"1\"\n walkdir = \"2\"\n+ignore = \"0.4.18\"\n \n [[bin]]\n name = \"rust-tidy\""}, {"sha": "b4ee87bb410680e90ff2146a780f0486540adcbc", "filename": "src/tools/tidy/src/ui_tests.rs", "status": "modified", "additions": 33, "deletions": 26, "changes": 59, "blob_url": "https://github.com/rust-lang/rust/blob/18511ba1cb6199aae13d7c8dd987e328259a4702/src%2Ftools%2Ftidy%2Fsrc%2Fui_tests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/18511ba1cb6199aae13d7c8dd987e328259a4702/src%2Ftools%2Ftidy%2Fsrc%2Fui_tests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Ftidy%2Fsrc%2Fui_tests.rs?ref=18511ba1cb6199aae13d7c8dd987e328259a4702", "patch": "@@ -2,6 +2,8 @@\n //! - the number of entries in each directory must be less than `ENTRY_LIMIT`\n //! - there are no stray `.stderr` files\n \n+use ignore::Walk;\n+use ignore::WalkBuilder;\n use std::fs;\n use std::path::Path;\n \n@@ -11,34 +13,39 @@ const ROOT_ENTRY_LIMIT: usize = 948;\n const ISSUES_ENTRY_LIMIT: usize = 2117;\n \n fn check_entries(path: &Path, bad: &mut bool) {\n-    let dirs = walkdir::WalkDir::new(&path.join(\"test/ui\"))\n-        .into_iter()\n-        .filter_entry(|e| e.file_type().is_dir());\n-    for dir in dirs {\n-        if let Ok(dir) = dir {\n-            let dir_path = dir.path();\n+    for dir in Walk::new(&path.join(\"test/ui\")) {\n+        if let Ok(entry) = dir {\n+            if entry.file_type().map(|ft| ft.is_dir()).unwrap_or(false) {\n+                let dir_path = entry.path();\n+                // Use special values for these dirs.\n+                let is_root = path.join(\"test/ui\") == dir_path;\n+                let is_issues_dir = path.join(\"test/ui/issues\") == dir_path;\n+                let limit = if is_root {\n+                    ROOT_ENTRY_LIMIT\n+                } else if is_issues_dir {\n+                    ISSUES_ENTRY_LIMIT\n+                } else {\n+                    ENTRY_LIMIT\n+                };\n \n-            // Use special values for these dirs.\n-            let is_root = path.join(\"test/ui\") == dir_path;\n-            let is_issues_dir = path.join(\"test/ui/issues\") == dir_path;\n-            let limit = if is_root {\n-                ROOT_ENTRY_LIMIT\n-            } else if is_issues_dir {\n-                ISSUES_ENTRY_LIMIT\n-            } else {\n-                ENTRY_LIMIT\n-            };\n+                let count = WalkBuilder::new(&dir_path)\n+                    .max_depth(Some(1))\n+                    .build()\n+                    .into_iter()\n+                    .collect::<Vec<_>>()\n+                    .len()\n+                    - 1; // remove the dir itself\n \n-            let count = std::fs::read_dir(dir_path).unwrap().count();\n-            if count > limit {\n-                tidy_error!(\n-                    bad,\n-                    \"following path contains more than {} entries, \\\n-                    you should move the test to some relevant subdirectory (current: {}): {}\",\n-                    limit,\n-                    count,\n-                    dir_path.display()\n-                );\n+                if count > limit {\n+                    tidy_error!(\n+                        bad,\n+                        \"following path contains more than {} entries, \\\n+                            you should move the test to some relevant subdirectory (current: {}): {}\",\n+                        limit,\n+                        count,\n+                        dir_path.display()\n+                    );\n+                }\n             }\n         }\n     }"}]}