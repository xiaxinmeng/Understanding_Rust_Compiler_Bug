{"sha": "ffa21217d2aa41475dd5d14c39f09e17277cf14c", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZmYTIxMjE3ZDJhYTQxNDc1ZGQ1ZDE0YzM5ZjA5ZTE3Mjc3Y2YxNGM=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2015-08-02T18:04:30Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2015-08-02T18:09:37Z"}, "message": "std: Tighten up crate docs", "tree": {"sha": "f8488a112dec47e846425eb1b08bed13fe2e99ad", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f8488a112dec47e846425eb1b08bed13fe2e99ad"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ffa21217d2aa41475dd5d14c39f09e17277cf14c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ffa21217d2aa41475dd5d14c39f09e17277cf14c", "html_url": "https://github.com/rust-lang/rust/commit/ffa21217d2aa41475dd5d14c39f09e17277cf14c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ffa21217d2aa41475dd5d14c39f09e17277cf14c/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f7b3cd3337021ed16302fd6a9cc5bcf0afee6679", "url": "https://api.github.com/repos/rust-lang/rust/commits/f7b3cd3337021ed16302fd6a9cc5bcf0afee6679", "html_url": "https://github.com/rust-lang/rust/commit/f7b3cd3337021ed16302fd6a9cc5bcf0afee6679"}], "stats": {"total": 17, "additions": 6, "deletions": 11}, "files": [{"sha": "2e796004aab036037cbc9328b0ee56d0478cb277", "filename": "src/libstd/lib.rs", "status": "modified", "additions": 6, "deletions": 11, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/ffa21217d2aa41475dd5d14c39f09e17277cf14c/src%2Flibstd%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ffa21217d2aa41475dd5d14c39f09e17277cf14c/src%2Flibstd%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Flib.rs?ref=ffa21217d2aa41475dd5d14c39f09e17277cf14c", "patch": "@@ -13,12 +13,11 @@\n //! The Rust Standard Library is the foundation of portable Rust\n //! software, a set of minimal and battle-tested shared abstractions\n //! for the [broader Rust ecosystem](https://crates.io). It offers\n-//! core types (e.g. [`Vec`](vec/index.html)\n-//! and [`Option`](option/index.html)), library-defined [operations on\n-//! language primitives](#primitives) (e.g. [`u32`](u32/index.html) and\n-//! [`str`](str/index.html)), [standard macros](#macros),\n+//! core types, like [`Vec`](vec/index.html)\n+//! and [`Option`](option/index.html), library-defined [operations on\n+//! language primitives](#primitives), [standard macros](#macros),\n //! [I/O](io/index.html) and [multithreading](thread/index.html), among\n-//! [many other lovely\n+//! [many other\n //! things](#what-is-in-the-standard-library-documentation?).\n //!\n //! `std` is available to all Rust crates by default, just as if each\n@@ -65,8 +64,6 @@\n //!\n //! # What is in the standard library documentation?\n //!\n-//! Lots of stuff. Well, broadly four things actually.\n-//!\n //! First of all, The Rust Standard Library is divided into a number\n //! of focused modules, [all listed further down this page](#modules).\n //! These modules are the bedrock upon which all of Rust is forged,\n@@ -89,7 +86,7 @@\n //!\n //! So for example there is a [page for the primitive type\n //! `i32`](primitive.i32.html) that lists all the methods that can be\n-//! called on 32-bit integers (mega useful), and there is a [page for\n+//! called on 32-bit integers (very useful), and there is a [page for\n //! the module `std::i32`](i32/index.html) that documents the constant\n //! values `MIN` and `MAX` (rarely useful).\n //!\n@@ -99,9 +96,7 @@\n //! [`String`](string/struct.String.html) and\n //! [`Vec`](vec/struct.Vec.html) are actually calls to methods on\n //! `str` and `[T]` respectively, via [deref\n-//! coercions](../book/deref-coercions.html). *Accepting that\n-//! primitive types are documented on their own pages will bring you a\n-//! deep inner wisdom. Embrace it now before proceeding.*\n+//! coercions](../book/deref-coercions.html).\n //!\n //! Third, the standard library defines [The Rust\n //! Prelude](prelude/index.html), a small collection of items - mostly"}]}