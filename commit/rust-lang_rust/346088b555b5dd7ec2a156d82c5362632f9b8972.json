{"sha": "346088b555b5dd7ec2a156d82c5362632f9b8972", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM0NjA4OGI1NTViNWRkN2VjMmExNTZkODJjNTM2MjYzMmY5Yjg5NzI=", "commit": {"author": {"name": "Ariel Ben-Yehuda", "email": "arielb1@mail.tau.ac.il", "date": "2015-09-24T23:40:57Z"}, "committer": {"name": "Ariel Ben-Yehuda", "email": "ariel.byd@gmail.com", "date": "2015-09-26T18:49:54Z"}, "message": "show each object-safety violation once\n\ndifferent supertraits can suffer from the same object-safety violation,\nleading to duplication in the error message. Avoid it.\n\nFixes #20692", "tree": {"sha": "e1dada10b35158d785c577878b8a4b4577038d2f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e1dada10b35158d785c577878b8a4b4577038d2f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/346088b555b5dd7ec2a156d82c5362632f9b8972", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/346088b555b5dd7ec2a156d82c5362632f9b8972", "html_url": "https://github.com/rust-lang/rust/commit/346088b555b5dd7ec2a156d82c5362632f9b8972", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/346088b555b5dd7ec2a156d82c5362632f9b8972/comments", "author": null, "committer": {"login": "arielb1", "id": 1830974, "node_id": "MDQ6VXNlcjE4MzA5NzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1830974?v=4", "gravatar_id": "", "url": "https://api.github.com/users/arielb1", "html_url": "https://github.com/arielb1", "followers_url": "https://api.github.com/users/arielb1/followers", "following_url": "https://api.github.com/users/arielb1/following{/other_user}", "gists_url": "https://api.github.com/users/arielb1/gists{/gist_id}", "starred_url": "https://api.github.com/users/arielb1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/arielb1/subscriptions", "organizations_url": "https://api.github.com/users/arielb1/orgs", "repos_url": "https://api.github.com/users/arielb1/repos", "events_url": "https://api.github.com/users/arielb1/events{/privacy}", "received_events_url": "https://api.github.com/users/arielb1/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fe6ad097c654d2655ad11610b2c96d577a3fcc2b", "url": "https://api.github.com/repos/rust-lang/rust/commits/fe6ad097c654d2655ad11610b2c96d577a3fcc2b", "html_url": "https://github.com/rust-lang/rust/commit/fe6ad097c654d2655ad11610b2c96d577a3fcc2b"}], "stats": {"total": 48, "additions": 45, "deletions": 3}, "files": [{"sha": "43b3831604bbf8819d5fabf238e5a8c3e075999c", "filename": "src/librustc/middle/traits/error_reporting.rs", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/346088b555b5dd7ec2a156d82c5362632f9b8972/src%2Flibrustc%2Fmiddle%2Ftraits%2Ferror_reporting.rs", "raw_url": "https://github.com/rust-lang/rust/raw/346088b555b5dd7ec2a156d82c5362632f9b8972/src%2Flibrustc%2Fmiddle%2Ftraits%2Ferror_reporting.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftraits%2Ferror_reporting.rs?ref=346088b555b5dd7ec2a156d82c5362632f9b8972", "patch": "@@ -28,7 +28,8 @@ use middle::def_id::DefId;\n use middle::infer::InferCtxt;\n use middle::ty::{self, ToPredicate, HasTypeFlags, ToPolyTraitRef, TraitRef, Ty};\n use middle::ty::fold::TypeFoldable;\n-use std::collections::HashMap;\n+use util::nodemap::{FnvHashMap, FnvHashSet};\n+\n use std::fmt;\n use syntax::codemap::Span;\n use syntax::attr::{AttributeMethods, AttrMetaMethods};\n@@ -124,7 +125,7 @@ fn report_on_unimplemented<'a, 'tcx>(infcx: &InferCtxt<'a, 'tcx>,\n                                                (gen.name.as_str().to_string(),\n                                                 trait_ref.substs.types.get(param, i)\n                                                          .to_string())\n-                                              }).collect::<HashMap<String, String>>();\n+                                              }).collect::<FnvHashMap<String, String>>();\n                 generic_map.insert(\"Self\".to_string(),\n                                    trait_ref.self_ty().to_string());\n                 let parser = Parser::new(&istring);\n@@ -335,7 +336,11 @@ pub fn report_object_safety_error<'tcx>(tcx: &ty::ctxt<'tcx>,\n         \"the trait `{}` cannot be made into an object\",\n         tcx.item_path_str(trait_def_id));\n \n+    let mut reported_violations = FnvHashSet();\n     for violation in violations {\n+        if !reported_violations.insert(violation.clone()) {\n+            continue;\n+        }\n         match violation {\n             ObjectSafetyViolation::SizedSelf => {\n                 tcx.sess.fileline_note("}, {"sha": "5768e13c5bf2ddb3917955ff5eb943279ae7564f", "filename": "src/librustc/middle/traits/object_safety.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/346088b555b5dd7ec2a156d82c5362632f9b8972/src%2Flibrustc%2Fmiddle%2Ftraits%2Fobject_safety.rs", "raw_url": "https://github.com/rust-lang/rust/raw/346088b555b5dd7ec2a156d82c5362632f9b8972/src%2Flibrustc%2Fmiddle%2Ftraits%2Fobject_safety.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftraits%2Fobject_safety.rs?ref=346088b555b5dd7ec2a156d82c5362632f9b8972", "patch": "@@ -27,7 +27,7 @@ use middle::ty::{self, ToPolyTraitRef, Ty};\n use std::rc::Rc;\n use syntax::ast;\n \n-#[derive(Debug)]\n+#[derive(Clone, Debug, PartialEq, Eq, Hash)]\n pub enum ObjectSafetyViolation<'tcx> {\n     /// Self : Sized declared on the trait\n     SizedSelf,"}, {"sha": "a726b4f5b6673430ece99ee55550cd2d566414f2", "filename": "src/librustc/middle/ty/mod.rs", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/346088b555b5dd7ec2a156d82c5362632f9b8972/src%2Flibrustc%2Fmiddle%2Fty%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/346088b555b5dd7ec2a156d82c5362632f9b8972/src%2Flibrustc%2Fmiddle%2Fty%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fty%2Fmod.rs?ref=346088b555b5dd7ec2a156d82c5362632f9b8972", "patch": "@@ -272,6 +272,20 @@ impl<'tcx> Method<'tcx> {\n     }\n }\n \n+impl<'tcx> PartialEq for Method<'tcx> {\n+    #[inline]\n+    fn eq(&self, other: &Self) -> bool { self.def_id == other.def_id }\n+}\n+\n+impl<'tcx> Eq for Method<'tcx> {}\n+\n+impl<'tcx> Hash for Method<'tcx> {\n+    #[inline]\n+    fn hash<H: Hasher>(&self, s: &mut H) {\n+        self.def_id.hash(s)\n+    }\n+}\n+\n #[derive(Clone, Copy, Debug)]\n pub struct AssociatedConst<'tcx> {\n     pub name: Name,"}, {"sha": "62d775adac3c7955a776251c29f6d1e65266bc60", "filename": "src/test/compile-fail/issue-20692.rs", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/346088b555b5dd7ec2a156d82c5362632f9b8972/src%2Ftest%2Fcompile-fail%2Fissue-20692.rs", "raw_url": "https://github.com/rust-lang/rust/raw/346088b555b5dd7ec2a156d82c5362632f9b8972/src%2Ftest%2Fcompile-fail%2Fissue-20692.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-20692.rs?ref=346088b555b5dd7ec2a156d82c5362632f9b8972", "patch": "@@ -0,0 +1,23 @@\n+// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+trait Array: Sized {}\n+\n+fn f<T: Array>(x: &T) {\n+    let _ = x\n+    //~^ ERROR `Array` cannot be made into an object\n+    //~| NOTE the trait cannot require that `Self : Sized`\n+    as\n+    &Array;\n+    //~^ ERROR `Array` cannot be made into an object\n+    //~| NOTE the trait cannot require that `Self : Sized`\n+}\n+\n+fn main() {}"}]}