{"sha": "36047b0216b9fb4741e8927c7e6b644727e02fdf", "node_id": "C_kwDOAAsO6NoAKDM2MDQ3YjAyMTZiOWZiNDc0MWU4OTI3YzdlNmI2NDQ3MjdlMDJmZGY", "commit": {"author": {"name": "blyxyas", "email": "blyxyas@gmail.com", "date": "2023-04-02T14:18:03Z"}, "committer": {"name": "blyxyas", "email": "blyxyas@gmail.com", "date": "2023-04-02T14:18:03Z"}, "message": "Fix `nonminimal_bool` `#[allow]` attributes.", "tree": {"sha": "1fe85a798373f856980e7f0b258342355e1bc608", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1fe85a798373f856980e7f0b258342355e1bc608"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/36047b0216b9fb4741e8927c7e6b644727e02fdf", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEM3aofraJSaf7CtgpTTgXC1ovwzQFAmQpjpsACgkQTTgXC1ov\nwzT95Q//WSVu/GQ1oUsdJHPb836skZKn6FbI6qFbMsDydymeAvjULqjD764MxdBi\nY5w+YInP0GW3tpolUYDII0k751TodJj3/zsGD4amx9KxeJ650LwCTNZJKYgEKRHK\nMtmprbPjTmXypqb1uyaH0Zpn2Usgh+Evg0iZf1d13RehtUddMhgKy/v8/ICsXcsi\n43ERp/cH++bGZIf3AlEDvAKXW821asEqNhLkYmeiwP9GilzLUS9ktQlnt3rtGAwv\nOfkPGOWVsCdHOjb8qBKAknpqOgQIRDhKE9t7jgj5kS8ZGlfoI2g05KqotpVvdgXP\nA0q4D3yc3zPrCDcMnpKie+jKWpTwVBcsznGxREaCqMjjR1AwoMdvE/qvFN4JNgPw\nLAuUfCetJTjzH1fbvxxJB+OjZ8hjovwGnKOTnMexJXCS+t8Kvso427gMb4Dfb4MT\nmYB4W1cUnSx9LjZSN9H/K41NDacXGqX4gi6jzlXQUdeg8s0G8oqsHKThstcCri4m\nNWWfWaMiteAm5Z3cOpARhOQnGKru0wUiUiYniopqm6qLh9/0b1jhqjrrb3cr+Exn\nlnWVzPIbWSXY9LbWuqp8gnc5rfPJcwS252L+ryb6nWzINe2Cxek0uoAcBKJeEDrN\nxyJNcNXicXcBD1grzKl17+BldicO4cCgmwtcmEGnbsCNDpn2/mE=\n=k05K\n-----END PGP SIGNATURE-----", "payload": "tree 1fe85a798373f856980e7f0b258342355e1bc608\nparent ac4838c554aeafbb1b0430c877bc7d879f8ea581\nauthor blyxyas <blyxyas@gmail.com> 1680445083 +0200\ncommitter blyxyas <blyxyas@gmail.com> 1680445083 +0200\n\nFix `nonminimal_bool` `#[allow]` attributes.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/36047b0216b9fb4741e8927c7e6b644727e02fdf", "html_url": "https://github.com/rust-lang/rust/commit/36047b0216b9fb4741e8927c7e6b644727e02fdf", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/36047b0216b9fb4741e8927c7e6b644727e02fdf/comments", "author": {"login": "blyxyas", "id": 73757586, "node_id": "MDQ6VXNlcjczNzU3NTg2", "avatar_url": "https://avatars.githubusercontent.com/u/73757586?v=4", "gravatar_id": "", "url": "https://api.github.com/users/blyxyas", "html_url": "https://github.com/blyxyas", "followers_url": "https://api.github.com/users/blyxyas/followers", "following_url": "https://api.github.com/users/blyxyas/following{/other_user}", "gists_url": "https://api.github.com/users/blyxyas/gists{/gist_id}", "starred_url": "https://api.github.com/users/blyxyas/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/blyxyas/subscriptions", "organizations_url": "https://api.github.com/users/blyxyas/orgs", "repos_url": "https://api.github.com/users/blyxyas/repos", "events_url": "https://api.github.com/users/blyxyas/events{/privacy}", "received_events_url": "https://api.github.com/users/blyxyas/received_events", "type": "User", "site_admin": false}, "committer": {"login": "blyxyas", "id": 73757586, "node_id": "MDQ6VXNlcjczNzU3NTg2", "avatar_url": "https://avatars.githubusercontent.com/u/73757586?v=4", "gravatar_id": "", "url": "https://api.github.com/users/blyxyas", "html_url": "https://github.com/blyxyas", "followers_url": "https://api.github.com/users/blyxyas/followers", "following_url": "https://api.github.com/users/blyxyas/following{/other_user}", "gists_url": "https://api.github.com/users/blyxyas/gists{/gist_id}", "starred_url": "https://api.github.com/users/blyxyas/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/blyxyas/subscriptions", "organizations_url": "https://api.github.com/users/blyxyas/orgs", "repos_url": "https://api.github.com/users/blyxyas/repos", "events_url": "https://api.github.com/users/blyxyas/events{/privacy}", "received_events_url": "https://api.github.com/users/blyxyas/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ac4838c554aeafbb1b0430c877bc7d879f8ea581", "url": "https://api.github.com/repos/rust-lang/rust/commits/ac4838c554aeafbb1b0430c877bc7d879f8ea581", "html_url": "https://github.com/rust-lang/rust/commit/ac4838c554aeafbb1b0430c877bc7d879f8ea581"}], "stats": {"total": 57, "additions": 39, "deletions": 18}, "files": [{"sha": "455f0df7cd0adcc3ab2d8728138e212a34fd9a31", "filename": "clippy_lints/src/booleans.rs", "status": "modified", "additions": 21, "deletions": 18, "changes": 39, "blob_url": "https://github.com/rust-lang/rust/blob/36047b0216b9fb4741e8927c7e6b644727e02fdf/clippy_lints%2Fsrc%2Fbooleans.rs", "raw_url": "https://github.com/rust-lang/rust/raw/36047b0216b9fb4741e8927c7e6b644727e02fdf/clippy_lints%2Fsrc%2Fbooleans.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fbooleans.rs?ref=36047b0216b9fb4741e8927c7e6b644727e02fdf", "patch": "@@ -7,7 +7,7 @@ use rustc_ast::ast::LitKind;\n use rustc_errors::Applicability;\n use rustc_hir::intravisit::{walk_expr, FnKind, Visitor};\n use rustc_hir::{BinOpKind, Body, Expr, ExprKind, FnDecl, UnOp};\n-use rustc_lint::{LateContext, LateLintPass};\n+use rustc_lint::{LateContext, LateLintPass, Level};\n use rustc_session::{declare_lint_pass, declare_tool_lint};\n use rustc_span::def_id::LocalDefId;\n use rustc_span::source_map::Span;\n@@ -430,23 +430,25 @@ impl<'a, 'tcx> NonminimalBoolVisitor<'a, 'tcx> {\n                 }\n             }\n             let nonminimal_bool_lint = |suggestions: Vec<_>| {\n-                span_lint_hir_and_then(\n-                    self.cx,\n-                    NONMINIMAL_BOOL,\n-                    e.hir_id,\n-                    e.span,\n-                    \"this boolean expression can be simplified\",\n-                    |diag| {\n-                        diag.span_suggestions(\n-                            e.span,\n-                            \"try\",\n-                            suggestions.into_iter(),\n-                            // nonminimal_bool can produce minimal but\n-                            // not human readable expressions (#3141)\n-                            Applicability::Unspecified,\n-                        );\n-                    },\n-                );\n+                if self.cx.tcx.lint_level_at_node(NONMINIMAL_BOOL, e.hir_id).0 != Level::Allow {\n+                    span_lint_hir_and_then(\n+                        self.cx,\n+                        NONMINIMAL_BOOL,\n+                        e.hir_id,\n+                        e.span,\n+                        \"this boolean expression can be simplified\",\n+                        |diag| {\n+                            diag.span_suggestions(\n+                                e.span,\n+                                \"try\",\n+                                suggestions.into_iter(),\n+                                // nonminimal_bool can produce minimal but\n+                                // not human readable expressions (#3141)\n+                                Applicability::Unspecified,\n+                            );\n+                        },\n+                    );\n+                }\n             };\n             if improvements.is_empty() {\n                 let mut visitor = NotSimplificationVisitor { cx: self.cx };\n@@ -498,6 +500,7 @@ impl<'a, 'tcx> Visitor<'tcx> for NotSimplificationVisitor<'a, 'tcx> {\n         if let ExprKind::Unary(UnOp::Not, inner) = &expr.kind &&\n             !inner.span.from_expansion() &&\n             let Some(suggestion) = simplify_not(self.cx, inner)\n+\t\t\t&& self.cx.tcx.lint_level_at_node(NONMINIMAL_BOOL, expr.hir_id).0 != Level::Allow\n         {\n             span_lint_and_sugg(\n                 self.cx,"}, {"sha": "80cc7c60f56e586d67cf8be08aaf4733edbc2a17", "filename": "tests/ui/nonminimal_bool.rs", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/36047b0216b9fb4741e8927c7e6b644727e02fdf/tests%2Fui%2Fnonminimal_bool.rs", "raw_url": "https://github.com/rust-lang/rust/raw/36047b0216b9fb4741e8927c7e6b644727e02fdf/tests%2Fui%2Fnonminimal_bool.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fnonminimal_bool.rs?ref=36047b0216b9fb4741e8927c7e6b644727e02fdf", "patch": "@@ -92,3 +92,21 @@ fn issue_10523_2() {\n     }\n     if a!() {}\n }\n+\n+fn issue_10435() {\n+    let x = vec![0];\n+    let y = vec![1];\n+    let z = vec![2];\n+\n+    // vvv Should not lint\n+    #[allow(clippy::nonminimal_bool)]\n+    if !x.is_empty() && !(y.is_empty() || z.is_empty()) {\n+        println!(\"{}\", line!());\n+    }\n+\n+    // vvv Should not lint (#10435 talks about a bug where it lints)\n+    #[allow(clippy::nonminimal_bool)]\n+    if !(x == [0]) {\n+        println!(\"{}\", line!());\n+    }\n+}"}]}