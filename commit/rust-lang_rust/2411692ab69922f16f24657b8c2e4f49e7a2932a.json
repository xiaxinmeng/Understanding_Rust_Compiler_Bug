{"sha": "2411692ab69922f16f24657b8c2e4f49e7a2932a", "node_id": "C_kwDOAAsO6NoAKDI0MTE2OTJhYjY5OTIyZjE2ZjI0NjU3YjhjMmU0ZjQ5ZTdhMjkzMmE", "commit": {"author": {"name": "Maybe Waffle", "email": "waffle.lapkin@gmail.com", "date": "2022-06-13T09:03:46Z"}, "committer": {"name": "Maybe Waffle", "email": "waffle.lapkin@gmail.com", "date": "2022-06-13T09:03:46Z"}, "message": "Make preconditions of `check_pat_ref` & `borrow_pat_suggestion` clearer", "tree": {"sha": "e69e1ae192ff3ea29d0230f32753c7fc08575692", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e69e1ae192ff3ea29d0230f32753c7fc08575692"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2411692ab69922f16f24657b8c2e4f49e7a2932a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2411692ab69922f16f24657b8c2e4f49e7a2932a", "html_url": "https://github.com/rust-lang/rust/commit/2411692ab69922f16f24657b8c2e4f49e7a2932a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2411692ab69922f16f24657b8c2e4f49e7a2932a/comments", "author": {"login": "WaffleLapkin", "id": 38225716, "node_id": "MDQ6VXNlcjM4MjI1NzE2", "avatar_url": "https://avatars.githubusercontent.com/u/38225716?v=4", "gravatar_id": "", "url": "https://api.github.com/users/WaffleLapkin", "html_url": "https://github.com/WaffleLapkin", "followers_url": "https://api.github.com/users/WaffleLapkin/followers", "following_url": "https://api.github.com/users/WaffleLapkin/following{/other_user}", "gists_url": "https://api.github.com/users/WaffleLapkin/gists{/gist_id}", "starred_url": "https://api.github.com/users/WaffleLapkin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/WaffleLapkin/subscriptions", "organizations_url": "https://api.github.com/users/WaffleLapkin/orgs", "repos_url": "https://api.github.com/users/WaffleLapkin/repos", "events_url": "https://api.github.com/users/WaffleLapkin/events{/privacy}", "received_events_url": "https://api.github.com/users/WaffleLapkin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "WaffleLapkin", "id": 38225716, "node_id": "MDQ6VXNlcjM4MjI1NzE2", "avatar_url": "https://avatars.githubusercontent.com/u/38225716?v=4", "gravatar_id": "", "url": "https://api.github.com/users/WaffleLapkin", "html_url": "https://github.com/WaffleLapkin", "followers_url": "https://api.github.com/users/WaffleLapkin/followers", "following_url": "https://api.github.com/users/WaffleLapkin/following{/other_user}", "gists_url": "https://api.github.com/users/WaffleLapkin/gists{/gist_id}", "starred_url": "https://api.github.com/users/WaffleLapkin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/WaffleLapkin/subscriptions", "organizations_url": "https://api.github.com/users/WaffleLapkin/orgs", "repos_url": "https://api.github.com/users/WaffleLapkin/repos", "events_url": "https://api.github.com/users/WaffleLapkin/events{/privacy}", "received_events_url": "https://api.github.com/users/WaffleLapkin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e9d49b2bfc4e4c327987bb9d2a65b113b10100de", "url": "https://api.github.com/repos/rust-lang/rust/commits/e9d49b2bfc4e4c327987bb9d2a65b113b10100de", "html_url": "https://github.com/rust-lang/rust/commit/e9d49b2bfc4e4c327987bb9d2a65b113b10100de"}], "stats": {"total": 8, "additions": 5, "deletions": 3}, "files": [{"sha": "836cdb4206a60395faeed25a66d6920e24bfe068", "filename": "compiler/rustc_typeck/src/check/pat.rs", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/2411692ab69922f16f24657b8c2e4f49e7a2932a/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fpat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2411692ab69922f16f24657b8c2e4f49e7a2932a/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fpat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fpat.rs?ref=2411692ab69922f16f24657b8c2e4f49e7a2932a", "patch": "@@ -649,9 +649,10 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n         }\n     }\n \n-    fn borrow_pat_suggestion(&self, err: &mut Diagnostic, pat: &Pat<'_>, inner: &Pat<'_>) {\n+    // Precondition: pat is a Ref(_) pattern\n+    fn borrow_pat_suggestion(&self, err: &mut Diagnostic, pat: &Pat<'_>) {\n         let tcx = self.tcx;\n-        if let PatKind::Ref(_, mutbl) = pat.kind\n+        if let PatKind::Ref(inner, mutbl) = pat.kind\n         && let PatKind::Binding(_, _, binding, ..) = inner.kind {\n             let binding_parent_id = tcx.hir().get_parent_node(pat.hir_id);\n             let binding_parent = tcx.hir().get(binding_parent_id);\n@@ -1835,6 +1836,7 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n         box_ty\n     }\n \n+    // Precondition: Pat is Ref(inner)\n     fn check_pat_ref(\n         &self,\n         pat: &'tcx Pat<'tcx>,\n@@ -1868,7 +1870,7 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n                     // Look for a case like `fn foo(&foo: u32)` and suggest\n                     // `fn foo(foo: &u32)`\n                     if let Some(mut err) = err {\n-                        self.borrow_pat_suggestion(&mut err, pat, inner);\n+                        self.borrow_pat_suggestion(&mut err, pat);\n                         err.emit();\n                     }\n                     (rptr_ty, inner_ty)"}]}