{"sha": "417fe6d16e981c01bf258cd8b47a812bfb33723d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQxN2ZlNmQxNmU5ODFjMDFiZjI1OGNkOGI0N2E4MTJiZmIzMzcyM2Q=", "commit": {"author": {"name": "Jeffrey Seyfried", "email": "jeffrey.seyfried@gmail.com", "date": "2016-05-09T22:20:53Z"}, "committer": {"name": "Jeffrey Seyfried", "email": "jeffrey.seyfried@gmail.com", "date": "2016-05-10T04:58:03Z"}, "message": "Refactor away method `LoweringContext::diagnostic`", "tree": {"sha": "6e19d90428469bd7d186bd6824359653359c8359", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6e19d90428469bd7d186bd6824359653359c8359"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/417fe6d16e981c01bf258cd8b47a812bfb33723d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/417fe6d16e981c01bf258cd8b47a812bfb33723d", "html_url": "https://github.com/rust-lang/rust/commit/417fe6d16e981c01bf258cd8b47a812bfb33723d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/417fe6d16e981c01bf258cd8b47a812bfb33723d/comments", "author": {"login": "jseyfried", "id": 8652869, "node_id": "MDQ6VXNlcjg2NTI4Njk=", "avatar_url": "https://avatars.githubusercontent.com/u/8652869?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jseyfried", "html_url": "https://github.com/jseyfried", "followers_url": "https://api.github.com/users/jseyfried/followers", "following_url": "https://api.github.com/users/jseyfried/following{/other_user}", "gists_url": "https://api.github.com/users/jseyfried/gists{/gist_id}", "starred_url": "https://api.github.com/users/jseyfried/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jseyfried/subscriptions", "organizations_url": "https://api.github.com/users/jseyfried/orgs", "repos_url": "https://api.github.com/users/jseyfried/repos", "events_url": "https://api.github.com/users/jseyfried/events{/privacy}", "received_events_url": "https://api.github.com/users/jseyfried/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jseyfried", "id": 8652869, "node_id": "MDQ6VXNlcjg2NTI4Njk=", "avatar_url": "https://avatars.githubusercontent.com/u/8652869?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jseyfried", "html_url": "https://github.com/jseyfried", "followers_url": "https://api.github.com/users/jseyfried/followers", "following_url": "https://api.github.com/users/jseyfried/following{/other_user}", "gists_url": "https://api.github.com/users/jseyfried/gists{/gist_id}", "starred_url": "https://api.github.com/users/jseyfried/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jseyfried/subscriptions", "organizations_url": "https://api.github.com/users/jseyfried/orgs", "repos_url": "https://api.github.com/users/jseyfried/repos", "events_url": "https://api.github.com/users/jseyfried/events{/privacy}", "received_events_url": "https://api.github.com/users/jseyfried/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "df572fcf4eea79baddc0136573cbbeed88db001e", "url": "https://api.github.com/repos/rust-lang/rust/commits/df572fcf4eea79baddc0136573cbbeed88db001e", "html_url": "https://github.com/rust-lang/rust/commit/df572fcf4eea79baddc0136573cbbeed88db001e"}], "stats": {"total": 12, "additions": 3, "deletions": 9}, "files": [{"sha": "4bfe514c39d10ae2b3c2beae02a2417a73e30500", "filename": "src/librustc/hir/lowering.rs", "status": "modified", "additions": 3, "deletions": 9, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/417fe6d16e981c01bf258cd8b47a812bfb33723d/src%2Flibrustc%2Fhir%2Flowering.rs", "raw_url": "https://github.com/rust-lang/rust/raw/417fe6d16e981c01bf258cd8b47a812bfb33723d/src%2Flibrustc%2Fhir%2Flowering.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fhir%2Flowering.rs?ref=417fe6d16e981c01bf258cd8b47a812bfb33723d", "patch": "@@ -50,7 +50,6 @@ use std::collections::BTreeMap;\n use std::iter;\n use syntax::ast::*;\n use syntax::attr::{ThinAttributes, ThinAttributesExt};\n-use syntax::errors::Handler;\n use syntax::ext::mtwt;\n use syntax::ptr::P;\n use syntax::codemap::{respan, Spanned, Span};\n@@ -94,7 +93,7 @@ impl Resolver for DummyResolver {\n     }\n }\n \n-impl<'a, 'hir> LoweringContext<'a> {\n+impl<'a> LoweringContext<'a> {\n     pub fn new(id_assigner: &'a NodeIdAssigner,\n                c: Option<&Crate>,\n                resolver: &'a mut Resolver)\n@@ -125,11 +124,6 @@ impl<'a, 'hir> LoweringContext<'a> {\n         hir::Ident::from_name(token::gensym(s))\n     }\n \n-    // Panics if this LoweringContext's NodeIdAssigner is not able to emit diagnostics.\n-    fn diagnostic(&self) -> &Handler {\n-        self.id_assigner.diagnostic()\n-    }\n-\n     fn with_parent_def<T, F: FnOnce() -> T>(&self, parent_id: NodeId, f: F) -> T {\n         let old_def = self.parent_def.get();\n         self.parent_def.set(match self.resolver.borrow_mut().definitions() {\n@@ -1245,8 +1239,8 @@ pub fn lower_expr(lctx: &LoweringContext, e: &Expr) -> P<hir::Expr> {\n                         make_struct(lctx, e, &[\"RangeInclusive\", \"NonEmpty\"],\n                                              &[(\"start\", e1), (\"end\", e2)]),\n \n-                    _ => panic!(lctx.diagnostic().span_fatal(e.span,\n-                                                             \"inclusive range with no end\"))\n+                    _ => panic!(lctx.id_assigner.diagnostic()\n+                                                .span_fatal(e.span, \"inclusive range with no end\")),\n                 };\n             }\n             ExprKind::Path(ref qself, ref path) => {"}]}