{"sha": "e74e059bd428332216d1b780e608cb824bc8c150", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU3NGUwNTliZDQyODMzMjIxNmQxYjc4MGU2MDhjYjgyNGJjOGMxNTA=", "commit": {"author": {"name": "Ariel Ben-Yehuda", "email": "ariel.byd@gmail.com", "date": "2014-10-15T17:39:12Z"}, "committer": {"name": "Ariel Ben-Yehuda", "email": "ariel.byd@gmail.com", "date": "2014-10-15T17:39:12Z"}, "message": "improve the comments on integer overflow safety", "tree": {"sha": "9daeeeada06704c464f6d5c9d06155c92e38a79a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9daeeeada06704c464f6d5c9d06155c92e38a79a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e74e059bd428332216d1b780e608cb824bc8c150", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e74e059bd428332216d1b780e608cb824bc8c150", "html_url": "https://github.com/rust-lang/rust/commit/e74e059bd428332216d1b780e608cb824bc8c150", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e74e059bd428332216d1b780e608cb824bc8c150/comments", "author": {"login": "arielb1", "id": 1830974, "node_id": "MDQ6VXNlcjE4MzA5NzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1830974?v=4", "gravatar_id": "", "url": "https://api.github.com/users/arielb1", "html_url": "https://github.com/arielb1", "followers_url": "https://api.github.com/users/arielb1/followers", "following_url": "https://api.github.com/users/arielb1/following{/other_user}", "gists_url": "https://api.github.com/users/arielb1/gists{/gist_id}", "starred_url": "https://api.github.com/users/arielb1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/arielb1/subscriptions", "organizations_url": "https://api.github.com/users/arielb1/orgs", "repos_url": "https://api.github.com/users/arielb1/repos", "events_url": "https://api.github.com/users/arielb1/events{/privacy}", "received_events_url": "https://api.github.com/users/arielb1/received_events", "type": "User", "site_admin": false}, "committer": {"login": "arielb1", "id": 1830974, "node_id": "MDQ6VXNlcjE4MzA5NzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1830974?v=4", "gravatar_id": "", "url": "https://api.github.com/users/arielb1", "html_url": "https://github.com/arielb1", "followers_url": "https://api.github.com/users/arielb1/followers", "following_url": "https://api.github.com/users/arielb1/following{/other_user}", "gists_url": "https://api.github.com/users/arielb1/gists{/gist_id}", "starred_url": "https://api.github.com/users/arielb1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/arielb1/subscriptions", "organizations_url": "https://api.github.com/users/arielb1/orgs", "repos_url": "https://api.github.com/users/arielb1/repos", "events_url": "https://api.github.com/users/arielb1/events{/privacy}", "received_events_url": "https://api.github.com/users/arielb1/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5bcd0a0b5030487613bee37ed38945e42c4e6b85", "url": "https://api.github.com/repos/rust-lang/rust/commits/5bcd0a0b5030487613bee37ed38945e42c4e6b85", "html_url": "https://github.com/rust-lang/rust/commit/5bcd0a0b5030487613bee37ed38945e42c4e6b85"}], "stats": {"total": 9, "additions": 6, "deletions": 3}, "files": [{"sha": "69fd9a9cc1316b757a7ce4e77246d1fb4a2faa9f", "filename": "src/librustc/middle/trans/adt.rs", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/e74e059bd428332216d1b780e608cb824bc8c150/src%2Flibrustc%2Fmiddle%2Ftrans%2Fadt.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e74e059bd428332216d1b780e608cb824bc8c150/src%2Flibrustc%2Fmiddle%2Ftrans%2Fadt.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftrans%2Fadt.rs?ref=e74e059bd428332216d1b780e608cb824bc8c150", "patch": "@@ -471,14 +471,16 @@ fn ensure_struct_fits_in_address_space(ccx: &CrateContext,\n                                        scapegoat: ty::t) {\n     let mut offset = 0;\n     for &llty in fields.iter() {\n+        // Invariant: offset < ccx.max_obj_size() <= 1<<61\n         if !packed {\n             let type_align = machine::llalign_of_min(ccx, llty);\n             offset = roundup(offset, type_align);\n         }\n+        // type_align is a power-of-2, so still offset < ccx.max_obj_size()\n+        // llsize_of_alloc(ccx, llty) is also less than ccx.max_obj_size()\n+        // so the sum is less than 1<<62 (and therefore can't overflow).\n         offset += machine::llsize_of_alloc(ccx, llty);\n \n-        // We can get away with checking for overflow once per iteration,\n-        // because field sizes are less than 1<<61.\n         if offset >= ccx.max_obj_size() {\n             ccx.report_overbig_object(scapegoat);\n         }\n@@ -498,7 +500,8 @@ fn ensure_enum_fits_in_address_space(ccx: &CrateContext,\n     let discr_size = machine::llsize_of_alloc(ccx, ll_inttype(ccx, discr));\n     let (field_size, field_align) = union_size_and_align(fields);\n \n-    // This can't overflow because field_size, discr_size, field_align < 1<<61\n+    // field_align < 1<<32, discr_size <= 8, field_size < MAX_OBJ_SIZE <= 1<<61\n+    // so the sum is less than 1<<62 (and can't overflow).\n     let total_size = roundup(discr_size, field_align) + field_size;\n \n     if total_size >= ccx.max_obj_size() {"}]}