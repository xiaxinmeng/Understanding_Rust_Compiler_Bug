{"sha": "c27fb3a0cafd01a699e78a36e711c00b39468a65", "node_id": "MDY6Q29tbWl0NzI0NzEyOmMyN2ZiM2EwY2FmZDAxYTY5OWU3OGEzNmU3MTFjMDBiMzk0NjhhNjU=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2019-11-16T19:18:46Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-11-16T19:18:46Z"}, "message": "Merge #2279\n\n2279: Better factoring of macro expansion machinery in goto def r=matklad a=matklad\n\n\n\nCo-authored-by: Aleksey Kladov <aleksey.kladov@gmail.com>", "tree": {"sha": "712852ec9f32a4318eeee8b594c648687d10e54d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/712852ec9f32a4318eeee8b594c648687d10e54d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c27fb3a0cafd01a699e78a36e711c00b39468a65", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJd0EuWCRBK7hj4Ov3rIwAAdHIIAB3z8Or2HzQx+nKI/PlSV68y\naCO1e1tGZ4srrpm2fX8pPH4teH6qmRrSMbg4N7A+K60Gn/LFurIqRgxVl421rIdH\noMQs1WFrw/WGHS2aMw0B+4Gc4dntIXd9jqPHOjSntZ4CDkpFfHFrscRsg4Xm7HzA\nH2jilIpRWHp1zsHNKJXQInwaFGbcmXPxICiRoGQ+ApDxhcqfn+3Ugs6xbLOiMxqn\nfhpJ6NiwdONkkUzsaM0lLwBEezehFi6f+HOTTRtWH7HFlo6FBuZEEeXKWwD7hJZh\nS8Wo7/STJnOepvrxB27zoM+3DsznEO+WN/ALJFCYV0t5eyCCwiQRMnPDI5HUM4k=\n=K0t+\n-----END PGP SIGNATURE-----\n", "payload": "tree 712852ec9f32a4318eeee8b594c648687d10e54d\nparent 1adc3525873d2588987f2c29143536ce952d6ab2\nparent 42604c673d159edc1571732c6be1dc00a365b7be\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1573931926 +0000\ncommitter GitHub <noreply@github.com> 1573931926 +0000\n\nMerge #2279\n\n2279: Better factoring of macro expansion machinery in goto def r=matklad a=matklad\n\n\n\nCo-authored-by: Aleksey Kladov <aleksey.kladov@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c27fb3a0cafd01a699e78a36e711c00b39468a65", "html_url": "https://github.com/rust-lang/rust/commit/c27fb3a0cafd01a699e78a36e711c00b39468a65", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c27fb3a0cafd01a699e78a36e711c00b39468a65/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1adc3525873d2588987f2c29143536ce952d6ab2", "url": "https://api.github.com/repos/rust-lang/rust/commits/1adc3525873d2588987f2c29143536ce952d6ab2", "html_url": "https://github.com/rust-lang/rust/commit/1adc3525873d2588987f2c29143536ce952d6ab2"}, {"sha": "42604c673d159edc1571732c6be1dc00a365b7be", "url": "https://api.github.com/repos/rust-lang/rust/commits/42604c673d159edc1571732c6be1dc00a365b7be", "html_url": "https://github.com/rust-lang/rust/commit/42604c673d159edc1571732c6be1dc00a365b7be"}], "stats": {"total": 31, "additions": 20, "deletions": 11}, "files": [{"sha": "70baa294f96d5407f41fb848e9f4cc585760d86d", "filename": "crates/ra_ide_api/src/goto_definition.rs", "status": "modified", "additions": 20, "deletions": 11, "changes": 31, "blob_url": "https://github.com/rust-lang/rust/blob/c27fb3a0cafd01a699e78a36e711c00b39468a65/crates%2Fra_ide_api%2Fsrc%2Fgoto_definition.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c27fb3a0cafd01a699e78a36e711c00b39468a65/crates%2Fra_ide_api%2Fsrc%2Fgoto_definition.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fgoto_definition.rs?ref=c27fb3a0cafd01a699e78a36e711c00b39468a65", "patch": "@@ -1,5 +1,7 @@\n //! FIXME: write short doc here\n \n+use std::iter::successors;\n+\n use hir::{db::AstDatabase, Source};\n use ra_syntax::{\n     algo::find_node_at_offset,\n@@ -18,10 +20,8 @@ pub(crate) fn goto_definition(\n     db: &RootDatabase,\n     position: FilePosition,\n ) -> Option<RangeInfo<Vec<NavigationTarget>>> {\n-    go(db, Source::new(position.file_id.into(), position.offset))\n-}\n+    let offset = descend_into_macros(db, position);\n \n-fn go(db: &RootDatabase, offset: Source<TextUnit>) -> Option<RangeInfo<Vec<NavigationTarget>>> {\n     let syntax = db.parse_or_expand(offset.file_id)?;\n \n     if let Some(name_ref) = find_node_at_offset::<ast::NameRef>(&syntax, offset.ast) {\n@@ -32,16 +32,25 @@ fn go(db: &RootDatabase, offset: Source<TextUnit>) -> Option<RangeInfo<Vec<Navig\n         let navs = name_definition(db, offset.with_ast(&name))?;\n         return Some(RangeInfo::new(name.syntax().text_range(), navs));\n     }\n-    if let Some(macro_call) = find_node_at_offset::<ast::MacroCall>(&syntax, offset.ast) {\n+    None\n+}\n+\n+fn descend_into_macros(db: &RootDatabase, position: FilePosition) -> Source<TextUnit> {\n+    successors(Some(Source::new(position.file_id.into(), position.offset)), |offset| {\n+        let syntax = db.parse_or_expand(offset.file_id)?;\n+        let macro_call = find_node_at_offset::<ast::MacroCall>(&syntax, offset.ast)?;\n+        let tt = macro_call.token_tree()?;\n+        if !tt.syntax().text_range().contains(offset.ast) {\n+            return None;\n+        }\n         let source_analyzer =\n             hir::SourceAnalyzer::new(db, offset.with_ast(macro_call.syntax()), None);\n-        if let Some(exp) = source_analyzer.expand(db, &macro_call) {\n-            if let Some(offset) = exp.translate_offset(db, offset.ast) {\n-                return go(db, Source::new(exp.file_id(), offset));\n-            }\n-        }\n-    }\n-    None\n+        let exp = source_analyzer.expand(db, &macro_call)?;\n+        let next_offset = exp.translate_offset(db, offset.ast)?;\n+        Some(Source::new(exp.file_id(), next_offset))\n+    })\n+    .last()\n+    .unwrap()\n }\n \n #[derive(Debug)]"}]}