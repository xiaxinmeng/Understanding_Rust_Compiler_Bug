{"sha": "d9993cb133909eb17705cd9dc518c2c213fc779b", "node_id": "C_kwDOAAsO6NoAKGQ5OTkzY2IxMzM5MDllYjE3NzA1Y2Q5ZGM1MThjMmMyMTNmYzc3OWI", "commit": {"author": {"name": "Sosth\u00e8ne Gu\u00e9don", "email": "sosthene@guedon.gdn", "date": "2022-11-20T11:20:16Z"}, "committer": {"name": "Sosth\u00e8ne Gu\u00e9don", "email": "sosthene@guedon.gdn", "date": "2022-11-20T12:45:12Z"}, "message": "Remove error when fields use autoderef", "tree": {"sha": "bc02a90e426431a2c0289ff611adadc85598f09c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bc02a90e426431a2c0289ff611adadc85598f09c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d9993cb133909eb17705cd9dc518c2c213fc779b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d9993cb133909eb17705cd9dc518c2c213fc779b", "html_url": "https://github.com/rust-lang/rust/commit/d9993cb133909eb17705cd9dc518c2c213fc779b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d9993cb133909eb17705cd9dc518c2c213fc779b/comments", "author": {"login": "sgued", "id": 51865119, "node_id": "MDQ6VXNlcjUxODY1MTE5", "avatar_url": "https://avatars.githubusercontent.com/u/51865119?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sgued", "html_url": "https://github.com/sgued", "followers_url": "https://api.github.com/users/sgued/followers", "following_url": "https://api.github.com/users/sgued/following{/other_user}", "gists_url": "https://api.github.com/users/sgued/gists{/gist_id}", "starred_url": "https://api.github.com/users/sgued/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sgued/subscriptions", "organizations_url": "https://api.github.com/users/sgued/orgs", "repos_url": "https://api.github.com/users/sgued/repos", "events_url": "https://api.github.com/users/sgued/events{/privacy}", "received_events_url": "https://api.github.com/users/sgued/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sgued", "id": 51865119, "node_id": "MDQ6VXNlcjUxODY1MTE5", "avatar_url": "https://avatars.githubusercontent.com/u/51865119?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sgued", "html_url": "https://github.com/sgued", "followers_url": "https://api.github.com/users/sgued/followers", "following_url": "https://api.github.com/users/sgued/following{/other_user}", "gists_url": "https://api.github.com/users/sgued/gists{/gist_id}", "starred_url": "https://api.github.com/users/sgued/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sgued/subscriptions", "organizations_url": "https://api.github.com/users/sgued/orgs", "repos_url": "https://api.github.com/users/sgued/repos", "events_url": "https://api.github.com/users/sgued/events{/privacy}", "received_events_url": "https://api.github.com/users/sgued/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "77374a95272dfb8fcbc75cd074b4e61b1890c724", "url": "https://api.github.com/repos/rust-lang/rust/commits/77374a95272dfb8fcbc75cd074b4e61b1890c724", "html_url": "https://github.com/rust-lang/rust/commit/77374a95272dfb8fcbc75cd074b4e61b1890c724"}], "stats": {"total": 14, "additions": 6, "deletions": 8}, "files": [{"sha": "c553901059bb702deea21393b22969cf0ceca107", "filename": "clippy_lints/src/functions/misnamed_getters.rs", "status": "modified", "additions": 6, "deletions": 8, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/d9993cb133909eb17705cd9dc518c2c213fc779b/clippy_lints%2Fsrc%2Ffunctions%2Fmisnamed_getters.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d9993cb133909eb17705cd9dc518c2c213fc779b/clippy_lints%2Fsrc%2Ffunctions%2Fmisnamed_getters.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Ffunctions%2Fmisnamed_getters.rs?ref=d9993cb133909eb17705cd9dc518c2c213fc779b", "patch": "@@ -101,16 +101,14 @@ pub fn check_fn(\n     }\n \n     let Some(used_field) = used_field else {\n-            if cfg!(debug_assertions) {\n-                panic!(\"Struct doesn't contain the correct field\");\n-            } else {\n-                // Don't ICE when possible\n-                return;\n-            }\n-        };\n+        // FIXME: This can be reached if the field access uses autoderef.\n+        // `dec.all_fields()` should be replaced by something that uses autoderef.\n+        return;\n+    };\n+\n     let Some(correct_field) = correct_field else {\n             return;\n-        };\n+    };\n \n     if cx.tcx.type_of(used_field.did) == cx.tcx.type_of(correct_field.did) {\n         let left_span = block_expr.span.until(used_ident.span);"}]}