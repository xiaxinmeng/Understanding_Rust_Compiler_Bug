{"sha": "cfd32522c077d7ced0ce3386b00b9896680dbdb2", "node_id": "C_kwDOAAsO6NoAKGNmZDMyNTIyYzA3N2Q3Y2VkMGNlMzM4NmIwMGI5ODk2NjgwZGJkYjI", "commit": {"author": {"name": "Samuel E. Moelius III", "email": "sam@moeli.us", "date": "2022-02-28T09:59:33Z"}, "committer": {"name": "Samuel E. Moelius III", "email": "sam@moeli.us", "date": "2022-02-28T10:24:00Z"}, "message": "Add tests to tests/ui/unnecessary_filter_map.rs\n\nThe tests currently fail, and are fixed by the next commit.", "tree": {"sha": "a23ea2ecd5541f2fb8de3f61cb8bc5abbbbc4fa3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a23ea2ecd5541f2fb8de3f61cb8bc5abbbbc4fa3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cfd32522c077d7ced0ce3386b00b9896680dbdb2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cfd32522c077d7ced0ce3386b00b9896680dbdb2", "html_url": "https://github.com/rust-lang/rust/commit/cfd32522c077d7ced0ce3386b00b9896680dbdb2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cfd32522c077d7ced0ce3386b00b9896680dbdb2/comments", "author": {"login": "smoelius", "id": 35515885, "node_id": "MDQ6VXNlcjM1NTE1ODg1", "avatar_url": "https://avatars.githubusercontent.com/u/35515885?v=4", "gravatar_id": "", "url": "https://api.github.com/users/smoelius", "html_url": "https://github.com/smoelius", "followers_url": "https://api.github.com/users/smoelius/followers", "following_url": "https://api.github.com/users/smoelius/following{/other_user}", "gists_url": "https://api.github.com/users/smoelius/gists{/gist_id}", "starred_url": "https://api.github.com/users/smoelius/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/smoelius/subscriptions", "organizations_url": "https://api.github.com/users/smoelius/orgs", "repos_url": "https://api.github.com/users/smoelius/repos", "events_url": "https://api.github.com/users/smoelius/events{/privacy}", "received_events_url": "https://api.github.com/users/smoelius/received_events", "type": "User", "site_admin": false}, "committer": {"login": "smoelius", "id": 35515885, "node_id": "MDQ6VXNlcjM1NTE1ODg1", "avatar_url": "https://avatars.githubusercontent.com/u/35515885?v=4", "gravatar_id": "", "url": "https://api.github.com/users/smoelius", "html_url": "https://github.com/smoelius", "followers_url": "https://api.github.com/users/smoelius/followers", "following_url": "https://api.github.com/users/smoelius/following{/other_user}", "gists_url": "https://api.github.com/users/smoelius/gists{/gist_id}", "starred_url": "https://api.github.com/users/smoelius/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/smoelius/subscriptions", "organizations_url": "https://api.github.com/users/smoelius/orgs", "repos_url": "https://api.github.com/users/smoelius/repos", "events_url": "https://api.github.com/users/smoelius/events{/privacy}", "received_events_url": "https://api.github.com/users/smoelius/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8d12cd47790d1547a0d9bb8c592a3875666e26ca", "url": "https://api.github.com/repos/rust-lang/rust/commits/8d12cd47790d1547a0d9bb8c592a3875666e26ca", "html_url": "https://github.com/rust-lang/rust/commit/8d12cd47790d1547a0d9bb8c592a3875666e26ca"}], "stats": {"total": 137, "additions": 133, "deletions": 4}, "files": [{"sha": "8e01c2674f1671361fc691d9a34c91311ae9d495", "filename": "tests/ui/unnecessary_filter_map.rs", "status": "modified", "additions": 129, "deletions": 0, "changes": 129, "blob_url": "https://github.com/rust-lang/rust/blob/cfd32522c077d7ced0ce3386b00b9896680dbdb2/tests%2Fui%2Funnecessary_filter_map.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cfd32522c077d7ced0ce3386b00b9896680dbdb2/tests%2Fui%2Funnecessary_filter_map.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Funnecessary_filter_map.rs?ref=cfd32522c077d7ced0ce3386b00b9896680dbdb2", "patch": "@@ -1,3 +1,5 @@\n+#![allow(dead_code)]\n+\n fn main() {\n     let _ = (0..4).filter_map(|x| if x > 1 { Some(x) } else { None });\n     let _ = (0..4).filter_map(|x| {\n@@ -19,3 +21,130 @@ fn main() {\n fn filter_map_none_changes_item_type() -> impl Iterator<Item = bool> {\n     \"\".chars().filter_map(|_| None)\n }\n+\n+// https://github.com/rust-lang/rust-clippy/issues/4433#issue-483920107\n+mod comment_483920107 {\n+    enum Severity {\n+        Warning,\n+        Other,\n+    }\n+\n+    struct ServerError;\n+\n+    impl ServerError {\n+        fn severity(&self) -> Severity {\n+            Severity::Warning\n+        }\n+    }\n+\n+    struct S {\n+        warnings: Vec<ServerError>,\n+    }\n+\n+    impl S {\n+        fn foo(&mut self, server_errors: Vec<ServerError>) {\n+            #[allow(unused_variables)]\n+            let errors: Vec<ServerError> = server_errors\n+                .into_iter()\n+                .filter_map(|se| match se.severity() {\n+                    Severity::Warning => {\n+                        self.warnings.push(se);\n+                        None\n+                    },\n+                    _ => Some(se),\n+                })\n+                .collect();\n+        }\n+    }\n+}\n+\n+// https://github.com/rust-lang/rust-clippy/issues/4433#issuecomment-611006622\n+mod comment_611006622 {\n+    struct PendingRequest {\n+        reply_to: u8,\n+        token: u8,\n+        expires: u8,\n+        group_id: u8,\n+    }\n+\n+    enum Value {\n+        Null,\n+    }\n+\n+    struct Node;\n+\n+    impl Node {\n+        fn send_response(&self, _reply_to: u8, _token: u8, _value: Value) -> &Self {\n+            self\n+        }\n+        fn on_error_warn(&self) -> &Self {\n+            self\n+        }\n+    }\n+\n+    struct S {\n+        pending_requests: Vec<PendingRequest>,\n+    }\n+\n+    impl S {\n+        fn foo(&mut self, node: Node, now: u8, group_id: u8) {\n+            // \"drain_filter\"\n+            self.pending_requests = self\n+                .pending_requests\n+                .drain(..)\n+                .filter_map(|pending| {\n+                    if pending.expires <= now {\n+                        return None; // Expired, remove\n+                    }\n+\n+                    if pending.group_id == group_id {\n+                        // Matched - reuse strings and remove\n+                        node.send_response(pending.reply_to, pending.token, Value::Null)\n+                            .on_error_warn();\n+                        None\n+                    } else {\n+                        // Keep waiting\n+                        Some(pending)\n+                    }\n+                })\n+                .collect();\n+        }\n+    }\n+}\n+\n+// https://github.com/rust-lang/rust-clippy/issues/4433#issuecomment-621925270\n+// This extrapolation doesn't reproduce the false positive. Additional context seems necessary.\n+mod comment_621925270 {\n+    struct Signature(u8);\n+\n+    fn foo(sig_packets: impl Iterator<Item = Result<Signature, ()>>) -> impl Iterator<Item = u8> {\n+        sig_packets.filter_map(|res| match res {\n+            Ok(Signature(sig_packet)) => Some(sig_packet),\n+            _ => None,\n+        })\n+    }\n+}\n+\n+// https://github.com/rust-lang/rust-clippy/issues/4433#issuecomment-1052978898\n+mod comment_1052978898 {\n+    #![allow(clippy::redundant_closure)]\n+\n+    pub struct S(u8);\n+\n+    impl S {\n+        pub fn consume(self) {\n+            println!(\"yum\");\n+        }\n+    }\n+\n+    pub fn filter_owned() -> impl Iterator<Item = S> {\n+        (0..10).map(|i| S(i)).filter_map(|s| {\n+            if s.0 & 1 == 0 {\n+                s.consume();\n+                None\n+            } else {\n+                Some(s)\n+            }\n+        })\n+    }\n+}"}, {"sha": "5585b10ab903d1c606c5e6084ed448323f371566", "filename": "tests/ui/unnecessary_filter_map.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/cfd32522c077d7ced0ce3386b00b9896680dbdb2/tests%2Fui%2Funnecessary_filter_map.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/cfd32522c077d7ced0ce3386b00b9896680dbdb2/tests%2Fui%2Funnecessary_filter_map.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Funnecessary_filter_map.stderr?ref=cfd32522c077d7ced0ce3386b00b9896680dbdb2", "patch": "@@ -1,13 +1,13 @@\n error: this `.filter_map` can be written more simply using `.filter`\n-  --> $DIR/unnecessary_filter_map.rs:2:13\n+  --> $DIR/unnecessary_filter_map.rs:4:13\n    |\n LL |     let _ = (0..4).filter_map(|x| if x > 1 { Some(x) } else { None });\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: `-D clippy::unnecessary-filter-map` implied by `-D warnings`\n \n error: this `.filter_map` can be written more simply using `.filter`\n-  --> $DIR/unnecessary_filter_map.rs:3:13\n+  --> $DIR/unnecessary_filter_map.rs:5:13\n    |\n LL |       let _ = (0..4).filter_map(|x| {\n    |  _____________^\n@@ -19,7 +19,7 @@ LL | |     });\n    | |______^\n \n error: this `.filter_map` can be written more simply using `.filter`\n-  --> $DIR/unnecessary_filter_map.rs:9:13\n+  --> $DIR/unnecessary_filter_map.rs:11:13\n    |\n LL |       let _ = (0..4).filter_map(|x| match x {\n    |  _____________^\n@@ -29,7 +29,7 @@ LL | |     });\n    | |______^\n \n error: this `.filter_map` can be written more simply using `.map`\n-  --> $DIR/unnecessary_filter_map.rs:14:13\n+  --> $DIR/unnecessary_filter_map.rs:16:13\n    |\n LL |     let _ = (0..4).filter_map(|x| Some(x + 1));\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^"}]}