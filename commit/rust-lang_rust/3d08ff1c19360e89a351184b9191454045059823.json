{"sha": "3d08ff1c19360e89a351184b9191454045059823", "node_id": "C_kwDOAAsO6NoAKDNkMDhmZjFjMTkzNjBlODlhMzUxMTg0YjkxOTE0NTQwNDUwNTk4MjM", "commit": {"author": {"name": "Fabian Wolff", "email": "fabian.wolff@alumni.ethz.ch", "date": "2021-09-25T19:47:33Z"}, "committer": {"name": "Fabian Wolff", "email": "fabian.wolff@alumni.ethz.ch", "date": "2021-09-25T19:47:33Z"}, "message": "Fix incorrect disambiguation suggestion for associated items", "tree": {"sha": "24c3ddd7804ccebdb4f38234247ad48857c60ba8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/24c3ddd7804ccebdb4f38234247ad48857c60ba8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3d08ff1c19360e89a351184b9191454045059823", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3d08ff1c19360e89a351184b9191454045059823", "html_url": "https://github.com/rust-lang/rust/commit/3d08ff1c19360e89a351184b9191454045059823", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3d08ff1c19360e89a351184b9191454045059823/comments", "author": {"login": "FabianWolff", "id": 16052130, "node_id": "MDQ6VXNlcjE2MDUyMTMw", "avatar_url": "https://avatars.githubusercontent.com/u/16052130?v=4", "gravatar_id": "", "url": "https://api.github.com/users/FabianWolff", "html_url": "https://github.com/FabianWolff", "followers_url": "https://api.github.com/users/FabianWolff/followers", "following_url": "https://api.github.com/users/FabianWolff/following{/other_user}", "gists_url": "https://api.github.com/users/FabianWolff/gists{/gist_id}", "starred_url": "https://api.github.com/users/FabianWolff/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/FabianWolff/subscriptions", "organizations_url": "https://api.github.com/users/FabianWolff/orgs", "repos_url": "https://api.github.com/users/FabianWolff/repos", "events_url": "https://api.github.com/users/FabianWolff/events{/privacy}", "received_events_url": "https://api.github.com/users/FabianWolff/received_events", "type": "User", "site_admin": false}, "committer": {"login": "FabianWolff", "id": 16052130, "node_id": "MDQ6VXNlcjE2MDUyMTMw", "avatar_url": "https://avatars.githubusercontent.com/u/16052130?v=4", "gravatar_id": "", "url": "https://api.github.com/users/FabianWolff", "html_url": "https://github.com/FabianWolff", "followers_url": "https://api.github.com/users/FabianWolff/followers", "following_url": "https://api.github.com/users/FabianWolff/following{/other_user}", "gists_url": "https://api.github.com/users/FabianWolff/gists{/gist_id}", "starred_url": "https://api.github.com/users/FabianWolff/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/FabianWolff/subscriptions", "organizations_url": "https://api.github.com/users/FabianWolff/orgs", "repos_url": "https://api.github.com/users/FabianWolff/repos", "events_url": "https://api.github.com/users/FabianWolff/events{/privacy}", "received_events_url": "https://api.github.com/users/FabianWolff/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a0648eab3686f100c7ab9b0d38472c740079cce4", "url": "https://api.github.com/repos/rust-lang/rust/commits/a0648eab3686f100c7ab9b0d38472c740079cce4", "html_url": "https://github.com/rust-lang/rust/commit/a0648eab3686f100c7ab9b0d38472c740079cce4"}], "stats": {"total": 48, "additions": 28, "deletions": 20}, "files": [{"sha": "4ca326e3a396c82456c3d555484950c661ae9f63", "filename": "compiler/rustc_typeck/src/check/method/suggest.rs", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/3d08ff1c19360e89a351184b9191454045059823/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fmethod%2Fsuggest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3d08ff1c19360e89a351184b9191454045059823/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fmethod%2Fsuggest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fmethod%2Fsuggest.rs?ref=3d08ff1c19360e89a351184b9191454045059823", "patch": "@@ -178,6 +178,7 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n                                 sugg_span,\n                                 idx,\n                                 self.tcx.sess.source_map(),\n+                                item.fn_has_self_parameter,\n                             );\n                         }\n                     }\n@@ -220,6 +221,7 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n                             sugg_span,\n                             idx,\n                             self.tcx.sess.source_map(),\n+                            item.fn_has_self_parameter,\n                         );\n                     }\n                 }\n@@ -1738,6 +1740,7 @@ fn print_disambiguation_help(\n     span: Span,\n     candidate: Option<usize>,\n     source_map: &source_map::SourceMap,\n+    fn_has_self_parameter: bool,\n ) {\n     let mut applicability = Applicability::MachineApplicable;\n     let (span, sugg) = if let (ty::AssocKind::Fn, Some(args)) = (kind, args) {\n@@ -1756,9 +1759,14 @@ fn print_disambiguation_help(\n                 .collect::<Vec<_>>()\n                 .join(\", \"),\n         );\n+        let trait_name = if !fn_has_self_parameter {\n+            format!(\"<{} as {}>\", rcvr_ty, trait_name)\n+        } else {\n+            trait_name\n+        };\n         (span, format!(\"{}::{}{}\", trait_name, item_name, args))\n     } else {\n-        (span.with_hi(item_name.span.lo()), format!(\"{}::\", trait_name))\n+        (span.with_hi(item_name.span.lo()), format!(\"<{} as {}>::\", rcvr_ty, trait_name))\n     };\n     err.span_suggestion_verbose(\n         span,"}, {"sha": "60cf9a533cd72cb1aa8884fdafec6e6e7ac06cfc", "filename": "src/test/ui/associated-consts/associated-const-ambiguity-report.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/3d08ff1c19360e89a351184b9191454045059823/src%2Ftest%2Fui%2Fassociated-consts%2Fassociated-const-ambiguity-report.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/3d08ff1c19360e89a351184b9191454045059823/src%2Ftest%2Fui%2Fassociated-consts%2Fassociated-const-ambiguity-report.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fassociated-consts%2Fassociated-const-ambiguity-report.stderr?ref=3d08ff1c19360e89a351184b9191454045059823", "patch": "@@ -16,12 +16,12 @@ LL |     const ID: i32 = 3;\n    |     ^^^^^^^^^^^^^^^^^^\n help: disambiguate the associated constant for candidate #1\n    |\n-LL | const X: i32 = Foo::ID;\n-   |                ~~~~~\n+LL | const X: i32 = <i32 as Foo>::ID;\n+   |                ~~~~~~~~~~~~~~\n help: disambiguate the associated constant for candidate #2\n    |\n-LL | const X: i32 = Bar::ID;\n-   |                ~~~~~\n+LL | const X: i32 = <i32 as Bar>::ID;\n+   |                ~~~~~~~~~~~~~~\n \n error: aborting due to previous error\n "}, {"sha": "e296217026570208b02c4531fab814979ab02640", "filename": "src/test/ui/error-codes/E0034.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/3d08ff1c19360e89a351184b9191454045059823/src%2Ftest%2Fui%2Ferror-codes%2FE0034.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/3d08ff1c19360e89a351184b9191454045059823/src%2Ftest%2Fui%2Ferror-codes%2FE0034.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ferror-codes%2FE0034.stderr?ref=3d08ff1c19360e89a351184b9191454045059823", "patch": "@@ -16,12 +16,12 @@ LL |     fn foo() {}\n    |     ^^^^^^^^\n help: disambiguate the associated function for candidate #1\n    |\n-LL |     Trait1::foo()\n-   |     ~~~~~~~~\n+LL |     <Test as Trait1>::foo()\n+   |     ~~~~~~~~~~~~~~~~~~\n help: disambiguate the associated function for candidate #2\n    |\n-LL |     Trait2::foo()\n-   |     ~~~~~~~~\n+LL |     <Test as Trait2>::foo()\n+   |     ~~~~~~~~~~~~~~~~~~\n \n error: aborting due to previous error\n "}, {"sha": "4ba778e0ef7256fa8eb5947a131d53754da067dd", "filename": "src/test/ui/methods/method-ambig-two-traits-from-impls2.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/3d08ff1c19360e89a351184b9191454045059823/src%2Ftest%2Fui%2Fmethods%2Fmethod-ambig-two-traits-from-impls2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/3d08ff1c19360e89a351184b9191454045059823/src%2Ftest%2Fui%2Fmethods%2Fmethod-ambig-two-traits-from-impls2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmethods%2Fmethod-ambig-two-traits-from-impls2.stderr?ref=3d08ff1c19360e89a351184b9191454045059823", "patch": "@@ -16,12 +16,12 @@ LL |     fn foo() {}\n    |     ^^^^^^^^\n help: disambiguate the associated function for candidate #1\n    |\n-LL |     A::foo();\n-   |     ~~~\n+LL |     <AB as A>::foo();\n+   |     ~~~~~~~~~~~\n help: disambiguate the associated function for candidate #2\n    |\n-LL |     B::foo();\n-   |     ~~~\n+LL |     <AB as B>::foo();\n+   |     ~~~~~~~~~~~\n \n error: aborting due to previous error\n "}, {"sha": "783f5aca4174681a49181bed9bc80f0f35c32bab", "filename": "src/test/ui/span/issue-7575.stderr", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/3d08ff1c19360e89a351184b9191454045059823/src%2Ftest%2Fui%2Fspan%2Fissue-7575.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/3d08ff1c19360e89a351184b9191454045059823/src%2Ftest%2Fui%2Fspan%2Fissue-7575.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspan%2Fissue-7575.stderr?ref=3d08ff1c19360e89a351184b9191454045059823", "patch": "@@ -27,16 +27,16 @@ LL |     fn f9(_: usize) -> usize;\n            candidate #3: `UnusedTrait`\n help: disambiguate the associated function for candidate #1\n    |\n-LL |     u.f8(42) + CtxtFn::f9(u, 342) + m.fff(42)\n-   |                ~~~~~~~~~~~~~~~~~~\n+LL |     u.f8(42) + <usize as CtxtFn>::f9(u, 342) + m.fff(42)\n+   |                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n help: disambiguate the associated function for candidate #2\n    |\n-LL |     u.f8(42) + OtherTrait::f9(u, 342) + m.fff(42)\n-   |                ~~~~~~~~~~~~~~~~~~~~~~\n+LL |     u.f8(42) + <usize as OtherTrait>::f9(u, 342) + m.fff(42)\n+   |                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n help: disambiguate the associated function for candidate #3\n    |\n-LL |     u.f8(42) + UnusedTrait::f9(u, 342) + m.fff(42)\n-   |                ~~~~~~~~~~~~~~~~~~~~~~~\n+LL |     u.f8(42) + <usize as UnusedTrait>::f9(u, 342) + m.fff(42)\n+   |                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n \n error[E0599]: no method named `fff` found for struct `Myisize` in the current scope\n   --> $DIR/issue-7575.rs:62:30\n@@ -72,7 +72,7 @@ LL |     fn is_str() -> bool {\n    = help: items from traits can only be used if the type parameter is bounded by the trait\n help: disambiguate the associated function for the candidate\n    |\n-LL |     ManyImplTrait::is_str(t)\n+LL |     <T as ManyImplTrait>::is_str(t)\n    |\n \n error: aborting due to 3 previous errors"}]}