{"sha": "4e8b8707bf3a0af3f2c08a6dd64c5155ace7a765", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRlOGI4NzA3YmYzYTBhZjNmMmMwOGE2ZGQ2NGM1MTU1YWNlN2E3NjU=", "commit": {"author": {"name": "Simon Sapin", "email": "simon.sapin@exyr.org", "date": "2015-10-29T16:00:39Z"}, "committer": {"name": "Simon Sapin", "email": "simon.sapin@exyr.org", "date": "2015-10-29T16:00:39Z"}, "message": "Typo fix\n\n\u2026 I think.", "tree": {"sha": "f9201b23f76b983581a8f210ad4e1e03c508087b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f9201b23f76b983581a8f210ad4e1e03c508087b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4e8b8707bf3a0af3f2c08a6dd64c5155ace7a765", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4e8b8707bf3a0af3f2c08a6dd64c5155ace7a765", "html_url": "https://github.com/rust-lang/rust/commit/4e8b8707bf3a0af3f2c08a6dd64c5155ace7a765", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4e8b8707bf3a0af3f2c08a6dd64c5155ace7a765/comments", "author": {"login": "SimonSapin", "id": 291359, "node_id": "MDQ6VXNlcjI5MTM1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/291359?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SimonSapin", "html_url": "https://github.com/SimonSapin", "followers_url": "https://api.github.com/users/SimonSapin/followers", "following_url": "https://api.github.com/users/SimonSapin/following{/other_user}", "gists_url": "https://api.github.com/users/SimonSapin/gists{/gist_id}", "starred_url": "https://api.github.com/users/SimonSapin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SimonSapin/subscriptions", "organizations_url": "https://api.github.com/users/SimonSapin/orgs", "repos_url": "https://api.github.com/users/SimonSapin/repos", "events_url": "https://api.github.com/users/SimonSapin/events{/privacy}", "received_events_url": "https://api.github.com/users/SimonSapin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "SimonSapin", "id": 291359, "node_id": "MDQ6VXNlcjI5MTM1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/291359?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SimonSapin", "html_url": "https://github.com/SimonSapin", "followers_url": "https://api.github.com/users/SimonSapin/followers", "following_url": "https://api.github.com/users/SimonSapin/following{/other_user}", "gists_url": "https://api.github.com/users/SimonSapin/gists{/gist_id}", "starred_url": "https://api.github.com/users/SimonSapin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SimonSapin/subscriptions", "organizations_url": "https://api.github.com/users/SimonSapin/orgs", "repos_url": "https://api.github.com/users/SimonSapin/repos", "events_url": "https://api.github.com/users/SimonSapin/events{/privacy}", "received_events_url": "https://api.github.com/users/SimonSapin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "01fd4d622746f03334a6543c1476e5e65712b1cc", "url": "https://api.github.com/repos/rust-lang/rust/commits/01fd4d622746f03334a6543c1476e5e65712b1cc", "html_url": "https://github.com/rust-lang/rust/commit/01fd4d622746f03334a6543c1476e5e65712b1cc"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "eef8f3e94e07da14ff42a6f73f3c7da85fffb835", "filename": "src/liballoc/raw_vec.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4e8b8707bf3a0af3f2c08a6dd64c5155ace7a765/src%2Fliballoc%2Fraw_vec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4e8b8707bf3a0af3f2c08a6dd64c5155ace7a765/src%2Fliballoc%2Fraw_vec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Fraw_vec.rs?ref=4e8b8707bf3a0af3f2c08a6dd64c5155ace7a765", "patch": "@@ -354,7 +354,7 @@ impl<T> RawVec<T> {\n             // panic.\n \n             // Don't actually need any more capacity.\n-            // Wrapping in case they give a bas `used_cap`\n+            // Wrapping in case they give a bad `used_cap`\n             if self.cap().wrapping_sub(used_cap) >= needed_extra_cap {\n                 return;\n             }"}]}