{"sha": "5efdde0de161a5b374e16e20d09322e5a0eba4f9", "node_id": "MDY6Q29tbWl0NzI0NzEyOjVlZmRkZTBkZTE2MWE1YjM3NGUxNmUyMGQwOTMyMmU1YTBlYmE0Zjk=", "commit": {"author": {"name": "Eduard Burtescu", "email": "edy.burt@gmail.com", "date": "2016-03-22T15:30:57Z"}, "committer": {"name": "Eduard Burtescu", "email": "edy.burt@gmail.com", "date": "2016-03-26T23:05:54Z"}, "message": "rustc: move cfg, infer, traits and ty from middle to top-level.", "tree": {"sha": "fc3b089bc6dc81fc25e5bf2db992e8d0e20d7ebc", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fc3b089bc6dc81fc25e5bf2db992e8d0e20d7ebc"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5efdde0de161a5b374e16e20d09322e5a0eba4f9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5efdde0de161a5b374e16e20d09322e5a0eba4f9", "html_url": "https://github.com/rust-lang/rust/commit/5efdde0de161a5b374e16e20d09322e5a0eba4f9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5efdde0de161a5b374e16e20d09322e5a0eba4f9/comments", "author": {"login": "eddyb", "id": 77424, "node_id": "MDQ6VXNlcjc3NDI0", "avatar_url": "https://avatars.githubusercontent.com/u/77424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eddyb", "html_url": "https://github.com/eddyb", "followers_url": "https://api.github.com/users/eddyb/followers", "following_url": "https://api.github.com/users/eddyb/following{/other_user}", "gists_url": "https://api.github.com/users/eddyb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eddyb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eddyb/subscriptions", "organizations_url": "https://api.github.com/users/eddyb/orgs", "repos_url": "https://api.github.com/users/eddyb/repos", "events_url": "https://api.github.com/users/eddyb/events{/privacy}", "received_events_url": "https://api.github.com/users/eddyb/received_events", "type": "User", "site_admin": false}, "committer": {"login": "eddyb", "id": 77424, "node_id": "MDQ6VXNlcjc3NDI0", "avatar_url": "https://avatars.githubusercontent.com/u/77424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eddyb", "html_url": "https://github.com/eddyb", "followers_url": "https://api.github.com/users/eddyb/followers", "following_url": "https://api.github.com/users/eddyb/following{/other_user}", "gists_url": "https://api.github.com/users/eddyb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eddyb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eddyb/subscriptions", "organizations_url": "https://api.github.com/users/eddyb/orgs", "repos_url": "https://api.github.com/users/eddyb/repos", "events_url": "https://api.github.com/users/eddyb/events{/privacy}", "received_events_url": "https://api.github.com/users/eddyb/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5647586ed362d110a172b405ee381db5d739a480", "url": "https://api.github.com/repos/rust-lang/rust/commits/5647586ed362d110a172b405ee381db5d739a480", "html_url": "https://github.com/rust-lang/rust/commit/5647586ed362d110a172b405ee381db5d739a480"}], "stats": {"total": 1234, "additions": 617, "deletions": 617}, "files": [{"sha": "e75625f7fae42b251a8439002e98c2b7cf53d3f6", "filename": "src/librustc/cfg/construct.rs", "status": "renamed", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc%2Fcfg%2Fconstruct.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc%2Fcfg%2Fconstruct.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fcfg%2Fconstruct.rs?ref=5efdde0de161a5b374e16e20d09322e5a0eba4f9", "patch": "@@ -9,10 +9,10 @@\n // except according to those terms.\n \n use rustc_data_structures::graph;\n-use middle::cfg::*;\n+use cfg::*;\n use middle::def::Def;\n use middle::pat_util;\n-use middle::ty::{self, TyCtxt};\n+use ty::{self, TyCtxt};\n use syntax::ast;\n use syntax::ptr::P;\n ", "previous_filename": "src/librustc/middle/cfg/construct.rs"}, {"sha": "c867ec94b2510b5ead371f551c27de5a9d6264f1", "filename": "src/librustc/cfg/graphviz.rs", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc%2Fcfg%2Fgraphviz.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc%2Fcfg%2Fgraphviz.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fcfg%2Fgraphviz.rs?ref=5efdde0de161a5b374e16e20d09322e5a0eba4f9", "patch": "@@ -18,7 +18,7 @@ use graphviz::IntoCow;\n use syntax::ast;\n \n use front::map as ast_map;\n-use middle::cfg;\n+use cfg;\n \n pub type Node<'a> = (cfg::CFGIndex, &'a cfg::CFGNode);\n pub type Edge<'a> = &'a cfg::CFGEdge;", "previous_filename": "src/librustc/middle/cfg/graphviz.rs"}, {"sha": "8df4dc5fce5960a4f27ecc5a147967ac5951692a", "filename": "src/librustc/cfg/mod.rs", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc%2Fcfg%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc%2Fcfg%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fcfg%2Fmod.rs?ref=5efdde0de161a5b374e16e20d09322e5a0eba4f9", "patch": "@@ -12,7 +12,7 @@\n //! Uses `Graph` as the underlying representation.\n \n use rustc_data_structures::graph;\n-use middle::ty::TyCtxt;\n+use ty::TyCtxt;\n use syntax::ast;\n use rustc_front::hir;\n ", "previous_filename": "src/librustc/middle/cfg/mod.rs"}, {"sha": "731c33868dfbf1f9b7b4c8f2e895472d074c1d5c", "filename": "src/librustc/dep_graph/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc%2Fdep_graph%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc%2Fdep_graph%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fdep_graph%2Fmod.rs?ref=5efdde0de161a5b374e16e20d09322e5a0eba4f9", "patch": "@@ -11,7 +11,7 @@\n use self::thread::{DepGraphThreadData, DepMessage};\n use middle::def_id::DefId;\n use syntax::ast::NodeId;\n-use middle::ty::TyCtxt;\n+use ty::TyCtxt;\n use rustc_front::hir;\n use rustc_front::intravisit::Visitor;\n use std::rc::Rc;"}, {"sha": "c835189820e5140aa02ddf5c060d14d4244f2b0c", "filename": "src/librustc/infer/README.md", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc%2Finfer%2FREADME.md", "raw_url": "https://github.com/rust-lang/rust/raw/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc%2Finfer%2FREADME.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Finfer%2FREADME.md?ref=5efdde0de161a5b374e16e20d09322e5a0eba4f9", "previous_filename": "src/librustc/middle/infer/README.md"}, {"sha": "a9ea395e6b3cd877dbfc6b8e515f0293b8af147d", "filename": "src/librustc/infer/bivariate.rs", "status": "renamed", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc%2Finfer%2Fbivariate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc%2Finfer%2Fbivariate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Finfer%2Fbivariate.rs?ref=5efdde0de161a5b374e16e20d09322e5a0eba4f9", "patch": "@@ -28,9 +28,9 @@\n use super::combine::{self, CombineFields};\n use super::type_variable::{BiTo};\n \n-use middle::ty::{self, Ty, TyCtxt};\n-use middle::ty::TyVar;\n-use middle::ty::relate::{Relate, RelateResult, TypeRelation};\n+use ty::{self, Ty, TyCtxt};\n+use ty::TyVar;\n+use ty::relate::{Relate, RelateResult, TypeRelation};\n \n pub struct Bivariate<'a, 'tcx: 'a> {\n     fields: CombineFields<'a, 'tcx>", "previous_filename": "src/librustc/middle/infer/bivariate.rs"}, {"sha": "2b30698882d62695504d6f953f1550ef297ab8f8", "filename": "src/librustc/infer/combine.rs", "status": "renamed", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc%2Finfer%2Fcombine.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc%2Finfer%2Fcombine.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Finfer%2Fcombine.rs?ref=5efdde0de161a5b374e16e20d09322e5a0eba4f9", "patch": "@@ -41,11 +41,11 @@ use super::{InferCtxt};\n use super::{MiscVariable, TypeTrace};\n use super::type_variable::{RelationDir, BiTo, EqTo, SubtypeOf, SupertypeOf};\n \n-use middle::ty::{IntType, UintType};\n-use middle::ty::{self, Ty, TyCtxt};\n-use middle::ty::error::TypeError;\n-use middle::ty::fold::{TypeFolder, TypeFoldable};\n-use middle::ty::relate::{Relate, RelateResult, TypeRelation};\n+use ty::{IntType, UintType};\n+use ty::{self, Ty, TyCtxt};\n+use ty::error::TypeError;\n+use ty::fold::{TypeFolder, TypeFoldable};\n+use ty::relate::{Relate, RelateResult, TypeRelation};\n \n use syntax::ast;\n use syntax::codemap::Span;", "previous_filename": "src/librustc/middle/infer/combine.rs"}, {"sha": "3c9c9c5788414f2b87353d0d7f5115cd6070eda7", "filename": "src/librustc/infer/equate.rs", "status": "renamed", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc%2Finfer%2Fequate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc%2Finfer%2Fequate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Finfer%2Fequate.rs?ref=5efdde0de161a5b374e16e20d09322e5a0eba4f9", "patch": "@@ -13,9 +13,9 @@ use super::higher_ranked::HigherRankedRelations;\n use super::{Subtype};\n use super::type_variable::{EqTo};\n \n-use middle::ty::{self, Ty, TyCtxt};\n-use middle::ty::TyVar;\n-use middle::ty::relate::{Relate, RelateResult, TypeRelation};\n+use ty::{self, Ty, TyCtxt};\n+use ty::TyVar;\n+use ty::relate::{Relate, RelateResult, TypeRelation};\n \n /// Ensures `a` is made equal to `b`. Returns `a` on success.\n pub struct Equate<'a, 'tcx: 'a> {", "previous_filename": "src/librustc/middle/infer/equate.rs"}, {"sha": "20c0134414484080fafaa9cb8764efcb560814d9", "filename": "src/librustc/infer/error_reporting.rs", "status": "renamed", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc%2Finfer%2Ferror_reporting.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc%2Finfer%2Ferror_reporting.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Finfer%2Ferror_reporting.rs?ref=5efdde0de161a5b374e16e20d09322e5a0eba4f9", "patch": "@@ -80,12 +80,12 @@ use rustc_front::print::pprust;\n use middle::cstore::CrateStore;\n use middle::def::Def;\n use middle::def_id::DefId;\n-use middle::infer::{self, TypeOrigin};\n+use infer::{self, TypeOrigin};\n use middle::region;\n-use middle::ty::subst;\n-use middle::ty::{self, Ty, TyCtxt, TypeFoldable};\n-use middle::ty::{Region, ReFree};\n-use middle::ty::error::TypeError;\n+use ty::subst;\n+use ty::{self, Ty, TyCtxt, TypeFoldable};\n+use ty::{Region, ReFree};\n+use ty::error::TypeError;\n \n use std::cell::{Cell, RefCell};\n use std::char::from_u32;", "previous_filename": "src/librustc/middle/infer/error_reporting.rs"}, {"sha": "352733a595da6fadc87ff0b5861a24df7f15c876", "filename": "src/librustc/infer/freshen.rs", "status": "renamed", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc%2Finfer%2Ffreshen.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc%2Finfer%2Ffreshen.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Finfer%2Ffreshen.rs?ref=5efdde0de161a5b374e16e20d09322e5a0eba4f9", "patch": "@@ -30,8 +30,8 @@\n //! variable only once, and it does so as soon as it can, so it is reasonable to ask what the type\n //! inferencer knows \"so far\".\n \n-use middle::ty::{self, Ty, TyCtxt, TypeFoldable};\n-use middle::ty::fold::TypeFolder;\n+use ty::{self, Ty, TyCtxt, TypeFoldable};\n+use ty::fold::TypeFolder;\n use std::collections::hash_map::{self, Entry};\n \n use super::InferCtxt;", "previous_filename": "src/librustc/middle/infer/freshen.rs"}, {"sha": "235428a6898a97347b5e861e33fafb0fb3782c48", "filename": "src/librustc/infer/glb.rs", "status": "renamed", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc%2Finfer%2Fglb.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc%2Finfer%2Fglb.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Finfer%2Fglb.rs?ref=5efdde0de161a5b374e16e20d09322e5a0eba4f9", "patch": "@@ -14,8 +14,8 @@ use super::InferCtxt;\n use super::lattice::{self, LatticeDir};\n use super::Subtype;\n \n-use middle::ty::{self, Ty, TyCtxt};\n-use middle::ty::relate::{Relate, RelateResult, TypeRelation};\n+use ty::{self, Ty, TyCtxt};\n+use ty::relate::{Relate, RelateResult, TypeRelation};\n \n /// \"Greatest lower bound\" (common subtype)\n pub struct Glb<'a, 'tcx: 'a> {", "previous_filename": "src/librustc/middle/infer/glb.rs"}, {"sha": "57665b6d9392348833f973f4502273dc1d448608", "filename": "src/librustc/infer/higher_ranked/README.md", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc%2Finfer%2Fhigher_ranked%2FREADME.md", "raw_url": "https://github.com/rust-lang/rust/raw/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc%2Finfer%2Fhigher_ranked%2FREADME.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Finfer%2Fhigher_ranked%2FREADME.md?ref=5efdde0de161a5b374e16e20d09322e5a0eba4f9", "previous_filename": "src/librustc/middle/infer/higher_ranked/README.md"}, {"sha": "db4ee17bafbbdf47f94e6684016fcc6cdabad977", "filename": "src/librustc/infer/higher_ranked/mod.rs", "status": "renamed", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc%2Finfer%2Fhigher_ranked%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc%2Finfer%2Fhigher_ranked%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Finfer%2Fhigher_ranked%2Fmod.rs?ref=5efdde0de161a5b374e16e20d09322e5a0eba4f9", "patch": "@@ -14,9 +14,9 @@\n use super::{CombinedSnapshot, InferCtxt, HigherRankedType, SkolemizationMap};\n use super::combine::CombineFields;\n \n-use middle::ty::{self, TyCtxt, Binder, TypeFoldable};\n-use middle::ty::error::TypeError;\n-use middle::ty::relate::{Relate, RelateResult, TypeRelation};\n+use ty::{self, TyCtxt, Binder, TypeFoldable};\n+use ty::error::TypeError;\n+use ty::relate::{Relate, RelateResult, TypeRelation};\n use syntax::codemap::Span;\n use util::nodemap::{FnvHashMap, FnvHashSet};\n ", "previous_filename": "src/librustc/middle/infer/higher_ranked/mod.rs"}, {"sha": "17ad32e742e022799ab8836c1248a794fed428fc", "filename": "src/librustc/infer/lattice.rs", "status": "renamed", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc%2Finfer%2Flattice.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc%2Finfer%2Flattice.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Finfer%2Flattice.rs?ref=5efdde0de161a5b374e16e20d09322e5a0eba4f9", "patch": "@@ -32,9 +32,9 @@\n use super::combine;\n use super::InferCtxt;\n \n-use middle::ty::TyVar;\n-use middle::ty::{self, Ty};\n-use middle::ty::relate::{RelateResult, TypeRelation};\n+use ty::TyVar;\n+use ty::{self, Ty};\n+use ty::relate::{RelateResult, TypeRelation};\n \n pub trait LatticeDir<'f,'tcx> : TypeRelation<'f,'tcx> {\n     fn infcx(&self) -> &'f InferCtxt<'f, 'tcx>;", "previous_filename": "src/librustc/middle/infer/lattice.rs"}, {"sha": "00b85929b4b15da6735b466e5559188408eab479", "filename": "src/librustc/infer/lub.rs", "status": "renamed", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc%2Finfer%2Flub.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc%2Finfer%2Flub.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Finfer%2Flub.rs?ref=5efdde0de161a5b374e16e20d09322e5a0eba4f9", "patch": "@@ -14,8 +14,8 @@ use super::InferCtxt;\n use super::lattice::{self, LatticeDir};\n use super::Subtype;\n \n-use middle::ty::{self, Ty, TyCtxt};\n-use middle::ty::relate::{Relate, RelateResult, TypeRelation};\n+use ty::{self, Ty, TyCtxt};\n+use ty::relate::{Relate, RelateResult, TypeRelation};\n \n /// \"Least upper bound\" (common supertype)\n pub struct Lub<'a, 'tcx: 'a> {", "previous_filename": "src/librustc/middle/infer/lub.rs"}, {"sha": "bc4c9fd2ccfcf8f8708cc4998ff899e131977b7c", "filename": "src/librustc/infer/mod.rs", "status": "renamed", "additions": 13, "deletions": 13, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc%2Finfer%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc%2Finfer%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Finfer%2Fmod.rs?ref=5efdde0de161a5b374e16e20d09322e5a0eba4f9", "patch": "@@ -14,7 +14,7 @@ pub use self::LateBoundRegionConversionTime::*;\n pub use self::RegionVariableOrigin::*;\n pub use self::SubregionOrigin::*;\n pub use self::ValuePairs::*;\n-pub use middle::ty::IntVarValue;\n+pub use ty::IntVarValue;\n pub use self::freshen::TypeFreshener;\n pub use self::region_inference::{GenericKind, VerifyBound};\n \n@@ -24,16 +24,16 @@ use middle::free_region::FreeRegionMap;\n use middle::mem_categorization as mc;\n use middle::mem_categorization::McResult;\n use middle::region::CodeExtent;\n-use middle::ty::subst;\n-use middle::ty::subst::Substs;\n-use middle::ty::subst::Subst;\n-use middle::traits::{self, ProjectionMode};\n-use middle::ty::adjustment;\n-use middle::ty::{TyVid, IntVid, FloatVid};\n-use middle::ty::{self, Ty, TyCtxt};\n-use middle::ty::error::{ExpectedFound, TypeError, UnconstrainedNumeric};\n-use middle::ty::fold::{TypeFolder, TypeFoldable};\n-use middle::ty::relate::{Relate, RelateResult, TypeRelation};\n+use ty::subst;\n+use ty::subst::Substs;\n+use ty::subst::Subst;\n+use traits::{self, ProjectionMode};\n+use ty::adjustment;\n+use ty::{TyVid, IntVid, FloatVid};\n+use ty::{self, Ty, TyCtxt};\n+use ty::error::{ExpectedFound, TypeError, UnconstrainedNumeric};\n+use ty::fold::{TypeFolder, TypeFoldable};\n+use ty::relate::{Relate, RelateResult, TypeRelation};\n use rustc_data_structures::unify::{self, UnificationTable};\n use std::cell::{RefCell, Ref};\n use std::fmt;\n@@ -622,8 +622,8 @@ impl<'a, 'tcx> InferCtxt<'a, 'tcx> {\n     }\n \n     pub fn type_is_unconstrained_numeric(&'a self, ty: Ty) -> UnconstrainedNumeric {\n-        use middle::ty::error::UnconstrainedNumeric::Neither;\n-        use middle::ty::error::UnconstrainedNumeric::{UnconstrainedInt, UnconstrainedFloat};\n+        use ty::error::UnconstrainedNumeric::Neither;\n+        use ty::error::UnconstrainedNumeric::{UnconstrainedInt, UnconstrainedFloat};\n         match ty.sty {\n             ty::TyInfer(ty::IntVar(vid)) => {\n                 if self.int_unification_table.borrow_mut().has_value(vid) {", "previous_filename": "src/librustc/middle/infer/mod.rs"}, {"sha": "80da861139b42fd9acc50f686746219a5f091c4a", "filename": "src/librustc/infer/region_inference/README.md", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc%2Finfer%2Fregion_inference%2FREADME.md", "raw_url": "https://github.com/rust-lang/rust/raw/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc%2Finfer%2Fregion_inference%2FREADME.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Finfer%2Fregion_inference%2FREADME.md?ref=5efdde0de161a5b374e16e20d09322e5a0eba4f9", "previous_filename": "src/librustc/middle/infer/region_inference/README.md"}, {"sha": "e561f4a3548912db882a70baaa8bdb5bcca004f6", "filename": "src/librustc/infer/region_inference/graphviz.rs", "status": "renamed", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc%2Finfer%2Fregion_inference%2Fgraphviz.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc%2Finfer%2Fregion_inference%2Fgraphviz.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Finfer%2Fregion_inference%2Fgraphviz.rs?ref=5efdde0de161a5b374e16e20d09322e5a0eba4f9", "patch": "@@ -18,11 +18,11 @@\n /// For clarity, rename the graphviz crate locally to dot.\n use graphviz as dot;\n \n-use middle::ty::{self, TyCtxt};\n+use ty::{self, TyCtxt};\n use middle::region::CodeExtent;\n use super::Constraint;\n-use middle::infer::SubregionOrigin;\n-use middle::infer::region_inference::RegionVarBindings;\n+use infer::SubregionOrigin;\n+use infer::region_inference::RegionVarBindings;\n use util::nodemap::{FnvHashMap, FnvHashSet};\n \n use std::borrow::Cow;", "previous_filename": "src/librustc/middle/infer/region_inference/graphviz.rs"}, {"sha": "2b74dcb40c4a3b543c9330c96a1557a7b98e0e21", "filename": "src/librustc/infer/region_inference/mod.rs", "status": "renamed", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc%2Finfer%2Fregion_inference%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc%2Finfer%2Fregion_inference%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Finfer%2Fregion_inference%2Fmod.rs?ref=5efdde0de161a5b374e16e20d09322e5a0eba4f9", "patch": "@@ -23,10 +23,10 @@ use super::unify_key;\n use rustc_data_structures::graph::{self, Direction, NodeIndex};\n use rustc_data_structures::unify::{self, UnificationTable};\n use middle::free_region::FreeRegionMap;\n-use middle::ty::{self, Ty, TyCtxt};\n-use middle::ty::{BoundRegion, Region, RegionVid};\n-use middle::ty::{ReEmpty, ReStatic, ReFree, ReEarlyBound};\n-use middle::ty::{ReLateBound, ReScope, ReVar, ReSkolemized, BrFresh};\n+use ty::{self, Ty, TyCtxt};\n+use ty::{BoundRegion, Region, RegionVid};\n+use ty::{ReEmpty, ReStatic, ReFree, ReEarlyBound};\n+use ty::{ReLateBound, ReScope, ReVar, ReSkolemized, BrFresh};\n use util::common::indenter;\n use util::nodemap::{FnvHashMap, FnvHashSet};\n ", "previous_filename": "src/librustc/middle/infer/region_inference/mod.rs"}, {"sha": "c54843410adb8af4efead5f268139338f717e928", "filename": "src/librustc/infer/resolve.rs", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc%2Finfer%2Fresolve.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc%2Finfer%2Fresolve.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Finfer%2Fresolve.rs?ref=5efdde0de161a5b374e16e20d09322e5a0eba4f9", "patch": "@@ -9,7 +9,7 @@\n // except according to those terms.\n \n use super::{InferCtxt, FixupError, FixupResult};\n-use middle::ty::{self, Ty, TyCtxt, TypeFoldable};\n+use ty::{self, Ty, TyCtxt, TypeFoldable};\n \n ///////////////////////////////////////////////////////////////////////////\n // OPPORTUNISTIC TYPE RESOLVER", "previous_filename": "src/librustc/middle/infer/resolve.rs"}, {"sha": "0505c9d627b9b2f6ffea23282cc15bf15d6ca38f", "filename": "src/librustc/infer/sub.rs", "status": "renamed", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc%2Finfer%2Fsub.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc%2Finfer%2Fsub.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Finfer%2Fsub.rs?ref=5efdde0de161a5b374e16e20d09322e5a0eba4f9", "patch": "@@ -13,9 +13,9 @@ use super::higher_ranked::HigherRankedRelations;\n use super::SubregionOrigin;\n use super::type_variable::{SubtypeOf, SupertypeOf};\n \n-use middle::ty::{self, Ty, TyCtxt};\n-use middle::ty::TyVar;\n-use middle::ty::relate::{Cause, Relate, RelateResult, TypeRelation};\n+use ty::{self, Ty, TyCtxt};\n+use ty::TyVar;\n+use ty::relate::{Cause, Relate, RelateResult, TypeRelation};\n use std::mem;\n \n /// Ensures `a` is made a subtype of `b`. Returns `a` on success.", "previous_filename": "src/librustc/middle/infer/sub.rs"}, {"sha": "c8da346085d64a12758088317ebddda518f2b00c", "filename": "src/librustc/infer/type_variable.rs", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc%2Finfer%2Ftype_variable.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc%2Finfer%2Ftype_variable.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Finfer%2Ftype_variable.rs?ref=5efdde0de161a5b374e16e20d09322e5a0eba4f9", "patch": "@@ -12,7 +12,7 @@ pub use self::RelationDir::*;\n use self::TypeVariableValue::*;\n use self::UndoEntry::*;\n use middle::def_id::{DefId};\n-use middle::ty::{self, Ty};\n+use ty::{self, Ty};\n use syntax::codemap::Span;\n \n use std::cmp::min;", "previous_filename": "src/librustc/middle/infer/type_variable.rs"}, {"sha": "a9eb20b82997fca253ed6bb6dd108ced936b758e", "filename": "src/librustc/infer/unify_key.rs", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc%2Finfer%2Funify_key.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc%2Finfer%2Funify_key.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Finfer%2Funify_key.rs?ref=5efdde0de161a5b374e16e20d09322e5a0eba4f9", "patch": "@@ -9,7 +9,7 @@\n // except according to those terms.\n \n use syntax::ast;\n-use middle::ty::{self, IntVarValue, Ty, TyCtxt};\n+use ty::{self, IntVarValue, Ty, TyCtxt};\n use rustc_data_structures::unify::{Combine, UnifyKey};\n \n pub trait ToType<'tcx> {", "previous_filename": "src/librustc/middle/infer/unify_key.rs"}, {"sha": "4fdfe59e2b041e597e255578830409806b995b22", "filename": "src/librustc/lib.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Flib.rs?ref=5efdde0de161a5b374e16e20d09322e5a0eba4f9", "patch": "@@ -78,17 +78,20 @@ pub mod back {\n     pub use rustc_back::svh;\n }\n \n+pub mod cfg;\n pub mod dep_graph;\n \n pub mod front {\n     pub mod check_attr;\n     pub mod map;\n }\n \n+pub mod infer;\n+pub mod lint;\n+\n pub mod middle {\n     pub mod astconv_util;\n     pub mod expr_use_visitor; // STAGE0: increase glitch immunity\n-    pub mod cfg;\n     pub mod check_match;\n     pub mod const_eval;\n     pub mod const_qualif;\n@@ -102,7 +105,6 @@ pub mod middle {\n     pub mod entry;\n     pub mod free_region;\n     pub mod intrinsicck;\n-    pub mod infer;\n     pub mod lang_items;\n     pub mod liveness;\n     pub mod mem_categorization;\n@@ -113,8 +115,6 @@ pub mod middle {\n     pub mod recursion_limit;\n     pub mod resolve_lifetime;\n     pub mod stability;\n-    pub mod traits;\n-    pub mod ty;\n     pub mod weak_lang_items;\n }\n \n@@ -127,8 +127,8 @@ pub mod mir {\n }\n \n pub mod session;\n-\n-pub mod lint;\n+pub mod traits;\n+pub mod ty;\n \n pub mod util {\n     pub use rustc_back::sha2;"}, {"sha": "8224422d45c979d648eb43f2d6bd1a7478d7da73", "filename": "src/librustc/lint/context.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc%2Flint%2Fcontext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc%2Flint%2Fcontext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Flint%2Fcontext.rs?ref=5efdde0de161a5b374e16e20d09322e5a0eba4f9", "patch": "@@ -27,7 +27,7 @@ use self::TargetLint::*;\n \n use dep_graph::DepNode;\n use middle::privacy::AccessLevels;\n-use middle::ty::TyCtxt;\n+use ty::TyCtxt;\n use session::{config, early_error, Session};\n use lint::{Level, LevelSource, Lint, LintId, LintArray, LintPass};\n use lint::{EarlyLintPass, EarlyLintPassObject, LateLintPass, LateLintPassObject};"}, {"sha": "a6907aad297c1d914fd12b4b2da9267977502c98", "filename": "src/librustc/middle/astconv_util.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc%2Fmiddle%2Fastconv_util.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc%2Fmiddle%2Fastconv_util.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fastconv_util.rs?ref=5efdde0de161a5b374e16e20d09322e5a0eba4f9", "patch": "@@ -15,7 +15,7 @@\n  */\n \n use middle::def::Def;\n-use middle::ty::{Ty, TyCtxt};\n+use ty::{Ty, TyCtxt};\n \n use syntax::codemap::Span;\n use rustc_front::hir as ast;"}, {"sha": "79e4b7c0901bd3a52c3dd39d7633b561eacd4606", "filename": "src/librustc/middle/check_match.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc%2Fmiddle%2Fcheck_match.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc%2Fmiddle%2Fcheck_match.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fcheck_match.rs?ref=5efdde0de161a5b374e16e20d09322e5a0eba4f9", "patch": "@@ -22,12 +22,12 @@ use middle::def_id::{DefId};\n use middle::expr_use_visitor::{ConsumeMode, Delegate, ExprUseVisitor};\n use middle::expr_use_visitor::{LoanCause, MutateMode};\n use middle::expr_use_visitor as euv;\n-use middle::infer;\n+use infer;\n use middle::mem_categorization::{cmt};\n use middle::pat_util::*;\n-use middle::traits::ProjectionMode;\n-use middle::ty::*;\n-use middle::ty;\n+use traits::ProjectionMode;\n+use ty::*;\n+use ty;\n use std::cmp::Ordering;\n use std::fmt;\n use std::iter::{FromIterator, IntoIterator, repeat};"}, {"sha": "fca2904979c64bd4f449972b743293b56613ce7e", "filename": "src/librustc/middle/const_eval.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc%2Fmiddle%2Fconst_eval.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc%2Fmiddle%2Fconst_eval.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fconst_eval.rs?ref=5efdde0de161a5b374e16e20d09322e5a0eba4f9", "patch": "@@ -18,13 +18,13 @@ use front::map as ast_map;\n use front::map::blocks::FnLikeNode;\n use lint;\n use middle::cstore::{self, CrateStore, InlinedItem};\n-use middle::{infer, traits};\n+use {infer, traits};\n use middle::def::Def;\n use middle::def_id::DefId;\n use middle::pat_util::def_to_path;\n-use middle::ty::{self, subst, Ty, TyCtxt};\n-use middle::ty::util::IntTypeExt;\n-use middle::traits::ProjectionMode;\n+use ty::{self, subst, Ty, TyCtxt};\n+use ty::util::IntTypeExt;\n+use traits::ProjectionMode;\n use middle::astconv_util::ast_ty_to_prim_ty;\n use util::nodemap::NodeMap;\n "}, {"sha": "a0dacd622683b3da0cfd7519965f8f2bfc46c6b5", "filename": "src/librustc/middle/cstore.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc%2Fmiddle%2Fcstore.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc%2Fmiddle%2Fcstore.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fcstore.rs?ref=5efdde0de161a5b374e16e20d09322e5a0eba4f9", "patch": "@@ -26,7 +26,7 @@ use back::svh::Svh;\n use front::map as hir_map;\n use middle::def::{self, Def};\n use middle::lang_items;\n-use middle::ty::{self, Ty, TyCtxt, VariantKind};\n+use ty::{self, Ty, TyCtxt, VariantKind};\n use middle::def_id::{DefId, DefIndex};\n use mir::repr::Mir;\n use mir::mir_map::MirMap;\n@@ -498,8 +498,8 @@ pub mod tls {\n     use serialize;\n     use std::cell::Cell;\n     use std::mem;\n-    use middle::ty::{self, Ty, TyCtxt};\n-    use middle::ty::subst::Substs;\n+    use ty::{self, Ty, TyCtxt};\n+    use ty::subst::Substs;\n     use middle::def_id::DefId;\n \n     pub trait EncodingContext<'tcx> {"}, {"sha": "6468187e219bf3b0eeeb893baf22fdcf44f5d8f8", "filename": "src/librustc/middle/dataflow.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc%2Fmiddle%2Fdataflow.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc%2Fmiddle%2Fdataflow.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fdataflow.rs?ref=5efdde0de161a5b374e16e20d09322e5a0eba4f9", "patch": "@@ -14,9 +14,9 @@\n //! and thus uses bitvectors. Your job is simply to specify the so-called\n //! GEN and KILL bits for each expression.\n \n-use middle::cfg;\n-use middle::cfg::CFGIndex;\n-use middle::ty::TyCtxt;\n+use cfg;\n+use cfg::CFGIndex;\n+use ty::TyCtxt;\n use std::io;\n use std::mem;\n use std::usize;"}, {"sha": "2b8ed14701df5eb476601da2b57e0dab2ef1de2c", "filename": "src/librustc/middle/dead.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc%2Fmiddle%2Fdead.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc%2Fmiddle%2Fdead.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fdead.rs?ref=5efdde0de161a5b374e16e20d09322e5a0eba4f9", "patch": "@@ -17,8 +17,8 @@ use front::map as ast_map;\n use rustc_front::hir::{self, PatKind};\n use rustc_front::intravisit::{self, Visitor};\n \n-use middle::{pat_util, privacy, ty};\n-use middle::ty::TyCtxt;\n+use middle::{pat_util, privacy};\n+use ty::{self, TyCtxt};\n use middle::def::Def;\n use middle::def_id::{DefId};\n use lint;\n@@ -84,7 +84,7 @@ impl<'a, 'tcx> MarkSymbolVisitor<'a, 'tcx> {\n     }\n \n     fn lookup_and_handle_definition(&mut self, id: &ast::NodeId) {\n-        use middle::ty::TypeVariants::{TyEnum, TyStruct};\n+        use ty::TypeVariants::{TyEnum, TyStruct};\n \n         // If `bar` is a trait item, make sure to mark Foo as alive in `Foo::bar`\n         self.tcx.tables.borrow().item_substs.get(id)"}, {"sha": "6cbcd41d84a40392ed8382202454690246d3e7b0", "filename": "src/librustc/middle/def.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc%2Fmiddle%2Fdef.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc%2Fmiddle%2Fdef.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fdef.rs?ref=5efdde0de161a5b374e16e20d09322e5a0eba4f9", "patch": "@@ -9,7 +9,7 @@\n // except according to those terms.\n \n use middle::def_id::DefId;\n-use middle::ty::subst::ParamSpace;\n+use ty::subst::ParamSpace;\n use util::nodemap::NodeMap;\n use syntax::ast;\n use rustc_front::hir;"}, {"sha": "a3b83ec5be4bdc2ade2b11648d7c01742289120d", "filename": "src/librustc/middle/def_id.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc%2Fmiddle%2Fdef_id.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc%2Fmiddle%2Fdef_id.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fdef_id.rs?ref=5efdde0de161a5b374e16e20d09322e5a0eba4f9", "patch": "@@ -9,7 +9,7 @@\n // except according to those terms.\n \n use middle::cstore::LOCAL_CRATE;\n-use middle::ty;\n+use ty;\n use syntax::ast::CrateNum;\n use std::fmt;\n use std::u32;"}, {"sha": "fa949073f4e2b5868437b8af7c417233ee8a8dac", "filename": "src/librustc/middle/effect.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc%2Fmiddle%2Feffect.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc%2Fmiddle%2Feffect.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Feffect.rs?ref=5efdde0de161a5b374e16e20d09322e5a0eba4f9", "patch": "@@ -14,8 +14,8 @@ use self::RootUnsafeContext::*;\n \n use dep_graph::DepNode;\n use middle::def::Def;\n-use middle::ty::{self, Ty, TyCtxt};\n-use middle::ty::MethodCall;\n+use ty::{self, Ty, TyCtxt};\n+use ty::MethodCall;\n \n use syntax::ast;\n use syntax::codemap::Span;"}, {"sha": "744022d1d5ec403310e9dba3c48fb8a20785c41b", "filename": "src/librustc/middle/expr_use_visitor.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc%2Fmiddle%2Fexpr_use_visitor.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc%2Fmiddle%2Fexpr_use_visitor.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fexpr_use_visitor.rs?ref=5efdde0de161a5b374e16e20d09322e5a0eba4f9", "patch": "@@ -22,9 +22,9 @@ use self::OverloadedCallType::*;\n use middle::pat_util;\n use middle::def::Def;\n use middle::def_id::{DefId};\n-use middle::infer;\n+use infer;\n use middle::mem_categorization as mc;\n-use middle::ty::{self, TyCtxt, adjustment};\n+use ty::{self, TyCtxt, adjustment};\n \n use rustc_front::hir::{self, PatKind};\n "}, {"sha": "20f2c5ad43fbbdc28fe03b05ec6ec46062e1da0e", "filename": "src/librustc/middle/free_region.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc%2Fmiddle%2Ffree_region.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc%2Fmiddle%2Ffree_region.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ffree_region.rs?ref=5efdde0de161a5b374e16e20d09322e5a0eba4f9", "patch": "@@ -15,8 +15,8 @@\n //! `TransitiveRelation` type and use that to decide when one free\n //! region outlives another and so forth.\n \n-use middle::ty::{self, TyCtxt, FreeRegion, Region};\n-use middle::ty::wf::ImpliedBound;\n+use ty::{self, TyCtxt, FreeRegion, Region};\n+use ty::wf::ImpliedBound;\n use rustc_data_structures::transitive_relation::TransitiveRelation;\n \n #[derive(Clone)]"}, {"sha": "939ea91cdd44eb539ec3f31a895b420993efbc30", "filename": "src/librustc/middle/intrinsicck.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc%2Fmiddle%2Fintrinsicck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc%2Fmiddle%2Fintrinsicck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fintrinsicck.rs?ref=5efdde0de161a5b374e16e20d09322e5a0eba4f9", "patch": "@@ -11,9 +11,9 @@\n use dep_graph::DepNode;\n use middle::def::Def;\n use middle::def_id::DefId;\n-use middle::ty::subst::{Subst, Substs, EnumeratedItems};\n-use middle::ty::{TransmuteRestriction, TyCtxt};\n-use middle::ty::{self, Ty, TypeFoldable};\n+use ty::subst::{Subst, Substs, EnumeratedItems};\n+use ty::{TransmuteRestriction, TyCtxt};\n+use ty::{self, Ty, TypeFoldable};\n \n use std::fmt;\n "}, {"sha": "bb0b8ed91df86421ae1190443909bff17959b307", "filename": "src/librustc/middle/lang_items.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc%2Fmiddle%2Flang_items.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc%2Fmiddle%2Flang_items.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Flang_items.rs?ref=5efdde0de161a5b374e16e20d09322e5a0eba4f9", "patch": "@@ -26,7 +26,7 @@ use front::map as hir_map;\n use session::Session;\n use middle::cstore::CrateStore;\n use middle::def_id::DefId;\n-use middle::ty;\n+use ty;\n use middle::weak_lang_items;\n use util::nodemap::FnvHashMap;\n "}, {"sha": "f6eedb49e2476a6be8eed4990924d25565036503", "filename": "src/librustc/middle/liveness.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc%2Fmiddle%2Fliveness.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc%2Fmiddle%2Fliveness.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fliveness.rs?ref=5efdde0de161a5b374e16e20d09322e5a0eba4f9", "patch": "@@ -112,10 +112,10 @@ use self::VarKind::*;\n use dep_graph::DepNode;\n use middle::def::*;\n use middle::pat_util;\n-use middle::ty::{self, TyCtxt, ParameterEnvironment};\n-use middle::traits::{self, ProjectionMode};\n-use middle::infer;\n-use middle::ty::subst::Subst;\n+use ty::{self, TyCtxt, ParameterEnvironment};\n+use traits::{self, ProjectionMode};\n+use infer;\n+use ty::subst::Subst;\n use lint;\n use util::nodemap::NodeMap;\n "}, {"sha": "6328f920cb7414c6e7c23f2c0d86234cef3fdec1", "filename": "src/librustc/middle/mem_categorization.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc%2Fmiddle%2Fmem_categorization.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc%2Fmiddle%2Fmem_categorization.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fmem_categorization.rs?ref=5efdde0de161a5b374e16e20d09322e5a0eba4f9", "patch": "@@ -73,11 +73,11 @@ use self::Aliasability::*;\n \n use middle::def_id::DefId;\n use front::map as ast_map;\n-use middle::infer;\n+use infer;\n use middle::const_qualif::ConstQualif;\n use middle::def::Def;\n-use middle::ty::adjustment;\n-use middle::ty::{self, Ty, TyCtxt};\n+use ty::adjustment;\n+use ty::{self, Ty, TyCtxt};\n \n use rustc_front::hir::{MutImmutable, MutMutable, PatKind};\n use rustc_front::hir;"}, {"sha": "b2b1344c4bb756d2c7341a960fc2849cf631ee0f", "filename": "src/librustc/middle/pat_util.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc%2Fmiddle%2Fpat_util.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc%2Fmiddle%2Fpat_util.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fpat_util.rs?ref=5efdde0de161a5b374e16e20d09322e5a0eba4f9", "patch": "@@ -10,7 +10,7 @@\n \n use middle::def::*;\n use middle::def_id::DefId;\n-use middle::ty::TyCtxt;\n+use ty::TyCtxt;\n use util::nodemap::FnvHashMap;\n \n use syntax::ast;"}, {"sha": "2e01a7fc249ecaab02e5ac1e47f6fd79f1185ec6", "filename": "src/librustc/middle/reachable.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc%2Fmiddle%2Freachable.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc%2Fmiddle%2Freachable.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Freachable.rs?ref=5efdde0de161a5b374e16e20d09322e5a0eba4f9", "patch": "@@ -19,7 +19,7 @@ use dep_graph::DepNode;\n use front::map as ast_map;\n use middle::def::Def;\n use middle::def_id::DefId;\n-use middle::ty::{self, TyCtxt};\n+use ty::{self, TyCtxt};\n use middle::privacy;\n use session::config;\n use util::nodemap::NodeSet;"}, {"sha": "1d1d05ea79f173411c2a3ebf5b06137d4e163b01", "filename": "src/librustc/middle/region.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc%2Fmiddle%2Fregion.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc%2Fmiddle%2Fregion.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fregion.rs?ref=5efdde0de161a5b374e16e20d09322e5a0eba4f9", "patch": "@@ -21,7 +21,7 @@ use front::map as ast_map;\n use session::Session;\n use util::nodemap::{FnvHashMap, NodeMap, NodeSet};\n use middle::cstore::InlinedItem;\n-use middle::ty;\n+use ty;\n \n use std::cell::RefCell;\n use std::collections::hash_map::Entry;\n@@ -280,7 +280,7 @@ pub struct RegionMaps {\n     /// hierarchy based on their lexical mapping. This is used to\n     /// handle the relationships between regions in a fn and in a\n     /// closure defined by that fn. See the \"Modeling closures\"\n-    /// section of the README in middle::infer::region_inference for\n+    /// section of the README in infer::region_inference for\n     /// more details.\n     fn_tree: RefCell<NodeMap<ast::NodeId>>,\n }\n@@ -291,7 +291,7 @@ pub struct Context {\n     /// of the innermost fn body. Each fn forms its own disjoint tree\n     /// in the region hierarchy. These fn bodies are themselves\n     /// arranged into a tree. See the \"Modeling closures\" section of\n-    /// the README in middle::infer::region_inference for more\n+    /// the README in infer::region_inference for more\n     /// details.\n     root_id: Option<ast::NodeId>,\n \n@@ -460,7 +460,7 @@ impl RegionMaps {\n         self.scope_map.borrow()[id.0 as usize].into_option()\n     }\n \n-    #[allow(dead_code)] // used in middle::cfg\n+    #[allow(dead_code)] // used in cfg\n     pub fn encl_scope(&self, id: CodeExtent) -> CodeExtent {\n         //! Returns the narrowest scope that encloses `id`, if any.\n         self.opt_encl_scope(id).unwrap()\n@@ -587,7 +587,7 @@ impl RegionMaps {\n             // different functions.  Compare those fn for lexical\n             // nesting. The reasoning behind this is subtle.  See the\n             // \"Modeling closures\" section of the README in\n-            // middle::infer::region_inference for more details.\n+            // infer::region_inference for more details.\n             let a_root_scope = self.code_extent_data(a_ancestors[a_index]);\n             let b_root_scope = self.code_extent_data(a_ancestors[a_index]);\n             return match (a_root_scope, b_root_scope) {"}, {"sha": "6342599bf734d8d3d6b9ecba719ee56bb530e554", "filename": "src/librustc/middle/resolve_lifetime.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc%2Fmiddle%2Fresolve_lifetime.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc%2Fmiddle%2Fresolve_lifetime.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fresolve_lifetime.rs?ref=5efdde0de161a5b374e16e20d09322e5a0eba4f9", "patch": "@@ -23,8 +23,8 @@ use front::map::Map;\n use session::Session;\n use middle::def::{Def, DefMap};\n use middle::region;\n-use middle::ty::subst;\n-use middle::ty;\n+use ty::subst;\n+use ty;\n use std::fmt;\n use std::mem::replace;\n use syntax::ast;"}, {"sha": "3a2f995a31824f62e1fccb8fd3c8d83a415cce79", "filename": "src/librustc/middle/stability.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc%2Fmiddle%2Fstability.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc%2Fmiddle%2Fstability.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fstability.rs?ref=5efdde0de161a5b374e16e20d09322e5a0eba4f9", "patch": "@@ -20,7 +20,7 @@ use lint;\n use middle::cstore::{CrateStore, LOCAL_CRATE};\n use middle::def::Def;\n use middle::def_id::{CRATE_DEF_INDEX, DefId};\n-use middle::ty::{self, TyCtxt};\n+use ty::{self, TyCtxt};\n use middle::privacy::AccessLevels;\n use syntax::parse::token::InternedString;\n use syntax::codemap::{Span, DUMMY_SP};"}, {"sha": "b90738107834d659ac78e5a99338c99e74a40d23", "filename": "src/librustc/mir/repr.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc%2Fmir%2Frepr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc%2Fmir%2Frepr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmir%2Frepr.rs?ref=5efdde0de161a5b374e16e20d09322e5a0eba4f9", "patch": "@@ -12,8 +12,8 @@ use graphviz::IntoCow;\n use middle::const_eval::ConstVal;\n use rustc_const_eval::{ConstUsize, ConstInt};\n use middle::def_id::DefId;\n-use middle::ty::subst::Substs;\n-use middle::ty::{self, AdtDef, ClosureSubsts, FnOutput, Region, Ty};\n+use ty::subst::Substs;\n+use ty::{self, AdtDef, ClosureSubsts, FnOutput, Region, Ty};\n use util::ppaux;\n use rustc_back::slice;\n use rustc_front::hir::InlineAsm;"}, {"sha": "46d99dbef8c616dbd594a2734c41290cca73c844", "filename": "src/librustc/mir/tcx.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc%2Fmir%2Ftcx.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc%2Fmir%2Ftcx.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmir%2Ftcx.rs?ref=5efdde0de161a5b374e16e20d09322e5a0eba4f9", "patch": "@@ -14,9 +14,9 @@\n  */\n \n use mir::repr::*;\n-use middle::ty::subst::{Subst, Substs};\n-use middle::ty::{self, AdtDef, Ty, TyCtxt};\n-use middle::ty::fold::{TypeFoldable, TypeFolder, TypeVisitor};\n+use ty::subst::{Subst, Substs};\n+use ty::{self, AdtDef, Ty, TyCtxt};\n+use ty::fold::{TypeFoldable, TypeFolder, TypeVisitor};\n use rustc_front::hir;\n \n #[derive(Copy, Clone, Debug)]"}, {"sha": "410e3f9d06628c06d3e0818a80512fc090479d49", "filename": "src/librustc/mir/transform.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc%2Fmir%2Ftransform.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc%2Fmir%2Ftransform.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmir%2Ftransform.rs?ref=5efdde0de161a5b374e16e20d09322e5a0eba4f9", "patch": "@@ -10,7 +10,7 @@\n \n use mir::mir_map::MirMap;\n use mir::repr::Mir;\n-use middle::ty::TyCtxt;\n+use ty::TyCtxt;\n use syntax::ast::NodeId;\n \n /// Various information about pass."}, {"sha": "856902bea3c3c315e29f4d14e73ceeebacba9a01", "filename": "src/librustc/mir/visit.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc%2Fmir%2Fvisit.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc%2Fmir%2Fvisit.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmir%2Fvisit.rs?ref=5efdde0de161a5b374e16e20d09322e5a0eba4f9", "patch": "@@ -10,8 +10,8 @@\n \n use middle::const_eval::ConstVal;\n use middle::def_id::DefId;\n-use middle::subst::Substs;\n-use middle::ty::{ClosureSubsts, FnOutput, Region, Ty};\n+use ty::subst::Substs;\n+use ty::{ClosureSubsts, FnOutput, Region, Ty};\n use mir::repr::*;\n use rustc_const_eval::ConstUsize;\n use rustc_data_structures::tuple_slice::TupleSlice;"}, {"sha": "ff72f9dd07e36096819e2244644099a136cc63c4", "filename": "src/librustc/traits/README.md", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc%2Ftraits%2FREADME.md", "raw_url": "https://github.com/rust-lang/rust/raw/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc%2Ftraits%2FREADME.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Ftraits%2FREADME.md?ref=5efdde0de161a5b374e16e20d09322e5a0eba4f9", "previous_filename": "src/librustc/middle/traits/README.md"}, {"sha": "b5b5da6208034ac966e64881b702eed333bc38e6", "filename": "src/librustc/traits/coherence.rs", "status": "renamed", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc%2Ftraits%2Fcoherence.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc%2Ftraits%2Fcoherence.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Ftraits%2Fcoherence.rs?ref=5efdde0de161a5b374e16e20d09322e5a0eba4f9", "patch": "@@ -14,9 +14,9 @@ use super::{SelectionContext, Obligation, ObligationCause};\n \n use middle::cstore::LOCAL_CRATE;\n use middle::def_id::DefId;\n-use middle::ty::subst::TypeSpace;\n-use middle::ty::{self, Ty, TyCtxt};\n-use middle::infer::{self, InferCtxt, TypeOrigin};\n+use ty::subst::TypeSpace;\n+use ty::{self, Ty, TyCtxt};\n+use infer::{self, InferCtxt, TypeOrigin};\n use syntax::codemap::DUMMY_SP;\n \n #[derive(Copy, Clone)]", "previous_filename": "src/librustc/middle/traits/coherence.rs"}, {"sha": "c26aaeaf1431666114099a16a7d6f7c2d17979be", "filename": "src/librustc/traits/error_reporting.rs", "status": "renamed", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc%2Ftraits%2Ferror_reporting.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc%2Ftraits%2Ferror_reporting.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Ftraits%2Ferror_reporting.rs?ref=5efdde0de161a5b374e16e20d09322e5a0eba4f9", "patch": "@@ -25,9 +25,9 @@ use super::{\n \n use fmt_macros::{Parser, Piece, Position};\n use middle::def_id::DefId;\n-use middle::infer::InferCtxt;\n-use middle::ty::{self, ToPredicate, ToPolyTraitRef, TraitRef, Ty, TyCtxt, TypeFoldable};\n-use middle::ty::fast_reject;\n+use infer::InferCtxt;\n+use ty::{self, ToPredicate, ToPolyTraitRef, TraitRef, Ty, TyCtxt, TypeFoldable};\n+use ty::fast_reject;\n use util::nodemap::{FnvHashMap, FnvHashSet};\n \n use std::cmp;", "previous_filename": "src/librustc/middle/traits/error_reporting.rs"}, {"sha": "321144126c9f82aa3d9be547f9a6b3b255373c6c", "filename": "src/librustc/traits/fulfill.rs", "status": "renamed", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc%2Ftraits%2Ffulfill.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc%2Ftraits%2Ffulfill.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Ftraits%2Ffulfill.rs?ref=5efdde0de161a5b374e16e20d09322e5a0eba4f9", "patch": "@@ -9,8 +9,8 @@\n // except according to those terms.\n \n use dep_graph::DepGraph;\n-use middle::infer::InferCtxt;\n-use middle::ty::{self, Ty, TyCtxt, TypeFoldable, ToPolyTraitRef};\n+use infer::InferCtxt;\n+use ty::{self, Ty, TyCtxt, TypeFoldable, ToPolyTraitRef};\n use rustc_data_structures::obligation_forest::{Backtrace, ObligationForest, Error};\n use std::iter;\n use syntax::ast;", "previous_filename": "src/librustc/middle/traits/fulfill.rs"}, {"sha": "867bd054fa9ddc22348670f8c45d7fff19365d1e", "filename": "src/librustc/traits/mod.rs", "status": "renamed", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc%2Ftraits%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc%2Ftraits%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Ftraits%2Fmod.rs?ref=5efdde0de161a5b374e16e20d09322e5a0eba4f9", "patch": "@@ -17,9 +17,9 @@ pub use self::ObligationCauseCode::*;\n \n use middle::def_id::DefId;\n use middle::free_region::FreeRegionMap;\n-use middle::ty::subst;\n-use middle::ty::{self, Ty, TypeFoldable};\n-use middle::infer::{self, fixup_err_to_string, InferCtxt};\n+use ty::subst;\n+use ty::{self, Ty, TypeFoldable};\n+use infer::{self, fixup_err_to_string, InferCtxt};\n \n use std::rc::Rc;\n use syntax::ast;", "previous_filename": "src/librustc/middle/traits/mod.rs"}, {"sha": "7cd2ac5938d41387bcc66b50d6454c258bba15b1", "filename": "src/librustc/traits/object_safety.rs", "status": "renamed", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc%2Ftraits%2Fobject_safety.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc%2Ftraits%2Fobject_safety.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Ftraits%2Fobject_safety.rs?ref=5efdde0de161a5b374e16e20d09322e5a0eba4f9", "patch": "@@ -21,9 +21,9 @@ use super::supertraits;\n use super::elaborate_predicates;\n \n use middle::def_id::DefId;\n-use middle::ty::subst::{self, SelfSpace, TypeSpace};\n-use middle::traits;\n-use middle::ty::{self, ToPolyTraitRef, Ty, TyCtxt, TypeFoldable};\n+use ty::subst::{self, SelfSpace, TypeSpace};\n+use traits;\n+use ty::{self, ToPolyTraitRef, Ty, TyCtxt, TypeFoldable};\n use std::rc::Rc;\n use syntax::ast;\n ", "previous_filename": "src/librustc/middle/traits/object_safety.rs"}, {"sha": "3adaf5fa6bb2faa093357d3bb3f5001ac2b9f2a9", "filename": "src/librustc/traits/project.rs", "status": "renamed", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc%2Ftraits%2Fproject.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc%2Ftraits%2Fproject.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Ftraits%2Fproject.rs?ref=5efdde0de161a5b374e16e20d09322e5a0eba4f9", "patch": "@@ -24,10 +24,10 @@ use super::VtableImplData;\n use super::util;\n \n use middle::def_id::DefId;\n-use middle::infer::{self, TypeOrigin};\n-use middle::ty::subst::Subst;\n-use middle::ty::{self, ToPredicate, ToPolyTraitRef, Ty, TyCtxt};\n-use middle::ty::fold::{TypeFoldable, TypeFolder};\n+use infer::{self, TypeOrigin};\n+use ty::subst::Subst;\n+use ty::{self, ToPredicate, ToPolyTraitRef, Ty, TyCtxt};\n+use ty::fold::{TypeFoldable, TypeFolder};\n use syntax::parse::token;\n use syntax::ast;\n use util::common::FN_OUTPUT_NAME;", "previous_filename": "src/librustc/middle/traits/project.rs"}, {"sha": "e2a48688d4bbc0d550721723b9761cdcb4293f9a", "filename": "src/librustc/traits/select.rs", "status": "renamed", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc%2Ftraits%2Fselect.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc%2Ftraits%2Fselect.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Ftraits%2Fselect.rs?ref=5efdde0de161a5b374e16e20d09322e5a0eba4f9", "patch": "@@ -37,13 +37,13 @@ use super::object_safety;\n use super::util;\n \n use middle::def_id::DefId;\n-use middle::infer;\n-use middle::infer::{InferCtxt, TypeFreshener, TypeOrigin};\n-use middle::ty::subst::{Subst, Substs, TypeSpace};\n-use middle::ty::{self, ToPredicate, ToPolyTraitRef, Ty, TyCtxt, TypeFoldable};\n-use middle::traits;\n-use middle::ty::fast_reject;\n-use middle::ty::relate::TypeRelation;\n+use infer;\n+use infer::{InferCtxt, TypeFreshener, TypeOrigin};\n+use ty::subst::{Subst, Substs, TypeSpace};\n+use ty::{self, ToPredicate, ToPolyTraitRef, Ty, TyCtxt, TypeFoldable};\n+use traits;\n+use ty::fast_reject;\n+use ty::relate::TypeRelation;\n \n use std::cell::RefCell;\n use std::fmt;", "previous_filename": "src/librustc/middle/traits/select.rs"}, {"sha": "e0ce54115ebc20150aa4af6d730a2260f8bef15b", "filename": "src/librustc/traits/specialize/mod.rs", "status": "renamed", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc%2Ftraits%2Fspecialize%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc%2Ftraits%2Fspecialize%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Ftraits%2Fspecialize%2Fmod.rs?ref=5efdde0de161a5b374e16e20d09322e5a0eba4f9", "patch": "@@ -22,11 +22,11 @@ use super::util::{fresh_type_vars_for_impl, impl_trait_ref_and_oblig};\n \n use middle::cstore::CrateStore;\n use middle::def_id::DefId;\n-use middle::infer::{self, InferCtxt, TypeOrigin};\n+use infer::{self, InferCtxt, TypeOrigin};\n use middle::region;\n-use middle::ty::subst::{Subst, Substs};\n-use middle::traits::{self, ProjectionMode, ObligationCause, Normalized};\n-use middle::ty::{self, TyCtxt};\n+use ty::subst::{Subst, Substs};\n+use traits::{self, ProjectionMode, ObligationCause, Normalized};\n+use ty::{self, TyCtxt};\n use syntax::codemap::DUMMY_SP;\n \n pub mod specialization_graph;", "previous_filename": "src/librustc/middle/traits/specialize/mod.rs"}, {"sha": "eaafeb1a969b3e16b3cdd381c407febc84bc00e1", "filename": "src/librustc/traits/specialize/specialization_graph.rs", "status": "renamed", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc%2Ftraits%2Fspecialize%2Fspecialization_graph.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc%2Ftraits%2Fspecialize%2Fspecialization_graph.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Ftraits%2Fspecialize%2Fspecialization_graph.rs?ref=5efdde0de161a5b374e16e20d09322e5a0eba4f9", "patch": "@@ -15,9 +15,9 @@ use super::{Overlap, specializes};\n \n use middle::cstore::CrateStore;\n use middle::def_id::DefId;\n-use middle::infer;\n-use middle::traits::{self, ProjectionMode};\n-use middle::ty::{self, TyCtxt, ImplOrTraitItem, TraitDef, TypeFoldable};\n+use infer;\n+use traits::{self, ProjectionMode};\n+use ty::{self, TyCtxt, ImplOrTraitItem, TraitDef, TypeFoldable};\n use syntax::ast::Name;\n use util::nodemap::DefIdMap;\n ", "previous_filename": "src/librustc/middle/traits/specialize/specialization_graph.rs"}, {"sha": "367e5f32ba3ec60fff711dabe81b06b9c115d294", "filename": "src/librustc/traits/structural_impls.rs", "status": "renamed", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc%2Ftraits%2Fstructural_impls.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc%2Ftraits%2Fstructural_impls.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Ftraits%2Fstructural_impls.rs?ref=5efdde0de161a5b374e16e20d09322e5a0eba4f9", "patch": "@@ -8,13 +8,13 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-use middle::traits;\n-use middle::traits::project::Normalized;\n-use middle::ty::fold::{TypeFoldable, TypeFolder, TypeVisitor};\n+use traits;\n+use traits::project::Normalized;\n+use ty::fold::{TypeFoldable, TypeFolder, TypeVisitor};\n \n use std::fmt;\n \n-// structural impls for the structs in middle::traits\n+// structural impls for the structs in traits\n \n impl<'tcx, T: fmt::Debug> fmt::Debug for Normalized<'tcx, T> {\n     fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {", "previous_filename": "src/librustc/middle/traits/structural_impls.rs"}, {"sha": "f339b6e50cedd8528e07da79e35b5d05413cbc0f", "filename": "src/librustc/traits/util.rs", "status": "renamed", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc%2Ftraits%2Futil.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc%2Ftraits%2Futil.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Ftraits%2Futil.rs?ref=5efdde0de161a5b374e16e20d09322e5a0eba4f9", "patch": "@@ -9,9 +9,9 @@\n // except according to those terms.\n \n use middle::def_id::DefId;\n-use middle::infer::InferCtxt;\n-use middle::ty::subst::{Subst, Substs};\n-use middle::ty::{self, Ty, TyCtxt, ToPredicate, ToPolyTraitRef};\n+use infer::InferCtxt;\n+use ty::subst::{Subst, Substs};\n+use ty::{self, Ty, TyCtxt, ToPredicate, ToPolyTraitRef};\n use syntax::codemap::Span;\n use util::common::ErrorReported;\n use util::nodemap::FnvHashSet;", "previous_filename": "src/librustc/middle/traits/util.rs"}, {"sha": "d0ccc3e0fdd80b27c12df0e47fdebd42288a5df3", "filename": "src/librustc/ty/_match.rs", "status": "renamed", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc%2Fty%2F_match.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc%2Fty%2F_match.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2F_match.rs?ref=5efdde0de161a5b374e16e20d09322e5a0eba4f9", "patch": "@@ -8,9 +8,9 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-use middle::ty::{self, Ty, TyCtxt};\n-use middle::ty::error::TypeError;\n-use middle::ty::relate::{self, Relate, TypeRelation, RelateResult};\n+use ty::{self, Ty, TyCtxt};\n+use ty::error::TypeError;\n+use ty::relate::{self, Relate, TypeRelation, RelateResult};\n \n /// A type \"A\" *matches* \"B\" if the fresh types in B could be\n /// substituted with values so as to make it equal to A. Matching is", "previous_filename": "src/librustc/middle/ty/_match.rs"}, {"sha": "dc2117b1ad119c8f8bc454e5f00a67a34407ec12", "filename": "src/librustc/ty/adjustment.rs", "status": "renamed", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc%2Fty%2Fadjustment.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc%2Fty%2Fadjustment.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Fadjustment.rs?ref=5efdde0de161a5b374e16e20d09322e5a0eba4f9", "patch": "@@ -11,8 +11,8 @@\n pub use self::AutoAdjustment::*;\n pub use self::AutoRef::*;\n \n-use middle::ty::{self, Ty, TyCtxt, TypeAndMut, TypeFoldable};\n-use middle::ty::LvaluePreference::{NoPreference};\n+use ty::{self, Ty, TyCtxt, TypeAndMut, TypeFoldable};\n+use ty::LvaluePreference::{NoPreference};\n \n use syntax::ast;\n use syntax::codemap::Span;", "previous_filename": "src/librustc/middle/ty/adjustment.rs"}, {"sha": "c8d282d18af1db0156c62070c91bb08ef7ea8388", "filename": "src/librustc/ty/cast.rs", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc%2Fty%2Fcast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc%2Fty%2Fcast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Fcast.rs?ref=5efdde0de161a5b374e16e20d09322e5a0eba4f9", "patch": "@@ -11,7 +11,7 @@\n // Helpers for handling cast expressions, used in both\n // typeck and trans.\n \n-use middle::ty::{self, Ty};\n+use ty::{self, Ty};\n \n use syntax::ast;\n ", "previous_filename": "src/librustc/middle/ty/cast.rs"}, {"sha": "cb84b198222a2ea6cc57636fdbc748fc6d5c3edb", "filename": "src/librustc/ty/contents.rs", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc%2Fty%2Fcontents.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc%2Fty%2Fcontents.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Fcontents.rs?ref=5efdde0de161a5b374e16e20d09322e5a0eba4f9", "patch": "@@ -9,7 +9,7 @@\n // except according to those terms.\n \n use middle::def_id::{DefId};\n-use middle::ty::{self, Ty, TyCtxt};\n+use ty::{self, Ty, TyCtxt};\n use util::common::MemoizationMap;\n use util::nodemap::FnvHashMap;\n ", "previous_filename": "src/librustc/middle/ty/contents.rs"}, {"sha": "49e9eda56511465fac0595a16b95a87ce5c63dac", "filename": "src/librustc/ty/context.rs", "status": "renamed", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc%2Fty%2Fcontext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc%2Fty%2Fcontext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Fcontext.rs?ref=5efdde0de161a5b374e16e20d09322e5a0eba4f9", "patch": "@@ -22,16 +22,16 @@ use middle::free_region::FreeRegionMap;\n use middle::region::RegionMaps;\n use middle::resolve_lifetime;\n use middle::stability;\n-use middle::ty::subst::{self, Subst, Substs};\n-use middle::traits;\n-use middle::ty::{self, TraitRef, Ty, TypeAndMut};\n-use middle::ty::{TyS, TypeVariants};\n-use middle::ty::{AdtDef, ClosureSubsts, ExistentialBounds, Region};\n-use middle::ty::{FreevarMap};\n-use middle::ty::{BareFnTy, InferTy, ParamTy, ProjectionTy, TraitTy};\n-use middle::ty::{TyVar, TyVid, IntVar, IntVid, FloatVar, FloatVid};\n-use middle::ty::TypeVariants::*;\n-use middle::ty::maps;\n+use ty::subst::{self, Subst, Substs};\n+use traits;\n+use ty::{self, TraitRef, Ty, TypeAndMut};\n+use ty::{TyS, TypeVariants};\n+use ty::{AdtDef, ClosureSubsts, ExistentialBounds, Region};\n+use ty::{FreevarMap};\n+use ty::{BareFnTy, InferTy, ParamTy, ProjectionTy, TraitTy};\n+use ty::{TyVar, TyVid, IntVar, IntVid, FloatVar, FloatVid};\n+use ty::TypeVariants::*;\n+use ty::maps;\n use util::common::MemoizationMap;\n use util::nodemap::{NodeMap, NodeSet, DefIdMap, DefIdSet};\n use util::nodemap::FnvHashMap;\n@@ -639,7 +639,7 @@ impl<'a, 'tcx> Lift<'tcx> for &'a Substs<'a> {\n \n \n pub mod tls {\n-    use middle::ty::TyCtxt;\n+    use ty::TyCtxt;\n \n     use std::cell::Cell;\n     use std::fmt;\n@@ -699,7 +699,7 @@ macro_rules! sty_debug_print {\n         // variable names.\n         #[allow(non_snake_case)]\n         mod inner {\n-            use middle::ty::{self, TyCtxt};\n+            use ty::{self, TyCtxt};\n             #[derive(Copy, Clone)]\n             struct DebugStat {\n                 total: usize,", "previous_filename": "src/librustc/middle/ty/context.rs"}, {"sha": "9ab4850582853ff4d4a8f4acad533b56d6fc7117", "filename": "src/librustc/ty/error.rs", "status": "renamed", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc%2Fty%2Ferror.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc%2Fty%2Ferror.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Ferror.rs?ref=5efdde0de161a5b374e16e20d09322e5a0eba4f9", "patch": "@@ -9,9 +9,9 @@\n // except according to those terms.\n \n use middle::def_id::DefId;\n-use middle::ty::subst;\n-use middle::infer::type_variable;\n-use middle::ty::{self, BoundRegion, Region, Ty, TyCtxt};\n+use ty::subst;\n+use infer::type_variable;\n+use ty::{self, BoundRegion, Region, Ty, TyCtxt};\n \n use std::fmt;\n use syntax::abi;", "previous_filename": "src/librustc/middle/ty/error.rs"}, {"sha": "0865e059f59c5d5c047dfd45087c3e2c4a413253", "filename": "src/librustc/ty/fast_reject.rs", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc%2Fty%2Ffast_reject.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc%2Fty%2Ffast_reject.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Ffast_reject.rs?ref=5efdde0de161a5b374e16e20d09322e5a0eba4f9", "patch": "@@ -9,7 +9,7 @@\n // except according to those terms.\n \n use middle::def_id::DefId;\n-use middle::ty::{self, Ty, TyCtxt};\n+use ty::{self, Ty, TyCtxt};\n use syntax::ast;\n \n use self::SimplifiedType::*;", "previous_filename": "src/librustc/middle/ty/fast_reject.rs"}, {"sha": "f3dcccedc594b86454fc33ba4d6c807ca064c5c6", "filename": "src/librustc/ty/flags.rs", "status": "renamed", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc%2Fty%2Fflags.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc%2Fty%2Fflags.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Fflags.rs?ref=5efdde0de161a5b374e16e20d09322e5a0eba4f9", "patch": "@@ -8,8 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-use middle::ty::subst;\n-use middle::ty::{self, Ty, TypeFlags, TypeFoldable};\n+use ty::subst;\n+use ty::{self, Ty, TypeFlags, TypeFoldable};\n \n pub struct FlagComputation {\n     pub flags: TypeFlags,", "previous_filename": "src/librustc/middle/ty/flags.rs"}, {"sha": "d04f272688c8cdf895b23ebf5e7017f9e5bb1017", "filename": "src/librustc/ty/fold.rs", "status": "renamed", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc%2Fty%2Ffold.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc%2Fty%2Ffold.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Ffold.rs?ref=5efdde0de161a5b374e16e20d09322e5a0eba4f9", "patch": "@@ -40,9 +40,9 @@\n //! and does not need to visit anything else.\n \n use middle::region;\n-use middle::ty::subst;\n-use middle::ty::adjustment;\n-use middle::ty::{self, Binder, Ty, TyCtxt, TypeFlags};\n+use ty::subst;\n+use ty::adjustment;\n+use ty::{self, Binder, Ty, TyCtxt, TypeFlags};\n \n use std::fmt;\n use util::nodemap::{FnvHashMap, FnvHashSet};", "previous_filename": "src/librustc/middle/ty/fold.rs"}, {"sha": "a106fd6e5aa6c60dff195021ba6e0a8c0edc593e", "filename": "src/librustc/ty/item_path.rs", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc%2Fty%2Fitem_path.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc%2Fty%2Fitem_path.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Fitem_path.rs?ref=5efdde0de161a5b374e16e20d09322e5a0eba4f9", "patch": "@@ -11,7 +11,7 @@\n use front::map::DefPathData;\n use middle::cstore::LOCAL_CRATE;\n use middle::def_id::DefId;\n-use middle::ty::{self, Ty, TyCtxt};\n+use ty::{self, Ty, TyCtxt};\n use syntax::ast;\n \n impl<'tcx> TyCtxt<'tcx> {", "previous_filename": "src/librustc/middle/ty/item_path.rs"}, {"sha": "b0f443fc19b4262ca2f1ee9f172a23597920a0c8", "filename": "src/librustc/ty/ivar.rs", "status": "renamed", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc%2Fty%2Fivar.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc%2Fty%2Fivar.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Fivar.rs?ref=5efdde0de161a5b374e16e20d09322e5a0eba4f9", "patch": "@@ -9,8 +9,8 @@\n // except according to those terms.\n \n use dep_graph::DepNode;\n-use middle::ty::{Ty, TyS};\n-use middle::ty::tls;\n+use ty::{Ty, TyS};\n+use ty::tls;\n \n use rustc_data_structures::ivar;\n ", "previous_filename": "src/librustc/middle/ty/ivar.rs"}, {"sha": "77b6b03e48fe95c5535930ec43f334fb80398ae4", "filename": "src/librustc/ty/maps.rs", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc%2Fty%2Fmaps.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc%2Fty%2Fmaps.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Fmaps.rs?ref=5efdde0de161a5b374e16e20d09322e5a0eba4f9", "patch": "@@ -10,7 +10,7 @@\n \n use dep_graph::{DepNode, DepTrackingMapConfig};\n use middle::def_id::DefId;\n-use middle::ty;\n+use ty;\n use std::marker::PhantomData;\n use std::rc::Rc;\n use syntax::{attr, ast};", "previous_filename": "src/librustc/middle/ty/maps.rs"}, {"sha": "96a0627c6a45f9d51503d3745f9b9fabcb877864", "filename": "src/librustc/ty/mod.rs", "status": "renamed", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc%2Fty%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc%2Fty%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Fmod.rs?ref=5efdde0de161a5b374e16e20d09322e5a0eba4f9", "patch": "@@ -27,11 +27,11 @@ use middle::def::{self, Def, ExportMap};\n use middle::def_id::DefId;\n use middle::lang_items::{FnTraitLangItem, FnMutTraitLangItem, FnOnceTraitLangItem};\n use middle::region::{CodeExtent};\n-use middle::traits;\n-use middle::ty;\n-use middle::ty::fold::TypeFolder;\n-use middle::ty::subst::{Subst, Substs, VecPerParamSpace};\n-use middle::ty::walk::TypeWalker;\n+use traits;\n+use ty;\n+use ty::fold::TypeFolder;\n+use ty::subst::{Subst, Substs, VecPerParamSpace};\n+use ty::walk::TypeWalker;\n use util::common::MemoizationMap;\n use util::nodemap::{NodeMap, NodeSet};\n use util::nodemap::FnvHashMap;", "previous_filename": "src/librustc/middle/ty/mod.rs"}, {"sha": "898c9d65c7826d5270e4a4b95d0379fb78c6555c", "filename": "src/librustc/ty/outlives.rs", "status": "renamed", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc%2Fty%2Foutlives.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc%2Fty%2Foutlives.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Foutlives.rs?ref=5efdde0de161a5b374e16e20d09322e5a0eba4f9", "patch": "@@ -12,8 +12,8 @@\n // refers to rules defined in RFC 1214 (`OutlivesFooBar`), so see that\n // RFC for reference.\n \n-use middle::infer::InferCtxt;\n-use middle::ty::{self, Ty, TypeFoldable};\n+use infer::InferCtxt;\n+use ty::{self, Ty, TypeFoldable};\n \n #[derive(Debug)]\n pub enum Component<'tcx> {", "previous_filename": "src/librustc/middle/ty/outlives.rs"}, {"sha": "bb4f13b13c1ecee3e08b7b6ca950b27286347ce2", "filename": "src/librustc/ty/relate.rs", "status": "renamed", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc%2Fty%2Frelate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc%2Fty%2Frelate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Frelate.rs?ref=5efdde0de161a5b374e16e20d09322e5a0eba4f9", "patch": "@@ -14,9 +14,9 @@\n //! type equality, etc.\n \n use middle::def_id::DefId;\n-use middle::ty::subst::{ParamSpace, Substs};\n-use middle::ty::{self, Ty, TyCtxt, TypeFoldable};\n-use middle::ty::error::{ExpectedFound, TypeError};\n+use ty::subst::{ParamSpace, Substs};\n+use ty::{self, Ty, TyCtxt, TypeFoldable};\n+use ty::error::{ExpectedFound, TypeError};\n use std::rc::Rc;\n use syntax::abi;\n use rustc_front::hir as ast;", "previous_filename": "src/librustc/middle/ty/relate.rs"}, {"sha": "6fca1eef701c042e797de808e616c5a8bdc48442", "filename": "src/librustc/ty/structural_impls.rs", "status": "renamed", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc%2Fty%2Fstructural_impls.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc%2Fty%2Fstructural_impls.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Fstructural_impls.rs?ref=5efdde0de161a5b374e16e20d09322e5a0eba4f9", "patch": "@@ -8,10 +8,10 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-use middle::ty::subst::{self, VecPerParamSpace};\n-use middle::traits;\n-use middle::ty::{self, Lift, TraitRef, Ty, TyCtxt};\n-use middle::ty::fold::{TypeFoldable, TypeFolder, TypeVisitor};\n+use ty::subst::{self, VecPerParamSpace};\n+use traits;\n+use ty::{self, Lift, TraitRef, Ty, TyCtxt};\n+use ty::fold::{TypeFoldable, TypeFolder, TypeVisitor};\n \n use std::rc::Rc;\n use syntax::abi;", "previous_filename": "src/librustc/middle/ty/structural_impls.rs"}, {"sha": "dae12824da251903d2d60e931678ef1538d10a77", "filename": "src/librustc/ty/sty.rs", "status": "renamed", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc%2Fty%2Fsty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc%2Fty%2Fsty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Fsty.rs?ref=5efdde0de161a5b374e16e20d09322e5a0eba4f9", "patch": "@@ -13,9 +13,9 @@\n use middle::cstore;\n use middle::def_id::DefId;\n use middle::region;\n-use middle::ty::subst::{self, Substs};\n-use middle::traits;\n-use middle::ty::{self, AdtDef, ToPredicate, TypeFlags, Ty, TyCtxt, TyS, TypeFoldable};\n+use ty::subst::{self, Substs};\n+use traits;\n+use ty::{self, AdtDef, ToPredicate, TypeFlags, Ty, TyCtxt, TyS, TypeFoldable};\n use util::common::ErrorReported;\n \n use collections::enum_set::{self, EnumSet, CLike};\n@@ -732,7 +732,7 @@ pub enum InferTy {\n \n     /// A `FreshTy` is one that is generated as a replacement for an\n     /// unbound type variable. This is convenient for caching etc. See\n-    /// `middle::infer::freshen` for more details.\n+    /// `infer::freshen` for more details.\n     FreshTy(u32),\n     FreshIntTy(u32),\n     FreshFloatTy(u32)", "previous_filename": "src/librustc/middle/ty/sty.rs"}, {"sha": "8d2572821210969afb6d2e864dab87409e9b94d3", "filename": "src/librustc/ty/subst.rs", "status": "renamed", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc%2Fty%2Fsubst.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc%2Fty%2Fsubst.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Fsubst.rs?ref=5efdde0de161a5b374e16e20d09322e5a0eba4f9", "patch": "@@ -14,8 +14,8 @@ pub use self::ParamSpace::*;\n \n use middle::cstore;\n use middle::def_id::DefId;\n-use middle::ty::{self, Ty, TyCtxt};\n-use middle::ty::fold::{TypeFoldable, TypeFolder};\n+use ty::{self, Ty, TyCtxt};\n+use ty::fold::{TypeFoldable, TypeFolder};\n \n use serialize::{Encodable, Encoder, Decodable, Decoder};\n use std::fmt;", "previous_filename": "src/librustc/middle/ty/subst.rs"}, {"sha": "3ebf2ba4c849fa84a65e5bb1f8091c36924c4e36", "filename": "src/librustc/ty/trait_def.rs", "status": "renamed", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc%2Fty%2Ftrait_def.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc%2Fty%2Ftrait_def.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Ftrait_def.rs?ref=5efdde0de161a5b374e16e20d09322e5a0eba4f9", "patch": "@@ -10,10 +10,10 @@\n \n use dep_graph::DepNode;\n use middle::def_id::DefId;\n-use middle::traits::{self, specialization_graph};\n-use middle::ty;\n-use middle::ty::fast_reject;\n-use middle::ty::{Ty, TyCtxt, TraitRef};\n+use traits::{self, specialization_graph};\n+use ty;\n+use ty::fast_reject;\n+use ty::{Ty, TyCtxt, TraitRef};\n use std::borrow::{Borrow};\n use std::cell::{Cell, Ref, RefCell};\n use syntax::ast::Name;", "previous_filename": "src/librustc/middle/ty/trait_def.rs"}, {"sha": "b870dc47ec76af26cfdeb3ce0f1f006fb1497250", "filename": "src/librustc/ty/util.rs", "status": "renamed", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc%2Fty%2Futil.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc%2Fty%2Futil.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Futil.rs?ref=5efdde0de161a5b374e16e20d09322e5a0eba4f9", "patch": "@@ -14,13 +14,13 @@ use back::svh::Svh;\n use middle::const_eval::{self, ConstVal, ErrKind};\n use middle::const_eval::EvalHint::UncheckedExprHint;\n use middle::def_id::DefId;\n-use middle::ty::subst;\n-use middle::infer;\n+use ty::subst;\n+use infer;\n use middle::pat_util;\n-use middle::traits::{self, ProjectionMode};\n-use middle::ty::{self, Ty, TyCtxt, TypeAndMut, TypeFlags, TypeFoldable};\n-use middle::ty::{Disr, ParameterEnvironment};\n-use middle::ty::TypeVariants::*;\n+use traits::{self, ProjectionMode};\n+use ty::{self, Ty, TyCtxt, TypeAndMut, TypeFlags, TypeFoldable};\n+use ty::{Disr, ParameterEnvironment};\n+use ty::TypeVariants::*;\n \n use rustc_const_eval::{ConstInt, ConstIsize, ConstUsize};\n ", "previous_filename": "src/librustc/middle/ty/util.rs"}, {"sha": "fa7c9b782311f955a1c4c637586c13c77be2f05e", "filename": "src/librustc/ty/walk.rs", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc%2Fty%2Fwalk.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc%2Fty%2Fwalk.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Fwalk.rs?ref=5efdde0de161a5b374e16e20d09322e5a0eba4f9", "patch": "@@ -11,7 +11,7 @@\n //! An iterator over the type substructure.\n //! WARNING: this does not keep track of the region depth.\n \n-use middle::ty::{self, Ty};\n+use ty::{self, Ty};\n use std::iter::Iterator;\n use std::vec::IntoIter;\n ", "previous_filename": "src/librustc/middle/ty/walk.rs"}, {"sha": "e6c4e90babbf575607de80628c8de975b5245e8b", "filename": "src/librustc/ty/wf.rs", "status": "renamed", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc%2Fty%2Fwf.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc%2Fty%2Fwf.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Fwf.rs?ref=5efdde0de161a5b374e16e20d09322e5a0eba4f9", "patch": "@@ -9,11 +9,11 @@\n // except according to those terms.\n \n use middle::def_id::DefId;\n-use middle::infer::InferCtxt;\n-use middle::ty::outlives::{self, Component};\n-use middle::ty::subst::Substs;\n-use middle::traits;\n-use middle::ty::{self, ToPredicate, Ty, TyCtxt, TypeFoldable};\n+use infer::InferCtxt;\n+use ty::outlives::{self, Component};\n+use ty::subst::Substs;\n+use traits;\n+use ty::{self, ToPredicate, Ty, TyCtxt, TypeFoldable};\n use std::iter::once;\n use syntax::ast;\n use syntax::codemap::Span;", "previous_filename": "src/librustc/middle/ty/wf.rs"}, {"sha": "20f16a1d255c7738f9c2377b21f6fffac9f8b016", "filename": "src/librustc/util/ppaux.rs", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc%2Futil%2Fppaux.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc%2Futil%2Fppaux.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Futil%2Fppaux.rs?ref=5efdde0de161a5b374e16e20d09322e5a0eba4f9", "patch": "@@ -10,14 +10,14 @@\n \n \n use middle::def_id::DefId;\n-use middle::ty::subst::{self, Subst};\n-use middle::ty::{BrAnon, BrEnv, BrFresh, BrNamed};\n-use middle::ty::{TyBool, TyChar, TyStruct, TyEnum};\n-use middle::ty::{TyError, TyStr, TyArray, TySlice, TyFloat, TyFnDef, TyFnPtr};\n-use middle::ty::{TyParam, TyRawPtr, TyRef, TyTuple};\n-use middle::ty::TyClosure;\n-use middle::ty::{TyBox, TyTrait, TyInt, TyUint, TyInfer};\n-use middle::ty::{self, Ty, TyCtxt, TypeFoldable};\n+use ty::subst::{self, Subst};\n+use ty::{BrAnon, BrEnv, BrFresh, BrNamed};\n+use ty::{TyBool, TyChar, TyStruct, TyEnum};\n+use ty::{TyError, TyStr, TyArray, TySlice, TyFloat, TyFnDef, TyFnPtr};\n+use ty::{TyParam, TyRawPtr, TyRef, TyTuple};\n+use ty::TyClosure;\n+use ty::{TyBox, TyTrait, TyInt, TyUint, TyInfer};\n+use ty::{self, Ty, TyCtxt, TypeFoldable};\n \n use std::fmt;\n use syntax::abi::Abi;"}, {"sha": "aa2b7ed2cdeea192ecc2732703808772dda82658", "filename": "src/librustc_borrowck/borrowck/check_loans.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc_borrowck%2Fborrowck%2Fcheck_loans.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc_borrowck%2Fborrowck%2Fcheck_loans.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_borrowck%2Fborrowck%2Fcheck_loans.rs?ref=5efdde0de161a5b374e16e20d09322e5a0eba4f9", "patch": "@@ -22,12 +22,12 @@ use borrowck::*;\n use borrowck::InteriorKind::{InteriorElement, InteriorField};\n use rustc::middle::expr_use_visitor as euv;\n use rustc::middle::expr_use_visitor::MutateMode;\n-use rustc::middle::infer;\n+use rustc::infer;\n use rustc::middle::mem_categorization as mc;\n use rustc::middle::mem_categorization::Categorization;\n use rustc::middle::region;\n-use rustc::middle::ty::{self, TyCtxt};\n-use rustc::middle::traits::ProjectionMode;\n+use rustc::ty::{self, TyCtxt};\n+use rustc::traits::ProjectionMode;\n use syntax::ast;\n use syntax::codemap::Span;\n use rustc_front::hir;"}, {"sha": "2d38b665cf90be751327f0265b6fd56e02efcf01", "filename": "src/librustc_borrowck/borrowck/fragments.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc_borrowck%2Fborrowck%2Ffragments.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc_borrowck%2Fborrowck%2Ffragments.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_borrowck%2Fborrowck%2Ffragments.rs?ref=5efdde0de161a5b374e16e20d09322e5a0eba4f9", "patch": "@@ -21,7 +21,7 @@ use borrowck::LoanPathElem::{LpDeref, LpInterior};\n use borrowck::move_data::InvalidMovePathIndex;\n use borrowck::move_data::{MoveData, MovePathIndex};\n use rustc::middle::def_id::{DefId};\n-use rustc::middle::ty::{self, TyCtxt};\n+use rustc::ty::{self, TyCtxt};\n use rustc::middle::mem_categorization as mc;\n \n use std::mem;"}, {"sha": "107109c91154bf7eb73224bcf42a3f8f8eee0198", "filename": "src/librustc_borrowck/borrowck/gather_loans/gather_moves.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc_borrowck%2Fborrowck%2Fgather_loans%2Fgather_moves.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc_borrowck%2Fborrowck%2Fgather_loans%2Fgather_moves.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_borrowck%2Fborrowck%2Fgather_loans%2Fgather_moves.rs?ref=5efdde0de161a5b374e16e20d09322e5a0eba4f9", "patch": "@@ -18,7 +18,7 @@ use rustc::middle::expr_use_visitor as euv;\n use rustc::middle::mem_categorization as mc;\n use rustc::middle::mem_categorization::Categorization;\n use rustc::middle::mem_categorization::InteriorOffsetKind as Kind;\n-use rustc::middle::ty;\n+use rustc::ty;\n \n use std::rc::Rc;\n use syntax::ast;"}, {"sha": "c2492bba6247330c0cb6ca9d30a8477c7d596c71", "filename": "src/librustc_borrowck/borrowck/gather_loans/lifetime.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc_borrowck%2Fborrowck%2Fgather_loans%2Flifetime.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc_borrowck%2Fborrowck%2Fgather_loans%2Flifetime.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_borrowck%2Fborrowck%2Fgather_loans%2Flifetime.rs?ref=5efdde0de161a5b374e16e20d09322e5a0eba4f9", "patch": "@@ -16,7 +16,7 @@ use rustc::middle::expr_use_visitor as euv;\n use rustc::middle::mem_categorization as mc;\n use rustc::middle::mem_categorization::Categorization;\n use rustc::middle::region;\n-use rustc::middle::ty;\n+use rustc::ty;\n \n use syntax::ast;\n use syntax::codemap::Span;"}, {"sha": "247f8121de797bbe2734c6c54779a70aec792a46", "filename": "src/librustc_borrowck/borrowck/gather_loans/mod.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc_borrowck%2Fborrowck%2Fgather_loans%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc_borrowck%2Fborrowck%2Fgather_loans%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_borrowck%2Fborrowck%2Fgather_loans%2Fmod.rs?ref=5efdde0de161a5b374e16e20d09322e5a0eba4f9", "patch": "@@ -19,12 +19,12 @@\n use borrowck::*;\n use borrowck::move_data::MoveData;\n use rustc::middle::expr_use_visitor as euv;\n-use rustc::middle::infer;\n+use rustc::infer;\n use rustc::middle::mem_categorization as mc;\n use rustc::middle::mem_categorization::Categorization;\n use rustc::middle::region;\n-use rustc::middle::ty::{self, TyCtxt};\n-use rustc::middle::traits::ProjectionMode;\n+use rustc::ty::{self, TyCtxt};\n+use rustc::traits::ProjectionMode;\n \n use syntax::ast;\n use syntax::codemap::Span;"}, {"sha": "f49554289b3ee26826ee3ec107e5d3488ab96252", "filename": "src/librustc_borrowck/borrowck/gather_loans/move_error.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc_borrowck%2Fborrowck%2Fgather_loans%2Fmove_error.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc_borrowck%2Fborrowck%2Fgather_loans%2Fmove_error.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_borrowck%2Fborrowck%2Fgather_loans%2Fmove_error.rs?ref=5efdde0de161a5b374e16e20d09322e5a0eba4f9", "patch": "@@ -12,7 +12,7 @@ use borrowck::BorrowckCtxt;\n use rustc::middle::mem_categorization as mc;\n use rustc::middle::mem_categorization::Categorization;\n use rustc::middle::mem_categorization::InteriorOffsetKind as Kind;\n-use rustc::middle::ty;\n+use rustc::ty;\n use syntax::ast;\n use syntax::codemap;\n use syntax::errors::DiagnosticBuilder;"}, {"sha": "ee8c3aff2ec80545f6c229fe8cb043c3420f0856", "filename": "src/librustc_borrowck/borrowck/gather_loans/restrictions.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc_borrowck%2Fborrowck%2Fgather_loans%2Frestrictions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc_borrowck%2Fborrowck%2Fgather_loans%2Frestrictions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_borrowck%2Fborrowck%2Fgather_loans%2Frestrictions.rs?ref=5efdde0de161a5b374e16e20d09322e5a0eba4f9", "patch": "@@ -14,7 +14,7 @@ use borrowck::*;\n use rustc::middle::expr_use_visitor as euv;\n use rustc::middle::mem_categorization as mc;\n use rustc::middle::mem_categorization::Categorization;\n-use rustc::middle::ty;\n+use rustc::ty;\n use syntax::codemap::Span;\n \n use borrowck::ToInteriorKind;"}, {"sha": "a8176c060a10403b664469a60149b7b5d4077405", "filename": "src/librustc_borrowck/borrowck/mir/dataflow.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc_borrowck%2Fborrowck%2Fmir%2Fdataflow.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc_borrowck%2Fborrowck%2Fmir%2Fdataflow.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_borrowck%2Fborrowck%2Fmir%2Fdataflow.rs?ref=5efdde0de161a5b374e16e20d09322e5a0eba4f9", "patch": "@@ -10,7 +10,7 @@\n \n use syntax::attr::AttrMetaMethods;\n \n-use rustc::middle::ty;\n+use rustc::ty::TyCtxt;\n use rustc::mir::repr::{self, Mir};\n \n use std::io;\n@@ -459,7 +459,7 @@ impl<D: BitDenotation> DataflowState<D> {\n \n \n impl<'tcx> DataflowState<MoveData<'tcx>> {\n-    pub fn new_move_analysis(mir: &Mir<'tcx>, tcx: &ty::TyCtxt<'tcx>) -> Self {\n+    pub fn new_move_analysis(mir: &Mir<'tcx>, tcx: &TyCtxt<'tcx>) -> Self {\n         let move_data = MoveData::gather_moves(mir, tcx);\n         DataflowState::new(mir, move_data)\n     }"}, {"sha": "dbe58799341584e6d372452d3bcb6603fcb1352b", "filename": "src/librustc_borrowck/borrowck/mir/gather_moves.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc_borrowck%2Fborrowck%2Fmir%2Fgather_moves.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc_borrowck%2Fborrowck%2Fmir%2Fgather_moves.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_borrowck%2Fborrowck%2Fmir%2Fgather_moves.rs?ref=5efdde0de161a5b374e16e20d09322e5a0eba4f9", "patch": "@@ -9,7 +9,7 @@\n // except according to those terms.\n \n \n-use rustc::middle::ty::TyCtxt;\n+use rustc::ty::TyCtxt;\n use rustc::mir::repr::*;\n use rustc::util::nodemap::FnvHashMap;\n "}, {"sha": "d985359a3dd211aa5c8f263c5b4adb7ecbfa7130", "filename": "src/librustc_borrowck/borrowck/mod.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc_borrowck%2Fborrowck%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc_borrowck%2Fborrowck%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_borrowck%2Fborrowck%2Fmod.rs?ref=5efdde0de161a5b374e16e20d09322e5a0eba4f9", "patch": "@@ -23,7 +23,7 @@ use self::InteriorKind::*;\n use rustc::dep_graph::DepNode;\n use rustc::front::map as hir_map;\n use rustc::front::map::blocks::FnParts;\n-use rustc::middle::cfg;\n+use rustc::cfg;\n use rustc::middle::dataflow::DataFlowContext;\n use rustc::middle::dataflow::BitwiseOperator;\n use rustc::middle::dataflow::DataFlowOperator;\n@@ -34,7 +34,7 @@ use rustc::middle::free_region::FreeRegionMap;\n use rustc::middle::mem_categorization as mc;\n use rustc::middle::mem_categorization::Categorization;\n use rustc::middle::region;\n-use rustc::middle::ty::{self, Ty, TyCtxt};\n+use rustc::ty::{self, Ty, TyCtxt};\n \n use std::fmt;\n use std::mem;"}, {"sha": "00274fe1a040c02ba8507fe2f7908b0c7089f7bd", "filename": "src/librustc_borrowck/borrowck/move_data.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc_borrowck%2Fborrowck%2Fmove_data.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc_borrowck%2Fborrowck%2Fmove_data.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_borrowck%2Fborrowck%2Fmove_data.rs?ref=5efdde0de161a5b374e16e20d09322e5a0eba4f9", "patch": "@@ -14,14 +14,14 @@\n pub use self::MoveKind::*;\n \n use borrowck::*;\n-use rustc::middle::cfg;\n+use rustc::cfg;\n use rustc::middle::dataflow::DataFlowContext;\n use rustc::middle::dataflow::BitwiseOperator;\n use rustc::middle::dataflow::DataFlowOperator;\n use rustc::middle::dataflow::KillFrom;\n use rustc::middle::expr_use_visitor as euv;\n use rustc::middle::expr_use_visitor::MutateMode;\n-use rustc::middle::ty::TyCtxt;\n+use rustc::ty::TyCtxt;\n use rustc::util::nodemap::{FnvHashMap, NodeSet};\n \n use std::cell::RefCell;"}, {"sha": "0da9525efd8566e53520961e8b4addd8e9231a94", "filename": "src/librustc_borrowck/graphviz.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc_borrowck%2Fgraphviz.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc_borrowck%2Fgraphviz.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_borrowck%2Fgraphviz.rs?ref=5efdde0de161a5b374e16e20d09322e5a0eba4f9", "patch": "@@ -14,13 +14,13 @@\n \n pub use self::Variant::*;\n \n-pub use rustc::middle::cfg::graphviz::{Node, Edge};\n-use rustc::middle::cfg::graphviz as cfg_dot;\n+pub use rustc::cfg::graphviz::{Node, Edge};\n+use rustc::cfg::graphviz as cfg_dot;\n \n use borrowck;\n use borrowck::{BorrowckCtxt, LoanPath};\n use dot;\n-use rustc::middle::cfg::CFGIndex;\n+use rustc::cfg::CFGIndex;\n use rustc::middle::dataflow::{DataFlowOperator, DataFlowContext, EntryOrExit};\n use std::rc::Rc;\n use dot::IntoCow;"}, {"sha": "11ee2a4fbc30f4f8b5ac4f960e925c859dce9ccf", "filename": "src/librustc_driver/driver.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc_driver%2Fdriver.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc_driver%2Fdriver.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_driver%2Fdriver.rs?ref=5efdde0de161a5b374e16e20d09322e5a0eba4f9", "patch": "@@ -17,9 +17,9 @@ use rustc::session::{Session, CompileResult, compile_result_from_err_count};\n use rustc::session::config::{self, Input, OutputFilenames, OutputType};\n use rustc::session::search_paths::PathKind;\n use rustc::lint;\n-use rustc::middle::{self, dependency_format, stability, ty, reachable};\n+use rustc::middle::{self, dependency_format, stability, reachable};\n use rustc::middle::privacy::AccessLevels;\n-use rustc::middle::ty::TyCtxt;\n+use rustc::ty::{self, TyCtxt};\n use rustc::util::common::time;\n use rustc::util::nodemap::NodeSet;\n use rustc_back::sha2::{Sha256, Digest};"}, {"sha": "31345cfdc41abe19e7394319b8ff4911884f8678", "filename": "src/librustc_driver/pretty.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc_driver%2Fpretty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc_driver%2Fpretty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_driver%2Fpretty.rs?ref=5efdde0de161a5b374e16e20d09322e5a0eba4f9", "patch": "@@ -20,9 +20,9 @@ use rustc_trans::back::link;\n use {driver, abort_on_err};\n \n use rustc::dep_graph::DepGraph;\n-use rustc::middle::ty::{self, TyCtxt};\n-use rustc::middle::cfg;\n-use rustc::middle::cfg::graphviz::LabelledCFG;\n+use rustc::ty::{self, TyCtxt};\n+use rustc::cfg;\n+use rustc::cfg::graphviz::LabelledCFG;\n use rustc::session::Session;\n use rustc::session::config::Input;\n use rustc_borrowck as borrowck;"}, {"sha": "8620d5e1fd03cd601813834c098137c121abb6af", "filename": "src/librustc_driver/test.rs", "status": "modified", "additions": 15, "deletions": 15, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc_driver%2Ftest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc_driver%2Ftest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_driver%2Ftest.rs?ref=5efdde0de161a5b374e16e20d09322e5a0eba4f9", "patch": "@@ -14,21 +14,21 @@ use driver;\n use rustc::dep_graph::DepGraph;\n use rustc_lint;\n use rustc_resolve as resolve;\n-use rustc_typeck::middle::lang_items;\n-use rustc_typeck::middle::free_region::FreeRegionMap;\n-use rustc_typeck::middle::region::{self, CodeExtent};\n-use rustc_typeck::middle::region::CodeExtentData;\n-use rustc_typeck::middle::resolve_lifetime;\n-use rustc_typeck::middle::stability;\n-use rustc_typeck::middle::ty::subst;\n-use rustc_typeck::middle::ty::subst::Subst;\n-use rustc_typeck::middle::traits::ProjectionMode;\n-use rustc_typeck::middle::ty::{self, Ty, TyCtxt, TypeFoldable};\n-use rustc_typeck::middle::ty::relate::TypeRelation;\n-use rustc_typeck::middle::infer::{self, TypeOrigin};\n-use rustc_typeck::middle::infer::lub::Lub;\n-use rustc_typeck::middle::infer::glb::Glb;\n-use rustc_typeck::middle::infer::sub::Sub;\n+use rustc::middle::lang_items;\n+use rustc::middle::free_region::FreeRegionMap;\n+use rustc::middle::region::{self, CodeExtent};\n+use rustc::middle::region::CodeExtentData;\n+use rustc::middle::resolve_lifetime;\n+use rustc::middle::stability;\n+use rustc::ty::subst;\n+use rustc::ty::subst::Subst;\n+use rustc::traits::ProjectionMode;\n+use rustc::ty::{self, Ty, TyCtxt, TypeFoldable};\n+use rustc::ty::relate::TypeRelation;\n+use rustc::infer::{self, TypeOrigin};\n+use rustc::infer::lub::Lub;\n+use rustc::infer::glb::Glb;\n+use rustc::infer::sub::Sub;\n use rustc_metadata::cstore::CStore;\n use rustc::front::map as hir_map;\n use rustc::session::{self, config};"}, {"sha": "66d435a7581d98915fec3116ffb4fe3f7e4414f6", "filename": "src/librustc_lint/bad_style.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc_lint%2Fbad_style.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc_lint%2Fbad_style.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_lint%2Fbad_style.rs?ref=5efdde0de161a5b374e16e20d09322e5a0eba4f9", "patch": "@@ -9,7 +9,7 @@\n // except according to those terms.\n \n use middle::def::Def;\n-use middle::ty;\n+use rustc::ty;\n use lint::{LateContext, LintContext, LintArray};\n use lint::{LintPass, LateLintPass};\n "}, {"sha": "339c969b01fcdb84e677ff2a1e0d411d60e20fb1", "filename": "src/librustc_lint/builtin.rs", "status": "modified", "additions": 6, "deletions": 5, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc_lint%2Fbuiltin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc_lint%2Fbuiltin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_lint%2Fbuiltin.rs?ref=5efdde0de161a5b374e16e20d09322e5a0eba4f9", "patch": "@@ -28,14 +28,15 @@\n //! Use the former for unit-like structs and the latter for structs with\n //! a `pub fn new()`.\n \n-use middle::{cfg, infer, stability, traits};\n use middle::def::Def;\n use middle::cstore::CrateStore;\n use middle::def_id::DefId;\n-use middle::ty::subst::Substs;\n-use middle::ty::{self, Ty, TyCtxt};\n-use middle::ty::adjustment;\n-use middle::traits::ProjectionMode;\n+use middle::stability;\n+use rustc::{cfg, infer};\n+use rustc::ty::subst::Substs;\n+use rustc::ty::{self, Ty, TyCtxt};\n+use rustc::ty::adjustment;\n+use rustc::traits::{self, ProjectionMode};\n use rustc::front::map as hir_map;\n use util::nodemap::{NodeSet};\n use lint::{Level, LateContext, LintContext, LintArray, Lint};"}, {"sha": "6322f592573106de44528617df6335035a1ebfd2", "filename": "src/librustc_lint/types.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc_lint%2Ftypes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc_lint%2Ftypes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_lint%2Ftypes.rs?ref=5efdde0de161a5b374e16e20d09322e5a0eba4f9", "patch": "@@ -10,10 +10,10 @@\n \n #![allow(non_snake_case)]\n \n-use middle::{infer};\n use middle::def_id::DefId;\n-use middle::ty::subst::Substs;\n-use middle::ty::{self, Ty, TyCtxt};\n+use rustc::infer;\n+use rustc::ty::subst::Substs;\n+use rustc::ty::{self, Ty, TyCtxt};\n use middle::const_eval::{eval_const_expr_partial, ConstVal};\n use middle::const_eval::EvalHint::ExprTypeChecked;\n use util::nodemap::{FnvHashSet};"}, {"sha": "9840cd4256fcf6ea6b21c4264d20f0f8806f5bd3", "filename": "src/librustc_lint/unused.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc_lint%2Funused.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc_lint%2Funused.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_lint%2Funused.rs?ref=5efdde0de161a5b374e16e20d09322e5a0eba4f9", "patch": "@@ -9,8 +9,8 @@\n // except according to those terms.\n \n use middle::pat_util;\n-use middle::ty;\n-use middle::ty::adjustment;\n+use rustc::ty;\n+use rustc::ty::adjustment;\n use util::nodemap::FnvHashMap;\n use lint::{LateContext, EarlyContext, LintContext, LintArray};\n use lint::{LintPass, EarlyLintPass, LateLintPass};"}, {"sha": "60865888a54183b869d88e53eb7d661c5deb6142", "filename": "src/librustc_metadata/astencode.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc_metadata%2Fastencode.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc_metadata%2Fastencode.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_metadata%2Fastencode.rs?ref=5efdde0de161a5b374e16e20d09322e5a0eba4f9", "patch": "@@ -27,14 +27,14 @@ use tydecode;\n use tyencode;\n \n use middle::cstore::{InlinedItem, InlinedItemRef};\n-use middle::ty::adjustment;\n-use middle::ty::cast;\n+use rustc::ty::adjustment;\n+use rustc::ty::cast;\n use middle::const_qualif::ConstQualif;\n use middle::def::{self, Def};\n use middle::def_id::DefId;\n use middle::region;\n-use middle::ty::subst;\n-use middle::ty::{self, Ty, TyCtxt};\n+use rustc::ty::subst;\n+use rustc::ty::{self, Ty, TyCtxt};\n \n use syntax::{ast, ast_util, codemap};\n use syntax::ast::NodeIdAssigner;"}, {"sha": "b11423932683858cc6a766e778d947d3da818d8d", "filename": "src/librustc_metadata/csearch.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc_metadata%2Fcsearch.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc_metadata%2Fcsearch.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_metadata%2Fcsearch.rs?ref=5efdde0de161a5b374e16e20d09322e5a0eba4f9", "patch": "@@ -17,7 +17,7 @@ use middle::cstore::{CrateStore, CrateSource, ChildItem, ExternCrate, FoundAst};\n use middle::cstore::{NativeLibraryKind, LinkMeta, LinkagePreference};\n use middle::def;\n use middle::lang_items;\n-use middle::ty::{self, Ty, TyCtxt, VariantKind};\n+use rustc::ty::{self, Ty, TyCtxt, VariantKind};\n use middle::def_id::{DefId, DefIndex};\n \n use rustc::front::map as hir_map;"}, {"sha": "e6f516ccd33bd3c8d15b315153a0dada47d59bfd", "filename": "src/librustc_metadata/decoder.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc_metadata%2Fdecoder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc_metadata%2Fdecoder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_metadata%2Fdecoder.rs?ref=5efdde0de161a5b374e16e20d09322e5a0eba4f9", "patch": "@@ -32,9 +32,9 @@ use middle::cstore::{DefLike, DlDef, DlField, DlImpl, tls};\n use middle::def::Def;\n use middle::def_id::{DefId, DefIndex};\n use middle::lang_items;\n-use middle::ty::subst;\n-use middle::ty::{ImplContainer, TraitContainer};\n-use middle::ty::{self, Ty, TyCtxt, TypeFoldable, VariantKind};\n+use rustc::ty::subst;\n+use rustc::ty::{ImplContainer, TraitContainer};\n+use rustc::ty::{self, Ty, TyCtxt, TypeFoldable, VariantKind};\n \n use rustc_const_eval::ConstInt;\n "}, {"sha": "0a23cdee23d6e618e18e98a98457655936f0b4a7", "filename": "src/librustc_metadata/encoder.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc_metadata%2Fencoder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc_metadata%2Fencoder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_metadata%2Fencoder.rs?ref=5efdde0de161a5b374e16e20d09322e5a0eba4f9", "patch": "@@ -25,10 +25,10 @@ use middle::def;\n use middle::def_id::{CRATE_DEF_INDEX, DefId};\n use middle::dependency_format::Linkage;\n use middle::stability;\n-use middle::ty::subst;\n-use middle::traits::specialization_graph;\n-use middle::ty::{self, Ty, TyCtxt};\n-use middle::ty::util::IntTypeExt;\n+use rustc::ty::subst;\n+use rustc::traits::specialization_graph;\n+use rustc::ty::{self, Ty, TyCtxt};\n+use rustc::ty::util::IntTypeExt;\n \n use rustc::back::svh::Svh;\n use rustc::front::map::{LinkedPath, PathElem, PathElems};"}, {"sha": "6ecd7a7f50ad883315d2b077609e240c143e105e", "filename": "src/librustc_metadata/tls_context.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc_metadata%2Ftls_context.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc_metadata%2Ftls_context.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_metadata%2Ftls_context.rs?ref=5efdde0de161a5b374e16e20d09322e5a0eba4f9", "patch": "@@ -15,8 +15,8 @@ use rbml::opaque::Encoder as OpaqueEncoder;\n use rbml::opaque::Decoder as OpaqueDecoder;\n use rustc::middle::cstore::tls;\n use rustc::middle::def_id::DefId;\n-use rustc::middle::ty::subst::Substs;\n-use rustc::middle::ty::{self, TyCtxt};\n+use rustc::ty::subst::Substs;\n+use rustc::ty::{self, TyCtxt};\n \n use decoder::{self, Cmd};\n use encoder;"}, {"sha": "ed59fce77a02cc721d836c2eb83a8daeabd4d34d", "filename": "src/librustc_metadata/tydecode.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc_metadata%2Ftydecode.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc_metadata%2Ftydecode.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_metadata%2Ftydecode.rs?ref=5efdde0de161a5b374e16e20d09322e5a0eba4f9", "patch": "@@ -20,9 +20,9 @@ use rustc_front::hir;\n \n use middle::def_id::{DefId, DefIndex};\n use middle::region;\n-use middle::ty::subst;\n-use middle::ty::subst::VecPerParamSpace;\n-use middle::ty::{self, ToPredicate, Ty, TyCtxt, TypeFoldable};\n+use rustc::ty::subst;\n+use rustc::ty::subst::VecPerParamSpace;\n+use rustc::ty::{self, ToPredicate, Ty, TyCtxt, TypeFoldable};\n \n use rbml;\n use rbml::leb128;"}, {"sha": "1d57918d1734f38429b68ecfe7bd351d43e40a1a", "filename": "src/librustc_metadata/tyencode.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc_metadata%2Ftyencode.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc_metadata%2Ftyencode.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_metadata%2Ftyencode.rs?ref=5efdde0de161a5b374e16e20d09322e5a0eba4f9", "patch": "@@ -19,10 +19,10 @@ use std::io::prelude::*;\n \n use middle::def_id::DefId;\n use middle::region;\n-use middle::ty::subst;\n-use middle::ty::subst::VecPerParamSpace;\n-use middle::ty::ParamTy;\n-use middle::ty::{self, Ty, TyCtxt};\n+use rustc::ty::subst;\n+use rustc::ty::subst::VecPerParamSpace;\n+use rustc::ty::ParamTy;\n+use rustc::ty::{self, Ty, TyCtxt};\n use rustc::util::nodemap::FnvHashMap;\n \n use rustc_front::hir;"}, {"sha": "231d7da10a02dc53ad2e8615f6a5b0e388167e93", "filename": "src/librustc_mir/build/expr/into.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc_mir%2Fbuild%2Fexpr%2Finto.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc_mir%2Fbuild%2Fexpr%2Finto.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fbuild%2Fexpr%2Finto.rs?ref=5efdde0de161a5b374e16e20d09322e5a0eba4f9", "patch": "@@ -15,7 +15,7 @@ use build::expr::category::{Category, RvalueFunc};\n use build::scope::LoopScope;\n use hair::*;\n use rustc::middle::region::CodeExtent;\n-use rustc::middle::ty;\n+use rustc::ty;\n use rustc::mir::repr::*;\n use syntax::codemap::Span;\n "}, {"sha": "581e8e35ee89f458f5ef4838bb49de231be2d283", "filename": "src/librustc_mir/build/matches/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc_mir%2Fbuild%2Fmatches%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc_mir%2Fbuild%2Fmatches%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fbuild%2Fmatches%2Fmod.rs?ref=5efdde0de161a5b374e16e20d09322e5a0eba4f9", "patch": "@@ -16,7 +16,7 @@\n use build::{BlockAnd, BlockAndExtension, Builder};\n use rustc_data_structures::fnv::FnvHashMap;\n use rustc::middle::const_eval::ConstVal;\n-use rustc::middle::ty::{AdtDef, Ty};\n+use rustc::ty::{AdtDef, Ty};\n use rustc::mir::repr::*;\n use hair::*;\n use syntax::ast::{Name, NodeId};"}, {"sha": "5a1c3739ef5f0f474b7669a384415a57233c982e", "filename": "src/librustc_mir/build/matches/test.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc_mir%2Fbuild%2Fmatches%2Ftest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc_mir%2Fbuild%2Fmatches%2Ftest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fbuild%2Fmatches%2Ftest.rs?ref=5efdde0de161a5b374e16e20d09322e5a0eba4f9", "patch": "@@ -20,7 +20,7 @@ use build::matches::{Candidate, MatchPair, Test, TestKind};\n use hair::*;\n use rustc_data_structures::fnv::FnvHashMap;\n use rustc::middle::const_eval::ConstVal;\n-use rustc::middle::ty::{self, Ty};\n+use rustc::ty::{self, Ty};\n use rustc::mir::repr::*;\n use syntax::codemap::Span;\n "}, {"sha": "86f15a6319399cac89d9c90d07db6dd71b5b15af", "filename": "src/librustc_mir/build/misc.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc_mir%2Fbuild%2Fmisc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc_mir%2Fbuild%2Fmisc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fbuild%2Fmisc.rs?ref=5efdde0de161a5b374e16e20d09322e5a0eba4f9", "patch": "@@ -12,7 +12,7 @@\n //! kind of thing.\n \n use build::Builder;\n-use rustc::middle::ty::Ty;\n+use rustc::ty::Ty;\n use rustc::mir::repr::*;\n use std::u32;\n use syntax::codemap::Span;"}, {"sha": "82f7ddebf0bcef52f5ef2de443961cf60a2e9698", "filename": "src/librustc_mir/build/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc_mir%2Fbuild%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc_mir%2Fbuild%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fbuild%2Fmod.rs?ref=5efdde0de161a5b374e16e20d09322e5a0eba4f9", "patch": "@@ -10,7 +10,7 @@\n \n use hair::cx::Cx;\n use rustc::middle::region::{CodeExtent, CodeExtentData};\n-use rustc::middle::ty::{FnOutput, Ty};\n+use rustc::ty::{FnOutput, Ty};\n use rustc::mir::repr::*;\n use rustc_data_structures::fnv::FnvHashMap;\n use rustc_front::hir;"}, {"sha": "bac7b310dc701b3463aa1e87e5b9ccccf93e250f", "filename": "src/librustc_mir/build/scope.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc_mir%2Fbuild%2Fscope.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc_mir%2Fbuild%2Fscope.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fbuild%2Fscope.rs?ref=5efdde0de161a5b374e16e20d09322e5a0eba4f9", "patch": "@@ -89,8 +89,8 @@ should go to.\n use build::{BlockAnd, BlockAndExtension, Builder, CFG, ScopeAuxiliary};\n use rustc::middle::region::{CodeExtent, CodeExtentData};\n use rustc::middle::lang_items;\n-use rustc::middle::ty::subst::{Substs, Subst, VecPerParamSpace};\n-use rustc::middle::ty::{self, Ty, TyCtxt};\n+use rustc::ty::subst::{Substs, Subst, VecPerParamSpace};\n+use rustc::ty::{self, Ty, TyCtxt};\n use rustc::mir::repr::*;\n use syntax::codemap::{Span, DUMMY_SP};\n use syntax::parse::token::intern_and_get_ident;"}, {"sha": "959b1fdef52709ef4389ad6d0b8d77774988df7f", "filename": "src/librustc_mir/graphviz.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc_mir%2Fgraphviz.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc_mir%2Fgraphviz.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fgraphviz.rs?ref=5efdde0de161a5b374e16e20d09322e5a0eba4f9", "patch": "@@ -10,7 +10,7 @@\n \n use dot;\n use rustc::mir::repr::*;\n-use rustc::middle::ty;\n+use rustc::ty;\n use std::fmt::Debug;\n use std::io::{self, Write};\n use syntax::ast::NodeId;"}, {"sha": "aa55ee3e3f72913ed73894a589ff5bd4fe6650a9", "filename": "src/librustc_mir/hair/cx/expr.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc_mir%2Fhair%2Fcx%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc_mir%2Fhair%2Fcx%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fhair%2Fcx%2Fexpr.rs?ref=5efdde0de161a5b374e16e20d09322e5a0eba4f9", "patch": "@@ -19,7 +19,7 @@ use rustc::middle::def::Def;\n use rustc::middle::const_eval::{self, ConstVal};\n use rustc::middle::region::CodeExtent;\n use rustc::middle::pat_util;\n-use rustc::middle::ty::{self, VariantDef, Ty};\n+use rustc::ty::{self, VariantDef, Ty};\n use rustc::mir::repr::*;\n use rustc_front::hir;\n use rustc_front::util as hir_util;"}, {"sha": "30467a981d91444cbf18f40f8cb1d28ee4c4a6fd", "filename": "src/librustc_mir/hair/cx/mod.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc_mir%2Fhair%2Fcx%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc_mir%2Fhair%2Fcx%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fhair%2Fcx%2Fmod.rs?ref=5efdde0de161a5b374e16e20d09322e5a0eba4f9", "patch": "@@ -20,9 +20,9 @@ use rustc::mir::repr::*;\n \n use rustc::middle::const_eval::{self, ConstVal};\n use rustc::middle::def_id::DefId;\n-use rustc::middle::infer::InferCtxt;\n-use rustc::middle::ty::subst::{Subst, Substs};\n-use rustc::middle::ty::{self, Ty, TyCtxt};\n+use rustc::infer::InferCtxt;\n+use rustc::ty::subst::{Subst, Substs};\n+use rustc::ty::{self, Ty, TyCtxt};\n use syntax::codemap::Span;\n use syntax::parse::token;\n use rustc_front::hir;"}, {"sha": "0cb849555f24bb5de4774ee3416e57c5ad3292b1", "filename": "src/librustc_mir/hair/cx/pattern.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc_mir%2Fhair%2Fcx%2Fpattern.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc_mir%2Fhair%2Fcx%2Fpattern.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fhair%2Fcx%2Fpattern.rs?ref=5efdde0de161a5b374e16e20d09322e5a0eba4f9", "patch": "@@ -14,7 +14,7 @@ use rustc_data_structures::fnv::FnvHashMap;\n use rustc::middle::const_eval;\n use rustc::middle::def::Def;\n use rustc::middle::pat_util::{pat_is_resolved_const, pat_is_binding};\n-use rustc::middle::ty::{self, Ty};\n+use rustc::ty::{self, Ty};\n use rustc::mir::repr::*;\n use rustc_front::hir::{self, PatKind};\n use syntax::ast;"}, {"sha": "79c8356bb557ae36eaa807201a5a5e01f9b40a49", "filename": "src/librustc_mir/hair/mod.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc_mir%2Fhair%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc_mir%2Fhair%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fhair%2Fmod.rs?ref=5efdde0de161a5b374e16e20d09322e5a0eba4f9", "patch": "@@ -19,8 +19,8 @@ use rustc::mir::repr::{BinOp, BorrowKind, Field, Literal, Mutability, UnOp,\n use rustc::middle::const_eval::ConstVal;\n use rustc::middle::def_id::DefId;\n use rustc::middle::region::CodeExtent;\n-use rustc::middle::ty::subst::Substs;\n-use rustc::middle::ty::{self, AdtDef, ClosureSubsts, Region, Ty};\n+use rustc::ty::subst::Substs;\n+use rustc::ty::{self, AdtDef, ClosureSubsts, Region, Ty};\n use rustc_front::hir;\n use syntax::ast;\n use syntax::codemap::Span;"}, {"sha": "21cc8d35320a3e1044212b03ff152344ab5d0cc8", "filename": "src/librustc_mir/mir_map.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc_mir%2Fmir_map.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc_mir%2Fmir_map.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fmir_map.rs?ref=5efdde0de161a5b374e16e20d09322e5a0eba4f9", "patch": "@@ -26,9 +26,9 @@ use pretty;\n use hair::cx::Cx;\n \n use rustc::mir::mir_map::MirMap;\n-use rustc::middle::infer;\n-use rustc::middle::traits::ProjectionMode;\n-use rustc::middle::ty::{self, Ty, TyCtxt};\n+use rustc::infer;\n+use rustc::traits::ProjectionMode;\n+use rustc::ty::{self, Ty, TyCtxt};\n use rustc::util::common::ErrorReported;\n use rustc::util::nodemap::NodeMap;\n use rustc_front::hir;"}, {"sha": "2c50697c37f6980a4a926a33a39de2160d4aa183", "filename": "src/librustc_mir/pretty.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc_mir%2Fpretty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc_mir%2Fpretty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fpretty.rs?ref=5efdde0de161a5b374e16e20d09322e5a0eba4f9", "patch": "@@ -10,7 +10,7 @@\n \n use build::{Location, ScopeAuxiliaryVec};\n use rustc::mir::repr::*;\n-use rustc::middle::ty::{self, TyCtxt};\n+use rustc::ty::{self, TyCtxt};\n use rustc_data_structures::fnv::FnvHashMap;\n use std::fmt::Display;\n use std::fs;"}, {"sha": "12bfa3aebc2017ebf0f4c443529f7f586a483a3a", "filename": "src/librustc_mir/transform/erase_regions.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc_mir%2Ftransform%2Ferase_regions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc_mir%2Ftransform%2Ferase_regions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Ferase_regions.rs?ref=5efdde0de161a5b374e16e20d09322e5a0eba4f9", "patch": "@@ -12,8 +12,8 @@\n //! We want to do this once just before trans, so trans does not have to take\n //! care erasing regions all over the place.\n \n-use rustc::middle::subst::Substs;\n-use rustc::middle::ty::{Ty, TyCtxt};\n+use rustc::ty::subst::Substs;\n+use rustc::ty::{Ty, TyCtxt};\n use rustc::mir::repr::*;\n use rustc::mir::visit::MutVisitor;\n use rustc::mir::transform::{MirPass, Pass};"}, {"sha": "edfe75b8430d4910f33ae16616b662768715885f", "filename": "src/librustc_mir/transform/no_landing_pads.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc_mir%2Ftransform%2Fno_landing_pads.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc_mir%2Ftransform%2Fno_landing_pads.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Fno_landing_pads.rs?ref=5efdde0de161a5b374e16e20d09322e5a0eba4f9", "patch": "@@ -11,7 +11,7 @@\n //! This pass removes the unwind branch of all the terminators when the no-landing-pads option is\n //! specified.\n \n-use rustc::middle::ty::TyCtxt;\n+use rustc::ty::TyCtxt;\n use rustc::mir::repr::*;\n use rustc::mir::visit::MutVisitor;\n use rustc::mir::transform::{Pass, MirPass};"}, {"sha": "dc1ddad124f8783307292205f7001c838d7f35bd", "filename": "src/librustc_mir/transform/remove_dead_blocks.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc_mir%2Ftransform%2Fremove_dead_blocks.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc_mir%2Ftransform%2Fremove_dead_blocks.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Fremove_dead_blocks.rs?ref=5efdde0de161a5b374e16e20d09322e5a0eba4f9", "patch": "@@ -33,7 +33,7 @@\n //! and does not renumber anything.\n \n use rustc_data_structures::bitvec::BitVector;\n-use rustc::middle::ty::TyCtxt;\n+use rustc::ty::TyCtxt;\n use rustc::mir::repr::*;\n use rustc::mir::transform::{Pass, MirPass};\n use syntax::ast::NodeId;"}, {"sha": "cbde292cb995be3338800c48bc277147a0472b91", "filename": "src/librustc_mir/transform/simplify_cfg.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc_mir%2Ftransform%2Fsimplify_cfg.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc_mir%2Ftransform%2Fsimplify_cfg.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Fsimplify_cfg.rs?ref=5efdde0de161a5b374e16e20d09322e5a0eba4f9", "patch": "@@ -9,7 +9,7 @@\n // except according to those terms.\n \n use rustc::middle::const_eval::ConstVal;\n-use rustc::middle::ty::TyCtxt;\n+use rustc::ty::TyCtxt;\n use rustc::mir::repr::*;\n use rustc::mir::transform::{MirPass, Pass};\n use pretty;"}, {"sha": "6cfde27ac97b65d7119285dec8f81807fe924ca2", "filename": "src/librustc_mir/transform/type_check.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc_mir%2Ftransform%2Ftype_check.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc_mir%2Ftransform%2Ftype_check.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Ftype_check.rs?ref=5efdde0de161a5b374e16e20d09322e5a0eba4f9", "patch": "@@ -12,10 +12,10 @@\n #![allow(unreachable_code)]\n \n use rustc::dep_graph::DepNode;\n-use rustc::middle::infer::{self, InferCtxt};\n-use rustc::middle::traits::{self, ProjectionMode};\n-use rustc::middle::ty::fold::TypeFoldable;\n-use rustc::middle::ty::{self, Ty, TyCtxt};\n+use rustc::infer::{self, InferCtxt};\n+use rustc::traits::{self, ProjectionMode};\n+use rustc::ty::fold::TypeFoldable;\n+use rustc::ty::{self, Ty, TyCtxt};\n use rustc::mir::repr::*;\n use rustc::mir::tcx::LvalueTy;\n use rustc::mir::transform::{MirPass, Pass};"}, {"sha": "571d5bd9bc5a3b9f092cc96c2fbc9ca4fe63c9b9", "filename": "src/librustc_passes/consts.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc_passes%2Fconsts.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc_passes%2Fconsts.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_passes%2Fconsts.rs?ref=5efdde0de161a5b374e16e20d09322e5a0eba4f9", "patch": "@@ -25,18 +25,18 @@\n // by borrowck::gather_loans\n \n use rustc::dep_graph::DepNode;\n-use rustc::middle::ty::cast::{CastKind};\n+use rustc::ty::cast::{CastKind};\n use rustc::middle::const_eval::{self, ConstEvalErr};\n use rustc::middle::const_eval::ErrKind::IndexOpFeatureGated;\n use rustc::middle::const_eval::EvalHint::ExprTypeChecked;\n use rustc::middle::def::Def;\n use rustc::middle::def_id::DefId;\n use rustc::middle::expr_use_visitor as euv;\n-use rustc::middle::infer;\n+use rustc::infer;\n use rustc::middle::mem_categorization as mc;\n use rustc::middle::mem_categorization::Categorization;\n-use rustc::middle::ty::{self, Ty, TyCtxt};\n-use rustc::middle::traits::{self, ProjectionMode};\n+use rustc::ty::{self, Ty, TyCtxt};\n+use rustc::traits::{self, ProjectionMode};\n use rustc::util::nodemap::NodeMap;\n use rustc::middle::const_qualif::ConstQualif;\n use rustc::lint::builtin::CONST_ERR;"}, {"sha": "98502f5a16e7829ba9bf3591d32ab73605e8e7aa", "filename": "src/librustc_passes/rvalues.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc_passes%2Frvalues.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc_passes%2Frvalues.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_passes%2Frvalues.rs?ref=5efdde0de161a5b374e16e20d09322e5a0eba4f9", "patch": "@@ -13,10 +13,10 @@\n \n use rustc::dep_graph::DepNode;\n use rustc::middle::expr_use_visitor as euv;\n-use rustc::middle::infer;\n+use rustc::infer;\n use rustc::middle::mem_categorization as mc;\n-use rustc::middle::ty::{self, TyCtxt, ParameterEnvironment};\n-use rustc::middle::traits::ProjectionMode;\n+use rustc::ty::{self, TyCtxt, ParameterEnvironment};\n+use rustc::traits::ProjectionMode;\n \n use rustc_front::hir;\n use rustc_front::intravisit;"}, {"sha": "97fe632a529f86d5226665dfceca07c7625bd21e", "filename": "src/librustc_platform_intrinsics/aarch64.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc_platform_intrinsics%2Faarch64.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc_platform_intrinsics%2Faarch64.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_platform_intrinsics%2Faarch64.rs?ref=5efdde0de161a5b374e16e20d09322e5a0eba4f9", "patch": "@@ -15,7 +15,7 @@\n \n use {Intrinsic, Type};\n use IntrinsicDef::Named;\n-use rustc::middle::ty::TyCtxt;\n+use rustc::ty::TyCtxt;\n \n // The default inlining settings trigger a pathological behaviour in\n // LLVM, which causes makes compilation very slow. See #28273."}, {"sha": "65751d652321cd3d298fec6fbf72a6aff1997dba", "filename": "src/librustc_platform_intrinsics/arm.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc_platform_intrinsics%2Farm.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc_platform_intrinsics%2Farm.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_platform_intrinsics%2Farm.rs?ref=5efdde0de161a5b374e16e20d09322e5a0eba4f9", "patch": "@@ -15,7 +15,7 @@\n \n use {Intrinsic, Type};\n use IntrinsicDef::Named;\n-use rustc::middle::ty::TyCtxt;\n+use rustc::ty::TyCtxt;\n \n // The default inlining settings trigger a pathological behaviour in\n // LLVM, which causes makes compilation very slow. See #28273."}, {"sha": "9736d5587693ed38053692d7f899c3cecd3b8d70", "filename": "src/librustc_platform_intrinsics/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc_platform_intrinsics%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc_platform_intrinsics%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_platform_intrinsics%2Flib.rs?ref=5efdde0de161a5b374e16e20d09322e5a0eba4f9", "patch": "@@ -19,7 +19,7 @@\n extern crate rustc_llvm as llvm;\n extern crate rustc;\n \n-use rustc::middle::ty::TyCtxt;\n+use rustc::ty::TyCtxt;\n \n pub struct Intrinsic {\n     pub inputs: &'static [&'static Type],"}, {"sha": "de9d3dcf3550f62d73b8cbcae594eaf75e8263a4", "filename": "src/librustc_platform_intrinsics/x86.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc_platform_intrinsics%2Fx86.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc_platform_intrinsics%2Fx86.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_platform_intrinsics%2Fx86.rs?ref=5efdde0de161a5b374e16e20d09322e5a0eba4f9", "patch": "@@ -15,7 +15,7 @@\n \n use {Intrinsic, Type};\n use IntrinsicDef::Named;\n-use rustc::middle::ty::TyCtxt;\n+use rustc::ty::TyCtxt;\n \n // The default inlining settings trigger a pathological behaviour in\n // LLVM, which causes makes compilation very slow. See #28273."}, {"sha": "304932df412ad8ee953ae50321bb4693897da756", "filename": "src/librustc_privacy/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc_privacy%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc_privacy%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_privacy%2Flib.rs?ref=5efdde0de161a5b374e16e20d09322e5a0eba4f9", "patch": "@@ -42,7 +42,7 @@ use rustc::middle::cstore::CrateStore;\n use rustc::middle::def::{self, Def};\n use rustc::middle::def_id::DefId;\n use rustc::middle::privacy::{AccessLevel, AccessLevels};\n-use rustc::middle::ty::{self, TyCtxt};\n+use rustc::ty::{self, TyCtxt};\n use rustc::util::nodemap::{NodeMap, NodeSet};\n use rustc::front::map as ast_map;\n "}, {"sha": "211bff352feef0f5479f589891faf26d53b76547", "filename": "src/librustc_resolve/build_reduced_graph.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc_resolve%2Fbuild_reduced_graph.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc_resolve%2Fbuild_reduced_graph.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Fbuild_reduced_graph.rs?ref=5efdde0de161a5b374e16e20d09322e5a0eba4f9", "patch": "@@ -26,7 +26,7 @@ use {resolve_error, resolve_struct_error, ResolutionError};\n use rustc::middle::cstore::{CrateStore, ChildItem, DlDef};\n use rustc::middle::def::*;\n use rustc::middle::def_id::{CRATE_DEF_INDEX, DefId};\n-use rustc::middle::ty::VariantKind;\n+use rustc::ty::VariantKind;\n \n use syntax::ast::{Name, NodeId};\n use syntax::attr::AttrMetaMethods;"}, {"sha": "2f6d5e1c36e0ad5ccddfcde34a6db8423da09a79", "filename": "src/librustc_resolve/lib.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc_resolve%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc_resolve%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Flib.rs?ref=5efdde0de161a5b374e16e20d09322e5a0eba4f9", "patch": "@@ -55,8 +55,8 @@ use rustc::middle::cstore::CrateStore;\n use rustc::middle::def::*;\n use rustc::middle::def_id::DefId;\n use rustc::middle::pat_util::pat_bindings;\n-use rustc::middle::ty::subst::{ParamSpace, FnSpace, TypeSpace};\n-use rustc::middle::ty::{Freevar, FreevarMap, TraitMap, GlobMap};\n+use rustc::ty::subst::{ParamSpace, FnSpace, TypeSpace};\n+use rustc::ty::{Freevar, FreevarMap, TraitMap, GlobMap};\n use rustc::util::nodemap::{NodeMap, FnvHashMap};\n \n use syntax::ast::{self, FloatTy};"}, {"sha": "f11be65521bb08dc11dc3aaab85ccf83d9b0c692", "filename": "src/librustc_trans/back/symbol_names.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc_trans%2Fback%2Fsymbol_names.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc_trans%2Fback%2Fsymbol_names.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Fback%2Fsymbol_names.rs?ref=5efdde0de161a5b374e16e20d09322e5a0eba4f9", "patch": "@@ -102,8 +102,8 @@ use util::sha2::{Digest, Sha256};\n \n use rustc::middle::cstore;\n use rustc::middle::def_id::DefId;\n-use rustc::middle::ty::{self, TypeFoldable};\n-use rustc::middle::ty::item_path::{ItemPathBuffer, RootMode};\n+use rustc::ty::{self, TypeFoldable};\n+use rustc::ty::item_path::{ItemPathBuffer, RootMode};\n use rustc::front::map::definitions::{DefPath, DefPathData};\n \n use std::fmt::Write;"}, {"sha": "b9d9d58b5bdcdd761efd65c339982cf72f12cd9e", "filename": "src/librustc_trans/save/data.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc_trans%2Fsave%2Fdata.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc_trans%2Fsave%2Fdata.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Fsave%2Fdata.rs?ref=5efdde0de161a5b374e16e20d09322e5a0eba4f9", "patch": "@@ -16,7 +16,7 @@\n use std::hash::Hasher;\n \n use middle::def_id::DefId;\n-use middle::ty;\n+use rustc::ty;\n use syntax::ast::{CrateNum, NodeId};\n use syntax::codemap::Span;\n "}, {"sha": "9d465d8704708f0ac39624d0e3b1b18e5f8410d4", "filename": "src/librustc_trans/save/dump_visitor.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc_trans%2Fsave%2Fdump_visitor.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc_trans%2Fsave%2Fdump_visitor.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Fsave%2Fdump_visitor.rs?ref=5efdde0de161a5b374e16e20d09322e5a0eba4f9", "patch": "@@ -31,7 +31,7 @@ use session::Session;\n \n use middle::def::Def;\n use middle::def_id::DefId;\n-use middle::ty::{self, TyCtxt};\n+use rustc::ty::{self, TyCtxt};\n \n use std::collections::HashSet;\n use std::hash::*;"}, {"sha": "c07733b218aa00c91629384d33a2352859e82614", "filename": "src/librustc_trans/save/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc_trans%2Fsave%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc_trans%2Fsave%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Fsave%2Fmod.rs?ref=5efdde0de161a5b374e16e20d09322e5a0eba4f9", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-use middle::ty::{self, TyCtxt};\n+use rustc::ty::{self, TyCtxt};\n use middle::def::Def;\n use middle::def_id::DefId;\n "}, {"sha": "7794ac763c6a16101948f9ebff7de034d26a94cf", "filename": "src/librustc_trans/trans/_match.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc_trans%2Ftrans%2F_match.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc_trans%2Ftrans%2F_match.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Ftrans%2F_match.rs?ref=5efdde0de161a5b374e16e20d09322e5a0eba4f9", "patch": "@@ -195,12 +195,12 @@ use middle::const_eval;\n use middle::def::{Def, DefMap};\n use middle::def_id::DefId;\n use middle::expr_use_visitor as euv;\n-use middle::infer;\n+use rustc::infer;\n use middle::lang_items::StrEqFnLangItem;\n use middle::mem_categorization as mc;\n use middle::mem_categorization::Categorization;\n use middle::pat_util::*;\n-use middle::ty::subst::Substs;\n+use rustc::ty::subst::Substs;\n use trans::adt;\n use trans::base::*;\n use trans::build::{AddCase, And, Br, CondBr, GEPi, InBoundsGEP, Load, PointerCast};\n@@ -218,8 +218,8 @@ use trans::tvec;\n use trans::type_of;\n use trans::Disr;\n use trans::value::Value;\n-use middle::ty::{self, Ty, TyCtxt};\n-use middle::traits::ProjectionMode;\n+use rustc::ty::{self, Ty, TyCtxt};\n+use rustc::traits::ProjectionMode;\n use session::config::NoDebugInfo;\n use util::common::indenter;\n use util::nodemap::FnvHashMap;"}, {"sha": "872539241728889ce55f45f1db5c3653cb218251", "filename": "src/librustc_trans/trans/abi.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc_trans%2Ftrans%2Fabi.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc_trans%2Ftrans%2Fabi.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Ftrans%2Fabi.rs?ref=5efdde0de161a5b374e16e20d09322e5a0eba4f9", "patch": "@@ -27,7 +27,7 @@ use trans::type_::Type;\n use trans::type_of;\n \n use rustc_front::hir;\n-use middle::ty::{self, Ty};\n+use rustc::ty::{self, Ty};\n \n use libc::c_uint;\n \n@@ -318,7 +318,7 @@ impl FnType {\n             }\n \n             ty::TyRef(b, mt) => {\n-                use middle::ty::{BrAnon, ReLateBound};\n+                use rustc::ty::{BrAnon, ReLateBound};\n \n                 // `&mut` pointer parameters never alias other parameters, or mutable global data\n                 //"}, {"sha": "f14c1a573ccccd88086dccfd6e9572addd94c059", "filename": "src/librustc_trans/trans/adt.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc_trans%2Ftrans%2Fadt.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc_trans%2Ftrans%2Fadt.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Ftrans%2Fadt.rs?ref=5efdde0de161a5b374e16e20d09322e5a0eba4f9", "patch": "@@ -48,8 +48,8 @@ use std;\n use std::rc::Rc;\n \n use llvm::{ValueRef, True, IntEQ, IntNE};\n-use middle::ty::subst;\n-use middle::ty::{self, Ty, TyCtxt};\n+use rustc::ty::subst;\n+use rustc::ty::{self, Ty, TyCtxt};\n use syntax::ast;\n use syntax::attr;\n use syntax::attr::IntType;"}, {"sha": "dcf23039e2563d435012b85b9c54d701e154b060", "filename": "src/librustc_trans/trans/assert_dep_graph.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc_trans%2Ftrans%2Fassert_dep_graph.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc_trans%2Ftrans%2Fassert_dep_graph.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Ftrans%2Fassert_dep_graph.rs?ref=5efdde0de161a5b374e16e20d09322e5a0eba4f9", "patch": "@@ -40,7 +40,7 @@\n use graphviz as dot;\n use rustc::dep_graph::{DepGraphQuery, DepNode};\n use rustc::middle::def_id::DefId;\n-use rustc::middle::ty::TyCtxt;\n+use rustc::ty::TyCtxt;\n use rustc_data_structures::fnv::{FnvHashMap, FnvHashSet};\n use rustc_data_structures::graph::{Direction, INCOMING, OUTGOING, NodeIndex};\n use rustc_front::hir;"}, {"sha": "d4add752fa4c7d8d6225e06cc036b039efb306d6", "filename": "src/librustc_trans/trans/base.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc_trans%2Ftrans%2Fbase.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc_trans%2Ftrans%2Fbase.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Ftrans%2Fbase.rs?ref=5efdde0de161a5b374e16e20d09322e5a0eba4f9", "patch": "@@ -34,17 +34,17 @@ use back::{link, symbol_names};\n use lint;\n use llvm::{BasicBlockRef, Linkage, ValueRef, Vector, get_param};\n use llvm;\n-use middle::cfg;\n+use rustc::cfg;\n use middle::cstore::CrateStore;\n use middle::def_id::DefId;\n-use middle::infer;\n+use rustc::infer;\n use middle::lang_items::{LangItem, ExchangeMallocFnLangItem, StartFnLangItem};\n use middle::weak_lang_items;\n use middle::pat_util::simple_name;\n-use middle::ty::subst::{self, Substs};\n-use middle::traits;\n-use middle::ty::{self, Ty, TyCtxt, TypeFoldable};\n-use middle::ty::adjustment::CustomCoerceUnsized;\n+use rustc::ty::subst::{self, Substs};\n+use rustc::traits;\n+use rustc::ty::{self, Ty, TyCtxt, TypeFoldable};\n+use rustc::ty::adjustment::CustomCoerceUnsized;\n use rustc::dep_graph::DepNode;\n use rustc::front::map as hir_map;\n use rustc::util::common::time;"}, {"sha": "8559db3ce5e8a8c5e4903482941b140a464b7b2d", "filename": "src/librustc_trans/trans/callee.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc_trans%2Ftrans%2Fcallee.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc_trans%2Ftrans%2Fcallee.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Ftrans%2Fcallee.rs?ref=5efdde0de161a5b374e16e20d09322e5a0eba4f9", "patch": "@@ -22,10 +22,10 @@ use back::symbol_names;\n use llvm::{self, ValueRef, get_params};\n use middle::cstore::LOCAL_CRATE;\n use middle::def_id::DefId;\n-use middle::infer;\n-use middle::ty::subst;\n-use middle::ty::subst::{Substs};\n-use middle::traits;\n+use rustc::infer;\n+use rustc::ty::subst;\n+use rustc::ty::subst::{Substs};\n+use rustc::traits;\n use rustc::front::map as hir_map;\n use trans::abi::{Abi, FnType};\n use trans::adt;\n@@ -53,7 +53,7 @@ use trans::type_::Type;\n use trans::type_of;\n use trans::value::Value;\n use trans::Disr;\n-use middle::ty::{self, Ty, TyCtxt, TypeFoldable};\n+use rustc::ty::{self, Ty, TyCtxt, TypeFoldable};\n use rustc_front::hir;\n \n use syntax::codemap::DUMMY_SP;"}, {"sha": "78481e0ed925161524140b3d89e0d2e8c22d28af", "filename": "src/librustc_trans/trans/cleanup.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc_trans%2Ftrans%2Fcleanup.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc_trans%2Ftrans%2Fcleanup.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Ftrans%2Fcleanup.rs?ref=5efdde0de161a5b374e16e20d09322e5a0eba4f9", "patch": "@@ -130,7 +130,7 @@ use trans::glue;\n use middle::region;\n use trans::type_::Type;\n use trans::value::Value;\n-use middle::ty::{Ty, TyCtxt};\n+use rustc::ty::{Ty, TyCtxt};\n \n use std::fmt;\n use syntax::ast;"}, {"sha": "3040d6a37c17a3fd64dbc9065b1f6eac3e715bdd", "filename": "src/librustc_trans/trans/closure.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc_trans%2Ftrans%2Fclosure.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc_trans%2Ftrans%2Fclosure.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Ftrans%2Fclosure.rs?ref=5efdde0de161a5b374e16e20d09322e5a0eba4f9", "patch": "@@ -12,8 +12,8 @@ use arena::TypedArena;\n use back::symbol_names;\n use llvm::{ValueRef, get_param, get_params};\n use middle::def_id::DefId;\n-use middle::infer;\n-use middle::traits::ProjectionMode;\n+use rustc::infer;\n+use rustc::traits::ProjectionMode;\n use trans::abi::{Abi, FnType};\n use trans::adt;\n use trans::attributes;\n@@ -30,7 +30,7 @@ use trans::expr;\n use trans::monomorphize::{Instance};\n use trans::value::Value;\n use trans::Disr;\n-use middle::ty::{self, Ty, TyCtxt};\n+use rustc::ty::{self, Ty, TyCtxt};\n use session::config::FullDebugInfo;\n \n use syntax::ast;"}, {"sha": "5c36f9bb68c75b9daa5b64bffcbe003b1f1255a6", "filename": "src/librustc_trans/trans/collector.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc_trans%2Ftrans%2Fcollector.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc_trans%2Ftrans%2Fcollector.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Ftrans%2Fcollector.rs?ref=5efdde0de161a5b374e16e20d09322e5a0eba4f9", "patch": "@@ -194,10 +194,10 @@ use rustc_front::intravisit as hir_visit;\n use rustc::front::map as hir_map;\n use rustc::middle::def_id::DefId;\n use rustc::middle::lang_items::{ExchangeFreeFnLangItem, ExchangeMallocFnLangItem};\n-use rustc::middle::traits;\n-use rustc::middle::ty::subst::{self, Substs, Subst};\n-use rustc::middle::ty::{self, Ty, TypeFoldable};\n-use rustc::middle::ty::adjustment::CustomCoerceUnsized;\n+use rustc::traits;\n+use rustc::ty::subst::{self, Substs, Subst};\n+use rustc::ty::{self, Ty, TypeFoldable};\n+use rustc::ty::adjustment::CustomCoerceUnsized;\n use rustc::mir::repr as mir;\n use rustc::mir::visit as mir_visit;\n use rustc::mir::visit::Visitor as MirVisitor;\n@@ -580,7 +580,7 @@ fn find_drop_glue_neighbors<'a, 'tcx>(ccx: &CrateContext<'a, 'tcx>,\n     };\n \n     if let Some(destructor_did) = destructor_did {\n-        use rustc::middle::ty::ToPolyTraitRef;\n+        use rustc::ty::ToPolyTraitRef;\n \n         let drop_trait_def_id = ccx.tcx()\n                                    .lang_items"}, {"sha": "a6953f262c8ceef65669f25f8eb8abf64601cd33", "filename": "src/librustc_trans/trans/common.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc_trans%2Ftrans%2Fcommon.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc_trans%2Ftrans%2Fcommon.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Ftrans%2Fcommon.rs?ref=5efdde0de161a5b374e16e20d09322e5a0eba4f9", "patch": "@@ -16,12 +16,12 @@ use session::Session;\n use llvm;\n use llvm::{ValueRef, BasicBlockRef, BuilderRef, ContextRef, TypeKind};\n use llvm::{True, False, Bool, OperandBundleDef};\n-use middle::cfg;\n+use rustc::cfg;\n use middle::def::Def;\n use middle::def_id::DefId;\n-use middle::infer;\n+use rustc::infer;\n use middle::lang_items::LangItem;\n-use middle::ty::subst::Substs;\n+use rustc::ty::subst::Substs;\n use trans::abi::{Abi, FnType};\n use trans::base;\n use trans::build;\n@@ -37,9 +37,9 @@ use trans::mir::CachedMir;\n use trans::monomorphize;\n use trans::type_::Type;\n use trans::value::Value;\n-use middle::ty::{self, Ty, TyCtxt};\n-use middle::traits::{self, SelectionContext, ProjectionMode};\n-use middle::ty::fold::{TypeFolder, TypeFoldable};\n+use rustc::ty::{self, Ty, TyCtxt};\n+use rustc::traits::{self, SelectionContext, ProjectionMode};\n+use rustc::ty::fold::{TypeFolder, TypeFoldable};\n use rustc_front::hir;\n use util::nodemap::NodeMap;\n "}, {"sha": "7b832a7e99a1319fbbc75fe3409dc72cefe4dc81", "filename": "src/librustc_trans/trans/consts.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc_trans%2Ftrans%2Fconsts.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc_trans%2Ftrans%2Fconsts.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Ftrans%2Fconsts.rs?ref=5efdde0de161a5b374e16e20d09322e5a0eba4f9", "patch": "@@ -32,11 +32,11 @@ use trans::type_::Type;\n use trans::type_of;\n use trans::value::Value;\n use trans::Disr;\n-use middle::ty::subst::Substs;\n-use middle::ty::adjustment::{AdjustDerefRef, AdjustReifyFnPointer};\n-use middle::ty::adjustment::{AdjustUnsafeFnPointer, AdjustMutToConstPointer};\n-use middle::ty::{self, Ty, TyCtxt};\n-use middle::ty::cast::{CastTy,IntTy};\n+use rustc::ty::subst::Substs;\n+use rustc::ty::adjustment::{AdjustDerefRef, AdjustReifyFnPointer};\n+use rustc::ty::adjustment::{AdjustUnsafeFnPointer, AdjustMutToConstPointer};\n+use rustc::ty::{self, Ty, TyCtxt};\n+use rustc::ty::cast::{CastTy,IntTy};\n use util::nodemap::NodeMap;\n use rustc_const_eval::{ConstInt, ConstMathErr, ConstUsize, ConstIsize};\n "}, {"sha": "4511989534d7aec58f5c32457e8add7f22f8e8a9", "filename": "src/librustc_trans/trans/context.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc_trans%2Ftrans%2Fcontext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc_trans%2Ftrans%2Fcontext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Ftrans%2Fcontext.rs?ref=5efdde0de161a5b374e16e20d09322e5a0eba4f9", "patch": "@@ -14,7 +14,7 @@ use rustc::dep_graph::{DepNode, DepTrackingMap, DepTrackingMapConfig};\n use middle::cstore::LinkMeta;\n use middle::def::ExportMap;\n use middle::def_id::DefId;\n-use middle::traits;\n+use rustc::traits;\n use rustc::mir::mir_map::MirMap;\n use rustc::mir::repr as mir;\n use trans::adt;\n@@ -29,8 +29,8 @@ use trans::Instance;\n \n use trans::collector::{TransItem, TransItemState};\n use trans::type_::{Type, TypeNames};\n-use middle::ty::subst::{Substs, VecPerParamSpace};\n-use middle::ty::{self, Ty, TyCtxt};\n+use rustc::ty::subst::{Substs, VecPerParamSpace};\n+use rustc::ty::{self, Ty, TyCtxt};\n use session::config::NoDebugInfo;\n use session::Session;\n use util::sha2::Sha256;"}, {"sha": "80ff11e968a18f9d614e9c2448debfed1244dbcf", "filename": "src/librustc_trans/trans/controlflow.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc_trans%2Ftrans%2Fcontrolflow.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc_trans%2Ftrans%2Fcontrolflow.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Ftrans%2Fcontrolflow.rs?ref=5efdde0de161a5b374e16e20d09322e5a0eba4f9", "patch": "@@ -11,7 +11,7 @@\n use llvm::ValueRef;\n use middle::def::Def;\n use middle::lang_items::{PanicFnLangItem, PanicBoundsCheckFnLangItem};\n-use middle::ty::subst::Substs;\n+use rustc::ty::subst::Substs;\n use trans::base::*;\n use trans::basic_block::BasicBlock;\n use trans::build::*;"}, {"sha": "c0858a6d93bf6225785691ca78ed3f35eb903a94", "filename": "src/librustc_trans/trans/datum.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc_trans%2Ftrans%2Fdatum.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc_trans%2Ftrans%2Fdatum.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Ftrans%2Fdatum.rs?ref=5efdde0de161a5b374e16e20d09322e5a0eba4f9", "patch": "@@ -102,7 +102,7 @@ use trans::cleanup::{CleanupMethods, DropHintDatum, DropHintMethods};\n use trans::expr;\n use trans::tvec;\n use trans::value::Value;\n-use middle::ty::Ty;\n+use rustc::ty::Ty;\n \n use std::fmt;\n use syntax::ast;"}, {"sha": "bd2a8e0193daedab7f5d47e68571a35a1aa25027", "filename": "src/librustc_trans/trans/debuginfo/metadata.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc_trans%2Ftrans%2Fdebuginfo%2Fmetadata.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc_trans%2Ftrans%2Fdebuginfo%2Fmetadata.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Ftrans%2Fdebuginfo%2Fmetadata.rs?ref=5efdde0de161a5b374e16e20d09322e5a0eba4f9", "patch": "@@ -24,16 +24,16 @@ use llvm::{self, ValueRef};\n use llvm::debuginfo::{DIType, DIFile, DIScope, DIDescriptor, DICompositeType};\n \n use middle::def_id::DefId;\n-use middle::infer;\n+use rustc::infer;\n use middle::pat_util;\n-use middle::ty::subst;\n+use rustc::ty::subst;\n use rustc::front::map as hir_map;\n use rustc_front::hir::{self, PatKind};\n use trans::{type_of, adt, machine, monomorphize};\n use trans::common::{self, CrateContext, FunctionContext, Block};\n use trans::_match::{BindingInfo, TransBindingMode};\n use trans::type_::Type;\n-use middle::ty::{self, Ty};\n+use rustc::ty::{self, Ty};\n use session::config::{self, FullDebugInfo};\n use util::nodemap::FnvHashMap;\n use util::common::path2cstr;"}, {"sha": "198a9899fdae0d30fbfdee4e23ee6b518377455a", "filename": "src/librustc_trans/trans/debuginfo/mod.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc_trans%2Ftrans%2Fdebuginfo%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc_trans%2Ftrans%2Fdebuginfo%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Ftrans%2Fdebuginfo%2Fmod.rs?ref=5efdde0de161a5b374e16e20d09322e5a0eba4f9", "patch": "@@ -27,17 +27,17 @@ use llvm::{ModuleRef, ContextRef, ValueRef};\n use llvm::debuginfo::{DIFile, DIType, DIScope, DIBuilderRef, DISubprogram, DIArray,\n                       DIDescriptor, FlagPrototyped};\n use middle::def_id::DefId;\n-use middle::infer::normalize_associated_type;\n-use middle::ty::subst::{self, Substs};\n+use rustc::infer::normalize_associated_type;\n+use rustc::ty::subst::{self, Substs};\n use rustc_front;\n use rustc_front::hir;\n \n use trans::abi::Abi;\n use trans::common::{NodeIdAndSpan, CrateContext, FunctionContext, Block};\n use trans;\n use trans::monomorphize;\n-use middle::infer;\n-use middle::ty::{self, Ty};\n+use rustc::infer;\n+use rustc::ty::{self, Ty};\n use session::config::{self, FullDebugInfo, LimitedDebugInfo, NoDebugInfo};\n use util::nodemap::{NodeMap, FnvHashMap, FnvHashSet};\n use rustc::front::map as hir_map;"}, {"sha": "fc9ace89ab7c3c9f7e0e4abc4b1535a0d499beb5", "filename": "src/librustc_trans/trans/debuginfo/type_names.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc_trans%2Ftrans%2Fdebuginfo%2Ftype_names.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc_trans%2Ftrans%2Fdebuginfo%2Ftype_names.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Ftrans%2Fdebuginfo%2Ftype_names.rs?ref=5efdde0de161a5b374e16e20d09322e5a0eba4f9", "patch": "@@ -14,9 +14,9 @@ use super::namespace::crate_root_namespace;\n \n use trans::common::CrateContext;\n use middle::def_id::DefId;\n-use middle::infer;\n-use middle::ty::subst;\n-use middle::ty::{self, Ty};\n+use rustc::infer;\n+use rustc::ty::subst;\n+use rustc::ty::{self, Ty};\n \n use rustc_front::hir;\n "}, {"sha": "41a87f8d6de466422162e7cf8abe5336db40abd3", "filename": "src/librustc_trans/trans/declare.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc_trans%2Ftrans%2Fdeclare.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc_trans%2Ftrans%2Fdeclare.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Ftrans%2Fdeclare.rs?ref=5efdde0de161a5b374e16e20d09322e5a0eba4f9", "patch": "@@ -20,8 +20,8 @@\n //! * Use define_* family of methods when you might be defining the ValueRef.\n //! * When in doubt, define.\n use llvm::{self, ValueRef};\n-use middle::ty;\n-use middle::infer;\n+use rustc::ty;\n+use rustc::infer;\n use trans::abi::{Abi, FnType};\n use trans::attributes;\n use trans::context::CrateContext;"}, {"sha": "fc79fa813aa5ad8e3080c64704ef841a83a8ff38", "filename": "src/librustc_trans/trans/disr.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc_trans%2Ftrans%2Fdisr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc_trans%2Ftrans%2Fdisr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Ftrans%2Fdisr.rs?ref=5efdde0de161a5b374e16e20d09322e5a0eba4f9", "patch": "@@ -24,8 +24,8 @@ impl ::std::ops::BitAnd for Disr {\n     }\n }\n \n-impl From<::middle::ty::Disr> for Disr {\n-    fn from(i: ::middle::ty::Disr) -> Disr {\n+impl From<::rustc::ty::Disr> for Disr {\n+    fn from(i: ::rustc::ty::Disr) -> Disr {\n         Disr(i.to_u64_unchecked())\n     }\n }"}, {"sha": "8f9f44fb2ddf81d7f7270e058cf0c4ca231f2341", "filename": "src/librustc_trans/trans/expr.rs", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc_trans%2Ftrans%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc_trans%2Ftrans%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Ftrans%2Fexpr.rs?ref=5efdde0de161a5b374e16e20d09322e5a0eba4f9", "patch": "@@ -54,7 +54,7 @@ use self::lazy_binop_ty::*;\n use llvm::{self, ValueRef, TypeKind};\n use middle::const_qualif::ConstQualif;\n use middle::def::Def;\n-use middle::ty::subst::Substs;\n+use rustc::ty::subst::Substs;\n use trans::{_match, abi, adt, asm, base, closure, consts, controlflow};\n use trans::base::*;\n use trans::build::*;\n@@ -70,12 +70,12 @@ use trans::tvec;\n use trans::type_of;\n use trans::value::Value;\n use trans::Disr;\n-use middle::ty::adjustment::{AdjustDerefRef, AdjustReifyFnPointer};\n-use middle::ty::adjustment::{AdjustUnsafeFnPointer, AdjustMutToConstPointer};\n-use middle::ty::adjustment::CustomCoerceUnsized;\n-use middle::ty::{self, Ty, TyCtxt};\n-use middle::ty::MethodCall;\n-use middle::ty::cast::{CastKind, CastTy};\n+use rustc::ty::adjustment::{AdjustDerefRef, AdjustReifyFnPointer};\n+use rustc::ty::adjustment::{AdjustUnsafeFnPointer, AdjustMutToConstPointer};\n+use rustc::ty::adjustment::CustomCoerceUnsized;\n+use rustc::ty::{self, Ty, TyCtxt};\n+use rustc::ty::MethodCall;\n+use rustc::ty::cast::{CastKind, CastTy};\n use util::common::indenter;\n use trans::machine::{llsize_of, llsize_of_alloc};\n use trans::type_::Type;\n@@ -1859,8 +1859,8 @@ fn trans_imm_cast<'blk, 'tcx>(bcx: Block<'blk, 'tcx>,\n                               id: ast::NodeId)\n                               -> DatumBlock<'blk, 'tcx, Expr>\n {\n-    use middle::ty::cast::CastTy::*;\n-    use middle::ty::cast::IntTy::*;\n+    use rustc::ty::cast::CastTy::*;\n+    use rustc::ty::cast::IntTy::*;\n \n     fn int_cast(bcx: Block,\n                 lldsttype: Type,\n@@ -2194,7 +2194,7 @@ impl OverflowOpViaIntrinsic {\n     fn to_intrinsic_name(&self, tcx: &TyCtxt, ty: Ty) -> &'static str {\n         use syntax::ast::IntTy::*;\n         use syntax::ast::UintTy::*;\n-        use middle::ty::{TyInt, TyUint};\n+        use rustc::ty::{TyInt, TyUint};\n \n         let new_sty = match ty.sty {\n             TyInt(Is) => match &tcx.sess.target.target.target_pointer_width[..] {"}, {"sha": "dc4fc5a9ccfaae4f35a5f6872b15bc1028a06b73", "filename": "src/librustc_trans/trans/glue.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc_trans%2Ftrans%2Fglue.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc_trans%2Ftrans%2Fglue.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Ftrans%2Fglue.rs?ref=5efdde0de161a5b374e16e20d09322e5a0eba4f9", "patch": "@@ -18,9 +18,9 @@ use back::symbol_names;\n use llvm;\n use llvm::{ValueRef, get_param};\n use middle::lang_items::ExchangeFreeFnLangItem;\n-use middle::ty::subst::{Substs};\n-use middle::traits;\n-use middle::ty::{self, Ty, TyCtxt};\n+use rustc::ty::subst::{Substs};\n+use rustc::traits;\n+use rustc::ty::{self, Ty, TyCtxt};\n use trans::abi::{Abi, FnType};\n use trans::adt;\n use trans::adt::GetDtorType; // for tcx.dtor_type()"}, {"sha": "b8abc1b6107927159458299aecacbcaf3160cb33", "filename": "src/librustc_trans/trans/inline.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc_trans%2Ftrans%2Finline.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc_trans%2Ftrans%2Finline.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Ftrans%2Finline.rs?ref=5efdde0de161a5b374e16e20d09322e5a0eba4f9", "patch": "@@ -11,7 +11,7 @@\n use llvm::{AvailableExternallyLinkage, InternalLinkage, SetLinkage};\n use middle::cstore::{CrateStore, FoundAst, InlinedItem};\n use middle::def_id::DefId;\n-use middle::ty::subst::Substs;\n+use rustc::ty::subst::Substs;\n use trans::base::{push_ctxt, trans_item, trans_fn};\n use trans::callee::Callee;\n use trans::common::*;"}, {"sha": "9577a1817d75d8f039cead7e9099d5845d5faad0", "filename": "src/librustc_trans/trans/intrinsic.rs", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc_trans%2Ftrans%2Fintrinsic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc_trans%2Ftrans%2Fintrinsic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Ftrans%2Fintrinsic.rs?ref=5efdde0de161a5b374e16e20d09322e5a0eba4f9", "patch": "@@ -15,9 +15,9 @@ use intrinsics::{self, Intrinsic};\n use libc;\n use llvm;\n use llvm::{ValueRef, TypeKind};\n-use middle::infer;\n-use middle::ty::subst;\n-use middle::ty::subst::FnSpace;\n+use rustc::infer;\n+use rustc::ty::subst;\n+use rustc::ty::subst::FnSpace;\n use trans::abi::{Abi, FnType};\n use trans::adt;\n use trans::attributes;\n@@ -36,9 +36,9 @@ use trans::glue;\n use trans::type_of;\n use trans::machine;\n use trans::type_::Type;\n-use middle::ty::{self, Ty, TypeFoldable};\n+use rustc::ty::{self, Ty, TypeFoldable};\n use trans::Disr;\n-use middle::ty::subst::Substs;\n+use rustc::ty::subst::Substs;\n use rustc::dep_graph::DepNode;\n use rustc_front::hir;\n use syntax::ast;\n@@ -1694,7 +1694,7 @@ fn generic_simd_intrinsic<'blk, 'tcx, 'a>\n // Returns None if the type is not an integer\n fn int_type_width_signed<'tcx>(sty: &ty::TypeVariants<'tcx>, ccx: &CrateContext)\n         -> Option<(u64, bool)> {\n-    use rustc::middle::ty::{TyInt, TyUint};\n+    use rustc::ty::{TyInt, TyUint};\n     match *sty {\n         TyInt(t) => Some((match t {\n             ast::IntTy::Is => {\n@@ -1730,7 +1730,7 @@ fn int_type_width_signed<'tcx>(sty: &ty::TypeVariants<'tcx>, ccx: &CrateContext)\n // Returns None if the type is not a float\n fn float_type_width<'tcx>(sty: &ty::TypeVariants<'tcx>)\n         -> Option<u64> {\n-    use rustc::middle::ty::TyFloat;\n+    use rustc::ty::TyFloat;\n     match *sty {\n         TyFloat(t) => Some(match t {\n             ast::FloatTy::F32 => 32,"}, {"sha": "696a0e3c0b621de067f5b5cf650cc49b4bb27858", "filename": "src/librustc_trans/trans/meth.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc_trans%2Ftrans%2Fmeth.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc_trans%2Ftrans%2Fmeth.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Ftrans%2Fmeth.rs?ref=5efdde0de161a5b374e16e20d09322e5a0eba4f9", "patch": "@@ -14,10 +14,10 @@ use arena::TypedArena;\n use back::symbol_names;\n use llvm::{ValueRef, get_params};\n use middle::def_id::DefId;\n-use middle::infer;\n-use middle::ty::subst::{FnSpace, Subst, Substs};\n-use middle::ty::subst;\n-use middle::traits::{self, ProjectionMode};\n+use rustc::infer;\n+use rustc::ty::subst::{FnSpace, Subst, Substs};\n+use rustc::ty::subst;\n+use rustc::traits::{self, ProjectionMode};\n use trans::abi::FnType;\n use trans::base::*;\n use trans::build::*;\n@@ -33,7 +33,7 @@ use trans::machine;\n use trans::type_::Type;\n use trans::type_of::*;\n use trans::value::Value;\n-use middle::ty::{self, Ty, TyCtxt, TypeFoldable};\n+use rustc::ty::{self, Ty, TyCtxt, TypeFoldable};\n \n use syntax::ast::Name;\n use syntax::codemap::DUMMY_SP;"}, {"sha": "4f76fd5668456cd01ae08959263dd5f2728393b0", "filename": "src/librustc_trans/trans/mir/block.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc_trans%2Ftrans%2Fmir%2Fblock.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc_trans%2Ftrans%2Fmir%2Fblock.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Ftrans%2Fmir%2Fblock.rs?ref=5efdde0de161a5b374e16e20d09322e5a0eba4f9", "patch": "@@ -9,7 +9,7 @@\n // except according to those terms.\n \n use llvm::{self, BasicBlockRef, ValueRef, OperandBundleDef};\n-use rustc::middle::ty;\n+use rustc::ty;\n use rustc::mir::repr as mir;\n use trans::abi::{Abi, FnType};\n use trans::adt;"}, {"sha": "1e5c1c2c55a00c453f62c60787504c11b6618be3", "filename": "src/librustc_trans/trans/mir/constant.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc_trans%2Ftrans%2Fmir%2Fconstant.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc_trans%2Ftrans%2Fmir%2Fconstant.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Ftrans%2Fmir%2Fconstant.rs?ref=5efdde0de161a5b374e16e20d09322e5a0eba4f9", "patch": "@@ -9,7 +9,7 @@\n // except according to those terms.\n \n use llvm::ValueRef;\n-use middle::ty::{Ty, TypeFoldable};\n+use rustc::ty::{Ty, TypeFoldable};\n use rustc::middle::const_eval::{self, ConstVal};\n use rustc_const_eval::ConstInt::*;\n use rustc::mir::repr as mir;"}, {"sha": "cc033084ace6078465e3594db6bc3b5cf183b39b", "filename": "src/librustc_trans/trans/mir/drop.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc_trans%2Ftrans%2Fmir%2Fdrop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc_trans%2Ftrans%2Fmir%2Fdrop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Ftrans%2Fmir%2Fdrop.rs?ref=5efdde0de161a5b374e16e20d09322e5a0eba4f9", "patch": "@@ -9,7 +9,7 @@\n // except according to those terms.\n \n use llvm::ValueRef;\n-use rustc::middle::ty::Ty;\n+use rustc::ty::Ty;\n use trans::adt;\n use trans::base;\n use trans::common::{self, BlockAndBuilder};"}, {"sha": "6271ad8d8b846135022343fbd3289cfc3e24a241", "filename": "src/librustc_trans/trans/mir/lvalue.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc_trans%2Ftrans%2Fmir%2Flvalue.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc_trans%2Ftrans%2Fmir%2Flvalue.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Ftrans%2Fmir%2Flvalue.rs?ref=5efdde0de161a5b374e16e20d09322e5a0eba4f9", "patch": "@@ -9,7 +9,7 @@\n // except according to those terms.\n \n use llvm::ValueRef;\n-use rustc::middle::ty::{self, Ty, TypeFoldable};\n+use rustc::ty::{self, Ty, TypeFoldable};\n use rustc::mir::repr as mir;\n use rustc::mir::tcx::LvalueTy;\n use trans::abi;"}, {"sha": "ed4aa5fe583046d518f7ba7b4bd0c2cf4ce49363", "filename": "src/librustc_trans/trans/mir/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc_trans%2Ftrans%2Fmir%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc_trans%2Ftrans%2Fmir%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Ftrans%2Fmir%2Fmod.rs?ref=5efdde0de161a5b374e16e20d09322e5a0eba4f9", "patch": "@@ -10,7 +10,7 @@\n \n use libc::c_uint;\n use llvm::{self, ValueRef};\n-use middle::ty;\n+use rustc::ty;\n use rustc::mir::repr as mir;\n use rustc::mir::tcx::LvalueTy;\n use trans::base;"}, {"sha": "cc1446033de33c2ebad42ad800c6a17f839e245e", "filename": "src/librustc_trans/trans/mir/operand.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc_trans%2Ftrans%2Fmir%2Foperand.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc_trans%2Ftrans%2Fmir%2Foperand.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Ftrans%2Fmir%2Foperand.rs?ref=5efdde0de161a5b374e16e20d09322e5a0eba4f9", "patch": "@@ -9,7 +9,7 @@\n // except according to those terms.\n \n use llvm::ValueRef;\n-use rustc::middle::ty::Ty;\n+use rustc::ty::Ty;\n use rustc::mir::repr as mir;\n use trans::base;\n use trans::common::{self, Block, BlockAndBuilder};"}, {"sha": "a78d0da5be4a744610c2c9bd95a84e95ab50d0fa", "filename": "src/librustc_trans/trans/mir/rvalue.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc_trans%2Ftrans%2Fmir%2Frvalue.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc_trans%2Ftrans%2Fmir%2Frvalue.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Ftrans%2Fmir%2Frvalue.rs?ref=5efdde0de161a5b374e16e20d09322e5a0eba4f9", "patch": "@@ -9,8 +9,8 @@\n // except according to those terms.\n \n use llvm::ValueRef;\n-use rustc::middle::ty::{self, Ty};\n-use middle::ty::cast::{CastTy, IntTy};\n+use rustc::ty::{self, Ty};\n+use rustc::ty::cast::{CastTy, IntTy};\n use middle::const_eval::ConstVal;\n use rustc_const_eval::ConstInt;\n use rustc::mir::repr as mir;"}, {"sha": "0440c74a60acb9cb72dc3254e0894b915209ae87", "filename": "src/librustc_trans/trans/monomorphize.rs", "status": "modified", "additions": 4, "deletions": 5, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc_trans%2Ftrans%2Fmonomorphize.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc_trans%2Ftrans%2Fmonomorphize.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Ftrans%2Fmonomorphize.rs?ref=5efdde0de161a5b374e16e20d09322e5a0eba4f9", "patch": "@@ -12,11 +12,10 @@ use back::symbol_names;\n use llvm::ValueRef;\n use llvm;\n use middle::def_id::DefId;\n-use middle::infer::normalize_associated_type;\n-use middle::ty::subst;\n-use middle::ty::subst::{Subst, Substs};\n-use middle::ty::{self, Ty, TyCtxt};\n-use middle::ty::fold::{TypeFolder, TypeFoldable};\n+use rustc::infer::normalize_associated_type;\n+use rustc::ty::subst;\n+use rustc::ty::subst::{Subst, Substs};\n+use rustc::ty::{self, Ty, TypeFoldable, TyCtxt};\n use trans::attributes;\n use trans::base::{push_ctxt};\n use trans::base::trans_fn;"}, {"sha": "bcfab663966c7fcc700fc5897e248702caa27ba5", "filename": "src/librustc_trans/trans/symbol_names_test.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc_trans%2Ftrans%2Fsymbol_names_test.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc_trans%2Ftrans%2Fsymbol_names_test.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Ftrans%2Fsymbol_names_test.rs?ref=5efdde0de161a5b374e16e20d09322e5a0eba4f9", "patch": "@@ -15,7 +15,7 @@\n //! paths etc in all kinds of annoying scenarios.\n \n use back::symbol_names;\n-use rustc::middle::ty::TyCtxt;\n+use rustc::ty::TyCtxt;\n use rustc_front::hir;\n use rustc_front::intravisit::{self, Visitor};\n use syntax::ast;"}, {"sha": "4a7404b1fbacd5024366155c0af7cc891b164941", "filename": "src/librustc_trans/trans/tvec.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc_trans%2Ftrans%2Ftvec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc_trans%2Ftrans%2Ftvec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Ftrans%2Ftvec.rs?ref=5efdde0de161a5b374e16e20d09322e5a0eba4f9", "patch": "@@ -27,7 +27,7 @@ use trans::machine::llsize_of_alloc;\n use trans::type_::Type;\n use trans::type_of;\n use trans::value::Value;\n-use middle::ty::{self, Ty};\n+use rustc::ty::{self, Ty};\n \n use rustc_front::hir;\n "}, {"sha": "00f42a3b243c7855d059e81edd2f6b8b7bf99f83", "filename": "src/librustc_trans/trans/type_of.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc_trans%2Ftrans%2Ftype_of.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc_trans%2Ftrans%2Ftype_of.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Ftrans%2Ftype_of.rs?ref=5efdde0de161a5b374e16e20d09322e5a0eba4f9", "patch": "@@ -11,13 +11,13 @@\n #![allow(non_camel_case_types)]\n \n use middle::def_id::DefId;\n-use middle::infer;\n-use middle::ty::subst;\n+use rustc::infer;\n+use rustc::ty::subst;\n use trans::abi::FnType;\n use trans::adt;\n use trans::common::*;\n use trans::machine;\n-use middle::ty::{self, Ty, TypeFoldable};\n+use rustc::ty::{self, Ty, TypeFoldable};\n \n use trans::type_::Type;\n \n@@ -145,7 +145,7 @@ pub fn immediate_type_of<'a, 'tcx>(cx: &CrateContext<'a, 'tcx>, t: Ty<'tcx>) ->\n     }\n }\n \n-/// Get the LLVM type corresponding to a Rust type, i.e. `middle::ty::Ty`.\n+/// Get the LLVM type corresponding to a Rust type, i.e. `rustc::ty::Ty`.\n /// This is the right LLVM type for an alloca containing a value of that type,\n /// and the pointee of an Lvalue Datum (which is always a LLVM pointer).\n /// For unsized types, the returned type is a fat pointer, thus the resulting\n@@ -163,7 +163,7 @@ pub fn type_of<'a, 'tcx>(cx: &CrateContext<'a, 'tcx>, ty: Ty<'tcx>) -> Type {\n     in_memory_type_of(cx, ty)\n }\n \n-/// Get the LLVM type corresponding to a Rust type, i.e. `middle::ty::Ty`.\n+/// Get the LLVM type corresponding to a Rust type, i.e. `rustc::ty::Ty`.\n /// This is the right LLVM type for a field/array element of that type,\n /// and is the same as `type_of` for all Sized types.\n /// Unsized types, however, are represented by a \"minimal unit\", e.g."}, {"sha": "af40b845767d8d55c1a0cf2053cd2a953f5a4185", "filename": "src/librustc_typeck/astconv.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc_typeck%2Fastconv.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc_typeck%2Fastconv.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fastconv.rs?ref=5efdde0de161a5b374e16e20d09322e5a0eba4f9", "patch": "@@ -54,10 +54,10 @@ use middle::const_eval::EvalHint::UncheckedExprHint;\n use middle::def::{self, Def};\n use middle::def_id::DefId;\n use middle::resolve_lifetime as rl;\n-use middle::ty::subst::{FnSpace, TypeSpace, SelfSpace, Subst, Substs, ParamSpace};\n-use middle::traits;\n-use middle::ty::{self, Ty, TyCtxt, ToPredicate, TypeFoldable};\n-use middle::ty::wf::object_region_bounds;\n+use rustc::ty::subst::{FnSpace, TypeSpace, SelfSpace, Subst, Substs, ParamSpace};\n+use rustc::traits;\n+use rustc::ty::{self, Ty, TyCtxt, ToPredicate, TypeFoldable};\n+use rustc::ty::wf::object_region_bounds;\n use require_c_abi_if_variadic;\n use rscope::{self, UnelidableRscope, RegionScope, ElidableRscope,\n              ObjectLifetimeDefaultRscope, ShiftedRscope, BindingRscope,"}, {"sha": "f8fa9c8e9b6cb70af5b239acb485ac817f41b14f", "filename": "src/librustc_typeck/check/_match.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc_typeck%2Fcheck%2F_match.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc_typeck%2Fcheck%2F_match.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2F_match.rs?ref=5efdde0de161a5b374e16e20d09322e5a0eba4f9", "patch": "@@ -9,11 +9,11 @@\n // except according to those terms.\n \n use middle::def::{self, Def};\n-use middle::infer::{self, TypeOrigin};\n+use rustc::infer::{self, TypeOrigin};\n use middle::pat_util::{PatIdMap, pat_id_map, pat_is_binding};\n use middle::pat_util::pat_is_resolved_const;\n-use middle::ty::subst::Substs;\n-use middle::ty::{self, Ty, TypeFoldable, LvaluePreference};\n+use rustc::ty::subst::Substs;\n+use rustc::ty::{self, Ty, TypeFoldable, LvaluePreference};\n use check::{check_expr, check_expr_has_type, check_expr_with_expectation};\n use check::{demand, FnCtxt, Expectation};\n use check::{check_expr_with_lvalue_pref};"}, {"sha": "f7726bc9cf49291cfa18de84bc1802c8bc125c73", "filename": "src/librustc_typeck/check/assoc.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc_typeck%2Fcheck%2Fassoc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc_typeck%2Fcheck%2Fassoc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fassoc.rs?ref=5efdde0de161a5b374e16e20d09322e5a0eba4f9", "patch": "@@ -8,10 +8,10 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-use middle::infer::InferCtxt;\n-use middle::traits::{self, FulfillmentContext, Normalized, MiscObligation,\n+use rustc::infer::InferCtxt;\n+use rustc::traits::{self, FulfillmentContext, Normalized, MiscObligation,\n                      SelectionContext, ObligationCause};\n-use middle::ty::fold::TypeFoldable;\n+use rustc::ty::fold::TypeFoldable;\n use syntax::ast;\n use syntax::codemap::Span;\n "}, {"sha": "4e582033c8b6a518678d5f334e9c0b3711fbee49", "filename": "src/librustc_typeck/check/callee.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc_typeck%2Fcheck%2Fcallee.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc_typeck%2Fcheck%2Fcallee.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fcallee.rs?ref=5efdde0de161a5b374e16e20d09322e5a0eba4f9", "patch": "@@ -28,8 +28,8 @@ use CrateCtxt;\n use middle::cstore::LOCAL_CRATE;\n use middle::def::Def;\n use middle::def_id::DefId;\n-use middle::infer;\n-use middle::ty::{self, LvaluePreference, Ty};\n+use rustc::infer;\n+use rustc::ty::{self, LvaluePreference, Ty};\n use syntax::codemap::Span;\n use syntax::parse::token;\n use syntax::ptr::P;"}, {"sha": "7ca4251e4c80b124b9f3aefe890c83f3c42ccdd5", "filename": "src/librustc_typeck/check/cast.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc_typeck%2Fcheck%2Fcast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc_typeck%2Fcheck%2Fcast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fcast.rs?ref=5efdde0de161a5b374e16e20d09322e5a0eba4f9", "patch": "@@ -45,8 +45,8 @@ use super::structurally_resolved_type;\n \n use lint;\n use middle::def_id::DefId;\n-use middle::ty::{self, Ty, TypeFoldable};\n-use middle::ty::cast::{CastKind, CastTy};\n+use rustc::ty::{self, Ty, TypeFoldable};\n+use rustc::ty::cast::{CastKind, CastTy};\n use syntax::codemap::Span;\n use rustc_front::hir;\n use syntax::ast;\n@@ -238,8 +238,8 @@ impl<'tcx> CastCheck<'tcx> {\n     /// can return Ok and create type errors in the fcx rather than returning\n     /// directly. coercion-cast is handled in check instead of here.\n     fn do_check<'a>(&self, fcx: &FnCtxt<'a, 'tcx>) -> Result<CastKind, CastError> {\n-        use middle::ty::cast::IntTy::*;\n-        use middle::ty::cast::CastTy::*;\n+        use rustc::ty::cast::IntTy::*;\n+        use rustc::ty::cast::CastTy::*;\n \n         let (t_from, t_cast) = match (CastTy::from_ty(self.expr_ty),\n                                       CastTy::from_ty(self.cast_ty)) {"}, {"sha": "9333b10d27e4aed15e9c024d8c2d9e0e2513aa41", "filename": "src/librustc_typeck/check/closure.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc_typeck%2Fcheck%2Fclosure.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc_typeck%2Fcheck%2Fclosure.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fclosure.rs?ref=5efdde0de161a5b374e16e20d09322e5a0eba4f9", "patch": "@@ -13,8 +13,8 @@\n use super::{check_fn, Expectation, FnCtxt};\n \n use astconv;\n-use middle::ty::subst;\n-use middle::ty::{self, ToPolyTraitRef, Ty};\n+use rustc::ty::subst;\n+use rustc::ty::{self, ToPolyTraitRef, Ty};\n use std::cmp;\n use syntax::abi::Abi;\n use rustc_front::hir;"}, {"sha": "dad7d7cd26ca320613b588b6ce2eeb015ef74e33", "filename": "src/librustc_typeck/check/coercion.rs", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc_typeck%2Fcheck%2Fcoercion.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc_typeck%2Fcheck%2Fcoercion.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fcoercion.rs?ref=5efdde0de161a5b374e16e20d09322e5a0eba4f9", "patch": "@@ -62,16 +62,16 @@\n \n use check::{autoderef, FnCtxt, UnresolvedTypeAction};\n \n-use middle::infer::{Coercion, TypeOrigin, TypeTrace};\n-use middle::traits::{self, ObligationCause};\n-use middle::traits::{predicate_for_trait_def, report_selection_error};\n-use middle::ty::adjustment::{AutoAdjustment, AutoDerefRef, AdjustDerefRef};\n-use middle::ty::adjustment::{AutoPtr, AutoUnsafe, AdjustReifyFnPointer};\n-use middle::ty::adjustment::{AdjustUnsafeFnPointer, AdjustMutToConstPointer};\n-use middle::ty::{self, LvaluePreference, TypeAndMut, Ty, TyCtxt};\n-use middle::ty::fold::TypeFoldable;\n-use middle::ty::error::TypeError;\n-use middle::ty::relate::{relate_substs, Relate, RelateResult, TypeRelation};\n+use rustc::infer::{Coercion, TypeOrigin, TypeTrace};\n+use rustc::traits::{self, ObligationCause};\n+use rustc::traits::{predicate_for_trait_def, report_selection_error};\n+use rustc::ty::adjustment::{AutoAdjustment, AutoDerefRef, AdjustDerefRef};\n+use rustc::ty::adjustment::{AutoPtr, AutoUnsafe, AdjustReifyFnPointer};\n+use rustc::ty::adjustment::{AdjustUnsafeFnPointer, AdjustMutToConstPointer};\n+use rustc::ty::{self, LvaluePreference, TypeAndMut, Ty, TyCtxt};\n+use rustc::ty::fold::TypeFoldable;\n+use rustc::ty::error::TypeError;\n+use rustc::ty::relate::{relate_substs, Relate, RelateResult, TypeRelation};\n use util::common::indent;\n \n use std::cell::RefCell;"}, {"sha": "6d429fa7b73a194d4022129fc6d9a4a1c4f47a39", "filename": "src/librustc_typeck/check/compare_method.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc_typeck%2Fcheck%2Fcompare_method.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc_typeck%2Fcheck%2Fcompare_method.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fcompare_method.rs?ref=5efdde0de161a5b374e16e20d09322e5a0eba4f9", "patch": "@@ -9,10 +9,10 @@\n // except according to those terms.\n \n use middle::free_region::FreeRegionMap;\n-use middle::infer::{self, TypeOrigin};\n-use middle::ty::{self, TyCtxt};\n-use middle::traits::{self, ProjectionMode};\n-use middle::ty::subst::{self, Subst, Substs, VecPerParamSpace};\n+use rustc::infer::{self, TypeOrigin};\n+use rustc::ty::{self, TyCtxt};\n+use rustc::traits::{self, ProjectionMode};\n+use rustc::ty::subst::{self, Subst, Substs, VecPerParamSpace};\n \n use syntax::ast;\n use syntax::codemap::Span;"}, {"sha": "d8bdf6c61aad43430df4f5808c41d33ecd0df5e8", "filename": "src/librustc_typeck/check/demand.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc_typeck%2Fcheck%2Fdemand.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc_typeck%2Fcheck%2Fdemand.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fdemand.rs?ref=5efdde0de161a5b374e16e20d09322e5a0eba4f9", "patch": "@@ -10,8 +10,8 @@\n \n \n use check::{coercion, FnCtxt};\n-use middle::ty::Ty;\n-use middle::infer::TypeOrigin;\n+use rustc::ty::Ty;\n+use rustc::infer::TypeOrigin;\n \n use syntax::codemap::Span;\n use rustc_front::hir;"}, {"sha": "bf2388ab793156818dd9840405de0be61f2b62d8", "filename": "src/librustc_typeck/check/dropck.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc_typeck%2Fcheck%2Fdropck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc_typeck%2Fcheck%2Fdropck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fdropck.rs?ref=5efdde0de161a5b374e16e20d09322e5a0eba4f9", "patch": "@@ -12,11 +12,11 @@ use check::regionck::{self, Rcx};\n \n use middle::def_id::DefId;\n use middle::free_region::FreeRegionMap;\n-use middle::infer;\n+use rustc::infer;\n use middle::region;\n-use middle::ty::subst::{self, Subst};\n-use middle::ty::{self, Ty, TyCtxt};\n-use middle::traits::{self, ProjectionMode};\n+use rustc::ty::subst::{self, Subst};\n+use rustc::ty::{self, Ty, TyCtxt};\n+use rustc::traits::{self, ProjectionMode};\n use util::nodemap::FnvHashSet;\n \n use syntax::ast;"}, {"sha": "8720469a724763d7f4e4d8368cd65c30e68ac983", "filename": "src/librustc_typeck/check/intrinsic.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc_typeck%2Fcheck%2Fintrinsic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc_typeck%2Fcheck%2Fintrinsic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fintrinsic.rs?ref=5efdde0de161a5b374e16e20d09322e5a0eba4f9", "patch": "@@ -13,10 +13,10 @@\n \n use astconv::AstConv;\n use intrinsics;\n-use middle::ty::subst::{self, Substs};\n-use middle::ty::FnSig;\n-use middle::ty::{self, Ty, TyCtxt};\n-use middle::ty::fold::TypeFolder;\n+use rustc::ty::subst::{self, Substs};\n+use rustc::ty::FnSig;\n+use rustc::ty::{self, Ty, TyCtxt};\n+use rustc::ty::fold::TypeFolder;\n use {CrateCtxt, require_same_types};\n \n use std::collections::{HashMap};"}, {"sha": "310245f0a0e10db7925d50f143cdc2f7280f5084", "filename": "src/librustc_typeck/check/method/confirm.rs", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc_typeck%2Fcheck%2Fmethod%2Fconfirm.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc_typeck%2Fcheck%2Fmethod%2Fconfirm.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fmethod%2Fconfirm.rs?ref=5efdde0de161a5b374e16e20d09322e5a0eba4f9", "patch": "@@ -13,13 +13,13 @@ use super::probe;\n use check::{self, FnCtxt, callee, demand};\n use check::UnresolvedTypeAction;\n use middle::def_id::DefId;\n-use middle::ty::subst::{self};\n-use middle::traits;\n-use middle::ty::{self, NoPreference, PreferMutLvalue, Ty, TyCtxt};\n-use middle::ty::adjustment::{AdjustDerefRef, AutoDerefRef, AutoPtr};\n-use middle::ty::fold::TypeFoldable;\n-use middle::infer;\n-use middle::infer::{InferCtxt, TypeOrigin};\n+use rustc::ty::subst::{self};\n+use rustc::traits;\n+use rustc::ty::{self, NoPreference, PreferMutLvalue, Ty, TyCtxt};\n+use rustc::ty::adjustment::{AdjustDerefRef, AutoDerefRef, AutoPtr};\n+use rustc::ty::fold::TypeFoldable;\n+use rustc::infer;\n+use rustc::infer::{InferCtxt, TypeOrigin};\n use syntax::codemap::Span;\n use rustc_front::hir;\n "}, {"sha": "11f7feba86b327b97f9c1b76fc7685ff1b25e407", "filename": "src/librustc_typeck/check/method/mod.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc_typeck%2Fcheck%2Fmethod%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc_typeck%2Fcheck%2Fmethod%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fmethod%2Fmod.rs?ref=5efdde0de161a5b374e16e20d09322e5a0eba4f9", "patch": "@@ -14,11 +14,11 @@ use astconv::AstConv;\n use check::FnCtxt;\n use middle::def::Def;\n use middle::def_id::DefId;\n-use middle::ty::subst;\n-use middle::traits;\n-use middle::ty::{self, TyCtxt, ToPredicate, ToPolyTraitRef, TraitRef, TypeFoldable};\n-use middle::ty::adjustment::{AdjustDerefRef, AutoDerefRef, AutoPtr};\n-use middle::infer;\n+use rustc::ty::subst;\n+use rustc::traits;\n+use rustc::ty::{self, TyCtxt, ToPredicate, ToPolyTraitRef, TraitRef, TypeFoldable};\n+use rustc::ty::adjustment::{AdjustDerefRef, AutoDerefRef, AutoPtr};\n+use rustc::infer;\n \n use syntax::ast;\n use syntax::codemap::Span;"}, {"sha": "4b42846297b1667af531fa86c7cc806e7a272215", "filename": "src/librustc_typeck/check/method/probe.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc_typeck%2Fcheck%2Fmethod%2Fprobe.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc_typeck%2Fcheck%2Fmethod%2Fprobe.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fmethod%2Fprobe.rs?ref=5efdde0de161a5b374e16e20d09322e5a0eba4f9", "patch": "@@ -16,12 +16,12 @@ use super::suggest;\n use check;\n use check::{FnCtxt, UnresolvedTypeAction};\n use middle::def_id::DefId;\n-use middle::ty::subst;\n-use middle::ty::subst::Subst;\n-use middle::traits;\n-use middle::ty::{self, NoPreference, Ty, TyCtxt, ToPolyTraitRef, TraitRef, TypeFoldable};\n-use middle::infer;\n-use middle::infer::{InferCtxt, TypeOrigin};\n+use rustc::ty::subst;\n+use rustc::ty::subst::Subst;\n+use rustc::traits;\n+use rustc::ty::{self, NoPreference, Ty, TyCtxt, ToPolyTraitRef, TraitRef, TypeFoldable};\n+use rustc::infer;\n+use rustc::infer::{InferCtxt, TypeOrigin};\n use syntax::ast;\n use syntax::codemap::{Span, DUMMY_SP};\n use rustc_front::hir;"}, {"sha": "aae7912cace409019f1b27960d6cd3c5dfbbf198", "filename": "src/librustc_typeck/check/method/suggest.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc_typeck%2Fcheck%2Fmethod%2Fsuggest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc_typeck%2Fcheck%2Fmethod%2Fsuggest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fmethod%2Fsuggest.rs?ref=5efdde0de161a5b374e16e20d09322e5a0eba4f9", "patch": "@@ -16,13 +16,13 @@ use CrateCtxt;\n use astconv::AstConv;\n use check::{self, FnCtxt};\n use front::map as hir_map;\n-use middle::ty::{self, Ty, ToPolyTraitRef, ToPredicate, TypeFoldable};\n+use rustc::ty::{self, Ty, ToPolyTraitRef, ToPredicate, TypeFoldable};\n use middle::cstore::{self, CrateStore};\n use middle::def::Def;\n use middle::def_id::DefId;\n use middle::lang_items::FnOnceTraitLangItem;\n-use middle::ty::subst::Substs;\n-use middle::traits::{Obligation, SelectionContext};\n+use rustc::ty::subst::Substs;\n+use rustc::traits::{Obligation, SelectionContext};\n use util::nodemap::{FnvHashSet};\n \n "}, {"sha": "c5a0657594eb20df1c8fe2dffda388bafebfcadd", "filename": "src/librustc_typeck/check/mod.rs", "status": "modified", "additions": 20, "deletions": 20, "changes": 40, "blob_url": "https://github.com/rust-lang/rust/blob/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs?ref=5efdde0de161a5b374e16e20d09322e5a0eba4f9", "patch": "@@ -88,21 +88,21 @@ use middle::astconv_util::prohibit_type_params;\n use middle::cstore::LOCAL_CRATE;\n use middle::def::{self, Def};\n use middle::def_id::DefId;\n-use middle::infer;\n-use middle::infer::{TypeOrigin, TypeTrace, type_variable};\n+use rustc::infer;\n+use rustc::infer::{TypeOrigin, TypeTrace, type_variable};\n use middle::pat_util::{self, pat_id_map};\n-use middle::ty::subst::{self, Subst, Substs, VecPerParamSpace, ParamSpace};\n-use middle::traits::{self, report_fulfillment_errors, ProjectionMode};\n-use middle::ty::{GenericPredicates, TypeScheme};\n-use middle::ty::{ParamTy, ParameterEnvironment};\n-use middle::ty::{LvaluePreference, NoPreference, PreferMutLvalue};\n-use middle::ty::{self, ToPolyTraitRef, Ty, TyCtxt};\n-use middle::ty::{MethodCall, MethodCallee};\n-use middle::ty::adjustment;\n-use middle::ty::error::TypeError;\n-use middle::ty::fold::{TypeFolder, TypeFoldable};\n-use middle::ty::relate::TypeRelation;\n-use middle::ty::util::{Representability, IntTypeExt};\n+use rustc::ty::subst::{self, Subst, Substs, VecPerParamSpace, ParamSpace};\n+use rustc::traits::{self, report_fulfillment_errors, ProjectionMode};\n+use rustc::ty::{GenericPredicates, TypeScheme};\n+use rustc::ty::{ParamTy, ParameterEnvironment};\n+use rustc::ty::{LvaluePreference, NoPreference, PreferMutLvalue};\n+use rustc::ty::{self, ToPolyTraitRef, Ty, TyCtxt};\n+use rustc::ty::{MethodCall, MethodCallee};\n+use rustc::ty::adjustment;\n+use rustc::ty::error::TypeError;\n+use rustc::ty::fold::{TypeFolder, TypeFoldable};\n+use rustc::ty::relate::TypeRelation;\n+use rustc::ty::util::{Representability, IntTypeExt};\n use require_c_abi_if_variadic;\n use rscope::{ElisionFailureInfo, RegionScope};\n use session::{Session, CompileResult};\n@@ -1769,8 +1769,8 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n     /// Apply \"fallbacks\" to some types\n     /// ! gets replaced with (), unconstrained ints with i32, and unconstrained floats with f64.\n     fn default_type_parameters(&self) {\n-        use middle::ty::error::UnconstrainedNumeric::Neither;\n-        use middle::ty::error::UnconstrainedNumeric::{UnconstrainedInt, UnconstrainedFloat};\n+        use rustc::ty::error::UnconstrainedNumeric::Neither;\n+        use rustc::ty::error::UnconstrainedNumeric::{UnconstrainedInt, UnconstrainedFloat};\n         for ty in &self.infcx().unsolved_variables() {\n             let resolved = self.infcx().resolve_type_vars_if_possible(ty);\n             if self.infcx().type_var_diverges(resolved) {\n@@ -1805,8 +1805,8 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n     }\n \n     fn new_select_all_obligations_and_apply_defaults(&self) {\n-        use middle::ty::error::UnconstrainedNumeric::Neither;\n-        use middle::ty::error::UnconstrainedNumeric::{UnconstrainedInt, UnconstrainedFloat};\n+        use rustc::ty::error::UnconstrainedNumeric::Neither;\n+        use rustc::ty::error::UnconstrainedNumeric::{UnconstrainedInt, UnconstrainedFloat};\n \n         // For the time being this errs on the side of being memory wasteful but provides better\n         // error reporting.\n@@ -1978,8 +1978,8 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n                                 default_map: &FnvHashMap<&Ty<'tcx>, type_variable::Default<'tcx>>,\n                                 conflict: Ty<'tcx>)\n                                 -> Option<type_variable::Default<'tcx>> {\n-        use middle::ty::error::UnconstrainedNumeric::Neither;\n-        use middle::ty::error::UnconstrainedNumeric::{UnconstrainedInt, UnconstrainedFloat};\n+        use rustc::ty::error::UnconstrainedNumeric::Neither;\n+        use rustc::ty::error::UnconstrainedNumeric::{UnconstrainedInt, UnconstrainedFloat};\n \n         // Ensure that we apply the conflicting default first\n         let mut unbound_tyvars = Vec::with_capacity(unbound_vars.len() + 1);"}, {"sha": "281564af6158a4466bce00e298d1a455b68154ef", "filename": "src/librustc_typeck/check/op.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc_typeck%2Fcheck%2Fop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc_typeck%2Fcheck%2Fop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fop.rs?ref=5efdde0de161a5b374e16e20d09322e5a0eba4f9", "patch": "@@ -19,7 +19,7 @@ use super::{\n     FnCtxt,\n };\n use middle::def_id::DefId;\n-use middle::ty::{Ty, TypeFoldable, PreferMutLvalue};\n+use rustc::ty::{Ty, TypeFoldable, PreferMutLvalue};\n use syntax::ast;\n use syntax::parse::token;\n use rustc_front::hir;\n@@ -335,7 +335,7 @@ fn lookup_op_method<'a, 'tcx>(fcx: &'a FnCtxt<'a, 'tcx>,\n             let method_ty = method.ty;\n \n             // HACK(eddyb) Fully qualified path to work around a resolve bug.\n-            let method_call = ::middle::ty::MethodCall::expr(expr.id);\n+            let method_call = ::rustc::ty::MethodCall::expr(expr.id);\n             fcx.inh.tables.borrow_mut().method_map.insert(method_call, method);\n \n             // extract return type for method; all late bound regions"}, {"sha": "533d24686e71f13cabb181d8c76f03c3893694e9", "filename": "src/librustc_typeck/check/regionck.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc_typeck%2Fcheck%2Fregionck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc_typeck%2Fcheck%2Fregionck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fregionck.rs?ref=5efdde0de161a5b374e16e20d09322e5a0eba4f9", "patch": "@@ -89,13 +89,13 @@ use middle::free_region::FreeRegionMap;\n use middle::mem_categorization as mc;\n use middle::mem_categorization::Categorization;\n use middle::region::{self, CodeExtent};\n-use middle::ty::subst::Substs;\n-use middle::traits;\n-use middle::ty::{self, Ty, TyCtxt, MethodCall, TypeFoldable};\n-use middle::infer::{self, GenericKind, InferCtxt, SubregionOrigin, TypeOrigin, VerifyBound};\n+use rustc::ty::subst::Substs;\n+use rustc::traits;\n+use rustc::ty::{self, Ty, TyCtxt, MethodCall, TypeFoldable};\n+use rustc::infer::{self, GenericKind, InferCtxt, SubregionOrigin, TypeOrigin, VerifyBound};\n use middle::pat_util;\n-use middle::ty::adjustment;\n-use middle::ty::wf::ImpliedBound;\n+use rustc::ty::adjustment;\n+use rustc::ty::wf::ImpliedBound;\n \n use std::mem;\n use syntax::ast;"}, {"sha": "69e49e6a9864682f92fe94f07a4e0d4d5506ff46", "filename": "src/librustc_typeck/check/upvar.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc_typeck%2Fcheck%2Fupvar.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc_typeck%2Fcheck%2Fupvar.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fupvar.rs?ref=5efdde0de161a5b374e16e20d09322e5a0eba4f9", "patch": "@@ -46,8 +46,8 @@ use check::demand;\n use middle::expr_use_visitor as euv;\n use middle::mem_categorization as mc;\n use middle::mem_categorization::Categorization;\n-use middle::ty::{self, Ty, TyCtxt};\n-use middle::infer::{InferCtxt, UpvarRegion};\n+use rustc::ty::{self, Ty, TyCtxt};\n+use rustc::infer::{InferCtxt, UpvarRegion};\n use std::collections::HashSet;\n use syntax::ast;\n use syntax::codemap::Span;"}, {"sha": "047dfec1796ebda167f966c9d4ea1a1e46c9f34f", "filename": "src/librustc_typeck/check/wfcheck.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc_typeck%2Fcheck%2Fwfcheck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc_typeck%2Fcheck%2Fwfcheck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fwfcheck.rs?ref=5efdde0de161a5b374e16e20d09322e5a0eba4f9", "patch": "@@ -14,10 +14,10 @@ use constrained_type_params::{identify_constrained_type_params, Parameter};\n use CrateCtxt;\n use middle::def_id::DefId;\n use middle::region::{CodeExtent};\n-use middle::ty::subst::{self, TypeSpace, FnSpace, ParamSpace, SelfSpace};\n-use middle::traits;\n-use middle::ty::{self, Ty, TyCtxt};\n-use middle::ty::fold::{TypeFolder};\n+use rustc::ty::subst::{self, TypeSpace, FnSpace, ParamSpace, SelfSpace};\n+use rustc::traits;\n+use rustc::ty::{self, Ty, TyCtxt};\n+use rustc::ty::fold::{TypeFolder};\n \n use std::cell::RefCell;\n use std::collections::HashSet;"}, {"sha": "7ede85454e90f2854c7fb516768b3aa20c6ed21f", "filename": "src/librustc_typeck/check/writeback.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc_typeck%2Fcheck%2Fwriteback.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc_typeck%2Fcheck%2Fwriteback.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fwriteback.rs?ref=5efdde0de161a5b374e16e20d09322e5a0eba4f9", "patch": "@@ -17,10 +17,10 @@ use astconv::AstConv;\n use check::FnCtxt;\n use middle::def_id::DefId;\n use middle::pat_util;\n-use middle::ty::{self, Ty, TyCtxt, MethodCall, MethodCallee};\n-use middle::ty::adjustment;\n-use middle::ty::fold::{TypeFolder,TypeFoldable};\n-use middle::infer;\n+use rustc::ty::{self, Ty, TyCtxt, MethodCall, MethodCallee};\n+use rustc::ty::adjustment;\n+use rustc::ty::fold::{TypeFolder,TypeFoldable};\n+use rustc::infer;\n use write_substs_to_tcx;\n use write_ty_to_tcx;\n "}, {"sha": "c3b46ef83acef41fe256d7cf9ae2ea38d6223678", "filename": "src/librustc_typeck/coherence/mod.rs", "status": "modified", "additions": 13, "deletions": 13, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc_typeck%2Fcoherence%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc_typeck%2Fcoherence%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcoherence%2Fmod.rs?ref=5efdde0de161a5b374e16e20d09322e5a0eba4f9", "patch": "@@ -17,21 +17,21 @@\n \n use middle::def_id::DefId;\n use middle::lang_items::UnsizeTraitLangItem;\n-use middle::ty::subst::{self, Subst};\n-use middle::ty::{self, TyCtxt, TypeFoldable};\n-use middle::traits::{self, ProjectionMode};\n-use middle::ty::{ImplOrTraitItemId, ConstTraitItemId};\n-use middle::ty::{MethodTraitItemId, TypeTraitItemId, ParameterEnvironment};\n-use middle::ty::{Ty, TyBool, TyChar, TyEnum, TyError};\n-use middle::ty::{TyParam, TyRawPtr};\n-use middle::ty::{TyRef, TyStruct, TyTrait, TyTuple};\n-use middle::ty::{TyStr, TyArray, TySlice, TyFloat, TyInfer, TyInt};\n-use middle::ty::{TyUint, TyClosure, TyBox, TyFnDef, TyFnPtr};\n-use middle::ty::TyProjection;\n-use middle::ty::util::CopyImplementationError;\n+use rustc::ty::subst::{self, Subst};\n+use rustc::ty::{self, TyCtxt, TypeFoldable};\n+use rustc::traits::{self, ProjectionMode};\n+use rustc::ty::{ImplOrTraitItemId, ConstTraitItemId};\n+use rustc::ty::{MethodTraitItemId, TypeTraitItemId, ParameterEnvironment};\n+use rustc::ty::{Ty, TyBool, TyChar, TyEnum, TyError};\n+use rustc::ty::{TyParam, TyRawPtr};\n+use rustc::ty::{TyRef, TyStruct, TyTrait, TyTuple};\n+use rustc::ty::{TyStr, TyArray, TySlice, TyFloat, TyInfer, TyInt};\n+use rustc::ty::{TyUint, TyClosure, TyBox, TyFnDef, TyFnPtr};\n+use rustc::ty::TyProjection;\n+use rustc::ty::util::CopyImplementationError;\n use middle::free_region::FreeRegionMap;\n use CrateCtxt;\n-use middle::infer::{self, InferCtxt, TypeOrigin, new_infer_ctxt};\n+use rustc::infer::{self, InferCtxt, TypeOrigin, new_infer_ctxt};\n use std::cell::RefCell;\n use std::rc::Rc;\n use syntax::ast;"}, {"sha": "eba3e56c722074c625330b3452add9ea79fddd6f", "filename": "src/librustc_typeck/coherence/orphan.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc_typeck%2Fcoherence%2Forphan.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc_typeck%2Fcoherence%2Forphan.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcoherence%2Forphan.rs?ref=5efdde0de161a5b374e16e20d09322e5a0eba4f9", "patch": "@@ -13,8 +13,8 @@\n \n use middle::cstore::LOCAL_CRATE;\n use middle::def_id::DefId;\n-use middle::traits;\n-use middle::ty::{self, TyCtxt};\n+use rustc::traits;\n+use rustc::ty::{self, TyCtxt};\n use syntax::ast;\n use syntax::codemap::Span;\n use rustc::dep_graph::DepNode;"}, {"sha": "d7d4560a4eac3b308a845f2235ab530746d806bb", "filename": "src/librustc_typeck/coherence/overlap.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc_typeck%2Fcoherence%2Foverlap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc_typeck%2Fcoherence%2Foverlap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcoherence%2Foverlap.rs?ref=5efdde0de161a5b374e16e20d09322e5a0eba4f9", "patch": "@@ -14,9 +14,9 @@\n \n use middle::cstore::CrateStore;\n use middle::def_id::DefId;\n-use middle::traits::{self, ProjectionMode};\n-use middle::infer;\n-use middle::ty::{self, TyCtxt};\n+use rustc::traits::{self, ProjectionMode};\n+use rustc::infer;\n+use rustc::ty::{self, TyCtxt};\n use syntax::ast;\n use rustc::dep_graph::DepNode;\n use rustc_front::hir;"}, {"sha": "6d77200daa384b2ceb81561178513b6ef7489d11", "filename": "src/librustc_typeck/coherence/unsafety.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc_typeck%2Fcoherence%2Funsafety.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc_typeck%2Fcoherence%2Funsafety.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcoherence%2Funsafety.rs?ref=5efdde0de161a5b374e16e20d09322e5a0eba4f9", "patch": "@@ -11,7 +11,7 @@\n //! Unsafety checker: every impl either implements a trait defined in this\n //! crate or pertains to a type defined in this crate.\n \n-use middle::ty::TyCtxt;\n+use rustc::ty::TyCtxt;\n use rustc_front::intravisit;\n use rustc_front::hir;\n "}, {"sha": "0b447b2009b5875746d650c0823419692b20c90e", "filename": "src/librustc_typeck/collect.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc_typeck%2Fcollect.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc_typeck%2Fcollect.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcollect.rs?ref=5efdde0de161a5b374e16e20d09322e5a0eba4f9", "patch": "@@ -68,12 +68,12 @@ use middle::lang_items::SizedTraitLangItem;\n use middle::resolve_lifetime;\n use middle::const_eval::{self, ConstVal};\n use middle::const_eval::EvalHint::UncheckedExprHint;\n-use middle::ty::subst::{Substs, FnSpace, ParamSpace, SelfSpace, TypeSpace, VecPerParamSpace};\n-use middle::ty::{ToPredicate, ImplContainer, ImplOrTraitItemContainer, TraitContainer};\n-use middle::ty::{self, ToPolyTraitRef, Ty, TyCtxt, TypeScheme};\n-use middle::ty::{VariantKind};\n-use middle::ty::fold::{TypeFolder};\n-use middle::ty::util::IntTypeExt;\n+use rustc::ty::subst::{Substs, FnSpace, ParamSpace, SelfSpace, TypeSpace, VecPerParamSpace};\n+use rustc::ty::{ToPredicate, ImplContainer, ImplOrTraitItemContainer, TraitContainer};\n+use rustc::ty::{self, ToPolyTraitRef, Ty, TyCtxt, TypeScheme};\n+use rustc::ty::{VariantKind};\n+use rustc::ty::fold::{TypeFolder};\n+use rustc::ty::util::IntTypeExt;\n use rscope::*;\n use rustc::dep_graph::DepNode;\n use rustc::front::map as hir_map;"}, {"sha": "7e8b08c58539b81425a40f7fb71f974822bffb5f", "filename": "src/librustc_typeck/constrained_type_params.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc_typeck%2Fconstrained_type_params.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc_typeck%2Fconstrained_type_params.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fconstrained_type_params.rs?ref=5efdde0de161a5b374e16e20d09322e5a0eba4f9", "patch": "@@ -8,8 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-use middle::ty::subst;\n-use middle::ty::{self, Ty, TyCtxt};\n+use rustc::ty::subst;\n+use rustc::ty::{self, Ty, TyCtxt};\n \n use std::collections::HashSet;\n "}, {"sha": "9b0fdd8a2e327e16b53226a01ddfc57b4f7b185b", "filename": "src/librustc_typeck/lib.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc_typeck%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc_typeck%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Flib.rs?ref=5efdde0de161a5b374e16e20d09322e5a0eba4f9", "patch": "@@ -104,10 +104,10 @@ pub use rustc::util;\n use dep_graph::DepNode;\n use front::map as hir_map;\n use middle::def::Def;\n-use middle::infer::{self, TypeOrigin};\n-use middle::ty::subst::Substs;\n-use middle::ty::{self, Ty, TyCtxt, TypeFoldable};\n-use middle::traits::ProjectionMode;\n+use rustc::infer::{self, TypeOrigin};\n+use rustc::ty::subst::Substs;\n+use rustc::ty::{self, Ty, TyCtxt, TypeFoldable};\n+use rustc::traits::ProjectionMode;\n use session::{config, CompileResult};\n use util::common::time;\n use rustc_front::hir;"}, {"sha": "793dba1e3f5f8bac6693f5eac7f4af2eb9f7ba1d", "filename": "src/librustc_typeck/rscope.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc_typeck%2Frscope.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc_typeck%2Frscope.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Frscope.rs?ref=5efdde0de161a5b374e16e20d09322e5a0eba4f9", "patch": "@@ -9,7 +9,7 @@\n // except according to those terms.\n \n \n-use middle::ty;\n+use rustc::ty;\n \n use std::cell::Cell;\n use syntax::codemap::Span;"}, {"sha": "1ed355c90a5468ec7c3874b0ab34abc5d9fcece9", "filename": "src/librustc_typeck/variance/constraints.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc_typeck%2Fvariance%2Fconstraints.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc_typeck%2Fvariance%2Fconstraints.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fvariance%2Fconstraints.rs?ref=5efdde0de161a5b374e16e20d09322e5a0eba4f9", "patch": "@@ -16,10 +16,10 @@\n use dep_graph::DepTrackingMapConfig;\n use middle::def_id::DefId;\n use middle::resolve_lifetime as rl;\n-use middle::ty::subst;\n-use middle::ty::subst::ParamSpace;\n-use middle::ty::{self, Ty, TyCtxt};\n-use middle::ty::maps::ItemVariances;\n+use rustc::ty::subst;\n+use rustc::ty::subst::ParamSpace;\n+use rustc::ty::{self, Ty, TyCtxt};\n+use rustc::ty::maps::ItemVariances;\n use rustc::front::map as hir_map;\n use syntax::ast;\n use rustc_front::hir;"}, {"sha": "ee9f317f20fd08e37d7bf1370500f2b219d90b21", "filename": "src/librustc_typeck/variance/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc_typeck%2Fvariance%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc_typeck%2Fvariance%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fvariance%2Fmod.rs?ref=5efdde0de161a5b374e16e20d09322e5a0eba4f9", "patch": "@@ -12,7 +12,7 @@\n //! parameters. See README.md for details.\n \n use arena;\n-use middle::ty::TyCtxt;\n+use rustc::ty::TyCtxt;\n \n /// Defines the `TermsContext` basically houses an arena where we can\n /// allocate terms."}, {"sha": "0763cfd7e2e6064d5c1a31f918c603301b5a3798", "filename": "src/librustc_typeck/variance/solve.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc_typeck%2Fvariance%2Fsolve.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc_typeck%2Fvariance%2Fsolve.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fvariance%2Fsolve.rs?ref=5efdde0de161a5b374e16e20d09322e5a0eba4f9", "patch": "@@ -15,8 +15,8 @@\n //! optimal solution to the constraints. The final variance for each\n //! inferred is then written into the `variance_map` in the tcx.\n \n-use middle::ty::subst::VecPerParamSpace;\n-use middle::ty;\n+use rustc::ty::subst::VecPerParamSpace;\n+use rustc::ty;\n use std::rc::Rc;\n \n use super::constraints::*;"}, {"sha": "c6f82ba42e6be9fa02f65ab6ac2450eb3a94480f", "filename": "src/librustc_typeck/variance/terms.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc_typeck%2Fvariance%2Fterms.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc_typeck%2Fvariance%2Fterms.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fvariance%2Fterms.rs?ref=5efdde0de161a5b374e16e20d09322e5a0eba4f9", "patch": "@@ -21,9 +21,9 @@\n \n use arena::TypedArena;\n use dep_graph::DepTrackingMapConfig;\n-use middle::ty::subst::{ParamSpace, FnSpace, TypeSpace, SelfSpace, VecPerParamSpace};\n-use middle::ty::{self, TyCtxt};\n-use middle::ty::maps::ItemVariances;\n+use rustc::ty::subst::{ParamSpace, FnSpace, TypeSpace, SelfSpace, VecPerParamSpace};\n+use rustc::ty::{self, TyCtxt};\n+use rustc::ty::maps::ItemVariances;\n use std::fmt;\n use std::rc::Rc;\n use syntax::ast;"}, {"sha": "02a2ceb360d7f9fb3d9f819060dea059262fd863", "filename": "src/librustc_typeck/variance/xform.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc_typeck%2Fvariance%2Fxform.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustc_typeck%2Fvariance%2Fxform.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fvariance%2Fxform.rs?ref=5efdde0de161a5b374e16e20d09322e5a0eba4f9", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-use middle::ty;\n+use rustc::ty;\n \n pub trait Xform {\n     fn xform(self, v: Self) -> Self;"}, {"sha": "94dead3c00577be0a541aaa328d2f8fb277db129", "filename": "src/librustdoc/clean/inline.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustdoc%2Fclean%2Finline.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustdoc%2Fclean%2Finline.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Finline.rs?ref=5efdde0de161a5b374e16e20d09322e5a0eba4f9", "patch": "@@ -19,8 +19,8 @@ use rustc_front::hir;\n use rustc::middle::cstore::{self, CrateStore};\n use rustc::middle::def::Def;\n use rustc::middle::def_id::DefId;\n-use rustc::middle::ty::{self, TyCtxt};\n-use rustc::middle::ty::subst;\n+use rustc::ty::{self, TyCtxt};\n+use rustc::ty::subst;\n use rustc::middle::stability;\n use rustc::middle::const_eval;\n "}, {"sha": "e56286c8bedc6e60d838e5af39241b03e3ea0172", "filename": "src/librustdoc/clean/mod.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustdoc%2Fclean%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustdoc%2Fclean%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Fmod.rs?ref=5efdde0de161a5b374e16e20d09322e5a0eba4f9", "patch": "@@ -38,8 +38,8 @@ use rustc_trans::back::link;\n use rustc::middle::cstore::{self, CrateStore};\n use rustc::middle::def::Def;\n use rustc::middle::def_id::{DefId, DefIndex};\n-use rustc::middle::ty::subst::{self, ParamSpace, VecPerParamSpace};\n-use rustc::middle::ty;\n+use rustc::ty::subst::{self, ParamSpace, VecPerParamSpace};\n+use rustc::ty;\n use rustc::middle::stability;\n \n use rustc_front::hir;\n@@ -831,7 +831,7 @@ impl Clean<WherePredicate> for hir::WherePredicate {\n \n impl<'a> Clean<WherePredicate> for ty::Predicate<'a> {\n     fn clean(&self, cx: &DocContext) -> WherePredicate {\n-        use rustc::middle::ty::Predicate;\n+        use rustc::ty::Predicate;\n \n         match *self {\n             Predicate::Trait(ref pred) => pred.clean(cx),"}, {"sha": "e6a4d882c0449fdcc03e753dc698e2df6b0a0df1", "filename": "src/librustdoc/clean/simplify.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustdoc%2Fclean%2Fsimplify.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustdoc%2Fclean%2Fsimplify.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Fsimplify.rs?ref=5efdde0de161a5b374e16e20d09322e5a0eba4f9", "patch": "@@ -11,7 +11,7 @@\n //! Simplification of where clauses and parameter bounds into a prettier and\n //! more canonical form.\n //!\n-//! Currently all cross-crate-inlined function use `middle::ty` to reconstruct\n+//! Currently all cross-crate-inlined function use `rustc::ty` to reconstruct\n //! the AST (e.g. see all of `clean::inline`), but this is not always a\n //! non-lossy transformation. The current format of storage for where clauses\n //! for functions and such is simply a list of predicates. One example of this\n@@ -30,7 +30,7 @@ use std::mem;\n use std::collections::HashMap;\n \n use rustc::middle::def_id::DefId;\n-use rustc::middle::ty::subst;\n+use rustc::ty::subst;\n \n use clean::PathParameters as PP;\n use clean::WherePredicate as WP;"}, {"sha": "15a10a84e43628f1d8b418e1bef9ac6b99068dea", "filename": "src/librustdoc/core.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustdoc%2Fcore.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Flibrustdoc%2Fcore.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fcore.rs?ref=5efdde0de161a5b374e16e20d09322e5a0eba4f9", "patch": "@@ -15,7 +15,7 @@ use rustc::dep_graph::DepGraph;\n use rustc::session::{self, config};\n use rustc::middle::def_id::DefId;\n use rustc::middle::privacy::AccessLevels;\n-use rustc::middle::ty::{self, TyCtxt};\n+use rustc::ty::{self, TyCtxt};\n use rustc::front::map as hir_map;\n use rustc::lint;\n use rustc_trans::back::link;"}, {"sha": "3e1b46522a98dc4537d21331a8bba69552c804ee", "filename": "src/test/auxiliary/dummy_mir_pass.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Ftest%2Fauxiliary%2Fdummy_mir_pass.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Ftest%2Fauxiliary%2Fdummy_mir_pass.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fauxiliary%2Fdummy_mir_pass.rs?ref=5efdde0de161a5b374e16e20d09322e5a0eba4f9", "patch": "@@ -22,7 +22,7 @@ extern crate syntax;\n use rustc::mir::transform::{self, MirPass};\n use rustc::mir::repr::{Mir, Literal};\n use rustc::mir::visit::MutVisitor;\n-use rustc::middle::ty;\n+use rustc::ty;\n use rustc::middle::const_eval::ConstVal;\n use rustc_const_eval::ConstInt;\n use rustc_plugin::Registry;"}, {"sha": "0c4aae8cfad3651f37f37a8437408362a1ee02c6", "filename": "src/test/compile-fail/moves-based-on-type-cyclic-types-issue-4821.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Ftest%2Fcompile-fail%2Fmoves-based-on-type-cyclic-types-issue-4821.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Ftest%2Fcompile-fail%2Fmoves-based-on-type-cyclic-types-issue-4821.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fmoves-based-on-type-cyclic-types-issue-4821.rs?ref=5efdde0de161a5b374e16e20d09322e5a0eba4f9", "patch": "@@ -10,7 +10,7 @@\n \n // Test for a subtle failure computing kinds of cyclic types, in which\n // temporary kinds wound up being stored in a cache and used later.\n-// See middle::ty::type_contents() for more information.\n+// See rustc::ty::type_contents() for more information.\n \n \n struct List { key: isize, next: Option<Box<List>> }"}, {"sha": "7454bbfb531463c492fde2ad5017f51a563e6af6", "filename": "src/test/run-make/execution-engine/test.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Ftest%2Frun-make%2Fexecution-engine%2Ftest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5efdde0de161a5b374e16e20d09322e5a0eba4f9/src%2Ftest%2Frun-make%2Fexecution-engine%2Ftest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fexecution-engine%2Ftest.rs?ref=5efdde0de161a5b374e16e20d09322e5a0eba4f9", "patch": "@@ -30,7 +30,7 @@ use rustc::dep_graph::DepGraph;\n use rustc::front::map as ast_map;\n use rustc::llvm;\n use rustc::middle::cstore::{CrateStore, LinkagePreference};\n-use rustc::middle::ty;\n+use rustc::ty;\n use rustc::session::config::{self, basic_options, build_configuration, Input, Options};\n use rustc::session::build_session;\n use rustc_driver::{driver, abort_on_err};"}]}