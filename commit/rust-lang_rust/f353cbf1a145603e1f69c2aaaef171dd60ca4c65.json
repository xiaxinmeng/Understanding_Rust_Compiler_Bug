{"sha": "f353cbf1a145603e1f69c2aaaef171dd60ca4c65", "node_id": "MDY6Q29tbWl0NzI0NzEyOmYzNTNjYmYxYTE0NTYwM2UxZjY5YzJhYWFlZjE3MWRkNjBjYTRjNjU=", "commit": {"author": {"name": "Wesley Wiser", "email": "wesleywiser@microsoft.com", "date": "2021-04-26T18:39:57Z"}, "committer": {"name": "Wesley Wiser", "email": "wesleywiser@microsoft.com", "date": "2021-06-02T14:23:09Z"}, "message": "Generate better debuginfo for directly tagged enums", "tree": {"sha": "a1c3d4644264c06372c83a621fff2d50e152c070", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a1c3d4644264c06372c83a621fff2d50e152c070"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f353cbf1a145603e1f69c2aaaef171dd60ca4c65", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f353cbf1a145603e1f69c2aaaef171dd60ca4c65", "html_url": "https://github.com/rust-lang/rust/commit/f353cbf1a145603e1f69c2aaaef171dd60ca4c65", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f353cbf1a145603e1f69c2aaaef171dd60ca4c65/comments", "author": {"login": "wesleywiser", "id": 831192, "node_id": "MDQ6VXNlcjgzMTE5Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/831192?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wesleywiser", "html_url": "https://github.com/wesleywiser", "followers_url": "https://api.github.com/users/wesleywiser/followers", "following_url": "https://api.github.com/users/wesleywiser/following{/other_user}", "gists_url": "https://api.github.com/users/wesleywiser/gists{/gist_id}", "starred_url": "https://api.github.com/users/wesleywiser/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wesleywiser/subscriptions", "organizations_url": "https://api.github.com/users/wesleywiser/orgs", "repos_url": "https://api.github.com/users/wesleywiser/repos", "events_url": "https://api.github.com/users/wesleywiser/events{/privacy}", "received_events_url": "https://api.github.com/users/wesleywiser/received_events", "type": "User", "site_admin": false}, "committer": {"login": "wesleywiser", "id": 831192, "node_id": "MDQ6VXNlcjgzMTE5Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/831192?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wesleywiser", "html_url": "https://github.com/wesleywiser", "followers_url": "https://api.github.com/users/wesleywiser/followers", "following_url": "https://api.github.com/users/wesleywiser/following{/other_user}", "gists_url": "https://api.github.com/users/wesleywiser/gists{/gist_id}", "starred_url": "https://api.github.com/users/wesleywiser/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wesleywiser/subscriptions", "organizations_url": "https://api.github.com/users/wesleywiser/orgs", "repos_url": "https://api.github.com/users/wesleywiser/repos", "events_url": "https://api.github.com/users/wesleywiser/events{/privacy}", "received_events_url": "https://api.github.com/users/wesleywiser/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1e13a9bb33debb931d603278b7f1a706b0d11660", "url": "https://api.github.com/repos/rust-lang/rust/commits/1e13a9bb33debb931d603278b7f1a706b0d11660", "html_url": "https://github.com/rust-lang/rust/commit/1e13a9bb33debb931d603278b7f1a706b0d11660"}], "stats": {"total": 74, "additions": 52, "deletions": 22}, "files": [{"sha": "7a44e887c8932829205a3c65452d303d2c2c62c7", "filename": "compiler/rustc_codegen_llvm/src/debuginfo/metadata.rs", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/f353cbf1a145603e1f69c2aaaef171dd60ca4c65/compiler%2Frustc_codegen_llvm%2Fsrc%2Fdebuginfo%2Fmetadata.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f353cbf1a145603e1f69c2aaaef171dd60ca4c65/compiler%2Frustc_codegen_llvm%2Fsrc%2Fdebuginfo%2Fmetadata.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_llvm%2Fsrc%2Fdebuginfo%2Fmetadata.rs?ref=f353cbf1a145603e1f69c2aaaef171dd60ca4c65", "patch": "@@ -1574,7 +1574,7 @@ impl EnumMemberDescriptionFactory<'ll, 'tcx> {\n \n                         MemberDescription {\n                             name: if fallback {\n-                                String::new()\n+                                format!(\"Variant{}\", i.as_u32())\n                             } else {\n                                 variant_info.variant_name()\n                             },\n@@ -1886,8 +1886,9 @@ fn describe_enum_variant(\n                 // We have the layout of an enum variant, we need the layout of the outer enum\n                 let enum_layout = cx.layout_of(layout.ty);\n                 let offset = enum_layout.fields.offset(tag_field.as_usize());\n+                let tag_name = if cx.tcx.sess.target.is_like_msvc { \"variant$\" } else { \"RUST$ENUM$DISR\" };\n                 let args =\n-                    (\"RUST$ENUM$DISR\".to_owned(), enum_layout.field(cx, tag_field.as_usize()).ty);\n+                    (tag_name.to_owned(), enum_layout.field(cx, tag_field.as_usize()).ty);\n                 (Some(offset), Some(args))\n             }\n             _ => (None, None),\n@@ -2062,7 +2063,7 @@ fn prepare_enum_metadata(\n             unsafe {\n                 llvm::LLVMRustDIBuilderCreateUnionType(\n                     DIB(cx),\n-                    containing_scope,\n+                    None,\n                     enum_name.as_ptr().cast(),\n                     enum_name.len(),\n                     file_metadata,\n@@ -2437,7 +2438,7 @@ fn create_union_stub(\n \n         llvm::LLVMRustDIBuilderCreateUnionType(\n             DIB(cx),\n-            containing_scope,\n+            Some(containing_scope),\n             union_type_name.as_ptr().cast(),\n             union_type_name.len(),\n             unknown_file_metadata(cx),"}, {"sha": "54ef1a284689af60084f14f7a6894c6591c5b91f", "filename": "compiler/rustc_codegen_llvm/src/llvm/ffi.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f353cbf1a145603e1f69c2aaaef171dd60ca4c65/compiler%2Frustc_codegen_llvm%2Fsrc%2Fllvm%2Fffi.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f353cbf1a145603e1f69c2aaaef171dd60ca4c65/compiler%2Frustc_codegen_llvm%2Fsrc%2Fllvm%2Fffi.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_llvm%2Fsrc%2Fllvm%2Fffi.rs?ref=f353cbf1a145603e1f69c2aaaef171dd60ca4c65", "patch": "@@ -2038,7 +2038,7 @@ extern \"C\" {\n \n     pub fn LLVMRustDIBuilderCreateUnionType(\n         Builder: &DIBuilder<'a>,\n-        Scope: &'a DIScope,\n+        Scope: Option<&'a DIScope>,\n         Name: *const c_char,\n         NameLen: size_t,\n         File: &'a DIFile,"}, {"sha": "626c71abf63d9d67779eb262dfc003c6144590f7", "filename": "compiler/rustc_codegen_ssa/src/debuginfo/type_names.rs", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/f353cbf1a145603e1f69c2aaaef171dd60ca4c65/compiler%2Frustc_codegen_ssa%2Fsrc%2Fdebuginfo%2Ftype_names.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f353cbf1a145603e1f69c2aaaef171dd60ca4c65/compiler%2Frustc_codegen_ssa%2Fsrc%2Fdebuginfo%2Ftype_names.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_ssa%2Fsrc%2Fdebuginfo%2Ftype_names.rs?ref=f353cbf1a145603e1f69c2aaaef171dd60ca4c65", "patch": "@@ -45,8 +45,16 @@ pub fn push_debuginfo_type_name<'tcx>(\n         ty::Float(float_ty) => output.push_str(float_ty.name_str()),\n         ty::Foreign(def_id) => push_item_name(tcx, def_id, qualified, output),\n         ty::Adt(def, substs) => {\n+            if def.is_enum() && cpp_like_names {\n+                output.push_str(\"_enum<\");\n+            }\n+\n             push_item_name(tcx, def.did, qualified, output);\n             push_type_params(tcx, substs, output, visited);\n+\n+            if def.is_enum() && cpp_like_names {\n+                output.push('>');\n+            }\n         }\n         ty::Tuple(component_types) => {\n             if cpp_like_names {"}, {"sha": "45e36f929b4d1355cd1cb86b58420a7df9ecfbb7", "filename": "src/etc/natvis/intrinsic.natvis", "status": "modified", "additions": 38, "deletions": 0, "changes": 38, "blob_url": "https://github.com/rust-lang/rust/blob/f353cbf1a145603e1f69c2aaaef171dd60ca4c65/src%2Fetc%2Fnatvis%2Fintrinsic.natvis", "raw_url": "https://github.com/rust-lang/rust/raw/f353cbf1a145603e1f69c2aaaef171dd60ca4c65/src%2Fetc%2Fnatvis%2Fintrinsic.natvis", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fetc%2Fnatvis%2Fintrinsic.natvis?ref=f353cbf1a145603e1f69c2aaaef171dd60ca4c65", "patch": "@@ -149,4 +149,42 @@\n       <Synthetic Name=\"[...]\"><DisplayString>...</DisplayString></Synthetic>\n     </Expand>\n   </Type>\n+  <Type Name=\"_enum&lt;*&gt;\">\n+    <Intrinsic Name=\"tag\" Expression=\"Variant0.variant$\" />\n+    <DisplayString Condition=\"tag() == 0\">{tag(),en}</DisplayString>\n+    <DisplayString Condition=\"tag() == 1\" Optional=\"true\">{tag(),en}</DisplayString>\n+    <DisplayString Condition=\"tag() == 2\" Optional=\"true\">{tag(),en}</DisplayString>\n+    <DisplayString Condition=\"tag() == 3\" Optional=\"true\">{tag(),en}</DisplayString>\n+    <DisplayString Condition=\"tag() == 4\" Optional=\"true\">{tag(),en}</DisplayString>\n+    <DisplayString Condition=\"tag() == 5\" Optional=\"true\">{tag(),en}</DisplayString>\n+    <DisplayString Condition=\"tag() == 6\" Optional=\"true\">{tag(),en}</DisplayString>\n+    <DisplayString Condition=\"tag() == 7\" Optional=\"true\">{tag(),en}</DisplayString>\n+    <DisplayString Condition=\"tag() == 8\" Optional=\"true\">{tag(),en}</DisplayString>\n+    <DisplayString Condition=\"tag() == 9\" Optional=\"true\">{tag(),en}</DisplayString>\n+    <DisplayString Condition=\"tag() == 10\" Optional=\"true\">{tag(),en}</DisplayString>\n+    <DisplayString Condition=\"tag() == 11\" Optional=\"true\">{tag(),en}</DisplayString>\n+    <DisplayString Condition=\"tag() == 12\" Optional=\"true\">{tag(),en}</DisplayString>\n+    <DisplayString Condition=\"tag() == 13\" Optional=\"true\">{tag(),en}</DisplayString>\n+    <DisplayString Condition=\"tag() == 14\" Optional=\"true\">{tag(),en}</DisplayString>\n+    <DisplayString Condition=\"tag() == 15\" Optional=\"true\">{tag(),en}</DisplayString>\n+\n+    <Expand>\n+      <ExpandedItem Condition=\"tag() == 0\">Variant0</ExpandedItem>\n+      <ExpandedItem Condition=\"tag() == 1\" Optional=\"true\">Variant1</ExpandedItem>\n+      <ExpandedItem Condition=\"tag() == 2\" Optional=\"true\">Variant2</ExpandedItem>\n+      <ExpandedItem Condition=\"tag() == 3\" Optional=\"true\">Variant3</ExpandedItem>\n+      <ExpandedItem Condition=\"tag() == 4\" Optional=\"true\">Variant4</ExpandedItem>\n+      <ExpandedItem Condition=\"tag() == 5\" Optional=\"true\">Variant5</ExpandedItem>\n+      <ExpandedItem Condition=\"tag() == 6\" Optional=\"true\">Variant6</ExpandedItem>\n+      <ExpandedItem Condition=\"tag() == 7\" Optional=\"true\">Variant7</ExpandedItem>\n+      <ExpandedItem Condition=\"tag() == 8\" Optional=\"true\">Variant8</ExpandedItem>\n+      <ExpandedItem Condition=\"tag() == 9\" Optional=\"true\">Variant9</ExpandedItem>\n+      <ExpandedItem Condition=\"tag() == 10\" Optional=\"true\">Variant10</ExpandedItem>\n+      <ExpandedItem Condition=\"tag() == 11\" Optional=\"true\">Variant11</ExpandedItem>\n+      <ExpandedItem Condition=\"tag() == 12\" Optional=\"true\">Variant12</ExpandedItem>\n+      <ExpandedItem Condition=\"tag() == 13\" Optional=\"true\">Variant13</ExpandedItem>\n+      <ExpandedItem Condition=\"tag() == 14\" Optional=\"true\">Variant14</ExpandedItem>\n+      <ExpandedItem Condition=\"tag() == 15\" Optional=\"true\">Variant15</ExpandedItem>\n+    </Expand>\n+  </Type>\n </AutoVisualizer>"}, {"sha": "17667770520ce0e4442fce1f661dda04a0694403", "filename": "src/etc/natvis/libcore.natvis", "status": "modified", "additions": 0, "deletions": 17, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/f353cbf1a145603e1f69c2aaaef171dd60ca4c65/src%2Fetc%2Fnatvis%2Flibcore.natvis", "raw_url": "https://github.com/rust-lang/rust/raw/f353cbf1a145603e1f69c2aaaef171dd60ca4c65/src%2Fetc%2Fnatvis%2Flibcore.natvis", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fetc%2Fnatvis%2Flibcore.natvis?ref=f353cbf1a145603e1f69c2aaaef171dd60ca4c65", "patch": "@@ -14,14 +14,6 @@\n     </Expand>\n   </Type>\n \n-  <Type Name=\"core::option::Option&lt;*&gt;\">\n-    <DisplayString Condition=\"RUST$ENUM$DISR == 0x0\">None</DisplayString>\n-    <DisplayString Condition=\"RUST$ENUM$DISR == 0x1\">Some({__0})</DisplayString>\n-    <Expand>\n-      <Item Name=\"[value]\" ExcludeView=\"simple\" Condition=\"RUST$ENUM$DISR == 1\">__0</Item>\n-    </Expand>\n-  </Type>\n-\n   <Type Name=\"core::option::Option&lt;*&gt;\" Priority=\"MediumLow\">\n     <DisplayString Condition=\"*(void**)this == nullptr\">None</DisplayString>\n     <DisplayString>Some({($T1 *)this})</DisplayString>\n@@ -30,15 +22,6 @@\n     </Expand>\n   </Type>\n \n-  <Type Name=\"core::result::Result&lt;*&gt;\">\n-    <DisplayString Condition=\"RUST$ENUM$DISR == 0x0\">Ok({__0})</DisplayString>\n-    <DisplayString Condition=\"RUST$ENUM$DISR == 0x1\">Err({(*($T2*) &amp;__0)})</DisplayString>\n-    <Expand>\n-      <Item Name=\"[value]\" Condition=\"RUST$ENUM$DISR == 0x0\">__0</Item>\n-      <Item Name=\"[value]\" Condition=\"RUST$ENUM$DISR == 0x1\">(*($T2*) &amp;__0)</Item>\n-    </Expand>\n-  </Type>\n-\n   <Type Name=\"core::ptr::non_null::NonNull&lt;*&gt;\">\n     <DisplayString>{(void*) pointer}</DisplayString>\n     <Expand>"}]}