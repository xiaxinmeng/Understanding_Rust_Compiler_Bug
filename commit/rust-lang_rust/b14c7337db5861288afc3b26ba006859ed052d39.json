{"sha": "b14c7337db5861288afc3b26ba006859ed052d39", "node_id": "C_kwDOAAsO6NoAKGIxNGM3MzM3ZGI1ODYxMjg4YWZjM2IyNmJhMDA2ODU5ZWQwNTJkMzk", "commit": {"author": {"name": "bjorn3", "email": "17426603+bjorn3@users.noreply.github.com", "date": "2022-08-22T18:53:10Z"}, "committer": {"name": "bjorn3", "email": "17426603+bjorn3@users.noreply.github.com", "date": "2022-08-22T18:53:10Z"}, "message": "Update to Cranelift 0.87.0", "tree": {"sha": "60a6fac279f27224e94d1482f77fe71e1b5c0a30", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/60a6fac279f27224e94d1482f77fe71e1b5c0a30"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b14c7337db5861288afc3b26ba006859ed052d39", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b14c7337db5861288afc3b26ba006859ed052d39", "html_url": "https://github.com/rust-lang/rust/commit/b14c7337db5861288afc3b26ba006859ed052d39", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b14c7337db5861288afc3b26ba006859ed052d39/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7dc8f38956f4ad6650032fe0fbcf4fcbbe5a6c2b", "url": "https://api.github.com/repos/rust-lang/rust/commits/7dc8f38956f4ad6650032fe0fbcf4fcbbe5a6c2b", "html_url": "https://github.com/rust-lang/rust/commit/7dc8f38956f4ad6650032fe0fbcf4fcbbe5a6c2b"}], "stats": {"total": 88, "additions": 41, "deletions": 47}, "files": [{"sha": "edae7e471578a88a9ec482c52397ab5330ac4cda", "filename": "Cargo.lock", "status": "modified", "additions": 28, "deletions": 34, "changes": 62, "blob_url": "https://github.com/rust-lang/rust/blob/b14c7337db5861288afc3b26ba006859ed052d39/Cargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/b14c7337db5861288afc3b26ba006859ed052d39/Cargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.lock?ref=b14c7337db5861288afc3b26ba006859ed052d39", "patch": "@@ -50,18 +50,18 @@ checksum = \"baf1de4339761588bc0619e3cbc0120ee582ebb74b53b4efbf79117bd2da40fd\"\n \n [[package]]\n name = \"cranelift-bforest\"\n-version = \"0.86.1\"\n+version = \"0.87.0\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"529ffacce2249ac60edba2941672dfedf3d96558b415d0d8083cd007456e0f55\"\n+checksum = \"93945adbccc8d731503d3038814a51e8317497c9e205411820348132fa01a358\"\n dependencies = [\n  \"cranelift-entity\",\n ]\n \n [[package]]\n name = \"cranelift-codegen\"\n-version = \"0.86.1\"\n+version = \"0.87.0\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"427d105f617efc8cb55f8d036a7fded2e227892d8780b4985e5551f8d27c4a92\"\n+checksum = \"2b482acc9d0d0d1ad3288a90a8150ee648be3dce8dc8c8669ff026f72debdc31\"\n dependencies = [\n  \"cranelift-bforest\",\n  \"cranelift-codegen-meta\",\n@@ -77,30 +77,30 @@ dependencies = [\n \n [[package]]\n name = \"cranelift-codegen-meta\"\n-version = \"0.86.1\"\n+version = \"0.87.0\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"551674bed85b838d45358e3eab4f0ffaa6790c70dc08184204b9a54b41cdb7d1\"\n+checksum = \"f9ec188d71e663192ef9048f204e410a7283b609942efc9fcc77da6d496edbb8\"\n dependencies = [\n  \"cranelift-codegen-shared\",\n ]\n \n [[package]]\n name = \"cranelift-codegen-shared\"\n-version = \"0.86.1\"\n+version = \"0.87.0\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"2b3a63ae57498c3eb495360944a33571754241e15e47e3bcae6082f40fec5866\"\n+checksum = \"3ad794b1b1c2c7bd9f7b76cfe0f084eaf7753e55d56191c3f7d89e8fa4978b99\"\n \n [[package]]\n name = \"cranelift-entity\"\n-version = \"0.86.1\"\n+version = \"0.87.0\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"11aa8aa624c72cc1c94ea3d0739fa61248260b5b14d3646f51593a88d67f3e6e\"\n+checksum = \"342da0d5056f4119d3c311c4aab2460ceb6ee6e127bb395b76dd2279a09ea7a5\"\n \n [[package]]\n name = \"cranelift-frontend\"\n-version = \"0.86.1\"\n+version = \"0.87.0\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"544ee8f4d1c9559c9aa6d46e7aaeac4a13856d620561094f35527356c7d21bd0\"\n+checksum = \"dfff792f775b07d4d9cfe9f1c767ce755c6cbadda1bbd6db18a1c75ff9f7376a\"\n dependencies = [\n  \"cranelift-codegen\",\n  \"log\",\n@@ -110,15 +110,15 @@ dependencies = [\n \n [[package]]\n name = \"cranelift-isle\"\n-version = \"0.86.1\"\n+version = \"0.87.0\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"ed16b14363d929b8c37e3c557d0a7396791b383ecc302141643c054343170aad\"\n+checksum = \"8d51089478849f2ac8ef60a8a2d5346c8d4abfec0e45ac5b24530ef9f9499e1e\"\n \n [[package]]\n name = \"cranelift-jit\"\n-version = \"0.86.1\"\n+version = \"0.87.0\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"0308e7418208639fb96c1a3dc04955fa41c4bc92dfce9106635185f71d5caf46\"\n+checksum = \"095936e41720f86004b4c57ce88e6a13af28646bb3a6fb4afbebd5ae90c50029\"\n dependencies = [\n  \"anyhow\",\n  \"cranelift-codegen\",\n@@ -134,19 +134,19 @@ dependencies = [\n \n [[package]]\n name = \"cranelift-module\"\n-version = \"0.86.1\"\n+version = \"0.87.0\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"76979aac10dbcf0c222cd5902565bc93597ac30bbe9d879a2aa5f2402d1561f2\"\n+checksum = \"704a1aea4723d97eafe0fb7af110f6f6868b1ac95f5380bbc9adb2a3b8cf97e8\"\n dependencies = [\n  \"anyhow\",\n  \"cranelift-codegen\",\n ]\n \n [[package]]\n name = \"cranelift-native\"\n-version = \"0.86.1\"\n+version = \"0.87.0\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"51617cf8744634f2ed3c989c3c40cd6444f63377c6d994adab0d85807f3eb682\"\n+checksum = \"885debe62f2078638d6585f54c9f05f5c2008f22ce5a2a9100ada785fc065dbd\"\n dependencies = [\n  \"cranelift-codegen\",\n  \"libc\",\n@@ -155,9 +155,9 @@ dependencies = [\n \n [[package]]\n name = \"cranelift-object\"\n-version = \"0.86.1\"\n+version = \"0.87.0\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"50e649a13f3951ad3b8cb13a3a774481c12159a98eb386b04583573c57d7cf56\"\n+checksum = \"aac1310cf1081ae8eca916c92cd163b977c77cab6e831fa812273c26ff921816\"\n dependencies = [\n  \"anyhow\",\n  \"cranelift-codegen\",\n@@ -207,27 +207,21 @@ dependencies = [\n \n [[package]]\n name = \"hashbrown\"\n-version = \"0.11.2\"\n+version = \"0.12.3\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"ab5ef0d4909ef3724cc8cce6ccc8572c5c817592e9285f5464f8e86f8bd3726e\"\n+checksum = \"8a9ee70c43aaf417c914396645a0fa852624801b24ebb7ae78fe8272889ac888\"\n dependencies = [\n  \"ahash\",\n ]\n \n-[[package]]\n-name = \"hashbrown\"\n-version = \"0.12.3\"\n-source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"8a9ee70c43aaf417c914396645a0fa852624801b24ebb7ae78fe8272889ac888\"\n-\n [[package]]\n name = \"indexmap\"\n version = \"1.9.1\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n checksum = \"10a35a97730320ffe8e2d410b5d3b69279b98d2c14bdb8b70ea89ecf7888d41e\"\n dependencies = [\n  \"autocfg\",\n- \"hashbrown 0.12.3\",\n+ \"hashbrown\",\n ]\n \n [[package]]\n@@ -272,12 +266,12 @@ checksum = \"2dffe52ecf27772e601905b7522cb4ef790d2cc203488bbd0e2fe85fcb74566d\"\n \n [[package]]\n name = \"object\"\n-version = \"0.28.4\"\n+version = \"0.29.0\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"e42c982f2d955fac81dd7e1d0e1426a7d702acd9c98d19ab01083a6a0328c424\"\n+checksum = \"21158b2c33aa6d4561f1c0a6ea283ca92bc54802a93b263e910746d679a7eb53\"\n dependencies = [\n  \"crc32fast\",\n- \"hashbrown 0.11.2\",\n+ \"hashbrown\",\n  \"indexmap\",\n  \"memchr\",\n ]"}, {"sha": "e7c3427485480119829d0322b76cb0feb217e5f8", "filename": "Cargo.toml", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/b14c7337db5861288afc3b26ba006859ed052d39/Cargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/b14c7337db5861288afc3b26ba006859ed052d39/Cargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.toml?ref=b14c7337db5861288afc3b26ba006859ed052d39", "patch": "@@ -8,15 +8,15 @@ crate-type = [\"dylib\"]\n \n [dependencies]\n # These have to be in sync with each other\n-cranelift-codegen = { version = \"0.86.1\", features = [\"unwind\", \"all-arch\"] }\n-cranelift-frontend = \"0.86.1\"\n-cranelift-module = \"0.86.1\"\n-cranelift-native = \"0.86.1\"\n-cranelift-jit = { version = \"0.86.1\", optional = true }\n-cranelift-object = \"0.86.1\"\n+cranelift-codegen = { version = \"0.87.0\", features = [\"unwind\", \"all-arch\"] }\n+cranelift-frontend = \"0.87.0\"\n+cranelift-module = \"0.87.0\"\n+cranelift-native = \"0.87.0\"\n+cranelift-jit = { version = \"0.87.0\", optional = true }\n+cranelift-object = \"0.87.0\"\n target-lexicon = \"0.12.0\"\n gimli = { version = \"0.26.0\", default-features = false, features = [\"write\"]}\n-object = { version = \"0.28.0\", default-features = false, features = [\"std\", \"read_core\", \"write\", \"archive\", \"coff\", \"elf\", \"macho\", \"pe\"] }\n+object = { version = \"0.29.0\", default-features = false, features = [\"std\", \"read_core\", \"write\", \"archive\", \"coff\", \"elf\", \"macho\", \"pe\"] }\n \n ar = { git = \"https://github.com/bjorn3/rust-ar.git\", branch = \"do_not_remove_cg_clif_ranlib\" }\n indexmap = \"1.9.1\""}, {"sha": "f4ad76b3bab3c77edeb007f2c8b8c6dd9ef1e193", "filename": "src/abi/pass_mode.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b14c7337db5861288afc3b26ba006859ed052d39/src%2Fabi%2Fpass_mode.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b14c7337db5861288afc3b26ba006859ed052d39/src%2Fabi%2Fpass_mode.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fabi%2Fpass_mode.rs?ref=b14c7337db5861288afc3b26ba006859ed052d39", "patch": "@@ -184,7 +184,7 @@ pub(super) fn from_casted_value<'tcx>(\n     let abi_params = cast_target_to_abi_params(cast);\n     let abi_param_size: u32 = abi_params.iter().map(|param| param.value_type.bytes()).sum();\n     let layout_size = u32::try_from(layout.size.bytes()).unwrap();\n-    let stack_slot = fx.bcx.create_stack_slot(StackSlotData {\n+    let stack_slot = fx.bcx.create_sized_stack_slot(StackSlotData {\n         kind: StackSlotKind::ExplicitSlot,\n         // FIXME Don't force the size to a multiple of 16 bytes once Cranelift gets a way to\n         // specify stack slot alignment."}, {"sha": "3a4c2b8454958ae395b68f8b929dc6f4911e1871", "filename": "src/base.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b14c7337db5861288afc3b26ba006859ed052d39/src%2Fbase.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b14c7337db5861288afc3b26ba006859ed052d39/src%2Fbase.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbase.rs?ref=b14c7337db5861288afc3b26ba006859ed052d39", "patch": "@@ -202,7 +202,7 @@ fn compile_fn<'tcx>(\n             &clif_comments,\n         );\n \n-        if let Some(disasm) = &context.mach_compile_result.as_ref().unwrap().disasm {\n+        if let Some(disasm) = &context.compiled_code().unwrap().disasm {\n             crate::pretty_clif::write_ir_file(\n                 &cx.output_filenames,\n                 &format!(\"{}.vcode\", codegened_func.symbol_name.name),"}, {"sha": "3ad0c420eaf0b010b313e4dae0a785778eb21f0f", "filename": "src/debuginfo/line_info.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b14c7337db5861288afc3b26ba006859ed052d39/src%2Fdebuginfo%2Fline_info.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b14c7337db5861288afc3b26ba006859ed052d39/src%2Fdebuginfo%2Fline_info.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdebuginfo%2Fline_info.rs?ref=b14c7337db5861288afc3b26ba006859ed052d39", "patch": "@@ -161,7 +161,7 @@ impl FunctionDebugContext {\n \n         let mut func_end = 0;\n \n-        let mcr = context.mach_compile_result.as_ref().unwrap();\n+        let mcr = context.compiled_code().unwrap();\n         for &MachSrcLoc { start, end, loc } in mcr.buffer.get_srclocs_sorted() {\n             debug_context.dwarf.unit.line_program.row().address_offset = u64::from(start);\n             if !loc.is_default() {"}, {"sha": "8b3d475cb1802dcc1662145ca0cc4a1c99a8119c", "filename": "src/inline_asm.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b14c7337db5861288afc3b26ba006859ed052d39/src%2Finline_asm.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b14c7337db5861288afc3b26ba006859ed052d39/src%2Finline_asm.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Finline_asm.rs?ref=b14c7337db5861288afc3b26ba006859ed052d39", "patch": "@@ -733,7 +733,7 @@ fn call_inline_asm<'tcx>(\n     inputs: Vec<(Size, Value)>,\n     outputs: Vec<(Size, CPlace<'tcx>)>,\n ) {\n-    let stack_slot = fx.bcx.func.create_stack_slot(StackSlotData {\n+    let stack_slot = fx.bcx.func.create_sized_stack_slot(StackSlotData {\n         kind: StackSlotKind::ExplicitSlot,\n         size: u32::try_from(slot_size.bytes()).unwrap(),\n     });"}, {"sha": "2ee98546c992a1ec8cce8ccd3c7e2a2fdb9d06a8", "filename": "src/value_and_place.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/b14c7337db5861288afc3b26ba006859ed052d39/src%2Fvalue_and_place.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b14c7337db5861288afc3b26ba006859ed052d39/src%2Fvalue_and_place.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvalue_and_place.rs?ref=b14c7337db5861288afc3b26ba006859ed052d39", "patch": "@@ -330,7 +330,7 @@ impl<'tcx> CPlace<'tcx> {\n                 .fatal(&format!(\"values of type {} are too big to store on the stack\", layout.ty));\n         }\n \n-        let stack_slot = fx.bcx.create_stack_slot(StackSlotData {\n+        let stack_slot = fx.bcx.create_sized_stack_slot(StackSlotData {\n             kind: StackSlotKind::ExplicitSlot,\n             // FIXME Don't force the size to a multiple of 16 bytes once Cranelift gets a way to\n             // specify stack slot alignment.\n@@ -472,7 +472,7 @@ impl<'tcx> CPlace<'tcx> {\n                 }\n                 _ if src_ty.is_vector() || dst_ty.is_vector() => {\n                     // FIXME do something more efficient for transmutes between vectors and integers.\n-                    let stack_slot = fx.bcx.create_stack_slot(StackSlotData {\n+                    let stack_slot = fx.bcx.create_sized_stack_slot(StackSlotData {\n                         kind: StackSlotKind::ExplicitSlot,\n                         // FIXME Don't force the size to a multiple of 16 bytes once Cranelift gets a way to\n                         // specify stack slot alignment."}]}