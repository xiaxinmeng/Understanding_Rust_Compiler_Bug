{"sha": "5ad502dbdb0bb51149ac62ec6227b6a717da05dd", "node_id": "C_kwDOAAsO6NoAKDVhZDUwMmRiZGIwYmI1MTE0OWFjNjJlYzYyMjdiNmE3MTdkYTA1ZGQ", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2021-10-10T10:54:44Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2021-10-10T10:54:44Z"}, "message": "move test", "tree": {"sha": "6fd248c9cdd6a309edb93f99702c4174f5e47616", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6fd248c9cdd6a309edb93f99702c4174f5e47616"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5ad502dbdb0bb51149ac62ec6227b6a717da05dd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5ad502dbdb0bb51149ac62ec6227b6a717da05dd", "html_url": "https://github.com/rust-lang/rust/commit/5ad502dbdb0bb51149ac62ec6227b6a717da05dd", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5ad502dbdb0bb51149ac62ec6227b6a717da05dd/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c986568cbb7712d0135ad276344596c612a53f78", "url": "https://api.github.com/repos/rust-lang/rust/commits/c986568cbb7712d0135ad276344596c612a53f78", "html_url": "https://github.com/rust-lang/rust/commit/c986568cbb7712d0135ad276344596c612a53f78"}], "stats": {"total": 56, "additions": 36, "deletions": 20}, "files": [{"sha": "609eac855bc7c8a6fccdf584c87c95c3cc2099e2", "filename": "crates/hir_def/src/macro_expansion_tests/mbe.rs", "status": "modified", "additions": 36, "deletions": 0, "changes": 36, "blob_url": "https://github.com/rust-lang/rust/blob/5ad502dbdb0bb51149ac62ec6227b6a717da05dd/crates%2Fhir_def%2Fsrc%2Fmacro_expansion_tests%2Fmbe.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5ad502dbdb0bb51149ac62ec6227b6a717da05dd/crates%2Fhir_def%2Fsrc%2Fmacro_expansion_tests%2Fmbe.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_def%2Fsrc%2Fmacro_expansion_tests%2Fmbe.rs?ref=5ad502dbdb0bb51149ac62ec6227b6a717da05dd", "patch": "@@ -1558,3 +1558,39 @@ impl Clone for D3DCONTENTPROTECTIONCAPS {\n \"##]],\n     );\n }\n+\n+#[test]\n+fn test_int_base() {\n+    check(\n+        r#\"\n+macro_rules! int_base {\n+    ($Trait:ident for $T:ident as $U:ident -> $Radix:ident) => {\n+        #[stable(feature = \"rust1\", since = \"1.0.0\")]\n+        impl fmt::$Trait for $T {\n+            fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {\n+                $Radix.fmt_int(*self as $U, f)\n+            }\n+        }\n+    }\n+}\n+int_base!{Binary for isize as usize -> Binary}\n+\"#,\n+        expect![[r##\"\n+macro_rules! int_base {\n+    ($Trait:ident for $T:ident as $U:ident -> $Radix:ident) => {\n+        #[stable(feature = \"rust1\", since = \"1.0.0\")]\n+        impl fmt::$Trait for $T {\n+            fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {\n+                $Radix.fmt_int(*self as $U, f)\n+            }\n+        }\n+    }\n+}\n+#[stable(feature = \"rust1\", since = \"1.0.0\")] impl fmt::Binary for isize {\n+    fn fmt(&self , f: &mut fmt::Formatter< '_>) -> fmt::Result {\n+        Binary.fmt_int(*self as usize, f)\n+    }\n+}\n+\"##]],\n+    );\n+}"}, {"sha": "8c2e656a4cc6cff166762a92e3bedf6ae52252ba", "filename": "crates/mbe/src/tests/expand.rs", "status": "modified", "additions": 0, "deletions": 20, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/5ad502dbdb0bb51149ac62ec6227b6a717da05dd/crates%2Fmbe%2Fsrc%2Ftests%2Fexpand.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5ad502dbdb0bb51149ac62ec6227b6a717da05dd/crates%2Fmbe%2Fsrc%2Ftests%2Fexpand.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fmbe%2Fsrc%2Ftests%2Fexpand.rs?ref=5ad502dbdb0bb51149ac62ec6227b6a717da05dd", "patch": "@@ -98,26 +98,6 @@ fn test_attr_to_token_tree() {\n     );\n }\n \n-#[test]\n-fn test_int_base() {\n-    parse_macro(\n-        r#\"\n-macro_rules! int_base {\n-    ($Trait:ident for $T:ident as $U:ident -> $Radix:ident) => {\n-        #[stable(feature = \"rust1\", since = \"1.0.0\")]\n-        impl fmt::$Trait for $T {\n-            fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {\n-                $Radix.fmt_int(*self as $U, f)\n-            }\n-        }\n-    }\n-}\n-\"#,\n-    ).assert_expand_items(r#\" int_base!{Binary for isize as usize -> Binary}\"#,\n-        \"# [stable (feature = \\\"rust1\\\" , since = \\\"1.0.0\\\")] impl fmt ::Binary for isize {fn fmt (& self , f : & mut fmt :: Formatter < \\'_ >) -> fmt :: Result {Binary . fmt_int (* self as usize , f)}}\"\n-    );\n-}\n-\n #[test]\n fn test_generate_pattern_iterators() {\n     // from https://github.com/rust-lang/rust/blob/316a391dcb7d66dc25f1f9a4ec9d368ef7615005/src/libcore/str/mod.rs"}]}