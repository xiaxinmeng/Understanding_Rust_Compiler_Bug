{"sha": "42cab439f564812be0c3957edcc57140aac5a4c7", "node_id": "C_kwDOAAsO6NoAKDQyY2FiNDM5ZjU2NDgxMmJlMGMzOTU3ZWRjYzU3MTQwYWFjNWE0Yzc", "commit": {"author": {"name": "Martin Kr\u00f6ning", "email": "mkroening@posteo.net", "date": "2021-05-29T20:16:10Z"}, "committer": {"name": "Martin Kr\u00f6ning", "email": "mkroening@posteo.net", "date": "2021-10-29T15:20:03Z"}, "message": "hermit: Implement Condvar::wait_timeout", "tree": {"sha": "59fba9ad09c631c496f81aee9482c8eb746df611", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/59fba9ad09c631c496f81aee9482c8eb746df611"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/42cab439f564812be0c3957edcc57140aac5a4c7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/42cab439f564812be0c3957edcc57140aac5a4c7", "html_url": "https://github.com/rust-lang/rust/commit/42cab439f564812be0c3957edcc57140aac5a4c7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/42cab439f564812be0c3957edcc57140aac5a4c7/comments", "author": {"login": "mkroening", "id": 28776973, "node_id": "MDQ6VXNlcjI4Nzc2OTcz", "avatar_url": "https://avatars.githubusercontent.com/u/28776973?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mkroening", "html_url": "https://github.com/mkroening", "followers_url": "https://api.github.com/users/mkroening/followers", "following_url": "https://api.github.com/users/mkroening/following{/other_user}", "gists_url": "https://api.github.com/users/mkroening/gists{/gist_id}", "starred_url": "https://api.github.com/users/mkroening/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mkroening/subscriptions", "organizations_url": "https://api.github.com/users/mkroening/orgs", "repos_url": "https://api.github.com/users/mkroening/repos", "events_url": "https://api.github.com/users/mkroening/events{/privacy}", "received_events_url": "https://api.github.com/users/mkroening/received_events", "type": "User", "site_admin": false}, "committer": {"login": "mkroening", "id": 28776973, "node_id": "MDQ6VXNlcjI4Nzc2OTcz", "avatar_url": "https://avatars.githubusercontent.com/u/28776973?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mkroening", "html_url": "https://github.com/mkroening", "followers_url": "https://api.github.com/users/mkroening/followers", "following_url": "https://api.github.com/users/mkroening/following{/other_user}", "gists_url": "https://api.github.com/users/mkroening/gists{/gist_id}", "starred_url": "https://api.github.com/users/mkroening/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mkroening/subscriptions", "organizations_url": "https://api.github.com/users/mkroening/orgs", "repos_url": "https://api.github.com/users/mkroening/repos", "events_url": "https://api.github.com/users/mkroening/events{/privacy}", "received_events_url": "https://api.github.com/users/mkroening/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "37f70a0e1e04086aee7ae57fbefd6d4071953506", "url": "https://api.github.com/repos/rust-lang/rust/commits/37f70a0e1e04086aee7ae57fbefd6d4071953506", "html_url": "https://github.com/rust-lang/rust/commit/37f70a0e1e04086aee7ae57fbefd6d4071953506"}], "stats": {"total": 16, "additions": 14, "deletions": 2}, "files": [{"sha": "b62f21a9dac02d705989c77295020fe630da2cc7", "filename": "library/std/src/sys/hermit/condvar.rs", "status": "modified", "additions": 14, "deletions": 2, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/42cab439f564812be0c3957edcc57140aac5a4c7/library%2Fstd%2Fsrc%2Fsys%2Fhermit%2Fcondvar.rs", "raw_url": "https://github.com/rust-lang/rust/raw/42cab439f564812be0c3957edcc57140aac5a4c7/library%2Fstd%2Fsrc%2Fsys%2Fhermit%2Fcondvar.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys%2Fhermit%2Fcondvar.rs?ref=42cab439f564812be0c3957edcc57140aac5a4c7", "patch": "@@ -55,8 +55,20 @@ impl Condvar {\n         mutex.lock();\n     }\n \n-    pub unsafe fn wait_timeout(&self, _mutex: &Mutex, _dur: Duration) -> bool {\n-        panic!(\"wait_timeout not supported on hermit\");\n+    pub unsafe fn wait_timeout(&self, mutex: &Mutex, dur: Duration) -> bool {\n+        self.counter.fetch_add(1, SeqCst);\n+        mutex.unlock();\n+        let millis = dur.as_millis().min(u32::MAX as u128) as u32;\n+\n+        let res = if millis > 0 {\n+            abi::sem_timedwait(self.sem1, millis)\n+        } else {\n+            abi::sem_trywait(self.sem1)\n+        };\n+\n+        abi::sem_post(self.sem2);\n+        mutex.lock();\n+        res == 0\n     }\n \n     pub unsafe fn destroy(&self) {"}]}