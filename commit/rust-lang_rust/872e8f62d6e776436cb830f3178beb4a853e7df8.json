{"sha": "872e8f62d6e776436cb830f3178beb4a853e7df8", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg3MmU4ZjYyZDZlNzc2NDM2Y2I4MzBmMzE3OGJlYjRhODUzZTdkZjg=", "commit": {"author": {"name": "Caleb Zulawski", "email": "caleb.zulawski@gmail.com", "date": "2020-09-23T14:42:12Z"}, "committer": {"name": "Caleb Zulawski", "email": "caleb.zulawski@gmail.com", "date": "2020-09-23T14:42:12Z"}, "message": "Simplify transmutes", "tree": {"sha": "23ea531f7a6f32f695c8abadb16106e35fae283a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/23ea531f7a6f32f695c8abadb16106e35fae283a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/872e8f62d6e776436cb830f3178beb4a853e7df8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/872e8f62d6e776436cb830f3178beb4a853e7df8", "html_url": "https://github.com/rust-lang/rust/commit/872e8f62d6e776436cb830f3178beb4a853e7df8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/872e8f62d6e776436cb830f3178beb4a853e7df8/comments", "author": {"login": "calebzulawski", "id": 563826, "node_id": "MDQ6VXNlcjU2MzgyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/563826?v=4", "gravatar_id": "", "url": "https://api.github.com/users/calebzulawski", "html_url": "https://github.com/calebzulawski", "followers_url": "https://api.github.com/users/calebzulawski/followers", "following_url": "https://api.github.com/users/calebzulawski/following{/other_user}", "gists_url": "https://api.github.com/users/calebzulawski/gists{/gist_id}", "starred_url": "https://api.github.com/users/calebzulawski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/calebzulawski/subscriptions", "organizations_url": "https://api.github.com/users/calebzulawski/orgs", "repos_url": "https://api.github.com/users/calebzulawski/repos", "events_url": "https://api.github.com/users/calebzulawski/events{/privacy}", "received_events_url": "https://api.github.com/users/calebzulawski/received_events", "type": "User", "site_admin": false}, "committer": {"login": "calebzulawski", "id": 563826, "node_id": "MDQ6VXNlcjU2MzgyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/563826?v=4", "gravatar_id": "", "url": "https://api.github.com/users/calebzulawski", "html_url": "https://github.com/calebzulawski", "followers_url": "https://api.github.com/users/calebzulawski/followers", "following_url": "https://api.github.com/users/calebzulawski/following{/other_user}", "gists_url": "https://api.github.com/users/calebzulawski/gists{/gist_id}", "starred_url": "https://api.github.com/users/calebzulawski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/calebzulawski/subscriptions", "organizations_url": "https://api.github.com/users/calebzulawski/orgs", "repos_url": "https://api.github.com/users/calebzulawski/repos", "events_url": "https://api.github.com/users/calebzulawski/events{/privacy}", "received_events_url": "https://api.github.com/users/calebzulawski/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "543bcd37e91afc1271befde3a33d6a73abc204d4", "url": "https://api.github.com/repos/rust-lang/rust/commits/543bcd37e91afc1271befde3a33d6a73abc204d4", "html_url": "https://github.com/rust-lang/rust/commit/543bcd37e91afc1271befde3a33d6a73abc204d4"}], "stats": {"total": 371, "additions": 71, "deletions": 300}, "files": [{"sha": "5a50b1a48ec1c4a041d5eb5453c88ec751801319", "filename": "crates/core_simd/src/macros.rs", "status": "modified", "additions": 15, "deletions": 22, "changes": 37, "blob_url": "https://github.com/rust-lang/rust/blob/872e8f62d6e776436cb830f3178beb4a853e7df8/crates%2Fcore_simd%2Fsrc%2Fmacros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/872e8f62d6e776436cb830f3178beb4a853e7df8/crates%2Fcore_simd%2Fsrc%2Fmacros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fcore_simd%2Fsrc%2Fmacros.rs?ref=872e8f62d6e776436cb830f3178beb4a853e7df8", "patch": "@@ -1,29 +1,25 @@\n-macro_rules! from_aligned {\n-    { unsafe $from:ty => $to:ty } => {\n+macro_rules! from_transmute {\n+    { unsafe $a:ty => $b:ty } => {\n+        from_transmute!{ @impl $a => $b }\n+        from_transmute!{ @impl $b => $a }\n+    };\n+    { @impl $from:ty => $to:ty } => {\n         impl core::convert::From<$from> for $to {\n             #[inline]\n             fn from(value: $from) -> $to {\n-                assert_eq!(core::mem::size_of::<$from>(), core::mem::size_of::<$to>());\n-                assert!(core::mem::align_of::<$from>() >= core::mem::align_of::<$to>());\n                 unsafe { core::mem::transmute(value) }\n             }\n         }\n     };\n-    { unsafe $a:ty |bidirectional| $b:ty } => {\n-        from_aligned!{ unsafe $a => $b }\n-        from_aligned!{ unsafe $b => $a }\n-    }\n }\n \n-macro_rules! from_unaligned {\n-    { unsafe $from:ty => $to:ty } => {\n-        impl core::convert::From<$from> for $to {\n-            #[inline]\n-            fn from(value: $from) -> $to {\n-                assert_eq!(core::mem::size_of::<$from>(), core::mem::size_of::<$to>());\n-                unsafe { (&value as *const $from as *const $to).read_unaligned() }\n-            }\n-        }\n+macro_rules! from_transmute_x86 {\n+    { unsafe $generic:ty => $intel:ident } => {\n+        #[cfg(target_arch = \"x86\")]\n+        from_transmute! { unsafe $generic => core::arch::x86::$intel }\n+\n+        #[cfg(target_arch = \"x86_64\")]\n+        from_transmute! { unsafe $generic => core::arch::x86_64::$intel }\n     }\n }\n \n@@ -61,11 +57,8 @@ macro_rules! define_type {\n             }\n         }\n \n-        // vector to array\n-        from_aligned! { unsafe $name => [$type; $lanes] }\n-\n-        // array to vector\n-        from_unaligned! { unsafe [$type; $lanes] => $name }\n+        // vector/array conversion\n+        from_transmute! { unsafe $name => [$type; $lanes] }\n \n         // splat\n         impl From<$type> for $name {"}, {"sha": "3b38b26d63108ec1cafe12baf6794b4b0cbafea9", "filename": "crates/core_simd/src/vectors_f32.rs", "status": "modified", "additions": 3, "deletions": 19, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/872e8f62d6e776436cb830f3178beb4a853e7df8/crates%2Fcore_simd%2Fsrc%2Fvectors_f32.rs", "raw_url": "https://github.com/rust-lang/rust/raw/872e8f62d6e776436cb830f3178beb4a853e7df8/crates%2Fcore_simd%2Fsrc%2Fvectors_f32.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fcore_simd%2Fsrc%2Fvectors_f32.rs?ref=872e8f62d6e776436cb830f3178beb4a853e7df8", "patch": "@@ -18,22 +18,6 @@ define_type! {\n     struct f32x16([f32; 16]);\n }\n \n-#[cfg(target_arch = \"x86\")]\n-from_aligned! { unsafe f32x4 |bidirectional| core::arch::x86::__m128 }\n-\n-#[cfg(target_arch = \"x86_64\")]\n-from_aligned! { unsafe f32x4 |bidirectional| core::arch::x86_64::__m128 }\n-\n-#[cfg(target_arch = \"x86\")]\n-from_aligned! { unsafe f32x8 |bidirectional| core::arch::x86::__m256 }\n-\n-#[cfg(target_arch = \"x86_64\")]\n-from_aligned! { unsafe f32x8 |bidirectional| core::arch::x86_64::__m256 }\n-\n-/*\n-#[cfg(target_arch = \"x86\")]\n-from_aligned! { unsafe f32x16 |bidirectional| core::arch::x86::__m512 }\n-\n-#[cfg(target_arch = \"x86_64\")]\n-from_aligned! { unsafe f32x16 |bidirectional| core::arch::x86_64::__m512 }\n-*/\n+from_transmute_x86! { unsafe f32x4 => __m128 }\n+from_transmute_x86! { unsafe f32x8 => __m256 }\n+//from_transmute_x86! { unsafe f32x16 => __m512 }"}, {"sha": "f627fffd46b40464de6eceb7c63ab85bc5f58a48", "filename": "crates/core_simd/src/vectors_f64.rs", "status": "modified", "additions": 3, "deletions": 19, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/872e8f62d6e776436cb830f3178beb4a853e7df8/crates%2Fcore_simd%2Fsrc%2Fvectors_f64.rs", "raw_url": "https://github.com/rust-lang/rust/raw/872e8f62d6e776436cb830f3178beb4a853e7df8/crates%2Fcore_simd%2Fsrc%2Fvectors_f64.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fcore_simd%2Fsrc%2Fvectors_f64.rs?ref=872e8f62d6e776436cb830f3178beb4a853e7df8", "patch": "@@ -13,22 +13,6 @@ define_type! {\n     struct f64x8([f64; 8]);\n }\n \n-#[cfg(target_arch = \"x86\")]\n-from_aligned! { unsafe f64x2 |bidirectional| core::arch::x86::__m128d }\n-\n-#[cfg(target_arch = \"x86_64\")]\n-from_aligned! { unsafe f64x2 |bidirectional| core::arch::x86_64::__m128d }\n-\n-#[cfg(target_arch = \"x86\")]\n-from_aligned! { unsafe f64x4 |bidirectional| core::arch::x86::__m256d }\n-\n-#[cfg(target_arch = \"x86_64\")]\n-from_aligned! { unsafe f64x4 |bidirectional| core::arch::x86_64::__m256d }\n-\n-/*\n-#[cfg(target_arch = \"x86\")]\n-from_aligned! { unsafe f64x8 |bidirectional| core::arch::x86::__m512d }\n-\n-#[cfg(target_arch = \"x86_64\")]\n-from_aligned! { unsafe f64x8 |bidirectional| core::arch::x86_64::__m512d }\n-*/\n+from_transmute_x86! { unsafe f64x2 => __m128d }\n+from_transmute_x86! { unsafe f64x4 => __m256d }\n+//from_transmute_x86! { unsafe f64x8 => __m512d }"}, {"sha": "b4f30f845fd14551df93b451d174d22e042ae3a5", "filename": "crates/core_simd/src/vectors_i128.rs", "status": "modified", "additions": 2, "deletions": 13, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/872e8f62d6e776436cb830f3178beb4a853e7df8/crates%2Fcore_simd%2Fsrc%2Fvectors_i128.rs", "raw_url": "https://github.com/rust-lang/rust/raw/872e8f62d6e776436cb830f3178beb4a853e7df8/crates%2Fcore_simd%2Fsrc%2Fvectors_i128.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fcore_simd%2Fsrc%2Fvectors_i128.rs?ref=872e8f62d6e776436cb830f3178beb4a853e7df8", "patch": "@@ -8,16 +8,5 @@ define_type! {\n     struct i128x4([i128; 4]);\n }\n \n-#[cfg(target_arch = \"x86\")]\n-from_aligned! { unsafe i128x2 |bidirectional| core::arch::x86::__m256i }\n-\n-#[cfg(target_arch = \"x86_64\")]\n-from_aligned! { unsafe i128x2 |bidirectional| core::arch::x86_64::__m256i }\n-\n-/*\n-#[cfg(target_arch = \"x86\")]\n-from_aligned! { unsafe i128x4 |bidirectional| core::arch::x86::__m512i }\n-\n-#[cfg(target_arch = \"x86_64\")]\n-from_aligned! { unsafe i128x4 |bidirectional| core::arch::x86_64::__m512i }\n-*/\n+from_transmute_x86! { unsafe i128x2 => __m256i }\n+//from_transmute_x86! { unsafe i128x4 => __m512i }"}, {"sha": "a87fa8c41cd5c7d2ca5bb0b1749f9cca722040c9", "filename": "crates/core_simd/src/vectors_i16.rs", "status": "modified", "additions": 3, "deletions": 19, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/872e8f62d6e776436cb830f3178beb4a853e7df8/crates%2Fcore_simd%2Fsrc%2Fvectors_i16.rs", "raw_url": "https://github.com/rust-lang/rust/raw/872e8f62d6e776436cb830f3178beb4a853e7df8/crates%2Fcore_simd%2Fsrc%2Fvectors_i16.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fcore_simd%2Fsrc%2Fvectors_i16.rs?ref=872e8f62d6e776436cb830f3178beb4a853e7df8", "patch": "@@ -23,22 +23,6 @@ define_type! {\n     struct i16x32([i16; 32]);\n }\n \n-#[cfg(target_arch = \"x86\")]\n-from_aligned! { unsafe i16x8 |bidirectional| core::arch::x86::__m128i }\n-\n-#[cfg(target_arch = \"x86_64\")]\n-from_aligned! { unsafe i16x8 |bidirectional| core::arch::x86_64::__m128i }\n-\n-#[cfg(target_arch = \"x86\")]\n-from_aligned! { unsafe i16x16 |bidirectional| core::arch::x86::__m256i }\n-\n-#[cfg(target_arch = \"x86_64\")]\n-from_aligned! { unsafe i16x16 |bidirectional| core::arch::x86_64::__m256i }\n-\n-/*\n-#[cfg(target_arch = \"x86\")]\n-from_aligned! { unsafe u8x32 |bidirectional| core::arch::x86::__m512i }\n-\n-#[cfg(target_arch = \"x86_64\")]\n-from_aligned! { unsafe u8x32 |bidirectional| core::arch::x86_64::__m512i }\n-*/\n+from_transmute_x86! { unsafe i16x8 => __m128i }\n+from_transmute_x86! { unsafe i16x16 => __m256i }\n+//from_transmute_x86! { unsafe i16x32 => __m512i }"}, {"sha": "13c9299b7c6e2c5820dfdb423f3e7dc7e642cb54", "filename": "crates/core_simd/src/vectors_i32.rs", "status": "modified", "additions": 3, "deletions": 19, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/872e8f62d6e776436cb830f3178beb4a853e7df8/crates%2Fcore_simd%2Fsrc%2Fvectors_i32.rs", "raw_url": "https://github.com/rust-lang/rust/raw/872e8f62d6e776436cb830f3178beb4a853e7df8/crates%2Fcore_simd%2Fsrc%2Fvectors_i32.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fcore_simd%2Fsrc%2Fvectors_i32.rs?ref=872e8f62d6e776436cb830f3178beb4a853e7df8", "patch": "@@ -18,22 +18,6 @@ define_type! {\n     struct i32x16([i32; 16]);\n }\n \n-#[cfg(target_arch = \"x86\")]\n-from_aligned! { unsafe i32x4 |bidirectional| core::arch::x86::__m128i }\n-\n-#[cfg(target_arch = \"x86_64\")]\n-from_aligned! { unsafe i32x4 |bidirectional| core::arch::x86_64::__m128i }\n-\n-#[cfg(target_arch = \"x86\")]\n-from_aligned! { unsafe i32x8 |bidirectional| core::arch::x86::__m256i }\n-\n-#[cfg(target_arch = \"x86_64\")]\n-from_aligned! { unsafe i32x8 |bidirectional| core::arch::x86_64::__m256i }\n-\n-/*\n-#[cfg(target_arch = \"x86\")]\n-from_aligned! { unsafe u32x16 |bidirectional| core::arch::x86::__m512i }\n-\n-#[cfg(target_arch = \"x86_64\")]\n-from_aligned! { unsafe u32x16 |bidirectional| core::arch::x86_64::__m512i }\n-*/\n+from_transmute_x86! { unsafe i32x4 => __m128i }\n+from_transmute_x86! { unsafe i32x8 => __m256i }\n+//from_transmute_x86! { unsafe i32x16 => __m512i }"}, {"sha": "8d86501a496160f660b330751f15cb3e44f78fc6", "filename": "crates/core_simd/src/vectors_i64.rs", "status": "modified", "additions": 3, "deletions": 19, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/872e8f62d6e776436cb830f3178beb4a853e7df8/crates%2Fcore_simd%2Fsrc%2Fvectors_i64.rs", "raw_url": "https://github.com/rust-lang/rust/raw/872e8f62d6e776436cb830f3178beb4a853e7df8/crates%2Fcore_simd%2Fsrc%2Fvectors_i64.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fcore_simd%2Fsrc%2Fvectors_i64.rs?ref=872e8f62d6e776436cb830f3178beb4a853e7df8", "patch": "@@ -13,22 +13,6 @@ define_type! {\n     struct i64x8([i64; 8]);\n }\n \n-#[cfg(target_arch = \"x86\")]\n-from_aligned! { unsafe i64x2 |bidirectional| core::arch::x86::__m128i }\n-\n-#[cfg(target_arch = \"x86_64\")]\n-from_aligned! { unsafe i64x2 |bidirectional| core::arch::x86_64::__m128i }\n-\n-#[cfg(target_arch = \"x86\")]\n-from_aligned! { unsafe i64x4 |bidirectional| core::arch::x86::__m256i }\n-\n-#[cfg(target_arch = \"x86_64\")]\n-from_aligned! { unsafe i64x4 |bidirectional| core::arch::x86_64::__m256i }\n-\n-/*\n-#[cfg(target_arch = \"x86\")]\n-from_aligned! { unsafe i64x8 |bidirectional| core::arch::x86::__m512i }\n-\n-#[cfg(target_arch = \"x86_64\")]\n-from_aligned! { unsafe i64x8 |bidirectional| core::arch::x86_64::__m512i }\n-*/\n+from_transmute_x86! { unsafe i64x2 => __m128i }\n+from_transmute_x86! { unsafe i64x4 => __m256i }\n+//from_transmute_x86! { unsafe i64x8 => __m512i }"}, {"sha": "f0d5ad55212d7bbd836640bf75e683bb5a247954", "filename": "crates/core_simd/src/vectors_i8.rs", "status": "modified", "additions": 3, "deletions": 19, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/872e8f62d6e776436cb830f3178beb4a853e7df8/crates%2Fcore_simd%2Fsrc%2Fvectors_i8.rs", "raw_url": "https://github.com/rust-lang/rust/raw/872e8f62d6e776436cb830f3178beb4a853e7df8/crates%2Fcore_simd%2Fsrc%2Fvectors_i8.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fcore_simd%2Fsrc%2Fvectors_i8.rs?ref=872e8f62d6e776436cb830f3178beb4a853e7df8", "patch": "@@ -28,22 +28,6 @@ define_type! {\n     struct i8x64([i8; 64]);\n }\n \n-#[cfg(target_arch = \"x86\")]\n-from_aligned! { unsafe i8x16 |bidirectional| core::arch::x86::__m128i }\n-\n-#[cfg(target_arch = \"x86_64\")]\n-from_aligned! { unsafe i8x16 |bidirectional| core::arch::x86_64::__m128i }\n-\n-#[cfg(target_arch = \"x86\")]\n-from_aligned! { unsafe i8x32 |bidirectional| core::arch::x86::__m256i }\n-\n-#[cfg(target_arch = \"x86_64\")]\n-from_aligned! { unsafe i8x32 |bidirectional| core::arch::x86_64::__m256i }\n-\n-/*\n-#[cfg(target_arch = \"x86\")]\n-from_aligned! { unsafe u8x64 |bidirectional| core::arch::x86::__m512i }\n-\n-#[cfg(target_arch = \"x86_64\")]\n-from_aligned! { unsafe u8x64 |bidirectional| core::arch::x86_64::__m512i }\n-*/\n+from_transmute_x86! { unsafe i8x16 => __m128i }\n+from_transmute_x86! { unsafe i8x32 => __m256i }\n+//from_transmute_x86! { unsafe i8x64 => __m512i }"}, {"sha": "2028d1ecc7104ea02130f8517bf72cb7b4f29731", "filename": "crates/core_simd/src/vectors_isize.rs", "status": "modified", "additions": 11, "deletions": 31, "changes": 42, "blob_url": "https://github.com/rust-lang/rust/blob/872e8f62d6e776436cb830f3178beb4a853e7df8/crates%2Fcore_simd%2Fsrc%2Fvectors_isize.rs", "raw_url": "https://github.com/rust-lang/rust/raw/872e8f62d6e776436cb830f3178beb4a853e7df8/crates%2Fcore_simd%2Fsrc%2Fvectors_isize.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fcore_simd%2Fsrc%2Fvectors_isize.rs?ref=872e8f62d6e776436cb830f3178beb4a853e7df8", "patch": "@@ -13,34 +13,14 @@ define_type! {\n     struct isizex8([isize; 8]);\n }\n \n-#[cfg(all(target_arch = \"x86\", target_pointer_width = \"32\"))]\n-from_aligned! { unsafe isizex4 |bidirectional| core::arch::x86::__m128i }\n-\n-#[cfg(all(target_arch = \"x86_64\", target_pointer_width = \"32\"))]\n-from_aligned! { unsafe isizex4 |bidirectional| core::arch::x86_64::__m128i }\n-\n-#[cfg(all(target_arch = \"x86\", target_pointer_width = \"32\"))]\n-from_aligned! { unsafe isizex8 |bidirectional| core::arch::x86::__m256i }\n-\n-#[cfg(all(target_arch = \"x86_64\", target_pointer_width = \"32\"))]\n-from_aligned! { unsafe isizex8 |bidirectional| core::arch::x86_64::__m256i }\n-\n-#[cfg(all(target_arch = \"x86\", target_pointer_width = \"64\"))]\n-from_aligned! { unsafe isizex2 |bidirectional| core::arch::x86::__m128i }\n-\n-#[cfg(all(target_arch = \"x86_64\", target_pointer_width = \"64\"))]\n-from_aligned! { unsafe isizex2 |bidirectional| core::arch::x86_64::__m128i }\n-\n-#[cfg(all(target_arch = \"x86\", target_pointer_width = \"64\"))]\n-from_aligned! { unsafe isizex4 |bidirectional| core::arch::x86::__m256i }\n-\n-#[cfg(all(target_arch = \"x86_64\", target_pointer_width = \"64\"))]\n-from_aligned! { unsafe isizex4 |bidirectional| core::arch::x86_64::__m256i }\n-\n-/*\n-#[cfg(all(target_arch = \"x86\", target_pointer_width = \"64\"))]\n-from_aligned! { unsafe isizex8 |bidirectional| core::arch::x86::__m512i }\n-\n-#[cfg(all(target_arch = \"x86_64\", target_pointer_width = \"64\"))]\n-from_aligned! { unsafe isizex8 |bidirectional| core::arch::x86_64::__m512i }\n-*/\n+#[cfg(target_pointer_width = \"32\")]\n+from_transmute_x86! { unsafe isizex4 => __m128i }\n+#[cfg(target_pointer_width = \"32\")]\n+from_transmute_x86! { unsafe isizex8 => __m256i }\n+\n+#[cfg(target_pointer_width = \"64\")]\n+from_transmute_x86! { unsafe isizex2 => __m128i }\n+#[cfg(target_pointer_width = \"64\")]\n+from_transmute_x86! { unsafe isizex4 => __m256i }\n+//#[cfg(target_pointer_width = \"64\")]\n+//from_transmute_x86! { unsafe isizex8 => __m512i }"}, {"sha": "4b47fb2fa2ecc2e05f24fa149f40958c5a52f50d", "filename": "crates/core_simd/src/vectors_u128.rs", "status": "modified", "additions": 2, "deletions": 13, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/872e8f62d6e776436cb830f3178beb4a853e7df8/crates%2Fcore_simd%2Fsrc%2Fvectors_u128.rs", "raw_url": "https://github.com/rust-lang/rust/raw/872e8f62d6e776436cb830f3178beb4a853e7df8/crates%2Fcore_simd%2Fsrc%2Fvectors_u128.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fcore_simd%2Fsrc%2Fvectors_u128.rs?ref=872e8f62d6e776436cb830f3178beb4a853e7df8", "patch": "@@ -8,16 +8,5 @@ define_type! {\n     struct u128x4([u128; 4]);\n }\n \n-#[cfg(target_arch = \"x86\")]\n-from_aligned! { unsafe u128x2 |bidirectional| core::arch::x86::__m256i }\n-\n-#[cfg(target_arch = \"x86_64\")]\n-from_aligned! { unsafe u128x2 |bidirectional| core::arch::x86_64::__m256i }\n-\n-/*\n-#[cfg(target_arch = \"x86\")]\n-from_aligned! { unsafe u128x4 |bidirectional| core::arch::x86::__m512i }\n-\n-#[cfg(target_arch = \"x86_64\")]\n-from_aligned! { unsafe u128x4 |bidirectional| core::arch::x86_64::__m512i }\n-*/\n+from_transmute_x86! { unsafe u128x2 => __m256i }\n+//from_transmute_x86! { unsafe u128x4 => __m512i }"}, {"sha": "f637d2fe9f2ca4a5434af33e77b9f23e0068a629", "filename": "crates/core_simd/src/vectors_u16.rs", "status": "modified", "additions": 3, "deletions": 19, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/872e8f62d6e776436cb830f3178beb4a853e7df8/crates%2Fcore_simd%2Fsrc%2Fvectors_u16.rs", "raw_url": "https://github.com/rust-lang/rust/raw/872e8f62d6e776436cb830f3178beb4a853e7df8/crates%2Fcore_simd%2Fsrc%2Fvectors_u16.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fcore_simd%2Fsrc%2Fvectors_u16.rs?ref=872e8f62d6e776436cb830f3178beb4a853e7df8", "patch": "@@ -23,22 +23,6 @@ define_type! {\n     struct u16x32([u16; 32]);\n }\n \n-#[cfg(target_arch = \"x86\")]\n-from_aligned! { unsafe u16x8 |bidirectional| core::arch::x86::__m128i }\n-\n-#[cfg(target_arch = \"x86_64\")]\n-from_aligned! { unsafe u16x8 |bidirectional| core::arch::x86_64::__m128i }\n-\n-#[cfg(target_arch = \"x86\")]\n-from_aligned! { unsafe u16x16 |bidirectional| core::arch::x86::__m256i }\n-\n-#[cfg(target_arch = \"x86_64\")]\n-from_aligned! { unsafe u16x16 |bidirectional| core::arch::x86_64::__m256i }\n-\n-/*\n-#[cfg(target_arch = \"x86\")]\n-from_aligned! { unsafe u16x32 |bidirectional| core::arch::x86::__m512i }\n-\n-#[cfg(target_arch = \"x86_64\")]\n-from_aligned! { unsafe u16x32 |bidirectional| core::arch::x86_64::__m512i }\n-*/\n+from_transmute_x86! { unsafe u16x8 => __m128i }\n+from_transmute_x86! { unsafe u16x16 => __m256i }\n+//from_transmute_x86! { unsafe u16x32 => __m512i }"}, {"sha": "d2f5d7d241c53ed77414a6747958dfcf872fc482", "filename": "crates/core_simd/src/vectors_u32.rs", "status": "modified", "additions": 3, "deletions": 19, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/872e8f62d6e776436cb830f3178beb4a853e7df8/crates%2Fcore_simd%2Fsrc%2Fvectors_u32.rs", "raw_url": "https://github.com/rust-lang/rust/raw/872e8f62d6e776436cb830f3178beb4a853e7df8/crates%2Fcore_simd%2Fsrc%2Fvectors_u32.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fcore_simd%2Fsrc%2Fvectors_u32.rs?ref=872e8f62d6e776436cb830f3178beb4a853e7df8", "patch": "@@ -18,22 +18,6 @@ define_type! {\n     struct u32x16([u32; 16]);\n }\n \n-#[cfg(target_arch = \"x86\")]\n-from_aligned! { unsafe u32x4 |bidirectional| core::arch::x86::__m128i }\n-\n-#[cfg(target_arch = \"x86_64\")]\n-from_aligned! { unsafe u32x4 |bidirectional| core::arch::x86_64::__m128i }\n-\n-#[cfg(target_arch = \"x86\")]\n-from_aligned! { unsafe u32x8 |bidirectional| core::arch::x86::__m256i }\n-\n-#[cfg(target_arch = \"x86_64\")]\n-from_aligned! { unsafe u32x8 |bidirectional| core::arch::x86_64::__m256i }\n-\n-/*\n-#[cfg(target_arch = \"x86\")]\n-from_aligned! { unsafe u32x16 |bidirectional| core::arch::x86::__m512i }\n-\n-#[cfg(target_arch = \"x86_64\")]\n-from_aligned! { unsafe u32x16 |bidirectional| core::arch::x86_64::__m512i }\n-*/\n+from_transmute_x86! { unsafe u32x4 => __m128i }\n+from_transmute_x86! { unsafe u32x8 => __m256i }\n+//from_transmute_x86! { unsafe u32x16 => __m512i }"}, {"sha": "e6e21e62da1006255075c905836d16fa05893929", "filename": "crates/core_simd/src/vectors_u64.rs", "status": "modified", "additions": 3, "deletions": 19, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/872e8f62d6e776436cb830f3178beb4a853e7df8/crates%2Fcore_simd%2Fsrc%2Fvectors_u64.rs", "raw_url": "https://github.com/rust-lang/rust/raw/872e8f62d6e776436cb830f3178beb4a853e7df8/crates%2Fcore_simd%2Fsrc%2Fvectors_u64.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fcore_simd%2Fsrc%2Fvectors_u64.rs?ref=872e8f62d6e776436cb830f3178beb4a853e7df8", "patch": "@@ -13,22 +13,6 @@ define_type! {\n     struct u64x8([u64; 8]);\n }\n \n-#[cfg(target_arch = \"x86\")]\n-from_aligned! { unsafe u64x2 |bidirectional| core::arch::x86::__m128i }\n-\n-#[cfg(target_arch = \"x86_64\")]\n-from_aligned! { unsafe u64x2 |bidirectional| core::arch::x86_64::__m128i }\n-\n-#[cfg(target_arch = \"x86\")]\n-from_aligned! { unsafe u64x4 |bidirectional| core::arch::x86::__m256i }\n-\n-#[cfg(target_arch = \"x86_64\")]\n-from_aligned! { unsafe u64x4 |bidirectional| core::arch::x86_64::__m256i }\n-\n-/*\n-#[cfg(target_arch = \"x86\")]\n-from_aligned! { unsafe u64x8 |bidirectional| core::arch::x86::__m512i }\n-\n-#[cfg(target_arch = \"x86_64\")]\n-from_aligned! { unsafe u64x8 |bidirectional| core::arch::x86_64::__m512i }\n-*/\n+from_transmute_x86! { unsafe u64x2 => __m128i }\n+from_transmute_x86! { unsafe u64x4 => __m256i }\n+//from_transmute_x86! { unsafe u64x8 => __m512i }"}, {"sha": "f6246f87ecec3ca005af4108dd8ba927e7ed5209", "filename": "crates/core_simd/src/vectors_u8.rs", "status": "modified", "additions": 3, "deletions": 19, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/872e8f62d6e776436cb830f3178beb4a853e7df8/crates%2Fcore_simd%2Fsrc%2Fvectors_u8.rs", "raw_url": "https://github.com/rust-lang/rust/raw/872e8f62d6e776436cb830f3178beb4a853e7df8/crates%2Fcore_simd%2Fsrc%2Fvectors_u8.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fcore_simd%2Fsrc%2Fvectors_u8.rs?ref=872e8f62d6e776436cb830f3178beb4a853e7df8", "patch": "@@ -28,22 +28,6 @@ define_type! {\n     struct u8x64([u8; 64]);\n }\n \n-#[cfg(target_arch = \"x86\")]\n-from_aligned! { unsafe u8x16 |bidirectional| core::arch::x86::__m128i }\n-\n-#[cfg(target_arch = \"x86_64\")]\n-from_aligned! { unsafe u8x16 |bidirectional| core::arch::x86_64::__m128i }\n-\n-#[cfg(target_arch = \"x86\")]\n-from_aligned! { unsafe u8x32 |bidirectional| core::arch::x86::__m256i }\n-\n-#[cfg(target_arch = \"x86_64\")]\n-from_aligned! { unsafe u8x32 |bidirectional| core::arch::x86_64::__m256i }\n-\n-/*\n-#[cfg(target_arch = \"x86\")]\n-from_aligned! { unsafe u8x64 |bidirectional| core::arch::x86::__m512i }\n-\n-#[cfg(target_arch = \"x86_64\")]\n-from_aligned! { unsafe u8x64 |bidirectional| core::arch::x86_64::__m512i }\n-*/\n+from_transmute_x86! { unsafe u8x16 => __m128i }\n+from_transmute_x86! { unsafe u8x32 => __m256i }\n+//from_transmute_x86! { unsafe u8x64 => __m512i }"}, {"sha": "45da00562f60a7866917dcd982f7d13030430905", "filename": "crates/core_simd/src/vectors_usize.rs", "status": "modified", "additions": 11, "deletions": 31, "changes": 42, "blob_url": "https://github.com/rust-lang/rust/blob/872e8f62d6e776436cb830f3178beb4a853e7df8/crates%2Fcore_simd%2Fsrc%2Fvectors_usize.rs", "raw_url": "https://github.com/rust-lang/rust/raw/872e8f62d6e776436cb830f3178beb4a853e7df8/crates%2Fcore_simd%2Fsrc%2Fvectors_usize.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fcore_simd%2Fsrc%2Fvectors_usize.rs?ref=872e8f62d6e776436cb830f3178beb4a853e7df8", "patch": "@@ -13,34 +13,14 @@ define_type! {\n     struct usizex8([usize; 8]);\n }\n \n-#[cfg(all(target_arch = \"x86\", target_pointer_width = \"32\"))]\n-from_aligned! { unsafe usizex4 |bidirectional| core::arch::x86::__m128i }\n-\n-#[cfg(all(target_arch = \"x86_64\", target_pointer_width = \"32\"))]\n-from_aligned! { unsafe usizex4 |bidirectional| core::arch::x86_64::__m128i }\n-\n-#[cfg(all(target_arch = \"x86\", target_pointer_width = \"32\"))]\n-from_aligned! { unsafe usizex8 |bidirectional| core::arch::x86::__m256i }\n-\n-#[cfg(all(target_arch = \"x86_64\", target_pointer_width = \"32\"))]\n-from_aligned! { unsafe usizex8 |bidirectional| core::arch::x86_64::__m256i }\n-\n-#[cfg(all(target_arch = \"x86\", target_pointer_width = \"64\"))]\n-from_aligned! { unsafe usizex2 |bidirectional| core::arch::x86::__m128i }\n-\n-#[cfg(all(target_arch = \"x86_64\", target_pointer_width = \"64\"))]\n-from_aligned! { unsafe usizex2 |bidirectional| core::arch::x86_64::__m128i }\n-\n-#[cfg(all(target_arch = \"x86\", target_pointer_width = \"64\"))]\n-from_aligned! { unsafe usizex4 |bidirectional| core::arch::x86::__m256i }\n-\n-#[cfg(all(target_arch = \"x86_64\", target_pointer_width = \"64\"))]\n-from_aligned! { unsafe usizex4 |bidirectional| core::arch::x86_64::__m256i }\n-\n-/*\n-#[cfg(all(target_arch = \"x86\", target_pointer_width = \"64\"))]\n-from_aligned! { unsafe usizex8 |bidirectional| core::arch::x86::__m512i }\n-\n-#[cfg(all(target_arch = \"x86_64\", target_pointer_width = \"64\"))]\n-from_aligned! { unsafe usizex8 |bidirectional| core::arch::x86_64::__m512i }\n-*/\n+#[cfg(target_pointer_width = \"32\")]\n+from_transmute_x86! { unsafe usizex4 => __m128i }\n+#[cfg(target_pointer_width = \"32\")]\n+from_transmute_x86! { unsafe usizex8 => __m256i }\n+\n+#[cfg(target_pointer_width = \"64\")]\n+from_transmute_x86! { unsafe usizex2 => __m128i }\n+#[cfg(target_pointer_width = \"64\")]\n+from_transmute_x86! { unsafe usizex4 => __m256i }\n+//#[cfg(target_pointer_width = \"64\")]\n+//from_transmute_x86! { unsafe usizex8 => __m512i }"}]}