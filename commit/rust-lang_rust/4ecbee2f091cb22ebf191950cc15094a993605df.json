{"sha": "4ecbee2f091cb22ebf191950cc15094a993605df", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRlY2JlZTJmMDkxY2IyMmViZjE5MTk1MGNjMTUwOTRhOTkzNjA1ZGY=", "commit": {"author": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2019-02-16T15:24:38Z"}, "committer": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2019-02-16T15:24:38Z"}, "message": "Implement float -> int/uint cast", "tree": {"sha": "a8b4c9238b56b0dba1a3b4fc5d78f15de6836e84", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a8b4c9238b56b0dba1a3b4fc5d78f15de6836e84"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4ecbee2f091cb22ebf191950cc15094a993605df", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4ecbee2f091cb22ebf191950cc15094a993605df", "html_url": "https://github.com/rust-lang/rust/commit/4ecbee2f091cb22ebf191950cc15094a993605df", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4ecbee2f091cb22ebf191950cc15094a993605df/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "de94b62ba4e27dc0798dbf787a04ed61f0791552", "url": "https://api.github.com/repos/rust-lang/rust/commits/de94b62ba4e27dc0798dbf787a04ed61f0791552", "html_url": "https://github.com/rust-lang/rust/commit/de94b62ba4e27dc0798dbf787a04ed61f0791552"}], "stats": {"total": 12, "additions": 12, "deletions": 0}, "files": [{"sha": "dfa5827e03ffd25325ee1cf270dfebf5f86a9058", "filename": "src/base.rs", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/4ecbee2f091cb22ebf191950cc15094a993605df/src%2Fbase.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4ecbee2f091cb22ebf191950cc15094a993605df/src%2Fbase.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbase.rs?ref=4ecbee2f091cb22ebf191950cc15094a993605df", "patch": "@@ -518,6 +518,18 @@ fn trans_stmt<'a, 'tcx: 'a>(\n                             };\n                             lval.write_cvalue(fx, CValue::ByVal(res, dest_layout));\n                         }\n+                        (ty::Float(_), ty::Int(_)) => {\n+                            let from = operand.load_scalar(fx);\n+                            let i_type = fx.clif_type(to_ty).unwrap();\n+                            let res = fx.bcx.ins().fcvt_to_sint_sat(i_type, from);\n+                            lval.write_cvalue(fx, CValue::ByVal(res, dest_layout));\n+                        }\n+                        (ty::Float(_), ty::Uint(_)) => {\n+                            let from = operand.load_scalar(fx);\n+                            let i_type = fx.clif_type(to_ty).unwrap();\n+                            let res = fx.bcx.ins().fcvt_to_uint_sat(i_type, from);\n+                            lval.write_cvalue(fx, CValue::ByVal(res, dest_layout));\n+                        }\n                         (ty::Int(_), ty::Float(_)) => {\n                             let from_ty = fx.clif_type(from_ty).unwrap();\n                             let from = operand.load_scalar(fx);"}]}