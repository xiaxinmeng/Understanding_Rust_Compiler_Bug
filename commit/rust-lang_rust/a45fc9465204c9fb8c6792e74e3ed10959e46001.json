{"sha": "a45fc9465204c9fb8c6792e74e3ed10959e46001", "node_id": "C_kwDOAAsO6NoAKGE0NWZjOTQ2NTIwNGM5ZmI4YzY3OTJlNzRlM2VkMTA5NTllNDYwMDE", "commit": {"author": {"name": "Gary", "email": "125548724+AnakinSkywalkeer@users.noreply.github.com", "date": "2023-06-01T15:33:42Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2023-06-01T15:33:42Z"}, "message": "Update setup.rs", "tree": {"sha": "78e192a5b08cef13a952753cbbb8ce328fd5d97b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/78e192a5b08cef13a952753cbbb8ce328fd5d97b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a45fc9465204c9fb8c6792e74e3ed10959e46001", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJkeLpWCRBK7hj4Ov3rIwAAgcAIAHYPHPh2nZxOR1o1GFYLKkwI\n6v+1L9IfCD7PAChVzPKfTEz2VwPCysbmNbeVjWeP/ATC8FFAmYEFpZYqVXXrKvzr\nHeZ4fn+otxBYV9sSQy4j1WIokOxr1j1S/4jIKL4qky6bPJFiuwdUTqY+VTEfogI8\nRlJUvpHaMbxFctec2Efa7dveHtMlPxroNta20UuSmHyZHpadqvvOaqDrCQWsjZZf\n12cx+9MPrCvn0dBnppPR+xqA/FyK/Xy7zB8HMzGLTa+3Vrln/punmwJ+ZF8Hyle1\nHhIdLyVNTvBPKr/7okhOU6faAm7HnVUPgTH9FHxFb66Jo2oBl7tBp/h5K1YpZM4=\n=o+Ho\n-----END PGP SIGNATURE-----\n", "payload": "tree 78e192a5b08cef13a952753cbbb8ce328fd5d97b\nparent 642c92e63008ffb49f6ad8344e07bfa7d5b0d9bb\nauthor Gary <125548724+AnakinSkywalkeer@users.noreply.github.com> 1685633622 +0530\ncommitter GitHub <noreply@github.com> 1685633622 +0530\n\nUpdate setup.rs"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a45fc9465204c9fb8c6792e74e3ed10959e46001", "html_url": "https://github.com/rust-lang/rust/commit/a45fc9465204c9fb8c6792e74e3ed10959e46001", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a45fc9465204c9fb8c6792e74e3ed10959e46001/comments", "author": {"login": "AnakinSkywalkeer", "id": 125548724, "node_id": "U_kgDOB3u4tA", "avatar_url": "https://avatars.githubusercontent.com/u/125548724?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AnakinSkywalkeer", "html_url": "https://github.com/AnakinSkywalkeer", "followers_url": "https://api.github.com/users/AnakinSkywalkeer/followers", "following_url": "https://api.github.com/users/AnakinSkywalkeer/following{/other_user}", "gists_url": "https://api.github.com/users/AnakinSkywalkeer/gists{/gist_id}", "starred_url": "https://api.github.com/users/AnakinSkywalkeer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AnakinSkywalkeer/subscriptions", "organizations_url": "https://api.github.com/users/AnakinSkywalkeer/orgs", "repos_url": "https://api.github.com/users/AnakinSkywalkeer/repos", "events_url": "https://api.github.com/users/AnakinSkywalkeer/events{/privacy}", "received_events_url": "https://api.github.com/users/AnakinSkywalkeer/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "642c92e63008ffb49f6ad8344e07bfa7d5b0d9bb", "url": "https://api.github.com/repos/rust-lang/rust/commits/642c92e63008ffb49f6ad8344e07bfa7d5b0d9bb", "html_url": "https://github.com/rust-lang/rust/commit/642c92e63008ffb49f6ad8344e07bfa7d5b0d9bb"}], "stats": {"total": 14, "additions": 7, "deletions": 7}, "files": [{"sha": "9b26d3f0a66c3a1148f43a663f613d35210a630a", "filename": "src/bootstrap/setup.rs", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/a45fc9465204c9fb8c6792e74e3ed10959e46001/src%2Fbootstrap%2Fsetup.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a45fc9465204c9fb8c6792e74e3ed10959e46001/src%2Fbootstrap%2Fsetup.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fsetup.rs?ref=a45fc9465204c9fb8c6792e74e3ed10959e46001", "patch": "@@ -20,7 +20,7 @@ pub enum Profile {\n     Codegen,\n     Library,\n     Tools,\n-    User,\n+    Dist,\n     None,\n }\n \n@@ -42,7 +42,7 @@ impl Profile {\n     pub fn all() -> impl Iterator<Item = Self> {\n         use Profile::*;\n         // N.B. these are ordered by how they are displayed, not alphabetically\n-        [Library, Compiler, Codegen, Tools, User, None].iter().copied()\n+        [Library, Compiler, Codegen, Tools, Dist, None].iter().copied()\n     }\n \n     pub fn purpose(&self) -> String {\n@@ -52,7 +52,7 @@ impl Profile {\n             Compiler => \"Contribute to the compiler itself\",\n             Codegen => \"Contribute to the compiler, and also modify LLVM or codegen\",\n             Tools => \"Contribute to tools which depend on the compiler, but do not modify it directly (e.g. rustdoc, clippy, miri)\",\n-            User => \"Install Rust from source\",\n+            Dist => \"Install Rust from source\",\n             None => \"Do not modify `config.toml`\"\n         }\n         .to_string()\n@@ -72,7 +72,7 @@ impl Profile {\n             Profile::Codegen => \"codegen\",\n             Profile::Library => \"library\",\n             Profile::Tools => \"tools\",\n-            Profile::User => \"user\",\n+            Profile::Dist => \"dist\",\n             Profile::None => \"none\",\n         }\n     }\n@@ -86,7 +86,7 @@ impl FromStr for Profile {\n             \"lib\" | \"library\" => Ok(Profile::Library),\n             \"compiler\" => Ok(Profile::Compiler),\n             \"llvm\" | \"codegen\" => Ok(Profile::Codegen),\n-            \"maintainer\" | \"user\" => Ok(Profile::User),\n+            \"maintainer\" | \"dist\" => Ok(Profile::Dist),\n             \"tools\" | \"tool\" | \"rustdoc\" | \"clippy\" | \"miri\" | \"rustfmt\" | \"rls\" => {\n                 Ok(Profile::Tools)\n             }\n@@ -159,7 +159,7 @@ pub fn setup(config: &Config, profile: Profile) {\n             \"test src/tools/rustfmt\",\n         ],\n         Profile::Library => &[\"check\", \"build\", \"test library/std\", \"doc\"],\n-        Profile::User => &[\"dist\", \"build\"],\n+        Profile::Dist => &[\"dist\", \"build\"],\n     };\n \n     println!();\n@@ -169,7 +169,7 @@ pub fn setup(config: &Config, profile: Profile) {\n         println!(\"- `x.py {}`\", cmd);\n     }\n \n-    if profile != Profile::User {\n+    if profile != Profile::Dist {\n         println!(\n             \"For more suggestions, see https://rustc-dev-guide.rust-lang.org/building/suggested.html\"\n         );"}]}