{"sha": "209bde16c58b5145c210b949188315c5fdaf25d0", "node_id": "MDY6Q29tbWl0NzI0NzEyOjIwOWJkZTE2YzU4YjUxNDVjMjEwYjk0OTE4ODMxNWM1ZmRhZjI1ZDA=", "commit": {"author": {"name": "Mark Rousskov", "email": "mark.simulacrum@gmail.com", "date": "2019-06-24T16:13:22Z"}, "committer": {"name": "Mark Rousskov", "email": "mark.simulacrum@gmail.com", "date": "2019-06-29T13:09:32Z"}, "message": "Delete now-unused methods", "tree": {"sha": "8b5c44e14b94225801e74b1b951eb90e3e9dfda8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8b5c44e14b94225801e74b1b951eb90e3e9dfda8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/209bde16c58b5145c210b949188315c5fdaf25d0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/209bde16c58b5145c210b949188315c5fdaf25d0", "html_url": "https://github.com/rust-lang/rust/commit/209bde16c58b5145c210b949188315c5fdaf25d0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/209bde16c58b5145c210b949188315c5fdaf25d0/comments", "author": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e2d7df506716dd7acc45ce3b18d4e52433ec518d", "url": "https://api.github.com/repos/rust-lang/rust/commits/e2d7df506716dd7acc45ce3b18d4e52433ec518d", "html_url": "https://github.com/rust-lang/rust/commit/e2d7df506716dd7acc45ce3b18d4e52433ec518d"}], "stats": {"total": 53, "additions": 0, "deletions": 53}, "files": [{"sha": "3294db936d3e640c221feeb6c5a6e7fbec4b2780", "filename": "src/libsyntax/print/pp.rs", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/209bde16c58b5145c210b949188315c5fdaf25d0/src%2Flibsyntax%2Fprint%2Fpp.rs", "raw_url": "https://github.com/rust-lang/rust/raw/209bde16c58b5145c210b949188315c5fdaf25d0/src%2Flibsyntax%2Fprint%2Fpp.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fprint%2Fpp.rs?ref=209bde16c58b5145c210b949188315c5fdaf25d0", "patch": "@@ -682,8 +682,4 @@ impl<'a> Printer<'a> {\n     pub fn hardbreak_tok_offset(off: isize) -> Token {\n         Token::Break(BreakToken {offset: off, blank_space: SIZE_INFINITY})\n     }\n-\n-    crate fn hardbreak_tok() -> Token {\n-        Self::hardbreak_tok_offset(0)\n-    }\n }"}, {"sha": "8b996f5b5f20e116f71659a2e50098c454621e39", "filename": "src/libsyntax/print/pprust.rs", "status": "modified", "additions": 0, "deletions": 49, "changes": 49, "blob_url": "https://github.com/rust-lang/rust/blob/209bde16c58b5145c210b949188315c5fdaf25d0/src%2Flibsyntax%2Fprint%2Fpprust.rs", "raw_url": "https://github.com/rust-lang/rust/raw/209bde16c58b5145c210b949188315c5fdaf25d0/src%2Flibsyntax%2Fprint%2Fpprust.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fprint%2Fpprust.rs?ref=209bde16c58b5145c210b949188315c5fdaf25d0", "patch": "@@ -846,13 +846,6 @@ impl<'a> State<'a> {\n         self.bclose_(span, INDENT_UNIT)\n     }\n \n-    crate fn in_cbox(&self) -> bool {\n-        match self.boxes.last() {\n-            Some(&last_box) => last_box == pp::Breaks::Consistent,\n-            None => false\n-        }\n-    }\n-\n     crate fn break_offset_if_not_bol(&mut self, n: usize,\n                                    off: isize) -> io::Result<()> {\n         if !self.is_bol() {\n@@ -1663,16 +1656,6 @@ impl<'a> State<'a> {\n         self.print_block_with_attrs(blk, &[])\n     }\n \n-    crate fn print_block_unclosed(&mut self, blk: &ast::Block) -> io::Result<()> {\n-        self.print_block_unclosed_indent(blk, INDENT_UNIT)\n-    }\n-\n-    crate fn print_block_unclosed_with_attrs(&mut self, blk: &ast::Block,\n-                                            attrs: &[ast::Attribute])\n-                                           -> io::Result<()> {\n-        self.print_block_maybe_unclosed(blk, INDENT_UNIT, attrs, false)\n-    }\n-\n     crate fn print_block_unclosed_indent(&mut self, blk: &ast::Block,\n                                        indented: usize) -> io::Result<()> {\n         self.print_block_maybe_unclosed(blk, indented, &[], false)\n@@ -2357,14 +2340,6 @@ impl<'a> State<'a> {\n         self.ann.post(self, AnnNode::Name(&name))\n     }\n \n-    crate fn print_for_decl(&mut self, loc: &ast::Local,\n-                          coll: &ast::Expr) -> io::Result<()> {\n-        self.print_local_decl(loc)?;\n-        self.s.space()?;\n-        self.word_space(\"in\")?;\n-        self.print_expr(coll)\n-    }\n-\n     fn print_path(&mut self,\n                   path: &ast::Path,\n                   colons_before_params: bool,\n@@ -3072,30 +3047,6 @@ impl<'a> State<'a> {\n         Ok(())\n     }\n \n-    crate fn print_opt_abi_and_extern_if_nondefault(&mut self,\n-                                                  opt_abi: Option<Abi>)\n-        -> io::Result<()> {\n-        match opt_abi {\n-            Some(Abi::Rust) => Ok(()),\n-            Some(abi) => {\n-                self.word_nbsp(\"extern\")?;\n-                self.word_nbsp(abi.to_string())\n-            }\n-            None => Ok(())\n-        }\n-    }\n-\n-    crate fn print_extern_opt_abi(&mut self,\n-                                opt_abi: Option<Abi>) -> io::Result<()> {\n-        match opt_abi {\n-            Some(abi) => {\n-                self.word_nbsp(\"extern\")?;\n-                self.word_nbsp(abi.to_string())\n-            }\n-            None => Ok(())\n-        }\n-    }\n-\n     crate fn print_fn_header_info(&mut self,\n                                 header: ast::FnHeader,\n                                 vis: &ast::Visibility) -> io::Result<()> {"}]}