{"sha": "37cd79cd323a7f1adcad66205c7855fb6c92f062", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM3Y2Q3OWNkMzIzYTdmMWFkY2FkNjYyMDVjNzg1NWZiNmM5MmYwNjI=", "commit": {"author": {"name": "Lzu Tao", "email": "taolzu@gmail.com", "date": "2020-09-04T09:40:20Z"}, "committer": {"name": "Lzu Tao", "email": "taolzu@gmail.com", "date": "2020-09-26T05:20:53Z"}, "message": "Gather all ZST structs of str together", "tree": {"sha": "fe4e130da4237342d29c97f53fa6604de027906f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fe4e130da4237342d29c97f53fa6604de027906f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/37cd79cd323a7f1adcad66205c7855fb6c92f062", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/37cd79cd323a7f1adcad66205c7855fb6c92f062", "html_url": "https://github.com/rust-lang/rust/commit/37cd79cd323a7f1adcad66205c7855fb6c92f062", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/37cd79cd323a7f1adcad66205c7855fb6c92f062/comments", "author": {"login": "tesuji", "id": 15225902, "node_id": "MDQ6VXNlcjE1MjI1OTAy", "avatar_url": "https://avatars.githubusercontent.com/u/15225902?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tesuji", "html_url": "https://github.com/tesuji", "followers_url": "https://api.github.com/users/tesuji/followers", "following_url": "https://api.github.com/users/tesuji/following{/other_user}", "gists_url": "https://api.github.com/users/tesuji/gists{/gist_id}", "starred_url": "https://api.github.com/users/tesuji/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tesuji/subscriptions", "organizations_url": "https://api.github.com/users/tesuji/orgs", "repos_url": "https://api.github.com/users/tesuji/repos", "events_url": "https://api.github.com/users/tesuji/events{/privacy}", "received_events_url": "https://api.github.com/users/tesuji/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tesuji", "id": 15225902, "node_id": "MDQ6VXNlcjE1MjI1OTAy", "avatar_url": "https://avatars.githubusercontent.com/u/15225902?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tesuji", "html_url": "https://github.com/tesuji", "followers_url": "https://api.github.com/users/tesuji/followers", "following_url": "https://api.github.com/users/tesuji/following{/other_user}", "gists_url": "https://api.github.com/users/tesuji/gists{/gist_id}", "starred_url": "https://api.github.com/users/tesuji/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tesuji/subscriptions", "organizations_url": "https://api.github.com/users/tesuji/orgs", "repos_url": "https://api.github.com/users/tesuji/repos", "events_url": "https://api.github.com/users/tesuji/events{/privacy}", "received_events_url": "https://api.github.com/users/tesuji/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "653b5bf18c962a35bb6d90e13e6681446cc49878", "url": "https://api.github.com/repos/rust-lang/rust/commits/653b5bf18c962a35bb6d90e13e6681446cc49878", "html_url": "https://github.com/rust-lang/rust/commit/653b5bf18c962a35bb6d90e13e6681446cc49878"}], "stats": {"total": 48, "additions": 22, "deletions": 26}, "files": [{"sha": "f30e47869701e18f01eceec440abd007ca36d58b", "filename": "library/core/src/str/mod.rs", "status": "modified", "additions": 22, "deletions": 26, "changes": 48, "blob_url": "https://github.com/rust-lang/rust/blob/37cd79cd323a7f1adcad66205c7855fb6c92f062/library%2Fcore%2Fsrc%2Fstr%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/37cd79cd323a7f1adcad66205c7855fb6c92f062/library%2Fcore%2Fsrc%2Fstr%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fstr%2Fmod.rs?ref=37cd79cd323a7f1adcad66205c7855fb6c92f062", "patch": "@@ -79,16 +79,6 @@ use iter::{MatchesInternal, SplitNInternal};\n \n use validations::truncate_to_char_boundary;\n \n-impl_fn_for_zst! {\n-    /// A nameable, cloneable fn type\n-    #[derive(Clone)]\n-    struct LinesAnyMap impl<'a> Fn = |line: &'a str| -> &'a str {\n-        let l = line.len();\n-        if l > 0 && line.as_bytes()[l - 1] == b'\\r' { &line[0 .. l - 1] }\n-        else { line }\n-    };\n-}\n-\n #[inline(never)]\n #[cold]\n #[track_caller]\n@@ -2425,22 +2415,6 @@ impl str {\n     }\n }\n \n-impl_fn_for_zst! {\n-    #[derive(Clone)]\n-    struct CharEscapeDebugContinue impl Fn = |c: char| -> char::EscapeDebug {\n-        c.escape_debug_ext(false)\n-    };\n-\n-    #[derive(Clone)]\n-    struct CharEscapeUnicode impl Fn = |c: char| -> char::EscapeUnicode {\n-        c.escape_unicode()\n-    };\n-    #[derive(Clone)]\n-    struct CharEscapeDefault impl Fn = |c: char| -> char::EscapeDefault {\n-        c.escape_default()\n-    };\n-}\n-\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n impl AsRef<[u8]> for str {\n     #[inline]\n@@ -2467,6 +2441,28 @@ impl Default for &mut str {\n }\n \n impl_fn_for_zst! {\n+    /// A nameable, cloneable fn type\n+    #[derive(Clone)]\n+    struct LinesAnyMap impl<'a> Fn = |line: &'a str| -> &'a str {\n+        let l = line.len();\n+        if l > 0 && line.as_bytes()[l - 1] == b'\\r' { &line[0 .. l - 1] }\n+        else { line }\n+    };\n+\n+    #[derive(Clone)]\n+    struct CharEscapeDebugContinue impl Fn = |c: char| -> char::EscapeDebug {\n+        c.escape_debug_ext(false)\n+    };\n+\n+    #[derive(Clone)]\n+    struct CharEscapeUnicode impl Fn = |c: char| -> char::EscapeUnicode {\n+        c.escape_unicode()\n+    };\n+    #[derive(Clone)]\n+    struct CharEscapeDefault impl Fn = |c: char| -> char::EscapeDefault {\n+        c.escape_default()\n+    };\n+\n     #[derive(Clone)]\n     struct IsWhitespace impl Fn = |c: char| -> bool {\n         c.is_whitespace()"}]}