{"sha": "2f2d8df534ce97d5bea408a79388b97ae6d9fa38", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJmMmQ4ZGY1MzRjZTk3ZDViZWE0MDhhNzkzODhiOTdhZTZkOWZhMzg=", "commit": {"author": {"name": "Steve Klabnik", "email": "steve@steveklabnik.com", "date": "2015-10-19T21:14:08Z"}, "committer": {"name": "Steve Klabnik", "email": "steve@steveklabnik.com", "date": "2015-10-19T21:14:08Z"}, "message": "Rollup merge of #29169 - apasel422:spell, r=steveklabnik\n\nr? @steveklabnik", "tree": {"sha": "c6d32d53aa11d118ee8062fc52802e5f292d6759", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c6d32d53aa11d118ee8062fc52802e5f292d6759"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2f2d8df534ce97d5bea408a79388b97ae6d9fa38", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2f2d8df534ce97d5bea408a79388b97ae6d9fa38", "html_url": "https://github.com/rust-lang/rust/commit/2f2d8df534ce97d5bea408a79388b97ae6d9fa38", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2f2d8df534ce97d5bea408a79388b97ae6d9fa38/comments", "author": {"login": "steveklabnik", "id": 27786, "node_id": "MDQ6VXNlcjI3Nzg2", "avatar_url": "https://avatars.githubusercontent.com/u/27786?v=4", "gravatar_id": "", "url": "https://api.github.com/users/steveklabnik", "html_url": "https://github.com/steveklabnik", "followers_url": "https://api.github.com/users/steveklabnik/followers", "following_url": "https://api.github.com/users/steveklabnik/following{/other_user}", "gists_url": "https://api.github.com/users/steveklabnik/gists{/gist_id}", "starred_url": "https://api.github.com/users/steveklabnik/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/steveklabnik/subscriptions", "organizations_url": "https://api.github.com/users/steveklabnik/orgs", "repos_url": "https://api.github.com/users/steveklabnik/repos", "events_url": "https://api.github.com/users/steveklabnik/events{/privacy}", "received_events_url": "https://api.github.com/users/steveklabnik/received_events", "type": "User", "site_admin": false}, "committer": {"login": "steveklabnik", "id": 27786, "node_id": "MDQ6VXNlcjI3Nzg2", "avatar_url": "https://avatars.githubusercontent.com/u/27786?v=4", "gravatar_id": "", "url": "https://api.github.com/users/steveklabnik", "html_url": "https://github.com/steveklabnik", "followers_url": "https://api.github.com/users/steveklabnik/followers", "following_url": "https://api.github.com/users/steveklabnik/following{/other_user}", "gists_url": "https://api.github.com/users/steveklabnik/gists{/gist_id}", "starred_url": "https://api.github.com/users/steveklabnik/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/steveklabnik/subscriptions", "organizations_url": "https://api.github.com/users/steveklabnik/orgs", "repos_url": "https://api.github.com/users/steveklabnik/repos", "events_url": "https://api.github.com/users/steveklabnik/events{/privacy}", "received_events_url": "https://api.github.com/users/steveklabnik/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ea3bf79baced33bd21d876261e01bed968f8eca1", "url": "https://api.github.com/repos/rust-lang/rust/commits/ea3bf79baced33bd21d876261e01bed968f8eca1", "html_url": "https://github.com/rust-lang/rust/commit/ea3bf79baced33bd21d876261e01bed968f8eca1"}, {"sha": "9431f3cc7b131a3413508901ed98e0c6cc0505c7", "url": "https://api.github.com/repos/rust-lang/rust/commits/9431f3cc7b131a3413508901ed98e0c6cc0505c7", "html_url": "https://github.com/rust-lang/rust/commit/9431f3cc7b131a3413508901ed98e0c6cc0505c7"}], "stats": {"total": 10, "additions": 5, "deletions": 5}, "files": [{"sha": "5fd61eb51dd1c7f6d2b7d8ed6b6af5ec70dce106", "filename": "src/doc/nomicon/safe-unsafe-meaning.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2f2d8df534ce97d5bea408a79388b97ae6d9fa38/src%2Fdoc%2Fnomicon%2Fsafe-unsafe-meaning.md", "raw_url": "https://github.com/rust-lang/rust/raw/2f2d8df534ce97d5bea408a79388b97ae6d9fa38/src%2Fdoc%2Fnomicon%2Fsafe-unsafe-meaning.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Fnomicon%2Fsafe-unsafe-meaning.md?ref=2f2d8df534ce97d5bea408a79388b97ae6d9fa38", "patch": "@@ -42,7 +42,7 @@ Some examples of unsafe functions:\n * `slice::get_unchecked` will perform unchecked indexing, allowing memory\n   safety to be freely violated.\n * every raw pointer to sized type has intrinsic `offset` method that invokes\n-  Undefined Behaviour if it is not \"in bounds\" as defined by LLVM.\n+  Undefined Behavior if it is not \"in bounds\" as defined by LLVM.\n * `mem::transmute` reinterprets some value as having the given type,\n   bypassing type safety in arbitrary ways. (see [conversions] for details)\n * All FFI functions are `unsafe` because they can do arbitrary things."}, {"sha": "023edf29341e9f8f74e2e64f2b8a485c60a421a4", "filename": "src/libcollections/str.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2f2d8df534ce97d5bea408a79388b97ae6d9fa38/src%2Flibcollections%2Fstr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2f2d8df534ce97d5bea408a79388b97ae6d9fa38/src%2Flibcollections%2Fstr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcollections%2Fstr.rs?ref=2f2d8df534ce97d5bea408a79388b97ae6d9fa38", "patch": "@@ -102,7 +102,7 @@ impl<S: Borrow<str>> SliceConcatExt<str> for [S] {\n     }\n }\n \n-/// External iterator for a string's UTF16 codeunits.\n+/// External iterator for a string's UTF-16 code units.\n ///\n /// For use with the `std::iter` module.\n #[derive(Clone)]"}, {"sha": "c5827326a86ed41693c40e2d1653ce71a20944f6", "filename": "src/libcore/iter.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2f2d8df534ce97d5bea408a79388b97ae6d9fa38/src%2Flibcore%2Fiter.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2f2d8df534ce97d5bea408a79388b97ae6d9fa38/src%2Flibcore%2Fiter.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fiter.rs?ref=2f2d8df534ce97d5bea408a79388b97ae6d9fa38", "patch": "@@ -3248,7 +3248,7 @@ impl<T> Default for Empty<T> {\n \n /// Creates an iterator that yields nothing.\n ///\n-/// # Exampes\n+/// # Examples\n ///\n /// Basic usage:\n ///"}, {"sha": "6e3c5eaf217f63b62fc721a66466c1ee2caf879a", "filename": "src/libstd/process.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/2f2d8df534ce97d5bea408a79388b97ae6d9fa38/src%2Flibstd%2Fprocess.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2f2d8df534ce97d5bea408a79388b97ae6d9fa38/src%2Flibstd%2Fprocess.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fprocess.rs?ref=2f2d8df534ce97d5bea408a79388b97ae6d9fa38", "patch": "@@ -100,7 +100,7 @@ impl IntoInner<AnonPipe> for ChildStdin {\n     fn into_inner(self) -> AnonPipe { self.inner }\n }\n \n-/// A handle to a child procesess's stdout\n+/// A handle to a child process's stdout\n #[stable(feature = \"process\", since = \"1.0.0\")]\n pub struct ChildStdout {\n     inner: AnonPipe\n@@ -121,7 +121,7 @@ impl IntoInner<AnonPipe> for ChildStdout {\n     fn into_inner(self) -> AnonPipe { self.inner }\n }\n \n-/// A handle to a child procesess's stderr\n+/// A handle to a child process's stderr\n #[stable(feature = \"process\", since = \"1.0.0\")]\n pub struct ChildStderr {\n     inner: AnonPipe"}]}