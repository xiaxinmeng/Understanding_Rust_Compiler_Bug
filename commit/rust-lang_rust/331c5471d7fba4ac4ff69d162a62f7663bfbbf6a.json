{"sha": "331c5471d7fba4ac4ff69d162a62f7663bfbbf6a", "node_id": "C_kwDOAAsO6NoAKDMzMWM1NDcxZDdmYmE0YWM0ZmY2OWQxNjJhNjJmNzY2M2JmYmJmNmE", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2023-04-25T19:06:32Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2023-04-25T19:06:32Z"}, "message": "Rollup merge of #110556 - kylematsuda:earlybinder-explicit-item-bounds, r=compiler-errors\n\nSwitch to `EarlyBinder` for `explicit_item_bounds`\n\nPart of the work to finish https://github.com/rust-lang/rust/issues/105779.\n\nThis PR adds `EarlyBinder` to the return type of the `explicit_item_bounds` query and removes `bound_explicit_item_bounds`.\n\nr? `@compiler-errors` (hope it's okay to request you, since you reviewed #110299 and #110498 :smiley:)", "tree": {"sha": "16b2e0dfd550a67e0c6247999722c15ff0dfd2e4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/16b2e0dfd550a67e0c6247999722c15ff0dfd2e4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/331c5471d7fba4ac4ff69d162a62f7663bfbbf6a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/331c5471d7fba4ac4ff69d162a62f7663bfbbf6a", "html_url": "https://github.com/rust-lang/rust/commit/331c5471d7fba4ac4ff69d162a62f7663bfbbf6a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/331c5471d7fba4ac4ff69d162a62f7663bfbbf6a/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5514d9f444b498332f2b4ae8852f1f036fc3087f", "url": "https://api.github.com/repos/rust-lang/rust/commits/5514d9f444b498332f2b4ae8852f1f036fc3087f", "html_url": "https://github.com/rust-lang/rust/commit/5514d9f444b498332f2b4ae8852f1f036fc3087f"}, {"sha": "55d814633423c801034fca46f4f391d0c5fd3899", "url": "https://api.github.com/repos/rust-lang/rust/commits/55d814633423c801034fca46f4f391d0c5fd3899", "html_url": "https://github.com/rust-lang/rust/commit/55d814633423c801034fca46f4f391d0c5fd3899"}], "stats": {"total": 11, "additions": 5, "deletions": 6}, "files": [{"sha": "ff838c2d56e43f85214b79bdcc0e635c99e5f936", "filename": "clippy_lints/src/future_not_send.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/331c5471d7fba4ac4ff69d162a62f7663bfbbf6a/clippy_lints%2Fsrc%2Ffuture_not_send.rs", "raw_url": "https://github.com/rust-lang/rust/raw/331c5471d7fba4ac4ff69d162a62f7663bfbbf6a/clippy_lints%2Fsrc%2Ffuture_not_send.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Ffuture_not_send.rs?ref=331c5471d7fba4ac4ff69d162a62f7663bfbbf6a", "patch": "@@ -4,7 +4,7 @@ use rustc_hir::intravisit::FnKind;\n use rustc_hir::{Body, FnDecl};\n use rustc_infer::infer::TyCtxtInferExt;\n use rustc_lint::{LateContext, LateLintPass};\n-use rustc_middle::ty::{self, AliasTy, Clause, EarlyBinder, PredicateKind};\n+use rustc_middle::ty::{self, AliasTy, Clause, PredicateKind};\n use rustc_session::{declare_lint_pass, declare_tool_lint};\n use rustc_span::def_id::LocalDefId;\n use rustc_span::{sym, Span};\n@@ -66,8 +66,7 @@ impl<'tcx> LateLintPass<'tcx> for FutureNotSend {\n         if let ty::Alias(ty::Opaque, AliasTy { def_id, substs, .. }) = *ret_ty.kind() {\n             let preds = cx.tcx.explicit_item_bounds(def_id);\n             let mut is_future = false;\n-            for &(p, _span) in preds {\n-                let p = EarlyBinder(p).subst(cx.tcx, substs);\n+            for (p, _span) in preds.subst_iter_copied(cx.tcx, substs) {\n                 if let Some(trait_pred) = p.to_opt_poly_trait_pred() {\n                     if Some(trait_pred.skip_binder().trait_ref.def_id) == cx.tcx.lang_items().future_trait() {\n                         is_future = true;"}, {"sha": "cb700126c2bd5b074ae400e4e452144f2e91edd6", "filename": "clippy_utils/src/ty.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/331c5471d7fba4ac4ff69d162a62f7663bfbbf6a/clippy_utils%2Fsrc%2Fty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/331c5471d7fba4ac4ff69d162a62f7663bfbbf6a/clippy_utils%2Fsrc%2Fty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_utils%2Fsrc%2Fty.rs?ref=331c5471d7fba4ac4ff69d162a62f7663bfbbf6a", "patch": "@@ -90,7 +90,7 @@ pub fn contains_ty_adt_constructor_opaque<'tcx>(cx: &LateContext<'tcx>, ty: Ty<'\n                         return false;\n                     }\n \n-                    for &(predicate, _span) in cx.tcx.explicit_item_bounds(def_id) {\n+                    for (predicate, _span) in cx.tcx.explicit_item_bounds(def_id).subst_identity_iter_copied() {\n                         match predicate.kind().skip_binder() {\n                             // For `impl Trait<U>`, it will register a predicate of `T: Trait<U>`, so we go through\n                             // and check substituions to find `U`.\n@@ -267,7 +267,7 @@ pub fn is_must_use_ty<'tcx>(cx: &LateContext<'tcx>, ty: Ty<'tcx>) -> bool {\n         },\n         ty::Tuple(substs) => substs.iter().any(|ty| is_must_use_ty(cx, ty)),\n         ty::Alias(ty::Opaque, ty::AliasTy { def_id, .. }) => {\n-            for (predicate, _) in cx.tcx.explicit_item_bounds(*def_id) {\n+            for (predicate, _) in cx.tcx.explicit_item_bounds(def_id).skip_binder() {\n                 if let ty::PredicateKind::Clause(ty::Clause::Trait(trait_predicate)) = predicate.kind().skip_binder() {\n                     if cx.tcx.has_attr(trait_predicate.trait_ref.def_id, sym::must_use) {\n                         return true;\n@@ -743,7 +743,7 @@ fn sig_for_projection<'tcx>(cx: &LateContext<'tcx>, ty: AliasTy<'tcx>) -> Option\n \n     for (pred, _) in cx\n         .tcx\n-        .bound_explicit_item_bounds(ty.def_id)\n+        .explicit_item_bounds(ty.def_id)\n         .subst_iter_copied(cx.tcx, ty.substs)\n     {\n         match pred.kind().skip_binder() {"}]}