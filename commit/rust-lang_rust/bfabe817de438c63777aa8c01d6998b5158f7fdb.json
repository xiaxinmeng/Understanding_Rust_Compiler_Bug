{"sha": "bfabe817de438c63777aa8c01d6998b5158f7fdb", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJmYWJlODE3ZGU0MzhjNjM3NzdhYThjMDFkNjk5OGI1MTU4ZjdmZGI=", "commit": {"author": {"name": "Andre Bogus", "email": "bogusandre@gmail.com", "date": "2017-01-24T08:46:01Z"}, "committer": {"name": "Andre Bogus", "email": "bogusandre@gmail.com", "date": "2017-01-24T08:46:01Z"}, "message": "add explanation, fix test", "tree": {"sha": "b401ded7df4efd6e7b77f690fd2d071442f3d00f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b401ded7df4efd6e7b77f690fd2d071442f3d00f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bfabe817de438c63777aa8c01d6998b5158f7fdb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bfabe817de438c63777aa8c01d6998b5158f7fdb", "html_url": "https://github.com/rust-lang/rust/commit/bfabe817de438c63777aa8c01d6998b5158f7fdb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bfabe817de438c63777aa8c01d6998b5158f7fdb/comments", "author": {"login": "llogiq", "id": 4200835, "node_id": "MDQ6VXNlcjQyMDA4MzU=", "avatar_url": "https://avatars.githubusercontent.com/u/4200835?v=4", "gravatar_id": "", "url": "https://api.github.com/users/llogiq", "html_url": "https://github.com/llogiq", "followers_url": "https://api.github.com/users/llogiq/followers", "following_url": "https://api.github.com/users/llogiq/following{/other_user}", "gists_url": "https://api.github.com/users/llogiq/gists{/gist_id}", "starred_url": "https://api.github.com/users/llogiq/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/llogiq/subscriptions", "organizations_url": "https://api.github.com/users/llogiq/orgs", "repos_url": "https://api.github.com/users/llogiq/repos", "events_url": "https://api.github.com/users/llogiq/events{/privacy}", "received_events_url": "https://api.github.com/users/llogiq/received_events", "type": "User", "site_admin": false}, "committer": {"login": "llogiq", "id": 4200835, "node_id": "MDQ6VXNlcjQyMDA4MzU=", "avatar_url": "https://avatars.githubusercontent.com/u/4200835?v=4", "gravatar_id": "", "url": "https://api.github.com/users/llogiq", "html_url": "https://github.com/llogiq", "followers_url": "https://api.github.com/users/llogiq/followers", "following_url": "https://api.github.com/users/llogiq/following{/other_user}", "gists_url": "https://api.github.com/users/llogiq/gists{/gist_id}", "starred_url": "https://api.github.com/users/llogiq/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/llogiq/subscriptions", "organizations_url": "https://api.github.com/users/llogiq/orgs", "repos_url": "https://api.github.com/users/llogiq/repos", "events_url": "https://api.github.com/users/llogiq/events{/privacy}", "received_events_url": "https://api.github.com/users/llogiq/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b40432c94924f1fd7fef7df403348742ee17af4d", "url": "https://api.github.com/repos/rust-lang/rust/commits/b40432c94924f1fd7fef7df403348742ee17af4d", "html_url": "https://github.com/rust-lang/rust/commit/b40432c94924f1fd7fef7df403348742ee17af4d"}], "stats": {"total": 13, "additions": 12, "deletions": 1}, "files": [{"sha": "d9b8c5ea589fd57aa74a840b889ae5aad9deb4de", "filename": "src/libcore/iter/mod.rs", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/bfabe817de438c63777aa8c01d6998b5158f7fdb/src%2Flibcore%2Fiter%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bfabe817de438c63777aa8c01d6998b5158f7fdb/src%2Flibcore%2Fiter%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fiter%2Fmod.rs?ref=bfabe817de438c63777aa8c01d6998b5158f7fdb", "patch": "@@ -1100,6 +1100,17 @@ impl<I: Iterator, P> Iterator for Filter<I, P> where P: FnMut(&I::Item) -> bool\n         (0, upper) // can't know a lower bound, due to the predicate\n     }\n \n+    // this special case allows the compiler to make `.filter(_).count()`\n+    // branchless. Barring perfect branch prediction (which is unattainable in\n+    // the general case), this will be much faster in >90% of cases (containing\n+    // virtually all real workloads) and only a tiny bit slower in the rest.\n+    //\n+    // Having this specialization thus allows us to write `.filter(p).count()`\n+    // where we would otherwise write `.map(|x| p(x) as usize).sum()`, which is\n+    // less readable and also less backwards-compatible to Rust before 1.10.\n+    //\n+    // Using the branchless version will also simplify the LLVM byte code, thus\n+    // leaving more budget for LLVM optimizations.\n     #[inline]\n     fn count(mut self) -> usize {\n         let mut count = 0;"}, {"sha": "e6d2494f5fda8b474d9c281ecfb1353b0ee9bf7f", "filename": "src/libcoretest/iter.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bfabe817de438c63777aa8c01d6998b5158f7fdb/src%2Flibcoretest%2Fiter.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bfabe817de438c63777aa8c01d6998b5158f7fdb/src%2Flibcoretest%2Fiter.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcoretest%2Fiter.rs?ref=bfabe817de438c63777aa8c01d6998b5158f7fdb", "patch": "@@ -194,7 +194,7 @@ fn test_iterator_enumerate_count() {\n #[test]\n fn test_iterator_filter_count() {\n     let xs = [0, 1, 2, 3, 4, 5, 6, 7, 8];\n-    assert_eq!(xs.iter().filter(|x| x % 2 == 0).count(), 5);\n+    assert_eq!(xs.iter().filter(|&&x| x % 2 == 0).count(), 5);\n }\n \n #[test]"}]}