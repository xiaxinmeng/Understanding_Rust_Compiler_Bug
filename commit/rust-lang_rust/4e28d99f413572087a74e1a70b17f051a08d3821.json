{"sha": "4e28d99f413572087a74e1a70b17f051a08d3821", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRlMjhkOTlmNDEzNTcyMDg3YTc0ZTFhNzBiMTdmMDUxYTA4ZDM4MjE=", "commit": {"author": {"name": "JarredAllen", "email": "jarredallen73@gmail.com", "date": "2020-08-12T20:24:55Z"}, "committer": {"name": "JarredAllen", "email": "jarredallen73@gmail.com", "date": "2020-08-12T20:24:55Z"}, "message": "Replace panics with early returns", "tree": {"sha": "fabe7d8a6f288b3b05148f19870ccd11355871fa", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fabe7d8a6f288b3b05148f19870ccd11355871fa"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4e28d99f413572087a74e1a70b17f051a08d3821", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4e28d99f413572087a74e1a70b17f051a08d3821", "html_url": "https://github.com/rust-lang/rust/commit/4e28d99f413572087a74e1a70b17f051a08d3821", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4e28d99f413572087a74e1a70b17f051a08d3821/comments", "author": {"login": "JarredAllen", "id": 19656507, "node_id": "MDQ6VXNlcjE5NjU2NTA3", "avatar_url": "https://avatars.githubusercontent.com/u/19656507?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JarredAllen", "html_url": "https://github.com/JarredAllen", "followers_url": "https://api.github.com/users/JarredAllen/followers", "following_url": "https://api.github.com/users/JarredAllen/following{/other_user}", "gists_url": "https://api.github.com/users/JarredAllen/gists{/gist_id}", "starred_url": "https://api.github.com/users/JarredAllen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JarredAllen/subscriptions", "organizations_url": "https://api.github.com/users/JarredAllen/orgs", "repos_url": "https://api.github.com/users/JarredAllen/repos", "events_url": "https://api.github.com/users/JarredAllen/events{/privacy}", "received_events_url": "https://api.github.com/users/JarredAllen/received_events", "type": "User", "site_admin": false}, "committer": {"login": "JarredAllen", "id": 19656507, "node_id": "MDQ6VXNlcjE5NjU2NTA3", "avatar_url": "https://avatars.githubusercontent.com/u/19656507?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JarredAllen", "html_url": "https://github.com/JarredAllen", "followers_url": "https://api.github.com/users/JarredAllen/followers", "following_url": "https://api.github.com/users/JarredAllen/following{/other_user}", "gists_url": "https://api.github.com/users/JarredAllen/gists{/gist_id}", "starred_url": "https://api.github.com/users/JarredAllen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JarredAllen/subscriptions", "organizations_url": "https://api.github.com/users/JarredAllen/orgs", "repos_url": "https://api.github.com/users/JarredAllen/repos", "events_url": "https://api.github.com/users/JarredAllen/events{/privacy}", "received_events_url": "https://api.github.com/users/JarredAllen/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "480ccc3dbec4440bea0aa1f47d2ad21ebcdd578e", "url": "https://api.github.com/repos/rust-lang/rust/commits/480ccc3dbec4440bea0aa1f47d2ad21ebcdd578e", "html_url": "https://github.com/rust-lang/rust/commit/480ccc3dbec4440bea0aa1f47d2ad21ebcdd578e"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "e0204273197f5d8c8ea408f3f50220934800a165", "filename": "clippy_lints/src/types.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/4e28d99f413572087a74e1a70b17f051a08d3821/clippy_lints%2Fsrc%2Ftypes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4e28d99f413572087a74e1a70b17f051a08d3821/clippy_lints%2Fsrc%2Ftypes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Ftypes.rs?ref=4e28d99f413572087a74e1a70b17f051a08d3821", "patch": "@@ -357,13 +357,13 @@ impl Types {\n                             let box_ty = match &last_path_segment(qpath).args.unwrap().args[0] {\n                                 GenericArg::Type(ty) => match &ty.kind {\n                                     TyKind::Path(qpath) => qpath,\n-                                    _ => panic!(\"Box that isn't a type\"),\n+                                    _ => return,\n                                 },\n-                                _ => panic!(\"Rc without type argument\"),\n+                                _ => return,\n                             };\n                             let inner_span = match &last_path_segment(&box_ty).args.unwrap().args[0] {\n                                 GenericArg::Type(ty) => ty.span,\n-                                _ => panic!(\"Box without type argument\"),\n+                                _ => return,\n                             };\n                             span_lint_and_sugg(\n                                 cx,"}]}