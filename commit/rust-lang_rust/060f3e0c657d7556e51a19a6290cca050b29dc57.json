{"sha": "060f3e0c657d7556e51a19a6290cca050b29dc57", "node_id": "C_kwDOAAsO6NoAKDA2MGYzZTBjNjU3ZDc1NTZlNTFhMTlhNjI5MGNjYTA1MGIyOWRjNTc", "commit": {"author": {"name": "lcnr", "email": "rust@lcnr.de", "date": "2022-07-04T13:35:21Z"}, "committer": {"name": "lcnr", "email": "rust@lcnr.de", "date": "2022-09-08T09:14:33Z"}, "message": "generalize: no need to cache errors", "tree": {"sha": "688e04b5870c8f51798e83f4425c047629d1fa28", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/688e04b5870c8f51798e83f4425c047629d1fa28"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/060f3e0c657d7556e51a19a6290cca050b29dc57", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/060f3e0c657d7556e51a19a6290cca050b29dc57", "html_url": "https://github.com/rust-lang/rust/commit/060f3e0c657d7556e51a19a6290cca050b29dc57", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/060f3e0c657d7556e51a19a6290cca050b29dc57/comments", "author": {"login": "lcnr", "id": 29864074, "node_id": "MDQ6VXNlcjI5ODY0MDc0", "avatar_url": "https://avatars.githubusercontent.com/u/29864074?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lcnr", "html_url": "https://github.com/lcnr", "followers_url": "https://api.github.com/users/lcnr/followers", "following_url": "https://api.github.com/users/lcnr/following{/other_user}", "gists_url": "https://api.github.com/users/lcnr/gists{/gist_id}", "starred_url": "https://api.github.com/users/lcnr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lcnr/subscriptions", "organizations_url": "https://api.github.com/users/lcnr/orgs", "repos_url": "https://api.github.com/users/lcnr/repos", "events_url": "https://api.github.com/users/lcnr/events{/privacy}", "received_events_url": "https://api.github.com/users/lcnr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "lcnr", "id": 29864074, "node_id": "MDQ6VXNlcjI5ODY0MDc0", "avatar_url": "https://avatars.githubusercontent.com/u/29864074?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lcnr", "html_url": "https://github.com/lcnr", "followers_url": "https://api.github.com/users/lcnr/followers", "following_url": "https://api.github.com/users/lcnr/following{/other_user}", "gists_url": "https://api.github.com/users/lcnr/gists{/gist_id}", "starred_url": "https://api.github.com/users/lcnr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lcnr/subscriptions", "organizations_url": "https://api.github.com/users/lcnr/orgs", "repos_url": "https://api.github.com/users/lcnr/repos", "events_url": "https://api.github.com/users/lcnr/events{/privacy}", "received_events_url": "https://api.github.com/users/lcnr/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "44adfccffe34d14079b06ae459982b8600f84577", "url": "https://api.github.com/repos/rust-lang/rust/commits/44adfccffe34d14079b06ae459982b8600f84577", "html_url": "https://github.com/rust-lang/rust/commit/44adfccffe34d14079b06ae459982b8600f84577"}], "stats": {"total": 12, "additions": 6, "deletions": 6}, "files": [{"sha": "644c92ed0e54876da09c29957cc07c93aed1967e", "filename": "compiler/rustc_infer/src/infer/combine.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/060f3e0c657d7556e51a19a6290cca050b29dc57/compiler%2Frustc_infer%2Fsrc%2Finfer%2Fcombine.rs", "raw_url": "https://github.com/rust-lang/rust/raw/060f3e0c657d7556e51a19a6290cca050b29dc57/compiler%2Frustc_infer%2Fsrc%2Finfer%2Fcombine.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_infer%2Fsrc%2Finfer%2Fcombine.rs?ref=060f3e0c657d7556e51a19a6290cca050b29dc57", "patch": "@@ -486,7 +486,7 @@ struct Generalizer<'cx, 'tcx> {\n \n     param_env: ty::ParamEnv<'tcx>,\n \n-    cache: SsoHashMap<Ty<'tcx>, RelateResult<'tcx, Ty<'tcx>>>,\n+    cache: SsoHashMap<Ty<'tcx>, Ty<'tcx>>,\n }\n \n /// Result from a generalization operation. This includes\n@@ -593,8 +593,8 @@ impl<'tcx> TypeRelation<'tcx> for Generalizer<'_, 'tcx> {\n     fn tys(&mut self, t: Ty<'tcx>, t2: Ty<'tcx>) -> RelateResult<'tcx, Ty<'tcx>> {\n         assert_eq!(t, t2); // we are abusing TypeRelation here; both LHS and RHS ought to be ==\n \n-        if let Some(result) = self.cache.get(&t) {\n-            return result.clone();\n+        if let Some(&result) = self.cache.get(&t) {\n+            return Ok(result);\n         }\n         debug!(\"generalize: t={:?}\", t);\n \n@@ -664,10 +664,10 @@ impl<'tcx> TypeRelation<'tcx> for Generalizer<'_, 'tcx> {\n                 Ok(t)\n             }\n             _ => relate::super_relate_tys(self, t, t),\n-        };\n+        }?;\n \n-        self.cache.insert(t, result.clone());\n-        return result;\n+        self.cache.insert(t, result);\n+        Ok(result)\n     }\n \n     fn regions("}]}