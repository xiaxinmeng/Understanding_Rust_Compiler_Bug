{"sha": "f25f4687093c1c7e69a06fa7fa6cc3cc6f9aa9d1", "node_id": "MDY6Q29tbWl0NzI0NzEyOmYyNWY0Njg3MDkzYzFjN2U2OWEwNmZhN2ZhNmNjM2NjNmY5YWE5ZDE=", "commit": {"author": {"name": "Taylor Cramer", "email": "cramertj@google.com", "date": "2018-01-16T16:51:24Z"}, "committer": {"name": "Taylor Cramer", "email": "cramertj@google.com", "date": "2018-01-16T16:51:24Z"}, "message": "Adjust wording of Placer trait safety requirements", "tree": {"sha": "189ab165ca59a5051af91225a2e7897d8f5e174f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/189ab165ca59a5051af91225a2e7897d8f5e174f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f25f4687093c1c7e69a06fa7fa6cc3cc6f9aa9d1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f25f4687093c1c7e69a06fa7fa6cc3cc6f9aa9d1", "html_url": "https://github.com/rust-lang/rust/commit/f25f4687093c1c7e69a06fa7fa6cc3cc6f9aa9d1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f25f4687093c1c7e69a06fa7fa6cc3cc6f9aa9d1/comments", "author": {"login": "cramertj", "id": 5963049, "node_id": "MDQ6VXNlcjU5NjMwNDk=", "avatar_url": "https://avatars.githubusercontent.com/u/5963049?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cramertj", "html_url": "https://github.com/cramertj", "followers_url": "https://api.github.com/users/cramertj/followers", "following_url": "https://api.github.com/users/cramertj/following{/other_user}", "gists_url": "https://api.github.com/users/cramertj/gists{/gist_id}", "starred_url": "https://api.github.com/users/cramertj/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cramertj/subscriptions", "organizations_url": "https://api.github.com/users/cramertj/orgs", "repos_url": "https://api.github.com/users/cramertj/repos", "events_url": "https://api.github.com/users/cramertj/events{/privacy}", "received_events_url": "https://api.github.com/users/cramertj/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cramertj", "id": 5963049, "node_id": "MDQ6VXNlcjU5NjMwNDk=", "avatar_url": "https://avatars.githubusercontent.com/u/5963049?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cramertj", "html_url": "https://github.com/cramertj", "followers_url": "https://api.github.com/users/cramertj/followers", "following_url": "https://api.github.com/users/cramertj/following{/other_user}", "gists_url": "https://api.github.com/users/cramertj/gists{/gist_id}", "starred_url": "https://api.github.com/users/cramertj/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cramertj/subscriptions", "organizations_url": "https://api.github.com/users/cramertj/orgs", "repos_url": "https://api.github.com/users/cramertj/repos", "events_url": "https://api.github.com/users/cramertj/events{/privacy}", "received_events_url": "https://api.github.com/users/cramertj/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "25574e58b68dae94f7d9931b5e648a327a94ecd1", "url": "https://api.github.com/repos/rust-lang/rust/commits/25574e58b68dae94f7d9931b5e648a327a94ecd1", "html_url": "https://github.com/rust-lang/rust/commit/25574e58b68dae94f7d9931b5e648a327a94ecd1"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "b3dcf4e7ee9578c9e5155d563d332d10fe19e9ff", "filename": "src/libcore/ops/place.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f25f4687093c1c7e69a06fa7fa6cc3cc6f9aa9d1/src%2Flibcore%2Fops%2Fplace.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f25f4687093c1c7e69a06fa7fa6cc3cc6f9aa9d1/src%2Flibcore%2Fops%2Fplace.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fops%2Fplace.rs?ref=f25f4687093c1c7e69a06fa7fa6cc3cc6f9aa9d1", "patch": "@@ -32,8 +32,8 @@ pub unsafe trait Place<Data: ?Sized> {\n     /// Note that the data at this address is generally uninitialized,\n     /// and thus one should use `ptr::write` for initializing it.\n     ///\n-    /// This function must return a valid (non-zero) pointer to\n-    /// a location at which a value of type `Data` can be written.\n+    /// This function must return a pointer through which a value\n+    /// of type `Data` can be written.\n     fn pointer(&mut self) -> *mut Data;\n }\n "}]}