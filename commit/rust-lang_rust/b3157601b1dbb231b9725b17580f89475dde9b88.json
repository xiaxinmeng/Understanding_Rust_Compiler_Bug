{"sha": "b3157601b1dbb231b9725b17580f89475dde9b88", "node_id": "MDY6Q29tbWl0NzI0NzEyOmIzMTU3NjAxYjFkYmIyMzFiOTcyNWIxNzU4MGY4OTQ3NWRkZTliODg=", "commit": {"author": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2018-09-29T19:37:12Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2018-09-29T21:29:05Z"}, "message": "Rename sanitizer runtime libraries on OSX\n\nCurrently we ship sanitizer libraries as they're built, but these names\nunfortunately conflict with the names of the sanitizer libraries\ninstalled on the system. If a crate, for example, links in C code that\nwants to use the system sanitizer and the Rust code doesn't use\nsanitizers at all, then using `cargo` may accidentally pull in the\nRust-installed sanitizer library due to a conflict in names.\n\nThis change is intended to be entirely transparent for Rust users of\nsanitizers, it should only hopefully improve our story with other users!\n\nCloses #54134", "tree": {"sha": "589736d658acb3a8d82bb5cb0ee78f415ad3edc4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/589736d658acb3a8d82bb5cb0ee78f415ad3edc4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b3157601b1dbb231b9725b17580f89475dde9b88", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b3157601b1dbb231b9725b17580f89475dde9b88", "html_url": "https://github.com/rust-lang/rust/commit/b3157601b1dbb231b9725b17580f89475dde9b88", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b3157601b1dbb231b9725b17580f89475dde9b88/comments", "author": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9653f790333d1270f36f1614e85d8a7b54193e75", "url": "https://api.github.com/repos/rust-lang/rust/commits/9653f790333d1270f36f1614e85d8a7b54193e75", "html_url": "https://github.com/rust-lang/rust/commit/9653f790333d1270f36f1614e85d8a7b54193e75"}], "stats": {"total": 41, "additions": 37, "deletions": 4}, "files": [{"sha": "7d235743c2c46834fc3a8ebfaabfa5f719b081be", "filename": "src/bootstrap/compile.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b3157601b1dbb231b9725b17580f89475dde9b88/src%2Fbootstrap%2Fcompile.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b3157601b1dbb231b9725b17580f89475dde9b88/src%2Fbootstrap%2Fcompile.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fcompile.rs?ref=b3157601b1dbb231b9725b17580f89475dde9b88", "patch": "@@ -249,7 +249,7 @@ impl Step for StdLink {\n \n fn copy_apple_sanitizer_dylibs(builder: &Builder, native_dir: &Path, platform: &str, into: &Path) {\n     for &sanitizer in &[\"asan\", \"tsan\"] {\n-        let filename = format!(\"libclang_rt.{}_{}_dynamic.dylib\", sanitizer, platform);\n+        let filename = format!(\"lib__rustc__clang_rt.{}_{}_dynamic.dylib\", sanitizer, platform);\n         let mut src_path = native_dir.join(sanitizer);\n         src_path.push(\"build\");\n         src_path.push(\"lib\");"}, {"sha": "ec94f57861dbeb1efce4a827795c0dfb954f73d9", "filename": "src/build_helper/lib.rs", "status": "modified", "additions": 34, "deletions": 3, "changes": 37, "blob_url": "https://github.com/rust-lang/rust/blob/b3157601b1dbb231b9725b17580f89475dde9b88/src%2Fbuild_helper%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b3157601b1dbb231b9725b17580f89475dde9b88/src%2Fbuild_helper%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbuild_helper%2Flib.rs?ref=b3157601b1dbb231b9725b17580f89475dde9b88", "patch": "@@ -178,6 +178,37 @@ pub struct NativeLibBoilerplate {\n     pub out_dir: PathBuf,\n }\n \n+impl NativeLibBoilerplate {\n+    /// On OSX we don't want to ship the exact filename that compiler-rt builds.\n+    /// This conflicts with the system and ours is likely a wildly different\n+    /// version, so they can't be substituted.\n+    ///\n+    /// As a result, we rename it here but we need to also use\n+    /// `install_name_tool` on OSX to rename the commands listed inside of it to\n+    /// ensure it's linked against correctly.\n+    pub fn fixup_sanitizer_lib_name(&self, sanitizer_name: &str) {\n+        if env::var(\"TARGET\").unwrap() != \"x86_64-apple-darwin\" {\n+            return\n+        }\n+\n+        let dir = self.out_dir.join(\"build/lib/darwin\");\n+        let name = format!(\"clang_rt.{}_osx_dynamic\", sanitizer_name);\n+        let src = dir.join(&format!(\"lib{}.dylib\", name));\n+        let new_name = format!(\"lib__rustc__{}.dylib\", name);\n+        let dst = dir.join(&new_name);\n+\n+        println!(\"{} => {}\", src.display(), dst.display());\n+        fs::rename(&src, &dst).unwrap();\n+        let status = Command::new(\"install_name_tool\")\n+            .arg(\"-id\")\n+            .arg(format!(\"@rpath/{}\", new_name))\n+            .arg(&dst)\n+            .status()\n+            .expect(\"failed to execute `install_name_tool`\");\n+        assert!(status.success());\n+    }\n+}\n+\n impl Drop for NativeLibBoilerplate {\n     fn drop(&mut self) {\n         if !thread::panicking() {\n@@ -229,7 +260,7 @@ pub fn native_lib_boilerplate(\n pub fn sanitizer_lib_boilerplate(sanitizer_name: &str)\n     -> Result<(NativeLibBoilerplate, String), ()>\n {\n-    let (link_name, search_path, dynamic) = match &*env::var(\"TARGET\").unwrap() {\n+    let (link_name, search_path, apple) = match &*env::var(\"TARGET\").unwrap() {\n         \"x86_64-unknown-linux-gnu\" => (\n             format!(\"clang_rt.{}-x86_64\", sanitizer_name),\n             \"build/lib/linux\",\n@@ -242,8 +273,8 @@ pub fn sanitizer_lib_boilerplate(sanitizer_name: &str)\n         ),\n         _ => return Err(()),\n     };\n-    let to_link = if dynamic {\n-        format!(\"dylib={}\", link_name)\n+    let to_link = if apple {\n+        format!(\"dylib=__rustc__{}\", link_name)\n     } else {\n         format!(\"static={}\", link_name)\n     };"}, {"sha": "a5905df57c8cfd62f9624adb2bc030ab39d76cd6", "filename": "src/librustc_asan/build.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b3157601b1dbb231b9725b17580f89475dde9b88/src%2Flibrustc_asan%2Fbuild.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b3157601b1dbb231b9725b17580f89475dde9b88/src%2Flibrustc_asan%2Fbuild.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_asan%2Fbuild.rs?ref=b3157601b1dbb231b9725b17580f89475dde9b88", "patch": "@@ -31,6 +31,7 @@ fn main() {\n             .out_dir(&native.out_dir)\n             .build_target(&target)\n             .build();\n+        native.fixup_sanitizer_lib_name(\"asan\");\n     }\n     println!(\"cargo:rerun-if-env-changed=LLVM_CONFIG\");\n }"}, {"sha": "d23c71e2c1286cf9fdecf0eff3948e2a9fa70dc4", "filename": "src/librustc_tsan/build.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b3157601b1dbb231b9725b17580f89475dde9b88/src%2Flibrustc_tsan%2Fbuild.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b3157601b1dbb231b9725b17580f89475dde9b88/src%2Flibrustc_tsan%2Fbuild.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_tsan%2Fbuild.rs?ref=b3157601b1dbb231b9725b17580f89475dde9b88", "patch": "@@ -31,6 +31,7 @@ fn main() {\n             .out_dir(&native.out_dir)\n             .build_target(&target)\n             .build();\n+        native.fixup_sanitizer_lib_name(\"tsan\");\n     }\n     println!(\"cargo:rerun-if-env-changed=LLVM_CONFIG\");\n }"}]}