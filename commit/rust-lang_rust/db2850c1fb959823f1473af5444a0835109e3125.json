{"sha": "db2850c1fb959823f1473af5444a0835109e3125", "node_id": "C_kwDOAAsO6NoAKGRiMjg1MGMxZmI5NTk4MjNmMTQ3M2FmNTQ0NGEwODM1MTA5ZTMxMjU", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2022-11-28T16:25:49Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-11-28T16:25:49Z"}, "message": "Rollup merge of #104956 - mucinoab:issue-104870, r=compiler-errors\n\nAvoid ICE if the Clone trait is not found while building error suggestions\n\nFixes #104870\n\nr? `@compiler-errors`", "tree": {"sha": "d342af718a7a401f4332784b4142e2afa220921e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d342af718a7a401f4332784b4142e2afa220921e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/db2850c1fb959823f1473af5444a0835109e3125", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJjhOENCRBK7hj4Ov3rIwAADfQIAGaHO1cK+pWORcu/km/trcBI\na6xIJkjnmS1j4gJVmawvzevwuNqpftpe7Qi0kQjMPaeGSBdGPB5Wpe7WV4aIqF/L\nI6V491BWTn4B2vvZAfMwwu9qNrzo5bUXbzQV/qF7pEzE3KKa/5EAgCAzsl2welTt\nqiCPTRDG6OG4/gQvFyi0Bxn/nhO7V15BY4/fj1eBuUosolRb/tSYjLS4gdas26yM\n3n9Odgs378FHfNXrei+Qogu5iAzk9NnIE8XTRubx+OuBZvrYVplz3RQwbWbo17ZE\nUlCRE+2b6iJiVwmvyQwa5240iqHb5VxNnQEKfnKnbxwc+Mv+s5PnpLV6Hz+phGw=\n=fXbE\n-----END PGP SIGNATURE-----\n", "payload": "tree d342af718a7a401f4332784b4142e2afa220921e\nparent 412f05c9e8f0b619300b061b1affc963020f8c98\nparent 7a378dd0fb2b383be75722666d8a3c761882af15\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1669652749 +0100\ncommitter GitHub <noreply@github.com> 1669652749 +0100\n\nRollup merge of #104956 - mucinoab:issue-104870, r=compiler-errors\n\nAvoid ICE if the Clone trait is not found while building error suggestions\n\nFixes #104870\n\nr? `@compiler-errors`\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/db2850c1fb959823f1473af5444a0835109e3125", "html_url": "https://github.com/rust-lang/rust/commit/db2850c1fb959823f1473af5444a0835109e3125", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/db2850c1fb959823f1473af5444a0835109e3125/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "412f05c9e8f0b619300b061b1affc963020f8c98", "url": "https://api.github.com/repos/rust-lang/rust/commits/412f05c9e8f0b619300b061b1affc963020f8c98", "html_url": "https://github.com/rust-lang/rust/commit/412f05c9e8f0b619300b061b1affc963020f8c98"}, {"sha": "7a378dd0fb2b383be75722666d8a3c761882af15", "url": "https://api.github.com/repos/rust-lang/rust/commits/7a378dd0fb2b383be75722666d8a3c761882af15", "html_url": "https://github.com/rust-lang/rust/commit/7a378dd0fb2b383be75722666d8a3c761882af15"}], "stats": {"total": 57, "additions": 50, "deletions": 7}, "files": [{"sha": "d221da5c17ed0bd31d20d107933e548b89df2744", "filename": "compiler/rustc_borrowck/src/diagnostics/conflict_errors.rs", "status": "modified", "additions": 9, "deletions": 7, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/db2850c1fb959823f1473af5444a0835109e3125/compiler%2Frustc_borrowck%2Fsrc%2Fdiagnostics%2Fconflict_errors.rs", "raw_url": "https://github.com/rust-lang/rust/raw/db2850c1fb959823f1473af5444a0835109e3125/compiler%2Frustc_borrowck%2Fsrc%2Fdiagnostics%2Fconflict_errors.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_borrowck%2Fsrc%2Fdiagnostics%2Fconflict_errors.rs?ref=db2850c1fb959823f1473af5444a0835109e3125", "patch": "@@ -732,13 +732,15 @@ impl<'cx, 'tcx> MirBorrowckCtxt<'cx, 'tcx> {\n         let tcx = self.infcx.tcx;\n         // Try to find predicates on *generic params* that would allow copying `ty`\n         let infcx = tcx.infer_ctxt().build();\n-        if infcx\n-            .type_implements_trait(\n-                tcx.lang_items().clone_trait().unwrap(),\n-                [tcx.erase_regions(ty)],\n-                self.param_env,\n-            )\n-            .must_apply_modulo_regions()\n+\n+        if let Some(clone_trait_def) = tcx.lang_items().clone_trait()\n+            && infcx\n+                .type_implements_trait(\n+                    clone_trait_def,\n+                    [tcx.erase_regions(ty)],\n+                    self.param_env,\n+                )\n+                .must_apply_modulo_regions()\n         {\n             err.span_suggestion_verbose(\n                 span.shrink_to_hi(),"}, {"sha": "e8290c0098afd80781bae68a67fa906dbaabc0d9", "filename": "src/test/ui/lang-items/missing-clone-for-suggestion.rs", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/db2850c1fb959823f1473af5444a0835109e3125/src%2Ftest%2Fui%2Flang-items%2Fmissing-clone-for-suggestion.rs", "raw_url": "https://github.com/rust-lang/rust/raw/db2850c1fb959823f1473af5444a0835109e3125/src%2Ftest%2Fui%2Flang-items%2Fmissing-clone-for-suggestion.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flang-items%2Fmissing-clone-for-suggestion.rs?ref=db2850c1fb959823f1473af5444a0835109e3125", "patch": "@@ -0,0 +1,20 @@\n+// Avoid panicking if the Clone trait is not found while building error suggestions\n+// See #104870\n+\n+#![feature(no_core, lang_items)]\n+#![no_core]\n+\n+#[lang = \"sized\"]\n+trait Sized {}\n+\n+#[lang = \"copy\"]\n+trait Copy {}\n+\n+fn g<T>(x: T) {}\n+\n+fn f(x: *mut u8) {\n+    g(x);\n+    g(x); //~ ERROR use of moved value: `x`\n+}\n+\n+fn main() {}"}, {"sha": "35783a1be78ade83d3cb65d2104cc5e032cf0861", "filename": "src/test/ui/lang-items/missing-clone-for-suggestion.stderr", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/db2850c1fb959823f1473af5444a0835109e3125/src%2Ftest%2Fui%2Flang-items%2Fmissing-clone-for-suggestion.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/db2850c1fb959823f1473af5444a0835109e3125/src%2Ftest%2Fui%2Flang-items%2Fmissing-clone-for-suggestion.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flang-items%2Fmissing-clone-for-suggestion.stderr?ref=db2850c1fb959823f1473af5444a0835109e3125", "patch": "@@ -0,0 +1,21 @@\n+error[E0382]: use of moved value: `x`\n+  --> $DIR/missing-clone-for-suggestion.rs:17:7\n+   |\n+LL | fn f(x: *mut u8) {\n+   |      - move occurs because `x` has type `*mut u8`, which does not implement the `Copy` trait\n+LL |     g(x);\n+   |       - value moved here\n+LL |     g(x);\n+   |       ^ value used here after move\n+   |\n+note: consider changing this parameter type in function `g` to borrow instead if owning the value isn't necessary\n+  --> $DIR/missing-clone-for-suggestion.rs:13:12\n+   |\n+LL | fn g<T>(x: T) {}\n+   |    -       ^ this parameter takes ownership of the value\n+   |    |\n+   |    in this function\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0382`."}]}