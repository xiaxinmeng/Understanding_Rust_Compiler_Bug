{"sha": "d049be30cf3f53ecba2bde4ad5c832866965eb0a", "node_id": "C_kwDOAAsO6NoAKGQwNDliZTMwY2YzZjUzZWNiYTJiZGU0YWQ1YzgzMjg2Njk2NWViMGE", "commit": {"author": {"name": "Nicholas Nethercote", "email": "n.nethercote@gmail.com", "date": "2022-12-07T03:58:48Z"}, "committer": {"name": "Nicholas Nethercote", "email": "n.nethercote@gmail.com", "date": "2022-12-07T08:29:31Z"}, "message": "Split `EarlyContextAndPasses::check_id` in two.", "tree": {"sha": "98f814b77d4d55672aba2c6e806c49b709ba0049", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/98f814b77d4d55672aba2c6e806c49b709ba0049"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d049be30cf3f53ecba2bde4ad5c832866965eb0a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d049be30cf3f53ecba2bde4ad5c832866965eb0a", "html_url": "https://github.com/rust-lang/rust/commit/d049be30cf3f53ecba2bde4ad5c832866965eb0a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d049be30cf3f53ecba2bde4ad5c832866965eb0a/comments", "author": {"login": "nnethercote", "id": 1940286, "node_id": "MDQ6VXNlcjE5NDAyODY=", "avatar_url": "https://avatars.githubusercontent.com/u/1940286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nnethercote", "html_url": "https://github.com/nnethercote", "followers_url": "https://api.github.com/users/nnethercote/followers", "following_url": "https://api.github.com/users/nnethercote/following{/other_user}", "gists_url": "https://api.github.com/users/nnethercote/gists{/gist_id}", "starred_url": "https://api.github.com/users/nnethercote/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nnethercote/subscriptions", "organizations_url": "https://api.github.com/users/nnethercote/orgs", "repos_url": "https://api.github.com/users/nnethercote/repos", "events_url": "https://api.github.com/users/nnethercote/events{/privacy}", "received_events_url": "https://api.github.com/users/nnethercote/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nnethercote", "id": 1940286, "node_id": "MDQ6VXNlcjE5NDAyODY=", "avatar_url": "https://avatars.githubusercontent.com/u/1940286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nnethercote", "html_url": "https://github.com/nnethercote", "followers_url": "https://api.github.com/users/nnethercote/followers", "following_url": "https://api.github.com/users/nnethercote/following{/other_user}", "gists_url": "https://api.github.com/users/nnethercote/gists{/gist_id}", "starred_url": "https://api.github.com/users/nnethercote/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nnethercote/subscriptions", "organizations_url": "https://api.github.com/users/nnethercote/orgs", "repos_url": "https://api.github.com/users/nnethercote/repos", "events_url": "https://api.github.com/users/nnethercote/events{/privacy}", "received_events_url": "https://api.github.com/users/nnethercote/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b08fd6e8efec854d6a9c1a1486f04f8933e30795", "url": "https://api.github.com/repos/rust-lang/rust/commits/b08fd6e8efec854d6a9c1a1486f04f8933e30795", "html_url": "https://github.com/rust-lang/rust/commit/b08fd6e8efec854d6a9c1a1486f04f8933e30795"}], "stats": {"total": 11, "additions": 9, "deletions": 2}, "files": [{"sha": "5d81370c35acfc71bf1d06cc5e65dbaa0e952dcc", "filename": "compiler/rustc_lint/src/early.rs", "status": "modified", "additions": 9, "deletions": 2, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/d049be30cf3f53ecba2bde4ad5c832866965eb0a/compiler%2Frustc_lint%2Fsrc%2Fearly.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d049be30cf3f53ecba2bde4ad5c832866965eb0a/compiler%2Frustc_lint%2Fsrc%2Fearly.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_lint%2Fsrc%2Fearly.rs?ref=d049be30cf3f53ecba2bde4ad5c832866965eb0a", "patch": "@@ -37,7 +37,9 @@ pub struct EarlyContextAndPasses<'a> {\n }\n \n impl<'a> EarlyContextAndPasses<'a> {\n-    fn check_id(&mut self, id: ast::NodeId) {\n+    // This always-inlined function is for the hot call site.\n+    #[inline(always)]\n+    fn inlined_check_id(&mut self, id: ast::NodeId) {\n         for early_lint in self.context.buffered.take(id) {\n             let BufferedEarlyLint { span, msg, node_id: _, lint_id, diagnostic } = early_lint;\n             self.context.lookup_with_diagnostics(\n@@ -50,6 +52,11 @@ impl<'a> EarlyContextAndPasses<'a> {\n         }\n     }\n \n+    // This non-inlined function is for the cold call sites.\n+    fn check_id(&mut self, id: ast::NodeId) {\n+        self.inlined_check_id(id)\n+    }\n+\n     /// Merge the lints specified by any lint attributes into the\n     /// current lint context, call the provided function, then reset the\n     /// lints in effect to their previous state.\n@@ -61,7 +68,7 @@ impl<'a> EarlyContextAndPasses<'a> {\n         debug!(?id);\n         let push = self.context.builder.push(attrs, is_crate_node, None);\n \n-        self.check_id(id);\n+        self.inlined_check_id(id);\n         debug!(\"early context: enter_attrs({:?})\", attrs);\n         run_early_passes!(self, enter_lint_attrs, attrs);\n         f(self);"}]}