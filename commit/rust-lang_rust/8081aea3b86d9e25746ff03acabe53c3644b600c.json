{"sha": "8081aea3b86d9e25746ff03acabe53c3644b600c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjgwODFhZWEzYjg2ZDllMjU3NDZmZjAzYWNhYmU1M2MzNjQ0YjYwMGM=", "commit": {"author": {"name": "Ben Blum", "email": "bblum@andrew.cmu.edu", "date": "2013-06-10T22:18:04Z"}, "committer": {"name": "Ben Blum", "email": "bblum@andrew.cmu.edu", "date": "2013-06-10T22:18:04Z"}, "message": "Tag a bunch of destructors that need mutable self with FIXME for #4330. Close #4943.", "tree": {"sha": "bd703fd655cd002528a0d6da6dbd5968b9bc1936", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bd703fd655cd002528a0d6da6dbd5968b9bc1936"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8081aea3b86d9e25746ff03acabe53c3644b600c", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8081aea3b86d9e25746ff03acabe53c3644b600c", "html_url": "https://github.com/rust-lang/rust/commit/8081aea3b86d9e25746ff03acabe53c3644b600c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8081aea3b86d9e25746ff03acabe53c3644b600c/comments", "author": {"login": "bblum", "id": 1820515, "node_id": "MDQ6VXNlcjE4MjA1MTU=", "avatar_url": "https://avatars.githubusercontent.com/u/1820515?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bblum", "html_url": "https://github.com/bblum", "followers_url": "https://api.github.com/users/bblum/followers", "following_url": "https://api.github.com/users/bblum/following{/other_user}", "gists_url": "https://api.github.com/users/bblum/gists{/gist_id}", "starred_url": "https://api.github.com/users/bblum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bblum/subscriptions", "organizations_url": "https://api.github.com/users/bblum/orgs", "repos_url": "https://api.github.com/users/bblum/repos", "events_url": "https://api.github.com/users/bblum/events{/privacy}", "received_events_url": "https://api.github.com/users/bblum/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bblum", "id": 1820515, "node_id": "MDQ6VXNlcjE4MjA1MTU=", "avatar_url": "https://avatars.githubusercontent.com/u/1820515?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bblum", "html_url": "https://github.com/bblum", "followers_url": "https://api.github.com/users/bblum/followers", "following_url": "https://api.github.com/users/bblum/following{/other_user}", "gists_url": "https://api.github.com/users/bblum/gists{/gist_id}", "starred_url": "https://api.github.com/users/bblum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bblum/subscriptions", "organizations_url": "https://api.github.com/users/bblum/orgs", "repos_url": "https://api.github.com/users/bblum/repos", "events_url": "https://api.github.com/users/bblum/events{/privacy}", "received_events_url": "https://api.github.com/users/bblum/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d25fae0e10d92d7329211170a5b38b104a5093f0", "url": "https://api.github.com/repos/rust-lang/rust/commits/d25fae0e10d92d7329211170a5b38b104a5093f0", "html_url": "https://github.com/rust-lang/rust/commit/d25fae0e10d92d7329211170a5b38b104a5093f0"}], "stats": {"total": 7, "additions": 5, "deletions": 2}, "files": [{"sha": "012ad0ed80d269d6bb36262469a3a0826f9018d1", "filename": "src/libstd/pipes.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/8081aea3b86d9e25746ff03acabe53c3644b600c/src%2Flibstd%2Fpipes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8081aea3b86d9e25746ff03acabe53c3644b600c/src%2Flibstd%2Fpipes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fpipes.rs?ref=8081aea3b86d9e25746ff03acabe53c3644b600c", "patch": "@@ -315,6 +315,7 @@ struct BufferResource<T> {\n impl<T> Drop for BufferResource<T> {\n     fn finalize(&self) {\n         unsafe {\n+            // FIXME(#4330) Need self by value to get mutability.\n             let this: &mut BufferResource<T> = transmute(self);\n \n             let mut b = move_it!(this.buffer);"}, {"sha": "2977d081508122690c3449b197860c4b6ade7273", "filename": "src/libstd/rt/rc.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8081aea3b86d9e25746ff03acabe53c3644b600c/src%2Flibstd%2Frt%2Frc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8081aea3b86d9e25746ff03acabe53c3644b600c/src%2Flibstd%2Frt%2Frc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Frt%2Frc.rs?ref=8081aea3b86d9e25746ff03acabe53c3644b600c", "patch": "@@ -78,7 +78,7 @@ impl<T> Drop for RC<T> {\n         assert!(self.refcount() > 0);\n \n         unsafe {\n-            // XXX: Mutable finalizer\n+            // FIXME(#4330) Need self by value to get mutability.\n             let this: &mut RC<T> = cast::transmute_mut(self);\n \n             match *this.get_mut_state() {"}, {"sha": "85015c9bc5e41f511f8859c7469cdf30a0aec35d", "filename": "src/libstd/run.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8081aea3b86d9e25746ff03acabe53c3644b600c/src%2Flibstd%2Frun.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8081aea3b86d9e25746ff03acabe53c3644b600c/src%2Flibstd%2Frun.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Frun.rs?ref=8081aea3b86d9e25746ff03acabe53c3644b600c", "patch": "@@ -429,7 +429,7 @@ impl Process {\n \n impl Drop for Process {\n     fn finalize(&self) {\n-        // FIXME #4943: transmute is bad.\n+        // FIXME(#4330) Need self by value to get mutability.\n         let mut_self: &mut Process = unsafe { cast::transmute(self) };\n \n         mut_self.finish();"}, {"sha": "bc409e066330b69a5bfc0177232887f4f3cdacb7", "filename": "src/libstd/task/spawn.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/8081aea3b86d9e25746ff03acabe53c3644b600c/src%2Flibstd%2Ftask%2Fspawn.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8081aea3b86d9e25746ff03acabe53c3644b600c/src%2Flibstd%2Ftask%2Fspawn.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Ftask%2Fspawn.rs?ref=8081aea3b86d9e25746ff03acabe53c3644b600c", "patch": "@@ -323,6 +323,7 @@ impl Drop for TCB {\n     // Runs on task exit.\n     fn finalize(&self) {\n         unsafe {\n+            // FIXME(#4330) Need self by value to get mutability.\n             let this: &mut TCB = transmute(self);\n \n             // If we are failing, the whole taskgroup needs to die."}, {"sha": "856f4e6e3c196163a4abafe80538730075affde0", "filename": "src/libstd/unstable/atomics.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/8081aea3b86d9e25746ff03acabe53c3644b600c/src%2Flibstd%2Funstable%2Fatomics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8081aea3b86d9e25746ff03acabe53c3644b600c/src%2Flibstd%2Funstable%2Fatomics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Funstable%2Fatomics.rs?ref=8081aea3b86d9e25746ff03acabe53c3644b600c", "patch": "@@ -275,6 +275,7 @@ impl<T> Drop for AtomicOption<T> {\n         // This will ensure that the contained data is\n         // destroyed, unless it's null.\n         unsafe {\n+            // FIXME(#4330) Need self by value to get mutability.\n             let this : &mut AtomicOption<T> = cast::transmute(self);\n             let _ = this.take(SeqCst);\n         }"}]}