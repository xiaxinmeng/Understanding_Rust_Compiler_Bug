{"sha": "1007739b20110bf7af654354815e2a1265282ec2", "node_id": "MDY6Q29tbWl0NzI0NzEyOjEwMDc3MzliMjAxMTBiZjdhZjY1NDM1NDgxNWUyYTEyNjUyODJlYzI=", "commit": {"author": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2014-07-01T05:52:48Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2014-07-05T19:38:42Z"}, "message": "rustc: Add a new codegen flag, -C metadata=foo\n\nThis metadata is used to drive the hash of all symbols in a crate. The flag can\nbe specified a multiple number of times\n\nRFC: 0035-remove-crate-id", "tree": {"sha": "ad12a9f1df6e9ddb040e2378e6b3b01a09020d28", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ad12a9f1df6e9ddb040e2378e6b3b01a09020d28"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1007739b20110bf7af654354815e2a1265282ec2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1007739b20110bf7af654354815e2a1265282ec2", "html_url": "https://github.com/rust-lang/rust/commit/1007739b20110bf7af654354815e2a1265282ec2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1007739b20110bf7af654354815e2a1265282ec2/comments", "author": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "50ee1ec1b4f107122d8037ac7b0b312afa6eb0ac", "url": "https://api.github.com/repos/rust-lang/rust/commits/50ee1ec1b4f107122d8037ac7b0b312afa6eb0ac", "html_url": "https://github.com/rust-lang/rust/commit/50ee1ec1b4f107122d8037ac7b0b312afa6eb0ac"}], "stats": {"total": 21, "additions": 20, "deletions": 1}, "files": [{"sha": "1145d0595ab3fbbaa775b3fbd9ab23472df229fd", "filename": "src/librustc/back/link.rs", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/1007739b20110bf7af654354815e2a1265282ec2/src%2Flibrustc%2Fback%2Flink.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1007739b20110bf7af654354815e2a1265282ec2/src%2Flibrustc%2Fback%2Flink.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fback%2Flink.rs?ref=1007739b20110bf7af654354815e2a1265282ec2", "patch": "@@ -593,7 +593,10 @@ pub fn crate_name_hash(sess: &Session, crate_name: &str) -> String {\n     // the crate id in the hash because lookups are only done by (name/vers),\n     // not by path.\n     let mut s = Sha256::new();\n-    s.input_str(crate_id.short_name_with_version().as_slice());\n+    s.input_str(crate_name);\n+    for meta in sess.crate_metadata.borrow().iter() {\n+        s.input_str(meta.as_slice());\n+    }\n     truncated_hash_result(&mut s).as_slice().slice_to(8).to_string()\n }\n \n@@ -626,6 +629,9 @@ fn symbol_hash(tcx: &ty::ctxt,\n     symbol_hasher.input_str(link_meta.crate_name.as_slice());\n     symbol_hasher.input_str(\"-\");\n     symbol_hasher.input_str(link_meta.crate_hash.as_str());\n+    for meta in tcx.sess.crate_metadata.borrow().iter() {\n+        symbol_hasher.input_str(meta.as_slice());\n+    }\n     symbol_hasher.input_str(\"-\");\n     symbol_hasher.input_str(encoder::encoded_ty(tcx, t).as_slice());\n     // Prefix with 'h' so that it never blends into adjacent digits"}, {"sha": "b35d1be98f305999caf84b27296b551838ed8fcf", "filename": "src/librustc/driver/config.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1007739b20110bf7af654354815e2a1265282ec2/src%2Flibrustc%2Fdriver%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1007739b20110bf7af654354815e2a1265282ec2/src%2Flibrustc%2Fdriver%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fdriver%2Fconfig.rs?ref=1007739b20110bf7af654354815e2a1265282ec2", "patch": "@@ -318,6 +318,8 @@ cgoptions!(\n         \"use an external assembler rather than LLVM's integrated one\"),\n     relocation_model: String = (\"pic\".to_string(), parse_string,\n          \"choose the relocation model to use (llc -relocation-model for details)\"),\n+    metadata: Vec<String> = (Vec::new(), parse_list,\n+         \"metadata to mangle symbol names with\"),\n )\n \n pub fn build_codegen_options(matches: &getopts::Matches) -> CodegenOptions"}, {"sha": "1512c359bb8e76bf89e86afce4ed94833e14b2fd", "filename": "src/librustc/driver/driver.rs", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/1007739b20110bf7af654354815e2a1265282ec2/src%2Flibrustc%2Fdriver%2Fdriver.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1007739b20110bf7af654354815e2a1265282ec2/src%2Flibrustc%2Fdriver%2Fdriver.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fdriver%2Fdriver.rs?ref=1007739b20110bf7af654354815e2a1265282ec2", "patch": "@@ -186,6 +186,8 @@ pub fn phase_2_configure_and_expand(sess: &Session,\n \n     *sess.crate_types.borrow_mut() =\n         collect_crate_types(sess, krate.attrs.as_slice());\n+    *sess.crate_metadata.borrow_mut() =\n+        collect_crate_metadata(sess, krate.attrs.as_slice());\n \n     time(time_passes, \"gated feature checking\", (), |_|\n          front::feature_gate::check_crate(sess, &krate));\n@@ -848,6 +850,11 @@ pub fn collect_crate_types(session: &Session,\n     }).collect()\n }\n \n+pub fn collect_crate_metadata(session: &Session,\n+                              _attrs: &[ast::Attribute]) -> Vec<String> {\n+    session.opts.cg.metadata.clone()\n+}\n+\n pub struct OutputFilenames {\n     pub out_directory: Path,\n     pub out_filestem: String,"}, {"sha": "dc6b8fa5af3d73862d479593a33d42ee41b74bb1", "filename": "src/librustc/driver/mod.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1007739b20110bf7af654354815e2a1265282ec2/src%2Flibrustc%2Fdriver%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1007739b20110bf7af654354815e2a1265282ec2/src%2Flibrustc%2Fdriver%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fdriver%2Fmod.rs?ref=1007739b20110bf7af654354815e2a1265282ec2", "patch": "@@ -311,6 +311,8 @@ fn print_crate_info(sess: &Session,\n         }\n         if crate_file_name {\n             let crate_types = driver::collect_crate_types(sess, attrs.as_slice());\n+            let metadata = driver::collect_crate_metadata(sess, attrs.as_slice());\n+            *sess.crate_metadata.borrow_mut() = metadata;\n             for &style in crate_types.iter() {\n                 let fname = link::filename_for_input(sess, style, id.as_slice(),\n                                                      &t_outputs.with_extension(\"\"));"}, {"sha": "50f61f8f06a5be795e5df197238e7ca01b473876", "filename": "src/librustc/driver/session.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1007739b20110bf7af654354815e2a1265282ec2/src%2Flibrustc%2Fdriver%2Fsession.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1007739b20110bf7af654354815e2a1265282ec2/src%2Flibrustc%2Fdriver%2Fsession.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fdriver%2Fsession.rs?ref=1007739b20110bf7af654354815e2a1265282ec2", "patch": "@@ -47,6 +47,7 @@ pub struct Session {\n     pub lints: RefCell<NodeMap<Vec<(lint::LintId, codemap::Span, String)>>>,\n     pub node_id: Cell<ast::NodeId>,\n     pub crate_types: RefCell<Vec<config::CrateType>>,\n+    pub crate_metadata: RefCell<Vec<String>>,\n     pub features: front::feature_gate::Features,\n \n     /// The maximum recursion limit for potentially infinitely recursive\n@@ -243,6 +244,7 @@ pub fn build_session_(sopts: config::Options,\n         lints: RefCell::new(NodeMap::new()),\n         node_id: Cell::new(1),\n         crate_types: RefCell::new(Vec::new()),\n+        crate_metadata: RefCell::new(Vec::new()),\n         features: front::feature_gate::Features::new(),\n         recursion_limit: Cell::new(64),\n     };"}]}