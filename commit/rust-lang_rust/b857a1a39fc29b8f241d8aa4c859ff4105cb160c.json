{"sha": "b857a1a39fc29b8f241d8aa4c859ff4105cb160c", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI4NTdhMWEzOWZjMjliOGYyNDFkOGFhNGM4NTlmZjQxMDVjYjE2MGM=", "commit": {"author": {"name": "Oliver Schneider", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2017-03-27T11:59:10Z"}, "committer": {"name": "Oliver Schneider", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2017-04-25T09:04:35Z"}, "message": "Update affected tests", "tree": {"sha": "8d8d435316f5213a682b3aecdffb9ef07aacc520", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8d8d435316f5213a682b3aecdffb9ef07aacc520"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b857a1a39fc29b8f241d8aa4c859ff4105cb160c", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEYFTdM4NKd7XQft77pp+NIls619kFAlj/ESMACgkQpp+NIls6\n19kgTA//Ylv1hOuKevftYRmoobs8sI0gqtGRLVbGkbZrfXOp4RgtMHFnlBonFtZG\nVKhJzJJRCt4oOAiQrnXfESpkBC7SNPGb4G8EKqrR0pFQrbv7YWAx4zaQppYBunsU\nuz/zYHky41nf4UIinvntGkX/QvXUH8c+8MVT9nUDArYWgeDIGO0rNm3pZ00Q9FkE\nfx0xI2mQyfb1ufuGjcuycCQyxlEH0zc1j1sqDfhcUz4tYsyGXrGfizo0rdkGbWJq\nd8J9L2vNptOn+XDhzVGhy6P+cp71NAtHVgIzOx6RX0QCrDnkTsrv3FkDnyXuxSFK\nggwzKH8sbif41l6ptcfPY3MucUmrGrmv8UYTqGuJxo2alRBK1aJgSzBH34+oSwSA\nok5iDhqskCRrhO8BFS+cjCm9EZMlRDNvOeBy6UZ8oYgishH7BxSDL9PPF5wohsHr\np6dpHAG9TqaUlVOdR4CAqrCbC2ZRSHpwb1PcFqoXKNidSpVPzsjPAtUS8yvI6z1c\nWGx86L8NXmtKnrc47mB5fclB6Ig3jDY41EHi+rzGZ7/kIuSma6NRJ5XddegY44tb\nKJqYhyAHh8+KG8rUV0XA5BZ0QXOUOO6r8J0HEuSwpqOxw3EotH/vT9Kktpwu/crK\nmZL4HboZwT3ZgHIGh3wBONBbC9e/yzl8i43XGWaR2D5BCETdzFg=\n=8AmL\n-----END PGP SIGNATURE-----", "payload": "tree 8d8d435316f5213a682b3aecdffb9ef07aacc520\nparent 0e920fde4f686e2924ea3378ac55d26217b53eaf\nauthor Oliver Schneider <git-spam-no-reply9815368754983@oli-obk.de> 1490615950 +0200\ncommitter Oliver Schneider <git-spam-no-reply9815368754983@oli-obk.de> 1493111075 +0200\n\nUpdate affected tests\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b857a1a39fc29b8f241d8aa4c859ff4105cb160c", "html_url": "https://github.com/rust-lang/rust/commit/b857a1a39fc29b8f241d8aa4c859ff4105cb160c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b857a1a39fc29b8f241d8aa4c859ff4105cb160c/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0e920fde4f686e2924ea3378ac55d26217b53eaf", "url": "https://api.github.com/repos/rust-lang/rust/commits/0e920fde4f686e2924ea3378ac55d26217b53eaf", "html_url": "https://github.com/rust-lang/rust/commit/0e920fde4f686e2924ea3378ac55d26217b53eaf"}], "stats": {"total": 54, "additions": 29, "deletions": 25}, "files": [{"sha": "53656d8c6c21035ccc8e034b609705b956341c12", "filename": "src/libsyntax/parse/parser.rs", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/b857a1a39fc29b8f241d8aa4c859ff4105cb160c/src%2Flibsyntax%2Fparse%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b857a1a39fc29b8f241d8aa4c859ff4105cb160c/src%2Flibsyntax%2Fparse%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fparser.rs?ref=b857a1a39fc29b8f241d8aa4c859ff4105cb160c", "patch": "@@ -5122,7 +5122,6 @@ impl<'a> Parser<'a> {\n         }\n \n         if self.check(&token::OpenDelim(token::Paren)) {\n-            let start_span = self.span;\n             // We don't `self.bump()` the `(` yet because this might be a struct definition where\n             // `()` or a tuple might be allowed. For example, `struct Struct(pub (), pub (usize));`.\n             // Because of this, we only `bump` the `(` if we're assured it is appropriate to do so\n@@ -5165,8 +5164,7 @@ impl<'a> Parser<'a> {\n                                        the path:\",\n                                        path);\n                 self.expect(&token::CloseDelim(token::Paren))?;  // `)`\n-                let sp = start_span.to(self.prev_span);\n-                let mut err = self.span_fatal_help(sp, &msg, &suggestion);\n+                let mut err = self.span_fatal_help(path_span, &msg, &suggestion);\n                 err.span_suggestion(path_span, &help_msg, format!(\"in {}\", path));\n                 err.emit();  // emit diagnostic, but continue with public visibility\n             }"}, {"sha": "f7cd4e03c3b11876519ce798f4e8d307fa83d0dc", "filename": "src/test/compile-fail/issue-27842.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b857a1a39fc29b8f241d8aa4c859ff4105cb160c/src%2Ftest%2Fcompile-fail%2Fissue-27842.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b857a1a39fc29b8f241d8aa4c859ff4105cb160c/src%2Ftest%2Fcompile-fail%2Fissue-27842.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-27842.rs?ref=b857a1a39fc29b8f241d8aa4c859ff4105cb160c", "patch": "@@ -13,7 +13,7 @@ fn main() {\n     // the case where we show a suggestion\n     let _ = tup[0];\n     //~^ ERROR cannot index a value of type\n-    //~| HELP to access tuple elements, use tuple indexing syntax as shown\n+    //~| HELP to access tuple elements, use\n     //~| SUGGESTION let _ = tup.0\n \n     // the case where we show just a general hint"}, {"sha": "934ad24c167796c076ace2e736be011e17949d1f", "filename": "src/test/ui/pub/pub-restricted.rs", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/b857a1a39fc29b8f241d8aa4c859ff4105cb160c/src%2Ftest%2Fui%2Fpub%2Fpub-restricted.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b857a1a39fc29b8f241d8aa4c859ff4105cb160c/src%2Ftest%2Fui%2Fpub%2Fpub-restricted.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fpub%2Fpub-restricted.rs?ref=b857a1a39fc29b8f241d8aa4c859ff4105cb160c", "patch": "@@ -34,4 +34,8 @@ mod y {\n     }\n }\n \n-fn main() {}\n\\ No newline at end of file\n+fn main() {}\n+\n+// test multichar names\n+mod xyz {}\n+pub (xyz) fn xyz() {}"}, {"sha": "7bee1791eab40654d2ca3fe7f333bdda363403be", "filename": "src/test/ui/pub/pub-restricted.stderr", "status": "modified", "additions": 18, "deletions": 13, "changes": 31, "blob_url": "https://github.com/rust-lang/rust/blob/b857a1a39fc29b8f241d8aa4c859ff4105cb160c/src%2Ftest%2Fui%2Fpub%2Fpub-restricted.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b857a1a39fc29b8f241d8aa4c859ff4105cb160c/src%2Ftest%2Fui%2Fpub%2Fpub-restricted.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fpub%2Fpub-restricted.stderr?ref=b857a1a39fc29b8f241d8aa4c859ff4105cb160c", "patch": "@@ -1,47 +1,52 @@\n error: incorrect visibility restriction\n-  --> $DIR/pub-restricted.rs:15:5\n+  --> $DIR/pub-restricted.rs:15:6\n    |\n 15 | pub (a) fn afn() {}\n-   |     ^^^\n+   |      ^ to make this visible only to module `a`, add `in` before the path: `in a`\n    |\n    = help: some possible visibility restrictions are:\n            `pub(crate)`: visible only on the current crate\n            `pub(super)`: visible only in the current module's parent\n            `pub(in path::to::module)`: visible only on the specified path\n-help: to make this visible only to module `a`, add `in` before the path:\n-   | pub (in a) fn afn() {}\n \n error: incorrect visibility restriction\n-  --> $DIR/pub-restricted.rs:16:5\n+  --> $DIR/pub-restricted.rs:16:6\n    |\n 16 | pub (b) fn bfn() {}\n-   |     ^^^\n+   |      ^ to make this visible only to module `b`, add `in` before the path: `in b`\n    |\n    = help: some possible visibility restrictions are:\n            `pub(crate)`: visible only on the current crate\n            `pub(super)`: visible only in the current module's parent\n            `pub(in path::to::module)`: visible only on the specified path\n-help: to make this visible only to module `b`, add `in` before the path:\n-   | pub (in b) fn bfn() {}\n \n error: incorrect visibility restriction\n-  --> $DIR/pub-restricted.rs:32:13\n+  --> $DIR/pub-restricted.rs:32:14\n    |\n 32 |         pub (a) invalid: usize,\n-   |             ^^^\n+   |              ^ to make this visible only to module `a`, add `in` before the path: `in a`\n+   |\n+   = help: some possible visibility restrictions are:\n+           `pub(crate)`: visible only on the current crate\n+           `pub(super)`: visible only in the current module's parent\n+           `pub(in path::to::module)`: visible only on the specified path\n+\n+error: incorrect visibility restriction\n+  --> $DIR/pub-restricted.rs:41:6\n+   |\n+41 | pub (xyz) fn xyz() {}\n+   |      ^^^ to make this visible only to module `xyz`, add `in` before the path: `in xyz`\n    |\n    = help: some possible visibility restrictions are:\n            `pub(crate)`: visible only on the current crate\n            `pub(super)`: visible only in the current module's parent\n            `pub(in path::to::module)`: visible only on the specified path\n-help: to make this visible only to module `a`, add `in` before the path:\n-   |         pub (in a) invalid: usize,\n \n error: visibilities can only be restricted to ancestor modules\n   --> $DIR/pub-restricted.rs:33:17\n    |\n 33 |         pub (in x) non_parent_invalid: usize,\n    |                 ^\n \n-error: aborting due to 4 previous errors\n+error: aborting due to 5 previous errors\n "}, {"sha": "46d39dac5aca718a5402b37e8bca3ccf5aed033e", "filename": "src/test/ui/span/issue-39018.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/b857a1a39fc29b8f241d8aa4c859ff4105cb160c/src%2Ftest%2Fui%2Fspan%2Fissue-39018.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b857a1a39fc29b8f241d8aa4c859ff4105cb160c/src%2Ftest%2Fui%2Fspan%2Fissue-39018.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspan%2Fissue-39018.stderr?ref=b857a1a39fc29b8f241d8aa4c859ff4105cb160c", "patch": "@@ -2,11 +2,11 @@ error[E0369]: binary operation `+` cannot be applied to type `&'static str`\n   --> $DIR/issue-39018.rs:12:13\n    |\n 12 |     let x = \"Hello \" + \"World!\";\n-   |             ^^^^^^^^\n+   |             ^^^^^^^^-----------\n+   |             |\n+   |             to_owned() can be used to create an owned `String` from a string reference. String concatenation appends the string on the right to the string on the left and may require reallocation. This requires ownership of the string on the left. `\"Hello \".to_owned() + \"World!\"`\n    |\n    = note: `+` can't be used to concatenate two `&str` strings\n-help: to_owned() can be used to create an owned `String` from a string reference. String concatenation appends the string on the right to the string on the left and may require reallocation. This requires ownership of the string on the left.\n-   |     let x = \"Hello \".to_owned() + \"World!\";\n \n error[E0369]: binary operation `+` cannot be applied to type `World`\n   --> $DIR/issue-39018.rs:17:13"}, {"sha": "7e0cf030d766ea2a6a75a3bd0ef1dbed7770c536", "filename": "src/test/ui/span/suggestion-non-ascii.stderr", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/b857a1a39fc29b8f241d8aa4c859ff4105cb160c/src%2Ftest%2Fui%2Fspan%2Fsuggestion-non-ascii.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b857a1a39fc29b8f241d8aa4c859ff4105cb160c/src%2Ftest%2Fui%2Fspan%2Fsuggestion-non-ascii.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspan%2Fsuggestion-non-ascii.stderr?ref=b857a1a39fc29b8f241d8aa4c859ff4105cb160c", "patch": "@@ -2,10 +2,7 @@ error: cannot index a value of type `({integer},)`\n   --> $DIR/suggestion-non-ascii.rs:14:21\n    |\n 14 |     println!(\"\u2603{}\", tup[0]);\n-   |                     ^^^^^^\n-   |\n-help: to access tuple elements, use tuple indexing syntax as shown\n-   |     println!(\"\u2603{}\", tup.0);\n+   |                     ^^^^^^ to access tuple elements, use `tup.0`\n \n error: aborting due to previous error\n "}]}