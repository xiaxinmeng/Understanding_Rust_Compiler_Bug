{"sha": "79982a2813c88e1426b17376b2a4b2bec352ee59", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc5OTgyYTI4MTNjODhlMTQyNmIxNzM3NmIyYTRiMmJlYzM1MmVlNTk=", "commit": {"author": {"name": "Philipp Hansch", "email": "dev@phansch.net", "date": "2020-04-10T21:18:03Z"}, "committer": {"name": "Philipp Hansch", "email": "dev@phansch.net", "date": "2020-04-12T11:58:04Z"}, "message": "Make use of some existing diagnostic items", "tree": {"sha": "0791e0b66cc89f6ab1564e8ee4a029c023e9c6b7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0791e0b66cc89f6ab1564e8ee4a029c023e9c6b7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/79982a2813c88e1426b17376b2a4b2bec352ee59", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE6VFioMHrom999LRAK0OZxL9Ny94FAl6TAlEACgkQK0OZxL9N\ny95T0Q/+L3l9go+2M9sN5+1e97Is8AZh3OzaOYmLt9WC7iQ65qv6/QJ/yYG6odBZ\nMEW3CuaMbEfa2twc7tVKiTDdjN97UFEC75AGHQNwitZjSbnNtMflB7OEKrlY3uXx\nL154QVVG/7uy8dmtLeVWwJmfJhr28W14eXJBksMcDrcEJOyxdZ0/eY5qiSx5EhLh\n5birD/VgWaMQTnvtlfN2bBsz/7DdJbJbQM+GFV7PQctR/rNqxG6MUVFQCUeWWzuA\n6gablr/1YJaW4rvRzp26SWN8r8SGNAzWEyiTwhfg6bwH8UWyleZzHDtIVzYDxwCi\np8kdTqOaW/bUIEOJeNygSq1f8LFwP0/gHtvIb9s0OhomYcklIy/F8+rxa6F7ARoD\ngRPCHtiGhswgfTig0aQH6G/mGH5jaM8ON460tjqQaPjUrGn0uZ8Krok3cQZPQrJ1\nwkpVEZ6ZvyyD8FqijaawKzQp8eOVycxy1MyDHbgG0owWu8TtiNS7ti7UJzibdngN\n6JRQq/AChKV1AWWG6mpUCrViqlvQYAQLCzC/8wJgJYS7VntMbgHN7Q2TCbviG+k7\nAlDR23/MR10pzAkgrWeKnhilDZdXztJ9hCcnfLSz9Bu7x534TIsBPovXH75qS9PV\nlhFPqs03stvoNqvbT1W2VNTeB0HNkqUv7rDk4BuoMeZfe7AUtLI=\n=/Hz/\n-----END PGP SIGNATURE-----", "payload": "tree 0791e0b66cc89f6ab1564e8ee4a029c023e9c6b7\nparent 1d1b6d886b26b76918d9b42079bf596f499a68b3\nauthor Philipp Hansch <dev@phansch.net> 1586553483 +0200\ncommitter Philipp Hansch <dev@phansch.net> 1586692684 +0200\n\nMake use of some existing diagnostic items\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/79982a2813c88e1426b17376b2a4b2bec352ee59", "html_url": "https://github.com/rust-lang/rust/commit/79982a2813c88e1426b17376b2a4b2bec352ee59", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/79982a2813c88e1426b17376b2a4b2bec352ee59/comments", "author": {"login": "phansch", "id": 2042399, "node_id": "MDQ6VXNlcjIwNDIzOTk=", "avatar_url": "https://avatars.githubusercontent.com/u/2042399?v=4", "gravatar_id": "", "url": "https://api.github.com/users/phansch", "html_url": "https://github.com/phansch", "followers_url": "https://api.github.com/users/phansch/followers", "following_url": "https://api.github.com/users/phansch/following{/other_user}", "gists_url": "https://api.github.com/users/phansch/gists{/gist_id}", "starred_url": "https://api.github.com/users/phansch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/phansch/subscriptions", "organizations_url": "https://api.github.com/users/phansch/orgs", "repos_url": "https://api.github.com/users/phansch/repos", "events_url": "https://api.github.com/users/phansch/events{/privacy}", "received_events_url": "https://api.github.com/users/phansch/received_events", "type": "User", "site_admin": false}, "committer": {"login": "phansch", "id": 2042399, "node_id": "MDQ6VXNlcjIwNDIzOTk=", "avatar_url": "https://avatars.githubusercontent.com/u/2042399?v=4", "gravatar_id": "", "url": "https://api.github.com/users/phansch", "html_url": "https://github.com/phansch", "followers_url": "https://api.github.com/users/phansch/followers", "following_url": "https://api.github.com/users/phansch/following{/other_user}", "gists_url": "https://api.github.com/users/phansch/gists{/gist_id}", "starred_url": "https://api.github.com/users/phansch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/phansch/subscriptions", "organizations_url": "https://api.github.com/users/phansch/orgs", "repos_url": "https://api.github.com/users/phansch/repos", "events_url": "https://api.github.com/users/phansch/events{/privacy}", "received_events_url": "https://api.github.com/users/phansch/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1d1b6d886b26b76918d9b42079bf596f499a68b3", "url": "https://api.github.com/repos/rust-lang/rust/commits/1d1b6d886b26b76918d9b42079bf596f499a68b3", "html_url": "https://github.com/rust-lang/rust/commit/1d1b6d886b26b76918d9b42079bf596f499a68b3"}], "stats": {"total": 12, "additions": 5, "deletions": 7}, "files": [{"sha": "0bd4c4805b34c3d2f4d285a0963d136a720271c0", "filename": "clippy_lints/src/mem_replace.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/79982a2813c88e1426b17376b2a4b2bec352ee59/clippy_lints%2Fsrc%2Fmem_replace.rs", "raw_url": "https://github.com/rust-lang/rust/raw/79982a2813c88e1426b17376b2a4b2bec352ee59/clippy_lints%2Fsrc%2Fmem_replace.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmem_replace.rs?ref=79982a2813c88e1426b17376b2a4b2bec352ee59", "patch": "@@ -9,6 +9,7 @@ use rustc_lint::{LateContext, LateLintPass};\n use rustc_middle::lint::in_external_macro;\n use rustc_session::{declare_lint_pass, declare_tool_lint};\n use rustc_span::source_map::Span;\n+use rustc_span::symbol::sym;\n \n declare_clippy_lint! {\n     /// **What it does:** Checks for `mem::replace()` on an `Option` with\n@@ -141,15 +142,15 @@ fn check_replace_with_uninit(cx: &LateContext<'_, '_>, src: &Expr<'_>, expr_span\n             if let ExprKind::Path(ref repl_func_qpath) = repl_func.kind;\n             if let Some(repl_def_id) = cx.tables.qpath_res(repl_func_qpath, repl_func.hir_id).opt_def_id();\n             then {\n-                if match_def_path(cx, repl_def_id, &paths::MEM_UNINITIALIZED) {\n+                if cx.tcx.is_diagnostic_item(sym::mem_uninitialized, repl_def_id) {\n                     span_lint_and_help(\n                         cx,\n                         MEM_REPLACE_WITH_UNINIT,\n                         expr_span,\n                         \"replacing with `mem::uninitialized()`\",\n                         \"consider using the `take_mut` crate instead\",\n                     );\n-                } else if match_def_path(cx, repl_def_id, &paths::MEM_ZEROED) &&\n+                } else if cx.tcx.is_diagnostic_item(sym::mem_zeroed, repl_def_id) &&\n                         !cx.tables.expr_ty(src).is_primitive() {\n                     span_lint_and_help(\n                         cx,"}, {"sha": "850633791e1610ea906c086f5e4ce0d5e322c9cf", "filename": "clippy_lints/src/methods/mod.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/79982a2813c88e1426b17376b2a4b2bec352ee59/clippy_lints%2Fsrc%2Fmethods%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/79982a2813c88e1426b17376b2a4b2bec352ee59/clippy_lints%2Fsrc%2Fmethods%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmethods%2Fmod.rs?ref=79982a2813c88e1426b17376b2a4b2bec352ee59", "patch": "@@ -1998,9 +1998,9 @@ fn lint_clone_on_ref_ptr(cx: &LateContext<'_, '_>, expr: &hir::Expr<'_>, arg: &h\n     let obj_ty = walk_ptrs_ty(cx.tables.expr_ty(arg));\n \n     if let ty::Adt(_, subst) = obj_ty.kind {\n-        let caller_type = if match_type(cx, obj_ty, &paths::RC) {\n+        let caller_type = if is_type_diagnostic_item(cx, obj_ty, sym::Rc) {\n             \"Rc\"\n-        } else if match_type(cx, obj_ty, &paths::ARC) {\n+        } else if is_type_diagnostic_item(cx, obj_ty, sym::Arc) {\n             \"Arc\"\n         } else if match_type(cx, obj_ty, &paths::WEAK_RC) || match_type(cx, obj_ty, &paths::WEAK_ARC) {\n             \"Weak\""}, {"sha": "d93f8a1e5609c47379daac3b54a2cb3c6476124d", "filename": "clippy_lints/src/utils/paths.rs", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/79982a2813c88e1426b17376b2a4b2bec352ee59/clippy_lints%2Fsrc%2Futils%2Fpaths.rs", "raw_url": "https://github.com/rust-lang/rust/raw/79982a2813c88e1426b17376b2a4b2bec352ee59/clippy_lints%2Fsrc%2Futils%2Fpaths.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Futils%2Fpaths.rs?ref=79982a2813c88e1426b17376b2a4b2bec352ee59", "patch": "@@ -5,7 +5,6 @@\n //! See <https://github.com/rust-lang/rust-clippy/issues/5393> for more information.\n \n pub const ANY_TRAIT: [&str; 3] = [\"std\", \"any\", \"Any\"];\n-pub const ARC: [&str; 3] = [\"alloc\", \"sync\", \"Arc\"];\n pub const ARC_PTR_EQ: [&str; 4] = [\"alloc\", \"sync\", \"Arc\", \"ptr_eq\"];\n pub const ASMUT_TRAIT: [&str; 3] = [\"core\", \"convert\", \"AsMut\"];\n pub const ASREF_TRAIT: [&str; 3] = [\"core\", \"convert\", \"AsRef\"];\n@@ -62,8 +61,6 @@ pub const MEM_FORGET: [&str; 3] = [\"core\", \"mem\", \"forget\"];\n pub const MEM_MAYBEUNINIT: [&str; 4] = [\"core\", \"mem\", \"maybe_uninit\", \"MaybeUninit\"];\n pub const MEM_MAYBEUNINIT_UNINIT: [&str; 5] = [\"core\", \"mem\", \"maybe_uninit\", \"MaybeUninit\", \"uninit\"];\n pub const MEM_REPLACE: [&str; 3] = [\"core\", \"mem\", \"replace\"];\n-pub const MEM_UNINITIALIZED: [&str; 3] = [\"core\", \"mem\", \"uninitialized\"];\n-pub const MEM_ZEROED: [&str; 3] = [\"core\", \"mem\", \"zeroed\"];\n pub const MUTEX: [&str; 4] = [\"std\", \"sync\", \"mutex\", \"Mutex\"];\n pub const MUTEX_GUARD: [&str; 4] = [\"std\", \"sync\", \"mutex\", \"MutexGuard\"];\n pub const OPEN_OPTIONS: [&str; 3] = [\"std\", \"fs\", \"OpenOptions\"];"}]}