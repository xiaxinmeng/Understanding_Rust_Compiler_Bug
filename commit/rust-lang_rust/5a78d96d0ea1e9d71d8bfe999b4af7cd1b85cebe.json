{"sha": "5a78d96d0ea1e9d71d8bfe999b4af7cd1b85cebe", "node_id": "MDY6Q29tbWl0NzI0NzEyOjVhNzhkOTZkMGVhMWU5ZDcxZDhiZmU5OTliNGFmN2NkMWI4NWNlYmU=", "commit": {"author": {"name": "Lukas Tobias Wirth", "email": "lukastw97@gmail.com", "date": "2021-05-04T11:51:57Z"}, "committer": {"name": "Lukas Tobias Wirth", "email": "lukastw97@gmail.com", "date": "2021-05-04T11:51:57Z"}, "message": "Fix block comment intra doc link injection ranges", "tree": {"sha": "ee4dc633c2976f76a288898fcd8f36bc9a979a30", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ee4dc633c2976f76a288898fcd8f36bc9a979a30"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5a78d96d0ea1e9d71d8bfe999b4af7cd1b85cebe", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5a78d96d0ea1e9d71d8bfe999b4af7cd1b85cebe", "html_url": "https://github.com/rust-lang/rust/commit/5a78d96d0ea1e9d71d8bfe999b4af7cd1b85cebe", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5a78d96d0ea1e9d71d8bfe999b4af7cd1b85cebe/comments", "author": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "544a93ee0815697ff42b79e54d1a7a5a743de1f9", "url": "https://api.github.com/repos/rust-lang/rust/commits/544a93ee0815697ff42b79e54d1a7a5a743de1f9", "html_url": "https://github.com/rust-lang/rust/commit/544a93ee0815697ff42b79e54d1a7a5a743de1f9"}], "stats": {"total": 16, "additions": 12, "deletions": 4}, "files": [{"sha": "0171d8a92a15d3e8237d1709bfae7205f79b4c67", "filename": "crates/hir_def/src/attr.rs", "status": "modified", "additions": 8, "deletions": 4, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/5a78d96d0ea1e9d71d8bfe999b4af7cd1b85cebe/crates%2Fhir_def%2Fsrc%2Fattr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5a78d96d0ea1e9d71d8bfe999b4af7cd1b85cebe/crates%2Fhir_def%2Fsrc%2Fattr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_def%2Fsrc%2Fattr.rs?ref=5a78d96d0ea1e9d71d8bfe999b4af7cd1b85cebe", "patch": "@@ -484,10 +484,10 @@ impl AttrsWithOwner {\n         let mut buf = String::new();\n         let mut mapping = Vec::new();\n         for (doc, idx) in docs {\n-            // str::lines doesn't yield anything for the empty string\n             if !doc.is_empty() {\n-                for line in doc.split('\\n') {\n-                    let line = line.trim_end();\n+                let mut base_offset = 0;\n+                for raw_line in doc.split('\\n') {\n+                    let line = raw_line.trim_end();\n                     let line_len = line.len();\n                     let (offset, line) = match line.char_indices().nth(indent) {\n                         Some((offset, _)) => (offset, &line[offset..]),\n@@ -498,9 +498,13 @@ impl AttrsWithOwner {\n                     mapping.push((\n                         TextRange::new(buf_offset.try_into().ok()?, buf.len().try_into().ok()?),\n                         idx,\n-                        TextRange::new(offset.try_into().ok()?, line_len.try_into().ok()?),\n+                        TextRange::at(\n+                            (base_offset + offset).try_into().ok()?,\n+                            line_len.try_into().ok()?,\n+                        ),\n                     ));\n                     buf.push('\\n');\n+                    base_offset += raw_line.len() + 1;\n                 }\n             } else {\n                 buf.push('\\n');"}, {"sha": "8d83ba2065dd4cac8e1a0215a9eb692464472838", "filename": "crates/ide/src/syntax_highlighting/test_data/highlight_doctest.html", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5a78d96d0ea1e9d71d8bfe999b4af7cd1b85cebe/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftest_data%2Fhighlight_doctest.html", "raw_url": "https://github.com/rust-lang/rust/raw/5a78d96d0ea1e9d71d8bfe999b4af7cd1b85cebe/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftest_data%2Fhighlight_doctest.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftest_data%2Fhighlight_doctest.html?ref=5a78d96d0ea1e9d71d8bfe999b4af7cd1b85cebe", "patch": "@@ -142,6 +142,7 @@\n ```rust\n </span><span class=\"keyword injected\">let</span><span class=\"none injected\"> </span><span class=\"punctuation injected\">_</span><span class=\"none injected\"> </span><span class=\"operator injected\">=</span><span class=\"none injected\"> </span><span class=\"function injected\">example</span><span class=\"parenthesis injected\">(</span><span class=\"operator injected\">&</span><span class=\"bracket injected\">[</span><span class=\"numeric_literal injected\">1</span><span class=\"comma injected\">,</span><span class=\"none injected\"> </span><span class=\"numeric_literal injected\">2</span><span class=\"comma injected\">,</span><span class=\"none injected\"> </span><span class=\"numeric_literal injected\">3</span><span class=\"bracket injected\">]</span><span class=\"parenthesis injected\">)</span><span class=\"semicolon injected\">;</span><span class=\"comment documentation\">\n ```\n+</span><span class=\"function documentation injected intra_doc_link\">[`block_comments2`]</span><span class=\"comment documentation\"> tests these with indentation\n  */</span>\n <span class=\"keyword\">pub</span> <span class=\"keyword\">fn</span> <span class=\"function declaration\">block_comments</span><span class=\"parenthesis\">(</span><span class=\"parenthesis\">)</span> <span class=\"brace\">{</span><span class=\"brace\">}</span>\n \n@@ -150,5 +151,6 @@\n     ```rust\n </span><span class=\"comment documentation\"> </span><span class=\"none injected\">   </span><span class=\"keyword injected\">let</span><span class=\"none injected\"> </span><span class=\"punctuation injected\">_</span><span class=\"none injected\"> </span><span class=\"operator injected\">=</span><span class=\"none injected\"> </span><span class=\"function injected\">example</span><span class=\"parenthesis injected\">(</span><span class=\"operator injected\">&</span><span class=\"bracket injected\">[</span><span class=\"numeric_literal injected\">1</span><span class=\"comma injected\">,</span><span class=\"none injected\"> </span><span class=\"numeric_literal injected\">2</span><span class=\"comma injected\">,</span><span class=\"none injected\"> </span><span class=\"numeric_literal injected\">3</span><span class=\"bracket injected\">]</span><span class=\"parenthesis injected\">)</span><span class=\"semicolon injected\">;</span><span class=\"comment documentation\">\n     ```\n+    </span><span class=\"function documentation injected intra_doc_link\">[`block_comments`]</span><span class=\"comment documentation\"> tests these without indentation\n */</span>\n <span class=\"keyword\">pub</span> <span class=\"keyword\">fn</span> <span class=\"function declaration\">block_comments2</span><span class=\"parenthesis\">(</span><span class=\"parenthesis\">)</span> <span class=\"brace\">{</span><span class=\"brace\">}</span></code></pre>\n\\ No newline at end of file"}, {"sha": "b6e952b08882a8124d096b551c66d28a27ddd253", "filename": "crates/ide/src/syntax_highlighting/tests.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5a78d96d0ea1e9d71d8bfe999b4af7cd1b85cebe/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5a78d96d0ea1e9d71d8bfe999b4af7cd1b85cebe/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftests.rs?ref=5a78d96d0ea1e9d71d8bfe999b4af7cd1b85cebe", "patch": "@@ -618,6 +618,7 @@ It is beyond me why you'd use these when you got ///\n ```rust\n let _ = example(&[1, 2, 3]);\n ```\n+[`block_comments2`] tests these with indentation\n  */\n pub fn block_comments() {}\n \n@@ -626,6 +627,7 @@ pub fn block_comments() {}\n     ```rust\n     let _ = example(&[1, 2, 3]);\n     ```\n+    [`block_comments`] tests these without indentation\n */\n pub fn block_comments2() {}\n \"#"}]}