{"sha": "9d8d2d87c33c4528a781c0c36597cb80d2b00be2", "node_id": "MDY6Q29tbWl0NzI0NzEyOjlkOGQyZDg3YzMzYzQ1MjhhNzgxYzBjMzY1OTdjYjgwZDJiMDBiZTI=", "commit": {"author": {"name": "Oliver Schneider", "email": "oli-obk@users.noreply.github.com", "date": "2017-08-01T07:55:17Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2017-08-01T07:55:17Z"}, "message": "More autoclippyification", "tree": {"sha": "0b85a84982ac8014fb9fc87c258a9de8503a670a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0b85a84982ac8014fb9fc87c258a9de8503a670a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9d8d2d87c33c4528a781c0c36597cb80d2b00be2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9d8d2d87c33c4528a781c0c36597cb80d2b00be2", "html_url": "https://github.com/rust-lang/rust/commit/9d8d2d87c33c4528a781c0c36597cb80d2b00be2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9d8d2d87c33c4528a781c0c36597cb80d2b00be2/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4fa6f83708662b16d6afd7a6376ac0c9966c9e98", "url": "https://api.github.com/repos/rust-lang/rust/commits/4fa6f83708662b16d6afd7a6376ac0c9966c9e98", "html_url": "https://github.com/rust-lang/rust/commit/4fa6f83708662b16d6afd7a6376ac0c9966c9e98"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "ec80e6968f85b45e7daf194290c0d47b534baba4", "filename": "clippy_lints/src/literal_digit_grouping.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9d8d2d87c33c4528a781c0c36597cb80d2b00be2/clippy_lints%2Fsrc%2Fliteral_digit_grouping.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9d8d2d87c33c4528a781c0c36597cb80d2b00be2/clippy_lints%2Fsrc%2Fliteral_digit_grouping.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fliteral_digit_grouping.rs?ref=9d8d2d87c33c4528a781c0c36597cb80d2b00be2", "patch": "@@ -145,7 +145,7 @@ impl<'a> DigitInfo<'a> {\n     fn grouping_hint(&self) -> String {\n         let group_size = self.radix.suggest_grouping();\n         if self.digits.contains('.') {\n-            let mut parts = self.digits.split(\".\");\n+            let mut parts = self.digits.split('.');\n             let int_part_hint = parts\n                 .next()\n                 .unwrap()"}]}