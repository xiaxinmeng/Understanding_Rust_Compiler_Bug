{"sha": "ca7cd41a48251835ee107bd29f4f259b9aa93c43", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNhN2NkNDFhNDgyNTE4MzVlZTEwN2JkMjlmNGYyNTliOWFhOTNjNDM=", "commit": {"author": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2021-02-24T22:37:08Z"}, "committer": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2021-02-28T22:44:49Z"}, "message": "Fix lowering trailing self paths in UseTrees", "tree": {"sha": "e0cede3dff7921a3ed15429b97295d3a7427b739", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e0cede3dff7921a3ed15429b97295d3a7427b739"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ca7cd41a48251835ee107bd29f4f259b9aa93c43", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ca7cd41a48251835ee107bd29f4f259b9aa93c43", "html_url": "https://github.com/rust-lang/rust/commit/ca7cd41a48251835ee107bd29f4f259b9aa93c43", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ca7cd41a48251835ee107bd29f4f259b9aa93c43/comments", "author": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "aa38fa1c72673cb2470651025782fb0fcfad738c", "url": "https://api.github.com/repos/rust-lang/rust/commits/aa38fa1c72673cb2470651025782fb0fcfad738c", "html_url": "https://github.com/rust-lang/rust/commit/aa38fa1c72673cb2470651025782fb0fcfad738c"}], "stats": {"total": 42, "additions": 40, "deletions": 2}, "files": [{"sha": "505493a74832363bd819c9dd3fa156f3d21a8b87", "filename": "crates/hir_def/src/path/lower.rs", "status": "modified", "additions": 11, "deletions": 2, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/ca7cd41a48251835ee107bd29f4f259b9aa93c43/crates%2Fhir_def%2Fsrc%2Fpath%2Flower.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca7cd41a48251835ee107bd29f4f259b9aa93c43/crates%2Fhir_def%2Fsrc%2Fpath%2Flower.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_def%2Fsrc%2Fpath%2Flower.rs?ref=ca7cd41a48251835ee107bd29f4f259b9aa93c43", "patch": "@@ -101,8 +101,12 @@ pub(super) fn lower_path(mut path: ast::Path, hygiene: &Hygiene) -> Option<Path>\n                 break;\n             }\n             ast::PathSegmentKind::SelfKw => {\n-                kind = PathKind::Super(0);\n-                break;\n+                // don't break out if `self` is the last segment of a path, this mean we got an\n+                // use tree like `foo::{self}` which we want to resolve as `foo`\n+                if !segments.is_empty() {\n+                    kind = PathKind::Super(0);\n+                    break;\n+                }\n             }\n             ast::PathSegmentKind::SuperKw => {\n                 let nested_super_count = if let PathKind::Super(n) = kind { n } else { 0 };\n@@ -117,6 +121,11 @@ pub(super) fn lower_path(mut path: ast::Path, hygiene: &Hygiene) -> Option<Path>\n     segments.reverse();\n     generic_args.reverse();\n \n+    if segments.is_empty() && kind == PathKind::Plain && type_anchor.is_none() {\n+        // plain empty paths don't exist, this means we got a single `self` segment as our path\n+        kind = PathKind::Super(0);\n+    }\n+\n     // handle local_inner_macros :\n     // Basically, even in rustc it is quite hacky:\n     // https://github.com/rust-lang/rust/blob/614f273e9388ddd7804d5cbc80b8865068a3744e/src/librustc_resolve/macros.rs#L456"}, {"sha": "20b799490e10e649de002e2ac98e1cd23c56dbb6", "filename": "crates/ide/src/hover.rs", "status": "modified", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/ca7cd41a48251835ee107bd29f4f259b9aa93c43/crates%2Fide%2Fsrc%2Fhover.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca7cd41a48251835ee107bd29f4f259b9aa93c43/crates%2Fide%2Fsrc%2Fhover.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fhover.rs?ref=ca7cd41a48251835ee107bd29f4f259b9aa93c43", "patch": "@@ -3496,4 +3496,33 @@ mod foo$0;\n             \"#]],\n         );\n     }\n+\n+    #[test]\n+    fn hover_self_in_use() {\n+        check(\n+            r#\"\n+//! This should not appear\n+mod foo {\n+    /// But this should appear\n+    pub mod bar {}\n+}\n+use foo::bar::{self$0};\n+\"#,\n+            expect![[r#\"\n+                *self*\n+\n+                ```rust\n+                test::foo\n+                ```\n+\n+                ```rust\n+                pub mod bar\n+                ```\n+\n+                ---\n+\n+                But this should appear\n+            \"#]],\n+        );\n+    }\n }"}]}