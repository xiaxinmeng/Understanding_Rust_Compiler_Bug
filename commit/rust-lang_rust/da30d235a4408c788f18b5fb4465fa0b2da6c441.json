{"sha": "da30d235a4408c788f18b5fb4465fa0b2da6c441", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRhMzBkMjM1YTQ0MDhjNzg4ZjE4YjVmYjQ0NjVmYTBiMmRhNmM0NDE=", "commit": {"author": {"name": "Nick Cameron", "email": "nrc@ncameron.org", "date": "2018-06-06T02:38:42Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2018-06-06T02:38:42Z"}, "message": "Merge pull request #2771 from topecongiro/issue-2746\n\nFix poor formatting of impls", "tree": {"sha": "de1e444449028b3c4e169a4b7fe27d89a8af73da", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/de1e444449028b3c4e169a4b7fe27d89a8af73da"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/da30d235a4408c788f18b5fb4465fa0b2da6c441", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJbF0kyCRBK7hj4Ov3rIwAAdHIIAGLGae4koc8ldKV45E4mccMa\n0Bi9pK1qYqJXE+6XhdlHle77OGIU9xP/s3HtxDyB09IDn88/hg27tnzjMvTQqAY5\nYnLbaqmgY4nYeV3bnK/8zqX/A1IY3QGmCJ5ACwscOMIL+SNvrpoP+xkafyHcFbWO\nCuv6Y0Pk/1/Yzzba92kre/P4Kqe8jChMwZMKhBf32PD7U30728BC4IOQK5YStI6y\n83BV2NYKsrfdAE7nW+ezZGpknPKtf4mSJrOqXgDJQWhMvPvSpU5OnKBCV+NtOxR7\nnz0kJ9/b0anxnZIhd7/9TsqS6yanoO3GHTkh2bBq7PapzV/8kRY4ZXrRkMEl1EY=\n=KoJu\n-----END PGP SIGNATURE-----\n", "payload": "tree de1e444449028b3c4e169a4b7fe27d89a8af73da\nparent 576e9af0aea3eb93c2a7f940bf1bda7f2d761d0a\nparent d96d853b5c307731a580f436e6ba3c4a0b2cfeef\nauthor Nick Cameron <nrc@ncameron.org> 1528252722 +1200\ncommitter GitHub <noreply@github.com> 1528252722 +1200\n\nMerge pull request #2771 from topecongiro/issue-2746\n\nFix poor formatting of impls"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/da30d235a4408c788f18b5fb4465fa0b2da6c441", "html_url": "https://github.com/rust-lang/rust/commit/da30d235a4408c788f18b5fb4465fa0b2da6c441", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/da30d235a4408c788f18b5fb4465fa0b2da6c441/comments", "author": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "576e9af0aea3eb93c2a7f940bf1bda7f2d761d0a", "url": "https://api.github.com/repos/rust-lang/rust/commits/576e9af0aea3eb93c2a7f940bf1bda7f2d761d0a", "html_url": "https://github.com/rust-lang/rust/commit/576e9af0aea3eb93c2a7f940bf1bda7f2d761d0a"}, {"sha": "d96d853b5c307731a580f436e6ba3c4a0b2cfeef", "url": "https://api.github.com/repos/rust-lang/rust/commits/d96d853b5c307731a580f436e6ba3c4a0b2cfeef", "html_url": "https://github.com/rust-lang/rust/commit/d96d853b5c307731a580f436e6ba3c4a0b2cfeef"}], "stats": {"total": 36, "additions": 21, "deletions": 15}, "files": [{"sha": "38311abcba0ce68e6cf9b487842a3eb784bab38f", "filename": "src/items.rs", "status": "modified", "additions": 3, "deletions": 7, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/da30d235a4408c788f18b5fb4465fa0b2da6c441/src%2Fitems.rs", "raw_url": "https://github.com/rust-lang/rust/raw/da30d235a4408c788f18b5fb4465fa0b2da6c441/src%2Fitems.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fitems.rs?ref=da30d235a4408c788f18b5fb4465fa0b2da6c441", "patch": "@@ -656,6 +656,7 @@ pub fn format_impl(\n         if !contains_comment(&snippet[open_pos..])\n             && items.is_empty()\n             && generics.where_clause.predicates.len() == 1\n+            && !result.contains('\\n')\n         {\n             option.suppress_comma();\n             option.snuggle();\n@@ -709,11 +710,6 @@ pub fn format_impl(\n             return Some(result);\n         }\n \n-        if !where_clause_str.is_empty() && !where_clause_str.contains('\\n') {\n-            let width = offset.block_indent + context.config.tab_spaces() - 1;\n-            let where_indent = Indent::new(0, width);\n-            result.push_str(&where_indent.to_string_with_newline(context.config));\n-        }\n         result.push_str(&where_clause_str);\n \n         let need_newline = last_line_contains_single_line_comment(&result) || result.contains('\\n');\n@@ -754,7 +750,7 @@ pub fn format_impl(\n             result.push_str(&outer_indent_str);\n         }\n \n-        if result.ends_with('{') {\n+        if result.ends_with('{') && !context.config.empty_item_single_line() {\n             result.push_str(&sep);\n         }\n         result.push('}');\n@@ -2147,7 +2143,7 @@ impl WhereClauseOption {\n     pub fn snuggled(current: &str) -> WhereClauseOption {\n         WhereClauseOption {\n             suppress_comma: false,\n-            snuggle: trimmed_last_line_width(current) == 1,\n+            snuggle: last_line_width(current) == 1,\n             compress_where: false,\n         }\n     }"}, {"sha": "fde7ad6d017dd850ff087f1129e02b20c0919008", "filename": "tests/source/impls.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/da30d235a4408c788f18b5fb4465fa0b2da6c441/tests%2Fsource%2Fimpls.rs", "raw_url": "https://github.com/rust-lang/rust/raw/da30d235a4408c788f18b5fb4465fa0b2da6c441/tests%2Fsource%2Fimpls.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Fimpls.rs?ref=da30d235a4408c788f18b5fb4465fa0b2da6c441", "patch": "@@ -157,3 +157,6 @@ impl Foo {\n impl<'a, 'b, 'c> SomeThing<Something> for (&'a mut SomethingLong, &'b mut SomethingLong, &'c mut SomethingLong) {\n     fn foo() {}\n }\n+\n+// #2746\n+impl<'seq1, 'seq2, 'body, 'scope, Channel> Adc12< Dual, MasterRunningDma<'seq1, 'body, 'scope, Channel>, SlaveRunningDma<'seq2, 'body, 'scope>, > where Channel: DmaChannel, {}"}, {"sha": "5f4fca7bb9b816fec397c54cbf440039b0f0f956", "filename": "tests/target/big-impl-block.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/da30d235a4408c788f18b5fb4465fa0b2da6c441/tests%2Ftarget%2Fbig-impl-block.rs", "raw_url": "https://github.com/rust-lang/rust/raw/da30d235a4408c788f18b5fb4465fa0b2da6c441/tests%2Ftarget%2Fbig-impl-block.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fbig-impl-block.rs?ref=da30d235a4408c788f18b5fb4465fa0b2da6c441", "patch": "@@ -80,5 +80,4 @@ where\n     S: event::Stream,\n     F: for<'t> FnMut(transform::Api<'t, Stream<ContentStream<S>>>) -> transform::Api<'t, X>,\n     X: event::Stream,\n-{\n-}\n+{}"}, {"sha": "390f1a12cd3090eccebfcf4421dd4d46561966fd", "filename": "tests/target/impls.rs", "status": "modified", "additions": 14, "deletions": 6, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/da30d235a4408c788f18b5fb4465fa0b2da6c441/tests%2Ftarget%2Fimpls.rs", "raw_url": "https://github.com/rust-lang/rust/raw/da30d235a4408c788f18b5fb4465fa0b2da6c441/tests%2Ftarget%2Fimpls.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fimpls.rs?ref=da30d235a4408c788f18b5fb4465fa0b2da6c441", "patch": "@@ -134,13 +134,11 @@ mod m {\n \n impl<BorrowType, K, V, NodeType, HandleType>\n     Handle<NodeRef<BorrowType, K, V, NodeType>, HandleType>\n-{\n-}\n+{}\n \n impl<BorrowType, K, V, NodeType, HandleType> PartialEq\n     for Handle<NodeRef<BorrowType, K, V, NodeType>, HandleType>\n-{\n-}\n+{}\n \n mod x {\n     impl<A, B, C, D> Foo\n@@ -149,8 +147,7 @@ mod x {\n         B: 'static,\n         C: 'static,\n         D: 'static,\n-    {\n-    }\n+    {}\n }\n \n impl<ConcreteThreadSafeLayoutNode: ThreadSafeLayoutNodeFoo>\n@@ -222,3 +219,14 @@ impl<'a, 'b, 'c> SomeThing<Something>\n {\n     fn foo() {}\n }\n+\n+// #2746\n+impl<'seq1, 'seq2, 'body, 'scope, Channel>\n+    Adc12<\n+        Dual,\n+        MasterRunningDma<'seq1, 'body, 'scope, Channel>,\n+        SlaveRunningDma<'seq2, 'body, 'scope>,\n+    >\n+where\n+    Channel: DmaChannel,\n+{}"}]}