{"sha": "c9b9c17fca0d781aa9e80180b605bff3cb1db038", "node_id": "C_kwDOAAsO6NoAKGM5YjljMTdmY2EwZDc4MWFhOWU4MDE4MGI2MDViZmYzY2IxZGIwMzg", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2022-11-27T11:57:30Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2022-11-28T07:53:14Z"}, "message": "add scoped thread test", "tree": {"sha": "32142afa80a7699b04556599b78e154ede8d81e1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/32142afa80a7699b04556599b78e154ede8d81e1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c9b9c17fca0d781aa9e80180b605bff3cb1db038", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c9b9c17fca0d781aa9e80180b605bff3cb1db038", "html_url": "https://github.com/rust-lang/rust/commit/c9b9c17fca0d781aa9e80180b605bff3cb1db038", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c9b9c17fca0d781aa9e80180b605bff3cb1db038/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ec003fdd9cd5fe31ca7a670c4772ad1956b55b34", "url": "https://api.github.com/repos/rust-lang/rust/commits/ec003fdd9cd5fe31ca7a670c4772ad1956b55b34", "html_url": "https://github.com/rust-lang/rust/commit/ec003fdd9cd5fe31ca7a670c4772ad1956b55b34"}], "stats": {"total": 24, "additions": 24, "deletions": 0}, "files": [{"sha": "ce5d17f5f2dc59ec9e0b81e0762cfdd699703b30", "filename": "src/tools/miri/tests/pass/concurrency/scope.rs", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/c9b9c17fca0d781aa9e80180b605bff3cb1db038/src%2Ftools%2Fmiri%2Ftests%2Fpass%2Fconcurrency%2Fscope.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c9b9c17fca0d781aa9e80180b605bff3cb1db038/src%2Ftools%2Fmiri%2Ftests%2Fpass%2Fconcurrency%2Fscope.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Fpass%2Fconcurrency%2Fscope.rs?ref=c9b9c17fca0d781aa9e80180b605bff3cb1db038", "patch": "@@ -0,0 +1,24 @@\n+use std::thread;\n+\n+fn main() {\n+    let mut a = vec![1, 2, 3];\n+    let mut x = 0;\n+\n+    thread::scope(|s| {\n+        s.spawn(|| {\n+            // We can borrow `a` here.\n+            let _s = format!(\"hello from the first scoped thread: {a:?}\");\n+        });\n+        s.spawn(|| {\n+            let _s = format!(\"hello from the second scoped thread\");\n+            // We can even mutably borrow `x` here,\n+            // because no other threads are using it.\n+            x += a[0] + a[2];\n+        });\n+        let _s = format!(\"hello from the main thread\");\n+    });\n+\n+    // After the scope, we can modify and access our variables again:\n+    a.push(4);\n+    assert_eq!(x, a.len());\n+}"}]}