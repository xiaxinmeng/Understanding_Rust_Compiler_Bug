{"sha": "1750a2f723a796b9c98b223df6013f3b1b0254df", "node_id": "C_kwDOAAsO6NoAKDE3NTBhMmY3MjNhNzk2YjljOThiMjIzZGY2MDEzZjNiMWIwMjU0ZGY", "commit": {"author": {"name": "Gary Guo", "email": "gary@garyguo.net", "date": "2022-05-20T20:52:00Z"}, "committer": {"name": "Gary Guo", "email": "gary@garyguo.net", "date": "2022-06-08T20:32:41Z"}, "message": "Add tests for mixed panic mode restriction and lints", "tree": {"sha": "4c0d645087b73ab95b2382ab080608c4839e6da0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4c0d645087b73ab95b2382ab080608c4839e6da0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1750a2f723a796b9c98b223df6013f3b1b0254df", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1750a2f723a796b9c98b223df6013f3b1b0254df", "html_url": "https://github.com/rust-lang/rust/commit/1750a2f723a796b9c98b223df6013f3b1b0254df", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1750a2f723a796b9c98b223df6013f3b1b0254df/comments", "author": {"login": "nbdd0121", "id": 4065244, "node_id": "MDQ6VXNlcjQwNjUyNDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/4065244?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nbdd0121", "html_url": "https://github.com/nbdd0121", "followers_url": "https://api.github.com/users/nbdd0121/followers", "following_url": "https://api.github.com/users/nbdd0121/following{/other_user}", "gists_url": "https://api.github.com/users/nbdd0121/gists{/gist_id}", "starred_url": "https://api.github.com/users/nbdd0121/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nbdd0121/subscriptions", "organizations_url": "https://api.github.com/users/nbdd0121/orgs", "repos_url": "https://api.github.com/users/nbdd0121/repos", "events_url": "https://api.github.com/users/nbdd0121/events{/privacy}", "received_events_url": "https://api.github.com/users/nbdd0121/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nbdd0121", "id": 4065244, "node_id": "MDQ6VXNlcjQwNjUyNDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/4065244?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nbdd0121", "html_url": "https://github.com/nbdd0121", "followers_url": "https://api.github.com/users/nbdd0121/followers", "following_url": "https://api.github.com/users/nbdd0121/following{/other_user}", "gists_url": "https://api.github.com/users/nbdd0121/gists{/gist_id}", "starred_url": "https://api.github.com/users/nbdd0121/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nbdd0121/subscriptions", "organizations_url": "https://api.github.com/users/nbdd0121/orgs", "repos_url": "https://api.github.com/users/nbdd0121/repos", "events_url": "https://api.github.com/users/nbdd0121/events{/privacy}", "received_events_url": "https://api.github.com/users/nbdd0121/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bc5afd9e347c79d7e0c910eb4f452410579ca4b6", "url": "https://api.github.com/repos/rust-lang/rust/commits/bc5afd9e347c79d7e0c910eb4f452410579ca4b6", "html_url": "https://github.com/rust-lang/rust/commit/bc5afd9e347c79d7e0c910eb4f452410579ca4b6"}], "stats": {"total": 90, "additions": 90, "deletions": 0}, "files": [{"sha": "8fad49b5e9d321aff8ae2684115360af979a296e", "filename": "src/test/ui/panic-runtime/auxiliary/needs-abort.rs", "status": "added", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/1750a2f723a796b9c98b223df6013f3b1b0254df/src%2Ftest%2Fui%2Fpanic-runtime%2Fauxiliary%2Fneeds-abort.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1750a2f723a796b9c98b223df6013f3b1b0254df/src%2Ftest%2Fui%2Fpanic-runtime%2Fauxiliary%2Fneeds-abort.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fpanic-runtime%2Fauxiliary%2Fneeds-abort.rs?ref=1750a2f723a796b9c98b223df6013f3b1b0254df", "patch": "@@ -0,0 +1,5 @@\n+// compile-flags:-C panic=abort\n+// no-prefer-dynamic\n+\n+#![crate_type = \"rlib\"]\n+#![no_std]"}, {"sha": "d555b531986b0d28dd3e22d77cf8e3f9d00aa5ab", "filename": "src/test/ui/panic-runtime/auxiliary/needs-unwind.rs", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/1750a2f723a796b9c98b223df6013f3b1b0254df/src%2Ftest%2Fui%2Fpanic-runtime%2Fauxiliary%2Fneeds-unwind.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1750a2f723a796b9c98b223df6013f3b1b0254df/src%2Ftest%2Fui%2Fpanic-runtime%2Fauxiliary%2Fneeds-unwind.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fpanic-runtime%2Fauxiliary%2Fneeds-unwind.rs?ref=1750a2f723a796b9c98b223df6013f3b1b0254df", "patch": "@@ -0,0 +1,13 @@\n+// compile-flags:-C panic=unwind\n+// no-prefer-dynamic\n+\n+#![crate_type = \"rlib\"]\n+#![no_std]\n+#![feature(c_unwind)]\n+\n+extern \"C-unwind\" fn foo() {}\n+\n+fn bar() {\n+    let ptr: extern \"C-unwind\" fn() = foo;\n+    ptr();\n+}"}, {"sha": "c72fb96e357f0a33242e2d861a8deb1e9d53b080", "filename": "src/test/ui/panic-runtime/need-abort-got-unwind.rs", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/1750a2f723a796b9c98b223df6013f3b1b0254df/src%2Ftest%2Fui%2Fpanic-runtime%2Fneed-abort-got-unwind.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1750a2f723a796b9c98b223df6013f3b1b0254df/src%2Ftest%2Fui%2Fpanic-runtime%2Fneed-abort-got-unwind.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fpanic-runtime%2Fneed-abort-got-unwind.rs?ref=1750a2f723a796b9c98b223df6013f3b1b0254df", "patch": "@@ -0,0 +1,9 @@\n+// build-fail\n+// needs-unwind\n+// error-pattern:is incompatible with this crate's strategy of `unwind`\n+// aux-build:needs-abort.rs\n+// ignore-wasm32-bare compiled with panic=abort by default\n+\n+extern crate needs_abort;\n+\n+fn main() {}"}, {"sha": "d29c7875fd0ff391365f7c8fb540747757b9583b", "filename": "src/test/ui/panic-runtime/need-abort-got-unwind.stderr", "status": "added", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1750a2f723a796b9c98b223df6013f3b1b0254df/src%2Ftest%2Fui%2Fpanic-runtime%2Fneed-abort-got-unwind.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1750a2f723a796b9c98b223df6013f3b1b0254df/src%2Ftest%2Fui%2Fpanic-runtime%2Fneed-abort-got-unwind.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fpanic-runtime%2Fneed-abort-got-unwind.stderr?ref=1750a2f723a796b9c98b223df6013f3b1b0254df", "patch": "@@ -0,0 +1,4 @@\n+error: the crate `needs_abort` requires panic strategy `abort` which is incompatible with this crate's strategy of `unwind`\n+\n+error: aborting due to previous error\n+"}, {"sha": "3bcc0aa39ac961a600798893697bc01bf3af0149", "filename": "src/test/ui/panic-runtime/need-unwind-got-abort.rs", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/1750a2f723a796b9c98b223df6013f3b1b0254df/src%2Ftest%2Fui%2Fpanic-runtime%2Fneed-unwind-got-abort.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1750a2f723a796b9c98b223df6013f3b1b0254df/src%2Ftest%2Fui%2Fpanic-runtime%2Fneed-unwind-got-abort.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fpanic-runtime%2Fneed-unwind-got-abort.rs?ref=1750a2f723a796b9c98b223df6013f3b1b0254df", "patch": "@@ -0,0 +1,8 @@\n+// build-fail\n+// error-pattern:is incompatible with this crate's strategy of `abort`\n+// aux-build:needs-unwind.rs\n+// compile-flags:-C panic=abort\n+\n+extern crate needs_unwind;\n+\n+fn main() {}"}, {"sha": "a53b7ffe574850199e45c519835dddc7ead7b24b", "filename": "src/test/ui/panic-runtime/need-unwind-got-abort.stderr", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/1750a2f723a796b9c98b223df6013f3b1b0254df/src%2Ftest%2Fui%2Fpanic-runtime%2Fneed-unwind-got-abort.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1750a2f723a796b9c98b223df6013f3b1b0254df/src%2Ftest%2Fui%2Fpanic-runtime%2Fneed-unwind-got-abort.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fpanic-runtime%2Fneed-unwind-got-abort.stderr?ref=1750a2f723a796b9c98b223df6013f3b1b0254df", "patch": "@@ -0,0 +1,6 @@\n+error: the linked panic runtime `panic_unwind` is not compiled with this crate's panic strategy `abort`\n+\n+error: the crate `needs_unwind` requires panic strategy `unwind` which is incompatible with this crate's strategy of `abort`\n+\n+error: aborting due to 2 previous errors\n+"}, {"sha": "67c20e9eac54e0f9cdb169542767fc3c49a5232b", "filename": "src/test/ui/unwind-abis/ffi-unwind-calls-lint.rs", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/1750a2f723a796b9c98b223df6013f3b1b0254df/src%2Ftest%2Fui%2Funwind-abis%2Fffi-unwind-calls-lint.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1750a2f723a796b9c98b223df6013f3b1b0254df/src%2Ftest%2Fui%2Funwind-abis%2Fffi-unwind-calls-lint.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Funwind-abis%2Fffi-unwind-calls-lint.rs?ref=1750a2f723a796b9c98b223df6013f3b1b0254df", "patch": "@@ -0,0 +1,25 @@\n+// build-pass\n+\n+#![feature(c_unwind)]\n+#![warn(ffi_unwind_calls)]\n+\n+mod foo {\n+    #[no_mangle]\n+    pub extern \"C-unwind\" fn foo() {}\n+}\n+\n+extern \"C-unwind\" {\n+    fn foo();\n+}\n+\n+fn main() {\n+    // Call to Rust function is fine.\n+    foo::foo();\n+    // Call to foreign function should warn.\n+    unsafe { foo(); }\n+    //~^ WARNING call to foreign function with FFI-unwind ABI\n+    let ptr: extern \"C-unwind\" fn() = foo::foo;\n+    // Call to function pointer should also warn.\n+    ptr();\n+    //~^ WARNING call to function pointer with FFI-unwind ABI\n+}"}, {"sha": "cf8a7782e35eebcee5e36ce1c94148469c290c79", "filename": "src/test/ui/unwind-abis/ffi-unwind-calls-lint.stderr", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/1750a2f723a796b9c98b223df6013f3b1b0254df/src%2Ftest%2Fui%2Funwind-abis%2Fffi-unwind-calls-lint.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1750a2f723a796b9c98b223df6013f3b1b0254df/src%2Ftest%2Fui%2Funwind-abis%2Fffi-unwind-calls-lint.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Funwind-abis%2Fffi-unwind-calls-lint.stderr?ref=1750a2f723a796b9c98b223df6013f3b1b0254df", "patch": "@@ -0,0 +1,20 @@\n+warning: call to foreign function with FFI-unwind ABI\n+  --> $DIR/ffi-unwind-calls-lint.rs:19:14\n+   |\n+LL |     unsafe { foo(); }\n+   |              ^^^^^ call to foreign function with FFI-unwind ABI\n+   |\n+note: the lint level is defined here\n+  --> $DIR/ffi-unwind-calls-lint.rs:4:9\n+   |\n+LL | #![warn(ffi_unwind_calls)]\n+   |         ^^^^^^^^^^^^^^^^\n+\n+warning: call to function pointer with FFI-unwind ABI\n+  --> $DIR/ffi-unwind-calls-lint.rs:23:5\n+   |\n+LL |     ptr();\n+   |     ^^^^^ call to function pointer with FFI-unwind ABI\n+\n+warning: 2 warnings emitted\n+"}]}