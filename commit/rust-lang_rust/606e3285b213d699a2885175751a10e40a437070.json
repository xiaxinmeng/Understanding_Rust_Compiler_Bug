{"sha": "606e3285b213d699a2885175751a10e40a437070", "node_id": "MDY6Q29tbWl0NzI0NzEyOjYwNmUzMjg1YjIxM2Q2OTlhMjg4NTE3NTc1MWExMGU0MGE0MzcwNzA=", "commit": {"author": {"name": "Philipp Krones", "email": "hello@philkrones.com", "date": "2020-03-19T14:00:32Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-03-19T14:00:32Z"}, "message": "Rollup merge of #5341 - flip1995:rustup, r=flip1995\n\nRustup to rust-lang/rust#66131\n\nchangelog: none", "tree": {"sha": "fc961728debb47fe33ab35c2481d3b8e664ebd88", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fc961728debb47fe33ab35c2481d3b8e664ebd88"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/606e3285b213d699a2885175751a10e40a437070", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJec3sACRBK7hj4Ov3rIwAAdHIIAHDQW+SS+yVOc+rGx4KIPx0B\nMndq7Zd484RX0E7GaG61R+KtTZ0FoCQORnyb0XJQ/DmyKc7ndgxEDZ9f/Aom23OD\nmoNhUzCJi+NlToXtH4NivxGlbDl/mQi7v9UcP0ZA8u2wYJuDLEMVKjwnNzmDqVrS\nJnBvaIHgYMpOUH+QqnEyIsc8W0+eYTYvnh7MXAC5kFZYXKtFl6XJLH78vBG3kzxH\nm6MGnEGhFoYftU+wrLPp+de9rGa3cE6OMqsevFOXgFbE7/fm75m74tok/r4ilNRk\niJkNeN36lYx5aP9YlDyVPcH2SAK9yn1vu3S50MIZ013+tcvh1c8kdX71PQW+5b0=\n=meHy\n-----END PGP SIGNATURE-----\n", "payload": "tree fc961728debb47fe33ab35c2481d3b8e664ebd88\nparent a46675f2294ec90ff14af634478ff6a259c00fc0\nparent 21aeb21b8afa18c076180b8ae5e221e1d020911d\nauthor Philipp Krones <hello@philkrones.com> 1584626432 +0100\ncommitter GitHub <noreply@github.com> 1584626432 +0100\n\nRollup merge of #5341 - flip1995:rustup, r=flip1995\n\nRustup to rust-lang/rust#66131\n\nchangelog: none\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/606e3285b213d699a2885175751a10e40a437070", "html_url": "https://github.com/rust-lang/rust/commit/606e3285b213d699a2885175751a10e40a437070", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/606e3285b213d699a2885175751a10e40a437070/comments", "author": {"login": "flip1995", "id": 9744647, "node_id": "MDQ6VXNlcjk3NDQ2NDc=", "avatar_url": "https://avatars.githubusercontent.com/u/9744647?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flip1995", "html_url": "https://github.com/flip1995", "followers_url": "https://api.github.com/users/flip1995/followers", "following_url": "https://api.github.com/users/flip1995/following{/other_user}", "gists_url": "https://api.github.com/users/flip1995/gists{/gist_id}", "starred_url": "https://api.github.com/users/flip1995/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flip1995/subscriptions", "organizations_url": "https://api.github.com/users/flip1995/orgs", "repos_url": "https://api.github.com/users/flip1995/repos", "events_url": "https://api.github.com/users/flip1995/events{/privacy}", "received_events_url": "https://api.github.com/users/flip1995/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a46675f2294ec90ff14af634478ff6a259c00fc0", "url": "https://api.github.com/repos/rust-lang/rust/commits/a46675f2294ec90ff14af634478ff6a259c00fc0", "html_url": "https://github.com/rust-lang/rust/commit/a46675f2294ec90ff14af634478ff6a259c00fc0"}, {"sha": "21aeb21b8afa18c076180b8ae5e221e1d020911d", "url": "https://api.github.com/repos/rust-lang/rust/commits/21aeb21b8afa18c076180b8ae5e221e1d020911d", "html_url": "https://github.com/rust-lang/rust/commit/21aeb21b8afa18c076180b8ae5e221e1d020911d"}], "stats": {"total": 28, "additions": 14, "deletions": 14}, "files": [{"sha": "697486c1af093a57c25c993611be09757d41c9b0", "filename": "clippy_lints/src/functions.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/606e3285b213d699a2885175751a10e40a437070/clippy_lints%2Fsrc%2Ffunctions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/606e3285b213d699a2885175751a10e40a437070/clippy_lints%2Fsrc%2Ffunctions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Ffunctions.rs?ref=606e3285b213d699a2885175751a10e40a437070", "patch": "@@ -486,7 +486,7 @@ fn is_mutable_pat(cx: &LateContext<'_, '_>, pat: &hir::Pat<'_>, tys: &mut FxHash\n     if let hir::PatKind::Wild = pat.kind {\n         return false; // ignore `_` patterns\n     }\n-    let def_id = pat.hir_id.owner_def_id();\n+    let def_id = pat.hir_id.owner.to_def_id();\n     if cx.tcx.has_typeck_tables(def_id) {\n         is_mutable_ty(cx, &cx.tcx.typeck_tables_of(def_id).pat_ty(pat), pat.span, tys)\n     } else {\n@@ -601,7 +601,7 @@ impl<'a, 'tcx> intravisit::Visitor<'tcx> for StaticMutVisitor<'a, 'tcx> {\n             Call(_, args) | MethodCall(_, _, args) => {\n                 let mut tys = FxHashSet::default();\n                 for arg in args {\n-                    let def_id = arg.hir_id.owner_def_id();\n+                    let def_id = arg.hir_id.owner.to_def_id();\n                     if self.cx.tcx.has_typeck_tables(def_id)\n                         && is_mutable_ty(\n                             self.cx,"}, {"sha": "cd034f916cef43b5cd39d1049fdc23cd8f761ffb", "filename": "clippy_lints/src/inherent_impl.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/606e3285b213d699a2885175751a10e40a437070/clippy_lints%2Fsrc%2Finherent_impl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/606e3285b213d699a2885175751a10e40a437070/clippy_lints%2Fsrc%2Finherent_impl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Finherent_impl.rs?ref=606e3285b213d699a2885175751a10e40a437070", "patch": "@@ -59,7 +59,7 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for MultipleInherentImpl {\n             // but filter out implementations that have generic params (type or lifetime)\n             // or are derived from a macro\n             if !in_macro(item.span) && generics.params.is_empty() {\n-                self.impls.insert(item.hir_id.owner_def_id(), item.span);\n+                self.impls.insert(item.hir_id.owner.to_def_id(), item.span);\n             }\n         }\n     }\n@@ -69,7 +69,7 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for MultipleInherentImpl {\n             // Retrieve all inherent implementations from the crate, grouped by type\n             for impls in cx\n                 .tcx\n-                .crate_inherent_impls(item.hir_id.owner_def_id().krate)\n+                .crate_inherent_impls(item.hir_id.owner.to_def_id().krate)\n                 .inherent_impls\n                 .values()\n             {"}, {"sha": "475e60736e07f718e4948c7bb4ca22c000b2a596", "filename": "clippy_lints/src/loops.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/606e3285b213d699a2885175751a10e40a437070/clippy_lints%2Fsrc%2Floops.rs", "raw_url": "https://github.com/rust-lang/rust/raw/606e3285b213d699a2885175751a10e40a437070/clippy_lints%2Fsrc%2Floops.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Floops.rs?ref=606e3285b213d699a2885175751a10e40a437070", "patch": "@@ -1679,7 +1679,7 @@ fn check_for_mutation(\n         span_low: None,\n         span_high: None,\n     };\n-    let def_id = def_id::DefId::local(body.hir_id.owner);\n+    let def_id = body.hir_id.owner.to_def_id();\n     cx.tcx.infer_ctxt().enter(|infcx| {\n         ExprUseVisitor::new(&mut delegate, &infcx, def_id, cx.param_env, cx.tables).walk_expr(body);\n     });"}, {"sha": "e03f9e36095b379b0f9e26c6da89a06b6188f9b8", "filename": "clippy_lints/src/missing_doc.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/606e3285b213d699a2885175751a10e40a437070/clippy_lints%2Fsrc%2Fmissing_doc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/606e3285b213d699a2885175751a10e40a437070/clippy_lints%2Fsrc%2Fmissing_doc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmissing_doc.rs?ref=606e3285b213d699a2885175751a10e40a437070", "patch": "@@ -135,7 +135,7 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for MissingDoc {\n             hir::ItemKind::Fn(..) => {\n                 // ignore main()\n                 if it.ident.name == sym!(main) {\n-                    let def_id = cx.tcx.hir().local_def_id(it.hir_id);\n+                    let def_id = it.hir_id.owner;\n                     let def_key = cx.tcx.hir().def_key(def_id);\n                     if def_key.parent == Some(hir::def_id::CRATE_DEF_INDEX) {\n                         return;"}, {"sha": "f69b145fa39fbb5413aa294442453583518d0f47", "filename": "clippy_lints/src/new_without_default.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/606e3285b213d699a2885175751a10e40a437070/clippy_lints%2Fsrc%2Fnew_without_default.rs", "raw_url": "https://github.com/rust-lang/rust/raw/606e3285b213d699a2885175751a10e40a437070/clippy_lints%2Fsrc%2Fnew_without_default.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fnew_without_default.rs?ref=606e3285b213d699a2885175751a10e40a437070", "patch": "@@ -149,9 +149,9 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for NewWithoutDefault {\n                                     if_chain! {\n                                         if let Some(ref impling_types) = self.impling_types;\n                                         if let Some(self_def) = cx.tcx.type_of(self_did).ty_adt_def();\n-                                        if self_def.did.is_local();\n+                                        if let Some(self_def_id) = self_def.did.as_local();\n                                         then {\n-                                            let self_id = cx.tcx.hir().local_def_id_to_hir_id(self_def.did.to_local());\n+                                            let self_id = cx.tcx.hir().local_def_id_to_hir_id(self_def_id);\n                                             if impling_types.contains(&self_id) {\n                                                 return;\n                                             }"}, {"sha": "d532efbec749249c346e98963f2ec34f4ba12b90", "filename": "clippy_lints/src/swap.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/606e3285b213d699a2885175751a10e40a437070/clippy_lints%2Fsrc%2Fswap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/606e3285b213d699a2885175751a10e40a437070/clippy_lints%2Fsrc%2Fswap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fswap.rs?ref=606e3285b213d699a2885175751a10e40a437070", "patch": "@@ -99,7 +99,7 @@ fn check_manual_swap(cx: &LateContext<'_, '_>, block: &Block<'_>) {\n             then {\n                 if let ExprKind::Field(ref lhs1, _) = lhs1.kind {\n                     if let ExprKind::Field(ref lhs2, _) = lhs2.kind {\n-                        if lhs1.hir_id.owner_def_id() == lhs2.hir_id.owner_def_id() {\n+                        if lhs1.hir_id.owner == lhs2.hir_id.owner {\n                             return;\n                         }\n                     }"}, {"sha": "c1c5bcc1dd1bb42eb1030b28cc3fa82f1c42d37e", "filename": "clippy_lints/src/utils/mod.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/606e3285b213d699a2885175751a10e40a437070/clippy_lints%2Fsrc%2Futils%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/606e3285b213d699a2885175751a10e40a437070/clippy_lints%2Fsrc%2Futils%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Futils%2Fmod.rs?ref=606e3285b213d699a2885175751a10e40a437070", "patch": "@@ -297,8 +297,8 @@ pub fn qpath_res(cx: &LateContext<'_, '_>, qpath: &hir::QPath<'_>, id: hir::HirI\n     match qpath {\n         hir::QPath::Resolved(_, path) => path.res,\n         hir::QPath::TypeRelative(..) => {\n-            if cx.tcx.has_typeck_tables(id.owner_def_id()) {\n-                cx.tcx.typeck_tables_of(id.owner_def_id()).qpath_res(qpath, id)\n+            if cx.tcx.has_typeck_tables(id.owner.to_def_id()) {\n+                cx.tcx.typeck_tables_of(id.owner.to_def_id()).qpath_res(qpath, id)\n             } else {\n                 Res::Err\n             }"}, {"sha": "a08251c1a4eb22a8f2f8b2b34e5ac987a9acc78c", "filename": "clippy_lints/src/utils/usage.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/606e3285b213d699a2885175751a10e40a437070/clippy_lints%2Fsrc%2Futils%2Fusage.rs", "raw_url": "https://github.com/rust-lang/rust/raw/606e3285b213d699a2885175751a10e40a437070/clippy_lints%2Fsrc%2Futils%2Fusage.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Futils%2Fusage.rs?ref=606e3285b213d699a2885175751a10e40a437070", "patch": "@@ -5,7 +5,7 @@ use rustc_ast::ast;\n use rustc_data_structures::fx::FxHashSet;\n use rustc_hir::def::Res;\n use rustc_hir::intravisit::{walk_expr, NestedVisitorMap, Visitor};\n-use rustc_hir::{def_id, Expr, HirId, Path};\n+use rustc_hir::{Expr, HirId, Path};\n use rustc_infer::infer::TyCtxtInferExt;\n use rustc_lint::LateContext;\n use rustc_span::symbol::Ident;\n@@ -17,7 +17,7 @@ pub fn mutated_variables<'a, 'tcx>(expr: &'tcx Expr<'_>, cx: &'a LateContext<'a,\n         used_mutably: FxHashSet::default(),\n         skip: false,\n     };\n-    let def_id = def_id::DefId::local(expr.hir_id.owner);\n+    let def_id = expr.hir_id.owner.to_def_id();\n     cx.tcx.infer_ctxt().enter(|infcx| {\n         ExprUseVisitor::new(&mut delegate, &infcx, def_id, cx.param_env, cx.tables).walk_expr(expr);\n     });"}, {"sha": "348d13ef41f10b7c9101d29495ac8855e84c6ed3", "filename": "clippy_lints/src/wildcard_imports.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/606e3285b213d699a2885175751a10e40a437070/clippy_lints%2Fsrc%2Fwildcard_imports.rs", "raw_url": "https://github.com/rust-lang/rust/raw/606e3285b213d699a2885175751a10e40a437070/clippy_lints%2Fsrc%2Fwildcard_imports.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fwildcard_imports.rs?ref=606e3285b213d699a2885175751a10e40a437070", "patch": "@@ -85,7 +85,7 @@ impl LateLintPass<'_, '_> for WildcardImports {\n             if let ItemKind::Use(use_path, UseKind::Glob) = &item.kind;\n             // don't lint prelude glob imports\n             if !use_path.segments.iter().last().map_or(false, |ps| ps.ident.as_str() == \"prelude\");\n-            let used_imports = cx.tcx.names_imported_by_glob_use(item.hir_id.owner_def_id());\n+            let used_imports = cx.tcx.names_imported_by_glob_use(item.hir_id.owner.to_def_id());\n             if !used_imports.is_empty(); // Already handled by `unused_imports`\n             then {\n                 let mut applicability = Applicability::MachineApplicable;"}]}