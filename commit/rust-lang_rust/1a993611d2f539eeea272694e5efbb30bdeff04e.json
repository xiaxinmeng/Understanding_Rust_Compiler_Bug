{"sha": "1a993611d2f539eeea272694e5efbb30bdeff04e", "node_id": "C_kwDOAAsO6NoAKDFhOTkzNjExZDJmNTM5ZWVlYTI3MjY5NGU1ZWZiYjMwYmRlZmYwNGU", "commit": {"author": {"name": "J Haigh", "email": "debugsteven@gmail.com", "date": "2023-01-11T18:11:56Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2023-01-11T18:11:56Z"}, "message": "Revert \"warn newer available version of the x tool\"", "tree": {"sha": "1728c287f815eb6e961bcca37b0af05773015ee0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1728c287f815eb6e961bcca37b0af05773015ee0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1a993611d2f539eeea272694e5efbb30bdeff04e", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJjvvvtCRBK7hj4Ov3rIwAA/vwIAIJPyB5OYaal0JxwqEVVsd5p\nlR7Lmpv2wOYvVf1MUReWrKkLw2hW1EEFnxGN5y0FkFaBllvq/Uu7xeKTDxT9tJ75\nBT2Xjq9qonJ/F5MmkbE/4qKbQaBAqzLNck5vj+/UVWfF+JrQ2Fi12EWxoq+h53Dc\n8KOMqQxGRWWMcDJPfwgasCXy+rW/+bEOFvt7I/8cGN1AGzn78TnbBvBK4ieK32wx\nbYivP/kFwEgyEqFCtLIFsd4K6j1H1yWKtfRplzrbSPWJXTYA78T6oj7eu6/n2tY0\nsSIAECqSlScpcqVD9QlhDuCFpRM9DUe/YgfI81vBzFQhWj/CWdzo5285x0oEBxE=\n=vVxa\n-----END PGP SIGNATURE-----\n", "payload": "tree 1728c287f815eb6e961bcca37b0af05773015ee0\nparent b22c152958eade17a71d899b29a2d39bcc77aa48\nauthor J Haigh <debugsteven@gmail.com> 1673460716 -0700\ncommitter GitHub <noreply@github.com> 1673460716 -0700\n\nRevert \"warn newer available version of the x tool\"\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1a993611d2f539eeea272694e5efbb30bdeff04e", "html_url": "https://github.com/rust-lang/rust/commit/1a993611d2f539eeea272694e5efbb30bdeff04e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1a993611d2f539eeea272694e5efbb30bdeff04e/comments", "author": {"login": "DebugSteven", "id": 10746702, "node_id": "MDQ6VXNlcjEwNzQ2NzAy", "avatar_url": "https://avatars.githubusercontent.com/u/10746702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DebugSteven", "html_url": "https://github.com/DebugSteven", "followers_url": "https://api.github.com/users/DebugSteven/followers", "following_url": "https://api.github.com/users/DebugSteven/following{/other_user}", "gists_url": "https://api.github.com/users/DebugSteven/gists{/gist_id}", "starred_url": "https://api.github.com/users/DebugSteven/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DebugSteven/subscriptions", "organizations_url": "https://api.github.com/users/DebugSteven/orgs", "repos_url": "https://api.github.com/users/DebugSteven/repos", "events_url": "https://api.github.com/users/DebugSteven/events{/privacy}", "received_events_url": "https://api.github.com/users/DebugSteven/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b22c152958eade17a71d899b29a2d39bcc77aa48", "url": "https://api.github.com/repos/rust-lang/rust/commits/b22c152958eade17a71d899b29a2d39bcc77aa48", "html_url": "https://github.com/rust-lang/rust/commit/b22c152958eade17a71d899b29a2d39bcc77aa48"}], "stats": {"total": 103, "additions": 13, "deletions": 90}, "files": [{"sha": "4bea3af7f3bfa111809d367b6a651d37d2e51910", "filename": "Cargo.lock", "status": "modified", "additions": 10, "deletions": 11, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/1a993611d2f539eeea272694e5efbb30bdeff04e/Cargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/1a993611d2f539eeea272694e5efbb30bdeff04e/Cargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.lock?ref=1a993611d2f539eeea272694e5efbb30bdeff04e", "patch": "@@ -5034,18 +5034,18 @@ checksum = \"1ef965a420fe14fdac7dd018862966a4c14094f900e1650bbc71ddd7d580c8af\"\n \n [[package]]\n name = \"semver\"\n-version = \"1.0.14\"\n+version = \"1.0.12\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"e25dfac463d778e353db5be2449d1cce89bd6fd23c9f1ea21310ce6e5a1b29c4\"\n+checksum = \"a2333e6df6d6598f2b1974829f853c2b4c5f4a6e503c10af918081aa6f8564e1\"\n dependencies = [\n  \"serde\",\n ]\n \n [[package]]\n name = \"serde\"\n-version = \"1.0.152\"\n+version = \"1.0.147\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"bb7d1f0d3021d347a83e556fc4683dea2ea09d87bccdf88ff5c12545d89d5efb\"\n+checksum = \"d193d69bae983fc11a79df82342761dfbf28a99fc8d203dca4c3c1b590948965\"\n dependencies = [\n  \"serde_derive\",\n ]\n@@ -5062,9 +5062,9 @@ dependencies = [\n \n [[package]]\n name = \"serde_derive\"\n-version = \"1.0.152\"\n+version = \"1.0.147\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"af487d118eecd09402d70a5d72551860e788df87b464af30e5ea6a38c75c541e\"\n+checksum = \"4f1d362ca8fc9c3e3a7484440752472d68a6caa98f1ab81d99b5dfe517cec852\"\n dependencies = [\n  \"proc-macro2\",\n  \"quote\",\n@@ -5082,9 +5082,9 @@ dependencies = [\n \n [[package]]\n name = \"serde_json\"\n-version = \"1.0.91\"\n+version = \"1.0.85\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"877c235533714907a8c2464236f5c4b2a17262ef1bd71f38f35ea592c8da6883\"\n+checksum = \"e55a28e3aaef9d5ce0506d0a14dbba8054ddc7e499ef522dd8b26859ec9d4a44\"\n dependencies = [\n  \"indexmap\",\n  \"itoa\",\n@@ -5400,9 +5400,9 @@ checksum = \"6bdef32e8150c2a081110b42772ffe7d7c9032b606bc226c8260fd97e0976601\"\n \n [[package]]\n name = \"syn\"\n-version = \"1.0.107\"\n+version = \"1.0.102\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"1f4064b5b16e03ae50984a5a8ed5d4f8803e6bc1fd170a3cda91a1be4b18e3f5\"\n+checksum = \"3fcd952facd492f9be3ef0d0b7032a6e442ee9b361d4acc2b1d0c4aaa5f613a1\"\n dependencies = [\n  \"proc-macro2\",\n  \"quote\",\n@@ -5576,7 +5576,6 @@ dependencies = [\n  \"lazy_static\",\n  \"miropt-test-tools\",\n  \"regex\",\n- \"semver\",\n  \"termcolor\",\n  \"walkdir\",\n ]"}, {"sha": "9cf43fc7a2193f1b67c5cd51e2927e98dff7b941", "filename": "src/bootstrap/bootstrap.py", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/1a993611d2f539eeea272694e5efbb30bdeff04e/src%2Fbootstrap%2Fbootstrap.py", "raw_url": "https://github.com/rust-lang/rust/raw/1a993611d2f539eeea272694e5efbb30bdeff04e/src%2Fbootstrap%2Fbootstrap.py", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fbootstrap.py?ref=1a993611d2f539eeea272694e5efbb30bdeff04e", "patch": "@@ -934,7 +934,8 @@ def main():\n     if len(sys.argv) > 1 and sys.argv[1] == 'help':\n         sys.argv = [sys.argv[0], '-h'] + sys.argv[2:]\n \n-    help_triggered = len(sys.argv) == 1 or any(x in [\"-h\", \"--help\", \"--version\"] for x in sys.argv)\n+    help_triggered = (\n+        '-h' in sys.argv) or ('--help' in sys.argv) or (len(sys.argv) == 1)\n     try:\n         bootstrap(help_triggered)\n         if not help_triggered:"}, {"sha": "fff83a1d097b3f6364c180781b8bfdb6ec886dc6", "filename": "src/tools/tidy/Cargo.toml", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1a993611d2f539eeea272694e5efbb30bdeff04e/src%2Ftools%2Ftidy%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/1a993611d2f539eeea272694e5efbb30bdeff04e/src%2Ftools%2Ftidy%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Ftidy%2FCargo.toml?ref=1a993611d2f539eeea272694e5efbb30bdeff04e", "patch": "@@ -11,7 +11,6 @@ miropt-test-tools = { path = \"../miropt-test-tools\" }\n lazy_static = \"1\"\n walkdir = \"2\"\n ignore = \"0.4.18\"\n-semver = \"1.0.14\"\n termcolor = \"1.1.3\"\n \n [[bin]]"}, {"sha": "bf6e2cc250f3d2fbddbe78b46c6867cb53711546", "filename": "src/tools/tidy/src/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1a993611d2f539eeea272694e5efbb30bdeff04e/src%2Ftools%2Ftidy%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1a993611d2f539eeea272694e5efbb30bdeff04e/src%2Ftools%2Ftidy%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Ftidy%2Fsrc%2Flib.rs?ref=1a993611d2f539eeea272694e5efbb30bdeff04e", "patch": "@@ -68,4 +68,3 @@ pub mod ui_tests;\n pub mod unit_tests;\n pub mod unstable_book;\n pub mod walk;\n-pub mod x_version;"}, {"sha": "e15a71422a864c527d0c659d772d432160a6edbf", "filename": "src/tools/tidy/src/main.rs", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1a993611d2f539eeea272694e5efbb30bdeff04e/src%2Ftools%2Ftidy%2Fsrc%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1a993611d2f539eeea272694e5efbb30bdeff04e/src%2Ftools%2Ftidy%2Fsrc%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Ftidy%2Fsrc%2Fmain.rs?ref=1a993611d2f539eeea272694e5efbb30bdeff04e", "patch": "@@ -60,7 +60,7 @@ fn main() {\n \n                 let handle = s.spawn(|| {\n                     let mut flag = false;\n-                    $p::check($($args, )* &mut flag);\n+                    $p::check($($args),* , &mut flag);\n                     if (flag) {\n                         bad.store(true, Ordering::Relaxed);\n                     }\n@@ -112,8 +112,6 @@ fn main() {\n         check!(alphabetical, &compiler_path);\n         check!(alphabetical, &library_path);\n \n-        check!(x_version, &root_path, &cargo);\n-\n         let collected = {\n             drain_handles(&mut handles);\n "}, {"sha": "5dc6a0588c32bc1dc10a9fba6ab0664db9699f66", "filename": "src/tools/tidy/src/x_version.rs", "status": "removed", "additions": 0, "deletions": 65, "changes": 65, "blob_url": "https://github.com/rust-lang/rust/blob/b22c152958eade17a71d899b29a2d39bcc77aa48/src%2Ftools%2Ftidy%2Fsrc%2Fx_version.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b22c152958eade17a71d899b29a2d39bcc77aa48/src%2Ftools%2Ftidy%2Fsrc%2Fx_version.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Ftidy%2Fsrc%2Fx_version.rs?ref=b22c152958eade17a71d899b29a2d39bcc77aa48", "patch": "@@ -1,65 +0,0 @@\n-use semver::Version;\n-use std::io::ErrorKind;\n-use std::path::Path;\n-use std::process::{Command, Stdio};\n-\n-pub fn check(root: &Path, cargo: &Path, bad: &mut bool) {\n-    let result = Command::new(\"x\").arg(\"--wrapper-version\").stdout(Stdio::piped()).spawn();\n-    // This runs the command inside a temporary directory.\n-    // This allows us to compare output of result to see if `--wrapper-version` is not a recognized argument to x.\n-    let temp_result = Command::new(\"x\")\n-        .arg(\"--wrapper-version\")\n-        .current_dir(std::env::temp_dir())\n-        .stdout(Stdio::piped())\n-        .spawn();\n-\n-    let (child, temp_child) = match (result, temp_result) {\n-        (Ok(child), Ok(temp_child)) => (child, temp_child),\n-        (Err(e), _) | (_, Err(e)) => match e.kind() {\n-            ErrorKind::NotFound => return,\n-            _ => return tidy_error!(bad, \"failed to run `x`: {}\", e),\n-        },\n-    };\n-\n-    let output = child.wait_with_output().unwrap();\n-    let temp_output = temp_child.wait_with_output().unwrap();\n-\n-    if output != temp_output {\n-        return tidy_error!(\n-            bad,\n-            \"Current version of x does not support the `--wrapper-version` argument\\nConsider updating to the newer version of x by running `cargo install --path src/tools/x`\"\n-        );\n-    }\n-\n-    if output.status.success() {\n-        let version = String::from_utf8_lossy(&output.stdout);\n-        let version = Version::parse(version.trim_end()).unwrap();\n-\n-        if let Some(expected) = get_x_wrapper_version(root, cargo) {\n-            if version < expected {\n-                return tidy_error!(\n-                    bad,\n-                    \"Current version of x is {version}, but the latest version is {expected}\\nConsider updating to the newer version of x by running `cargo install --path src/tools/x`\"\n-                );\n-            }\n-        } else {\n-            return tidy_error!(\n-                bad,\n-                \"Unable to parse the latest version of `x` at `src/tools/x/Cargo.toml`\"\n-            );\n-        }\n-    } else {\n-        return tidy_error!(bad, \"failed to check version of `x`: {}\", output.status);\n-    }\n-}\n-\n-// Parse latest version out of `x` Cargo.toml\n-fn get_x_wrapper_version(root: &Path, cargo: &Path) -> Option<Version> {\n-    let mut cmd = cargo_metadata::MetadataCommand::new();\n-    cmd.cargo_path(cargo)\n-        .manifest_path(root.join(\"src/tools/x/Cargo.toml\"))\n-        .no_deps()\n-        .features(cargo_metadata::CargoOpt::AllFeatures);\n-    let mut metadata = t!(cmd.exec());\n-    metadata.packages.pop().map(|x| x.version)\n-}"}, {"sha": "f07ff43efe987fec445e76d8102f6c2bbdcabd4a", "filename": "src/tools/x/src/main.rs", "status": "modified", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/1a993611d2f539eeea272694e5efbb30bdeff04e/src%2Ftools%2Fx%2Fsrc%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1a993611d2f539eeea272694e5efbb30bdeff04e/src%2Ftools%2Fx%2Fsrc%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fx%2Fsrc%2Fmain.rs?ref=1a993611d2f539eeea272694e5efbb30bdeff04e", "patch": "@@ -52,14 +52,6 @@ fn exec_or_status(command: &mut Command) -> io::Result<ExitStatus> {\n }\n \n fn main() {\n-    match env::args().skip(1).next().as_deref() {\n-        Some(\"--wrapper-version\") => {\n-            let version = env!(\"CARGO_PKG_VERSION\");\n-            println!(\"{}\", version);\n-            return;\n-        }\n-        _ => {}\n-    }\n     let current = match env::current_dir() {\n         Ok(dir) => dir,\n         Err(err) => {"}]}