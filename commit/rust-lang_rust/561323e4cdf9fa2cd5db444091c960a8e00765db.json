{"sha": "561323e4cdf9fa2cd5db444091c960a8e00765db", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU2MTMyM2U0Y2RmOWZhMmNkNWRiNDQ0MDkxYzk2MGE4ZTAwNzY1ZGI=", "commit": {"author": {"name": "Mark Story", "email": "mark@mark-story.com", "date": "2016-01-23T03:33:59Z"}, "committer": {"name": "Mark Story", "email": "mark@mark-story.com", "date": "2016-01-23T03:33:59Z"}, "message": "Update the README concerning write modes.\n\nAdd checkstyle and more detail on each of the write modes.", "tree": {"sha": "dfd4703003d8e5fff0ee93e91ec6ec20569ecf91", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/dfd4703003d8e5fff0ee93e91ec6ec20569ecf91"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/561323e4cdf9fa2cd5db444091c960a8e00765db", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/561323e4cdf9fa2cd5db444091c960a8e00765db", "html_url": "https://github.com/rust-lang/rust/commit/561323e4cdf9fa2cd5db444091c960a8e00765db", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/561323e4cdf9fa2cd5db444091c960a8e00765db/comments", "author": {"login": "markstory", "id": 24086, "node_id": "MDQ6VXNlcjI0MDg2", "avatar_url": "https://avatars.githubusercontent.com/u/24086?v=4", "gravatar_id": "", "url": "https://api.github.com/users/markstory", "html_url": "https://github.com/markstory", "followers_url": "https://api.github.com/users/markstory/followers", "following_url": "https://api.github.com/users/markstory/following{/other_user}", "gists_url": "https://api.github.com/users/markstory/gists{/gist_id}", "starred_url": "https://api.github.com/users/markstory/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/markstory/subscriptions", "organizations_url": "https://api.github.com/users/markstory/orgs", "repos_url": "https://api.github.com/users/markstory/repos", "events_url": "https://api.github.com/users/markstory/events{/privacy}", "received_events_url": "https://api.github.com/users/markstory/received_events", "type": "User", "site_admin": false}, "committer": {"login": "markstory", "id": 24086, "node_id": "MDQ6VXNlcjI0MDg2", "avatar_url": "https://avatars.githubusercontent.com/u/24086?v=4", "gravatar_id": "", "url": "https://api.github.com/users/markstory", "html_url": "https://github.com/markstory", "followers_url": "https://api.github.com/users/markstory/followers", "following_url": "https://api.github.com/users/markstory/following{/other_user}", "gists_url": "https://api.github.com/users/markstory/gists{/gist_id}", "starred_url": "https://api.github.com/users/markstory/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/markstory/subscriptions", "organizations_url": "https://api.github.com/users/markstory/orgs", "repos_url": "https://api.github.com/users/markstory/repos", "events_url": "https://api.github.com/users/markstory/events{/privacy}", "received_events_url": "https://api.github.com/users/markstory/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "81516fe8ca6fb30cba2127685d3870fee31d81ea", "url": "https://api.github.com/repos/rust-lang/rust/commits/81516fe8ca6fb30cba2127685d3870fee31d81ea", "html_url": "https://github.com/rust-lang/rust/commit/81516fe8ca6fb30cba2127685d3870fee31d81ea"}], "stats": {"total": 19, "additions": 11, "deletions": 8}, "files": [{"sha": "b8344ac770cdeb8897999a63223203502c449ab7", "filename": "README.md", "status": "modified", "additions": 11, "deletions": 8, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/561323e4cdf9fa2cd5db444091c960a8e00765db/README.md", "raw_url": "https://github.com/rust-lang/rust/raw/561323e4cdf9fa2cd5db444091c960a8e00765db/README.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/README.md?ref=561323e4cdf9fa2cd5db444091c960a8e00765db", "patch": "@@ -51,14 +51,17 @@ read data from stdin. Alternatively, you can use `cargo fmt` to format all\n binary and library targets of your crate.\n \n You'll probably want to specify the write mode. Currently, there are modes for\n-replace, overwrite, display, and coverage. The replace mode is the default\n-and overwrites the original files after renaming them. In overwrite mode,\n-rustfmt does not backup the source files. To print the output to stdout, use the\n-display mode. The write mode can be set by passing the `--write-mode` flag on\n-the command line.\n-\n-`rustfmt filename --write-mode=display` prints the output of rustfmt to the\n-screen, for example.\n+diff, replace, overwrite, display, coverage, and checkstyle.\n+\n+* `replace` Is the default and overwrites the original files after renaming them.\n+* `overwrite` rustfmt does not backup the source files.\n+* `display` Will print the formatted file to stdout.\n+* `diff` Will print a diff between the current file and formatted file to stdout.\n+* `checkstyle` Will output the lines that need to be corrected as a checkstyle XML file,\n+  that can be used by tools like Jenkins.\n+\n+The write mode can be set by passing the `--write-mode` flag on\n+the command line. For example `rustfmt --write-mode=display src/filename.rs`\n \n You can run `rustfmt --help` for more information.\n "}]}