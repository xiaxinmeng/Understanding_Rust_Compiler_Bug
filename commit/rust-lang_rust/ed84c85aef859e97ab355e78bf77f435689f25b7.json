{"sha": "ed84c85aef859e97ab355e78bf77f435689f25b7", "node_id": "MDY6Q29tbWl0NzI0NzEyOmVkODRjODVhZWY4NTllOTdhYjM1NWU3OGJmNzdmNDM1Njg5ZjI1Yjc=", "commit": {"author": {"name": "Emil Lauridsen", "email": "mine809@gmail.com", "date": "2019-12-27T11:42:18Z"}, "committer": {"name": "Emil Lauridsen", "email": "mine809@gmail.com", "date": "2019-12-27T11:42:18Z"}, "message": "Fix shutdown behavoir of main cargo-watch thread.\n\nEven though this didn't error, it became clear to me that it was closing\nthe wrong channel, resulting in the child thread never finishing.", "tree": {"sha": "43fb1ad30dfc2bcf9cbe87908670813530111708", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/43fb1ad30dfc2bcf9cbe87908670813530111708"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ed84c85aef859e97ab355e78bf77f435689f25b7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ed84c85aef859e97ab355e78bf77f435689f25b7", "html_url": "https://github.com/rust-lang/rust/commit/ed84c85aef859e97ab355e78bf77f435689f25b7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ed84c85aef859e97ab355e78bf77f435689f25b7/comments", "author": {"login": "kiljacken", "id": 209321, "node_id": "MDQ6VXNlcjIwOTMyMQ==", "avatar_url": "https://avatars.githubusercontent.com/u/209321?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kiljacken", "html_url": "https://github.com/kiljacken", "followers_url": "https://api.github.com/users/kiljacken/followers", "following_url": "https://api.github.com/users/kiljacken/following{/other_user}", "gists_url": "https://api.github.com/users/kiljacken/gists{/gist_id}", "starred_url": "https://api.github.com/users/kiljacken/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kiljacken/subscriptions", "organizations_url": "https://api.github.com/users/kiljacken/orgs", "repos_url": "https://api.github.com/users/kiljacken/repos", "events_url": "https://api.github.com/users/kiljacken/events{/privacy}", "received_events_url": "https://api.github.com/users/kiljacken/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kiljacken", "id": 209321, "node_id": "MDQ6VXNlcjIwOTMyMQ==", "avatar_url": "https://avatars.githubusercontent.com/u/209321?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kiljacken", "html_url": "https://github.com/kiljacken", "followers_url": "https://api.github.com/users/kiljacken/followers", "following_url": "https://api.github.com/users/kiljacken/following{/other_user}", "gists_url": "https://api.github.com/users/kiljacken/gists{/gist_id}", "starred_url": "https://api.github.com/users/kiljacken/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kiljacken/subscriptions", "organizations_url": "https://api.github.com/users/kiljacken/orgs", "repos_url": "https://api.github.com/users/kiljacken/repos", "events_url": "https://api.github.com/users/kiljacken/events{/privacy}", "received_events_url": "https://api.github.com/users/kiljacken/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "59837c75f44f4b1b6a09e8db7e59a7bbd78d074a", "url": "https://api.github.com/repos/rust-lang/rust/commits/59837c75f44f4b1b6a09e8db7e59a7bbd78d074a", "html_url": "https://github.com/rust-lang/rust/commit/59837c75f44f4b1b6a09e8db7e59a7bbd78d074a"}], "stats": {"total": 15, "additions": 8, "deletions": 7}, "files": [{"sha": "11b624abfe1fd6d9457e381471f65968209c461f", "filename": "crates/ra_cargo_watch/src/lib.rs", "status": "modified", "additions": 8, "deletions": 7, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/ed84c85aef859e97ab355e78bf77f435689f25b7/crates%2Fra_cargo_watch%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ed84c85aef859e97ab355e78bf77f435689f25b7/crates%2Fra_cargo_watch%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_cargo_watch%2Fsrc%2Flib.rs?ref=ed84c85aef859e97ab355e78bf77f435689f25b7", "patch": "@@ -36,7 +36,7 @@ pub struct CheckOptions {\n #[derive(Debug)]\n pub struct CheckWatcher {\n     pub task_recv: Receiver<CheckTask>,\n-    pub cmd_send: Sender<CheckCommand>,\n+    pub cmd_send: Option<Sender<CheckCommand>>,\n     pub shared: Arc<RwLock<CheckWatcherSharedState>>,\n     handle: Option<JoinHandle<()>>,\n }\n@@ -53,23 +53,24 @@ impl CheckWatcher {\n             let mut check = CheckWatcherState::new(options, workspace_root, shared_);\n             check.run(&task_send, &cmd_recv);\n         });\n-        CheckWatcher { task_recv, cmd_send, handle: Some(handle), shared }\n+        CheckWatcher { task_recv, cmd_send: Some(cmd_send), handle: Some(handle), shared }\n     }\n \n     /// Schedule a re-start of the cargo check worker.\n     pub fn update(&self) {\n-        self.cmd_send.send(CheckCommand::Update).unwrap();\n+        if let Some(cmd_send) = &self.cmd_send {\n+            cmd_send.send(CheckCommand::Update).unwrap();\n+        }\n     }\n }\n \n impl std::ops::Drop for CheckWatcher {\n     fn drop(&mut self) {\n         if let Some(handle) = self.handle.take() {\n-            // Replace our reciever with dummy one, so we can drop and close the\n-            // one actually communicating with the thread\n-            let recv = std::mem::replace(&mut self.task_recv, crossbeam_channel::never());\n+            // Take the sender out of the option\n+            let recv = self.cmd_send.take();\n \n-            // Dropping the original reciever finishes the thread loop\n+            // Dropping the sender finishes the thread loop\n             drop(recv);\n \n             // Join the thread, it should finish shortly. We don't really care"}]}