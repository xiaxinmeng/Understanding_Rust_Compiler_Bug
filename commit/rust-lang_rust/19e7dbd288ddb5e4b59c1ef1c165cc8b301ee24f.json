{"sha": "19e7dbd288ddb5e4b59c1ef1c165cc8b301ee24f", "node_id": "C_kwDOAAsO6NoAKDE5ZTdkYmQyODhkZGI1ZTRiNTljMWVmMWMxNjVjYzhiMzAxZWUyNGY", "commit": {"author": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2022-12-13T09:20:37Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-12-13T09:20:37Z"}, "message": "Improve rustdoc markdown variable naming", "tree": {"sha": "fe57b39a98bbdee3fb5cc6120ce0404d0f9376d0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fe57b39a98bbdee3fb5cc6120ce0404d0f9376d0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/19e7dbd288ddb5e4b59c1ef1c165cc8b301ee24f", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJjmEPlCRBK7hj4Ov3rIwAAShgIAGKpBuxE33pmcYdbABZngh8W\nfxoN54pzkNYLYOuLftM8f9amatkDZgisz4lEpa2cdK6lvuH5uPlso02rhFPxWR7h\ncwwjxD5CX+YpTQ+G4CEIeYTe5+yNapWaQu3bXpQmzKZ59qM0AMW/n2mZP4DvXnZg\nRkJFYdqDOYuLhWr08nlgEKHqjRWFWJBKq4QSy0N3Ql+zwrlsvONGdmMhii/nn53C\nF5NeS5CmquRMM8fcZC5nNNP6kXEzm4rvQuxOokbil0CcYdcFMw52wKw7tuAo74Vu\nuB2O7e9r9GyhfrmpQxZ1n3KcwuzzcxvXFVKM1Ud1xvQ3DnvjKL8V813E13eS1XU=\n=q0kM\n-----END PGP SIGNATURE-----\n", "payload": "tree fe57b39a98bbdee3fb5cc6120ce0404d0f9376d0\nparent 71ec1457ee9868a838e4521a3510cdd416c0c295\nauthor Guillaume Gomez <guillaume1.gomez@gmail.com> 1670923237 +0100\ncommitter GitHub <noreply@github.com> 1670923237 +0100\n\nImprove rustdoc markdown variable naming"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/19e7dbd288ddb5e4b59c1ef1c165cc8b301ee24f", "html_url": "https://github.com/rust-lang/rust/commit/19e7dbd288ddb5e4b59c1ef1c165cc8b301ee24f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/19e7dbd288ddb5e4b59c1ef1c165cc8b301ee24f/comments", "author": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "71ec1457ee9868a838e4521a3510cdd416c0c295", "url": "https://api.github.com/repos/rust-lang/rust/commits/71ec1457ee9868a838e4521a3510cdd416c0c295", "html_url": "https://github.com/rust-lang/rust/commit/71ec1457ee9868a838e4521a3510cdd416c0c295"}], "stats": {"total": 10, "additions": 5, "deletions": 5}, "files": [{"sha": "b141820fe423c549217a41e58745f56d763009b6", "filename": "src/librustdoc/html/markdown.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/19e7dbd288ddb5e4b59c1ef1c165cc8b301ee24f/src%2Flibrustdoc%2Fhtml%2Fmarkdown.rs", "raw_url": "https://github.com/rust-lang/rust/raw/19e7dbd288ddb5e4b59c1ef1c165cc8b301ee24f/src%2Flibrustdoc%2Fhtml%2Fmarkdown.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fmarkdown.rs?ref=19e7dbd288ddb5e4b59c1ef1c165cc8b301ee24f", "patch": "@@ -236,12 +236,12 @@ impl<'a, I: Iterator<Item = Event<'a>>> Iterator for CodeBlocks<'_, 'a, I> {\n             return event;\n         };\n \n-        let mut origtext = String::new();\n+        let mut original_text = String::new();\n         for event in &mut self.inner {\n             match event {\n                 Event::End(Tag::CodeBlock(..)) => break,\n                 Event::Text(ref s) => {\n-                    origtext.push_str(s);\n+                    original_text.push_str(s);\n                 }\n                 _ => {}\n             }\n@@ -258,7 +258,7 @@ impl<'a, I: Iterator<Item = Event<'a>>> Iterator for CodeBlocks<'_, 'a, I> {\n                                  <pre class=\\\"language-{}\\\"><code>{}</code></pre>\\\n                              </div>\",\n                             lang,\n-                            Escape(&origtext),\n+                            Escape(&original_text),\n                         )\n                         .into(),\n                     ));\n@@ -268,7 +268,7 @@ impl<'a, I: Iterator<Item = Event<'a>>> Iterator for CodeBlocks<'_, 'a, I> {\n             CodeBlockKind::Indented => Default::default(),\n         };\n \n-        let lines = origtext.lines().filter_map(|l| map_line(l).for_html());\n+        let lines = original_text.lines().filter_map(|l| map_line(l).for_html());\n         let text = lines.intersperse(\"\\n\".into()).collect::<String>();\n \n         compile_fail = parse_result.compile_fail;\n@@ -285,7 +285,7 @@ impl<'a, I: Iterator<Item = Event<'a>>> Iterator for CodeBlocks<'_, 'a, I> {\n             if url.is_empty() {\n                 return None;\n             }\n-            let test = origtext\n+            let test = original_text\n                 .lines()\n                 .map(|l| map_line(l).for_code())\n                 .intersperse(\"\\n\".into())"}]}