{"sha": "acd7552698d374fbf95b08f55cf9eba3e4ff863d", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFjZDc1NTI2OThkMzc0ZmJmOTViMDhmNTVjZjllYmEzZTRmZjg2M2Q=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2018-08-12T18:47:27Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2018-08-12T18:47:27Z"}, "message": "Simplify", "tree": {"sha": "02eb232b79f43d8b16534c25091820178fe8f4f2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/02eb232b79f43d8b16534c25091820178fe8f4f2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/acd7552698d374fbf95b08f55cf9eba3e4ff863d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/acd7552698d374fbf95b08f55cf9eba3e4ff863d", "html_url": "https://github.com/rust-lang/rust/commit/acd7552698d374fbf95b08f55cf9eba3e4ff863d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/acd7552698d374fbf95b08f55cf9eba3e4ff863d/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "58c3370819666b1caf23f6d06443d215be99e6d4", "url": "https://api.github.com/repos/rust-lang/rust/commits/58c3370819666b1caf23f6d06443d215be99e6d4", "html_url": "https://github.com/rust-lang/rust/commit/58c3370819666b1caf23f6d06443d215be99e6d4"}], "stats": {"total": 36, "additions": 15, "deletions": 21}, "files": [{"sha": "fe94e901e378aee0706a795e2d7d4a3e831c855d", "filename": "crates/server/src/main.rs", "status": "modified", "additions": 15, "deletions": 21, "changes": 36, "blob_url": "https://github.com/rust-lang/rust/blob/acd7552698d374fbf95b08f55cf9eba3e4ff863d/crates%2Fserver%2Fsrc%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/acd7552698d374fbf95b08f55cf9eba3e4ff863d/crates%2Fserver%2Fsrc%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fserver%2Fsrc%2Fmain.rs?ref=acd7552698d374fbf95b08f55cf9eba3e4ff863d", "patch": "@@ -78,6 +78,11 @@ fn main_inner() -> Result<()> {\n fn initialize(io: &mut Io) -> Result<()> {\n     loop {\n         match io.recv()? {\n+            RawMsg::Notification(n) =>\n+                bail!(\"expected initialize request, got {:?}\", n),\n+            RawMsg::Response(res) =>\n+                bail!(\"expected initialize request, got {:?}\", res),\n+\n             RawMsg::Request(req) => {\n                 let mut req = Some(req);\n                 dispatch::handle_request::<req::Initialize, _>(&mut req, |_params, resp| {\n@@ -86,33 +91,22 @@ fn initialize(io: &mut Io) -> Result<()> {\n                     io.send(RawMsg::Response(resp));\n                     Ok(())\n                 })?;\n-                match req {\n-                    None => {\n-                        match io.recv()? {\n-                            RawMsg::Notification(n) => {\n-                                if n.method != \"initialized\" {\n-                                    bail!(\"expected initialized notification\");\n-                                }\n-                            }\n-                            _ => {\n-                                bail!(\"expected initialized notification\");\n-                            }\n+                if let Some(req) = req {\n+                    bail!(\"expected initialize request, got {:?}\", req)\n+                }\n+                match io.recv()? {\n+                    RawMsg::Notification(n) => {\n+                        if n.method != \"initialized\" {\n+                            bail!(\"expected initialized notification\");\n                         }\n-                        return initialized(io);\n-                    }\n-                    Some(req) => {\n-                        bail!(\"expected initialize request, got {:?}\", req)\n                     }\n+                    _ => bail!(\"expected initialized notification\"),\n                 }\n-            }\n-            RawMsg::Notification(n) => {\n-                bail!(\"expected initialize request, got {:?}\", n)\n-            }\n-            RawMsg::Response(res) => {\n-                bail!(\"expected initialize request, got {:?}\", res)\n+                break;\n             }\n         }\n     }\n+    initialized(io)\n }\n \n enum Task {"}]}