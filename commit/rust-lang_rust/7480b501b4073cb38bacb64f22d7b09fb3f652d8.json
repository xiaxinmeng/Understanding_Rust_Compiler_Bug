{"sha": "7480b501b4073cb38bacb64f22d7b09fb3f652d8", "node_id": "C_kwDOAAsO6NoAKDc0ODBiNTAxYjQwNzNjYjM4YmFjYjY0ZjIyZDdiMDlmYjNmNjUyZDg", "commit": {"author": {"name": "Nicholas Nethercote", "email": "n.nethercote@gmail.com", "date": "2022-06-02T01:31:23Z"}, "committer": {"name": "Nicholas Nethercote", "email": "n.nethercote@gmail.com", "date": "2022-06-07T23:22:23Z"}, "message": "Avoid some unnecessary `return`s.", "tree": {"sha": "01e9e09564a8b1b06b847b82c3b926d9c975310c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/01e9e09564a8b1b06b847b82c3b926d9c975310c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7480b501b4073cb38bacb64f22d7b09fb3f652d8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7480b501b4073cb38bacb64f22d7b09fb3f652d8", "html_url": "https://github.com/rust-lang/rust/commit/7480b501b4073cb38bacb64f22d7b09fb3f652d8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7480b501b4073cb38bacb64f22d7b09fb3f652d8/comments", "author": {"login": "nnethercote", "id": 1940286, "node_id": "MDQ6VXNlcjE5NDAyODY=", "avatar_url": "https://avatars.githubusercontent.com/u/1940286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nnethercote", "html_url": "https://github.com/nnethercote", "followers_url": "https://api.github.com/users/nnethercote/followers", "following_url": "https://api.github.com/users/nnethercote/following{/other_user}", "gists_url": "https://api.github.com/users/nnethercote/gists{/gist_id}", "starred_url": "https://api.github.com/users/nnethercote/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nnethercote/subscriptions", "organizations_url": "https://api.github.com/users/nnethercote/orgs", "repos_url": "https://api.github.com/users/nnethercote/repos", "events_url": "https://api.github.com/users/nnethercote/events{/privacy}", "received_events_url": "https://api.github.com/users/nnethercote/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nnethercote", "id": 1940286, "node_id": "MDQ6VXNlcjE5NDAyODY=", "avatar_url": "https://avatars.githubusercontent.com/u/1940286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nnethercote", "html_url": "https://github.com/nnethercote", "followers_url": "https://api.github.com/users/nnethercote/followers", "following_url": "https://api.github.com/users/nnethercote/following{/other_user}", "gists_url": "https://api.github.com/users/nnethercote/gists{/gist_id}", "starred_url": "https://api.github.com/users/nnethercote/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nnethercote/subscriptions", "organizations_url": "https://api.github.com/users/nnethercote/orgs", "repos_url": "https://api.github.com/users/nnethercote/repos", "events_url": "https://api.github.com/users/nnethercote/events{/privacy}", "received_events_url": "https://api.github.com/users/nnethercote/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "23880a058bd9e3c482deaa8f6e6d6a5d3d6f7112", "url": "https://api.github.com/repos/rust-lang/rust/commits/23880a058bd9e3c482deaa8f6e6d6a5d3d6f7112", "html_url": "https://github.com/rust-lang/rust/commit/23880a058bd9e3c482deaa8f6e6d6a5d3d6f7112"}], "stats": {"total": 13, "additions": 3, "deletions": 10}, "files": [{"sha": "64c0c0f4f6415d4bcde9b8db8952238208316499", "filename": "compiler/rustc_infer/src/infer/freshen.rs", "status": "modified", "additions": 3, "deletions": 10, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/7480b501b4073cb38bacb64f22d7b09fb3f652d8/compiler%2Frustc_infer%2Fsrc%2Finfer%2Ffreshen.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7480b501b4073cb38bacb64f22d7b09fb3f652d8/compiler%2Frustc_infer%2Fsrc%2Finfer%2Ffreshen.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_infer%2Fsrc%2Finfer%2Ffreshen.rs?ref=7480b501b4073cb38bacb64f22d7b09fb3f652d8", "patch": "@@ -228,12 +228,7 @@ impl<'a, 'tcx> TypeFolder<'tcx> for TypeFreshener<'a, 'tcx> {\n                     .probe_value(v)\n                     .val\n                     .known();\n-                return self.freshen_const(\n-                    opt_ct,\n-                    ty::InferConst::Var(v),\n-                    ty::InferConst::Fresh,\n-                    ct.ty(),\n-                );\n+                self.freshen_const(opt_ct, ty::InferConst::Var(v), ty::InferConst::Fresh, ct.ty())\n             }\n             ty::ConstKind::Infer(ty::InferConst::Fresh(i)) => {\n                 if i >= self.const_freshen_count {\n@@ -244,7 +239,7 @@ impl<'a, 'tcx> TypeFolder<'tcx> for TypeFreshener<'a, 'tcx> {\n                         self.const_freshen_count,\n                     );\n                 }\n-                return ct;\n+                ct\n             }\n \n             ty::ConstKind::Bound(..) | ty::ConstKind::Placeholder(_) => {\n@@ -254,9 +249,7 @@ impl<'a, 'tcx> TypeFolder<'tcx> for TypeFreshener<'a, 'tcx> {\n             ty::ConstKind::Param(_)\n             | ty::ConstKind::Value(_)\n             | ty::ConstKind::Unevaluated(..)\n-            | ty::ConstKind::Error(_) => {}\n+            | ty::ConstKind::Error(_) => ct.super_fold_with(self),\n         }\n-\n-        ct.super_fold_with(self)\n     }\n }"}]}