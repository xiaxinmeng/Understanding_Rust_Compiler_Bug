{"sha": "9a72b7bccde54d901f3d89300777e0685790aefd", "node_id": "MDY6Q29tbWl0NzI0NzEyOjlhNzJiN2JjY2RlNTRkOTAxZjNkODkzMDA3NzdlMDY4NTc5MGFlZmQ=", "commit": {"author": {"name": "Kirill Bulatov", "email": "mail4score@gmail.com", "date": "2020-10-10T16:51:02Z"}, "committer": {"name": "Kirill Bulatov", "email": "mail4score@gmail.com", "date": "2020-10-10T17:02:38Z"}, "message": "Add a test", "tree": {"sha": "ac38bcfd0d5436f6c08c69804d183851b121950f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ac38bcfd0d5436f6c08c69804d183851b121950f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9a72b7bccde54d901f3d89300777e0685790aefd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9a72b7bccde54d901f3d89300777e0685790aefd", "html_url": "https://github.com/rust-lang/rust/commit/9a72b7bccde54d901f3d89300777e0685790aefd", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9a72b7bccde54d901f3d89300777e0685790aefd/comments", "author": {"login": "SomeoneToIgnore", "id": 2690773, "node_id": "MDQ6VXNlcjI2OTA3NzM=", "avatar_url": "https://avatars.githubusercontent.com/u/2690773?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SomeoneToIgnore", "html_url": "https://github.com/SomeoneToIgnore", "followers_url": "https://api.github.com/users/SomeoneToIgnore/followers", "following_url": "https://api.github.com/users/SomeoneToIgnore/following{/other_user}", "gists_url": "https://api.github.com/users/SomeoneToIgnore/gists{/gist_id}", "starred_url": "https://api.github.com/users/SomeoneToIgnore/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SomeoneToIgnore/subscriptions", "organizations_url": "https://api.github.com/users/SomeoneToIgnore/orgs", "repos_url": "https://api.github.com/users/SomeoneToIgnore/repos", "events_url": "https://api.github.com/users/SomeoneToIgnore/events{/privacy}", "received_events_url": "https://api.github.com/users/SomeoneToIgnore/received_events", "type": "User", "site_admin": false}, "committer": {"login": "SomeoneToIgnore", "id": 2690773, "node_id": "MDQ6VXNlcjI2OTA3NzM=", "avatar_url": "https://avatars.githubusercontent.com/u/2690773?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SomeoneToIgnore", "html_url": "https://github.com/SomeoneToIgnore", "followers_url": "https://api.github.com/users/SomeoneToIgnore/followers", "following_url": "https://api.github.com/users/SomeoneToIgnore/following{/other_user}", "gists_url": "https://api.github.com/users/SomeoneToIgnore/gists{/gist_id}", "starred_url": "https://api.github.com/users/SomeoneToIgnore/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SomeoneToIgnore/subscriptions", "organizations_url": "https://api.github.com/users/SomeoneToIgnore/orgs", "repos_url": "https://api.github.com/users/SomeoneToIgnore/repos", "events_url": "https://api.github.com/users/SomeoneToIgnore/events{/privacy}", "received_events_url": "https://api.github.com/users/SomeoneToIgnore/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b7596d248382aa88b81da4dd6c7598993bc4b787", "url": "https://api.github.com/repos/rust-lang/rust/commits/b7596d248382aa88b81da4dd6c7598993bc4b787", "html_url": "https://github.com/rust-lang/rust/commit/b7596d248382aa88b81da4dd6c7598993bc4b787"}], "stats": {"total": 62, "additions": 39, "deletions": 23}, "files": [{"sha": "08ef49a27b6dc23fc681e3e640070fe86747b19d", "filename": "crates/ide/src/inlay_hints.rs", "status": "modified", "additions": 39, "deletions": 23, "changes": 62, "blob_url": "https://github.com/rust-lang/rust/blob/9a72b7bccde54d901f3d89300777e0685790aefd/crates%2Fide%2Fsrc%2Finlay_hints.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9a72b7bccde54d901f3d89300777e0685790aefd/crates%2Fide%2Fsrc%2Finlay_hints.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Finlay_hints.rs?ref=9a72b7bccde54d901f3d89300777e0685790aefd", "patch": "@@ -228,6 +228,8 @@ fn hint_iterator(\n             _ => None,\n         })?;\n         if let Some(ty) = ty.normalize_trait_assoc_type(db, iter_trait, &[], assoc_type_item) {\n+            // TODO kb also check for the iterator impls for this ty\n+            dbg!(ty.display(db).to_string());\n             const LABEL_START: &str = \"impl Iterator<Item = \";\n             const LABEL_END: &str = \">\";\n \n@@ -1002,18 +1004,6 @@ fn main() {\n \n     println!(\"Unit expr\");\n }\n-\n-//- /alloc.rs crate:alloc deps:core\n-mod collections {\n-    struct Vec<T> {}\n-    impl<T> Vec<T> {\n-        fn new() -> Self { Vec {} }\n-        fn push(&mut self, t: T) { }\n-    }\n-    impl<T> IntoIterator for Vec<T> {\n-        type Item=T;\n-    }\n-}\n \"#,\n         );\n     }\n@@ -1043,17 +1033,6 @@ fn main() {\n         //^ &str\n     }\n }\n-//- /alloc.rs crate:alloc deps:core\n-mod collections {\n-    struct Vec<T> {}\n-    impl<T> Vec<T> {\n-        fn new() -> Self { Vec {} }\n-        fn push(&mut self, t: T) { }\n-    }\n-    impl<T> IntoIterator for Vec<T> {\n-        type Item=T;\n-    }\n-}\n \"#,\n         );\n     }\n@@ -1183,4 +1162,41 @@ fn main() {\n             \"#]],\n         );\n     }\n+\n+    #[test]\n+    fn shorten_iterators_in_associated_params() {\n+        check_with_config(\n+            InlayHintsConfig {\n+                parameter_hints: false,\n+                type_hints: true,\n+                chaining_hints: true,\n+                max_length: None,\n+            },\n+            r#\"\n+use core::iter;\n+\n+pub struct SomeIter<T> {}\n+\n+impl<T> SomeIter<T> {\n+    pub fn new() -> Self { SomeIter {} }\n+    pub fn push(&mut self, t: T) {}\n+}\n+\n+impl<T> Iterator for SomeIter<T> {\n+    type Item = T;\n+    fn next(&mut self) -> Option<Self::Item> {\n+        None\n+    }\n+}\n+\n+fn main() {\n+    let mut some_iter = SomeIter::new();\n+      //^^^^^^^^^^^^^ SomeIter<Take<Repeat<i32>>>\n+      some_iter.push(iter::repeat(2).take(2));\n+    let zz = some_iter.take(2);\n+      //^^ impl Iterator<Item = Take<Repeat<i32>>>\n+}\n+\"#,\n+        );\n+    }\n }"}]}