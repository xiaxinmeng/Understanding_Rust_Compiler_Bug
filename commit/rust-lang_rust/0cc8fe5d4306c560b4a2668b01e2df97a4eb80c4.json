{"sha": "0cc8fe5d4306c560b4a2668b01e2df97a4eb80c4", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBjYzhmZTVkNDMwNmM1NjBiNGEyNjY4YjAxZTJkZjk3YTRlYjgwYzQ=", "commit": {"author": {"name": "Elichai Turkel", "email": "elichai.turkel@gmail.com", "date": "2019-12-12T14:03:23Z"}, "committer": {"name": "Elichai Turkel", "email": "elichai.turkel@gmail.com", "date": "2019-12-12T14:03:23Z"}, "message": "Change fmt docs for more delegations", "tree": {"sha": "3b7451a04b1b7c5a994a08135b73c0c4916bd0c8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3b7451a04b1b7c5a994a08135b73c0c4916bd0c8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0cc8fe5d4306c560b4a2668b01e2df97a4eb80c4", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQJNBAABCAA3FiEEC5PUstyhDoo+NyfXk4PN6ejman8FAl3ySKsZHGVsaWNoYWku\ndHVya2VsQGdtYWlsLmNvbQAKCRCTg83p6OZqf+HIEADYs7Aky7Y47Ia1Eh9mD5vo\n8OmHeS2jq5iq3UondxwTvkww9VsLVlgftU0V8yeLqeGw+NJgnf3La+xrkth8Ye+q\nY/O6Yg/q34JcCJiNRGjx4bpTFp2AVfm3n0PVUlrINcTjRlsUrx2Gg4KEa21iZsl2\nVZefG2Zsp9SGRQp7lxFza7jZze8ztqxO7ILz2Y5Zuc0XhJayN46lqjjCy5XzFeQW\nYNJ7QPD2ZFs8xmsW+awnqu2HvvX2tYa4pqZ8LVKFqXjbAVb25V24NTqG2KDvQnVq\nTSxfW4xZVYeOuwZGnyzm6+E/eOppXyaA0RBZvNFEwSK0C7cVh97TO6p6VmEEZjoK\nh/eBTGI4z9SHsg1Zrkejsfzx8Sm3oPe1hfg7Tojf9g3bc1T5UK3FJ26F2Rnnl+gm\nqNnlA+uNUpJ1Yy/V08OjpI6YRUHiz3BJgtEmZ2UD6pOhQzwUh8ciNuzgFQARehDb\nyXxpD3r05YRMZ6lmUawAOf1WtyYYZN7u8bGVL7lQeSngYbidvUtWEjQldQ3UZ+Iu\nx6Llik6Qt+JtGnCmeVw55RCQ51zWPoL6ZENQZVQpcnsua9GySvyu4xPZEBQtGS4R\n3eTDd773xPguzJ5je+SusRIkhPifTIZri4btWaIpU4Epqwpo4C5bgmM6mo24RREV\nQnQfy4wQiYTtuOx2yivtTw==\n=3yph\n-----END PGP SIGNATURE-----", "payload": "tree 3b7451a04b1b7c5a994a08135b73c0c4916bd0c8\nparent f284f8b4be3a899bf2ecc03e2a1589f486b62a9f\nauthor Elichai Turkel <elichai.turkel@gmail.com> 1576159403 +0200\ncommitter Elichai Turkel <elichai.turkel@gmail.com> 1576159403 +0200\n\nChange fmt docs for more delegations\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0cc8fe5d4306c560b4a2668b01e2df97a4eb80c4", "html_url": "https://github.com/rust-lang/rust/commit/0cc8fe5d4306c560b4a2668b01e2df97a4eb80c4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0cc8fe5d4306c560b4a2668b01e2df97a4eb80c4/comments", "author": {"login": "elichai", "id": 2167860, "node_id": "MDQ6VXNlcjIxNjc4NjA=", "avatar_url": "https://avatars.githubusercontent.com/u/2167860?v=4", "gravatar_id": "", "url": "https://api.github.com/users/elichai", "html_url": "https://github.com/elichai", "followers_url": "https://api.github.com/users/elichai/followers", "following_url": "https://api.github.com/users/elichai/following{/other_user}", "gists_url": "https://api.github.com/users/elichai/gists{/gist_id}", "starred_url": "https://api.github.com/users/elichai/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/elichai/subscriptions", "organizations_url": "https://api.github.com/users/elichai/orgs", "repos_url": "https://api.github.com/users/elichai/repos", "events_url": "https://api.github.com/users/elichai/events{/privacy}", "received_events_url": "https://api.github.com/users/elichai/received_events", "type": "User", "site_admin": false}, "committer": {"login": "elichai", "id": 2167860, "node_id": "MDQ6VXNlcjIxNjc4NjA=", "avatar_url": "https://avatars.githubusercontent.com/u/2167860?v=4", "gravatar_id": "", "url": "https://api.github.com/users/elichai", "html_url": "https://github.com/elichai", "followers_url": "https://api.github.com/users/elichai/followers", "following_url": "https://api.github.com/users/elichai/following{/other_user}", "gists_url": "https://api.github.com/users/elichai/gists{/gist_id}", "starred_url": "https://api.github.com/users/elichai/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/elichai/subscriptions", "organizations_url": "https://api.github.com/users/elichai/orgs", "repos_url": "https://api.github.com/users/elichai/repos", "events_url": "https://api.github.com/users/elichai/events{/privacy}", "received_events_url": "https://api.github.com/users/elichai/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f284f8b4be3a899bf2ecc03e2a1589f486b62a9f", "url": "https://api.github.com/repos/rust-lang/rust/commits/f284f8b4be3a899bf2ecc03e2a1589f486b62a9f", "html_url": "https://github.com/rust-lang/rust/commit/f284f8b4be3a899bf2ecc03e2a1589f486b62a9f"}], "stats": {"total": 18, "additions": 12, "deletions": 6}, "files": [{"sha": "7450a33a1c2bcfcd525663404277b855072db168", "filename": "src/libcore/fmt/mod.rs", "status": "modified", "additions": 12, "deletions": 6, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/0cc8fe5d4306c560b4a2668b01e2df97a4eb80c4/src%2Flibcore%2Ffmt%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0cc8fe5d4306c560b4a2668b01e2df97a4eb80c4/src%2Flibcore%2Ffmt%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Ffmt%2Fmod.rs?ref=0cc8fe5d4306c560b4a2668b01e2df97a4eb80c4", "patch": "@@ -455,7 +455,10 @@ impl Display for Arguments<'_> {\n ///\n /// impl fmt::Debug for Point {\n ///     fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {\n-///         write!(f, \"Point {{ x: {}, y: {} }}\", self.x, self.y)\n+///         f.debug_struct(\"Point\")\n+///          .field(\"x\", &self.x)\n+///          .field(\"y\", &self.y)\n+///          .finish()\n ///     }\n /// }\n ///\n@@ -528,7 +531,10 @@ pub trait Debug {\n     ///\n     /// impl fmt::Debug for Position {\n     ///     fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {\n-    ///         write!(f, \"({:?}, {:?})\", self.longitude, self.latitude)\n+    ///         f.debug_tuple(\"\")\n+    ///          .field(&self.longitude)\n+    ///          .field(&self.latitude)\n+    ///          .finish()\n     ///     }\n     /// }\n     ///\n@@ -912,8 +918,8 @@ pub trait Pointer {\n ///\n /// impl fmt::LowerExp for Length {\n ///     fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {\n-///         let val = self.0;\n-///         write!(f, \"{}e1\", val / 10)\n+///         let val = f64::from(self.0);\n+///         fmt::LowerExp::fmt(&val, f) // delegate to f64's implementation\n ///     }\n /// }\n ///\n@@ -955,8 +961,8 @@ pub trait LowerExp {\n ///\n /// impl fmt::UpperExp for Length {\n ///     fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {\n-///         let val = self.0;\n-///         write!(f, \"{}E1\", val / 10)\n+///         let val = f64::from(self.0);\n+///         fmt::UpperExp::fmt(&val, f) // delegate to f64's implementation\n ///     }\n /// }\n ///"}]}