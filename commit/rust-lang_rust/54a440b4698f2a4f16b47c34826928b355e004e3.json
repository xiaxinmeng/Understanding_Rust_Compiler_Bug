{"sha": "54a440b4698f2a4f16b47c34826928b355e004e3", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU0YTQ0MGI0Njk4ZjJhNGYxNmI0N2MzNDgyNjkyOGIzNTVlMDA0ZTM=", "commit": {"author": {"name": "Mark Rousskov", "email": "mark.simulacrum@gmail.com", "date": "2018-07-07T03:29:14Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2018-07-07T03:29:14Z"}, "message": "Rollup merge of #52083 - spastorino:dont-run-ast-borrowck-on-mir-mode, r=nikomatsakis\n\nDont run ast borrowck on mir mode\n\nr? @nikomatsakis", "tree": {"sha": "bd74fae8627615c30a86a19694fb1c4157b62180", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bd74fae8627615c30a86a19694fb1c4157b62180"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/54a440b4698f2a4f16b47c34826928b355e004e3", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJbQDOLCRBK7hj4Ov3rIwAAdHIIAIZPWRnZ2xWXNPQYnavw4WDJ\nNR5NqChXZWL/wHEQnbg8sfwk69aT7t21n5ch7Cwv23rLuLHmor7f8+T4LJU0Q0nI\nMMEBq6omYKzirbJWDLZVN2Ld+A6Cjc0xXcUkVfB0tnktLGSVl0Y7EwPfn3J9sN5d\ncAyRfqy4n6lxQJFjsl7nLmV/FZDikz2ATT0V94Sj536vCj5S7iBPatsaY8ELwMpq\nrOdil5R1v9c45uuJocgQIiZ8hwoF7b9P6G1Qrop0WDx6xmk7Prx3N44EhZpKxGJi\niehelkXR4GA75bfk/T5dkZ6okxXWKslj5hQWtoKYbkduL2WUvxbcVaGSCgkDjZA=\n=okbT\n-----END PGP SIGNATURE-----\n", "payload": "tree bd74fae8627615c30a86a19694fb1c4157b62180\nparent ec6bba319b90533964dec26b7e0832ca9a1acf87\nparent 25266c18409858ac0c482bc00a6d72c0f83f3df2\nauthor Mark Rousskov <mark.simulacrum@gmail.com> 1530934154 -0600\ncommitter GitHub <noreply@github.com> 1530934154 -0600\n\nRollup merge of #52083 - spastorino:dont-run-ast-borrowck-on-mir-mode, r=nikomatsakis\n\nDont run ast borrowck on mir mode\n\nr? @nikomatsakis\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/54a440b4698f2a4f16b47c34826928b355e004e3", "html_url": "https://github.com/rust-lang/rust/commit/54a440b4698f2a4f16b47c34826928b355e004e3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/54a440b4698f2a4f16b47c34826928b355e004e3/comments", "author": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ec6bba319b90533964dec26b7e0832ca9a1acf87", "url": "https://api.github.com/repos/rust-lang/rust/commits/ec6bba319b90533964dec26b7e0832ca9a1acf87", "html_url": "https://github.com/rust-lang/rust/commit/ec6bba319b90533964dec26b7e0832ca9a1acf87"}, {"sha": "25266c18409858ac0c482bc00a6d72c0f83f3df2", "url": "https://api.github.com/repos/rust-lang/rust/commits/25266c18409858ac0c482bc00a6d72c0f83f3df2", "html_url": "https://github.com/rust-lang/rust/commit/25266c18409858ac0c482bc00a6d72c0f83f3df2"}], "stats": {"total": 55, "additions": 35, "deletions": 20}, "files": [{"sha": "8f7f9d09423f68198ffd321e6587a286881f7ba9", "filename": "src/librustc/ty/context.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/54a440b4698f2a4f16b47c34826928b355e004e3/src%2Flibrustc%2Fty%2Fcontext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/54a440b4698f2a4f16b47c34826928b355e004e3/src%2Flibrustc%2Fty%2Fcontext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Fcontext.rs?ref=54a440b4698f2a4f16b47c34826928b355e004e3", "patch": "@@ -1354,6 +1354,12 @@ impl<'a, 'gcx, 'tcx> TyCtxt<'a, 'gcx, 'tcx> {\n         !self.sess.opts.debugging_opts.disable_ast_check_for_mutation_in_guard\n     }\n \n+    /// If true, we should use the AST-based borrowck (we may *also* use\n+    /// the MIR-based borrowck).\n+    pub fn use_ast_borrowck(self) -> bool {\n+        self.borrowck_mode().use_ast()\n+    }\n+\n     /// If true, we should use the MIR-based borrowck (we may *also* use\n     /// the AST-based borrowck).\n     pub fn use_mir_borrowck(self) -> bool {"}, {"sha": "df1b1138f3e888cbbe7848242dcf370875a2b2db", "filename": "src/librustc_borrowck/borrowck/mod.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/54a440b4698f2a4f16b47c34826928b355e004e3/src%2Flibrustc_borrowck%2Fborrowck%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/54a440b4698f2a4f16b47c34826928b355e004e3/src%2Flibrustc_borrowck%2Fborrowck%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_borrowck%2Fborrowck%2Fmod.rs?ref=54a440b4698f2a4f16b47c34826928b355e004e3", "patch": "@@ -89,6 +89,8 @@ pub struct AnalysisData<'a, 'tcx: 'a> {\n fn borrowck<'a, 'tcx>(tcx: TyCtxt<'a, 'tcx, 'tcx>, owner_def_id: DefId)\n     -> Lrc<BorrowCheckResult>\n {\n+    assert!(tcx.use_ast_borrowck());\n+\n     debug!(\"borrowck(body_owner_def_id={:?})\", owner_def_id);\n \n     let owner_id = tcx.hir.as_local_node_id(owner_def_id).unwrap();"}, {"sha": "96e9616699d3717a8ba86adfb524547f4307927c", "filename": "src/librustc_driver/driver.rs", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/54a440b4698f2a4f16b47c34826928b355e004e3/src%2Flibrustc_driver%2Fdriver.rs", "raw_url": "https://github.com/rust-lang/rust/raw/54a440b4698f2a4f16b47c34826928b355e004e3/src%2Flibrustc_driver%2Fdriver.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_driver%2Fdriver.rs?ref=54a440b4698f2a4f16b47c34826928b355e004e3", "patch": "@@ -1279,7 +1279,11 @@ where\n                 middle::liveness::check_crate(tcx)\n             });\n \n-            time(sess, \"borrow checking\", || borrowck::check_crate(tcx));\n+            time(sess, \"borrow checking\", || {\n+                if tcx.use_ast_borrowck() {\n+                    borrowck::check_crate(tcx);\n+                }\n+            });\n \n             time(sess,\n                  \"MIR borrow checking\","}, {"sha": "a5db0d15d8ab309414ab7c3de44c8ea9fa785e0b", "filename": "src/librustc_mir/borrow_check/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/54a440b4698f2a4f16b47c34826928b355e004e3/src%2Flibrustc_mir%2Fborrow_check%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/54a440b4698f2a4f16b47c34826928b355e004e3/src%2Flibrustc_mir%2Fborrow_check%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Fmod.rs?ref=54a440b4698f2a4f16b47c34826928b355e004e3", "patch": "@@ -80,7 +80,7 @@ fn mir_borrowck<'a, 'tcx>(tcx: TyCtxt<'a, 'tcx, 'tcx>, def_id: DefId) -> BorrowC\n     let mut return_early;\n \n     // Return early if we are not supposed to use MIR borrow checker for this function.\n-    return_early = !tcx.has_attr(def_id, \"rustc_mir_borrowck\") && !tcx.use_mir_borrowck();\n+    return_early = !tcx.has_attr(def_id, \"rustc_mir\") && !tcx.use_mir_borrowck();\n \n     if tcx.is_struct_constructor(def_id) {\n         // We are not borrow checking the automatically generated struct constructors"}, {"sha": "90dfebeef1b0ca7b0bb194b1bc46d3808e2ca251", "filename": "src/librustc_mir/transform/mod.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/54a440b4698f2a4f16b47c34826928b355e004e3/src%2Flibrustc_mir%2Ftransform%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/54a440b4698f2a4f16b47c34826928b355e004e3/src%2Flibrustc_mir%2Ftransform%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Fmod.rs?ref=54a440b4698f2a4f16b47c34826928b355e004e3", "patch": "@@ -225,7 +225,10 @@ fn optimized_mir<'a, 'tcx>(tcx: TyCtxt<'a, 'tcx, 'tcx>, def_id: DefId) -> &'tcx\n     // (Mir-)Borrowck uses `mir_validated`, so we have to force it to\n     // execute before we can steal.\n     let _ = tcx.mir_borrowck(def_id);\n-    let _ = tcx.borrowck(def_id);\n+\n+    if tcx.use_ast_borrowck() {\n+        let _ = tcx.borrowck(def_id);\n+    }\n \n     let mut mir = tcx.mir_validated(def_id).steal();\n     run_passes![tcx, mir, def_id, 2;"}, {"sha": "da149f420644c5cd551dfd04cb013150b334caaa", "filename": "src/librustc_mir/transform/rustc_peek.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/54a440b4698f2a4f16b47c34826928b355e004e3/src%2Flibrustc_mir%2Ftransform%2Frustc_peek.rs", "raw_url": "https://github.com/rust-lang/rust/raw/54a440b4698f2a4f16b47c34826928b355e004e3/src%2Flibrustc_mir%2Ftransform%2Frustc_peek.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Frustc_peek.rs?ref=54a440b4698f2a4f16b47c34826928b355e004e3", "patch": "@@ -36,7 +36,7 @@ impl MirPass for SanityCheck {\n                           src: MirSource, mir: &mut Mir<'tcx>) {\n         let def_id = src.def_id;\n         let id = tcx.hir.as_local_node_id(def_id).unwrap();\n-        if !tcx.has_attr(def_id, \"rustc_mir_borrowck\") {\n+        if !tcx.has_attr(def_id, \"rustc_mir\") {\n             debug!(\"skipping rustc_peek::SanityCheck on {}\", tcx.item_path_str(def_id));\n             return;\n         } else {"}, {"sha": "f5f0ede6864f4df3fe5064aef97b50de96edfdb0", "filename": "src/test/compile-fail/mir-dataflow/def-inits-1.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/54a440b4698f2a4f16b47c34826928b355e004e3/src%2Ftest%2Fcompile-fail%2Fmir-dataflow%2Fdef-inits-1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/54a440b4698f2a4f16b47c34826928b355e004e3/src%2Ftest%2Fcompile-fail%2Fmir-dataflow%2Fdef-inits-1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fmir-dataflow%2Fdef-inits-1.rs?ref=54a440b4698f2a4f16b47c34826928b355e004e3", "patch": "@@ -10,14 +10,14 @@\n \n // General test of maybe_uninits state computed by MIR dataflow.\n \n+#![feature(nll)]\n #![feature(core_intrinsics, rustc_attrs)]\n \n use std::intrinsics::rustc_peek;\n use std::mem::{drop, replace};\n \n struct S(i32);\n \n-#[rustc_mir_borrowck]\n #[rustc_mir(rustc_peek_definite_init,stop_after_dataflow)]\n fn foo(test: bool, x: &mut S, y: S, mut z: S) -> S {\n     let ret;"}, {"sha": "595f01f7c94b34a065a5736b8297a6ea34b2c1f4", "filename": "src/test/compile-fail/mir-dataflow/inits-1.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/54a440b4698f2a4f16b47c34826928b355e004e3/src%2Ftest%2Fcompile-fail%2Fmir-dataflow%2Finits-1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/54a440b4698f2a4f16b47c34826928b355e004e3/src%2Ftest%2Fcompile-fail%2Fmir-dataflow%2Finits-1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fmir-dataflow%2Finits-1.rs?ref=54a440b4698f2a4f16b47c34826928b355e004e3", "patch": "@@ -10,14 +10,14 @@\n \n // General test of maybe_inits state computed by MIR dataflow.\n \n+#![feature(nll)]\n #![feature(core_intrinsics, rustc_attrs)]\n \n use std::intrinsics::rustc_peek;\n use std::mem::{drop, replace};\n \n struct S(i32);\n \n-#[rustc_mir_borrowck]\n #[rustc_mir(rustc_peek_maybe_init,stop_after_dataflow)]\n fn foo(test: bool, x: &mut S, y: S, mut z: S) -> S {\n     let ret;"}, {"sha": "bb10c03254e3cb065a7514ee7108635a9f86a289", "filename": "src/test/compile-fail/mir-dataflow/uninits-1.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/54a440b4698f2a4f16b47c34826928b355e004e3/src%2Ftest%2Fcompile-fail%2Fmir-dataflow%2Funinits-1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/54a440b4698f2a4f16b47c34826928b355e004e3/src%2Ftest%2Fcompile-fail%2Fmir-dataflow%2Funinits-1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fmir-dataflow%2Funinits-1.rs?ref=54a440b4698f2a4f16b47c34826928b355e004e3", "patch": "@@ -10,14 +10,14 @@\n \n // General test of maybe_uninits state computed by MIR dataflow.\n \n+#![feature(nll)]\n #![feature(core_intrinsics, rustc_attrs)]\n \n use std::intrinsics::rustc_peek;\n use std::mem::{drop, replace};\n \n struct S(i32);\n \n-#[rustc_mir_borrowck]\n #[rustc_mir(rustc_peek_maybe_uninit,stop_after_dataflow)]\n fn foo(test: bool, x: &mut S, y: S, mut z: S) -> S {\n     let ret;"}, {"sha": "9854ea779b3adfac2de73d5d63a36fd5e195a420", "filename": "src/test/compile-fail/mir-dataflow/uninits-2.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/54a440b4698f2a4f16b47c34826928b355e004e3/src%2Ftest%2Fcompile-fail%2Fmir-dataflow%2Funinits-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/54a440b4698f2a4f16b47c34826928b355e004e3/src%2Ftest%2Fcompile-fail%2Fmir-dataflow%2Funinits-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fmir-dataflow%2Funinits-2.rs?ref=54a440b4698f2a4f16b47c34826928b355e004e3", "patch": "@@ -10,14 +10,14 @@\n \n // General test of maybe_uninits state computed by MIR dataflow.\n \n+#![feature(nll)]\n #![feature(core_intrinsics, rustc_attrs)]\n \n use std::intrinsics::rustc_peek;\n use std::mem::{drop, replace};\n \n struct S(i32);\n \n-#[rustc_mir_borrowck]\n #[rustc_mir(rustc_peek_maybe_uninit,stop_after_dataflow)]\n fn foo(x: &mut S) {\n     // `x` is initialized here, so maybe-uninit bit is 0."}, {"sha": "addbbf4434f4f99cda802fd5f319acefb0642d90", "filename": "src/test/ui/error-codes/E0017.nll.stderr", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/54a440b4698f2a4f16b47c34826928b355e004e3/src%2Ftest%2Fui%2Ferror-codes%2FE0017.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/54a440b4698f2a4f16b47c34826928b355e004e3/src%2Ftest%2Fui%2Ferror-codes%2FE0017.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ferror-codes%2FE0017.nll.stderr?ref=54a440b4698f2a4f16b47c34826928b355e004e3", "patch": "@@ -10,18 +10,18 @@ error[E0017]: references in statics may only refer to immutable values\n LL | static STATIC_REF: &'static mut i32 = &mut X; //~ ERROR E0017\n    |                                       ^^^^^^ statics require immutable values\n \n-error[E0017]: references in statics may only refer to immutable values\n-  --> $DIR/E0017.rs:17:38\n-   |\n-LL | static CONST_REF: &'static mut i32 = &mut C; //~ ERROR E0017\n-   |                                      ^^^^^^ statics require immutable values\n-\n error[E0596]: cannot borrow immutable item `X` as mutable\n   --> $DIR/E0017.rs:15:39\n    |\n LL | static STATIC_REF: &'static mut i32 = &mut X; //~ ERROR E0017\n    |                                       ^^^^^^ cannot borrow as mutable\n \n+error[E0017]: references in statics may only refer to immutable values\n+  --> $DIR/E0017.rs:17:38\n+   |\n+LL | static CONST_REF: &'static mut i32 = &mut C; //~ ERROR E0017\n+   |                                      ^^^^^^ statics require immutable values\n+\n error: aborting due to 4 previous errors\n \n Some errors occurred: E0017, E0596."}, {"sha": "0238ca6b623da26ab44c7c91d11c7f624c785c50", "filename": "src/test/ui/error-codes/E0388.nll.stderr", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/54a440b4698f2a4f16b47c34826928b355e004e3/src%2Ftest%2Fui%2Ferror-codes%2FE0388.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/54a440b4698f2a4f16b47c34826928b355e004e3/src%2Ftest%2Fui%2Ferror-codes%2FE0388.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ferror-codes%2FE0388.nll.stderr?ref=54a440b4698f2a4f16b47c34826928b355e004e3", "patch": "@@ -10,18 +10,18 @@ error[E0017]: references in statics may only refer to immutable values\n LL | static STATIC_REF: &'static mut i32 = &mut X; //~ ERROR E0017\n    |                                       ^^^^^^ statics require immutable values\n \n-error[E0017]: references in statics may only refer to immutable values\n-  --> $DIR/E0388.rs:17:38\n-   |\n-LL | static CONST_REF: &'static mut i32 = &mut C; //~ ERROR E0017\n-   |                                      ^^^^^^ statics require immutable values\n-\n error[E0596]: cannot borrow immutable item `X` as mutable\n   --> $DIR/E0388.rs:15:39\n    |\n LL | static STATIC_REF: &'static mut i32 = &mut X; //~ ERROR E0017\n    |                                       ^^^^^^ cannot borrow as mutable\n \n+error[E0017]: references in statics may only refer to immutable values\n+  --> $DIR/E0388.rs:17:38\n+   |\n+LL | static CONST_REF: &'static mut i32 = &mut C; //~ ERROR E0017\n+   |                                      ^^^^^^ statics require immutable values\n+\n error: aborting due to 4 previous errors\n \n Some errors occurred: E0017, E0596."}]}