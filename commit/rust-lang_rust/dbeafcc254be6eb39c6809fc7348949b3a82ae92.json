{"sha": "dbeafcc254be6eb39c6809fc7348949b3a82ae92", "node_id": "C_kwDOAAsO6NoAKGRiZWFmY2MyNTRiZTZlYjM5YzY4MDlmYzczNDg5NDliM2E4MmFlOTI", "commit": {"author": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2021-10-02T12:51:08Z"}, "committer": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2021-10-02T12:51:08Z"}, "message": "Rustfmt", "tree": {"sha": "935bdce55ab7d213fdfba5fee1fbe49deef313ea", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/935bdce55ab7d213fdfba5fee1fbe49deef313ea"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/dbeafcc254be6eb39c6809fc7348949b3a82ae92", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/dbeafcc254be6eb39c6809fc7348949b3a82ae92", "html_url": "https://github.com/rust-lang/rust/commit/dbeafcc254be6eb39c6809fc7348949b3a82ae92", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/dbeafcc254be6eb39c6809fc7348949b3a82ae92/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0887a2ed76d52a7f67680f7aab0c4661f1f00246", "url": "https://api.github.com/repos/rust-lang/rust/commits/0887a2ed76d52a7f67680f7aab0c4661f1f00246", "html_url": "https://github.com/rust-lang/rust/commit/0887a2ed76d52a7f67680f7aab0c4661f1f00246"}], "stats": {"total": 20, "additions": 8, "deletions": 12}, "files": [{"sha": "8a1f654399004a3c80280754aa57d4ff6bc3179f", "filename": "src/archive.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/dbeafcc254be6eb39c6809fc7348949b3a82ae92/src%2Farchive.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dbeafcc254be6eb39c6809fc7348949b3a82ae92/src%2Farchive.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Farchive.rs?ref=dbeafcc254be6eb39c6809fc7348949b3a82ae92", "patch": "@@ -104,7 +104,6 @@ impl<'a> ArchiveBuilder<'a> for ArArchiveBuilder<'a> {\n \n         self.src_archives.push(read_cache.into_inner());\n         Ok(())\n-\n     }\n \n     fn update_symbols(&mut self) {}"}, {"sha": "1703675139ab533da88f3030f581387f15518f8d", "filename": "src/base.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/dbeafcc254be6eb39c6809fc7348949b3a82ae92/src%2Fbase.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dbeafcc254be6eb39c6809fc7348949b3a82ae92/src%2Fbase.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbase.rs?ref=dbeafcc254be6eb39c6809fc7348949b3a82ae92", "patch": "@@ -744,8 +744,7 @@ fn codegen_stmt<'tcx>(\n                         NullOp::AlignOf => layout.align.abi.bytes(),\n                         NullOp::Box => unreachable!(),\n                     };\n-                    let val =\n-                        CValue::const_val(fx, fx.layout_of(fx.tcx.types.usize), val.into());\n+                    let val = CValue::const_val(fx, fx.layout_of(fx.tcx.types.usize), val.into());\n                     lval.write_cvalue(fx, val);\n                 }\n                 Rvalue::Aggregate(ref kind, ref operands) => match kind.as_ref() {"}, {"sha": "2f3821dee7941d7bef3a7f018d5019a267ca45fe", "filename": "src/lib.rs", "status": "modified", "additions": 7, "deletions": 9, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/dbeafcc254be6eb39c6809fc7348949b3a82ae92/src%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dbeafcc254be6eb39c6809fc7348949b3a82ae92/src%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flib.rs?ref=dbeafcc254be6eb39c6809fc7348949b3a82ae92", "patch": "@@ -73,7 +73,7 @@ mod vtable;\n mod prelude {\n     pub(crate) use std::convert::{TryFrom, TryInto};\n \n-    pub(crate) use rustc_span::{Span, FileNameDisplayPreference};\n+    pub(crate) use rustc_span::{FileNameDisplayPreference, Span};\n \n     pub(crate) use rustc_hir::def_id::{DefId, LOCAL_CRATE};\n     pub(crate) use rustc_middle::bug;\n@@ -275,21 +275,19 @@ fn build_isa(sess: &Session, backend_config: &BackendConfig) -> Box<dyn isa::Tar\n         }\n         Some(value) => {\n             let mut builder =\n-                cranelift_codegen::isa::lookup(target_triple.clone())\n-                    .unwrap_or_else(|err| {\n-                        sess.fatal(&format!(\"can't compile for {}: {}\", target_triple, err));\n-                    });\n+                cranelift_codegen::isa::lookup(target_triple.clone()).unwrap_or_else(|err| {\n+                    sess.fatal(&format!(\"can't compile for {}: {}\", target_triple, err));\n+                });\n             if let Err(_) = builder.enable(value) {\n                 sess.fatal(\"the specified target cpu isn't currently supported by Cranelift.\");\n             }\n             builder\n         }\n         None => {\n             let mut builder =\n-                cranelift_codegen::isa::lookup(target_triple.clone())\n-                    .unwrap_or_else(|err| {\n-                        sess.fatal(&format!(\"can't compile for {}: {}\", target_triple, err));\n-                    });\n+                cranelift_codegen::isa::lookup(target_triple.clone()).unwrap_or_else(|err| {\n+                    sess.fatal(&format!(\"can't compile for {}: {}\", target_triple, err));\n+                });\n             if target_triple.architecture == target_lexicon::Architecture::X86_64 {\n                 // Don't use \"haswell\" as the default, as it implies `has_lzcnt`.\n                 // macOS CI is still at Ivy Bridge EP, so `lzcnt` is interpreted as `bsr`."}]}