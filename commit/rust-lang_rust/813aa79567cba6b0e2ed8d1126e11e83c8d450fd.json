{"sha": "813aa79567cba6b0e2ed8d1126e11e83c8d450fd", "node_id": "MDY6Q29tbWl0NzI0NzEyOjgxM2FhNzk1NjdjYmE2YjBlMmVkOGQxMTI2ZTExZTgzYzhkNDUwZmQ=", "commit": {"author": {"name": "St\u00e9phane Campinas", "email": "stephane.campinas@gmail.com", "date": "2019-02-06T23:05:05Z"}, "committer": {"name": "St\u00e9phane Campinas", "email": "stephane.campinas@gmail.com", "date": "2019-02-06T23:05:05Z"}, "message": "fix formatting of strings within a macro", "tree": {"sha": "091d96a70e853aca1a4911b5caef84339ec083ae", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/091d96a70e853aca1a4911b5caef84339ec083ae"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/813aa79567cba6b0e2ed8d1126e11e83c8d450fd", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQEzBAABCgAdFiEEipi5pnt+pUplKNfibVYg2QghATMFAlxbaCEACgkQbVYg2Qgh\nATOZBggAsQHPvF73Yt8VbawLxqWlB5OpzuiBQ8QsSl8lUURnByUcY3Zxv1cPSp8g\nYNz4vYQ4976GSXQ50im+EDMI5SJxY5fmD6y35bCTXkCSaH7uy1GZ+BMmM/TtLEbb\nXo4sYjL8OMJ5Ps/i6zhtfN1/Bmjfwmr8BjpahSzIg3ty1hkwrGlM9unlIPLNyUI1\nhYIy0UjK5kvWaPMNahECnr9HfpKlpW1N+VfUwXR8G3JlAmEDd11OVq9I8CGIXYn5\nvXW/Jvo3kQMm5WNVxg8B+p7Ws4aVJ1oPaDbDssLZ3dZIKh3MptJmpT+VI7mCO1GW\ngXwUQuJnjJLszTA+dJECF5wxFsOxvw==\n=8Twp\n-----END PGP SIGNATURE-----", "payload": "tree 091d96a70e853aca1a4911b5caef84339ec083ae\nparent ecde43e06b6ee52b49ce2cc96c35f9db7a1b4058\nauthor St\u00e9phane Campinas <stephane.campinas@gmail.com> 1549494305 +0100\ncommitter St\u00e9phane Campinas <stephane.campinas@gmail.com> 1549494305 +0100\n\nfix formatting of strings within a macro\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/813aa79567cba6b0e2ed8d1126e11e83c8d450fd", "html_url": "https://github.com/rust-lang/rust/commit/813aa79567cba6b0e2ed8d1126e11e83c8d450fd", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/813aa79567cba6b0e2ed8d1126e11e83c8d450fd/comments", "author": {"login": "scampi", "id": 795879, "node_id": "MDQ6VXNlcjc5NTg3OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/795879?v=4", "gravatar_id": "", "url": "https://api.github.com/users/scampi", "html_url": "https://github.com/scampi", "followers_url": "https://api.github.com/users/scampi/followers", "following_url": "https://api.github.com/users/scampi/following{/other_user}", "gists_url": "https://api.github.com/users/scampi/gists{/gist_id}", "starred_url": "https://api.github.com/users/scampi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/scampi/subscriptions", "organizations_url": "https://api.github.com/users/scampi/orgs", "repos_url": "https://api.github.com/users/scampi/repos", "events_url": "https://api.github.com/users/scampi/events{/privacy}", "received_events_url": "https://api.github.com/users/scampi/received_events", "type": "User", "site_admin": false}, "committer": {"login": "scampi", "id": 795879, "node_id": "MDQ6VXNlcjc5NTg3OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/795879?v=4", "gravatar_id": "", "url": "https://api.github.com/users/scampi", "html_url": "https://github.com/scampi", "followers_url": "https://api.github.com/users/scampi/followers", "following_url": "https://api.github.com/users/scampi/following{/other_user}", "gists_url": "https://api.github.com/users/scampi/gists{/gist_id}", "starred_url": "https://api.github.com/users/scampi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/scampi/subscriptions", "organizations_url": "https://api.github.com/users/scampi/orgs", "repos_url": "https://api.github.com/users/scampi/repos", "events_url": "https://api.github.com/users/scampi/events{/privacy}", "received_events_url": "https://api.github.com/users/scampi/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ecde43e06b6ee52b49ce2cc96c35f9db7a1b4058", "url": "https://api.github.com/repos/rust-lang/rust/commits/ecde43e06b6ee52b49ce2cc96c35f9db7a1b4058", "html_url": "https://github.com/rust-lang/rust/commit/ecde43e06b6ee52b49ce2cc96c35f9db7a1b4058"}], "stats": {"total": 112, "additions": 104, "deletions": 8}, "files": [{"sha": "35f0cba26a89001fd77bf8f22f2a54f4ff5a59ca", "filename": "src/lib.rs", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/813aa79567cba6b0e2ed8d1126e11e83c8d450fd/src%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/813aa79567cba6b0e2ed8d1126e11e83c8d450fd/src%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flib.rs?ref=813aa79567cba6b0e2ed8d1126e11e83c8d450fd", "patch": "@@ -50,10 +50,11 @@ use crate::comment::LineClasses;\n use crate::formatting::{FormatErrorMap, FormattingError, ReportedErrors, SourceFile};\n use crate::issues::Issue;\n use crate::shape::Indent;\n+use crate::utils::indent_next_line;\n \n pub use crate::config::{\n     load_config, CliOptions, Color, Config, Edition, EmitMode, FileLines, FileName, NewlineStyle,\n-    Range, Verbosity,\n+    Range, Verbosity, Version,\n };\n \n #[macro_use]\n@@ -438,7 +439,7 @@ fn format_code_block(code_snippet: &str, config: &Config) -> Option<FormattedSni\n             }\n             result.push_str(&line);\n             result.push('\\n');\n-            need_indent = !kind.is_string() || line.ends_with('\\\\');\n+            need_indent = indent_next_line(kind, &line, config);\n         }\n         result.push('}');\n         result\n@@ -499,7 +500,7 @@ fn format_code_block(code_snippet: &str, config: &Config) -> Option<FormattedSni\n             line\n         };\n         result.push_str(trimmed_line);\n-        is_indented = !kind.is_string() || line.ends_with('\\\\');\n+        is_indented = indent_next_line(kind, line, config);\n     }\n     Some(FormattedSnippet {\n         snippet: result,"}, {"sha": "9973a0f9953ae9c5ff6b0c9bf95496356cbca710", "filename": "src/macros.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/813aa79567cba6b0e2ed8d1126e11e83c8d450fd/src%2Fmacros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/813aa79567cba6b0e2ed8d1126e11e83c8d450fd/src%2Fmacros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fmacros.rs?ref=813aa79567cba6b0e2ed8d1126e11e83c8d450fd", "patch": "@@ -43,8 +43,8 @@ use crate::shape::{Indent, Shape};\n use crate::source_map::SpanUtils;\n use crate::spanned::Spanned;\n use crate::utils::{\n-    format_visibility, is_empty_line, mk_sp, remove_trailing_white_spaces, rewrite_ident,\n-    trim_left_preserve_layout, wrap_str, NodeIdExt,\n+    format_visibility, indent_next_line, is_empty_line, mk_sp, remove_trailing_white_spaces,\n+    rewrite_ident, trim_left_preserve_layout, wrap_str, NodeIdExt,\n };\n use crate::visitor::FmtVisitor;\n \n@@ -1303,7 +1303,7 @@ impl MacroBranch {\n                     {\n                         s += &indent_str;\n                     }\n-                    (s + l + \"\\n\", !kind.is_string() || l.ends_with('\\\\'))\n+                    (s + l + \"\\n\", indent_next_line(kind, &l, &config))\n                 },\n             )\n             .0;"}, {"sha": "4a26fc4c5ddfb5691bdea61e361d3665cc016d68", "filename": "src/utils.rs", "status": "modified", "additions": 11, "deletions": 2, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/813aa79567cba6b0e2ed8d1126e11e83c8d450fd/src%2Futils.rs", "raw_url": "https://github.com/rust-lang/rust/raw/813aa79567cba6b0e2ed8d1126e11e83c8d450fd/src%2Futils.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Futils.rs?ref=813aa79567cba6b0e2ed8d1126e11e83c8d450fd", "patch": "@@ -526,8 +526,10 @@ pub fn trim_left_preserve_layout(orig: &str, indent: Indent, config: &Config) ->\n                 Some(get_prefix_space_width(config, &line))\n             };\n \n-            let new_veto_trim_value = (kind.is_string()\n-                || (config.version() == Version::Two && kind.is_commented_string()))\n+            // just InString{Commented} in order to allow the start of a string to be indented\n+            let new_veto_trim_value = (kind == FullCodeCharKind::InString\n+                || (config.version() == Version::Two\n+                    && kind == FullCodeCharKind::InStringCommented))\n                 && !line.ends_with('\\\\');\n             let line = if veto_trim || new_veto_trim_value {\n                 veto_trim = new_veto_trim_value;\n@@ -574,6 +576,13 @@ pub fn trim_left_preserve_layout(orig: &str, indent: Indent, config: &Config) ->\n     )\n }\n \n+/// Based on the given line, determine if the next line can be indented or not.\n+/// This allows to preserve the indentation of multi-line literals.\n+pub fn indent_next_line(kind: FullCodeCharKind, line: &str, config: &Config) -> bool {\n+    !(kind.is_string() || (config.version() == Version::Two && kind.is_commented_string()))\n+        || line.ends_with('\\\\')\n+}\n+\n pub fn is_empty_line(s: &str) -> bool {\n     s.is_empty() || s.chars().all(char::is_whitespace)\n }"}, {"sha": "c037584fd71078218e7a19f356727021e34d5eec", "filename": "tests/source/issue-3302.rs", "status": "added", "additions": 43, "deletions": 0, "changes": 43, "blob_url": "https://github.com/rust-lang/rust/blob/813aa79567cba6b0e2ed8d1126e11e83c8d450fd/tests%2Fsource%2Fissue-3302.rs", "raw_url": "https://github.com/rust-lang/rust/raw/813aa79567cba6b0e2ed8d1126e11e83c8d450fd/tests%2Fsource%2Fissue-3302.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Fissue-3302.rs?ref=813aa79567cba6b0e2ed8d1126e11e83c8d450fd", "patch": "@@ -0,0 +1,43 @@\n+// rustfmt-version: Two\n+\n+macro_rules! moo1 {\n+    () => {\n+        bar! {\n+\"\n+\"\n+        }\n+    };\n+}\n+\n+macro_rules! moo2 {\n+    () => {\n+        bar! {\n+        \"\n+\"\n+        }\n+    };\n+}\n+\n+macro_rules! moo3 {\n+    () => {\n+        42\n+        /*\n+        bar! {\n+        \"\n+        toto\n+tata\"\n+        }\n+        */\n+    };\n+}\n+\n+macro_rules! moo4 {\n+    () => {\n+        bar! {\n+\"\n+    foo\n+        bar\n+baz\"\n+        }\n+    };\n+}"}, {"sha": "146cb983819339bd6112c5428203cf30613cee6d", "filename": "tests/target/issue-3302.rs", "status": "added", "additions": 43, "deletions": 0, "changes": 43, "blob_url": "https://github.com/rust-lang/rust/blob/813aa79567cba6b0e2ed8d1126e11e83c8d450fd/tests%2Ftarget%2Fissue-3302.rs", "raw_url": "https://github.com/rust-lang/rust/raw/813aa79567cba6b0e2ed8d1126e11e83c8d450fd/tests%2Ftarget%2Fissue-3302.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fissue-3302.rs?ref=813aa79567cba6b0e2ed8d1126e11e83c8d450fd", "patch": "@@ -0,0 +1,43 @@\n+// rustfmt-version: Two\n+\n+macro_rules! moo1 {\n+    () => {\n+        bar! {\n+        \"\n+\"\n+        }\n+    };\n+}\n+\n+macro_rules! moo2 {\n+    () => {\n+        bar! {\n+        \"\n+\"\n+        }\n+    };\n+}\n+\n+macro_rules! moo3 {\n+    () => {\n+        42\n+        /*\n+        bar! {\n+        \"\n+        toto\n+tata\"\n+        }\n+        */\n+    };\n+}\n+\n+macro_rules! moo4 {\n+    () => {\n+        bar! {\n+        \"\n+    foo\n+        bar\n+baz\"\n+        }\n+    };\n+}"}]}