{"sha": "0ff1e6c697f711aa25b8fa2c0cc43bf2ad84ff52", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBmZjFlNmM2OTdmNzExYWEyNWI4ZmEyYzBjYzQzYmYyYWQ4NGZmNTI=", "commit": {"author": {"name": "CoffeeBlend", "email": "jonasboettiger@icloud.com", "date": "2021-01-01T21:12:49Z"}, "committer": {"name": "CoffeeBlend", "email": "jonasboettiger@icloud.com", "date": "2021-01-01T21:12:49Z"}, "message": "Add test for MaybeUninit::array_assume_init", "tree": {"sha": "b1ec5521b68bc26eecb8b7119bcdd440eba11fef", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b1ec5521b68bc26eecb8b7119bcdd440eba11fef"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0ff1e6c697f711aa25b8fa2c0cc43bf2ad84ff52", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEVuz3PwcqDyifNyYbcE4BSbAZSzwFAl/vkFIACgkQcE4BSbAZ\nSzxLQQ//RNm4196x2z8JG3uNJfQwYVJ30NdwrE1puqfrsIeIONSIuqG7RIqtqblK\nB3wAT8nfGTrYVy9YqeEEeBinUKmzBAwuEhpVNM6tMGvDUbxaH4AwuYcQsjBR+pl+\nlf8WENBpBiwHwaZrkzcA8jHrZBYX7Z+Wa9V7O26gde/QtqnvYC6el7nLQKnGauns\nvWLiogPDbINJvkEC4OsS2GZH8XgQfSBZGOM/0CojlGqQs8JxuSRC/9qar5saBrcl\nZsO8mHNVgGd8tCWlN3X3b14lsQM4qDlZxv2GMQo+dcwMqPt3mVCdI/zGmCYKnmor\neR3XmSDH+VgcSXh2e8olqh9qOnzRv+zMJPPDnDRXPrcRo3hejNP5Zf0E1LN2ln5n\nHEuetMGo88rYiF6q6QLjh1jO/mHjGacOAH/ePGAIPMEcAwyLleK0PMUpSbEC8v2+\nXAUEffrznrZkdp3qJK4A10Xqhhj2zUhduxyo2KI7OWZA5k9rOO4KGmuNyM6o8xeV\np/gWvxZ40PK2SNMlb27eGgpQmxa83KsBpbFNfZenF6Sgcdl02Ba+129tPzEYWmkJ\n+EJ9zQ2NIz+AogZlnYgD3MPejEBQD+jA34gcjZsdh/F+awVv11gtHkgPi/gyJSbS\n4Sm9UwO+W7dsD5zlOCQ9KeVa135akB6IS18luJNXQ8KKTryGefs=\n=CN6p\n-----END PGP SIGNATURE-----", "payload": "tree b1ec5521b68bc26eecb8b7119bcdd440eba11fef\nparent 826bc3648af1596413de0e7dcfe5f32665619608\nauthor CoffeeBlend <jonasboettiger@icloud.com> 1609535569 +0100\ncommitter CoffeeBlend <jonasboettiger@icloud.com> 1609535569 +0100\n\nAdd test for MaybeUninit::array_assume_init\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0ff1e6c697f711aa25b8fa2c0cc43bf2ad84ff52", "html_url": "https://github.com/rust-lang/rust/commit/0ff1e6c697f711aa25b8fa2c0cc43bf2ad84ff52", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0ff1e6c697f711aa25b8fa2c0cc43bf2ad84ff52/comments", "author": {"login": "joboet", "id": 25721079, "node_id": "MDQ6VXNlcjI1NzIxMDc5", "avatar_url": "https://avatars.githubusercontent.com/u/25721079?v=4", "gravatar_id": "", "url": "https://api.github.com/users/joboet", "html_url": "https://github.com/joboet", "followers_url": "https://api.github.com/users/joboet/followers", "following_url": "https://api.github.com/users/joboet/following{/other_user}", "gists_url": "https://api.github.com/users/joboet/gists{/gist_id}", "starred_url": "https://api.github.com/users/joboet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/joboet/subscriptions", "organizations_url": "https://api.github.com/users/joboet/orgs", "repos_url": "https://api.github.com/users/joboet/repos", "events_url": "https://api.github.com/users/joboet/events{/privacy}", "received_events_url": "https://api.github.com/users/joboet/received_events", "type": "User", "site_admin": false}, "committer": {"login": "joboet", "id": 25721079, "node_id": "MDQ6VXNlcjI1NzIxMDc5", "avatar_url": "https://avatars.githubusercontent.com/u/25721079?v=4", "gravatar_id": "", "url": "https://api.github.com/users/joboet", "html_url": "https://github.com/joboet", "followers_url": "https://api.github.com/users/joboet/followers", "following_url": "https://api.github.com/users/joboet/following{/other_user}", "gists_url": "https://api.github.com/users/joboet/gists{/gist_id}", "starred_url": "https://api.github.com/users/joboet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/joboet/subscriptions", "organizations_url": "https://api.github.com/users/joboet/orgs", "repos_url": "https://api.github.com/users/joboet/repos", "events_url": "https://api.github.com/users/joboet/events{/privacy}", "received_events_url": "https://api.github.com/users/joboet/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "826bc3648af1596413de0e7dcfe5f32665619608", "url": "https://api.github.com/repos/rust-lang/rust/commits/826bc3648af1596413de0e7dcfe5f32665619608", "html_url": "https://github.com/rust-lang/rust/commit/826bc3648af1596413de0e7dcfe5f32665619608"}], "stats": {"total": 18, "additions": 18, "deletions": 0}, "files": [{"sha": "bc737cd1927cf6d8b0da9739459c8891aa21d5d8", "filename": "library/core/tests/lib.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0ff1e6c697f711aa25b8fa2c0cc43bf2ad84ff52/library%2Fcore%2Ftests%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0ff1e6c697f711aa25b8fa2c0cc43bf2ad84ff52/library%2Fcore%2Ftests%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Ftests%2Flib.rs?ref=0ff1e6c697f711aa25b8fa2c0cc43bf2ad84ff52", "patch": "@@ -36,6 +36,8 @@\n #![feature(raw)]\n #![feature(sort_internals)]\n #![feature(slice_partition_at_index)]\n+#![feature(maybe_uninit_uninit_array)]\n+#![feature(maybe_uninit_array_assume_init)]\n #![feature(maybe_uninit_extra)]\n #![feature(maybe_uninit_write_slice)]\n #![feature(min_specialization)]"}, {"sha": "547f6a2c78cc9fa7563d4b1d18861b82ba20ed00", "filename": "library/core/tests/mem.rs", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/0ff1e6c697f711aa25b8fa2c0cc43bf2ad84ff52/library%2Fcore%2Ftests%2Fmem.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0ff1e6c697f711aa25b8fa2c0cc43bf2ad84ff52/library%2Fcore%2Ftests%2Fmem.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Ftests%2Fmem.rs?ref=0ff1e6c697f711aa25b8fa2c0cc43bf2ad84ff52", "patch": "@@ -140,6 +140,22 @@ fn assume_init_good() {\n     assert!(TRUE);\n }\n \n+#[test]\n+fn uninit_array_assume_init() {\n+    let mut array: [MaybeUninit<i16>; 5] = MaybeUninit::uninit_array();\n+    array[0].write(3);\n+    array[1].write(1);\n+    array[2].write(4);\n+    array[3].write(1);\n+    array[4].write(5);\n+\n+    let array = unsafe {\n+        MaybeUninit::array_assume_init(array)\n+    };\n+    \n+    assert_eq!(array, [3, 1, 4, 1, 5]);\n+}\n+\n #[test]\n fn uninit_write_slice() {\n     let mut dst = [MaybeUninit::new(255); 64];"}]}