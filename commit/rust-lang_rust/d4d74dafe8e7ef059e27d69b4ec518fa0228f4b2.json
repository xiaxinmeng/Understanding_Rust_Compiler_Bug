{"sha": "d4d74dafe8e7ef059e27d69b4ec518fa0228f4b2", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ0ZDc0ZGFmZThlN2VmMDU5ZTI3ZDY5YjRlYzUxOGZhMDIyOGY0YjI=", "commit": {"author": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2017-05-01T15:05:40Z"}, "committer": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2017-05-01T15:05:40Z"}, "message": "remove unused `is_fn`", "tree": {"sha": "645d73706da1f942eb2d51a5ace5091ceb2675a9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/645d73706da1f942eb2d51a5ace5091ceb2675a9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d4d74dafe8e7ef059e27d69b4ec518fa0228f4b2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d4d74dafe8e7ef059e27d69b4ec518fa0228f4b2", "html_url": "https://github.com/rust-lang/rust/commit/d4d74dafe8e7ef059e27d69b4ec518fa0228f4b2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d4d74dafe8e7ef059e27d69b4ec518fa0228f4b2/comments", "author": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6c2f64bdd8213012562f56e8fc393d99803e1c27", "url": "https://api.github.com/repos/rust-lang/rust/commits/6c2f64bdd8213012562f56e8fc393d99803e1c27", "html_url": "https://github.com/rust-lang/rust/commit/6c2f64bdd8213012562f56e8fc393d99803e1c27"}], "stats": {"total": 12, "additions": 0, "deletions": 12}, "files": [{"sha": "48b8a819fff03eb53d018baebac65a13f04db6de", "filename": "src/librustc/hir/map/mod.rs", "status": "modified", "additions": 0, "deletions": 12, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/d4d74dafe8e7ef059e27d69b4ec518fa0228f4b2/src%2Flibrustc%2Fhir%2Fmap%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d4d74dafe8e7ef059e27d69b4ec518fa0228f4b2/src%2Flibrustc%2Fhir%2Fmap%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fhir%2Fmap%2Fmod.rs?ref=d4d74dafe8e7ef059e27d69b4ec518fa0228f4b2", "patch": "@@ -572,18 +572,6 @@ impl<'hir> Map<'hir> {\n         }\n     }\n \n-    /// Check if the node is a non-closure function item\n-    pub fn is_fn(&self, id: NodeId) -> bool {\n-        let entry = if let Some(id) = self.find_entry(id) { id } else { return false };\n-\n-        match entry {\n-            EntryItem(_, &Item { node: ItemFn(..), .. }) |\n-            EntryTraitItem(_, &TraitItem { node: TraitItemKind::Method(..), .. }) |\n-            EntryImplItem(_, &ImplItem { node: ImplItemKind::Method(..), .. }) => true,\n-            _ => false,\n-        }\n-    }\n-\n     /// If there is some error when walking the parents (e.g., a node does not\n     /// have a parent in the map or a node can't be found), then we return the\n     /// last good node id we found. Note that reaching the crate root (id == 0),"}]}