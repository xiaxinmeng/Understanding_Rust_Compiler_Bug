{"sha": "890de33e4f92c449ca6f142eeb7a7ab945ae5e27", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg5MGRlMzNlNGY5MmM0NDljYTZmMTQyZWViN2E3YWI5NDVhZTVlMjc=", "commit": {"author": {"name": "jackh726", "email": "jack.huey@umassmed.edu", "date": "2021-09-07T22:51:24Z"}, "committer": {"name": "jackh726", "email": "jack.huey@umassmed.edu", "date": "2021-09-07T22:51:24Z"}, "message": "Fix duplicate error", "tree": {"sha": "bdaef5ba541a67544ac105567f82871664bde0aa", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bdaef5ba541a67544ac105567f82871664bde0aa"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/890de33e4f92c449ca6f142eeb7a7ab945ae5e27", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/890de33e4f92c449ca6f142eeb7a7ab945ae5e27", "html_url": "https://github.com/rust-lang/rust/commit/890de33e4f92c449ca6f142eeb7a7ab945ae5e27", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/890de33e4f92c449ca6f142eeb7a7ab945ae5e27/comments", "author": {"login": "jackh726", "id": 31162821, "node_id": "MDQ6VXNlcjMxMTYyODIx", "avatar_url": "https://avatars.githubusercontent.com/u/31162821?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jackh726", "html_url": "https://github.com/jackh726", "followers_url": "https://api.github.com/users/jackh726/followers", "following_url": "https://api.github.com/users/jackh726/following{/other_user}", "gists_url": "https://api.github.com/users/jackh726/gists{/gist_id}", "starred_url": "https://api.github.com/users/jackh726/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jackh726/subscriptions", "organizations_url": "https://api.github.com/users/jackh726/orgs", "repos_url": "https://api.github.com/users/jackh726/repos", "events_url": "https://api.github.com/users/jackh726/events{/privacy}", "received_events_url": "https://api.github.com/users/jackh726/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jackh726", "id": 31162821, "node_id": "MDQ6VXNlcjMxMTYyODIx", "avatar_url": "https://avatars.githubusercontent.com/u/31162821?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jackh726", "html_url": "https://github.com/jackh726", "followers_url": "https://api.github.com/users/jackh726/followers", "following_url": "https://api.github.com/users/jackh726/following{/other_user}", "gists_url": "https://api.github.com/users/jackh726/gists{/gist_id}", "starred_url": "https://api.github.com/users/jackh726/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jackh726/subscriptions", "organizations_url": "https://api.github.com/users/jackh726/orgs", "repos_url": "https://api.github.com/users/jackh726/repos", "events_url": "https://api.github.com/users/jackh726/events{/privacy}", "received_events_url": "https://api.github.com/users/jackh726/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "af9de99f1262ae0b42e9e4a7d0cf56fa1e429827", "url": "https://api.github.com/repos/rust-lang/rust/commits/af9de99f1262ae0b42e9e4a7d0cf56fa1e429827", "html_url": "https://github.com/rust-lang/rust/commit/af9de99f1262ae0b42e9e4a7d0cf56fa1e429827"}], "stats": {"total": 34, "additions": 7, "deletions": 27}, "files": [{"sha": "43aa8a6efcec4df5db4a056cbf43078244d0eafb", "filename": "compiler/rustc_infer/src/infer/error_reporting/nice_region_error/trait_impl_difference.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/890de33e4f92c449ca6f142eeb7a7ab945ae5e27/compiler%2Frustc_infer%2Fsrc%2Finfer%2Ferror_reporting%2Fnice_region_error%2Ftrait_impl_difference.rs", "raw_url": "https://github.com/rust-lang/rust/raw/890de33e4f92c449ca6f142eeb7a7ab945ae5e27/compiler%2Frustc_infer%2Fsrc%2Finfer%2Ferror_reporting%2Fnice_region_error%2Ftrait_impl_difference.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_infer%2Fsrc%2Finfer%2Ferror_reporting%2Fnice_region_error%2Ftrait_impl_difference.rs?ref=890de33e4f92c449ca6f142eeb7a7ab945ae5e27", "patch": "@@ -55,6 +55,7 @@ impl<'a, 'tcx> NiceRegionError<'a, 'tcx> {\n             } = origin\n             {\n                 self.emit_associated_type_err(span, item_name, impl_item_def_id, trait_item_def_id);\n+                return Some(ErrorReported);\n             }\n         }\n         None"}, {"sha": "27c135cb7cf82abd5d9a41d7d61576ead8a8ab15", "filename": "src/test/ui/generic-associated-types/impl_bounds.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/890de33e4f92c449ca6f142eeb7a7ab945ae5e27/src%2Ftest%2Fui%2Fgeneric-associated-types%2Fimpl_bounds.rs", "raw_url": "https://github.com/rust-lang/rust/raw/890de33e4f92c449ca6f142eeb7a7ab945ae5e27/src%2Ftest%2Fui%2Fgeneric-associated-types%2Fimpl_bounds.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fgeneric-associated-types%2Fimpl_bounds.rs?ref=890de33e4f92c449ca6f142eeb7a7ab945ae5e27", "patch": "@@ -16,7 +16,6 @@ impl<T> Foo for Fooy<T> {\n     //~^ ERROR the parameter type `T` may not live long enough\n     type B<'a, 'b> where 'b: 'a = (&'a(), &'b ());\n     //~^ ERROR `impl` associated type\n-    //~| ERROR impl has stricter\n     //~| ERROR lifetime bound not satisfied\n     type C where Self: Copy = String;\n     //~^ ERROR the trait bound `T: Copy` is not satisfied"}, {"sha": "73415e0faac88898b8a28fe0958b0154206150f4", "filename": "src/test/ui/generic-associated-types/impl_bounds.stderr", "status": "modified", "additions": 5, "deletions": 14, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/890de33e4f92c449ca6f142eeb7a7ab945ae5e27/src%2Ftest%2Fui%2Fgeneric-associated-types%2Fimpl_bounds.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/890de33e4f92c449ca6f142eeb7a7ab945ae5e27/src%2Ftest%2Fui%2Fgeneric-associated-types%2Fimpl_bounds.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fgeneric-associated-types%2Fimpl_bounds.stderr?ref=890de33e4f92c449ca6f142eeb7a7ab945ae5e27", "patch": "@@ -16,15 +16,6 @@ LL |     type B<'a, 'b> where 'a: 'b;\n LL |     type B<'a, 'b> where 'b: 'a = (&'a(), &'b ());\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ found\n \n-error[E0276]: impl has stricter requirements than trait\n-  --> $DIR/impl_bounds.rs:17:5\n-   |\n-LL |     type B<'a, 'b> where 'a: 'b;\n-   |     ---------------------------- definition of `B` from trait\n-...\n-LL |     type B<'a, 'b> where 'b: 'a = (&'a(), &'b ());\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ impl has extra requirement `'b: 'a`\n-\n error[E0478]: lifetime bound not satisfied\n   --> $DIR/impl_bounds.rs:17:5\n    |\n@@ -43,7 +34,7 @@ LL |     type B<'a, 'b> where 'b: 'a = (&'a(), &'b ());\n    |                ^^\n \n error[E0277]: the trait bound `T: Copy` is not satisfied\n-  --> $DIR/impl_bounds.rs:21:5\n+  --> $DIR/impl_bounds.rs:20:5\n    |\n LL |     type C where Self: Copy = String;\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `Copy` is not implemented for `T`\n@@ -68,7 +59,7 @@ LL | impl<T: std::marker::Copy> Foo for Fooy<T> {\n    |       +++++++++++++++++++\n \n error[E0277]: the trait bound `T: Copy` is not satisfied\n-  --> $DIR/impl_bounds.rs:23:5\n+  --> $DIR/impl_bounds.rs:22:5\n    |\n LL |     fn d() where Self: Copy {}\n    |     ^^^^^^^^^^^^^^^^^^^^^^^ the trait `Copy` is not implemented for `T`\n@@ -92,7 +83,7 @@ help: consider restricting type parameter `T`\n LL | impl<T: std::marker::Copy> Foo for Fooy<T> {\n    |       +++++++++++++++++++\n \n-error: aborting due to 6 previous errors\n+error: aborting due to 5 previous errors\n \n-Some errors have detailed explanations: E0276, E0277, E0310, E0478.\n-For more information about an error, try `rustc --explain E0276`.\n+Some errors have detailed explanations: E0277, E0310, E0478.\n+For more information about an error, try `rustc --explain E0277`."}, {"sha": "ad9f2e3e4ec4a8273d8248c7d7ec43c0d6b6e79c", "filename": "src/test/ui/generic-associated-types/missing-where-clause-on-trait.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/890de33e4f92c449ca6f142eeb7a7ab945ae5e27/src%2Ftest%2Fui%2Fgeneric-associated-types%2Fmissing-where-clause-on-trait.rs", "raw_url": "https://github.com/rust-lang/rust/raw/890de33e4f92c449ca6f142eeb7a7ab945ae5e27/src%2Ftest%2Fui%2Fgeneric-associated-types%2Fmissing-where-clause-on-trait.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fgeneric-associated-types%2Fmissing-where-clause-on-trait.rs?ref=890de33e4f92c449ca6f142eeb7a7ab945ae5e27", "patch": "@@ -8,7 +8,6 @@ trait Foo {\n impl Foo for () {\n     type Assoc<'a, 'b> where 'a: 'b = ();\n     //~^ `impl` associated type\n-    //~| impl has stricter\n }\n \n fn main() {}"}, {"sha": "0e183c8d69a4c0e6a531ba034b7bddfef4036156", "filename": "src/test/ui/generic-associated-types/missing-where-clause-on-trait.stderr", "status": "modified", "additions": 1, "deletions": 11, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/890de33e4f92c449ca6f142eeb7a7ab945ae5e27/src%2Ftest%2Fui%2Fgeneric-associated-types%2Fmissing-where-clause-on-trait.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/890de33e4f92c449ca6f142eeb7a7ab945ae5e27/src%2Ftest%2Fui%2Fgeneric-associated-types%2Fmissing-where-clause-on-trait.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fgeneric-associated-types%2Fmissing-where-clause-on-trait.stderr?ref=890de33e4f92c449ca6f142eeb7a7ab945ae5e27", "patch": "@@ -7,15 +7,5 @@ LL |     type Assoc<'a, 'b>;\n LL |     type Assoc<'a, 'b> where 'a: 'b = ();\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ found\n \n-error[E0276]: impl has stricter requirements than trait\n-  --> $DIR/missing-where-clause-on-trait.rs:9:5\n-   |\n-LL |     type Assoc<'a, 'b>;\n-   |     ------------------- definition of `Assoc` from trait\n-...\n-LL |     type Assoc<'a, 'b> where 'a: 'b = ();\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ impl has extra requirement `'a: 'b`\n-\n-error: aborting due to 2 previous errors\n+error: aborting due to previous error\n \n-For more information about this error, try `rustc --explain E0276`."}]}