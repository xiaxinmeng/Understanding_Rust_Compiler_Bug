{"sha": "affb12210d4ab5fc914c6b3e7aa81c79a341d502", "node_id": "C_kwDOAAsO6NoAKGFmZmIxMjIxMGQ0YWI1ZmM5MTRjNmIzZTdhYTgxYzc5YTM0MWQ1MDI", "commit": {"author": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2022-07-03T15:54:15Z"}, "committer": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2022-08-30T17:05:50Z"}, "message": "Create a module-reexports table.", "tree": {"sha": "14ee398cd55442a8159d68942c983ef3564ade5b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/14ee398cd55442a8159d68942c983ef3564ade5b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/affb12210d4ab5fc914c6b3e7aa81c79a341d502", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/affb12210d4ab5fc914c6b3e7aa81c79a341d502", "html_url": "https://github.com/rust-lang/rust/commit/affb12210d4ab5fc914c6b3e7aa81c79a341d502", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/affb12210d4ab5fc914c6b3e7aa81c79a341d502/comments", "author": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d330dc8c115f375eb99f33261cdcba581b5a89a9", "url": "https://api.github.com/repos/rust-lang/rust/commits/d330dc8c115f375eb99f33261cdcba581b5a89a9", "html_url": "https://github.com/rust-lang/rust/commit/d330dc8c115f375eb99f33261cdcba581b5a89a9"}], "stats": {"total": 29, "additions": 11, "deletions": 18}, "files": [{"sha": "fa82ac1d50bb238f1b8e8663a178554e70d5e761", "filename": "compiler/rustc_metadata/src/rmeta/decoder.rs", "status": "modified", "additions": 5, "deletions": 11, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/affb12210d4ab5fc914c6b3e7aa81c79a341d502/compiler%2Frustc_metadata%2Fsrc%2Frmeta%2Fdecoder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/affb12210d4ab5fc914c6b3e7aa81c79a341d502/compiler%2Frustc_metadata%2Fsrc%2Frmeta%2Fdecoder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_metadata%2Fsrc%2Frmeta%2Fdecoder.rs?ref=affb12210d4ab5fc914c6b3e7aa81c79a341d502", "patch": "@@ -1086,14 +1086,10 @@ impl<'a, 'tcx> CrateMetadataRef<'a> {\n             }\n         }\n \n-        match self.kind(id) {\n-            EntryKind::Mod(exports) => {\n-                for exp in exports.decode((self, sess)) {\n-                    callback(exp);\n-                }\n+        if let Some(exports) = self.root.tables.module_reexports.get(self, id) {\n+            for exp in exports.decode((self, sess)) {\n+                callback(exp);\n             }\n-            EntryKind::Enum | EntryKind::Trait => {}\n-            _ => bug!(\"`for_each_module_child` is called on a non-module: {:?}\", self.def_kind(id)),\n         }\n     }\n \n@@ -1106,10 +1102,8 @@ impl<'a, 'tcx> CrateMetadataRef<'a> {\n     }\n \n     fn module_expansion(self, id: DefIndex, sess: &Session) -> ExpnId {\n-        match self.kind(id) {\n-            EntryKind::Mod(_) | EntryKind::Enum | EntryKind::Trait => {\n-                self.get_expn_that_defined(id, sess)\n-            }\n+        match self.def_kind(id) {\n+            DefKind::Mod | DefKind::Enum | DefKind::Trait => self.get_expn_that_defined(id, sess),\n             _ => panic!(\"Expected module, found {:?}\", self.local_def_id(id)),\n         }\n     }"}, {"sha": "e5eab16d8f17a86c36143f9f6cbbd2e6c25e5061", "filename": "compiler/rustc_metadata/src/rmeta/encoder.rs", "status": "modified", "additions": 4, "deletions": 6, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/affb12210d4ab5fc914c6b3e7aa81c79a341d502/compiler%2Frustc_metadata%2Fsrc%2Frmeta%2Fencoder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/affb12210d4ab5fc914c6b3e7aa81c79a341d502/compiler%2Frustc_metadata%2Fsrc%2Frmeta%2Fencoder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_metadata%2Fsrc%2Frmeta%2Fencoder.rs?ref=affb12210d4ab5fc914c6b3e7aa81c79a341d502", "patch": "@@ -1254,15 +1254,13 @@ impl<'a, 'tcx> EncodeContext<'a, 'tcx> {\n         // code uses it). However, we skip encoding anything relating to child\n         // items - we encode information about proc-macros later on.\n         let reexports = if !self.is_proc_macro {\n-            match tcx.module_reexports(local_def_id) {\n-                Some(exports) => self.lazy_array(exports),\n-                _ => LazyArray::empty(),\n-            }\n+            tcx.module_reexports(local_def_id).unwrap_or(&[])\n         } else {\n-            LazyArray::empty()\n+            &[]\n         };\n \n-        record!(self.tables.kind[def_id] <- EntryKind::Mod(reexports));\n+        record_array!(self.tables.module_reexports[def_id] <- reexports);\n+        record!(self.tables.kind[def_id] <- EntryKind::Mod);\n         if self.is_proc_macro {\n             // Encode this here because we don't do it in encode_def_ids.\n             record!(self.tables.expn_that_defined[def_id] <- tcx.expn_that_defined(local_def_id));"}, {"sha": "d69fb347191444183667e39b5886b75226d59ba9", "filename": "compiler/rustc_metadata/src/rmeta/mod.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/affb12210d4ab5fc914c6b3e7aa81c79a341d502/compiler%2Frustc_metadata%2Fsrc%2Frmeta%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/affb12210d4ab5fc914c6b3e7aa81c79a341d502/compiler%2Frustc_metadata%2Fsrc%2Frmeta%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_metadata%2Fsrc%2Frmeta%2Fmod.rs?ref=affb12210d4ab5fc914c6b3e7aa81c79a341d502", "patch": "@@ -399,6 +399,7 @@ define_tables! {\n     proc_macro: Table<DefIndex, MacroKind>,\n     // Slot is full when there is a self parameter.\n     fn_has_self_parameter: Table<DefIndex, ()>,\n+    module_reexports: Table<DefIndex, LazyArray<ModChild>>,\n }\n \n #[derive(Copy, Clone, MetadataEncodable, MetadataDecodable)]\n@@ -421,7 +422,7 @@ enum EntryKind {\n     Union,\n     Fn,\n     ForeignFn,\n-    Mod(LazyArray<ModChild>),\n+    Mod,\n     MacroDef,\n     ProcMacro,\n     Closure,"}]}