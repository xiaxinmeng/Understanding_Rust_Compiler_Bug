{"sha": "bac76afb5a7885de19bfd9e6191fe8e2a29bd74d", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJhYzc2YWZiNWE3ODg1ZGUxOWJmZDllNjE5MWZlOGUyYTI5YmQ3NGQ=", "commit": {"author": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2018-08-14T18:26:28Z"}, "committer": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2018-08-14T18:26:28Z"}, "message": "Rustup to rustc 1.30.0-nightly (23f09bbed 2018-08-14)", "tree": {"sha": "af86be0f1b39c988a5c7cf141dcfea502fbdce43", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/af86be0f1b39c988a5c7cf141dcfea502fbdce43"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bac76afb5a7885de19bfd9e6191fe8e2a29bd74d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bac76afb5a7885de19bfd9e6191fe8e2a29bd74d", "html_url": "https://github.com/rust-lang/rust/commit/bac76afb5a7885de19bfd9e6191fe8e2a29bd74d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bac76afb5a7885de19bfd9e6191fe8e2a29bd74d/comments", "author": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "84aa49935dfc6dc9ddd795d0372dcfe9f342e5c6", "url": "https://api.github.com/repos/rust-lang/rust/commits/84aa49935dfc6dc9ddd795d0372dcfe9f342e5c6", "html_url": "https://github.com/rust-lang/rust/commit/84aa49935dfc6dc9ddd795d0372dcfe9f342e5c6"}], "stats": {"total": 10, "additions": 5, "deletions": 5}, "files": [{"sha": "ef6f71f68319f9cf9a262527aa5683195fe0a72b", "filename": "clippy_lints/src/booleans.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bac76afb5a7885de19bfd9e6191fe8e2a29bd74d/clippy_lints%2Fsrc%2Fbooleans.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bac76afb5a7885de19bfd9e6191fe8e2a29bd74d/clippy_lints%2Fsrc%2Fbooleans.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fbooleans.rs?ref=bac76afb5a7885de19bfd9e6191fe8e2a29bd74d", "patch": "@@ -4,7 +4,7 @@ use rustc::hir::*;\n use rustc::hir::intravisit::*;\n use syntax::ast::{LitKind, NodeId, DUMMY_NODE_ID};\n use syntax::codemap::{dummy_spanned, Span, DUMMY_SP};\n-use syntax::util::ThinVec;\n+use rustc_data_structures::thin_vec::ThinVec;\n use crate::utils::{in_macro, paths, match_type, snippet_opt, span_lint_and_then, SpanlessEq, get_trait_def_id, implements_trait};\n \n /// **What it does:** Checks for boolean expressions that can be written more"}, {"sha": "49518d1bb4e32d409586bd3d27599dc58f92201a", "filename": "clippy_lints/src/copies.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/bac76afb5a7885de19bfd9e6191fe8e2a29bd74d/clippy_lints%2Fsrc%2Fcopies.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bac76afb5a7885de19bfd9e6191fe8e2a29bd74d/clippy_lints%2Fsrc%2Fcopies.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fcopies.rs?ref=bac76afb5a7885de19bfd9e6191fe8e2a29bd74d", "patch": "@@ -5,7 +5,7 @@ use rustc::hir::*;\n use std::collections::HashMap;\n use std::collections::hash_map::Entry;\n use syntax::symbol::LocalInternedString;\n-use syntax::util::small_vector::SmallVector;\n+use rustc_data_structures::small_vec::OneVector;\n use crate::utils::{SpanlessEq, SpanlessHash};\n use crate::utils::{get_parent_expr, in_macro, snippet, span_lint_and_then, span_note_and_lint};\n \n@@ -233,9 +233,9 @@ fn lint_match_arms(cx: &LateContext<'_, '_>, expr: &Expr) {\n /// sequence of `if/else`.\n /// Eg. would return `([a, b], [c, d, e])` for the expression\n /// `if a { c } else if b { d } else { e }`.\n-fn if_sequence(mut expr: &Expr) -> (SmallVector<&Expr>, SmallVector<&Block>) {\n-    let mut conds = SmallVector::new();\n-    let mut blocks: SmallVector<&Block> = SmallVector::new();\n+fn if_sequence(mut expr: &Expr) -> (OneVector<&Expr>, OneVector<&Block>) {\n+    let mut conds = OneVector::new();\n+    let mut blocks: OneVector<&Block> = OneVector::new();\n \n     while let ExprKind::If(ref cond, ref then_expr, ref else_expr) = expr.node {\n         conds.push(&**cond);"}]}