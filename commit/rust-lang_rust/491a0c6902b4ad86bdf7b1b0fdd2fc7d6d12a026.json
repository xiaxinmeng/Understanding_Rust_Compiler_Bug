{"sha": "491a0c6902b4ad86bdf7b1b0fdd2fc7d6d12a026", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ5MWEwYzY5MDJiNGFkODZiZGY3YjFiMGZkZDJmYzdkNmQxMmEwMjY=", "commit": {"author": {"name": "Baoshan Pang", "email": "baoshan.pang@windriver.com", "date": "2019-09-20T20:25:57Z"}, "committer": {"name": "Baoshan Pang", "email": "baoshan.pang@windriver.com", "date": "2019-09-20T20:25:57Z"}, "message": "No home directory on vxWorks", "tree": {"sha": "930cdab08e1faa9f03614c67df0707ebf109e8b5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/930cdab08e1faa9f03614c67df0707ebf109e8b5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/491a0c6902b4ad86bdf7b1b0fdd2fc7d6d12a026", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/491a0c6902b4ad86bdf7b1b0fdd2fc7d6d12a026", "html_url": "https://github.com/rust-lang/rust/commit/491a0c6902b4ad86bdf7b1b0fdd2fc7d6d12a026", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/491a0c6902b4ad86bdf7b1b0fdd2fc7d6d12a026/comments", "author": {"login": "bpangWR", "id": 53950092, "node_id": "MDQ6VXNlcjUzOTUwMDky", "avatar_url": "https://avatars.githubusercontent.com/u/53950092?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bpangWR", "html_url": "https://github.com/bpangWR", "followers_url": "https://api.github.com/users/bpangWR/followers", "following_url": "https://api.github.com/users/bpangWR/following{/other_user}", "gists_url": "https://api.github.com/users/bpangWR/gists{/gist_id}", "starred_url": "https://api.github.com/users/bpangWR/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bpangWR/subscriptions", "organizations_url": "https://api.github.com/users/bpangWR/orgs", "repos_url": "https://api.github.com/users/bpangWR/repos", "events_url": "https://api.github.com/users/bpangWR/events{/privacy}", "received_events_url": "https://api.github.com/users/bpangWR/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bpangWR", "id": 53950092, "node_id": "MDQ6VXNlcjUzOTUwMDky", "avatar_url": "https://avatars.githubusercontent.com/u/53950092?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bpangWR", "html_url": "https://github.com/bpangWR", "followers_url": "https://api.github.com/users/bpangWR/followers", "following_url": "https://api.github.com/users/bpangWR/following{/other_user}", "gists_url": "https://api.github.com/users/bpangWR/gists{/gist_id}", "starred_url": "https://api.github.com/users/bpangWR/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bpangWR/subscriptions", "organizations_url": "https://api.github.com/users/bpangWR/orgs", "repos_url": "https://api.github.com/users/bpangWR/repos", "events_url": "https://api.github.com/users/bpangWR/events{/privacy}", "received_events_url": "https://api.github.com/users/bpangWR/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "66b16496e6c39e9928c5f7091d005d184889884e", "url": "https://api.github.com/repos/rust-lang/rust/commits/66b16496e6c39e9928c5f7091d005d184889884e", "html_url": "https://github.com/rust-lang/rust/commit/66b16496e6c39e9928c5f7091d005d184889884e"}], "stats": {"total": 23, "additions": 1, "deletions": 22}, "files": [{"sha": "f4798da1876cf66e6ff6e0235492820e6bfa3c37", "filename": "src/libstd/sys/vxworks/os.rs", "status": "modified", "additions": 1, "deletions": 22, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/491a0c6902b4ad86bdf7b1b0fdd2fc7d6d12a026/src%2Flibstd%2Fsys%2Fvxworks%2Fos.rs", "raw_url": "https://github.com/rust-lang/rust/raw/491a0c6902b4ad86bdf7b1b0fdd2fc7d6d12a026/src%2Flibstd%2Fsys%2Fvxworks%2Fos.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Fvxworks%2Fos.rs?ref=491a0c6902b4ad86bdf7b1b0fdd2fc7d6d12a026", "patch": "@@ -287,28 +287,7 @@ pub fn temp_dir() -> PathBuf {\n }\n \n pub fn home_dir() -> Option<PathBuf> {\n-    return crate::env::var_os(\"HOME\").or_else(|| unsafe {\n-        fallback()\n-    }).map(PathBuf::from);\n-\n-    unsafe fn fallback() -> Option<OsString> {\n-        let amt = match libc::sysconf(libc::_SC_GETPW_R_SIZE_MAX) {\n-            n if n < 0 => 512 as usize,\n-            n => n as usize,\n-        };\n-        let mut buf = Vec::with_capacity(amt);\n-        let mut passwd: libc::passwd = mem::zeroed();\n-        let mut result = ptr::null_mut();\n-        match libc::getpwuid_r(libc::getuid(), &mut passwd, buf.as_mut_ptr(),\n-                                buf.capacity(), &mut result) {\n-            0 if !result.is_null() => {\n-                let ptr = passwd.pw_dir as *const _;\n-                let bytes = CStr::from_ptr(ptr).to_bytes().to_vec();\n-                Some(OsStringExt::from_vec(bytes))\n-            },\n-            _ => None,\n-        }\n-    }\n+    None\n }\n \n pub fn exit(code: i32) -> ! {"}]}