{"sha": "1b8e6c152c827751ee22bf8cfca6f6ca4ade2798", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFiOGU2YzE1MmM4Mjc3NTFlZTIyYmY4Y2ZjYTZmNmNhNGFkZTI3OTg=", "commit": {"author": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2016-12-17T22:11:02Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2016-12-18T00:14:11Z"}, "message": "rustbuild: Fix LC_ID_DYLIB directives on OSX\n\nCurrently libraries installed by rustbuild on OSX have an incorrect\n`LC_ID_DYLIB` directive located in the dynamic libraries that are\ninstalled. The directive we expect looks like:\n\n    @rpath/libstd.dylib\n\nWhich means that if you want to find that dynamic library you should\nlook at the dylib's other `@rpath` directives. Typically our `@rpath`\ndirectives look like `@loader_path/../lib` for the compiler as that's\nwhere the installed libraries will be located. Currently, though,\nrustbuild produces dylibs with the directive that looks like:\n\n    /Users/rustbuild/src/rust-buildbot/slave/nightly-dist-rustc-mac/build/build/x86_64-apple-darwin/stage1-std/x86_64-apple-darwin/release/deps/libstd-713ad88203512705.dylib\n\nIn other words, the build directory is encoded erroneously. The compiler\nalready [knows how] to change this directive, but it only passes that\nargument when `-C rpath` is also passed. The rustbuild system, however,\nexplicitly [does not pass] this option explicitly and instead bakes its\nown. This logic then also erroneously didn't pass `-Wl,-install_name`\nlike the compiler.\n\n[knows how]: https://github.com/rust-lang/rust/blob/4a008cccaabc8b3fe65ccf5868b9d16319c9ac58/src/librustc_trans/back/linker.rs#L210-L214\n[does not pass]: https://github.com/rust-lang/rust/blob/4a008cccaabc8b3fe65ccf5868b9d16319c9ac58/src/bootstrap/bin/rustc.rs#L133-L158\n\nTo fix this regression this patch introduces a new `-Z` flag, `-Z\nosx-rpath-install-name` which basically just forces the compiler to take\nthe previous `-install_name` branch when creating a dynamic library.\nHopefully we can sort out a better rpath story in the future, but for\nnow this \"hack\" should suffice in getting our nightly builds back to the\nsame state as before.\n\nCloses #38430", "tree": {"sha": "ae889afe90d82ece88352fd436f6ed7d01fbc72f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ae889afe90d82ece88352fd436f6ed7d01fbc72f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1b8e6c152c827751ee22bf8cfca6f6ca4ade2798", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1b8e6c152c827751ee22bf8cfca6f6ca4ade2798", "html_url": "https://github.com/rust-lang/rust/commit/1b8e6c152c827751ee22bf8cfca6f6ca4ade2798", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1b8e6c152c827751ee22bf8cfca6f6ca4ade2798/comments", "author": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4a008cccaabc8b3fe65ccf5868b9d16319c9ac58", "url": "https://api.github.com/repos/rust-lang/rust/commits/4a008cccaabc8b3fe65ccf5868b9d16319c9ac58", "html_url": "https://github.com/rust-lang/rust/commit/4a008cccaabc8b3fe65ccf5868b9d16319c9ac58"}], "stats": {"total": 18, "additions": 17, "deletions": 1}, "files": [{"sha": "20ff9d9af3c0ea2feb10bde885b2f121c54f0b81", "filename": "src/bootstrap/bin/rustc.rs", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/1b8e6c152c827751ee22bf8cfca6f6ca4ade2798/src%2Fbootstrap%2Fbin%2Frustc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1b8e6c152c827751ee22bf8cfca6f6ca4ade2798/src%2Fbootstrap%2Fbin%2Frustc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fbin%2Frustc.rs?ref=1b8e6c152c827751ee22bf8cfca6f6ca4ade2798", "patch": "@@ -158,6 +158,15 @@ fn main() {\n         // to change a flag in a binary?\n         if env::var(\"RUSTC_RPATH\") == Ok(\"true\".to_string()) {\n             let rpath = if target.contains(\"apple\") {\n+\n+                // Note that we need to take one extra step on OSX to also pass\n+                // `-Wl,-instal_name,@rpath/...` to get things to work right. To\n+                // do that we pass a weird flag to the compiler to get it to do\n+                // so. Note that this is definitely a hack, and we should likely\n+                // flesh out rpath support more fully in the future.\n+                if stage != \"0\" {\n+                    cmd.arg(\"-Z\").arg(\"osx-rpath-install-name\");\n+                }\n                 Some(\"-Wl,-rpath,@loader_path/../lib\")\n             } else if !target.contains(\"windows\") {\n                 Some(\"-Wl,-rpath,$ORIGIN/../lib\")"}, {"sha": "a415d1f991fcd18a59817d98b9a8b06334769347", "filename": "src/librustc/session/config.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1b8e6c152c827751ee22bf8cfca6f6ca4ade2798/src%2Flibrustc%2Fsession%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1b8e6c152c827751ee22bf8cfca6f6ca4ade2798/src%2Flibrustc%2Fsession%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fsession%2Fconfig.rs?ref=1b8e6c152c827751ee22bf8cfca6f6ca4ade2798", "patch": "@@ -928,6 +928,8 @@ options! {DebuggingOptions, DebuggingSetter, basic_debugging_options,\n           \"print some statistics about MIR\"),\n     always_encode_mir: bool = (false, parse_bool, [TRACKED],\n           \"encode MIR of all functions into the crate metadata\"),\n+    osx_rpath_install_name: bool = (false, parse_bool, [TRACKED],\n+          \"pass `-install_name @rpath/...` to the OSX linker\"),\n }\n \n pub fn default_lib_output() -> CrateType {"}, {"sha": "a147b598940a234100258990cb4e2c53e0cf764c", "filename": "src/librustc_trans/back/linker.rs", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/1b8e6c152c827751ee22bf8cfca6f6ca4ade2798/src%2Flibrustc_trans%2Fback%2Flinker.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1b8e6c152c827751ee22bf8cfca6f6ca4ade2798/src%2Flibrustc_trans%2Fback%2Flinker.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Fback%2Flinker.rs?ref=1b8e6c152c827751ee22bf8cfca6f6ca4ade2798", "patch": "@@ -207,7 +207,12 @@ impl<'a> Linker for GnuLinker<'a> {\n         if self.sess.target.target.options.is_like_osx {\n             self.cmd.args(&[\"-dynamiclib\", \"-Wl,-dylib\"]);\n \n-            if self.sess.opts.cg.rpath {\n+            // Note that the `osx_rpath_install_name` option here is a hack\n+            // purely to support rustbuild right now, we should get a more\n+            // principled solution at some point to force the compiler to pass\n+            // the right `-Wl,-install_name` with an `@rpath` in it.\n+            if self.sess.opts.cg.rpath ||\n+               self.sess.opts.debugging_opts.osx_rpath_install_name {\n                 let mut v = OsString::from(\"-Wl,-install_name,@rpath/\");\n                 v.push(out_filename.file_name().unwrap());\n                 self.cmd.arg(&v);"}]}