{"sha": "459b4449a6569c91e9947fe6a6bf359687d66f0a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ1OWI0NDQ5YTY1NjljOTFlOTk0N2ZlNmE2YmYzNTk2ODdkNjZmMGE=", "commit": {"author": {"name": "Nick Cameron", "email": "nrc@ncameron.org", "date": "2017-05-07T22:45:03Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2017-05-07T22:45:03Z"}, "message": "Merge pull request #1442 from topecongiro/poor-formatting/trailing-comma\n\nRemove comma from function definition with a single argument", "tree": {"sha": "f55eba90ba2f6301fc70c8213824aca0a146aff5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f55eba90ba2f6301fc70c8213824aca0a146aff5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/459b4449a6569c91e9947fe6a6bf359687d66f0a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/459b4449a6569c91e9947fe6a6bf359687d66f0a", "html_url": "https://github.com/rust-lang/rust/commit/459b4449a6569c91e9947fe6a6bf359687d66f0a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/459b4449a6569c91e9947fe6a6bf359687d66f0a/comments", "author": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e5f8a725dbcc9385032a275724fff1f010e190fd", "url": "https://api.github.com/repos/rust-lang/rust/commits/e5f8a725dbcc9385032a275724fff1f010e190fd", "html_url": "https://github.com/rust-lang/rust/commit/e5f8a725dbcc9385032a275724fff1f010e190fd"}, {"sha": "ca0225730fbb11d4c138cbe9110ec24619c4ba95", "url": "https://api.github.com/repos/rust-lang/rust/commits/ca0225730fbb11d4c138cbe9110ec24619c4ba95", "html_url": "https://github.com/rust-lang/rust/commit/ca0225730fbb11d4c138cbe9110ec24619c4ba95"}], "stats": {"total": 24, "additions": 17, "deletions": 7}, "files": [{"sha": "ab831a37431323d723066c758b219a262b52cde4", "filename": "src/expr.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/459b4449a6569c91e9947fe6a6bf359687d66f0a/src%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/459b4449a6569c91e9947fe6a6bf359687d66f0a/src%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fexpr.rs?ref=459b4449a6569c91e9947fe6a6bf359687d66f0a", "patch": "@@ -1750,7 +1750,8 @@ fn rewrite_call_inner<R>(context: &RewriteContext,\n         tactic: tactic,\n         separator: \",\",\n         trailing_separator: if force_no_trailing_comma ||\n-                               context.config.fn_call_style == IndentStyle::Visual {\n+                               context.config.fn_call_style == IndentStyle::Visual ||\n+                               args.len() <= 1 {\n             SeparatorTactic::Never\n         } else {\n             context.config.trailing_comma"}, {"sha": "a99797579c366247e61fff8dc64085a694847377", "filename": "src/items.rs", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/459b4449a6569c91e9947fe6a6bf359687d66f0a/src%2Fitems.rs", "raw_url": "https://github.com/rust-lang/rust/raw/459b4449a6569c91e9947fe6a6bf359687d66f0a/src%2Fitems.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fitems.rs?ref=459b4449a6569c91e9947fe6a6bf359687d66f0a", "patch": "@@ -1619,7 +1619,8 @@ fn rewrite_fn_base(context: &RewriteContext,\n                                         indent,\n                                         arg_indent,\n                                         args_span,\n-                                        fd.variadic));\n+                                        fd.variadic,\n+                                        generics_str.contains('\\n')));\n \n     let multi_line_arg_str = arg_str.contains('\\n');\n \n@@ -1773,7 +1774,8 @@ fn rewrite_args(context: &RewriteContext,\n                 indent: Indent,\n                 arg_indent: Indent,\n                 span: Span,\n-                variadic: bool)\n+                variadic: bool,\n+                generics_str_contains_newline: bool)\n                 -> Option<String> {\n     let mut arg_item_strs =\n         try_opt!(args.iter()\n@@ -1858,6 +1860,9 @@ fn rewrite_args(context: &RewriteContext,\n     }\n \n     let (indent, trailing_comma, end_with_newline) = match context.config.fn_args_layout {\n+        IndentStyle::Block if !generics_str_contains_newline && arg_items.len() <= 1 => {\n+            (indent.block_indent(context.config), SeparatorTactic::Never, true)\n+        }\n         IndentStyle::Block => {\n             (indent.block_indent(context.config), SeparatorTactic::Vertical, true)\n         }"}, {"sha": "1d782670a20c5dc5ce1f50b4620d482cc9d7205c", "filename": "tests/source/configs-fn_call_style-block.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/459b4449a6569c91e9947fe6a6bf359687d66f0a/tests%2Fsource%2Fconfigs-fn_call_style-block.rs", "raw_url": "https://github.com/rust-lang/rust/raw/459b4449a6569c91e9947fe6a6bf359687d66f0a/tests%2Fsource%2Fconfigs-fn_call_style-block.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Fconfigs-fn_call_style-block.rs?ref=459b4449a6569c91e9947fe6a6bf359687d66f0a", "patch": "@@ -3,4 +3,6 @@\n \n fn main() {\n     lorem(\"lorem\", \"ipsum\", \"dolor\", \"sit\", \"amet\", \"consectetur\", \"adipiscing\", \"elit\");\n+    // #1501\n+    let hyper = Arc::new(Client::with_connector(HttpsConnector::new(TlsClient::new())));\n }"}, {"sha": "dba4941adb04d4c2d80a0d55181647f3ecda6378", "filename": "tests/target/configs-fn_call_style-block.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/459b4449a6569c91e9947fe6a6bf359687d66f0a/tests%2Ftarget%2Fconfigs-fn_call_style-block.rs", "raw_url": "https://github.com/rust-lang/rust/raw/459b4449a6569c91e9947fe6a6bf359687d66f0a/tests%2Ftarget%2Fconfigs-fn_call_style-block.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fconfigs-fn_call_style-block.rs?ref=459b4449a6569c91e9947fe6a6bf359687d66f0a", "patch": "@@ -12,4 +12,6 @@ fn main() {\n         \"adipiscing\",\n         \"elit\",\n     );\n+    // #1501\n+    let hyper = Arc::new(Client::with_connector(HttpsConnector::new(TlsClient::new())));\n }"}, {"sha": "b6f35f65aec82cfcb6d4f6d932f68f2a95a6f8f9", "filename": "tests/target/expr-block.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/459b4449a6569c91e9947fe6a6bf359687d66f0a/tests%2Ftarget%2Fexpr-block.rs", "raw_url": "https://github.com/rust-lang/rust/raw/459b4449a6569c91e9947fe6a6bf359687d66f0a/tests%2Ftarget%2Fexpr-block.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fexpr-block.rs?ref=459b4449a6569c91e9947fe6a6bf359687d66f0a", "patch": "@@ -102,7 +102,7 @@ fn arrays() {\n             Weighted { weight: 1, item: 1 },\n             Weighted { weight: x, item: 2 },\n             Weighted { weight: 1, item: 3 },\n-        ],\n+        ]\n     );\n \n     let z = ["}, {"sha": "1a134128d2b2b7040aa0d7fecb92b2f2d0695e48", "filename": "tests/target/fn-custom-7.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/459b4449a6569c91e9947fe6a6bf359687d66f0a/tests%2Ftarget%2Ffn-custom-7.rs", "raw_url": "https://github.com/rust-lang/rust/raw/459b4449a6569c91e9947fe6a6bf359687d66f0a/tests%2Ftarget%2Ffn-custom-7.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Ffn-custom-7.rs?ref=459b4449a6569c91e9947fe6a6bf359687d66f0a", "patch": "@@ -4,7 +4,7 @@\n // rustfmt-fn_brace_style: AlwaysNextLine\n \n // Case with only one variable.\n-fn foo(a: u8,) -> u8\n+fn foo(a: u8) -> u8\n {\n     bar()\n }\n@@ -30,11 +30,11 @@ fn foo(\n }\n \n trait Test {\n-    fn foo(a: u8,)\n+    fn foo(a: u8)\n     {\n     }\n \n-    fn bar(a: u8,) -> String\n+    fn bar(a: u8) -> String\n     {\n     }\n }"}]}