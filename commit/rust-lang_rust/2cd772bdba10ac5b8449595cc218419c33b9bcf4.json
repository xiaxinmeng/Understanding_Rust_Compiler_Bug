{"sha": "2cd772bdba10ac5b8449595cc218419c33b9bcf4", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJjZDc3MmJkYmExMGFjNWI4NDQ5NTk1Y2MyMTg0MTljMzNiOWJjZjQ=", "commit": {"author": {"name": "Huon Wilson", "email": "dbau.pp+github@gmail.com", "date": "2013-10-10T02:59:55Z"}, "committer": {"name": "Huon Wilson", "email": "dbau.pp+github@gmail.com", "date": "2013-10-22T23:40:06Z"}, "message": "std::rand: add the Sample and IndependentSample traits.\n\nThese are a \"parameterised\" Rand.", "tree": {"sha": "e975938d5c1b89a819ad990ceb5af9df8820890b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e975938d5c1b89a819ad990ceb5af9df8820890b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2cd772bdba10ac5b8449595cc218419c33b9bcf4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2cd772bdba10ac5b8449595cc218419c33b9bcf4", "html_url": "https://github.com/rust-lang/rust/commit/2cd772bdba10ac5b8449595cc218419c33b9bcf4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2cd772bdba10ac5b8449595cc218419c33b9bcf4/comments", "author": {"login": "huonw", "id": 1203825, "node_id": "MDQ6VXNlcjEyMDM4MjU=", "avatar_url": "https://avatars.githubusercontent.com/u/1203825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/huonw", "html_url": "https://github.com/huonw", "followers_url": "https://api.github.com/users/huonw/followers", "following_url": "https://api.github.com/users/huonw/following{/other_user}", "gists_url": "https://api.github.com/users/huonw/gists{/gist_id}", "starred_url": "https://api.github.com/users/huonw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/huonw/subscriptions", "organizations_url": "https://api.github.com/users/huonw/orgs", "repos_url": "https://api.github.com/users/huonw/repos", "events_url": "https://api.github.com/users/huonw/events{/privacy}", "received_events_url": "https://api.github.com/users/huonw/received_events", "type": "User", "site_admin": false}, "committer": {"login": "huonw", "id": 1203825, "node_id": "MDQ6VXNlcjEyMDM4MjU=", "avatar_url": "https://avatars.githubusercontent.com/u/1203825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/huonw", "html_url": "https://github.com/huonw", "followers_url": "https://api.github.com/users/huonw/followers", "following_url": "https://api.github.com/users/huonw/following{/other_user}", "gists_url": "https://api.github.com/users/huonw/gists{/gist_id}", "starred_url": "https://api.github.com/users/huonw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/huonw/subscriptions", "organizations_url": "https://api.github.com/users/huonw/orgs", "repos_url": "https://api.github.com/users/huonw/repos", "events_url": "https://api.github.com/users/huonw/events{/privacy}", "received_events_url": "https://api.github.com/users/huonw/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ae0905ab67a2dd3def61e266bba9f8f223586af6", "url": "https://api.github.com/repos/rust-lang/rust/commits/ae0905ab67a2dd3def61e266bba9f8f223586af6", "html_url": "https://github.com/rust-lang/rust/commit/ae0905ab67a2dd3def61e266bba9f8f223586af6"}], "stats": {"total": 18, "additions": 18, "deletions": 0}, "files": [{"sha": "845d8bbc95254852ffe64f1a2c3750f68e90bc6b", "filename": "src/libstd/rand/distributions.rs", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/2cd772bdba10ac5b8449595cc218419c33b9bcf4/src%2Flibstd%2Frand%2Fdistributions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2cd772bdba10ac5b8449595cc218419c33b9bcf4/src%2Flibstd%2Frand%2Fdistributions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Frand%2Fdistributions.rs?ref=2cd772bdba10ac5b8449595cc218419c33b9bcf4", "patch": "@@ -23,6 +23,24 @@\n use num;\n use rand::{Rng,Rand};\n \n+/// Things that can be used to create a random instance of `Support`.\n+pub trait Sample<Support> {\n+    /// Generate a random value of `Support`, using `rng` as the\n+    /// source of randomness.\n+    fn sample<R: Rng>(&mut self, rng: &mut R) -> Support;\n+}\n+\n+/// `Sample`s that do not require keeping track of state, so each\n+/// sample is (statistically) independent of all others, assuming the\n+/// `Rng` used has this property.\n+// XXX maybe having this separate is overkill (the only reason is to\n+// take &self rather than &mut self)? or maybe this should be the\n+// trait called `Sample` and the other should be `DependentSample`.\n+pub trait IndependentSample<Support>: Sample<Support> {\n+    /// Generate a random value.\n+    fn ind_sample<R: Rng>(&self, &mut R) -> Support;\n+}\n+\n mod ziggurat_tables;\n \n // inlining should mean there is no performance penalty for this"}]}