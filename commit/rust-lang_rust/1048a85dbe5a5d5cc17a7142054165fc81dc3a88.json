{"sha": "1048a85dbe5a5d5cc17a7142054165fc81dc3a88", "node_id": "C_kwDOAAsO6NoAKDEwNDhhODVkYmU1YTVkNWNjMTdhNzE0MjA1NDE2NWZjODFkYzNhODg", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2022-11-24T20:34:57Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-11-24T20:34:57Z"}, "message": "Rollup merge of #104822 - spastorino:selctx-new-instead-of-with_query_mode, r=lcnr\n\nwith_query_mode -> new\n\nr? ```@lcnr```", "tree": {"sha": "ae7b81c4c1437d13ae5012b8b7f7fa61e0ccdf10", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ae7b81c4c1437d13ae5012b8b7f7fa61e0ccdf10"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1048a85dbe5a5d5cc17a7142054165fc81dc3a88", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJjf9VxCRBK7hj4Ov3rIwAAP4AIAAqx0axIVDHOGuB+cFX3IKbP\nIwvh9+f5lyksyRDxnjVgJdT/2UJu535WEpYz0/aXB4M6wrpOotaAPhnhLky+zVPK\n1cThSsuRIA5pM09PNBn5MmGbYOVz4ypUQnxbReZB9s+FqrKwqGiAYfAWZ+QnGtdV\nDpyQ28NjUeGIZ7ECaaDcPXsZ5KLHl+8sT01r/F8WCbgTcC+ibqd865ABJTQuAmdN\nw50on81ps0Xygd+Ybc3sDIuwvZFGAgpaBHK/NKMo70eWNmb7qrTRVPd1eDHoCIaT\n57LfaddSte8/wKE1aA5S3l5h7CKtRqnkgxCBy88NcYVdU7Dfm6styunXDFUE8aQ=\n=tnAQ\n-----END PGP SIGNATURE-----\n", "payload": "tree ae7b81c4c1437d13ae5012b8b7f7fa61e0ccdf10\nparent 73f01ffd4642cf7794d88a03977108d0ffceacd1\nparent 66b4b8b907a241745930e6ac9af930b403ce9f33\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1669322097 +0100\ncommitter GitHub <noreply@github.com> 1669322097 +0100\n\nRollup merge of #104822 - spastorino:selctx-new-instead-of-with_query_mode, r=lcnr\n\nwith_query_mode -> new\n\nr? ```@lcnr```\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1048a85dbe5a5d5cc17a7142054165fc81dc3a88", "html_url": "https://github.com/rust-lang/rust/commit/1048a85dbe5a5d5cc17a7142054165fc81dc3a88", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1048a85dbe5a5d5cc17a7142054165fc81dc3a88/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "73f01ffd4642cf7794d88a03977108d0ffceacd1", "url": "https://api.github.com/repos/rust-lang/rust/commits/73f01ffd4642cf7794d88a03977108d0ffceacd1", "html_url": "https://github.com/rust-lang/rust/commit/73f01ffd4642cf7794d88a03977108d0ffceacd1"}, {"sha": "66b4b8b907a241745930e6ac9af930b403ce9f33", "url": "https://api.github.com/repos/rust-lang/rust/commits/66b4b8b907a241745930e6ac9af930b403ce9f33", "html_url": "https://github.com/rust-lang/rust/commit/66b4b8b907a241745930e6ac9af930b403ce9f33"}], "stats": {"total": 11, "additions": 3, "deletions": 8}, "files": [{"sha": "5cb0988919d261bf785f004a51a788d58b1431f6", "filename": "compiler/rustc_trait_selection/src/traits/error_reporting/mod.rs", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/1048a85dbe5a5d5cc17a7142054165fc81dc3a88/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Ferror_reporting%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1048a85dbe5a5d5cc17a7142054165fc81dc3a88/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Ferror_reporting%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Ferror_reporting%2Fmod.rs?ref=1048a85dbe5a5d5cc17a7142054165fc81dc3a88", "patch": "@@ -2112,10 +2112,7 @@ impl<'tcx> InferCtxtPrivExt<'tcx> for TypeErrCtxt<'_, 'tcx> {\n                 };\n \n                 let obligation = obligation.with(self.tcx, trait_ref.to_poly_trait_predicate());\n-                let mut selcx = SelectionContext::with_query_mode(\n-                    &self,\n-                    crate::traits::TraitQueryMode::Standard,\n-                );\n+                let mut selcx = SelectionContext::new(&self);\n                 match selcx.select_from_obligation(&obligation) {\n                     Ok(None) => {\n                         let impls = ambiguity::recompute_applicable_impls(self.infcx, &obligation);"}, {"sha": "4a419fbe9528856bb2147ae2215588cdec0c2828", "filename": "compiler/rustc_trait_selection/src/traits/query/evaluate_obligation.rs", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/1048a85dbe5a5d5cc17a7142054165fc81dc3a88/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fquery%2Fevaluate_obligation.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1048a85dbe5a5d5cc17a7142054165fc81dc3a88/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fquery%2Fevaluate_obligation.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fquery%2Fevaluate_obligation.rs?ref=1048a85dbe5a5d5cc17a7142054165fc81dc3a88", "patch": "@@ -2,9 +2,7 @@ use rustc_middle::ty;\n \n use crate::infer::canonical::OriginalQueryValues;\n use crate::infer::InferCtxt;\n-use crate::traits::{\n-    EvaluationResult, OverflowError, PredicateObligation, SelectionContext, TraitQueryMode,\n-};\n+use crate::traits::{EvaluationResult, OverflowError, PredicateObligation, SelectionContext};\n \n pub trait InferCtxtExt<'tcx> {\n     fn predicate_may_hold(&self, obligation: &PredicateObligation<'tcx>) -> bool;\n@@ -97,7 +95,7 @@ impl<'tcx> InferCtxtExt<'tcx> for InferCtxt<'tcx> {\n         match self.evaluate_obligation(obligation) {\n             Ok(result) => result,\n             Err(OverflowError::Canonical) => {\n-                let mut selcx = SelectionContext::with_query_mode(&self, TraitQueryMode::Standard);\n+                let mut selcx = SelectionContext::new(&self);\n                 selcx.evaluate_root_obligation(obligation).unwrap_or_else(|r| match r {\n                     OverflowError::Canonical => {\n                         span_bug!("}]}