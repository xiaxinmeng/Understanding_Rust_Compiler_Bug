{"sha": "2ec85135e2048ae527d9db6840641a0b13808b89", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJlYzg1MTM1ZTIwNDhhZTUyN2Q5ZGI2ODQwNjQxYTBiMTM4MDhiODk=", "commit": {"author": {"name": "David Rajchenbach-Teller", "email": "dteller@mozilla.com", "date": "2011-10-11T14:16:41Z"}, "committer": {"name": "Marijn Haverbeke", "email": "marijnh@gmail.com", "date": "2011-10-11T14:41:34Z"}, "message": "[Move] Moved str_to_float, float_to_str from compiler to lib", "tree": {"sha": "440d33c22c32896f5d396b2f3e5e8b38f428017d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/440d33c22c32896f5d396b2f3e5e8b38f428017d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2ec85135e2048ae527d9db6840641a0b13808b89", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2ec85135e2048ae527d9db6840641a0b13808b89", "html_url": "https://github.com/rust-lang/rust/commit/2ec85135e2048ae527d9db6840641a0b13808b89", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2ec85135e2048ae527d9db6840641a0b13808b89/comments", "author": {"login": "Yoric", "id": 10190, "node_id": "MDQ6VXNlcjEwMTkw", "avatar_url": "https://avatars.githubusercontent.com/u/10190?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Yoric", "html_url": "https://github.com/Yoric", "followers_url": "https://api.github.com/users/Yoric/followers", "following_url": "https://api.github.com/users/Yoric/following{/other_user}", "gists_url": "https://api.github.com/users/Yoric/gists{/gist_id}", "starred_url": "https://api.github.com/users/Yoric/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Yoric/subscriptions", "organizations_url": "https://api.github.com/users/Yoric/orgs", "repos_url": "https://api.github.com/users/Yoric/repos", "events_url": "https://api.github.com/users/Yoric/events{/privacy}", "received_events_url": "https://api.github.com/users/Yoric/received_events", "type": "User", "site_admin": false}, "committer": {"login": "marijnh", "id": 144427, "node_id": "MDQ6VXNlcjE0NDQyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/144427?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marijnh", "html_url": "https://github.com/marijnh", "followers_url": "https://api.github.com/users/marijnh/followers", "following_url": "https://api.github.com/users/marijnh/following{/other_user}", "gists_url": "https://api.github.com/users/marijnh/gists{/gist_id}", "starred_url": "https://api.github.com/users/marijnh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marijnh/subscriptions", "organizations_url": "https://api.github.com/users/marijnh/orgs", "repos_url": "https://api.github.com/users/marijnh/repos", "events_url": "https://api.github.com/users/marijnh/events{/privacy}", "received_events_url": "https://api.github.com/users/marijnh/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "33167f7decfdc70c9dca6c41f80883f12c13cfbc", "url": "https://api.github.com/repos/rust-lang/rust/commits/33167f7decfdc70c9dca6c41f80883f12c13cfbc", "html_url": "https://github.com/rust-lang/rust/commit/33167f7decfdc70c9dca6c41f80883f12c13cfbc"}], "stats": {"total": 91, "additions": 51, "deletions": 40}, "files": [{"sha": "9c7923a2ffe638790a8365b44b61e16b10dfd499", "filename": "src/comp/driver/rustc.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2ec85135e2048ae527d9db6840641a0b13808b89/src%2Fcomp%2Fdriver%2Frustc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2ec85135e2048ae527d9db6840641a0b13808b89/src%2Fcomp%2Fdriver%2Frustc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fdriver%2Frustc.rs?ref=2ec85135e2048ae527d9db6840641a0b13808b89", "patch": "@@ -94,7 +94,7 @@ fn time<@T>(do_it: bool, what: str, thunk: fn() -> T) -> T {\n     let rv = thunk();\n     let end = std::time::precise_time_s();\n     log_err #fmt[\"time: %s took %s s\", what,\n-                 common::float_to_str(end - start, 3u)];\n+                 std::float::float_to_str(end - start, 3u)];\n     ret rv;\n }\n "}, {"sha": "4b6fc258f5f23e2db16d8d9ac10a1c519f406dc6", "filename": "src/comp/middle/typeck.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/2ec85135e2048ae527d9db6840641a0b13808b89/src%2Fcomp%2Fmiddle%2Ftypeck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2ec85135e2048ae527d9db6840641a0b13808b89/src%2Fcomp%2Fmiddle%2Ftypeck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Ftypeck.rs?ref=2ec85135e2048ae527d9db6840641a0b13808b89", "patch": "@@ -1303,8 +1303,8 @@ fn valid_range_bounds(l1: @ast::lit, l2: @ast::lit) -> bool {\n     alt l1.node {\n       ast::lit_float(s1) | ast::lit_mach_float(_, s1) {\n         let s2 = lit_as_float(l2);\n-        let f1 = util::common::str_to_float(s1);\n-        let f2 = util::common::str_to_float(s2);\n+        let f1 = std::float::str_to_float(s1);\n+        let f2 = std::float::str_to_float(s2);\n         ret *util::common::min(f1, f2) == f1\n       }\n       ast::lit_uint(_) | ast::lit_char(_) {"}, {"sha": "a0cd519641be234d6f82ccf76ff9038b6c68836e", "filename": "src/comp/util/common.rs", "status": "modified", "additions": 3, "deletions": 37, "changes": 40, "blob_url": "https://github.com/rust-lang/rust/blob/2ec85135e2048ae527d9db6840641a0b13808b89/src%2Fcomp%2Futil%2Fcommon.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2ec85135e2048ae527d9db6840641a0b13808b89/src%2Fcomp%2Futil%2Fcommon.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Futil%2Fcommon.rs?ref=2ec85135e2048ae527d9db6840641a0b13808b89", "patch": "@@ -156,8 +156,8 @@ fn lit_in_range(l: @ast::lit, m1: @ast::lit, m2: @ast::lit) -> bool {\n       frange(f1, f2) {\n         alt l.node {\n           ast::lit_float(f3) | ast::lit_mach_float(_, f3) {\n-            str_to_float(f3) >= *min(f1, f2) &&\n-            str_to_float(f3) <= *max(f1, f2)\n+            std::float::str_to_float(f3) >= *min(f1, f2) &&\n+            std::float::str_to_float(f3) <= *max(f1, f2)\n           }\n           _ { fail }\n         }\n@@ -232,7 +232,7 @@ fn lits_to_range(l: @ast::lit, r: @ast::lit) -> range {\n       }\n       ast::lit_float(f1) | ast::lit_mach_float(_, f1) {\n         alt r.node { ast::lit_float(f2) | ast::lit_mach_float(_, f2) {\n-          frange(str_to_float(f1), str_to_float(f2))\n+          frange(std::float::str_to_float(f1), std::float::str_to_float(f2))\n         }\n         _ { fail } }\n       }\n@@ -293,41 +293,7 @@ fn is_main_name(path: [ast::ident]) -> bool {\n     str::eq(option::get(std::vec::last(path)), \"main\")\n }\n \n-// FIXME mode this to std::float when editing the stdlib no longer\n-// requires a snapshot\n-fn float_to_str(num: float, digits: uint) -> str {\n-    let accum = if num < 0.0 { num = -num; \"-\" } else { \"\" };\n-    let trunc = num as uint;\n-    let frac = num - (trunc as float);\n-    accum += uint::str(trunc);\n-    if frac == 0.0 || digits == 0u { ret accum; }\n-    accum += \".\";\n-    while digits > 0u && frac > 0.0 {\n-        frac *= 10.0;\n-        let digit = frac as uint;\n-        accum += uint::str(digit);\n-        frac -= digit as float;\n-        digits -= 1u;\n-    }\n-    ret accum;\n-}\n-\n-fn str_to_float(num: str) -> float {\n-    let digits = str::split(num, '.' as u8);\n-    let total = int::from_str(digits[0]) as float;\n \n-    fn dec_val(c: char) -> int { ret (c as int) - ('0' as int); }\n-\n-    let right = digits[1];\n-    let len = str::char_len(digits[1]);\n-    let i = 1u;\n-    while (i < len) {\n-        total += dec_val(str::pop_char(right)) as float /\n-                 (int::pow(10, i) as float);\n-        i += 1u;\n-    }\n-    ret total;\n-}\n \n //\n // Local Variables:"}, {"sha": "9a241ba36cf36b8e411570ee9516e0a6fc9f5ed7", "filename": "src/lib/float.rs", "status": "added", "additions": 44, "deletions": 0, "changes": 44, "blob_url": "https://github.com/rust-lang/rust/blob/2ec85135e2048ae527d9db6840641a0b13808b89/src%2Flib%2Ffloat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2ec85135e2048ae527d9db6840641a0b13808b89/src%2Flib%2Ffloat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flib%2Ffloat.rs?ref=2ec85135e2048ae527d9db6840641a0b13808b89", "patch": "@@ -0,0 +1,44 @@\n+fn float_to_str(num: float, digits: uint) -> str {\n+    let accum = if num < 0.0 { num = -num; \"-\" } else { \"\" };\n+    let trunc = num as uint;\n+    let frac = num - (trunc as float);\n+    accum += uint::str(trunc);\n+    if frac == 0.0 || digits == 0u { ret accum; }\n+    accum += \".\";\n+    while digits > 0u && frac > 0.0 {\n+        frac *= 10.0;\n+        let digit = frac as uint;\n+        accum += uint::str(digit);\n+        frac -= digit as float;\n+        digits -= 1u;\n+    }\n+    ret accum;\n+}\n+\n+fn str_to_float(num: str) -> float {\n+    let digits = str::split(num, '.' as u8);\n+    let total = int::from_str(digits[0]) as float;\n+\n+    fn dec_val(c: char) -> int { ret (c as int) - ('0' as int); }\n+\n+    let right = digits[1];\n+    let len = str::char_len(digits[1]);\n+    let i = 1u;\n+    while (i < len) {\n+        total += dec_val(str::pop_char(right)) as float /\n+                 (int::pow(10, i) as float);\n+        i += 1u;\n+    }\n+    ret total;\n+}\n+\n+//\n+// Local Variables:\n+// mode: rust\n+// fill-column: 78;\n+// indent-tabs-mode: nil\n+// c-basic-offset: 4\n+// buffer-file-coding-system: utf-8-unix\n+// compile-command: \"make -k -C $RBUILD 2>&1 | sed -e 's/\\\\/x\\\\//x:\\\\//g'\";\n+// End:\n+//"}, {"sha": "94f59064609911a7045dbd49066211bd931a5043", "filename": "src/lib/std.rc", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/2ec85135e2048ae527d9db6840641a0b13808b89/src%2Flib%2Fstd.rc", "raw_url": "https://github.com/rust-lang/rust/raw/2ec85135e2048ae527d9db6840641a0b13808b89/src%2Flib%2Fstd.rc", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flib%2Fstd.rc?ref=2ec85135e2048ae527d9db6840641a0b13808b89", "patch": "@@ -16,6 +16,7 @@ mod u8;\n mod u64;\n mod vec;\n mod str;\n+mod float;\n \n // General io and system-services modules.\n "}]}