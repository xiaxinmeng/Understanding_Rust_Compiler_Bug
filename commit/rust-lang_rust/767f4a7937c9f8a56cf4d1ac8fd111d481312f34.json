{"sha": "767f4a7937c9f8a56cf4d1ac8fd111d481312f34", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc2N2Y0YTc5MzdjOWY4YTU2Y2Y0ZDFhYzhmZDExMWQ0ODEzMTJmMzQ=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2014-07-12T09:21:39Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2014-07-12T09:21:39Z"}, "message": "auto merge of #15592 : arjantop/rust/bufwriter-write-fix, r=alexcrichton\n\nFirst condition is not needed and just prevents 0 length writes\r\n\r\nFixes #15583", "tree": {"sha": "83941b2aee60be458863c371618fe19e91ede146", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/83941b2aee60be458863c371618fe19e91ede146"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/767f4a7937c9f8a56cf4d1ac8fd111d481312f34", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/767f4a7937c9f8a56cf4d1ac8fd111d481312f34", "html_url": "https://github.com/rust-lang/rust/commit/767f4a7937c9f8a56cf4d1ac8fd111d481312f34", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/767f4a7937c9f8a56cf4d1ac8fd111d481312f34/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a5688ad22df15f74d5b4ad8231a9cfa6cd92296d", "url": "https://api.github.com/repos/rust-lang/rust/commits/a5688ad22df15f74d5b4ad8231a9cfa6cd92296d", "html_url": "https://github.com/rust-lang/rust/commit/a5688ad22df15f74d5b4ad8231a9cfa6cd92296d"}, {"sha": "30f07e9067beb931099588bb94b6efcc0d4aa489", "url": "https://api.github.com/repos/rust-lang/rust/commits/30f07e9067beb931099588bb94b6efcc0d4aa489", "html_url": "https://github.com/rust-lang/rust/commit/30f07e9067beb931099588bb94b6efcc0d4aa489"}], "stats": {"total": 6, "additions": 4, "deletions": 2}, "files": [{"sha": "1c0251c8369dedc4a8709d8f1cc74ae60c7edcc4", "filename": "src/libstd/io/mem.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/767f4a7937c9f8a56cf4d1ac8fd111d481312f34/src%2Flibstd%2Fio%2Fmem.rs", "raw_url": "https://github.com/rust-lang/rust/raw/767f4a7937c9f8a56cf4d1ac8fd111d481312f34/src%2Flibstd%2Fio%2Fmem.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fio%2Fmem.rs?ref=767f4a7937c9f8a56cf4d1ac8fd111d481312f34", "patch": "@@ -259,8 +259,8 @@ impl<'a> Writer for BufWriter<'a> {\n     #[inline]\n     fn write(&mut self, buf: &[u8]) -> IoResult<()> {\n         // return an error if the entire write does not fit in the buffer\n-        let max_size = self.buf.len();\n-        if self.pos >= max_size || (self.pos + buf.len()) > max_size {\n+        let cap = if self.pos >= self.buf.len() { 0 } else { self.buf.len() - self.pos };\n+        if buf.len() > cap {\n             return Err(IoError {\n                 kind: io::OtherIoError,\n                 desc: \"Trying to write past end of buffer\",\n@@ -416,6 +416,8 @@ mod test {\n             writer.write([1, 2, 3]).unwrap();\n             writer.write([4, 5, 6, 7]).unwrap();\n             assert_eq!(writer.tell(), Ok(8));\n+            writer.write([]).unwrap();\n+            assert_eq!(writer.tell(), Ok(8));\n         }\n         assert_eq!(buf.as_slice(), &[0, 1, 2, 3, 4, 5, 6, 7]);\n     }"}]}