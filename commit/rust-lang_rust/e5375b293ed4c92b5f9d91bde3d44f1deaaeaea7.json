{"sha": "e5375b293ed4c92b5f9d91bde3d44f1deaaeaea7", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU1Mzc1YjI5M2VkNGM5MmI1ZjlkOTFiZGUzZDQ0ZjFkZWFhZWFlYTc=", "commit": {"author": {"name": "Oliver Scherer", "email": "github35764891676564198441@oli-obk.de", "date": "2019-06-08T21:23:10Z"}, "committer": {"name": "Oliver Scherer", "email": "github35764891676564198441@oli-obk.de", "date": "2019-06-08T21:26:17Z"}, "message": "Deduplicate some code", "tree": {"sha": "6a7955a4c39e1d7cc6861571ee6c85554fc3982f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6a7955a4c39e1d7cc6861571ee6c85554fc3982f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e5375b293ed4c92b5f9d91bde3d44f1deaaeaea7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e5375b293ed4c92b5f9d91bde3d44f1deaaeaea7", "html_url": "https://github.com/rust-lang/rust/commit/e5375b293ed4c92b5f9d91bde3d44f1deaaeaea7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e5375b293ed4c92b5f9d91bde3d44f1deaaeaea7/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bafda927c3bf69e9e7b9ca0f8d8d930bb543909d", "url": "https://api.github.com/repos/rust-lang/rust/commits/bafda927c3bf69e9e7b9ca0f8d8d930bb543909d", "html_url": "https://github.com/rust-lang/rust/commit/bafda927c3bf69e9e7b9ca0f8d8d930bb543909d"}], "stats": {"total": 17, "additions": 2, "deletions": 15}, "files": [{"sha": "a5793a3ca1f8fd0204d70ba118b8c3db14fe806e", "filename": "src/librustc/mir/visit.rs", "status": "modified", "additions": 2, "deletions": 15, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/e5375b293ed4c92b5f9d91bde3d44f1deaaeaea7/src%2Flibrustc%2Fmir%2Fvisit.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e5375b293ed4c92b5f9d91bde3d44f1deaaeaea7/src%2Flibrustc%2Fmir%2Fvisit.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmir%2Fvisit.rs?ref=e5375b293ed4c92b5f9d91bde3d44f1deaaeaea7", "patch": "@@ -710,23 +710,10 @@ macro_rules! make_mir_visitor {\n                                 proj: & $($mutability)? Projection<'tcx>,\n                                 context: PlaceContext,\n                                 location: Location) {\n-                // this is duplicated with `super_place` in preparation for changing `Place` to be\n+                // this is calling `super_place` in preparation for changing `Place` to be\n                 // a struct with a base and a slice of projections. `visit_place` should only ever\n                 // be called for the base place now.\n-                match & $($mutability)? proj.base {\n-                    Place::Base(place_base) => {\n-                        self.visit_place_base(place_base, context, location);\n-                    }\n-                    Place::Projection(proj) => {\n-                        let context = if context.is_mutating_use() {\n-                            PlaceContext::MutatingUse(MutatingUseContext::Projection)\n-                        } else {\n-                            PlaceContext::NonMutatingUse(NonMutatingUseContext::Projection)\n-                        };\n-\n-                        self.visit_projection(proj, context, location);\n-                    }\n-                }\n+                self.super_place(& $($mutability)? proj.base, context, location);\n                 match & $($mutability)? proj.elem {\n                     ProjectionElem::Deref => {\n                     }"}]}