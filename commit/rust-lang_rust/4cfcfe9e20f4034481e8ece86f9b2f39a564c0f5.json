{"sha": "4cfcfe9e20f4034481e8ece86f9b2f39a564c0f5", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRjZmNmZTllMjBmNDAzNDQ4MWU4ZWNlODZmOWIyZjM5YTU2NGMwZjU=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-12-07T02:03:15Z"}, "committer": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-12-23T12:51:02Z"}, "message": "extract parse_neg_expr", "tree": {"sha": "10046ae33c95f023ab9019824758ebe76e1de36c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/10046ae33c95f023ab9019824758ebe76e1de36c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4cfcfe9e20f4034481e8ece86f9b2f39a564c0f5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4cfcfe9e20f4034481e8ece86f9b2f39a564c0f5", "html_url": "https://github.com/rust-lang/rust/commit/4cfcfe9e20f4034481e8ece86f9b2f39a564c0f5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4cfcfe9e20f4034481e8ece86f9b2f39a564c0f5/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f6ab4394361529e538a5763cfa56401d15ac3d9e", "url": "https://api.github.com/repos/rust-lang/rust/commits/f6ab4394361529e538a5763cfa56401d15ac3d9e", "html_url": "https://github.com/rust-lang/rust/commit/f6ab4394361529e538a5763cfa56401d15ac3d9e"}], "stats": {"total": 15, "additions": 9, "deletions": 6}, "files": [{"sha": "71912c7272bf34c769fc0cf06eff9d07f4bf3465", "filename": "src/librustc_parse/parser/expr.rs", "status": "modified", "additions": 9, "deletions": 6, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/4cfcfe9e20f4034481e8ece86f9b2f39a564c0f5/src%2Flibrustc_parse%2Fparser%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4cfcfe9e20f4034481e8ece86f9b2f39a564c0f5/src%2Flibrustc_parse%2Fparser%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_parse%2Fparser%2Fexpr.rs?ref=4cfcfe9e20f4034481e8ece86f9b2f39a564c0f5", "patch": "@@ -469,12 +469,7 @@ impl<'a> Parser<'a> {\n                     .emit();\n                 (lo.to(span), self.mk_unary(UnOp::Not, e))\n             }\n-            token::BinOp(token::Minus) => {\n-                self.bump();\n-                let e = self.parse_prefix_expr(None);\n-                let (span, e) = self.interpolated_or_expr_span(e)?;\n-                (lo.to(span), self.mk_unary(UnOp::Neg, e))\n-            }\n+            token::BinOp(token::Minus) => self.parse_neg_expr(lo)?,\n             token::BinOp(token::Star) => self.parse_deref_expr(lo)?,\n             token::BinOp(token::And) | token::AndAnd => self.parse_borrow_expr(lo)?,\n             token::Ident(..) if self.token.is_keyword(kw::Box) => self.parse_box_expr(lo)?,\n@@ -486,6 +481,14 @@ impl<'a> Parser<'a> {\n         return Ok(self.mk_expr(lo.to(hi), ex, attrs));\n     }\n \n+    /// Parse `-expr`.\n+    fn parse_neg_expr(&mut self, lo: Span) -> PResult<'a, (Span, ExprKind)> {\n+        self.bump(); // `-`\n+        let expr = self.parse_prefix_expr(None);\n+        let (span, expr) = self.interpolated_or_expr_span(expr)?;\n+        Ok((lo.to(span), self.mk_unary(UnOp::Neg, expr)))\n+    }\n+\n     /// Parse `*expr`.\n     fn parse_deref_expr(&mut self, lo: Span) -> PResult<'a, (Span, ExprKind)> {\n         self.bump(); // `*`"}]}