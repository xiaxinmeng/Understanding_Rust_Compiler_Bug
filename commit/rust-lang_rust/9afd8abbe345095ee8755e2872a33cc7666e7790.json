{"sha": "9afd8abbe345095ee8755e2872a33cc7666e7790", "node_id": "MDY6Q29tbWl0NzI0NzEyOjlhZmQ4YWJiZTM0NTA5NWVlODc1NWUyODcyYTMzY2M3NjY2ZTc3OTA=", "commit": {"author": {"name": "Devon Hollowood", "email": "devonhollowood@gmail.com", "date": "2018-10-11T22:18:58Z"}, "committer": {"name": "Devon Hollowood", "email": "devonhollowood@gmail.com", "date": "2018-10-11T22:18:58Z"}, "message": "Fix `similar_names` warnings\n\nMost of these are just `#![allow]`ed, because they are things like using\nl vs r to differentiate left vs right. These would be made less clear by\ntaking the advice of `similar_names`", "tree": {"sha": "7a21fbce18ee16b41c2ef25d9e22afe1bee90f76", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7a21fbce18ee16b41c2ef25d9e22afe1bee90f76"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9afd8abbe345095ee8755e2872a33cc7666e7790", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9afd8abbe345095ee8755e2872a33cc7666e7790", "html_url": "https://github.com/rust-lang/rust/commit/9afd8abbe345095ee8755e2872a33cc7666e7790", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9afd8abbe345095ee8755e2872a33cc7666e7790/comments", "author": {"login": "devonhollowood", "id": 7864326, "node_id": "MDQ6VXNlcjc4NjQzMjY=", "avatar_url": "https://avatars.githubusercontent.com/u/7864326?v=4", "gravatar_id": "", "url": "https://api.github.com/users/devonhollowood", "html_url": "https://github.com/devonhollowood", "followers_url": "https://api.github.com/users/devonhollowood/followers", "following_url": "https://api.github.com/users/devonhollowood/following{/other_user}", "gists_url": "https://api.github.com/users/devonhollowood/gists{/gist_id}", "starred_url": "https://api.github.com/users/devonhollowood/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/devonhollowood/subscriptions", "organizations_url": "https://api.github.com/users/devonhollowood/orgs", "repos_url": "https://api.github.com/users/devonhollowood/repos", "events_url": "https://api.github.com/users/devonhollowood/events{/privacy}", "received_events_url": "https://api.github.com/users/devonhollowood/received_events", "type": "User", "site_admin": false}, "committer": {"login": "devonhollowood", "id": 7864326, "node_id": "MDQ6VXNlcjc4NjQzMjY=", "avatar_url": "https://avatars.githubusercontent.com/u/7864326?v=4", "gravatar_id": "", "url": "https://api.github.com/users/devonhollowood", "html_url": "https://github.com/devonhollowood", "followers_url": "https://api.github.com/users/devonhollowood/followers", "following_url": "https://api.github.com/users/devonhollowood/following{/other_user}", "gists_url": "https://api.github.com/users/devonhollowood/gists{/gist_id}", "starred_url": "https://api.github.com/users/devonhollowood/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/devonhollowood/subscriptions", "organizations_url": "https://api.github.com/users/devonhollowood/orgs", "repos_url": "https://api.github.com/users/devonhollowood/repos", "events_url": "https://api.github.com/users/devonhollowood/events{/privacy}", "received_events_url": "https://api.github.com/users/devonhollowood/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9d3373137b74a403281b293b19ab9346773af073", "url": "https://api.github.com/repos/rust-lang/rust/commits/9d3373137b74a403281b293b19ab9346773af073", "html_url": "https://github.com/rust-lang/rust/commit/9d3373137b74a403281b293b19ab9346773af073"}], "stats": {"total": 23, "additions": 17, "deletions": 6}, "files": [{"sha": "3710301c8ab6ba7255d301d33716b4c197078871", "filename": "clippy_lints/src/double_comparison.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/9afd8abbe345095ee8755e2872a33cc7666e7790/clippy_lints%2Fsrc%2Fdouble_comparison.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9afd8abbe345095ee8755e2872a33cc7666e7790/clippy_lints%2Fsrc%2Fdouble_comparison.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fdouble_comparison.rs?ref=9afd8abbe345095ee8755e2872a33cc7666e7790", "patch": "@@ -49,6 +49,7 @@ impl LintPass for DoubleComparisonPass {\n }\n \n impl<'a, 'tcx> DoubleComparisonPass {\n+    #[allow(clippy::similar_names)]\n     fn check_binop(\n         &self,\n         cx: &LateContext<'a, 'tcx>,"}, {"sha": "315bc54cd17931e9a8c6a4ead314b0306e0a8be4", "filename": "clippy_lints/src/enum_clike.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/9afd8abbe345095ee8755e2872a33cc7666e7790/clippy_lints%2Fsrc%2Fenum_clike.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9afd8abbe345095ee8755e2872a33cc7666e7790/clippy_lints%2Fsrc%2Fenum_clike.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fenum_clike.rs?ref=9afd8abbe345095ee8755e2872a33cc7666e7790", "patch": "@@ -63,16 +63,16 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for UnportableVariant {\n                 let variant = &var.node;\n                 if let Some(ref anon_const) = variant.disr_expr {\n                     let param_env = ty::ParamEnv::empty();\n-                    let did = cx.tcx.hir.body_owner_def_id(anon_const.body);\n-                    let substs = Substs::identity_for_item(cx.tcx.global_tcx(), did);\n-                    let instance = ty::Instance::new(did, substs);\n-                    let cid = GlobalId {\n+                    let def_id = cx.tcx.hir.body_owner_def_id(anon_const.body);\n+                    let substs = Substs::identity_for_item(cx.tcx.global_tcx(), def_id);\n+                    let instance = ty::Instance::new(def_id, substs);\n+                    let c_id = GlobalId {\n                         instance,\n                         promoted: None\n                     };\n-                    let constant = cx.tcx.const_eval(param_env.and(cid)).ok();\n+                    let constant = cx.tcx.const_eval(param_env.and(c_id)).ok();\n                     if let Some(Constant::Int(val)) = constant.and_then(|c| miri_to_const(cx.tcx, c)) {\n-                        let mut ty = cx.tcx.type_of(did);\n+                        let mut ty = cx.tcx.type_of(def_id);\n                         if let ty::Adt(adt, _) = ty.sty {\n                             if adt.is_enum() {\n                                 ty = adt.repr.discr_type().to_ty(cx.tcx);"}, {"sha": "3454eff08a90c07c332b9c28d05c2e17a67b8562", "filename": "clippy_lints/src/enum_variants.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/9afd8abbe345095ee8755e2872a33cc7666e7790/clippy_lints%2Fsrc%2Fenum_variants.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9afd8abbe345095ee8755e2872a33cc7666e7790/clippy_lints%2Fsrc%2Fenum_variants.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fenum_variants.rs?ref=9afd8abbe345095ee8755e2872a33cc7666e7790", "patch": "@@ -255,6 +255,7 @@ impl EarlyLintPass for EnumVariantNames {\n         assert!(last.is_some());\n     }\n \n+    #[allow(clippy::similar_names)]\n     fn check_item(&mut self, cx: &EarlyContext<'_>, item: &Item) {\n         let item_name = item.ident.as_str();\n         let item_name_chars = item_name.chars().count();"}, {"sha": "dfe0c0180a77ab89d575832efeb6cc503e20a899", "filename": "clippy_lints/src/eq_op.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/9afd8abbe345095ee8755e2872a33cc7666e7790/clippy_lints%2Fsrc%2Feq_op.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9afd8abbe345095ee8755e2872a33cc7666e7790/clippy_lints%2Fsrc%2Feq_op.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Feq_op.rs?ref=9afd8abbe345095ee8755e2872a33cc7666e7790", "patch": "@@ -63,6 +63,7 @@ impl LintPass for EqOp {\n }\n \n impl<'a, 'tcx> LateLintPass<'a, 'tcx> for EqOp {\n+    #[allow(clippy::similar_names)]\n     fn check_expr(&mut self, cx: &LateContext<'a, 'tcx>, e: &'tcx Expr) {\n         if let ExprKind::Binary(op, ref left, ref right) = e.node {\n             if in_macro(e.span) {"}, {"sha": "bced0c9552d003614b178c353db495d6b2384265", "filename": "clippy_lints/src/if_let_redundant_pattern_matching.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/9afd8abbe345095ee8755e2872a33cc7666e7790/clippy_lints%2Fsrc%2Fif_let_redundant_pattern_matching.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9afd8abbe345095ee8755e2872a33cc7666e7790/clippy_lints%2Fsrc%2Fif_let_redundant_pattern_matching.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fif_let_redundant_pattern_matching.rs?ref=9afd8abbe345095ee8755e2872a33cc7666e7790", "patch": "@@ -56,6 +56,7 @@ impl LintPass for Pass {\n }\n \n impl<'a, 'tcx> LateLintPass<'a, 'tcx> for Pass {\n+    #[allow(clippy::similar_names)]\n     fn check_expr(&mut self, cx: &LateContext<'a, 'tcx>, expr: &'tcx Expr) {\n         if let ExprKind::Match(ref op, ref arms, MatchSource::IfLetDesugar { .. }) = expr.node {\n             if arms[0].pats.len() == 1 {"}, {"sha": "801b6db63f5e0c9fa3de9f94026178557bd9bdc1", "filename": "clippy_lints/src/transmute.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/9afd8abbe345095ee8755e2872a33cc7666e7790/clippy_lints%2Fsrc%2Ftransmute.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9afd8abbe345095ee8755e2872a33cc7666e7790/clippy_lints%2Fsrc%2Ftransmute.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Ftransmute.rs?ref=9afd8abbe345095ee8755e2872a33cc7666e7790", "patch": "@@ -227,6 +227,7 @@ impl LintPass for Transmute {\n }\n \n impl<'a, 'tcx> LateLintPass<'a, 'tcx> for Transmute {\n+    #[allow(clippy::similar_names)]\n     fn check_expr(&mut self, cx: &LateContext<'a, 'tcx>, e: &'tcx Expr) {\n         if let ExprKind::Call(ref path_expr, ref args) = e.node {\n             if let ExprKind::Path(ref qpath) = path_expr.node {"}, {"sha": "7a0b28d15d875f47b53d78caed01d7bb1f5f47f0", "filename": "clippy_lints/src/utils/hir_utils.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/9afd8abbe345095ee8755e2872a33cc7666e7790/clippy_lints%2Fsrc%2Futils%2Fhir_utils.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9afd8abbe345095ee8755e2872a33cc7666e7790/clippy_lints%2Fsrc%2Futils%2Fhir_utils.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Futils%2Fhir_utils.rs?ref=9afd8abbe345095ee8755e2872a33cc7666e7790", "patch": "@@ -73,6 +73,7 @@ impl<'a, 'tcx: 'a> SpanlessEq<'a, 'tcx> {\n             && both(&left.expr, &right.expr, |l, r| self.eq_expr(l, r))\n     }\n \n+    #[allow(clippy::similar_names)]\n     pub fn eq_expr(&mut self, left: &Expr, right: &Expr) -> bool {\n         if self.ignore_fn && differing_macro_contexts(left.span, right.span) {\n             return false;\n@@ -208,6 +209,7 @@ impl<'a, 'tcx: 'a> SpanlessEq<'a, 'tcx> {\n         }\n     }\n \n+    #[allow(clippy::similar_names)]\n     fn eq_qpath(&mut self, left: &QPath, right: &QPath) -> bool {\n         match (left, right) {\n             (&QPath::Resolved(ref lty, ref lpath), &QPath::Resolved(ref rty, ref rpath)) => {\n@@ -262,6 +264,7 @@ impl<'a, 'tcx: 'a> SpanlessEq<'a, 'tcx> {\n         self.eq_ty_kind(&left.node, &right.node)\n     }\n \n+    #[allow(clippy::similar_names)]\n     pub fn eq_ty_kind(&mut self, left: &TyKind, right: &TyKind) -> bool {\n         match (left, right) {\n             (&TyKind::Slice(ref l_vec), &TyKind::Slice(ref r_vec)) => self.eq_ty(l_vec, r_vec),"}, {"sha": "ea48aa9ab5e7d76e1ccb27a9751d9e6f7027116f", "filename": "clippy_lints/src/utils/inspector.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9afd8abbe345095ee8755e2872a33cc7666e7790/clippy_lints%2Fsrc%2Futils%2Finspector.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9afd8abbe345095ee8755e2872a33cc7666e7790/clippy_lints%2Fsrc%2Futils%2Finspector.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Futils%2Finspector.rs?ref=9afd8abbe345095ee8755e2872a33cc7666e7790", "patch": "@@ -166,6 +166,7 @@ fn print_decl(cx: &LateContext<'_, '_>, decl: &hir::Decl) {\n     }\n }\n \n+#[allow(clippy::similar_names)]\n fn print_expr(cx: &LateContext<'_, '_>, expr: &hir::Expr, indent: usize) {\n     let ind = \"  \".repeat(indent);\n     println!(\"{}+\", ind);\n@@ -424,6 +425,7 @@ fn print_item(cx: &LateContext<'_, '_>, item: &hir::Item) {\n     }\n }\n \n+#[allow(clippy::similar_names)]\n fn print_pat(cx: &LateContext<'_, '_>, pat: &hir::Pat, indent: usize) {\n     let ind = \"  \".repeat(indent);\n     println!(\"{}+\", ind);"}, {"sha": "f3af698ffa2f7ecd1864d1e60ed573fa01cc030d", "filename": "clippy_lints/src/utils/usage.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/9afd8abbe345095ee8755e2872a33cc7666e7790/clippy_lints%2Fsrc%2Futils%2Fusage.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9afd8abbe345095ee8755e2872a33cc7666e7790/clippy_lints%2Fsrc%2Futils%2Fusage.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Futils%2Fusage.rs?ref=9afd8abbe345095ee8755e2872a33cc7666e7790", "patch": "@@ -54,6 +54,7 @@ struct MutVarsDelegate {\n }\n \n impl<'tcx> MutVarsDelegate {\n+    #[allow(clippy::similar_names)]\n     fn update(&mut self, cat: &'tcx Categorization<'_>) {\n         match *cat {\n             Categorization::Local(id) => {"}]}