{"sha": "a82f4a574efeb44d413035eac5beee61e4611a18", "node_id": "C_kwDOAAsO6NoAKGE4MmY0YTU3NGVmZWI0NGQ0MTMwMzVlYWM1YmVlZTYxZTQ2MTFhMTg", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2022-07-05T15:08:13Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-07-05T15:08:13Z"}, "message": "Rollup merge of #98895 - ChrisDenton:no-elves-allowed, r=jyn514\n\nbootstrap.py: Always use `.exe` for Windows\n\nThis ensures that it will run the Windows executable if other files in the directory (such as Linux executables) have the same file name minus the extension. I've been tripped up by this a few times where both `bootstrap` and `bootstrap.exe` end up in the same directory.\n\nThis PR avoids ever having to see the following message:\n\n`OSError: [WinError 193] %1 is not a valid Win32 application`", "tree": {"sha": "395d7e7cb6804c20e5b7a0704067cb58a06db3ba", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/395d7e7cb6804c20e5b7a0704067cb58a06db3ba"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a82f4a574efeb44d413035eac5beee61e4611a18", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJixFPdCRBK7hj4Ov3rIwAAGT4IAKLEZi141sWKLv6I9Fy7OPWw\nP/bNzaPDX2Q8+KxRlrtjNpVIMt2PkIkq4sECHPe/TflJroD57E2wpvCWoR5QyqBx\nRtvrJTY79G2YRgJKh/t259Qfn7q+V0A/RS18HasXksccjEYxWaAgfxYOJV70+7kd\nB5UaUdEhzhyeZnqiuYaEr//a1Pxq1vedJnDQbgT+Hn5H+TN4SWKxbefjjUAP8gW4\nm6+u+XmMJSuE3kBmAWZW4VTajnJHOuIiI7iXlO3HVeqWdA4BBiz8agDQuGJatc6I\nboltVg0LDFnCt2oaiOyoa93DhAskQJwQYPyGGSsA32Yo0QiRNVj4QMj5Bv9K8Ew=\n=ITDY\n-----END PGP SIGNATURE-----\n", "payload": "tree 395d7e7cb6804c20e5b7a0704067cb58a06db3ba\nparent 70ade7d503a4dcd3552c17a56fddd18bfd53c98d\nparent 9ac4a4e67a2d217179a465bc865e31915682c93c\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1657033693 +0200\ncommitter GitHub <noreply@github.com> 1657033693 +0200\n\nRollup merge of #98895 - ChrisDenton:no-elves-allowed, r=jyn514\n\nbootstrap.py: Always use `.exe` for Windows\n\nThis ensures that it will run the Windows executable if other files in the directory (such as Linux executables) have the same file name minus the extension. I've been tripped up by this a few times where both `bootstrap` and `bootstrap.exe` end up in the same directory.\n\nThis PR avoids ever having to see the following message:\n\n`OSError: [WinError 193] %1 is not a valid Win32 application`\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a82f4a574efeb44d413035eac5beee61e4611a18", "html_url": "https://github.com/rust-lang/rust/commit/a82f4a574efeb44d413035eac5beee61e4611a18", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a82f4a574efeb44d413035eac5beee61e4611a18/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "70ade7d503a4dcd3552c17a56fddd18bfd53c98d", "url": "https://api.github.com/repos/rust-lang/rust/commits/70ade7d503a4dcd3552c17a56fddd18bfd53c98d", "html_url": "https://github.com/rust-lang/rust/commit/70ade7d503a4dcd3552c17a56fddd18bfd53c98d"}, {"sha": "9ac4a4e67a2d217179a465bc865e31915682c93c", "url": "https://api.github.com/repos/rust-lang/rust/commits/9ac4a4e67a2d217179a465bc865e31915682c93c", "html_url": "https://github.com/rust-lang/rust/commit/9ac4a4e67a2d217179a465bc865e31915682c93c"}], "stats": {"total": 4, "additions": 4, "deletions": 0}, "files": [{"sha": "9301c5a2ff300da1103c65ac4f8ddd3ecdf9ba55", "filename": "src/bootstrap/bootstrap.py", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/a82f4a574efeb44d413035eac5beee61e4611a18/src%2Fbootstrap%2Fbootstrap.py", "raw_url": "https://github.com/rust-lang/rust/raw/a82f4a574efeb44d413035eac5beee61e4611a18/src%2Fbootstrap%2Fbootstrap.py", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fbootstrap.py?ref=a82f4a574efeb44d413035eac5beee61e4611a18", "patch": "@@ -152,6 +152,10 @@ def run(args, verbose=False, exception=False, is_bootstrap=False, **kwargs):\n     if verbose:\n         print(\"running: \" + ' '.join(args))\n     sys.stdout.flush()\n+    # Ensure that the .exe is used on Windows just in case a Linux ELF has been\n+    # compiled in the same directory.\n+    if os.name == 'nt' and not args[0].endswith('.exe'):\n+        args[0] += '.exe'\n     # Use Popen here instead of call() as it apparently allows powershell on\n     # Windows to not lock up waiting for input presumably.\n     ret = subprocess.Popen(args, **kwargs)"}]}