{"sha": "243dcd0083c6cfb5f6ead85315bd16e5844e6c86", "node_id": "C_kwDOAAsO6NoAKDI0M2RjZDAwODNjNmNmYjVmNmVhZDg1MzE1YmQxNmU1ODQ0ZTZjODY", "commit": {"author": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2023-02-19T13:47:56Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2023-02-19T13:47:56Z"}, "message": "Rollup merge of #108188 - jyn514:ra-sysroot, r=albertlarsan68\n\nChange src/etc/vscode_settings.json to always treat ./library as the sysroot source\n\nSee\nhttps://rust-lang.zulipchat.com/#narrow/stream/185405-t-compiler.2Frust-analyzer/topic/False.20error.20report.20for.20.60rust-analyzer.28private-field.29.60 for further discussion; previously this had various bugs.\n\nI tested go-to-definition on:\n- `use std::io::Write` in `src/bootstrap/setup.rs`\n- `use std::cell::RefCell` in `src/librustdoc/core.rs`\n- `use rustc_span::symbol::sym` in `src/librustdoc/core.rs`\n- `use std::fmt` in `compiler/rustc_span/src/symbol.rs`\n- `Global` in `library/alloc/src/alloc/tests.rs`\n\nThe following things still don't work:\n- `Global.deallocate` in alloc/tests.rs. This function is under `cfg(not(test))`, so it can't be enabled without disabling RA in `tests.rs` altogether. I think this might be fixable by moving `library/alloc/src/alloc/tests.rs` to `library/alloc/tests/alloc/lib.rs`, so it's in a different crate, but I'd like to avoid blocking this improvement on that change.\n\ncc `@thomcc` `@BoxyUwU` `@spastorino` - you've had issues with RA in the past, does this fix them? Are there any other use cases I should test? You can try these changes out by running `cp src/etc/vscode_settings.json .vscode/settings.json`, or running `x setup` and picking a random profile (it won't overwrite config.toml if it already exists). See https://github.com/rust-lang/rust/pull/108135 for plans to make updating the config easier.\n\nr? `@Veykril`", "tree": {"sha": "92fea5ffe4a52fea9905a8dbf55a9475dce8e32a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/92fea5ffe4a52fea9905a8dbf55a9475dce8e32a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/243dcd0083c6cfb5f6ead85315bd16e5844e6c86", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJj8iiMCRBK7hj4Ov3rIwAAlQgIACCJ3Md/7DzRw8IgKMbQwfd5\n05lsGj1L4m5MWdm9Yjr9AtvpQcHyfeehr0hHBwRAJxd5v7kJ68/IIVrZIODDd9vw\nwxd3xlUR3BaFEKKb1LK/BN1JvSwx2o8s/crkkrks3xXDzVmh6XA2xkr9g2TnjEHV\nLa7s7AUmya+FFZzDgLbuLZtHWVa2hx5AJ736CMFqt5Kf4c5hrG1n76dZnYROayyN\n9OE3NAcc3nTrg7/B+nJe8x5/RsXXwN1RWzUFcYudjneP6UV3b7miCPQpwzjcjWKW\nc5JVRTweHOHieFY+qUQau26IM81llxgjqxG35VcDIy+hK7ufoF3lPeSer2SoCzU=\n=ExLo\n-----END PGP SIGNATURE-----\n", "payload": "tree 92fea5ffe4a52fea9905a8dbf55a9475dce8e32a\nparent bd63edc07aad0c3fa7300505cf45bacb6bfb650f\nparent 6209e6c5983f93526da54db1b66beb3f1d658437\nauthor Guillaume Gomez <guillaume1.gomez@gmail.com> 1676814476 +0100\ncommitter GitHub <noreply@github.com> 1676814476 +0100\n\nRollup merge of #108188 - jyn514:ra-sysroot, r=albertlarsan68\n\nChange src/etc/vscode_settings.json to always treat ./library as the sysroot source\n\nSee\nhttps://rust-lang.zulipchat.com/#narrow/stream/185405-t-compiler.2Frust-analyzer/topic/False.20error.20report.20for.20.60rust-analyzer.28private-field.29.60 for further discussion; previously this had various bugs.\n\nI tested go-to-definition on:\n- `use std::io::Write` in `src/bootstrap/setup.rs`\n- `use std::cell::RefCell` in `src/librustdoc/core.rs`\n- `use rustc_span::symbol::sym` in `src/librustdoc/core.rs`\n- `use std::fmt` in `compiler/rustc_span/src/symbol.rs`\n- `Global` in `library/alloc/src/alloc/tests.rs`\n\nThe following things still don't work:\n- `Global.deallocate` in alloc/tests.rs. This function is under `cfg(not(test))`, so it can't be enabled without disabling RA in `tests.rs` altogether. I think this might be fixable by moving `library/alloc/src/alloc/tests.rs` to `library/alloc/tests/alloc/lib.rs`, so it's in a different crate, but I'd like to avoid blocking this improvement on that change.\n\ncc `@thomcc` `@BoxyUwU` `@spastorino` - you've had issues with RA in the past, does this fix them? Are there any other use cases I should test? You can try these changes out by running `cp src/etc/vscode_settings.json .vscode/settings.json`, or running `x setup` and picking a random profile (it won't overwrite config.toml if it already exists). See https://github.com/rust-lang/rust/pull/108135 for plans to make updating the config easier.\n\nr? `@Veykril`\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/243dcd0083c6cfb5f6ead85315bd16e5844e6c86", "html_url": "https://github.com/rust-lang/rust/commit/243dcd0083c6cfb5f6ead85315bd16e5844e6c86", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/243dcd0083c6cfb5f6ead85315bd16e5844e6c86/comments", "author": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bd63edc07aad0c3fa7300505cf45bacb6bfb650f", "url": "https://api.github.com/repos/rust-lang/rust/commits/bd63edc07aad0c3fa7300505cf45bacb6bfb650f", "html_url": "https://github.com/rust-lang/rust/commit/bd63edc07aad0c3fa7300505cf45bacb6bfb650f"}, {"sha": "6209e6c5983f93526da54db1b66beb3f1d658437", "url": "https://api.github.com/repos/rust-lang/rust/commits/6209e6c5983f93526da54db1b66beb3f1d658437", "html_url": "https://github.com/rust-lang/rust/commit/6209e6c5983f93526da54db1b66beb3f1d658437"}], "stats": {"total": 5, "additions": 3, "deletions": 2}, "files": [{"sha": "a027139df23979032eb231ee90ff3c9e015a0920", "filename": "src/bootstrap/setup.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/243dcd0083c6cfb5f6ead85315bd16e5844e6c86/src%2Fbootstrap%2Fsetup.rs", "raw_url": "https://github.com/rust-lang/rust/raw/243dcd0083c6cfb5f6ead85315bd16e5844e6c86/src%2Fbootstrap%2Fsetup.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fsetup.rs?ref=243dcd0083c6cfb5f6ead85315bd16e5844e6c86", "patch": "@@ -29,6 +29,7 @@ pub enum Profile {\n static SETTINGS_HASHES: &[&str] = &[\n     \"ea67e259dedf60d4429b6c349a564ffcd1563cf41c920a856d1f5b16b4701ac8\",\n     \"56e7bf011c71c5d81e0bf42e84938111847a810eee69d906bba494ea90b51922\",\n+    \"af1b5efe196aed007577899db9dae15d6dbc923d6fa42fa0934e68617ba9bbe0\",\n ];\n static VSCODE_SETTINGS: &str = include_str!(\"../etc/vscode_settings.json\");\n "}, {"sha": "dd01bfaa7252d77022b423ce858ea1951147accf", "filename": "src/etc/vscode_settings.json", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/243dcd0083c6cfb5f6ead85315bd16e5844e6c86/src%2Fetc%2Fvscode_settings.json", "raw_url": "https://github.com/rust-lang/rust/raw/243dcd0083c6cfb5f6ead85315bd16e5844e6c86/src%2Fetc%2Fvscode_settings.json", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fetc%2Fvscode_settings.json?ref=243dcd0083c6cfb5f6ead85315bd16e5844e6c86", "patch": "@@ -1,7 +1,7 @@\n {\n     \"rust-analyzer.check.invocationLocation\": \"root\",\n     \"rust-analyzer.check.invocationStrategy\": \"once\",\n-    \"rust-analyzer.checkOnSave.overrideCommand\": [\n+    \"rust-analyzer.check.overrideCommand\": [\n         \"python3\",\n         \"x.py\",\n         \"check\",\n@@ -23,6 +23,6 @@\n         \"check\",\n         \"--json-output\"\n     ],\n-    \"rust-analyzer.cargo.sysroot\": \"./build/host/stage0-sysroot\",\n+    \"rust-analyzer.cargo.sysrootSrc\": \"./library\",\n     \"rust-analyzer.rustc.source\": \"./Cargo.toml\"\n }"}]}