{"sha": "c9fdfdb2bb53565953c2a7fbf1e1e938804f32e6", "node_id": "MDY6Q29tbWl0NzI0NzEyOmM5ZmRmZGIyYmI1MzU2NTk1M2MyYTdmYmYxZTFlOTM4ODA0ZjMyZTY=", "commit": {"author": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2015-02-11T22:02:02Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2015-02-11T22:02:02Z"}, "message": "rollup merge of #22048: LeoTestard/impl-patterns-used\n\nThe live code analysis only visited the function's body when visiting a\nmethod, and not the FnDecl and the generics, resulting in code to be\nincorrectly marked as unused when it only appeared in the generics, the\narguments, or the return type, whereas the same code in non-method\nfunctions was correctly detected as used. Fixes #20343.\n\nOriginally I just added a call to `walk_generics` and `walk_fndecl` alongside `walk_block` but then I noticed the `walk_method_helper` function did pretty much the same thing. The only difference is that it also calls `visit_mac`, but since this is not going to happen at this stage, I think it's ok. However let me know if this was not the right thing to do.", "tree": {"sha": "f45b20948ff4070e08364c49cfd8c9d3ed423787", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f45b20948ff4070e08364c49cfd8c9d3ed423787"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c9fdfdb2bb53565953c2a7fbf1e1e938804f32e6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c9fdfdb2bb53565953c2a7fbf1e1e938804f32e6", "html_url": "https://github.com/rust-lang/rust/commit/c9fdfdb2bb53565953c2a7fbf1e1e938804f32e6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c9fdfdb2bb53565953c2a7fbf1e1e938804f32e6/comments", "author": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8b8331ad09790a2500b315acc436281c78f3c719", "url": "https://api.github.com/repos/rust-lang/rust/commits/8b8331ad09790a2500b315acc436281c78f3c719", "html_url": "https://github.com/rust-lang/rust/commit/8b8331ad09790a2500b315acc436281c78f3c719"}, {"sha": "73201fd675e6d7d6f1ab6c116a360a39a593de93", "url": "https://api.github.com/repos/rust-lang/rust/commits/73201fd675e6d7d6f1ab6c116a360a39a593de93", "html_url": "https://github.com/rust-lang/rust/commit/73201fd675e6d7d6f1ab6c116a360a39a593de93"}], "stats": {"total": 40, "additions": 39, "deletions": 1}, "files": [{"sha": "b2335f91ad9869641801490e62637710aee4fa86", "filename": "src/librustc/middle/dead.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c9fdfdb2bb53565953c2a7fbf1e1e938804f32e6/src%2Flibrustc%2Fmiddle%2Fdead.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c9fdfdb2bb53565953c2a7fbf1e1e938804f32e6/src%2Flibrustc%2Fmiddle%2Fdead.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fdead.rs?ref=c9fdfdb2bb53565953c2a7fbf1e1e938804f32e6", "patch": "@@ -234,7 +234,7 @@ impl<'a, 'tcx> MarkSymbolVisitor<'a, 'tcx> {\n             ast_map::NodeImplItem(impl_item) => {\n                 match *impl_item {\n                     ast::MethodImplItem(ref method) => {\n-                        visit::walk_block(self, method.pe_body());\n+                        visit::walk_method_helper(self, method);\n                     }\n                     ast::TypeImplItem(_) => {}\n                 }"}, {"sha": "79034a4a4a6d65590e8980a10fd2c16eda2a03a6", "filename": "src/test/run-pass/issue-20343.rs", "status": "added", "additions": 38, "deletions": 0, "changes": 38, "blob_url": "https://github.com/rust-lang/rust/blob/c9fdfdb2bb53565953c2a7fbf1e1e938804f32e6/src%2Ftest%2Frun-pass%2Fissue-20343.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c9fdfdb2bb53565953c2a7fbf1e1e938804f32e6/src%2Ftest%2Frun-pass%2Fissue-20343.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-20343.rs?ref=c9fdfdb2bb53565953c2a7fbf1e1e938804f32e6", "patch": "@@ -0,0 +1,38 @@\n+// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// Regression test for Issue #20343.\n+\n+#![deny(dead_code)]\n+\n+struct B { b: u32 }\n+struct C;\n+struct D;\n+\n+trait T<A> {}\n+impl<A> T<A> for () {}\n+\n+impl B {\n+    // test for unused code in arguments\n+    fn foo(B { b }: B) -> u32 { b }\n+\n+    // test for unused code in return type\n+    fn bar() -> C { unsafe { ::std::mem::transmute(()) } }\n+\n+    // test for unused code in generics\n+    fn baz<A: T<D>>() {}\n+}\n+\n+pub fn main() {\n+    let b = B { b: 3 };\n+    B::foo(b);\n+    B::bar();\n+    B::baz::<()>();\n+}"}]}