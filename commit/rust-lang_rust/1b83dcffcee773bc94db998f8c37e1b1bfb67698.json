{"sha": "1b83dcffcee773bc94db998f8c37e1b1bfb67698", "node_id": "C_kwDOAAsO6NoAKDFiODNkY2ZmY2VlNzczYmM5NGRiOTk4ZjhjMzdlMWIxYmZiNjc2OTg", "commit": {"author": {"name": "Mara Bos", "email": "m-ou.se@m-ou.se", "date": "2022-05-25T09:49:02Z"}, "committer": {"name": "Mara Bos", "email": "m-ou.se@m-ou.se", "date": "2022-05-25T10:00:13Z"}, "message": "Update tests.", "tree": {"sha": "2f7bb3332e92abbdbe35bf45cb17f14f2588aa31", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2f7bb3332e92abbdbe35bf45cb17f14f2588aa31"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1b83dcffcee773bc94db998f8c37e1b1bfb67698", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1b83dcffcee773bc94db998f8c37e1b1bfb67698", "html_url": "https://github.com/rust-lang/rust/commit/1b83dcffcee773bc94db998f8c37e1b1bfb67698", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1b83dcffcee773bc94db998f8c37e1b1bfb67698/comments", "author": {"login": "m-ou-se", "id": 783247, "node_id": "MDQ6VXNlcjc4MzI0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/783247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-ou-se", "html_url": "https://github.com/m-ou-se", "followers_url": "https://api.github.com/users/m-ou-se/followers", "following_url": "https://api.github.com/users/m-ou-se/following{/other_user}", "gists_url": "https://api.github.com/users/m-ou-se/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-ou-se/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-ou-se/subscriptions", "organizations_url": "https://api.github.com/users/m-ou-se/orgs", "repos_url": "https://api.github.com/users/m-ou-se/repos", "events_url": "https://api.github.com/users/m-ou-se/events{/privacy}", "received_events_url": "https://api.github.com/users/m-ou-se/received_events", "type": "User", "site_admin": false}, "committer": {"login": "m-ou-se", "id": 783247, "node_id": "MDQ6VXNlcjc4MzI0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/783247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-ou-se", "html_url": "https://github.com/m-ou-se", "followers_url": "https://api.github.com/users/m-ou-se/followers", "following_url": "https://api.github.com/users/m-ou-se/following{/other_user}", "gists_url": "https://api.github.com/users/m-ou-se/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-ou-se/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-ou-se/subscriptions", "organizations_url": "https://api.github.com/users/m-ou-se/orgs", "repos_url": "https://api.github.com/users/m-ou-se/repos", "events_url": "https://api.github.com/users/m-ou-se/events{/privacy}", "received_events_url": "https://api.github.com/users/m-ou-se/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "47080eacf83debe4cbd9bb8dbedaf2c29e084cbc", "url": "https://api.github.com/repos/rust-lang/rust/commits/47080eacf83debe4cbd9bb8dbedaf2c29e084cbc", "html_url": "https://github.com/rust-lang/rust/commit/47080eacf83debe4cbd9bb8dbedaf2c29e084cbc"}], "stats": {"total": 396, "additions": 216, "deletions": 180}, "files": [{"sha": "1f870d1ef72ceedb93c81b4e133892de30dda0c2", "filename": "src/test/ui/lint/lint-invalid-atomic-ordering-exchange-weak.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/1b83dcffcee773bc94db998f8c37e1b1bfb67698/src%2Ftest%2Fui%2Flint%2Flint-invalid-atomic-ordering-exchange-weak.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1b83dcffcee773bc94db998f8c37e1b1bfb67698/src%2Ftest%2Fui%2Flint%2Flint-invalid-atomic-ordering-exchange-weak.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Flint-invalid-atomic-ordering-exchange-weak.rs?ref=1b83dcffcee773bc94db998f8c37e1b1bfb67698", "patch": "@@ -44,19 +44,19 @@ fn main() {\n \n     // Release success order forbids failure order of Acquire or SeqCst\n     let _ = x.compare_exchange_weak(ptr2, ptr, Ordering::Release, Ordering::Acquire);\n-    //~^ ERROR compare_exchange_weak's failure ordering may not be stronger\n+    //~^ ERROR compare_exchange_weak's success ordering must be at least as strong as\n     let _ = x.compare_exchange_weak(ptr2, ptr, Ordering::Release, Ordering::SeqCst);\n-    //~^ ERROR compare_exchange_weak's failure ordering may not be stronger\n+    //~^ ERROR compare_exchange_weak's success ordering must be at least as strong as\n \n     // Relaxed success order also forbids failure order of Acquire or SeqCst\n     let _ = x.compare_exchange_weak(ptr, ptr2, Ordering::Relaxed, Ordering::SeqCst);\n-    //~^ ERROR compare_exchange_weak's failure ordering may not be stronger\n+    //~^ ERROR compare_exchange_weak's success ordering must be at least as strong as\n     let _ = x.compare_exchange_weak(ptr, ptr2, Ordering::Relaxed, Ordering::Acquire);\n-    //~^ ERROR compare_exchange_weak's failure ordering may not be stronger\n+    //~^ ERROR compare_exchange_weak's success ordering must be at least as strong as\n \n     // Acquire/AcqRel forbids failure order of SeqCst\n     let _ = x.compare_exchange_weak(ptr2, ptr, Ordering::Acquire, Ordering::SeqCst);\n-    //~^ ERROR compare_exchange_weak's failure ordering may not be stronger\n+    //~^ ERROR compare_exchange_weak's success ordering must be at least as strong as\n     let _ = x.compare_exchange_weak(ptr2, ptr, Ordering::AcqRel, Ordering::SeqCst);\n-    //~^ ERROR compare_exchange_weak's failure ordering may not be stronger\n+    //~^ ERROR compare_exchange_weak's success ordering must be at least as strong as\n }"}, {"sha": "8e816f7c4825184b5027f893dd9b363c38777918", "filename": "src/test/ui/lint/lint-invalid-atomic-ordering-exchange-weak.stderr", "status": "modified", "additions": 66, "deletions": 54, "changes": 120, "blob_url": "https://github.com/rust-lang/rust/blob/1b83dcffcee773bc94db998f8c37e1b1bfb67698/src%2Ftest%2Fui%2Flint%2Flint-invalid-atomic-ordering-exchange-weak.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1b83dcffcee773bc94db998f8c37e1b1bfb67698/src%2Ftest%2Fui%2Flint%2Flint-invalid-atomic-ordering-exchange-weak.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Flint-invalid-atomic-ordering-exchange-weak.stderr?ref=1b83dcffcee773bc94db998f8c37e1b1bfb67698", "patch": "@@ -1,131 +1,143 @@\n-error: compare_exchange_weak's failure ordering may not be `Release` or `AcqRel`\n+error: compare_exchange_weak's failure ordering may not be `Release` or `AcqRel`, since a failed compare_exchange_weak does not result in a write\n   --> $DIR/lint-invalid-atomic-ordering-exchange-weak.rs:22:67\n    |\n LL |     let _ = x.compare_exchange_weak(ptr2, ptr, Ordering::Relaxed, Ordering::AcqRel);\n-   |                                                                   ^^^^^^^^^^^^^^^^\n+   |                                                                   ^^^^^^^^^^^^^^^^ invalid failure ordering\n    |\n    = note: `#[deny(invalid_atomic_ordering)]` on by default\n-   = help: consider using ordering mode `Relaxed` instead\n+   = help: consider using Acquire or Relaxed failure ordering instead\n \n-error: compare_exchange_weak's failure ordering may not be `Release` or `AcqRel`\n+error: compare_exchange_weak's failure ordering may not be `Release` or `AcqRel`, since a failed compare_exchange_weak does not result in a write\n   --> $DIR/lint-invalid-atomic-ordering-exchange-weak.rs:24:67\n    |\n LL |     let _ = x.compare_exchange_weak(ptr2, ptr, Ordering::Acquire, Ordering::AcqRel);\n-   |                                                                   ^^^^^^^^^^^^^^^^\n+   |                                                                   ^^^^^^^^^^^^^^^^ invalid failure ordering\n    |\n-   = help: consider using ordering modes `Acquire` or `Relaxed` instead\n+   = help: consider using Acquire or Relaxed failure ordering instead\n \n-error: compare_exchange_weak's failure ordering may not be `Release` or `AcqRel`\n+error: compare_exchange_weak's failure ordering may not be `Release` or `AcqRel`, since a failed compare_exchange_weak does not result in a write\n   --> $DIR/lint-invalid-atomic-ordering-exchange-weak.rs:26:67\n    |\n LL |     let _ = x.compare_exchange_weak(ptr2, ptr, Ordering::Release, Ordering::AcqRel);\n-   |                                                                   ^^^^^^^^^^^^^^^^\n+   |                                                                   ^^^^^^^^^^^^^^^^ invalid failure ordering\n    |\n-   = help: consider using ordering mode `Relaxed` instead\n+   = help: consider using Acquire or Relaxed failure ordering instead\n \n-error: compare_exchange_weak's failure ordering may not be `Release` or `AcqRel`\n+error: compare_exchange_weak's failure ordering may not be `Release` or `AcqRel`, since a failed compare_exchange_weak does not result in a write\n   --> $DIR/lint-invalid-atomic-ordering-exchange-weak.rs:28:66\n    |\n LL |     let _ = x.compare_exchange_weak(ptr2, ptr, Ordering::AcqRel, Ordering::AcqRel);\n-   |                                                                  ^^^^^^^^^^^^^^^^\n+   |                                                                  ^^^^^^^^^^^^^^^^ invalid failure ordering\n    |\n-   = help: consider using ordering modes `Acquire` or `Relaxed` instead\n+   = help: consider using Acquire or Relaxed failure ordering instead\n \n-error: compare_exchange_weak's failure ordering may not be `Release` or `AcqRel`\n+error: compare_exchange_weak's failure ordering may not be `Release` or `AcqRel`, since a failed compare_exchange_weak does not result in a write\n   --> $DIR/lint-invalid-atomic-ordering-exchange-weak.rs:30:66\n    |\n LL |     let _ = x.compare_exchange_weak(ptr2, ptr, Ordering::SeqCst, Ordering::AcqRel);\n-   |                                                                  ^^^^^^^^^^^^^^^^\n+   |                                                                  ^^^^^^^^^^^^^^^^ invalid failure ordering\n    |\n-   = help: consider using ordering modes `Acquire`, `SeqCst` or `Relaxed` instead\n+   = help: consider using Acquire or Relaxed failure ordering instead\n \n-error: compare_exchange_weak's failure ordering may not be `Release` or `AcqRel`\n+error: compare_exchange_weak's failure ordering may not be `Release` or `AcqRel`, since a failed compare_exchange_weak does not result in a write\n   --> $DIR/lint-invalid-atomic-ordering-exchange-weak.rs:34:67\n    |\n LL |     let _ = x.compare_exchange_weak(ptr, ptr2, Ordering::Relaxed, Ordering::Release);\n-   |                                                                   ^^^^^^^^^^^^^^^^^\n+   |                                                                   ^^^^^^^^^^^^^^^^^ invalid failure ordering\n    |\n-   = help: consider using ordering mode `Relaxed` instead\n+   = help: consider using Acquire or Relaxed failure ordering instead\n \n-error: compare_exchange_weak's failure ordering may not be `Release` or `AcqRel`\n+error: compare_exchange_weak's failure ordering may not be `Release` or `AcqRel`, since a failed compare_exchange_weak does not result in a write\n   --> $DIR/lint-invalid-atomic-ordering-exchange-weak.rs:36:67\n    |\n LL |     let _ = x.compare_exchange_weak(ptr, ptr2, Ordering::Acquire, Ordering::Release);\n-   |                                                                   ^^^^^^^^^^^^^^^^^\n+   |                                                                   ^^^^^^^^^^^^^^^^^ invalid failure ordering\n    |\n-   = help: consider using ordering modes `Acquire` or `Relaxed` instead\n+   = help: consider using Acquire or Relaxed failure ordering instead\n \n-error: compare_exchange_weak's failure ordering may not be `Release` or `AcqRel`\n+error: compare_exchange_weak's failure ordering may not be `Release` or `AcqRel`, since a failed compare_exchange_weak does not result in a write\n   --> $DIR/lint-invalid-atomic-ordering-exchange-weak.rs:38:67\n    |\n LL |     let _ = x.compare_exchange_weak(ptr, ptr2, Ordering::Release, Ordering::Release);\n-   |                                                                   ^^^^^^^^^^^^^^^^^\n+   |                                                                   ^^^^^^^^^^^^^^^^^ invalid failure ordering\n    |\n-   = help: consider using ordering mode `Relaxed` instead\n+   = help: consider using Acquire or Relaxed failure ordering instead\n \n-error: compare_exchange_weak's failure ordering may not be `Release` or `AcqRel`\n+error: compare_exchange_weak's failure ordering may not be `Release` or `AcqRel`, since a failed compare_exchange_weak does not result in a write\n   --> $DIR/lint-invalid-atomic-ordering-exchange-weak.rs:40:66\n    |\n LL |     let _ = x.compare_exchange_weak(ptr, ptr2, Ordering::AcqRel, Ordering::Release);\n-   |                                                                  ^^^^^^^^^^^^^^^^^\n+   |                                                                  ^^^^^^^^^^^^^^^^^ invalid failure ordering\n    |\n-   = help: consider using ordering modes `Acquire` or `Relaxed` instead\n+   = help: consider using Acquire or Relaxed failure ordering instead\n \n-error: compare_exchange_weak's failure ordering may not be `Release` or `AcqRel`\n+error: compare_exchange_weak's failure ordering may not be `Release` or `AcqRel`, since a failed compare_exchange_weak does not result in a write\n   --> $DIR/lint-invalid-atomic-ordering-exchange-weak.rs:42:66\n    |\n LL |     let _ = x.compare_exchange_weak(ptr, ptr2, Ordering::SeqCst, Ordering::Release);\n-   |                                                                  ^^^^^^^^^^^^^^^^^\n+   |                                                                  ^^^^^^^^^^^^^^^^^ invalid failure ordering\n    |\n-   = help: consider using ordering modes `Acquire`, `SeqCst` or `Relaxed` instead\n+   = help: consider using Acquire or Relaxed failure ordering instead\n \n-error: compare_exchange_weak's failure ordering may not be stronger than the success ordering of `Release`\n-  --> $DIR/lint-invalid-atomic-ordering-exchange-weak.rs:46:67\n+error: compare_exchange_weak's success ordering must be at least as strong as its failure ordering\n+  --> $DIR/lint-invalid-atomic-ordering-exchange-weak.rs:46:48\n    |\n LL |     let _ = x.compare_exchange_weak(ptr2, ptr, Ordering::Release, Ordering::Acquire);\n-   |                                                                   ^^^^^^^^^^^^^^^^^\n+   |                                                ^^^^^^^^^^^^^^^^^  ----------------- Acquire failure ordering\n+   |                                                |\n+   |                                                Release success ordering\n    |\n-   = help: consider using ordering mode `Relaxed` instead\n+   = help: consider using AcqRel success ordering instead\n \n-error: compare_exchange_weak's failure ordering may not be stronger than the success ordering of `Release`\n-  --> $DIR/lint-invalid-atomic-ordering-exchange-weak.rs:48:67\n+error: compare_exchange_weak's success ordering must be at least as strong as its failure ordering\n+  --> $DIR/lint-invalid-atomic-ordering-exchange-weak.rs:48:48\n    |\n LL |     let _ = x.compare_exchange_weak(ptr2, ptr, Ordering::Release, Ordering::SeqCst);\n-   |                                                                   ^^^^^^^^^^^^^^^^\n+   |                                                ^^^^^^^^^^^^^^^^^  ---------------- SeqCst failure ordering\n+   |                                                |\n+   |                                                Release success ordering\n    |\n-   = help: consider using ordering mode `Relaxed` instead\n+   = help: consider using SeqCst success ordering instead\n \n-error: compare_exchange_weak's failure ordering may not be stronger than the success ordering of `Relaxed`\n-  --> $DIR/lint-invalid-atomic-ordering-exchange-weak.rs:52:67\n+error: compare_exchange_weak's success ordering must be at least as strong as its failure ordering\n+  --> $DIR/lint-invalid-atomic-ordering-exchange-weak.rs:52:48\n    |\n LL |     let _ = x.compare_exchange_weak(ptr, ptr2, Ordering::Relaxed, Ordering::SeqCst);\n-   |                                                                   ^^^^^^^^^^^^^^^^\n+   |                                                ^^^^^^^^^^^^^^^^^  ---------------- SeqCst failure ordering\n+   |                                                |\n+   |                                                Relaxed success ordering\n    |\n-   = help: consider using ordering mode `Relaxed` instead\n+   = help: consider using SeqCst success ordering instead\n \n-error: compare_exchange_weak's failure ordering may not be stronger than the success ordering of `Relaxed`\n-  --> $DIR/lint-invalid-atomic-ordering-exchange-weak.rs:54:67\n+error: compare_exchange_weak's success ordering must be at least as strong as its failure ordering\n+  --> $DIR/lint-invalid-atomic-ordering-exchange-weak.rs:54:48\n    |\n LL |     let _ = x.compare_exchange_weak(ptr, ptr2, Ordering::Relaxed, Ordering::Acquire);\n-   |                                                                   ^^^^^^^^^^^^^^^^^\n+   |                                                ^^^^^^^^^^^^^^^^^  ----------------- Acquire failure ordering\n+   |                                                |\n+   |                                                Relaxed success ordering\n    |\n-   = help: consider using ordering mode `Relaxed` instead\n+   = help: consider using Acquire success ordering instead\n \n-error: compare_exchange_weak's failure ordering may not be stronger than the success ordering of `Acquire`\n-  --> $DIR/lint-invalid-atomic-ordering-exchange-weak.rs:58:67\n+error: compare_exchange_weak's success ordering must be at least as strong as its failure ordering\n+  --> $DIR/lint-invalid-atomic-ordering-exchange-weak.rs:58:48\n    |\n LL |     let _ = x.compare_exchange_weak(ptr2, ptr, Ordering::Acquire, Ordering::SeqCst);\n-   |                                                                   ^^^^^^^^^^^^^^^^\n+   |                                                ^^^^^^^^^^^^^^^^^  ---------------- SeqCst failure ordering\n+   |                                                |\n+   |                                                Acquire success ordering\n    |\n-   = help: consider using ordering modes `Acquire` or `Relaxed` instead\n+   = help: consider using SeqCst success ordering instead\n \n-error: compare_exchange_weak's failure ordering may not be stronger than the success ordering of `AcqRel`\n-  --> $DIR/lint-invalid-atomic-ordering-exchange-weak.rs:60:66\n+error: compare_exchange_weak's success ordering must be at least as strong as its failure ordering\n+  --> $DIR/lint-invalid-atomic-ordering-exchange-weak.rs:60:48\n    |\n LL |     let _ = x.compare_exchange_weak(ptr2, ptr, Ordering::AcqRel, Ordering::SeqCst);\n-   |                                                                  ^^^^^^^^^^^^^^^^\n+   |                                                ^^^^^^^^^^^^^^^^  ---------------- SeqCst failure ordering\n+   |                                                |\n+   |                                                AcqRel success ordering\n    |\n-   = help: consider using ordering modes `Acquire` or `Relaxed` instead\n+   = help: consider using SeqCst success ordering instead\n \n error: aborting due to 16 previous errors\n "}, {"sha": "1a5cb3dac6b5c12d6568784cbcf480a11bac882f", "filename": "src/test/ui/lint/lint-invalid-atomic-ordering-exchange.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/1b83dcffcee773bc94db998f8c37e1b1bfb67698/src%2Ftest%2Fui%2Flint%2Flint-invalid-atomic-ordering-exchange.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1b83dcffcee773bc94db998f8c37e1b1bfb67698/src%2Ftest%2Fui%2Flint%2Flint-invalid-atomic-ordering-exchange.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Flint-invalid-atomic-ordering-exchange.rs?ref=1b83dcffcee773bc94db998f8c37e1b1bfb67698", "patch": "@@ -42,19 +42,19 @@ fn main() {\n \n     // Release success order forbids failure order of Acquire or SeqCst\n     let _ = x.compare_exchange(0, 0, Ordering::Release, Ordering::Acquire);\n-    //~^ ERROR compare_exchange's failure ordering may not be stronger\n+    //~^ ERROR compare_exchange's success ordering must be at least as strong as\n     let _ = x.compare_exchange(0, 0, Ordering::Release, Ordering::SeqCst);\n-    //~^ ERROR compare_exchange's failure ordering may not be stronger\n+    //~^ ERROR compare_exchange's success ordering must be at least as strong as\n \n     // Relaxed success order also forbids failure order of Acquire or SeqCst\n     let _ = x.compare_exchange(0, 0, Ordering::Relaxed, Ordering::SeqCst);\n-    //~^ ERROR compare_exchange's failure ordering may not be stronger\n+    //~^ ERROR compare_exchange's success ordering must be at least as strong as\n     let _ = x.compare_exchange(0, 0, Ordering::Relaxed, Ordering::Acquire);\n-    //~^ ERROR compare_exchange's failure ordering may not be stronger\n+    //~^ ERROR compare_exchange's success ordering must be at least as strong as\n \n     // Acquire/AcqRel forbids failure order of SeqCst\n     let _ = x.compare_exchange(0, 0, Ordering::Acquire, Ordering::SeqCst);\n-    //~^ ERROR compare_exchange's failure ordering may not be stronger\n+    //~^ ERROR compare_exchange's success ordering must be at least as strong as\n     let _ = x.compare_exchange(0, 0, Ordering::AcqRel, Ordering::SeqCst);\n-    //~^ ERROR compare_exchange's failure ordering may not be stronger\n+    //~^ ERROR compare_exchange's success ordering must be at least as strong as\n }"}, {"sha": "eeeeb1fb5a94e0b3523b371fdc7f8b1d66a524b1", "filename": "src/test/ui/lint/lint-invalid-atomic-ordering-exchange.stderr", "status": "modified", "additions": 66, "deletions": 54, "changes": 120, "blob_url": "https://github.com/rust-lang/rust/blob/1b83dcffcee773bc94db998f8c37e1b1bfb67698/src%2Ftest%2Fui%2Flint%2Flint-invalid-atomic-ordering-exchange.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1b83dcffcee773bc94db998f8c37e1b1bfb67698/src%2Ftest%2Fui%2Flint%2Flint-invalid-atomic-ordering-exchange.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Flint-invalid-atomic-ordering-exchange.stderr?ref=1b83dcffcee773bc94db998f8c37e1b1bfb67698", "patch": "@@ -1,131 +1,143 @@\n-error: compare_exchange's failure ordering may not be `Release` or `AcqRel`\n+error: compare_exchange's failure ordering may not be `Release` or `AcqRel`, since a failed compare_exchange does not result in a write\n   --> $DIR/lint-invalid-atomic-ordering-exchange.rs:20:57\n    |\n LL |     let _ = x.compare_exchange(0, 0, Ordering::Relaxed, Ordering::AcqRel);\n-   |                                                         ^^^^^^^^^^^^^^^^\n+   |                                                         ^^^^^^^^^^^^^^^^ invalid failure ordering\n    |\n    = note: `#[deny(invalid_atomic_ordering)]` on by default\n-   = help: consider using ordering mode `Relaxed` instead\n+   = help: consider using Acquire or Relaxed failure ordering instead\n \n-error: compare_exchange's failure ordering may not be `Release` or `AcqRel`\n+error: compare_exchange's failure ordering may not be `Release` or `AcqRel`, since a failed compare_exchange does not result in a write\n   --> $DIR/lint-invalid-atomic-ordering-exchange.rs:22:57\n    |\n LL |     let _ = x.compare_exchange(0, 0, Ordering::Acquire, Ordering::AcqRel);\n-   |                                                         ^^^^^^^^^^^^^^^^\n+   |                                                         ^^^^^^^^^^^^^^^^ invalid failure ordering\n    |\n-   = help: consider using ordering modes `Acquire` or `Relaxed` instead\n+   = help: consider using Acquire or Relaxed failure ordering instead\n \n-error: compare_exchange's failure ordering may not be `Release` or `AcqRel`\n+error: compare_exchange's failure ordering may not be `Release` or `AcqRel`, since a failed compare_exchange does not result in a write\n   --> $DIR/lint-invalid-atomic-ordering-exchange.rs:24:57\n    |\n LL |     let _ = x.compare_exchange(0, 0, Ordering::Release, Ordering::AcqRel);\n-   |                                                         ^^^^^^^^^^^^^^^^\n+   |                                                         ^^^^^^^^^^^^^^^^ invalid failure ordering\n    |\n-   = help: consider using ordering mode `Relaxed` instead\n+   = help: consider using Acquire or Relaxed failure ordering instead\n \n-error: compare_exchange's failure ordering may not be `Release` or `AcqRel`\n+error: compare_exchange's failure ordering may not be `Release` or `AcqRel`, since a failed compare_exchange does not result in a write\n   --> $DIR/lint-invalid-atomic-ordering-exchange.rs:26:56\n    |\n LL |     let _ = x.compare_exchange(0, 0, Ordering::AcqRel, Ordering::AcqRel);\n-   |                                                        ^^^^^^^^^^^^^^^^\n+   |                                                        ^^^^^^^^^^^^^^^^ invalid failure ordering\n    |\n-   = help: consider using ordering modes `Acquire` or `Relaxed` instead\n+   = help: consider using Acquire or Relaxed failure ordering instead\n \n-error: compare_exchange's failure ordering may not be `Release` or `AcqRel`\n+error: compare_exchange's failure ordering may not be `Release` or `AcqRel`, since a failed compare_exchange does not result in a write\n   --> $DIR/lint-invalid-atomic-ordering-exchange.rs:28:56\n    |\n LL |     let _ = x.compare_exchange(0, 0, Ordering::SeqCst, Ordering::AcqRel);\n-   |                                                        ^^^^^^^^^^^^^^^^\n+   |                                                        ^^^^^^^^^^^^^^^^ invalid failure ordering\n    |\n-   = help: consider using ordering modes `Acquire`, `SeqCst` or `Relaxed` instead\n+   = help: consider using Acquire or Relaxed failure ordering instead\n \n-error: compare_exchange's failure ordering may not be `Release` or `AcqRel`\n+error: compare_exchange's failure ordering may not be `Release` or `AcqRel`, since a failed compare_exchange does not result in a write\n   --> $DIR/lint-invalid-atomic-ordering-exchange.rs:32:57\n    |\n LL |     let _ = x.compare_exchange(0, 0, Ordering::Relaxed, Ordering::Release);\n-   |                                                         ^^^^^^^^^^^^^^^^^\n+   |                                                         ^^^^^^^^^^^^^^^^^ invalid failure ordering\n    |\n-   = help: consider using ordering mode `Relaxed` instead\n+   = help: consider using Acquire or Relaxed failure ordering instead\n \n-error: compare_exchange's failure ordering may not be `Release` or `AcqRel`\n+error: compare_exchange's failure ordering may not be `Release` or `AcqRel`, since a failed compare_exchange does not result in a write\n   --> $DIR/lint-invalid-atomic-ordering-exchange.rs:34:57\n    |\n LL |     let _ = x.compare_exchange(0, 0, Ordering::Acquire, Ordering::Release);\n-   |                                                         ^^^^^^^^^^^^^^^^^\n+   |                                                         ^^^^^^^^^^^^^^^^^ invalid failure ordering\n    |\n-   = help: consider using ordering modes `Acquire` or `Relaxed` instead\n+   = help: consider using Acquire or Relaxed failure ordering instead\n \n-error: compare_exchange's failure ordering may not be `Release` or `AcqRel`\n+error: compare_exchange's failure ordering may not be `Release` or `AcqRel`, since a failed compare_exchange does not result in a write\n   --> $DIR/lint-invalid-atomic-ordering-exchange.rs:36:57\n    |\n LL |     let _ = x.compare_exchange(0, 0, Ordering::Release, Ordering::Release);\n-   |                                                         ^^^^^^^^^^^^^^^^^\n+   |                                                         ^^^^^^^^^^^^^^^^^ invalid failure ordering\n    |\n-   = help: consider using ordering mode `Relaxed` instead\n+   = help: consider using Acquire or Relaxed failure ordering instead\n \n-error: compare_exchange's failure ordering may not be `Release` or `AcqRel`\n+error: compare_exchange's failure ordering may not be `Release` or `AcqRel`, since a failed compare_exchange does not result in a write\n   --> $DIR/lint-invalid-atomic-ordering-exchange.rs:38:56\n    |\n LL |     let _ = x.compare_exchange(0, 0, Ordering::AcqRel, Ordering::Release);\n-   |                                                        ^^^^^^^^^^^^^^^^^\n+   |                                                        ^^^^^^^^^^^^^^^^^ invalid failure ordering\n    |\n-   = help: consider using ordering modes `Acquire` or `Relaxed` instead\n+   = help: consider using Acquire or Relaxed failure ordering instead\n \n-error: compare_exchange's failure ordering may not be `Release` or `AcqRel`\n+error: compare_exchange's failure ordering may not be `Release` or `AcqRel`, since a failed compare_exchange does not result in a write\n   --> $DIR/lint-invalid-atomic-ordering-exchange.rs:40:56\n    |\n LL |     let _ = x.compare_exchange(0, 0, Ordering::SeqCst, Ordering::Release);\n-   |                                                        ^^^^^^^^^^^^^^^^^\n+   |                                                        ^^^^^^^^^^^^^^^^^ invalid failure ordering\n    |\n-   = help: consider using ordering modes `Acquire`, `SeqCst` or `Relaxed` instead\n+   = help: consider using Acquire or Relaxed failure ordering instead\n \n-error: compare_exchange's failure ordering may not be stronger than the success ordering of `Release`\n-  --> $DIR/lint-invalid-atomic-ordering-exchange.rs:44:57\n+error: compare_exchange's success ordering must be at least as strong as its failure ordering\n+  --> $DIR/lint-invalid-atomic-ordering-exchange.rs:44:38\n    |\n LL |     let _ = x.compare_exchange(0, 0, Ordering::Release, Ordering::Acquire);\n-   |                                                         ^^^^^^^^^^^^^^^^^\n+   |                                      ^^^^^^^^^^^^^^^^^  ----------------- Acquire failure ordering\n+   |                                      |\n+   |                                      Release success ordering\n    |\n-   = help: consider using ordering mode `Relaxed` instead\n+   = help: consider using AcqRel success ordering instead\n \n-error: compare_exchange's failure ordering may not be stronger than the success ordering of `Release`\n-  --> $DIR/lint-invalid-atomic-ordering-exchange.rs:46:57\n+error: compare_exchange's success ordering must be at least as strong as its failure ordering\n+  --> $DIR/lint-invalid-atomic-ordering-exchange.rs:46:38\n    |\n LL |     let _ = x.compare_exchange(0, 0, Ordering::Release, Ordering::SeqCst);\n-   |                                                         ^^^^^^^^^^^^^^^^\n+   |                                      ^^^^^^^^^^^^^^^^^  ---------------- SeqCst failure ordering\n+   |                                      |\n+   |                                      Release success ordering\n    |\n-   = help: consider using ordering mode `Relaxed` instead\n+   = help: consider using SeqCst success ordering instead\n \n-error: compare_exchange's failure ordering may not be stronger than the success ordering of `Relaxed`\n-  --> $DIR/lint-invalid-atomic-ordering-exchange.rs:50:57\n+error: compare_exchange's success ordering must be at least as strong as its failure ordering\n+  --> $DIR/lint-invalid-atomic-ordering-exchange.rs:50:38\n    |\n LL |     let _ = x.compare_exchange(0, 0, Ordering::Relaxed, Ordering::SeqCst);\n-   |                                                         ^^^^^^^^^^^^^^^^\n+   |                                      ^^^^^^^^^^^^^^^^^  ---------------- SeqCst failure ordering\n+   |                                      |\n+   |                                      Relaxed success ordering\n    |\n-   = help: consider using ordering mode `Relaxed` instead\n+   = help: consider using SeqCst success ordering instead\n \n-error: compare_exchange's failure ordering may not be stronger than the success ordering of `Relaxed`\n-  --> $DIR/lint-invalid-atomic-ordering-exchange.rs:52:57\n+error: compare_exchange's success ordering must be at least as strong as its failure ordering\n+  --> $DIR/lint-invalid-atomic-ordering-exchange.rs:52:38\n    |\n LL |     let _ = x.compare_exchange(0, 0, Ordering::Relaxed, Ordering::Acquire);\n-   |                                                         ^^^^^^^^^^^^^^^^^\n+   |                                      ^^^^^^^^^^^^^^^^^  ----------------- Acquire failure ordering\n+   |                                      |\n+   |                                      Relaxed success ordering\n    |\n-   = help: consider using ordering mode `Relaxed` instead\n+   = help: consider using Acquire success ordering instead\n \n-error: compare_exchange's failure ordering may not be stronger than the success ordering of `Acquire`\n-  --> $DIR/lint-invalid-atomic-ordering-exchange.rs:56:57\n+error: compare_exchange's success ordering must be at least as strong as its failure ordering\n+  --> $DIR/lint-invalid-atomic-ordering-exchange.rs:56:38\n    |\n LL |     let _ = x.compare_exchange(0, 0, Ordering::Acquire, Ordering::SeqCst);\n-   |                                                         ^^^^^^^^^^^^^^^^\n+   |                                      ^^^^^^^^^^^^^^^^^  ---------------- SeqCst failure ordering\n+   |                                      |\n+   |                                      Acquire success ordering\n    |\n-   = help: consider using ordering modes `Acquire` or `Relaxed` instead\n+   = help: consider using SeqCst success ordering instead\n \n-error: compare_exchange's failure ordering may not be stronger than the success ordering of `AcqRel`\n-  --> $DIR/lint-invalid-atomic-ordering-exchange.rs:58:56\n+error: compare_exchange's success ordering must be at least as strong as its failure ordering\n+  --> $DIR/lint-invalid-atomic-ordering-exchange.rs:58:38\n    |\n LL |     let _ = x.compare_exchange(0, 0, Ordering::AcqRel, Ordering::SeqCst);\n-   |                                                        ^^^^^^^^^^^^^^^^\n+   |                                      ^^^^^^^^^^^^^^^^  ---------------- SeqCst failure ordering\n+   |                                      |\n+   |                                      AcqRel success ordering\n    |\n-   = help: consider using ordering modes `Acquire` or `Relaxed` instead\n+   = help: consider using SeqCst success ordering instead\n \n error: aborting due to 16 previous errors\n "}, {"sha": "dcf277dfaccfd733047e3627c4f1de80c2e38c23", "filename": "src/test/ui/lint/lint-invalid-atomic-ordering-fetch-update.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/1b83dcffcee773bc94db998f8c37e1b1bfb67698/src%2Ftest%2Fui%2Flint%2Flint-invalid-atomic-ordering-fetch-update.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1b83dcffcee773bc94db998f8c37e1b1bfb67698/src%2Ftest%2Fui%2Flint%2Flint-invalid-atomic-ordering-fetch-update.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Flint-invalid-atomic-ordering-fetch-update.rs?ref=1b83dcffcee773bc94db998f8c37e1b1bfb67698", "patch": "@@ -42,19 +42,19 @@ fn main() {\n \n     // Release success order forbids failure order of Acquire or SeqCst\n     let _ = x.fetch_update(Ordering::Release, Ordering::Acquire, |old| Some(old + 1));\n-    //~^ ERROR fetch_update's failure ordering may not be stronger\n+    //~^ ERROR fetch_update's success ordering must be at least as strong as\n     let _ = x.fetch_update(Ordering::Release, Ordering::SeqCst, |old| Some(old + 1));\n-    //~^ ERROR fetch_update's failure ordering may not be stronger\n+    //~^ ERROR fetch_update's success ordering must be at least as strong as\n \n     // Relaxed success order also forbids failure order of Acquire or SeqCst\n     let _ = x.fetch_update(Ordering::Relaxed, Ordering::SeqCst, |old| Some(old + 1));\n-    //~^ ERROR fetch_update's failure ordering may not be stronger\n+    //~^ ERROR fetch_update's success ordering must be at least as strong as\n     let _ = x.fetch_update(Ordering::Relaxed, Ordering::Acquire, |old| Some(old + 1));\n-    //~^ ERROR fetch_update's failure ordering may not be stronger\n+    //~^ ERROR fetch_update's success ordering must be at least as strong as\n \n     // Acquire/AcqRel forbids failure order of SeqCst\n     let _ = x.fetch_update(Ordering::Acquire, Ordering::SeqCst, |old| Some(old + 1));\n-    //~^ ERROR fetch_update's failure ordering may not be stronger\n+    //~^ ERROR fetch_update's success ordering must be at least as strong as\n     let _ = x.fetch_update(Ordering::AcqRel, Ordering::SeqCst, |old| Some(old + 1));\n-    //~^ ERROR fetch_update's failure ordering may not be stronger\n+    //~^ ERROR fetch_update's success ordering must be at least as strong as\n }"}, {"sha": "f63d059d429158f0c87f8ba4b5cb7b81d12df9e2", "filename": "src/test/ui/lint/lint-invalid-atomic-ordering-fetch-update.stderr", "status": "modified", "additions": 66, "deletions": 54, "changes": 120, "blob_url": "https://github.com/rust-lang/rust/blob/1b83dcffcee773bc94db998f8c37e1b1bfb67698/src%2Ftest%2Fui%2Flint%2Flint-invalid-atomic-ordering-fetch-update.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1b83dcffcee773bc94db998f8c37e1b1bfb67698/src%2Ftest%2Fui%2Flint%2Flint-invalid-atomic-ordering-fetch-update.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Flint-invalid-atomic-ordering-fetch-update.stderr?ref=1b83dcffcee773bc94db998f8c37e1b1bfb67698", "patch": "@@ -1,131 +1,143 @@\n-error: fetch_update's failure ordering may not be `Release` or `AcqRel`\n+error: fetch_update's failure ordering may not be `Release` or `AcqRel`, since a failed fetch_update does not result in a write\n   --> $DIR/lint-invalid-atomic-ordering-fetch-update.rs:20:47\n    |\n LL |     let _ = x.fetch_update(Ordering::Relaxed, Ordering::AcqRel, |old| Some(old + 1));\n-   |                                               ^^^^^^^^^^^^^^^^\n+   |                                               ^^^^^^^^^^^^^^^^ invalid failure ordering\n    |\n    = note: `#[deny(invalid_atomic_ordering)]` on by default\n-   = help: consider using ordering mode `Relaxed` instead\n+   = help: consider using Acquire or Relaxed failure ordering instead\n \n-error: fetch_update's failure ordering may not be `Release` or `AcqRel`\n+error: fetch_update's failure ordering may not be `Release` or `AcqRel`, since a failed fetch_update does not result in a write\n   --> $DIR/lint-invalid-atomic-ordering-fetch-update.rs:22:47\n    |\n LL |     let _ = x.fetch_update(Ordering::Acquire, Ordering::AcqRel, |old| Some(old + 1));\n-   |                                               ^^^^^^^^^^^^^^^^\n+   |                                               ^^^^^^^^^^^^^^^^ invalid failure ordering\n    |\n-   = help: consider using ordering modes `Acquire` or `Relaxed` instead\n+   = help: consider using Acquire or Relaxed failure ordering instead\n \n-error: fetch_update's failure ordering may not be `Release` or `AcqRel`\n+error: fetch_update's failure ordering may not be `Release` or `AcqRel`, since a failed fetch_update does not result in a write\n   --> $DIR/lint-invalid-atomic-ordering-fetch-update.rs:24:47\n    |\n LL |     let _ = x.fetch_update(Ordering::Release, Ordering::AcqRel, |old| Some(old + 1));\n-   |                                               ^^^^^^^^^^^^^^^^\n+   |                                               ^^^^^^^^^^^^^^^^ invalid failure ordering\n    |\n-   = help: consider using ordering mode `Relaxed` instead\n+   = help: consider using Acquire or Relaxed failure ordering instead\n \n-error: fetch_update's failure ordering may not be `Release` or `AcqRel`\n+error: fetch_update's failure ordering may not be `Release` or `AcqRel`, since a failed fetch_update does not result in a write\n   --> $DIR/lint-invalid-atomic-ordering-fetch-update.rs:26:46\n    |\n LL |     let _ = x.fetch_update(Ordering::AcqRel, Ordering::AcqRel, |old| Some(old + 1));\n-   |                                              ^^^^^^^^^^^^^^^^\n+   |                                              ^^^^^^^^^^^^^^^^ invalid failure ordering\n    |\n-   = help: consider using ordering modes `Acquire` or `Relaxed` instead\n+   = help: consider using Acquire or Relaxed failure ordering instead\n \n-error: fetch_update's failure ordering may not be `Release` or `AcqRel`\n+error: fetch_update's failure ordering may not be `Release` or `AcqRel`, since a failed fetch_update does not result in a write\n   --> $DIR/lint-invalid-atomic-ordering-fetch-update.rs:28:46\n    |\n LL |     let _ = x.fetch_update(Ordering::SeqCst, Ordering::AcqRel, |old| Some(old + 1));\n-   |                                              ^^^^^^^^^^^^^^^^\n+   |                                              ^^^^^^^^^^^^^^^^ invalid failure ordering\n    |\n-   = help: consider using ordering modes `Acquire`, `SeqCst` or `Relaxed` instead\n+   = help: consider using Acquire or Relaxed failure ordering instead\n \n-error: fetch_update's failure ordering may not be `Release` or `AcqRel`\n+error: fetch_update's failure ordering may not be `Release` or `AcqRel`, since a failed fetch_update does not result in a write\n   --> $DIR/lint-invalid-atomic-ordering-fetch-update.rs:32:47\n    |\n LL |     let _ = x.fetch_update(Ordering::Relaxed, Ordering::Release, |old| Some(old + 1));\n-   |                                               ^^^^^^^^^^^^^^^^^\n+   |                                               ^^^^^^^^^^^^^^^^^ invalid failure ordering\n    |\n-   = help: consider using ordering mode `Relaxed` instead\n+   = help: consider using Acquire or Relaxed failure ordering instead\n \n-error: fetch_update's failure ordering may not be `Release` or `AcqRel`\n+error: fetch_update's failure ordering may not be `Release` or `AcqRel`, since a failed fetch_update does not result in a write\n   --> $DIR/lint-invalid-atomic-ordering-fetch-update.rs:34:47\n    |\n LL |     let _ = x.fetch_update(Ordering::Acquire, Ordering::Release, |old| Some(old + 1));\n-   |                                               ^^^^^^^^^^^^^^^^^\n+   |                                               ^^^^^^^^^^^^^^^^^ invalid failure ordering\n    |\n-   = help: consider using ordering modes `Acquire` or `Relaxed` instead\n+   = help: consider using Acquire or Relaxed failure ordering instead\n \n-error: fetch_update's failure ordering may not be `Release` or `AcqRel`\n+error: fetch_update's failure ordering may not be `Release` or `AcqRel`, since a failed fetch_update does not result in a write\n   --> $DIR/lint-invalid-atomic-ordering-fetch-update.rs:36:47\n    |\n LL |     let _ = x.fetch_update(Ordering::Release, Ordering::Release, |old| Some(old + 1));\n-   |                                               ^^^^^^^^^^^^^^^^^\n+   |                                               ^^^^^^^^^^^^^^^^^ invalid failure ordering\n    |\n-   = help: consider using ordering mode `Relaxed` instead\n+   = help: consider using Acquire or Relaxed failure ordering instead\n \n-error: fetch_update's failure ordering may not be `Release` or `AcqRel`\n+error: fetch_update's failure ordering may not be `Release` or `AcqRel`, since a failed fetch_update does not result in a write\n   --> $DIR/lint-invalid-atomic-ordering-fetch-update.rs:38:46\n    |\n LL |     let _ = x.fetch_update(Ordering::AcqRel, Ordering::Release, |old| Some(old + 1));\n-   |                                              ^^^^^^^^^^^^^^^^^\n+   |                                              ^^^^^^^^^^^^^^^^^ invalid failure ordering\n    |\n-   = help: consider using ordering modes `Acquire` or `Relaxed` instead\n+   = help: consider using Acquire or Relaxed failure ordering instead\n \n-error: fetch_update's failure ordering may not be `Release` or `AcqRel`\n+error: fetch_update's failure ordering may not be `Release` or `AcqRel`, since a failed fetch_update does not result in a write\n   --> $DIR/lint-invalid-atomic-ordering-fetch-update.rs:40:46\n    |\n LL |     let _ = x.fetch_update(Ordering::SeqCst, Ordering::Release, |old| Some(old + 1));\n-   |                                              ^^^^^^^^^^^^^^^^^\n+   |                                              ^^^^^^^^^^^^^^^^^ invalid failure ordering\n    |\n-   = help: consider using ordering modes `Acquire`, `SeqCst` or `Relaxed` instead\n+   = help: consider using Acquire or Relaxed failure ordering instead\n \n-error: fetch_update's failure ordering may not be stronger than the success ordering of `Release`\n-  --> $DIR/lint-invalid-atomic-ordering-fetch-update.rs:44:47\n+error: fetch_update's success ordering must be at least as strong as its failure ordering\n+  --> $DIR/lint-invalid-atomic-ordering-fetch-update.rs:44:28\n    |\n LL |     let _ = x.fetch_update(Ordering::Release, Ordering::Acquire, |old| Some(old + 1));\n-   |                                               ^^^^^^^^^^^^^^^^^\n+   |                            ^^^^^^^^^^^^^^^^^  ----------------- Acquire failure ordering\n+   |                            |\n+   |                            Release success ordering\n    |\n-   = help: consider using ordering mode `Relaxed` instead\n+   = help: consider using AcqRel success ordering instead\n \n-error: fetch_update's failure ordering may not be stronger than the success ordering of `Release`\n-  --> $DIR/lint-invalid-atomic-ordering-fetch-update.rs:46:47\n+error: fetch_update's success ordering must be at least as strong as its failure ordering\n+  --> $DIR/lint-invalid-atomic-ordering-fetch-update.rs:46:28\n    |\n LL |     let _ = x.fetch_update(Ordering::Release, Ordering::SeqCst, |old| Some(old + 1));\n-   |                                               ^^^^^^^^^^^^^^^^\n+   |                            ^^^^^^^^^^^^^^^^^  ---------------- SeqCst failure ordering\n+   |                            |\n+   |                            Release success ordering\n    |\n-   = help: consider using ordering mode `Relaxed` instead\n+   = help: consider using SeqCst success ordering instead\n \n-error: fetch_update's failure ordering may not be stronger than the success ordering of `Relaxed`\n-  --> $DIR/lint-invalid-atomic-ordering-fetch-update.rs:50:47\n+error: fetch_update's success ordering must be at least as strong as its failure ordering\n+  --> $DIR/lint-invalid-atomic-ordering-fetch-update.rs:50:28\n    |\n LL |     let _ = x.fetch_update(Ordering::Relaxed, Ordering::SeqCst, |old| Some(old + 1));\n-   |                                               ^^^^^^^^^^^^^^^^\n+   |                            ^^^^^^^^^^^^^^^^^  ---------------- SeqCst failure ordering\n+   |                            |\n+   |                            Relaxed success ordering\n    |\n-   = help: consider using ordering mode `Relaxed` instead\n+   = help: consider using SeqCst success ordering instead\n \n-error: fetch_update's failure ordering may not be stronger than the success ordering of `Relaxed`\n-  --> $DIR/lint-invalid-atomic-ordering-fetch-update.rs:52:47\n+error: fetch_update's success ordering must be at least as strong as its failure ordering\n+  --> $DIR/lint-invalid-atomic-ordering-fetch-update.rs:52:28\n    |\n LL |     let _ = x.fetch_update(Ordering::Relaxed, Ordering::Acquire, |old| Some(old + 1));\n-   |                                               ^^^^^^^^^^^^^^^^^\n+   |                            ^^^^^^^^^^^^^^^^^  ----------------- Acquire failure ordering\n+   |                            |\n+   |                            Relaxed success ordering\n    |\n-   = help: consider using ordering mode `Relaxed` instead\n+   = help: consider using Acquire success ordering instead\n \n-error: fetch_update's failure ordering may not be stronger than the success ordering of `Acquire`\n-  --> $DIR/lint-invalid-atomic-ordering-fetch-update.rs:56:47\n+error: fetch_update's success ordering must be at least as strong as its failure ordering\n+  --> $DIR/lint-invalid-atomic-ordering-fetch-update.rs:56:28\n    |\n LL |     let _ = x.fetch_update(Ordering::Acquire, Ordering::SeqCst, |old| Some(old + 1));\n-   |                                               ^^^^^^^^^^^^^^^^\n+   |                            ^^^^^^^^^^^^^^^^^  ---------------- SeqCst failure ordering\n+   |                            |\n+   |                            Acquire success ordering\n    |\n-   = help: consider using ordering modes `Acquire` or `Relaxed` instead\n+   = help: consider using SeqCst success ordering instead\n \n-error: fetch_update's failure ordering may not be stronger than the success ordering of `AcqRel`\n-  --> $DIR/lint-invalid-atomic-ordering-fetch-update.rs:58:46\n+error: fetch_update's success ordering must be at least as strong as its failure ordering\n+  --> $DIR/lint-invalid-atomic-ordering-fetch-update.rs:58:28\n    |\n LL |     let _ = x.fetch_update(Ordering::AcqRel, Ordering::SeqCst, |old| Some(old + 1));\n-   |                                              ^^^^^^^^^^^^^^^^\n+   |                            ^^^^^^^^^^^^^^^^  ---------------- SeqCst failure ordering\n+   |                            |\n+   |                            AcqRel success ordering\n    |\n-   = help: consider using ordering modes `Acquire` or `Relaxed` instead\n+   = help: consider using SeqCst success ordering instead\n \n error: aborting due to 16 previous errors\n "}]}