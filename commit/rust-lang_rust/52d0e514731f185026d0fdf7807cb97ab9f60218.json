{"sha": "52d0e514731f185026d0fdf7807cb97ab9f60218", "node_id": "MDY6Q29tbWl0NzI0NzEyOjUyZDBlNTE0NzMxZjE4NTAyNmQwZmRmNzgwN2NiOTdhYjlmNjAyMTg=", "commit": {"author": {"name": "Virgil Palanciuc", "email": "virgilp@adobe.com", "date": "2017-10-26T16:34:39Z"}, "committer": {"name": "Virgil Palanciuc", "email": "virgilp@adobe.com", "date": "2017-10-26T16:34:39Z"}, "message": "relax restriction - allow errors to be emmitted within macro spans, as long as the same error message has not been used before (i.e. use the None as the span key, for errors that occur within macros)", "tree": {"sha": "f22e1db055ce67a5760873139c04103574416120", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f22e1db055ce67a5760873139c04103574416120"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/52d0e514731f185026d0fdf7807cb97ab9f60218", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/52d0e514731f185026d0fdf7807cb97ab9f60218", "html_url": "https://github.com/rust-lang/rust/commit/52d0e514731f185026d0fdf7807cb97ab9f60218", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/52d0e514731f185026d0fdf7807cb97ab9f60218/comments", "author": null, "committer": null, "parents": [{"sha": "4e16e30b07c24b6ae5db1269c894d618eb55b1c0", "url": "https://api.github.com/repos/rust-lang/rust/commits/4e16e30b07c24b6ae5db1269c894d618eb55b1c0", "html_url": "https://github.com/rust-lang/rust/commit/4e16e30b07c24b6ae5db1269c894d618eb55b1c0"}], "stats": {"total": 17, "additions": 8, "deletions": 9}, "files": [{"sha": "0d946c3bbcd68610649128271a5204179351fa08", "filename": "src/librustc/middle/stability.rs", "status": "modified", "additions": 8, "deletions": 9, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/52d0e514731f185026d0fdf7807cb97ab9f60218/src%2Flibrustc%2Fmiddle%2Fstability.rs", "raw_url": "https://github.com/rust-lang/rust/raw/52d0e514731f185026d0fdf7807cb97ab9f60218/src%2Flibrustc%2Fmiddle%2Fstability.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fstability.rs?ref=52d0e514731f185026d0fdf7807cb97ab9f60218", "patch": "@@ -598,29 +598,28 @@ impl<'a, 'gcx, 'tcx> TyCtxt<'a, 'gcx, 'tcx> {\n                     None => format!(\"use of unstable library feature '{}'\", &feature)\n                 };\n \n+\n                 let msp: MultiSpan = span.into();\n                 let cm = &self.sess.parse_sess.codemap();\n-                let real_file_location =\n+                let span_key =\n                     msp.primary_span().and_then(|sp:Span|\n                         if sp != DUMMY_SP {\n                             let fname = cm.lookup_char_pos(sp.lo()).file.as_ref().name.clone();\n                             if fname.starts_with(\"<\") && fname.ends_with(\" macros>\") {\n                                 None\n                             } else {\n-                                Some(fname)\n+                                Some(span)\n                             }\n                         } else {\n                             None\n                         }\n                     );\n \n-                if let Some(_) = real_file_location {\n-                    let tuple = (None, Some(span), msg.clone());\n-                    let fresh = self.sess.one_time_diagnostics.borrow_mut().insert(tuple);\n-                    if fresh {\n-                        emit_feature_err(&self.sess.parse_sess, &feature.as_str(), span,\n-                                         GateIssue::Library(Some(issue)), &msg);\n-                    }\n+                let tuple = (None, span_key, msg.clone());\n+                let fresh = self.sess.one_time_diagnostics.borrow_mut().insert(tuple);\n+                if fresh {\n+                    emit_feature_err(&self.sess.parse_sess, &feature.as_str(), span,\n+                                     GateIssue::Library(Some(issue)), &msg);\n                 }\n \n             }"}]}