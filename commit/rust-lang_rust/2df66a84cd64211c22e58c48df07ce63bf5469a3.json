{"sha": "2df66a84cd64211c22e58c48df07ce63bf5469a3", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJkZjY2YTg0Y2Q2NDIxMWMyMmU1OGM0OGRmMDdjZTYzYmY1NDY5YTM=", "commit": {"author": {"name": "Daniel Micay", "email": "danielmicay@gmail.com", "date": "2013-06-15T21:56:26Z"}, "committer": {"name": "Daniel Micay", "email": "danielmicay@gmail.com", "date": "2013-06-15T21:56:54Z"}, "message": "iterator: add a `position` adaptor", "tree": {"sha": "3ce3ea54a4d8c33aa7125cae52df62907e454f1f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3ce3ea54a4d8c33aa7125cae52df62907e454f1f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2df66a84cd64211c22e58c48df07ce63bf5469a3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2df66a84cd64211c22e58c48df07ce63bf5469a3", "html_url": "https://github.com/rust-lang/rust/commit/2df66a84cd64211c22e58c48df07ce63bf5469a3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2df66a84cd64211c22e58c48df07ce63bf5469a3/comments", "author": {"login": "thestinger", "id": 1505226, "node_id": "MDQ6VXNlcjE1MDUyMjY=", "avatar_url": "https://avatars.githubusercontent.com/u/1505226?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thestinger", "html_url": "https://github.com/thestinger", "followers_url": "https://api.github.com/users/thestinger/followers", "following_url": "https://api.github.com/users/thestinger/following{/other_user}", "gists_url": "https://api.github.com/users/thestinger/gists{/gist_id}", "starred_url": "https://api.github.com/users/thestinger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thestinger/subscriptions", "organizations_url": "https://api.github.com/users/thestinger/orgs", "repos_url": "https://api.github.com/users/thestinger/repos", "events_url": "https://api.github.com/users/thestinger/events{/privacy}", "received_events_url": "https://api.github.com/users/thestinger/received_events", "type": "User", "site_admin": false}, "committer": {"login": "thestinger", "id": 1505226, "node_id": "MDQ6VXNlcjE1MDUyMjY=", "avatar_url": "https://avatars.githubusercontent.com/u/1505226?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thestinger", "html_url": "https://github.com/thestinger", "followers_url": "https://api.github.com/users/thestinger/followers", "following_url": "https://api.github.com/users/thestinger/following{/other_user}", "gists_url": "https://api.github.com/users/thestinger/gists{/gist_id}", "starred_url": "https://api.github.com/users/thestinger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thestinger/subscriptions", "organizations_url": "https://api.github.com/users/thestinger/orgs", "repos_url": "https://api.github.com/users/thestinger/repos", "events_url": "https://api.github.com/users/thestinger/events{/privacy}", "received_events_url": "https://api.github.com/users/thestinger/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "eb5ac84c8e14184b9b76fe088b5f5120e887ee35", "url": "https://api.github.com/repos/rust-lang/rust/commits/eb5ac84c8e14184b9b76fe088b5f5120e887ee35", "html_url": "https://github.com/rust-lang/rust/commit/eb5ac84c8e14184b9b76fe088b5f5120e887ee35"}], "stats": {"total": 24, "additions": 24, "deletions": 0}, "files": [{"sha": "a8969f1da6e272776d043ded7d72ce5c23248bf6", "filename": "src/libstd/iterator.rs", "status": "modified", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/2df66a84cd64211c22e58c48df07ce63bf5469a3/src%2Flibstd%2Fiterator.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2df66a84cd64211c22e58c48df07ce63bf5469a3/src%2Flibstd%2Fiterator.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fiterator.rs?ref=2df66a84cd64211c22e58c48df07ce63bf5469a3", "patch": "@@ -311,6 +311,9 @@ pub trait IteratorUtil<A> {\n \n     /// Return the first element satisfying the specified predicate\n     fn find(&mut self, predicate: &fn(&A) -> bool) -> Option<A>;\n+\n+    /// Return the index of the first element satisfying the specified predicate\n+    fn position(&mut self, predicate: &fn(A) -> bool) -> Option<uint>;\n }\n \n /// Iterator adaptors provided for every `Iterator` implementation. The adaptor objects are also\n@@ -451,6 +454,19 @@ impl<A, T: Iterator<A>> IteratorUtil<A> for T {\n         }\n         None\n     }\n+\n+    /// Return the index of the first element satisfying the specified predicate\n+    #[inline]\n+    fn position(&mut self, predicate: &fn(A) -> bool) -> Option<uint> {\n+        let mut i = 0;\n+        for self.advance |x| {\n+            if predicate(x) {\n+                return Some(i);\n+            }\n+            i += 1;\n+        }\n+        None\n+    }\n }\n \n /// A trait for iterators over elements which can be added together\n@@ -1075,4 +1091,12 @@ mod tests {\n         assert_eq!(*v.iter().find(|x| *x % 3 == 0).unwrap(), 3);\n         assert!(v.iter().find(|x| *x % 12 == 0).is_none());\n     }\n+\n+    #[test]\n+    fn test_position() {\n+        let v = &[1, 3, 9, 27, 103, 14, 11];\n+        assert_eq!(v.iter().position(|x| *x & 1 == 0).unwrap(), 5);\n+        assert_eq!(v.iter().position(|x| *x % 3 == 0).unwrap(), 1);\n+        assert!(v.iter().position(|x| *x % 12 == 0).is_none());\n+    }\n }"}]}