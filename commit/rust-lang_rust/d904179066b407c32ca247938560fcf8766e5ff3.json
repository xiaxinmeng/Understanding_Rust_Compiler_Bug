{"sha": "d904179066b407c32ca247938560fcf8766e5ff3", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ5MDQxNzkwNjZiNDA3YzMyY2EyNDc5Mzg1NjBmY2Y4NzY2ZTVmZjM=", "commit": {"author": {"name": "Scott Lawrence", "email": "bytbox@gmail.com", "date": "2014-01-27T04:12:26Z"}, "committer": {"name": "Scott Lawrence", "email": "bytbox@gmail.com", "date": "2014-01-29T14:15:41Z"}, "message": "Removing do keyword from librustpkg", "tree": {"sha": "7b039cfeb3107e294a22bd31fd67e17b6504f410", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7b039cfeb3107e294a22bd31fd67e17b6504f410"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d904179066b407c32ca247938560fcf8766e5ff3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d904179066b407c32ca247938560fcf8766e5ff3", "html_url": "https://github.com/rust-lang/rust/commit/d904179066b407c32ca247938560fcf8766e5ff3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d904179066b407c32ca247938560fcf8766e5ff3/comments", "author": {"login": "bytbox", "id": 160033, "node_id": "MDQ6VXNlcjE2MDAzMw==", "avatar_url": "https://avatars.githubusercontent.com/u/160033?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bytbox", "html_url": "https://github.com/bytbox", "followers_url": "https://api.github.com/users/bytbox/followers", "following_url": "https://api.github.com/users/bytbox/following{/other_user}", "gists_url": "https://api.github.com/users/bytbox/gists{/gist_id}", "starred_url": "https://api.github.com/users/bytbox/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bytbox/subscriptions", "organizations_url": "https://api.github.com/users/bytbox/orgs", "repos_url": "https://api.github.com/users/bytbox/repos", "events_url": "https://api.github.com/users/bytbox/events{/privacy}", "received_events_url": "https://api.github.com/users/bytbox/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bytbox", "id": 160033, "node_id": "MDQ6VXNlcjE2MDAzMw==", "avatar_url": "https://avatars.githubusercontent.com/u/160033?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bytbox", "html_url": "https://github.com/bytbox", "followers_url": "https://api.github.com/users/bytbox/followers", "following_url": "https://api.github.com/users/bytbox/following{/other_user}", "gists_url": "https://api.github.com/users/bytbox/gists{/gist_id}", "starred_url": "https://api.github.com/users/bytbox/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bytbox/subscriptions", "organizations_url": "https://api.github.com/users/bytbox/orgs", "repos_url": "https://api.github.com/users/bytbox/repos", "events_url": "https://api.github.com/users/bytbox/events{/privacy}", "received_events_url": "https://api.github.com/users/bytbox/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "518a5e08c038fb74ba0efa8b29c7f80b7a42b970", "url": "https://api.github.com/repos/rust-lang/rust/commits/518a5e08c038fb74ba0efa8b29c7f80b7a42b970", "html_url": "https://github.com/rust-lang/rust/commit/518a5e08c038fb74ba0efa8b29c7f80b7a42b970"}], "stats": {"total": 16, "additions": 8, "deletions": 8}, "files": [{"sha": "b43ffec2783cafb3d5e37613be81e0db69501fa4", "filename": "src/librustpkg/lib.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/d904179066b407c32ca247938560fcf8766e5ff3/src%2Flibrustpkg%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d904179066b407c32ca247938560fcf8766e5ff3/src%2Flibrustpkg%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustpkg%2Flib.rs?ref=d904179066b407c32ca247938560fcf8766e5ff3", "patch": "@@ -799,14 +799,14 @@ pub fn main_args(args: &[~str]) -> int {\n     debug!(\"Will store workcache in {}\", ws.display());\n \n     // Wrap the rest in task::try in case of a condition failure in a task\n-    let result = do task::try {\n+    let result = task::try(proc() {\n         BuildContext {\n             context: context,\n             sysroot: sysroot.clone(), // Currently, only tests override this\n             workcache_context: api::default_context(sysroot.clone(),\n                                                     default_workspace()).workcache_context\n         }.run(command, args.clone())\n-    };\n+    });\n     // FIXME #9262: This is using the same error code for all errors,\n     // and at least one test case succeeds if rustpkg returns COPY_FAILED_CODE,\n     // when actually, it might set the exit code for that even if a different"}, {"sha": "091399c3fb7de274659d9b6e2b740cd35d7fde64", "filename": "src/librustpkg/tests.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/d904179066b407c32ca247938560fcf8766e5ff3/src%2Flibrustpkg%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d904179066b407c32ca247938560fcf8766e5ff3/src%2Flibrustpkg%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustpkg%2Ftests.rs?ref=d904179066b407c32ca247938560fcf8766e5ff3", "patch": "@@ -607,13 +607,13 @@ fn test_install_invalid() {\n     let ctxt = fake_ctxt(sysroot, &temp_workspace);\n \n     // Uses task::try because of #9001\n-    let result = do task::try {\n+    let result = task::try(proc() {\n         let pkg_src = PkgSrc::new(temp_workspace.clone(),\n                                   temp_workspace.clone(),\n                                   false,\n                                   crateid.clone());\n         ctxt.install(pkg_src, &WhatToBuild::new(MaybeCustom, Everything));\n-    };\n+    });\n     assert!(result.unwrap_err()\n             .to_str().contains(\"supplied path for package dir does not exist\"));\n }"}, {"sha": "dcc39ae0e92b43d9fe7ec20e138b05710f657969", "filename": "src/librustpkg/testsuite/pass/src/c-dependencies/pkg.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/d904179066b407c32ca247938560fcf8766e5ff3/src%2Flibrustpkg%2Ftestsuite%2Fpass%2Fsrc%2Fc-dependencies%2Fpkg.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d904179066b407c32ca247938560fcf8766e5ff3/src%2Flibrustpkg%2Ftestsuite%2Fpass%2Fsrc%2Fc-dependencies%2Fpkg.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustpkg%2Ftestsuite%2Fpass%2Fsrc%2Fc-dependencies%2Fpkg.rs?ref=d904179066b407c32ca247938560fcf8766e5ff3", "patch": "@@ -50,7 +50,7 @@ pub fn main() {\n         prep.declare_input(\"file\",\n                            foo_c_name.as_str().unwrap().to_owned(),\n                            digest_file_with_date(&foo_c_name));\n-        let out_path = do prep.exec |exec| {\n+        let out_path = prep.exec(|exec| {\n             let out_path = api::build_library_in_workspace(exec,\n                                                            &mut sub_cx.clone(),\n                                                            \"cdep\",\n@@ -60,22 +60,22 @@ pub fn main() {\n                                                            \"foo\");\n             let out_p = Path::new(out_path.unwrap());\n             out_p.as_str().unwrap().to_owned()\n-        };\n+        });\n         out_path\n     });\n     let out_lib_path = Path::new(out_lib_path);\n     debug!(\"out_lib_path = {}\", out_lib_path.display());\n     context.add_library_path(out_lib_path.dir_path());\n \n     let context_clone = context.clone();\n-    let task_res = do task::try {\n+    let task_res = task::try(proc() {\n         let mut cc = context_clone.clone();\n         api::install_pkg(&mut cc,\n                          os::getcwd(),\n                          ~\"cdep\",\n                          None,\n                          ~[(~\"binary\", out_lib_path.clone()), (~\"file\", foo_c_name.clone())]);\n-    };\n+    });\n \n     if task_res.is_err() {\n         os::set_exit_status(COPY_FAILED_CODE);"}]}