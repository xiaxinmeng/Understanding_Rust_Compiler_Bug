{"sha": "ac655ce7fe74831e865e5040d7190406143c6651", "node_id": "C_kwDOAAsO6NoAKGFjNjU1Y2U3ZmU3NDgzMWU4NjVlNTA0MGQ3MTkwNDA2MTQzYzY2NTE", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-08-16T12:55:22Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-08-16T12:55:22Z"}, "message": "Auto merge of #2490 - RalfJung:ci, r=RalfJung\n\nmake sure all builds are locked on CI", "tree": {"sha": "5673ccbdacb6fbf7de5848dbdf246084a128cf7c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5673ccbdacb6fbf7de5848dbdf246084a128cf7c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ac655ce7fe74831e865e5040d7190406143c6651", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ac655ce7fe74831e865e5040d7190406143c6651", "html_url": "https://github.com/rust-lang/rust/commit/ac655ce7fe74831e865e5040d7190406143c6651", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ac655ce7fe74831e865e5040d7190406143c6651/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "39c606fd587fac278d667060d3ffd7552fb076a6", "url": "https://api.github.com/repos/rust-lang/rust/commits/39c606fd587fac278d667060d3ffd7552fb076a6", "html_url": "https://github.com/rust-lang/rust/commit/39c606fd587fac278d667060d3ffd7552fb076a6"}, {"sha": "ecb8ac5cf41bcb20921df6be22caad07fb74136a", "url": "https://api.github.com/repos/rust-lang/rust/commits/ecb8ac5cf41bcb20921df6be22caad07fb74136a", "html_url": "https://github.com/rust-lang/rust/commit/ecb8ac5cf41bcb20921df6be22caad07fb74136a"}], "stats": {"total": 18, "additions": 10, "deletions": 8}, "files": [{"sha": "51cec8fe161964cd01a8d31027582f5cb6f82630", "filename": "ci.sh", "status": "modified", "additions": 10, "deletions": 8, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/ac655ce7fe74831e865e5040d7190406143c6651/ci.sh", "raw_url": "https://github.com/rust-lang/rust/raw/ac655ce7fe74831e865e5040d7190406143c6651/ci.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/ci.sh?ref=ac655ce7fe74831e865e5040d7190406143c6651", "patch": "@@ -2,16 +2,18 @@\n set -euo pipefail\n set -x\n \n-# Determine configuration\n+# Determine configuration for installed build\n+echo \"Installing release version of Miri\"\n export RUSTFLAGS=\"-D warnings\"\n export CARGO_INCREMENTAL=0\n-\n-# Prepare\n-echo \"Build and install miri\"\n ./miri install # implicitly locked\n+\n+# Prepare debug build for direct `./miri` invocations\n+echo \"Building debug version of Miri\"\n+export CARGO_EXTRA_FLAGS=\"--locked\"\n ./miri check --no-default-features # make sure this can be built\n ./miri check --all-features # and this, too\n-./miri build --all-targets --locked # the build that all the `./miri test` below will use\n+./miri build --all-targets # the build that all the `./miri test` below will use\n echo\n \n # Test\n@@ -23,13 +25,13 @@ function run_tests {\n   fi\n \n   ## ui test suite\n-  ./miri test --locked\n+  ./miri test\n   if [ -z \"${MIRI_TEST_TARGET+exists}\" ]; then\n     # Only for host architecture: tests with optimizations (`-O` is what cargo passes, but crank MIR\n     # optimizations up all the way).\n     # Optimizations change diagnostics (mostly backtraces), so we don't check them\n     #FIXME(#2155): we want to only run the pass and panic tests here, not the fail tests.\n-    MIRIFLAGS=\"-O -Zmir-opt-level=4\" MIRI_SKIP_UI_CHECKS=1 ./miri test --locked -- tests/{pass,panic}\n+    MIRIFLAGS=\"-O -Zmir-opt-level=4\" MIRI_SKIP_UI_CHECKS=1 ./miri test -- tests/{pass,panic}\n   fi\n \n   ## test-cargo-miri\n@@ -70,7 +72,7 @@ function run_tests_minimal {\n     echo \"Testing MINIMAL host architecture: only testing $@\"\n   fi\n \n-  ./miri test --locked -- \"$@\"\n+  ./miri test -- \"$@\"\n }\n \n # host"}]}