{"sha": "ffd8cb87bf342488b56fe8e0238b0e556e813601", "node_id": "C_kwDOAAsO6NoAKGZmZDhjYjg3YmYzNDI0ODhiNTZmZThlMDIzOGIwZTU1NmU4MTM2MDE", "commit": {"author": {"name": "bjorn3", "email": "17426603+bjorn3@users.noreply.github.com", "date": "2023-02-13T23:12:25Z"}, "committer": {"name": "bjorn3", "email": "17426603+bjorn3@users.noreply.github.com", "date": "2023-05-11T14:35:09Z"}, "message": "Fix review comments\n\nCo-authored-by: Ralf Jung <post@ralfj.de>", "tree": {"sha": "34d5754dfebac178e40d625834c04dfccf0908a7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/34d5754dfebac178e40d625834c04dfccf0908a7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ffd8cb87bf342488b56fe8e0238b0e556e813601", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ffd8cb87bf342488b56fe8e0238b0e556e813601", "html_url": "https://github.com/rust-lang/rust/commit/ffd8cb87bf342488b56fe8e0238b0e556e813601", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ffd8cb87bf342488b56fe8e0238b0e556e813601/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "568deb7ece889ed2871fa023100cb69c5c086967", "url": "https://api.github.com/repos/rust-lang/rust/commits/568deb7ece889ed2871fa023100cb69c5c086967", "html_url": "https://github.com/rust-lang/rust/commit/568deb7ece889ed2871fa023100cb69c5c086967"}], "stats": {"total": 13, "additions": 6, "deletions": 7}, "files": [{"sha": "57fce448b606ac183945df58f6d1a6220014a94d", "filename": "src/tools/miri/src/shims/foreign_items.rs", "status": "modified", "additions": 6, "deletions": 7, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/ffd8cb87bf342488b56fe8e0238b0e556e813601/src%2Ftools%2Fmiri%2Fsrc%2Fshims%2Fforeign_items.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ffd8cb87bf342488b56fe8e0238b0e556e813601/src%2Ftools%2Fmiri%2Fsrc%2Fshims%2Fforeign_items.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Fsrc%2Fshims%2Fforeign_items.rs?ref=ffd8cb87bf342488b56fe8e0238b0e556e813601", "patch": "@@ -359,10 +359,10 @@ pub trait EvalContextExt<'mir, 'tcx: 'mir>: crate::MiriInterpCxExt<'mir, 'tcx> {\n         match allocator_kind {\n             AllocatorKind::Global => {\n                 // When `#[global_allocator]` is used, `__rust_*` is defined by the macro expansion\n-                // of this attribute rather than generated by the allocator shim. As such we have\n-                // to call the definition produced by `#[global_allocator]` instead of the shim like\n-                // in the case of `#[global_allocator]` not existing. Somewhat unintuitively doing\n-                // so is done by returning `NotSupported`.\n+                // of this attribute. As such we have to call an exported Rust function,\n+                // and not execute any Miri shim. Somewhat unintuitively doing so is done\n+                // by returning `NotSupported`, which triggers the `lookup_exported_symbol`\n+                // fallback case in `emulate_foreign_item`.\n                 return Ok(EmulateByNameResult::NotSupported);\n             }\n             AllocatorKind::Default => {\n@@ -559,9 +559,8 @@ pub trait EvalContextExt<'mir, 'tcx: 'mir>: crate::MiriInterpCxExt<'mir, 'tcx> {\n             // Rust allocation\n             \"__rust_alloc\" | \"miri_alloc\" => {\n                 let default = |this: &mut MiriInterpCx<'mir, 'tcx>| {\n-                    // Only call `check_shim` when `#[global_allocator]` isn't used. The macro\n-                    // expansion of `#[global_allocator]` defines this symbol and `check_shim`\n-                    // checks that there exists no definition of a shim.\n+                    // Only call `check_shim` when `#[global_allocator]` isn't used. When that\n+                    // macro is used, we act like no shim exists, so that the exported function can run.\n                     let [size, align] = this.check_shim(abi, Abi::Rust, link_name, args)?;\n                     let size = this.read_target_usize(size)?;\n                     let align = this.read_target_usize(align)?;"}]}