{"sha": "0ee15040d5c0c9906198cdff2fbdf8af54d505d0", "node_id": "C_kwDOAAsO6NoAKDBlZTE1MDQwZDVjMGM5OTA2MTk4Y2RmZjJmYmRmOGFmNTRkNTA1ZDA", "commit": {"author": {"name": "Yuki Okushi", "email": "jtitor@2k36.org", "date": "2022-06-15T03:02:01Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-06-15T03:02:01Z"}, "message": "Rollup merge of #97822 - compiler-errors:hesitate-to-suggest-intrinsics, r=oli-obk\n\nFilter out intrinsics if we have other import candidates to suggest\n\nFixes #97618\n\nAlso open to just sorting these candidates to be last. Pretty easy to modify the code to do that, too.", "tree": {"sha": "6cb1186070e3e93793555fa7e2ce8184e491c46f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6cb1186070e3e93793555fa7e2ce8184e491c46f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0ee15040d5c0c9906198cdff2fbdf8af54d505d0", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJiqUupCRBK7hj4Ov3rIwAAQP8IAGl6Cu94J/U7ekyX2Rh7D8AM\n3d9JR2A1M5eJVQlLi7h3ZmqWz6/qTSht9aZy+cZ8zrtk6kHtB463Rs0sW/K+BTKI\ndCVWVHb3w1qspMhDM/Oaq/AqL3xUld6ieGWph+JIf4JQ2n09QLFjMOdJE+SA1IFf\ng2yTLWsOmKhQis5PwrVsD3dbLHYAxNhGLWSVXgP8erAY9KN4EqYstbRFDZvV1NCL\nIX0w0iLQVgnMS2QkU4T33IgufKmzmnMBNTFj+t9iXkgIpKTJvGqQQ0h/N3UgOoUs\nLEjtNPrps+94k4/7f8O/jwFr6kITgdrooPDLna9pDB1nzSW88ACphSS78iAUnvs=\n=MkNq\n-----END PGP SIGNATURE-----\n", "payload": "tree 6cb1186070e3e93793555fa7e2ce8184e491c46f\nparent 2d1e0750792529248ed6f11061940c7203d668c9\nparent ab0938d0df6f6801e0ad2d1f6d11f05106d00646\nauthor Yuki Okushi <jtitor@2k36.org> 1655262121 +0900\ncommitter GitHub <noreply@github.com> 1655262121 +0900\n\nRollup merge of #97822 - compiler-errors:hesitate-to-suggest-intrinsics, r=oli-obk\n\nFilter out intrinsics if we have other import candidates to suggest\n\nFixes #97618\n\nAlso open to just sorting these candidates to be last. Pretty easy to modify the code to do that, too.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0ee15040d5c0c9906198cdff2fbdf8af54d505d0", "html_url": "https://github.com/rust-lang/rust/commit/0ee15040d5c0c9906198cdff2fbdf8af54d505d0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0ee15040d5c0c9906198cdff2fbdf8af54d505d0/comments", "author": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2d1e0750792529248ed6f11061940c7203d668c9", "url": "https://api.github.com/repos/rust-lang/rust/commits/2d1e0750792529248ed6f11061940c7203d668c9", "html_url": "https://github.com/rust-lang/rust/commit/2d1e0750792529248ed6f11061940c7203d668c9"}, {"sha": "ab0938d0df6f6801e0ad2d1f6d11f05106d00646", "url": "https://api.github.com/repos/rust-lang/rust/commits/ab0938d0df6f6801e0ad2d1f6d11f05106d00646", "html_url": "https://github.com/rust-lang/rust/commit/ab0938d0df6f6801e0ad2d1f6d11f05106d00646"}], "stats": {"total": 49, "additions": 48, "deletions": 1}, "files": [{"sha": "460d505ba98b50b0de92d24d7988a839201e7f39", "filename": "compiler/rustc_resolve/src/late/diagnostics.rs", "status": "modified", "additions": 13, "deletions": 1, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/0ee15040d5c0c9906198cdff2fbdf8af54d505d0/compiler%2Frustc_resolve%2Fsrc%2Flate%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0ee15040d5c0c9906198cdff2fbdf8af54d505d0/compiler%2Frustc_resolve%2Fsrc%2Flate%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_resolve%2Fsrc%2Flate%2Fdiagnostics.rs?ref=0ee15040d5c0c9906198cdff2fbdf8af54d505d0", "patch": "@@ -396,7 +396,7 @@ impl<'a: 'ast, 'ast> LateResolutionVisitor<'a, '_, 'ast> {\n \n         // Try to lookup name in more relaxed fashion for better error reporting.\n         let ident = path.last().unwrap().ident;\n-        let candidates = self\n+        let mut candidates = self\n             .r\n             .lookup_import_candidates(ident, ns, &self.parent_scope, is_expected)\n             .into_iter()\n@@ -408,6 +408,18 @@ impl<'a: 'ast, 'ast> LateResolutionVisitor<'a, '_, 'ast> {\n             })\n             .collect::<Vec<_>>();\n         let crate_def_id = CRATE_DEF_ID.to_def_id();\n+        // Try to filter out intrinsics candidates, as long as we have\n+        // some other candidates to suggest.\n+        let intrinsic_candidates: Vec<_> = candidates\n+            .drain_filter(|sugg| {\n+                let path = path_names_to_string(&sugg.path);\n+                path.starts_with(\"core::intrinsics::\") || path.starts_with(\"std::intrinsics::\")\n+            })\n+            .collect();\n+        if candidates.is_empty() {\n+            // Put them back if we have no more candidates to suggest...\n+            candidates.extend(intrinsic_candidates);\n+        }\n         if candidates.is_empty() && is_expected(Res::Def(DefKind::Enum, crate_def_id)) {\n             let mut enum_candidates: Vec<_> = self\n                 .r"}, {"sha": "c0956ef85aff6b2b6765880228149179d8a866d9", "filename": "src/test/ui/resolve/filter-intrinsics.rs", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/0ee15040d5c0c9906198cdff2fbdf8af54d505d0/src%2Ftest%2Fui%2Fresolve%2Ffilter-intrinsics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0ee15040d5c0c9906198cdff2fbdf8af54d505d0/src%2Ftest%2Fui%2Fresolve%2Ffilter-intrinsics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fresolve%2Ffilter-intrinsics.rs?ref=0ee15040d5c0c9906198cdff2fbdf8af54d505d0", "patch": "@@ -0,0 +1,10 @@\n+fn main() {\n+    // Should suggest only `std::mem::size_of`\n+    let _ = size_of::<usize>();\n+    //~^ ERROR cannot find\n+\n+    // Should suggest `std::intrinsics::fabsf64`,\n+    // since there is no non-intrinsic to suggest.\n+    let _ = fabsf64(1.0);\n+    //~^ ERROR cannot find\n+}"}, {"sha": "955070891fbbea6084e5f9d027515d79dbe07b28", "filename": "src/test/ui/resolve/filter-intrinsics.stderr", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/0ee15040d5c0c9906198cdff2fbdf8af54d505d0/src%2Ftest%2Fui%2Fresolve%2Ffilter-intrinsics.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/0ee15040d5c0c9906198cdff2fbdf8af54d505d0/src%2Ftest%2Fui%2Fresolve%2Ffilter-intrinsics.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fresolve%2Ffilter-intrinsics.stderr?ref=0ee15040d5c0c9906198cdff2fbdf8af54d505d0", "patch": "@@ -0,0 +1,25 @@\n+error[E0425]: cannot find function `size_of` in this scope\n+  --> $DIR/filter-intrinsics.rs:3:13\n+   |\n+LL |     let _ = size_of::<usize>();\n+   |             ^^^^^^^ not found in this scope\n+   |\n+help: consider importing this function\n+   |\n+LL | use std::mem::size_of;\n+   |\n+\n+error[E0425]: cannot find function `fabsf64` in this scope\n+  --> $DIR/filter-intrinsics.rs:8:13\n+   |\n+LL |     let _ = fabsf64(1.0);\n+   |             ^^^^^^^ not found in this scope\n+   |\n+help: consider importing this function\n+   |\n+LL | use std::intrinsics::fabsf64;\n+   |\n+\n+error: aborting due to 2 previous errors\n+\n+For more information about this error, try `rustc --explain E0425`."}]}