{"sha": "ceda77486f8a37f85326f38bfc7509eea4c38ce9", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNlZGE3NzQ4NmY4YTM3Zjg1MzI2ZjM4YmZjNzUwOWVlYTRjMzhjZTk=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2019-08-02T15:56:55Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2019-08-08T17:31:46Z"}, "message": "dont test Miri by default (also be more verbose when being verbose)", "tree": {"sha": "9d5a3ce0410495bdf9fb85a2b13f7f29427c93b6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9d5a3ce0410495bdf9fb85a2b13f7f29427c93b6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ceda77486f8a37f85326f38bfc7509eea4c38ce9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ceda77486f8a37f85326f38bfc7509eea4c38ce9", "html_url": "https://github.com/rust-lang/rust/commit/ceda77486f8a37f85326f38bfc7509eea4c38ce9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ceda77486f8a37f85326f38bfc7509eea4c38ce9/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "295f894b18fedd1ff5748ef122166840a8b83e3c", "url": "https://api.github.com/repos/rust-lang/rust/commits/295f894b18fedd1ff5748ef122166840a8b83e3c", "html_url": "https://github.com/rust-lang/rust/commit/295f894b18fedd1ff5748ef122166840a8b83e3c"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "00a2802ba81431fed82a04c7dd21bb8b63ba07ff", "filename": "src/bootstrap/test.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ceda77486f8a37f85326f38bfc7509eea4c38ce9/src%2Fbootstrap%2Ftest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ceda77486f8a37f85326f38bfc7509eea4c38ce9/src%2Fbootstrap%2Ftest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Ftest.rs?ref=ceda77486f8a37f85326f38bfc7509eea4c38ce9", "patch": "@@ -363,7 +363,6 @@ pub struct Miri {\n impl Step for Miri {\n     type Output = ();\n     const ONLY_HOSTS: bool = true;\n-    const DEFAULT: bool = true;\n \n     fn should_run(run: ShouldRun<'_>) -> ShouldRun<'_> {\n         run.path(\"src/tools/miri\")\n@@ -430,6 +429,7 @@ impl Step for Miri {\n             let miri_sysroot = if builder.config.dry_run {\n                 String::new()\n             } else {\n+                builder.verbose(&format!(\"running: {:?}\", cargo));\n                 let out = cargo.output()\n                     .expect(\"We already ran `cargo miri setup` before and that worked\");\n                 assert!(out.status.success(), \"`cargo miri setup` returned with non-0 exit code\");"}]}