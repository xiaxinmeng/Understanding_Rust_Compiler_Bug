{"sha": "eab77320e6cad8a42b05989c17bdc8a9609d83ac", "node_id": "C_kwDOAAsO6NoAKGVhYjc3MzIwZTZjYWQ4YTQyYjA1OTg5YzE3YmRjOGE5NjA5ZDgzYWM", "commit": {"author": {"name": "Jannis Christopher K\u00f6hl", "email": "mail@koehl.dev", "date": "2022-10-05T18:19:11Z"}, "committer": {"name": "Jannis Christopher K\u00f6hl", "email": "mail@koehl.dev", "date": "2022-11-07T09:35:19Z"}, "message": "Handle NonDivergingIntrinsic and CopyNonOverlapping", "tree": {"sha": "8ff82ccc09b1d3ec6cc615db1d87f3c18f1c076b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8ff82ccc09b1d3ec6cc615db1d87f3c18f1c076b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/eab77320e6cad8a42b05989c17bdc8a9609d83ac", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/eab77320e6cad8a42b05989c17bdc8a9609d83ac", "html_url": "https://github.com/rust-lang/rust/commit/eab77320e6cad8a42b05989c17bdc8a9609d83ac", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/eab77320e6cad8a42b05989c17bdc8a9609d83ac/comments", "author": {"login": "jachris", "id": 30163784, "node_id": "MDQ6VXNlcjMwMTYzNzg0", "avatar_url": "https://avatars.githubusercontent.com/u/30163784?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jachris", "html_url": "https://github.com/jachris", "followers_url": "https://api.github.com/users/jachris/followers", "following_url": "https://api.github.com/users/jachris/following{/other_user}", "gists_url": "https://api.github.com/users/jachris/gists{/gist_id}", "starred_url": "https://api.github.com/users/jachris/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jachris/subscriptions", "organizations_url": "https://api.github.com/users/jachris/orgs", "repos_url": "https://api.github.com/users/jachris/repos", "events_url": "https://api.github.com/users/jachris/events{/privacy}", "received_events_url": "https://api.github.com/users/jachris/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jachris", "id": 30163784, "node_id": "MDQ6VXNlcjMwMTYzNzg0", "avatar_url": "https://avatars.githubusercontent.com/u/30163784?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jachris", "html_url": "https://github.com/jachris", "followers_url": "https://api.github.com/users/jachris/followers", "following_url": "https://api.github.com/users/jachris/following{/other_user}", "gists_url": "https://api.github.com/users/jachris/gists{/gist_id}", "starred_url": "https://api.github.com/users/jachris/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jachris/subscriptions", "organizations_url": "https://api.github.com/users/jachris/orgs", "repos_url": "https://api.github.com/users/jachris/repos", "events_url": "https://api.github.com/users/jachris/events{/privacy}", "received_events_url": "https://api.github.com/users/jachris/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f99950f6aeb78bd271af3f99cbad03613f7b93f7", "url": "https://api.github.com/repos/rust-lang/rust/commits/f99950f6aeb78bd271af3f99cbad03613f7b93f7", "html_url": "https://github.com/rust-lang/rust/commit/f99950f6aeb78bd271af3f99cbad03613f7b93f7"}], "stats": {"total": 15, "additions": 12, "deletions": 3}, "files": [{"sha": "02b92ed7a6206ae6d34d39694632c9b444861908", "filename": "compiler/rustc_mir_dataflow/src/value_analysis.rs", "status": "modified", "additions": 12, "deletions": 3, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/eab77320e6cad8a42b05989c17bdc8a9609d83ac/compiler%2Frustc_mir_dataflow%2Fsrc%2Fvalue_analysis.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eab77320e6cad8a42b05989c17bdc8a9609d83ac/compiler%2Frustc_mir_dataflow%2Fsrc%2Fvalue_analysis.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir_dataflow%2Fsrc%2Fvalue_analysis.rs?ref=eab77320e6cad8a42b05989c17bdc8a9609d83ac", "patch": "@@ -116,10 +116,19 @@ pub trait ValueAnalysis<'tcx> {\n \n     fn super_intrinsic(\n         &self,\n-        _intrinsic: &NonDivergingIntrinsic<'tcx>,\n-        _state: &mut State<Self::Value>,\n+        intrinsic: &NonDivergingIntrinsic<'tcx>,\n+        state: &mut State<Self::Value>,\n     ) {\n-        todo!();\n+        match intrinsic {\n+            NonDivergingIntrinsic::Assume(..) => {\n+                // Could use this, but ignoring it is sound.\n+            }\n+            NonDivergingIntrinsic::CopyNonOverlapping(CopyNonOverlapping { dst, .. }) => {\n+                if let Some(place) = dst.place() {\n+                    state.flood(place.as_ref(), self.map());\n+                }\n+            }\n+        }\n     }\n \n     fn handle_assign("}]}