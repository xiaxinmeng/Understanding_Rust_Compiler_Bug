{"sha": "be153f0976705f8d7ca45540a4965bb156b2cc34", "node_id": "C_kwDOAAsO6NoAKGJlMTUzZjA5NzY3MDVmOGQ3Y2E0NTU0MGE0OTY1YmIxNTZiMmNjMzQ", "commit": {"author": {"name": "Oli Scherer", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2022-02-02T15:03:44Z"}, "committer": {"name": "Oli Scherer", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2022-02-02T15:40:12Z"}, "message": "Only prevent TAITs from defining each other, RPIT and async are fine, they only ever have one defining site, and it is ordered correctly around expected and actual type in type comparisons", "tree": {"sha": "d6575d4f5d10c48daff632ee98c02c6b7f0dfad8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d6575d4f5d10c48daff632ee98c02c6b7f0dfad8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/be153f0976705f8d7ca45540a4965bb156b2cc34", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/be153f0976705f8d7ca45540a4965bb156b2cc34", "html_url": "https://github.com/rust-lang/rust/commit/be153f0976705f8d7ca45540a4965bb156b2cc34", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/be153f0976705f8d7ca45540a4965bb156b2cc34/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7f608eb9edb38ff271ff5be50dbbbb424cbf348f", "url": "https://api.github.com/repos/rust-lang/rust/commits/7f608eb9edb38ff271ff5be50dbbbb424cbf348f", "html_url": "https://github.com/rust-lang/rust/commit/7f608eb9edb38ff271ff5be50dbbbb424cbf348f"}], "stats": {"total": 31, "additions": 10, "deletions": 21}, "files": [{"sha": "46420fbe0c305c5afe04e6c8c2240790e2416f81", "filename": "compiler/rustc_infer/src/infer/opaque_types.rs", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/be153f0976705f8d7ca45540a4965bb156b2cc34/compiler%2Frustc_infer%2Fsrc%2Finfer%2Fopaque_types.rs", "raw_url": "https://github.com/rust-lang/rust/raw/be153f0976705f8d7ca45540a4965bb156b2cc34/compiler%2Frustc_infer%2Fsrc%2Finfer%2Fopaque_types.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_infer%2Fsrc%2Finfer%2Fopaque_types.rs?ref=be153f0976705f8d7ca45540a4965bb156b2cc34", "patch": "@@ -82,7 +82,14 @@ impl<'a, 'tcx> InferCtxt<'a, 'tcx> {\n             let process = |a: Ty<'tcx>, b: Ty<'tcx>| match *a.kind() {\n                 ty::Opaque(def_id, substs) => {\n                     if let ty::Opaque(did2, _) = *b.kind() {\n-                        if self.opaque_type_origin(did2, cause.span).is_some() {\n+                        // We could accept this, but there are various ways to handle this situation, and we don't\n+                        // want to make a decision on it right now. Likely this case is so super rare anyway, that\n+                        // no one encounters it in practice.\n+                        // It does occur however in `fn fut() -> impl Future<Output = i32> { async { 42 } }`,\n+                        // where it is of no concern, so we only check for TAITs.\n+                        if let Some(OpaqueTyOrigin::TyAlias) =\n+                            self.opaque_type_origin(did2, cause.span)\n+                        {\n                             self.tcx\n                                 .sess\n                                 .struct_span_err("}, {"sha": "45dcb74a6e05c41cbbc263b916c9f642aa5d8228", "filename": "src/test/ui/impl-trait/example-calendar.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/be153f0976705f8d7ca45540a4965bb156b2cc34/src%2Ftest%2Fui%2Fimpl-trait%2Fexample-calendar.rs", "raw_url": "https://github.com/rust-lang/rust/raw/be153f0976705f8d7ca45540a4965bb156b2cc34/src%2Ftest%2Fui%2Fimpl-trait%2Fexample-calendar.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimpl-trait%2Fexample-calendar.rs?ref=be153f0976705f8d7ca45540a4965bb156b2cc34", "patch": "@@ -1,3 +1,4 @@\n+// run-pass\n // ignore-compare-mode-chalk\n \n #![feature(fn_traits,\n@@ -589,7 +590,7 @@ fn test_format_month() {\n fn format_months(it: impl Iterator<Item = impl DateIterator>)\n                 -> impl Iterator<Item=impl Iterator<Item=String>>\n {\n-    it.map(format_month) //~ ERROR opaque type's hidden type cannot be another opaque type\n+    it.map(format_month)\n }\n \n /// Takes an iterator of iterators of strings; the sub-iterators are consumed"}, {"sha": "3894285947fec7d462300adfbe50e34befe2d46c", "filename": "src/test/ui/impl-trait/example-calendar.stderr", "status": "removed", "additions": 0, "deletions": 19, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/7f608eb9edb38ff271ff5be50dbbbb424cbf348f/src%2Ftest%2Fui%2Fimpl-trait%2Fexample-calendar.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7f608eb9edb38ff271ff5be50dbbbb424cbf348f/src%2Ftest%2Fui%2Fimpl-trait%2Fexample-calendar.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimpl-trait%2Fexample-calendar.stderr?ref=7f608eb9edb38ff271ff5be50dbbbb424cbf348f", "patch": "@@ -1,19 +0,0 @@\n-error: opaque type's hidden type cannot be another opaque type from the same scope\n-  --> $DIR/example-calendar.rs:592:5\n-   |\n-LL |     it.map(format_month)\n-   |     ^^^^^^^^^^^^^^^^^^^^ one of the two opaque types used here has to be outside its defining scope\n-   |\n-note: opaque type whose hidden type is being assigned\n-  --> $DIR/example-calendar.rs:560:43\n-   |\n-LL | fn format_month(it: impl DateIterator) -> impl Iterator<Item=String> {\n-   |                                           ^^^^^^^^^^^^^^^^^^^^^^^^^^\n-note: opaque type being used as hidden type\n-  --> $DIR/example-calendar.rs:590:39\n-   |\n-LL |                 -> impl Iterator<Item=impl Iterator<Item=String>>\n-   |                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^\n-\n-error: aborting due to previous error\n-"}]}