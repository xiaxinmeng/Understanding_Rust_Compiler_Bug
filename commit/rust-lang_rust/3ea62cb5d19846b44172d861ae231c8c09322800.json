{"sha": "3ea62cb5d19846b44172d861ae231c8c09322800", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNlYTYyY2I1ZDE5ODQ2YjQ0MTcyZDg2MWFlMjMxYzhjMDkzMjI4MDA=", "commit": {"author": {"name": "Simon Jakobi", "email": "simon.jakobi@gmail.com", "date": "2021-04-03T11:05:11Z"}, "committer": {"name": "Simon Jakobi", "email": "simon.jakobi@gmail.com", "date": "2021-04-03T20:30:20Z"}, "message": "Remove redundant `ignore-tidy-linelength` annotations\n\nThis is step 2 towards fixing #77548.\n\nIn the codegen and codegen-units test suites, the `//` comment markers\nwere kept in order not to affect any source locations. This is because\nthese tests cannot be automatically `--bless`ed.", "tree": {"sha": "73eda6b50fc9b02295e1a3c36c471c94f7999840", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/73eda6b50fc9b02295e1a3c36c471c94f7999840"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3ea62cb5d19846b44172d861ae231c8c09322800", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3ea62cb5d19846b44172d861ae231c8c09322800", "html_url": "https://github.com/rust-lang/rust/commit/3ea62cb5d19846b44172d861ae231c8c09322800", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3ea62cb5d19846b44172d861ae231c8c09322800/comments", "author": {"login": "sjakobi", "id": 3664523, "node_id": "MDQ6VXNlcjM2NjQ1MjM=", "avatar_url": "https://avatars.githubusercontent.com/u/3664523?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sjakobi", "html_url": "https://github.com/sjakobi", "followers_url": "https://api.github.com/users/sjakobi/followers", "following_url": "https://api.github.com/users/sjakobi/following{/other_user}", "gists_url": "https://api.github.com/users/sjakobi/gists{/gist_id}", "starred_url": "https://api.github.com/users/sjakobi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sjakobi/subscriptions", "organizations_url": "https://api.github.com/users/sjakobi/orgs", "repos_url": "https://api.github.com/users/sjakobi/repos", "events_url": "https://api.github.com/users/sjakobi/events{/privacy}", "received_events_url": "https://api.github.com/users/sjakobi/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sjakobi", "id": 3664523, "node_id": "MDQ6VXNlcjM2NjQ1MjM=", "avatar_url": "https://avatars.githubusercontent.com/u/3664523?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sjakobi", "html_url": "https://github.com/sjakobi", "followers_url": "https://api.github.com/users/sjakobi/followers", "following_url": "https://api.github.com/users/sjakobi/following{/other_user}", "gists_url": "https://api.github.com/users/sjakobi/gists{/gist_id}", "starred_url": "https://api.github.com/users/sjakobi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sjakobi/subscriptions", "organizations_url": "https://api.github.com/users/sjakobi/orgs", "repos_url": "https://api.github.com/users/sjakobi/repos", "events_url": "https://api.github.com/users/sjakobi/events{/privacy}", "received_events_url": "https://api.github.com/users/sjakobi/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "97717a561844eccbb6d6cc114adb94a8fa4e0172", "url": "https://api.github.com/repos/rust-lang/rust/commits/97717a561844eccbb6d6cc114adb94a8fa4e0172", "html_url": "https://github.com/rust-lang/rust/commit/97717a561844eccbb6d6cc114adb94a8fa4e0172"}], "stats": {"total": 3444, "additions": 1596, "deletions": 1848}, "files": [{"sha": "a3f1fb5e7a25cac05750c5a7f00169387f463eb3", "filename": "src/test/codegen-units/item-collection/drop_in_place_intrinsic.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fcodegen-units%2Fitem-collection%2Fdrop_in_place_intrinsic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fcodegen-units%2Fitem-collection%2Fdrop_in_place_intrinsic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcodegen-units%2Fitem-collection%2Fdrop_in_place_intrinsic.rs?ref=3ea62cb5d19846b44172d861ae231c8c09322800", "patch": "@@ -1,4 +1,4 @@\n-// ignore-tidy-linelength\n+//\n // compile-flags:-Zprint-mono-items=eager\n // compile-flags:-Zinline-in-all-cgus\n "}, {"sha": "ea500c3111a2e877109b43b3215b7bf84295e3ae", "filename": "src/test/codegen-units/item-collection/function-as-argument.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fcodegen-units%2Fitem-collection%2Ffunction-as-argument.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fcodegen-units%2Fitem-collection%2Ffunction-as-argument.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcodegen-units%2Fitem-collection%2Ffunction-as-argument.rs?ref=3ea62cb5d19846b44172d861ae231c8c09322800", "patch": "@@ -1,4 +1,4 @@\n-// ignore-tidy-linelength\n+//\n // compile-flags:-Zprint-mono-items=eager\n \n #![deny(dead_code)]"}, {"sha": "25cf5dad61403652be06567ab0e587cd480059a3", "filename": "src/test/codegen-units/item-collection/generic-drop-glue.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fcodegen-units%2Fitem-collection%2Fgeneric-drop-glue.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fcodegen-units%2Fitem-collection%2Fgeneric-drop-glue.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcodegen-units%2Fitem-collection%2Fgeneric-drop-glue.rs?ref=3ea62cb5d19846b44172d861ae231c8c09322800", "patch": "@@ -1,4 +1,4 @@\n-// ignore-tidy-linelength\n+//\n // compile-flags:-Zprint-mono-items=eager\n // compile-flags:-Zinline-in-all-cgus\n "}, {"sha": "e78226d4083a46c503c6a749fe8e5c9db824b037", "filename": "src/test/codegen-units/item-collection/instantiation-through-vtable.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fcodegen-units%2Fitem-collection%2Finstantiation-through-vtable.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fcodegen-units%2Fitem-collection%2Finstantiation-through-vtable.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcodegen-units%2Fitem-collection%2Finstantiation-through-vtable.rs?ref=3ea62cb5d19846b44172d861ae231c8c09322800", "patch": "@@ -1,4 +1,4 @@\n-// ignore-tidy-linelength\n+//\n // compile-flags:-Zprint-mono-items=eager -Zinline-in-all-cgus -Zmir-opt-level=0\n \n #![deny(dead_code)]"}, {"sha": "379fbcf2613e08d3fc910a262359057aa3a13945", "filename": "src/test/codegen-units/item-collection/non-generic-closures.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fcodegen-units%2Fitem-collection%2Fnon-generic-closures.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fcodegen-units%2Fitem-collection%2Fnon-generic-closures.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcodegen-units%2Fitem-collection%2Fnon-generic-closures.rs?ref=3ea62cb5d19846b44172d861ae231c8c09322800", "patch": "@@ -3,7 +3,7 @@\n // ignoring this test until MIR codegen has taken over completely\n // ignore-test\n \n-// ignore-tidy-linelength\n+//\n // compile-flags:-Zprint-mono-items=eager\n \n #![deny(dead_code)]"}, {"sha": "06f76f7db3660302acd34c89fa1eef87d7e6dd92", "filename": "src/test/codegen-units/item-collection/non-generic-drop-glue.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fcodegen-units%2Fitem-collection%2Fnon-generic-drop-glue.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fcodegen-units%2Fitem-collection%2Fnon-generic-drop-glue.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcodegen-units%2Fitem-collection%2Fnon-generic-drop-glue.rs?ref=3ea62cb5d19846b44172d861ae231c8c09322800", "patch": "@@ -1,4 +1,4 @@\n-// ignore-tidy-linelength\n+//\n // compile-flags:-Zprint-mono-items=eager\n // compile-flags:-Zinline-in-all-cgus\n "}, {"sha": "235569728a2e01f62f09a4832048df3910fef271", "filename": "src/test/codegen-units/item-collection/trait-method-as-argument.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fcodegen-units%2Fitem-collection%2Ftrait-method-as-argument.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fcodegen-units%2Fitem-collection%2Ftrait-method-as-argument.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcodegen-units%2Fitem-collection%2Ftrait-method-as-argument.rs?ref=3ea62cb5d19846b44172d861ae231c8c09322800", "patch": "@@ -1,4 +1,4 @@\n-// ignore-tidy-linelength\n+//\n // compile-flags:-Zprint-mono-items=eager\n \n #![deny(dead_code)]"}, {"sha": "8249e7cba946b7ac81f2b9c1fa5ba57414b7edfd", "filename": "src/test/codegen-units/item-collection/transitive-drop-glue.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fcodegen-units%2Fitem-collection%2Ftransitive-drop-glue.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fcodegen-units%2Fitem-collection%2Ftransitive-drop-glue.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcodegen-units%2Fitem-collection%2Ftransitive-drop-glue.rs?ref=3ea62cb5d19846b44172d861ae231c8c09322800", "patch": "@@ -1,4 +1,4 @@\n-// ignore-tidy-linelength\n+//\n // compile-flags:-Zprint-mono-items=eager\n // compile-flags:-Zinline-in-all-cgus\n "}, {"sha": "ae3b2e081ffaea269bc174fe0b5ef4d6ceb064fc", "filename": "src/test/codegen-units/item-collection/tuple-drop-glue.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fcodegen-units%2Fitem-collection%2Ftuple-drop-glue.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fcodegen-units%2Fitem-collection%2Ftuple-drop-glue.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcodegen-units%2Fitem-collection%2Ftuple-drop-glue.rs?ref=3ea62cb5d19846b44172d861ae231c8c09322800", "patch": "@@ -1,4 +1,4 @@\n-// ignore-tidy-linelength\n+//\n // compile-flags:-Zprint-mono-items=eager\n // compile-flags:-Zinline-in-all-cgus\n "}, {"sha": "8b0448ec470851d9a8f6e41878745158471829c0", "filename": "src/test/codegen-units/partitioning/extern-drop-glue.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fcodegen-units%2Fpartitioning%2Fextern-drop-glue.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fcodegen-units%2Fpartitioning%2Fextern-drop-glue.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcodegen-units%2Fpartitioning%2Fextern-drop-glue.rs?ref=3ea62cb5d19846b44172d861ae231c8c09322800", "patch": "@@ -1,4 +1,4 @@\n-// ignore-tidy-linelength\n+//\n \n // We specify -C incremental here because we want to test the partitioning for\n // incremental compilation"}, {"sha": "c96df6e102ac3391e2773063aae6a6f3b475a626", "filename": "src/test/codegen-units/partitioning/extern-generic.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fcodegen-units%2Fpartitioning%2Fextern-generic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fcodegen-units%2Fpartitioning%2Fextern-generic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcodegen-units%2Fpartitioning%2Fextern-generic.rs?ref=3ea62cb5d19846b44172d861ae231c8c09322800", "patch": "@@ -1,4 +1,4 @@\n-// ignore-tidy-linelength\n+//\n // We specify -C incremental here because we want to test the partitioning for\n // incremental compilation\n // compile-flags:-Zprint-mono-items=eager -Cincremental=tmp/partitioning-tests/extern-generic -Zshare-generics=y"}, {"sha": "b86e325537b8171cc08ae3a2c9abdd02950401f1", "filename": "src/test/codegen-units/partitioning/inlining-from-extern-crate.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fcodegen-units%2Fpartitioning%2Finlining-from-extern-crate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fcodegen-units%2Fpartitioning%2Finlining-from-extern-crate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcodegen-units%2Fpartitioning%2Finlining-from-extern-crate.rs?ref=3ea62cb5d19846b44172d861ae231c8c09322800", "patch": "@@ -1,4 +1,4 @@\n-// ignore-tidy-linelength\n+//\n // We specify -C incremental here because we want to test the partitioning for\n // incremental compilation\n // compile-flags:-Zprint-mono-items=lazy -Cincremental=tmp/partitioning-tests/inlining-from-extern-crate"}, {"sha": "78d69fdb7d814ff9f6fefa6f381c3d920200712f", "filename": "src/test/codegen-units/partitioning/local-drop-glue.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fcodegen-units%2Fpartitioning%2Flocal-drop-glue.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fcodegen-units%2Fpartitioning%2Flocal-drop-glue.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcodegen-units%2Fpartitioning%2Flocal-drop-glue.rs?ref=3ea62cb5d19846b44172d861ae231c8c09322800", "patch": "@@ -1,4 +1,4 @@\n-// ignore-tidy-linelength\n+//\n // We specify -C incremental here because we want to test the partitioning for\n // incremental compilation\n // We specify opt-level=0 because `drop_in_place` is `Internal` when optimizing"}, {"sha": "d53f7b622913221c17b65835399616ef29ee86e9", "filename": "src/test/codegen-units/partitioning/local-inlining-but-not-all.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fcodegen-units%2Fpartitioning%2Flocal-inlining-but-not-all.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fcodegen-units%2Fpartitioning%2Flocal-inlining-but-not-all.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcodegen-units%2Fpartitioning%2Flocal-inlining-but-not-all.rs?ref=3ea62cb5d19846b44172d861ae231c8c09322800", "patch": "@@ -1,4 +1,4 @@\n-// ignore-tidy-linelength\n+//\n // We specify -C incremental here because we want to test the partitioning for\n // incremental compilation\n // compile-flags:-Zprint-mono-items=lazy -Cincremental=tmp/partitioning-tests/local-inlining-but-not-all"}, {"sha": "1ea804b2f9d82c5beed1800ae4609b0f319bb7d9", "filename": "src/test/codegen-units/partitioning/local-inlining.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fcodegen-units%2Fpartitioning%2Flocal-inlining.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fcodegen-units%2Fpartitioning%2Flocal-inlining.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcodegen-units%2Fpartitioning%2Flocal-inlining.rs?ref=3ea62cb5d19846b44172d861ae231c8c09322800", "patch": "@@ -1,4 +1,4 @@\n-// ignore-tidy-linelength\n+//\n // We specify -C incremental here because we want to test the partitioning for\n // incremental compilation\n // compile-flags:-Zprint-mono-items=lazy -Cincremental=tmp/partitioning-tests/local-inlining"}, {"sha": "56d108074e40d0ebacbe046a0df623de190a9e99", "filename": "src/test/codegen-units/partitioning/local-transitive-inlining.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fcodegen-units%2Fpartitioning%2Flocal-transitive-inlining.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fcodegen-units%2Fpartitioning%2Flocal-transitive-inlining.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcodegen-units%2Fpartitioning%2Flocal-transitive-inlining.rs?ref=3ea62cb5d19846b44172d861ae231c8c09322800", "patch": "@@ -1,4 +1,4 @@\n-// ignore-tidy-linelength\n+//\n // We specify -C incremental here because we want to test the partitioning for\n // incremental compilation\n // compile-flags:-Zprint-mono-items=lazy -Cincremental=tmp/partitioning-tests/local-transitive-inlining"}, {"sha": "e67090303a36387892dae17e809b690bcae1edc0", "filename": "src/test/codegen-units/partitioning/methods-are-with-self-type.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fcodegen-units%2Fpartitioning%2Fmethods-are-with-self-type.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fcodegen-units%2Fpartitioning%2Fmethods-are-with-self-type.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcodegen-units%2Fpartitioning%2Fmethods-are-with-self-type.rs?ref=3ea62cb5d19846b44172d861ae231c8c09322800", "patch": "@@ -3,7 +3,7 @@\n // much sense at the moment.\n // ignore-test\n \n-// ignore-tidy-linelength\n+//\n // We specify -C incremental here because we want to test the partitioning for\n // incremental compilation\n // compile-flags:-Zprint-mono-items=lazy -Cincremental=tmp/partitioning-tests/methods-are-with-self-type"}, {"sha": "17c1fbb2f739b13fb723e1d97a9f65be8229389c", "filename": "src/test/codegen-units/partitioning/shared-generics.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fcodegen-units%2Fpartitioning%2Fshared-generics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fcodegen-units%2Fpartitioning%2Fshared-generics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcodegen-units%2Fpartitioning%2Fshared-generics.rs?ref=3ea62cb5d19846b44172d861ae231c8c09322800", "patch": "@@ -1,4 +1,4 @@\n-// ignore-tidy-linelength\n+//\n // no-prefer-dynamic\n // NOTE: We always compile this test with -Copt-level=0 because higher opt-levels\n //       prevent drop-glue from participating in share-generics."}, {"sha": "f6ae46b0551c28fd76cf7fa76d8541e02909ed5f", "filename": "src/test/codegen-units/partitioning/vtable-through-const.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fcodegen-units%2Fpartitioning%2Fvtable-through-const.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fcodegen-units%2Fpartitioning%2Fvtable-through-const.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcodegen-units%2Fpartitioning%2Fvtable-through-const.rs?ref=3ea62cb5d19846b44172d861ae231c8c09322800", "patch": "@@ -1,4 +1,4 @@\n-// ignore-tidy-linelength\n+//\n \n // We specify -C incremental here because we want to test the partitioning for\n // incremental compilation"}, {"sha": "0f2cf5a761678efec8c1b45140826dd73e689dac", "filename": "src/test/codegen/align-enum.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fcodegen%2Falign-enum.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fcodegen%2Falign-enum.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcodegen%2Falign-enum.rs?ref=3ea62cb5d19846b44172d861ae231c8c09322800", "patch": "@@ -1,5 +1,5 @@\n // compile-flags: -C no-prepopulate-passes -Z mir-opt-level=0\n-// ignore-tidy-linelength\n+//\n \n #![crate_type = \"lib\"]\n "}, {"sha": "82eec67af0fac24a8d49850cb22741caf92bde8f", "filename": "src/test/codegen/align-struct.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fcodegen%2Falign-struct.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fcodegen%2Falign-struct.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcodegen%2Falign-struct.rs?ref=3ea62cb5d19846b44172d861ae231c8c09322800", "patch": "@@ -1,5 +1,5 @@\n // compile-flags: -C no-prepopulate-passes -Z mir-opt-level=0\n-// ignore-tidy-linelength\n+//\n \n #![crate_type = \"lib\"]\n "}, {"sha": "2b8c0dfc229a313a8aa9b4f4afc0c1ecab5cf201", "filename": "src/test/codegen/async-fn-debug-msvc.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fcodegen%2Fasync-fn-debug-msvc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fcodegen%2Fasync-fn-debug-msvc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcodegen%2Fasync-fn-debug-msvc.rs?ref=3ea62cb5d19846b44172d861ae231c8c09322800", "patch": "@@ -3,7 +3,7 @@\n //  - The generator types and variants are marked artificial\n //  - Captured vars from the source are not marked artificial\n //\n-// ignore-tidy-linelength\n+//\n // compile-flags: -C debuginfo=2 --edition=2018\n // only-msvc\n "}, {"sha": "e9b774b48c3e76aed81185d5f33e18848a673ed0", "filename": "src/test/codegen/async-fn-debug.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fcodegen%2Fasync-fn-debug.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fcodegen%2Fasync-fn-debug.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcodegen%2Fasync-fn-debug.rs?ref=3ea62cb5d19846b44172d861ae231c8c09322800", "patch": "@@ -3,7 +3,7 @@\n //  - The generator types and variants are marked artificial\n //  - Captured vars from the source are not marked artificial\n //\n-// ignore-tidy-linelength\n+//\n // compile-flags: -C debuginfo=2 --edition=2018\n // ignore-msvc\n "}, {"sha": "e038ed704513d900656259f6f1aa77f8a15f5d15", "filename": "src/test/codegen/c-variadic.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fcodegen%2Fc-variadic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fcodegen%2Fc-variadic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcodegen%2Fc-variadic.rs?ref=3ea62cb5d19846b44172d861ae231c8c09322800", "patch": "@@ -1,6 +1,6 @@\n // ignore-wasm32-bare compiled with panic=abort by default\n // compile-flags: -C no-prepopulate-passes\n-// ignore-tidy-linelength\n+//\n \n #![crate_type = \"lib\"]\n #![feature(c_variadic)]"}, {"sha": "3aab4bea3d042530b51ccca414abe8093ddb3d3e", "filename": "src/test/codegen/consts.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fcodegen%2Fconsts.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fcodegen%2Fconsts.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcodegen%2Fconsts.rs?ref=3ea62cb5d19846b44172d861ae231c8c09322800", "patch": "@@ -1,5 +1,5 @@\n // compile-flags: -C no-prepopulate-passes\n-// ignore-tidy-linelength\n+//\n \n #![crate_type = \"lib\"]\n "}, {"sha": "3661be046d0f7bf581df4afd99795df6ce102107", "filename": "src/test/codegen/debug-compile-unit-path.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fcodegen%2Fdebug-compile-unit-path.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fcodegen%2Fdebug-compile-unit-path.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcodegen%2Fdebug-compile-unit-path.rs?ref=3ea62cb5d19846b44172d861ae231c8c09322800", "patch": "@@ -1,5 +1,5 @@\n // compile-flags: -g --remap-path-prefix={{cwd}}=/cwd/ --remap-path-prefix={{src-base}}=/base/\n-// ignore-tidy-linelength\n+//\n //\n // Ensure that we remap the compile unit directory and that we set it to the compilers current\n // working directory and not something else."}, {"sha": "1e369a2c4e6a7972d8edd43c290f5f8a97df6d31", "filename": "src/test/codegen/enum-debug-clike.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fcodegen%2Fenum-debug-clike.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fcodegen%2Fenum-debug-clike.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcodegen%2Fenum-debug-clike.rs?ref=3ea62cb5d19846b44172d861ae231c8c09322800", "patch": "@@ -1,7 +1,7 @@\n // This tests that debug info for \"c-like\" enums is properly emitted.\n // This is ignored for the fallback mode on MSVC due to problems with PDB.\n \n-// ignore-tidy-linelength\n+//\n // ignore-msvc\n \n // compile-flags: -g -C no-prepopulate-passes"}, {"sha": "9c72ad9d248a0d3b703148a179bf7e239c3f2212", "filename": "src/test/codegen/enum-debug-niche-2.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fcodegen%2Fenum-debug-niche-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fcodegen%2Fenum-debug-niche-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcodegen%2Fenum-debug-niche-2.rs?ref=3ea62cb5d19846b44172d861ae231c8c09322800", "patch": "@@ -1,7 +1,7 @@\n // This tests that optimized enum debug info accurately reflects the enum layout.\n // This is ignored for the fallback mode on MSVC due to problems with PDB.\n \n-// ignore-tidy-linelength\n+//\n // ignore-msvc\n \n // compile-flags: -g -C no-prepopulate-passes"}, {"sha": "f936f90960346004627318ef2ac216f9aed3bab4", "filename": "src/test/codegen/function-arguments.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fcodegen%2Ffunction-arguments.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fcodegen%2Ffunction-arguments.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcodegen%2Ffunction-arguments.rs?ref=3ea62cb5d19846b44172d861ae231c8c09322800", "patch": "@@ -1,5 +1,5 @@\n // compile-flags: -O -C no-prepopulate-passes\n-// ignore-tidy-linelength\n+//\n // min-system-llvm-version: 12.0\n \n #![crate_type = \"lib\"]"}, {"sha": "856b67bf9df938a8a50f1248f69f8905079751ca", "filename": "src/test/codegen/gdb_debug_script_load.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fcodegen%2Fgdb_debug_script_load.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fcodegen%2Fgdb_debug_script_load.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcodegen%2Fgdb_debug_script_load.rs?ref=3ea62cb5d19846b44172d861ae231c8c09322800", "patch": "@@ -1,4 +1,4 @@\n-// ignore-tidy-linelength\n+//\n // ignore-windows\n // ignore-macos\n // ignore-wasm"}, {"sha": "4f8a320ee9b17944b274067fb3f5466b190d5f84", "filename": "src/test/codegen/generator-debug-msvc.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fcodegen%2Fgenerator-debug-msvc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fcodegen%2Fgenerator-debug-msvc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcodegen%2Fgenerator-debug-msvc.rs?ref=3ea62cb5d19846b44172d861ae231c8c09322800", "patch": "@@ -3,7 +3,7 @@\n //  - The generator types and variants are marked artificial\n //  - Captured vars from the source are not marked artificial\n //\n-// ignore-tidy-linelength\n+//\n // compile-flags: -C debuginfo=2\n // only-msvc\n "}, {"sha": "86ac6db702ab9ed4fee9a2cff6f5cdb40e062564", "filename": "src/test/codegen/generator-debug.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fcodegen%2Fgenerator-debug.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fcodegen%2Fgenerator-debug.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcodegen%2Fgenerator-debug.rs?ref=3ea62cb5d19846b44172d861ae231c8c09322800", "patch": "@@ -3,7 +3,7 @@\n //  - The generator types and variants are marked artificial\n //  - Captured vars from the source are not marked artificial\n //\n-// ignore-tidy-linelength\n+//\n // compile-flags: -C debuginfo=2 --edition=2018\n // ignore-msvc\n "}, {"sha": "5b230361f397146cc37013f25e51ecc64abe2eb6", "filename": "src/test/codegen/inline-debuginfo.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fcodegen%2Finline-debuginfo.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fcodegen%2Finline-debuginfo.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcodegen%2Finline-debuginfo.rs?ref=3ea62cb5d19846b44172d861ae231c8c09322800", "patch": "@@ -1,6 +1,6 @@\n #![crate_type=\"rlib\"]\n // compile-flags: -Copt-level=3 -g\n-// ignore-tidy-linelength\n+//\n \n #[no_mangle]\n #[inline(always)]"}, {"sha": "b26076e7a7bfadae4283d5357a1bb569b1803fee", "filename": "src/test/codegen/instrument-mcount.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fcodegen%2Finstrument-mcount.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fcodegen%2Finstrument-mcount.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcodegen%2Finstrument-mcount.rs?ref=3ea62cb5d19846b44172d861ae231c8c09322800", "patch": "@@ -1,4 +1,4 @@\n-// ignore-tidy-linelength\n+//\n // compile-flags: -Z instrument-mcount\n \n #![crate_type = \"lib\"]"}, {"sha": "1a3923f1bb1ab7b51497a471ab7f4c3d83e03d0c", "filename": "src/test/codegen/issue-44056-macos-tls-align.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fcodegen%2Fissue-44056-macos-tls-align.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fcodegen%2Fissue-44056-macos-tls-align.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcodegen%2Fissue-44056-macos-tls-align.rs?ref=3ea62cb5d19846b44172d861ae231c8c09322800", "patch": "@@ -1,4 +1,4 @@\n-// ignore-tidy-linelength\n+//\n // only-macos\n // no-system-llvm\n // compile-flags: -O"}, {"sha": "dfa7803d4f2f1419a9d2e38e1d44aacc94f3ff46", "filename": "src/test/codegen/packed.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fcodegen%2Fpacked.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fcodegen%2Fpacked.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcodegen%2Fpacked.rs?ref=3ea62cb5d19846b44172d861ae231c8c09322800", "patch": "@@ -1,4 +1,4 @@\n-// ignore-tidy-linelength\n+//\n // compile-flags: -O -C no-prepopulate-passes\n \n #![crate_type = \"lib\"]"}, {"sha": "887915955b59410c511626fcd8d8fcd74cea35f9", "filename": "src/test/codegen/remap_path_prefix/auxiliary/remap_path_prefix_aux.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fcodegen%2Fremap_path_prefix%2Fauxiliary%2Fremap_path_prefix_aux.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fcodegen%2Fremap_path_prefix%2Fauxiliary%2Fremap_path_prefix_aux.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcodegen%2Fremap_path_prefix%2Fauxiliary%2Fremap_path_prefix_aux.rs?ref=3ea62cb5d19846b44172d861ae231c8c09322800", "patch": "@@ -1,4 +1,4 @@\n-// ignore-tidy-linelength\n+//\n \n // compile-flags: -g  --remap-path-prefix={{cwd}}=/the/aux-cwd --remap-path-prefix={{src-base}}/remap_path_prefix/auxiliary=/the/aux-src\n "}, {"sha": "59092dbf63764b15e682bde1ae809d4c9c0ce22c", "filename": "src/test/codegen/remap_path_prefix/auxiliary/xcrate-generic.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fcodegen%2Fremap_path_prefix%2Fauxiliary%2Fxcrate-generic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fcodegen%2Fremap_path_prefix%2Fauxiliary%2Fxcrate-generic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcodegen%2Fremap_path_prefix%2Fauxiliary%2Fxcrate-generic.rs?ref=3ea62cb5d19846b44172d861ae231c8c09322800", "patch": "@@ -1,4 +1,4 @@\n-// ignore-tidy-linelength\n+//\n // compile-flags: -g  --remap-path-prefix={{cwd}}=/the/aux-cwd --remap-path-prefix={{src-base}}/remap_path_prefix/auxiliary=/the/aux-src\n \n #![crate_type = \"lib\"]"}, {"sha": "c2d01c7fec2311047c6c3daf43ba76e545fa969b", "filename": "src/test/codegen/remap_path_prefix/main.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fcodegen%2Fremap_path_prefix%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fcodegen%2Fremap_path_prefix%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcodegen%2Fremap_path_prefix%2Fmain.rs?ref=3ea62cb5d19846b44172d861ae231c8c09322800", "patch": "@@ -1,5 +1,5 @@\n // ignore-windows\n-// ignore-tidy-linelength\n+//\n \n // compile-flags: -g  -C no-prepopulate-passes --remap-path-prefix={{cwd}}=/the/cwd --remap-path-prefix={{src-base}}=/the/src\n // aux-build:remap_path_prefix_aux.rs"}, {"sha": "9e904fc82ab4190c9ff96f64b131bc9cc3e3a048", "filename": "src/test/codegen/repeat-trusted-len.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fcodegen%2Frepeat-trusted-len.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fcodegen%2Frepeat-trusted-len.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcodegen%2Frepeat-trusted-len.rs?ref=3ea62cb5d19846b44172d861ae231c8c09322800", "patch": "@@ -1,5 +1,5 @@\n // compile-flags: -O\n-// ignore-tidy-linelength\n+//\n \n #![crate_type = \"lib\"]\n "}, {"sha": "5c3bcc28878ee31c029fb42d1ac3915aee68ef5b", "filename": "src/test/codegen/repr-transparent-aggregates-1.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fcodegen%2Frepr-transparent-aggregates-1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fcodegen%2Frepr-transparent-aggregates-1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcodegen%2Frepr-transparent-aggregates-1.rs?ref=3ea62cb5d19846b44172d861ae231c8c09322800", "patch": "@@ -1,5 +1,5 @@\n // compile-flags: -C no-prepopulate-passes\n-// ignore-tidy-linelength\n+//\n \n // min-system-llvm-version: 12.0\n // ignore-arm"}, {"sha": "429d760b4aa04cf4f627ecc67a11350cb8c3fcff", "filename": "src/test/codegen/repr-transparent-aggregates-2.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fcodegen%2Frepr-transparent-aggregates-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fcodegen%2Frepr-transparent-aggregates-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcodegen%2Frepr-transparent-aggregates-2.rs?ref=3ea62cb5d19846b44172d861ae231c8c09322800", "patch": "@@ -1,5 +1,5 @@\n // compile-flags: -C no-prepopulate-passes\n-// ignore-tidy-linelength\n+//\n \n // min-system-llvm-version: 12.0\n // ignore-aarch64"}, {"sha": "21176ac0e7a231774e55d037c19462e80e6ba690", "filename": "src/test/codegen/repr-transparent-aggregates-3.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fcodegen%2Frepr-transparent-aggregates-3.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fcodegen%2Frepr-transparent-aggregates-3.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcodegen%2Frepr-transparent-aggregates-3.rs?ref=3ea62cb5d19846b44172d861ae231c8c09322800", "patch": "@@ -1,5 +1,5 @@\n // compile-flags: -C no-prepopulate-passes\n-// ignore-tidy-linelength\n+//\n \n // min-system-llvm-version: 12.0\n // only-mips64"}, {"sha": "693f0d99c4fff04c6503386dc0768f7fc7cd29c4", "filename": "src/test/codegen/riscv-abi/riscv64-lp64-lp64f-lp64d-abi.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fcodegen%2Friscv-abi%2Friscv64-lp64-lp64f-lp64d-abi.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fcodegen%2Friscv-abi%2Friscv64-lp64-lp64f-lp64d-abi.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcodegen%2Friscv-abi%2Friscv64-lp64-lp64f-lp64d-abi.rs?ref=3ea62cb5d19846b44172d861ae231c8c09322800", "patch": "@@ -1,4 +1,4 @@\n-// ignore-tidy-linelength\n+//\n // compile-flags: -C no-prepopulate-passes\n // only-riscv64\n // only-linux"}, {"sha": "1555acadfbcca67a969307638a367fd0845b5d1b", "filename": "src/test/codegen/riscv-abi/riscv64-lp64d-abi.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fcodegen%2Friscv-abi%2Friscv64-lp64d-abi.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fcodegen%2Friscv-abi%2Friscv64-lp64d-abi.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcodegen%2Friscv-abi%2Friscv64-lp64d-abi.rs?ref=3ea62cb5d19846b44172d861ae231c8c09322800", "patch": "@@ -1,4 +1,4 @@\n-// ignore-tidy-linelength\n+//\n // compile-flags: -C no-prepopulate-passes\n // only-riscv64\n // only-linux"}, {"sha": "f08fabed421d5c97cb9e4a67db12915e5655e6f3", "filename": "src/test/codegen/riscv-abi/riscv64-lp64f-lp64d-abi.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fcodegen%2Friscv-abi%2Friscv64-lp64f-lp64d-abi.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fcodegen%2Friscv-abi%2Friscv64-lp64f-lp64d-abi.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcodegen%2Friscv-abi%2Friscv64-lp64f-lp64d-abi.rs?ref=3ea62cb5d19846b44172d861ae231c8c09322800", "patch": "@@ -1,4 +1,4 @@\n-// ignore-tidy-linelength\n+//\n // compile-flags: -C no-prepopulate-passes\n // only-riscv64\n // only-linux"}, {"sha": "6fb0ceb4025b5e26c1a31b9c141ea72bd75093d9", "filename": "src/test/codegen/simd-intrinsic/simd-intrinsic-generic-arithmetic-saturating.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fcodegen%2Fsimd-intrinsic%2Fsimd-intrinsic-generic-arithmetic-saturating.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fcodegen%2Fsimd-intrinsic%2Fsimd-intrinsic-generic-arithmetic-saturating.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcodegen%2Fsimd-intrinsic%2Fsimd-intrinsic-generic-arithmetic-saturating.rs?ref=3ea62cb5d19846b44172d861ae231c8c09322800", "patch": "@@ -1,5 +1,5 @@\n // compile-flags: -C no-prepopulate-passes\n-// ignore-tidy-linelength\n+//\n \n #![crate_type = \"lib\"]\n "}, {"sha": "4a98d797b526b1fe448c766c3d43690a6ed645c8", "filename": "src/test/codegen/simd-intrinsic/simd-intrinsic-generic-bitmask.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fcodegen%2Fsimd-intrinsic%2Fsimd-intrinsic-generic-bitmask.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fcodegen%2Fsimd-intrinsic%2Fsimd-intrinsic-generic-bitmask.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcodegen%2Fsimd-intrinsic%2Fsimd-intrinsic-generic-bitmask.rs?ref=3ea62cb5d19846b44172d861ae231c8c09322800", "patch": "@@ -1,5 +1,5 @@\n // compile-flags: -C no-prepopulate-passes\n-// ignore-tidy-linelength\n+//\n \n #![crate_type = \"lib\"]\n "}, {"sha": "e2e0fc16dfa94b979defd6bdd3ccb05a3916e341", "filename": "src/test/codegen/simd-intrinsic/simd-intrinsic-generic-gather.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fcodegen%2Fsimd-intrinsic%2Fsimd-intrinsic-generic-gather.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fcodegen%2Fsimd-intrinsic%2Fsimd-intrinsic-generic-gather.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcodegen%2Fsimd-intrinsic%2Fsimd-intrinsic-generic-gather.rs?ref=3ea62cb5d19846b44172d861ae231c8c09322800", "patch": "@@ -1,4 +1,4 @@\n-// ignore-tidy-linelength\n+//\n \n // compile-flags: -C no-prepopulate-passes\n "}, {"sha": "050a0e5b42620a9339fd4d324d227e1925f2fce0", "filename": "src/test/codegen/simd-intrinsic/simd-intrinsic-generic-scatter.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fcodegen%2Fsimd-intrinsic%2Fsimd-intrinsic-generic-scatter.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fcodegen%2Fsimd-intrinsic%2Fsimd-intrinsic-generic-scatter.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcodegen%2Fsimd-intrinsic%2Fsimd-intrinsic-generic-scatter.rs?ref=3ea62cb5d19846b44172d861ae231c8c09322800", "patch": "@@ -1,4 +1,4 @@\n-// ignore-tidy-linelength\n+//\n \n // compile-flags: -C no-prepopulate-passes\n "}, {"sha": "7d9b0d2a77bc1b6af021a156424c1863fa9aa368", "filename": "src/test/codegen/simd-intrinsic/simd-intrinsic-transmute-array.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fcodegen%2Fsimd-intrinsic%2Fsimd-intrinsic-transmute-array.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fcodegen%2Fsimd-intrinsic%2Fsimd-intrinsic-transmute-array.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcodegen%2Fsimd-intrinsic%2Fsimd-intrinsic-transmute-array.rs?ref=3ea62cb5d19846b44172d861ae231c8c09322800", "patch": "@@ -1,4 +1,4 @@\n-// ignore-tidy-linelength\n+//\n // compile-flags: -C no-prepopulate-passes\n \n #![crate_type = \"lib\"]"}, {"sha": "17f051a5bce0aaa24bc2a2f7df63729421bb2913", "filename": "src/test/codegen/stores.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fcodegen%2Fstores.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fcodegen%2Fstores.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcodegen%2Fstores.rs?ref=3ea62cb5d19846b44172d861ae231c8c09322800", "patch": "@@ -1,5 +1,5 @@\n // compile-flags: -C no-prepopulate-passes\n-// ignore-tidy-linelength\n+//\n \n #![crate_type = \"lib\"]\n "}, {"sha": "c043eceb5cd12f26499acf27da1efc00facf555a", "filename": "src/test/codegen/target-cpu-on-functions.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fcodegen%2Ftarget-cpu-on-functions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fcodegen%2Ftarget-cpu-on-functions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcodegen%2Ftarget-cpu-on-functions.rs?ref=3ea62cb5d19846b44172d861ae231c8c09322800", "patch": "@@ -2,7 +2,7 @@\n // \"target-cpu\" attribute in LLVM.\n \n // no-prefer-dynamic\n-// ignore-tidy-linelength\n+//\n // compile-flags: -C no-prepopulate-passes -C panic=abort -C linker-plugin-lto -Cpasses=name-anon-globals\n \n #![crate_type = \"staticlib\"]"}, {"sha": "ed8dc0e93837795039c643f1a40c58b97dad74e9", "filename": "src/test/codegen/tune-cpu-on-functions.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fcodegen%2Ftune-cpu-on-functions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fcodegen%2Ftune-cpu-on-functions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcodegen%2Ftune-cpu-on-functions.rs?ref=3ea62cb5d19846b44172d861ae231c8c09322800", "patch": "@@ -2,7 +2,7 @@\n // \"tune-cpu\" attribute in LLVM.\n \n // no-prefer-dynamic\n-// ignore-tidy-linelength\n+//\n // compile-flags: -C no-prepopulate-passes -C panic=abort -C linker-plugin-lto -Cpasses=name-anon-globals -Z tune-cpu=generic\n \n #![crate_type = \"staticlib\"]"}, {"sha": "f3e465dc652d408028cfa1686c950292d79de14a", "filename": "src/test/debuginfo/borrowed-enum.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fdebuginfo%2Fborrowed-enum.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fdebuginfo%2Fborrowed-enum.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Fborrowed-enum.rs?ref=3ea62cb5d19846b44172d861ae231c8c09322800", "patch": "@@ -1,5 +1,3 @@\n-// ignore-tidy-linelength\n-\n // Require a gdb or lldb that can read DW_TAG_variant_part.\n // min-gdb-version: 8.2\n // rust-lldb"}, {"sha": "155088c61fe3133b16a246a7beaddded0cf41b62", "filename": "src/test/debuginfo/boxed-struct.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fdebuginfo%2Fboxed-struct.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fdebuginfo%2Fboxed-struct.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Fboxed-struct.rs?ref=3ea62cb5d19846b44172d861ae231c8c09322800", "patch": "@@ -1,5 +1,3 @@\n-// ignore-tidy-linelength\n-\n // min-lldb-version: 310\n \n // compile-flags:-g"}, {"sha": "b417567dcfec6242dfe255c769cc56906a03c3ce", "filename": "src/test/debuginfo/by-value-non-immediate-argument.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fdebuginfo%2Fby-value-non-immediate-argument.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fdebuginfo%2Fby-value-non-immediate-argument.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Fby-value-non-immediate-argument.rs?ref=3ea62cb5d19846b44172d861ae231c8c09322800", "patch": "@@ -1,4 +1,3 @@\n-// ignore-tidy-linelength\n // ignore-test // Test temporarily ignored due to debuginfo tests being disabled, see PR 47155\n // min-lldb-version: 310\n "}, {"sha": "2ed49de58cd23248faac01ca62f67db16a8c705e", "filename": "src/test/debuginfo/c-style-enum-in-composite.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fdebuginfo%2Fc-style-enum-in-composite.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fdebuginfo%2Fc-style-enum-in-composite.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Fc-style-enum-in-composite.rs?ref=3ea62cb5d19846b44172d861ae231c8c09322800", "patch": "@@ -1,4 +1,3 @@\n-// ignore-tidy-linelength\n // min-lldb-version: 310\n \n // compile-flags:-g"}, {"sha": "dce34fc0dcf5e4ed49d90bdf40588cc64bc8b2f3", "filename": "src/test/debuginfo/c-style-enum.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fdebuginfo%2Fc-style-enum.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fdebuginfo%2Fc-style-enum.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Fc-style-enum.rs?ref=3ea62cb5d19846b44172d861ae231c8c09322800", "patch": "@@ -1,5 +1,3 @@\n-// ignore-tidy-linelength\n-\n // ignore-aarch64\n // ignore-gdb // Test temporarily ignored due to debuginfo tests being disabled, see PR 47155\n // min-lldb-version: 310"}, {"sha": "1532c83dfac3a849c99578b202eca7d945425ab3", "filename": "src/test/debuginfo/destructured-for-loop-variable.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fdebuginfo%2Fdestructured-for-loop-variable.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fdebuginfo%2Fdestructured-for-loop-variable.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Fdestructured-for-loop-variable.rs?ref=3ea62cb5d19846b44172d861ae231c8c09322800", "patch": "@@ -1,5 +1,3 @@\n-// ignore-tidy-linelength\n-\n // min-lldb-version: 310\n \n // This fails on lldb 6.0.1 on x86-64 Fedora 28; so mark it macOS-only"}, {"sha": "0d94cd224ec09276d4c4eaf2f6b3054f68a81834", "filename": "src/test/debuginfo/evec-in-struct.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fdebuginfo%2Fevec-in-struct.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fdebuginfo%2Fevec-in-struct.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Fevec-in-struct.rs?ref=3ea62cb5d19846b44172d861ae231c8c09322800", "patch": "@@ -1,5 +1,3 @@\n-// ignore-tidy-linelength\n-\n // min-lldb-version: 310\n \n // compile-flags:-g"}, {"sha": "dea1339517b468738b57f936e269e7230e804d0f", "filename": "src/test/debuginfo/function-arg-initialization.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fdebuginfo%2Ffunction-arg-initialization.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fdebuginfo%2Ffunction-arg-initialization.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Ffunction-arg-initialization.rs?ref=3ea62cb5d19846b44172d861ae231c8c09322800", "patch": "@@ -1,4 +1,3 @@\n-// ignore-tidy-linelength\n // ignore-test // Test temporarily ignored due to debuginfo tests being disabled, see PR 47155\n // min-lldb-version: 310\n "}, {"sha": "3314f0a4e43c50ba23756c85fc3aef3729904995", "filename": "src/test/debuginfo/gdb-pretty-struct-and-enums.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fdebuginfo%2Fgdb-pretty-struct-and-enums.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fdebuginfo%2Fgdb-pretty-struct-and-enums.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Fgdb-pretty-struct-and-enums.rs?ref=3ea62cb5d19846b44172d861ae231c8c09322800", "patch": "@@ -1,4 +1,3 @@\n-// ignore-tidy-linelength\n // ignore-lldb\n // ignore-android: FIXME(#10381)\n // min-gdb-version: 8.1"}, {"sha": "b65471011fd2af0dce3d609b955e7649f1f73b2c", "filename": "src/test/debuginfo/generator-objects.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fdebuginfo%2Fgenerator-objects.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fdebuginfo%2Fgenerator-objects.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Fgenerator-objects.rs?ref=3ea62cb5d19846b44172d861ae231c8c09322800", "patch": "@@ -1,5 +1,3 @@\n-// ignore-tidy-linelength\n-\n // Require a gdb that can read DW_TAG_variant_part.\n // min-gdb-version: 8.2\n "}, {"sha": "85fe8ac08f3c48241b57ef7bf8f5ef3992a6a7dc", "filename": "src/test/debuginfo/generic-method-on-generic-struct.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fdebuginfo%2Fgeneric-method-on-generic-struct.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fdebuginfo%2Fgeneric-method-on-generic-struct.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Fgeneric-method-on-generic-struct.rs?ref=3ea62cb5d19846b44172d861ae231c8c09322800", "patch": "@@ -1,5 +1,3 @@\n-// ignore-tidy-linelength\n-\n // compile-flags:-g\n \n // Some versions of the non-rust-enabled LLDB print the wrong generic"}, {"sha": "764330ae27f5dadeb580586c46ce5cbcf159b0f1", "filename": "src/test/debuginfo/generic-struct-style-enum.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fdebuginfo%2Fgeneric-struct-style-enum.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fdebuginfo%2Fgeneric-struct-style-enum.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Fgeneric-struct-style-enum.rs?ref=3ea62cb5d19846b44172d861ae231c8c09322800", "patch": "@@ -1,4 +1,3 @@\n-// ignore-tidy-linelength\n // min-lldb-version: 310\n \n // Require a gdb that can read DW_TAG_variant_part."}, {"sha": "170a610c621c035ddc44ce36c6fad533e2372858", "filename": "src/test/debuginfo/generic-struct.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fdebuginfo%2Fgeneric-struct.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fdebuginfo%2Fgeneric-struct.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Fgeneric-struct.rs?ref=3ea62cb5d19846b44172d861ae231c8c09322800", "patch": "@@ -1,5 +1,3 @@\n-// ignore-tidy-linelength\n-\n // Some versions of the non-rust-enabled LLDB print the wrong generic\n // parameter type names in this test.\n // rust-lldb"}, {"sha": "60362e54e7dbb08badd4d50148378ada1a21acc1", "filename": "src/test/debuginfo/generic-tuple-style-enum.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fdebuginfo%2Fgeneric-tuple-style-enum.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fdebuginfo%2Fgeneric-tuple-style-enum.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Fgeneric-tuple-style-enum.rs?ref=3ea62cb5d19846b44172d861ae231c8c09322800", "patch": "@@ -1,5 +1,3 @@\n-// ignore-tidy-linelength\n-\n // Require a gdb or lldb that can read DW_TAG_variant_part.\n // min-gdb-version: 8.2\n // rust-lldb"}, {"sha": "a68e4c0a5565b1de08f8d67efab21e8d50b8d9ab", "filename": "src/test/debuginfo/issue-57822.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fdebuginfo%2Fissue-57822.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fdebuginfo%2Fissue-57822.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Fissue-57822.rs?ref=3ea62cb5d19846b44172d861ae231c8c09322800", "patch": "@@ -3,7 +3,6 @@\n \n // Require a gdb that can read DW_TAG_variant_part.\n // min-gdb-version: 8.2\n-// ignore-tidy-linelength\n \n // compile-flags:-g\n "}, {"sha": "80f4c2e1150ec50d89b6b895569eb1fcdfb66f85", "filename": "src/test/debuginfo/method-on-enum.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fdebuginfo%2Fmethod-on-enum.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fdebuginfo%2Fmethod-on-enum.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Fmethod-on-enum.rs?ref=3ea62cb5d19846b44172d861ae231c8c09322800", "patch": "@@ -1,4 +1,3 @@\n-// ignore-tidy-linelength\n // min-lldb-version: 310\n // ignore-test // Test temporarily ignored due to debuginfo tests being disabled, see PR 47155\n "}, {"sha": "04d08b9e6a5cd107a17c896d571358b618555ccb", "filename": "src/test/debuginfo/option-like-enum.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fdebuginfo%2Foption-like-enum.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fdebuginfo%2Foption-like-enum.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Foption-like-enum.rs?ref=3ea62cb5d19846b44172d861ae231c8c09322800", "patch": "@@ -1,4 +1,3 @@\n-// ignore-tidy-linelength\n // ignore-test // Test temporarily ignored due to debuginfo tests being disabled, see PR 47155\n \n // min-lldb-version: 310"}, {"sha": "196d85b4181f7b8b0c0b5ee0ba6897f3a0f7b2fa", "filename": "src/test/debuginfo/packed-struct-with-destructor.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fdebuginfo%2Fpacked-struct-with-destructor.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fdebuginfo%2Fpacked-struct-with-destructor.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Fpacked-struct-with-destructor.rs?ref=3ea62cb5d19846b44172d861ae231c8c09322800", "patch": "@@ -1,4 +1,3 @@\n-// ignore-tidy-linelength\n // min-lldb-version: 310\n \n // compile-flags:-g"}, {"sha": "7d1893a9431cdcf07356f5b3ba8de1da4c0646f0", "filename": "src/test/debuginfo/packed-struct.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fdebuginfo%2Fpacked-struct.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fdebuginfo%2Fpacked-struct.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Fpacked-struct.rs?ref=3ea62cb5d19846b44172d861ae231c8c09322800", "patch": "@@ -1,4 +1,3 @@\n-// ignore-tidy-linelength\n // min-lldb-version: 310\n // ignore-gdb-version: 7.11.90 - 7.12.9\n "}, {"sha": "93597aa7e235fb7cd64a63739f1db909f655e38f", "filename": "src/test/debuginfo/pretty-std-collections.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fdebuginfo%2Fpretty-std-collections.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fdebuginfo%2Fpretty-std-collections.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Fpretty-std-collections.rs?ref=3ea62cb5d19846b44172d861ae231c8c09322800", "patch": "@@ -1,4 +1,3 @@\n-// ignore-tidy-linelength\n // ignore-windows failing on win32 bot\n // ignore-freebsd: gdb package too new\n // ignore-android: FIXME(#10381)"}, {"sha": "b7bfe44b6ec44bd98a742728b74e0869400dd7ab", "filename": "src/test/debuginfo/simd.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fdebuginfo%2Fsimd.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fdebuginfo%2Fsimd.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Fsimd.rs?ref=3ea62cb5d19846b44172d861ae231c8c09322800", "patch": "@@ -1,6 +1,5 @@\n // Need a fix for LLDB first...\n // ignore-lldb\n-// ignore-tidy-linelength\n \n // FIXME: LLVM generates invalid debug info for variables requiring\n // dynamic stack realignment, which is the case on s390x for vector"}, {"sha": "aa3cf023a718dd1d176dfa236a8a4d9dcefe19e9", "filename": "src/test/debuginfo/simple-struct.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fdebuginfo%2Fsimple-struct.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fdebuginfo%2Fsimple-struct.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Fsimple-struct.rs?ref=3ea62cb5d19846b44172d861ae231c8c09322800", "patch": "@@ -1,5 +1,3 @@\n-// ignore-tidy-linelength\n-\n // min-lldb-version: 310\n // ignore-gdb // Test temporarily ignored due to debuginfo tests being disabled, see PR 47155\n "}, {"sha": "41d15af14ede6812a007322d0ca820ac1c6716c8", "filename": "src/test/debuginfo/struct-in-enum.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fdebuginfo%2Fstruct-in-enum.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fdebuginfo%2Fstruct-in-enum.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Fstruct-in-enum.rs?ref=3ea62cb5d19846b44172d861ae231c8c09322800", "patch": "@@ -1,4 +1,3 @@\n-// ignore-tidy-linelength\n // min-lldb-version: 310\n // ignore-gdb-version: 7.11.90 - 7.12.9\n // ignore-test // Test temporarily ignored due to debuginfo tests being disabled, see PR 47155"}, {"sha": "a9e7797ec700135504f312d233679a97a6cca124", "filename": "src/test/debuginfo/struct-in-struct.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fdebuginfo%2Fstruct-in-struct.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fdebuginfo%2Fstruct-in-struct.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Fstruct-in-struct.rs?ref=3ea62cb5d19846b44172d861ae231c8c09322800", "patch": "@@ -1,4 +1,3 @@\n-// ignore-tidy-linelength\n // min-lldb-version: 310\n \n // compile-flags:-g"}, {"sha": "3d819e3689887f6cdd2bc8a24ccacab9c74c8637", "filename": "src/test/debuginfo/struct-style-enum.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fdebuginfo%2Fstruct-style-enum.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fdebuginfo%2Fstruct-style-enum.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Fstruct-style-enum.rs?ref=3ea62cb5d19846b44172d861ae231c8c09322800", "patch": "@@ -1,5 +1,3 @@\n-// ignore-tidy-linelength\n-\n // Require a gdb or lldb that can read DW_TAG_variant_part.\n // min-gdb-version: 8.2\n // rust-lldb"}, {"sha": "4334cd9028b89046b397af8946d3beaa5ea0b251", "filename": "src/test/debuginfo/struct-with-destructor.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fdebuginfo%2Fstruct-with-destructor.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fdebuginfo%2Fstruct-with-destructor.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Fstruct-with-destructor.rs?ref=3ea62cb5d19846b44172d861ae231c8c09322800", "patch": "@@ -1,5 +1,3 @@\n-// ignore-tidy-linelength\n-\n // min-lldb-version: 310\n \n // compile-flags:-g"}, {"sha": "759eab8e8a0c212f5e32c61b4ca4d13bf3a376a0", "filename": "src/test/debuginfo/tuple-in-struct.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fdebuginfo%2Ftuple-in-struct.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fdebuginfo%2Ftuple-in-struct.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Ftuple-in-struct.rs?ref=3ea62cb5d19846b44172d861ae231c8c09322800", "patch": "@@ -1,5 +1,3 @@\n-// ignore-tidy-linelength\n-\n // min-lldb-version: 310\n \n // compile-flags:-g"}, {"sha": "b8702f970a3a3200ec7bb88c4cb56645fe990f5f", "filename": "src/test/debuginfo/tuple-struct.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fdebuginfo%2Ftuple-struct.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fdebuginfo%2Ftuple-struct.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Ftuple-struct.rs?ref=3ea62cb5d19846b44172d861ae231c8c09322800", "patch": "@@ -1,5 +1,3 @@\n-// ignore-tidy-linelength\n-\n // min-lldb-version: 310\n \n // compile-flags:-g"}, {"sha": "39ead172e651cea906d8479a45d08795472cb19d", "filename": "src/test/debuginfo/tuple-style-enum.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fdebuginfo%2Ftuple-style-enum.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fdebuginfo%2Ftuple-style-enum.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Ftuple-style-enum.rs?ref=3ea62cb5d19846b44172d861ae231c8c09322800", "patch": "@@ -1,5 +1,3 @@\n-// ignore-tidy-linelength\n-\n // Require a gdb or lldb that can read DW_TAG_variant_part.\n // min-gdb-version: 8.2\n // rust-lldb"}, {"sha": "cc4a4476d160e13d49ffb8a625ead39a35f24c9e", "filename": "src/test/debuginfo/type-names.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fdebuginfo%2Ftype-names.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fdebuginfo%2Ftype-names.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Ftype-names.rs?ref=3ea62cb5d19846b44172d861ae231c8c09322800", "patch": "@@ -1,4 +1,3 @@\n-// ignore-tidy-linelength\n // ignore-lldb\n // ignore-gdb // Test temporarily ignored due to debuginfo tests being disabled, see PR 47155\n "}, {"sha": "e109b1bf2aeaeac90b6e5749282c1f3a98bd7020", "filename": "src/test/debuginfo/vec-slices.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fdebuginfo%2Fvec-slices.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fdebuginfo%2Fvec-slices.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Fvec-slices.rs?ref=3ea62cb5d19846b44172d861ae231c8c09322800", "patch": "@@ -1,5 +1,3 @@\n-// ignore-tidy-linelength\n-\n // ignore-windows\n // ignore-gdb // Test temporarily ignored due to debuginfo tests being disabled, see PR 47155\n // min-lldb-version: 310"}, {"sha": "02221c4cf4a1f5574fa844ea6d927b1673b14e5a", "filename": "src/test/mir-opt/early_otherwise_branch_68867.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fmir-opt%2Fearly_otherwise_branch_68867.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fmir-opt%2Fearly_otherwise_branch_68867.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fearly_otherwise_branch_68867.rs?ref=3ea62cb5d19846b44172d861ae231c8c09322800", "patch": "@@ -1,4 +1,3 @@\n-// ignore-tidy-linelength\n // compile-flags: -Z mir-opt-level=4 -Zunsound-mir-opts\n \n // example from #68867"}, {"sha": "2893ee9ac334b1b1d771fabb22642d87012d4e49", "filename": "src/test/mir-opt/early_otherwise_branch_68867.try_sum.EarlyOtherwiseBranch.before-SimplifyBranches-final.after.diff", "status": "modified", "additions": 248, "deletions": 248, "changes": 496, "blob_url": "https://github.com/rust-lang/rust/blob/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fmir-opt%2Fearly_otherwise_branch_68867.try_sum.EarlyOtherwiseBranch.before-SimplifyBranches-final.after.diff", "raw_url": "https://github.com/rust-lang/rust/raw/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fmir-opt%2Fearly_otherwise_branch_68867.try_sum.EarlyOtherwiseBranch.before-SimplifyBranches-final.after.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fearly_otherwise_branch_68867.try_sum.EarlyOtherwiseBranch.before-SimplifyBranches-final.after.diff?ref=3ea62cb5d19846b44172d861ae231c8c09322800", "patch": "@@ -2,299 +2,299 @@\n + // MIR for `try_sum` after SimplifyBranches-final\n   \n   fn try_sum(_1: &ViewportPercentageLength, _2: &ViewportPercentageLength) -> Result<ViewportPercentageLength, ()> {\n-      debug x => _1;                       // in scope 0 at $DIR/early_otherwise_branch_68867.rs:18:5: 18:6\n-      debug other => _2;                   // in scope 0 at $DIR/early_otherwise_branch_68867.rs:19:5: 19:10\n-      let mut _0: std::result::Result<ViewportPercentageLength, ()>; // return place in scope 0 at $DIR/early_otherwise_branch_68867.rs:20:6: 20:42\n-      let mut _3: ViewportPercentageLength; // in scope 0 at $DIR/early_otherwise_branch_68867.rs:22:8: 28:6\n-      let mut _4: (&ViewportPercentageLength, &ViewportPercentageLength); // in scope 0 at $DIR/early_otherwise_branch_68867.rs:22:14: 22:24\n-      let mut _5: &ViewportPercentageLength; // in scope 0 at $DIR/early_otherwise_branch_68867.rs:22:15: 22:16\n-      let mut _6: &ViewportPercentageLength; // in scope 0 at $DIR/early_otherwise_branch_68867.rs:22:18: 22:23\n-      let mut _7: isize;                   // in scope 0 at $DIR/early_otherwise_branch_68867.rs:23:21: 23:30\n-      let mut _8: isize;                   // in scope 0 at $DIR/early_otherwise_branch_68867.rs:24:21: 24:30\n-      let mut _9: isize;                   // in scope 0 at $DIR/early_otherwise_branch_68867.rs:25:23: 25:34\n-      let mut _10: isize;                  // in scope 0 at $DIR/early_otherwise_branch_68867.rs:26:23: 26:34\n-      let mut _11: isize;                  // in scope 0 at $DIR/early_otherwise_branch_68867.rs:23:11: 23:18\n-      let _12: f32;                        // in scope 0 at $DIR/early_otherwise_branch_68867.rs:23:14: 23:17\n-      let _13: f32;                        // in scope 0 at $DIR/early_otherwise_branch_68867.rs:23:24: 23:29\n-      let mut _14: f32;                    // in scope 0 at $DIR/early_otherwise_branch_68867.rs:23:38: 23:49\n-      let mut _15: f32;                    // in scope 0 at $DIR/early_otherwise_branch_68867.rs:23:38: 23:41\n-      let mut _16: f32;                    // in scope 0 at $DIR/early_otherwise_branch_68867.rs:23:44: 23:49\n-      let _17: f32;                        // in scope 0 at $DIR/early_otherwise_branch_68867.rs:24:14: 24:17\n-      let _18: f32;                        // in scope 0 at $DIR/early_otherwise_branch_68867.rs:24:24: 24:29\n-      let mut _19: f32;                    // in scope 0 at $DIR/early_otherwise_branch_68867.rs:24:38: 24:49\n-      let mut _20: f32;                    // in scope 0 at $DIR/early_otherwise_branch_68867.rs:24:38: 24:41\n-      let mut _21: f32;                    // in scope 0 at $DIR/early_otherwise_branch_68867.rs:24:44: 24:49\n-      let _22: f32;                        // in scope 0 at $DIR/early_otherwise_branch_68867.rs:25:16: 25:19\n-      let _23: f32;                        // in scope 0 at $DIR/early_otherwise_branch_68867.rs:25:28: 25:33\n-      let mut _24: f32;                    // in scope 0 at $DIR/early_otherwise_branch_68867.rs:25:44: 25:55\n-      let mut _25: f32;                    // in scope 0 at $DIR/early_otherwise_branch_68867.rs:25:44: 25:47\n-      let mut _26: f32;                    // in scope 0 at $DIR/early_otherwise_branch_68867.rs:25:50: 25:55\n-      let _27: f32;                        // in scope 0 at $DIR/early_otherwise_branch_68867.rs:26:16: 26:19\n-      let _28: f32;                        // in scope 0 at $DIR/early_otherwise_branch_68867.rs:26:28: 26:33\n-      let mut _29: f32;                    // in scope 0 at $DIR/early_otherwise_branch_68867.rs:26:44: 26:55\n-      let mut _30: f32;                    // in scope 0 at $DIR/early_otherwise_branch_68867.rs:26:44: 26:47\n-      let mut _31: f32;                    // in scope 0 at $DIR/early_otherwise_branch_68867.rs:26:50: 26:55\n-      let mut _32: !;                      // in scope 0 at $DIR/early_otherwise_branch_68867.rs:27:14: 27:28\n-      let mut _33: ();                     // in scope 0 at $DIR/early_otherwise_branch_68867.rs:27:25: 27:27\n-+     let mut _34: isize;                  // in scope 0 at $DIR/early_otherwise_branch_68867.rs:23:21: 23:30\n-+     let mut _35: bool;                   // in scope 0 at $DIR/early_otherwise_branch_68867.rs:23:21: 23:30\n+      debug x => _1;                       // in scope 0 at $DIR/early_otherwise_branch_68867.rs:17:5: 17:6\n+      debug other => _2;                   // in scope 0 at $DIR/early_otherwise_branch_68867.rs:18:5: 18:10\n+      let mut _0: std::result::Result<ViewportPercentageLength, ()>; // return place in scope 0 at $DIR/early_otherwise_branch_68867.rs:19:6: 19:42\n+      let mut _3: ViewportPercentageLength; // in scope 0 at $DIR/early_otherwise_branch_68867.rs:21:8: 27:6\n+      let mut _4: (&ViewportPercentageLength, &ViewportPercentageLength); // in scope 0 at $DIR/early_otherwise_branch_68867.rs:21:14: 21:24\n+      let mut _5: &ViewportPercentageLength; // in scope 0 at $DIR/early_otherwise_branch_68867.rs:21:15: 21:16\n+      let mut _6: &ViewportPercentageLength; // in scope 0 at $DIR/early_otherwise_branch_68867.rs:21:18: 21:23\n+      let mut _7: isize;                   // in scope 0 at $DIR/early_otherwise_branch_68867.rs:22:21: 22:30\n+      let mut _8: isize;                   // in scope 0 at $DIR/early_otherwise_branch_68867.rs:23:21: 23:30\n+      let mut _9: isize;                   // in scope 0 at $DIR/early_otherwise_branch_68867.rs:24:23: 24:34\n+      let mut _10: isize;                  // in scope 0 at $DIR/early_otherwise_branch_68867.rs:25:23: 25:34\n+      let mut _11: isize;                  // in scope 0 at $DIR/early_otherwise_branch_68867.rs:22:11: 22:18\n+      let _12: f32;                        // in scope 0 at $DIR/early_otherwise_branch_68867.rs:22:14: 22:17\n+      let _13: f32;                        // in scope 0 at $DIR/early_otherwise_branch_68867.rs:22:24: 22:29\n+      let mut _14: f32;                    // in scope 0 at $DIR/early_otherwise_branch_68867.rs:22:38: 22:49\n+      let mut _15: f32;                    // in scope 0 at $DIR/early_otherwise_branch_68867.rs:22:38: 22:41\n+      let mut _16: f32;                    // in scope 0 at $DIR/early_otherwise_branch_68867.rs:22:44: 22:49\n+      let _17: f32;                        // in scope 0 at $DIR/early_otherwise_branch_68867.rs:23:14: 23:17\n+      let _18: f32;                        // in scope 0 at $DIR/early_otherwise_branch_68867.rs:23:24: 23:29\n+      let mut _19: f32;                    // in scope 0 at $DIR/early_otherwise_branch_68867.rs:23:38: 23:49\n+      let mut _20: f32;                    // in scope 0 at $DIR/early_otherwise_branch_68867.rs:23:38: 23:41\n+      let mut _21: f32;                    // in scope 0 at $DIR/early_otherwise_branch_68867.rs:23:44: 23:49\n+      let _22: f32;                        // in scope 0 at $DIR/early_otherwise_branch_68867.rs:24:16: 24:19\n+      let _23: f32;                        // in scope 0 at $DIR/early_otherwise_branch_68867.rs:24:28: 24:33\n+      let mut _24: f32;                    // in scope 0 at $DIR/early_otherwise_branch_68867.rs:24:44: 24:55\n+      let mut _25: f32;                    // in scope 0 at $DIR/early_otherwise_branch_68867.rs:24:44: 24:47\n+      let mut _26: f32;                    // in scope 0 at $DIR/early_otherwise_branch_68867.rs:24:50: 24:55\n+      let _27: f32;                        // in scope 0 at $DIR/early_otherwise_branch_68867.rs:25:16: 25:19\n+      let _28: f32;                        // in scope 0 at $DIR/early_otherwise_branch_68867.rs:25:28: 25:33\n+      let mut _29: f32;                    // in scope 0 at $DIR/early_otherwise_branch_68867.rs:25:44: 25:55\n+      let mut _30: f32;                    // in scope 0 at $DIR/early_otherwise_branch_68867.rs:25:44: 25:47\n+      let mut _31: f32;                    // in scope 0 at $DIR/early_otherwise_branch_68867.rs:25:50: 25:55\n+      let mut _32: !;                      // in scope 0 at $DIR/early_otherwise_branch_68867.rs:26:14: 26:28\n+      let mut _33: ();                     // in scope 0 at $DIR/early_otherwise_branch_68867.rs:26:25: 26:27\n++     let mut _34: isize;                  // in scope 0 at $DIR/early_otherwise_branch_68867.rs:22:21: 22:30\n++     let mut _35: bool;                   // in scope 0 at $DIR/early_otherwise_branch_68867.rs:22:21: 22:30\n       scope 1 {\n--         debug one => _12;                // in scope 1 at $DIR/early_otherwise_branch_68867.rs:23:14: 23:17\n--         debug other => _13;              // in scope 1 at $DIR/early_otherwise_branch_68867.rs:23:24: 23:29\n-+         debug one => _15;                // in scope 1 at $DIR/early_otherwise_branch_68867.rs:23:14: 23:17\n-+         debug other => _16;              // in scope 1 at $DIR/early_otherwise_branch_68867.rs:23:24: 23:29\n+-         debug one => _12;                // in scope 1 at $DIR/early_otherwise_branch_68867.rs:22:14: 22:17\n+-         debug other => _13;              // in scope 1 at $DIR/early_otherwise_branch_68867.rs:22:24: 22:29\n++         debug one => _15;                // in scope 1 at $DIR/early_otherwise_branch_68867.rs:22:14: 22:17\n++         debug other => _16;              // in scope 1 at $DIR/early_otherwise_branch_68867.rs:22:24: 22:29\n       }\n       scope 2 {\n--         debug one => _17;                // in scope 2 at $DIR/early_otherwise_branch_68867.rs:24:14: 24:17\n--         debug other => _18;              // in scope 2 at $DIR/early_otherwise_branch_68867.rs:24:24: 24:29\n-+         debug one => _20;                // in scope 2 at $DIR/early_otherwise_branch_68867.rs:24:14: 24:17\n-+         debug other => _21;              // in scope 2 at $DIR/early_otherwise_branch_68867.rs:24:24: 24:29\n+-         debug one => _17;                // in scope 2 at $DIR/early_otherwise_branch_68867.rs:23:14: 23:17\n+-         debug other => _18;              // in scope 2 at $DIR/early_otherwise_branch_68867.rs:23:24: 23:29\n++         debug one => _20;                // in scope 2 at $DIR/early_otherwise_branch_68867.rs:23:14: 23:17\n++         debug other => _21;              // in scope 2 at $DIR/early_otherwise_branch_68867.rs:23:24: 23:29\n       }\n       scope 3 {\n--         debug one => _22;                // in scope 3 at $DIR/early_otherwise_branch_68867.rs:25:16: 25:19\n--         debug other => _23;              // in scope 3 at $DIR/early_otherwise_branch_68867.rs:25:28: 25:33\n-+         debug one => _25;                // in scope 3 at $DIR/early_otherwise_branch_68867.rs:25:16: 25:19\n-+         debug other => _26;              // in scope 3 at $DIR/early_otherwise_branch_68867.rs:25:28: 25:33\n+-         debug one => _22;                // in scope 3 at $DIR/early_otherwise_branch_68867.rs:24:16: 24:19\n+-         debug other => _23;              // in scope 3 at $DIR/early_otherwise_branch_68867.rs:24:28: 24:33\n++         debug one => _25;                // in scope 3 at $DIR/early_otherwise_branch_68867.rs:24:16: 24:19\n++         debug other => _26;              // in scope 3 at $DIR/early_otherwise_branch_68867.rs:24:28: 24:33\n       }\n       scope 4 {\n--         debug one => _27;                // in scope 4 at $DIR/early_otherwise_branch_68867.rs:26:16: 26:19\n--         debug other => _28;              // in scope 4 at $DIR/early_otherwise_branch_68867.rs:26:28: 26:33\n-+         debug one => _30;                // in scope 4 at $DIR/early_otherwise_branch_68867.rs:26:16: 26:19\n-+         debug other => _31;              // in scope 4 at $DIR/early_otherwise_branch_68867.rs:26:28: 26:33\n+-         debug one => _27;                // in scope 4 at $DIR/early_otherwise_branch_68867.rs:25:16: 25:19\n+-         debug other => _28;              // in scope 4 at $DIR/early_otherwise_branch_68867.rs:25:28: 25:33\n++         debug one => _30;                // in scope 4 at $DIR/early_otherwise_branch_68867.rs:25:16: 25:19\n++         debug other => _31;              // in scope 4 at $DIR/early_otherwise_branch_68867.rs:25:28: 25:33\n       }\n   \n       bb0: {\n--         StorageLive(_3);                 // scope 0 at $DIR/early_otherwise_branch_68867.rs:22:8: 28:6\n--         StorageLive(_4);                 // scope 0 at $DIR/early_otherwise_branch_68867.rs:22:14: 22:24\n--         StorageLive(_5);                 // scope 0 at $DIR/early_otherwise_branch_68867.rs:22:15: 22:16\n--         _5 = _1;                         // scope 0 at $DIR/early_otherwise_branch_68867.rs:22:15: 22:16\n-+         nop;                             // scope 0 at $DIR/early_otherwise_branch_68867.rs:22:8: 28:6\n-+         nop;                             // scope 0 at $DIR/early_otherwise_branch_68867.rs:22:14: 22:24\n-+         nop;                             // scope 0 at $DIR/early_otherwise_branch_68867.rs:22:15: 22:16\n-+         (_4.0: &ViewportPercentageLength) = _1; // scope 0 at $DIR/early_otherwise_branch_68867.rs:22:15: 22:16\n-          StorageLive(_6);                 // scope 0 at $DIR/early_otherwise_branch_68867.rs:22:18: 22:23\n-          _6 = _2;                         // scope 0 at $DIR/early_otherwise_branch_68867.rs:22:18: 22:23\n--         (_4.0: &ViewportPercentageLength) = move _5; // scope 0 at $DIR/early_otherwise_branch_68867.rs:22:14: 22:24\n-+         nop;                             // scope 0 at $DIR/early_otherwise_branch_68867.rs:22:14: 22:24\n-          (_4.1: &ViewportPercentageLength) = move _6; // scope 0 at $DIR/early_otherwise_branch_68867.rs:22:14: 22:24\n-          StorageDead(_6);                 // scope 0 at $DIR/early_otherwise_branch_68867.rs:22:23: 22:24\n--         StorageDead(_5);                 // scope 0 at $DIR/early_otherwise_branch_68867.rs:22:23: 22:24\n-+         nop;                             // scope 0 at $DIR/early_otherwise_branch_68867.rs:22:23: 22:24\n-          _11 = discriminant((*(_4.0: &ViewportPercentageLength))); // scope 0 at $DIR/early_otherwise_branch_68867.rs:23:11: 23:18\n--         switchInt(move _11) -> [0_isize: bb1, 1_isize: bb3, 2_isize: bb4, 3_isize: bb5, otherwise: bb2]; // scope 0 at $DIR/early_otherwise_branch_68867.rs:23:11: 23:18\n-+         StorageLive(_34);                // scope 0 at $DIR/early_otherwise_branch_68867.rs:23:11: 23:18\n-+         _34 = discriminant((*(_4.1: &ViewportPercentageLength))); // scope 0 at $DIR/early_otherwise_branch_68867.rs:23:11: 23:18\n-+         StorageLive(_35);                // scope 0 at $DIR/early_otherwise_branch_68867.rs:23:11: 23:18\n-+         _35 = Ne(_34, _11);              // scope 0 at $DIR/early_otherwise_branch_68867.rs:23:11: 23:18\n-+         StorageDead(_34);                // scope 0 at $DIR/early_otherwise_branch_68867.rs:23:11: 23:18\n-+         switchInt(move _35) -> [false: bb7, otherwise: bb1]; // scope 0 at $DIR/early_otherwise_branch_68867.rs:23:11: 23:18\n+-         StorageLive(_3);                 // scope 0 at $DIR/early_otherwise_branch_68867.rs:21:8: 27:6\n+-         StorageLive(_4);                 // scope 0 at $DIR/early_otherwise_branch_68867.rs:21:14: 21:24\n+-         StorageLive(_5);                 // scope 0 at $DIR/early_otherwise_branch_68867.rs:21:15: 21:16\n+-         _5 = _1;                         // scope 0 at $DIR/early_otherwise_branch_68867.rs:21:15: 21:16\n++         nop;                             // scope 0 at $DIR/early_otherwise_branch_68867.rs:21:8: 27:6\n++         nop;                             // scope 0 at $DIR/early_otherwise_branch_68867.rs:21:14: 21:24\n++         nop;                             // scope 0 at $DIR/early_otherwise_branch_68867.rs:21:15: 21:16\n++         (_4.0: &ViewportPercentageLength) = _1; // scope 0 at $DIR/early_otherwise_branch_68867.rs:21:15: 21:16\n+          StorageLive(_6);                 // scope 0 at $DIR/early_otherwise_branch_68867.rs:21:18: 21:23\n+          _6 = _2;                         // scope 0 at $DIR/early_otherwise_branch_68867.rs:21:18: 21:23\n+-         (_4.0: &ViewportPercentageLength) = move _5; // scope 0 at $DIR/early_otherwise_branch_68867.rs:21:14: 21:24\n++         nop;                             // scope 0 at $DIR/early_otherwise_branch_68867.rs:21:14: 21:24\n+          (_4.1: &ViewportPercentageLength) = move _6; // scope 0 at $DIR/early_otherwise_branch_68867.rs:21:14: 21:24\n+          StorageDead(_6);                 // scope 0 at $DIR/early_otherwise_branch_68867.rs:21:23: 21:24\n+-         StorageDead(_5);                 // scope 0 at $DIR/early_otherwise_branch_68867.rs:21:23: 21:24\n++         nop;                             // scope 0 at $DIR/early_otherwise_branch_68867.rs:21:23: 21:24\n+          _11 = discriminant((*(_4.0: &ViewportPercentageLength))); // scope 0 at $DIR/early_otherwise_branch_68867.rs:22:11: 22:18\n+-         switchInt(move _11) -> [0_isize: bb1, 1_isize: bb3, 2_isize: bb4, 3_isize: bb5, otherwise: bb2]; // scope 0 at $DIR/early_otherwise_branch_68867.rs:22:11: 22:18\n++         StorageLive(_34);                // scope 0 at $DIR/early_otherwise_branch_68867.rs:22:11: 22:18\n++         _34 = discriminant((*(_4.1: &ViewportPercentageLength))); // scope 0 at $DIR/early_otherwise_branch_68867.rs:22:11: 22:18\n++         StorageLive(_35);                // scope 0 at $DIR/early_otherwise_branch_68867.rs:22:11: 22:18\n++         _35 = Ne(_34, _11);              // scope 0 at $DIR/early_otherwise_branch_68867.rs:22:11: 22:18\n++         StorageDead(_34);                // scope 0 at $DIR/early_otherwise_branch_68867.rs:22:11: 22:18\n++         switchInt(move _35) -> [false: bb7, otherwise: bb1]; // scope 0 at $DIR/early_otherwise_branch_68867.rs:22:11: 22:18\n       }\n   \n       bb1: {\n--         _7 = discriminant((*(_4.1: &ViewportPercentageLength))); // scope 0 at $DIR/early_otherwise_branch_68867.rs:23:21: 23:30\n--         switchInt(move _7) -> [0_isize: bb6, otherwise: bb2]; // scope 0 at $DIR/early_otherwise_branch_68867.rs:23:21: 23:30\n+-         _7 = discriminant((*(_4.1: &ViewportPercentageLength))); // scope 0 at $DIR/early_otherwise_branch_68867.rs:22:21: 22:30\n+-         switchInt(move _7) -> [0_isize: bb6, otherwise: bb2]; // scope 0 at $DIR/early_otherwise_branch_68867.rs:22:21: 22:30\n -     }\n - \n -     bb2: {\n-+         StorageDead(_35);                // scope 0 at $DIR/early_otherwise_branch_68867.rs:27:25: 27:27\n-          StorageLive(_33);                // scope 0 at $DIR/early_otherwise_branch_68867.rs:27:25: 27:27\n--         nop;                             // scope 0 at $DIR/early_otherwise_branch_68867.rs:27:21: 27:28\n-          discriminant(_0) = 1;            // scope 0 at $DIR/early_otherwise_branch_68867.rs:27:21: 27:28\n-          StorageDead(_33);                // scope 0 at $DIR/early_otherwise_branch_68867.rs:27:27: 27:28\n--         StorageDead(_3);                 // scope 0 at $DIR/early_otherwise_branch_68867.rs:28:6: 28:7\n--         StorageDead(_4);                 // scope 0 at $DIR/early_otherwise_branch_68867.rs:29:1: 29:2\n-+         nop;                             // scope 0 at $DIR/early_otherwise_branch_68867.rs:28:6: 28:7\n-+         nop;                             // scope 0 at $DIR/early_otherwise_branch_68867.rs:29:1: 29:2\n-          return;                          // scope 0 at $DIR/early_otherwise_branch_68867.rs:29:2: 29:2\n++         StorageDead(_35);                // scope 0 at $DIR/early_otherwise_branch_68867.rs:26:25: 26:27\n+          StorageLive(_33);                // scope 0 at $DIR/early_otherwise_branch_68867.rs:26:25: 26:27\n+-         nop;                             // scope 0 at $DIR/early_otherwise_branch_68867.rs:26:21: 26:28\n+          discriminant(_0) = 1;            // scope 0 at $DIR/early_otherwise_branch_68867.rs:26:21: 26:28\n+          StorageDead(_33);                // scope 0 at $DIR/early_otherwise_branch_68867.rs:26:27: 26:28\n+-         StorageDead(_3);                 // scope 0 at $DIR/early_otherwise_branch_68867.rs:27:6: 27:7\n+-         StorageDead(_4);                 // scope 0 at $DIR/early_otherwise_branch_68867.rs:28:1: 28:2\n++         nop;                             // scope 0 at $DIR/early_otherwise_branch_68867.rs:27:6: 27:7\n++         nop;                             // scope 0 at $DIR/early_otherwise_branch_68867.rs:28:1: 28:2\n+          return;                          // scope 0 at $DIR/early_otherwise_branch_68867.rs:28:2: 28:2\n       }\n   \n +     bb2: {\n++         nop;                             // scope 0 at $DIR/early_otherwise_branch_68867.rs:22:14: 22:17\n++         _15 = (((*(_4.0: &ViewportPercentageLength)) as Vw).0: f32); // scope 0 at $DIR/early_otherwise_branch_68867.rs:22:14: 22:17\n++         nop;                             // scope 0 at $DIR/early_otherwise_branch_68867.rs:22:24: 22:29\n++         _16 = (((*(_4.1: &ViewportPercentageLength)) as Vw).0: f32); // scope 0 at $DIR/early_otherwise_branch_68867.rs:22:24: 22:29\n++         nop;                             // scope 1 at $DIR/early_otherwise_branch_68867.rs:22:38: 22:49\n++         nop;                             // scope 1 at $DIR/early_otherwise_branch_68867.rs:22:38: 22:41\n++         nop;                             // scope 1 at $DIR/early_otherwise_branch_68867.rs:22:38: 22:41\n++         nop;                             // scope 1 at $DIR/early_otherwise_branch_68867.rs:22:44: 22:49\n++         nop;                             // scope 1 at $DIR/early_otherwise_branch_68867.rs:22:44: 22:49\n++         ((((_0 as Ok).0: ViewportPercentageLength) as Vw).0: f32) = Add(move _15, move _16); // scope 1 at $DIR/early_otherwise_branch_68867.rs:22:38: 22:49\n++         nop;                             // scope 1 at $DIR/early_otherwise_branch_68867.rs:22:48: 22:49\n++         nop;                             // scope 1 at $DIR/early_otherwise_branch_68867.rs:22:48: 22:49\n++         nop;                             // scope 1 at $DIR/early_otherwise_branch_68867.rs:22:35: 22:50\n++         discriminant(((_0 as Ok).0: ViewportPercentageLength)) = 0; // scope 1 at $DIR/early_otherwise_branch_68867.rs:22:35: 22:50\n++         nop;                             // scope 1 at $DIR/early_otherwise_branch_68867.rs:22:49: 22:50\n++         nop;                             // scope 0 at $DIR/early_otherwise_branch_68867.rs:22:49: 22:50\n++         nop;                             // scope 0 at $DIR/early_otherwise_branch_68867.rs:22:49: 22:50\n++         goto -> bb6;                     // scope 0 at $DIR/early_otherwise_branch_68867.rs:21:8: 27:6\n++     }\n++ \n+      bb3: {\n+-         _8 = discriminant((*(_4.1: &ViewportPercentageLength))); // scope 0 at $DIR/early_otherwise_branch_68867.rs:23:21: 23:30\n+-         switchInt(move _8) -> [1_isize: bb7, otherwise: bb2]; // scope 0 at $DIR/early_otherwise_branch_68867.rs:23:21: 23:30\n +         nop;                             // scope 0 at $DIR/early_otherwise_branch_68867.rs:23:14: 23:17\n-+         _15 = (((*(_4.0: &ViewportPercentageLength)) as Vw).0: f32); // scope 0 at $DIR/early_otherwise_branch_68867.rs:23:14: 23:17\n++         _20 = (((*(_4.0: &ViewportPercentageLength)) as Vh).0: f32); // scope 0 at $DIR/early_otherwise_branch_68867.rs:23:14: 23:17\n +         nop;                             // scope 0 at $DIR/early_otherwise_branch_68867.rs:23:24: 23:29\n-+         _16 = (((*(_4.1: &ViewportPercentageLength)) as Vw).0: f32); // scope 0 at $DIR/early_otherwise_branch_68867.rs:23:24: 23:29\n-+         nop;                             // scope 1 at $DIR/early_otherwise_branch_68867.rs:23:38: 23:49\n-+         nop;                             // scope 1 at $DIR/early_otherwise_branch_68867.rs:23:38: 23:41\n-+         nop;                             // scope 1 at $DIR/early_otherwise_branch_68867.rs:23:38: 23:41\n-+         nop;                             // scope 1 at $DIR/early_otherwise_branch_68867.rs:23:44: 23:49\n-+         nop;                             // scope 1 at $DIR/early_otherwise_branch_68867.rs:23:44: 23:49\n-+         ((((_0 as Ok).0: ViewportPercentageLength) as Vw).0: f32) = Add(move _15, move _16); // scope 1 at $DIR/early_otherwise_branch_68867.rs:23:38: 23:49\n-+         nop;                             // scope 1 at $DIR/early_otherwise_branch_68867.rs:23:48: 23:49\n-+         nop;                             // scope 1 at $DIR/early_otherwise_branch_68867.rs:23:48: 23:49\n-+         nop;                             // scope 1 at $DIR/early_otherwise_branch_68867.rs:23:35: 23:50\n-+         discriminant(((_0 as Ok).0: ViewportPercentageLength)) = 0; // scope 1 at $DIR/early_otherwise_branch_68867.rs:23:35: 23:50\n-+         nop;                             // scope 1 at $DIR/early_otherwise_branch_68867.rs:23:49: 23:50\n++         _21 = (((*(_4.1: &ViewportPercentageLength)) as Vh).0: f32); // scope 0 at $DIR/early_otherwise_branch_68867.rs:23:24: 23:29\n++         nop;                             // scope 2 at $DIR/early_otherwise_branch_68867.rs:23:38: 23:49\n++         nop;                             // scope 2 at $DIR/early_otherwise_branch_68867.rs:23:38: 23:41\n++         nop;                             // scope 2 at $DIR/early_otherwise_branch_68867.rs:23:38: 23:41\n++         nop;                             // scope 2 at $DIR/early_otherwise_branch_68867.rs:23:44: 23:49\n++         nop;                             // scope 2 at $DIR/early_otherwise_branch_68867.rs:23:44: 23:49\n++         ((((_0 as Ok).0: ViewportPercentageLength) as Vh).0: f32) = Add(move _20, move _21); // scope 2 at $DIR/early_otherwise_branch_68867.rs:23:38: 23:49\n++         nop;                             // scope 2 at $DIR/early_otherwise_branch_68867.rs:23:48: 23:49\n++         nop;                             // scope 2 at $DIR/early_otherwise_branch_68867.rs:23:48: 23:49\n++         nop;                             // scope 2 at $DIR/early_otherwise_branch_68867.rs:23:35: 23:50\n++         discriminant(((_0 as Ok).0: ViewportPercentageLength)) = 1; // scope 2 at $DIR/early_otherwise_branch_68867.rs:23:35: 23:50\n++         nop;                             // scope 2 at $DIR/early_otherwise_branch_68867.rs:23:49: 23:50\n +         nop;                             // scope 0 at $DIR/early_otherwise_branch_68867.rs:23:49: 23:50\n +         nop;                             // scope 0 at $DIR/early_otherwise_branch_68867.rs:23:49: 23:50\n-+         goto -> bb6;                     // scope 0 at $DIR/early_otherwise_branch_68867.rs:22:8: 28:6\n-+     }\n-+ \n-      bb3: {\n--         _8 = discriminant((*(_4.1: &ViewportPercentageLength))); // scope 0 at $DIR/early_otherwise_branch_68867.rs:24:21: 24:30\n--         switchInt(move _8) -> [1_isize: bb7, otherwise: bb2]; // scope 0 at $DIR/early_otherwise_branch_68867.rs:24:21: 24:30\n-+         nop;                             // scope 0 at $DIR/early_otherwise_branch_68867.rs:24:14: 24:17\n-+         _20 = (((*(_4.0: &ViewportPercentageLength)) as Vh).0: f32); // scope 0 at $DIR/early_otherwise_branch_68867.rs:24:14: 24:17\n-+         nop;                             // scope 0 at $DIR/early_otherwise_branch_68867.rs:24:24: 24:29\n-+         _21 = (((*(_4.1: &ViewportPercentageLength)) as Vh).0: f32); // scope 0 at $DIR/early_otherwise_branch_68867.rs:24:24: 24:29\n-+         nop;                             // scope 2 at $DIR/early_otherwise_branch_68867.rs:24:38: 24:49\n-+         nop;                             // scope 2 at $DIR/early_otherwise_branch_68867.rs:24:38: 24:41\n-+         nop;                             // scope 2 at $DIR/early_otherwise_branch_68867.rs:24:38: 24:41\n-+         nop;                             // scope 2 at $DIR/early_otherwise_branch_68867.rs:24:44: 24:49\n-+         nop;                             // scope 2 at $DIR/early_otherwise_branch_68867.rs:24:44: 24:49\n-+         ((((_0 as Ok).0: ViewportPercentageLength) as Vh).0: f32) = Add(move _20, move _21); // scope 2 at $DIR/early_otherwise_branch_68867.rs:24:38: 24:49\n-+         nop;                             // scope 2 at $DIR/early_otherwise_branch_68867.rs:24:48: 24:49\n-+         nop;                             // scope 2 at $DIR/early_otherwise_branch_68867.rs:24:48: 24:49\n-+         nop;                             // scope 2 at $DIR/early_otherwise_branch_68867.rs:24:35: 24:50\n-+         discriminant(((_0 as Ok).0: ViewportPercentageLength)) = 1; // scope 2 at $DIR/early_otherwise_branch_68867.rs:24:35: 24:50\n-+         nop;                             // scope 2 at $DIR/early_otherwise_branch_68867.rs:24:49: 24:50\n-+         nop;                             // scope 0 at $DIR/early_otherwise_branch_68867.rs:24:49: 24:50\n-+         nop;                             // scope 0 at $DIR/early_otherwise_branch_68867.rs:24:49: 24:50\n-+         goto -> bb6;                     // scope 0 at $DIR/early_otherwise_branch_68867.rs:22:8: 28:6\n++         goto -> bb6;                     // scope 0 at $DIR/early_otherwise_branch_68867.rs:21:8: 27:6\n       }\n   \n       bb4: {\n--         _9 = discriminant((*(_4.1: &ViewportPercentageLength))); // scope 0 at $DIR/early_otherwise_branch_68867.rs:25:23: 25:34\n--         switchInt(move _9) -> [2_isize: bb8, otherwise: bb2]; // scope 0 at $DIR/early_otherwise_branch_68867.rs:25:23: 25:34\n+-         _9 = discriminant((*(_4.1: &ViewportPercentageLength))); // scope 0 at $DIR/early_otherwise_branch_68867.rs:24:23: 24:34\n+-         switchInt(move _9) -> [2_isize: bb8, otherwise: bb2]; // scope 0 at $DIR/early_otherwise_branch_68867.rs:24:23: 24:34\n++         nop;                             // scope 0 at $DIR/early_otherwise_branch_68867.rs:24:16: 24:19\n++         _25 = (((*(_4.0: &ViewportPercentageLength)) as Vmin).0: f32); // scope 0 at $DIR/early_otherwise_branch_68867.rs:24:16: 24:19\n++         nop;                             // scope 0 at $DIR/early_otherwise_branch_68867.rs:24:28: 24:33\n++         _26 = (((*(_4.1: &ViewportPercentageLength)) as Vmin).0: f32); // scope 0 at $DIR/early_otherwise_branch_68867.rs:24:28: 24:33\n++         nop;                             // scope 3 at $DIR/early_otherwise_branch_68867.rs:24:44: 24:55\n++         nop;                             // scope 3 at $DIR/early_otherwise_branch_68867.rs:24:44: 24:47\n++         nop;                             // scope 3 at $DIR/early_otherwise_branch_68867.rs:24:44: 24:47\n++         nop;                             // scope 3 at $DIR/early_otherwise_branch_68867.rs:24:50: 24:55\n++         nop;                             // scope 3 at $DIR/early_otherwise_branch_68867.rs:24:50: 24:55\n++         ((((_0 as Ok).0: ViewportPercentageLength) as Vmin).0: f32) = Add(move _25, move _26); // scope 3 at $DIR/early_otherwise_branch_68867.rs:24:44: 24:55\n++         nop;                             // scope 3 at $DIR/early_otherwise_branch_68867.rs:24:54: 24:55\n++         nop;                             // scope 3 at $DIR/early_otherwise_branch_68867.rs:24:54: 24:55\n++         nop;                             // scope 3 at $DIR/early_otherwise_branch_68867.rs:24:39: 24:56\n++         discriminant(((_0 as Ok).0: ViewportPercentageLength)) = 2; // scope 3 at $DIR/early_otherwise_branch_68867.rs:24:39: 24:56\n++         nop;                             // scope 3 at $DIR/early_otherwise_branch_68867.rs:24:55: 24:56\n++         nop;                             // scope 0 at $DIR/early_otherwise_branch_68867.rs:24:55: 24:56\n++         nop;                             // scope 0 at $DIR/early_otherwise_branch_68867.rs:24:55: 24:56\n++         goto -> bb6;                     // scope 0 at $DIR/early_otherwise_branch_68867.rs:21:8: 27:6\n+      }\n+  \n+      bb5: {\n+-         _10 = discriminant((*(_4.1: &ViewportPercentageLength))); // scope 0 at $DIR/early_otherwise_branch_68867.rs:25:23: 25:34\n+-         switchInt(move _10) -> [3_isize: bb9, otherwise: bb2]; // scope 0 at $DIR/early_otherwise_branch_68867.rs:25:23: 25:34\n +         nop;                             // scope 0 at $DIR/early_otherwise_branch_68867.rs:25:16: 25:19\n-+         _25 = (((*(_4.0: &ViewportPercentageLength)) as Vmin).0: f32); // scope 0 at $DIR/early_otherwise_branch_68867.rs:25:16: 25:19\n++         _30 = (((*(_4.0: &ViewportPercentageLength)) as Vmax).0: f32); // scope 0 at $DIR/early_otherwise_branch_68867.rs:25:16: 25:19\n +         nop;                             // scope 0 at $DIR/early_otherwise_branch_68867.rs:25:28: 25:33\n-+         _26 = (((*(_4.1: &ViewportPercentageLength)) as Vmin).0: f32); // scope 0 at $DIR/early_otherwise_branch_68867.rs:25:28: 25:33\n-+         nop;                             // scope 3 at $DIR/early_otherwise_branch_68867.rs:25:44: 25:55\n-+         nop;                             // scope 3 at $DIR/early_otherwise_branch_68867.rs:25:44: 25:47\n-+         nop;                             // scope 3 at $DIR/early_otherwise_branch_68867.rs:25:44: 25:47\n-+         nop;                             // scope 3 at $DIR/early_otherwise_branch_68867.rs:25:50: 25:55\n-+         nop;                             // scope 3 at $DIR/early_otherwise_branch_68867.rs:25:50: 25:55\n-+         ((((_0 as Ok).0: ViewportPercentageLength) as Vmin).0: f32) = Add(move _25, move _26); // scope 3 at $DIR/early_otherwise_branch_68867.rs:25:44: 25:55\n-+         nop;                             // scope 3 at $DIR/early_otherwise_branch_68867.rs:25:54: 25:55\n-+         nop;                             // scope 3 at $DIR/early_otherwise_branch_68867.rs:25:54: 25:55\n-+         nop;                             // scope 3 at $DIR/early_otherwise_branch_68867.rs:25:39: 25:56\n-+         discriminant(((_0 as Ok).0: ViewportPercentageLength)) = 2; // scope 3 at $DIR/early_otherwise_branch_68867.rs:25:39: 25:56\n-+         nop;                             // scope 3 at $DIR/early_otherwise_branch_68867.rs:25:55: 25:56\n++         _31 = (((*(_4.1: &ViewportPercentageLength)) as Vmax).0: f32); // scope 0 at $DIR/early_otherwise_branch_68867.rs:25:28: 25:33\n++         nop;                             // scope 4 at $DIR/early_otherwise_branch_68867.rs:25:44: 25:55\n++         nop;                             // scope 4 at $DIR/early_otherwise_branch_68867.rs:25:44: 25:47\n++         nop;                             // scope 4 at $DIR/early_otherwise_branch_68867.rs:25:44: 25:47\n++         nop;                             // scope 4 at $DIR/early_otherwise_branch_68867.rs:25:50: 25:55\n++         nop;                             // scope 4 at $DIR/early_otherwise_branch_68867.rs:25:50: 25:55\n++         ((((_0 as Ok).0: ViewportPercentageLength) as Vmax).0: f32) = Add(move _30, move _31); // scope 4 at $DIR/early_otherwise_branch_68867.rs:25:44: 25:55\n++         nop;                             // scope 4 at $DIR/early_otherwise_branch_68867.rs:25:54: 25:55\n++         nop;                             // scope 4 at $DIR/early_otherwise_branch_68867.rs:25:54: 25:55\n++         nop;                             // scope 4 at $DIR/early_otherwise_branch_68867.rs:25:39: 25:56\n++         discriminant(((_0 as Ok).0: ViewportPercentageLength)) = 3; // scope 4 at $DIR/early_otherwise_branch_68867.rs:25:39: 25:56\n++         nop;                             // scope 4 at $DIR/early_otherwise_branch_68867.rs:25:55: 25:56\n +         nop;                             // scope 0 at $DIR/early_otherwise_branch_68867.rs:25:55: 25:56\n +         nop;                             // scope 0 at $DIR/early_otherwise_branch_68867.rs:25:55: 25:56\n-+         goto -> bb6;                     // scope 0 at $DIR/early_otherwise_branch_68867.rs:22:8: 28:6\n-      }\n-  \n-      bb5: {\n--         _10 = discriminant((*(_4.1: &ViewportPercentageLength))); // scope 0 at $DIR/early_otherwise_branch_68867.rs:26:23: 26:34\n--         switchInt(move _10) -> [3_isize: bb9, otherwise: bb2]; // scope 0 at $DIR/early_otherwise_branch_68867.rs:26:23: 26:34\n-+         nop;                             // scope 0 at $DIR/early_otherwise_branch_68867.rs:26:16: 26:19\n-+         _30 = (((*(_4.0: &ViewportPercentageLength)) as Vmax).0: f32); // scope 0 at $DIR/early_otherwise_branch_68867.rs:26:16: 26:19\n-+         nop;                             // scope 0 at $DIR/early_otherwise_branch_68867.rs:26:28: 26:33\n-+         _31 = (((*(_4.1: &ViewportPercentageLength)) as Vmax).0: f32); // scope 0 at $DIR/early_otherwise_branch_68867.rs:26:28: 26:33\n-+         nop;                             // scope 4 at $DIR/early_otherwise_branch_68867.rs:26:44: 26:55\n-+         nop;                             // scope 4 at $DIR/early_otherwise_branch_68867.rs:26:44: 26:47\n-+         nop;                             // scope 4 at $DIR/early_otherwise_branch_68867.rs:26:44: 26:47\n-+         nop;                             // scope 4 at $DIR/early_otherwise_branch_68867.rs:26:50: 26:55\n-+         nop;                             // scope 4 at $DIR/early_otherwise_branch_68867.rs:26:50: 26:55\n-+         ((((_0 as Ok).0: ViewportPercentageLength) as Vmax).0: f32) = Add(move _30, move _31); // scope 4 at $DIR/early_otherwise_branch_68867.rs:26:44: 26:55\n-+         nop;                             // scope 4 at $DIR/early_otherwise_branch_68867.rs:26:54: 26:55\n-+         nop;                             // scope 4 at $DIR/early_otherwise_branch_68867.rs:26:54: 26:55\n-+         nop;                             // scope 4 at $DIR/early_otherwise_branch_68867.rs:26:39: 26:56\n-+         discriminant(((_0 as Ok).0: ViewportPercentageLength)) = 3; // scope 4 at $DIR/early_otherwise_branch_68867.rs:26:39: 26:56\n-+         nop;                             // scope 4 at $DIR/early_otherwise_branch_68867.rs:26:55: 26:56\n-+         nop;                             // scope 0 at $DIR/early_otherwise_branch_68867.rs:26:55: 26:56\n-+         nop;                             // scope 0 at $DIR/early_otherwise_branch_68867.rs:26:55: 26:56\n-+         goto -> bb6;                     // scope 0 at $DIR/early_otherwise_branch_68867.rs:22:8: 28:6\n++         goto -> bb6;                     // scope 0 at $DIR/early_otherwise_branch_68867.rs:21:8: 27:6\n       }\n   \n       bb6: {\n--         StorageLive(_12);                // scope 0 at $DIR/early_otherwise_branch_68867.rs:23:14: 23:17\n--         _12 = (((*(_4.0: &ViewportPercentageLength)) as Vw).0: f32); // scope 0 at $DIR/early_otherwise_branch_68867.rs:23:14: 23:17\n--         StorageLive(_13);                // scope 0 at $DIR/early_otherwise_branch_68867.rs:23:24: 23:29\n--         _13 = (((*(_4.1: &ViewportPercentageLength)) as Vw).0: f32); // scope 0 at $DIR/early_otherwise_branch_68867.rs:23:24: 23:29\n--         StorageLive(_14);                // scope 1 at $DIR/early_otherwise_branch_68867.rs:23:38: 23:49\n--         StorageLive(_15);                // scope 1 at $DIR/early_otherwise_branch_68867.rs:23:38: 23:41\n--         _15 = _12;                       // scope 1 at $DIR/early_otherwise_branch_68867.rs:23:38: 23:41\n--         StorageLive(_16);                // scope 1 at $DIR/early_otherwise_branch_68867.rs:23:44: 23:49\n--         _16 = _13;                       // scope 1 at $DIR/early_otherwise_branch_68867.rs:23:44: 23:49\n--         _14 = Add(move _15, move _16);   // scope 1 at $DIR/early_otherwise_branch_68867.rs:23:38: 23:49\n--         StorageDead(_16);                // scope 1 at $DIR/early_otherwise_branch_68867.rs:23:48: 23:49\n--         StorageDead(_15);                // scope 1 at $DIR/early_otherwise_branch_68867.rs:23:48: 23:49\n--         ((_3 as Vw).0: f32) = move _14;  // scope 1 at $DIR/early_otherwise_branch_68867.rs:23:35: 23:50\n--         discriminant(_3) = 0;            // scope 1 at $DIR/early_otherwise_branch_68867.rs:23:35: 23:50\n--         StorageDead(_14);                // scope 1 at $DIR/early_otherwise_branch_68867.rs:23:49: 23:50\n--         StorageDead(_13);                // scope 0 at $DIR/early_otherwise_branch_68867.rs:23:49: 23:50\n--         StorageDead(_12);                // scope 0 at $DIR/early_otherwise_branch_68867.rs:23:49: 23:50\n--         goto -> bb10;                    // scope 0 at $DIR/early_otherwise_branch_68867.rs:22:8: 28:6\n-+         nop;                             // scope 0 at $DIR/early_otherwise_branch_68867.rs:22:5: 28:7\n-+         discriminant(_0) = 0;            // scope 0 at $DIR/early_otherwise_branch_68867.rs:22:5: 28:7\n-+         nop;                             // scope 0 at $DIR/early_otherwise_branch_68867.rs:28:6: 28:7\n-+         nop;                             // scope 0 at $DIR/early_otherwise_branch_68867.rs:29:1: 29:2\n-+         return;                          // scope 0 at $DIR/early_otherwise_branch_68867.rs:29:2: 29:2\n+-         StorageLive(_12);                // scope 0 at $DIR/early_otherwise_branch_68867.rs:22:14: 22:17\n+-         _12 = (((*(_4.0: &ViewportPercentageLength)) as Vw).0: f32); // scope 0 at $DIR/early_otherwise_branch_68867.rs:22:14: 22:17\n+-         StorageLive(_13);                // scope 0 at $DIR/early_otherwise_branch_68867.rs:22:24: 22:29\n+-         _13 = (((*(_4.1: &ViewportPercentageLength)) as Vw).0: f32); // scope 0 at $DIR/early_otherwise_branch_68867.rs:22:24: 22:29\n+-         StorageLive(_14);                // scope 1 at $DIR/early_otherwise_branch_68867.rs:22:38: 22:49\n+-         StorageLive(_15);                // scope 1 at $DIR/early_otherwise_branch_68867.rs:22:38: 22:41\n+-         _15 = _12;                       // scope 1 at $DIR/early_otherwise_branch_68867.rs:22:38: 22:41\n+-         StorageLive(_16);                // scope 1 at $DIR/early_otherwise_branch_68867.rs:22:44: 22:49\n+-         _16 = _13;                       // scope 1 at $DIR/early_otherwise_branch_68867.rs:22:44: 22:49\n+-         _14 = Add(move _15, move _16);   // scope 1 at $DIR/early_otherwise_branch_68867.rs:22:38: 22:49\n+-         StorageDead(_16);                // scope 1 at $DIR/early_otherwise_branch_68867.rs:22:48: 22:49\n+-         StorageDead(_15);                // scope 1 at $DIR/early_otherwise_branch_68867.rs:22:48: 22:49\n+-         ((_3 as Vw).0: f32) = move _14;  // scope 1 at $DIR/early_otherwise_branch_68867.rs:22:35: 22:50\n+-         discriminant(_3) = 0;            // scope 1 at $DIR/early_otherwise_branch_68867.rs:22:35: 22:50\n+-         StorageDead(_14);                // scope 1 at $DIR/early_otherwise_branch_68867.rs:22:49: 22:50\n+-         StorageDead(_13);                // scope 0 at $DIR/early_otherwise_branch_68867.rs:22:49: 22:50\n+-         StorageDead(_12);                // scope 0 at $DIR/early_otherwise_branch_68867.rs:22:49: 22:50\n+-         goto -> bb10;                    // scope 0 at $DIR/early_otherwise_branch_68867.rs:21:8: 27:6\n++         nop;                             // scope 0 at $DIR/early_otherwise_branch_68867.rs:21:5: 27:7\n++         discriminant(_0) = 0;            // scope 0 at $DIR/early_otherwise_branch_68867.rs:21:5: 27:7\n++         nop;                             // scope 0 at $DIR/early_otherwise_branch_68867.rs:27:6: 27:7\n++         nop;                             // scope 0 at $DIR/early_otherwise_branch_68867.rs:28:1: 28:2\n++         return;                          // scope 0 at $DIR/early_otherwise_branch_68867.rs:28:2: 28:2\n       }\n   \n       bb7: {\n--         StorageLive(_17);                // scope 0 at $DIR/early_otherwise_branch_68867.rs:24:14: 24:17\n--         _17 = (((*(_4.0: &ViewportPercentageLength)) as Vh).0: f32); // scope 0 at $DIR/early_otherwise_branch_68867.rs:24:14: 24:17\n--         StorageLive(_18);                // scope 0 at $DIR/early_otherwise_branch_68867.rs:24:24: 24:29\n--         _18 = (((*(_4.1: &ViewportPercentageLength)) as Vh).0: f32); // scope 0 at $DIR/early_otherwise_branch_68867.rs:24:24: 24:29\n--         StorageLive(_19);                // scope 2 at $DIR/early_otherwise_branch_68867.rs:24:38: 24:49\n--         StorageLive(_20);                // scope 2 at $DIR/early_otherwise_branch_68867.rs:24:38: 24:41\n--         _20 = _17;                       // scope 2 at $DIR/early_otherwise_branch_68867.rs:24:38: 24:41\n--         StorageLive(_21);                // scope 2 at $DIR/early_otherwise_branch_68867.rs:24:44: 24:49\n--         _21 = _18;                       // scope 2 at $DIR/early_otherwise_branch_68867.rs:24:44: 24:49\n--         _19 = Add(move _20, move _21);   // scope 2 at $DIR/early_otherwise_branch_68867.rs:24:38: 24:49\n--         StorageDead(_21);                // scope 2 at $DIR/early_otherwise_branch_68867.rs:24:48: 24:49\n--         StorageDead(_20);                // scope 2 at $DIR/early_otherwise_branch_68867.rs:24:48: 24:49\n--         ((_3 as Vh).0: f32) = move _19;  // scope 2 at $DIR/early_otherwise_branch_68867.rs:24:35: 24:50\n--         discriminant(_3) = 1;            // scope 2 at $DIR/early_otherwise_branch_68867.rs:24:35: 24:50\n--         StorageDead(_19);                // scope 2 at $DIR/early_otherwise_branch_68867.rs:24:49: 24:50\n--         StorageDead(_18);                // scope 0 at $DIR/early_otherwise_branch_68867.rs:24:49: 24:50\n--         StorageDead(_17);                // scope 0 at $DIR/early_otherwise_branch_68867.rs:24:49: 24:50\n--         goto -> bb10;                    // scope 0 at $DIR/early_otherwise_branch_68867.rs:22:8: 28:6\n+-         StorageLive(_17);                // scope 0 at $DIR/early_otherwise_branch_68867.rs:23:14: 23:17\n+-         _17 = (((*(_4.0: &ViewportPercentageLength)) as Vh).0: f32); // scope 0 at $DIR/early_otherwise_branch_68867.rs:23:14: 23:17\n+-         StorageLive(_18);                // scope 0 at $DIR/early_otherwise_branch_68867.rs:23:24: 23:29\n+-         _18 = (((*(_4.1: &ViewportPercentageLength)) as Vh).0: f32); // scope 0 at $DIR/early_otherwise_branch_68867.rs:23:24: 23:29\n+-         StorageLive(_19);                // scope 2 at $DIR/early_otherwise_branch_68867.rs:23:38: 23:49\n+-         StorageLive(_20);                // scope 2 at $DIR/early_otherwise_branch_68867.rs:23:38: 23:41\n+-         _20 = _17;                       // scope 2 at $DIR/early_otherwise_branch_68867.rs:23:38: 23:41\n+-         StorageLive(_21);                // scope 2 at $DIR/early_otherwise_branch_68867.rs:23:44: 23:49\n+-         _21 = _18;                       // scope 2 at $DIR/early_otherwise_branch_68867.rs:23:44: 23:49\n+-         _19 = Add(move _20, move _21);   // scope 2 at $DIR/early_otherwise_branch_68867.rs:23:38: 23:49\n+-         StorageDead(_21);                // scope 2 at $DIR/early_otherwise_branch_68867.rs:23:48: 23:49\n+-         StorageDead(_20);                // scope 2 at $DIR/early_otherwise_branch_68867.rs:23:48: 23:49\n+-         ((_3 as Vh).0: f32) = move _19;  // scope 2 at $DIR/early_otherwise_branch_68867.rs:23:35: 23:50\n+-         discriminant(_3) = 1;            // scope 2 at $DIR/early_otherwise_branch_68867.rs:23:35: 23:50\n+-         StorageDead(_19);                // scope 2 at $DIR/early_otherwise_branch_68867.rs:23:49: 23:50\n+-         StorageDead(_18);                // scope 0 at $DIR/early_otherwise_branch_68867.rs:23:49: 23:50\n+-         StorageDead(_17);                // scope 0 at $DIR/early_otherwise_branch_68867.rs:23:49: 23:50\n+-         goto -> bb10;                    // scope 0 at $DIR/early_otherwise_branch_68867.rs:21:8: 27:6\n -     }\n - \n -     bb8: {\n--         StorageLive(_22);                // scope 0 at $DIR/early_otherwise_branch_68867.rs:25:16: 25:19\n--         _22 = (((*(_4.0: &ViewportPercentageLength)) as Vmin).0: f32); // scope 0 at $DIR/early_otherwise_branch_68867.rs:25:16: 25:19\n--         StorageLive(_23);                // scope 0 at $DIR/early_otherwise_branch_68867.rs:25:28: 25:33\n--         _23 = (((*(_4.1: &ViewportPercentageLength)) as Vmin).0: f32); // scope 0 at $DIR/early_otherwise_branch_68867.rs:25:28: 25:33\n--         StorageLive(_24);                // scope 3 at $DIR/early_otherwise_branch_68867.rs:25:44: 25:55\n--         StorageLive(_25);                // scope 3 at $DIR/early_otherwise_branch_68867.rs:25:44: 25:47\n--         _25 = _22;                       // scope 3 at $DIR/early_otherwise_branch_68867.rs:25:44: 25:47\n--         StorageLive(_26);                // scope 3 at $DIR/early_otherwise_branch_68867.rs:25:50: 25:55\n--         _26 = _23;                       // scope 3 at $DIR/early_otherwise_branch_68867.rs:25:50: 25:55\n--         _24 = Add(move _25, move _26);   // scope 3 at $DIR/early_otherwise_branch_68867.rs:25:44: 25:55\n--         StorageDead(_26);                // scope 3 at $DIR/early_otherwise_branch_68867.rs:25:54: 25:55\n--         StorageDead(_25);                // scope 3 at $DIR/early_otherwise_branch_68867.rs:25:54: 25:55\n--         ((_3 as Vmin).0: f32) = move _24; // scope 3 at $DIR/early_otherwise_branch_68867.rs:25:39: 25:56\n--         discriminant(_3) = 2;            // scope 3 at $DIR/early_otherwise_branch_68867.rs:25:39: 25:56\n--         StorageDead(_24);                // scope 3 at $DIR/early_otherwise_branch_68867.rs:25:55: 25:56\n--         StorageDead(_23);                // scope 0 at $DIR/early_otherwise_branch_68867.rs:25:55: 25:56\n--         StorageDead(_22);                // scope 0 at $DIR/early_otherwise_branch_68867.rs:25:55: 25:56\n--         goto -> bb10;                    // scope 0 at $DIR/early_otherwise_branch_68867.rs:22:8: 28:6\n+-         StorageLive(_22);                // scope 0 at $DIR/early_otherwise_branch_68867.rs:24:16: 24:19\n+-         _22 = (((*(_4.0: &ViewportPercentageLength)) as Vmin).0: f32); // scope 0 at $DIR/early_otherwise_branch_68867.rs:24:16: 24:19\n+-         StorageLive(_23);                // scope 0 at $DIR/early_otherwise_branch_68867.rs:24:28: 24:33\n+-         _23 = (((*(_4.1: &ViewportPercentageLength)) as Vmin).0: f32); // scope 0 at $DIR/early_otherwise_branch_68867.rs:24:28: 24:33\n+-         StorageLive(_24);                // scope 3 at $DIR/early_otherwise_branch_68867.rs:24:44: 24:55\n+-         StorageLive(_25);                // scope 3 at $DIR/early_otherwise_branch_68867.rs:24:44: 24:47\n+-         _25 = _22;                       // scope 3 at $DIR/early_otherwise_branch_68867.rs:24:44: 24:47\n+-         StorageLive(_26);                // scope 3 at $DIR/early_otherwise_branch_68867.rs:24:50: 24:55\n+-         _26 = _23;                       // scope 3 at $DIR/early_otherwise_branch_68867.rs:24:50: 24:55\n+-         _24 = Add(move _25, move _26);   // scope 3 at $DIR/early_otherwise_branch_68867.rs:24:44: 24:55\n+-         StorageDead(_26);                // scope 3 at $DIR/early_otherwise_branch_68867.rs:24:54: 24:55\n+-         StorageDead(_25);                // scope 3 at $DIR/early_otherwise_branch_68867.rs:24:54: 24:55\n+-         ((_3 as Vmin).0: f32) = move _24; // scope 3 at $DIR/early_otherwise_branch_68867.rs:24:39: 24:56\n+-         discriminant(_3) = 2;            // scope 3 at $DIR/early_otherwise_branch_68867.rs:24:39: 24:56\n+-         StorageDead(_24);                // scope 3 at $DIR/early_otherwise_branch_68867.rs:24:55: 24:56\n+-         StorageDead(_23);                // scope 0 at $DIR/early_otherwise_branch_68867.rs:24:55: 24:56\n+-         StorageDead(_22);                // scope 0 at $DIR/early_otherwise_branch_68867.rs:24:55: 24:56\n+-         goto -> bb10;                    // scope 0 at $DIR/early_otherwise_branch_68867.rs:21:8: 27:6\n -     }\n - \n -     bb9: {\n--         StorageLive(_27);                // scope 0 at $DIR/early_otherwise_branch_68867.rs:26:16: 26:19\n--         _27 = (((*(_4.0: &ViewportPercentageLength)) as Vmax).0: f32); // scope 0 at $DIR/early_otherwise_branch_68867.rs:26:16: 26:19\n--         StorageLive(_28);                // scope 0 at $DIR/early_otherwise_branch_68867.rs:26:28: 26:33\n--         _28 = (((*(_4.1: &ViewportPercentageLength)) as Vmax).0: f32); // scope 0 at $DIR/early_otherwise_branch_68867.rs:26:28: 26:33\n--         StorageLive(_29);                // scope 4 at $DIR/early_otherwise_branch_68867.rs:26:44: 26:55\n--         StorageLive(_30);                // scope 4 at $DIR/early_otherwise_branch_68867.rs:26:44: 26:47\n--         _30 = _27;                       // scope 4 at $DIR/early_otherwise_branch_68867.rs:26:44: 26:47\n--         StorageLive(_31);                // scope 4 at $DIR/early_otherwise_branch_68867.rs:26:50: 26:55\n--         _31 = _28;                       // scope 4 at $DIR/early_otherwise_branch_68867.rs:26:50: 26:55\n--         _29 = Add(move _30, move _31);   // scope 4 at $DIR/early_otherwise_branch_68867.rs:26:44: 26:55\n--         StorageDead(_31);                // scope 4 at $DIR/early_otherwise_branch_68867.rs:26:54: 26:55\n--         StorageDead(_30);                // scope 4 at $DIR/early_otherwise_branch_68867.rs:26:54: 26:55\n--         ((_3 as Vmax).0: f32) = move _29; // scope 4 at $DIR/early_otherwise_branch_68867.rs:26:39: 26:56\n--         discriminant(_3) = 3;            // scope 4 at $DIR/early_otherwise_branch_68867.rs:26:39: 26:56\n--         StorageDead(_29);                // scope 4 at $DIR/early_otherwise_branch_68867.rs:26:55: 26:56\n--         StorageDead(_28);                // scope 0 at $DIR/early_otherwise_branch_68867.rs:26:55: 26:56\n--         StorageDead(_27);                // scope 0 at $DIR/early_otherwise_branch_68867.rs:26:55: 26:56\n--         goto -> bb10;                    // scope 0 at $DIR/early_otherwise_branch_68867.rs:22:8: 28:6\n+-         StorageLive(_27);                // scope 0 at $DIR/early_otherwise_branch_68867.rs:25:16: 25:19\n+-         _27 = (((*(_4.0: &ViewportPercentageLength)) as Vmax).0: f32); // scope 0 at $DIR/early_otherwise_branch_68867.rs:25:16: 25:19\n+-         StorageLive(_28);                // scope 0 at $DIR/early_otherwise_branch_68867.rs:25:28: 25:33\n+-         _28 = (((*(_4.1: &ViewportPercentageLength)) as Vmax).0: f32); // scope 0 at $DIR/early_otherwise_branch_68867.rs:25:28: 25:33\n+-         StorageLive(_29);                // scope 4 at $DIR/early_otherwise_branch_68867.rs:25:44: 25:55\n+-         StorageLive(_30);                // scope 4 at $DIR/early_otherwise_branch_68867.rs:25:44: 25:47\n+-         _30 = _27;                       // scope 4 at $DIR/early_otherwise_branch_68867.rs:25:44: 25:47\n+-         StorageLive(_31);                // scope 4 at $DIR/early_otherwise_branch_68867.rs:25:50: 25:55\n+-         _31 = _28;                       // scope 4 at $DIR/early_otherwise_branch_68867.rs:25:50: 25:55\n+-         _29 = Add(move _30, move _31);   // scope 4 at $DIR/early_otherwise_branch_68867.rs:25:44: 25:55\n+-         StorageDead(_31);                // scope 4 at $DIR/early_otherwise_branch_68867.rs:25:54: 25:55\n+-         StorageDead(_30);                // scope 4 at $DIR/early_otherwise_branch_68867.rs:25:54: 25:55\n+-         ((_3 as Vmax).0: f32) = move _29; // scope 4 at $DIR/early_otherwise_branch_68867.rs:25:39: 25:56\n+-         discriminant(_3) = 3;            // scope 4 at $DIR/early_otherwise_branch_68867.rs:25:39: 25:56\n+-         StorageDead(_29);                // scope 4 at $DIR/early_otherwise_branch_68867.rs:25:55: 25:56\n+-         StorageDead(_28);                // scope 0 at $DIR/early_otherwise_branch_68867.rs:25:55: 25:56\n+-         StorageDead(_27);                // scope 0 at $DIR/early_otherwise_branch_68867.rs:25:55: 25:56\n+-         goto -> bb10;                    // scope 0 at $DIR/early_otherwise_branch_68867.rs:21:8: 27:6\n -     }\n - \n -     bb10: {\n--         ((_0 as Ok).0: ViewportPercentageLength) = move _3; // scope 0 at $DIR/early_otherwise_branch_68867.rs:22:5: 28:7\n--         discriminant(_0) = 0;            // scope 0 at $DIR/early_otherwise_branch_68867.rs:22:5: 28:7\n--         StorageDead(_3);                 // scope 0 at $DIR/early_otherwise_branch_68867.rs:28:6: 28:7\n--         StorageDead(_4);                 // scope 0 at $DIR/early_otherwise_branch_68867.rs:29:1: 29:2\n--         return;                          // scope 0 at $DIR/early_otherwise_branch_68867.rs:29:2: 29:2\n-+         StorageDead(_35);                // scope 0 at $DIR/early_otherwise_branch_68867.rs:23:21: 23:30\n-+         switchInt(_11) -> [0_isize: bb2, 1_isize: bb3, 2_isize: bb4, 3_isize: bb5, otherwise: bb1]; // scope 0 at $DIR/early_otherwise_branch_68867.rs:23:21: 23:30\n+-         ((_0 as Ok).0: ViewportPercentageLength) = move _3; // scope 0 at $DIR/early_otherwise_branch_68867.rs:21:5: 27:7\n+-         discriminant(_0) = 0;            // scope 0 at $DIR/early_otherwise_branch_68867.rs:21:5: 27:7\n+-         StorageDead(_3);                 // scope 0 at $DIR/early_otherwise_branch_68867.rs:27:6: 27:7\n+-         StorageDead(_4);                 // scope 0 at $DIR/early_otherwise_branch_68867.rs:28:1: 28:2\n+-         return;                          // scope 0 at $DIR/early_otherwise_branch_68867.rs:28:2: 28:2\n++         StorageDead(_35);                // scope 0 at $DIR/early_otherwise_branch_68867.rs:22:21: 22:30\n++         switchInt(_11) -> [0_isize: bb2, 1_isize: bb3, 2_isize: bb4, 3_isize: bb5, otherwise: bb1]; // scope 0 at $DIR/early_otherwise_branch_68867.rs:22:21: 22:30\n       }\n   }\n   "}, {"sha": "9039989e0f288e72fd633dea136de423b77d1615", "filename": "src/test/mir-opt/early_otherwise_branch_68867.try_sum.EarlyOtherwiseBranch.diff", "status": "modified", "additions": 161, "deletions": 161, "changes": 322, "blob_url": "https://github.com/rust-lang/rust/blob/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fmir-opt%2Fearly_otherwise_branch_68867.try_sum.EarlyOtherwiseBranch.diff", "raw_url": "https://github.com/rust-lang/rust/raw/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fmir-opt%2Fearly_otherwise_branch_68867.try_sum.EarlyOtherwiseBranch.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fearly_otherwise_branch_68867.try_sum.EarlyOtherwiseBranch.diff?ref=3ea62cb5d19846b44172d861ae231c8c09322800", "patch": "@@ -2,215 +2,215 @@\n + // MIR for `try_sum` after EarlyOtherwiseBranch\n   \n   fn try_sum(_1: &ViewportPercentageLength, _2: &ViewportPercentageLength) -> Result<ViewportPercentageLength, ()> {\n-      debug x => _1;                       // in scope 0 at $DIR/early_otherwise_branch_68867.rs:18:5: 18:6\n-      debug other => _2;                   // in scope 0 at $DIR/early_otherwise_branch_68867.rs:19:5: 19:10\n-      let mut _0: std::result::Result<ViewportPercentageLength, ()>; // return place in scope 0 at $DIR/early_otherwise_branch_68867.rs:20:6: 20:42\n-      let mut _3: ViewportPercentageLength; // in scope 0 at $DIR/early_otherwise_branch_68867.rs:22:8: 28:6\n-      let mut _4: (&ViewportPercentageLength, &ViewportPercentageLength); // in scope 0 at $DIR/early_otherwise_branch_68867.rs:22:14: 22:24\n-      let mut _5: &ViewportPercentageLength; // in scope 0 at $DIR/early_otherwise_branch_68867.rs:22:15: 22:16\n-      let mut _6: &ViewportPercentageLength; // in scope 0 at $DIR/early_otherwise_branch_68867.rs:22:18: 22:23\n-      let mut _7: isize;                   // in scope 0 at $DIR/early_otherwise_branch_68867.rs:23:21: 23:30\n-      let mut _8: isize;                   // in scope 0 at $DIR/early_otherwise_branch_68867.rs:24:21: 24:30\n-      let mut _9: isize;                   // in scope 0 at $DIR/early_otherwise_branch_68867.rs:25:23: 25:34\n-      let mut _10: isize;                  // in scope 0 at $DIR/early_otherwise_branch_68867.rs:26:23: 26:34\n-      let mut _11: isize;                  // in scope 0 at $DIR/early_otherwise_branch_68867.rs:23:11: 23:18\n-      let _12: f32;                        // in scope 0 at $DIR/early_otherwise_branch_68867.rs:23:14: 23:17\n-      let _13: f32;                        // in scope 0 at $DIR/early_otherwise_branch_68867.rs:23:24: 23:29\n-      let mut _14: f32;                    // in scope 0 at $DIR/early_otherwise_branch_68867.rs:23:38: 23:49\n-      let mut _15: f32;                    // in scope 0 at $DIR/early_otherwise_branch_68867.rs:23:38: 23:41\n-      let mut _16: f32;                    // in scope 0 at $DIR/early_otherwise_branch_68867.rs:23:44: 23:49\n-      let _17: f32;                        // in scope 0 at $DIR/early_otherwise_branch_68867.rs:24:14: 24:17\n-      let _18: f32;                        // in scope 0 at $DIR/early_otherwise_branch_68867.rs:24:24: 24:29\n-      let mut _19: f32;                    // in scope 0 at $DIR/early_otherwise_branch_68867.rs:24:38: 24:49\n-      let mut _20: f32;                    // in scope 0 at $DIR/early_otherwise_branch_68867.rs:24:38: 24:41\n-      let mut _21: f32;                    // in scope 0 at $DIR/early_otherwise_branch_68867.rs:24:44: 24:49\n-      let _22: f32;                        // in scope 0 at $DIR/early_otherwise_branch_68867.rs:25:16: 25:19\n-      let _23: f32;                        // in scope 0 at $DIR/early_otherwise_branch_68867.rs:25:28: 25:33\n-      let mut _24: f32;                    // in scope 0 at $DIR/early_otherwise_branch_68867.rs:25:44: 25:55\n-      let mut _25: f32;                    // in scope 0 at $DIR/early_otherwise_branch_68867.rs:25:44: 25:47\n-      let mut _26: f32;                    // in scope 0 at $DIR/early_otherwise_branch_68867.rs:25:50: 25:55\n-      let _27: f32;                        // in scope 0 at $DIR/early_otherwise_branch_68867.rs:26:16: 26:19\n-      let _28: f32;                        // in scope 0 at $DIR/early_otherwise_branch_68867.rs:26:28: 26:33\n-      let mut _29: f32;                    // in scope 0 at $DIR/early_otherwise_branch_68867.rs:26:44: 26:55\n-      let mut _30: f32;                    // in scope 0 at $DIR/early_otherwise_branch_68867.rs:26:44: 26:47\n-      let mut _31: f32;                    // in scope 0 at $DIR/early_otherwise_branch_68867.rs:26:50: 26:55\n-      let mut _32: !;                      // in scope 0 at $DIR/early_otherwise_branch_68867.rs:27:14: 27:28\n-      let mut _33: ();                     // in scope 0 at $DIR/early_otherwise_branch_68867.rs:27:25: 27:27\n-+     let mut _34: isize;                  // in scope 0 at $DIR/early_otherwise_branch_68867.rs:23:21: 23:30\n-+     let mut _35: bool;                   // in scope 0 at $DIR/early_otherwise_branch_68867.rs:23:21: 23:30\n+      debug x => _1;                       // in scope 0 at $DIR/early_otherwise_branch_68867.rs:17:5: 17:6\n+      debug other => _2;                   // in scope 0 at $DIR/early_otherwise_branch_68867.rs:18:5: 18:10\n+      let mut _0: std::result::Result<ViewportPercentageLength, ()>; // return place in scope 0 at $DIR/early_otherwise_branch_68867.rs:19:6: 19:42\n+      let mut _3: ViewportPercentageLength; // in scope 0 at $DIR/early_otherwise_branch_68867.rs:21:8: 27:6\n+      let mut _4: (&ViewportPercentageLength, &ViewportPercentageLength); // in scope 0 at $DIR/early_otherwise_branch_68867.rs:21:14: 21:24\n+      let mut _5: &ViewportPercentageLength; // in scope 0 at $DIR/early_otherwise_branch_68867.rs:21:15: 21:16\n+      let mut _6: &ViewportPercentageLength; // in scope 0 at $DIR/early_otherwise_branch_68867.rs:21:18: 21:23\n+      let mut _7: isize;                   // in scope 0 at $DIR/early_otherwise_branch_68867.rs:22:21: 22:30\n+      let mut _8: isize;                   // in scope 0 at $DIR/early_otherwise_branch_68867.rs:23:21: 23:30\n+      let mut _9: isize;                   // in scope 0 at $DIR/early_otherwise_branch_68867.rs:24:23: 24:34\n+      let mut _10: isize;                  // in scope 0 at $DIR/early_otherwise_branch_68867.rs:25:23: 25:34\n+      let mut _11: isize;                  // in scope 0 at $DIR/early_otherwise_branch_68867.rs:22:11: 22:18\n+      let _12: f32;                        // in scope 0 at $DIR/early_otherwise_branch_68867.rs:22:14: 22:17\n+      let _13: f32;                        // in scope 0 at $DIR/early_otherwise_branch_68867.rs:22:24: 22:29\n+      let mut _14: f32;                    // in scope 0 at $DIR/early_otherwise_branch_68867.rs:22:38: 22:49\n+      let mut _15: f32;                    // in scope 0 at $DIR/early_otherwise_branch_68867.rs:22:38: 22:41\n+      let mut _16: f32;                    // in scope 0 at $DIR/early_otherwise_branch_68867.rs:22:44: 22:49\n+      let _17: f32;                        // in scope 0 at $DIR/early_otherwise_branch_68867.rs:23:14: 23:17\n+      let _18: f32;                        // in scope 0 at $DIR/early_otherwise_branch_68867.rs:23:24: 23:29\n+      let mut _19: f32;                    // in scope 0 at $DIR/early_otherwise_branch_68867.rs:23:38: 23:49\n+      let mut _20: f32;                    // in scope 0 at $DIR/early_otherwise_branch_68867.rs:23:38: 23:41\n+      let mut _21: f32;                    // in scope 0 at $DIR/early_otherwise_branch_68867.rs:23:44: 23:49\n+      let _22: f32;                        // in scope 0 at $DIR/early_otherwise_branch_68867.rs:24:16: 24:19\n+      let _23: f32;                        // in scope 0 at $DIR/early_otherwise_branch_68867.rs:24:28: 24:33\n+      let mut _24: f32;                    // in scope 0 at $DIR/early_otherwise_branch_68867.rs:24:44: 24:55\n+      let mut _25: f32;                    // in scope 0 at $DIR/early_otherwise_branch_68867.rs:24:44: 24:47\n+      let mut _26: f32;                    // in scope 0 at $DIR/early_otherwise_branch_68867.rs:24:50: 24:55\n+      let _27: f32;                        // in scope 0 at $DIR/early_otherwise_branch_68867.rs:25:16: 25:19\n+      let _28: f32;                        // in scope 0 at $DIR/early_otherwise_branch_68867.rs:25:28: 25:33\n+      let mut _29: f32;                    // in scope 0 at $DIR/early_otherwise_branch_68867.rs:25:44: 25:55\n+      let mut _30: f32;                    // in scope 0 at $DIR/early_otherwise_branch_68867.rs:25:44: 25:47\n+      let mut _31: f32;                    // in scope 0 at $DIR/early_otherwise_branch_68867.rs:25:50: 25:55\n+      let mut _32: !;                      // in scope 0 at $DIR/early_otherwise_branch_68867.rs:26:14: 26:28\n+      let mut _33: ();                     // in scope 0 at $DIR/early_otherwise_branch_68867.rs:26:25: 26:27\n++     let mut _34: isize;                  // in scope 0 at $DIR/early_otherwise_branch_68867.rs:22:21: 22:30\n++     let mut _35: bool;                   // in scope 0 at $DIR/early_otherwise_branch_68867.rs:22:21: 22:30\n       scope 1 {\n-          debug one => _12;                // in scope 1 at $DIR/early_otherwise_branch_68867.rs:23:14: 23:17\n-          debug other => _13;              // in scope 1 at $DIR/early_otherwise_branch_68867.rs:23:24: 23:29\n+          debug one => _12;                // in scope 1 at $DIR/early_otherwise_branch_68867.rs:22:14: 22:17\n+          debug other => _13;              // in scope 1 at $DIR/early_otherwise_branch_68867.rs:22:24: 22:29\n       }\n       scope 2 {\n-          debug one => _17;                // in scope 2 at $DIR/early_otherwise_branch_68867.rs:24:14: 24:17\n-          debug other => _18;              // in scope 2 at $DIR/early_otherwise_branch_68867.rs:24:24: 24:29\n+          debug one => _17;                // in scope 2 at $DIR/early_otherwise_branch_68867.rs:23:14: 23:17\n+          debug other => _18;              // in scope 2 at $DIR/early_otherwise_branch_68867.rs:23:24: 23:29\n       }\n       scope 3 {\n-          debug one => _22;                // in scope 3 at $DIR/early_otherwise_branch_68867.rs:25:16: 25:19\n-          debug other => _23;              // in scope 3 at $DIR/early_otherwise_branch_68867.rs:25:28: 25:33\n+          debug one => _22;                // in scope 3 at $DIR/early_otherwise_branch_68867.rs:24:16: 24:19\n+          debug other => _23;              // in scope 3 at $DIR/early_otherwise_branch_68867.rs:24:28: 24:33\n       }\n       scope 4 {\n-          debug one => _27;                // in scope 4 at $DIR/early_otherwise_branch_68867.rs:26:16: 26:19\n-          debug other => _28;              // in scope 4 at $DIR/early_otherwise_branch_68867.rs:26:28: 26:33\n+          debug one => _27;                // in scope 4 at $DIR/early_otherwise_branch_68867.rs:25:16: 25:19\n+          debug other => _28;              // in scope 4 at $DIR/early_otherwise_branch_68867.rs:25:28: 25:33\n       }\n   \n       bb0: {\n-          StorageLive(_3);                 // scope 0 at $DIR/early_otherwise_branch_68867.rs:22:8: 28:6\n-          StorageLive(_4);                 // scope 0 at $DIR/early_otherwise_branch_68867.rs:22:14: 22:24\n-          StorageLive(_5);                 // scope 0 at $DIR/early_otherwise_branch_68867.rs:22:15: 22:16\n-          _5 = _1;                         // scope 0 at $DIR/early_otherwise_branch_68867.rs:22:15: 22:16\n-          StorageLive(_6);                 // scope 0 at $DIR/early_otherwise_branch_68867.rs:22:18: 22:23\n-          _6 = _2;                         // scope 0 at $DIR/early_otherwise_branch_68867.rs:22:18: 22:23\n-          (_4.0: &ViewportPercentageLength) = move _5; // scope 0 at $DIR/early_otherwise_branch_68867.rs:22:14: 22:24\n-          (_4.1: &ViewportPercentageLength) = move _6; // scope 0 at $DIR/early_otherwise_branch_68867.rs:22:14: 22:24\n-          StorageDead(_6);                 // scope 0 at $DIR/early_otherwise_branch_68867.rs:22:23: 22:24\n-          StorageDead(_5);                 // scope 0 at $DIR/early_otherwise_branch_68867.rs:22:23: 22:24\n-          _11 = discriminant((*(_4.0: &ViewportPercentageLength))); // scope 0 at $DIR/early_otherwise_branch_68867.rs:23:11: 23:18\n--         switchInt(move _11) -> [0_isize: bb1, 1_isize: bb3, 2_isize: bb4, 3_isize: bb5, otherwise: bb2]; // scope 0 at $DIR/early_otherwise_branch_68867.rs:23:11: 23:18\n-+         StorageLive(_34);                // scope 0 at $DIR/early_otherwise_branch_68867.rs:23:11: 23:18\n-+         _34 = discriminant((*(_4.1: &ViewportPercentageLength))); // scope 0 at $DIR/early_otherwise_branch_68867.rs:23:11: 23:18\n-+         StorageLive(_35);                // scope 0 at $DIR/early_otherwise_branch_68867.rs:23:11: 23:18\n-+         _35 = Ne(_34, _11);              // scope 0 at $DIR/early_otherwise_branch_68867.rs:23:11: 23:18\n-+         StorageDead(_34);                // scope 0 at $DIR/early_otherwise_branch_68867.rs:23:11: 23:18\n-+         switchInt(move _35) -> [false: bb7, otherwise: bb1]; // scope 0 at $DIR/early_otherwise_branch_68867.rs:23:11: 23:18\n+          StorageLive(_3);                 // scope 0 at $DIR/early_otherwise_branch_68867.rs:21:8: 27:6\n+          StorageLive(_4);                 // scope 0 at $DIR/early_otherwise_branch_68867.rs:21:14: 21:24\n+          StorageLive(_5);                 // scope 0 at $DIR/early_otherwise_branch_68867.rs:21:15: 21:16\n+          _5 = _1;                         // scope 0 at $DIR/early_otherwise_branch_68867.rs:21:15: 21:16\n+          StorageLive(_6);                 // scope 0 at $DIR/early_otherwise_branch_68867.rs:21:18: 21:23\n+          _6 = _2;                         // scope 0 at $DIR/early_otherwise_branch_68867.rs:21:18: 21:23\n+          (_4.0: &ViewportPercentageLength) = move _5; // scope 0 at $DIR/early_otherwise_branch_68867.rs:21:14: 21:24\n+          (_4.1: &ViewportPercentageLength) = move _6; // scope 0 at $DIR/early_otherwise_branch_68867.rs:21:14: 21:24\n+          StorageDead(_6);                 // scope 0 at $DIR/early_otherwise_branch_68867.rs:21:23: 21:24\n+          StorageDead(_5);                 // scope 0 at $DIR/early_otherwise_branch_68867.rs:21:23: 21:24\n+          _11 = discriminant((*(_4.0: &ViewportPercentageLength))); // scope 0 at $DIR/early_otherwise_branch_68867.rs:22:11: 22:18\n+-         switchInt(move _11) -> [0_isize: bb1, 1_isize: bb3, 2_isize: bb4, 3_isize: bb5, otherwise: bb2]; // scope 0 at $DIR/early_otherwise_branch_68867.rs:22:11: 22:18\n++         StorageLive(_34);                // scope 0 at $DIR/early_otherwise_branch_68867.rs:22:11: 22:18\n++         _34 = discriminant((*(_4.1: &ViewportPercentageLength))); // scope 0 at $DIR/early_otherwise_branch_68867.rs:22:11: 22:18\n++         StorageLive(_35);                // scope 0 at $DIR/early_otherwise_branch_68867.rs:22:11: 22:18\n++         _35 = Ne(_34, _11);              // scope 0 at $DIR/early_otherwise_branch_68867.rs:22:11: 22:18\n++         StorageDead(_34);                // scope 0 at $DIR/early_otherwise_branch_68867.rs:22:11: 22:18\n++         switchInt(move _35) -> [false: bb7, otherwise: bb1]; // scope 0 at $DIR/early_otherwise_branch_68867.rs:22:11: 22:18\n       }\n   \n       bb1: {\n--         _7 = discriminant((*(_4.1: &ViewportPercentageLength))); // scope 0 at $DIR/early_otherwise_branch_68867.rs:23:21: 23:30\n--         switchInt(move _7) -> [0_isize: bb6, otherwise: bb2]; // scope 0 at $DIR/early_otherwise_branch_68867.rs:23:21: 23:30\n+-         _7 = discriminant((*(_4.1: &ViewportPercentageLength))); // scope 0 at $DIR/early_otherwise_branch_68867.rs:22:21: 22:30\n+-         switchInt(move _7) -> [0_isize: bb6, otherwise: bb2]; // scope 0 at $DIR/early_otherwise_branch_68867.rs:22:21: 22:30\n -     }\n - \n -     bb2: {\n-+         StorageDead(_35);                // scope 0 at $DIR/early_otherwise_branch_68867.rs:27:25: 27:27\n-          StorageLive(_33);                // scope 0 at $DIR/early_otherwise_branch_68867.rs:27:25: 27:27\n--         nop;                             // scope 0 at $DIR/early_otherwise_branch_68867.rs:27:21: 27:28\n-          discriminant(_0) = 1;            // scope 0 at $DIR/early_otherwise_branch_68867.rs:27:21: 27:28\n-          StorageDead(_33);                // scope 0 at $DIR/early_otherwise_branch_68867.rs:27:27: 27:28\n-          StorageDead(_3);                 // scope 0 at $DIR/early_otherwise_branch_68867.rs:28:6: 28:7\n-          StorageDead(_4);                 // scope 0 at $DIR/early_otherwise_branch_68867.rs:29:1: 29:2\n-          return;                          // scope 0 at $DIR/early_otherwise_branch_68867.rs:29:2: 29:2\n++         StorageDead(_35);                // scope 0 at $DIR/early_otherwise_branch_68867.rs:26:25: 26:27\n+          StorageLive(_33);                // scope 0 at $DIR/early_otherwise_branch_68867.rs:26:25: 26:27\n+-         nop;                             // scope 0 at $DIR/early_otherwise_branch_68867.rs:26:21: 26:28\n+          discriminant(_0) = 1;            // scope 0 at $DIR/early_otherwise_branch_68867.rs:26:21: 26:28\n+          StorageDead(_33);                // scope 0 at $DIR/early_otherwise_branch_68867.rs:26:27: 26:28\n+          StorageDead(_3);                 // scope 0 at $DIR/early_otherwise_branch_68867.rs:27:6: 27:7\n+          StorageDead(_4);                 // scope 0 at $DIR/early_otherwise_branch_68867.rs:28:1: 28:2\n+          return;                          // scope 0 at $DIR/early_otherwise_branch_68867.rs:28:2: 28:2\n       }\n   \n -     bb3: {\n--         _8 = discriminant((*(_4.1: &ViewportPercentageLength))); // scope 0 at $DIR/early_otherwise_branch_68867.rs:24:21: 24:30\n--         switchInt(move _8) -> [1_isize: bb7, otherwise: bb2]; // scope 0 at $DIR/early_otherwise_branch_68867.rs:24:21: 24:30\n+-         _8 = discriminant((*(_4.1: &ViewportPercentageLength))); // scope 0 at $DIR/early_otherwise_branch_68867.rs:23:21: 23:30\n+-         switchInt(move _8) -> [1_isize: bb7, otherwise: bb2]; // scope 0 at $DIR/early_otherwise_branch_68867.rs:23:21: 23:30\n -     }\n - \n -     bb4: {\n--         _9 = discriminant((*(_4.1: &ViewportPercentageLength))); // scope 0 at $DIR/early_otherwise_branch_68867.rs:25:23: 25:34\n--         switchInt(move _9) -> [2_isize: bb8, otherwise: bb2]; // scope 0 at $DIR/early_otherwise_branch_68867.rs:25:23: 25:34\n+-         _9 = discriminant((*(_4.1: &ViewportPercentageLength))); // scope 0 at $DIR/early_otherwise_branch_68867.rs:24:23: 24:34\n+-         switchInt(move _9) -> [2_isize: bb8, otherwise: bb2]; // scope 0 at $DIR/early_otherwise_branch_68867.rs:24:23: 24:34\n -     }\n - \n -     bb5: {\n--         _10 = discriminant((*(_4.1: &ViewportPercentageLength))); // scope 0 at $DIR/early_otherwise_branch_68867.rs:26:23: 26:34\n--         switchInt(move _10) -> [3_isize: bb9, otherwise: bb2]; // scope 0 at $DIR/early_otherwise_branch_68867.rs:26:23: 26:34\n+-         _10 = discriminant((*(_4.1: &ViewportPercentageLength))); // scope 0 at $DIR/early_otherwise_branch_68867.rs:25:23: 25:34\n+-         switchInt(move _10) -> [3_isize: bb9, otherwise: bb2]; // scope 0 at $DIR/early_otherwise_branch_68867.rs:25:23: 25:34\n -     }\n - \n -     bb6: {\n +     bb2: {\n-          StorageLive(_12);                // scope 0 at $DIR/early_otherwise_branch_68867.rs:23:14: 23:17\n-          _12 = (((*(_4.0: &ViewportPercentageLength)) as Vw).0: f32); // scope 0 at $DIR/early_otherwise_branch_68867.rs:23:14: 23:17\n-          StorageLive(_13);                // scope 0 at $DIR/early_otherwise_branch_68867.rs:23:24: 23:29\n-          _13 = (((*(_4.1: &ViewportPercentageLength)) as Vw).0: f32); // scope 0 at $DIR/early_otherwise_branch_68867.rs:23:24: 23:29\n-          StorageLive(_14);                // scope 1 at $DIR/early_otherwise_branch_68867.rs:23:38: 23:49\n-          StorageLive(_15);                // scope 1 at $DIR/early_otherwise_branch_68867.rs:23:38: 23:41\n-          _15 = _12;                       // scope 1 at $DIR/early_otherwise_branch_68867.rs:23:38: 23:41\n-          StorageLive(_16);                // scope 1 at $DIR/early_otherwise_branch_68867.rs:23:44: 23:49\n-          _16 = _13;                       // scope 1 at $DIR/early_otherwise_branch_68867.rs:23:44: 23:49\n-          _14 = Add(move _15, move _16);   // scope 1 at $DIR/early_otherwise_branch_68867.rs:23:38: 23:49\n-          StorageDead(_16);                // scope 1 at $DIR/early_otherwise_branch_68867.rs:23:48: 23:49\n-          StorageDead(_15);                // scope 1 at $DIR/early_otherwise_branch_68867.rs:23:48: 23:49\n-          ((_3 as Vw).0: f32) = move _14;  // scope 1 at $DIR/early_otherwise_branch_68867.rs:23:35: 23:50\n-          discriminant(_3) = 0;            // scope 1 at $DIR/early_otherwise_branch_68867.rs:23:35: 23:50\n-          StorageDead(_14);                // scope 1 at $DIR/early_otherwise_branch_68867.rs:23:49: 23:50\n-          StorageDead(_13);                // scope 0 at $DIR/early_otherwise_branch_68867.rs:23:49: 23:50\n-          StorageDead(_12);                // scope 0 at $DIR/early_otherwise_branch_68867.rs:23:49: 23:50\n--         goto -> bb10;                    // scope 0 at $DIR/early_otherwise_branch_68867.rs:22:8: 28:6\n-+         goto -> bb6;                     // scope 0 at $DIR/early_otherwise_branch_68867.rs:22:8: 28:6\n+          StorageLive(_12);                // scope 0 at $DIR/early_otherwise_branch_68867.rs:22:14: 22:17\n+          _12 = (((*(_4.0: &ViewportPercentageLength)) as Vw).0: f32); // scope 0 at $DIR/early_otherwise_branch_68867.rs:22:14: 22:17\n+          StorageLive(_13);                // scope 0 at $DIR/early_otherwise_branch_68867.rs:22:24: 22:29\n+          _13 = (((*(_4.1: &ViewportPercentageLength)) as Vw).0: f32); // scope 0 at $DIR/early_otherwise_branch_68867.rs:22:24: 22:29\n+          StorageLive(_14);                // scope 1 at $DIR/early_otherwise_branch_68867.rs:22:38: 22:49\n+          StorageLive(_15);                // scope 1 at $DIR/early_otherwise_branch_68867.rs:22:38: 22:41\n+          _15 = _12;                       // scope 1 at $DIR/early_otherwise_branch_68867.rs:22:38: 22:41\n+          StorageLive(_16);                // scope 1 at $DIR/early_otherwise_branch_68867.rs:22:44: 22:49\n+          _16 = _13;                       // scope 1 at $DIR/early_otherwise_branch_68867.rs:22:44: 22:49\n+          _14 = Add(move _15, move _16);   // scope 1 at $DIR/early_otherwise_branch_68867.rs:22:38: 22:49\n+          StorageDead(_16);                // scope 1 at $DIR/early_otherwise_branch_68867.rs:22:48: 22:49\n+          StorageDead(_15);                // scope 1 at $DIR/early_otherwise_branch_68867.rs:22:48: 22:49\n+          ((_3 as Vw).0: f32) = move _14;  // scope 1 at $DIR/early_otherwise_branch_68867.rs:22:35: 22:50\n+          discriminant(_3) = 0;            // scope 1 at $DIR/early_otherwise_branch_68867.rs:22:35: 22:50\n+          StorageDead(_14);                // scope 1 at $DIR/early_otherwise_branch_68867.rs:22:49: 22:50\n+          StorageDead(_13);                // scope 0 at $DIR/early_otherwise_branch_68867.rs:22:49: 22:50\n+          StorageDead(_12);                // scope 0 at $DIR/early_otherwise_branch_68867.rs:22:49: 22:50\n+-         goto -> bb10;                    // scope 0 at $DIR/early_otherwise_branch_68867.rs:21:8: 27:6\n++         goto -> bb6;                     // scope 0 at $DIR/early_otherwise_branch_68867.rs:21:8: 27:6\n       }\n   \n -     bb7: {\n +     bb3: {\n-          StorageLive(_17);                // scope 0 at $DIR/early_otherwise_branch_68867.rs:24:14: 24:17\n-          _17 = (((*(_4.0: &ViewportPercentageLength)) as Vh).0: f32); // scope 0 at $DIR/early_otherwise_branch_68867.rs:24:14: 24:17\n-          StorageLive(_18);                // scope 0 at $DIR/early_otherwise_branch_68867.rs:24:24: 24:29\n-          _18 = (((*(_4.1: &ViewportPercentageLength)) as Vh).0: f32); // scope 0 at $DIR/early_otherwise_branch_68867.rs:24:24: 24:29\n-          StorageLive(_19);                // scope 2 at $DIR/early_otherwise_branch_68867.rs:24:38: 24:49\n-          StorageLive(_20);                // scope 2 at $DIR/early_otherwise_branch_68867.rs:24:38: 24:41\n-          _20 = _17;                       // scope 2 at $DIR/early_otherwise_branch_68867.rs:24:38: 24:41\n-          StorageLive(_21);                // scope 2 at $DIR/early_otherwise_branch_68867.rs:24:44: 24:49\n-          _21 = _18;                       // scope 2 at $DIR/early_otherwise_branch_68867.rs:24:44: 24:49\n-          _19 = Add(move _20, move _21);   // scope 2 at $DIR/early_otherwise_branch_68867.rs:24:38: 24:49\n-          StorageDead(_21);                // scope 2 at $DIR/early_otherwise_branch_68867.rs:24:48: 24:49\n-          StorageDead(_20);                // scope 2 at $DIR/early_otherwise_branch_68867.rs:24:48: 24:49\n-          ((_3 as Vh).0: f32) = move _19;  // scope 2 at $DIR/early_otherwise_branch_68867.rs:24:35: 24:50\n-          discriminant(_3) = 1;            // scope 2 at $DIR/early_otherwise_branch_68867.rs:24:35: 24:50\n-          StorageDead(_19);                // scope 2 at $DIR/early_otherwise_branch_68867.rs:24:49: 24:50\n-          StorageDead(_18);                // scope 0 at $DIR/early_otherwise_branch_68867.rs:24:49: 24:50\n-          StorageDead(_17);                // scope 0 at $DIR/early_otherwise_branch_68867.rs:24:49: 24:50\n--         goto -> bb10;                    // scope 0 at $DIR/early_otherwise_branch_68867.rs:22:8: 28:6\n-+         goto -> bb6;                     // scope 0 at $DIR/early_otherwise_branch_68867.rs:22:8: 28:6\n+          StorageLive(_17);                // scope 0 at $DIR/early_otherwise_branch_68867.rs:23:14: 23:17\n+          _17 = (((*(_4.0: &ViewportPercentageLength)) as Vh).0: f32); // scope 0 at $DIR/early_otherwise_branch_68867.rs:23:14: 23:17\n+          StorageLive(_18);                // scope 0 at $DIR/early_otherwise_branch_68867.rs:23:24: 23:29\n+          _18 = (((*(_4.1: &ViewportPercentageLength)) as Vh).0: f32); // scope 0 at $DIR/early_otherwise_branch_68867.rs:23:24: 23:29\n+          StorageLive(_19);                // scope 2 at $DIR/early_otherwise_branch_68867.rs:23:38: 23:49\n+          StorageLive(_20);                // scope 2 at $DIR/early_otherwise_branch_68867.rs:23:38: 23:41\n+          _20 = _17;                       // scope 2 at $DIR/early_otherwise_branch_68867.rs:23:38: 23:41\n+          StorageLive(_21);                // scope 2 at $DIR/early_otherwise_branch_68867.rs:23:44: 23:49\n+          _21 = _18;                       // scope 2 at $DIR/early_otherwise_branch_68867.rs:23:44: 23:49\n+          _19 = Add(move _20, move _21);   // scope 2 at $DIR/early_otherwise_branch_68867.rs:23:38: 23:49\n+          StorageDead(_21);                // scope 2 at $DIR/early_otherwise_branch_68867.rs:23:48: 23:49\n+          StorageDead(_20);                // scope 2 at $DIR/early_otherwise_branch_68867.rs:23:48: 23:49\n+          ((_3 as Vh).0: f32) = move _19;  // scope 2 at $DIR/early_otherwise_branch_68867.rs:23:35: 23:50\n+          discriminant(_3) = 1;            // scope 2 at $DIR/early_otherwise_branch_68867.rs:23:35: 23:50\n+          StorageDead(_19);                // scope 2 at $DIR/early_otherwise_branch_68867.rs:23:49: 23:50\n+          StorageDead(_18);                // scope 0 at $DIR/early_otherwise_branch_68867.rs:23:49: 23:50\n+          StorageDead(_17);                // scope 0 at $DIR/early_otherwise_branch_68867.rs:23:49: 23:50\n+-         goto -> bb10;                    // scope 0 at $DIR/early_otherwise_branch_68867.rs:21:8: 27:6\n++         goto -> bb6;                     // scope 0 at $DIR/early_otherwise_branch_68867.rs:21:8: 27:6\n       }\n   \n -     bb8: {\n +     bb4: {\n-          StorageLive(_22);                // scope 0 at $DIR/early_otherwise_branch_68867.rs:25:16: 25:19\n-          _22 = (((*(_4.0: &ViewportPercentageLength)) as Vmin).0: f32); // scope 0 at $DIR/early_otherwise_branch_68867.rs:25:16: 25:19\n-          StorageLive(_23);                // scope 0 at $DIR/early_otherwise_branch_68867.rs:25:28: 25:33\n-          _23 = (((*(_4.1: &ViewportPercentageLength)) as Vmin).0: f32); // scope 0 at $DIR/early_otherwise_branch_68867.rs:25:28: 25:33\n-          StorageLive(_24);                // scope 3 at $DIR/early_otherwise_branch_68867.rs:25:44: 25:55\n-          StorageLive(_25);                // scope 3 at $DIR/early_otherwise_branch_68867.rs:25:44: 25:47\n-          _25 = _22;                       // scope 3 at $DIR/early_otherwise_branch_68867.rs:25:44: 25:47\n-          StorageLive(_26);                // scope 3 at $DIR/early_otherwise_branch_68867.rs:25:50: 25:55\n-          _26 = _23;                       // scope 3 at $DIR/early_otherwise_branch_68867.rs:25:50: 25:55\n-          _24 = Add(move _25, move _26);   // scope 3 at $DIR/early_otherwise_branch_68867.rs:25:44: 25:55\n-          StorageDead(_26);                // scope 3 at $DIR/early_otherwise_branch_68867.rs:25:54: 25:55\n-          StorageDead(_25);                // scope 3 at $DIR/early_otherwise_branch_68867.rs:25:54: 25:55\n-          ((_3 as Vmin).0: f32) = move _24; // scope 3 at $DIR/early_otherwise_branch_68867.rs:25:39: 25:56\n-          discriminant(_3) = 2;            // scope 3 at $DIR/early_otherwise_branch_68867.rs:25:39: 25:56\n-          StorageDead(_24);                // scope 3 at $DIR/early_otherwise_branch_68867.rs:25:55: 25:56\n-          StorageDead(_23);                // scope 0 at $DIR/early_otherwise_branch_68867.rs:25:55: 25:56\n-          StorageDead(_22);                // scope 0 at $DIR/early_otherwise_branch_68867.rs:25:55: 25:56\n--         goto -> bb10;                    // scope 0 at $DIR/early_otherwise_branch_68867.rs:22:8: 28:6\n-+         goto -> bb6;                     // scope 0 at $DIR/early_otherwise_branch_68867.rs:22:8: 28:6\n+          StorageLive(_22);                // scope 0 at $DIR/early_otherwise_branch_68867.rs:24:16: 24:19\n+          _22 = (((*(_4.0: &ViewportPercentageLength)) as Vmin).0: f32); // scope 0 at $DIR/early_otherwise_branch_68867.rs:24:16: 24:19\n+          StorageLive(_23);                // scope 0 at $DIR/early_otherwise_branch_68867.rs:24:28: 24:33\n+          _23 = (((*(_4.1: &ViewportPercentageLength)) as Vmin).0: f32); // scope 0 at $DIR/early_otherwise_branch_68867.rs:24:28: 24:33\n+          StorageLive(_24);                // scope 3 at $DIR/early_otherwise_branch_68867.rs:24:44: 24:55\n+          StorageLive(_25);                // scope 3 at $DIR/early_otherwise_branch_68867.rs:24:44: 24:47\n+          _25 = _22;                       // scope 3 at $DIR/early_otherwise_branch_68867.rs:24:44: 24:47\n+          StorageLive(_26);                // scope 3 at $DIR/early_otherwise_branch_68867.rs:24:50: 24:55\n+          _26 = _23;                       // scope 3 at $DIR/early_otherwise_branch_68867.rs:24:50: 24:55\n+          _24 = Add(move _25, move _26);   // scope 3 at $DIR/early_otherwise_branch_68867.rs:24:44: 24:55\n+          StorageDead(_26);                // scope 3 at $DIR/early_otherwise_branch_68867.rs:24:54: 24:55\n+          StorageDead(_25);                // scope 3 at $DIR/early_otherwise_branch_68867.rs:24:54: 24:55\n+          ((_3 as Vmin).0: f32) = move _24; // scope 3 at $DIR/early_otherwise_branch_68867.rs:24:39: 24:56\n+          discriminant(_3) = 2;            // scope 3 at $DIR/early_otherwise_branch_68867.rs:24:39: 24:56\n+          StorageDead(_24);                // scope 3 at $DIR/early_otherwise_branch_68867.rs:24:55: 24:56\n+          StorageDead(_23);                // scope 0 at $DIR/early_otherwise_branch_68867.rs:24:55: 24:56\n+          StorageDead(_22);                // scope 0 at $DIR/early_otherwise_branch_68867.rs:24:55: 24:56\n+-         goto -> bb10;                    // scope 0 at $DIR/early_otherwise_branch_68867.rs:21:8: 27:6\n++         goto -> bb6;                     // scope 0 at $DIR/early_otherwise_branch_68867.rs:21:8: 27:6\n       }\n   \n -     bb9: {\n +     bb5: {\n-          StorageLive(_27);                // scope 0 at $DIR/early_otherwise_branch_68867.rs:26:16: 26:19\n-          _27 = (((*(_4.0: &ViewportPercentageLength)) as Vmax).0: f32); // scope 0 at $DIR/early_otherwise_branch_68867.rs:26:16: 26:19\n-          StorageLive(_28);                // scope 0 at $DIR/early_otherwise_branch_68867.rs:26:28: 26:33\n-          _28 = (((*(_4.1: &ViewportPercentageLength)) as Vmax).0: f32); // scope 0 at $DIR/early_otherwise_branch_68867.rs:26:28: 26:33\n-          StorageLive(_29);                // scope 4 at $DIR/early_otherwise_branch_68867.rs:26:44: 26:55\n-          StorageLive(_30);                // scope 4 at $DIR/early_otherwise_branch_68867.rs:26:44: 26:47\n-          _30 = _27;                       // scope 4 at $DIR/early_otherwise_branch_68867.rs:26:44: 26:47\n-          StorageLive(_31);                // scope 4 at $DIR/early_otherwise_branch_68867.rs:26:50: 26:55\n-          _31 = _28;                       // scope 4 at $DIR/early_otherwise_branch_68867.rs:26:50: 26:55\n-          _29 = Add(move _30, move _31);   // scope 4 at $DIR/early_otherwise_branch_68867.rs:26:44: 26:55\n-          StorageDead(_31);                // scope 4 at $DIR/early_otherwise_branch_68867.rs:26:54: 26:55\n-          StorageDead(_30);                // scope 4 at $DIR/early_otherwise_branch_68867.rs:26:54: 26:55\n-          ((_3 as Vmax).0: f32) = move _29; // scope 4 at $DIR/early_otherwise_branch_68867.rs:26:39: 26:56\n-          discriminant(_3) = 3;            // scope 4 at $DIR/early_otherwise_branch_68867.rs:26:39: 26:56\n-          StorageDead(_29);                // scope 4 at $DIR/early_otherwise_branch_68867.rs:26:55: 26:56\n-          StorageDead(_28);                // scope 0 at $DIR/early_otherwise_branch_68867.rs:26:55: 26:56\n-          StorageDead(_27);                // scope 0 at $DIR/early_otherwise_branch_68867.rs:26:55: 26:56\n--         goto -> bb10;                    // scope 0 at $DIR/early_otherwise_branch_68867.rs:22:8: 28:6\n-+         goto -> bb6;                     // scope 0 at $DIR/early_otherwise_branch_68867.rs:22:8: 28:6\n+          StorageLive(_27);                // scope 0 at $DIR/early_otherwise_branch_68867.rs:25:16: 25:19\n+          _27 = (((*(_4.0: &ViewportPercentageLength)) as Vmax).0: f32); // scope 0 at $DIR/early_otherwise_branch_68867.rs:25:16: 25:19\n+          StorageLive(_28);                // scope 0 at $DIR/early_otherwise_branch_68867.rs:25:28: 25:33\n+          _28 = (((*(_4.1: &ViewportPercentageLength)) as Vmax).0: f32); // scope 0 at $DIR/early_otherwise_branch_68867.rs:25:28: 25:33\n+          StorageLive(_29);                // scope 4 at $DIR/early_otherwise_branch_68867.rs:25:44: 25:55\n+          StorageLive(_30);                // scope 4 at $DIR/early_otherwise_branch_68867.rs:25:44: 25:47\n+          _30 = _27;                       // scope 4 at $DIR/early_otherwise_branch_68867.rs:25:44: 25:47\n+          StorageLive(_31);                // scope 4 at $DIR/early_otherwise_branch_68867.rs:25:50: 25:55\n+          _31 = _28;                       // scope 4 at $DIR/early_otherwise_branch_68867.rs:25:50: 25:55\n+          _29 = Add(move _30, move _31);   // scope 4 at $DIR/early_otherwise_branch_68867.rs:25:44: 25:55\n+          StorageDead(_31);                // scope 4 at $DIR/early_otherwise_branch_68867.rs:25:54: 25:55\n+          StorageDead(_30);                // scope 4 at $DIR/early_otherwise_branch_68867.rs:25:54: 25:55\n+          ((_3 as Vmax).0: f32) = move _29; // scope 4 at $DIR/early_otherwise_branch_68867.rs:25:39: 25:56\n+          discriminant(_3) = 3;            // scope 4 at $DIR/early_otherwise_branch_68867.rs:25:39: 25:56\n+          StorageDead(_29);                // scope 4 at $DIR/early_otherwise_branch_68867.rs:25:55: 25:56\n+          StorageDead(_28);                // scope 0 at $DIR/early_otherwise_branch_68867.rs:25:55: 25:56\n+          StorageDead(_27);                // scope 0 at $DIR/early_otherwise_branch_68867.rs:25:55: 25:56\n+-         goto -> bb10;                    // scope 0 at $DIR/early_otherwise_branch_68867.rs:21:8: 27:6\n++         goto -> bb6;                     // scope 0 at $DIR/early_otherwise_branch_68867.rs:21:8: 27:6\n       }\n   \n -     bb10: {\n +     bb6: {\n-          ((_0 as Ok).0: ViewportPercentageLength) = move _3; // scope 0 at $DIR/early_otherwise_branch_68867.rs:22:5: 28:7\n-          discriminant(_0) = 0;            // scope 0 at $DIR/early_otherwise_branch_68867.rs:22:5: 28:7\n-          StorageDead(_3);                 // scope 0 at $DIR/early_otherwise_branch_68867.rs:28:6: 28:7\n-          StorageDead(_4);                 // scope 0 at $DIR/early_otherwise_branch_68867.rs:29:1: 29:2\n-          return;                          // scope 0 at $DIR/early_otherwise_branch_68867.rs:29:2: 29:2\n+          ((_0 as Ok).0: ViewportPercentageLength) = move _3; // scope 0 at $DIR/early_otherwise_branch_68867.rs:21:5: 27:7\n+          discriminant(_0) = 0;            // scope 0 at $DIR/early_otherwise_branch_68867.rs:21:5: 27:7\n+          StorageDead(_3);                 // scope 0 at $DIR/early_otherwise_branch_68867.rs:27:6: 27:7\n+          StorageDead(_4);                 // scope 0 at $DIR/early_otherwise_branch_68867.rs:28:1: 28:2\n+          return;                          // scope 0 at $DIR/early_otherwise_branch_68867.rs:28:2: 28:2\n +     }\n + \n +     bb7: {\n-+         StorageDead(_35);                // scope 0 at $DIR/early_otherwise_branch_68867.rs:23:21: 23:30\n-+         switchInt(_11) -> [0_isize: bb2, 1_isize: bb3, 2_isize: bb4, 3_isize: bb5, otherwise: bb1]; // scope 0 at $DIR/early_otherwise_branch_68867.rs:23:21: 23:30\n++         StorageDead(_35);                // scope 0 at $DIR/early_otherwise_branch_68867.rs:22:21: 22:30\n++         switchInt(_11) -> [0_isize: bb2, 1_isize: bb3, 2_isize: bb4, 3_isize: bb5, otherwise: bb1]; // scope 0 at $DIR/early_otherwise_branch_68867.rs:22:21: 22:30\n       }\n   }\n   "}, {"sha": "5a6465bd064691c9dcda922549b1e6af81f79673", "filename": "src/test/rustdoc-ui/commandline-argfile-missing.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Frustdoc-ui%2Fcommandline-argfile-missing.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Frustdoc-ui%2Fcommandline-argfile-missing.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2Fcommandline-argfile-missing.rs?ref=3ea62cb5d19846b44172d861ae231c8c09322800", "patch": "@@ -1,6 +1,5 @@\n // Check to see if we can get parameters from an @argsfile file\n //\n-// ignore-tidy-linelength\n // normalize-stderr-test: \"os error \\d+\" -> \"os error $$ERR\"\n // normalize-stderr-test: \"commandline-argfile-missing.args:[^(]*\" -> \"commandline-argfile-missing.args: $$FILE_MISSING \"\n // compile-flags: --cfg cmdline_set @{{src-base}}/commandline-argfile-missing.args"}, {"sha": "94b69a99879c073ac12dd0d53fd6359bc5cbdb73", "filename": "src/test/rustdoc-ui/doc-spotlight.fixed", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Frustdoc-ui%2Fdoc-spotlight.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Frustdoc-ui%2Fdoc-spotlight.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2Fdoc-spotlight.fixed?ref=3ea62cb5d19846b44172d861ae231c8c09322800", "patch": "@@ -1,4 +1,3 @@\n-// ignore-tidy-linelength\n // check-pass\n // run-rustfix\n "}, {"sha": "cc5f159a8093e9c64923cbb89c3cb4614c27ddd5", "filename": "src/test/rustdoc-ui/doc-spotlight.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Frustdoc-ui%2Fdoc-spotlight.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Frustdoc-ui%2Fdoc-spotlight.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2Fdoc-spotlight.rs?ref=3ea62cb5d19846b44172d861ae231c8c09322800", "patch": "@@ -1,4 +1,3 @@\n-// ignore-tidy-linelength\n // check-pass\n // run-rustfix\n "}, {"sha": "e5fa6293f3d8d6bb976b54967fe307f65d14707f", "filename": "src/test/rustdoc-ui/doc-spotlight.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Frustdoc-ui%2Fdoc-spotlight.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Frustdoc-ui%2Fdoc-spotlight.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2Fdoc-spotlight.stderr?ref=3ea62cb5d19846b44172d861ae231c8c09322800", "patch": "@@ -1,5 +1,5 @@\n warning: unknown `doc` attribute `spotlight`\n-  --> $DIR/doc-spotlight.rs:7:7\n+  --> $DIR/doc-spotlight.rs:6:7\n    |\n LL | #[doc(spotlight)]\n    |       ^^^^^^^^^ help: use `notable_trait` instead"}, {"sha": "273fc62aa179348667a94babe15e1b7279b2f347", "filename": "src/test/rustdoc/assoc-item-cast.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Frustdoc%2Fassoc-item-cast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Frustdoc%2Fassoc-item-cast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fassoc-item-cast.rs?ref=3ea62cb5d19846b44172d861ae231c8c09322800", "patch": "@@ -1,6 +1,5 @@\n #![crate_name = \"foo\"]\n \n-// ignore-tidy-linelength\n \n pub trait Expression {\n     type SqlType;"}, {"sha": "82fa7cf9e6057948a03efcc02b4afe301f5dee23", "filename": "src/test/rustdoc/assoc-types.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Frustdoc%2Fassoc-types.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Frustdoc%2Fassoc-types.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fassoc-types.rs?ref=3ea62cb5d19846b44172d861ae231c8c09322800", "patch": "@@ -1,5 +1,3 @@\n-// ignore-tidy-linelength\n-\n #![crate_type=\"lib\"]\n \n // @has assoc_types/trait.Index.html"}, {"sha": "4b66b5271c5ba2aeac377be3a27803db475261a5", "filename": "src/test/rustdoc/async-fn.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Frustdoc%2Fasync-fn.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Frustdoc%2Fasync-fn.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fasync-fn.rs?ref=3ea62cb5d19846b44172d861ae231c8c09322800", "patch": "@@ -1,4 +1,3 @@\n-// ignore-tidy-linelength\n // edition:2018\n // @has async_fn/fn.foo.html '//pre[@class=\"rust fn\"]' 'pub async fn foo() -> Option<Foo>'\n pub async fn foo() -> Option<Foo> {"}, {"sha": "fb5c8517f6cac04d9ac47ef5fb8d914d008bad9a", "filename": "src/test/rustdoc/const-display.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Frustdoc%2Fconst-display.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Frustdoc%2Fconst-display.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fconst-display.rs?ref=3ea62cb5d19846b44172d861ae231c8c09322800", "patch": "@@ -1,5 +1,3 @@\n-// ignore-tidy-linelength\n-\n #![crate_name = \"foo\"]\n \n #![unstable(feature = \"humans\","}, {"sha": "db4be82e6bfd9f7090e6f457d5669843fb517446", "filename": "src/test/rustdoc/const-generics/add-impl.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Frustdoc%2Fconst-generics%2Fadd-impl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Frustdoc%2Fconst-generics%2Fadd-impl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fconst-generics%2Fadd-impl.rs?ref=3ea62cb5d19846b44172d861ae231c8c09322800", "patch": "@@ -1,5 +1,3 @@\n-// ignore-tidy-linelength\n-\n #![feature(const_generics)]\n #![crate_name = \"foo\"]\n "}, {"sha": "04fb339533339da5d1011c156f9b193f4ffb97f1", "filename": "src/test/rustdoc/const-generics/const-impl.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Frustdoc%2Fconst-generics%2Fconst-impl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Frustdoc%2Fconst-generics%2Fconst-impl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fconst-generics%2Fconst-impl.rs?ref=3ea62cb5d19846b44172d861ae231c8c09322800", "patch": "@@ -1,5 +1,3 @@\n-// ignore-tidy-linelength\n-\n #![feature(const_generics)]\n \n #![crate_name = \"foo\"]"}, {"sha": "ebda5b1940455a2ab5611c7f47d9b6afe3a177f0", "filename": "src/test/rustdoc/const-generics/type-alias.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Frustdoc%2Fconst-generics%2Ftype-alias.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Frustdoc%2Fconst-generics%2Ftype-alias.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fconst-generics%2Ftype-alias.rs?ref=3ea62cb5d19846b44172d861ae231c8c09322800", "patch": "@@ -1,4 +1,3 @@\n-// ignore-tidy-linelength\n #![crate_name = \"foo\"]\n \n // @has foo/type.CellIndex.html '//pre[@class=\"rust typedef\"]' 'type CellIndex<const D: usize> = [i64; D];'"}, {"sha": "459a30060c6233ac331075a62229c3e5a45be01a", "filename": "src/test/rustdoc/deref-recursive-pathbuf.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Frustdoc%2Fderef-recursive-pathbuf.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Frustdoc%2Fderef-recursive-pathbuf.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fderef-recursive-pathbuf.rs?ref=3ea62cb5d19846b44172d861ae231c8c09322800", "patch": "@@ -1,5 +1,3 @@\n-// ignore-tidy-linelength\n-\n // #26207: Show all methods reachable via Deref impls, recursing through multiple dereferencing\n // levels and across multiple crates.\n "}, {"sha": "b96b5397ad78b45189bb919ea5cf71600112c5f5", "filename": "src/test/rustdoc/deref-recursive.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Frustdoc%2Fderef-recursive.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Frustdoc%2Fderef-recursive.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fderef-recursive.rs?ref=3ea62cb5d19846b44172d861ae231c8c09322800", "patch": "@@ -1,5 +1,3 @@\n-// ignore-tidy-linelength\n-\n // #26207: Show all methods reachable via Deref impls, recursing through multiple dereferencing\n // levels if needed.\n "}, {"sha": "47009559e6f7447e1c05321c78726fda2ec0d27d", "filename": "src/test/rustdoc/deref-typedef.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Frustdoc%2Fderef-typedef.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Frustdoc%2Fderef-typedef.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fderef-typedef.rs?ref=3ea62cb5d19846b44172d861ae231c8c09322800", "patch": "@@ -1,5 +1,3 @@\n-// ignore-tidy-linelength\n-\n #![crate_name = \"foo\"]\n \n // @has 'foo/struct.Bar.html'"}, {"sha": "546af2c121adbc4dc60dbc07de1c6212545f9f44", "filename": "src/test/rustdoc/double-quote-escape.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Frustdoc%2Fdouble-quote-escape.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Frustdoc%2Fdouble-quote-escape.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fdouble-quote-escape.rs?ref=3ea62cb5d19846b44172d861ae231c8c09322800", "patch": "@@ -1,6 +1,5 @@\n #![crate_name = \"foo\"]\n \n-// ignore-tidy-linelength\n \n pub trait Foo<T> {\n     fn foo() {}"}, {"sha": "cec504ea1517a2c523e818228476ca9a5dcc125b", "filename": "src/test/rustdoc/duplicate-cfg.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Frustdoc%2Fduplicate-cfg.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Frustdoc%2Fduplicate-cfg.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fduplicate-cfg.rs?ref=3ea62cb5d19846b44172d861ae231c8c09322800", "patch": "@@ -1,5 +1,3 @@\n-// ignore-tidy-linelength\n-\n #![crate_name = \"foo\"]\n #![feature(doc_cfg)]\n "}, {"sha": "3959aeb6cfb7f8e17b3e482210420d5990458c48", "filename": "src/test/rustdoc/fn-type.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Frustdoc%2Ffn-type.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Frustdoc%2Ffn-type.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Ffn-type.rs?ref=3ea62cb5d19846b44172d861ae231c8c09322800", "patch": "@@ -1,5 +1,3 @@\n-// ignore-tidy-linelength\n-\n #![crate_name = \"foo\"]\n #![crate_type = \"lib\"]\n "}, {"sha": "34a7eae31c79062fde794a43e560dc7e72d8375d", "filename": "src/test/rustdoc/for-lifetime.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Frustdoc%2Ffor-lifetime.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Frustdoc%2Ffor-lifetime.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Ffor-lifetime.rs?ref=3ea62cb5d19846b44172d861ae231c8c09322800", "patch": "@@ -1,5 +1,3 @@\n-// ignore-tidy-linelength\n-\n #![crate_name = \"foo\"]\n #![crate_type = \"lib\"]\n "}, {"sha": "a2adc0e63c9c01560e4e1ba970ae7a3401030d35", "filename": "src/test/rustdoc/inline_cross/impl_trait.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Frustdoc%2Finline_cross%2Fimpl_trait.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Frustdoc%2Finline_cross%2Fimpl_trait.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Finline_cross%2Fimpl_trait.rs?ref=3ea62cb5d19846b44172d861ae231c8c09322800", "patch": "@@ -1,6 +1,5 @@\n // aux-build:impl_trait_aux.rs\n // edition:2018\n-// ignore-tidy-linelength\n \n extern crate impl_trait_aux;\n "}, {"sha": "28dc7073a3eccc26be1e0f764b39883c811a76f7", "filename": "src/test/rustdoc/intra-doc/associated-defaults.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Frustdoc%2Fintra-doc%2Fassociated-defaults.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Frustdoc%2Fintra-doc%2Fassociated-defaults.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fintra-doc%2Fassociated-defaults.rs?ref=3ea62cb5d19846b44172d861ae231c8c09322800", "patch": "@@ -1,4 +1,3 @@\n-// ignore-tidy-linelength\n #![deny(intra_doc_link_resolution_failure)]\n #![feature(associated_type_defaults)]\n "}, {"sha": "43a43a79738b3cbbfbe0fcd230d4cd8cf8fb0a65", "filename": "src/test/rustdoc/intra-doc/associated-items.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Frustdoc%2Fintra-doc%2Fassociated-items.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Frustdoc%2Fintra-doc%2Fassociated-items.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fintra-doc%2Fassociated-items.rs?ref=3ea62cb5d19846b44172d861ae231c8c09322800", "patch": "@@ -1,4 +1,3 @@\n-// ignore-tidy-linelength\n #![deny(intra_doc_link_resolution_failure)]\n \n /// [`std::collections::BTreeMap::into_iter`]"}, {"sha": "62659ce689a7145ded8ff74124ad93917a37017c", "filename": "src/test/rustdoc/intra-doc/cross-crate/macro.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Frustdoc%2Fintra-doc%2Fcross-crate%2Fmacro.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Frustdoc%2Fintra-doc%2Fcross-crate%2Fmacro.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fintra-doc%2Fcross-crate%2Fmacro.rs?ref=3ea62cb5d19846b44172d861ae231c8c09322800", "patch": "@@ -1,4 +1,3 @@\n-// ignore-tidy-linelength\n // aux-build:macro_inner.rs\n // aux-build:proc_macro.rs\n // build-aux-docs"}, {"sha": "68f5cb3a092e4a93ed4c683fdacf913268552c6f", "filename": "src/test/rustdoc/intra-doc/cross-crate/traits.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Frustdoc%2Fintra-doc%2Fcross-crate%2Ftraits.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Frustdoc%2Fintra-doc%2Fcross-crate%2Ftraits.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fintra-doc%2Fcross-crate%2Ftraits.rs?ref=3ea62cb5d19846b44172d861ae231c8c09322800", "patch": "@@ -1,6 +1,5 @@\n // aux-build:traits.rs\n // build-aux-docs\n-// ignore-tidy-line-length\n #![deny(broken_intra_doc_links)]\n \n extern crate inner;"}, {"sha": "12c3cee29c3acd93c921438bc50134f6778e91cd", "filename": "src/test/rustdoc/intra-doc/disambiguators-removed.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Frustdoc%2Fintra-doc%2Fdisambiguators-removed.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Frustdoc%2Fintra-doc%2Fdisambiguators-removed.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fintra-doc%2Fdisambiguators-removed.rs?ref=3ea62cb5d19846b44172d861ae231c8c09322800", "patch": "@@ -1,4 +1,3 @@\n-// ignore-tidy-linelength\n #![deny(intra_doc_link_resolution_failure)]\n // first try backticks\n /// Trait: [`trait@Name`], fn: [`fn@Name`], [`Name`][`macro@Name`]"}, {"sha": "ee71537d155319bfe8b3615a9017e0263ed5ea73", "filename": "src/test/rustdoc/intra-doc/non-path-primitives.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Frustdoc%2Fintra-doc%2Fnon-path-primitives.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Frustdoc%2Fintra-doc%2Fnon-path-primitives.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fintra-doc%2Fnon-path-primitives.rs?ref=3ea62cb5d19846b44172d861ae231c8c09322800", "patch": "@@ -1,4 +1,3 @@\n-// ignore-tidy-linelength\n #![crate_name = \"foo\"]\n #![feature(intra_doc_pointers)]\n #![deny(rustdoc::broken_intra_doc_links)]"}, {"sha": "4099ececfaf7ccff3d4a308dcd8493947a27ade8", "filename": "src/test/rustdoc/intra-doc/prim-assoc.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Frustdoc%2Fintra-doc%2Fprim-assoc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Frustdoc%2Fintra-doc%2Fprim-assoc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fintra-doc%2Fprim-assoc.rs?ref=3ea62cb5d19846b44172d861ae231c8c09322800", "patch": "@@ -1,4 +1,3 @@\n-// ignore-tidy-linelength\n #![deny(broken_intra_doc_links)]\n \n //! [i32::MAX]"}, {"sha": "695a7fbfb534812c257a6d6d1d4e81e98c8b6a2e", "filename": "src/test/rustdoc/intra-doc/prim-methods-external-core.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Frustdoc%2Fintra-doc%2Fprim-methods-external-core.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Frustdoc%2Fintra-doc%2Fprim-methods-external-core.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fintra-doc%2Fprim-methods-external-core.rs?ref=3ea62cb5d19846b44172d861ae231c8c09322800", "patch": "@@ -2,7 +2,6 @@\n // build-aux-docs\n // ignore-cross-compile\n // ignore-windows\n-// ignore-tidy-linelength\n \n #![deny(broken_intra_doc_links)]\n #![feature(no_core, lang_items)]"}, {"sha": "f0b939a468c0339f3ef351c0824d4e6eaf5dc1e5", "filename": "src/test/rustdoc/intra-doc/prim-methods-local.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Frustdoc%2Fintra-doc%2Fprim-methods-local.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Frustdoc%2Fintra-doc%2Fprim-methods-local.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fintra-doc%2Fprim-methods-local.rs?ref=3ea62cb5d19846b44172d861ae231c8c09322800", "patch": "@@ -3,7 +3,6 @@\n #![no_core]\n #![crate_type = \"rlib\"]\n \n-// ignore-tidy-linelength\n \n // @has prim_methods_local/index.html\n // @has - '//*[@id=\"main\"]//a[@href=\"https://doc.rust-lang.org/nightly/std/primitive.char.html\"]' 'char'"}, {"sha": "6de15e76d15cfa6ce610d4da5d6586886e4c0c67", "filename": "src/test/rustdoc/intra-doc/prim-methods.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Frustdoc%2Fintra-doc%2Fprim-methods.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Frustdoc%2Fintra-doc%2Fprim-methods.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fintra-doc%2Fprim-methods.rs?ref=3ea62cb5d19846b44172d861ae231c8c09322800", "patch": "@@ -1,6 +1,5 @@\n #![deny(broken_intra_doc_links)]\n \n-// ignore-tidy-linelength\n \n // @has prim_methods/index.html\n // @has - '//*[@id=\"main\"]//a[@href=\"https://doc.rust-lang.org/nightly/std/primitive.char.html\"]' 'char'"}, {"sha": "ab6e3da17f4ed4db0b96801bdbc4c232a24846d1", "filename": "src/test/rustdoc/intra-doc/prim-precedence.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Frustdoc%2Fintra-doc%2Fprim-precedence.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Frustdoc%2Fintra-doc%2Fprim-precedence.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fintra-doc%2Fprim-precedence.rs?ref=3ea62cb5d19846b44172d861ae231c8c09322800", "patch": "@@ -1,4 +1,3 @@\n-// ignore-tidy-linelength\n #![deny(broken_intra_doc_links)]\n \n pub mod char {"}, {"sha": "cf83ead4db72c09172343575f98b2a41492c595b", "filename": "src/test/rustdoc/intra-doc/primitive-non-default-impl.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Frustdoc%2Fintra-doc%2Fprimitive-non-default-impl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Frustdoc%2Fintra-doc%2Fprimitive-non-default-impl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fintra-doc%2Fprimitive-non-default-impl.rs?ref=3ea62cb5d19846b44172d861ae231c8c09322800", "patch": "@@ -1,6 +1,5 @@\n #![deny(broken_intra_doc_links)]\n \n-// ignore-tidy-linelength\n \n // @has primitive_non_default_impl/fn.str_methods.html\n /// [`str::trim`]"}, {"sha": "b2b75127b3122b3161b46ca3c48ee046580c47bc", "filename": "src/test/rustdoc/intra-doc/self.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Frustdoc%2Fintra-doc%2Fself.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Frustdoc%2Fintra-doc%2Fself.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fintra-doc%2Fself.rs?ref=3ea62cb5d19846b44172d861ae231c8c09322800", "patch": "@@ -1,6 +1,5 @@\n #![crate_name = \"foo\"]\n \n-// ignore-tidy-linelength\n \n // @has foo/index.html '//a/@href' '../foo/struct.Foo.html#method.new'\n // @has foo/struct.Foo.html '//a/@href' '../foo/struct.Foo.html#method.new'"}, {"sha": "ef1987a829ad20ed4ac57476c203d44d8b655205", "filename": "src/test/rustdoc/intra-doc/trait-impl.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Frustdoc%2Fintra-doc%2Ftrait-impl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Frustdoc%2Fintra-doc%2Ftrait-impl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fintra-doc%2Ftrait-impl.rs?ref=3ea62cb5d19846b44172d861ae231c8c09322800", "patch": "@@ -1,6 +1,5 @@\n #![crate_name = \"foo\"]\n \n-// ignore-tidy-linelength\n \n pub struct MyStruct;\n "}, {"sha": "affd2aaec2d2218de073a00af359bf30d248f8d9", "filename": "src/test/rustdoc/intra-doc/trait-item.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Frustdoc%2Fintra-doc%2Ftrait-item.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Frustdoc%2Fintra-doc%2Ftrait-item.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fintra-doc%2Ftrait-item.rs?ref=3ea62cb5d19846b44172d861ae231c8c09322800", "patch": "@@ -1,4 +1,3 @@\n-// ignore-tidy-linelength\n #![deny(broken_intra_doc_links)]\n \n /// Link to [S::assoc_fn()]"}, {"sha": "db637ece369951770d12063d679713023ecd98ee", "filename": "src/test/rustdoc/intra-doc/true-false.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Frustdoc%2Fintra-doc%2Ftrue-false.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Frustdoc%2Fintra-doc%2Ftrue-false.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fintra-doc%2Ftrue-false.rs?ref=3ea62cb5d19846b44172d861ae231c8c09322800", "patch": "@@ -1,7 +1,6 @@\n #![deny(broken_intra_doc_links)]\n #![crate_name = \"foo\"]\n \n-// ignore-tidy-linelength\n \n // @has foo/index.html\n // @has - '//*[@id=\"main\"]//a[@href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\"]' 'true'"}, {"sha": "19bab394dcf20dc9a991fe9463e979690a08c1c4", "filename": "src/test/rustdoc/issue-29503.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Frustdoc%2Fissue-29503.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Frustdoc%2Fissue-29503.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fissue-29503.rs?ref=3ea62cb5d19846b44172d861ae231c8c09322800", "patch": "@@ -1,5 +1,3 @@\n-// ignore-tidy-linelength\n-\n use std::fmt;\n \n // @has issue_29503/trait.MyTrait.html"}, {"sha": "4aa553f7793396d769862da26af1f132492c3a9c", "filename": "src/test/rustdoc/issue-55364.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Frustdoc%2Fissue-55364.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Frustdoc%2Fissue-55364.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fissue-55364.rs?ref=3ea62cb5d19846b44172d861ae231c8c09322800", "patch": "@@ -1,5 +1,3 @@\n-// ignore-tidy-linelength\n-\n // First a module with inner documentation\n \n // @has issue_55364/subone/index.html"}, {"sha": "aebffeff5f05e5a0c8f1c5225741c721d5e50f41", "filename": "src/test/rustdoc/issue-75588.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Frustdoc%2Fissue-75588.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Frustdoc%2Fissue-75588.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fissue-75588.rs?ref=3ea62cb5d19846b44172d861ae231c8c09322800", "patch": "@@ -1,4 +1,3 @@\n-// ignore-tidy-linelength\n // aux-build:realcore.rs\n // aux-build:real_gimli.rs\n "}, {"sha": "69c89626539319edb39ab24a482171ed24b8ffca", "filename": "src/test/rustdoc/playground-arg.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Frustdoc%2Fplayground-arg.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Frustdoc%2Fplayground-arg.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fplayground-arg.rs?ref=3ea62cb5d19846b44172d861ae231c8c09322800", "patch": "@@ -1,5 +1,4 @@\n // compile-flags: --playground-url=https://example.com/ -Z unstable-options\n-// ignore-tidy-linelength\n \n #![crate_name = \"foo\"]\n "}, {"sha": "877ea1cfba15a83cfdd6a1b2fc8c09d087547f45", "filename": "src/test/rustdoc/playground.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Frustdoc%2Fplayground.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Frustdoc%2Fplayground.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fplayground.rs?ref=3ea62cb5d19846b44172d861ae231c8c09322800", "patch": "@@ -1,5 +1,3 @@\n-// ignore-tidy-linelength\n-\n #![crate_name = \"foo\"]\n \n #![doc(html_playground_url = \"https://www.example.com/\")]"}, {"sha": "dd455e45bfc2a5556352c56849c3cbd6cba3399f", "filename": "src/test/rustdoc/primitive-link.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Frustdoc%2Fprimitive-link.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Frustdoc%2Fprimitive-link.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fprimitive-link.rs?ref=3ea62cb5d19846b44172d861ae231c8c09322800", "patch": "@@ -1,6 +1,5 @@\n #![crate_name = \"foo\"]\n \n-// ignore-tidy-linelength\n \n // @has foo/struct.Foo.html '//*[@class=\"docblock\"]/p/a[@href=\"https://doc.rust-lang.org/nightly/std/primitive.u32.html\"]' 'u32'\n // @has foo/struct.Foo.html '//*[@class=\"docblock\"]/p/a[@href=\"https://doc.rust-lang.org/nightly/std/primitive.i64.html\"]' 'i64'"}, {"sha": "3ecf434c39e45a88ffe719fdb947b6d51560694f", "filename": "src/test/rustdoc/raw-ident-eliminate-r-hashtag.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Frustdoc%2Fraw-ident-eliminate-r-hashtag.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Frustdoc%2Fraw-ident-eliminate-r-hashtag.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fraw-ident-eliminate-r-hashtag.rs?ref=3ea62cb5d19846b44172d861ae231c8c09322800", "patch": "@@ -1,5 +1,3 @@\n-// ignore-tidy-linelength\n-\n #![crate_type=\"lib\"]\n \n pub mod internal {"}, {"sha": "5319892c99c23cecef010ad04071b491da374e32", "filename": "src/test/rustdoc/smart-punct.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Frustdoc%2Fsmart-punct.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Frustdoc%2Fsmart-punct.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fsmart-punct.rs?ref=3ea62cb5d19846b44172d861ae231c8c09322800", "patch": "@@ -1,5 +1,3 @@\n-// ignore-tidy-linelength\n-\n #![crate_name = \"foo\"]\n \n //! This is the \"start\" of the 'document'! How'd you know that \"it's\" the start?"}, {"sha": "8012e442213b87bfb2a3bf1437fc778b92554198", "filename": "src/test/rustdoc/src-links-external.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Frustdoc%2Fsrc-links-external.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Frustdoc%2Fsrc-links-external.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fsrc-links-external.rs?ref=3ea62cb5d19846b44172d861ae231c8c09322800", "patch": "@@ -1,7 +1,6 @@\n // aux-build:src-links-external.rs\n // build-aux-docs\n // ignore-cross-compile\n-// ignore-tidy-linelength\n \n #![crate_name = \"foo\"]\n "}, {"sha": "974b863bb160446cd59f7d6ea3f34984d1f70a8a", "filename": "src/test/rustdoc/struct-field.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Frustdoc%2Fstruct-field.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Frustdoc%2Fstruct-field.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fstruct-field.rs?ref=3ea62cb5d19846b44172d861ae231c8c09322800", "patch": "@@ -1,6 +1,5 @@\n #![crate_name = \"foo\"]\n \n-// ignore-tidy-linelength\n \n // @has foo/index.html '//*[@class=\"docblock\"]/p/a[@href=\"../foo/struct.Foo.html#structfield.bar\"]' 'Foo::bar'\n // @has foo/index.html '//*[@class=\"docblock\"]/p/a[@href=\"../foo/union.Bar.html#structfield.foo\"]' 'Bar::foo'"}, {"sha": "2a103509ae1933e9f4cb303e38070cee731d2bc8", "filename": "src/test/rustdoc/trait-attributes.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Frustdoc%2Ftrait-attributes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Frustdoc%2Ftrait-attributes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Ftrait-attributes.rs?ref=3ea62cb5d19846b44172d861ae231c8c09322800", "patch": "@@ -1,6 +1,5 @@\n #![crate_name = \"foo\"]\n \n-// ignore-tidy-linelength\n \n pub trait Foo {\n     // @has foo/trait.Foo.html '//h3[@id=\"tymethod.foo\"]//span[@class=\"docblock attributes\"]' '#[must_use]'"}, {"sha": "48de593342fa6ca2546c48ec0e39425dd2fd6c48", "filename": "src/test/ui/associated-type-bounds/ambiguous-associated-type2.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fui%2Fassociated-type-bounds%2Fambiguous-associated-type2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fui%2Fassociated-type-bounds%2Fambiguous-associated-type2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fassociated-type-bounds%2Fambiguous-associated-type2.rs?ref=3ea62cb5d19846b44172d861ae231c8c09322800", "patch": "@@ -1,5 +1,3 @@\n-// ignore-tidy-linelength\n-\n trait Foo {\n     type Item;\n }"}, {"sha": "e72ef0e4b332ea2cea0e4d881ea93dab4f95f0f8", "filename": "src/test/ui/associated-type-bounds/ambiguous-associated-type2.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fui%2Fassociated-type-bounds%2Fambiguous-associated-type2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fui%2Fassociated-type-bounds%2Fambiguous-associated-type2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fassociated-type-bounds%2Fambiguous-associated-type2.stderr?ref=3ea62cb5d19846b44172d861ae231c8c09322800", "patch": "@@ -1,12 +1,12 @@\n error[E0391]: cycle detected when computing the super traits of `Baz` with associated type name `Item`\n-  --> $DIR/ambiguous-associated-type2.rs:9:1\n+  --> $DIR/ambiguous-associated-type2.rs:7:1\n    |\n LL | trait Baz: Foo + Bar<Self::Item> {}\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: ...which again requires computing the super traits of `Baz` with associated type name `Item`, completing the cycle\n note: cycle used when computing the super traits of `Baz`\n-  --> $DIR/ambiguous-associated-type2.rs:9:1\n+  --> $DIR/ambiguous-associated-type2.rs:7:1\n    |\n LL | trait Baz: Foo + Bar<Self::Item> {}\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^"}, {"sha": "bd3cac1f887bf10748b0c458dda40156098e87d8", "filename": "src/test/ui/associated-type-bounds/duplicate.full_tait.stderr", "status": "modified", "additions": 71, "deletions": 71, "changes": 142, "blob_url": "https://github.com/rust-lang/rust/blob/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fui%2Fassociated-type-bounds%2Fduplicate.full_tait.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fui%2Fassociated-type-bounds%2Fduplicate.full_tait.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fassociated-type-bounds%2Fduplicate.full_tait.stderr?ref=3ea62cb5d19846b44172d861ae231c8c09322800", "patch": "@@ -1,5 +1,5 @@\n warning: the feature `type_alias_impl_trait` is incomplete and may not be safe to use and/or cause compiler crashes\n-  --> $DIR/duplicate.rs:6:32\n+  --> $DIR/duplicate.rs:4:32\n    |\n LL | #![cfg_attr(full_tait, feature(type_alias_impl_trait))]\n    |                                ^^^^^^^^^^^^^^^^^^^^^\n@@ -8,559 +8,559 @@ LL | #![cfg_attr(full_tait, feature(type_alias_impl_trait))]\n    = note: see issue #63063 <https://github.com/rust-lang/rust/issues/63063> for more information\n \n warning: the feature `impl_trait_in_bindings` is incomplete and may not be safe to use and/or cause compiler crashes\n-  --> $DIR/duplicate.rs:8:12\n+  --> $DIR/duplicate.rs:6:12\n    |\n LL | #![feature(impl_trait_in_bindings)]\n    |            ^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: see issue #63065 <https://github.com/rust-lang/rust/issues/63065> for more information\n \n error[E0719]: the value of the associated type `Item` (from trait `Iterator`) is already specified\n-  --> $DIR/duplicate.rs:13:36\n+  --> $DIR/duplicate.rs:11:36\n    |\n LL | struct SI1<T: Iterator<Item: Copy, Item: Send>> { f: T }\n    |                        ----------  ^^^^^^^^^^ re-bound here\n    |                        |\n    |                        `Item` bound here first\n \n error[E0719]: the value of the associated type `Item` (from trait `Iterator`) is already specified\n-  --> $DIR/duplicate.rs:15:36\n+  --> $DIR/duplicate.rs:13:36\n    |\n LL | struct SI2<T: Iterator<Item: Copy, Item: Copy>> { f: T }\n    |                        ----------  ^^^^^^^^^^ re-bound here\n    |                        |\n    |                        `Item` bound here first\n \n error[E0719]: the value of the associated type `Item` (from trait `Iterator`) is already specified\n-  --> $DIR/duplicate.rs:17:39\n+  --> $DIR/duplicate.rs:15:39\n    |\n LL | struct SI3<T: Iterator<Item: 'static, Item: 'static>> { f: T }\n    |                        -------------  ^^^^^^^^^^^^^ re-bound here\n    |                        |\n    |                        `Item` bound here first\n \n error[E0719]: the value of the associated type `Item` (from trait `Iterator`) is already specified\n-  --> $DIR/duplicate.rs:19:45\n+  --> $DIR/duplicate.rs:17:45\n    |\n LL | struct SW1<T> where T: Iterator<Item: Copy, Item: Send> { f: T }\n    |                                 ----------  ^^^^^^^^^^ re-bound here\n    |                                 |\n    |                                 `Item` bound here first\n \n error[E0719]: the value of the associated type `Item` (from trait `Iterator`) is already specified\n-  --> $DIR/duplicate.rs:21:45\n+  --> $DIR/duplicate.rs:19:45\n    |\n LL | struct SW2<T> where T: Iterator<Item: Copy, Item: Copy> { f: T }\n    |                                 ----------  ^^^^^^^^^^ re-bound here\n    |                                 |\n    |                                 `Item` bound here first\n \n error[E0719]: the value of the associated type `Item` (from trait `Iterator`) is already specified\n-  --> $DIR/duplicate.rs:23:48\n+  --> $DIR/duplicate.rs:21:48\n    |\n LL | struct SW3<T> where T: Iterator<Item: 'static, Item: 'static> { f: T }\n    |                                 -------------  ^^^^^^^^^^^^^ re-bound here\n    |                                 |\n    |                                 `Item` bound here first\n \n error[E0719]: the value of the associated type `Item` (from trait `Iterator`) is already specified\n-  --> $DIR/duplicate.rs:26:34\n+  --> $DIR/duplicate.rs:24:34\n    |\n LL | enum EI1<T: Iterator<Item: Copy, Item: Send>> { V(T) }\n    |                      ----------  ^^^^^^^^^^ re-bound here\n    |                      |\n    |                      `Item` bound here first\n \n error[E0719]: the value of the associated type `Item` (from trait `Iterator`) is already specified\n-  --> $DIR/duplicate.rs:28:34\n+  --> $DIR/duplicate.rs:26:34\n    |\n LL | enum EI2<T: Iterator<Item: Copy, Item: Copy>> { V(T) }\n    |                      ----------  ^^^^^^^^^^ re-bound here\n    |                      |\n    |                      `Item` bound here first\n \n error[E0719]: the value of the associated type `Item` (from trait `Iterator`) is already specified\n-  --> $DIR/duplicate.rs:30:37\n+  --> $DIR/duplicate.rs:28:37\n    |\n LL | enum EI3<T: Iterator<Item: 'static, Item: 'static>> { V(T) }\n    |                      -------------  ^^^^^^^^^^^^^ re-bound here\n    |                      |\n    |                      `Item` bound here first\n \n error[E0719]: the value of the associated type `Item` (from trait `Iterator`) is already specified\n-  --> $DIR/duplicate.rs:32:43\n+  --> $DIR/duplicate.rs:30:43\n    |\n LL | enum EW1<T> where T: Iterator<Item: Copy, Item: Send> { V(T) }\n    |                               ----------  ^^^^^^^^^^ re-bound here\n    |                               |\n    |                               `Item` bound here first\n \n error[E0719]: the value of the associated type `Item` (from trait `Iterator`) is already specified\n-  --> $DIR/duplicate.rs:34:43\n+  --> $DIR/duplicate.rs:32:43\n    |\n LL | enum EW2<T> where T: Iterator<Item: Copy, Item: Copy> { V(T) }\n    |                               ----------  ^^^^^^^^^^ re-bound here\n    |                               |\n    |                               `Item` bound here first\n \n error[E0719]: the value of the associated type `Item` (from trait `Iterator`) is already specified\n-  --> $DIR/duplicate.rs:36:46\n+  --> $DIR/duplicate.rs:34:46\n    |\n LL | enum EW3<T> where T: Iterator<Item: 'static, Item: 'static> { V(T) }\n    |                               -------------  ^^^^^^^^^^^^^ re-bound here\n    |                               |\n    |                               `Item` bound here first\n \n error[E0719]: the value of the associated type `Item` (from trait `Iterator`) is already specified\n-  --> $DIR/duplicate.rs:39:35\n+  --> $DIR/duplicate.rs:37:35\n    |\n LL | union UI1<T: Iterator<Item: Copy, Item: Send>> { f: T }\n    |                       ----------  ^^^^^^^^^^ re-bound here\n    |                       |\n    |                       `Item` bound here first\n \n error[E0719]: the value of the associated type `Item` (from trait `Iterator`) is already specified\n-  --> $DIR/duplicate.rs:41:35\n+  --> $DIR/duplicate.rs:39:35\n    |\n LL | union UI2<T: Iterator<Item: Copy, Item: Copy>> { f: T }\n    |                       ----------  ^^^^^^^^^^ re-bound here\n    |                       |\n    |                       `Item` bound here first\n \n error[E0719]: the value of the associated type `Item` (from trait `Iterator`) is already specified\n-  --> $DIR/duplicate.rs:43:38\n+  --> $DIR/duplicate.rs:41:38\n    |\n LL | union UI3<T: Iterator<Item: 'static, Item: 'static>> { f: T }\n    |                       -------------  ^^^^^^^^^^^^^ re-bound here\n    |                       |\n    |                       `Item` bound here first\n \n error[E0719]: the value of the associated type `Item` (from trait `Iterator`) is already specified\n-  --> $DIR/duplicate.rs:45:44\n+  --> $DIR/duplicate.rs:43:44\n    |\n LL | union UW1<T> where T: Iterator<Item: Copy, Item: Send> { f: T }\n    |                                ----------  ^^^^^^^^^^ re-bound here\n    |                                |\n    |                                `Item` bound here first\n \n error[E0719]: the value of the associated type `Item` (from trait `Iterator`) is already specified\n-  --> $DIR/duplicate.rs:47:44\n+  --> $DIR/duplicate.rs:45:44\n    |\n LL | union UW2<T> where T: Iterator<Item: Copy, Item: Copy> { f: T }\n    |                                ----------  ^^^^^^^^^^ re-bound here\n    |                                |\n    |                                `Item` bound here first\n \n error[E0719]: the value of the associated type `Item` (from trait `Iterator`) is already specified\n-  --> $DIR/duplicate.rs:49:47\n+  --> $DIR/duplicate.rs:47:47\n    |\n LL | union UW3<T> where T: Iterator<Item: 'static, Item: 'static> { f: T }\n    |                                -------------  ^^^^^^^^^^^^^ re-bound here\n    |                                |\n    |                                `Item` bound here first\n \n error[E0719]: the value of the associated type `Item` (from trait `Iterator`) is already specified\n-  --> $DIR/duplicate.rs:52:32\n+  --> $DIR/duplicate.rs:50:32\n    |\n LL | fn FI1<T: Iterator<Item: Copy, Item: Send>>() {}\n    |                    ----------  ^^^^^^^^^^ re-bound here\n    |                    |\n    |                    `Item` bound here first\n \n error[E0719]: the value of the associated type `Item` (from trait `Iterator`) is already specified\n-  --> $DIR/duplicate.rs:54:32\n+  --> $DIR/duplicate.rs:52:32\n    |\n LL | fn FI2<T: Iterator<Item: Copy, Item: Copy>>() {}\n    |                    ----------  ^^^^^^^^^^ re-bound here\n    |                    |\n    |                    `Item` bound here first\n \n error[E0719]: the value of the associated type `Item` (from trait `Iterator`) is already specified\n-  --> $DIR/duplicate.rs:56:35\n+  --> $DIR/duplicate.rs:54:35\n    |\n LL | fn FI3<T: Iterator<Item: 'static, Item: 'static>>() {}\n    |                    -------------  ^^^^^^^^^^^^^ re-bound here\n    |                    |\n    |                    `Item` bound here first\n \n error[E0719]: the value of the associated type `Item` (from trait `Iterator`) is already specified\n-  --> $DIR/duplicate.rs:58:43\n+  --> $DIR/duplicate.rs:56:43\n    |\n LL | fn FW1<T>() where T: Iterator<Item: Copy, Item: Send> {}\n    |                               ----------  ^^^^^^^^^^ re-bound here\n    |                               |\n    |                               `Item` bound here first\n \n error[E0719]: the value of the associated type `Item` (from trait `Iterator`) is already specified\n-  --> $DIR/duplicate.rs:60:43\n+  --> $DIR/duplicate.rs:58:43\n    |\n LL | fn FW2<T>() where T: Iterator<Item: Copy, Item: Copy> {}\n    |                               ----------  ^^^^^^^^^^ re-bound here\n    |                               |\n    |                               `Item` bound here first\n \n error[E0719]: the value of the associated type `Item` (from trait `Iterator`) is already specified\n-  --> $DIR/duplicate.rs:62:46\n+  --> $DIR/duplicate.rs:60:46\n    |\n LL | fn FW3<T>() where T: Iterator<Item: 'static, Item: 'static> {}\n    |                               -------------  ^^^^^^^^^^^^^ re-bound here\n    |                               |\n    |                               `Item` bound here first\n \n error[E0719]: the value of the associated type `Item` (from trait `Iterator`) is already specified\n-  --> $DIR/duplicate.rs:68:40\n+  --> $DIR/duplicate.rs:66:40\n    |\n LL | fn FAPIT1(_: impl Iterator<Item: Copy, Item: Send>) {}\n    |                            ----------  ^^^^^^^^^^ re-bound here\n    |                            |\n    |                            `Item` bound here first\n \n error[E0719]: the value of the associated type `Item` (from trait `Iterator`) is already specified\n-  --> $DIR/duplicate.rs:70:40\n+  --> $DIR/duplicate.rs:68:40\n    |\n LL | fn FAPIT2(_: impl Iterator<Item: Copy, Item: Copy>) {}\n    |                            ----------  ^^^^^^^^^^ re-bound here\n    |                            |\n    |                            `Item` bound here first\n \n error[E0719]: the value of the associated type `Item` (from trait `Iterator`) is already specified\n-  --> $DIR/duplicate.rs:72:43\n+  --> $DIR/duplicate.rs:70:43\n    |\n LL | fn FAPIT3(_: impl Iterator<Item: 'static, Item: 'static>) {}\n    |                            -------------  ^^^^^^^^^^^^^ re-bound here\n    |                            |\n    |                            `Item` bound here first\n \n error[E0719]: the value of the associated type `Item` (from trait `Iterator`) is already specified\n-  --> $DIR/duplicate.rs:75:39\n+  --> $DIR/duplicate.rs:73:39\n    |\n LL | const CIT1: impl Iterator<Item: Copy, Item: Send> = iter::empty();\n    |                           ----------  ^^^^^^^^^^ re-bound here\n    |                           |\n    |                           `Item` bound here first\n \n error[E0719]: the value of the associated type `Item` (from trait `Iterator`) is already specified\n-  --> $DIR/duplicate.rs:77:39\n+  --> $DIR/duplicate.rs:75:39\n    |\n LL | const CIT2: impl Iterator<Item: Copy, Item: Copy> = iter::empty();\n    |                           ----------  ^^^^^^^^^^ re-bound here\n    |                           |\n    |                           `Item` bound here first\n \n error[E0719]: the value of the associated type `Item` (from trait `Iterator`) is already specified\n-  --> $DIR/duplicate.rs:79:42\n+  --> $DIR/duplicate.rs:77:42\n    |\n LL | const CIT3: impl Iterator<Item: 'static, Item: 'static> = iter::empty();\n    |                           -------------  ^^^^^^^^^^^^^ re-bound here\n    |                           |\n    |                           `Item` bound here first\n \n error[E0719]: the value of the associated type `Item` (from trait `Iterator`) is already specified\n-  --> $DIR/duplicate.rs:81:40\n+  --> $DIR/duplicate.rs:79:40\n    |\n LL | static SIT1: impl Iterator<Item: Copy, Item: Send> = iter::empty();\n    |                            ----------  ^^^^^^^^^^ re-bound here\n    |                            |\n    |                            `Item` bound here first\n \n error[E0719]: the value of the associated type `Item` (from trait `Iterator`) is already specified\n-  --> $DIR/duplicate.rs:83:40\n+  --> $DIR/duplicate.rs:81:40\n    |\n LL | static SIT2: impl Iterator<Item: Copy, Item: Copy> = iter::empty();\n    |                            ----------  ^^^^^^^^^^ re-bound here\n    |                            |\n    |                            `Item` bound here first\n \n error[E0719]: the value of the associated type `Item` (from trait `Iterator`) is already specified\n-  --> $DIR/duplicate.rs:85:43\n+  --> $DIR/duplicate.rs:83:43\n    |\n LL | static SIT3: impl Iterator<Item: 'static, Item: 'static> = iter::empty();\n    |                            -------------  ^^^^^^^^^^^^^ re-bound here\n    |                            |\n    |                            `Item` bound here first\n \n error[E0719]: the value of the associated type `Item` (from trait `Iterator`) is already specified\n-  --> $DIR/duplicate.rs:88:46\n+  --> $DIR/duplicate.rs:86:46\n    |\n LL | fn lit1() { let _: impl Iterator<Item: Copy, Item: Send> = iter::empty(); }\n    |                                  ----------  ^^^^^^^^^^ re-bound here\n    |                                  |\n    |                                  `Item` bound here first\n \n error[E0719]: the value of the associated type `Item` (from trait `Iterator`) is already specified\n-  --> $DIR/duplicate.rs:90:46\n+  --> $DIR/duplicate.rs:88:46\n    |\n LL | fn lit2() { let _: impl Iterator<Item: Copy, Item: Copy> = iter::empty(); }\n    |                                  ----------  ^^^^^^^^^^ re-bound here\n    |                                  |\n    |                                  `Item` bound here first\n \n error[E0719]: the value of the associated type `Item` (from trait `Iterator`) is already specified\n-  --> $DIR/duplicate.rs:92:49\n+  --> $DIR/duplicate.rs:90:49\n    |\n LL | fn lit3() { let _: impl Iterator<Item: 'static, Item: 'static> = iter::empty(); }\n    |                                  -------------  ^^^^^^^^^^^^^ re-bound here\n    |                                  |\n    |                                  `Item` bound here first\n \n error[E0719]: the value of the associated type `Item` (from trait `Iterator`) is already specified\n-  --> $DIR/duplicate.rs:95:35\n+  --> $DIR/duplicate.rs:93:35\n    |\n LL | type TAI1<T: Iterator<Item: Copy, Item: Send>> = T;\n    |                       ----------  ^^^^^^^^^^ re-bound here\n    |                       |\n    |                       `Item` bound here first\n \n error[E0719]: the value of the associated type `Item` (from trait `Iterator`) is already specified\n-  --> $DIR/duplicate.rs:97:35\n+  --> $DIR/duplicate.rs:95:35\n    |\n LL | type TAI2<T: Iterator<Item: Copy, Item: Copy>> = T;\n    |                       ----------  ^^^^^^^^^^ re-bound here\n    |                       |\n    |                       `Item` bound here first\n \n error[E0719]: the value of the associated type `Item` (from trait `Iterator`) is already specified\n-  --> $DIR/duplicate.rs:99:38\n+  --> $DIR/duplicate.rs:97:38\n    |\n LL | type TAI3<T: Iterator<Item: 'static, Item: 'static>> = T;\n    |                       -------------  ^^^^^^^^^^^^^ re-bound here\n    |                       |\n    |                       `Item` bound here first\n \n error[E0719]: the value of the associated type `Item` (from trait `Iterator`) is already specified\n-  --> $DIR/duplicate.rs:101:44\n+  --> $DIR/duplicate.rs:99:44\n    |\n LL | type TAW1<T> where T: Iterator<Item: Copy, Item: Send> = T;\n    |                                ----------  ^^^^^^^^^^ re-bound here\n    |                                |\n    |                                `Item` bound here first\n \n error[E0719]: the value of the associated type `Item` (from trait `Iterator`) is already specified\n-  --> $DIR/duplicate.rs:103:44\n+  --> $DIR/duplicate.rs:101:44\n    |\n LL | type TAW2<T> where T: Iterator<Item: Copy, Item: Copy> = T;\n    |                                ----------  ^^^^^^^^^^ re-bound here\n    |                                |\n    |                                `Item` bound here first\n \n error[E0719]: the value of the associated type `Item` (from trait `Iterator`) is already specified\n-  --> $DIR/duplicate.rs:105:47\n+  --> $DIR/duplicate.rs:103:47\n    |\n LL | type TAW3<T> where T: Iterator<Item: 'static, Item: 'static> = T;\n    |                                -------------  ^^^^^^^^^^^^^ re-bound here\n    |                                |\n    |                                `Item` bound here first\n \n error[E0719]: the value of the associated type `Item` (from trait `Iterator`) is already specified\n-  --> $DIR/duplicate.rs:108:36\n+  --> $DIR/duplicate.rs:106:36\n    |\n LL | type ETAI1<T: Iterator<Item: Copy, Item: Send>> = impl Copy;\n    |                        ----------  ^^^^^^^^^^ re-bound here\n    |                        |\n    |                        `Item` bound here first\n \n error[E0719]: the value of the associated type `Item` (from trait `Iterator`) is already specified\n-  --> $DIR/duplicate.rs:110:36\n+  --> $DIR/duplicate.rs:108:36\n    |\n LL | type ETAI2<T: Iterator<Item: Copy, Item: Copy>> = impl Copy;\n    |                        ----------  ^^^^^^^^^^ re-bound here\n    |                        |\n    |                        `Item` bound here first\n \n error[E0719]: the value of the associated type `Item` (from trait `Iterator`) is already specified\n-  --> $DIR/duplicate.rs:112:39\n+  --> $DIR/duplicate.rs:110:39\n    |\n LL | type ETAI3<T: Iterator<Item: 'static, Item: 'static>> = impl Copy;\n    |                        -------------  ^^^^^^^^^^^^^ re-bound here\n    |                        |\n    |                        `Item` bound here first\n \n error[E0719]: the value of the associated type `Item` (from trait `Iterator`) is already specified\n-  --> $DIR/duplicate.rs:114:40\n+  --> $DIR/duplicate.rs:112:40\n    |\n LL | type ETAI4 = impl Iterator<Item: Copy, Item: Send>;\n    |                            ----------  ^^^^^^^^^^ re-bound here\n    |                            |\n    |                            `Item` bound here first\n \n error[E0719]: the value of the associated type `Item` (from trait `Iterator`) is already specified\n-  --> $DIR/duplicate.rs:116:40\n+  --> $DIR/duplicate.rs:114:40\n    |\n LL | type ETAI5 = impl Iterator<Item: Copy, Item: Copy>;\n    |                            ----------  ^^^^^^^^^^ re-bound here\n    |                            |\n    |                            `Item` bound here first\n \n error[E0719]: the value of the associated type `Item` (from trait `Iterator`) is already specified\n-  --> $DIR/duplicate.rs:118:43\n+  --> $DIR/duplicate.rs:116:43\n    |\n LL | type ETAI6 = impl Iterator<Item: 'static, Item: 'static>;\n    |                            -------------  ^^^^^^^^^^^^^ re-bound here\n    |                            |\n    |                            `Item` bound here first\n \n error[E0719]: the value of the associated type `Item` (from trait `Iterator`) is already specified\n-  --> $DIR/duplicate.rs:121:36\n+  --> $DIR/duplicate.rs:119:36\n    |\n LL | trait TRI1<T: Iterator<Item: Copy, Item: Send>> {}\n    |                        ----------  ^^^^^^^^^^ re-bound here\n    |                        |\n    |                        `Item` bound here first\n \n error[E0719]: the value of the associated type `Item` (from trait `Iterator`) is already specified\n-  --> $DIR/duplicate.rs:123:36\n+  --> $DIR/duplicate.rs:121:36\n    |\n LL | trait TRI2<T: Iterator<Item: Copy, Item: Copy>> {}\n    |                        ----------  ^^^^^^^^^^ re-bound here\n    |                        |\n    |                        `Item` bound here first\n \n error[E0719]: the value of the associated type `Item` (from trait `Iterator`) is already specified\n-  --> $DIR/duplicate.rs:125:39\n+  --> $DIR/duplicate.rs:123:39\n    |\n LL | trait TRI3<T: Iterator<Item: 'static, Item: 'static>> {}\n    |                        -------------  ^^^^^^^^^^^^^ re-bound here\n    |                        |\n    |                        `Item` bound here first\n \n error[E0719]: the value of the associated type `Item` (from trait `Iterator`) is already specified\n-  --> $DIR/duplicate.rs:127:34\n+  --> $DIR/duplicate.rs:125:34\n    |\n LL | trait TRS1: Iterator<Item: Copy, Item: Send> {}\n    |                      ----------  ^^^^^^^^^^ re-bound here\n    |                      |\n    |                      `Item` bound here first\n \n error[E0719]: the value of the associated type `Item` (from trait `Iterator`) is already specified\n-  --> $DIR/duplicate.rs:129:34\n+  --> $DIR/duplicate.rs:127:34\n    |\n LL | trait TRS2: Iterator<Item: Copy, Item: Copy> {}\n    |                      ----------  ^^^^^^^^^^ re-bound here\n    |                      |\n    |                      `Item` bound here first\n \n error[E0719]: the value of the associated type `Item` (from trait `Iterator`) is already specified\n-  --> $DIR/duplicate.rs:131:37\n+  --> $DIR/duplicate.rs:129:37\n    |\n LL | trait TRS3: Iterator<Item: 'static, Item: 'static> {}\n    |                      -------------  ^^^^^^^^^^^^^ re-bound here\n    |                      |\n    |                      `Item` bound here first\n \n error[E0719]: the value of the associated type `Item` (from trait `Iterator`) is already specified\n-  --> $DIR/duplicate.rs:133:45\n+  --> $DIR/duplicate.rs:131:45\n    |\n LL | trait TRW1<T> where T: Iterator<Item: Copy, Item: Send> {}\n    |                                 ----------  ^^^^^^^^^^ re-bound here\n    |                                 |\n    |                                 `Item` bound here first\n \n error[E0719]: the value of the associated type `Item` (from trait `Iterator`) is already specified\n-  --> $DIR/duplicate.rs:135:45\n+  --> $DIR/duplicate.rs:133:45\n    |\n LL | trait TRW2<T> where T: Iterator<Item: Copy, Item: Copy> {}\n    |                                 ----------  ^^^^^^^^^^ re-bound here\n    |                                 |\n    |                                 `Item` bound here first\n \n error[E0719]: the value of the associated type `Item` (from trait `Iterator`) is already specified\n-  --> $DIR/duplicate.rs:137:48\n+  --> $DIR/duplicate.rs:135:48\n    |\n LL | trait TRW3<T> where T: Iterator<Item: 'static, Item: 'static> {}\n    |                                 -------------  ^^^^^^^^^^^^^ re-bound here\n    |                                 |\n    |                                 `Item` bound here first\n \n error[E0719]: the value of the associated type `Item` (from trait `Iterator`) is already specified\n-  --> $DIR/duplicate.rs:139:46\n+  --> $DIR/duplicate.rs:137:46\n    |\n LL | trait TRSW1 where Self: Iterator<Item: Copy, Item: Send> {}\n    |                                  ----------  ^^^^^^^^^^ re-bound here\n    |                                  |\n    |                                  `Item` bound here first\n \n error[E0719]: the value of the associated type `Item` (from trait `Iterator`) is already specified\n-  --> $DIR/duplicate.rs:139:46\n+  --> $DIR/duplicate.rs:137:46\n    |\n LL | trait TRSW1 where Self: Iterator<Item: Copy, Item: Send> {}\n    |                                  ----------  ^^^^^^^^^^ re-bound here\n    |                                  |\n    |                                  `Item` bound here first\n \n error[E0719]: the value of the associated type `Item` (from trait `Iterator`) is already specified\n-  --> $DIR/duplicate.rs:142:46\n+  --> $DIR/duplicate.rs:140:46\n    |\n LL | trait TRSW2 where Self: Iterator<Item: Copy, Item: Copy> {}\n    |                                  ----------  ^^^^^^^^^^ re-bound here\n    |                                  |\n    |                                  `Item` bound here first\n \n error[E0719]: the value of the associated type `Item` (from trait `Iterator`) is already specified\n-  --> $DIR/duplicate.rs:142:46\n+  --> $DIR/duplicate.rs:140:46\n    |\n LL | trait TRSW2 where Self: Iterator<Item: Copy, Item: Copy> {}\n    |                                  ----------  ^^^^^^^^^^ re-bound here\n    |                                  |\n    |                                  `Item` bound here first\n \n error[E0719]: the value of the associated type `Item` (from trait `Iterator`) is already specified\n-  --> $DIR/duplicate.rs:145:49\n+  --> $DIR/duplicate.rs:143:49\n    |\n LL | trait TRSW3 where Self: Iterator<Item: 'static, Item: 'static> {}\n    |                                  -------------  ^^^^^^^^^^^^^ re-bound here\n    |                                  |\n    |                                  `Item` bound here first\n \n error[E0719]: the value of the associated type `Item` (from trait `Iterator`) is already specified\n-  --> $DIR/duplicate.rs:145:49\n+  --> $DIR/duplicate.rs:143:49\n    |\n LL | trait TRSW3 where Self: Iterator<Item: 'static, Item: 'static> {}\n    |                                  -------------  ^^^^^^^^^^^^^ re-bound here\n    |                                  |\n    |                                  `Item` bound here first\n \n error[E0719]: the value of the associated type `Item` (from trait `Iterator`) is already specified\n-  --> $DIR/duplicate.rs:155:40\n+  --> $DIR/duplicate.rs:153:40\n    |\n LL | type TADyn1 = dyn Iterator<Item: Copy, Item: Send>;\n    |                            ----------  ^^^^^^^^^^ re-bound here\n    |                            |\n    |                            `Item` bound here first\n \n error[E0719]: the value of the associated type `Item` (from trait `Iterator`) is already specified\n-  --> $DIR/duplicate.rs:157:44\n+  --> $DIR/duplicate.rs:155:44\n    |\n LL | type TADyn2 = Box<dyn Iterator<Item: Copy, Item: Copy>>;\n    |                                ----------  ^^^^^^^^^^ re-bound here\n    |                                |\n    |                                `Item` bound here first\n \n error[E0719]: the value of the associated type `Item` (from trait `Iterator`) is already specified\n-  --> $DIR/duplicate.rs:159:43\n+  --> $DIR/duplicate.rs:157:43\n    |\n LL | type TADyn3 = dyn Iterator<Item: 'static, Item: 'static>;\n    |                            -------------  ^^^^^^^^^^^^^ re-bound here\n    |                            |\n    |                            `Item` bound here first\n \n error[E0719]: the value of the associated type `Item` (from trait `Iterator`) is already specified\n-  --> $DIR/duplicate.rs:148:43\n+  --> $DIR/duplicate.rs:146:43\n    |\n LL | trait TRA1 { type A: Iterator<Item: Copy, Item: Send>; }\n    |                               ----------  ^^^^^^^^^^ re-bound here\n    |                               |\n    |                               `Item` bound here first\n \n error[E0719]: the value of the associated type `Item` (from trait `Iterator`) is already specified\n-  --> $DIR/duplicate.rs:150:43\n+  --> $DIR/duplicate.rs:148:43\n    |\n LL | trait TRA2 { type A: Iterator<Item: Copy, Item: Copy>; }\n    |                               ----------  ^^^^^^^^^^ re-bound here\n    |                               |\n    |                               `Item` bound here first\n \n error[E0719]: the value of the associated type `Item` (from trait `Iterator`) is already specified\n-  --> $DIR/duplicate.rs:152:46\n+  --> $DIR/duplicate.rs:150:46\n    |\n LL | trait TRA3 { type A: Iterator<Item: 'static, Item: 'static>; }\n    |                               -------------  ^^^^^^^^^^^^^ re-bound here"}, {"sha": "500e527a0188afcfb3911bbaa4d97f27e8ec53f9", "filename": "src/test/ui/associated-type-bounds/duplicate.min_tait.stderr", "status": "modified", "additions": 70, "deletions": 70, "changes": 140, "blob_url": "https://github.com/rust-lang/rust/blob/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fui%2Fassociated-type-bounds%2Fduplicate.min_tait.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fui%2Fassociated-type-bounds%2Fduplicate.min_tait.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fassociated-type-bounds%2Fduplicate.min_tait.stderr?ref=3ea62cb5d19846b44172d861ae231c8c09322800", "patch": "@@ -1,5 +1,5 @@\n warning: the feature `impl_trait_in_bindings` is incomplete and may not be safe to use and/or cause compiler crashes\n-  --> $DIR/duplicate.rs:8:12\n+  --> $DIR/duplicate.rs:6:12\n    |\n LL | #![feature(impl_trait_in_bindings)]\n    |            ^^^^^^^^^^^^^^^^^^^^^^\n@@ -8,551 +8,551 @@ LL | #![feature(impl_trait_in_bindings)]\n    = note: see issue #63065 <https://github.com/rust-lang/rust/issues/63065> for more information\n \n error[E0719]: the value of the associated type `Item` (from trait `Iterator`) is already specified\n-  --> $DIR/duplicate.rs:13:36\n+  --> $DIR/duplicate.rs:11:36\n    |\n LL | struct SI1<T: Iterator<Item: Copy, Item: Send>> { f: T }\n    |                        ----------  ^^^^^^^^^^ re-bound here\n    |                        |\n    |                        `Item` bound here first\n \n error[E0719]: the value of the associated type `Item` (from trait `Iterator`) is already specified\n-  --> $DIR/duplicate.rs:15:36\n+  --> $DIR/duplicate.rs:13:36\n    |\n LL | struct SI2<T: Iterator<Item: Copy, Item: Copy>> { f: T }\n    |                        ----------  ^^^^^^^^^^ re-bound here\n    |                        |\n    |                        `Item` bound here first\n \n error[E0719]: the value of the associated type `Item` (from trait `Iterator`) is already specified\n-  --> $DIR/duplicate.rs:17:39\n+  --> $DIR/duplicate.rs:15:39\n    |\n LL | struct SI3<T: Iterator<Item: 'static, Item: 'static>> { f: T }\n    |                        -------------  ^^^^^^^^^^^^^ re-bound here\n    |                        |\n    |                        `Item` bound here first\n \n error[E0719]: the value of the associated type `Item` (from trait `Iterator`) is already specified\n-  --> $DIR/duplicate.rs:19:45\n+  --> $DIR/duplicate.rs:17:45\n    |\n LL | struct SW1<T> where T: Iterator<Item: Copy, Item: Send> { f: T }\n    |                                 ----------  ^^^^^^^^^^ re-bound here\n    |                                 |\n    |                                 `Item` bound here first\n \n error[E0719]: the value of the associated type `Item` (from trait `Iterator`) is already specified\n-  --> $DIR/duplicate.rs:21:45\n+  --> $DIR/duplicate.rs:19:45\n    |\n LL | struct SW2<T> where T: Iterator<Item: Copy, Item: Copy> { f: T }\n    |                                 ----------  ^^^^^^^^^^ re-bound here\n    |                                 |\n    |                                 `Item` bound here first\n \n error[E0719]: the value of the associated type `Item` (from trait `Iterator`) is already specified\n-  --> $DIR/duplicate.rs:23:48\n+  --> $DIR/duplicate.rs:21:48\n    |\n LL | struct SW3<T> where T: Iterator<Item: 'static, Item: 'static> { f: T }\n    |                                 -------------  ^^^^^^^^^^^^^ re-bound here\n    |                                 |\n    |                                 `Item` bound here first\n \n error[E0719]: the value of the associated type `Item` (from trait `Iterator`) is already specified\n-  --> $DIR/duplicate.rs:26:34\n+  --> $DIR/duplicate.rs:24:34\n    |\n LL | enum EI1<T: Iterator<Item: Copy, Item: Send>> { V(T) }\n    |                      ----------  ^^^^^^^^^^ re-bound here\n    |                      |\n    |                      `Item` bound here first\n \n error[E0719]: the value of the associated type `Item` (from trait `Iterator`) is already specified\n-  --> $DIR/duplicate.rs:28:34\n+  --> $DIR/duplicate.rs:26:34\n    |\n LL | enum EI2<T: Iterator<Item: Copy, Item: Copy>> { V(T) }\n    |                      ----------  ^^^^^^^^^^ re-bound here\n    |                      |\n    |                      `Item` bound here first\n \n error[E0719]: the value of the associated type `Item` (from trait `Iterator`) is already specified\n-  --> $DIR/duplicate.rs:30:37\n+  --> $DIR/duplicate.rs:28:37\n    |\n LL | enum EI3<T: Iterator<Item: 'static, Item: 'static>> { V(T) }\n    |                      -------------  ^^^^^^^^^^^^^ re-bound here\n    |                      |\n    |                      `Item` bound here first\n \n error[E0719]: the value of the associated type `Item` (from trait `Iterator`) is already specified\n-  --> $DIR/duplicate.rs:32:43\n+  --> $DIR/duplicate.rs:30:43\n    |\n LL | enum EW1<T> where T: Iterator<Item: Copy, Item: Send> { V(T) }\n    |                               ----------  ^^^^^^^^^^ re-bound here\n    |                               |\n    |                               `Item` bound here first\n \n error[E0719]: the value of the associated type `Item` (from trait `Iterator`) is already specified\n-  --> $DIR/duplicate.rs:34:43\n+  --> $DIR/duplicate.rs:32:43\n    |\n LL | enum EW2<T> where T: Iterator<Item: Copy, Item: Copy> { V(T) }\n    |                               ----------  ^^^^^^^^^^ re-bound here\n    |                               |\n    |                               `Item` bound here first\n \n error[E0719]: the value of the associated type `Item` (from trait `Iterator`) is already specified\n-  --> $DIR/duplicate.rs:36:46\n+  --> $DIR/duplicate.rs:34:46\n    |\n LL | enum EW3<T> where T: Iterator<Item: 'static, Item: 'static> { V(T) }\n    |                               -------------  ^^^^^^^^^^^^^ re-bound here\n    |                               |\n    |                               `Item` bound here first\n \n error[E0719]: the value of the associated type `Item` (from trait `Iterator`) is already specified\n-  --> $DIR/duplicate.rs:39:35\n+  --> $DIR/duplicate.rs:37:35\n    |\n LL | union UI1<T: Iterator<Item: Copy, Item: Send>> { f: T }\n    |                       ----------  ^^^^^^^^^^ re-bound here\n    |                       |\n    |                       `Item` bound here first\n \n error[E0719]: the value of the associated type `Item` (from trait `Iterator`) is already specified\n-  --> $DIR/duplicate.rs:41:35\n+  --> $DIR/duplicate.rs:39:35\n    |\n LL | union UI2<T: Iterator<Item: Copy, Item: Copy>> { f: T }\n    |                       ----------  ^^^^^^^^^^ re-bound here\n    |                       |\n    |                       `Item` bound here first\n \n error[E0719]: the value of the associated type `Item` (from trait `Iterator`) is already specified\n-  --> $DIR/duplicate.rs:43:38\n+  --> $DIR/duplicate.rs:41:38\n    |\n LL | union UI3<T: Iterator<Item: 'static, Item: 'static>> { f: T }\n    |                       -------------  ^^^^^^^^^^^^^ re-bound here\n    |                       |\n    |                       `Item` bound here first\n \n error[E0719]: the value of the associated type `Item` (from trait `Iterator`) is already specified\n-  --> $DIR/duplicate.rs:45:44\n+  --> $DIR/duplicate.rs:43:44\n    |\n LL | union UW1<T> where T: Iterator<Item: Copy, Item: Send> { f: T }\n    |                                ----------  ^^^^^^^^^^ re-bound here\n    |                                |\n    |                                `Item` bound here first\n \n error[E0719]: the value of the associated type `Item` (from trait `Iterator`) is already specified\n-  --> $DIR/duplicate.rs:47:44\n+  --> $DIR/duplicate.rs:45:44\n    |\n LL | union UW2<T> where T: Iterator<Item: Copy, Item: Copy> { f: T }\n    |                                ----------  ^^^^^^^^^^ re-bound here\n    |                                |\n    |                                `Item` bound here first\n \n error[E0719]: the value of the associated type `Item` (from trait `Iterator`) is already specified\n-  --> $DIR/duplicate.rs:49:47\n+  --> $DIR/duplicate.rs:47:47\n    |\n LL | union UW3<T> where T: Iterator<Item: 'static, Item: 'static> { f: T }\n    |                                -------------  ^^^^^^^^^^^^^ re-bound here\n    |                                |\n    |                                `Item` bound here first\n \n error[E0719]: the value of the associated type `Item` (from trait `Iterator`) is already specified\n-  --> $DIR/duplicate.rs:52:32\n+  --> $DIR/duplicate.rs:50:32\n    |\n LL | fn FI1<T: Iterator<Item: Copy, Item: Send>>() {}\n    |                    ----------  ^^^^^^^^^^ re-bound here\n    |                    |\n    |                    `Item` bound here first\n \n error[E0719]: the value of the associated type `Item` (from trait `Iterator`) is already specified\n-  --> $DIR/duplicate.rs:54:32\n+  --> $DIR/duplicate.rs:52:32\n    |\n LL | fn FI2<T: Iterator<Item: Copy, Item: Copy>>() {}\n    |                    ----------  ^^^^^^^^^^ re-bound here\n    |                    |\n    |                    `Item` bound here first\n \n error[E0719]: the value of the associated type `Item` (from trait `Iterator`) is already specified\n-  --> $DIR/duplicate.rs:56:35\n+  --> $DIR/duplicate.rs:54:35\n    |\n LL | fn FI3<T: Iterator<Item: 'static, Item: 'static>>() {}\n    |                    -------------  ^^^^^^^^^^^^^ re-bound here\n    |                    |\n    |                    `Item` bound here first\n \n error[E0719]: the value of the associated type `Item` (from trait `Iterator`) is already specified\n-  --> $DIR/duplicate.rs:58:43\n+  --> $DIR/duplicate.rs:56:43\n    |\n LL | fn FW1<T>() where T: Iterator<Item: Copy, Item: Send> {}\n    |                               ----------  ^^^^^^^^^^ re-bound here\n    |                               |\n    |                               `Item` bound here first\n \n error[E0719]: the value of the associated type `Item` (from trait `Iterator`) is already specified\n-  --> $DIR/duplicate.rs:60:43\n+  --> $DIR/duplicate.rs:58:43\n    |\n LL | fn FW2<T>() where T: Iterator<Item: Copy, Item: Copy> {}\n    |                               ----------  ^^^^^^^^^^ re-bound here\n    |                               |\n    |                               `Item` bound here first\n \n error[E0719]: the value of the associated type `Item` (from trait `Iterator`) is already specified\n-  --> $DIR/duplicate.rs:62:46\n+  --> $DIR/duplicate.rs:60:46\n    |\n LL | fn FW3<T>() where T: Iterator<Item: 'static, Item: 'static> {}\n    |                               -------------  ^^^^^^^^^^^^^ re-bound here\n    |                               |\n    |                               `Item` bound here first\n \n error[E0719]: the value of the associated type `Item` (from trait `Iterator`) is already specified\n-  --> $DIR/duplicate.rs:68:40\n+  --> $DIR/duplicate.rs:66:40\n    |\n LL | fn FAPIT1(_: impl Iterator<Item: Copy, Item: Send>) {}\n    |                            ----------  ^^^^^^^^^^ re-bound here\n    |                            |\n    |                            `Item` bound here first\n \n error[E0719]: the value of the associated type `Item` (from trait `Iterator`) is already specified\n-  --> $DIR/duplicate.rs:70:40\n+  --> $DIR/duplicate.rs:68:40\n    |\n LL | fn FAPIT2(_: impl Iterator<Item: Copy, Item: Copy>) {}\n    |                            ----------  ^^^^^^^^^^ re-bound here\n    |                            |\n    |                            `Item` bound here first\n \n error[E0719]: the value of the associated type `Item` (from trait `Iterator`) is already specified\n-  --> $DIR/duplicate.rs:72:43\n+  --> $DIR/duplicate.rs:70:43\n    |\n LL | fn FAPIT3(_: impl Iterator<Item: 'static, Item: 'static>) {}\n    |                            -------------  ^^^^^^^^^^^^^ re-bound here\n    |                            |\n    |                            `Item` bound here first\n \n error[E0719]: the value of the associated type `Item` (from trait `Iterator`) is already specified\n-  --> $DIR/duplicate.rs:75:39\n+  --> $DIR/duplicate.rs:73:39\n    |\n LL | const CIT1: impl Iterator<Item: Copy, Item: Send> = iter::empty();\n    |                           ----------  ^^^^^^^^^^ re-bound here\n    |                           |\n    |                           `Item` bound here first\n \n error[E0719]: the value of the associated type `Item` (from trait `Iterator`) is already specified\n-  --> $DIR/duplicate.rs:77:39\n+  --> $DIR/duplicate.rs:75:39\n    |\n LL | const CIT2: impl Iterator<Item: Copy, Item: Copy> = iter::empty();\n    |                           ----------  ^^^^^^^^^^ re-bound here\n    |                           |\n    |                           `Item` bound here first\n \n error[E0719]: the value of the associated type `Item` (from trait `Iterator`) is already specified\n-  --> $DIR/duplicate.rs:79:42\n+  --> $DIR/duplicate.rs:77:42\n    |\n LL | const CIT3: impl Iterator<Item: 'static, Item: 'static> = iter::empty();\n    |                           -------------  ^^^^^^^^^^^^^ re-bound here\n    |                           |\n    |                           `Item` bound here first\n \n error[E0719]: the value of the associated type `Item` (from trait `Iterator`) is already specified\n-  --> $DIR/duplicate.rs:81:40\n+  --> $DIR/duplicate.rs:79:40\n    |\n LL | static SIT1: impl Iterator<Item: Copy, Item: Send> = iter::empty();\n    |                            ----------  ^^^^^^^^^^ re-bound here\n    |                            |\n    |                            `Item` bound here first\n \n error[E0719]: the value of the associated type `Item` (from trait `Iterator`) is already specified\n-  --> $DIR/duplicate.rs:83:40\n+  --> $DIR/duplicate.rs:81:40\n    |\n LL | static SIT2: impl Iterator<Item: Copy, Item: Copy> = iter::empty();\n    |                            ----------  ^^^^^^^^^^ re-bound here\n    |                            |\n    |                            `Item` bound here first\n \n error[E0719]: the value of the associated type `Item` (from trait `Iterator`) is already specified\n-  --> $DIR/duplicate.rs:85:43\n+  --> $DIR/duplicate.rs:83:43\n    |\n LL | static SIT3: impl Iterator<Item: 'static, Item: 'static> = iter::empty();\n    |                            -------------  ^^^^^^^^^^^^^ re-bound here\n    |                            |\n    |                            `Item` bound here first\n \n error[E0719]: the value of the associated type `Item` (from trait `Iterator`) is already specified\n-  --> $DIR/duplicate.rs:88:46\n+  --> $DIR/duplicate.rs:86:46\n    |\n LL | fn lit1() { let _: impl Iterator<Item: Copy, Item: Send> = iter::empty(); }\n    |                                  ----------  ^^^^^^^^^^ re-bound here\n    |                                  |\n    |                                  `Item` bound here first\n \n error[E0719]: the value of the associated type `Item` (from trait `Iterator`) is already specified\n-  --> $DIR/duplicate.rs:90:46\n+  --> $DIR/duplicate.rs:88:46\n    |\n LL | fn lit2() { let _: impl Iterator<Item: Copy, Item: Copy> = iter::empty(); }\n    |                                  ----------  ^^^^^^^^^^ re-bound here\n    |                                  |\n    |                                  `Item` bound here first\n \n error[E0719]: the value of the associated type `Item` (from trait `Iterator`) is already specified\n-  --> $DIR/duplicate.rs:92:49\n+  --> $DIR/duplicate.rs:90:49\n    |\n LL | fn lit3() { let _: impl Iterator<Item: 'static, Item: 'static> = iter::empty(); }\n    |                                  -------------  ^^^^^^^^^^^^^ re-bound here\n    |                                  |\n    |                                  `Item` bound here first\n \n error[E0719]: the value of the associated type `Item` (from trait `Iterator`) is already specified\n-  --> $DIR/duplicate.rs:95:35\n+  --> $DIR/duplicate.rs:93:35\n    |\n LL | type TAI1<T: Iterator<Item: Copy, Item: Send>> = T;\n    |                       ----------  ^^^^^^^^^^ re-bound here\n    |                       |\n    |                       `Item` bound here first\n \n error[E0719]: the value of the associated type `Item` (from trait `Iterator`) is already specified\n-  --> $DIR/duplicate.rs:97:35\n+  --> $DIR/duplicate.rs:95:35\n    |\n LL | type TAI2<T: Iterator<Item: Copy, Item: Copy>> = T;\n    |                       ----------  ^^^^^^^^^^ re-bound here\n    |                       |\n    |                       `Item` bound here first\n \n error[E0719]: the value of the associated type `Item` (from trait `Iterator`) is already specified\n-  --> $DIR/duplicate.rs:99:38\n+  --> $DIR/duplicate.rs:97:38\n    |\n LL | type TAI3<T: Iterator<Item: 'static, Item: 'static>> = T;\n    |                       -------------  ^^^^^^^^^^^^^ re-bound here\n    |                       |\n    |                       `Item` bound here first\n \n error[E0719]: the value of the associated type `Item` (from trait `Iterator`) is already specified\n-  --> $DIR/duplicate.rs:101:44\n+  --> $DIR/duplicate.rs:99:44\n    |\n LL | type TAW1<T> where T: Iterator<Item: Copy, Item: Send> = T;\n    |                                ----------  ^^^^^^^^^^ re-bound here\n    |                                |\n    |                                `Item` bound here first\n \n error[E0719]: the value of the associated type `Item` (from trait `Iterator`) is already specified\n-  --> $DIR/duplicate.rs:103:44\n+  --> $DIR/duplicate.rs:101:44\n    |\n LL | type TAW2<T> where T: Iterator<Item: Copy, Item: Copy> = T;\n    |                                ----------  ^^^^^^^^^^ re-bound here\n    |                                |\n    |                                `Item` bound here first\n \n error[E0719]: the value of the associated type `Item` (from trait `Iterator`) is already specified\n-  --> $DIR/duplicate.rs:105:47\n+  --> $DIR/duplicate.rs:103:47\n    |\n LL | type TAW3<T> where T: Iterator<Item: 'static, Item: 'static> = T;\n    |                                -------------  ^^^^^^^^^^^^^ re-bound here\n    |                                |\n    |                                `Item` bound here first\n \n error[E0719]: the value of the associated type `Item` (from trait `Iterator`) is already specified\n-  --> $DIR/duplicate.rs:108:36\n+  --> $DIR/duplicate.rs:106:36\n    |\n LL | type ETAI1<T: Iterator<Item: Copy, Item: Send>> = impl Copy;\n    |                        ----------  ^^^^^^^^^^ re-bound here\n    |                        |\n    |                        `Item` bound here first\n \n error[E0719]: the value of the associated type `Item` (from trait `Iterator`) is already specified\n-  --> $DIR/duplicate.rs:110:36\n+  --> $DIR/duplicate.rs:108:36\n    |\n LL | type ETAI2<T: Iterator<Item: Copy, Item: Copy>> = impl Copy;\n    |                        ----------  ^^^^^^^^^^ re-bound here\n    |                        |\n    |                        `Item` bound here first\n \n error[E0719]: the value of the associated type `Item` (from trait `Iterator`) is already specified\n-  --> $DIR/duplicate.rs:112:39\n+  --> $DIR/duplicate.rs:110:39\n    |\n LL | type ETAI3<T: Iterator<Item: 'static, Item: 'static>> = impl Copy;\n    |                        -------------  ^^^^^^^^^^^^^ re-bound here\n    |                        |\n    |                        `Item` bound here first\n \n error[E0719]: the value of the associated type `Item` (from trait `Iterator`) is already specified\n-  --> $DIR/duplicate.rs:114:40\n+  --> $DIR/duplicate.rs:112:40\n    |\n LL | type ETAI4 = impl Iterator<Item: Copy, Item: Send>;\n    |                            ----------  ^^^^^^^^^^ re-bound here\n    |                            |\n    |                            `Item` bound here first\n \n error[E0719]: the value of the associated type `Item` (from trait `Iterator`) is already specified\n-  --> $DIR/duplicate.rs:116:40\n+  --> $DIR/duplicate.rs:114:40\n    |\n LL | type ETAI5 = impl Iterator<Item: Copy, Item: Copy>;\n    |                            ----------  ^^^^^^^^^^ re-bound here\n    |                            |\n    |                            `Item` bound here first\n \n error[E0719]: the value of the associated type `Item` (from trait `Iterator`) is already specified\n-  --> $DIR/duplicate.rs:118:43\n+  --> $DIR/duplicate.rs:116:43\n    |\n LL | type ETAI6 = impl Iterator<Item: 'static, Item: 'static>;\n    |                            -------------  ^^^^^^^^^^^^^ re-bound here\n    |                            |\n    |                            `Item` bound here first\n \n error[E0719]: the value of the associated type `Item` (from trait `Iterator`) is already specified\n-  --> $DIR/duplicate.rs:121:36\n+  --> $DIR/duplicate.rs:119:36\n    |\n LL | trait TRI1<T: Iterator<Item: Copy, Item: Send>> {}\n    |                        ----------  ^^^^^^^^^^ re-bound here\n    |                        |\n    |                        `Item` bound here first\n \n error[E0719]: the value of the associated type `Item` (from trait `Iterator`) is already specified\n-  --> $DIR/duplicate.rs:123:36\n+  --> $DIR/duplicate.rs:121:36\n    |\n LL | trait TRI2<T: Iterator<Item: Copy, Item: Copy>> {}\n    |                        ----------  ^^^^^^^^^^ re-bound here\n    |                        |\n    |                        `Item` bound here first\n \n error[E0719]: the value of the associated type `Item` (from trait `Iterator`) is already specified\n-  --> $DIR/duplicate.rs:125:39\n+  --> $DIR/duplicate.rs:123:39\n    |\n LL | trait TRI3<T: Iterator<Item: 'static, Item: 'static>> {}\n    |                        -------------  ^^^^^^^^^^^^^ re-bound here\n    |                        |\n    |                        `Item` bound here first\n \n error[E0719]: the value of the associated type `Item` (from trait `Iterator`) is already specified\n-  --> $DIR/duplicate.rs:127:34\n+  --> $DIR/duplicate.rs:125:34\n    |\n LL | trait TRS1: Iterator<Item: Copy, Item: Send> {}\n    |                      ----------  ^^^^^^^^^^ re-bound here\n    |                      |\n    |                      `Item` bound here first\n \n error[E0719]: the value of the associated type `Item` (from trait `Iterator`) is already specified\n-  --> $DIR/duplicate.rs:129:34\n+  --> $DIR/duplicate.rs:127:34\n    |\n LL | trait TRS2: Iterator<Item: Copy, Item: Copy> {}\n    |                      ----------  ^^^^^^^^^^ re-bound here\n    |                      |\n    |                      `Item` bound here first\n \n error[E0719]: the value of the associated type `Item` (from trait `Iterator`) is already specified\n-  --> $DIR/duplicate.rs:131:37\n+  --> $DIR/duplicate.rs:129:37\n    |\n LL | trait TRS3: Iterator<Item: 'static, Item: 'static> {}\n    |                      -------------  ^^^^^^^^^^^^^ re-bound here\n    |                      |\n    |                      `Item` bound here first\n \n error[E0719]: the value of the associated type `Item` (from trait `Iterator`) is already specified\n-  --> $DIR/duplicate.rs:133:45\n+  --> $DIR/duplicate.rs:131:45\n    |\n LL | trait TRW1<T> where T: Iterator<Item: Copy, Item: Send> {}\n    |                                 ----------  ^^^^^^^^^^ re-bound here\n    |                                 |\n    |                                 `Item` bound here first\n \n error[E0719]: the value of the associated type `Item` (from trait `Iterator`) is already specified\n-  --> $DIR/duplicate.rs:135:45\n+  --> $DIR/duplicate.rs:133:45\n    |\n LL | trait TRW2<T> where T: Iterator<Item: Copy, Item: Copy> {}\n    |                                 ----------  ^^^^^^^^^^ re-bound here\n    |                                 |\n    |                                 `Item` bound here first\n \n error[E0719]: the value of the associated type `Item` (from trait `Iterator`) is already specified\n-  --> $DIR/duplicate.rs:137:48\n+  --> $DIR/duplicate.rs:135:48\n    |\n LL | trait TRW3<T> where T: Iterator<Item: 'static, Item: 'static> {}\n    |                                 -------------  ^^^^^^^^^^^^^ re-bound here\n    |                                 |\n    |                                 `Item` bound here first\n \n error[E0719]: the value of the associated type `Item` (from trait `Iterator`) is already specified\n-  --> $DIR/duplicate.rs:139:46\n+  --> $DIR/duplicate.rs:137:46\n    |\n LL | trait TRSW1 where Self: Iterator<Item: Copy, Item: Send> {}\n    |                                  ----------  ^^^^^^^^^^ re-bound here\n    |                                  |\n    |                                  `Item` bound here first\n \n error[E0719]: the value of the associated type `Item` (from trait `Iterator`) is already specified\n-  --> $DIR/duplicate.rs:139:46\n+  --> $DIR/duplicate.rs:137:46\n    |\n LL | trait TRSW1 where Self: Iterator<Item: Copy, Item: Send> {}\n    |                                  ----------  ^^^^^^^^^^ re-bound here\n    |                                  |\n    |                                  `Item` bound here first\n \n error[E0719]: the value of the associated type `Item` (from trait `Iterator`) is already specified\n-  --> $DIR/duplicate.rs:142:46\n+  --> $DIR/duplicate.rs:140:46\n    |\n LL | trait TRSW2 where Self: Iterator<Item: Copy, Item: Copy> {}\n    |                                  ----------  ^^^^^^^^^^ re-bound here\n    |                                  |\n    |                                  `Item` bound here first\n \n error[E0719]: the value of the associated type `Item` (from trait `Iterator`) is already specified\n-  --> $DIR/duplicate.rs:142:46\n+  --> $DIR/duplicate.rs:140:46\n    |\n LL | trait TRSW2 where Self: Iterator<Item: Copy, Item: Copy> {}\n    |                                  ----------  ^^^^^^^^^^ re-bound here\n    |                                  |\n    |                                  `Item` bound here first\n \n error[E0719]: the value of the associated type `Item` (from trait `Iterator`) is already specified\n-  --> $DIR/duplicate.rs:145:49\n+  --> $DIR/duplicate.rs:143:49\n    |\n LL | trait TRSW3 where Self: Iterator<Item: 'static, Item: 'static> {}\n    |                                  -------------  ^^^^^^^^^^^^^ re-bound here\n    |                                  |\n    |                                  `Item` bound here first\n \n error[E0719]: the value of the associated type `Item` (from trait `Iterator`) is already specified\n-  --> $DIR/duplicate.rs:145:49\n+  --> $DIR/duplicate.rs:143:49\n    |\n LL | trait TRSW3 where Self: Iterator<Item: 'static, Item: 'static> {}\n    |                                  -------------  ^^^^^^^^^^^^^ re-bound here\n    |                                  |\n    |                                  `Item` bound here first\n \n error[E0719]: the value of the associated type `Item` (from trait `Iterator`) is already specified\n-  --> $DIR/duplicate.rs:155:40\n+  --> $DIR/duplicate.rs:153:40\n    |\n LL | type TADyn1 = dyn Iterator<Item: Copy, Item: Send>;\n    |                            ----------  ^^^^^^^^^^ re-bound here\n    |                            |\n    |                            `Item` bound here first\n \n error[E0719]: the value of the associated type `Item` (from trait `Iterator`) is already specified\n-  --> $DIR/duplicate.rs:157:44\n+  --> $DIR/duplicate.rs:155:44\n    |\n LL | type TADyn2 = Box<dyn Iterator<Item: Copy, Item: Copy>>;\n    |                                ----------  ^^^^^^^^^^ re-bound here\n    |                                |\n    |                                `Item` bound here first\n \n error[E0719]: the value of the associated type `Item` (from trait `Iterator`) is already specified\n-  --> $DIR/duplicate.rs:159:43\n+  --> $DIR/duplicate.rs:157:43\n    |\n LL | type TADyn3 = dyn Iterator<Item: 'static, Item: 'static>;\n    |                            -------------  ^^^^^^^^^^^^^ re-bound here\n    |                            |\n    |                            `Item` bound here first\n \n error[E0719]: the value of the associated type `Item` (from trait `Iterator`) is already specified\n-  --> $DIR/duplicate.rs:148:43\n+  --> $DIR/duplicate.rs:146:43\n    |\n LL | trait TRA1 { type A: Iterator<Item: Copy, Item: Send>; }\n    |                               ----------  ^^^^^^^^^^ re-bound here\n    |                               |\n    |                               `Item` bound here first\n \n error[E0719]: the value of the associated type `Item` (from trait `Iterator`) is already specified\n-  --> $DIR/duplicate.rs:150:43\n+  --> $DIR/duplicate.rs:148:43\n    |\n LL | trait TRA2 { type A: Iterator<Item: Copy, Item: Copy>; }\n    |                               ----------  ^^^^^^^^^^ re-bound here\n    |                               |\n    |                               `Item` bound here first\n \n error[E0719]: the value of the associated type `Item` (from trait `Iterator`) is already specified\n-  --> $DIR/duplicate.rs:152:46\n+  --> $DIR/duplicate.rs:150:46\n    |\n LL | trait TRA3 { type A: Iterator<Item: 'static, Item: 'static>; }\n    |                               -------------  ^^^^^^^^^^^^^ re-bound here"}, {"sha": "c3319a7050d5d0d20f3d01ae712c71315900bfd7", "filename": "src/test/ui/associated-type-bounds/duplicate.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fui%2Fassociated-type-bounds%2Fduplicate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fui%2Fassociated-type-bounds%2Fduplicate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fassociated-type-bounds%2Fduplicate.rs?ref=3ea62cb5d19846b44172d861ae231c8c09322800", "patch": "@@ -1,5 +1,3 @@\n-// ignore-tidy-linelength\n-\n #![feature(associated_type_bounds)]\n // revisions: min_tait full_tait\n #![feature(min_type_alias_impl_trait)]"}, {"sha": "43429ba2329f9af49d71acace07658fb5471ccf0", "filename": "src/test/ui/async-await/issue-61949-self-return-type.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fui%2Fasync-await%2Fissue-61949-self-return-type.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fui%2Fasync-await%2Fissue-61949-self-return-type.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fasync-await%2Fissue-61949-self-return-type.rs?ref=3ea62cb5d19846b44172d861ae231c8c09322800", "patch": "@@ -1,4 +1,3 @@\n-// ignore-tidy-linelength\n // edition:2018\n \n // This test checks that `Self` is prohibited as a return type. See #61949 for context."}, {"sha": "52b726e186e3adec4a9431ebdcdc1fd916b95065", "filename": "src/test/ui/async-await/issue-61949-self-return-type.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fui%2Fasync-await%2Fissue-61949-self-return-type.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fui%2Fasync-await%2Fissue-61949-self-return-type.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fasync-await%2Fissue-61949-self-return-type.stderr?ref=3ea62cb5d19846b44172d861ae231c8c09322800", "patch": "@@ -1,5 +1,5 @@\n error[E0760]: `async fn` return type cannot contain a projection or `Self` that references lifetimes from a parent scope\n-  --> $DIR/issue-61949-self-return-type.rs:11:40\n+  --> $DIR/issue-61949-self-return-type.rs:10:40\n    |\n LL |     pub async fn new(_bar: &'a i32) -> Self {\n    |                                        ^^^^ help: consider spelling out the type instead: `Foo<'a>`"}, {"sha": "0e6c0635adb45dce953311af9de061e78610555b", "filename": "src/test/ui/borrowck/borrowck-describe-lvalue.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-describe-lvalue.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-describe-lvalue.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-describe-lvalue.rs?ref=3ea62cb5d19846b44172d861ae231c8c09322800", "patch": "@@ -1,5 +1,3 @@\n-// ignore-tidy-linelength\n-\n pub struct Foo {\n   x: u32\n }"}, {"sha": "0f2ebbcbf3cdb6a06c53d614ca860a94acb448e0", "filename": "src/test/ui/borrowck/borrowck-describe-lvalue.stderr", "status": "modified", "additions": 32, "deletions": 32, "changes": 64, "blob_url": "https://github.com/rust-lang/rust/blob/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-describe-lvalue.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-describe-lvalue.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-describe-lvalue.stderr?ref=3ea62cb5d19846b44172d861ae231c8c09322800", "patch": "@@ -1,5 +1,5 @@\n error[E0499]: cannot borrow `x` as mutable more than once at a time\n-  --> $DIR/borrowck-describe-lvalue.rs:256:13\n+  --> $DIR/borrowck-describe-lvalue.rs:254:13\n    |\n LL |             let y = &mut x;\n    |                     ------ first mutable borrow occurs here\n@@ -9,7 +9,7 @@ LL |             *y = 1;\n    |             ------ first borrow later used here\n \n error[E0499]: cannot borrow `x` as mutable more than once at a time\n-  --> $DIR/borrowck-describe-lvalue.rs:266:20\n+  --> $DIR/borrowck-describe-lvalue.rs:264:20\n    |\n LL |                    let y = &mut x;\n    |                            ------ first mutable borrow occurs here\n@@ -19,7 +19,7 @@ LL |                    *y = 1;\n    |                    ------ first borrow later used here\n \n error: captured variable cannot escape `FnMut` closure body\n-  --> $DIR/borrowck-describe-lvalue.rs:264:16\n+  --> $DIR/borrowck-describe-lvalue.rs:262:16\n    |\n LL |           let mut x = 0;\n    |               ----- variable defined here\n@@ -38,7 +38,7 @@ LL | |                 }\n    = note: ...therefore, they cannot allow references to captured variables to escape\n \n error[E0503]: cannot use `f.x` because it was mutably borrowed\n-  --> $DIR/borrowck-describe-lvalue.rs:39:9\n+  --> $DIR/borrowck-describe-lvalue.rs:37:9\n    |\n LL |         let x = f.x();\n    |                 - borrow of `f` occurs here\n@@ -48,7 +48,7 @@ LL |         drop(x);\n    |              - borrow later used here\n \n error[E0503]: cannot use `g.0` because it was mutably borrowed\n-  --> $DIR/borrowck-describe-lvalue.rs:46:9\n+  --> $DIR/borrowck-describe-lvalue.rs:44:9\n    |\n LL |         let x = g.x();\n    |                 - borrow of `g` occurs here\n@@ -58,7 +58,7 @@ LL |         drop(x);\n    |              - borrow later used here\n \n error[E0503]: cannot use `h.0` because it was mutably borrowed\n-  --> $DIR/borrowck-describe-lvalue.rs:53:9\n+  --> $DIR/borrowck-describe-lvalue.rs:51:9\n    |\n LL |         let x = &mut h.0;\n    |                 -------- borrow of `h.0` occurs here\n@@ -68,7 +68,7 @@ LL |         drop(x);\n    |              - borrow later used here\n \n error[E0503]: cannot use `e.0` because it was mutably borrowed\n-  --> $DIR/borrowck-describe-lvalue.rs:61:20\n+  --> $DIR/borrowck-describe-lvalue.rs:59:20\n    |\n LL |         let x = e.x();\n    |                 - borrow of `e` occurs here\n@@ -80,7 +80,7 @@ LL |         drop(x);\n    |              - borrow later used here\n \n error[E0503]: cannot use `u.a` because it was mutably borrowed\n-  --> $DIR/borrowck-describe-lvalue.rs:69:9\n+  --> $DIR/borrowck-describe-lvalue.rs:67:9\n    |\n LL |         let x = &mut u.a;\n    |                 -------- borrow of `u.a` occurs here\n@@ -90,7 +90,7 @@ LL |         drop(x);\n    |              - borrow later used here\n \n error[E0503]: cannot use `f.x` because it was mutably borrowed\n-  --> $DIR/borrowck-describe-lvalue.rs:76:9\n+  --> $DIR/borrowck-describe-lvalue.rs:74:9\n    |\n LL |         let x = f.x();\n    |                 - borrow of `*f` occurs here\n@@ -100,7 +100,7 @@ LL |         drop(x);\n    |              - borrow later used here\n \n error[E0503]: cannot use `g.0` because it was mutably borrowed\n-  --> $DIR/borrowck-describe-lvalue.rs:83:9\n+  --> $DIR/borrowck-describe-lvalue.rs:81:9\n    |\n LL |         let x = g.x();\n    |                 - borrow of `*g` occurs here\n@@ -110,7 +110,7 @@ LL |         drop(x);\n    |              - borrow later used here\n \n error[E0503]: cannot use `h.0` because it was mutably borrowed\n-  --> $DIR/borrowck-describe-lvalue.rs:90:9\n+  --> $DIR/borrowck-describe-lvalue.rs:88:9\n    |\n LL |         let x = &mut h.0;\n    |                 -------- borrow of `h.0` occurs here\n@@ -120,7 +120,7 @@ LL |         drop(x);\n    |              - borrow later used here\n \n error[E0503]: cannot use `e.0` because it was mutably borrowed\n-  --> $DIR/borrowck-describe-lvalue.rs:98:20\n+  --> $DIR/borrowck-describe-lvalue.rs:96:20\n    |\n LL |         let x = e.x();\n    |                 - borrow of `*e` occurs here\n@@ -132,7 +132,7 @@ LL |         drop(x);\n    |              - borrow later used here\n \n error[E0503]: cannot use `u.a` because it was mutably borrowed\n-  --> $DIR/borrowck-describe-lvalue.rs:107:9\n+  --> $DIR/borrowck-describe-lvalue.rs:105:9\n    |\n LL |         let x = &mut u.a;\n    |                 -------- borrow of `u.a` occurs here\n@@ -142,7 +142,7 @@ LL |         drop(x);\n    |              - borrow later used here\n \n error[E0503]: cannot use `v[..]` because it was mutably borrowed\n-  --> $DIR/borrowck-describe-lvalue.rs:115:15\n+  --> $DIR/borrowck-describe-lvalue.rs:113:15\n    |\n LL |         let x = &mut v;\n    |                 ------ borrow of `v` occurs here\n@@ -154,7 +154,7 @@ LL |         drop(x);\n    |              - borrow later used here\n \n error[E0503]: cannot use `v[..]` because it was mutably borrowed\n-  --> $DIR/borrowck-describe-lvalue.rs:120:18\n+  --> $DIR/borrowck-describe-lvalue.rs:118:18\n    |\n LL |         let x = &mut v;\n    |                 ------ borrow of `v` occurs here\n@@ -166,7 +166,7 @@ LL |         drop(x);\n    |              - borrow later used here\n \n error[E0503]: cannot use `v[..]` because it was mutably borrowed\n-  --> $DIR/borrowck-describe-lvalue.rs:125:25\n+  --> $DIR/borrowck-describe-lvalue.rs:123:25\n    |\n LL |         let x = &mut v;\n    |                 ------ borrow of `v` occurs here\n@@ -178,7 +178,7 @@ LL |         drop(x);\n    |              - borrow later used here\n \n error[E0503]: cannot use `v[..]` because it was mutably borrowed\n-  --> $DIR/borrowck-describe-lvalue.rs:130:28\n+  --> $DIR/borrowck-describe-lvalue.rs:128:28\n    |\n LL |         let x = &mut v;\n    |                 ------ borrow of `v` occurs here\n@@ -190,7 +190,7 @@ LL |         drop(x);\n    |              - borrow later used here\n \n error[E0503]: cannot use `v[..]` because it was mutably borrowed\n-  --> $DIR/borrowck-describe-lvalue.rs:141:15\n+  --> $DIR/borrowck-describe-lvalue.rs:139:15\n    |\n LL |         let x = &mut v;\n    |                 ------ borrow of `v` occurs here\n@@ -202,7 +202,7 @@ LL |         drop(x);\n    |              - borrow later used here\n \n error[E0503]: cannot use `v[..]` because it was mutably borrowed\n-  --> $DIR/borrowck-describe-lvalue.rs:146:18\n+  --> $DIR/borrowck-describe-lvalue.rs:144:18\n    |\n LL |         let x = &mut v;\n    |                 ------ borrow of `v` occurs here\n@@ -214,7 +214,7 @@ LL |         drop(x);\n    |              - borrow later used here\n \n error[E0503]: cannot use `v[..]` because it was mutably borrowed\n-  --> $DIR/borrowck-describe-lvalue.rs:151:15\n+  --> $DIR/borrowck-describe-lvalue.rs:149:15\n    |\n LL |         let x = &mut v;\n    |                 ------ borrow of `v` occurs here\n@@ -226,7 +226,7 @@ LL |         drop(x);\n    |              - borrow later used here\n \n error[E0503]: cannot use `v[..]` because it was mutably borrowed\n-  --> $DIR/borrowck-describe-lvalue.rs:156:18\n+  --> $DIR/borrowck-describe-lvalue.rs:154:18\n    |\n LL |         let x = &mut v;\n    |                 ------ borrow of `v` occurs here\n@@ -238,7 +238,7 @@ LL |         drop(x);\n    |              - borrow later used here\n \n error[E0503]: cannot use `e` because it was mutably borrowed\n-  --> $DIR/borrowck-describe-lvalue.rs:169:13\n+  --> $DIR/borrowck-describe-lvalue.rs:167:13\n    |\n LL |         let x = &mut e;\n    |                 ------ borrow of `e` occurs here\n@@ -250,7 +250,7 @@ LL |         drop(x);\n    |              - borrow later used here\n \n error[E0502]: cannot borrow `e.0` as immutable because it is also borrowed as mutable\n-  --> $DIR/borrowck-describe-lvalue.rs:169:18\n+  --> $DIR/borrowck-describe-lvalue.rs:167:18\n    |\n LL |         let x = &mut e;\n    |                 ------ mutable borrow occurs here\n@@ -262,7 +262,7 @@ LL |         drop(x);\n    |              - mutable borrow later used here\n \n error[E0502]: cannot borrow `e.x` as immutable because it is also borrowed as mutable\n-  --> $DIR/borrowck-describe-lvalue.rs:173:23\n+  --> $DIR/borrowck-describe-lvalue.rs:171:23\n    |\n LL |         let x = &mut e;\n    |                 ------ mutable borrow occurs here\n@@ -274,7 +274,7 @@ LL |         drop(x);\n    |              - mutable borrow later used here\n \n error[E0502]: cannot borrow `s.y.0` as immutable because it is also borrowed as mutable\n-  --> $DIR/borrowck-describe-lvalue.rs:186:22\n+  --> $DIR/borrowck-describe-lvalue.rs:184:22\n    |\n LL |         let x = &mut s;\n    |                 ------ mutable borrow occurs here\n@@ -286,7 +286,7 @@ LL |         drop(x);\n    |              - mutable borrow later used here\n \n error[E0502]: cannot borrow `s.x.y` as immutable because it is also borrowed as mutable\n-  --> $DIR/borrowck-describe-lvalue.rs:192:28\n+  --> $DIR/borrowck-describe-lvalue.rs:190:28\n    |\n LL |         let x = &mut s;\n    |                 ------ mutable borrow occurs here\n@@ -298,7 +298,7 @@ LL |         drop(x);\n    |              - mutable borrow later used here\n \n error[E0503]: cannot use `*v` because it was mutably borrowed\n-  --> $DIR/borrowck-describe-lvalue.rs:234:9\n+  --> $DIR/borrowck-describe-lvalue.rs:232:9\n    |\n LL |         let x = &mut v;\n    |                 ------ borrow of `v` occurs here\n@@ -309,7 +309,7 @@ LL |         drop(x);\n    |              - borrow later used here\n \n error[E0503]: cannot use `v[_].y` because it was mutably borrowed\n-  --> $DIR/borrowck-describe-lvalue.rs:234:9\n+  --> $DIR/borrowck-describe-lvalue.rs:232:9\n    |\n LL |         let x = &mut v;\n    |                 ------ borrow of `v` occurs here\n@@ -320,7 +320,7 @@ LL |         drop(x);\n    |              - borrow later used here\n \n error[E0502]: cannot borrow `v[..].x` as immutable because it is also borrowed as mutable\n-  --> $DIR/borrowck-describe-lvalue.rs:245:24\n+  --> $DIR/borrowck-describe-lvalue.rs:243:24\n    |\n LL |         let x = &mut v;\n    |                 ------ mutable borrow occurs here\n@@ -332,7 +332,7 @@ LL |         drop(x);\n    |              - mutable borrow later used here\n \n error[E0502]: cannot borrow `*block.current` as immutable because it is also borrowed as mutable\n-  --> $DIR/borrowck-describe-lvalue.rs:208:29\n+  --> $DIR/borrowck-describe-lvalue.rs:206:29\n    |\n LL |             let x = &mut block;\n    |                     ---------- mutable borrow occurs here\n@@ -343,7 +343,7 @@ LL |             drop(x);\n    |                  - mutable borrow later used here\n \n error[E0502]: cannot borrow `*block.current` as immutable because it is also borrowed as mutable\n-  --> $DIR/borrowck-describe-lvalue.rs:223:33\n+  --> $DIR/borrowck-describe-lvalue.rs:221:33\n    |\n LL |             let x = &mut block;\n    |                     ---------- mutable borrow occurs here\n@@ -354,7 +354,7 @@ LL |             drop(x);\n    |                  - mutable borrow later used here\n \n error[E0382]: use of moved value: `x`\n-  --> $DIR/borrowck-describe-lvalue.rs:276:22\n+  --> $DIR/borrowck-describe-lvalue.rs:274:22\n    |\n LL |                 drop(x);\n    |                      - value moved here"}, {"sha": "f01915398a4129ede94be2350e24d22a4fb1524d", "filename": "src/test/ui/borrowck/borrowck-union-borrow.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-union-borrow.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-union-borrow.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-union-borrow.rs?ref=3ea62cb5d19846b44172d861ae231c8c09322800", "patch": "@@ -1,5 +1,3 @@\n-// ignore-tidy-linelength\n-\n #[derive(Clone, Copy)]\n union U {\n     a: u8,"}, {"sha": "395cd0b4855ab79e86a047747644051975f302db", "filename": "src/test/ui/borrowck/borrowck-union-borrow.stderr", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-union-borrow.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-union-borrow.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-union-borrow.stderr?ref=3ea62cb5d19846b44172d861ae231c8c09322800", "patch": "@@ -1,5 +1,5 @@\n error[E0502]: cannot borrow `u.a` as mutable because it is also borrowed as immutable\n-  --> $DIR/borrowck-union-borrow.rs:25:23\n+  --> $DIR/borrowck-union-borrow.rs:23:23\n    |\n LL |             let ra = &u.a;\n    |                      ---- immutable borrow occurs here\n@@ -9,7 +9,7 @@ LL |             drop(ra);\n    |                  -- immutable borrow later used here\n \n error[E0506]: cannot assign to `u.a` because it is borrowed\n-  --> $DIR/borrowck-union-borrow.rs:30:13\n+  --> $DIR/borrowck-union-borrow.rs:28:13\n    |\n LL |             let ra = &u.a;\n    |                      ---- borrow of `u.a` occurs here\n@@ -19,7 +19,7 @@ LL |             drop(ra);\n    |                  -- borrow later used here\n \n error[E0502]: cannot borrow `u` (via `u.b`) as mutable because it is also borrowed as immutable (via `u.a`)\n-  --> $DIR/borrowck-union-borrow.rs:46:23\n+  --> $DIR/borrowck-union-borrow.rs:44:23\n    |\n LL |             let ra = &u.a;\n    |                      ---- immutable borrow occurs here (via `u.a`)\n@@ -31,7 +31,7 @@ LL |             drop(ra);\n    = note: `u.b` is a field of the union `U`, so it overlaps the field `u.a`\n \n error[E0506]: cannot assign to `u.b` because it is borrowed\n-  --> $DIR/borrowck-union-borrow.rs:51:13\n+  --> $DIR/borrowck-union-borrow.rs:49:13\n    |\n LL |             let ra = &u.a;\n    |                      ---- borrow of `u.b` occurs here\n@@ -41,7 +41,7 @@ LL |             drop(ra);\n    |                  -- borrow later used here\n \n error[E0502]: cannot borrow `u.a` as immutable because it is also borrowed as mutable\n-  --> $DIR/borrowck-union-borrow.rs:57:22\n+  --> $DIR/borrowck-union-borrow.rs:55:22\n    |\n LL |             let rma = &mut u.a;\n    |                       -------- mutable borrow occurs here\n@@ -51,7 +51,7 @@ LL |             drop(rma);\n    |                  --- mutable borrow later used here\n \n error[E0503]: cannot use `u.a` because it was mutably borrowed\n-  --> $DIR/borrowck-union-borrow.rs:62:21\n+  --> $DIR/borrowck-union-borrow.rs:60:21\n    |\n LL |             let ra = &mut u.a;\n    |                      -------- borrow of `u.a` occurs here\n@@ -61,7 +61,7 @@ LL |             drop(ra);\n    |                  -- borrow later used here\n \n error[E0499]: cannot borrow `u.a` as mutable more than once at a time\n-  --> $DIR/borrowck-union-borrow.rs:67:24\n+  --> $DIR/borrowck-union-borrow.rs:65:24\n    |\n LL |             let rma = &mut u.a;\n    |                       -------- first mutable borrow occurs here\n@@ -71,7 +71,7 @@ LL |             drop(rma);\n    |                  --- first borrow later used here\n \n error[E0506]: cannot assign to `u.a` because it is borrowed\n-  --> $DIR/borrowck-union-borrow.rs:72:13\n+  --> $DIR/borrowck-union-borrow.rs:70:13\n    |\n LL |             let rma = &mut u.a;\n    |                       -------- borrow of `u.a` occurs here\n@@ -81,7 +81,7 @@ LL |             drop(rma);\n    |                  --- borrow later used here\n \n error[E0502]: cannot borrow `u` (via `u.b`) as immutable because it is also borrowed as mutable (via `u.a`)\n-  --> $DIR/borrowck-union-borrow.rs:78:22\n+  --> $DIR/borrowck-union-borrow.rs:76:22\n    |\n LL |             let rma = &mut u.a;\n    |                       -------- mutable borrow occurs here (via `u.a`)\n@@ -93,7 +93,7 @@ LL |             drop(rma);\n    = note: `u.b` is a field of the union `U`, so it overlaps the field `u.a`\n \n error[E0503]: cannot use `u.b` because it was mutably borrowed\n-  --> $DIR/borrowck-union-borrow.rs:83:21\n+  --> $DIR/borrowck-union-borrow.rs:81:21\n    |\n LL |             let ra = &mut u.a;\n    |                      -------- borrow of `u.a` occurs here\n@@ -104,7 +104,7 @@ LL |             drop(ra);\n    |                  -- borrow later used here\n \n error[E0499]: cannot borrow `u` (via `u.b`) as mutable more than once at a time\n-  --> $DIR/borrowck-union-borrow.rs:89:24\n+  --> $DIR/borrowck-union-borrow.rs:87:24\n    |\n LL |             let rma = &mut u.a;\n    |                       -------- first mutable borrow occurs here (via `u.a`)\n@@ -116,7 +116,7 @@ LL |             drop(rma);\n    = note: `u.b` is a field of the union `U`, so it overlaps the field `u.a`\n \n error[E0506]: cannot assign to `u.b` because it is borrowed\n-  --> $DIR/borrowck-union-borrow.rs:94:13\n+  --> $DIR/borrowck-union-borrow.rs:92:13\n    |\n LL |             let rma = &mut u.a;\n    |                       -------- borrow of `u.b` occurs here"}, {"sha": "bba3393fc140518c279b198907c27ad82a86079b", "filename": "src/test/ui/borrowck/two-phase-allow-access-during-reservation.nll_target.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fui%2Fborrowck%2Ftwo-phase-allow-access-during-reservation.nll_target.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fui%2Fborrowck%2Ftwo-phase-allow-access-during-reservation.nll_target.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fborrowck%2Ftwo-phase-allow-access-during-reservation.nll_target.stderr?ref=3ea62cb5d19846b44172d861ae231c8c09322800", "patch": "@@ -1,5 +1,5 @@\n error[E0503]: cannot use `i` because it was mutably borrowed\n-  --> $DIR/two-phase-allow-access-during-reservation.rs:30:19\n+  --> $DIR/two-phase-allow-access-during-reservation.rs:28:19\n    |\n LL |     /*1*/ let p = &mut i; // (reservation of `i` starts here)\n    |                   ------ borrow of `i` occurs here\n@@ -11,7 +11,7 @@ LL |     /*3*/ *p += 1;        // (mutable borrow of `i` starts here, since `p`\n    |           ------- borrow later used here\n \n error[E0503]: cannot use `i` because it was mutably borrowed\n-  --> $DIR/two-phase-allow-access-during-reservation.rs:35:19\n+  --> $DIR/two-phase-allow-access-during-reservation.rs:33:19\n    |\n LL |     /*1*/ let p = &mut i; // (reservation of `i` starts here)\n    |                   ------ borrow of `i` occurs here"}, {"sha": "3afa679ce390ad86711a6efa6bbc6f12453935fa", "filename": "src/test/ui/borrowck/two-phase-allow-access-during-reservation.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fui%2Fborrowck%2Ftwo-phase-allow-access-during-reservation.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fui%2Fborrowck%2Ftwo-phase-allow-access-during-reservation.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fborrowck%2Ftwo-phase-allow-access-during-reservation.rs?ref=3ea62cb5d19846b44172d861ae231c8c09322800", "patch": "@@ -1,5 +1,3 @@\n-// ignore-tidy-linelength\n-\n // revisions: nll_target\n \n // The following revisions are disabled due to missing support for two_phase_beyond_autoref"}, {"sha": "2cbdc0901bc5021c4312f543192827bd6e784c7f", "filename": "src/test/ui/borrowck/two-phase-reservation-sharing-interference.nll_target.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fui%2Fborrowck%2Ftwo-phase-reservation-sharing-interference.nll_target.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fui%2Fborrowck%2Ftwo-phase-reservation-sharing-interference.nll_target.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fborrowck%2Ftwo-phase-reservation-sharing-interference.nll_target.stderr?ref=3ea62cb5d19846b44172d861ae231c8c09322800", "patch": "@@ -1,5 +1,5 @@\n error[E0502]: cannot borrow `vec` as mutable because it is also borrowed as immutable\n-  --> $DIR/two-phase-reservation-sharing-interference.rs:36:17\n+  --> $DIR/two-phase-reservation-sharing-interference.rs:34:17\n    |\n LL |         let shared = &vec;\n    |                      ---- immutable borrow occurs here"}, {"sha": "f7392bfeaab36414997d0ee85ee6da47a2621d9c", "filename": "src/test/ui/borrowck/two-phase-reservation-sharing-interference.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fui%2Fborrowck%2Ftwo-phase-reservation-sharing-interference.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fui%2Fborrowck%2Ftwo-phase-reservation-sharing-interference.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fborrowck%2Ftwo-phase-reservation-sharing-interference.rs?ref=3ea62cb5d19846b44172d861ae231c8c09322800", "patch": "@@ -1,5 +1,3 @@\n-// ignore-tidy-linelength\n-\n // revisions: nll_target\n \n // The following revisions are disabled due to missing support from two-phase beyond autorefs"}, {"sha": "5a6465bd064691c9dcda922549b1e6af81f79673", "filename": "src/test/ui/commandline-argfile-missing.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fui%2Fcommandline-argfile-missing.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fui%2Fcommandline-argfile-missing.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcommandline-argfile-missing.rs?ref=3ea62cb5d19846b44172d861ae231c8c09322800", "patch": "@@ -1,6 +1,5 @@\n // Check to see if we can get parameters from an @argsfile file\n //\n-// ignore-tidy-linelength\n // normalize-stderr-test: \"os error \\d+\" -> \"os error $$ERR\"\n // normalize-stderr-test: \"commandline-argfile-missing.args:[^(]*\" -> \"commandline-argfile-missing.args: $$FILE_MISSING \"\n // compile-flags: --cfg cmdline_set @{{src-base}}/commandline-argfile-missing.args"}, {"sha": "e0fcf27833096b84766ba1a9c1fb5f0342622a84", "filename": "src/test/ui/consts/issue-32829-2.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fui%2Fconsts%2Fissue-32829-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fui%2Fconsts%2Fissue-32829-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fissue-32829-2.rs?ref=3ea62cb5d19846b44172d861ae231c8c09322800", "patch": "@@ -1,5 +1,3 @@\n-// ignore-tidy-linelength\n-\n const bad : u32 = {\n     {\n         5;"}, {"sha": "1d265875c5c97828ac47d84a5c38aeb6f7d4de70", "filename": "src/test/ui/consts/issue-32829-2.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fui%2Fconsts%2Fissue-32829-2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fui%2Fconsts%2Fissue-32829-2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fissue-32829-2.stderr?ref=3ea62cb5d19846b44172d861ae231c8c09322800", "patch": "@@ -1,17 +1,17 @@\n error[E0015]: calls in constants are limited to constant functions, tuple structs and tuple variants\n-  --> $DIR/issue-32829-2.rs:12:9\n+  --> $DIR/issue-32829-2.rs:10:9\n    |\n LL |         invalid();\n    |         ^^^^^^^^^\n \n error[E0015]: calls in statics are limited to constant functions, tuple structs and tuple variants\n-  --> $DIR/issue-32829-2.rs:34:9\n+  --> $DIR/issue-32829-2.rs:32:9\n    |\n LL |         invalid();\n    |         ^^^^^^^^^\n \n error[E0015]: calls in statics are limited to constant functions, tuple structs and tuple variants\n-  --> $DIR/issue-32829-2.rs:56:9\n+  --> $DIR/issue-32829-2.rs:54:9\n    |\n LL |         invalid();\n    |         ^^^^^^^^^"}, {"sha": "7ce45ba9c4b2b77e5ea9dd23a4e49fed5894efce", "filename": "src/test/ui/consts/offset_ub.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fui%2Fconsts%2Foffset_ub.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fui%2Fconsts%2Foffset_ub.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Foffset_ub.rs?ref=3ea62cb5d19846b44172d861ae231c8c09322800", "patch": "@@ -1,4 +1,3 @@\n-// ignore-tidy-linelength\n #![feature(const_ptr_offset)]\n use std::ptr;\n "}, {"sha": "082142fbbb77c4f9cf348289fec15fa8b65cd437", "filename": "src/test/ui/consts/offset_ub.stderr", "status": "modified", "additions": 22, "deletions": 22, "changes": 44, "blob_url": "https://github.com/rust-lang/rust/blob/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fui%2Fconsts%2Foffset_ub.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fui%2Fconsts%2Foffset_ub.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Foffset_ub.stderr?ref=3ea62cb5d19846b44172d861ae231c8c09322800", "patch": "@@ -6,9 +6,9 @@ LL |         unsafe { intrinsics::offset(self, count) }\n    |                  |\n    |                  overflowing in-bounds pointer arithmetic\n    |                  inside `ptr::const_ptr::<impl *const u8>::offset` at $SRC_DIR/core/src/ptr/const_ptr.rs:LL:COL\n-   |                  inside `BEFORE_START` at $DIR/offset_ub.rs:7:46\n+   |                  inside `BEFORE_START` at $DIR/offset_ub.rs:6:46\n    | \n-  ::: $DIR/offset_ub.rs:7:1\n+  ::: $DIR/offset_ub.rs:6:1\n    |\n LL | pub const BEFORE_START: *const u8 = unsafe { (&0u8 as *const u8).offset(-1) };\n    | ------------------------------------------------------------------------------\n@@ -25,9 +25,9 @@ LL |         unsafe { intrinsics::offset(self, count) }\n    |                  |\n    |                  inbounds test failed: pointer must be in-bounds at offset 2, but is outside bounds of allocN which has size 1\n    |                  inside `ptr::const_ptr::<impl *const u8>::offset` at $SRC_DIR/core/src/ptr/const_ptr.rs:LL:COL\n-   |                  inside `AFTER_END` at $DIR/offset_ub.rs:8:43\n+   |                  inside `AFTER_END` at $DIR/offset_ub.rs:7:43\n    | \n-  ::: $DIR/offset_ub.rs:8:1\n+  ::: $DIR/offset_ub.rs:7:1\n    |\n LL | pub const AFTER_END: *const u8 = unsafe { (&0u8 as *const u8).offset(2) };\n    | --------------------------------------------------------------------------\n@@ -43,9 +43,9 @@ LL |         unsafe { intrinsics::offset(self, count) }\n    |                  |\n    |                  inbounds test failed: pointer must be in-bounds at offset 101, but is outside bounds of allocN which has size 100\n    |                  inside `ptr::const_ptr::<impl *const u8>::offset` at $SRC_DIR/core/src/ptr/const_ptr.rs:LL:COL\n-   |                  inside `AFTER_ARRAY` at $DIR/offset_ub.rs:9:45\n+   |                  inside `AFTER_ARRAY` at $DIR/offset_ub.rs:8:45\n    | \n-  ::: $DIR/offset_ub.rs:9:1\n+  ::: $DIR/offset_ub.rs:8:1\n    |\n LL | pub const AFTER_ARRAY: *const u8 = unsafe { [0u8; 100].as_ptr().offset(101) };\n    | ------------------------------------------------------------------------------\n@@ -61,9 +61,9 @@ LL |         unsafe { intrinsics::offset(self, count) }\n    |                  |\n    |                  overflowing in-bounds pointer arithmetic\n    |                  inside `ptr::const_ptr::<impl *const u16>::offset` at $SRC_DIR/core/src/ptr/const_ptr.rs:LL:COL\n-   |                  inside `OVERFLOW` at $DIR/offset_ub.rs:11:43\n+   |                  inside `OVERFLOW` at $DIR/offset_ub.rs:10:43\n    | \n-  ::: $DIR/offset_ub.rs:11:1\n+  ::: $DIR/offset_ub.rs:10:1\n    |\n LL | pub const OVERFLOW: *const u16 = unsafe { [0u16; 1].as_ptr().offset(isize::MAX) };\n    | ----------------------------------------------------------------------------------\n@@ -79,9 +79,9 @@ LL |         unsafe { intrinsics::offset(self, count) }\n    |                  |\n    |                  overflowing in-bounds pointer arithmetic\n    |                  inside `ptr::const_ptr::<impl *const u16>::offset` at $SRC_DIR/core/src/ptr/const_ptr.rs:LL:COL\n-   |                  inside `UNDERFLOW` at $DIR/offset_ub.rs:12:44\n+   |                  inside `UNDERFLOW` at $DIR/offset_ub.rs:11:44\n    | \n-  ::: $DIR/offset_ub.rs:12:1\n+  ::: $DIR/offset_ub.rs:11:1\n    |\n LL | pub const UNDERFLOW: *const u16 = unsafe { [0u16; 1].as_ptr().offset(isize::MIN) };\n    | -----------------------------------------------------------------------------------\n@@ -97,9 +97,9 @@ LL |         unsafe { intrinsics::offset(self, count) }\n    |                  |\n    |                  overflowing in-bounds pointer arithmetic\n    |                  inside `ptr::const_ptr::<impl *const u8>::offset` at $SRC_DIR/core/src/ptr/const_ptr.rs:LL:COL\n-   |                  inside `OVERFLOW_ADDRESS_SPACE` at $DIR/offset_ub.rs:13:56\n+   |                  inside `OVERFLOW_ADDRESS_SPACE` at $DIR/offset_ub.rs:12:56\n    | \n-  ::: $DIR/offset_ub.rs:13:1\n+  ::: $DIR/offset_ub.rs:12:1\n    |\n LL | pub const OVERFLOW_ADDRESS_SPACE: *const u8 = unsafe { (usize::MAX as *const u8).offset(2) };\n    | ---------------------------------------------------------------------------------------------\n@@ -115,9 +115,9 @@ LL |         unsafe { intrinsics::offset(self, count) }\n    |                  |\n    |                  overflowing in-bounds pointer arithmetic\n    |                  inside `ptr::const_ptr::<impl *const u8>::offset` at $SRC_DIR/core/src/ptr/const_ptr.rs:LL:COL\n-   |                  inside `UNDERFLOW_ADDRESS_SPACE` at $DIR/offset_ub.rs:14:57\n+   |                  inside `UNDERFLOW_ADDRESS_SPACE` at $DIR/offset_ub.rs:13:57\n    | \n-  ::: $DIR/offset_ub.rs:14:1\n+  ::: $DIR/offset_ub.rs:13:1\n    |\n LL | pub const UNDERFLOW_ADDRESS_SPACE: *const u8 = unsafe { (1 as *const u8).offset(-2) };\n    | --------------------------------------------------------------------------------------\n@@ -133,9 +133,9 @@ LL |         unsafe { intrinsics::offset(self, count) }\n    |                  |\n    |                  inbounds test failed: pointer must be in-bounds at offset 1, but is outside bounds of allocN which has size 0\n    |                  inside `ptr::const_ptr::<impl *const u8>::offset` at $SRC_DIR/core/src/ptr/const_ptr.rs:LL:COL\n-   |                  inside `ZERO_SIZED_ALLOC` at $DIR/offset_ub.rs:16:50\n+   |                  inside `ZERO_SIZED_ALLOC` at $DIR/offset_ub.rs:15:50\n    | \n-  ::: $DIR/offset_ub.rs:16:1\n+  ::: $DIR/offset_ub.rs:15:1\n    |\n LL | pub const ZERO_SIZED_ALLOC: *const u8 = unsafe { [0u8; 0].as_ptr().offset(1) };\n    | -------------------------------------------------------------------------------\n@@ -151,9 +151,9 @@ LL |         unsafe { intrinsics::offset(self, count) as *mut T }\n    |                  |\n    |                  unable to turn bytes into a pointer\n    |                  inside `ptr::mut_ptr::<impl *mut u8>::offset` at $SRC_DIR/core/src/ptr/mut_ptr.rs:LL:COL\n-   |                  inside `DANGLING` at $DIR/offset_ub.rs:17:42\n+   |                  inside `DANGLING` at $DIR/offset_ub.rs:16:42\n    | \n-  ::: $DIR/offset_ub.rs:17:1\n+  ::: $DIR/offset_ub.rs:16:1\n    |\n LL | pub const DANGLING: *const u8 = unsafe { ptr::NonNull::<u8>::dangling().as_ptr().offset(4) };\n    | ---------------------------------------------------------------------------------------------\n@@ -169,9 +169,9 @@ LL |         unsafe { intrinsics::offset(self, count) }\n    |                  |\n    |                  inbounds test failed: 0x0 is not a valid pointer\n    |                  inside `ptr::const_ptr::<impl *const u8>::offset` at $SRC_DIR/core/src/ptr/const_ptr.rs:LL:COL\n-   |                  inside `NULL_OFFSET_ZERO` at $DIR/offset_ub.rs:20:50\n+   |                  inside `NULL_OFFSET_ZERO` at $DIR/offset_ub.rs:19:50\n    | \n-  ::: $DIR/offset_ub.rs:20:1\n+  ::: $DIR/offset_ub.rs:19:1\n    |\n LL | pub const NULL_OFFSET_ZERO: *const u8 = unsafe { ptr::null::<u8>().offset(0) };\n    | -------------------------------------------------------------------------------\n@@ -187,9 +187,9 @@ LL |         unsafe { intrinsics::offset(self, count) }\n    |                  |\n    |                  unable to turn bytes into a pointer\n    |                  inside `ptr::const_ptr::<impl *const u8>::offset` at $SRC_DIR/core/src/ptr/const_ptr.rs:LL:COL\n-   |                  inside `UNDERFLOW_ABS` at $DIR/offset_ub.rs:23:47\n+   |                  inside `UNDERFLOW_ABS` at $DIR/offset_ub.rs:22:47\n    | \n-  ::: $DIR/offset_ub.rs:23:1\n+  ::: $DIR/offset_ub.rs:22:1\n    |\n LL | pub const UNDERFLOW_ABS: *const u8 = unsafe { (usize::MAX as *const u8).offset(isize::MIN) };\n    | ---------------------------------------------------------------------------------------------"}, {"sha": "b6c791c15fd20ce1b56e33c0d386445340eb1462", "filename": "src/test/ui/deprecation/deprecation-lint.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fui%2Fdeprecation%2Fdeprecation-lint.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fui%2Fdeprecation%2Fdeprecation-lint.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fdeprecation%2Fdeprecation-lint.rs?ref=3ea62cb5d19846b44172d861ae231c8c09322800", "patch": "@@ -1,5 +1,4 @@\n // aux-build:deprecation-lint.rs\n-// ignore-tidy-linelength\n \n #![deny(deprecated)]\n #![allow(warnings)]"}, {"sha": "959cf93bac05320d9852a8111328ce6fef224bc1", "filename": "src/test/ui/deprecation/deprecation-lint.stderr", "status": "modified", "additions": 123, "deletions": 123, "changes": 246, "blob_url": "https://github.com/rust-lang/rust/blob/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fui%2Fdeprecation%2Fdeprecation-lint.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fui%2Fdeprecation%2Fdeprecation-lint.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fdeprecation%2Fdeprecation-lint.stderr?ref=3ea62cb5d19846b44172d861ae231c8c09322800", "patch": "@@ -1,737 +1,737 @@\n error: use of deprecated function `deprecation_lint::deprecated`: text\n-  --> $DIR/deprecation-lint.rs:17:9\n+  --> $DIR/deprecation-lint.rs:16:9\n    |\n LL |         deprecated();\n    |         ^^^^^^^^^^\n    |\n note: the lint level is defined here\n-  --> $DIR/deprecation-lint.rs:4:9\n+  --> $DIR/deprecation-lint.rs:3:9\n    |\n LL | #![deny(deprecated)]\n    |         ^^^^^^^^^^\n \n error: use of deprecated associated function `deprecation_lint::Trait::trait_deprecated`: text\n-  --> $DIR/deprecation-lint.rs:22:9\n+  --> $DIR/deprecation-lint.rs:21:9\n    |\n LL |         Trait::trait_deprecated(&foo);\n    |         ^^^^^^^^^^^^^^^^^^^^^^^\n \n error: use of deprecated associated function `deprecation_lint::Trait::trait_deprecated`: text\n-  --> $DIR/deprecation-lint.rs:24:9\n+  --> $DIR/deprecation-lint.rs:23:9\n    |\n LL |         <Foo as Trait>::trait_deprecated(&foo);\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: use of deprecated function `deprecation_lint::deprecated_text`: text\n-  --> $DIR/deprecation-lint.rs:26:9\n+  --> $DIR/deprecation-lint.rs:25:9\n    |\n LL |         deprecated_text();\n    |         ^^^^^^^^^^^^^^^\n \n error: use of deprecated associated function `deprecation_lint::Trait::trait_deprecated_text`: text\n-  --> $DIR/deprecation-lint.rs:31:9\n+  --> $DIR/deprecation-lint.rs:30:9\n    |\n LL | ...   Trait::trait_deprecated_text(&foo);\n    |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: use of deprecated associated function `deprecation_lint::Trait::trait_deprecated_text`: text\n-  --> $DIR/deprecation-lint.rs:33:9\n+  --> $DIR/deprecation-lint.rs:32:9\n    |\n LL | ...   <Foo as Trait>::trait_deprecated_text(&foo);\n    |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: use of deprecated struct `deprecation_lint::DeprecatedStruct`: text\n-  --> $DIR/deprecation-lint.rs:35:17\n+  --> $DIR/deprecation-lint.rs:34:17\n    |\n LL |         let _ = DeprecatedStruct {\n    |                 ^^^^^^^^^^^^^^^^\n \n error: use of deprecated struct `deprecation_lint::DeprecatedUnitStruct`: text\n-  --> $DIR/deprecation-lint.rs:39:17\n+  --> $DIR/deprecation-lint.rs:38:17\n    |\n LL |         let _ = DeprecatedUnitStruct;\n    |                 ^^^^^^^^^^^^^^^^^^^^\n \n error: use of deprecated variant `deprecation_lint::Enum::DeprecatedVariant`: text\n-  --> $DIR/deprecation-lint.rs:41:17\n+  --> $DIR/deprecation-lint.rs:40:17\n    |\n LL |         let _ = Enum::DeprecatedVariant;\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^\n \n error: use of deprecated struct `deprecation_lint::DeprecatedTupleStruct`: text\n-  --> $DIR/deprecation-lint.rs:43:17\n+  --> $DIR/deprecation-lint.rs:42:17\n    |\n LL |         let _ = DeprecatedTupleStruct (1);\n    |                 ^^^^^^^^^^^^^^^^^^^^^\n \n error: use of deprecated struct `deprecation_lint::nested::DeprecatedStruct`: text\n-  --> $DIR/deprecation-lint.rs:45:17\n+  --> $DIR/deprecation-lint.rs:44:17\n    |\n LL |         let _ = nested::DeprecatedStruct {\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: use of deprecated struct `deprecation_lint::nested::DeprecatedUnitStruct`: text\n-  --> $DIR/deprecation-lint.rs:49:17\n+  --> $DIR/deprecation-lint.rs:48:17\n    |\n LL |         let _ = nested::DeprecatedUnitStruct;\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: use of deprecated variant `deprecation_lint::nested::Enum::DeprecatedVariant`: text\n-  --> $DIR/deprecation-lint.rs:51:17\n+  --> $DIR/deprecation-lint.rs:50:17\n    |\n LL | ...   let _ = nested::Enum::DeprecatedVariant;\n    |               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: use of deprecated struct `deprecation_lint::nested::DeprecatedTupleStruct`: text\n-  --> $DIR/deprecation-lint.rs:53:17\n+  --> $DIR/deprecation-lint.rs:52:17\n    |\n LL | ...   let _ = nested::DeprecatedTupleStruct (1);\n    |               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: use of deprecated function `deprecation_lint::deprecated_text`: text\n-  --> $DIR/deprecation-lint.rs:60:25\n+  --> $DIR/deprecation-lint.rs:59:25\n    |\n LL |         macro_test_arg!(deprecated_text());\n    |                         ^^^^^^^^^^^^^^^\n \n error: use of deprecated function `deprecation_lint::deprecated_text`: text\n-  --> $DIR/deprecation-lint.rs:61:41\n+  --> $DIR/deprecation-lint.rs:60:41\n    |\n LL |         macro_test_arg!(macro_test_arg!(deprecated_text()));\n    |                                         ^^^^^^^^^^^^^^^\n \n error: use of deprecated associated function `deprecation_lint::Trait::trait_deprecated`: text\n-  --> $DIR/deprecation-lint.rs:66:9\n+  --> $DIR/deprecation-lint.rs:65:9\n    |\n LL |         Trait::trait_deprecated(&foo);\n    |         ^^^^^^^^^^^^^^^^^^^^^^^\n \n error: use of deprecated associated function `deprecation_lint::Trait::trait_deprecated`: text\n-  --> $DIR/deprecation-lint.rs:68:9\n+  --> $DIR/deprecation-lint.rs:67:9\n    |\n LL |         <Foo as Trait>::trait_deprecated(&foo);\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: use of deprecated associated function `deprecation_lint::Trait::trait_deprecated_text`: text\n-  --> $DIR/deprecation-lint.rs:70:9\n+  --> $DIR/deprecation-lint.rs:69:9\n    |\n LL | ...   Trait::trait_deprecated_text(&foo);\n    |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: use of deprecated associated function `deprecation_lint::Trait::trait_deprecated_text`: text\n-  --> $DIR/deprecation-lint.rs:72:9\n+  --> $DIR/deprecation-lint.rs:71:9\n    |\n LL | ...   <Foo as Trait>::trait_deprecated_text(&foo);\n    |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: use of deprecated trait `deprecation_lint::DeprecatedTrait`: text\n-  --> $DIR/deprecation-lint.rs:82:10\n+  --> $DIR/deprecation-lint.rs:81:10\n    |\n LL |     impl DeprecatedTrait for S {}\n    |          ^^^^^^^^^^^^^^^\n \n error: use of deprecated trait `deprecation_lint::DeprecatedTrait`: text\n-  --> $DIR/deprecation-lint.rs:83:24\n+  --> $DIR/deprecation-lint.rs:82:24\n    |\n LL |     trait LocalTrait : DeprecatedTrait { }\n    |                        ^^^^^^^^^^^^^^^\n \n error: use of deprecated struct `deprecation_lint::Deprecated`: text\n-  --> $DIR/deprecation-lint.rs:114:17\n+  --> $DIR/deprecation-lint.rs:113:17\n    |\n LL |         let x = Deprecated {\n    |                 ^^^^^^^^^^\n \n error: use of deprecated struct `deprecation_lint::Deprecated`: text\n-  --> $DIR/deprecation-lint.rs:123:13\n+  --> $DIR/deprecation-lint.rs:122:13\n    |\n LL |         let Deprecated {\n    |             ^^^^^^^^^^\n \n error: use of deprecated struct `deprecation_lint::Deprecated`: text\n-  --> $DIR/deprecation-lint.rs:129:13\n+  --> $DIR/deprecation-lint.rs:128:13\n    |\n LL |         let Deprecated\n    |             ^^^^^^^^^^\n \n error: use of deprecated struct `deprecation_lint::Deprecated2`: text\n-  --> $DIR/deprecation-lint.rs:133:17\n+  --> $DIR/deprecation-lint.rs:132:17\n    |\n LL |         let x = Deprecated2(1, 2, 3);\n    |                 ^^^^^^^^^^^\n \n error: use of deprecated struct `deprecation_lint::Deprecated2`: text\n-  --> $DIR/deprecation-lint.rs:143:13\n+  --> $DIR/deprecation-lint.rs:142:13\n    |\n LL |         let Deprecated2\n    |             ^^^^^^^^^^^\n \n error: use of deprecated struct `deprecation_lint::Deprecated2`: text\n-  --> $DIR/deprecation-lint.rs:152:13\n+  --> $DIR/deprecation-lint.rs:151:13\n    |\n LL |         let Deprecated2\n    |             ^^^^^^^^^^^\n \n error: use of deprecated function `deprecation_lint::deprecated_mod::deprecated`: text\n-  --> $DIR/deprecation-lint.rs:163:9\n+  --> $DIR/deprecation-lint.rs:162:9\n    |\n LL |         deprecated_mod::deprecated();\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: use of deprecated function `this_crate::deprecated`: text\n-  --> $DIR/deprecation-lint.rs:246:9\n+  --> $DIR/deprecation-lint.rs:245:9\n    |\n LL |         deprecated();\n    |         ^^^^^^^^^^\n \n error: use of deprecated associated function `this_crate::Trait::trait_deprecated`: text\n-  --> $DIR/deprecation-lint.rs:251:9\n+  --> $DIR/deprecation-lint.rs:250:9\n    |\n LL |         Trait::trait_deprecated(&foo);\n    |         ^^^^^^^^^^^^^^^^^^^^^^^\n \n error: use of deprecated associated function `this_crate::Trait::trait_deprecated`: text\n-  --> $DIR/deprecation-lint.rs:253:9\n+  --> $DIR/deprecation-lint.rs:252:9\n    |\n LL |         <Foo as Trait>::trait_deprecated(&foo);\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: use of deprecated function `this_crate::deprecated_text`: text\n-  --> $DIR/deprecation-lint.rs:255:9\n+  --> $DIR/deprecation-lint.rs:254:9\n    |\n LL |         deprecated_text();\n    |         ^^^^^^^^^^^^^^^\n \n error: use of deprecated associated function `this_crate::Trait::trait_deprecated_text`: text\n-  --> $DIR/deprecation-lint.rs:260:9\n+  --> $DIR/deprecation-lint.rs:259:9\n    |\n LL |         Trait::trait_deprecated_text(&foo);\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: use of deprecated associated function `this_crate::Trait::trait_deprecated_text`: text\n-  --> $DIR/deprecation-lint.rs:262:9\n+  --> $DIR/deprecation-lint.rs:261:9\n    |\n LL | ...   <Foo as Trait>::trait_deprecated_text(&foo);\n    |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: use of deprecated function `this_crate::deprecated_future`: text\n-  --> $DIR/deprecation-lint.rs:265:9\n+  --> $DIR/deprecation-lint.rs:264:9\n    |\n LL |         deprecated_future();\n    |         ^^^^^^^^^^^^^^^^^\n \n error: use of deprecated function `this_crate::deprecated_future_text`: text\n-  --> $DIR/deprecation-lint.rs:266:9\n+  --> $DIR/deprecation-lint.rs:265:9\n    |\n LL |         deprecated_future_text();\n    |         ^^^^^^^^^^^^^^^^^^^^^^\n \n error: use of deprecated struct `this_crate::DeprecatedStruct`: text\n-  --> $DIR/deprecation-lint.rs:268:17\n+  --> $DIR/deprecation-lint.rs:267:17\n    |\n LL |         let _ = DeprecatedStruct {\n    |                 ^^^^^^^^^^^^^^^^\n \n error: use of deprecated unit struct `this_crate::DeprecatedUnitStruct`: text\n-  --> $DIR/deprecation-lint.rs:273:17\n+  --> $DIR/deprecation-lint.rs:272:17\n    |\n LL |         let _ = DeprecatedUnitStruct;\n    |                 ^^^^^^^^^^^^^^^^^^^^\n \n error: use of deprecated unit variant `this_crate::Enum::DeprecatedVariant`: text\n-  --> $DIR/deprecation-lint.rs:275:17\n+  --> $DIR/deprecation-lint.rs:274:17\n    |\n LL |         let _ = Enum::DeprecatedVariant;\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^\n \n error: use of deprecated tuple struct `this_crate::DeprecatedTupleStruct`: text\n-  --> $DIR/deprecation-lint.rs:277:17\n+  --> $DIR/deprecation-lint.rs:276:17\n    |\n LL |         let _ = DeprecatedTupleStruct (1);\n    |                 ^^^^^^^^^^^^^^^^^^^^^\n \n error: use of deprecated struct `this_crate::nested::DeprecatedStruct`: text\n-  --> $DIR/deprecation-lint.rs:279:17\n+  --> $DIR/deprecation-lint.rs:278:17\n    |\n LL |         let _ = nested::DeprecatedStruct {\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: use of deprecated unit struct `this_crate::nested::DeprecatedUnitStruct`: text\n-  --> $DIR/deprecation-lint.rs:284:17\n+  --> $DIR/deprecation-lint.rs:283:17\n    |\n LL |         let _ = nested::DeprecatedUnitStruct;\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: use of deprecated unit variant `this_crate::nested::Enum::DeprecatedVariant`: text\n-  --> $DIR/deprecation-lint.rs:286:17\n+  --> $DIR/deprecation-lint.rs:285:17\n    |\n LL | ...   let _ = nested::Enum::DeprecatedVariant;\n    |               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: use of deprecated tuple struct `this_crate::nested::DeprecatedTupleStruct`: text\n-  --> $DIR/deprecation-lint.rs:288:17\n+  --> $DIR/deprecation-lint.rs:287:17\n    |\n LL | ...   let _ = nested::DeprecatedTupleStruct (1);\n    |               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: use of deprecated associated function `this_crate::Trait::trait_deprecated`: text\n-  --> $DIR/deprecation-lint.rs:293:9\n+  --> $DIR/deprecation-lint.rs:292:9\n    |\n LL |         Trait::trait_deprecated(&foo);\n    |         ^^^^^^^^^^^^^^^^^^^^^^^\n \n error: use of deprecated associated function `this_crate::Trait::trait_deprecated`: text\n-  --> $DIR/deprecation-lint.rs:295:9\n+  --> $DIR/deprecation-lint.rs:294:9\n    |\n LL |         <Foo as Trait>::trait_deprecated(&foo);\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: use of deprecated associated function `this_crate::Trait::trait_deprecated_text`: text\n-  --> $DIR/deprecation-lint.rs:297:9\n+  --> $DIR/deprecation-lint.rs:296:9\n    |\n LL |         Trait::trait_deprecated_text(&foo);\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: use of deprecated associated function `this_crate::Trait::trait_deprecated_text`: text\n-  --> $DIR/deprecation-lint.rs:299:9\n+  --> $DIR/deprecation-lint.rs:298:9\n    |\n LL | ...   <Foo as Trait>::trait_deprecated_text(&foo);\n    |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: use of deprecated function `this_crate::test_fn_closure_body::{closure#0}::bar`\n-  --> $DIR/deprecation-lint.rs:317:13\n+  --> $DIR/deprecation-lint.rs:316:13\n    |\n LL |             bar();\n    |             ^^^\n \n error: use of deprecated trait `this_crate::DeprecatedTrait`: text\n-  --> $DIR/deprecation-lint.rs:336:10\n+  --> $DIR/deprecation-lint.rs:335:10\n    |\n LL |     impl DeprecatedTrait for S { }\n    |          ^^^^^^^^^^^^^^^\n \n error: use of deprecated trait `this_crate::DeprecatedTrait`: text\n-  --> $DIR/deprecation-lint.rs:338:24\n+  --> $DIR/deprecation-lint.rs:337:24\n    |\n LL |     trait LocalTrait : DeprecatedTrait { }\n    |                        ^^^^^^^^^^^^^^^\n \n error: use of deprecated struct `this_crate2::Deprecated`: text\n-  --> $DIR/deprecation-lint.rs:390:17\n+  --> $DIR/deprecation-lint.rs:389:17\n    |\n LL |         let x = Deprecated {\n    |                 ^^^^^^^^^^\n \n error: use of deprecated struct `this_crate2::Deprecated`: text\n-  --> $DIR/deprecation-lint.rs:399:13\n+  --> $DIR/deprecation-lint.rs:398:13\n    |\n LL |         let Deprecated {\n    |             ^^^^^^^^^^\n \n error: use of deprecated struct `this_crate2::Deprecated`: text\n-  --> $DIR/deprecation-lint.rs:405:13\n+  --> $DIR/deprecation-lint.rs:404:13\n    |\n LL |         let Deprecated\n    |             ^^^^^^^^^^\n \n error: use of deprecated tuple struct `this_crate2::Deprecated2`: text\n-  --> $DIR/deprecation-lint.rs:410:17\n+  --> $DIR/deprecation-lint.rs:409:17\n    |\n LL |         let x = Deprecated2(1, 2, 3);\n    |                 ^^^^^^^^^^^\n \n error: use of deprecated tuple struct `this_crate2::Deprecated2`: text\n-  --> $DIR/deprecation-lint.rs:420:13\n+  --> $DIR/deprecation-lint.rs:419:13\n    |\n LL |         let Deprecated2\n    |             ^^^^^^^^^^^\n \n error: use of deprecated tuple struct `this_crate2::Deprecated2`: text\n-  --> $DIR/deprecation-lint.rs:429:13\n+  --> $DIR/deprecation-lint.rs:428:13\n    |\n LL |         let Deprecated2\n    |             ^^^^^^^^^^^\n \n error: use of deprecated associated function `deprecation_lint::MethodTester::method_deprecated`: text\n-  --> $DIR/deprecation-lint.rs:18:13\n+  --> $DIR/deprecation-lint.rs:17:13\n    |\n LL |         foo.method_deprecated();\n    |             ^^^^^^^^^^^^^^^^^\n \n error: use of deprecated associated function `deprecation_lint::MethodTester::method_deprecated`: text\n-  --> $DIR/deprecation-lint.rs:19:9\n+  --> $DIR/deprecation-lint.rs:18:9\n    |\n LL |         Foo::method_deprecated(&foo);\n    |         ^^^^^^^^^^^^^^^^^^^^^^\n \n error: use of deprecated associated function `deprecation_lint::MethodTester::method_deprecated`: text\n-  --> $DIR/deprecation-lint.rs:20:9\n+  --> $DIR/deprecation-lint.rs:19:9\n    |\n LL |         <Foo>::method_deprecated(&foo);\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: use of deprecated associated function `deprecation_lint::Trait::trait_deprecated`: text\n-  --> $DIR/deprecation-lint.rs:21:13\n+  --> $DIR/deprecation-lint.rs:20:13\n    |\n LL |         foo.trait_deprecated();\n    |             ^^^^^^^^^^^^^^^^\n \n error: use of deprecated associated function `deprecation_lint::Trait::trait_deprecated`: text\n-  --> $DIR/deprecation-lint.rs:23:9\n+  --> $DIR/deprecation-lint.rs:22:9\n    |\n LL |         <Foo>::trait_deprecated(&foo);\n    |         ^^^^^^^^^^^^^^^^^^^^^^^\n \n error: use of deprecated associated function `deprecation_lint::MethodTester::method_deprecated_text`: text\n-  --> $DIR/deprecation-lint.rs:27:13\n+  --> $DIR/deprecation-lint.rs:26:13\n    |\n LL | ...   foo.method_deprecated_text();\n    |           ^^^^^^^^^^^^^^^^^^^^^^\n \n error: use of deprecated associated function `deprecation_lint::MethodTester::method_deprecated_text`: text\n-  --> $DIR/deprecation-lint.rs:28:9\n+  --> $DIR/deprecation-lint.rs:27:9\n    |\n LL | ...   Foo::method_deprecated_text(&foo);\n    |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: use of deprecated associated function `deprecation_lint::MethodTester::method_deprecated_text`: text\n-  --> $DIR/deprecation-lint.rs:29:9\n+  --> $DIR/deprecation-lint.rs:28:9\n    |\n LL | ...   <Foo>::method_deprecated_text(&foo);\n    |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: use of deprecated associated function `deprecation_lint::Trait::trait_deprecated_text`: text\n-  --> $DIR/deprecation-lint.rs:30:13\n+  --> $DIR/deprecation-lint.rs:29:13\n    |\n LL |         foo.trait_deprecated_text();\n    |             ^^^^^^^^^^^^^^^^^^^^^\n \n error: use of deprecated associated function `deprecation_lint::Trait::trait_deprecated_text`: text\n-  --> $DIR/deprecation-lint.rs:32:9\n+  --> $DIR/deprecation-lint.rs:31:9\n    |\n LL | ...   <Foo>::trait_deprecated_text(&foo);\n    |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: use of deprecated field `deprecation_lint::DeprecatedStruct::i`: text\n-  --> $DIR/deprecation-lint.rs:36:13\n+  --> $DIR/deprecation-lint.rs:35:13\n    |\n LL |             i: 0\n    |             ^^^^\n \n error: use of deprecated field `deprecation_lint::nested::DeprecatedStruct::i`: text\n-  --> $DIR/deprecation-lint.rs:46:13\n+  --> $DIR/deprecation-lint.rs:45:13\n    |\n LL |             i: 0\n    |             ^^^^\n \n error: use of deprecated associated function `deprecation_lint::Trait::trait_deprecated`: text\n-  --> $DIR/deprecation-lint.rs:65:13\n+  --> $DIR/deprecation-lint.rs:64:13\n    |\n LL |         foo.trait_deprecated();\n    |             ^^^^^^^^^^^^^^^^\n \n error: use of deprecated associated function `deprecation_lint::Trait::trait_deprecated`: text\n-  --> $DIR/deprecation-lint.rs:67:9\n+  --> $DIR/deprecation-lint.rs:66:9\n    |\n LL |         <Foo>::trait_deprecated(&foo);\n    |         ^^^^^^^^^^^^^^^^^^^^^^^\n \n error: use of deprecated associated function `deprecation_lint::Trait::trait_deprecated_text`: text\n-  --> $DIR/deprecation-lint.rs:69:13\n+  --> $DIR/deprecation-lint.rs:68:13\n    |\n LL |         foo.trait_deprecated_text();\n    |             ^^^^^^^^^^^^^^^^^^^^^\n \n error: use of deprecated associated function `deprecation_lint::Trait::trait_deprecated_text`: text\n-  --> $DIR/deprecation-lint.rs:71:9\n+  --> $DIR/deprecation-lint.rs:70:9\n    |\n LL | ...   <Foo>::trait_deprecated_text(&foo);\n    |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: use of deprecated associated function `deprecation_lint::Trait::trait_deprecated`: text\n-  --> $DIR/deprecation-lint.rs:76:13\n+  --> $DIR/deprecation-lint.rs:75:13\n    |\n LL |         foo.trait_deprecated();\n    |             ^^^^^^^^^^^^^^^^\n \n error: use of deprecated associated function `deprecation_lint::Trait::trait_deprecated_text`: text\n-  --> $DIR/deprecation-lint.rs:77:13\n+  --> $DIR/deprecation-lint.rs:76:13\n    |\n LL |         foo.trait_deprecated_text();\n    |             ^^^^^^^^^^^^^^^^^^^^^\n \n error: use of deprecated field `deprecation_lint::Stable::override2`: text\n-  --> $DIR/deprecation-lint.rs:87:13\n+  --> $DIR/deprecation-lint.rs:86:13\n    |\n LL |             override2: 3,\n    |             ^^^^^^^^^^^^\n \n error: use of deprecated field `deprecation_lint::Stable::override2`: text\n-  --> $DIR/deprecation-lint.rs:91:17\n+  --> $DIR/deprecation-lint.rs:90:17\n    |\n LL |         let _ = x.override2;\n    |                 ^^^^^^^^^^^\n \n error: use of deprecated field `deprecation_lint::Stable::override2`: text\n-  --> $DIR/deprecation-lint.rs:95:13\n+  --> $DIR/deprecation-lint.rs:94:13\n    |\n LL |             override2: _\n    |             ^^^^^^^^^^^^\n \n error: use of deprecated field `deprecation_lint::Stable2::2`: text\n-  --> $DIR/deprecation-lint.rs:103:17\n+  --> $DIR/deprecation-lint.rs:102:17\n    |\n LL |         let _ = x.2;\n    |                 ^^^\n \n error: use of deprecated field `deprecation_lint::Stable2::2`: text\n-  --> $DIR/deprecation-lint.rs:108:20\n+  --> $DIR/deprecation-lint.rs:107:20\n    |\n LL |                    _)\n    |                    ^\n \n error: use of deprecated field `deprecation_lint::Deprecated::inherit`: text\n-  --> $DIR/deprecation-lint.rs:116:13\n+  --> $DIR/deprecation-lint.rs:115:13\n    |\n LL |             inherit: 1,\n    |             ^^^^^^^^^^\n \n error: use of deprecated field `deprecation_lint::Deprecated::inherit`: text\n-  --> $DIR/deprecation-lint.rs:120:17\n+  --> $DIR/deprecation-lint.rs:119:17\n    |\n LL |         let _ = x.inherit;\n    |                 ^^^^^^^^^\n \n error: use of deprecated field `deprecation_lint::Deprecated::inherit`: text\n-  --> $DIR/deprecation-lint.rs:125:13\n+  --> $DIR/deprecation-lint.rs:124:13\n    |\n LL |             inherit: _,\n    |             ^^^^^^^^^^\n \n error: use of deprecated field `deprecation_lint::Deprecated2::0`: text\n-  --> $DIR/deprecation-lint.rs:136:17\n+  --> $DIR/deprecation-lint.rs:135:17\n    |\n LL |         let _ = x.0;\n    |                 ^^^\n \n error: use of deprecated field `deprecation_lint::Deprecated2::1`: text\n-  --> $DIR/deprecation-lint.rs:138:17\n+  --> $DIR/deprecation-lint.rs:137:17\n    |\n LL |         let _ = x.1;\n    |                 ^^^\n \n error: use of deprecated field `deprecation_lint::Deprecated2::2`: text\n-  --> $DIR/deprecation-lint.rs:140:17\n+  --> $DIR/deprecation-lint.rs:139:17\n    |\n LL |         let _ = x.2;\n    |                 ^^^\n \n error: use of deprecated field `deprecation_lint::Deprecated2::0`: text\n-  --> $DIR/deprecation-lint.rs:145:14\n+  --> $DIR/deprecation-lint.rs:144:14\n    |\n LL |             (_,\n    |              ^\n \n error: use of deprecated field `deprecation_lint::Deprecated2::1`: text\n-  --> $DIR/deprecation-lint.rs:147:14\n+  --> $DIR/deprecation-lint.rs:146:14\n    |\n LL |              _,\n    |              ^\n \n error: use of deprecated field `deprecation_lint::Deprecated2::2`: text\n-  --> $DIR/deprecation-lint.rs:149:14\n+  --> $DIR/deprecation-lint.rs:148:14\n    |\n LL |              _)\n    |              ^\n \n error: use of deprecated associated function `this_crate::MethodTester::method_deprecated`: text\n-  --> $DIR/deprecation-lint.rs:247:13\n+  --> $DIR/deprecation-lint.rs:246:13\n    |\n LL |         foo.method_deprecated();\n    |             ^^^^^^^^^^^^^^^^^\n \n error: use of deprecated associated function `this_crate::MethodTester::method_deprecated`: text\n-  --> $DIR/deprecation-lint.rs:248:9\n+  --> $DIR/deprecation-lint.rs:247:9\n    |\n LL |         Foo::method_deprecated(&foo);\n    |         ^^^^^^^^^^^^^^^^^^^^^^\n \n error: use of deprecated associated function `this_crate::MethodTester::method_deprecated`: text\n-  --> $DIR/deprecation-lint.rs:249:9\n+  --> $DIR/deprecation-lint.rs:248:9\n    |\n LL |         <Foo>::method_deprecated(&foo);\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: use of deprecated associated function `this_crate::Trait::trait_deprecated`: text\n-  --> $DIR/deprecation-lint.rs:250:13\n+  --> $DIR/deprecation-lint.rs:249:13\n    |\n LL |         foo.trait_deprecated();\n    |             ^^^^^^^^^^^^^^^^\n \n error: use of deprecated associated function `this_crate::Trait::trait_deprecated`: text\n-  --> $DIR/deprecation-lint.rs:252:9\n+  --> $DIR/deprecation-lint.rs:251:9\n    |\n LL |         <Foo>::trait_deprecated(&foo);\n    |         ^^^^^^^^^^^^^^^^^^^^^^^\n \n error: use of deprecated associated function `this_crate::MethodTester::method_deprecated_text`: text\n-  --> $DIR/deprecation-lint.rs:256:13\n+  --> $DIR/deprecation-lint.rs:255:13\n    |\n LL | ...   foo.method_deprecated_text();\n    |           ^^^^^^^^^^^^^^^^^^^^^^\n \n error: use of deprecated associated function `this_crate::MethodTester::method_deprecated_text`: text\n-  --> $DIR/deprecation-lint.rs:257:9\n+  --> $DIR/deprecation-lint.rs:256:9\n    |\n LL | ...   Foo::method_deprecated_text(&foo);\n    |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: use of deprecated associated function `this_crate::MethodTester::method_deprecated_text`: text\n-  --> $DIR/deprecation-lint.rs:258:9\n+  --> $DIR/deprecation-lint.rs:257:9\n    |\n LL | ...   <Foo>::method_deprecated_text(&foo);\n    |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: use of deprecated associated function `this_crate::Trait::trait_deprecated_text`: text\n-  --> $DIR/deprecation-lint.rs:259:13\n+  --> $DIR/deprecation-lint.rs:258:13\n    |\n LL |         foo.trait_deprecated_text();\n    |             ^^^^^^^^^^^^^^^^^^^^^\n \n error: use of deprecated associated function `this_crate::Trait::trait_deprecated_text`: text\n-  --> $DIR/deprecation-lint.rs:261:9\n+  --> $DIR/deprecation-lint.rs:260:9\n    |\n LL |         <Foo>::trait_deprecated_text(&foo);\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: use of deprecated field `this_crate::DeprecatedStruct::i`: text\n-  --> $DIR/deprecation-lint.rs:270:13\n+  --> $DIR/deprecation-lint.rs:269:13\n    |\n LL |             i: 0\n    |             ^^^^\n \n error: use of deprecated field `this_crate::nested::DeprecatedStruct::i`: text\n-  --> $DIR/deprecation-lint.rs:281:13\n+  --> $DIR/deprecation-lint.rs:280:13\n    |\n LL |             i: 0\n    |             ^^^^\n \n error: use of deprecated associated function `this_crate::Trait::trait_deprecated`: text\n-  --> $DIR/deprecation-lint.rs:292:13\n+  --> $DIR/deprecation-lint.rs:291:13\n    |\n LL |         foo.trait_deprecated();\n    |             ^^^^^^^^^^^^^^^^\n \n error: use of deprecated associated function `this_crate::Trait::trait_deprecated`: text\n-  --> $DIR/deprecation-lint.rs:294:9\n+  --> $DIR/deprecation-lint.rs:293:9\n    |\n LL |         <Foo>::trait_deprecated(&foo);\n    |         ^^^^^^^^^^^^^^^^^^^^^^^\n \n error: use of deprecated associated function `this_crate::Trait::trait_deprecated_text`: text\n-  --> $DIR/deprecation-lint.rs:296:13\n+  --> $DIR/deprecation-lint.rs:295:13\n    |\n LL |         foo.trait_deprecated_text();\n    |             ^^^^^^^^^^^^^^^^^^^^^\n \n error: use of deprecated associated function `this_crate::Trait::trait_deprecated_text`: text\n-  --> $DIR/deprecation-lint.rs:298:9\n+  --> $DIR/deprecation-lint.rs:297:9\n    |\n LL |         <Foo>::trait_deprecated_text(&foo);\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: use of deprecated associated function `this_crate::Trait::trait_deprecated`: text\n-  --> $DIR/deprecation-lint.rs:303:13\n+  --> $DIR/deprecation-lint.rs:302:13\n    |\n LL |         foo.trait_deprecated();\n    |             ^^^^^^^^^^^^^^^^\n \n error: use of deprecated associated function `this_crate::Trait::trait_deprecated_text`: text\n-  --> $DIR/deprecation-lint.rs:304:13\n+  --> $DIR/deprecation-lint.rs:303:13\n    |\n LL |         foo.trait_deprecated_text();\n    |             ^^^^^^^^^^^^^^^^^^^^^\n \n error: use of deprecated field `this_crate2::Stable::override2`: text\n-  --> $DIR/deprecation-lint.rs:363:13\n+  --> $DIR/deprecation-lint.rs:362:13\n    |\n LL |             override2: 3,\n    |             ^^^^^^^^^^^^\n \n error: use of deprecated field `this_crate2::Stable::override2`: text\n-  --> $DIR/deprecation-lint.rs:367:17\n+  --> $DIR/deprecation-lint.rs:366:17\n    |\n LL |         let _ = x.override2;\n    |                 ^^^^^^^^^^^\n \n error: use of deprecated field `this_crate2::Stable::override2`: text\n-  --> $DIR/deprecation-lint.rs:371:13\n+  --> $DIR/deprecation-lint.rs:370:13\n    |\n LL |             override2: _\n    |             ^^^^^^^^^^^^\n \n error: use of deprecated field `this_crate2::Stable2::2`: text\n-  --> $DIR/deprecation-lint.rs:379:17\n+  --> $DIR/deprecation-lint.rs:378:17\n    |\n LL |         let _ = x.2;\n    |                 ^^^\n \n error: use of deprecated field `this_crate2::Stable2::2`: text\n-  --> $DIR/deprecation-lint.rs:384:20\n+  --> $DIR/deprecation-lint.rs:383:20\n    |\n LL |                    _)\n    |                    ^\n \n error: use of deprecated field `this_crate2::Deprecated::inherit`: text\n-  --> $DIR/deprecation-lint.rs:392:13\n+  --> $DIR/deprecation-lint.rs:391:13\n    |\n LL |             inherit: 1,\n    |             ^^^^^^^^^^\n \n error: use of deprecated field `this_crate2::Deprecated::inherit`: text\n-  --> $DIR/deprecation-lint.rs:396:17\n+  --> $DIR/deprecation-lint.rs:395:17\n    |\n LL |         let _ = x.inherit;\n    |                 ^^^^^^^^^\n \n error: use of deprecated field `this_crate2::Deprecated::inherit`: text\n-  --> $DIR/deprecation-lint.rs:401:13\n+  --> $DIR/deprecation-lint.rs:400:13\n    |\n LL |             inherit: _,\n    |             ^^^^^^^^^^\n \n error: use of deprecated field `this_crate2::Deprecated2::0`: text\n-  --> $DIR/deprecation-lint.rs:413:17\n+  --> $DIR/deprecation-lint.rs:412:17\n    |\n LL |         let _ = x.0;\n    |                 ^^^\n \n error: use of deprecated field `this_crate2::Deprecated2::1`: text\n-  --> $DIR/deprecation-lint.rs:415:17\n+  --> $DIR/deprecation-lint.rs:414:17\n    |\n LL |         let _ = x.1;\n    |                 ^^^\n \n error: use of deprecated field `this_crate2::Deprecated2::2`: text\n-  --> $DIR/deprecation-lint.rs:417:17\n+  --> $DIR/deprecation-lint.rs:416:17\n    |\n LL |         let _ = x.2;\n    |                 ^^^\n \n error: use of deprecated field `this_crate2::Deprecated2::0`: text\n-  --> $DIR/deprecation-lint.rs:422:14\n+  --> $DIR/deprecation-lint.rs:421:14\n    |\n LL |             (_,\n    |              ^\n \n error: use of deprecated field `this_crate2::Deprecated2::1`: text\n-  --> $DIR/deprecation-lint.rs:424:14\n+  --> $DIR/deprecation-lint.rs:423:14\n    |\n LL |              _,\n    |              ^\n \n error: use of deprecated field `this_crate2::Deprecated2::2`: text\n-  --> $DIR/deprecation-lint.rs:426:14\n+  --> $DIR/deprecation-lint.rs:425:14\n    |\n LL |              _)\n    |              ^"}, {"sha": "3715f8eb2252d444ee76e9673602727de8618266", "filename": "src/test/ui/deprecation/rustc_deprecation-in-future.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fui%2Fdeprecation%2Frustc_deprecation-in-future.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fui%2Fdeprecation%2Frustc_deprecation-in-future.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fdeprecation%2Frustc_deprecation-in-future.rs?ref=3ea62cb5d19846b44172d861ae231c8c09322800", "patch": "@@ -1,5 +1,3 @@\n-// ignore-tidy-linelength\n-\n #![deny(deprecated_in_future)]\n \n #![feature(staged_api)]"}, {"sha": "1c3339a8a9dc0b2afa204dfbccfd35b492f65027", "filename": "src/test/ui/deprecation/rustc_deprecation-in-future.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fui%2Fdeprecation%2Frustc_deprecation-in-future.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fui%2Fdeprecation%2Frustc_deprecation-in-future.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fdeprecation%2Frustc_deprecation-in-future.stderr?ref=3ea62cb5d19846b44172d861ae231c8c09322800", "patch": "@@ -1,17 +1,17 @@\n error: use of unit struct `S1` that will be deprecated in future version 99.99.99: effectively never\n-  --> $DIR/rustc_deprecation-in-future.rs:18:13\n+  --> $DIR/rustc_deprecation-in-future.rs:16:13\n    |\n LL |     let _ = S1;\n    |             ^^\n    |\n note: the lint level is defined here\n-  --> $DIR/rustc_deprecation-in-future.rs:3:9\n+  --> $DIR/rustc_deprecation-in-future.rs:1:9\n    |\n LL | #![deny(deprecated_in_future)]\n    |         ^^^^^^^^^^^^^^^^^^^^\n \n error: use of unit struct `S2` that will be deprecated in a future Rust version: literally never\n-  --> $DIR/rustc_deprecation-in-future.rs:19:13\n+  --> $DIR/rustc_deprecation-in-future.rs:17:13\n    |\n LL |     let _ = S2;\n    |             ^^"}, {"sha": "48c9c13f018f76cef2a263c0ca51259d375d444e", "filename": "src/test/ui/error-codes/E0063.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fui%2Ferror-codes%2FE0063.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fui%2Ferror-codes%2FE0063.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ferror-codes%2FE0063.rs?ref=3ea62cb5d19846b44172d861ae231c8c09322800", "patch": "@@ -1,5 +1,3 @@\n-// ignore-tidy-linelength\n-\n struct SingleFoo {\n     x: i32\n }"}, {"sha": "235e204025ae2a5699819b4edab6a9d42c8732a0", "filename": "src/test/ui/error-codes/E0063.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fui%2Ferror-codes%2FE0063.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fui%2Ferror-codes%2FE0063.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ferror-codes%2FE0063.stderr?ref=3ea62cb5d19846b44172d861ae231c8c09322800", "patch": "@@ -1,23 +1,23 @@\n error[E0063]: missing field `x` in initializer of `SingleFoo`\n-  --> $DIR/E0063.rs:32:13\n+  --> $DIR/E0063.rs:30:13\n    |\n LL |     let w = SingleFoo { };\n    |             ^^^^^^^^^ missing `x`\n \n error[E0063]: missing fields `y` and `z` in initializer of `PluralFoo`\n-  --> $DIR/E0063.rs:34:13\n+  --> $DIR/E0063.rs:32:13\n    |\n LL |     let x = PluralFoo {x: 1};\n    |             ^^^^^^^^^ missing `y` and `z`\n \n error[E0063]: missing fields `a`, `b`, `y` and 1 other field in initializer of `TruncatedFoo`\n-  --> $DIR/E0063.rs:36:13\n+  --> $DIR/E0063.rs:34:13\n    |\n LL |     let y = TruncatedFoo{x:1};\n    |             ^^^^^^^^^^^^ missing `a`, `b`, `y` and 1 other field\n \n error[E0063]: missing fields `a`, `b`, `c` and 2 other fields in initializer of `TruncatedPluralFoo`\n-  --> $DIR/E0063.rs:38:13\n+  --> $DIR/E0063.rs:36:13\n    |\n LL |     let z = TruncatedPluralFoo{x:1};\n    |             ^^^^^^^^^^^^^^^^^^ missing `a`, `b`, `c` and 2 other fields"}, {"sha": "4e73a2c548884a28ee81df0e0c9e936d6b93ea15", "filename": "src/test/ui/export-fully-qualified.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fui%2Fexport-fully-qualified.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fui%2Fexport-fully-qualified.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fexport-fully-qualified.rs?ref=3ea62cb5d19846b44172d861ae231c8c09322800", "patch": "@@ -1,5 +1,3 @@\n-// ignore-tidy-linelength\n-\n // In this test baz isn't resolved when called as foo.baz even though\n // it's called from inside foo. This is somewhat surprising and may\n // want to change eventually."}, {"sha": "7ee352e1232a78a241e1b7e0c6e3bf941db5f56c", "filename": "src/test/ui/export-fully-qualified.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fui%2Fexport-fully-qualified.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fui%2Fexport-fully-qualified.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fexport-fully-qualified.stderr?ref=3ea62cb5d19846b44172d861ae231c8c09322800", "patch": "@@ -1,5 +1,5 @@\n error[E0433]: failed to resolve: use of undeclared crate or module `foo`\n-  --> $DIR/export-fully-qualified.rs:8:20\n+  --> $DIR/export-fully-qualified.rs:6:20\n    |\n LL |     pub fn bar() { foo::baz(); }\n    |                    ^^^ use of undeclared crate or module `foo`"}, {"sha": "3883106a3af95cde04421987da59d140986cc86c", "filename": "src/test/ui/feature-gates/feature-gate-abi.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-abi.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-abi.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-abi.rs?ref=3ea62cb5d19846b44172d861ae231c8c09322800", "patch": "@@ -1,5 +1,4 @@\n // only-x86_64\n-// ignore-tidy-linelength\n // gate-test-intrinsics\n // gate-test-platform_intrinsics\n // gate-test-abi_vectorcall"}, {"sha": "eeeb349c6627789a7c64cbf6119b1aad0fe8abd9", "filename": "src/test/ui/feature-gates/feature-gate-abi.stderr", "status": "modified", "additions": 76, "deletions": 76, "changes": 152, "blob_url": "https://github.com/rust-lang/rust/blob/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-abi.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-abi.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-abi.stderr?ref=3ea62cb5d19846b44172d861ae231c8c09322800", "patch": "@@ -1,13 +1,13 @@\n error[E0658]: intrinsics are subject to change\n-  --> $DIR/feature-gate-abi.rs:13:8\n+  --> $DIR/feature-gate-abi.rs:12:8\n    |\n LL | extern \"rust-intrinsic\" fn f1() {}\n    |        ^^^^^^^^^^^^^^^^\n    |\n    = help: add `#![feature(intrinsics)]` to the crate attributes to enable\n \n error[E0658]: platform intrinsics are experimental and possibly buggy\n-  --> $DIR/feature-gate-abi.rs:15:8\n+  --> $DIR/feature-gate-abi.rs:14:8\n    |\n LL | extern \"platform-intrinsic\" fn f2() {}\n    |        ^^^^^^^^^^^^^^^^^^^^\n@@ -16,15 +16,15 @@ LL | extern \"platform-intrinsic\" fn f2() {}\n    = help: add `#![feature(platform_intrinsics)]` to the crate attributes to enable\n \n error[E0658]: vectorcall is experimental and subject to change\n-  --> $DIR/feature-gate-abi.rs:17:8\n+  --> $DIR/feature-gate-abi.rs:16:8\n    |\n LL | extern \"vectorcall\" fn f3() {}\n    |        ^^^^^^^^^^^^\n    |\n    = help: add `#![feature(abi_vectorcall)]` to the crate attributes to enable\n \n error[E0658]: rust-call ABI is subject to change\n-  --> $DIR/feature-gate-abi.rs:18:8\n+  --> $DIR/feature-gate-abi.rs:17:8\n    |\n LL | extern \"rust-call\" fn f4(_: ()) {}\n    |        ^^^^^^^^^^^\n@@ -33,7 +33,7 @@ LL | extern \"rust-call\" fn f4(_: ()) {}\n    = help: add `#![feature(unboxed_closures)]` to the crate attributes to enable\n \n error[E0658]: msp430-interrupt ABI is experimental and subject to change\n-  --> $DIR/feature-gate-abi.rs:19:8\n+  --> $DIR/feature-gate-abi.rs:18:8\n    |\n LL | extern \"msp430-interrupt\" fn f5() {}\n    |        ^^^^^^^^^^^^^^^^^^\n@@ -42,7 +42,7 @@ LL | extern \"msp430-interrupt\" fn f5() {}\n    = help: add `#![feature(abi_msp430_interrupt)]` to the crate attributes to enable\n \n error[E0658]: PTX ABIs are experimental and subject to change\n-  --> $DIR/feature-gate-abi.rs:20:8\n+  --> $DIR/feature-gate-abi.rs:19:8\n    |\n LL | extern \"ptx-kernel\" fn f6() {}\n    |        ^^^^^^^^^^^^\n@@ -51,7 +51,7 @@ LL | extern \"ptx-kernel\" fn f6() {}\n    = help: add `#![feature(abi_ptx)]` to the crate attributes to enable\n \n error[E0658]: x86-interrupt ABI is experimental and subject to change\n-  --> $DIR/feature-gate-abi.rs:21:8\n+  --> $DIR/feature-gate-abi.rs:20:8\n    |\n LL | extern \"x86-interrupt\" fn f7() {}\n    |        ^^^^^^^^^^^^^^^\n@@ -60,15 +60,15 @@ LL | extern \"x86-interrupt\" fn f7() {}\n    = help: add `#![feature(abi_x86_interrupt)]` to the crate attributes to enable\n \n error[E0658]: thiscall is experimental and subject to change\n-  --> $DIR/feature-gate-abi.rs:22:8\n+  --> $DIR/feature-gate-abi.rs:21:8\n    |\n LL | extern \"thiscall\" fn f8() {}\n    |        ^^^^^^^^^^\n    |\n    = help: add `#![feature(abi_thiscall)]` to the crate attributes to enable\n \n error[E0658]: amdgpu-kernel ABI is experimental and subject to change\n-  --> $DIR/feature-gate-abi.rs:23:8\n+  --> $DIR/feature-gate-abi.rs:22:8\n    |\n LL | extern \"amdgpu-kernel\" fn f9() {}\n    |        ^^^^^^^^^^^^^^^\n@@ -77,7 +77,7 @@ LL | extern \"amdgpu-kernel\" fn f9() {}\n    = help: add `#![feature(abi_amdgpu_kernel)]` to the crate attributes to enable\n \n error[E0658]: efiapi ABI is experimental and subject to change\n-  --> $DIR/feature-gate-abi.rs:24:8\n+  --> $DIR/feature-gate-abi.rs:23:8\n    |\n LL | extern \"efiapi\" fn f10() {}\n    |        ^^^^^^^^\n@@ -86,15 +86,15 @@ LL | extern \"efiapi\" fn f10() {}\n    = help: add `#![feature(abi_efiapi)]` to the crate attributes to enable\n \n error[E0658]: intrinsics are subject to change\n-  --> $DIR/feature-gate-abi.rs:28:12\n+  --> $DIR/feature-gate-abi.rs:27:12\n    |\n LL |     extern \"rust-intrinsic\" fn m1();\n    |            ^^^^^^^^^^^^^^^^\n    |\n    = help: add `#![feature(intrinsics)]` to the crate attributes to enable\n \n error[E0658]: platform intrinsics are experimental and possibly buggy\n-  --> $DIR/feature-gate-abi.rs:30:12\n+  --> $DIR/feature-gate-abi.rs:29:12\n    |\n LL |     extern \"platform-intrinsic\" fn m2();\n    |            ^^^^^^^^^^^^^^^^^^^^\n@@ -103,15 +103,15 @@ LL |     extern \"platform-intrinsic\" fn m2();\n    = help: add `#![feature(platform_intrinsics)]` to the crate attributes to enable\n \n error[E0658]: vectorcall is experimental and subject to change\n-  --> $DIR/feature-gate-abi.rs:32:12\n+  --> $DIR/feature-gate-abi.rs:31:12\n    |\n LL |     extern \"vectorcall\" fn m3();\n    |            ^^^^^^^^^^^^\n    |\n    = help: add `#![feature(abi_vectorcall)]` to the crate attributes to enable\n \n error[E0658]: rust-call ABI is subject to change\n-  --> $DIR/feature-gate-abi.rs:33:12\n+  --> $DIR/feature-gate-abi.rs:32:12\n    |\n LL |     extern \"rust-call\" fn m4(_: ());\n    |            ^^^^^^^^^^^\n@@ -120,7 +120,7 @@ LL |     extern \"rust-call\" fn m4(_: ());\n    = help: add `#![feature(unboxed_closures)]` to the crate attributes to enable\n \n error[E0658]: msp430-interrupt ABI is experimental and subject to change\n-  --> $DIR/feature-gate-abi.rs:34:12\n+  --> $DIR/feature-gate-abi.rs:33:12\n    |\n LL |     extern \"msp430-interrupt\" fn m5();\n    |            ^^^^^^^^^^^^^^^^^^\n@@ -129,7 +129,7 @@ LL |     extern \"msp430-interrupt\" fn m5();\n    = help: add `#![feature(abi_msp430_interrupt)]` to the crate attributes to enable\n \n error[E0658]: PTX ABIs are experimental and subject to change\n-  --> $DIR/feature-gate-abi.rs:35:12\n+  --> $DIR/feature-gate-abi.rs:34:12\n    |\n LL |     extern \"ptx-kernel\" fn m6();\n    |            ^^^^^^^^^^^^\n@@ -138,7 +138,7 @@ LL |     extern \"ptx-kernel\" fn m6();\n    = help: add `#![feature(abi_ptx)]` to the crate attributes to enable\n \n error[E0658]: x86-interrupt ABI is experimental and subject to change\n-  --> $DIR/feature-gate-abi.rs:36:12\n+  --> $DIR/feature-gate-abi.rs:35:12\n    |\n LL |     extern \"x86-interrupt\" fn m7();\n    |            ^^^^^^^^^^^^^^^\n@@ -147,15 +147,15 @@ LL |     extern \"x86-interrupt\" fn m7();\n    = help: add `#![feature(abi_x86_interrupt)]` to the crate attributes to enable\n \n error[E0658]: thiscall is experimental and subject to change\n-  --> $DIR/feature-gate-abi.rs:37:12\n+  --> $DIR/feature-gate-abi.rs:36:12\n    |\n LL |     extern \"thiscall\" fn m8();\n    |            ^^^^^^^^^^\n    |\n    = help: add `#![feature(abi_thiscall)]` to the crate attributes to enable\n \n error[E0658]: amdgpu-kernel ABI is experimental and subject to change\n-  --> $DIR/feature-gate-abi.rs:38:12\n+  --> $DIR/feature-gate-abi.rs:37:12\n    |\n LL |     extern \"amdgpu-kernel\" fn m9();\n    |            ^^^^^^^^^^^^^^^\n@@ -164,7 +164,7 @@ LL |     extern \"amdgpu-kernel\" fn m9();\n    = help: add `#![feature(abi_amdgpu_kernel)]` to the crate attributes to enable\n \n error[E0658]: efiapi ABI is experimental and subject to change\n-  --> $DIR/feature-gate-abi.rs:39:12\n+  --> $DIR/feature-gate-abi.rs:38:12\n    |\n LL |     extern \"efiapi\" fn m10();\n    |            ^^^^^^^^\n@@ -173,15 +173,15 @@ LL |     extern \"efiapi\" fn m10();\n    = help: add `#![feature(abi_efiapi)]` to the crate attributes to enable\n \n error[E0658]: vectorcall is experimental and subject to change\n-  --> $DIR/feature-gate-abi.rs:41:12\n+  --> $DIR/feature-gate-abi.rs:40:12\n    |\n LL |     extern \"vectorcall\" fn dm3() {}\n    |            ^^^^^^^^^^^^\n    |\n    = help: add `#![feature(abi_vectorcall)]` to the crate attributes to enable\n \n error[E0658]: rust-call ABI is subject to change\n-  --> $DIR/feature-gate-abi.rs:42:12\n+  --> $DIR/feature-gate-abi.rs:41:12\n    |\n LL |     extern \"rust-call\" fn dm4(_: ()) {}\n    |            ^^^^^^^^^^^\n@@ -190,7 +190,7 @@ LL |     extern \"rust-call\" fn dm4(_: ()) {}\n    = help: add `#![feature(unboxed_closures)]` to the crate attributes to enable\n \n error[E0658]: msp430-interrupt ABI is experimental and subject to change\n-  --> $DIR/feature-gate-abi.rs:43:12\n+  --> $DIR/feature-gate-abi.rs:42:12\n    |\n LL |     extern \"msp430-interrupt\" fn dm5() {}\n    |            ^^^^^^^^^^^^^^^^^^\n@@ -199,7 +199,7 @@ LL |     extern \"msp430-interrupt\" fn dm5() {}\n    = help: add `#![feature(abi_msp430_interrupt)]` to the crate attributes to enable\n \n error[E0658]: PTX ABIs are experimental and subject to change\n-  --> $DIR/feature-gate-abi.rs:44:12\n+  --> $DIR/feature-gate-abi.rs:43:12\n    |\n LL |     extern \"ptx-kernel\" fn dm6() {}\n    |            ^^^^^^^^^^^^\n@@ -208,7 +208,7 @@ LL |     extern \"ptx-kernel\" fn dm6() {}\n    = help: add `#![feature(abi_ptx)]` to the crate attributes to enable\n \n error[E0658]: x86-interrupt ABI is experimental and subject to change\n-  --> $DIR/feature-gate-abi.rs:45:12\n+  --> $DIR/feature-gate-abi.rs:44:12\n    |\n LL |     extern \"x86-interrupt\" fn dm7() {}\n    |            ^^^^^^^^^^^^^^^\n@@ -217,15 +217,15 @@ LL |     extern \"x86-interrupt\" fn dm7() {}\n    = help: add `#![feature(abi_x86_interrupt)]` to the crate attributes to enable\n \n error[E0658]: thiscall is experimental and subject to change\n-  --> $DIR/feature-gate-abi.rs:46:12\n+  --> $DIR/feature-gate-abi.rs:45:12\n    |\n LL |     extern \"thiscall\" fn dm8() {}\n    |            ^^^^^^^^^^\n    |\n    = help: add `#![feature(abi_thiscall)]` to the crate attributes to enable\n \n error[E0658]: amdgpu-kernel ABI is experimental and subject to change\n-  --> $DIR/feature-gate-abi.rs:47:12\n+  --> $DIR/feature-gate-abi.rs:46:12\n    |\n LL |     extern \"amdgpu-kernel\" fn dm9() {}\n    |            ^^^^^^^^^^^^^^^\n@@ -234,7 +234,7 @@ LL |     extern \"amdgpu-kernel\" fn dm9() {}\n    = help: add `#![feature(abi_amdgpu_kernel)]` to the crate attributes to enable\n \n error[E0658]: efiapi ABI is experimental and subject to change\n-  --> $DIR/feature-gate-abi.rs:48:12\n+  --> $DIR/feature-gate-abi.rs:47:12\n    |\n LL |     extern \"efiapi\" fn dm10() {}\n    |            ^^^^^^^^\n@@ -243,15 +243,15 @@ LL |     extern \"efiapi\" fn dm10() {}\n    = help: add `#![feature(abi_efiapi)]` to the crate attributes to enable\n \n error[E0658]: intrinsics are subject to change\n-  --> $DIR/feature-gate-abi.rs:55:12\n+  --> $DIR/feature-gate-abi.rs:54:12\n    |\n LL |     extern \"rust-intrinsic\" fn m1() {}\n    |            ^^^^^^^^^^^^^^^^\n    |\n    = help: add `#![feature(intrinsics)]` to the crate attributes to enable\n \n error[E0658]: platform intrinsics are experimental and possibly buggy\n-  --> $DIR/feature-gate-abi.rs:57:12\n+  --> $DIR/feature-gate-abi.rs:56:12\n    |\n LL |     extern \"platform-intrinsic\" fn m2() {}\n    |            ^^^^^^^^^^^^^^^^^^^^\n@@ -260,15 +260,15 @@ LL |     extern \"platform-intrinsic\" fn m2() {}\n    = help: add `#![feature(platform_intrinsics)]` to the crate attributes to enable\n \n error[E0658]: vectorcall is experimental and subject to change\n-  --> $DIR/feature-gate-abi.rs:59:12\n+  --> $DIR/feature-gate-abi.rs:58:12\n    |\n LL |     extern \"vectorcall\" fn m3() {}\n    |            ^^^^^^^^^^^^\n    |\n    = help: add `#![feature(abi_vectorcall)]` to the crate attributes to enable\n \n error[E0658]: rust-call ABI is subject to change\n-  --> $DIR/feature-gate-abi.rs:60:12\n+  --> $DIR/feature-gate-abi.rs:59:12\n    |\n LL |     extern \"rust-call\" fn m4(_: ()) {}\n    |            ^^^^^^^^^^^\n@@ -277,7 +277,7 @@ LL |     extern \"rust-call\" fn m4(_: ()) {}\n    = help: add `#![feature(unboxed_closures)]` to the crate attributes to enable\n \n error[E0658]: msp430-interrupt ABI is experimental and subject to change\n-  --> $DIR/feature-gate-abi.rs:61:12\n+  --> $DIR/feature-gate-abi.rs:60:12\n    |\n LL |     extern \"msp430-interrupt\" fn m5() {}\n    |            ^^^^^^^^^^^^^^^^^^\n@@ -286,7 +286,7 @@ LL |     extern \"msp430-interrupt\" fn m5() {}\n    = help: add `#![feature(abi_msp430_interrupt)]` to the crate attributes to enable\n \n error[E0658]: PTX ABIs are experimental and subject to change\n-  --> $DIR/feature-gate-abi.rs:62:12\n+  --> $DIR/feature-gate-abi.rs:61:12\n    |\n LL |     extern \"ptx-kernel\" fn m6() {}\n    |            ^^^^^^^^^^^^\n@@ -295,7 +295,7 @@ LL |     extern \"ptx-kernel\" fn m6() {}\n    = help: add `#![feature(abi_ptx)]` to the crate attributes to enable\n \n error[E0658]: x86-interrupt ABI is experimental and subject to change\n-  --> $DIR/feature-gate-abi.rs:63:12\n+  --> $DIR/feature-gate-abi.rs:62:12\n    |\n LL |     extern \"x86-interrupt\" fn m7() {}\n    |            ^^^^^^^^^^^^^^^\n@@ -304,15 +304,15 @@ LL |     extern \"x86-interrupt\" fn m7() {}\n    = help: add `#![feature(abi_x86_interrupt)]` to the crate attributes to enable\n \n error[E0658]: thiscall is experimental and subject to change\n-  --> $DIR/feature-gate-abi.rs:64:12\n+  --> $DIR/feature-gate-abi.rs:63:12\n    |\n LL |     extern \"thiscall\" fn m8() {}\n    |            ^^^^^^^^^^\n    |\n    = help: add `#![feature(abi_thiscall)]` to the crate attributes to enable\n \n error[E0658]: amdgpu-kernel ABI is experimental and subject to change\n-  --> $DIR/feature-gate-abi.rs:65:12\n+  --> $DIR/feature-gate-abi.rs:64:12\n    |\n LL |     extern \"amdgpu-kernel\" fn m9() {}\n    |            ^^^^^^^^^^^^^^^\n@@ -321,7 +321,7 @@ LL |     extern \"amdgpu-kernel\" fn m9() {}\n    = help: add `#![feature(abi_amdgpu_kernel)]` to the crate attributes to enable\n \n error[E0658]: efiapi ABI is experimental and subject to change\n-  --> $DIR/feature-gate-abi.rs:66:12\n+  --> $DIR/feature-gate-abi.rs:65:12\n    |\n LL |     extern \"efiapi\" fn m10() {}\n    |            ^^^^^^^^\n@@ -330,15 +330,15 @@ LL |     extern \"efiapi\" fn m10() {}\n    = help: add `#![feature(abi_efiapi)]` to the crate attributes to enable\n \n error[E0658]: intrinsics are subject to change\n-  --> $DIR/feature-gate-abi.rs:71:12\n+  --> $DIR/feature-gate-abi.rs:70:12\n    |\n LL |     extern \"rust-intrinsic\" fn im1() {}\n    |            ^^^^^^^^^^^^^^^^\n    |\n    = help: add `#![feature(intrinsics)]` to the crate attributes to enable\n \n error[E0658]: platform intrinsics are experimental and possibly buggy\n-  --> $DIR/feature-gate-abi.rs:73:12\n+  --> $DIR/feature-gate-abi.rs:72:12\n    |\n LL |     extern \"platform-intrinsic\" fn im2() {}\n    |            ^^^^^^^^^^^^^^^^^^^^\n@@ -347,15 +347,15 @@ LL |     extern \"platform-intrinsic\" fn im2() {}\n    = help: add `#![feature(platform_intrinsics)]` to the crate attributes to enable\n \n error[E0658]: vectorcall is experimental and subject to change\n-  --> $DIR/feature-gate-abi.rs:75:12\n+  --> $DIR/feature-gate-abi.rs:74:12\n    |\n LL |     extern \"vectorcall\" fn im3() {}\n    |            ^^^^^^^^^^^^\n    |\n    = help: add `#![feature(abi_vectorcall)]` to the crate attributes to enable\n \n error[E0658]: rust-call ABI is subject to change\n-  --> $DIR/feature-gate-abi.rs:76:12\n+  --> $DIR/feature-gate-abi.rs:75:12\n    |\n LL |     extern \"rust-call\" fn im4(_: ()) {}\n    |            ^^^^^^^^^^^\n@@ -364,7 +364,7 @@ LL |     extern \"rust-call\" fn im4(_: ()) {}\n    = help: add `#![feature(unboxed_closures)]` to the crate attributes to enable\n \n error[E0658]: msp430-interrupt ABI is experimental and subject to change\n-  --> $DIR/feature-gate-abi.rs:77:12\n+  --> $DIR/feature-gate-abi.rs:76:12\n    |\n LL |     extern \"msp430-interrupt\" fn im5() {}\n    |            ^^^^^^^^^^^^^^^^^^\n@@ -373,7 +373,7 @@ LL |     extern \"msp430-interrupt\" fn im5() {}\n    = help: add `#![feature(abi_msp430_interrupt)]` to the crate attributes to enable\n \n error[E0658]: PTX ABIs are experimental and subject to change\n-  --> $DIR/feature-gate-abi.rs:78:12\n+  --> $DIR/feature-gate-abi.rs:77:12\n    |\n LL |     extern \"ptx-kernel\" fn im6() {}\n    |            ^^^^^^^^^^^^\n@@ -382,7 +382,7 @@ LL |     extern \"ptx-kernel\" fn im6() {}\n    = help: add `#![feature(abi_ptx)]` to the crate attributes to enable\n \n error[E0658]: x86-interrupt ABI is experimental and subject to change\n-  --> $DIR/feature-gate-abi.rs:79:12\n+  --> $DIR/feature-gate-abi.rs:78:12\n    |\n LL |     extern \"x86-interrupt\" fn im7() {}\n    |            ^^^^^^^^^^^^^^^\n@@ -391,15 +391,15 @@ LL |     extern \"x86-interrupt\" fn im7() {}\n    = help: add `#![feature(abi_x86_interrupt)]` to the crate attributes to enable\n \n error[E0658]: thiscall is experimental and subject to change\n-  --> $DIR/feature-gate-abi.rs:80:12\n+  --> $DIR/feature-gate-abi.rs:79:12\n    |\n LL |     extern \"thiscall\" fn im8() {}\n    |            ^^^^^^^^^^\n    |\n    = help: add `#![feature(abi_thiscall)]` to the crate attributes to enable\n \n error[E0658]: amdgpu-kernel ABI is experimental and subject to change\n-  --> $DIR/feature-gate-abi.rs:81:12\n+  --> $DIR/feature-gate-abi.rs:80:12\n    |\n LL |     extern \"amdgpu-kernel\" fn im9() {}\n    |            ^^^^^^^^^^^^^^^\n@@ -408,7 +408,7 @@ LL |     extern \"amdgpu-kernel\" fn im9() {}\n    = help: add `#![feature(abi_amdgpu_kernel)]` to the crate attributes to enable\n \n error[E0658]: efiapi ABI is experimental and subject to change\n-  --> $DIR/feature-gate-abi.rs:82:12\n+  --> $DIR/feature-gate-abi.rs:81:12\n    |\n LL |     extern \"efiapi\" fn im10() {}\n    |            ^^^^^^^^\n@@ -417,15 +417,15 @@ LL |     extern \"efiapi\" fn im10() {}\n    = help: add `#![feature(abi_efiapi)]` to the crate attributes to enable\n \n error[E0658]: intrinsics are subject to change\n-  --> $DIR/feature-gate-abi.rs:86:18\n+  --> $DIR/feature-gate-abi.rs:85:18\n    |\n LL | type A1 = extern \"rust-intrinsic\" fn();\n    |                  ^^^^^^^^^^^^^^^^\n    |\n    = help: add `#![feature(intrinsics)]` to the crate attributes to enable\n \n error[E0658]: platform intrinsics are experimental and possibly buggy\n-  --> $DIR/feature-gate-abi.rs:87:18\n+  --> $DIR/feature-gate-abi.rs:86:18\n    |\n LL | type A2 = extern \"platform-intrinsic\" fn();\n    |                  ^^^^^^^^^^^^^^^^^^^^\n@@ -434,15 +434,15 @@ LL | type A2 = extern \"platform-intrinsic\" fn();\n    = help: add `#![feature(platform_intrinsics)]` to the crate attributes to enable\n \n error[E0658]: vectorcall is experimental and subject to change\n-  --> $DIR/feature-gate-abi.rs:88:18\n+  --> $DIR/feature-gate-abi.rs:87:18\n    |\n LL | type A3 = extern \"vectorcall\" fn();\n    |                  ^^^^^^^^^^^^\n    |\n    = help: add `#![feature(abi_vectorcall)]` to the crate attributes to enable\n \n error[E0658]: rust-call ABI is subject to change\n-  --> $DIR/feature-gate-abi.rs:89:18\n+  --> $DIR/feature-gate-abi.rs:88:18\n    |\n LL | type A4 = extern \"rust-call\" fn(_: ());\n    |                  ^^^^^^^^^^^\n@@ -451,7 +451,7 @@ LL | type A4 = extern \"rust-call\" fn(_: ());\n    = help: add `#![feature(unboxed_closures)]` to the crate attributes to enable\n \n error[E0658]: msp430-interrupt ABI is experimental and subject to change\n-  --> $DIR/feature-gate-abi.rs:90:18\n+  --> $DIR/feature-gate-abi.rs:89:18\n    |\n LL | type A5 = extern \"msp430-interrupt\" fn();\n    |                  ^^^^^^^^^^^^^^^^^^\n@@ -460,7 +460,7 @@ LL | type A5 = extern \"msp430-interrupt\" fn();\n    = help: add `#![feature(abi_msp430_interrupt)]` to the crate attributes to enable\n \n error[E0658]: PTX ABIs are experimental and subject to change\n-  --> $DIR/feature-gate-abi.rs:91:18\n+  --> $DIR/feature-gate-abi.rs:90:18\n    |\n LL | type A6 = extern \"ptx-kernel\" fn ();\n    |                  ^^^^^^^^^^^^\n@@ -469,7 +469,7 @@ LL | type A6 = extern \"ptx-kernel\" fn ();\n    = help: add `#![feature(abi_ptx)]` to the crate attributes to enable\n \n error[E0658]: x86-interrupt ABI is experimental and subject to change\n-  --> $DIR/feature-gate-abi.rs:92:18\n+  --> $DIR/feature-gate-abi.rs:91:18\n    |\n LL | type A7 = extern \"x86-interrupt\" fn();\n    |                  ^^^^^^^^^^^^^^^\n@@ -478,15 +478,15 @@ LL | type A7 = extern \"x86-interrupt\" fn();\n    = help: add `#![feature(abi_x86_interrupt)]` to the crate attributes to enable\n \n error[E0658]: thiscall is experimental and subject to change\n-  --> $DIR/feature-gate-abi.rs:93:18\n+  --> $DIR/feature-gate-abi.rs:92:18\n    |\n LL | type A8 = extern \"thiscall\" fn();\n    |                  ^^^^^^^^^^\n    |\n    = help: add `#![feature(abi_thiscall)]` to the crate attributes to enable\n \n error[E0658]: amdgpu-kernel ABI is experimental and subject to change\n-  --> $DIR/feature-gate-abi.rs:94:18\n+  --> $DIR/feature-gate-abi.rs:93:18\n    |\n LL | type A9 = extern \"amdgpu-kernel\" fn();\n    |                  ^^^^^^^^^^^^^^^\n@@ -495,7 +495,7 @@ LL | type A9 = extern \"amdgpu-kernel\" fn();\n    = help: add `#![feature(abi_amdgpu_kernel)]` to the crate attributes to enable\n \n error[E0658]: efiapi ABI is experimental and subject to change\n-  --> $DIR/feature-gate-abi.rs:95:19\n+  --> $DIR/feature-gate-abi.rs:94:19\n    |\n LL | type A10 = extern \"efiapi\" fn();\n    |                   ^^^^^^^^\n@@ -504,15 +504,15 @@ LL | type A10 = extern \"efiapi\" fn();\n    = help: add `#![feature(abi_efiapi)]` to the crate attributes to enable\n \n error[E0658]: intrinsics are subject to change\n-  --> $DIR/feature-gate-abi.rs:98:8\n+  --> $DIR/feature-gate-abi.rs:97:8\n    |\n LL | extern \"rust-intrinsic\" {}\n    |        ^^^^^^^^^^^^^^^^\n    |\n    = help: add `#![feature(intrinsics)]` to the crate attributes to enable\n \n error[E0658]: platform intrinsics are experimental and possibly buggy\n-  --> $DIR/feature-gate-abi.rs:99:8\n+  --> $DIR/feature-gate-abi.rs:98:8\n    |\n LL | extern \"platform-intrinsic\" {}\n    |        ^^^^^^^^^^^^^^^^^^^^\n@@ -521,15 +521,15 @@ LL | extern \"platform-intrinsic\" {}\n    = help: add `#![feature(platform_intrinsics)]` to the crate attributes to enable\n \n error[E0658]: vectorcall is experimental and subject to change\n-  --> $DIR/feature-gate-abi.rs:100:8\n+  --> $DIR/feature-gate-abi.rs:99:8\n    |\n LL | extern \"vectorcall\" {}\n    |        ^^^^^^^^^^^^\n    |\n    = help: add `#![feature(abi_vectorcall)]` to the crate attributes to enable\n \n error[E0658]: rust-call ABI is subject to change\n-  --> $DIR/feature-gate-abi.rs:101:8\n+  --> $DIR/feature-gate-abi.rs:100:8\n    |\n LL | extern \"rust-call\" {}\n    |        ^^^^^^^^^^^\n@@ -538,7 +538,7 @@ LL | extern \"rust-call\" {}\n    = help: add `#![feature(unboxed_closures)]` to the crate attributes to enable\n \n error[E0658]: msp430-interrupt ABI is experimental and subject to change\n-  --> $DIR/feature-gate-abi.rs:102:8\n+  --> $DIR/feature-gate-abi.rs:101:8\n    |\n LL | extern \"msp430-interrupt\" {}\n    |        ^^^^^^^^^^^^^^^^^^\n@@ -547,7 +547,7 @@ LL | extern \"msp430-interrupt\" {}\n    = help: add `#![feature(abi_msp430_interrupt)]` to the crate attributes to enable\n \n error[E0658]: PTX ABIs are experimental and subject to change\n-  --> $DIR/feature-gate-abi.rs:103:8\n+  --> $DIR/feature-gate-abi.rs:102:8\n    |\n LL | extern \"ptx-kernel\" {}\n    |        ^^^^^^^^^^^^\n@@ -556,7 +556,7 @@ LL | extern \"ptx-kernel\" {}\n    = help: add `#![feature(abi_ptx)]` to the crate attributes to enable\n \n error[E0658]: x86-interrupt ABI is experimental and subject to change\n-  --> $DIR/feature-gate-abi.rs:104:8\n+  --> $DIR/feature-gate-abi.rs:103:8\n    |\n LL | extern \"x86-interrupt\" {}\n    |        ^^^^^^^^^^^^^^^\n@@ -565,15 +565,15 @@ LL | extern \"x86-interrupt\" {}\n    = help: add `#![feature(abi_x86_interrupt)]` to the crate attributes to enable\n \n error[E0658]: thiscall is experimental and subject to change\n-  --> $DIR/feature-gate-abi.rs:105:8\n+  --> $DIR/feature-gate-abi.rs:104:8\n    |\n LL | extern \"thiscall\" {}\n    |        ^^^^^^^^^^\n    |\n    = help: add `#![feature(abi_thiscall)]` to the crate attributes to enable\n \n error[E0658]: amdgpu-kernel ABI is experimental and subject to change\n-  --> $DIR/feature-gate-abi.rs:106:8\n+  --> $DIR/feature-gate-abi.rs:105:8\n    |\n LL | extern \"amdgpu-kernel\" {}\n    |        ^^^^^^^^^^^^^^^\n@@ -582,7 +582,7 @@ LL | extern \"amdgpu-kernel\" {}\n    = help: add `#![feature(abi_amdgpu_kernel)]` to the crate attributes to enable\n \n error[E0658]: efiapi ABI is experimental and subject to change\n-  --> $DIR/feature-gate-abi.rs:107:8\n+  --> $DIR/feature-gate-abi.rs:106:8\n    |\n LL | extern \"efiapi\" {}\n    |        ^^^^^^^^\n@@ -591,49 +591,49 @@ LL | extern \"efiapi\" {}\n    = help: add `#![feature(abi_efiapi)]` to the crate attributes to enable\n \n error: intrinsic must be in `extern \"rust-intrinsic\" { ... }` block\n-  --> $DIR/feature-gate-abi.rs:28:32\n+  --> $DIR/feature-gate-abi.rs:27:32\n    |\n LL |     extern \"rust-intrinsic\" fn m1();\n    |                                ^^\n \n error: intrinsic must be in `extern \"rust-intrinsic\" { ... }` block\n-  --> $DIR/feature-gate-abi.rs:30:36\n+  --> $DIR/feature-gate-abi.rs:29:36\n    |\n LL |     extern \"platform-intrinsic\" fn m2();\n    |                                    ^^\n \n error: intrinsic must be in `extern \"rust-intrinsic\" { ... }` block\n-  --> $DIR/feature-gate-abi.rs:13:33\n+  --> $DIR/feature-gate-abi.rs:12:33\n    |\n LL | extern \"rust-intrinsic\" fn f1() {}\n    |                                 ^^\n \n error: intrinsic must be in `extern \"rust-intrinsic\" { ... }` block\n-  --> $DIR/feature-gate-abi.rs:15:37\n+  --> $DIR/feature-gate-abi.rs:14:37\n    |\n LL | extern \"platform-intrinsic\" fn f2() {}\n    |                                     ^^\n \n error: intrinsic must be in `extern \"rust-intrinsic\" { ... }` block\n-  --> $DIR/feature-gate-abi.rs:55:37\n+  --> $DIR/feature-gate-abi.rs:54:37\n    |\n LL |     extern \"rust-intrinsic\" fn m1() {}\n    |                                     ^^\n \n error: intrinsic must be in `extern \"rust-intrinsic\" { ... }` block\n-  --> $DIR/feature-gate-abi.rs:57:41\n+  --> $DIR/feature-gate-abi.rs:56:41\n    |\n LL |     extern \"platform-intrinsic\" fn m2() {}\n    |                                         ^^\n \n error: intrinsic must be in `extern \"rust-intrinsic\" { ... }` block\n-  --> $DIR/feature-gate-abi.rs:71:38\n+  --> $DIR/feature-gate-abi.rs:70:38\n    |\n LL |     extern \"rust-intrinsic\" fn im1() {}\n    |                                      ^^\n \n error: intrinsic must be in `extern \"rust-intrinsic\" { ... }` block\n-  --> $DIR/feature-gate-abi.rs:73:42\n+  --> $DIR/feature-gate-abi.rs:72:42\n    |\n LL |     extern \"platform-intrinsic\" fn im2() {}\n    |                                          ^^"}, {"sha": "04f816ea5016401112bd152625b6431456d77ae2", "filename": "src/test/ui/feature-gates/feature-gate-rustc-attrs-1.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-rustc-attrs-1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-rustc-attrs-1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-rustc-attrs-1.rs?ref=3ea62cb5d19846b44172d861ae231c8c09322800", "patch": "@@ -1,5 +1,3 @@\n-// ignore-tidy-linelength\n-\n // Test that `#[rustc_*]` attributes are gated by `rustc_attrs` feature gate.\n \n #[rustc_variance] //~ ERROR the `#[rustc_variance]` attribute is just used for rustc unit tests and will never be stable"}, {"sha": "822368a5946ecb2fa0b1210fec38a06e309f7a55", "filename": "src/test/ui/feature-gates/feature-gate-rustc-attrs-1.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-rustc-attrs-1.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-rustc-attrs-1.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-rustc-attrs-1.stderr?ref=3ea62cb5d19846b44172d861ae231c8c09322800", "patch": "@@ -1,21 +1,21 @@\n error[E0658]: the `#[rustc_variance]` attribute is just used for rustc unit tests and will never be stable\n-  --> $DIR/feature-gate-rustc-attrs-1.rs:5:1\n+  --> $DIR/feature-gate-rustc-attrs-1.rs:3:1\n    |\n LL | #[rustc_variance]\n    | ^^^^^^^^^^^^^^^^^\n    |\n    = help: add `#![feature(rustc_attrs)]` to the crate attributes to enable\n \n error[E0658]: the `#[rustc_error]` attribute is just used for rustc unit tests and will never be stable\n-  --> $DIR/feature-gate-rustc-attrs-1.rs:6:1\n+  --> $DIR/feature-gate-rustc-attrs-1.rs:4:1\n    |\n LL | #[rustc_error]\n    | ^^^^^^^^^^^^^^\n    |\n    = help: add `#![feature(rustc_attrs)]` to the crate attributes to enable\n \n error[E0658]: the `#[rustc_nonnull_optimization_guaranteed]` attribute is just used to enable niche optimizations in libcore and will never be stable\n-  --> $DIR/feature-gate-rustc-attrs-1.rs:7:1\n+  --> $DIR/feature-gate-rustc-attrs-1.rs:5:1\n    |\n LL | #[rustc_nonnull_optimization_guaranteed]\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^"}, {"sha": "07167fa695e41e12de9862762ea06c9f653f3929", "filename": "src/test/ui/feature-gates/issue-43106-gating-of-builtin-attrs-error.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fui%2Ffeature-gates%2Fissue-43106-gating-of-builtin-attrs-error.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fui%2Ffeature-gates%2Fissue-43106-gating-of-builtin-attrs-error.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Fissue-43106-gating-of-builtin-attrs-error.rs?ref=3ea62cb5d19846b44172d861ae231c8c09322800", "patch": "@@ -8,7 +8,6 @@\n // which would mess up the treatment of other cases in\n // issue-43106-gating-of-builtin-attrs.rs)\n \n-// ignore-tidy-linelength\n \n #![macro_export]\n //~^ ERROR: `macro_export` attribute cannot be used at crate level"}, {"sha": "33a5021cde43034181d6da69903946ae3c35a578", "filename": "src/test/ui/feature-gates/issue-43106-gating-of-builtin-attrs-error.stderr", "status": "modified", "additions": 36, "deletions": 36, "changes": 72, "blob_url": "https://github.com/rust-lang/rust/blob/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fui%2Ffeature-gates%2Fissue-43106-gating-of-builtin-attrs-error.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fui%2Ffeature-gates%2Fissue-43106-gating-of-builtin-attrs-error.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Fissue-43106-gating-of-builtin-attrs-error.stderr?ref=3ea62cb5d19846b44172d861ae231c8c09322800", "patch": "@@ -1,5 +1,5 @@\n error: attribute must be of the form `#[inline]` or `#[inline(always|never)]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs-error.rs:41:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs-error.rs:40:5\n    |\n LL |     #[inline = \"2100\"] fn f() { }\n    |     ^^^^^^^^^^^^^^^^^^\n@@ -9,67 +9,67 @@ LL |     #[inline = \"2100\"] fn f() { }\n    = note: for more information, see issue #57571 <https://github.com/rust-lang/rust/issues/57571>\n \n error: `main` attribute can only be used on functions\n-  --> $DIR/issue-43106-gating-of-builtin-attrs-error.rs:110:1\n+  --> $DIR/issue-43106-gating-of-builtin-attrs-error.rs:109:1\n    |\n LL | #[main]\n    | ^^^^^^^\n \n error: `main` attribute can only be used on functions\n-  --> $DIR/issue-43106-gating-of-builtin-attrs-error.rs:113:17\n+  --> $DIR/issue-43106-gating-of-builtin-attrs-error.rs:112:17\n    |\n LL |     mod inner { #![main] }\n    |                 ^^^^^^^^\n \n error: `main` attribute can only be used on functions\n-  --> $DIR/issue-43106-gating-of-builtin-attrs-error.rs:118:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs-error.rs:117:5\n    |\n LL |     #[main] struct S;\n    |     ^^^^^^^\n \n error: `main` attribute can only be used on functions\n-  --> $DIR/issue-43106-gating-of-builtin-attrs-error.rs:121:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs-error.rs:120:5\n    |\n LL |     #[main] type T = S;\n    |     ^^^^^^^\n \n error: `main` attribute can only be used on functions\n-  --> $DIR/issue-43106-gating-of-builtin-attrs-error.rs:124:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs-error.rs:123:5\n    |\n LL |     #[main] impl S { }\n    |     ^^^^^^^\n \n error: `start` attribute can only be used on functions\n-  --> $DIR/issue-43106-gating-of-builtin-attrs-error.rs:128:1\n+  --> $DIR/issue-43106-gating-of-builtin-attrs-error.rs:127:1\n    |\n LL | #[start]\n    | ^^^^^^^^\n \n error: `start` attribute can only be used on functions\n-  --> $DIR/issue-43106-gating-of-builtin-attrs-error.rs:131:17\n+  --> $DIR/issue-43106-gating-of-builtin-attrs-error.rs:130:17\n    |\n LL |     mod inner { #![start] }\n    |                 ^^^^^^^^^\n \n error: `start` attribute can only be used on functions\n-  --> $DIR/issue-43106-gating-of-builtin-attrs-error.rs:136:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs-error.rs:135:5\n    |\n LL |     #[start] struct S;\n    |     ^^^^^^^^\n \n error: `start` attribute can only be used on functions\n-  --> $DIR/issue-43106-gating-of-builtin-attrs-error.rs:139:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs-error.rs:138:5\n    |\n LL |     #[start] type T = S;\n    |     ^^^^^^^^\n \n error: `start` attribute can only be used on functions\n-  --> $DIR/issue-43106-gating-of-builtin-attrs-error.rs:142:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs-error.rs:141:5\n    |\n LL |     #[start] impl S { }\n    |     ^^^^^^^^\n \n error[E0518]: attribute should be applied to function or closure\n-  --> $DIR/issue-43106-gating-of-builtin-attrs-error.rs:32:1\n+  --> $DIR/issue-43106-gating-of-builtin-attrs-error.rs:31:1\n    |\n LL |   #[inline]\n    |   ^^^^^^^^^\n@@ -84,7 +84,7 @@ LL | | }\n    | |_- not a function or closure\n \n error: attribute should be applied to an `extern crate` item\n-  --> $DIR/issue-43106-gating-of-builtin-attrs-error.rs:60:1\n+  --> $DIR/issue-43106-gating-of-builtin-attrs-error.rs:59:1\n    |\n LL |   #[no_link]\n    |   ^^^^^^^^^^\n@@ -99,7 +99,7 @@ LL | | }\n    | |_- not an `extern crate` item\n \n error: attribute should be applied to a function or static\n-  --> $DIR/issue-43106-gating-of-builtin-attrs-error.rs:86:1\n+  --> $DIR/issue-43106-gating-of-builtin-attrs-error.rs:85:1\n    |\n LL |   #[export_name = \"2200\"]\n    |   ^^^^^^^^^^^^^^^^^^^^^^^\n@@ -114,133 +114,133 @@ LL | | }\n    | |_- not a function or static\n \n error: attribute should be applied to an `extern crate` item\n-  --> $DIR/issue-43106-gating-of-builtin-attrs-error.rs:26:1\n+  --> $DIR/issue-43106-gating-of-builtin-attrs-error.rs:25:1\n    |\n LL | #![no_link]\n    | ^^^^^^^^^^^\n \n error: attribute should be applied to a function or static\n-  --> $DIR/issue-43106-gating-of-builtin-attrs-error.rs:28:1\n+  --> $DIR/issue-43106-gating-of-builtin-attrs-error.rs:27:1\n    |\n LL | #![export_name = \"2200\"]\n    | ^^^^^^^^^^^^^^^^^^^^^^^^\n \n error[E0518]: attribute should be applied to function or closure\n-  --> $DIR/issue-43106-gating-of-builtin-attrs-error.rs:30:1\n+  --> $DIR/issue-43106-gating-of-builtin-attrs-error.rs:29:1\n    |\n LL | #![inline]\n    | ^^^^^^^^^^\n \n error: `macro_export` attribute cannot be used at crate level\n-  --> $DIR/issue-43106-gating-of-builtin-attrs-error.rs:13:1\n+  --> $DIR/issue-43106-gating-of-builtin-attrs-error.rs:12:1\n    |\n LL | #![macro_export]\n    | ^^^^^^^^^^^^^^^^\n \n error: `main` attribute cannot be used at crate level\n-  --> $DIR/issue-43106-gating-of-builtin-attrs-error.rs:15:1\n+  --> $DIR/issue-43106-gating-of-builtin-attrs-error.rs:14:1\n    |\n LL | #![main]\n    | ^^^^^^^^\n \n error: `start` attribute cannot be used at crate level\n-  --> $DIR/issue-43106-gating-of-builtin-attrs-error.rs:17:1\n+  --> $DIR/issue-43106-gating-of-builtin-attrs-error.rs:16:1\n    |\n LL | #![start]\n    | ^^^^^^^^^\n \n error: `repr` attribute cannot be used at crate level\n-  --> $DIR/issue-43106-gating-of-builtin-attrs-error.rs:19:1\n+  --> $DIR/issue-43106-gating-of-builtin-attrs-error.rs:18:1\n    |\n LL | #![repr()]\n    | ^^^^^^^^^^\n \n error: `path` attribute cannot be used at crate level\n-  --> $DIR/issue-43106-gating-of-builtin-attrs-error.rs:21:1\n+  --> $DIR/issue-43106-gating-of-builtin-attrs-error.rs:20:1\n    |\n LL | #![path = \"3800\"]\n    | ^^^^^^^^^^^^^^^^^\n \n error: `automatically_derived` attribute cannot be used at crate level\n-  --> $DIR/issue-43106-gating-of-builtin-attrs-error.rs:23:1\n+  --> $DIR/issue-43106-gating-of-builtin-attrs-error.rs:22:1\n    |\n LL | #![automatically_derived]\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error[E0518]: attribute should be applied to function or closure\n-  --> $DIR/issue-43106-gating-of-builtin-attrs-error.rs:37:17\n+  --> $DIR/issue-43106-gating-of-builtin-attrs-error.rs:36:17\n    |\n LL |     mod inner { #![inline] }\n    |     ------------^^^^^^^^^^-- not a function or closure\n \n error[E0518]: attribute should be applied to function or closure\n-  --> $DIR/issue-43106-gating-of-builtin-attrs-error.rs:47:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs-error.rs:46:5\n    |\n LL |     #[inline] struct S;\n    |     ^^^^^^^^^ --------- not a function or closure\n \n error[E0518]: attribute should be applied to function or closure\n-  --> $DIR/issue-43106-gating-of-builtin-attrs-error.rs:51:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs-error.rs:50:5\n    |\n LL |     #[inline] type T = S;\n    |     ^^^^^^^^^ ----------- not a function or closure\n \n error[E0518]: attribute should be applied to function or closure\n-  --> $DIR/issue-43106-gating-of-builtin-attrs-error.rs:55:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs-error.rs:54:5\n    |\n LL |     #[inline] impl S { }\n    |     ^^^^^^^^^ ---------- not a function or closure\n \n error: attribute should be applied to an `extern crate` item\n-  --> $DIR/issue-43106-gating-of-builtin-attrs-error.rs:65:17\n+  --> $DIR/issue-43106-gating-of-builtin-attrs-error.rs:64:17\n    |\n LL |     mod inner { #![no_link] }\n    |     ------------^^^^^^^^^^^-- not an `extern crate` item\n \n error: attribute should be applied to an `extern crate` item\n-  --> $DIR/issue-43106-gating-of-builtin-attrs-error.rs:69:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs-error.rs:68:5\n    |\n LL |     #[no_link] fn f() { }\n    |     ^^^^^^^^^^ ---------- not an `extern crate` item\n \n error: attribute should be applied to an `extern crate` item\n-  --> $DIR/issue-43106-gating-of-builtin-attrs-error.rs:73:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs-error.rs:72:5\n    |\n LL |     #[no_link] struct S;\n    |     ^^^^^^^^^^ --------- not an `extern crate` item\n \n error: attribute should be applied to an `extern crate` item\n-  --> $DIR/issue-43106-gating-of-builtin-attrs-error.rs:77:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs-error.rs:76:5\n    |\n LL |     #[no_link]type T = S;\n    |     ^^^^^^^^^^----------- not an `extern crate` item\n \n error: attribute should be applied to an `extern crate` item\n-  --> $DIR/issue-43106-gating-of-builtin-attrs-error.rs:81:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs-error.rs:80:5\n    |\n LL |     #[no_link] impl S { }\n    |     ^^^^^^^^^^ ---------- not an `extern crate` item\n \n error: attribute should be applied to a function or static\n-  --> $DIR/issue-43106-gating-of-builtin-attrs-error.rs:91:17\n+  --> $DIR/issue-43106-gating-of-builtin-attrs-error.rs:90:17\n    |\n LL |     mod inner { #![export_name=\"2200\"] }\n    |     ------------^^^^^^^^^^^^^^^^^^^^^^-- not a function or static\n \n error: attribute should be applied to a function or static\n-  --> $DIR/issue-43106-gating-of-builtin-attrs-error.rs:97:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs-error.rs:96:5\n    |\n LL |     #[export_name = \"2200\"] struct S;\n    |     ^^^^^^^^^^^^^^^^^^^^^^^ --------- not a function or static\n \n error: attribute should be applied to a function or static\n-  --> $DIR/issue-43106-gating-of-builtin-attrs-error.rs:101:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs-error.rs:100:5\n    |\n LL |     #[export_name = \"2200\"] type T = S;\n    |     ^^^^^^^^^^^^^^^^^^^^^^^ ----------- not a function or static\n \n error: attribute should be applied to a function or static\n-  --> $DIR/issue-43106-gating-of-builtin-attrs-error.rs:105:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs-error.rs:104:5\n    |\n LL |     #[export_name = \"2200\"] impl S { }\n    |     ^^^^^^^^^^^^^^^^^^^^^^^ ---------- not a function or static"}, {"sha": "19a60f1bcfffe2c83d4e01d3795c57f6f44b2b8c", "filename": "src/test/ui/feature-gates/issue-43106-gating-of-builtin-attrs.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fui%2Ffeature-gates%2Fissue-43106-gating-of-builtin-attrs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fui%2Ffeature-gates%2Fissue-43106-gating-of-builtin-attrs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Fissue-43106-gating-of-builtin-attrs.rs?ref=3ea62cb5d19846b44172d861ae231c8c09322800", "patch": "@@ -34,7 +34,6 @@\n // occurrences in the source text.\n \n // check-pass\n-// ignore-tidy-linelength\n \n #![feature(test, plugin_registrar)]\n #![warn(unused_attributes, unknown_lints)]"}, {"sha": "c207c05455feaca98fe7fdb4c5db331d06ec7181", "filename": "src/test/ui/feature-gates/issue-43106-gating-of-builtin-attrs.stderr", "status": "modified", "additions": 208, "deletions": 208, "changes": 416, "blob_url": "https://github.com/rust-lang/rust/blob/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fui%2Ffeature-gates%2Fissue-43106-gating-of-builtin-attrs.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fui%2Ffeature-gates%2Fissue-43106-gating-of-builtin-attrs.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Fissue-43106-gating-of-builtin-attrs.stderr?ref=3ea62cb5d19846b44172d861ae231c8c09322800", "patch": "@@ -1,243 +1,243 @@\n warning: unknown lint: `x5400`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:53:9\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:52:9\n    |\n LL | #![warn(x5400)]\n    |         ^^^^^\n    |\n note: the lint level is defined here\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:40:28\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:39:28\n    |\n LL | #![warn(unused_attributes, unknown_lints)]\n    |                            ^^^^^^^^^^^^^\n \n warning: unknown lint: `x5300`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:54:10\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:53:10\n    |\n LL | #![allow(x5300)]\n    |          ^^^^^\n \n warning: unknown lint: `x5200`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:55:11\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:54:11\n    |\n LL | #![forbid(x5200)]\n    |           ^^^^^\n \n warning: unknown lint: `x5100`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:56:9\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:55:9\n    |\n LL | #![deny(x5100)]\n    |         ^^^^^\n \n warning: unknown lint: `x5400`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:111:8\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:110:8\n    |\n LL | #[warn(x5400)]\n    |        ^^^^^\n \n warning: unknown lint: `x5400`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:114:25\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:113:25\n    |\n LL |     mod inner { #![warn(x5400)] }\n    |                         ^^^^^\n \n warning: unknown lint: `x5400`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:117:12\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:116:12\n    |\n LL |     #[warn(x5400)] fn f() { }\n    |            ^^^^^\n \n warning: unknown lint: `x5400`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:120:12\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:119:12\n    |\n LL |     #[warn(x5400)] struct S;\n    |            ^^^^^\n \n warning: unknown lint: `x5400`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:123:12\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:122:12\n    |\n LL |     #[warn(x5400)] type T = S;\n    |            ^^^^^\n \n warning: unknown lint: `x5400`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:126:12\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:125:12\n    |\n LL |     #[warn(x5400)] impl S { }\n    |            ^^^^^\n \n warning: unknown lint: `x5300`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:130:9\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:129:9\n    |\n LL | #[allow(x5300)]\n    |         ^^^^^\n \n warning: unknown lint: `x5300`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:133:26\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:132:26\n    |\n LL |     mod inner { #![allow(x5300)] }\n    |                          ^^^^^\n \n warning: unknown lint: `x5300`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:136:13\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:135:13\n    |\n LL |     #[allow(x5300)] fn f() { }\n    |             ^^^^^\n \n warning: unknown lint: `x5300`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:139:13\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:138:13\n    |\n LL |     #[allow(x5300)] struct S;\n    |             ^^^^^\n \n warning: unknown lint: `x5300`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:142:13\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:141:13\n    |\n LL |     #[allow(x5300)] type T = S;\n    |             ^^^^^\n \n warning: unknown lint: `x5300`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:145:13\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:144:13\n    |\n LL |     #[allow(x5300)] impl S { }\n    |             ^^^^^\n \n warning: unknown lint: `x5200`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:149:10\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:148:10\n    |\n LL | #[forbid(x5200)]\n    |          ^^^^^\n \n warning: unknown lint: `x5200`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:152:27\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:151:27\n    |\n LL |     mod inner { #![forbid(x5200)] }\n    |                           ^^^^^\n \n warning: unknown lint: `x5200`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:155:14\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:154:14\n    |\n LL |     #[forbid(x5200)] fn f() { }\n    |              ^^^^^\n \n warning: unknown lint: `x5200`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:158:14\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:157:14\n    |\n LL |     #[forbid(x5200)] struct S;\n    |              ^^^^^\n \n warning: unknown lint: `x5200`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:161:14\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:160:14\n    |\n LL |     #[forbid(x5200)] type T = S;\n    |              ^^^^^\n \n warning: unknown lint: `x5200`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:164:14\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:163:14\n    |\n LL |     #[forbid(x5200)] impl S { }\n    |              ^^^^^\n \n warning: unknown lint: `x5100`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:168:8\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:167:8\n    |\n LL | #[deny(x5100)]\n    |        ^^^^^\n \n warning: unknown lint: `x5100`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:171:25\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:170:25\n    |\n LL |     mod inner { #![deny(x5100)] }\n    |                         ^^^^^\n \n warning: unknown lint: `x5100`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:174:12\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:173:12\n    |\n LL |     #[deny(x5100)] fn f() { }\n    |            ^^^^^\n \n warning: unknown lint: `x5100`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:177:12\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:176:12\n    |\n LL |     #[deny(x5100)] struct S;\n    |            ^^^^^\n \n warning: unknown lint: `x5100`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:180:12\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:179:12\n    |\n LL |     #[deny(x5100)] type T = S;\n    |            ^^^^^\n \n warning: unknown lint: `x5100`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:183:12\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:182:12\n    |\n LL |     #[deny(x5100)] impl S { }\n    |            ^^^^^\n \n warning: `#[macro_escape]` is a deprecated synonym for `#[macro_use]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:441:17\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:440:17\n    |\n LL |     mod inner { #![macro_escape] }\n    |                 ^^^^^^^^^^^^^^^^\n    |\n    = help: try an outer attribute: `#[macro_use]`\n \n warning: `#[macro_escape]` is a deprecated synonym for `#[macro_use]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:438:1\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:437:1\n    |\n LL | #[macro_escape]\n    | ^^^^^^^^^^^^^^^\n \n warning: use of deprecated attribute `plugin_registrar`: compiler plugins are deprecated. See https://github.com/rust-lang/rust/pull/64675\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:228:17\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:227:17\n    |\n LL |     mod inner { #![plugin_registrar] }\n    |                 ^^^^^^^^^^^^^^^^^^^^ help: may be removed in a future compiler version\n    |\n    = note: `#[warn(deprecated)]` on by default\n \n warning: use of deprecated attribute `plugin_registrar`: compiler plugins are deprecated. See https://github.com/rust-lang/rust/pull/64675\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:236:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:235:5\n    |\n LL |     #[plugin_registrar] struct S;\n    |     ^^^^^^^^^^^^^^^^^^^ help: may be removed in a future compiler version\n \n warning: use of deprecated attribute `plugin_registrar`: compiler plugins are deprecated. See https://github.com/rust-lang/rust/pull/64675\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:241:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:240:5\n    |\n LL |     #[plugin_registrar] type T = S;\n    |     ^^^^^^^^^^^^^^^^^^^ help: may be removed in a future compiler version\n \n warning: use of deprecated attribute `plugin_registrar`: compiler plugins are deprecated. See https://github.com/rust-lang/rust/pull/64675\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:246:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:245:5\n    |\n LL |     #[plugin_registrar] impl S { }\n    |     ^^^^^^^^^^^^^^^^^^^ help: may be removed in a future compiler version\n \n warning: use of deprecated attribute `plugin_registrar`: compiler plugins are deprecated. See https://github.com/rust-lang/rust/pull/64675\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:223:1\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:222:1\n    |\n LL | #[plugin_registrar]\n    | ^^^^^^^^^^^^^^^^^^^ help: may be removed in a future compiler version\n \n warning: use of deprecated attribute `plugin_registrar`: compiler plugins are deprecated. See https://github.com/rust-lang/rust/pull/64675\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:46:1\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:45:1\n    |\n LL | #![plugin_registrar]\n    | ^^^^^^^^^^^^^^^^^^^^ help: may be removed in a future compiler version\n \n warning: use of deprecated attribute `crate_id`: no longer used.\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:91:1\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:90:1\n    |\n LL | #![crate_id = \"10\"]\n    | ^^^^^^^^^^^^^^^^^^^ help: remove this attribute\n \n warning: use of deprecated attribute `no_start`: no longer used.\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:100:1\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:99:1\n    |\n LL | #![no_start]\n    | ^^^^^^^^^^^^ help: remove this attribute\n \n warning: attribute should be applied to a function or static\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:333:1\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:332:1\n    |\n LL |   #[no_mangle]\n    |   ^^^^^^^^^^^^\n@@ -252,14 +252,14 @@ LL | | }\n    | |_- not a function or static\n    |\n note: the lint level is defined here\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:40:9\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:39:9\n    |\n LL | #![warn(unused_attributes, unknown_lints)]\n    |         ^^^^^^^^^^^^^^^^^\n    = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n \n warning: attribute should be applied to a function\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:500:1\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:499:1\n    |\n LL |   #[cold]\n    |   ^^^^^^^\n@@ -276,7 +276,7 @@ LL | | }\n    = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n \n warning: attribute should be applied to a foreign function or static\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:529:1\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:528:1\n    |\n LL |   #[link_name = \"1900\"]\n    |   ^^^^^^^^^^^^^^^^^^^^^\n@@ -293,7 +293,7 @@ LL | | }\n    = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n \n warning: attribute should be applied to a function or static\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:568:1\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:567:1\n    |\n LL |   #[link_section = \"1800\"]\n    |   ^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -310,95 +310,95 @@ LL | | }\n    = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n \n warning: attribute should be applied to a function\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:69:1\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:68:1\n    |\n LL | #![cold]\n    | ^^^^^^^^\n    |\n    = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n \n warning: attribute should be applied to a foreign function or static\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:73:1\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:72:1\n    |\n LL | #![link_name = \"1900\"]\n    | ^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n \n warning: attribute should be applied to a function or static\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:76:1\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:75:1\n    |\n LL | #![link_section = \"1800\"]\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n \n warning: attribute should be applied to a function or static\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:338:17\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:337:17\n    |\n LL |     mod inner { #![no_mangle] }\n    |     ------------^^^^^^^^^^^^^-- not a function or static\n    |\n    = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n \n warning: attribute should be applied to a function or static\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:345:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:344:5\n    |\n LL |     #[no_mangle] struct S;\n    |     ^^^^^^^^^^^^ --------- not a function or static\n    |\n    = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n \n warning: attribute should be applied to a function or static\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:350:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:349:5\n    |\n LL |     #[no_mangle] type T = S;\n    |     ^^^^^^^^^^^^ ----------- not a function or static\n    |\n    = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n \n warning: attribute should be applied to a function or static\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:355:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:354:5\n    |\n LL |     #[no_mangle] impl S { }\n    |     ^^^^^^^^^^^^ ---------- not a function or static\n    |\n    = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n \n warning: attribute should be applied to a function\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:506:17\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:505:17\n    |\n LL |     mod inner { #![cold] }\n    |     ------------^^^^^^^^-- not a function\n    |\n    = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n \n warning: attribute should be applied to a function\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:513:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:512:5\n    |\n LL |     #[cold] struct S;\n    |     ^^^^^^^ --------- not a function\n    |\n    = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n \n warning: attribute should be applied to a function\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:518:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:517:5\n    |\n LL |     #[cold] type T = S;\n    |     ^^^^^^^ ----------- not a function\n    |\n    = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n \n warning: attribute should be applied to a function\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:523:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:522:5\n    |\n LL |     #[cold] impl S { }\n    |     ^^^^^^^ ---------- not a function\n    |\n    = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n \n warning: attribute should be applied to a foreign function or static\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:535:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:534:5\n    |\n LL |     #[link_name = \"1900\"]\n    |     ^^^^^^^^^^^^^^^^^^^^^\n@@ -408,933 +408,933 @@ LL |     extern \"C\" { }\n    |\n    = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n help: try `#[link(name = \"1900\")]` instead\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:535:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:534:5\n    |\n LL |     #[link_name = \"1900\"]\n    |     ^^^^^^^^^^^^^^^^^^^^^\n \n warning: attribute should be applied to a foreign function or static\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:542:17\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:541:17\n    |\n LL |     mod inner { #![link_name=\"1900\"] }\n    |     ------------^^^^^^^^^^^^^^^^^^^^-- not a foreign function or static\n    |\n    = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n \n warning: attribute should be applied to a foreign function or static\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:547:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:546:5\n    |\n LL |     #[link_name = \"1900\"] fn f() { }\n    |     ^^^^^^^^^^^^^^^^^^^^^ ---------- not a foreign function or static\n    |\n    = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n \n warning: attribute should be applied to a foreign function or static\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:552:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:551:5\n    |\n LL |     #[link_name = \"1900\"] struct S;\n    |     ^^^^^^^^^^^^^^^^^^^^^ --------- not a foreign function or static\n    |\n    = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n \n warning: attribute should be applied to a foreign function or static\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:557:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:556:5\n    |\n LL |     #[link_name = \"1900\"] type T = S;\n    |     ^^^^^^^^^^^^^^^^^^^^^ ----------- not a foreign function or static\n    |\n    = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n \n warning: attribute should be applied to a foreign function or static\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:562:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:561:5\n    |\n LL |     #[link_name = \"1900\"] impl S { }\n    |     ^^^^^^^^^^^^^^^^^^^^^ ---------- not a foreign function or static\n    |\n    = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n \n warning: attribute should be applied to a function or static\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:574:17\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:573:17\n    |\n LL |     mod inner { #![link_section=\"1800\"] }\n    |     ------------^^^^^^^^^^^^^^^^^^^^^^^-- not a function or static\n    |\n    = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n \n warning: attribute should be applied to a function or static\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:581:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:580:5\n    |\n LL |     #[link_section = \"1800\"] struct S;\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^ --------- not a function or static\n    |\n    = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n \n warning: attribute should be applied to a function or static\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:586:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:585:5\n    |\n LL |     #[link_section = \"1800\"] type T = S;\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^ ----------- not a function or static\n    |\n    = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n \n warning: attribute should be applied to a function or static\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:591:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:590:5\n    |\n LL |     #[link_section = \"1800\"] impl S { }\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^ ---------- not a function or static\n    |\n    = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n \n warning: the feature `rust1` has been stable since 1.0.0 and no longer requires an attribute to enable\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:96:12\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:95:12\n    |\n LL | #![feature(rust1)]\n    |            ^^^^^\n    |\n    = note: `#[warn(stable_features)]` on by default\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:46:1\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:45:1\n    |\n LL | #![plugin_registrar]\n    | ^^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:60:1\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:59:1\n    |\n LL | #![should_panic]\n    | ^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:61:1\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:60:1\n    |\n LL | #![ignore]\n    | ^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:67:1\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:66:1\n    |\n LL | #![proc_macro_derive()]\n    | ^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:191:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:190:5\n    |\n LL |     #[macro_use] fn f() { }\n    |     ^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:194:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:193:5\n    |\n LL |     #[macro_use] struct S;\n    |     ^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:197:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:196:5\n    |\n LL |     #[macro_use] type T = S;\n    |     ^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:200:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:199:5\n    |\n LL |     #[macro_use] impl S { }\n    |     ^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:204:1\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:203:1\n    |\n LL | #[macro_export]\n    | ^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:207:17\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:206:17\n    |\n LL |     mod inner { #![macro_export] }\n    |                 ^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:210:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:209:5\n    |\n LL |     #[macro_export] fn f() { }\n    |     ^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:213:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:212:5\n    |\n LL |     #[macro_export] struct S;\n    |     ^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:216:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:215:5\n    |\n LL |     #[macro_export] type T = S;\n    |     ^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:219:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:218:5\n    |\n LL |     #[macro_export] impl S { }\n    |     ^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:223:1\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:222:1\n    |\n LL | #[plugin_registrar]\n    | ^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:228:17\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:227:17\n    |\n LL |     mod inner { #![plugin_registrar] }\n    |                 ^^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:236:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:235:5\n    |\n LL |     #[plugin_registrar] struct S;\n    |     ^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:241:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:240:5\n    |\n LL |     #[plugin_registrar] type T = S;\n    |     ^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:246:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:245:5\n    |\n LL |     #[plugin_registrar] impl S { }\n    |     ^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:301:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:300:5\n    |\n LL |     #[path = \"3800\"] fn f() { }\n    |     ^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:304:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:303:5\n    |\n LL |     #[path = \"3800\"]  struct S;\n    |     ^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:307:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:306:5\n    |\n LL |     #[path = \"3800\"] type T = S;\n    |     ^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:310:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:309:5\n    |\n LL |     #[path = \"3800\"] impl S { }\n    |     ^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:314:1\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:313:1\n    |\n LL | #[automatically_derived]\n    | ^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:317:17\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:316:17\n    |\n LL |     mod inner { #![automatically_derived] }\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:320:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:319:5\n    |\n LL |     #[automatically_derived] fn f() { }\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:323:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:322:5\n    |\n LL |     #[automatically_derived] struct S;\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:326:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:325:5\n    |\n LL |     #[automatically_derived] type T = S;\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:329:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:328:5\n    |\n LL |     #[automatically_derived] impl S { }\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:361:1\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:360:1\n    |\n LL | #[should_panic]\n    | ^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:364:17\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:363:17\n    |\n LL |     mod inner { #![should_panic] }\n    |                 ^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:367:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:366:5\n    |\n LL |     #[should_panic] fn f() { }\n    |     ^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:370:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:369:5\n    |\n LL |     #[should_panic] struct S;\n    |     ^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:373:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:372:5\n    |\n LL |     #[should_panic] type T = S;\n    |     ^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:376:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:375:5\n    |\n LL |     #[should_panic] impl S { }\n    |     ^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:380:1\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:379:1\n    |\n LL | #[ignore]\n    | ^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:383:17\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:382:17\n    |\n LL |     mod inner { #![ignore] }\n    |                 ^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:386:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:385:5\n    |\n LL |     #[ignore] fn f() { }\n    |     ^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:389:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:388:5\n    |\n LL |     #[ignore] struct S;\n    |     ^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:392:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:391:5\n    |\n LL |     #[ignore] type T = S;\n    |     ^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:395:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:394:5\n    |\n LL |     #[ignore] impl S { }\n    |     ^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:399:1\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:398:1\n    |\n LL | #[no_implicit_prelude]\n    | ^^^^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:402:17\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:401:17\n    |\n LL |     mod inner { #![no_implicit_prelude] }\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:405:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:404:5\n    |\n LL |     #[no_implicit_prelude] fn f() { }\n    |     ^^^^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:408:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:407:5\n    |\n LL |     #[no_implicit_prelude] struct S;\n    |     ^^^^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:411:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:410:5\n    |\n LL |     #[no_implicit_prelude] type T = S;\n    |     ^^^^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:414:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:413:5\n    |\n LL |     #[no_implicit_prelude] impl S { }\n    |     ^^^^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:418:1\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:417:1\n    |\n LL | #[reexport_test_harness_main = \"2900\"]\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:421:17\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:420:17\n    |\n LL |     mod inner { #![reexport_test_harness_main=\"2900\"] }\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:424:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:423:5\n    |\n LL |     #[reexport_test_harness_main = \"2900\"] fn f() { }\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:427:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:426:5\n    |\n LL |     #[reexport_test_harness_main = \"2900\"] struct S;\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:430:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:429:5\n    |\n LL |     #[reexport_test_harness_main = \"2900\"] type T = S;\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:433:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:432:5\n    |\n LL |     #[reexport_test_harness_main = \"2900\"] impl S { }\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:445:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:444:5\n    |\n LL |     #[macro_escape] fn f() { }\n    |     ^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:448:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:447:5\n    |\n LL |     #[macro_escape] struct S;\n    |     ^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:451:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:450:5\n    |\n LL |     #[macro_escape] type T = S;\n    |     ^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:454:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:453:5\n    |\n LL |     #[macro_escape] impl S { }\n    |     ^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:458:1\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:457:1\n    |\n LL | #[no_std]\n    | ^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:458:1\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:457:1\n    |\n LL | #[no_std]\n    | ^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:462:17\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:461:17\n    |\n LL |     mod inner { #![no_std] }\n    |                 ^^^^^^^^^^\n \n warning: crate-level attribute should be in the root module\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:462:17\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:461:17\n    |\n LL |     mod inner { #![no_std] }\n    |                 ^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:466:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:465:5\n    |\n LL |     #[no_std] fn f() { }\n    |     ^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:466:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:465:5\n    |\n LL |     #[no_std] fn f() { }\n    |     ^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:470:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:469:5\n    |\n LL |     #[no_std] struct S;\n    |     ^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:470:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:469:5\n    |\n LL |     #[no_std] struct S;\n    |     ^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:474:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:473:5\n    |\n LL |     #[no_std] type T = S;\n    |     ^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:474:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:473:5\n    |\n LL |     #[no_std] type T = S;\n    |     ^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:478:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:477:5\n    |\n LL |     #[no_std] impl S { }\n    |     ^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:478:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:477:5\n    |\n LL |     #[no_std] impl S { }\n    |     ^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:659:1\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:658:1\n    |\n LL | #[crate_name = \"0900\"]\n    | ^^^^^^^^^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:659:1\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:658:1\n    |\n LL | #[crate_name = \"0900\"]\n    | ^^^^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:663:17\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:662:17\n    |\n LL |     mod inner { #![crate_name=\"0900\"] }\n    |                 ^^^^^^^^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be in the root module\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:663:17\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:662:17\n    |\n LL |     mod inner { #![crate_name=\"0900\"] }\n    |                 ^^^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:667:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:666:5\n    |\n LL |     #[crate_name = \"0900\"] fn f() { }\n    |     ^^^^^^^^^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:667:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:666:5\n    |\n LL |     #[crate_name = \"0900\"] fn f() { }\n    |     ^^^^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:671:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:670:5\n    |\n LL |     #[crate_name = \"0900\"] struct S;\n    |     ^^^^^^^^^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:671:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:670:5\n    |\n LL |     #[crate_name = \"0900\"] struct S;\n    |     ^^^^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:675:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:674:5\n    |\n LL |     #[crate_name = \"0900\"] type T = S;\n    |     ^^^^^^^^^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:675:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:674:5\n    |\n LL |     #[crate_name = \"0900\"] type T = S;\n    |     ^^^^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:679:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:678:5\n    |\n LL |     #[crate_name = \"0900\"] impl S { }\n    |     ^^^^^^^^^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:679:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:678:5\n    |\n LL |     #[crate_name = \"0900\"] impl S { }\n    |     ^^^^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:684:1\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:683:1\n    |\n LL | #[crate_type = \"0800\"]\n    | ^^^^^^^^^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:684:1\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:683:1\n    |\n LL | #[crate_type = \"0800\"]\n    | ^^^^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:688:17\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:687:17\n    |\n LL |     mod inner { #![crate_type=\"0800\"] }\n    |                 ^^^^^^^^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be in the root module\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:688:17\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:687:17\n    |\n LL |     mod inner { #![crate_type=\"0800\"] }\n    |                 ^^^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:692:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:691:5\n    |\n LL |     #[crate_type = \"0800\"] fn f() { }\n    |     ^^^^^^^^^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:692:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:691:5\n    |\n LL |     #[crate_type = \"0800\"] fn f() { }\n    |     ^^^^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:696:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:695:5\n    |\n LL |     #[crate_type = \"0800\"] struct S;\n    |     ^^^^^^^^^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:696:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:695:5\n    |\n LL |     #[crate_type = \"0800\"] struct S;\n    |     ^^^^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:700:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:699:5\n    |\n LL |     #[crate_type = \"0800\"] type T = S;\n    |     ^^^^^^^^^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:700:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:699:5\n    |\n LL |     #[crate_type = \"0800\"] type T = S;\n    |     ^^^^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:704:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:703:5\n    |\n LL |     #[crate_type = \"0800\"] impl S { }\n    |     ^^^^^^^^^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:704:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:703:5\n    |\n LL |     #[crate_type = \"0800\"] impl S { }\n    |     ^^^^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:709:1\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:708:1\n    |\n LL | #[feature(x0600)]\n    | ^^^^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:709:1\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:708:1\n    |\n LL | #[feature(x0600)]\n    | ^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:713:17\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:712:17\n    |\n LL |     mod inner { #![feature(x0600)] }\n    |                 ^^^^^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be in the root module\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:713:17\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:712:17\n    |\n LL |     mod inner { #![feature(x0600)] }\n    |                 ^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:717:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:716:5\n    |\n LL |     #[feature(x0600)] fn f() { }\n    |     ^^^^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:717:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:716:5\n    |\n LL |     #[feature(x0600)] fn f() { }\n    |     ^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:721:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:720:5\n    |\n LL |     #[feature(x0600)] struct S;\n    |     ^^^^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:721:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:720:5\n    |\n LL |     #[feature(x0600)] struct S;\n    |     ^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:725:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:724:5\n    |\n LL |     #[feature(x0600)] type T = S;\n    |     ^^^^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:725:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:724:5\n    |\n LL |     #[feature(x0600)] type T = S;\n    |     ^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:729:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:728:5\n    |\n LL |     #[feature(x0600)] impl S { }\n    |     ^^^^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:729:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:728:5\n    |\n LL |     #[feature(x0600)] impl S { }\n    |     ^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:735:1\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:734:1\n    |\n LL | #[no_main]\n    | ^^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:735:1\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:734:1\n    |\n LL | #[no_main]\n    | ^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:739:17\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:738:17\n    |\n LL |     mod inner { #![no_main] }\n    |                 ^^^^^^^^^^^\n \n warning: crate-level attribute should be in the root module\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:739:17\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:738:17\n    |\n LL |     mod inner { #![no_main] }\n    |                 ^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:743:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:742:5\n    |\n LL |     #[no_main] fn f() { }\n    |     ^^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:743:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:742:5\n    |\n LL |     #[no_main] fn f() { }\n    |     ^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:747:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:746:5\n    |\n LL |     #[no_main] struct S;\n    |     ^^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:747:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:746:5\n    |\n LL |     #[no_main] struct S;\n    |     ^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:751:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:750:5\n    |\n LL |     #[no_main] type T = S;\n    |     ^^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:751:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:750:5\n    |\n LL |     #[no_main] type T = S;\n    |     ^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:755:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:754:5\n    |\n LL |     #[no_main] impl S { }\n    |     ^^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:755:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:754:5\n    |\n LL |     #[no_main] impl S { }\n    |     ^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:773:1\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:772:1\n    |\n LL | #[recursion_limit=\"0200\"]\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:773:1\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:772:1\n    |\n LL | #[recursion_limit=\"0200\"]\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:777:17\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:776:17\n    |\n LL |     mod inner { #![recursion_limit=\"0200\"] }\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be in the root module\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:777:17\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:776:17\n    |\n LL |     mod inner { #![recursion_limit=\"0200\"] }\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:781:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:780:5\n    |\n LL |     #[recursion_limit=\"0200\"] fn f() { }\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:781:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:780:5\n    |\n LL |     #[recursion_limit=\"0200\"] fn f() { }\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:785:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:784:5\n    |\n LL |     #[recursion_limit=\"0200\"] struct S;\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:785:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:784:5\n    |\n LL |     #[recursion_limit=\"0200\"] struct S;\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:789:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:788:5\n    |\n LL |     #[recursion_limit=\"0200\"] type T = S;\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:789:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:788:5\n    |\n LL |     #[recursion_limit=\"0200\"] type T = S;\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:793:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:792:5\n    |\n LL |     #[recursion_limit=\"0200\"] impl S { }\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:793:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:792:5\n    |\n LL |     #[recursion_limit=\"0200\"] impl S { }\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:798:1\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:797:1\n    |\n LL | #[type_length_limit=\"0100\"]\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:798:1\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:797:1\n    |\n LL | #[type_length_limit=\"0100\"]\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:802:17\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:801:17\n    |\n LL |     mod inner { #![type_length_limit=\"0100\"] }\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be in the root module\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:802:17\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:801:17\n    |\n LL |     mod inner { #![type_length_limit=\"0100\"] }\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:806:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:805:5\n    |\n LL |     #[type_length_limit=\"0100\"] fn f() { }\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:806:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:805:5\n    |\n LL |     #[type_length_limit=\"0100\"] fn f() { }\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:810:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:809:5\n    |\n LL |     #[type_length_limit=\"0100\"] struct S;\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:810:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:809:5\n    |\n LL |     #[type_length_limit=\"0100\"] struct S;\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:814:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:813:5\n    |\n LL |     #[type_length_limit=\"0100\"] type T = S;\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:814:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:813:5\n    |\n LL |     #[type_length_limit=\"0100\"] type T = S;\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:818:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:817:5\n    |\n LL |     #[type_length_limit=\"0100\"] impl S { }\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:818:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:817:5\n    |\n LL |     #[type_length_limit=\"0100\"] impl S { }\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^"}, {"sha": "d3056fb8851257aced8142dcb3224fc6be1ab0d9", "filename": "src/test/ui/impl-trait/bound-normalization-fail.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fui%2Fimpl-trait%2Fbound-normalization-fail.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fui%2Fimpl-trait%2Fbound-normalization-fail.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimpl-trait%2Fbound-normalization-fail.rs?ref=3ea62cb5d19846b44172d861ae231c8c09322800", "patch": "@@ -1,4 +1,3 @@\n-// ignore-tidy-linelength\n // edition:2018\n \n #![feature(impl_trait_in_bindings)]"}, {"sha": "ba3a2e7f8d4c9445aff1b79fa3e2423dd1a3fad7", "filename": "src/test/ui/impl-trait/bound-normalization-fail.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fui%2Fimpl-trait%2Fbound-normalization-fail.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fui%2Fimpl-trait%2Fbound-normalization-fail.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimpl-trait%2Fbound-normalization-fail.stderr?ref=3ea62cb5d19846b44172d861ae231c8c09322800", "patch": "@@ -1,5 +1,5 @@\n warning: the feature `impl_trait_in_bindings` is incomplete and may not be safe to use and/or cause compiler crashes\n-  --> $DIR/bound-normalization-fail.rs:4:12\n+  --> $DIR/bound-normalization-fail.rs:3:12\n    |\n LL | #![feature(impl_trait_in_bindings)]\n    |            ^^^^^^^^^^^^^^^^^^^^^^\n@@ -8,7 +8,7 @@ LL | #![feature(impl_trait_in_bindings)]\n    = note: see issue #63065 <https://github.com/rust-lang/rust/issues/63065> for more information\n \n error[E0271]: type mismatch resolving `<Foo<()> as FooLike>::Output == <T as impl_trait::Trait>::Assoc`\n-  --> $DIR/bound-normalization-fail.rs:27:32\n+  --> $DIR/bound-normalization-fail.rs:26:32\n    |\n LL |     fn foo_fail<T: Trait>() -> impl FooLike<Output=T::Assoc> {\n    |                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected associated type, found `()`\n@@ -21,13 +21,13 @@ LL |     fn foo_fail<T: Trait<Assoc = ()>>() -> impl FooLike<Output=T::Assoc> {\n    |                         ^^^^^^^^^^^^\n \n error[E0760]: `impl Trait` return type cannot contain a projection or `Self` that references lifetimes from a parent scope\n-  --> $DIR/bound-normalization-fail.rs:43:41\n+  --> $DIR/bound-normalization-fail.rs:42:41\n    |\n LL |     fn foo2_fail<'a, T: Trait<'a>>() -> impl FooLike<Output=T::Assoc> {\n    |                                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error[E0271]: type mismatch resolving `<Foo<()> as FooLike>::Output == <T as lifetimes::Trait<'static>>::Assoc`\n-  --> $DIR/bound-normalization-fail.rs:43:41\n+  --> $DIR/bound-normalization-fail.rs:42:41\n    |\n LL |     fn foo2_fail<'a, T: Trait<'a>>() -> impl FooLike<Output=T::Assoc> {\n    |                                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected associated type, found `()`"}, {"sha": "286dd7aafb43fab0b79b6ba8405423a4c2da046d", "filename": "src/test/ui/impl-trait/issue-55872-1.full_tait.stderr", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fui%2Fimpl-trait%2Fissue-55872-1.full_tait.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fui%2Fimpl-trait%2Fissue-55872-1.full_tait.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimpl-trait%2Fissue-55872-1.full_tait.stderr?ref=3ea62cb5d19846b44172d861ae231c8c09322800", "patch": "@@ -1,5 +1,5 @@\n warning: the feature `type_alias_impl_trait` is incomplete and may not be safe to use and/or cause compiler crashes\n-  --> $DIR/issue-55872-1.rs:4:32\n+  --> $DIR/issue-55872-1.rs:3:32\n    |\n LL | #![cfg_attr(full_tait, feature(type_alias_impl_trait))]\n    |                                ^^^^^^^^^^^^^^^^^^^^^\n@@ -8,7 +8,7 @@ LL | #![cfg_attr(full_tait, feature(type_alias_impl_trait))]\n    = note: see issue #63063 <https://github.com/rust-lang/rust/issues/63063> for more information\n \n error[E0276]: impl has stricter requirements than trait\n-  --> $DIR/issue-55872-1.rs:18:5\n+  --> $DIR/issue-55872-1.rs:17:5\n    |\n LL |     fn foo<T>() -> Self::E;\n    |     ----------------------- definition of `foo` from trait\n@@ -17,7 +17,7 @@ LL |     fn foo<T: Default>() -> Self::E {\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ impl has extra requirement `T: Default`\n \n error[E0277]: the trait bound `S: Copy` is not satisfied in `(S, T)`\n-  --> $DIR/issue-55872-1.rs:14:14\n+  --> $DIR/issue-55872-1.rs:13:14\n    |\n LL |     type E = impl Copy;\n    |              ^^^^^^^^^ within `(S, T)`, the trait `Copy` is not implemented for `S`\n@@ -29,7 +29,7 @@ LL | impl<S: Default + std::marker::Copy> Bar for S {\n    |                 ^^^^^^^^^^^^^^^^^^^\n \n error[E0277]: the trait bound `T: Copy` is not satisfied in `(S, T)`\n-  --> $DIR/issue-55872-1.rs:14:14\n+  --> $DIR/issue-55872-1.rs:13:14\n    |\n LL |     type E = impl Copy;\n    |              ^^^^^^^^^ within `(S, T)`, the trait `Copy` is not implemented for `T`\n@@ -41,7 +41,7 @@ LL |     fn foo<T: Default + std::marker::Copy>() -> Self::E {\n    |                       ^^^^^^^^^^^^^^^^^^^\n \n error: type parameter `T` is part of concrete type but not used in parameter list for the `impl Trait` type alias\n-  --> $DIR/issue-55872-1.rs:18:37\n+  --> $DIR/issue-55872-1.rs:17:37\n    |\n LL |       fn foo<T: Default>() -> Self::E {\n    |  _____________________________________^"}, {"sha": "653299f4cbcee86549ba5ebd5819e9bd283662ca", "filename": "src/test/ui/impl-trait/issue-55872-1.min_tait.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fui%2Fimpl-trait%2Fissue-55872-1.min_tait.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fui%2Fimpl-trait%2Fissue-55872-1.min_tait.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimpl-trait%2Fissue-55872-1.min_tait.stderr?ref=3ea62cb5d19846b44172d861ae231c8c09322800", "patch": "@@ -1,5 +1,5 @@\n error[E0276]: impl has stricter requirements than trait\n-  --> $DIR/issue-55872-1.rs:18:5\n+  --> $DIR/issue-55872-1.rs:17:5\n    |\n LL |     fn foo<T>() -> Self::E;\n    |     ----------------------- definition of `foo` from trait\n@@ -8,7 +8,7 @@ LL |     fn foo<T: Default>() -> Self::E {\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ impl has extra requirement `T: Default`\n \n error[E0277]: the trait bound `S: Copy` is not satisfied in `(S, T)`\n-  --> $DIR/issue-55872-1.rs:14:14\n+  --> $DIR/issue-55872-1.rs:13:14\n    |\n LL |     type E = impl Copy;\n    |              ^^^^^^^^^ within `(S, T)`, the trait `Copy` is not implemented for `S`\n@@ -20,7 +20,7 @@ LL | impl<S: Default + std::marker::Copy> Bar for S {\n    |                 ^^^^^^^^^^^^^^^^^^^\n \n error[E0277]: the trait bound `T: Copy` is not satisfied in `(S, T)`\n-  --> $DIR/issue-55872-1.rs:14:14\n+  --> $DIR/issue-55872-1.rs:13:14\n    |\n LL |     type E = impl Copy;\n    |              ^^^^^^^^^ within `(S, T)`, the trait `Copy` is not implemented for `T`\n@@ -32,7 +32,7 @@ LL |     fn foo<T: Default + std::marker::Copy>() -> Self::E {\n    |                       ^^^^^^^^^^^^^^^^^^^\n \n error: type parameter `T` is part of concrete type but not used in parameter list for the `impl Trait` type alias\n-  --> $DIR/issue-55872-1.rs:18:37\n+  --> $DIR/issue-55872-1.rs:17:37\n    |\n LL |       fn foo<T: Default>() -> Self::E {\n    |  _____________________________________^"}, {"sha": "a9e9c9b5bebebe50103cb6fb315a8a186d86a374", "filename": "src/test/ui/impl-trait/issue-55872-1.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fui%2Fimpl-trait%2Fissue-55872-1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fui%2Fimpl-trait%2Fissue-55872-1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimpl-trait%2Fissue-55872-1.rs?ref=3ea62cb5d19846b44172d861ae231c8c09322800", "patch": "@@ -1,4 +1,3 @@\n-// ignore-tidy-linelength\n // revisions: min_tait full_tait\n #![feature(min_type_alias_impl_trait)]\n #![cfg_attr(full_tait, feature(type_alias_impl_trait))]"}, {"sha": "a8fc681a093d50911b988203dec3c93ddf24d86b", "filename": "src/test/ui/impl-trait/issue-55872-2.full_tait.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fui%2Fimpl-trait%2Fissue-55872-2.full_tait.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fui%2Fimpl-trait%2Fissue-55872-2.full_tait.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimpl-trait%2Fissue-55872-2.full_tait.stderr?ref=3ea62cb5d19846b44172d861ae231c8c09322800", "patch": "@@ -1,5 +1,5 @@\n warning: the feature `type_alias_impl_trait` is incomplete and may not be safe to use and/or cause compiler crashes\n-  --> $DIR/issue-55872-2.rs:7:32\n+  --> $DIR/issue-55872-2.rs:6:32\n    |\n LL | #![cfg_attr(full_tait, feature(type_alias_impl_trait))]\n    |                                ^^^^^^^^^^^^^^^^^^^^^\n@@ -8,13 +8,13 @@ LL | #![cfg_attr(full_tait, feature(type_alias_impl_trait))]\n    = note: see issue #63063 <https://github.com/rust-lang/rust/issues/63063> for more information\n \n error[E0277]: the trait bound `impl Future: Copy` is not satisfied\n-  --> $DIR/issue-55872-2.rs:17:14\n+  --> $DIR/issue-55872-2.rs:16:14\n    |\n LL |     type E = impl std::marker::Copy;\n    |              ^^^^^^^^^^^^^^^^^^^^^^ the trait `Copy` is not implemented for `impl Future`\n \n error: type parameter `T` is part of concrete type but not used in parameter list for the `impl Trait` type alias\n-  --> $DIR/issue-55872-2.rs:19:28\n+  --> $DIR/issue-55872-2.rs:18:28\n    |\n LL |       fn foo<T>() -> Self::E {\n    |  ____________________________^"}, {"sha": "57f81443dccdf1189921c71ad459dcb884a95325", "filename": "src/test/ui/impl-trait/issue-55872-2.min_tait.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fui%2Fimpl-trait%2Fissue-55872-2.min_tait.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fui%2Fimpl-trait%2Fissue-55872-2.min_tait.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimpl-trait%2Fissue-55872-2.min_tait.stderr?ref=3ea62cb5d19846b44172d861ae231c8c09322800", "patch": "@@ -1,11 +1,11 @@\n error[E0277]: the trait bound `impl Future: Copy` is not satisfied\n-  --> $DIR/issue-55872-2.rs:17:14\n+  --> $DIR/issue-55872-2.rs:16:14\n    |\n LL |     type E = impl std::marker::Copy;\n    |              ^^^^^^^^^^^^^^^^^^^^^^ the trait `Copy` is not implemented for `impl Future`\n \n error: type parameter `T` is part of concrete type but not used in parameter list for the `impl Trait` type alias\n-  --> $DIR/issue-55872-2.rs:19:28\n+  --> $DIR/issue-55872-2.rs:18:28\n    |\n LL |       fn foo<T>() -> Self::E {\n    |  ____________________________^"}, {"sha": "cd72b2eec3cf94c4d6d1e48080c178278956aa4e", "filename": "src/test/ui/impl-trait/issue-55872-2.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fui%2Fimpl-trait%2Fissue-55872-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fui%2Fimpl-trait%2Fissue-55872-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimpl-trait%2Fissue-55872-2.rs?ref=3ea62cb5d19846b44172d861ae231c8c09322800", "patch": "@@ -1,5 +1,4 @@\n // edition:2018\n-// ignore-tidy-linelength\n // ignore-compare-mode-chalk\n \n // revisions: min_tait full_tait"}, {"sha": "e549fec1c229e5982cf81536bf1cfe98f3f72ffa", "filename": "src/test/ui/impl-trait/issue-55872.full_tait.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fui%2Fimpl-trait%2Fissue-55872.full_tait.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fui%2Fimpl-trait%2Fissue-55872.full_tait.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimpl-trait%2Fissue-55872.full_tait.stderr?ref=3ea62cb5d19846b44172d861ae231c8c09322800", "patch": "@@ -1,5 +1,5 @@\n warning: the feature `type_alias_impl_trait` is incomplete and may not be safe to use and/or cause compiler crashes\n-  --> $DIR/issue-55872.rs:5:32\n+  --> $DIR/issue-55872.rs:4:32\n    |\n LL | #![cfg_attr(full_tait, feature(type_alias_impl_trait))]\n    |                                ^^^^^^^^^^^^^^^^^^^^^\n@@ -8,7 +8,7 @@ LL | #![cfg_attr(full_tait, feature(type_alias_impl_trait))]\n    = note: see issue #63063 <https://github.com/rust-lang/rust/issues/63063> for more information\n \n error: type parameter `T` is part of concrete type but not used in parameter list for the `impl Trait` type alias\n-  --> $DIR/issue-55872.rs:17:28\n+  --> $DIR/issue-55872.rs:16:28\n    |\n LL |       fn foo<T>() -> Self::E {\n    |  ____________________________^"}, {"sha": "341dba95cad85d72bce616039e3361558346a4da", "filename": "src/test/ui/impl-trait/issue-55872.min_tait.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fui%2Fimpl-trait%2Fissue-55872.min_tait.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fui%2Fimpl-trait%2Fissue-55872.min_tait.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimpl-trait%2Fissue-55872.min_tait.stderr?ref=3ea62cb5d19846b44172d861ae231c8c09322800", "patch": "@@ -1,5 +1,5 @@\n error: type parameter `T` is part of concrete type but not used in parameter list for the `impl Trait` type alias\n-  --> $DIR/issue-55872.rs:17:28\n+  --> $DIR/issue-55872.rs:16:28\n    |\n LL |       fn foo<T>() -> Self::E {\n    |  ____________________________^"}, {"sha": "e3fc523feccb9787b81e8a5dd82418d849d65049", "filename": "src/test/ui/impl-trait/issue-55872.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fui%2Fimpl-trait%2Fissue-55872.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fui%2Fimpl-trait%2Fissue-55872.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimpl-trait%2Fissue-55872.rs?ref=3ea62cb5d19846b44172d861ae231c8c09322800", "patch": "@@ -1,4 +1,3 @@\n-// ignore-tidy-linelength\n // ignore-compare-mode-chalk\n // revisions: min_tait full_tait\n #![feature(min_type_alias_impl_trait)]"}, {"sha": "feb1ab09dc9e212fdbacbddd51a3dbd096e48dfb", "filename": "src/test/ui/imports/extern-prelude-extern-crate-fail.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fui%2Fimports%2Fextern-prelude-extern-crate-fail.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fui%2Fimports%2Fextern-prelude-extern-crate-fail.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimports%2Fextern-prelude-extern-crate-fail.rs?ref=3ea62cb5d19846b44172d861ae231c8c09322800", "patch": "@@ -1,5 +1,3 @@\n-// ignore-tidy-linelength\n-\n // aux-build:two_macros.rs\n // compile-flags:--extern non_existent\n "}, {"sha": "011ea02050820c1938543003816caec73f69410e", "filename": "src/test/ui/imports/extern-prelude-extern-crate-fail.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fui%2Fimports%2Fextern-prelude-extern-crate-fail.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fui%2Fimports%2Fextern-prelude-extern-crate-fail.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimports%2Fextern-prelude-extern-crate-fail.stderr?ref=3ea62cb5d19846b44172d861ae231c8c09322800", "patch": "@@ -1,5 +1,5 @@\n error: macro-expanded `extern crate` items cannot shadow names passed with `--extern`\n-  --> $DIR/extern-prelude-extern-crate-fail.rs:18:9\n+  --> $DIR/extern-prelude-extern-crate-fail.rs:16:9\n    |\n LL |         extern crate std as non_existent;\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -10,7 +10,7 @@ LL | define_std_as_non_existent!();\n    = note: this error originates in a macro (in Nightly builds, run with -Z macro-backtrace for more info)\n \n error[E0433]: failed to resolve: use of undeclared crate or module `two_macros`\n-  --> $DIR/extern-prelude-extern-crate-fail.rs:12:9\n+  --> $DIR/extern-prelude-extern-crate-fail.rs:10:9\n    |\n LL |         two_macros::m!();\n    |         ^^^^^^^^^^ use of undeclared crate or module `two_macros`"}, {"sha": "ccfaf23b4b9ff3948009b6a28b4a64123c3af49c", "filename": "src/test/ui/issues/issue-3214.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fui%2Fissues%2Fissue-3214.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fui%2Fissues%2Fissue-3214.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-3214.rs?ref=3ea62cb5d19846b44172d861ae231c8c09322800", "patch": "@@ -1,5 +1,3 @@\n-// ignore-tidy-linelength\n-\n fn foo<T>() {\n     struct Foo {\n         x: T, //~ ERROR can't use generic parameters from outer function"}, {"sha": "0da095b7fdab8b84da8bcad382a1b5a8463364ed", "filename": "src/test/ui/issues/issue-3214.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fui%2Fissues%2Fissue-3214.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fui%2Fissues%2Fissue-3214.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-3214.stderr?ref=3ea62cb5d19846b44172d861ae231c8c09322800", "patch": "@@ -1,5 +1,5 @@\n error[E0401]: can't use generic parameters from outer function\n-  --> $DIR/issue-3214.rs:5:12\n+  --> $DIR/issue-3214.rs:3:12\n    |\n LL | fn foo<T>() {\n    |    --- - type parameter from outer function\n@@ -10,21 +10,21 @@ LL |         x: T,\n    |            ^ use of generic parameter from outer function\n \n error[E0107]: this struct takes 0 type arguments but 1 type argument was supplied\n-  --> $DIR/issue-3214.rs:8:22\n+  --> $DIR/issue-3214.rs:6:22\n    |\n LL |     impl<T> Drop for Foo<T> {\n    |                      ^^^--- help: remove these generics\n    |                      |\n    |                      expected 0 type arguments\n    |\n note: struct defined here, with 0 type parameters\n-  --> $DIR/issue-3214.rs:4:12\n+  --> $DIR/issue-3214.rs:2:12\n    |\n LL |     struct Foo {\n    |            ^^^\n \n error[E0207]: the type parameter `T` is not constrained by the impl trait, self type, or predicates\n-  --> $DIR/issue-3214.rs:8:10\n+  --> $DIR/issue-3214.rs:6:10\n    |\n LL |     impl<T> Drop for Foo<T> {\n    |          ^ unconstrained type parameter"}, {"sha": "8d2bf22a03c9abe416a121b7d6b8b307b848c2bf", "filename": "src/test/ui/issues/issue-45157.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fui%2Fissues%2Fissue-45157.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fui%2Fissues%2Fissue-45157.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-45157.rs?ref=3ea62cb5d19846b44172d861ae231c8c09322800", "patch": "@@ -1,6 +1,5 @@\n #![allow(unused)]\n \n-// ignore-tidy-linelength\n \n #[derive(Clone, Copy, Default)]\n struct S {"}, {"sha": "57fd8d49c887ca9c02ca0f6bd5baeadc0fb22829", "filename": "src/test/ui/issues/issue-45157.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fui%2Fissues%2Fissue-45157.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fui%2Fissues%2Fissue-45157.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-45157.stderr?ref=3ea62cb5d19846b44172d861ae231c8c09322800", "patch": "@@ -1,5 +1,5 @@\n error[E0502]: cannot borrow `u` (via `u.z.c`) as immutable because it is also borrowed as mutable (via `u.s.a`)\n-  --> $DIR/issue-45157.rs:28:20\n+  --> $DIR/issue-45157.rs:27:20\n    |\n LL |         let mref = &mut u.s.a;\n    |                    ---------- mutable borrow occurs here (via `u.s.a`)"}, {"sha": "9ec55be58723c68f0f1a5455c758f98276c3ada5", "filename": "src/test/ui/issues/issue-47725.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fui%2Fissues%2Fissue-47725.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fui%2Fissues%2Fissue-47725.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-47725.rs?ref=3ea62cb5d19846b44172d861ae231c8c09322800", "patch": "@@ -1,4 +1,3 @@\n-// ignore-tidy-linelength\n #![warn(unused_attributes)] //~ NOTE lint level is defined here\n \n #[link_name = \"foo\"]"}, {"sha": "c7a9bfe317f008d3f360d0496eccde6078bb7bd3", "filename": "src/test/ui/issues/issue-47725.stderr", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fui%2Fissues%2Fissue-47725.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fui%2Fissues%2Fissue-47725.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-47725.stderr?ref=3ea62cb5d19846b44172d861ae231c8c09322800", "patch": "@@ -1,11 +1,11 @@\n error: malformed `link_name` attribute input\n-  --> $DIR/issue-47725.rs:18:1\n+  --> $DIR/issue-47725.rs:17:1\n    |\n LL | #[link_name]\n    | ^^^^^^^^^^^^ help: must be of the form: `#[link_name = \"name\"]`\n \n warning: attribute should be applied to a foreign function or static\n-  --> $DIR/issue-47725.rs:4:1\n+  --> $DIR/issue-47725.rs:3:1\n    |\n LL | #[link_name = \"foo\"]\n    | ^^^^^^^^^^^^^^^^^^^^\n@@ -14,14 +14,14 @@ LL | struct Foo;\n    | ----------- not a foreign function or static\n    |\n note: the lint level is defined here\n-  --> $DIR/issue-47725.rs:2:9\n+  --> $DIR/issue-47725.rs:1:9\n    |\n LL | #![warn(unused_attributes)]\n    |         ^^^^^^^^^^^^^^^^^\n    = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n \n warning: attribute should be applied to a foreign function or static\n-  --> $DIR/issue-47725.rs:9:1\n+  --> $DIR/issue-47725.rs:8:1\n    |\n LL |   #[link_name = \"foobar\"]\n    |   ^^^^^^^^^^^^^^^^^^^^^^^\n@@ -33,13 +33,13 @@ LL | | }\n    |\n    = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n help: try `#[link(name = \"foobar\")]` instead\n-  --> $DIR/issue-47725.rs:9:1\n+  --> $DIR/issue-47725.rs:8:1\n    |\n LL | #[link_name = \"foobar\"]\n    | ^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: attribute should be applied to a foreign function or static\n-  --> $DIR/issue-47725.rs:18:1\n+  --> $DIR/issue-47725.rs:17:1\n    |\n LL |   #[link_name]\n    |   ^^^^^^^^^^^^\n@@ -51,7 +51,7 @@ LL | | }\n    |\n    = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n help: try `#[link(name = \"...\")]` instead\n-  --> $DIR/issue-47725.rs:18:1\n+  --> $DIR/issue-47725.rs:17:1\n    |\n LL | #[link_name]\n    | ^^^^^^^^^^^^"}, {"sha": "937271d42f4bd1f906a7aae63b7345cae1302374", "filename": "src/test/ui/issues/issue-53251.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fui%2Fissues%2Fissue-53251.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fui%2Fissues%2Fissue-53251.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-53251.rs?ref=3ea62cb5d19846b44172d861ae231c8c09322800", "patch": "@@ -1,5 +1,3 @@\n-// ignore-tidy-linelength\n-\n struct S;\n \n impl S {"}, {"sha": "1676c508a4dccfe304739c11447b918c7e637e89", "filename": "src/test/ui/issues/issue-53251.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fui%2Fissues%2Fissue-53251.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fui%2Fissues%2Fissue-53251.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-53251.stderr?ref=3ea62cb5d19846b44172d861ae231c8c09322800", "patch": "@@ -1,5 +1,5 @@\n error[E0107]: this associated function takes 0 type arguments but 1 type argument was supplied\n-  --> $DIR/issue-53251.rs:13:20\n+  --> $DIR/issue-53251.rs:11:20\n    |\n LL |                 S::f::<i64>();\n    |                    ^------- help: remove these generics\n@@ -10,14 +10,14 @@ LL | impl_add!(a b);\n    | --------------- in this macro invocation\n    |\n note: associated function defined here, with 0 type parameters\n-  --> $DIR/issue-53251.rs:6:8\n+  --> $DIR/issue-53251.rs:4:8\n    |\n LL |     fn f() {}\n    |        ^\n    = note: this error originates in a macro (in Nightly builds, run with -Z macro-backtrace for more info)\n \n error[E0107]: this associated function takes 0 type arguments but 1 type argument was supplied\n-  --> $DIR/issue-53251.rs:13:20\n+  --> $DIR/issue-53251.rs:11:20\n    |\n LL |                 S::f::<i64>();\n    |                    ^------- help: remove these generics\n@@ -28,7 +28,7 @@ LL | impl_add!(a b);\n    | --------------- in this macro invocation\n    |\n note: associated function defined here, with 0 type parameters\n-  --> $DIR/issue-53251.rs:6:8\n+  --> $DIR/issue-53251.rs:4:8\n    |\n LL |     fn f() {}\n    |        ^"}, {"sha": "809ea7a87dbeacd94683ff465dee896456e7bb86", "filename": "src/test/ui/issues/issue-54044.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fui%2Fissues%2Fissue-54044.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fui%2Fissues%2Fissue-54044.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-54044.rs?ref=3ea62cb5d19846b44172d861ae231c8c09322800", "patch": "@@ -1,4 +1,3 @@\n-// ignore-tidy-linelength\n #![deny(unused_attributes)] //~ NOTE lint level is defined here\n \n #[cold]"}, {"sha": "0200a6a629d8f2ad3f297057ccd897e655860909", "filename": "src/test/ui/issues/issue-54044.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fui%2Fissues%2Fissue-54044.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fui%2Fissues%2Fissue-54044.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-54044.stderr?ref=3ea62cb5d19846b44172d861ae231c8c09322800", "patch": "@@ -1,5 +1,5 @@\n error: attribute should be applied to a function\n-  --> $DIR/issue-54044.rs:4:1\n+  --> $DIR/issue-54044.rs:3:1\n    |\n LL | #[cold]\n    | ^^^^^^^\n@@ -8,14 +8,14 @@ LL | struct Foo;\n    | ----------- not a function\n    |\n note: the lint level is defined here\n-  --> $DIR/issue-54044.rs:2:9\n+  --> $DIR/issue-54044.rs:1:9\n    |\n LL | #![deny(unused_attributes)]\n    |         ^^^^^^^^^^^^^^^^^\n    = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n \n error: attribute should be applied to a function\n-  --> $DIR/issue-54044.rs:10:5\n+  --> $DIR/issue-54044.rs:9:5\n    |\n LL |     #[cold]\n    |     ^^^^^^^"}, {"sha": "1018c88ae55e36e060d3566eea94cd1fc35c608b", "filename": "src/test/ui/issues/issue-60622.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fui%2Fissues%2Fissue-60622.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fui%2Fissues%2Fissue-60622.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-60622.rs?ref=3ea62cb5d19846b44172d861ae231c8c09322800", "patch": "@@ -1,5 +1,3 @@\n-// ignore-tidy-linelength\n-\n #![deny(warnings)]\n \n struct Borked {}"}, {"sha": "f970a63e4b2fe49e470f248040571c34f42b1f9d", "filename": "src/test/ui/issues/issue-60622.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fui%2Fissues%2Fissue-60622.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fui%2Fissues%2Fissue-60622.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-60622.stderr?ref=3ea62cb5d19846b44172d861ae231c8c09322800", "patch": "@@ -1,5 +1,5 @@\n error: cannot specify lifetime arguments explicitly if late bound lifetime parameters are present\n-  --> $DIR/issue-60622.rs:12:11\n+  --> $DIR/issue-60622.rs:10:11\n    |\n LL |     fn a(&self) {}\n    |          - the late bound lifetime parameter is introduced here\n@@ -8,7 +8,7 @@ LL |     b.a::<'_, T>();\n    |           ^^\n    |\n note: the lint level is defined here\n-  --> $DIR/issue-60622.rs:3:9\n+  --> $DIR/issue-60622.rs:1:9\n    |\n LL | #![deny(warnings)]\n    |         ^^^^^^^^\n@@ -17,15 +17,15 @@ LL | #![deny(warnings)]\n    = note: for more information, see issue #42868 <https://github.com/rust-lang/rust/issues/42868>\n \n error[E0107]: this associated function takes 0 type arguments but 1 type argument was supplied\n-  --> $DIR/issue-60622.rs:12:7\n+  --> $DIR/issue-60622.rs:10:7\n    |\n LL |     b.a::<'_, T>();\n    |       ^     --- help: remove this type argument\n    |       |\n    |       expected 0 type arguments\n    |\n note: associated function defined here, with 0 type parameters\n-  --> $DIR/issue-60622.rs:8:8\n+  --> $DIR/issue-60622.rs:6:8\n    |\n LL |     fn a(&self) {}\n    |        ^"}, {"sha": "8cf6a3137e2d6303fc216faf3b17b724bc0a8452", "filename": "src/test/ui/issues/issue-82833-slice-miscompile.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fui%2Fissues%2Fissue-82833-slice-miscompile.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fui%2Fissues%2Fissue-82833-slice-miscompile.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-82833-slice-miscompile.rs?ref=3ea62cb5d19846b44172d861ae231c8c09322800", "patch": "@@ -1,6 +1,5 @@\n // run-pass\n // compile-flags: -Ccodegen-units=1 -Cinline-threshold=0 -Clink-dead-code -Copt-level=0 -Cdebuginfo=2\n-// ignore-tidy-linelength\n \n // Make sure LLVM does not miscompile this.\n "}, {"sha": "b045b050d77a42809d017b158497c6bd4532d46d", "filename": "src/test/ui/kinds-of-primitive-impl.rs", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fui%2Fkinds-of-primitive-impl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fui%2Fkinds-of-primitive-impl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fkinds-of-primitive-impl.rs?ref=3ea62cb5d19846b44172d861ae231c8c09322800", "patch": "@@ -1,6 +1,3 @@\n-// ignore-tidy-linelength\n-\n-\n impl u8 {\n //~^ error: only a single inherent implementation marked with `#[lang = \"u8\"]` is allowed for the `u8` primitive\n     pub const B: u8 = 0;"}, {"sha": "f1fb2953083524d7bcc8c3d310fcd823253846e7", "filename": "src/test/ui/kinds-of-primitive-impl.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fui%2Fkinds-of-primitive-impl.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fui%2Fkinds-of-primitive-impl.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fkinds-of-primitive-impl.stderr?ref=3ea62cb5d19846b44172d861ae231c8c09322800", "patch": "@@ -1,5 +1,5 @@\n error[E0390]: only a single inherent implementation marked with `#[lang = \"u8\"]` is allowed for the `u8` primitive\n-  --> $DIR/kinds-of-primitive-impl.rs:4:1\n+  --> $DIR/kinds-of-primitive-impl.rs:1:1\n    |\n LL | / impl u8 {\n LL | |\n@@ -10,7 +10,7 @@ LL | | }\n    = help: consider using a trait to implement this constant\n \n error[E0390]: only a single inherent implementation marked with `#[lang = \"str\"]` is allowed for the `str` primitive\n-  --> $DIR/kinds-of-primitive-impl.rs:9:1\n+  --> $DIR/kinds-of-primitive-impl.rs:6:1\n    |\n LL | / impl str {\n LL | |\n@@ -22,7 +22,7 @@ LL | | }\n    = help: consider using a trait to implement these methods\n \n error[E0390]: only a single inherent implementation marked with `#[lang = \"char\"]` is allowed for the `char` primitive\n-  --> $DIR/kinds-of-primitive-impl.rs:15:1\n+  --> $DIR/kinds-of-primitive-impl.rs:12:1\n    |\n LL | / impl char {\n LL | |"}, {"sha": "5bdddf714186c2140aebdc5525e3c702ecef4046", "filename": "src/test/ui/lint/lint-stability-deprecated.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fui%2Flint%2Flint-stability-deprecated.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fui%2Flint%2Flint-stability-deprecated.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Flint-stability-deprecated.rs?ref=3ea62cb5d19846b44172d861ae231c8c09322800", "patch": "@@ -3,7 +3,6 @@\n // aux-build:inherited_stability.rs\n // aux-build:stability_cfg1.rs\n // aux-build:stability-cfg2.rs\n-// ignore-tidy-linelength\n #![warn(deprecated)]\n #![feature(staged_api, unstable_test_feature)]\n "}, {"sha": "47dc8e4a63c07dfeb3151e5722ea37b3be97bbba", "filename": "src/test/ui/lint/lint-stability-deprecated.stderr", "status": "modified", "additions": 109, "deletions": 109, "changes": 218, "blob_url": "https://github.com/rust-lang/rust/blob/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fui%2Flint%2Flint-stability-deprecated.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fui%2Flint%2Flint-stability-deprecated.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Flint-stability-deprecated.stderr?ref=3ea62cb5d19846b44172d861ae231c8c09322800", "patch": "@@ -1,653 +1,653 @@\n warning: use of deprecated function `lint_stability::deprecated`: text\n-  --> $DIR/lint-stability-deprecated.rs:25:9\n+  --> $DIR/lint-stability-deprecated.rs:24:9\n    |\n LL |         deprecated();\n    |         ^^^^^^^^^^\n    |\n note: the lint level is defined here\n-  --> $DIR/lint-stability-deprecated.rs:7:9\n+  --> $DIR/lint-stability-deprecated.rs:6:9\n    |\n LL | #![warn(deprecated)]\n    |         ^^^^^^^^^^\n \n warning: use of deprecated associated function `lint_stability::Trait::trait_deprecated`: text\n-  --> $DIR/lint-stability-deprecated.rs:30:9\n+  --> $DIR/lint-stability-deprecated.rs:29:9\n    |\n LL |         Trait::trait_deprecated(&foo);\n    |         ^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: use of deprecated associated function `lint_stability::Trait::trait_deprecated`: text\n-  --> $DIR/lint-stability-deprecated.rs:32:9\n+  --> $DIR/lint-stability-deprecated.rs:31:9\n    |\n LL |         <Foo as Trait>::trait_deprecated(&foo);\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: use of deprecated function `lint_stability::deprecated_text`: text\n-  --> $DIR/lint-stability-deprecated.rs:34:9\n+  --> $DIR/lint-stability-deprecated.rs:33:9\n    |\n LL |         deprecated_text();\n    |         ^^^^^^^^^^^^^^^\n \n warning: use of deprecated associated function `lint_stability::Trait::trait_deprecated_text`: text\n-  --> $DIR/lint-stability-deprecated.rs:39:9\n+  --> $DIR/lint-stability-deprecated.rs:38:9\n    |\n LL | ...   Trait::trait_deprecated_text(&foo);\n    |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: use of deprecated associated function `lint_stability::Trait::trait_deprecated_text`: text\n-  --> $DIR/lint-stability-deprecated.rs:41:9\n+  --> $DIR/lint-stability-deprecated.rs:40:9\n    |\n LL | ...   <Foo as Trait>::trait_deprecated_text(&foo);\n    |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: use of deprecated function `lint_stability::deprecated_unstable`: text\n-  --> $DIR/lint-stability-deprecated.rs:43:9\n+  --> $DIR/lint-stability-deprecated.rs:42:9\n    |\n LL |         deprecated_unstable();\n    |         ^^^^^^^^^^^^^^^^^^^\n \n warning: use of deprecated associated function `lint_stability::Trait::trait_deprecated_unstable`: text\n-  --> $DIR/lint-stability-deprecated.rs:48:9\n+  --> $DIR/lint-stability-deprecated.rs:47:9\n    |\n LL | ...   Trait::trait_deprecated_unstable(&foo);\n    |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: use of deprecated associated function `lint_stability::Trait::trait_deprecated_unstable`: text\n-  --> $DIR/lint-stability-deprecated.rs:50:9\n+  --> $DIR/lint-stability-deprecated.rs:49:9\n    |\n LL | ...   <Foo as Trait>::trait_deprecated_unstable(&foo);\n    |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: use of deprecated function `lint_stability::deprecated_unstable_text`: text\n-  --> $DIR/lint-stability-deprecated.rs:52:9\n+  --> $DIR/lint-stability-deprecated.rs:51:9\n    |\n LL |         deprecated_unstable_text();\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: use of deprecated associated function `lint_stability::Trait::trait_deprecated_unstable_text`: text\n-  --> $DIR/lint-stability-deprecated.rs:57:9\n+  --> $DIR/lint-stability-deprecated.rs:56:9\n    |\n LL | ...   Trait::trait_deprecated_unstable_text(&foo);\n    |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: use of deprecated associated function `lint_stability::Trait::trait_deprecated_unstable_text`: text\n-  --> $DIR/lint-stability-deprecated.rs:59:9\n+  --> $DIR/lint-stability-deprecated.rs:58:9\n    |\n LL | ...   <Foo as Trait>::trait_deprecated_unstable_text(&foo);\n    |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: use of deprecated struct `lint_stability::DeprecatedStruct`: text\n-  --> $DIR/lint-stability-deprecated.rs:109:17\n+  --> $DIR/lint-stability-deprecated.rs:108:17\n    |\n LL |         let _ = DeprecatedStruct {\n    |                 ^^^^^^^^^^^^^^^^\n \n warning: use of deprecated struct `lint_stability::DeprecatedUnstableStruct`: text\n-  --> $DIR/lint-stability-deprecated.rs:112:17\n+  --> $DIR/lint-stability-deprecated.rs:111:17\n    |\n LL |         let _ = DeprecatedUnstableStruct {\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: use of deprecated struct `lint_stability::DeprecatedUnitStruct`: text\n-  --> $DIR/lint-stability-deprecated.rs:119:17\n+  --> $DIR/lint-stability-deprecated.rs:118:17\n    |\n LL |         let _ = DeprecatedUnitStruct;\n    |                 ^^^^^^^^^^^^^^^^^^^^\n \n warning: use of deprecated struct `lint_stability::DeprecatedUnstableUnitStruct`: text\n-  --> $DIR/lint-stability-deprecated.rs:120:17\n+  --> $DIR/lint-stability-deprecated.rs:119:17\n    |\n LL |         let _ = DeprecatedUnstableUnitStruct;\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: use of deprecated variant `lint_stability::Enum::DeprecatedVariant`: text\n-  --> $DIR/lint-stability-deprecated.rs:124:17\n+  --> $DIR/lint-stability-deprecated.rs:123:17\n    |\n LL |         let _ = Enum::DeprecatedVariant;\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: use of deprecated variant `lint_stability::Enum::DeprecatedUnstableVariant`: text\n-  --> $DIR/lint-stability-deprecated.rs:125:17\n+  --> $DIR/lint-stability-deprecated.rs:124:17\n    |\n LL |         let _ = Enum::DeprecatedUnstableVariant;\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: use of deprecated struct `lint_stability::DeprecatedTupleStruct`: text\n-  --> $DIR/lint-stability-deprecated.rs:129:17\n+  --> $DIR/lint-stability-deprecated.rs:128:17\n    |\n LL |         let _ = DeprecatedTupleStruct (1);\n    |                 ^^^^^^^^^^^^^^^^^^^^^\n \n warning: use of deprecated struct `lint_stability::DeprecatedUnstableTupleStruct`: text\n-  --> $DIR/lint-stability-deprecated.rs:130:17\n+  --> $DIR/lint-stability-deprecated.rs:129:17\n    |\n LL |         let _ = DeprecatedUnstableTupleStruct (1);\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: use of deprecated function `lint_stability::deprecated_text`: text\n-  --> $DIR/lint-stability-deprecated.rs:139:25\n+  --> $DIR/lint-stability-deprecated.rs:138:25\n    |\n LL |         macro_test_arg!(deprecated_text());\n    |                         ^^^^^^^^^^^^^^^\n \n warning: use of deprecated function `lint_stability::deprecated_unstable_text`: text\n-  --> $DIR/lint-stability-deprecated.rs:140:25\n+  --> $DIR/lint-stability-deprecated.rs:139:25\n    |\n LL |         macro_test_arg!(deprecated_unstable_text());\n    |                         ^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: use of deprecated function `lint_stability::deprecated_text`: text\n-  --> $DIR/lint-stability-deprecated.rs:141:41\n+  --> $DIR/lint-stability-deprecated.rs:140:41\n    |\n LL |         macro_test_arg!(macro_test_arg!(deprecated_text()));\n    |                                         ^^^^^^^^^^^^^^^\n \n warning: use of deprecated associated function `lint_stability::Trait::trait_deprecated`: text\n-  --> $DIR/lint-stability-deprecated.rs:146:9\n+  --> $DIR/lint-stability-deprecated.rs:145:9\n    |\n LL |         Trait::trait_deprecated(&foo);\n    |         ^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: use of deprecated associated function `lint_stability::Trait::trait_deprecated`: text\n-  --> $DIR/lint-stability-deprecated.rs:148:9\n+  --> $DIR/lint-stability-deprecated.rs:147:9\n    |\n LL |         <Foo as Trait>::trait_deprecated(&foo);\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: use of deprecated associated function `lint_stability::Trait::trait_deprecated_text`: text\n-  --> $DIR/lint-stability-deprecated.rs:150:9\n+  --> $DIR/lint-stability-deprecated.rs:149:9\n    |\n LL | ...   Trait::trait_deprecated_text(&foo);\n    |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: use of deprecated associated function `lint_stability::Trait::trait_deprecated_text`: text\n-  --> $DIR/lint-stability-deprecated.rs:152:9\n+  --> $DIR/lint-stability-deprecated.rs:151:9\n    |\n LL | ...   <Foo as Trait>::trait_deprecated_text(&foo);\n    |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: use of deprecated associated function `lint_stability::Trait::trait_deprecated_unstable`: text\n-  --> $DIR/lint-stability-deprecated.rs:154:9\n+  --> $DIR/lint-stability-deprecated.rs:153:9\n    |\n LL | ...   Trait::trait_deprecated_unstable(&foo);\n    |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: use of deprecated associated function `lint_stability::Trait::trait_deprecated_unstable`: text\n-  --> $DIR/lint-stability-deprecated.rs:156:9\n+  --> $DIR/lint-stability-deprecated.rs:155:9\n    |\n LL | ...   <Foo as Trait>::trait_deprecated_unstable(&foo);\n    |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: use of deprecated associated function `lint_stability::Trait::trait_deprecated_unstable_text`: text\n-  --> $DIR/lint-stability-deprecated.rs:158:9\n+  --> $DIR/lint-stability-deprecated.rs:157:9\n    |\n LL | ...   Trait::trait_deprecated_unstable_text(&foo);\n    |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: use of deprecated associated function `lint_stability::Trait::trait_deprecated_unstable_text`: text\n-  --> $DIR/lint-stability-deprecated.rs:160:9\n+  --> $DIR/lint-stability-deprecated.rs:159:9\n    |\n LL | ...   <Foo as Trait>::trait_deprecated_unstable_text(&foo);\n    |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: use of deprecated trait `lint_stability::DeprecatedTrait`: text\n-  --> $DIR/lint-stability-deprecated.rs:188:10\n+  --> $DIR/lint-stability-deprecated.rs:187:10\n    |\n LL |     impl DeprecatedTrait for S {}\n    |          ^^^^^^^^^^^^^^^\n \n warning: use of deprecated trait `lint_stability::DeprecatedTrait`: text\n-  --> $DIR/lint-stability-deprecated.rs:190:25\n+  --> $DIR/lint-stability-deprecated.rs:189:25\n    |\n LL |     trait LocalTrait2 : DeprecatedTrait { }\n    |                         ^^^^^^^^^^^^^^^\n \n warning: use of deprecated function `inheritance::inherited_stability::unstable_mod::deprecated`: text\n-  --> $DIR/lint-stability-deprecated.rs:209:9\n+  --> $DIR/lint-stability-deprecated.rs:208:9\n    |\n LL |         unstable_mod::deprecated();\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: use of deprecated function `this_crate::deprecated`: text\n-  --> $DIR/lint-stability-deprecated.rs:331:9\n+  --> $DIR/lint-stability-deprecated.rs:330:9\n    |\n LL |         deprecated();\n    |         ^^^^^^^^^^\n \n warning: use of deprecated associated function `this_crate::Trait::trait_deprecated`: text\n-  --> $DIR/lint-stability-deprecated.rs:336:9\n+  --> $DIR/lint-stability-deprecated.rs:335:9\n    |\n LL |         Trait::trait_deprecated(&foo);\n    |         ^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: use of deprecated associated function `this_crate::Trait::trait_deprecated`: text\n-  --> $DIR/lint-stability-deprecated.rs:338:9\n+  --> $DIR/lint-stability-deprecated.rs:337:9\n    |\n LL |         <Foo as Trait>::trait_deprecated(&foo);\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: use of deprecated function `this_crate::deprecated_text`: text\n-  --> $DIR/lint-stability-deprecated.rs:340:9\n+  --> $DIR/lint-stability-deprecated.rs:339:9\n    |\n LL |         deprecated_text();\n    |         ^^^^^^^^^^^^^^^\n \n warning: use of deprecated associated function `this_crate::Trait::trait_deprecated_text`: text\n-  --> $DIR/lint-stability-deprecated.rs:345:9\n+  --> $DIR/lint-stability-deprecated.rs:344:9\n    |\n LL |         Trait::trait_deprecated_text(&foo);\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: use of deprecated associated function `this_crate::Trait::trait_deprecated_text`: text\n-  --> $DIR/lint-stability-deprecated.rs:347:9\n+  --> $DIR/lint-stability-deprecated.rs:346:9\n    |\n LL | ...   <Foo as Trait>::trait_deprecated_text(&foo);\n    |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: use of deprecated struct `this_crate::DeprecatedStruct`: text\n-  --> $DIR/lint-stability-deprecated.rs:385:17\n+  --> $DIR/lint-stability-deprecated.rs:384:17\n    |\n LL |         let _ = DeprecatedStruct {\n    |                 ^^^^^^^^^^^^^^^^\n \n warning: use of deprecated unit struct `this_crate::DeprecatedUnitStruct`: text\n-  --> $DIR/lint-stability-deprecated.rs:392:17\n+  --> $DIR/lint-stability-deprecated.rs:391:17\n    |\n LL |         let _ = DeprecatedUnitStruct;\n    |                 ^^^^^^^^^^^^^^^^^^^^\n \n warning: use of deprecated unit variant `this_crate::Enum::DeprecatedVariant`: text\n-  --> $DIR/lint-stability-deprecated.rs:396:17\n+  --> $DIR/lint-stability-deprecated.rs:395:17\n    |\n LL |         let _ = Enum::DeprecatedVariant;\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: use of deprecated tuple struct `this_crate::DeprecatedTupleStruct`: text\n-  --> $DIR/lint-stability-deprecated.rs:400:17\n+  --> $DIR/lint-stability-deprecated.rs:399:17\n    |\n LL |         let _ = DeprecatedTupleStruct (1);\n    |                 ^^^^^^^^^^^^^^^^^^^^^\n \n warning: use of deprecated associated function `this_crate::Trait::trait_deprecated`: text\n-  --> $DIR/lint-stability-deprecated.rs:407:9\n+  --> $DIR/lint-stability-deprecated.rs:406:9\n    |\n LL |         Trait::trait_deprecated(&foo);\n    |         ^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: use of deprecated associated function `this_crate::Trait::trait_deprecated`: text\n-  --> $DIR/lint-stability-deprecated.rs:409:9\n+  --> $DIR/lint-stability-deprecated.rs:408:9\n    |\n LL |         <Foo as Trait>::trait_deprecated(&foo);\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: use of deprecated associated function `this_crate::Trait::trait_deprecated_text`: text\n-  --> $DIR/lint-stability-deprecated.rs:411:9\n+  --> $DIR/lint-stability-deprecated.rs:410:9\n    |\n LL |         Trait::trait_deprecated_text(&foo);\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: use of deprecated associated function `this_crate::Trait::trait_deprecated_text`: text\n-  --> $DIR/lint-stability-deprecated.rs:413:9\n+  --> $DIR/lint-stability-deprecated.rs:412:9\n    |\n LL | ...   <Foo as Trait>::trait_deprecated_text(&foo);\n    |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: use of deprecated function `this_crate::test_fn_body::fn_in_body`: text\n-  --> $DIR/lint-stability-deprecated.rs:440:9\n+  --> $DIR/lint-stability-deprecated.rs:439:9\n    |\n LL |         fn_in_body();\n    |         ^^^^^^^^^^\n \n warning: use of deprecated trait `this_crate::DeprecatedTrait`: text\n-  --> $DIR/lint-stability-deprecated.rs:460:10\n+  --> $DIR/lint-stability-deprecated.rs:459:10\n    |\n LL |     impl DeprecatedTrait for S { }\n    |          ^^^^^^^^^^^^^^^\n \n warning: use of deprecated trait `this_crate::DeprecatedTrait`: text\n-  --> $DIR/lint-stability-deprecated.rs:462:24\n+  --> $DIR/lint-stability-deprecated.rs:461:24\n    |\n LL |     trait LocalTrait : DeprecatedTrait { }\n    |                        ^^^^^^^^^^^^^^^\n \n warning: use of deprecated function `this_crate::MethodTester::test_method_body::fn_in_body`: text\n-  --> $DIR/lint-stability-deprecated.rs:448:13\n+  --> $DIR/lint-stability-deprecated.rs:447:13\n    |\n LL |             fn_in_body();\n    |             ^^^^^^^^^^\n \n warning: use of deprecated associated type `lint_stability::TraitWithAssociatedTypes::TypeDeprecated`: text\n-  --> $DIR/lint-stability-deprecated.rs:98:48\n+  --> $DIR/lint-stability-deprecated.rs:97:48\n    |\n LL |         struct S2<T: TraitWithAssociatedTypes>(T::TypeDeprecated);\n    |                                                ^^^^^^^^^^^^^^^^^\n \n warning: use of deprecated associated type `lint_stability::TraitWithAssociatedTypes::TypeDeprecated`: text\n-  --> $DIR/lint-stability-deprecated.rs:103:13\n+  --> $DIR/lint-stability-deprecated.rs:102:13\n    |\n LL |             TypeDeprecated = u16,\n    |             ^^^^^^^^^^^^^^^^^^^^\n \n warning: use of deprecated associated function `lint_stability::MethodTester::method_deprecated`: text\n-  --> $DIR/lint-stability-deprecated.rs:26:13\n+  --> $DIR/lint-stability-deprecated.rs:25:13\n    |\n LL |         foo.method_deprecated();\n    |             ^^^^^^^^^^^^^^^^^\n \n warning: use of deprecated associated function `lint_stability::MethodTester::method_deprecated`: text\n-  --> $DIR/lint-stability-deprecated.rs:27:9\n+  --> $DIR/lint-stability-deprecated.rs:26:9\n    |\n LL |         Foo::method_deprecated(&foo);\n    |         ^^^^^^^^^^^^^^^^^^^^^^\n \n warning: use of deprecated associated function `lint_stability::MethodTester::method_deprecated`: text\n-  --> $DIR/lint-stability-deprecated.rs:28:9\n+  --> $DIR/lint-stability-deprecated.rs:27:9\n    |\n LL |         <Foo>::method_deprecated(&foo);\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: use of deprecated associated function `lint_stability::Trait::trait_deprecated`: text\n-  --> $DIR/lint-stability-deprecated.rs:29:13\n+  --> $DIR/lint-stability-deprecated.rs:28:13\n    |\n LL |         foo.trait_deprecated();\n    |             ^^^^^^^^^^^^^^^^\n \n warning: use of deprecated associated function `lint_stability::Trait::trait_deprecated`: text\n-  --> $DIR/lint-stability-deprecated.rs:31:9\n+  --> $DIR/lint-stability-deprecated.rs:30:9\n    |\n LL |         <Foo>::trait_deprecated(&foo);\n    |         ^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: use of deprecated associated function `lint_stability::MethodTester::method_deprecated_text`: text\n-  --> $DIR/lint-stability-deprecated.rs:35:13\n+  --> $DIR/lint-stability-deprecated.rs:34:13\n    |\n LL | ...   foo.method_deprecated_text();\n    |           ^^^^^^^^^^^^^^^^^^^^^^\n \n warning: use of deprecated associated function `lint_stability::MethodTester::method_deprecated_text`: text\n-  --> $DIR/lint-stability-deprecated.rs:36:9\n+  --> $DIR/lint-stability-deprecated.rs:35:9\n    |\n LL | ...   Foo::method_deprecated_text(&foo);\n    |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: use of deprecated associated function `lint_stability::MethodTester::method_deprecated_text`: text\n-  --> $DIR/lint-stability-deprecated.rs:37:9\n+  --> $DIR/lint-stability-deprecated.rs:36:9\n    |\n LL | ...   <Foo>::method_deprecated_text(&foo);\n    |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: use of deprecated associated function `lint_stability::Trait::trait_deprecated_text`: text\n-  --> $DIR/lint-stability-deprecated.rs:38:13\n+  --> $DIR/lint-stability-deprecated.rs:37:13\n    |\n LL |         foo.trait_deprecated_text();\n    |             ^^^^^^^^^^^^^^^^^^^^^\n \n warning: use of deprecated associated function `lint_stability::Trait::trait_deprecated_text`: text\n-  --> $DIR/lint-stability-deprecated.rs:40:9\n+  --> $DIR/lint-stability-deprecated.rs:39:9\n    |\n LL | ...   <Foo>::trait_deprecated_text(&foo);\n    |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: use of deprecated associated function `lint_stability::MethodTester::method_deprecated_unstable`: text\n-  --> $DIR/lint-stability-deprecated.rs:44:13\n+  --> $DIR/lint-stability-deprecated.rs:43:13\n    |\n LL | ...   foo.method_deprecated_unstable();\n    |           ^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: use of deprecated associated function `lint_stability::MethodTester::method_deprecated_unstable`: text\n-  --> $DIR/lint-stability-deprecated.rs:45:9\n+  --> $DIR/lint-stability-deprecated.rs:44:9\n    |\n LL | ...   Foo::method_deprecated_unstable(&foo);\n    |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: use of deprecated associated function `lint_stability::MethodTester::method_deprecated_unstable`: text\n-  --> $DIR/lint-stability-deprecated.rs:46:9\n+  --> $DIR/lint-stability-deprecated.rs:45:9\n    |\n LL | ...   <Foo>::method_deprecated_unstable(&foo);\n    |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: use of deprecated associated function `lint_stability::Trait::trait_deprecated_unstable`: text\n-  --> $DIR/lint-stability-deprecated.rs:47:13\n+  --> $DIR/lint-stability-deprecated.rs:46:13\n    |\n LL |         foo.trait_deprecated_unstable();\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: use of deprecated associated function `lint_stability::Trait::trait_deprecated_unstable`: text\n-  --> $DIR/lint-stability-deprecated.rs:49:9\n+  --> $DIR/lint-stability-deprecated.rs:48:9\n    |\n LL | ...   <Foo>::trait_deprecated_unstable(&foo);\n    |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: use of deprecated associated function `lint_stability::MethodTester::method_deprecated_unstable_text`: text\n-  --> $DIR/lint-stability-deprecated.rs:53:13\n+  --> $DIR/lint-stability-deprecated.rs:52:13\n    |\n LL | ...   foo.method_deprecated_unstable_text();\n    |           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: use of deprecated associated function `lint_stability::MethodTester::method_deprecated_unstable_text`: text\n-  --> $DIR/lint-stability-deprecated.rs:54:9\n+  --> $DIR/lint-stability-deprecated.rs:53:9\n    |\n LL | ...   Foo::method_deprecated_unstable_text(&foo);\n    |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: use of deprecated associated function `lint_stability::MethodTester::method_deprecated_unstable_text`: text\n-  --> $DIR/lint-stability-deprecated.rs:55:9\n+  --> $DIR/lint-stability-deprecated.rs:54:9\n    |\n LL | ...   <Foo>::method_deprecated_unstable_text(&foo);\n    |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: use of deprecated associated function `lint_stability::Trait::trait_deprecated_unstable_text`: text\n-  --> $DIR/lint-stability-deprecated.rs:56:13\n+  --> $DIR/lint-stability-deprecated.rs:55:13\n    |\n LL | ...   foo.trait_deprecated_unstable_text();\n    |           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: use of deprecated associated function `lint_stability::Trait::trait_deprecated_unstable_text`: text\n-  --> $DIR/lint-stability-deprecated.rs:58:9\n+  --> $DIR/lint-stability-deprecated.rs:57:9\n    |\n LL | ...   <Foo>::trait_deprecated_unstable_text(&foo);\n    |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: use of deprecated field `lint_stability::DeprecatedStruct::i`: text\n-  --> $DIR/lint-stability-deprecated.rs:110:13\n+  --> $DIR/lint-stability-deprecated.rs:109:13\n    |\n LL |             i: 0\n    |             ^^^^\n \n warning: use of deprecated field `lint_stability::DeprecatedUnstableStruct::i`: text\n-  --> $DIR/lint-stability-deprecated.rs:114:13\n+  --> $DIR/lint-stability-deprecated.rs:113:13\n    |\n LL |             i: 0\n    |             ^^^^\n \n warning: use of deprecated associated function `lint_stability::Trait::trait_deprecated`: text\n-  --> $DIR/lint-stability-deprecated.rs:145:13\n+  --> $DIR/lint-stability-deprecated.rs:144:13\n    |\n LL |         foo.trait_deprecated();\n    |             ^^^^^^^^^^^^^^^^\n \n warning: use of deprecated associated function `lint_stability::Trait::trait_deprecated`: text\n-  --> $DIR/lint-stability-deprecated.rs:147:9\n+  --> $DIR/lint-stability-deprecated.rs:146:9\n    |\n LL |         <Foo>::trait_deprecated(&foo);\n    |         ^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: use of deprecated associated function `lint_stability::Trait::trait_deprecated_text`: text\n-  --> $DIR/lint-stability-deprecated.rs:149:13\n+  --> $DIR/lint-stability-deprecated.rs:148:13\n    |\n LL |         foo.trait_deprecated_text();\n    |             ^^^^^^^^^^^^^^^^^^^^^\n \n warning: use of deprecated associated function `lint_stability::Trait::trait_deprecated_text`: text\n-  --> $DIR/lint-stability-deprecated.rs:151:9\n+  --> $DIR/lint-stability-deprecated.rs:150:9\n    |\n LL | ...   <Foo>::trait_deprecated_text(&foo);\n    |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: use of deprecated associated function `lint_stability::Trait::trait_deprecated_unstable`: text\n-  --> $DIR/lint-stability-deprecated.rs:153:13\n+  --> $DIR/lint-stability-deprecated.rs:152:13\n    |\n LL |         foo.trait_deprecated_unstable();\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: use of deprecated associated function `lint_stability::Trait::trait_deprecated_unstable`: text\n-  --> $DIR/lint-stability-deprecated.rs:155:9\n+  --> $DIR/lint-stability-deprecated.rs:154:9\n    |\n LL | ...   <Foo>::trait_deprecated_unstable(&foo);\n    |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: use of deprecated associated function `lint_stability::Trait::trait_deprecated_unstable_text`: text\n-  --> $DIR/lint-stability-deprecated.rs:157:13\n+  --> $DIR/lint-stability-deprecated.rs:156:13\n    |\n LL | ...   foo.trait_deprecated_unstable_text();\n    |           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: use of deprecated associated function `lint_stability::Trait::trait_deprecated_unstable_text`: text\n-  --> $DIR/lint-stability-deprecated.rs:159:9\n+  --> $DIR/lint-stability-deprecated.rs:158:9\n    |\n LL | ...   <Foo>::trait_deprecated_unstable_text(&foo);\n    |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: use of deprecated associated function `lint_stability::Trait::trait_deprecated`: text\n-  --> $DIR/lint-stability-deprecated.rs:176:13\n+  --> $DIR/lint-stability-deprecated.rs:175:13\n    |\n LL |         foo.trait_deprecated();\n    |             ^^^^^^^^^^^^^^^^\n \n warning: use of deprecated associated function `lint_stability::Trait::trait_deprecated_text`: text\n-  --> $DIR/lint-stability-deprecated.rs:177:13\n+  --> $DIR/lint-stability-deprecated.rs:176:13\n    |\n LL |         foo.trait_deprecated_text();\n    |             ^^^^^^^^^^^^^^^^^^^^^\n \n warning: use of deprecated associated function `lint_stability::Trait::trait_deprecated_unstable`: text\n-  --> $DIR/lint-stability-deprecated.rs:178:13\n+  --> $DIR/lint-stability-deprecated.rs:177:13\n    |\n LL |         foo.trait_deprecated_unstable();\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: use of deprecated associated function `lint_stability::Trait::trait_deprecated_unstable_text`: text\n-  --> $DIR/lint-stability-deprecated.rs:179:13\n+  --> $DIR/lint-stability-deprecated.rs:178:13\n    |\n LL | ...   foo.trait_deprecated_unstable_text();\n    |           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: use of deprecated associated function `this_crate::MethodTester::method_deprecated`: text\n-  --> $DIR/lint-stability-deprecated.rs:332:13\n+  --> $DIR/lint-stability-deprecated.rs:331:13\n    |\n LL |         foo.method_deprecated();\n    |             ^^^^^^^^^^^^^^^^^\n \n warning: use of deprecated associated function `this_crate::MethodTester::method_deprecated`: text\n-  --> $DIR/lint-stability-deprecated.rs:333:9\n+  --> $DIR/lint-stability-deprecated.rs:332:9\n    |\n LL |         Foo::method_deprecated(&foo);\n    |         ^^^^^^^^^^^^^^^^^^^^^^\n \n warning: use of deprecated associated function `this_crate::MethodTester::method_deprecated`: text\n-  --> $DIR/lint-stability-deprecated.rs:334:9\n+  --> $DIR/lint-stability-deprecated.rs:333:9\n    |\n LL |         <Foo>::method_deprecated(&foo);\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: use of deprecated associated function `this_crate::Trait::trait_deprecated`: text\n-  --> $DIR/lint-stability-deprecated.rs:335:13\n+  --> $DIR/lint-stability-deprecated.rs:334:13\n    |\n LL |         foo.trait_deprecated();\n    |             ^^^^^^^^^^^^^^^^\n \n warning: use of deprecated associated function `this_crate::Trait::trait_deprecated`: text\n-  --> $DIR/lint-stability-deprecated.rs:337:9\n+  --> $DIR/lint-stability-deprecated.rs:336:9\n    |\n LL |         <Foo>::trait_deprecated(&foo);\n    |         ^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: use of deprecated associated function `this_crate::MethodTester::method_deprecated_text`: text\n-  --> $DIR/lint-stability-deprecated.rs:341:13\n+  --> $DIR/lint-stability-deprecated.rs:340:13\n    |\n LL | ...   foo.method_deprecated_text();\n    |           ^^^^^^^^^^^^^^^^^^^^^^\n \n warning: use of deprecated associated function `this_crate::MethodTester::method_deprecated_text`: text\n-  --> $DIR/lint-stability-deprecated.rs:342:9\n+  --> $DIR/lint-stability-deprecated.rs:341:9\n    |\n LL | ...   Foo::method_deprecated_text(&foo);\n    |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: use of deprecated associated function `this_crate::MethodTester::method_deprecated_text`: text\n-  --> $DIR/lint-stability-deprecated.rs:343:9\n+  --> $DIR/lint-stability-deprecated.rs:342:9\n    |\n LL | ...   <Foo>::method_deprecated_text(&foo);\n    |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: use of deprecated associated function `this_crate::Trait::trait_deprecated_text`: text\n-  --> $DIR/lint-stability-deprecated.rs:344:13\n+  --> $DIR/lint-stability-deprecated.rs:343:13\n    |\n LL |         foo.trait_deprecated_text();\n    |             ^^^^^^^^^^^^^^^^^^^^^\n \n warning: use of deprecated associated function `this_crate::Trait::trait_deprecated_text`: text\n-  --> $DIR/lint-stability-deprecated.rs:346:9\n+  --> $DIR/lint-stability-deprecated.rs:345:9\n    |\n LL |         <Foo>::trait_deprecated_text(&foo);\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: use of deprecated field `this_crate::DeprecatedStruct::i`: text\n-  --> $DIR/lint-stability-deprecated.rs:387:13\n+  --> $DIR/lint-stability-deprecated.rs:386:13\n    |\n LL |             i: 0\n    |             ^^^^\n \n warning: use of deprecated associated function `this_crate::Trait::trait_deprecated`: text\n-  --> $DIR/lint-stability-deprecated.rs:406:13\n+  --> $DIR/lint-stability-deprecated.rs:405:13\n    |\n LL |         foo.trait_deprecated();\n    |             ^^^^^^^^^^^^^^^^\n \n warning: use of deprecated associated function `this_crate::Trait::trait_deprecated`: text\n-  --> $DIR/lint-stability-deprecated.rs:408:9\n+  --> $DIR/lint-stability-deprecated.rs:407:9\n    |\n LL |         <Foo>::trait_deprecated(&foo);\n    |         ^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: use of deprecated associated function `this_crate::Trait::trait_deprecated_text`: text\n-  --> $DIR/lint-stability-deprecated.rs:410:13\n+  --> $DIR/lint-stability-deprecated.rs:409:13\n    |\n LL |         foo.trait_deprecated_text();\n    |             ^^^^^^^^^^^^^^^^^^^^^\n \n warning: use of deprecated associated function `this_crate::Trait::trait_deprecated_text`: text\n-  --> $DIR/lint-stability-deprecated.rs:412:9\n+  --> $DIR/lint-stability-deprecated.rs:411:9\n    |\n LL |         <Foo>::trait_deprecated_text(&foo);\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: use of deprecated associated function `this_crate::Trait::trait_deprecated`: text\n-  --> $DIR/lint-stability-deprecated.rs:429:13\n+  --> $DIR/lint-stability-deprecated.rs:428:13\n    |\n LL |         foo.trait_deprecated();\n    |             ^^^^^^^^^^^^^^^^\n \n warning: use of deprecated associated function `this_crate::Trait::trait_deprecated_text`: text\n-  --> $DIR/lint-stability-deprecated.rs:430:13\n+  --> $DIR/lint-stability-deprecated.rs:429:13\n    |\n LL |         foo.trait_deprecated_text();\n    |             ^^^^^^^^^^^^^^^^^^^^^\n \n warning: use of deprecated associated type `lint_stability::TraitWithAssociatedTypes::TypeDeprecated`: text\n-  --> $DIR/lint-stability-deprecated.rs:98:48\n+  --> $DIR/lint-stability-deprecated.rs:97:48\n    |\n LL |         struct S2<T: TraitWithAssociatedTypes>(T::TypeDeprecated);\n    |                                                ^^^^^^^^^^^^^^^^^\n \n warning: use of deprecated associated type `lint_stability::TraitWithAssociatedTypes::TypeDeprecated`: text\n-  --> $DIR/lint-stability-deprecated.rs:103:13\n+  --> $DIR/lint-stability-deprecated.rs:102:13\n    |\n LL |             TypeDeprecated = u16,\n    |             ^^^^^^^^^^^^^^^^^^^^\n \n warning: use of deprecated associated type `lint_stability::TraitWithAssociatedTypes::TypeDeprecated`: text\n-  --> $DIR/lint-stability-deprecated.rs:103:13\n+  --> $DIR/lint-stability-deprecated.rs:102:13\n    |\n LL |             TypeDeprecated = u16,\n    |             ^^^^^^^^^^^^^^^^^^^^"}, {"sha": "122933c3c4e46337f88bae51cefd9a5cce4a8f67", "filename": "src/test/ui/lint/uninitialized-zeroed.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fui%2Flint%2Funinitialized-zeroed.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fui%2Flint%2Funinitialized-zeroed.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Funinitialized-zeroed.rs?ref=3ea62cb5d19846b44172d861ae231c8c09322800", "patch": "@@ -1,4 +1,3 @@\n-// ignore-tidy-linelength\n // This test checks that calling `mem::{uninitialized,zeroed}` with certain types results\n // in a lint.\n "}, {"sha": "0af185ef61b5ea625626d1d5dcaf6b52e9f98563", "filename": "src/test/ui/lint/uninitialized-zeroed.stderr", "status": "modified", "additions": 49, "deletions": 49, "changes": 98, "blob_url": "https://github.com/rust-lang/rust/blob/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fui%2Flint%2Funinitialized-zeroed.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fui%2Flint%2Funinitialized-zeroed.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Funinitialized-zeroed.stderr?ref=3ea62cb5d19846b44172d861ae231c8c09322800", "patch": "@@ -1,5 +1,5 @@\n error: the type `&T` does not permit zero-initialization\n-  --> $DIR/uninitialized-zeroed.rs:41:32\n+  --> $DIR/uninitialized-zeroed.rs:40:32\n    |\n LL |         let _val: &'static T = mem::zeroed();\n    |                                ^^^^^^^^^^^^^\n@@ -8,14 +8,14 @@ LL |         let _val: &'static T = mem::zeroed();\n    |                                help: use `MaybeUninit<T>` instead, and only call `assume_init` after initialization is done\n    |\n note: the lint level is defined here\n-  --> $DIR/uninitialized-zeroed.rs:7:9\n+  --> $DIR/uninitialized-zeroed.rs:6:9\n    |\n LL | #![deny(invalid_value)]\n    |         ^^^^^^^^^^^^^\n    = note: references must be non-null\n \n error: the type `&T` does not permit being left uninitialized\n-  --> $DIR/uninitialized-zeroed.rs:42:32\n+  --> $DIR/uninitialized-zeroed.rs:41:32\n    |\n LL |         let _val: &'static T = mem::uninitialized();\n    |                                ^^^^^^^^^^^^^^^^^^^^\n@@ -26,7 +26,7 @@ LL |         let _val: &'static T = mem::uninitialized();\n    = note: references must be non-null\n \n error: the type `Wrap<&T>` does not permit zero-initialization\n-  --> $DIR/uninitialized-zeroed.rs:44:38\n+  --> $DIR/uninitialized-zeroed.rs:43:38\n    |\n LL |         let _val: Wrap<&'static T> = mem::zeroed();\n    |                                      ^^^^^^^^^^^^^\n@@ -35,13 +35,13 @@ LL |         let _val: Wrap<&'static T> = mem::zeroed();\n    |                                      help: use `MaybeUninit<T>` instead, and only call `assume_init` after initialization is done\n    |\n note: references must be non-null (in this struct field)\n-  --> $DIR/uninitialized-zeroed.rs:18:18\n+  --> $DIR/uninitialized-zeroed.rs:17:18\n    |\n LL | struct Wrap<T> { wrapped: T }\n    |                  ^^^^^^^^^^\n \n error: the type `Wrap<&T>` does not permit being left uninitialized\n-  --> $DIR/uninitialized-zeroed.rs:45:38\n+  --> $DIR/uninitialized-zeroed.rs:44:38\n    |\n LL |         let _val: Wrap<&'static T> = mem::uninitialized();\n    |                                      ^^^^^^^^^^^^^^^^^^^^\n@@ -50,13 +50,13 @@ LL |         let _val: Wrap<&'static T> = mem::uninitialized();\n    |                                      help: use `MaybeUninit<T>` instead, and only call `assume_init` after initialization is done\n    |\n note: references must be non-null (in this struct field)\n-  --> $DIR/uninitialized-zeroed.rs:18:18\n+  --> $DIR/uninitialized-zeroed.rs:17:18\n    |\n LL | struct Wrap<T> { wrapped: T }\n    |                  ^^^^^^^^^^\n \n error: the type `!` does not permit zero-initialization\n-  --> $DIR/uninitialized-zeroed.rs:52:23\n+  --> $DIR/uninitialized-zeroed.rs:51:23\n    |\n LL |         let _val: ! = mem::zeroed();\n    |                       ^^^^^^^^^^^^^\n@@ -67,7 +67,7 @@ LL |         let _val: ! = mem::zeroed();\n    = note: the `!` type has no valid value\n \n error: the type `!` does not permit being left uninitialized\n-  --> $DIR/uninitialized-zeroed.rs:53:23\n+  --> $DIR/uninitialized-zeroed.rs:52:23\n    |\n LL |         let _val: ! = mem::uninitialized();\n    |                       ^^^^^^^^^^^^^^^^^^^^\n@@ -78,7 +78,7 @@ LL |         let _val: ! = mem::uninitialized();\n    = note: the `!` type has no valid value\n \n error: the type `(i32, !)` does not permit zero-initialization\n-  --> $DIR/uninitialized-zeroed.rs:55:30\n+  --> $DIR/uninitialized-zeroed.rs:54:30\n    |\n LL |         let _val: (i32, !) = mem::zeroed();\n    |                              ^^^^^^^^^^^^^\n@@ -89,7 +89,7 @@ LL |         let _val: (i32, !) = mem::zeroed();\n    = note: the `!` type has no valid value\n \n error: the type `(i32, !)` does not permit being left uninitialized\n-  --> $DIR/uninitialized-zeroed.rs:56:30\n+  --> $DIR/uninitialized-zeroed.rs:55:30\n    |\n LL |         let _val: (i32, !) = mem::uninitialized();\n    |                              ^^^^^^^^^^^^^^^^^^^^\n@@ -100,7 +100,7 @@ LL |         let _val: (i32, !) = mem::uninitialized();\n    = note: the `!` type has no valid value\n \n error: the type `Void` does not permit zero-initialization\n-  --> $DIR/uninitialized-zeroed.rs:58:26\n+  --> $DIR/uninitialized-zeroed.rs:57:26\n    |\n LL |         let _val: Void = mem::zeroed();\n    |                          ^^^^^^^^^^^^^\n@@ -111,7 +111,7 @@ LL |         let _val: Void = mem::zeroed();\n    = note: enums with no variants have no valid value\n \n error: the type `Void` does not permit being left uninitialized\n-  --> $DIR/uninitialized-zeroed.rs:59:26\n+  --> $DIR/uninitialized-zeroed.rs:58:26\n    |\n LL |         let _val: Void = mem::uninitialized();\n    |                          ^^^^^^^^^^^^^^^^^^^^\n@@ -122,7 +122,7 @@ LL |         let _val: Void = mem::uninitialized();\n    = note: enums with no variants have no valid value\n \n error: the type `&i32` does not permit zero-initialization\n-  --> $DIR/uninitialized-zeroed.rs:61:34\n+  --> $DIR/uninitialized-zeroed.rs:60:34\n    |\n LL |         let _val: &'static i32 = mem::zeroed();\n    |                                  ^^^^^^^^^^^^^\n@@ -133,7 +133,7 @@ LL |         let _val: &'static i32 = mem::zeroed();\n    = note: references must be non-null\n \n error: the type `&i32` does not permit being left uninitialized\n-  --> $DIR/uninitialized-zeroed.rs:62:34\n+  --> $DIR/uninitialized-zeroed.rs:61:34\n    |\n LL |         let _val: &'static i32 = mem::uninitialized();\n    |                                  ^^^^^^^^^^^^^^^^^^^^\n@@ -144,7 +144,7 @@ LL |         let _val: &'static i32 = mem::uninitialized();\n    = note: references must be non-null\n \n error: the type `Ref` does not permit zero-initialization\n-  --> $DIR/uninitialized-zeroed.rs:64:25\n+  --> $DIR/uninitialized-zeroed.rs:63:25\n    |\n LL |         let _val: Ref = mem::zeroed();\n    |                         ^^^^^^^^^^^^^\n@@ -153,13 +153,13 @@ LL |         let _val: Ref = mem::zeroed();\n    |                         help: use `MaybeUninit<T>` instead, and only call `assume_init` after initialization is done\n    |\n note: references must be non-null (in this struct field)\n-  --> $DIR/uninitialized-zeroed.rs:15:12\n+  --> $DIR/uninitialized-zeroed.rs:14:12\n    |\n LL | struct Ref(&'static i32);\n    |            ^^^^^^^^^^^^\n \n error: the type `Ref` does not permit being left uninitialized\n-  --> $DIR/uninitialized-zeroed.rs:65:25\n+  --> $DIR/uninitialized-zeroed.rs:64:25\n    |\n LL |         let _val: Ref = mem::uninitialized();\n    |                         ^^^^^^^^^^^^^^^^^^^^\n@@ -168,13 +168,13 @@ LL |         let _val: Ref = mem::uninitialized();\n    |                         help: use `MaybeUninit<T>` instead, and only call `assume_init` after initialization is done\n    |\n note: references must be non-null (in this struct field)\n-  --> $DIR/uninitialized-zeroed.rs:15:12\n+  --> $DIR/uninitialized-zeroed.rs:14:12\n    |\n LL | struct Ref(&'static i32);\n    |            ^^^^^^^^^^^^\n \n error: the type `fn()` does not permit zero-initialization\n-  --> $DIR/uninitialized-zeroed.rs:67:26\n+  --> $DIR/uninitialized-zeroed.rs:66:26\n    |\n LL |         let _val: fn() = mem::zeroed();\n    |                          ^^^^^^^^^^^^^\n@@ -185,7 +185,7 @@ LL |         let _val: fn() = mem::zeroed();\n    = note: function pointers must be non-null\n \n error: the type `fn()` does not permit being left uninitialized\n-  --> $DIR/uninitialized-zeroed.rs:68:26\n+  --> $DIR/uninitialized-zeroed.rs:67:26\n    |\n LL |         let _val: fn() = mem::uninitialized();\n    |                          ^^^^^^^^^^^^^^^^^^^^\n@@ -196,7 +196,7 @@ LL |         let _val: fn() = mem::uninitialized();\n    = note: function pointers must be non-null\n \n error: the type `Wrap<fn()>` does not permit zero-initialization\n-  --> $DIR/uninitialized-zeroed.rs:70:32\n+  --> $DIR/uninitialized-zeroed.rs:69:32\n    |\n LL |         let _val: Wrap<fn()> = mem::zeroed();\n    |                                ^^^^^^^^^^^^^\n@@ -205,13 +205,13 @@ LL |         let _val: Wrap<fn()> = mem::zeroed();\n    |                                help: use `MaybeUninit<T>` instead, and only call `assume_init` after initialization is done\n    |\n note: function pointers must be non-null (in this struct field)\n-  --> $DIR/uninitialized-zeroed.rs:18:18\n+  --> $DIR/uninitialized-zeroed.rs:17:18\n    |\n LL | struct Wrap<T> { wrapped: T }\n    |                  ^^^^^^^^^^\n \n error: the type `Wrap<fn()>` does not permit being left uninitialized\n-  --> $DIR/uninitialized-zeroed.rs:71:32\n+  --> $DIR/uninitialized-zeroed.rs:70:32\n    |\n LL |         let _val: Wrap<fn()> = mem::uninitialized();\n    |                                ^^^^^^^^^^^^^^^^^^^^\n@@ -220,13 +220,13 @@ LL |         let _val: Wrap<fn()> = mem::uninitialized();\n    |                                help: use `MaybeUninit<T>` instead, and only call `assume_init` after initialization is done\n    |\n note: function pointers must be non-null (in this struct field)\n-  --> $DIR/uninitialized-zeroed.rs:18:18\n+  --> $DIR/uninitialized-zeroed.rs:17:18\n    |\n LL | struct Wrap<T> { wrapped: T }\n    |                  ^^^^^^^^^^\n \n error: the type `WrapEnum<fn()>` does not permit zero-initialization\n-  --> $DIR/uninitialized-zeroed.rs:73:36\n+  --> $DIR/uninitialized-zeroed.rs:72:36\n    |\n LL |         let _val: WrapEnum<fn()> = mem::zeroed();\n    |                                    ^^^^^^^^^^^^^\n@@ -235,13 +235,13 @@ LL |         let _val: WrapEnum<fn()> = mem::zeroed();\n    |                                    help: use `MaybeUninit<T>` instead, and only call `assume_init` after initialization is done\n    |\n note: function pointers must be non-null (in this enum field)\n-  --> $DIR/uninitialized-zeroed.rs:19:28\n+  --> $DIR/uninitialized-zeroed.rs:18:28\n    |\n LL | enum WrapEnum<T> { Wrapped(T) }\n    |                            ^\n \n error: the type `WrapEnum<fn()>` does not permit being left uninitialized\n-  --> $DIR/uninitialized-zeroed.rs:74:36\n+  --> $DIR/uninitialized-zeroed.rs:73:36\n    |\n LL |         let _val: WrapEnum<fn()> = mem::uninitialized();\n    |                                    ^^^^^^^^^^^^^^^^^^^^\n@@ -250,13 +250,13 @@ LL |         let _val: WrapEnum<fn()> = mem::uninitialized();\n    |                                    help: use `MaybeUninit<T>` instead, and only call `assume_init` after initialization is done\n    |\n note: function pointers must be non-null (in this enum field)\n-  --> $DIR/uninitialized-zeroed.rs:19:28\n+  --> $DIR/uninitialized-zeroed.rs:18:28\n    |\n LL | enum WrapEnum<T> { Wrapped(T) }\n    |                            ^\n \n error: the type `Wrap<(RefPair, i32)>` does not permit zero-initialization\n-  --> $DIR/uninitialized-zeroed.rs:76:42\n+  --> $DIR/uninitialized-zeroed.rs:75:42\n    |\n LL |         let _val: Wrap<(RefPair, i32)> = mem::zeroed();\n    |                                          ^^^^^^^^^^^^^\n@@ -265,13 +265,13 @@ LL |         let _val: Wrap<(RefPair, i32)> = mem::zeroed();\n    |                                          help: use `MaybeUninit<T>` instead, and only call `assume_init` after initialization is done\n    |\n note: references must be non-null (in this struct field)\n-  --> $DIR/uninitialized-zeroed.rs:16:16\n+  --> $DIR/uninitialized-zeroed.rs:15:16\n    |\n LL | struct RefPair((&'static i32, i32));\n    |                ^^^^^^^^^^^^^^^^^^^\n \n error: the type `Wrap<(RefPair, i32)>` does not permit being left uninitialized\n-  --> $DIR/uninitialized-zeroed.rs:77:42\n+  --> $DIR/uninitialized-zeroed.rs:76:42\n    |\n LL |         let _val: Wrap<(RefPair, i32)> = mem::uninitialized();\n    |                                          ^^^^^^^^^^^^^^^^^^^^\n@@ -280,13 +280,13 @@ LL |         let _val: Wrap<(RefPair, i32)> = mem::uninitialized();\n    |                                          help: use `MaybeUninit<T>` instead, and only call `assume_init` after initialization is done\n    |\n note: references must be non-null (in this struct field)\n-  --> $DIR/uninitialized-zeroed.rs:16:16\n+  --> $DIR/uninitialized-zeroed.rs:15:16\n    |\n LL | struct RefPair((&'static i32, i32));\n    |                ^^^^^^^^^^^^^^^^^^^\n \n error: the type `NonNull<i32>` does not permit zero-initialization\n-  --> $DIR/uninitialized-zeroed.rs:79:34\n+  --> $DIR/uninitialized-zeroed.rs:78:34\n    |\n LL |         let _val: NonNull<i32> = mem::zeroed();\n    |                                  ^^^^^^^^^^^^^\n@@ -297,7 +297,7 @@ LL |         let _val: NonNull<i32> = mem::zeroed();\n    = note: `std::ptr::NonNull<i32>` must be non-null\n \n error: the type `NonNull<i32>` does not permit being left uninitialized\n-  --> $DIR/uninitialized-zeroed.rs:80:34\n+  --> $DIR/uninitialized-zeroed.rs:79:34\n    |\n LL |         let _val: NonNull<i32> = mem::uninitialized();\n    |                                  ^^^^^^^^^^^^^^^^^^^^\n@@ -308,7 +308,7 @@ LL |         let _val: NonNull<i32> = mem::uninitialized();\n    = note: `std::ptr::NonNull<i32>` must be non-null\n \n error: the type `*const dyn Send` does not permit zero-initialization\n-  --> $DIR/uninitialized-zeroed.rs:82:37\n+  --> $DIR/uninitialized-zeroed.rs:81:37\n    |\n LL |         let _val: *const dyn Send = mem::zeroed();\n    |                                     ^^^^^^^^^^^^^\n@@ -319,7 +319,7 @@ LL |         let _val: *const dyn Send = mem::zeroed();\n    = note: the vtable of a wide raw pointer must be non-null\n \n error: the type `*const dyn Send` does not permit being left uninitialized\n-  --> $DIR/uninitialized-zeroed.rs:83:37\n+  --> $DIR/uninitialized-zeroed.rs:82:37\n    |\n LL |         let _val: *const dyn Send = mem::uninitialized();\n    |                                     ^^^^^^^^^^^^^^^^^^^^\n@@ -330,7 +330,7 @@ LL |         let _val: *const dyn Send = mem::uninitialized();\n    = note: the vtable of a wide raw pointer must be non-null\n \n error: the type `bool` does not permit being left uninitialized\n-  --> $DIR/uninitialized-zeroed.rs:87:26\n+  --> $DIR/uninitialized-zeroed.rs:86:26\n    |\n LL |         let _val: bool = mem::uninitialized();\n    |                          ^^^^^^^^^^^^^^^^^^^^\n@@ -341,7 +341,7 @@ LL |         let _val: bool = mem::uninitialized();\n    = note: booleans must be either `true` or `false`\n \n error: the type `Wrap<char>` does not permit being left uninitialized\n-  --> $DIR/uninitialized-zeroed.rs:90:32\n+  --> $DIR/uninitialized-zeroed.rs:89:32\n    |\n LL |         let _val: Wrap<char> = mem::uninitialized();\n    |                                ^^^^^^^^^^^^^^^^^^^^\n@@ -350,13 +350,13 @@ LL |         let _val: Wrap<char> = mem::uninitialized();\n    |                                help: use `MaybeUninit<T>` instead, and only call `assume_init` after initialization is done\n    |\n note: characters must be a valid Unicode codepoint (in this struct field)\n-  --> $DIR/uninitialized-zeroed.rs:18:18\n+  --> $DIR/uninitialized-zeroed.rs:17:18\n    |\n LL | struct Wrap<T> { wrapped: T }\n    |                  ^^^^^^^^^^\n \n error: the type `NonBig` does not permit being left uninitialized\n-  --> $DIR/uninitialized-zeroed.rs:93:28\n+  --> $DIR/uninitialized-zeroed.rs:92:28\n    |\n LL |         let _val: NonBig = mem::uninitialized();\n    |                            ^^^^^^^^^^^^^^^^^^^^\n@@ -367,7 +367,7 @@ LL |         let _val: NonBig = mem::uninitialized();\n    = note: `NonBig` must be initialized inside its custom valid range\n \n error: the type `Fruit` does not permit being left uninitialized\n-  --> $DIR/uninitialized-zeroed.rs:96:27\n+  --> $DIR/uninitialized-zeroed.rs:95:27\n    |\n LL |         let _val: Fruit = mem::uninitialized();\n    |                           ^^^^^^^^^^^^^^^^^^^^\n@@ -376,7 +376,7 @@ LL |         let _val: Fruit = mem::uninitialized();\n    |                           help: use `MaybeUninit<T>` instead, and only call `assume_init` after initialization is done\n    |\n note: enums have to be initialized to a variant\n-  --> $DIR/uninitialized-zeroed.rs:27:1\n+  --> $DIR/uninitialized-zeroed.rs:26:1\n    |\n LL | / enum Fruit {\n LL | |     Apple,\n@@ -385,7 +385,7 @@ LL | | }\n    | |_^\n \n error: the type `&i32` does not permit zero-initialization\n-  --> $DIR/uninitialized-zeroed.rs:99:34\n+  --> $DIR/uninitialized-zeroed.rs:98:34\n    |\n LL |         let _val: &'static i32 = mem::transmute(0usize);\n    |                                  ^^^^^^^^^^^^^^^^^^^^^^\n@@ -396,7 +396,7 @@ LL |         let _val: &'static i32 = mem::transmute(0usize);\n    = note: references must be non-null\n \n error: the type `&[i32]` does not permit zero-initialization\n-  --> $DIR/uninitialized-zeroed.rs:100:36\n+  --> $DIR/uninitialized-zeroed.rs:99:36\n    |\n LL |         let _val: &'static [i32] = mem::transmute((0usize, 0usize));\n    |                                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -407,7 +407,7 @@ LL |         let _val: &'static [i32] = mem::transmute((0usize, 0usize));\n    = note: references must be non-null\n \n error: the type `NonZeroU32` does not permit zero-initialization\n-  --> $DIR/uninitialized-zeroed.rs:101:32\n+  --> $DIR/uninitialized-zeroed.rs:100:32\n    |\n LL |         let _val: NonZeroU32 = mem::transmute(0);\n    |                                ^^^^^^^^^^^^^^^^^\n@@ -418,7 +418,7 @@ LL |         let _val: NonZeroU32 = mem::transmute(0);\n    = note: `std::num::NonZeroU32` must be non-null\n \n error: the type `NonNull<i32>` does not permit zero-initialization\n-  --> $DIR/uninitialized-zeroed.rs:104:34\n+  --> $DIR/uninitialized-zeroed.rs:103:34\n    |\n LL |         let _val: NonNull<i32> = MaybeUninit::zeroed().assume_init();\n    |                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -429,7 +429,7 @@ LL |         let _val: NonNull<i32> = MaybeUninit::zeroed().assume_init();\n    = note: `std::ptr::NonNull<i32>` must be non-null\n \n error: the type `NonNull<i32>` does not permit being left uninitialized\n-  --> $DIR/uninitialized-zeroed.rs:105:34\n+  --> $DIR/uninitialized-zeroed.rs:104:34\n    |\n LL |         let _val: NonNull<i32> = MaybeUninit::uninit().assume_init();\n    |                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -440,7 +440,7 @@ LL |         let _val: NonNull<i32> = MaybeUninit::uninit().assume_init();\n    = note: `std::ptr::NonNull<i32>` must be non-null\n \n error: the type `bool` does not permit being left uninitialized\n-  --> $DIR/uninitialized-zeroed.rs:106:26\n+  --> $DIR/uninitialized-zeroed.rs:105:26\n    |\n LL |         let _val: bool = MaybeUninit::uninit().assume_init();\n    |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^"}, {"sha": "3a860f508ff787845eb9efd34a469f9fb64151fc", "filename": "src/test/ui/loops/loops-reject-duplicate-labels-2.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fui%2Floops%2Floops-reject-duplicate-labels-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fui%2Floops%2Floops-reject-duplicate-labels-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Floops%2Floops-reject-duplicate-labels-2.rs?ref=3ea62cb5d19846b44172d861ae231c8c09322800", "patch": "@@ -1,6 +1,5 @@\n // check-pass\n \n-// ignore-tidy-linelength\n \n // Issue #21633: reject duplicate loop labels in function bodies.\n //"}, {"sha": "6c53d04e107900b24ffd03694e02e9d4f16e0809", "filename": "src/test/ui/loops/loops-reject-duplicate-labels-2.stderr", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fui%2Floops%2Floops-reject-duplicate-labels-2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fui%2Floops%2Floops-reject-duplicate-labels-2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Floops%2Floops-reject-duplicate-labels-2.stderr?ref=3ea62cb5d19846b44172d861ae231c8c09322800", "patch": "@@ -1,61 +1,61 @@\n warning: label name `'fl` shadows a label name that is already in scope\n-  --> $DIR/loops-reject-duplicate-labels-2.rs:14:7\n+  --> $DIR/loops-reject-duplicate-labels-2.rs:13:7\n    |\n LL |     { 'fl: for _ in 0..10 { break; } }\n    |       --- first declared here\n LL |     { 'fl: loop { break; } }\n    |       ^^^ label `'fl` already in scope\n \n warning: label name `'lf` shadows a label name that is already in scope\n-  --> $DIR/loops-reject-duplicate-labels-2.rs:16:7\n+  --> $DIR/loops-reject-duplicate-labels-2.rs:15:7\n    |\n LL |     { 'lf: loop { break; } }\n    |       --- first declared here\n LL |     { 'lf: for _ in 0..10 { break; } }\n    |       ^^^ label `'lf` already in scope\n \n warning: label name `'wl` shadows a label name that is already in scope\n-  --> $DIR/loops-reject-duplicate-labels-2.rs:18:7\n+  --> $DIR/loops-reject-duplicate-labels-2.rs:17:7\n    |\n LL |     { 'wl: while 2 > 1 { break; } }\n    |       --- first declared here\n LL |     { 'wl: loop { break; } }\n    |       ^^^ label `'wl` already in scope\n \n warning: label name `'lw` shadows a label name that is already in scope\n-  --> $DIR/loops-reject-duplicate-labels-2.rs:20:7\n+  --> $DIR/loops-reject-duplicate-labels-2.rs:19:7\n    |\n LL |     { 'lw: loop { break; } }\n    |       --- first declared here\n LL |     { 'lw: while 2 > 1 { break; } }\n    |       ^^^ label `'lw` already in scope\n \n warning: label name `'fw` shadows a label name that is already in scope\n-  --> $DIR/loops-reject-duplicate-labels-2.rs:22:7\n+  --> $DIR/loops-reject-duplicate-labels-2.rs:21:7\n    |\n LL |     { 'fw: for _ in 0..10 { break; } }\n    |       --- first declared here\n LL |     { 'fw: while 2 > 1 { break; } }\n    |       ^^^ label `'fw` already in scope\n \n warning: label name `'wf` shadows a label name that is already in scope\n-  --> $DIR/loops-reject-duplicate-labels-2.rs:24:7\n+  --> $DIR/loops-reject-duplicate-labels-2.rs:23:7\n    |\n LL |     { 'wf: while 2 > 1 { break; } }\n    |       --- first declared here\n LL |     { 'wf: for _ in 0..10 { break; } }\n    |       ^^^ label `'wf` already in scope\n \n warning: label name `'tl` shadows a label name that is already in scope\n-  --> $DIR/loops-reject-duplicate-labels-2.rs:26:7\n+  --> $DIR/loops-reject-duplicate-labels-2.rs:25:7\n    |\n LL |     { 'tl: while let Some(_) = None::<i32> { break; } }\n    |       --- first declared here\n LL |     { 'tl: loop { break; } }\n    |       ^^^ label `'tl` already in scope\n \n warning: label name `'lt` shadows a label name that is already in scope\n-  --> $DIR/loops-reject-duplicate-labels-2.rs:28:7\n+  --> $DIR/loops-reject-duplicate-labels-2.rs:27:7\n    |\n LL |     { 'lt: loop { break; } }\n    |       --- first declared here"}, {"sha": "d9334ce3857184a641e31d87b3e7abaeb13b0e22", "filename": "src/test/ui/loops/loops-reject-duplicate-labels.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fui%2Floops%2Floops-reject-duplicate-labels.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fui%2Floops%2Floops-reject-duplicate-labels.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Floops%2Floops-reject-duplicate-labels.rs?ref=3ea62cb5d19846b44172d861ae231c8c09322800", "patch": "@@ -1,6 +1,5 @@\n // check-pass\n \n-// ignore-tidy-linelength\n \n // Issue #21633: reject duplicate loop labels in function bodies.\n // This is testing the exact cases that are in the issue description."}, {"sha": "5bdf64849f30554935a216f7cf0adfff228a8b63", "filename": "src/test/ui/loops/loops-reject-duplicate-labels.stderr", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fui%2Floops%2Floops-reject-duplicate-labels.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fui%2Floops%2Floops-reject-duplicate-labels.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Floops%2Floops-reject-duplicate-labels.stderr?ref=3ea62cb5d19846b44172d861ae231c8c09322800", "patch": "@@ -1,61 +1,61 @@\n warning: label name `'fl` shadows a label name that is already in scope\n-  --> $DIR/loops-reject-duplicate-labels.rs:11:5\n+  --> $DIR/loops-reject-duplicate-labels.rs:10:5\n    |\n LL |     'fl: for _ in 0..10 { break; }\n    |     --- first declared here\n LL |     'fl: loop { break; }\n    |     ^^^ label `'fl` already in scope\n \n warning: label name `'lf` shadows a label name that is already in scope\n-  --> $DIR/loops-reject-duplicate-labels.rs:14:5\n+  --> $DIR/loops-reject-duplicate-labels.rs:13:5\n    |\n LL |     'lf: loop { break; }\n    |     --- first declared here\n LL |     'lf: for _ in 0..10 { break; }\n    |     ^^^ label `'lf` already in scope\n \n warning: label name `'wl` shadows a label name that is already in scope\n-  --> $DIR/loops-reject-duplicate-labels.rs:16:5\n+  --> $DIR/loops-reject-duplicate-labels.rs:15:5\n    |\n LL |     'wl: while 2 > 1 { break; }\n    |     --- first declared here\n LL |     'wl: loop { break; }\n    |     ^^^ label `'wl` already in scope\n \n warning: label name `'lw` shadows a label name that is already in scope\n-  --> $DIR/loops-reject-duplicate-labels.rs:18:5\n+  --> $DIR/loops-reject-duplicate-labels.rs:17:5\n    |\n LL |     'lw: loop { break; }\n    |     --- first declared here\n LL |     'lw: while 2 > 1 { break; }\n    |     ^^^ label `'lw` already in scope\n \n warning: label name `'fw` shadows a label name that is already in scope\n-  --> $DIR/loops-reject-duplicate-labels.rs:20:5\n+  --> $DIR/loops-reject-duplicate-labels.rs:19:5\n    |\n LL |     'fw: for _ in 0..10 { break; }\n    |     --- first declared here\n LL |     'fw: while 2 > 1 { break; }\n    |     ^^^ label `'fw` already in scope\n \n warning: label name `'wf` shadows a label name that is already in scope\n-  --> $DIR/loops-reject-duplicate-labels.rs:22:5\n+  --> $DIR/loops-reject-duplicate-labels.rs:21:5\n    |\n LL |     'wf: while 2 > 1 { break; }\n    |     --- first declared here\n LL |     'wf: for _ in 0..10 { break; }\n    |     ^^^ label `'wf` already in scope\n \n warning: label name `'tl` shadows a label name that is already in scope\n-  --> $DIR/loops-reject-duplicate-labels.rs:24:5\n+  --> $DIR/loops-reject-duplicate-labels.rs:23:5\n    |\n LL |     'tl: while let Some(_) = None::<i32> { break; }\n    |     --- first declared here\n LL |     'tl: loop { break; }\n    |     ^^^ label `'tl` already in scope\n \n warning: label name `'lt` shadows a label name that is already in scope\n-  --> $DIR/loops-reject-duplicate-labels.rs:26:5\n+  --> $DIR/loops-reject-duplicate-labels.rs:25:5\n    |\n LL |     'lt: loop { break; }\n    |     --- first declared here"}, {"sha": "f089f0fda4e7743389fc2b76e7755ba3dd1e5e5a", "filename": "src/test/ui/macros/macro-or-patterns-back-compat.fixed", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fui%2Fmacros%2Fmacro-or-patterns-back-compat.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fui%2Fmacros%2Fmacro-or-patterns-back-compat.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmacros%2Fmacro-or-patterns-back-compat.fixed?ref=3ea62cb5d19846b44172d861ae231c8c09322800", "patch": "@@ -1,4 +1,3 @@\n-// ignore-tidy-linelength\n // run-rustfix\n \n #![feature(edition_macro_pats)]"}, {"sha": "0252581d5f1684c3b8baef2027aeff57de06d29c", "filename": "src/test/ui/macros/macro-or-patterns-back-compat.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fui%2Fmacros%2Fmacro-or-patterns-back-compat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fui%2Fmacros%2Fmacro-or-patterns-back-compat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmacros%2Fmacro-or-patterns-back-compat.rs?ref=3ea62cb5d19846b44172d861ae231c8c09322800", "patch": "@@ -1,4 +1,3 @@\n-// ignore-tidy-linelength\n // run-rustfix\n \n #![feature(edition_macro_pats)]"}, {"sha": "d8f19fa580779b3655d35c2546bb0e57de156794", "filename": "src/test/ui/macros/macro-or-patterns-back-compat.stderr", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fui%2Fmacros%2Fmacro-or-patterns-back-compat.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fui%2Fmacros%2Fmacro-or-patterns-back-compat.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmacros%2Fmacro-or-patterns-back-compat.stderr?ref=3ea62cb5d19846b44172d861ae231c8c09322800", "patch": "@@ -1,29 +1,29 @@\n error: the meaning of the `pat` fragment specifier is changing in Rust 2021, which may affect this macro\n-  --> $DIR/macro-or-patterns-back-compat.rs:7:21\n+  --> $DIR/macro-or-patterns-back-compat.rs:6:21\n    |\n LL | macro_rules! foo { ($x:pat | $y:pat) => {} }\n    |                     ^^^^^^ help: use pat2015 to preserve semantics: `$x:pat2015`\n    |\n note: the lint level is defined here\n-  --> $DIR/macro-or-patterns-back-compat.rs:5:9\n+  --> $DIR/macro-or-patterns-back-compat.rs:4:9\n    |\n LL | #![deny(or_patterns_back_compat)]\n    |         ^^^^^^^^^^^^^^^^^^^^^^^\n \n error: the meaning of the `pat` fragment specifier is changing in Rust 2021, which may affect this macro\n-  --> $DIR/macro-or-patterns-back-compat.rs:8:23\n+  --> $DIR/macro-or-patterns-back-compat.rs:7:23\n    |\n LL | macro_rules! bar { ($($x:pat)+ | $($y:pat)+) => {} }\n    |                       ^^^^^^ help: use pat2015 to preserve semantics: `$x:pat2015`\n \n error: the meaning of the `pat` fragment specifier is changing in Rust 2021, which may affect this macro\n-  --> $DIR/macro-or-patterns-back-compat.rs:11:21\n+  --> $DIR/macro-or-patterns-back-compat.rs:10:21\n    |\n LL | macro_rules! ogg { ($x:pat | $y:pat2015) => {} }\n    |                     ^^^^^^ help: use pat2015 to preserve semantics: `$x:pat2015`\n \n error: the meaning of the `pat` fragment specifier is changing in Rust 2021, which may affect this macro\n-  --> $DIR/macro-or-patterns-back-compat.rs:13:26\n+  --> $DIR/macro-or-patterns-back-compat.rs:12:26\n    |\n LL |     ( $expr:expr , $( $( $pat:pat )|+ => $expr_arm:expr ),+ ) => {\n    |                          ^^^^^^^^ help: use pat2015 to preserve semantics: `$pat:pat2015`"}, {"sha": "af1738512527c38b1a439242b8aeccc29333aad1", "filename": "src/test/ui/methods/method-call-lifetime-args-fail.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fui%2Fmethods%2Fmethod-call-lifetime-args-fail.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fui%2Fmethods%2Fmethod-call-lifetime-args-fail.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmethods%2Fmethod-call-lifetime-args-fail.rs?ref=3ea62cb5d19846b44172d861ae231c8c09322800", "patch": "@@ -1,5 +1,3 @@\n-// ignore-tidy-linelength\n-\n struct S;\n \n impl S {"}, {"sha": "2907309c27c7b26203d37d63e7256a02885f362d", "filename": "src/test/ui/methods/method-call-lifetime-args-fail.stderr", "status": "modified", "additions": 36, "deletions": 36, "changes": 72, "blob_url": "https://github.com/rust-lang/rust/blob/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fui%2Fmethods%2Fmethod-call-lifetime-args-fail.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fui%2Fmethods%2Fmethod-call-lifetime-args-fail.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmethods%2Fmethod-call-lifetime-args-fail.stderr?ref=3ea62cb5d19846b44172d861ae231c8c09322800", "patch": "@@ -1,13 +1,13 @@\n error[E0107]: this associated function takes 2 lifetime arguments but only 1 lifetime argument was supplied\n-  --> $DIR/method-call-lifetime-args-fail.rs:18:7\n+  --> $DIR/method-call-lifetime-args-fail.rs:16:7\n    |\n LL |     S.early::<'static>();\n    |       ^^^^^   ------- supplied 1 lifetime argument\n    |       |\n    |       expected 2 lifetime arguments\n    |\n note: associated function defined here, with 2 lifetime parameters: `'a`, `'b`\n-  --> $DIR/method-call-lifetime-args-fail.rs:8:8\n+  --> $DIR/method-call-lifetime-args-fail.rs:6:8\n    |\n LL |     fn early<'a, 'b>(self) -> (&'a u8, &'b u8) { loop {} }\n    |        ^^^^^ --  --\n@@ -17,197 +17,197 @@ LL |     S.early::<'static, 'b>();\n    |                      ^^^^\n \n error[E0107]: this associated function takes 2 lifetime arguments but 3 lifetime arguments were supplied\n-  --> $DIR/method-call-lifetime-args-fail.rs:20:7\n+  --> $DIR/method-call-lifetime-args-fail.rs:18:7\n    |\n LL |     S.early::<'static, 'static, 'static>();\n    |       ^^^^^                   --------- help: remove this lifetime argument\n    |       |\n    |       expected 2 lifetime arguments\n    |\n note: associated function defined here, with 2 lifetime parameters: `'a`, `'b`\n-  --> $DIR/method-call-lifetime-args-fail.rs:8:8\n+  --> $DIR/method-call-lifetime-args-fail.rs:6:8\n    |\n LL |     fn early<'a, 'b>(self) -> (&'a u8, &'b u8) { loop {} }\n    |        ^^^^^ --  --\n \n error: cannot specify lifetime arguments explicitly if late bound lifetime parameters are present\n-  --> $DIR/method-call-lifetime-args-fail.rs:29:15\n+  --> $DIR/method-call-lifetime-args-fail.rs:27:15\n    |\n LL |     S::late::<'static>(S, &0, &0);\n    |               ^^^^^^^\n    |\n note: the late bound lifetime parameter is introduced here\n-  --> $DIR/method-call-lifetime-args-fail.rs:6:13\n+  --> $DIR/method-call-lifetime-args-fail.rs:4:13\n    |\n LL |     fn late<'a, 'b>(self, _: &'a u8, _: &'b u8) {}\n    |             ^^\n \n error: cannot specify lifetime arguments explicitly if late bound lifetime parameters are present\n-  --> $DIR/method-call-lifetime-args-fail.rs:31:15\n+  --> $DIR/method-call-lifetime-args-fail.rs:29:15\n    |\n LL |     S::late::<'static, 'static>(S, &0, &0);\n    |               ^^^^^^^\n    |\n note: the late bound lifetime parameter is introduced here\n-  --> $DIR/method-call-lifetime-args-fail.rs:6:13\n+  --> $DIR/method-call-lifetime-args-fail.rs:4:13\n    |\n LL |     fn late<'a, 'b>(self, _: &'a u8, _: &'b u8) {}\n    |             ^^\n \n error: cannot specify lifetime arguments explicitly if late bound lifetime parameters are present\n-  --> $DIR/method-call-lifetime-args-fail.rs:33:15\n+  --> $DIR/method-call-lifetime-args-fail.rs:31:15\n    |\n LL |     S::late::<'static, 'static, 'static>(S, &0, &0);\n    |               ^^^^^^^\n    |\n note: the late bound lifetime parameter is introduced here\n-  --> $DIR/method-call-lifetime-args-fail.rs:6:13\n+  --> $DIR/method-call-lifetime-args-fail.rs:4:13\n    |\n LL |     fn late<'a, 'b>(self, _: &'a u8, _: &'b u8) {}\n    |             ^^\n \n error: cannot specify lifetime arguments explicitly if late bound lifetime parameters are present\n-  --> $DIR/method-call-lifetime-args-fail.rs:36:21\n+  --> $DIR/method-call-lifetime-args-fail.rs:34:21\n    |\n LL |     S::late_early::<'static, 'static>(S, &0);\n    |                     ^^^^^^^\n    |\n note: the late bound lifetime parameter is introduced here\n-  --> $DIR/method-call-lifetime-args-fail.rs:9:19\n+  --> $DIR/method-call-lifetime-args-fail.rs:7:19\n    |\n LL |     fn late_early<'a, 'b>(self, _: &'a u8) -> &'b u8 { loop {} }\n    |                   ^^\n \n error: cannot specify lifetime arguments explicitly if late bound lifetime parameters are present\n-  --> $DIR/method-call-lifetime-args-fail.rs:38:21\n+  --> $DIR/method-call-lifetime-args-fail.rs:36:21\n    |\n LL |     S::late_early::<'static, 'static, 'static>(S, &0);\n    |                     ^^^^^^^\n    |\n note: the late bound lifetime parameter is introduced here\n-  --> $DIR/method-call-lifetime-args-fail.rs:9:19\n+  --> $DIR/method-call-lifetime-args-fail.rs:7:19\n    |\n LL |     fn late_early<'a, 'b>(self, _: &'a u8) -> &'b u8 { loop {} }\n    |                   ^^\n \n error: cannot specify lifetime arguments explicitly if late bound lifetime parameters are present\n-  --> $DIR/method-call-lifetime-args-fail.rs:42:24\n+  --> $DIR/method-call-lifetime-args-fail.rs:40:24\n    |\n LL |     S::late_implicit::<'static>(S, &0, &0);\n    |                        ^^^^^^^\n    |\n note: the late bound lifetime parameter is introduced here\n-  --> $DIR/method-call-lifetime-args-fail.rs:7:31\n+  --> $DIR/method-call-lifetime-args-fail.rs:5:31\n    |\n LL |     fn late_implicit(self, _: &u8, _: &u8) {}\n    |                               ^\n \n error: cannot specify lifetime arguments explicitly if late bound lifetime parameters are present\n-  --> $DIR/method-call-lifetime-args-fail.rs:44:24\n+  --> $DIR/method-call-lifetime-args-fail.rs:42:24\n    |\n LL |     S::late_implicit::<'static, 'static>(S, &0, &0);\n    |                        ^^^^^^^\n    |\n note: the late bound lifetime parameter is introduced here\n-  --> $DIR/method-call-lifetime-args-fail.rs:7:31\n+  --> $DIR/method-call-lifetime-args-fail.rs:5:31\n    |\n LL |     fn late_implicit(self, _: &u8, _: &u8) {}\n    |                               ^\n \n error: cannot specify lifetime arguments explicitly if late bound lifetime parameters are present\n-  --> $DIR/method-call-lifetime-args-fail.rs:46:24\n+  --> $DIR/method-call-lifetime-args-fail.rs:44:24\n    |\n LL |     S::late_implicit::<'static, 'static, 'static>(S, &0, &0);\n    |                        ^^^^^^^\n    |\n note: the late bound lifetime parameter is introduced here\n-  --> $DIR/method-call-lifetime-args-fail.rs:7:31\n+  --> $DIR/method-call-lifetime-args-fail.rs:5:31\n    |\n LL |     fn late_implicit(self, _: &u8, _: &u8) {}\n    |                               ^\n \n error: cannot specify lifetime arguments explicitly if late bound lifetime parameters are present\n-  --> $DIR/method-call-lifetime-args-fail.rs:49:30\n+  --> $DIR/method-call-lifetime-args-fail.rs:47:30\n    |\n LL |     S::late_implicit_early::<'static, 'static>(S, &0);\n    |                              ^^^^^^^\n    |\n note: the late bound lifetime parameter is introduced here\n-  --> $DIR/method-call-lifetime-args-fail.rs:10:41\n+  --> $DIR/method-call-lifetime-args-fail.rs:8:41\n    |\n LL |     fn late_implicit_early<'b>(self, _: &u8) -> &'b u8 { loop {} }\n    |                                         ^\n \n error: cannot specify lifetime arguments explicitly if late bound lifetime parameters are present\n-  --> $DIR/method-call-lifetime-args-fail.rs:51:30\n+  --> $DIR/method-call-lifetime-args-fail.rs:49:30\n    |\n LL |     S::late_implicit_early::<'static, 'static, 'static>(S, &0);\n    |                              ^^^^^^^\n    |\n note: the late bound lifetime parameter is introduced here\n-  --> $DIR/method-call-lifetime-args-fail.rs:10:41\n+  --> $DIR/method-call-lifetime-args-fail.rs:8:41\n    |\n LL |     fn late_implicit_early<'b>(self, _: &u8) -> &'b u8 { loop {} }\n    |                                         ^\n \n error: cannot specify lifetime arguments explicitly if late bound lifetime parameters are present\n-  --> $DIR/method-call-lifetime-args-fail.rs:54:35\n+  --> $DIR/method-call-lifetime-args-fail.rs:52:35\n    |\n LL |     S::late_implicit_self_early::<'static, 'static>(&S);\n    |                                   ^^^^^^^\n    |\n note: the late bound lifetime parameter is introduced here\n-  --> $DIR/method-call-lifetime-args-fail.rs:11:37\n+  --> $DIR/method-call-lifetime-args-fail.rs:9:37\n    |\n LL |     fn late_implicit_self_early<'b>(&self) -> &'b u8 { loop {} }\n    |                                     ^\n \n error: cannot specify lifetime arguments explicitly if late bound lifetime parameters are present\n-  --> $DIR/method-call-lifetime-args-fail.rs:56:35\n+  --> $DIR/method-call-lifetime-args-fail.rs:54:35\n    |\n LL |     S::late_implicit_self_early::<'static, 'static, 'static>(&S);\n    |                                   ^^^^^^^\n    |\n note: the late bound lifetime parameter is introduced here\n-  --> $DIR/method-call-lifetime-args-fail.rs:11:37\n+  --> $DIR/method-call-lifetime-args-fail.rs:9:37\n    |\n LL |     fn late_implicit_self_early<'b>(&self) -> &'b u8 { loop {} }\n    |                                     ^\n \n error: cannot specify lifetime arguments explicitly if late bound lifetime parameters are present\n-  --> $DIR/method-call-lifetime-args-fail.rs:59:28\n+  --> $DIR/method-call-lifetime-args-fail.rs:57:28\n    |\n LL |     S::late_unused_early::<'static, 'static>(S);\n    |                            ^^^^^^^\n    |\n note: the late bound lifetime parameter is introduced here\n-  --> $DIR/method-call-lifetime-args-fail.rs:12:26\n+  --> $DIR/method-call-lifetime-args-fail.rs:10:26\n    |\n LL |     fn late_unused_early<'a, 'b>(self) -> &'b u8 { loop {} }\n    |                          ^^\n \n error: cannot specify lifetime arguments explicitly if late bound lifetime parameters are present\n-  --> $DIR/method-call-lifetime-args-fail.rs:61:28\n+  --> $DIR/method-call-lifetime-args-fail.rs:59:28\n    |\n LL |     S::late_unused_early::<'static, 'static, 'static>(S);\n    |                            ^^^^^^^\n    |\n note: the late bound lifetime parameter is introduced here\n-  --> $DIR/method-call-lifetime-args-fail.rs:12:26\n+  --> $DIR/method-call-lifetime-args-fail.rs:10:26\n    |\n LL |     fn late_unused_early<'a, 'b>(self) -> &'b u8 { loop {} }\n    |                          ^^\n \n error[E0107]: this associated function takes 2 lifetime arguments but only 1 lifetime argument was supplied\n-  --> $DIR/method-call-lifetime-args-fail.rs:65:8\n+  --> $DIR/method-call-lifetime-args-fail.rs:63:8\n    |\n LL |     S::early::<'static>(S);\n    |        ^^^^^   ------- supplied 1 lifetime argument\n    |        |\n    |        expected 2 lifetime arguments\n    |\n note: associated function defined here, with 2 lifetime parameters: `'a`, `'b`\n-  --> $DIR/method-call-lifetime-args-fail.rs:8:8\n+  --> $DIR/method-call-lifetime-args-fail.rs:6:8\n    |\n LL |     fn early<'a, 'b>(self) -> (&'a u8, &'b u8) { loop {} }\n    |        ^^^^^ --  --\n@@ -217,15 +217,15 @@ LL |     S::early::<'static, 'b>(S);\n    |                       ^^^^\n \n error[E0107]: this associated function takes 2 lifetime arguments but 3 lifetime arguments were supplied\n-  --> $DIR/method-call-lifetime-args-fail.rs:67:8\n+  --> $DIR/method-call-lifetime-args-fail.rs:65:8\n    |\n LL |     S::early::<'static, 'static, 'static>(S);\n    |        ^^^^^                   --------- help: remove this lifetime argument\n    |        |\n    |        expected 2 lifetime arguments\n    |\n note: associated function defined here, with 2 lifetime parameters: `'a`, `'b`\n-  --> $DIR/method-call-lifetime-args-fail.rs:8:8\n+  --> $DIR/method-call-lifetime-args-fail.rs:6:8\n    |\n LL |     fn early<'a, 'b>(self) -> (&'a u8, &'b u8) { loop {} }\n    |        ^^^^^ --  --"}, {"sha": "dcdedf7d4c51345cf1c04b8dc3387e75aa60e209", "filename": "src/test/ui/nll/issue-51268.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fui%2Fnll%2Fissue-51268.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fui%2Fnll%2Fissue-51268.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fissue-51268.rs?ref=3ea62cb5d19846b44172d861ae231c8c09322800", "patch": "@@ -1,5 +1,3 @@\n-// ignore-tidy-linelength\n-\n struct Bar;\n \n impl Bar {"}, {"sha": "e6dadc9f6ce3c9c746e8d45d2b53d678336ac481", "filename": "src/test/ui/nll/issue-51268.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fui%2Fnll%2Fissue-51268.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fui%2Fnll%2Fissue-51268.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fissue-51268.stderr?ref=3ea62cb5d19846b44172d861ae231c8c09322800", "patch": "@@ -1,5 +1,5 @@\n error[E0502]: cannot borrow `self.thing` as mutable because it is also borrowed as immutable\n-  --> $DIR/issue-51268.rs:16:9\n+  --> $DIR/issue-51268.rs:14:9\n    |\n LL |           self.thing.bar(|| {\n    |           ^          --- -- immutable borrow occurs here"}, {"sha": "f15929334bb40a44c99253fd471a0aeed8538706", "filename": "src/test/ui/nll/issue-57100.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fui%2Fnll%2Fissue-57100.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fui%2Fnll%2Fissue-57100.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fissue-57100.rs?ref=3ea62cb5d19846b44172d861ae231c8c09322800", "patch": "@@ -1,6 +1,5 @@\n #![allow(unused)]\n \n-// ignore-tidy-linelength\n \n // This tests the error messages for borrows of union fields when the unions are embedded in other\n // structs or unions."}, {"sha": "523c3e8d0a2c20074e8a6d7a9455c193c61df702", "filename": "src/test/ui/nll/issue-57100.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fui%2Fnll%2Fissue-57100.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fui%2Fnll%2Fissue-57100.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fissue-57100.stderr?ref=3ea62cb5d19846b44172d861ae231c8c09322800", "patch": "@@ -1,5 +1,5 @@\n error[E0502]: cannot borrow `r.r2_union.f3_union` (via `r.r2_union.f3_union.s2_leaf.l1_u8`) as immutable because it is also borrowed as mutable (via `r.r2_union.f3_union.s1_leaf.l1_u8`)\n-  --> $DIR/issue-57100.rs:43:20\n+  --> $DIR/issue-57100.rs:42:20\n    |\n LL |         let mref = &mut r.r2_union.f3_union.s1_leaf.l1_u8;\n    |                    -------------------------------------- mutable borrow occurs here (via `r.r2_union.f3_union.s1_leaf.l1_u8`)\n@@ -13,7 +13,7 @@ LL |         println!(\"{} {}\", mref, nref)\n    = note: `r.r2_union.f3_union.s2_leaf.l1_u8` is a field of the union `Second`, so it overlaps the field `r.r2_union.f3_union.s1_leaf.l1_u8`\n \n error[E0502]: cannot borrow `r.r2_union` (via `r.r2_union.f1_leaf.l1_u8`) as immutable because it is also borrowed as mutable (via `r.r2_union.f2_leaf.l1_u8`)\n-  --> $DIR/issue-57100.rs:61:20\n+  --> $DIR/issue-57100.rs:60:20\n    |\n LL |         let mref = &mut r.r2_union.f2_leaf.l1_u8;\n    |                    ----------------------------- mutable borrow occurs here (via `r.r2_union.f2_leaf.l1_u8`)"}, {"sha": "134e7d420e3eafbed771ce5976b37f8f98ed591e", "filename": "src/test/ui/non-ice-error-on-worker-io-fail.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fui%2Fnon-ice-error-on-worker-io-fail.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fui%2Fnon-ice-error-on-worker-io-fail.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnon-ice-error-on-worker-io-fail.rs?ref=3ea62cb5d19846b44172d861ae231c8c09322800", "patch": "@@ -24,7 +24,6 @@\n // On Linux, we get an error like the below\n // normalize-stderr-test \"couldn't create a temp dir.*\" -> \"io error modifying /does-not-exist/\"\n \n-// ignore-tidy-linelength\n // ignore-windows - this is a unix-specific test\n // ignore-emscripten - the file-system issues do not replicate here\n // ignore-wasm - the file-system issues do not replicate here"}, {"sha": "7ec658ebcf2e9cc21b4347798b196b8f6e4fea73", "filename": "src/test/ui/panic-runtime/two-panic-runtimes.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fui%2Fpanic-runtime%2Ftwo-panic-runtimes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fui%2Fpanic-runtime%2Ftwo-panic-runtimes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fpanic-runtime%2Ftwo-panic-runtimes.rs?ref=3ea62cb5d19846b44172d861ae231c8c09322800", "patch": "@@ -1,7 +1,6 @@\n // build-fail\n // dont-check-compiler-stderr\n // error-pattern:cannot link together two panic runtimes: panic_runtime_unwind and panic_runtime_unwind2\n-// ignore-tidy-linelength\n // aux-build:panic-runtime-unwind.rs\n // aux-build:panic-runtime-unwind2.rs\n // aux-build:panic-runtime-lang-items.rs"}, {"sha": "79e91879051c87a5c366b8a29478b78d2799dfa9", "filename": "src/test/ui/panic-runtime/unwind-tables-panic-required.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fui%2Fpanic-runtime%2Funwind-tables-panic-required.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fui%2Fpanic-runtime%2Funwind-tables-panic-required.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fpanic-runtime%2Funwind-tables-panic-required.rs?ref=3ea62cb5d19846b44172d861ae231c8c09322800", "patch": "@@ -3,7 +3,6 @@\n //\n // dont-check-compiler-stderr\n // compile-flags: -C panic=unwind -C force-unwind-tables=no\n-// ignore-tidy-linelength\n //\n // error-pattern: panic=unwind requires unwind tables, they cannot be disabled with `-C force-unwind-tables=no`.\n "}, {"sha": "3abb52b675a60ba1dbb33f1900d5e47cc79a4886", "filename": "src/test/ui/panic-runtime/unwind-tables-target-required.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fui%2Fpanic-runtime%2Funwind-tables-target-required.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fui%2Fpanic-runtime%2Funwind-tables-target-required.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fpanic-runtime%2Funwind-tables-target-required.rs?ref=3ea62cb5d19846b44172d861ae231c8c09322800", "patch": "@@ -3,7 +3,6 @@\n //\n // only-x86_64-windows-msvc\n // compile-flags: -C force-unwind-tables=no\n-// ignore-tidy-linelength\n //\n // error-pattern: target requires unwind tables, they cannot be disabled with `-C force-unwind-tables=no`.\n "}, {"sha": "87ba230eab556905450bcfd7ea25876a45d4374b", "filename": "src/test/ui/parser/duplicate-visibility.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fui%2Fparser%2Fduplicate-visibility.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fui%2Fparser%2Fduplicate-visibility.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fduplicate-visibility.rs?ref=3ea62cb5d19846b44172d861ae231c8c09322800", "patch": "@@ -1,5 +1,3 @@\n-// ignore-tidy-linelength\n-\n fn main() {}\n \n extern \"C\" {"}, {"sha": "d9815fc7395b4f3ebbfef2043f9b8a9e3e6efcae", "filename": "src/test/ui/parser/duplicate-visibility.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fui%2Fparser%2Fduplicate-visibility.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fui%2Fparser%2Fduplicate-visibility.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fduplicate-visibility.stderr?ref=3ea62cb5d19846b44172d861ae231c8c09322800", "patch": "@@ -1,5 +1,5 @@\n error: expected one of `(`, `async`, `const`, `default`, `extern`, `fn`, `pub`, `unsafe`, or `use`, found keyword `pub`\n-  --> $DIR/duplicate-visibility.rs:6:9\n+  --> $DIR/duplicate-visibility.rs:4:9\n    |\n LL | extern \"C\" {\n    |            - while parsing this item list starting here"}, {"sha": "aed428bfc2a79ce2675112d286dd888d9241f704", "filename": "src/test/ui/parser/issue-66357-unexpected-unreachable.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fui%2Fparser%2Fissue-66357-unexpected-unreachable.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fui%2Fparser%2Fissue-66357-unexpected-unreachable.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fissue-66357-unexpected-unreachable.rs?ref=3ea62cb5d19846b44172d861ae231c8c09322800", "patch": "@@ -1,5 +1,3 @@\n-// ignore-tidy-linelength\n-\n // The problem in #66357 was that the call trace:\n //\n // - parse_fn_block_decl"}, {"sha": "332711df72f3c4b4cd90ea485cdf2e5b48193f55", "filename": "src/test/ui/parser/issue-66357-unexpected-unreachable.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fui%2Fparser%2Fissue-66357-unexpected-unreachable.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fui%2Fparser%2Fissue-66357-unexpected-unreachable.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fissue-66357-unexpected-unreachable.stderr?ref=3ea62cb5d19846b44172d861ae231c8c09322800", "patch": "@@ -1,11 +1,11 @@\n error: expected one of `,` or `:`, found `(`\n-  --> $DIR/issue-66357-unexpected-unreachable.rs:14:13\n+  --> $DIR/issue-66357-unexpected-unreachable.rs:12:13\n    |\n LL | fn f() { |[](* }\n    |             ^ expected one of `,` or `:`\n \n error: expected one of `&`, `(`, `)`, `-`, `...`, `..=`, `..`, `[`, `_`, `box`, `mut`, `ref`, `|`, identifier, or path, found `*`\n-  --> $DIR/issue-66357-unexpected-unreachable.rs:14:14\n+  --> $DIR/issue-66357-unexpected-unreachable.rs:12:14\n    |\n LL | fn f() { |[](* }\n    |             -^ help: `)` may belong here"}, {"sha": "868d2b227b74ca071bb5f5c6dc1dfac0ce9e40a4", "filename": "src/test/ui/parser/unicode-quote-chars.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fui%2Fparser%2Funicode-quote-chars.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fui%2Fparser%2Funicode-quote-chars.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Funicode-quote-chars.rs?ref=3ea62cb5d19846b44172d861ae231c8c09322800", "patch": "@@ -1,5 +1,3 @@\n-// ignore-tidy-linelength\n-\n fn main() {\n     println!(\u201chello world\u201d);\n     //~^ ERROR unknown start of token: \\u{201c}"}, {"sha": "04ea0c6e95f3987da93ac7683611254bfb57cba7", "filename": "src/test/ui/parser/unicode-quote-chars.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fui%2Fparser%2Funicode-quote-chars.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fui%2Fparser%2Funicode-quote-chars.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Funicode-quote-chars.stderr?ref=3ea62cb5d19846b44172d861ae231c8c09322800", "patch": "@@ -1,5 +1,5 @@\n error: unknown start of token: \\u{201c}\n-  --> $DIR/unicode-quote-chars.rs:4:14\n+  --> $DIR/unicode-quote-chars.rs:2:14\n    |\n LL |     println!(\u201chello world\u201d);\n    |              ^\n@@ -10,7 +10,7 @@ LL |     println!(\"hello world\");\n    |              ^^^^^^^^^^^^^\n \n error: unknown start of token: \\u{201d}\n-  --> $DIR/unicode-quote-chars.rs:4:26\n+  --> $DIR/unicode-quote-chars.rs:2:26\n    |\n LL |     println!(\u201chello world\u201d);\n    |                          ^\n@@ -21,7 +21,7 @@ LL |     println!(\u201chello world\");\n    |                          ^\n \n error: expected `,`, found `world`\n-  --> $DIR/unicode-quote-chars.rs:4:21\n+  --> $DIR/unicode-quote-chars.rs:2:21\n    |\n LL |     println!(\u201chello world\u201d);\n    |                     ^^^^^ expected `,`"}, {"sha": "7c9aa51e7484c6c34a99a673e6c214ea2b698600", "filename": "src/test/ui/pattern/usefulness/refutable-pattern-errors.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fui%2Fpattern%2Fusefulness%2Frefutable-pattern-errors.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fui%2Fpattern%2Fusefulness%2Frefutable-pattern-errors.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fpattern%2Fusefulness%2Frefutable-pattern-errors.rs?ref=3ea62cb5d19846b44172d861ae231c8c09322800", "patch": "@@ -1,5 +1,3 @@\n-// ignore-tidy-linelength\n-\n fn func((1, (Some(1), 2..=3)): (isize, (Option<isize>, isize))) { }\n //~^ ERROR refutable pattern in function argument: `(_, _)` not covered\n "}, {"sha": "74ec646e31cca27b5507217ca02b197c51fc2d0d", "filename": "src/test/ui/pattern/usefulness/refutable-pattern-errors.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fui%2Fpattern%2Fusefulness%2Frefutable-pattern-errors.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fui%2Fpattern%2Fusefulness%2Frefutable-pattern-errors.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fpattern%2Fusefulness%2Frefutable-pattern-errors.stderr?ref=3ea62cb5d19846b44172d861ae231c8c09322800", "patch": "@@ -1,13 +1,13 @@\n error[E0005]: refutable pattern in function argument: `(_, _)` not covered\n-  --> $DIR/refutable-pattern-errors.rs:3:9\n+  --> $DIR/refutable-pattern-errors.rs:1:9\n    |\n LL | fn func((1, (Some(1), 2..=3)): (isize, (Option<isize>, isize))) { }\n    |         ^^^^^^^^^^^^^^^^^^^^^ pattern `(_, _)` not covered\n    |\n    = note: the matched value is of type `(isize, (Option<isize>, isize))`\n \n error[E0005]: refutable pattern in local binding: `(i32::MIN..=0_i32, _)` and `(2_i32..=i32::MAX, _)` not covered\n-  --> $DIR/refutable-pattern-errors.rs:7:9\n+  --> $DIR/refutable-pattern-errors.rs:5:9\n    |\n LL |     let (1, (Some(1), 2..=3)) = (1, (None, 2));\n    |         ^^^^^^^^^^^^^^^^^^^^^ patterns `(i32::MIN..=0_i32, _)` and `(2_i32..=i32::MAX, _)` not covered"}, {"sha": "c07aeed99c74af9f9bc65cf436f6cbdba0a6c053", "filename": "src/test/ui/privacy/associated-item-privacy-trait.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fui%2Fprivacy%2Fassociated-item-privacy-trait.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fui%2Fprivacy%2Fassociated-item-privacy-trait.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fprivacy%2Fassociated-item-privacy-trait.rs?ref=3ea62cb5d19846b44172d861ae231c8c09322800", "patch": "@@ -1,5 +1,3 @@\n-// ignore-tidy-linelength\n-\n #![feature(decl_macro, associated_type_defaults)]\n #![allow(unused, private_in_public)]\n "}, {"sha": "e36ce8d541500c5e041ec034f73354ae01042075", "filename": "src/test/ui/privacy/associated-item-privacy-trait.stderr", "status": "modified", "additions": 30, "deletions": 30, "changes": 60, "blob_url": "https://github.com/rust-lang/rust/blob/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fui%2Fprivacy%2Fassociated-item-privacy-trait.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fui%2Fprivacy%2Fassociated-item-privacy-trait.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fprivacy%2Fassociated-item-privacy-trait.stderr?ref=3ea62cb5d19846b44172d861ae231c8c09322800", "patch": "@@ -1,5 +1,5 @@\n error: type `for<'r> fn(&'r priv_trait::Pub) {<priv_trait::Pub as PrivTr>::method}` is private\n-  --> $DIR/associated-item-privacy-trait.rs:17:21\n+  --> $DIR/associated-item-privacy-trait.rs:15:21\n    |\n LL |         let value = <Pub as PrivTr>::method;\n    |                     ^^^^^^^^^^^^^^^^^^^^^^^ private type\n@@ -10,7 +10,7 @@ LL |     priv_trait::mac!();\n    = note: this error originates in a macro (in Nightly builds, run with -Z macro-backtrace for more info)\n \n error: type `for<'r> fn(&'r priv_trait::Pub) {<priv_trait::Pub as PrivTr>::method}` is private\n-  --> $DIR/associated-item-privacy-trait.rs:19:9\n+  --> $DIR/associated-item-privacy-trait.rs:17:9\n    |\n LL |         value;\n    |         ^^^^^ private type\n@@ -21,7 +21,7 @@ LL |     priv_trait::mac!();\n    = note: this error originates in a macro (in Nightly builds, run with -Z macro-backtrace for more info)\n \n error: type `for<'r> fn(&'r Self) {<Self as PrivTr>::method}` is private\n-  --> $DIR/associated-item-privacy-trait.rs:21:13\n+  --> $DIR/associated-item-privacy-trait.rs:19:13\n    |\n LL |         Pub.method();\n    |             ^^^^^^ private type\n@@ -32,7 +32,7 @@ LL |     priv_trait::mac!();\n    = note: this error originates in a macro (in Nightly builds, run with -Z macro-backtrace for more info)\n \n error: associated constant `<Pub as PrivTr>::CONST` is private\n-  --> $DIR/associated-item-privacy-trait.rs:23:9\n+  --> $DIR/associated-item-privacy-trait.rs:21:9\n    |\n LL |         <Pub as PrivTr>::CONST;\n    |         ^^^^^^^^^^^^^^^^^^^^^^ private associated constant\n@@ -43,7 +43,7 @@ LL |     priv_trait::mac!();\n    = note: this error originates in a macro (in Nightly builds, run with -Z macro-backtrace for more info)\n \n error: associated type `<Pub as PrivTr>::AssocTy` is private\n-  --> $DIR/associated-item-privacy-trait.rs:25:16\n+  --> $DIR/associated-item-privacy-trait.rs:23:16\n    |\n LL |         let _: <Pub as PrivTr>::AssocTy;\n    |                ^^^^^^^^^^^^^^^^^^^^^^^^ private associated type\n@@ -54,7 +54,7 @@ LL |     priv_trait::mac!();\n    = note: this error originates in a macro (in Nightly builds, run with -Z macro-backtrace for more info)\n \n error: trait `PrivTr` is private\n-  --> $DIR/associated-item-privacy-trait.rs:27:34\n+  --> $DIR/associated-item-privacy-trait.rs:25:34\n    |\n LL |         pub type InSignatureTy = <Pub as PrivTr>::AssocTy;\n    |                                  ^^^^^^^^^^^^^^^^^^^^^^^^ private trait\n@@ -65,7 +65,7 @@ LL |     priv_trait::mac!();\n    = note: this error originates in a macro (in Nightly builds, run with -Z macro-backtrace for more info)\n \n error: trait `PrivTr` is private\n-  --> $DIR/associated-item-privacy-trait.rs:29:34\n+  --> $DIR/associated-item-privacy-trait.rs:27:34\n    |\n LL |         pub trait InSignatureTr: PrivTr {}\n    |                                  ^^^^^^ private trait\n@@ -76,7 +76,7 @@ LL |     priv_trait::mac!();\n    = note: this error originates in a macro (in Nightly builds, run with -Z macro-backtrace for more info)\n \n error: trait `PrivTr` is private\n-  --> $DIR/associated-item-privacy-trait.rs:31:14\n+  --> $DIR/associated-item-privacy-trait.rs:29:14\n    |\n LL |         impl PrivTr for u8 {}\n    |              ^^^^^^ private trait\n@@ -87,7 +87,7 @@ LL |     priv_trait::mac!();\n    = note: this error originates in a macro (in Nightly builds, run with -Z macro-backtrace for more info)\n \n error: type `priv_signature::Priv` is private\n-  --> $DIR/associated-item-privacy-trait.rs:48:21\n+  --> $DIR/associated-item-privacy-trait.rs:46:21\n    |\n LL |         let value = <Pub as PubTr>::method;\n    |                     ^^^^^^^^^^^^^^^^^^^^^^ private type\n@@ -98,7 +98,7 @@ LL |     priv_signature::mac!();\n    = note: this error originates in a macro (in Nightly builds, run with -Z macro-backtrace for more info)\n \n error: type `priv_signature::Priv` is private\n-  --> $DIR/associated-item-privacy-trait.rs:50:9\n+  --> $DIR/associated-item-privacy-trait.rs:48:9\n    |\n LL |         value;\n    |         ^^^^^ private type\n@@ -109,7 +109,7 @@ LL |     priv_signature::mac!();\n    = note: this error originates in a macro (in Nightly builds, run with -Z macro-backtrace for more info)\n \n error: type `priv_signature::Priv` is private\n-  --> $DIR/associated-item-privacy-trait.rs:52:13\n+  --> $DIR/associated-item-privacy-trait.rs:50:13\n    |\n LL |         Pub.method(loop {});\n    |             ^^^^^^ private type\n@@ -120,7 +120,7 @@ LL |     priv_signature::mac!();\n    = note: this error originates in a macro (in Nightly builds, run with -Z macro-backtrace for more info)\n \n error: type `priv_substs::Priv` is private\n-  --> $DIR/associated-item-privacy-trait.rs:69:21\n+  --> $DIR/associated-item-privacy-trait.rs:67:21\n    |\n LL |         let value = <Pub as PubTr>::method::<Priv>;\n    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ private type\n@@ -131,7 +131,7 @@ LL |     priv_substs::mac!();\n    = note: this error originates in a macro (in Nightly builds, run with -Z macro-backtrace for more info)\n \n error: type `priv_substs::Priv` is private\n-  --> $DIR/associated-item-privacy-trait.rs:71:9\n+  --> $DIR/associated-item-privacy-trait.rs:69:9\n    |\n LL |         value;\n    |         ^^^^^ private type\n@@ -142,7 +142,7 @@ LL |     priv_substs::mac!();\n    = note: this error originates in a macro (in Nightly builds, run with -Z macro-backtrace for more info)\n \n error: type `priv_substs::Priv` is private\n-  --> $DIR/associated-item-privacy-trait.rs:73:9\n+  --> $DIR/associated-item-privacy-trait.rs:71:9\n    |\n LL |         Pub.method::<Priv>();\n    |         ^^^^^^^^^^^^^^^^^^^^ private type\n@@ -153,7 +153,7 @@ LL |     priv_substs::mac!();\n    = note: this error originates in a macro (in Nightly builds, run with -Z macro-backtrace for more info)\n \n error: type `priv_parent_substs::Priv` is private\n-  --> $DIR/associated-item-privacy-trait.rs:93:21\n+  --> $DIR/associated-item-privacy-trait.rs:91:21\n    |\n LL |         let value = <Pub as PubTr>::method;\n    |                     ^^^^^^^^^^^^^^^^^^^^^^ private type\n@@ -164,7 +164,7 @@ LL |     priv_parent_substs::mac!();\n    = note: this error originates in a macro (in Nightly builds, run with -Z macro-backtrace for more info)\n \n error: type `priv_parent_substs::Priv` is private\n-  --> $DIR/associated-item-privacy-trait.rs:95:9\n+  --> $DIR/associated-item-privacy-trait.rs:93:9\n    |\n LL |         value;\n    |         ^^^^^ private type\n@@ -175,7 +175,7 @@ LL |     priv_parent_substs::mac!();\n    = note: this error originates in a macro (in Nightly builds, run with -Z macro-backtrace for more info)\n \n error: type `priv_parent_substs::Priv` is private\n-  --> $DIR/associated-item-privacy-trait.rs:97:21\n+  --> $DIR/associated-item-privacy-trait.rs:95:21\n    |\n LL |         let value = <Pub as PubTr<_>>::method;\n    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^ private type\n@@ -186,7 +186,7 @@ LL |     priv_parent_substs::mac!();\n    = note: this error originates in a macro (in Nightly builds, run with -Z macro-backtrace for more info)\n \n error: type `priv_parent_substs::Priv` is private\n-  --> $DIR/associated-item-privacy-trait.rs:99:9\n+  --> $DIR/associated-item-privacy-trait.rs:97:9\n    |\n LL |         value;\n    |         ^^^^^ private type\n@@ -197,7 +197,7 @@ LL |     priv_parent_substs::mac!();\n    = note: this error originates in a macro (in Nightly builds, run with -Z macro-backtrace for more info)\n \n error: type `priv_parent_substs::Priv` is private\n-  --> $DIR/associated-item-privacy-trait.rs:101:9\n+  --> $DIR/associated-item-privacy-trait.rs:99:9\n    |\n LL |         Pub.method();\n    |         ^^^^^^^^^^^^ private type\n@@ -208,7 +208,7 @@ LL |     priv_parent_substs::mac!();\n    = note: this error originates in a macro (in Nightly builds, run with -Z macro-backtrace for more info)\n \n error: type `priv_parent_substs::Priv` is private\n-  --> $DIR/associated-item-privacy-trait.rs:104:21\n+  --> $DIR/associated-item-privacy-trait.rs:102:21\n    |\n LL |         let value = <Priv as PubTr<_>>::method;\n    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^ private type\n@@ -219,7 +219,7 @@ LL |     priv_parent_substs::mac!();\n    = note: this error originates in a macro (in Nightly builds, run with -Z macro-backtrace for more info)\n \n error: type `priv_parent_substs::Priv` is private\n-  --> $DIR/associated-item-privacy-trait.rs:106:9\n+  --> $DIR/associated-item-privacy-trait.rs:104:9\n    |\n LL |         value;\n    |         ^^^^^ private type\n@@ -230,7 +230,7 @@ LL |     priv_parent_substs::mac!();\n    = note: this error originates in a macro (in Nightly builds, run with -Z macro-backtrace for more info)\n \n error: type `priv_parent_substs::Priv` is private\n-  --> $DIR/associated-item-privacy-trait.rs:108:9\n+  --> $DIR/associated-item-privacy-trait.rs:106:9\n    |\n LL |         Priv.method();\n    |         ^^^^^^^^^^^^^ private type\n@@ -241,7 +241,7 @@ LL |     priv_parent_substs::mac!();\n    = note: this error originates in a macro (in Nightly builds, run with -Z macro-backtrace for more info)\n \n error: type `priv_parent_substs::Priv` is private\n-  --> $DIR/associated-item-privacy-trait.rs:111:9\n+  --> $DIR/associated-item-privacy-trait.rs:109:9\n    |\n LL |         <Pub as PubTr>::CONST;\n    |         ^^^^^^^^^^^^^^^^^^^^^ private type\n@@ -252,7 +252,7 @@ LL |     priv_parent_substs::mac!();\n    = note: this error originates in a macro (in Nightly builds, run with -Z macro-backtrace for more info)\n \n error: type `priv_parent_substs::Priv` is private\n-  --> $DIR/associated-item-privacy-trait.rs:113:9\n+  --> $DIR/associated-item-privacy-trait.rs:111:9\n    |\n LL |         <Pub as PubTr<_>>::CONST;\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^ private type\n@@ -263,7 +263,7 @@ LL |     priv_parent_substs::mac!();\n    = note: this error originates in a macro (in Nightly builds, run with -Z macro-backtrace for more info)\n \n error: type `priv_parent_substs::Priv` is private\n-  --> $DIR/associated-item-privacy-trait.rs:115:9\n+  --> $DIR/associated-item-privacy-trait.rs:113:9\n    |\n LL |         <Priv as PubTr<_>>::CONST;\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^ private type\n@@ -274,7 +274,7 @@ LL |     priv_parent_substs::mac!();\n    = note: this error originates in a macro (in Nightly builds, run with -Z macro-backtrace for more info)\n \n error: type `priv_parent_substs::Priv` is private\n-  --> $DIR/associated-item-privacy-trait.rs:119:30\n+  --> $DIR/associated-item-privacy-trait.rs:117:30\n    |\n LL |         let _: <Pub as PubTr<_>>::AssocTy;\n    |                              ^ private type\n@@ -285,7 +285,7 @@ LL |     priv_parent_substs::mac!();\n    = note: this error originates in a macro (in Nightly builds, run with -Z macro-backtrace for more info)\n \n error: type `priv_parent_substs::Priv` is private\n-  --> $DIR/associated-item-privacy-trait.rs:121:17\n+  --> $DIR/associated-item-privacy-trait.rs:119:17\n    |\n LL |         let _: <Priv as PubTr<_>>::AssocTy;\n    |                 ^^^^ private type\n@@ -296,7 +296,7 @@ LL |     priv_parent_substs::mac!();\n    = note: this error originates in a macro (in Nightly builds, run with -Z macro-backtrace for more info)\n \n error: type `priv_parent_substs::Priv` is private\n-  --> $DIR/associated-item-privacy-trait.rs:124:35\n+  --> $DIR/associated-item-privacy-trait.rs:122:35\n    |\n LL |         pub type InSignatureTy1 = <Pub as PubTr>::AssocTy;\n    |                                   ^^^^^^^^^^^^^^^^^^^^^^^ private type\n@@ -307,7 +307,7 @@ LL |     priv_parent_substs::mac!();\n    = note: this error originates in a macro (in Nightly builds, run with -Z macro-backtrace for more info)\n \n error: type `priv_parent_substs::Priv` is private\n-  --> $DIR/associated-item-privacy-trait.rs:126:35\n+  --> $DIR/associated-item-privacy-trait.rs:124:35\n    |\n LL |         pub type InSignatureTy2 = <Priv as PubTr<Pub>>::AssocTy;\n    |                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ private type\n@@ -318,7 +318,7 @@ LL |     priv_parent_substs::mac!();\n    = note: this error originates in a macro (in Nightly builds, run with -Z macro-backtrace for more info)\n \n error: type `priv_parent_substs::Priv` is private\n-  --> $DIR/associated-item-privacy-trait.rs:128:14\n+  --> $DIR/associated-item-privacy-trait.rs:126:14\n    |\n LL |         impl PubTr for u8 {}\n    |              ^^^^^ private type"}, {"sha": "2536b2fa9021fa45b88261db7d83dc5d22ea0ed6", "filename": "src/test/ui/proc-macro/meta-macro-hygiene.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fui%2Fproc-macro%2Fmeta-macro-hygiene.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fui%2Fproc-macro%2Fmeta-macro-hygiene.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fmeta-macro-hygiene.rs?ref=3ea62cb5d19846b44172d861ae231c8c09322800", "patch": "@@ -1,4 +1,3 @@\n-// ignore-tidy-linelength\n // aux-build:make-macro.rs\n // aux-build:meta-macro.rs\n // edition:2018"}, {"sha": "b7a37ab10ed5c23c1f6c13b0befc0798dd97c1c4", "filename": "src/test/ui/proc-macro/meta-macro-hygiene.stdout", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fui%2Fproc-macro%2Fmeta-macro-hygiene.stdout", "raw_url": "https://github.com/rust-lang/rust/raw/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fui%2Fproc-macro%2Fmeta-macro-hygiene.stdout", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fmeta-macro-hygiene.stdout?ref=3ea62cb5d19846b44172d861ae231c8c09322800", "patch": "@@ -1,8 +1,7 @@\n Def site: $DIR/auxiliary/make-macro.rs:7:9: 7:56 (#5)\n-Input: TokenStream [Ident { ident: \"$crate\", span: $DIR/meta-macro-hygiene.rs:24:37: 24:43 (#4) }, Punct { ch: ':', spacing: Joint, span: $DIR/meta-macro-hygiene.rs:24:43: 24:45 (#4) }, Punct { ch: ':', spacing: Alone, span: $DIR/meta-macro-hygiene.rs:24:43: 24:45 (#4) }, Ident { ident: \"dummy\", span: $DIR/meta-macro-hygiene.rs:24:45: 24:50 (#4) }, Punct { ch: '!', spacing: Alone, span: $DIR/meta-macro-hygiene.rs:24:50: 24:51 (#4) }, Group { delimiter: Parenthesis, stream: TokenStream [], span: $DIR/meta-macro-hygiene.rs:24:51: 24:53 (#4) }]\n+Input: TokenStream [Ident { ident: \"$crate\", span: $DIR/meta-macro-hygiene.rs:23:37: 23:43 (#4) }, Punct { ch: ':', spacing: Joint, span: $DIR/meta-macro-hygiene.rs:23:43: 23:45 (#4) }, Punct { ch: ':', spacing: Alone, span: $DIR/meta-macro-hygiene.rs:23:43: 23:45 (#4) }, Ident { ident: \"dummy\", span: $DIR/meta-macro-hygiene.rs:23:45: 23:50 (#4) }, Punct { ch: '!', spacing: Alone, span: $DIR/meta-macro-hygiene.rs:23:50: 23:51 (#4) }, Group { delimiter: Parenthesis, stream: TokenStream [], span: $DIR/meta-macro-hygiene.rs:23:51: 23:53 (#4) }]\n Respanned: TokenStream [Ident { ident: \"$crate\", span: $DIR/auxiliary/make-macro.rs:7:9: 7:56 (#5) }, Punct { ch: ':', spacing: Joint, span: $DIR/auxiliary/make-macro.rs:7:9: 7:56 (#5) }, Punct { ch: ':', spacing: Alone, span: $DIR/auxiliary/make-macro.rs:7:9: 7:56 (#5) }, Ident { ident: \"dummy\", span: $DIR/auxiliary/make-macro.rs:7:9: 7:56 (#5) }, Punct { ch: '!', spacing: Alone, span: $DIR/auxiliary/make-macro.rs:7:9: 7:56 (#5) }, Group { delimiter: Parenthesis, stream: TokenStream [], span: $DIR/auxiliary/make-macro.rs:7:9: 7:56 (#5) }]\n #![feature /* 0#0 */(prelude_import)]\n-// ignore-tidy-linelength\n // aux-build:make-macro.rs\n // aux-build:meta-macro.rs\n // edition:2018"}, {"sha": "8b491ee4e303fc6f85172b35ac33cb45f80d0642", "filename": "src/test/ui/regions/regions-enum-not-wf.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fui%2Fregions%2Fregions-enum-not-wf.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fui%2Fregions%2Fregions-enum-not-wf.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fregions%2Fregions-enum-not-wf.rs?ref=3ea62cb5d19846b44172d861ae231c8c09322800", "patch": "@@ -1,5 +1,3 @@\n-// ignore-tidy-linelength\n-\n // Various examples of structs whose fields are not well-formed.\n \n #![allow(dead_code)]"}, {"sha": "553a3e71c169a093b8635f2b1b83625298551517", "filename": "src/test/ui/regions/regions-enum-not-wf.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fui%2Fregions%2Fregions-enum-not-wf.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fui%2Fregions%2Fregions-enum-not-wf.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fregions%2Fregions-enum-not-wf.stderr?ref=3ea62cb5d19846b44172d861ae231c8c09322800", "patch": "@@ -1,13 +1,13 @@\n error[E0309]: the parameter type `T` may not live long enough\n-  --> $DIR/regions-enum-not-wf.rs:19:18\n+  --> $DIR/regions-enum-not-wf.rs:17:18\n    |\n LL | enum Ref1<'a, T> {\n    |               - help: consider adding an explicit lifetime bound...: `T: 'a`\n LL |     Ref1Variant1(RequireOutlives<'a, T>),\n    |                  ^^^^^^^^^^^^^^^^^^^^^^ ...so that the type `T` will meet its required lifetime bounds\n \n error[E0309]: the parameter type `T` may not live long enough\n-  --> $DIR/regions-enum-not-wf.rs:24:25\n+  --> $DIR/regions-enum-not-wf.rs:22:25\n    |\n LL | enum Ref2<'a, T> {\n    |               - help: consider adding an explicit lifetime bound...: `T: 'a`\n@@ -16,7 +16,7 @@ LL |     Ref2Variant2(isize, RequireOutlives<'a, T>),\n    |                         ^^^^^^^^^^^^^^^^^^^^^^ ...so that the type `T` will meet its required lifetime bounds\n \n error[E0309]: the parameter type `T` may not live long enough\n-  --> $DIR/regions-enum-not-wf.rs:37:23\n+  --> $DIR/regions-enum-not-wf.rs:35:23\n    |\n LL | enum RefDouble<'a, 'b, T> {\n    |                        - help: consider adding an explicit lifetime bound...: `T: 'b`"}, {"sha": "8b491ee4e303fc6f85172b35ac33cb45f80d0642", "filename": "src/test/ui/rfc-2093-infer-outlives/regions-enum-not-wf.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fui%2Frfc-2093-infer-outlives%2Fregions-enum-not-wf.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fui%2Frfc-2093-infer-outlives%2Fregions-enum-not-wf.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2093-infer-outlives%2Fregions-enum-not-wf.rs?ref=3ea62cb5d19846b44172d861ae231c8c09322800", "patch": "@@ -1,5 +1,3 @@\n-// ignore-tidy-linelength\n-\n // Various examples of structs whose fields are not well-formed.\n \n #![allow(dead_code)]"}, {"sha": "553a3e71c169a093b8635f2b1b83625298551517", "filename": "src/test/ui/rfc-2093-infer-outlives/regions-enum-not-wf.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fui%2Frfc-2093-infer-outlives%2Fregions-enum-not-wf.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fui%2Frfc-2093-infer-outlives%2Fregions-enum-not-wf.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2093-infer-outlives%2Fregions-enum-not-wf.stderr?ref=3ea62cb5d19846b44172d861ae231c8c09322800", "patch": "@@ -1,13 +1,13 @@\n error[E0309]: the parameter type `T` may not live long enough\n-  --> $DIR/regions-enum-not-wf.rs:19:18\n+  --> $DIR/regions-enum-not-wf.rs:17:18\n    |\n LL | enum Ref1<'a, T> {\n    |               - help: consider adding an explicit lifetime bound...: `T: 'a`\n LL |     Ref1Variant1(RequireOutlives<'a, T>),\n    |                  ^^^^^^^^^^^^^^^^^^^^^^ ...so that the type `T` will meet its required lifetime bounds\n \n error[E0309]: the parameter type `T` may not live long enough\n-  --> $DIR/regions-enum-not-wf.rs:24:25\n+  --> $DIR/regions-enum-not-wf.rs:22:25\n    |\n LL | enum Ref2<'a, T> {\n    |               - help: consider adding an explicit lifetime bound...: `T: 'a`\n@@ -16,7 +16,7 @@ LL |     Ref2Variant2(isize, RequireOutlives<'a, T>),\n    |                         ^^^^^^^^^^^^^^^^^^^^^^ ...so that the type `T` will meet its required lifetime bounds\n \n error[E0309]: the parameter type `T` may not live long enough\n-  --> $DIR/regions-enum-not-wf.rs:37:23\n+  --> $DIR/regions-enum-not-wf.rs:35:23\n    |\n LL | enum RefDouble<'a, 'b, T> {\n    |                        - help: consider adding an explicit lifetime bound...: `T: 'b`"}, {"sha": "9736d1b964da31a49b4dcf0513ee39bb40509351", "filename": "src/test/ui/simd-intrinsic/simd-intrinsic-generic-arithmetic-saturating.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fui%2Fsimd-intrinsic%2Fsimd-intrinsic-generic-arithmetic-saturating.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fui%2Fsimd-intrinsic%2Fsimd-intrinsic-generic-arithmetic-saturating.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsimd-intrinsic%2Fsimd-intrinsic-generic-arithmetic-saturating.rs?ref=3ea62cb5d19846b44172d861ae231c8c09322800", "patch": "@@ -1,6 +1,5 @@\n // build-fail\n // ignore-emscripten\n-// ignore-tidy-linelength\n #![feature(repr_simd, platform_intrinsics)]\n #![allow(non_camel_case_types)]\n #[repr(simd)]"}, {"sha": "0e88540bcc8e509def586b61793f79569d419900", "filename": "src/test/ui/simd-intrinsic/simd-intrinsic-generic-arithmetic-saturating.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fui%2Fsimd-intrinsic%2Fsimd-intrinsic-generic-arithmetic-saturating.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fui%2Fsimd-intrinsic%2Fsimd-intrinsic-generic-arithmetic-saturating.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsimd-intrinsic%2Fsimd-intrinsic-generic-arithmetic-saturating.stderr?ref=3ea62cb5d19846b44172d861ae231c8c09322800", "patch": "@@ -1,11 +1,11 @@\n error[E0511]: invalid monomorphization of `simd_saturating_add` intrinsic: expected element type `f32` of vector type `f32x4` to be a signed or unsigned integer type\n-  --> $DIR/simd-intrinsic-generic-arithmetic-saturating.rs:34:9\n+  --> $DIR/simd-intrinsic-generic-arithmetic-saturating.rs:33:9\n    |\n LL |         simd_saturating_add(z, z);\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error[E0511]: invalid monomorphization of `simd_saturating_sub` intrinsic: expected element type `f32` of vector type `f32x4` to be a signed or unsigned integer type\n-  --> $DIR/simd-intrinsic-generic-arithmetic-saturating.rs:36:9\n+  --> $DIR/simd-intrinsic-generic-arithmetic-saturating.rs:35:9\n    |\n LL |         simd_saturating_sub(z, z);\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^"}, {"sha": "12f9d65d77af0242f2749ebf0969cbeaad32d6c9", "filename": "src/test/ui/simd/simd-type-generic-monomorphisation.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fui%2Fsimd%2Fsimd-type-generic-monomorphisation.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fui%2Fsimd%2Fsimd-type-generic-monomorphisation.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsimd%2Fsimd-type-generic-monomorphisation.rs?ref=3ea62cb5d19846b44172d861ae231c8c09322800", "patch": "@@ -2,7 +2,6 @@\n \n #![feature(repr_simd, platform_intrinsics)]\n \n-// ignore-tidy-linelength\n \n // error-pattern:monomorphising SIMD type `Simd2<X>` with a non-primitive-scalar (integer/float/pointer) element type `X`\n "}, {"sha": "d82c70b8d82681360dc7908e4bea4bab7ebe743e", "filename": "src/test/ui/simd/simd-type.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fui%2Fsimd%2Fsimd-type.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fui%2Fsimd%2Fsimd-type.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsimd%2Fsimd-type.rs?ref=3ea62cb5d19846b44172d861ae231c8c09322800", "patch": "@@ -1,7 +1,6 @@\n #![feature(repr_simd)]\n #![allow(non_camel_case_types)]\n \n-// ignore-tidy-linelength\n \n #[repr(simd)]\n struct empty; //~ ERROR SIMD vector cannot be empty"}, {"sha": "4e4a19ea32ad08fd6c4bdcc38568757faa0ccbcb", "filename": "src/test/ui/simd/simd-type.stderr", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fui%2Fsimd%2Fsimd-type.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fui%2Fsimd%2Fsimd-type.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsimd%2Fsimd-type.stderr?ref=3ea62cb5d19846b44172d861ae231c8c09322800", "patch": "@@ -1,35 +1,35 @@\n error[E0075]: SIMD vector cannot be empty\n-  --> $DIR/simd-type.rs:7:1\n+  --> $DIR/simd-type.rs:6:1\n    |\n LL | struct empty;\n    | ^^^^^^^^^^^^^\n \n error[E0075]: SIMD vector cannot be empty\n-  --> $DIR/simd-type.rs:10:1\n+  --> $DIR/simd-type.rs:9:1\n    |\n LL | struct empty2([f32; 0]);\n    | ^^^^^^^^^^^^^^^^^^^^^^^^\n \n error[E0076]: SIMD vector should be homogeneous\n-  --> $DIR/simd-type.rs:16:1\n+  --> $DIR/simd-type.rs:15:1\n    |\n LL | struct i64f64(i64, f64);\n    | ^^^^^^^^^^^^^^^^^^^^^^^^ SIMD elements must have the same type\n \n error[E0077]: SIMD vector element type should be a primitive scalar (integer/float/pointer) type\n-  --> $DIR/simd-type.rs:21:1\n+  --> $DIR/simd-type.rs:20:1\n    |\n LL | struct FooV(Foo, Foo);\n    | ^^^^^^^^^^^^^^^^^^^^^^\n \n error[E0077]: SIMD vector element type should be a primitive scalar (integer/float/pointer) type\n-  --> $DIR/simd-type.rs:24:1\n+  --> $DIR/simd-type.rs:23:1\n    |\n LL | struct FooV2([Foo; 2]);\n    | ^^^^^^^^^^^^^^^^^^^^^^^\n \n error[E0075]: SIMD vector cannot have more than 32768 elements\n-  --> $DIR/simd-type.rs:27:1\n+  --> $DIR/simd-type.rs:26:1\n    |\n LL | struct TooBig([f32; 65536]);\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^"}, {"sha": "75c62feec32d0f992df29d5771456170eefa10d5", "filename": "src/test/ui/single-primitive-inherent-impl.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fui%2Fsingle-primitive-inherent-impl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fui%2Fsingle-primitive-inherent-impl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsingle-primitive-inherent-impl.rs?ref=3ea62cb5d19846b44172d861ae231c8c09322800", "patch": "@@ -1,5 +1,3 @@\n-// ignore-tidy-linelength\n-\n #![crate_type = \"lib\"]\n #![feature(lang_items)]\n #![no_std]"}, {"sha": "349a12eac05a0e4376e8dcaae2ac901af1a8141b", "filename": "src/test/ui/single-primitive-inherent-impl.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fui%2Fsingle-primitive-inherent-impl.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fui%2Fsingle-primitive-inherent-impl.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsingle-primitive-inherent-impl.stderr?ref=3ea62cb5d19846b44172d861ae231c8c09322800", "patch": "@@ -1,5 +1,5 @@\n error[E0390]: only a single inherent implementation marked with `#[lang = \"str\"]` is allowed for the `str` primitive\n-  --> $DIR/single-primitive-inherent-impl.rs:11:1\n+  --> $DIR/single-primitive-inherent-impl.rs:9:1\n    |\n LL | / impl str {\n LL | |"}, {"sha": "4afbca26264918ee5a3c6d72404b91ea3f1f1014", "filename": "src/test/ui/stability-attribute/generics-default-stability-where.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fui%2Fstability-attribute%2Fgenerics-default-stability-where.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fui%2Fstability-attribute%2Fgenerics-default-stability-where.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fstability-attribute%2Fgenerics-default-stability-where.rs?ref=3ea62cb5d19846b44172d861ae231c8c09322800", "patch": "@@ -1,4 +1,3 @@\n-// ignore-tidy-linelength\n // aux-build:unstable_generic_param.rs\n \n extern crate unstable_generic_param;"}, {"sha": "61253adc892b9d4b13be23388ab6506e9bab232c", "filename": "src/test/ui/stability-attribute/generics-default-stability-where.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fui%2Fstability-attribute%2Fgenerics-default-stability-where.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fui%2Fstability-attribute%2Fgenerics-default-stability-where.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fstability-attribute%2Fgenerics-default-stability-where.stderr?ref=3ea62cb5d19846b44172d861ae231c8c09322800", "patch": "@@ -1,5 +1,5 @@\n error[E0658]: use of unstable library feature 'unstable_default'\n-  --> $DIR/generics-default-stability-where.rs:8:45\n+  --> $DIR/generics-default-stability-where.rs:7:45\n    |\n LL | impl<T> Trait3<usize> for T where T: Trait2<usize> {\n    |                                             ^^^^^"}, {"sha": "67f2334efc88e53ca5a46cdfdde177030159b072", "filename": "src/test/ui/stability-attribute/generics-default-stability.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fui%2Fstability-attribute%2Fgenerics-default-stability.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fui%2Fstability-attribute%2Fgenerics-default-stability.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fstability-attribute%2Fgenerics-default-stability.rs?ref=3ea62cb5d19846b44172d861ae231c8c09322800", "patch": "@@ -1,4 +1,3 @@\n-// ignore-tidy-linelength\n // aux-build:unstable_generic_param.rs\n #![feature(unstable_default6)]\n "}, {"sha": "99523f8eb645d5877260abc8b62f03ee0215f949", "filename": "src/test/ui/stability-attribute/generics-default-stability.stderr", "status": "modified", "additions": 71, "deletions": 71, "changes": 142, "blob_url": "https://github.com/rust-lang/rust/blob/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fui%2Fstability-attribute%2Fgenerics-default-stability.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fui%2Fstability-attribute%2Fgenerics-default-stability.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fstability-attribute%2Fgenerics-default-stability.stderr?ref=3ea62cb5d19846b44172d861ae231c8c09322800", "patch": "@@ -1,489 +1,489 @@\n error[E0658]: use of unstable library feature 'unstable_default'\n-  --> $DIR/generics-default-stability.rs:17:13\n+  --> $DIR/generics-default-stability.rs:16:13\n    |\n LL | impl Trait1<usize> for S {\n    |             ^^^^^\n    |\n    = help: add `#![feature(unstable_default)]` to the crate attributes to enable\n \n error[E0658]: use of unstable library feature 'unstable_default'\n-  --> $DIR/generics-default-stability.rs:21:13\n+  --> $DIR/generics-default-stability.rs:20:13\n    |\n LL | impl Trait1<isize> for S {\n    |             ^^^^^\n    |\n    = help: add `#![feature(unstable_default)]` to the crate attributes to enable\n \n error[E0658]: use of unstable library feature 'unstable_default'\n-  --> $DIR/generics-default-stability.rs:25:13\n+  --> $DIR/generics-default-stability.rs:24:13\n    |\n LL | impl Trait2<usize> for S {\n    |             ^^^^^\n    |\n    = help: add `#![feature(unstable_default)]` to the crate attributes to enable\n \n warning: use of deprecated struct `unstable_generic_param::Struct4`: test\n-  --> $DIR/generics-default-stability.rs:84:29\n+  --> $DIR/generics-default-stability.rs:83:29\n    |\n LL |     let _: Struct4<isize> = Struct4 { field: 1 };\n    |                             ^^^^^^^\n    |\n    = note: `#[warn(deprecated)]` on by default\n \n warning: use of deprecated struct `unstable_generic_param::Struct4`: test\n-  --> $DIR/generics-default-stability.rs:84:12\n+  --> $DIR/generics-default-stability.rs:83:12\n    |\n LL |     let _: Struct4<isize> = Struct4 { field: 1 };\n    |            ^^^^^^^^^^^^^^\n \n warning: use of deprecated struct `unstable_generic_param::Struct4`: test\n-  --> $DIR/generics-default-stability.rs:89:12\n+  --> $DIR/generics-default-stability.rs:88:12\n    |\n LL |     let _: Struct4 = STRUCT4;\n    |            ^^^^^^^\n \n warning: use of deprecated struct `unstable_generic_param::Struct4`: test\n-  --> $DIR/generics-default-stability.rs:90:12\n+  --> $DIR/generics-default-stability.rs:89:12\n    |\n LL |     let _: Struct4<usize> = STRUCT4;\n    |            ^^^^^^^^^^^^^^\n \n warning: use of deprecated struct `unstable_generic_param::Struct4`: test\n-  --> $DIR/generics-default-stability.rs:91:29\n+  --> $DIR/generics-default-stability.rs:90:29\n    |\n LL |     let _: Struct4<isize> = Struct4 { field: 0 };\n    |                             ^^^^^^^\n \n warning: use of deprecated struct `unstable_generic_param::Struct4`: test\n-  --> $DIR/generics-default-stability.rs:91:12\n+  --> $DIR/generics-default-stability.rs:90:12\n    |\n LL |     let _: Struct4<isize> = Struct4 { field: 0 };\n    |            ^^^^^^^^^^^^^^\n \n warning: use of deprecated struct `unstable_generic_param::Struct5`: test\n-  --> $DIR/generics-default-stability.rs:97:29\n+  --> $DIR/generics-default-stability.rs:96:29\n    |\n LL |     let _: Struct5<isize> = Struct5 { field: 1 };\n    |                             ^^^^^^^\n \n warning: use of deprecated struct `unstable_generic_param::Struct5`: test\n-  --> $DIR/generics-default-stability.rs:97:12\n+  --> $DIR/generics-default-stability.rs:96:12\n    |\n LL |     let _: Struct5<isize> = Struct5 { field: 1 };\n    |            ^^^^^^^^^^^^^^\n \n warning: use of deprecated struct `unstable_generic_param::Struct5`: test\n-  --> $DIR/generics-default-stability.rs:102:12\n+  --> $DIR/generics-default-stability.rs:101:12\n    |\n LL |     let _: Struct5 = STRUCT5;\n    |            ^^^^^^^\n \n warning: use of deprecated struct `unstable_generic_param::Struct5`: test\n-  --> $DIR/generics-default-stability.rs:103:12\n+  --> $DIR/generics-default-stability.rs:102:12\n    |\n LL |     let _: Struct5<usize> = STRUCT5;\n    |            ^^^^^^^^^^^^^^\n \n warning: use of deprecated struct `unstable_generic_param::Struct5`: test\n-  --> $DIR/generics-default-stability.rs:105:29\n+  --> $DIR/generics-default-stability.rs:104:29\n    |\n LL |     let _: Struct5<isize> = Struct5 { field: 0 };\n    |                             ^^^^^^^\n \n warning: use of deprecated struct `unstable_generic_param::Struct5`: test\n-  --> $DIR/generics-default-stability.rs:105:12\n+  --> $DIR/generics-default-stability.rs:104:12\n    |\n LL |     let _: Struct5<isize> = Struct5 { field: 0 };\n    |            ^^^^^^^^^^^^^^\n \n warning: use of deprecated type alias `unstable_generic_param::Alias4`: test\n-  --> $DIR/generics-default-stability.rs:160:28\n+  --> $DIR/generics-default-stability.rs:159:28\n    |\n LL |     let _: Alias4<isize> = Alias4::Some(1);\n    |                            ^^^^^^\n \n warning: use of deprecated type alias `unstable_generic_param::Alias4`: test\n-  --> $DIR/generics-default-stability.rs:160:12\n+  --> $DIR/generics-default-stability.rs:159:12\n    |\n LL |     let _: Alias4<isize> = Alias4::Some(1);\n    |            ^^^^^^^^^^^^^\n \n warning: use of deprecated type alias `unstable_generic_param::Alias4`: test\n-  --> $DIR/generics-default-stability.rs:164:12\n+  --> $DIR/generics-default-stability.rs:163:12\n    |\n LL |     let _: Alias4 = ALIAS4;\n    |            ^^^^^^\n \n warning: use of deprecated type alias `unstable_generic_param::Alias4`: test\n-  --> $DIR/generics-default-stability.rs:165:12\n+  --> $DIR/generics-default-stability.rs:164:12\n    |\n LL |     let _: Alias4<usize> = ALIAS4;\n    |            ^^^^^^^^^^^^^\n \n warning: use of deprecated type alias `unstable_generic_param::Alias4`: test\n-  --> $DIR/generics-default-stability.rs:166:28\n+  --> $DIR/generics-default-stability.rs:165:28\n    |\n LL |     let _: Alias4<isize> = Alias4::Some(0);\n    |                            ^^^^^^\n \n warning: use of deprecated type alias `unstable_generic_param::Alias4`: test\n-  --> $DIR/generics-default-stability.rs:166:12\n+  --> $DIR/generics-default-stability.rs:165:12\n    |\n LL |     let _: Alias4<isize> = Alias4::Some(0);\n    |            ^^^^^^^^^^^^^\n \n warning: use of deprecated type alias `unstable_generic_param::Alias5`: test\n-  --> $DIR/generics-default-stability.rs:171:28\n+  --> $DIR/generics-default-stability.rs:170:28\n    |\n LL |     let _: Alias5<isize> = Alias5::Some(1);\n    |                            ^^^^^^\n \n warning: use of deprecated type alias `unstable_generic_param::Alias5`: test\n-  --> $DIR/generics-default-stability.rs:171:12\n+  --> $DIR/generics-default-stability.rs:170:12\n    |\n LL |     let _: Alias5<isize> = Alias5::Some(1);\n    |            ^^^^^^^^^^^^^\n \n warning: use of deprecated type alias `unstable_generic_param::Alias5`: test\n-  --> $DIR/generics-default-stability.rs:175:12\n+  --> $DIR/generics-default-stability.rs:174:12\n    |\n LL |     let _: Alias5 = ALIAS5;\n    |            ^^^^^^\n \n warning: use of deprecated type alias `unstable_generic_param::Alias5`: test\n-  --> $DIR/generics-default-stability.rs:176:12\n+  --> $DIR/generics-default-stability.rs:175:12\n    |\n LL |     let _: Alias5<usize> = ALIAS5;\n    |            ^^^^^^^^^^^^^\n \n warning: use of deprecated type alias `unstable_generic_param::Alias5`: test\n-  --> $DIR/generics-default-stability.rs:178:28\n+  --> $DIR/generics-default-stability.rs:177:28\n    |\n LL |     let _: Alias5<isize> = Alias5::Some(0);\n    |                            ^^^^^^\n \n warning: use of deprecated type alias `unstable_generic_param::Alias5`: test\n-  --> $DIR/generics-default-stability.rs:178:12\n+  --> $DIR/generics-default-stability.rs:177:12\n    |\n LL |     let _: Alias5<isize> = Alias5::Some(0);\n    |            ^^^^^^^^^^^^^\n \n warning: use of deprecated variant `unstable_generic_param::Enum4::Some`: test\n-  --> $DIR/generics-default-stability.rs:232:27\n+  --> $DIR/generics-default-stability.rs:231:27\n    |\n LL |     let _: Enum4<isize> = Enum4::Some(1);\n    |                           ^^^^^^^^^^^\n \n warning: use of deprecated enum `unstable_generic_param::Enum4`: test\n-  --> $DIR/generics-default-stability.rs:232:12\n+  --> $DIR/generics-default-stability.rs:231:12\n    |\n LL |     let _: Enum4<isize> = Enum4::Some(1);\n    |            ^^^^^^^^^^^^\n \n warning: use of deprecated enum `unstable_generic_param::Enum4`: test\n-  --> $DIR/generics-default-stability.rs:236:12\n+  --> $DIR/generics-default-stability.rs:235:12\n    |\n LL |     let _: Enum4 = ENUM4;\n    |            ^^^^^\n \n warning: use of deprecated enum `unstable_generic_param::Enum4`: test\n-  --> $DIR/generics-default-stability.rs:237:12\n+  --> $DIR/generics-default-stability.rs:236:12\n    |\n LL |     let _: Enum4<usize> = ENUM4;\n    |            ^^^^^^^^^^^^\n \n warning: use of deprecated variant `unstable_generic_param::Enum4::Some`: test\n-  --> $DIR/generics-default-stability.rs:238:27\n+  --> $DIR/generics-default-stability.rs:237:27\n    |\n LL |     let _: Enum4<isize> = Enum4::Some(0);\n    |                           ^^^^^^^^^^^\n \n warning: use of deprecated enum `unstable_generic_param::Enum4`: test\n-  --> $DIR/generics-default-stability.rs:238:12\n+  --> $DIR/generics-default-stability.rs:237:12\n    |\n LL |     let _: Enum4<isize> = Enum4::Some(0);\n    |            ^^^^^^^^^^^^\n \n warning: use of deprecated variant `unstable_generic_param::Enum5::Some`: test\n-  --> $DIR/generics-default-stability.rs:243:27\n+  --> $DIR/generics-default-stability.rs:242:27\n    |\n LL |     let _: Enum5<isize> = Enum5::Some(1);\n    |                           ^^^^^^^^^^^\n \n warning: use of deprecated enum `unstable_generic_param::Enum5`: test\n-  --> $DIR/generics-default-stability.rs:243:12\n+  --> $DIR/generics-default-stability.rs:242:12\n    |\n LL |     let _: Enum5<isize> = Enum5::Some(1);\n    |            ^^^^^^^^^^^^\n \n warning: use of deprecated enum `unstable_generic_param::Enum5`: test\n-  --> $DIR/generics-default-stability.rs:247:12\n+  --> $DIR/generics-default-stability.rs:246:12\n    |\n LL |     let _: Enum5 = ENUM5;\n    |            ^^^^^\n \n warning: use of deprecated enum `unstable_generic_param::Enum5`: test\n-  --> $DIR/generics-default-stability.rs:248:12\n+  --> $DIR/generics-default-stability.rs:247:12\n    |\n LL |     let _: Enum5<usize> = ENUM5;\n    |            ^^^^^^^^^^^^\n \n warning: use of deprecated variant `unstable_generic_param::Enum5::Some`: test\n-  --> $DIR/generics-default-stability.rs:250:27\n+  --> $DIR/generics-default-stability.rs:249:27\n    |\n LL |     let _: Enum5<isize> = Enum5::Some(0);\n    |                           ^^^^^^^^^^^\n \n warning: use of deprecated enum `unstable_generic_param::Enum5`: test\n-  --> $DIR/generics-default-stability.rs:250:12\n+  --> $DIR/generics-default-stability.rs:249:12\n    |\n LL |     let _: Enum5<isize> = Enum5::Some(0);\n    |            ^^^^^^^^^^^^\n \n error[E0658]: use of unstable library feature 'unstable_default'\n-  --> $DIR/generics-default-stability.rs:36:20\n+  --> $DIR/generics-default-stability.rs:35:20\n    |\n LL |     let _: Struct1<isize> = Struct1 { field: 1 };\n    |                    ^^^^^\n    |\n    = help: add `#![feature(unstable_default)]` to the crate attributes to enable\n \n error[E0658]: use of unstable library feature 'unstable_default'\n-  --> $DIR/generics-default-stability.rs:40:20\n+  --> $DIR/generics-default-stability.rs:39:20\n    |\n LL |     let _: Struct1<usize> = STRUCT1;\n    |                    ^^^^^\n    |\n    = help: add `#![feature(unstable_default)]` to the crate attributes to enable\n \n error[E0658]: use of unstable library feature 'unstable_default'\n-  --> $DIR/generics-default-stability.rs:41:20\n+  --> $DIR/generics-default-stability.rs:40:20\n    |\n LL |     let _: Struct1<isize> = Struct1 { field: 0 };\n    |                    ^^^^^\n    |\n    = help: add `#![feature(unstable_default)]` to the crate attributes to enable\n \n error[E0658]: use of unstable library feature 'unstable_default'\n-  --> $DIR/generics-default-stability.rs:70:27\n+  --> $DIR/generics-default-stability.rs:69:27\n    |\n LL |     let _: Struct3<isize, usize> = STRUCT3;\n    |                           ^^^^^\n    |\n    = help: add `#![feature(unstable_default)]` to the crate attributes to enable\n \n error[E0658]: use of unstable library feature 'unstable_default'\n-  --> $DIR/generics-default-stability.rs:72:27\n+  --> $DIR/generics-default-stability.rs:71:27\n    |\n LL |     let _: Struct3<isize, isize> = Struct3 { field1: 0, field2: 0 };\n    |                           ^^^^^\n    |\n    = help: add `#![feature(unstable_default)]` to the crate attributes to enable\n \n error[E0658]: use of unstable library feature 'unstable_default'\n-  --> $DIR/generics-default-stability.rs:73:27\n+  --> $DIR/generics-default-stability.rs:72:27\n    |\n LL |     let _: Struct3<usize, usize> = Struct3 { field1: 0, field2: 0 };\n    |                           ^^^^^\n    |\n    = help: add `#![feature(unstable_default)]` to the crate attributes to enable\n \n error[E0658]: use of unstable library feature 'unstable_default'\n-  --> $DIR/generics-default-stability.rs:97:20\n+  --> $DIR/generics-default-stability.rs:96:20\n    |\n LL |     let _: Struct5<isize> = Struct5 { field: 1 };\n    |                    ^^^^^\n    |\n    = help: add `#![feature(unstable_default)]` to the crate attributes to enable\n \n error[E0658]: use of unstable library feature 'unstable_default'\n-  --> $DIR/generics-default-stability.rs:103:20\n+  --> $DIR/generics-default-stability.rs:102:20\n    |\n LL |     let _: Struct5<usize> = STRUCT5;\n    |                    ^^^^^\n    |\n    = help: add `#![feature(unstable_default)]` to the crate attributes to enable\n \n error[E0658]: use of unstable library feature 'unstable_default'\n-  --> $DIR/generics-default-stability.rs:105:20\n+  --> $DIR/generics-default-stability.rs:104:20\n    |\n LL |     let _: Struct5<isize> = Struct5 { field: 0 };\n    |                    ^^^^^\n    |\n    = help: add `#![feature(unstable_default)]` to the crate attributes to enable\n \n error[E0658]: use of unstable library feature 'unstable_default'\n-  --> $DIR/generics-default-stability.rs:113:19\n+  --> $DIR/generics-default-stability.rs:112:19\n    |\n LL |     let _: Alias1<isize> = Alias1::Some(1);\n    |                   ^^^^^\n    |\n    = help: add `#![feature(unstable_default)]` to the crate attributes to enable\n \n error[E0658]: use of unstable library feature 'unstable_default'\n-  --> $DIR/generics-default-stability.rs:117:19\n+  --> $DIR/generics-default-stability.rs:116:19\n    |\n LL |     let _: Alias1<usize> = ALIAS1;\n    |                   ^^^^^\n    |\n    = help: add `#![feature(unstable_default)]` to the crate attributes to enable\n \n error[E0658]: use of unstable library feature 'unstable_default'\n-  --> $DIR/generics-default-stability.rs:118:19\n+  --> $DIR/generics-default-stability.rs:117:19\n    |\n LL |     let _: Alias1<isize> = Alias1::Some(0);\n    |                   ^^^^^\n    |\n    = help: add `#![feature(unstable_default)]` to the crate attributes to enable\n \n error[E0658]: use of unstable library feature 'unstable_default'\n-  --> $DIR/generics-default-stability.rs:146:26\n+  --> $DIR/generics-default-stability.rs:145:26\n    |\n LL |     let _: Alias3<isize, usize> = ALIAS3;\n    |                          ^^^^^\n    |\n    = help: add `#![feature(unstable_default)]` to the crate attributes to enable\n \n error[E0658]: use of unstable library feature 'unstable_default'\n-  --> $DIR/generics-default-stability.rs:148:26\n+  --> $DIR/generics-default-stability.rs:147:26\n    |\n LL |     let _: Alias3<isize, isize> = Alias3::Ok(0);\n    |                          ^^^^^\n    |\n    = help: add `#![feature(unstable_default)]` to the crate attributes to enable\n \n error[E0658]: use of unstable library feature 'unstable_default'\n-  --> $DIR/generics-default-stability.rs:149:26\n+  --> $DIR/generics-default-stability.rs:148:26\n    |\n LL |     let _: Alias3<usize, usize> = Alias3::Ok(0);\n    |                          ^^^^^\n    |\n    = help: add `#![feature(unstable_default)]` to the crate attributes to enable\n \n error[E0658]: use of unstable library feature 'unstable_default'\n-  --> $DIR/generics-default-stability.rs:171:19\n+  --> $DIR/generics-default-stability.rs:170:19\n    |\n LL |     let _: Alias5<isize> = Alias5::Some(1);\n    |                   ^^^^^\n    |\n    = help: add `#![feature(unstable_default)]` to the crate attributes to enable\n \n error[E0658]: use of unstable library feature 'unstable_default'\n-  --> $DIR/generics-default-stability.rs:176:19\n+  --> $DIR/generics-default-stability.rs:175:19\n    |\n LL |     let _: Alias5<usize> = ALIAS5;\n    |                   ^^^^^\n    |\n    = help: add `#![feature(unstable_default)]` to the crate attributes to enable\n \n error[E0658]: use of unstable library feature 'unstable_default'\n-  --> $DIR/generics-default-stability.rs:178:19\n+  --> $DIR/generics-default-stability.rs:177:19\n    |\n LL |     let _: Alias5<isize> = Alias5::Some(0);\n    |                   ^^^^^\n    |\n    = help: add `#![feature(unstable_default)]` to the crate attributes to enable\n \n error[E0658]: use of unstable library feature 'unstable_default'\n-  --> $DIR/generics-default-stability.rs:185:18\n+  --> $DIR/generics-default-stability.rs:184:18\n    |\n LL |     let _: Enum1<isize> = Enum1::Some(1);\n    |                  ^^^^^\n    |\n    = help: add `#![feature(unstable_default)]` to the crate attributes to enable\n \n error[E0658]: use of unstable library feature 'unstable_default'\n-  --> $DIR/generics-default-stability.rs:189:18\n+  --> $DIR/generics-default-stability.rs:188:18\n    |\n LL |     let _: Enum1<usize> = ENUM1;\n    |                  ^^^^^\n    |\n    = help: add `#![feature(unstable_default)]` to the crate attributes to enable\n \n error[E0658]: use of unstable library feature 'unstable_default'\n-  --> $DIR/generics-default-stability.rs:190:18\n+  --> $DIR/generics-default-stability.rs:189:18\n    |\n LL |     let _: Enum1<isize> = Enum1::Some(0);\n    |                  ^^^^^\n    |\n    = help: add `#![feature(unstable_default)]` to the crate attributes to enable\n \n error[E0658]: use of unstable library feature 'unstable_default'\n-  --> $DIR/generics-default-stability.rs:218:25\n+  --> $DIR/generics-default-stability.rs:217:25\n    |\n LL |     let _: Enum3<isize, usize> = ENUM3;\n    |                         ^^^^^\n    |\n    = help: add `#![feature(unstable_default)]` to the crate attributes to enable\n \n error[E0658]: use of unstable library feature 'unstable_default'\n-  --> $DIR/generics-default-stability.rs:220:25\n+  --> $DIR/generics-default-stability.rs:219:25\n    |\n LL |     let _: Enum3<isize, isize> = Enum3::Ok(0);\n    |                         ^^^^^\n    |\n    = help: add `#![feature(unstable_default)]` to the crate attributes to enable\n \n error[E0658]: use of unstable library feature 'unstable_default'\n-  --> $DIR/generics-default-stability.rs:221:25\n+  --> $DIR/generics-default-stability.rs:220:25\n    |\n LL |     let _: Enum3<usize, usize> = Enum3::Ok(0);\n    |                         ^^^^^\n    |\n    = help: add `#![feature(unstable_default)]` to the crate attributes to enable\n \n error[E0658]: use of unstable library feature 'unstable_default'\n-  --> $DIR/generics-default-stability.rs:243:18\n+  --> $DIR/generics-default-stability.rs:242:18\n    |\n LL |     let _: Enum5<isize> = Enum5::Some(1);\n    |                  ^^^^^\n    |\n    = help: add `#![feature(unstable_default)]` to the crate attributes to enable\n \n error[E0658]: use of unstable library feature 'unstable_default'\n-  --> $DIR/generics-default-stability.rs:248:18\n+  --> $DIR/generics-default-stability.rs:247:18\n    |\n LL |     let _: Enum5<usize> = ENUM5;\n    |                  ^^^^^\n    |\n    = help: add `#![feature(unstable_default)]` to the crate attributes to enable\n \n error[E0658]: use of unstable library feature 'unstable_default'\n-  --> $DIR/generics-default-stability.rs:250:18\n+  --> $DIR/generics-default-stability.rs:249:18\n    |\n LL |     let _: Enum5<isize> = Enum5::Some(0);\n    |                  ^^^^^\n    |\n    = help: add `#![feature(unstable_default)]` to the crate attributes to enable\n \n error[E0658]: use of unstable library feature 'box_alloc_param'\n-  --> $DIR/generics-default-stability.rs:257:24\n+  --> $DIR/generics-default-stability.rs:256:24\n    |\n LL |     let _: Box1<isize, System> = Box1::new(1);\n    |                        ^^^^^^\n    |\n    = help: add `#![feature(box_alloc_param)]` to the crate attributes to enable\n \n warning: use of deprecated field `unstable_generic_param::Struct4::field`: test\n-  --> $DIR/generics-default-stability.rs:84:39\n+  --> $DIR/generics-default-stability.rs:83:39\n    |\n LL |     let _: Struct4<isize> = Struct4 { field: 1 };\n    |                                       ^^^^^^^^\n \n warning: use of deprecated field `unstable_generic_param::Struct4::field`: test\n-  --> $DIR/generics-default-stability.rs:91:39\n+  --> $DIR/generics-default-stability.rs:90:39\n    |\n LL |     let _: Struct4<isize> = Struct4 { field: 0 };\n    |                                       ^^^^^^^^\n \n warning: use of deprecated field `unstable_generic_param::Struct5::field`: test\n-  --> $DIR/generics-default-stability.rs:97:39\n+  --> $DIR/generics-default-stability.rs:96:39\n    |\n LL |     let _: Struct5<isize> = Struct5 { field: 1 };\n    |                                       ^^^^^^^^\n \n warning: use of deprecated field `unstable_generic_param::Struct5::field`: test\n-  --> $DIR/generics-default-stability.rs:105:39\n+  --> $DIR/generics-default-stability.rs:104:39\n    |\n LL |     let _: Struct5<isize> = Struct5 { field: 0 };\n    |                                       ^^^^^^^^"}, {"sha": "efc6304a6f7426d3d7dd8a961e275939ec667ef5", "filename": "src/test/ui/structs/structure-constructor-type-mismatch.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fui%2Fstructs%2Fstructure-constructor-type-mismatch.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fui%2Fstructs%2Fstructure-constructor-type-mismatch.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fstructs%2Fstructure-constructor-type-mismatch.rs?ref=3ea62cb5d19846b44172d861ae231c8c09322800", "patch": "@@ -1,5 +1,3 @@\n-// ignore-tidy-linelength\n-\n struct Point<T> {\n     x: T,\n     y: T,"}, {"sha": "6438127868133b277c24af7e9a1bf4b50fe25d7f", "filename": "src/test/ui/structs/structure-constructor-type-mismatch.stderr", "status": "modified", "additions": 15, "deletions": 15, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fui%2Fstructs%2Fstructure-constructor-type-mismatch.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fui%2Fstructs%2Fstructure-constructor-type-mismatch.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fstructs%2Fstructure-constructor-type-mismatch.stderr?ref=3ea62cb5d19846b44172d861ae231c8c09322800", "patch": "@@ -1,5 +1,5 @@\n error[E0308]: mismatched types\n-  --> $DIR/structure-constructor-type-mismatch.rs:19:12\n+  --> $DIR/structure-constructor-type-mismatch.rs:17:12\n    |\n LL |         x: 1,\n    |            ^\n@@ -8,7 +8,7 @@ LL |         x: 1,\n    |            help: use a float literal: `1.0`\n \n error[E0308]: mismatched types\n-  --> $DIR/structure-constructor-type-mismatch.rs:22:12\n+  --> $DIR/structure-constructor-type-mismatch.rs:20:12\n    |\n LL |         y: 2,\n    |            ^\n@@ -17,7 +17,7 @@ LL |         y: 2,\n    |            help: use a float literal: `2.0`\n \n error[E0308]: mismatched types\n-  --> $DIR/structure-constructor-type-mismatch.rs:28:12\n+  --> $DIR/structure-constructor-type-mismatch.rs:26:12\n    |\n LL |         x: 3,\n    |            ^\n@@ -26,7 +26,7 @@ LL |         x: 3,\n    |            help: use a float literal: `3.0`\n \n error[E0308]: mismatched types\n-  --> $DIR/structure-constructor-type-mismatch.rs:31:12\n+  --> $DIR/structure-constructor-type-mismatch.rs:29:12\n    |\n LL |         y: 4,\n    |            ^\n@@ -35,7 +35,7 @@ LL |         y: 4,\n    |            help: use a float literal: `4.0`\n \n error[E0308]: mismatched types\n-  --> $DIR/structure-constructor-type-mismatch.rs:37:12\n+  --> $DIR/structure-constructor-type-mismatch.rs:35:12\n    |\n LL |         x: 5,\n    |            ^\n@@ -44,7 +44,7 @@ LL |         x: 5,\n    |            help: use a float literal: `5.0`\n \n error[E0308]: mismatched types\n-  --> $DIR/structure-constructor-type-mismatch.rs:44:12\n+  --> $DIR/structure-constructor-type-mismatch.rs:42:12\n    |\n LL |         x: 7,\n    |            ^\n@@ -53,21 +53,21 @@ LL |         x: 7,\n    |            help: use a float literal: `7.0`\n \n error[E0107]: this type alias takes 0 type arguments but 1 type argument was supplied\n-  --> $DIR/structure-constructor-type-mismatch.rs:50:15\n+  --> $DIR/structure-constructor-type-mismatch.rs:48:15\n    |\n LL |     let pt3 = PointF::<i32> {\n    |               ^^^^^^------- help: remove these generics\n    |               |\n    |               expected 0 type arguments\n    |\n note: type alias defined here, with 0 type parameters\n-  --> $DIR/structure-constructor-type-mismatch.rs:8:6\n+  --> $DIR/structure-constructor-type-mismatch.rs:6:6\n    |\n LL | type PointF = Point<f32>;\n    |      ^^^^^^\n \n error[E0308]: mismatched types\n-  --> $DIR/structure-constructor-type-mismatch.rs:51:12\n+  --> $DIR/structure-constructor-type-mismatch.rs:49:12\n    |\n LL |         x: 9,\n    |            ^\n@@ -76,7 +76,7 @@ LL |         x: 9,\n    |            help: use a float literal: `9.0`\n \n error[E0308]: mismatched types\n-  --> $DIR/structure-constructor-type-mismatch.rs:52:12\n+  --> $DIR/structure-constructor-type-mismatch.rs:50:12\n    |\n LL |         y: 10,\n    |            ^^\n@@ -85,21 +85,21 @@ LL |         y: 10,\n    |            help: use a float literal: `10.0`\n \n error[E0107]: this type alias takes 0 type arguments but 1 type argument was supplied\n-  --> $DIR/structure-constructor-type-mismatch.rs:56:9\n+  --> $DIR/structure-constructor-type-mismatch.rs:54:9\n    |\n LL |         PointF::<u32> { .. } => {}\n    |         ^^^^^^------- help: remove these generics\n    |         |\n    |         expected 0 type arguments\n    |\n note: type alias defined here, with 0 type parameters\n-  --> $DIR/structure-constructor-type-mismatch.rs:8:6\n+  --> $DIR/structure-constructor-type-mismatch.rs:6:6\n    |\n LL | type PointF = Point<f32>;\n    |      ^^^^^^\n \n error[E0308]: mismatched types\n-  --> $DIR/structure-constructor-type-mismatch.rs:56:9\n+  --> $DIR/structure-constructor-type-mismatch.rs:54:9\n    |\n LL |     match (Point { x: 1, y: 2 }) {\n    |           ---------------------- this expression has type `Point<{integer}>`\n@@ -110,7 +110,7 @@ LL |         PointF::<u32> { .. } => {}\n               found struct `Point<f32>`\n \n error[E0308]: mismatched types\n-  --> $DIR/structure-constructor-type-mismatch.rs:61:9\n+  --> $DIR/structure-constructor-type-mismatch.rs:59:9\n    |\n LL |     match (Point { x: 1, y: 2 }) {\n    |           ---------------------- this expression has type `Point<{integer}>`\n@@ -121,7 +121,7 @@ LL |         PointF { .. } => {}\n               found struct `Point<f32>`\n \n error[E0308]: mismatched types\n-  --> $DIR/structure-constructor-type-mismatch.rs:69:9\n+  --> $DIR/structure-constructor-type-mismatch.rs:67:9\n    |\n LL |     match (Pair { x: 1, y: 2 }) {\n    |           --------------------- this expression has type `Pair<{integer}, {integer}>`"}, {"sha": "b6012e41594b522311f57cb2bc4f071ff71be7c4", "filename": "src/test/ui/symbol-names/impl1.legacy.stderr", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fui%2Fsymbol-names%2Fimpl1.legacy.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fui%2Fsymbol-names%2Fimpl1.legacy.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsymbol-names%2Fimpl1.legacy.stderr?ref=3ea62cb5d19846b44172d861ae231c8c09322800", "patch": "@@ -1,71 +1,71 @@\n error: symbol-name(_ZN5impl13foo3Foo3bar17<SYMBOL_HASH>)\n-  --> $DIR/impl1.rs:15:9\n+  --> $DIR/impl1.rs:14:9\n    |\n LL |         #[rustc_symbol_name]\n    |         ^^^^^^^^^^^^^^^^^^^^\n \n error: demangling(impl1::foo::Foo::bar::<SYMBOL_HASH>)\n-  --> $DIR/impl1.rs:15:9\n+  --> $DIR/impl1.rs:14:9\n    |\n LL |         #[rustc_symbol_name]\n    |         ^^^^^^^^^^^^^^^^^^^^\n \n error: demangling-alt(impl1::foo::Foo::bar)\n-  --> $DIR/impl1.rs:15:9\n+  --> $DIR/impl1.rs:14:9\n    |\n LL |         #[rustc_symbol_name]\n    |         ^^^^^^^^^^^^^^^^^^^^\n \n error: def-path(foo::Foo::bar)\n-  --> $DIR/impl1.rs:22:9\n+  --> $DIR/impl1.rs:21:9\n    |\n LL |         #[rustc_def_path]\n    |         ^^^^^^^^^^^^^^^^^\n \n error: symbol-name(_ZN5impl13bar33_$LT$impl$u20$impl1..foo..Foo$GT$3baz17<SYMBOL_HASH>)\n-  --> $DIR/impl1.rs:33:9\n+  --> $DIR/impl1.rs:32:9\n    |\n LL |         #[rustc_symbol_name]\n    |         ^^^^^^^^^^^^^^^^^^^^\n \n error: demangling(impl1::bar::<impl impl1::foo::Foo>::baz::<SYMBOL_HASH>)\n-  --> $DIR/impl1.rs:33:9\n+  --> $DIR/impl1.rs:32:9\n    |\n LL |         #[rustc_symbol_name]\n    |         ^^^^^^^^^^^^^^^^^^^^\n \n error: demangling-alt(impl1::bar::<impl impl1::foo::Foo>::baz)\n-  --> $DIR/impl1.rs:33:9\n+  --> $DIR/impl1.rs:32:9\n    |\n LL |         #[rustc_symbol_name]\n    |         ^^^^^^^^^^^^^^^^^^^^\n \n error: def-path(bar::<impl foo::Foo>::baz)\n-  --> $DIR/impl1.rs:40:9\n+  --> $DIR/impl1.rs:39:9\n    |\n LL |         #[rustc_def_path]\n    |         ^^^^^^^^^^^^^^^^^\n \n error: symbol-name(_ZN209_$LT$$u5b$$RF$dyn$u20$impl1..Foo$u2b$Assoc$u20$$u3d$$u20$extern$u20$$u22$C$u22$$u20$fn$LP$$RF$u8$C$$u20$...$RP$$u2b$impl1..AutoTrait$u3b$$u20$3$u5d$$u20$as$u20$impl1..main..$u7b$$u7b$closure$u7d$$u7d$..Bar$GT$6method17<SYMBOL_HASH>)\n-  --> $DIR/impl1.rs:63:13\n+  --> $DIR/impl1.rs:62:13\n    |\n LL |             #[rustc_symbol_name]\n    |             ^^^^^^^^^^^^^^^^^^^^\n \n error: demangling(<[&dyn impl1::Foo+Assoc = extern \"C\" fn(&u8, ::.)+impl1::AutoTrait; 3] as impl1::main::{{closure}}::Bar>::method::<SYMBOL_HASH>)\n-  --> $DIR/impl1.rs:63:13\n+  --> $DIR/impl1.rs:62:13\n    |\n LL |             #[rustc_symbol_name]\n    |             ^^^^^^^^^^^^^^^^^^^^\n \n error: demangling-alt(<[&dyn impl1::Foo+Assoc = extern \"C\" fn(&u8, ::.)+impl1::AutoTrait; 3] as impl1::main::{{closure}}::Bar>::method)\n-  --> $DIR/impl1.rs:63:13\n+  --> $DIR/impl1.rs:62:13\n    |\n LL |             #[rustc_symbol_name]\n    |             ^^^^^^^^^^^^^^^^^^^^\n \n error: def-path(<[&dyn Foo<Assoc = for<'r> extern \"C\" fn(&'r u8, ...)> + AutoTrait; 3] as main::{closure#1}::Bar>::method)\n-  --> $DIR/impl1.rs:70:13\n+  --> $DIR/impl1.rs:69:13\n    |\n LL |             #[rustc_def_path]\n    |             ^^^^^^^^^^^^^^^^^"}, {"sha": "b0b31a57d0692db4359d0019a4fed440466a7519", "filename": "src/test/ui/symbol-names/impl1.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fui%2Fsymbol-names%2Fimpl1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fui%2Fsymbol-names%2Fimpl1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsymbol-names%2Fimpl1.rs?ref=3ea62cb5d19846b44172d861ae231c8c09322800", "patch": "@@ -1,5 +1,4 @@\n // build-fail\n-// ignore-tidy-linelength\n // revisions: legacy v0\n //[legacy]compile-flags: -Z symbol-mangling-version=legacy\n     //[v0]compile-flags: -Z symbol-mangling-version=v0"}, {"sha": "20e48782a3a9e5dfeafeab1c854b5cc9234155e6", "filename": "src/test/ui/symbol-names/impl1.stderr", "status": "removed", "additions": 0, "deletions": 26, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/97717a561844eccbb6d6cc114adb94a8fa4e0172/src%2Ftest%2Fui%2Fsymbol-names%2Fimpl1.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/97717a561844eccbb6d6cc114adb94a8fa4e0172/src%2Ftest%2Fui%2Fsymbol-names%2Fimpl1.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsymbol-names%2Fimpl1.stderr?ref=97717a561844eccbb6d6cc114adb94a8fa4e0172", "patch": "@@ -1,26 +0,0 @@\n-error: symbol-name(_ZN5impl13foo3Foo3bar17he53b9bee7600ed8dE)\n-  --> $DIR/impl1.rs:8:9\n-   |\n-LL |         #[rustc_symbol_name]\n-   |         ^^^^^^^^^^^^^^^^^^^^\n-\n-error: def-path(foo::Foo::bar)\n-  --> $DIR/impl1.rs:9:9\n-   |\n-LL |         #[rustc_def_path]\n-   |         ^^^^^^^^^^^^^^^^^\n-\n-error: symbol-name(_ZN5impl13bar33_$LT$impl$u20$impl1..foo..Foo$GT$3baz17h86c41f0462d901d4E)\n-  --> $DIR/impl1.rs:18:9\n-   |\n-LL |         #[rustc_symbol_name]\n-   |         ^^^^^^^^^^^^^^^^^^^^\n-\n-error: def-path(bar::<impl foo::Foo>::baz)\n-  --> $DIR/impl1.rs:19:9\n-   |\n-LL |         #[rustc_def_path]\n-   |         ^^^^^^^^^^^^^^^^^\n-\n-error: aborting due to 4 previous errors\n-"}, {"sha": "e5b0deee36e3c0bb72112610a2cda0348b32a924", "filename": "src/test/ui/symbol-names/impl1.v0.stderr", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fui%2Fsymbol-names%2Fimpl1.v0.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fui%2Fsymbol-names%2Fimpl1.v0.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsymbol-names%2Fimpl1.v0.stderr?ref=3ea62cb5d19846b44172d861ae231c8c09322800", "patch": "@@ -1,71 +1,71 @@\n error: symbol-name(_RNvMNtCs21hi0yVfW1J_5impl13fooNtB2_3Foo3bar)\n-  --> $DIR/impl1.rs:15:9\n+  --> $DIR/impl1.rs:14:9\n    |\n LL |         #[rustc_symbol_name]\n    |         ^^^^^^^^^^^^^^^^^^^^\n \n error: demangling(<impl1[17891616a171812d]::foo::Foo>::bar)\n-  --> $DIR/impl1.rs:15:9\n+  --> $DIR/impl1.rs:14:9\n    |\n LL |         #[rustc_symbol_name]\n    |         ^^^^^^^^^^^^^^^^^^^^\n \n error: demangling-alt(<impl1::foo::Foo>::bar)\n-  --> $DIR/impl1.rs:15:9\n+  --> $DIR/impl1.rs:14:9\n    |\n LL |         #[rustc_symbol_name]\n    |         ^^^^^^^^^^^^^^^^^^^^\n \n error: def-path(foo::Foo::bar)\n-  --> $DIR/impl1.rs:22:9\n+  --> $DIR/impl1.rs:21:9\n    |\n LL |         #[rustc_def_path]\n    |         ^^^^^^^^^^^^^^^^^\n \n error: symbol-name(_RNvMNtCs21hi0yVfW1J_5impl13barNtNtB4_3foo3Foo3baz)\n-  --> $DIR/impl1.rs:33:9\n+  --> $DIR/impl1.rs:32:9\n    |\n LL |         #[rustc_symbol_name]\n    |         ^^^^^^^^^^^^^^^^^^^^\n \n error: demangling(<impl1[17891616a171812d]::foo::Foo>::baz)\n-  --> $DIR/impl1.rs:33:9\n+  --> $DIR/impl1.rs:32:9\n    |\n LL |         #[rustc_symbol_name]\n    |         ^^^^^^^^^^^^^^^^^^^^\n \n error: demangling-alt(<impl1::foo::Foo>::baz)\n-  --> $DIR/impl1.rs:33:9\n+  --> $DIR/impl1.rs:32:9\n    |\n LL |         #[rustc_symbol_name]\n    |         ^^^^^^^^^^^^^^^^^^^^\n \n error: def-path(bar::<impl foo::Foo>::baz)\n-  --> $DIR/impl1.rs:40:9\n+  --> $DIR/impl1.rs:39:9\n    |\n LL |         #[rustc_def_path]\n    |         ^^^^^^^^^^^^^^^^^\n \n error: symbol-name(_RNvXNCNvCs21hi0yVfW1J_5impl14mains_0ARDNtB6_3Foop5AssocFG_KCRL0_hvEuNtB6_9AutoTraitEL_j3_NtB2_3Bar6method)\n-  --> $DIR/impl1.rs:63:13\n+  --> $DIR/impl1.rs:62:13\n    |\n LL |             #[rustc_symbol_name]\n    |             ^^^^^^^^^^^^^^^^^^^^\n \n error: demangling(<[&dyn impl1[17891616a171812d]::Foo<Assoc = for<'a> extern \"C\" fn(&'a u8, ...)> + impl1[17891616a171812d]::AutoTrait; 3: usize] as impl1[17891616a171812d]::main::{closure#1}::Bar>::method)\n-  --> $DIR/impl1.rs:63:13\n+  --> $DIR/impl1.rs:62:13\n    |\n LL |             #[rustc_symbol_name]\n    |             ^^^^^^^^^^^^^^^^^^^^\n \n error: demangling-alt(<[&dyn impl1::Foo<Assoc = for<'a> extern \"C\" fn(&'a u8, ...)> + impl1::AutoTrait; 3] as impl1::main::{closure#1}::Bar>::method)\n-  --> $DIR/impl1.rs:63:13\n+  --> $DIR/impl1.rs:62:13\n    |\n LL |             #[rustc_symbol_name]\n    |             ^^^^^^^^^^^^^^^^^^^^\n \n error: def-path(<[&dyn Foo<Assoc = for<'r> extern \"C\" fn(&'r u8, ...)> + AutoTrait; 3] as main::{closure#1}::Bar>::method)\n-  --> $DIR/impl1.rs:70:13\n+  --> $DIR/impl1.rs:69:13\n    |\n LL |             #[rustc_def_path]\n    |             ^^^^^^^^^^^^^^^^^"}, {"sha": "8357678399235c3f303d5ed8b37f436dd227683e", "filename": "src/test/ui/symbol-names/issue-60925.legacy.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fui%2Fsymbol-names%2Fissue-60925.legacy.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fui%2Fsymbol-names%2Fissue-60925.legacy.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsymbol-names%2Fissue-60925.legacy.stderr?ref=3ea62cb5d19846b44172d861ae231c8c09322800", "patch": "@@ -1,17 +1,17 @@\n error: symbol-name(_ZN11issue_609253foo37Foo$LT$issue_60925..llv$u6d$..Foo$GT$3foo17h6244e5288326926aE)\n-  --> $DIR/issue-60925.rs:22:9\n+  --> $DIR/issue-60925.rs:21:9\n    |\n LL |         #[rustc_symbol_name]\n    |         ^^^^^^^^^^^^^^^^^^^^\n \n error: demangling(issue_60925::foo::Foo<issue_60925::llvm::Foo>::foo::h6244e5288326926a)\n-  --> $DIR/issue-60925.rs:22:9\n+  --> $DIR/issue-60925.rs:21:9\n    |\n LL |         #[rustc_symbol_name]\n    |         ^^^^^^^^^^^^^^^^^^^^\n \n error: demangling-alt(issue_60925::foo::Foo<issue_60925::llvm::Foo>::foo)\n-  --> $DIR/issue-60925.rs:22:9\n+  --> $DIR/issue-60925.rs:21:9\n    |\n LL |         #[rustc_symbol_name]\n    |         ^^^^^^^^^^^^^^^^^^^^"}, {"sha": "3238eb1e579f079c736cb18b631421890887d697", "filename": "src/test/ui/symbol-names/issue-60925.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fui%2Fsymbol-names%2Fissue-60925.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fui%2Fsymbol-names%2Fissue-60925.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsymbol-names%2Fissue-60925.rs?ref=3ea62cb5d19846b44172d861ae231c8c09322800", "patch": "@@ -1,5 +1,4 @@\n // build-fail\n-// ignore-tidy-linelength\n // revisions: legacy v0\n //[legacy]compile-flags: -Z symbol-mangling-version=legacy\n     //[v0]compile-flags: -Z symbol-mangling-version=v0"}, {"sha": "ae753f0cebbcdf7b4f36c2bebbac69b3762ece10", "filename": "src/test/ui/symbol-names/issue-60925.stderr", "status": "removed", "additions": 0, "deletions": 20, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/97717a561844eccbb6d6cc114adb94a8fa4e0172/src%2Ftest%2Fui%2Fsymbol-names%2Fissue-60925.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/97717a561844eccbb6d6cc114adb94a8fa4e0172/src%2Ftest%2Fui%2Fsymbol-names%2Fissue-60925.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsymbol-names%2Fissue-60925.stderr?ref=97717a561844eccbb6d6cc114adb94a8fa4e0172", "patch": "@@ -1,20 +0,0 @@\n-error: symbol-name(_ZN11issue_609253foo36Foo$LT$issue_60925..llv$6d$..Foo$GT$3foo17h059a991a004536adE)\n-  --> $DIR/issue-60925.rs:16:9\n-   |\n-LL |         #[rustc_symbol_name]\n-   |         ^^^^^^^^^^^^^^^^^^^^\n-\n-error: demangling(issue_60925::foo::Foo<issue_60925::llv$6d$..Foo$GT$::foo::h059a991a004536ad)\n-  --> $DIR/issue-60925.rs:16:9\n-   |\n-LL |         #[rustc_symbol_name]\n-   |         ^^^^^^^^^^^^^^^^^^^^\n-\n-error: demangling-alt(issue_60925::foo::Foo<issue_60925::llv$6d$..Foo$GT$::foo)\n-  --> $DIR/issue-60925.rs:16:9\n-   |\n-LL |         #[rustc_symbol_name]\n-   |         ^^^^^^^^^^^^^^^^^^^^\n-\n-error: aborting due to 3 previous errors\n-"}, {"sha": "6a5885e1ea32b08149fdd6cf06598f5ba986eab8", "filename": "src/test/ui/symbol-names/issue-60925.v0.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fui%2Fsymbol-names%2Fissue-60925.v0.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fui%2Fsymbol-names%2Fissue-60925.v0.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsymbol-names%2Fissue-60925.v0.stderr?ref=3ea62cb5d19846b44172d861ae231c8c09322800", "patch": "@@ -1,17 +1,17 @@\n error: symbol-name(_RNvMNtCs21hi0yVfW1J_11issue_609253fooINtB2_3FooNtNtB4_4llvm3FooE3foo)\n-  --> $DIR/issue-60925.rs:22:9\n+  --> $DIR/issue-60925.rs:21:9\n    |\n LL |         #[rustc_symbol_name]\n    |         ^^^^^^^^^^^^^^^^^^^^\n \n error: demangling(<issue_60925[17891616a171812d]::foo::Foo<issue_60925[17891616a171812d]::llvm::Foo>>::foo)\n-  --> $DIR/issue-60925.rs:22:9\n+  --> $DIR/issue-60925.rs:21:9\n    |\n LL |         #[rustc_symbol_name]\n    |         ^^^^^^^^^^^^^^^^^^^^\n \n error: demangling-alt(<issue_60925::foo::Foo<issue_60925::llvm::Foo>>::foo)\n-  --> $DIR/issue-60925.rs:22:9\n+  --> $DIR/issue-60925.rs:21:9\n    |\n LL |         #[rustc_symbol_name]\n    |         ^^^^^^^^^^^^^^^^^^^^"}, {"sha": "aadc0cf43a2120ff547c3731ab635968f92ba6e9", "filename": "src/test/ui/symbol-names/issue-75326.legacy.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fui%2Fsymbol-names%2Fissue-75326.legacy.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fui%2Fsymbol-names%2Fissue-75326.legacy.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsymbol-names%2Fissue-75326.legacy.stderr?ref=3ea62cb5d19846b44172d861ae231c8c09322800", "patch": "@@ -1,17 +1,17 @@\n error: symbol-name(_ZN72_$LT$issue_75326..Foo$LT$I$C$E$GT$$u20$as$u20$issue_75326..Iterator2$GT$4next17SYMBOL_HASH)\n-  --> $DIR/issue-75326.rs:42:5\n+  --> $DIR/issue-75326.rs:41:5\n    |\n LL |     #[rustc_symbol_name]\n    |     ^^^^^^^^^^^^^^^^^^^^\n \n error: demangling(<issue_75326::Foo<I,E> as issue_75326::Iterator2>::next::SYMBOL_HASH)\n-  --> $DIR/issue-75326.rs:42:5\n+  --> $DIR/issue-75326.rs:41:5\n    |\n LL |     #[rustc_symbol_name]\n    |     ^^^^^^^^^^^^^^^^^^^^\n \n error: demangling-alt(<issue_75326::Foo<I,E> as issue_75326::Iterator2>::next)\n-  --> $DIR/issue-75326.rs:42:5\n+  --> $DIR/issue-75326.rs:41:5\n    |\n LL |     #[rustc_symbol_name]\n    |     ^^^^^^^^^^^^^^^^^^^^"}, {"sha": "4d061cafef3b2d99a125b57220c50d18a269dcfc", "filename": "src/test/ui/symbol-names/issue-75326.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fui%2Fsymbol-names%2Fissue-75326.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fui%2Fsymbol-names%2Fissue-75326.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsymbol-names%2Fissue-75326.rs?ref=3ea62cb5d19846b44172d861ae231c8c09322800", "patch": "@@ -1,5 +1,4 @@\n // build-fail\n-// ignore-tidy-linelength\n // revisions: legacy v0\n //[legacy]compile-flags: -Z symbol-mangling-version=legacy\n //[v0]compile-flags: -Z symbol-mangling-version=v0"}, {"sha": "98844aafb65528ac8f7210198a7c52537282a2bd", "filename": "src/test/ui/symbol-names/issue-75326.v0.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fui%2Fsymbol-names%2Fissue-75326.v0.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fui%2Fsymbol-names%2Fissue-75326.v0.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsymbol-names%2Fissue-75326.v0.stderr?ref=3ea62cb5d19846b44172d861ae231c8c09322800", "patch": "@@ -1,17 +1,17 @@\n error: symbol-name(_RNvXINICs21hi0yVfW1J_11issue_75326s_0pppEINtB5_3FooppENtB5_9Iterator24nextB5_)\n-  --> $DIR/issue-75326.rs:42:5\n+  --> $DIR/issue-75326.rs:41:5\n    |\n LL |     #[rustc_symbol_name]\n    |     ^^^^^^^^^^^^^^^^^^^^\n \n error: demangling(<issue_75326[17891616a171812d]::Foo<_, _> as issue_75326[17891616a171812d]::Iterator2>::next)\n-  --> $DIR/issue-75326.rs:42:5\n+  --> $DIR/issue-75326.rs:41:5\n    |\n LL |     #[rustc_symbol_name]\n    |     ^^^^^^^^^^^^^^^^^^^^\n \n error: demangling-alt(<issue_75326::Foo<_, _> as issue_75326::Iterator2>::next)\n-  --> $DIR/issue-75326.rs:42:5\n+  --> $DIR/issue-75326.rs:41:5\n    |\n LL |     #[rustc_symbol_name]\n    |     ^^^^^^^^^^^^^^^^^^^^"}, {"sha": "e4abb96b4bff3a3ed64c7d4b3de4558a96fc9802", "filename": "src/test/ui/type-alias-enum-variants/incorrect-variant-form-through-alias-caught.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fui%2Ftype-alias-enum-variants%2Fincorrect-variant-form-through-alias-caught.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fui%2Ftype-alias-enum-variants%2Fincorrect-variant-form-through-alias-caught.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftype-alias-enum-variants%2Fincorrect-variant-form-through-alias-caught.rs?ref=3ea62cb5d19846b44172d861ae231c8c09322800", "patch": "@@ -1,5 +1,3 @@\n-// ignore-tidy-linelength\n-\n // Check that creating/matching on an enum variant through an alias with\n // the wrong braced/unit form is caught as an error.\n "}, {"sha": "f80abade0fd54d18c2ce0b4c13fae6026a8045ce", "filename": "src/test/ui/type-alias-enum-variants/incorrect-variant-form-through-alias-caught.stderr", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fui%2Ftype-alias-enum-variants%2Fincorrect-variant-form-through-alias-caught.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fui%2Ftype-alias-enum-variants%2Fincorrect-variant-form-through-alias-caught.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftype-alias-enum-variants%2Fincorrect-variant-form-through-alias-caught.stderr?ref=3ea62cb5d19846b44172d861ae231c8c09322800", "patch": "@@ -1,23 +1,23 @@\n error[E0533]: expected unit struct, unit variant or constant, found struct variant `Alias::Braced`\n-  --> $DIR/incorrect-variant-form-through-alias-caught.rs:10:5\n+  --> $DIR/incorrect-variant-form-through-alias-caught.rs:8:5\n    |\n LL |     Alias::Braced;\n    |     ^^^^^^^^^^^^^\n \n error[E0533]: expected unit struct, unit variant or constant, found struct variant `Alias::Braced`\n-  --> $DIR/incorrect-variant-form-through-alias-caught.rs:12:9\n+  --> $DIR/incorrect-variant-form-through-alias-caught.rs:10:9\n    |\n LL |     let Alias::Braced = panic!();\n    |         ^^^^^^^^^^^^^\n \n error[E0164]: expected tuple struct or tuple variant, found struct variant `Alias::Braced`\n-  --> $DIR/incorrect-variant-form-through-alias-caught.rs:14:9\n+  --> $DIR/incorrect-variant-form-through-alias-caught.rs:12:9\n    |\n LL |     let Alias::Braced(..) = panic!();\n    |         ^^^^^^^^^^^^^^^^^ not a tuple variant or struct\n \n error[E0618]: expected function, found enum variant `Alias::Unit`\n-  --> $DIR/incorrect-variant-form-through-alias-caught.rs:17:5\n+  --> $DIR/incorrect-variant-form-through-alias-caught.rs:15:5\n    |\n LL | enum Enum { Braced {}, Unit, Tuple() }\n    |                        ---- `Alias::Unit` defined here\n@@ -33,7 +33,7 @@ LL |     Alias::Unit;\n    |     ^^^^^^^^^^^\n \n error[E0164]: expected tuple struct or tuple variant, found unit variant `Alias::Unit`\n-  --> $DIR/incorrect-variant-form-through-alias-caught.rs:19:9\n+  --> $DIR/incorrect-variant-form-through-alias-caught.rs:17:9\n    |\n LL |     let Alias::Unit() = panic!();\n    |         ^^^^^^^^^^^^^ not a tuple variant or struct"}, {"sha": "ee4b7eef0bdc477579c74923c8f59386f27a41bc", "filename": "src/test/ui/type-alias-impl-trait/issue-53598.full_tait.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fissue-53598.full_tait.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fissue-53598.full_tait.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fissue-53598.full_tait.stderr?ref=3ea62cb5d19846b44172d861ae231c8c09322800", "patch": "@@ -1,5 +1,5 @@\n warning: the feature `type_alias_impl_trait` is incomplete and may not be safe to use and/or cause compiler crashes\n-  --> $DIR/issue-53598.rs:5:32\n+  --> $DIR/issue-53598.rs:4:32\n    |\n LL | #![cfg_attr(full_tait, feature(type_alias_impl_trait))]\n    |                                ^^^^^^^^^^^^^^^^^^^^^\n@@ -8,7 +8,7 @@ LL | #![cfg_attr(full_tait, feature(type_alias_impl_trait))]\n    = note: see issue #63063 <https://github.com/rust-lang/rust/issues/63063> for more information\n \n error: type parameter `T` is part of concrete type but not used in parameter list for the `impl Trait` type alias\n-  --> $DIR/issue-53598.rs:24:42\n+  --> $DIR/issue-53598.rs:23:42\n    |\n LL |       fn foo<T: Debug>(_: T) -> Self::Item {\n    |  __________________________________________^"}, {"sha": "728721b6dbd71ce3e60633c772e9ffd023e4b120", "filename": "src/test/ui/type-alias-impl-trait/issue-53598.min_tait.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fissue-53598.min_tait.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fissue-53598.min_tait.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fissue-53598.min_tait.stderr?ref=3ea62cb5d19846b44172d861ae231c8c09322800", "patch": "@@ -1,5 +1,5 @@\n error: type parameter `T` is part of concrete type but not used in parameter list for the `impl Trait` type alias\n-  --> $DIR/issue-53598.rs:24:42\n+  --> $DIR/issue-53598.rs:23:42\n    |\n LL |       fn foo<T: Debug>(_: T) -> Self::Item {\n    |  __________________________________________^"}, {"sha": "38067a72223741549c6d57f54870010cace1ba8a", "filename": "src/test/ui/type-alias-impl-trait/issue-53598.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fissue-53598.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fissue-53598.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fissue-53598.rs?ref=3ea62cb5d19846b44172d861ae231c8c09322800", "patch": "@@ -1,4 +1,3 @@\n-// ignore-tidy-linelength\n // ignore-compare-mode-chalk\n // revisions: min_tait full_tait\n #![feature(min_type_alias_impl_trait)]"}, {"sha": "4336532cdbbaff26d1afe07c733d7195280e96cb", "filename": "src/test/ui/type-alias-impl-trait/issue-57700.full_tait.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fissue-57700.full_tait.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fissue-57700.full_tait.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fissue-57700.full_tait.stderr?ref=3ea62cb5d19846b44172d861ae231c8c09322800", "patch": "@@ -1,5 +1,5 @@\n warning: the feature `type_alias_impl_trait` is incomplete and may not be safe to use and/or cause compiler crashes\n-  --> $DIR/issue-57700.rs:6:32\n+  --> $DIR/issue-57700.rs:5:32\n    |\n LL | #![cfg_attr(full_tait, feature(type_alias_impl_trait))]\n    |                                ^^^^^^^^^^^^^^^^^^^^^\n@@ -8,7 +8,7 @@ LL | #![cfg_attr(full_tait, feature(type_alias_impl_trait))]\n    = note: see issue #63063 <https://github.com/rust-lang/rust/issues/63063> for more information\n \n error: type parameter `impl Deref<Target = Self>` is part of concrete type but not used in parameter list for the `impl Trait` type alias\n-  --> $DIR/issue-57700.rs:20:58\n+  --> $DIR/issue-57700.rs:19:58\n    |\n LL |       fn foo(self: impl Deref<Target = Self>) -> Self::Bar {\n    |  __________________________________________________________^"}, {"sha": "47ab31cd797b8ea58e2bce30d14266267a3e0a85", "filename": "src/test/ui/type-alias-impl-trait/issue-57700.min_tait.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fissue-57700.min_tait.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fissue-57700.min_tait.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fissue-57700.min_tait.stderr?ref=3ea62cb5d19846b44172d861ae231c8c09322800", "patch": "@@ -1,5 +1,5 @@\n error: type parameter `impl Deref<Target = Self>` is part of concrete type but not used in parameter list for the `impl Trait` type alias\n-  --> $DIR/issue-57700.rs:20:58\n+  --> $DIR/issue-57700.rs:19:58\n    |\n LL |       fn foo(self: impl Deref<Target = Self>) -> Self::Bar {\n    |  __________________________________________________________^"}, {"sha": "476a188cde6980d7f1919969044c8dd4b5767fbf", "filename": "src/test/ui/type-alias-impl-trait/issue-57700.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fissue-57700.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fissue-57700.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fissue-57700.rs?ref=3ea62cb5d19846b44172d861ae231c8c09322800", "patch": "@@ -1,4 +1,3 @@\n-// ignore-tidy-linelength\n // ignore-compare-mode-chalk\n #![feature(arbitrary_self_types)]\n // revisions: min_tait full_tait"}, {"sha": "48f5b36bd17f3927a1734760f418d0eb3c24ba9a", "filename": "src/test/ui/union/union-deref.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fui%2Funion%2Funion-deref.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fui%2Funion%2Funion-deref.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Funion%2Funion-deref.rs?ref=3ea62cb5d19846b44172d861ae231c8c09322800", "patch": "@@ -1,4 +1,3 @@\n-// ignore-tidy-linelength\n //! Test the part of RFC 2514 that is about not applying `DerefMut` coercions\n //! of union fields.\n #![feature(untagged_unions)]"}, {"sha": "6af050bc4b79da7892795cca792a7cf6e8b11824", "filename": "src/test/ui/union/union-deref.stderr", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fui%2Funion%2Funion-deref.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fui%2Funion%2Funion-deref.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Funion%2Funion-deref.stderr?ref=3ea62cb5d19846b44172d861ae231c8c09322800", "patch": "@@ -1,5 +1,5 @@\n error: not automatically applying `DerefMut` on `ManuallyDrop` union field\n-  --> $DIR/union-deref.rs:15:14\n+  --> $DIR/union-deref.rs:14:14\n    |\n LL |     unsafe { u.f.0 = Vec::new() };\n    |              ^^^\n@@ -8,7 +8,7 @@ LL |     unsafe { u.f.0 = Vec::new() };\n    = help: add an explicit `*` if that is desired, or call `ptr::write` to not run the destructor\n \n error: not automatically applying `DerefMut` on `ManuallyDrop` union field\n-  --> $DIR/union-deref.rs:17:19\n+  --> $DIR/union-deref.rs:16:19\n    |\n LL |     unsafe { &mut u.f.0 };\n    |                   ^^^\n@@ -17,7 +17,7 @@ LL |     unsafe { &mut u.f.0 };\n    = help: add an explicit `*` if that is desired, or call `ptr::write` to not run the destructor\n \n error: not automatically applying `DerefMut` on `ManuallyDrop` union field\n-  --> $DIR/union-deref.rs:19:14\n+  --> $DIR/union-deref.rs:18:14\n    |\n LL |     unsafe { u.f.0.push(0) };\n    |              ^^^\n@@ -26,7 +26,7 @@ LL |     unsafe { u.f.0.push(0) };\n    = help: add an explicit `*` if that is desired, or call `ptr::write` to not run the destructor\n \n error: not automatically applying `DerefMut` on `ManuallyDrop` union field\n-  --> $DIR/union-deref.rs:23:14\n+  --> $DIR/union-deref.rs:22:14\n    |\n LL |     unsafe { u.f.0.0 = Vec::new() };\n    |              ^^^^^\n@@ -35,7 +35,7 @@ LL |     unsafe { u.f.0.0 = Vec::new() };\n    = help: add an explicit `*` if that is desired, or call `ptr::write` to not run the destructor\n \n error: not automatically applying `DerefMut` on `ManuallyDrop` union field\n-  --> $DIR/union-deref.rs:25:19\n+  --> $DIR/union-deref.rs:24:19\n    |\n LL |     unsafe { &mut u.f.0.0 };\n    |                   ^^^^^\n@@ -44,7 +44,7 @@ LL |     unsafe { &mut u.f.0.0 };\n    = help: add an explicit `*` if that is desired, or call `ptr::write` to not run the destructor\n \n error: not automatically applying `DerefMut` on `ManuallyDrop` union field\n-  --> $DIR/union-deref.rs:27:14\n+  --> $DIR/union-deref.rs:26:14\n    |\n LL |     unsafe { u.f.0.0.push(0) };\n    |              ^^^^^"}, {"sha": "ebe6edd1010147844ecf7c56426ac7744437838f", "filename": "src/test/ui/unsized/return-unsized-from-trait-method.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fui%2Funsized%2Freturn-unsized-from-trait-method.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fui%2Funsized%2Freturn-unsized-from-trait-method.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Funsized%2Freturn-unsized-from-trait-method.rs?ref=3ea62cb5d19846b44172d861ae231c8c09322800", "patch": "@@ -1,5 +1,3 @@\n-// ignore-tidy-linelength\n-\n // regression test for #26376\n \n trait Foo {"}, {"sha": "4dd7cf5e02fc27f7156f9e66ef497f3e8959c492", "filename": "src/test/ui/unsized/return-unsized-from-trait-method.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fui%2Funsized%2Freturn-unsized-from-trait-method.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/3ea62cb5d19846b44172d861ae231c8c09322800/src%2Ftest%2Fui%2Funsized%2Freturn-unsized-from-trait-method.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Funsized%2Freturn-unsized-from-trait-method.stderr?ref=3ea62cb5d19846b44172d861ae231c8c09322800", "patch": "@@ -1,5 +1,5 @@\n error[E0161]: cannot move a value of type [u8]: the size of [u8] cannot be statically determined\n-  --> $DIR/return-unsized-from-trait-method.rs:11:17\n+  --> $DIR/return-unsized-from-trait-method.rs:9:17\n    |\n LL |         let _ = f.foo();\n    |                 ^^^^^^^"}]}