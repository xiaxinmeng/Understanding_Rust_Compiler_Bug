{"sha": "b4d97543471a21b00de8a79fae15e6cf9a31508e", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI0ZDk3NTQzNDcxYTIxYjAwZGU4YTc5ZmFlMTVlNmNmOWEzMTUwOGU=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2010-12-04T02:20:41Z"}, "committer": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2010-12-04T02:20:41Z"}, "message": "rustc: Make new_fn_ctxt and copy_args_to_allocas receive a list of args rather than an AST fn, so we can use it for tag constructors", "tree": {"sha": "e922cbb9edbca8cd7a97710f0bd4929a618c90e9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e922cbb9edbca8cd7a97710f0bd4929a618c90e9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b4d97543471a21b00de8a79fae15e6cf9a31508e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b4d97543471a21b00de8a79fae15e6cf9a31508e", "html_url": "https://github.com/rust-lang/rust/commit/b4d97543471a21b00de8a79fae15e6cf9a31508e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b4d97543471a21b00de8a79fae15e6cf9a31508e/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2e119698b7354b6fd2b96dccfeea821bc538d8f1", "url": "https://api.github.com/repos/rust-lang/rust/commits/2e119698b7354b6fd2b96dccfeea821bc538d8f1", "html_url": "https://github.com/rust-lang/rust/commit/2e119698b7354b6fd2b96dccfeea821bc538d8f1"}], "stats": {"total": 12, "additions": 6, "deletions": 6}, "files": [{"sha": "9b94526b7f8a2d6aabe0edf24a62a69cd41c11c5", "filename": "src/comp/middle/trans.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/b4d97543471a21b00de8a79fae15e6cf9a31508e/src%2Fcomp%2Fmiddle%2Ftrans.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b4d97543471a21b00de8a79fae15e6cf9a31508e/src%2Fcomp%2Fmiddle%2Ftrans.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Ftrans.rs?ref=b4d97543471a21b00de8a79fae15e6cf9a31508e", "patch": "@@ -1784,7 +1784,7 @@ impure fn trans_block(@block_ctxt cx, &ast.block b) -> result {\n \n fn new_fn_ctxt(@crate_ctxt cx,\n                str name,\n-               &ast._fn f,\n+               vec[ast.arg] args,\n                ast.def_id fid) -> @fn_ctxt {\n \n     check (cx.item_ids.contains_key(fid));\n@@ -1797,7 +1797,7 @@ fn new_fn_ctxt(@crate_ctxt cx,\n     let hashmap[ast.def_id, ValueRef] lllocals = new_def_hash[ValueRef]();\n     let hashmap[ast.def_id, ValueRef] llargs = new_def_hash[ValueRef]();\n \n-    for (ast.arg arg in f.inputs) {\n+    for (ast.arg arg in args) {\n         auto llarg = llvm.LLVMGetParam(llfn, arg_n);\n         check (llarg as int != 0);\n         llargs.insert(arg.id, llarg);\n@@ -1816,7 +1816,7 @@ fn new_fn_ctxt(@crate_ctxt cx,\n // allocas immediately upon entry; this permits us to GEP into structures we\n // were passed and whatnot. Apparently mem2reg will mop up.\n \n-fn copy_args_to_allocas(@block_ctxt cx, &ast._fn f, &ast.ann ann) {\n+fn copy_args_to_allocas(@block_ctxt cx, vec[ast.arg] args, &ast.ann ann) {\n \n     let vec[typeck.arg] arg_ts = vec();\n     let @typeck.ty fty = node_ann_type(cx.fcx.ccx, ann);\n@@ -1826,7 +1826,7 @@ fn copy_args_to_allocas(@block_ctxt cx, &ast._fn f, &ast.ann ann) {\n \n     let uint arg_n = 0u;\n \n-    for (ast.arg aarg in f.inputs) {\n+    for (ast.arg aarg in args) {\n         auto arg = arg_ts.(arg_n);\n         auto arg_t = type_of(cx.fcx.ccx, arg.ty);\n         auto alloca = cx.build.Alloca(arg_t);\n@@ -1846,10 +1846,10 @@ fn is_terminated(@block_ctxt cx) -> bool {\n impure fn trans_fn(@crate_ctxt cx, &ast._fn f, ast.def_id fid,\n                    &ast.ann ann) {\n \n-    auto fcx = new_fn_ctxt(cx, cx.path, f, fid);\n+    auto fcx = new_fn_ctxt(cx, cx.path, f.inputs, fid);\n     auto bcx = new_top_block_ctxt(fcx);\n \n-    copy_args_to_allocas(bcx, f, ann);\n+    copy_args_to_allocas(bcx, f.inputs, ann);\n \n     auto res = trans_block(bcx, f.body);\n     if (!is_terminated(res.bcx)) {"}]}