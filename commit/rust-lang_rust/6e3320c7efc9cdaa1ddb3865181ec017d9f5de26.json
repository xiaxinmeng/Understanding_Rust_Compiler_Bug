{"sha": "6e3320c7efc9cdaa1ddb3865181ec017d9f5de26", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZlMzMyMGM3ZWZjOWNkYWExZGRiMzg2NTE4MWVjMDE3ZDlmNWRlMjY=", "commit": {"author": {"name": "Philipp Hansch", "email": "dev@phansch.net", "date": "2018-11-03T09:58:45Z"}, "committer": {"name": "Philipp Hansch", "email": "dev@phansch.net", "date": "2018-11-03T09:58:45Z"}, "message": "Test clippy_dev on CI and fix test", "tree": {"sha": "f070b78a2bbb15ceca8e5957a493f725c264e461", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f070b78a2bbb15ceca8e5957a493f725c264e461"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6e3320c7efc9cdaa1ddb3865181ec017d9f5de26", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIyBAABCgAdFiEEvUKv4zqIn2RHUgCKtvoGpuDiZlsFAlvdcWUACgkQtvoGpuDi\nZlt2gw/3cOUrovQtSTJJHM/XqPS6bhF5SkXqqr1hBZ/ApxRP/4TzF48L+vwOATiu\njGzHeHCbBfFCSalzfCXhOESRjD9LXUyS9AJTx1fP/TTFtf/1RiPS9LiyZG2n98/5\nFIM51jSzACbYo7wk1jPZof/PSgaRrGAY3jM/MPbmN4djUQApSyioukijY5Zc9OzF\nUftflxLoQJoxBygWncb8z8NMbz4E1v57yLCzHYiikW4hgHdaLcT1hn22fGIAGtAr\n6t2lO9pYWD5iP/EEAogxzcx3HVLH+08E/0VkqLVgIJAW7YiCUIfk0Mf57XGu9eLT\nZRVMViX9p2BwPEAcGKiHy6EygiA1NXMvO0VPzOa1ApORU0tj+i+NXBOYcDfux2cF\nqV1LPVmE964oYM3J4KbomzuaoSpa71y5POGh7afvqsZ4wsfkqHkPzCwYrU4m4gAe\nfGED4ZLDOts1x1DlTDKaYLddai1NAvCzIeSEM/pOVFagaKY0YAl8RVpeF2cyVuZF\nA0jcmlVsuHR2Nwr2ic9fL4UxGcTWrNAaD/XRygiAgiwL2ZkHSzXSU4oyBqsrxhwi\nak6lEwTHc9AF/WluL7OoG3oHAJtwhtDrRaSht5Ohb4L7aMT/ey+rtYPoj/GKHR+T\nMXayfcPEvlSIt7pnBtcBw+jutjte+0muEQAYI1MMScAa875Lhg==\n=ZYGU\n-----END PGP SIGNATURE-----", "payload": "tree f070b78a2bbb15ceca8e5957a493f725c264e461\nparent 5fc25d30e25fa5c05c34812eab311c42b464bb17\nauthor Philipp Hansch <dev@phansch.net> 1541239125 +0100\ncommitter Philipp Hansch <dev@phansch.net> 1541239125 +0100\n\nTest clippy_dev on CI and fix test\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6e3320c7efc9cdaa1ddb3865181ec017d9f5de26", "html_url": "https://github.com/rust-lang/rust/commit/6e3320c7efc9cdaa1ddb3865181ec017d9f5de26", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6e3320c7efc9cdaa1ddb3865181ec017d9f5de26/comments", "author": {"login": "phansch", "id": 2042399, "node_id": "MDQ6VXNlcjIwNDIzOTk=", "avatar_url": "https://avatars.githubusercontent.com/u/2042399?v=4", "gravatar_id": "", "url": "https://api.github.com/users/phansch", "html_url": "https://github.com/phansch", "followers_url": "https://api.github.com/users/phansch/followers", "following_url": "https://api.github.com/users/phansch/following{/other_user}", "gists_url": "https://api.github.com/users/phansch/gists{/gist_id}", "starred_url": "https://api.github.com/users/phansch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/phansch/subscriptions", "organizations_url": "https://api.github.com/users/phansch/orgs", "repos_url": "https://api.github.com/users/phansch/repos", "events_url": "https://api.github.com/users/phansch/events{/privacy}", "received_events_url": "https://api.github.com/users/phansch/received_events", "type": "User", "site_admin": false}, "committer": {"login": "phansch", "id": 2042399, "node_id": "MDQ6VXNlcjIwNDIzOTk=", "avatar_url": "https://avatars.githubusercontent.com/u/2042399?v=4", "gravatar_id": "", "url": "https://api.github.com/users/phansch", "html_url": "https://github.com/phansch", "followers_url": "https://api.github.com/users/phansch/followers", "following_url": "https://api.github.com/users/phansch/following{/other_user}", "gists_url": "https://api.github.com/users/phansch/gists{/gist_id}", "starred_url": "https://api.github.com/users/phansch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/phansch/subscriptions", "organizations_url": "https://api.github.com/users/phansch/orgs", "repos_url": "https://api.github.com/users/phansch/repos", "events_url": "https://api.github.com/users/phansch/events{/privacy}", "received_events_url": "https://api.github.com/users/phansch/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5fc25d30e25fa5c05c34812eab311c42b464bb17", "url": "https://api.github.com/repos/rust-lang/rust/commits/5fc25d30e25fa5c05c34812eab311c42b464bb17", "html_url": "https://github.com/rust-lang/rust/commit/5fc25d30e25fa5c05c34812eab311c42b464bb17"}], "stats": {"total": 7, "additions": 4, "deletions": 3}, "files": [{"sha": "dc0802a941d1626d46802949fb5e8aa84bc4d636", "filename": "ci/base-tests.sh", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/6e3320c7efc9cdaa1ddb3865181ec017d9f5de26/ci%2Fbase-tests.sh", "raw_url": "https://github.com/rust-lang/rust/raw/6e3320c7efc9cdaa1ddb3865181ec017d9f5de26/ci%2Fbase-tests.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/ci%2Fbase-tests.sh?ref=6e3320c7efc9cdaa1ddb3865181ec017d9f5de26", "patch": "@@ -22,6 +22,7 @@ cargo build --features debugging\n cargo test --features debugging\n cd clippy_lints && cargo test && cd ..\n cd rustc_tools_util && cargo test && cd ..\n+cd clippy_dev && cargo test && cd ..\n # check that the lint lists are up-to-date\n ./util/update_lints.py -c\n "}, {"sha": "28cc4600a09a213f71d93e6868a65017aea0d73b", "filename": "clippy_dev/src/lib.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/6e3320c7efc9cdaa1ddb3865181ec017d9f5de26/clippy_dev%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6e3320c7efc9cdaa1ddb3865181ec017d9f5de26/clippy_dev%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_dev%2Fsrc%2Flib.rs?ref=6e3320c7efc9cdaa1ddb3865181ec017d9f5de26", "patch": "@@ -381,12 +381,12 @@ fn test_gen_modules_list() {\n     let lints = vec![\n         Lint::new(\"should_assert_eq\", \"group1\", \"abc\", None, \"module_name\"),\n         Lint::new(\"should_assert_eq2\", \"group2\", \"abc\", Some(\"abc\"), \"deprecated\"),\n-        Lint::new(\"incorrect_internal\", \"internal_style\", \"abc\", None, \"another_module\"),\n+        Lint::new(\"incorrect_stuff\", \"group3\", \"abc\", None, \"another_module\"),\n         Lint::new(\"incorrect_internal\", \"internal_style\", \"abc\", None, \"module_name\"),\n     ];\n     let expected = vec![\n-        \"pub mod another_module;\\n\".to_string(),\n-        \"pub mod module_name;\\n\".to_string(),\n+        \"pub mod another_module;\".to_string(),\n+        \"pub mod module_name;\".to_string(),\n     ];\n     assert_eq!(expected, gen_modules_list(lints));\n }"}]}