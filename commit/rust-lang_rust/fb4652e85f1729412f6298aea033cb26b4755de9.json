{"sha": "fb4652e85f1729412f6298aea033cb26b4755de9", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZiNDY1MmU4NWYxNzI5NDEyZjYyOThhZWEwMzNjYjI2YjQ3NTVkZTk=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-06-04T02:48:06Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-06-04T02:48:06Z"}, "message": "Rollup merge of #61404 - RalfJung:miri-unsize, r=oli-obk\n\nmiri unsizing: fix projecting into a field of an operand\n\nI don't know why this open-coded an operand field projection. Probably this code predates one or more of my refactorings.\n\nFixes https://github.com/rust-lang/miri/issues/754\n\nr? @oli-obk", "tree": {"sha": "b6ad5d48a79303604d183a90f1d3abd1c8768646", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b6ad5d48a79303604d183a90f1d3abd1c8768646"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fb4652e85f1729412f6298aea033cb26b4755de9", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJc9dvmCRBK7hj4Ov3rIwAAdHIIAJwecCOpvGS5iRkPzucn6jDj\nMDg4vkPFCo1C+0uvWm/xE//r1TOUYdG7l04V41Z6Ic3xZlScYqzxCfaBMNvh10Lr\n4LNalTDZNPgfREmqme7llKFKQBK4SUg7EfxYxnpwOCBfJ5hWUq3opkqfTS8B3649\nRwHLY5led/H6+wiwUXoAzlWxHIqoXrDl9k93m3buyXr52OR9v16N3v8ENxLTzDni\ny5B4E996IC9Cpa0dBEAcaQwwb1TRgfeu+C0Bna5F/f+uIclme4zWOhq6rO6BvIrx\nsxIzbxIC1UikkGHCWWZr049XCCjqEiZyUAX/Isg91vOMhR+LqW9ATlLCYApz5Qc=\n=aWWQ\n-----END PGP SIGNATURE-----\n", "payload": "tree b6ad5d48a79303604d183a90f1d3abd1c8768646\nparent 45cdc6d578a1012cad33284be48d31257f5c21ac\nparent f23cbeab1ddab22a81e8cc5dbca4a4eb205503ea\nauthor Mazdak Farrokhzad <twingoow@gmail.com> 1559616486 +0200\ncommitter GitHub <noreply@github.com> 1559616486 +0200\n\nRollup merge of #61404 - RalfJung:miri-unsize, r=oli-obk\n\nmiri unsizing: fix projecting into a field of an operand\n\nI don't know why this open-coded an operand field projection. Probably this code predates one or more of my refactorings.\n\nFixes https://github.com/rust-lang/miri/issues/754\n\nr? @oli-obk\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fb4652e85f1729412f6298aea033cb26b4755de9", "html_url": "https://github.com/rust-lang/rust/commit/fb4652e85f1729412f6298aea033cb26b4755de9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fb4652e85f1729412f6298aea033cb26b4755de9/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "45cdc6d578a1012cad33284be48d31257f5c21ac", "url": "https://api.github.com/repos/rust-lang/rust/commits/45cdc6d578a1012cad33284be48d31257f5c21ac", "html_url": "https://github.com/rust-lang/rust/commit/45cdc6d578a1012cad33284be48d31257f5c21ac"}, {"sha": "f23cbeab1ddab22a81e8cc5dbca4a4eb205503ea", "url": "https://api.github.com/repos/rust-lang/rust/commits/f23cbeab1ddab22a81e8cc5dbca4a4eb205503ea", "html_url": "https://github.com/rust-lang/rust/commit/f23cbeab1ddab22a81e8cc5dbca4a4eb205503ea"}], "stats": {"total": 18, "additions": 3, "deletions": 15}, "files": [{"sha": "ff7a9984da4ee164d11a58741a5dd3b67b591fba", "filename": "src/librustc_mir/interpret/cast.rs", "status": "modified", "additions": 3, "deletions": 15, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/fb4652e85f1729412f6298aea033cb26b4755de9/src%2Flibrustc_mir%2Finterpret%2Fcast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fb4652e85f1729412f6298aea033cb26b4755de9/src%2Flibrustc_mir%2Finterpret%2Fcast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Finterpret%2Fcast.rs?ref=fb4652e85f1729412f6298aea033cb26b4755de9", "patch": "@@ -11,7 +11,7 @@ use rustc::mir::interpret::{\n use rustc::mir::CastKind;\n use rustc_apfloat::Float;\n \n-use super::{InterpretCx, Machine, PlaceTy, OpTy, ImmTy, Immediate};\n+use super::{InterpretCx, Machine, PlaceTy, OpTy, Immediate};\n \n impl<'a, 'mir, 'tcx, M: Machine<'a, 'mir, 'tcx>> InterpretCx<'a, 'mir, 'tcx, M> {\n     fn type_is_fat_ptr(&self, ty: Ty<'tcx>) -> bool {\n@@ -306,6 +306,7 @@ impl<'a, 'mir, 'tcx, M: Machine<'a, 'mir, 'tcx>> InterpretCx<'a, 'mir, 'tcx, M>\n         src: OpTy<'tcx, M::PointerTag>,\n         dest: PlaceTy<'tcx, M::PointerTag>,\n     ) -> EvalResult<'tcx> {\n+        trace!(\"Unsizing {:?} into {:?}\", src, dest);\n         match (&src.layout.ty.sty, &dest.layout.ty.sty) {\n             (&ty::Ref(_, s, _), &ty::Ref(_, d, _)) |\n             (&ty::Ref(_, s, _), &ty::RawPtr(TypeAndMut { ty: d, .. })) |\n@@ -335,20 +336,7 @@ impl<'a, 'mir, 'tcx, M: Machine<'a, 'mir, 'tcx>> InterpretCx<'a, 'mir, 'tcx, M>\n                     if dst_field.layout.is_zst() {\n                         continue;\n                     }\n-                    let src_field = match src.try_as_mplace() {\n-                        Ok(mplace) => {\n-                            let src_field = self.mplace_field(mplace, i as u64)?;\n-                            src_field.into()\n-                        }\n-                        Err(..) => {\n-                            let src_field_layout = src.layout.field(self, i)?;\n-                            // this must be a field covering the entire thing\n-                            assert_eq!(src.layout.fields.offset(i).bytes(), 0);\n-                            assert_eq!(src_field_layout.size, src.layout.size);\n-                            // just sawp out the layout\n-                            OpTy::from(ImmTy { imm: src.to_immediate(), layout: src_field_layout })\n-                        }\n-                    };\n+                    let src_field = self.operand_field(src, i as u64)?;\n                     if src_field.layout.ty == dst_field.layout.ty {\n                         self.copy_op(src_field, dst_field)?;\n                     } else {"}]}