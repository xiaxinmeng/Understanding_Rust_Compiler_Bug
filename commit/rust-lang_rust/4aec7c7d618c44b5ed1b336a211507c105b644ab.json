{"sha": "4aec7c7d618c44b5ed1b336a211507c105b644ab", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRhZWM3YzdkNjE4YzQ0YjVlZDFiMzM2YTIxMTUwN2MxMDViNjQ0YWI=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2015-10-21T07:45:48Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2015-10-21T07:45:48Z"}, "message": "Auto merge of #29055 - alexcrichton:tiers, r=steveklabnik\n\nThis commit expands the \"supported platforms\" section of the book to include\r\ndocumentation on the tiers that Rust currently has as well as organizing all\r\nsupported platforms into these various tiers. Infrastructure improvements over\r\nthe next few months are likely to change the location of may of these platforms\r\nover, but for now this should faithfully represent what we've got today!", "tree": {"sha": "85c3f980128834fc85048a3550e191aff319397b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/85c3f980128834fc85048a3550e191aff319397b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4aec7c7d618c44b5ed1b336a211507c105b644ab", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4aec7c7d618c44b5ed1b336a211507c105b644ab", "html_url": "https://github.com/rust-lang/rust/commit/4aec7c7d618c44b5ed1b336a211507c105b644ab", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4aec7c7d618c44b5ed1b336a211507c105b644ab/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3e139dc615219847dfbdd47958c977d56bdd0d3a", "url": "https://api.github.com/repos/rust-lang/rust/commits/3e139dc615219847dfbdd47958c977d56bdd0d3a", "html_url": "https://github.com/rust-lang/rust/commit/3e139dc615219847dfbdd47958c977d56bdd0d3a"}, {"sha": "93e419cab6d7c215912fb2ee37668adaf87a9c19", "url": "https://api.github.com/repos/rust-lang/rust/commits/93e419cab6d7c215912fb2ee37668adaf87a9c19", "html_url": "https://github.com/rust-lang/rust/commit/93e419cab6d7c215912fb2ee37668adaf87a9c19"}], "stats": {"total": 99, "additions": 84, "deletions": 15}, "files": [{"sha": "88d7674a01b95df806d8b8032e134267e5f58202", "filename": "src/doc/trpl/installing-rust.md", "status": "modified", "additions": 84, "deletions": 15, "changes": 99, "blob_url": "https://github.com/rust-lang/rust/blob/4aec7c7d618c44b5ed1b336a211507c105b644ab/src%2Fdoc%2Ftrpl%2Finstalling-rust.md", "raw_url": "https://github.com/rust-lang/rust/raw/4aec7c7d618c44b5ed1b336a211507c105b644ab/src%2Fdoc%2Ftrpl%2Finstalling-rust.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Ftrpl%2Finstalling-rust.md?ref=4aec7c7d618c44b5ed1b336a211507c105b644ab", "patch": "@@ -61,21 +61,90 @@ binary downloads][install-page].\n \n ## Platform support\n \n-Oh, we should also mention the officially supported platforms:\n-\n-* Windows (7 or later, Server 2008 R2)\n-* Linux (2.6.18 or later, various distributions), x86 and x86-64\n-* OSX 10.7 (Lion) or later, x86 and x86-64\n-\n-We extensively test Rust on these platforms, and a few others, too, like\n-Android. But these are the ones most likely to work, as they have the most\n-testing.\n-\n-Finally, a comment about Windows. Rust considers Windows to be a first-class\n-platform upon release, but if we're honest, the Windows experience isn't as\n-integrated as the Linux/OS X experience is. We're working on it! If anything\n-doesn't work, it is a bug. Please let us know if that happens. Each and every\n-commit is tested against Windows just like any other platform.\n+The Rust compiler runs on, and compiles to, a great number of platforms, though\n+not all platforms are equally supported. Rust's support levels are organized\n+into three tiers, each with a different set of guarantees.\n+\n+Platforms are identified by their \"target triple\" which is the string to inform\n+the compiler what kind of output should be produced. The columns below indicate\n+whether the corresponding component works on the specified platform.\n+\n+### Tier 1\n+\n+Tier 1 platforms can be thought of as \"guaranteed to build and work\".\n+Specifically they will each satisfy the following requirements:\n+\n+* Automated testing is set up to run tests for the platform.\n+* Landing changes to the `rust-lang/rust` repository's master branch is gated on\n+  tests passing.\n+* Official release artifacts are provided for the platform.\n+* Documentation for how to use and how to build the platform is available.\n+\n+|  Target                       | std |rustc|cargo| notes                      |\n+|-------------------------------|-----|-----|-----|----------------------------|\n+| `x86_64-pc-windows-msvc`      |  \u2713  |  \u2713  |  \u2713  | 64-bit MSVC (Windows 7+)   |\n+| `i686-pc-windows-gnu`         |  \u2713  |  \u2713  |  \u2713  | 32-bit MinGW (Windows 7+)  |\n+| `x86_64-pc-windows-gnu`       |  \u2713  |  \u2713  |  \u2713  | 64-bit MinGW (Windows 7+)  |\n+| `i686-apple-darwin`           |  \u2713  |  \u2713  |  \u2713  | 32-bit OSX (10.7+, Lion+)  |\n+| `x86_64-apple-darwin`         |  \u2713  |  \u2713  |  \u2713  | 64-bit OSX (10.7+, Lion+)  |\n+| `i686-unknown-linux-gnu`      |  \u2713  |  \u2713  |  \u2713  | 32-bit Linux (2.6.18+)     |\n+| `x86_64-unknown-linux-gnu`    |  \u2713  |  \u2713  |  \u2713  | 64-bit Linux (2.6.18+)     |\n+\n+### Tier 2\n+\n+Tier 2 platforms can be thought of as \"guaranteed to build\". Automated tests are\n+not run so it's not guaranteed to produce a working build, but platforms often\n+work to quite a good degree and patches are always welcome! Specifically, these\n+platforms are required to have each of the following:\n+\n+* Automated building is set up, but may not be running tests.\n+* Landing changes to the `rust-lang/rust` repository's master branch is gated on\n+  platforms **building**. Note that this means for some platforms just the\n+  standard library is compiled, but for others the full bootstrap is run.\n+* Official release artifacts are provided for the platform.\n+\n+|  Target                       | std |rustc|cargo| notes                      |\n+|-------------------------------|-----|-----|-----|----------------------------|\n+| `i686-pc-windows-msvc`        |  \u2713  |  \u2713  |  \u2713  | 32-bit MSVC (Windows 7+)   |\n+\n+### Tier 3\n+\n+Tier 3 platforms are those which Rust has support for, but landing changes is\n+not gated on the platform either building or passing tests. Working builds for\n+these platforms may be spotty as their reliability is often defined in terms of\n+community contributions. Additionally, release artifacts and installers are not\n+provided, but there may be community infrastructure producing these in\n+unofficial locations.\n+\n+|  Target                       | std |rustc|cargo| notes                      |\n+|-------------------------------|-----|-----|-----|----------------------------|\n+| `x86_64-unknown-linux-musl`   |  \u2713  |     |     | 64-bit Linux with MUSL     |\n+| `arm-linux-androideabi`       |  \u2713  |     |     | ARM Android                |\n+| `i686-linux-android`          |  \u2713  |     |     | 32-bit x86 Android         |\n+| `aarch64-linux-android`       |  \u2713  |     |     | ARM64 Android              |\n+| `arm-unknown-linux-gnueabi`   |  \u2713  |  \u2713  |     | ARM Linux (2.6.18+)        |\n+| `arm-unknown-linux-gnueabihf` |  \u2713  |  \u2713  |     | ARM Linux (2.6.18+)        |\n+| `aarch64-unknown-linux-gnu`   |  \u2713  |     |     | ARM64 Linux (2.6.18+)      |\n+| `mips-unknown-linux-gnu`      |  \u2713  |     |     | MIPS Linux (2.6.18+)       |\n+| `mipsel-unknown-linux-gnu`    |  \u2713  |     |     | MIPS (LE) Linux (2.6.18+)  |\n+| `powerpc-unknown-linux-gnu`   |  \u2713  |     |     | PowerPC Linux (2.6.18+)    |\n+| `i386-apple-ios`              |  \u2713  |     |     | 32-bit x86 iOS             |\n+| `x86_64-apple-ios`            |  \u2713  |     |     | 64-bit x86 iOS             |\n+| `armv7-apple-ios`             |  \u2713  |     |     | ARM iOS                    |\n+| `armv7s-apple-ios`            |  \u2713  |     |     | ARM iOS                    |\n+| `aarch64-apple-ios`           |  \u2713  |     |     | ARM64 iOS                  |\n+| `i686-unknown-freebsd`        |  \u2713  |  \u2713  |     | 32-bit FreeBSD             |\n+| `x86_64-unknown-freebsd`      |  \u2713  |  \u2713  |     | 64-bit FreeBSD             |\n+| `x86_64-unknown-openbsd`      |  \u2713  |  \u2713  |     | 64-bit OpenBSD             |\n+| `x86_64-unknown-netbsd`       |  \u2713  |  \u2713  |     | 64-bit NetBSD              |\n+| `x86_64-unknown-bitrig`       |  \u2713  |  \u2713  |     | 64-bit Bitrig              |\n+| `x86_64-unknown-dragonfly`    |  \u2713  |  \u2713  |     | 64-bit DragonFlyBSD        |\n+| `x86_64-rumprun-netbsd`       |  \u2713  |     |     | 64-bit NetBSD Rump Kernel  |\n+| `i686-pc-windows-msvc` (XP)   |  \u2713  |     |     | Windows XP support         |\n+| `x86_64-pc-windows-msvc` (XP) |  \u2713  |     |     | Windows XP support         |\n+\n+Note that this table can be expanded over time, this isn't the exhaustive set of\n+tier 3 platforms that will ever be!\n \n ## After installation\n "}]}