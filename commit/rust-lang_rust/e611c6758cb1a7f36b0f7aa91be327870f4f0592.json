{"sha": "e611c6758cb1a7f36b0f7aa91be327870f4f0592", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU2MTFjNjc1OGNiMWE3ZjM2YjBmN2FhOTFiZTMyNzg3MGY0ZjA1OTI=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2021-06-22T08:45:22Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2021-06-22T08:45:22Z"}, "message": "Document perf characteristic of to_node", "tree": {"sha": "dda47939ef2a207601831ab1b751310e58eb5a7d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/dda47939ef2a207601831ab1b751310e58eb5a7d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e611c6758cb1a7f36b0f7aa91be327870f4f0592", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e611c6758cb1a7f36b0f7aa91be327870f4f0592", "html_url": "https://github.com/rust-lang/rust/commit/e611c6758cb1a7f36b0f7aa91be327870f4f0592", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e611c6758cb1a7f36b0f7aa91be327870f4f0592/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "56e61bdfea5454dec4408a4947e037bcd042c886", "url": "https://api.github.com/repos/rust-lang/rust/commits/56e61bdfea5454dec4408a4947e037bcd042c886", "html_url": "https://github.com/rust-lang/rust/commit/56e61bdfea5454dec4408a4947e037bcd042c886"}], "stats": {"total": 9, "additions": 9, "deletions": 0}, "files": [{"sha": "c077a04cb72ce9927ca974ac15db811f87e9ec4f", "filename": "crates/syntax/src/ptr.rs", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/e611c6758cb1a7f36b0f7aa91be327870f4f0592/crates%2Fsyntax%2Fsrc%2Fptr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e611c6758cb1a7f36b0f7aa91be327870f4f0592/crates%2Fsyntax%2Fsrc%2Fptr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Fsrc%2Fptr.rs?ref=e611c6758cb1a7f36b0f7aa91be327870f4f0592", "patch": "@@ -32,6 +32,15 @@ impl SyntaxNodePtr {\n         SyntaxNodePtr { range: node.text_range(), kind: node.kind() }\n     }\n \n+    /// \"Dereference\" the pointer to get the node it points to.\n+    ///\n+    /// Panics if node is not found, so make sure that `root` syntax tree is\n+    /// equivalent (is build from the same text) to the tree which was\n+    /// originally used to get this [`SyntaxNodePtr`].\n+    ///\n+    /// The complexity is linear in the depth of the tree and logarithmic in\n+    /// tree width. As most trees are shallow, thinking about this as\n+    /// `O(log(N))` in the size of the tree is not too wrong!\n     pub fn to_node(&self, root: &SyntaxNode) -> SyntaxNode {\n         assert!(root.parent().is_none());\n         successors(Some(root.clone()), |node| {"}]}