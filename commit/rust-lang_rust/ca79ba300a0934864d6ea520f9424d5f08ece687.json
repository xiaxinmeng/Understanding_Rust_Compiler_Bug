{"sha": "ca79ba300a0934864d6ea520f9424d5f08ece687", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNhNzliYTMwMGEwOTM0ODY0ZDZlYTUyMGY5NDI0ZDVmMDhlY2U2ODc=", "commit": {"author": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2018-04-19T22:52:14Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2018-04-19T23:53:12Z"}, "message": "Tweak some stabilizations in libstd\n\nThis commit tweaks a few stable APIs in the `beta` branch before they hit\nstable. The `str::is_whitespace` and `str::is_alphanumeric` functions were\ndeleted (added in #49381, issue at #49657). The `and_modify` APIs added\nin #44734 were altered to take a `FnOnce` closure rather than a `FnMut` closure.\n\nCloses #49581\nCloses #49657", "tree": {"sha": "1d44ca6449c4b2a3950d4358e6d61043ba6db0e5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1d44ca6449c4b2a3950d4358e6d61043ba6db0e5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ca79ba300a0934864d6ea520f9424d5f08ece687", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ca79ba300a0934864d6ea520f9424d5f08ece687", "html_url": "https://github.com/rust-lang/rust/commit/ca79ba300a0934864d6ea520f9424d5f08ece687", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ca79ba300a0934864d6ea520f9424d5f08ece687/comments", "author": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "65d201f7d682ad921ac6e67ac07f922aa63a8ce4", "url": "https://api.github.com/repos/rust-lang/rust/commits/65d201f7d682ad921ac6e67ac07f922aa63a8ce4", "html_url": "https://github.com/rust-lang/rust/commit/65d201f7d682ad921ac6e67ac07f922aa63a8ce4"}], "stats": {"total": 52, "additions": 5, "deletions": 47}, "files": [{"sha": "3984379ea860dd3eabbb099da3c691cb78fcab61", "filename": "src/liballoc/btree/map.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ca79ba300a0934864d6ea520f9424d5f08ece687/src%2Fliballoc%2Fbtree%2Fmap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca79ba300a0934864d6ea520f9424d5f08ece687/src%2Fliballoc%2Fbtree%2Fmap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Fbtree%2Fmap.rs?ref=ca79ba300a0934864d6ea520f9424d5f08ece687", "patch": "@@ -2155,8 +2155,8 @@ impl<'a, K: Ord, V> Entry<'a, K, V> {\n     /// assert_eq!(map[\"poneyland\"], 43);\n     /// ```\n     #[stable(feature = \"entry_and_modify\", since = \"1.26.0\")]\n-    pub fn and_modify<F>(self, mut f: F) -> Self\n-        where F: FnMut(&mut V)\n+    pub fn and_modify<F>(self, f: F) -> Self\n+        where F: FnOnce(&mut V)\n     {\n         match self {\n             Occupied(mut entry) => {"}, {"sha": "686a0408a7cf9de2003d1f2340b804d99f3afb1f", "filename": "src/liballoc/str.rs", "status": "modified", "additions": 0, "deletions": 42, "changes": 42, "blob_url": "https://github.com/rust-lang/rust/blob/ca79ba300a0934864d6ea520f9424d5f08ece687/src%2Fliballoc%2Fstr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca79ba300a0934864d6ea520f9424d5f08ece687/src%2Fliballoc%2Fstr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Fstr.rs?ref=ca79ba300a0934864d6ea520f9424d5f08ece687", "patch": "@@ -2140,48 +2140,6 @@ impl str {\n         unsafe { String::from_utf8_unchecked(buf) }\n     }\n \n-    /// Returns true if this `str` is entirely whitespace, and false otherwise.\n-    ///\n-    /// 'Whitespace' is defined according to the terms of the Unicode Derived Core\n-    /// Property `White_Space`.\n-    ///\n-    /// # Examples\n-    ///\n-    /// Basic usage:\n-    ///\n-    /// ```\n-    /// assert!(\"    \\t \".is_whitespace());\n-    ///\n-    /// // a non-breaking space\n-    /// assert!(\"\\u{A0}\".is_whitespace());\n-    ///\n-    /// assert!(!\"   \u8d8a\".is_whitespace());\n-    /// ```\n-    #[stable(feature = \"unicode_methods_on_intrinsics\", since = \"1.27.0\")]\n-    #[inline]\n-    pub fn is_whitespace(&self) -> bool {\n-        StrExt::is_whitespace(self)\n-    }\n-\n-    /// Returns true if this `str` is entirely alphanumeric, and false otherwise.\n-    ///\n-    /// 'Alphanumeric'-ness is defined in terms of the Unicode General Categories\n-    /// 'Nd', 'Nl', 'No' and the Derived Core Property 'Alphabetic'.\n-    ///\n-    /// # Examples\n-    ///\n-    /// Basic usage:\n-    ///\n-    /// ```\n-    /// assert!(\"\u06637\u09ecK\u0648\u85cf\".is_alphanumeric());\n-    /// assert!(!\"\u00be\u2460\".is_alphanumeric());\n-    /// ```\n-    #[stable(feature = \"unicode_methods_on_intrinsics\", since = \"1.27.0\")]\n-    #[inline]\n-    pub fn is_alphanumeric(&self) -> bool {\n-        StrExt::is_alphanumeric(self)\n-    }\n-\n     /// Checks if all characters in this string are within the ASCII range.\n     ///\n     /// # Examples"}, {"sha": "8cd5f373efe108b7a711beb85b0f4c72338aa2ff", "filename": "src/librustdoc/test.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca79ba300a0934864d6ea520f9424d5f08ece687/src%2Flibrustdoc%2Ftest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca79ba300a0934864d6ea520f9424d5f08ece687/src%2Flibrustdoc%2Ftest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Ftest.rs?ref=ca79ba300a0934864d6ea520f9424d5f08ece687", "patch": "@@ -437,7 +437,7 @@ fn partition_source(s: &str) -> (String, String) {\n \n     for line in s.lines() {\n         let trimline = line.trim();\n-        let header = trimline.is_whitespace() ||\n+        let header = trimline.chars().all(|c| c.is_whitespace()) ||\n             trimline.starts_with(\"#![\") ||\n             trimline.starts_with(\"#[macro_use] extern crate\") ||\n             trimline.starts_with(\"extern crate\");"}, {"sha": "64590fc0d10da662a720b5c2359ef207adb56a70", "filename": "src/libstd/collections/hash/map.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ca79ba300a0934864d6ea520f9424d5f08ece687/src%2Flibstd%2Fcollections%2Fhash%2Fmap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca79ba300a0934864d6ea520f9424d5f08ece687/src%2Flibstd%2Fcollections%2Fhash%2Fmap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fcollections%2Fhash%2Fmap.rs?ref=ca79ba300a0934864d6ea520f9424d5f08ece687", "patch": "@@ -2127,8 +2127,8 @@ impl<'a, K, V> Entry<'a, K, V> {\n     /// assert_eq!(map[\"poneyland\"], 43);\n     /// ```\n     #[stable(feature = \"entry_and_modify\", since = \"1.26.0\")]\n-    pub fn and_modify<F>(self, mut f: F) -> Self\n-        where F: FnMut(&mut V)\n+    pub fn and_modify<F>(self, f: F) -> Self\n+        where F: FnOnce(&mut V)\n     {\n         match self {\n             Occupied(mut entry) => {"}]}