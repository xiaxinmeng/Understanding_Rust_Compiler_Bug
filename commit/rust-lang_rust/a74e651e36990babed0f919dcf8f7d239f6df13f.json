{"sha": "a74e651e36990babed0f919dcf8f7d239f6df13f", "node_id": "C_kwDOAAsO6NoAKGE3NGU2NTFlMzY5OTBiYWJlZDBmOTE5ZGNmOGY3ZDIzOWY2ZGYxM2Y", "commit": {"author": {"name": "Le\u00f3n Orell Valerian Liehr", "email": "me@fmease.dev", "date": "2023-03-08T18:18:22Z"}, "committer": {"name": "Le\u00f3n Orell Valerian Liehr", "email": "me@fmease.dev", "date": "2023-03-08T18:18:22Z"}, "message": "clean-up: remove unused return value in typeck", "tree": {"sha": "a4182622b521f346b80569401e496619acc94b03", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a4182622b521f346b80569401e496619acc94b03"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a74e651e36990babed0f919dcf8f7d239f6df13f", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEXSQFaHGAjVoD5I3F0XoHIV9o5xMFAmQI0aYACgkQ0XoHIV9o\n5xO1fhAAhnrCwXIud1CFRWs0v3C8ddr3o4W/4zL3K8GF8X4EouGYpIdl7yL1Vgwh\nAEr2HEKhwvWIyfEawYEsFiSImitBS0eLbUPbUE5MlcX9CON6Um8mFjs6kehXM3Xz\nCpe04351wWciiNopxj7p1R+pNll9fhSvDguBreBOGFMA0wThIUR6V67d5T0ej23f\niwiywWURTFFOFl7vPeP0r2f/LXb2z95s03X+/A7G46hE1o1qUsGiDNPSyIBPqACP\nwIFUy3VY+17iqEnGawwsnBrmMJRtycFTOip5289YFw0dLvayFEOlhmgMPcSOTxvy\nguXBhsbynx+WzPJda39QXuG57s5ie2wsxFES/DKyTDFx2I6iwAWREm+8lNu4dt1s\n9Z/KNg30EAnNIqeP2hx97YBOGld9fQuu02v1uBf5rbtHWIy1CEErtasb6HqUo0UO\nXSMxZgYjrSFePtJcvgvcDj0RPOChBaBR89w8/EOzS9/jMs7whtpKUR6hvvugo6w1\nN8vHoilwy+1IwgofmEsdLpeFJxgQqluTUP82xv6VvsdRu8rwYnMnKQViUMbnwQ1A\ny8YbTlbcOGZZhgUQuAA3zmDJpafjhygqh5kg0iPgtkPw5rcgxDSezJOrdZJlPvuk\nENn6OoTBx33r0QtFXvRWdbcNhzkDhzC87rIm4UqJ9Sh2woPdcYk=\n=7uzC\n-----END PGP SIGNATURE-----", "payload": "tree a4182622b521f346b80569401e496619acc94b03\nparent 7d782b7ff4d57170e110211565209ecc5bbb3907\nauthor Le\u00f3n Orell Valerian Liehr <me@fmease.dev> 1678299502 +0100\ncommitter Le\u00f3n Orell Valerian Liehr <me@fmease.dev> 1678299502 +0100\n\nclean-up: remove unused return value in typeck\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a74e651e36990babed0f919dcf8f7d239f6df13f", "html_url": "https://github.com/rust-lang/rust/commit/a74e651e36990babed0f919dcf8f7d239f6df13f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a74e651e36990babed0f919dcf8f7d239f6df13f/comments", "author": {"login": "fmease", "id": 14913065, "node_id": "MDQ6VXNlcjE0OTEzMDY1", "avatar_url": "https://avatars.githubusercontent.com/u/14913065?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fmease", "html_url": "https://github.com/fmease", "followers_url": "https://api.github.com/users/fmease/followers", "following_url": "https://api.github.com/users/fmease/following{/other_user}", "gists_url": "https://api.github.com/users/fmease/gists{/gist_id}", "starred_url": "https://api.github.com/users/fmease/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fmease/subscriptions", "organizations_url": "https://api.github.com/users/fmease/orgs", "repos_url": "https://api.github.com/users/fmease/repos", "events_url": "https://api.github.com/users/fmease/events{/privacy}", "received_events_url": "https://api.github.com/users/fmease/received_events", "type": "User", "site_admin": false}, "committer": {"login": "fmease", "id": 14913065, "node_id": "MDQ6VXNlcjE0OTEzMDY1", "avatar_url": "https://avatars.githubusercontent.com/u/14913065?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fmease", "html_url": "https://github.com/fmease", "followers_url": "https://api.github.com/users/fmease/followers", "following_url": "https://api.github.com/users/fmease/following{/other_user}", "gists_url": "https://api.github.com/users/fmease/gists{/gist_id}", "starred_url": "https://api.github.com/users/fmease/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fmease/subscriptions", "organizations_url": "https://api.github.com/users/fmease/orgs", "repos_url": "https://api.github.com/users/fmease/repos", "events_url": "https://api.github.com/users/fmease/events{/privacy}", "received_events_url": "https://api.github.com/users/fmease/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7d782b7ff4d57170e110211565209ecc5bbb3907", "url": "https://api.github.com/repos/rust-lang/rust/commits/7d782b7ff4d57170e110211565209ecc5bbb3907", "html_url": "https://github.com/rust-lang/rust/commit/7d782b7ff4d57170e110211565209ecc5bbb3907"}], "stats": {"total": 12, "additions": 4, "deletions": 8}, "files": [{"sha": "f9556124a49ec149ef52fafa865d405b241f853a", "filename": "compiler/rustc_hir_typeck/src/fn_ctxt/_impl.rs", "status": "modified", "additions": 4, "deletions": 8, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/a74e651e36990babed0f919dcf8f7d239f6df13f/compiler%2Frustc_hir_typeck%2Fsrc%2Ffn_ctxt%2F_impl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a74e651e36990babed0f919dcf8f7d239f6df13f/compiler%2Frustc_hir_typeck%2Fsrc%2Ffn_ctxt%2F_impl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir_typeck%2Fsrc%2Ffn_ctxt%2F_impl.rs?ref=a74e651e36990babed0f919dcf8f7d239f6df13f", "patch": "@@ -301,16 +301,12 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n         span: Span,\n         def_id: DefId,\n         substs: SubstsRef<'tcx>,\n-    ) -> (ty::InstantiatedPredicates<'tcx>, Vec<Span>) {\n+    ) -> ty::InstantiatedPredicates<'tcx> {\n         let bounds = self.tcx.predicates_of(def_id);\n-        let spans: Vec<Span> = bounds.predicates.iter().map(|(_, span)| *span).collect();\n         let result = bounds.instantiate(self.tcx, substs);\n         let result = self.normalize(span, result);\n-        debug!(\n-            \"instantiate_bounds(bounds={:?}, substs={:?}) = {:?}, {:?}\",\n-            bounds, substs, result, spans,\n-        );\n-        (result, spans)\n+        debug!(\"instantiate_bounds(bounds={:?}, substs={:?}) = {:?}\", bounds, substs, result);\n+        result\n     }\n \n     pub(in super::super) fn normalize<T>(&self, span: Span, value: T) -> T\n@@ -1389,7 +1385,7 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n             }\n             _ => false,\n         };\n-        let (bounds, _) = self.instantiate_bounds(span, def_id, &substs);\n+        let bounds = self.instantiate_bounds(span, def_id, &substs);\n \n         for mut obligation in traits::predicates_for_generics(\n             |idx, predicate_span| {"}]}