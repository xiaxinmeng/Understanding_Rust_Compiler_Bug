{"sha": "e7e1dc158c3de232750b568163f6941a184ee8be", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU3ZTFkYzE1OGMzZGUyMzI3NTBiNTY4MTYzZjY5NDFhMTg0ZWU4YmU=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-03-13T17:52:22Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-03-13T17:52:22Z"}, "message": "Auto merge of #83007 - Aaron1011:incr-verify-default, r=Mark-Simulacrum\n\nTurn `-Z incremental-verify-ich` on by default\n\nIssue #82920 showed that the kind of bugs caught by this flag have\nsoundness implications.", "tree": {"sha": "fcd85724f118e2c774ba10948cb039bde64011ac", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fcd85724f118e2c774ba10948cb039bde64011ac"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e7e1dc158c3de232750b568163f6941a184ee8be", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e7e1dc158c3de232750b568163f6941a184ee8be", "html_url": "https://github.com/rust-lang/rust/commit/e7e1dc158c3de232750b568163f6941a184ee8be", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e7e1dc158c3de232750b568163f6941a184ee8be/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "56f74c52c1bb627ada01992787116054bf1e66e9", "url": "https://api.github.com/repos/rust-lang/rust/commits/56f74c52c1bb627ada01992787116054bf1e66e9", "html_url": "https://github.com/rust-lang/rust/commit/56f74c52c1bb627ada01992787116054bf1e66e9"}, {"sha": "7d7c81a114eac8054d9e7e1d238ad05b116f12f1", "url": "https://api.github.com/repos/rust-lang/rust/commits/7d7c81a114eac8054d9e7e1d238ad05b116f12f1", "html_url": "https://github.com/rust-lang/rust/commit/7d7c81a114eac8054d9e7e1d238ad05b116f12f1"}], "stats": {"total": 29, "additions": 18, "deletions": 11}, "files": [{"sha": "6e16f803f8cf6b79b36833dd1e5a9131101e5611", "filename": "compiler/rustc_query_system/src/query/plumbing.rs", "status": "modified", "additions": 18, "deletions": 11, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/e7e1dc158c3de232750b568163f6941a184ee8be/compiler%2Frustc_query_system%2Fsrc%2Fquery%2Fplumbing.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e7e1dc158c3de232750b568163f6941a184ee8be/compiler%2Frustc_query_system%2Fsrc%2Fquery%2Fplumbing.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_query_system%2Fsrc%2Fquery%2Fplumbing.rs?ref=e7e1dc158c3de232750b568163f6941a184ee8be", "patch": "@@ -533,7 +533,13 @@ where\n         None\n     };\n \n-    let result = if let Some(result) = result {\n+    if let Some(result) = result {\n+        // If `-Zincremental-verify-ich` is specified, re-hash results from\n+        // the cache and make sure that they have the expected fingerprint.\n+        if unlikely!(tcx.dep_context().sess().opts.debugging_opts.incremental_verify_ich) {\n+            incremental_verify_ich(*tcx.dep_context(), &result, dep_node, dep_node_index, query);\n+        }\n+\n         result\n     } else {\n         // We could not load a result from the on-disk cache, so\n@@ -545,20 +551,21 @@ where\n \n         prof_timer.finish_with_query_invocation_id(dep_node_index.into());\n \n-        result\n-    };\n-\n-    // If `-Zincremental-verify-ich` is specified, re-hash results from\n-    // the cache and make sure that they have the expected fingerprint.\n-    if unlikely!(tcx.dep_context().sess().opts.debugging_opts.incremental_verify_ich) {\n+        // Verify that re-running the query produced a result with the expected hash\n+        // This catches bugs in query implementations, turning them into ICEs.\n+        // For example, a query might sort its result by `DefId` - since `DefId`s are\n+        // not stable across compilation sessions, the result could get up getting sorted\n+        // in a different order when the query is re-run, even though all of the inputs\n+        // (e.g. `DefPathHash` values) were green.\n+        //\n+        // See issue #82920 for an example of a miscompilation that would get turned into\n+        // an ICE by this check\n         incremental_verify_ich(*tcx.dep_context(), &result, dep_node, dep_node_index, query);\n-    }\n \n-    result\n+        result\n+    }\n }\n \n-#[inline(never)]\n-#[cold]\n fn incremental_verify_ich<CTX, K, V: Debug>(\n     tcx: CTX::DepContext,\n     result: &V,"}]}