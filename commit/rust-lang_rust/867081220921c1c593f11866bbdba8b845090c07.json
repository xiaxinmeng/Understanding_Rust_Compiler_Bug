{"sha": "867081220921c1c593f11866bbdba8b845090c07", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg2NzA4MTIyMDkyMWMxYzU5M2YxMTg2NmJiZGJhOGI4NDUwOTBjMDc=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-01-11T20:37:09Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-01-11T20:37:09Z"}, "message": "Merge pull request #2766 from gilescope/windows-build\n\nUpload PR", "tree": {"sha": "150cef998b573729882fcd49fc01487ddea1acf5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/150cef998b573729882fcd49fc01487ddea1acf5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/867081220921c1c593f11866bbdba8b845090c07", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJeGjH1CRBK7hj4Ov3rIwAAdHIIAEQ050vMU3825R3vh7Uskmoj\ntOIspBCjQ9+Ix+Bi8LZkM/f9qwz6k6urKLbaAZRfnGHTgNjGkguT0PKy4mfHhjxq\nndS6U8oLlkYEETcWzDPSnpQlS89qxb+I+eHkSYEPBGWJbw73j1s9N1VePFMzDCyZ\n+VfXDb+mclVchZhMAAKn7qz/Co7JXpCeSNHnAvnlod004a07WASI6OeE9aNCM1n8\nBS9Hp8UWnQx8wRe8UOZ81t/iSbWMrvySG23oRQ3f4Y+Vle8fA1O5X3t7Amwoshx3\n1yqMYDbiQt4+SS26agsqIJtq7FDLBEcaVgR3dUxCkW5ZJy7/zQXOJOvb+ox5i58=\n=HfoG\n-----END PGP SIGNATURE-----\n", "payload": "tree 150cef998b573729882fcd49fc01487ddea1acf5\nparent 7c1af25b228dd2d039dd7129aab5798fd18f0d6a\nparent 2187732fb5a4c9ae79a93b01cf82ec87f3750f9f\nauthor Aleksey Kladov <aleksey.kladov@gmail.com> 1578775029 +0100\ncommitter GitHub <noreply@github.com> 1578775029 +0100\n\nMerge pull request #2766 from gilescope/windows-build\n\nUpload PR"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/867081220921c1c593f11866bbdba8b845090c07", "html_url": "https://github.com/rust-lang/rust/commit/867081220921c1c593f11866bbdba8b845090c07", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/867081220921c1c593f11866bbdba8b845090c07/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7c1af25b228dd2d039dd7129aab5798fd18f0d6a", "url": "https://api.github.com/repos/rust-lang/rust/commits/7c1af25b228dd2d039dd7129aab5798fd18f0d6a", "html_url": "https://github.com/rust-lang/rust/commit/7c1af25b228dd2d039dd7129aab5798fd18f0d6a"}, {"sha": "2187732fb5a4c9ae79a93b01cf82ec87f3750f9f", "url": "https://api.github.com/repos/rust-lang/rust/commits/2187732fb5a4c9ae79a93b01cf82ec87f3750f9f", "html_url": "https://github.com/rust-lang/rust/commit/2187732fb5a4c9ae79a93b01cf82ec87f3750f9f"}], "stats": {"total": 130, "additions": 128, "deletions": 2}, "files": [{"sha": "3a2bdb4a6f6387f1a20ef700f6fa0e8e108b724b", "filename": ".github/workflows/ci.yaml", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/867081220921c1c593f11866bbdba8b845090c07/.github%2Fworkflows%2Fci.yaml", "raw_url": "https://github.com/rust-lang/rust/raw/867081220921c1c593f11866bbdba8b845090c07/.github%2Fworkflows%2Fci.yaml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/.github%2Fworkflows%2Fci.yaml?ref=867081220921c1c593f11866bbdba8b845090c07", "patch": "@@ -20,6 +20,7 @@ jobs:\n       RUN_SLOW_TESTS: 1\n       RUSTUP_MAX_RETRIES: 10\n       CARGO_NET_RETRY: 10\n+      PROFILE: debug\n     steps:\n \n       - name: Checkout repository\n@@ -75,8 +76,7 @@ jobs:\n \n       - name: Prepare cache 2\n         if: matrix.os == 'windows-latest'\n-        run: Remove-Item ./target/debug/xtask.exe\n-\n+        run: Remove-Item ./target/${{ env.PROFILE }}/xtask.exe\n \n   type-script:\n     name: TypeScript"}, {"sha": "6cb27482d620a6999aba3f82349a240bff45c219", "filename": ".github/workflows/release.yaml", "status": "added", "additions": 124, "deletions": 0, "changes": 124, "blob_url": "https://github.com/rust-lang/rust/blob/867081220921c1c593f11866bbdba8b845090c07/.github%2Fworkflows%2Frelease.yaml", "raw_url": "https://github.com/rust-lang/rust/raw/867081220921c1c593f11866bbdba8b845090c07/.github%2Fworkflows%2Frelease.yaml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/.github%2Fworkflows%2Frelease.yaml?ref=867081220921c1c593f11866bbdba8b845090c07", "patch": "@@ -0,0 +1,124 @@\n+name: CI-Release\n+on:\n+  pull_request:\n+  push:\n+    branches:\n+      - master\n+\n+jobs:\n+  rust:\n+    name: Rust\n+    runs-on: ${{ matrix.os }}\n+    strategy:\n+      matrix:\n+        os: [ubuntu-latest, windows-latest, macos-latest]\n+    env:\n+      RUSTFLAGS: -D warnings\n+      CARGO_INCREMENTAL: 0\n+      RUN_SLOW_TESTS: 1\n+      RUSTUP_MAX_RETRIES: 10\n+      CARGO_NET_RETRY: 10\n+      PROFILE: release\n+    steps:\n+\n+      - name: Checkout repository\n+        uses: actions/checkout@v1\n+\n+      # We need to disable the existing toolchain to avoid updating rust-docs\n+      # which takes a long time. The fastest way to do this is to rename the\n+      # existing folder, as deleting it takes about as much time as not doing\n+      # anything and just updating rust-docs.\n+      - name: Rename existing rust toolchain (Windows)\n+        if: matrix.os == 'windows-latest'\n+        run: Rename-Item C:\\Users\\runneradmin\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc C:\\Users\\runneradmin\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc.old\n+\n+      - name: Install Rust toolchain\n+        uses: actions-rs/toolchain@v1\n+        with:\n+          toolchain: stable\n+          profile: minimal\n+          override: true\n+          components: rustfmt, rust-src\n+\n+      - name: Cache cargo registry\n+        uses: actions/cache@v1\n+        with:\n+          path: ~/.cargo/registry\n+          key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}\n+\n+      - name: Cache cargo index\n+        uses: actions/cache@v1\n+        with:\n+          path: ~/.cargo/git\n+          key: ${{ runner.os }}-cargo-index-${{ hashFiles('**/Cargo.lock') }}\n+\n+      - name: Cache cargo target dir\n+        uses: actions/cache@v1\n+        with:\n+          path: target\n+          key: ${{ runner.os }}-cargo-build-target-${{ hashFiles('**/Cargo.lock') }}\n+\n+      - name: Compile and Test\n+        uses: actions-rs/cargo@v1\n+        with:\n+          command: test\n+          args: --release --all-targets\n+\n+      - name: Prepare cache\n+        run: cargo xtask pre-cache\n+\n+      - name: Prepare cache 2\n+        if: matrix.os == 'windows-latest'\n+        run: Remove-Item ./target/${{ env.PROFILE }}/xtask.exe\n+\n+      - name: Creat distribution dir\n+        run: mkdir ./dist\n+\n+      - name: Copy binaries (non-win)\n+        if: matrix.os != 'windows-latest'\n+        run: cp ./target/${{ env.PROFILE }}/ra_lsp_server ./dist\n+\n+      - name: Copy binaries (win)\n+        if: matrix.os == 'windows-latest'\n+        run: copy ./target/${{ env.PROFILE }}/ra_lsp_server.* ./dist\n+\n+      - name: Upload artifacts\n+        uses: actions/upload-artifact@v1\n+        with:\n+          name: server-${{ matrix.os }}\n+          path: ./dist\n+\n+  type-script:\n+    name: TypeScript\n+    runs-on: ubuntu-latest\n+    env:\n+      CXX: g++-4.9\n+      CC: gcc-4.9\n+    steps:\n+      - name: Checkout repository\n+        uses: actions/checkout@v1\n+\n+      - name: Install Nodejs\n+        uses: actions/setup-node@v1\n+        with:\n+          node-version: 12.x\n+\n+      - run: npm ci\n+        working-directory: ./editors/code\n+      - run: npm run package --scripts-prepend-node-path\n+        working-directory: ./editors/code\n+\n+      - name: Create distribution directory\n+        run: mkdir ./dist\n+\n+      - name: Copy vscode extension\n+        run: mkdir ./dist/code && cp ./editors/code/*.vsix ./dist/code/\n+\n+      - name: Copy emacs mode\n+        run: cp -R ./editors/emacs ./dist/\n+\n+      - name: Upload artifacts\n+        uses: actions/upload-artifact@v1\n+        with:\n+          name: editors\n+          path: ./dist"}, {"sha": "3753a4143ccb864d12eeae538cd4f5da56450be7", "filename": "Cargo.toml", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/867081220921c1c593f11866bbdba8b845090c07/Cargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/867081220921c1c593f11866bbdba8b845090c07/Cargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.toml?ref=867081220921c1c593f11866bbdba8b845090c07", "patch": "@@ -8,6 +8,8 @@ debug = 0\n \n [profile.release]\n incremental = true\n+lto = true\n+codegen-units = 1\n debug = 0 # set this to 1 or 2 to get more useful backtraces in debugger\n \n [patch.'crates-io']"}]}