{"sha": "f710aae2eff6a738caa5991e62267c3a5f70b1c9", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY3MTBhYWUyZWZmNmE3MzhjYWE1OTkxZTYyMjY3YzNhNWY3MGIxYzk=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2015-09-12T22:15:41Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2015-09-12T22:15:41Z"}, "message": "Auto merge of #28366 - christopherdumas:beginners_manuel, r=steveklabnik\n\nThis is something that I wish I had when I started contributing to Rust (not that long ago :). I plan on writing a manual for bors and the rust testing setup too, if there isn't one already.", "tree": {"sha": "70b87e311f8653949d9dbf5948a30b4e31cd89b3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/70b87e311f8653949d9dbf5948a30b4e31cd89b3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f710aae2eff6a738caa5991e62267c3a5f70b1c9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f710aae2eff6a738caa5991e62267c3a5f70b1c9", "html_url": "https://github.com/rust-lang/rust/commit/f710aae2eff6a738caa5991e62267c3a5f70b1c9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f710aae2eff6a738caa5991e62267c3a5f70b1c9/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "50a6c798d1a5e23ebf6fb4675786405e556c16a4", "url": "https://api.github.com/repos/rust-lang/rust/commits/50a6c798d1a5e23ebf6fb4675786405e556c16a4", "html_url": "https://github.com/rust-lang/rust/commit/50a6c798d1a5e23ebf6fb4675786405e556c16a4"}, {"sha": "d09ba5d3ce812248af448c094ebd0edcf818dfc5", "url": "https://api.github.com/repos/rust-lang/rust/commits/d09ba5d3ce812248af448c094ebd0edcf818dfc5", "html_url": "https://github.com/rust-lang/rust/commit/d09ba5d3ce812248af448c094ebd0edcf818dfc5"}], "stats": {"total": 67, "additions": 67, "deletions": 0}, "files": [{"sha": "e4acf230e7211cdee947f0fa565e0ef89b95e306", "filename": "COMPILER_TESTS.md", "status": "added", "additions": 43, "deletions": 0, "changes": 43, "blob_url": "https://github.com/rust-lang/rust/blob/f710aae2eff6a738caa5991e62267c3a5f70b1c9/COMPILER_TESTS.md", "raw_url": "https://github.com/rust-lang/rust/raw/f710aae2eff6a738caa5991e62267c3a5f70b1c9/COMPILER_TESTS.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/COMPILER_TESTS.md?ref=f710aae2eff6a738caa5991e62267c3a5f70b1c9", "patch": "@@ -0,0 +1,43 @@\n+# Compiler Test Documentation\n+\n+In the Rust project, we use a special set of comands imbedded in\n+comments to test the Rust compiler. There are two groups of commands:\n+\n+1. Header commands\n+2. Error info commands\n+\n+Both types of commands are inside comments, but header commands should\n+be in a comment before any code.\n+\n+## Summary of Error Info Commands\n+\n+Error commands specify something about certain lines of the\n+program. They tell the test what kind of error and what message you\n+are expecting.\n+\n+* `~`: Associates the following error level and message with the\n+  current line\n+* `~|`: Associates the following error level and message with the same\n+  line as the previous comment\n+* `~^`: Associates the following error level and message with the\n+  previous line. Each caret (`^`) that you add adds a line to this, so\n+  `~^^^^^^^` is seven lines up.\n+\n+The error levels that you can have are:\n+1. `ERROR`\n+2. `WARNING`\n+3. `NOTE`\n+4. `HELP` and `SUGGESTION`*\n+\n+\\* **Note**: `SUGGESTION` must follow emediatly after `HELP`.\n+\n+## Summary of Header Commands\n+\n+Header commands specify something about the entire test file, as a\n+whole, instead of just a few lines inside the test.\n+\n+* `ignore-X` where `X` is an architecture, OS or stage will ignore the test accordingly\n+* `ignore-pretty` will not compile the pretty-printed test (this is done to test the pretty-printer, but might not always work)\n+* `ignore-test` always ignores the test\n+* `ignore-lldb` and `ignore-gdb` will skip the debuginfo tests\n+* `min-{gdb,lldb}-version`"}, {"sha": "72962f7c5a889409ca5c8bf9ec780fe9c8188cba", "filename": "CONTRIBUTING.md", "status": "modified", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/f710aae2eff6a738caa5991e62267c3a5f70b1c9/CONTRIBUTING.md", "raw_url": "https://github.com/rust-lang/rust/raw/f710aae2eff6a738caa5991e62267c3a5f70b1c9/CONTRIBUTING.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/CONTRIBUTING.md?ref=f710aae2eff6a738caa5991e62267c3a5f70b1c9", "patch": "@@ -10,6 +10,7 @@ links to the major sections:\n * [Writing Documentation](#writing-documentation)\n * [Issue Triage](#issue-triage)\n * [Out-of-tree Contributions](#out-of-tree-contributions)\n+* [Helpful Links and Information](#helpful-links-and-information)\n \n If you have questions, please make a post on [internals.rust-lang.org][internals] or\n hop on [#rust-internals][pound-rust-internals].\n@@ -210,3 +211,26 @@ valuable!\n [users]: https://users.rust-lang.org/\n [so]: http://stackoverflow.com/questions/tagged/rust\n [community-library]: https://github.com/rust-lang/rfcs/labels/A-community-library\n+\n+## Helpful Links and Information\n+\n+For people new to Rust, and just starting to contribute, or even for\n+more seasoned developers, some useful places to look for information\n+are:\n+\n+* The [Rust Internals forum][rif], a place to ask questions and\n+  discuss Rust's internals\n+* The [generated documentation for rust's compiler][gdfrustc]\n+* The [rust referance][rr], even though it doesn't specifically talk about Rust's internals, its a great reasource nontheless\n+* Although out of date, [Tom Lee's great blog article][tlgba] is very helpful\n+* [rustaceans.org][ro] is helpful, but mostly dedicated to IRC\n+* The [Rust Compiler Testing Docs][rctd]\n+* **Google**!\n+* Don't be afraid to ask! The Rust community is friendly and helpful.\n+\n+[gdfrustc]: http://manishearth.github.io/rust-internals-docs/rustc/\n+[rif]: http://internals.rust-lang.org\n+[rr]: https://doc.rust-lang.org/book/README.html\n+[tlgba]: http://tomlee.co/2014/04/03/a-more-detailed-tour-of-the-rust-compiler/\n+[ro]: http://www.rustaceans.org/\n+[rctd]: ./COMPILER_TESTS.md"}]}