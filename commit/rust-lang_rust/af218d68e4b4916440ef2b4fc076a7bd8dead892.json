{"sha": "af218d68e4b4916440ef2b4fc076a7bd8dead892", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFmMjE4ZDY4ZTRiNDkxNjQ0MGVmMmI0ZmMwNzZhN2JkOGRlYWQ4OTI=", "commit": {"author": {"name": "Scott Lawrence", "email": "bytbox@gmail.com", "date": "2014-01-27T03:13:29Z"}, "committer": {"name": "Scott Lawrence", "email": "bytbox@gmail.com", "date": "2014-01-29T14:15:41Z"}, "message": "Removing do keyword from librustdoc", "tree": {"sha": "e932d4b4c62c648cebb237a1e6df05718a1ec270", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e932d4b4c62c648cebb237a1e6df05718a1ec270"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/af218d68e4b4916440ef2b4fc076a7bd8dead892", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/af218d68e4b4916440ef2b4fc076a7bd8dead892", "html_url": "https://github.com/rust-lang/rust/commit/af218d68e4b4916440ef2b4fc076a7bd8dead892", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/af218d68e4b4916440ef2b4fc076a7bd8dead892/comments", "author": {"login": "bytbox", "id": 160033, "node_id": "MDQ6VXNlcjE2MDAzMw==", "avatar_url": "https://avatars.githubusercontent.com/u/160033?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bytbox", "html_url": "https://github.com/bytbox", "followers_url": "https://api.github.com/users/bytbox/followers", "following_url": "https://api.github.com/users/bytbox/following{/other_user}", "gists_url": "https://api.github.com/users/bytbox/gists{/gist_id}", "starred_url": "https://api.github.com/users/bytbox/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bytbox/subscriptions", "organizations_url": "https://api.github.com/users/bytbox/orgs", "repos_url": "https://api.github.com/users/bytbox/repos", "events_url": "https://api.github.com/users/bytbox/events{/privacy}", "received_events_url": "https://api.github.com/users/bytbox/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bytbox", "id": 160033, "node_id": "MDQ6VXNlcjE2MDAzMw==", "avatar_url": "https://avatars.githubusercontent.com/u/160033?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bytbox", "html_url": "https://github.com/bytbox", "followers_url": "https://api.github.com/users/bytbox/followers", "following_url": "https://api.github.com/users/bytbox/following{/other_user}", "gists_url": "https://api.github.com/users/bytbox/gists{/gist_id}", "starred_url": "https://api.github.com/users/bytbox/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bytbox/subscriptions", "organizations_url": "https://api.github.com/users/bytbox/orgs", "repos_url": "https://api.github.com/users/bytbox/repos", "events_url": "https://api.github.com/users/bytbox/events{/privacy}", "received_events_url": "https://api.github.com/users/bytbox/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1d80a9a0f683a397392e0fea9e8c20b32b374fee", "url": "https://api.github.com/repos/rust-lang/rust/commits/1d80a9a0f683a397392e0fea9e8c20b32b374fee", "html_url": "https://github.com/rust-lang/rust/commit/1d80a9a0f683a397392e0fea9e8c20b32b374fee"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "f7a484e3d3e00262c6072a406250a679c3a2fde7", "filename": "src/librustdoc/lib.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/af218d68e4b4916440ef2b4fc076a7bd8dead892/src%2Flibrustdoc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/af218d68e4b4916440ef2b4fc076a7bd8dead892/src%2Flibrustdoc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Flib.rs?ref=af218d68e4b4916440ef2b4fc076a7bd8dead892", "patch": "@@ -211,10 +211,10 @@ fn rust_input(cratefile: &str, matches: &getopts::Matches) -> Output {\n     let cfgs = matches.opt_strs(\"cfg\");\n     let cr = Path::new(cratefile);\n     info!(\"starting to run rustc\");\n-    let (crate, analysis) = do std::task::try {\n+    let (crate, analysis) = std::task::try(proc() {\n         let cr = cr;\n         core::run_core(libs.move_iter().collect(), cfgs, &cr)\n-    }.unwrap();\n+    }).unwrap();\n     info!(\"finished with rustc\");\n     local_data::set(analysiskey, analysis);\n "}]}