{"sha": "e749ba20616de16d0643d1dd2155bd32fd02d51f", "node_id": "C_kwDOAAsO6NoAKGU3NDliYTIwNjE2ZGUxNmQwNjQzZDFkZDIxNTViZDMyZmQwMmQ1MWY", "commit": {"author": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2022-06-23T21:39:13Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-06-23T21:39:13Z"}, "message": "Rollup merge of #98364 - RalfJung:arc-clone, r=Mark-Simulacrum\n\nclarify Arc::clone overflow check comment\n\nI had to read this twice to realize that this is explaining that the code is technically unsound, so move that into a dedicated paragraph and make the wording a bit more explicit.", "tree": {"sha": "1c975054dffcf8e03cf133eb1c28649d1751ac47", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1c975054dffcf8e03cf133eb1c28649d1751ac47"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e749ba20616de16d0643d1dd2155bd32fd02d51f", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJitN2BCRBK7hj4Ov3rIwAA4RsIADQYTL5RULFRBav2yFIgzfd8\nz9LARvLYpNY1rPcWxFLb5MKG9EtDw5+/kg2UpiWHURpllth3Aolb9wUR6E6swgbn\nW0ZVjUb2yQ98mtBgwq8ghYkD9eHwWuGbwzGZBnzx5t/ureiePHQ12AbJ8BIMo57L\nygb4w2FDN9xxbF3zG66MLgU5r4+eiwOJxgUJaFZIam7U084ajeTPddEJ+3kHA4SN\nof6v5m51XdixTfJmEETaTyem/jlPLTqMDKXkifz7Vhp+gtZ+4cbQyLWVEFTC8e3N\ncfdKfl40Q76BYcgrgDyQ+HrmQ0VJLXKRJLkBtn2XrNaM2dBMVgyJM8XEw72IO/4=\n=IZ0p\n-----END PGP SIGNATURE-----\n", "payload": "tree 1c975054dffcf8e03cf133eb1c28649d1751ac47\nparent cc45ad50f8aea40f0d3b137d86b509f42c19f96c\nparent 46b2454bad71b844ef5eb40860fb50131b6fe168\nauthor Michael Goulet <michael@errs.io> 1656020353 -0700\ncommitter GitHub <noreply@github.com> 1656020353 -0700\n\nRollup merge of #98364 - RalfJung:arc-clone, r=Mark-Simulacrum\n\nclarify Arc::clone overflow check comment\n\nI had to read this twice to realize that this is explaining that the code is technically unsound, so move that into a dedicated paragraph and make the wording a bit more explicit.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e749ba20616de16d0643d1dd2155bd32fd02d51f", "html_url": "https://github.com/rust-lang/rust/commit/e749ba20616de16d0643d1dd2155bd32fd02d51f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e749ba20616de16d0643d1dd2155bd32fd02d51f/comments", "author": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cc45ad50f8aea40f0d3b137d86b509f42c19f96c", "url": "https://api.github.com/repos/rust-lang/rust/commits/cc45ad50f8aea40f0d3b137d86b509f42c19f96c", "html_url": "https://github.com/rust-lang/rust/commit/cc45ad50f8aea40f0d3b137d86b509f42c19f96c"}, {"sha": "46b2454bad71b844ef5eb40860fb50131b6fe168", "url": "https://api.github.com/repos/rust-lang/rust/commits/46b2454bad71b844ef5eb40860fb50131b6fe168", "html_url": "https://github.com/rust-lang/rust/commit/46b2454bad71b844ef5eb40860fb50131b6fe168"}], "stats": {"total": 17, "additions": 9, "deletions": 8}, "files": [{"sha": "24e849aab4cce442da669ea7e23d4d651f4c5bc3", "filename": "library/alloc/src/sync.rs", "status": "modified", "additions": 9, "deletions": 8, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/e749ba20616de16d0643d1dd2155bd32fd02d51f/library%2Falloc%2Fsrc%2Fsync.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e749ba20616de16d0643d1dd2155bd32fd02d51f/library%2Falloc%2Fsrc%2Fsync.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Fsrc%2Fsync.rs?ref=e749ba20616de16d0643d1dd2155bd32fd02d51f", "patch": "@@ -1355,15 +1355,16 @@ impl<T: ?Sized> Clone for Arc<T> {\n         // [1]: (www.boost.org/doc/libs/1_55_0/doc/html/atomic/usage_examples.html)\n         let old_size = self.inner().strong.fetch_add(1, Relaxed);\n \n-        // However we need to guard against massive refcounts in case someone\n-        // is `mem::forget`ing Arcs. If we don't do this the count can overflow\n-        // and users will use-after free. We racily saturate to `isize::MAX` on\n-        // the assumption that there aren't ~2 billion threads incrementing\n-        // the reference count at once. This branch will never be taken in\n-        // any realistic program.\n+        // However we need to guard against massive refcounts in case someone is `mem::forget`ing\n+        // Arcs. If we don't do this the count can overflow and users will use-after free. This\n+        // branch will never be taken in any realistic program. We abort because such a program is\n+        // incredibly degenerate, and we don't care to support it.\n         //\n-        // We abort because such a program is incredibly degenerate, and we\n-        // don't care to support it.\n+        // This check is not 100% water-proof: we error when the refcount grows beyond `isize::MAX`.\n+        // But we do that check *after* having done the increment, so there is a chance here that\n+        // the worst already happened and we actually do overflow the `usize` counter. However, that\n+        // requires the counter to grow from `isize::MAX` to `usize::MAX` between the increment\n+        // above and the `abort` below, which seems exceedingly unlikely.\n         if old_size > MAX_REFCOUNT {\n             abort();\n         }"}]}