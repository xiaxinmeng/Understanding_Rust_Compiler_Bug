{"sha": "a479a6a7a6fa1bfe1f18d7d7411ad14e7b8ca17b", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE0NzlhNmE3YTZmYTFiZmUxZjE4ZDdkNzQxMWFkMTRlN2I4Y2ExN2I=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2016-06-16T08:01:26Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2016-06-16T08:01:26Z"}, "message": "Auto merge of #34290 - arielb1:short-ladder, r=eddyb\n\ndon't generate drop ladder steps for fields that don't need dropping\n\ncc @eddyb\n\nThis should help with #34166", "tree": {"sha": "f1c79bb867eaef7e16806ebd4e6381a2a45a6356", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f1c79bb867eaef7e16806ebd4e6381a2a45a6356"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a479a6a7a6fa1bfe1f18d7d7411ad14e7b8ca17b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a479a6a7a6fa1bfe1f18d7d7411ad14e7b8ca17b", "html_url": "https://github.com/rust-lang/rust/commit/a479a6a7a6fa1bfe1f18d7d7411ad14e7b8ca17b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a479a6a7a6fa1bfe1f18d7d7411ad14e7b8ca17b/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7339eca0cc700e2d75536dce3ca772eedfb86f08", "url": "https://api.github.com/repos/rust-lang/rust/commits/7339eca0cc700e2d75536dce3ca772eedfb86f08", "html_url": "https://github.com/rust-lang/rust/commit/7339eca0cc700e2d75536dce3ca772eedfb86f08"}, {"sha": "68129a682a751cf95933491933a6ff12acdff0b1", "url": "https://api.github.com/repos/rust-lang/rust/commits/68129a682a751cf95933491933a6ff12acdff0b1", "html_url": "https://github.com/rust-lang/rust/commit/68129a682a751cf95933491933a6ff12acdff0b1"}], "stats": {"total": 23, "additions": 15, "deletions": 8}, "files": [{"sha": "065cbbf76b3845f17f3045b27d2b7e9e1d7605bc", "filename": "src/librustc_borrowck/borrowck/mir/elaborate_drops.rs", "status": "modified", "additions": 15, "deletions": 6, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/a479a6a7a6fa1bfe1f18d7d7411ad14e7b8ca17b/src%2Flibrustc_borrowck%2Fborrowck%2Fmir%2Felaborate_drops.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a479a6a7a6fa1bfe1f18d7d7411ad14e7b8ca17b/src%2Flibrustc_borrowck%2Fborrowck%2Fmir%2Felaborate_drops.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_borrowck%2Fborrowck%2Fmir%2Felaborate_drops.rs?ref=a479a6a7a6fa1bfe1f18d7d7411ad14e7b8ca17b", "patch": "@@ -548,17 +548,26 @@ impl<'b, 'tcx> ElaborateDropsCtxt<'b, 'tcx> {\n     ///     ELAB(drop location.2 [target=`c.unwind])\n     fn drop_ladder<'a>(&mut self,\n                        c: &DropCtxt<'a, 'tcx>,\n-                       fields: &[(Lvalue<'tcx>, Option<MovePathIndex>)])\n+                       fields: Vec<(Lvalue<'tcx>, Option<MovePathIndex>)>)\n                        -> BasicBlock\n     {\n         debug!(\"drop_ladder({:?}, {:?})\", c, fields);\n+\n+        let mut fields = fields;\n+        fields.retain(|&(ref lvalue, _)| {\n+            let ty = self.mir.lvalue_ty(self.tcx, lvalue).to_ty(self.tcx);\n+            self.tcx.type_needs_drop_given_env(ty, self.param_env())\n+        });\n+\n+        debug!(\"drop_ladder - fields needing drop: {:?}\", fields);\n+\n         let unwind_ladder = if c.is_cleanup {\n             None\n         } else {\n             Some(self.drop_halfladder(c, None, c.unwind.unwrap(), &fields, true))\n         };\n \n-        self.drop_halfladder(c, unwind_ladder, c.succ, fields, c.is_cleanup)\n+        self.drop_halfladder(c, unwind_ladder, c.succ, &fields, c.is_cleanup)\n             .last().cloned().unwrap_or(c.succ)\n     }\n \n@@ -567,7 +576,7 @@ impl<'b, 'tcx> ElaborateDropsCtxt<'b, 'tcx> {\n     {\n         debug!(\"open_drop_for_tuple({:?}, {:?})\", c, tys);\n \n-        let fields: Vec<_> = tys.iter().enumerate().map(|(i, &ty)| {\n+        let fields = tys.iter().enumerate().map(|(i, &ty)| {\n             (c.lvalue.clone().field(Field::new(i), ty),\n              super::move_path_children_matching(\n                  &self.move_data().move_paths, c.path, |proj| match proj {\n@@ -579,7 +588,7 @@ impl<'b, 'tcx> ElaborateDropsCtxt<'b, 'tcx> {\n             ))\n         }).collect();\n \n-        self.drop_ladder(c, &fields)\n+        self.drop_ladder(c, fields)\n     }\n \n     fn open_drop_for_box<'a>(&mut self, c: &DropCtxt<'a, 'tcx>, ty: Ty<'tcx>)\n@@ -634,7 +643,7 @@ impl<'b, 'tcx> ElaborateDropsCtxt<'b, 'tcx> {\n                 variant_path,\n                 &adt.variants[variant_index],\n                 substs);\n-            self.drop_ladder(c, &fields)\n+            self.drop_ladder(c, fields)\n         } else {\n             // variant not found - drop the entire enum\n             if let None = *drop_block {\n@@ -659,7 +668,7 @@ impl<'b, 'tcx> ElaborateDropsCtxt<'b, 'tcx> {\n                     &adt.variants[0],\n                     substs\n                 );\n-                self.drop_ladder(c, &fields)\n+                self.drop_ladder(c, fields)\n             }\n             _ => {\n                 let variant_drops : Vec<BasicBlock> ="}, {"sha": "14316a557328b69d1dd264b0fb33932922e43764", "filename": "src/test/codegen-units/item-collection/generic-impl.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a479a6a7a6fa1bfe1f18d7d7411ad14e7b8ca17b/src%2Ftest%2Fcodegen-units%2Fitem-collection%2Fgeneric-impl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a479a6a7a6fa1bfe1f18d7d7411ad14e7b8ca17b/src%2Ftest%2Fcodegen-units%2Fitem-collection%2Fgeneric-impl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcodegen-units%2Fitem-collection%2Fgeneric-impl.rs?ref=a479a6a7a6fa1bfe1f18d7d7411ad14e7b8ca17b", "patch": "@@ -77,5 +77,3 @@ fn main() {\n     //~ TRANS_ITEM fn generic_impl::id[0]<generic_impl::Struct[0]<&str>>\n     let _ = (Struct::new(Struct::new(\"str\")).f)(Struct::new(\"str\"));\n }\n-\n-//~ TRANS_ITEM drop-glue i8"}]}