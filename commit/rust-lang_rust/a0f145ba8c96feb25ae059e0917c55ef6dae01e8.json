{"sha": "a0f145ba8c96feb25ae059e0917c55ef6dae01e8", "node_id": "MDY6Q29tbWl0NzI0NzEyOmEwZjE0NWJhOGM5NmZlYjI1YWUwNTllMDkxN2M1NWVmNmRhZTAxZTg=", "commit": {"author": {"name": "Ariel Ben-Yehuda", "email": "arielb1@mail.tau.ac.il", "date": "2017-04-20T17:37:02Z"}, "committer": {"name": "Ariel Ben-Yehuda", "email": "ariel.byd@gmail.com", "date": "2017-04-22T18:02:41Z"}, "message": "add a cache to impl_polarity\n\nthis is another one of these things that looks *much* worse on valgrind.", "tree": {"sha": "b87b5df4298818f7ed1a27d5f843dd8a2148513d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b87b5df4298818f7ed1a27d5f843dd8a2148513d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a0f145ba8c96feb25ae059e0917c55ef6dae01e8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a0f145ba8c96feb25ae059e0917c55ef6dae01e8", "html_url": "https://github.com/rust-lang/rust/commit/a0f145ba8c96feb25ae059e0917c55ef6dae01e8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a0f145ba8c96feb25ae059e0917c55ef6dae01e8/comments", "author": null, "committer": {"login": "arielb1", "id": 1830974, "node_id": "MDQ6VXNlcjE4MzA5NzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1830974?v=4", "gravatar_id": "", "url": "https://api.github.com/users/arielb1", "html_url": "https://github.com/arielb1", "followers_url": "https://api.github.com/users/arielb1/followers", "following_url": "https://api.github.com/users/arielb1/following{/other_user}", "gists_url": "https://api.github.com/users/arielb1/gists{/gist_id}", "starred_url": "https://api.github.com/users/arielb1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/arielb1/subscriptions", "organizations_url": "https://api.github.com/users/arielb1/orgs", "repos_url": "https://api.github.com/users/arielb1/repos", "events_url": "https://api.github.com/users/arielb1/events{/privacy}", "received_events_url": "https://api.github.com/users/arielb1/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "81af6fb67ce9efe989031d629ed414ed85ee3767", "url": "https://api.github.com/repos/rust-lang/rust/commits/81af6fb67ce9efe989031d629ed414ed85ee3767", "html_url": "https://github.com/rust-lang/rust/commit/81af6fb67ce9efe989031d629ed414ed85ee3767"}], "stats": {"total": 31, "additions": 15, "deletions": 16}, "files": [{"sha": "20ed2244e864cdd40e261e264ad5c2954f0ba011", "filename": "src/librustc/middle/cstore.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a0f145ba8c96feb25ae059e0917c55ef6dae01e8/src%2Flibrustc%2Fmiddle%2Fcstore.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a0f145ba8c96feb25ae059e0917c55ef6dae01e8/src%2Flibrustc%2Fmiddle%2Fcstore.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fcstore.rs?ref=a0f145ba8c96feb25ae059e0917c55ef6dae01e8", "patch": "@@ -195,7 +195,6 @@ pub trait CrateStore {\n     fn implementations_of_trait(&self, filter: Option<DefId>) -> Vec<DefId>;\n \n     // impl info\n-    fn impl_polarity(&self, def: DefId) -> hir::ImplPolarity;\n     fn impl_parent(&self, impl_def_id: DefId) -> Option<DefId>;\n \n     // trait/impl-item info\n@@ -330,7 +329,6 @@ impl CrateStore for DummyCrateStore {\n     fn implementations_of_trait(&self, filter: Option<DefId>) -> Vec<DefId> { vec![] }\n \n     // impl info\n-    fn impl_polarity(&self, def: DefId) -> hir::ImplPolarity { bug!(\"impl_polarity\") }\n     fn impl_parent(&self, def: DefId) -> Option<DefId> { bug!(\"impl_parent\") }\n \n     // trait/impl-item info"}, {"sha": "add8db850e4f455d59b5382c35625eded5f1cf93", "filename": "src/librustc/ty/maps.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a0f145ba8c96feb25ae059e0917c55ef6dae01e8/src%2Flibrustc%2Fty%2Fmaps.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a0f145ba8c96feb25ae059e0917c55ef6dae01e8/src%2Flibrustc%2Fty%2Fmaps.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Fmaps.rs?ref=a0f145ba8c96feb25ae059e0917c55ef6dae01e8", "patch": "@@ -10,6 +10,7 @@\n \n use dep_graph::{DepGraph, DepNode, DepTrackingMap, DepTrackingMapConfig};\n use hir::def_id::{CrateNum, DefId, LOCAL_CRATE};\n+use hir;\n use middle::const_val;\n use middle::privacy::AccessLevels;\n use mir;\n@@ -394,6 +395,7 @@ define_maps! { <'tcx>\n     pub associated_item: AssociatedItems(DefId) -> ty::AssociatedItem,\n \n     pub impl_trait_ref: ItemSignature(DefId) -> Option<ty::TraitRef<'tcx>>,\n+    pub impl_polarity: ItemSignature(DefId) -> hir::ImplPolarity,\n \n     /// Maps a DefId of a type to a list of its inherent impls.\n     /// Contains implementations of methods that are inherent to a type."}, {"sha": "1305b0d93037892e5a13db2bd56626855ae1acf1", "filename": "src/librustc/ty/mod.rs", "status": "modified", "additions": 1, "deletions": 8, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/a0f145ba8c96feb25ae059e0917c55ef6dae01e8/src%2Flibrustc%2Fty%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a0f145ba8c96feb25ae059e0917c55ef6dae01e8/src%2Flibrustc%2Fty%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Fmod.rs?ref=a0f145ba8c96feb25ae059e0917c55ef6dae01e8", "patch": "@@ -2149,14 +2149,7 @@ impl<'a, 'gcx, 'tcx> TyCtxt<'a, 'gcx, 'tcx> {\n     }\n \n     pub fn trait_impl_polarity(self, id: DefId) -> hir::ImplPolarity {\n-        if let Some(id) = self.hir.as_local_node_id(id) {\n-            match self.hir.expect_item(id).node {\n-                hir::ItemImpl(_, polarity, ..) => polarity,\n-                ref item => bug!(\"trait_impl_polarity: {:?} not an impl\", item)\n-            }\n-        } else {\n-            self.sess.cstore.impl_polarity(id)\n-        }\n+        queries::impl_polarity::get(self, DUMMY_SP, id)\n     }\n \n     pub fn trait_relevant_for_never(self, did: DefId) -> bool {"}, {"sha": "cb1b0c4c0b78bc008007a2884888faced81e0922", "filename": "src/librustc_metadata/cstore_impl.rs", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/a0f145ba8c96feb25ae059e0917c55ef6dae01e8/src%2Flibrustc_metadata%2Fcstore_impl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a0f145ba8c96feb25ae059e0917c55ef6dae01e8/src%2Flibrustc_metadata%2Fcstore_impl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_metadata%2Fcstore_impl.rs?ref=a0f145ba8c96feb25ae059e0917c55ef6dae01e8", "patch": "@@ -89,6 +89,7 @@ provide! { <'tcx> tcx, def_id, cdata\n     }\n     associated_item => { cdata.get_associated_item(def_id.index) }\n     impl_trait_ref => { cdata.get_impl_trait(def_id.index, tcx) }\n+    impl_polarity => { cdata.get_impl_polarity(def_id.index) }\n     coerce_unsized_info => {\n         cdata.get_coerce_unsized_info(def_id.index).unwrap_or_else(|| {\n             bug!(\"coerce_unsized_info: `{:?}` is missing its info\", def_id);\n@@ -177,12 +178,6 @@ impl CrateStore for cstore::CStore {\n         result\n     }\n \n-    fn impl_polarity(&self, def: DefId) -> hir::ImplPolarity\n-    {\n-        self.dep_graph.read(DepNode::MetaData(def));\n-        self.get_crate_data(def.krate).get_impl_polarity(def.index)\n-    }\n-\n     fn impl_parent(&self, impl_def: DefId) -> Option<DefId> {\n         self.dep_graph.read(DepNode::MetaData(impl_def));\n         self.get_crate_data(impl_def.krate).get_parent_impl(impl_def.index)"}, {"sha": "1f2310c49e3a0089127e5374a619fe89e3cba0fb", "filename": "src/librustc_typeck/collect.rs", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/a0f145ba8c96feb25ae059e0917c55ef6dae01e8/src%2Flibrustc_typeck%2Fcollect.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a0f145ba8c96feb25ae059e0917c55ef6dae01e8/src%2Flibrustc_typeck%2Fcollect.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcollect.rs?ref=a0f145ba8c96feb25ae059e0917c55ef6dae01e8", "patch": "@@ -99,6 +99,7 @@ pub fn provide(providers: &mut Providers) {\n         trait_def,\n         adt_def,\n         impl_trait_ref,\n+        impl_polarity,\n         is_foreign_item,\n         ..*providers\n     };\n@@ -1133,6 +1134,16 @@ fn impl_trait_ref<'a, 'tcx>(tcx: TyCtxt<'a, 'tcx, 'tcx>,\n     }\n }\n \n+fn impl_polarity<'a, 'tcx>(tcx: TyCtxt<'a, 'tcx, 'tcx>,\n+                           def_id: DefId)\n+                           -> hir::ImplPolarity {\n+    let node_id = tcx.hir.as_local_node_id(def_id).unwrap();\n+    match tcx.hir.expect_item(node_id).node {\n+        hir::ItemImpl(_, polarity, ..) => polarity,\n+        ref item => bug!(\"trait_impl_polarity: {:?} not an impl\", item)\n+    }\n+}\n+\n // Is it marked with ?Sized\n fn is_unsized<'gcx: 'tcx, 'tcx>(astconv: &AstConv<'gcx, 'tcx>,\n                                 ast_bounds: &[hir::TyParamBound],"}]}