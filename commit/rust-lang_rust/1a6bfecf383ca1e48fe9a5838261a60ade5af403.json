{"sha": "1a6bfecf383ca1e48fe9a5838261a60ade5af403", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFhNmJmZWNmMzgzY2ExZTQ4ZmU5YTU4MzgyNjFhNjBhZGU1YWY0MDM=", "commit": {"author": {"name": "HMPerson1", "email": "hmperson1@gmail.com", "date": "2018-10-21T19:23:51Z"}, "committer": {"name": "HMPerson1", "email": "hmperson1@gmail.com", "date": "2018-10-25T03:39:55Z"}, "message": "Add test case for `mem::discriminant` inside a macro", "tree": {"sha": "b4ecd7906e54d534318a3f7269e771e063e20493", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b4ecd7906e54d534318a3f7269e771e063e20493"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1a6bfecf383ca1e48fe9a5838261a60ade5af403", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQFIBAABCAAyFiEE30PRORiHa0gkBHJnH7R33dJ4Ic4FAlvROwsUHGhtcGVyc29u\nMUBnbWFpbC5jb20ACgkQH7R33dJ4Ic4Xbgf7BOHA5gG+/RMxXS5c3GP8NW+1xP/j\nZ8fDGFlKocc1NB/C8zOjkoXQ5mRAeWBok8x+z3CgTTnOWCDsC+6BMBoBpBeG6enp\nqwbF9cbdPmvZp4pd0aXPyzeXhfmQ0izehJwkVd+ZpICUE1r2BFKPOtivNdONlVia\n1TGJj5lwdCd80f3tJ1QDC7+jt1x1xH2Lck3zEQwhcXJ0mGxppAubwd6KwzP6yrtS\nsCTlqOwTwraWyNI1kRNCmhBddOmj4P7QxbXkUqPQDV4J+fL5t2V3T/3oGkZalseN\nhRblnQx98vzMyH13sTNVenS0Cu6NR5SL0gEjMdj/diyiyLXLSmxZWHKz6g==\n=yelK\n-----END PGP SIGNATURE-----", "payload": "tree b4ecd7906e54d534318a3f7269e771e063e20493\nparent 5dbca1f6b11fd7ece50675f0c8f1ff7c254a30bd\nauthor HMPerson1 <hmperson1@gmail.com> 1540149831 -0400\ncommitter HMPerson1 <hmperson1@gmail.com> 1540438795 -0400\n\nAdd test case for `mem::discriminant` inside a macro\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1a6bfecf383ca1e48fe9a5838261a60ade5af403", "html_url": "https://github.com/rust-lang/rust/commit/1a6bfecf383ca1e48fe9a5838261a60ade5af403", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1a6bfecf383ca1e48fe9a5838261a60ade5af403/comments", "author": {"login": "HMPerson1", "id": 2219904, "node_id": "MDQ6VXNlcjIyMTk5MDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/2219904?v=4", "gravatar_id": "", "url": "https://api.github.com/users/HMPerson1", "html_url": "https://github.com/HMPerson1", "followers_url": "https://api.github.com/users/HMPerson1/followers", "following_url": "https://api.github.com/users/HMPerson1/following{/other_user}", "gists_url": "https://api.github.com/users/HMPerson1/gists{/gist_id}", "starred_url": "https://api.github.com/users/HMPerson1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/HMPerson1/subscriptions", "organizations_url": "https://api.github.com/users/HMPerson1/orgs", "repos_url": "https://api.github.com/users/HMPerson1/repos", "events_url": "https://api.github.com/users/HMPerson1/events{/privacy}", "received_events_url": "https://api.github.com/users/HMPerson1/received_events", "type": "User", "site_admin": false}, "committer": {"login": "HMPerson1", "id": 2219904, "node_id": "MDQ6VXNlcjIyMTk5MDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/2219904?v=4", "gravatar_id": "", "url": "https://api.github.com/users/HMPerson1", "html_url": "https://github.com/HMPerson1", "followers_url": "https://api.github.com/users/HMPerson1/followers", "following_url": "https://api.github.com/users/HMPerson1/following{/other_user}", "gists_url": "https://api.github.com/users/HMPerson1/gists{/gist_id}", "starred_url": "https://api.github.com/users/HMPerson1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/HMPerson1/subscriptions", "organizations_url": "https://api.github.com/users/HMPerson1/orgs", "repos_url": "https://api.github.com/users/HMPerson1/repos", "events_url": "https://api.github.com/users/HMPerson1/events{/privacy}", "received_events_url": "https://api.github.com/users/HMPerson1/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5dbca1f6b11fd7ece50675f0c8f1ff7c254a30bd", "url": "https://api.github.com/repos/rust-lang/rust/commits/5dbca1f6b11fd7ece50675f0c8f1ff7c254a30bd", "html_url": "https://github.com/rust-lang/rust/commit/5dbca1f6b11fd7ece50675f0c8f1ff7c254a30bd"}], "stats": {"total": 19, "additions": 18, "deletions": 1}, "files": [{"sha": "64d056fb2feb97a3a307169f7a1b55144c3fa098", "filename": "tests/ui/mem_discriminant.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/1a6bfecf383ca1e48fe9a5838261a60ade5af403/tests%2Fui%2Fmem_discriminant.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1a6bfecf383ca1e48fe9a5838261a60ade5af403/tests%2Fui%2Fmem_discriminant.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmem_discriminant.rs?ref=1a6bfecf383ca1e48fe9a5838261a60ade5af403", "patch": "@@ -34,6 +34,11 @@ fn main() {\n     mem::discriminant(rro);\n     mem::discriminant(&rro);\n \n+    macro_rules! mem_discriminant_but_in_a_macro {\n+        ($param:expr) => (mem::discriminant($param))\n+    }\n+\n+    mem_discriminant_but_in_a_macro!(&rro);\n \n     // ok\n     mem::discriminant(&Some(2));"}, {"sha": "57e030133926f5a2428fbe23595640ea7aea4fe7", "filename": "tests/ui/mem_discriminant.stderr", "status": "modified", "additions": 13, "deletions": 1, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/1a6bfecf383ca1e48fe9a5838261a60ade5af403/tests%2Fui%2Fmem_discriminant.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1a6bfecf383ca1e48fe9a5838261a60ade5af403/tests%2Fui%2Fmem_discriminant.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmem_discriminant.stderr?ref=1a6bfecf383ca1e48fe9a5838261a60ade5af403", "patch": "@@ -72,5 +72,17 @@ error: calling `mem::discriminant` on non-enum type `&&std::option::Option<i32>`\n    |                       |\n    |                       help: try dereferencing: `*rro`\n \n-error: aborting due to 9 previous errors\n+error: calling `mem::discriminant` on non-enum type `&&std::option::Option<i32>`\n+  --> $DIR/mem_discriminant.rs:38:27\n+   |\n+38 |         ($param:expr) => (mem::discriminant($param))\n+   |                           ^^^^^^^^^^^^^^^^^^^^^^^^^\n+...\n+41 |     mem_discriminant_but_in_a_macro!(&rro);\n+   |     ---------------------------------------\n+   |     |                                |\n+   |     |                                help: try dereferencing: `*rro`\n+   |     in this macro invocation\n+\n+error: aborting due to 10 previous errors\n "}]}