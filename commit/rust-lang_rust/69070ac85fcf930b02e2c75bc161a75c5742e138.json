{"sha": "69070ac85fcf930b02e2c75bc161a75c5742e138", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY5MDcwYWM4NWZjZjkzMGIwMmUyYzc1YmMxNjFhNzVjNTc0MmUxMzg=", "commit": {"author": {"name": "Kevin Ballard", "email": "kevin@sb.org", "date": "2014-05-25T23:21:07Z"}, "committer": {"name": "Kevin Ballard", "email": "kevin@sb.org", "date": "2014-05-25T23:21:07Z"}, "message": "libstd: Remove unnecessary re-exports under std::std", "tree": {"sha": "f684618920bdfc2429fdb7061d1f67b8f3ab6697", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f684618920bdfc2429fdb7061d1f67b8f3ab6697"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/69070ac85fcf930b02e2c75bc161a75c5742e138", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/69070ac85fcf930b02e2c75bc161a75c5742e138", "html_url": "https://github.com/rust-lang/rust/commit/69070ac85fcf930b02e2c75bc161a75c5742e138", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/69070ac85fcf930b02e2c75bc161a75c5742e138/comments", "author": {"login": "lilyball", "id": 714, "node_id": "MDQ6VXNlcjcxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/714?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lilyball", "html_url": "https://github.com/lilyball", "followers_url": "https://api.github.com/users/lilyball/followers", "following_url": "https://api.github.com/users/lilyball/following{/other_user}", "gists_url": "https://api.github.com/users/lilyball/gists{/gist_id}", "starred_url": "https://api.github.com/users/lilyball/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lilyball/subscriptions", "organizations_url": "https://api.github.com/users/lilyball/orgs", "repos_url": "https://api.github.com/users/lilyball/repos", "events_url": "https://api.github.com/users/lilyball/events{/privacy}", "received_events_url": "https://api.github.com/users/lilyball/received_events", "type": "User", "site_admin": false}, "committer": {"login": "lilyball", "id": 714, "node_id": "MDQ6VXNlcjcxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/714?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lilyball", "html_url": "https://github.com/lilyball", "followers_url": "https://api.github.com/users/lilyball/followers", "following_url": "https://api.github.com/users/lilyball/following{/other_user}", "gists_url": "https://api.github.com/users/lilyball/gists{/gist_id}", "starred_url": "https://api.github.com/users/lilyball/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lilyball/subscriptions", "organizations_url": "https://api.github.com/users/lilyball/orgs", "repos_url": "https://api.github.com/users/lilyball/repos", "events_url": "https://api.github.com/users/lilyball/events{/privacy}", "received_events_url": "https://api.github.com/users/lilyball/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "759517c180857e1b494486d810c882755a1e2e26", "url": "https://api.github.com/repos/rust-lang/rust/commits/759517c180857e1b494486d810c882755a1e2e26", "html_url": "https://github.com/rust-lang/rust/commit/759517c180857e1b494486d810c882755a1e2e26"}], "stats": {"total": 41, "additions": 19, "deletions": 22}, "files": [{"sha": "d3e250be9a3234e28014ec6e06f791e2891fc998", "filename": "src/libstd/io/fs.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/69070ac85fcf930b02e2c75bc161a75c5742e138/src%2Flibstd%2Fio%2Ffs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/69070ac85fcf930b02e2c75bc161a75c5742e138/src%2Flibstd%2Fio%2Ffs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fio%2Ffs.rs?ref=69070ac85fcf930b02e2c75bc161a75c5742e138", "patch": "@@ -859,7 +859,7 @@ mod test {\n     })\n \n     iotest!(fn file_test_io_seek_shakedown() {\n-        use std::str;          // 01234567890123\n+        use str;          // 01234567890123\n         let initial_msg =   \"qwer-asdf-zxcv\";\n         let chunk_one: &str = \"qwer\";\n         let chunk_two: &str = \"asdf\";\n@@ -947,7 +947,7 @@ mod test {\n     })\n \n     iotest!(fn file_test_directoryinfo_readdir() {\n-        use std::str;\n+        use str;\n         let tmpdir = tmpdir();\n         let dir = &tmpdir.join(\"di_readdir\");\n         check!(mkdir(dir, io::UserRWX));"}, {"sha": "7eb495a6f68dc6f741a48dc03a2b5c7bf8e50da4", "filename": "src/libstd/io/process.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/69070ac85fcf930b02e2c75bc161a75c5742e138/src%2Flibstd%2Fio%2Fprocess.rs", "raw_url": "https://github.com/rust-lang/rust/raw/69070ac85fcf930b02e2c75bc161a75c5742e138/src%2Flibstd%2Fio%2Fprocess.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fio%2Fprocess.rs?ref=69070ac85fcf930b02e2c75bc161a75c5742e138", "patch": "@@ -14,7 +14,7 @@\n \n use prelude::*;\n \n-use std::str;\n+use str;\n use fmt;\n use io::IoResult;\n use io;"}, {"sha": "1d2758c62a00ed3e7d8a4088dc64dae63b89fb98", "filename": "src/libstd/lib.rs", "status": "modified", "additions": 11, "deletions": 14, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/69070ac85fcf930b02e2c75bc161a75c5742e138/src%2Flibstd%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/69070ac85fcf930b02e2c75bc161a75c5742e138/src%2Flibstd%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Flib.rs?ref=69070ac85fcf930b02e2c75bc161a75c5742e138", "patch": "@@ -266,24 +266,21 @@ pub mod rt;\n // can be resolved within libstd.\n #[doc(hidden)]\n mod std {\n+    // mods used for deriving\n     pub use clone;\n     pub use cmp;\n-    pub use comm;\n-    pub use fmt;\n     pub use hash;\n-    pub use io;\n-    pub use kinds;\n-    pub use local_data;\n-    pub use option;\n-    pub use os;\n-    pub use rt;\n-    pub use str;\n-    pub use to_str;\n-    pub use ty;\n-    pub use unstable;\n-    pub use vec;\n \n+    pub use comm; // used for select!()\n+    pub use fmt; // used for any formatting strings\n+    pub use io; // used for println!()\n+    pub use local_data; // used for local_data_key!()\n+    pub use option; // used for bitflags!()\n+    pub use rt; // used for fail!()\n+    pub use vec; // used for vec![]\n+\n+    // The test runner calls ::std::os::args() but really wants realstd\n+    #[cfg(test)] pub use os = realstd::os;\n     // The test runner requires std::slice::Vector, so re-export std::slice just for it.\n     #[cfg(test)] pub use slice;\n-    #[cfg(test)] pub use string;\n }"}, {"sha": "415cc69f32108c6ceb0d003ade6e0673118b04fa", "filename": "src/libstd/os.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/69070ac85fcf930b02e2c75bc161a75c5742e138/src%2Flibstd%2Fos.rs", "raw_url": "https://github.com/rust-lang/rust/raw/69070ac85fcf930b02e2c75bc161a75c5742e138/src%2Flibstd%2Fos.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fos.rs?ref=69070ac85fcf930b02e2c75bc161a75c5742e138", "patch": "@@ -1328,7 +1328,7 @@ impl Drop for MemoryMap {\n \n #[cfg(target_os = \"linux\")]\n pub mod consts {\n-    pub use std::os::arch_consts::ARCH;\n+    pub use os::arch_consts::ARCH;\n \n     pub static FAMILY: &'static str = \"unix\";\n \n@@ -1359,7 +1359,7 @@ pub mod consts {\n \n #[cfg(target_os = \"macos\")]\n pub mod consts {\n-    pub use std::os::arch_consts::ARCH;\n+    pub use os::arch_consts::ARCH;\n \n     pub static FAMILY: &'static str = \"unix\";\n \n@@ -1390,7 +1390,7 @@ pub mod consts {\n \n #[cfg(target_os = \"freebsd\")]\n pub mod consts {\n-    pub use std::os::arch_consts::ARCH;\n+    pub use os::arch_consts::ARCH;\n \n     pub static FAMILY: &'static str = \"unix\";\n \n@@ -1421,7 +1421,7 @@ pub mod consts {\n \n #[cfg(target_os = \"android\")]\n pub mod consts {\n-    pub use std::os::arch_consts::ARCH;\n+    pub use os::arch_consts::ARCH;\n \n     pub static FAMILY: &'static str = \"unix\";\n \n@@ -1452,7 +1452,7 @@ pub mod consts {\n \n #[cfg(target_os = \"win32\")]\n pub mod consts {\n-    pub use std::os::arch_consts::ARCH;\n+    pub use os::arch_consts::ARCH;\n \n     pub static FAMILY: &'static str = \"windows\";\n "}]}