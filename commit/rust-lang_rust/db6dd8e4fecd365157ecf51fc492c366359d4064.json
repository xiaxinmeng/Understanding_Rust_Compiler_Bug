{"sha": "db6dd8e4fecd365157ecf51fc492c366359d4064", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRiNmRkOGU0ZmVjZDM2NTE1N2VjZjUxZmM0OTJjMzY2MzU5ZDQwNjQ=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2016-03-13T10:40:14Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2016-03-13T10:40:14Z"}, "message": "Auto merge of #32182 - bluss:string-from-is-str-owned, r=alexcrichton\n\nCall str::to_owned in String::from and uninline it\n\nCall str::to_owned in String::from and uninline it\n\nThese methods were already effectively equal, but now one calls\nthe other, and neither is marked inline.\nString::from does not need to be inlined, it can be without it just like\nstr::to_owned and String::clone are.\n\nFixes #32163", "tree": {"sha": "9333e8783f5e5f1a7b04700a431ee39175f7d4cd", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9333e8783f5e5f1a7b04700a431ee39175f7d4cd"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/db6dd8e4fecd365157ecf51fc492c366359d4064", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/db6dd8e4fecd365157ecf51fc492c366359d4064", "html_url": "https://github.com/rust-lang/rust/commit/db6dd8e4fecd365157ecf51fc492c366359d4064", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/db6dd8e4fecd365157ecf51fc492c366359d4064/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "06074ac004701bff42c625247c4764b2ae6fca6c", "url": "https://api.github.com/repos/rust-lang/rust/commits/06074ac004701bff42c625247c4764b2ae6fca6c", "html_url": "https://github.com/rust-lang/rust/commit/06074ac004701bff42c625247c4764b2ae6fca6c"}, {"sha": "ec39a76a3e8a96563845eca4eb77f3ba2a2090a9", "url": "https://api.github.com/repos/rust-lang/rust/commits/ec39a76a3e8a96563845eca4eb77f3ba2a2090a9", "html_url": "https://github.com/rust-lang/rust/commit/ec39a76a3e8a96563845eca4eb77f3ba2a2090a9"}], "stats": {"total": 16, "additions": 2, "deletions": 14}, "files": [{"sha": "98225dd3ddaf34e6ea524aff2f79bd7190a7f033", "filename": "src/libcollections/string.rs", "status": "modified", "additions": 2, "deletions": 14, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/db6dd8e4fecd365157ecf51fc492c366359d4064/src%2Flibcollections%2Fstring.rs", "raw_url": "https://github.com/rust-lang/rust/raw/db6dd8e4fecd365157ecf51fc492c366359d4064/src%2Flibcollections%2Fstring.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcollections%2Fstring.rs?ref=db6dd8e4fecd365157ecf51fc492c366359d4064", "patch": "@@ -66,7 +66,7 @@ use core::str::pattern::Pattern;\n use rustc_unicode::char::{decode_utf16, REPLACEMENT_CHARACTER};\n use rustc_unicode::str as unicode_str;\n \n-use borrow::Cow;\n+use borrow::{Cow, ToOwned};\n use range::RangeArgument;\n use str::{self, FromStr, Utf8Error, Chars};\n use vec::Vec;\n@@ -1797,20 +1797,8 @@ impl AsRef<[u8]> for String {\n \n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n impl<'a> From<&'a str> for String {\n-    #[cfg(not(test))]\n-    #[inline]\n     fn from(s: &'a str) -> String {\n-        String { vec: <[_]>::to_vec(s.as_bytes()) }\n-    }\n-\n-    // HACK(japaric): with cfg(test) the inherent `[T]::to_vec` method, which is\n-    // required for this method definition, is not available. Since we don't\n-    // require this method for testing purposes, I'll just stub it\n-    // NB see the slice::hack module in slice.rs for more information\n-    #[inline]\n-    #[cfg(test)]\n-    fn from(_: &str) -> String {\n-        panic!(\"not available with cfg(test)\");\n+        s.to_owned()\n     }\n }\n "}]}