{"sha": "e51830b90afd339332892a8f20db1957d43bf086", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU1MTgzMGI5MGFmZDMzOTMzMjg5MmE4ZjIwZGIxOTU3ZDQzYmYwODY=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-05-27T18:33:43Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-05-27T18:33:43Z"}, "message": "Auto merge of #85757 - GuillaumeGomez:rollup-k8hfhp8, r=GuillaumeGomez\n\nRollup of 3 pull requests\n\nSuccessful merges:\n\n - #85722 (Fix trait methods' toggle)\n - #85730 (Mention workaround for floats in Iterator::{min, max})\n - #85738 (Rename opensbd to openbsd)\n\nFailed merges:\n\nr? `@ghost`\n`@rustbot` modify labels: rollup", "tree": {"sha": "e20669f7df0410f4179f3640b2443dbce7f75633", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e20669f7df0410f4179f3640b2443dbce7f75633"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e51830b90afd339332892a8f20db1957d43bf086", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e51830b90afd339332892a8f20db1957d43bf086", "html_url": "https://github.com/rust-lang/rust/commit/e51830b90afd339332892a8f20db1957d43bf086", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e51830b90afd339332892a8f20db1957d43bf086/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d854c3c0e9d256b923fbfc8b5193433a6edcd08f", "url": "https://api.github.com/repos/rust-lang/rust/commits/d854c3c0e9d256b923fbfc8b5193433a6edcd08f", "html_url": "https://github.com/rust-lang/rust/commit/d854c3c0e9d256b923fbfc8b5193433a6edcd08f"}, {"sha": "48706edc56eb842cf9e9de629a2c30a4472e9b5e", "url": "https://api.github.com/repos/rust-lang/rust/commits/48706edc56eb842cf9e9de629a2c30a4472e9b5e", "html_url": "https://github.com/rust-lang/rust/commit/48706edc56eb842cf9e9de629a2c30a4472e9b5e"}], "stats": {"total": 57, "additions": 47, "deletions": 10}, "files": [{"sha": "96b924f6e2ad45b232a3d5ffa3bcec3bcbda29c0", "filename": "library/core/src/iter/traits/iterator.rs", "status": "modified", "additions": 26, "deletions": 2, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/e51830b90afd339332892a8f20db1957d43bf086/library%2Fcore%2Fsrc%2Fiter%2Ftraits%2Fiterator.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e51830b90afd339332892a8f20db1957d43bf086/library%2Fcore%2Fsrc%2Fiter%2Ftraits%2Fiterator.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fiter%2Ftraits%2Fiterator.rs?ref=e51830b90afd339332892a8f20db1957d43bf086", "patch": "@@ -2568,6 +2568,18 @@ pub trait Iterator {\n     /// If several elements are equally maximum, the last element is\n     /// returned. If the iterator is empty, [`None`] is returned.\n     ///\n+    /// Note that [`f32`]/[`f64`] doesn't implement [`Ord`] due to NaN being\n+    /// incomparable. You can work around this by using [`Iterator::reduce`]:\n+    /// ```\n+    /// assert_eq!(\n+    ///     vec![2.4, f32::NAN, 1.3]\n+    ///         .into_iter()\n+    ///         .reduce(f32::max)\n+    ///         .unwrap(),\n+    ///     2.4\n+    /// );\n+    /// ```\n+    ///\n     /// # Examples\n     ///\n     /// Basic usage:\n@@ -2591,8 +2603,20 @@ pub trait Iterator {\n \n     /// Returns the minimum element of an iterator.\n     ///\n-    /// If several elements are equally minimum, the first element is\n-    /// returned. If the iterator is empty, [`None`] is returned.\n+    /// If several elements are equally minimum, the first element is returned.\n+    /// If the iterator is empty, [`None`] is returned.\n+    ///\n+    /// Note that [`f32`]/[`f64`] doesn't implement [`Ord`] due to NaN being\n+    /// incomparable. You can work around this by using [`Iterator::reduce`]:\n+    /// ```\n+    /// assert_eq!(\n+    ///     vec![2.4, f32::NAN, 1.3]\n+    ///         .into_iter()\n+    ///         .reduce(f32::min)\n+    ///         .unwrap(),\n+    ///     1.3\n+    /// );\n+    /// ```\n     ///\n     /// # Examples\n     ///"}, {"sha": "d5a15964c089d267c440016cd5b3b232546e2556", "filename": "library/std/src/sys/unix/net.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/e51830b90afd339332892a8f20db1957d43bf086/library%2Fstd%2Fsrc%2Fsys%2Funix%2Fnet.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e51830b90afd339332892a8f20db1957d43bf086/library%2Fstd%2Fsrc%2Fsys%2Funix%2Fnet.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys%2Funix%2Fnet.rs?ref=e51830b90afd339332892a8f20db1957d43bf086", "patch": "@@ -62,7 +62,7 @@ impl Socket {\n                     target_os = \"illumos\",\n                     target_os = \"linux\",\n                     target_os = \"netbsd\",\n-                    target_os = \"opensbd\",\n+                    target_os = \"openbsd\",\n                 ))] {\n                     // On platforms that support it we pass the SOCK_CLOEXEC\n                     // flag to atomically create the socket and set it as\n@@ -99,7 +99,7 @@ impl Socket {\n                     target_os = \"illumos\",\n                     target_os = \"linux\",\n                     target_os = \"netbsd\",\n-                    target_os = \"opensbd\",\n+                    target_os = \"openbsd\",\n                 ))] {\n                     // Like above, set cloexec atomically\n                     cvt(libc::socketpair(fam, ty | libc::SOCK_CLOEXEC, 0, fds.as_mut_ptr()))?;\n@@ -204,7 +204,7 @@ impl Socket {\n                 target_os = \"illumos\",\n                 target_os = \"linux\",\n                 target_os = \"netbsd\",\n-                target_os = \"opensbd\",\n+                target_os = \"openbsd\",\n             ))] {\n                 let fd = cvt_r(|| unsafe {\n                     libc::accept4(self.0.raw(), storage, len, libc::SOCK_CLOEXEC)"}, {"sha": "e06168c708c18ad4ce2bce4328ccda34ee3270ac", "filename": "src/librustdoc/html/render/print_item.rs", "status": "modified", "additions": 13, "deletions": 4, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/e51830b90afd339332892a8f20db1957d43bf086/src%2Flibrustdoc%2Fhtml%2Frender%2Fprint_item.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e51830b90afd339332892a8f20db1957d43bf086/src%2Flibrustdoc%2Fhtml%2Frender%2Fprint_item.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender%2Fprint_item.rs?ref=e51830b90afd339332892a8f20db1957d43bf086", "patch": "@@ -578,14 +578,23 @@ fn item_trait(w: &mut Buffer, cx: &Context<'_>, it: &clean::Item, t: &clean::Tra\n         info!(\"Documenting {} on {:?}\", name, t.name);\n         let item_type = m.type_();\n         let id = cx.derive_id(format!(\"{}.{}\", item_type, name));\n-        write!(w, \"<details class=\\\"rustdoc-toggle\\\" open><summary>\");\n-        write!(w, \"<h3 id=\\\"{id}\\\" class=\\\"method\\\"><code>\", id = id,);\n+        let mut content = Buffer::empty_from(w);\n+        document(&mut content, cx, m, Some(t));\n+        let toggled = !content.is_empty();\n+        if toggled {\n+            write!(w, \"<details class=\\\"rustdoc-toggle\\\" open><summary>\");\n+        }\n+        write!(w, \"<h3 id=\\\"{id}\\\" class=\\\"method\\\"><code>\", id = id);\n         render_assoc_item(w, m, AssocItemLink::Anchor(Some(&id)), ItemType::Impl, cx);\n         w.write_str(\"</code>\");\n         render_stability_since(w, m, t, cx.tcx());\n         write_srclink(cx, m, w);\n-        w.write_str(\"</h3></summary>\");\n-        document(w, cx, m, Some(t));\n+        w.write_str(\"</h3>\");\n+        if toggled {\n+            write!(w, \"</summary>\");\n+            w.push_buffer(content);\n+            write!(w, \"</details>\");\n+        }\n     }\n \n     if !types.is_empty() {"}, {"sha": "7fcac78556b720298406a520af4547600e7393eb", "filename": "src/test/rustdoc/toggle-trait-fn.rs", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/e51830b90afd339332892a8f20db1957d43bf086/src%2Ftest%2Frustdoc%2Ftoggle-trait-fn.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e51830b90afd339332892a8f20db1957d43bf086/src%2Ftest%2Frustdoc%2Ftoggle-trait-fn.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Ftoggle-trait-fn.rs?ref=e51830b90afd339332892a8f20db1957d43bf086", "patch": "@@ -1,7 +1,11 @@\n #![crate_name = \"foo\"]\n \n // @has foo/trait.Foo.html\n-// @has - '//details[@class=\"rustdoc-toggle\"]//code' 'bar'\n+// @!has - '//details[@class=\"rustdoc-toggle\"]//code' 'bar'\n+// @has - '//code' 'bar'\n+// @has - '//details[@class=\"rustdoc-toggle\"]//code' 'foo'\n pub trait Foo {\n     fn bar() -> ();\n+    /// hello\n+    fn foo();\n }"}]}