{"sha": "f72ef31ede98d0605195b2a6baba38f71d0177a0", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY3MmVmMzFlZGU5OGQwNjA1MTk1YjJhNmJhYmEzOGY3MWQwMTc3YTA=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2012-11-07T21:48:09Z"}, "committer": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2012-11-07T21:48:09Z"}, "message": "rustc: Long lines", "tree": {"sha": "936e722b5af8c4c7ed4cd07eed9f9327ab7de83b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/936e722b5af8c4c7ed4cd07eed9f9327ab7de83b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f72ef31ede98d0605195b2a6baba38f71d0177a0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f72ef31ede98d0605195b2a6baba38f71d0177a0", "html_url": "https://github.com/rust-lang/rust/commit/f72ef31ede98d0605195b2a6baba38f71d0177a0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f72ef31ede98d0605195b2a6baba38f71d0177a0/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "29040955709a145842f93fe11d4cd803415020be", "url": "https://api.github.com/repos/rust-lang/rust/commits/29040955709a145842f93fe11d4cd803415020be", "html_url": "https://github.com/rust-lang/rust/commit/29040955709a145842f93fe11d4cd803415020be"}], "stats": {"total": 3, "additions": 2, "deletions": 1}, "files": [{"sha": "c1bffef3f31e351f23d5150d969399c7d49d2f47", "filename": "src/rustc/middle/typeck/coherence.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/f72ef31ede98d0605195b2a6baba38f71d0177a0/src%2Frustc%2Fmiddle%2Ftypeck%2Fcoherence.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f72ef31ede98d0605195b2a6baba38f71d0177a0/src%2Frustc%2Fmiddle%2Ftypeck%2Fcoherence.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustc%2Fmiddle%2Ftypeck%2Fcoherence.rs?ref=f72ef31ede98d0605195b2a6baba38f71d0177a0", "patch": "@@ -945,7 +945,8 @@ impl CoherenceChecker {\n             let self_type = self.get_self_type_for_implementation(*impl_info);\n             match ty::get(self_type.ty).sty {\n                 ty::ty_class(type_def_id, _) => {\n-                    tcx.destructor_for_type.insert(type_def_id, method_def_id);\n+                    tcx.destructor_for_type.insert(type_def_id,\n+                                                   method_def_id);\n                     tcx.destructors.insert(method_def_id, ());\n                 }\n                 _ => {"}]}