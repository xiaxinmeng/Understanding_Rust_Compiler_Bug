{"sha": "6d15a149640e5647ce232690d54b540346fa1641", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZkMTVhMTQ5NjQwZTU2NDdjZTIzMjY5MGQ1NGI1NDAzNDZmYTE2NDE=", "commit": {"author": {"name": "flip1995", "email": "hello@philkrones.com", "date": "2020-02-17T17:12:01Z"}, "committer": {"name": "flip1995", "email": "hello@philkrones.com", "date": "2020-05-31T16:50:33Z"}, "message": "Update test files", "tree": {"sha": "85ddbd48997201eda5f569be0e50ce2d76a7d411", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/85ddbd48997201eda5f569be0e50ce2d76a7d411"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6d15a149640e5647ce232690d54b540346fa1641", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEZxoS6lESXlRGMHWcaTCGhp1QZjcFAl7T4FkACgkQaTCGhp1Q\nZjdzWxAApXbaqevsuzAeJVSdeqgja67m/e88JUK5Q+rZY2WxHqvGTeB4hvPDaW45\nv92k0+vl4MXjYxB7IXToBTmq+IVWNxz69Br+YsiH/gJsryFiEvl680IjTlVVkx0b\nRQHdbEcJOC8qBd+I3SEAZ/N/BNWIReETxi2HkmO9rNl/rMt01dLf21mVUM+Ok/KR\nQRa5OzSFQ+22P69cjMkecWpQD71ef9z7E9znoLtJp0IBMdAtxvkAb+E9sJgbLfYe\nAnLsc/+sa4LBKhnVC8tiIOr/RBfliJIDZgLxaemsgbZi3UFqqsz7VWRBicL/FvRn\nnN05ZQrmdE3Ofe6y7N3CHyhRciwOY4/rBXsoaBYMygXoAl6Xd3/54+RqjOES8yjd\nsn1q47AjwWvltfP9qeS7VlzqE/tZwS722jAVIKGJWPHjaOK3/7U3TPBhwBfvEEk2\nA/kz30wp5BUJiqU6moObc4eQcPsbB/VDJHW0fto8dShToQiidyb+7vJ8F+eCxH0H\nBJqP443sckSc2l4ItZgUkKebHPucYrRDR2MCaBm0qb2wUVuhKA8CKxj/p0L5sCQn\ni8xivTdJ8dhWmmr0tny6BLF7W+7ZeMefY5k9TWhVmgi6dc6yWQEvEC5T+exLASAa\niLxba6lNRsCd7aHBuyqx4xVrOH/xgr5CxQEoDLkb3Y8mqz1rwuU=\n=fzs8\n-----END PGP SIGNATURE-----", "payload": "tree 85ddbd48997201eda5f569be0e50ce2d76a7d411\nparent 4c9cefa12232aa0224b1680f51654fe10f5cf3b7\nauthor flip1995 <hello@philkrones.com> 1581959521 +0100\ncommitter flip1995 <hello@philkrones.com> 1590943833 +0200\n\nUpdate test files\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6d15a149640e5647ce232690d54b540346fa1641", "html_url": "https://github.com/rust-lang/rust/commit/6d15a149640e5647ce232690d54b540346fa1641", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6d15a149640e5647ce232690d54b540346fa1641/comments", "author": {"login": "flip1995", "id": 9744647, "node_id": "MDQ6VXNlcjk3NDQ2NDc=", "avatar_url": "https://avatars.githubusercontent.com/u/9744647?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flip1995", "html_url": "https://github.com/flip1995", "followers_url": "https://api.github.com/users/flip1995/followers", "following_url": "https://api.github.com/users/flip1995/following{/other_user}", "gists_url": "https://api.github.com/users/flip1995/gists{/gist_id}", "starred_url": "https://api.github.com/users/flip1995/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flip1995/subscriptions", "organizations_url": "https://api.github.com/users/flip1995/orgs", "repos_url": "https://api.github.com/users/flip1995/repos", "events_url": "https://api.github.com/users/flip1995/events{/privacy}", "received_events_url": "https://api.github.com/users/flip1995/received_events", "type": "User", "site_admin": false}, "committer": {"login": "flip1995", "id": 9744647, "node_id": "MDQ6VXNlcjk3NDQ2NDc=", "avatar_url": "https://avatars.githubusercontent.com/u/9744647?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flip1995", "html_url": "https://github.com/flip1995", "followers_url": "https://api.github.com/users/flip1995/followers", "following_url": "https://api.github.com/users/flip1995/following{/other_user}", "gists_url": "https://api.github.com/users/flip1995/gists{/gist_id}", "starred_url": "https://api.github.com/users/flip1995/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flip1995/subscriptions", "organizations_url": "https://api.github.com/users/flip1995/orgs", "repos_url": "https://api.github.com/users/flip1995/repos", "events_url": "https://api.github.com/users/flip1995/events{/privacy}", "received_events_url": "https://api.github.com/users/flip1995/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4c9cefa12232aa0224b1680f51654fe10f5cf3b7", "url": "https://api.github.com/repos/rust-lang/rust/commits/4c9cefa12232aa0224b1680f51654fe10f5cf3b7", "html_url": "https://github.com/rust-lang/rust/commit/4c9cefa12232aa0224b1680f51654fe10f5cf3b7"}], "stats": {"total": 246, "additions": 125, "deletions": 121}, "files": [{"sha": "67c6bdf8873b628a961d529c67a89f1de3b17397", "filename": "tests/ui/unit_arg.fixed", "status": "removed", "additions": 0, "deletions": 79, "changes": 79, "blob_url": "https://github.com/rust-lang/rust/blob/4c9cefa12232aa0224b1680f51654fe10f5cf3b7/tests%2Fui%2Funit_arg.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/4c9cefa12232aa0224b1680f51654fe10f5cf3b7/tests%2Fui%2Funit_arg.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Funit_arg.fixed?ref=4c9cefa12232aa0224b1680f51654fe10f5cf3b7", "patch": "@@ -1,79 +0,0 @@\n-// run-rustfix\n-#![warn(clippy::unit_arg)]\n-#![allow(clippy::no_effect, unused_must_use, unused_variables)]\n-\n-use std::fmt::Debug;\n-\n-fn foo<T: Debug>(t: T) {\n-    println!(\"{:?}\", t);\n-}\n-\n-fn foo3<T1: Debug, T2: Debug, T3: Debug>(t1: T1, t2: T2, t3: T3) {\n-    println!(\"{:?}, {:?}, {:?}\", t1, t2, t3);\n-}\n-\n-struct Bar;\n-\n-impl Bar {\n-    fn bar<T: Debug>(&self, t: T) {\n-        println!(\"{:?}\", t);\n-    }\n-}\n-\n-fn bad() {\n-    {}; foo(());\n-    {\n-        1;\n-    }; foo(());\n-    foo(1); foo(());\n-    {\n-        foo(1);\n-        foo(2);\n-    }; foo(());\n-    {}; foo3((), 2, 2);\n-    let b = Bar;\n-    {\n-        1;\n-    }; b.bar(());\n-    foo(0); foo(1); taking_multiple_units((), ());\n-}\n-\n-fn ok() {\n-    foo(());\n-    foo(1);\n-    foo({ 1 });\n-    foo3(\"a\", 3, vec![3]);\n-    let b = Bar;\n-    b.bar({ 1 });\n-    b.bar(());\n-    question_mark();\n-}\n-\n-fn question_mark() -> Result<(), ()> {\n-    Ok(Ok(())?)?;\n-    Ok(Ok(()))??;\n-    Ok(())\n-}\n-\n-#[allow(dead_code)]\n-mod issue_2945 {\n-    fn unit_fn() -> Result<(), i32> {\n-        Ok(())\n-    }\n-\n-    fn fallible() -> Result<(), i32> {\n-        Ok(unit_fn()?)\n-    }\n-}\n-\n-#[allow(dead_code)]\n-fn returning_expr() -> Option<()> {\n-    foo(1); Some(())\n-}\n-\n-fn taking_multiple_units(a: (), b: ()) {}\n-\n-fn main() {\n-    bad();\n-    ok();\n-}"}, {"sha": "7d1b99fedc965dc7af9bfd3ef0b6d2aaa23d89c9", "filename": "tests/ui/unit_arg.rs", "status": "modified", "additions": 14, "deletions": 1, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/6d15a149640e5647ce232690d54b540346fa1641/tests%2Fui%2Funit_arg.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6d15a149640e5647ce232690d54b540346fa1641/tests%2Fui%2Funit_arg.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Funit_arg.rs?ref=6d15a149640e5647ce232690d54b540346fa1641", "patch": "@@ -1,4 +1,3 @@\n-// run-rustfix\n #![warn(clippy::unit_arg)]\n #![allow(clippy::no_effect, unused_must_use, unused_variables)]\n \n@@ -36,6 +35,20 @@ fn bad() {\n         1;\n     });\n     taking_multiple_units(foo(0), foo(1));\n+    taking_multiple_units(foo(0), {\n+        foo(1);\n+        foo(2);\n+    });\n+    taking_multiple_units(\n+        {\n+            foo(0);\n+            foo(1);\n+        },\n+        {\n+            foo(2);\n+            foo(3);\n+        },\n+    );\n }\n \n fn ok() {"}, {"sha": "145b3c62b062733711002e06e8310f86ded6d2e7", "filename": "tests/ui/unit_arg.stderr", "status": "modified", "additions": 111, "deletions": 41, "changes": 152, "blob_url": "https://github.com/rust-lang/rust/blob/6d15a149640e5647ce232690d54b540346fa1641/tests%2Fui%2Funit_arg.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6d15a149640e5647ce232690d54b540346fa1641/tests%2Fui%2Funit_arg.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Funit_arg.stderr?ref=6d15a149640e5647ce232690d54b540346fa1641", "patch": "@@ -1,141 +1,211 @@\n error: passing a unit value to a function\n-  --> $DIR/unit_arg.rs:24:5\n+  --> $DIR/unit_arg.rs:23:5\n    |\n LL |     foo({});\n    |     ^^^^^^^\n    |\n    = note: `-D clippy::unit-arg` implied by `-D warnings`\n-help: move the expressions in front of the call...\n+help: move the expression in front of the call...\n    |\n-LL |     {}; foo({});\n-   |     ^^^\n-help: ...and use unit literals instead\n+LL |     {};\n+   |\n+help: ...and use a unit literal instead\n    |\n LL |     foo(());\n    |         ^^\n \n error: passing a unit value to a function\n-  --> $DIR/unit_arg.rs:25:5\n+  --> $DIR/unit_arg.rs:24:5\n    |\n LL | /     foo({\n LL | |         1;\n LL | |     });\n    | |______^\n    |\n-help: move the expressions in front of the call...\n+help: remove the semicolon from the last statement in the block\n+   |\n+LL |         1\n+   |\n+help: or move the expression in front of the call...\n    |\n LL |     {\n LL |         1;\n-LL |     }; foo({\n+LL |     };\n    |\n-help: ...and use unit literals instead\n+help: ...and use a unit literal instead\n    |\n LL |     foo(());\n    |         ^^\n \n error: passing a unit value to a function\n-  --> $DIR/unit_arg.rs:28:5\n+  --> $DIR/unit_arg.rs:27:5\n    |\n LL |     foo(foo(1));\n    |     ^^^^^^^^^^^\n    |\n-help: move the expressions in front of the call...\n+help: move the expression in front of the call...\n    |\n-LL |     foo(1); foo(foo(1));\n-   |     ^^^^^^^\n-help: ...and use unit literals instead\n+LL |     foo(1);\n+   |\n+help: ...and use a unit literal instead\n    |\n LL |     foo(());\n    |         ^^\n \n error: passing a unit value to a function\n-  --> $DIR/unit_arg.rs:29:5\n+  --> $DIR/unit_arg.rs:28:5\n    |\n LL | /     foo({\n LL | |         foo(1);\n LL | |         foo(2);\n LL | |     });\n    | |______^\n    |\n-help: move the expressions in front of the call...\n+help: remove the semicolon from the last statement in the block\n+   |\n+LL |         foo(2)\n+   |\n+help: or move the expression in front of the call...\n    |\n LL |     {\n LL |         foo(1);\n LL |         foo(2);\n-LL |     }; foo({\n+LL |     };\n    |\n-help: ...and use unit literals instead\n+help: ...and use a unit literal instead\n    |\n LL |     foo(());\n    |         ^^\n \n error: passing a unit value to a function\n-  --> $DIR/unit_arg.rs:33:5\n+  --> $DIR/unit_arg.rs:32:5\n    |\n LL |     foo3({}, 2, 2);\n    |     ^^^^^^^^^^^^^^\n    |\n-help: move the expressions in front of the call...\n+help: move the expression in front of the call...\n    |\n-LL |     {}; foo3({}, 2, 2);\n-   |     ^^^\n-help: ...and use unit literals instead\n+LL |     {};\n+   |\n+help: ...and use a unit literal instead\n    |\n LL |     foo3((), 2, 2);\n    |          ^^\n \n error: passing a unit value to a function\n-  --> $DIR/unit_arg.rs:35:5\n+  --> $DIR/unit_arg.rs:34:5\n    |\n LL | /     b.bar({\n LL | |         1;\n LL | |     });\n    | |______^\n    |\n-help: move the expressions in front of the call...\n+help: remove the semicolon from the last statement in the block\n+   |\n+LL |         1\n+   |\n+help: or move the expression in front of the call...\n    |\n LL |     {\n LL |         1;\n-LL |     }; b.bar({\n+LL |     };\n    |\n-help: ...and use unit literals instead\n+help: ...and use a unit literal instead\n    |\n LL |     b.bar(());\n    |           ^^\n \n-error: passing a unit value to a function\n-  --> $DIR/unit_arg.rs:38:5\n+error: passing unit values to a function\n+  --> $DIR/unit_arg.rs:37:5\n    |\n LL |     taking_multiple_units(foo(0), foo(1));\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n help: move the expressions in front of the call...\n    |\n-LL |     foo(0); foo(1); taking_multiple_units(foo(0), foo(1));\n-   |     ^^^^^^^^^^^^^^^\n+LL |     foo(0);\n+LL |     foo(1);\n+   |\n help: ...and use unit literals instead\n    |\n-LL |     taking_multiple_units((), foo(1));\n-   |                           ^^\n+LL |     taking_multiple_units((), ());\n+   |                           ^^  ^^\n+\n+error: passing unit values to a function\n+  --> $DIR/unit_arg.rs:38:5\n+   |\n+LL | /     taking_multiple_units(foo(0), {\n+LL | |         foo(1);\n+LL | |         foo(2);\n+LL | |     });\n+   | |______^\n+   |\n+help: remove the semicolon from the last statement in the block\n+   |\n+LL |         foo(2)\n+   |\n+help: or move the expressions in front of the call...\n+   |\n+LL |     foo(0);\n+LL |     {\n+LL |         foo(1);\n+LL |         foo(2);\n+LL |     };\n+   |\n help: ...and use unit literals instead\n    |\n-LL |     taking_multiple_units(foo(0), ());\n-   |                                   ^^\n+LL |     taking_multiple_units((), ());\n+   |                           ^^  ^^\n+\n+error: passing unit values to a function\n+  --> $DIR/unit_arg.rs:42:5\n+   |\n+LL | /     taking_multiple_units(\n+LL | |         {\n+LL | |             foo(0);\n+LL | |             foo(1);\n+...  |\n+LL | |         },\n+LL | |     );\n+   | |_____^\n+   |\n+help: remove the semicolon from the last statement in the block\n+   |\n+LL |             foo(1)\n+   |\n+help: remove the semicolon from the last statement in the block\n+   |\n+LL |             foo(3)\n+   |\n+help: or move the expressions in front of the call...\n+   |\n+LL |     {\n+LL |         foo(0);\n+LL |         foo(1);\n+LL |     };\n+LL |     {\n+LL |         foo(2);\n+ ...\n+help: ...and use unit literals instead\n+   |\n+LL |         (),\n+LL |         (),\n+   |\n \n error: passing a unit value to a function\n-  --> $DIR/unit_arg.rs:71:5\n+  --> $DIR/unit_arg.rs:84:5\n    |\n LL |     Some(foo(1))\n    |     ^^^^^^^^^^^^\n    |\n-help: move the expressions in front of the call...\n+help: move the expression in front of the call...\n    |\n-LL |     foo(1); Some(foo(1))\n-   |     ^^^^^^^\n-help: ...and use unit literals instead\n+LL |     foo(1);\n+   |\n+help: ...and use a unit literal instead\n    |\n LL |     Some(())\n    |          ^^\n \n-error: aborting due to 8 previous errors\n+error: aborting due to 10 previous errors\n "}]}