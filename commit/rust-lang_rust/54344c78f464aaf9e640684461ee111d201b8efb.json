{"sha": "54344c78f464aaf9e640684461ee111d201b8efb", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU0MzQ0Yzc4ZjQ2NGFhZjllNjQwNjg0NDYxZWUxMTFkMjAxYjhlZmI=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-04-13T20:32:44Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-04-13T20:32:44Z"}, "message": "Auto merge of #5448 - Emerentius:update_new_ret_no_self_docs, r=phansch\n\nUpdate documentation for new_ret_no_self\n\nchangelog: Update documentation for lint new_ret_no_self to reflect that the return type must only contain `Self`, not be `Self`\n\nThe lint was changed to be more lenient than the documentation implies in PR #3338 (Related issue #3313)", "tree": {"sha": "2a2fc935cdee0b55992f6ed5e0ebf93071a122e3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2a2fc935cdee0b55992f6ed5e0ebf93071a122e3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/54344c78f464aaf9e640684461ee111d201b8efb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/54344c78f464aaf9e640684461ee111d201b8efb", "html_url": "https://github.com/rust-lang/rust/commit/54344c78f464aaf9e640684461ee111d201b8efb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/54344c78f464aaf9e640684461ee111d201b8efb/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6d4cc5670353d7636862a187abebb467fe7e72f9", "url": "https://api.github.com/repos/rust-lang/rust/commits/6d4cc5670353d7636862a187abebb467fe7e72f9", "html_url": "https://github.com/rust-lang/rust/commit/6d4cc5670353d7636862a187abebb467fe7e72f9"}, {"sha": "e98c7a45d44cfed922699fbc1d61f3802d08b867", "url": "https://api.github.com/repos/rust-lang/rust/commits/e98c7a45d44cfed922699fbc1d61f3802d08b867", "html_url": "https://github.com/rust-lang/rust/commit/e98c7a45d44cfed922699fbc1d61f3802d08b867"}], "stats": {"total": 28, "additions": 25, "deletions": 3}, "files": [{"sha": "a5b74466836c43c89cef7f61e897493a44fd2360", "filename": "clippy_lints/src/methods/mod.rs", "status": "modified", "additions": 24, "deletions": 2, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/54344c78f464aaf9e640684461ee111d201b8efb/clippy_lints%2Fsrc%2Fmethods%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/54344c78f464aaf9e640684461ee111d201b8efb/clippy_lints%2Fsrc%2Fmethods%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmethods%2Fmod.rs?ref=54344c78f464aaf9e640684461ee111d201b8efb", "patch": "@@ -730,7 +730,7 @@ declare_clippy_lint! {\n }\n \n declare_clippy_lint! {\n-    /// **What it does:** Checks for `new` not returning `Self`.\n+    /// **What it does:** Checks for `new` not returning a type that contains `Self`.\n     ///\n     /// **Why is this bad?** As a convention, `new` methods are used to make a new\n     /// instance of a type.\n@@ -747,9 +747,31 @@ declare_clippy_lint! {\n     ///     }\n     /// }\n     /// ```\n+    ///\n+    /// ```rust\n+    /// # struct Foo;\n+    /// # struct FooError;\n+    /// impl Foo {\n+    ///     // Good. Return type contains `Self`\n+    ///     fn new() -> Result<Foo, FooError> {\n+    ///         # Ok(Foo)\n+    ///     }\n+    /// }\n+    /// ```\n+    ///\n+    /// ```rust\n+    /// # struct Foo;\n+    /// struct Bar(Foo);\n+    /// impl Foo {\n+    ///     // Bad. The type name must contain `Self`.\n+    ///     fn new() -> Bar {\n+    ///         # Bar(Foo)\n+    ///     }\n+    /// }\n+    /// ```\n     pub NEW_RET_NO_SELF,\n     style,\n-    \"not returning `Self` in a `new` method\"\n+    \"not returning type containing `Self` in a `new` method\"\n }\n \n declare_clippy_lint! {"}, {"sha": "935ea180ebe21d3de3827343f668397c4369bded", "filename": "src/lintlist/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/54344c78f464aaf9e640684461ee111d201b8efb/src%2Flintlist%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/54344c78f464aaf9e640684461ee111d201b8efb/src%2Flintlist%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flintlist%2Fmod.rs?ref=54344c78f464aaf9e640684461ee111d201b8efb", "patch": "@@ -1448,7 +1448,7 @@ pub static ref ALL_LINTS: Vec<Lint> = vec![\n     Lint {\n         name: \"new_ret_no_self\",\n         group: \"style\",\n-        desc: \"not returning `Self` in a `new` method\",\n+        desc: \"not returning type containing `Self` in a `new` method\",\n         deprecation: None,\n         module: \"methods\",\n     },"}]}