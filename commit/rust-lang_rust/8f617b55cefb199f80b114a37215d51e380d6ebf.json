{"sha": "8f617b55cefb199f80b114a37215d51e380d6ebf", "node_id": "C_kwDOAAsO6NoAKDhmNjE3YjU1Y2VmYjE5OWY4MGIxMTRhMzcyMTVkNTFlMzgwZDZlYmY", "commit": {"author": {"name": "Lauren\u021biu Nicola", "email": "lnicola@dend.ro", "date": "2023-02-12T09:35:44Z"}, "committer": {"name": "Lauren\u021biu Nicola", "email": "lnicola@dend.ro", "date": "2023-02-12T09:35:44Z"}, "message": "Update some old checkOnSave references", "tree": {"sha": "fc6535d1e1ba5099db7c74daef1d022de44eca25", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fc6535d1e1ba5099db7c74daef1d022de44eca25"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8f617b55cefb199f80b114a37215d51e380d6ebf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8f617b55cefb199f80b114a37215d51e380d6ebf", "html_url": "https://github.com/rust-lang/rust/commit/8f617b55cefb199f80b114a37215d51e380d6ebf", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8f617b55cefb199f80b114a37215d51e380d6ebf/comments", "author": {"login": "lnicola", "id": 308347, "node_id": "MDQ6VXNlcjMwODM0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/308347?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lnicola", "html_url": "https://github.com/lnicola", "followers_url": "https://api.github.com/users/lnicola/followers", "following_url": "https://api.github.com/users/lnicola/following{/other_user}", "gists_url": "https://api.github.com/users/lnicola/gists{/gist_id}", "starred_url": "https://api.github.com/users/lnicola/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lnicola/subscriptions", "organizations_url": "https://api.github.com/users/lnicola/orgs", "repos_url": "https://api.github.com/users/lnicola/repos", "events_url": "https://api.github.com/users/lnicola/events{/privacy}", "received_events_url": "https://api.github.com/users/lnicola/received_events", "type": "User", "site_admin": false}, "committer": {"login": "lnicola", "id": 308347, "node_id": "MDQ6VXNlcjMwODM0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/308347?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lnicola", "html_url": "https://github.com/lnicola", "followers_url": "https://api.github.com/users/lnicola/followers", "following_url": "https://api.github.com/users/lnicola/following{/other_user}", "gists_url": "https://api.github.com/users/lnicola/gists{/gist_id}", "starred_url": "https://api.github.com/users/lnicola/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lnicola/subscriptions", "organizations_url": "https://api.github.com/users/lnicola/orgs", "repos_url": "https://api.github.com/users/lnicola/repos", "events_url": "https://api.github.com/users/lnicola/events{/privacy}", "received_events_url": "https://api.github.com/users/lnicola/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cfeec8a7050095529d2fefa3f4aa029b8e8dc789", "url": "https://api.github.com/repos/rust-lang/rust/commits/cfeec8a7050095529d2fefa3f4aa029b8e8dc789", "html_url": "https://github.com/rust-lang/rust/commit/cfeec8a7050095529d2fefa3f4aa029b8e8dc789"}], "stats": {"total": 12, "additions": 8, "deletions": 4}, "files": [{"sha": "5b5f438a8054ae88cdae114481e61923326428b8", "filename": "docs/user/manual.adoc", "status": "modified", "additions": 8, "deletions": 4, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/8f617b55cefb199f80b114a37215d51e380d6ebf/docs%2Fuser%2Fmanual.adoc", "raw_url": "https://github.com/rust-lang/rust/raw/8f617b55cefb199f80b114a37215d51e380d6ebf/docs%2Fuser%2Fmanual.adoc", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/docs%2Fuser%2Fmanual.adoc?ref=8f617b55cefb199f80b114a37215d51e380d6ebf", "patch": "@@ -768,14 +768,18 @@ See https://github.com/rust-analyzer/rust-project.json-example for a small examp\n \n You can set the `RA_LOG` environment variable to `rust_analyzer=info` to inspect how rust-analyzer handles config and project loading.\n \n-Note that calls to `cargo check` are disabled when using `rust-project.json` by default, so compilation errors and warnings will no longer be sent to your LSP client. To enable these compilation errors you will need to specify explicitly what command rust-analyzer should run to perform the checks using the `checkOnSave.overrideCommand` configuration. As an example, the following configuration explicitly sets `cargo check` as the `checkOnSave` command.\n+Note that calls to `cargo check` are disabled when using `rust-project.json` by default, so compilation errors and warnings will no longer be sent to your LSP client.\n+To enable these compilation errors you will need to specify explicitly what command rust-analyzer should run to perform the checks using the `rust-analyzer.check.overrideCommand` configuration.\n+As an example, the following configuration explicitly sets `cargo check` as the `check` command.\n \n [source,json]\n ----\n-{ \"rust-analyzer.checkOnSave.overrideCommand\": [\"cargo\", \"check\", \"--message-format=json\"] }\n+{ \"rust-analyzer.check.overrideCommand\": [\"cargo\", \"check\", \"--message-format=json\"] }\n ----\n \n-The `checkOnSave.overrideCommand` requires the command specified to output json error messages for rust-analyzer to consume. The `--message-format=json` flag does this for `cargo check` so whichever command you use must also output errors in this format. See the <<Configuration>> section for more information.\n+`check.overrideCommand` requires the command specified to output json error messages for rust-analyzer to consume.\n+The `--message-format=json` flag does this for `cargo check` so whichever command you use must also output errors in this format.\n+See the <<Configuration>> section for more information.\n \n == Security\n \n@@ -952,7 +956,7 @@ Also note that a full runnable name is something like *run bin_or_example_name*,\n \n Instead of relying on the built-in `cargo check`, you can configure Code to run a command in the background and use the `$rustc-watch` problem matcher to generate inline error markers from its output.\n \n-To do this you need to create a new https://code.visualstudio.com/docs/editor/tasks[VS Code Task] and set `rust-analyzer.checkOnSave.enable: false` in preferences.\n+To do this you need to create a new https://code.visualstudio.com/docs/editor/tasks[VS Code Task] and set `\"rust-analyzer.checkOnSave\": false` in preferences.\n \n For example, if you want to run https://crates.io/crates/cargo-watch[`cargo watch`] instead, you might add the following to `.vscode/tasks.json`:\n "}]}