{"sha": "d0451eebc41d4eaddcc299c868b5ad983e8c8eb9", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQwNDUxZWViYzQxZDRlYWRkY2MyOTljODY4YjVhZDk4M2U4YzhlYjk=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2013-04-22T16:00:53Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2013-04-22T16:00:53Z"}, "message": "auto merge of #5995 : huonw/rust/core-rand-impls, r=pcwalton", "tree": {"sha": "92a66dcec68044cdc0aa99067fea8d5da896ed78", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/92a66dcec68044cdc0aa99067fea8d5da896ed78"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d0451eebc41d4eaddcc299c868b5ad983e8c8eb9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d0451eebc41d4eaddcc299c868b5ad983e8c8eb9", "html_url": "https://github.com/rust-lang/rust/commit/d0451eebc41d4eaddcc299c868b5ad983e8c8eb9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d0451eebc41d4eaddcc299c868b5ad983e8c8eb9/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0de3e7a23c0cd677a3f369ea1b65cd71f41dcda2", "url": "https://api.github.com/repos/rust-lang/rust/commits/0de3e7a23c0cd677a3f369ea1b65cd71f41dcda2", "html_url": "https://github.com/rust-lang/rust/commit/0de3e7a23c0cd677a3f369ea1b65cd71f41dcda2"}, {"sha": "56679024c551c51a1eea8a03dbe8570f56687521", "url": "https://api.github.com/repos/rust-lang/rust/commits/56679024c551c51a1eea8a03dbe8570f56687521", "html_url": "https://github.com/rust-lang/rust/commit/56679024c551c51a1eea8a03dbe8570f56687521"}], "stats": {"total": 46, "additions": 46, "deletions": 0}, "files": [{"sha": "1e33f382df54490cb407d446ed9c0d09a2c10231", "filename": "src/libcore/rand.rs", "status": "modified", "additions": 46, "deletions": 0, "changes": 46, "blob_url": "https://github.com/rust-lang/rust/blob/d0451eebc41d4eaddcc299c868b5ad983e8c8eb9/src%2Flibcore%2Frand.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d0451eebc41d4eaddcc299c868b5ad983e8c8eb9/src%2Flibcore%2Frand.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Frand.rs?ref=d0451eebc41d4eaddcc299c868b5ad983e8c8eb9", "patch": "@@ -115,6 +115,40 @@ impl Rand for bool {\n     }\n }\n \n+macro_rules! tuple_impl {\n+    // use variables to indicate the arity of the tuple\n+    ($($tyvar:ident),* ) => {\n+        // the trailing commas are for the 1 tuple\n+        impl<\n+            $( $tyvar : Rand ),*\n+            > Rand for ( $( $tyvar ),* , ) {\n+\n+            fn rand (_rng: @Rng) -> ( $( $tyvar ),* , ) {\n+                (\n+                    // use the $var's to get the appropriate number of repeats\n+                    // (they're not actually needed)\n+                    $(\n+                        _rng.gen::<$tyvar>()\n+                    ),*\n+                    ,\n+                )\n+            }\n+        }\n+    }\n+}\n+\n+impl Rand for () { fn rand(_: @Rng) -> () { () } }\n+tuple_impl!{A}\n+tuple_impl!{A, B}\n+tuple_impl!{A, B, C}\n+tuple_impl!{A, B, C, D}\n+tuple_impl!{A, B, C, D, E}\n+tuple_impl!{A, B, C, D, E, F}\n+tuple_impl!{A, B, C, D, E, F, G}\n+tuple_impl!{A, B, C, D, E, F, G, H}\n+tuple_impl!{A, B, C, D, E, F, G, H, I}\n+tuple_impl!{A, B, C, D, E, F, G, H, I, J}\n+\n impl<T:Rand> Rand for Option<T> {\n     fn rand(rng: @rand::Rng) -> Option<T> {\n         if rng.gen_bool() {\n@@ -125,6 +159,14 @@ impl<T:Rand> Rand for Option<T> {\n     }\n }\n \n+impl<T: Rand> Rand for ~T {\n+    fn rand(rng: @Rng) -> ~T { ~rng.gen() }\n+}\n+\n+impl<T: Rand> Rand for @T {\n+    fn rand(rng: @Rng) -> @T { @rng.gen() }\n+}\n+\n #[allow(non_camel_case_types)] // runtime type\n pub enum rust_rng {}\n \n@@ -927,6 +969,10 @@ mod tests {\n         let _n : uint = rand::random();\n         let _f : f32 = rand::random();\n         let _o : Option<Option<i8>> = rand::random();\n+        let _many : ((),\n+                     (~uint, @int, ~Option<~(@char, ~(@bool,))>),\n+                     (u8, i8, u16, i16, u32, i32, u64, i64),\n+                     (f32, (f64, (float,)))) = rand::random();\n     }\n }\n "}]}