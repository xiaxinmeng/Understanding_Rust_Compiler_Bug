{"sha": "4c897d8d2dd047e0906d585318866c9ae7a21610", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRjODk3ZDhkMmRkMDQ3ZTA5MDZkNTg1MzE4ODY2YzlhZTdhMjE2MTA=", "commit": {"author": {"name": "Kirill Bulatov", "email": "mail4score@gmail.com", "date": "2020-03-30T11:38:01Z"}, "committer": {"name": "Kirill Bulatov", "email": "mail4score@gmail.com", "date": "2020-03-30T11:38:01Z"}, "message": "Fix the endless progress bar issue", "tree": {"sha": "111c2cc751cb7fcca38eb7518e1d39af394ee243", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/111c2cc751cb7fcca38eb7518e1d39af394ee243"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4c897d8d2dd047e0906d585318866c9ae7a21610", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4c897d8d2dd047e0906d585318866c9ae7a21610", "html_url": "https://github.com/rust-lang/rust/commit/4c897d8d2dd047e0906d585318866c9ae7a21610", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4c897d8d2dd047e0906d585318866c9ae7a21610/comments", "author": {"login": "SomeoneToIgnore", "id": 2690773, "node_id": "MDQ6VXNlcjI2OTA3NzM=", "avatar_url": "https://avatars.githubusercontent.com/u/2690773?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SomeoneToIgnore", "html_url": "https://github.com/SomeoneToIgnore", "followers_url": "https://api.github.com/users/SomeoneToIgnore/followers", "following_url": "https://api.github.com/users/SomeoneToIgnore/following{/other_user}", "gists_url": "https://api.github.com/users/SomeoneToIgnore/gists{/gist_id}", "starred_url": "https://api.github.com/users/SomeoneToIgnore/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SomeoneToIgnore/subscriptions", "organizations_url": "https://api.github.com/users/SomeoneToIgnore/orgs", "repos_url": "https://api.github.com/users/SomeoneToIgnore/repos", "events_url": "https://api.github.com/users/SomeoneToIgnore/events{/privacy}", "received_events_url": "https://api.github.com/users/SomeoneToIgnore/received_events", "type": "User", "site_admin": false}, "committer": {"login": "SomeoneToIgnore", "id": 2690773, "node_id": "MDQ6VXNlcjI2OTA3NzM=", "avatar_url": "https://avatars.githubusercontent.com/u/2690773?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SomeoneToIgnore", "html_url": "https://github.com/SomeoneToIgnore", "followers_url": "https://api.github.com/users/SomeoneToIgnore/followers", "following_url": "https://api.github.com/users/SomeoneToIgnore/following{/other_user}", "gists_url": "https://api.github.com/users/SomeoneToIgnore/gists{/gist_id}", "starred_url": "https://api.github.com/users/SomeoneToIgnore/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SomeoneToIgnore/subscriptions", "organizations_url": "https://api.github.com/users/SomeoneToIgnore/orgs", "repos_url": "https://api.github.com/users/SomeoneToIgnore/repos", "events_url": "https://api.github.com/users/SomeoneToIgnore/events{/privacy}", "received_events_url": "https://api.github.com/users/SomeoneToIgnore/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8e78371222ac6ce45afd12c143f472e0674834b4", "url": "https://api.github.com/repos/rust-lang/rust/commits/8e78371222ac6ce45afd12c143f472e0674834b4", "html_url": "https://github.com/rust-lang/rust/commit/8e78371222ac6ce45afd12c143f472e0674834b4"}], "stats": {"total": 10, "additions": 10, "deletions": 0}, "files": [{"sha": "2692c1bf55208431290c291e639da7517baa6198", "filename": "crates/ra_cargo_watch/src/lib.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/4c897d8d2dd047e0906d585318866c9ae7a21610/crates%2Fra_cargo_watch%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4c897d8d2dd047e0906d585318866c9ae7a21610/crates%2Fra_cargo_watch%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_cargo_watch%2Fsrc%2Flib.rs?ref=4c897d8d2dd047e0906d585318866c9ae7a21610", "patch": "@@ -95,6 +95,9 @@ impl CheckWatcherThread {\n     }\n \n     fn run(&mut self, task_send: &Sender<CheckTask>, cmd_recv: &Receiver<CheckCommand>) {\n+        // If we rerun the thread, we need to discard the previous check results first\n+        self.clean_previous_results(task_send);\n+\n         loop {\n             select! {\n                 recv(&cmd_recv) -> cmd => match cmd {\n@@ -127,6 +130,13 @@ impl CheckWatcherThread {\n         }\n     }\n \n+    fn clean_previous_results(&self, task_send: &Sender<CheckTask>) {\n+        task_send.send(CheckTask::ClearDiagnostics).unwrap();\n+        task_send\n+            .send(CheckTask::Status(WorkDoneProgress::End(WorkDoneProgressEnd { message: None })))\n+            .unwrap();\n+    }\n+\n     fn should_recheck(&mut self) -> bool {\n         if let Some(_last_update_req) = &self.last_update_req {\n             // We currently only request an update on save, as we need up to"}]}