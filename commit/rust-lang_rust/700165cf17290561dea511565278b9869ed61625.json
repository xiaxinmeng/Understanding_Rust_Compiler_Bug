{"sha": "700165cf17290561dea511565278b9869ed61625", "node_id": "MDY6Q29tbWl0NzI0NzEyOjcwMDE2NWNmMTcyOTA1NjFkZWE1MTE1NjUyNzhiOTg2OWVkNjE2MjU=", "commit": {"author": {"name": "bors[bot]", "email": "bors[bot]@users.noreply.github.com", "date": "2018-12-27T10:04:36Z"}, "committer": {"name": "bors[bot]", "email": "bors[bot]@users.noreply.github.com", "date": "2018-12-27T10:04:36Z"}, "message": "Merge #336\n\n336: add cancelation module & cancelation backtraces r=matklad a=matklad\n\nThis is primaraly to debug semengly spurious canceled requests\n\nCo-authored-by: Aleksey Kladov <aleksey.kladov@gmail.com>", "tree": {"sha": "9786b92d05c2c2dd7390344331209d55e36ed549", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9786b92d05c2c2dd7390344331209d55e36ed549"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/700165cf17290561dea511565278b9869ed61625", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/700165cf17290561dea511565278b9869ed61625", "html_url": "https://github.com/rust-lang/rust/commit/700165cf17290561dea511565278b9869ed61625", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/700165cf17290561dea511565278b9869ed61625/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "parents": [{"sha": "62c40b0e91e79094daf7491526aa8b164a7d198c", "url": "https://api.github.com/repos/rust-lang/rust/commits/62c40b0e91e79094daf7491526aa8b164a7d198c", "html_url": "https://github.com/rust-lang/rust/commit/62c40b0e91e79094daf7491526aa8b164a7d198c"}, {"sha": "93996fecdc6866412fa51120ba33150c4107d42e", "url": "https://api.github.com/repos/rust-lang/rust/commits/93996fecdc6866412fa51120ba33150c4107d42e", "html_url": "https://github.com/rust-lang/rust/commit/93996fecdc6866412fa51120ba33150c4107d42e"}], "stats": {"total": 107, "additions": 92, "deletions": 15}, "files": [{"sha": "69134b434b0fc9d4e570c4891f459f9b96707b1e", "filename": "Cargo.lock", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/700165cf17290561dea511565278b9869ed61625/Cargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/700165cf17290561dea511565278b9869ed61625/Cargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.lock?ref=700165cf17290561dea511565278b9869ed61625", "patch": "@@ -668,6 +668,7 @@ dependencies = [\n name = \"ra_db\"\n version = \"0.1.0\"\n dependencies = [\n+ \"backtrace 0.3.13 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"parking_lot 0.6.4 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"ra_editor 0.1.0\",\n  \"ra_syntax 0.1.0\","}, {"sha": "4be32b5f314abce73b60e3f360163a184ac0273d", "filename": "crates/ra_db/Cargo.toml", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/700165cf17290561dea511565278b9869ed61625/crates%2Fra_db%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/700165cf17290561dea511565278b9869ed61625/crates%2Fra_db%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_db%2FCargo.toml?ref=700165cf17290561dea511565278b9869ed61625", "patch": "@@ -5,6 +5,7 @@ version = \"0.1.0\"\n authors = [\"Aleksey Kladov <aleksey.kladov@gmail.com>\"]\n \n [dependencies]\n+backtrace = \"0.3.1\"\n relative-path = \"0.4.0\"\n salsa = \"0.8.0\"\n rustc-hash = \"1.0\""}, {"sha": "73444b015bb1ace47c7a0f716c70cc0e72f6dd0e", "filename": "crates/ra_db/src/cancelation.rs", "status": "added", "additions": 85, "deletions": 0, "changes": 85, "blob_url": "https://github.com/rust-lang/rust/blob/700165cf17290561dea511565278b9869ed61625/crates%2Fra_db%2Fsrc%2Fcancelation.rs", "raw_url": "https://github.com/rust-lang/rust/raw/700165cf17290561dea511565278b9869ed61625/crates%2Fra_db%2Fsrc%2Fcancelation.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_db%2Fsrc%2Fcancelation.rs?ref=700165cf17290561dea511565278b9869ed61625", "patch": "@@ -0,0 +1,85 @@\n+//! Utility types to support cancellation.\n+//!\n+//! In a typical IDE use-case, requests and modification happen concurrently, as\n+//! in the following scenario:\n+//!\n+//!   * user types a character,\n+//!   * a syntax highlighting process is started\n+//!   * user types next character, while syntax highlighting *is still in\n+//!     progress*.\n+//!\n+//! In this situation, we want to react to modification as quckly as possible.\n+//! At the same time, in-progress results are not very interesting, because they\n+//! are invalidated by the edit anyway. So, we first cancel all in-flight\n+//! requests, and then apply modification knowing that it won't intrfere with\n+//! any background processing (this bit is handled by salsa, see\n+//! `BaseDatabase::check_canceled` method).\n+\n+use std::{\n+    cmp,\n+    hash::{Hash, Hasher},\n+    sync::Arc,\n+};\n+\n+use backtrace::Backtrace;\n+use parking_lot::Mutex;\n+\n+/// An \"error\" signifing that the operation was canceled.\n+#[derive(Clone)]\n+pub struct Canceled {\n+    backtrace: Arc<Mutex<Backtrace>>,\n+}\n+\n+pub type Cancelable<T> = Result<T, Canceled>;\n+\n+impl Canceled {\n+    pub(crate) fn new() -> Canceled {\n+        let bt = Backtrace::new_unresolved();\n+        Canceled {\n+            backtrace: Arc::new(Mutex::new(bt)),\n+        }\n+    }\n+}\n+\n+impl std::fmt::Display for Canceled {\n+    fn fmt(&self, fmt: &mut std::fmt::Formatter<'_>) -> std::fmt::Result {\n+        fmt.write_str(\"canceled\")\n+    }\n+}\n+\n+impl std::fmt::Debug for Canceled {\n+    fn fmt(&self, fmt: &mut std::fmt::Formatter<'_>) -> std::fmt::Result {\n+        let mut bt = self.backtrace.lock();\n+        let bt: &mut Backtrace = &mut *bt;\n+        bt.resolve();\n+        write!(fmt, \"canceled at:\\n{:?}\", bt)\n+    }\n+}\n+\n+impl std::error::Error for Canceled {}\n+\n+impl PartialEq for Canceled {\n+    fn eq(&self, _: &Canceled) -> bool {\n+        true\n+    }\n+}\n+\n+impl Eq for Canceled {}\n+\n+impl Hash for Canceled {\n+    fn hash<H: Hasher>(&self, hasher: &mut H) {\n+        ().hash(hasher)\n+    }\n+}\n+\n+impl cmp::Ord for Canceled {\n+    fn cmp(&self, _: &Canceled) -> cmp::Ordering {\n+        cmp::Ordering::Equal\n+    }\n+}\n+\n+impl cmp::PartialOrd for Canceled {\n+    fn partial_cmp(&self, other: &Canceled) -> Option<cmp::Ordering> {\n+        Some(self.cmp(other))\n+    }\n+}"}, {"sha": "1f7c9187be7de2667920d0c1603594fd1b446d72", "filename": "crates/ra_db/src/lib.rs", "status": "modified", "additions": 4, "deletions": 14, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/700165cf17290561dea511565278b9869ed61625/crates%2Fra_db%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/700165cf17290561dea511565278b9869ed61625/crates%2Fra_db%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_db%2Fsrc%2Flib.rs?ref=700165cf17290561dea511565278b9869ed61625", "patch": "@@ -1,27 +1,17 @@\n //! ra_db defines basic database traits. Concrete DB is defined by ra_analysis.\n+mod cancelation;\n mod syntax_ptr;\n mod input;\n mod loc2id;\n pub mod mock;\n \n use std::sync::Arc;\n+\n use ra_editor::LineIndex;\n use ra_syntax::{TextUnit, SourceFileNode};\n \n-#[derive(Clone, Debug, PartialEq, Eq, Hash, PartialOrd, Ord)]\n-pub struct Canceled;\n-\n-pub type Cancelable<T> = Result<T, Canceled>;\n-\n-impl std::fmt::Display for Canceled {\n-    fn fmt(&self, fmt: &mut std::fmt::Formatter<'_>) -> std::fmt::Result {\n-        fmt.write_str(\"canceled\")\n-    }\n-}\n-\n-impl std::error::Error for Canceled {}\n-\n pub use crate::{\n+    cancelation::{Canceled, Cancelable},\n     syntax_ptr::LocalSyntaxPtr,\n     input::{\n         FilesDatabase, FileId, CrateId, SourceRoot, SourceRootId, CrateGraph,\n@@ -48,7 +38,7 @@ macro_rules! impl_numeric_id {\n pub trait BaseDatabase: salsa::Database {\n     fn check_canceled(&self) -> Cancelable<()> {\n         if self.salsa_runtime().is_current_revision_canceled() {\n-            Err(Canceled)\n+            Err(Canceled::new())\n         } else {\n             Ok(())\n         }"}, {"sha": "1edb9fae4956df0558565c46c9c8e679a286dd60", "filename": "crates/ra_lsp_server/src/main_loop.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/700165cf17290561dea511565278b9869ed61625/crates%2Fra_lsp_server%2Fsrc%2Fmain_loop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/700165cf17290561dea511565278b9869ed61625/crates%2Fra_lsp_server%2Fsrc%2Fmain_loop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_lsp_server%2Fsrc%2Fmain_loop.rs?ref=700165cf17290561dea511565278b9869ed61625", "patch": "@@ -427,7 +427,7 @@ impl<'a> PoolDispatcher<'a> {\n                                     RawResponse::err(\n                                         id,\n                                         ErrorCode::ContentModified as i32,\n-                                        format!(\"content modified: {}\", e),\n+                                        format!(\"content modified: {:?}\", e),\n                                     )\n                                 } else {\n                                     RawResponse::err("}]}