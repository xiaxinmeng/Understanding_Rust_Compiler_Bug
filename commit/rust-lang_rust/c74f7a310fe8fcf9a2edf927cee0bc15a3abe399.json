{"sha": "c74f7a310fe8fcf9a2edf927cee0bc15a3abe399", "node_id": "C_kwDOAAsO6NoAKGM3NGY3YTMxMGZlOGZjZjlhMmVkZjkyN2NlZTBiYzE1YTNhYmUzOTk", "commit": {"author": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2022-02-18T03:49:45Z"}, "committer": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2022-03-31T15:04:53Z"}, "message": "address comments, add test for shadowed Box type", "tree": {"sha": "5bf9cf232039b32c8bb2aec695fe7fa73fce4657", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5bf9cf232039b32c8bb2aec695fe7fa73fce4657"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c74f7a310fe8fcf9a2edf927cee0bc15a3abe399", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c74f7a310fe8fcf9a2edf927cee0bc15a3abe399", "html_url": "https://github.com/rust-lang/rust/commit/c74f7a310fe8fcf9a2edf927cee0bc15a3abe399", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c74f7a310fe8fcf9a2edf927cee0bc15a3abe399/comments", "author": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "de04c05dea10fc03cb626338ce1d55f4c90f58b0", "url": "https://api.github.com/repos/rust-lang/rust/commits/de04c05dea10fc03cb626338ce1d55f4c90f58b0", "html_url": "https://github.com/rust-lang/rust/commit/de04c05dea10fc03cb626338ce1d55f4c90f58b0"}], "stats": {"total": 39, "additions": 32, "deletions": 7}, "files": [{"sha": "d83781170e8c3f56d94a254ecadb97e657147522", "filename": "compiler/rustc_trait_selection/src/traits/error_reporting/mod.rs", "status": "modified", "additions": 3, "deletions": 7, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/c74f7a310fe8fcf9a2edf927cee0bc15a3abe399/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Ferror_reporting%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c74f7a310fe8fcf9a2edf927cee0bc15a3abe399/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Ferror_reporting%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Ferror_reporting%2Fmod.rs?ref=c74f7a310fe8fcf9a2edf927cee0bc15a3abe399", "patch": "@@ -2305,7 +2305,7 @@ pub fn recursive_type_with_infinite_size_error<'tcx>(\n         path,\n     );\n     if spans.len() <= 4 {\n-        // FIXME: This suggestion might be erroneous if Option or Box are shadowed\n+        // FIXME(compiler-errors): This suggestion might be erroneous if Box is shadowed\n         err.multipart_suggestion(\n             &msg,\n             spans\n@@ -2356,14 +2356,10 @@ fn get_option_generic_from_field_id(tcx: TyCtxt<'_>, field_id: Option<hir::HirId\n     }\n \n     // Match a single generic arg in the 0th path segment\n-    let generic_arg = path.segments.get(0)?.args?.args.get(0);\n+    let generic_arg = path.segments.last()?.args?.args.get(0)?;\n \n     // Take the span out of the type, if it's a type\n-    if let Some(hir::GenericArg::Type(generic_ty)) = generic_arg {\n-        Some(generic_ty.span)\n-    } else {\n-        None\n-    }\n+    if let hir::GenericArg::Type(generic_ty) = generic_arg { Some(generic_ty.span) } else { None }\n }\n \n /// Summarizes information"}, {"sha": "e141c2149ffea54fec419abc699dea58196554ff", "filename": "src/test/ui/type/type-recursive-box-shadowed.rs", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/c74f7a310fe8fcf9a2edf927cee0bc15a3abe399/src%2Ftest%2Fui%2Ftype%2Ftype-recursive-box-shadowed.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c74f7a310fe8fcf9a2edf927cee0bc15a3abe399/src%2Ftest%2Fui%2Ftype%2Ftype-recursive-box-shadowed.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftype%2Ftype-recursive-box-shadowed.rs?ref=c74f7a310fe8fcf9a2edf927cee0bc15a3abe399", "patch": "@@ -0,0 +1,12 @@\n+//FIXME(compiler-errors): This fixup should suggest the full box path, not just `Box`\n+\n+struct Box<T> {\n+    t: T,\n+}\n+\n+struct Foo {\n+    //~^ ERROR recursive type `Foo` has infinite size\n+    inner: Foo,\n+}\n+\n+fn main() {}"}, {"sha": "c22d848f3797e645b017201532a419167d16d9cd", "filename": "src/test/ui/type/type-recursive-box-shadowed.stderr", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/c74f7a310fe8fcf9a2edf927cee0bc15a3abe399/src%2Ftest%2Fui%2Ftype%2Ftype-recursive-box-shadowed.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/c74f7a310fe8fcf9a2edf927cee0bc15a3abe399/src%2Ftest%2Fui%2Ftype%2Ftype-recursive-box-shadowed.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftype%2Ftype-recursive-box-shadowed.stderr?ref=c74f7a310fe8fcf9a2edf927cee0bc15a3abe399", "patch": "@@ -0,0 +1,17 @@\n+error[E0072]: recursive type `Foo` has infinite size\n+  --> $DIR/type-recursive-box-shadowed.rs:7:1\n+   |\n+LL | struct Foo {\n+   | ^^^^^^^^^^ recursive type has infinite size\n+LL |\n+LL |     inner: Foo,\n+   |            --- recursive without indirection\n+   |\n+help: insert some indirection (e.g., a `Box`, `Rc`, or `&`) to make `Foo` representable\n+   |\n+LL |     inner: Box<Foo>,\n+   |            ++++   +\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0072`."}]}