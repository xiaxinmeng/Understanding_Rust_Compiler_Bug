{"sha": "ef72349e38635bc329a94b1e95648562e59ab7d2", "node_id": "C_kwDOAAsO6NoAKGVmNzIzNDllMzg2MzViYzMyOWE5NGIxZTk1NjQ4NTYyZTU5YWI3ZDI", "commit": {"author": {"name": "Maybe Waffle", "email": "waffle.lapkin@gmail.com", "date": "2022-08-01T13:00:51Z"}, "committer": {"name": "Maybe Waffle", "email": "waffle.lapkin@gmail.com", "date": "2022-08-01T13:00:51Z"}, "message": "Remove `array::IntoIter::with_partial` -- an artifact of the past, once used to create an `IntoIter` from its parts", "tree": {"sha": "c0ebe7674558bdde3d5a9ed32d4718717c365a8d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c0ebe7674558bdde3d5a9ed32d4718717c365a8d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ef72349e38635bc329a94b1e95648562e59ab7d2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ef72349e38635bc329a94b1e95648562e59ab7d2", "html_url": "https://github.com/rust-lang/rust/commit/ef72349e38635bc329a94b1e95648562e59ab7d2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ef72349e38635bc329a94b1e95648562e59ab7d2/comments", "author": {"login": "WaffleLapkin", "id": 38225716, "node_id": "MDQ6VXNlcjM4MjI1NzE2", "avatar_url": "https://avatars.githubusercontent.com/u/38225716?v=4", "gravatar_id": "", "url": "https://api.github.com/users/WaffleLapkin", "html_url": "https://github.com/WaffleLapkin", "followers_url": "https://api.github.com/users/WaffleLapkin/followers", "following_url": "https://api.github.com/users/WaffleLapkin/following{/other_user}", "gists_url": "https://api.github.com/users/WaffleLapkin/gists{/gist_id}", "starred_url": "https://api.github.com/users/WaffleLapkin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/WaffleLapkin/subscriptions", "organizations_url": "https://api.github.com/users/WaffleLapkin/orgs", "repos_url": "https://api.github.com/users/WaffleLapkin/repos", "events_url": "https://api.github.com/users/WaffleLapkin/events{/privacy}", "received_events_url": "https://api.github.com/users/WaffleLapkin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "WaffleLapkin", "id": 38225716, "node_id": "MDQ6VXNlcjM4MjI1NzE2", "avatar_url": "https://avatars.githubusercontent.com/u/38225716?v=4", "gravatar_id": "", "url": "https://api.github.com/users/WaffleLapkin", "html_url": "https://github.com/WaffleLapkin", "followers_url": "https://api.github.com/users/WaffleLapkin/followers", "following_url": "https://api.github.com/users/WaffleLapkin/following{/other_user}", "gists_url": "https://api.github.com/users/WaffleLapkin/gists{/gist_id}", "starred_url": "https://api.github.com/users/WaffleLapkin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/WaffleLapkin/subscriptions", "organizations_url": "https://api.github.com/users/WaffleLapkin/orgs", "repos_url": "https://api.github.com/users/WaffleLapkin/repos", "events_url": "https://api.github.com/users/WaffleLapkin/events{/privacy}", "received_events_url": "https://api.github.com/users/WaffleLapkin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f5485181ca1d932d78904a7587ed19d0738f0b91", "url": "https://api.github.com/repos/rust-lang/rust/commits/f5485181ca1d932d78904a7587ed19d0738f0b91", "html_url": "https://github.com/rust-lang/rust/commit/f5485181ca1d932d78904a7587ed19d0738f0b91"}], "stats": {"total": 17, "additions": 4, "deletions": 13}, "files": [{"sha": "f4885ed9ffbb67c676e8550574702483666664cd", "filename": "library/core/src/array/iter.rs", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/ef72349e38635bc329a94b1e95648562e59ab7d2/library%2Fcore%2Fsrc%2Farray%2Fiter.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ef72349e38635bc329a94b1e95648562e59ab7d2/library%2Fcore%2Fsrc%2Farray%2Fiter.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Farray%2Fiter.rs?ref=ef72349e38635bc329a94b1e95648562e59ab7d2", "patch": "@@ -84,16 +84,6 @@ impl<T, const N: usize> IntoIter<T, N> {\n         IntoIterator::into_iter(array)\n     }\n \n-    /// Creates a new iterator from a partially initalized array.\n-    ///\n-    /// # Safety\n-    ///\n-    /// The caller must guarantee that all and only the `alive` elements of\n-    /// `data` are initialized.\n-    pub(crate) unsafe fn with_partial(data: [MaybeUninit<T>; N], alive: Range<usize>) -> Self {\n-        Self { data, alive }\n-    }\n-\n     /// Creates an iterator over the elements in a partially-initialized buffer.\n     ///\n     /// If you have a fully-initialized array, then use [`IntoIterator`]."}, {"sha": "8f3e1b58b52cca0806901ff6d644e419616b8b19", "filename": "library/core/src/iter/adapters/array_chunks.rs", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/ef72349e38635bc329a94b1e95648562e59ab7d2/library%2Fcore%2Fsrc%2Fiter%2Fadapters%2Farray_chunks.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ef72349e38635bc329a94b1e95648562e59ab7d2/library%2Fcore%2Fsrc%2Fiter%2Fadapters%2Farray_chunks.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fiter%2Fadapters%2Farray_chunks.rs?ref=ef72349e38635bc329a94b1e95648562e59ab7d2", "patch": "@@ -64,7 +64,7 @@ where\n                         mem::forget(guard);\n                         self.remainder = {\n                             // SAFETY: `array` was initialized with `init` elements.\n-                            Some(unsafe { array::IntoIter::with_partial(array, 0..init) })\n+                            Some(unsafe { array::IntoIter::new_unchecked(array, 0..init) })\n                         };\n                     }\n                     return None;\n@@ -124,7 +124,8 @@ where\n                     let init = guard.init;\n                     mem::forget(guard);\n                     // SAFETY: `array` was initialized with `init` elements.\n-                    self.remainder = Some(unsafe { array::IntoIter::with_partial(array, 0..init) });\n+                    self.remainder =\n+                        Some(unsafe { array::IntoIter::new_unchecked(array, 0..init) });\n                 }\n                 R::from_output(o)\n             }\n@@ -305,7 +306,7 @@ where\n         // SAFETY: `array` was initialized with exactly `init` elements.\n         self.remainder = unsafe {\n             array.get_unchecked_mut(..init).reverse();\n-            Some(array::IntoIter::with_partial(array, 0..init))\n+            Some(array::IntoIter::new_unchecked(array, 0..init))\n         };\n         Some(())\n     }"}]}