{"sha": "a0f56edfc316d642785efc5ccaf0d1c6c457b057", "node_id": "MDY6Q29tbWl0NzI0NzEyOmEwZjU2ZWRmYzMxNmQ2NDI3ODVlZmM1Y2NhZjBkMWM2YzQ1N2IwNTc=", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2018-09-06T10:55:04Z"}, "committer": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2018-09-06T10:59:34Z"}, "message": "print_with_newline / write_with_newline: don't warn about string with several `\\n`s in them.\n\nFixes #3126", "tree": {"sha": "833fc0d536da0f9d1ea55c082f6388558eea2b99", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/833fc0d536da0f9d1ea55c082f6388558eea2b99"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a0f56edfc316d642785efc5ccaf0d1c6c457b057", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a0f56edfc316d642785efc5ccaf0d1c6c457b057", "html_url": "https://github.com/rust-lang/rust/commit/a0f56edfc316d642785efc5ccaf0d1c6c457b057", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a0f56edfc316d642785efc5ccaf0d1c6c457b057/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0a8ceaf8b0b343fb943fa18bbfa6a52a3ce93ec6", "url": "https://api.github.com/repos/rust-lang/rust/commits/0a8ceaf8b0b343fb943fa18bbfa6a52a3ce93ec6", "html_url": "https://github.com/rust-lang/rust/commit/0a8ceaf8b0b343fb943fa18bbfa6a52a3ce93ec6"}], "stats": {"total": 14, "additions": 12, "deletions": 2}, "files": [{"sha": "7ddae1c81c7e145c453b9bd4f3b3a103c59565ed", "filename": "clippy_lints/src/write.rs", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/a0f56edfc316d642785efc5ccaf0d1c6c457b057/clippy_lints%2Fsrc%2Fwrite.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a0f56edfc316d642785efc5ccaf0d1c6c457b057/clippy_lints%2Fsrc%2Fwrite.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fwrite.rs?ref=a0f56edfc316d642785efc5ccaf0d1c6c457b057", "patch": "@@ -195,7 +195,10 @@ impl EarlyLintPass for Pass {\n         } else if mac.node.path == \"print\" {\n             span_lint(cx, PRINT_STDOUT, mac.span, \"use of `print!`\");\n             if let Some(fmtstr) = check_tts(cx, &mac.node.tts, false).0 {\n-                if fmtstr.ends_with(\"\\\\n\") && !fmtstr.ends_with(\"\\\\n\\\\n\") {\n+                if fmtstr.ends_with(\"\\\\n\") &&\n+                   // don't warn about strings with several `\\n`s (#3126)\n+                   fmtstr.matches(\"\\\\n\").count() == 1\n+                {\n                     span_lint(\n                         cx,\n                         PRINT_WITH_NEWLINE,\n@@ -207,7 +210,10 @@ impl EarlyLintPass for Pass {\n             }\n         } else if mac.node.path == \"write\" {\n             if let Some(fmtstr) = check_tts(cx, &mac.node.tts, true).0 {\n-                if fmtstr.ends_with(\"\\\\n\") && !fmtstr.ends_with(\"\\\\n\\\\n\") {\n+                if fmtstr.ends_with(\"\\\\n\") &&\n+                   // don't warn about strings with several `\\n`s (#3126)\n+                   fmtstr.matches(\"\\\\n\").count() == 1\n+                {\n                     span_lint(\n                         cx,\n                         WRITE_WITH_NEWLINE,"}, {"sha": "c2c79c726e8a67f6306e9f4647a146c3ffa1ac88", "filename": "tests/ui/print_with_newline.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a0f56edfc316d642785efc5ccaf0d1c6c457b057/tests%2Fui%2Fprint_with_newline.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a0f56edfc316d642785efc5ccaf0d1c6c457b057/tests%2Fui%2Fprint_with_newline.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fprint_with_newline.rs?ref=a0f56edfc316d642785efc5ccaf0d1c6c457b057", "patch": "@@ -21,4 +21,6 @@ fn main() {\n     print!(\"\\n\\n\");\n     print!(\"like eof\\n\\n\");\n     print!(\"Hello {} {}\\n\\n\", \"world\", \"#2\");\n+    println!(\"\\ndon't\\nwarn\\nfor\\nmultiple\\nnewlines\\n\"); // #3126\n+    println!(\"\\nbla\\n\\n\"); // #3126\n }"}, {"sha": "58e6002fa6a1e1994a34df6ebae858ff4173c280", "filename": "tests/ui/write_with_newline.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a0f56edfc316d642785efc5ccaf0d1c6c457b057/tests%2Fui%2Fwrite_with_newline.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a0f56edfc316d642785efc5ccaf0d1c6c457b057/tests%2Fui%2Fwrite_with_newline.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fwrite_with_newline.rs?ref=a0f56edfc316d642785efc5ccaf0d1c6c457b057", "patch": "@@ -26,4 +26,6 @@ fn main() {\n     write!(&mut v, \"\\n\\n\");\n     write!(&mut v, \"like eof\\n\\n\");\n     write!(&mut v, \"Hello {} {}\\n\\n\", \"world\", \"#2\");\n+    writeln!(&mut v, \"\\ndon't\\nwarn\\nfor\\nmultiple\\nnewlines\\n\"); // #3126\n+    writeln!(&mut v, \"\\nbla\\n\\n\"); // #3126\n }"}]}