{"sha": "a465d6a8600faed173f896f4b8dc2db0ee2d5498", "node_id": "C_kwDOAAsO6NoAKGE0NjVkNmE4NjAwZmFlZDE3M2Y4OTZmNGI4ZGMyZGIwZWUyZDU0OTg", "commit": {"author": {"name": "bjorn3", "email": "17426603+bjorn3@users.noreply.github.com", "date": "2023-02-03T16:48:35Z"}, "committer": {"name": "bjorn3", "email": "17426603+bjorn3@users.noreply.github.com", "date": "2023-02-03T16:48:35Z"}, "message": "Move codegen_and_compile_fn to driver/jit.rs", "tree": {"sha": "cfe782ff7cff7a4bf9a8abd35c1d55a78e6d3922", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/cfe782ff7cff7a4bf9a8abd35c1d55a78e6d3922"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a465d6a8600faed173f896f4b8dc2db0ee2d5498", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a465d6a8600faed173f896f4b8dc2db0ee2d5498", "html_url": "https://github.com/rust-lang/rust/commit/a465d6a8600faed173f896f4b8dc2db0ee2d5498", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a465d6a8600faed173f896f4b8dc2db0ee2d5498/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "21bdff8bc015b557bfae85b968dc4c100be85caf", "url": "https://api.github.com/repos/rust-lang/rust/commits/21bdff8bc015b557bfae85b968dc4c100be85caf", "html_url": "https://github.com/rust-lang/rust/commit/21bdff8bc015b557bfae85b968dc4c100be85caf"}], "stats": {"total": 61, "additions": 26, "deletions": 35}, "files": [{"sha": "6e9a1bfa7a82b39041a682b0fb574815afa65d52", "filename": "src/base.rs", "status": "modified", "additions": 0, "deletions": 17, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/a465d6a8600faed173f896f4b8dc2db0ee2d5498/src%2Fbase.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a465d6a8600faed173f896f4b8dc2db0ee2d5498/src%2Fbase.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbase.rs?ref=a465d6a8600faed173f896f4b8dc2db0ee2d5498", "patch": "@@ -21,23 +21,6 @@ pub(crate) struct CodegenedFunction {\n     func_debug_cx: Option<FunctionDebugContext>,\n }\n \n-#[cfg_attr(not(feature = \"jit\"), allow(dead_code))]\n-pub(crate) fn codegen_and_compile_fn<'tcx>(\n-    tcx: TyCtxt<'tcx>,\n-    cx: &mut crate::CodegenCx,\n-    cached_context: &mut Context,\n-    module: &mut dyn Module,\n-    instance: Instance<'tcx>,\n-) {\n-    let _inst_guard =\n-        crate::PrintOnPanic(|| format!(\"{:?} {}\", instance, tcx.symbol_name(instance).name));\n-\n-    let cached_func = std::mem::replace(&mut cached_context.func, Function::new());\n-    let codegened_func = codegen_fn(tcx, cx, cached_func, module, instance);\n-\n-    compile_fn(cx, cached_context, module, codegened_func);\n-}\n-\n pub(crate) fn codegen_fn<'tcx>(\n     tcx: TyCtxt<'tcx>,\n     cx: &mut crate::CodegenCx,"}, {"sha": "25cb6ecbf6b885f42ed750b4d8b51b353932ce71", "filename": "src/driver/jit.rs", "status": "modified", "additions": 26, "deletions": 18, "changes": 44, "blob_url": "https://github.com/rust-lang/rust/blob/a465d6a8600faed173f896f4b8dc2db0ee2d5498/src%2Fdriver%2Fjit.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a465d6a8600faed173f896f4b8dc2db0ee2d5498/src%2Fdriver%2Fjit.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdriver%2Fjit.rs?ref=a465d6a8600faed173f896f4b8dc2db0ee2d5498", "patch": "@@ -128,15 +128,13 @@ pub(crate) fn run_jit(tcx: TyCtxt<'_>, backend_config: BackendConfig) -> ! {\n                 MonoItem::Fn(inst) => match backend_config.codegen_mode {\n                     CodegenMode::Aot => unreachable!(),\n                     CodegenMode::Jit => {\n-                        tcx.sess.time(\"codegen fn\", || {\n-                            crate::base::codegen_and_compile_fn(\n-                                tcx,\n-                                &mut cx,\n-                                &mut cached_context,\n-                                &mut jit_module,\n-                                inst,\n-                            )\n-                        });\n+                        codegen_and_compile_fn(\n+                            tcx,\n+                            &mut cx,\n+                            &mut cached_context,\n+                            &mut jit_module,\n+                            inst,\n+                        );\n                     }\n                     CodegenMode::JitLazy => {\n                         codegen_shim(tcx, &mut cx, &mut cached_context, &mut jit_module, inst)\n@@ -219,6 +217,24 @@ pub(crate) fn run_jit(tcx: TyCtxt<'_>, backend_config: BackendConfig) -> ! {\n     }\n }\n \n+pub(crate) fn codegen_and_compile_fn<'tcx>(\n+    tcx: TyCtxt<'tcx>,\n+    cx: &mut crate::CodegenCx,\n+    cached_context: &mut Context,\n+    module: &mut dyn Module,\n+    instance: Instance<'tcx>,\n+) {\n+    tcx.sess.time(\"codegen and compile fn\", || {\n+        let _inst_guard =\n+            crate::PrintOnPanic(|| format!(\"{:?} {}\", instance, tcx.symbol_name(instance).name));\n+\n+        let cached_func = std::mem::replace(&mut cached_context.func, Function::new());\n+        let codegened_func = crate::base::codegen_fn(tcx, cx, cached_func, module, instance);\n+\n+        crate::base::compile_fn(cx, cached_context, module, codegened_func);\n+    });\n+}\n+\n extern \"C\" fn clif_jit_fn(\n     instance_ptr: *const Instance<'static>,\n     trampoline_ptr: *const u8,\n@@ -271,15 +287,7 @@ fn jit_fn(instance_ptr: *const Instance<'static>, trampoline_ptr: *const u8) ->\n                 false,\n                 Symbol::intern(\"dummy_cgu_name\"),\n             );\n-            tcx.sess.time(\"codegen fn\", || {\n-                crate::base::codegen_and_compile_fn(\n-                    tcx,\n-                    &mut cx,\n-                    &mut Context::new(),\n-                    jit_module,\n-                    instance,\n-                )\n-            });\n+            codegen_and_compile_fn(tcx, &mut cx, &mut Context::new(), jit_module, instance);\n \n             assert!(cx.global_asm.is_empty());\n             jit_module.finalize_definitions().unwrap();"}]}