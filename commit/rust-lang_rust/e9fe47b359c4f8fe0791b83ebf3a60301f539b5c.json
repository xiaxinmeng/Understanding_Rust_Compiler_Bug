{"sha": "e9fe47b359c4f8fe0791b83ebf3a60301f539b5c", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU5ZmU0N2IzNTljNGY4ZmUwNzkxYjgzZWJmM2E2MDMwMWY1MzliNWM=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2011-03-09T01:03:00Z"}, "committer": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2011-03-09T01:03:00Z"}, "message": "rustc: Make ann_to_type() fail if the node has no type. Miraculously, no test cases fail.", "tree": {"sha": "455fb0b866ac928cae97828c728ee254ffbedc05", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/455fb0b866ac928cae97828c728ee254ffbedc05"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e9fe47b359c4f8fe0791b83ebf3a60301f539b5c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e9fe47b359c4f8fe0791b83ebf3a60301f539b5c", "html_url": "https://github.com/rust-lang/rust/commit/e9fe47b359c4f8fe0791b83ebf3a60301f539b5c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e9fe47b359c4f8fe0791b83ebf3a60301f539b5c/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e62424944b197e24025b149e2d4ba2347b76c8d8", "url": "https://api.github.com/repos/rust-lang/rust/commits/e62424944b197e24025b149e2d4ba2347b76c8d8", "html_url": "https://github.com/rust-lang/rust/commit/e62424944b197e24025b149e2d4ba2347b76c8d8"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "05558da1311caf6baf67ce4ea03e2bb653f44260", "filename": "src/comp/middle/ty.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e9fe47b359c4f8fe0791b83ebf3a60301f539b5c/src%2Fcomp%2Fmiddle%2Fty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e9fe47b359c4f8fe0791b83ebf3a60301f539b5c/src%2Fcomp%2Fmiddle%2Fty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Fty.rs?ref=e9fe47b359c4f8fe0791b83ebf3a60301f539b5c", "patch": "@@ -596,8 +596,8 @@ fn eq_ty(&@t a, &@t b) -> bool {\n fn ann_to_type(&ast.ann ann) -> @t {\n     alt (ann) {\n         case (ast.ann_none) {\n-            // shouldn't happen, but can until the typechecker is complete\n-            ret plain_ty(ty_var(-1));    // FIXME: broken, broken, broken\n+            log \"ann_to_type() called on node with no type\";\n+            fail;\n         }\n         case (ast.ann_type(?ty, _)) {\n             ret ty;"}]}