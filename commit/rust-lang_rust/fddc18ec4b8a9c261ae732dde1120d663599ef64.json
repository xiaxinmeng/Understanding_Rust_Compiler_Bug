{"sha": "fddc18ec4b8a9c261ae732dde1120d663599ef64", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZkZGMxOGVjNGI4YTljMjYxYWU3MzJkZGUxMTIwZDY2MzU5OWVmNjQ=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2014-02-09T02:46:27Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2014-02-09T02:46:27Z"}, "message": "auto merge of #12105 : huonw/rust/bench-black-box, r=alexcrichton\n\nThis allows a result to be marked as \"used\" by passing it to a function\r\nLLVM cannot see inside (unless LTO is enabled).\r\n\r\nCloses #8261.", "tree": {"sha": "0cd1d941d571c4347debfdd6a140ff4f5accadad", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0cd1d941d571c4347debfdd6a140ff4f5accadad"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fddc18ec4b8a9c261ae732dde1120d663599ef64", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fddc18ec4b8a9c261ae732dde1120d663599ef64", "html_url": "https://github.com/rust-lang/rust/commit/fddc18ec4b8a9c261ae732dde1120d663599ef64", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fddc18ec4b8a9c261ae732dde1120d663599ef64/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a2290db7971a1e14e4d15316cecaf5c33cc6b0ba", "url": "https://api.github.com/repos/rust-lang/rust/commits/a2290db7971a1e14e4d15316cecaf5c33cc6b0ba", "html_url": "https://github.com/rust-lang/rust/commit/a2290db7971a1e14e4d15316cecaf5c33cc6b0ba"}, {"sha": "38447344f1f1dc3c3bb0cbcf361deee49e2f9828", "url": "https://api.github.com/repos/rust-lang/rust/commits/38447344f1f1dc3c3bb0cbcf361deee49e2f9828", "html_url": "https://github.com/rust-lang/rust/commit/38447344f1f1dc3c3bb0cbcf361deee49e2f9828"}], "stats": {"total": 36, "additions": 24, "deletions": 12}, "files": [{"sha": "3e3ecdda3b0975d77f2a8f8a9d26b4e5fb0994e0", "filename": "src/libarena/lib.rs", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/fddc18ec4b8a9c261ae732dde1120d663599ef64/src%2Flibarena%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fddc18ec4b8a9c261ae732dde1120d663599ef64/src%2Flibarena%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibarena%2Flib.rs?ref=fddc18ec4b8a9c261ae732dde1120d663599ef64", "patch": "@@ -536,18 +536,18 @@ mod test {\n                 x: 1,\n                 y: 2,\n                 z: 3,\n-            });\n+            })\n         })\n     }\n \n     #[bench]\n     pub fn bench_pod_nonarena(bh: &mut BenchHarness) {\n         bh.iter(|| {\n-            let _ = ~Point {\n+            ~Point {\n                 x: 1,\n                 y: 2,\n                 z: 3,\n-            };\n+            }\n         })\n     }\n \n@@ -561,7 +561,7 @@ mod test {\n                     y: 2,\n                     z: 3,\n                 }\n-            });\n+            })\n         })\n     }\n \n@@ -588,28 +588,28 @@ mod test {\n             arena.alloc(Nonpod {\n                 string: ~\"hello world\",\n                 array: ~[ 1, 2, 3, 4, 5 ],\n-            });\n+            })\n         })\n     }\n \n     #[bench]\n     pub fn bench_nonpod_nonarena(bh: &mut BenchHarness) {\n         bh.iter(|| {\n-            let _ = ~Nonpod {\n+            ~Nonpod {\n                 string: ~\"hello world\",\n                 array: ~[ 1, 2, 3, 4, 5 ],\n-            };\n+            }\n         })\n     }\n \n     #[bench]\n     pub fn bench_nonpod_old_arena(bh: &mut BenchHarness) {\n         let arena = Arena::new();\n         bh.iter(|| {\n-            let _ = arena.alloc(|| Nonpod {\n+            arena.alloc(|| Nonpod {\n                 string: ~\"hello world\",\n                 array: ~[ 1, 2, 3, 4, 5 ],\n-            });\n+            })\n         })\n     }\n }"}, {"sha": "109bf2e489b552223f0c7b26d4fb1a648870664a", "filename": "src/libextra/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fddc18ec4b8a9c261ae732dde1120d663599ef64/src%2Flibextra%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fddc18ec4b8a9c261ae732dde1120d663599ef64/src%2Flibextra%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibextra%2Flib.rs?ref=fddc18ec4b8a9c261ae732dde1120d663599ef64", "patch": "@@ -29,7 +29,7 @@ Rust extras are part of the standard Rust distribution.\n       html_favicon_url = \"http://www.rust-lang.org/favicon.ico\",\n       html_root_url = \"http://static.rust-lang.org/doc/master\")];\n \n-#[feature(macro_rules, globs, managed_boxes)];\n+#[feature(macro_rules, globs, managed_boxes, asm)];\n \n #[deny(non_camel_case_types)];\n #[deny(missing_doc)];"}, {"sha": "d207bd2298be8c75f3ac1f0babba955a5c870b00", "filename": "src/libextra/test.rs", "status": "modified", "additions": 14, "deletions": 2, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/fddc18ec4b8a9c261ae732dde1120d663599ef64/src%2Flibextra%2Ftest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fddc18ec4b8a9c261ae732dde1120d663599ef64/src%2Flibextra%2Ftest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibextra%2Ftest.rs?ref=fddc18ec4b8a9c261ae732dde1120d663599ef64", "patch": "@@ -1091,13 +1091,25 @@ impl MetricMap {\n \n // Benchmarking\n \n+/// A function that is opaque to the optimiser, to allow benchmarks to\n+/// pretend to use outputs to assist in avoiding dead-code\n+/// elimination.\n+///\n+/// This function is a no-op, and does not even read from `dummy`.\n+pub fn black_box<T>(dummy: T) {\n+    // we need to \"use\" the argument in some way LLVM can't\n+    // introspect.\n+    unsafe {asm!(\"\" : : \"r\"(&dummy))}\n+}\n+\n+\n impl BenchHarness {\n     /// Callback for benchmark functions to run in their body.\n-    pub fn iter(&mut self, inner: ||) {\n+    pub fn iter<T>(&mut self, inner: || -> T) {\n         self.ns_start = precise_time_ns();\n         let k = self.iterations;\n         for _ in range(0u64, k) {\n-            inner();\n+            black_box(inner());\n         }\n         self.ns_end = precise_time_ns();\n     }"}]}