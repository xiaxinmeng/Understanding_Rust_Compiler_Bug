{"sha": "7662626f7734b40b8e422c5406d99c55d782f94e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc2NjI2MjZmNzczNGI0MGI4ZTQyMmM1NDA2ZDk5YzU1ZDc4MmY5NGU=", "commit": {"author": {"name": "EFanZh", "email": "efanzh@gmail.com", "date": "2020-12-13T11:23:16Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-12-13T11:23:16Z"}, "message": "Fix `cargo-binutils` link", "tree": {"sha": "35c9168cbd1ef49f5e949fa1be5c307afdd2a53d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/35c9168cbd1ef49f5e949fa1be5c307afdd2a53d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7662626f7734b40b8e422c5406d99c55d782f94e", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJf1fmkCRBK7hj4Ov3rIwAAdHIIAK38hff6wqrcOEQhGOrxVWMs\nyibsDXeEFASu+L2v/MvMWfvWmNcQbwQRkRu8b0DInV/5B5zLntDyMDyvM+7HWqAA\nDDqr9TYiZ078g0YrtkAtr5gf+fAOmFuVtmN5JHrBusZtOQSBrBJnq24MtS0ULakm\nQYvJk+5rUsmWq3y7ENAuGT3Tks2b8Xj1KUgaAlsiEF1in4+g+aH44qlVU3guPw4j\nKjj9FfG8J1x04PqpffJeWmeiEIAXXcjM+JzMR7jJ5MWyzmxK6DCQ3kXy4DwBjQkq\nqT81j5VUNHsKe2HaN+4Aphf1yXpcURjzJ+b8LoTVE1uqyGY+MGUMA110b9SDegE=\n=dYm/\n-----END PGP SIGNATURE-----\n", "payload": "tree 35c9168cbd1ef49f5e949fa1be5c307afdd2a53d\nparent d149b6579fb118ea75b16cb7a6afa62695d88992\nauthor EFanZh <efanzh@gmail.com> 1607858596 +0800\ncommitter GitHub <noreply@github.com> 1607858596 +0800\n\nFix `cargo-binutils` link"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7662626f7734b40b8e422c5406d99c55d782f94e", "html_url": "https://github.com/rust-lang/rust/commit/7662626f7734b40b8e422c5406d99c55d782f94e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7662626f7734b40b8e422c5406d99c55d782f94e/comments", "author": {"login": "EFanZh", "id": 2160692, "node_id": "MDQ6VXNlcjIxNjA2OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/2160692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/EFanZh", "html_url": "https://github.com/EFanZh", "followers_url": "https://api.github.com/users/EFanZh/followers", "following_url": "https://api.github.com/users/EFanZh/following{/other_user}", "gists_url": "https://api.github.com/users/EFanZh/gists{/gist_id}", "starred_url": "https://api.github.com/users/EFanZh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/EFanZh/subscriptions", "organizations_url": "https://api.github.com/users/EFanZh/orgs", "repos_url": "https://api.github.com/users/EFanZh/repos", "events_url": "https://api.github.com/users/EFanZh/events{/privacy}", "received_events_url": "https://api.github.com/users/EFanZh/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d149b6579fb118ea75b16cb7a6afa62695d88992", "url": "https://api.github.com/repos/rust-lang/rust/commits/d149b6579fb118ea75b16cb7a6afa62695d88992", "html_url": "https://github.com/rust-lang/rust/commit/d149b6579fb118ea75b16cb7a6afa62695d88992"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "98bcadd12ee249d08e921e9a566c369373c44dbe", "filename": "src/doc/unstable-book/src/compiler-flags/source-based-code-coverage.md", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/7662626f7734b40b8e422c5406d99c55d782f94e/src%2Fdoc%2Funstable-book%2Fsrc%2Fcompiler-flags%2Fsource-based-code-coverage.md", "raw_url": "https://github.com/rust-lang/rust/raw/7662626f7734b40b8e422c5406d99c55d782f94e/src%2Fdoc%2Funstable-book%2Fsrc%2Fcompiler-flags%2Fsource-based-code-coverage.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Funstable-book%2Fsrc%2Fcompiler-flags%2Fsource-based-code-coverage.md?ref=7662626f7734b40b8e422c5406d99c55d782f94e", "patch": "@@ -118,7 +118,7 @@ LLVM's supplies two tools\u2014`llvm-profdata` and `llvm-cov`\u2014that process covera\n * If you are building the Rust compiler from source, you can optionally use the bundled LLVM tools, built from source. Those tool binaries can typically be found in your build platform directory at something like: `rust/build/x86_64-unknown-linux-gnu/llvm/bin/llvm-*`.\n * You can install compatible versions of these tools via `rustup`.\n \n-The `rustup` option is guaranteed to install a compatible version of the LLVM tools, but they can be hard to find. We recommend [`cargo-bintools`], which installs Rust-specific wrappers around these and other LLVM tools, so you can invoke them via `cargo` commands!\n+The `rustup` option is guaranteed to install a compatible version of the LLVM tools, but they can be hard to find. We recommend [`cargo-binutils`], which installs Rust-specific wrappers around these and other LLVM tools, so you can invoke them via `cargo` commands!\n \n ```shell\n $ rustup component add llvm-tools-preview\n@@ -320,8 +320,8 @@ Rust's implementation and workflow for source-based code coverage is based on th\n [rustc-dev-guide-how-to-build-and-run]: https://rustc-dev-guide.rust-lang.org/building/how-to-build-and-run.html\n [`rustfilt`]: https://crates.io/crates/rustfilt\n [`json5format`]: https://crates.io/crates/json5format\n-[`cargo-bintools`]: https://crates.io/crates/cargo-bintools\n+[`cargo-binutils`]: https://crates.io/crates/cargo-binutils\n [`llvm-profdata merge`]: https://llvm.org/docs/CommandGuide/llvm-profdata.html#profdata-merge\n [`llvm-cov report`]: https://llvm.org/docs/CommandGuide/llvm-cov.html#llvm-cov-report\n [`llvm-cov show`]: https://llvm.org/docs/CommandGuide/llvm-cov.html#llvm-cov-show\n-[source-based code coverage in Clang]: https://clang.llvm.org/docs/SourceBasedCodeCoverage.html\n\\ No newline at end of file\n+[source-based code coverage in Clang]: https://clang.llvm.org/docs/SourceBasedCodeCoverage.html"}]}