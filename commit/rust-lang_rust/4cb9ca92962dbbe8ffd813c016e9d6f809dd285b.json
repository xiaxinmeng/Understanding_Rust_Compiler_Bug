{"sha": "4cb9ca92962dbbe8ffd813c016e9d6f809dd285b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRjYjljYTkyOTYyZGJiZThmZmQ4MTNjMDE2ZTlkNmY4MDlkZDI4NWI=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2013-03-20T01:39:50Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2013-03-20T01:39:50Z"}, "message": "auto merge of #5410 : luqmana/rust/cfg-and, r=graydon\n\nThis adopts the syntax from #2119. No more annoying workarounds involving wrapping in mods!", "tree": {"sha": "a46ec3bfe182286d2d318d4c0a2d903663b870b1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a46ec3bfe182286d2d318d4c0a2d903663b870b1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4cb9ca92962dbbe8ffd813c016e9d6f809dd285b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4cb9ca92962dbbe8ffd813c016e9d6f809dd285b", "html_url": "https://github.com/rust-lang/rust/commit/4cb9ca92962dbbe8ffd813c016e9d6f809dd285b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4cb9ca92962dbbe8ffd813c016e9d6f809dd285b/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "251d0c4557a2f484a6fce1b91e217034b5c82dd3", "url": "https://api.github.com/repos/rust-lang/rust/commits/251d0c4557a2f484a6fce1b91e217034b5c82dd3", "html_url": "https://github.com/rust-lang/rust/commit/251d0c4557a2f484a6fce1b91e217034b5c82dd3"}, {"sha": "811d88024fab449d00682fd6fd0179c153f94fa0", "url": "https://api.github.com/repos/rust-lang/rust/commits/811d88024fab449d00682fd6fd0179c153f94fa0", "html_url": "https://github.com/rust-lang/rust/commit/811d88024fab449d00682fd6fd0179c153f94fa0"}], "stats": {"total": 79, "additions": 65, "deletions": 14}, "files": [{"sha": "2eb44ba6815e318722a628b7e9aba033b62becf4", "filename": "src/compiletest/runtest.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/4cb9ca92962dbbe8ffd813c016e9d6f809dd285b/src%2Fcompiletest%2Fruntest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4cb9ca92962dbbe8ffd813c016e9d6f809dd285b/src%2Fcompiletest%2Fruntest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcompiletest%2Fruntest.rs?ref=4cb9ca92962dbbe8ffd813c016e9d6f809dd285b", "patch": "@@ -208,18 +208,19 @@ actual:\\n\\\n                         testfile: &Path, src: ~str) -> ProcRes {\n         compose_and_run_compiler(\n             config, props, testfile,\n-            make_typecheck_args(config, testfile),\n+            make_typecheck_args(config, props, testfile),\n             Some(src))\n     }\n \n-    fn make_typecheck_args(config: config, testfile: &Path) -> ProcArgs {\n+    fn make_typecheck_args(config: config, props: TestProps, testfile: &Path) -> ProcArgs {\n         let prog = config.rustc_path;\n         let mut args = ~[~\"-\",\n                          ~\"--no-trans\", ~\"--lib\",\n                          ~\"-L\", config.build_base.to_str(),\n                          ~\"-L\",\n                          aux_output_dir_name(config, testfile).to_str()];\n         args += split_maybe_args(config.rustcflags);\n+        args += split_maybe_args(props.compile_flags);\n         return ProcArgs {prog: prog.to_str(), args: args};\n     }\n }"}, {"sha": "39a1fda2c92962c8a8289cfb9a0de94d2b18a44b", "filename": "src/librustc/front/config.rs", "status": "modified", "additions": 13, "deletions": 12, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/4cb9ca92962dbbe8ffd813c016e9d6f809dd285b/src%2Flibrustc%2Ffront%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4cb9ca92962dbbe8ffd813c016e9d6f809dd285b/src%2Flibrustc%2Ffront%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Ffront%2Fconfig.rs?ref=4cb9ca92962dbbe8ffd813c016e9d6f809dd285b", "patch": "@@ -185,18 +185,19 @@ pub fn metas_in_cfg(cfg: ast::crate_cfg,\n     // Pull the inner meta_items from the #[cfg(meta_item, ...)]  attributes,\n     // so we can match against them. This is the list of configurations for\n     // which the item is valid\n-    let cfg_metas =\n-        vec::concat(\n-            vec::filter_map(cfg_metas, |i| attr::get_meta_item_list(i)));\n-\n-    let has_cfg_metas = vec::len(cfg_metas) > 0u;\n-    if !has_cfg_metas { return true; }\n-\n-    for cfg_metas.each |cfg_mi| {\n-        if attr::contains(cfg, *cfg_mi) { return true; }\n-    }\n-\n-    return false;\n+    let cfg_metas = vec::filter_map(cfg_metas, |i| attr::get_meta_item_list(i));\n+\n+    if cfg_metas.all(|c| c.is_empty()) { return true; }\n+\n+    cfg_metas.any(|cfg_meta| {\n+        cfg_meta.all(|cfg_mi| {\n+            match cfg_mi.node {\n+                ast::meta_list(s, ref it) if *s == ~\"not\"\n+                    => it.all(|mi| !attr::contains(cfg, *mi)),\n+                _ => attr::contains(cfg, *cfg_mi)\n+            }\n+        })\n+    })\n }\n \n "}, {"sha": "a090dd9de5d128ebaff4546f29354d13eeded539", "filename": "src/test/compile-fail/test-cfg.rs", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/4cb9ca92962dbbe8ffd813c016e9d6f809dd285b/src%2Ftest%2Fcompile-fail%2Ftest-cfg.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4cb9ca92962dbbe8ffd813c016e9d6f809dd285b/src%2Ftest%2Fcompile-fail%2Ftest-cfg.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Ftest-cfg.rs?ref=4cb9ca92962dbbe8ffd813c016e9d6f809dd285b", "patch": "@@ -0,0 +1,18 @@\n+// Copyright 2012 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// compile-flags: --cfg foo\n+\n+#[cfg(foo, bar)] // foo AND bar\n+fn foo() {}\n+\n+fn main() {\n+    foo(); //~ ERROR unresolved name: `foo`.\n+}"}, {"sha": "47aa683ecd22d70b713f308453d6e3fc11ffa6b2", "filename": "src/test/run-pass/cfgs-on-items.rs", "status": "added", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/rust-lang/rust/blob/4cb9ca92962dbbe8ffd813c016e9d6f809dd285b/src%2Ftest%2Frun-pass%2Fcfgs-on-items.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4cb9ca92962dbbe8ffd813c016e9d6f809dd285b/src%2Ftest%2Frun-pass%2Fcfgs-on-items.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fcfgs-on-items.rs?ref=4cb9ca92962dbbe8ffd813c016e9d6f809dd285b", "patch": "@@ -0,0 +1,31 @@\n+// Copyright 2012 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// xfail-fast\n+// compile-flags: --cfg fooA --cfg fooB\n+\n+// fooA AND !bar\n+#[cfg(fooA, not(bar))]\n+fn foo1() -> int { 1 }\n+\n+// !fooA AND !bar\n+#[cfg(not(fooA, bar))]\n+fn foo2() -> int { 2 }\n+\n+// fooC OR (fooB AND !bar)\n+#[cfg(fooC)]\n+#[cfg(fooB, not(bar))]\n+fn foo2() -> int { 3 }\n+\n+\n+fn main() {\n+    fail_unless!(1 == foo1());\n+    fail_unless!(3 == foo2());\n+}"}]}