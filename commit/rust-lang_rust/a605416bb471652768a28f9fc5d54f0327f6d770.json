{"sha": "a605416bb471652768a28f9fc5d54f0327f6d770", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE2MDU0MTZiYjQ3MTY1Mjc2OGEyOGY5ZmM1ZDU0ZjAzMjdmNmQ3NzA=", "commit": {"author": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2012-10-23T01:05:17Z"}, "committer": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2012-10-23T01:22:21Z"}, "message": "core: add condition.raise_default.", "tree": {"sha": "b4d8b3a7a0cc38b42503beafc10d44244aa891bd", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b4d8b3a7a0cc38b42503beafc10d44244aa891bd"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a605416bb471652768a28f9fc5d54f0327f6d770", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a605416bb471652768a28f9fc5d54f0327f6d770", "html_url": "https://github.com/rust-lang/rust/commit/a605416bb471652768a28f9fc5d54f0327f6d770", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a605416bb471652768a28f9fc5d54f0327f6d770/comments", "author": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "committer": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1048f9abfac08c59d313e0764c909cfa0821a39e", "url": "https://api.github.com/repos/rust-lang/rust/commits/1048f9abfac08c59d313e0764c909cfa0821a39e", "html_url": "https://github.com/rust-lang/rust/commit/1048f9abfac08c59d313e0764c909cfa0821a39e"}], "stats": {"total": 32, "additions": 27, "deletions": 5}, "files": [{"sha": "dd5f9752137fcaa383cbcccf15e2247566301876", "filename": "src/libcore/condition.rs", "status": "modified", "additions": 27, "deletions": 5, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/a605416bb471652768a28f9fc5d54f0327f6d770/src%2Flibcore%2Fcondition.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a605416bb471652768a28f9fc5d54f0327f6d770/src%2Flibcore%2Fcondition.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fcondition.rs?ref=a605416bb471652768a28f9fc5d54f0327f6d770", "patch": "@@ -20,12 +20,18 @@ impl<T, U: Copy>  Condition<T,U> {\n         }\n     }\n \n-    fn raise(t:&T) -> U {\n+    fn raise(t:&T) -> U  {\n+        do self.raise_default(t) {\n+            fail ~\"Unhandled condition\";\n+        }\n+    }\n+\n+    fn raise_default(t:&T, default: fn() -> U) -> U {\n         unsafe {\n             match task::local_data::local_data_pop(self.key) {\n                 None => {\n                     debug!(\"Condition.raise: found no handler\");\n-                    fail\n+                    default()\n                 }\n \n                 Some(handler) => {\n@@ -134,7 +140,6 @@ mod test {\n             trouble(1);\n         }\n \n-\n         assert outer_trapped;\n     }\n \n@@ -174,8 +179,25 @@ mod test {\n             nested_reraise_trap_test_inner();\n         }\n \n-\n         assert outer_trapped;\n     }\n \n-}\n\\ No newline at end of file\n+    #[test]\n+    fn test_default() {\n+        let sadness_condition : Condition<int,int> =\n+            Condition { key: sadness_key };\n+\n+        let mut trapped = false;\n+\n+        do sadness_condition.trap(|j| {\n+            debug!(\"test_default: in handler\");\n+            sadness_condition.raise_default(j, || {trapped=true; 5})\n+        }).in {\n+            debug!(\"test_default: in protected block\");\n+            trouble(1);\n+        }\n+\n+        assert trapped;\n+    }\n+\n+}"}]}