{"sha": "193503eb62aba269b505b99dc1c143645a115e31", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE5MzUwM2ViNjJhYmEyNjliNTA1Yjk5ZGMxYzE0MzY0NWExMTVlMzE=", "commit": {"author": {"name": "Tyler Mandry", "email": "tmandry@gmail.com", "date": "2020-09-10T04:02:38Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-09-10T04:02:38Z"}, "message": "Rollup merge of #76556 - tmandry:revert-76285, r=tmandry\n\nRevert #76285\n\nFixes #76399. Reverting because the issue is P-critical and there are no PRs up to fix it.\n\nr? @Mark-Simulacrum\ncc @matklad @dtolnay", "tree": {"sha": "0d698d42b60ac432aed6ce83a2e9a66e176060be", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0d698d42b60ac432aed6ce83a2e9a66e176060be"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/193503eb62aba269b505b99dc1c143645a115e31", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJfWaVeCRBK7hj4Ov3rIwAAdHIIAGyfYathM8YK42s3sDRnlMiX\nWL3UvXEpy6/syWn1uvzZtQ10DWZGphDTTTSwe49bcTqUlbF121PbM9QLKF5j0TqT\ncv2+qzfeeCh/DtwZF7+MGRRo05KOfqNjylWX0YeKqaW4OukGbPpnl/S+kMdq7QWG\nAcZK+S7YPuIu3I6YaG79xeWkk9NWARIxpOffUzq4+O6DxmxzJbAGp/WSaYtv3LjC\n5cEuJpF/8IyT5EeyNvQwdHQbiBOq0ZcOXN1S8HmFOK2kSp/kdng6K3utKDirYVsm\nATA1sGDI5mUwGj4CKgbb/INKmvvIFvT+sV8yxr2xk25DEHMeuSVm+kueKsiORx8=\n=oLGl\n-----END PGP SIGNATURE-----\n", "payload": "tree 0d698d42b60ac432aed6ce83a2e9a66e176060be\nparent 8bf03c3f62bf750ddde66b0bd566a674674b6226\nparent fdff7defc9a21fc63a1586efab87694723144793\nauthor Tyler Mandry <tmandry@gmail.com> 1599710558 -0700\ncommitter GitHub <noreply@github.com> 1599710558 -0700\n\nRollup merge of #76556 - tmandry:revert-76285, r=tmandry\n\nRevert #76285\n\nFixes #76399. Reverting because the issue is P-critical and there are no PRs up to fix it.\n\nr? @Mark-Simulacrum\ncc @matklad @dtolnay\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/193503eb62aba269b505b99dc1c143645a115e31", "html_url": "https://github.com/rust-lang/rust/commit/193503eb62aba269b505b99dc1c143645a115e31", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/193503eb62aba269b505b99dc1c143645a115e31/comments", "author": {"login": "tmandry", "id": 2280544, "node_id": "MDQ6VXNlcjIyODA1NDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/2280544?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tmandry", "html_url": "https://github.com/tmandry", "followers_url": "https://api.github.com/users/tmandry/followers", "following_url": "https://api.github.com/users/tmandry/following{/other_user}", "gists_url": "https://api.github.com/users/tmandry/gists{/gist_id}", "starred_url": "https://api.github.com/users/tmandry/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tmandry/subscriptions", "organizations_url": "https://api.github.com/users/tmandry/orgs", "repos_url": "https://api.github.com/users/tmandry/repos", "events_url": "https://api.github.com/users/tmandry/events{/privacy}", "received_events_url": "https://api.github.com/users/tmandry/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8bf03c3f62bf750ddde66b0bd566a674674b6226", "url": "https://api.github.com/repos/rust-lang/rust/commits/8bf03c3f62bf750ddde66b0bd566a674674b6226", "html_url": "https://github.com/rust-lang/rust/commit/8bf03c3f62bf750ddde66b0bd566a674674b6226"}, {"sha": "fdff7defc9a21fc63a1586efab87694723144793", "url": "https://api.github.com/repos/rust-lang/rust/commits/fdff7defc9a21fc63a1586efab87694723144793", "html_url": "https://github.com/rust-lang/rust/commit/fdff7defc9a21fc63a1586efab87694723144793"}], "stats": {"total": 41, "additions": 16, "deletions": 25}, "files": [{"sha": "151acddae840e567c171362311ce6813f6603c5b", "filename": "compiler/rustc_ast/src/tokenstream.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/193503eb62aba269b505b99dc1c143645a115e31/compiler%2Frustc_ast%2Fsrc%2Ftokenstream.rs", "raw_url": "https://github.com/rust-lang/rust/raw/193503eb62aba269b505b99dc1c143645a115e31/compiler%2Frustc_ast%2Fsrc%2Ftokenstream.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_ast%2Fsrc%2Ftokenstream.rs?ref=193503eb62aba269b505b99dc1c143645a115e31", "patch": "@@ -403,8 +403,8 @@ impl Cursor {\n         self.index = index;\n     }\n \n-    pub fn look_ahead(&self, n: usize) -> Option<&TokenTree> {\n-        self.stream.0[self.index..].get(n).map(|(tree, _)| tree)\n+    pub fn look_ahead(&self, n: usize) -> Option<TokenTree> {\n+        self.stream.0[self.index..].get(n).map(|(tree, _)| tree.clone())\n     }\n }\n "}, {"sha": "39c82f97e0a39ce3503f084269ba7fba98285941", "filename": "compiler/rustc_expand/src/proc_macro_server.rs", "status": "modified", "additions": 5, "deletions": 17, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/193503eb62aba269b505b99dc1c143645a115e31/compiler%2Frustc_expand%2Fsrc%2Fproc_macro_server.rs", "raw_url": "https://github.com/rust-lang/rust/raw/193503eb62aba269b505b99dc1c143645a115e31/compiler%2Frustc_expand%2Fsrc%2Fproc_macro_server.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_expand%2Fsrc%2Fproc_macro_server.rs?ref=193503eb62aba269b505b99dc1c143645a115e31", "patch": "@@ -47,26 +47,15 @@ impl ToInternal<token::DelimToken> for Delimiter {\n     }\n }\n \n-impl\n-    FromInternal<(\n-        TreeAndJoint,\n-        Option<&'_ tokenstream::TokenTree>,\n-        &'_ ParseSess,\n-        &'_ mut Vec<Self>,\n-    )> for TokenTree<Group, Punct, Ident, Literal>\n+impl FromInternal<(TreeAndJoint, &'_ ParseSess, &'_ mut Vec<Self>)>\n+    for TokenTree<Group, Punct, Ident, Literal>\n {\n     fn from_internal(\n-        ((tree, is_joint), look_ahead, sess, stack): (\n-            TreeAndJoint,\n-            Option<&tokenstream::TokenTree>,\n-            &ParseSess,\n-            &mut Vec<Self>,\n-        ),\n+        ((tree, is_joint), sess, stack): (TreeAndJoint, &ParseSess, &mut Vec<Self>),\n     ) -> Self {\n         use rustc_ast::token::*;\n \n-        let joint = is_joint == Joint\n-            && matches!(look_ahead, Some(tokenstream::TokenTree::Token(t)) if t.is_op());\n+        let joint = is_joint == Joint;\n         let Token { kind, span } = match tree {\n             tokenstream::TokenTree::Delimited(span, delim, tts) => {\n                 let delimiter = Delimiter::from_internal(delim);\n@@ -456,8 +445,7 @@ impl server::TokenStreamIter for Rustc<'_> {\n         loop {\n             let tree = iter.stack.pop().or_else(|| {\n                 let next = iter.cursor.next_with_joint()?;\n-                let lookahead = iter.cursor.look_ahead(0);\n-                Some(TokenTree::from_internal((next, lookahead, self.sess, &mut iter.stack)))\n+                Some(TokenTree::from_internal((next, self.sess, &mut iter.stack)))\n             })?;\n             // A hack used to pass AST fragments to attribute and derive macros\n             // as a single nonterminal token instead of a token stream."}, {"sha": "d5977ca3c7d2fb8a735841b50dc13c578af613b9", "filename": "compiler/rustc_parse/src/lexer/tokentrees.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/193503eb62aba269b505b99dc1c143645a115e31/compiler%2Frustc_parse%2Fsrc%2Flexer%2Ftokentrees.rs", "raw_url": "https://github.com/rust-lang/rust/raw/193503eb62aba269b505b99dc1c143645a115e31/compiler%2Frustc_parse%2Fsrc%2Flexer%2Ftokentrees.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_parse%2Fsrc%2Flexer%2Ftokentrees.rs?ref=193503eb62aba269b505b99dc1c143645a115e31", "patch": "@@ -262,7 +262,10 @@ impl<'a> TokenTreesReader<'a> {\n             }\n             _ => {\n                 let tt = TokenTree::Token(self.token.take());\n-                let is_joint = self.bump();\n+                let mut is_joint = self.bump();\n+                if !self.token.is_op() {\n+                    is_joint = NonJoint;\n+                }\n                 Ok((tt, is_joint))\n             }\n         }"}, {"sha": "84edfecad192fdbccc83accc02578d01eb155396", "filename": "compiler/rustc_parse/src/parser/mod.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/193503eb62aba269b505b99dc1c143645a115e31/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/193503eb62aba269b505b99dc1c143645a115e31/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fmod.rs?ref=193503eb62aba269b505b99dc1c143645a115e31", "patch": "@@ -822,15 +822,15 @@ impl<'a> Parser<'a> {\n         }\n \n         let frame = &self.token_cursor.frame;\n-        match frame.tree_cursor.look_ahead(dist - 1) {\n+        looker(&match frame.tree_cursor.look_ahead(dist - 1) {\n             Some(tree) => match tree {\n-                TokenTree::Token(token) => looker(token),\n+                TokenTree::Token(token) => token,\n                 TokenTree::Delimited(dspan, delim, _) => {\n-                    looker(&Token::new(token::OpenDelim(delim.clone()), dspan.open))\n+                    Token::new(token::OpenDelim(delim), dspan.open)\n                 }\n             },\n-            None => looker(&Token::new(token::CloseDelim(frame.delim), frame.span.close)),\n-        }\n+            None => Token::new(token::CloseDelim(frame.delim), frame.span.close),\n+        })\n     }\n \n     /// Returns whether any of the given keywords are `dist` tokens ahead of the current one."}]}