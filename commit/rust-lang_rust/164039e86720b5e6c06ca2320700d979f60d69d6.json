{"sha": "164039e86720b5e6c06ca2320700d979f60d69d6", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE2NDAzOWU4NjcyMGI1ZTZjMDZjYTIzMjA3MDBkOTc5ZjYwZDY5ZDY=", "commit": {"author": {"name": "Tim Chevalier", "email": "chevalier@alum.wellesley.edu", "date": "2012-05-01T06:26:21Z"}, "committer": {"name": "Tim Chevalier", "email": "chevalier@alum.wellesley.edu", "date": "2012-05-01T15:43:17Z"}, "message": "Don't re-export a glob-imported ID when the same ID is defined within\na module\n\nSee the test case I added (issue-2316-c) for a concrete example.\nissue-2316 also contains the originally reported test case. resolve\nwas using bitwise or instead of logical or when checking exports,\nresulting in excessively eager evaluation. A one-line fix that took\nsix hours to isolate ;-)", "tree": {"sha": "39eb1f09c4548cc8deb53398ec73a1b0b7197c14", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/39eb1f09c4548cc8deb53398ec73a1b0b7197c14"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/164039e86720b5e6c06ca2320700d979f60d69d6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/164039e86720b5e6c06ca2320700d979f60d69d6", "html_url": "https://github.com/rust-lang/rust/commit/164039e86720b5e6c06ca2320700d979f60d69d6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/164039e86720b5e6c06ca2320700d979f60d69d6/comments", "author": {"login": "catamorphism", "id": 427212, "node_id": "MDQ6VXNlcjQyNzIxMg==", "avatar_url": "https://avatars.githubusercontent.com/u/427212?v=4", "gravatar_id": "", "url": "https://api.github.com/users/catamorphism", "html_url": "https://github.com/catamorphism", "followers_url": "https://api.github.com/users/catamorphism/followers", "following_url": "https://api.github.com/users/catamorphism/following{/other_user}", "gists_url": "https://api.github.com/users/catamorphism/gists{/gist_id}", "starred_url": "https://api.github.com/users/catamorphism/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/catamorphism/subscriptions", "organizations_url": "https://api.github.com/users/catamorphism/orgs", "repos_url": "https://api.github.com/users/catamorphism/repos", "events_url": "https://api.github.com/users/catamorphism/events{/privacy}", "received_events_url": "https://api.github.com/users/catamorphism/received_events", "type": "User", "site_admin": false}, "committer": {"login": "catamorphism", "id": 427212, "node_id": "MDQ6VXNlcjQyNzIxMg==", "avatar_url": "https://avatars.githubusercontent.com/u/427212?v=4", "gravatar_id": "", "url": "https://api.github.com/users/catamorphism", "html_url": "https://github.com/catamorphism", "followers_url": "https://api.github.com/users/catamorphism/followers", "following_url": "https://api.github.com/users/catamorphism/following{/other_user}", "gists_url": "https://api.github.com/users/catamorphism/gists{/gist_id}", "starred_url": "https://api.github.com/users/catamorphism/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/catamorphism/subscriptions", "organizations_url": "https://api.github.com/users/catamorphism/orgs", "repos_url": "https://api.github.com/users/catamorphism/repos", "events_url": "https://api.github.com/users/catamorphism/events{/privacy}", "received_events_url": "https://api.github.com/users/catamorphism/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2db4259b3531e0cfa1f6df2ff95e30a4c871a105", "url": "https://api.github.com/repos/rust-lang/rust/commits/2db4259b3531e0cfa1f6df2ff95e30a4c871a105", "html_url": "https://github.com/rust-lang/rust/commit/2db4259b3531e0cfa1f6df2ff95e30a4c871a105"}], "stats": {"total": 51, "additions": 47, "deletions": 4}, "files": [{"sha": "68a721b634554fde8ba5514c1cf3a90c8dd4aad4", "filename": "src/rustc/metadata/csearch.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/164039e86720b5e6c06ca2320700d979f60d69d6/src%2Frustc%2Fmetadata%2Fcsearch.rs", "raw_url": "https://github.com/rust-lang/rust/raw/164039e86720b5e6c06ca2320700d979f60d69d6/src%2Frustc%2Fmetadata%2Fcsearch.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustc%2Fmetadata%2Fcsearch.rs?ref=164039e86720b5e6c06ca2320700d979f60d69d6", "patch": "@@ -70,7 +70,7 @@ fn resolve_path(cstore: cstore::cstore, cnum: ast::crate_num,\n             result += [(cnum, cm.data, def)];\n         } else {\n             if cm.cnum_map.contains_key(def.crate) {\n-                // This reexport is itself a reexport from anther crate\n+                // This reexport is itself a reexport from another crate\n                 let next_cnum = cm.cnum_map.get(def.crate);\n                 let next_cm_data = cstore::get_crate_data(cstore, next_cnum);\n                 result += [(next_cnum, next_cm_data.data, def)];"}, {"sha": "7ed403c237d7e2872fd84a16f51f170875e8a5b0", "filename": "src/rustc/middle/resolve.rs", "status": "modified", "additions": 12, "deletions": 3, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/164039e86720b5e6c06ca2320700d979f60d69d6/src%2Frustc%2Fmiddle%2Fresolve.rs", "raw_url": "https://github.com/rust-lang/rust/raw/164039e86720b5e6c06ca2320700d979f60d69d6/src%2Frustc%2Fmiddle%2Fresolve.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustc%2Fmiddle%2Fresolve.rs?ref=164039e86720b5e6c06ca2320700d979f60d69d6", "patch": "@@ -1667,9 +1667,12 @@ fn ns_for_def(d: def) -> namespace {\n fn lookup_external(e: env, cnum: int, ids: [ident], ns: namespace) ->\n    option<def> {\n     let mut result = none;\n+    let mut done = false;\n     for csearch::lookup_defs(e.sess.cstore, cnum, ids).each {|d|\n         e.ext_map.insert(def_id_of_def(d), ids);\n-        if ns == ns_for_def(d) { result = some(d); }\n+        if ns == ns_for_def(d) && !done {\n+                result = some(d);\n+         }\n     }\n     ret result;\n }\n@@ -1998,8 +2001,14 @@ fn check_exports(e: @env) {\n                 }\n             }\n         }\n-        found_something |= lookup_glob_any(e, _mod, vi.span, ident,\n-                                           export_id);\n+        /*\n+          This code previously used bitwise or (|=) but that was wrong,\n+          because we need or to be lazy here. If something was already\n+          found, we don't want to call lookup_glob_any (see #2316 for\n+          what happens if we do)\n+         */\n+        found_something = found_something ||\n+           lookup_glob_any(e, _mod, vi.span, ident, export_id);\n         if !found_something {\n             e.sess.span_warn(vi.span,\n                              #fmt(\"exported item %s is not defined\", ident));"}, {"sha": "418ddc0b06926078f293e50ee8e2296ac9fc002e", "filename": "src/test/auxiliary/issue_2316_a.rs", "status": "added", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/164039e86720b5e6c06ca2320700d979f60d69d6/src%2Ftest%2Fauxiliary%2Fissue_2316_a.rs", "raw_url": "https://github.com/rust-lang/rust/raw/164039e86720b5e6c06ca2320700d979f60d69d6/src%2Ftest%2Fauxiliary%2Fissue_2316_a.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fauxiliary%2Fissue_2316_a.rs?ref=164039e86720b5e6c06ca2320700d979f60d69d6", "patch": "@@ -0,0 +1,3 @@\n+enum cat {\n+  tabby, calico, tortoiseshell\n+}"}, {"sha": "c1be44d19f92c830624d97884837132d129b2b8b", "filename": "src/test/auxiliary/issue_2316_b.rs", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/164039e86720b5e6c06ca2320700d979f60d69d6/src%2Ftest%2Fauxiliary%2Fissue_2316_b.rs", "raw_url": "https://github.com/rust-lang/rust/raw/164039e86720b5e6c06ca2320700d979f60d69d6/src%2Ftest%2Fauxiliary%2Fissue_2316_b.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fauxiliary%2Fissue_2316_b.rs?ref=164039e86720b5e6c06ca2320700d979f60d69d6", "patch": "@@ -0,0 +1,16 @@\n+use issue_2316_a;\n+\n+mod cloth {\n+\n+import issue_2316_a::*;\n+\n+export calico, gingham, flannel;\n+export fabric;\n+\n+enum fabric {\n+  gingham, flannel, calico\n+}\n+\n+}\n+\n+"}, {"sha": "27f4d89a93b4145eb04ad34eade981a8498ab15d", "filename": "src/test/run-pass/issue-2316-c.rs", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/164039e86720b5e6c06ca2320700d979f60d69d6/src%2Ftest%2Frun-pass%2Fissue-2316-c.rs", "raw_url": "https://github.com/rust-lang/rust/raw/164039e86720b5e6c06ca2320700d979f60d69d6/src%2Ftest%2Frun-pass%2Fissue-2316-c.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-2316-c.rs?ref=164039e86720b5e6c06ca2320700d979f60d69d6", "patch": "@@ -0,0 +1,10 @@\n+// xfail-fast - check-fast doesn't understand aux-build\n+// aux-build:issue_2316_a.rs\n+// aux-build:issue_2316_b.rs\n+\n+use issue_2316_b;\n+import issue_2316_b::cloth;\n+\n+fn main() {\n+  let _c: cloth::fabric = cloth::calico;\n+}\n\\ No newline at end of file"}, {"sha": "a95b9841c2418f91c22b756931c1ed79bc9a718e", "filename": "src/test/run-pass/issue-2316.rs", "status": "added", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/164039e86720b5e6c06ca2320700d979f60d69d6/src%2Ftest%2Frun-pass%2Fissue-2316.rs", "raw_url": "https://github.com/rust-lang/rust/raw/164039e86720b5e6c06ca2320700d979f60d69d6/src%2Ftest%2Frun-pass%2Fissue-2316.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-2316.rs?ref=164039e86720b5e6c06ca2320700d979f60d69d6", "patch": "@@ -0,0 +1,5 @@\n+use rustc;\n+import rustc::middle::ty;\n+fn main() {\n+  let _t: ty::sty = rustc::middle::ty::ty_nil;\n+}"}]}