{"sha": "0bd7d81805df16c8d1f200b13e485f6dda22f104", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBiZDdkODE4MDVkZjE2YzhkMWYyMDBiMTNlNDg1ZjZkZGEyMmYxMDQ=", "commit": {"author": {"name": "adamrk", "email": "ark.email@gmail.com", "date": "2020-04-28T19:13:37Z"}, "committer": {"name": "adamrk", "email": "ark.email@gmail.com", "date": "2020-04-28T19:13:37Z"}, "message": "Fix comment prefix method for four slash comments", "tree": {"sha": "34009cc9dc3b541ddcc3047377eb497bae150bd4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/34009cc9dc3b541ddcc3047377eb497bae150bd4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0bd7d81805df16c8d1f200b13e485f6dda22f104", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0bd7d81805df16c8d1f200b13e485f6dda22f104", "html_url": "https://github.com/rust-lang/rust/commit/0bd7d81805df16c8d1f200b13e485f6dda22f104", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0bd7d81805df16c8d1f200b13e485f6dda22f104/comments", "author": {"login": "adamrk", "id": 16367467, "node_id": "MDQ6VXNlcjE2MzY3NDY3", "avatar_url": "https://avatars.githubusercontent.com/u/16367467?v=4", "gravatar_id": "", "url": "https://api.github.com/users/adamrk", "html_url": "https://github.com/adamrk", "followers_url": "https://api.github.com/users/adamrk/followers", "following_url": "https://api.github.com/users/adamrk/following{/other_user}", "gists_url": "https://api.github.com/users/adamrk/gists{/gist_id}", "starred_url": "https://api.github.com/users/adamrk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/adamrk/subscriptions", "organizations_url": "https://api.github.com/users/adamrk/orgs", "repos_url": "https://api.github.com/users/adamrk/repos", "events_url": "https://api.github.com/users/adamrk/events{/privacy}", "received_events_url": "https://api.github.com/users/adamrk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "adamrk", "id": 16367467, "node_id": "MDQ6VXNlcjE2MzY3NDY3", "avatar_url": "https://avatars.githubusercontent.com/u/16367467?v=4", "gravatar_id": "", "url": "https://api.github.com/users/adamrk", "html_url": "https://github.com/adamrk", "followers_url": "https://api.github.com/users/adamrk/followers", "following_url": "https://api.github.com/users/adamrk/following{/other_user}", "gists_url": "https://api.github.com/users/adamrk/gists{/gist_id}", "starred_url": "https://api.github.com/users/adamrk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/adamrk/subscriptions", "organizations_url": "https://api.github.com/users/adamrk/orgs", "repos_url": "https://api.github.com/users/adamrk/repos", "events_url": "https://api.github.com/users/adamrk/events{/privacy}", "received_events_url": "https://api.github.com/users/adamrk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b6560e3ebb80a7a96b3c3598ecba232f799fe93f", "url": "https://api.github.com/repos/rust-lang/rust/commits/b6560e3ebb80a7a96b3c3598ecba232f799fe93f", "html_url": "https://github.com/rust-lang/rust/commit/b6560e3ebb80a7a96b3c3598ecba232f799fe93f"}], "stats": {"total": 16, "additions": 6, "deletions": 10}, "files": [{"sha": "74906d8a62efe732ef6f4b765e0c132264327e7e", "filename": "crates/ra_syntax/src/ast/tokens.rs", "status": "modified", "additions": 6, "deletions": 10, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/0bd7d81805df16c8d1f200b13e485f6dda22f104/crates%2Fra_syntax%2Fsrc%2Fast%2Ftokens.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0bd7d81805df16c8d1f200b13e485f6dda22f104/crates%2Fra_syntax%2Fsrc%2Fast%2Ftokens.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Fsrc%2Fast%2Ftokens.rs?ref=0bd7d81805df16c8d1f200b13e485f6dda22f104", "patch": "@@ -13,7 +13,12 @@ impl Comment {\n     }\n \n     pub fn prefix(&self) -> &'static str {\n-        prefix_by_kind(self.kind())\n+        for (prefix, k) in COMMENT_PREFIX_TO_KIND.iter() {\n+            if *k == self.kind() && self.text().starts_with(prefix) {\n+                return prefix;\n+            }\n+        }\n+        unreachable!()\n     }\n }\n \n@@ -70,15 +75,6 @@ fn kind_by_prefix(text: &str) -> CommentKind {\n     panic!(\"bad comment text: {:?}\", text)\n }\n \n-fn prefix_by_kind(kind: CommentKind) -> &'static str {\n-    for (prefix, k) in COMMENT_PREFIX_TO_KIND.iter() {\n-        if *k == kind {\n-            return prefix;\n-        }\n-    }\n-    unreachable!()\n-}\n-\n impl Whitespace {\n     pub fn spans_multiple_lines(&self) -> bool {\n         let text = self.text();"}]}