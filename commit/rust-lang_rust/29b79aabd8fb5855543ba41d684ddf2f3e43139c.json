{"sha": "29b79aabd8fb5855543ba41d684ddf2f3e43139c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI5Yjc5YWFiZDhmYjU4NTU1NDNiYTQxZDY4NGRkZjJmM2U0MzEzOWM=", "commit": {"author": {"name": "Huon Wilson", "email": "dbau.pp+github@gmail.com", "date": "2015-08-11T01:09:07Z"}, "committer": {"name": "Huon Wilson", "email": "dbau.pp+github@gmail.com", "date": "2015-08-17T21:41:39Z"}, "message": "Add most AVX intrinsics.", "tree": {"sha": "bc44b68854ba597524a311f2502ff27906500160", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bc44b68854ba597524a311f2502ff27906500160"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/29b79aabd8fb5855543ba41d684ddf2f3e43139c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/29b79aabd8fb5855543ba41d684ddf2f3e43139c", "html_url": "https://github.com/rust-lang/rust/commit/29b79aabd8fb5855543ba41d684ddf2f3e43139c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/29b79aabd8fb5855543ba41d684ddf2f3e43139c/comments", "author": {"login": "huonw", "id": 1203825, "node_id": "MDQ6VXNlcjEyMDM4MjU=", "avatar_url": "https://avatars.githubusercontent.com/u/1203825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/huonw", "html_url": "https://github.com/huonw", "followers_url": "https://api.github.com/users/huonw/followers", "following_url": "https://api.github.com/users/huonw/following{/other_user}", "gists_url": "https://api.github.com/users/huonw/gists{/gist_id}", "starred_url": "https://api.github.com/users/huonw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/huonw/subscriptions", "organizations_url": "https://api.github.com/users/huonw/orgs", "repos_url": "https://api.github.com/users/huonw/repos", "events_url": "https://api.github.com/users/huonw/events{/privacy}", "received_events_url": "https://api.github.com/users/huonw/received_events", "type": "User", "site_admin": false}, "committer": {"login": "huonw", "id": 1203825, "node_id": "MDQ6VXNlcjEyMDM4MjU=", "avatar_url": "https://avatars.githubusercontent.com/u/1203825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/huonw", "html_url": "https://github.com/huonw", "followers_url": "https://api.github.com/users/huonw/followers", "following_url": "https://api.github.com/users/huonw/following{/other_user}", "gists_url": "https://api.github.com/users/huonw/gists{/gist_id}", "starred_url": "https://api.github.com/users/huonw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/huonw/subscriptions", "organizations_url": "https://api.github.com/users/huonw/orgs", "repos_url": "https://api.github.com/users/huonw/repos", "events_url": "https://api.github.com/users/huonw/events{/privacy}", "received_events_url": "https://api.github.com/users/huonw/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "67d56db16fe1e8190d704572de41941e568ed568", "url": "https://api.github.com/repos/rust-lang/rust/commits/67d56db16fe1e8190d704572de41941e568ed568", "html_url": "https://github.com/rust-lang/rust/commit/67d56db16fe1e8190d704572de41941e568ed568"}], "stats": {"total": 32, "additions": 32, "deletions": 0}, "files": [{"sha": "49b55dbc48754579998be271e83fee1ea99f2a5d", "filename": "src/librustc_platform_intrinsics/x86.rs", "status": "modified", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/29b79aabd8fb5855543ba41d684ddf2f3e43139c/src%2Flibrustc_platform_intrinsics%2Fx86.rs", "raw_url": "https://github.com/rust-lang/rust/raw/29b79aabd8fb5855543ba41d684ddf2f3e43139c/src%2Flibrustc_platform_intrinsics%2Fx86.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_platform_intrinsics%2Fx86.rs?ref=29b79aabd8fb5855543ba41d684ddf2f3e43139c", "patch": "@@ -93,10 +93,42 @@ pub fn find<'tcx>(_tcx: &ty::ctxt<'tcx>, name: &str) -> Option<Intrinsic> {\n             \"testc_si128\" => p!(\"sse41.ptestc\", (i64x2, i64x2) -> i32),\n             \"testnzc_si128\" => p!(\"sse41.ptestnzc\", (i64x2, i64x2) -> i32),\n             \"testz_si128\" => p!(\"sse41.ptestz\", (i64x2, i64x2) -> i32),\n+\n+            \"permutevar_pd\" => p!(\"avx.vpermilvar.pd\", (f64x2, i64x2) -> f64x2),\n+            \"permutevar_ps\" => p!(\"avx.vpermilvar.ps\", (f32x4, i32x4) -> f32x4),\n+            \"testc_pd\" => p!(\"avx.vtestc.pd\", (f64x2, f64x2) -> i32),\n+            \"testc_ps\" => p!(\"avx.vtestc.ps\", (f32x4, f32x4) -> i32),\n+            \"testnzc_pd\" => p!(\"avx.vtestnzc.pd\", (f64x2, f64x2) -> i32),\n+            \"testnzc_ps\" => p!(\"avx.vtestnzc.ps\", (f32x4, f32x4) -> i32),\n+            \"testz_pd\" => p!(\"avx.vtestz.pd\", (f64x2, f64x2) -> i32),\n+            \"testz_ps\" => p!(\"avx.vtestz.ps\", (f32x4, f32x4) -> i32),\n+\n             _ => return None\n         })\n     } else if name.starts_with(\"mm256_\") {\n         Some(match &name[\"mm256_\".len()..] {\n+            \"addsub_pd\" => p!(\"avx.addsub.pd.256\", (f64x4, f64x4) -> f64x4),\n+            \"addsub_ps\" => p!(\"avx.addsub.ps.256\", (f32x8, f32x8) -> f32x8),\n+            \"hadd_pd\" => p!(\"avx.hadd.pd.256\", (f64x4, f64x4) -> f64x4),\n+            \"hadd_ps\" => p!(\"avx.hadd.ps.256\", (f32x8, f32x8) -> f32x8),\n+            \"hsub_pd\" => p!(\"avx.hsub.pd.256\", (f64x4, f64x4) -> f64x4),\n+            \"hsub_ps\" => p!(\"avx.hsub.ps.256\", (f32x8, f32x8) -> f32x8),\n+            \"max_pd\" => p!(\"avx.max.pd.256\", (f64x4, f64x4) -> f64x4),\n+            \"max_ps\" => p!(\"avx.max.ps.256\", (f32x8, f32x8) -> f32x8),\n+            \"min_pd\" => p!(\"avx.min.pd.256\", (f64x4, f64x4) -> f64x4),\n+            \"min_ps\" => p!(\"avx.min.ps.256\", (f32x8, f32x8) -> f32x8),\n+            \"permutevar_pd\" => p!(\"avx.vpermilvar.pd.256\", (f64x4, i64x4) -> f64x4),\n+            \"permutevar_ps\" => p!(\"avx.vpermilvar.ps.256\", (f32x8, i32x8) -> f32x8),\n+            \"rcp_ps\" => p!(\"avx.rcp.ps.256\", (f32x8) -> f32x8),\n+            \"rsqrt_ps\" => p!(\"avx.rsqrt.ps.256\", (f32x8) -> f32x8),\n+            \"sqrt_pd\" => p!(\"llvm.sqrt.v4f64\", (f64x4) -> f64x4),\n+            \"sqrt_ps\" => p!(\"llvm.sqrt.v8f32\", (f32x8) -> f32x8),\n+            \"testc_pd\" => p!(\"avx.vtestc.pd.256\", (f64x4, f64x4) -> i32),\n+            \"testc_ps\" => p!(\"avx.vtestc.ps.256\", (f32x8, f32x8) -> i32),\n+            \"testnzc_pd\" => p!(\"avx.vtestnzc.pd.256\", (f64x4, f64x4) -> i32),\n+            \"testnzc_ps\" => p!(\"avx.vtestnzc.ps.256\", (f32x8, f32x8) -> i32),\n+            \"testz_pd\" => p!(\"avx.vtestz.pd.256\", (f64x4, f64x4) -> i32),\n+            \"testz_ps\" => p!(\"avx.vtestz.ps.256\", (f32x8, f32x8) -> i32),\n             _ => return None,\n         })\n     } else {"}]}