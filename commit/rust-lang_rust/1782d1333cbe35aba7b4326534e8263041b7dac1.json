{"sha": "1782d1333cbe35aba7b4326534e8263041b7dac1", "node_id": "C_kwDOAAsO6NoAKDE3ODJkMTMzM2NiZTM1YWJhN2I0MzI2NTM0ZTgyNjMwNDFiN2RhYzE", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2021-10-23T03:28:24Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-10-23T03:28:24Z"}, "message": "Rollup merge of #90070 - llogiq:compiletest-config-edition, r=Mark-Simulacrum\n\nAdd edition configuration to compiletest\n\nThis allows the compiletest configuration to set a default edition that can still be overridden with header annotations. Doing this will make it far easier for clippy to get our tests to the newest edition.\n\nr? ```@Manishearth```", "tree": {"sha": "e5cc87ebda630c474a2bc868b92c30b7ec24f4f2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e5cc87ebda630c474a2bc868b92c30b7ec24f4f2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1782d1333cbe35aba7b4326534e8263041b7dac1", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJhc4FZCRBK7hj4Ov3rIwAAyI8IAGAnfp+zayyymkj1ktjGWx3d\nolJb616Z5j7HNEsDu5XAdX4hMQ+cYoaxiCuQgTztbJTdgUvr1HYdBU2fLhBi53+8\nU6w2Vp/DeP5bGTdaesJcBzt0omAFJ7K1ssfDlbAw5Obx3+IKfhoQNaj2wBZMGd3S\n18bDme54Z3QsCaGru2XftWoru6kGoDhkgqQqbCkT2oofGeqcxDufp0Pj6P3Ak54B\nhOlbSnst16vByW2MkvpYOjUNRWCeFYg7maAsbm+CGCMEZMRg4CgTfAps44iIWMf7\nPleG3XRDNYeEHpKoUuy01b4SIwmxiM9WKXwKW/zi+hC+IXy2kPBwnkNvpjWM4lU=\n=mgd5\n-----END PGP SIGNATURE-----\n", "payload": "tree e5cc87ebda630c474a2bc868b92c30b7ec24f4f2\nparent 8fb194c86f100a443b6e637f0ff8e4c0148a4f05\nparent 65b3c853178b04c5cbe41f26e6a1b1b90d7b8cc6\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1634959704 +0200\ncommitter GitHub <noreply@github.com> 1634959704 +0200\n\nRollup merge of #90070 - llogiq:compiletest-config-edition, r=Mark-Simulacrum\n\nAdd edition configuration to compiletest\n\nThis allows the compiletest configuration to set a default edition that can still be overridden with header annotations. Doing this will make it far easier for clippy to get our tests to the newest edition.\n\nr? ```@Manishearth```\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1782d1333cbe35aba7b4326534e8263041b7dac1", "html_url": "https://github.com/rust-lang/rust/commit/1782d1333cbe35aba7b4326534e8263041b7dac1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1782d1333cbe35aba7b4326534e8263041b7dac1/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8fb194c86f100a443b6e637f0ff8e4c0148a4f05", "url": "https://api.github.com/repos/rust-lang/rust/commits/8fb194c86f100a443b6e637f0ff8e4c0148a4f05", "html_url": "https://github.com/rust-lang/rust/commit/8fb194c86f100a443b6e637f0ff8e4c0148a4f05"}, {"sha": "65b3c853178b04c5cbe41f26e6a1b1b90d7b8cc6", "url": "https://api.github.com/repos/rust-lang/rust/commits/65b3c853178b04c5cbe41f26e6a1b1b90d7b8cc6", "html_url": "https://github.com/rust-lang/rust/commit/65b3c853178b04c5cbe41f26e6a1b1b90d7b8cc6"}], "stats": {"total": 13, "additions": 12, "deletions": 1}, "files": [{"sha": "82fe790a576ab04c8fccc84af8bb1ebc1c1fcdb1", "filename": "src/tools/compiletest/src/common.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/1782d1333cbe35aba7b4326534e8263041b7dac1/src%2Ftools%2Fcompiletest%2Fsrc%2Fcommon.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1782d1333cbe35aba7b4326534e8263041b7dac1/src%2Ftools%2Fcompiletest%2Fsrc%2Fcommon.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fcompiletest%2Fsrc%2Fcommon.rs?ref=1782d1333cbe35aba7b4326534e8263041b7dac1", "patch": "@@ -349,6 +349,9 @@ pub struct Config {\n     /// The current Rust channel\n     pub channel: String,\n \n+    /// The default Rust edition\n+    pub edition: Option<String>,\n+\n     // Configuration for various run-make tests frobbing things like C compilers\n     // or querying about various LLVM component information.\n     pub cc: String,"}, {"sha": "98d1ee19f69a1ca8bdfb88a533d2d6c41eb5a34b", "filename": "src/tools/compiletest/src/header.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/1782d1333cbe35aba7b4326534e8263041b7dac1/src%2Ftools%2Fcompiletest%2Fsrc%2Fheader.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1782d1333cbe35aba7b4326534e8263041b7dac1/src%2Ftools%2Fcompiletest%2Fsrc%2Fheader.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fcompiletest%2Fsrc%2Fheader.rs?ref=1782d1333cbe35aba7b4326534e8263041b7dac1", "patch": "@@ -222,6 +222,7 @@ impl TestProps {\n     /// `//[foo]`), then the property is ignored unless `cfg` is\n     /// `Some(\"foo\")`.\n     fn load_from(&mut self, testfile: &Path, cfg: Option<&str>, config: &Config) {\n+        let mut has_edition = false;\n         if !testfile.is_dir() {\n             let file = File::open(testfile).unwrap();\n \n@@ -240,6 +241,7 @@ impl TestProps {\n \n                 if let Some(edition) = config.parse_edition(ln) {\n                     self.compile_flags.push(format!(\"--edition={}\", edition));\n+                    has_edition = true;\n                     if edition == \"2021\" {\n                         self.compile_flags.push(\"-Zunstable-options\".to_string());\n                     }\n@@ -391,6 +393,10 @@ impl TestProps {\n                 }\n             }\n         }\n+\n+        if let (Some(edition), false) = (&config.edition, has_edition) {\n+            self.compile_flags.push(format!(\"--edition={}\", edition));\n+        }\n     }\n \n     fn update_fail_mode(&mut self, ln: &str, config: &Config) {"}, {"sha": "58cde108b33221987b025fd0e5dcae64f8c5e8ff", "filename": "src/tools/compiletest/src/main.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1782d1333cbe35aba7b4326534e8263041b7dac1/src%2Ftools%2Fcompiletest%2Fsrc%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1782d1333cbe35aba7b4326534e8263041b7dac1/src%2Ftools%2Fcompiletest%2Fsrc%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fcompiletest%2Fsrc%2Fmain.rs?ref=1782d1333cbe35aba7b4326534e8263041b7dac1", "patch": "@@ -147,7 +147,8 @@ pub fn parse_config(args: Vec<String>) -> Config {\n         )\n         .optflag(\"\", \"force-rerun\", \"rerun tests even if the inputs are unchanged\")\n         .optflag(\"h\", \"help\", \"show this message\")\n-        .reqopt(\"\", \"channel\", \"current Rust channel\", \"CHANNEL\");\n+        .reqopt(\"\", \"channel\", \"current Rust channel\", \"CHANNEL\")\n+        .optopt(\"\", \"edition\", \"default Rust edition\", \"EDITION\");\n \n     let (argv0, args_) = args.split_first().unwrap();\n     if args.len() == 1 || args[1] == \"-h\" || args[1] == \"--help\" {\n@@ -282,6 +283,7 @@ pub fn parse_config(args: Vec<String>) -> Config {\n         rustfix_coverage: matches.opt_present(\"rustfix-coverage\"),\n         has_tidy,\n         channel: matches.opt_str(\"channel\").unwrap(),\n+        edition: matches.opt_str(\"edition\"),\n \n         cc: matches.opt_str(\"cc\").unwrap(),\n         cxx: matches.opt_str(\"cxx\").unwrap(),"}]}