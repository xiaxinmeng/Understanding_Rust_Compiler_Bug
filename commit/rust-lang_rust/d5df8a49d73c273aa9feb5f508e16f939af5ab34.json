{"sha": "d5df8a49d73c273aa9feb5f508e16f939af5ab34", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ1ZGY4YTQ5ZDczYzI3M2FhOWZlYjVmNTA4ZTE2ZjkzOWFmNWFiMzQ=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2019-02-19T20:25:39Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2019-02-19T20:25:39Z"}, "message": "improve wording", "tree": {"sha": "ab5ed574a16deb0fcfba1e0254fa154ec7b88362", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ab5ed574a16deb0fcfba1e0254fa154ec7b88362"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d5df8a49d73c273aa9feb5f508e16f939af5ab34", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d5df8a49d73c273aa9feb5f508e16f939af5ab34", "html_url": "https://github.com/rust-lang/rust/commit/d5df8a49d73c273aa9feb5f508e16f939af5ab34", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d5df8a49d73c273aa9feb5f508e16f939af5ab34/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2c6981a315df920fa83607bc3f858e39af5abfde", "url": "https://api.github.com/repos/rust-lang/rust/commits/2c6981a315df920fa83607bc3f858e39af5abfde", "html_url": "https://github.com/rust-lang/rust/commit/2c6981a315df920fa83607bc3f858e39af5abfde"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "2395dce9693d1baf38c6455a47ad30ee091803d0", "filename": "src/libcore/pin.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/d5df8a49d73c273aa9feb5f508e16f939af5ab34/src%2Flibcore%2Fpin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d5df8a49d73c273aa9feb5f508e16f939af5ab34/src%2Flibcore%2Fpin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fpin.rs?ref=d5df8a49d73c273aa9feb5f508e16f939af5ab34", "patch": "@@ -205,8 +205,8 @@\n //!    does not cause unsoundness.)\n //! 5. You must not offer any other operations that could lead to data being moved out of\n //!    the fields when your type is pinned. This is usually not a concern, but can become\n-//!    tricky when interior mutability is involved. For example, imagine `RefCell`\n-//!    would have a method `fn get_pin_mut(self: Pin<&mut Self>) -> Pin<&mut T>`.\n+//!    tricky when interior mutability is involved. For example, imagine if `RefCell`\n+//!    had a method `fn get_pin_mut(self: Pin<&mut Self>) -> Pin<&mut T>`.\n //!    Then we could do the following:\n //!    ```compile_fail\n //!    fn exploit_ref_cell<T>(rc: Pin<&mut RefCell<T>) {"}]}