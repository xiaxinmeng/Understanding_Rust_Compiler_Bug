{"sha": "6067315d58ff3d49b305ae3c99810656856c8e21", "node_id": "MDY6Q29tbWl0NzI0NzEyOjYwNjczMTVkNThmZjNkNDliMzA1YWUzYzk5ODEwNjU2ODU2YzhlMjE=", "commit": {"author": {"name": "Josh Stone", "email": "jistone@redhat.com", "date": "2020-03-30T21:03:39Z"}, "committer": {"name": "Josh Stone", "email": "jistone@redhat.com", "date": "2020-03-30T22:40:56Z"}, "message": "Ensure LLVM is in the link path for \"fulldeps\" tests\n\nThis is a follow-up to #70123, which added `llvm-config --libdir` to the\n`LIBRARY_PATH` for rustc tools. We need the same for \"run-make-fulldeps\"\nand \"ui-fulldeps\" tests which depend on compiler libraries, implicitly\nneeding to link to `-lLLVM` as well.", "tree": {"sha": "12fe99bce88ec9816e989af60ffd64ebe7ba496d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/12fe99bce88ec9816e989af60ffd64ebe7ba496d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6067315d58ff3d49b305ae3c99810656856c8e21", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6067315d58ff3d49b305ae3c99810656856c8e21", "html_url": "https://github.com/rust-lang/rust/commit/6067315d58ff3d49b305ae3c99810656856c8e21", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6067315d58ff3d49b305ae3c99810656856c8e21/comments", "author": {"login": "cuviper", "id": 36186, "node_id": "MDQ6VXNlcjM2MTg2", "avatar_url": "https://avatars.githubusercontent.com/u/36186?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cuviper", "html_url": "https://github.com/cuviper", "followers_url": "https://api.github.com/users/cuviper/followers", "following_url": "https://api.github.com/users/cuviper/following{/other_user}", "gists_url": "https://api.github.com/users/cuviper/gists{/gist_id}", "starred_url": "https://api.github.com/users/cuviper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cuviper/subscriptions", "organizations_url": "https://api.github.com/users/cuviper/orgs", "repos_url": "https://api.github.com/users/cuviper/repos", "events_url": "https://api.github.com/users/cuviper/events{/privacy}", "received_events_url": "https://api.github.com/users/cuviper/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cuviper", "id": 36186, "node_id": "MDQ6VXNlcjM2MTg2", "avatar_url": "https://avatars.githubusercontent.com/u/36186?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cuviper", "html_url": "https://github.com/cuviper", "followers_url": "https://api.github.com/users/cuviper/followers", "following_url": "https://api.github.com/users/cuviper/following{/other_user}", "gists_url": "https://api.github.com/users/cuviper/gists{/gist_id}", "starred_url": "https://api.github.com/users/cuviper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cuviper/subscriptions", "organizations_url": "https://api.github.com/users/cuviper/orgs", "repos_url": "https://api.github.com/users/cuviper/repos", "events_url": "https://api.github.com/users/cuviper/events{/privacy}", "received_events_url": "https://api.github.com/users/cuviper/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9a12971da5c08f9a95d54bdaef5cd83698ed4509", "url": "https://api.github.com/repos/rust-lang/rust/commits/9a12971da5c08f9a95d54bdaef5cd83698ed4509", "html_url": "https://github.com/rust-lang/rust/commit/9a12971da5c08f9a95d54bdaef5cd83698ed4509"}], "stats": {"total": 11, "additions": 10, "deletions": 1}, "files": [{"sha": "2499856235f100b6b03a9bed6fcf2f8624d87eac", "filename": "src/bootstrap/test.rs", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/6067315d58ff3d49b305ae3c99810656856c8e21/src%2Fbootstrap%2Ftest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6067315d58ff3d49b305ae3c99810656856c8e21/src%2Fbootstrap%2Ftest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Ftest.rs?ref=6067315d58ff3d49b305ae3c99810656856c8e21", "patch": "@@ -21,7 +21,7 @@ use crate::flags::Subcommand;\n use crate::native;\n use crate::tool::{self, SourceType, Tool};\n use crate::toolstate::ToolState;\n-use crate::util::{self, dylib_path, dylib_path_var};\n+use crate::util::{self, add_link_lib_path, dylib_path, dylib_path_var};\n use crate::Crate as CargoCrate;\n use crate::{envify, DocTests, GitRepo, Mode};\n \n@@ -1178,6 +1178,15 @@ impl Step for Compiletest {\n                 cmd.arg(\"--system-llvm\");\n             }\n \n+            // Tests that use compiler libraries may inherit the `-lLLVM` link\n+            // requirement, but the `-L` library path is not propagated across\n+            // separate compilations. We can add LLVM's library path to the\n+            // platform-specific environment variable as a workaround.\n+            if !builder.config.dry_run && suite.ends_with(\"fulldeps\") {\n+                let llvm_libdir = output(Command::new(&llvm_config).arg(\"--libdir\"));\n+                add_link_lib_path(vec![llvm_libdir.trim().into()], &mut cmd);\n+            }\n+\n             // Only pass correct values for these flags for the `run-make` suite as it\n             // requires that a C++ compiler was configured which isn't always the case.\n             if !builder.config.dry_run && suite == \"run-make-fulldeps\" {"}]}