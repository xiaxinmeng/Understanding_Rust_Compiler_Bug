{"sha": "db1ec446160ef990675082f3208616de3157a91f", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRiMWVjNDQ2MTYwZWY5OTA2NzUwODJmMzIwODYxNmRlMzE1N2E5MWY=", "commit": {"author": {"name": "Philipp Hansch", "email": "dev@phansch.net", "date": "2018-03-30T10:36:30Z"}, "committer": {"name": "Philipp Hansch", "email": "dev@phansch.net", "date": "2018-03-30T10:36:50Z"}, "message": "Handle nested block comments", "tree": {"sha": "7e56ee9dbca2ab21e4916cc0e0337e602ff2b034", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7e56ee9dbca2ab21e4916cc0e0337e602ff2b034"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/db1ec446160ef990675082f3208616de3157a91f", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQItBAABCAAXBQJavhNCEBxkZXZAcGhhbnNjaC5uZXQACgkQk/szRZ0xHl60vw/8\nCydPjZH97OnuQ5JoETcznlDD3tfc3yRCja3dUJL+jVmkwmQ+gujySlS0hODd76lc\nIqe4PJDtSjoGMD6s0RbKus2GJHFgPf6MuCEYumvsU2dkqcs8KhpJsFP8XFgbPmHr\nsgLTXlFbLqw4FhApA9r2rIIToG0Vq5h3UtcN6dgBm3OcFvEv3ZwuUZ/L7u2yZI2o\nj6WufzDbYGlM1UOCFMoDQiP/l7btbKJQsRuStdDr10UiZHjHRXp7MUWViXxLHRB1\njbMK5+Vg5Dk8srMP2zOrVMUVs9y86s1AV2IOJX7lqk5evYe7XNVOpfJrZOrPDIiy\nqLb08w0dIm2T+CsVTnCv8ZmfIQpD7l7BI+yhqhu0raKtkDpySKiXgMNNTtuu1U+6\nFX3qYPfv30NT/QwZ+nsFZmGb0dCpsrKLaXuZuug00sjo9sUqZdlO9bxaci+q0zOZ\niyWxKKzeO9CzfG8vU4W3A+wekm0R4PbviXVM6mFTk5XiliwQLb6kPRYFLuBPM9j2\ngnVq1pVTrk+RKp1TFPS5zWnQFNcNVngzLtXpL2FWUvioB5WukisKzDPeSBLvMcZP\nPMHubyWwDeAi8owPuT/MiqQBwsMbZJwaPgEn++EdWGNmvk3qofjM464gdLBzegGw\nuMd8hVHgQ7hBfilmlmDL1HUfw7tR1zRyPwQtnCVXOqA=\n=RBa1\n-----END PGP SIGNATURE-----", "payload": "tree 7e56ee9dbca2ab21e4916cc0e0337e602ff2b034\nparent bb4af196beb20d485b2b56dff8fa023f6ee00a56\nauthor Philipp Hansch <dev@phansch.net> 1522406190 +0200\ncommitter Philipp Hansch <dev@phansch.net> 1522406210 +0200\n\nHandle nested block comments\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/db1ec446160ef990675082f3208616de3157a91f", "html_url": "https://github.com/rust-lang/rust/commit/db1ec446160ef990675082f3208616de3157a91f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/db1ec446160ef990675082f3208616de3157a91f/comments", "author": {"login": "phansch", "id": 2042399, "node_id": "MDQ6VXNlcjIwNDIzOTk=", "avatar_url": "https://avatars.githubusercontent.com/u/2042399?v=4", "gravatar_id": "", "url": "https://api.github.com/users/phansch", "html_url": "https://github.com/phansch", "followers_url": "https://api.github.com/users/phansch/followers", "following_url": "https://api.github.com/users/phansch/following{/other_user}", "gists_url": "https://api.github.com/users/phansch/gists{/gist_id}", "starred_url": "https://api.github.com/users/phansch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/phansch/subscriptions", "organizations_url": "https://api.github.com/users/phansch/orgs", "repos_url": "https://api.github.com/users/phansch/repos", "events_url": "https://api.github.com/users/phansch/events{/privacy}", "received_events_url": "https://api.github.com/users/phansch/received_events", "type": "User", "site_admin": false}, "committer": {"login": "phansch", "id": 2042399, "node_id": "MDQ6VXNlcjIwNDIzOTk=", "avatar_url": "https://avatars.githubusercontent.com/u/2042399?v=4", "gravatar_id": "", "url": "https://api.github.com/users/phansch", "html_url": "https://github.com/phansch", "followers_url": "https://api.github.com/users/phansch/followers", "following_url": "https://api.github.com/users/phansch/following{/other_user}", "gists_url": "https://api.github.com/users/phansch/gists{/gist_id}", "starred_url": "https://api.github.com/users/phansch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/phansch/subscriptions", "organizations_url": "https://api.github.com/users/phansch/orgs", "repos_url": "https://api.github.com/users/phansch/repos", "events_url": "https://api.github.com/users/phansch/events{/privacy}", "received_events_url": "https://api.github.com/users/phansch/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bb4af196beb20d485b2b56dff8fa023f6ee00a56", "url": "https://api.github.com/repos/rust-lang/rust/commits/bb4af196beb20d485b2b56dff8fa023f6ee00a56", "html_url": "https://github.com/rust-lang/rust/commit/bb4af196beb20d485b2b56dff8fa023f6ee00a56"}], "stats": {"total": 25, "additions": 19, "deletions": 6}, "files": [{"sha": "e3a7fc851b15215dd57da374bc40294cd3a03fdf", "filename": "clippy_lints/src/utils/mod.rs", "status": "modified", "additions": 4, "deletions": 5, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/db1ec446160ef990675082f3208616de3157a91f/clippy_lints%2Fsrc%2Futils%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/db1ec446160ef990675082f3208616de3157a91f/clippy_lints%2Fsrc%2Futils%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Futils%2Fmod.rs?ref=db1ec446160ef990675082f3208616de3157a91f", "patch": "@@ -1101,19 +1101,18 @@ pub fn clip(tcx: TyCtxt, u: u128, ity: ast::UintTy) -> u128 {\n pub fn without_block_comments(lines: Vec<&str>) -> Vec<&str> {\n     let mut without = vec![];\n \n-    // naive approach for block comments\n-    let mut inside_comment = false;\n+    let mut nest_level = 0;\n \n     for line in lines.into_iter() {\n         if line.contains(\"/*\") {\n-            inside_comment = true;\n+            nest_level += 1;\n             continue;\n         } else if line.contains(\"*/\") {\n-            inside_comment = false;\n+            nest_level -= 1;\n             continue;\n         }\n \n-        if !inside_comment {\n+        if nest_level == 0 {\n             without.push(line);\n         }\n     }"}, {"sha": "30063dac0a4659ff7c88717df115b86c9b862326", "filename": "tests/ui/empty_line_after_outer_attribute.rs", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/db1ec446160ef990675082f3208616de3157a91f/tests%2Fui%2Fempty_line_after_outer_attribute.rs", "raw_url": "https://github.com/rust-lang/rust/raw/db1ec446160ef990675082f3208616de3157a91f/tests%2Fui%2Fempty_line_after_outer_attribute.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fempty_line_after_outer_attribute.rs?ref=db1ec446160ef990675082f3208616de3157a91f", "patch": "@@ -79,11 +79,16 @@ pub enum FooFighter {\n     Bar4\n }\n \n-// This should not produce a warning because there is a comment in between\n+// This should not produce a warning because the empty line is inside a block comment\n #[crate_type = \"lib\"]\n /*\n \n */\n pub struct S;\n \n+// This should not produce a warning\n+#[crate_type = \"lib\"]\n+/* test */\n+pub struct T;\n+\n fn main() { }"}, {"sha": "375df05754497b3e9482bf3d0375f8cf4ef37725", "filename": "tests/without_block_comments.rs", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/db1ec446160ef990675082f3208616de3157a91f/tests%2Fwithout_block_comments.rs", "raw_url": "https://github.com/rust-lang/rust/raw/db1ec446160ef990675082f3208616de3157a91f/tests%2Fwithout_block_comments.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fwithout_block_comments.rs?ref=db1ec446160ef990675082f3208616de3157a91f", "patch": "@@ -15,6 +15,15 @@ fn test_lines_without_block_comments() {\n     let result = without_block_comments(vec![\"/* rust\", \"\", \"*/\"]);\n     assert!(result.is_empty());\n \n+    let result = without_block_comments(vec![\"/* one-line comment */\"]);\n+    assert!(result.is_empty());\n+\n+    let result = without_block_comments(vec![\"/* nested\", \"/* multi-line\",  \"comment\",  \"*/\", \"test\", \"*/\"]);\n+    assert!(result.is_empty());\n+\n+    let result = without_block_comments(vec![\"/* nested /* inline /* comment */ test */ */\"]);\n+    assert!(result.is_empty());\n+\n     let result = without_block_comments(vec![\"foo\", \"bar\", \"baz\"]);\n     assert_eq!(result, vec![\"foo\", \"bar\", \"baz\"]);\n }"}]}