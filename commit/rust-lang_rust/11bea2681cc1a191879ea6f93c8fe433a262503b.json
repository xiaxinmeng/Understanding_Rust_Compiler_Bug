{"sha": "11bea2681cc1a191879ea6f93c8fe433a262503b", "node_id": "C_kwDOAAsO6NoAKDExYmVhMjY4MWNjMWExOTE4NzllYTZmOTNjOGZlNDMzYTI2MjUwM2I", "commit": {"author": {"name": "Yacin Tmimi", "email": "yacintmimi@gmail.com", "date": "2022-01-11T02:48:22Z"}, "committer": {"name": "Yacin Tmimi", "email": "yacintmimi@gmail.com", "date": "2022-01-11T03:38:15Z"}, "message": "Update AsmArgs field visibility for rustfmt\n\nTo more easily allow rustfmt to format the asm! macro as specified in\nrust-dev-tools/fmt-rfcs#152 certain fields are made public.", "tree": {"sha": "8d010ea3c2144971fc7407dbd8c7be6c5a14b91f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8d010ea3c2144971fc7407dbd8c7be6c5a14b91f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/11bea2681cc1a191879ea6f93c8fe433a262503b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/11bea2681cc1a191879ea6f93c8fe433a262503b", "html_url": "https://github.com/rust-lang/rust/commit/11bea2681cc1a191879ea6f93c8fe433a262503b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/11bea2681cc1a191879ea6f93c8fe433a262503b/comments", "author": {"login": "ytmimi", "id": 29028348, "node_id": "MDQ6VXNlcjI5MDI4MzQ4", "avatar_url": "https://avatars.githubusercontent.com/u/29028348?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ytmimi", "html_url": "https://github.com/ytmimi", "followers_url": "https://api.github.com/users/ytmimi/followers", "following_url": "https://api.github.com/users/ytmimi/following{/other_user}", "gists_url": "https://api.github.com/users/ytmimi/gists{/gist_id}", "starred_url": "https://api.github.com/users/ytmimi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ytmimi/subscriptions", "organizations_url": "https://api.github.com/users/ytmimi/orgs", "repos_url": "https://api.github.com/users/ytmimi/repos", "events_url": "https://api.github.com/users/ytmimi/events{/privacy}", "received_events_url": "https://api.github.com/users/ytmimi/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ytmimi", "id": 29028348, "node_id": "MDQ6VXNlcjI5MDI4MzQ4", "avatar_url": "https://avatars.githubusercontent.com/u/29028348?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ytmimi", "html_url": "https://github.com/ytmimi", "followers_url": "https://api.github.com/users/ytmimi/followers", "following_url": "https://api.github.com/users/ytmimi/following{/other_user}", "gists_url": "https://api.github.com/users/ytmimi/gists{/gist_id}", "starred_url": "https://api.github.com/users/ytmimi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ytmimi/subscriptions", "organizations_url": "https://api.github.com/users/ytmimi/orgs", "repos_url": "https://api.github.com/users/ytmimi/repos", "events_url": "https://api.github.com/users/ytmimi/events{/privacy}", "received_events_url": "https://api.github.com/users/ytmimi/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f1ce0e6a00593493a12e0e3662119786c761f375", "url": "https://api.github.com/repos/rust-lang/rust/commits/f1ce0e6a00593493a12e0e3662119786c761f375", "html_url": "https://github.com/rust-lang/rust/commit/f1ce0e6a00593493a12e0e3662119786c761f375"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "caf8ac77df187d1ac75bb1203c03c4153192c981", "filename": "compiler/rustc_builtin_macros/src/asm.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/11bea2681cc1a191879ea6f93c8fe433a262503b/compiler%2Frustc_builtin_macros%2Fsrc%2Fasm.rs", "raw_url": "https://github.com/rust-lang/rust/raw/11bea2681cc1a191879ea6f93c8fe433a262503b/compiler%2Frustc_builtin_macros%2Fsrc%2Fasm.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_builtin_macros%2Fsrc%2Fasm.rs?ref=11bea2681cc1a191879ea6f93c8fe433a262503b", "patch": "@@ -16,13 +16,13 @@ use rustc_target::asm::InlineAsmArch;\n use smallvec::smallvec;\n \n pub struct AsmArgs {\n-    templates: Vec<P<ast::Expr>>,\n-    operands: Vec<(ast::InlineAsmOperand, Span)>,\n+    pub templates: Vec<P<ast::Expr>>,\n+    pub operands: Vec<(ast::InlineAsmOperand, Span)>,\n     named_args: FxHashMap<Symbol, usize>,\n     reg_args: FxHashSet<usize>,\n-    clobber_abis: Vec<(Symbol, Span)>,\n+    pub clobber_abis: Vec<(Symbol, Span)>,\n     options: ast::InlineAsmOptions,\n-    options_spans: Vec<Span>,\n+    pub options_spans: Vec<Span>,\n }\n \n fn parse_args<'a>("}]}