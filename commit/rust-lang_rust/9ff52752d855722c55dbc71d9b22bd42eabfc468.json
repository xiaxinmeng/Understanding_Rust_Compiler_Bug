{"sha": "9ff52752d855722c55dbc71d9b22bd42eabfc468", "node_id": "MDY6Q29tbWl0NzI0NzEyOjlmZjUyNzUyZDg1NTcyMmM1NWRiYzcxZDliMjJiZDQyZWFiZmM0Njg=", "commit": {"author": {"name": "Pietro Albini", "email": "pietro@pietroalbini.org", "date": "2019-08-01T14:00:22Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-08-01T14:00:22Z"}, "message": "Rollup merge of #62644 - arnottcr:std_io-doc, r=steveklabnik\n\nsimplify std::io::Write::write rustdoc\n\nThe std::io::Write::write method currensly suggests consumers guaranteed\nthat `0 <= n <= buf.len()`, for `Ok(n)`, however `n` is of type `usize`\ncausing the compiler to emit a warning:\n```\nwarning: comparison is useless due to type limits\n --> lib.rs:6:18\n  |\n6 |         Ok(n) => 0 <= n && n <= output.len(),\n  |                  ^^^^^^\n  |\n  = note: #[warn(unused_comparisons)] on by default\n```\n\nThis PR removes the suggestion to check `0 <= n` since it is moot.\n\nr? @steveklabnik", "tree": {"sha": "8d643be7ee50ed26edcfdeca5ae0630e2a81b181", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8d643be7ee50ed26edcfdeca5ae0630e2a81b181"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9ff52752d855722c55dbc71d9b22bd42eabfc468", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJdQvB2CRBK7hj4Ov3rIwAAdHIIAHcEN1MEJdsM6xG17TWkJu8z\n2X/IYBlZ+cSYtxjNOgwPlZYgKEc1olcswdxoDkY1CUqTojbKfkj6Y9G7mcXIvQoj\nnKJxe6J9gKhTfSIYUOKWQSCGweFcee29ln611t1emGiwycc18ilrelVZy+OLgFJu\nU0IPSWGsu2CYbA4Ip6j6kTv4TZZZxeYyXht5dyl1CUj+1L2AKzVPilcIcOIZd4Eg\n7Kok3TkxAGFFO37X6peJcNsBqKPS+1uhS4iV1uv//lQTjRtX1r964Le1WUP2vjO3\no2D/QNni/2LWg9dlghlXrPFX8nY51hYTOSIQ0UWAPZw1i45UqZcqQTsn1XdlCFI=\n=o0ZQ\n-----END PGP SIGNATURE-----\n", "payload": "tree 8d643be7ee50ed26edcfdeca5ae0630e2a81b181\nparent a17951c4f80eb5208030f91fdb4ae93919fa6b12\nparent e8e13f04b2218fbc5faa9774a1b5bba9296f3389\nauthor Pietro Albini <pietro@pietroalbini.org> 1564668022 +0200\ncommitter GitHub <noreply@github.com> 1564668022 +0200\n\nRollup merge of #62644 - arnottcr:std_io-doc, r=steveklabnik\n\nsimplify std::io::Write::write rustdoc\n\nThe std::io::Write::write method currensly suggests consumers guaranteed\nthat `0 <= n <= buf.len()`, for `Ok(n)`, however `n` is of type `usize`\ncausing the compiler to emit a warning:\n```\nwarning: comparison is useless due to type limits\n --> lib.rs:6:18\n  |\n6 |         Ok(n) => 0 <= n && n <= output.len(),\n  |                  ^^^^^^\n  |\n  = note: #[warn(unused_comparisons)] on by default\n```\n\nThis PR removes the suggestion to check `0 <= n` since it is moot.\n\nr? @steveklabnik\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9ff52752d855722c55dbc71d9b22bd42eabfc468", "html_url": "https://github.com/rust-lang/rust/commit/9ff52752d855722c55dbc71d9b22bd42eabfc468", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9ff52752d855722c55dbc71d9b22bd42eabfc468/comments", "author": {"login": "pietroalbini", "id": 2299951, "node_id": "MDQ6VXNlcjIyOTk5NTE=", "avatar_url": "https://avatars.githubusercontent.com/u/2299951?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pietroalbini", "html_url": "https://github.com/pietroalbini", "followers_url": "https://api.github.com/users/pietroalbini/followers", "following_url": "https://api.github.com/users/pietroalbini/following{/other_user}", "gists_url": "https://api.github.com/users/pietroalbini/gists{/gist_id}", "starred_url": "https://api.github.com/users/pietroalbini/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pietroalbini/subscriptions", "organizations_url": "https://api.github.com/users/pietroalbini/orgs", "repos_url": "https://api.github.com/users/pietroalbini/repos", "events_url": "https://api.github.com/users/pietroalbini/events{/privacy}", "received_events_url": "https://api.github.com/users/pietroalbini/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a17951c4f80eb5208030f91fdb4ae93919fa6b12", "url": "https://api.github.com/repos/rust-lang/rust/commits/a17951c4f80eb5208030f91fdb4ae93919fa6b12", "html_url": "https://github.com/rust-lang/rust/commit/a17951c4f80eb5208030f91fdb4ae93919fa6b12"}, {"sha": "e8e13f04b2218fbc5faa9774a1b5bba9296f3389", "url": "https://api.github.com/repos/rust-lang/rust/commits/e8e13f04b2218fbc5faa9774a1b5bba9296f3389", "html_url": "https://github.com/rust-lang/rust/commit/e8e13f04b2218fbc5faa9774a1b5bba9296f3389"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "f89a7144437154a6382c808eb29c538ce6c95265", "filename": "src/libstd/io/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9ff52752d855722c55dbc71d9b22bd42eabfc468/src%2Flibstd%2Fio%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9ff52752d855722c55dbc71d9b22bd42eabfc468/src%2Flibstd%2Fio%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fio%2Fmod.rs?ref=9ff52752d855722c55dbc71d9b22bd42eabfc468", "patch": "@@ -1105,7 +1105,7 @@ pub trait Write {\n     /// an [`Err`] variant.\n     ///\n     /// If the return value is [`Ok(n)`] then it must be guaranteed that\n-    /// `0 <= n <= buf.len()`. A return value of `0` typically means that the\n+    /// `n <= buf.len()`. A return value of `0` typically means that the\n     /// underlying object is no longer able to accept bytes and will likely not\n     /// be able to in the future as well, or that the buffer provided is empty.\n     ///"}]}