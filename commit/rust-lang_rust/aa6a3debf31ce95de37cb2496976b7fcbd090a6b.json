{"sha": "aa6a3debf31ce95de37cb2496976b7fcbd090a6b", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFhNmEzZGViZjMxY2U5NWRlMzdjYjI0OTY5NzZiN2ZjYmQwOTBhNmI=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2011-06-30T07:35:05Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2011-06-30T17:06:26Z"}, "message": "Add missing expression variants to fold_expr", "tree": {"sha": "de508f2e14b8e4b279c57af47c06b962b1b9343c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/de508f2e14b8e4b279c57af47c06b962b1b9343c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/aa6a3debf31ce95de37cb2496976b7fcbd090a6b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/aa6a3debf31ce95de37cb2496976b7fcbd090a6b", "html_url": "https://github.com/rust-lang/rust/commit/aa6a3debf31ce95de37cb2496976b7fcbd090a6b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/aa6a3debf31ce95de37cb2496976b7fcbd090a6b/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1f0c25406c8842dcb4c3832b14388dca3ccf35c8", "url": "https://api.github.com/repos/rust-lang/rust/commits/1f0c25406c8842dcb4c3832b14388dca3ccf35c8", "html_url": "https://github.com/rust-lang/rust/commit/1f0c25406c8842dcb4c3832b14388dca3ccf35c8"}], "stats": {"total": 15, "additions": 15, "deletions": 0}, "files": [{"sha": "5676d7045016176606323ff255d96d7e252e0bb1", "filename": "src/comp/front/fold.rs", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/aa6a3debf31ce95de37cb2496976b7fcbd090a6b/src%2Fcomp%2Ffront%2Ffold.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aa6a3debf31ce95de37cb2496976b7fcbd090a6b/src%2Fcomp%2Ffront%2Ffold.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Ffront%2Ffold.rs?ref=aa6a3debf31ce95de37cb2496976b7fcbd090a6b", "patch": "@@ -346,6 +346,11 @@ fn noop_fold_expr(&expr_ e, ast_fold fld) -> expr_ {\n             expr_if(fld.fold_expr(cond), fld.fold_block(tr), \n                     option::map(fld.fold_expr, fl))\n                 }\n+        case (expr_ternary(?cond, ?tr, ?fl)) {\n+            expr_ternary(fld.fold_expr(cond),\n+                         fld.fold_expr(tr),\n+                         fld.fold_expr(fl))\n+                }\n         case (expr_while(?cond, ?body)) {\n             expr_while(fld.fold_expr(cond), fld.fold_block(body))\n                 }\n@@ -363,6 +368,9 @@ fn noop_fold_expr(&expr_ e, ast_fold fld) -> expr_ {\n         case (expr_alt(?expr, ?arms)) {\n             expr_alt(fld.fold_expr(expr), map(fld.fold_arm, arms))\n                 }\n+        case (expr_fn(?f)) {\n+            expr_fn(fld.fold_fn(f))\n+                }\n         case (expr_block(?block)) {\n             expr_block(fld.fold_block(block))\n                 }\n@@ -372,6 +380,9 @@ fn noop_fold_expr(&expr_ e, ast_fold fld) -> expr_ {\n         case (expr_assign(?el, ?er)) {\n             expr_assign(fld.fold_expr(el), fld.fold_expr(er))\n                 }\n+        case (expr_swap(?el, ?er)) {\n+            expr_swap(fld.fold_expr(el), fld.fold_expr(er))\n+                }\n         case (expr_assign_op(?op, ?el, ?er)) {\n             expr_assign_op(op, fld.fold_expr(el), fld.fold_expr(er))\n                 }\n@@ -407,6 +418,10 @@ fn noop_fold_expr(&expr_ e, ast_fold fld) -> expr_ {\n         case (expr_log(?lv, ?e)) { expr_log(lv, fld.fold_expr(e)) }\n         case (expr_assert(?e)) { expr_assert(fld.fold_expr(e)) }\n         case (expr_check(?m, ?e)) { expr_check(m, fld.fold_expr(e)) }\n+        case (expr_if_check(?cond, ?tr, ?fl)) {\n+            expr_if_check(fld.fold_expr(cond), fld.fold_block(tr), \n+                          option::map(fld.fold_expr, fl))\n+                }\n         case (expr_port(?ot)) { \n             expr_port(alt(ot) {\n                     case (option::some(?t)) { option::some(fld.fold_ty(t)) }"}]}