{"sha": "8abafd085aab9b703711b49d02b66910c8c2d739", "node_id": "C_kwDOAAsO6NoAKDhhYmFmZDA4NWFhYjliNzAzNzExYjQ5ZDAyYjY2OTEwYzhjMmQ3Mzk", "commit": {"author": {"name": "John K\u00e5re Alsaker", "email": "john.kare.alsaker@gmail.com", "date": "2023-05-28T13:54:52Z"}, "committer": {"name": "John K\u00e5re Alsaker", "email": "john.kare.alsaker@gmail.com", "date": "2023-05-28T13:54:52Z"}, "message": "Add some comments", "tree": {"sha": "d9e497e6a05d1d94668c14fa3693a685208ff486", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d9e497e6a05d1d94668c14fa3693a685208ff486"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8abafd085aab9b703711b49d02b66910c8c2d739", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8abafd085aab9b703711b49d02b66910c8c2d739", "html_url": "https://github.com/rust-lang/rust/commit/8abafd085aab9b703711b49d02b66910c8c2d739", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8abafd085aab9b703711b49d02b66910c8c2d739/comments", "author": {"login": "Zoxc", "id": 25784, "node_id": "MDQ6VXNlcjI1Nzg0", "avatar_url": "https://avatars.githubusercontent.com/u/25784?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Zoxc", "html_url": "https://github.com/Zoxc", "followers_url": "https://api.github.com/users/Zoxc/followers", "following_url": "https://api.github.com/users/Zoxc/following{/other_user}", "gists_url": "https://api.github.com/users/Zoxc/gists{/gist_id}", "starred_url": "https://api.github.com/users/Zoxc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Zoxc/subscriptions", "organizations_url": "https://api.github.com/users/Zoxc/orgs", "repos_url": "https://api.github.com/users/Zoxc/repos", "events_url": "https://api.github.com/users/Zoxc/events{/privacy}", "received_events_url": "https://api.github.com/users/Zoxc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Zoxc", "id": 25784, "node_id": "MDQ6VXNlcjI1Nzg0", "avatar_url": "https://avatars.githubusercontent.com/u/25784?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Zoxc", "html_url": "https://github.com/Zoxc", "followers_url": "https://api.github.com/users/Zoxc/followers", "following_url": "https://api.github.com/users/Zoxc/following{/other_user}", "gists_url": "https://api.github.com/users/Zoxc/gists{/gist_id}", "starred_url": "https://api.github.com/users/Zoxc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Zoxc/subscriptions", "organizations_url": "https://api.github.com/users/Zoxc/orgs", "repos_url": "https://api.github.com/users/Zoxc/repos", "events_url": "https://api.github.com/users/Zoxc/events{/privacy}", "received_events_url": "https://api.github.com/users/Zoxc/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5843858c015614c92515f317ce93796c885ca2cf", "url": "https://api.github.com/repos/rust-lang/rust/commits/5843858c015614c92515f317ce93796c885ca2cf", "html_url": "https://github.com/rust-lang/rust/commit/5843858c015614c92515f317ce93796c885ca2cf"}], "stats": {"total": 4, "additions": 4, "deletions": 0}, "files": [{"sha": "40cbf14958e77de715935be419a6e6531b757893", "filename": "compiler/rustc_data_structures/src/sharded.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/8abafd085aab9b703711b49d02b66910c8c2d739/compiler%2Frustc_data_structures%2Fsrc%2Fsharded.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8abafd085aab9b703711b49d02b66910c8c2d739/compiler%2Frustc_data_structures%2Fsrc%2Fsharded.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_data_structures%2Fsrc%2Fsharded.rs?ref=8abafd085aab9b703711b49d02b66910c8c2d739", "patch": "@@ -20,6 +20,9 @@ pub const SHARDS: usize = 1 << SHARD_BITS;\n \n /// An array of cache-line aligned inner locked structures with convenience methods.\n pub struct Sharded<T> {\n+    /// This mask is used to ensure that accesses are inbounds of `shards`.\n+    /// When dynamic thread safety is off, this field is set to 0 causing only\n+    /// a single shard to be used for greater cache efficiency.\n     #[cfg(parallel_compiler)]\n     mask: usize,\n     shards: [CacheAligned<Lock<T>>; SHARDS],\n@@ -56,6 +59,7 @@ impl<T> Sharded<T> {\n \n     #[inline(always)]\n     fn count(&self) -> usize {\n+        // `self.mask` is always one below the used shard count\n         self.mask() + 1\n     }\n "}]}