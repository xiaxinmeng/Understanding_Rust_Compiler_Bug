{"sha": "b78201aee550045246e824000a35bf445a84c7ee", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI3ODIwMWFlZTU1MDA0NTI0NmU4MjQwMDBhMzViZjQ0NWE4NGM3ZWU=", "commit": {"author": {"name": "M Farkas-Dyck", "email": "strake888@gmail.com", "date": "2018-08-09T09:27:48Z"}, "committer": {"name": "M Farkas-Dyck", "email": "strake888@gmail.com", "date": "2018-08-09T09:27:48Z"}, "message": "inline some short functions", "tree": {"sha": "8c7413288beccd3055e90cc884ad66b00d3e01ae", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8c7413288beccd3055e90cc884ad66b00d3e01ae"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b78201aee550045246e824000a35bf445a84c7ee", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b78201aee550045246e824000a35bf445a84c7ee", "html_url": "https://github.com/rust-lang/rust/commit/b78201aee550045246e824000a35bf445a84c7ee", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b78201aee550045246e824000a35bf445a84c7ee/comments", "author": {"login": "strake", "id": 976729, "node_id": "MDQ6VXNlcjk3NjcyOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/976729?v=4", "gravatar_id": "", "url": "https://api.github.com/users/strake", "html_url": "https://github.com/strake", "followers_url": "https://api.github.com/users/strake/followers", "following_url": "https://api.github.com/users/strake/following{/other_user}", "gists_url": "https://api.github.com/users/strake/gists{/gist_id}", "starred_url": "https://api.github.com/users/strake/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/strake/subscriptions", "organizations_url": "https://api.github.com/users/strake/orgs", "repos_url": "https://api.github.com/users/strake/repos", "events_url": "https://api.github.com/users/strake/events{/privacy}", "received_events_url": "https://api.github.com/users/strake/received_events", "type": "User", "site_admin": false}, "committer": {"login": "strake", "id": 976729, "node_id": "MDQ6VXNlcjk3NjcyOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/976729?v=4", "gravatar_id": "", "url": "https://api.github.com/users/strake", "html_url": "https://github.com/strake", "followers_url": "https://api.github.com/users/strake/followers", "following_url": "https://api.github.com/users/strake/following{/other_user}", "gists_url": "https://api.github.com/users/strake/gists{/gist_id}", "starred_url": "https://api.github.com/users/strake/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/strake/subscriptions", "organizations_url": "https://api.github.com/users/strake/orgs", "repos_url": "https://api.github.com/users/strake/repos", "events_url": "https://api.github.com/users/strake/events{/privacy}", "received_events_url": "https://api.github.com/users/strake/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ebe8df41d70d8763e0a15aefe078b035d3519214", "url": "https://api.github.com/repos/rust-lang/rust/commits/ebe8df41d70d8763e0a15aefe078b035d3519214", "html_url": "https://github.com/rust-lang/rust/commit/ebe8df41d70d8763e0a15aefe078b035d3519214"}], "stats": {"total": 10, "additions": 10, "deletions": 0}, "files": [{"sha": "58d6c4f5e09236640c8be496f352e6797c84c5ef", "filename": "src/libcore/cmp.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b78201aee550045246e824000a35bf445a84c7ee/src%2Flibcore%2Fcmp.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b78201aee550045246e824000a35bf445a84c7ee/src%2Flibcore%2Fcmp.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fcmp.rs?ref=b78201aee550045246e824000a35bf445a84c7ee", "patch": "@@ -469,6 +469,7 @@ pub trait Ord: Eq + PartialOrd<Self> {\n     /// assert_eq!(2, 2.max(2));\n     /// ```\n     #[stable(feature = \"ord_max_min\", since = \"1.21.0\")]\n+    #[inline]\n     fn max(self, other: Self) -> Self\n     where Self: Sized {\n         if other >= self { other } else { self }\n@@ -485,6 +486,7 @@ pub trait Ord: Eq + PartialOrd<Self> {\n     /// assert_eq!(2, 2.min(2));\n     /// ```\n     #[stable(feature = \"ord_max_min\", since = \"1.21.0\")]\n+    #[inline]\n     fn min(self, other: Self) -> Self\n     where Self: Sized {\n         if self <= other { self } else { other }"}, {"sha": "f743fbfd0752b6931151abf9c54146d64141e2d1", "filename": "src/libcore/option.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/b78201aee550045246e824000a35bf445a84c7ee/src%2Flibcore%2Foption.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b78201aee550045246e824000a35bf445a84c7ee/src%2Flibcore%2Foption.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Foption.rs?ref=b78201aee550045246e824000a35bf445a84c7ee", "patch": "@@ -1141,6 +1141,7 @@ unsafe impl<'a, A> TrustedLen for Iter<'a, A> {}\n \n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n impl<'a, A> Clone for Iter<'a, A> {\n+    #[inline]\n     fn clone(&self) -> Iter<'a, A> {\n         Iter { inner: self.inner.clone() }\n     }\n@@ -1307,14 +1308,17 @@ impl<T> ops::Try for Option<T> {\n     type Ok = T;\n     type Error = NoneError;\n \n+    #[inline]\n     fn into_result(self) -> Result<T, NoneError> {\n         self.ok_or(NoneError)\n     }\n \n+    #[inline]\n     fn from_ok(v: T) -> Self {\n         Some(v)\n     }\n \n+    #[inline]\n     fn from_error(_: NoneError) -> Self {\n         None\n     }"}, {"sha": "ac908342655b6ea88229c123dd63a05e72f407c2", "filename": "src/libcore/result.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/b78201aee550045246e824000a35bf445a84c7ee/src%2Flibcore%2Fresult.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b78201aee550045246e824000a35bf445a84c7ee/src%2Flibcore%2Fresult.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fresult.rs?ref=b78201aee550045246e824000a35bf445a84c7ee", "patch": "@@ -1084,6 +1084,7 @@ unsafe impl<'a, A> TrustedLen for Iter<'a, A> {}\n \n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n impl<'a, T> Clone for Iter<'a, T> {\n+    #[inline]\n     fn clone(&self) -> Iter<'a, T> { Iter { inner: self.inner } }\n }\n \n@@ -1235,14 +1236,17 @@ impl<T,E> ops::Try for Result<T, E> {\n     type Ok = T;\n     type Error = E;\n \n+    #[inline]\n     fn into_result(self) -> Self {\n         self\n     }\n \n+    #[inline]\n     fn from_ok(v: T) -> Self {\n         Ok(v)\n     }\n \n+    #[inline]\n     fn from_error(v: E) -> Self {\n         Err(v)\n     }"}]}