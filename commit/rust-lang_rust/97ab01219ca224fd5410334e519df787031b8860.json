{"sha": "97ab01219ca224fd5410334e519df787031b8860", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk3YWIwMTIxOWNhMjI0ZmQ1NDEwMzM0ZTUxOWRmNzg3MDMxYjg4NjA=", "commit": {"author": {"name": "Joshua Nelson", "email": "jyn514@gmail.com", "date": "2021-02-24T23:13:47Z"}, "committer": {"name": "Joshua Nelson", "email": "jyn514@gmail.com", "date": "2021-02-24T23:14:43Z"}, "message": "Only look for `tidy` when running rustdoc tests\n\nThis avoids printing lots of unnecessary errors, as well as making the\ntest suite slightly faster.", "tree": {"sha": "744b3df971b9ad4e38d728cd1474378f37f9e445", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/744b3df971b9ad4e38d728cd1474378f37f9e445"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/97ab01219ca224fd5410334e519df787031b8860", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/97ab01219ca224fd5410334e519df787031b8860", "html_url": "https://github.com/rust-lang/rust/commit/97ab01219ca224fd5410334e519df787031b8860", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/97ab01219ca224fd5410334e519df787031b8860/comments", "author": {"login": "jyn514", "id": 23638587, "node_id": "MDQ6VXNlcjIzNjM4NTg3", "avatar_url": "https://avatars.githubusercontent.com/u/23638587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jyn514", "html_url": "https://github.com/jyn514", "followers_url": "https://api.github.com/users/jyn514/followers", "following_url": "https://api.github.com/users/jyn514/following{/other_user}", "gists_url": "https://api.github.com/users/jyn514/gists{/gist_id}", "starred_url": "https://api.github.com/users/jyn514/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jyn514/subscriptions", "organizations_url": "https://api.github.com/users/jyn514/orgs", "repos_url": "https://api.github.com/users/jyn514/repos", "events_url": "https://api.github.com/users/jyn514/events{/privacy}", "received_events_url": "https://api.github.com/users/jyn514/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jyn514", "id": 23638587, "node_id": "MDQ6VXNlcjIzNjM4NTg3", "avatar_url": "https://avatars.githubusercontent.com/u/23638587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jyn514", "html_url": "https://github.com/jyn514", "followers_url": "https://api.github.com/users/jyn514/followers", "following_url": "https://api.github.com/users/jyn514/following{/other_user}", "gists_url": "https://api.github.com/users/jyn514/gists{/gist_id}", "starred_url": "https://api.github.com/users/jyn514/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jyn514/subscriptions", "organizations_url": "https://api.github.com/users/jyn514/orgs", "repos_url": "https://api.github.com/users/jyn514/repos", "events_url": "https://api.github.com/users/jyn514/events{/privacy}", "received_events_url": "https://api.github.com/users/jyn514/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a8486b64b0c87dabd045453b6c81500015d122d6", "url": "https://api.github.com/repos/rust-lang/rust/commits/a8486b64b0c87dabd045453b6c81500015d122d6", "html_url": "https://github.com/rust-lang/rust/commit/a8486b64b0c87dabd045453b6c81500015d122d6"}], "stats": {"total": 18, "additions": 12, "deletions": 6}, "files": [{"sha": "b32a6f08638cc028ee9ddaead485e0fb0ba240e1", "filename": "src/tools/compiletest/src/main.rs", "status": "modified", "additions": 12, "deletions": 6, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/97ab01219ca224fd5410334e519df787031b8860/src%2Ftools%2Fcompiletest%2Fsrc%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/97ab01219ca224fd5410334e519df787031b8860/src%2Ftools%2Fcompiletest%2Fsrc%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fcompiletest%2Fsrc%2Fmain.rs?ref=97ab01219ca224fd5410334e519df787031b8860", "patch": "@@ -195,11 +195,17 @@ pub fn parse_config(args: Vec<String>) -> Config {\n \n     let src_base = opt_path(matches, \"src-base\");\n     let run_ignored = matches.opt_present(\"ignored\");\n-    let has_tidy = Command::new(\"tidy\")\n-        .arg(\"--version\")\n-        .stdout(Stdio::null())\n-        .status()\n-        .map_or(false, |status| status.success());\n+    let mode = matches.opt_str(\"mode\").unwrap().parse().expect(\"invalid mode\");\n+    let has_tidy = if mode == Mode::Rustdoc {\n+        Command::new(\"tidy\")\n+            .arg(\"--version\")\n+            .stdout(Stdio::null())\n+            .status()\n+            .map_or(false, |status| status.success())\n+    } else {\n+        // Avoid spawning an external command when we know tidy won't be used.\n+        false\n+    };\n     Config {\n         bless: matches.opt_present(\"bless\"),\n         compile_lib_path: make_absolute(opt_path(matches, \"compile-lib-path\")),\n@@ -218,7 +224,7 @@ pub fn parse_config(args: Vec<String>) -> Config {\n         src_base,\n         build_base: opt_path(matches, \"build-base\"),\n         stage_id: matches.opt_str(\"stage-id\").unwrap(),\n-        mode: matches.opt_str(\"mode\").unwrap().parse().expect(\"invalid mode\"),\n+        mode,\n         suite: matches.opt_str(\"suite\").unwrap(),\n         debugger: None,\n         run_ignored,"}]}