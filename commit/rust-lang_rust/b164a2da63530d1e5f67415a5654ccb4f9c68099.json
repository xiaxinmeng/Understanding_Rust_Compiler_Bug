{"sha": "b164a2da63530d1e5f67415a5654ccb4f9c68099", "node_id": "MDY6Q29tbWl0NzI0NzEyOmIxNjRhMmRhNjM1MzBkMWU1ZjY3NDE1YTU2NTRjY2I0ZjljNjgwOTk=", "commit": {"author": {"name": "John K\u00e5re Alsaker", "email": "john.kare.alsaker@gmail.com", "date": "2018-11-30T19:34:25Z"}, "committer": {"name": "John K\u00e5re Alsaker", "email": "john.kare.alsaker@gmail.com", "date": "2019-04-25T16:23:35Z"}, "message": "Update trait_impls_of", "tree": {"sha": "eedfcd6cfb04c5e0cde2b953b59d088b462c83f1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/eedfcd6cfb04c5e0cde2b953b59d088b462c83f1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b164a2da63530d1e5f67415a5654ccb4f9c68099", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b164a2da63530d1e5f67415a5654ccb4f9c68099", "html_url": "https://github.com/rust-lang/rust/commit/b164a2da63530d1e5f67415a5654ccb4f9c68099", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b164a2da63530d1e5f67415a5654ccb4f9c68099/comments", "author": {"login": "Zoxc", "id": 25784, "node_id": "MDQ6VXNlcjI1Nzg0", "avatar_url": "https://avatars.githubusercontent.com/u/25784?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Zoxc", "html_url": "https://github.com/Zoxc", "followers_url": "https://api.github.com/users/Zoxc/followers", "following_url": "https://api.github.com/users/Zoxc/following{/other_user}", "gists_url": "https://api.github.com/users/Zoxc/gists{/gist_id}", "starred_url": "https://api.github.com/users/Zoxc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Zoxc/subscriptions", "organizations_url": "https://api.github.com/users/Zoxc/orgs", "repos_url": "https://api.github.com/users/Zoxc/repos", "events_url": "https://api.github.com/users/Zoxc/events{/privacy}", "received_events_url": "https://api.github.com/users/Zoxc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Zoxc", "id": 25784, "node_id": "MDQ6VXNlcjI1Nzg0", "avatar_url": "https://avatars.githubusercontent.com/u/25784?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Zoxc", "html_url": "https://github.com/Zoxc", "followers_url": "https://api.github.com/users/Zoxc/followers", "following_url": "https://api.github.com/users/Zoxc/following{/other_user}", "gists_url": "https://api.github.com/users/Zoxc/gists{/gist_id}", "starred_url": "https://api.github.com/users/Zoxc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Zoxc/subscriptions", "organizations_url": "https://api.github.com/users/Zoxc/orgs", "repos_url": "https://api.github.com/users/Zoxc/repos", "events_url": "https://api.github.com/users/Zoxc/events{/privacy}", "received_events_url": "https://api.github.com/users/Zoxc/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1fe0d4e3839883bb88777173cd7775425a251085", "url": "https://api.github.com/repos/rust-lang/rust/commits/1fe0d4e3839883bb88777173cd7775425a251085", "html_url": "https://github.com/rust-lang/rust/commit/1fe0d4e3839883bb88777173cd7775425a251085"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "bdec2dc3b9de7fa8c9c8c147875e5e233e48906b", "filename": "src/librustc/arena.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b164a2da63530d1e5f67415a5654ccb4f9c68099/src%2Flibrustc%2Farena.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b164a2da63530d1e5f67415a5654ccb4f9c68099/src%2Flibrustc%2Farena.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Farena.rs?ref=b164a2da63530d1e5f67415a5654ccb4f9c68099", "patch": "@@ -19,6 +19,7 @@ macro_rules! arena_types {\n             [] region_scope_tree: rustc::middle::region::ScopeTree,\n             [] item_local_set: rustc::util::nodemap::ItemLocalSet,\n             [decode] mir_const_qualif: rustc_data_structures::bit_set::BitSet<rustc::mir::Local>,\n+            [] trait_impls_of: rustc::ty::trait_def::TraitImpls,\n         ], $tcx);\n     )\n }"}, {"sha": "b56b4046830e59c6cf5142a563a619a066f17b8d", "filename": "src/librustc/query/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b164a2da63530d1e5f67415a5654ccb4f9c68099/src%2Flibrustc%2Fquery%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b164a2da63530d1e5f67415a5654ccb4f9c68099/src%2Flibrustc%2Fquery%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fquery%2Fmod.rs?ref=b164a2da63530d1e5f67415a5654ccb4f9c68099", "patch": "@@ -540,7 +540,7 @@ rustc_queries! {\n     }\n \n     TypeChecking {\n-        query trait_impls_of(key: DefId) -> Lrc<ty::trait_def::TraitImpls> {\n+        query trait_impls_of(key: DefId) -> &'tcx ty::trait_def::TraitImpls {\n             desc { |tcx| \"trait impls of `{}`\", tcx.def_path_str(key) }\n         }\n         query specialization_graph_of(_: DefId) -> &'tcx specialization_graph::Graph {}"}, {"sha": "a0b409bc4004ae85a64d99a3d0b92519dbad9428", "filename": "src/librustc/ty/trait_def.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/b164a2da63530d1e5f67415a5654ccb4f9c68099/src%2Flibrustc%2Fty%2Ftrait_def.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b164a2da63530d1e5f67415a5654ccb4f9c68099/src%2Flibrustc%2Fty%2Ftrait_def.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Ftrait_def.rs?ref=b164a2da63530d1e5f67415a5654ccb4f9c68099", "patch": "@@ -10,7 +10,6 @@ use crate::ty::{Ty, TyCtxt};\n use rustc_data_structures::fx::FxHashMap;\n use rustc_data_structures::stable_hasher::{HashStable, StableHasher,\n                                            StableHasherResult};\n-use rustc_data_structures::sync::Lrc;\n use rustc_macros::HashStable;\n \n /// A trait's definition with type information.\n@@ -151,7 +150,7 @@ impl<'a, 'gcx, 'tcx> TyCtxt<'a, 'gcx, 'tcx> {\n // Query provider for `trait_impls_of`.\n pub(super) fn trait_impls_of_provider<'a, 'tcx>(tcx: TyCtxt<'a, 'tcx, 'tcx>,\n                                                 trait_id: DefId)\n-                                                -> Lrc<TraitImpls> {\n+                                                -> &'tcx TraitImpls {\n     let mut impls = TraitImpls::default();\n \n     {\n@@ -188,7 +187,7 @@ pub(super) fn trait_impls_of_provider<'a, 'tcx>(tcx: TyCtxt<'a, 'tcx, 'tcx>,\n         }\n     }\n \n-    Lrc::new(impls)\n+    tcx.arena.alloc(impls)\n }\n \n impl<'a> HashStable<StableHashingContext<'a>> for TraitImpls {"}]}