{"sha": "fdb13dade970d730468cab80ab62837124b08195", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZkYjEzZGFkZTk3MGQ3MzA0NjhjYWI4MGFiNjI4MzcxMjRiMDgxOTU=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2020-01-15T13:45:40Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-01-15T13:45:40Z"}, "message": "Merge #2852\n\n2852: Don't parse child modules when doing diagnostics r=matklad a=matklad\n\n\n\nCo-authored-by: Aleksey Kladov <aleksey.kladov@gmail.com>", "tree": {"sha": "909f5a76dd04943a6d3217232eec8262563e43ab", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/909f5a76dd04943a6d3217232eec8262563e43ab"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fdb13dade970d730468cab80ab62837124b08195", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJeHxeECRBK7hj4Ov3rIwAAdHIIAGxiJDHpNkI0LMYYYe36+QIW\n8w3If5CxSb54EBrwEIdmBapRhD8PT812/WU4vJxHD8jbESGnUQ+xNu09/IofC/yA\ne2mBPqWI7pcZbVJ4IvsGfM0TdoDZgQA3SwOz/KiMMtJ4v+0WkjIzKnUnx3smaXBc\nYsSkWsAdNJEWhYdkM77Xwf6BPWZmH75ZPmC61xsy2X7NqKSuzFRDo+QCB8fscN4j\n33GKdlI1gErTTFbd2EKUp+eAkEih/1zPGK23EgfsvNqsvKrFktPK65KmrY6Rw9x4\ncLS4kJIsGWEmzOQP4zhLCQg+8fhf8awJdZ0t7hFkOIKE7Las2MQQBhIj5REc5MU=\n=61y3\n-----END PGP SIGNATURE-----\n", "payload": "tree 909f5a76dd04943a6d3217232eec8262563e43ab\nparent 4a9e4ec7e181c9cb17fe574073c2b718611ccec3\nparent 21ea62d2927ad88c56a4cb48bbd9932ba7bf5321\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1579095940 +0000\ncommitter GitHub <noreply@github.com> 1579095940 +0000\n\nMerge #2852\n\n2852: Don't parse child modules when doing diagnostics r=matklad a=matklad\n\n\n\nCo-authored-by: Aleksey Kladov <aleksey.kladov@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fdb13dade970d730468cab80ab62837124b08195", "html_url": "https://github.com/rust-lang/rust/commit/fdb13dade970d730468cab80ab62837124b08195", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fdb13dade970d730468cab80ab62837124b08195/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4a9e4ec7e181c9cb17fe574073c2b718611ccec3", "url": "https://api.github.com/repos/rust-lang/rust/commits/4a9e4ec7e181c9cb17fe574073c2b718611ccec3", "html_url": "https://github.com/rust-lang/rust/commit/4a9e4ec7e181c9cb17fe574073c2b718611ccec3"}, {"sha": "21ea62d2927ad88c56a4cb48bbd9932ba7bf5321", "url": "https://api.github.com/repos/rust-lang/rust/commits/21ea62d2927ad88c56a4cb48bbd9932ba7bf5321", "html_url": "https://github.com/rust-lang/rust/commit/21ea62d2927ad88c56a4cb48bbd9932ba7bf5321"}], "stats": {"total": 13, "additions": 10, "deletions": 3}, "files": [{"sha": "500b34c170f5bc2ef22ed35b4b71f09b21bbd5cc", "filename": "crates/ra_hir/src/code_model.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/fdb13dade970d730468cab80ab62837124b08195/crates%2Fra_hir%2Fsrc%2Fcode_model.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fdb13dade970d730468cab80ab62837124b08195/crates%2Fra_hir%2Fsrc%2Fcode_model.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fcode_model.rs?ref=fdb13dade970d730468cab80ab62837124b08195", "patch": "@@ -7,7 +7,6 @@ use hir_def::{\n     builtin_type::BuiltinType,\n     docs::Documentation,\n     expr::{BindingAnnotation, Pat, PatId},\n-    nameres::ModuleSource,\n     per_ns::PerNs,\n     resolver::HasResolver,\n     type_ref::{Mutability, TypeRef},\n@@ -193,13 +192,14 @@ impl Module {\n \n     pub fn diagnostics(self, db: &impl HirDatabase, sink: &mut DiagnosticSink) {\n         let _p = profile(\"Module::diagnostics\");\n-        db.crate_def_map(self.id.krate).add_diagnostics(db, self.id.local_id, sink);\n+        let crate_def_map = db.crate_def_map(self.id.krate);\n+        crate_def_map.add_diagnostics(db, self.id.local_id, sink);\n         for decl in self.declarations(db) {\n             match decl {\n                 crate::ModuleDef::Function(f) => f.diagnostics(db, sink),\n                 crate::ModuleDef::Module(m) => {\n                     // Only add diagnostics from inline modules\n-                    if let ModuleSource::Module(_) = m.definition_source(db).value {\n+                    if crate_def_map[m.id.local_id].origin.is_inline() {\n                         m.diagnostics(db, sink)\n                     }\n                 }"}, {"sha": "e1a6a46df2c9327a8c21739a6c2ffdfdf65c0d22", "filename": "crates/ra_hir_def/src/nameres.rs", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/fdb13dade970d730468cab80ab62837124b08195/crates%2Fra_hir_def%2Fsrc%2Fnameres.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fdb13dade970d730468cab80ab62837124b08195/crates%2Fra_hir_def%2Fsrc%2Fnameres.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_def%2Fsrc%2Fnameres.rs?ref=fdb13dade970d730468cab80ab62837124b08195", "patch": "@@ -145,6 +145,13 @@ impl ModuleOrigin {\n         }\n     }\n \n+    pub fn is_inline(&self) -> bool {\n+        match self {\n+            ModuleOrigin::Inline { .. } => true,\n+            ModuleOrigin::CrateRoot { .. } | ModuleOrigin::File { .. } => false,\n+        }\n+    }\n+\n     /// Returns a node which defines this module.\n     /// That is, a file or a `mod foo {}` with items.\n     fn definition_source(&self, db: &impl DefDatabase) -> InFile<ModuleSource> {"}]}