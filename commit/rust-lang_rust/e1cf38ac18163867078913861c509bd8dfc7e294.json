{"sha": "e1cf38ac18163867078913861c509bd8dfc7e294", "node_id": "MDY6Q29tbWl0NzI0NzEyOmUxY2YzOGFjMTgxNjM4NjcwNzg5MTM4NjFjNTA5YmQ4ZGZjN2UyOTQ=", "commit": {"author": {"name": "Mark Rousskov", "email": "mark.simulacrum@gmail.com", "date": "2019-11-11T19:50:26Z"}, "committer": {"name": "Mark Rousskov", "email": "mark.simulacrum@gmail.com", "date": "2019-11-11T19:50:26Z"}, "message": "Move injected_panic_runtime to CrateStore\n\nThis was essentially a \"query\" previously (with no key, just always run\nonce when resolving the crate dependencies), and remains so, just now in\na way that isn't on Session. This removes the need for the `Once` as\nwell.", "tree": {"sha": "b9dce4c027cce9da84763f19931cc515ac93db28", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b9dce4c027cce9da84763f19931cc515ac93db28"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e1cf38ac18163867078913861c509bd8dfc7e294", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e1cf38ac18163867078913861c509bd8dfc7e294", "html_url": "https://github.com/rust-lang/rust/commit/e1cf38ac18163867078913861c509bd8dfc7e294", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e1cf38ac18163867078913861c509bd8dfc7e294/comments", "author": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "56237d75b4271a8a2e0f47d86ea76ebf6d966152", "url": "https://api.github.com/repos/rust-lang/rust/commits/56237d75b4271a8a2e0f47d86ea76ebf6d966152", "html_url": "https://github.com/rust-lang/rust/commit/56237d75b4271a8a2e0f47d86ea76ebf6d966152"}], "stats": {"total": 25, "additions": 16, "deletions": 9}, "files": [{"sha": "f644853ebce8ab7628e23988b1a5feb1895b73af", "filename": "src/librustc/middle/cstore.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/e1cf38ac18163867078913861c509bd8dfc7e294/src%2Flibrustc%2Fmiddle%2Fcstore.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e1cf38ac18163867078913861c509bd8dfc7e294/src%2Flibrustc%2Fmiddle%2Fcstore.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fcstore.rs?ref=e1cf38ac18163867078913861c509bd8dfc7e294", "patch": "@@ -227,6 +227,7 @@ pub trait CrateStore {\n     // utility functions\n     fn encode_metadata(&self, tcx: TyCtxt<'_>) -> EncodedMetadata;\n     fn metadata_encoding_version(&self) -> &[u8];\n+    fn injected_panic_runtime(&self) -> Option<CrateNum>;\n }\n \n pub type CrateStoreDyn = dyn CrateStore + sync::Sync;"}, {"sha": "752a82f3115f029e5ac51d5317b03f7090663d66", "filename": "src/librustc/session/mod.rs", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/e1cf38ac18163867078913861c509bd8dfc7e294/src%2Flibrustc%2Fsession%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e1cf38ac18163867078913861c509bd8dfc7e294/src%2Flibrustc%2Fsession%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fsession%2Fmod.rs?ref=e1cf38ac18163867078913861c509bd8dfc7e294", "patch": "@@ -2,7 +2,6 @@ pub use self::code_stats::{DataTypeKind, SizeKind, FieldInfo, VariantInfo};\n use self::code_stats::CodeStats;\n \n use crate::dep_graph::cgu_reuse_tracker::CguReuseTracker;\n-use crate::hir::def_id::CrateNum;\n use rustc_data_structures::fingerprint::Fingerprint;\n \n use crate::lint;\n@@ -105,7 +104,6 @@ pub struct Session {\n     /// dependency if it didn't already find one, and this tracks what was\n     /// injected.\n     pub allocator_kind: Once<Option<AllocatorKind>>,\n-    pub injected_panic_runtime: Once<Option<CrateNum>>,\n \n     /// Map from imported macro spans (which consist of\n     /// the localized span for the macro body) to the\n@@ -1182,7 +1180,6 @@ fn build_session_(\n         type_length_limit: Once::new(),\n         const_eval_stack_frame_limit: 100,\n         allocator_kind: Once::new(),\n-        injected_panic_runtime: Once::new(),\n         imported_macro_spans: OneThread::new(RefCell::new(FxHashMap::default())),\n         incr_comp_session: OneThread::new(RefCell::new(IncrCompSession::NotInitialized)),\n         cgu_reuse_tracker,"}, {"sha": "d26b4012015522d8ef71e89c61ba2161ef194c1c", "filename": "src/librustc/ty/context.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e1cf38ac18163867078913861c509bd8dfc7e294/src%2Flibrustc%2Fty%2Fcontext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e1cf38ac18163867078913861c509bd8dfc7e294/src%2Flibrustc%2Fty%2Fcontext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Fcontext.rs?ref=e1cf38ac18163867078913861c509bd8dfc7e294", "patch": "@@ -1338,6 +1338,10 @@ impl<'tcx> TyCtxt<'tcx> {\n         self.all_crate_nums(LOCAL_CRATE)\n     }\n \n+    pub fn injected_panic_runtime(self) -> Option<CrateNum> {\n+        self.cstore.injected_panic_runtime()\n+    }\n+\n     pub fn features(self) -> &'tcx feature_gate::Features {\n         self.features_query(LOCAL_CRATE)\n     }"}, {"sha": "9c17b5b36e3bef0df4ea1c844a72683cdbd1542a", "filename": "src/librustc_metadata/creader.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/e1cf38ac18163867078913861c509bd8dfc7e294/src%2Flibrustc_metadata%2Fcreader.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e1cf38ac18163867078913861c509bd8dfc7e294/src%2Flibrustc_metadata%2Fcreader.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_metadata%2Fcreader.rs?ref=e1cf38ac18163867078913861c509bd8dfc7e294", "patch": "@@ -531,7 +531,7 @@ impl<'a> CrateLoader<'a> {\n         });\n         if !any_non_rlib {\n             info!(\"panic runtime injection skipped, only generating rlib\");\n-            self.sess.injected_panic_runtime.set(None);\n+            self.cstore.injected_panic_runtime = None;\n             return\n         }\n \n@@ -563,7 +563,7 @@ impl<'a> CrateLoader<'a> {\n         // we just don't need one at all, then we're done here and there's\n         // nothing else to do.\n         if !needs_panic_runtime || runtime_found {\n-            self.sess.injected_panic_runtime.set(None);\n+            self.cstore.injected_panic_runtime = None;\n             return\n         }\n \n@@ -600,7 +600,7 @@ impl<'a> CrateLoader<'a> {\n                                    name, desired_strategy.desc()));\n         }\n \n-        self.sess.injected_panic_runtime.set(Some(cnum));\n+        self.cstore.injected_panic_runtime = Some(cnum);\n         self.inject_dependency_if(cnum, \"a panic runtime\",\n                                   &|data| data.root.needs_panic_runtime);\n     }"}, {"sha": "456596be83ff54f9c0a22fe4e3b367e40ed31051", "filename": "src/librustc_metadata/cstore.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e1cf38ac18163867078913861c509bd8dfc7e294/src%2Flibrustc_metadata%2Fcstore.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e1cf38ac18163867078913861c509bd8dfc7e294/src%2Flibrustc_metadata%2Fcstore.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_metadata%2Fcstore.rs?ref=e1cf38ac18163867078913861c509bd8dfc7e294", "patch": "@@ -101,6 +101,7 @@ crate struct CrateMetadata {\n #[derive(Clone)]\n pub struct CStore {\n     metas: IndexVec<CrateNum, Option<Lrc<CrateMetadata>>>,\n+    pub(crate) injected_panic_runtime: Option<CrateNum>,\n }\n \n pub enum LoadedMacro {\n@@ -116,6 +117,7 @@ impl Default for CStore {\n             // corresponding `CrateNum`. This first entry will always remain\n             // `None`.\n             metas: IndexVec::from_elem_n(None, 1),\n+            injected_panic_runtime: None,\n         }\n     }\n }"}, {"sha": "dbf7fede1469f7d71da81a4db565d495aaa85249", "filename": "src/librustc_metadata/dependency_format.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/e1cf38ac18163867078913861c509bd8dfc7e294/src%2Flibrustc_metadata%2Fdependency_format.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e1cf38ac18163867078913861c509bd8dfc7e294/src%2Flibrustc_metadata%2Fdependency_format.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_metadata%2Fdependency_format.rs?ref=e1cf38ac18163867078913861c509bd8dfc7e294", "patch": "@@ -184,7 +184,7 @@ fn calculate_type(tcx: TyCtxt<'_>, ty: config::CrateType) -> DependencyList {\n     //\n     // Things like allocators and panic runtimes may not have been activated\n     // quite yet, so do so here.\n-    activate_injected_dep(*sess.injected_panic_runtime.get(), &mut ret,\n+    activate_injected_dep(tcx.injected_panic_runtime(), &mut ret,\n                           &|cnum| tcx.is_panic_runtime(cnum));\n \n     // When dylib B links to dylib A, then when using B we must also link to A.\n@@ -244,7 +244,6 @@ fn add_library(\n }\n \n fn attempt_static(tcx: TyCtxt<'_>) -> Option<DependencyList> {\n-    let sess = &tcx.sess;\n     let crates = cstore::used_crates(tcx, RequireStatic);\n     if !crates.iter().by_ref().all(|&(_, ref p)| p.is_some()) {\n         return None\n@@ -264,7 +263,7 @@ fn attempt_static(tcx: TyCtxt<'_>) -> Option<DependencyList> {\n     // Our allocator/panic runtime may not have been linked above if it wasn't\n     // explicitly linked, which is the case for any injected dependency. Handle\n     // that here and activate them.\n-    activate_injected_dep(*sess.injected_panic_runtime.get(), &mut ret,\n+    activate_injected_dep(tcx.injected_panic_runtime(), &mut ret,\n                           &|cnum| tcx.is_panic_runtime(cnum));\n \n     Some(ret)"}, {"sha": "dc11a5aa196b72fcd5bda896d0ed4b67e9c77ad2", "filename": "src/librustc_metadata/rmeta/decoder/cstore_impl.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e1cf38ac18163867078913861c509bd8dfc7e294/src%2Flibrustc_metadata%2Frmeta%2Fdecoder%2Fcstore_impl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e1cf38ac18163867078913861c509bd8dfc7e294/src%2Flibrustc_metadata%2Frmeta%2Fdecoder%2Fcstore_impl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_metadata%2Frmeta%2Fdecoder%2Fcstore_impl.rs?ref=e1cf38ac18163867078913861c509bd8dfc7e294", "patch": "@@ -527,4 +527,8 @@ impl CrateStore for cstore::CStore {\n     {\n         rmeta::METADATA_HEADER\n     }\n+\n+    fn injected_panic_runtime(&self) -> Option<CrateNum> {\n+        self.injected_panic_runtime\n+    }\n }"}]}