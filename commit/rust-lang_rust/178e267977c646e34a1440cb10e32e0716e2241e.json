{"sha": "178e267977c646e34a1440cb10e32e0716e2241e", "node_id": "C_kwDOAAsO6NoAKDE3OGUyNjc5NzdjNjQ2ZTM0YTE0NDBjYjEwZTMyZTA3MTZlMjI0MWU", "commit": {"author": {"name": "bjorn3", "email": "17426603+bjorn3@users.noreply.github.com", "date": "2023-02-05T18:42:30Z"}, "committer": {"name": "bjorn3", "email": "17426603+bjorn3@users.noreply.github.com", "date": "2023-02-05T18:48:40Z"}, "message": "Implement sym operands for global asm", "tree": {"sha": "21fa3bee05342d462d89cf05c2ca775a7dcad3a1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/21fa3bee05342d462d89cf05c2ca775a7dcad3a1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/178e267977c646e34a1440cb10e32e0716e2241e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/178e267977c646e34a1440cb10e32e0716e2241e", "html_url": "https://github.com/rust-lang/rust/commit/178e267977c646e34a1440cb10e32e0716e2241e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/178e267977c646e34a1440cb10e32e0716e2241e/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "df6b06790057ca32584a6ed6bfdd02045594137d", "url": "https://api.github.com/repos/rust-lang/rust/commits/df6b06790057ca32584a6ed6bfdd02045594137d", "html_url": "https://github.com/rust-lang/rust/commit/df6b06790057ca32584a6ed6bfdd02045594137d"}], "stats": {"total": 18, "additions": 16, "deletions": 2}, "files": [{"sha": "46c78ce6a1e344d251c62256d4db238f62154351", "filename": "src/global_asm.rs", "status": "modified", "additions": 16, "deletions": 2, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/178e267977c646e34a1440cb10e32e0716e2241e/src%2Fglobal_asm.rs", "raw_url": "https://github.com/rust-lang/rust/raw/178e267977c646e34a1440cb10e32e0716e2241e/src%2Fglobal_asm.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fglobal_asm.rs?ref=178e267977c646e34a1440cb10e32e0716e2241e", "patch": "@@ -39,8 +39,22 @@ pub(crate) fn codegen_global_asm_item(tcx: TyCtxt<'_>, global_asm: &mut String,\n                             );\n                             global_asm.push_str(&string);\n                         }\n-                        InlineAsmOperand::SymFn { anon_const: _ } => todo!(),\n-                        InlineAsmOperand::SymStatic { path: _, def_id: _ } => todo!(),\n+                        InlineAsmOperand::SymFn { anon_const } => {\n+                            let ty = tcx.typeck_body(anon_const.body).node_type(anon_const.hir_id);\n+                            let instance = match ty.kind() {\n+                                &ty::FnDef(def_id, substs) => Instance::new(def_id, substs),\n+                                _ => span_bug!(op_sp, \"asm sym is not a function\"),\n+                            };\n+                            let symbol = tcx.symbol_name(instance);\n+                            // FIXME handle the case where the function was made private to the\n+                            // current codegen unit\n+                            global_asm.push_str(symbol.name);\n+                        }\n+                        InlineAsmOperand::SymStatic { path: _, def_id } => {\n+                            let instance = Instance::mono(tcx, def_id).polymorphize(tcx);\n+                            let symbol = tcx.symbol_name(instance);\n+                            global_asm.push_str(symbol.name);\n+                        }\n                         InlineAsmOperand::In { .. }\n                         | InlineAsmOperand::Out { .. }\n                         | InlineAsmOperand::InOut { .. }"}]}