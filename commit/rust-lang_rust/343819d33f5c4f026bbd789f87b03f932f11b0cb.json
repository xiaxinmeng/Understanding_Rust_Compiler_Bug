{"sha": "343819d33f5c4f026bbd789f87b03f932f11b0cb", "node_id": "C_kwDOAAsO6NoAKDM0MzgxOWQzM2Y1YzRmMDI2YmJkNzg5Zjg3YjAzZjkzMmYxMWIwY2I", "commit": {"author": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2023-05-14T12:48:32Z"}, "committer": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2023-05-14T12:48:32Z"}, "message": "Revert \"Validate resolution for SelfCtor too.\"\n\nThis reverts commit 83453408a0ce91b9e3d3ae6e7f117b1fd28b487d.", "tree": {"sha": "aacd1b398175e71a5363c76a1f05aed8d598a220", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/aacd1b398175e71a5363c76a1f05aed8d598a220"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/343819d33f5c4f026bbd789f87b03f932f11b0cb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/343819d33f5c4f026bbd789f87b03f932f11b0cb", "html_url": "https://github.com/rust-lang/rust/commit/343819d33f5c4f026bbd789f87b03f932f11b0cb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/343819d33f5c4f026bbd789f87b03f932f11b0cb/comments", "author": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bc888958c9e1fdde09791f15d3421bdc3b6d7d29", "url": "https://api.github.com/repos/rust-lang/rust/commits/bc888958c9e1fdde09791f15d3421bdc3b6d7d29", "html_url": "https://github.com/rust-lang/rust/commit/bc888958c9e1fdde09791f15d3421bdc3b6d7d29"}], "stats": {"total": 57, "additions": 2, "deletions": 55}, "files": [{"sha": "59eda9db97f49f9fa4c8f9d87e4c1abe052ec94d", "filename": "compiler/rustc_resolve/src/diagnostics.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/343819d33f5c4f026bbd789f87b03f932f11b0cb/compiler%2Frustc_resolve%2Fsrc%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/343819d33f5c4f026bbd789f87b03f932f11b0cb/compiler%2Frustc_resolve%2Fsrc%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_resolve%2Fsrc%2Fdiagnostics.rs?ref=343819d33f5c4f026bbd789f87b03f932f11b0cb", "patch": "@@ -550,7 +550,7 @@ impl<'a, 'tcx> Resolver<'a, 'tcx> {\n \n                 let sm = self.tcx.sess.source_map();\n                 let def_id = match outer_res {\n-                    Res::SelfTyParam { .. } | Res::SelfCtor(_) => {\n+                    Res::SelfTyParam { .. } => {\n                         err.span_label(span, \"can't use `Self` here\");\n                         return err;\n                     }"}, {"sha": "f065c4ddd2e1d3e2f8b20e2fcacf9c593a16b9ae", "filename": "compiler/rustc_resolve/src/ident.rs", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/343819d33f5c4f026bbd789f87b03f932f11b0cb/compiler%2Frustc_resolve%2Fsrc%2Fident.rs", "raw_url": "https://github.com/rust-lang/rust/raw/343819d33f5c4f026bbd789f87b03f932f11b0cb/compiler%2Frustc_resolve%2Fsrc%2Fident.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_resolve%2Fsrc%2Fident.rs?ref=343819d33f5c4f026bbd789f87b03f932f11b0cb", "patch": "@@ -1174,10 +1174,7 @@ impl<'a, 'tcx> Resolver<'a, 'tcx> {\n                     return Res::Err;\n                 }\n             }\n-            Res::Def(DefKind::TyParam, _)\n-            | Res::SelfTyParam { .. }\n-            | Res::SelfTyAlias { .. }\n-            | Res::SelfCtor(_) => {\n+            Res::Def(DefKind::TyParam, _) | Res::SelfTyParam { .. } | Res::SelfTyAlias { .. } => {\n                 for rib in ribs {\n                     let has_generic_params: HasGenericParams = match rib.kind {\n                         RibKind::Normal"}, {"sha": "b015397a5bc5f66928fbd81af2a12461c1722682", "filename": "tests/ui/self/self-ctor-inner-const.rs", "status": "removed", "additions": 0, "deletions": 17, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/bc888958c9e1fdde09791f15d3421bdc3b6d7d29/tests%2Fui%2Fself%2Fself-ctor-inner-const.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bc888958c9e1fdde09791f15d3421bdc3b6d7d29/tests%2Fui%2Fself%2Fself-ctor-inner-const.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fself%2Fself-ctor-inner-const.rs?ref=bc888958c9e1fdde09791f15d3421bdc3b6d7d29", "patch": "@@ -1,17 +0,0 @@\n-// Verify that we ban usage of `Self` as constructor from inner items.\n-\n-struct S0<T>(T);\n-\n-impl<T> S0<T> {\n-    fn foo() {\n-        const C: S0<u8> = Self(0);\n-        //~^ ERROR can't use generic parameters from outer function\n-        fn bar() -> Self {\n-            //~^ ERROR can't use generic parameters from outer function\n-            Self(0)\n-            //~^ ERROR can't use generic parameters from outer function\n-        }\n-    }\n-}\n-\n-fn main() {}"}, {"sha": "7287c64c659b72fc1a5c628a96506dd96c3d2c58", "filename": "tests/ui/self/self-ctor-inner-const.stderr", "status": "removed", "additions": 0, "deletions": 33, "changes": 33, "blob_url": "https://github.com/rust-lang/rust/blob/bc888958c9e1fdde09791f15d3421bdc3b6d7d29/tests%2Fui%2Fself%2Fself-ctor-inner-const.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/bc888958c9e1fdde09791f15d3421bdc3b6d7d29/tests%2Fui%2Fself%2Fself-ctor-inner-const.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fself%2Fself-ctor-inner-const.stderr?ref=bc888958c9e1fdde09791f15d3421bdc3b6d7d29", "patch": "@@ -1,33 +0,0 @@\n-error[E0401]: can't use generic parameters from outer function\n-  --> $DIR/self-ctor-inner-const.rs:7:27\n-   |\n-LL |         const C: S0<u8> = Self(0);\n-   |                           ^^^^\n-   |                           |\n-   |                           use of generic parameter from outer function\n-   |                           can't use `Self` here\n-\n-error[E0401]: can't use generic parameters from outer function\n-  --> $DIR/self-ctor-inner-const.rs:9:21\n-   |\n-LL | impl<T> S0<T> {\n-   | ---- `Self` type implicitly declared here, by this `impl`\n-...\n-LL |         fn bar() -> Self {\n-   |                     ^^^^\n-   |                     |\n-   |                     use of generic parameter from outer function\n-   |                     use a type here instead\n-\n-error[E0401]: can't use generic parameters from outer function\n-  --> $DIR/self-ctor-inner-const.rs:11:13\n-   |\n-LL |             Self(0)\n-   |             ^^^^\n-   |             |\n-   |             use of generic parameter from outer function\n-   |             can't use `Self` here\n-\n-error: aborting due to 3 previous errors\n-\n-For more information about this error, try `rustc --explain E0401`."}]}