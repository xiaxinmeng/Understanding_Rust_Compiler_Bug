{"sha": "aa9077e0c9954f0795f52e73c6a057cf52c9ccae", "node_id": "C_kwDOAAsO6NoAKGFhOTA3N2UwYzk5NTRmMDc5NWY1MmU3M2M2YTA1N2NmNTJjOWNjYWU", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2022-03-21T18:48:34Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-03-21T18:48:34Z"}, "message": "Rollup merge of #95166 - Urgau:check-cfg-values-unstable-book, r=petrochenkov\n\nUpdate the unstable book with the new `values()` form of check-cfg\n\nForgot to update the unstable book in https://github.com/rust-lang/rust/pull/94362\n\nr? ``@petrochenkov``", "tree": {"sha": "0f2f195adfe15176f9034bfd13168cf77624c7a3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0f2f195adfe15176f9034bfd13168cf77624c7a3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/aa9077e0c9954f0795f52e73c6a057cf52c9ccae", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJiOMiCCRBK7hj4Ov3rIwAAsi8IAJ9jzzsq9LwHRcrSmKw/Um7d\n+lzNVyW7/PfP4i6mv3toD6ByqnT1ZHFsAOJJDFkU2AlcvpYzBc9tPbdzzl6Y6Umf\nWInuoBTJSKIdc0Panek/0RZppLEWn5GfRGb+Rro0+l8+aG8J5+blUAnCzdfNy7WW\nPrDeMmiVHVJyOLfUwBPOLtRon0f4Qs+6Xo+MK28/YkIf+MjqCrzaunnRk/pVEBT+\nJL/8Rulz27ELmHhGpb+3yuCy5iIIENJ7Go+iqzbyU/R8GSGhS8jSSQ8/HYRH1qst\naFGEzARSKz733vXz3m6MyxKozCsfdrnLxhwLjSUfFYPPEbByH6uYs7LQd49PsWM=\n=m5rO\n-----END PGP SIGNATURE-----\n", "payload": "tree 0f2f195adfe15176f9034bfd13168cf77624c7a3\nparent 7154fa519329384a8f99b21278053009933e4e51\nparent c6c14a040dc33663a3e14f1e8a3d0938c65e7ca6\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1647888514 +0100\ncommitter GitHub <noreply@github.com> 1647888514 +0100\n\nRollup merge of #95166 - Urgau:check-cfg-values-unstable-book, r=petrochenkov\n\nUpdate the unstable book with the new `values()` form of check-cfg\n\nForgot to update the unstable book in https://github.com/rust-lang/rust/pull/94362\n\nr? ``@petrochenkov``\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/aa9077e0c9954f0795f52e73c6a057cf52c9ccae", "html_url": "https://github.com/rust-lang/rust/commit/aa9077e0c9954f0795f52e73c6a057cf52c9ccae", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/aa9077e0c9954f0795f52e73c6a057cf52c9ccae/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7154fa519329384a8f99b21278053009933e4e51", "url": "https://api.github.com/repos/rust-lang/rust/commits/7154fa519329384a8f99b21278053009933e4e51", "html_url": "https://github.com/rust-lang/rust/commit/7154fa519329384a8f99b21278053009933e4e51"}, {"sha": "c6c14a040dc33663a3e14f1e8a3d0938c65e7ca6", "url": "https://api.github.com/repos/rust-lang/rust/commits/c6c14a040dc33663a3e14f1e8a3d0938c65e7ca6", "html_url": "https://github.com/rust-lang/rust/commit/c6c14a040dc33663a3e14f1e8a3d0938c65e7ca6"}], "stats": {"total": 8, "additions": 5, "deletions": 3}, "files": [{"sha": "486b3d4414f3a3c872f2ae9a871e429e673956c9", "filename": "src/doc/unstable-book/src/compiler-flags/check-cfg.md", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/aa9077e0c9954f0795f52e73c6a057cf52c9ccae/src%2Fdoc%2Funstable-book%2Fsrc%2Fcompiler-flags%2Fcheck-cfg.md", "raw_url": "https://github.com/rust-lang/rust/raw/aa9077e0c9954f0795f52e73c6a057cf52c9ccae/src%2Fdoc%2Funstable-book%2Fsrc%2Fcompiler-flags%2Fcheck-cfg.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Funstable-book%2Fsrc%2Fcompiler-flags%2Fcheck-cfg.md?ref=aa9077e0c9954f0795f52e73c6a057cf52c9ccae", "patch": "@@ -92,8 +92,6 @@ and `cfg!(name = \"value\")` call. It will check that the `\"value\"` specified is p\n list of expected values. If `\"value\"` is not in it, then `rustc` will report an `unexpected_cfgs`\n lint diagnostic. The default diagnostic level for this lint is `Warn`.\n \n-The form `values()` is an error, because it does not specify a condition name.\n-\n To enable checking of values, but to provide an empty set of valid values, use this form:\n \n ```bash\n@@ -104,13 +102,17 @@ The `--check-cfg values(...)` option can be repeated, both for the same conditio\n different names. If it is repeated for the same condition name, then the sets of values for that\n condition are merged together.\n \n+If `values()` is specified, then `rustc` will enable the checking of well-known values defined\n+by itself. Note that it's necessary to specify the `values()` form to enable the checking of\n+well known values, specifying the other forms doesn't implicitly enable it.\n+\n ## Examples\n \n Consider this command line:\n \n ```bash\n rustc --check-cfg 'names(feature)' \\\n-      --check-cfg 'values(feature,\"lion\",\"zebra\")' \\\n+      --check-cfg 'values(feature, \"lion\", \"zebra\")' \\\n       --cfg 'feature=\"lion\"' -Z unstable-options \\\n       example.rs\n ```"}]}