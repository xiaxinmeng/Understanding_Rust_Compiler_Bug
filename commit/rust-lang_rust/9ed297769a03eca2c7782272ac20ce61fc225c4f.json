{"sha": "9ed297769a03eca2c7782272ac20ce61fc225c4f", "node_id": "C_kwDOAAsO6NoAKDllZDI5Nzc2OWEwM2VjYTJjNzc4MjI3MmFjMjBjZTYxZmMyMjVjNGY", "commit": {"author": {"name": "David Koloski", "email": "dkoloski@google.com", "date": "2022-11-17T02:23:28Z"}, "committer": {"name": "David Koloski", "email": "dkoloski@google.com", "date": "2022-11-17T03:15:14Z"}, "message": "[fuchsia] Document more settings for building Rust", "tree": {"sha": "12bfd07af3a6a62796e964584a1910ae60130d1b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/12bfd07af3a6a62796e964584a1910ae60130d1b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9ed297769a03eca2c7782272ac20ce61fc225c4f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9ed297769a03eca2c7782272ac20ce61fc225c4f", "html_url": "https://github.com/rust-lang/rust/commit/9ed297769a03eca2c7782272ac20ce61fc225c4f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9ed297769a03eca2c7782272ac20ce61fc225c4f/comments", "author": null, "committer": null, "parents": [{"sha": "6d651a295e0e0c331153288b10b78344a4ede20b", "url": "https://api.github.com/repos/rust-lang/rust/commits/6d651a295e0e0c331153288b10b78344a4ede20b", "html_url": "https://github.com/rust-lang/rust/commit/6d651a295e0e0c331153288b10b78344a4ede20b"}], "stats": {"total": 83, "additions": 60, "deletions": 23}, "files": [{"sha": null, "filename": "src/ci/docker/scripts/fuchsia-test-runner.py", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/9ed297769a03eca2c7782272ac20ce61fc225c4f/src%2Fci%2Fdocker%2Fscripts%2Ffuchsia-test-runner.py", "raw_url": "https://github.com/rust-lang/rust/raw/9ed297769a03eca2c7782272ac20ce61fc225c4f/src%2Fci%2Fdocker%2Fscripts%2Ffuchsia-test-runner.py", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fscripts%2Ffuchsia-test-runner.py?ref=9ed297769a03eca2c7782272ac20ce61fc225c4f"}, {"sha": "66e7f9a32970c3e1a5c38d63c98810d4fcddbe66", "filename": "src/doc/rustc/src/platform-support/fuchsia.md", "status": "modified", "additions": 60, "deletions": 23, "changes": 83, "blob_url": "https://github.com/rust-lang/rust/blob/9ed297769a03eca2c7782272ac20ce61fc225c4f/src%2Fdoc%2Frustc%2Fsrc%2Fplatform-support%2Ffuchsia.md", "raw_url": "https://github.com/rust-lang/rust/raw/9ed297769a03eca2c7782272ac20ce61fc225c4f/src%2Fdoc%2Frustc%2Fsrc%2Fplatform-support%2Ffuchsia.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Frustc%2Fsrc%2Fplatform-support%2Ffuchsia.md?ref=9ed297769a03eca2c7782272ac20ce61fc225c4f", "patch": "@@ -189,17 +189,45 @@ Fuchsia as well. A recent version (14+) of clang should be sufficient to compile\n Rust for Fuchsia.\n \n x86-64 and AArch64 Fuchsia targets can be enabled using the following\n-configuration.\n-\n-In `config.toml`, add:\n+configuration in `config.toml`:\n \n ```toml\n [build]\n target = [\"<host_platform>\", \"aarch64-fuchsia\", \"x86_64-fuchsia\"]\n+\n+[rust]\n+lld = true\n+\n+[target.x86_64-fuchsia]\n+cc = \"clang\"\n+cxx = \"clang++\"\n+\n+[target.aarch64-fuchsia]\n+cc = \"clang\"\n+cxx = \"clang++\"\n+```\n+\n+Though not strictly required, you may also want to use `clang` for your host\n+target as well:\n+\n+```toml\n+[target.<host_platform>]\n+cc = \"clang\"\n+cxx = \"clang++\"\n+```\n+\n+By default, the Rust compiler installs itself to `/usr/local` on most UNIX\n+systems. You may want to install it to another location (e.g. a local `install`\n+directory) by setting a custom prefix in `config.toml`:\n+\n+```toml\n+[install]\n+# Make sure to use the absolute path to your install directory\n+prefix = \"<RUST_SRC_PATH>/install\"\n ```\n \n-Additionally, the following environment variables must be configured (for\n-example, using a script like `config-env.sh`):\n+Next, the following environment variables must be configured. For example, using\n+a script we name `config-env.sh`:\n \n ```sh\n # Configure this environment variable to be the path to the downloaded SDK\n@@ -215,8 +243,11 @@ export LDFLAGS_x86_64_fuchsia=\"--target=x86_64-fuchsia --sysroot=${SDK_PATH}/arc\n export CARGO_TARGET_X86_64_FUCHSIA_RUSTFLAGS=\"-C link-arg=--sysroot=${SDK_PATH}/arch/x64/sysroot -Lnative=${SDK_PATH}/arch/x64/sysroot/lib -Lnative=${SDK_PATH}/arch/x64/lib\"\n ```\n \n-These can be run together in a shell environment by executing\n-`(source config-env.sh && ./x.py install)`.\n+Finally, the Rust compiler can be built and installed:\n+\n+```sh\n+(source config-env.sh && ./x.py install)\n+```\n \n Once `rustc` is installed, we can create a new working directory to work from,\n `hello_fuchsia` along with `hello_fuchsia/src`:\n@@ -641,31 +672,38 @@ available on the [Fuchsia devsite].\n \n ### Running the compiler test suite\n \n-Pre-requisites for running the Rust test suite on Fuchsia are:\n-1. Checkout of Rust source.\n-1. Setup of `config-env.sh` and `config.toml` from \"[Targeting Fuchsia with a compiler built from source](#targeting-fuchsia-with-a-compiler-built-from-source)\".\n-1. Download of the Fuchsia SDK. Minimum supported SDK version is [9.20220726.1.1](https://chrome-infra-packages.appspot.com/p/fuchsia/sdk/core/linux-amd64/+/version:9.20220726.1.1)\n+The commands in this section assume that they are being run from inside your\n+local Rust source checkout:\n+\n+```sh\n+cd ${RUST_SRC_PATH}\n+```\n+\n+To run the Rust test suite on an emulated Fuchsia device, you must install the\n+Rust compiler locally. See \"[Targeting Fuchsia with a compiler built from source](#targeting-fuchsia-with-a-compiler-built-from-source)\"\n+for the steps to build locally.\n \n-Interfacing with the Fuchsia emulator is handled by our test runner script located\n-at `${RUST_SRC_PATH}/src/ci/docker/scripts/fuchsia-test-runner.py`.\n+You'll also need to download a copy of the Fuchsia SDK. The current minimum\n+supported SDK version is [9.20220726.1.1](https://chrome-infra-packages.appspot.com/p/fuchsia/sdk/core/linux-amd64/+/version:9.20220726.1.1).\n \n-We start by activating our Fuchsia test environment. From a terminal:\n+Fuchsia's test runner interacts with the Fuchsia emulator and is located at\n+`src/ci/docker/scripts/fuchsia-test-runner.py`. We can use it to start our\n+test environment with:\n \n-**Issue command from ${RUST_SRC_PATH}**\n ```sh\n src/ci/docker/scripts/fuchsia-test-runner.py start\n-    --rust .\n+    --rust ${RUST_SRC_PATH}/install\n     --sdk ${SDK_PATH}\n     --target-arch {x64,arm64}\n ```\n \n-Next, for ease of commands, we copy `config-env.sh` and `config.toml` into our Rust source\n-code path, `${RUST_SRC_PATH}`.\n+Where `${RUST_SRC_PATH}/install` is the `prefix` set in `config.toml` and\n+`${SDK_PATH}` is the path to the downloaded and unzipped SDK.\n \n-From there, we utilize `x.py` to run our tests, using the test runner script to\n-run the tests on our emulator. To run the full `src/test/ui` test suite:\n+Once our environment is started, we can run our tests using `x.py` as usual. The\n+test runner script will run the compiled tests on an emulated Fuchsia device. To\n+run the full `src/test/ui` test suite:\n \n-**Run from ${RUST_SRC_PATH}**\n ```sh\n ( \\\n     source config-env.sh &&                                                   \\\n@@ -689,9 +727,8 @@ run the tests on our emulator. To run the full `src/test/ui` test suite:\n *Note: The test suite cannot be run in parallel at the moment, so `x.py`\n must be run with `--jobs 1` to ensure only one test runs at a time.*\n \n-When finished, stop the test environment:\n+When finished, the test runner can be used to stop the test environment:\n \n-**Issue command from ${RUST_SRC_PATH}**\n ```sh\n src/ci/docker/scripts/fuchsia-test-runner.py stop\n ```"}]}