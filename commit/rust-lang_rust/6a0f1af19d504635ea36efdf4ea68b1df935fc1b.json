{"sha": "6a0f1af19d504635ea36efdf4ea68b1df935fc1b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZhMGYxYWYxOWQ1MDQ2MzVlYTM2ZWZkZjRlYTY4YjFkZjkzNWZjMWI=", "commit": {"author": {"name": "marmeladema", "email": "xademax@gmail.com", "date": "2020-06-12T17:43:58Z"}, "committer": {"name": "marmeladema", "email": "xademax@gmail.com", "date": "2020-06-20T10:03:58Z"}, "message": "Remove `HirId` to `NodeId` conversion APIs", "tree": {"sha": "47126ad24d8ef3352f449e83e1651f0bf320b60a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/47126ad24d8ef3352f449e83e1651f0bf320b60a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6a0f1af19d504635ea36efdf4ea68b1df935fc1b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6a0f1af19d504635ea36efdf4ea68b1df935fc1b", "html_url": "https://github.com/rust-lang/rust/commit/6a0f1af19d504635ea36efdf4ea68b1df935fc1b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6a0f1af19d504635ea36efdf4ea68b1df935fc1b/comments", "author": {"login": "marmeladema", "id": 1629419, "node_id": "MDQ6VXNlcjE2Mjk0MTk=", "avatar_url": "https://avatars.githubusercontent.com/u/1629419?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marmeladema", "html_url": "https://github.com/marmeladema", "followers_url": "https://api.github.com/users/marmeladema/followers", "following_url": "https://api.github.com/users/marmeladema/following{/other_user}", "gists_url": "https://api.github.com/users/marmeladema/gists{/gist_id}", "starred_url": "https://api.github.com/users/marmeladema/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marmeladema/subscriptions", "organizations_url": "https://api.github.com/users/marmeladema/orgs", "repos_url": "https://api.github.com/users/marmeladema/repos", "events_url": "https://api.github.com/users/marmeladema/events{/privacy}", "received_events_url": "https://api.github.com/users/marmeladema/received_events", "type": "User", "site_admin": false}, "committer": {"login": "marmeladema", "id": 1629419, "node_id": "MDQ6VXNlcjE2Mjk0MTk=", "avatar_url": "https://avatars.githubusercontent.com/u/1629419?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marmeladema", "html_url": "https://github.com/marmeladema", "followers_url": "https://api.github.com/users/marmeladema/followers", "following_url": "https://api.github.com/users/marmeladema/following{/other_user}", "gists_url": "https://api.github.com/users/marmeladema/gists{/gist_id}", "starred_url": "https://api.github.com/users/marmeladema/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marmeladema/subscriptions", "organizations_url": "https://api.github.com/users/marmeladema/orgs", "repos_url": "https://api.github.com/users/marmeladema/repos", "events_url": "https://api.github.com/users/marmeladema/events{/privacy}", "received_events_url": "https://api.github.com/users/marmeladema/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a98f35f503ad4df9c6083d01447700c57436a0bc", "url": "https://api.github.com/repos/rust-lang/rust/commits/a98f35f503ad4df9c6083d01447700c57436a0bc", "html_url": "https://github.com/rust-lang/rust/commit/a98f35f503ad4df9c6083d01447700c57436a0bc"}], "stats": {"total": 23, "additions": 5, "deletions": 18}, "files": [{"sha": "9913f92d2d98e306a8c559511222d49666abf165", "filename": "src/librustc_hir/definitions.rs", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/6a0f1af19d504635ea36efdf4ea68b1df935fc1b/src%2Flibrustc_hir%2Fdefinitions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6a0f1af19d504635ea36efdf4ea68b1df935fc1b/src%2Flibrustc_hir%2Fdefinitions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_hir%2Fdefinitions.rs?ref=6a0f1af19d504635ea36efdf4ea68b1df935fc1b", "patch": "@@ -337,11 +337,6 @@ impl Definitions {\n         self.local_def_id_to_hir_id(def_id)\n     }\n \n-    #[inline]\n-    pub fn hir_id_to_node_id(&self, hir_id: hir::HirId) -> ast::NodeId {\n-        self.hir_id_to_node_id[&hir_id]\n-    }\n-\n     #[inline]\n     pub fn local_def_id_to_hir_id(&self, id: LocalDefId) -> hir::HirId {\n         let node_id = self.def_id_to_node_id[id];\n@@ -356,7 +351,7 @@ impl Definitions {\n \n     #[inline]\n     pub fn opt_hir_id_to_local_def_id(&self, hir_id: hir::HirId) -> Option<LocalDefId> {\n-        let node_id = self.hir_id_to_node_id(hir_id);\n+        let node_id = self.hir_id_to_node_id[&hir_id];\n         self.opt_local_def_id(node_id)\n     }\n "}, {"sha": "dce06a5f7eeecd12125045c78a4613a40b59c04d", "filename": "src/librustc_middle/hir/map/collector.rs", "status": "modified", "additions": 4, "deletions": 12, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/6a0f1af19d504635ea36efdf4ea68b1df935fc1b/src%2Flibrustc_middle%2Fhir%2Fmap%2Fcollector.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6a0f1af19d504635ea36efdf4ea68b1df935fc1b/src%2Flibrustc_middle%2Fhir%2Fmap%2Fcollector.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_middle%2Fhir%2Fmap%2Fcollector.rs?ref=6a0f1af19d504635ea36efdf4ea68b1df935fc1b", "patch": "@@ -242,10 +242,8 @@ impl<'a, 'hir> NodeCollector<'a, 'hir> {\n         // Make sure that the DepNode of some node coincides with the HirId\n         // owner of that node.\n         if cfg!(debug_assertions) {\n-            let node_id = self.definitions.hir_id_to_node_id(hir_id);\n-\n             if hir_id.owner != self.current_dep_node_owner {\n-                let node_str = match self.definitions.opt_local_def_id(node_id) {\n+                let node_str = match self.definitions.opt_hir_id_to_local_def_id(hir_id) {\n                     Some(def_id) => self.definitions.def_path(def_id).to_string_no_crate(),\n                     None => format!(\"{:?}\", node),\n                 };\n@@ -335,9 +333,7 @@ impl<'a, 'hir> Visitor<'hir> for NodeCollector<'a, 'hir> {\n         debug!(\"visit_item: {:?}\", i);\n         debug_assert_eq!(\n             i.hir_id.owner,\n-            self.definitions\n-                .opt_local_def_id(self.definitions.hir_id_to_node_id(i.hir_id))\n-                .unwrap()\n+            self.definitions.opt_hir_id_to_local_def_id(i.hir_id).unwrap()\n         );\n         self.with_dep_node_owner(i.hir_id.owner, i, |this, hash| {\n             this.insert_with_hash(i.span, i.hir_id, Node::Item(i), hash);\n@@ -369,9 +365,7 @@ impl<'a, 'hir> Visitor<'hir> for NodeCollector<'a, 'hir> {\n     fn visit_trait_item(&mut self, ti: &'hir TraitItem<'hir>) {\n         debug_assert_eq!(\n             ti.hir_id.owner,\n-            self.definitions\n-                .opt_local_def_id(self.definitions.hir_id_to_node_id(ti.hir_id))\n-                .unwrap()\n+            self.definitions.opt_hir_id_to_local_def_id(ti.hir_id).unwrap()\n         );\n         self.with_dep_node_owner(ti.hir_id.owner, ti, |this, hash| {\n             this.insert_with_hash(ti.span, ti.hir_id, Node::TraitItem(ti), hash);\n@@ -385,9 +379,7 @@ impl<'a, 'hir> Visitor<'hir> for NodeCollector<'a, 'hir> {\n     fn visit_impl_item(&mut self, ii: &'hir ImplItem<'hir>) {\n         debug_assert_eq!(\n             ii.hir_id.owner,\n-            self.definitions\n-                .opt_local_def_id(self.definitions.hir_id_to_node_id(ii.hir_id))\n-                .unwrap()\n+            self.definitions.opt_hir_id_to_local_def_id(ii.hir_id).unwrap()\n         );\n         self.with_dep_node_owner(ii.hir_id.owner, ii, |this, hash| {\n             this.insert_with_hash(ii.span, ii.hir_id, Node::ImplItem(ii), hash);"}]}