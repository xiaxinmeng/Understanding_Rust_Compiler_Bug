{"sha": "1eb61203b725684fd2c7e25ac7e2d53eef10c64c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFlYjYxMjAzYjcyNTY4NGZkMmM3ZTI1YWM3ZTJkNTNlZWYxMGM2NGM=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2021-03-08T18:13:15Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2021-03-08T18:45:37Z"}, "message": "Make `code generation` just work\n\nContributors don't need to learn about `cargo xtask codegen` if `cargo\ntest` just does the right thing.", "tree": {"sha": "aae264078123fc4b9cbe6c9189179f6f147f8a88", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/aae264078123fc4b9cbe6c9189179f6f147f8a88"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1eb61203b725684fd2c7e25ac7e2d53eef10c64c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1eb61203b725684fd2c7e25ac7e2d53eef10c64c", "html_url": "https://github.com/rust-lang/rust/commit/1eb61203b725684fd2c7e25ac7e2d53eef10c64c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1eb61203b725684fd2c7e25ac7e2d53eef10c64c/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "abb6b8f14c4d05cf344048263651d8192997b6cf", "url": "https://api.github.com/repos/rust-lang/rust/commits/abb6b8f14c4d05cf344048263651d8192997b6cf", "html_url": "https://github.com/rust-lang/rust/commit/abb6b8f14c4d05cf344048263651d8192997b6cf"}], "stats": {"total": 92, "additions": 42, "deletions": 50}, "files": [{"sha": "078c83f75cddc258dfae178b60ea295d0ccd668a", "filename": "crates/rust-analyzer/src/config.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1eb61203b725684fd2c7e25ac7e2d53eef10c64c/crates%2Frust-analyzer%2Fsrc%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1eb61203b725684fd2c7e25ac7e2d53eef10c64c/crates%2Frust-analyzer%2Fsrc%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fconfig.rs?ref=1eb61203b725684fd2c7e25ac7e2d53eef10c64c", "patch": "@@ -864,7 +864,7 @@ mod tests {\n     use super::*;\n \n     #[test]\n-    fn ensure_schema_in_package_json() {\n+    fn generate_package_json_config() {\n         let s = Config::json_schema();\n         let schema = format!(\"{:#}\", s);\n         let mut schema = schema\n@@ -895,7 +895,7 @@ mod tests {\n     }\n \n     #[test]\n-    fn schema_in_sync_with_docs() {\n+    fn generate_config_documentation() {\n         let docs_path = project_root().join(\"docs/user/generated_config.adoc\");\n         let current = fs::read_to_string(&docs_path).unwrap();\n         let expected = ConfigData::manual();"}, {"sha": "dd582c77cee8057556b98f9280f8811673842e84", "filename": "crates/test_utils/src/lib.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/1eb61203b725684fd2c7e25ac7e2d53eef10c64c/crates%2Ftest_utils%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1eb61203b725684fd2c7e25ac7e2d53eef10c64c/crates%2Ftest_utils%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Ftest_utils%2Fsrc%2Flib.rs?ref=1eb61203b725684fd2c7e25ac7e2d53eef10c64c", "patch": "@@ -18,7 +18,7 @@ use std::{\n };\n \n use profile::StopWatch;\n-use stdx::lines_with_ends;\n+use stdx::{is_ci, lines_with_ends};\n use text_size::{TextRange, TextSize};\n \n pub use dissimilar::diff as __diff;\n@@ -376,6 +376,9 @@ pub fn try_ensure_file_contents(file: &Path, contents: &str) -> Result<(), ()> {\n         \"\\n\\x1b[31;1merror\\x1b[0m: {} was not up-to-date, updating\\n\",\n         display_path.display()\n     );\n+    if is_ci() {\n+        eprintln!(\"\\n    NOTE: run `cargo test` locally and commit the updated files\\n\");\n+    }\n     if let Some(parent) = file.parent() {\n         let _ = std::fs::create_dir_all(parent);\n     }"}, {"sha": "0a3fd428564bff9ee9148c98c4c6337612ebc3a0", "filename": "docs/dev/architecture.md", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/1eb61203b725684fd2c7e25ac7e2d53eef10c64c/docs%2Fdev%2Farchitecture.md", "raw_url": "https://github.com/rust-lang/rust/raw/1eb61203b725684fd2c7e25ac7e2d53eef10c64c/docs%2Fdev%2Farchitecture.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/docs%2Fdev%2Farchitecture.md?ref=1eb61203b725684fd2c7e25ac7e2d53eef10c64c", "patch": "@@ -308,9 +308,8 @@ This sections talks about the things which are everywhere and nowhere in particu\n ### Code generation\n \n Some of the components of this repository are generated through automatic processes.\n-`cargo xtask codegen` runs all generation tasks.\n+Generated code is updated automatically on `cargo test`.\n Generated code is generally committed to the git repository.\n-There are tests to check that the generated code is fresh.\n \n In particular, we generate:\n "}, {"sha": "7cdd8f25186beee00be65d5a2cab374a1f86a41b", "filename": "xtask/src/codegen.rs", "status": "modified", "additions": 20, "deletions": 23, "changes": 43, "blob_url": "https://github.com/rust-lang/rust/blob/1eb61203b725684fd2c7e25ac7e2d53eef10c64c/xtask%2Fsrc%2Fcodegen.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1eb61203b725684fd2c7e25ac7e2d53eef10c64c/xtask%2Fsrc%2Fcodegen.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/xtask%2Fsrc%2Fcodegen.rs?ref=1eb61203b725684fd2c7e25ac7e2d53eef10c64c", "patch": "@@ -7,9 +7,9 @@\n \n mod gen_syntax;\n mod gen_parser_tests;\n+mod gen_lint_completions;\n mod gen_assists_docs;\n mod gen_feature_docs;\n-mod gen_lint_completions;\n mod gen_diagnostic_docs;\n \n use std::{\n@@ -18,38 +18,35 @@ use std::{\n };\n use xshell::{cmd, pushenv, read_file, write_file};\n \n-use crate::{ensure_rustfmt, flags, project_root, Result};\n+use crate::{ensure_rustfmt, project_root, Result};\n \n pub(crate) use self::{\n-    gen_assists_docs::{generate_assists_docs, generate_assists_tests},\n-    gen_diagnostic_docs::generate_diagnostic_docs,\n-    gen_feature_docs::generate_feature_docs,\n-    gen_lint_completions::generate_lint_completions,\n-    gen_parser_tests::generate_parser_tests,\n-    gen_syntax::generate_syntax,\n+    gen_assists_docs::generate_assists_tests, gen_lint_completions::generate_lint_completions,\n+    gen_parser_tests::generate_parser_tests, gen_syntax::generate_syntax,\n };\n \n+pub(crate) fn docs() -> Result<()> {\n+    // We don't commit docs to the repo, so we can just overwrite them.\n+    gen_assists_docs::generate_assists_docs(Mode::Overwrite)?;\n+    gen_feature_docs::generate_feature_docs(Mode::Overwrite)?;\n+    gen_diagnostic_docs::generate_diagnostic_docs(Mode::Overwrite)?;\n+    Ok(())\n+}\n+\n+#[allow(unused)]\n+fn used() {\n+    generate_parser_tests(Mode::Overwrite);\n+    generate_assists_tests(Mode::Overwrite);\n+    generate_syntax(Mode::Overwrite);\n+    generate_lint_completions(Mode::Overwrite);\n+}\n+\n #[derive(Debug, PartialEq, Eq, Clone, Copy)]\n pub(crate) enum Mode {\n     Overwrite,\n     Ensure,\n }\n \n-impl flags::Codegen {\n-    pub(crate) fn run(self) -> Result<()> {\n-        if self.features {\n-            generate_lint_completions(Mode::Overwrite)?;\n-        }\n-        generate_syntax(Mode::Overwrite)?;\n-        generate_parser_tests(Mode::Overwrite)?;\n-        generate_assists_tests(Mode::Overwrite)?;\n-        generate_assists_docs(Mode::Overwrite)?;\n-        generate_feature_docs(Mode::Overwrite)?;\n-        generate_diagnostic_docs(Mode::Overwrite)?;\n-        Ok(())\n-    }\n-}\n-\n /// A helper to update file on disk if it has changed.\n /// With verify = false,\n fn update(path: &Path, contents: &str, mode: Mode) -> Result<()> {"}, {"sha": "48d1ad45e807a6cb0aa650e12c35f98d310c2b76", "filename": "xtask/src/flags.rs", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/1eb61203b725684fd2c7e25ac7e2d53eef10c64c/xtask%2Fsrc%2Fflags.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1eb61203b725684fd2c7e25ac7e2d53eef10c64c/xtask%2Fsrc%2Fflags.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/xtask%2Fsrc%2Fflags.rs?ref=1eb61203b725684fd2c7e25ac7e2d53eef10c64c", "patch": "@@ -27,10 +27,6 @@ xflags::xflags! {\n             optional --jemalloc\n         }\n \n-        cmd codegen {\n-            optional --features\n-        }\n-\n         cmd lint {}\n         cmd fuzz-tests {}\n         cmd pre-cache {}\n@@ -67,7 +63,6 @@ pub struct Xtask {\n pub enum XtaskCmd {\n     Help(Help),\n     Install(Install),\n-    Codegen(Codegen),\n     Lint(Lint),\n     FuzzTests(FuzzTests),\n     PreCache(PreCache),\n@@ -92,11 +87,6 @@ pub struct Install {\n     pub jemalloc: bool,\n }\n \n-#[derive(Debug)]\n-pub struct Codegen {\n-    pub features: bool,\n-}\n-\n #[derive(Debug)]\n pub struct Lint;\n "}, {"sha": "c2dda928e804c90eebf0560d458beb2606a8f2b2", "filename": "xtask/src/main.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1eb61203b725684fd2c7e25ac7e2d53eef10c64c/xtask%2Fsrc%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1eb61203b725684fd2c7e25ac7e2d53eef10c64c/xtask%2Fsrc%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/xtask%2Fsrc%2Fmain.rs?ref=1eb61203b725684fd2c7e25ac7e2d53eef10c64c", "patch": "@@ -40,7 +40,6 @@ fn main() -> Result<()> {\n             return Ok(());\n         }\n         flags::XtaskCmd::Install(cmd) => cmd.run(),\n-        flags::XtaskCmd::Codegen(cmd) => cmd.run(),\n         flags::XtaskCmd::Lint(_) => run_clippy(),\n         flags::XtaskCmd::FuzzTests(_) => run_fuzzer(),\n         flags::XtaskCmd::PreCache(cmd) => cmd.run(),"}, {"sha": "dde5d14ee548d963356a781576922223c6f6055e", "filename": "xtask/src/release.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/1eb61203b725684fd2c7e25ac7e2d53eef10c64c/xtask%2Fsrc%2Frelease.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1eb61203b725684fd2c7e25ac7e2d53eef10c64c/xtask%2Fsrc%2Frelease.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/xtask%2Fsrc%2Frelease.rs?ref=1eb61203b725684fd2c7e25ac7e2d53eef10c64c", "patch": "@@ -2,7 +2,7 @@ use std::fmt::Write;\n \n use xshell::{cmd, cp, pushd, read_dir, write_file};\n \n-use crate::{codegen, date_iso, flags, is_release_tag, project_root, Mode, Result};\n+use crate::{codegen, date_iso, flags, is_release_tag, project_root, Result};\n \n impl flags::Release {\n     pub(crate) fn run(self) -> Result<()> {\n@@ -12,8 +12,7 @@ impl flags::Release {\n             cmd!(\"git reset --hard tags/nightly\").run()?;\n             cmd!(\"git push\").run()?;\n         }\n-        codegen::generate_assists_docs(Mode::Overwrite)?;\n-        codegen::generate_feature_docs(Mode::Overwrite)?;\n+        codegen::docs()?;\n \n         let website_root = project_root().join(\"../rust-analyzer.github.io\");\n         let changelog_dir = website_root.join(\"./thisweek/_posts\");"}, {"sha": "03b4c0092627563c5865c26abdd98ae682133555", "filename": "xtask/src/tidy.rs", "status": "modified", "additions": 13, "deletions": 8, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/1eb61203b725684fd2c7e25ac7e2d53eef10c64c/xtask%2Fsrc%2Ftidy.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1eb61203b725684fd2c7e25ac7e2d53eef10c64c/xtask%2Fsrc%2Ftidy.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/xtask%2Fsrc%2Ftidy.rs?ref=1eb61203b725684fd2c7e25ac7e2d53eef10c64c", "patch": "@@ -12,31 +12,36 @@ use crate::{\n };\n \n #[test]\n-fn generated_grammar_is_fresh() {\n+fn generate_grammar() {\n     codegen::generate_syntax(Mode::Ensure).unwrap()\n }\n \n #[test]\n-fn generated_tests_are_fresh() {\n+fn generate_parser_tests() {\n     codegen::generate_parser_tests(Mode::Ensure).unwrap()\n }\n \n #[test]\n-fn generated_assists_are_fresh() {\n+fn generate_assists_tests() {\n     codegen::generate_assists_tests(Mode::Ensure).unwrap();\n }\n \n+/// This clones rustc repo, and so is not worth to keep up-to-date. We update\n+/// manually by un-ignoring the test from time to time.\n+#[test]\n+#[ignore]\n+fn generate_lint_completions() {\n+    codegen::generate_lint_completions(Mode::Overwrite).unwrap()\n+}\n+\n #[test]\n fn check_code_formatting() {\n     run_rustfmt(Mode::Ensure).unwrap()\n }\n \n #[test]\n-fn smoke_test_docs_generation() {\n-    // We don't commit docs to the repo, so we can just overwrite in tests.\n-    codegen::generate_assists_docs(Mode::Overwrite).unwrap();\n-    codegen::generate_feature_docs(Mode::Overwrite).unwrap();\n-    codegen::generate_diagnostic_docs(Mode::Overwrite).unwrap();\n+fn smoke_test_generate_documentation() {\n+    codegen::docs().unwrap()\n }\n \n #[test]"}]}