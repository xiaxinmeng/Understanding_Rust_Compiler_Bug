{"sha": "0da105a8b7b6b1e0568e8ff20f6ff4b13cc7ecc2", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBkYTEwNWE4YjdiNmIxZTA1NjhlOGZmMjBmNmZmNGIxM2NjN2VjYzI=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2014-01-06T18:31:46Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2014-01-06T18:31:46Z"}, "message": "auto merge of #11334 : alexcrichton/rust/fix-native-tcp, r=pcwalton\n\nlibnative erroneously would attempt to fill the entire buffer in a call to\r\n`read` before returning, when rather it should return immediately because\r\nthere's not guaranteed to be any data that will ever be received again.\r\n\r\nClose #11328", "tree": {"sha": "a38543052b4f21492467265630caf5f89e396de6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a38543052b4f21492467265630caf5f89e396de6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0da105a8b7b6b1e0568e8ff20f6ff4b13cc7ecc2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0da105a8b7b6b1e0568e8ff20f6ff4b13cc7ecc2", "html_url": "https://github.com/rust-lang/rust/commit/0da105a8b7b6b1e0568e8ff20f6ff4b13cc7ecc2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0da105a8b7b6b1e0568e8ff20f6ff4b13cc7ecc2/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8b71b6415dd16dc694bc7d3b1a99d0116b6a0cee", "url": "https://api.github.com/repos/rust-lang/rust/commits/8b71b6415dd16dc694bc7d3b1a99d0116b6a0cee", "html_url": "https://github.com/rust-lang/rust/commit/8b71b6415dd16dc694bc7d3b1a99d0116b6a0cee"}, {"sha": "11e568c886ce1ced558dc638065f938ea3dee973", "url": "https://api.github.com/repos/rust-lang/rust/commits/11e568c886ce1ced558dc638065f938ea3dee973", "html_url": "https://github.com/rust-lang/rust/commit/11e568c886ce1ced558dc638065f938ea3dee973"}], "stats": {"total": 29, "additions": 25, "deletions": 4}, "files": [{"sha": "adcd21f0ac4c5d85b6e5797d00d75569881e1fcc", "filename": "src/libnative/io/net.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/0da105a8b7b6b1e0568e8ff20f6ff4b13cc7ecc2/src%2Flibnative%2Fio%2Fnet.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0da105a8b7b6b1e0568e8ff20f6ff4b13cc7ecc2/src%2Flibnative%2Fio%2Fnet.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibnative%2Fio%2Fnet.rs?ref=0da105a8b7b6b1e0568e8ff20f6ff4b13cc7ecc2", "patch": "@@ -275,12 +275,12 @@ impl TcpStream {\n \n impl rtio::RtioTcpStream for TcpStream {\n     fn read(&mut self, buf: &mut [u8]) -> IoResult<uint> {\n-        let ret = keep_going(buf, |buf, len| {\n+        let ret = retry(|| {\n             unsafe {\n                 libc::recv(self.fd,\n-                           buf as *mut libc::c_void,\n-                           len as wrlen,\n-                           0) as i64\n+                           buf.as_ptr() as *mut libc::c_void,\n+                           buf.len() as wrlen,\n+                           0) as libc::c_int\n             }\n         });\n         if ret == 0 {"}, {"sha": "c2a70e0120d2968fc794ea45cda40d8475348bd2", "filename": "src/libstd/io/net/tcp.rs", "status": "modified", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/0da105a8b7b6b1e0568e8ff20f6ff4b13cc7ecc2/src%2Flibstd%2Fio%2Fnet%2Ftcp.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0da105a8b7b6b1e0568e8ff20f6ff4b13cc7ecc2/src%2Flibstd%2Fio%2Fnet%2Ftcp.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fio%2Fnet%2Ftcp.rs?ref=0da105a8b7b6b1e0568e8ff20f6ff4b13cc7ecc2", "patch": "@@ -589,4 +589,25 @@ mod test {\n         //peer_name(next_test_ip6());\n         socket_name(next_test_ip6());\n     })\n+\n+    iotest!(fn partial_read() {\n+        let addr = next_test_ip4();\n+        let (p, c) = Chan::new();\n+        do spawn {\n+            let mut srv = TcpListener::bind(addr).listen();\n+            c.send(());\n+            let mut cl = srv.accept().unwrap();\n+            cl.write([10]);\n+            let mut b = [0];\n+            cl.read(b);\n+            c.send(());\n+        }\n+\n+        p.recv();\n+        let mut c = TcpStream::connect(addr).unwrap();\n+        let mut b = [0, ..10];\n+        assert_eq!(c.read(b), Some(1));\n+        c.write([1]);\n+        p.recv();\n+    })\n }"}]}