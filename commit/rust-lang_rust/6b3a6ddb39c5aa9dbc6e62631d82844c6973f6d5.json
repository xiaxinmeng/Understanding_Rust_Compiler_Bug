{"sha": "6b3a6ddb39c5aa9dbc6e62631d82844c6973f6d5", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZiM2E2ZGRiMzljNWFhOWRiYzZlNjI2MzFkODI4NDRjNjk3M2Y2ZDU=", "commit": {"author": {"name": "Alex.F", "email": "gfreezy@gmail.com", "date": "2021-08-15T16:21:12Z"}, "committer": {"name": "Alex.F", "email": "gfreezy@gmail.com", "date": "2021-08-15T16:21:12Z"}, "message": "fix lint", "tree": {"sha": "791bbfe3323b83d04ccd8b485526b54ab1555792", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/791bbfe3323b83d04ccd8b485526b54ab1555792"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6b3a6ddb39c5aa9dbc6e62631d82844c6973f6d5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6b3a6ddb39c5aa9dbc6e62631d82844c6973f6d5", "html_url": "https://github.com/rust-lang/rust/commit/6b3a6ddb39c5aa9dbc6e62631d82844c6973f6d5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6b3a6ddb39c5aa9dbc6e62631d82844c6973f6d5/comments", "author": {"login": "gfreezy", "id": 510012, "node_id": "MDQ6VXNlcjUxMDAxMg==", "avatar_url": "https://avatars.githubusercontent.com/u/510012?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gfreezy", "html_url": "https://github.com/gfreezy", "followers_url": "https://api.github.com/users/gfreezy/followers", "following_url": "https://api.github.com/users/gfreezy/following{/other_user}", "gists_url": "https://api.github.com/users/gfreezy/gists{/gist_id}", "starred_url": "https://api.github.com/users/gfreezy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gfreezy/subscriptions", "organizations_url": "https://api.github.com/users/gfreezy/orgs", "repos_url": "https://api.github.com/users/gfreezy/repos", "events_url": "https://api.github.com/users/gfreezy/events{/privacy}", "received_events_url": "https://api.github.com/users/gfreezy/received_events", "type": "User", "site_admin": false}, "committer": {"login": "gfreezy", "id": 510012, "node_id": "MDQ6VXNlcjUxMDAxMg==", "avatar_url": "https://avatars.githubusercontent.com/u/510012?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gfreezy", "html_url": "https://github.com/gfreezy", "followers_url": "https://api.github.com/users/gfreezy/followers", "following_url": "https://api.github.com/users/gfreezy/following{/other_user}", "gists_url": "https://api.github.com/users/gfreezy/gists{/gist_id}", "starred_url": "https://api.github.com/users/gfreezy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gfreezy/subscriptions", "organizations_url": "https://api.github.com/users/gfreezy/orgs", "repos_url": "https://api.github.com/users/gfreezy/repos", "events_url": "https://api.github.com/users/gfreezy/events{/privacy}", "received_events_url": "https://api.github.com/users/gfreezy/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d13f6ba75007816b6eae66719c4a68e27f47d44c", "url": "https://api.github.com/repos/rust-lang/rust/commits/d13f6ba75007816b6eae66719c4a68e27f47d44c", "html_url": "https://github.com/rust-lang/rust/commit/d13f6ba75007816b6eae66719c4a68e27f47d44c"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "aa57081a5f3695617f03ca4cd54062bd3c10b938", "filename": "editors/code/src/util.ts", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6b3a6ddb39c5aa9dbc6e62631d82844c6973f6d5/editors%2Fcode%2Fsrc%2Futil.ts", "raw_url": "https://github.com/rust-lang/rust/raw/6b3a6ddb39c5aa9dbc6e62631d82844c6973f6d5/editors%2Fcode%2Fsrc%2Futil.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Futil.ts?ref=6b3a6ddb39c5aa9dbc6e62631d82844c6973f6d5", "patch": "@@ -131,7 +131,7 @@ export function setContextValue(key: string, value: any): Thenable<void> {\n export function memoizeAsync<Ret, TThis, Param extends string>(func: (this: TThis, arg: Param) => Promise<Ret>) {\n     const cache = new Map<string, Ret>();\n \n-    return async function (this: TThis, arg: Param) {\n+    return async function(this: TThis, arg: Param) {\n         const cached = cache.get(arg);\n         if (cached) return cached;\n "}]}