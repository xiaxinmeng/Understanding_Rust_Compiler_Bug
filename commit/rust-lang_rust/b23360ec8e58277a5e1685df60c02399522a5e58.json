{"sha": "b23360ec8e58277a5e1685df60c02399522a5e58", "node_id": "MDY6Q29tbWl0NzI0NzEyOmIyMzM2MGVjOGU1ODI3N2E1ZTE2ODVkZjYwYzAyMzk5NTIyYTVlNTg=", "commit": {"author": {"name": "Lindsey Kuper", "email": "lkuper@mozilla.com", "date": "2011-08-10T19:55:21Z"}, "committer": {"name": "Lindsey Kuper", "email": "lkuper@mozilla.com", "date": "2011-08-10T22:11:32Z"}, "message": "Test case for issue #812.", "tree": {"sha": "019b2ae006652074f716c5d69deeecd77c6dfe75", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/019b2ae006652074f716c5d69deeecd77c6dfe75"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b23360ec8e58277a5e1685df60c02399522a5e58", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b23360ec8e58277a5e1685df60c02399522a5e58", "html_url": "https://github.com/rust-lang/rust/commit/b23360ec8e58277a5e1685df60c02399522a5e58", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b23360ec8e58277a5e1685df60c02399522a5e58/comments", "author": {"login": "lkuper", "id": 535218, "node_id": "MDQ6VXNlcjUzNTIxOA==", "avatar_url": "https://avatars.githubusercontent.com/u/535218?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lkuper", "html_url": "https://github.com/lkuper", "followers_url": "https://api.github.com/users/lkuper/followers", "following_url": "https://api.github.com/users/lkuper/following{/other_user}", "gists_url": "https://api.github.com/users/lkuper/gists{/gist_id}", "starred_url": "https://api.github.com/users/lkuper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lkuper/subscriptions", "organizations_url": "https://api.github.com/users/lkuper/orgs", "repos_url": "https://api.github.com/users/lkuper/repos", "events_url": "https://api.github.com/users/lkuper/events{/privacy}", "received_events_url": "https://api.github.com/users/lkuper/received_events", "type": "User", "site_admin": false}, "committer": {"login": "lkuper", "id": 535218, "node_id": "MDQ6VXNlcjUzNTIxOA==", "avatar_url": "https://avatars.githubusercontent.com/u/535218?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lkuper", "html_url": "https://github.com/lkuper", "followers_url": "https://api.github.com/users/lkuper/followers", "following_url": "https://api.github.com/users/lkuper/following{/other_user}", "gists_url": "https://api.github.com/users/lkuper/gists{/gist_id}", "starred_url": "https://api.github.com/users/lkuper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lkuper/subscriptions", "organizations_url": "https://api.github.com/users/lkuper/orgs", "repos_url": "https://api.github.com/users/lkuper/repos", "events_url": "https://api.github.com/users/lkuper/events{/privacy}", "received_events_url": "https://api.github.com/users/lkuper/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6affa3264b6e1bb6dec39b0393c9b0f4df9df7b4", "url": "https://api.github.com/repos/rust-lang/rust/commits/6affa3264b6e1bb6dec39b0393c9b0f4df9df7b4", "html_url": "https://github.com/rust-lang/rust/commit/6affa3264b6e1bb6dec39b0393c9b0f4df9df7b4"}], "stats": {"total": 19, "additions": 19, "deletions": 0}, "files": [{"sha": "039a8594b4445f52e8c09748c067c9eac48020ed", "filename": "src/test/run-pass/anon-obj-no-inner-obj.rs", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/b23360ec8e58277a5e1685df60c02399522a5e58/src%2Ftest%2Frun-pass%2Fanon-obj-no-inner-obj.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b23360ec8e58277a5e1685df60c02399522a5e58/src%2Ftest%2Frun-pass%2Fanon-obj-no-inner-obj.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fanon-obj-no-inner-obj.rs?ref=b23360ec8e58277a5e1685df60c02399522a5e58", "patch": "@@ -0,0 +1,19 @@\n+//xfail-stage1\n+//xfail-stage2\n+//xfail-stage3\n+use std;\n+\n+// Should we support this?  See issue #812.\n+\n+fn main() {\n+\n+    // Anonymous object that doesn't extend an existing one.\n+    let my_obj = obj () {\n+        fn foo() -> int { ret 2; }\n+        fn bar() -> int { ret self.foo(); }\n+    };\n+\n+    assert (my_obj.foo() == 2);\n+    assert (my_obj.bar() == 2);\n+\n+}"}]}