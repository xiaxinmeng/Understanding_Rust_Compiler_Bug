{"sha": "25c221ec92bdf7be29335f4ea830edb9509a8ce9", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI1YzIyMWVjOTJiZGY3YmUyOTMzNWY0ZWE4MzBlZGI5NTA5YThjZTk=", "commit": {"author": {"name": "Yusuke Tanaka", "email": "yusuktan@maguro.dev", "date": "2021-02-10T16:27:44Z"}, "committer": {"name": "flip1995", "email": "philipp.krones@embecosm.com", "date": "2021-03-02T09:40:24Z"}, "message": "Move transmutes_expressible_as_ptr_casts to its own module", "tree": {"sha": "16f261bc42384d105c1183ae95d3d131801e1c28", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/16f261bc42384d105c1183ae95d3d131801e1c28"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/25c221ec92bdf7be29335f4ea830edb9509a8ce9", "comment_count": 0, "verification": {"verified": false, "reason": "bad_email", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEij1UXJ/PQTcb99vTHKDfKvWdaKUFAmA+CAgACgkQHKDfKvWd\naKUzaRAAlNzM/AKLc3RT8CN/qZx6/wA9QKCd10BgO0K6wymAVfMamF3HQcVEecxx\ni8dl79gDUT/Q56uDn24A5Z07F+WPtPKqNgZRw+htQpYsqaDuYGODRnrLxLZrlL2d\nVLVnJGlI51Jvnjk1BGFWEc+xnpjwp4oZ1n19UnEwf0VGl12oVmphnZ9+GexK3Skb\nHWMl+UyRifUlZ6Bkz5SBkk9eLeZfowINf4XEuDRebwae4P8ysyk2BCTbeLLScQ8W\nTqN33UzUGeOo7K2yN85FDyo/AN9kLjjEOwA+Jem8CJ+zCFqCTSyJCdNi+9+ibTvR\niSEituKaATyqXW6IMa8soDOWy3sucXflFmEpYXs1Zw51Mn3rYZMqz5Cmn2EjeE7p\nVXjRb3Z93ElvgLKWqs3iZUcR3G7vDiR2NbdPFzpfNUJAkj2NUId111RTeZA6+d2K\njacdWgTp58fvcfN8IxICjI7QYsenhLV1iaOSGgm4DsTr6XDiAbZHhB+52LLOCyBn\nfxoq0l04PlObmI/h/BfnH7mQkEXyXmx1cQ08W+u3KvuXyrWpWKW0Cd4JYGPp/kjB\n7JW3mkrIBHAyinChldxiqAQlJsyQwG7Eg3Cjmy2KYO75+66UQY/4QgTv8VzPtFl5\npqHiTSPI/H9SYBwcIzF/9om+l6/RSLCB9Bk/JZMm2dpY44gEaJU=\n=+3Uc\n-----END PGP SIGNATURE-----", "payload": "tree 16f261bc42384d105c1183ae95d3d131801e1c28\nparent c57a8260f22d4968f8c802ce92593a32e1e27f4c\nauthor Yusuke Tanaka <yusuktan@maguro.dev> 1612974464 +0900\ncommitter flip1995 <philipp.krones@embecosm.com> 1614678024 +0100\n\nMove transmutes_expressible_as_ptr_casts to its own module\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/25c221ec92bdf7be29335f4ea830edb9509a8ce9", "html_url": "https://github.com/rust-lang/rust/commit/25c221ec92bdf7be29335f4ea830edb9509a8ce9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/25c221ec92bdf7be29335f4ea830edb9509a8ce9/comments", "author": {"login": "magurotuna", "id": 23649474, "node_id": "MDQ6VXNlcjIzNjQ5NDc0", "avatar_url": "https://avatars.githubusercontent.com/u/23649474?v=4", "gravatar_id": "", "url": "https://api.github.com/users/magurotuna", "html_url": "https://github.com/magurotuna", "followers_url": "https://api.github.com/users/magurotuna/followers", "following_url": "https://api.github.com/users/magurotuna/following{/other_user}", "gists_url": "https://api.github.com/users/magurotuna/gists{/gist_id}", "starred_url": "https://api.github.com/users/magurotuna/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/magurotuna/subscriptions", "organizations_url": "https://api.github.com/users/magurotuna/orgs", "repos_url": "https://api.github.com/users/magurotuna/repos", "events_url": "https://api.github.com/users/magurotuna/events{/privacy}", "received_events_url": "https://api.github.com/users/magurotuna/received_events", "type": "User", "site_admin": false}, "committer": {"login": "flip1995", "id": 9744647, "node_id": "MDQ6VXNlcjk3NDQ2NDc=", "avatar_url": "https://avatars.githubusercontent.com/u/9744647?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flip1995", "html_url": "https://github.com/flip1995", "followers_url": "https://api.github.com/users/flip1995/followers", "following_url": "https://api.github.com/users/flip1995/following{/other_user}", "gists_url": "https://api.github.com/users/flip1995/gists{/gist_id}", "starred_url": "https://api.github.com/users/flip1995/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flip1995/subscriptions", "organizations_url": "https://api.github.com/users/flip1995/orgs", "repos_url": "https://api.github.com/users/flip1995/repos", "events_url": "https://api.github.com/users/flip1995/events{/privacy}", "received_events_url": "https://api.github.com/users/flip1995/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c57a8260f22d4968f8c802ce92593a32e1e27f4c", "url": "https://api.github.com/repos/rust-lang/rust/commits/c57a8260f22d4968f8c802ce92593a32e1e27f4c", "html_url": "https://github.com/rust-lang/rust/commit/c57a8260f22d4968f8c802ce92593a32e1e27f4c"}], "stats": {"total": 63, "additions": 42, "deletions": 21}, "files": [{"sha": "3b010f39c8ab58b78b6fbaa11779fda526c39e27", "filename": "clippy_lints/src/transmute/mod.rs", "status": "modified", "additions": 4, "deletions": 21, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/25c221ec92bdf7be29335f4ea830edb9509a8ce9/clippy_lints%2Fsrc%2Ftransmute%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/25c221ec92bdf7be29335f4ea830edb9509a8ce9/clippy_lints%2Fsrc%2Ftransmute%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Ftransmute%2Fmod.rs?ref=25c221ec92bdf7be29335f4ea830edb9509a8ce9", "patch": "@@ -6,6 +6,7 @@ mod transmute_int_to_float;\n mod transmute_ptr_to_ptr;\n mod transmute_ptr_to_ref;\n mod transmute_ref_to_ref;\n+mod transmutes_expressible_as_ptr_casts;\n mod unsound_collection_transmute;\n mod useless_transmute;\n mod utils;\n@@ -389,27 +390,9 @@ impl<'tcx> LateLintPass<'tcx> for Transmute {\n                 if triggered {\n                     return;\n                 }\n-\n-                match (&from_ty.kind(), &to_ty.kind()) {\n-                    (_, _) if can_be_expressed_as_pointer_cast(cx, e, from_ty, to_ty) => span_lint_and_then(\n-                        cx,\n-                        TRANSMUTES_EXPRESSIBLE_AS_PTR_CASTS,\n-                        e.span,\n-                        &format!(\n-                            \"transmute from `{}` to `{}` which could be expressed as a pointer cast instead\",\n-                            from_ty,\n-                            to_ty\n-                        ),\n-                        |diag| {\n-                            if let Some(arg) = sugg::Sugg::hir_opt(cx, &args[0]) {\n-                                let sugg = arg.as_ty(&to_ty.to_string()).to_string();\n-                                diag.span_suggestion(e.span, \"try\", sugg, Applicability::MachineApplicable);\n-                            }\n-                        }\n-                    ),\n-                    _ => {\n-                        return;\n-                    },\n+                let triggered = transmutes_expressible_as_ptr_casts::check(cx, e, from_ty, to_ty, args);\n+                if triggered {\n+                    return;\n                 }\n             }\n         }"}, {"sha": "dea896622f11c5727efb8e9d7f83959832a9adb0", "filename": "clippy_lints/src/transmute/transmutes_expressible_as_ptr_casts.rs", "status": "added", "additions": 38, "deletions": 0, "changes": 38, "blob_url": "https://github.com/rust-lang/rust/blob/25c221ec92bdf7be29335f4ea830edb9509a8ce9/clippy_lints%2Fsrc%2Ftransmute%2Ftransmutes_expressible_as_ptr_casts.rs", "raw_url": "https://github.com/rust-lang/rust/raw/25c221ec92bdf7be29335f4ea830edb9509a8ce9/clippy_lints%2Fsrc%2Ftransmute%2Ftransmutes_expressible_as_ptr_casts.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Ftransmute%2Ftransmutes_expressible_as_ptr_casts.rs?ref=25c221ec92bdf7be29335f4ea830edb9509a8ce9", "patch": "@@ -0,0 +1,38 @@\n+use super::utils::can_be_expressed_as_pointer_cast;\n+use super::TRANSMUTES_EXPRESSIBLE_AS_PTR_CASTS;\n+use crate::utils::{span_lint_and_then, sugg};\n+use rustc_errors::Applicability;\n+use rustc_hir::Expr;\n+use rustc_lint::LateContext;\n+use rustc_middle::ty::Ty;\n+\n+/// Checks for `transmutes_expressible_as_ptr_casts` lint.\n+/// Returns `true` if it's triggered, otherwise returns `false`.\n+pub(super) fn check<'tcx>(\n+    cx: &LateContext<'tcx>,\n+    e: &'tcx Expr<'_>,\n+    from_ty: Ty<'tcx>,\n+    to_ty: Ty<'tcx>,\n+    args: &'tcx [Expr<'_>],\n+) -> bool {\n+    if can_be_expressed_as_pointer_cast(cx, e, from_ty, to_ty) {\n+        span_lint_and_then(\n+            cx,\n+            TRANSMUTES_EXPRESSIBLE_AS_PTR_CASTS,\n+            e.span,\n+            &format!(\n+                \"transmute from `{}` to `{}` which could be expressed as a pointer cast instead\",\n+                from_ty, to_ty\n+            ),\n+            |diag| {\n+                if let Some(arg) = sugg::Sugg::hir_opt(cx, &args[0]) {\n+                    let sugg = arg.as_ty(&to_ty.to_string()).to_string();\n+                    diag.span_suggestion(e.span, \"try\", sugg, Applicability::MachineApplicable);\n+                }\n+            },\n+        );\n+        true\n+    } else {\n+        false\n+    }\n+}"}]}