{"sha": "e613c8b492495aeb5f75f94a0cdcf252573a345f", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU2MTNjOGI0OTI0OTVhZWI1Zjc1Zjk0YTBjZGNmMjUyNTczYTM0NWY=", "commit": {"author": {"name": "mcarton", "email": "cartonmartin+git@gmail.com", "date": "2016-07-01T16:38:50Z"}, "committer": {"name": "mcarton", "email": "cartonmartin+git@gmail.com", "date": "2016-07-01T16:43:42Z"}, "message": "Introduce `multispan_sugg`", "tree": {"sha": "1fb7b14a5f9a1b8f567b3ba43fdaf4b79770be43", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1fb7b14a5f9a1b8f567b3ba43fdaf4b79770be43"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e613c8b492495aeb5f75f94a0cdcf252573a345f", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v2\n\niQIcBAABCAAGBQJXdp3AAAoJEF5CfHlMukXoG9cP/AvCQjBexNJTsyXtPBRxbbLS\ntuolUWJ/ixWwugMZRRuGfNCIHci9ylzTCY+ToTUI3nv//R2Ub68knOLIIMQtbbhM\nvsqwx1+qI4AUL05G1y2nDDxgCIlSsMh5PmpDH/tVI0rrvRVqyb3QqDC5+09ZnxzI\n6q4i3evyN+bWivEFzAXEZH1Z1Y7XiLNUzExfa6UgCX07wYehBxUNtFvGC1ScgDvM\nTKwqJcbuKshKPq3X9QPxvoOUuF8IBY54fdLOcm7gHJhWCcAtVdgelanOWmwfVOLc\nen1s1YxiQSDBwUxw/PbQhptrlek7UHRci+XE4p/BIHTxZyOGnAZiURmxZ4zNXhGN\nly7PdBd14i4QlzIhBpucDHO5KiDev6659Lad7hvXywSQ/Ok0M/MvFVPd+5NiRn82\n965YADu4BToOn1HHSYTVGq/0HWyQ7nSFteaYvdk296DcDUt5pmuiGfoNJ/Wydfl+\nglAYpnm4XJqz8XejjBTH6968xmeGdT/I6o6tjpkGUpQggXeWAZE5tMevRkfbl3WA\n+EhAHCYJcOeCg6UCYsFxtVjdBG+Ok7D5n/dmH/rh06h5rcd0eonnu7izQcNq/I92\nEfZ0OAolfnplJL6cZweKfhUHOpiY0X9bNj5M7o27gYQ90COY0Fcf7KDVz2G8KwID\n62R43TvGzmCRPlXUadrb\n=luyq\n-----END PGP SIGNATURE-----", "payload": "tree 1fb7b14a5f9a1b8f567b3ba43fdaf4b79770be43\nparent 97f65b02962af06e351bf33783803caace767f4e\nauthor mcarton <cartonmartin+git@gmail.com> 1467391130 +0200\ncommitter mcarton <cartonmartin+git@gmail.com> 1467391422 +0200\n\nIntroduce `multispan_sugg`\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e613c8b492495aeb5f75f94a0cdcf252573a345f", "html_url": "https://github.com/rust-lang/rust/commit/e613c8b492495aeb5f75f94a0cdcf252573a345f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e613c8b492495aeb5f75f94a0cdcf252573a345f/comments", "author": {"login": "mcarton", "id": 3751788, "node_id": "MDQ6VXNlcjM3NTE3ODg=", "avatar_url": "https://avatars.githubusercontent.com/u/3751788?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mcarton", "html_url": "https://github.com/mcarton", "followers_url": "https://api.github.com/users/mcarton/followers", "following_url": "https://api.github.com/users/mcarton/following{/other_user}", "gists_url": "https://api.github.com/users/mcarton/gists{/gist_id}", "starred_url": "https://api.github.com/users/mcarton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mcarton/subscriptions", "organizations_url": "https://api.github.com/users/mcarton/orgs", "repos_url": "https://api.github.com/users/mcarton/repos", "events_url": "https://api.github.com/users/mcarton/events{/privacy}", "received_events_url": "https://api.github.com/users/mcarton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "mcarton", "id": 3751788, "node_id": "MDQ6VXNlcjM3NTE3ODg=", "avatar_url": "https://avatars.githubusercontent.com/u/3751788?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mcarton", "html_url": "https://github.com/mcarton", "followers_url": "https://api.github.com/users/mcarton/followers", "following_url": "https://api.github.com/users/mcarton/following{/other_user}", "gists_url": "https://api.github.com/users/mcarton/gists{/gist_id}", "starred_url": "https://api.github.com/users/mcarton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mcarton/subscriptions", "organizations_url": "https://api.github.com/users/mcarton/orgs", "repos_url": "https://api.github.com/users/mcarton/repos", "events_url": "https://api.github.com/users/mcarton/events{/privacy}", "received_events_url": "https://api.github.com/users/mcarton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "97f65b02962af06e351bf33783803caace767f4e", "url": "https://api.github.com/repos/rust-lang/rust/commits/97f65b02962af06e351bf33783803caace767f4e", "html_url": "https://github.com/rust-lang/rust/commit/97f65b02962af06e351bf33783803caace767f4e"}], "stats": {"total": 23, "additions": 22, "deletions": 1}, "files": [{"sha": "6bdfbe98b5bc639a0d6ab4a53c83c0462267dc7a", "filename": "clippy_lints/src/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/e613c8b492495aeb5f75f94a0cdcf252573a345f/clippy_lints%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e613c8b492495aeb5f75f94a0cdcf252573a345f/clippy_lints%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flib.rs?ref=e613c8b492495aeb5f75f94a0cdcf252573a345f", "patch": "@@ -38,6 +38,7 @@ extern crate quine_mc_cluskey;\n \n extern crate rustc_serialize;\n \n+extern crate rustc_errors;\n extern crate rustc_plugin;\n extern crate rustc_const_eval;\n extern crate rustc_const_math;"}, {"sha": "3e0f0db6ac170d7c98b58b914add2d9b092890dc", "filename": "clippy_lints/src/utils/mod.rs", "status": "modified", "additions": 21, "deletions": 1, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/e613c8b492495aeb5f75f94a0cdcf252573a345f/clippy_lints%2Fsrc%2Futils%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e613c8b492495aeb5f75f94a0cdcf252573a345f/clippy_lints%2Fsrc%2Futils%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Futils%2Fmod.rs?ref=e613c8b492495aeb5f75f94a0cdcf252573a345f", "patch": "@@ -9,12 +9,13 @@ use rustc::traits::ProjectionMode;\n use rustc::traits;\n use rustc::ty::subst::Subst;\n use rustc::ty;\n+use rustc_errors;\n use std::borrow::Cow;\n use std::env;\n use std::mem;\n use std::str::FromStr;\n use syntax::ast::{self, LitKind};\n-use syntax::codemap::{ExpnInfo, Span, ExpnFormat};\n+use syntax::codemap::{ExpnFormat, ExpnInfo, MultiSpan, Span};\n use syntax::errors::DiagnosticBuilder;\n use syntax::ptr::P;\n \n@@ -490,6 +491,25 @@ pub fn span_lint_and_then<'a, T: LintContext, F>(cx: &'a T, lint: &'static Lint,\n     }\n }\n \n+/// Create a suggestion made from several `span \u2192 replacement`.\n+///\n+/// Note: in the JSON format (used by `compiletest_rs`), the help message will appear once per\n+/// replacement. In human-readable format though, it only appears once before the whole suggestion.\n+pub fn multispan_sugg(db: &mut DiagnosticBuilder, help_msg: String, sugg: &[(Span, &str)]) {\n+    let sugg = rustc_errors::RenderSpan::Suggestion(rustc_errors::CodeSuggestion {\n+        msp: MultiSpan::from_spans(sugg.iter().map(|&(span, _)| span).collect()),\n+        substitutes: sugg.iter().map(|&(_, subs)| subs.to_owned()).collect(),\n+    });\n+\n+    let sub = rustc_errors::SubDiagnostic {\n+        level: rustc_errors::Level::Help,\n+        message: help_msg,\n+        span: MultiSpan::new(),\n+        render_span: Some(sugg),\n+    };\n+    db.children.push(sub);\n+}\n+\n /// Return the base type for references and raw pointers.\n pub fn walk_ptrs_ty(ty: ty::Ty) -> ty::Ty {\n     match ty.sty {"}]}