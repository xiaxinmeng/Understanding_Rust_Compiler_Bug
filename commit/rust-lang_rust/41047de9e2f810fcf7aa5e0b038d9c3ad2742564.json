{"sha": "41047de9e2f810fcf7aa5e0b038d9c3ad2742564", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQxMDQ3ZGU5ZTJmODEwZmNmN2FhNWUwYjAzOGQ5YzNhZDI3NDI1NjQ=", "commit": {"author": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2020-11-23T10:49:06Z"}, "committer": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2020-11-23T10:49:06Z"}, "message": "Rustfmt", "tree": {"sha": "58fd16f8069708ad617b7eb6121bfbfe5d6a0846", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/58fd16f8069708ad617b7eb6121bfbfe5d6a0846"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/41047de9e2f810fcf7aa5e0b038d9c3ad2742564", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/41047de9e2f810fcf7aa5e0b038d9c3ad2742564", "html_url": "https://github.com/rust-lang/rust/commit/41047de9e2f810fcf7aa5e0b038d9c3ad2742564", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/41047de9e2f810fcf7aa5e0b038d9c3ad2742564/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e99f78af0880edd5f56254236042f3c9ce0dce63", "url": "https://api.github.com/repos/rust-lang/rust/commits/e99f78af0880edd5f56254236042f3c9ce0dce63", "html_url": "https://github.com/rust-lang/rust/commit/e99f78af0880edd5f56254236042f3c9ce0dce63"}], "stats": {"total": 30, "additions": 22, "deletions": 8}, "files": [{"sha": "aee274ab4a823dec08c1f58f9d06f43c630c39c8", "filename": "src/abi/mod.rs", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/41047de9e2f810fcf7aa5e0b038d9c3ad2742564/src%2Fabi%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/41047de9e2f810fcf7aa5e0b038d9c3ad2742564/src%2Fabi%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fabi%2Fmod.rs?ref=41047de9e2f810fcf7aa5e0b038d9c3ad2742564", "patch": "@@ -214,10 +214,8 @@ pub(crate) fn get_function_name_and_sig<'tcx>(\n     support_vararg: bool,\n ) -> (String, Signature) {\n     assert!(!inst.substs.needs_infer());\n-    let fn_sig = tcx.normalize_erasing_late_bound_regions(\n-        ParamEnv::reveal_all(),\n-        fn_sig_for_fn_abi(tcx, inst),\n-    );\n+    let fn_sig = tcx\n+        .normalize_erasing_late_bound_regions(ParamEnv::reveal_all(), fn_sig_for_fn_abi(tcx, inst));\n     if fn_sig.c_variadic && !support_vararg {\n         tcx.sess.span_fatal(\n             tcx.def_span(inst.def_id()),"}, {"sha": "72073896a723b89f908879e70e15be35c68f17b5", "filename": "src/base.rs", "status": "modified", "additions": 20, "deletions": 4, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/41047de9e2f810fcf7aa5e0b038d9c3ad2742564/src%2Fbase.rs", "raw_url": "https://github.com/rust-lang/rust/raw/41047de9e2f810fcf7aa5e0b038d9c3ad2742564/src%2Fbase.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbase.rs?ref=41047de9e2f810fcf7aa5e0b038d9c3ad2742564", "patch": "@@ -514,7 +514,11 @@ fn codegen_stmt<'tcx>(\n                     };\n                     lval.write_cvalue(fx, res);\n                 }\n-                Rvalue::Cast(CastKind::Pointer(PointerCast::ReifyFnPointer), ref operand, to_ty) => {\n+                Rvalue::Cast(\n+                    CastKind::Pointer(PointerCast::ReifyFnPointer),\n+                    ref operand,\n+                    to_ty,\n+                ) => {\n                     let from_ty = fx.monomorphize(operand.ty(&fx.mir.local_decls, fx.tcx));\n                     let to_layout = fx.layout_of(fx.monomorphize(to_ty));\n                     match *from_ty.kind() {\n@@ -535,9 +539,21 @@ fn codegen_stmt<'tcx>(\n                         _ => bug!(\"Trying to ReifyFnPointer on non FnDef {:?}\", from_ty),\n                     }\n                 }\n-                Rvalue::Cast(CastKind::Pointer(PointerCast::UnsafeFnPointer), ref operand, to_ty)\n-                | Rvalue::Cast(CastKind::Pointer(PointerCast::MutToConstPointer), ref operand, to_ty)\n-                | Rvalue::Cast(CastKind::Pointer(PointerCast::ArrayToPointer), ref operand, to_ty) => {\n+                Rvalue::Cast(\n+                    CastKind::Pointer(PointerCast::UnsafeFnPointer),\n+                    ref operand,\n+                    to_ty,\n+                )\n+                | Rvalue::Cast(\n+                    CastKind::Pointer(PointerCast::MutToConstPointer),\n+                    ref operand,\n+                    to_ty,\n+                )\n+                | Rvalue::Cast(\n+                    CastKind::Pointer(PointerCast::ArrayToPointer),\n+                    ref operand,\n+                    to_ty,\n+                ) => {\n                     let to_layout = fx.layout_of(fx.monomorphize(to_ty));\n                     let operand = codegen_operand(fx, operand);\n                     lval.write_cvalue(fx, operand.cast_pointer_to(to_layout));"}]}