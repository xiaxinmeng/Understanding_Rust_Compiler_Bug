{"sha": "aa117047f05bba9b6838a773a64aaa8f04f51208", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFhMTE3MDQ3ZjA1YmJhOWI2ODM4YTc3M2E2NGFhYThmMDRmNTEyMDg=", "commit": {"author": {"name": "Matthew Jasper", "email": "mjjasper1@gmail.com", "date": "2020-06-18T17:09:18Z"}, "committer": {"name": "Matthew Jasper", "email": "mjjasper1@gmail.com", "date": "2020-06-18T17:09:18Z"}, "message": "Add helper method for reusing an existing interned region", "tree": {"sha": "8a8a83ee620c6d1f3c17eb53ef3794e0c25d32bc", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8a8a83ee620c6d1f3c17eb53ef3794e0c25d32bc"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/aa117047f05bba9b6838a773a64aaa8f04f51208", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/aa117047f05bba9b6838a773a64aaa8f04f51208", "html_url": "https://github.com/rust-lang/rust/commit/aa117047f05bba9b6838a773a64aaa8f04f51208", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/aa117047f05bba9b6838a773a64aaa8f04f51208/comments", "author": {"login": "matthewjasper", "id": 20113453, "node_id": "MDQ6VXNlcjIwMTEzNDUz", "avatar_url": "https://avatars.githubusercontent.com/u/20113453?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthewjasper", "html_url": "https://github.com/matthewjasper", "followers_url": "https://api.github.com/users/matthewjasper/followers", "following_url": "https://api.github.com/users/matthewjasper/following{/other_user}", "gists_url": "https://api.github.com/users/matthewjasper/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthewjasper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthewjasper/subscriptions", "organizations_url": "https://api.github.com/users/matthewjasper/orgs", "repos_url": "https://api.github.com/users/matthewjasper/repos", "events_url": "https://api.github.com/users/matthewjasper/events{/privacy}", "received_events_url": "https://api.github.com/users/matthewjasper/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matthewjasper", "id": 20113453, "node_id": "MDQ6VXNlcjIwMTEzNDUz", "avatar_url": "https://avatars.githubusercontent.com/u/20113453?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthewjasper", "html_url": "https://github.com/matthewjasper", "followers_url": "https://api.github.com/users/matthewjasper/followers", "following_url": "https://api.github.com/users/matthewjasper/following{/other_user}", "gists_url": "https://api.github.com/users/matthewjasper/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthewjasper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthewjasper/subscriptions", "organizations_url": "https://api.github.com/users/matthewjasper/orgs", "repos_url": "https://api.github.com/users/matthewjasper/repos", "events_url": "https://api.github.com/users/matthewjasper/events{/privacy}", "received_events_url": "https://api.github.com/users/matthewjasper/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e9b0ce8afa5635d3825b5e76e0b3593d9086778a", "url": "https://api.github.com/repos/rust-lang/rust/commits/e9b0ce8afa5635d3825b5e76e0b3593d9086778a", "html_url": "https://github.com/rust-lang/rust/commit/e9b0ce8afa5635d3825b5e76e0b3593d9086778a"}], "stats": {"total": 17, "additions": 9, "deletions": 8}, "files": [{"sha": "f1235aa243a95975afe398595bfb0f3d486cf36b", "filename": "src/librustc_infer/infer/canonical/canonicalizer.rs", "status": "modified", "additions": 1, "deletions": 7, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/aa117047f05bba9b6838a773a64aaa8f04f51208/src%2Flibrustc_infer%2Finfer%2Fcanonical%2Fcanonicalizer.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aa117047f05bba9b6838a773a64aaa8f04f51208/src%2Flibrustc_infer%2Finfer%2Fcanonical%2Fcanonicalizer.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_infer%2Finfer%2Fcanonical%2Fcanonicalizer.rs?ref=aa117047f05bba9b6838a773a64aaa8f04f51208", "patch": "@@ -326,13 +326,7 @@ impl<'cx, 'tcx> TypeFolder<'tcx> for Canonicalizer<'cx, 'tcx> {\n                      opportunistically resolved to {:?}\",\n                     vid, r\n                 );\n-                // micro-optimize -- avoid an interner look-up if the vid\n-                // hasn't changed.\n-                let r = if vid == resolved_vid {\n-                    r\n-                } else {\n-                    self.tcx.mk_region(ty::ReVar(resolved_vid))\n-                };\n+                let r = self.tcx.reuse_or_mk_region(r, ty::ReVar(resolved_vid));\n                 self.canonicalize_region_mode.canonicalize_free_region(self, r)\n             }\n "}, {"sha": "d8a215792b0ccff1b8a343e462eedde33816a227", "filename": "src/librustc_infer/infer/resolve.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/aa117047f05bba9b6838a773a64aaa8f04f51208/src%2Flibrustc_infer%2Finfer%2Fresolve.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aa117047f05bba9b6838a773a64aaa8f04f51208/src%2Flibrustc_infer%2Finfer%2Fresolve.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_infer%2Finfer%2Fresolve.rs?ref=aa117047f05bba9b6838a773a64aaa8f04f51208", "patch": "@@ -85,7 +85,7 @@ impl<'a, 'tcx> TypeFolder<'tcx> for OpportunisticRegionResolver<'a, 'tcx> {\n                     .borrow_mut()\n                     .unwrap_region_constraints()\n                     .opportunistic_resolve_var(rid);\n-                if resolved == rid { r } else { self.tcx().mk_region(ty::ReVar(resolved)) }\n+                self.tcx().reuse_or_mk_region(r, ty::ReVar(resolved))\n             }\n             _ => r,\n         }"}, {"sha": "f64d1702625a22099569b87cec171d5a83a2397b", "filename": "src/librustc_middle/ty/context.rs", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/aa117047f05bba9b6838a773a64aaa8f04f51208/src%2Flibrustc_middle%2Fty%2Fcontext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aa117047f05bba9b6838a773a64aaa8f04f51208/src%2Flibrustc_middle%2Fty%2Fcontext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_middle%2Fty%2Fcontext.rs?ref=aa117047f05bba9b6838a773a64aaa8f04f51208", "patch": "@@ -2081,6 +2081,13 @@ impl<'tcx> TyCtxt<'tcx> {\n         })\n     }\n \n+    /// Same a `self.mk_region(kind)`, but avoids accessing the interners if\n+    /// `*r == kind`.\n+    #[inline]\n+    pub fn reuse_or_mk_region(self, r: Region<'tcx>, kind: RegionKind) -> Region<'tcx> {\n+        if *r == kind { r } else { self.mk_region(kind) }\n+    }\n+\n     #[allow(rustc::usage_of_ty_tykind)]\n     #[inline]\n     pub fn mk_ty(&self, st: TyKind<'tcx>) -> Ty<'tcx> {"}]}