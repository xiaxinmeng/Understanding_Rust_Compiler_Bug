{"sha": "1672c27a7dbeda2ea3b1aa775b259fc90a270870", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE2NzJjMjdhN2RiZWRhMmVhM2IxYWE3NzViMjU5ZmM5MGEyNzA4NzA=", "commit": {"author": {"name": "David Wood", "email": "david@davidtw.co", "date": "2018-11-05T14:14:28Z"}, "committer": {"name": "David Wood", "email": "david@davidtw.co", "date": "2018-11-05T16:40:40Z"}, "message": "Improve predecessor detection.\n\nIt is necessary to detect whether we are making the first\nassignment into a union. This is checked by looking at the moves and\nchecking if there are any from locations earlier in the control flow\ngraph.\n\nThis commit improves the detection of this by switching from a naive\nmethod that compared only the statement and basic block indices with\na more robust method that looks at the predecessors of a location.", "tree": {"sha": "aa1b84c9d3d9ed65f4dcaa794f12b9e63ee9e3c9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/aa1b84c9d3d9ed65f4dcaa794f12b9e63ee9e3c9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1672c27a7dbeda2ea3b1aa775b259fc90a270870", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEWwgxPGhT5b/6kagXAXYLT59T8VQFAlvgcogACgkQAXYLT59T\n8VQSzxAAtXAGRdcadfg3hOQ37AumzivZCWSprN6Y66kFD26jQ2uu2EvoJ7Lvv0yB\nuWbcUPDtG0qO/BnSjrwt5aKJQn8MbnNGnEPX8/QFnM7UQZ4N2TZJOyVgSpsnSeHw\nMiMXuLtpoIuhoVDSxYuK+RFajQdI3XQ34aqNzHSriJnxeQH0PqNR97eV4qDBgtgB\nBMuXAb3E95OrGm3X3EMWJVWVucF9HOJQNr9tnrhUTMMMM0e9TjlII81D7dXBFhH4\nYEOTLCrnHyrVHOveBTGLNd7ZWfSHGl59gpqeftv/9A8IasQw17Z6HEtuQymA8V82\ngg9NuNffMS4V9KCA2DqI7AryNSPgzVeDo4N7sali+N9HxO5ojJZu/KKmBMa0IibP\nM6QfxXvBM0YcAt110tNLqADChjocWNi5tbYCIylfSLxYboQXdswSgaGPWrnD/oZz\nCfxq4FYx658BBQu2IdDEP3iLtqywp71pjg1iol1rDK8YtbbVlD/2WD7SFzhdd5Vz\nkfKWN4dodt/LCs/d2VGjOA3k2dZPc75/1NMgETJxvQbEFWH/OPAPCAjJP+9yIlG2\nIj81TXwjle39UF4HGTAB9qHR0h7Ye/ZQhpa1WHGVc1GjUjclawtXQzVfDdpophlu\nQEoHO9sGyF8HK793sBTYCdgaxLfMX0rzhi8r2kEWXr6/ZP6BSV0=\n=kI+q\n-----END PGP SIGNATURE-----", "payload": "tree aa1b84c9d3d9ed65f4dcaa794f12b9e63ee9e3c9\nparent 8e7786a2d9285fc79ec595d85081064560b9d4e4\nauthor David Wood <david@davidtw.co> 1541427268 +0100\ncommitter David Wood <david@davidtw.co> 1541436040 +0100\n\nImprove predecessor detection.\n\nIt is necessary to detect whether we are making the first\nassignment into a union. This is checked by looking at the moves and\nchecking if there are any from locations earlier in the control flow\ngraph.\n\nThis commit improves the detection of this by switching from a naive\nmethod that compared only the statement and basic block indices with\na more robust method that looks at the predecessors of a location.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1672c27a7dbeda2ea3b1aa775b259fc90a270870", "html_url": "https://github.com/rust-lang/rust/commit/1672c27a7dbeda2ea3b1aa775b259fc90a270870", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1672c27a7dbeda2ea3b1aa775b259fc90a270870/comments", "author": {"login": "davidtwco", "id": 1295100, "node_id": "MDQ6VXNlcjEyOTUxMDA=", "avatar_url": "https://avatars.githubusercontent.com/u/1295100?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidtwco", "html_url": "https://github.com/davidtwco", "followers_url": "https://api.github.com/users/davidtwco/followers", "following_url": "https://api.github.com/users/davidtwco/following{/other_user}", "gists_url": "https://api.github.com/users/davidtwco/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidtwco/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidtwco/subscriptions", "organizations_url": "https://api.github.com/users/davidtwco/orgs", "repos_url": "https://api.github.com/users/davidtwco/repos", "events_url": "https://api.github.com/users/davidtwco/events{/privacy}", "received_events_url": "https://api.github.com/users/davidtwco/received_events", "type": "User", "site_admin": false}, "committer": {"login": "davidtwco", "id": 1295100, "node_id": "MDQ6VXNlcjEyOTUxMDA=", "avatar_url": "https://avatars.githubusercontent.com/u/1295100?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidtwco", "html_url": "https://github.com/davidtwco", "followers_url": "https://api.github.com/users/davidtwco/followers", "following_url": "https://api.github.com/users/davidtwco/following{/other_user}", "gists_url": "https://api.github.com/users/davidtwco/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidtwco/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidtwco/subscriptions", "organizations_url": "https://api.github.com/users/davidtwco/orgs", "repos_url": "https://api.github.com/users/davidtwco/repos", "events_url": "https://api.github.com/users/davidtwco/events{/privacy}", "received_events_url": "https://api.github.com/users/davidtwco/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8e7786a2d9285fc79ec595d85081064560b9d4e4", "url": "https://api.github.com/repos/rust-lang/rust/commits/8e7786a2d9285fc79ec595d85081064560b9d4e4", "html_url": "https://github.com/rust-lang/rust/commit/8e7786a2d9285fc79ec595d85081064560b9d4e4"}], "stats": {"total": 45, "additions": 39, "deletions": 6}, "files": [{"sha": "21459c9730491f74f04da4be74cb6363d1d887f8", "filename": "src/librustc/mir/mod.rs", "status": "modified", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/rust-lang/rust/blob/1672c27a7dbeda2ea3b1aa775b259fc90a270870/src%2Flibrustc%2Fmir%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1672c27a7dbeda2ea3b1aa775b259fc90a270870/src%2Flibrustc%2Fmir%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmir%2Fmod.rs?ref=1672c27a7dbeda2ea3b1aa775b259fc90a270870", "patch": "@@ -20,6 +20,7 @@ use mir::interpret::{ConstValue, EvalErrorKind, Scalar};\n use mir::visit::MirVisitable;\n use rustc_apfloat::ieee::{Double, Single};\n use rustc_apfloat::Float;\n+use rustc_data_structures::fx::FxHashSet;\n use rustc_data_structures::graph::dominators::{dominators, Dominators};\n use rustc_data_structures::graph::{self, GraphPredecessors, GraphSuccessors};\n use rustc_data_structures::indexed_vec::{Idx, IndexVec};\n@@ -2706,6 +2707,36 @@ impl Location {\n         }\n     }\n \n+    /// Returns `true` if `other` is earlier in the control flow graph than `self`.\n+    pub fn is_predecessor_of<'tcx>(&self, other: Location, mir: &Mir<'tcx>) -> bool {\n+        // If we are in the same block as the other location and are an earlier statement\n+        // then we are a predecessor of `other`.\n+        if self.block == other.block && self.statement_index < other.statement_index {\n+            return true;\n+        }\n+\n+        // If we're in another block, then we want to check that block is a predecessor of `other`.\n+        let mut queue: Vec<BasicBlock> = mir.predecessors_for(other.block).clone();\n+        let mut visited = FxHashSet::default();\n+\n+        while let Some(block) = queue.pop() {\n+            // If we haven't visited this block before, then make sure we visit it's predecessors.\n+            if visited.insert(block) {\n+                queue.append(&mut mir.predecessors_for(block).clone());\n+            } else {\n+                continue;\n+            }\n+\n+            // If we found the block that `self` is in, then we are a predecessor of `other` (since\n+            // we found that block by looking at the predecessors of `other`).\n+            if self.block == block {\n+                return true;\n+            }\n+        }\n+\n+        false\n+    }\n+\n     pub fn dominates(&self, other: Location, dominators: &Dominators<BasicBlock>) -> bool {\n         if self.block == other.block {\n             self.statement_index <= other.statement_index"}, {"sha": "625423baecec27983b6370a37b1d61d78f5f8bc7", "filename": "src/librustc_mir/borrow_check/mod.rs", "status": "modified", "additions": 8, "deletions": 6, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/1672c27a7dbeda2ea3b1aa775b259fc90a270870/src%2Flibrustc_mir%2Fborrow_check%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1672c27a7dbeda2ea3b1aa775b259fc90a270870/src%2Flibrustc_mir%2Fborrow_check%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Fmod.rs?ref=1672c27a7dbeda2ea3b1aa775b259fc90a270870", "patch": "@@ -1784,12 +1784,14 @@ impl<'cx, 'gcx, 'tcx> MirBorrowckCtxt<'cx, 'gcx, 'tcx> {\n                 // of the union - we should error in that case.\n                 let tcx = this.infcx.tcx;\n                 if let ty::TyKind::Adt(def, _) = base.ty(this.mir, tcx).to_ty(tcx).sty {\n-                    let moved_before_this = this.move_data.path_map[mpi].iter().any(|moi| {\n-                        this.move_data.moves[*moi].source < context.loc\n-                    });\n-\n-                    if def.is_union() && moved_before_this {\n-                        return;\n+                    if def.is_union() {\n+                        if this.move_data.path_map[mpi].iter().any(|moi| {\n+                            this.move_data.moves[*moi].source.is_predecessor_of(\n+                                context.loc, this.mir,\n+                            )\n+                        }) {\n+                            return;\n+                        }\n                     }\n                 }\n "}]}