{"sha": "40f92b3b0595984f40aafd70ec4a5b9a3bdde47a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQwZjkyYjNiMDU5NTk4NGY0MGFhZmQ3MGVjNGE1YjlhM2JkZGU0N2E=", "commit": {"author": {"name": "yjhmelody", "email": "465402634@qq.com", "date": "2019-10-22T04:25:14Z"}, "committer": {"name": "yjhmelody", "email": "465402634@qq.com", "date": "2019-10-22T04:25:14Z"}, "message": "refactor maybe_append", "tree": {"sha": "3f6a6adf2a89459b37b4f8add4b7d3227cf6f984", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3f6a6adf2a89459b37b4f8add4b7d3227cf6f984"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/40f92b3b0595984f40aafd70ec4a5b9a3bdde47a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/40f92b3b0595984f40aafd70ec4a5b9a3bdde47a", "html_url": "https://github.com/rust-lang/rust/commit/40f92b3b0595984f40aafd70ec4a5b9a3bdde47a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/40f92b3b0595984f40aafd70ec4a5b9a3bdde47a/comments", "author": {"login": "yjhmelody", "id": 16250688, "node_id": "MDQ6VXNlcjE2MjUwNjg4", "avatar_url": "https://avatars.githubusercontent.com/u/16250688?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yjhmelody", "html_url": "https://github.com/yjhmelody", "followers_url": "https://api.github.com/users/yjhmelody/followers", "following_url": "https://api.github.com/users/yjhmelody/following{/other_user}", "gists_url": "https://api.github.com/users/yjhmelody/gists{/gist_id}", "starred_url": "https://api.github.com/users/yjhmelody/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yjhmelody/subscriptions", "organizations_url": "https://api.github.com/users/yjhmelody/orgs", "repos_url": "https://api.github.com/users/yjhmelody/repos", "events_url": "https://api.github.com/users/yjhmelody/events{/privacy}", "received_events_url": "https://api.github.com/users/yjhmelody/received_events", "type": "User", "site_admin": false}, "committer": {"login": "yjhmelody", "id": 16250688, "node_id": "MDQ6VXNlcjE2MjUwNjg4", "avatar_url": "https://avatars.githubusercontent.com/u/16250688?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yjhmelody", "html_url": "https://github.com/yjhmelody", "followers_url": "https://api.github.com/users/yjhmelody/followers", "following_url": "https://api.github.com/users/yjhmelody/following{/other_user}", "gists_url": "https://api.github.com/users/yjhmelody/gists{/gist_id}", "starred_url": "https://api.github.com/users/yjhmelody/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yjhmelody/subscriptions", "organizations_url": "https://api.github.com/users/yjhmelody/orgs", "repos_url": "https://api.github.com/users/yjhmelody/repos", "events_url": "https://api.github.com/users/yjhmelody/events{/privacy}", "received_events_url": "https://api.github.com/users/yjhmelody/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fa0f7d0080d8e7e9eb20aa9cbf8013f96c81287f", "url": "https://api.github.com/repos/rust-lang/rust/commits/fa0f7d0080d8e7e9eb20aa9cbf8013f96c81287f", "html_url": "https://github.com/rust-lang/rust/commit/fa0f7d0080d8e7e9eb20aa9cbf8013f96c81287f"}], "stats": {"total": 17, "additions": 8, "deletions": 9}, "files": [{"sha": "d4d2f42446bec75ac5ea0bf2528fa628c671038e", "filename": "src/libsyntax/parse/parser.rs", "status": "modified", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/40f92b3b0595984f40aafd70ec4a5b9a3bdde47a/src%2Flibsyntax%2Fparse%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/40f92b3b0595984f40aafd70ec4a5b9a3bdde47a/src%2Flibsyntax%2Fparse%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fparser.rs?ref=40f92b3b0595984f40aafd70ec4a5b9a3bdde47a", "patch": "@@ -86,13 +86,6 @@ macro_rules! maybe_recover_from_interpolated_ty_qpath {\n     }\n }\n \n-fn maybe_append(mut lhs: Vec<Attribute>, mut rhs: Option<Vec<Attribute>>) -> Vec<Attribute> {\n-    if let Some(ref mut rhs) = rhs {\n-        lhs.append(rhs);\n-    }\n-    lhs\n-}\n-\n #[derive(Debug, Clone, Copy, PartialEq)]\n enum PrevTokenKind {\n     DocComment,"}, {"sha": "73bd80e2a21f7b9e5a4fccbcd3ac13da53176a07", "filename": "src/libsyntax/parse/parser/item.rs", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/40f92b3b0595984f40aafd70ec4a5b9a3bdde47a/src%2Flibsyntax%2Fparse%2Fparser%2Fitem.rs", "raw_url": "https://github.com/rust-lang/rust/raw/40f92b3b0595984f40aafd70ec4a5b9a3bdde47a/src%2Flibsyntax%2Fparse%2Fparser%2Fitem.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fparser%2Fitem.rs?ref=40f92b3b0595984f40aafd70ec4a5b9a3bdde47a", "patch": "@@ -10,7 +10,6 @@ use crate::ast::{Visibility, VisibilityKind, Mutability, FnHeader, ForeignItem,\n use crate::ast::{Ty, TyKind, Generics, GenericBounds, TraitRef, EnumDef, VariantData, StructField};\n use crate::ast::{Mac, MacDelimiter, Block, BindingMode, FnDecl, MethodSig, SelfKind, Param};\n use crate::parse::token;\n-use crate::parse::parser::maybe_append;\n use crate::tokenstream::{TokenTree, TokenStream};\n use crate::symbol::{kw, sym};\n use crate::source_map::{self, respan, Span};\n@@ -416,10 +415,17 @@ impl<'a> Parser<'a> {\n     ) -> PResult<'a, Option<P<Item>>> {\n         let (ident, item, extra_attrs) = info;\n         let span = lo.to(self.prev_span);\n-        let attrs = maybe_append(attrs, extra_attrs);\n+        let attrs = Self::maybe_append(attrs, extra_attrs);\n         Ok(Some(self.mk_item(span, ident, item, vis, attrs)))\n     }\n \n+    fn maybe_append<T>(mut lhs: Vec<T>, mut rhs: Option<Vec<T>>) -> Vec<T> {\n+        if let Some(ref mut rhs) = rhs {\n+            lhs.append(rhs);\n+        }\n+        lhs\n+    }\n+\n     /// This is the fall-through for parsing items.\n     fn parse_macro_use_or_failure(\n         &mut self,"}]}