{"sha": "c1b27eea45ef1fe330dd24dc3aa7028cb4d98e8c", "node_id": "C_kwDOAAsO6NoAKGMxYjI3ZWVhNDVlZjFmZTMzMGRkMjRkYzNhYTcwMjhjYjRkOThlOGM", "commit": {"author": {"name": "Jakob Degen", "email": "jakob.e.degen@gmail.com", "date": "2022-12-04T07:54:55Z"}, "committer": {"name": "Jakob Degen", "email": "jakob.e.degen@gmail.com", "date": "2022-12-14T09:02:35Z"}, "message": "Fix unsafetyck disabling for custom MIR", "tree": {"sha": "eb09e5d2f4c69153bff0d1882c85da4d661a695b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/eb09e5d2f4c69153bff0d1882c85da4d661a695b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c1b27eea45ef1fe330dd24dc3aa7028cb4d98e8c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c1b27eea45ef1fe330dd24dc3aa7028cb4d98e8c", "html_url": "https://github.com/rust-lang/rust/commit/c1b27eea45ef1fe330dd24dc3aa7028cb4d98e8c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c1b27eea45ef1fe330dd24dc3aa7028cb4d98e8c/comments", "author": {"login": "JakobDegen", "id": 51179609, "node_id": "MDQ6VXNlcjUxMTc5NjA5", "avatar_url": "https://avatars.githubusercontent.com/u/51179609?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JakobDegen", "html_url": "https://github.com/JakobDegen", "followers_url": "https://api.github.com/users/JakobDegen/followers", "following_url": "https://api.github.com/users/JakobDegen/following{/other_user}", "gists_url": "https://api.github.com/users/JakobDegen/gists{/gist_id}", "starred_url": "https://api.github.com/users/JakobDegen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JakobDegen/subscriptions", "organizations_url": "https://api.github.com/users/JakobDegen/orgs", "repos_url": "https://api.github.com/users/JakobDegen/repos", "events_url": "https://api.github.com/users/JakobDegen/events{/privacy}", "received_events_url": "https://api.github.com/users/JakobDegen/received_events", "type": "User", "site_admin": false}, "committer": {"login": "JakobDegen", "id": 51179609, "node_id": "MDQ6VXNlcjUxMTc5NjA5", "avatar_url": "https://avatars.githubusercontent.com/u/51179609?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JakobDegen", "html_url": "https://github.com/JakobDegen", "followers_url": "https://api.github.com/users/JakobDegen/followers", "following_url": "https://api.github.com/users/JakobDegen/following{/other_user}", "gists_url": "https://api.github.com/users/JakobDegen/gists{/gist_id}", "starred_url": "https://api.github.com/users/JakobDegen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JakobDegen/subscriptions", "organizations_url": "https://api.github.com/users/JakobDegen/orgs", "repos_url": "https://api.github.com/users/JakobDegen/repos", "events_url": "https://api.github.com/users/JakobDegen/events{/privacy}", "received_events_url": "https://api.github.com/users/JakobDegen/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "21ee03e0621c70b894e1bfdd8c82ba5aeaabc812", "url": "https://api.github.com/repos/rust-lang/rust/commits/21ee03e0621c70b894e1bfdd8c82ba5aeaabc812", "html_url": "https://github.com/rust-lang/rust/commit/21ee03e0621c70b894e1bfdd8c82ba5aeaabc812"}], "stats": {"total": 31, "additions": 30, "deletions": 1}, "files": [{"sha": "77293ea6b2222f41a68536768c4df42122d9f8a9", "filename": "compiler/rustc_middle/src/mir/mod.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/c1b27eea45ef1fe330dd24dc3aa7028cb4d98e8c/compiler%2Frustc_middle%2Fsrc%2Fmir%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c1b27eea45ef1fe330dd24dc3aa7028cb4d98e8c/compiler%2Frustc_middle%2Fsrc%2Fmir%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fmir%2Fmod.rs?ref=c1b27eea45ef1fe330dd24dc3aa7028cb4d98e8c", "patch": "@@ -533,6 +533,11 @@ impl<'tcx> Body<'tcx> {\n         };\n         injection_phase > self.phase\n     }\n+\n+    #[inline]\n+    pub fn is_custom_mir(&self) -> bool {\n+        self.injection_phase.is_some()\n+    }\n }\n \n #[derive(Copy, Clone, PartialEq, Eq, Debug, TyEncodable, TyDecodable, HashStable)]"}, {"sha": "9c22b5df73ce85ea2423352c4c8d55ed0ea20abe", "filename": "compiler/rustc_mir_transform/src/check_unsafety.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c1b27eea45ef1fe330dd24dc3aa7028cb4d98e8c/compiler%2Frustc_mir_transform%2Fsrc%2Fcheck_unsafety.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c1b27eea45ef1fe330dd24dc3aa7028cb4d98e8c/compiler%2Frustc_mir_transform%2Fsrc%2Fcheck_unsafety.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir_transform%2Fsrc%2Fcheck_unsafety.rs?ref=c1b27eea45ef1fe330dd24dc3aa7028cb4d98e8c", "patch": "@@ -500,7 +500,7 @@ fn unsafety_check_result<'tcx>(\n     // `mir_built` force this.\n     let body = &tcx.mir_built(def).borrow();\n \n-    if body.should_skip() {\n+    if body.is_custom_mir() {\n         return tcx.arena.alloc(UnsafetyCheckResult {\n             violations: Vec::new(),\n             used_unsafe_blocks: FxHashSet::default(),"}, {"sha": "775e5e3ad9b1278675d38dd8278ce3cb7881cf9a", "filename": "src/test/mir-opt/building/custom/references.raw_pointer.built.after.mir", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/c1b27eea45ef1fe330dd24dc3aa7028cb4d98e8c/src%2Ftest%2Fmir-opt%2Fbuilding%2Fcustom%2Freferences.raw_pointer.built.after.mir", "raw_url": "https://github.com/rust-lang/rust/raw/c1b27eea45ef1fe330dd24dc3aa7028cb4d98e8c/src%2Ftest%2Fmir-opt%2Fbuilding%2Fcustom%2Freferences.raw_pointer.built.after.mir", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fbuilding%2Fcustom%2Freferences.raw_pointer.built.after.mir?ref=c1b27eea45ef1fe330dd24dc3aa7028cb4d98e8c", "patch": "@@ -0,0 +1,10 @@\n+// MIR for `raw_pointer` after built\n+\n+fn raw_pointer(_1: *const i32) -> *const i32 {\n+    let mut _0: *const i32;              // return place in scope 0 at $DIR/references.rs:+0:38: +0:48\n+\n+    bb0: {\n+        _0 = &raw const (*_1);           // scope 0 at $DIR/references.rs:+4:9: +4:27\n+        return;                          // scope 0 at $DIR/references.rs:+5:9: +5:17\n+    }\n+}"}, {"sha": "c93f6ec624b3551784c67643d449ce3a4bce8c7c", "filename": "src/test/mir-opt/building/custom/references.rs", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/c1b27eea45ef1fe330dd24dc3aa7028cb4d98e8c/src%2Ftest%2Fmir-opt%2Fbuilding%2Fcustom%2Freferences.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c1b27eea45ef1fe330dd24dc3aa7028cb4d98e8c/src%2Ftest%2Fmir-opt%2Fbuilding%2Fcustom%2Freferences.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fbuilding%2Fcustom%2Freferences.rs?ref=c1b27eea45ef1fe330dd24dc3aa7028cb4d98e8c", "patch": "@@ -36,8 +36,22 @@ pub fn immut_ref(x: &i32) -> &i32 {\n     )\n }\n \n+// EMIT_MIR references.raw_pointer.built.after.mir\n+#[custom_mir(dialect = \"built\")]\n+pub fn raw_pointer(x: *const i32) -> *const i32 {\n+    // Regression test for a bug in which unsafetyck was not correctly turned off for\n+    // `dialect = \"built\"`\n+    mir!({\n+        RET = addr_of!(*x);\n+        Return()\n+    })\n+}\n+\n fn main() {\n     let mut x = 5;\n     assert_eq!(*mut_ref(&mut x), 5);\n     assert_eq!(*immut_ref(&x), 5);\n+    unsafe {\n+        assert_eq!(*raw_pointer(addr_of!(x)), 5);\n+    }\n }"}]}