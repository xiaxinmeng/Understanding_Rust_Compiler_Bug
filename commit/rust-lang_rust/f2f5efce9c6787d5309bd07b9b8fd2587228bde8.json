{"sha": "f2f5efce9c6787d5309bd07b9b8fd2587228bde8", "node_id": "C_kwDOAAsO6NoAKGYyZjVlZmNlOWM2Nzg3ZDUzMDliZDA3YjliOGZkMjU4NzIyOGJkZTg", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2023-04-03T06:58:53Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2023-04-03T06:58:53Z"}, "message": "Rollup merge of #109722 - hermitcore:read, r=Mark-Simulacrum\n\nImplement read_buf for RustHermit\n\nIn principle, this PR extends rust-lang/rust#108326 for RustyHermit.", "tree": {"sha": "85e6b5222f7c1095674ec41a3eccafe81d85a007", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/85e6b5222f7c1095674ec41a3eccafe81d85a007"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f2f5efce9c6787d5309bd07b9b8fd2587228bde8", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJkKnktCRBK7hj4Ov3rIwAAaUcIAGJLdnFqCv+DwM/RDEi0WOLT\nkuxMUYhhgD7irk2Nmct02avmBzhZPf1vX84hCqL3MuYxaD0WOtQN6hvZfOr2XNn/\ndJ1/vweI3ZKdSASf38b3KosrM+OWbcOOKgsv+72nAeHfUUjKoJw8sopTA3ohoqmc\n8thPTAtRBtwgM81uqFg/JAzdzUzSRjrfixroFPklZGBs/zZ2FpesVSjHPi5gBSEC\nPrnHXz1x98oyftms/JxNasqSDnCYuxKHmc26ii1Q4rCsjeV5gfdsZEaonIPqTF8V\nECRSde6cD+Y8lnAhLJEolsjH7ZEOZUVwhqJw7XQy9NQzyL8cfYIW8366odGl1vs=\n=VwCL\n-----END PGP SIGNATURE-----\n", "payload": "tree 85e6b5222f7c1095674ec41a3eccafe81d85a007\nparent cc6a279f0586431b5e8bdd0b453a806e022a7d78\nparent a9aaf3fedba1ddbfa4e60c47794bd78688297ec2\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1680505133 +0200\ncommitter GitHub <noreply@github.com> 1680505133 +0200\n\nRollup merge of #109722 - hermitcore:read, r=Mark-Simulacrum\n\nImplement read_buf for RustHermit\n\nIn principle, this PR extends rust-lang/rust#108326 for RustyHermit.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f2f5efce9c6787d5309bd07b9b8fd2587228bde8", "html_url": "https://github.com/rust-lang/rust/commit/f2f5efce9c6787d5309bd07b9b8fd2587228bde8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f2f5efce9c6787d5309bd07b9b8fd2587228bde8/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cc6a279f0586431b5e8bdd0b453a806e022a7d78", "url": "https://api.github.com/repos/rust-lang/rust/commits/cc6a279f0586431b5e8bdd0b453a806e022a7d78", "html_url": "https://github.com/rust-lang/rust/commit/cc6a279f0586431b5e8bdd0b453a806e022a7d78"}, {"sha": "a9aaf3fedba1ddbfa4e60c47794bd78688297ec2", "url": "https://api.github.com/repos/rust-lang/rust/commits/a9aaf3fedba1ddbfa4e60c47794bd78688297ec2", "html_url": "https://github.com/rust-lang/rust/commit/a9aaf3fedba1ddbfa4e60c47794bd78688297ec2"}], "stats": {"total": 31, "additions": 24, "deletions": 7}, "files": [{"sha": "d6f64a29719023ec2602f0d84650957ab37ab53c", "filename": "library/std/src/sys/hermit/net.rs", "status": "modified", "additions": 24, "deletions": 7, "changes": 31, "blob_url": "https://github.com/rust-lang/rust/blob/f2f5efce9c6787d5309bd07b9b8fd2587228bde8/library%2Fstd%2Fsrc%2Fsys%2Fhermit%2Fnet.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f2f5efce9c6787d5309bd07b9b8fd2587228bde8/library%2Fstd%2Fsrc%2Fsys%2Fhermit%2Fnet.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys%2Fhermit%2Fnet.rs?ref=f2f5efce9c6787d5309bd07b9b8fd2587228bde8", "patch": "@@ -1,7 +1,7 @@\n #![allow(dead_code)]\n \n use crate::cmp;\n-use crate::io::{self, IoSlice, IoSliceMut};\n+use crate::io::{self, BorrowedBuf, BorrowedCursor, IoSlice, IoSliceMut};\n use crate::mem;\n use crate::net::{Shutdown, SocketAddr};\n use crate::os::hermit::io::{AsFd, AsRawFd, BorrowedFd, FromRawFd, RawFd};\n@@ -146,18 +146,35 @@ impl Socket {\n         Ok(Socket(unsafe { FileDesc::from_raw_fd(fd) }))\n     }\n \n-    fn recv_with_flags(&self, buf: &mut [u8], flags: i32) -> io::Result<usize> {\n-        let ret =\n-            cvt(unsafe { netc::recv(self.0.as_raw_fd(), buf.as_mut_ptr(), buf.len(), flags) })?;\n-        Ok(ret as usize)\n+    fn recv_with_flags(&self, mut buf: BorrowedCursor<'_>, flags: i32) -> io::Result<()> {\n+        let ret = cvt(unsafe {\n+            netc::recv(\n+                self.0.as_raw_fd(),\n+                buf.as_mut().as_mut_ptr() as *mut u8,\n+                buf.capacity(),\n+                flags,\n+            )\n+        })?;\n+        unsafe {\n+            buf.advance(ret as usize);\n+        }\n+        Ok(())\n     }\n \n     pub fn read(&self, buf: &mut [u8]) -> io::Result<usize> {\n-        self.recv_with_flags(buf, 0)\n+        let mut buf = BorrowedBuf::from(buf);\n+        self.recv_with_flags(buf.unfilled(), 0)?;\n+        Ok(buf.len())\n     }\n \n     pub fn peek(&self, buf: &mut [u8]) -> io::Result<usize> {\n-        self.recv_with_flags(buf, netc::MSG_PEEK)\n+        let mut buf = BorrowedBuf::from(buf);\n+        self.recv_with_flags(buf.unfilled(), netc::MSG_PEEK)?;\n+        Ok(buf.len())\n+    }\n+\n+    pub fn read_buf(&self, buf: BorrowedCursor<'_>) -> io::Result<()> {\n+        self.recv_with_flags(buf, 0)\n     }\n \n     pub fn read_vectored(&self, bufs: &mut [IoSliceMut<'_>]) -> io::Result<usize> {"}]}