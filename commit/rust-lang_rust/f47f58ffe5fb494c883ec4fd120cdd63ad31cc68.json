{"sha": "f47f58ffe5fb494c883ec4fd120cdd63ad31cc68", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY0N2Y1OGZmZTVmYjQ5NGM4ODNlYzRmZDEyMGNkZDYzYWQzMWNjNjg=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2018-08-23T21:13:16Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2018-08-23T21:13:16Z"}, "message": "better join-lines", "tree": {"sha": "88ea9aebf54da8008a9adc359e0e613d6a160a61", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/88ea9aebf54da8008a9adc359e0e613d6a160a61"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f47f58ffe5fb494c883ec4fd120cdd63ad31cc68", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f47f58ffe5fb494c883ec4fd120cdd63ad31cc68", "html_url": "https://github.com/rust-lang/rust/commit/f47f58ffe5fb494c883ec4fd120cdd63ad31cc68", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f47f58ffe5fb494c883ec4fd120cdd63ad31cc68/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8ad586a44e2214a11c4e7d27e0d3c2d73e43f39f", "url": "https://api.github.com/repos/rust-lang/rust/commits/8ad586a44e2214a11c4e7d27e0d3c2d73e43f39f", "html_url": "https://github.com/rust-lang/rust/commit/8ad586a44e2214a11c4e7d27e0d3c2d73e43f39f"}], "stats": {"total": 13, "additions": 12, "deletions": 1}, "files": [{"sha": "df2109f507d7b98345d53afc935d6990b385ff78", "filename": "code/src/extension.ts", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/f47f58ffe5fb494c883ec4fd120cdd63ad31cc68/code%2Fsrc%2Fextension.ts", "raw_url": "https://github.com/rust-lang/rust/raw/f47f58ffe5fb494c883ec4fd120cdd63ad31cc68/code%2Fsrc%2Fextension.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/code%2Fsrc%2Fextension.ts?ref=f47f58ffe5fb494c883ec4fd120cdd63ad31cc68", "patch": "@@ -50,6 +50,7 @@ export function activate(context: vscode.ExtensionContext) {\n             let anchor = sel.isEmpty ? active : sel.anchor\n             return new vscode.Selection(anchor, active)\n         })\n+        editor.revealRange(editor.selection)\n     })\n     registerCommand('libsyntax-rust.joinLines', async () => {\n         let editor = vscode.window.activeTextEditor"}, {"sha": "04021d1640e077dc730bd80532f3f9c445a4570f", "filename": "crates/libeditor/src/typing.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f47f58ffe5fb494c883ec4fd120cdd63ad31cc68/crates%2Flibeditor%2Fsrc%2Ftyping.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f47f58ffe5fb494c883ec4fd120cdd63ad31cc68/crates%2Flibeditor%2Fsrc%2Ftyping.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Flibeditor%2Fsrc%2Ftyping.rs?ref=f47f58ffe5fb494c883ec4fd120cdd63ad31cc68", "patch": "@@ -72,9 +72,11 @@ fn remove_newline(\n     if node.kind() == WHITESPACE && node_text.bytes().filter(|&b| b == b'\\n').count() == 1 {\n         match (node.prev_sibling(), node.next_sibling()) {\n             (Some(prev), Some(next)) => {\n+                let range = TextRange::from_to(prev.range().start(), node.range().end());\n                 if prev.kind() == COMMA && (next.kind() == R_PAREN || next.kind() == R_BRACK) {\n-                    let range = TextRange::from_to(prev.range().start(), node.range().end());\n                     edit.delete(range);\n+                } else if prev.kind() == COMMA && next.kind() == R_CURLY {\n+                    edit.replace(range, \" \".to_string());\n                 } else {\n                     edit.replace(\n                         node.range(),"}, {"sha": "858c6c4a6493feb0f6edfa7cec3d29924444229a", "filename": "crates/libeditor/tests/test.rs", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/f47f58ffe5fb494c883ec4fd120cdd63ad31cc68/crates%2Flibeditor%2Ftests%2Ftest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f47f58ffe5fb494c883ec4fd120cdd63ad31cc68/crates%2Flibeditor%2Ftests%2Ftest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Flibeditor%2Ftests%2Ftest.rs?ref=f47f58ffe5fb494c883ec4fd120cdd63ad31cc68", "patch": "@@ -223,6 +223,14 @@ fn foo() {\n fn foo() {\n     foo(1, 2, 3)\n }\n+\");\n+\n+    do_check(r\"\n+struct Foo <|>{\n+    f: u32,\n+}<|>\n+\", r\"\n+struct Foo { f: u32 }\n \");\n }\n "}]}