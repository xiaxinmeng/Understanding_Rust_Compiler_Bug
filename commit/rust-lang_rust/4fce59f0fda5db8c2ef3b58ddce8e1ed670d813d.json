{"sha": "4fce59f0fda5db8c2ef3b58ddce8e1ed670d813d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRmY2U1OWYwZmRhNWRiOGMyZWYzYjU4ZGRjZThlMWVkNjcwZDgxM2Q=", "commit": {"author": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2018-07-23T16:46:42Z"}, "committer": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2018-07-25T03:38:20Z"}, "message": "remove unnecessary `blame_span` from `report_region_errors`", "tree": {"sha": "889bdab9626c97f1748fbe04383108ddd76aff0f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/889bdab9626c97f1748fbe04383108ddd76aff0f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4fce59f0fda5db8c2ef3b58ddce8e1ed670d813d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4fce59f0fda5db8c2ef3b58ddce8e1ed670d813d", "html_url": "https://github.com/rust-lang/rust/commit/4fce59f0fda5db8c2ef3b58ddce8e1ed670d813d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4fce59f0fda5db8c2ef3b58ddce8e1ed670d813d/comments", "author": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "52c94e9dec4a1fb5ee5b007cb03d153dd2e25a35", "url": "https://api.github.com/repos/rust-lang/rust/commits/52c94e9dec4a1fb5ee5b007cb03d153dd2e25a35", "html_url": "https://github.com/rust-lang/rust/commit/52c94e9dec4a1fb5ee5b007cb03d153dd2e25a35"}], "stats": {"total": 137, "additions": 76, "deletions": 61}, "files": [{"sha": "87c58bf8ae7ee2b4e8d9a1b43d6929b43df827ba", "filename": "src/librustc_mir/borrow_check/nll/region_infer/error_reporting/mod.rs", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/4fce59f0fda5db8c2ef3b58ddce8e1ed670d813d/src%2Flibrustc_mir%2Fborrow_check%2Fnll%2Fregion_infer%2Ferror_reporting%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4fce59f0fda5db8c2ef3b58ddce8e1ed670d813d/src%2Flibrustc_mir%2Fborrow_check%2Fnll%2Fregion_infer%2Ferror_reporting%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Fnll%2Fregion_infer%2Ferror_reporting%2Fmod.rs?ref=4fce59f0fda5db8c2ef3b58ddce8e1ed670d813d", "patch": "@@ -199,19 +199,10 @@ impl<'tcx> RegionInferenceContext<'tcx> {\n         mir_def_id: DefId,\n         fr: RegionVid,\n         outlived_fr: RegionVid,\n-        blame_span: Span,\n         errors_buffer: &mut Vec<Diagnostic>,\n     ) {\n         debug!(\"report_error(fr={:?}, outlived_fr={:?})\", fr, outlived_fr);\n \n-        if let (Some(f), Some(o)) = (self.to_error_region(fr), self.to_error_region(outlived_fr)) {\n-            let tables = infcx.tcx.typeck_tables_of(mir_def_id);\n-            let nice = NiceRegionError::new_from_span(infcx.tcx, blame_span, o, f, Some(tables));\n-            if let Some(_error_reported) = nice.try_report() {\n-                return;\n-            }\n-        }\n-\n         // Find all paths\n         let constraint_paths = self.find_constraint_paths_between_regions(fr, |r| r == outlived_fr);\n         debug!(\"report_error: constraint_paths={:#?}\", constraint_paths);\n@@ -233,6 +224,15 @@ impl<'tcx> RegionInferenceContext<'tcx> {\n         // Get a span\n         let (category, span) = categorized_path.first().unwrap();\n \n+        // Check if we can use one of the \"nice region errors\".\n+        if let (Some(f), Some(o)) = (self.to_error_region(fr), self.to_error_region(outlived_fr)) {\n+            let tables = infcx.tcx.typeck_tables_of(mir_def_id);\n+            let nice = NiceRegionError::new_from_span(infcx.tcx, *span, o, f, Some(tables));\n+            if let Some(_error_reported) = nice.try_report() {\n+                return;\n+            }\n+        }\n+\n         let category = match (\n             category,\n             self.universal_regions.is_local_free_region(fr),"}, {"sha": "ea1e8b346bd42b8dd88e9c1a645dee992c0495d2", "filename": "src/librustc_mir/borrow_check/nll/region_infer/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4fce59f0fda5db8c2ef3b58ddce8e1ed670d813d/src%2Flibrustc_mir%2Fborrow_check%2Fnll%2Fregion_infer%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4fce59f0fda5db8c2ef3b58ddce8e1ed670d813d/src%2Flibrustc_mir%2Fborrow_check%2Fnll%2Fregion_infer%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Fnll%2Fregion_infer%2Fmod.rs?ref=4fce59f0fda5db8c2ef3b58ddce8e1ed670d813d", "patch": "@@ -921,7 +921,7 @@ impl<'tcx> RegionInferenceContext<'tcx> {\n             // to report the error. This gives better error messages\n             // in some cases.\n             self.report_error(\n-                mir, infcx, mir_def_id, longer_fr, shorter_fr, blame_span, errors_buffer);\n+                mir, infcx, mir_def_id, longer_fr, shorter_fr, errors_buffer);\n         }\n     }\n }"}, {"sha": "319e7ef38601d7fdc4a39047845ffb4b84a7f9ac", "filename": "src/test/ui/issue-40288-2.nll.stderr", "status": "modified", "additions": 8, "deletions": 6, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/4fce59f0fda5db8c2ef3b58ddce8e1ed670d813d/src%2Ftest%2Fui%2Fissue-40288-2.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4fce59f0fda5db8c2ef3b58ddce8e1ed670d813d/src%2Ftest%2Fui%2Fissue-40288-2.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-40288-2.nll.stderr?ref=4fce59f0fda5db8c2ef3b58ddce8e1ed670d813d", "patch": "@@ -35,20 +35,22 @@ LL |     let mut out = Struct { head: x, _tail: [()] };\n    |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error[E0621]: explicit lifetime required in the type of `y`\n-  --> $DIR/issue-40288-2.rs:14:9\n+  --> $DIR/issue-40288-2.rs:16:31\n    |\n LL | fn lifetime_transmute_slice<'a, T: ?Sized>(x: &'a T, y: &T) -> &'a T {\n    |                                                      - consider changing the type of `y` to `&'a T`\n-LL |     let mut out = [x];\n-   |         ^^^^^^^ lifetime `'a` required\n+...\n+LL |         let slice: &mut [_] = &mut out;\n+   |                               ^^^^^^^^ lifetime `'a` required\n \n error[E0621]: explicit lifetime required in the type of `y`\n-  --> $DIR/issue-40288-2.rs:29:9\n+  --> $DIR/issue-40288-2.rs:31:41\n    |\n LL | fn lifetime_transmute_struct<'a, T: ?Sized>(x: &'a T, y: &T) -> &'a T {\n    |                                                       - consider changing the type of `y` to `&'a T`\n-LL |     let mut out = Struct { head: x, _tail: [()] };\n-   |         ^^^^^^^ lifetime `'a` required\n+...\n+LL |         let dst: &mut Struct<_, [()]> = &mut out;\n+   |                                         ^^^^^^^^ lifetime `'a` required\n \n error: aborting due to 2 previous errors\n "}, {"sha": "4d9517eca6032dfa5acd28382faae51a2620ba70", "filename": "src/test/ui/lifetime-errors/ex1-return-one-existing-name-if-else-3.nll.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/4fce59f0fda5db8c2ef3b58ddce8e1ed670d813d/src%2Ftest%2Fui%2Flifetime-errors%2Fex1-return-one-existing-name-if-else-3.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4fce59f0fda5db8c2ef3b58ddce8e1ed670d813d/src%2Ftest%2Fui%2Flifetime-errors%2Fex1-return-one-existing-name-if-else-3.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flifetime-errors%2Fex1-return-one-existing-name-if-else-3.nll.stderr?ref=4fce59f0fda5db8c2ef3b58ddce8e1ed670d813d", "patch": "@@ -5,12 +5,12 @@ LL |     if x > y { x } else { y } //~ ERROR explicit lifetime\n    |                           ^\n \n error[E0621]: explicit lifetime required in parameter type\n-  --> $DIR/ex1-return-one-existing-name-if-else-3.rs:11:13\n+  --> $DIR/ex1-return-one-existing-name-if-else-3.rs:11:16\n    |\n LL | fn foo<'a>((x, y): (&'a i32, &i32)) -> &'a i32 {\n-   |            -^----\n-   |            ||\n-   |            |lifetime `'a` required\n+   |            ----^-\n+   |            |   |\n+   |            |   lifetime `'a` required\n    |            consider changing type to `(&'a i32, &'a i32)`\n \n error: aborting due to previous error"}, {"sha": "087c9eb389b55bad57f2fc2e9893a80886fd8c69", "filename": "src/test/ui/lifetime-errors/ex2a-push-one-existing-name-2.nll.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4fce59f0fda5db8c2ef3b58ddce8e1ed670d813d/src%2Ftest%2Fui%2Flifetime-errors%2Fex2a-push-one-existing-name-2.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4fce59f0fda5db8c2ef3b58ddce8e1ed670d813d/src%2Ftest%2Fui%2Flifetime-errors%2Fex2a-push-one-existing-name-2.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flifetime-errors%2Fex2a-push-one-existing-name-2.nll.stderr?ref=4fce59f0fda5db8c2ef3b58ddce8e1ed670d813d", "patch": "@@ -10,7 +10,7 @@ error[E0621]: explicit lifetime required in the type of `x`\n LL | fn foo<'a>(x: Ref<i32>, y: &mut Vec<Ref<'a, i32>>) {\n    |            - consider changing the type of `x` to `Ref<'a, i32>`\n LL |     y.push(x); //~ ERROR explicit lifetime\n-   |     ^ lifetime `'a` required\n+   |     ^^^^^^^^^ lifetime `'a` required\n \n error: aborting due to previous error\n "}, {"sha": "80192af221755b8ca2ca6f07aedc7741c4c9d6c9", "filename": "src/test/ui/lifetime-errors/ex2a-push-one-existing-name.nll.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4fce59f0fda5db8c2ef3b58ddce8e1ed670d813d/src%2Ftest%2Fui%2Flifetime-errors%2Fex2a-push-one-existing-name.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4fce59f0fda5db8c2ef3b58ddce8e1ed670d813d/src%2Ftest%2Fui%2Flifetime-errors%2Fex2a-push-one-existing-name.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flifetime-errors%2Fex2a-push-one-existing-name.nll.stderr?ref=4fce59f0fda5db8c2ef3b58ddce8e1ed670d813d", "patch": "@@ -10,7 +10,7 @@ error[E0621]: explicit lifetime required in the type of `y`\n LL | fn foo<'a>(x: &mut Vec<Ref<'a, i32>>, y: Ref<i32>) {\n    |                                       - consider changing the type of `y` to `Ref<'a, i32>`\n LL |     x.push(y); //~ ERROR explicit lifetime\n-   |     ^ lifetime `'a` required\n+   |     ^^^^^^^^^ lifetime `'a` required\n \n error: aborting due to previous error\n "}, {"sha": "4b4fdde940f7e26f1d226a7380407dd3fe1635a2", "filename": "src/test/ui/lifetime-errors/ex2b-push-no-existing-names.nll.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4fce59f0fda5db8c2ef3b58ddce8e1ed670d813d/src%2Ftest%2Fui%2Flifetime-errors%2Fex2b-push-no-existing-names.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4fce59f0fda5db8c2ef3b58ddce8e1ed670d813d/src%2Ftest%2Fui%2Flifetime-errors%2Fex2b-push-no-existing-names.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flifetime-errors%2Fex2b-push-no-existing-names.nll.stderr?ref=4fce59f0fda5db8c2ef3b58ddce8e1ed670d813d", "patch": "@@ -10,7 +10,7 @@ error[E0623]: lifetime mismatch\n LL | fn foo(x: &mut Vec<Ref<i32>>, y: Ref<i32>) {\n    |                    --------      -------- these two types are declared with different lifetimes...\n LL |     x.push(y); //~ ERROR lifetime mismatch\n-   |     ^ ...but data from `y` flows into `x` here\n+   |     ^^^^^^^^^ ...but data from `y` flows into `x` here\n \n error: aborting due to previous error\n "}, {"sha": "f55fd291249c6aa9921ee4e390b7676ce16a7b22", "filename": "src/test/ui/lifetime-errors/ex2c-push-inference-variable.nll.stderr", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/4fce59f0fda5db8c2ef3b58ddce8e1ed670d813d/src%2Ftest%2Fui%2Flifetime-errors%2Fex2c-push-inference-variable.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4fce59f0fda5db8c2ef3b58ddce8e1ed670d813d/src%2Ftest%2Fui%2Flifetime-errors%2Fex2c-push-inference-variable.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flifetime-errors%2Fex2c-push-inference-variable.nll.stderr?ref=4fce59f0fda5db8c2ef3b58ddce8e1ed670d813d", "patch": "@@ -5,12 +5,13 @@ LL |     let z = Ref { data: y.data };\n    |             ^^^\n \n error[E0623]: lifetime mismatch\n-  --> $DIR/ex2c-push-inference-variable.rs:16:9\n+  --> $DIR/ex2c-push-inference-variable.rs:17:5\n    |\n LL | fn foo<'a, 'b, 'c>(x: &'a mut Vec<Ref<'b, i32>>, y: Ref<'c, i32>) {\n    |                                   ------------      ------------ these two types are declared with different lifetimes...\n LL |     let z = Ref { data: y.data };\n-   |         ^ ...but data from `y` flows into `x` here\n+LL |     x.push(z); //~ ERROR lifetime mismatch\n+   |     ^^^^^^^^^ ...but data from `y` flows into `x` here\n \n error: aborting due to previous error\n "}, {"sha": "85b5f3e890008554a9d802d335c61cf478ba8d44", "filename": "src/test/ui/lifetime-errors/ex2d-push-inference-variable-2.nll.stderr", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/4fce59f0fda5db8c2ef3b58ddce8e1ed670d813d/src%2Ftest%2Fui%2Flifetime-errors%2Fex2d-push-inference-variable-2.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4fce59f0fda5db8c2ef3b58ddce8e1ed670d813d/src%2Ftest%2Fui%2Flifetime-errors%2Fex2d-push-inference-variable-2.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flifetime-errors%2Fex2d-push-inference-variable-2.nll.stderr?ref=4fce59f0fda5db8c2ef3b58ddce8e1ed670d813d", "patch": "@@ -5,12 +5,13 @@ LL |     let b = Ref { data: y.data };\n    |             ^^^\n \n error[E0623]: lifetime mismatch\n-  --> $DIR/ex2d-push-inference-variable-2.rs:16:9\n+  --> $DIR/ex2d-push-inference-variable-2.rs:18:5\n    |\n LL | fn foo<'a, 'b, 'c>(x: &'a mut Vec<Ref<'b, i32>>, y: Ref<'c, i32>) {\n    |                                   ------------      ------------ these two types are declared with different lifetimes...\n-LL |     let a: &mut Vec<Ref<i32>> = x; //~ ERROR lifetime mismatch\n-   |         ^ ...but data from `y` flows into `x` here\n+...\n+LL |     a.push(b);\n+   |     ^^^^^^^^^ ...but data from `y` flows into `x` here\n \n error: aborting due to previous error\n "}, {"sha": "7e5182a5d30c940b2f2363d950dafec273167d92", "filename": "src/test/ui/lifetime-errors/ex2e-push-inference-variable-3.nll.stderr", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/4fce59f0fda5db8c2ef3b58ddce8e1ed670d813d/src%2Ftest%2Fui%2Flifetime-errors%2Fex2e-push-inference-variable-3.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4fce59f0fda5db8c2ef3b58ddce8e1ed670d813d/src%2Ftest%2Fui%2Flifetime-errors%2Fex2e-push-inference-variable-3.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flifetime-errors%2Fex2e-push-inference-variable-3.nll.stderr?ref=4fce59f0fda5db8c2ef3b58ddce8e1ed670d813d", "patch": "@@ -5,12 +5,13 @@ LL |     let b = Ref { data: y.data };\n    |             ^^^\n \n error[E0623]: lifetime mismatch\n-  --> $DIR/ex2e-push-inference-variable-3.rs:16:9\n+  --> $DIR/ex2e-push-inference-variable-3.rs:18:5\n    |\n LL | fn foo<'a, 'b, 'c>(x: &'a mut Vec<Ref<'b, i32>>, y: Ref<'c, i32>) {\n    |                                   ------------      ------------ these two types are declared with different lifetimes...\n-LL |     let a: &mut Vec<Ref<i32>> = x; //~ ERROR lifetime mismatch\n-   |         ^ ...but data from `y` flows into `x` here\n+...\n+LL |     Vec::push(a, b);\n+   |     ^^^^^^^^^^^^^^^ ...but data from `y` flows into `x` here\n \n error: aborting due to previous error\n "}, {"sha": "36317c4570b982fe73a104fc6fcfb02d2d1f15bd", "filename": "src/test/ui/lifetime-errors/ex3-both-anon-regions-2.nll.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/4fce59f0fda5db8c2ef3b58ddce8e1ed670d813d/src%2Ftest%2Fui%2Flifetime-errors%2Fex3-both-anon-regions-2.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4fce59f0fda5db8c2ef3b58ddce8e1ed670d813d/src%2Ftest%2Fui%2Flifetime-errors%2Fex3-both-anon-regions-2.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flifetime-errors%2Fex3-both-anon-regions-2.nll.stderr?ref=4fce59f0fda5db8c2ef3b58ddce8e1ed670d813d", "patch": "@@ -5,12 +5,12 @@ LL |     *v = x; //~ ERROR lifetime mismatch\n    |          ^\n \n error[E0623]: lifetime mismatch\n-  --> $DIR/ex3-both-anon-regions-2.rs:11:14\n+  --> $DIR/ex3-both-anon-regions-2.rs:12:5\n    |\n LL | fn foo(&mut (ref mut v, w): &mut (&u8, &u8), x: &u8) {\n-   |              ^^^^^^^^^            ---           --- these two types are declared with different lifetimes...\n-   |              |\n-   |              ...but data from `x` flows here\n+   |                                   ---           --- these two types are declared with different lifetimes...\n+LL |     *v = x; //~ ERROR lifetime mismatch\n+   |     ^^^^^^ ...but data from `x` flows here\n \n error: aborting due to previous error\n "}, {"sha": "61af34747ca9bb0b429f7b20cb45abde8be684b8", "filename": "src/test/ui/lifetime-errors/ex3-both-anon-regions-3.nll.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/4fce59f0fda5db8c2ef3b58ddce8e1ed670d813d/src%2Ftest%2Fui%2Flifetime-errors%2Fex3-both-anon-regions-3.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4fce59f0fda5db8c2ef3b58ddce8e1ed670d813d/src%2Ftest%2Fui%2Flifetime-errors%2Fex3-both-anon-regions-3.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flifetime-errors%2Fex3-both-anon-regions-3.nll.stderr?ref=4fce59f0fda5db8c2ef3b58ddce8e1ed670d813d", "patch": "@@ -19,12 +19,12 @@ LL | fn foo(z: &mut Vec<(&u8,&u8)>, (x, y): (&u8, &u8)) {\n    |                                 ...but data flows into `z` here\n \n error[E0623]: lifetime mismatch\n-  --> $DIR/ex3-both-anon-regions-3.rs:11:33\n+  --> $DIR/ex3-both-anon-regions-3.rs:11:36\n    |\n LL | fn foo(z: &mut Vec<(&u8,&u8)>, (x, y): (&u8, &u8)) {\n-   |                         ---     ^            --- these two types are declared with different lifetimes...\n-   |                                 |\n-   |                                 ...but data flows into `z` here\n+   |                         ---        ^         --- these two types are declared with different lifetimes...\n+   |                                    |\n+   |                                    ...but data flows into `z` here\n \n error: aborting due to 2 previous errors\n "}, {"sha": "2a5729952e33d3e691dd50017c730bb4bb3a9997", "filename": "src/test/ui/lifetime-errors/ex3-both-anon-regions-both-are-structs-earlybound-regions.nll.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4fce59f0fda5db8c2ef3b58ddce8e1ed670d813d/src%2Ftest%2Fui%2Flifetime-errors%2Fex3-both-anon-regions-both-are-structs-earlybound-regions.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4fce59f0fda5db8c2ef3b58ddce8e1ed670d813d/src%2Ftest%2Fui%2Flifetime-errors%2Fex3-both-anon-regions-both-are-structs-earlybound-regions.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flifetime-errors%2Fex3-both-anon-regions-both-are-structs-earlybound-regions.nll.stderr?ref=4fce59f0fda5db8c2ef3b58ddce8e1ed670d813d", "patch": "@@ -11,7 +11,7 @@ LL | fn foo<'a, 'b>(mut x: Vec<Ref<'a>>, y: Ref<'b>)\n    |                           -------      ------- these two types are declared with different lifetimes...\n ...\n LL |     x.push(y); //~ ERROR lifetime mismatch\n-   |     ^ ...but data from `y` flows into `x` here\n+   |     ^^^^^^^^^ ...but data from `y` flows into `x` here\n \n error: aborting due to previous error\n "}, {"sha": "6efc8d3da06776ad6cd66b96c24d1e98b6d1e066", "filename": "src/test/ui/lifetime-errors/ex3-both-anon-regions-both-are-structs-latebound-regions.nll.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4fce59f0fda5db8c2ef3b58ddce8e1ed670d813d/src%2Ftest%2Fui%2Flifetime-errors%2Fex3-both-anon-regions-both-are-structs-latebound-regions.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4fce59f0fda5db8c2ef3b58ddce8e1ed670d813d/src%2Ftest%2Fui%2Flifetime-errors%2Fex3-both-anon-regions-both-are-structs-latebound-regions.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flifetime-errors%2Fex3-both-anon-regions-both-are-structs-latebound-regions.nll.stderr?ref=4fce59f0fda5db8c2ef3b58ddce8e1ed670d813d", "patch": "@@ -10,7 +10,7 @@ error[E0623]: lifetime mismatch\n LL | fn foo<'a, 'b>(mut x: Vec<Ref<'a>>, y: Ref<'b>) {\n    |                           -------      ------- these two types are declared with different lifetimes...\n LL |     x.push(y); //~ ERROR lifetime mismatch\n-   |     ^ ...but data from `y` flows into `x` here\n+   |     ^^^^^^^^^ ...but data from `y` flows into `x` here\n \n error: aborting due to previous error\n "}, {"sha": "0f555020822cb42f4559e21eedc3de6336237aee", "filename": "src/test/ui/lifetime-errors/ex3-both-anon-regions-both-are-structs.nll.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4fce59f0fda5db8c2ef3b58ddce8e1ed670d813d/src%2Ftest%2Fui%2Flifetime-errors%2Fex3-both-anon-regions-both-are-structs.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4fce59f0fda5db8c2ef3b58ddce8e1ed670d813d/src%2Ftest%2Fui%2Flifetime-errors%2Fex3-both-anon-regions-both-are-structs.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flifetime-errors%2Fex3-both-anon-regions-both-are-structs.nll.stderr?ref=4fce59f0fda5db8c2ef3b58ddce8e1ed670d813d", "patch": "@@ -10,7 +10,7 @@ error[E0623]: lifetime mismatch\n LL | fn foo(mut x: Vec<Ref>, y: Ref) {\n    |                   ---      --- these two types are declared with different lifetimes...\n LL |     x.push(y); //~ ERROR lifetime mismatch\n-   |     ^ ...but data from `y` flows into `x` here\n+   |     ^^^^^^^^^ ...but data from `y` flows into `x` here\n \n error: aborting due to previous error\n "}, {"sha": "4400644e7fb65299d62adba5139f1cbb574021ad", "filename": "src/test/ui/lifetime-errors/ex3-both-anon-regions-latebound-regions.nll.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4fce59f0fda5db8c2ef3b58ddce8e1ed670d813d/src%2Ftest%2Fui%2Flifetime-errors%2Fex3-both-anon-regions-latebound-regions.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4fce59f0fda5db8c2ef3b58ddce8e1ed670d813d/src%2Ftest%2Fui%2Flifetime-errors%2Fex3-both-anon-regions-latebound-regions.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flifetime-errors%2Fex3-both-anon-regions-latebound-regions.nll.stderr?ref=4fce59f0fda5db8c2ef3b58ddce8e1ed670d813d", "patch": "@@ -10,7 +10,7 @@ error[E0623]: lifetime mismatch\n LL | fn foo<'a,'b>(x: &mut Vec<&'a u8>, y: &'b u8) {\n    |                           ------      ------ these two types are declared with different lifetimes...\n LL |     x.push(y); //~ ERROR lifetime mismatch\n-   |     ^ ...but data from `y` flows into `x` here\n+   |     ^^^^^^^^^ ...but data from `y` flows into `x` here\n \n error: aborting due to previous error\n "}, {"sha": "a0aa1e28d9bc03183b388e96df22287287417686", "filename": "src/test/ui/lifetime-errors/ex3-both-anon-regions-using-fn-items.nll.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4fce59f0fda5db8c2ef3b58ddce8e1ed670d813d/src%2Ftest%2Fui%2Flifetime-errors%2Fex3-both-anon-regions-using-fn-items.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4fce59f0fda5db8c2ef3b58ddce8e1ed670d813d/src%2Ftest%2Fui%2Flifetime-errors%2Fex3-both-anon-regions-using-fn-items.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flifetime-errors%2Fex3-both-anon-regions-using-fn-items.nll.stderr?ref=4fce59f0fda5db8c2ef3b58ddce8e1ed670d813d", "patch": "@@ -10,7 +10,7 @@ error[E0623]: lifetime mismatch\n LL | fn foo(x:fn(&u8, &u8), y: Vec<&u8>, z: &u8) {\n    |                               ---      --- these two types are declared with different lifetimes...\n LL |   y.push(z); //~ ERROR lifetime mismatch\n-   |   ^ ...but data from `z` flows into `y` here\n+   |   ^^^^^^^^^ ...but data from `z` flows into `y` here\n \n error[E0596]: cannot borrow `y` as mutable, as it is not declared as mutable\n   --> $DIR/ex3-both-anon-regions-using-fn-items.rs:11:3"}, {"sha": "5d4492701beb33209beab494a81da78dd657c043", "filename": "src/test/ui/lifetime-errors/ex3-both-anon-regions-using-impl-items.nll.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4fce59f0fda5db8c2ef3b58ddce8e1ed670d813d/src%2Ftest%2Fui%2Flifetime-errors%2Fex3-both-anon-regions-using-impl-items.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4fce59f0fda5db8c2ef3b58ddce8e1ed670d813d/src%2Ftest%2Fui%2Flifetime-errors%2Fex3-both-anon-regions-using-impl-items.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flifetime-errors%2Fex3-both-anon-regions-using-impl-items.nll.stderr?ref=4fce59f0fda5db8c2ef3b58ddce8e1ed670d813d", "patch": "@@ -10,7 +10,7 @@ error[E0623]: lifetime mismatch\n LL |     fn foo(x: &mut Vec<&u8>, y: &u8) {\n    |                        ---      --- these two types are declared with different lifetimes...\n LL |         x.push(y); //~ ERROR lifetime mismatch\n-   |         ^ ...but data from `y` flows into `x` here\n+   |         ^^^^^^^^^ ...but data from `y` flows into `x` here\n \n error: aborting due to previous error\n "}, {"sha": "37b79cee72f75bec1baf25a23ad67c05cb4542c1", "filename": "src/test/ui/lifetime-errors/ex3-both-anon-regions-using-trait-objects.nll.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4fce59f0fda5db8c2ef3b58ddce8e1ed670d813d/src%2Ftest%2Fui%2Flifetime-errors%2Fex3-both-anon-regions-using-trait-objects.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4fce59f0fda5db8c2ef3b58ddce8e1ed670d813d/src%2Ftest%2Fui%2Flifetime-errors%2Fex3-both-anon-regions-using-trait-objects.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flifetime-errors%2Fex3-both-anon-regions-using-trait-objects.nll.stderr?ref=4fce59f0fda5db8c2ef3b58ddce8e1ed670d813d", "patch": "@@ -10,7 +10,7 @@ error[E0623]: lifetime mismatch\n LL | fn foo(x:Box<Fn(&u8, &u8)> , y: Vec<&u8>, z: &u8) {\n    |                 ---  --- these two types are declared with different lifetimes...\n LL |   y.push(z); //~ ERROR lifetime mismatch\n-   |   ^ ...but data from `z` flows into `y` here\n+   |   ^^^^^^^^^ ...but data from `z` flows into `y` here\n \n error[E0596]: cannot borrow `y` as mutable, as it is not declared as mutable\n   --> $DIR/ex3-both-anon-regions-using-trait-objects.rs:11:3"}, {"sha": "c11d81a4c13daf9336e2cd9e861c7b4b9bc52eed", "filename": "src/test/ui/lifetime-errors/ex3-both-anon-regions.nll.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4fce59f0fda5db8c2ef3b58ddce8e1ed670d813d/src%2Ftest%2Fui%2Flifetime-errors%2Fex3-both-anon-regions.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4fce59f0fda5db8c2ef3b58ddce8e1ed670d813d/src%2Ftest%2Fui%2Flifetime-errors%2Fex3-both-anon-regions.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flifetime-errors%2Fex3-both-anon-regions.nll.stderr?ref=4fce59f0fda5db8c2ef3b58ddce8e1ed670d813d", "patch": "@@ -10,7 +10,7 @@ error[E0623]: lifetime mismatch\n LL | fn foo(x: &mut Vec<&u8>, y: &u8) {\n    |                    ---      --- these two types are declared with different lifetimes...\n LL |     x.push(y); //~ ERROR lifetime mismatch\n-   |     ^ ...but data from `y` flows into `x` here\n+   |     ^^^^^^^^^ ...but data from `y` flows into `x` here\n \n error: aborting due to previous error\n "}, {"sha": "d713a37fa9f41e8e5a256af006adcae0c490442f", "filename": "src/test/ui/nll/closure-requirements/propagate-approximated-ref.stderr", "status": "modified", "additions": 12, "deletions": 7, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/4fce59f0fda5db8c2ef3b58ddce8e1ed670d813d/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fpropagate-approximated-ref.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4fce59f0fda5db8c2ef3b58ddce8e1ed670d813d/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fpropagate-approximated-ref.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fpropagate-approximated-ref.stderr?ref=4fce59f0fda5db8c2ef3b58ddce8e1ed670d813d", "patch": "@@ -24,14 +24,19 @@ LL | |     });\n    = note: where '_#1r: '_#2r\n \n error[E0623]: lifetime mismatch\n-  --> $DIR/propagate-approximated-ref.rs:53:29\n+  --> $DIR/propagate-approximated-ref.rs:53:5\n    |\n-LL | fn supply<'a, 'b>(cell_a: Cell<&'a u32>, cell_b: Cell<&'b u32>) {\n-   |                                -------                -------\n-   |                                |\n-   |                                these two types are declared with different lifetimes...\n-LL |     establish_relationships(&cell_a, &cell_b, |_outlives1, _outlives2, x, y| {\n-   |                             ^^^^^^^ ...but data from `cell_a` flows into `cell_b` here\n+LL |   fn supply<'a, 'b>(cell_a: Cell<&'a u32>, cell_b: Cell<&'b u32>) {\n+   |                                  -------                -------\n+   |                                  |\n+   |                                  these two types are declared with different lifetimes...\n+LL | /     establish_relationships(&cell_a, &cell_b, |_outlives1, _outlives2, x, y| {\n+LL | |         //~^ ERROR lifetime mismatch\n+LL | |\n+LL | |         // Only works if 'x: 'y:\n+LL | |         demand_y(x, y, x.get()) //~ WARNING not reporting region error due to nll\n+LL | |     });\n+   | |______^ ...but data from `cell_a` flows into `cell_b` here\n \n note: No external requirements\n   --> $DIR/propagate-approximated-ref.rs:52:1"}, {"sha": "f6ad6e46c6299c82b7b38bf30f862916fb2283ca", "filename": "src/test/ui/nll/closure-requirements/propagate-approximated-val.stderr", "status": "modified", "additions": 12, "deletions": 7, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/4fce59f0fda5db8c2ef3b58ddce8e1ed670d813d/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fpropagate-approximated-val.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4fce59f0fda5db8c2ef3b58ddce8e1ed670d813d/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fpropagate-approximated-val.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fpropagate-approximated-val.stderr?ref=4fce59f0fda5db8c2ef3b58ddce8e1ed670d813d", "patch": "@@ -24,14 +24,19 @@ LL | |     });\n    = note: where '_#1r: '_#2r\n \n error[E0623]: lifetime mismatch\n-  --> $DIR/propagate-approximated-val.rs:46:29\n+  --> $DIR/propagate-approximated-val.rs:46:5\n    |\n-LL | fn test<'a, 'b>(cell_a: Cell<&'a u32>, cell_b: Cell<&'b u32>) {\n-   |                              -------                -------\n-   |                              |\n-   |                              these two types are declared with different lifetimes...\n-LL |     establish_relationships(cell_a, cell_b, |outlives1, outlives2, x, y| {\n-   |                             ^^^^^^ ...but data from `cell_a` flows into `cell_b` here\n+LL |   fn test<'a, 'b>(cell_a: Cell<&'a u32>, cell_b: Cell<&'b u32>) {\n+   |                                -------                -------\n+   |                                |\n+   |                                these two types are declared with different lifetimes...\n+LL | /     establish_relationships(cell_a, cell_b, |outlives1, outlives2, x, y| {\n+LL | |         //~^ ERROR lifetime mismatch\n+LL | |\n+LL | |         // Only works if 'x: 'y:\n+LL | |         demand_y(outlives1, outlives2, x.get()) //~ WARNING not reporting region error due to nll\n+LL | |     });\n+   | |______^ ...but data from `cell_a` flows into `cell_b` here\n \n note: No external requirements\n   --> $DIR/propagate-approximated-val.rs:45:1"}]}