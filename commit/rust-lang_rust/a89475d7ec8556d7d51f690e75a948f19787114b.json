{"sha": "a89475d7ec8556d7d51f690e75a948f19787114b", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE4OTQ3NWQ3ZWM4NTU2ZDdkNTFmNjkwZTc1YTk0OGYxOTc4NzExNGI=", "commit": {"author": {"name": "Ariel Ben-Yehuda", "email": "ariel.byd@gmail.com", "date": "2017-01-10T14:24:06Z"}, "committer": {"name": "Ariel Ben-Yehuda", "email": "ariel.byd@gmail.com", "date": "2017-01-10T18:43:32Z"}, "message": "Use little-endian encoding for Blake2 hashing on all architectures\n\nLike many hash functions, the blake2 hash is mathematically defined on\na sequence of 64-bit words. As Rust's hash interface operates on\nsequences of octets, some encoding must be used to bridge that\ndifference.\n\nThe Blake2 RFC (RFC 7693) specifies that:\n   Byte (octet) streams are interpreted as words in little-endian order,\n   with the least-significant byte first.\n\nSo use that encoding consistently.\n\nFixes #38891.", "tree": {"sha": "b8f9e6fdf06f635fc255df158729931143687d1b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b8f9e6fdf06f635fc255df158729931143687d1b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a89475d7ec8556d7d51f690e75a948f19787114b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a89475d7ec8556d7d51f690e75a948f19787114b", "html_url": "https://github.com/rust-lang/rust/commit/a89475d7ec8556d7d51f690e75a948f19787114b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a89475d7ec8556d7d51f690e75a948f19787114b/comments", "author": {"login": "arielb1", "id": 1830974, "node_id": "MDQ6VXNlcjE4MzA5NzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1830974?v=4", "gravatar_id": "", "url": "https://api.github.com/users/arielb1", "html_url": "https://github.com/arielb1", "followers_url": "https://api.github.com/users/arielb1/followers", "following_url": "https://api.github.com/users/arielb1/following{/other_user}", "gists_url": "https://api.github.com/users/arielb1/gists{/gist_id}", "starred_url": "https://api.github.com/users/arielb1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/arielb1/subscriptions", "organizations_url": "https://api.github.com/users/arielb1/orgs", "repos_url": "https://api.github.com/users/arielb1/repos", "events_url": "https://api.github.com/users/arielb1/events{/privacy}", "received_events_url": "https://api.github.com/users/arielb1/received_events", "type": "User", "site_admin": false}, "committer": {"login": "arielb1", "id": 1830974, "node_id": "MDQ6VXNlcjE4MzA5NzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1830974?v=4", "gravatar_id": "", "url": "https://api.github.com/users/arielb1", "html_url": "https://github.com/arielb1", "followers_url": "https://api.github.com/users/arielb1/followers", "following_url": "https://api.github.com/users/arielb1/following{/other_user}", "gists_url": "https://api.github.com/users/arielb1/gists{/gist_id}", "starred_url": "https://api.github.com/users/arielb1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/arielb1/subscriptions", "organizations_url": "https://api.github.com/users/arielb1/orgs", "repos_url": "https://api.github.com/users/arielb1/repos", "events_url": "https://api.github.com/users/arielb1/events{/privacy}", "received_events_url": "https://api.github.com/users/arielb1/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7ef1a69d2e05d86e0893763d2c86677e9c5f3d99", "url": "https://api.github.com/repos/rust-lang/rust/commits/7ef1a69d2e05d86e0893763d2c86677e9c5f3d99", "html_url": "https://github.com/rust-lang/rust/commit/7ef1a69d2e05d86e0893763d2c86677e9c5f3d99"}], "stats": {"total": 16, "additions": 10, "deletions": 6}, "files": [{"sha": "31492e2621945dd292d556f556fd61d4a3d36fb6", "filename": "src/librustc_data_structures/blake2b.rs", "status": "modified", "additions": 10, "deletions": 6, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/a89475d7ec8556d7d51f690e75a948f19787114b/src%2Flibrustc_data_structures%2Fblake2b.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a89475d7ec8556d7d51f690e75a948f19787114b/src%2Flibrustc_data_structures%2Fblake2b.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_data_structures%2Fblake2b.rs?ref=a89475d7ec8556d7d51f690e75a948f19787114b", "patch": "@@ -113,17 +113,20 @@ fn blake2b_compress(ctx: &mut Blake2bCtx, last: bool) {\n     }\n \n     {\n-        // Re-interpret the input buffer in the state as u64s\n+        // Re-interpret the input buffer in the state as an array\n+        // of little-endian u64s, converting them to machine\n+        // endianness. It's OK to modify the buffer in place\n+        // since this is the last time  this data will be accessed\n+        // before it's overwritten.\n+\n         let m: &mut [u64; 16] = unsafe {\n             let b: &mut [u8; 128] = &mut ctx.b;\n             ::std::mem::transmute(b)\n         };\n \n-        // It's OK to modify the buffer in place since this is the last time\n-        // this data will be accessed before it's overwritten\n         if cfg!(target_endian = \"big\") {\n             for word in &mut m[..] {\n-                *word = word.to_be();\n+                *word = u64::from_le(*word);\n             }\n         }\n \n@@ -209,9 +212,10 @@ fn blake2b_final(ctx: &mut Blake2bCtx)\n \n     blake2b_compress(ctx, true);\n \n+    // Modify our buffer to little-endian format as it will be read\n+    // as a byte array. It's OK to modify the buffer in place since\n+    // this is the last time this data will be accessed.\n     if cfg!(target_endian = \"big\") {\n-        // Make sure that the data is in memory in little endian format, as is\n-        // demanded by BLAKE2\n         for word in &mut ctx.h {\n             *word = word.to_le();\n         }"}]}