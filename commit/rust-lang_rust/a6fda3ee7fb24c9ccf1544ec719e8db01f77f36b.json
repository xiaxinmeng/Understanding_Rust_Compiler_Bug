{"sha": "a6fda3ee7fb24c9ccf1544ec719e8db01f77f36b", "node_id": "C_kwDOAAsO6NoAKGE2ZmRhM2VlN2ZiMjRjOWNjZjE1NDRlYzcxOWU4ZGIwMWY3N2YzNmI", "commit": {"author": {"name": "Nilstrieb", "email": "48135649+Nilstrieb@users.noreply.github.com", "date": "2023-01-18T19:04:26Z"}, "committer": {"name": "Nilstrieb", "email": "48135649+Nilstrieb@users.noreply.github.com", "date": "2023-01-18T19:46:36Z"}, "message": "Support `true` and `false` as boolean flag params\n\nImplements MCP 577.", "tree": {"sha": "391aea22097d1ff89310f487f3e8000b054b67a4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/391aea22097d1ff89310f487f3e8000b054b67a4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a6fda3ee7fb24c9ccf1544ec719e8db01f77f36b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a6fda3ee7fb24c9ccf1544ec719e8db01f77f36b", "html_url": "https://github.com/rust-lang/rust/commit/a6fda3ee7fb24c9ccf1544ec719e8db01f77f36b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a6fda3ee7fb24c9ccf1544ec719e8db01f77f36b/comments", "author": {"login": "Nilstrieb", "id": 48135649, "node_id": "MDQ6VXNlcjQ4MTM1NjQ5", "avatar_url": "https://avatars.githubusercontent.com/u/48135649?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Nilstrieb", "html_url": "https://github.com/Nilstrieb", "followers_url": "https://api.github.com/users/Nilstrieb/followers", "following_url": "https://api.github.com/users/Nilstrieb/following{/other_user}", "gists_url": "https://api.github.com/users/Nilstrieb/gists{/gist_id}", "starred_url": "https://api.github.com/users/Nilstrieb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Nilstrieb/subscriptions", "organizations_url": "https://api.github.com/users/Nilstrieb/orgs", "repos_url": "https://api.github.com/users/Nilstrieb/repos", "events_url": "https://api.github.com/users/Nilstrieb/events{/privacy}", "received_events_url": "https://api.github.com/users/Nilstrieb/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Nilstrieb", "id": 48135649, "node_id": "MDQ6VXNlcjQ4MTM1NjQ5", "avatar_url": "https://avatars.githubusercontent.com/u/48135649?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Nilstrieb", "html_url": "https://github.com/Nilstrieb", "followers_url": "https://api.github.com/users/Nilstrieb/followers", "following_url": "https://api.github.com/users/Nilstrieb/following{/other_user}", "gists_url": "https://api.github.com/users/Nilstrieb/gists{/gist_id}", "starred_url": "https://api.github.com/users/Nilstrieb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Nilstrieb/subscriptions", "organizations_url": "https://api.github.com/users/Nilstrieb/orgs", "repos_url": "https://api.github.com/users/Nilstrieb/repos", "events_url": "https://api.github.com/users/Nilstrieb/events{/privacy}", "received_events_url": "https://api.github.com/users/Nilstrieb/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1f72129ffe5e8c495113f9a2d4e1730f7fad3209", "url": "https://api.github.com/repos/rust-lang/rust/commits/1f72129ffe5e8c495113f9a2d4e1730f7fad3209", "html_url": "https://github.com/rust-lang/rust/commit/1f72129ffe5e8c495113f9a2d4e1730f7fad3209"}], "stats": {"total": 18, "additions": 9, "deletions": 9}, "files": [{"sha": "b102dea570f50d38bb03b8c426de59cf49a25355", "filename": "compiler/rustc_session/src/options.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/a6fda3ee7fb24c9ccf1544ec719e8db01f77f36b/compiler%2Frustc_session%2Fsrc%2Foptions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a6fda3ee7fb24c9ccf1544ec719e8db01f77f36b/compiler%2Frustc_session%2Fsrc%2Foptions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_session%2Fsrc%2Foptions.rs?ref=a6fda3ee7fb24c9ccf1544ec719e8db01f77f36b", "patch": "@@ -349,7 +349,7 @@ fn build_options<O: Default>(\n #[allow(non_upper_case_globals)]\n mod desc {\n     pub const parse_no_flag: &str = \"no value\";\n-    pub const parse_bool: &str = \"one of: `y`, `yes`, `on`, `n`, `no`, or `off`\";\n+    pub const parse_bool: &str = \"one of: `y`, `yes`, `on`, `true`, `n`, `no`, `off` or `false`\";\n     pub const parse_opt_bool: &str = parse_bool;\n     pub const parse_string: &str = \"a string\";\n     pub const parse_opt_string: &str = parse_string;\n@@ -432,11 +432,11 @@ mod parse {\n     /// Use this for any boolean option that has a static default.\n     pub(crate) fn parse_bool(slot: &mut bool, v: Option<&str>) -> bool {\n         match v {\n-            Some(\"y\") | Some(\"yes\") | Some(\"on\") | None => {\n+            Some(\"y\") | Some(\"yes\") | Some(\"on\") | Some(\"true\") | None => {\n                 *slot = true;\n                 true\n             }\n-            Some(\"n\") | Some(\"no\") | Some(\"off\") => {\n+            Some(\"n\") | Some(\"no\") | Some(\"off\") | Some(\"false\") => {\n                 *slot = false;\n                 true\n             }\n@@ -449,11 +449,11 @@ mod parse {\n     /// other factors, such as other options, or target options.)\n     pub(crate) fn parse_opt_bool(slot: &mut Option<bool>, v: Option<&str>) -> bool {\n         match v {\n-            Some(\"y\") | Some(\"yes\") | Some(\"on\") | None => {\n+            Some(\"y\") | Some(\"yes\") | Some(\"on\") | Some(\"true\") | None => {\n                 *slot = Some(true);\n                 true\n             }\n-            Some(\"n\") | Some(\"no\") | Some(\"off\") => {\n+            Some(\"n\") | Some(\"no\") | Some(\"off\") | Some(\"false\") => {\n                 *slot = Some(false);\n                 true\n             }"}, {"sha": "9394868c08db51995ea1bde2472fec0f0673c554", "filename": "tests/codegen/issue-75659.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a6fda3ee7fb24c9ccf1544ec719e8db01f77f36b/tests%2Fcodegen%2Fissue-75659.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a6fda3ee7fb24c9ccf1544ec719e8db01f77f36b/tests%2Fcodegen%2Fissue-75659.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcodegen%2Fissue-75659.rs?ref=a6fda3ee7fb24c9ccf1544ec719e8db01f77f36b", "patch": "@@ -1,7 +1,7 @@\n // This test checks that the call to memchr/slice_contains is optimized away\n // when searching in small slices.\n \n-// compile-flags: -O -Zinline-mir=no\n+// compile-flags: -O -Zinline-mir=false\n // only-x86_64\n \n #![crate_type = \"lib\"]"}, {"sha": "947099fdd13e7825600fdf2e024bbacbc2ae930f", "filename": "tests/ui/lint/reasons-forbidden.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a6fda3ee7fb24c9ccf1544ec719e8db01f77f36b/tests%2Fui%2Flint%2Freasons-forbidden.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a6fda3ee7fb24c9ccf1544ec719e8db01f77f36b/tests%2Fui%2Flint%2Freasons-forbidden.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Flint%2Freasons-forbidden.rs?ref=a6fda3ee7fb24c9ccf1544ec719e8db01f77f36b", "patch": "@@ -8,7 +8,7 @@\n //\n // The test is much cleaner if we deduplicate, though.\n \n-// compile-flags: -Z deduplicate-diagnostics=yes\n+// compile-flags: -Z deduplicate-diagnostics=true\n \n #![forbid(\n     unsafe_code,"}, {"sha": "0e487a700b802ee74aa45025bd6ecf12a86ac41e", "filename": "tests/ui/numbers-arithmetic/next-power-of-two-overflow-debug.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a6fda3ee7fb24c9ccf1544ec719e8db01f77f36b/tests%2Fui%2Fnumbers-arithmetic%2Fnext-power-of-two-overflow-debug.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a6fda3ee7fb24c9ccf1544ec719e8db01f77f36b/tests%2Fui%2Fnumbers-arithmetic%2Fnext-power-of-two-overflow-debug.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fnumbers-arithmetic%2Fnext-power-of-two-overflow-debug.rs?ref=a6fda3ee7fb24c9ccf1544ec719e8db01f77f36b", "patch": "@@ -1,5 +1,5 @@\n // run-pass\n-// compile-flags: -C debug_assertions=yes\n+// compile-flags: -C debug_assertions=true\n // needs-unwind\n // ignore-emscripten dies with an LLVM error\n "}, {"sha": "a8814ce2852865b2a8f4fb21d519bcb4f4a53e75", "filename": "tests/ui/rfc-2091-track-caller/call-chain.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a6fda3ee7fb24c9ccf1544ec719e8db01f77f36b/tests%2Fui%2Frfc-2091-track-caller%2Fcall-chain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a6fda3ee7fb24c9ccf1544ec719e8db01f77f36b/tests%2Fui%2Frfc-2091-track-caller%2Fcall-chain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Frfc-2091-track-caller%2Fcall-chain.rs?ref=a6fda3ee7fb24c9ccf1544ec719e8db01f77f36b", "patch": "@@ -1,6 +1,6 @@\n // run-pass\n // revisions: default mir-opt\n-//[default] compile-flags: -Zinline-mir=no\n+//[default] compile-flags: -Zinline-mir=false\n //[mir-opt] compile-flags: -Zmir-opt-level=4\n \n use std::panic::Location;"}]}