{"sha": "c79d8844501e7fe92bcabbf2da2024b35d1682f7", "node_id": "MDY6Q29tbWl0NzI0NzEyOmM3OWQ4ODQ0NTAxZTdmZTkyYmNhYmJmMmRhMjAyNGIzNWQxNjgyZjc=", "commit": {"author": {"name": "llogiq", "email": "bogusandre@gmail.com", "date": "2015-09-07T09:46:04Z"}, "committer": {"name": "llogiq", "email": "bogusandre@gmail.com", "date": "2015-09-07T09:46:04Z"}, "message": "replace if let by equality check", "tree": {"sha": "63825a726aafb57b78d282593c669c60ab3c7002", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/63825a726aafb57b78d282593c669c60ab3c7002"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c79d8844501e7fe92bcabbf2da2024b35d1682f7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c79d8844501e7fe92bcabbf2da2024b35d1682f7", "html_url": "https://github.com/rust-lang/rust/commit/c79d8844501e7fe92bcabbf2da2024b35d1682f7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c79d8844501e7fe92bcabbf2da2024b35d1682f7/comments", "author": {"login": "llogiq", "id": 4200835, "node_id": "MDQ6VXNlcjQyMDA4MzU=", "avatar_url": "https://avatars.githubusercontent.com/u/4200835?v=4", "gravatar_id": "", "url": "https://api.github.com/users/llogiq", "html_url": "https://github.com/llogiq", "followers_url": "https://api.github.com/users/llogiq/followers", "following_url": "https://api.github.com/users/llogiq/following{/other_user}", "gists_url": "https://api.github.com/users/llogiq/gists{/gist_id}", "starred_url": "https://api.github.com/users/llogiq/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/llogiq/subscriptions", "organizations_url": "https://api.github.com/users/llogiq/orgs", "repos_url": "https://api.github.com/users/llogiq/repos", "events_url": "https://api.github.com/users/llogiq/events{/privacy}", "received_events_url": "https://api.github.com/users/llogiq/received_events", "type": "User", "site_admin": false}, "committer": {"login": "llogiq", "id": 4200835, "node_id": "MDQ6VXNlcjQyMDA4MzU=", "avatar_url": "https://avatars.githubusercontent.com/u/4200835?v=4", "gravatar_id": "", "url": "https://api.github.com/users/llogiq", "html_url": "https://github.com/llogiq", "followers_url": "https://api.github.com/users/llogiq/followers", "following_url": "https://api.github.com/users/llogiq/following{/other_user}", "gists_url": "https://api.github.com/users/llogiq/gists{/gist_id}", "starred_url": "https://api.github.com/users/llogiq/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/llogiq/subscriptions", "organizations_url": "https://api.github.com/users/llogiq/orgs", "repos_url": "https://api.github.com/users/llogiq/repos", "events_url": "https://api.github.com/users/llogiq/events{/privacy}", "received_events_url": "https://api.github.com/users/llogiq/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "92b04cd75db905dcb21ffabf10c005560c4e0f80", "url": "https://api.github.com/repos/rust-lang/rust/commits/92b04cd75db905dcb21ffabf10c005560c4e0f80", "html_url": "https://github.com/rust-lang/rust/commit/92b04cd75db905dcb21ffabf10c005560c4e0f80"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "b9132399652b4944323bb64f2e68d533e7fe0266", "filename": "src/methods.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c79d8844501e7fe92bcabbf2da2024b35d1682f7/src%2Fmethods.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c79d8844501e7fe92bcabbf2da2024b35d1682f7/src%2Fmethods.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fmethods.rs?ref=c79d8844501e7fe92bcabbf2da2024b35d1682f7", "patch": "@@ -96,7 +96,7 @@ impl LintPass for MethodsPass {\n                     for &(prefix, self_kinds) in &CONVENTIONS {\n                         if name.as_str().starts_with(prefix) &&\n                                 !self_kinds.iter().any(|k| k.matches(&sig.explicit_self.node, is_copy)) {\n-                            let lint = if let Visibility::Public = item.vis {\n+                            let lint = if item.VI's == Visibility::Public {\n                                 WRONG_PUB_SELF_CONVENTION\n                             } else {\n                                 WRONG_SELF_CONVENTION"}]}