{"sha": "e59f78fb45f7db129f1b1a016da65a5b270220d9", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU1OWY3OGZiNDVmN2RiMTI5ZjFiMWEwMTZkYTY1YTViMjcwMjIwZDk=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2018-04-21T11:26:09Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2018-04-21T11:26:09Z"}, "message": "Auto merge of #50076 - spastorino:fix_exhaust_iter_in_debug, r=pnkfelix\n\nFix Iter exhaustion in prove_predicates when debug is on\n\nFixes the issue noted in this comment https://github.com/rust-lang/rust/pull/49885/files#r182560268\n\nr? @pnkfelix\n/cc @nikomatsakis", "tree": {"sha": "f5725bdf98255a070c6a0ab9a4bb113e2f9ba3c1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f5725bdf98255a070c6a0ab9a4bb113e2f9ba3c1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e59f78fb45f7db129f1b1a016da65a5b270220d9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e59f78fb45f7db129f1b1a016da65a5b270220d9", "html_url": "https://github.com/rust-lang/rust/commit/e59f78fb45f7db129f1b1a016da65a5b270220d9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e59f78fb45f7db129f1b1a016da65a5b270220d9/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9af69fe2320bde44b96d85d316a95083fb65c4b8", "url": "https://api.github.com/repos/rust-lang/rust/commits/9af69fe2320bde44b96d85d316a95083fb65c4b8", "html_url": "https://github.com/rust-lang/rust/commit/9af69fe2320bde44b96d85d316a95083fb65c4b8"}, {"sha": "55054eede602a14dd240fee34ae661fd5b9dd485", "url": "https://api.github.com/repos/rust-lang/rust/commits/55054eede602a14dd240fee34ae661fd5b9dd485", "html_url": "https://github.com/rust-lang/rust/commit/55054eede602a14dd240fee34ae661fd5b9dd485"}], "stats": {"total": 28, "additions": 14, "deletions": 14}, "files": [{"sha": "ec7ee466008a514684ee158e89b78f684f9e6888", "filename": "src/librustc_mir/borrow_check/nll/type_check/mod.rs", "status": "modified", "additions": 14, "deletions": 14, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/e59f78fb45f7db129f1b1a016da65a5b270220d9/src%2Flibrustc_mir%2Fborrow_check%2Fnll%2Ftype_check%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e59f78fb45f7db129f1b1a016da65a5b270220d9/src%2Flibrustc_mir%2Fborrow_check%2Fnll%2Ftype_check%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Fnll%2Ftype_check%2Fmod.rs?ref=e59f78fb45f7db129f1b1a016da65a5b270220d9", "patch": "@@ -275,7 +275,7 @@ impl<'a, 'b, 'gcx, 'tcx> TypeVerifier<'a, 'b, 'gcx, 'tcx> {\n                         tcx.predicates_of(def_id).instantiate(tcx, substs);\n                     let predicates =\n                         type_checker.normalize(&instantiated_predicates.predicates, location);\n-                    type_checker.prove_predicates(predicates.iter().cloned(), location);\n+                    type_checker.prove_predicates(predicates, location);\n                 }\n \n                 value.ty\n@@ -1516,34 +1516,34 @@ impl<'a, 'gcx, 'tcx> TypeChecker<'a, 'gcx, 'tcx> {\n \n         let predicates = self.normalize(&instantiated_predicates.predicates, location);\n         debug!(\"prove_aggregate_predicates: predicates={:?}\", predicates);\n-        self.prove_predicates(predicates.iter().cloned(), location);\n+        self.prove_predicates(predicates, location);\n     }\n \n     fn prove_trait_ref(&mut self, trait_ref: ty::TraitRef<'tcx>, location: Location) {\n         self.prove_predicates(\n-            [ty::Predicate::Trait(\n+            Some(ty::Predicate::Trait(\n                 trait_ref.to_poly_trait_ref().to_poly_trait_predicate(),\n-            )].iter()\n-                .cloned(),\n+            )),\n             location,\n         );\n     }\n \n-    fn prove_predicates(\n-        &mut self,\n-        predicates: impl IntoIterator<Item = ty::Predicate<'tcx>>,\n-        location: Location,\n-    ) {\n-        let mut predicates_iter = predicates.into_iter();\n+    fn prove_predicates<T>(&mut self, predicates: T, location: Location)\n+    where\n+        T: IntoIterator<Item = ty::Predicate<'tcx>>,\n+        T::IntoIter: Clone,\n+    {\n+        let predicates = predicates.into_iter();\n \n         debug!(\n             \"prove_predicates(predicates={:?}, location={:?})\",\n-            predicates_iter.by_ref().collect::<Vec<_>>(),\n-            location\n+            predicates.clone().collect::<Vec<_>>(),\n+            location,\n         );\n         self.fully_perform_op(location.at_self(), |this| {\n             let cause = this.misc(this.last_span);\n-            let obligations = predicates_iter\n+            let obligations = predicates\n+                .into_iter()\n                 .map(|p| traits::Obligation::new(cause.clone(), this.param_env, p))\n                 .collect();\n             Ok(InferOk {"}]}