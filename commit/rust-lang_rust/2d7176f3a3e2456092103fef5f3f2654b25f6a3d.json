{"sha": "2d7176f3a3e2456092103fef5f3f2654b25f6a3d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJkNzE3NmYzYTNlMjQ1NjA5MjEwM2ZlZjVmM2YyNjU0YjI1ZjZhM2Q=", "commit": {"author": {"name": "Marshall Bowers", "email": "elliott.codes@gmail.com", "date": "2018-09-15T19:43:44Z"}, "committer": {"name": "Marshall Bowers", "email": "elliott.codes@gmail.com", "date": "2018-09-15T19:43:44Z"}, "message": "Fix missing struct name", "tree": {"sha": "db48c0ad456fc07ea176f080aa7507ef7da44510", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/db48c0ad456fc07ea176f080aa7507ef7da44510"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2d7176f3a3e2456092103fef5f3f2654b25f6a3d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2d7176f3a3e2456092103fef5f3f2654b25f6a3d", "html_url": "https://github.com/rust-lang/rust/commit/2d7176f3a3e2456092103fef5f3f2654b25f6a3d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2d7176f3a3e2456092103fef5f3f2654b25f6a3d/comments", "author": {"login": "maxdeviant", "id": 1486634, "node_id": "MDQ6VXNlcjE0ODY2MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1486634?v=4", "gravatar_id": "", "url": "https://api.github.com/users/maxdeviant", "html_url": "https://github.com/maxdeviant", "followers_url": "https://api.github.com/users/maxdeviant/followers", "following_url": "https://api.github.com/users/maxdeviant/following{/other_user}", "gists_url": "https://api.github.com/users/maxdeviant/gists{/gist_id}", "starred_url": "https://api.github.com/users/maxdeviant/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/maxdeviant/subscriptions", "organizations_url": "https://api.github.com/users/maxdeviant/orgs", "repos_url": "https://api.github.com/users/maxdeviant/repos", "events_url": "https://api.github.com/users/maxdeviant/events{/privacy}", "received_events_url": "https://api.github.com/users/maxdeviant/received_events", "type": "User", "site_admin": false}, "committer": {"login": "maxdeviant", "id": 1486634, "node_id": "MDQ6VXNlcjE0ODY2MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1486634?v=4", "gravatar_id": "", "url": "https://api.github.com/users/maxdeviant", "html_url": "https://github.com/maxdeviant", "followers_url": "https://api.github.com/users/maxdeviant/followers", "following_url": "https://api.github.com/users/maxdeviant/following{/other_user}", "gists_url": "https://api.github.com/users/maxdeviant/gists{/gist_id}", "starred_url": "https://api.github.com/users/maxdeviant/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/maxdeviant/subscriptions", "organizations_url": "https://api.github.com/users/maxdeviant/orgs", "repos_url": "https://api.github.com/users/maxdeviant/repos", "events_url": "https://api.github.com/users/maxdeviant/events{/privacy}", "received_events_url": "https://api.github.com/users/maxdeviant/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fa1868d9da16f4adc2c4683690c3715786c60821", "url": "https://api.github.com/repos/rust-lang/rust/commits/fa1868d9da16f4adc2c4683690c3715786c60821", "html_url": "https://github.com/rust-lang/rust/commit/fa1868d9da16f4adc2c4683690c3715786c60821"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "0a7bd3d97022dbc241b4d023be2a1b66cff00bee", "filename": "src/librustc_driver/test.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2d7176f3a3e2456092103fef5f3f2654b25f6a3d/src%2Flibrustc_driver%2Ftest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2d7176f3a3e2456092103fef5f3f2654b25f6a3d/src%2Flibrustc_driver%2Ftest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_driver%2Ftest.rs?ref=2d7176f3a3e2456092103fef5f3f2654b25f6a3d", "patch": "@@ -198,7 +198,7 @@ impl<'a, 'gcx, 'tcx> Env<'a, 'gcx, 'tcx> {\n \n     pub fn create_region_hierarchy(&mut self, rh: &RH,\n                                    parent: (region::Scope, region::ScopeDepth)) {\n-        let me = region { id: rh.id, data: region::ScopeData::Node };\n+        let me = region::Scope { id: rh.id, data: region::ScopeData::Node };\n         self.region_scope_tree.record_scope_parent(me, Some(parent));\n         for child_rh in rh.sub {\n             self.create_region_hierarchy(child_rh, (me, parent.1 + 1));"}]}