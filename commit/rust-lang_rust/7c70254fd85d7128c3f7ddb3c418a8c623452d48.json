{"sha": "7c70254fd85d7128c3f7ddb3c418a8c623452d48", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdjNzAyNTRmZDg1ZDcxMjhjM2Y3ZGRiM2M0MThhOGM2MjM0NTJkNDg=", "commit": {"author": {"name": "Nick Cameron", "email": "nrc@ncameron.org", "date": "2016-06-22T22:24:19Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2016-06-22T22:24:19Z"}, "message": "Merge pull request #1075 from johannhof/diff-exit\n\nReturn failure exit code on found diffs (fix #906)", "tree": {"sha": "c193f1b7648b271c30ea4db5df1a9836fdf44190", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c193f1b7648b271c30ea4db5df1a9836fdf44190"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7c70254fd85d7128c3f7ddb3c418a8c623452d48", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7c70254fd85d7128c3f7ddb3c418a8c623452d48", "html_url": "https://github.com/rust-lang/rust/commit/7c70254fd85d7128c3f7ddb3c418a8c623452d48", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7c70254fd85d7128c3f7ddb3c418a8c623452d48/comments", "author": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "48a37713f9abf72eb64311fa6ec7211164346196", "url": "https://api.github.com/repos/rust-lang/rust/commits/48a37713f9abf72eb64311fa6ec7211164346196", "html_url": "https://github.com/rust-lang/rust/commit/48a37713f9abf72eb64311fa6ec7211164346196"}, {"sha": "8260d277c88f18c708ed9ebb319ae59f6c0c109f", "url": "https://api.github.com/repos/rust-lang/rust/commits/8260d277c88f18c708ed9ebb319ae59f6c0c109f", "html_url": "https://github.com/rust-lang/rust/commit/8260d277c88f18c708ed9ebb319ae59f6c0c109f"}], "stats": {"total": 46, "additions": 34, "deletions": 12}, "files": [{"sha": "bf78bb39fe4cdc41a950159eeb174e58bc8c078b", "filename": "src/bin/rustfmt.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/7c70254fd85d7128c3f7ddb3c418a8c623452d48/src%2Fbin%2Frustfmt.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7c70254fd85d7128c3f7ddb3c418a8c623452d48/src%2Fbin%2Frustfmt.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbin%2Frustfmt.rs?ref=7c70254fd85d7128c3f7ddb3c418a8c623452d48", "patch": "@@ -269,6 +269,9 @@ fn main() {\n                 2\n             } else if summary.has_formatting_errors() {\n                 3\n+            } else if summary.has_diff {\n+                // should only happen in diff mode\n+                4\n             } else {\n                 assert!(summary.has_no_errors());\n                 0"}, {"sha": "1fca0d5b0125214961b4ae8ba80fb6691c5056b3", "filename": "src/filemap.rs", "status": "modified", "additions": 7, "deletions": 4, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/7c70254fd85d7128c3f7ddb3c418a8c623452d48/src%2Ffilemap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7c70254fd85d7128c3f7ddb3c418a8c623452d48/src%2Ffilemap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ffilemap.rs?ref=7c70254fd85d7128c3f7ddb3c418a8c623452d48", "patch": "@@ -82,7 +82,7 @@ pub fn write_file<T>(text: &StringBuffer,\n                      filename: &str,\n                      out: &mut T,\n                      config: &Config)\n-                     -> Result<Option<String>, io::Error>\n+                     -> Result<bool, io::Error>\n     where T: Write\n {\n \n@@ -146,8 +146,10 @@ pub fn write_file<T>(text: &StringBuffer,\n         WriteMode::Diff => {\n             println!(\"Diff of {}:\\n\", filename);\n             if let Ok((ori, fmt)) = source_and_formatted_text(text, filename, config) {\n-                print_diff(make_diff(&ori, &fmt, 3),\n-                           |line_num| format!(\"\\nDiff at line {}:\", line_num));\n+                let mismatch = make_diff(&ori, &fmt, 3);\n+                let has_diff = !mismatch.is_empty();\n+                print_diff(mismatch, |line_num| format!(\"\\nDiff at line {}:\", line_num));\n+                return Ok(has_diff);\n             }\n         }\n         WriteMode::Checkstyle => {\n@@ -156,5 +158,6 @@ pub fn write_file<T>(text: &StringBuffer,\n         }\n     }\n \n-    Ok(None)\n+    // when we are not in diff mode, don't indicate differing files\n+    Ok(false)\n }"}, {"sha": "17af40d9b3723936bd4065aae0258b7cd841e19c", "filename": "src/lib.rs", "status": "modified", "additions": 13, "deletions": 7, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/7c70254fd85d7128c3f7ddb3c418a8c623452d48/src%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7c70254fd85d7128c3f7ddb3c418a8c623452d48/src%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flib.rs?ref=7c70254fd85d7128c3f7ddb3c418a8c623452d48", "patch": "@@ -286,10 +286,12 @@ fn format_ast<F>(krate: &ast::Crate,\n                  main_file: &Path,\n                  config: &Config,\n                  mut after_file: F)\n-                 -> Result<FileMap, io::Error>\n-    where F: FnMut(&str, &mut StringBuffer) -> Result<(), io::Error>\n+                 -> Result<(FileMap, bool), io::Error>\n+    where F: FnMut(&str, &mut StringBuffer) -> Result<bool, io::Error>\n {\n     let mut result = FileMap::new();\n+    // diff mode: check if any files are differing\n+    let mut has_diff = false;\n \n     // We always skip children for the \"Plain\" write mode, since there is\n     // nothing to distinguish the nested module contents.\n@@ -305,12 +307,12 @@ fn format_ast<F>(krate: &ast::Crate,\n         let mut visitor = FmtVisitor::from_codemap(parse_session, config);\n         visitor.format_separate_mod(module);\n \n-        try!(after_file(path, &mut visitor.buffer));\n+        has_diff |= try!(after_file(path, &mut visitor.buffer));\n \n         result.push((path.to_owned(), visitor.buffer));\n     }\n \n-    Ok(result)\n+    Ok((result, has_diff))\n }\n \n // Formatting done on a char by char or line by line basis.\n@@ -458,15 +460,19 @@ pub fn format_input<T: Write>(input: Input,\n         format_lines(file, file_name, config, &mut report);\n \n         if let Some(ref mut out) = out {\n-            try!(filemap::write_file(file, file_name, out, config));\n+            return filemap::write_file(file, file_name, out, config);\n         }\n-        Ok(())\n+        Ok(false)\n     }) {\n-        Ok(file_map) => {\n+        Ok((file_map, has_diff)) => {\n             if report.has_warnings() {\n                 summary.add_formatting_error();\n             }\n \n+            if has_diff {\n+                summary.add_diff();\n+            }\n+\n             Ok((summary, file_map, report))\n         }\n         Err(e) => Err((e, summary)),"}, {"sha": "5846afde7fc269f77bd60d2d9e2e3afa4d016c33", "filename": "src/summary.rs", "status": "modified", "additions": 11, "deletions": 1, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/7c70254fd85d7128c3f7ddb3c418a8c623452d48/src%2Fsummary.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7c70254fd85d7128c3f7ddb3c418a8c623452d48/src%2Fsummary.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fsummary.rs?ref=7c70254fd85d7128c3f7ddb3c418a8c623452d48", "patch": "@@ -9,6 +9,9 @@ pub struct Summary {\n \n     // Code is valid, but it is impossible to format it properly.\n     has_formatting_errors: bool,\n+\n+    // Formatted code differs from existing code (write-mode diff only).\n+    pub has_diff: bool,\n }\n \n impl Summary {\n@@ -17,6 +20,7 @@ impl Summary {\n             has_operational_errors: false,\n             has_parsing_errors: false,\n             has_formatting_errors: false,\n+            has_diff: false,\n         }\n     }\n \n@@ -44,13 +48,19 @@ impl Summary {\n         self.has_formatting_errors = true;\n     }\n \n+    pub fn add_diff(&mut self) {\n+        self.has_diff = true;\n+    }\n+\n     pub fn has_no_errors(&self) -> bool {\n-        !(self.has_operational_errors || self.has_parsing_errors || self.has_formatting_errors)\n+        !(self.has_operational_errors || self.has_parsing_errors || self.has_formatting_errors ||\n+          self.has_diff)\n     }\n \n     pub fn add(&mut self, other: Summary) {\n         self.has_operational_errors |= other.has_operational_errors;\n         self.has_formatting_errors |= other.has_formatting_errors;\n         self.has_parsing_errors |= other.has_parsing_errors;\n+        self.has_diff |= other.has_diff;\n     }\n }"}]}