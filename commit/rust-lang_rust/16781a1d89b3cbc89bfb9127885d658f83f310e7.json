{"sha": "16781a1d89b3cbc89bfb9127885d658f83f310e7", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE2NzgxYTFkODliM2NiYzg5YmZiOTEyNzg4NWQ2NThmODNmMzEwZTc=", "commit": {"author": {"name": "Niklas Fiekas", "email": "niklas.fiekas@backscattering.de", "date": "2017-10-08T10:43:23Z"}, "committer": {"name": "Niklas Fiekas", "email": "niklas.fiekas@backscattering.de", "date": "2017-10-08T12:15:37Z"}, "message": "Add tests for range_plus_one and range_minus_one", "tree": {"sha": "c605615b0c2502a5a11448238a8c98d027aa0f0b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c605615b0c2502a5a11448238a8c98d027aa0f0b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/16781a1d89b3cbc89bfb9127885d658f83f310e7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/16781a1d89b3cbc89bfb9127885d658f83f310e7", "html_url": "https://github.com/rust-lang/rust/commit/16781a1d89b3cbc89bfb9127885d658f83f310e7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/16781a1d89b3cbc89bfb9127885d658f83f310e7/comments", "author": {"login": "niklasf", "id": 402777, "node_id": "MDQ6VXNlcjQwMjc3Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/402777?v=4", "gravatar_id": "", "url": "https://api.github.com/users/niklasf", "html_url": "https://github.com/niklasf", "followers_url": "https://api.github.com/users/niklasf/followers", "following_url": "https://api.github.com/users/niklasf/following{/other_user}", "gists_url": "https://api.github.com/users/niklasf/gists{/gist_id}", "starred_url": "https://api.github.com/users/niklasf/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/niklasf/subscriptions", "organizations_url": "https://api.github.com/users/niklasf/orgs", "repos_url": "https://api.github.com/users/niklasf/repos", "events_url": "https://api.github.com/users/niklasf/events{/privacy}", "received_events_url": "https://api.github.com/users/niklasf/received_events", "type": "User", "site_admin": false}, "committer": {"login": "niklasf", "id": 402777, "node_id": "MDQ6VXNlcjQwMjc3Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/402777?v=4", "gravatar_id": "", "url": "https://api.github.com/users/niklasf", "html_url": "https://github.com/niklasf", "followers_url": "https://api.github.com/users/niklasf/followers", "following_url": "https://api.github.com/users/niklasf/following{/other_user}", "gists_url": "https://api.github.com/users/niklasf/gists{/gist_id}", "starred_url": "https://api.github.com/users/niklasf/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/niklasf/subscriptions", "organizations_url": "https://api.github.com/users/niklasf/orgs", "repos_url": "https://api.github.com/users/niklasf/repos", "events_url": "https://api.github.com/users/niklasf/events{/privacy}", "received_events_url": "https://api.github.com/users/niklasf/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e9be7530c661136019977acf2eb6682cc9b4c289", "url": "https://api.github.com/repos/rust-lang/rust/commits/e9be7530c661136019977acf2eb6682cc9b4c289", "html_url": "https://github.com/rust-lang/rust/commit/e9be7530c661136019977acf2eb6682cc9b4c289"}], "stats": {"total": 101, "additions": 101, "deletions": 0}, "files": [{"sha": "dce81634876fb195cb543b1fd757aff92c953b8a", "filename": "tests/ui/range_plus_minus_one.rs", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/16781a1d89b3cbc89bfb9127885d658f83f310e7/tests%2Fui%2Frange_plus_minus_one.rs", "raw_url": "https://github.com/rust-lang/rust/raw/16781a1d89b3cbc89bfb9127885d658f83f310e7/tests%2Fui%2Frange_plus_minus_one.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Frange_plus_minus_one.rs?ref=16781a1d89b3cbc89bfb9127885d658f83f310e7", "patch": "@@ -0,0 +1,34 @@\n+#![feature(inclusive_range_syntax)]\n+\n+fn f() -> usize {\n+    42\n+}\n+\n+#[warn(range_plus_one)]\n+fn main() {\n+    for _ in 0..2 { }\n+    for _ in 0..=2 { }\n+\n+    for _ in 0..3+1 { }\n+    for _ in 0..=3+1 { }\n+\n+    for _ in 0..1+5 { }\n+    for _ in 0..=1+5 { }\n+\n+    for _ in 1..1+1 { }\n+    for _ in 1..=1+1 { }\n+\n+    for _ in 0..13+13 { }\n+    for _ in 0..=13-7 { }\n+\n+    for _ in 0..(1+f()) { }\n+    for _ in 0..=(1+f()) { }\n+\n+    let _ = ..11-1;\n+    let _ = ..=11-1;\n+    let _ = ..=(11-1);\n+    let _ = (f()+1)..(f()+1);\n+\n+    let mut vec: Vec<()> = std::vec::Vec::new();\n+    vec.drain(..);\n+}"}, {"sha": "a2a3ae6077f34193453f82892bfcea9a4c60a08e", "filename": "tests/ui/range_plus_minus_one.stderr", "status": "added", "additions": 67, "deletions": 0, "changes": 67, "blob_url": "https://github.com/rust-lang/rust/blob/16781a1d89b3cbc89bfb9127885d658f83f310e7/tests%2Fui%2Frange_plus_minus_one.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/16781a1d89b3cbc89bfb9127885d658f83f310e7/tests%2Fui%2Frange_plus_minus_one.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Frange_plus_minus_one.stderr?ref=16781a1d89b3cbc89bfb9127885d658f83f310e7", "patch": "@@ -0,0 +1,67 @@\n+error: an inclusive range would be more readable\n+  --> $DIR/range_plus_minus_one.rs:12:14\n+   |\n+12 |     for _ in 0..3+1 { }\n+   |              ------\n+   |              |\n+   |              help: use: `0..=3`\n+   |              in this macro invocation\n+   |\n+   = note: `-D range-plus-one` implied by `-D warnings`\n+\n+error: an inclusive range would be more readable\n+  --> $DIR/range_plus_minus_one.rs:15:14\n+   |\n+15 |     for _ in 0..1+5 { }\n+   |              ------\n+   |              |\n+   |              help: use: `0..=5`\n+   |              in this macro invocation\n+\n+error: an inclusive range would be more readable\n+  --> $DIR/range_plus_minus_one.rs:18:14\n+   |\n+18 |     for _ in 1..1+1 { }\n+   |              ------\n+   |              |\n+   |              help: use: `1..=1`\n+   |              in this macro invocation\n+\n+error: an inclusive range would be more readable\n+  --> $DIR/range_plus_minus_one.rs:24:14\n+   |\n+24 |     for _ in 0..(1+f()) { }\n+   |              ----------\n+   |              |\n+   |              help: use: `0..=f()`\n+   |              in this macro invocation\n+\n+error: an exclusive range would be more readable\n+  --> $DIR/range_plus_minus_one.rs:28:13\n+   |\n+28 |     let _ = ..=11-1;\n+   |             -------\n+   |             |\n+   |             help: use: `..11`\n+   |             in this macro invocation\n+   |\n+   = note: `-D range-minus-one` implied by `-D warnings`\n+\n+error: an exclusive range would be more readable\n+  --> $DIR/range_plus_minus_one.rs:29:13\n+   |\n+29 |     let _ = ..=(11-1);\n+   |             ---------\n+   |             |\n+   |             help: use: `..11`\n+   |             in this macro invocation\n+\n+error: an inclusive range would be more readable\n+  --> $DIR/range_plus_minus_one.rs:30:13\n+   |\n+30 |     let _ = (f()+1)..(f()+1);\n+   |             ----------------\n+   |             |\n+   |             help: use: `(f()+1)..=f()`\n+   |             in this macro invocation\n+"}]}