{"sha": "a02b2e36c0f1b601519ec6bc71b2d8ff621b4625", "node_id": "MDY6Q29tbWl0NzI0NzEyOmEwMmIyZTM2YzBmMWI2MDE1MTllYzZiYzcxYjJkOGZmNjIxYjQ2MjU=", "commit": {"author": {"name": "Nicholas Nethercote", "email": "nnethercote@mozilla.com", "date": "2019-06-01T22:27:36Z"}, "committer": {"name": "Nicholas Nethercote", "email": "nnethercote@mozilla.com", "date": "2019-06-04T21:43:14Z"}, "message": "Add `HygieneData::marks`.", "tree": {"sha": "bd4b2c8bbce0b20b3482fa64ddf7ac4d5eaf3032", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bd4b2c8bbce0b20b3482fa64ddf7ac4d5eaf3032"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a02b2e36c0f1b601519ec6bc71b2d8ff621b4625", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a02b2e36c0f1b601519ec6bc71b2d8ff621b4625", "html_url": "https://github.com/rust-lang/rust/commit/a02b2e36c0f1b601519ec6bc71b2d8ff621b4625", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a02b2e36c0f1b601519ec6bc71b2d8ff621b4625/comments", "author": {"login": "nnethercote", "id": 1940286, "node_id": "MDQ6VXNlcjE5NDAyODY=", "avatar_url": "https://avatars.githubusercontent.com/u/1940286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nnethercote", "html_url": "https://github.com/nnethercote", "followers_url": "https://api.github.com/users/nnethercote/followers", "following_url": "https://api.github.com/users/nnethercote/following{/other_user}", "gists_url": "https://api.github.com/users/nnethercote/gists{/gist_id}", "starred_url": "https://api.github.com/users/nnethercote/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nnethercote/subscriptions", "organizations_url": "https://api.github.com/users/nnethercote/orgs", "repos_url": "https://api.github.com/users/nnethercote/repos", "events_url": "https://api.github.com/users/nnethercote/events{/privacy}", "received_events_url": "https://api.github.com/users/nnethercote/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nnethercote", "id": 1940286, "node_id": "MDQ6VXNlcjE5NDAyODY=", "avatar_url": "https://avatars.githubusercontent.com/u/1940286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nnethercote", "html_url": "https://github.com/nnethercote", "followers_url": "https://api.github.com/users/nnethercote/followers", "following_url": "https://api.github.com/users/nnethercote/following{/other_user}", "gists_url": "https://api.github.com/users/nnethercote/gists{/gist_id}", "starred_url": "https://api.github.com/users/nnethercote/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nnethercote/subscriptions", "organizations_url": "https://api.github.com/users/nnethercote/orgs", "repos_url": "https://api.github.com/users/nnethercote/repos", "events_url": "https://api.github.com/users/nnethercote/events{/privacy}", "received_events_url": "https://api.github.com/users/nnethercote/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "88fd7a8eb7a0d0ada3e33060969ccd91cba0132b", "url": "https://api.github.com/repos/rust-lang/rust/commits/88fd7a8eb7a0d0ada3e33060969ccd91cba0132b", "html_url": "https://github.com/rust-lang/rust/commit/88fd7a8eb7a0d0ada3e33060969ccd91cba0132b"}], "stats": {"total": 28, "additions": 15, "deletions": 13}, "files": [{"sha": "b79cd707e01bf610c165bd33435643bd2dc4a6e4", "filename": "src/libsyntax_pos/hygiene.rs", "status": "modified", "additions": 15, "deletions": 13, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/a02b2e36c0f1b601519ec6bc71b2d8ff621b4625/src%2Flibsyntax_pos%2Fhygiene.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a02b2e36c0f1b601519ec6bc71b2d8ff621b4625/src%2Flibsyntax_pos%2Fhygiene.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax_pos%2Fhygiene.rs?ref=a02b2e36c0f1b601519ec6bc71b2d8ff621b4625", "patch": "@@ -244,6 +244,19 @@ impl HygieneData {\n         outer_mark\n     }\n \n+    fn marks(&self, mut ctxt: SyntaxContext) -> Vec<(Mark, Transparency)> {\n+        let mut marks = Vec::new();\n+        while ctxt != SyntaxContext::empty() {\n+            let outer_mark = self.outer(ctxt);\n+            let transparency = self.transparency(ctxt);\n+            let prev_ctxt = self.prev_ctxt(ctxt);\n+            marks.push((outer_mark, transparency));\n+            ctxt = prev_ctxt;\n+        }\n+        marks.reverse();\n+        marks\n+    }\n+\n     fn adjust(&self, ctxt: &mut SyntaxContext, expansion: Mark) -> Option<Mark> {\n         let mut scope = None;\n         while !self.is_descendant_of(expansion, self.outer(*ctxt)) {\n@@ -423,19 +436,8 @@ impl SyntaxContext {\n         HygieneData::with(|data| data.remove_mark(self))\n     }\n \n-    pub fn marks(mut self) -> Vec<(Mark, Transparency)> {\n-        HygieneData::with(|data| {\n-            let mut marks = Vec::new();\n-            while self != SyntaxContext::empty() {\n-                let outer_mark = data.outer(self);\n-                let transparency = data.transparency(self);\n-                let prev_ctxt = data.prev_ctxt(self);\n-                marks.push((outer_mark, transparency));\n-                self = prev_ctxt;\n-            }\n-            marks.reverse();\n-            marks\n-        })\n+    pub fn marks(self) -> Vec<(Mark, Transparency)> {\n+        HygieneData::with(|data| data.marks(self))\n     }\n \n     /// Adjust this context for resolution in a scope created by the given expansion."}]}