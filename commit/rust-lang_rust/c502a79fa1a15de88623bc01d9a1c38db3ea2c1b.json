{"sha": "c502a79fa1a15de88623bc01d9a1c38db3ea2c1b", "node_id": "MDY6Q29tbWl0NzI0NzEyOmM1MDJhNzlmYTFhMTVkZTg4NjIzYmMwMWQ5YTFjMzhkYjNlYTJjMWI=", "commit": {"author": {"name": "Yuki Okushi", "email": "huyuumi.dev@gmail.com", "date": "2019-01-19T19:37:29Z"}, "committer": {"name": "Yuki Okushi", "email": "huyuumi.dev@gmail.com", "date": "2019-01-19T19:37:29Z"}, "message": "[WIP] Improve error behavior", "tree": {"sha": "8ce2af9b2639079bbd492a677bc87c2b00b5223d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8ce2af9b2639079bbd492a677bc87c2b00b5223d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c502a79fa1a15de88623bc01d9a1c38db3ea2c1b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c502a79fa1a15de88623bc01d9a1c38db3ea2c1b", "html_url": "https://github.com/rust-lang/rust/commit/c502a79fa1a15de88623bc01d9a1c38db3ea2c1b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c502a79fa1a15de88623bc01d9a1c38db3ea2c1b/comments", "author": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b721c1a885537de960733a54f86ba7a6f24a4857", "url": "https://api.github.com/repos/rust-lang/rust/commits/b721c1a885537de960733a54f86ba7a6f24a4857", "html_url": "https://github.com/rust-lang/rust/commit/b721c1a885537de960733a54f86ba7a6f24a4857"}], "stats": {"total": 14, "additions": 8, "deletions": 6}, "files": [{"sha": "fcaa35d1fca73456f88071c4f3d4baabeb9ad7f7", "filename": "src/libsyntax/parse/lexer/mod.rs", "status": "modified", "additions": 8, "deletions": 6, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/c502a79fa1a15de88623bc01d9a1c38db3ea2c1b/src%2Flibsyntax%2Fparse%2Flexer%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c502a79fa1a15de88623bc01d9a1c38db3ea2c1b/src%2Flibsyntax%2Fparse%2Flexer%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Flexer%2Fmod.rs?ref=c502a79fa1a15de88623bc01d9a1c38db3ea2c1b", "patch": "@@ -1408,9 +1408,10 @@ impl<'a> StringReader<'a> {\n                     // lifetimes shouldn't end with a single quote\n                     // if we find one, then this is an invalid character literal\n                     if self.ch_is('\\'') {\n-                        self.fatal_span_verbose(start_with_quote, self.next_pos,\n-                                String::from(\"character literal may only contain one codepoint\"))\n-                            .raise();\n+                        self.err_span_(start_with_quote, self.next_pos,\n+                                \"character literal may only contain one codepoint\");\n+                        self.bump();\n+                        return Ok(token::Literal(token::Err(Symbol::intern(\"??\")), None))\n \n                     }\n \n@@ -1445,7 +1446,7 @@ impl<'a> StringReader<'a> {\n                                     format!(\"\\\"{}\\\"\", &self.src[start..end]),\n                                     Applicability::MachineApplicable\n                                 ).emit();\n-                            return Ok(token::Literal(token::Char(Symbol::intern(\"??\")), None))\n+                            return Ok(token::Literal(token::Err(Symbol::intern(\"??\")), None))\n                         }\n                         if self.ch_is('\\n') || self.is_eof() || self.ch_is('/') {\n                             // Only attempt to infer single line string literals. If we encounter\n@@ -1455,8 +1456,9 @@ impl<'a> StringReader<'a> {\n                         }\n                     }\n \n-                    self.fatal_span_verbose(start_with_quote, pos,\n-                        String::from(\"character literal may only contain one codepoint\")).raise();\n+                    self.err_span_(start_with_quote, pos,\n+                        \"character literal may only contain one codepoint\");\n+                    self.bump();\n                 }\n \n                 let id = if valid {"}]}