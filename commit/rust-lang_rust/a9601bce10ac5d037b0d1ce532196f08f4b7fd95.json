{"sha": "a9601bce10ac5d037b0d1ce532196f08f4b7fd95", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE5NjAxYmNlMTBhYzVkMDM3YjBkMWNlNTMyMTk2ZjA4ZjRiN2ZkOTU=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-12-14T23:57:59Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-12-14T23:58:06Z"}, "message": "Fix broken tests", "tree": {"sha": "de542c78260d3c040f925d54f0574afddb43adf0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/de542c78260d3c040f925d54f0574afddb43adf0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a9601bce10ac5d037b0d1ce532196f08f4b7fd95", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a9601bce10ac5d037b0d1ce532196f08f4b7fd95", "html_url": "https://github.com/rust-lang/rust/commit/a9601bce10ac5d037b0d1ce532196f08f4b7fd95", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a9601bce10ac5d037b0d1ce532196f08f4b7fd95/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "47faeb9228f10717de6879c6474cdcf988a9f316", "url": "https://api.github.com/repos/rust-lang/rust/commits/47faeb9228f10717de6879c6474cdcf988a9f316", "html_url": "https://github.com/rust-lang/rust/commit/47faeb9228f10717de6879c6474cdcf988a9f316"}], "stats": {"total": 24, "additions": 12, "deletions": 12}, "files": [{"sha": "bd5ce036bb2fd1f0134726eaa677451060a8e125", "filename": "src/test/bench/graph500-bfs.rs", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/a9601bce10ac5d037b0d1ce532196f08f4b7fd95/src%2Ftest%2Fbench%2Fgraph500-bfs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a9601bce10ac5d037b0d1ce532196f08f4b7fd95/src%2Ftest%2Fbench%2Fgraph500-bfs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fbench%2Fgraph500-bfs.rs?ref=a9601bce10ac5d037b0d1ce532196f08f4b7fd95", "patch": "@@ -188,7 +188,7 @@ fn bfs2(graph: graph, key: node_id) -> bfs_result {\n               white => {\n                 let i = i as node_id;\n \n-                let neighbors = graph[i];\n+                let neighbors = copy graph[i];\n \n                 let mut color = white;\n \n@@ -269,7 +269,7 @@ fn pbfs(&&graph: arc::ARC<graph>, key: node_id) -> bfs_result {\n                   white => {\n                     let i = i as node_id;\n \n-                    let neighbors = graph[i];\n+                    let neighbors = copy graph[i];\n \n                     let mut color = white;\n \n@@ -438,7 +438,7 @@ fn main() {\n \n         if do_sequential {\n             let start = time::precise_time_s();\n-            let bfs_tree = bfs(graph, *root);\n+            let bfs_tree = bfs(copy graph, *root);\n             let stop = time::precise_time_s();\n             \n             //total_seq += stop - start;\n@@ -449,7 +449,7 @@ fn main() {\n             \n             if do_validate {\n                 let start = time::precise_time_s();\n-                assert(validate(edges, *root, bfs_tree));\n+                assert(validate(copy edges, *root, bfs_tree));\n                 let stop = time::precise_time_s();\n                 \n                 io::stdout().write_line(\n@@ -458,7 +458,7 @@ fn main() {\n             }\n             \n             let start = time::precise_time_s();\n-            let bfs_tree = bfs2(graph, *root);\n+            let bfs_tree = bfs2(copy graph, *root);\n             let stop = time::precise_time_s();\n             \n             total_seq += stop - start;\n@@ -469,7 +469,7 @@ fn main() {\n             \n             if do_validate {\n                 let start = time::precise_time_s();\n-                assert(validate(edges, *root, bfs_tree));\n+                assert(validate(copy edges, *root, bfs_tree));\n                 let stop = time::precise_time_s();\n                 \n                 io::stdout().write_line(\n@@ -489,7 +489,7 @@ fn main() {\n \n         if do_validate {\n             let start = time::precise_time_s();\n-            assert(validate(edges, *root, bfs_tree));\n+            assert(validate(copy edges, *root, bfs_tree));\n             let stop = time::precise_time_s();\n             \n             io::stdout().write_line(fmt!(\"Validation completed in %? seconds.\","}, {"sha": "c842402c70b49b0449fad4f3fc004d1979592603", "filename": "src/test/bench/shootout-chameneos-redux.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a9601bce10ac5d037b0d1ce532196f08f4b7fd95/src%2Ftest%2Fbench%2Fshootout-chameneos-redux.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a9601bce10ac5d037b0d1ce532196f08f4b7fd95/src%2Ftest%2Fbench%2Fshootout-chameneos-redux.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fbench%2Fshootout-chameneos-redux.rs?ref=a9601bce10ac5d037b0d1ce532196f08f4b7fd95", "patch": "@@ -132,7 +132,7 @@ fn creature(\n \n fn rendezvous(nn: uint, set: ~[color]) {\n \n-    pub fn spawn_listener<A: Send>(+f: fn~(oldcomm::Port<A>)) -> oldcomm::Chan<A> {\n+    pub fn spawn_listener<A: Owned>(+f: fn~(oldcomm::Port<A>)) -> oldcomm::Chan<A> {\n         let setup_po = oldcomm::Port();\n         let setup_ch = oldcomm::Chan(&setup_po);\n         do task::spawn |move f| {"}, {"sha": "4a03ab6ae657d7003a617ac4690af0d6a5b73a35", "filename": "src/test/bench/shootout-fasta.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a9601bce10ac5d037b0d1ce532196f08f4b7fd95/src%2Ftest%2Fbench%2Fshootout-fasta.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a9601bce10ac5d037b0d1ce532196f08f4b7fd95/src%2Ftest%2Fbench%2Fshootout-fasta.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fbench%2Fshootout-fasta.rs?ref=a9601bce10ac5d037b0d1ce532196f08f4b7fd95", "patch": "@@ -55,7 +55,7 @@ fn make_random_fasta(wr: io::Writer, id: ~str, desc: ~str, genelist: ~[aminoacid\n     let mut op: ~str = ~\"\";\n     for uint::range(0u, n as uint) |_i| {\n         str::push_char(&mut op, select_random(myrandom_next(rng, 100u32),\n-                                              genelist));\n+                                              copy genelist));\n         if str::len(op) >= LINE_LENGTH() {\n             wr.write_line(op);\n             op = ~\"\";"}, {"sha": "99b9b4a55f579cb7881b0a67d31c4f17a83c6793", "filename": "src/test/bench/shootout-k-nucleotide-pipes.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/a9601bce10ac5d037b0d1ce532196f08f4b7fd95/src%2Ftest%2Fbench%2Fshootout-k-nucleotide-pipes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a9601bce10ac5d037b0d1ce532196f08f4b7fd95/src%2Ftest%2Fbench%2Fshootout-k-nucleotide-pipes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fbench%2Fshootout-k-nucleotide-pipes.rs?ref=a9601bce10ac5d037b0d1ce532196f08f4b7fd95", "patch": "@@ -59,7 +59,7 @@ fn sort_and_fmt(mm: HashMap<~[u8], uint>, total: uint) -> ~str {\n    let mut buffer = ~\"\";\n \n    for pairs_sorted.each |kv| {\n-       let (k,v) = *kv;\n+       let (k,v) = copy *kv;\n        unsafe {\n            buffer += (fmt!(\"%s %0.3f\\n\", str::to_upper(str::raw::from_bytes(k)), v));\n        }\n@@ -198,7 +198,7 @@ fn main() {\n             let line_bytes = str::to_bytes(line);\n \n            for sizes.eachi |ii, _sz| {\n-               let mut lb = line_bytes;\n+               let mut lb = copy line_bytes;\n                to_child[ii].send(lb);\n             }\n          }"}, {"sha": "56257aa305e47a40ea9e412ca428970499a58d8c", "filename": "src/test/bench/task-perf-word-count-generic.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a9601bce10ac5d037b0d1ce532196f08f4b7fd95/src%2Ftest%2Fbench%2Ftask-perf-word-count-generic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a9601bce10ac5d037b0d1ce532196f08f4b7fd95/src%2Ftest%2Fbench%2Ftask-perf-word-count-generic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fbench%2Ftask-perf-word-count-generic.rs?ref=a9601bce10ac5d037b0d1ce532196f08f4b7fd95", "patch": "@@ -164,7 +164,7 @@ mod map_reduce {\n             let ctrl = box(move ctrl);\n             let i = copy *i;\n             let m = copy *map;\n-            tasks.push(spawn_joinable(|move ctrl, move i| map_task(m, &ctrl, i)));\n+            tasks.push(spawn_joinable(|move ctrl, move i| map_task(copy m, &ctrl, i)));\n             ctrls.push(move ctrl_server);\n         }\n         move tasks"}]}