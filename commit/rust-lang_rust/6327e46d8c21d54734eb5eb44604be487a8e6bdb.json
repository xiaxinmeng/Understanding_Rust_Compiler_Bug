{"sha": "6327e46d8c21d54734eb5eb44604be487a8e6bdb", "node_id": "MDY6Q29tbWl0NzI0NzEyOjYzMjdlNDZkOGMyMWQ1NDczNGViNWViNDQ2MDRiZTQ4N2E4ZTZiZGI=", "commit": {"author": {"name": "Beno\u00eet du Garreau", "email": "bdgdlm@outlook.com", "date": "2021-03-27T14:21:10Z"}, "committer": {"name": "Beno\u00eet du Garreau", "email": "bdgdlm@outlook.com", "date": "2021-03-27T14:48:26Z"}, "message": "Constantify some slice methods", "tree": {"sha": "be7a4501ee26284cbd657e2c22b71720f09b86ae", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/be7a4501ee26284cbd657e2c22b71720f09b86ae"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6327e46d8c21d54734eb5eb44604be487a8e6bdb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6327e46d8c21d54734eb5eb44604be487a8e6bdb", "html_url": "https://github.com/rust-lang/rust/commit/6327e46d8c21d54734eb5eb44604be487a8e6bdb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6327e46d8c21d54734eb5eb44604be487a8e6bdb/comments", "author": {"login": "a1phyr", "id": 47725341, "node_id": "MDQ6VXNlcjQ3NzI1MzQx", "avatar_url": "https://avatars.githubusercontent.com/u/47725341?v=4", "gravatar_id": "", "url": "https://api.github.com/users/a1phyr", "html_url": "https://github.com/a1phyr", "followers_url": "https://api.github.com/users/a1phyr/followers", "following_url": "https://api.github.com/users/a1phyr/following{/other_user}", "gists_url": "https://api.github.com/users/a1phyr/gists{/gist_id}", "starred_url": "https://api.github.com/users/a1phyr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/a1phyr/subscriptions", "organizations_url": "https://api.github.com/users/a1phyr/orgs", "repos_url": "https://api.github.com/users/a1phyr/repos", "events_url": "https://api.github.com/users/a1phyr/events{/privacy}", "received_events_url": "https://api.github.com/users/a1phyr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "a1phyr", "id": 47725341, "node_id": "MDQ6VXNlcjQ3NzI1MzQx", "avatar_url": "https://avatars.githubusercontent.com/u/47725341?v=4", "gravatar_id": "", "url": "https://api.github.com/users/a1phyr", "html_url": "https://github.com/a1phyr", "followers_url": "https://api.github.com/users/a1phyr/followers", "following_url": "https://api.github.com/users/a1phyr/following{/other_user}", "gists_url": "https://api.github.com/users/a1phyr/gists{/gist_id}", "starred_url": "https://api.github.com/users/a1phyr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/a1phyr/subscriptions", "organizations_url": "https://api.github.com/users/a1phyr/orgs", "repos_url": "https://api.github.com/users/a1phyr/repos", "events_url": "https://api.github.com/users/a1phyr/events{/privacy}", "received_events_url": "https://api.github.com/users/a1phyr/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "aef11409b43a533f4e59ffb9b0efcb619c6e6879", "url": "https://api.github.com/repos/rust-lang/rust/commits/aef11409b43a533f4e59ffb9b0efcb619c6e6879", "html_url": "https://github.com/rust-lang/rust/commit/aef11409b43a533f4e59ffb9b0efcb619c6e6879"}], "stats": {"total": 24, "additions": 16, "deletions": 8}, "files": [{"sha": "56d3ba0ff254d0d2be9378f97f42264a621c349d", "filename": "library/core/src/slice/mod.rs", "status": "modified", "additions": 16, "deletions": 8, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/6327e46d8c21d54734eb5eb44604be487a8e6bdb/library%2Fcore%2Fsrc%2Fslice%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6327e46d8c21d54734eb5eb44604be487a8e6bdb/library%2Fcore%2Fsrc%2Fslice%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fslice%2Fmod.rs?ref=6327e46d8c21d54734eb5eb44604be487a8e6bdb", "patch": "@@ -145,8 +145,9 @@ impl<T> [T] {\n     /// assert_eq!(None, w.first());\n     /// ```\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n+    #[rustc_const_unstable(feature = \"const_slice_first_last\", issue = \"83570\")]\n     #[inline]\n-    pub fn first(&self) -> Option<&T> {\n+    pub const fn first(&self) -> Option<&T> {\n         if let [first, ..] = self { Some(first) } else { None }\n     }\n \n@@ -163,8 +164,9 @@ impl<T> [T] {\n     /// assert_eq!(x, &[5, 1, 2]);\n     /// ```\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n+    #[rustc_const_unstable(feature = \"const_slice_first_last\", issue = \"83570\")]\n     #[inline]\n-    pub fn first_mut(&mut self) -> Option<&mut T> {\n+    pub const fn first_mut(&mut self) -> Option<&mut T> {\n         if let [first, ..] = self { Some(first) } else { None }\n     }\n \n@@ -181,8 +183,9 @@ impl<T> [T] {\n     /// }\n     /// ```\n     #[stable(feature = \"slice_splits\", since = \"1.5.0\")]\n+    #[rustc_const_unstable(feature = \"const_slice_first_last\", issue = \"83570\")]\n     #[inline]\n-    pub fn split_first(&self) -> Option<(&T, &[T])> {\n+    pub const fn split_first(&self) -> Option<(&T, &[T])> {\n         if let [first, tail @ ..] = self { Some((first, tail)) } else { None }\n     }\n \n@@ -201,8 +204,9 @@ impl<T> [T] {\n     /// assert_eq!(x, &[3, 4, 5]);\n     /// ```\n     #[stable(feature = \"slice_splits\", since = \"1.5.0\")]\n+    #[rustc_const_unstable(feature = \"const_slice_first_last\", issue = \"83570\")]\n     #[inline]\n-    pub fn split_first_mut(&mut self) -> Option<(&mut T, &mut [T])> {\n+    pub const fn split_first_mut(&mut self) -> Option<(&mut T, &mut [T])> {\n         if let [first, tail @ ..] = self { Some((first, tail)) } else { None }\n     }\n \n@@ -219,8 +223,9 @@ impl<T> [T] {\n     /// }\n     /// ```\n     #[stable(feature = \"slice_splits\", since = \"1.5.0\")]\n+    #[rustc_const_unstable(feature = \"const_slice_first_last\", issue = \"83570\")]\n     #[inline]\n-    pub fn split_last(&self) -> Option<(&T, &[T])> {\n+    pub const fn split_last(&self) -> Option<(&T, &[T])> {\n         if let [init @ .., last] = self { Some((last, init)) } else { None }\n     }\n \n@@ -239,8 +244,9 @@ impl<T> [T] {\n     /// assert_eq!(x, &[4, 5, 3]);\n     /// ```\n     #[stable(feature = \"slice_splits\", since = \"1.5.0\")]\n+    #[rustc_const_unstable(feature = \"const_slice_first_last\", issue = \"83570\")]\n     #[inline]\n-    pub fn split_last_mut(&mut self) -> Option<(&mut T, &mut [T])> {\n+    pub const fn split_last_mut(&mut self) -> Option<(&mut T, &mut [T])> {\n         if let [init @ .., last] = self { Some((last, init)) } else { None }\n     }\n \n@@ -256,8 +262,9 @@ impl<T> [T] {\n     /// assert_eq!(None, w.last());\n     /// ```\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n+    #[rustc_const_unstable(feature = \"const_slice_first_last\", issue = \"83570\")]\n     #[inline]\n-    pub fn last(&self) -> Option<&T> {\n+    pub const fn last(&self) -> Option<&T> {\n         if let [.., last] = self { Some(last) } else { None }\n     }\n \n@@ -274,8 +281,9 @@ impl<T> [T] {\n     /// assert_eq!(x, &[0, 1, 10]);\n     /// ```\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n+    #[rustc_const_unstable(feature = \"const_slice_first_last\", issue = \"83570\")]\n     #[inline]\n-    pub fn last_mut(&mut self) -> Option<&mut T> {\n+    pub const fn last_mut(&mut self) -> Option<&mut T> {\n         if let [.., last] = self { Some(last) } else { None }\n     }\n "}]}