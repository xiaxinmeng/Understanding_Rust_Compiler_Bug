{"sha": "0d1e06d638ccd369eb3fda74cc862de828877b4d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBkMWUwNmQ2MzhjY2QzNjllYjNmZGE3NGNjODYyZGU4Mjg4NzdiNGQ=", "commit": {"author": {"name": "Oliver Schneider", "email": "oli-obk@users.noreply.github.com", "date": "2018-05-28T11:50:31Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2018-05-28T11:50:31Z"}, "message": "Merge pull request #2808 from Aaronepower/master\n\nAdded lint for unnecessary references.", "tree": {"sha": "9b457108cc996bf7acf7f6fb0775cb59ea3866b9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9b457108cc996bf7acf7f6fb0775cb59ea3866b9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0d1e06d638ccd369eb3fda74cc862de828877b4d", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJbC+0HCRBK7hj4Ov3rIwAAdHIIAJ8kcHHSGETdQ37gFkZF5oro\nPnFZNi+GbRTUaKfpe0YSRVWK7wMGhvuqhwU25a50938JP5OebFQ2Yj5cb9pupBIm\ncA1rnhy83CdqzMekPpnCuBsWekpYOAn9zxzGochs+AgNyIn/o/NgG489iAkQ1phw\nyOKZ7qUZzW7+Zp/KgxuTGBrJbjL07y0hHWlE03FUC2pR9xDymdP86SxezSpqBaLx\nh+nZ0OYA7IAw+k/nN+HBkuYPdqrNB7d9EfGNjc+OX1UldJOLuu7PlY20uSlGN2mS\nTcNUjTcxvlSXVXmlG8kurj05UVNDIxcaKOtQrAJ+GteBtFbvgPAUD+gCPqNxo9I=\n=26U4\n-----END PGP SIGNATURE-----\n", "payload": "tree 9b457108cc996bf7acf7f6fb0775cb59ea3866b9\nparent b979f62aab92b6ec242880e0dfa9c13161343881\nparent 8b679176fade98d8908f3950506f53b3a5b27910\nauthor Oliver Schneider <oli-obk@users.noreply.github.com> 1527508231 +0200\ncommitter GitHub <noreply@github.com> 1527508231 +0200\n\nMerge pull request #2808 from Aaronepower/master\n\nAdded lint for unnecessary references."}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0d1e06d638ccd369eb3fda74cc862de828877b4d", "html_url": "https://github.com/rust-lang/rust/commit/0d1e06d638ccd369eb3fda74cc862de828877b4d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0d1e06d638ccd369eb3fda74cc862de828877b4d/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b979f62aab92b6ec242880e0dfa9c13161343881", "url": "https://api.github.com/repos/rust-lang/rust/commits/b979f62aab92b6ec242880e0dfa9c13161343881", "html_url": "https://github.com/rust-lang/rust/commit/b979f62aab92b6ec242880e0dfa9c13161343881"}, {"sha": "8b679176fade98d8908f3950506f53b3a5b27910", "url": "https://api.github.com/repos/rust-lang/rust/commits/8b679176fade98d8908f3950506f53b3a5b27910", "html_url": "https://github.com/rust-lang/rust/commit/8b679176fade98d8908f3950506f53b3a5b27910"}], "stats": {"total": 78, "additions": 78, "deletions": 0}, "files": [{"sha": "05902614df7bcd8b9ea8abfb537c3a79df9cc3d6", "filename": "clippy_lints/src/lib.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0d1e06d638ccd369eb3fda74cc862de828877b4d/clippy_lints%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0d1e06d638ccd369eb3fda74cc862de828877b4d/clippy_lints%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flib.rs?ref=0d1e06d638ccd369eb3fda74cc862de828877b4d", "patch": "@@ -388,6 +388,7 @@ pub fn register_plugins(reg: &mut rustc_plugin::Registry) {\n     reg.register_late_lint_pass(box if_let_redundant_pattern_matching::Pass);\n     reg.register_late_lint_pass(box partialeq_ne_impl::Pass);\n     reg.register_early_lint_pass(box reference::Pass);\n+    reg.register_early_lint_pass(box reference::DerefPass);\n     reg.register_early_lint_pass(box double_parens::DoubleParens);\n     reg.register_late_lint_pass(box unused_io_amount::UnusedIoAmount);\n     reg.register_late_lint_pass(box large_enum_variant::LargeEnumVariant::new(conf.enum_variant_size_threshold));\n@@ -809,6 +810,7 @@ pub fn register_plugins(reg: &mut rustc_plugin::Registry) {\n         precedence::PRECEDENCE,\n         ranges::RANGE_ZIP_WITH_LEN,\n         reference::DEREF_ADDROF,\n+        reference::REF_IN_DEREF,\n         swap::MANUAL_SWAP,\n         temporary_assignment::TEMPORARY_ASSIGNMENT,\n         transmute::CROSSPOINTER_TRANSMUTE,"}, {"sha": "4b173a5856348fca4885c166d0ae0e7f74369ba1", "filename": "clippy_lints/src/reference.rs", "status": "modified", "additions": 50, "deletions": 0, "changes": 50, "blob_url": "https://github.com/rust-lang/rust/blob/0d1e06d638ccd369eb3fda74cc862de828877b4d/clippy_lints%2Fsrc%2Freference.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0d1e06d638ccd369eb3fda74cc862de828877b4d/clippy_lints%2Fsrc%2Freference.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Freference.rs?ref=0d1e06d638ccd369eb3fda74cc862de828877b4d", "patch": "@@ -54,3 +54,53 @@ impl EarlyLintPass for Pass {\n         }\n     }\n }\n+\n+/// **What it does:** Checks for references in expressions that use\n+/// auto dereference.\n+///\n+/// **Why is this bad?** The reference is a no-op and is automatically\n+/// dereferenced by the compiler and makes the code less clear.\n+///\n+/// **Example:**\n+/// ```rust\n+/// struct Point(u32, u32);\n+/// let point = Foo(30, 20);\n+/// let x = (&point).x;\n+/// ```\n+declare_clippy_lint! {\n+    pub REF_IN_DEREF,\n+    complexity,\n+    \"Use of reference in auto dereference expression.\"\n+}\n+\n+pub struct DerefPass;\n+\n+impl LintPass for DerefPass {\n+    fn get_lints(&self) -> LintArray {\n+        lint_array!(REF_IN_DEREF)\n+    }\n+}\n+\n+impl EarlyLintPass for DerefPass {\n+    fn check_expr(&mut self, cx: &EarlyContext, e: &Expr) {\n+        if_chain! {\n+            if let ExprKind::Field(ref object, ref field_name) = e.node;\n+            if let ExprKind::Paren(ref parened) = object.node;\n+            if let ExprKind::AddrOf(_, ref inner) = parened.node;\n+            then {\n+                span_lint_and_sugg(\n+                    cx,\n+                    REF_IN_DEREF,\n+                    object.span,\n+                    \"Creating a reference that is immediately dereferenced.\",\n+                    \"try this\",\n+                    format!(\n+                        \"{}.{}\",\n+                        snippet(cx, inner.span, \"_\"),\n+                        snippet(cx, field_name.span, \"_\")\n+                    )\n+                );\n+            }\n+        }\n+    }\n+}"}, {"sha": "53b970dfa72c30b4ecc3bf233b88f8b7e9340e88", "filename": "tests/ui/unnecessary_ref.rs", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/0d1e06d638ccd369eb3fda74cc862de828877b4d/tests%2Fui%2Funnecessary_ref.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0d1e06d638ccd369eb3fda74cc862de828877b4d/tests%2Fui%2Funnecessary_ref.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Funnecessary_ref.rs?ref=0d1e06d638ccd369eb3fda74cc862de828877b4d", "patch": "@@ -0,0 +1,12 @@\n+#![feature(tool_attributes)]\n+#![feature(stmt_expr_attributes)]\n+\n+struct Outer {\n+    inner: u32,\n+}\n+\n+#[deny(ref_in_deref)]\n+fn main() {\n+    let outer = Outer { inner: 0 };\n+    let inner = (&outer).inner;\n+}"}, {"sha": "ffc65084afa6149f24182952ab37912a6d01447b", "filename": "tests/ui/unnecessary_ref.stderr", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/0d1e06d638ccd369eb3fda74cc862de828877b4d/tests%2Fui%2Funnecessary_ref.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/0d1e06d638ccd369eb3fda74cc862de828877b4d/tests%2Fui%2Funnecessary_ref.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Funnecessary_ref.stderr?ref=0d1e06d638ccd369eb3fda74cc862de828877b4d", "patch": "@@ -0,0 +1,14 @@\n+error: Creating a reference that is immediately dereferenced.\n+  --> $DIR/unnecessary_ref.rs:11:17\n+   |\n+11 |     let inner = (&outer).inner;\n+   |                 ^^^^^^^^ help: try this: `outer.inner`\n+   |\n+note: lint level defined here\n+  --> $DIR/unnecessary_ref.rs:8:8\n+   |\n+8  | #[deny(ref_in_deref)]\n+   |        ^^^^^^^^^^^^\n+\n+error: aborting due to previous error\n+"}]}