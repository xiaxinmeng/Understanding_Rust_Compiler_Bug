{"sha": "c8911e872eb46f811f645190e154b504fac157df", "node_id": "MDY6Q29tbWl0NzI0NzEyOmM4OTExZTg3MmViNDZmODExZjY0NTE5MGUxNTRiNTA0ZmFjMTU3ZGY=", "commit": {"author": {"name": "Phil Ellison", "email": "phil.j.ellison@gmail.com", "date": "2019-08-12T19:21:29Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-08-25T09:56:23Z"}, "message": "Remove reliance on expr ordering", "tree": {"sha": "d1153b9bdef618547aa27bedc81ffd92c165cda1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d1153b9bdef618547aa27bedc81ffd92c165cda1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c8911e872eb46f811f645190e154b504fac157df", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c8911e872eb46f811f645190e154b504fac157df", "html_url": "https://github.com/rust-lang/rust/commit/c8911e872eb46f811f645190e154b504fac157df", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c8911e872eb46f811f645190e154b504fac157df/comments", "author": {"login": "theotherphil", "id": 1974256, "node_id": "MDQ6VXNlcjE5NzQyNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/1974256?v=4", "gravatar_id": "", "url": "https://api.github.com/users/theotherphil", "html_url": "https://github.com/theotherphil", "followers_url": "https://api.github.com/users/theotherphil/followers", "following_url": "https://api.github.com/users/theotherphil/following{/other_user}", "gists_url": "https://api.github.com/users/theotherphil/gists{/gist_id}", "starred_url": "https://api.github.com/users/theotherphil/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/theotherphil/subscriptions", "organizations_url": "https://api.github.com/users/theotherphil/orgs", "repos_url": "https://api.github.com/users/theotherphil/repos", "events_url": "https://api.github.com/users/theotherphil/events{/privacy}", "received_events_url": "https://api.github.com/users/theotherphil/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4f6f3933ec04df55a39368d591c91cf81d980237", "url": "https://api.github.com/repos/rust-lang/rust/commits/4f6f3933ec04df55a39368d591c91cf81d980237", "html_url": "https://github.com/rust-lang/rust/commit/4f6f3933ec04df55a39368d591c91cf81d980237"}], "stats": {"total": 14, "additions": 4, "deletions": 10}, "files": [{"sha": "fce1c2f14d46458eb1a71320721e6f63ad8588a2", "filename": "crates/ra_hir/src/expr/validation.rs", "status": "modified", "additions": 4, "deletions": 10, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/c8911e872eb46f811f645190e154b504fac157df/crates%2Fra_hir%2Fsrc%2Fexpr%2Fvalidation.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c8911e872eb46f811f645190e154b504fac157df/crates%2Fra_hir%2Fsrc%2Fexpr%2Fvalidation.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fexpr%2Fvalidation.rs?ref=c8911e872eb46f811f645190e154b504fac157df", "patch": "@@ -34,21 +34,15 @@ impl<'a, 'b> ExprValidator<'a, 'b> {\n     pub(crate) fn validate_body(&mut self, db: &impl HirDatabase) {\n         let body = self.func.body(db);\n \n-        // The final expr in the function body is the whole body,\n-        // so the expression being returned is the penultimate expr.\n-        let mut penultimate_expr = None;\n-        let mut final_expr = None;\n-\n         for e in body.exprs() {\n-            penultimate_expr = final_expr;\n-            final_expr = Some(e);\n-\n             if let (id, Expr::RecordLit { path, fields, spread }) = e {\n                 self.validate_record_literal(id, path, fields, *spread, db);\n             }\n         }\n-        if let Some(e) = penultimate_expr {\n-            self.validate_results_in_tail_expr(e.0, db);\n+\n+        let body_expr = &body[body.body_expr()];\n+        if let Expr::Block { statements: _, tail: Some(t) } = body_expr {\n+            self.validate_results_in_tail_expr(*t, db);\n         }\n     }\n "}]}