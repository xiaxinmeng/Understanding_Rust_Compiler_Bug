{"sha": "4beda4e582e4fe008aaf866a5f3ad6a20dec9876", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRiZWRhNGU1ODJlNGZlMDA4YWFmODY2YTVmM2FkNmEyMGRlYzk4NzY=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2013-07-18T01:38:12Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2013-07-22T21:16:52Z"}, "message": "std::rt: Stop using unstable::global in change_dir_locked", "tree": {"sha": "37cb85c47b61b5659ea02c2432399ec6d9fdf0c6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/37cb85c47b61b5659ea02c2432399ec6d9fdf0c6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4beda4e582e4fe008aaf866a5f3ad6a20dec9876", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4beda4e582e4fe008aaf866a5f3ad6a20dec9876", "html_url": "https://github.com/rust-lang/rust/commit/4beda4e582e4fe008aaf866a5f3ad6a20dec9876", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4beda4e582e4fe008aaf866a5f3ad6a20dec9876/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f8c4d99df67d411d5f7b48823bc082d81cdfaa37", "url": "https://api.github.com/repos/rust-lang/rust/commits/f8c4d99df67d411d5f7b48823bc082d81cdfaa37", "html_url": "https://github.com/rust-lang/rust/commit/f8c4d99df67d411d5f7b48823bc082d81cdfaa37"}], "stats": {"total": 54, "additions": 40, "deletions": 14}, "files": [{"sha": "fb5be0494ef0a541157a1e34089f40eb511c33cb", "filename": "src/libstd/os.rs", "status": "modified", "additions": 26, "deletions": 14, "changes": 40, "blob_url": "https://github.com/rust-lang/rust/blob/4beda4e582e4fe008aaf866a5f3ad6a20dec9876/src%2Flibstd%2Fos.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4beda4e582e4fe008aaf866a5f3ad6a20dec9876/src%2Flibstd%2Fos.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fos.rs?ref=4beda4e582e4fe008aaf866a5f3ad6a20dec9876", "patch": "@@ -869,26 +869,38 @@ pub fn change_dir(p: &Path) -> bool {\n /// CWD to what it was before, returning true.\n /// Returns false if the directory doesn't exist or if the directory change\n /// is otherwise unsuccessful.\n+/// FIXME #7870 This probably shouldn't be part of the public API\n pub fn change_dir_locked(p: &Path, action: &fn()) -> bool {\n-    use unstable::global::global_data_clone_create;\n-    use unstable::sync::{Exclusive, exclusive};\n-\n-    fn key(_: Exclusive<()>) { }\n+    use task;\n+    use unstable::finally::Finally;\n \n     unsafe {\n-        let result = global_data_clone_create(key, || { ~exclusive(()) });\n-\n-        do result.with_imm() |_| {\n-            let old_dir = os::getcwd();\n-            if change_dir(p) {\n-                action();\n-                change_dir(&old_dir)\n-            }\n-            else {\n-                false\n+        // This is really sketchy. Using a pthread mutex so descheduling\n+        // in the `action` callback can cause deadlock. Doing it in\n+        // `task::atomically` to try to avoid that, but ... I don't know\n+        // this is all bogus.\n+        return do task::atomically {\n+            rust_take_change_dir_lock();\n+\n+            do (||{\n+                let old_dir = os::getcwd();\n+                if change_dir(p) {\n+                    action();\n+                    change_dir(&old_dir)\n+                }\n+                else {\n+                    false\n+                }\n+            }).finally {\n+                rust_drop_change_dir_lock();\n             }\n         }\n     }\n+\n+    extern {\n+        fn rust_take_change_dir_lock();\n+        fn rust_drop_change_dir_lock();\n+    }\n }\n \n /// Copies a file from one location to another"}, {"sha": "4dde01d5f00c664967ee921f4e1e39f0908b8f27", "filename": "src/rt/rust_builtin.cpp", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/4beda4e582e4fe008aaf866a5f3ad6a20dec9876/src%2Frt%2Frust_builtin.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/4beda4e582e4fe008aaf866a5f3ad6a20dec9876/src%2Frt%2Frust_builtin.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_builtin.cpp?ref=4beda4e582e4fe008aaf866a5f3ad6a20dec9876", "patch": "@@ -947,6 +947,18 @@ rust_get_exit_status_newrt() {\n     return exit_status;\n }\n \n+static lock_and_signal change_dir_lock;\n+\n+extern \"C\" CDECL void\n+rust_take_change_dir_lock() {\n+    global_args_lock.lock();\n+}\n+\n+extern \"C\" CDECL void\n+rust_drop_change_dir_lock() {\n+    global_args_lock.unlock();\n+}\n+\n //\n // Local Variables:\n // mode: C++"}, {"sha": "e9e0f3b694909f7afe8113d37480178864dfc1cd", "filename": "src/rt/rustrt.def.in", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4beda4e582e4fe008aaf866a5f3ad6a20dec9876/src%2Frt%2Frustrt.def.in", "raw_url": "https://github.com/rust-lang/rust/raw/4beda4e582e4fe008aaf866a5f3ad6a20dec9876/src%2Frt%2Frustrt.def.in", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frustrt.def.in?ref=4beda4e582e4fe008aaf866a5f3ad6a20dec9876", "patch": "@@ -268,3 +268,5 @@ rust_take_global_args_lock\n rust_drop_global_args_lock\n rust_set_exit_status_newrt\n rust_get_exit_status_newrt\n+rust_take_change_dir_lock\n+rust_drop_change_dir_lock\n\\ No newline at end of file"}]}