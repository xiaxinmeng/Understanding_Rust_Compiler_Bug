{"sha": "26d5c0e20cbdd27af12a756ddfb1758d0888aad3", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI2ZDVjMGUyMGNiZGQyN2FmMTJhNzU2ZGRmYjE3NThkMDg4OGFhZDM=", "commit": {"author": {"name": "Vadim Petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2017-05-26T22:52:25Z"}, "committer": {"name": "Vadim Petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2017-05-30T19:00:30Z"}, "message": "Turn `invalid_type_param_default` into a lint again", "tree": {"sha": "29c6c8dfe26505cf7e4d169041b38f123c5b1a3a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/29c6c8dfe26505cf7e4d169041b38f123c5b1a3a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/26d5c0e20cbdd27af12a756ddfb1758d0888aad3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/26d5c0e20cbdd27af12a756ddfb1758d0888aad3", "html_url": "https://github.com/rust-lang/rust/commit/26d5c0e20cbdd27af12a756ddfb1758d0888aad3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/26d5c0e20cbdd27af12a756ddfb1758d0888aad3/comments", "author": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "committer": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d73a0fef381f5c6f4720c152bb7235fe02e502fd", "url": "https://api.github.com/repos/rust-lang/rust/commits/d73a0fef381f5c6f4720c152bb7235fe02e502fd", "html_url": "https://github.com/rust-lang/rust/commit/d73a0fef381f5c6f4720c152bb7235fe02e502fd"}], "stats": {"total": 27, "additions": 23, "deletions": 4}, "files": [{"sha": "736c3b289e198dcf5d626b4876437ff53680a31e", "filename": "src/librustc/lint/builtin.rs", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/26d5c0e20cbdd27af12a756ddfb1758d0888aad3/src%2Flibrustc%2Flint%2Fbuiltin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/26d5c0e20cbdd27af12a756ddfb1758d0888aad3/src%2Flibrustc%2Flint%2Fbuiltin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Flint%2Fbuiltin.rs?ref=26d5c0e20cbdd27af12a756ddfb1758d0888aad3", "patch": "@@ -130,6 +130,12 @@ declare_lint! {\n     \"detect private items in public interfaces not caught by the old implementation\"\n }\n \n+declare_lint! {\n+    pub INVALID_TYPE_PARAM_DEFAULT,\n+    Deny,\n+    \"type parameter default erroneously allowed in invalid location\"\n+}\n+\n declare_lint! {\n     pub RENAMED_AND_REMOVED_LINTS,\n     Warn,\n@@ -224,6 +230,7 @@ impl LintPass for HardwiredLints {\n             TRIVIAL_CASTS,\n             TRIVIAL_NUMERIC_CASTS,\n             PRIVATE_IN_PUBLIC,\n+            INVALID_TYPE_PARAM_DEFAULT,\n             CONST_ERR,\n             RENAMED_AND_REMOVED_LINTS,\n             RESOLVE_TRAIT_ON_DEFAULTED_UNIT,"}, {"sha": "9870842a28e383b7cf81154869dbbc1e3705a81a", "filename": "src/librustc_lint/lib.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/26d5c0e20cbdd27af12a756ddfb1758d0888aad3/src%2Flibrustc_lint%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/26d5c0e20cbdd27af12a756ddfb1758d0888aad3/src%2Flibrustc_lint%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_lint%2Flib.rs?ref=26d5c0e20cbdd27af12a756ddfb1758d0888aad3", "patch": "@@ -196,6 +196,10 @@ pub fn register_builtins(store: &mut lint::LintStore, sess: Option<&Session>) {\n             id: LintId::of(SAFE_EXTERN_STATICS),\n             reference: \"issue #36247 <https://github.com/rust-lang/rust/issues/36247>\",\n         },\n+        FutureIncompatibleInfo {\n+            id: LintId::of(INVALID_TYPE_PARAM_DEFAULT),\n+            reference: \"issue #36887 <https://github.com/rust-lang/rust/issues/36887>\",\n+        },\n         FutureIncompatibleInfo {\n             id: LintId::of(EXTRA_REQUIREMENT_IN_IMPL),\n             reference: \"issue #37166 <https://github.com/rust-lang/rust/issues/37166>\",\n@@ -251,8 +255,6 @@ pub fn register_builtins(store: &mut lint::LintStore, sess: Option<&Session>) {\n         \"converted into hard error, see https://github.com/rust-lang/rust/issues/33685\");\n     store.register_removed(\"inaccessible_extern_crate\",\n         \"converted into hard error, see https://github.com/rust-lang/rust/issues/36886\");\n-    store.register_removed(\"invalid_type_param_default\",\n-        \"converted into hard error, see https://github.com/rust-lang/rust/issues/36887\");\n     store.register_removed(\"super_or_self_in_global_path\",\n         \"converted into hard error, see https://github.com/rust-lang/rust/issues/36888\");\n     store.register_removed(\"overlapping_inherent_impls\","}, {"sha": "fb3bcd31e21fcbaffe0dbcf0bca3cd3a9a34f315", "filename": "src/librustc_typeck/collect.rs", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/26d5c0e20cbdd27af12a756ddfb1758d0888aad3/src%2Flibrustc_typeck%2Fcollect.rs", "raw_url": "https://github.com/rust-lang/rust/raw/26d5c0e20cbdd27af12a756ddfb1758d0888aad3/src%2Flibrustc_typeck%2Fcollect.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcollect.rs?ref=26d5c0e20cbdd27af12a756ddfb1758d0888aad3", "patch": "@@ -54,6 +54,7 @@ There are some shortcomings in this design:\n */\n \n use astconv::{AstConv, Bounds};\n+use lint;\n use constrained_type_params as ctp;\n use middle::lang_items::SizedTraitLangItem;\n use middle::const_val::ConstVal;\n@@ -896,8 +897,12 @@ fn generics_of<'a, 'tcx>(tcx: TyCtxt<'a, 'tcx, 'tcx>,\n \n         if !allow_defaults && p.default.is_some() {\n             if !tcx.sess.features.borrow().default_type_parameter_fallback {\n-                tcx.sess.span_err(p.span, \"defaults for type parameters are only allowed in \\\n-                                           `struct`, `enum`, `type`, or `trait` definitions.\");\n+                tcx.sess.add_lint(\n+                    lint::builtin::INVALID_TYPE_PARAM_DEFAULT,\n+                    p.id,\n+                    p.span,\n+                    format!(\"defaults for type parameters are only allowed in `struct`, \\\n+                             `enum`, `type`, or `trait` definitions.\"));\n             }\n         }\n "}, {"sha": "c7a1197372dee50eb5645c02590933768594d8d3", "filename": "src/test/compile-fail/type-parameter-invalid-lint.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/26d5c0e20cbdd27af12a756ddfb1758d0888aad3/src%2Ftest%2Fcompile-fail%2Ftype-parameter-invalid-lint.rs", "raw_url": "https://github.com/rust-lang/rust/raw/26d5c0e20cbdd27af12a756ddfb1758d0888aad3/src%2Ftest%2Fcompile-fail%2Ftype-parameter-invalid-lint.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Ftype-parameter-invalid-lint.rs?ref=26d5c0e20cbdd27af12a756ddfb1758d0888aad3", "patch": "@@ -10,11 +10,16 @@\n \n // gate-test-default_type_parameter_fallback\n \n+#![deny(invalid_type_param_default)]\n+#![allow(unused)]\n+\n fn avg<T=i32>(_: T) {}\n //~^ ERROR defaults for type parameters are only allowed\n+//~| WARN this was previously accepted\n \n struct S<T>(T);\n impl<T=i32> S<T> {}\n //~^ ERROR defaults for type parameters are only allowed\n+//~| WARN this was previously accepted\n \n fn main() {}"}]}