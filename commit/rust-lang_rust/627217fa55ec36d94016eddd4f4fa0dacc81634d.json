{"sha": "627217fa55ec36d94016eddd4f4fa0dacc81634d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjYyNzIxN2ZhNTVlYzM2ZDk0MDE2ZWRkZDRmNGZhMGRhY2M4MTYzNGQ=", "commit": {"author": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2011-12-21T05:56:21Z"}, "committer": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2011-12-21T14:14:36Z"}, "message": "valid cap clause for kind-ness too", "tree": {"sha": "9f846413bb704c61bf201110783d41cf8be61efb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9f846413bb704c61bf201110783d41cf8be61efb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/627217fa55ec36d94016eddd4f4fa0dacc81634d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/627217fa55ec36d94016eddd4f4fa0dacc81634d", "html_url": "https://github.com/rust-lang/rust/commit/627217fa55ec36d94016eddd4f4fa0dacc81634d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/627217fa55ec36d94016eddd4f4fa0dacc81634d/comments", "author": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c03d14a33ddee8001f59224b40ce2fe06a71e074", "url": "https://api.github.com/repos/rust-lang/rust/commits/c03d14a33ddee8001f59224b40ce2fe06a71e074", "html_url": "https://github.com/rust-lang/rust/commit/c03d14a33ddee8001f59224b40ce2fe06a71e074"}], "stats": {"total": 46, "additions": 34, "deletions": 12}, "files": [{"sha": "5784a328d42d571b9649e92a1525fc3024759b58", "filename": "src/comp/middle/kind.rs", "status": "modified", "additions": 24, "deletions": 12, "changes": 36, "blob_url": "https://github.com/rust-lang/rust/blob/627217fa55ec36d94016eddd4f4fa0dacc81634d/src%2Fcomp%2Fmiddle%2Fkind.rs", "raw_url": "https://github.com/rust-lang/rust/raw/627217fa55ec36d94016eddd4f4fa0dacc81634d/src%2Fcomp%2Fmiddle%2Fkind.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Fkind.rs?ref=627217fa55ec36d94016eddd4f4fa0dacc81634d", "patch": "@@ -90,18 +90,30 @@ fn check_fn_body(decl: fn_decl, body: blk, sp: span, i: fn_ident, id: node_id,\n     visit::visit_fn_body(decl, body, sp, i, id, cx, v);\n }\n \n-fn check_fn_cap_clause(_cx: ctx,\n-                       _id: node_id,\n-                       _cap_clause: capture_clause) {\n-//    let freevars = freevars::get_freevars(cx.tcx, i);\n-//    let contains_var = lambda(id: def_id) -> bool {\n-//        vec::any(freevars, { |freevar|\n-//            ast_util::def_id_of_def(freevar).node == def_id\n-//        })\n-//    }\n-//    with_closure_check_fn(cx, id) { |check_fn|\n-//        let check_var = lambda(\n-//    }\n+fn check_fn_cap_clause(cx: ctx,\n+                       id: node_id,\n+                       cap_clause: capture_clause) {\n+    // Check that the variables named in the clause which are not free vars\n+    // (if any) are also legal.  freevars are checked above in check_fn_body.\n+    // This is kind of a degenerate case, as captured variables will generally\n+    // appear free in the body.\n+    let freevars = freevars::get_freevars(cx.tcx, id);\n+    let freevar_ids = vec::map(*freevars, { |freevar|\n+        ast_util::def_id_of_def(freevar.def).node\n+    });\n+    //log(\"freevar_ids\", freevar_ids);\n+    with_closure_check_fn(cx, id) { |check_fn|\n+        let check_var = lambda(&&cap_item: @capture_item) {\n+            let cap_def = cx.tcx.def_map.get(cap_item.id);\n+            let cap_def_id = ast_util::def_id_of_def(cap_def).node;\n+            if !vec::member(cap_def_id, freevar_ids) {\n+                let ty = ty::node_id_to_type(cx.tcx, cap_def_id);\n+                check_fn(cx, ty, cap_item.span);\n+            }\n+        };\n+        vec::iter(cap_clause.copies, check_var);\n+        vec::iter(cap_clause.moves, check_var);\n+    }\n }\n \n fn check_expr(e: @expr, cx: ctx, v: visit::vt<ctx>) {"}, {"sha": "e2f60dbb6ab1c25d6dfff9385c95043d5116c1de", "filename": "src/test/compile-fail/cap-clause-illegal-cap.rs", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/627217fa55ec36d94016eddd4f4fa0dacc81634d/src%2Ftest%2Fcompile-fail%2Fcap-clause-illegal-cap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/627217fa55ec36d94016eddd4f4fa0dacc81634d/src%2Ftest%2Fcompile-fail%2Fcap-clause-illegal-cap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fcap-clause-illegal-cap.rs?ref=627217fa55ec36d94016eddd4f4fa0dacc81634d", "patch": "@@ -0,0 +1,10 @@\n+// error-pattern: copying a noncopyable value\n+\n+fn to_lambda2(b: block(uint) -> uint) -> lambda(uint) -> uint {\n+    // test case where copy clause specifies a value that is not used\n+    // in lambda body, but value is illegal to copy:\n+    ret lambda[copy b](u: uint) -> uint { 22u };\n+}\n+\n+fn main() {\n+}"}]}