{"sha": "ce2bab68d69ee04e17c0165dbdb7b583d5a7c991", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNlMmJhYjY4ZDY5ZWUwNGUxN2MwMTY1ZGJkYjdiNTgzZDVhN2M5OTE=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2014-04-18T11:11:19Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2014-04-18T11:11:19Z"}, "message": "auto merge of #13585 : brandonw/rust/patch-1, r=cmr\n\nThe original text stated that one should only return a unique or managed pointer if you were given one in the first place. This makes it sound as if the function *should* return a unique pointer if it were given a unique pointer. The rest of the section goes on to describe why this is bad, and the example of bad code does exactly what the rule just said to do.\r\n\r\nI reworded the original rule into a reference to the more concise rule mentioned at the bottom of the section, which helps add emphasis (a la 'it bears repeating').", "tree": {"sha": "addec7ff5238ab59b8510d2fe6fb679a8dd07a79", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/addec7ff5238ab59b8510d2fe6fb679a8dd07a79"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ce2bab68d69ee04e17c0165dbdb7b583d5a7c991", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ce2bab68d69ee04e17c0165dbdb7b583d5a7c991", "html_url": "https://github.com/rust-lang/rust/commit/ce2bab68d69ee04e17c0165dbdb7b583d5a7c991", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ce2bab68d69ee04e17c0165dbdb7b583d5a7c991/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d35804ea5e69c9a3a8957626533a856f976fe4e3", "url": "https://api.github.com/repos/rust-lang/rust/commits/d35804ea5e69c9a3a8957626533a856f976fe4e3", "html_url": "https://github.com/rust-lang/rust/commit/d35804ea5e69c9a3a8957626533a856f976fe4e3"}, {"sha": "58ae1e7c625491e9eceebdc9120ff009361106fa", "url": "https://api.github.com/repos/rust-lang/rust/commits/58ae1e7c625491e9eceebdc9120ff009361106fa", "html_url": "https://github.com/rust-lang/rust/commit/58ae1e7c625491e9eceebdc9120ff009361106fa"}], "stats": {"total": 5, "additions": 3, "deletions": 2}, "files": [{"sha": "9780a12a4028ee4185fdaf9812bfe9481dac989e", "filename": "src/doc/guide-pointers.md", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/ce2bab68d69ee04e17c0165dbdb7b583d5a7c991/src%2Fdoc%2Fguide-pointers.md", "raw_url": "https://github.com/rust-lang/rust/raw/ce2bab68d69ee04e17c0165dbdb7b583d5a7c991/src%2Fdoc%2Fguide-pointers.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Fguide-pointers.md?ref=ce2bab68d69ee04e17c0165dbdb7b583d5a7c991", "patch": "@@ -430,8 +430,9 @@ great detail, so if you want the full details, check that out.\n # Returning Pointers\n \n We've talked a lot about functions that accept various kinds of pointers, but\n-what about returning them? Here's the rule of thumb: only return a unique or\n-managed pointer if you were given one in the first place.\n+what about returning them? In general, it is better to let the caller decide\n+how to use a function's output, instead of assuming a certain type of pointer\n+is best.\n \n What does that mean? Don't do this:\n "}]}