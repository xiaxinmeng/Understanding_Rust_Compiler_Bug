{"sha": "d7cdd56df49436f59cecd08fef8d8114db7cb76a", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ3Y2RkNTZkZjQ5NDM2ZjU5Y2VjZDA4ZmVmOGQ4MTE0ZGI3Y2I3NmE=", "commit": {"author": {"name": "Ho\u00e0ng \u0110\u1ee9c Hi\u1ebfu", "email": "github@hdhoang.space", "date": "2018-01-01T07:03:49Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2018-01-01T07:03:49Z"}, "message": "memchr: fix variable name in docstrings", "tree": {"sha": "959687c9044ee9ca02727311bc06cb595a159eaa", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/959687c9044ee9ca02727311bc06cb595a159eaa"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d7cdd56df49436f59cecd08fef8d8114db7cb76a", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJaSd1VCRBK7hj4Ov3rIwAAdHIIAFo6ez0FT2LD3Vll5NWprVeC\n7Oy5AYdYuqTqdgbTXxRaQdw8AYdX6eqncwDuJzKeywPxOVUi0/l2L/XWL3BZceoH\nojby8eiDoGXqIi2zwfONNWfbYrDTd61IzluLE103eSciDjqfdmkiYmu4ti/i5XM6\nMbU+7eE8QlZo1NyYRc02CdTDEKM7rSLRE8CxEh5jdMphEKNIAh89+JApMFmi3k8u\nDDsoB0JuL4pIr04EFtizAX3v0DpfDQrVxKpRfcgoekexw6oT02PZ3lAapS+aYThr\neqbEMMLjNiGiZmA2SzTOoxmrbO6F4iSwyttD5JtW/ugXMZwHApwR1O8IqEzHgUM=\n=ohxn\n-----END PGP SIGNATURE-----\n", "payload": "tree 959687c9044ee9ca02727311bc06cb595a159eaa\nparent 037bc651e56ca0bb92c053b31b87db5fa0dda22c\nauthor Ho\u00e0ng \u0110\u1ee9c Hi\u1ebfu <github@hdhoang.space> 1514790229 +0700\ncommitter GitHub <noreply@github.com> 1514790229 +0700\n\nmemchr: fix variable name in docstrings"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d7cdd56df49436f59cecd08fef8d8114db7cb76a", "html_url": "https://github.com/rust-lang/rust/commit/d7cdd56df49436f59cecd08fef8d8114db7cb76a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d7cdd56df49436f59cecd08fef8d8114db7cb76a/comments", "author": {"login": "hdhoang", "id": 12537, "node_id": "MDQ6VXNlcjEyNTM3", "avatar_url": "https://avatars.githubusercontent.com/u/12537?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hdhoang", "html_url": "https://github.com/hdhoang", "followers_url": "https://api.github.com/users/hdhoang/followers", "following_url": "https://api.github.com/users/hdhoang/following{/other_user}", "gists_url": "https://api.github.com/users/hdhoang/gists{/gist_id}", "starred_url": "https://api.github.com/users/hdhoang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hdhoang/subscriptions", "organizations_url": "https://api.github.com/users/hdhoang/orgs", "repos_url": "https://api.github.com/users/hdhoang/repos", "events_url": "https://api.github.com/users/hdhoang/events{/privacy}", "received_events_url": "https://api.github.com/users/hdhoang/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "037bc651e56ca0bb92c053b31b87db5fa0dda22c", "url": "https://api.github.com/repos/rust-lang/rust/commits/037bc651e56ca0bb92c053b31b87db5fa0dda22c", "html_url": "https://github.com/rust-lang/rust/commit/037bc651e56ca0bb92c053b31b87db5fa0dda22c"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "69c9cb37dcfd3278aa1a6a347a35d51b98bba32a", "filename": "src/libcore/slice/memchr.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/d7cdd56df49436f59cecd08fef8d8114db7cb76a/src%2Flibcore%2Fslice%2Fmemchr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d7cdd56df49436f59cecd08fef8d8114db7cb76a/src%2Flibcore%2Fslice%2Fmemchr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fslice%2Fmemchr.rs?ref=d7cdd56df49436f59cecd08fef8d8114db7cb76a", "patch": "@@ -56,7 +56,7 @@ fn repeat_byte(b: u8) -> usize {\n     rep\n }\n \n-/// Return the first index matching the byte `a` in `text`.\n+/// Return the first index matching the byte `x` in `text`.\n pub fn memchr(x: u8, text: &[u8]) -> Option<usize> {\n     // Scan for a single byte value by reading two `usize` words at a time.\n     //\n@@ -101,7 +101,7 @@ pub fn memchr(x: u8, text: &[u8]) -> Option<usize> {\n     text[offset..].iter().position(|elt| *elt == x).map(|i| offset + i)\n }\n \n-/// Return the last index matching the byte `a` in `text`.\n+/// Return the last index matching the byte `x` in `text`.\n pub fn memrchr(x: u8, text: &[u8]) -> Option<usize> {\n     // Scan for a single byte value by reading two `usize` words at a time.\n     //"}]}