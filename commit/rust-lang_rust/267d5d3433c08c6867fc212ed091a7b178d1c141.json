{"sha": "267d5d3433c08c6867fc212ed091a7b178d1c141", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI2N2Q1ZDM0MzNjMDhjNjg2N2ZjMjEyZWQwOTFhN2IxNzhkMWMxNDE=", "commit": {"author": {"name": "Michael Wright", "email": "mikerite@lavabit.com", "date": "2018-10-12T06:09:04Z"}, "committer": {"name": "flip1995", "email": "hello@philkrones.com", "date": "2018-10-29T19:28:06Z"}, "message": "Fix lint_without_lint_pass", "tree": {"sha": "a88a793b42a1615b9f5eab6fc4cde7618fed68e6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a88a793b42a1615b9f5eab6fc4cde7618fed68e6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/267d5d3433c08c6867fc212ed091a7b178d1c141", "comment_count": 0, "verification": {"verified": false, "reason": "unknown_key", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE46kBTF5vnyuSPg0W6OiXpYcOQcIFAlvXX0YACgkQ6OiXpYcO\nQcKiWA//VZ/AdTlzfFHD6YGIqxw1B67scSuz5+LdY25pw69r11R3Dg/np87M1NwY\nQxjlp0Ug9fDahRhLjQiFSwIWfupVC0zhH7KIT8AngoKkwhMj0uif+nXn88ZtT/cH\nXpr2tUMjUqvkOP942dyRji2EI/T0WA7KEgdXzPTxyYXgcvh4fJXtbCCOOE2IJZ4+\n4rX3B/jNaz9XfQyCoRDO3vsEUA5oHduLvBoSk6g9cyaWCMSTxT7eLKIMsNG0TG+V\nhadGMcNQ/koDGoyYCxiwJISGt7jtGTCHP2cYSXLLCHfkQkRZUuYwCE40BsmsluUZ\nPUaooDWMDOQ0Dem1hFPy73DRTXhO/fABKZwxchEVledvRKLvc3lNg60RkDdfNpGK\nNSqXAfbAEz8VGTTi0DGH9jPCrS3Br0YJcxqYDDpN8R5km2MKZAxtWeq4RVbpdP/E\ng/VzNJBX8O+h5LgO60xzMj9UhN/MnLmzvwJ/nk6bDbnUuJS6IiRV3zTrz3eRSvfZ\nempPFzUmS+Mmd+yQsvMr+ZBKpWjMcrph665vxoV9FuSZ0XB6mrx00S7/q1F7tPC5\nSU/LF+8QCzHLoGu+Jw50ZbkaVnZey9kmlXDVD5vGQj5A7nu3ppPw20awetz/0FAv\nV8N2hH0m7wUsaWj/moUfhl62HnwtfDfxgsJxOHXmGszdOmlxJis=\n=wmb8\n-----END PGP SIGNATURE-----", "payload": "tree a88a793b42a1615b9f5eab6fc4cde7618fed68e6\nparent 3971c42458e14104186e56997fc53c90cec584a5\nauthor Michael Wright <mikerite@lavabit.com> 1539324544 +0200\ncommitter flip1995 <hello@philkrones.com> 1540841286 +0100\n\nFix lint_without_lint_pass\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/267d5d3433c08c6867fc212ed091a7b178d1c141", "html_url": "https://github.com/rust-lang/rust/commit/267d5d3433c08c6867fc212ed091a7b178d1c141", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/267d5d3433c08c6867fc212ed091a7b178d1c141/comments", "author": null, "committer": {"login": "flip1995", "id": 9744647, "node_id": "MDQ6VXNlcjk3NDQ2NDc=", "avatar_url": "https://avatars.githubusercontent.com/u/9744647?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flip1995", "html_url": "https://github.com/flip1995", "followers_url": "https://api.github.com/users/flip1995/followers", "following_url": "https://api.github.com/users/flip1995/following{/other_user}", "gists_url": "https://api.github.com/users/flip1995/gists{/gist_id}", "starred_url": "https://api.github.com/users/flip1995/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flip1995/subscriptions", "organizations_url": "https://api.github.com/users/flip1995/orgs", "repos_url": "https://api.github.com/users/flip1995/repos", "events_url": "https://api.github.com/users/flip1995/events{/privacy}", "received_events_url": "https://api.github.com/users/flip1995/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3971c42458e14104186e56997fc53c90cec584a5", "url": "https://api.github.com/repos/rust-lang/rust/commits/3971c42458e14104186e56997fc53c90cec584a5", "html_url": "https://github.com/rust-lang/rust/commit/3971c42458e14104186e56997fc53c90cec584a5"}], "stats": {"total": 57, "additions": 51, "deletions": 6}, "files": [{"sha": "207dc40fa1d7d240b69c142956f94256e6c63ad0", "filename": "clippy_lints/src/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/267d5d3433c08c6867fc212ed091a7b178d1c141/clippy_lints%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/267d5d3433c08c6867fc212ed091a7b178d1c141/clippy_lints%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flib.rs?ref=267d5d3433c08c6867fc212ed091a7b178d1c141", "patch": "@@ -48,6 +48,7 @@ use toml;\n \n // Currently, categories \"style\", \"correctness\", \"complexity\" and \"perf\" are enabled by default,\n // as said in the README.md of this repository. If this changes, please update README.md.\n+#[macro_export]\n macro_rules! declare_clippy_lint {\n     { pub $name:tt, style, $description:tt } => {\n         declare_tool_lint! { pub clippy::$name, Warn, $description, report_in_external_macro: true }"}, {"sha": "e89c2d28953a9604de49768675f2c8f5fd5ec367", "filename": "clippy_lints/src/utils/internal_lints.rs", "status": "modified", "additions": 10, "deletions": 6, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/267d5d3433c08c6867fc212ed091a7b178d1c141/clippy_lints%2Fsrc%2Futils%2Finternal_lints.rs", "raw_url": "https://github.com/rust-lang/rust/raw/267d5d3433c08c6867fc212ed091a7b178d1c141/clippy_lints%2Fsrc%2Futils%2Finternal_lints.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Futils%2Finternal_lints.rs?ref=267d5d3433c08c6867fc212ed091a7b178d1c141", "patch": "@@ -9,12 +9,13 @@\n \n \n use crate::utils::{\n-    match_qpath, match_type, paths, span_help_and_lint, span_lint, span_lint_and_sugg, walk_ptrs_ty,\n+    match_def_path, match_qpath, match_type, paths, span_help_and_lint, span_lint, span_lint_and_sugg, walk_ptrs_ty,\n };\n use if_chain::if_chain;\n use crate::rustc::hir;\n use crate::rustc::hir::intravisit::{walk_expr, NestedVisitorMap, Visitor};\n use crate::rustc::hir::*;\n+use crate::rustc::hir::def::Def;\n use crate::rustc::lint::{EarlyContext, EarlyLintPass, LateContext, LateLintPass, LintArray, LintPass};\n use crate::rustc::{declare_tool_lint, lint_array};\n use crate::rustc_data_structures::fx::{FxHashMap, FxHashSet};\n@@ -161,7 +162,8 @@ impl LintPass for LintWithoutLintPass {\n impl<'a, 'tcx> LateLintPass<'a, 'tcx> for LintWithoutLintPass {\n     fn check_item(&mut self, cx: &LateContext<'a, 'tcx>, item: &'tcx Item) {\n         if let hir::ItemKind::Static(ref ty, MutImmutable, body_id) = item.node {\n-            if is_lint_ref_type(ty) {\n+\n+            if is_lint_ref_type(cx, ty) {\n                 self.declared_lints.insert(item.name, item.span);\n             } else if is_lint_array_type(ty) && item.name == \"ARRAY\" {\n                 if let VisibilityKind::Inherited = item.vis.node {\n@@ -203,19 +205,21 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for LintWithoutLintPass {\n     }\n }\n \n-fn is_lint_ref_type(ty: &Ty) -> bool {\n+fn is_lint_ref_type<'tcx>(cx: &LateContext<'_, 'tcx>, ty: &Ty) -> bool {\n     if let TyKind::Rptr(\n         _,\n         MutTy {\n             ty: ref inner,\n             mutbl: MutImmutable,\n         },\n-    ) = ty.node\n-    {\n+    ) = ty.node {\n         if let TyKind::Path(ref path) = inner.node {\n-            return match_qpath(path, &paths::LINT);\n+            if let Def::Struct(def_id) = cx.tables.qpath_def(path, inner.hir_id) {\n+                return match_def_path(cx.tcx, def_id, &paths::LINT);\n+            }\n         }\n     }\n+\n     false\n }\n "}, {"sha": "41e7fea1abe8ab980b9f9efbf0d70e0943e19c3e", "filename": "tests/ui/lint_without_lint_pass.rs", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/267d5d3433c08c6867fc212ed091a7b178d1c141/tests%2Fui%2Flint_without_lint_pass.rs", "raw_url": "https://github.com/rust-lang/rust/raw/267d5d3433c08c6867fc212ed091a7b178d1c141/tests%2Fui%2Flint_without_lint_pass.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Flint_without_lint_pass.rs?ref=267d5d3433c08c6867fc212ed091a7b178d1c141", "patch": "@@ -0,0 +1,19 @@\n+#![deny(clippy::internal)]\n+\n+#![feature(rustc_private)]\n+\n+#[macro_use]\n+extern crate rustc;\n+\n+#[macro_use]\n+extern crate clippy_lints;\n+\n+declare_clippy_lint!\n+{\n+    pub TEST_LINT,\n+    correctness,\n+    \"\"\n+}\n+\n+fn main() {\n+}"}, {"sha": "48d511ce92e592054da64659120f00508a59209b", "filename": "tests/ui/lint_without_lint_pass.stderr", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/267d5d3433c08c6867fc212ed091a7b178d1c141/tests%2Fui%2Flint_without_lint_pass.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/267d5d3433c08c6867fc212ed091a7b178d1c141/tests%2Fui%2Flint_without_lint_pass.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Flint_without_lint_pass.stderr?ref=267d5d3433c08c6867fc212ed091a7b178d1c141", "patch": "@@ -0,0 +1,21 @@\n+error: the lint `TEST_LINT` is not added to any `LintPass`\n+  --> $DIR/lint_without_lint_pass.rs:11:1\n+   |\n+11 | / declare_clippy_lint!\n+12 | | {\n+13 | |     pub TEST_LINT,\n+14 | |     correctness,\n+15 | |     \"\"\n+16 | | }\n+   | |_^\n+   |\n+note: lint level defined here\n+  --> $DIR/lint_without_lint_pass.rs:1:9\n+   |\n+1  | #![deny(clippy::internal)]\n+   |         ^^^^^^^^^^^^^^^^\n+   = note: #[deny(clippy::lint_without_lint_pass)] implied by #[deny(clippy::internal)]\n+   = note: this error originates in a macro outside of the current crate (in Nightly builds, run with -Z external-macro-backtrace for more info)\n+\n+error: aborting due to previous error\n+"}]}