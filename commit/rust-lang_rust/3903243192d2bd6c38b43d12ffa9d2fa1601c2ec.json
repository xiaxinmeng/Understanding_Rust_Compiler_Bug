{"sha": "3903243192d2bd6c38b43d12ffa9d2fa1601c2ec", "node_id": "C_kwDOAAsO6NoAKDM5MDMyNDMxOTJkMmJkNmMzOGI0M2QxMmZmYTlkMmZhMTYwMWMyZWM", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-08-15T16:06:59Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-08-15T16:06:59Z"}, "message": "Auto merge of #13027 - jonas-schievink:fix-mismatch-with-trailing-empty-macro, r=jonas-schievink\n\nfix: Fix incorrect type mismatch with `cfg_if!` and other macros in expression position\n\nFixes https://github.com/rust-lang/rust-analyzer/issues/12940\n\nThis is a bit of a hack, ideally `MacroStmts` would not exist at all after HIR lowering, but that requires changing how the lowering code works.", "tree": {"sha": "0ed3c05dd5f24168b63ef5e048ea91bcfcc18e13", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0ed3c05dd5f24168b63ef5e048ea91bcfcc18e13"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3903243192d2bd6c38b43d12ffa9d2fa1601c2ec", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3903243192d2bd6c38b43d12ffa9d2fa1601c2ec", "html_url": "https://github.com/rust-lang/rust/commit/3903243192d2bd6c38b43d12ffa9d2fa1601c2ec", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3903243192d2bd6c38b43d12ffa9d2fa1601c2ec/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3561433ef2ee6eff86b99be4d9e59114c7f0f875", "url": "https://api.github.com/repos/rust-lang/rust/commits/3561433ef2ee6eff86b99be4d9e59114c7f0f875", "html_url": "https://github.com/rust-lang/rust/commit/3561433ef2ee6eff86b99be4d9e59114c7f0f875"}, {"sha": "8c60813096fca9ce5b81bdb22894ca1e1240fdb5", "url": "https://api.github.com/repos/rust-lang/rust/commits/8c60813096fca9ce5b81bdb22894ca1e1240fdb5", "html_url": "https://github.com/rust-lang/rust/commit/8c60813096fca9ce5b81bdb22894ca1e1240fdb5"}], "stats": {"total": 27, "additions": 26, "deletions": 1}, "files": [{"sha": "f6ec8bf7e9e0b4475302dfb6ed17b3c0e8c44d88", "filename": "crates/hir-def/src/body/lower.rs", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/3903243192d2bd6c38b43d12ffa9d2fa1601c2ec/crates%2Fhir-def%2Fsrc%2Fbody%2Flower.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3903243192d2bd6c38b43d12ffa9d2fa1601c2ec/crates%2Fhir-def%2Fsrc%2Fbody%2Flower.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir-def%2Fsrc%2Fbody%2Flower.rs?ref=3903243192d2bd6c38b43d12ffa9d2fa1601c2ec", "patch": "@@ -551,9 +551,17 @@ impl ExprCollector<'_> {\n                 }\n             }\n             ast::Expr::MacroStmts(e) => {\n-                let statements = e.statements().filter_map(|s| self.collect_stmt(s)).collect();\n+                let statements: Box<[_]> =\n+                    e.statements().filter_map(|s| self.collect_stmt(s)).collect();\n                 let tail = e.expr().map(|e| self.collect_expr(e));\n \n+                if e.syntax().children().next().is_none() {\n+                    // HACK: make sure that macros that expand to nothing aren't treated as a `()`\n+                    // expression when used in block tail position.\n+                    cov_mark::hit!(empty_macro_in_trailing_position_is_removed);\n+                    return None;\n+                }\n+\n                 self.alloc_expr(Expr::MacroStmts { tail, statements }, syntax_ptr)\n             }\n             ast::Expr::UnderscoreExpr(_) => self.alloc_expr(Expr::Underscore, syntax_ptr),"}, {"sha": "1b5ed0603bfd137696aeb4fd7c79cf86bf8cb46f", "filename": "crates/hir-ty/src/tests/regression.rs", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/3903243192d2bd6c38b43d12ffa9d2fa1601c2ec/crates%2Fhir-ty%2Fsrc%2Ftests%2Fregression.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3903243192d2bd6c38b43d12ffa9d2fa1601c2ec/crates%2Fhir-ty%2Fsrc%2Ftests%2Fregression.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir-ty%2Fsrc%2Ftests%2Fregression.rs?ref=3903243192d2bd6c38b43d12ffa9d2fa1601c2ec", "patch": "@@ -1648,3 +1648,20 @@ fn main() {\n         \"#]],\n     );\n }\n+\n+#[test]\n+fn trailing_empty_macro() {\n+    cov_mark::check!(empty_macro_in_trailing_position_is_removed);\n+    check_no_mismatches(\n+        r#\"\n+macro_rules! m2 {\n+    ($($t:tt)*) => {$($t)*};\n+}\n+\n+fn macrostmts() -> u8 {\n+    m2! { 0 }\n+    m2! {}\n+}\n+    \"#,\n+    );\n+}"}]}