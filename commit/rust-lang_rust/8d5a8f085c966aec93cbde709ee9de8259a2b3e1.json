{"sha": "8d5a8f085c966aec93cbde709ee9de8259a2b3e1", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhkNWE4ZjA4NWM5NjZhZWM5M2NiZGU3MDllZTlkZTgyNTlhMmIzZTE=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-01-31T12:22:55Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-01-31T20:23:30Z"}, "message": "binders boilerplate", "tree": {"sha": "62d213e562eeb9df070c6dee8a6bb268c427f8ab", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/62d213e562eeb9df070c6dee8a6bb268c427f8ab"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8d5a8f085c966aec93cbde709ee9de8259a2b3e1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8d5a8f085c966aec93cbde709ee9de8259a2b3e1", "html_url": "https://github.com/rust-lang/rust/commit/8d5a8f085c966aec93cbde709ee9de8259a2b3e1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8d5a8f085c966aec93cbde709ee9de8259a2b3e1/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2def5b4e6f05241862af30d27a547c562693f678", "url": "https://api.github.com/repos/rust-lang/rust/commits/2def5b4e6f05241862af30d27a547c562693f678", "html_url": "https://github.com/rust-lang/rust/commit/2def5b4e6f05241862af30d27a547c562693f678"}], "stats": {"total": 44, "additions": 42, "deletions": 2}, "files": [{"sha": "f55c337da6f670a950d163472e1417762c9da87b", "filename": "crates/ra_macros/src/mbe_expander.rs", "status": "modified", "additions": 42, "deletions": 2, "changes": 44, "blob_url": "https://github.com/rust-lang/rust/blob/8d5a8f085c966aec93cbde709ee9de8259a2b3e1/crates%2Fra_macros%2Fsrc%2Fmbe_expander.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8d5a8f085c966aec93cbde709ee9de8259a2b3e1/crates%2Fra_macros%2Fsrc%2Fmbe_expander.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_macros%2Fsrc%2Fmbe_expander.rs?ref=8d5a8f085c966aec93cbde709ee9de8259a2b3e1", "patch": "@@ -14,11 +14,51 @@ fn expand_rule(rule: &mbe::Rule, input: &tt::Subtree) -> Option<tt::Subtree> {\n \n #[derive(Debug, Default)]\n struct Bindings {\n-    inner: FxHashMap<SmolStr, tt::TokenTree>,\n+    inner: FxHashMap<SmolStr, Binding>,\n }\n \n+#[derive(Debug)]\n+enum Binding {\n+    Simple(tt::TokenTree),\n+    Nested(Vec<Binding>),\n+}\n+\n+/*\n+\n+macro_rules! impl_froms {\n+    ($e:ident: $($v:ident),*) => {\n+        $(\n+            impl From<$v> for $e {\n+                fn from(it: $v) -> $e {\n+                    $e::$v(it)\n+                }\n+            }\n+        )*\n+    }\n+}\n+\n+impl_froms! (Foo: Bar, Baz)\n+\n+*/\n+\n fn match_lhs(pattern: &mbe::Subtree, input: &tt::Subtree) -> Option<Bindings> {\n-    Some(Bindings::default())\n+    let mut res = Bindings::default();\n+    for pat in pattern.token_trees.iter() {\n+        match pat {\n+            mbe::TokenTree::Leaf(leaf) => match leaf {\n+                mbe::Leaf::Var(mbe::Var { text, kind }) => {\n+                    let kind = kind.clone()?;\n+                    match kind.as_str() {\n+                        \"ident\" => (),\n+                        _ => return None,\n+                    }\n+                }\n+                _ => return None,\n+            },\n+            _ => {}\n+        }\n+    }\n+    Some(res)\n }\n \n fn expand_rhs(template: &mbe::Subtree, bindings: &Bindings) -> Option<tt::Subtree> {"}]}