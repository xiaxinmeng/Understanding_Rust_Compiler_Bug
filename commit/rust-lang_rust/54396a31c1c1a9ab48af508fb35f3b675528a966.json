{"sha": "54396a31c1c1a9ab48af508fb35f3b675528a966", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU0Mzk2YTMxYzFjMWE5YWI0OGFmNTA4ZmIzNWYzYjY3NTUyOGE5NjY=", "commit": {"author": {"name": "Greg Chapple", "email": "gregchapple1@gmail.com", "date": "2016-01-15T16:51:13Z"}, "committer": {"name": "Greg Chapple", "email": "gregchapple1@gmail.com", "date": "2016-01-22T20:45:04Z"}, "message": "Scaffold internals docs & add initial overview", "tree": {"sha": "200b49915ffbce306638fc7fcc27e80b03808aab", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/200b49915ffbce306638fc7fcc27e80b03808aab"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/54396a31c1c1a9ab48af508fb35f3b675528a966", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/54396a31c1c1a9ab48af508fb35f3b675528a966", "html_url": "https://github.com/rust-lang/rust/commit/54396a31c1c1a9ab48af508fb35f3b675528a966", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/54396a31c1c1a9ab48af508fb35f3b675528a966/comments", "author": {"login": "gchp", "id": 1315394, "node_id": "MDQ6VXNlcjEzMTUzOTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1315394?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gchp", "html_url": "https://github.com/gchp", "followers_url": "https://api.github.com/users/gchp/followers", "following_url": "https://api.github.com/users/gchp/following{/other_user}", "gists_url": "https://api.github.com/users/gchp/gists{/gist_id}", "starred_url": "https://api.github.com/users/gchp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gchp/subscriptions", "organizations_url": "https://api.github.com/users/gchp/orgs", "repos_url": "https://api.github.com/users/gchp/repos", "events_url": "https://api.github.com/users/gchp/events{/privacy}", "received_events_url": "https://api.github.com/users/gchp/received_events", "type": "User", "site_admin": false}, "committer": {"login": "gchp", "id": 1315394, "node_id": "MDQ6VXNlcjEzMTUzOTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1315394?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gchp", "html_url": "https://github.com/gchp", "followers_url": "https://api.github.com/users/gchp/followers", "following_url": "https://api.github.com/users/gchp/following{/other_user}", "gists_url": "https://api.github.com/users/gchp/gists{/gist_id}", "starred_url": "https://api.github.com/users/gchp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gchp/subscriptions", "organizations_url": "https://api.github.com/users/gchp/orgs", "repos_url": "https://api.github.com/users/gchp/repos", "events_url": "https://api.github.com/users/gchp/events{/privacy}", "received_events_url": "https://api.github.com/users/gchp/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a70a60a02bca4c1fb75a0eb0ecf80acb73972f66", "url": "https://api.github.com/repos/rust-lang/rust/commits/a70a60a02bca4c1fb75a0eb0ecf80acb73972f66", "html_url": "https://github.com/rust-lang/rust/commit/a70a60a02bca4c1fb75a0eb0ecf80acb73972f66"}], "stats": {"total": 91, "additions": 90, "deletions": 1}, "files": [{"sha": "bbd03b644826eb27a8e5ec716425595001e8d7f4", "filename": "mk/docs.mk", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/54396a31c1c1a9ab48af508fb35f3b675528a966/mk%2Fdocs.mk", "raw_url": "https://github.com/rust-lang/rust/raw/54396a31c1c1a9ab48af508fb35f3b675528a966/mk%2Fdocs.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mk%2Fdocs.mk?ref=54396a31c1c1a9ab48af508fb35f3b675528a966", "patch": "@@ -65,7 +65,7 @@ ERR_IDX_GEN = $(RPATH_VAR2_T_$(CFG_BUILD)_H_$(CFG_BUILD)) $(ERR_IDX_GEN_EXE)\n \n D := $(S)src/doc\n \n-DOC_TARGETS := book nomicon style error-index\n+DOC_TARGETS := book nomicon style error-index internals\n COMPILER_DOC_TARGETS :=\n DOC_L10N_TARGETS :=\n \n@@ -208,6 +208,13 @@ doc/nomicon/index.html: $(RUSTBOOK_EXE) $(wildcard $(S)/src/doc/nomicon/*.md) |\n \t$(Q)rm -rf doc/nomicon\n \t$(Q)$(RUSTBOOK) build $(S)src/doc/nomicon doc/nomicon\n \n+internals: doc/internals/index.html\n+\n+doc/internals/index.html: $(RUSTBOOK_EXE) $(wildcard $(S)/src/doc/internals/*.md) | doc/\n+\t@$(call E, rustbook: $@)\n+\t$(Q)rm -rf doc/internals\n+\t$(Q)$(RUSTBOOK) build $(S)src/doc/internals doc/internals\n+\n style: doc/style/index.html\n \n doc/style/index.html: $(RUSTBOOK_EXE) $(wildcard $(S)/src/doc/style/*.md) | doc/"}, {"sha": "e76b9619778bad7bb492556f95803430ce80b59a", "filename": "src/doc/internals/README.md", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/54396a31c1c1a9ab48af508fb35f3b675528a966/src%2Fdoc%2Finternals%2FREADME.md", "raw_url": "https://github.com/rust-lang/rust/raw/54396a31c1c1a9ab48af508fb35f3b675528a966/src%2Fdoc%2Finternals%2FREADME.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Finternals%2FREADME.md?ref=54396a31c1c1a9ab48af508fb35f3b675528a966", "patch": "@@ -0,0 +1,12 @@\n+% Rust Compiler Internals\n+\n+The Rust compiler is a complex project. Upon first inspection, it can be a\n+daunting task to attempt to understand all the various crates & modules, the\n+flow of data and the internal data structures.\n+\n+This guide aims to give the reader a greater understanding of the inner\n+workings of the compiler along with some in-depth views into the individual\n+components of which it is composed.\n+\n+**NOTE**: This guide assumes a working knowledge of Rust & compilers in\n+general."}, {"sha": "1d2ddea53f436b37bcdad37484fe8c99cb864756", "filename": "src/doc/internals/SUMMARY.md", "status": "added", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/54396a31c1c1a9ab48af508fb35f3b675528a966/src%2Fdoc%2Finternals%2FSUMMARY.md", "raw_url": "https://github.com/rust-lang/rust/raw/54396a31c1c1a9ab48af508fb35f3b675528a966/src%2Fdoc%2Finternals%2FSUMMARY.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Finternals%2FSUMMARY.md?ref=54396a31c1c1a9ab48af508fb35f3b675528a966", "patch": "@@ -0,0 +1,3 @@\n+# Summary\n+\n+* [Overview](overview.md)"}, {"sha": "87f17793c4e0fb7041ab078226d8843c9063db40", "filename": "src/doc/internals/overview.md", "status": "added", "additions": 67, "deletions": 0, "changes": 67, "blob_url": "https://github.com/rust-lang/rust/blob/54396a31c1c1a9ab48af508fb35f3b675528a966/src%2Fdoc%2Finternals%2Foverview.md", "raw_url": "https://github.com/rust-lang/rust/raw/54396a31c1c1a9ab48af508fb35f3b675528a966/src%2Fdoc%2Finternals%2Foverview.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Finternals%2Foverview.md?ref=54396a31c1c1a9ab48af508fb35f3b675528a966", "patch": "@@ -0,0 +1,67 @@\n+% Overview\n+\n+The Rust compiler is comprised of six main compilation phases.\n+\n+1. Parsing input\n+2. Configuration & expanding (cfg rules & syntax extension expansion)\n+3. Running analysis passes\n+4. Translation to LLVM\n+5. LLVM passes\n+6. Linking\n+\n+Phase one is responsible for parsing & lexing the input to the compiler. The\n+output of this phase is an abstract syntax tree (AST). The AST at this point\n+includes all macro uses & attributes. This means code which will be later\n+expanded and/or removed due to `cfg` attributes is still present in this\n+version of the AST. Parsing abstracts away details about individual fies which\n+have been read into the AST.\n+\n+Phase two handles configuration and macro expansion. You can think of this\n+phase as a function acting on the AST from the previous phase. The input for\n+this phase is the unexpanded AST from phase one, and the output is an expanded\n+version of the same AST. This phase will expand all macros & syntax\n+extensions and will evaluate all `cfg` attributes, potentially removing some\n+code. The resulting AST will not contain any macros or `macro_use` statements.\n+\n+The code for these first two phases is in [`libsyntax`][libsyntax].\n+\n+After this phase, the compiler allocates IDs to each node in the AST\n+(technically not every node, but most of them). If we are writing out\n+dependencies, that happens now.\n+\n+The third phase is analysis. This is the most complex phase in the compiler,\n+and makes up much of the code. This phase included name resolution, type\n+checking, borrow checking, type & lifetime inference, trait selection, method\n+selection, linting and so on. Most of the error detection in the compiler comes\n+from this phase (with the exception of parse errors which arise during\n+parsing). The \"output\" of this phase is a set of side tables containing\n+semantic information about the source program. The analysis code is in\n+[`librustc`][rustc] and some other crates with the `librustc_` prefix.\n+\n+The fourth phase is translation. This phase translates the AST (and the side\n+tables from the previous phase) into LLVM IR (intermediate representation).\n+This is achieved by calling into the LLVM libraries rather than writing IR\n+directly to a file. The code for this is in [`librustc_trans`][trans].\n+\n+Phase five runs the LLVM backend. This runs LLVM's optimization passes on the\n+generated IR and generates machine code resulting in object files. This phase\n+is not really part of the Rust compiler, as LLVM carries out all the work.\n+The interface between LLVM and Rust is in [`librustc_llvm`][llvm].\n+\n+The final phase, phase six, links the object files into an executable. This is\n+again outsourced to other tools and not performed by the Rust compiler\n+directly. The interface is in [`librustc_back`][back] (which also contains some\n+things used primarily during translation).\n+\n+A module called the driver coordinates all these phases. It handles all the\n+highest level coordination of compilation from parsing command line arguments\n+all the way to invoking the linker to produce an executable.\n+\n+The next section of the guide covers the driver & individual phases in more\n+detail.\n+\n+[libsyntax]: https://github.com/rust-lang/rust/tree/1.6.0/src/libsyntax/\n+[trans]: https://github.com/rust-lang/rust/tree/1.6.0/src/librustc_trans/\n+[llvm]: https://github.com/rust-lang/rust/tree/1.6.0/src/librustc_llvm/\n+[back]: https://github.com/rust-lang/rust/tree/1.6.0/src/librustc_back/\n+[rustc]: https://github.com/rust-lang/rust/tree/1.6.0/src/librustc/"}]}