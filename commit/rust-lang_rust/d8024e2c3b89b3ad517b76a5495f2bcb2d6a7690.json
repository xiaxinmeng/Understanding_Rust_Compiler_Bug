{"sha": "d8024e2c3b89b3ad517b76a5495f2bcb2d6a7690", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ4MDI0ZTJjM2I4OWIzYWQ1MTdiNzZhNTQ5NWYyYmNiMmQ2YTc2OTA=", "commit": {"author": {"name": "Tim Chevalier", "email": "chevalier@alum.wellesley.edu", "date": "2013-04-29T21:23:22Z"}, "committer": {"name": "Tim Chevalier", "email": "chevalier@alum.wellesley.edu", "date": "2013-04-29T21:38:39Z"}, "message": "rustc: Change At to Managed and Uniq to Owned", "tree": {"sha": "3383e1b0c3e65d7d43819fcd22b459abb59722cd", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3383e1b0c3e65d7d43819fcd22b459abb59722cd"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d8024e2c3b89b3ad517b76a5495f2bcb2d6a7690", "comment_count": 4, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d8024e2c3b89b3ad517b76a5495f2bcb2d6a7690", "html_url": "https://github.com/rust-lang/rust/commit/d8024e2c3b89b3ad517b76a5495f2bcb2d6a7690", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d8024e2c3b89b3ad517b76a5495f2bcb2d6a7690/comments", "author": {"login": "catamorphism", "id": 427212, "node_id": "MDQ6VXNlcjQyNzIxMg==", "avatar_url": "https://avatars.githubusercontent.com/u/427212?v=4", "gravatar_id": "", "url": "https://api.github.com/users/catamorphism", "html_url": "https://github.com/catamorphism", "followers_url": "https://api.github.com/users/catamorphism/followers", "following_url": "https://api.github.com/users/catamorphism/following{/other_user}", "gists_url": "https://api.github.com/users/catamorphism/gists{/gist_id}", "starred_url": "https://api.github.com/users/catamorphism/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/catamorphism/subscriptions", "organizations_url": "https://api.github.com/users/catamorphism/orgs", "repos_url": "https://api.github.com/users/catamorphism/repos", "events_url": "https://api.github.com/users/catamorphism/events{/privacy}", "received_events_url": "https://api.github.com/users/catamorphism/received_events", "type": "User", "site_admin": false}, "committer": {"login": "catamorphism", "id": 427212, "node_id": "MDQ6VXNlcjQyNzIxMg==", "avatar_url": "https://avatars.githubusercontent.com/u/427212?v=4", "gravatar_id": "", "url": "https://api.github.com/users/catamorphism", "html_url": "https://github.com/catamorphism", "followers_url": "https://api.github.com/users/catamorphism/followers", "following_url": "https://api.github.com/users/catamorphism/following{/other_user}", "gists_url": "https://api.github.com/users/catamorphism/gists{/gist_id}", "starred_url": "https://api.github.com/users/catamorphism/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/catamorphism/subscriptions", "organizations_url": "https://api.github.com/users/catamorphism/orgs", "repos_url": "https://api.github.com/users/catamorphism/repos", "events_url": "https://api.github.com/users/catamorphism/events{/privacy}", "received_events_url": "https://api.github.com/users/catamorphism/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "edc11a9f09060b355010b8cc71da45c4f35eadf0", "url": "https://api.github.com/repos/rust-lang/rust/commits/edc11a9f09060b355010b8cc71da45c4f35eadf0", "html_url": "https://github.com/rust-lang/rust/commit/edc11a9f09060b355010b8cc71da45c4f35eadf0"}], "stats": {"total": 14, "additions": 7, "deletions": 7}, "files": [{"sha": "e73cf440d407177bc02fe8ed71c85b603f3c8db1", "filename": "src/librustc/middle/typeck/check/_match.rs", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/d8024e2c3b89b3ad517b76a5495f2bcb2d6a7690/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fcheck%2F_match.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d8024e2c3b89b3ad517b76a5495f2bcb2d6a7690/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fcheck%2F_match.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fcheck%2F_match.rs?ref=d8024e2c3b89b3ad517b76a5495f2bcb2d6a7690", "patch": "@@ -524,10 +524,10 @@ pub fn check_pat(pcx: &pat_ctxt, pat: @ast::pat, expected: ty::t) {\n         }\n       }\n       ast::pat_box(inner) => {\n-          check_pointer_pat(pcx, At, inner, pat.id, pat.span, expected);\n+          check_pointer_pat(pcx, Managed, inner, pat.id, pat.span, expected);\n       }\n       ast::pat_uniq(inner) => {\n-          check_pointer_pat(pcx, Uniq, inner, pat.id, pat.span, expected);\n+          check_pointer_pat(pcx, Owned, inner, pat.id, pat.span, expected);\n       }\n       ast::pat_region(inner) => {\n           check_pointer_pat(pcx, Borrowed, inner, pat.id, pat.span, expected);\n@@ -609,10 +609,10 @@ pub fn check_pointer_pat(pcx: &pat_ctxt,\n         fcx.write_ty(pat_id, expected);\n     };\n     match structure_of(fcx, span, expected) {\n-        ty::ty_box(e_inner) if pointer_kind == At => {\n+        ty::ty_box(e_inner) if pointer_kind == Managed => {\n             check_inner(e_inner);\n         }\n-        ty::ty_uniq(e_inner) if pointer_kind == Uniq => {\n+        ty::ty_uniq(e_inner) if pointer_kind == Owned => {\n             check_inner(e_inner);\n         }\n         ty::ty_rptr(_, e_inner) if pointer_kind == Borrowed => {\n@@ -626,8 +626,8 @@ pub fn check_pointer_pat(pcx: &pat_ctxt,\n                     fmt!(\"mismatched types: expected `%s` but found %s\",\n                          resolved_expected, actual)},\n                                                fmt!(\"an %s pattern\", match pointer_kind {\n-                                                   At => \"@-box\",\n-                                                   Uniq => \"~-box\",\n+                                                   Managed => \"@-box\",\n+                                                   Owned => \"~-box\",\n                                                    Borrowed => \"&-pointer\"\n                                                }),\n                     None);\n@@ -637,5 +637,5 @@ pub fn check_pointer_pat(pcx: &pat_ctxt,\n }\n \n #[deriving(Eq)]\n-enum PointerKind { At, Uniq, Borrowed }\n+enum PointerKind { Managed, Owned, Borrowed }\n "}]}