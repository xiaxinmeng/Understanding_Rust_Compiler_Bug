{"sha": "c18503f3ff9f81ed3b368246ade73e79dbd53282", "node_id": "C_kwDOAAsO6NoAKGMxODUwM2YzZmY5ZjgxZWQzYjM2ODI0NmFkZTczZTc5ZGJkNTMyODI", "commit": {"author": {"name": "David Wood", "email": "david.wood@huawei.com", "date": "2022-08-19T13:45:54Z"}, "committer": {"name": "Wonchul Lee", "email": "wonchul.dev@gmail.com", "date": "2022-08-23T21:50:44Z"}, "message": "errors: `IntoDiagnosticArg` for `io::Error`/paths\n\nAdd impls of `IntoDiagnosticArg` for `std::io::Error`, `std::path::Path`\nand `std::path::PathBuf`.\n\nSigned-off-by: David Wood <david.wood@huawei.com>", "tree": {"sha": "66b3e5a3832e8bc7f03cfda889412bbd57976fa8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/66b3e5a3832e8bc7f03cfda889412bbd57976fa8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c18503f3ff9f81ed3b368246ade73e79dbd53282", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEVsgfkNBKVHs50ooew8Dl1s6HEmoFAmMFS7QACgkQw8Dl1s6H\nEmo/QxAAseFKsqZ9p1RnGehFOi/m1MvKPkQ3weiLNCuTC1tcnbTelyuOaeqvxFPG\n3WBsInwuvgl+HdTiRxEYkJA6wgpxwvlIBC0NH1KAXW92yTLi4f/ZFVHsF+wxTV1L\nHtuMiwLR0xAqjDbJYFLfu46nY8dztQV2gMqCruDh3ugkYpesvhHoD0fWkDEp4pQv\n8/7Sy97lana8IeO1nXfP8Wl7iMhfl379mqTJh6AF1JQbTykcbIRSvW2+vuZ5S03c\niRYl+JysnTgApZkZaKJyTXFTb8gFChxgjcjpy+bhH9pOvkjSI7tPhiWESiHGpB+g\nz2PGKWPZeZ7KEGMGYQoZXMnnw1fVhDfIN9QbOaNSd1+96mJtGMnKO4Wgy6/VsIjI\n9ZKaeqwq2E9UACORRD++3VUELV/h0M8Cch2OHDxqwNKh4iaTnsB+JngmGXl3d+5c\nzBwSXswjaNaaXfT4Lf4GZWb1q+bgH6PhD8J2Ueuwkn0YWVThVg0LkJUs62CR+tTt\nuo39Vc6cw+qCrM3FXo5bkh4xVo8VwWI1df6PbOnG/RQUK4U8o7kwzxF8SV1iUuZf\na2LK/QoER0Y0Hu5IKB2RkN+q++FFokhpvp0uhiJ33hRSUVT2Fh4BadJiJC4skse6\nXb8ZB9B7UvS6hK51JvkwCOVPQM5g0vdJxM1wAOQe6Th3Gvvt3Z4=\n=J7Wt\n-----END PGP SIGNATURE-----", "payload": "tree 66b3e5a3832e8bc7f03cfda889412bbd57976fa8\nparent 9b95eef6ea3fc8a371241277698be881d4ec4bb7\nauthor David Wood <david.wood@huawei.com> 1660916754 +0100\ncommitter Wonchul Lee <wonchul.dev@gmail.com> 1661291444 +0900\n\nerrors: `IntoDiagnosticArg` for `io::Error`/paths\n\nAdd impls of `IntoDiagnosticArg` for `std::io::Error`, `std::path::Path`\nand `std::path::PathBuf`.\n\nSigned-off-by: David Wood <david.wood@huawei.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c18503f3ff9f81ed3b368246ade73e79dbd53282", "html_url": "https://github.com/rust-lang/rust/commit/c18503f3ff9f81ed3b368246ade73e79dbd53282", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c18503f3ff9f81ed3b368246ade73e79dbd53282/comments", "author": {"login": "davidtwco", "id": 1295100, "node_id": "MDQ6VXNlcjEyOTUxMDA=", "avatar_url": "https://avatars.githubusercontent.com/u/1295100?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidtwco", "html_url": "https://github.com/davidtwco", "followers_url": "https://api.github.com/users/davidtwco/followers", "following_url": "https://api.github.com/users/davidtwco/following{/other_user}", "gists_url": "https://api.github.com/users/davidtwco/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidtwco/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidtwco/subscriptions", "organizations_url": "https://api.github.com/users/davidtwco/orgs", "repos_url": "https://api.github.com/users/davidtwco/repos", "events_url": "https://api.github.com/users/davidtwco/events{/privacy}", "received_events_url": "https://api.github.com/users/davidtwco/received_events", "type": "User", "site_admin": false}, "committer": {"login": "wonchulee", "id": 3182824, "node_id": "MDQ6VXNlcjMxODI4MjQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3182824?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wonchulee", "html_url": "https://github.com/wonchulee", "followers_url": "https://api.github.com/users/wonchulee/followers", "following_url": "https://api.github.com/users/wonchulee/following{/other_user}", "gists_url": "https://api.github.com/users/wonchulee/gists{/gist_id}", "starred_url": "https://api.github.com/users/wonchulee/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wonchulee/subscriptions", "organizations_url": "https://api.github.com/users/wonchulee/orgs", "repos_url": "https://api.github.com/users/wonchulee/repos", "events_url": "https://api.github.com/users/wonchulee/events{/privacy}", "received_events_url": "https://api.github.com/users/wonchulee/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9b95eef6ea3fc8a371241277698be881d4ec4bb7", "url": "https://api.github.com/repos/rust-lang/rust/commits/9b95eef6ea3fc8a371241277698be881d4ec4bb7", "html_url": "https://github.com/rust-lang/rust/commit/9b95eef6ea3fc8a371241277698be881d4ec4bb7"}], "stats": {"total": 14, "additions": 14, "deletions": 0}, "files": [{"sha": "506198df4d8edd2e24896c219bd9e9416ee576ba", "filename": "compiler/rustc_errors/src/diagnostic.rs", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/c18503f3ff9f81ed3b368246ade73e79dbd53282/compiler%2Frustc_errors%2Fsrc%2Fdiagnostic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c18503f3ff9f81ed3b368246ade73e79dbd53282/compiler%2Frustc_errors%2Fsrc%2Fdiagnostic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_errors%2Fsrc%2Fdiagnostic.rs?ref=c18503f3ff9f81ed3b368246ade73e79dbd53282", "patch": "@@ -13,6 +13,7 @@ use rustc_span::{edition::Edition, Span, DUMMY_SP};\n use std::borrow::Cow;\n use std::fmt;\n use std::hash::{Hash, Hasher};\n+use std::path::{Path, PathBuf};\n \n /// Error type for `Diagnostic`'s `suggestions` field, indicating that\n /// `.disable_suggestions()` was called on the `Diagnostic`.\n@@ -83,6 +84,7 @@ into_diagnostic_arg_using_display!(\n     u64,\n     i128,\n     u128,\n+    std::io::Error,\n     std::num::NonZeroU32,\n     hir::Target,\n     Edition,\n@@ -124,6 +126,18 @@ impl IntoDiagnosticArg for String {\n     }\n }\n \n+impl<'a> IntoDiagnosticArg for &'a Path {\n+    fn into_diagnostic_arg(self) -> DiagnosticArgValue<'static> {\n+        DiagnosticArgValue::Str(Cow::Owned(self.display().to_string()))\n+    }\n+}\n+\n+impl IntoDiagnosticArg for PathBuf {\n+    fn into_diagnostic_arg(self) -> DiagnosticArgValue<'static> {\n+        DiagnosticArgValue::Str(Cow::Owned(self.display().to_string()))\n+    }\n+}\n+\n impl IntoDiagnosticArg for usize {\n     fn into_diagnostic_arg(self) -> DiagnosticArgValue<'static> {\n         DiagnosticArgValue::Number(self)"}]}