{"sha": "46a0e5436155ee8d48c1d9d73b2bb7c7ed60e33c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ2YTBlNTQzNjE1NWVlOGQ0OGMxZDlkNzNiMmJiN2M3ZWQ2MGUzM2M=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-06-24T05:20:52Z"}, "committer": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-06-24T05:20:52Z"}, "message": "Put 'if let' back into comment.", "tree": {"sha": "9bc03c6d06b06df5e11a1dcea6f453babd003cac", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9bc03c6d06b06df5e11a1dcea6f453babd003cac"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/46a0e5436155ee8d48c1d9d73b2bb7c7ed60e33c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/46a0e5436155ee8d48c1d9d73b2bb7c7ed60e33c", "html_url": "https://github.com/rust-lang/rust/commit/46a0e5436155ee8d48c1d9d73b2bb7c7ed60e33c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/46a0e5436155ee8d48c1d9d73b2bb7c7ed60e33c/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0373b007da796463c1376cd33e02b459bdc4276a", "url": "https://api.github.com/repos/rust-lang/rust/commits/0373b007da796463c1376cd33e02b459bdc4276a", "html_url": "https://github.com/rust-lang/rust/commit/0373b007da796463c1376cd33e02b459bdc4276a"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "1d2e50a7806ba70a474cc8450ff2915d173c2bcd", "filename": "clippy_lints/src/formatting.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/46a0e5436155ee8d48c1d9d73b2bb7c7ed60e33c/clippy_lints%2Fsrc%2Fformatting.rs", "raw_url": "https://github.com/rust-lang/rust/raw/46a0e5436155ee8d48c1d9d73b2bb7c7ed60e33c/clippy_lints%2Fsrc%2Fformatting.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fformatting.rs?ref=46a0e5436155ee8d48c1d9d73b2bb7c7ed60e33c", "patch": "@@ -245,7 +245,7 @@ fn is_block(expr: &ast::Expr) -> bool {\n     }\n }\n \n-/// Match `if` expressions and return the `then` and `else` block.\n+/// Match `if` or `if let` expressions and return the `then` and `else` block.\n fn unsugar_if(expr: &ast::Expr) -> Option<(&P<ast::Block>, &Option<P<ast::Expr>>)> {\n     match expr.node {\n         ast::ExprKind::If(_, ref then, ref else_) => Some((then, else_)),"}]}