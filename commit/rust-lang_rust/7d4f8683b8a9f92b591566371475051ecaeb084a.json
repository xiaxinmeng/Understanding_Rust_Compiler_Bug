{"sha": "7d4f8683b8a9f92b591566371475051ecaeb084a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdkNGY4NjgzYjhhOWY5MmI1OTE1NjYzNzE0NzUwNTFlY2FlYjA4NGE=", "commit": {"author": {"name": "Oliver Scherer", "email": "github35764891676564198441@oli-obk.de", "date": "2019-03-12T19:38:31Z"}, "committer": {"name": "Oliver Scherer", "email": "github35764891676564198441@oli-obk.de", "date": "2019-04-02T14:14:58Z"}, "message": "Don't dump diagnostics json if not absolutely necessary", "tree": {"sha": "b0f2aabbd5cbd8d3e16846e0f20623fb4bf3aa40", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b0f2aabbd5cbd8d3e16846e0f20623fb4bf3aa40"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7d4f8683b8a9f92b591566371475051ecaeb084a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7d4f8683b8a9f92b591566371475051ecaeb084a", "html_url": "https://github.com/rust-lang/rust/commit/7d4f8683b8a9f92b591566371475051ecaeb084a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7d4f8683b8a9f92b591566371475051ecaeb084a/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c26f6dbead2d03e323d4e96b35084c131d1be6da", "url": "https://api.github.com/repos/rust-lang/rust/commits/c26f6dbead2d03e323d4e96b35084c131d1be6da", "html_url": "https://github.com/rust-lang/rust/commit/c26f6dbead2d03e323d4e96b35084c131d1be6da"}], "stats": {"total": 13, "additions": 8, "deletions": 5}, "files": [{"sha": "a14b50aa5877c5765df8307fa06fc7fc061285cc", "filename": "src/tools/compiletest/src/json.rs", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/7d4f8683b8a9f92b591566371475051ecaeb084a/src%2Ftools%2Fcompiletest%2Fsrc%2Fjson.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7d4f8683b8a9f92b591566371475051ecaeb084a/src%2Ftools%2Fcompiletest%2Fsrc%2Fjson.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fcompiletest%2Fsrc%2Fjson.rs?ref=7d4f8683b8a9f92b591566371475051ecaeb084a", "patch": "@@ -62,19 +62,20 @@ struct DiagnosticCode {\n     explanation: Option<String>,\n }\n \n-pub fn extract_rendered(output: &str, proc_res: &ProcRes) -> String {\n+pub fn extract_rendered(output: &str) -> String {\n     output\n         .lines()\n         .filter_map(|line| {\n             if line.starts_with('{') {\n                 match serde_json::from_str::<Diagnostic>(line) {\n                     Ok(diagnostic) => diagnostic.rendered,\n                     Err(error) => {\n-                        proc_res.fatal(Some(&format!(\n+                        print!(\n                             \"failed to decode compiler output as json: \\\n                              `{}`\\nline: {}\\noutput: {}\",\n                             error, line, output\n-                        )));\n+                        );\n+                        panic!()\n                     }\n                 }\n             } else {"}, {"sha": "b1b918803af5028cbb4bf8c65429e48c8f9f40fe", "filename": "src/tools/compiletest/src/runtest.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/7d4f8683b8a9f92b591566371475051ecaeb084a/src%2Ftools%2Fcompiletest%2Fsrc%2Fruntest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7d4f8683b8a9f92b591566371475051ecaeb084a/src%2Ftools%2Fcompiletest%2Fsrc%2Fruntest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fcompiletest%2Fsrc%2Fruntest.rs?ref=7d4f8683b8a9f92b591566371475051ecaeb084a", "patch": "@@ -2760,7 +2760,7 @@ impl<'test> TestCx<'test> {\n         let stderr = if explicit {\n             proc_res.stderr.clone()\n         } else {\n-            json::extract_rendered(&proc_res.stderr, &proc_res)\n+            json::extract_rendered(&proc_res.stderr)\n         };\n \n         let normalized_stderr = self.normalize_output(&stderr, &self.props.normalize_stderr);\n@@ -3377,7 +3377,9 @@ impl ProcRes {\n              {}\\n\\\n              ------------------------------------------\\n\\\n              \\n\",\n-            self.status, self.cmdline, self.stdout, self.stderr\n+            self.status, self.cmdline,\n+            json::extract_rendered(&self.stdout),\n+            json::extract_rendered(&self.stderr),\n         );\n         panic!();\n     }"}]}