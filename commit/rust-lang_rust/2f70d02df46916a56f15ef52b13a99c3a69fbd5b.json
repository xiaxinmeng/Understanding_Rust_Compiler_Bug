{"sha": "2f70d02df46916a56f15ef52b13a99c3a69fbd5b", "node_id": "C_kwDOAAsO6NoAKDJmNzBkMDJkZjQ2OTE2YTU2ZjE1ZWY1MmIxM2E5OWMzYTY5ZmJkNWI", "commit": {"author": {"name": "Maybe Waffle", "email": "waffle.lapkin@gmail.com", "date": "2023-04-27T17:25:51Z"}, "committer": {"name": "Maybe Waffle", "email": "waffle.lapkin@gmail.com", "date": "2023-04-27T17:25:51Z"}, "message": "Fix compile test so it normalizes (un)expected error messages", "tree": {"sha": "ca63d6b32bb6c203b2ff5e7b6a147e7001c85b14", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ca63d6b32bb6c203b2ff5e7b6a147e7001c85b14"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2f70d02df46916a56f15ef52b13a99c3a69fbd5b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2f70d02df46916a56f15ef52b13a99c3a69fbd5b", "html_url": "https://github.com/rust-lang/rust/commit/2f70d02df46916a56f15ef52b13a99c3a69fbd5b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2f70d02df46916a56f15ef52b13a99c3a69fbd5b/comments", "author": {"login": "WaffleLapkin", "id": 38225716, "node_id": "MDQ6VXNlcjM4MjI1NzE2", "avatar_url": "https://avatars.githubusercontent.com/u/38225716?v=4", "gravatar_id": "", "url": "https://api.github.com/users/WaffleLapkin", "html_url": "https://github.com/WaffleLapkin", "followers_url": "https://api.github.com/users/WaffleLapkin/followers", "following_url": "https://api.github.com/users/WaffleLapkin/following{/other_user}", "gists_url": "https://api.github.com/users/WaffleLapkin/gists{/gist_id}", "starred_url": "https://api.github.com/users/WaffleLapkin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/WaffleLapkin/subscriptions", "organizations_url": "https://api.github.com/users/WaffleLapkin/orgs", "repos_url": "https://api.github.com/users/WaffleLapkin/repos", "events_url": "https://api.github.com/users/WaffleLapkin/events{/privacy}", "received_events_url": "https://api.github.com/users/WaffleLapkin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "WaffleLapkin", "id": 38225716, "node_id": "MDQ6VXNlcjM4MjI1NzE2", "avatar_url": "https://avatars.githubusercontent.com/u/38225716?v=4", "gravatar_id": "", "url": "https://api.github.com/users/WaffleLapkin", "html_url": "https://github.com/WaffleLapkin", "followers_url": "https://api.github.com/users/WaffleLapkin/followers", "following_url": "https://api.github.com/users/WaffleLapkin/following{/other_user}", "gists_url": "https://api.github.com/users/WaffleLapkin/gists{/gist_id}", "starred_url": "https://api.github.com/users/WaffleLapkin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/WaffleLapkin/subscriptions", "organizations_url": "https://api.github.com/users/WaffleLapkin/orgs", "repos_url": "https://api.github.com/users/WaffleLapkin/repos", "events_url": "https://api.github.com/users/WaffleLapkin/events{/privacy}", "received_events_url": "https://api.github.com/users/WaffleLapkin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "26417a85e7551115146f98c64ea4e433453b9b4b", "url": "https://api.github.com/repos/rust-lang/rust/commits/26417a85e7551115146f98c64ea4e433453b9b4b", "html_url": "https://github.com/rust-lang/rust/commit/26417a85e7551115146f98c64ea4e433453b9b4b"}], "stats": {"total": 7, "additions": 5, "deletions": 2}, "files": [{"sha": "514b96ce85203c8d0cc94d8660772fcd327f3da9", "filename": "src/tools/compiletest/src/runtest.rs", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/2f70d02df46916a56f15ef52b13a99c3a69fbd5b/src%2Ftools%2Fcompiletest%2Fsrc%2Fruntest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2f70d02df46916a56f15ef52b13a99c3a69fbd5b/src%2Ftools%2Fcompiletest%2Fsrc%2Fruntest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fcompiletest%2Fsrc%2Fruntest.rs?ref=2f70d02df46916a56f15ef52b13a99c3a69fbd5b", "patch": "@@ -1384,7 +1384,9 @@ impl<'test> TestCx<'test> {\n         let actual_errors = json::parse_output(&diagnostic_file_name, &proc_res.stderr, proc_res);\n         let mut unexpected = Vec::new();\n         let mut found = vec![false; expected_errors.len()];\n-        for actual_error in &actual_errors {\n+        for mut actual_error in actual_errors {\n+            actual_error.msg = self.normalize_output(&actual_error.msg, &[]);\n+\n             let opt_index =\n                 expected_errors.iter().enumerate().position(|(index, expected_error)| {\n                     !found[index]\n@@ -1403,7 +1405,8 @@ impl<'test> TestCx<'test> {\n \n                 None => {\n                     // If the test is a known bug, don't require that the error is annotated\n-                    if self.is_unexpected_compiler_message(actual_error, expect_help, expect_note) {\n+                    if self.is_unexpected_compiler_message(&actual_error, expect_help, expect_note)\n+                    {\n                         self.error(&format!(\n                             \"{}:{}: unexpected {}: '{}'\",\n                             file_name,"}]}