{"sha": "d1e9a76326070bcb62684136089bb98e7f64db41", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQxZTlhNzYzMjYwNzBiY2I2MjY4NDEzNjA4OWJiOThlN2Y2NGRiNDE=", "commit": {"author": {"name": "Eunji Jeong", "email": "eun-ji.jeong@samsung.com", "date": "2015-01-26T05:46:21Z"}, "committer": {"name": "Eunji Jeong", "email": "eun-ji.jeong@samsung.com", "date": "2015-02-10T06:48:07Z"}, "message": "Fix aarch64 test issues (same level to arm32)", "tree": {"sha": "150a71e2a966e780e9e0dd2bec204d5f5250c3fa", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/150a71e2a966e780e9e0dd2bec204d5f5250c3fa"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d1e9a76326070bcb62684136089bb98e7f64db41", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d1e9a76326070bcb62684136089bb98e7f64db41", "html_url": "https://github.com/rust-lang/rust/commit/d1e9a76326070bcb62684136089bb98e7f64db41", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d1e9a76326070bcb62684136089bb98e7f64db41/comments", "author": {"login": "ejjeong", "id": 10492346, "node_id": "MDQ6VXNlcjEwNDkyMzQ2", "avatar_url": "https://avatars.githubusercontent.com/u/10492346?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ejjeong", "html_url": "https://github.com/ejjeong", "followers_url": "https://api.github.com/users/ejjeong/followers", "following_url": "https://api.github.com/users/ejjeong/following{/other_user}", "gists_url": "https://api.github.com/users/ejjeong/gists{/gist_id}", "starred_url": "https://api.github.com/users/ejjeong/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ejjeong/subscriptions", "organizations_url": "https://api.github.com/users/ejjeong/orgs", "repos_url": "https://api.github.com/users/ejjeong/repos", "events_url": "https://api.github.com/users/ejjeong/events{/privacy}", "received_events_url": "https://api.github.com/users/ejjeong/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ejjeong", "id": 10492346, "node_id": "MDQ6VXNlcjEwNDkyMzQ2", "avatar_url": "https://avatars.githubusercontent.com/u/10492346?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ejjeong", "html_url": "https://github.com/ejjeong", "followers_url": "https://api.github.com/users/ejjeong/followers", "following_url": "https://api.github.com/users/ejjeong/following{/other_user}", "gists_url": "https://api.github.com/users/ejjeong/gists{/gist_id}", "starred_url": "https://api.github.com/users/ejjeong/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ejjeong/subscriptions", "organizations_url": "https://api.github.com/users/ejjeong/orgs", "repos_url": "https://api.github.com/users/ejjeong/repos", "events_url": "https://api.github.com/users/ejjeong/events{/privacy}", "received_events_url": "https://api.github.com/users/ejjeong/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5cbdf1db9bde6ffb8da4327974c2f5bb105c108a", "url": "https://api.github.com/repos/rust-lang/rust/commits/5cbdf1db9bde6ffb8da4327974c2f5bb105c108a", "html_url": "https://github.com/rust-lang/rust/commit/5cbdf1db9bde6ffb8da4327974c2f5bb105c108a"}], "stats": {"total": 15, "additions": 12, "deletions": 3}, "files": [{"sha": "c71416d412e15e79597aaa54cfeb0ed3c828a37e", "filename": "src/liblibc/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d1e9a76326070bcb62684136089bb98e7f64db41/src%2Fliblibc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d1e9a76326070bcb62684136089bb98e7f64db41/src%2Fliblibc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliblibc%2Flib.rs?ref=d1e9a76326070bcb62684136089bb98e7f64db41", "patch": "@@ -5469,6 +5469,7 @@ pub mod funcs {\n         use types::os::arch::c95::{c_uchar, c_int, size_t};\n \n         extern {\n+            #[cfg(not(all(target_os = \"android\", target_arch = \"aarch64\")))]\n             pub fn getdtablesize() -> c_int;\n             pub fn ioctl(d: c_int, request: c_int, ...) -> c_int;\n             pub fn madvise(addr: *mut c_void, len: size_t, advice: c_int)"}, {"sha": "bc13fa3122b20d0084d38c1c0f66cd79516baa50", "filename": "src/libstd/sys/unix/process.rs", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/d1e9a76326070bcb62684136089bb98e7f64db41/src%2Flibstd%2Fsys%2Funix%2Fprocess.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d1e9a76326070bcb62684136089bb98e7f64db41/src%2Flibstd%2Fsys%2Funix%2Fprocess.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Funix%2Fprocess.rs?ref=d1e9a76326070bcb62684136089bb98e7f64db41", "patch": "@@ -64,14 +64,22 @@ impl Process {\n               K: BytesContainer + Eq + Hash<Hasher>, V: BytesContainer\n     {\n         use libc::funcs::posix88::unistd::{fork, dup2, close, chdir, execvp};\n-        use libc::funcs::bsd44::getdtablesize;\n \n         mod rustrt {\n             extern {\n                 pub fn rust_unset_sigprocmask();\n             }\n         }\n \n+        #[cfg(all(target_os = \"android\", target_arch = \"aarch64\"))]\n+        unsafe fn getdtablesize() -> c_int {\n+            libc::sysconf(libc::consts::os::sysconf::_SC_OPEN_MAX) as c_int\n+        }\n+        #[cfg(not(all(target_os = \"android\", target_arch = \"aarch64\")))]\n+        unsafe fn getdtablesize() -> c_int {\n+            libc::funcs::bsd44::getdtablesize()\n+        }\n+\n         unsafe fn set_cloexec(fd: c_int) {\n             let ret = c::ioctl(fd, c::FIOCLEX);\n             assert_eq!(ret, 0);"}, {"sha": "bd2f73440cae6db8953d5814a315bb7d49283aab", "filename": "src/test/run-pass/intrinsic-alignment.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d1e9a76326070bcb62684136089bb98e7f64db41/src%2Ftest%2Frun-pass%2Fintrinsic-alignment.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d1e9a76326070bcb62684136089bb98e7f64db41/src%2Ftest%2Frun-pass%2Fintrinsic-alignment.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fintrinsic-alignment.rs?ref=d1e9a76326070bcb62684136089bb98e7f64db41", "patch": "@@ -66,7 +66,7 @@ mod m {\n #[cfg(target_os = \"android\")]\n mod m {\n     #[main]\n-    #[cfg(target_arch = \"arm\")]\n+    #[cfg(any(target_arch = \"arm\", target_arch = \"aarch64\"))]\n     pub fn main() {\n         unsafe {\n             assert_eq!(::rusti::pref_align_of::<u64>(), 8u);"}, {"sha": "0be6e22f60980ac06166b20692752a7103a7fad2", "filename": "src/test/run-pass/rec-align-u64.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d1e9a76326070bcb62684136089bb98e7f64db41/src%2Ftest%2Frun-pass%2Frec-align-u64.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d1e9a76326070bcb62684136089bb98e7f64db41/src%2Ftest%2Frun-pass%2Frec-align-u64.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Frec-align-u64.rs?ref=d1e9a76326070bcb62684136089bb98e7f64db41", "patch": "@@ -72,7 +72,7 @@ mod m {\n \n #[cfg(target_os = \"android\")]\n mod m {\n-    #[cfg(target_arch = \"arm\")]\n+    #[cfg(any(target_arch = \"arm\", target_arch = \"aarch64\"))]\n     pub mod m {\n         pub fn align() -> uint { 8u }\n         pub fn size() -> uint { 16u }"}]}