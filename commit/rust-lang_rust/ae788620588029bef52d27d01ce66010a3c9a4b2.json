{"sha": "ae788620588029bef52d27d01ce66010a3c9a4b2", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFlNzg4NjIwNTg4MDI5YmVmNTJkMjdkMDFjZTY2MDEwYTNjOWE0YjI=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2019-08-26T17:48:56Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2019-08-26T18:14:58Z"}, "message": "raw slices do not have to comply to the size limit", "tree": {"sha": "6b684bd92fe065c97633d0cf660568872685e34f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6b684bd92fe065c97633d0cf660568872685e34f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ae788620588029bef52d27d01ce66010a3c9a4b2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ae788620588029bef52d27d01ce66010a3c9a4b2", "html_url": "https://github.com/rust-lang/rust/commit/ae788620588029bef52d27d01ce66010a3c9a4b2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ae788620588029bef52d27d01ce66010a3c9a4b2/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0c1cb32b8440319d8a15d920a3d35e124ae52b43", "url": "https://api.github.com/repos/rust-lang/rust/commits/0c1cb32b8440319d8a15d920a3d35e124ae52b43", "html_url": "https://github.com/rust-lang/rust/commit/0c1cb32b8440319d8a15d920a3d35e124ae52b43"}], "stats": {"total": 19, "additions": 5, "deletions": 14}, "files": [{"sha": "c2505547c5b4fe2103ccadd20db8588f25aff88e", "filename": "src/librustc_mir/interpret/validity.rs", "status": "modified", "additions": 5, "deletions": 14, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/ae788620588029bef52d27d01ce66010a3c9a4b2/src%2Flibrustc_mir%2Finterpret%2Fvalidity.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ae788620588029bef52d27d01ce66010a3c9a4b2/src%2Flibrustc_mir%2Finterpret%2Fvalidity.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Finterpret%2Fvalidity.rs?ref=ae788620588029bef52d27d01ce66010a3c9a4b2", "patch": "@@ -3,7 +3,7 @@ use std::ops::RangeInclusive;\n \n use syntax_pos::symbol::{sym, Symbol};\n use rustc::hir;\n-use rustc::ty::layout::{self, Size, TyLayout, LayoutOf, VariantIdx};\n+use rustc::ty::layout::{self, TyLayout, LayoutOf, VariantIdx};\n use rustc::ty;\n use rustc_data_structures::fx::FxHashSet;\n \n@@ -276,20 +276,11 @@ impl<'rt, 'mir, 'tcx, M: Machine<'mir, 'tcx>> ValidityVisitor<'rt, 'mir, 'tcx, M\n                 // FIXME: More checks for the vtable.\n             }\n             ty::Slice(..) | ty::Str => {\n-                let len = try_validation!(meta.unwrap().to_usize(self.ecx),\n+                let _len = try_validation!(meta.unwrap().to_usize(self.ecx),\n                     \"non-integer slice length in wide pointer\", self.path);\n-                // check max slice length\n-                let elem_size = match tail.sty {\n-                    ty::Str => Size::from_bytes(1),\n-                    ty::Slice(ty) => self.ecx.layout_of(ty)?.size,\n-                    _ => bug!(\"It cannot be another type\"),\n-                };\n-                if elem_size.checked_mul(len, &*self.ecx.tcx).is_none() {\n-                    throw_validation_failure!(\n-                        \"too large slice (longer than isize::MAX bytes)\",\n-                        self.path\n-                    );\n-                }\n+                // We do not check that `len * elem_size <= isize::MAX`:\n+                // that is only required for references, and there it falls out of the\n+                // \"dereferencable\" check performed by Stacked Borrows.\n             }\n             ty::Foreign(..) => {\n                 // Unsized, but not wide."}]}