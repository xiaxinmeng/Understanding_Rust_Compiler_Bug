{"sha": "121bffce8106a73b90eb4f68da42d4d7ceca5375", "node_id": "MDY6Q29tbWl0NzI0NzEyOjEyMWJmZmNlODEwNmE3M2I5MGViNGY2OGRhNDJkNGQ3Y2VjYTUzNzU=", "commit": {"author": {"name": "Waffle", "email": "waffle.lapkin@gmail.com", "date": "2020-03-19T19:19:37Z"}, "committer": {"name": "Waffle", "email": "waffle.lapkin@gmail.com", "date": "2020-03-19T19:19:37Z"}, "message": "make \"other\" in docs of `Option::{zip,zip_with}` monofont", "tree": {"sha": "149f795fa2a5ee4cfec3ee0c8c161b0f6aff8813", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/149f795fa2a5ee4cfec3ee0c8c161b0f6aff8813"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/121bffce8106a73b90eb4f68da42d4d7ceca5375", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/121bffce8106a73b90eb4f68da42d4d7ceca5375", "html_url": "https://github.com/rust-lang/rust/commit/121bffce8106a73b90eb4f68da42d4d7ceca5375", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/121bffce8106a73b90eb4f68da42d4d7ceca5375/comments", "author": {"login": "WaffleLapkin", "id": 38225716, "node_id": "MDQ6VXNlcjM4MjI1NzE2", "avatar_url": "https://avatars.githubusercontent.com/u/38225716?v=4", "gravatar_id": "", "url": "https://api.github.com/users/WaffleLapkin", "html_url": "https://github.com/WaffleLapkin", "followers_url": "https://api.github.com/users/WaffleLapkin/followers", "following_url": "https://api.github.com/users/WaffleLapkin/following{/other_user}", "gists_url": "https://api.github.com/users/WaffleLapkin/gists{/gist_id}", "starred_url": "https://api.github.com/users/WaffleLapkin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/WaffleLapkin/subscriptions", "organizations_url": "https://api.github.com/users/WaffleLapkin/orgs", "repos_url": "https://api.github.com/users/WaffleLapkin/repos", "events_url": "https://api.github.com/users/WaffleLapkin/events{/privacy}", "received_events_url": "https://api.github.com/users/WaffleLapkin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "WaffleLapkin", "id": 38225716, "node_id": "MDQ6VXNlcjM4MjI1NzE2", "avatar_url": "https://avatars.githubusercontent.com/u/38225716?v=4", "gravatar_id": "", "url": "https://api.github.com/users/WaffleLapkin", "html_url": "https://github.com/WaffleLapkin", "followers_url": "https://api.github.com/users/WaffleLapkin/followers", "following_url": "https://api.github.com/users/WaffleLapkin/following{/other_user}", "gists_url": "https://api.github.com/users/WaffleLapkin/gists{/gist_id}", "starred_url": "https://api.github.com/users/WaffleLapkin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/WaffleLapkin/subscriptions", "organizations_url": "https://api.github.com/users/WaffleLapkin/orgs", "repos_url": "https://api.github.com/users/WaffleLapkin/repos", "events_url": "https://api.github.com/users/WaffleLapkin/events{/privacy}", "received_events_url": "https://api.github.com/users/WaffleLapkin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d36d3fa5a6441f13c3888b6895cc7046740b1e3d", "url": "https://api.github.com/repos/rust-lang/rust/commits/d36d3fa5a6441f13c3888b6895cc7046740b1e3d", "html_url": "https://github.com/rust-lang/rust/commit/d36d3fa5a6441f13c3888b6895cc7046740b1e3d"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "3aab8b1b3337cc4ff39619782564eb328f9616ea", "filename": "src/libcore/option.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/121bffce8106a73b90eb4f68da42d4d7ceca5375/src%2Flibcore%2Foption.rs", "raw_url": "https://github.com/rust-lang/rust/raw/121bffce8106a73b90eb4f68da42d4d7ceca5375/src%2Flibcore%2Foption.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Foption.rs?ref=121bffce8106a73b90eb4f68da42d4d7ceca5375", "patch": "@@ -916,7 +916,7 @@ impl<T> Option<T> {\n \n     /// Zips `self` with another `Option`.\n     ///\n-    /// If `self` is `Some(s)` and other is `Some(o)`, this method returns `Some((s, o))`.\n+    /// If `self` is `Some(s)` and `other` is `Some(o)`, this method returns `Some((s, o))`.\n     /// Otherwise, `None` is returned.\n     ///\n     /// # Examples\n@@ -937,7 +937,7 @@ impl<T> Option<T> {\n \n     /// Zips `self` and another `Option` with function `f`.\n     ///\n-    /// If `self` is `Some(s)` and other is `Some(o)`, this method returns `Some(f(s, o))`.\n+    /// If `self` is `Some(s)` and `other` is `Some(o)`, this method returns `Some(f(s, o))`.\n     /// Otherwise, `None` is returned.\n     ///\n     /// # Examples"}]}