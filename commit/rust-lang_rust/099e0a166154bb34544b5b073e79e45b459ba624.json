{"sha": "099e0a166154bb34544b5b073e79e45b459ba624", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA5OWUwYTE2NjE1NGJiMzQ1NDRiNWIwNzNlNzllNDViNDU5YmE2MjQ=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-01-28T13:48:28Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-01-28T13:48:28Z"}, "message": "Auto merge of #1694 - JohnTitor:rustup, r=RalfJung\n\nRustup for rust-lang/rust#79951\n\ncc https://github.com/rust-lang/rust/issues/81467", "tree": {"sha": "ee10d83a82df20ddbd5b3497821013f2e07869be", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ee10d83a82df20ddbd5b3497821013f2e07869be"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/099e0a166154bb34544b5b073e79e45b459ba624", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/099e0a166154bb34544b5b073e79e45b459ba624", "html_url": "https://github.com/rust-lang/rust/commit/099e0a166154bb34544b5b073e79e45b459ba624", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/099e0a166154bb34544b5b073e79e45b459ba624/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a0485c5a90f0f242ca9cf06f35893934294afc9b", "url": "https://api.github.com/repos/rust-lang/rust/commits/a0485c5a90f0f242ca9cf06f35893934294afc9b", "html_url": "https://github.com/rust-lang/rust/commit/a0485c5a90f0f242ca9cf06f35893934294afc9b"}, {"sha": "53612ece7c167395719b03a3e60d8105fa1babd1", "url": "https://api.github.com/repos/rust-lang/rust/commits/53612ece7c167395719b03a3e60d8105fa1babd1", "html_url": "https://github.com/rust-lang/rust/commit/53612ece7c167395719b03a3e60d8105fa1babd1"}], "stats": {"total": 11, "additions": 4, "deletions": 7}, "files": [{"sha": "5752b651d2a21a304f0bb8d7c8f8e3094c6114bb", "filename": "rust-version", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/099e0a166154bb34544b5b073e79e45b459ba624/rust-version", "raw_url": "https://github.com/rust-lang/rust/raw/099e0a166154bb34544b5b073e79e45b459ba624/rust-version", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/rust-version?ref=099e0a166154bb34544b5b073e79e45b459ba624", "patch": "@@ -1 +1 @@\n-78e22069d018e83915201c8a218a0a94227f6420\n+0e190206e2ff0c13d64701d9b4145bf89a2d0cab"}, {"sha": "5ed3d8950d04a8dea94a323cb98272d22ee8c615", "filename": "src/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/099e0a166154bb34544b5b073e79e45b459ba624/src%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/099e0a166154bb34544b5b073e79e45b459ba624/src%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flib.rs?ref=099e0a166154bb34544b5b073e79e45b459ba624", "patch": "@@ -8,7 +8,6 @@\n #![warn(rust_2018_idioms)]\n #![allow(clippy::cast_lossless)]\n \n-extern crate rustc_attr;\n extern crate rustc_apfloat;\n extern crate rustc_ast;\n #[macro_use] extern crate rustc_middle;"}, {"sha": "fc859bc5302054e89b809ff1131bccba2669bc1e", "filename": "src/shims/intrinsics.rs", "status": "modified", "additions": 3, "deletions": 5, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/099e0a166154bb34544b5b073e79e45b459ba624/src%2Fshims%2Fintrinsics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/099e0a166154bb34544b5b073e79e45b459ba624/src%2Fshims%2Fintrinsics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fshims%2Fintrinsics.rs?ref=099e0a166154bb34544b5b073e79e45b459ba624", "patch": "@@ -2,9 +2,7 @@ use std::iter;\n \n use log::trace;\n \n-use rustc_attr as attr;\n-use rustc_ast::ast::FloatTy;\n-use rustc_middle::{mir, mir::BinOp, ty};\n+use rustc_middle::{mir, mir::BinOp, ty, ty::FloatTy};\n use rustc_middle::ty::layout::IntegerExt;\n use rustc_apfloat::{Float, Round};\n use rustc_target::abi::{Align, Integer, LayoutOf};\n@@ -578,7 +576,7 @@ pub trait EvalContextExt<'mir, 'tcx: 'mir>: crate::MiriEvalContextExt<'mir, 'tcx\n         Ok(match dest_ty.kind() {\n             // Unsigned\n             ty::Uint(t) => {\n-                let size = Integer::from_attr(this, attr::IntType::UnsignedInt(*t)).size();\n+                let size = Integer::from_uint_ty(this, *t).size();\n                 let res = f.to_u128(size.bits_usize());\n                 if res.status.is_empty() {\n                     // No status flags means there was no further rounding or other loss of precision.\n@@ -593,7 +591,7 @@ pub trait EvalContextExt<'mir, 'tcx: 'mir>: crate::MiriEvalContextExt<'mir, 'tcx\n             }\n             // Signed\n             ty::Int(t) => {\n-                let size = Integer::from_attr(this, attr::IntType::SignedInt(*t)).size();\n+                let size = Integer::from_int_ty(this, *t).size();\n                 let res = f.to_i128(size.bits_usize());\n                 if res.status.is_empty() {\n                     // No status flags means there was no further rounding or other loss of precision."}]}