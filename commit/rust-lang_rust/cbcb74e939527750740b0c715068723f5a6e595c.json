{"sha": "cbcb74e939527750740b0c715068723f5a6e595c", "node_id": "C_kwDOAAsO6NoAKGNiY2I3NGU5Mzk1Mjc3NTA3NDBiMGM3MTUwNjg3MjNmNWE2ZTU5NWM", "commit": {"author": {"name": "Michael Howell", "email": "michael@notriddle.com", "date": "2022-09-09T00:46:57Z"}, "committer": {"name": "Michael Howell", "email": "michael@notriddle.com", "date": "2022-09-09T12:56:14Z"}, "message": "rustdoc: simplify the codeblock tooltip\n\nThis commit moves the tooltip into example-wrap, simplifying allowing several\noverly-complex things to be fixed:\n\n* The mousover javascript can be removed, because hovering example-wrap can\n  style the tooltip inside.\n* The sibling selecor can be removed, because hovering the tooltip also\n  hovers the wrapper, which can hover the codeblock itself.\n* The relative positioning of the `<li>` tag, which was added in\n  e861efd9f9ca45c1048a256812dfe8faffbb1367 to fix the positioning of the code\n  tooltip, can now be removed, because example-wrap itself already has\n  relative positioning.", "tree": {"sha": "dee07c1c7a9f44362e25f714a0d0839215fe0bcc", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/dee07c1c7a9f44362e25f714a0d0839215fe0bcc"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cbcb74e939527750740b0c715068723f5a6e595c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cbcb74e939527750740b0c715068723f5a6e595c", "html_url": "https://github.com/rust-lang/rust/commit/cbcb74e939527750740b0c715068723f5a6e595c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cbcb74e939527750740b0c715068723f5a6e595c/comments", "author": {"login": "notriddle", "id": 1593513, "node_id": "MDQ6VXNlcjE1OTM1MTM=", "avatar_url": "https://avatars.githubusercontent.com/u/1593513?v=4", "gravatar_id": "", "url": "https://api.github.com/users/notriddle", "html_url": "https://github.com/notriddle", "followers_url": "https://api.github.com/users/notriddle/followers", "following_url": "https://api.github.com/users/notriddle/following{/other_user}", "gists_url": "https://api.github.com/users/notriddle/gists{/gist_id}", "starred_url": "https://api.github.com/users/notriddle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/notriddle/subscriptions", "organizations_url": "https://api.github.com/users/notriddle/orgs", "repos_url": "https://api.github.com/users/notriddle/repos", "events_url": "https://api.github.com/users/notriddle/events{/privacy}", "received_events_url": "https://api.github.com/users/notriddle/received_events", "type": "User", "site_admin": false}, "committer": {"login": "notriddle", "id": 1593513, "node_id": "MDQ6VXNlcjE1OTM1MTM=", "avatar_url": "https://avatars.githubusercontent.com/u/1593513?v=4", "gravatar_id": "", "url": "https://api.github.com/users/notriddle", "html_url": "https://github.com/notriddle", "followers_url": "https://api.github.com/users/notriddle/followers", "following_url": "https://api.github.com/users/notriddle/following{/other_user}", "gists_url": "https://api.github.com/users/notriddle/gists{/gist_id}", "starred_url": "https://api.github.com/users/notriddle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/notriddle/subscriptions", "organizations_url": "https://api.github.com/users/notriddle/orgs", "repos_url": "https://api.github.com/users/notriddle/repos", "events_url": "https://api.github.com/users/notriddle/events{/privacy}", "received_events_url": "https://api.github.com/users/notriddle/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f9da510cff278acabdfbf3b6fa1190558938d977", "url": "https://api.github.com/repos/rust-lang/rust/commits/f9da510cff278acabdfbf3b6fa1190558938d977", "html_url": "https://github.com/rust-lang/rust/commit/f9da510cff278acabdfbf3b6fa1190558938d977"}], "stats": {"total": 144, "additions": 61, "deletions": 83}, "files": [{"sha": "84781d898385921d1da249da9eb39eae1177a4fa", "filename": "src/librustdoc/html/highlight.rs", "status": "modified", "additions": 28, "deletions": 27, "changes": 55, "blob_url": "https://github.com/rust-lang/rust/blob/cbcb74e939527750740b0c715068723f5a6e595c/src%2Flibrustdoc%2Fhtml%2Fhighlight.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cbcb74e939527750740b0c715068723f5a6e595c/src%2Flibrustdoc%2Fhtml%2Fhighlight.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fhighlight.rs?ref=cbcb74e939527750740b0c715068723f5a6e595c", "patch": "@@ -52,35 +52,14 @@ pub(crate) fn render_example_with_highlighting(\n     tooltip: Tooltip,\n     playground_button: Option<&str>,\n ) {\n-    let class = match tooltip {\n-        Tooltip::Ignore => \" ignore\",\n-        Tooltip::CompileFail => \" compile_fail\",\n-        Tooltip::ShouldPanic => \" should_panic\",\n-        Tooltip::Edition(_) => \" edition\",\n-        Tooltip::None => \"\",\n-    };\n-\n-    if tooltip != Tooltip::None {\n-        write!(\n-            out,\n-            \"<div class='information'><div class='tooltip{}'{}>\u24d8</div></div>\",\n-            class,\n-            if let Tooltip::Edition(edition_info) = tooltip {\n-                format!(\" data-edition=\\\"{}\\\"\", edition_info)\n-            } else {\n-                String::new()\n-            },\n-        );\n-    }\n-\n-    write_header(out, &format!(\"rust-example-rendered{}\", class), None);\n+    write_header(out, \"rust-example-rendered\", None, tooltip);\n     write_code(out, src, None, None);\n     write_footer(out, playground_button);\n }\n \n /// Highlights `src` as a macro, returning the HTML output.\n pub(crate) fn render_macro_with_highlighting(src: &str, out: &mut Buffer) {\n-    write_header(out, \"macro\", None);\n+    write_header(out, \"macro\", None, Tooltip::None);\n     write_code(out, src, None, None);\n     write_footer(out, None);\n }\n@@ -93,20 +72,42 @@ pub(crate) fn render_source_with_highlighting(\n     href_context: HrefContext<'_, '_, '_>,\n     decoration_info: DecorationInfo,\n ) {\n-    write_header(out, \"\", Some(line_numbers));\n+    write_header(out, \"\", Some(line_numbers), Tooltip::None);\n     write_code(out, src, Some(href_context), Some(decoration_info));\n     write_footer(out, None);\n }\n \n-fn write_header(out: &mut Buffer, class: &str, extra_content: Option<Buffer>) {\n+fn write_header(out: &mut Buffer, class: &str, extra_content: Option<Buffer>, tooltip: Tooltip) {\n     write!(out, \"<div class=\\\"example-wrap\\\">\");\n+\n+    let tooltip_class = match tooltip {\n+        Tooltip::Ignore => \" ignore\",\n+        Tooltip::CompileFail => \" compile_fail\",\n+        Tooltip::ShouldPanic => \" should_panic\",\n+        Tooltip::Edition(_) => \" edition\",\n+        Tooltip::None => \"\",\n+    };\n+\n+    if tooltip != Tooltip::None {\n+        write!(\n+            out,\n+            \"<div class='information'><div class='tooltip{}'{}>\u24d8</div></div>\",\n+            tooltip_class,\n+            if let Tooltip::Edition(edition_info) = tooltip {\n+                format!(\" data-edition=\\\"{}\\\"\", edition_info)\n+            } else {\n+                String::new()\n+            },\n+        );\n+    }\n+\n     if let Some(extra) = extra_content {\n         out.push_buffer(extra);\n     }\n-    if class.is_empty() {\n+    if class.is_empty() && tooltip_class.is_empty() {\n         write!(out, \"<pre class=\\\"rust\\\">\");\n     } else {\n-        write!(out, \"<pre class=\\\"rust {}\\\">\", class);\n+        write!(out, \"<pre class=\\\"rust {class}{tooltip_class}\\\">\");\n     }\n     write!(out, \"<code>\");\n }"}, {"sha": "7585824ee6e1a796ab9a49abf36897a6417c4dff", "filename": "src/librustdoc/html/static/css/rustdoc.css", "status": "modified", "additions": 8, "deletions": 12, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/cbcb74e939527750740b0c715068723f5a6e595c/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fcss%2Frustdoc.css", "raw_url": "https://github.com/rust-lang/rust/raw/cbcb74e939527750740b0c715068723f5a6e595c/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fcss%2Frustdoc.css", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fcss%2Frustdoc.css?ref=cbcb74e939527750740b0c715068723f5a6e595c", "patch": "@@ -352,10 +352,6 @@ img {\n \tmax-width: 100%;\n }\n \n-li {\n-\tposition: relative;\n-}\n-\n .source .content {\n \tmax-width: none;\n \toverflow: visible;\n@@ -657,7 +653,7 @@ h2.location a {\n \tposition: relative;\n }\n \n-.docblock > :not(.information):not(.more-examples-toggle) {\n+.docblock > :not(.more-examples-toggle):not(.example-wrap) {\n \tmax-width: 100%;\n \toverflow-x: auto;\n }\n@@ -1174,12 +1170,12 @@ pre.ignore {\n \tborder-left: 2px solid var(--codeblock-ignore-color);\n }\n \n-pre.compile_fail:hover, .information:hover + .example-wrap pre.compile_fail,\n-pre.should_panic:hover, .information:hover + .example-wrap pre.should_panic {\n+.example-wrap:hover pre.compile_fail,\n+.example-wrap:hover pre.should_panic {\n \tborder-left: 2px solid var(--codeblock-error-hover-color);\n }\n \n-pre.ignore:hover, .information:hover + .example-wrap pre.ignore {\n+.example-wrap:hover pre.ignore {\n \tborder-left: 2px solid var(--codeblock-ignore-hover-color);\n }\n \n@@ -1192,12 +1188,12 @@ pre.ignore:hover, .information:hover + .example-wrap pre.ignore {\n \tcolor:  var(--codeblock-ignore-color);\n }\n \n-.information > .compile_fail:hover,\n-.information > .should_panic:hover {\n+.example-wrap:hover .tooltip.compile_fail,\n+.example-wrap:hover .tooltip.should_panic {\n \tcolor: var(--codeblock-error-hover-color);\n }\n \n-.information > .ignore:hover {\n+.example-wrap:hover .tooltip.ignore {\n \tcolor: var(--codeblock-ignore-hover-color);\n }\n \n@@ -1738,7 +1734,7 @@ in storage.js plus the media query with (max-width: 700px)\n \tto prevent an overlay between the \"collapse toggle\" and the information tooltip.\n \tHowever, it's not needed with smaller screen width because the doc/code block is always put\n \t\"one line\" below. */\n-\t.docblock > .information:first-child > .tooltip {\n+\t.docblock > .example-wrap:first-child > .information > .tooltip {\n \t\tmargin-top: 16px;\n \t}\n "}, {"sha": "6e9660ddcc96a651f24ac02c5aa9197503c523b9", "filename": "src/librustdoc/html/static/js/main.js", "status": "modified", "additions": 2, "deletions": 21, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/cbcb74e939527750740b0c715068723f5a6e595c/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fjs%2Fmain.js", "raw_url": "https://github.com/rust-lang/rust/raw/cbcb74e939527750740b0c715068723f5a6e595c/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fjs%2Fmain.js", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fjs%2Fmain.js?ref=cbcb74e939527750740b0c715068723f5a6e595c", "patch": "@@ -699,9 +699,8 @@ function loadCss(cssFileName) {\n \n     (function() {\n         // To avoid checking on \"rustdoc-line-numbers\" value on every loop...\n-        let lineNumbersFunc = () => {};\n         if (getSettingValue(\"line-numbers\") === \"true\") {\n-            lineNumbersFunc = x => {\n+            onEachLazy(document.getElementsByClassName(\"rust-example-rendered\"), x => {\n                 const count = x.textContent.split(\"\\n\").length;\n                 const elems = [];\n                 for (let i = 0; i < count; ++i) {\n@@ -711,26 +710,8 @@ function loadCss(cssFileName) {\n                 addClass(node, \"line-number\");\n                 node.innerHTML = elems.join(\"\\n\");\n                 x.parentNode.insertBefore(node, x);\n-            };\n+            });\n         }\n-        onEachLazy(document.getElementsByClassName(\"rust-example-rendered\"), e => {\n-            if (hasClass(e, \"compile_fail\")) {\n-                e.addEventListener(\"mouseover\", function() {\n-                    this.parentElement.previousElementSibling.childNodes[0].style.color = \"#f00\";\n-                });\n-                e.addEventListener(\"mouseout\", function() {\n-                    this.parentElement.previousElementSibling.childNodes[0].style.color = \"\";\n-                });\n-            } else if (hasClass(e, \"ignore\")) {\n-                e.addEventListener(\"mouseover\", function() {\n-                    this.parentElement.previousElementSibling.childNodes[0].style.color = \"#ff9200\";\n-                });\n-                e.addEventListener(\"mouseout\", function() {\n-                    this.parentElement.previousElementSibling.childNodes[0].style.color = \"\";\n-                });\n-            }\n-            lineNumbersFunc(e);\n-        });\n     }());\n \n     let oldSidebarScrollPosition = null;"}, {"sha": "c249895503a91cc2af533991b09a7e4894498793", "filename": "src/test/rustdoc-gui/check_info_sign_position.goml", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/cbcb74e939527750740b0c715068723f5a6e595c/src%2Ftest%2Frustdoc-gui%2Fcheck_info_sign_position.goml", "raw_url": "https://github.com/rust-lang/rust/raw/cbcb74e939527750740b0c715068723f5a6e595c/src%2Ftest%2Frustdoc-gui%2Fcheck_info_sign_position.goml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-gui%2Fcheck_info_sign_position.goml?ref=cbcb74e939527750740b0c715068723f5a6e595c", "patch": "@@ -4,8 +4,8 @@ goto: file://|DOC_PATH|/test_docs/index.html\n goto: ./fn.check_list_code_block.html\n // If the codeblock is the first element of the docblock, the information tooltip must have\n // have some top margin to avoid going over the toggle (the \"[+]\").\n-assert-css: (\".docblock > .information > .compile_fail\", { \"margin-top\": \"16px\" })\n+assert-css: (\".docblock > .example-wrap > .information > .compile_fail\", { \"margin-top\": \"16px\" })\n // Checks that the other codeblocks don't have this top margin.\n-assert-css: (\"ol > li > .information > .compile_fail\", { \"margin-top\": \"0px\" })\n-assert-css: (\"ol > li > .information > .ignore\", { \"margin-top\": \"0px\" })\n-assert-css: (\".docblock > .information > .ignore\", { \"margin-top\": \"0px\" })\n+assert-css: (\"ol > li > .example-wrap > .information > .compile_fail\", { \"margin-top\": \"0px\" })\n+assert-css: (\"ol > li > .example-wrap > .information > .ignore\", { \"margin-top\": \"0px\" })\n+assert-css: (\".docblock > .example-wrap > .information > .ignore\", { \"margin-top\": \"0px\" })"}, {"sha": "4e85c33c8944ebade6eaec40986689733ee85f88", "filename": "src/test/rustdoc-gui/codeblock-tooltip.goml", "status": "modified", "additions": 18, "deletions": 18, "changes": 36, "blob_url": "https://github.com/rust-lang/rust/blob/cbcb74e939527750740b0c715068723f5a6e595c/src%2Ftest%2Frustdoc-gui%2Fcodeblock-tooltip.goml", "raw_url": "https://github.com/rust-lang/rust/raw/cbcb74e939527750740b0c715068723f5a6e595c/src%2Ftest%2Frustdoc-gui%2Fcodeblock-tooltip.goml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-gui%2Fcodeblock-tooltip.goml?ref=cbcb74e939527750740b0c715068723f5a6e595c", "patch": "@@ -8,89 +8,89 @@ reload:\n \n // compile_fail block\n assert-css: (\".docblock .information .compile_fail\", {\"color\": \"rgba(255, 0, 0, 0.5)\"})\n-assert-css: (\".docblock .example-wrap .compile_fail\", {\"border-left\": \"2px solid rgba(255, 0, 0, 0.5)\"})\n+assert-css: (\".docblock .example-wrap pre.compile_fail\", {\"border-left\": \"2px solid rgba(255, 0, 0, 0.5)\"})\n \n move-cursor-to: \".docblock .information .compile_fail\"\n \n assert-css: (\".docblock .information .compile_fail\", {\"color\": \"rgb(255, 0, 0)\"})\n-assert-css: (\".docblock .example-wrap .compile_fail\", {\"border-left\": \"2px solid rgb(255, 0, 0)\"})\n+assert-css: (\".docblock .example-wrap pre.compile_fail\", {\"border-left\": \"2px solid rgb(255, 0, 0)\"})\n \n // should_panic block\n assert-css: (\".docblock .information .should_panic\", {\"color\": \"rgba(255, 0, 0, 0.5)\"})\n-assert-css: (\".docblock .example-wrap .should_panic\", {\"border-left\": \"2px solid rgba(255, 0, 0, 0.5)\"})\n+assert-css: (\".docblock .example-wrap pre.should_panic\", {\"border-left\": \"2px solid rgba(255, 0, 0, 0.5)\"})\n \n move-cursor-to: \".docblock .information .should_panic\"\n \n assert-css: (\".docblock .information .should_panic\", {\"color\": \"rgb(255, 0, 0)\"})\n-assert-css: (\".docblock .example-wrap .should_panic\", {\"border-left\": \"2px solid rgb(255, 0, 0)\"})\n+assert-css: (\".docblock .example-wrap pre.should_panic\", {\"border-left\": \"2px solid rgb(255, 0, 0)\"})\n \n // ignore block\n assert-css: (\".docblock .information .ignore\", {\"color\": \"rgba(255, 142, 0, 0.6)\"})\n-assert-css: (\".docblock .example-wrap .ignore\", {\"border-left\": \"2px solid rgba(255, 142, 0, 0.6)\"})\n+assert-css: (\".docblock .example-wrap pre.ignore\", {\"border-left\": \"2px solid rgba(255, 142, 0, 0.6)\"})\n \n move-cursor-to: \".docblock .information .ignore\"\n \n assert-css: (\".docblock .information .ignore\", {\"color\": \"rgb(255, 142, 0)\"})\n-assert-css: (\".docblock .example-wrap .ignore\", {\"border-left\": \"2px solid rgb(255, 142, 0)\"})\n+assert-css: (\".docblock .example-wrap pre.ignore\", {\"border-left\": \"2px solid rgb(255, 142, 0)\"})\n \n \n // Light theme.\n local-storage: {\"rustdoc-theme\": \"light\"}\n reload:\n \n assert-css: (\".docblock .information .compile_fail\", {\"color\": \"rgba(255, 0, 0, 0.5)\"})\n-assert-css: (\".docblock .example-wrap .compile_fail\", {\"border-left\": \"2px solid rgba(255, 0, 0, 0.5)\"})\n+assert-css: (\".docblock .example-wrap pre.compile_fail\", {\"border-left\": \"2px solid rgba(255, 0, 0, 0.5)\"})\n \n move-cursor-to: \".docblock .information .compile_fail\"\n \n assert-css: (\".docblock .information .compile_fail\", {\"color\": \"rgb(255, 0, 0)\"})\n-assert-css: (\".docblock .example-wrap .compile_fail\", {\"border-left\": \"2px solid rgb(255, 0, 0)\"})\n+assert-css: (\".docblock .example-wrap pre.compile_fail\", {\"border-left\": \"2px solid rgb(255, 0, 0)\"})\n \n // should_panic block\n assert-css: (\".docblock .information .should_panic\", {\"color\": \"rgba(255, 0, 0, 0.5)\"})\n-assert-css: (\".docblock .example-wrap .should_panic\", {\"border-left\": \"2px solid rgba(255, 0, 0, 0.5)\"})\n+assert-css: (\".docblock .example-wrap pre.should_panic\", {\"border-left\": \"2px solid rgba(255, 0, 0, 0.5)\"})\n \n move-cursor-to: \".docblock .information .should_panic\"\n \n assert-css: (\".docblock .information .should_panic\", {\"color\": \"rgb(255, 0, 0)\"})\n-assert-css: (\".docblock .example-wrap .should_panic\", {\"border-left\": \"2px solid rgb(255, 0, 0)\"})\n+assert-css: (\".docblock .example-wrap pre.should_panic\", {\"border-left\": \"2px solid rgb(255, 0, 0)\"})\n \n // ignore block\n assert-css: (\".docblock .information .ignore\", {\"color\": \"rgba(255, 142, 0, 0.6)\"})\n-assert-css: (\".docblock .example-wrap .ignore\", {\"border-left\": \"2px solid rgba(255, 142, 0, 0.6)\"})\n+assert-css: (\".docblock .example-wrap pre.ignore\", {\"border-left\": \"2px solid rgba(255, 142, 0, 0.6)\"})\n \n move-cursor-to: \".docblock .information .ignore\"\n \n assert-css: (\".docblock .information .ignore\", {\"color\": \"rgb(255, 142, 0)\"})\n-assert-css: (\".docblock .example-wrap .ignore\", {\"border-left\": \"2px solid rgb(255, 142, 0)\"})\n+assert-css: (\".docblock .example-wrap pre.ignore\", {\"border-left\": \"2px solid rgb(255, 142, 0)\"})\n \n \n // Ayu theme.\n local-storage: {\"rustdoc-theme\": \"ayu\"}\n reload:\n \n assert-css: (\".docblock .information .compile_fail\", {\"color\": \"rgba(255, 0, 0, 0.5)\"})\n-assert-css: (\".docblock .example-wrap .compile_fail\", {\"border-left\": \"2px solid rgba(255, 0, 0, 0.5)\"})\n+assert-css: (\".docblock .example-wrap pre.compile_fail\", {\"border-left\": \"2px solid rgba(255, 0, 0, 0.5)\"})\n \n move-cursor-to: \".docblock .information .compile_fail\"\n \n assert-css: (\".docblock .information .compile_fail\", {\"color\": \"rgb(255, 0, 0)\"})\n-assert-css: (\".docblock .example-wrap .compile_fail\", {\"border-left\": \"2px solid rgb(255, 0, 0)\"})\n+assert-css: (\".docblock .example-wrap pre.compile_fail\", {\"border-left\": \"2px solid rgb(255, 0, 0)\"})\n \n // should_panic block\n assert-css: (\".docblock .information .should_panic\", {\"color\": \"rgba(255, 0, 0, 0.5)\"})\n-assert-css: (\".docblock .example-wrap .should_panic\", {\"border-left\": \"2px solid rgba(255, 0, 0, 0.5)\"})\n+assert-css: (\".docblock .example-wrap pre.should_panic\", {\"border-left\": \"2px solid rgba(255, 0, 0, 0.5)\"})\n \n move-cursor-to: \".docblock .information .should_panic\"\n \n assert-css: (\".docblock .information .should_panic\", {\"color\": \"rgb(255, 0, 0)\"})\n-assert-css: (\".docblock .example-wrap .should_panic\", {\"border-left\": \"2px solid rgb(255, 0, 0)\"})\n+assert-css: (\".docblock .example-wrap pre.should_panic\", {\"border-left\": \"2px solid rgb(255, 0, 0)\"})\n \n // ignore block\n assert-css: (\".docblock .information .ignore\", {\"color\": \"rgba(255, 142, 0, 0.6)\"})\n-assert-css: (\".docblock .example-wrap .ignore\", {\"border-left\": \"2px solid rgba(255, 142, 0, 0.6)\"})\n+assert-css: (\".docblock .example-wrap pre.ignore\", {\"border-left\": \"2px solid rgba(255, 142, 0, 0.6)\"})\n \n move-cursor-to: \".docblock .information .ignore\"\n \n assert-css: (\".docblock .information .ignore\", {\"color\": \"rgb(255, 142, 0)\"})\n-assert-css: (\".docblock .example-wrap .ignore\", {\"border-left\": \"2px solid rgb(255, 142, 0)\"})\n+assert-css: (\".docblock .example-wrap pre.ignore\", {\"border-left\": \"2px solid rgb(255, 142, 0)\"})"}, {"sha": "5be1aff8d3bce7bbf2e08f128a95ae7edfdaee32", "filename": "src/test/rustdoc-gui/overflow-tooltip-information.goml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/cbcb74e939527750740b0c715068723f5a6e595c/src%2Ftest%2Frustdoc-gui%2Foverflow-tooltip-information.goml", "raw_url": "https://github.com/rust-lang/rust/raw/cbcb74e939527750740b0c715068723f5a6e595c/src%2Ftest%2Frustdoc-gui%2Foverflow-tooltip-information.goml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-gui%2Foverflow-tooltip-information.goml?ref=cbcb74e939527750740b0c715068723f5a6e595c", "patch": "@@ -2,7 +2,7 @@\n // have overflow and max-width CSS rules set because they create a bug in firefox on\n // mac. For more information: https://github.com/rust-lang/rust/issues/89185\n goto: file://|DOC_PATH|/test_docs/fn.foo.html\n-assert-css: (\".docblock > .information\", {\n+assert-css: (\".docblock > .example-wrap > .information\", {\n     \"overflow-x\": \"visible\",\n     \"max-width\": \"none\"\n }, ALL)"}]}