{"sha": "a9c7a415763563e394e469ac88e5f6665b7b1a86", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE5YzdhNDE1NzYzNTYzZTM5NGU0NjlhYzg4ZTVmNjY2NWI3YjFhODY=", "commit": {"author": {"name": "Luqman Aden", "email": "laden@csclub.uwaterloo.ca", "date": "2016-07-05T21:18:22Z"}, "committer": {"name": "Luqman Aden", "email": "laden@csclub.uwaterloo.ca", "date": "2016-07-05T21:27:06Z"}, "message": "Make match discriminant reassignment check more accurate.", "tree": {"sha": "8e23041855829539fef5296e42449c196c0df352", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8e23041855829539fef5296e42449c196c0df352"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a9c7a415763563e394e469ac88e5f6665b7b1a86", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a9c7a415763563e394e469ac88e5f6665b7b1a86", "html_url": "https://github.com/rust-lang/rust/commit/a9c7a415763563e394e469ac88e5f6665b7b1a86", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a9c7a415763563e394e469ac88e5f6665b7b1a86/comments", "author": {"login": "luqmana", "id": 287063, "node_id": "MDQ6VXNlcjI4NzA2Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/287063?v=4", "gravatar_id": "", "url": "https://api.github.com/users/luqmana", "html_url": "https://github.com/luqmana", "followers_url": "https://api.github.com/users/luqmana/followers", "following_url": "https://api.github.com/users/luqmana/following{/other_user}", "gists_url": "https://api.github.com/users/luqmana/gists{/gist_id}", "starred_url": "https://api.github.com/users/luqmana/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/luqmana/subscriptions", "organizations_url": "https://api.github.com/users/luqmana/orgs", "repos_url": "https://api.github.com/users/luqmana/repos", "events_url": "https://api.github.com/users/luqmana/events{/privacy}", "received_events_url": "https://api.github.com/users/luqmana/received_events", "type": "User", "site_admin": false}, "committer": {"login": "luqmana", "id": 287063, "node_id": "MDQ6VXNlcjI4NzA2Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/287063?v=4", "gravatar_id": "", "url": "https://api.github.com/users/luqmana", "html_url": "https://github.com/luqmana", "followers_url": "https://api.github.com/users/luqmana/followers", "following_url": "https://api.github.com/users/luqmana/following{/other_user}", "gists_url": "https://api.github.com/users/luqmana/gists{/gist_id}", "starred_url": "https://api.github.com/users/luqmana/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/luqmana/subscriptions", "organizations_url": "https://api.github.com/users/luqmana/orgs", "repos_url": "https://api.github.com/users/luqmana/repos", "events_url": "https://api.github.com/users/luqmana/events{/privacy}", "received_events_url": "https://api.github.com/users/luqmana/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ec58d0c9976c18c405a59d26252a1fa7a3e2a742", "url": "https://api.github.com/repos/rust-lang/rust/commits/ec58d0c9976c18c405a59d26252a1fa7a3e2a742", "html_url": "https://github.com/rust-lang/rust/commit/ec58d0c9976c18c405a59d26252a1fa7a3e2a742"}], "stats": {"total": 48, "additions": 38, "deletions": 10}, "files": [{"sha": "10af326be26a3091af33c7709bae7bd11d9c0f6f", "filename": "src/librustc_trans/_match.rs", "status": "modified", "additions": 17, "deletions": 10, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/a9c7a415763563e394e469ac88e5f6665b7b1a86/src%2Flibrustc_trans%2F_match.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a9c7a415763563e394e469ac88e5f6665b7b1a86/src%2Flibrustc_trans%2F_match.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2F_match.rs?ref=a9c7a415763563e394e469ac88e5f6665b7b1a86", "patch": "@@ -1495,20 +1495,27 @@ impl<'tcx> euv::Delegate<'tcx> for ReassignmentChecker {\n     fn decl_without_init(&mut self, _: ast::NodeId, _: Span) {}\n \n     fn mutate(&mut self, _: ast::NodeId, _: Span, cmt: mc::cmt, _: euv::MutateMode) {\n+        let cmt_id = |cmt: &mc::cmt| match cmt.cat {\n+            Categorization::Upvar(mc::Upvar { id: ty::UpvarId { var_id: vid, ..}, ..}) |\n+            Categorization::Local(vid) => Some(vid),\n+            Categorization::Interior(ref base_cmt, mc::InteriorField(_)) => Some(base_cmt.id),\n+            _ => None\n+        };\n         match cmt.cat {\n             Categorization::Upvar(mc::Upvar { id: ty::UpvarId { var_id: vid, .. }, .. }) |\n             Categorization::Local(vid) => self.reassigned |= self.node == vid,\n-            Categorization::Interior(ref base_cmt, mc::InteriorField(field)) => {\n-                match base_cmt.cat {\n-                    Categorization::Upvar(mc::Upvar { id: ty::UpvarId { var_id: vid, .. }, .. }) |\n-                    Categorization::Local(vid) => {\n-                        self.reassigned |= self.node == vid &&\n-                            (self.field.is_none() || Some(field) == self.field)\n-                    },\n-                    _ => {}\n+            ref cat => {\n+                let mut cat = cat;\n+                while let &Categorization::Interior(ref base_cmt, mc::InteriorField(field)) = cat {\n+                    if let Some(vid) = cmt_id(base_cmt) {\n+                        if self.node == vid && (self.field.is_none() || self.field == Some(field)) {\n+                            self.reassigned = true;\n+                            return;\n+                        }\n+                    }\n+                    cat = &base_cmt.cat;\n                 }\n-            },\n-            _ => {}\n+            }\n         }\n     }\n }"}, {"sha": "eb7d529f0ad6cae194934547838a158a721172aa", "filename": "src/test/run-pass/issue-27021.rs", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/a9c7a415763563e394e469ac88e5f6665b7b1a86/src%2Ftest%2Frun-pass%2Fissue-27021.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a9c7a415763563e394e469ac88e5f6665b7b1a86/src%2Ftest%2Frun-pass%2Fissue-27021.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-27021.rs?ref=a9c7a415763563e394e469ac88e5f6665b7b1a86", "patch": "@@ -0,0 +1,21 @@\n+// Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+fn main() {\n+    let mut c = (1, (1, \"\".to_owned()));\n+    match c {\n+        c2 => { (c.1).0 = 2; assert_eq!((c2.1).0, 1); }\n+    }\n+\n+    let mut c = (1, (1, (1, \"\".to_owned())));\n+    match c.1 {\n+        c2 => { ((c.1).1).0 = 3; assert_eq!((c2.1).0, 1); }\n+    }\n+}"}]}