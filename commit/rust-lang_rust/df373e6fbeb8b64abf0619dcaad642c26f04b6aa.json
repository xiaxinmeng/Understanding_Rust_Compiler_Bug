{"sha": "df373e6fbeb8b64abf0619dcaad642c26f04b6aa", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRmMzczZTZmYmViOGI2NGFiZjA2MTlkY2FhZDY0MmMyNmYwNGI2YWE=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2013-12-21T03:43:27Z"}, "committer": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2013-12-26T23:54:28Z"}, "message": "librustc: De-`@mut` `CStore::metas`", "tree": {"sha": "d93a647305621757d6022969e1e03f9ee5b992ae", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d93a647305621757d6022969e1e03f9ee5b992ae"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/df373e6fbeb8b64abf0619dcaad642c26f04b6aa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/df373e6fbeb8b64abf0619dcaad642c26f04b6aa", "html_url": "https://github.com/rust-lang/rust/commit/df373e6fbeb8b64abf0619dcaad642c26f04b6aa", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/df373e6fbeb8b64abf0619dcaad642c26f04b6aa/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ef32b129fa4a64b44c4a0c7ace932ae1724c9c62", "url": "https://api.github.com/repos/rust-lang/rust/commits/ef32b129fa4a64b44c4a0c7ace932ae1724c9c62", "html_url": "https://github.com/rust-lang/rust/commit/ef32b129fa4a64b44c4a0c7ace932ae1724c9c62"}], "stats": {"total": 17, "additions": 11, "deletions": 6}, "files": [{"sha": "25324d8389ecda058b9762206dd5a46b9bdcbee5", "filename": "src/librustc/metadata/cstore.rs", "status": "modified", "additions": 11, "deletions": 6, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/df373e6fbeb8b64abf0619dcaad642c26f04b6aa/src%2Flibrustc%2Fmetadata%2Fcstore.rs", "raw_url": "https://github.com/rust-lang/rust/raw/df373e6fbeb8b64abf0619dcaad642c26f04b6aa/src%2Flibrustc%2Fmetadata%2Fcstore.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmetadata%2Fcstore.rs?ref=df373e6fbeb8b64abf0619dcaad642c26f04b6aa", "patch": "@@ -15,6 +15,7 @@\n use metadata::decoder;\n use metadata::loader;\n \n+use std::cell::RefCell;\n use std::hashmap::HashMap;\n use syntax::ast;\n use syntax::parse::token::ident_interner;\n@@ -60,7 +61,7 @@ pub struct CrateSource {\n }\n \n pub struct CStore {\n-    priv metas: HashMap <ast::CrateNum, @crate_metadata>,\n+    priv metas: RefCell<HashMap<ast::CrateNum, @crate_metadata>>,\n     priv extern_mod_crate_map: extern_mod_crate_map,\n     priv used_crate_sources: ~[CrateSource],\n     priv used_libraries: ~[(~str, NativeLibaryKind)],\n@@ -74,7 +75,7 @@ type extern_mod_crate_map = HashMap<ast::NodeId, ast::CrateNum>;\n impl CStore {\n     pub fn new(intr: @ident_interner) -> CStore {\n         CStore {\n-            metas: HashMap::new(),\n+            metas: RefCell::new(HashMap::new()),\n             extern_mod_crate_map: HashMap::new(),\n             used_crate_sources: ~[],\n             used_libraries: ~[],\n@@ -84,7 +85,8 @@ impl CStore {\n     }\n \n     pub fn get_crate_data(&self, cnum: ast::CrateNum) -> @crate_metadata {\n-        *self.metas.get(&cnum)\n+        let metas = self.metas.borrow();\n+        *metas.get().get(&cnum)\n     }\n \n     pub fn get_crate_hash(&self, cnum: ast::CrateNum) -> @str {\n@@ -98,15 +100,18 @@ impl CStore {\n     }\n \n     pub fn set_crate_data(&mut self, cnum: ast::CrateNum, data: @crate_metadata) {\n-        self.metas.insert(cnum, data);\n+        let mut metas = self.metas.borrow_mut();\n+        metas.get().insert(cnum, data);\n     }\n \n     pub fn have_crate_data(&self, cnum: ast::CrateNum) -> bool {\n-        self.metas.contains_key(&cnum)\n+        let metas = self.metas.borrow();\n+        metas.get().contains_key(&cnum)\n     }\n \n     pub fn iter_crate_data(&self, i: |ast::CrateNum, @crate_metadata|) {\n-        for (&k, &v) in self.metas.iter() {\n+        let metas = self.metas.borrow();\n+        for (&k, &v) in metas.get().iter() {\n             i(k, v);\n         }\n     }"}]}