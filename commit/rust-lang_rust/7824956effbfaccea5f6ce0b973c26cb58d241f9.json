{"sha": "7824956effbfaccea5f6ce0b973c26cb58d241f9", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc4MjQ5NTZlZmZiZmFjY2VhNWY2Y2UwYjk3M2MyNmNiNThkMjQxZjk=", "commit": {"author": {"name": "William Throwe", "email": "wtt6@cornell.edu", "date": "2015-07-13T00:28:16Z"}, "committer": {"name": "William Throwe", "email": "wtt6@cornell.edu", "date": "2015-07-13T00:28:16Z"}, "message": "Move rounding discussion to integer Div/Rem impls", "tree": {"sha": "f9239bce45d1603c74a0ecd8bcbb4fbcbe943bbd", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f9239bce45d1603c74a0ecd8bcbb4fbcbe943bbd"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7824956effbfaccea5f6ce0b973c26cb58d241f9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7824956effbfaccea5f6ce0b973c26cb58d241f9", "html_url": "https://github.com/rust-lang/rust/commit/7824956effbfaccea5f6ce0b973c26cb58d241f9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7824956effbfaccea5f6ce0b973c26cb58d241f9/comments", "author": {"login": "wthrowe", "id": 867117, "node_id": "MDQ6VXNlcjg2NzExNw==", "avatar_url": "https://avatars.githubusercontent.com/u/867117?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wthrowe", "html_url": "https://github.com/wthrowe", "followers_url": "https://api.github.com/users/wthrowe/followers", "following_url": "https://api.github.com/users/wthrowe/following{/other_user}", "gists_url": "https://api.github.com/users/wthrowe/gists{/gist_id}", "starred_url": "https://api.github.com/users/wthrowe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wthrowe/subscriptions", "organizations_url": "https://api.github.com/users/wthrowe/orgs", "repos_url": "https://api.github.com/users/wthrowe/repos", "events_url": "https://api.github.com/users/wthrowe/events{/privacy}", "received_events_url": "https://api.github.com/users/wthrowe/received_events", "type": "User", "site_admin": false}, "committer": {"login": "wthrowe", "id": 867117, "node_id": "MDQ6VXNlcjg2NzExNw==", "avatar_url": "https://avatars.githubusercontent.com/u/867117?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wthrowe", "html_url": "https://github.com/wthrowe", "followers_url": "https://api.github.com/users/wthrowe/followers", "following_url": "https://api.github.com/users/wthrowe/following{/other_user}", "gists_url": "https://api.github.com/users/wthrowe/gists{/gist_id}", "starred_url": "https://api.github.com/users/wthrowe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wthrowe/subscriptions", "organizations_url": "https://api.github.com/users/wthrowe/orgs", "repos_url": "https://api.github.com/users/wthrowe/repos", "events_url": "https://api.github.com/users/wthrowe/events{/privacy}", "received_events_url": "https://api.github.com/users/wthrowe/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "218eb1277d95090c7db5ba0242194b497784d04e", "url": "https://api.github.com/repos/rust-lang/rust/commits/218eb1277d95090c7db5ba0242194b497784d04e", "html_url": "https://github.com/rust-lang/rust/commit/218eb1277d95090c7db5ba0242194b497784d04e"}], "stats": {"total": 30, "additions": 22, "deletions": 8}, "files": [{"sha": "76d3c1df15998b8ddbdd996f4914689ca6c3e613", "filename": "src/libcore/ops.rs", "status": "modified", "additions": 22, "deletions": 8, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/7824956effbfaccea5f6ce0b973c26cb58d241f9/src%2Flibcore%2Fops.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7824956effbfaccea5f6ce0b973c26cb58d241f9/src%2Flibcore%2Fops.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fops.rs?ref=7824956effbfaccea5f6ce0b973c26cb58d241f9", "patch": "@@ -315,9 +315,6 @@ mul_impl! { usize u8 u16 u32 u64 isize i8 i16 i32 i64 f32 f64 }\n \n /// The `Div` trait is used to specify the functionality of `/`.\n ///\n-/// For primitive integral types, this operation rounds towards zero,\n-/// truncating any fractional part of the exact result.\n-///\n /// # Examples\n ///\n /// A trivial implementation of `Div`. When `Foo / Foo` happens, it ends up\n@@ -354,7 +351,25 @@ pub trait Div<RHS=Self> {\n     fn div(self, rhs: RHS) -> Self::Output;\n }\n \n-macro_rules! div_impl {\n+macro_rules! div_impl_integer {\n+    ($($t:ty)*) => ($(\n+        /// This operation rounds towards zero, truncating any\n+        /// fractional part of the exact result.\n+        #[stable(feature = \"rust1\", since = \"1.0.0\")]\n+        impl Div for $t {\n+            type Output = $t;\n+\n+            #[inline]\n+            fn div(self, other: $t) -> $t { self / other }\n+        }\n+\n+        forward_ref_binop! { impl Div, div for $t, $t }\n+    )*)\n+}\n+\n+div_impl_integer! { usize u8 u16 u32 u64 isize i8 i16 i32 i64 }\n+\n+macro_rules! div_impl_float {\n     ($($t:ty)*) => ($(\n         #[stable(feature = \"rust1\", since = \"1.0.0\")]\n         impl Div for $t {\n@@ -368,13 +383,10 @@ macro_rules! div_impl {\n     )*)\n }\n \n-div_impl! { usize u8 u16 u32 u64 isize i8 i16 i32 i64 f32 f64 }\n+div_impl_float! { f32 f64 }\n \n /// The `Rem` trait is used to specify the functionality of `%`.\n ///\n-/// For primitive integral types, this operation satisfies `n % d == n\n-/// - (n / d) * d`.  The result has the same sign as the left operand.\n-///\n /// # Examples\n ///\n /// A trivial implementation of `Rem`. When `Foo % Foo` happens, it ends up\n@@ -413,6 +425,8 @@ pub trait Rem<RHS=Self> {\n \n macro_rules! rem_impl {\n     ($($t:ty)*) => ($(\n+        /// This operation satisfies `n % d == n - (n / d) * d`.  The\n+        /// result has the same sign as the left operand.\n         #[stable(feature = \"rust1\", since = \"1.0.0\")]\n         impl Rem for $t {\n             type Output = $t;"}]}