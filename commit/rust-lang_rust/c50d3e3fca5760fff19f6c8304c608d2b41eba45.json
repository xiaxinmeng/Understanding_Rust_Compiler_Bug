{"sha": "c50d3e3fca5760fff19f6c8304c608d2b41eba45", "node_id": "MDY6Q29tbWl0NzI0NzEyOmM1MGQzZTNmY2E1NzYwZmZmMTlmNmM4MzA0YzYwOGQyYjQxZWJhNDU=", "commit": {"author": {"name": "Stepan Koltsov", "email": "stepan.koltsov@gmail.com", "date": "2013-07-23T12:40:25Z"}, "committer": {"name": "Daniel Micay", "email": "danielmicay@gmail.com", "date": "2013-07-24T13:45:21Z"}, "message": "ToStr for HashMap does not need value to implement Eq or Hash", "tree": {"sha": "f7a486487e9ff54057cbad8a9adf5144d2d6fbe6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f7a486487e9ff54057cbad8a9adf5144d2d6fbe6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c50d3e3fca5760fff19f6c8304c608d2b41eba45", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c50d3e3fca5760fff19f6c8304c608d2b41eba45", "html_url": "https://github.com/rust-lang/rust/commit/c50d3e3fca5760fff19f6c8304c608d2b41eba45", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c50d3e3fca5760fff19f6c8304c608d2b41eba45/comments", "author": {"login": "stepancheg", "id": 28969, "node_id": "MDQ6VXNlcjI4OTY5", "avatar_url": "https://avatars.githubusercontent.com/u/28969?v=4", "gravatar_id": "", "url": "https://api.github.com/users/stepancheg", "html_url": "https://github.com/stepancheg", "followers_url": "https://api.github.com/users/stepancheg/followers", "following_url": "https://api.github.com/users/stepancheg/following{/other_user}", "gists_url": "https://api.github.com/users/stepancheg/gists{/gist_id}", "starred_url": "https://api.github.com/users/stepancheg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/stepancheg/subscriptions", "organizations_url": "https://api.github.com/users/stepancheg/orgs", "repos_url": "https://api.github.com/users/stepancheg/repos", "events_url": "https://api.github.com/users/stepancheg/events{/privacy}", "received_events_url": "https://api.github.com/users/stepancheg/received_events", "type": "User", "site_admin": false}, "committer": {"login": "thestinger", "id": 1505226, "node_id": "MDQ6VXNlcjE1MDUyMjY=", "avatar_url": "https://avatars.githubusercontent.com/u/1505226?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thestinger", "html_url": "https://github.com/thestinger", "followers_url": "https://api.github.com/users/thestinger/followers", "following_url": "https://api.github.com/users/thestinger/following{/other_user}", "gists_url": "https://api.github.com/users/thestinger/gists{/gist_id}", "starred_url": "https://api.github.com/users/thestinger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thestinger/subscriptions", "organizations_url": "https://api.github.com/users/thestinger/orgs", "repos_url": "https://api.github.com/users/thestinger/repos", "events_url": "https://api.github.com/users/thestinger/events{/privacy}", "received_events_url": "https://api.github.com/users/thestinger/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8d3bb7eb306993430e5f5acf3e3fbf22d7a9d97f", "url": "https://api.github.com/repos/rust-lang/rust/commits/8d3bb7eb306993430e5f5acf3e3fbf22d7a9d97f", "html_url": "https://github.com/rust-lang/rust/commit/8d3bb7eb306993430e5f5acf3e3fbf22d7a9d97f"}], "stats": {"total": 24, "additions": 18, "deletions": 6}, "files": [{"sha": "50cbd36ced9f9dd1a72302c9cd4d5ac8dc67ab72", "filename": "src/libstd/to_str.rs", "status": "modified", "additions": 18, "deletions": 6, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/c50d3e3fca5760fff19f6c8304c608d2b41eba45/src%2Flibstd%2Fto_str.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c50d3e3fca5760fff19f6c8304c608d2b41eba45/src%2Flibstd%2Fto_str.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fto_str.rs?ref=c50d3e3fca5760fff19f6c8304c608d2b41eba45", "patch": "@@ -50,7 +50,7 @@ impl<A:ToStr> ToStr for (A,) {\n     }\n }\n \n-impl<A:ToStr+Hash+Eq, B:ToStr+Hash+Eq> ToStr for HashMap<A, B> {\n+impl<A:ToStr+Hash+Eq, B:ToStr> ToStr for HashMap<A, B> {\n     #[inline]\n     fn to_str(&self) -> ~str {\n         let mut acc = ~\"{\";\n@@ -182,6 +182,8 @@ mod tests {\n     use hashmap::HashMap;\n     use hashmap::HashSet;\n     use container::{MutableSet, MutableMap};\n+    use super::*;\n+\n     #[test]\n     fn test_simple_types() {\n         assert_eq!(1i.to_str(), ~\"1\");\n@@ -212,17 +214,27 @@ mod tests {\n                ~\"[[], [1], [1, 1]]\");\n     }\n \n+    struct StructWithToStrWithoutEqOrHash {\n+        value: int\n+    }\n+\n+    impl ToStr for StructWithToStrWithoutEqOrHash {\n+        fn to_str(&self) -> ~str {\n+            fmt!(\"s%d\", self.value)\n+        }\n+    }\n+\n     #[test]\n     fn test_hashmap() {\n-        let mut table: HashMap<int, int> = HashMap::new();\n-        let empty: HashMap<int, int> = HashMap::new();\n+        let mut table: HashMap<int, StructWithToStrWithoutEqOrHash> = HashMap::new();\n+        let empty: HashMap<int, StructWithToStrWithoutEqOrHash> = HashMap::new();\n \n-        table.insert(3, 4);\n-        table.insert(1, 2);\n+        table.insert(3, StructWithToStrWithoutEqOrHash { value: 4 });\n+        table.insert(1, StructWithToStrWithoutEqOrHash { value: 2 });\n \n         let table_str = table.to_str();\n \n-        assert!(table_str == ~\"{1: 2, 3: 4}\" || table_str == ~\"{3: 4, 1: 2}\");\n+        assert!(table_str == ~\"{1: s2, 3: s4}\" || table_str == ~\"{3: s4, 1: s2}\");\n         assert_eq!(empty.to_str(), ~\"{}\");\n     }\n "}]}