{"sha": "fdef27acf5a233220272776cd565378a4fc59459", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZkZWYyN2FjZjVhMjMzMjIwMjcyNzc2Y2Q1NjUzNzhhNGZjNTk0NTk=", "commit": {"author": {"name": "Oliver Schneider", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2017-06-28T11:59:16Z"}, "committer": {"name": "Oliver Schneider", "email": "git-no-reply-9879165716479413131@oli-obk.de", "date": "2017-07-13T14:31:14Z"}, "message": "Copy `path_to_def` from clippy", "tree": {"sha": "f57c828d0b9174a8faf333eccb9751f360a3f91e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f57c828d0b9174a8faf333eccb9751f360a3f91e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fdef27acf5a233220272776cd565378a4fc59459", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQJgBAABCABKFiEEvpMjxK4/cnPNfesJHVy0/Fl8MAQFAllnhDIsHGdpdC1uby1y\nZXBseS05ODc5MTY1NzE2NDc5NDEzMTMxQG9saS1vYmsuZGUACgkQHVy0/Fl8MAR2\n0A/+IDrch5sXJ1H838n39qRCTZizJE3hZHb+DU/jIH2DxAOe6GQx5mq8FauTQhQ8\nIsd9JnxzP/Mmi0DC3UcnBB6guVFhjqvJ0zQ7MvdOJ+DN5Li1tNc2Kp4wTISNWQ3w\n9ACRg44z74cKzkC+2LNpuHOvkJNl4zoIcXcSzDKqNxjxpgRErmsZWqzw/8qrV+Xy\n//0b3UnjIP8+keY2O7F6xt7X9jBdHIMGMfM/88r4iI+drTmptGyO/Bsl3a8VnfGK\nkhNNZLmu8xpNldecJ1maCEMLP89lnlXuSSMWEveiO8X0sVIoF2ULJsmImJrdTbhc\n2waKSFgkrCVz/cgSVKYbe7PenhwSLMz05/9HjXpAuYc/kXCn5oWQTq8ehJq9Ip5f\nZekokX4Nf/01c+yHjF4suWD6E+bFC9jELeEDQoPjza9hn90763SauePok4892xrQ\nP6N7qaeeUhhPHPIDmzBpbS6a53ABMnKrEvZI59C39NaU90CKDGEPORKGHws2Mrre\n2kkorr4uZamC13AGFRYXYx6muGscqXWVOrzxfhshOvYleuxVvV2ggJkjE52QBlcE\nqTu40UXVIncKjAEoG86X34143bUh+CfKic2IpHBJ76yVHdOYH3h/M+HM3CWmqq83\nEVd0I41yPqla0gIZ0vozcladDjLL+QAnL75y+snKaCZMQ7s=\n=2pF0\n-----END PGP SIGNATURE-----", "payload": "tree f57c828d0b9174a8faf333eccb9751f360a3f91e\nparent 14c8fe7ace4c795c01d03e0d326127efba089488\nauthor Oliver Schneider <git-spam-no-reply9815368754983@oli-obk.de> 1498651156 +0200\ncommitter Oliver Schneider <git-no-reply-9879165716479413131@oli-obk.de> 1499956274 +0200\n\nCopy `path_to_def` from clippy\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fdef27acf5a233220272776cd565378a4fc59459", "html_url": "https://github.com/rust-lang/rust/commit/fdef27acf5a233220272776cd565378a4fc59459", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fdef27acf5a233220272776cd565378a4fc59459/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "14c8fe7ace4c795c01d03e0d326127efba089488", "url": "https://api.github.com/repos/rust-lang/rust/commits/14c8fe7ace4c795c01d03e0d326127efba089488", "html_url": "https://github.com/rust-lang/rust/commit/14c8fe7ace4c795c01d03e0d326127efba089488"}], "stats": {"total": 35, "additions": 34, "deletions": 1}, "files": [{"sha": "450cae3b49cb9adc723cf3bcead257d324367609", "filename": "src/terminator/mod.rs", "status": "modified", "additions": 34, "deletions": 1, "changes": 35, "blob_url": "https://github.com/rust-lang/rust/blob/fdef27acf5a233220272776cd565378a4fc59459/src%2Fterminator%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fdef27acf5a233220272776cd565378a4fc59459/src%2Fterminator%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fterminator%2Fmod.rs?ref=fdef27acf5a233220272776cd565378a4fc59459", "patch": "@@ -1,4 +1,5 @@\n-use rustc::hir::def_id::DefId;\n+use rustc::hir::def_id::{DefId, CRATE_DEF_INDEX};\n+use rustc::hir::def::Def;\n use rustc::mir;\n use rustc::ty::{self, TypeVariants, Ty};\n use rustc::ty::layout::Layout;\n@@ -13,6 +14,8 @@ use memory::{MemoryPointer, TlsKey};\n use value::{PrimVal, Value};\n use rustc_data_structures::indexed_vec::Idx;\n \n+use std::mem;\n+\n mod drop;\n mod intrinsic;\n \n@@ -933,4 +936,34 @@ impl<'a, 'tcx> EvalContext<'a, 'tcx> {\n         self.goto_block(dest_block);\n         Ok(())\n     }\n+    /// Get the definition associated to a path.\n+    fn path_to_def(&self, path: &[&str]) -> Option<Def> {\n+        let cstore = &self.tcx.sess.cstore;\n+\n+        let crates = cstore.crates();\n+        crates.iter()\n+            .find(|&&krate| cstore.crate_name(krate) == path[0])\n+            .and_then(|krate| {\n+                let krate = DefId {\n+                    krate: *krate,\n+                    index: CRATE_DEF_INDEX,\n+                };\n+                let mut items = cstore.item_children(krate, self.tcx.sess);\n+                let mut path_it = path.iter().skip(1).peekable();\n+\n+                while let Some(segment) = path_it.next() {\n+                    for item in &mem::replace(&mut items, vec![]) {\n+                        if item.ident.name == *segment {\n+                            if path_it.peek().is_none() {\n+                                return Some(item.def);\n+                            }\n+\n+                            items = cstore.item_children(item.def.def_id(), self.tcx.sess);\n+                            break;\n+                        }\n+                    }\n+                }\n+                None\n+            })\n+    }\n }"}]}