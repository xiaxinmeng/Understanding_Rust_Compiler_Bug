{"sha": "9903975003276cc42a1ed5f21eee292b7c62c331", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk5MDM5NzUwMDMyNzZjYzQyYTFlZDVmMjFlZWUyOTJiN2M2MmMzMzE=", "commit": {"author": {"name": "Amanieu d'Antras", "email": "amanieu@gmail.com", "date": "2017-01-10T12:20:38Z"}, "committer": {"name": "Amanieu d'Antras", "email": "amanieu@gmail.com", "date": "2017-01-10T12:20:38Z"}, "message": "Add 128-bit atomics", "tree": {"sha": "6a4b53a544f8b28504b94444717a81a5a4a8fd5d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6a4b53a544f8b28504b94444717a81a5a4a8fd5d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9903975003276cc42a1ed5f21eee292b7c62c331", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9903975003276cc42a1ed5f21eee292b7c62c331", "html_url": "https://github.com/rust-lang/rust/commit/9903975003276cc42a1ed5f21eee292b7c62c331", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9903975003276cc42a1ed5f21eee292b7c62c331/comments", "author": {"login": "Amanieu", "id": 278509, "node_id": "MDQ6VXNlcjI3ODUwOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/278509?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Amanieu", "html_url": "https://github.com/Amanieu", "followers_url": "https://api.github.com/users/Amanieu/followers", "following_url": "https://api.github.com/users/Amanieu/following{/other_user}", "gists_url": "https://api.github.com/users/Amanieu/gists{/gist_id}", "starred_url": "https://api.github.com/users/Amanieu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Amanieu/subscriptions", "organizations_url": "https://api.github.com/users/Amanieu/orgs", "repos_url": "https://api.github.com/users/Amanieu/repos", "events_url": "https://api.github.com/users/Amanieu/events{/privacy}", "received_events_url": "https://api.github.com/users/Amanieu/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Amanieu", "id": 278509, "node_id": "MDQ6VXNlcjI3ODUwOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/278509?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Amanieu", "html_url": "https://github.com/Amanieu", "followers_url": "https://api.github.com/users/Amanieu/followers", "following_url": "https://api.github.com/users/Amanieu/following{/other_user}", "gists_url": "https://api.github.com/users/Amanieu/gists{/gist_id}", "starred_url": "https://api.github.com/users/Amanieu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Amanieu/subscriptions", "organizations_url": "https://api.github.com/users/Amanieu/orgs", "repos_url": "https://api.github.com/users/Amanieu/repos", "events_url": "https://api.github.com/users/Amanieu/events{/privacy}", "received_events_url": "https://api.github.com/users/Amanieu/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "74e5b7d96af721b98474f6d4982b5eb594cd022c", "url": "https://api.github.com/repos/rust-lang/rust/commits/74e5b7d96af721b98474f6d4982b5eb594cd022c", "html_url": "https://github.com/rust-lang/rust/commit/74e5b7d96af721b98474f6d4982b5eb594cd022c"}], "stats": {"total": 28, "additions": 27, "deletions": 1}, "files": [{"sha": "7534473b492210e74708e57e8d7106c5fbf86cf6", "filename": "src/libcore/sync/atomic.rs", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/9903975003276cc42a1ed5f21eee292b7c62c331/src%2Flibcore%2Fsync%2Fatomic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9903975003276cc42a1ed5f21eee292b7c62c331/src%2Flibcore%2Fsync%2Fatomic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fsync%2Fatomic.rs?ref=9903975003276cc42a1ed5f21eee292b7c62c331", "patch": "@@ -1314,6 +1314,24 @@ atomic_int! {\n     unstable(feature = \"integer_atomics\", issue = \"32976\"),\n     u64 AtomicU64 ATOMIC_U64_INIT\n }\n+#[cfg(not(stage0))]\n+#[cfg(target_has_atomic = \"128\")]\n+atomic_int! {\n+    unstable(feature = \"i128\", issue = \"35118\"),\n+    unstable(feature = \"i128\", issue = \"35118\"),\n+    unstable(feature = \"i128\", issue = \"35118\"),\n+    unstable(feature = \"i128\", issue = \"35118\"),\n+    i128 AtomicI128 ATOMIC_I128_INIT\n+}\n+#[cfg(not(stage0))]\n+#[cfg(target_has_atomic = \"128\")]\n+atomic_int! {\n+    unstable(feature = \"i128\", issue = \"35118\"),\n+    unstable(feature = \"i128\", issue = \"35118\"),\n+    unstable(feature = \"i128\", issue = \"35118\"),\n+    unstable(feature = \"i128\", issue = \"35118\"),\n+    u128 AtomicU128 ATOMIC_U128_INIT\n+}\n #[cfg(target_has_atomic = \"ptr\")]\n atomic_int!{\n     stable(feature = \"rust1\", since = \"1.0.0\"),"}, {"sha": "5ac50e04b8d2fc81e3e1991a5f682f9d1d89232b", "filename": "src/test/run-make/atomic-lock-free/atomic_lock_free.rs", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/9903975003276cc42a1ed5f21eee292b7c62c331/src%2Ftest%2Frun-make%2Fatomic-lock-free%2Fatomic_lock_free.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9903975003276cc42a1ed5f21eee292b7c62c331/src%2Ftest%2Frun-make%2Fatomic-lock-free%2Fatomic_lock_free.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fatomic-lock-free%2Fatomic_lock_free.rs?ref=9903975003276cc42a1ed5f21eee292b7c62c331", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![feature(cfg_target_has_atomic, no_core, intrinsics, lang_items)]\n+#![feature(cfg_target_has_atomic, no_core, intrinsics, lang_items, i128_type)]\n #![crate_type=\"rlib\"]\n #![no_core]\n \n@@ -54,6 +54,14 @@ pub unsafe fn atomic_u64(x: *mut u64) {\n pub unsafe fn atomic_i64(x: *mut i64) {\n     atomic_xadd(x, 1);\n }\n+#[cfg(target_has_atomic = \"128\")]\n+pub unsafe fn atomic_u128(x: *mut u128) {\n+    atomic_xadd(x, 1);\n+}\n+#[cfg(target_has_atomic = \"128\")]\n+pub unsafe fn atomic_i128(x: *mut i128) {\n+    atomic_xadd(x, 1);\n+}\n #[cfg(target_has_atomic = \"ptr\")]\n pub unsafe fn atomic_usize(x: *mut usize) {\n     atomic_xadd(x, 1);"}]}