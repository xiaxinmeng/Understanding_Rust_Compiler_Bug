{"sha": "d82419b4062d69a197d543a17367f254d1b4fcff", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ4MjQxOWI0MDYyZDY5YTE5N2Q1NDNhMTczNjdmMjU0ZDFiNGZjZmY=", "commit": {"author": {"name": "Dylan DPC", "email": "dylan.dpc@gmail.com", "date": "2021-04-07T11:07:18Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-04-07T11:07:18Z"}, "message": "Rollup merge of #83954 - estebank:issue-83613, r=varkor\n\nDo not ICE when closure is involved in Trait Alias Impl Trait\n\nFix #83613.", "tree": {"sha": "871d3e70ad32cb58d2b6fd65d40e4d0352f17b65", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/871d3e70ad32cb58d2b6fd65d40e4d0352f17b65"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d82419b4062d69a197d543a17367f254d1b4fcff", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJgbZJmCRBK7hj4Ov3rIwAAdHIIAGOBTI04R6P6ugnlGAvOiaC4\nECcVT/9kE/XmQ18GyVI4Xo11FOW/nKbBg/PmnMdX0SAlrwlLNs7OC3QIfby17XVl\n5n+pCNTyDfEric9F7NMgOgpNStuKommDVZXgo+aInvkd7UY4BxRqb5nczR58CIJP\nPvFbYr41k0xUQwUZxJFET9dKb+qN4HF5uFIWAI8OiDeNKwR/pl8ndu5N7pxzPL/q\n/9hL6Vy7xEl7B6RUkrEAB0JSOjoc2nfnlaSzLnsKSX2keUpcKikJAjzf1vR78d5m\np73PRU0ko+Q1Nef1dwF/D6Pp+UZr+ZF2UMgfShjFahmo/uObNaiZzxRqxpa+bcE=\n=B5nc\n-----END PGP SIGNATURE-----\n", "payload": "tree 871d3e70ad32cb58d2b6fd65d40e4d0352f17b65\nparent d7d42ccfd254dca9923bca63b008423dc4e0f83d\nparent 18cf44b61b2bb5387fcf3011bce0cd63cd41d51f\nauthor Dylan DPC <dylan.dpc@gmail.com> 1617793638 +0200\ncommitter GitHub <noreply@github.com> 1617793638 +0200\n\nRollup merge of #83954 - estebank:issue-83613, r=varkor\n\nDo not ICE when closure is involved in Trait Alias Impl Trait\n\nFix #83613.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d82419b4062d69a197d543a17367f254d1b4fcff", "html_url": "https://github.com/rust-lang/rust/commit/d82419b4062d69a197d543a17367f254d1b4fcff", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d82419b4062d69a197d543a17367f254d1b4fcff/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d7d42ccfd254dca9923bca63b008423dc4e0f83d", "url": "https://api.github.com/repos/rust-lang/rust/commits/d7d42ccfd254dca9923bca63b008423dc4e0f83d", "html_url": "https://github.com/rust-lang/rust/commit/d7d42ccfd254dca9923bca63b008423dc4e0f83d"}, {"sha": "18cf44b61b2bb5387fcf3011bce0cd63cd41d51f", "url": "https://api.github.com/repos/rust-lang/rust/commits/18cf44b61b2bb5387fcf3011bce0cd63cd41d51f", "html_url": "https://github.com/rust-lang/rust/commit/18cf44b61b2bb5387fcf3011bce0cd63cd41d51f"}], "stats": {"total": 209, "additions": 125, "deletions": 84}, "files": [{"sha": "9bb4af16a8f53fac2637f0b5b531cacd554a0c01", "filename": "compiler/rustc_trait_selection/src/traits/coherence.rs", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/d82419b4062d69a197d543a17367f254d1b4fcff/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fcoherence.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d82419b4062d69a197d543a17367f254d1b4fcff/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fcoherence.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fcoherence.rs?ref=d82419b4062d69a197d543a17367f254d1b4fcff", "patch": "@@ -586,6 +586,11 @@ fn ty_is_local_constructor(ty: Ty<'_>, in_crate: InCrate) -> bool {\n             false\n         }\n \n+        ty::Closure(..) => {\n+            // Similar to the `Opaque` case (#83613).\n+            false\n+        }\n+\n         ty::Dynamic(ref tt, ..) => {\n             if let Some(principal) = tt.principal() {\n                 def_id_is_local(principal.def_id(), in_crate)\n@@ -596,7 +601,7 @@ fn ty_is_local_constructor(ty: Ty<'_>, in_crate: InCrate) -> bool {\n \n         ty::Error(_) => true,\n \n-        ty::Closure(..) | ty::Generator(..) | ty::GeneratorWitness(..) => {\n+        ty::Generator(..) | ty::GeneratorWitness(..) => {\n             bug!(\"ty_is_local invoked on unexpected type: {:?}\", ty)\n         }\n     }"}, {"sha": "4b563a87a158536c378891bd0710ed344061af3f", "filename": "compiler/rustc_trait_selection/src/traits/specialize/mod.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/d82419b4062d69a197d543a17367f254d1b4fcff/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fspecialize%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d82419b4062d69a197d543a17367f254d1b4fcff/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fspecialize%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fspecialize%2Fmod.rs?ref=d82419b4062d69a197d543a17367f254d1b4fcff", "patch": "@@ -395,14 +395,14 @@ fn report_conflicting_impls(\n     // that's passed in.\n     let decorate = |err: LintDiagnosticBuilder<'_>| {\n         let msg = format!(\n-            \"conflicting implementations of trait `{}`{}:{}\",\n+            \"conflicting implementations of trait `{}`{}{}\",\n             overlap.trait_desc,\n             overlap\n                 .self_desc\n                 .clone()\n                 .map_or_else(String::new, |ty| { format!(\" for type `{}`\", ty) }),\n             match used_to_be_allowed {\n-                Some(FutureCompatOverlapErrorKind::Issue33140) => \" (E0119)\",\n+                Some(FutureCompatOverlapErrorKind::Issue33140) => \": (E0119)\",\n                 _ => \"\",\n             }\n         );"}, {"sha": "211613b3714920a9a7989a56cc58abe6215d04ff", "filename": "src/test/ui/associated-types/associated-types-coherence-failure.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/d82419b4062d69a197d543a17367f254d1b4fcff/src%2Ftest%2Fui%2Fassociated-types%2Fassociated-types-coherence-failure.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d82419b4062d69a197d543a17367f254d1b4fcff/src%2Ftest%2Fui%2Fassociated-types%2Fassociated-types-coherence-failure.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fassociated-types%2Fassociated-types-coherence-failure.stderr?ref=d82419b4062d69a197d543a17367f254d1b4fcff", "patch": "@@ -1,4 +1,4 @@\n-error[E0119]: conflicting implementations of trait `IntoCow<'_, _>` for type `Cow<'_, _>`:\n+error[E0119]: conflicting implementations of trait `IntoCow<'_, _>` for type `Cow<'_, _>`\n   --> $DIR/associated-types-coherence-failure.rs:21:1\n    |\n LL | impl<'a, B: ?Sized> IntoCow<'a, B> for <B as ToOwned>::Owned where B: ToOwned {\n@@ -7,7 +7,7 @@ LL | impl<'a, B: ?Sized> IntoCow<'a, B> for <B as ToOwned>::Owned where B: ToOwn\n LL | impl<'a, B: ?Sized> IntoCow<'a, B> for Cow<'a, B> where B: ToOwned {\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ conflicting implementation for `Cow<'_, _>`\n \n-error[E0119]: conflicting implementations of trait `IntoCow<'_, _>` for type `&_`:\n+error[E0119]: conflicting implementations of trait `IntoCow<'_, _>` for type `&_`\n   --> $DIR/associated-types-coherence-failure.rs:28:1\n    |\n LL | impl<'a, B: ?Sized> IntoCow<'a, B> for <B as ToOwned>::Owned where B: ToOwned {"}, {"sha": "89017f6cc3ec66f3d000d62254a2a864a9bbc1d0", "filename": "src/test/ui/async-await/issue-67651.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d82419b4062d69a197d543a17367f254d1b4fcff/src%2Ftest%2Fui%2Fasync-await%2Fissue-67651.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d82419b4062d69a197d543a17367f254d1b4fcff/src%2Ftest%2Fui%2Fasync-await%2Fissue-67651.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fasync-await%2Fissue-67651.stderr?ref=d82419b4062d69a197d543a17367f254d1b4fcff", "patch": "@@ -1,4 +1,4 @@\n-error[E0119]: conflicting implementations of trait `From` for type `()`:\n+error[E0119]: conflicting implementations of trait `From` for type `()`\n   --> $DIR/issue-67651.rs:11:1\n    |\n LL | impl From for () {"}, {"sha": "9156972a1df99935fae01da938e22355a8dd9d04", "filename": "src/test/ui/coherence/coherence-blanket-conflicts-with-blanket-implemented.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d82419b4062d69a197d543a17367f254d1b4fcff/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-blanket-conflicts-with-blanket-implemented.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d82419b4062d69a197d543a17367f254d1b4fcff/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-blanket-conflicts-with-blanket-implemented.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-blanket-conflicts-with-blanket-implemented.stderr?ref=d82419b4062d69a197d543a17367f254d1b4fcff", "patch": "@@ -1,4 +1,4 @@\n-error[E0119]: conflicting implementations of trait `MyTrait`:\n+error[E0119]: conflicting implementations of trait `MyTrait`\n   --> $DIR/coherence-blanket-conflicts-with-blanket-implemented.rs:24:1\n    |\n LL | impl<T:Even> MyTrait for T {"}, {"sha": "8400968e1227d2afce3c7518256af65e6c1ba7a9", "filename": "src/test/ui/coherence/coherence-blanket-conflicts-with-blanket-unimplemented.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d82419b4062d69a197d543a17367f254d1b4fcff/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-blanket-conflicts-with-blanket-unimplemented.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d82419b4062d69a197d543a17367f254d1b4fcff/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-blanket-conflicts-with-blanket-unimplemented.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-blanket-conflicts-with-blanket-unimplemented.stderr?ref=d82419b4062d69a197d543a17367f254d1b4fcff", "patch": "@@ -1,4 +1,4 @@\n-error[E0119]: conflicting implementations of trait `MyTrait`:\n+error[E0119]: conflicting implementations of trait `MyTrait`\n   --> $DIR/coherence-blanket-conflicts-with-blanket-unimplemented.rs:20:1\n    |\n LL | impl<T:Even> MyTrait for T {"}, {"sha": "c25c43692928af13c3f75aa79dcc01e2563877cb", "filename": "src/test/ui/coherence/coherence-blanket-conflicts-with-specific-cross-crate.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d82419b4062d69a197d543a17367f254d1b4fcff/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-blanket-conflicts-with-specific-cross-crate.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d82419b4062d69a197d543a17367f254d1b4fcff/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-blanket-conflicts-with-specific-cross-crate.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-blanket-conflicts-with-specific-cross-crate.stderr?ref=d82419b4062d69a197d543a17367f254d1b4fcff", "patch": "@@ -1,4 +1,4 @@\n-error[E0119]: conflicting implementations of trait `go_trait::GoMut` for type `MyThingy`:\n+error[E0119]: conflicting implementations of trait `go_trait::GoMut` for type `MyThingy`\n   --> $DIR/coherence-blanket-conflicts-with-specific-cross-crate.rs:15:1\n    |\n LL | impl GoMut for MyThingy {"}, {"sha": "c2a925213da2dd478e8797fccaeed73c8d42903f", "filename": "src/test/ui/coherence/coherence-blanket-conflicts-with-specific-multidispatch.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d82419b4062d69a197d543a17367f254d1b4fcff/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-blanket-conflicts-with-specific-multidispatch.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d82419b4062d69a197d543a17367f254d1b4fcff/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-blanket-conflicts-with-specific-multidispatch.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-blanket-conflicts-with-specific-multidispatch.stderr?ref=d82419b4062d69a197d543a17367f254d1b4fcff", "patch": "@@ -1,4 +1,4 @@\n-error[E0119]: conflicting implementations of trait `MyTrait<MyType>` for type `MyType`:\n+error[E0119]: conflicting implementations of trait `MyTrait<MyType>` for type `MyType`\n   --> $DIR/coherence-blanket-conflicts-with-specific-multidispatch.rs:22:1\n    |\n LL | impl<T> MyTrait<T> for T {"}, {"sha": "e1a5dffebdaad5fd1813386af56929fe96201c0f", "filename": "src/test/ui/coherence/coherence-blanket-conflicts-with-specific-trait.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d82419b4062d69a197d543a17367f254d1b4fcff/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-blanket-conflicts-with-specific-trait.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d82419b4062d69a197d543a17367f254d1b4fcff/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-blanket-conflicts-with-specific-trait.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-blanket-conflicts-with-specific-trait.stderr?ref=d82419b4062d69a197d543a17367f254d1b4fcff", "patch": "@@ -1,4 +1,4 @@\n-error[E0119]: conflicting implementations of trait `MyTrait` for type `MyType`:\n+error[E0119]: conflicting implementations of trait `MyTrait` for type `MyType`\n   --> $DIR/coherence-blanket-conflicts-with-specific-trait.rs:20:1\n    |\n LL | impl<T:OtherTrait> MyTrait for T {"}, {"sha": "ba60a2ea92947eb4576bf0910d456d5f1b2cd86c", "filename": "src/test/ui/coherence/coherence-blanket-conflicts-with-specific.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d82419b4062d69a197d543a17367f254d1b4fcff/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-blanket-conflicts-with-specific.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d82419b4062d69a197d543a17367f254d1b4fcff/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-blanket-conflicts-with-specific.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-blanket-conflicts-with-specific.stderr?ref=d82419b4062d69a197d543a17367f254d1b4fcff", "patch": "@@ -1,4 +1,4 @@\n-error[E0119]: conflicting implementations of trait `MyTrait` for type `MyType`:\n+error[E0119]: conflicting implementations of trait `MyTrait` for type `MyType`\n   --> $DIR/coherence-blanket-conflicts-with-specific.rs:19:1\n    |\n LL | impl<T> MyTrait for T {"}, {"sha": "5295170cd8bf37539be877c8719c78869f46c871", "filename": "src/test/ui/coherence/coherence-conflicting-negative-trait-impl.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d82419b4062d69a197d543a17367f254d1b4fcff/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-conflicting-negative-trait-impl.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d82419b4062d69a197d543a17367f254d1b4fcff/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-conflicting-negative-trait-impl.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-conflicting-negative-trait-impl.stderr?ref=d82419b4062d69a197d543a17367f254d1b4fcff", "patch": "@@ -7,7 +7,7 @@ LL |\n LL | impl<T: MyTrait> !Send for TestType<T> {}\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ negative implementation here\n \n-error[E0119]: conflicting implementations of trait `std::marker::Send` for type `TestType<_>`:\n+error[E0119]: conflicting implementations of trait `std::marker::Send` for type `TestType<_>`\n   --> $DIR/coherence-conflicting-negative-trait-impl.rs:13:1\n    |\n LL | unsafe impl<T: MyTrait + 'static> Send for TestType<T> {}"}, {"sha": "d0d86c72ffc68ebe5d11ba76a26e43933cfa83d4", "filename": "src/test/ui/coherence/coherence-cross-crate-conflict.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d82419b4062d69a197d543a17367f254d1b4fcff/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-cross-crate-conflict.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d82419b4062d69a197d543a17367f254d1b4fcff/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-cross-crate-conflict.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-cross-crate-conflict.stderr?ref=d82419b4062d69a197d543a17367f254d1b4fcff", "patch": "@@ -1,4 +1,4 @@\n-error[E0119]: conflicting implementations of trait `trait_impl_conflict::Foo` for type `isize`:\n+error[E0119]: conflicting implementations of trait `trait_impl_conflict::Foo` for type `isize`\n   --> $DIR/coherence-cross-crate-conflict.rs:9:1\n    |\n LL | impl<A> Foo for A {"}, {"sha": "7dabd97b94e823d93462b0cc5c8b61ff4789cddf", "filename": "src/test/ui/coherence/coherence-fn-covariant-bound-vs-static.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d82419b4062d69a197d543a17367f254d1b4fcff/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-fn-covariant-bound-vs-static.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d82419b4062d69a197d543a17367f254d1b4fcff/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-fn-covariant-bound-vs-static.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-fn-covariant-bound-vs-static.stderr?ref=d82419b4062d69a197d543a17367f254d1b4fcff", "patch": "@@ -1,4 +1,4 @@\n-error[E0119]: conflicting implementations of trait `Trait` for type `for<'r> fn(fn(&'r ()))`:\n+error[E0119]: conflicting implementations of trait `Trait` for type `for<'r> fn(fn(&'r ()))`\n   --> $DIR/coherence-fn-covariant-bound-vs-static.rs:17:1\n    |\n LL | impl Trait for for<'r> fn(fn(&'r ())) {}"}, {"sha": "c8accc9974791c6dfc32d31bfd4bd35a8a9f390e", "filename": "src/test/ui/coherence/coherence-fn-implied-bounds.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d82419b4062d69a197d543a17367f254d1b4fcff/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-fn-implied-bounds.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d82419b4062d69a197d543a17367f254d1b4fcff/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-fn-implied-bounds.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-fn-implied-bounds.stderr?ref=d82419b4062d69a197d543a17367f254d1b4fcff", "patch": "@@ -1,4 +1,4 @@\n-error: conflicting implementations of trait `Trait` for type `for<'a, 'b> fn(&'a &'b u32, &'b &'a u32) -> &'b u32`:\n+error: conflicting implementations of trait `Trait` for type `for<'a, 'b> fn(&'a &'b u32, &'b &'a u32) -> &'b u32`\n   --> $DIR/coherence-fn-implied-bounds.rs:21:1\n    |\n LL | impl Trait for for<'a, 'b> fn(&'a &'b u32, &'b &'a u32) -> &'b u32 {}"}, {"sha": "82bd8a35f45757cfbacf6d69b8c2454de1d580fa", "filename": "src/test/ui/coherence/coherence-fn-inputs.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d82419b4062d69a197d543a17367f254d1b4fcff/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-fn-inputs.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d82419b4062d69a197d543a17367f254d1b4fcff/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-fn-inputs.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-fn-inputs.stderr?ref=d82419b4062d69a197d543a17367f254d1b4fcff", "patch": "@@ -1,4 +1,4 @@\n-error[E0119]: conflicting implementations of trait `Trait` for type `for<'a, 'b> fn(&'a u32, &'b u32)`:\n+error[E0119]: conflicting implementations of trait `Trait` for type `for<'a, 'b> fn(&'a u32, &'b u32)`\n   --> $DIR/coherence-fn-inputs.rs:15:1\n    |\n LL | impl Trait for for<'a, 'b> fn(&'a u32, &'b u32) {}"}, {"sha": "c249fa43c3b6058c2d2a91f0c37916a2bd4ce6df", "filename": "src/test/ui/coherence/coherence-free-vs-bound-region.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d82419b4062d69a197d543a17367f254d1b4fcff/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-free-vs-bound-region.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d82419b4062d69a197d543a17367f254d1b4fcff/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-free-vs-bound-region.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-free-vs-bound-region.stderr?ref=d82419b4062d69a197d543a17367f254d1b4fcff", "patch": "@@ -1,4 +1,4 @@\n-error: conflicting implementations of trait `TheTrait` for type `fn(&u8)`:\n+error: conflicting implementations of trait `TheTrait` for type `fn(&u8)`\n   --> $DIR/coherence-free-vs-bound-region.rs:16:1\n    |\n LL | impl<'a> TheTrait for fn(&'a u8) {}"}, {"sha": "2ac0706d72e57cf24e1207e190dbb0cf10fdce61", "filename": "src/test/ui/coherence/coherence-impls-copy.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/d82419b4062d69a197d543a17367f254d1b4fcff/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-impls-copy.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d82419b4062d69a197d543a17367f254d1b4fcff/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-impls-copy.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-impls-copy.stderr?ref=d82419b4062d69a197d543a17367f254d1b4fcff", "patch": "@@ -1,4 +1,4 @@\n-error[E0119]: conflicting implementations of trait `std::marker::Copy` for type `i32`:\n+error[E0119]: conflicting implementations of trait `std::marker::Copy` for type `i32`\n   --> $DIR/coherence-impls-copy.rs:5:1\n    |\n LL | impl Copy for i32 {}\n@@ -7,7 +7,7 @@ LL | impl Copy for i32 {}\n    = note: conflicting implementation in crate `core`:\n            - impl Copy for i32;\n \n-error[E0119]: conflicting implementations of trait `std::marker::Copy` for type `&NotSync`:\n+error[E0119]: conflicting implementations of trait `std::marker::Copy` for type `&NotSync`\n   --> $DIR/coherence-impls-copy.rs:29:1\n    |\n LL | impl Copy for &'static NotSync {}\n@@ -17,7 +17,7 @@ LL | impl Copy for &'static NotSync {}\n            - impl<T> Copy for &T\n              where T: ?Sized;\n \n-error[E0119]: conflicting implementations of trait `std::marker::Copy` for type `&[NotSync]`:\n+error[E0119]: conflicting implementations of trait `std::marker::Copy` for type `&[NotSync]`\n   --> $DIR/coherence-impls-copy.rs:34:1\n    |\n LL | impl Copy for &'static [NotSync] {}"}, {"sha": "46e9e7e986c3432da3abb4afd27bc40adf157c76", "filename": "src/test/ui/coherence/coherence-impls-send.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d82419b4062d69a197d543a17367f254d1b4fcff/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-impls-send.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d82419b4062d69a197d543a17367f254d1b4fcff/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-impls-send.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-impls-send.stderr?ref=d82419b4062d69a197d543a17367f254d1b4fcff", "patch": "@@ -1,4 +1,4 @@\n-error[E0119]: conflicting implementations of trait `std::marker::Send` for type `&[NotSync]`:\n+error[E0119]: conflicting implementations of trait `std::marker::Send` for type `&[NotSync]`\n   --> $DIR/coherence-impls-send.rs:25:1\n    |\n LL | unsafe impl Send for &'static [NotSync] {}"}, {"sha": "8a43ad7b7f0e806c3508e32b3f09a2211c460857", "filename": "src/test/ui/coherence/coherence-no-direct-lifetime-dispatch.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d82419b4062d69a197d543a17367f254d1b4fcff/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-no-direct-lifetime-dispatch.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d82419b4062d69a197d543a17367f254d1b4fcff/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-no-direct-lifetime-dispatch.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-no-direct-lifetime-dispatch.stderr?ref=d82419b4062d69a197d543a17367f254d1b4fcff", "patch": "@@ -1,4 +1,4 @@\n-error[E0119]: conflicting implementations of trait `MyTrait`:\n+error[E0119]: conflicting implementations of trait `MyTrait`\n   --> $DIR/coherence-no-direct-lifetime-dispatch.rs:6:1\n    |\n LL | impl<T> MyTrait for T {}"}, {"sha": "6a0880334b6e058f2a29767f1c7bc47d04dc9c24", "filename": "src/test/ui/coherence/coherence-overlap-all-t-and-tuple.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d82419b4062d69a197d543a17367f254d1b4fcff/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-overlap-all-t-and-tuple.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d82419b4062d69a197d543a17367f254d1b4fcff/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-overlap-all-t-and-tuple.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-overlap-all-t-and-tuple.stderr?ref=d82419b4062d69a197d543a17367f254d1b4fcff", "patch": "@@ -1,4 +1,4 @@\n-error[E0119]: conflicting implementations of trait `From<(_,)>` for type `(_,)`:\n+error[E0119]: conflicting implementations of trait `From<(_,)>` for type `(_,)`\n   --> $DIR/coherence-overlap-all-t-and-tuple.rs:16:1\n    |\n LL | impl <T> From<T> for T {"}, {"sha": "9ab099489d9e582af5e92e2f7d2f914b713642e0", "filename": "src/test/ui/coherence/coherence-overlap-downstream.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/d82419b4062d69a197d543a17367f254d1b4fcff/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-overlap-downstream.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d82419b4062d69a197d543a17367f254d1b4fcff/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-overlap-downstream.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-overlap-downstream.stderr?ref=d82419b4062d69a197d543a17367f254d1b4fcff", "patch": "@@ -1,12 +1,12 @@\n-error[E0119]: conflicting implementations of trait `Sweet`:\n+error[E0119]: conflicting implementations of trait `Sweet`\n   --> $DIR/coherence-overlap-downstream.rs:8:1\n    |\n LL | impl<T:Sugar> Sweet for T { }\n    | ------------------------- first implementation here\n LL | impl<T:Fruit> Sweet for T { }\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^ conflicting implementation\n \n-error[E0119]: conflicting implementations of trait `Foo<_>` for type `i32`:\n+error[E0119]: conflicting implementations of trait `Foo<_>` for type `i32`\n   --> $DIR/coherence-overlap-downstream.rs:14:1\n    |\n LL | impl<X, T> Foo<X> for T where T: Bar<X> {}"}, {"sha": "85eb189e10eeee540fd9b50b1e1b851ec129ddb2", "filename": "src/test/ui/coherence/coherence-overlap-issue-23516.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d82419b4062d69a197d543a17367f254d1b4fcff/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-overlap-issue-23516.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d82419b4062d69a197d543a17367f254d1b4fcff/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-overlap-issue-23516.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-overlap-issue-23516.stderr?ref=d82419b4062d69a197d543a17367f254d1b4fcff", "patch": "@@ -1,4 +1,4 @@\n-error[E0119]: conflicting implementations of trait `Sweet` for type `std::boxed::Box<_>`:\n+error[E0119]: conflicting implementations of trait `Sweet` for type `std::boxed::Box<_>`\n   --> $DIR/coherence-overlap-issue-23516.rs:8:1\n    |\n LL | impl<T:Sugar> Sweet for T { }"}, {"sha": "5a97296eebd9b777e607ead9ba49d763ff397b81", "filename": "src/test/ui/coherence/coherence-overlap-messages.stderr", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/d82419b4062d69a197d543a17367f254d1b4fcff/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-overlap-messages.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d82419b4062d69a197d543a17367f254d1b4fcff/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-overlap-messages.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-overlap-messages.stderr?ref=d82419b4062d69a197d543a17367f254d1b4fcff", "patch": "@@ -1,36 +1,36 @@\n-error[E0119]: conflicting implementations of trait `Foo`:\n+error[E0119]: conflicting implementations of trait `Foo`\n   --> $DIR/coherence-overlap-messages.rs:4:1\n    |\n LL | impl<T> Foo for T {}\n    | ----------------- first implementation here\n LL | impl<U> Foo for U {}\n    | ^^^^^^^^^^^^^^^^^ conflicting implementation\n \n-error[E0119]: conflicting implementations of trait `Bar` for type `(u8, u8)`:\n+error[E0119]: conflicting implementations of trait `Bar` for type `(u8, u8)`\n   --> $DIR/coherence-overlap-messages.rs:11:1\n    |\n LL | impl<T> Bar for (T, u8) {}\n    | ----------------------- first implementation here\n LL | impl<T> Bar for (u8, T) {}\n    | ^^^^^^^^^^^^^^^^^^^^^^^ conflicting implementation for `(u8, u8)`\n \n-error[E0119]: conflicting implementations of trait `Baz<u8>` for type `u8`:\n+error[E0119]: conflicting implementations of trait `Baz<u8>` for type `u8`\n   --> $DIR/coherence-overlap-messages.rs:17:1\n    |\n LL | impl<T> Baz<u8> for T {}\n    | --------------------- first implementation here\n LL | impl<T> Baz<T> for u8 {}\n    | ^^^^^^^^^^^^^^^^^^^^^ conflicting implementation for `u8`\n \n-error[E0119]: conflicting implementations of trait `Quux<_, _>`:\n+error[E0119]: conflicting implementations of trait `Quux<_, _>`\n   --> $DIR/coherence-overlap-messages.rs:23:1\n    |\n LL | impl<T, U, V> Quux<U, V> for T {}\n    | ------------------------------ first implementation here\n LL | impl<T, U> Quux<U, U> for T {}\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^ conflicting implementation\n \n-error[E0119]: conflicting implementations of trait `Quux<_, _>`:\n+error[E0119]: conflicting implementations of trait `Quux<_, _>`\n   --> $DIR/coherence-overlap-messages.rs:25:1\n    |\n LL | impl<T, U, V> Quux<U, V> for T {}"}, {"sha": "8272c8875860792ffb6ca196935c6684a586eaa3", "filename": "src/test/ui/coherence/coherence-overlap-upstream.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d82419b4062d69a197d543a17367f254d1b4fcff/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-overlap-upstream.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d82419b4062d69a197d543a17367f254d1b4fcff/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-overlap-upstream.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-overlap-upstream.stderr?ref=d82419b4062d69a197d543a17367f254d1b4fcff", "patch": "@@ -1,4 +1,4 @@\n-error[E0119]: conflicting implementations of trait `Foo` for type `i16`:\n+error[E0119]: conflicting implementations of trait `Foo` for type `i16`\n   --> $DIR/coherence-overlap-upstream.rs:13:1\n    |\n LL | impl<T> Foo for T where T: Remote {}"}, {"sha": "51f6faab3c7e48bde89e253cb8a580fee7f0dfa0", "filename": "src/test/ui/coherence/coherence-projection-conflict-orphan.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d82419b4062d69a197d543a17367f254d1b4fcff/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-projection-conflict-orphan.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d82419b4062d69a197d543a17367f254d1b4fcff/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-projection-conflict-orphan.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-projection-conflict-orphan.stderr?ref=d82419b4062d69a197d543a17367f254d1b4fcff", "patch": "@@ -1,4 +1,4 @@\n-error[E0119]: conflicting implementations of trait `Foo<i32>` for type `i32`:\n+error[E0119]: conflicting implementations of trait `Foo<i32>` for type `i32`\n   --> $DIR/coherence-projection-conflict-orphan.rs:16:1\n    |\n LL | impl Foo<i32> for i32 { }"}, {"sha": "85d3d358f83cf8ea5aba1e7db543e4b4d48ccd31", "filename": "src/test/ui/coherence/coherence-projection-conflict-ty-param.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d82419b4062d69a197d543a17367f254d1b4fcff/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-projection-conflict-ty-param.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d82419b4062d69a197d543a17367f254d1b4fcff/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-projection-conflict-ty-param.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-projection-conflict-ty-param.stderr?ref=d82419b4062d69a197d543a17367f254d1b4fcff", "patch": "@@ -1,4 +1,4 @@\n-error[E0119]: conflicting implementations of trait `Foo<_>` for type `std::option::Option<_>`:\n+error[E0119]: conflicting implementations of trait `Foo<_>` for type `std::option::Option<_>`\n   --> $DIR/coherence-projection-conflict-ty-param.rs:10:1\n    |\n LL | impl <P, T: Foo<P>> Foo<P> for Option<T> {}"}, {"sha": "e7d1fb293466197249a9a3a3831eac7518cc5a51", "filename": "src/test/ui/coherence/coherence-projection-conflict.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d82419b4062d69a197d543a17367f254d1b4fcff/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-projection-conflict.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d82419b4062d69a197d543a17367f254d1b4fcff/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-projection-conflict.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-projection-conflict.stderr?ref=d82419b4062d69a197d543a17367f254d1b4fcff", "patch": "@@ -1,4 +1,4 @@\n-error[E0119]: conflicting implementations of trait `Foo<i32>` for type `i32`:\n+error[E0119]: conflicting implementations of trait `Foo<i32>` for type `i32`\n   --> $DIR/coherence-projection-conflict.rs:11:1\n    |\n LL | impl Foo<i32> for i32 { }"}, {"sha": "6f95f0a06b5fa1beb93988bb669407e57c79ce11", "filename": "src/test/ui/coherence/coherence-subtyping.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d82419b4062d69a197d543a17367f254d1b4fcff/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-subtyping.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d82419b4062d69a197d543a17367f254d1b4fcff/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-subtyping.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-subtyping.stderr?ref=d82419b4062d69a197d543a17367f254d1b4fcff", "patch": "@@ -1,4 +1,4 @@\n-warning: conflicting implementations of trait `TheTrait` for type `for<'a, 'b> fn(&'a u8, &'b u8) -> &'a u8`:\n+warning: conflicting implementations of trait `TheTrait` for type `for<'a, 'b> fn(&'a u8, &'b u8) -> &'a u8`\n   --> $DIR/coherence-subtyping.rs:15:1\n    |\n LL | impl TheTrait for for<'a, 'b> fn(&'a u8, &'b u8) -> &'a u8 {}"}, {"sha": "09ad5e5b22435e4099704695ec34ac4b3bb0f74d", "filename": "src/test/ui/coherence/coherence-tuple-conflict.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d82419b4062d69a197d543a17367f254d1b4fcff/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-tuple-conflict.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d82419b4062d69a197d543a17367f254d1b4fcff/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-tuple-conflict.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-tuple-conflict.stderr?ref=d82419b4062d69a197d543a17367f254d1b4fcff", "patch": "@@ -1,4 +1,4 @@\n-error[E0119]: conflicting implementations of trait `MyTrait` for type `(_, _)`:\n+error[E0119]: conflicting implementations of trait `MyTrait` for type `(_, _)`\n   --> $DIR/coherence-tuple-conflict.rs:15:1\n    |\n LL | impl<T> MyTrait for (T,T) {"}, {"sha": "432646e5321eb86eb20f72013252e66f8e5cda37", "filename": "src/test/ui/coherence/coherence-wasm-bindgen.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d82419b4062d69a197d543a17367f254d1b4fcff/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-wasm-bindgen.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d82419b4062d69a197d543a17367f254d1b4fcff/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-wasm-bindgen.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcoherence%2Fcoherence-wasm-bindgen.stderr?ref=d82419b4062d69a197d543a17367f254d1b4fcff", "patch": "@@ -1,4 +1,4 @@\n-error: conflicting implementations of trait `IntoWasmAbi` for type `&dyn std::ops::Fn(&_) -> _`:\n+error: conflicting implementations of trait `IntoWasmAbi` for type `&dyn std::ops::Fn(&_) -> _`\n   --> $DIR/coherence-wasm-bindgen.rs:28:1\n    |\n LL | / impl<'a, 'b, A, R> IntoWasmAbi for &'a (dyn Fn(A) -> R + 'b)"}, {"sha": "db730650185e306e8e2832a6c0833f7ee2be4cbc", "filename": "src/test/ui/coherence/coherence_copy_like_err_fundamental_struct_tuple.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d82419b4062d69a197d543a17367f254d1b4fcff/src%2Ftest%2Fui%2Fcoherence%2Fcoherence_copy_like_err_fundamental_struct_tuple.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d82419b4062d69a197d543a17367f254d1b4fcff/src%2Ftest%2Fui%2Fcoherence%2Fcoherence_copy_like_err_fundamental_struct_tuple.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcoherence%2Fcoherence_copy_like_err_fundamental_struct_tuple.stderr?ref=d82419b4062d69a197d543a17367f254d1b4fcff", "patch": "@@ -1,4 +1,4 @@\n-error[E0119]: conflicting implementations of trait `MyTrait` for type `lib::MyFundamentalStruct<(MyType,)>`:\n+error[E0119]: conflicting implementations of trait `MyTrait` for type `lib::MyFundamentalStruct<(MyType,)>`\n   --> $DIR/coherence_copy_like_err_fundamental_struct_tuple.rs:16:1\n    |\n LL | impl<T: lib::MyCopy> MyTrait for T { }"}, {"sha": "3bc3dffda5d1bbbf95dc29ef8c23aceba0d511eb", "filename": "src/test/ui/coherence/coherence_copy_like_err_struct.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d82419b4062d69a197d543a17367f254d1b4fcff/src%2Ftest%2Fui%2Fcoherence%2Fcoherence_copy_like_err_struct.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d82419b4062d69a197d543a17367f254d1b4fcff/src%2Ftest%2Fui%2Fcoherence%2Fcoherence_copy_like_err_struct.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcoherence%2Fcoherence_copy_like_err_struct.stderr?ref=d82419b4062d69a197d543a17367f254d1b4fcff", "patch": "@@ -1,4 +1,4 @@\n-error[E0119]: conflicting implementations of trait `MyTrait` for type `lib::MyStruct<MyType>`:\n+error[E0119]: conflicting implementations of trait `MyTrait` for type `lib::MyStruct<MyType>`\n   --> $DIR/coherence_copy_like_err_struct.rs:19:1\n    |\n LL | impl<T: lib::MyCopy> MyTrait for T { }"}, {"sha": "090497ec18977a6027e00f4b01514b987c131ecd", "filename": "src/test/ui/coherence/coherence_copy_like_err_tuple.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d82419b4062d69a197d543a17367f254d1b4fcff/src%2Ftest%2Fui%2Fcoherence%2Fcoherence_copy_like_err_tuple.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d82419b4062d69a197d543a17367f254d1b4fcff/src%2Ftest%2Fui%2Fcoherence%2Fcoherence_copy_like_err_tuple.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcoherence%2Fcoherence_copy_like_err_tuple.stderr?ref=d82419b4062d69a197d543a17367f254d1b4fcff", "patch": "@@ -1,4 +1,4 @@\n-error[E0119]: conflicting implementations of trait `MyTrait` for type `(MyType,)`:\n+error[E0119]: conflicting implementations of trait `MyTrait` for type `(MyType,)`\n   --> $DIR/coherence_copy_like_err_tuple.rs:18:1\n    |\n LL | impl<T: lib::MyCopy> MyTrait for T { }"}, {"sha": "846db0c91b6e758948e9337e922ceb0ba8bf33fe", "filename": "src/test/ui/const-generics/issues/issue-64494.min.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d82419b4062d69a197d543a17367f254d1b4fcff/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-64494.min.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d82419b4062d69a197d543a17367f254d1b4fcff/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-64494.min.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-64494.min.stderr?ref=d82419b4062d69a197d543a17367f254d1b4fcff", "patch": "@@ -16,7 +16,7 @@ LL | impl<T: Foo> MyTrait for T where Is<{T::VAL == 6}>: True {}\n    = note: type parameters may not be used in const expressions\n    = help: use `#![feature(const_generics)]` and `#![feature(const_evaluatable_checked)]` to allow generic const expressions\n \n-error[E0119]: conflicting implementations of trait `MyTrait`:\n+error[E0119]: conflicting implementations of trait `MyTrait`\n   --> $DIR/issue-64494.rs:18:1\n    |\n LL | impl<T: Foo> MyTrait for T where Is<{T::VAL == 5}>: True {}"}, {"sha": "e08a2c7fcbbd0ff0992e2995ee3bc351f9d51f1b", "filename": "src/test/ui/error-codes/E0119.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d82419b4062d69a197d543a17367f254d1b4fcff/src%2Ftest%2Fui%2Ferror-codes%2FE0119.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d82419b4062d69a197d543a17367f254d1b4fcff/src%2Ftest%2Fui%2Ferror-codes%2FE0119.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ferror-codes%2FE0119.stderr?ref=d82419b4062d69a197d543a17367f254d1b4fcff", "patch": "@@ -1,4 +1,4 @@\n-error[E0119]: conflicting implementations of trait `MyTrait` for type `Foo`:\n+error[E0119]: conflicting implementations of trait `MyTrait` for type `Foo`\n   --> $DIR/E0119.rs:13:1\n    |\n LL | impl<T> MyTrait for T {"}, {"sha": "04babb0644718fa37121e1c1e00876d6d0d923a5", "filename": "src/test/ui/error-codes/e0119/complex-impl.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d82419b4062d69a197d543a17367f254d1b4fcff/src%2Ftest%2Fui%2Ferror-codes%2Fe0119%2Fcomplex-impl.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d82419b4062d69a197d543a17367f254d1b4fcff/src%2Ftest%2Fui%2Ferror-codes%2Fe0119%2Fcomplex-impl.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ferror-codes%2Fe0119%2Fcomplex-impl.stderr?ref=d82419b4062d69a197d543a17367f254d1b4fcff", "patch": "@@ -1,4 +1,4 @@\n-error[E0119]: conflicting implementations of trait `complex_impl_support::External` for type `(Q, complex_impl_support::M<'_, '_, '_, std::boxed::Box<_>, _, _>)`:\n+error[E0119]: conflicting implementations of trait `complex_impl_support::External` for type `(Q, complex_impl_support::M<'_, '_, '_, std::boxed::Box<_>, _, _>)`\n   --> $DIR/complex-impl.rs:9:1\n    |\n LL | impl<R> External for (Q, R) {}"}, {"sha": "3ff96a6a4d65dfc5599b2ec30e9a7a1abe3ede55", "filename": "src/test/ui/error-codes/e0119/conflict-with-std.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/d82419b4062d69a197d543a17367f254d1b4fcff/src%2Ftest%2Fui%2Ferror-codes%2Fe0119%2Fconflict-with-std.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d82419b4062d69a197d543a17367f254d1b4fcff/src%2Ftest%2Fui%2Ferror-codes%2Fe0119%2Fconflict-with-std.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ferror-codes%2Fe0119%2Fconflict-with-std.stderr?ref=d82419b4062d69a197d543a17367f254d1b4fcff", "patch": "@@ -1,4 +1,4 @@\n-error[E0119]: conflicting implementations of trait `std::convert::AsRef<Q>` for type `std::boxed::Box<Q>`:\n+error[E0119]: conflicting implementations of trait `std::convert::AsRef<Q>` for type `std::boxed::Box<Q>`\n   --> $DIR/conflict-with-std.rs:5:1\n    |\n LL | impl AsRef<Q> for Box<Q> {\n@@ -8,7 +8,7 @@ LL | impl AsRef<Q> for Box<Q> {\n            - impl<T, A> AsRef<T> for Box<T, A>\n              where A: Allocator, T: ?Sized;\n \n-error[E0119]: conflicting implementations of trait `std::convert::From<S>` for type `S`:\n+error[E0119]: conflicting implementations of trait `std::convert::From<S>` for type `S`\n   --> $DIR/conflict-with-std.rs:12:1\n    |\n LL | impl From<S> for S {\n@@ -17,7 +17,7 @@ LL | impl From<S> for S {\n    = note: conflicting implementation in crate `core`:\n            - impl<T> From<T> for T;\n \n-error[E0119]: conflicting implementations of trait `std::convert::TryFrom<X>` for type `X`:\n+error[E0119]: conflicting implementations of trait `std::convert::TryFrom<X>` for type `X`\n   --> $DIR/conflict-with-std.rs:19:1\n    |\n LL | impl TryFrom<X> for X {"}, {"sha": "f149cef587f2550219afb4d79506154629310d9d", "filename": "src/test/ui/error-codes/e0119/issue-23563.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d82419b4062d69a197d543a17367f254d1b4fcff/src%2Ftest%2Fui%2Ferror-codes%2Fe0119%2Fissue-23563.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d82419b4062d69a197d543a17367f254d1b4fcff/src%2Ftest%2Fui%2Ferror-codes%2Fe0119%2Fissue-23563.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ferror-codes%2Fe0119%2Fissue-23563.stderr?ref=d82419b4062d69a197d543a17367f254d1b4fcff", "patch": "@@ -1,4 +1,4 @@\n-error[E0119]: conflicting implementations of trait `a::LolFrom<&[_]>` for type `LocalType<_>`:\n+error[E0119]: conflicting implementations of trait `a::LolFrom<&[_]>` for type `LocalType<_>`\n   --> $DIR/issue-23563.rs:13:1\n    |\n LL | impl<'a, T> LolFrom<&'a [T]> for LocalType<T> {"}, {"sha": "c11a50487479e6cc4c415f19d3f09f352affb9f7", "filename": "src/test/ui/error-codes/e0119/issue-27403.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d82419b4062d69a197d543a17367f254d1b4fcff/src%2Ftest%2Fui%2Ferror-codes%2Fe0119%2Fissue-27403.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d82419b4062d69a197d543a17367f254d1b4fcff/src%2Ftest%2Fui%2Ferror-codes%2Fe0119%2Fissue-27403.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ferror-codes%2Fe0119%2Fissue-27403.stderr?ref=d82419b4062d69a197d543a17367f254d1b4fcff", "patch": "@@ -1,4 +1,4 @@\n-error[E0119]: conflicting implementations of trait `std::convert::Into<_>` for type `GenX<_>`:\n+error[E0119]: conflicting implementations of trait `std::convert::Into<_>` for type `GenX<_>`\n   --> $DIR/issue-27403.rs:5:1\n    |\n LL | impl<S> Into<S> for GenX<S> {"}, {"sha": "56e8e1eb5400242783f4c3d2fb35438adedbf48b", "filename": "src/test/ui/error-codes/e0119/issue-28981.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d82419b4062d69a197d543a17367f254d1b4fcff/src%2Ftest%2Fui%2Ferror-codes%2Fe0119%2Fissue-28981.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d82419b4062d69a197d543a17367f254d1b4fcff/src%2Ftest%2Fui%2Ferror-codes%2Fe0119%2Fissue-28981.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ferror-codes%2Fe0119%2Fissue-28981.stderr?ref=d82419b4062d69a197d543a17367f254d1b4fcff", "patch": "@@ -1,4 +1,4 @@\n-error[E0119]: conflicting implementations of trait `std::ops::Deref` for type `&_`:\n+error[E0119]: conflicting implementations of trait `std::ops::Deref` for type `&_`\n   --> $DIR/issue-28981.rs:5:1\n    |\n LL | impl<Foo> Deref for Foo { }"}, {"sha": "f1c2b0d29742e30ddf60d1953e24e2552f618cf5", "filename": "src/test/ui/error-codes/e0119/so-37347311.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d82419b4062d69a197d543a17367f254d1b4fcff/src%2Ftest%2Fui%2Ferror-codes%2Fe0119%2Fso-37347311.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d82419b4062d69a197d543a17367f254d1b4fcff/src%2Ftest%2Fui%2Ferror-codes%2Fe0119%2Fso-37347311.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ferror-codes%2Fe0119%2Fso-37347311.stderr?ref=d82419b4062d69a197d543a17367f254d1b4fcff", "patch": "@@ -1,4 +1,4 @@\n-error[E0119]: conflicting implementations of trait `std::convert::From<MyError<_>>` for type `MyError<_>`:\n+error[E0119]: conflicting implementations of trait `std::convert::From<MyError<_>>` for type `MyError<_>`\n   --> $DIR/so-37347311.rs:11:1\n    |\n LL | impl<S: Storage> From<S::Error> for MyError<S> {"}, {"sha": "0526c6dc8398043d8561e9337040d608065d21ca", "filename": "src/test/ui/feature-gates/feature-gate-overlapping_marker_traits.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d82419b4062d69a197d543a17367f254d1b4fcff/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-overlapping_marker_traits.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d82419b4062d69a197d543a17367f254d1b4fcff/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-overlapping_marker_traits.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-overlapping_marker_traits.stderr?ref=d82419b4062d69a197d543a17367f254d1b4fcff", "patch": "@@ -1,4 +1,4 @@\n-error[E0119]: conflicting implementations of trait `MyMarker`:\n+error[E0119]: conflicting implementations of trait `MyMarker`\n   --> $DIR/feature-gate-overlapping_marker_traits.rs:6:1\n    |\n LL | impl<T: Display> MyMarker for T {}"}, {"sha": "314617748b0ba25427a38e0d35bde7b5b1fa0299", "filename": "src/test/ui/impl-trait/auto-trait.full_tait.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d82419b4062d69a197d543a17367f254d1b4fcff/src%2Ftest%2Fui%2Fimpl-trait%2Fauto-trait.full_tait.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d82419b4062d69a197d543a17367f254d1b4fcff/src%2Ftest%2Fui%2Fimpl-trait%2Fauto-trait.full_tait.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimpl-trait%2Fauto-trait.full_tait.stderr?ref=d82419b4062d69a197d543a17367f254d1b4fcff", "patch": "@@ -7,7 +7,7 @@ LL | #![cfg_attr(full_tait, feature(type_alias_impl_trait))]\n    = note: `#[warn(incomplete_features)]` on by default\n    = note: see issue #63063 <https://github.com/rust-lang/rust/issues/63063> for more information\n \n-error[E0119]: conflicting implementations of trait `AnotherTrait` for type `D<impl OpaqueTrait>`:\n+error[E0119]: conflicting implementations of trait `AnotherTrait` for type `D<impl OpaqueTrait>`\n   --> $DIR/auto-trait.rs:24:1\n    |\n LL | impl<T: Send> AnotherTrait for T {}"}, {"sha": "75a5b0cb87db139a9f491e54937d36a66c891542", "filename": "src/test/ui/impl-trait/auto-trait.min_tait.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d82419b4062d69a197d543a17367f254d1b4fcff/src%2Ftest%2Fui%2Fimpl-trait%2Fauto-trait.min_tait.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d82419b4062d69a197d543a17367f254d1b4fcff/src%2Ftest%2Fui%2Fimpl-trait%2Fauto-trait.min_tait.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimpl-trait%2Fauto-trait.min_tait.stderr?ref=d82419b4062d69a197d543a17367f254d1b4fcff", "patch": "@@ -1,4 +1,4 @@\n-error[E0119]: conflicting implementations of trait `AnotherTrait` for type `D<impl OpaqueTrait>`:\n+error[E0119]: conflicting implementations of trait `AnotherTrait` for type `D<impl OpaqueTrait>`\n   --> $DIR/auto-trait.rs:24:1\n    |\n LL | impl<T: Send> AnotherTrait for T {}"}, {"sha": "bccbc8cb36b157d0a21334550978c0903f16682c", "filename": "src/test/ui/impl-trait/negative-reasoning.full_tait.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d82419b4062d69a197d543a17367f254d1b4fcff/src%2Ftest%2Fui%2Fimpl-trait%2Fnegative-reasoning.full_tait.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d82419b4062d69a197d543a17367f254d1b4fcff/src%2Ftest%2Fui%2Fimpl-trait%2Fnegative-reasoning.full_tait.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimpl-trait%2Fnegative-reasoning.full_tait.stderr?ref=d82419b4062d69a197d543a17367f254d1b4fcff", "patch": "@@ -7,7 +7,7 @@ LL | #![cfg_attr(full_tait, feature(type_alias_impl_trait))]\n    = note: `#[warn(incomplete_features)]` on by default\n    = note: see issue #63063 <https://github.com/rust-lang/rust/issues/63063> for more information\n \n-error[E0119]: conflicting implementations of trait `AnotherTrait` for type `D<impl OpaqueTrait>`:\n+error[E0119]: conflicting implementations of trait `AnotherTrait` for type `D<impl OpaqueTrait>`\n   --> $DIR/negative-reasoning.rs:22:1\n    |\n LL | impl<T: std::fmt::Debug> AnotherTrait for T {}"}, {"sha": "5727a372ddbe838b4bffbb36d8d7514bdbd48d83", "filename": "src/test/ui/impl-trait/negative-reasoning.min_tait.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d82419b4062d69a197d543a17367f254d1b4fcff/src%2Ftest%2Fui%2Fimpl-trait%2Fnegative-reasoning.min_tait.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d82419b4062d69a197d543a17367f254d1b4fcff/src%2Ftest%2Fui%2Fimpl-trait%2Fnegative-reasoning.min_tait.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimpl-trait%2Fnegative-reasoning.min_tait.stderr?ref=d82419b4062d69a197d543a17367f254d1b4fcff", "patch": "@@ -1,4 +1,4 @@\n-error[E0119]: conflicting implementations of trait `AnotherTrait` for type `D<impl OpaqueTrait>`:\n+error[E0119]: conflicting implementations of trait `AnotherTrait` for type `D<impl OpaqueTrait>`\n   --> $DIR/negative-reasoning.rs:22:1\n    |\n LL | impl<T: std::fmt::Debug> AnotherTrait for T {}"}, {"sha": "be3f7c627800dc135f5a5fc3330dc2072da94197", "filename": "src/test/ui/issues/issue-28568.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d82419b4062d69a197d543a17367f254d1b4fcff/src%2Ftest%2Fui%2Fissues%2Fissue-28568.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d82419b4062d69a197d543a17367f254d1b4fcff/src%2Ftest%2Fui%2Fissues%2Fissue-28568.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-28568.stderr?ref=d82419b4062d69a197d543a17367f254d1b4fcff", "patch": "@@ -1,4 +1,4 @@\n-error[E0119]: conflicting implementations of trait `std::ops::Drop` for type `MyStruct`:\n+error[E0119]: conflicting implementations of trait `std::ops::Drop` for type `MyStruct`\n   --> $DIR/issue-28568.rs:7:1\n    |\n LL | impl Drop for MyStruct {"}, {"sha": "11d77857d60cc96eb941ead57238bb92ece47586", "filename": "src/test/ui/issues/issue-41974.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d82419b4062d69a197d543a17367f254d1b4fcff/src%2Ftest%2Fui%2Fissues%2Fissue-41974.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d82419b4062d69a197d543a17367f254d1b4fcff/src%2Ftest%2Fui%2Fissues%2Fissue-41974.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-41974.stderr?ref=d82419b4062d69a197d543a17367f254d1b4fcff", "patch": "@@ -1,4 +1,4 @@\n-error[E0119]: conflicting implementations of trait `std::ops::Drop` for type `std::boxed::Box<_, _>`:\n+error[E0119]: conflicting implementations of trait `std::ops::Drop` for type `std::boxed::Box<_, _>`\n   --> $DIR/issue-41974.rs:7:1\n    |\n LL | impl<T> Drop for T where T: A {"}, {"sha": "23d8ed1848f59202335f8d51c914f2357c47e719", "filename": "src/test/ui/issues/issue-43355.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d82419b4062d69a197d543a17367f254d1b4fcff/src%2Ftest%2Fui%2Fissues%2Fissue-43355.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d82419b4062d69a197d543a17367f254d1b4fcff/src%2Ftest%2Fui%2Fissues%2Fissue-43355.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-43355.stderr?ref=d82419b4062d69a197d543a17367f254d1b4fcff", "patch": "@@ -1,4 +1,4 @@\n-error[E0119]: conflicting implementations of trait `Trait1<std::boxed::Box<_>>` for type `A`:\n+error[E0119]: conflicting implementations of trait `Trait1<std::boxed::Box<_>>` for type `A`\n   --> $DIR/issue-43355.rs:13:1\n    |\n LL | impl<X, T> Trait1<X> for T where T: Trait2<X> {"}, {"sha": "ca2e234cee668d1623bf0800deb391609a66d787", "filename": "src/test/ui/issues/issue-48728.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d82419b4062d69a197d543a17367f254d1b4fcff/src%2Ftest%2Fui%2Fissues%2Fissue-48728.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d82419b4062d69a197d543a17367f254d1b4fcff/src%2Ftest%2Fui%2Fissues%2Fissue-48728.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-48728.stderr?ref=d82419b4062d69a197d543a17367f254d1b4fcff", "patch": "@@ -1,4 +1,4 @@\n-error[E0119]: conflicting implementations of trait `std::clone::Clone` for type `Node<[_]>`:\n+error[E0119]: conflicting implementations of trait `std::clone::Clone` for type `Node<[_]>`\n   --> $DIR/issue-48728.rs:4:10\n    |\n LL | #[derive(Clone)]"}, {"sha": "871c512052821eae062ebdc38e666d299c6badf8", "filename": "src/test/ui/never_type/never-from-impl-is-reserved.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d82419b4062d69a197d543a17367f254d1b4fcff/src%2Ftest%2Fui%2Fnever_type%2Fnever-from-impl-is-reserved.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d82419b4062d69a197d543a17367f254d1b4fcff/src%2Ftest%2Fui%2Fnever_type%2Fnever-from-impl-is-reserved.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnever_type%2Fnever-from-impl-is-reserved.stderr?ref=d82419b4062d69a197d543a17367f254d1b4fcff", "patch": "@@ -1,4 +1,4 @@\n-error[E0119]: conflicting implementations of trait `MyTrait` for type `MyFoo`:\n+error[E0119]: conflicting implementations of trait `MyTrait` for type `MyFoo`\n   --> $DIR/never-from-impl-is-reserved.rs:10:1\n    |\n LL | impl MyTrait for MyFoo {}"}, {"sha": "99560ed06888aeab78a1e16d1f2c0a2b3e950597", "filename": "src/test/ui/rfc-2632-const-trait-impl/const-and-non-const-impl.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/d82419b4062d69a197d543a17367f254d1b4fcff/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fconst-and-non-const-impl.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d82419b4062d69a197d543a17367f254d1b4fcff/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fconst-and-non-const-impl.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fconst-and-non-const-impl.stderr?ref=d82419b4062d69a197d543a17367f254d1b4fcff", "patch": "@@ -1,4 +1,4 @@\n-error[E0119]: conflicting implementations of trait `std::ops::Add` for type `i32`:\n+error[E0119]: conflicting implementations of trait `std::ops::Add` for type `i32`\n   --> $DIR/const-and-non-const-impl.rs:6:1\n    |\n LL | impl const std::ops::Add for i32 {\n@@ -7,7 +7,7 @@ LL | impl const std::ops::Add for i32 {\n    = note: conflicting implementation in crate `core`:\n            - impl Add for i32;\n \n-error[E0119]: conflicting implementations of trait `std::ops::Add` for type `Int`:\n+error[E0119]: conflicting implementations of trait `std::ops::Add` for type `Int`\n   --> $DIR/const-and-non-const-impl.rs:24:1\n    |\n LL | impl std::ops::Add for Int {"}, {"sha": "ab3cf27d0d05922c7e37667b02ed06edb3c72459", "filename": "src/test/ui/specialization/issue-52050.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d82419b4062d69a197d543a17367f254d1b4fcff/src%2Ftest%2Fui%2Fspecialization%2Fissue-52050.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d82419b4062d69a197d543a17367f254d1b4fcff/src%2Ftest%2Fui%2Fspecialization%2Fissue-52050.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspecialization%2Fissue-52050.stderr?ref=d82419b4062d69a197d543a17367f254d1b4fcff", "patch": "@@ -8,7 +8,7 @@ LL | #![feature(specialization)]\n    = note: see issue #31844 <https://github.com/rust-lang/rust/issues/31844> for more information\n    = help: consider using `min_specialization` instead, which is more stable and complete\n \n-error[E0119]: conflicting implementations of trait `IntoPyDictPointer` for type `()`:\n+error[E0119]: conflicting implementations of trait `IntoPyDictPointer` for type `()`\n   --> $DIR/issue-52050.rs:28:1\n    |\n LL | / impl<I> IntoPyDictPointer for I"}, {"sha": "9157ad0d46a1a57de04c3eeb422567eb347ea589", "filename": "src/test/ui/specialization/specialization-feature-gate-overlap.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d82419b4062d69a197d543a17367f254d1b4fcff/src%2Ftest%2Fui%2Fspecialization%2Fspecialization-feature-gate-overlap.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d82419b4062d69a197d543a17367f254d1b4fcff/src%2Ftest%2Fui%2Fspecialization%2Fspecialization-feature-gate-overlap.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspecialization%2Fspecialization-feature-gate-overlap.stderr?ref=d82419b4062d69a197d543a17367f254d1b4fcff", "patch": "@@ -1,4 +1,4 @@\n-error[E0119]: conflicting implementations of trait `Foo` for type `u8`:\n+error[E0119]: conflicting implementations of trait `Foo` for type `u8`\n   --> $DIR/specialization-feature-gate-overlap.rs:13:1\n    |\n LL | impl<T> Foo for T {"}, {"sha": "3ccbe1616e803c60d4842d92cf124dba0bed43a5", "filename": "src/test/ui/specialization/specialization-overlap.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/d82419b4062d69a197d543a17367f254d1b4fcff/src%2Ftest%2Fui%2Fspecialization%2Fspecialization-overlap.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d82419b4062d69a197d543a17367f254d1b4fcff/src%2Ftest%2Fui%2Fspecialization%2Fspecialization-overlap.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspecialization%2Fspecialization-overlap.stderr?ref=d82419b4062d69a197d543a17367f254d1b4fcff", "patch": "@@ -8,31 +8,31 @@ LL | #![feature(specialization)]\n    = note: see issue #31844 <https://github.com/rust-lang/rust/issues/31844> for more information\n    = help: consider using `min_specialization` instead, which is more stable and complete\n \n-error[E0119]: conflicting implementations of trait `Foo` for type `std::vec::Vec<_>`:\n+error[E0119]: conflicting implementations of trait `Foo` for type `std::vec::Vec<_>`\n   --> $DIR/specialization-overlap.rs:5:1\n    |\n LL | impl<T: Clone> Foo for T {}\n    | ------------------------ first implementation here\n LL | impl<T> Foo for Vec<T> {}\n    | ^^^^^^^^^^^^^^^^^^^^^^ conflicting implementation for `std::vec::Vec<_>`\n \n-error[E0119]: conflicting implementations of trait `Bar` for type `(u8, u8)`:\n+error[E0119]: conflicting implementations of trait `Bar` for type `(u8, u8)`\n   --> $DIR/specialization-overlap.rs:9:1\n    |\n LL | impl<T> Bar for (T, u8) {}\n    | ----------------------- first implementation here\n LL | impl<T> Bar for (u8, T) {}\n    | ^^^^^^^^^^^^^^^^^^^^^^^ conflicting implementation for `(u8, u8)`\n \n-error[E0119]: conflicting implementations of trait `Baz<u8>` for type `u8`:\n+error[E0119]: conflicting implementations of trait `Baz<u8>` for type `u8`\n   --> $DIR/specialization-overlap.rs:13:1\n    |\n LL | impl<T> Baz<T> for u8 {}\n    | --------------------- first implementation here\n LL | impl<T> Baz<u8> for T {}\n    | ^^^^^^^^^^^^^^^^^^^^^ conflicting implementation for `u8`\n \n-error[E0119]: conflicting implementations of trait `Qux`:\n+error[E0119]: conflicting implementations of trait `Qux`\n   --> $DIR/specialization-overlap.rs:17:1\n    |\n LL | impl<T: Clone> Qux for T {}"}, {"sha": "146920ac685bb1af95edeeaef6d1ae0b46fac4c5", "filename": "src/test/ui/traits/alias/issue-83613.rs", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/d82419b4062d69a197d543a17367f254d1b4fcff/src%2Ftest%2Fui%2Ftraits%2Falias%2Fissue-83613.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d82419b4062d69a197d543a17367f254d1b4fcff/src%2Ftest%2Fui%2Ftraits%2Falias%2Fissue-83613.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftraits%2Falias%2Fissue-83613.rs?ref=d82419b4062d69a197d543a17367f254d1b4fcff", "patch": "@@ -0,0 +1,13 @@\n+#![feature(min_type_alias_impl_trait)]\n+trait OpaqueTrait {}\n+impl<T> OpaqueTrait for T {}\n+type OpaqueType = impl OpaqueTrait;\n+fn mk_opaque() -> OpaqueType {\n+    || 0\n+}\n+trait AnotherTrait {}\n+impl<T: Send> AnotherTrait for T {}\n+impl AnotherTrait for OpaqueType {}\n+//~^ ERROR conflicting implementations of trait `AnotherTrait` for type `impl OpaqueTrait`\n+//~| ERROR cannot implement trait on type alias impl trait\n+fn main() {}"}, {"sha": "0ab39ae66728817fe79532d06078e3c82ecaed18", "filename": "src/test/ui/traits/alias/issue-83613.stderr", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/d82419b4062d69a197d543a17367f254d1b4fcff/src%2Ftest%2Fui%2Ftraits%2Falias%2Fissue-83613.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d82419b4062d69a197d543a17367f254d1b4fcff/src%2Ftest%2Fui%2Ftraits%2Falias%2Fissue-83613.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftraits%2Falias%2Fissue-83613.stderr?ref=d82419b4062d69a197d543a17367f254d1b4fcff", "patch": "@@ -0,0 +1,23 @@\n+error[E0119]: conflicting implementations of trait `AnotherTrait` for type `impl OpaqueTrait`\n+  --> $DIR/issue-83613.rs:10:1\n+   |\n+LL | impl<T: Send> AnotherTrait for T {}\n+   | -------------------------------- first implementation here\n+LL | impl AnotherTrait for OpaqueType {}\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ conflicting implementation for `impl OpaqueTrait`\n+\n+error: cannot implement trait on type alias impl trait\n+  --> $DIR/issue-83613.rs:10:1\n+   |\n+LL | impl AnotherTrait for OpaqueType {}\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |\n+note: type alias impl trait defined here\n+  --> $DIR/issue-83613.rs:4:19\n+   |\n+LL | type OpaqueType = impl OpaqueTrait;\n+   |                   ^^^^^^^^^^^^^^^^\n+\n+error: aborting due to 2 previous errors\n+\n+For more information about this error, try `rustc --explain E0119`."}, {"sha": "c87f1ff1f3f15130121b99318ccbc293ba8f03f4", "filename": "src/test/ui/traits/issue-33140-hack-boundaries.stderr", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/d82419b4062d69a197d543a17367f254d1b4fcff/src%2Ftest%2Fui%2Ftraits%2Fissue-33140-hack-boundaries.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d82419b4062d69a197d543a17367f254d1b4fcff/src%2Ftest%2Fui%2Ftraits%2Fissue-33140-hack-boundaries.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftraits%2Fissue-33140-hack-boundaries.stderr?ref=d82419b4062d69a197d543a17367f254d1b4fcff", "patch": "@@ -1,4 +1,4 @@\n-error[E0119]: conflicting implementations of trait `Trait1` for type `(dyn std::marker::Send + 'static)`:\n+error[E0119]: conflicting implementations of trait `Trait1` for type `(dyn std::marker::Send + 'static)`\n   --> $DIR/issue-33140-hack-boundaries.rs:18:1\n    |\n LL | impl Trait1 for dyn Send {}\n@@ -14,47 +14,47 @@ LL | impl Trait2 for dyn Send {}\n LL | impl !Trait2 for dyn Send {}\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^ negative implementation here\n \n-error[E0119]: conflicting implementations of trait `Trait3<(dyn std::marker::Sync + 'static)>` for type `(dyn std::marker::Send + 'static)`:\n+error[E0119]: conflicting implementations of trait `Trait3<(dyn std::marker::Sync + 'static)>` for type `(dyn std::marker::Send + 'static)`\n   --> $DIR/issue-33140-hack-boundaries.rs:32:1\n    |\n LL | impl Trait3<dyn Sync> for dyn Send {}\n    | ---------------------------------- first implementation here\n LL | impl Trait3<dyn Sync> for dyn Send {}\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ conflicting implementation for `(dyn std::marker::Send + 'static)`\n \n-error[E0119]: conflicting implementations of trait `Trait4a` for type `(dyn std::marker::Send + 'static)`:\n+error[E0119]: conflicting implementations of trait `Trait4a` for type `(dyn std::marker::Send + 'static)`\n   --> $DIR/issue-33140-hack-boundaries.rs:39:1\n    |\n LL | impl<T: ?Sized> Trait4a for T {}\n    | ----------------------------- first implementation here\n LL | impl Trait4a for dyn Send {}\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^ conflicting implementation for `(dyn std::marker::Send + 'static)`\n \n-error[E0119]: conflicting implementations of trait `Trait4b` for type `()`:\n+error[E0119]: conflicting implementations of trait `Trait4b` for type `()`\n   --> $DIR/issue-33140-hack-boundaries.rs:46:1\n    |\n LL | impl Trait4b for () {}\n    | ------------------- first implementation here\n LL | impl Trait4b for () {}\n    | ^^^^^^^^^^^^^^^^^^^ conflicting implementation for `()`\n \n-error[E0119]: conflicting implementations of trait `Trait4c` for type `(dyn Trait1 + std::marker::Send + 'static)`:\n+error[E0119]: conflicting implementations of trait `Trait4c` for type `(dyn Trait1 + std::marker::Send + 'static)`\n   --> $DIR/issue-33140-hack-boundaries.rs:53:1\n    |\n LL | impl Trait4c for dyn Trait1 + Send {}\n    | ---------------------------------- first implementation here\n LL | impl Trait4c for dyn Trait1 + Send {}\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ conflicting implementation for `(dyn Trait1 + std::marker::Send + 'static)`\n \n-error[E0119]: conflicting implementations of trait `Trait4d` for type `dyn std::marker::Send`:\n+error[E0119]: conflicting implementations of trait `Trait4d` for type `dyn std::marker::Send`\n   --> $DIR/issue-33140-hack-boundaries.rs:60:1\n    |\n LL | impl<'a> Trait4d for dyn Send + 'a {}\n    | ---------------------------------- first implementation here\n LL | impl<'a> Trait4d for dyn Send + 'a {}\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ conflicting implementation for `dyn std::marker::Send`\n \n-error[E0119]: conflicting implementations of trait `Trait5` for type `(dyn std::marker::Send + 'static)`:\n+error[E0119]: conflicting implementations of trait `Trait5` for type `(dyn std::marker::Send + 'static)`\n   --> $DIR/issue-33140-hack-boundaries.rs:67:1\n    |\n LL | impl Trait5 for dyn Send {}"}, {"sha": "392c56a282d7e5eb86c21789ecf74d999dd1db44", "filename": "src/test/ui/traits/issue-33140.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/d82419b4062d69a197d543a17367f254d1b4fcff/src%2Ftest%2Fui%2Ftraits%2Fissue-33140.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d82419b4062d69a197d543a17367f254d1b4fcff/src%2Ftest%2Fui%2Ftraits%2Fissue-33140.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftraits%2Fissue-33140.stderr?ref=d82419b4062d69a197d543a17367f254d1b4fcff", "patch": "@@ -1,4 +1,4 @@\n-error[E0119]: conflicting implementations of trait `Trait` for type `(dyn std::marker::Send + std::marker::Sync + 'static)`:\n+error[E0119]: conflicting implementations of trait `Trait` for type `(dyn std::marker::Send + std::marker::Sync + 'static)`\n   --> $DIR/issue-33140.rs:9:1\n    |\n LL | impl Trait for dyn Send + Sync {\n@@ -7,7 +7,7 @@ LL | impl Trait for dyn Send + Sync {\n LL | impl Trait for dyn Sync + Send {\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ conflicting implementation for `(dyn std::marker::Send + std::marker::Sync + 'static)`\n \n-error[E0119]: conflicting implementations of trait `Trait2` for type `(dyn std::marker::Send + std::marker::Sync + 'static)`:\n+error[E0119]: conflicting implementations of trait `Trait2` for type `(dyn std::marker::Send + std::marker::Sync + 'static)`\n   --> $DIR/issue-33140.rs:22:1\n    |\n LL | impl Trait2 for dyn Send + Sync {"}, {"sha": "b970ad762088d9880641bbab7c58a2115465633a", "filename": "src/test/ui/traits/negative-impls/rely-on-negative-impl-in-coherence.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d82419b4062d69a197d543a17367f254d1b4fcff/src%2Ftest%2Fui%2Ftraits%2Fnegative-impls%2Frely-on-negative-impl-in-coherence.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d82419b4062d69a197d543a17367f254d1b4fcff/src%2Ftest%2Fui%2Ftraits%2Fnegative-impls%2Frely-on-negative-impl-in-coherence.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftraits%2Fnegative-impls%2Frely-on-negative-impl-in-coherence.stderr?ref=d82419b4062d69a197d543a17367f254d1b4fcff", "patch": "@@ -1,4 +1,4 @@\n-error[E0119]: conflicting implementations of trait `LocalTrait` for type `std::string::String`:\n+error[E0119]: conflicting implementations of trait `LocalTrait` for type `std::string::String`\n   --> $DIR/rely-on-negative-impl-in-coherence.rs:19:1\n    |\n LL | impl<T: ForeignTrait> LocalTrait for T { }"}, {"sha": "910c5e29dac0ea7fdefd12c57a7fd7533a368180", "filename": "src/test/ui/traits/overlap-not-permitted-for-builtin-trait.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d82419b4062d69a197d543a17367f254d1b4fcff/src%2Ftest%2Fui%2Ftraits%2Foverlap-not-permitted-for-builtin-trait.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d82419b4062d69a197d543a17367f254d1b4fcff/src%2Ftest%2Fui%2Ftraits%2Foverlap-not-permitted-for-builtin-trait.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftraits%2Foverlap-not-permitted-for-builtin-trait.stderr?ref=d82419b4062d69a197d543a17367f254d1b4fcff", "patch": "@@ -1,4 +1,4 @@\n-error[E0119]: conflicting implementations of trait `std::marker::Send` for type `MyStruct`:\n+error[E0119]: conflicting implementations of trait `std::marker::Send` for type `MyStruct`\n   --> $DIR/overlap-not-permitted-for-builtin-trait.rs:7:1\n    |\n LL | impl !Send for MyStruct {}"}, {"sha": "a811d7e32016b1a950508ad96ab97ddaa3dcca14", "filename": "src/test/ui/traits/reservation-impl/coherence-conflict.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d82419b4062d69a197d543a17367f254d1b4fcff/src%2Ftest%2Fui%2Ftraits%2Freservation-impl%2Fcoherence-conflict.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d82419b4062d69a197d543a17367f254d1b4fcff/src%2Ftest%2Fui%2Ftraits%2Freservation-impl%2Fcoherence-conflict.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftraits%2Freservation-impl%2Fcoherence-conflict.stderr?ref=d82419b4062d69a197d543a17367f254d1b4fcff", "patch": "@@ -1,4 +1,4 @@\n-error[E0119]: conflicting implementations of trait `OtherTrait` for type `()`:\n+error[E0119]: conflicting implementations of trait `OtherTrait` for type `()`\n   --> $DIR/coherence-conflict.rs:11:1\n    |\n LL | impl OtherTrait for () {}"}, {"sha": "6d1a59aafeda4080070d28558ab4495223513b92", "filename": "src/test/ui/type-alias-impl-trait/incoherent-assoc-imp-trait.full_tait.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d82419b4062d69a197d543a17367f254d1b4fcff/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fincoherent-assoc-imp-trait.full_tait.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d82419b4062d69a197d543a17367f254d1b4fcff/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fincoherent-assoc-imp-trait.full_tait.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fincoherent-assoc-imp-trait.full_tait.stderr?ref=d82419b4062d69a197d543a17367f254d1b4fcff", "patch": "@@ -7,7 +7,7 @@ LL | #![cfg_attr(full_tait, feature(type_alias_impl_trait))]\n    = note: `#[warn(incomplete_features)]` on by default\n    = note: see issue #63063 <https://github.com/rust-lang/rust/issues/63063> for more information\n \n-error[E0119]: conflicting implementations of trait `std::ops::FnOnce<()>` for type `&_`:\n+error[E0119]: conflicting implementations of trait `std::ops::FnOnce<()>` for type `&_`\n   --> $DIR/incoherent-assoc-imp-trait.rs:13:1\n    |\n LL | impl<F> FnOnce<()> for &F {"}, {"sha": "5c02b602d528bc52f54f1d18cbfe21ce1452f549", "filename": "src/test/ui/type-alias-impl-trait/incoherent-assoc-imp-trait.min_tait.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d82419b4062d69a197d543a17367f254d1b4fcff/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fincoherent-assoc-imp-trait.min_tait.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d82419b4062d69a197d543a17367f254d1b4fcff/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fincoherent-assoc-imp-trait.min_tait.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftype-alias-impl-trait%2Fincoherent-assoc-imp-trait.min_tait.stderr?ref=d82419b4062d69a197d543a17367f254d1b4fcff", "patch": "@@ -1,4 +1,4 @@\n-error[E0119]: conflicting implementations of trait `std::ops::FnOnce<()>` for type `&_`:\n+error[E0119]: conflicting implementations of trait `std::ops::FnOnce<()>` for type `&_`\n   --> $DIR/incoherent-assoc-imp-trait.rs:13:1\n    |\n LL | impl<F> FnOnce<()> for &F {"}]}