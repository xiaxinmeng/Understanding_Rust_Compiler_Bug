{"sha": "7b1e8446d1a7b8cccc05441e2a1f52f7c2d2871b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdiMWU4NDQ2ZDFhN2I4Y2NjYzA1NDQxZTJhMWY1MmY3YzJkMjg3MWI=", "commit": {"author": {"name": "Ariel Ben-Yehuda", "email": "arielb1@mail.tau.ac.il", "date": "2015-05-20T18:22:05Z"}, "committer": {"name": "Ariel Ben-Yehuda", "email": "arielb1@mail.tau.ac.il", "date": "2015-05-20T18:23:41Z"}, "message": "Substitute free lifetimes when `Self` is used within a method body\n\nThis is needed because `Self` can be substituted to a type with\nlifetime parameters.\n\nFixes #24308\nFixes #25071\nFixes #25259\nFixes #25279", "tree": {"sha": "344d2a87f6eef3506af8922c419fe9cbc86c4f68", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/344d2a87f6eef3506af8922c419fe9cbc86c4f68"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7b1e8446d1a7b8cccc05441e2a1f52f7c2d2871b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7b1e8446d1a7b8cccc05441e2a1f52f7c2d2871b", "html_url": "https://github.com/rust-lang/rust/commit/7b1e8446d1a7b8cccc05441e2a1f52f7c2d2871b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7b1e8446d1a7b8cccc05441e2a1f52f7c2d2871b/comments", "author": null, "committer": null, "parents": [{"sha": "cec980a1a706fd6afc27dd54c1eed7c51800d753", "url": "https://api.github.com/repos/rust-lang/rust/commits/cec980a1a706fd6afc27dd54c1eed7c51800d753", "html_url": "https://github.com/rust-lang/rust/commit/cec980a1a706fd6afc27dd54c1eed7c51800d753"}], "stats": {"total": 57, "additions": 56, "deletions": 1}, "files": [{"sha": "b9a5e597c260c518d0057190d85a5ea90de020d0", "filename": "src/librustc_typeck/astconv.rs", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/7b1e8446d1a7b8cccc05441e2a1f52f7c2d2871b/src%2Flibrustc_typeck%2Fastconv.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7b1e8446d1a7b8cccc05441e2a1f52f7c2d2871b/src%2Flibrustc_typeck%2Fastconv.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fastconv.rs?ref=7b1e8446d1a7b8cccc05441e2a1f52f7c2d2871b", "patch": "@@ -1395,7 +1395,11 @@ fn base_def_to_ty<'tcx>(this: &AstConv<'tcx>,\n             // Self in impl (we know the concrete type).\n             check_path_args(tcx, base_segments, NO_TPS | NO_REGIONS);\n             if let Some(&ty) = tcx.ast_ty_to_ty_cache.borrow().get(&self_ty_id) {\n-                ty\n+                if let Some(free_substs) = this.get_free_substs() {\n+                    ty.subst(tcx, free_substs)\n+                } else {\n+                    ty\n+                }\n             } else {\n                 tcx.sess.span_bug(span, \"self type has not been fully resolved\")\n             }"}, {"sha": "0a483fc987adcc8f34e5b4fc01e10413b3019a70", "filename": "src/test/run-pass/issue-24308.rs", "status": "added", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/7b1e8446d1a7b8cccc05441e2a1f52f7c2d2871b/src%2Ftest%2Frun-pass%2Fissue-24308.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7b1e8446d1a7b8cccc05441e2a1f52f7c2d2871b/src%2Ftest%2Frun-pass%2Fissue-24308.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-24308.rs?ref=7b1e8446d1a7b8cccc05441e2a1f52f7c2d2871b", "patch": "@@ -0,0 +1,26 @@\n+// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+pub trait Foo {\n+    fn method1() {}\n+    fn method2();\n+}\n+\n+struct Slice<'a, T: 'a>(&'a [T]);\n+\n+impl<'a, T: 'a> Foo for Slice<'a, T> {\n+    fn method2() {\n+        <Self as Foo>::method1();\n+    }\n+}\n+\n+fn main() {\n+    <Slice<()> as Foo>::method2();\n+}"}, {"sha": "e483866790f62fd7e8cdd54ab2cb733cba3a286a", "filename": "src/test/run-pass/issue-25279.rs", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/7b1e8446d1a7b8cccc05441e2a1f52f7c2d2871b/src%2Ftest%2Frun-pass%2Fissue-25279.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7b1e8446d1a7b8cccc05441e2a1f52f7c2d2871b/src%2Ftest%2Frun-pass%2Fissue-25279.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-25279.rs?ref=7b1e8446d1a7b8cccc05441e2a1f52f7c2d2871b", "patch": "@@ -0,0 +1,25 @@\n+// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+struct S<'a>(&'a ());\n+\n+impl<'a> S<'a> {\n+    fn foo(self) -> &'a () {\n+        <Self>::bar(self)\n+    }\n+\n+    fn bar(self) -> &'a () {\n+        self.0\n+    }\n+}\n+\n+fn main() {\n+    S(&()).foo();\n+}"}]}