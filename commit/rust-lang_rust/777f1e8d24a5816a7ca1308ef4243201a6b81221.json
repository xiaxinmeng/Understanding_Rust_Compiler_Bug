{"sha": "777f1e8d24a5816a7ca1308ef4243201a6b81221", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc3N2YxZThkMjRhNTgxNmE3Y2ExMzA4ZWY0MjQzMjAxYTZiODEyMjE=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2014-01-07T07:36:46Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2014-01-07T07:36:46Z"}, "message": "auto merge of #11355 : alexcrichton/rust/read-waits-forever, r=brson\n\nAll the fun is down below.", "tree": {"sha": "29033994a1a90dd6cec236051d5835a158a505d3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/29033994a1a90dd6cec236051d5835a158a505d3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/777f1e8d24a5816a7ca1308ef4243201a6b81221", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/777f1e8d24a5816a7ca1308ef4243201a6b81221", "html_url": "https://github.com/rust-lang/rust/commit/777f1e8d24a5816a7ca1308ef4243201a6b81221", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/777f1e8d24a5816a7ca1308ef4243201a6b81221/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "07950e740cb67e8eb9cf7b19b6e99e171943d2f9", "url": "https://api.github.com/repos/rust-lang/rust/commits/07950e740cb67e8eb9cf7b19b6e99e171943d2f9", "html_url": "https://github.com/rust-lang/rust/commit/07950e740cb67e8eb9cf7b19b6e99e171943d2f9"}, {"sha": "89f8bc2561dfae51affa47a5056c065091c49f51", "url": "https://api.github.com/repos/rust-lang/rust/commits/89f8bc2561dfae51affa47a5056c065091c49f51", "html_url": "https://github.com/rust-lang/rust/commit/89f8bc2561dfae51affa47a5056c065091c49f51"}], "stats": {"total": 76, "additions": 47, "deletions": 29}, "files": [{"sha": "2b9996fb98dd9e87e1d6569b92d7bb134ec61ea3", "filename": "mk/target.mk", "status": "modified", "additions": 20, "deletions": 24, "changes": 44, "blob_url": "https://github.com/rust-lang/rust/blob/777f1e8d24a5816a7ca1308ef4243201a6b81221/mk%2Ftarget.mk", "raw_url": "https://github.com/rust-lang/rust/raw/777f1e8d24a5816a7ca1308ef4243201a6b81221/mk%2Ftarget.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mk%2Ftarget.mk?ref=777f1e8d24a5816a7ca1308ef4243201a6b81221", "patch": "@@ -54,18 +54,22 @@ $$(TLIB$(1)_T_$(2)_H_$(3))/$(CFG_RUNTIME_$(2)): \\\n \t@$$(call E, cp: $$@)\n \t$$(Q)cp $$< $$@\n \n+# SNAP a5fa1d9 remove this after the stage0 snapshot from rules below\n+ifeq ($(1),0)\n+LFLAGS_$(1)_$(2)_$(3) := -L $$(TLIB$(1)_T_$(2)_H_$(3))\n+else\n+LFLAGS_$(1)_$(2)_$(3) :=\n+endif\n+\n $$(TLIB$(1)_T_$(2)_H_$(3))/$(CFG_STDLIB_$(2)): \\\n \t\t$$(STDLIB_CRATE) $$(STDLIB_INPUTS) \\\n \t\t$$(TSREQ$(1)_T_$(2)_H_$(3)) \\\n \t\t| $$(TLIB$(1)_T_$(2)_H_$(3))/\n \t@$$(call E, compile_and_link: $$@)\n-ifeq ($(1),0)\n-\t$$(Q)cp $(3)/stage0/$(CFG_LIBDIR)/rustlib/$(2)/$(CFG_LIBDIR)/* \\\n-\t\t$(3)/stage0/$(CFG_LIBDIR)/rustc/$(2)/$(CFG_LIBDIR)/\n-endif\n \t$$(call REMOVE_ALL_OLD_GLOB_MATCHES_EXCEPT,$$(dir $$@),$(STDLIB_GLOB_$(2)),$$(notdir $$@))\n \t$$(call REMOVE_ALL_OLD_GLOB_MATCHES_EXCEPT,$$(dir $$@),$(STDLIB_RGLOB_$(2)),$$(notdir $$@))\n-\t$$(STAGE$(1)_T_$(2)_H_$(3)) $$(WFLAGS_ST$(1)) --out-dir $$(@D) $$< && touch $$@\n+\t$$(STAGE$(1)_T_$(2)_H_$(3)) $$(WFLAGS_ST$(1)) $$(LFLAGS_$(1)_$(2)_$(3)) \\\n+\t\t--out-dir $$(@D) $$< && touch $$@\n \t$$(call LIST_ALL_OLD_GLOB_MATCHES_EXCEPT,$$(dir $$@),$(STDLIB_GLOB_$(2)),$$(notdir $$@))\n \t$$(call LIST_ALL_OLD_GLOB_MATCHES_EXCEPT,$$(dir $$@),$(STDLIB_RGLOB_$(2)),$$(notdir $$@))\n \n@@ -75,13 +79,10 @@ $$(TLIB$(1)_T_$(2)_H_$(3))/$(CFG_EXTRALIB_$(2)): \\\n \t\t$$(TSREQ$(1)_T_$(2)_H_$(3)) \\\n \t\t| $$(TLIB$(1)_T_$(2)_H_$(3))/\n \t@$$(call E, compile_and_link: $$@)\n-ifeq ($(1),0)\n-\t$$(Q)cp $(3)/stage0/$(CFG_LIBDIR)/rustlib/$(2)/$(CFG_LIBDIR)/* \\\n-\t\t$(3)/stage0/$(CFG_LIBDIR)/rustc/$(2)/$(CFG_LIBDIR)/\n-endif\n \t$$(call REMOVE_ALL_OLD_GLOB_MATCHES_EXCEPT,$$(dir $$@),$(EXTRALIB_GLOB_$(2)),$$(notdir $$@))\n \t$$(call REMOVE_ALL_OLD_GLOB_MATCHES_EXCEPT,$$(dir $$@),$(EXTRALIB_RGLOB_$(2)),$$(notdir $$@))\n-\t$$(STAGE$(1)_T_$(2)_H_$(3)) $$(WFLAGS_ST$(1)) --out-dir $$(@D) $$< && touch $$@\n+\t$$(STAGE$(1)_T_$(2)_H_$(3)) $$(WFLAGS_ST$(1)) $$(LFLAGS_$(1)_$(2)_$(3)) \\\n+\t\t--out-dir $$(@D) $$< && touch $$@\n \t$$(call LIST_ALL_OLD_GLOB_MATCHES_EXCEPT,$$(dir $$@),$(EXTRALIB_GLOB_$(2)),$$(notdir $$@))\n \t$$(call LIST_ALL_OLD_GLOB_MATCHES_EXCEPT,$$(dir $$@),$(EXTRALIB_RGLOB_$(2)),$$(notdir $$@))\n \n@@ -98,6 +99,7 @@ $$(TLIB$(1)_T_$(2)_H_$(3))/$(CFG_LIBRUSTUV_$(2)): \\\n \t$$(STAGE$(1)_T_$(2)_H_$(3)) $$(WFLAGS_ST$(1)) \\\n \t\t-L $$(UV_SUPPORT_DIR_$(2)) \\\n \t\t-L $$(dir $$(LIBUV_LIB_$(2))) \\\n+\t\t$$(LFLAGS_$(1)_$(2)_$(3)) \\\n \t\t--out-dir $$(@D) $$< && touch $$@\n \t$$(call LIST_ALL_OLD_GLOB_MATCHES_EXCEPT,$$(dir $$@),$(LIBRUSTUV_GLOB_$(2)),$$(notdir $$@))\n \t$$(call LIST_ALL_OLD_GLOB_MATCHES_EXCEPT,$$(dir $$@),$(LIBRUSTUV_RGLOB_$(2)),$$(notdir $$@))\n@@ -111,6 +113,7 @@ $$(TLIB$(1)_T_$(2)_H_$(3))/$(CFG_LIBGREEN_$(2)): \\\n \t$$(call REMOVE_ALL_OLD_GLOB_MATCHES_EXCEPT,$$(dir $$@),$(LIBGREEN_GLOB_$(2)),$$(notdir $$@))\n \t$$(call REMOVE_ALL_OLD_GLOB_MATCHES_EXCEPT,$$(dir $$@),$(LIBGREEN_RGLOB_$(2)),$$(notdir $$@))\n \t$$(STAGE$(1)_T_$(2)_H_$(3)) $$(WFLAGS_ST$(1)) \\\n+\t\t$$(LFLAGS_$(1)_$(2)_$(3)) \\\n \t\t--out-dir $$(@D) $$< && touch $$@\n \t$$(call LIST_ALL_OLD_GLOB_MATCHES_EXCEPT,$$(dir $$@),$(LIBGREEN_GLOB_$(2)),$$(notdir $$@))\n \t$$(call LIST_ALL_OLD_GLOB_MATCHES_EXCEPT,$$(dir $$@),$(LIBGREEN_RGLOB_$(2)),$$(notdir $$@))\n@@ -124,6 +127,7 @@ $$(TLIB$(1)_T_$(2)_H_$(3))/$(CFG_LIBNATIVE_$(2)): \\\n \t$$(call REMOVE_ALL_OLD_GLOB_MATCHES_EXCEPT,$$(dir $$@),$(LIBNATIVE_GLOB_$(2)),$$(notdir $$@))\n \t$$(call REMOVE_ALL_OLD_GLOB_MATCHES_EXCEPT,$$(dir $$@),$(LIBNATIVE_RGLOB_$(2)),$$(notdir $$@))\n \t$$(STAGE$(1)_T_$(2)_H_$(3)) $$(WFLAGS_ST$(1)) \\\n+\t\t$$(LFLAGS_$(1)_$(2)_$(3)) \\\n \t\t--out-dir $$(@D) $$< && touch $$@\n \t$$(call LIST_ALL_OLD_GLOB_MATCHES_EXCEPT,$$(dir $$@),$(LIBNATIVE_GLOB_$(2)),$$(notdir $$@))\n \t$$(call LIST_ALL_OLD_GLOB_MATCHES_EXCEPT,$$(dir $$@),$(LIBNATIVE_RGLOB_$(2)),$$(notdir $$@))\n@@ -135,13 +139,11 @@ $$(TLIB$(1)_T_$(2)_H_$(3))/$(CFG_LIBSYNTAX_$(3)): \\\n \t\t$$(TEXTRALIB_DEFAULT$(1)_T_$(2)_H_$(3)) \\\n \t\t| $$(TLIB$(1)_T_$(2)_H_$(3))/\n \t@$$(call E, compile_and_link: $$@)\n-ifeq ($(1),0)\n-\t$$(Q)cp $(3)/stage0/$(CFG_LIBDIR)/rustlib/$(2)/$(CFG_LIBDIR)/* \\\n-\t\t$(3)/stage0/$(CFG_LIBDIR)/rustc/$(2)/$(CFG_LIBDIR)/\n-endif\n \t$$(call REMOVE_ALL_OLD_GLOB_MATCHES_EXCEPT,$$(dir $$@),$(LIBSYNTAX_GLOB_$(2)),$$(notdir $$@))\n \t$$(call REMOVE_ALL_OLD_GLOB_MATCHES_EXCEPT,$$(dir $$@),$(LIBSYNTAX_RGLOB_$(2)),$$(notdir $$@))\n-\t$$(STAGE$(1)_T_$(2)_H_$(3)) $$(WFLAGS_ST$(1)) $(BORROWCK) --out-dir $$(@D) $$< && touch $$@\n+\t$$(STAGE$(1)_T_$(2)_H_$(3)) $$(WFLAGS_ST$(1)) $(BORROWCK) \\\n+\t    $$(LFLAGS_$(1)_$(2)_$(3)) \\\n+\t    --out-dir $$(@D) $$< && touch $$@\n \t$$(call LIST_ALL_OLD_GLOB_MATCHES_EXCEPT,$$(dir $$@),$(LIBSYNTAX_GLOB_$(2)),$$(notdir $$@))\n \t$$(call LIST_ALL_OLD_GLOB_MATCHES_EXCEPT,$$(dir $$@),$(LIBSYNTAX_RGLOB_$(2)),$$(notdir $$@))\n \n@@ -164,14 +166,11 @@ $$(TLIB$(1)_T_$(2)_H_$(3))/$(CFG_LIBRUSTC_$(3)):\t\t\\\n                 $$(TLIB$(1)_T_$(2)_H_$(3))/$(CFG_RUSTLLVM_$(3)) \\\n \t\t| $$(TLIB$(1)_T_$(2)_H_$(3))/\n \t@$$(call E, compile_and_link: $$@)\n-ifeq ($(1),0)\n-\t$$(Q)cp $(3)/stage0/$(CFG_LIBDIR)/rustlib/$(2)/$(CFG_LIBDIR)/* \\\n-\t\t$(3)/stage0/$(CFG_LIBDIR)/rustc/$(2)/$(CFG_LIBDIR)/\n-endif\n \t$$(call REMOVE_ALL_OLD_GLOB_MATCHES_EXCEPT,$$(dir $$@),$(LIBRUSTC_GLOB_$(2)),$$(notdir $$@))\n \t$$(call REMOVE_ALL_OLD_GLOB_MATCHES_EXCEPT,$$(dir $$@),$(LIBRUSTC_RGLOB_$(2)),$$(notdir $$@))\n \t$$(STAGE$(1)_T_$(2)_H_$(3)) $$(WFLAGS_ST$(1)) \\\n \t    -L \"$$(LLVM_LIBDIR_$(2))\" \\\n+\t    $$(LFLAGS_$(1)_$(2)_$(3)) \\\n \t    --out-dir $$(@D) $$< && touch $$@\n \t$$(call LIST_ALL_OLD_GLOB_MATCHES_EXCEPT,$$(dir $$@),$(LIBRUSTC_GLOB_$(2)),$$(notdir $$@))\n \t$$(call LIST_ALL_OLD_GLOB_MATCHES_EXCEPT,$$(dir $$@),$(LIBRUSTC_RGLOB_$(2)),$$(notdir $$@))\n@@ -182,11 +181,8 @@ $$(TBIN$(1)_T_$(2)_H_$(3))/rustc$$(X_$(3)):\t\t\t\\\n \t\t$$(TLIB$(1)_T_$(2)_H_$(3))/$(CFG_LIBRUSTC_$(3)) \\\n \t\t| $$(TBIN$(1)_T_$(2)_H_$(3))/\n \t@$$(call E, compile_and_link: $$@)\n-ifeq ($(1),0)\n-\t$$(Q)cp $(3)/stage0/$(CFG_LIBDIR)/rustlib/$(2)/$(CFG_LIBDIR)/* \\\n-\t\t$(3)/stage0/$(CFG_LIBDIR)/rustc/$(2)/$(CFG_LIBDIR)/\n-endif\n-\t$$(STAGE$(1)_T_$(2)_H_$(3)) --cfg rustc -o $$@ $$<\n+\t$$(STAGE$(1)_T_$(2)_H_$(3)) --cfg rustc -o $$@ $$< \\\n+\t    $$(LFLAGS_$(1)_$(2)_$(3))\n ifdef CFG_ENABLE_PAX_FLAGS\n \t@$$(call E, apply PaX flags: $$@)\n \t@\"$(CFG_PAXCTL)\" -cm \"$$@\""}, {"sha": "dac1ca98cf9d4ef5c097a2767f16df7f301d74ad", "filename": "src/libnative/io/file.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/777f1e8d24a5816a7ca1308ef4243201a6b81221/src%2Flibnative%2Fio%2Ffile.rs", "raw_url": "https://github.com/rust-lang/rust/raw/777f1e8d24a5816a7ca1308ef4243201a6b81221/src%2Flibnative%2Fio%2Ffile.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibnative%2Fio%2Ffile.rs?ref=777f1e8d24a5816a7ca1308ef4243201a6b81221", "patch": "@@ -79,10 +79,10 @@ impl FileDesc {\n     pub fn inner_read(&mut self, buf: &mut [u8]) -> Result<uint, IoError> {\n         #[cfg(windows)] type rlen = libc::c_uint;\n         #[cfg(not(windows))] type rlen = libc::size_t;\n-        let ret = keep_going(buf, |buf, len| {\n-            unsafe {\n-                libc::read(self.fd, buf as *mut libc::c_void, len as rlen) as i64\n-            }\n+        let ret = retry(|| unsafe {\n+            libc::read(self.fd,\n+                       buf.as_ptr() as *mut libc::c_void,\n+                       buf.len() as rlen) as libc::c_int\n         });\n         if ret == 0 {\n             Err(io::standard_error(io::EndOfFile))"}, {"sha": "31395216f2b58cae92bafa4ce4d80e413c4dcbe7", "filename": "src/libnative/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/777f1e8d24a5816a7ca1308ef4243201a6b81221/src%2Flibnative%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/777f1e8d24a5816a7ca1308ef4243201a6b81221/src%2Flibnative%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibnative%2Flib.rs?ref=777f1e8d24a5816a7ca1308ef4243201a6b81221", "patch": "@@ -34,7 +34,7 @@ pub mod io;\n pub mod task;\n \n // XXX: this should not exist here\n-#[cfg(stage0)]\n+#[cfg(stage0, nativestart)]\n #[lang = \"start\"]\n pub fn lang_start(main: *u8, argc: int, argv: **u8) -> int {\n     use std::cast;"}, {"sha": "e3f2cc2384c2713e0b2e342961b7d8bf03a3a309", "filename": "src/libstd/io/pipe.rs", "status": "modified", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/777f1e8d24a5816a7ca1308ef4243201a6b81221/src%2Flibstd%2Fio%2Fpipe.rs", "raw_url": "https://github.com/rust-lang/rust/raw/777f1e8d24a5816a7ca1308ef4243201a6b81221/src%2Flibstd%2Fio%2Fpipe.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fio%2Fpipe.rs?ref=777f1e8d24a5816a7ca1308ef4243201a6b81221", "patch": "@@ -80,3 +80,25 @@ impl Writer for PipeStream {\n         }\n     }\n }\n+\n+#[cfg(test)]\n+mod test {\n+    iotest!(fn partial_read() {\n+        use os;\n+        use io::pipe::PipeStream;\n+\n+        let os::Pipe { input, out } = os::pipe();\n+        let out = PipeStream::open(out);\n+        let mut input = PipeStream::open(input);\n+        let (p, c) = Chan::new();\n+        do spawn {\n+            let mut out = out;\n+            out.write([10]);\n+            p.recv(); // don't close the pipe until the other read has finished\n+        }\n+\n+        let mut buf = [0, ..10];\n+        input.read(buf);\n+        c.send(());\n+    })\n+}"}]}