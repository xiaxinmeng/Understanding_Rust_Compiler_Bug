{"sha": "2b1fa1fece80daa9685698a3ba08f8f71249dc60", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJiMWZhMWZlY2U4MGRhYTk2ODU2OThhM2JhMDhmOGY3MTI0OWRjNjA=", "commit": {"author": {"name": "Erin Power", "email": "xampprocky@gmail.com", "date": "2020-10-25T17:09:28Z"}, "committer": {"name": "Erin Power", "email": "xampprocky@gmail.com", "date": "2020-10-25T17:09:28Z"}, "message": "Update RELEASES.md for 1.48.0", "tree": {"sha": "a07d8dc81be104e222b53f7fa993b200e45373d4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a07d8dc81be104e222b53f7fa993b200e45373d4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2b1fa1fece80daa9685698a3ba08f8f71249dc60", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2b1fa1fece80daa9685698a3ba08f8f71249dc60", "html_url": "https://github.com/rust-lang/rust/commit/2b1fa1fece80daa9685698a3ba08f8f71249dc60", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2b1fa1fece80daa9685698a3ba08f8f71249dc60/comments", "author": {"login": "XAMPPRocky", "id": 4464295, "node_id": "MDQ6VXNlcjQ0NjQyOTU=", "avatar_url": "https://avatars.githubusercontent.com/u/4464295?v=4", "gravatar_id": "", "url": "https://api.github.com/users/XAMPPRocky", "html_url": "https://github.com/XAMPPRocky", "followers_url": "https://api.github.com/users/XAMPPRocky/followers", "following_url": "https://api.github.com/users/XAMPPRocky/following{/other_user}", "gists_url": "https://api.github.com/users/XAMPPRocky/gists{/gist_id}", "starred_url": "https://api.github.com/users/XAMPPRocky/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/XAMPPRocky/subscriptions", "organizations_url": "https://api.github.com/users/XAMPPRocky/orgs", "repos_url": "https://api.github.com/users/XAMPPRocky/repos", "events_url": "https://api.github.com/users/XAMPPRocky/events{/privacy}", "received_events_url": "https://api.github.com/users/XAMPPRocky/received_events", "type": "User", "site_admin": false}, "committer": {"login": "XAMPPRocky", "id": 4464295, "node_id": "MDQ6VXNlcjQ0NjQyOTU=", "avatar_url": "https://avatars.githubusercontent.com/u/4464295?v=4", "gravatar_id": "", "url": "https://api.github.com/users/XAMPPRocky", "html_url": "https://github.com/XAMPPRocky", "followers_url": "https://api.github.com/users/XAMPPRocky/followers", "following_url": "https://api.github.com/users/XAMPPRocky/following{/other_user}", "gists_url": "https://api.github.com/users/XAMPPRocky/gists{/gist_id}", "starred_url": "https://api.github.com/users/XAMPPRocky/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/XAMPPRocky/subscriptions", "organizations_url": "https://api.github.com/users/XAMPPRocky/orgs", "repos_url": "https://api.github.com/users/XAMPPRocky/repos", "events_url": "https://api.github.com/users/XAMPPRocky/events{/privacy}", "received_events_url": "https://api.github.com/users/XAMPPRocky/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "430feb24a46993e5073c1bb1b39da190d83fa2bf", "url": "https://api.github.com/repos/rust-lang/rust/commits/430feb24a46993e5073c1bb1b39da190d83fa2bf", "html_url": "https://github.com/rust-lang/rust/commit/430feb24a46993e5073c1bb1b39da190d83fa2bf"}], "stats": {"total": 122, "additions": 122, "deletions": 0}, "files": [{"sha": "be80dc4e906d1a03b1d418c796dd3b64de597fb5", "filename": "RELEASES.md", "status": "modified", "additions": 122, "deletions": 0, "changes": 122, "blob_url": "https://github.com/rust-lang/rust/blob/2b1fa1fece80daa9685698a3ba08f8f71249dc60/RELEASES.md", "raw_url": "https://github.com/rust-lang/rust/raw/2b1fa1fece80daa9685698a3ba08f8f71249dc60/RELEASES.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/RELEASES.md?ref=2b1fa1fece80daa9685698a3ba08f8f71249dc60", "patch": "@@ -1,3 +1,125 @@\n+Version 1.48.0 (2020-11-19)\n+==========================\n+\n+Language\n+--------\n+\n+- [The `unsafe` keyword is now syntactically permitted on modules.][75857] This\n+  is still rejected *semantically*, but can now be parsed by procedural macros.\n+\n+Compiler\n+--------\n+- [Stabilised the `-C link=<yes|no>`][76158] Which tells `rustc` whether to link\n+  its own libraries or to rely on a external linker. (supported only on\n+  `windows-gnu`, `linux-musl`, and `wasi` platforms.)\n+- [You can now use `-C target-feature=+crt-static` on `linux-gnu` targets.][77386]\n+- [Added tier 2\\* support for  `aarch64-unknown-linux-musl`.][76420]\n+\n+Libraries\n+---------\n+- [`io::Write` is now implemented for `&ChildStdin` `&Sink`, `&Stdout`,\n+  and `&Stderr`.][76275]\n+- [All arrays now implement `TryFrom<Vec<T>>`.][76310]\n+- [The `matches!` macro now supports having a trailing comma.][74880]\n+- [`Vec<A>` now implements `PartialEq<[B]>` where `A: PartialEq<B>`.][74194]\n+- [Nearly all of `Cell`'s panicking functions now use the `#[track_caller]`\n+  attribute.][77055]\n+\n+Stabilized APIs\n+---------------\n+- [`slice::as_ptr_range`]\n+- [`slice::as_mut_ptr_range`]\n+- [`VecDeque::make_contiguous`]\n+- [`future::pending`]\n+- [`future::ready`]\n+\n+The following previously stable methods are now `const fn`'s:\n+\n+- [`Option::is_some`]\n+- [`Option::is_none`]\n+- [`Option::as_ref`]\n+- [`Result::is_ok`]\n+- [`Result::is_err`]\n+- [`Result::as_ref`]\n+- [`Ordering::reverse`]\n+- [`Ordering::then`]\n+\n+Cargo\n+-----\n+\n+Misc\n+----\n+- [You can now link to different items in `rustdoc` using the intra-doc link\n+  syntax.][74430] E.g. ``/// Uses [`std::future`] `` will automatically generate\n+  a link to `std::future`'s documentation. See [\"Linking to items by\n+  name\"][intradoc-links] for more information.\n+- [You can now specify `#[doc(alias = \"<alias>\")]` on items to add search aliases\n+  when searching through `rustdoc`'s UI.][75740]\n+- [You can now use `rustup install <major>.<minor>` to specify installing the\n+  latest availeble patch of that minor version of the toolchain.][76107] E.g.\n+  `rustup install 1.45` would install `1.45.2`, and `1.46` would install `1.46.0`.\n+\n+Compatibility Notes\n+-------------------\n+- [`const fn`s are now implicitly promoted to `const`.][75502] Meaning that it\n+  will only warn if your code fails `const` evaluation, and not produce an error.\n+- [Associated type bindings on trait objects are now verified to meet the bounds\n+  declared on the trait when checking that they implement the trait.][27675]\n+- [When traits bounds on associated types or opaque types are ambiguous the\n+  compiler no longer makes an arbitrary choice on which bound to use.][54121]\n+- [Fixed recursive nonterminals not being expended in macros during\n+  pretty-print/reparse check.][77153] This may cause errors if your macro wasn't\n+  correctly handling recursive nonterminal tokens.\n+- [`&mut` references to non zero-sized types are not longer promoted.][75585]\n+- [`rustc` will now warn if you use attributes like `#[link_name]` or `#[cold]`\n+  in places where they have no effect.][73461]\n+- [Updated `_mm256_extract_epi8` and `_mm256_extract_epi16` signatures in\n+  `arch::{x86, x86_64}` to return `i32` to match the vendor signatures.][73166]\n+\n+\n+\n+Internal Only\n+-------------\n+- [Building `rustc` from source now uses `ninja` by default over `make`.][74922]\n+  You can continue building with `make` by setting `ninja=false` in\n+  your `config.toml`.\n+\n+[27675]: https://github.com/rust-lang/rust/issues/27675/\n+[54121]: https://github.com/rust-lang/rust/issues/54121/\n+[77386]: https://github.com/rust-lang/rust/pull/77386/\n+[77153]: https://github.com/rust-lang/rust/pull/77153/\n+[77055]: https://github.com/rust-lang/rust/pull/77055/\n+[76275]: https://github.com/rust-lang/rust/pull/76275/\n+[76310]: https://github.com/rust-lang/rust/pull/76310/\n+[76420]: https://github.com/rust-lang/rust/pull/76420/\n+[76107]: https://github.com/rust-lang/rust/pull/76107/\n+[76158]: https://github.com/rust-lang/rust/pull/76158/\n+[75857]: https://github.com/rust-lang/rust/pull/75857/\n+[75585]: https://github.com/rust-lang/rust/pull/75585/\n+[75740]: https://github.com/rust-lang/rust/pull/75740/\n+[75502]: https://github.com/rust-lang/rust/pull/75502/\n+[74880]: https://github.com/rust-lang/rust/pull/74880/\n+[74922]: https://github.com/rust-lang/rust/pull/74922/\n+[74430]: https://github.com/rust-lang/rust/pull/74430/\n+[74194]: https://github.com/rust-lang/rust/pull/74194/\n+[73461]: https://github.com/rust-lang/rust/pull/73461/\n+[73166]: https://github.com/rust-lang/rust/pull/73166/\n+[intradoc-links]: https://doc.rust-lang.org/rustdoc/linking-to-items-by-name.html\n+[`Option::is_some`]: https://doc.rust-lang.org/std/option/enum.Option.html#method.is_some\n+[`Option::is_none`]: https://doc.rust-lang.org/std/option/enum.Option.html#method.is_none\n+[`Option::as_ref`]: https://doc.rust-lang.org/std/option/enum.Option.html#method.as_ref\n+[`Result::is_ok`]: https://doc.rust-lang.org/std/result/enum.Result.html#method.is_ok\n+[`Result::is_err`]: https://doc.rust-lang.org/std/result/enum.Result.html#method.is_err\n+[`Result::as_ref`]: https://doc.rust-lang.org/std/result/enum.Result.html#method.as_ref\n+[`Ordering::reverse`]: https://doc.rust-lang.org/std/cmp/enum.Ordering.html#method.reverse\n+[`Ordering::then`]: https://doc.rust-lang.org/std/cmp/enum.Ordering.html#method.then\n+[`slice::as_ptr_range`]: https://doc.rust-lang.org/std/primitive.slice.html#method.as_ptr_range\n+[`slice::as_mut_ptr_range`]: https://doc.rust-lang.org/std/primitive.slice.html#method.as_mut_ptr_range\n+[`VecDeque::make_contiguous`]: https://doc.rust-lang.org/std/collections/struct.VecDeque.html#method.make_contiguous\n+[`future::pending`]: https://doc.rust-lang.org/std/future/fn.pending.html\n+[`future::ready`]: https://doc.rust-lang.org/std/future/fn.ready.html\n+\n+\n Version 1.47.0 (2020-10-08)\n ==========================\n "}]}