{"sha": "ed7317cebe71db1745267f1039960d0c48458f59", "node_id": "MDY6Q29tbWl0NzI0NzEyOmVkNzMxN2NlYmU3MWRiMTc0NTI2N2YxMDM5OTYwZDBjNDg0NThmNTk=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-08-14T19:22:46Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-08-14T19:22:46Z"}, "message": "remove unused Level::PhaseFatal", "tree": {"sha": "5713ca285e89264ef1bef90245531960bf07ff40", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5713ca285e89264ef1bef90245531960bf07ff40"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ed7317cebe71db1745267f1039960d0c48458f59", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ed7317cebe71db1745267f1039960d0c48458f59", "html_url": "https://github.com/rust-lang/rust/commit/ed7317cebe71db1745267f1039960d0c48458f59", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ed7317cebe71db1745267f1039960d0c48458f59/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c43d03a19f326f4a323569328cc501e86eb6d22e", "url": "https://api.github.com/repos/rust-lang/rust/commits/c43d03a19f326f4a323569328cc501e86eb6d22e", "html_url": "https://github.com/rust-lang/rust/commit/c43d03a19f326f4a323569328cc501e86eb6d22e"}], "stats": {"total": 10, "additions": 3, "deletions": 7}, "files": [{"sha": "255af3122e70cb1430cc1ebf0d32c2886876bfa5", "filename": "src/librustc_errors/annotate_snippet_emitter_writer.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ed7317cebe71db1745267f1039960d0c48458f59/src%2Flibrustc_errors%2Fannotate_snippet_emitter_writer.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ed7317cebe71db1745267f1039960d0c48458f59/src%2Flibrustc_errors%2Fannotate_snippet_emitter_writer.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_errors%2Fannotate_snippet_emitter_writer.rs?ref=ed7317cebe71db1745267f1039960d0c48458f59", "patch": "@@ -148,7 +148,7 @@ impl<'a>  DiagnosticConverter<'a> {\n     /// Maps `Diagnostic::Level` to `snippet::AnnotationType`\n     fn annotation_type_for_level(level: Level) -> AnnotationType {\n         match level {\n-            Level::Bug | Level::Fatal | Level::PhaseFatal | Level::Error => AnnotationType::Error,\n+            Level::Bug | Level::Fatal | Level::Error => AnnotationType::Error,\n             Level::Warning => AnnotationType::Warning,\n             Level::Note => AnnotationType::Note,\n             Level::Help => AnnotationType::Help,"}, {"sha": "3f1b91256c46811c5d3e7653155395ff80c966ef", "filename": "src/librustc_errors/diagnostic.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/ed7317cebe71db1745267f1039960d0c48458f59/src%2Flibrustc_errors%2Fdiagnostic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ed7317cebe71db1745267f1039960d0c48458f59/src%2Flibrustc_errors%2Fdiagnostic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_errors%2Fdiagnostic.rs?ref=ed7317cebe71db1745267f1039960d0c48458f59", "patch": "@@ -94,7 +94,6 @@ impl Diagnostic {\n         match self.level {\n             Level::Bug |\n             Level::Fatal |\n-            Level::PhaseFatal |\n             Level::Error |\n             Level::FailureNote => {\n                 true"}, {"sha": "f3e524152ffaeb54565e99515a39164d957d29a5", "filename": "src/librustc_errors/lib.rs", "status": "modified", "additions": 2, "deletions": 5, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/ed7317cebe71db1745267f1039960d0c48458f59/src%2Flibrustc_errors%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ed7317cebe71db1745267f1039960d0c48458f59/src%2Flibrustc_errors%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_errors%2Flib.rs?ref=ed7317cebe71db1745267f1039960d0c48458f59", "patch": "@@ -787,9 +787,6 @@ impl Handler {\n pub enum Level {\n     Bug,\n     Fatal,\n-    // An error which while not immediately fatal, should stop the compiler\n-    // progressing beyond the current phase.\n-    PhaseFatal,\n     Error,\n     Warning,\n     Note,\n@@ -808,7 +805,7 @@ impl Level {\n     fn color(self) -> ColorSpec {\n         let mut spec = ColorSpec::new();\n         match self {\n-            Bug | Fatal | PhaseFatal | Error => {\n+            Bug | Fatal | Error => {\n                 spec.set_fg(Some(Color::Red))\n                     .set_intense(true);\n             }\n@@ -833,7 +830,7 @@ impl Level {\n     pub fn to_str(self) -> &'static str {\n         match self {\n             Bug => \"error: internal compiler error\",\n-            Fatal | PhaseFatal | Error => \"error\",\n+            Fatal | Error => \"error\",\n             Warning => \"warning\",\n             Note => \"note\",\n             Help => \"help\","}]}