{"sha": "d8b5745d4646e7cb84e8bd6491556658d0578e8b", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ4YjU3NDVkNDY0NmU3Y2I4NGU4YmQ2NDkxNTU2NjU4ZDA1NzhlOGI=", "commit": {"author": {"name": "est31", "email": "MTest31@outlook.com", "date": "2021-01-28T08:24:55Z"}, "committer": {"name": "est31", "email": "MTest31@outlook.com", "date": "2021-01-29T06:59:19Z"}, "message": "Treat nightlies for a version as complete\n\nThis commit makes cfg(version) treat the nightlies\nfor version 1.n.0 as 1.n.0, even though that nightly\nversion might not have all stabilizations and features\nof the released 1.n.0. This is done for greater\nconvenience for people who want to test a newly\nstabilized feature on nightly.\n\nFor users who wish to pin nightlies, this commit adds\na -Z assume-incomplete-release option that they can\nenable if there are any issues due to this change.", "tree": {"sha": "935a72bbc4c12beacd1df4cdc2da9303013cde84", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/935a72bbc4c12beacd1df4cdc2da9303013cde84"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d8b5745d4646e7cb84e8bd6491556658d0578e8b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d8b5745d4646e7cb84e8bd6491556658d0578e8b", "html_url": "https://github.com/rust-lang/rust/commit/d8b5745d4646e7cb84e8bd6491556658d0578e8b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d8b5745d4646e7cb84e8bd6491556658d0578e8b/comments", "author": {"login": "est31", "id": 8872119, "node_id": "MDQ6VXNlcjg4NzIxMTk=", "avatar_url": "https://avatars.githubusercontent.com/u/8872119?v=4", "gravatar_id": "", "url": "https://api.github.com/users/est31", "html_url": "https://github.com/est31", "followers_url": "https://api.github.com/users/est31/followers", "following_url": "https://api.github.com/users/est31/following{/other_user}", "gists_url": "https://api.github.com/users/est31/gists{/gist_id}", "starred_url": "https://api.github.com/users/est31/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/est31/subscriptions", "organizations_url": "https://api.github.com/users/est31/orgs", "repos_url": "https://api.github.com/users/est31/repos", "events_url": "https://api.github.com/users/est31/events{/privacy}", "received_events_url": "https://api.github.com/users/est31/received_events", "type": "User", "site_admin": false}, "committer": {"login": "est31", "id": 8872119, "node_id": "MDQ6VXNlcjg4NzIxMTk=", "avatar_url": "https://avatars.githubusercontent.com/u/8872119?v=4", "gravatar_id": "", "url": "https://api.github.com/users/est31", "html_url": "https://github.com/est31", "followers_url": "https://api.github.com/users/est31/followers", "following_url": "https://api.github.com/users/est31/following{/other_user}", "gists_url": "https://api.github.com/users/est31/gists{/gist_id}", "starred_url": "https://api.github.com/users/est31/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/est31/subscriptions", "organizations_url": "https://api.github.com/users/est31/orgs", "repos_url": "https://api.github.com/users/est31/repos", "events_url": "https://api.github.com/users/est31/events{/privacy}", "received_events_url": "https://api.github.com/users/est31/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "14aa12fcc2ebee6edfd6092a51122a6a6ba78d4d", "url": "https://api.github.com/repos/rust-lang/rust/commits/14aa12fcc2ebee6edfd6092a51122a6a6ba78d4d", "html_url": "https://github.com/rust-lang/rust/commit/14aa12fcc2ebee6edfd6092a51122a6a6ba78d4d"}], "stats": {"total": 19, "additions": 14, "deletions": 5}, "files": [{"sha": "5dd4236a8ddad9b1c92d43a017df0baeb6c00370", "filename": "compiler/rustc_attr/src/builtin.rs", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/d8b5745d4646e7cb84e8bd6491556658d0578e8b/compiler%2Frustc_attr%2Fsrc%2Fbuiltin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d8b5745d4646e7cb84e8bd6491556658d0578e8b/compiler%2Frustc_attr%2Fsrc%2Fbuiltin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_attr%2Fsrc%2Fbuiltin.rs?ref=d8b5745d4646e7cb84e8bd6491556658d0578e8b", "patch": "@@ -586,12 +586,14 @@ pub fn eval_condition(\n                     return false;\n                 }\n             };\n-            let channel = env!(\"CFG_RELEASE_CHANNEL\");\n-            let nightly = channel == \"nightly\" || channel == \"dev\";\n             let rustc_version = parse_version(env!(\"CFG_RELEASE\"), true).unwrap();\n \n-            // See https://github.com/rust-lang/rust/issues/64796#issuecomment-625474439 for details\n-            if nightly { rustc_version > min_version } else { rustc_version >= min_version }\n+            // See https://github.com/rust-lang/rust/issues/64796#issuecomment-640851454 for details\n+            if sess.assume_incomplete_release {\n+                rustc_version > min_version\n+            } else {\n+                rustc_version >= min_version\n+            }\n         }\n         ast::MetaItemKind::List(ref mis) => {\n             for mi in mis.iter() {"}, {"sha": "762a8da632e7e85e204e4a7fe81213cbd8ce0dd4", "filename": "compiler/rustc_interface/src/tests.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d8b5745d4646e7cb84e8bd6491556658d0578e8b/compiler%2Frustc_interface%2Fsrc%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d8b5745d4646e7cb84e8bd6491556658d0578e8b/compiler%2Frustc_interface%2Fsrc%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_interface%2Fsrc%2Ftests.rs?ref=d8b5745d4646e7cb84e8bd6491556658d0578e8b", "patch": "@@ -538,6 +538,7 @@ fn test_debugging_options_tracking_hash() {\n     // This list is in alphabetical order.\n     tracked!(allow_features, Some(vec![String::from(\"lang_items\")]));\n     tracked!(always_encode_mir, true);\n+    tracked!(assume_incomplete_release, true);\n     tracked!(asm_comments, true);\n     tracked!(binary_dep_depinfo, true);\n     tracked!(chalk, true);"}, {"sha": "e8e6a17b4d83f676794e3df1f1ffa50d0e7e35f2", "filename": "compiler/rustc_session/src/options.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d8b5745d4646e7cb84e8bd6491556658d0578e8b/compiler%2Frustc_session%2Fsrc%2Foptions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d8b5745d4646e7cb84e8bd6491556658d0578e8b/compiler%2Frustc_session%2Fsrc%2Foptions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_session%2Fsrc%2Foptions.rs?ref=d8b5745d4646e7cb84e8bd6491556658d0578e8b", "patch": "@@ -856,6 +856,8 @@ options! {DebuggingOptions, DebuggingSetter, basic_debugging_options,\n         \"only allow the listed language features to be enabled in code (space separated)\"),\n     always_encode_mir: bool = (false, parse_bool, [TRACKED],\n         \"encode MIR of all functions into the crate metadata (default: no)\"),\n+    assume_incomplete_release: bool = (false, parse_bool, [TRACKED],\n+        \"make cfg(version) treat the current version as incomplete (default: no)\"),\n     asm_comments: bool = (false, parse_bool, [TRACKED],\n         \"generate comments into the assembly (may change behavior) (default: no)\"),\n     ast_json: bool = (false, parse_bool, [UNTRACKED],"}, {"sha": "81b38347414e89fde937ca011074bf2ef1bee39a", "filename": "compiler/rustc_session/src/parse.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/d8b5745d4646e7cb84e8bd6491556658d0578e8b/compiler%2Frustc_session%2Fsrc%2Fparse.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d8b5745d4646e7cb84e8bd6491556658d0578e8b/compiler%2Frustc_session%2Fsrc%2Fparse.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_session%2Fsrc%2Fparse.rs?ref=d8b5745d4646e7cb84e8bd6491556658d0578e8b", "patch": "@@ -138,6 +138,8 @@ pub struct ParseSess {\n     pub env_depinfo: Lock<FxHashSet<(Symbol, Option<Symbol>)>>,\n     /// All the type ascriptions expressions that have had a suggestion for likely path typo.\n     pub type_ascription_path_suggestions: Lock<FxHashSet<Span>>,\n+    /// Whether cfg(version) should treat the current release as incomplete\n+    pub assume_incomplete_release: bool,\n }\n \n impl ParseSess {\n@@ -164,6 +166,7 @@ impl ParseSess {\n             reached_eof: Lock::new(false),\n             env_depinfo: Default::default(),\n             type_ascription_path_suggestions: Default::default(),\n+            assume_incomplete_release: false,\n         }\n     }\n "}, {"sha": "891b9616c2c1dd85ea78b79ed0388ccdaff87590", "filename": "compiler/rustc_session/src/session.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/d8b5745d4646e7cb84e8bd6491556658d0578e8b/compiler%2Frustc_session%2Fsrc%2Fsession.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d8b5745d4646e7cb84e8bd6491556658d0578e8b/compiler%2Frustc_session%2Fsrc%2Fsession.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_session%2Fsrc%2Fsession.rs?ref=d8b5745d4646e7cb84e8bd6491556658d0578e8b", "patch": "@@ -1336,7 +1336,8 @@ pub fn build_session(\n         None\n     };\n \n-    let parse_sess = ParseSess::with_span_handler(span_diagnostic, source_map);\n+    let mut parse_sess = ParseSess::with_span_handler(span_diagnostic, source_map);\n+    parse_sess.assume_incomplete_release = sopts.debugging_opts.assume_incomplete_release;\n     let sysroot = match &sopts.maybe_sysroot {\n         Some(sysroot) => sysroot.clone(),\n         None => filesearch::get_or_default_sysroot(),"}]}