{"sha": "4bc33d37225db3dd3ab68bb53e855fcf794047db", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRiYzMzZDM3MjI1ZGIzZGQzYWI2OGJiNTNlODU1ZmNmNzk0MDQ3ZGI=", "commit": {"author": {"name": "Ricky", "email": "Ricky@Hosfelt.io", "date": "2020-12-03T22:49:27Z"}, "committer": {"name": "Ricky", "email": "Ricky@Hosfelt.io", "date": "2020-12-03T22:51:42Z"}, "message": "Update the stderr message in ui tests", "tree": {"sha": "d626dc6f2bc90c347bf8f30ced58b67f9375591e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d626dc6f2bc90c347bf8f30ced58b67f9375591e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4bc33d37225db3dd3ab68bb53e855fcf794047db", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4bc33d37225db3dd3ab68bb53e855fcf794047db", "html_url": "https://github.com/rust-lang/rust/commit/4bc33d37225db3dd3ab68bb53e855fcf794047db", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4bc33d37225db3dd3ab68bb53e855fcf794047db/comments", "author": null, "committer": null, "parents": [{"sha": "75482f917d7fc65190274bd577dcc2e30ba34aff", "url": "https://api.github.com/repos/rust-lang/rust/commits/75482f917d7fc65190274bd577dcc2e30ba34aff", "html_url": "https://github.com/rust-lang/rust/commit/75482f917d7fc65190274bd577dcc2e30ba34aff"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "8ee2941790d3542d243502c8dd81135480830d06", "filename": "tests/ui/map_err.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/4bc33d37225db3dd3ab68bb53e855fcf794047db/tests%2Fui%2Fmap_err.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4bc33d37225db3dd3ab68bb53e855fcf794047db/tests%2Fui%2Fmap_err.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmap_err.stderr?ref=4bc33d37225db3dd3ab68bb53e855fcf794047db", "patch": "@@ -1,11 +1,11 @@\n-error: `map_err(|_|...` ignores the original error\n+error: `map_err(|_|...` wildcard pattern discards the original error\n   --> $DIR/map_err.rs:23:32\n    |\n LL |     println!(\"{:?}\", x.map_err(|_| Errors::Ignored));\n    |                                ^^^\n    |\n    = note: `-D clippy::map-err-ignore` implied by `-D warnings`\n-   = help: Consider wrapping the error in an enum variant for more error context, or using a named wildcard (`.map_err(|_ignored| ...`) to intentionally ignore the error\n+   = help: Consider storing the original error as a source in the new error, or silence this warning using an ignored identifier (`.map_err(|_foo| ...`)\n \n error: aborting due to previous error\n "}]}