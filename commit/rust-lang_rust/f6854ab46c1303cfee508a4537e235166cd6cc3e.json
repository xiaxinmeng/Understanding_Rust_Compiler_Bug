{"sha": "f6854ab46c1303cfee508a4537e235166cd6cc3e", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY2ODU0YWI0NmMxMzAzY2ZlZTUwOGE0NTM3ZTIzNTE2NmNkNmNjM2U=", "commit": {"author": {"name": "Kang Seonghoon", "email": "public+git@mearie.org", "date": "2014-04-09T08:16:09Z"}, "committer": {"name": "Kang Seonghoon", "email": "public+git@mearie.org", "date": "2014-04-14T01:00:49Z"}, "message": "rustdoc: Use an array instead of an object for the search index.\n\n`buildIndex` JS function recovers them into the original object form.\nThis greatly reduces the size of the uncompressed search index (27%),\nwhile this effect is less visible after gzipped (~5%).", "tree": {"sha": "a6a9974be17bac1a298a9255b225fa210a88f50d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a6a9974be17bac1a298a9255b225fa210a88f50d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f6854ab46c1303cfee508a4537e235166cd6cc3e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f6854ab46c1303cfee508a4537e235166cd6cc3e", "html_url": "https://github.com/rust-lang/rust/commit/f6854ab46c1303cfee508a4537e235166cd6cc3e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f6854ab46c1303cfee508a4537e235166cd6cc3e/comments", "author": {"login": "lifthrasiir", "id": 323836, "node_id": "MDQ6VXNlcjMyMzgzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/323836?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lifthrasiir", "html_url": "https://github.com/lifthrasiir", "followers_url": "https://api.github.com/users/lifthrasiir/followers", "following_url": "https://api.github.com/users/lifthrasiir/following{/other_user}", "gists_url": "https://api.github.com/users/lifthrasiir/gists{/gist_id}", "starred_url": "https://api.github.com/users/lifthrasiir/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lifthrasiir/subscriptions", "organizations_url": "https://api.github.com/users/lifthrasiir/orgs", "repos_url": "https://api.github.com/users/lifthrasiir/repos", "events_url": "https://api.github.com/users/lifthrasiir/events{/privacy}", "received_events_url": "https://api.github.com/users/lifthrasiir/received_events", "type": "User", "site_admin": false}, "committer": {"login": "lifthrasiir", "id": 323836, "node_id": "MDQ6VXNlcjMyMzgzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/323836?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lifthrasiir", "html_url": "https://github.com/lifthrasiir", "followers_url": "https://api.github.com/users/lifthrasiir/followers", "following_url": "https://api.github.com/users/lifthrasiir/following{/other_user}", "gists_url": "https://api.github.com/users/lifthrasiir/gists{/gist_id}", "starred_url": "https://api.github.com/users/lifthrasiir/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lifthrasiir/subscriptions", "organizations_url": "https://api.github.com/users/lifthrasiir/orgs", "repos_url": "https://api.github.com/users/lifthrasiir/repos", "events_url": "https://api.github.com/users/lifthrasiir/events{/privacy}", "received_events_url": "https://api.github.com/users/lifthrasiir/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f1de04c7609ea31f76e445e3189dc6143f959f40", "url": "https://api.github.com/repos/rust-lang/rust/commits/f1de04c7609ea31f76e445e3189dc6143f959f40", "html_url": "https://github.com/rust-lang/rust/commit/f1de04c7609ea31f76e445e3189dc6143f959f40"}], "stats": {"total": 28, "additions": 16, "deletions": 12}, "files": [{"sha": "aa54642262b83ab261063615451f68e3c6dcc6c4", "filename": "src/librustdoc/html/render.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/f6854ab46c1303cfee508a4537e235166cd6cc3e/src%2Flibrustdoc%2Fhtml%2Frender.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f6854ab46c1303cfee508a4537e235166cd6cc3e/src%2Flibrustdoc%2Fhtml%2Frender.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender.rs?ref=f6854ab46c1303cfee508a4537e235166cd6cc3e", "patch": "@@ -313,17 +313,17 @@ pub fn run(mut krate: clean::Crate, dst: Path) -> io::IoResult<()> {\n             if i > 0 {\n                 try!(write!(&mut w, \",\"));\n             }\n-            try!(write!(&mut w, \"\\\\{ty:{:u},name:\\\"{}\\\",path:\\\"{}\\\",desc:{}\",\n+            try!(write!(&mut w, r#\"[{:u},\"{}\",\"{}\",{}\"#,\n                         item.ty, item.name, item.path,\n                         item.desc.to_json().to_str()));\n             match item.parent {\n                 Some(nodeid) => {\n                     let pathid = *nodeid_to_pathid.find(&nodeid).unwrap();\n-                    try!(write!(&mut w, \",parent:{}\", pathid));\n+                    try!(write!(&mut w, \",{}\", pathid));\n                 }\n                 None => {}\n             }\n-            try!(write!(&mut w, \"\\\\}\"));\n+            try!(write!(&mut w, \"]\"));\n         }\n         try!(write!(&mut w, \"];\"));\n         try!(write!(&mut w, \"allPaths['{}'] = [\", krate.name));\n@@ -332,7 +332,7 @@ pub fn run(mut krate: clean::Crate, dst: Path) -> io::IoResult<()> {\n             if i > 0 {\n                 try!(write!(&mut w, \",\"));\n             }\n-            try!(write!(&mut w, \"\\\\{type:{:u},name:'{}'\\\\}\",\n+            try!(write!(&mut w, r#\"[{:u},\"{}\"]\"#,\n                         short, *fqp.last().unwrap()));\n         }\n         try!(write!(&mut w, \"];\"));"}, {"sha": "692ab5b9ac2865df499f8a907a8a697a3d486bb8", "filename": "src/librustdoc/html/static/main.js", "status": "modified", "additions": 12, "deletions": 8, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/f6854ab46c1303cfee508a4537e235166cd6cc3e/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fmain.js", "raw_url": "https://github.com/rust-lang/rust/raw/f6854ab46c1303cfee508a4537e235166cd6cc3e/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fmain.js", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fmain.js?ref=f6854ab46c1303cfee508a4537e235166cd6cc3e", "patch": "@@ -294,7 +294,7 @@\n                     if ((validate) &&\n                         (name.toLowerCase().indexOf(keys[i]) > -1 ||\n                          path.toLowerCase().indexOf(keys[i]) > -1 ||\n-                         parent.name.toLowerCase().indexOf(keys[i]) > -1))\n+                         parent[1].toLowerCase().indexOf(keys[i]) > -1))\n                     {\n                         validate = true;\n                     } else {\n@@ -423,12 +423,14 @@\n                             '\">' + name + '</a>';\n                     } else if (item.parent !== undefined) {\n                         var myparent = allPaths[item.crate][item.parent];\n+                        var parentType = myparent[0];\n+                        var parentName = myparent[1];\n                         var anchor = '#' + type + '.' + name;\n-                        output += item.path + '::' + myparent.name +\n+                        output += item.path + '::' + parentName +\n                             '::<a href=\"' + rootPath +\n                             item.path.replace(/::/g, '/') +\n-                            '/' + itemTypes[myparent.type] +\n-                            '.' + myparent.name +\n+                            '/' + itemTypes[parentType] +\n+                            '.' + parentName +\n                             '.html' + anchor +\n                             '\" class=\"' + type +\n                             '\">' + name + '</a>';\n@@ -545,10 +547,12 @@\n                 // all other search operations have access to this cached data for\n                 // faster analysis operations\n                 for (i = 0; i < len; i += 1) {\n-                    rawSearchIndex[crate][i].crate = crate;\n-                    searchIndex.push(rawSearchIndex[crate][i]);\n-                    if (typeof rawSearchIndex[crate][i].name === \"string\") {\n-                        var word = rawSearchIndex[crate][i].name.toLowerCase();\n+                    var rawRow = rawSearchIndex[crate][i];\n+                    var row = {crate: crate, ty: rawRow[0], name: rawRow[1],\n+                               path: rawRow[2], desc: rawRow[3], parent: rawRow[4]};\n+                    searchIndex.push(row);\n+                    if (typeof row.name === \"string\") {\n+                        var word = row.name.toLowerCase();\n                         searchWords.push(word);\n                     } else {\n                         searchWords.push(\"\");"}]}