{"sha": "a2b18274a890eb19db5f784b2fb6925eebcdf86f", "node_id": "MDY6Q29tbWl0NzI0NzEyOmEyYjE4Mjc0YTg5MGViMTlkYjVmNzg0YjJmYjY5MjVlZWJjZGY4NmY=", "commit": {"author": {"name": "Bastian Kauschke", "email": "bastian_kauschke@hotmail.de", "date": "2020-07-16T10:17:27Z"}, "committer": {"name": "Bastian Kauschke", "email": "bastian_kauschke@hotmail.de", "date": "2020-07-16T10:17:27Z"}, "message": "add regression test for #71348", "tree": {"sha": "8f903b7540995976544e8a3b9c9c2e79fbe33e8b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8f903b7540995976544e8a3b9c9c2e79fbe33e8b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a2b18274a890eb19db5f784b2fb6925eebcdf86f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a2b18274a890eb19db5f784b2fb6925eebcdf86f", "html_url": "https://github.com/rust-lang/rust/commit/a2b18274a890eb19db5f784b2fb6925eebcdf86f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a2b18274a890eb19db5f784b2fb6925eebcdf86f/comments", "author": {"login": "lcnr", "id": 29864074, "node_id": "MDQ6VXNlcjI5ODY0MDc0", "avatar_url": "https://avatars.githubusercontent.com/u/29864074?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lcnr", "html_url": "https://github.com/lcnr", "followers_url": "https://api.github.com/users/lcnr/followers", "following_url": "https://api.github.com/users/lcnr/following{/other_user}", "gists_url": "https://api.github.com/users/lcnr/gists{/gist_id}", "starred_url": "https://api.github.com/users/lcnr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lcnr/subscriptions", "organizations_url": "https://api.github.com/users/lcnr/orgs", "repos_url": "https://api.github.com/users/lcnr/repos", "events_url": "https://api.github.com/users/lcnr/events{/privacy}", "received_events_url": "https://api.github.com/users/lcnr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "lcnr", "id": 29864074, "node_id": "MDQ6VXNlcjI5ODY0MDc0", "avatar_url": "https://avatars.githubusercontent.com/u/29864074?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lcnr", "html_url": "https://github.com/lcnr", "followers_url": "https://api.github.com/users/lcnr/followers", "following_url": "https://api.github.com/users/lcnr/following{/other_user}", "gists_url": "https://api.github.com/users/lcnr/gists{/gist_id}", "starred_url": "https://api.github.com/users/lcnr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lcnr/subscriptions", "organizations_url": "https://api.github.com/users/lcnr/orgs", "repos_url": "https://api.github.com/users/lcnr/repos", "events_url": "https://api.github.com/users/lcnr/events{/privacy}", "received_events_url": "https://api.github.com/users/lcnr/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "eee160cdea88da87396f5682220193a01ff177b0", "url": "https://api.github.com/repos/rust-lang/rust/commits/eee160cdea88da87396f5682220193a01ff177b0", "html_url": "https://github.com/rust-lang/rust/commit/eee160cdea88da87396f5682220193a01ff177b0"}], "stats": {"total": 35, "additions": 35, "deletions": 0}, "files": [{"sha": "ec22dcdf60b466b64f0d4ee9d6588acefa3c490a", "filename": "src/test/ui/const-generics/type-dependent/issue-71348.rs", "status": "added", "additions": 35, "deletions": 0, "changes": 35, "blob_url": "https://github.com/rust-lang/rust/blob/a2b18274a890eb19db5f784b2fb6925eebcdf86f/src%2Ftest%2Fui%2Fconst-generics%2Ftype-dependent%2Fissue-71348.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a2b18274a890eb19db5f784b2fb6925eebcdf86f/src%2Ftest%2Fui%2Fconst-generics%2Ftype-dependent%2Fissue-71348.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Ftype-dependent%2Fissue-71348.rs?ref=a2b18274a890eb19db5f784b2fb6925eebcdf86f", "patch": "@@ -0,0 +1,35 @@\n+// run-pass\n+#![feature(const_generics)]\n+#![allow(incomplete_features)]\n+\n+struct Foo {\n+    i: i32,\n+}\n+\n+trait Get<'a, const N: &'static str> {\n+    type Target: 'a;\n+\n+    fn get(&'a self) -> &'a Self::Target;\n+}\n+\n+impl Foo {\n+    fn ask<'a, const N: &'static str>(&'a self) -> &'a <Self as Get<N>>::Target\n+    where\n+        Self: Get<'a, N>,\n+    {\n+        self.get()\n+    }\n+}\n+\n+impl<'a> Get<'a, \"int\"> for Foo {\n+    type Target = i32;\n+\n+    fn get(&'a self) -> &'a Self::Target {\n+        &self.i\n+    }\n+}\n+\n+fn main() {\n+    let foo = Foo { i: 123 };\n+    assert_eq!(foo.ask::<\"int\">(), &123);\n+}"}]}