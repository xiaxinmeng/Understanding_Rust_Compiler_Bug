{"sha": "7ca560d6abc0217943db436bb4b738bf6977cf93", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdjYTU2MGQ2YWJjMDIxNzk0M2RiNDM2YmI0YjczOGJmNjk3N2NmOTM=", "commit": {"author": {"name": "Nick Cameron", "email": "ncameron@mozilla.com", "date": "2015-05-14T05:44:08Z"}, "committer": {"name": "Nick Cameron", "email": "ncameron@mozilla.com", "date": "2015-05-14T10:05:52Z"}, "message": "save-analysis: fix a bracket counting bug", "tree": {"sha": "dcff51ebde6b8dd3272b62822757a97471171472", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/dcff51ebde6b8dd3272b62822757a97471171472"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7ca560d6abc0217943db436bb4b738bf6977cf93", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7ca560d6abc0217943db436bb4b738bf6977cf93", "html_url": "https://github.com/rust-lang/rust/commit/7ca560d6abc0217943db436bb4b738bf6977cf93", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7ca560d6abc0217943db436bb4b738bf6977cf93/comments", "author": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "952614bc8b5e198ffa82dd0ecffc96b141a3cc91", "url": "https://api.github.com/repos/rust-lang/rust/commits/952614bc8b5e198ffa82dd0ecffc96b141a3cc91", "html_url": "https://github.com/rust-lang/rust/commit/952614bc8b5e198ffa82dd0ecffc96b141a3cc91"}], "stats": {"total": 37, "additions": 23, "deletions": 14}, "files": [{"sha": "1b9976be72f42139784682863f808ff7dcbf000a", "filename": "src/librustc_trans/save/mod.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/7ca560d6abc0217943db436bb4b738bf6977cf93/src%2Flibrustc_trans%2Fsave%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7ca560d6abc0217943db436bb4b738bf6977cf93/src%2Flibrustc_trans%2Fsave%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Fsave%2Fmod.rs?ref=7ca560d6abc0217943db436bb4b738bf6977cf93", "patch": "@@ -111,12 +111,12 @@ impl<'l, 'tcx: 'l> SaveContext<'l, 'tcx> {\n                 let qualname = format!(\"::{}\", self.analysis.ty_cx.map.path_to_string(item.id));\n \n                 // If the variable is immutable, save the initialising expression.\n-                let value = match mt {\n-                    ast::MutMutable => String::from_str(\"<mutable>\"),\n-                    ast::MutImmutable => self.span_utils.snippet(expr.span),\n+                let (value, keyword) = match mt {\n+                    ast::MutMutable => (String::from_str(\"<mutable>\"), keywords::Mut),\n+                    ast::MutImmutable => (self.span_utils.snippet(expr.span), keywords::Static),\n                 };\n \n-                let sub_span = self.span_utils.sub_span_after_keyword(item.span, keywords::Static);\n+                let sub_span = self.span_utils.sub_span_after_keyword(item.span, keyword);\n \n                 Data::VariableData(VariableData {\n                     id: item.id,"}, {"sha": "ba027e4c2d192141de56011b93cb0c5bb7465ca6", "filename": "src/librustc_trans/save/span_utils.rs", "status": "modified", "additions": 7, "deletions": 10, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/7ca560d6abc0217943db436bb4b738bf6977cf93/src%2Flibrustc_trans%2Fsave%2Fspan_utils.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7ca560d6abc0217943db436bb4b738bf6977cf93/src%2Flibrustc_trans%2Fsave%2Fspan_utils.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Fsave%2Fspan_utils.rs?ref=7ca560d6abc0217943db436bb4b738bf6977cf93", "patch": "@@ -237,7 +237,7 @@ impl<'a> SpanUtils<'a> {\n \n         let mut toks = self.retokenise_span(span);\n         // We keep track of how many brackets we're nested in\n-        let mut bracket_count = 0;\n+        let mut bracket_count: isize = 0;\n         let mut found_ufcs_sep = false;\n         loop {\n             let ts = toks.real_token();\n@@ -255,19 +255,16 @@ impl<'a> SpanUtils<'a> {\n             }\n             bracket_count += match ts.tok {\n                 token::Lt => 1,\n-                token::Gt => {\n-                    // Ignore the `>::` in `<Type as Trait>::AssocTy`.\n-                    if !found_ufcs_sep && bracket_count == 0 {\n-                        found_ufcs_sep = true;\n-                        0\n-                    } else {\n-                        -1\n-                    }\n-                }\n+                token::Gt => -1,\n                 token::BinOp(token::Shl) => 2,\n                 token::BinOp(token::Shr) => -2,\n                 _ => 0\n             };\n+            // Ignore the `>::` in `<Type as Trait>::AssocTy`.\n+            if !found_ufcs_sep && bracket_count == -1 {\n+                found_ufcs_sep = true;\n+                bracket_count += 1\n+            }\n             if ts.tok.is_ident() && bracket_count == nesting {\n                 result.push(self.make_sub_span(span, Some(ts.sp)).unwrap());\n             }"}, {"sha": "07b99dff4e0faba4f50409149672207e09d5295a", "filename": "src/test/run-make/save-analysis/foo.rs", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/7ca560d6abc0217943db436bb4b738bf6977cf93/src%2Ftest%2Frun-make%2Fsave-analysis%2Ffoo.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7ca560d6abc0217943db436bb4b738bf6977cf93/src%2Ftest%2Frun-make%2Fsave-analysis%2Ffoo.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fsave-analysis%2Ffoo.rs?ref=7ca560d6abc0217943db436bb4b738bf6977cf93", "patch": "@@ -352,3 +352,15 @@ impl Iterator for nofields {\n         panic!()\n     }\n }\n+\n+trait Pattern<'a> {\n+    type Searcher;\n+}\n+\n+struct CharEqPattern;\n+\n+impl<'a> Pattern<'a> for CharEqPattern {\n+    type Searcher = CharEqPattern;\n+}\n+\n+struct CharSearcher<'a>(<CharEqPattern as Pattern<'a>>::Searcher);"}]}