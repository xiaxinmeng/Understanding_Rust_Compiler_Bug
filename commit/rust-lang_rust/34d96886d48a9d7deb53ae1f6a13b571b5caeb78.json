{"sha": "34d96886d48a9d7deb53ae1f6a13b571b5caeb78", "node_id": "C_kwDOAAsO6NoAKDM0ZDk2ODg2ZDQ4YTlkN2RlYjUzYWUxZjZhMTNiNTcxYjVjYWViNzg", "commit": {"author": {"name": "Le\u00f3n Orell Valerian Liehr", "email": "me@fmease.dev", "date": "2023-04-27T16:12:53Z"}, "committer": {"name": "Le\u00f3n Orell Valerian Liehr", "email": "me@fmease.dev", "date": "2023-04-27T16:12:53Z"}, "message": "rustdoc: rebind bound vars to type-outlives predicates", "tree": {"sha": "72892b9d182750c3575f27cb49e90999c8a0e42f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/72892b9d182750c3575f27cb49e90999c8a0e42f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/34d96886d48a9d7deb53ae1f6a13b571b5caeb78", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEXSQFaHGAjVoD5I3F0XoHIV9o5xMFAmRKoBsACgkQ0XoHIV9o\n5xNcCw/9H8h+6VQXZQAJHCu9Bf2CY0fNVmIp89f/PmGq4iUocF6sELzXBIxrGH3w\nlpfHEYEgxh9997nSzrLDBLcP/BvDAwvnyYPx6TVdekBXOgOCk6ak9JEhnSBF1+i3\n6VSmlapNSCXHUNVeP02NCu4B2sl65tzhUyFqV3IjJE856zyOxcUFrHxHkV/UzlnS\nE+1fM/SXFXNZQsM7njQixHm6w+nejn4ikxpHDVbOwJb+fYfCsc7YRI3zC7jLIIiV\nz3UpD2c/1s2YsRrSFrUAWDmhzsfni2UWtvzg+cuHAJcz917cUZM147IDOrXlsux8\npCLuKEs+B1pudb5Jy2jQx5S/VrfzKUoF+8Zc1WOeEwZZ+TGc85f3eYR/VBAxFLQH\n9Aw42F+vm+/i5/HRhDLXGYB3cCqNp4qwVnpl/A8z1DvEZwwTQktZgkWNuFGcK8Qp\n9BkchnvRHK1K02NzyqBmwO7XD/g9bRM16X9EZ8fxw8nwUAnfsgCHd3ul9fWKL8eS\nHtJrNdZjhXIFvfO7qxp3jM1k4ErMWiFztz5uKotNRueedsCvrDE6HT5s+DT/yeZv\nWoBMEcChmMkYrt6OYVzXlPJMoFUsnP4JaF+L3MicxUlwd/uHlbOenHfqp+XiosBI\ncG88Tgbs5w5ynlEgr4KI5AmAx/QJa7PFdxT2Q/N9EQgDGcmPSmc=\n=4cxq\n-----END PGP SIGNATURE-----", "payload": "tree 72892b9d182750c3575f27cb49e90999c8a0e42f\nparent de96f3d8735b70d5dc1ca178aaee198b329b8f3d\nauthor Le\u00f3n Orell Valerian Liehr <me@fmease.dev> 1682611973 +0200\ncommitter Le\u00f3n Orell Valerian Liehr <me@fmease.dev> 1682611973 +0200\n\nrustdoc: rebind bound vars to type-outlives predicates\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/34d96886d48a9d7deb53ae1f6a13b571b5caeb78", "html_url": "https://github.com/rust-lang/rust/commit/34d96886d48a9d7deb53ae1f6a13b571b5caeb78", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/34d96886d48a9d7deb53ae1f6a13b571b5caeb78/comments", "author": {"login": "fmease", "id": 14913065, "node_id": "MDQ6VXNlcjE0OTEzMDY1", "avatar_url": "https://avatars.githubusercontent.com/u/14913065?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fmease", "html_url": "https://github.com/fmease", "followers_url": "https://api.github.com/users/fmease/followers", "following_url": "https://api.github.com/users/fmease/following{/other_user}", "gists_url": "https://api.github.com/users/fmease/gists{/gist_id}", "starred_url": "https://api.github.com/users/fmease/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fmease/subscriptions", "organizations_url": "https://api.github.com/users/fmease/orgs", "repos_url": "https://api.github.com/users/fmease/repos", "events_url": "https://api.github.com/users/fmease/events{/privacy}", "received_events_url": "https://api.github.com/users/fmease/received_events", "type": "User", "site_admin": false}, "committer": {"login": "fmease", "id": 14913065, "node_id": "MDQ6VXNlcjE0OTEzMDY1", "avatar_url": "https://avatars.githubusercontent.com/u/14913065?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fmease", "html_url": "https://github.com/fmease", "followers_url": "https://api.github.com/users/fmease/followers", "following_url": "https://api.github.com/users/fmease/following{/other_user}", "gists_url": "https://api.github.com/users/fmease/gists{/gist_id}", "starred_url": "https://api.github.com/users/fmease/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fmease/subscriptions", "organizations_url": "https://api.github.com/users/fmease/orgs", "repos_url": "https://api.github.com/users/fmease/repos", "events_url": "https://api.github.com/users/fmease/events{/privacy}", "received_events_url": "https://api.github.com/users/fmease/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "de96f3d8735b70d5dc1ca178aaee198b329b8f3d", "url": "https://api.github.com/repos/rust-lang/rust/commits/de96f3d8735b70d5dc1ca178aaee198b329b8f3d", "html_url": "https://github.com/rust-lang/rust/commit/de96f3d8735b70d5dc1ca178aaee198b329b8f3d"}], "stats": {"total": 38, "additions": 33, "deletions": 5}, "files": [{"sha": "0f5ac93a0a818839114e4137ce44c0cfb1345a71", "filename": "src/librustdoc/clean/mod.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/34d96886d48a9d7deb53ae1f6a13b571b5caeb78/src%2Flibrustdoc%2Fclean%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/34d96886d48a9d7deb53ae1f6a13b571b5caeb78/src%2Flibrustdoc%2Fclean%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Fmod.rs?ref=34d96886d48a9d7deb53ae1f6a13b571b5caeb78", "patch": "@@ -304,7 +304,7 @@ pub(crate) fn clean_predicate<'tcx>(\n             clean_region_outlives_predicate(pred)\n         }\n         ty::PredicateKind::Clause(ty::Clause::TypeOutlives(pred)) => {\n-            clean_type_outlives_predicate(pred, cx)\n+            clean_type_outlives_predicate(bound_predicate.rebind(pred), cx)\n         }\n         ty::PredicateKind::Clause(ty::Clause::Projection(pred)) => {\n             Some(clean_projection_predicate(bound_predicate.rebind(pred), cx))\n@@ -345,7 +345,7 @@ fn clean_poly_trait_predicate<'tcx>(\n }\n \n fn clean_region_outlives_predicate<'tcx>(\n-    pred: ty::OutlivesPredicate<ty::Region<'tcx>, ty::Region<'tcx>>,\n+    pred: ty::RegionOutlivesPredicate<'tcx>,\n ) -> Option<WherePredicate> {\n     let ty::OutlivesPredicate(a, b) = pred;\n \n@@ -358,13 +358,13 @@ fn clean_region_outlives_predicate<'tcx>(\n }\n \n fn clean_type_outlives_predicate<'tcx>(\n-    pred: ty::OutlivesPredicate<Ty<'tcx>, ty::Region<'tcx>>,\n+    pred: ty::Binder<'tcx, ty::TypeOutlivesPredicate<'tcx>>,\n     cx: &mut DocContext<'tcx>,\n ) -> Option<WherePredicate> {\n-    let ty::OutlivesPredicate(ty, lt) = pred;\n+    let ty::OutlivesPredicate(ty, lt) = pred.skip_binder();\n \n     Some(WherePredicate::BoundPredicate {\n-        ty: clean_middle_ty(ty::Binder::dummy(ty), cx, None),\n+        ty: clean_middle_ty(pred.rebind(ty), cx, None),\n         bounds: vec![GenericBound::Outlives(\n             clean_middle_region(lt).expect(\"failed to clean lifetimes\"),\n         )],"}, {"sha": "e3154baf860a32ed360b09c49c286771a17db35e", "filename": "tests/rustdoc-ui/issue-110900.rs", "status": "added", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/34d96886d48a9d7deb53ae1f6a13b571b5caeb78/tests%2Frustdoc-ui%2Fissue-110900.rs", "raw_url": "https://github.com/rust-lang/rust/raw/34d96886d48a9d7deb53ae1f6a13b571b5caeb78/tests%2Frustdoc-ui%2Fissue-110900.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc-ui%2Fissue-110900.rs?ref=34d96886d48a9d7deb53ae1f6a13b571b5caeb78", "patch": "@@ -0,0 +1,28 @@\n+// check-pass\n+\n+#![crate_type=\"lib\"]\n+#![feature(associated_type_bounds)]\n+\n+trait A<'a> {}\n+trait B<'b> {}\n+\n+trait C<'c>: for<'a> A<'a> + for<'b> B<'b> {\n+    type As;\n+}\n+\n+trait E<'e> {\n+    type As;\n+}\n+trait F<'f>: for<'a> A<'a> + for<'e> E<'e> {}\n+struct G<T>\n+where\n+    T: for<'l, 'i> H<'l, 'i, As: for<'a> A<'a> + 'i>\n+{\n+    t: std::marker::PhantomData<T>,\n+}\n+\n+trait I<'a, 'b, 'c> {\n+    type As;\n+}\n+\n+trait H<'d, 'e>: for<'f> I<'d, 'f, 'e> + 'd {}"}]}