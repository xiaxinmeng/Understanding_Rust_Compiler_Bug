{"sha": "9ca7acb1f3455f76a7991ce675a46aaa228aa497", "node_id": "MDY6Q29tbWl0NzI0NzEyOjljYTdhY2IxZjM0NTVmNzZhNzk5MWNlNjc1YTQ2YWFhMjI4YWE0OTc=", "commit": {"author": {"name": "Brian Anderson", "email": "andersrb@gmail.com", "date": "2011-03-25T03:03:12Z"}, "committer": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2011-03-25T18:01:52Z"}, "message": "Update pretty printer for ports, channels, send and receive", "tree": {"sha": "8dcb26a54f0701148882af0ee88213e4745c79fd", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8dcb26a54f0701148882af0ee88213e4745c79fd"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9ca7acb1f3455f76a7991ce675a46aaa228aa497", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9ca7acb1f3455f76a7991ce675a46aaa228aa497", "html_url": "https://github.com/rust-lang/rust/commit/9ca7acb1f3455f76a7991ce675a46aaa228aa497", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9ca7acb1f3455f76a7991ce675a46aaa228aa497/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ebc4df3c7add208195e84940f69648be793b328f", "url": "https://api.github.com/repos/rust-lang/rust/commits/ebc4df3c7add208195e84940f69648be793b328f", "html_url": "https://github.com/rust-lang/rust/commit/ebc4df3c7add208195e84940f69648be793b328f"}], "stats": {"total": 36, "additions": 35, "deletions": 1}, "files": [{"sha": "80130ebf679fa5d1cd6516f5dd55cc53f9f7f4c2", "filename": "src/comp/front/parser.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9ca7acb1f3455f76a7991ce675a46aaa228aa497/src%2Fcomp%2Ffront%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9ca7acb1f3455f76a7991ce675a46aaa228aa497/src%2Fcomp%2Ffront%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Ffront%2Fparser.rs?ref=9ca7acb1f3455f76a7991ce675a46aaa228aa497", "patch": "@@ -1621,6 +1621,8 @@ fn stmt_ends_with_semi(@ast.stmt stmt) -> bool {\n                 case (ast.expr_assign(_,_,_))   { ret true; }\n                 case (ast.expr_assign_op(_,_,_,_))\n                     { ret true; }\n+                case (ast.expr_send(_,_,_))     { ret true; }\n+                case (ast.expr_recv(_,_,_))     { ret true; }\n                 case (ast.expr_field(_,_,_))    { ret true; }\n                 case (ast.expr_index(_,_,_))    { ret true; }\n                 case (ast.expr_path(_,_,_))     { ret true; }"}, {"sha": "589ee0c3c63bfbd8dd126216519aa4ed5f1ca6bf", "filename": "src/comp/pretty/pprust.rs", "status": "modified", "additions": 33, "deletions": 1, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/9ca7acb1f3455f76a7991ce675a46aaa228aa497/src%2Fcomp%2Fpretty%2Fpprust.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9ca7acb1f3455f76a7991ce675a46aaa228aa497/src%2Fcomp%2Fpretty%2Fpprust.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fpretty%2Fpprust.rs?ref=9ca7acb1f3455f76a7991ce675a46aaa228aa497", "patch": "@@ -78,6 +78,8 @@ impure fn print_type(ps s, &@ast.ty ty) {\n     case (ast.ty_str) {wrd(s, \"str\");}\n     case (ast.ty_box(?mt)) {wrd(s, \"@\"); print_mt(s, mt);}\n     case (ast.ty_vec(?mt)) {wrd(s, \"vec[\"); print_mt(s, mt); wrd(s, \"]\");}\n+    case (ast.ty_port(?t)) {wrd(s, \"port[\"); print_type(s, t); wrd(s, \"]\");}\n+    case (ast.ty_chan(?t)) {wrd(s, \"chan[\"); print_type(s, t); wrd(s, \"]\");}\n     case (ast.ty_type) {wrd(s, \"type\");}\n     case (ast.ty_tup(?elts)) {\n       wrd(s, \"tup\");\n@@ -481,6 +483,18 @@ impure fn print_expr(ps s, &@ast.expr expr) {\n       wrd1(s, \"=\");\n       print_expr(s, rhs);\n     }\n+    case (ast.expr_send(?lhs, ?rhs, _)) {\n+      print_expr(s, lhs);\n+      space(s);\n+      wrd1(s, \"<|\");\n+      print_expr(s, rhs);\n+    }\n+    case (ast.expr_recv(?lhs, ?rhs, _)) {\n+      print_expr(s, lhs);\n+      space(s);\n+      wrd1(s, \"<-\");\n+      print_expr(s, rhs);\n+    }\n     case (ast.expr_field(?expr,?id,_)) {\n       print_expr(s, expr);\n       wrd(s, \".\");\n@@ -541,6 +555,17 @@ impure fn print_expr(ps s, &@ast.expr expr) {\n       }\n       // TODO: extension 'body'\n     }\n+    case (ast.expr_port(_)) {\n+      wrd(s, \"port\");\n+      popen(s);\n+      pclose(s);\n+    }\n+    case (ast.expr_chan(?expr, _)) {\n+      wrd(s, \"chan\");\n+      popen(s);\n+      print_expr(s, expr);\n+      pclose(s);\n+    }\n   }\n   end(s);\n }\n@@ -563,7 +588,14 @@ impure fn print_decl(ps s, @ast.decl decl) {\n       alt (loc.init) {\n         case (option.some[ast.initializer](?init)) {\n           space(s);\n-          wrd1(s, \"=\");\n+          alt (init.op) {\n+            case (ast.init_assign) {\n+              wrd1(s, \"=\");\n+            }\n+            case (ast.init_recv) {\n+              wrd1(s, \"<-\");\n+            }\n+          }\n           print_expr(s, init.expr);\n         }\n         case (_) {}"}]}