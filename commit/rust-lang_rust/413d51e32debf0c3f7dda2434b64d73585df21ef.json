{"sha": "413d51e32debf0c3f7dda2434b64d73585df21ef", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQxM2Q1MWUzMmRlYmYwYzNmN2RkYTI0MzRiNjRkNzM1ODVkZjIxZWY=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2013-07-09T23:54:48Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2013-07-09T23:54:56Z"}, "message": "std::rt: Ignore 0-byte udp reads", "tree": {"sha": "793f88f8b776c2d32833f26b5190fdadc8dd1917", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/793f88f8b776c2d32833f26b5190fdadc8dd1917"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/413d51e32debf0c3f7dda2434b64d73585df21ef", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/413d51e32debf0c3f7dda2434b64d73585df21ef", "html_url": "https://github.com/rust-lang/rust/commit/413d51e32debf0c3f7dda2434b64d73585df21ef", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/413d51e32debf0c3f7dda2434b64d73585df21ef/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6fb92f8cab03824a52da6ad23060fe791928dcc9", "url": "https://api.github.com/repos/rust-lang/rust/commits/6fb92f8cab03824a52da6ad23060fe791928dcc9", "html_url": "https://github.com/rust-lang/rust/commit/6fb92f8cab03824a52da6ad23060fe791928dcc9"}], "stats": {"total": 7, "additions": 7, "deletions": 0}, "files": [{"sha": "6d096f9885a7d7fe5f04fac28d99e170d6a67292", "filename": "src/libstd/rt/uv/net.rs", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/413d51e32debf0c3f7dda2434b64d73585df21ef/src%2Flibstd%2Frt%2Fuv%2Fnet.rs", "raw_url": "https://github.com/rust-lang/rust/raw/413d51e32debf0c3f7dda2434b64d73585df21ef/src%2Flibstd%2Frt%2Fuv%2Fnet.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Frt%2Fuv%2Fnet.rs?ref=413d51e32debf0c3f7dda2434b64d73585df21ef", "patch": "@@ -392,6 +392,13 @@ impl UdpWatcher {\n \n         extern fn recv_cb(handle: *uvll::uv_udp_t, nread: ssize_t, buf: Buf,\n                           addr: *uvll::sockaddr, flags: c_uint) {\n+            // When there's no data to read the recv callback can be a no-op.\n+            // This can happen if read returns EAGAIN/EWOULDBLOCK. By ignoring\n+            // this we just drop back to kqueue and wait for the next callback.\n+            if nread == 0 {\n+                return;\n+            }\n+\n             rtdebug!(\"buf addr: %x\", buf.base as uint);\n             rtdebug!(\"buf len: %d\", buf.len as int);\n             let mut udp_watcher: UdpWatcher = NativeHandle::from_native_handle(handle);"}]}