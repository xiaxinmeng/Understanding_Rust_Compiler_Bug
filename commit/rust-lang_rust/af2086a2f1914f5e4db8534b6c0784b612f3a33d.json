{"sha": "af2086a2f1914f5e4db8534b6c0784b612f3a33d", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFmMjA4NmEyZjE5MTRmNWU0ZGI4NTM0YjZjMDc4NGI2MTJmM2EzM2Q=", "commit": {"author": {"name": "Marvin L\u00f6bel", "email": "loebel.marvin@gmail.com", "date": "2013-06-03T21:26:53Z"}, "committer": {"name": "Marvin L\u00f6bel", "email": "loebel.marvin@gmail.com", "date": "2013-06-06T20:11:47Z"}, "message": "Added iter::FromIter", "tree": {"sha": "ac5473900f69f117b68756e6d02a0b6f375a8e8f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ac5473900f69f117b68756e6d02a0b6f375a8e8f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/af2086a2f1914f5e4db8534b6c0784b612f3a33d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/af2086a2f1914f5e4db8534b6c0784b612f3a33d", "html_url": "https://github.com/rust-lang/rust/commit/af2086a2f1914f5e4db8534b6c0784b612f3a33d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/af2086a2f1914f5e4db8534b6c0784b612f3a33d/comments", "author": {"login": "Kimundi", "id": 2903206, "node_id": "MDQ6VXNlcjI5MDMyMDY=", "avatar_url": "https://avatars.githubusercontent.com/u/2903206?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Kimundi", "html_url": "https://github.com/Kimundi", "followers_url": "https://api.github.com/users/Kimundi/followers", "following_url": "https://api.github.com/users/Kimundi/following{/other_user}", "gists_url": "https://api.github.com/users/Kimundi/gists{/gist_id}", "starred_url": "https://api.github.com/users/Kimundi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Kimundi/subscriptions", "organizations_url": "https://api.github.com/users/Kimundi/orgs", "repos_url": "https://api.github.com/users/Kimundi/repos", "events_url": "https://api.github.com/users/Kimundi/events{/privacy}", "received_events_url": "https://api.github.com/users/Kimundi/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Kimundi", "id": 2903206, "node_id": "MDQ6VXNlcjI5MDMyMDY=", "avatar_url": "https://avatars.githubusercontent.com/u/2903206?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Kimundi", "html_url": "https://github.com/Kimundi", "followers_url": "https://api.github.com/users/Kimundi/followers", "following_url": "https://api.github.com/users/Kimundi/following{/other_user}", "gists_url": "https://api.github.com/users/Kimundi/gists{/gist_id}", "starred_url": "https://api.github.com/users/Kimundi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Kimundi/subscriptions", "organizations_url": "https://api.github.com/users/Kimundi/orgs", "repos_url": "https://api.github.com/users/Kimundi/repos", "events_url": "https://api.github.com/users/Kimundi/events{/privacy}", "received_events_url": "https://api.github.com/users/Kimundi/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0e9636922410d4c905135e93056fd86f1f49da30", "url": "https://api.github.com/repos/rust-lang/rust/commits/0e9636922410d4c905135e93056fd86f1f49da30", "html_url": "https://github.com/rust-lang/rust/commit/0e9636922410d4c905135e93056fd86f1f49da30"}], "stats": {"total": 34, "additions": 31, "deletions": 3}, "files": [{"sha": "fde27a6fc09d6c02b37898953b3472ba3b412e0e", "filename": "src/libstd/iter.rs", "status": "modified", "additions": 31, "deletions": 3, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/af2086a2f1914f5e4db8534b6c0784b612f3a33d/src%2Flibstd%2Fiter.rs", "raw_url": "https://github.com/rust-lang/rust/raw/af2086a2f1914f5e4db8534b6c0784b612f3a33d/src%2Flibstd%2Fiter.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fiter.rs?ref=af2086a2f1914f5e4db8534b6c0784b612f3a33d", "patch": "@@ -51,6 +51,29 @@ pub trait Times {\n     fn times(&self, it: &fn() -> bool) -> bool;\n }\n \n+pub trait FromIter<T> {\n+    // Build a container with elements from an internal iterator.\n+    //\n+    // # Example:\n+    //\n+    // ~~~ {.rust}\n+    // let xs = ~[1, 2, 3];\n+    // let ys: ~[int] = do FromIter::from_iter |f| { xs.each(|x| f(*x)) };\n+    // assert_eq!(xs, ys);\n+    // ~~~\n+    pub fn from_iter(iter: &fn(f: &fn(T) -> bool) -> bool) -> Self;\n+}\n+\n+// NOTE: This should be in vec but can't because of coherence\n+impl<T> FromIter<T> for ~[T]{\n+    #[inline(always)]\n+    pub fn from_iter(iter: &fn(f: &fn(T) -> bool) -> bool) -> ~[T] {\n+        let mut v = ~[];\n+        for iter |x| { v.push(x) }\n+        v\n+    }\n+}\n+\n /**\n  * Transform an internal iterator into an owned vector.\n  *\n@@ -64,9 +87,7 @@ pub trait Times {\n  */\n #[inline(always)]\n pub fn to_vec<T>(iter: &fn(f: &fn(T) -> bool) -> bool) -> ~[T] {\n-    let mut v = ~[];\n-    for iter |x| { v.push(x) }\n-    v\n+    FromIter::from_iter(iter)\n }\n \n /**\n@@ -268,6 +289,13 @@ mod tests {\n         assert_eq!(xs, ys);\n     }\n \n+    #[test]\n+    fn test_from_iter() {\n+        let xs: ~[int] = ~[1, 2, 3];\n+        let ys: ~[int] = do FromIter::from_iter |f| { xs.each(|x| f(*x)) };\n+        assert_eq!(xs, ys);\n+    }\n+\n     #[test]\n     fn test_any() {\n         let xs = ~[1u, 2, 3, 4, 5];"}]}