{"sha": "9568f448422384b42fc84080e996a6914211f6a0", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk1NjhmNDQ4NDIyMzg0YjQyZmM4NDA4MGU5OTZhNjkxNDIxMWY2YTA=", "commit": {"author": {"name": "Ulrik Sverdrup", "email": "bluss@users.noreply.github.com", "date": "2016-10-22T10:50:00Z"}, "committer": {"name": "Ulrik Sverdrup", "email": "bluss@users.noreply.github.com", "date": "2016-10-27T13:25:14Z"}, "message": "Add documentation for Read, Write impls for slices and Vec\n\nThe Write impls for &[u8] and Vec<u8> are quite different, and we need this to\nbe reflected in the docs.\n\nThese documentation comments will be visible on the respective type's\npage in the trait impls section.", "tree": {"sha": "8aa6f6b8809657424cdef4692360d7e8de26cea8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8aa6f6b8809657424cdef4692360d7e8de26cea8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9568f448422384b42fc84080e996a6914211f6a0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9568f448422384b42fc84080e996a6914211f6a0", "html_url": "https://github.com/rust-lang/rust/commit/9568f448422384b42fc84080e996a6914211f6a0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9568f448422384b42fc84080e996a6914211f6a0/comments", "author": {"login": "bluss", "id": 3209739, "node_id": "MDQ6VXNlcjMyMDk3Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/3209739?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bluss", "html_url": "https://github.com/bluss", "followers_url": "https://api.github.com/users/bluss/followers", "following_url": "https://api.github.com/users/bluss/following{/other_user}", "gists_url": "https://api.github.com/users/bluss/gists{/gist_id}", "starred_url": "https://api.github.com/users/bluss/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bluss/subscriptions", "organizations_url": "https://api.github.com/users/bluss/orgs", "repos_url": "https://api.github.com/users/bluss/repos", "events_url": "https://api.github.com/users/bluss/events{/privacy}", "received_events_url": "https://api.github.com/users/bluss/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bluss", "id": 3209739, "node_id": "MDQ6VXNlcjMyMDk3Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/3209739?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bluss", "html_url": "https://github.com/bluss", "followers_url": "https://api.github.com/users/bluss/followers", "following_url": "https://api.github.com/users/bluss/following{/other_user}", "gists_url": "https://api.github.com/users/bluss/gists{/gist_id}", "starred_url": "https://api.github.com/users/bluss/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bluss/subscriptions", "organizations_url": "https://api.github.com/users/bluss/orgs", "repos_url": "https://api.github.com/users/bluss/repos", "events_url": "https://api.github.com/users/bluss/events{/privacy}", "received_events_url": "https://api.github.com/users/bluss/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7bccb829d0fe9a733bd6efcf6f7313186ae237ab", "url": "https://api.github.com/repos/rust-lang/rust/commits/7bccb829d0fe9a733bd6efcf6f7313186ae237ab", "html_url": "https://github.com/rust-lang/rust/commit/7bccb829d0fe9a733bd6efcf6f7313186ae237ab"}], "stats": {"total": 11, "additions": 11, "deletions": 0}, "files": [{"sha": "6b26c016638a7e2c9df7fecca7daec162e93041c", "filename": "src/libstd/io/impls.rs", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/9568f448422384b42fc84080e996a6914211f6a0/src%2Flibstd%2Fio%2Fimpls.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9568f448422384b42fc84080e996a6914211f6a0/src%2Flibstd%2Fio%2Fimpls.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fio%2Fimpls.rs?ref=9568f448422384b42fc84080e996a6914211f6a0", "patch": "@@ -147,6 +147,10 @@ impl<B: BufRead + ?Sized> BufRead for Box<B> {\n // =============================================================================\n // In-memory buffer implementations\n \n+/// Read is implemented for `&[u8]` by copying from the slice.\n+///\n+/// Note that reading updates the slice to point to the yet unread part.\n+/// The slice will be empty when EOF is reached.\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n impl<'a> Read for &'a [u8] {\n     #[inline]\n@@ -180,6 +184,11 @@ impl<'a> BufRead for &'a [u8] {\n     fn consume(&mut self, amt: usize) { *self = &self[amt..]; }\n }\n \n+/// Write is implemented for `&mut [u8]` by copying into the slice, overwriting\n+/// its data.\n+///\n+/// Note that writing updates the slice to point to the yet unwritten part.\n+/// The slice will be empty when it has been completely overwritten.\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n impl<'a> Write for &'a mut [u8] {\n     #[inline]\n@@ -204,6 +213,8 @@ impl<'a> Write for &'a mut [u8] {\n     fn flush(&mut self) -> io::Result<()> { Ok(()) }\n }\n \n+/// Write is implemented for `Vec<u8>` by appending to the vector.\n+/// The vector will grow as needed.\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n impl Write for Vec<u8> {\n     #[inline]"}]}