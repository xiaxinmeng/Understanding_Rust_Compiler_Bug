{"sha": "c1c6e99bfd3296954a192d9fe3151a222dd9045c", "node_id": "MDY6Q29tbWl0NzI0NzEyOmMxYzZlOTliZmQzMjk2OTU0YTE5MmQ5ZmUzMTUxYTIyMmRkOTA0NWM=", "commit": {"author": {"name": "Nick Cameron", "email": "ncameron@mozilla.com", "date": "2016-04-26T02:06:24Z"}, "committer": {"name": "Nick Cameron", "email": "ncameron@mozilla.com", "date": "2016-05-02T23:15:09Z"}, "message": "rebasing\n\nNote that this whole PR is a [breaking-change] for clients of the Compiler API.", "tree": {"sha": "b4b9b322a3034bfce9202211515fcf6d84e6f328", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b4b9b322a3034bfce9202211515fcf6d84e6f328"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c1c6e99bfd3296954a192d9fe3151a222dd9045c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c1c6e99bfd3296954a192d9fe3151a222dd9045c", "html_url": "https://github.com/rust-lang/rust/commit/c1c6e99bfd3296954a192d9fe3151a222dd9045c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c1c6e99bfd3296954a192d9fe3151a222dd9045c/comments", "author": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "aaf56d7086e6dc5e436ec7064898f90295908312", "url": "https://api.github.com/repos/rust-lang/rust/commits/aaf56d7086e6dc5e436ec7064898f90295908312", "html_url": "https://github.com/rust-lang/rust/commit/aaf56d7086e6dc5e436ec7064898f90295908312"}], "stats": {"total": 8, "additions": 1, "deletions": 7}, "files": [{"sha": "ceb851da530acbdbcf152382997467daedc91f1d", "filename": "src/librustc_driver/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c1c6e99bfd3296954a192d9fe3151a222dd9045c/src%2Flibrustc_driver%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c1c6e99bfd3296954a192d9fe3151a222dd9045c/src%2Flibrustc_driver%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_driver%2Flib.rs?ref=c1c6e99bfd3296954a192d9fe3151a222dd9045c", "patch": "@@ -462,7 +462,6 @@ impl<'a> CompilerCalls<'a> for RustcDefaultCalls {\n                 };\n                 control.after_write_deps.callback = box move |state| {\n                     pretty::print_after_write_deps(state.session,\n-                                                   state.cstore.unwrap(),\n                                                    state.ast_map.unwrap(),\n                                                    state.input,\n                                                    &state.expanded_crate.take().unwrap(),"}, {"sha": "30f943bd9a4441cd362ea8f06c81e78e4d634d29", "filename": "src/librustc_driver/pretty.rs", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/c1c6e99bfd3296954a192d9fe3151a222dd9045c/src%2Flibrustc_driver%2Fpretty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c1c6e99bfd3296954a192d9fe3151a222dd9045c/src%2Flibrustc_driver%2Fpretty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_driver%2Fpretty.rs?ref=c1c6e99bfd3296954a192d9fe3151a222dd9045c", "patch": "@@ -26,8 +26,6 @@ use rustc::session::config::Input;\n use rustc_borrowck as borrowck;\n use rustc_borrowck::graphviz as borrowck_dot;\n use rustc_resolve as resolve;\n-use rustc_metadata::cstore::CStore;\n-use rustc_metadata::creader::LocalCrateReader;\n \n use rustc_mir::pretty::write_mir_pretty;\n use rustc_mir::graphviz::write_mir_graphviz;\n@@ -42,7 +40,6 @@ use syntax::util::small_vector::SmallVector;\n \n use graphviz as dot;\n \n-use std::cell::RefCell;\n use std::fs::File;\n use std::io::{self, Write};\n use std::iter;\n@@ -813,7 +810,6 @@ pub fn print_after_parsing(sess: &Session,\n }\n \n pub fn print_after_write_deps<'tcx, 'a: 'tcx>(sess: &'a Session,\n-                                              cstore: &CStore,\n                                               ast_map: &hir_map::Map<'tcx>,\n                                               input: &Input,\n                                               krate: &ast::Crate,\n@@ -826,7 +822,7 @@ pub fn print_after_write_deps<'tcx, 'a: 'tcx>(sess: &'a Session,\n     let _ignore = dep_graph.in_ignore();\n \n     if ppm.needs_analysis() {\n-        print_with_analysis(sess, cstore, ast_map, crate_name, arenas, ppm, opt_uii, ofile);\n+        print_with_analysis(sess, ast_map, crate_name, arenas, ppm, opt_uii, ofile);\n         return;\n     }\n \n@@ -917,7 +913,6 @@ pub fn print_after_write_deps<'tcx, 'a: 'tcx>(sess: &'a Session,\n // with a different callback than the standard driver, so that isn't easy.\n // Instead, we call that function ourselves.\n fn print_with_analysis<'tcx, 'a: 'tcx>(sess: &'a Session,\n-                                       cstore: &CStore,\n                                        ast_map: &hir_map::Map<'tcx>,\n                                        crate_name: &str,\n                                        arenas: &'tcx ty::CtxtArenas<'tcx>,"}]}