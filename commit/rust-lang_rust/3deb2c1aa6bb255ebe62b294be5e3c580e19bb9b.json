{"sha": "3deb2c1aa6bb255ebe62b294be5e3c580e19bb9b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNkZWIyYzFhYTZiYjI1NWViZTYyYjI5NGJlNWUzYzU4MGUxOWJiOWI=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2014-07-01T10:11:34Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2014-07-01T10:11:34Z"}, "message": "auto merge of #15289 : aturon/rust/libstd-stability, r=alexcrichton\n\nEarlier commits have established a baseline of `experimental` stability\r\nfor all crates under the facade (so their contents are considered\r\nexperimental within libstd). Since `experimental` is `allow` by\r\ndefault, we should use the same baseline stability for libstd itself.\r\n\r\nThis commit adds `experimental` tags to all of the modules defined in\r\n`std`, and `unstable` to `std` itself.", "tree": {"sha": "42c0dddb1304b5a3c0d5c60e0e9307bbe11627d9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/42c0dddb1304b5a3c0d5c60e0e9307bbe11627d9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3deb2c1aa6bb255ebe62b294be5e3c580e19bb9b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3deb2c1aa6bb255ebe62b294be5e3c580e19bb9b", "html_url": "https://github.com/rust-lang/rust/commit/3deb2c1aa6bb255ebe62b294be5e3c580e19bb9b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3deb2c1aa6bb255ebe62b294be5e3c580e19bb9b/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6ab7b6652ec916e37a2110bb2f579c7dc38b4560", "url": "https://api.github.com/repos/rust-lang/rust/commits/6ab7b6652ec916e37a2110bb2f579c7dc38b4560", "html_url": "https://github.com/rust-lang/rust/commit/6ab7b6652ec916e37a2110bb2f579c7dc38b4560"}, {"sha": "f7bb31a47a11ea85535024965432bcef90f407f7", "url": "https://api.github.com/repos/rust-lang/rust/commits/f7bb31a47a11ea85535024965432bcef90f407f7", "html_url": "https://github.com/rust-lang/rust/commit/f7bb31a47a11ea85535024965432bcef90f407f7"}], "stats": {"total": 41, "additions": 41, "deletions": 0}, "files": [{"sha": "fae1b933210d52a9c2f8f49499583eeb03f49873", "filename": "src/libstd/ascii.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3deb2c1aa6bb255ebe62b294be5e3c580e19bb9b/src%2Flibstd%2Fascii.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3deb2c1aa6bb255ebe62b294be5e3c580e19bb9b/src%2Flibstd%2Fascii.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fascii.rs?ref=3deb2c1aa6bb255ebe62b294be5e3c580e19bb9b", "patch": "@@ -10,6 +10,8 @@\n \n //! Operations on ASCII strings and characters\n \n+#![experimental]\n+\n use collections::Collection;\n use fmt;\n use iter::Iterator;"}, {"sha": "834d461f20ba1517f85fede4cd68ccdbfaaf264d", "filename": "src/libstd/bitflags.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/3deb2c1aa6bb255ebe62b294be5e3c580e19bb9b/src%2Flibstd%2Fbitflags.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3deb2c1aa6bb255ebe62b294be5e3c580e19bb9b/src%2Flibstd%2Fbitflags.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fbitflags.rs?ref=3deb2c1aa6bb255ebe62b294be5e3c580e19bb9b", "patch": "@@ -105,6 +105,7 @@\n //! - `insert`: inserts the specified flags in-place\n //! - `remove`: removes the specified flags in-place\n \n+#![experimental]\n #![macro_escape]\n \n #[macro_export]"}, {"sha": "a7d697c8665ef639132dac200953b41e65d885c1", "filename": "src/libstd/c_vec.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3deb2c1aa6bb255ebe62b294be5e3c580e19bb9b/src%2Flibstd%2Fc_vec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3deb2c1aa6bb255ebe62b294be5e3c580e19bb9b/src%2Flibstd%2Fc_vec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fc_vec.rs?ref=3deb2c1aa6bb255ebe62b294be5e3c580e19bb9b", "patch": "@@ -33,6 +33,8 @@\n //! handled correctly, i.e. that allocated memory is eventually freed\n //! if necessary.\n \n+#![experimental]\n+\n use collections::Collection;\n use kinds::Send;\n use mem;"}, {"sha": "ccef1c0fd2adb80331da2b646ff06de772ffba05", "filename": "src/libstd/collections/mod.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3deb2c1aa6bb255ebe62b294be5e3c580e19bb9b/src%2Flibstd%2Fcollections%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3deb2c1aa6bb255ebe62b294be5e3c580e19bb9b/src%2Flibstd%2Fcollections%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fcollections%2Fmod.rs?ref=3deb2c1aa6bb255ebe62b294be5e3c580e19bb9b", "patch": "@@ -12,6 +12,8 @@\n  * Collection types.\n  */\n \n+#![experimental]\n+\n pub use core_collections::{Collection, Mutable, Map, MutableMap};\n pub use core_collections::{Set, MutableSet, Deque};\n pub use core_collections::{Bitv, BitvSet, BTree, DList, EnumSet};"}, {"sha": "47ff85e2806d562caf77f6e81d12dc1255e36e9f", "filename": "src/libstd/failure.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3deb2c1aa6bb255ebe62b294be5e3c580e19bb9b/src%2Flibstd%2Ffailure.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3deb2c1aa6bb255ebe62b294be5e3c580e19bb9b/src%2Flibstd%2Ffailure.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Ffailure.rs?ref=3deb2c1aa6bb255ebe62b294be5e3c580e19bb9b", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#![experimental]\n+\n use alloc::owned::Box;\n use any::{Any, AnyRefExt};\n use fmt;"}, {"sha": "5834e576b0814039d6c9c8d8396d052f58c41ea9", "filename": "src/libstd/fmt.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3deb2c1aa6bb255ebe62b294be5e3c580e19bb9b/src%2Flibstd%2Ffmt.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3deb2c1aa6bb255ebe62b294be5e3c580e19bb9b/src%2Flibstd%2Ffmt.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Ffmt.rs?ref=3deb2c1aa6bb255ebe62b294be5e3c580e19bb9b", "patch": "@@ -412,6 +412,8 @@ the `}` character is escaped with `}}`.\n \n */\n \n+#![experimental]\n+\n use io::Writer;\n use io;\n use result::{Ok, Err};"}, {"sha": "1ca72bca20bdb5cbec9b983e2e90f7f8e7991262", "filename": "src/libstd/from_str.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3deb2c1aa6bb255ebe62b294be5e3c580e19bb9b/src%2Flibstd%2Ffrom_str.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3deb2c1aa6bb255ebe62b294be5e3c580e19bb9b/src%2Flibstd%2Ffrom_str.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Ffrom_str.rs?ref=3deb2c1aa6bb255ebe62b294be5e3c580e19bb9b", "patch": "@@ -10,6 +10,8 @@\n \n //! The `FromStr` trait for types that can be created from strings\n \n+#![experimental]\n+\n use option::{Option, Some, None};\n use string::String;\n use str::StrAllocating;"}, {"sha": "47b7426633c7b0c34e1631d922211cd44ab2397e", "filename": "src/libstd/gc.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/3deb2c1aa6bb255ebe62b294be5e3c580e19bb9b/src%2Flibstd%2Fgc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3deb2c1aa6bb255ebe62b294be5e3c580e19bb9b/src%2Flibstd%2Fgc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fgc.rs?ref=3deb2c1aa6bb255ebe62b294be5e3c580e19bb9b", "patch": "@@ -16,6 +16,7 @@ collector is task-local so `Gc<T>` is not sendable.\n \n */\n \n+#![experimental]\n #![allow(experimental)]\n \n use clone::Clone;"}, {"sha": "1d339b03af6717d9eb68e4908f3e6e4e7333bbf8", "filename": "src/libstd/io/mod.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/3deb2c1aa6bb255ebe62b294be5e3c580e19bb9b/src%2Flibstd%2Fio%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3deb2c1aa6bb255ebe62b294be5e3c580e19bb9b/src%2Flibstd%2Fio%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fio%2Fmod.rs?ref=3deb2c1aa6bb255ebe62b294be5e3c580e19bb9b", "patch": "@@ -216,6 +216,7 @@ responding to errors that may occur while attempting to read the numbers.\n \n */\n \n+#![experimental]\n #![deny(unused_must_use)]\n \n use char::Char;"}, {"sha": "48ccd1aa22ce3be3b18f6d517b8816aec688f4b2", "filename": "src/libstd/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/3deb2c1aa6bb255ebe62b294be5e3c580e19bb9b/src%2Flibstd%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3deb2c1aa6bb255ebe62b294be5e3c580e19bb9b/src%2Flibstd%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Flib.rs?ref=3deb2c1aa6bb255ebe62b294be5e3c580e19bb9b", "patch": "@@ -95,6 +95,7 @@\n //! and `format!`, also available to all Rust code.\n \n #![crate_id = \"std#0.11.0-pre\"]\n+#![unstable]\n #![comment = \"The Rust standard library\"]\n #![license = \"MIT/ASL2\"]\n #![crate_type = \"rlib\"]"}, {"sha": "8b79af8c9310d27c4ad8f6fa73711417a47dd91d", "filename": "src/libstd/macros.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/3deb2c1aa6bb255ebe62b294be5e3c580e19bb9b/src%2Flibstd%2Fmacros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3deb2c1aa6bb255ebe62b294be5e3c580e19bb9b/src%2Flibstd%2Fmacros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fmacros.rs?ref=3deb2c1aa6bb255ebe62b294be5e3c580e19bb9b", "patch": "@@ -14,6 +14,7 @@\n //! library. Each macro is available for use when linking against the standard\n //! library.\n \n+#![experimental]\n #![macro_escape]\n \n /// The entry point for failure of rust tasks."}, {"sha": "2b2ffb9f4e281706052a95a1797d3c10b984cf00", "filename": "src/libstd/num/f32.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/3deb2c1aa6bb255ebe62b294be5e3c580e19bb9b/src%2Flibstd%2Fnum%2Ff32.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3deb2c1aa6bb255ebe62b294be5e3c580e19bb9b/src%2Flibstd%2Fnum%2Ff32.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fnum%2Ff32.rs?ref=3deb2c1aa6bb255ebe62b294be5e3c580e19bb9b", "patch": "@@ -10,6 +10,7 @@\n \n //! Operations and constants for 32-bits floats (`f32` type)\n \n+#![experimental]\n #![allow(missing_doc)]\n #![allow(unsigned_negate)]\n #![doc(primitive = \"f32\")]"}, {"sha": "e156d2ce553240b629b6594429b60ef3eb303725", "filename": "src/libstd/num/f64.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/3deb2c1aa6bb255ebe62b294be5e3c580e19bb9b/src%2Flibstd%2Fnum%2Ff64.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3deb2c1aa6bb255ebe62b294be5e3c580e19bb9b/src%2Flibstd%2Fnum%2Ff64.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fnum%2Ff64.rs?ref=3deb2c1aa6bb255ebe62b294be5e3c580e19bb9b", "patch": "@@ -10,6 +10,7 @@\n \n //! Operations and constants for 64-bits floats (`f64` type)\n \n+#![experimental]\n #![allow(missing_doc)]\n #![doc(primitive = \"f64\")]\n "}, {"sha": "519de85edde65f3c4fa6aa535ce3a9064ee77f99", "filename": "src/libstd/num/float_macros.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/3deb2c1aa6bb255ebe62b294be5e3c580e19bb9b/src%2Flibstd%2Fnum%2Ffloat_macros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3deb2c1aa6bb255ebe62b294be5e3c580e19bb9b/src%2Flibstd%2Fnum%2Ffloat_macros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fnum%2Ffloat_macros.rs?ref=3deb2c1aa6bb255ebe62b294be5e3c580e19bb9b", "patch": "@@ -8,6 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#![experimental]\n #![macro_escape]\n #![doc(hidden)]\n "}, {"sha": "a4200b55a5906f575aa1bc6942f6a7a7f7cc4a47", "filename": "src/libstd/num/int_macros.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/3deb2c1aa6bb255ebe62b294be5e3c580e19bb9b/src%2Flibstd%2Fnum%2Fint_macros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3deb2c1aa6bb255ebe62b294be5e3c580e19bb9b/src%2Flibstd%2Fnum%2Fint_macros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fnum%2Fint_macros.rs?ref=3deb2c1aa6bb255ebe62b294be5e3c580e19bb9b", "patch": "@@ -8,6 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#![experimental]\n #![macro_escape]\n #![doc(hidden)]\n "}, {"sha": "27ee1e3ce3bb31d8c1e42d05b9b9e670261b47cc", "filename": "src/libstd/num/mod.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/3deb2c1aa6bb255ebe62b294be5e3c580e19bb9b/src%2Flibstd%2Fnum%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3deb2c1aa6bb255ebe62b294be5e3c580e19bb9b/src%2Flibstd%2Fnum%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fnum%2Fmod.rs?ref=3deb2c1aa6bb255ebe62b294be5e3c580e19bb9b", "patch": "@@ -13,6 +13,7 @@\n //! These are implemented for the primitive numeric types in `std::{u8, u16,\n //! u32, u64, uint, i8, i16, i32, i64, int, f32, f64}`.\n \n+#![experimental]\n #![allow(missing_doc)]\n \n use option::Option;"}, {"sha": "7f2efe034a24a77b8c4acb8ae83e1abef89eff64", "filename": "src/libstd/num/uint_macros.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/3deb2c1aa6bb255ebe62b294be5e3c580e19bb9b/src%2Flibstd%2Fnum%2Fuint_macros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3deb2c1aa6bb255ebe62b294be5e3c580e19bb9b/src%2Flibstd%2Fnum%2Fuint_macros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fnum%2Fuint_macros.rs?ref=3deb2c1aa6bb255ebe62b294be5e3c580e19bb9b", "patch": "@@ -8,6 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#![experimental]\n #![macro_escape]\n #![doc(hidden)]\n #![allow(unsigned_negate)]"}, {"sha": "6674dd532aeb0b5f76d924b3e8c5a5555a863a00", "filename": "src/libstd/os.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3deb2c1aa6bb255ebe62b294be5e3c580e19bb9b/src%2Flibstd%2Fos.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3deb2c1aa6bb255ebe62b294be5e3c580e19bb9b/src%2Flibstd%2Fos.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fos.rs?ref=3deb2c1aa6bb255ebe62b294be5e3c580e19bb9b", "patch": "@@ -26,6 +26,8 @@\n  * to write OS-ignorant code by default.\n  */\n \n+#![experimental]\n+\n #![allow(missing_doc)]\n #![allow(non_snake_case_functions)]\n "}, {"sha": "7d814df8ebf95dd11190f7d00f0db804f31c7fad", "filename": "src/libstd/path/mod.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3deb2c1aa6bb255ebe62b294be5e3c580e19bb9b/src%2Flibstd%2Fpath%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3deb2c1aa6bb255ebe62b294be5e3c580e19bb9b/src%2Flibstd%2Fpath%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fpath%2Fmod.rs?ref=3deb2c1aa6bb255ebe62b294be5e3c580e19bb9b", "patch": "@@ -63,6 +63,8 @@ println!(\"path exists: {}\", path.exists());\n \n */\n \n+#![experimental]\n+\n use collections::Collection;\n use c_str::CString;\n use clone::Clone;"}, {"sha": "61e8b63af359ef6d042d511d7b785a049a82f0c3", "filename": "src/libstd/prelude.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3deb2c1aa6bb255ebe62b294be5e3c580e19bb9b/src%2Flibstd%2Fprelude.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3deb2c1aa6bb255ebe62b294be5e3c580e19bb9b/src%2Flibstd%2Fprelude.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fprelude.rs?ref=3deb2c1aa6bb255ebe62b294be5e3c580e19bb9b", "patch": "@@ -37,6 +37,8 @@\n //! particularly useful standalone functions, like `from_str`, `range`, and\n //! `drop`, `spawn`, and `channel`.\n \n+#![experimental]\n+\n // Reexported core operators\n #[doc(no_inline)] pub use kinds::{Copy, Send, Sized, Share};\n #[doc(no_inline)] pub use ops::{Add, Sub, Mul, Div, Rem, Neg, Not};"}, {"sha": "0ffaadef0a1303c876c52d3a4bcd8cc8f68b9659", "filename": "src/libstd/rand/mod.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3deb2c1aa6bb255ebe62b294be5e3c580e19bb9b/src%2Flibstd%2Frand%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3deb2c1aa6bb255ebe62b294be5e3c580e19bb9b/src%2Flibstd%2Frand%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Frand%2Fmod.rs?ref=3deb2c1aa6bb255ebe62b294be5e3c580e19bb9b", "patch": "@@ -73,6 +73,8 @@ println!(\"{}\", tuple)\n ```\n */\n \n+#![experimental]\n+\n use cell::RefCell;\n use clone::Clone;\n use io::IoResult;"}, {"sha": "4490977bde619ef833f725c75af39cb9fa8ef796", "filename": "src/libstd/rt/mod.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3deb2c1aa6bb255ebe62b294be5e3c580e19bb9b/src%2Flibstd%2Frt%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3deb2c1aa6bb255ebe62b294be5e3c580e19bb9b/src%2Flibstd%2Frt%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Frt%2Fmod.rs?ref=3deb2c1aa6bb255ebe62b294be5e3c580e19bb9b", "patch": "@@ -51,6 +51,8 @@ Several modules in `core` are clients of `rt`:\n \n */\n \n+#![experimental]\n+\n // FIXME: this should not be here.\n #![allow(missing_doc)]\n "}, {"sha": "0ffac99775c11a75ceac8651d1083d98b41ba7fc", "filename": "src/libstd/rtdeps.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3deb2c1aa6bb255ebe62b294be5e3c580e19bb9b/src%2Flibstd%2Frtdeps.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3deb2c1aa6bb255ebe62b294be5e3c580e19bb9b/src%2Flibstd%2Frtdeps.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Frtdeps.rs?ref=3deb2c1aa6bb255ebe62b294be5e3c580e19bb9b", "patch": "@@ -12,6 +12,8 @@\n //! the standard library This varies per-platform, but these libraries are\n //! necessary for running libstd.\n \n+#![experimental]\n+\n // All platforms need to link to rustrt\n #[link(name = \"rust_builtin\", kind = \"static\")]\n extern {}"}, {"sha": "cc32818baa4561df7fd3e75a37440cae33388b38", "filename": "src/libstd/sync/mod.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3deb2c1aa6bb255ebe62b294be5e3c580e19bb9b/src%2Flibstd%2Fsync%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3deb2c1aa6bb255ebe62b294be5e3c580e19bb9b/src%2Flibstd%2Fsync%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsync%2Fmod.rs?ref=3deb2c1aa6bb255ebe62b294be5e3c580e19bb9b", "patch": "@@ -15,6 +15,8 @@\n //! and/or blocking at all, but rather provide the necessary tools to build\n //! other types of concurrent primitives.\n \n+#![experimental]\n+\n pub use core_sync::{atomics, deque, mpmc_bounded_queue, mpsc_queue, spsc_queue};\n pub use core_sync::{Arc, Weak, Mutex, MutexGuard, Condvar, Barrier};\n pub use core_sync::{RWLock, RWLockReadGuard, RWLockWriteGuard};"}, {"sha": "c20cbea0ae7cced97332673d8e1eda74ea934486", "filename": "src/libstd/task.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3deb2c1aa6bb255ebe62b294be5e3c580e19bb9b/src%2Flibstd%2Ftask.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3deb2c1aa6bb255ebe62b294be5e3c580e19bb9b/src%2Flibstd%2Ftask.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Ftask.rs?ref=3deb2c1aa6bb255ebe62b294be5e3c580e19bb9b", "patch": "@@ -91,6 +91,8 @@\n //! # }\n //! ```\n \n+#![experimental]\n+\n use any::Any;\n use comm::channel;\n use io::{Writer, stdio};"}, {"sha": "e51e2c4d9ce5e5acbff2437c02d9e37d26bc2a2e", "filename": "src/libstd/to_str.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3deb2c1aa6bb255ebe62b294be5e3c580e19bb9b/src%2Flibstd%2Fto_str.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3deb2c1aa6bb255ebe62b294be5e3c580e19bb9b/src%2Flibstd%2Fto_str.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fto_str.rs?ref=3deb2c1aa6bb255ebe62b294be5e3c580e19bb9b", "patch": "@@ -14,6 +14,8 @@ The `ToStr` trait for converting to strings\n \n */\n \n+#![experimental]\n+\n use fmt;\n use string::String;\n "}]}