{"sha": "54a96355ddfa222669ddad46e263d612a1530c8c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU0YTk2MzU1ZGRmYTIyMjY2OWRkYWQ0NmUyNjNkNjEyYTE1MzBjOGM=", "commit": {"author": {"name": "Marcus Klaas", "email": "mail@marcusklaas.nl", "date": "2015-07-31T11:06:28Z"}, "committer": {"name": "Marcus Klaas", "email": "mail@marcusklaas.nl", "date": "2015-07-31T11:10:19Z"}, "message": "Phase out token::get_ident in favour of ToString\n\ntoken::get_ident was removed in rust commit 00a5e66f818ad9d79cc4425f5564c7b07e3213a6", "tree": {"sha": "7d3de1a97479946464fe69c5cdb39fde52519a1e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7d3de1a97479946464fe69c5cdb39fde52519a1e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/54a96355ddfa222669ddad46e263d612a1530c8c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/54a96355ddfa222669ddad46e263d612a1530c8c", "html_url": "https://github.com/rust-lang/rust/commit/54a96355ddfa222669ddad46e263d612a1530c8c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/54a96355ddfa222669ddad46e263d612a1530c8c/comments", "author": {"login": "marcusklaas", "id": 1255413, "node_id": "MDQ6VXNlcjEyNTU0MTM=", "avatar_url": "https://avatars.githubusercontent.com/u/1255413?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marcusklaas", "html_url": "https://github.com/marcusklaas", "followers_url": "https://api.github.com/users/marcusklaas/followers", "following_url": "https://api.github.com/users/marcusklaas/following{/other_user}", "gists_url": "https://api.github.com/users/marcusklaas/gists{/gist_id}", "starred_url": "https://api.github.com/users/marcusklaas/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marcusklaas/subscriptions", "organizations_url": "https://api.github.com/users/marcusklaas/orgs", "repos_url": "https://api.github.com/users/marcusklaas/repos", "events_url": "https://api.github.com/users/marcusklaas/events{/privacy}", "received_events_url": "https://api.github.com/users/marcusklaas/received_events", "type": "User", "site_admin": false}, "committer": {"login": "marcusklaas", "id": 1255413, "node_id": "MDQ6VXNlcjEyNTU0MTM=", "avatar_url": "https://avatars.githubusercontent.com/u/1255413?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marcusklaas", "html_url": "https://github.com/marcusklaas", "followers_url": "https://api.github.com/users/marcusklaas/followers", "following_url": "https://api.github.com/users/marcusklaas/following{/other_user}", "gists_url": "https://api.github.com/users/marcusklaas/gists{/gist_id}", "starred_url": "https://api.github.com/users/marcusklaas/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marcusklaas/subscriptions", "organizations_url": "https://api.github.com/users/marcusklaas/orgs", "repos_url": "https://api.github.com/users/marcusklaas/repos", "events_url": "https://api.github.com/users/marcusklaas/events{/privacy}", "received_events_url": "https://api.github.com/users/marcusklaas/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ed889e01dba7dadcf9002f815b0d4d3c1195fcdd", "url": "https://api.github.com/repos/rust-lang/rust/commits/ed889e01dba7dadcf9002f815b0d4d3c1195fcdd", "html_url": "https://github.com/rust-lang/rust/commit/ed889e01dba7dadcf9002f815b0d4d3c1195fcdd"}], "stats": {"total": 24, "additions": 10, "deletions": 14}, "files": [{"sha": "930f19af453b785cf5270701e313fbb4ada4fb74", "filename": "src/expr.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/54a96355ddfa222669ddad46e263d612a1530c8c/src%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/54a96355ddfa222669ddad46e263d612a1530c8c/src%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fexpr.rs?ref=54a96355ddfa222669ddad46e263d612a1530c8c", "patch": "@@ -18,7 +18,6 @@ use config::BlockIndentStyle;\n \n use syntax::{ast, ptr};\n use syntax::codemap::{Pos, Span, BytePos, mk_sp};\n-use syntax::parse::token;\n use syntax::print::pprust;\n use syntax::visit::Visitor;\n \n@@ -539,7 +538,7 @@ fn rewrite_field(context: &RewriteContext,\n                  width: usize,\n                  offset: usize)\n                  -> Option<String> {\n-    let name = &token::get_ident(field.ident.node);\n+    let name = &field.ident.node.to_string();\n     let overhead = name.len() + 2;\n     let expr = field.expr.rewrite(context, width - overhead, offset + overhead);\n     expr.map(|s| format!(\"{}: {}\", name, s))"}, {"sha": "958dfadff6682c2ff449c31e4b0041bdc4abe140", "filename": "src/imports.rs", "status": "modified", "additions": 3, "deletions": 5, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/54a96355ddfa222669ddad46e263d612a1530c8c/src%2Fimports.rs", "raw_url": "https://github.com/rust-lang/rust/raw/54a96355ddfa222669ddad46e263d612a1530c8c/src%2Fimports.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fimports.rs?ref=54a96355ddfa222669ddad46e263d612a1530c8c", "patch": "@@ -14,7 +14,6 @@ use rewrite::{Rewrite, RewriteContext};\n use config::Config;\n \n use syntax::ast;\n-use syntax::parse::token;\n use syntax::print::pprust;\n use syntax::codemap::{CodeMap, Span};\n \n@@ -52,11 +51,10 @@ impl Rewrite for ast::ViewPath {\n \n fn rewrite_single_use_list(path_str: String, vpi: ast::PathListItem) -> String {\n     if let ast::PathListItem_::PathListIdent{ name, .. } = vpi.node {\n-        let name_str = token::get_ident(name).to_string();\n         if path_str.len() == 0 {\n-            name_str\n+            name.to_string()\n         } else {\n-            format!(\"{}::{}\", path_str, name_str)\n+            format!(\"{}::{}\", path_str, name)\n         }\n     } else {\n         if path_str.len() != 0 {\n@@ -121,7 +119,7 @@ pub fn rewrite_use_list(width: usize,\n                                  |vpi| vpi.span.hi,\n                                  |vpi| match vpi.node {\n                                      ast::PathListItem_::PathListIdent{ name, .. } => {\n-                                         token::get_ident(name).to_string()\n+                                         name.to_string()\n                                      }\n                                      ast::PathListItem_::PathListMod{ .. } => {\n                                          \"self\".to_owned()"}, {"sha": "eb727a20a566c04e3425234abeefbcfd0fe7bb04", "filename": "src/items.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/54a96355ddfa222669ddad46e263d612a1530c8c/src%2Fitems.rs", "raw_url": "https://github.com/rust-lang/rust/raw/54a96355ddfa222669ddad46e263d612a1530c8c/src%2Fitems.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fitems.rs?ref=54a96355ddfa222669ddad46e263d612a1530c8c", "patch": "@@ -124,7 +124,7 @@ impl<'a> FmtVisitor<'a> {\n \n         // fn foo\n         result.push_str(\"fn \");\n-        result.push_str(&token::get_ident(ident));\n+        result.push_str(&ident.to_string());\n \n         // Generics.\n         let generics_indent = indent + result.len();\n@@ -626,7 +626,7 @@ impl<'a> FmtVisitor<'a> {\n     }\n \n     fn format_header(&self, item_name: &str, ident: ast::Ident, vis: ast::Visibility) -> String {\n-        format!(\"{}{}{}\", format_visibility(vis), item_name, &token::get_ident(ident))\n+        format!(\"{}{}{}\", format_visibility(vis), item_name, ident)\n     }\n \n     fn format_generics(&self,\n@@ -658,7 +658,7 @@ impl<'a> FmtVisitor<'a> {\n         }\n \n         let name = match field.node.kind {\n-            ast::StructFieldKind::NamedField(ident, _) => Some(token::get_ident(ident)),\n+            ast::StructFieldKind::NamedField(ident, _) => Some(ident.to_string()),\n             ast::StructFieldKind::UnnamedField(_) => None,\n         };\n         let vis = match field.node.kind {"}, {"sha": "c2e27c3168493af8dceb6c86ab5d92b6f0f8e2df", "filename": "src/types.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/54a96355ddfa222669ddad46e263d612a1530c8c/src%2Ftypes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/54a96355ddfa222669ddad46e263d612a1530c8c/src%2Ftypes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftypes.rs?ref=54a96355ddfa222669ddad46e263d612a1530c8c", "patch": "@@ -11,7 +11,6 @@\n use visitor::FmtVisitor;\n \n use syntax::ast;\n-use syntax::parse::token;\n use syntax::print::pprust;\n \n impl<'a> FmtVisitor<'a> {\n@@ -79,7 +78,7 @@ impl<'a> FmtVisitor<'a> {\n \n     pub fn rewrite_ty_param(&self, ty_param: &ast::TyParam) -> String {\n         let mut result = String::with_capacity(128);\n-        result.push_str(&token::get_ident(ty_param.ident));\n+        result.push_str(&ty_param.ident.to_string());\n         if ty_param.bounds.len() > 0 {\n             result.push_str(\": \");\n             result.push_str(&ty_param.bounds.iter().map(|b| self.rewrite_ty_bound(b))"}, {"sha": "0f41b94ac4be1b0855c3e4b93d120539296ee2a7", "filename": "src/visitor.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/54a96355ddfa222669ddad46e263d612a1530c8c/src%2Fvisitor.rs", "raw_url": "https://github.com/rust-lang/rust/raw/54a96355ddfa222669ddad46e263d612a1530c8c/src%2Fvisitor.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvisitor.rs?ref=54a96355ddfa222669ddad46e263d612a1530c8c", "patch": "@@ -11,7 +11,7 @@\n use syntax::ast;\n use syntax::codemap::{self, CodeMap, Span, BytePos};\n use syntax::visit;\n-use syntax::parse::{token, parser};\n+use syntax::parse::parser;\n use std::path::PathBuf;\n \n use utils;\n@@ -365,7 +365,7 @@ impl<'a> FmtVisitor<'a> {\n \n         match parser::Parser::default_submod_path(id, &dir_path, &self.codemap).result {\n             Ok(parser::ModulePathSuccess { path, .. }) => path,\n-            _ => panic!(\"Couldn't find module {}\", token::get_ident(id))\n+            _ => panic!(\"Couldn't find module {}\", id)\n         }\n     }\n "}]}