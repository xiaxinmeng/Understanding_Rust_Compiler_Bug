{"sha": "e9f5a099dfcb42c7f2bb38974b57bbde7042ee9c", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU5ZjVhMDk5ZGZjYjQyYzdmMmJiMzg5NzRiNTdiYmRlNzA0MmVlOWM=", "commit": {"author": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2012-09-07T23:58:27Z"}, "committer": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2012-09-07T23:58:36Z"}, "message": "Add an ignore! macro, remove support for nested block comments, re: #2755.", "tree": {"sha": "ee7269e1d1b3e9d79d8515e297768e72e0be1c59", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ee7269e1d1b3e9d79d8515e297768e72e0be1c59"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e9f5a099dfcb42c7f2bb38974b57bbde7042ee9c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e9f5a099dfcb42c7f2bb38974b57bbde7042ee9c", "html_url": "https://github.com/rust-lang/rust/commit/e9f5a099dfcb42c7f2bb38974b57bbde7042ee9c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e9f5a099dfcb42c7f2bb38974b57bbde7042ee9c/comments", "author": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "committer": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "249668f22396bde43523207117b3869e63b49c4f", "url": "https://api.github.com/repos/rust-lang/rust/commits/249668f22396bde43523207117b3869e63b49c4f", "html_url": "https://github.com/rust-lang/rust/commit/249668f22396bde43523207117b3869e63b49c4f"}], "stats": {"total": 54, "additions": 26, "deletions": 28}, "files": [{"sha": "153fa69d4b86f090104821e797b9ee4f9ef4ce5b", "filename": "src/libcore/dvec.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e9f5a099dfcb42c7f2bb38974b57bbde7042ee9c/src%2Flibcore%2Fdvec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e9f5a099dfcb42c7f2bb38974b57bbde7042ee9c/src%2Flibcore%2Fdvec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fdvec.rs?ref=e9f5a099dfcb42c7f2bb38974b57bbde7042ee9c", "patch": "@@ -235,13 +235,13 @@ impl<A: copy> DVec<A> {\n         }\n     }\n \n-    /*\n     /**\n      * Append all elements of an iterable.\n      *\n      * Failure will occur if the iterable's `each()` method\n      * attempts to access this vector.\n      */\n+    /*\n     fn append_iter<A, I:iter::base_iter<A>>(ts: I) {\n         do self.swap |v| {\n            let mut v = match ts.size_hint() {"}, {"sha": "4558d0a18723d72b22e51e40eb6a48365af53aad", "filename": "src/libsyntax/ext/expand.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/e9f5a099dfcb42c7f2bb38974b57bbde7042ee9c/src%2Flibsyntax%2Fext%2Fexpand.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e9f5a099dfcb42c7f2bb38974b57bbde7042ee9c/src%2Flibsyntax%2Fext%2Fexpand.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fexpand.rs?ref=e9f5a099dfcb42c7f2bb38974b57bbde7042ee9c", "patch": "@@ -243,6 +243,7 @@ fn new_span(cx: ext_ctxt, sp: span) -> span {\n fn core_macros() -> ~str {\n     return\n ~\"{\n+    macro_rules! ignore (($($x:tt)*) => (()))\n     #macro[[#error[f, ...], log(core::error, #fmt[f, ...])]];\n     #macro[[#warn[f, ...], log(core::warn, #fmt[f, ...])]];\n     #macro[[#info[f, ...], log(core::info, #fmt[f, ...])]];"}, {"sha": "e93f3cfe9c68d5918cb2c9f14cd669ac443bbc99", "filename": "src/libsyntax/parse/lexer.rs", "status": "modified", "additions": 7, "deletions": 12, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/e9f5a099dfcb42c7f2bb38974b57bbde7042ee9c/src%2Flibsyntax%2Fparse%2Flexer.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e9f5a099dfcb42c7f2bb38974b57bbde7042ee9c/src%2Flibsyntax%2Fparse%2Flexer.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Flexer.rs?ref=e9f5a099dfcb42c7f2bb38974b57bbde7042ee9c", "patch": "@@ -267,21 +267,16 @@ fn consume_block_comment(rdr: string_reader)\n                 sp: ast_util::mk_sp(start_chpos, rdr.chpos)\n             });\n         }\n-    }\n-\n-    let mut level: int = 1;\n-    while level > 0 {\n-        if is_eof(rdr) { rdr.fatal(~\"unterminated block comment\"); }\n-        if rdr.curr == '/' && nextch(rdr) == '*' {\n-            bump(rdr);\n-            bump(rdr);\n-            level += 1;\n-        } else {\n+    } else {\n+        loop {\n+            if is_eof(rdr) { rdr.fatal(~\"unterminated block comment\"); }\n             if rdr.curr == '*' && nextch(rdr) == '/' {\n                 bump(rdr);\n                 bump(rdr);\n-                level -= 1;\n-            } else { bump(rdr); }\n+                break;\n+            } else {\n+                bump(rdr);\n+            }\n         }\n     }\n     // restart whitespace munch."}, {"sha": "5361fce749d50f6a868c8809a02ac480285a2a49", "filename": "src/test/compile-fail/no-comment-balancing.rs", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/e9f5a099dfcb42c7f2bb38974b57bbde7042ee9c/src%2Ftest%2Fcompile-fail%2Fno-comment-balancing.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e9f5a099dfcb42c7f2bb38974b57bbde7042ee9c/src%2Ftest%2Fcompile-fail%2Fno-comment-balancing.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fno-comment-balancing.rs?ref=e9f5a099dfcb42c7f2bb38974b57bbde7042ee9c", "patch": "@@ -0,0 +1,16 @@\n+// error-pattern:\n+\n+/* This is a test to ensure that we do _not_ support nested/balanced comments. I know you might be\n+   thinking \"but nested comments are cool\", and that would be a valid point, but they are also a\n+   thing that would make our lexical syntax non-regular, and we do not want that to be true.\n+\n+   omitting-things at a higher level (tokens) should be done via token-trees / macros,\n+   not comments.\n+\n+   /*\n+     fail here\n+   */\n+*/\n+\n+fn main() {\n+}"}, {"sha": "d1b7a7721f23e50d69ec0bc59a4da1646bd7c65a", "filename": "src/test/compile-fail/unbalanced-comment.rs", "status": "removed", "additions": 0, "deletions": 11, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/249668f22396bde43523207117b3869e63b49c4f/src%2Ftest%2Fcompile-fail%2Funbalanced-comment.rs", "raw_url": "https://github.com/rust-lang/rust/raw/249668f22396bde43523207117b3869e63b49c4f/src%2Ftest%2Fcompile-fail%2Funbalanced-comment.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Funbalanced-comment.rs?ref=249668f22396bde43523207117b3869e63b49c4f", "patch": "@@ -1,11 +0,0 @@\n-// -*- rust -*-\n-\n-// error-pattern: unterminated block comment\n-\n-/*\n- * This is an un-balanced /* multi-line comment.\n- */\n-\n-fn main() {\n-  debug!(\"hello, world.\");\n-}"}, {"sha": "3ecb37233ceb6e8e4421501b5f8927d4be97a484", "filename": "src/test/run-pass/multiline-comment.rs", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/e9f5a099dfcb42c7f2bb38974b57bbde7042ee9c/src%2Ftest%2Frun-pass%2Fmultiline-comment.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e9f5a099dfcb42c7f2bb38974b57bbde7042ee9c/src%2Ftest%2Frun-pass%2Fmultiline-comment.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fmultiline-comment.rs?ref=e9f5a099dfcb42c7f2bb38974b57bbde7042ee9c", "patch": "@@ -1,9 +1,6 @@\n-\n-\n-\n // -*- rust -*-\n \n /*\n- * This is a /* depth-balanced */ multi-line comment.\n+ * This is a multi-line comment.\n  */\n fn main() { }"}]}