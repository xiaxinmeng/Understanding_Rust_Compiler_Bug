{"sha": "2155c0350081ae159e37aa25cfd829da950bb282", "node_id": "C_kwDOAAsO6NoAKDIxNTVjMDM1MDA4MWFlMTU5ZTM3YWEyNWNmZDgyOWRhOTUwYmIyODI", "commit": {"author": {"name": "bjorn3", "email": "17426603+bjorn3@users.noreply.github.com", "date": "2023-02-10T10:03:42Z"}, "committer": {"name": "bjorn3", "email": "17426603+bjorn3@users.noreply.github.com", "date": "2023-05-22T17:10:55Z"}, "message": "Inline Compiler::bootstrap_with_triple", "tree": {"sha": "93c4bf33d01d3acdd2272e0442072806a7e19629", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/93c4bf33d01d3acdd2272e0442072806a7e19629"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2155c0350081ae159e37aa25cfd829da950bb282", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2155c0350081ae159e37aa25cfd829da950bb282", "html_url": "https://github.com/rust-lang/rust/commit/2155c0350081ae159e37aa25cfd829da950bb282", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2155c0350081ae159e37aa25cfd829da950bb282/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "de8a4d5d46f6f270ea35192a03d701230d0552e8", "url": "https://api.github.com/repos/rust-lang/rust/commits/de8a4d5d46f6f270ea35192a03d701230d0552e8", "html_url": "https://github.com/rust-lang/rust/commit/de8a4d5d46f6f270ea35192a03d701230d0552e8"}], "stats": {"total": 35, "additions": 17, "deletions": 18}, "files": [{"sha": "80a777fc00e0ee248e007e00d90a69bf24c7bf0b", "filename": "build_system/mod.rs", "status": "modified", "additions": 17, "deletions": 5, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/2155c0350081ae159e37aa25cfd829da950bb282/build_system%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2155c0350081ae159e37aa25cfd829da950bb282/build_system%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/build_system%2Fmod.rs?ref=2155c0350081ae159e37aa25cfd829da950bb282", "patch": "@@ -1,5 +1,5 @@\n use std::env;\n-use std::path::{Path, PathBuf};\n+use std::path::PathBuf;\n use std::process;\n \n use self::utils::{is_ci, is_ci_opt, Compiler};\n@@ -101,12 +101,24 @@ pub(crate) fn main() {\n         }\n     }\n \n-    let bootstrap_host_compiler = Compiler::bootstrap_with_triple(\n-        std::env::var(\"HOST_TRIPLE\")\n+    let bootstrap_host_compiler = {\n+        let cargo = rustc_info::get_cargo_path();\n+        let rustc = rustc_info::get_rustc_path();\n+        let rustdoc = rustc_info::get_rustdoc_path();\n+        let triple = std::env::var(\"HOST_TRIPLE\")\n             .ok()\n             .or_else(|| config::get_value(\"host\"))\n-            .unwrap_or_else(|| rustc_info::get_host_triple(Path::new(\"rustc\"))),\n-    );\n+            .unwrap_or_else(|| rustc_info::get_host_triple(&rustc));\n+        Compiler {\n+            cargo,\n+            rustc,\n+            rustdoc,\n+            rustflags: String::new(),\n+            rustdocflags: String::new(),\n+            triple,\n+            runner: vec![],\n+        }\n+    };\n     let target_triple = std::env::var(\"TARGET_TRIPLE\")\n         .ok()\n         .or_else(|| config::get_value(\"target\"))"}, {"sha": "6c0ecd8b02aae9f9cbbc46b3a16eb4213a357321", "filename": "build_system/utils.rs", "status": "modified", "additions": 0, "deletions": 13, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/2155c0350081ae159e37aa25cfd829da950bb282/build_system%2Futils.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2155c0350081ae159e37aa25cfd829da950bb282/build_system%2Futils.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/build_system%2Futils.rs?ref=2155c0350081ae159e37aa25cfd829da950bb282", "patch": "@@ -5,7 +5,6 @@ use std::path::{Path, PathBuf};\n use std::process::{self, Command, Stdio};\n \n use super::path::{Dirs, RelPath};\n-use super::rustc_info::{get_cargo_path, get_rustc_path, get_rustdoc_path};\n \n #[derive(Clone, Debug)]\n pub(crate) struct Compiler {\n@@ -19,18 +18,6 @@ pub(crate) struct Compiler {\n }\n \n impl Compiler {\n-    pub(crate) fn bootstrap_with_triple(triple: String) -> Compiler {\n-        Compiler {\n-            cargo: get_cargo_path(),\n-            rustc: get_rustc_path(),\n-            rustdoc: get_rustdoc_path(),\n-            rustflags: String::new(),\n-            rustdocflags: String::new(),\n-            triple,\n-            runner: vec![],\n-        }\n-    }\n-\n     pub(crate) fn set_cross_linker_and_runner(&mut self) {\n         match self.triple.as_str() {\n             \"aarch64-unknown-linux-gnu\" => {"}]}