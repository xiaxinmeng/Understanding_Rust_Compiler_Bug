{"sha": "77a3373d53e3b0d1b87135b21307f19922398af9", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc3YTMzNzNkNTNlM2IwZDFiODcxMzViMjEzMDdmMTk5MjIzOThhZjk=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2011-03-25T17:42:57Z"}, "committer": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2011-03-25T17:44:24Z"}, "message": "rustc: Create a crate metadata cache", "tree": {"sha": "7ab7d8f75daab48a2d94c042aa6f4ad6a0e73297", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7ab7d8f75daab48a2d94c042aa6f4ad6a0e73297"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/77a3373d53e3b0d1b87135b21307f19922398af9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/77a3373d53e3b0d1b87135b21307f19922398af9", "html_url": "https://github.com/rust-lang/rust/commit/77a3373d53e3b0d1b87135b21307f19922398af9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/77a3373d53e3b0d1b87135b21307f19922398af9/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "10f336055cb13518690f8d280240d30e3f13e508", "url": "https://api.github.com/repos/rust-lang/rust/commits/10f336055cb13518690f8d280240d30e3f13e508", "html_url": "https://github.com/rust-lang/rust/commit/10f336055cb13518690f8d280240d30e3f13e508"}], "stats": {"total": 32, "additions": 25, "deletions": 7}, "files": [{"sha": "b91d09141d0f8eeb072c468cbc8388212225cd3d", "filename": "src/comp/driver/rustc.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/77a3373d53e3b0d1b87135b21307f19922398af9/src%2Fcomp%2Fdriver%2Frustc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/77a3373d53e3b0d1b87135b21307f19922398af9/src%2Fcomp%2Fdriver%2Frustc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fdriver%2Frustc.rs?ref=77a3373d53e3b0d1b87135b21307f19922398af9", "patch": "@@ -9,6 +9,7 @@ import middle.resolve;\n import middle.typeck;\n import util.common;\n \n+import std.map.mk_hashmap;\n import std.option;\n import std.option.some;\n import std.option.none;\n@@ -112,7 +113,9 @@ impure fn main(vec[str] args) {\n                           uint_type = common.ty_u32,\n                           float_type = common.ty_f64 );\n \n-    auto sess = session.session(target_cfg);\n+    auto crate_cache = common.new_int_hash[session.crate_metadata]();\n+\n+    auto sess = session.session(target_cfg, crate_cache);\n     let option.t[str] input_file = none[str];\n     let option.t[str] output_file = none[str];\n     let vec[str] library_search_paths = vec();"}, {"sha": "7ad83dc198e515b7dc230b23caf225dd95cc4d5c", "filename": "src/comp/driver/session.rs", "status": "modified", "additions": 12, "deletions": 1, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/77a3373d53e3b0d1b87135b21307f19922398af9/src%2Fcomp%2Fdriver%2Fsession.rs", "raw_url": "https://github.com/rust-lang/rust/raw/77a3373d53e3b0d1b87135b21307f19922398af9/src%2Fcomp%2Fdriver%2Fsession.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fdriver%2Fsession.rs?ref=77a3373d53e3b0d1b87135b21307f19922398af9", "patch": "@@ -1,6 +1,7 @@\n import util.common.span;\n import util.common.ty_mach;\n import std._uint;\n+import std.map;\n \n tag os {\n     os_win32;\n@@ -20,7 +21,9 @@ type cfg = rec(os os,\n                ty_mach uint_type,\n                ty_mach float_type);\n \n-obj session(cfg targ) {\n+type crate_metadata = vec[u8];\n+\n+obj session(cfg targ, map.hashmap[int, crate_metadata] crates) {\n \n     fn get_targ_cfg() -> cfg {\n         ret targ;\n@@ -66,6 +69,14 @@ obj session(cfg targ) {\n         log #fmt(\"error: unimplemented %s\", msg);\n         fail;\n     }\n+\n+    fn get_external_crate(int num) -> crate_metadata {\n+        ret crates.get(num);\n+    }\n+\n+    fn set_external_crate(int num, &crate_metadata metadata) {\n+        crates.insert(num, metadata);\n+    }\n }\n \n "}, {"sha": "fba9a1fd78ab785a75586d98caaf73c039b49c4c", "filename": "src/comp/middle/ty.rs", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/77a3373d53e3b0d1b87135b21307f19922398af9/src%2Fcomp%2Fmiddle%2Fty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/77a3373d53e3b0d1b87135b21307f19922398af9/src%2Fcomp%2Fmiddle%2Fty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Fty.rs?ref=77a3373d53e3b0d1b87135b21307f19922398af9", "patch": "@@ -1530,11 +1530,7 @@ fn unify(@ty.t expected, @ty.t actual, &unify_handler handler)\n         ret ty.fold_ty(folder(bindings), typ);\n     }\n \n-    fn hash_int(&int x) -> uint { ret x as uint; }\n-    fn eq_int(&int a, &int b) -> bool { ret a == b; }\n-    auto hasher = hash_int;\n-    auto eqer = eq_int;\n-    auto bindings = @map.mk_hashmap[int,@ty.t](hasher, eqer);\n+    auto bindings = @common.new_int_hash[@ty.t]();\n \n     auto ures = unify_step(bindings, expected, actual, handler);\n     alt (ures) {"}, {"sha": "b23d6a1ef1472ed573837fea91fd170102e87b65", "filename": "src/comp/util/common.rs", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/77a3373d53e3b0d1b87135b21307f19922398af9/src%2Fcomp%2Futil%2Fcommon.rs", "raw_url": "https://github.com/rust-lang/rust/raw/77a3373d53e3b0d1b87135b21307f19922398af9/src%2Fcomp%2Futil%2Fcommon.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Futil%2Fcommon.rs?ref=77a3373d53e3b0d1b87135b21307f19922398af9", "patch": "@@ -64,6 +64,14 @@ fn new_def_hash[V]() -> std.map.hashmap[ast.def_id,V] {\n     ret std.map.mk_hashmap[ast.def_id,V](hasher, eqer);\n }\n \n+fn new_int_hash[V]() -> std.map.hashmap[int,V] {\n+    fn hash_int(&int x) -> uint { ret x as uint; }\n+    fn eq_int(&int a, &int b) -> bool { ret a == b; }\n+    auto hasher = hash_int;\n+    auto eqer = eq_int;\n+    ret std.map.mk_hashmap[int,V](hasher, eqer);\n+}\n+\n fn istr(int i) -> str {\n     ret _int.to_str(i, 10u);\n }"}]}