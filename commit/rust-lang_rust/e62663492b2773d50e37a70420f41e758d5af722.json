{"sha": "e62663492b2773d50e37a70420f41e758d5af722", "node_id": "C_kwDOAAsO6NoAKGU2MjY2MzQ5MmIyNzczZDUwZTM3YTcwNDIwZjQxZTc1OGQ1YWY3MjI", "commit": {"author": {"name": "Tomasz Mi\u0105sko", "email": "tomasz.miasko@gmail.com", "date": "2022-05-02T00:00:00Z"}, "committer": {"name": "Tomasz Mi\u0105sko", "email": "tomasz.miasko@gmail.com", "date": "2022-05-03T05:12:43Z"}, "message": "Collect function instance used in `global_asm!` sym operand\n\nThe constants used in SymFn operands have FnDef type,\nso the type of the constant identifies the function.", "tree": {"sha": "2bdd7fb5ab75313df05e368281e9cea1a92a37e8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2bdd7fb5ab75313df05e368281e9cea1a92a37e8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e62663492b2773d50e37a70420f41e758d5af722", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e62663492b2773d50e37a70420f41e758d5af722", "html_url": "https://github.com/rust-lang/rust/commit/e62663492b2773d50e37a70420f41e758d5af722", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e62663492b2773d50e37a70420f41e758d5af722/comments", "author": {"login": "tmiasko", "id": 51362316, "node_id": "MDQ6VXNlcjUxMzYyMzE2", "avatar_url": "https://avatars.githubusercontent.com/u/51362316?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tmiasko", "html_url": "https://github.com/tmiasko", "followers_url": "https://api.github.com/users/tmiasko/followers", "following_url": "https://api.github.com/users/tmiasko/following{/other_user}", "gists_url": "https://api.github.com/users/tmiasko/gists{/gist_id}", "starred_url": "https://api.github.com/users/tmiasko/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tmiasko/subscriptions", "organizations_url": "https://api.github.com/users/tmiasko/orgs", "repos_url": "https://api.github.com/users/tmiasko/repos", "events_url": "https://api.github.com/users/tmiasko/events{/privacy}", "received_events_url": "https://api.github.com/users/tmiasko/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tmiasko", "id": 51362316, "node_id": "MDQ6VXNlcjUxMzYyMzE2", "avatar_url": "https://avatars.githubusercontent.com/u/51362316?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tmiasko", "html_url": "https://github.com/tmiasko", "followers_url": "https://api.github.com/users/tmiasko/followers", "following_url": "https://api.github.com/users/tmiasko/following{/other_user}", "gists_url": "https://api.github.com/users/tmiasko/gists{/gist_id}", "starred_url": "https://api.github.com/users/tmiasko/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tmiasko/subscriptions", "organizations_url": "https://api.github.com/users/tmiasko/orgs", "repos_url": "https://api.github.com/users/tmiasko/repos", "events_url": "https://api.github.com/users/tmiasko/events{/privacy}", "received_events_url": "https://api.github.com/users/tmiasko/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "24c898504379252fafedc218074af49126da41ec", "url": "https://api.github.com/repos/rust-lang/rust/commits/24c898504379252fafedc218074af49126da41ec", "html_url": "https://github.com/rust-lang/rust/commit/24c898504379252fafedc218074af49126da41ec"}], "stats": {"total": 14, "additions": 8, "deletions": 6}, "files": [{"sha": "18f32b04fadca5aee2e066896992cefbd1986066", "filename": "compiler/rustc_monomorphize/src/collector.rs", "status": "modified", "additions": 3, "deletions": 6, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/e62663492b2773d50e37a70420f41e758d5af722/compiler%2Frustc_monomorphize%2Fsrc%2Fcollector.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e62663492b2773d50e37a70420f41e758d5af722/compiler%2Frustc_monomorphize%2Fsrc%2Fcollector.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_monomorphize%2Fsrc%2Fcollector.rs?ref=e62663492b2773d50e37a70420f41e758d5af722", "patch": "@@ -445,12 +445,9 @@ fn collect_items_rec<'tcx>(\n                             // depend on any other items.\n                         }\n                         hir::InlineAsmOperand::SymFn { anon_const } => {\n-                            let def_id = tcx.hir().body_owner_def_id(anon_const.body).to_def_id();\n-                            if let Ok(val) = tcx.const_eval_poly(def_id) {\n-                                rustc_data_structures::stack::ensure_sufficient_stack(|| {\n-                                    collect_const_value(tcx, val, &mut neighbors);\n-                                });\n-                            }\n+                            let fn_ty =\n+                                tcx.typeck_body(anon_const.body).node_type(anon_const.hir_id);\n+                            visit_fn_use(tcx, fn_ty, false, *op_sp, &mut neighbors);\n                         }\n                         hir::InlineAsmOperand::SymStatic { path: _, def_id } => {\n                             let instance = Instance::mono(tcx, *def_id);"}, {"sha": "4cf73b40faf0b070f4ac9b79e8bd051dc2990341", "filename": "src/test/assembly/asm/global_asm.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/e62663492b2773d50e37a70420f41e758d5af722/src%2Ftest%2Fassembly%2Fasm%2Fglobal_asm.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e62663492b2773d50e37a70420f41e758d5af722/src%2Ftest%2Fassembly%2Fasm%2Fglobal_asm.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fassembly%2Fasm%2Fglobal_asm.rs?ref=e62663492b2773d50e37a70420f41e758d5af722", "patch": "@@ -2,6 +2,7 @@\n // only-linux\n // assembly-output: emit-asm\n // compile-flags: -C llvm-args=--x86-asm-syntax=intel\n+// compile-flags: -C symbol-mangling-version=v0\n \n #![feature(asm_const, asm_sym)]\n #![crate_type = \"rlib\"]\n@@ -24,3 +25,7 @@ global_asm!(\"movl ${}, %ecx\", const 5, options(att_syntax));\n global_asm!(\"call {}\", sym my_func);\n // CHECK: lea rax, [rip + MY_STATIC]\n global_asm!(\"lea rax, [rip + {}]\", sym MY_STATIC);\n+// CHECK: call _RNvCsiubXh4Yz005_10global_asm6foobar\n+global_asm!(\"call {}\", sym foobar);\n+// CHECK: _RNvCsiubXh4Yz005_10global_asm6foobar:\n+fn foobar() { loop {} }"}]}