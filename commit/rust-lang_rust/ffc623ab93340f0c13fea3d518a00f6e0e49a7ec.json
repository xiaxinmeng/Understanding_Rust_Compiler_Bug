{"sha": "ffc623ab93340f0c13fea3d518a00f6e0e49a7ec", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZmYzYyM2FiOTMzNDBmMGMxM2ZlYTNkNTE4YTAwZjZlMGU0OWE3ZWM=", "commit": {"author": {"name": "Esteban Kuber", "email": "esteban@kuber.com.ar", "date": "2021-09-14T18:16:33Z"}, "committer": {"name": "Esteban Kuber", "email": "esteban@kuber.com.ar", "date": "2021-09-14T18:16:33Z"}, "message": "review comment: move recovery code to its own function", "tree": {"sha": "95bf9a8ff03613a4a8c479b3d7c5c2b8124d294e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/95bf9a8ff03613a4a8c479b3d7c5c2b8124d294e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ffc623ab93340f0c13fea3d518a00f6e0e49a7ec", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ffc623ab93340f0c13fea3d518a00f6e0e49a7ec", "html_url": "https://github.com/rust-lang/rust/commit/ffc623ab93340f0c13fea3d518a00f6e0e49a7ec", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ffc623ab93340f0c13fea3d518a00f6e0e49a7ec/comments", "author": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "committer": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b82ec362ca14a6c369b1999bdd40150b60567c96", "url": "https://api.github.com/repos/rust-lang/rust/commits/b82ec362ca14a6c369b1999bdd40150b60567c96", "html_url": "https://github.com/rust-lang/rust/commit/b82ec362ca14a6c369b1999bdd40150b60567c96"}], "stats": {"total": 21, "additions": 19, "deletions": 2}, "files": [{"sha": "cfd3fe93d32eb82ab56de32472862f95fc793cfd", "filename": "compiler/rustc_parse/src/parser/expr.rs", "status": "modified", "additions": 19, "deletions": 2, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/ffc623ab93340f0c13fea3d518a00f6e0e49a7ec/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ffc623ab93340f0c13fea3d518a00f6e0e49a7ec/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fexpr.rs?ref=ffc623ab93340f0c13fea3d518a00f6e0e49a7ec", "patch": "@@ -1049,6 +1049,23 @@ impl<'a> Parser<'a> {\n         let mut seq = self.parse_paren_expr_seq().map(|args| {\n             self.mk_expr(lo.to(self.prev_token.span), self.mk_call(fun, args), AttrVec::new())\n         });\n+        if let Some(expr) =\n+            self.maybe_recover_struct_lit_bad_delims(lo, open_paren, &mut seq, snapshot)\n+        {\n+            return expr;\n+        }\n+        self.recover_seq_parse_error(token::Paren, lo, seq)\n+    }\n+\n+    /// If we encounter a parser state that looks like the user has written a `struct` literal with\n+    /// parentheses instead of braces, recover the parser state and provide suggestions.\n+    fn maybe_recover_struct_lit_bad_delims(\n+        &mut self,\n+        lo: Span,\n+        open_paren: Span,\n+        seq: &mut PResult<'a, P<Expr>>,\n+        snapshot: Option<(Self, ExprKind)>,\n+    ) -> Option<P<Expr>> {\n         match (seq.as_mut(), snapshot) {\n             (Err(ref mut err), Some((mut snapshot, ExprKind::Path(None, path)))) => {\n                 let name = pprust::path_to_string(&path);\n@@ -1079,15 +1096,15 @@ impl<'a> Parser<'a> {\n                             Applicability::MaybeIncorrect,\n                         )\n                         .emit();\n-                        return self.mk_expr_err(span);\n+                        return Some(self.mk_expr_err(span));\n                     }\n                     Ok(_) => {}\n                     Err(mut err) => err.emit(),\n                 }\n             }\n             _ => {}\n         }\n-        self.recover_seq_parse_error(token::Paren, lo, seq)\n+        None\n     }\n \n     /// Parse an indexing expression `expr[...]`."}]}