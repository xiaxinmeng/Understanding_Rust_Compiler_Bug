{"sha": "3991ba76ee25785b84d3cb3f345780bd48783529", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM5OTFiYTc2ZWUyNTc4NWI4NGQzY2IzZjM0NTc4MGJkNDg3ODM1Mjk=", "commit": {"author": {"name": "varkor", "email": "github@varkor.com", "date": "2019-02-05T15:53:26Z"}, "committer": {"name": "varkor", "email": "github@varkor.com", "date": "2019-02-07T14:02:17Z"}, "message": "Support const generics in save analysis\n\nCo-Authored-By: Gabriel Smith <yodaldevoid@users.noreply.github.com>", "tree": {"sha": "05e884e1052c9a3df8bb61905ff4f14a9ba18a53", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/05e884e1052c9a3df8bb61905ff4f14a9ba18a53"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3991ba76ee25785b84d3cb3f345780bd48783529", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3991ba76ee25785b84d3cb3f345780bd48783529", "html_url": "https://github.com/rust-lang/rust/commit/3991ba76ee25785b84d3cb3f345780bd48783529", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3991ba76ee25785b84d3cb3f345780bd48783529/comments", "author": {"login": "varkor", "id": 3943692, "node_id": "MDQ6VXNlcjM5NDM2OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3943692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/varkor", "html_url": "https://github.com/varkor", "followers_url": "https://api.github.com/users/varkor/followers", "following_url": "https://api.github.com/users/varkor/following{/other_user}", "gists_url": "https://api.github.com/users/varkor/gists{/gist_id}", "starred_url": "https://api.github.com/users/varkor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/varkor/subscriptions", "organizations_url": "https://api.github.com/users/varkor/orgs", "repos_url": "https://api.github.com/users/varkor/repos", "events_url": "https://api.github.com/users/varkor/events{/privacy}", "received_events_url": "https://api.github.com/users/varkor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "varkor", "id": 3943692, "node_id": "MDQ6VXNlcjM5NDM2OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3943692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/varkor", "html_url": "https://github.com/varkor", "followers_url": "https://api.github.com/users/varkor/followers", "following_url": "https://api.github.com/users/varkor/following{/other_user}", "gists_url": "https://api.github.com/users/varkor/gists{/gist_id}", "starred_url": "https://api.github.com/users/varkor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/varkor/subscriptions", "organizations_url": "https://api.github.com/users/varkor/orgs", "repos_url": "https://api.github.com/users/varkor/repos", "events_url": "https://api.github.com/users/varkor/events{/privacy}", "received_events_url": "https://api.github.com/users/varkor/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "06abaee21ba25b4d5ebaf014928269734ad9ee15", "url": "https://api.github.com/repos/rust-lang/rust/commits/06abaee21ba25b4d5ebaf014928269734ad9ee15", "html_url": "https://github.com/rust-lang/rust/commit/06abaee21ba25b4d5ebaf014928269734ad9ee15"}], "stats": {"total": 14, "additions": 11, "deletions": 3}, "files": [{"sha": "91e9c7745d2805ce89106df96b08787dc8851cbe", "filename": "src/librustc_save_analysis/dump_visitor.rs", "status": "modified", "additions": 11, "deletions": 3, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/3991ba76ee25785b84d3cb3f345780bd48783529/src%2Flibrustc_save_analysis%2Fdump_visitor.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3991ba76ee25785b84d3cb3f345780bd48783529/src%2Flibrustc_save_analysis%2Fdump_visitor.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_save_analysis%2Fdump_visitor.rs?ref=3991ba76ee25785b84d3cb3f345780bd48783529", "patch": "@@ -364,6 +364,7 @@ impl<'l, 'tcx: 'l, 'll, O: DumpOutput + 'll> DumpVisitor<'l, 'tcx, 'll, O> {\n                         );\n                     }\n                 }\n+                ast::GenericParamKind::Const { .. } => {}\n             }\n         }\n         self.visit_generics(generics);\n@@ -1447,9 +1448,16 @@ impl<'l, 'tcx: 'l, 'll, O: DumpOutput + 'll> Visitor<'l> for DumpVisitor<'l, 'tc\n \n     fn visit_generics(&mut self, generics: &'l ast::Generics) {\n         for param in &generics.params {\n-            if let ast::GenericParamKind::Type { ref default, .. } = param.kind {\n-                self.process_bounds(&param.bounds);\n-                if let Some(ref ty) = default {\n+            match param.kind {\n+                ast::GenericParamKind::Lifetime { .. } => {}\n+                ast::GenericParamKind::Type { ref default, .. } => {\n+                    self.process_bounds(&param.bounds);\n+                    if let Some(ref ty) = default {\n+                        self.visit_ty(&ty);\n+                    }\n+                }\n+                ast::GenericParamKind::Const { ref ty } => {\n+                    self.process_bounds(&param.bounds);\n                     self.visit_ty(&ty);\n                 }\n             }"}]}