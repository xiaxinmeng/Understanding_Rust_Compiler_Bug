{"sha": "03f565cdbfbdda55798f2c6e1fd0a96ac1c35c76", "node_id": "MDY6Q29tbWl0NzI0NzEyOjAzZjU2NWNkYmZiZGRhNTU3OThmMmM2ZTFmZDBhOTZhYzFjMzVjNzY=", "commit": {"author": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2020-07-14T14:38:50Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-07-14T14:38:50Z"}, "message": "Rollup merge of #71237 - Cldfire:rustdoc-ayu-theme, r=GuilliaumeGomez\n\nAdd Ayu theme to rustdoc\n\nThis is a port of a theme I maintain (https://github.com/Cldfire/ayu-rs) to the native rustdoc theme system. [Ayu](https://github.com/dempfi/ayu) (dark) is a richly-colored dark theme that many people enjoy using across a wide variety of environments.\n\nCorresponds to the Ayu theme in [mdBook](https://github.com/rust-lang/mdBook).\n\nSome screenshots:\n\n![image](https://user-images.githubusercontent.com/13814214/79547087-6c935780-8061-11ea-8a33-38e9472e9fec.png)\n\n![image](https://user-images.githubusercontent.com/13814214/79547150-8339ae80-8061-11ea-97be-9e13a8b275d7.png)\n\n![image](https://user-images.githubusercontent.com/13814214/79547221-98164200-8061-11ea-9649-9b11ccbb33e3.png)\n\n![image](https://user-images.githubusercontent.com/13814214/79547310-b419e380-8061-11ea-9965-d4f90b2280ab.png)\n\n![image](https://user-images.githubusercontent.com/13814214/79547443-e7f50900-8061-11ea-8872-06d74010691e.png)\n\nNote that this pull request also makes some small code changes to allow for disabling theme stylesheets, preventing the rules from all the different themes from conflicting with one another. The only stylesheet that is not disabled is `light.css`; the theming system (quite hackily) switches themes by changing the href on this stylesheet and so permanently disabling all the others works perfectly fine.", "tree": {"sha": "45190a38a915e9bea4927c36a132219db40b67c9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/45190a38a915e9bea4927c36a132219db40b67c9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/03f565cdbfbdda55798f2c6e1fd0a96ac1c35c76", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJfDcN7CRBK7hj4Ov3rIwAAdHIIABA844ib/0jelwrYZt06ecy/\n9cbabHrUPacz0jnGW6c5Zo2W2gRZM1AzU03X/y20nBrBhaKtSwPwL3HRwbFuPM5n\nMz1Q2X5kjzsBNYdzUhqFXTEMo0zjYE3Tn/XEopnhj4vejuO7Yf6AQcM10WVMODCo\nFztTS1mOHGD/DJSXnn+8V9kBSW88g33MxWMEovjvQKqGzYVqBELnJrCGccLJpSVJ\nEQwbeb5TdayDF432QBQIvt2zwOaSJ74ECM1P/QTwjcOV0fkgnDqYBzz6rn3cxWH4\nL9xNaqwcw/MJdAh7WbY5N4PkicO6URli/kDs2CVIxE3JsYZPZLyzSII6L2og6Y0=\n=AYpY\n-----END PGP SIGNATURE-----\n", "payload": "tree 45190a38a915e9bea4927c36a132219db40b67c9\nparent c724b67e1b474262917a5154d74e7072267593fe\nparent 8c45cf8e60960698262363cf15aa650437f49a56\nauthor Manish Goregaokar <manishsmail@gmail.com> 1594737530 -0700\ncommitter GitHub <noreply@github.com> 1594737530 -0700\n\nRollup merge of #71237 - Cldfire:rustdoc-ayu-theme, r=GuilliaumeGomez\n\nAdd Ayu theme to rustdoc\n\nThis is a port of a theme I maintain (https://github.com/Cldfire/ayu-rs) to the native rustdoc theme system. [Ayu](https://github.com/dempfi/ayu) (dark) is a richly-colored dark theme that many people enjoy using across a wide variety of environments.\n\nCorresponds to the Ayu theme in [mdBook](https://github.com/rust-lang/mdBook).\n\nSome screenshots:\n\n![image](https://user-images.githubusercontent.com/13814214/79547087-6c935780-8061-11ea-8a33-38e9472e9fec.png)\n\n![image](https://user-images.githubusercontent.com/13814214/79547150-8339ae80-8061-11ea-97be-9e13a8b275d7.png)\n\n![image](https://user-images.githubusercontent.com/13814214/79547221-98164200-8061-11ea-9649-9b11ccbb33e3.png)\n\n![image](https://user-images.githubusercontent.com/13814214/79547310-b419e380-8061-11ea-9965-d4f90b2280ab.png)\n\n![image](https://user-images.githubusercontent.com/13814214/79547443-e7f50900-8061-11ea-8872-06d74010691e.png)\n\nNote that this pull request also makes some small code changes to allow for disabling theme stylesheets, preventing the rules from all the different themes from conflicting with one another. The only stylesheet that is not disabled is `light.css`; the theming system (quite hackily) switches themes by changing the href on this stylesheet and so permanently disabling all the others works perfectly fine.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/03f565cdbfbdda55798f2c6e1fd0a96ac1c35c76", "html_url": "https://github.com/rust-lang/rust/commit/03f565cdbfbdda55798f2c6e1fd0a96ac1c35c76", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/03f565cdbfbdda55798f2c6e1fd0a96ac1c35c76/comments", "author": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c724b67e1b474262917a5154d74e7072267593fe", "url": "https://api.github.com/repos/rust-lang/rust/commits/c724b67e1b474262917a5154d74e7072267593fe", "html_url": "https://github.com/rust-lang/rust/commit/c724b67e1b474262917a5154d74e7072267593fe"}, {"sha": "8c45cf8e60960698262363cf15aa650437f49a56", "url": "https://api.github.com/repos/rust-lang/rust/commits/8c45cf8e60960698262363cf15aa650437f49a56", "html_url": "https://github.com/rust-lang/rust/commit/8c45cf8e60960698262363cf15aa650437f49a56"}], "stats": {"total": 690, "additions": 647, "deletions": 43}, "files": [{"sha": "39e33da44964e00ebe77497a411172b2a30a4afc", "filename": "src/librustdoc/config.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/03f565cdbfbdda55798f2c6e1fd0a96ac1c35c76/src%2Flibrustdoc%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/03f565cdbfbdda55798f2c6e1fd0a96ac1c35c76/src%2Flibrustdoc%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fconfig.rs?ref=03f565cdbfbdda55798f2c6e1fd0a96ac1c35c76", "patch": "@@ -20,6 +20,7 @@ use crate::core::new_handler;\n use crate::externalfiles::ExternalHtml;\n use crate::html;\n use crate::html::markdown::IdMap;\n+use crate::html::render::StylePath;\n use crate::html::static_files;\n use crate::opts;\n use crate::passes::{self, Condition, DefaultPassOption};\n@@ -207,7 +208,7 @@ pub struct RenderOptions {\n     pub sort_modules_alphabetically: bool,\n     /// List of themes to extend the docs with. Original argument name is included to assist in\n     /// displaying errors if it fails a theme check.\n-    pub themes: Vec<PathBuf>,\n+    pub themes: Vec<StylePath>,\n     /// If present, CSS file that contains rules to add to the default CSS.\n     pub extension_css: Option<PathBuf>,\n     /// A map of crate names to the URL to use instead of querying the crate's `html_root_url`.\n@@ -410,7 +411,7 @@ impl Options {\n                     ))\n                     .emit();\n                 }\n-                themes.push(theme_file);\n+                themes.push(StylePath { path: theme_file, disabled: true });\n             }\n         }\n "}, {"sha": "cc6b38ebcdb7fb26b929b7485724add16d254f3c", "filename": "src/librustdoc/html/layout.rs", "status": "modified", "additions": 14, "deletions": 11, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/03f565cdbfbdda55798f2c6e1fd0a96ac1c35c76/src%2Flibrustdoc%2Fhtml%2Flayout.rs", "raw_url": "https://github.com/rust-lang/rust/raw/03f565cdbfbdda55798f2c6e1fd0a96ac1c35c76/src%2Flibrustdoc%2Fhtml%2Flayout.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Flayout.rs?ref=03f565cdbfbdda55798f2c6e1fd0a96ac1c35c76", "patch": "@@ -3,7 +3,7 @@ use std::path::PathBuf;\n use crate::externalfiles::ExternalHtml;\n use crate::html::escape::Escape;\n use crate::html::format::{Buffer, Print};\n-use crate::html::render::ensure_trailing_slash;\n+use crate::html::render::{ensure_trailing_slash, StylePath};\n \n #[derive(Clone)]\n pub struct Layout {\n@@ -36,7 +36,7 @@ pub fn render<T: Print, S: Print>(\n     page: &Page<'_>,\n     sidebar: S,\n     t: T,\n-    themes: &[PathBuf],\n+    style_files: &[StylePath],\n ) -> String {\n     let static_root_path = page.static_root_path.unwrap_or(page.root_path);\n     format!(\n@@ -52,10 +52,7 @@ pub fn render<T: Print, S: Print>(\n     <link rel=\\\"stylesheet\\\" type=\\\"text/css\\\" href=\\\"{static_root_path}normalize{suffix}.css\\\">\\\n     <link rel=\\\"stylesheet\\\" type=\\\"text/css\\\" href=\\\"{static_root_path}rustdoc{suffix}.css\\\" \\\n           id=\\\"mainThemeStyle\\\">\\\n-    {themes}\\\n-    <link rel=\\\"stylesheet\\\" type=\\\"text/css\\\" href=\\\"{static_root_path}dark{suffix}.css\\\">\\\n-    <link rel=\\\"stylesheet\\\" type=\\\"text/css\\\" href=\\\"{static_root_path}light{suffix}.css\\\" \\\n-          id=\\\"themeStyle\\\">\\\n+    {style_files}\\\n     <script src=\\\"{static_root_path}storage{suffix}.js\\\"></script>\\\n     <noscript><link rel=\\\"stylesheet\\\" href=\\\"{static_root_path}noscript{suffix}.css\\\"></noscript>\\\n     {css_extension}\\\n@@ -172,13 +169,19 @@ pub fn render<T: Print, S: Print>(\n         after_content = layout.external_html.after_content,\n         sidebar = Buffer::html().to_display(sidebar),\n         krate = layout.krate,\n-        themes = themes\n+        style_files = style_files\n             .iter()\n-            .filter_map(|t| t.file_stem())\n-            .filter_map(|t| t.to_str())\n+            .filter_map(|t| {\n+                if let Some(stem) = t.path.file_stem() { Some((stem, t.disabled)) } else { None }\n+            })\n+            .filter_map(|t| {\n+                if let Some(path) = t.0.to_str() { Some((path, t.1)) } else { None }\n+            })\n             .map(|t| format!(\n-                r#\"<link rel=\"stylesheet\" type=\"text/css\" href=\"{}.css\">\"#,\n-                Escape(&format!(\"{}{}{}\", static_root_path, t, page.resource_suffix))\n+                r#\"<link rel=\"stylesheet\" type=\"text/css\" href=\"{}.css\" {} {}>\"#,\n+                Escape(&format!(\"{}{}{}\", static_root_path, t.0, page.resource_suffix)),\n+                if t.1 { \"disabled\" } else { \"\" },\n+                if t.0 == \"light\" { \"id=\\\"themeStyle\\\"\" } else { \"\" }\n             ))\n             .collect::<String>(),\n         suffix = page.resource_suffix,"}, {"sha": "8fa581180ef60eaa9516981161ec8c0baa10f923", "filename": "src/librustdoc/html/render.rs", "status": "modified", "additions": 65, "deletions": 29, "changes": 94, "blob_url": "https://github.com/rust-lang/rust/blob/03f565cdbfbdda55798f2c6e1fd0a96ac1c35c76/src%2Flibrustdoc%2Fhtml%2Frender.rs", "raw_url": "https://github.com/rust-lang/rust/raw/03f565cdbfbdda55798f2c6e1fd0a96ac1c35c76/src%2Flibrustdoc%2Fhtml%2Frender.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender.rs?ref=03f565cdbfbdda55798f2c6e1fd0a96ac1c35c76", "patch": "@@ -188,8 +188,8 @@ crate struct SharedContext {\n     /// This flag indicates whether listings of modules (in the side bar and documentation itself)\n     /// should be ordered alphabetically or in order of appearance (in the source code).\n     pub sort_modules_alphabetically: bool,\n-    /// Additional themes to be added to the generated docs.\n-    pub themes: Vec<PathBuf>,\n+    /// Additional CSS files to be added to the generated docs.\n+    pub style_files: Vec<StylePath>,\n     /// Suffix to be added on resource files (if suffix is \"-v2\" then \"light.css\" becomes\n     /// \"light-v2.css\").\n     pub resource_suffix: String,\n@@ -418,6 +418,14 @@ impl Serialize for TypeWithKind {\n     }\n }\n \n+#[derive(Debug, Clone)]\n+pub struct StylePath {\n+    /// The path to the theme\n+    pub path: PathBuf,\n+    /// What the `disabled` attribute should be set to in the HTML tag\n+    pub disabled: bool,\n+}\n+\n thread_local!(static CACHE_KEY: RefCell<Arc<Cache>> = Default::default());\n thread_local!(pub static CURRENT_DEPTH: Cell<usize> = Cell::new(0));\n \n@@ -461,7 +469,7 @@ pub fn run(\n         id_map,\n         playground_url,\n         sort_modules_alphabetically,\n-        themes,\n+        themes: style_files,\n         extension_css,\n         extern_html_root_urls,\n         resource_suffix,\n@@ -531,7 +539,7 @@ pub fn run(\n         layout,\n         created_dirs: Default::default(),\n         sort_modules_alphabetically,\n-        themes,\n+        style_files,\n         resource_suffix,\n         static_root_path,\n         fs: DocFS::new(&errors),\n@@ -540,6 +548,19 @@ pub fn run(\n         playground,\n     };\n \n+    // Add the default themes to the `Vec` of stylepaths\n+    //\n+    // Note that these must be added before `sources::render` is called\n+    // so that the resulting source pages are styled\n+    //\n+    // `light.css` is not disabled because it is the stylesheet that stays loaded\n+    // by the browser as the theme stylesheet. The theme system (hackily) works by\n+    // changing the href to this stylesheet. All other themes are disabled to\n+    // prevent rule conflicts\n+    scx.style_files.push(StylePath { path: PathBuf::from(\"light.css\"), disabled: false });\n+    scx.style_files.push(StylePath { path: PathBuf::from(\"dark.css\"), disabled: true });\n+    scx.style_files.push(StylePath { path: PathBuf::from(\"ayu.css\"), disabled: true });\n+\n     let dst = output;\n     scx.ensure_dir(&dst)?;\n     krate = sources::render(&dst, &mut scx, krate)?;\n@@ -616,11 +637,40 @@ fn write_shared(\n     // then we'll run over the \"official\" styles.\n     let mut themes: FxHashSet<String> = FxHashSet::default();\n \n-    for entry in &cx.shared.themes {\n-        let content = try_err!(fs::read(&entry), &entry);\n-        let theme = try_none!(try_none!(entry.file_stem(), &entry).to_str(), &entry);\n-        let extension = try_none!(try_none!(entry.extension(), &entry).to_str(), &entry);\n-        cx.shared.fs.write(cx.path(&format!(\"{}.{}\", theme, extension)), content.as_slice())?;\n+    for entry in &cx.shared.style_files {\n+        let theme = try_none!(try_none!(entry.path.file_stem(), &entry.path).to_str(), &entry.path);\n+        let extension =\n+            try_none!(try_none!(entry.path.extension(), &entry.path).to_str(), &entry.path);\n+\n+        // Handle the official themes\n+        match theme {\n+            \"light\" => write_minify(\n+                &cx.shared.fs,\n+                cx.path(\"light.css\"),\n+                static_files::themes::LIGHT,\n+                options.enable_minification,\n+            )?,\n+            \"dark\" => write_minify(\n+                &cx.shared.fs,\n+                cx.path(\"dark.css\"),\n+                static_files::themes::DARK,\n+                options.enable_minification,\n+            )?,\n+            \"ayu\" => write_minify(\n+                &cx.shared.fs,\n+                cx.path(\"ayu.css\"),\n+                static_files::themes::AYU,\n+                options.enable_minification,\n+            )?,\n+            _ => {\n+                // Handle added third-party themes\n+                let content = try_err!(fs::read(&entry.path), &entry.path);\n+                cx.shared\n+                    .fs\n+                    .write(cx.path(&format!(\"{}.{}\", theme, extension)), content.as_slice())?;\n+            }\n+        };\n+\n         themes.insert(theme.to_owned());\n     }\n \n@@ -634,20 +684,6 @@ fn write_shared(\n     write(cx.path(\"brush.svg\"), static_files::BRUSH_SVG)?;\n     write(cx.path(\"wheel.svg\"), static_files::WHEEL_SVG)?;\n     write(cx.path(\"down-arrow.svg\"), static_files::DOWN_ARROW_SVG)?;\n-    write_minify(\n-        &cx.shared.fs,\n-        cx.path(\"light.css\"),\n-        static_files::themes::LIGHT,\n-        options.enable_minification,\n-    )?;\n-    themes.insert(\"light\".to_owned());\n-    write_minify(\n-        &cx.shared.fs,\n-        cx.path(\"dark.css\"),\n-        static_files::themes::DARK,\n-        options.enable_minification,\n-    )?;\n-    themes.insert(\"dark\".to_owned());\n \n     let mut themes: Vec<&String> = themes.iter().collect();\n     themes.sort();\n@@ -958,7 +994,7 @@ themePicker.onblur = handleThemeButtonsBlur;\n                     })\n                     .collect::<String>()\n             );\n-            let v = layout::render(&cx.shared.layout, &page, \"\", content, &cx.shared.themes);\n+            let v = layout::render(&cx.shared.layout, &page, \"\", content, &cx.shared.style_files);\n             cx.shared.fs.write(&dst, v.as_bytes())?;\n         }\n     }\n@@ -1376,7 +1412,7 @@ impl Context {\n             &page,\n             sidebar,\n             |buf: &mut Buffer| all.print(buf),\n-            &self.shared.themes,\n+            &self.shared.style_files,\n         );\n         self.shared.fs.write(&final_file, v.as_bytes())?;\n \n@@ -1385,9 +1421,9 @@ impl Context {\n         page.description = \"Settings of Rustdoc\";\n         page.root_path = \"./\";\n \n-        let mut themes = self.shared.themes.clone();\n+        let mut style_files = self.shared.style_files.clone();\n         let sidebar = \"<p class='location'>Settings</p><div class='sidebar-elems'></div>\";\n-        themes.push(PathBuf::from(\"settings.css\"));\n+        style_files.push(StylePath { path: PathBuf::from(\"settings.css\"), disabled: false });\n         let v = layout::render(\n             &self.shared.layout,\n             &page,\n@@ -1396,7 +1432,7 @@ impl Context {\n                 self.shared.static_root_path.as_deref().unwrap_or(\"./\"),\n                 &self.shared.resource_suffix,\n             ),\n-            &themes,\n+            &style_files,\n         );\n         self.shared.fs.write(&settings_file, v.as_bytes())?;\n \n@@ -1458,7 +1494,7 @@ impl Context {\n                 &page,\n                 |buf: &mut _| print_sidebar(self, it, buf),\n                 |buf: &mut _| print_item(self, it, buf),\n-                &self.shared.themes,\n+                &self.shared.style_files,\n             )\n         } else {\n             let mut url = self.root_path();"}, {"sha": "03f79b931868b547fefb899dd4a6afa81ecb1a0f", "filename": "src/librustdoc/html/sources.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/03f565cdbfbdda55798f2c6e1fd0a96ac1c35c76/src%2Flibrustdoc%2Fhtml%2Fsources.rs", "raw_url": "https://github.com/rust-lang/rust/raw/03f565cdbfbdda55798f2c6e1fd0a96ac1c35c76/src%2Flibrustdoc%2Fhtml%2Fsources.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fsources.rs?ref=03f565cdbfbdda55798f2c6e1fd0a96ac1c35c76", "patch": "@@ -123,7 +123,7 @@ impl<'a> SourceCollector<'a> {\n             &page,\n             \"\",\n             |buf: &mut _| print_src(buf, &contents),\n-            &self.scx.themes,\n+            &self.scx.style_files,\n         );\n         self.scx.fs.write(&cur, v.as_bytes())?;\n         self.scx.local_sources.insert(p, href);"}, {"sha": "bc21c28750fd86ed2bcfbb160bda3bf6edfd5b91", "filename": "src/librustdoc/html/static/themes/ayu.css", "status": "added", "additions": 561, "deletions": 0, "changes": 561, "blob_url": "https://github.com/rust-lang/rust/blob/03f565cdbfbdda55798f2c6e1fd0a96ac1c35c76/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fthemes%2Fayu.css", "raw_url": "https://github.com/rust-lang/rust/raw/03f565cdbfbdda55798f2c6e1fd0a96ac1c35c76/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fthemes%2Fayu.css", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fthemes%2Fayu.css?ref=03f565cdbfbdda55798f2c6e1fd0a96ac1c35c76", "patch": "@@ -0,0 +1,561 @@\n+/*\n+Based off of the Ayu theme\n+Original by Dempfi (https://github.com/dempfi/ayu)\n+*/\n+\n+/* General structure and fonts */\n+\n+body {\n+\tbackground-color: #0f1419;\n+\tcolor: #c5c5c5;\n+}\n+\n+h1, h2, h3:not(.impl):not(.method):not(.type):not(.tymethod), h4:not(.method):not(.type):not(.tymethod) {\n+\tcolor: white;\n+}\n+h1.fqn {\n+\tborder-bottom-color: #5c6773;\n+}\n+h1.fqn  a {\n+\tcolor: #fff;\n+}\n+h2, h3:not(.impl):not(.method):not(.type):not(.tymethod) {\n+\tborder-bottom-color: #5c6773;\n+}\n+h4:not(.method):not(.type):not(.tymethod):not(.associatedconstant) {\n+\tborder: none;\n+}\n+\n+.in-band {\n+\tbackground-color: #0f1419;\n+}\n+\n+.invisible {\n+\tbackground: rgba(0, 0, 0, 0);\n+}\n+\n+code {\n+\tcolor: #ffb454;\n+}\n+h3 > code, h4 > code, h5 > code {\n+\tcolor: #e6e1cf;\n+}\n+pre > code {\n+    color: #e6e1cf; \n+}\n+span code {\n+    color: #e6e1cf;\n+}\n+.docblock a > code {\n+    color: #39AFD7 !important;\n+}\n+.docblock code, .docblock-short code {\n+\tbackground-color: #191f26;\n+}\n+pre {\n+\tcolor: #e6e1cf;\n+\tbackground-color: #191f26;\n+}\n+\n+.sidebar {\n+\tbackground-color: #14191f;\n+}\n+\n+/* Improve the scrollbar display on firefox */\n+* {\n+\tscrollbar-color: #5c6773 transparent;\n+}\n+\n+.sidebar {\n+\tscrollbar-color: #5c6773 transparent;\n+}\n+\n+/* Improve the scrollbar display on webkit-based browsers */\n+::-webkit-scrollbar-track {\n+\tbackground-color: transparent;\n+}\n+::-webkit-scrollbar-thumb {\n+\tbackground-color: #5c6773;\n+}\n+.sidebar::-webkit-scrollbar-track {\n+\tbackground-color: transparent;\n+}\n+.sidebar::-webkit-scrollbar-thumb {\n+\tbackground-color: #5c6773;\n+}\n+\n+.sidebar .current {\n+\tbackground-color: transparent;\n+\tcolor: #ffb44c;\n+}\n+\n+.source .sidebar {\n+\tbackground-color: #0f1419;\n+}\n+\n+.sidebar .location {\n+\tborder-color: #000;\n+\tbackground-color: #0f1419;\n+\tcolor: #fff;\n+}\n+\n+.sidebar-elems .location {\n+    color: #ff7733;\n+}\n+\n+.sidebar-elems .location a {\n+    color: #fff;\n+}\n+\n+.sidebar .version {\n+\tborder-bottom-color: #DDD;\n+}\n+\n+.sidebar-title {\n+\tborder-top-color: #5c6773;\n+\tborder-bottom-color: #5c6773;\n+}\n+\n+.block a:hover {\n+\tbackground: transparent;\n+\tcolor: #ffb44c;\n+}\n+\n+.line-numbers span { color: #5c6773ab; }\n+.line-numbers .line-highlighted {\n+    background-color: rgba(255, 236, 164, 0.06) !important;\n+    padding-right: 4px;\n+    border-right: 1px solid #ffb44c;\n+}\n+\n+.docblock h1, .docblock h2, .docblock h3, .docblock h4, .docblock h5 {\n+\tborder-bottom-color: #5c6773;\n+}\n+\n+.docblock table, .docblock table td, .docblock table th {\n+\tborder-color: #5c6773;\n+}\n+\n+.content .method .where,\n+.content .fn .where,\n+.content .where.fmt-newline {\n+\tcolor: #c5c5c5;\n+}\n+\n+.content .highlighted {\n+\tcolor: #000 !important;\n+\tbackground-color: #c6afb3;\n+}\n+.content .highlighted a, .content .highlighted span { color: #000 !important; }\n+.content .highlighted {\n+\tbackground-color: #c6afb3;\n+}\n+.search-results a {\n+\tcolor: #0096cf;\n+}\n+.search-results a span.desc {\n+\tcolor: #c5c5c5;\n+}\n+\n+.content .stability::before { color: #ccc; }\n+\n+.content span.foreigntype, .content a.foreigntype { color: #ef57ff; }\n+.content span.union, .content a.union { color: #98a01c; }\n+.content span.constant, .content a.constant,\n+.content span.static, .content a.static { color: #6380a0; }\n+.content span.primitive, .content a.primitive { color: #32889b; }\n+.content span.traitalias, .content a.traitalias { color: #57d399; }\n+.content span.keyword, .content a.keyword { color: #de5249; }\n+\n+.content span.externcrate, .content span.mod, .content a.mod {\n+    color: #acccf9;\n+}\n+.content span.struct, .content a.struct {\n+    color: #ffa0a5;\n+}\n+.content span.enum, .content a.enum {\n+    color: #99e0c9;\n+}\n+.content span.trait, .content a.trait {\n+    color: #39AFD7;\n+}\n+.content span.type, .content a.type {\n+    color: #cfbcf5;\n+}\n+.content span.fn, .content a.fn, .content span.method,\n+.content a.method, .content span.tymethod,\n+.content a.tymethod, .content .fnname {\n+    color: #fdd687;\n+}\n+.content span.attr, .content a.attr, .content span.derive,\n+.content a.derive, .content span.macro, .content a.macro {\n+    color: #a37acc;\n+}\n+\n+pre.rust .comment, pre.rust .doccomment { \n+\tcolor: #788797;\n+\tfont-style: italic;\n+}\n+\n+nav:not(.sidebar) {\n+\tborder-bottom-color: #e0e0e0;\n+}\n+nav.main .current {\n+\tborder-top-color: #5c6773;\n+\tborder-bottom-color: #5c6773;\n+}\n+nav.main .separator {\n+\tborder: 1px solid #5c6773;\n+}\n+a {\n+\tcolor: #c5c5c5;\n+}\n+\n+.docblock:not(.type-decl) a:not(.srclink):not(.test-arrow),\n+.docblock-short a:not(.srclink):not(.test-arrow), .stability a {\n+\tcolor: #39AFD7;\n+}\n+\n+.stab.internal a {\n+\tcolor: #304FFE;\n+}\n+\n+.collapse-toggle {\n+\tcolor: #999;\n+}\n+\n+#crate-search {\n+\tcolor: #c5c5c5;\n+\tbackground-color: #141920;\n+\tborder-radius: 4px;\n+\tbox-shadow: none;\n+\tborder-color: #5c6773;\n+}\n+\n+.search-input {\n+    color: #ffffff;\n+    background-color: #141920;\n+    box-shadow: none;\n+    transition: box-shadow 150ms ease-in-out;\n+    border-radius: 4px;\n+    margin-left: 8px;\n+}\n+\n+#crate-search+.search-input:focus {\n+    box-shadow: 0px 6px 20px 0px black;\n+}\n+\n+.search-focus:disabled {\n+\tcolor: #929292;\n+}\n+\n+.module-item .stab {\n+\tcolor: #000;\n+}\n+\n+.stab.unstable,\n+.stab.internal,\n+.stab.deprecated,\n+.stab.portability {\n+    color: #c5c5c5;\n+\tbackground: #314559 !important;\n+\tborder-style: none !important;\n+\tborder-radius: 4px;\n+\tpadding: 3px 6px 3px 6px;\n+}\n+\n+.stab.portability > code {\n+\tcolor: #e6e1cf;\n+\tbackground-color: transparent;\n+}\n+\n+#help > div {\n+    background: #14191f;\n+    box-shadow: 0px 6px 20px 0px black;\n+    border: none;\n+    border-radius: 4px;\n+}\n+\n+.since {\n+\tcolor: grey;\n+}\n+\n+tr.result span.primitive::after, tr.result span.keyword::after {\n+\tcolor: #788797;\n+}\n+\n+.line-numbers :target { background-color: transparent; }\n+\n+/* Code highlighting */\n+pre.rust .number, pre.rust .string { color: #b8cc52; }\n+pre.rust .kw, pre.rust .kw-2, pre.rust .prelude-ty,\n+pre.rust .bool-val, pre.rust .prelude-val,\n+pre.rust .op, pre.rust .lifetime { color: #ff7733; }\n+pre.rust .macro, pre.rust .macro-nonterminal { color: #a37acc; }\n+pre.rust .question-mark {\n+\tcolor: #ff9011;\n+}\n+pre.rust .self {\n+    color: #36a3d9;\n+    font-style: italic;\n+}\n+pre.rust .attribute {\n+    color: #e6e1cf;\n+}\n+pre.rust .attribute .ident, pre.rust .attribute .op {\n+    color: #e6e1cf;\n+}\n+\n+.example-wrap > pre.line-number {\n+\tcolor: #5c67736e;\n+\tborder: none;\n+}\n+\n+a.test-arrow {\n+    font-size: 100%;\n+    color: #788797;\n+    border-radius: 4px;\n+    background-color: rgba(255, 255, 255, 0);\n+}\n+\n+a.test-arrow:hover {\n+    background-color: rgba(242, 151, 24, 0.05);\n+    color: #ffb44c;\n+}\n+\n+.toggle-label {\n+\tcolor: #999;\n+}\n+\n+:target > code, :target > .in-band {\n+\tbackground: rgba(255, 236, 164, 0.06);\n+\tborder-right: 3px solid #ffb44c;\n+}\n+\n+pre.compile_fail {\n+\tborder-left: 2px solid rgba(255,0,0,.4);\n+}\n+\n+pre.compile_fail:hover, .information:hover + pre.compile_fail {\n+\tborder-left: 2px solid #f00;\n+}\n+\n+pre.should_panic {\n+\tborder-left: 2px solid rgba(255,0,0,.4);\n+}\n+\n+pre.should_panic:hover, .information:hover + pre.should_panic {\n+\tborder-left: 2px solid #f00;\n+}\n+\n+pre.ignore {\n+\tborder-left: 2px solid rgba(255,142,0,.6);\n+}\n+\n+pre.ignore:hover, .information:hover + pre.ignore {\n+\tborder-left: 2px solid #ff9200;\n+}\n+\n+.tooltip.compile_fail {\n+\tcolor: rgba(255,0,0,.5);\n+}\n+\n+.information > .compile_fail:hover {\n+\tcolor: #f00;\n+}\n+\n+.tooltip.should_panic {\n+\tcolor: rgba(255,0,0,.5);\n+}\n+\n+.information > .should_panic:hover {\n+\tcolor: #f00;\n+}\n+\n+.tooltip.ignore {\n+\tcolor: rgba(255,142,0,.6);\n+}\n+\n+.information > .ignore:hover {\n+\tcolor: #ff9200;\n+}\n+\n+.search-failed a {\n+\tcolor: #39AFD7;\n+}\n+\n+.tooltip .tooltiptext {\n+    background-color: #314559;\n+    color: #c5c5c5;\n+    border: 1px solid #5c6773;\n+}\n+\n+.tooltip .tooltiptext::after {\n+\tborder-color: transparent #314559 transparent transparent;\n+}\n+\n+#titles > div.selected {\n+    background-color: #141920 !important;\n+\tborder-bottom: 1px solid #ffb44c !important;\n+\tborder-top: none;\n+}\n+\n+#titles > div:not(.selected) {\n+\tbackground-color: transparent !important;\n+\tborder: none;\n+}\n+\n+#titles > div:hover {\n+    border-bottom: 1px solid rgba(242, 151, 24, 0.3);\n+}\n+\n+#titles > div > div.count {\n+\tcolor: #888;\n+}\n+\n+/* rules that this theme does not need to set, here to satisfy the rule checker */\n+/* note that a lot of these are partially set in some way (meaning they are set\n+individually rather than as a group) */\n+/* TODO: these rules should be at the bottom of the file but currently must be\n+above the `@media (max-width: 700px)` rules due to a bug in the css checker */\n+/* see https://github.com/rust-lang/rust/pull/71237#issuecomment-618170143 */\n+.content .highlighted.mod, .content .highlighted.externcrate {}\n+.search-input:focus {}\n+.content span.attr,.content a.attr,.block a.current.attr,.content span.derive,.content a.derive,.block a.current.derive,.content span.macro,.content a.macro,.block a.current.macro {}\n+.content .highlighted.trait {}\n+.content span.struct,.content a.struct,.block a.current.struct {}\n+#titles>div:hover,#titles>div.selected {}\n+.content .highlighted.traitalias {}\n+.content span.type,.content a.type,.block a.current.type {}\n+.content span.union,.content a.union,.block a.current.union {}\n+.content .highlighted.foreigntype {}\n+pre.rust .lifetime {}\n+.content .highlighted.primitive {}\n+.content .highlighted.constant,.content .highlighted.static {}\n+.stab.unstable {}\n+.content .highlighted.fn,.content .highlighted.method,.content .highlighted.tymethod {}\n+h2,h3:not(.impl):not(.method):not(.type):not(.tymethod),h4:not(.method):not(.type):not(.tymethod) {}\n+.content span.enum,.content a.enum,.block a.current.enum {}\n+.content span.constant,.content a.constant,.block a.current.constant,.content span.static,.content a.static,.block a.current.static {}\n+.content span.keyword,.content a.keyword,.block a.current.keyword {}\n+pre.rust .comment {}\n+.content .highlighted.enum {}\n+.content .highlighted.struct {}\n+.content .highlighted.keyword {}\n+.content span.traitalias,.content a.traitalias,.block a.current.traitalias {}\n+.content span.fn,.content a.fn,.block a.current.fn,.content span.method,.content a.method,.block a.current.method,.content span.tymethod,.content a.tymethod,.block a.current.tymethod,.content .fnname {}\n+pre.rust .kw {}\n+pre.rust .self,pre.rust .bool-val,pre.rust .prelude-val,pre.rust .attribute,pre.rust .attribute .ident {}\n+.content span.foreigntype,.content a.foreigntype,.block a.current.foreigntype {}\n+pre.rust .doccomment {}\n+.stab.deprecated {}\n+.content .highlighted.attr,.content .highlighted.derive,.content .highlighted.macro {}\n+.stab.portability {}\n+.content .highlighted.union {}\n+.content span.primitive,.content a.primitive,.block a.current.primitive {}\n+.content span.externcrate,.content span.mod,.content a.mod,.block a.current.mod {}\n+.content .highlighted.type {}\n+pre.rust .kw-2,pre.rust .prelude-ty {}\n+.content span.trait,.content a.trait,.block a.current.trait {}\n+.stab.internal {}\n+\n+@media (max-width: 700px) {\n+\t.sidebar-menu {\n+\t\tbackground-color: #14191f;\n+\t\tborder-bottom-color: #5c6773;\n+\t\tborder-right-color: #5c6773;\n+\t}\n+\n+\t.sidebar-elems {\n+\t\tbackground-color: #14191f;\n+\t\tborder-right-color: #5c6773;\n+\t}\n+\n+\t#sidebar-filler {\n+\t\tbackground-color: #14191f;\n+\t\tborder-bottom-color: #5c6773;\n+\t}\n+}\n+\n+kbd {\n+\tcolor: #c5c5c5;\n+\tbackground-color: #314559;\n+\tborder-color: #5c6773;\n+\tborder-bottom-color: #5c6773;\n+\tbox-shadow-color: #c6cbd1;\n+}\n+\n+#theme-picker, #settings-menu {\n+\tborder-color: #5c6773;\n+    background-color: #0f1419;\n+}\n+\n+#theme-picker > img, #settings-menu > img {\n+    filter: invert(100);\n+}\n+\n+#theme-picker:hover, #theme-picker:focus,\n+#settings-menu:hover, #settings-menu:focus {\n+\tborder-color: #e0e0e0;\n+}\n+\n+#theme-choices {\n+\tborder-color: #5c6773;\n+\tbackground-color: #0f1419;\n+}\n+\n+#theme-choices > button:not(:first-child) {\n+\tborder-top-color: #c5c5c5;\n+}\n+\n+#theme-choices > button:hover, #theme-choices > button:focus {\n+\tbackground-color: rgba(70, 70, 70, 0.33);\n+}\n+\n+@media (max-width: 700px) {\n+\t#theme-picker {\n+\t\tbackground: #0f1419;\n+\t}\n+}\n+\n+#all-types {\n+\tbackground-color: #14191f;\n+}\n+#all-types:hover {\n+\tbackground-color: rgba(70, 70, 70, 0.33);\n+}\n+\n+.search-results td span.alias {\n+\tcolor: #c5c5c5;\n+}\n+.search-results td span.grey {\n+\tcolor: #999;\n+}\n+\n+#sidebar-toggle {\n+\tbackground-color: #14191f;\n+}\n+#sidebar-toggle:hover {\n+\tbackground-color: rgba(70, 70, 70, 0.33);\n+}\n+#source-sidebar {\n+\tbackground-color: #14191f;\n+}\n+#source-sidebar > .title {\n+\tcolor: #fff;\n+\tborder-bottom-color: #5c6773;\n+}\n+div.files > a:hover, div.name:hover {\n+\tbackground-color: #14191f;\n+\tcolor: #ffb44c;\n+}\n+div.files > .selected {\n+\tbackground-color: #14191f;\n+\tcolor: #ffb44c;\n+}\n+.setting-line > .title {\n+\tborder-bottom-color: #5c6773;\n+}\n+input:checked + .slider {\n+\tbackground-color: #ffb454 !important;\n+}"}, {"sha": "6bd7e53cdfbe23acfc2e80fe7e41a72361b6e40b", "filename": "src/librustdoc/html/static_files.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/03f565cdbfbdda55798f2c6e1fd0a96ac1c35c76/src%2Flibrustdoc%2Fhtml%2Fstatic_files.rs", "raw_url": "https://github.com/rust-lang/rust/raw/03f565cdbfbdda55798f2c6e1fd0a96ac1c35c76/src%2Flibrustdoc%2Fhtml%2Fstatic_files.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic_files.rs?ref=03f565cdbfbdda55798f2c6e1fd0a96ac1c35c76", "patch": "@@ -64,6 +64,9 @@ pub mod themes {\n \n     /// The \"dark\" theme.\n     pub static DARK: &str = include_str!(\"static/themes/dark.css\");\n+\n+    /// The \"ayu\" theme.\n+    pub static AYU: &str = include_str!(\"static/themes/ayu.css\");\n }\n \n /// Files related to the Fira Sans font."}]}