{"sha": "9970dd316b7e6b2d198dee7318c989fb312c6f5f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk5NzBkZDMxNmI3ZTZiMmQxOThkZWU3MzE4Yzk4OWZiMzEyYzZmNWY=", "commit": {"author": {"name": "veetaha", "email": "veetaha2@gmail.com", "date": "2020-05-09T17:52:52Z"}, "committer": {"name": "veetaha", "email": "veetaha2@gmail.com", "date": "2020-05-09T18:05:22Z"}, "message": "Simplify", "tree": {"sha": "1a4ad97fd828a821064f3e54371c4b3e16f57629", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1a4ad97fd828a821064f3e54371c4b3e16f57629"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9970dd316b7e6b2d198dee7318c989fb312c6f5f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9970dd316b7e6b2d198dee7318c989fb312c6f5f", "html_url": "https://github.com/rust-lang/rust/commit/9970dd316b7e6b2d198dee7318c989fb312c6f5f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9970dd316b7e6b2d198dee7318c989fb312c6f5f/comments", "author": {"login": "Veetaha", "id": 36276403, "node_id": "MDQ6VXNlcjM2Mjc2NDAz", "avatar_url": "https://avatars.githubusercontent.com/u/36276403?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veetaha", "html_url": "https://github.com/Veetaha", "followers_url": "https://api.github.com/users/Veetaha/followers", "following_url": "https://api.github.com/users/Veetaha/following{/other_user}", "gists_url": "https://api.github.com/users/Veetaha/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veetaha/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veetaha/subscriptions", "organizations_url": "https://api.github.com/users/Veetaha/orgs", "repos_url": "https://api.github.com/users/Veetaha/repos", "events_url": "https://api.github.com/users/Veetaha/events{/privacy}", "received_events_url": "https://api.github.com/users/Veetaha/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Veetaha", "id": 36276403, "node_id": "MDQ6VXNlcjM2Mjc2NDAz", "avatar_url": "https://avatars.githubusercontent.com/u/36276403?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veetaha", "html_url": "https://github.com/Veetaha", "followers_url": "https://api.github.com/users/Veetaha/followers", "following_url": "https://api.github.com/users/Veetaha/following{/other_user}", "gists_url": "https://api.github.com/users/Veetaha/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veetaha/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veetaha/subscriptions", "organizations_url": "https://api.github.com/users/Veetaha/orgs", "repos_url": "https://api.github.com/users/Veetaha/repos", "events_url": "https://api.github.com/users/Veetaha/events{/privacy}", "received_events_url": "https://api.github.com/users/Veetaha/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e83a2912b8deaab560d1ea39232c06a29530d6e5", "url": "https://api.github.com/repos/rust-lang/rust/commits/e83a2912b8deaab560d1ea39232c06a29530d6e5", "html_url": "https://github.com/rust-lang/rust/commit/e83a2912b8deaab560d1ea39232c06a29530d6e5"}], "stats": {"total": 11, "additions": 6, "deletions": 5}, "files": [{"sha": "a8fa2af08b4480b129237c094a43498b0e798a47", "filename": "crates/rust-analyzer/src/main_loop.rs", "status": "modified", "additions": 6, "deletions": 5, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/9970dd316b7e6b2d198dee7318c989fb312c6f5f/crates%2Frust-analyzer%2Fsrc%2Fmain_loop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9970dd316b7e6b2d198dee7318c989fb312c6f5f/crates%2Frust-analyzer%2Fsrc%2Fmain_loop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fmain_loop.rs?ref=9970dd316b7e6b2d198dee7318c989fb312c6f5f", "patch": "@@ -173,7 +173,6 @@ pub fn main_loop(ws_roots: Vec<PathBuf>, config: Config, connection: Connection)\n     };\n \n     loop_state.roots_total = world_state.vfs.read().n_roots();\n-    loop_state.roots_scanned = 0;\n \n     let pool = ThreadPool::default();\n     let (task_sender, task_receiver) = unbounded::<Task>();\n@@ -400,10 +399,12 @@ fn loop_turn(\n     }\n \n     let max_in_flight_libs = pool.max_count().saturating_sub(2).max(1);\n-    while loop_state.in_flight_libraries < max_in_flight_libs\n-        && !loop_state.pending_libraries.is_empty()\n-    {\n-        let (root, files) = loop_state.pending_libraries.pop().unwrap();\n+    while loop_state.in_flight_libraries < max_in_flight_libs {\n+        let (root, files) = match loop_state.pending_libraries.pop() {\n+            Some(it) => it,\n+            None => break,\n+        };\n+\n         loop_state.in_flight_libraries += 1;\n         let sender = libdata_sender.clone();\n         pool.execute(move || {"}]}