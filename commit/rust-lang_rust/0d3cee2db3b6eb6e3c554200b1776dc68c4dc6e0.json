{"sha": "0d3cee2db3b6eb6e3c554200b1776dc68c4dc6e0", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBkM2NlZTJkYjNiNmViNmUzYzU1NDIwMGIxNzc2ZGM2OGM0ZGM2ZTA=", "commit": {"author": {"name": "Oliver Schneider", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2017-02-09T10:15:56Z"}, "committer": {"name": "Oliver Schneider", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2017-02-09T10:15:56Z"}, "message": "fix size of dst in size_of_val intrinsic", "tree": {"sha": "09cf483ad826fed017d4489cb40aa1f6e90d0b97", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/09cf483ad826fed017d4489cb40aa1f6e90d0b97"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0d3cee2db3b6eb6e3c554200b1776dc68c4dc6e0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0d3cee2db3b6eb6e3c554200b1776dc68c4dc6e0", "html_url": "https://github.com/rust-lang/rust/commit/0d3cee2db3b6eb6e3c554200b1776dc68c4dc6e0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0d3cee2db3b6eb6e3c554200b1776dc68c4dc6e0/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fb2d393427021adc1a09f938c9d0a5190607c30c", "url": "https://api.github.com/repos/rust-lang/rust/commits/fb2d393427021adc1a09f938c9d0a5190607c30c", "html_url": "https://github.com/rust-lang/rust/commit/fb2d393427021adc1a09f938c9d0a5190607c30c"}], "stats": {"total": 37, "additions": 27, "deletions": 10}, "files": [{"sha": "24345cfce011518acdcf56563d3bd6949f167c0f", "filename": "src/terminator/intrinsic.rs", "status": "modified", "additions": 4, "deletions": 10, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/0d3cee2db3b6eb6e3c554200b1776dc68c4dc6e0/src%2Fterminator%2Fintrinsic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0d3cee2db3b6eb6e3c554200b1776dc68c4dc6e0/src%2Fterminator%2Fintrinsic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fterminator%2Fintrinsic.rs?ref=0d3cee2db3b6eb6e3c554200b1776dc68c4dc6e0", "patch": "@@ -1,6 +1,6 @@\n use rustc::hir::def_id::DefId;\n use rustc::mir;\n-use rustc::ty::layout::Layout;\n+use rustc::ty::layout::{Layout, Size, Align};\n use rustc::ty::subst::Substs;\n use rustc::ty::{self, Ty};\n \n@@ -426,10 +426,7 @@ impl<'a, 'tcx> EvalContext<'a, 'tcx> {\n \n                     let (sized_size, sized_align) = match *layout {\n                         ty::layout::Layout::Univariant { ref variant, .. } => {\n-                            // The offset of the start of the last field gives the size of the\n-                            // sized part of the type.\n-                            let size = variant.offsets.last().map_or(0, |f| f.bytes());\n-                            (size, variant.align.abi())\n+                            (variant.offsets.last().map_or(0, |o| o.bytes()), variant.align.abi())\n                         }\n                         _ => {\n                             bug!(\"size_and_align_of_dst: expcted Univariant for `{}`, found {:#?}\",\n@@ -470,11 +467,8 @@ impl<'a, 'tcx> EvalContext<'a, 'tcx> {\n                     //\n                     //   `(size + (align-1)) & -align`\n \n-                    if size & (align - 1) != 0 {\n-                        Ok((size + align, align))\n-                    } else {\n-                        Ok((size, align))\n-                    }\n+                    let size = Size::from_bytes(size).abi_align(Align::from_bytes(align, align).unwrap()).bytes();\n+                    Ok((size, align))\n                 }\n                 ty::TyDynamic(..) => {\n                     let (_, vtable) = value.expect_ptr_vtable_pair(&self.memory)?;"}, {"sha": "619542926500ba03ed1c4cb0138bb1599608f4ca", "filename": "tests/run-pass/issue-35815.rs", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/0d3cee2db3b6eb6e3c554200b1776dc68c4dc6e0/tests%2Frun-pass%2Fissue-35815.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0d3cee2db3b6eb6e3c554200b1776dc68c4dc6e0/tests%2Frun-pass%2Fissue-35815.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Fissue-35815.rs?ref=0d3cee2db3b6eb6e3c554200b1776dc68c4dc6e0", "patch": "@@ -0,0 +1,23 @@\n+// Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+use std::mem;\n+\n+struct Foo<T: ?Sized> {\n+    a: i64,\n+    b: bool,\n+    c: T,\n+}\n+\n+fn main() {\n+    let foo: &Foo<i32> = &Foo { a: 1, b: false, c: 2i32 };\n+    let foo_unsized: &Foo<Send> = foo;\n+    assert_eq!(mem::size_of_val(foo), mem::size_of_val(foo_unsized));\n+}"}]}