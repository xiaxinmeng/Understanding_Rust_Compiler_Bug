{"sha": "28c401f9db1e0acca7a385f67e4291cdfb021625", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI4YzQwMWY5ZGIxZTBhY2NhN2EzODVmNjdlNDI5MWNkZmIwMjE2MjU=", "commit": {"author": {"name": "Oliver Schneider", "email": "oli-obk@users.noreply.github.com", "date": "2017-10-10T07:37:51Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2017-10-10T07:37:51Z"}, "message": "Merge pull request #2118 from chyvonomys/relax-needless-loop\n\nrelax `needless_range_loop` so that it reports only direct indexing", "tree": {"sha": "1dbe902a6177f659f3d1de46826842b3d631f2e8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1dbe902a6177f659f3d1de46826842b3d631f2e8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/28c401f9db1e0acca7a385f67e4291cdfb021625", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/28c401f9db1e0acca7a385f67e4291cdfb021625", "html_url": "https://github.com/rust-lang/rust/commit/28c401f9db1e0acca7a385f67e4291cdfb021625", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/28c401f9db1e0acca7a385f67e4291cdfb021625/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "73a1dd8e7f10f1c6cba618b60e3fed690a72a8d7", "url": "https://api.github.com/repos/rust-lang/rust/commits/73a1dd8e7f10f1c6cba618b60e3fed690a72a8d7", "html_url": "https://github.com/rust-lang/rust/commit/73a1dd8e7f10f1c6cba618b60e3fed690a72a8d7"}, {"sha": "1dc0b5c9ec8e803df7858dd060c47bdc9ea5c9da", "url": "https://api.github.com/repos/rust-lang/rust/commits/1dc0b5c9ec8e803df7858dd060c47bdc9ea5c9da", "html_url": "https://github.com/rust-lang/rust/commit/1dc0b5c9ec8e803df7858dd060c47bdc9ea5c9da"}], "stats": {"total": 61, "additions": 57, "deletions": 4}, "files": [{"sha": "f1483cd7ecbfedc33d294f1905a811c0fcc63f90", "filename": "clippy_lints/src/loops.rs", "status": "modified", "additions": 16, "deletions": 4, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/28c401f9db1e0acca7a385f67e4291cdfb021625/clippy_lints%2Fsrc%2Floops.rs", "raw_url": "https://github.com/rust-lang/rust/raw/28c401f9db1e0acca7a385f67e4291cdfb021625/clippy_lints%2Fsrc%2Floops.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Floops.rs?ref=28c401f9db1e0acca7a385f67e4291cdfb021625", "patch": "@@ -925,14 +925,16 @@ fn check_for_loop_range<'a, 'tcx>(\n                 cx: cx,\n                 var: canonical_id,\n                 indexed: HashMap::new(),\n+                indexed_directly: HashMap::new(),\n                 referenced: HashSet::new(),\n                 nonindex: false,\n             };\n             walk_expr(&mut visitor, body);\n \n-            // linting condition: we only indexed one variable\n-            if visitor.indexed.len() == 1 {\n-                let (indexed, indexed_extent) = visitor.indexed.into_iter().next().expect(\n+            // linting condition: we only indexed one variable, and indexed it directly\n+            // (`indexed_directly` is subset of `indexed`)\n+            if visitor.indexed.len() == 1 && visitor.indexed_directly.len() == 1 {\n+                let (indexed, indexed_extent) = visitor.indexed_directly.into_iter().next().expect(\n                     \"already checked that we have exactly 1 element\",\n                 );\n \n@@ -1481,6 +1483,9 @@ struct VarVisitor<'a, 'tcx: 'a> {\n     var: ast::NodeId,\n     /// indexed variables, the extend is `None` for global\n     indexed: HashMap<Name, Option<region::Scope>>,\n+    /// subset of `indexed` of vars that are indexed directly: `v[i]`\n+    /// this will not contain cases like `v[calc_index(i)]` or `v[(i + 4) % N]`\n+    indexed_directly: HashMap<Name, Option<region::Scope>>,\n     /// Any names that are used outside an index operation.\n     /// Used to detect things like `&mut vec` used together with `vec[i]`\n     referenced: HashSet<Name>,\n@@ -1499,7 +1504,8 @@ impl<'a, 'tcx> Visitor<'tcx> for VarVisitor<'a, 'tcx> {\n             let QPath::Resolved(None, ref seqvar) = *seqpath,\n             seqvar.segments.len() == 1,\n         ], {\n-            let index_used = same_var(self.cx, idx, self.var) || {\n+            let index_used_directly = same_var(self.cx, idx, self.var);\n+            let index_used = index_used_directly || {\n                 let mut used_visitor = LocalUsedVisitor {\n                     cx: self.cx,\n                     local: self.var,\n@@ -1519,10 +1525,16 @@ impl<'a, 'tcx> Visitor<'tcx> for VarVisitor<'a, 'tcx> {\n                         let parent_def_id = self.cx.tcx.hir.local_def_id(parent_id);\n                         let extent = self.cx.tcx.region_scope_tree(parent_def_id).var_scope(hir_id.local_id);\n                         self.indexed.insert(seqvar.segments[0].name, Some(extent));\n+                        if index_used_directly {\n+                            self.indexed_directly.insert(seqvar.segments[0].name, Some(extent));\n+                        }\n                         return;  // no need to walk further *on the variable*\n                     }\n                     Def::Static(..) | Def::Const(..) => {\n                         self.indexed.insert(seqvar.segments[0].name, None);\n+                        if index_used_directly {\n+                            self.indexed_directly.insert(seqvar.segments[0].name, None);\n+                        }\n                         return;  // no need to walk further *on the variable*\n                     }\n                     _ => (),"}, {"sha": "b960e3990c11c05647ef1e46c260f807a034c64e", "filename": "tests/ui/needless_range_loop.rs", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/28c401f9db1e0acca7a385f67e4291cdfb021625/tests%2Fui%2Fneedless_range_loop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/28c401f9db1e0acca7a385f67e4291cdfb021625/tests%2Fui%2Fneedless_range_loop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fneedless_range_loop.rs?ref=28c401f9db1e0acca7a385f67e4291cdfb021625", "patch": "@@ -0,0 +1,27 @@\n+fn calc_idx(i: usize) -> usize {\n+    (i + i + 20) % 4\n+}\n+\n+fn main() {\n+    let ns = [2, 3, 5, 7];\n+\n+    for i in 3..10 {\n+        println!(\"{}\", ns[i]);\n+    }\n+\n+    for i in 3..10 {\n+        println!(\"{}\", ns[i % 4]);\n+    }\n+\n+    for i in 3..10 {\n+        println!(\"{}\", ns[i % ns.len()]);\n+    }\n+\n+    for i in 3..10 {\n+        println!(\"{}\", ns[calc_idx(i)]);\n+    }\n+\n+    for i in 3..10 {\n+        println!(\"{}\", ns[calc_idx(i) % 4]);\n+    }\n+}"}, {"sha": "e2c3e18e8219cb74a37b13fd3be65e74ee6016b4", "filename": "tests/ui/needless_range_loop.stderr", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/28c401f9db1e0acca7a385f67e4291cdfb021625/tests%2Fui%2Fneedless_range_loop.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/28c401f9db1e0acca7a385f67e4291cdfb021625/tests%2Fui%2Fneedless_range_loop.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fneedless_range_loop.stderr?ref=28c401f9db1e0acca7a385f67e4291cdfb021625", "patch": "@@ -0,0 +1,14 @@\n+error: the loop variable `i` is only used to index `ns`.\n+  --> $DIR/needless_range_loop.rs:8:5\n+   |\n+8  | /     for i in 3..10 {\n+9  | |         println!(\"{}\", ns[i]);\n+10 | |     }\n+   | |_____^\n+   |\n+   = note: `-D needless-range-loop` implied by `-D warnings`\n+help: consider using an iterator\n+   |\n+8  |     for <item> in ns.iter().take(10).skip(3) {\n+   |         ^^^^^^\n+"}]}