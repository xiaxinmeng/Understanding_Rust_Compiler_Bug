{"sha": "931f59f214f68bf2a5656d605cb200f22d47cdf8", "node_id": "MDY6Q29tbWl0NzI0NzEyOjkzMWY1OWYyMTRmNjhiZjJhNTY1NmQ2MDVjYjIwMGYyMmQ0N2NkZjg=", "commit": {"author": {"name": "Brian Koropoff", "email": "bkoropoff@gmail.com", "date": "2014-10-02T06:52:19Z"}, "committer": {"name": "Brian Koropoff", "email": "bkoropoff@gmail.com", "date": "2014-10-03T04:08:45Z"}, "message": "Fix categorization of upvars of capture-by-reference unboxed closures\n\nIn particular, this causes mutation of an upvar to correctly mark\nit as mutable during adjustment.  This makes borrowck correctly\nflag conflicting borrows, etc.\n\nWe still seem to generate incorrect code in trans which copies the upvar\nby value into the closure.  This remains to be fixed.", "tree": {"sha": "a9cfaaa745ab013dae4e6c089d6ba0b44104b17e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a9cfaaa745ab013dae4e6c089d6ba0b44104b17e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/931f59f214f68bf2a5656d605cb200f22d47cdf8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/931f59f214f68bf2a5656d605cb200f22d47cdf8", "html_url": "https://github.com/rust-lang/rust/commit/931f59f214f68bf2a5656d605cb200f22d47cdf8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/931f59f214f68bf2a5656d605cb200f22d47cdf8/comments", "author": {"login": "bkoropoff", "id": 2101303, "node_id": "MDQ6VXNlcjIxMDEzMDM=", "avatar_url": "https://avatars.githubusercontent.com/u/2101303?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bkoropoff", "html_url": "https://github.com/bkoropoff", "followers_url": "https://api.github.com/users/bkoropoff/followers", "following_url": "https://api.github.com/users/bkoropoff/following{/other_user}", "gists_url": "https://api.github.com/users/bkoropoff/gists{/gist_id}", "starred_url": "https://api.github.com/users/bkoropoff/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bkoropoff/subscriptions", "organizations_url": "https://api.github.com/users/bkoropoff/orgs", "repos_url": "https://api.github.com/users/bkoropoff/repos", "events_url": "https://api.github.com/users/bkoropoff/events{/privacy}", "received_events_url": "https://api.github.com/users/bkoropoff/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bkoropoff", "id": 2101303, "node_id": "MDQ6VXNlcjIxMDEzMDM=", "avatar_url": "https://avatars.githubusercontent.com/u/2101303?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bkoropoff", "html_url": "https://github.com/bkoropoff", "followers_url": "https://api.github.com/users/bkoropoff/followers", "following_url": "https://api.github.com/users/bkoropoff/following{/other_user}", "gists_url": "https://api.github.com/users/bkoropoff/gists{/gist_id}", "starred_url": "https://api.github.com/users/bkoropoff/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bkoropoff/subscriptions", "organizations_url": "https://api.github.com/users/bkoropoff/orgs", "repos_url": "https://api.github.com/users/bkoropoff/repos", "events_url": "https://api.github.com/users/bkoropoff/events{/privacy}", "received_events_url": "https://api.github.com/users/bkoropoff/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4e5666eace14651539ca2a1f5eed8cdf0ccfb130", "url": "https://api.github.com/repos/rust-lang/rust/commits/4e5666eace14651539ca2a1f5eed8cdf0ccfb130", "html_url": "https://github.com/rust-lang/rust/commit/4e5666eace14651539ca2a1f5eed8cdf0ccfb130"}], "stats": {"total": 26, "additions": 15, "deletions": 11}, "files": [{"sha": "b62884c057a5b0aea2013ab1c88b6f32cda39280", "filename": "src/librustc/middle/mem_categorization.rs", "status": "modified", "additions": 15, "deletions": 11, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/931f59f214f68bf2a5656d605cb200f22d47cdf8/src%2Flibrustc%2Fmiddle%2Fmem_categorization.rs", "raw_url": "https://github.com/rust-lang/rust/raw/931f59f214f68bf2a5656d605cb200f22d47cdf8/src%2Flibrustc%2Fmiddle%2Fmem_categorization.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fmem_categorization.rs?ref=931f59f214f68bf2a5656d605cb200f22d47cdf8", "patch": "@@ -604,17 +604,21 @@ impl<'t,'tcx,TYPER:Typer<'tcx>> MemCategorizationContext<'t,TYPER> {\n                           ty::FnMutUnboxedClosureKind => ast::Many,\n                           ty::FnOnceUnboxedClosureKind => ast::Once,\n                       };\n-                      Ok(Rc::new(cmt_ {\n-                          id: id,\n-                          span: span,\n-                          cat: cat_copied_upvar(CopiedUpvar {\n-                              upvar_id: var_id,\n-                              onceness: onceness,\n-                              capturing_proc: fn_node_id,\n-                          }),\n-                          mutbl: MutabilityCategory::from_local(self.tcx(), var_id),\n-                          ty: expr_ty\n-                      }))\n+                      if self.typer.capture_mode(fn_node_id) == ast::CaptureByRef {\n+                          self.cat_upvar(id, span, var_id, fn_node_id)\n+                      } else {\n+                          Ok(Rc::new(cmt_ {\n+                              id: id,\n+                              span: span,\n+                              cat: cat_copied_upvar(CopiedUpvar {\n+                                  upvar_id: var_id,\n+                                  onceness: onceness,\n+                                  capturing_proc: fn_node_id,\n+                              }),\n+                              mutbl: MutabilityCategory::from_local(self.tcx(), var_id),\n+                              ty: expr_ty\n+                          }))\n+                      }\n                   }\n                   _ => {\n                       self.tcx().sess.span_bug("}]}