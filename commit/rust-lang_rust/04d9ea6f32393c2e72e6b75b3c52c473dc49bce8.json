{"sha": "04d9ea6f32393c2e72e6b75b3c52c473dc49bce8", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA0ZDllYTZmMzIzOTNjMmU3MmU2Yjc1YjNjNTJjNDczZGM0OWJjZTg=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-11-29T23:18:31Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-12-10T23:42:36Z"}, "message": "core: Fix capitalization in docs", "tree": {"sha": "b36c91617a7173768ced780ad4f85943e647037c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b36c91617a7173768ced780ad4f85943e647037c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/04d9ea6f32393c2e72e6b75b3c52c473dc49bce8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/04d9ea6f32393c2e72e6b75b3c52c473dc49bce8", "html_url": "https://github.com/rust-lang/rust/commit/04d9ea6f32393c2e72e6b75b3c52c473dc49bce8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/04d9ea6f32393c2e72e6b75b3c52c473dc49bce8/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1b481017acfc51063d6ab69de6e310634ceb6804", "url": "https://api.github.com/repos/rust-lang/rust/commits/1b481017acfc51063d6ab69de6e310634ceb6804", "html_url": "https://github.com/rust-lang/rust/commit/1b481017acfc51063d6ab69de6e310634ceb6804"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "c298213fb7c1cd8d1b018b4b625f6cd2519960bc", "filename": "src/libcore/pipes.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/04d9ea6f32393c2e72e6b75b3c52c473dc49bce8/src%2Flibcore%2Fpipes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/04d9ea6f32393c2e72e6b75b3c52c473dc49bce8/src%2Flibcore%2Fpipes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fpipes.rs?ref=04d9ea6f32393c2e72e6b75b3c52c473dc49bce8", "patch": "@@ -416,7 +416,7 @@ pub fn recv<T: Send, Tbuffer: Send>(p: RecvPacketBuffered<T, Tbuffer>) -> T {\n \n /** Attempts to receive a message from a pipe.\n \n-Returns `none` if the sender has closed the connection without sending\n+Returns `None` if the sender has closed the connection without sending\n a message, or `Some(T)` if a message was received.\n \n */\n@@ -1149,7 +1149,7 @@ pub fn SharedChan<T:Send>(c: Chan<T>) -> SharedChan<T> {\n \n /// Receive a message from one of two endpoints.\n pub trait Select2<T: Send, U: Send> {\n-    /// Receive a message or return `none` if a connection closes.\n+    /// Receive a message or return `None` if a connection closes.\n     fn try_select() -> Either<Option<T>, Option<U>>;\n     /// Receive a message or fail if a connection closes.\n     fn select() -> Either<T, U>;"}]}