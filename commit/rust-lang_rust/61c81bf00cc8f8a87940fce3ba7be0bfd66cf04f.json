{"sha": "61c81bf00cc8f8a87940fce3ba7be0bfd66cf04f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjYxYzgxYmYwMGNjOGY4YTg3OTQwZmNlM2JhN2JlMGJmZDY2Y2YwNGY=", "commit": {"author": {"name": "Cameron Zwarich", "email": "zwarich@mozilla.com", "date": "2014-06-07T07:44:01Z"}, "committer": {"name": "Cameron Zwarich", "email": "zwarich@mozilla.com", "date": "2014-06-07T09:31:01Z"}, "message": "Add more borrowck tests for functional update moves\n\nAdd more borrowck field-sensitivity tests for functional update moves.\nThis makes the collection of test functions more combinatorially\nexhaustive.", "tree": {"sha": "6bfd04c6d317a94e47c50d451d010f8d6f509fc8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6bfd04c6d317a94e47c50d451d010f8d6f509fc8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/61c81bf00cc8f8a87940fce3ba7be0bfd66cf04f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/61c81bf00cc8f8a87940fce3ba7be0bfd66cf04f", "html_url": "https://github.com/rust-lang/rust/commit/61c81bf00cc8f8a87940fce3ba7be0bfd66cf04f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/61c81bf00cc8f8a87940fce3ba7be0bfd66cf04f/comments", "author": null, "committer": null, "parents": [{"sha": "8a543ffc76eea08db59cffbd6f8be7926bdb78c2", "url": "https://api.github.com/repos/rust-lang/rust/commits/8a543ffc76eea08db59cffbd6f8be7926bdb78c2", "html_url": "https://github.com/rust-lang/rust/commit/8a543ffc76eea08db59cffbd6f8be7926bdb78c2"}], "stats": {"total": 50, "additions": 50, "deletions": 0}, "files": [{"sha": "7f9a1427d7252557904e21c151d8576ba4e6cd2a", "filename": "src/test/run-pass/borrowck-field-sensitivity.rs", "status": "modified", "additions": 50, "deletions": 0, "changes": 50, "blob_url": "https://github.com/rust-lang/rust/blob/61c81bf00cc8f8a87940fce3ba7be0bfd66cf04f/src%2Ftest%2Frun-pass%2Fborrowck-field-sensitivity.rs", "raw_url": "https://github.com/rust-lang/rust/raw/61c81bf00cc8f8a87940fce3ba7be0bfd66cf04f/src%2Ftest%2Frun-pass%2Fborrowck-field-sensitivity.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fborrowck-field-sensitivity.rs?ref=61c81bf00cc8f8a87940fce3ba7be0bfd66cf04f", "patch": "@@ -125,41 +125,83 @@ fn copy_after_assign_after_move() {\n     drop(*x.b);\n }\n \n+fn copy_after_assign_after_fu_move() {\n+    let mut x = A { a: 1, b: box 2 };\n+    let _y = A { a: 3, .. x };\n+    x = A { a: 3, b: box 4 };\n+    drop(*x.b);\n+}\n+\n fn copy_after_field_assign_after_move() {\n     let mut x = A { a: 1, b: box 2 };\n     drop(x.b);\n     x.b = box 3;\n     drop(*x.b);\n }\n \n+fn copy_after_field_assign_after_fu_move() {\n+    let mut x = A { a: 1, b: box 2 };\n+    let _y = A { a: 3, .. x };\n+    x.b = box 3;\n+    drop(*x.b);\n+}\n+\n fn borrow_after_assign_after_move() {\n     let mut x = A { a: 1, b: box 2 };\n     drop(x.b);\n     x = A { a: 3, b: box 4 };\n     borrow(&x.b);\n }\n \n+fn borrow_after_assign_after_fu_move() {\n+    let mut x = A { a: 1, b: box 2 };\n+    let _y = A { a: 3, .. x };\n+    x = A { a: 3, b: box 4 };\n+    borrow(&x.b);\n+}\n+\n fn borrow_after_field_assign_after_move() {\n     let mut x = A { a: 1, b: box 2 };\n     drop(x.b);\n     x.b = box 3;\n     borrow(&x.b);\n }\n \n+fn borrow_after_field_assign_after_fu_move() {\n+    let mut x = A { a: 1, b: box 2 };\n+    let _y = A { a: 3, .. x };\n+    x.b = box 3;\n+    borrow(&x.b);\n+}\n+\n fn move_after_assign_after_move() {\n     let mut x = A { a: 1, b: box 2 };\n     let _y = x.b;\n     x = A { a: 3, b: box 4 };\n     drop(x.b);\n }\n \n+fn move_after_assign_after_fu_move() {\n+    let mut x = A { a: 1, b: box 2 };\n+    let _y = A { a: 3, .. x };\n+    x = A { a: 3, b: box 4 };\n+    drop(x.b);\n+}\n+\n fn move_after_field_assign_after_move() {\n     let mut x = A { a: 1, b: box 2 };\n     drop(x.b);\n     x.b = box 3;\n     drop(x.b);\n }\n \n+fn move_after_field_assign_after_fu_move() {\n+    let mut x = A { a: 1, b: box 2 };\n+    let _y = A { a: 3, .. x };\n+    x.b = box 3;\n+    drop(x.b);\n+}\n+\n fn copy_after_assign_after_uninit() {\n     let mut x: A;\n     x = A { a: 1, b: box 2 };\n@@ -200,11 +242,19 @@ fn main() {\n     fu_move_after_fu_move();\n \n     copy_after_assign_after_move();\n+    copy_after_assign_after_fu_move();\n     copy_after_field_assign_after_move();\n+    copy_after_field_assign_after_fu_move();\n+\n     borrow_after_assign_after_move();\n+    borrow_after_assign_after_fu_move();\n     borrow_after_field_assign_after_move();\n+    borrow_after_field_assign_after_fu_move();\n+\n     move_after_assign_after_move();\n+    move_after_assign_after_fu_move();\n     move_after_field_assign_after_move();\n+    move_after_field_assign_after_fu_move();\n \n     copy_after_assign_after_uninit();\n     borrow_after_assign_after_uninit();"}]}