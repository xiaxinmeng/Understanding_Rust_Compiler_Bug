{"sha": "0a021d5900a9ee55875fb247614a0671b71d3271", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBhMDIxZDU5MDBhOWVlNTU4NzVmYjI0NzYxNGEwNjcxYjcxZDMyNzE=", "commit": {"author": {"name": "Labelray", "email": "labelray@icloud.com", "date": "2021-08-06T14:46:20Z"}, "committer": {"name": "Labelray", "email": "labelray@icloud.com", "date": "2021-08-23T13:05:44Z"}, "message": "Add new lints `negative_feature_names` and `redundant_feature_names`", "tree": {"sha": "c6a976149719e6fd6e621c52abbb282bb5c3bf4d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c6a976149719e6fd6e621c52abbb282bb5c3bf4d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0a021d5900a9ee55875fb247614a0671b71d3271", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0a021d5900a9ee55875fb247614a0671b71d3271", "html_url": "https://github.com/rust-lang/rust/commit/0a021d5900a9ee55875fb247614a0671b71d3271", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0a021d5900a9ee55875fb247614a0671b71d3271/comments", "author": {"login": "Labelray", "id": 19207711, "node_id": "MDQ6VXNlcjE5MjA3NzEx", "avatar_url": "https://avatars.githubusercontent.com/u/19207711?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Labelray", "html_url": "https://github.com/Labelray", "followers_url": "https://api.github.com/users/Labelray/followers", "following_url": "https://api.github.com/users/Labelray/following{/other_user}", "gists_url": "https://api.github.com/users/Labelray/gists{/gist_id}", "starred_url": "https://api.github.com/users/Labelray/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Labelray/subscriptions", "organizations_url": "https://api.github.com/users/Labelray/orgs", "repos_url": "https://api.github.com/users/Labelray/repos", "events_url": "https://api.github.com/users/Labelray/events{/privacy}", "received_events_url": "https://api.github.com/users/Labelray/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Labelray", "id": 19207711, "node_id": "MDQ6VXNlcjE5MjA3NzEx", "avatar_url": "https://avatars.githubusercontent.com/u/19207711?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Labelray", "html_url": "https://github.com/Labelray", "followers_url": "https://api.github.com/users/Labelray/followers", "following_url": "https://api.github.com/users/Labelray/following{/other_user}", "gists_url": "https://api.github.com/users/Labelray/gists{/gist_id}", "starred_url": "https://api.github.com/users/Labelray/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Labelray/subscriptions", "organizations_url": "https://api.github.com/users/Labelray/orgs", "repos_url": "https://api.github.com/users/Labelray/repos", "events_url": "https://api.github.com/users/Labelray/events{/privacy}", "received_events_url": "https://api.github.com/users/Labelray/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2dbf0c138de34d7805b9291705f2e2361324f219", "url": "https://api.github.com/repos/rust-lang/rust/commits/2dbf0c138de34d7805b9291705f2e2361324f219", "html_url": "https://github.com/rust-lang/rust/commit/2dbf0c138de34d7805b9291705f2e2361324f219"}], "stats": {"total": 260, "additions": 260, "deletions": 0}, "files": [{"sha": "1c182c05f509d193b0dfe444b9ec6aba3b8cd3fe", "filename": "CHANGELOG.md", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0a021d5900a9ee55875fb247614a0671b71d3271/CHANGELOG.md", "raw_url": "https://github.com/rust-lang/rust/raw/0a021d5900a9ee55875fb247614a0671b71d3271/CHANGELOG.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/CHANGELOG.md?ref=0a021d5900a9ee55875fb247614a0671b71d3271", "patch": "@@ -2828,6 +2828,7 @@ Released 2018-09-13\n [`needless_update`]: https://rust-lang.github.io/rust-clippy/master/index.html#needless_update\n [`neg_cmp_op_on_partial_ord`]: https://rust-lang.github.io/rust-clippy/master/index.html#neg_cmp_op_on_partial_ord\n [`neg_multiply`]: https://rust-lang.github.io/rust-clippy/master/index.html#neg_multiply\n+[`negative_feature_names`]: https://rust-lang.github.io/rust-clippy/master/index.html#negative_feature_names\n [`never_loop`]: https://rust-lang.github.io/rust-clippy/master/index.html#never_loop\n [`new_ret_no_self`]: https://rust-lang.github.io/rust-clippy/master/index.html#new_ret_no_self\n [`new_without_default`]: https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n@@ -2881,6 +2882,7 @@ Released 2018-09-13\n [`redundant_closure_call`]: https://rust-lang.github.io/rust-clippy/master/index.html#redundant_closure_call\n [`redundant_closure_for_method_calls`]: https://rust-lang.github.io/rust-clippy/master/index.html#redundant_closure_for_method_calls\n [`redundant_else`]: https://rust-lang.github.io/rust-clippy/master/index.html#redundant_else\n+[`redundant_feature_names`]: https://rust-lang.github.io/rust-clippy/master/index.html#redundant_feature_names\n [`redundant_field_names`]: https://rust-lang.github.io/rust-clippy/master/index.html#redundant_field_names\n [`redundant_pattern`]: https://rust-lang.github.io/rust-clippy/master/index.html#redundant_pattern\n [`redundant_pattern_matching`]: https://rust-lang.github.io/rust-clippy/master/index.html#redundant_pattern_matching"}, {"sha": "eef1407a80cf15e2209993cc948e44e229dc63be", "filename": "clippy_lints/src/feature_name.rs", "status": "added", "additions": 164, "deletions": 0, "changes": 164, "blob_url": "https://github.com/rust-lang/rust/blob/0a021d5900a9ee55875fb247614a0671b71d3271/clippy_lints%2Fsrc%2Ffeature_name.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0a021d5900a9ee55875fb247614a0671b71d3271/clippy_lints%2Fsrc%2Ffeature_name.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Ffeature_name.rs?ref=0a021d5900a9ee55875fb247614a0671b71d3271", "patch": "@@ -0,0 +1,164 @@\n+use clippy_utils::diagnostics::span_lint_and_help;\n+use clippy_utils::{diagnostics::span_lint, is_lint_allowed};\n+use rustc_hir::{Crate, CRATE_HIR_ID};\n+use rustc_lint::{LateContext, LateLintPass};\n+use rustc_session::{declare_lint_pass, declare_tool_lint};\n+use rustc_span::source_map::DUMMY_SP;\n+\n+declare_clippy_lint! {\n+    /// ### What it does\n+    /// Checks for feature names with prefix `use-`, `with-` or suffix `-support`\n+    ///\n+    /// ### Why is this bad?\n+    /// These prefixes and suffixes have no significant meaning.\n+    ///\n+    /// ### Example\n+    /// ```toml\n+    /// # The `Cargo.toml` with feature name redundancy\n+    /// [features]\n+    /// default = [\"use-abc\", \"with-def\", \"ghi-support\"]\n+    /// use-abc = []  // redundant\n+    /// with-def = []   // redundant\n+    /// ghi-support = []   // redundant\n+    /// ```\n+    ///\n+    /// Use instead:\n+    /// ```toml\n+    /// [features]\n+    /// default = [\"abc\", \"def\", \"ghi\"]\n+    /// abc = []\n+    /// def = []\n+    /// ghi = []\n+    /// ```\n+    ///\n+    pub REDUNDANT_FEATURE_NAMES,\n+    cargo,\n+    \"usage of a redundant feature name\"\n+}\n+\n+declare_clippy_lint! {\n+    /// ### What it does\n+    /// Checks for negative feature names with prefix `no-` or `not-`\n+    ///\n+    /// ### Why is this bad?\n+    /// Features are supposed to be additive, and negatively-named features violate it.\n+    ///\n+    /// ### Example\n+    /// ```toml\n+    /// # The `Cargo.toml` with negative feature names\n+    /// [features]\n+    /// default = []\n+    /// no-abc = []\n+    /// not-def = []\n+    ///\n+    /// ```\n+    /// Use instead:\n+    /// ```toml\n+    /// [features]\n+    /// default = [\"abc\", \"def\"]\n+    /// abc = []\n+    /// def = []\n+    ///\n+    /// ```\n+    pub NEGATIVE_FEATURE_NAMES,\n+    cargo,\n+    \"usage of a negative feature name\"\n+}\n+\n+declare_lint_pass!(FeatureName => [REDUNDANT_FEATURE_NAMES, NEGATIVE_FEATURE_NAMES]);\n+\n+static PREFIXES: [&str; 8] = [\"no-\", \"no_\", \"not-\", \"not_\", \"use-\", \"use_\", \"with-\", \"with_\"];\n+static SUFFIXES: [&str; 2] = [\"-support\", \"_support\"];\n+\n+fn is_negative_prefix(s: &str) -> bool {\n+    s.starts_with(\"no\")\n+}\n+\n+fn lint(cx: &LateContext<'_>, feature: &str, substring: &str, is_prefix: bool) {\n+    let is_negative = is_prefix && is_negative_prefix(substring);\n+    span_lint_and_help(\n+        cx,\n+        if is_negative {\n+            NEGATIVE_FEATURE_NAMES\n+        } else {\n+            REDUNDANT_FEATURE_NAMES\n+        },\n+        DUMMY_SP,\n+        &format!(\n+            \"the \\\"{}\\\" {} in the feature name \\\"{}\\\" is {}\",\n+            substring,\n+            if is_prefix { \"prefix\" } else { \"suffix\" },\n+            feature,\n+            if is_negative { \"negative\" } else { \"redundant\" }\n+        ),\n+        None,\n+        &format!(\n+            \"consider renaming the feature to \\\"{}\\\"{}\",\n+            if is_prefix {\n+                feature.strip_prefix(substring)\n+            } else {\n+                feature.strip_suffix(substring)\n+            }\n+            .unwrap(),\n+            if is_negative {\n+                \", but make sure the feature adds functionality\"\n+            } else {\n+                \"\"\n+            }\n+        ),\n+    );\n+}\n+\n+impl LateLintPass<'_> for FeatureName {\n+    fn check_crate(&mut self, cx: &LateContext<'_>, _: &Crate<'_>) {\n+        if is_lint_allowed(cx, REDUNDANT_FEATURE_NAMES, CRATE_HIR_ID)\n+            && is_lint_allowed(cx, NEGATIVE_FEATURE_NAMES, CRATE_HIR_ID)\n+        {\n+            return;\n+        }\n+\n+        let metadata = unwrap_cargo_metadata!(cx, REDUNDANT_FEATURE_NAMES, false);\n+\n+        for package in metadata.packages {\n+            let mut features: Vec<&String> = package.features.keys().collect();\n+            features.sort();\n+            for feature in features {\n+                let prefix_opt = {\n+                    let i = PREFIXES.partition_point(|prefix| prefix < &feature.as_str());\n+                    if i > 0 && feature.starts_with(PREFIXES[i - 1]) {\n+                        Some(PREFIXES[i - 1])\n+                    } else {\n+                        None\n+                    }\n+                };\n+                if let Some(prefix) = prefix_opt {\n+                    lint(cx, feature, prefix, true);\n+                }\n+\n+                let suffix_opt: Option<&str> = {\n+                    let i = SUFFIXES.partition_point(|suffix| {\n+                        suffix.bytes().rev().cmp(feature.bytes().rev()) == std::cmp::Ordering::Less\n+                    });\n+                    if i > 0 && feature.ends_with(SUFFIXES[i - 1]) {\n+                        Some(SUFFIXES[i - 1])\n+                    } else {\n+                        None\n+                    }\n+                };\n+                if let Some(suffix) = suffix_opt {\n+                    lint(cx, feature, suffix, false);\n+                }\n+            }\n+        }\n+    }\n+}\n+\n+#[test]\n+fn test_prefixes_sorted() {\n+    let mut sorted_prefixes = PREFIXES;\n+    sorted_prefixes.sort_unstable();\n+    assert_eq!(PREFIXES, sorted_prefixes);\n+    let mut sorted_suffixes = SUFFIXES;\n+    sorted_suffixes.sort_by(|a, b| a.bytes().rev().cmp(b.bytes().rev()));\n+    assert_eq!(SUFFIXES, sorted_suffixes);\n+}"}, {"sha": "ce671be069af4066c927189b69637d07175742db", "filename": "clippy_lints/src/lib.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/0a021d5900a9ee55875fb247614a0671b71d3271/clippy_lints%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0a021d5900a9ee55875fb247614a0671b71d3271/clippy_lints%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flib.rs?ref=0a021d5900a9ee55875fb247614a0671b71d3271", "patch": "@@ -213,6 +213,7 @@ mod exhaustive_items;\n mod exit;\n mod explicit_write;\n mod fallible_impl_from;\n+mod feature_name;\n mod float_equality_without_abs;\n mod float_literal;\n mod floating_point_arithmetic;\n@@ -628,6 +629,8 @@ pub fn register_plugins(store: &mut rustc_lint::LintStore, sess: &Session, conf:\n         exit::EXIT,\n         explicit_write::EXPLICIT_WRITE,\n         fallible_impl_from::FALLIBLE_IMPL_FROM,\n+        feature_name::NEGATIVE_FEATURE_NAMES,\n+        feature_name::REDUNDANT_FEATURE_NAMES,\n         float_equality_without_abs::FLOAT_EQUALITY_WITHOUT_ABS,\n         float_literal::EXCESSIVE_PRECISION,\n         float_literal::LOSSY_FLOAT_LITERAL,\n@@ -1781,6 +1784,8 @@ pub fn register_plugins(store: &mut rustc_lint::LintStore, sess: &Session, conf:\n \n     store.register_group(true, \"clippy::cargo\", Some(\"clippy_cargo\"), vec![\n         LintId::of(cargo_common_metadata::CARGO_COMMON_METADATA),\n+        LintId::of(feature_name::NEGATIVE_FEATURE_NAMES),\n+        LintId::of(feature_name::REDUNDANT_FEATURE_NAMES),\n         LintId::of(multiple_crate_versions::MULTIPLE_CRATE_VERSIONS),\n         LintId::of(wildcard_dependencies::WILDCARD_DEPENDENCIES),\n     ]);\n@@ -2105,6 +2110,7 @@ pub fn register_plugins(store: &mut rustc_lint::LintStore, sess: &Session, conf:\n     store.register_early_pass(move || box disallowed_script_idents::DisallowedScriptIdents::new(&scripts));\n     store.register_late_pass(|| box strlen_on_c_strings::StrlenOnCStrings);\n     store.register_late_pass(move || box self_named_constructors::SelfNamedConstructors);\n+    store.register_late_pass(move || box feature_name::FeatureName);\n }\n \n #[rustfmt::skip]"}, {"sha": "97d51462a946fc3dd4d1c59acf17e5583b540858", "filename": "tests/ui-cargo/feature_name/fail/Cargo.toml", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/0a021d5900a9ee55875fb247614a0671b71d3271/tests%2Fui-cargo%2Ffeature_name%2Ffail%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/0a021d5900a9ee55875fb247614a0671b71d3271/tests%2Fui-cargo%2Ffeature_name%2Ffail%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui-cargo%2Ffeature_name%2Ffail%2FCargo.toml?ref=0a021d5900a9ee55875fb247614a0671b71d3271", "patch": "@@ -0,0 +1,21 @@\n+\n+# Content that triggers the lint goes here\n+\n+[package]\n+name = \"feature_name\"\n+version = \"0.1.0\"\n+publish = false\n+\n+[workspace]\n+\n+[features]\n+use-qwq = []\n+use_qwq = []\n+with-owo = []\n+with_owo = []\n+qvq-support = []\n+qvq_support = []\n+no-qaq = []\n+no_qaq = []\n+not-orz = []\n+not_orz = []"}, {"sha": "64f01a98c90e9c0ab647d28b3a693cc86fd67ab9", "filename": "tests/ui-cargo/feature_name/fail/src/main.rs", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/0a021d5900a9ee55875fb247614a0671b71d3271/tests%2Fui-cargo%2Ffeature_name%2Ffail%2Fsrc%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0a021d5900a9ee55875fb247614a0671b71d3271/tests%2Fui-cargo%2Ffeature_name%2Ffail%2Fsrc%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui-cargo%2Ffeature_name%2Ffail%2Fsrc%2Fmain.rs?ref=0a021d5900a9ee55875fb247614a0671b71d3271", "patch": "@@ -0,0 +1,7 @@\n+// compile-flags: --crate-name=feature_name\n+#![warn(clippy::redundant_feature_names)]\n+#![warn(clippy::negative_feature_names)]\n+\n+fn main() {\n+    // test code goes here\n+}"}, {"sha": "b9e6cb49bc982fbcb1f1b909d0d65a7eaaf61076", "filename": "tests/ui-cargo/feature_name/fail/src/main.stderr", "status": "added", "additions": 44, "deletions": 0, "changes": 44, "blob_url": "https://github.com/rust-lang/rust/blob/0a021d5900a9ee55875fb247614a0671b71d3271/tests%2Fui-cargo%2Ffeature_name%2Ffail%2Fsrc%2Fmain.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/0a021d5900a9ee55875fb247614a0671b71d3271/tests%2Fui-cargo%2Ffeature_name%2Ffail%2Fsrc%2Fmain.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui-cargo%2Ffeature_name%2Ffail%2Fsrc%2Fmain.stderr?ref=0a021d5900a9ee55875fb247614a0671b71d3271", "patch": "@@ -0,0 +1,44 @@\n+error: the \"no-\" prefix in the feature name \"no-qaq\" is negative\n+   |\n+   = note: `-D clippy::negative-feature-names` implied by `-D warnings`\n+   = help: consider renaming the feature to \"qaq\", but make sure the feature adds functionality\n+\n+error: the \"no_\" prefix in the feature name \"no_qaq\" is negative\n+   |\n+   = help: consider renaming the feature to \"qaq\", but make sure the feature adds functionality\n+\n+error: the \"not-\" prefix in the feature name \"not-orz\" is negative\n+   |\n+   = help: consider renaming the feature to \"orz\", but make sure the feature adds functionality\n+\n+error: the \"not_\" prefix in the feature name \"not_orz\" is negative\n+   |\n+   = help: consider renaming the feature to \"orz\", but make sure the feature adds functionality\n+\n+error: the \"-support\" suffix in the feature name \"qvq-support\" is redundant\n+   |\n+   = note: `-D clippy::redundant-feature-names` implied by `-D warnings`\n+   = help: consider renaming the feature to \"qvq\"\n+\n+error: the \"_support\" suffix in the feature name \"qvq_support\" is redundant\n+   |\n+   = help: consider renaming the feature to \"qvq\"\n+\n+error: the \"use-\" prefix in the feature name \"use-qwq\" is redundant\n+   |\n+   = help: consider renaming the feature to \"qwq\"\n+\n+error: the \"use_\" prefix in the feature name \"use_qwq\" is redundant\n+   |\n+   = help: consider renaming the feature to \"qwq\"\n+\n+error: the \"with-\" prefix in the feature name \"with-owo\" is redundant\n+   |\n+   = help: consider renaming the feature to \"owo\"\n+\n+error: the \"with_\" prefix in the feature name \"with_owo\" is redundant\n+   |\n+   = help: consider renaming the feature to \"owo\"\n+\n+error: aborting due to 10 previous errors\n+"}, {"sha": "cf947312bd4798b38f721d1fa879a00d4cb461b2", "filename": "tests/ui-cargo/feature_name/pass/Cargo.toml", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/0a021d5900a9ee55875fb247614a0671b71d3271/tests%2Fui-cargo%2Ffeature_name%2Fpass%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/0a021d5900a9ee55875fb247614a0671b71d3271/tests%2Fui-cargo%2Ffeature_name%2Fpass%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui-cargo%2Ffeature_name%2Fpass%2FCargo.toml?ref=0a021d5900a9ee55875fb247614a0671b71d3271", "patch": "@@ -0,0 +1,9 @@\n+\n+# This file should not trigger the lint\n+\n+[package]\n+name = \"feature_name\"\n+version = \"0.1.0\"\n+publish = false\n+\n+[workspace]"}, {"sha": "64f01a98c90e9c0ab647d28b3a693cc86fd67ab9", "filename": "tests/ui-cargo/feature_name/pass/src/main.rs", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/0a021d5900a9ee55875fb247614a0671b71d3271/tests%2Fui-cargo%2Ffeature_name%2Fpass%2Fsrc%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0a021d5900a9ee55875fb247614a0671b71d3271/tests%2Fui-cargo%2Ffeature_name%2Fpass%2Fsrc%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui-cargo%2Ffeature_name%2Fpass%2Fsrc%2Fmain.rs?ref=0a021d5900a9ee55875fb247614a0671b71d3271", "patch": "@@ -0,0 +1,7 @@\n+// compile-flags: --crate-name=feature_name\n+#![warn(clippy::redundant_feature_names)]\n+#![warn(clippy::negative_feature_names)]\n+\n+fn main() {\n+    // test code goes here\n+}"}, {"sha": "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391", "filename": "tests/ui/missing-doc-crate.stderr", "status": "removed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/2dbf0c138de34d7805b9291705f2e2361324f219/tests%2Fui%2Fmissing-doc-crate.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/2dbf0c138de34d7805b9291705f2e2361324f219/tests%2Fui%2Fmissing-doc-crate.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmissing-doc-crate.stderr?ref=2dbf0c138de34d7805b9291705f2e2361324f219"}, {"sha": "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391", "filename": "tests/ui/missing_const_for_fn/cant_be_const.stderr", "status": "removed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/2dbf0c138de34d7805b9291705f2e2361324f219/tests%2Fui%2Fmissing_const_for_fn%2Fcant_be_const.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/2dbf0c138de34d7805b9291705f2e2361324f219/tests%2Fui%2Fmissing_const_for_fn%2Fcant_be_const.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmissing_const_for_fn%2Fcant_be_const.stderr?ref=2dbf0c138de34d7805b9291705f2e2361324f219"}, {"sha": "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391", "filename": "tests/ui/rc_buffer_redefined_string.stderr", "status": "removed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/2dbf0c138de34d7805b9291705f2e2361324f219/tests%2Fui%2Frc_buffer_redefined_string.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/2dbf0c138de34d7805b9291705f2e2361324f219/tests%2Fui%2Frc_buffer_redefined_string.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Frc_buffer_redefined_string.stderr?ref=2dbf0c138de34d7805b9291705f2e2361324f219"}]}