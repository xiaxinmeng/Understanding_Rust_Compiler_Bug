{"sha": "b7c4a57465b8d5599c7e799e1aafe12a458156f8", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI3YzRhNTc0NjViOGQ1NTk5YzdlNzk5ZTFhYWZlMTJhNDU4MTU2Zjg=", "commit": {"author": {"name": "Fabian Zaiser", "email": "fabian.zaiser@gmail.com", "date": "2018-04-15T21:49:41Z"}, "committer": {"name": "Fabian Zaiser", "email": "fabian.zaiser@gmail.com", "date": "2018-04-15T21:49:41Z"}, "message": "Rebase and fix conflicts.", "tree": {"sha": "3a36e8856bbb24d0720dfbdd7c140ac30d76edb3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3a36e8856bbb24d0720dfbdd7c140ac30d76edb3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b7c4a57465b8d5599c7e799e1aafe12a458156f8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b7c4a57465b8d5599c7e799e1aafe12a458156f8", "html_url": "https://github.com/rust-lang/rust/commit/b7c4a57465b8d5599c7e799e1aafe12a458156f8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b7c4a57465b8d5599c7e799e1aafe12a458156f8/comments", "author": {"login": "fanzier", "id": 5846332, "node_id": "MDQ6VXNlcjU4NDYzMzI=", "avatar_url": "https://avatars.githubusercontent.com/u/5846332?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fanzier", "html_url": "https://github.com/fanzier", "followers_url": "https://api.github.com/users/fanzier/followers", "following_url": "https://api.github.com/users/fanzier/following{/other_user}", "gists_url": "https://api.github.com/users/fanzier/gists{/gist_id}", "starred_url": "https://api.github.com/users/fanzier/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fanzier/subscriptions", "organizations_url": "https://api.github.com/users/fanzier/orgs", "repos_url": "https://api.github.com/users/fanzier/repos", "events_url": "https://api.github.com/users/fanzier/events{/privacy}", "received_events_url": "https://api.github.com/users/fanzier/received_events", "type": "User", "site_admin": false}, "committer": {"login": "fanzier", "id": 5846332, "node_id": "MDQ6VXNlcjU4NDYzMzI=", "avatar_url": "https://avatars.githubusercontent.com/u/5846332?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fanzier", "html_url": "https://github.com/fanzier", "followers_url": "https://api.github.com/users/fanzier/followers", "following_url": "https://api.github.com/users/fanzier/following{/other_user}", "gists_url": "https://api.github.com/users/fanzier/gists{/gist_id}", "starred_url": "https://api.github.com/users/fanzier/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fanzier/subscriptions", "organizations_url": "https://api.github.com/users/fanzier/orgs", "repos_url": "https://api.github.com/users/fanzier/repos", "events_url": "https://api.github.com/users/fanzier/events{/privacy}", "received_events_url": "https://api.github.com/users/fanzier/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "de475582c4dc1c8f532eed578d574979283f1c42", "url": "https://api.github.com/repos/rust-lang/rust/commits/de475582c4dc1c8f532eed578d574979283f1c42", "html_url": "https://github.com/rust-lang/rust/commit/de475582c4dc1c8f532eed578d574979283f1c42"}], "stats": {"total": 12, "additions": 7, "deletions": 5}, "files": [{"sha": "36e60cee788dc6ea2f04ad9e947b09d84843804e", "filename": "src/librustc_traits/lowering.rs", "status": "modified", "additions": 7, "deletions": 5, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/b7c4a57465b8d5599c7e799e1aafe12a458156f8/src%2Flibrustc_traits%2Flowering.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b7c4a57465b8d5599c7e799e1aafe12a458156f8/src%2Flibrustc_traits%2Flowering.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_traits%2Flowering.rs?ref=b7c4a57465b8d5599c7e799e1aafe12a458156f8", "patch": "@@ -124,13 +124,13 @@ crate fn program_clauses_for<'a, 'tcx>(tcx: TyCtxt<'a, 'tcx, 'tcx>, def_id: DefI\n         hir::map::Node::NodeItem(item) => match item.node {\n             hir::ItemTrait(..) => program_clauses_for_trait(tcx, def_id),\n             hir::ItemImpl(..) => program_clauses_for_impl(tcx, def_id),\n-            _ => Lrc::new(vec![]),\n+            _ => Lrc::new(tcx.mk_clauses(iter::empty::<Clause>())),\n         }\n         hir::map::Node::NodeImplItem(item) => {\n             if let hir::ImplItemKind::Type(..) = item.node {\n                 program_clauses_for_associated_type_value(tcx, def_id)\n             } else {\n-                Lrc::new(vec![])\n+                Lrc::new(tcx.mk_clauses(iter::empty::<Clause>()))\n             }\n         },\n \n@@ -247,7 +247,7 @@ fn program_clauses_for_impl<'a, 'tcx>(tcx: TyCtxt<'a, 'tcx, 'tcx>, def_id: DefId\n pub fn program_clauses_for_associated_type_value<'a, 'tcx>(\n     tcx: TyCtxt<'a, 'tcx, 'tcx>,\n     item_id: DefId,\n-) -> Lrc<Vec<Clause<'tcx>>> {\n+) -> Lrc<&'tcx Slice<Clause<'tcx>>> {\n     // Rule Normalize-From-Impl (see rustc guide)\n     //\n     // ```impl<P0..Pn> Trait<A1..An> for A0\n@@ -289,9 +289,11 @@ pub fn program_clauses_for_associated_type_value<'a, 'tcx>(\n     // `Normalize(... -> T) :- ...`\n     let clause = ProgramClause {\n         goal: normalize_goal,\n-        hypotheses: where_clauses.into_iter().map(|wc| wc.into()).collect(),\n+        hypotheses: tcx.mk_goals(\n+            where_clauses.into_iter().map(|wc| Goal::from_poly_domain_goal(wc, tcx))\n+        ),\n     };\n-    Lrc::new(vec![Clause::ForAll(ty::Binder::dummy(clause))])\n+    Lrc::new(tcx.mk_clauses(iter::once(Clause::ForAll(ty::Binder::dummy(clause)))))\n }\n \n pub fn dump_program_clauses<'a, 'tcx>(tcx: TyCtxt<'a, 'tcx, 'tcx>) {"}]}