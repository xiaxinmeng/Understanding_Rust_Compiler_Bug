{"sha": "3b0e797ee6678175d1df9a01e944312b348d05b0", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNiMGU3OTdlZTY2NzgxNzVkMWRmOWEwMWU5NDQzMTJiMzQ4ZDA1YjA=", "commit": {"author": {"name": "Yuki Okushi", "email": "jtitor@2k36.org", "date": "2021-08-06T16:46:32Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-08-06T16:46:32Z"}, "message": "Rollup merge of #87761 - rusticstuff:rustc_error_overflow, r=Mark-Simulacrum\n\nFix overflow in rustc happening if the `err_count()` is reduced in a stage.\n\nThis can happen if stashed diagnostics are removed or replaced with fewer errors. The semantics stay the same if built without overflow checks. Fixes #84219.\n\nBackground: I came across this independently by running `RUSTFLAGS=\"-C overflow-checks=on\" ./x.py test`. Fixing this will allow us to move on and find further overflow errors with testing or fuzzing.", "tree": {"sha": "ab80020ed98ac5e68b40ab64927126b943b4ccab", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ab80020ed98ac5e68b40ab64927126b943b4ccab"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3b0e797ee6678175d1df9a01e944312b348d05b0", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJhDWdoCRBK7hj4Ov3rIwAA068IABxCfLPOaidmF1TOeyWw3rzd\ncOWsOOPwOaSHejzpCrB1pvja8rrpJg1HxvaJiWG78ZmRTqvmZjwSIr6HaURJW3jq\nidG0awWfbuPa6kJ33oLGQxtT8QLnrYPAyhhb2k/fYpCFLhuJFSXACn/XwIdgg2Ku\n/9gHtDcvcwQyW3hxwDjQQRXloe39nDUuX492KGQDgZwz/4qXZXHA/wS27pODmlIR\nsMZ9sFDOMboq+ACEesQCHYIxOSAubc4/0sxX6JjxtcXE5o9vSBgwF2+PRCY5m5f5\nALjZBnOFMS1oy0YL6aEs9q9hI2Q1oJTxO7T1rYf0WgbmJphXM5H3KsouB0LiPY0=\n=KJSO\n-----END PGP SIGNATURE-----\n", "payload": "tree ab80020ed98ac5e68b40ab64927126b943b4ccab\nparent 352ad622656ee3a8d8362cb92f5b608a13bc14f5\nparent 5ff06fb77f906b65b6a5301e84acc82a246af2b0\nauthor Yuki Okushi <jtitor@2k36.org> 1628268392 +0900\ncommitter GitHub <noreply@github.com> 1628268392 +0900\n\nRollup merge of #87761 - rusticstuff:rustc_error_overflow, r=Mark-Simulacrum\n\nFix overflow in rustc happening if the `err_count()` is reduced in a stage.\n\nThis can happen if stashed diagnostics are removed or replaced with fewer errors. The semantics stay the same if built without overflow checks. Fixes #84219.\n\nBackground: I came across this independently by running `RUSTFLAGS=\"-C overflow-checks=on\" ./x.py test`. Fixing this will allow us to move on and find further overflow errors with testing or fuzzing.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3b0e797ee6678175d1df9a01e944312b348d05b0", "html_url": "https://github.com/rust-lang/rust/commit/3b0e797ee6678175d1df9a01e944312b348d05b0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3b0e797ee6678175d1df9a01e944312b348d05b0/comments", "author": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "352ad622656ee3a8d8362cb92f5b608a13bc14f5", "url": "https://api.github.com/repos/rust-lang/rust/commits/352ad622656ee3a8d8362cb92f5b608a13bc14f5", "html_url": "https://github.com/rust-lang/rust/commit/352ad622656ee3a8d8362cb92f5b608a13bc14f5"}, {"sha": "5ff06fb77f906b65b6a5301e84acc82a246af2b0", "url": "https://api.github.com/repos/rust-lang/rust/commits/5ff06fb77f906b65b6a5301e84acc82a246af2b0", "html_url": "https://github.com/rust-lang/rust/commit/5ff06fb77f906b65b6a5301e84acc82a246af2b0"}], "stats": {"total": 3, "additions": 1, "deletions": 2}, "files": [{"sha": "d5c759623e38b82d9ebaeb2ca75c3f881bbe3fdf", "filename": "compiler/rustc_session/src/session.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/3b0e797ee6678175d1df9a01e944312b348d05b0/compiler%2Frustc_session%2Fsrc%2Fsession.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3b0e797ee6678175d1df9a01e944312b348d05b0/compiler%2Frustc_session%2Fsrc%2Fsession.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_session%2Fsrc%2Fsession.rs?ref=3b0e797ee6678175d1df9a01e944312b348d05b0", "patch": "@@ -450,8 +450,7 @@ impl Session {\n     {\n         let old_count = self.err_count();\n         let result = f();\n-        let errors = self.err_count() - old_count;\n-        if errors == 0 { Ok(result) } else { Err(ErrorReported) }\n+        if self.err_count() == old_count { Ok(result) } else { Err(ErrorReported) }\n     }\n     pub fn span_warn<S: Into<MultiSpan>>(&self, sp: S, msg: &str) {\n         self.diagnostic().span_warn(sp, msg)"}]}