{"sha": "cebfcd3256a6ec8655f0d9f45426d6f42a92da9c", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNlYmZjZDMyNTZhNmVjODY1NWYwZDlmNDU0MjZkNmY0MmE5MmRhOWM=", "commit": {"author": {"name": "Felix S. Klock II", "email": "pnkfelix@pnkfx.org", "date": "2021-06-04T20:43:57Z"}, "committer": {"name": "Felix S. Klock II", "email": "pnkfelix@pnkfx.org", "date": "2021-06-04T20:44:28Z"}, "message": "Revert tests added by PR 81167.", "tree": {"sha": "71fd39e3d94af88af0c01cb08516bec9c943bbde", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/71fd39e3d94af88af0c01cb08516bec9c943bbde"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cebfcd3256a6ec8655f0d9f45426d6f42a92da9c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cebfcd3256a6ec8655f0d9f45426d6f42a92da9c", "html_url": "https://github.com/rust-lang/rust/commit/cebfcd3256a6ec8655f0d9f45426d6f42a92da9c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cebfcd3256a6ec8655f0d9f45426d6f42a92da9c/comments", "author": {"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9d96b0ed8c0f37bc09e737e1ab5880e8f5dd43f2", "url": "https://api.github.com/repos/rust-lang/rust/commits/9d96b0ed8c0f37bc09e737e1ab5880e8f5dd43f2", "html_url": "https://github.com/rust-lang/rust/commit/9d96b0ed8c0f37bc09e737e1ab5880e8f5dd43f2"}], "stats": {"total": 50, "additions": 0, "deletions": 50}, "files": [{"sha": "4acd059ab03dfeaab4b80dd7338e3c5330e9eced", "filename": "library/core/tests/const_ptr.rs", "status": "modified", "additions": 0, "deletions": 50, "changes": 50, "blob_url": "https://github.com/rust-lang/rust/blob/cebfcd3256a6ec8655f0d9f45426d6f42a92da9c/library%2Fcore%2Ftests%2Fconst_ptr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cebfcd3256a6ec8655f0d9f45426d6f42a92da9c/library%2Fcore%2Ftests%2Fconst_ptr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Ftests%2Fconst_ptr.rs?ref=cebfcd3256a6ec8655f0d9f45426d6f42a92da9c", "patch": "@@ -49,53 +49,3 @@ fn mut_ptr_read() {\n     const UNALIGNED: u16 = unsafe { UNALIGNED_PTR.read_unaligned() };\n     assert_eq!(UNALIGNED, u16::from_ne_bytes([0x23, 0x45]));\n }\n-\n-#[test]\n-fn write() {\n-    use core::ptr;\n-\n-    const fn write_aligned() -> i32 {\n-        let mut res = 0;\n-        unsafe {\n-            ptr::write(&mut res as *mut _, 42);\n-        }\n-        res\n-    }\n-    const ALIGNED: i32 = write_aligned();\n-    assert_eq!(ALIGNED, 42);\n-\n-    const fn write_unaligned() -> [u16; 2] {\n-        let mut two_aligned = [0u16; 2];\n-        unsafe {\n-            let unaligned_ptr = (two_aligned.as_mut_ptr() as *mut u8).add(1) as *mut u16;\n-            ptr::write_unaligned(unaligned_ptr, u16::from_ne_bytes([0x23, 0x45]));\n-        }\n-        two_aligned\n-    }\n-    const UNALIGNED: [u16; 2] = write_unaligned();\n-    assert_eq!(UNALIGNED, [u16::from_ne_bytes([0x00, 0x23]), u16::from_ne_bytes([0x45, 0x00])]);\n-}\n-\n-#[test]\n-fn mut_ptr_write() {\n-    const fn aligned() -> i32 {\n-        let mut res = 0;\n-        unsafe {\n-            (&mut res as *mut i32).write(42);\n-        }\n-        res\n-    }\n-    const ALIGNED: i32 = aligned();\n-    assert_eq!(ALIGNED, 42);\n-\n-    const fn write_unaligned() -> [u16; 2] {\n-        let mut two_aligned = [0u16; 2];\n-        unsafe {\n-            let unaligned_ptr = (two_aligned.as_mut_ptr() as *mut u8).add(1) as *mut u16;\n-            unaligned_ptr.write_unaligned(u16::from_ne_bytes([0x23, 0x45]));\n-        }\n-        two_aligned\n-    }\n-    const UNALIGNED: [u16; 2] = write_unaligned();\n-    assert_eq!(UNALIGNED, [u16::from_ne_bytes([0x00, 0x23]), u16::from_ne_bytes([0x45, 0x00])]);\n-}"}]}