{"sha": "08e282877a46698565c1af04609700971300d17d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA4ZTI4Mjg3N2E0NjY5ODU2NWMxYWYwNDYwOTcwMDk3MTMwMGQxN2Q=", "commit": {"author": {"name": "Seiichi Uchida", "email": "seuchida@gmail.com", "date": "2018-09-01T07:18:27Z"}, "committer": {"name": "Seiichi Uchida", "email": "seuchida@gmail.com", "date": "2018-09-01T07:18:27Z"}, "message": "Handle raw identifiers in chain", "tree": {"sha": "b8c9f934aa309eb1a0e27c3f7e75f7ed2fa8d063", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b8c9f934aa309eb1a0e27c3f7e75f7ed2fa8d063"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/08e282877a46698565c1af04609700971300d17d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/08e282877a46698565c1af04609700971300d17d", "html_url": "https://github.com/rust-lang/rust/commit/08e282877a46698565c1af04609700971300d17d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/08e282877a46698565c1af04609700971300d17d/comments", "author": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "committer": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "68015ecf52066bb5d624cda01c580854a042e30f", "url": "https://api.github.com/repos/rust-lang/rust/commits/68015ecf52066bb5d624cda01c580854a042e30f", "html_url": "https://github.com/rust-lang/rust/commit/68015ecf52066bb5d624cda01c580854a042e30f"}], "stats": {"total": 18, "additions": 11, "deletions": 7}, "files": [{"sha": "124a33e50014c55b1d19e8667b24d97d396a9f67", "filename": "src/chains.rs", "status": "modified", "additions": 9, "deletions": 7, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/08e282877a46698565c1af04609700971300d17d/src%2Fchains.rs", "raw_url": "https://github.com/rust-lang/rust/raw/08e282877a46698565c1af04609700971300d17d/src%2Fchains.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fchains.rs?ref=08e282877a46698565c1af04609700971300d17d", "patch": "@@ -74,8 +74,8 @@ use rewrite::{Rewrite, RewriteContext};\n use shape::Shape;\n use source_map::SpanUtils;\n use utils::{\n-    first_line_width, last_line_extendable, last_line_width, mk_sp, trimmed_last_line_width,\n-    wrap_str,\n+    first_line_width, last_line_extendable, last_line_width, mk_sp, rewrite_ident,\n+    trimmed_last_line_width, wrap_str,\n };\n \n use std::borrow::Cow;\n@@ -190,10 +190,12 @@ impl Rewrite for ChainItem {\n             ChainItemKind::MethodCall(ref segment, ref types, ref exprs) => {\n                 Self::rewrite_method_call(segment.ident, types, exprs, self.span, context, shape)?\n             }\n-            ChainItemKind::StructField(ident) => format!(\".{}\", ident.name),\n-            ChainItemKind::TupleField(ident, nested) => {\n-                format!(\"{}.{}\", if nested { \" \" } else { \"\" }, ident.name)\n-            }\n+            ChainItemKind::StructField(ident) => format!(\".{}\", rewrite_ident(context, ident)),\n+            ChainItemKind::TupleField(ident, nested) => format!(\n+                \"{}.{}\",\n+                if nested { \" \" } else { \"\" },\n+                rewrite_ident(context, ident)\n+            ),\n             ChainItemKind::Comment(ref comment, _) => {\n                 rewrite_comment(comment, false, shape, context.config)?\n             }\n@@ -241,7 +243,7 @@ impl ChainItem {\n \n             format!(\"::<{}>\", type_list.join(\", \"))\n         };\n-        let callee_str = format!(\".{}{}\", method_name, type_str);\n+        let callee_str = format!(\".{}{}\", rewrite_ident(context, method_name), type_str);\n         rewrite_call(context, &callee_str, &args[1..], span, shape)\n     }\n }"}, {"sha": "275d9515a92e620d25e0a76eeea21568f0d353fb", "filename": "tests/target/raw_identifiers.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/08e282877a46698565c1af04609700971300d17d/tests%2Ftarget%2Fraw_identifiers.rs", "raw_url": "https://github.com/rust-lang/rust/raw/08e282877a46698565c1af04609700971300d17d/tests%2Ftarget%2Fraw_identifiers.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fraw_identifiers.rs?ref=08e282877a46698565c1af04609700971300d17d", "patch": "@@ -11,6 +11,8 @@ fn main() {\n     r#foo::r#bar();\n \n     let r#local = r#Struct { r#field: () };\n+    r#local.r#field = 1;\n+    r#foo.r#barr();\n     let r#async = r#foo(r#local);\n     r#macro!();\n "}]}