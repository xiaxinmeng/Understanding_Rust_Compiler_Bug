{"sha": "79d9bebf49ec56078439816f4856dc4e47aa6523", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc5ZDliZWJmNDllYzU2MDc4NDM5ODE2ZjQ4NTZkYzRlNDdhYTY1MjM=", "commit": {"author": {"name": "Steven Fackler", "email": "sfackler@gmail.com", "date": "2014-11-25T18:00:46Z"}, "committer": {"name": "Steven Fackler", "email": "sfackler@gmail.com", "date": "2014-11-25T19:02:47Z"}, "message": "Fix xcrate enum namespacing\n\nCloses #19293", "tree": {"sha": "355237696bc4c78818d7d653f1a2f03f17341cb0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/355237696bc4c78818d7d653f1a2f03f17341cb0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/79d9bebf49ec56078439816f4856dc4e47aa6523", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/79d9bebf49ec56078439816f4856dc4e47aa6523", "html_url": "https://github.com/rust-lang/rust/commit/79d9bebf49ec56078439816f4856dc4e47aa6523", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/79d9bebf49ec56078439816f4856dc4e47aa6523/comments", "author": {"login": "sfackler", "id": 1455697, "node_id": "MDQ6VXNlcjE0NTU2OTc=", "avatar_url": "https://avatars.githubusercontent.com/u/1455697?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sfackler", "html_url": "https://github.com/sfackler", "followers_url": "https://api.github.com/users/sfackler/followers", "following_url": "https://api.github.com/users/sfackler/following{/other_user}", "gists_url": "https://api.github.com/users/sfackler/gists{/gist_id}", "starred_url": "https://api.github.com/users/sfackler/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sfackler/subscriptions", "organizations_url": "https://api.github.com/users/sfackler/orgs", "repos_url": "https://api.github.com/users/sfackler/repos", "events_url": "https://api.github.com/users/sfackler/events{/privacy}", "received_events_url": "https://api.github.com/users/sfackler/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sfackler", "id": 1455697, "node_id": "MDQ6VXNlcjE0NTU2OTc=", "avatar_url": "https://avatars.githubusercontent.com/u/1455697?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sfackler", "html_url": "https://github.com/sfackler", "followers_url": "https://api.github.com/users/sfackler/followers", "following_url": "https://api.github.com/users/sfackler/following{/other_user}", "gists_url": "https://api.github.com/users/sfackler/gists{/gist_id}", "starred_url": "https://api.github.com/users/sfackler/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sfackler/subscriptions", "organizations_url": "https://api.github.com/users/sfackler/orgs", "repos_url": "https://api.github.com/users/sfackler/repos", "events_url": "https://api.github.com/users/sfackler/events{/privacy}", "received_events_url": "https://api.github.com/users/sfackler/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "48ca6d1840818e4a8977d00ed62cf0e8e0e5d193", "url": "https://api.github.com/repos/rust-lang/rust/commits/48ca6d1840818e4a8977d00ed62cf0e8e0e5d193", "html_url": "https://github.com/rust-lang/rust/commit/48ca6d1840818e4a8977d00ed62cf0e8e0e5d193"}], "stats": {"total": 84, "additions": 62, "deletions": 22}, "files": [{"sha": "7f4e811f514a1a1406d695ad3ca9ce01893f2aed", "filename": "src/librustc/metadata/encoder.rs", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/79d9bebf49ec56078439816f4856dc4e47aa6523/src%2Flibrustc%2Fmetadata%2Fencoder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/79d9bebf49ec56078439816f4856dc4e47aa6523/src%2Flibrustc%2Fmetadata%2Fencoder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmetadata%2Fencoder.rs?ref=79d9bebf49ec56078439816f4856dc4e47aa6523", "patch": "@@ -500,20 +500,10 @@ fn encode_reexported_static_methods(ecx: &EncodeContext,\n /// Iterates through \"auxiliary node IDs\", which are node IDs that describe\n /// top-level items that are sub-items of the given item. Specifically:\n ///\n-/// * For enums, iterates through the node IDs of the variants.\n-///\n /// * For newtype structs, iterates through the node ID of the constructor.\n fn each_auxiliary_node_id(item: &ast::Item, callback: |NodeId| -> bool) -> bool {\n     let mut continue_ = true;\n     match item.node {\n-        ast::ItemEnum(ref enum_def, _) => {\n-            for variant in enum_def.variants.iter() {\n-                continue_ = callback(variant.node.id);\n-                if !continue_ {\n-                    break\n-                }\n-            }\n-        }\n         ast::ItemStruct(ref struct_def, _) => {\n             // If this is a newtype struct, return the constructor.\n             match struct_def.ctor_id {"}, {"sha": "8d14912a6d4da2213c01b58280c66b313002493b", "filename": "src/librustc_llvm/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/79d9bebf49ec56078439816f4856dc4e47aa6523/src%2Flibrustc_llvm%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/79d9bebf49ec56078439816f4856dc4e47aa6523/src%2Flibrustc_llvm%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_llvm%2Flib.rs?ref=79d9bebf49ec56078439816f4856dc4e47aa6523", "patch": "@@ -45,6 +45,7 @@ pub use self::DiagnosticKind::*;\n pub use self::CallConv::*;\n pub use self::Visibility::*;\n pub use self::DiagnosticSeverity::*;\n+pub use self::Linkage::*;\n \n use std::c_str::ToCStr;\n use std::cell::RefCell;"}, {"sha": "8294d2b4594cfb00ebce192ca8d5513de99d01c1", "filename": "src/test/auxiliary/issue-13872-2.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/79d9bebf49ec56078439816f4856dc4e47aa6523/src%2Ftest%2Fauxiliary%2Fissue-13872-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/79d9bebf49ec56078439816f4856dc4e47aa6523/src%2Ftest%2Fauxiliary%2Fissue-13872-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fauxiliary%2Fissue-13872-2.rs?ref=79d9bebf49ec56078439816f4856dc4e47aa6523", "patch": "@@ -10,4 +10,4 @@\n \n extern crate \"issue-13872-1\" as foo;\n \n-pub use foo::B;\n+pub use foo::A::B;"}, {"sha": "40c8eb9b23ad7dbd57b8ede9d2fcef09daf99005", "filename": "src/test/auxiliary/issue_19293.rs", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/79d9bebf49ec56078439816f4856dc4e47aa6523/src%2Ftest%2Fauxiliary%2Fissue_19293.rs", "raw_url": "https://github.com/rust-lang/rust/raw/79d9bebf49ec56078439816f4856dc4e47aa6523/src%2Ftest%2Fauxiliary%2Fissue_19293.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fauxiliary%2Fissue_19293.rs?ref=79d9bebf49ec56078439816f4856dc4e47aa6523", "patch": "@@ -0,0 +1,14 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+pub struct Foo (pub int);\n+pub enum MyEnum {\n+    Foo(Foo),\n+}"}, {"sha": "5315e6c834ab3a629c7f5ac2cdc2a93888710c96", "filename": "src/test/compile-fail/enums-are-namespaced-xc.rs", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/79d9bebf49ec56078439816f4856dc4e47aa6523/src%2Ftest%2Fcompile-fail%2Fenums-are-namespaced-xc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/79d9bebf49ec56078439816f4856dc4e47aa6523/src%2Ftest%2Fcompile-fail%2Fenums-are-namespaced-xc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fenums-are-namespaced-xc.rs?ref=79d9bebf49ec56078439816f4856dc4e47aa6523", "patch": "@@ -0,0 +1,18 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// aux-build:namespaced_enums.rs\n+extern crate namespaced_enums;\n+\n+fn main() {\n+    let _ = namespaced_enums::A; //~ ERROR unresolved name\n+    let _ = namespaced_enums::B(10); //~ ERROR unresolved name\n+    let _ = namespaced_enums::C { a: 10 }; //~ ERROR does not name a structure\n+}"}, {"sha": "ef991d8533737d646f9606ba53e4b89264e1db51", "filename": "src/test/compile-fail/unreachable-variant.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/79d9bebf49ec56078439816f4856dc4e47aa6523/src%2Ftest%2Fcompile-fail%2Funreachable-variant.rs", "raw_url": "https://github.com/rust-lang/rust/raw/79d9bebf49ec56078439816f4856dc4e47aa6523/src%2Ftest%2Fcompile-fail%2Funreachable-variant.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Funreachable-variant.rs?ref=79d9bebf49ec56078439816f4856dc4e47aa6523", "patch": "@@ -13,5 +13,5 @@\n extern crate \"unreachable-variant\" as other;\n \n fn main() {\n-    let _x = other::super_sekrit::baz; //~ ERROR is private\n+    let _x = other::super_sekrit::sooper_sekrit::baz; //~ ERROR is private\n }"}, {"sha": "26e055d7cbb9d93a56b80459c1a7f9ae4e00a51e", "filename": "src/test/compile-fail/xc-private-method2.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/79d9bebf49ec56078439816f4856dc4e47aa6523/src%2Ftest%2Fcompile-fail%2Fxc-private-method2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/79d9bebf49ec56078439816f4856dc4e47aa6523/src%2Ftest%2Fcompile-fail%2Fxc-private-method2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fxc-private-method2.rs?ref=79d9bebf49ec56078439816f4856dc4e47aa6523", "patch": "@@ -16,6 +16,6 @@ fn main() {\n     let _ = xc_private_method_lib::Struct{ x: 10 }.meth_struct();\n     //~^ ERROR method `meth_struct` is private\n \n-    let _ = xc_private_method_lib::Variant1(20).meth_enum();\n+    let _ = xc_private_method_lib::Enum::Variant1(20).meth_enum();\n     //~^ ERROR method `meth_enum` is private\n }"}, {"sha": "4a446a76de38923b2e50c78222a0112d529f0268", "filename": "src/test/run-pass/issue-19293.rs", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/79d9bebf49ec56078439816f4856dc4e47aa6523/src%2Ftest%2Frun-pass%2Fissue-19293.rs", "raw_url": "https://github.com/rust-lang/rust/raw/79d9bebf49ec56078439816f4856dc4e47aa6523/src%2Ftest%2Frun-pass%2Fissue-19293.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-19293.rs?ref=79d9bebf49ec56078439816f4856dc4e47aa6523", "patch": "@@ -0,0 +1,17 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// aux-build:issue_19293.rs\n+extern crate issue_19293;\n+use issue_19293::{Foo, MyEnum};\n+\n+fn main() {\n+    MyEnum::Foo(Foo(5));\n+}"}, {"sha": "a6fac423bb6772f1ea86a1de55e6447df7453db1", "filename": "src/test/run-pass/issue-2316-c.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/79d9bebf49ec56078439816f4856dc4e47aa6523/src%2Ftest%2Frun-pass%2Fissue-2316-c.rs", "raw_url": "https://github.com/rust-lang/rust/raw/79d9bebf49ec56078439816f4856dc4e47aa6523/src%2Ftest%2Frun-pass%2Fissue-2316-c.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-2316-c.rs?ref=79d9bebf49ec56078439816f4856dc4e47aa6523", "patch": "@@ -15,5 +15,5 @@ extern crate issue_2316_b;\n use issue_2316_b::cloth;\n \n pub fn main() {\n-  let _c: cloth::fabric = cloth::calico;\n+  let _c: cloth::fabric = cloth::fabric::calico;\n }"}, {"sha": "fb893873bc4d337bdb962d0f2eadf04d4bd66044", "filename": "src/test/run-pass/issue-8259.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/79d9bebf49ec56078439816f4856dc4e47aa6523/src%2Ftest%2Frun-pass%2Fissue-8259.rs", "raw_url": "https://github.com/rust-lang/rust/raw/79d9bebf49ec56078439816f4856dc4e47aa6523/src%2Ftest%2Frun-pass%2Fissue-8259.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-8259.rs?ref=79d9bebf49ec56078439816f4856dc4e47aa6523", "patch": "@@ -11,6 +11,6 @@\n // aux-build:issue-8259.rs\n \n extern crate \"issue-8259\" as other;\n-static a: other::Foo<'static> = other::A;\n+static a: other::Foo<'static> = other::Foo::A;\n \n pub fn main() {}"}, {"sha": "923a1427869f53bd1f73e251d33049a519be4860", "filename": "src/test/run-pass/struct_variant_xc.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/79d9bebf49ec56078439816f4856dc4e47aa6523/src%2Ftest%2Frun-pass%2Fstruct_variant_xc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/79d9bebf49ec56078439816f4856dc4e47aa6523/src%2Ftest%2Frun-pass%2Fstruct_variant_xc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fstruct_variant_xc.rs?ref=79d9bebf49ec56078439816f4856dc4e47aa6523", "patch": "@@ -11,7 +11,7 @@\n // aux-build:struct_variant_xc_aux.rs\n extern crate struct_variant_xc_aux;\n \n-use struct_variant_xc_aux::StructVariant;\n+use struct_variant_xc_aux::Enum::StructVariant;\n \n pub fn main() {\n     let _ = StructVariant { arg: 1 };"}, {"sha": "41dcb7ddbc86bc084853500799c585aadb1358ea", "filename": "src/test/run-pass/struct_variant_xc_match.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/79d9bebf49ec56078439816f4856dc4e47aa6523/src%2Ftest%2Frun-pass%2Fstruct_variant_xc_match.rs", "raw_url": "https://github.com/rust-lang/rust/raw/79d9bebf49ec56078439816f4856dc4e47aa6523/src%2Ftest%2Frun-pass%2Fstruct_variant_xc_match.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fstruct_variant_xc_match.rs?ref=79d9bebf49ec56078439816f4856dc4e47aa6523", "patch": "@@ -11,7 +11,7 @@\n // aux-build:struct_variant_xc_aux.rs\n extern crate struct_variant_xc_aux;\n \n-use struct_variant_xc_aux::{StructVariant, Variant};\n+use struct_variant_xc_aux::Enum::{StructVariant, Variant};\n \n pub fn main() {\n     let arg = match (StructVariant { arg: 42 }) {"}, {"sha": "30b5f47b2ae2e30e166affded3ab62a561fb4c61", "filename": "src/test/run-pass/xcrate-unit-struct.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/79d9bebf49ec56078439816f4856dc4e47aa6523/src%2Ftest%2Frun-pass%2Fxcrate-unit-struct.rs", "raw_url": "https://github.com/rust-lang/rust/raw/79d9bebf49ec56078439816f4856dc4e47aa6523/src%2Ftest%2Frun-pass%2Fxcrate-unit-struct.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fxcrate-unit-struct.rs?ref=79d9bebf49ec56078439816f4856dc4e47aa6523", "patch": "@@ -12,10 +12,10 @@\n extern crate xcrate_unit_struct;\n \n const s1: xcrate_unit_struct::Struct = xcrate_unit_struct::Struct;\n-static s2: xcrate_unit_struct::Unit = xcrate_unit_struct::UnitVariant;\n+static s2: xcrate_unit_struct::Unit = xcrate_unit_struct::Unit::UnitVariant;\n static s3: xcrate_unit_struct::Unit =\n-                xcrate_unit_struct::Argument(xcrate_unit_struct::Struct);\n-static s4: xcrate_unit_struct::Unit = xcrate_unit_struct::Argument(s1);\n+                xcrate_unit_struct::Unit::Argument(xcrate_unit_struct::Struct);\n+static s4: xcrate_unit_struct::Unit = xcrate_unit_struct::Unit::Argument(s1);\n static s5: xcrate_unit_struct::TupleStruct = xcrate_unit_struct::TupleStruct(20, \"foo\");\n \n fn f1(_: xcrate_unit_struct::Struct) {}\n@@ -24,8 +24,8 @@ fn f3(_: xcrate_unit_struct::TupleStruct) {}\n \n pub fn main() {\n     f1(xcrate_unit_struct::Struct);\n-    f2(xcrate_unit_struct::UnitVariant);\n-    f2(xcrate_unit_struct::Argument(xcrate_unit_struct::Struct));\n+    f2(xcrate_unit_struct::Unit::UnitVariant);\n+    f2(xcrate_unit_struct::Unit::Argument(xcrate_unit_struct::Struct));\n     f3(xcrate_unit_struct::TupleStruct(10, \"bar\"));\n \n     f1(s1);"}]}