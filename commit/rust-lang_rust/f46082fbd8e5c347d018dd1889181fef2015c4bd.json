{"sha": "f46082fbd8e5c347d018dd1889181fef2015c4bd", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY0NjA4MmZiZDhlNWMzNDdkMDE4ZGQxODg5MTgxZmVmMjAxNWM0YmQ=", "commit": {"author": {"name": "St\u00e9phane Campinas", "email": "stephane.campinas@gmail.com", "date": "2018-10-04T07:16:08Z"}, "committer": {"name": "St\u00e9phane Campinas", "email": "stephane.campinas@gmail.com", "date": "2018-10-08T12:48:13Z"}, "message": "rewrite_string: trim trailing whitespace in case the last_line fits in the given shape", "tree": {"sha": "ea37c4ee69f73574184bc047edd4b7bcbf0f471e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ea37c4ee69f73574184bc047edd4b7bcbf0f471e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f46082fbd8e5c347d018dd1889181fef2015c4bd", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQEzBAABCgAdFiEEipi5pnt+pUplKNfibVYg2QghATMFAlu7Ug0ACgkQbVYg2Qgh\nATOMDggAo+ODcjb2Pk9nNntfWXf/QoURA3RHUVTm+vto7PfVq7Qahm/o6W9hbuTL\nX7ztQC/zY766Jv14Aq95v7M4I8tKlhRPt37ZTVWyV/7HyPfSJenvYNpKNQJcAKbU\npV2L09XL//UbKdgezqxXqQBUbii/4aVXNtulKZtMf/lUY3d3h3U8mGu296LjdDGf\nho9yig+XbYXYMvzU1lJ6tETscmx/Q0B7xP7wkEvIULTkvdBvSUOMtbQwVzbxCDbI\nCOcoS5QJzgTrqeX0SbKpRJKfdVCKI2dctN4qzyrO+4icCyCOp2Gzlu8sGTSwzgUa\nV9iwSXdil32+gr297itZhpkv+1zq+Q==\n=ocmB\n-----END PGP SIGNATURE-----", "payload": "tree ea37c4ee69f73574184bc047edd4b7bcbf0f471e\nparent 1b2e72726f2e395578d4713f75743761677b6a4e\nauthor St\u00e9phane Campinas <stephane.campinas@gmail.com> 1538637368 +0200\ncommitter St\u00e9phane Campinas <stephane.campinas@gmail.com> 1539002893 +0200\n\nrewrite_string: trim trailing whitespace in case the last_line fits in the given shape\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f46082fbd8e5c347d018dd1889181fef2015c4bd", "html_url": "https://github.com/rust-lang/rust/commit/f46082fbd8e5c347d018dd1889181fef2015c4bd", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f46082fbd8e5c347d018dd1889181fef2015c4bd/comments", "author": {"login": "scampi", "id": 795879, "node_id": "MDQ6VXNlcjc5NTg3OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/795879?v=4", "gravatar_id": "", "url": "https://api.github.com/users/scampi", "html_url": "https://github.com/scampi", "followers_url": "https://api.github.com/users/scampi/followers", "following_url": "https://api.github.com/users/scampi/following{/other_user}", "gists_url": "https://api.github.com/users/scampi/gists{/gist_id}", "starred_url": "https://api.github.com/users/scampi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/scampi/subscriptions", "organizations_url": "https://api.github.com/users/scampi/orgs", "repos_url": "https://api.github.com/users/scampi/repos", "events_url": "https://api.github.com/users/scampi/events{/privacy}", "received_events_url": "https://api.github.com/users/scampi/received_events", "type": "User", "site_admin": false}, "committer": {"login": "scampi", "id": 795879, "node_id": "MDQ6VXNlcjc5NTg3OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/795879?v=4", "gravatar_id": "", "url": "https://api.github.com/users/scampi", "html_url": "https://github.com/scampi", "followers_url": "https://api.github.com/users/scampi/followers", "following_url": "https://api.github.com/users/scampi/following{/other_user}", "gists_url": "https://api.github.com/users/scampi/gists{/gist_id}", "starred_url": "https://api.github.com/users/scampi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/scampi/subscriptions", "organizations_url": "https://api.github.com/users/scampi/orgs", "repos_url": "https://api.github.com/users/scampi/repos", "events_url": "https://api.github.com/users/scampi/events{/privacy}", "received_events_url": "https://api.github.com/users/scampi/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1b2e72726f2e395578d4713f75743761677b6a4e", "url": "https://api.github.com/repos/rust-lang/rust/commits/1b2e72726f2e395578d4713f75743761677b6a4e", "html_url": "https://github.com/rust-lang/rust/commit/1b2e72726f2e395578d4713f75743761677b6a4e"}], "stats": {"total": 22, "additions": 21, "deletions": 1}, "files": [{"sha": "b5ba022a93ca6f8f7c6bd621de4542a9b2c8b1c8", "filename": "src/string.rs", "status": "modified", "additions": 21, "deletions": 1, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/f46082fbd8e5c347d018dd1889181fef2015c4bd/src%2Fstring.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f46082fbd8e5c347d018dd1889181fef2015c4bd/src%2Fstring.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fstring.rs?ref=f46082fbd8e5c347d018dd1889181fef2015c4bd", "patch": "@@ -98,7 +98,12 @@ pub fn rewrite_string<'a>(orig: &str, fmt: &StringFormat<'a>) -> Option<String>\n     loop {\n         // All the input starting at cur_start fits on the current line\n         if graphemes.len() - cur_start <= cur_max_chars {\n-            result.push_str(&graphemes[cur_start..].join(\"\"));\n+            let last_line = graphemes[cur_start..].join(\"\");\n+            if fmt.trim_end {\n+                result.push_str(&last_line.trim_right());\n+            } else {\n+                result.push_str(&last_line);\n+            }\n             break;\n         }\n \n@@ -363,4 +368,19 @@ mod test {\n             Some(\"\\\"Nulla\\nconsequat erat at massa. \\\\\\n Vivamus id mi.\\\"\".to_string())\n         );\n     }\n+\n+    #[test]\n+    fn last_line_fit_with_trailing_whitespaces() {\n+        let string = \"Vivamus id mi.  \";\n+        let config: Config = Default::default();\n+        let mut fmt = StringFormat::new(Shape::legacy(25, Indent::empty()), &config);\n+\n+        fmt.trim_end = true;\n+        let rewritten_string = rewrite_string(string, &fmt);\n+        assert_eq!(rewritten_string, Some(\"\\\"Vivamus id mi.\\\"\".to_string()));\n+\n+        fmt.trim_end = false; // default value of trim_end\n+        let rewritten_string = rewrite_string(string, &fmt);\n+        assert_eq!(rewritten_string, Some(\"\\\"Vivamus id mi.  \\\"\".to_string()));\n+    }\n }"}]}