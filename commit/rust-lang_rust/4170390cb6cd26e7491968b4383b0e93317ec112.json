{"sha": "4170390cb6cd26e7491968b4383b0e93317ec112", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQxNzAzOTBjYjZjZDI2ZTc0OTE5NjhiNDM4M2IwZTkzMzE3ZWMxMTI=", "commit": {"author": {"name": "Michael Sullivan", "email": "sully@msully.net", "date": "2011-07-21T21:49:58Z"}, "committer": {"name": "Michael Sullivan", "email": "sully@msully.net", "date": "2011-07-22T01:18:59Z"}, "message": "Add some useful functions to freevars.", "tree": {"sha": "30303a9b9a8eac83c6fb402a9e9682fd91a22589", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/30303a9b9a8eac83c6fb402a9e9682fd91a22589"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4170390cb6cd26e7491968b4383b0e93317ec112", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4170390cb6cd26e7491968b4383b0e93317ec112", "html_url": "https://github.com/rust-lang/rust/commit/4170390cb6cd26e7491968b4383b0e93317ec112", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4170390cb6cd26e7491968b4383b0e93317ec112/comments", "author": {"login": "msullivan", "id": 340349, "node_id": "MDQ6VXNlcjM0MDM0OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/340349?v=4", "gravatar_id": "", "url": "https://api.github.com/users/msullivan", "html_url": "https://github.com/msullivan", "followers_url": "https://api.github.com/users/msullivan/followers", "following_url": "https://api.github.com/users/msullivan/following{/other_user}", "gists_url": "https://api.github.com/users/msullivan/gists{/gist_id}", "starred_url": "https://api.github.com/users/msullivan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/msullivan/subscriptions", "organizations_url": "https://api.github.com/users/msullivan/orgs", "repos_url": "https://api.github.com/users/msullivan/repos", "events_url": "https://api.github.com/users/msullivan/events{/privacy}", "received_events_url": "https://api.github.com/users/msullivan/received_events", "type": "User", "site_admin": false}, "committer": {"login": "msullivan", "id": 340349, "node_id": "MDQ6VXNlcjM0MDM0OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/340349?v=4", "gravatar_id": "", "url": "https://api.github.com/users/msullivan", "html_url": "https://github.com/msullivan", "followers_url": "https://api.github.com/users/msullivan/followers", "following_url": "https://api.github.com/users/msullivan/following{/other_user}", "gists_url": "https://api.github.com/users/msullivan/gists{/gist_id}", "starred_url": "https://api.github.com/users/msullivan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/msullivan/subscriptions", "organizations_url": "https://api.github.com/users/msullivan/orgs", "repos_url": "https://api.github.com/users/msullivan/repos", "events_url": "https://api.github.com/users/msullivan/events{/privacy}", "received_events_url": "https://api.github.com/users/msullivan/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4b59ae0aa9051e6a5fbec43d0c9bb8a12c0711e0", "url": "https://api.github.com/repos/rust-lang/rust/commits/4b59ae0aa9051e6a5fbec43d0c9bb8a12c0711e0", "html_url": "https://github.com/rust-lang/rust/commit/4b59ae0aa9051e6a5fbec43d0c9bb8a12c0711e0"}], "stats": {"total": 27, "additions": 25, "deletions": 2}, "files": [{"sha": "5c8f496d16bf539f75352904e5ae42ae33896b3a", "filename": "src/comp/middle/freevars.rs", "status": "modified", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/4170390cb6cd26e7491968b4383b0e93317ec112/src%2Fcomp%2Fmiddle%2Ffreevars.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4170390cb6cd26e7491968b4383b0e93317ec112/src%2Fcomp%2Fmiddle%2Ffreevars.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Ffreevars.rs?ref=4170390cb6cd26e7491968b4383b0e93317ec112", "patch": "@@ -3,6 +3,10 @@\n \n import std::map;\n import std::map::*;\n+import std::ivec;\n+import std::option;\n+import std::int;\n+import std::option::*;\n import syntax::ast;\n import syntax::walk;\n import driver::session;\n@@ -12,6 +16,10 @@ import syntax::codemap::span;\n export annotate_freevars;\n export freevar_set;\n export freevar_map;\n+export get_freevars;\n+export has_freevars;\n+export is_freevarof;\n+\n \n type freevar_set = @ast::node_id[];\n type freevar_map = hashmap[ast::node_id, freevar_set];\n@@ -128,6 +136,21 @@ fn annotate_freevars(&session::session sess, &resolve::def_map def_map,\n     ret e.freevars;\n }\n \n+fn get_freevars(&ty::ctxt tcx, ast::node_id fid) -> freevar_set {\n+    alt (tcx.freevars.find(fid)) {\n+        case (none) {\n+            fail \"get_freevars: \" + int::str(fid) + \" has no freevars\";\n+        }\n+        case (some(?d)) { ret d; }\n+    }\n+}\n+fn has_freevars(&ty::ctxt tcx, ast::node_id fid) -> bool {\n+    ret ivec::len(*get_freevars(tcx, fid)) != 0u;\n+}\n+fn is_freevar_of(&ty::ctxt tcx, ast::node_id var, ast::node_id f) -> bool {\n+    ret ivec::member(var, *get_freevars(tcx, f));\n+}\n+\n // Local Variables:\n // mode: rust\n // fill-column: 78;"}, {"sha": "3dd93b2209f277c3e381fb061fcaf838eeb7e4a0", "filename": "src/comp/middle/trans.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/4170390cb6cd26e7491968b4383b0e93317ec112/src%2Fcomp%2Fmiddle%2Ftrans.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4170390cb6cd26e7491968b4383b0e93317ec112/src%2Fcomp%2Fmiddle%2Ftrans.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Ftrans.rs?ref=4170390cb6cd26e7491968b4383b0e93317ec112", "patch": "@@ -27,7 +27,7 @@ import syntax::ast;\n import syntax::walk;\n import driver::session;\n import middle::ty;\n-import middle::freevars;\n+import middle::freevars::*;\n import back::link;\n import back::x86;\n import back::abi;\n@@ -3941,7 +3941,7 @@ fn trans_for_each(&@block_ctxt cx, &@ast::local local, &@ast::expr seq,\n     // FIXME: possibly support alias-mode here?\n     auto decl_ty = node_id_type(lcx.ccx, local.node.id);\n     auto decl_id = local.node.id;\n-    auto upvars = cx.fcx.lcx.ccx.tcx.freevars.get(body.node.id);\n+    auto upvars = get_freevars(lcx.ccx.tcx, body.node.id);\n \n     auto environment_data = build_environment(cx, *upvars);\n     auto llenvptr = environment_data._0;"}]}