{"sha": "ea371a3d37f4e7653b73caae225bb9459956a6f8", "node_id": "MDY6Q29tbWl0NzI0NzEyOmVhMzcxYTNkMzdmNGU3NjUzYjczY2FhZTIyNWJiOTQ1OTk1NmE2Zjg=", "commit": {"author": {"name": "Rafael \u00c1vila de Esp\u00edndola", "email": "respindola@mozilla.com", "date": "2011-07-21T19:10:43Z"}, "committer": {"name": "Rafael \u00c1vila de Esp\u00edndola", "email": "respindola@mozilla.com", "date": "2011-07-21T19:12:10Z"}, "message": "Cleanup the library path now that we copy from stageN/lib to stageN+1/", "tree": {"sha": "5bdc9658fce6927ee4c2ac606e99076b0df345bc", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5bdc9658fce6927ee4c2ac606e99076b0df345bc"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ea371a3d37f4e7653b73caae225bb9459956a6f8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ea371a3d37f4e7653b73caae225bb9459956a6f8", "html_url": "https://github.com/rust-lang/rust/commit/ea371a3d37f4e7653b73caae225bb9459956a6f8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ea371a3d37f4e7653b73caae225bb9459956a6f8/comments", "author": null, "committer": null, "parents": [{"sha": "d79afd7916dc2b5353666c301b93c09fdba29134", "url": "https://api.github.com/repos/rust-lang/rust/commits/d79afd7916dc2b5353666c301b93c09fdba29134", "html_url": "https://github.com/rust-lang/rust/commit/d79afd7916dc2b5353666c301b93c09fdba29134"}], "stats": {"total": 22, "additions": 11, "deletions": 11}, "files": [{"sha": "a4d8f2b6b61c88d5477d31447b9f6a6a28f7df1f", "filename": "Makefile.in", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ea371a3d37f4e7653b73caae225bb9459956a6f8/Makefile.in", "raw_url": "https://github.com/rust-lang/rust/raw/ea371a3d37f4e7653b73caae225bb9459956a6f8/Makefile.in", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Makefile.in?ref=ea371a3d37f4e7653b73caae225bb9459956a6f8", "patch": "@@ -183,7 +183,7 @@ SREQ$(1) = stage$(1)/rustc$(X)          \\\n            $$(MKFILES)\n endif\n \n-STAGE$(1) := $$(Q)$$(call CFG_RUN_TARG,stage$(1),stage$(1), \\\n+STAGE$(1) := $$(Q)$$(call CFG_RUN_TARG,stage$(1), \\\n                 $$(CFG_VALGRIND_COMPILE) stage$(1)/rustc$$(X) \\\n                 $$(CFG_RUSTC_FLAGS))\n endef"}, {"sha": "bb16e7fa32045b5175ca821f8ca9d8a9914b6b0c", "filename": "mk/platform.mk", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ea371a3d37f4e7653b73caae225bb9459956a6f8/mk%2Fplatform.mk", "raw_url": "https://github.com/rust-lang/rust/raw/ea371a3d37f4e7653b73caae225bb9459956a6f8/mk%2Fplatform.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mk%2Fplatform.mk?ref=ea371a3d37f4e7653b73caae225bb9459956a6f8", "patch": "@@ -77,7 +77,7 @@ ifdef CFG_UNIXY\n \n   CFG_PATH_MUNGE := true\n   CFG_EXE_SUFFIX :=\n-  CFG_RUN_TARG=$(CFG_LDENV)=$(CFG_BUILD_DIR)/$(1) $(3)\n+  CFG_RUN_TARG=$(CFG_LDENV)=$(CFG_BUILD_DIR)/$(1) $(2)\n   CFG_RUN_TEST=\\\n       $(CFG_LDENV)=$(call CFG_TESTLIB,$(1)) \\\n       $(CFG_VALGRIND) $(1)\n@@ -118,7 +118,7 @@ ifdef CFG_WINDOWSY\n   CFG_LDPATH :=$(CFG_LLVM_BINDIR)\n   CFG_LDPATH :=$(CFG_LDPATH):$$PATH\n   CFG_RUN_TEST=PATH=\"$(CFG_LDPATH):$(call CFG_TESTLIB,$(1))\" $(1)\n-  CFG_RUN_TARG=PATH=\"$(CFG_BUILD_DIR)/$(2)/lib:$(CFG_LDPATH)\" $(3)\n+  CFG_RUN_TARG=PATH=\"$(CFG_LDPATH)\" $(2)\n \n   ifndef CFG_ENABLE_MINGW_CROSS\n     CFG_PATH_MUNGE := $(strip perl -i.bak -p             \\"}, {"sha": "169c19b9aec106eb368f557a64f089135fe3dd35", "filename": "mk/pp.mk", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ea371a3d37f4e7653b73caae225bb9459956a6f8/mk%2Fpp.mk", "raw_url": "https://github.com/rust-lang/rust/raw/ea371a3d37f4e7653b73caae225bb9459956a6f8/mk%2Fpp.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mk%2Fpp.mk?ref=ea371a3d37f4e7653b73caae225bb9459956a6f8", "patch": "@@ -9,7 +9,7 @@ PP_INPUTS_FILTERED = $(shell echo $(PP_INPUTS) | xargs grep -L no-reformat)\n reformat: $(SREQ1)\n \t@$(call E, reformat [stage1]: $@)\n \tfor i in $(PP_INPUTS_FILTERED);  \\\n-    do $(call CFG_RUN_TARG,stage0,stage0,stage1/rustc$(X)) \\\n+    do $(call CFG_RUN_TARG,stage0,stage1/rustc$(X)) \\\n        --pretty normal $$i >$$i.tmp; \\\n     if cmp --silent $$i.tmp $$i; \\\n         then echo no changes to $$i; rm $$i.tmp; \\"}, {"sha": "f1daa48df8fd3e13406ca1817ebe97c4a1e328b2", "filename": "mk/stageN.mk", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ea371a3d37f4e7653b73caae225bb9459956a6f8/mk%2FstageN.mk", "raw_url": "https://github.com/rust-lang/rust/raw/ea371a3d37f4e7653b73caae225bb9459956a6f8/mk%2FstageN.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mk%2FstageN.mk?ref=ea371a3d37f4e7653b73caae225bb9459956a6f8", "patch": "@@ -13,7 +13,7 @@ define STAGEN\n # for different directories, to handle cases where (say) a test relies on a\n # compiler that relies on a .o file.\n \n-STAGE$(2) := $$(Q)$$(call CFG_RUN_TARG,stage$(2),stage$(1), \\\n+STAGE$(2) := $$(Q)$$(call CFG_RUN_TARG,stage$(2), \\\n                 $$(CFG_VALGRIND_COMPILE) stage$(2)/rustc$$(X) \\\n                 $$(CFG_RUSTC_FLAGS))\n "}, {"sha": "a135dcc313f165bdd2317e77c53de8e73be533d9", "filename": "mk/tests.mk", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/ea371a3d37f4e7653b73caae225bb9459956a6f8/mk%2Ftests.mk", "raw_url": "https://github.com/rust-lang/rust/raw/ea371a3d37f4e7653b73caae225bb9459956a6f8/mk%2Ftests.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mk%2Ftests.mk?ref=ea371a3d37f4e7653b73caae225bb9459956a6f8", "patch": "@@ -351,15 +351,15 @@ test/stdtest.stage3$(X): $(STDTEST_CRATE) $(STDTEST_INPUTS) $(SREQ3)\n \n check-stage1-std:test/stdtest.stage1$(X)\n \t@$(call E, run: $<)\n-\t$(Q)$(call CFG_RUN_TARG,stage1,stage1, $<)\n+\t$(Q)$(call CFG_RUN_TARG,stage1, $<)\n \n check-stage2-std:test/stdtest.stage2$(X)\n \t@$(call E, run: $<)\n-\t$(Q)$(call CFG_RUN_TARG,stage2,stage2, $<)\n+\t$(Q)$(call CFG_RUN_TARG,stage2, $<)\n \n check-stage3-std:test/stdtest.stage3$(X)\n \t@$(call E, run: $<)\n-\t$(Q)$(call CFG_RUN_TARG,stage3,stage3, $<)\n+\t$(Q)$(call CFG_RUN_TARG,stage3, $<)\n \n # Testing the rustctest crate\n \n@@ -380,12 +380,12 @@ test/rustctest.stage3$(X): $(COMPILER_CRATE) $(COMPILER_INPUTS) $(SREQ2) \\\n \n check-stage1-rustc: test/rustctest.stage1$(X)\n \t@$(call E, run: $<)\n-\t$(Q)$(call CFG_RUN_TARG,stage1,stage0, $<)\n+\t$(Q)$(call CFG_RUN_TARG,stage1, $<)\n \n check-stage2-rustc: test/rustctest.stage2$(X)\n \t@$(call E, run: $<)\n-\t$(Q)$(call CFG_RUN_TARG,stage2,stage1, $<)\n+\t$(Q)$(call CFG_RUN_TARG,stage2, $<)\n \n check-stage3-rustc: test/rustctest.stage3$(X)\n \t@$(call E, run: $<)\n-\t$(Q)$(call CFG_RUN_TARG,stage2,stage1, $<)\n+\t$(Q)$(call CFG_RUN_TARG,stage2, $<)"}]}