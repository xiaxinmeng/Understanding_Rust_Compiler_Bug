{"sha": "26630187920a8b3f1b2f2d73f0172addd6c35ccd", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI2NjMwMTg3OTIwYThiM2YxYjJmMmQ3M2YwMTcyYWRkZDZjMzVjY2Q=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2012-03-29T03:37:55Z"}, "committer": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2012-03-29T15:41:25Z"}, "message": "rustc: Fix an infinite loop during size calculations for recursive region pointer types", "tree": {"sha": "3219c19e04599ffffbee2f826faecadfad88b6be", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3219c19e04599ffffbee2f826faecadfad88b6be"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/26630187920a8b3f1b2f2d73f0172addd6c35ccd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/26630187920a8b3f1b2f2d73f0172addd6c35ccd", "html_url": "https://github.com/rust-lang/rust/commit/26630187920a8b3f1b2f2d73f0172addd6c35ccd", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/26630187920a8b3f1b2f2d73f0172addd6c35ccd/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6f0cbf4cd4364ee5d7b2c723089dfacf711df8f4", "url": "https://api.github.com/repos/rust-lang/rust/commits/6f0cbf4cd4364ee5d7b2c723089dfacf711df8f4", "html_url": "https://github.com/rust-lang/rust/commit/6f0cbf4cd4364ee5d7b2c723089dfacf711df8f4"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "15c8247b9a88a1578f88c616cc19ed28c0e81290", "filename": "src/rustc/middle/trans/shape.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/26630187920a8b3f1b2f2d73f0172addd6c35ccd/src%2Frustc%2Fmiddle%2Ftrans%2Fshape.rs", "raw_url": "https://github.com/rust-lang/rust/raw/26630187920a8b3f1b2f2d73f0172addd6c35ccd/src%2Frustc%2Fmiddle%2Ftrans%2Fshape.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustc%2Fmiddle%2Ftrans%2Fshape.rs?ref=26630187920a8b3f1b2f2d73f0172addd6c35ccd", "patch": "@@ -632,7 +632,7 @@ fn simplify_type(tcx: ty::ctxt, typ: ty::t) -> ty::t {\n     fn simplifier(tcx: ty::ctxt, typ: ty::t) -> ty::t {\n         alt ty::get(typ).struct {\n           ty::ty_box(_) | ty::ty_opaque_box | ty::ty_uniq(_) | ty::ty_vec(_) |\n-          ty::ty_ptr(_) { nilptr(tcx) }\n+          ty::ty_ptr(_) | ty::ty_rptr(_,_) { nilptr(tcx) }\n           ty::ty_fn(_) { ty::mk_tup(tcx, [nilptr(tcx), nilptr(tcx)]) }\n           ty::ty_res(_, sub, tps) {\n             let sub1 = ty::substitute_type_params(tcx, tps, sub);"}]}