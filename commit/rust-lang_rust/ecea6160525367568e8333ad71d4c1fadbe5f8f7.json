{"sha": "ecea6160525367568e8333ad71d4c1fadbe5f8f7", "node_id": "C_kwDOAAsO6NoAKGVjZWE2MTYwNTI1MzY3NTY4ZTgzMzNhZDcxZDRjMWZhZGJlNWY4Zjc", "commit": {"author": {"name": "Oli Scherer", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2022-10-31T16:19:36Z"}, "committer": {"name": "Oli Scherer", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2022-11-02T12:03:59Z"}, "message": "Simplify astconv item def id handling", "tree": {"sha": "67f993f824655a333a5af40ba8db759a40b44f73", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/67f993f824655a333a5af40ba8db759a40b44f73"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ecea6160525367568e8333ad71d4c1fadbe5f8f7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ecea6160525367568e8333ad71d4c1fadbe5f8f7", "html_url": "https://github.com/rust-lang/rust/commit/ecea6160525367568e8333ad71d4c1fadbe5f8f7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ecea6160525367568e8333ad71d4c1fadbe5f8f7/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a876a4df32b402e3886cd9f2af02cff3dd8e21c8", "url": "https://api.github.com/repos/rust-lang/rust/commits/a876a4df32b402e3886cd9f2af02cff3dd8e21c8", "html_url": "https://github.com/rust-lang/rust/commit/a876a4df32b402e3886cd9f2af02cff3dd8e21c8"}], "stats": {"total": 24, "additions": 9, "deletions": 15}, "files": [{"sha": "e6465d641f1e64552af60f0775a5bbf4564b0666", "filename": "compiler/rustc_hir_analysis/src/astconv/errors.rs", "status": "modified", "additions": 2, "deletions": 5, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/ecea6160525367568e8333ad71d4c1fadbe5f8f7/compiler%2Frustc_hir_analysis%2Fsrc%2Fastconv%2Ferrors.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ecea6160525367568e8333ad71d4c1fadbe5f8f7/compiler%2Frustc_hir_analysis%2Fsrc%2Fastconv%2Ferrors.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir_analysis%2Fsrc%2Fastconv%2Ferrors.rs?ref=ecea6160525367568e8333ad71d4c1fadbe5f8f7", "patch": "@@ -177,11 +177,8 @@ impl<'o, 'tcx> dyn AstConv<'tcx> + 'o {\n             .all_traits()\n             .filter(|trait_def_id| {\n                 let viz = self.tcx().visibility(*trait_def_id);\n-                if let Some(def_id) = self.item_def_id() {\n-                    viz.is_accessible_from(def_id, self.tcx())\n-                } else {\n-                    viz.is_visible_locally()\n-                }\n+                let def_id = self.item_def_id();\n+                viz.is_accessible_from(def_id, self.tcx())\n             })\n             .collect();\n "}, {"sha": "5181754eb1c8ad30f4308c595492056744164951", "filename": "compiler/rustc_hir_analysis/src/astconv/mod.rs", "status": "modified", "additions": 3, "deletions": 6, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/ecea6160525367568e8333ad71d4c1fadbe5f8f7/compiler%2Frustc_hir_analysis%2Fsrc%2Fastconv%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ecea6160525367568e8333ad71d4c1fadbe5f8f7/compiler%2Frustc_hir_analysis%2Fsrc%2Fastconv%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir_analysis%2Fsrc%2Fastconv%2Fmod.rs?ref=ecea6160525367568e8333ad71d4c1fadbe5f8f7", "patch": "@@ -54,7 +54,7 @@ pub struct PathSeg(pub DefId, pub usize);\n pub trait AstConv<'tcx> {\n     fn tcx<'a>(&'a self) -> TyCtxt<'tcx>;\n \n-    fn item_def_id(&self) -> Option<DefId>;\n+    fn item_def_id(&self) -> DefId;\n \n     /// Returns predicates in scope of the form `X: Foo<T>`, where `X`\n     /// is a type parameter `X` with the given id `def_id` and T\n@@ -2079,17 +2079,14 @@ impl<'o, 'tcx> dyn AstConv<'tcx> + 'o {\n \n             debug!(\"qpath_to_ty: self.item_def_id()={:?}\", def_id);\n \n-            let parent_def_id = def_id\n-                .and_then(|def_id| {\n-                    def_id.as_local().map(|def_id| tcx.hir().local_def_id_to_hir_id(def_id))\n-                })\n+            let parent_def_id = def_id.as_local().map(|def_id| tcx.hir().local_def_id_to_hir_id(def_id))\n                 .map(|hir_id| tcx.hir().get_parent_item(hir_id).to_def_id());\n \n             debug!(\"qpath_to_ty: parent_def_id={:?}\", parent_def_id);\n \n             // If the trait in segment is the same as the trait defining the item,\n             // use the `<Self as ..>` syntax in the error.\n-            let is_part_of_self_trait_constraints = def_id == Some(trait_def_id);\n+            let is_part_of_self_trait_constraints = def_id == trait_def_id;\n             let is_part_of_fn_in_self_trait = parent_def_id == Some(trait_def_id);\n \n             let type_name = if is_part_of_self_trait_constraints || is_part_of_fn_in_self_trait {"}, {"sha": "25faacadf3d0c18a8ca572277481c4106561dd40", "filename": "compiler/rustc_hir_analysis/src/collect.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ecea6160525367568e8333ad71d4c1fadbe5f8f7/compiler%2Frustc_hir_analysis%2Fsrc%2Fcollect.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ecea6160525367568e8333ad71d4c1fadbe5f8f7/compiler%2Frustc_hir_analysis%2Fsrc%2Fcollect.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir_analysis%2Fsrc%2Fcollect.rs?ref=ecea6160525367568e8333ad71d4c1fadbe5f8f7", "patch": "@@ -379,8 +379,8 @@ impl<'tcx> AstConv<'tcx> for ItemCtxt<'tcx> {\n         self.tcx\n     }\n \n-    fn item_def_id(&self) -> Option<DefId> {\n-        Some(self.item_def_id)\n+    fn item_def_id(&self) -> DefId {\n+        self.item_def_id\n     }\n \n     fn get_type_parameter_bounds("}, {"sha": "c36c01e1b46d07b5905cd8ebe2124729431406c3", "filename": "compiler/rustc_hir_typeck/src/fn_ctxt/mod.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ecea6160525367568e8333ad71d4c1fadbe5f8f7/compiler%2Frustc_hir_typeck%2Fsrc%2Ffn_ctxt%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ecea6160525367568e8333ad71d4c1fadbe5f8f7/compiler%2Frustc_hir_typeck%2Fsrc%2Ffn_ctxt%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir_typeck%2Fsrc%2Ffn_ctxt%2Fmod.rs?ref=ecea6160525367568e8333ad71d4c1fadbe5f8f7", "patch": "@@ -194,8 +194,8 @@ impl<'a, 'tcx> AstConv<'tcx> for FnCtxt<'a, 'tcx> {\n         self.tcx\n     }\n \n-    fn item_def_id(&self) -> Option<DefId> {\n-        None\n+    fn item_def_id(&self) -> DefId {\n+        self.body_id.owner.to_def_id()\n     }\n \n     fn get_type_parameter_bounds("}]}