{"sha": "7b721ed0cd91c10fcdb9a81b6007b54d2df54a3f", "node_id": "C_kwDOAAsO6NoAKDdiNzIxZWQwY2Q5MWMxMGZjZGI5YTgxYjYwMDdiNTRkMmRmNTRhM2Y", "commit": {"author": {"name": "Ibraheem Ahmed", "email": "ibraheem@ibraheem.ca", "date": "2022-10-17T23:30:48Z"}, "committer": {"name": "Ibraheem Ahmed", "email": "ibraheem@ibraheem.ca", "date": "2022-11-10T04:20:02Z"}, "message": "`sync::mpsc`: reload state after spinning on CAS failure", "tree": {"sha": "7b53b4710f43bad5e457a262a839b06f2d585be7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7b53b4710f43bad5e457a262a839b06f2d585be7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7b721ed0cd91c10fcdb9a81b6007b54d2df54a3f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7b721ed0cd91c10fcdb9a81b6007b54d2df54a3f", "html_url": "https://github.com/rust-lang/rust/commit/7b721ed0cd91c10fcdb9a81b6007b54d2df54a3f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7b721ed0cd91c10fcdb9a81b6007b54d2df54a3f/comments", "author": {"login": "ibraheemdev", "id": 34988408, "node_id": "MDQ6VXNlcjM0OTg4NDA4", "avatar_url": "https://avatars.githubusercontent.com/u/34988408?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ibraheemdev", "html_url": "https://github.com/ibraheemdev", "followers_url": "https://api.github.com/users/ibraheemdev/followers", "following_url": "https://api.github.com/users/ibraheemdev/following{/other_user}", "gists_url": "https://api.github.com/users/ibraheemdev/gists{/gist_id}", "starred_url": "https://api.github.com/users/ibraheemdev/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ibraheemdev/subscriptions", "organizations_url": "https://api.github.com/users/ibraheemdev/orgs", "repos_url": "https://api.github.com/users/ibraheemdev/repos", "events_url": "https://api.github.com/users/ibraheemdev/events{/privacy}", "received_events_url": "https://api.github.com/users/ibraheemdev/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ibraheemdev", "id": 34988408, "node_id": "MDQ6VXNlcjM0OTg4NDA4", "avatar_url": "https://avatars.githubusercontent.com/u/34988408?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ibraheemdev", "html_url": "https://github.com/ibraheemdev", "followers_url": "https://api.github.com/users/ibraheemdev/followers", "following_url": "https://api.github.com/users/ibraheemdev/following{/other_user}", "gists_url": "https://api.github.com/users/ibraheemdev/gists{/gist_id}", "starred_url": "https://api.github.com/users/ibraheemdev/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ibraheemdev/subscriptions", "organizations_url": "https://api.github.com/users/ibraheemdev/orgs", "repos_url": "https://api.github.com/users/ibraheemdev/repos", "events_url": "https://api.github.com/users/ibraheemdev/events{/privacy}", "received_events_url": "https://api.github.com/users/ibraheemdev/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8c17a3e7cb0717fbc849f2a8250e8f5b88a1a3c7", "url": "https://api.github.com/repos/rust-lang/rust/commits/8c17a3e7cb0717fbc849f2a8250e8f5b88a1a3c7", "html_url": "https://github.com/rust-lang/rust/commit/8c17a3e7cb0717fbc849f2a8250e8f5b88a1a3c7"}], "stats": {"total": 16, "additions": 8, "deletions": 8}, "files": [{"sha": "2d65bd27d8614eed1d41a663b4b158942011d3e2", "filename": "library/std/src/sync/mpmc/array.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/7b721ed0cd91c10fcdb9a81b6007b54d2df54a3f/library%2Fstd%2Fsrc%2Fsync%2Fmpmc%2Farray.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7b721ed0cd91c10fcdb9a81b6007b54d2df54a3f/library%2Fstd%2Fsrc%2Fsync%2Fmpmc%2Farray.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsync%2Fmpmc%2Farray.rs?ref=7b721ed0cd91c10fcdb9a81b6007b54d2df54a3f", "patch": "@@ -167,9 +167,9 @@ impl<T> Channel<T> {\n                         token.array.stamp = tail + 1;\n                         return true;\n                     }\n-                    Err(t) => {\n-                        tail = t;\n+                    Err(_) => {\n                         backoff.spin();\n+                        tail = self.load(Ordering::Relaxed);\n                     }\n                 }\n             } else if stamp.wrapping_add(self.one_lap) == tail + 1 {\n@@ -251,8 +251,8 @@ impl<T> Channel<T> {\n                         return true;\n                     }\n                     Err(h) => {\n-                        head = h;\n                         backoff.spin();\n+                        head = self.head.load(Ordering::Relaxed);\n                     }\n                 }\n             } else if stamp == head {"}, {"sha": "22b6b1133aee4aa69b8389cabb4c7cfc9b807c50", "filename": "library/std/src/sync/mpmc/list.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/7b721ed0cd91c10fcdb9a81b6007b54d2df54a3f/library%2Fstd%2Fsrc%2Fsync%2Fmpmc%2Flist.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7b721ed0cd91c10fcdb9a81b6007b54d2df54a3f/library%2Fstd%2Fsrc%2Fsync%2Fmpmc%2Flist.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsync%2Fmpmc%2Flist.rs?ref=7b721ed0cd91c10fcdb9a81b6007b54d2df54a3f", "patch": "@@ -246,10 +246,10 @@ impl<T> Channel<T> {\n                     token.list.offset = offset;\n                     return true;\n                 },\n-                Err(t) => {\n-                    tail = t;\n-                    block = self.tail.block.load(Ordering::Acquire);\n+                Err(_) => {\n                     backoff.spin();\n+                    tail = self.tail.index.load(Ordering::Acquire);\n+                    block = self.tail.block.load(Ordering::Acquire);\n                 }\n             }\n         }\n@@ -351,9 +351,9 @@ impl<T> Channel<T> {\n                     return true;\n                 },\n                 Err(h) => {\n-                    head = h;\n-                    block = self.head.block.load(Ordering::Acquire);\n                     backoff.spin();\n+                    head = self.head.index.load(Ordering::Acquire);\n+                    block = self.head.block.load(Ordering::Acquire);\n                 }\n             }\n         }"}]}