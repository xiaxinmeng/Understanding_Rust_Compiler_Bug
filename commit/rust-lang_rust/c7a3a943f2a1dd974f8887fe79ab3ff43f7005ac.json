{"sha": "c7a3a943f2a1dd974f8887fe79ab3ff43f7005ac", "node_id": "C_kwDOAAsO6NoAKGM3YTNhOTQzZjJhMWRkOTc0Zjg4ODdmZTc5YWIzZmY0M2Y3MDA1YWM", "commit": {"author": {"name": "Oli Scherer", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2023-03-14T11:46:48Z"}, "committer": {"name": "Oli Scherer", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2023-04-04T09:01:44Z"}, "message": "Replace a lock with an atomic", "tree": {"sha": "8c1d2b210e832f74d333b5e7af7340374309dc53", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8c1d2b210e832f74d333b5e7af7340374309dc53"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c7a3a943f2a1dd974f8887fe79ab3ff43f7005ac", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c7a3a943f2a1dd974f8887fe79ab3ff43f7005ac", "html_url": "https://github.com/rust-lang/rust/commit/c7a3a943f2a1dd974f8887fe79ab3ff43f7005ac", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c7a3a943f2a1dd974f8887fe79ab3ff43f7005ac/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "aad33198ff9096a3671cc4938f4b7dba983617be", "url": "https://api.github.com/repos/rust-lang/rust/commits/aad33198ff9096a3671cc4938f4b7dba983617be", "html_url": "https://github.com/rust-lang/rust/commit/aad33198ff9096a3671cc4938f4b7dba983617be"}], "stats": {"total": 17, "additions": 11, "deletions": 6}, "files": [{"sha": "cc7270e7c2a350c41d68b53adf31844e207c40d7", "filename": "compiler/rustc_parse/src/parser/mod.rs", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/c7a3a943f2a1dd974f8887fe79ab3ff43f7005ac/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c7a3a943f2a1dd974f8887fe79ab3ff43f7005ac/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fmod.rs?ref=c7a3a943f2a1dd974f8887fe79ab3ff43f7005ac", "patch": "@@ -29,6 +29,7 @@ use rustc_ast::{Async, AttrArgs, AttrArgsEq, Expr, ExprKind, MacDelimiter, Mutab\n use rustc_ast::{HasAttrs, HasTokens, Unsafe, Visibility, VisibilityKind};\n use rustc_ast_pretty::pprust;\n use rustc_data_structures::fx::FxHashMap;\n+use rustc_data_structures::sync::Ordering;\n use rustc_errors::PResult;\n use rustc_errors::{\n     Applicability, DiagnosticBuilder, ErrorGuaranteed, FatalError, IntoDiagnostic, MultiSpan,\n@@ -1540,8 +1541,12 @@ pub(crate) fn make_unclosed_delims_error(\n }\n \n pub fn emit_unclosed_delims(unclosed_delims: &mut Vec<UnmatchedDelim>, sess: &ParseSess) {\n-    *sess.reached_eof.borrow_mut() |=\n-        unclosed_delims.iter().any(|unmatched_delim| unmatched_delim.found_delim.is_none());\n+    let _ = sess.reached_eof.compare_exchange(\n+        false,\n+        unclosed_delims.iter().any(|unmatched_delim| unmatched_delim.found_delim.is_none()),\n+        Ordering::Relaxed,\n+        Ordering::Relaxed,\n+    );\n     for unmatched in unclosed_delims.drain(..) {\n         if let Some(mut e) = make_unclosed_delims_error(unmatched, sess) {\n             e.emit();"}, {"sha": "e3e4b73efa324071e371a3b8f9d147106c862c6d", "filename": "compiler/rustc_passes/src/entry.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c7a3a943f2a1dd974f8887fe79ab3ff43f7005ac/compiler%2Frustc_passes%2Fsrc%2Fentry.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c7a3a943f2a1dd974f8887fe79ab3ff43f7005ac/compiler%2Frustc_passes%2Fsrc%2Fentry.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_passes%2Fsrc%2Fentry.rs?ref=c7a3a943f2a1dd974f8887fe79ab3ff43f7005ac", "patch": "@@ -187,7 +187,7 @@ fn sigpipe(tcx: TyCtxt<'_>, def_id: DefId) -> u8 {\n \n fn no_main_err(tcx: TyCtxt<'_>, visitor: &EntryContext<'_>) {\n     let sp = tcx.def_span(CRATE_DEF_ID);\n-    if *tcx.sess.parse_sess.reached_eof.borrow() {\n+    if tcx.sess.parse_sess.reached_eof.load(rustc_data_structures::sync::Ordering::Relaxed) {\n         // There's an unclosed brace that made the parser reach `Eof`, we shouldn't complain about\n         // the missing `fn main()` then as it might have been hidden inside an unclosed block.\n         tcx.sess.delay_span_bug(sp, \"`main` not found, but expected unclosed brace error\");"}, {"sha": "e451668e58857549971a7506c89943593f5a1699", "filename": "compiler/rustc_session/src/parse.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/c7a3a943f2a1dd974f8887fe79ab3ff43f7005ac/compiler%2Frustc_session%2Fsrc%2Fparse.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c7a3a943f2a1dd974f8887fe79ab3ff43f7005ac/compiler%2Frustc_session%2Fsrc%2Fparse.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_session%2Fsrc%2Fparse.rs?ref=c7a3a943f2a1dd974f8887fe79ab3ff43f7005ac", "patch": "@@ -8,7 +8,7 @@ use crate::lint::{\n };\n use rustc_ast::node_id::NodeId;\n use rustc_data_structures::fx::{FxHashMap, FxHashSet, FxIndexSet};\n-use rustc_data_structures::sync::{Lock, Lrc};\n+use rustc_data_structures::sync::{AtomicBool, Lock, Lrc};\n use rustc_errors::{emitter::SilentEmitter, ColorConfig, Handler};\n use rustc_errors::{\n     fallback_fluent_bundle, Diagnostic, DiagnosticBuilder, DiagnosticId, DiagnosticMessage,\n@@ -208,7 +208,7 @@ pub struct ParseSess {\n     pub gated_spans: GatedSpans,\n     pub symbol_gallery: SymbolGallery,\n     /// The parser has reached `Eof` due to an unclosed brace. Used to silence unnecessary errors.\n-    pub reached_eof: Lock<bool>,\n+    pub reached_eof: AtomicBool,\n     /// Environment variables accessed during the build and their values when they exist.\n     pub env_depinfo: Lock<FxHashSet<(Symbol, Option<Symbol>)>>,\n     /// File paths accessed during the build.\n@@ -254,7 +254,7 @@ impl ParseSess {\n             ambiguous_block_expr_parse: Lock::new(FxHashMap::default()),\n             gated_spans: GatedSpans::default(),\n             symbol_gallery: SymbolGallery::default(),\n-            reached_eof: Lock::new(false),\n+            reached_eof: AtomicBool::new(false),\n             env_depinfo: Default::default(),\n             file_depinfo: Default::default(),\n             type_ascription_path_suggestions: Default::default(),"}]}