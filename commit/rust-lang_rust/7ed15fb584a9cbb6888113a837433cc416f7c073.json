{"sha": "7ed15fb584a9cbb6888113a837433cc416f7c073", "node_id": "C_kwDOAAsO6NoAKDdlZDE1ZmI1ODRhOWNiYjY4ODgxMTNhODM3NDMzY2M0MTZmN2MwNzM", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2022-04-11T10:06:56Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-04-11T10:06:56Z"}, "message": "Rollup merge of #95876 - fee1-dead:note-const-drop, r=oli-obk\n\nAdd a note for unsatisfied `~const Drop` bounds\n\nr? ``@oli-obk``", "tree": {"sha": "0e20716253fe0dff28d3d6a01572e4491fc0750f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0e20716253fe0dff28d3d6a01572e4491fc0750f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7ed15fb584a9cbb6888113a837433cc416f7c073", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJiU/3ACRBK7hj4Ov3rIwAA6cMIAKyKXca/D0reHOEd+bHVETYp\nEMgNMwwQHJm0i8TqvdcrzFzwxT1K9FVS8j8EMmvK9TSWKWHtHPy5jQbvskYzJtbC\nNLvU5G6MxV7Z8znw281yvz3eeBaWCWAC47P4HTJGtc/elwuoIQVj0jUlvp8MCmXz\nockj4Xapazv7U7CdJJet22MWHEkB8NofH8z7mAHw0pdgQrjy5CzAQbQGBwa3zzQy\nlw8mbLdc/xUXm1ODTol/IPPV3hW48E1bJbkTckPUzmIBzcokaTlwHA0ExdGnd2+R\n1vCpyDFxCMdI5qfw6s7dJ45GXYW5rac3zv1VfPx9G9H8gTvzNxQ8NBt+t9FkqHo=\n=5kaJ\n-----END PGP SIGNATURE-----\n", "payload": "tree 0e20716253fe0dff28d3d6a01572e4491fc0750f\nparent 69fb8f63499ef8f677481d76d92ef91f019e6291\nparent 7f54d68f26783afb5b05ef1f49f655119313fcad\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1649671616 +0200\ncommitter GitHub <noreply@github.com> 1649671616 +0200\n\nRollup merge of #95876 - fee1-dead:note-const-drop, r=oli-obk\n\nAdd a note for unsatisfied `~const Drop` bounds\n\nr? ``@oli-obk``\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7ed15fb584a9cbb6888113a837433cc416f7c073", "html_url": "https://github.com/rust-lang/rust/commit/7ed15fb584a9cbb6888113a837433cc416f7c073", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7ed15fb584a9cbb6888113a837433cc416f7c073/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "69fb8f63499ef8f677481d76d92ef91f019e6291", "url": "https://api.github.com/repos/rust-lang/rust/commits/69fb8f63499ef8f677481d76d92ef91f019e6291", "html_url": "https://github.com/rust-lang/rust/commit/69fb8f63499ef8f677481d76d92ef91f019e6291"}, {"sha": "7f54d68f26783afb5b05ef1f49f655119313fcad", "url": "https://api.github.com/repos/rust-lang/rust/commits/7f54d68f26783afb5b05ef1f49f655119313fcad", "html_url": "https://github.com/rust-lang/rust/commit/7f54d68f26783afb5b05ef1f49f655119313fcad"}], "stats": {"total": 50, "additions": 33, "deletions": 17}, "files": [{"sha": "0cb70de241596080f181260637f8fac47d3e6246", "filename": "compiler/rustc_trait_selection/src/traits/error_reporting/mod.rs", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/7ed15fb584a9cbb6888113a837433cc416f7c073/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Ferror_reporting%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7ed15fb584a9cbb6888113a837433cc416f7c073/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Ferror_reporting%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Ferror_reporting%2Fmod.rs?ref=7ed15fb584a9cbb6888113a837433cc416f7c073", "patch": "@@ -440,6 +440,13 @@ impl<'a, 'tcx> InferCtxtExt<'tcx> for InferCtxt<'a, 'tcx> {\n                             }\n                         }\n \n+                        if Some(trait_ref.def_id()) == tcx.lang_items().drop_trait()\n+                            && predicate_is_const\n+                        {\n+                            err.note(\"`~const Drop` was renamed to `~const Destruct`\");\n+                            err.note(\"See <https://github.com/rust-lang/rust/pull/94901> for more details\");\n+                        }\n+\n                         let explanation = if let ObligationCauseCode::MainFunctionType =\n                             obligation.cause.code()\n                         {"}, {"sha": "85a3e05e8b2136005da7d24c17d0534baae0b77a", "filename": "src/librustdoc/clean/mod.rs", "status": "modified", "additions": 1, "deletions": 11, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/7ed15fb584a9cbb6888113a837433cc416f7c073/src%2Flibrustdoc%2Fclean%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7ed15fb584a9cbb6888113a837433cc416f7c073/src%2Flibrustdoc%2Fclean%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Fmod.rs?ref=7ed15fb584a9cbb6888113a837433cc416f7c073", "patch": "@@ -302,23 +302,13 @@ impl<'a> Clean<Option<WherePredicate>> for ty::Predicate<'a> {\n \n impl<'a> Clean<Option<WherePredicate>> for ty::PolyTraitPredicate<'a> {\n     fn clean(&self, cx: &mut DocContext<'_>) -> Option<WherePredicate> {\n-        // `T: ~const Drop` is not equivalent to `T: Drop`, and we don't currently document `~const` bounds\n-        // because of its experimental status, so just don't show these.\n         // `T: ~const Destruct` is hidden because `T: Destruct` is a no-op.\n         if self.skip_binder().constness == ty::BoundConstness::ConstIfConst\n-            && [cx.tcx.lang_items().drop_trait(), cx.tcx.lang_items().destruct_trait()]\n-                .iter()\n-                .any(|tr| *tr == Some(self.skip_binder().def_id()))\n+            && Some(self.skip_binder().def_id()) == cx.tcx.lang_items().destruct_trait()\n         {\n             return None;\n         }\n \n-        #[cfg(bootstrap)]\n-        {\n-            // FIXME: remove `lang_items().drop_trait()` from above logic,\n-            // as well as the comment about `~const Drop` because it was renamed to `Destruct`.\n-        }\n-\n         let poly_trait_ref = self.map_bound(|pred| pred.trait_ref);\n         Some(WherePredicate::BoundPredicate {\n             ty: poly_trait_ref.skip_binder().self_ty().clean(cx),"}, {"sha": "f9173feeeec81dd0e0ee13938765a3ba6bdb98a8", "filename": "src/test/rustdoc/rfc-2632-const-trait-impl.rs", "status": "modified", "additions": 25, "deletions": 6, "changes": 31, "blob_url": "https://github.com/rust-lang/rust/blob/7ed15fb584a9cbb6888113a837433cc416f7c073/src%2Ftest%2Frustdoc%2Frfc-2632-const-trait-impl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7ed15fb584a9cbb6888113a837433cc416f7c073/src%2Ftest%2Frustdoc%2Frfc-2632-const-trait-impl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Frfc-2632-const-trait-impl.rs?ref=7ed15fb584a9cbb6888113a837433cc416f7c073", "patch": "@@ -1,5 +1,5 @@\n // Test that we do not currently display `~const` in rustdoc\n-// as that syntax is currently provisional; `~const Drop` has\n+// as that syntax is currently provisional; `~const Destruct` has\n // no effect on stable code so it should be hidden as well.\n //\n // To future blessers: make sure that `const_trait_impl` is\n@@ -8,6 +8,8 @@\n #![feature(const_trait_impl)]\n #![crate_name = \"foo\"]\n \n+use std::marker::Destruct;\n+\n pub struct S<T>(T);\n \n // @!has foo/trait.Tr.html '//pre[@class=\"rust trait\"]/code/a[@class=\"trait\"]' '~const'\n@@ -20,22 +22,36 @@ pub trait Tr<T> {\n     // @!has - '//div[@id=\"method.a\"]/h4[@class=\"code-header\"]/span[@class=\"where\"]' '~const'\n     // @has - '//div[@id=\"method.a\"]/h4[@class=\"code-header\"]/span[@class=\"where fmt-newline\"]' ': Clone'\n     #[default_method_body_is_const]\n-    fn a<A: ~const Clone>() where Option<A>: ~const Clone {}\n+    fn a<A: ~const Clone + ~const Destruct>()\n+    where\n+        Option<A>: ~const Clone + ~const Destruct,\n+    {\n+    }\n }\n \n // @!has - '//section[@id=\"impl-Tr%3CT%3E\"]/h3[@class=\"code-header in-band\"]' '~const'\n // @has - '//section[@id=\"impl-Tr%3CT%3E\"]/h3[@class=\"code-header in-band\"]/a[@class=\"trait\"]' 'Clone'\n // @!has - '//section[@id=\"impl-Tr%3CT%3E\"]/h3[@class=\"code-header in-band\"]/span[@class=\"where\"]' '~const'\n // @has - '//section[@id=\"impl-Tr%3CT%3E\"]/h3[@class=\"code-header in-band\"]/span[@class=\"where fmt-newline\"]' ': Clone'\n-impl<T: ~const Clone> const Tr<T> for T where Option<T>: ~const Clone {\n-    fn a<A: ~const Clone>() where Option<A>: ~const Clone {}\n+impl<T: ~const Clone + ~const Destruct> const Tr<T> for T\n+where\n+    Option<T>: ~const Clone + ~const Destruct,\n+{\n+    fn a<A: ~const Clone + ~const Destruct>()\n+    where\n+        Option<A>: ~const Clone + ~const Destruct,\n+    {\n+    }\n }\n \n // @!has foo/fn.foo.html '//pre[@class=\"rust fn\"]/code/a[@class=\"trait\"]' '~const'\n // @has - '//pre[@class=\"rust fn\"]/code/a[@class=\"trait\"]' 'Clone'\n // @!has - '//pre[@class=\"rust fn\"]/code/span[@class=\"where fmt-newline\"]' '~const'\n // @has - '//pre[@class=\"rust fn\"]/code/span[@class=\"where fmt-newline\"]' ': Clone'\n-pub const fn foo<F: ~const Clone>() where Option<F>: ~const Clone {\n+pub const fn foo<F: ~const Clone + ~const Destruct>()\n+where\n+    Option<F>: ~const Clone + ~const Destruct,\n+{\n     F::a()\n }\n \n@@ -44,7 +60,10 @@ impl<T> S<T> {\n     // @has - '//section[@id=\"method.foo\"]/h4[@class=\"code-header\"]/a[@class=\"trait\"]' 'Clone'\n     // @!has - '//section[@id=\"method.foo\"]/h4[@class=\"code-header\"]/span[@class=\"where\"]' '~const'\n     // @has - '//section[@id=\"method.foo\"]/h4[@class=\"code-header\"]/span[@class=\"where fmt-newline\"]' ': Clone'\n-    pub const fn foo<B: ~const Clone>() where B: ~const Clone {\n+    pub const fn foo<B: ~const Clone + ~const Destruct>()\n+    where\n+        B: ~const Clone + ~const Destruct,\n+    {\n         B::a()\n     }\n }"}]}