{"sha": "cc221c472a8f569a574240a27e113fca2ac0ae6b", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNjMjIxYzQ3MmE4ZjU2OWE1NzQyNDBhMjdlMTEzZmNhMmFjMGFlNmI=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2011-03-28T20:10:10Z"}, "committer": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2011-03-28T20:15:03Z"}, "message": "rustc: Don't include a trailing null when writing out metadata; it corrupts the EBML", "tree": {"sha": "723af2428637a240ca150d8aaf56823422ca421f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/723af2428637a240ca150d8aaf56823422ca421f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cc221c472a8f569a574240a27e113fca2ac0ae6b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cc221c472a8f569a574240a27e113fca2ac0ae6b", "html_url": "https://github.com/rust-lang/rust/commit/cc221c472a8f569a574240a27e113fca2ac0ae6b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cc221c472a8f569a574240a27e113fca2ac0ae6b/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8b5968165f48860c1916be0c9e3534403e765522", "url": "https://api.github.com/repos/rust-lang/rust/commits/8b5968165f48860c1916be0c9e3534403e765522", "html_url": "https://github.com/rust-lang/rust/commit/8b5968165f48860c1916be0c9e3534403e765522"}], "stats": {"total": 9, "additions": 5, "deletions": 4}, "files": [{"sha": "ec29dae714d3e5b201286a01009453d755077487", "filename": "src/comp/middle/metadata.rs", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/cc221c472a8f569a574240a27e113fca2ac0ae6b/src%2Fcomp%2Fmiddle%2Fmetadata.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cc221c472a8f569a574240a27e113fca2ac0ae6b/src%2Fcomp%2Fmiddle%2Fmetadata.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Fmetadata.rs?ref=cc221c472a8f569a574240a27e113fca2ac0ae6b", "patch": "@@ -145,9 +145,9 @@ fn ty_fn_str(vec[ty.arg] args, @ty.t out, def_str ds) -> str {\n }\n \n \n-// Returns a Plain Old LLVM String.\n+// Returns a Plain Old LLVM String, *without* the trailing zero byte.\n fn C_postr(str s) -> ValueRef {\n-    ret llvm.LLVMConstString(_str.buf(s), _str.byte_len(s), False);\n+    ret llvm.LLVMConstString(_str.buf(s), _str.byte_len(s) - 1u, False);\n }\n \n \n@@ -303,8 +303,9 @@ fn encode_tag_id(&ebml.writer ebml_w, &ast.def_id id) {\n fn encode_tag_variant_info(@trans.crate_ctxt cx, &ebml.writer ebml_w,\n                            ast.def_id did, vec[ast.variant] variants) {\n     for (ast.variant variant in variants) {\n-        ebml.start_tag(ebml_w, tag_items_variant);\n+        ebml.start_tag(ebml_w, tag_items_item);\n         encode_def_id(ebml_w, variant.id);\n+        encode_kind(ebml_w, 'v' as u8);\n         encode_tag_id(ebml_w, did);\n         encode_type(ebml_w, trans.node_ann_type(cx, variant.ann));\n         if (_vec.len[ast.variant_arg](variant.args) > 0u) {\n@@ -356,7 +357,7 @@ fn encode_info_for_item(@trans.crate_ctxt cx, &ebml.writer ebml_w,\n             encode_type_params(ebml_w, tps);\n             ebml.end_tag(ebml_w);\n \n-            encode_tag_variant_info(cx, ebml_w, did, variants);\n+            //encode_tag_variant_info(cx, ebml_w, did, variants);\n         }\n         case (ast.item_obj(?id, _, ?tps, ?did, ?ann)) {\n             ebml.start_tag(ebml_w, tag_items_item);"}]}