{"sha": "f8c03b6ab771f0a83f354d645ff357af83aa29ea", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY4YzAzYjZhYjc3MWYwYTgzZjM1NGQ2NDVmZjM1N2FmODNhYTI5ZWE=", "commit": {"author": {"name": "aheart", "email": "aheart@users.noreply.github.com", "date": "2018-12-10T21:20:28Z"}, "committer": {"name": "aheart", "email": "aheart@users.noreply.github.com", "date": "2018-12-10T22:45:39Z"}, "message": "Add lint for stlib", "tree": {"sha": "bc87074a3fbe806190ae6898d90877d8bebe4b66", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bc87074a3fbe806190ae6898d90877d8bebe4b66"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f8c03b6ab771f0a83f354d645ff357af83aa29ea", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f8c03b6ab771f0a83f354d645ff357af83aa29ea", "html_url": "https://github.com/rust-lang/rust/commit/f8c03b6ab771f0a83f354d645ff357af83aa29ea", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f8c03b6ab771f0a83f354d645ff357af83aa29ea/comments", "author": {"login": "aheart", "id": 9392791, "node_id": "MDQ6VXNlcjkzOTI3OTE=", "avatar_url": "https://avatars.githubusercontent.com/u/9392791?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aheart", "html_url": "https://github.com/aheart", "followers_url": "https://api.github.com/users/aheart/followers", "following_url": "https://api.github.com/users/aheart/following{/other_user}", "gists_url": "https://api.github.com/users/aheart/gists{/gist_id}", "starred_url": "https://api.github.com/users/aheart/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aheart/subscriptions", "organizations_url": "https://api.github.com/users/aheart/orgs", "repos_url": "https://api.github.com/users/aheart/repos", "events_url": "https://api.github.com/users/aheart/events{/privacy}", "received_events_url": "https://api.github.com/users/aheart/received_events", "type": "User", "site_admin": false}, "committer": {"login": "aheart", "id": 9392791, "node_id": "MDQ6VXNlcjkzOTI3OTE=", "avatar_url": "https://avatars.githubusercontent.com/u/9392791?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aheart", "html_url": "https://github.com/aheart", "followers_url": "https://api.github.com/users/aheart/followers", "following_url": "https://api.github.com/users/aheart/following{/other_user}", "gists_url": "https://api.github.com/users/aheart/gists{/gist_id}", "starred_url": "https://api.github.com/users/aheart/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aheart/subscriptions", "organizations_url": "https://api.github.com/users/aheart/orgs", "repos_url": "https://api.github.com/users/aheart/repos", "events_url": "https://api.github.com/users/aheart/events{/privacy}", "received_events_url": "https://api.github.com/users/aheart/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "aa0428570e404b0eb4cb16b58e56a64b8ee1e013", "url": "https://api.github.com/repos/rust-lang/rust/commits/aa0428570e404b0eb4cb16b58e56a64b8ee1e013", "html_url": "https://github.com/rust-lang/rust/commit/aa0428570e404b0eb4cb16b58e56a64b8ee1e013"}], "stats": {"total": 13, "additions": 11, "deletions": 2}, "files": [{"sha": "61341cbc30ce45ca3ef5f17c4676bf67dd482d70", "filename": "src/librustc/middle/stability.rs", "status": "modified", "additions": 11, "deletions": 2, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/f8c03b6ab771f0a83f354d645ff357af83aa29ea/src%2Flibrustc%2Fmiddle%2Fstability.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f8c03b6ab771f0a83f354d645ff357af83aa29ea/src%2Flibrustc%2Fmiddle%2Fstability.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fstability.rs?ref=f8c03b6ab771f0a83f354d645ff357af83aa29ea", "patch": "@@ -599,7 +599,6 @@ impl<'a, 'gcx, 'tcx> TyCtxt<'a, 'gcx, 'tcx> {\n                 let skip = self.lookup_deprecation_entry(parent_def_id)\n                                .map_or(false, |parent_depr| parent_depr.same_origin(&depr_entry));\n \n-\n                 if let Some(since) = deprecated_in_future_version {\n                     let path = self.item_path_str(def_id);\n                     let message = format!(\"use of item '{}' \\\n@@ -640,13 +639,23 @@ impl<'a, 'gcx, 'tcx> TyCtxt<'a, 'gcx, 'tcx> {\n                 = stability {\n             if let Some(id) = id {\n                 let path = self.item_path_str(def_id);\n-                let message = format!(\"use of deprecated item '{}'\", path);\n                 if deprecation_in_effect(&since.as_str()) {\n+                    let message = format!(\"use of deprecated item '{}'\", path);\n                     lint_deprecated(def_id,\n                                     id,\n                                     Some(reason),\n                                     &message,\n                                     lint::builtin::DEPRECATED);\n+                } else {\n+                    let message = format!(\"use of item '{}' \\\n+                                           that will be deprecated in future version {}\",\n+                                          path,\n+                                          since);\n+                    lint_deprecated(def_id,\n+                                    id,\n+                                    Some(reason),\n+                                    &message,\n+                                    lint::builtin::DEPRECATED_IN_FUTURE);\n                 }\n             }\n         }"}]}