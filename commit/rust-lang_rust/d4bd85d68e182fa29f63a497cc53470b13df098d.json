{"sha": "d4bd85d68e182fa29f63a497cc53470b13df098d", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ0YmQ4NWQ2OGUxODJmYTI5ZjYzYTQ5N2NjNTM0NzBiMTNkZjA5OGQ=", "commit": {"author": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2018-05-15T12:26:55Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2018-05-15T12:26:55Z"}, "message": "Rollup merge of #50399 - nrc:alias, r=eddyb\n\nsave-analysis: handle aliasing imports a bit more nicely\n\nr? @eddyb", "tree": {"sha": "78e5ce2a960a8db7e411b6cc43f4e00a05c8ca9a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/78e5ce2a960a8db7e411b6cc43f4e00a05c8ca9a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d4bd85d68e182fa29f63a497cc53470b13df098d", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJa+tIPCRBK7hj4Ov3rIwAAdHIIAIVoiHc3xNhLV73M6HCuCNoS\njjnI7I/ESRMlCrOZ3rDLKYSPe6Fq4II3GQA0f/8rTwtJKwNWJml/37I4CEkhF5hh\nGJ6YSoWMsuAmL07H08ByYy9ffvugR91AZRx86DDwfgYQz9J1wq4Yl9OjbX+23lUg\nqgaoLjEP3dOdL/3wjyfa+j0bxj/O/oGsz5V9f11dV7gnckyNl/a4IGHC3hAKnYrI\n32u0kprVBVD7lSrRDUxL+UyPQLPmD+Y3lYBxU02Vv9bUM8QKdfj9PcM8qqMjs6qC\niF8KZVdOOy9U62cjoWGY3n8CqU2+W/m2cTJofFA2ZW+TnfkIytWYg2atR7Y+B2Q=\n=xhTd\n-----END PGP SIGNATURE-----\n", "payload": "tree 78e5ce2a960a8db7e411b6cc43f4e00a05c8ca9a\nparent 7a9eb836a9d37943bbd3f3ea29869e0a51c5f8c8\nparent a10577ca5367272a8a4b02f5d5ba7be81e43d170\nauthor Guillaume Gomez <guillaume1.gomez@gmail.com> 1526387215 +0200\ncommitter GitHub <noreply@github.com> 1526387215 +0200\n\nRollup merge of #50399 - nrc:alias, r=eddyb\n\nsave-analysis: handle aliasing imports a bit more nicely\n\nr? @eddyb\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d4bd85d68e182fa29f63a497cc53470b13df098d", "html_url": "https://github.com/rust-lang/rust/commit/d4bd85d68e182fa29f63a497cc53470b13df098d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d4bd85d68e182fa29f63a497cc53470b13df098d/comments", "author": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7a9eb836a9d37943bbd3f3ea29869e0a51c5f8c8", "url": "https://api.github.com/repos/rust-lang/rust/commits/7a9eb836a9d37943bbd3f3ea29869e0a51c5f8c8", "html_url": "https://github.com/rust-lang/rust/commit/7a9eb836a9d37943bbd3f3ea29869e0a51c5f8c8"}, {"sha": "a10577ca5367272a8a4b02f5d5ba7be81e43d170", "url": "https://api.github.com/repos/rust-lang/rust/commits/a10577ca5367272a8a4b02f5d5ba7be81e43d170", "html_url": "https://github.com/rust-lang/rust/commit/a10577ca5367272a8a4b02f5d5ba7be81e43d170"}], "stats": {"total": 156, "additions": 55, "deletions": 101}, "files": [{"sha": "6103c77ec225b8b2eb8b5e5313e6f0e36cab2090", "filename": "src/Cargo.lock", "status": "modified", "additions": 46, "deletions": 8, "changes": 54, "blob_url": "https://github.com/rust-lang/rust/blob/d4bd85d68e182fa29f63a497cc53470b13df098d/src%2FCargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/d4bd85d68e182fa29f63a497cc53470b13df098d/src%2FCargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2FCargo.lock?ref=d4bd85d68e182fa29f63a497cc53470b13df098d", "patch": "@@ -79,15 +79,15 @@ dependencies = [\n \n [[package]]\n name = \"assert_cli\"\n-version = \"0.5.6\"\n+version = \"0.5.4\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n  \"colored 1.6.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"difference 2.0.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"difference 1.0.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"environment 0.1.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"failure 0.1.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"failure_derive 0.1.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"error-chain 0.11.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"serde_json 1.0.15 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"skeptic 0.13.3 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n [[package]]\n@@ -183,6 +183,11 @@ dependencies = [\n name = \"build_helper\"\n version = \"0.1.0\"\n \n+[[package]]\n+name = \"bytecount\"\n+version = \"0.3.1\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+\n [[package]]\n name = \"byteorder\"\n version = \"1.2.2\"\n@@ -570,6 +575,11 @@ name = \"diff\"\n version = \"0.1.11\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n \n+[[package]]\n+name = \"difference\"\n+version = \"1.0.0\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+\n [[package]]\n name = \"difference\"\n version = \"2.0.0\"\n@@ -1550,7 +1560,7 @@ dependencies = [\n  \"lazy_static 1.0.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"libc 0.2.40 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"num_cpus 1.8.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"rand 0.3.22 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"rand 0.4.2 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n [[package]]\n@@ -1689,6 +1699,15 @@ dependencies = [\n  \"serde_derive 1.0.40 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n+[[package]]\n+name = \"rls-data\"\n+version = \"0.16.0\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+dependencies = [\n+ \"rls-span 0.4.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"rustc-serialize 0.3.24 (registry+https://github.com/rust-lang/crates.io-index)\",\n+]\n+\n [[package]]\n name = \"rls-rustc\"\n version = \"0.2.2\"\n@@ -2140,7 +2159,7 @@ name = \"rustc_save_analysis\"\n version = \"0.0.0\"\n dependencies = [\n  \"log 0.4.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"rls-data 0.15.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"rls-data 0.16.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"rls-span 0.4.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"rustc 0.0.0\",\n  \"rustc-serialize 0.3.24 (registry+https://github.com/rust-lang/crates.io-index)\",\n@@ -2290,7 +2309,7 @@ dependencies = [\n name = \"rustfmt-nightly\"\n version = \"0.6.1\"\n dependencies = [\n- \"assert_cli 0.5.6 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"assert_cli 0.5.4 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"cargo_metadata 0.5.4 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"derive-new 0.5.4 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"diff 0.1.11 (registry+https://github.com/rust-lang/crates.io-index)\",\n@@ -2417,6 +2436,21 @@ name = \"siphasher\"\n version = \"0.2.2\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n \n+[[package]]\n+name = \"skeptic\"\n+version = \"0.13.3\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+dependencies = [\n+ \"bytecount 0.3.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"cargo_metadata 0.5.4 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"error-chain 0.11.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"glob 0.2.11 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"pulldown-cmark 0.1.2 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"serde_json 1.0.15 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"tempdir 0.3.7 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"walkdir 2.1.4 (registry+https://github.com/rust-lang/crates.io-index)\",\n+]\n+\n [[package]]\n name = \"smallvec\"\n version = \"0.6.0\"\n@@ -2988,14 +3022,15 @@ source = \"registry+https://github.com/rust-lang/crates.io-index\"\n \"checksum ansi_term 0.11.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"ee49baf6cb617b853aa8d93bf420db2383fab46d314482ca2803b40d5fde979b\"\n \"checksum ar 0.3.1 (registry+https://github.com/rust-lang/crates.io-index)\" = \"35c7a5669cb64f085739387e1308b74e6d44022464b7f1b63bbd4ceb6379ec31\"\n \"checksum arrayvec 0.4.7 (registry+https://github.com/rust-lang/crates.io-index)\" = \"a1e964f9e24d588183fcb43503abda40d288c8657dfc27311516ce2f05675aef\"\n-\"checksum assert_cli 0.5.6 (registry+https://github.com/rust-lang/crates.io-index)\" = \"4c8ca6beaa44a3520407b28a4a779a19b1364fcadcb2f258c41a7baf3102ced0\"\n+\"checksum assert_cli 0.5.4 (registry+https://github.com/rust-lang/crates.io-index)\" = \"72342c21057a3cb5f7c2d849bf7999a83795434dd36d74fa8c24680581bd1930\"\n \"checksum atty 0.2.8 (registry+https://github.com/rust-lang/crates.io-index)\" = \"af80143d6f7608d746df1520709e5d141c96f240b0e62b0aa41bdfb53374d9d4\"\n \"checksum backtrace 0.3.6 (registry+https://github.com/rust-lang/crates.io-index)\" = \"ebbe525f66f42d207968308ee86bc2dd60aa5fab535b22e616323a173d097d8e\"\n \"checksum backtrace-sys 0.1.16 (registry+https://github.com/rust-lang/crates.io-index)\" = \"44585761d6161b0f57afc49482ab6bd067e4edef48c12a152c237eb0203f7661\"\n \"checksum bitflags 0.7.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"aad18937a628ec6abcd26d1489012cc0e18c21798210f491af69ded9b881106d\"\n \"checksum bitflags 0.9.1 (registry+https://github.com/rust-lang/crates.io-index)\" = \"4efd02e230a02e18f92fc2735f44597385ed02ad8f831e7c1c1156ee5e1ab3a5\"\n \"checksum bitflags 1.0.1 (registry+https://github.com/rust-lang/crates.io-index)\" = \"b3c30d3802dfb7281680d6285f2ccdaa8c2d8fee41f93805dba5c4cf50dc23cf\"\n \"checksum bufstream 0.1.3 (registry+https://github.com/rust-lang/crates.io-index)\" = \"f2f382711e76b9de6c744cc00d0497baba02fb00a787f088c879f01d09468e32\"\n+\"checksum bytecount 0.3.1 (registry+https://github.com/rust-lang/crates.io-index)\" = \"882585cd7ec84e902472df34a5e01891202db3bf62614e1f0afe459c1afcf744\"\n \"checksum byteorder 1.2.2 (registry+https://github.com/rust-lang/crates.io-index)\" = \"73b5bdfe7ee3ad0b99c9801d58807a9dbc9e09196365b0203853b99889ab3c87\"\n \"checksum cargo_metadata 0.5.4 (registry+https://github.com/rust-lang/crates.io-index)\" = \"6ebd6272a2ca4fd39dbabbd6611eb03df45c2259b3b80b39a9ff8fbdcf42a4b3\"\n \"checksum cc 1.0.15 (registry+https://github.com/rust-lang/crates.io-index)\" = \"0ebb87d1116151416c0cf66a0e3fb6430cccd120fd6300794b4dfaa050ac40ba\"\n@@ -3020,6 +3055,7 @@ source = \"registry+https://github.com/rust-lang/crates.io-index\"\n \"checksum debug_unreachable 0.1.1 (registry+https://github.com/rust-lang/crates.io-index)\" = \"9a032eac705ca39214d169f83e3d3da290af06d8d1d344d1baad2fd002dca4b3\"\n \"checksum derive-new 0.5.4 (registry+https://github.com/rust-lang/crates.io-index)\" = \"ceed73957c449214f8440eec8ad7fa282b67dc9eacbb24a3085b15d60397a17a\"\n \"checksum diff 0.1.11 (registry+https://github.com/rust-lang/crates.io-index)\" = \"3c2b69f912779fbb121ceb775d74d51e915af17aaebc38d28a592843a2dd0a3a\"\n+\"checksum difference 1.0.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"b3304d19798a8e067e48d8e69b2c37f0b5e9b4e462504ad9e27e9f3fce02bba8\"\n \"checksum difference 2.0.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"524cbf6897b527295dff137cec09ecf3a05f4fddffd7dfcd1585403449e74198\"\n \"checksum dtoa 0.4.2 (registry+https://github.com/rust-lang/crates.io-index)\" = \"09c3753c3db574d215cba4ea76018483895d7bff25a31b49ba45db21c48e50ab\"\n \"checksum either 1.5.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"3be565ca5c557d7f59e7cfcf1844f9e3033650c929c6566f511e8005f205c1d0\"\n@@ -3132,6 +3168,7 @@ source = \"registry+https://github.com/rust-lang/crates.io-index\"\n \"checksum rls-analysis 0.12.1 (registry+https://github.com/rust-lang/crates.io-index)\" = \"a41488cf5dc99d6ce383319d2978756567b70d4ed0539eb0d9ce07763e732e46\"\n \"checksum rls-blacklist 0.1.2 (registry+https://github.com/rust-lang/crates.io-index)\" = \"e4a9cc2545ccb7e05b355bfe047b8039a6ec12270d5f3c996b766b340a50f7d2\"\n \"checksum rls-data 0.15.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"bea04462e94b5512a78499837eecb7db182ff082144cd1b4bc32ef5d43de6510\"\n+\"checksum rls-data 0.16.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"3dd20763e1c60ae8945384c8a8fa4ac44f8afa7b0a817511f5e8927e5d24f988\"\n \"checksum rls-rustc 0.2.2 (registry+https://github.com/rust-lang/crates.io-index)\" = \"885f66b92757420572cbb02e033d4a9558c7413ca9b7ac206f28fd58ffdb44ea\"\n \"checksum rls-span 0.4.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"5d7c7046dc6a92f2ae02ed302746db4382e75131b9ce20ce967259f6b5867a6a\"\n \"checksum rls-vfs 0.4.5 (registry+https://github.com/rust-lang/crates.io-index)\" = \"be231e1e559c315bc60ced5ad2cc2d7a9c208ed7d4e2c126500149836fda19bb\"\n@@ -3162,6 +3199,7 @@ source = \"registry+https://github.com/rust-lang/crates.io-index\"\n \"checksum shell-escape 0.1.4 (registry+https://github.com/rust-lang/crates.io-index)\" = \"170a13e64f2a51b77a45702ba77287f5c6829375b04a69cf2222acd17d0cfab9\"\n \"checksum shlex 0.1.1 (registry+https://github.com/rust-lang/crates.io-index)\" = \"7fdf1b9db47230893d76faad238fd6097fd6d6a9245cd7a4d90dbd639536bbd2\"\n \"checksum siphasher 0.2.2 (registry+https://github.com/rust-lang/crates.io-index)\" = \"0df90a788073e8d0235a67e50441d47db7c8ad9debd91cbf43736a2a92d36537\"\n+\"checksum skeptic 0.13.3 (registry+https://github.com/rust-lang/crates.io-index)\" = \"c4474d6da9593171bcb086890fc344a3a12783cb24e5b141f8a5d0e43561f4b6\"\n \"checksum smallvec 0.6.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"44db0ecb22921ef790d17ae13a3f6d15784183ff5f2a01aa32098c7498d2b4b9\"\n \"checksum socket2 0.3.5 (registry+https://github.com/rust-lang/crates.io-index)\" = \"ff606e0486e88f5fc6cfeb3966e434fb409abbc7a3ab495238f70a1ca97f789d\"\n \"checksum stable_deref_trait 1.0.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"15132e0e364248108c5e2c02e3ab539be8d6f5d52a01ca9bbf27ed657316f02b\""}, {"sha": "7b94170ef6d992f1cbc71dafeb6ed1edd65bab69", "filename": "src/librustc_save_analysis/Cargo.toml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d4bd85d68e182fa29f63a497cc53470b13df098d/src%2Flibrustc_save_analysis%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/d4bd85d68e182fa29f63a497cc53470b13df098d/src%2Flibrustc_save_analysis%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_save_analysis%2FCargo.toml?ref=d4bd85d68e182fa29f63a497cc53470b13df098d", "patch": "@@ -16,7 +16,7 @@ rustc_target = { path = \"../librustc_target\" }\n rustc_typeck = { path = \"../librustc_typeck\" }\n syntax = { path = \"../libsyntax\" }\n syntax_pos = { path = \"../libsyntax_pos\" }\n-rls-data = \"0.15\"\n+rls-data = \"0.16\"\n rls-span = \"0.4\"\n # FIXME(#40527) should move rustc serialize out of tree\n rustc-serialize = \"0.3\""}, {"sha": "2ef294fe43089f8fe9d4cd901f807798478733d9", "filename": "src/librustc_save_analysis/dump_visitor.rs", "status": "modified", "additions": 8, "deletions": 92, "changes": 100, "blob_url": "https://github.com/rust-lang/rust/blob/d4bd85d68e182fa29f63a497cc53470b13df098d/src%2Flibrustc_save_analysis%2Fdump_visitor.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d4bd85d68e182fa29f63a497cc53470b13df098d/src%2Flibrustc_save_analysis%2Fdump_visitor.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_save_analysis%2Fdump_visitor.rs?ref=d4bd85d68e182fa29f63a497cc53470b13df098d", "patch": "@@ -268,80 +268,6 @@ impl<'l, 'tcx: 'l, 'll, O: DumpOutput + 'll> DumpVisitor<'l, 'tcx, 'll, O> {\n         }\n     }\n \n-    fn process_def_kind(\n-        &mut self,\n-        ref_id: NodeId,\n-        span: Span,\n-        sub_span: Option<Span>,\n-        def_id: DefId,\n-    ) {\n-        if self.span.filter_generated(sub_span, span) {\n-            return;\n-        }\n-\n-        let def = self.save_ctxt.get_path_def(ref_id);\n-        match def {\n-            HirDef::Mod(_) => {\n-                let span = self.span_from_span(sub_span.expect(\"No span found for mod ref\"));\n-                self.dumper.dump_ref(Ref {\n-                    kind: RefKind::Mod,\n-                    span,\n-                    ref_id: ::id_from_def_id(def_id),\n-                });\n-            }\n-            HirDef::Struct(..) |\n-            HirDef::Variant(..) |\n-            HirDef::Union(..) |\n-            HirDef::Enum(..) |\n-            HirDef::TyAlias(..) |\n-            HirDef::TyForeign(..) |\n-            HirDef::TraitAlias(..) |\n-            HirDef::Trait(_) => {\n-                let span = self.span_from_span(sub_span.expect(\"No span found for type ref\"));\n-                self.dumper.dump_ref(Ref {\n-                    kind: RefKind::Type,\n-                    span,\n-                    ref_id: ::id_from_def_id(def_id),\n-                });\n-            }\n-            HirDef::Static(..) |\n-            HirDef::Const(..) |\n-            HirDef::StructCtor(..) |\n-            HirDef::VariantCtor(..) => {\n-                let span = self.span_from_span(sub_span.expect(\"No span found for var ref\"));\n-                self.dumper.dump_ref(Ref {\n-                    kind: RefKind::Variable,\n-                    span,\n-                    ref_id: ::id_from_def_id(def_id),\n-                });\n-            }\n-            HirDef::Fn(..) => {\n-                let span = self.span_from_span(sub_span.expect(\"No span found for fn ref\"));\n-                self.dumper.dump_ref(Ref {\n-                    kind: RefKind::Function,\n-                    span,\n-                    ref_id: ::id_from_def_id(def_id),\n-                });\n-            }\n-            // With macros 2.0, we can legitimately get a ref to a macro, but\n-            // we don't handle it properly for now (FIXME).\n-            HirDef::Macro(..) => {}\n-            HirDef::Local(..) |\n-            HirDef::Upvar(..) |\n-            HirDef::SelfTy(..) |\n-            HirDef::Label(_) |\n-            HirDef::TyParam(..) |\n-            HirDef::Method(..) |\n-            HirDef::AssociatedTy(..) |\n-            HirDef::AssociatedConst(..) |\n-            HirDef::PrimTy(_) |\n-            HirDef::GlobalAsm(_) |\n-            HirDef::Err => {\n-                span_bug!(span, \"process_def_kind for unexpected item: {:?}\", def);\n-            }\n-        }\n-    }\n-\n     fn process_formals(&mut self, formals: &'l [ast::Arg], qualname: &str) {\n         for arg in formals {\n             self.visit_pat(&arg.pat);\n@@ -1348,29 +1274,17 @@ impl<'l, 'tcx: 'l, 'll, O: DumpOutput + 'll> DumpVisitor<'l, 'tcx, 'll, O> {\n                 };\n \n                 let sub_span = self.span.span_for_last_ident(path.span);\n-                let mod_id = match self.lookup_def_id(id) {\n-                    Some(def_id) => {\n-                        self.process_def_kind(id, path.span, sub_span, def_id);\n-                        Some(def_id)\n-                    }\n-                    None => None,\n-                };\n-\n-                // 'use' always introduces an alias, if there is not an explicit\n-                // one, there is an implicit one.\n-                let sub_span = match self.span.sub_span_after_keyword(use_tree.span,\n-                                                                      keywords::As) {\n-                    Some(sub_span) => Some(sub_span),\n-                    None => sub_span,\n-                };\n+                let alias_span = self.span.sub_span_after_keyword(use_tree.span, keywords::As);\n+                let ref_id = self.lookup_def_id(id);\n \n                 if !self.span.filter_generated(sub_span, path.span) {\n-                    let span =\n-                        self.span_from_span(sub_span.expect(\"No span found for use\"));\n+                    let span = self.span_from_span(sub_span.expect(\"No span found for use\"));\n+                    let alias_span = alias_span.map(|sp| self.span_from_span(sp));\n                     self.dumper.import(&access, Import {\n                         kind: ImportKind::Use,\n-                        ref_id: mod_id.map(|id| ::id_from_def_id(id)),\n+                        ref_id: ref_id.map(|id| ::id_from_def_id(id)),\n                         span,\n+                        alias_span,\n                         name: ident.to_string(),\n                         value: String::new(),\n                         parent,\n@@ -1407,6 +1321,7 @@ impl<'l, 'tcx: 'l, 'll, O: DumpOutput + 'll> DumpVisitor<'l, 'tcx, 'll, O> {\n                         kind: ImportKind::GlobUse,\n                         ref_id: None,\n                         span,\n+                        alias_span: None,\n                         name: \"*\".to_owned(),\n                         value: names.join(\", \"),\n                         parent,\n@@ -1500,6 +1415,7 @@ impl<'l, 'tcx: 'l, 'll, O: DumpOutput + 'll> Visitor<'l> for DumpVisitor<'l, 'tc\n                             kind: ImportKind::ExternCrate,\n                             ref_id: None,\n                             span,\n+                            alias_span: None,\n                             name: item.ident.to_string(),\n                             value: String::new(),\n                             parent,"}]}