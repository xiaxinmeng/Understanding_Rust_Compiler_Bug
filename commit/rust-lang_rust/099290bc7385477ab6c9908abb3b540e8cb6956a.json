{"sha": "099290bc7385477ab6c9908abb3b540e8cb6956a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA5OTI5MGJjNzM4NTQ3N2FiNmM5OTA4YWJiM2I1NDBlOGNiNjk1NmE=", "commit": {"author": {"name": "Kevin Atkinson", "email": "kevina@cs.utah.edu", "date": "2012-01-29T01:20:43Z"}, "committer": {"name": "Kevin Atkinson", "email": "kevina@cs.utah.edu", "date": "2012-02-04T03:41:37Z"}, "message": "When replacing $(...) with $0 preserve spacing for better error messages.\n\nThat is:\n  x + $(foo) + y\nbecomes:\n  x + $0     + y\nnot:\n  x + $0 + y", "tree": {"sha": "4f02a335086428e58f6d34f83e072d4642d86587", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4f02a335086428e58f6d34f83e072d4642d86587"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/099290bc7385477ab6c9908abb3b540e8cb6956a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/099290bc7385477ab6c9908abb3b540e8cb6956a", "html_url": "https://github.com/rust-lang/rust/commit/099290bc7385477ab6c9908abb3b540e8cb6956a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/099290bc7385477ab6c9908abb3b540e8cb6956a/comments", "author": {"login": "kevina", "id": 1271492, "node_id": "MDQ6VXNlcjEyNzE0OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/1271492?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kevina", "html_url": "https://github.com/kevina", "followers_url": "https://api.github.com/users/kevina/followers", "following_url": "https://api.github.com/users/kevina/following{/other_user}", "gists_url": "https://api.github.com/users/kevina/gists{/gist_id}", "starred_url": "https://api.github.com/users/kevina/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kevina/subscriptions", "organizations_url": "https://api.github.com/users/kevina/orgs", "repos_url": "https://api.github.com/users/kevina/repos", "events_url": "https://api.github.com/users/kevina/events{/privacy}", "received_events_url": "https://api.github.com/users/kevina/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kevina", "id": 1271492, "node_id": "MDQ6VXNlcjEyNzE0OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/1271492?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kevina", "html_url": "https://github.com/kevina", "followers_url": "https://api.github.com/users/kevina/followers", "following_url": "https://api.github.com/users/kevina/following{/other_user}", "gists_url": "https://api.github.com/users/kevina/gists{/gist_id}", "starred_url": "https://api.github.com/users/kevina/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kevina/subscriptions", "organizations_url": "https://api.github.com/users/kevina/orgs", "repos_url": "https://api.github.com/users/kevina/repos", "events_url": "https://api.github.com/users/kevina/events{/privacy}", "received_events_url": "https://api.github.com/users/kevina/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c0f9073557b5daed86aea411fb4c56e554583af2", "url": "https://api.github.com/repos/rust-lang/rust/commits/c0f9073557b5daed86aea411fb4c56e554583af2", "html_url": "https://github.com/rust-lang/rust/commit/c0f9073557b5daed86aea411fb4c56e554583af2"}], "stats": {"total": 26, "additions": 19, "deletions": 7}, "files": [{"sha": "1b17356ce91fa8e4fc04c3c7e6c3996fe399caeb", "filename": "src/comp/syntax/ext/qquote.rs", "status": "modified", "additions": 19, "deletions": 7, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/099290bc7385477ab6c9908abb3b540e8cb6956a/src%2Fcomp%2Fsyntax%2Fext%2Fqquote.rs", "raw_url": "https://github.com/rust-lang/rust/raw/099290bc7385477ab6c9908abb3b540e8cb6956a/src%2Fcomp%2Fsyntax%2Fext%2Fqquote.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fsyntax%2Fext%2Fqquote.rs?ref=099290bc7385477ab6c9908abb3b540e8cb6956a", "patch": "@@ -38,6 +38,10 @@ fn visit_expr_aq(expr: @ast::expr, &&cx: aq_ctxt, v: vt<aq_ctxt>)\n     }\n }\n \n+fn is_space(c: char) -> bool {\n+    syntax::parse::lexer::is_whitespace(c)\n+}\n+\n fn expand_qquote(ecx: ext_ctxt, sp: span, e: @ast::expr) -> @ast::expr {\n     let str = codemap::span_to_snippet(sp, ecx.session().parse_sess.cm);\n     let qcx = gather_anti_quotes(sp.lo, e);\n@@ -48,20 +52,28 @@ fn expand_qquote(ecx: ext_ctxt, sp: span, e: @ast::expr) -> @ast::expr {\n         prev = lo;\n     }\n     let str2 = \"\";\n-    let active = true;\n+    enum state {active, skip(uint), blank};\n+    let state = active;\n     let i = 0u, j = 0u;\n     let g_len = vec::len(cx.gather);\n     str::chars_iter(str) {|ch|\n-        if (active && j < g_len && i == cx.gather[j].lo) {\n+        if (j < g_len && i == cx.gather[j].lo) {\n             assert ch == '$';\n-            active = false;\n-            str2 += #fmt(\" $%u \", j);\n+            let repl = #fmt(\"$%u \", j);\n+            state = skip(str::char_len(repl));\n+            str2 += repl;\n+        }\n+        alt state {\n+          active {str::push_char(str2, ch);}\n+          skip(1u) {state = blank;}\n+          skip(sk) {state = skip (sk-1u);}\n+          blank if is_space(ch) {str::push_char(str2, ch);}\n+          blank {str::push_char(str2, ' ');}\n         }\n-        if (active) {str::push_char(str2, ch);}\n         i += 1u;\n-        if (!active && j < g_len && i == cx.gather[j].hi) {\n+        if (j < g_len && i == cx.gather[j].hi) {\n             assert ch == ')';\n-            active = true;\n+            state = active;\n             j += 1u;\n         }\n     }"}]}