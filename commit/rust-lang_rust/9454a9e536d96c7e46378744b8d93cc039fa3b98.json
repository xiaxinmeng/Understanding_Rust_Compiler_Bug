{"sha": "9454a9e536d96c7e46378744b8d93cc039fa3b98", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk0NTRhOWU1MzZkOTZjN2U0NjM3ODc0NGI4ZDkzY2MwMzlmYTNiOTg=", "commit": {"author": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2020-11-12T16:32:45Z"}, "committer": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2020-11-12T16:32:45Z"}, "message": "Use Module::find_use_path_prefixed in extract_struct_from_enum_variant assist", "tree": {"sha": "75bc23073a8a1fea6f53af5fa5d9b10d00e81641", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/75bc23073a8a1fea6f53af5fa5d9b10d00e81641"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9454a9e536d96c7e46378744b8d93cc039fa3b98", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9454a9e536d96c7e46378744b8d93cc039fa3b98", "html_url": "https://github.com/rust-lang/rust/commit/9454a9e536d96c7e46378744b8d93cc039fa3b98", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9454a9e536d96c7e46378744b8d93cc039fa3b98/comments", "author": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e24cc77cd147b710a0ca161acd2e8d6922e067bd", "url": "https://api.github.com/repos/rust-lang/rust/commits/e24cc77cd147b710a0ca161acd2e8d6922e067bd", "html_url": "https://github.com/rust-lang/rust/commit/e24cc77cd147b710a0ca161acd2e8d6922e067bd"}], "stats": {"total": 14, "additions": 9, "deletions": 5}, "files": [{"sha": "ef4dce4770d8465515bd98938c87113204e150a2", "filename": "crates/assists/src/handlers/extract_struct_from_enum_variant.rs", "status": "modified", "additions": 9, "deletions": 5, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/9454a9e536d96c7e46378744b8d93cc039fa3b98/crates%2Fassists%2Fsrc%2Fhandlers%2Fextract_struct_from_enum_variant.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9454a9e536d96c7e46378744b8d93cc039fa3b98/crates%2Fassists%2Fsrc%2Fhandlers%2Fextract_struct_from_enum_variant.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fassists%2Fsrc%2Fhandlers%2Fextract_struct_from_enum_variant.rs?ref=9454a9e536d96c7e46378744b8d93cc039fa3b98", "patch": "@@ -135,8 +135,12 @@ fn insert_import(\n     variant_hir_name: &Name,\n ) -> Option<()> {\n     let db = ctx.db();\n-    let mod_path = module.find_use_path(db, enum_module_def.clone());\n-    if let Some(mut mod_path) = mod_path.filter(|path| path.len() > 1) {\n+    let mod_path = module.find_use_path_prefixed(\n+        db,\n+        enum_module_def.clone(),\n+        ctx.config.insert_use.prefix_kind,\n+    );\n+    if let Some(mut mod_path) = mod_path.filter(|path| !path.is_ident()) {\n         mod_path.segments.pop();\n         mod_path.segments.push(variant_hir_name.clone());\n         let scope = ImportScope::find_insert_use_container(scope_node, ctx)?;\n@@ -323,7 +327,7 @@ fn another_fn() {\n             r#\"use my_mod::my_other_mod::MyField;\n \n mod my_mod {\n-    use my_other_mod::MyField;\n+    use self::my_other_mod::MyField;\n \n     fn another_fn() {\n         let m = my_other_mod::MyEnum::MyField(MyField(1, 1));\n@@ -402,7 +406,7 @@ enum E {\n mod foo;\n \n //- /foo.rs\n-use crate::E;\n+use crate::{E, V};\n fn f() {\n     let e = E::V(V(9, 2));\n }\n@@ -437,7 +441,7 @@ enum E {\n mod foo;\n \n //- /foo.rs\n-use crate::E;\n+use crate::{E, V};\n fn f() {\n     let e = E::V(V { i: 9, j: 2 });\n }"}]}