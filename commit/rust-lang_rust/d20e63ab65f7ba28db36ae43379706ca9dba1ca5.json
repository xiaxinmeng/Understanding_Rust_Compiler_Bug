{"sha": "d20e63ab65f7ba28db36ae43379706ca9dba1ca5", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQyMGU2M2FiNjVmN2JhMjhkYjM2YWU0MzM3OTcwNmNhOWRiYTFjYTU=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2013-05-09T00:03:17Z"}, "committer": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2013-05-09T00:04:03Z"}, "message": "test: Fix modes in the benchmarks.", "tree": {"sha": "4270207820c8eca6e33cf2bbf9f1bbcafe9d74a9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4270207820c8eca6e33cf2bbf9f1bbcafe9d74a9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d20e63ab65f7ba28db36ae43379706ca9dba1ca5", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d20e63ab65f7ba28db36ae43379706ca9dba1ca5", "html_url": "https://github.com/rust-lang/rust/commit/d20e63ab65f7ba28db36ae43379706ca9dba1ca5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d20e63ab65f7ba28db36ae43379706ca9dba1ca5/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "85d9409b206284847bec802866ad85234f7d8e25", "url": "https://api.github.com/repos/rust-lang/rust/commits/85d9409b206284847bec802866ad85234f7d8e25", "html_url": "https://github.com/rust-lang/rust/commit/85d9409b206284847bec802866ad85234f7d8e25"}], "stats": {"total": 29, "additions": 12, "deletions": 17}, "files": [{"sha": "1842a8ff42e525b644d076ae840045bc120b4ce6", "filename": "src/test/bench/graph500-bfs.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/d20e63ab65f7ba28db36ae43379706ca9dba1ca5/src%2Ftest%2Fbench%2Fgraph500-bfs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d20e63ab65f7ba28db36ae43379706ca9dba1ca5/src%2Ftest%2Fbench%2Fgraph500-bfs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fbench%2Fgraph500-bfs.rs?ref=d20e63ab65f7ba28db36ae43379706ca9dba1ca5", "patch": "@@ -273,7 +273,7 @@ fn pbfs(graph: &arc::ARC<graph>, key: node_id) -> bfs_result {\n         colors = do par::mapi(*color_vec) {\n             let colors = arc::clone(&color);\n             let graph = arc::clone(graph);\n-            let result: ~fn(+x: uint, +y: &color) -> color = |i, c| {\n+            let result: ~fn(x: uint, y: &color) -> color = |i, c| {\n                 let colors = arc::get(&colors);\n                 let graph = arc::get(&graph);\n                 match *c {\n@@ -395,7 +395,7 @@ fn validate(edges: ~[(node_id, node_id)],\n \n     let status = do par::alli(tree) {\n         let edges = copy edges;\n-        let result: ~fn(+x: uint, v: &i64) -> bool = |u, v| {\n+        let result: ~fn(x: uint, v: &i64) -> bool = |u, v| {\n             let u = u as node_id;\n             if *v == -1i64 || u == root {\n                 true"}, {"sha": "2d234634cc8ba3690fb8e5939d995d88aedf2c29", "filename": "src/test/bench/msgsend-ring-mutex-arcs.rs", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/d20e63ab65f7ba28db36ae43379706ca9dba1ca5/src%2Ftest%2Fbench%2Fmsgsend-ring-mutex-arcs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d20e63ab65f7ba28db36ae43379706ca9dba1ca5/src%2Ftest%2Fbench%2Fmsgsend-ring-mutex-arcs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fbench%2Fmsgsend-ring-mutex-arcs.rs?ref=d20e63ab65f7ba28db36ae43379706ca9dba1ca5", "patch": "@@ -45,10 +45,7 @@ fn init() -> (pipe,pipe) {\n }\n \n \n-fn thread_ring(i: uint,\n-               count: uint,\n-               +num_chan: pipe,\n-               +num_port: pipe) {\n+fn thread_ring(i: uint, count: uint, num_chan: pipe, num_port: pipe) {\n     let mut num_chan = Some(num_chan);\n     let mut num_port = Some(num_port);\n     // Send/Receive lots of messages."}, {"sha": "aef5c18499ac3b7924eb3878eb94860eb88d9a4b", "filename": "src/test/bench/msgsend-ring-pipes.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/d20e63ab65f7ba28db36ae43379706ca9dba1ca5/src%2Ftest%2Fbench%2Fmsgsend-ring-pipes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d20e63ab65f7ba28db36ae43379706ca9dba1ca5/src%2Ftest%2Fbench%2Fmsgsend-ring-pipes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fbench%2Fmsgsend-ring-pipes.rs?ref=d20e63ab65f7ba28db36ae43379706ca9dba1ca5", "patch": "@@ -35,8 +35,8 @@ macro_rules! move_out (\n \n fn thread_ring(i: uint,\n                count: uint,\n-               +num_chan: ring::client::num,\n-               +num_port: ring::server::num) {\n+               num_chan: ring::client::num,\n+               num_port: ring::server::num) {\n     let mut num_chan = Some(num_chan);\n     let mut num_port = Some(num_port);\n     // Send/Receive lots of messages."}, {"sha": "02415c4bcfce741797ab81626d2cf9409fa28ca9", "filename": "src/test/bench/msgsend-ring-rw-arcs.rs", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/d20e63ab65f7ba28db36ae43379706ca9dba1ca5/src%2Ftest%2Fbench%2Fmsgsend-ring-rw-arcs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d20e63ab65f7ba28db36ae43379706ca9dba1ca5/src%2Ftest%2Fbench%2Fmsgsend-ring-rw-arcs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fbench%2Fmsgsend-ring-rw-arcs.rs?ref=d20e63ab65f7ba28db36ae43379706ca9dba1ca5", "patch": "@@ -46,10 +46,7 @@ fn init() -> (pipe,pipe) {\n }\n \n \n-fn thread_ring(i: uint,\n-               count: uint,\n-               +num_chan: pipe,\n-               +num_port: pipe) {\n+fn thread_ring(i: uint, count: uint, num_chan: pipe, num_port: pipe) {\n     let mut num_chan = Some(num_chan);\n     let mut num_port = Some(num_port);\n     // Send/Receive lots of messages."}, {"sha": "cfad253cfed5b3941026ff397e2916c2aa396ffb", "filename": "src/test/bench/pingpong.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/d20e63ab65f7ba28db36ae43379706ca9dba1ca5/src%2Ftest%2Fbench%2Fpingpong.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d20e63ab65f7ba28db36ae43379706ca9dba1ca5/src%2Ftest%2Fbench%2Fpingpong.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fbench%2Fpingpong.rs?ref=d20e63ab65f7ba28db36ae43379706ca9dba1ca5", "patch": "@@ -117,8 +117,9 @@ pub fn spawn_service_recv<T:Owned,Tb:Owned>(\n     client\n }\n \n-fn switch<T:Owned,Tb:Owned,U>(+endp: core::pipes::RecvPacketBuffered<T, Tb>,\n-                      f: &fn(+v: Option<T>) -> U) -> U {\n+fn switch<T:Owned,Tb:Owned,U>(endp: core::pipes::RecvPacketBuffered<T, Tb>,\n+                              f: &fn(v: Option<T>) -> U)\n+                              -> U {\n     f(core::pipes::try_recv(endp))\n }\n "}, {"sha": "b7ae331c8f376b03d8cc727f3e6b7713a5a12b29", "filename": "src/test/bench/shootout-pfib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d20e63ab65f7ba28db36ae43379706ca9dba1ca5/src%2Ftest%2Fbench%2Fshootout-pfib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d20e63ab65f7ba28db36ae43379706ca9dba1ca5/src%2Ftest%2Fbench%2Fshootout-pfib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fbench%2Fshootout-pfib.rs?ref=d20e63ab65f7ba28db36ae43379706ca9dba1ca5", "patch": "@@ -66,7 +66,7 @@ fn parse_opts(argv: ~[~str]) -> Config {\n     }\n }\n \n-fn stress_task(&&id: int) {\n+fn stress_task(id: int) {\n     let mut i = 0;\n     loop {\n         let n = 15;"}, {"sha": "6015f21be727f711f548d8c3b2a0e529d9123119", "filename": "src/test/bench/task-perf-linked-failure.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d20e63ab65f7ba28db36ae43379706ca9dba1ca5/src%2Ftest%2Fbench%2Ftask-perf-linked-failure.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d20e63ab65f7ba28db36ae43379706ca9dba1ca5/src%2Ftest%2Fbench%2Ftask-perf-linked-failure.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fbench%2Ftask-perf-linked-failure.rs?ref=d20e63ab65f7ba28db36ae43379706ca9dba1ca5", "patch": "@@ -46,7 +46,7 @@ fn grandchild_group(num_tasks: uint) {\n     // Master grandchild task exits early.\n }\n \n-fn spawn_supervised_blocking(myname: &str, +f: ~fn()) {\n+fn spawn_supervised_blocking(myname: &str, f: ~fn()) {\n     let mut res = None;\n     let mut builder = task::task();\n     builder.future_result(|r| res = Some(r));"}, {"sha": "e6da898a03493a9ca547318b8c68b31f62ec8e80", "filename": "src/test/bench/task-perf-spawnalot.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d20e63ab65f7ba28db36ae43379706ca9dba1ca5/src%2Ftest%2Fbench%2Ftask-perf-spawnalot.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d20e63ab65f7ba28db36ae43379706ca9dba1ca5/src%2Ftest%2Fbench%2Ftask-perf-spawnalot.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fbench%2Ftask-perf-spawnalot.rs?ref=d20e63ab65f7ba28db36ae43379706ca9dba1ca5", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-fn f(&&n: uint) {\n+fn f(n: uint) {\n     let mut i = 0u;\n     while i < n {\n         task::try(|| g() );"}]}