{"sha": "abc61d23de7007773e3e75d50967e3813ca9ac92", "node_id": "C_kwDOAAsO6NoAKGFiYzYxZDIzZGU3MDA3NzczZTNlNzVkNTA5NjdlMzgxM2NhOWFjOTI", "commit": {"author": {"name": "Sergey Kaunov", "email": "65976143+skaunov@users.noreply.github.com", "date": "2023-04-03T06:18:14Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2023-04-03T06:18:14Z"}, "message": "Add links to <cell.rs>\n\n`UnsafeCell` page could benefit too from having links to these most popular structs in the module.", "tree": {"sha": "f29ddc8a2119fcf36732b3f1c57bd79aa63782c2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f29ddc8a2119fcf36732b3f1c57bd79aa63782c2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/abc61d23de7007773e3e75d50967e3813ca9ac92", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJkKm+nCRBK7hj4Ov3rIwAAmO4IAGhQXQ+UW1UraklyyMrwpDdy\nz6Z2wnK+63yorydYvQ7Wn/uW5fdLk+a4wyK6bBchpb8XN/3+pNfV37AqcOmKIR8J\nR8JDU5ZCEzhTWlNyzNuLsYwapl7TlgP4RV/PHNbyo+RrpkXEw8iRK2AD2WM7onvs\ng7gzRDXEMObAEABskV5b+WuEpD4lDR+fF2y8VdEtpzlR+0K6uxfPxoMIMPZPxVnh\n4oG1cvErCh5ppC2YC8wFE/q29UAeiVnV1KJ9cOpl6GuEMS4ziQWqnF9xNlcQg0cU\ntxMptt8xva1NyDED4HFF3LheSu1naDPNGKN9VgAbXr228gP1RBrbpYn08vTRIq0=\n=2ze6\n-----END PGP SIGNATURE-----\n", "payload": "tree f29ddc8a2119fcf36732b3f1c57bd79aa63782c2\nparent 33289132ecc1805250f63801fded10fceb2300d8\nauthor Sergey Kaunov <65976143+skaunov@users.noreply.github.com> 1680502694 +0300\ncommitter GitHub <noreply@github.com> 1680502694 +0300\n\nAdd links to <cell.rs>\n\n`UnsafeCell` page could benefit too from having links to these most popular structs in the module."}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/abc61d23de7007773e3e75d50967e3813ca9ac92", "html_url": "https://github.com/rust-lang/rust/commit/abc61d23de7007773e3e75d50967e3813ca9ac92", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/abc61d23de7007773e3e75d50967e3813ca9ac92/comments", "author": {"login": "skaunov", "id": 65976143, "node_id": "MDQ6VXNlcjY1OTc2MTQz", "avatar_url": "https://avatars.githubusercontent.com/u/65976143?v=4", "gravatar_id": "", "url": "https://api.github.com/users/skaunov", "html_url": "https://github.com/skaunov", "followers_url": "https://api.github.com/users/skaunov/followers", "following_url": "https://api.github.com/users/skaunov/following{/other_user}", "gists_url": "https://api.github.com/users/skaunov/gists{/gist_id}", "starred_url": "https://api.github.com/users/skaunov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/skaunov/subscriptions", "organizations_url": "https://api.github.com/users/skaunov/orgs", "repos_url": "https://api.github.com/users/skaunov/repos", "events_url": "https://api.github.com/users/skaunov/events{/privacy}", "received_events_url": "https://api.github.com/users/skaunov/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "33289132ecc1805250f63801fded10fceb2300d8", "url": "https://api.github.com/repos/rust-lang/rust/commits/33289132ecc1805250f63801fded10fceb2300d8", "html_url": "https://github.com/rust-lang/rust/commit/33289132ecc1805250f63801fded10fceb2300d8"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "d728dc038176c3199f234a2efd6e57fe65bebd58", "filename": "library/core/src/cell.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/abc61d23de7007773e3e75d50967e3813ca9ac92/library%2Fcore%2Fsrc%2Fcell.rs", "raw_url": "https://github.com/rust-lang/rust/raw/abc61d23de7007773e3e75d50967e3813ca9ac92/library%2Fcore%2Fsrc%2Fcell.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fcell.rs?ref=abc61d23de7007773e3e75d50967e3813ca9ac92", "patch": "@@ -1816,7 +1816,7 @@ impl<T: ?Sized + fmt::Display> fmt::Display for RefMut<'_, T> {\n /// `UnsafeCell<T>` opts-out of the immutability guarantee for `&T`: a shared reference\n /// `&UnsafeCell<T>` may point to data that is being mutated. This is called \"interior mutability\".\n ///\n-/// All other types that allow internal mutability, such as `Cell<T>` and `RefCell<T>`, internally\n+/// All other types that allow internal mutability, such as [`Cell<T>`] and [`RefCell<T>`], internally\n /// use `UnsafeCell` to wrap their data.\n ///\n /// Note that only the immutability guarantee for shared references is affected by `UnsafeCell`. The"}]}