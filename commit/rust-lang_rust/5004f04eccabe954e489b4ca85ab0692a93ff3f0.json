{"sha": "5004f04eccabe954e489b4ca85ab0692a93ff3f0", "node_id": "C_kwDOAAsO6NoAKDUwMDRmMDRlY2NhYmU5NTRlNDg5YjRjYTg1YWIwNjkyYTkzZmYzZjA", "commit": {"author": {"name": "Kartavya Vashishtha", "email": "sendtokartavya@gmail.com", "date": "2022-09-15T04:16:01Z"}, "committer": {"name": "Kartavya Vashishtha", "email": "sendtokartavya@gmail.com", "date": "2022-09-15T04:16:01Z"}, "message": "added identity block test\n\nadded binding annotations for all lines", "tree": {"sha": "a91db19094496dbc24764b7c0ca127397f9fbb58", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a91db19094496dbc24764b7c0ca127397f9fbb58"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5004f04eccabe954e489b4ca85ab0692a93ff3f0", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE+fRQYdEX7Emd36W/pQASwjJOXfAFAmMipwMACgkQpQASwjJO\nXfAjKhAApJbXIK7UteOzkBHEhnFjdLLsQMmVBJsOZY9TiaoQXB93pulUi+ozgL3T\n3sZEPn7gDw9WBnOrLN2fAdXs1QLAfVtcG7uh3vf36pUhx8H1TC3CLQCvdvmdedlK\nfNfGgcrK+g30wh3cbIxPIggUOoAI4f4cHLZXHtInLtYKIRS23GImRhgcnAv10MSw\n8hbivYAkwG5vNVt1c+Wl3oR7utWX/EaY1nf4b4OPSInhr3e4eLnCG9x7jDXH/kfY\n9F+f1DmzM6oIm6z8TXq/Z9OGXa0z7GHDUL4wjeFpU0YI20m0U+3vuNPYhe/XL99w\nYUaZhXYRUFyabM5EXkyqZST+HMolTl3zJB3uBkyUB4gkpiI2KnF3N9p6XabBYCFb\n9rK6iMEQQPMN9hbmGXyeNoXZxiF/fqtLRt+pSqFwb7THl02ZDzf+b1UTT1eOtEVo\naaYy1JPqlibkASaKJ4E2USOtWQN3TTk9wDmR57mXU2Cfune3hnCy6ZP0IWBihlvX\nhDv1Xb5JhPMoVZHFfcqm7EY4PLXnPK9lkY1lK7iRzJVvsmZvpB3iiMQ6jtpY52gb\nL4dxuxcGwqV/949Q+BDnX/NtGhJmMR5wP9ITEEzaCozmrUJp4MUsvSmnhaGNb/FU\nQYlz7lMwRe1sQpwfdoMI24W8C60cz4psNCS2jMDYrk1bpqCRAJE=\n=LWpG\n-----END PGP SIGNATURE-----", "payload": "tree a91db19094496dbc24764b7c0ca127397f9fbb58\nparent 5afc261c66896ed3d14f9d9eccbc7a1090d379d3\nauthor Kartavya Vashishtha <sendtokartavya@gmail.com> 1663215361 +0530\ncommitter Kartavya Vashishtha <sendtokartavya@gmail.com> 1663215361 +0530\n\nadded identity block test\n\nadded binding annotations for all lines\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5004f04eccabe954e489b4ca85ab0692a93ff3f0", "html_url": "https://github.com/rust-lang/rust/commit/5004f04eccabe954e489b4ca85ab0692a93ff3f0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5004f04eccabe954e489b4ca85ab0692a93ff3f0/comments", "author": {"login": "DesmondWillowbrook", "id": 51814158, "node_id": "MDQ6VXNlcjUxODE0MTU4", "avatar_url": "https://avatars.githubusercontent.com/u/51814158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DesmondWillowbrook", "html_url": "https://github.com/DesmondWillowbrook", "followers_url": "https://api.github.com/users/DesmondWillowbrook/followers", "following_url": "https://api.github.com/users/DesmondWillowbrook/following{/other_user}", "gists_url": "https://api.github.com/users/DesmondWillowbrook/gists{/gist_id}", "starred_url": "https://api.github.com/users/DesmondWillowbrook/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DesmondWillowbrook/subscriptions", "organizations_url": "https://api.github.com/users/DesmondWillowbrook/orgs", "repos_url": "https://api.github.com/users/DesmondWillowbrook/repos", "events_url": "https://api.github.com/users/DesmondWillowbrook/events{/privacy}", "received_events_url": "https://api.github.com/users/DesmondWillowbrook/received_events", "type": "User", "site_admin": false}, "committer": {"login": "DesmondWillowbrook", "id": 51814158, "node_id": "MDQ6VXNlcjUxODE0MTU4", "avatar_url": "https://avatars.githubusercontent.com/u/51814158?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DesmondWillowbrook", "html_url": "https://github.com/DesmondWillowbrook", "followers_url": "https://api.github.com/users/DesmondWillowbrook/followers", "following_url": "https://api.github.com/users/DesmondWillowbrook/following{/other_user}", "gists_url": "https://api.github.com/users/DesmondWillowbrook/gists{/gist_id}", "starred_url": "https://api.github.com/users/DesmondWillowbrook/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DesmondWillowbrook/subscriptions", "organizations_url": "https://api.github.com/users/DesmondWillowbrook/orgs", "repos_url": "https://api.github.com/users/DesmondWillowbrook/repos", "events_url": "https://api.github.com/users/DesmondWillowbrook/events{/privacy}", "received_events_url": "https://api.github.com/users/DesmondWillowbrook/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5afc261c66896ed3d14f9d9eccbc7a1090d379d3", "url": "https://api.github.com/repos/rust-lang/rust/commits/5afc261c66896ed3d14f9d9eccbc7a1090d379d3", "html_url": "https://github.com/rust-lang/rust/commit/5afc261c66896ed3d14f9d9eccbc7a1090d379d3"}], "stats": {"total": 114, "additions": 58, "deletions": 56}, "files": [{"sha": "40e63cc28567ed0086aa0a402ac620426025a735", "filename": "tests/ui/iter_kv_map.fixed", "status": "modified", "additions": 11, "deletions": 10, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/5004f04eccabe954e489b4ca85ab0692a93ff3f0/tests%2Fui%2Fiter_kv_map.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/5004f04eccabe954e489b4ca85ab0692a93ff3f0/tests%2Fui%2Fiter_kv_map.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fiter_kv_map.fixed?ref=5004f04eccabe954e489b4ca85ab0692a93ff3f0", "patch": "@@ -3,6 +3,7 @@\n #![warn(clippy::iter_kv_map)]\n #![allow(clippy::redundant_clone)]\n #![allow(clippy::suspicious_map)]\n+#![allow(clippy::map_identity)]\n \n use std::collections::{BTreeMap, HashMap};\n \n@@ -23,18 +24,18 @@ fn main() {\n     let _ = map.clone().into_values().map(|val| val + 2).collect::<Vec<_>>();\n \n     let _ = map.clone().values().collect::<Vec<_>>();\n-    map.keys().filter(|x| *x % 2 == 0).count();\n+    let _ = map.keys().filter(|x| *x % 2 == 0).count();\n \n     // Don't lint\n-    map.iter().filter(|(_, val)| *val % 2 == 0).map(|(key, _)| key).count();\n-    map.iter().map(get_key).collect::<Vec<_>>();\n+    let _ = map.iter().filter(|(_, val)| *val % 2 == 0).map(|(key, _)| key).count();\n+    let _ = map.iter().map(get_key).collect::<Vec<_>>();\n \n     // Linting the following could be an improvement to the lint\n     // map.iter().filter_map(|(_, val)| (val % 2 == 0).then(val * 17)).count();\n \n     // Lint\n-    map.keys().map(|key| key * 9).count();\n-    map.values().map(|value| value * 17).count();\n+    let _ = map.keys().map(|key| key * 9).count();\n+    let _ = map.values().map(|value| value * 17).count();\n \n     let map: BTreeMap<u32, u32> = BTreeMap::new();\n \n@@ -50,16 +51,16 @@ fn main() {\n     let _ = map.clone().into_values().map(|val| val + 2).collect::<Vec<_>>();\n \n     let _ = map.clone().values().collect::<Vec<_>>();\n-    map.keys().filter(|x| *x % 2 == 0).count();\n+    let _ = map.keys().filter(|x| *x % 2 == 0).count();\n \n     // Don't lint\n-    map.iter().filter(|(_, val)| *val % 2 == 0).map(|(key, _)| key).count();\n-    map.iter().map(get_key).collect::<Vec<_>>();\n+    let _ = map.iter().filter(|(_, val)| *val % 2 == 0).map(|(key, _)| key).count();\n+    let _ = map.iter().map(get_key).collect::<Vec<_>>();\n \n     // Linting the following could be an improvement to the lint\n     // map.iter().filter_map(|(_, val)| (val % 2 == 0).then(val * 17)).count();\n \n     // Lint\n-    map.keys().map(|key| key * 9).count();\n-    map.values().map(|value| value * 17).count();\n+    let _ = map.keys().map(|key| key * 9).count();\n+    let _ = map.values().map(|value| value * 17).count();\n }"}, {"sha": "5f662faa127e9617476bf89c8ee5d2e5bca0bbb3", "filename": "tests/ui/iter_kv_map.rs", "status": "modified", "additions": 11, "deletions": 10, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/5004f04eccabe954e489b4ca85ab0692a93ff3f0/tests%2Fui%2Fiter_kv_map.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5004f04eccabe954e489b4ca85ab0692a93ff3f0/tests%2Fui%2Fiter_kv_map.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fiter_kv_map.rs?ref=5004f04eccabe954e489b4ca85ab0692a93ff3f0", "patch": "@@ -3,6 +3,7 @@\n #![warn(clippy::iter_kv_map)]\n #![allow(clippy::redundant_clone)]\n #![allow(clippy::suspicious_map)]\n+#![allow(clippy::map_identity)]\n \n use std::collections::{BTreeMap, HashMap};\n \n@@ -23,18 +24,18 @@ fn main() {\n     let _ = map.clone().into_iter().map(|(_, val)| val + 2).collect::<Vec<_>>();\n \n     let _ = map.clone().iter().map(|(_, val)| val).collect::<Vec<_>>();\n-    map.iter().map(|(key, _)| key).filter(|x| *x % 2 == 0).count();\n+    let _ = map.iter().map(|(key, _)| key).filter(|x| *x % 2 == 0).count();\n \n     // Don't lint\n-    map.iter().filter(|(_, val)| *val % 2 == 0).map(|(key, _)| key).count();\n-    map.iter().map(get_key).collect::<Vec<_>>();\n+    let _ = map.iter().filter(|(_, val)| *val % 2 == 0).map(|(key, _)| key).count();\n+    let _ = map.iter().map(get_key).collect::<Vec<_>>();\n \n     // Linting the following could be an improvement to the lint\n     // map.iter().filter_map(|(_, val)| (val % 2 == 0).then(val * 17)).count();\n \n     // Lint\n-    map.iter().map(|(key, _value)| key * 9).count();\n-    map.iter().map(|(_key, value)| value * 17).count();\n+    let _ = map.iter().map(|(key, _value)| key * 9).count();\n+    let _ = map.iter().map(|(_key, value)| value * 17).count();\n \n     let map: BTreeMap<u32, u32> = BTreeMap::new();\n \n@@ -50,16 +51,16 @@ fn main() {\n     let _ = map.clone().into_iter().map(|(_, val)| val + 2).collect::<Vec<_>>();\n \n     let _ = map.clone().iter().map(|(_, val)| val).collect::<Vec<_>>();\n-    map.iter().map(|(key, _)| key).filter(|x| *x % 2 == 0).count();\n+    let _ = map.iter().map(|(key, _)| key).filter(|x| *x % 2 == 0).count();\n \n     // Don't lint\n-    map.iter().filter(|(_, val)| *val % 2 == 0).map(|(key, _)| key).count();\n-    map.iter().map(get_key).collect::<Vec<_>>();\n+    let _ = map.iter().filter(|(_, val)| *val % 2 == 0).map(|(key, _)| key).count();\n+    let _ = map.iter().map(get_key).collect::<Vec<_>>();\n \n     // Linting the following could be an improvement to the lint\n     // map.iter().filter_map(|(_, val)| (val % 2 == 0).then(val * 17)).count();\n \n     // Lint\n-    map.iter().map(|(key, _value)| key * 9).count();\n-    map.iter().map(|(_key, value)| value * 17).count();\n+    let _ = map.iter().map(|(key, _value)| key * 9).count();\n+    let _ = map.iter().map(|(_key, value)| value * 17).count();\n }"}, {"sha": "7a0c10592a1eac5673d729d7557eb7d5daab164d", "filename": "tests/ui/iter_kv_map.stderr", "status": "modified", "additions": 36, "deletions": 36, "changes": 72, "blob_url": "https://github.com/rust-lang/rust/blob/5004f04eccabe954e489b4ca85ab0692a93ff3f0/tests%2Fui%2Fiter_kv_map.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/5004f04eccabe954e489b4ca85ab0692a93ff3f0/tests%2Fui%2Fiter_kv_map.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fiter_kv_map.stderr?ref=5004f04eccabe954e489b4ca85ab0692a93ff3f0", "patch": "@@ -1,148 +1,148 @@\n error: iterating on a map's keys\n-  --> $DIR/iter_kv_map.rs:14:13\n+  --> $DIR/iter_kv_map.rs:15:13\n    |\n LL |     let _ = map.iter().map(|(key, _)| key).collect::<Vec<_>>();\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `map.keys()`\n    |\n    = note: `-D clippy::iter-kv-map` implied by `-D warnings`\n \n error: iterating on a map's values\n-  --> $DIR/iter_kv_map.rs:15:13\n+  --> $DIR/iter_kv_map.rs:16:13\n    |\n LL |     let _ = map.iter().map(|(_, value)| value).collect::<Vec<_>>();\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `map.values()`\n \n error: iterating on a map's values\n-  --> $DIR/iter_kv_map.rs:16:13\n+  --> $DIR/iter_kv_map.rs:17:13\n    |\n LL |     let _ = map.iter().map(|(_, v)| v + 2).collect::<Vec<_>>();\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `map.values().map(|v| v + 2)`\n \n error: iterating on a map's values\n-  --> $DIR/iter_kv_map.rs:17:13\n+  --> $DIR/iter_kv_map.rs:18:13\n    |\n LL |     let _ = map.iter().map(|(_, val)| {val}).collect::<Vec<_>>();\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `map.values().map(|val| {val})`\n \n error: iterating on a map's keys\n-  --> $DIR/iter_kv_map.rs:19:13\n+  --> $DIR/iter_kv_map.rs:20:13\n    |\n LL |     let _ = map.clone().into_iter().map(|(key, _)| key).collect::<Vec<_>>();\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `map.clone().into_keys()`\n \n error: iterating on a map's keys\n-  --> $DIR/iter_kv_map.rs:20:13\n+  --> $DIR/iter_kv_map.rs:21:13\n    |\n LL |     let _ = map.clone().into_iter().map(|(key, _)| key + 2).collect::<Vec<_>>();\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `map.clone().into_keys().map(|key| key + 2)`\n \n error: iterating on a map's values\n-  --> $DIR/iter_kv_map.rs:22:13\n+  --> $DIR/iter_kv_map.rs:23:13\n    |\n LL |     let _ = map.clone().into_iter().map(|(_, val)| val).collect::<Vec<_>>();\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `map.clone().into_values()`\n \n error: iterating on a map's values\n-  --> $DIR/iter_kv_map.rs:23:13\n+  --> $DIR/iter_kv_map.rs:24:13\n    |\n LL |     let _ = map.clone().into_iter().map(|(_, val)| val + 2).collect::<Vec<_>>();\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `map.clone().into_values().map(|val| val + 2)`\n \n error: iterating on a map's values\n-  --> $DIR/iter_kv_map.rs:25:13\n+  --> $DIR/iter_kv_map.rs:26:13\n    |\n LL |     let _ = map.clone().iter().map(|(_, val)| val).collect::<Vec<_>>();\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `map.clone().values()`\n \n error: iterating on a map's keys\n-  --> $DIR/iter_kv_map.rs:26:5\n+  --> $DIR/iter_kv_map.rs:27:13\n    |\n-LL |     map.iter().map(|(key, _)| key).filter(|x| *x % 2 == 0).count();\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `map.keys()`\n+LL |     let _ = map.iter().map(|(key, _)| key).filter(|x| *x % 2 == 0).count();\n+   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `map.keys()`\n \n error: iterating on a map's keys\n-  --> $DIR/iter_kv_map.rs:36:5\n+  --> $DIR/iter_kv_map.rs:37:13\n    |\n-LL |     map.iter().map(|(key, _value)| key * 9).count();\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `map.keys().map(|key| key * 9)`\n+LL |     let _ = map.iter().map(|(key, _value)| key * 9).count();\n+   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `map.keys().map(|key| key * 9)`\n \n error: iterating on a map's values\n-  --> $DIR/iter_kv_map.rs:37:5\n+  --> $DIR/iter_kv_map.rs:38:13\n    |\n-LL |     map.iter().map(|(_key, value)| value * 17).count();\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `map.values().map(|value| value * 17)`\n+LL |     let _ = map.iter().map(|(_key, value)| value * 17).count();\n+   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `map.values().map(|value| value * 17)`\n \n error: iterating on a map's keys\n-  --> $DIR/iter_kv_map.rs:41:13\n+  --> $DIR/iter_kv_map.rs:42:13\n    |\n LL |     let _ = map.iter().map(|(key, _)| key).collect::<Vec<_>>();\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `map.keys()`\n \n error: iterating on a map's values\n-  --> $DIR/iter_kv_map.rs:42:13\n+  --> $DIR/iter_kv_map.rs:43:13\n    |\n LL |     let _ = map.iter().map(|(_, value)| value).collect::<Vec<_>>();\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `map.values()`\n \n error: iterating on a map's values\n-  --> $DIR/iter_kv_map.rs:43:13\n+  --> $DIR/iter_kv_map.rs:44:13\n    |\n LL |     let _ = map.iter().map(|(_, v)| v + 2).collect::<Vec<_>>();\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `map.values().map(|v| v + 2)`\n \n error: iterating on a map's values\n-  --> $DIR/iter_kv_map.rs:44:13\n+  --> $DIR/iter_kv_map.rs:45:13\n    |\n LL |     let _ = map.iter().map(|(_, val)| {val}).collect::<Vec<_>>();\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `map.values().map(|val| {val})`\n \n error: iterating on a map's keys\n-  --> $DIR/iter_kv_map.rs:46:13\n+  --> $DIR/iter_kv_map.rs:47:13\n    |\n LL |     let _ = map.clone().into_iter().map(|(key, _)| key).collect::<Vec<_>>();\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `map.clone().into_keys()`\n \n error: iterating on a map's keys\n-  --> $DIR/iter_kv_map.rs:47:13\n+  --> $DIR/iter_kv_map.rs:48:13\n    |\n LL |     let _ = map.clone().into_iter().map(|(key, _)| key + 2).collect::<Vec<_>>();\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `map.clone().into_keys().map(|key| key + 2)`\n \n error: iterating on a map's values\n-  --> $DIR/iter_kv_map.rs:49:13\n+  --> $DIR/iter_kv_map.rs:50:13\n    |\n LL |     let _ = map.clone().into_iter().map(|(_, val)| val).collect::<Vec<_>>();\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `map.clone().into_values()`\n \n error: iterating on a map's values\n-  --> $DIR/iter_kv_map.rs:50:13\n+  --> $DIR/iter_kv_map.rs:51:13\n    |\n LL |     let _ = map.clone().into_iter().map(|(_, val)| val + 2).collect::<Vec<_>>();\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `map.clone().into_values().map(|val| val + 2)`\n \n error: iterating on a map's values\n-  --> $DIR/iter_kv_map.rs:52:13\n+  --> $DIR/iter_kv_map.rs:53:13\n    |\n LL |     let _ = map.clone().iter().map(|(_, val)| val).collect::<Vec<_>>();\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `map.clone().values()`\n \n error: iterating on a map's keys\n-  --> $DIR/iter_kv_map.rs:53:5\n+  --> $DIR/iter_kv_map.rs:54:13\n    |\n-LL |     map.iter().map(|(key, _)| key).filter(|x| *x % 2 == 0).count();\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `map.keys()`\n+LL |     let _ = map.iter().map(|(key, _)| key).filter(|x| *x % 2 == 0).count();\n+   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `map.keys()`\n \n error: iterating on a map's keys\n-  --> $DIR/iter_kv_map.rs:63:5\n+  --> $DIR/iter_kv_map.rs:64:13\n    |\n-LL |     map.iter().map(|(key, _value)| key * 9).count();\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `map.keys().map(|key| key * 9)`\n+LL |     let _ = map.iter().map(|(key, _value)| key * 9).count();\n+   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `map.keys().map(|key| key * 9)`\n \n error: iterating on a map's values\n-  --> $DIR/iter_kv_map.rs:64:5\n+  --> $DIR/iter_kv_map.rs:65:13\n    |\n-LL |     map.iter().map(|(_key, value)| value * 17).count();\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `map.values().map(|value| value * 17)`\n+LL |     let _ = map.iter().map(|(_key, value)| value * 17).count();\n+   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `map.values().map(|value| value * 17)`\n \n error: aborting due to 24 previous errors\n "}]}