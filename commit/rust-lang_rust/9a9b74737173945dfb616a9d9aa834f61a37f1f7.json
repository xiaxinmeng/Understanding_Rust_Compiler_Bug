{"sha": "9a9b74737173945dfb616a9d9aa834f61a37f1f7", "node_id": "MDY6Q29tbWl0NzI0NzEyOjlhOWI3NDczNzE3Mzk0NWRmYjYxNmE5ZDlhYTgzNGY2MWEzN2YxZjc=", "commit": {"author": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2018-06-28T18:06:30Z"}, "committer": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2018-06-28T18:12:45Z"}, "message": "review comments: unify duplicated code", "tree": {"sha": "919782e16416dd69d79a5f1f02909e17d8b238e7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/919782e16416dd69d79a5f1f02909e17d8b238e7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9a9b74737173945dfb616a9d9aa834f61a37f1f7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9a9b74737173945dfb616a9d9aa834f61a37f1f7", "html_url": "https://github.com/rust-lang/rust/commit/9a9b74737173945dfb616a9d9aa834f61a37f1f7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9a9b74737173945dfb616a9d9aa834f61a37f1f7/comments", "author": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "committer": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "03bcebbc609cc02ae7f27937cd7ac2da4d6d6c85", "url": "https://api.github.com/repos/rust-lang/rust/commits/03bcebbc609cc02ae7f27937cd7ac2da4d6d6c85", "html_url": "https://github.com/rust-lang/rust/commit/03bcebbc609cc02ae7f27937cd7ac2da4d6d6c85"}], "stats": {"total": 31, "additions": 18, "deletions": 13}, "files": [{"sha": "e16b6bd2b10eeddd8d5f206d05e2996403825e6a", "filename": "src/librustc/hir/mod.rs", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/9a9b74737173945dfb616a9d9aa834f61a37f1f7/src%2Flibrustc%2Fhir%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9a9b74737173945dfb616a9d9aa834f61a37f1f7/src%2Flibrustc%2Fhir%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fhir%2Fmod.rs?ref=9a9b74737173945dfb616a9d9aa834f61a37f1f7", "patch": "@@ -31,7 +31,7 @@ use hir::def_id::{DefId, DefIndex, LocalDefId, CRATE_DEF_INDEX};\n use util::nodemap::{NodeMap, FxHashSet};\n use mir::mono::Linkage;\n \n-use syntax_pos::{Span, DUMMY_SP};\n+use syntax_pos::{Span, DUMMY_SP, symbol::InternedString};\n use syntax::codemap::{self, Spanned};\n use rustc_target::spec::abi::Abi;\n use syntax::ast::{self, CrateSugar, Ident, Name, NodeId, DUMMY_NODE_ID, AsmDialect};\n@@ -547,6 +547,15 @@ impl Generics {\n \n         own_counts\n     }\n+\n+    pub fn get_named(&self, name: &InternedString) -> Option<&GenericParam> {\n+        for param in &self.params {\n+            if *name == param.name.name().as_interned_str() {\n+                return Some(param);\n+            }\n+        }\n+        None\n+    }\n }\n \n /// Synthetic Type Parameters are converted to an other form during lowering, this allows"}, {"sha": "afc83771fe1c7e4e8ed53476ad1c8ff5ecd6911e", "filename": "src/librustc/infer/error_reporting/mod.rs", "status": "modified", "additions": 8, "deletions": 12, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/9a9b74737173945dfb616a9d9aa834f61a37f1f7/src%2Flibrustc%2Finfer%2Ferror_reporting%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9a9b74737173945dfb616a9d9aa834f61a37f1f7/src%2Flibrustc%2Finfer%2Ferror_reporting%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Finfer%2Ferror_reporting%2Fmod.rs?ref=9a9b74737173945dfb616a9d9aa834f61a37f1f7", "patch": "@@ -223,25 +223,21 @@ impl<'a, 'gcx, 'tcx> TyCtxt<'a, 'gcx, 'tcx> {\n         let (prefix, span) = match *region {\n             ty::ReEarlyBound(ref br) => {\n                 let mut sp = cm.def_span(self.hir.span(node));\n-                if let Some(generics) = self.hir.get_generics(scope) {\n-                    for param in &generics.params {\n-                        if param.name.name().as_str() == br.name.as_str() {\n-                            sp = param.span;\n-                        }\n-                    }\n+                if let Some(param) = self.hir.get_generics(scope).and_then(|generics| {\n+                    generics.get_named(&br.name)\n+                }) {\n+                    sp = param.span;\n                 }\n                 (format!(\"the lifetime {} as defined on\", br.name), sp)\n             }\n             ty::ReFree(ty::FreeRegion {\n                 bound_region: ty::BoundRegion::BrNamed(_, ref name), ..\n             }) => {\n                 let mut sp = cm.def_span(self.hir.span(node));\n-                if let Some(generics) = self.hir.get_generics(scope) {\n-                    for param in &generics.params {\n-                        if param.name.name().as_str() == name.as_str() {\n-                            sp = param.span;\n-                        }\n-                    }\n+                if let Some(param) = self.hir.get_generics(scope).and_then(|generics| {\n+                    generics.get_named(&name)\n+                }) {\n+                    sp = param.span;\n                 }\n                 (format!(\"the lifetime {} as defined on\", name), sp)\n             }"}]}