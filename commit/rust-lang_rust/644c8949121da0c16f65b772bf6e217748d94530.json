{"sha": "644c8949121da0c16f65b772bf6e217748d94530", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY0NGM4OTQ5MTIxZGEwYzE2ZjY1Yjc3MmJmNmUyMTc3NDhkOTQ1MzA=", "commit": {"author": {"name": "Bastian Kauschke", "email": "bastian_kauschke@hotmail.de", "date": "2020-08-06T20:57:09Z"}, "committer": {"name": "Bastian Kauschke", "email": "bastian_kauschke@hotmail.de", "date": "2020-08-07T05:49:48Z"}, "message": "test min_const_generics using revisions", "tree": {"sha": "4e8d3d523dc92df516ed9c05d2ffda244dc73003", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4e8d3d523dc92df516ed9c05d2ffda244dc73003"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/644c8949121da0c16f65b772bf6e217748d94530", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/644c8949121da0c16f65b772bf6e217748d94530", "html_url": "https://github.com/rust-lang/rust/commit/644c8949121da0c16f65b772bf6e217748d94530", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/644c8949121da0c16f65b772bf6e217748d94530/comments", "author": {"login": "lcnr", "id": 29864074, "node_id": "MDQ6VXNlcjI5ODY0MDc0", "avatar_url": "https://avatars.githubusercontent.com/u/29864074?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lcnr", "html_url": "https://github.com/lcnr", "followers_url": "https://api.github.com/users/lcnr/followers", "following_url": "https://api.github.com/users/lcnr/following{/other_user}", "gists_url": "https://api.github.com/users/lcnr/gists{/gist_id}", "starred_url": "https://api.github.com/users/lcnr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lcnr/subscriptions", "organizations_url": "https://api.github.com/users/lcnr/orgs", "repos_url": "https://api.github.com/users/lcnr/repos", "events_url": "https://api.github.com/users/lcnr/events{/privacy}", "received_events_url": "https://api.github.com/users/lcnr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "lcnr", "id": 29864074, "node_id": "MDQ6VXNlcjI5ODY0MDc0", "avatar_url": "https://avatars.githubusercontent.com/u/29864074?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lcnr", "html_url": "https://github.com/lcnr", "followers_url": "https://api.github.com/users/lcnr/followers", "following_url": "https://api.github.com/users/lcnr/following{/other_user}", "gists_url": "https://api.github.com/users/lcnr/gists{/gist_id}", "starred_url": "https://api.github.com/users/lcnr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lcnr/subscriptions", "organizations_url": "https://api.github.com/users/lcnr/orgs", "repos_url": "https://api.github.com/users/lcnr/repos", "events_url": "https://api.github.com/users/lcnr/events{/privacy}", "received_events_url": "https://api.github.com/users/lcnr/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "37c29adabc638f9c601daf5b78d0f6de63e35f99", "url": "https://api.github.com/repos/rust-lang/rust/commits/37c29adabc638f9c601daf5b78d0f6de63e35f99", "html_url": "https://github.com/rust-lang/rust/commit/37c29adabc638f9c601daf5b78d0f6de63e35f99"}], "stats": {"total": 206, "additions": 154, "deletions": 52}, "files": [{"sha": "c51028d5b2001e96ef6c4c593f0aec737c2d0d93", "filename": "src/test/ui/const-generics/defaults/wrong-order.full.stderr", "status": "renamed", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/644c8949121da0c16f65b772bf6e217748d94530/src%2Ftest%2Fui%2Fconst-generics%2Fdefaults%2Fwrong-order.full.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/644c8949121da0c16f65b772bf6e217748d94530/src%2Ftest%2Fui%2Fconst-generics%2Fdefaults%2Fwrong-order.full.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fdefaults%2Fwrong-order.full.stderr?ref=644c8949121da0c16f65b772bf6e217748d94530", "patch": "@@ -1,16 +1,16 @@\n error: type parameters with a default must be trailing\n-  --> $DIR/wrong-order.rs:3:10\n+  --> $DIR/wrong-order.rs:5:10\n    |\n LL | struct A<T = u32, const N: usize> {\n    |          ^\n    |\n    = note: using type defaults and const parameters in the same parameter list is currently not permitted\n \n warning: the feature `const_generics` is incomplete and may not be safe to use and/or cause compiler crashes\n-  --> $DIR/wrong-order.rs:1:12\n+  --> $DIR/wrong-order.rs:2:27\n    |\n-LL | #![feature(const_generics)]\n-   |            ^^^^^^^^^^^^^^\n+LL | #![cfg_attr(full, feature(const_generics))]\n+   |                           ^^^^^^^^^^^^^^\n    |\n    = note: `#[warn(incomplete_features)]` on by default\n    = note: see issue #44580 <https://github.com/rust-lang/rust/issues/44580> for more information", "previous_filename": "src/test/ui/const-generics/defaults/wrong-order.stderr"}, {"sha": "29a46367004d44b3a6185858f5d5a5f0069d38ee", "filename": "src/test/ui/const-generics/defaults/wrong-order.min.stderr", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/644c8949121da0c16f65b772bf6e217748d94530/src%2Ftest%2Fui%2Fconst-generics%2Fdefaults%2Fwrong-order.min.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/644c8949121da0c16f65b772bf6e217748d94530/src%2Ftest%2Fui%2Fconst-generics%2Fdefaults%2Fwrong-order.min.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fdefaults%2Fwrong-order.min.stderr?ref=644c8949121da0c16f65b772bf6e217748d94530", "patch": "@@ -0,0 +1,10 @@\n+error: type parameters with a default must be trailing\n+  --> $DIR/wrong-order.rs:5:10\n+   |\n+LL | struct A<T = u32, const N: usize> {\n+   |          ^\n+   |\n+   = note: using type defaults and const parameters in the same parameter list is currently not permitted\n+\n+error: aborting due to previous error\n+"}, {"sha": "cb36d456f3887de7f91e2c6c629649fb7b06b716", "filename": "src/test/ui/const-generics/defaults/wrong-order.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/644c8949121da0c16f65b772bf6e217748d94530/src%2Ftest%2Fui%2Fconst-generics%2Fdefaults%2Fwrong-order.rs", "raw_url": "https://github.com/rust-lang/rust/raw/644c8949121da0c16f65b772bf6e217748d94530/src%2Ftest%2Fui%2Fconst-generics%2Fdefaults%2Fwrong-order.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fdefaults%2Fwrong-order.rs?ref=644c8949121da0c16f65b772bf6e217748d94530", "patch": "@@ -1,4 +1,6 @@\n-#![feature(const_generics)] //~ WARN the feature `const_generics` is incomplete\n+// revisions: full min\n+#![cfg_attr(full, feature(const_generics))] //[full]~WARN the feature `const_generics` is incomplete\n+#![cfg_attr(min, feature(min_const_generics))]\n \n struct A<T = u32, const N: usize> {\n     //~^ ERROR type parameters with a default must be trailing"}, {"sha": "d853ec5015ed268cddfa0c44a79d1967e768ef0a", "filename": "src/test/ui/const-generics/issues/issue-56445.full.stderr", "status": "renamed", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/644c8949121da0c16f65b772bf6e217748d94530/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-56445.full.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/644c8949121da0c16f65b772bf6e217748d94530/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-56445.full.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-56445.full.stderr?ref=644c8949121da0c16f65b772bf6e217748d94530", "patch": "@@ -1,8 +1,8 @@\n warning: the feature `const_generics` is incomplete and may not be safe to use and/or cause compiler crashes\n-  --> $DIR/issue-56445.rs:3:12\n+  --> $DIR/issue-56445.rs:3:27\n    |\n-LL | #![feature(const_generics)]\n-   |            ^^^^^^^^^^^^^^\n+LL | #![cfg_attr(full, feature(const_generics))]\n+   |                           ^^^^^^^^^^^^^^\n    |\n    = note: `#[warn(incomplete_features)]` on by default\n    = note: see issue #44580 <https://github.com/rust-lang/rust/issues/44580> for more information", "previous_filename": "src/test/ui/const-generics/issues/issue-56445.stderr"}, {"sha": "ca35ee5b2905d216e26ad1ea6ff406e29c77487c", "filename": "src/test/ui/const-generics/issues/issue-56445.min.stderr", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/644c8949121da0c16f65b772bf6e217748d94530/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-56445.min.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/644c8949121da0c16f65b772bf6e217748d94530/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-56445.min.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-56445.min.stderr?ref=644c8949121da0c16f65b772bf6e217748d94530", "patch": "@@ -0,0 +1,20 @@\n+error[E0771]: use of non-static lifetime `'a` in const generic\n+  --> $DIR/issue-56445.rs:9:26\n+   |\n+LL | struct Bug<'a, const S: &'a str>(PhantomData<&'a ()>);\n+   |                          ^^\n+   |\n+   = note: for more information, see issue #74052 <https://github.com/rust-lang/rust/issues/74052>\n+\n+error: using `&'static str` as const generic parameters is forbidden\n+  --> $DIR/issue-56445.rs:9:25\n+   |\n+LL | struct Bug<'a, const S: &'a str>(PhantomData<&'a ()>);\n+   |                         ^^^^^^^\n+   |\n+   = note: the only supported types are integers, `bool` and `char`\n+   = note: more complex types are supported with `#[feature(const_generics)]`\n+\n+error: aborting due to 2 previous errors\n+\n+For more information about this error, try `rustc --explain E0771`."}, {"sha": "174eb16abfc5f44755243dce1a80cc719f0ee140", "filename": "src/test/ui/const-generics/issues/issue-56445.rs", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/644c8949121da0c16f65b772bf6e217748d94530/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-56445.rs", "raw_url": "https://github.com/rust-lang/rust/raw/644c8949121da0c16f65b772bf6e217748d94530/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-56445.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-56445.rs?ref=644c8949121da0c16f65b772bf6e217748d94530", "patch": "@@ -1,12 +1,13 @@\n // Regression test for https://github.com/rust-lang/rust/issues/56445#issuecomment-518402995.\n-\n-#![feature(const_generics)]\n-//~^ WARN: the feature `const_generics` is incomplete\n+// revisions: full min\n+#![cfg_attr(full, feature(const_generics))] //[full]~WARN the feature `const_generics` is incomplete\n+#![cfg_attr(min, feature(min_const_generics))]\n #![crate_type = \"lib\"]\n \n use std::marker::PhantomData;\n \n struct Bug<'a, const S: &'a str>(PhantomData<&'a ()>);\n //~^ ERROR: use of non-static lifetime `'a` in const generic\n+//[min]~| ERROR: using `&'static str` as const\n \n impl Bug<'_, \"\"> {}"}, {"sha": "c03b7252a3c8530895ac946e0fb03026dab57ada", "filename": "src/test/ui/const-generics/issues/issue-60818-struct-constructors.full.stderr", "status": "renamed", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/644c8949121da0c16f65b772bf6e217748d94530/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-60818-struct-constructors.full.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/644c8949121da0c16f65b772bf6e217748d94530/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-60818-struct-constructors.full.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-60818-struct-constructors.full.stderr?ref=644c8949121da0c16f65b772bf6e217748d94530", "patch": "@@ -1,8 +1,8 @@\n warning: the feature `const_generics` is incomplete and may not be safe to use and/or cause compiler crashes\n-  --> $DIR/issue-61336-1.rs:1:12\n+  --> $DIR/issue-60818-struct-constructors.rs:3:27\n    |\n-LL | #![feature(const_generics)]\n-   |            ^^^^^^^^^^^^^^\n+LL | #![cfg_attr(full, feature(const_generics))]\n+   |                           ^^^^^^^^^^^^^^\n    |\n    = note: `#[warn(incomplete_features)]` on by default\n    = note: see issue #44580 <https://github.com/rust-lang/rust/issues/44580> for more information", "previous_filename": "src/test/ui/const-generics/issues/issue-61336-1.stderr"}, {"sha": "ae2b0520fb1c1ee47885195a2120fcb9c2f930b6", "filename": "src/test/ui/const-generics/issues/issue-60818-struct-constructors.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/644c8949121da0c16f65b772bf6e217748d94530/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-60818-struct-constructors.rs", "raw_url": "https://github.com/rust-lang/rust/raw/644c8949121da0c16f65b772bf6e217748d94530/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-60818-struct-constructors.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-60818-struct-constructors.rs?ref=644c8949121da0c16f65b772bf6e217748d94530", "patch": "@@ -1,7 +1,7 @@\n // check-pass\n-\n-#![feature(const_generics)]\n-//~^ WARN the feature `const_generics` is incomplete\n+// revisions: full min\n+#![cfg_attr(full, feature(const_generics))] //[full]~WARN the feature `const_generics` is incomplete\n+#![cfg_attr(min, feature(min_const_generics))]\n \n struct Generic<const V: usize>;\n "}, {"sha": "f18728eabbb437b7dca909166d01f1197f109da8", "filename": "src/test/ui/const-generics/issues/issue-61336-1.full.stderr", "status": "renamed", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/644c8949121da0c16f65b772bf6e217748d94530/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-61336-1.full.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/644c8949121da0c16f65b772bf6e217748d94530/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-61336-1.full.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-61336-1.full.stderr?ref=644c8949121da0c16f65b772bf6e217748d94530", "patch": "@@ -1,8 +1,8 @@\n warning: the feature `const_generics` is incomplete and may not be safe to use and/or cause compiler crashes\n-  --> $DIR/issue-60818-struct-constructors.rs:3:12\n+  --> $DIR/issue-61336-1.rs:3:27\n    |\n-LL | #![feature(const_generics)]\n-   |            ^^^^^^^^^^^^^^\n+LL | #![cfg_attr(full, feature(const_generics))]\n+   |                           ^^^^^^^^^^^^^^\n    |\n    = note: `#[warn(incomplete_features)]` on by default\n    = note: see issue #44580 <https://github.com/rust-lang/rust/issues/44580> for more information", "previous_filename": "src/test/ui/const-generics/issues/issue-60818-struct-constructors.stderr"}, {"sha": "201c0d039d98f3dab979ece6c25def3d44a86586", "filename": "src/test/ui/const-generics/issues/issue-61336-1.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/644c8949121da0c16f65b772bf6e217748d94530/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-61336-1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/644c8949121da0c16f65b772bf6e217748d94530/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-61336-1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-61336-1.rs?ref=644c8949121da0c16f65b772bf6e217748d94530", "patch": "@@ -1,7 +1,7 @@\n-#![feature(const_generics)]\n-//~^ WARN the feature `const_generics` is incomplete\n-\n // build-pass\n+// revisions: full min\n+#![cfg_attr(full, feature(const_generics))] //[full]~WARN the feature `const_generics` is incomplete\n+#![cfg_attr(min, feature(min_const_generics))]\n \n fn f<T: Copy, const N: usize>(x: T) -> [T; N] {\n     [x; N]"}, {"sha": "d21cd9df054c1ec9b8a8c2e89a30a55f293da705", "filename": "src/test/ui/const-generics/issues/issue-61336-2.full.stderr", "status": "renamed", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/644c8949121da0c16f65b772bf6e217748d94530/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-61336-2.full.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/644c8949121da0c16f65b772bf6e217748d94530/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-61336-2.full.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-61336-2.full.stderr?ref=644c8949121da0c16f65b772bf6e217748d94530", "patch": "@@ -1,14 +1,14 @@\n warning: the feature `const_generics` is incomplete and may not be safe to use and/or cause compiler crashes\n-  --> $DIR/issue-61336-2.rs:1:12\n+  --> $DIR/issue-61336-2.rs:2:27\n    |\n-LL | #![feature(const_generics)]\n-   |            ^^^^^^^^^^^^^^\n+LL | #![cfg_attr(full, feature(const_generics))]\n+   |                           ^^^^^^^^^^^^^^\n    |\n    = note: `#[warn(incomplete_features)]` on by default\n    = note: see issue #44580 <https://github.com/rust-lang/rust/issues/44580> for more information\n \n error[E0277]: the trait bound `T: std::marker::Copy` is not satisfied\n-  --> $DIR/issue-61336-2.rs:9:5\n+  --> $DIR/issue-61336-2.rs:10:5\n    |\n LL |     [x; { N }]\n    |     ^^^^^^^^^^ the trait `std::marker::Copy` is not implemented for `T`", "previous_filename": "src/test/ui/const-generics/issues/issue-61336-2.stderr"}, {"sha": "29ab7b1305e38659ba16d228d1bd788cc16dd0ab", "filename": "src/test/ui/const-generics/issues/issue-61336-2.min.stderr", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/644c8949121da0c16f65b772bf6e217748d94530/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-61336-2.min.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/644c8949121da0c16f65b772bf6e217748d94530/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-61336-2.min.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-61336-2.min.stderr?ref=644c8949121da0c16f65b772bf6e217748d94530", "patch": "@@ -0,0 +1,15 @@\n+error[E0277]: the trait bound `T: std::marker::Copy` is not satisfied\n+  --> $DIR/issue-61336-2.rs:10:5\n+   |\n+LL |     [x; { N }]\n+   |     ^^^^^^^^^^ the trait `std::marker::Copy` is not implemented for `T`\n+   |\n+   = note: the `Copy` trait is required because the repeated element will be copied\n+help: consider restricting type parameter `T`\n+   |\n+LL | fn g<T: std::marker::Copy, const N: usize>(x: T) -> [T; N] {\n+   |       ^^^^^^^^^^^^^^^^^^^\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0277`."}, {"sha": "25b9271105e245c9a58a0862427c0df9fcb272ca", "filename": "src/test/ui/const-generics/issues/issue-61336-2.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/644c8949121da0c16f65b772bf6e217748d94530/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-61336-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/644c8949121da0c16f65b772bf6e217748d94530/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-61336-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-61336-2.rs?ref=644c8949121da0c16f65b772bf6e217748d94530", "patch": "@@ -1,5 +1,6 @@\n-#![feature(const_generics)]\n-//~^ WARN the feature `const_generics` is incomplete\n+// revisions: full min\n+#![cfg_attr(full, feature(const_generics))] //[full]~WARN the feature `const_generics` is incomplete\n+#![cfg_attr(min, feature(min_const_generics))]\n \n fn f<T: Copy, const N: usize>(x: T) -> [T; N] {\n     [x; { N }]"}, {"sha": "d1b5d5eb9417f9ed0be93e12a1291b364b7c1ffe", "filename": "src/test/ui/const-generics/issues/issue-61336.full.stderr", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/644c8949121da0c16f65b772bf6e217748d94530/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-61336.full.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/644c8949121da0c16f65b772bf6e217748d94530/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-61336.full.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-61336.full.stderr?ref=644c8949121da0c16f65b772bf6e217748d94530", "patch": "@@ -0,0 +1,24 @@\n+warning: the feature `const_generics` is incomplete and may not be safe to use and/or cause compiler crashes\n+  --> $DIR/issue-61336.rs:2:27\n+   |\n+LL | #![cfg_attr(full, feature(const_generics))]\n+   |                           ^^^^^^^^^^^^^^\n+   |\n+   = note: `#[warn(incomplete_features)]` on by default\n+   = note: see issue #44580 <https://github.com/rust-lang/rust/issues/44580> for more information\n+\n+error[E0277]: the trait bound `T: std::marker::Copy` is not satisfied\n+  --> $DIR/issue-61336.rs:10:5\n+   |\n+LL |     [x; N]\n+   |     ^^^^^^ the trait `std::marker::Copy` is not implemented for `T`\n+   |\n+   = note: the `Copy` trait is required because the repeated element will be copied\n+help: consider restricting type parameter `T`\n+   |\n+LL | fn g<T: std::marker::Copy, const N: usize>(x: T) -> [T; N] {\n+   |       ^^^^^^^^^^^^^^^^^^^\n+\n+error: aborting due to previous error; 1 warning emitted\n+\n+For more information about this error, try `rustc --explain E0277`."}, {"sha": "bced8bbd82ff6df7b758babec1dc6a335c75c335", "filename": "src/test/ui/const-generics/issues/issue-61336.min.stderr", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/644c8949121da0c16f65b772bf6e217748d94530/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-61336.min.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/644c8949121da0c16f65b772bf6e217748d94530/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-61336.min.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-61336.min.stderr?ref=644c8949121da0c16f65b772bf6e217748d94530", "patch": "@@ -0,0 +1,15 @@\n+error[E0277]: the trait bound `T: std::marker::Copy` is not satisfied\n+  --> $DIR/issue-61336.rs:10:5\n+   |\n+LL |     [x; N]\n+   |     ^^^^^^ the trait `std::marker::Copy` is not implemented for `T`\n+   |\n+   = note: the `Copy` trait is required because the repeated element will be copied\n+help: consider restricting type parameter `T`\n+   |\n+LL | fn g<T: std::marker::Copy, const N: usize>(x: T) -> [T; N] {\n+   |       ^^^^^^^^^^^^^^^^^^^\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0277`."}, {"sha": "fb55542a1c9931dc5b89d6b66a82c5bd79cd5091", "filename": "src/test/ui/const-generics/issues/issue-61336.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/644c8949121da0c16f65b772bf6e217748d94530/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-61336.rs", "raw_url": "https://github.com/rust-lang/rust/raw/644c8949121da0c16f65b772bf6e217748d94530/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-61336.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-61336.rs?ref=644c8949121da0c16f65b772bf6e217748d94530", "patch": "@@ -1,5 +1,6 @@\n-#![feature(const_generics)]\n-//~^ WARN the feature `const_generics` is incomplete\n+// revisions: full min\n+#![cfg_attr(full, feature(const_generics))] //[full]~WARN the feature `const_generics` is incomplete\n+#![cfg_attr(min, feature(min_const_generics))]\n \n fn f<T: Copy, const N: usize>(x: T) -> [T; N] {\n     [x; N]"}, {"sha": "ac6c378295d3144ed85071ddbfe38412be0ce3a1", "filename": "src/test/ui/const-generics/issues/issue-61422.full.stderr", "status": "renamed", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/644c8949121da0c16f65b772bf6e217748d94530/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-61422.full.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/644c8949121da0c16f65b772bf6e217748d94530/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-61422.full.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-61422.full.stderr?ref=644c8949121da0c16f65b772bf6e217748d94530", "patch": "@@ -1,8 +1,8 @@\n warning: the feature `const_generics` is incomplete and may not be safe to use and/or cause compiler crashes\n-  --> $DIR/issue-61432.rs:3:12\n+  --> $DIR/issue-61422.rs:3:27\n    |\n-LL | #![feature(const_generics)]\n-   |            ^^^^^^^^^^^^^^\n+LL | #![cfg_attr(full, feature(const_generics))]\n+   |                           ^^^^^^^^^^^^^^\n    |\n    = note: `#[warn(incomplete_features)]` on by default\n    = note: see issue #44580 <https://github.com/rust-lang/rust/issues/44580> for more information", "previous_filename": "src/test/ui/const-generics/issues/issue-61432.stderr"}, {"sha": "649f8b4255b1216adb4d4f5461c4998fe86b9c7c", "filename": "src/test/ui/const-generics/issues/issue-61422.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/644c8949121da0c16f65b772bf6e217748d94530/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-61422.rs", "raw_url": "https://github.com/rust-lang/rust/raw/644c8949121da0c16f65b772bf6e217748d94530/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-61422.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-61422.rs?ref=644c8949121da0c16f65b772bf6e217748d94530", "patch": "@@ -1,7 +1,7 @@\n // check-pass\n-\n-#![feature(const_generics)]\n-//~^ WARN the feature `const_generics` is incomplete\n+// revisions: full min\n+#![cfg_attr(full, feature(const_generics))] //[full]~WARN the feature `const_generics` is incomplete\n+#![cfg_attr(min, feature(min_const_generics))]\n \n use std::mem;\n "}, {"sha": "82b36de45a2aac033883f54ee5e33b87b3dbc3bd", "filename": "src/test/ui/const-generics/issues/issue-61432.full.stderr", "status": "renamed", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/644c8949121da0c16f65b772bf6e217748d94530/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-61432.full.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/644c8949121da0c16f65b772bf6e217748d94530/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-61432.full.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-61432.full.stderr?ref=644c8949121da0c16f65b772bf6e217748d94530", "patch": "@@ -1,8 +1,8 @@\n warning: the feature `const_generics` is incomplete and may not be safe to use and/or cause compiler crashes\n-  --> $DIR/issue-61422.rs:3:12\n+  --> $DIR/issue-61432.rs:3:27\n    |\n-LL | #![feature(const_generics)]\n-   |            ^^^^^^^^^^^^^^\n+LL | #![cfg_attr(full, feature(const_generics))]\n+   |                           ^^^^^^^^^^^^^^\n    |\n    = note: `#[warn(incomplete_features)]` on by default\n    = note: see issue #44580 <https://github.com/rust-lang/rust/issues/44580> for more information", "previous_filename": "src/test/ui/const-generics/issues/issue-61422.stderr"}, {"sha": "91a4794099c073bd463cc52e84678bceeb5abac8", "filename": "src/test/ui/const-generics/issues/issue-61432.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/644c8949121da0c16f65b772bf6e217748d94530/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-61432.rs", "raw_url": "https://github.com/rust-lang/rust/raw/644c8949121da0c16f65b772bf6e217748d94530/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-61432.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-61432.rs?ref=644c8949121da0c16f65b772bf6e217748d94530", "patch": "@@ -1,7 +1,7 @@\n // run-pass\n-\n-#![feature(const_generics)]\n-//~^ WARN the feature `const_generics` is incomplete\n+// revisions: full min\n+#![cfg_attr(full, feature(const_generics))] //[full]~WARN the feature `const_generics` is incomplete\n+#![cfg_attr(min, feature(min_const_generics))]\n \n fn promote<const N: i32>() {\n     // works:"}, {"sha": "3ccce5675fcba19aee39f1382e20152a44d4dc71", "filename": "src/test/ui/const-generics/issues/issue-61747.full.stderr", "status": "renamed", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/644c8949121da0c16f65b772bf6e217748d94530/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-61747.full.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/644c8949121da0c16f65b772bf6e217748d94530/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-61747.full.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-61747.full.stderr?ref=644c8949121da0c16f65b772bf6e217748d94530", "patch": "@@ -1,14 +1,14 @@\n warning: the feature `const_generics` is incomplete and may not be safe to use and/or cause compiler crashes\n-  --> $DIR/issue-61747.rs:1:12\n+  --> $DIR/issue-61747.rs:2:27\n    |\n-LL | #![feature(const_generics)]\n-   |            ^^^^^^^^^^^^^^\n+LL | #![cfg_attr(full, feature(const_generics))]\n+   |                           ^^^^^^^^^^^^^^\n    |\n    = note: `#[warn(incomplete_features)]` on by default\n    = note: see issue #44580 <https://github.com/rust-lang/rust/issues/44580> for more information\n \n error: constant expression depends on a generic parameter\n-  --> $DIR/issue-61747.rs:7:23\n+  --> $DIR/issue-61747.rs:8:23\n    |\n LL |     fn successor() -> Const<{C + 1}> {\n    |                       ^^^^^^^^^^^^^^", "previous_filename": "src/test/ui/const-generics/issues/issue-61747.stderr"}, {"sha": "2061b6c55bb7b2a67677ace3402e07b559a17506", "filename": "src/test/ui/const-generics/issues/issue-61747.min.stderr", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/644c8949121da0c16f65b772bf6e217748d94530/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-61747.min.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/644c8949121da0c16f65b772bf6e217748d94530/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-61747.min.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-61747.min.stderr?ref=644c8949121da0c16f65b772bf6e217748d94530", "patch": "@@ -0,0 +1,10 @@\n+error: generic parameters must not be used inside of non trivial constant values\n+  --> $DIR/issue-61747.rs:8:30\n+   |\n+LL |     fn successor() -> Const<{C + 1}> {\n+   |                              ^ non-trivial anonymous constants must not depend on the parameter `C`\n+   |\n+   = help: it is currently only allowed to use either `C` or `{ C }` as generic constants\n+\n+error: aborting due to previous error\n+"}, {"sha": "4e5cde17f39a963a9ccd7b68f5d6b6059174ab5d", "filename": "src/test/ui/const-generics/issues/issue-61747.rs", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/644c8949121da0c16f65b772bf6e217748d94530/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-61747.rs", "raw_url": "https://github.com/rust-lang/rust/raw/644c8949121da0c16f65b772bf6e217748d94530/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-61747.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-61747.rs?ref=644c8949121da0c16f65b772bf6e217748d94530", "patch": "@@ -1,11 +1,13 @@\n-#![feature(const_generics)]\n-//~^ WARN the feature `const_generics` is incomplete\n+// revisions: full min\n+#![cfg_attr(full, feature(const_generics))] //[full]~WARN the feature `const_generics` is incomplete\n+#![cfg_attr(min, feature(min_const_generics))]\n \n struct Const<const N: usize>;\n \n impl<const C: usize> Const<{C}> {\n     fn successor() -> Const<{C + 1}> {\n-        //~^ ERROR constant expression depends on a generic parameter\n+        //[full]~^ ERROR constant expression depends on a generic parameter\n+        //[min]~^^ ERROR generic parameters must not be used\n         Const\n     }\n }"}, {"sha": "3ccdd472613728351b030ba9bff54bce1f3aa9a8", "filename": "src/test/ui/const-generics/type-dependent/const-arg-in-const-arg.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/644c8949121da0c16f65b772bf6e217748d94530/src%2Ftest%2Fui%2Fconst-generics%2Ftype-dependent%2Fconst-arg-in-const-arg.rs", "raw_url": "https://github.com/rust-lang/rust/raw/644c8949121da0c16f65b772bf6e217748d94530/src%2Ftest%2Fui%2Fconst-generics%2Ftype-dependent%2Fconst-arg-in-const-arg.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Ftype-dependent%2Fconst-arg-in-const-arg.rs?ref=644c8949121da0c16f65b772bf6e217748d94530", "patch": "@@ -1,7 +1,8 @@\n // run-pass\n-#![feature(const_generics)]\n+// revisions: full min\n+#![cfg_attr(full, feature(const_generics))]\n+#![cfg_attr(min, feature(min_const_generics))]\n #![allow(incomplete_features)]\n-#![feature(const_fn)]\n \n struct Foo;\n "}]}