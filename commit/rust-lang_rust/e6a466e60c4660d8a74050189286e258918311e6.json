{"sha": "e6a466e60c4660d8a74050189286e258918311e6", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU2YTQ2NmU2MGM0NjYwZDhhNzQwNTAxODkyODZlMjU4OTE4MzExZTY=", "commit": {"author": {"name": "David Wood", "email": "david@davidtw.co", "date": "2018-11-09T14:39:32Z"}, "committer": {"name": "David Wood", "email": "david@davidtw.co", "date": "2018-11-09T14:39:32Z"}, "message": "Fix ICE and find correct return span.\n\nThis commit fixes an ICE and determines the correct return span in cases\nwith a method implemented on a struct with an an elided lifetime.", "tree": {"sha": "d64b294197a72bf94fd93d4d56351c9091a89cb4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d64b294197a72bf94fd93d4d56351c9091a89cb4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e6a466e60c4660d8a74050189286e258918311e6", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEWwgxPGhT5b/6kagXAXYLT59T8VQFAlvlnGwACgkQAXYLT59T\n8VQpmA/9EYbbmwfBFNyzarRkSIRe+L1o+5325G3tB7TD8tUPEJCuL8//ZLgfhpJ+\nw7rooiiWP33ua/AXrx1sqGEXlqiWmkJiviEVFu9Q7em9yUmxgptfJEIZ+bm1kU1t\n63ki9Jjy+f887mj29l+QylYkKOxcbI8WuUkJaAGhEXt87tbsEd0gVdjJl8bmkFHR\n+XCwotIC+umsfCyDg8T5pJgujAMsmOoE3BwUAYl62pHBKR3azC/3vmvD9TKs+06z\nL9l3vYyscUOxgSjey1vWZXjwC+0cUk0Fj8TkdG+QaqL8GboqVSgLnjcHEB4uaqet\nM81nrzGPpkWtQQoM8kqEAjm2N6Sm2xRFnkTj5DE9MunX9du2/nmy2gaiF4+u2kxm\n3AG7urld+lukUsjwtn7zvUuIsPgvJkHNNojL7dVpEDgXJ1gSIKMNHsFwo25jJWZk\n7rGZ7kkTNloGxEqJj15guRIEggTiLWU8o6X9jy/lzlhEewo0fg0vv6eyNpAcSOhL\n8LVio//++UoGsrhT86WsO8KKvnor3tpr54M2LXMWlrN7UlQpL09+bF5h+n6QFusH\n6E6sbZfmyjjXklYcRl1SMXejjSQzUGH5S190Vv9puGkmTkCY/0Jtjgb1HYnh3F0I\nS8z56/CiOaugbByuwliZJ2WzpYen9RRSkS9hv5tTjsDYzGmwwK8=\n=fMX3\n-----END PGP SIGNATURE-----", "payload": "tree d64b294197a72bf94fd93d4d56351c9091a89cb4\nparent 653da4fd006c97625247acd7e076d0782cdc149b\nauthor David Wood <david@davidtw.co> 1541774372 +0100\ncommitter David Wood <david@davidtw.co> 1541774372 +0100\n\nFix ICE and find correct return span.\n\nThis commit fixes an ICE and determines the correct return span in cases\nwith a method implemented on a struct with an an elided lifetime.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e6a466e60c4660d8a74050189286e258918311e6", "html_url": "https://github.com/rust-lang/rust/commit/e6a466e60c4660d8a74050189286e258918311e6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e6a466e60c4660d8a74050189286e258918311e6/comments", "author": {"login": "davidtwco", "id": 1295100, "node_id": "MDQ6VXNlcjEyOTUxMDA=", "avatar_url": "https://avatars.githubusercontent.com/u/1295100?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidtwco", "html_url": "https://github.com/davidtwco", "followers_url": "https://api.github.com/users/davidtwco/followers", "following_url": "https://api.github.com/users/davidtwco/following{/other_user}", "gists_url": "https://api.github.com/users/davidtwco/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidtwco/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidtwco/subscriptions", "organizations_url": "https://api.github.com/users/davidtwco/orgs", "repos_url": "https://api.github.com/users/davidtwco/repos", "events_url": "https://api.github.com/users/davidtwco/events{/privacy}", "received_events_url": "https://api.github.com/users/davidtwco/received_events", "type": "User", "site_admin": false}, "committer": {"login": "davidtwco", "id": 1295100, "node_id": "MDQ6VXNlcjEyOTUxMDA=", "avatar_url": "https://avatars.githubusercontent.com/u/1295100?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidtwco", "html_url": "https://github.com/davidtwco", "followers_url": "https://api.github.com/users/davidtwco/followers", "following_url": "https://api.github.com/users/davidtwco/following{/other_user}", "gists_url": "https://api.github.com/users/davidtwco/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidtwco/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidtwco/subscriptions", "organizations_url": "https://api.github.com/users/davidtwco/orgs", "repos_url": "https://api.github.com/users/davidtwco/repos", "events_url": "https://api.github.com/users/davidtwco/events{/privacy}", "received_events_url": "https://api.github.com/users/davidtwco/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "653da4fd006c97625247acd7e076d0782cdc149b", "url": "https://api.github.com/repos/rust-lang/rust/commits/653da4fd006c97625247acd7e076d0782cdc149b", "html_url": "https://github.com/rust-lang/rust/commit/653da4fd006c97625247acd7e076d0782cdc149b"}], "stats": {"total": 71, "additions": 55, "deletions": 16}, "files": [{"sha": "a32fb0503a814e6ba74f7e65f3134091de8eded8", "filename": "src/librustc_mir/borrow_check/nll/region_infer/error_reporting/region_name.rs", "status": "modified", "additions": 18, "deletions": 16, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/e6a466e60c4660d8a74050189286e258918311e6/src%2Flibrustc_mir%2Fborrow_check%2Fnll%2Fregion_infer%2Ferror_reporting%2Fregion_name.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e6a466e60c4660d8a74050189286e258918311e6/src%2Flibrustc_mir%2Fborrow_check%2Fnll%2Fregion_infer%2Ferror_reporting%2Fregion_name.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Fnll%2Fregion_infer%2Ferror_reporting%2Fregion_name.rs?ref=e6a466e60c4660d8a74050189286e258918311e6", "patch": "@@ -687,22 +687,24 @@ impl<'tcx> RegionInferenceContext<'tcx> {\n \n         let mir_node_id = tcx.hir.as_local_node_id(mir_def_id).expect(\"non-local mir\");\n \n-        let (return_span, mir_description) =\n-            if let hir::ExprKind::Closure(_, _, _, span, gen_move) =\n-                tcx.hir.expect_expr(mir_node_id).node\n-            {\n-                (\n-                    tcx.sess.source_map().end_point(span),\n-                    if gen_move.is_some() {\n-                        \" of generator\"\n-                    } else {\n-                        \" of closure\"\n-                    },\n-                )\n-            } else {\n-                // unreachable?\n-                (mir.span, \"\")\n-            };\n+        let (return_span, mir_description) = match tcx.hir.get(mir_node_id) {\n+            hir::Node::Expr(hir::Expr {\n+                node: hir::ExprKind::Closure(_, _, _, span, gen_move),\n+                ..\n+            }) => (\n+                tcx.sess.source_map().end_point(*span),\n+                if gen_move.is_some() {\n+                    \" of generator\"\n+                } else {\n+                    \" of closure\"\n+                },\n+            ),\n+            hir::Node::ImplItem(hir::ImplItem {\n+                node: hir::ImplItemKind::Method(method_sig, _),\n+                ..\n+            }) => (method_sig.decl.output.span(), \"\"),\n+            _ => (mir.span, \"\"),\n+        };\n \n         Some(RegionName {\n             // This counter value will already have been used, so this function will increment it"}, {"sha": "452fc88d1ecdd07083f7b2f63c5d187b1e02b681", "filename": "src/test/ui/nll/issue-55394.rs", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/e6a466e60c4660d8a74050189286e258918311e6/src%2Ftest%2Fui%2Fnll%2Fissue-55394.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e6a466e60c4660d8a74050189286e258918311e6/src%2Ftest%2Fui%2Fnll%2Fissue-55394.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fissue-55394.rs?ref=e6a466e60c4660d8a74050189286e258918311e6", "patch": "@@ -0,0 +1,25 @@\n+// Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![feature(nll)]\n+\n+struct Bar;\n+\n+struct Foo<'s> {\n+    bar: &'s mut Bar,\n+}\n+\n+impl Foo<'_> {\n+    fn new(bar: &mut Bar) -> Self {\n+        Foo { bar }\n+    }\n+}\n+\n+fn main() { }"}, {"sha": "284d7afa6fd23cc38056422be695d5ec9a35daea", "filename": "src/test/ui/nll/issue-55394.stderr", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/e6a466e60c4660d8a74050189286e258918311e6/src%2Ftest%2Fui%2Fnll%2Fissue-55394.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e6a466e60c4660d8a74050189286e258918311e6/src%2Ftest%2Fui%2Fnll%2Fissue-55394.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fissue-55394.stderr?ref=e6a466e60c4660d8a74050189286e258918311e6", "patch": "@@ -0,0 +1,12 @@\n+error: unsatisfied lifetime constraints\n+  --> $DIR/issue-55394.rs:21:9\n+   |\n+LL |     fn new(bar: &mut Bar) -> Self {\n+   |                 -            ---- return type is Foo<'2>\n+   |                 |\n+   |                 let's call the lifetime of this reference `'1`\n+LL |         Foo { bar }\n+   |         ^^^^^^^^^^^ returning this value requires that `'1` must outlive `'2`\n+\n+error: aborting due to previous error\n+"}]}