{"sha": "343476df0f8cd09e1b49063ba75cb42304336887", "node_id": "C_kwDOAAsO6NoAKDM0MzQ3NmRmMGY4Y2QwOWUxYjQ5MDYzYmE3NWNiNDIzMDQzMzY4ODc", "commit": {"author": {"name": "Serial", "email": "69764315+Serial-ATA@users.noreply.github.com", "date": "2022-08-16T21:17:21Z"}, "committer": {"name": "Serial", "email": "69764315+Serial-ATA@users.noreply.github.com", "date": "2022-08-16T21:17:21Z"}, "message": "Use `CARGO_TARGET_DIR` in compile-test", "tree": {"sha": "5fdd28ae18f5ae4a4dd4d42e19a75c8ea66685e6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5fdd28ae18f5ae4a4dd4d42e19a75c8ea66685e6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/343476df0f8cd09e1b49063ba75cb42304336887", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/343476df0f8cd09e1b49063ba75cb42304336887", "html_url": "https://github.com/rust-lang/rust/commit/343476df0f8cd09e1b49063ba75cb42304336887", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/343476df0f8cd09e1b49063ba75cb42304336887/comments", "author": {"login": "Serial-ATA", "id": 69764315, "node_id": "MDQ6VXNlcjY5NzY0MzE1", "avatar_url": "https://avatars.githubusercontent.com/u/69764315?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Serial-ATA", "html_url": "https://github.com/Serial-ATA", "followers_url": "https://api.github.com/users/Serial-ATA/followers", "following_url": "https://api.github.com/users/Serial-ATA/following{/other_user}", "gists_url": "https://api.github.com/users/Serial-ATA/gists{/gist_id}", "starred_url": "https://api.github.com/users/Serial-ATA/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Serial-ATA/subscriptions", "organizations_url": "https://api.github.com/users/Serial-ATA/orgs", "repos_url": "https://api.github.com/users/Serial-ATA/repos", "events_url": "https://api.github.com/users/Serial-ATA/events{/privacy}", "received_events_url": "https://api.github.com/users/Serial-ATA/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Serial-ATA", "id": 69764315, "node_id": "MDQ6VXNlcjY5NzY0MzE1", "avatar_url": "https://avatars.githubusercontent.com/u/69764315?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Serial-ATA", "html_url": "https://github.com/Serial-ATA", "followers_url": "https://api.github.com/users/Serial-ATA/followers", "following_url": "https://api.github.com/users/Serial-ATA/following{/other_user}", "gists_url": "https://api.github.com/users/Serial-ATA/gists{/gist_id}", "starred_url": "https://api.github.com/users/Serial-ATA/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Serial-ATA/subscriptions", "organizations_url": "https://api.github.com/users/Serial-ATA/orgs", "repos_url": "https://api.github.com/users/Serial-ATA/repos", "events_url": "https://api.github.com/users/Serial-ATA/events{/privacy}", "received_events_url": "https://api.github.com/users/Serial-ATA/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "048e4d004aa2335393b805d690035ff3db5549c9", "url": "https://api.github.com/repos/rust-lang/rust/commits/048e4d004aa2335393b805d690035ff3db5549c9", "html_url": "https://github.com/rust-lang/rust/commit/048e4d004aa2335393b805d690035ff3db5549c9"}], "stats": {"total": 3, "additions": 2, "deletions": 1}, "files": [{"sha": "6ef90c030b7e616362df0025cb0df08e844ff190", "filename": "tests/compile-test.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/343476df0f8cd09e1b49063ba75cb42304336887/tests%2Fcompile-test.rs", "raw_url": "https://github.com/rust-lang/rust/raw/343476df0f8cd09e1b49063ba75cb42304336887/tests%2Fcompile-test.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-test.rs?ref=343476df0f8cd09e1b49063ba75cb42304336887", "patch": "@@ -403,7 +403,8 @@ const RUSTFIX_COVERAGE_KNOWN_EXCEPTIONS: &[&str] = &[\n ];\n \n fn check_rustfix_coverage() {\n-    let missing_coverage_path = Path::new(\"target/debug/test/ui/rustfix_missing_coverage.txt\");\n+    let target_dir = PathBuf::from(std::env::var(\"CARGO_TARGET_DIR\").unwrap());\n+    let missing_coverage_path = target_dir.join(\"debug/test/ui/rustfix_missing_coverage.txt\");\n \n     if let Ok(missing_coverage_contents) = std::fs::read_to_string(missing_coverage_path) {\n         assert!(RUSTFIX_COVERAGE_KNOWN_EXCEPTIONS.iter().is_sorted_by_key(Path::new));"}]}