{"sha": "eb5bf151a57a6d499ddc9ec7591d0f0648c14330", "node_id": "MDY6Q29tbWl0NzI0NzEyOmViNWJmMTUxYTU3YTZkNDk5ZGRjOWVjNzU5MWQwZjA2NDhjMTQzMzA=", "commit": {"author": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2015-05-11T19:27:26Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2015-05-19T17:36:00Z"}, "message": "mk: Remove generation of .d files\n\nLooks like cl.exe doesn't support this and we're also barely using them anyway\nas we have very few header files and C code in general.", "tree": {"sha": "cf7ca9f95f138aa87569078e9816e15efeffdba1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/cf7ca9f95f138aa87569078e9816e15efeffdba1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/eb5bf151a57a6d499ddc9ec7591d0f0648c14330", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/eb5bf151a57a6d499ddc9ec7591d0f0648c14330", "html_url": "https://github.com/rust-lang/rust/commit/eb5bf151a57a6d499ddc9ec7591d0f0648c14330", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/eb5bf151a57a6d499ddc9ec7591d0f0648c14330/comments", "author": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cb513c7b46c21c786c30901e70b62de2835a5687", "url": "https://api.github.com/repos/rust-lang/rust/commits/cb513c7b46c21c786c30901e70b62de2835a5687", "html_url": "https://github.com/rust-lang/rust/commit/cb513c7b46c21c786c30901e70b62de2835a5687"}], "stats": {"total": 19, "additions": 2, "deletions": 17}, "files": [{"sha": "d3bb5a541a47067e54e6838f70c687104dfa3e6b", "filename": "Makefile.in", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/eb5bf151a57a6d499ddc9ec7591d0f0648c14330/Makefile.in", "raw_url": "https://github.com/rust-lang/rust/raw/eb5bf151a57a6d499ddc9ec7591d0f0648c14330/Makefile.in", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Makefile.in?ref=eb5bf151a57a6d499ddc9ec7591d0f0648c14330", "patch": "@@ -266,8 +266,3 @@ ifneq ($(strip $(findstring TAGS.emacs,$(MAKECMDGOALS)) \\\n   CFG_INFO := $(info cfg: including ctags rules)\n   include $(CFG_SRC_DIR)mk/ctags.mk\n endif\n-\n-# Find all of the .d files and include them to add information about\n-# header file dependencies.\n-ALL_DEP_FILES := $(ALL_OBJ_FILES:%.o=%.d)\n--include $(ALL_DEP_FILES)"}, {"sha": "44e6537d863c231e9164974d85368dd0495e3b46", "filename": "mk/main.mk", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/eb5bf151a57a6d499ddc9ec7591d0f0648c14330/mk%2Fmain.mk", "raw_url": "https://github.com/rust-lang/rust/raw/eb5bf151a57a6d499ddc9ec7591d0f0648c14330/mk%2Fmain.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mk%2Fmain.mk?ref=eb5bf151a57a6d499ddc9ec7591d0f0648c14330", "patch": "@@ -85,10 +85,6 @@ CFG_INFO := $(info cfg: version $(CFG_VERSION))\n # More configuration\n ######################################################################\n \n-# We track all of the object files we might build so that we can find\n-# and include all of the .d files in one fell swoop.\n-ALL_OBJ_FILES :=\n-\n MKFILE_DEPS := config.stamp $(call rwildcard,$(CFG_SRC_DIR)mk/,*)\n MKFILES_FOR_TARBALL:=$(MKFILE_DEPS)\n ifneq ($(NO_MKFILE_DEPS),)"}, {"sha": "2643c3d115d6c59ad8614f0a3ab99d6f535ecd8a", "filename": "mk/platform.mk", "status": "modified", "additions": 2, "deletions": 8, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/eb5bf151a57a6d499ddc9ec7591d0f0648c14330/mk%2Fplatform.mk", "raw_url": "https://github.com/rust-lang/rust/raw/eb5bf151a57a6d499ddc9ec7591d0f0648c14330/mk%2Fplatform.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mk%2Fplatform.mk?ref=eb5bf151a57a6d499ddc9ec7591d0f0648c14330", "patch": "@@ -90,10 +90,6 @@ ifneq ($(findstring linux,$(CFG_OSTYPE)),)\n   endif\n endif\n \n-# These flags will cause the compiler to produce a .d file\n-# next to the .o file that lists header deps.\n-CFG_DEPEND_FLAGS = -MMD -MP -MT $(1) -MF $(1:%.o=%.d)\n-\n AR := ar\n \n define SET_FROM_CFG\n@@ -159,7 +155,6 @@ define CFG_MAKE_TOOLCHAIN\n   CFG_COMPILE_C_$(1) = $$(CC_$(1)) \\\n         $$(CFG_GCCISH_CFLAGS) \\\n         $$(CFG_GCCISH_CFLAGS_$(1)) \\\n-        $$(CFG_DEPEND_FLAGS) \\\n         -c -o $$(1) $$(2)\n   CFG_LINK_C_$(1) = $$(CC_$(1)) \\\n         $$(CFG_GCCISH_LINK_FLAGS) -o $$(1) \\\n@@ -171,7 +166,6 @@ define CFG_MAKE_TOOLCHAIN\n         $$(CFG_GCCISH_CXXFLAGS) \\\n         $$(CFG_GCCISH_CFLAGS_$(1)) \\\n         $$(CFG_GCCISH_CXXFLAGS_$(1)) \\\n-        $$(CFG_DEPEND_FLAGS) \\\n         -c -o $$(1) $$(2)\n   CFG_LINK_CXX_$(1) = $$(CXX_$(1)) \\\n         $$(CFG_GCCISH_LINK_FLAGS) -o $$(1) \\\n@@ -190,7 +184,7 @@ define CFG_MAKE_TOOLCHAIN\n \n   # We're using llvm-mc as our assembler because it supports\n   # .cfi pseudo-ops on mac\n-  CFG_ASSEMBLE_$(1)=$$(CPP_$(1)) -E $$(CFG_DEPEND_FLAGS) $$(2) | \\\n+  CFG_ASSEMBLE_$(1)=$$(CPP_$(1)) -E $$(2) | \\\n                     $$(LLVM_MC_$$(CFG_BUILD)) \\\n                     -assemble \\\n                     -relocation-model=$$(LLVM_MC_RELOCATION_MODEL) \\\n@@ -202,7 +196,7 @@ define CFG_MAKE_TOOLCHAIN\n   # For the ARM, AARCH64, MIPS and POWER crosses, use the toolchain assembler\n   # FIXME: We should be able to use the LLVM assembler\n   CFG_ASSEMBLE_$(1)=$$(CC_$(1)) $$(CFG_GCCISH_CFLAGS_$(1)) \\\n-                   $$(CFG_DEPEND_FLAGS) $$(2) -c -o $$(1)\n+                   $$(2) -c -o $$(1)\n \n   endif\n "}]}