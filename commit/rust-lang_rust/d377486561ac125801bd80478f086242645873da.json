{"sha": "d377486561ac125801bd80478f086242645873da", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQzNzc0ODY1NjFhYzEyNTgwMWJkODA0NzhmMDg2MjQyNjQ1ODczZGE=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2019-11-28T08:53:36Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2019-11-28T08:53:36Z"}, "message": "Auto merge of #4821 - Areredify:as_conversions, r=flip1995\n\nAdd `as_conversions` lint\n\nchangelog: closes #4771, adding a new pedantic allow-by-default lint that lints against any usage of `as`.", "tree": {"sha": "5ddf5045f81638d862b1cdef8472a28d847b0469", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5ddf5045f81638d862b1cdef8472a28d847b0469"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d377486561ac125801bd80478f086242645873da", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d377486561ac125801bd80478f086242645873da", "html_url": "https://github.com/rust-lang/rust/commit/d377486561ac125801bd80478f086242645873da", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d377486561ac125801bd80478f086242645873da/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d6accfcc82b46581840d85ce1b090fd85edbfd79", "url": "https://api.github.com/repos/rust-lang/rust/commits/d6accfcc82b46581840d85ce1b090fd85edbfd79", "html_url": "https://github.com/rust-lang/rust/commit/d6accfcc82b46581840d85ce1b090fd85edbfd79"}, {"sha": "9ec8888b91322284859ef7414760bb837bcad393", "url": "https://api.github.com/repos/rust-lang/rust/commits/9ec8888b91322284859ef7414760bb837bcad393", "html_url": "https://github.com/rust-lang/rust/commit/9ec8888b91322284859ef7414760bb837bcad393"}], "stats": {"total": 110, "additions": 106, "deletions": 4}, "files": [{"sha": "4e747524e9ed82b09820373f7f2099bc0f5980aa", "filename": "CHANGELOG.md", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d377486561ac125801bd80478f086242645873da/CHANGELOG.md", "raw_url": "https://github.com/rust-lang/rust/raw/d377486561ac125801bd80478f086242645873da/CHANGELOG.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/CHANGELOG.md?ref=d377486561ac125801bd80478f086242645873da", "patch": "@@ -929,6 +929,7 @@ Released 2018-09-13\n [`absurd_extreme_comparisons`]: https://rust-lang.github.io/rust-clippy/master/index.html#absurd_extreme_comparisons\n [`almost_swapped`]: https://rust-lang.github.io/rust-clippy/master/index.html#almost_swapped\n [`approx_constant`]: https://rust-lang.github.io/rust-clippy/master/index.html#approx_constant\n+[`as_conversions`]: https://rust-lang.github.io/rust-clippy/master/index.html#as_conversions\n [`assertions_on_constants`]: https://rust-lang.github.io/rust-clippy/master/index.html#assertions_on_constants\n [`assign_op_pattern`]: https://rust-lang.github.io/rust-clippy/master/index.html#assign_op_pattern\n [`assign_ops`]: https://rust-lang.github.io/rust-clippy/master/index.html#assign_ops"}, {"sha": "e8818412e90efff430df08bb8d1426076ae87528", "filename": "README.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d377486561ac125801bd80478f086242645873da/README.md", "raw_url": "https://github.com/rust-lang/rust/raw/d377486561ac125801bd80478f086242645873da/README.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/README.md?ref=d377486561ac125801bd80478f086242645873da", "patch": "@@ -6,7 +6,7 @@\n \n A collection of lints to catch common mistakes and improve your [Rust](https://github.com/rust-lang/rust) code.\n \n-[There are 337 lints included in this crate!](https://rust-lang.github.io/rust-clippy/master/index.html)\n+[There are 338 lints included in this crate!](https://rust-lang.github.io/rust-clippy/master/index.html)\n \n We have a bunch of lint categories to allow you to choose how much Clippy is supposed to ~~annoy~~ help you:\n "}, {"sha": "ee6357359d161867249c064c20cc1bba71862a6e", "filename": "clippy_lints/src/as_conversions.rs", "status": "added", "additions": 56, "deletions": 0, "changes": 56, "blob_url": "https://github.com/rust-lang/rust/blob/d377486561ac125801bd80478f086242645873da/clippy_lints%2Fsrc%2Fas_conversions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d377486561ac125801bd80478f086242645873da/clippy_lints%2Fsrc%2Fas_conversions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fas_conversions.rs?ref=d377486561ac125801bd80478f086242645873da", "patch": "@@ -0,0 +1,56 @@\n+use rustc::lint::{in_external_macro, EarlyContext, EarlyLintPass, LintArray, LintContext, LintPass};\n+use rustc::{declare_lint_pass, declare_tool_lint};\n+use syntax::ast::*;\n+\n+use crate::utils::span_help_and_lint;\n+\n+declare_clippy_lint! {\n+    /// **What it does:** Checks for usage of `as` conversions.\n+    ///\n+    /// **Why is this bad?** `as` conversions will perform many kinds of\n+    /// conversions, including silently lossy conversions and dangerous coercions.\n+    /// There are cases when it makes sense to use `as`, so the lint is\n+    /// Allow by default.\n+    ///\n+    /// **Known problems:** None.\n+    ///\n+    /// **Example:**\n+    /// ```rust,ignore\n+    /// let a: u32;\n+    /// ...\n+    /// f(a as u16);\n+    /// ```\n+    ///\n+    /// Usually better represents the semantics you expect:\n+    /// ```rust,ignore\n+    /// f(a.try_into()?);\n+    /// ```\n+    /// or\n+    /// ```rust,ignore\n+    /// f(a.try_into().expect(\"Unexpected u16 overflow in f\"));\n+    /// ```\n+    ///\n+    pub AS_CONVERSIONS,\n+    restriction,\n+    \"using a potentially dangerous silent `as` conversion\"\n+}\n+\n+declare_lint_pass!(AsConversions => [AS_CONVERSIONS]);\n+\n+impl EarlyLintPass for AsConversions {\n+    fn check_expr(&mut self, cx: &EarlyContext<'_>, expr: &Expr) {\n+        if in_external_macro(cx.sess(), expr.span) {\n+            return;\n+        }\n+\n+        if let ExprKind::Cast(_, _) = expr.kind {\n+            span_help_and_lint(\n+                cx,\n+                AS_CONVERSIONS,\n+                expr.span,\n+                \"using a potentially dangerous silent `as` conversion\",\n+                \"consider using a safe wrapper for this conversion\",\n+            );\n+        }\n+    }\n+}"}, {"sha": "bdccbde9a180ba29a41c6a515bd761a66ba42d1b", "filename": "clippy_lints/src/lib.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/d377486561ac125801bd80478f086242645873da/clippy_lints%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d377486561ac125801bd80478f086242645873da/clippy_lints%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flib.rs?ref=d377486561ac125801bd80478f086242645873da", "patch": "@@ -156,6 +156,7 @@ mod utils;\n // begin lints modules, do not remove this comment, it\u2019s used in `update_lints`\n pub mod approx_const;\n pub mod arithmetic;\n+pub mod as_conversions;\n pub mod assertions_on_constants;\n pub mod assign_ops;\n pub mod attrs;\n@@ -449,6 +450,7 @@ pub fn register_plugins(store: &mut lint::LintStore, sess: &Session, conf: &Conf\n         &approx_const::APPROX_CONSTANT,\n         &arithmetic::FLOAT_ARITHMETIC,\n         &arithmetic::INTEGER_ARITHMETIC,\n+        &as_conversions::AS_CONVERSIONS,\n         &assertions_on_constants::ASSERTIONS_ON_CONSTANTS,\n         &assign_ops::ASSIGN_OP_PATTERN,\n         &assign_ops::MISREFACTORED_ASSIGN_OP,\n@@ -960,10 +962,12 @@ pub fn register_plugins(store: &mut lint::LintStore, sess: &Session, conf: &Conf\n     store.register_late_pass(|| box to_digit_is_some::ToDigitIsSome);\n     let array_size_threshold = conf.array_size_threshold;\n     store.register_late_pass(move || box large_stack_arrays::LargeStackArrays::new(array_size_threshold));\n+    store.register_early_pass(|| box as_conversions::AsConversions);\n \n     store.register_group(true, \"clippy::restriction\", Some(\"clippy_restriction\"), vec![\n         LintId::of(&arithmetic::FLOAT_ARITHMETIC),\n         LintId::of(&arithmetic::INTEGER_ARITHMETIC),\n+        LintId::of(&as_conversions::AS_CONVERSIONS),\n         LintId::of(&dbg_macro::DBG_MACRO),\n         LintId::of(&else_if_without_else::ELSE_IF_WITHOUT_ELSE),\n         LintId::of(&exit::EXIT),"}, {"sha": "e5d8f2d0c1a8c6a71c27445f13c442d0eaf33b54", "filename": "src/lintlist/mod.rs", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/d377486561ac125801bd80478f086242645873da/src%2Flintlist%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d377486561ac125801bd80478f086242645873da/src%2Flintlist%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flintlist%2Fmod.rs?ref=d377486561ac125801bd80478f086242645873da", "patch": "@@ -6,7 +6,7 @@ pub use lint::Lint;\n pub use lint::LINT_LEVELS;\n \n // begin lint list, do not remove this comment, it\u2019s used in `update_lints`\n-pub const ALL_LINTS: [Lint; 337] = [\n+pub const ALL_LINTS: [Lint; 338] = [\n     Lint {\n         name: \"absurd_extreme_comparisons\",\n         group: \"correctness\",\n@@ -28,6 +28,13 @@ pub const ALL_LINTS: [Lint; 337] = [\n         deprecation: None,\n         module: \"approx_const\",\n     },\n+    Lint {\n+        name: \"as_conversions\",\n+        group: \"restriction\",\n+        desc: \"using a potentially dangerous silent `as` conversion\",\n+        deprecation: None,\n+        module: \"as_conversions\",\n+    },\n     Lint {\n         name: \"assertions_on_constants\",\n         group: \"style\","}, {"sha": "e01ba0c64df325535f88bb0909640657002f4047", "filename": "tests/ui/as_conversions.rs", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/d377486561ac125801bd80478f086242645873da/tests%2Fui%2Fas_conversions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d377486561ac125801bd80478f086242645873da/tests%2Fui%2Fas_conversions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fas_conversions.rs?ref=d377486561ac125801bd80478f086242645873da", "patch": "@@ -0,0 +1,7 @@\n+#[warn(clippy::as_conversions)]\n+\n+fn main() {\n+    let i = 0u32 as u64;\n+\n+    let j = &i as *const u64 as *mut u64;\n+}"}, {"sha": "312d3a7460ebe4a34a3753bcf01e9e17dee2693c", "filename": "tests/ui/as_conversions.stderr", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/d377486561ac125801bd80478f086242645873da/tests%2Fui%2Fas_conversions.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d377486561ac125801bd80478f086242645873da/tests%2Fui%2Fas_conversions.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fas_conversions.stderr?ref=d377486561ac125801bd80478f086242645873da", "patch": "@@ -0,0 +1,27 @@\n+error: using a potentially dangerous silent `as` conversion\n+  --> $DIR/as_conversions.rs:4:13\n+   |\n+LL |     let i = 0u32 as u64;\n+   |             ^^^^^^^^^^^\n+   |\n+   = note: `-D clippy::as-conversions` implied by `-D warnings`\n+   = help: consider using a safe wrapper for this conversion\n+\n+error: using a potentially dangerous silent `as` conversion\n+  --> $DIR/as_conversions.rs:6:13\n+   |\n+LL |     let j = &i as *const u64 as *mut u64;\n+   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |\n+   = help: consider using a safe wrapper for this conversion\n+\n+error: using a potentially dangerous silent `as` conversion\n+  --> $DIR/as_conversions.rs:6:13\n+   |\n+LL |     let j = &i as *const u64 as *mut u64;\n+   |             ^^^^^^^^^^^^^^^^\n+   |\n+   = help: consider using a safe wrapper for this conversion\n+\n+error: aborting due to 3 previous errors\n+"}, {"sha": "417da42edf17b3dff4b70692a998bf306a474908", "filename": "tests/ui/types.fixed", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d377486561ac125801bd80478f086242645873da/tests%2Fui%2Ftypes.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/d377486561ac125801bd80478f086242645873da/tests%2Fui%2Ftypes.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ftypes.fixed?ref=d377486561ac125801bd80478f086242645873da", "patch": "@@ -1,7 +1,7 @@\n // run-rustfix\n \n #![allow(dead_code, unused_variables)]\n-#![warn(clippy::all, clippy::pedantic)]\n+#![warn(clippy::cast_lossless)]\n \n // should not warn on lossy casting in constant types\n // because not supported yet"}, {"sha": "b16e9e538b106a4c4fcb0a802ada71239501a6cb", "filename": "tests/ui/types.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d377486561ac125801bd80478f086242645873da/tests%2Fui%2Ftypes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d377486561ac125801bd80478f086242645873da/tests%2Fui%2Ftypes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ftypes.rs?ref=d377486561ac125801bd80478f086242645873da", "patch": "@@ -1,7 +1,7 @@\n // run-rustfix\n \n #![allow(dead_code, unused_variables)]\n-#![warn(clippy::all, clippy::pedantic)]\n+#![warn(clippy::cast_lossless)]\n \n // should not warn on lossy casting in constant types\n // because not supported yet"}]}