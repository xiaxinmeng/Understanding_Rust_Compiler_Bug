{"sha": "cdff11ce94a6d70873920a4347de41adc5763d03", "node_id": "C_kwDOAAsO6NoAKGNkZmYxMWNlOTRhNmQ3MDg3MzkyMGE0MzQ3ZGU0MWFkYzU3NjNkMDM", "commit": {"author": {"name": "Nicholas Nethercote", "email": "n.nethercote@gmail.com", "date": "2022-11-23T04:39:42Z"}, "committer": {"name": "Nicholas Nethercote", "email": "n.nethercote@gmail.com", "date": "2022-11-28T04:18:49Z"}, "message": "Rename `ast::Lit` as `ast::MetaItemLit`.", "tree": {"sha": "4128febb20241efb481acdfb320aaa589753ab76", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4128febb20241efb481acdfb320aaa589753ab76"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cdff11ce94a6d70873920a4347de41adc5763d03", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cdff11ce94a6d70873920a4347de41adc5763d03", "html_url": "https://github.com/rust-lang/rust/commit/cdff11ce94a6d70873920a4347de41adc5763d03", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cdff11ce94a6d70873920a4347de41adc5763d03/comments", "author": {"login": "nnethercote", "id": 1940286, "node_id": "MDQ6VXNlcjE5NDAyODY=", "avatar_url": "https://avatars.githubusercontent.com/u/1940286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nnethercote", "html_url": "https://github.com/nnethercote", "followers_url": "https://api.github.com/users/nnethercote/followers", "following_url": "https://api.github.com/users/nnethercote/following{/other_user}", "gists_url": "https://api.github.com/users/nnethercote/gists{/gist_id}", "starred_url": "https://api.github.com/users/nnethercote/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nnethercote/subscriptions", "organizations_url": "https://api.github.com/users/nnethercote/orgs", "repos_url": "https://api.github.com/users/nnethercote/repos", "events_url": "https://api.github.com/users/nnethercote/events{/privacy}", "received_events_url": "https://api.github.com/users/nnethercote/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nnethercote", "id": 1940286, "node_id": "MDQ6VXNlcjE5NDAyODY=", "avatar_url": "https://avatars.githubusercontent.com/u/1940286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nnethercote", "html_url": "https://github.com/nnethercote", "followers_url": "https://api.github.com/users/nnethercote/followers", "following_url": "https://api.github.com/users/nnethercote/following{/other_user}", "gists_url": "https://api.github.com/users/nnethercote/gists{/gist_id}", "starred_url": "https://api.github.com/users/nnethercote/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nnethercote/subscriptions", "organizations_url": "https://api.github.com/users/nnethercote/orgs", "repos_url": "https://api.github.com/users/nnethercote/repos", "events_url": "https://api.github.com/users/nnethercote/events{/privacy}", "received_events_url": "https://api.github.com/users/nnethercote/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3d44530eb081d6ffb45124bb25feb2738f6f09ac", "url": "https://api.github.com/repos/rust-lang/rust/commits/3d44530eb081d6ffb45124bb25feb2738f6f09ac", "html_url": "https://github.com/rust-lang/rust/commit/3d44530eb081d6ffb45124bb25feb2738f6f09ac"}], "stats": {"total": 23, "additions": 16, "deletions": 7}, "files": [{"sha": "8cba2a850e5bc266c91288c31896c19da860df4a", "filename": "src/attr.rs", "status": "modified", "additions": 8, "deletions": 3, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/cdff11ce94a6d70873920a4347de41adc5763d03/src%2Fattr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cdff11ce94a6d70873920a4347de41adc5763d03/src%2Fattr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fattr.rs?ref=cdff11ce94a6d70873920a4347de41adc5763d03", "patch": "@@ -527,14 +527,19 @@ pub(crate) trait MetaVisitor<'ast> {\n \n     fn visit_meta_word(&mut self, _meta_item: &'ast ast::MetaItem) {}\n \n-    fn visit_meta_name_value(&mut self, _meta_item: &'ast ast::MetaItem, _lit: &'ast ast::Lit) {}\n+    fn visit_meta_name_value(\n+        &mut self,\n+        _meta_item: &'ast ast::MetaItem,\n+        _lit: &'ast ast::MetaItemLit,\n+    ) {\n+    }\n \n     fn visit_nested_meta_item(&mut self, nm: &'ast ast::NestedMetaItem) {\n         match nm {\n             ast::NestedMetaItem::MetaItem(ref meta_item) => self.visit_meta_item(meta_item),\n-            ast::NestedMetaItem::Literal(ref lit) => self.visit_literal(lit),\n+            ast::NestedMetaItem::Literal(ref lit) => self.visit_meta_item_lit(lit),\n         }\n     }\n \n-    fn visit_literal(&mut self, _lit: &'ast ast::Lit) {}\n+    fn visit_meta_item_lit(&mut self, _lit: &'ast ast::MetaItemLit) {}\n }"}, {"sha": "48431693332a619211a269c29da2669ed3d78ae3", "filename": "src/modules/visitor.rs", "status": "modified", "additions": 8, "deletions": 4, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/cdff11ce94a6d70873920a4347de41adc5763d03/src%2Fmodules%2Fvisitor.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cdff11ce94a6d70873920a4347de41adc5763d03/src%2Fmodules%2Fvisitor.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fmodules%2Fvisitor.rs?ref=cdff11ce94a6d70873920a4347de41adc5763d03", "patch": "@@ -84,23 +84,27 @@ impl PathVisitor {\n }\n \n impl<'ast> MetaVisitor<'ast> for PathVisitor {\n-    fn visit_meta_name_value(&mut self, meta_item: &'ast ast::MetaItem, lit: &'ast ast::Lit) {\n+    fn visit_meta_name_value(\n+        &mut self,\n+        meta_item: &'ast ast::MetaItem,\n+        lit: &'ast ast::MetaItemLit,\n+    ) {\n         if meta_item.has_name(Symbol::intern(\"path\")) && lit.kind.is_str() {\n-            self.paths.push(lit_to_str(lit));\n+            self.paths.push(meta_item_lit_to_str(lit));\n         }\n     }\n }\n \n #[cfg(not(windows))]\n-fn lit_to_str(lit: &ast::Lit) -> String {\n+fn meta_item_lit_to_str(lit: &ast::MetaItemLit) -> String {\n     match lit.kind {\n         ast::LitKind::Str(symbol, ..) => symbol.to_string(),\n         _ => unreachable!(),\n     }\n }\n \n #[cfg(windows)]\n-fn lit_to_str(lit: &ast::Lit) -> String {\n+fn meta_item_lit_to_str(lit: &ast::MetaItemLit) -> String {\n     match lit.kind {\n         ast::LitKind::Str(symbol, ..) => symbol.as_str().replace(\"/\", \"\\\\\"),\n         _ => unreachable!(),"}]}