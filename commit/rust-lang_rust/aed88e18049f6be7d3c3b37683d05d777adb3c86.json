{"sha": "aed88e18049f6be7d3c3b37683d05d777adb3c86", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFlZDg4ZTE4MDQ5ZjZiZTdkM2MzYjM3NjgzZDA1ZDc3N2FkYjNjODY=", "commit": {"author": {"name": "CAD97", "email": "cad97@cad97.com", "date": "2020-06-30T16:47:23Z"}, "committer": {"name": "CAD97", "email": "cad97@cad97.com", "date": "2020-06-30T19:03:04Z"}, "message": "Clarify when rc::data_offset is safe", "tree": {"sha": "c963fe8c4f71fcb8a23bf0cc9eeabe7233d90c9f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c963fe8c4f71fcb8a23bf0cc9eeabe7233d90c9f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/aed88e18049f6be7d3c3b37683d05d777adb3c86", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/aed88e18049f6be7d3c3b37683d05d777adb3c86", "html_url": "https://github.com/rust-lang/rust/commit/aed88e18049f6be7d3c3b37683d05d777adb3c86", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/aed88e18049f6be7d3c3b37683d05d777adb3c86/comments", "author": {"login": "CAD97", "id": 5992217, "node_id": "MDQ6VXNlcjU5OTIyMTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5992217?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CAD97", "html_url": "https://github.com/CAD97", "followers_url": "https://api.github.com/users/CAD97/followers", "following_url": "https://api.github.com/users/CAD97/following{/other_user}", "gists_url": "https://api.github.com/users/CAD97/gists{/gist_id}", "starred_url": "https://api.github.com/users/CAD97/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CAD97/subscriptions", "organizations_url": "https://api.github.com/users/CAD97/orgs", "repos_url": "https://api.github.com/users/CAD97/repos", "events_url": "https://api.github.com/users/CAD97/events{/privacy}", "received_events_url": "https://api.github.com/users/CAD97/received_events", "type": "User", "site_admin": false}, "committer": {"login": "CAD97", "id": 5992217, "node_id": "MDQ6VXNlcjU5OTIyMTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5992217?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CAD97", "html_url": "https://github.com/CAD97", "followers_url": "https://api.github.com/users/CAD97/followers", "following_url": "https://api.github.com/users/CAD97/following{/other_user}", "gists_url": "https://api.github.com/users/CAD97/gists{/gist_id}", "starred_url": "https://api.github.com/users/CAD97/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CAD97/subscriptions", "organizations_url": "https://api.github.com/users/CAD97/orgs", "repos_url": "https://api.github.com/users/CAD97/repos", "events_url": "https://api.github.com/users/CAD97/events{/privacy}", "received_events_url": "https://api.github.com/users/CAD97/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0aecf3c74b7fd09460f453e7e95ae8cb65a92440", "url": "https://api.github.com/repos/rust-lang/rust/commits/0aecf3c74b7fd09460f453e7e95ae8cb65a92440", "html_url": "https://github.com/rust-lang/rust/commit/0aecf3c74b7fd09460f453e7e95ae8cb65a92440"}], "stats": {"total": 21, "additions": 20, "deletions": 1}, "files": [{"sha": "24e7d5da7a68436a72e93f57d93186d22b3ede31", "filename": "src/liballoc/rc.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/aed88e18049f6be7d3c3b37683d05d777adb3c86/src%2Fliballoc%2Frc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aed88e18049f6be7d3c3b37683d05d777adb3c86/src%2Fliballoc%2Frc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Frc.rs?ref=aed88e18049f6be7d3c3b37683d05d777adb3c86", "patch": "@@ -2116,6 +2116,16 @@ impl<T: ?Sized> AsRef<T> for Rc<T> {\n #[stable(feature = \"pin\", since = \"1.33.0\")]\n impl<T: ?Sized> Unpin for Rc<T> {}\n \n+/// Get the offset within an `ArcInner` for\n+/// a payload of type described by a pointer.\n+///\n+/// # Safety\n+///\n+/// This has the same safety requirements as `align_of_val_raw`. In effect:\n+///\n+/// - This function is safe for any argument if `T` is sized, and\n+/// - if `T` is unsized, the pointer must have appropriate pointer metadata\n+///   aquired from the real instance that you are getting this offset for.\n unsafe fn data_offset<T: ?Sized>(ptr: *const T) -> isize {\n     // Align the unsized value to the end of the `RcBox`.\n     // Because it is ?Sized, it will always be the last field in memory."}, {"sha": "53ce47d023b4709f3be8843e5559e93b91df8d1b", "filename": "src/liballoc/sync.rs", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/aed88e18049f6be7d3c3b37683d05d777adb3c86/src%2Fliballoc%2Fsync.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aed88e18049f6be7d3c3b37683d05d777adb3c86/src%2Fliballoc%2Fsync.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Fsync.rs?ref=aed88e18049f6be7d3c3b37683d05d777adb3c86", "patch": "@@ -2273,7 +2273,16 @@ impl<T: ?Sized> AsRef<T> for Arc<T> {\n #[stable(feature = \"pin\", since = \"1.33.0\")]\n impl<T: ?Sized> Unpin for Arc<T> {}\n \n-/// Computes the offset of the data field within `ArcInner`.\n+/// Get the offset within an `ArcInner` for\n+/// a payload of type described by a pointer.\n+///\n+/// # Safety\n+///\n+/// This has the same safety requirements as `align_of_val_raw`. In effect:\n+///\n+/// - This function is safe for any argument if `T` is sized, and\n+/// - if `T` is unsized, the pointer must have appropriate pointer metadata\n+///   aquired from the real instance that you are getting this offset for.\n unsafe fn data_offset<T: ?Sized>(ptr: *const T) -> isize {\n     // Align the unsized value to the end of the `ArcInner`.\n     // Because it is `?Sized`, it will always be the last field in memory."}]}