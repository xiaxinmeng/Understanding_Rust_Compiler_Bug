{"sha": "f0d0573db1a791958938789b35309aab7323c284", "node_id": "C_kwDOAAsO6NoAKGYwZDA1NzNkYjFhNzkxOTU4OTM4Nzg5YjM1MzA5YWFiNzMyM2MyODQ", "commit": {"author": {"name": "Vadim Petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2022-08-14T16:11:31Z"}, "committer": {"name": "Vadim Petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2022-08-27T12:30:05Z"}, "message": "rustc_target: Do not specify some target options redundantly\n\nThese values are already inherited", "tree": {"sha": "fe9bb0147319560cbeca5ddd9613e4b19831409f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fe9bb0147319560cbeca5ddd9613e4b19831409f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f0d0573db1a791958938789b35309aab7323c284", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f0d0573db1a791958938789b35309aab7323c284", "html_url": "https://github.com/rust-lang/rust/commit/f0d0573db1a791958938789b35309aab7323c284", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f0d0573db1a791958938789b35309aab7323c284/comments", "author": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "committer": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2e83c22154afb6dd9fe32a17e9eaa0332c073707", "url": "https://api.github.com/repos/rust-lang/rust/commits/2e83c22154afb6dd9fe32a17e9eaa0332c073707", "html_url": "https://github.com/rust-lang/rust/commit/2e83c22154afb6dd9fe32a17e9eaa0332c073707"}], "stats": {"total": 15, "additions": 3, "deletions": 12}, "files": [{"sha": "b301ce68a1ce10ba20b877f904059a91c85299dd", "filename": "compiler/rustc_target/src/spec/aarch64_nintendo_switch_freestanding.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/f0d0573db1a791958938789b35309aab7323c284/compiler%2Frustc_target%2Fsrc%2Fspec%2Faarch64_nintendo_switch_freestanding.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f0d0573db1a791958938789b35309aab7323c284/compiler%2Frustc_target%2Fsrc%2Fspec%2Faarch64_nintendo_switch_freestanding.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_target%2Fsrc%2Fspec%2Faarch64_nintendo_switch_freestanding.rs?ref=f0d0573db1a791958938789b35309aab7323c284", "patch": "@@ -18,7 +18,6 @@ pub fn target() -> Target {\n             panic_strategy: PanicStrategy::Abort,\n             position_independent_executables: true,\n             dynamic_linking: true,\n-            executables: true,\n             relro_level: RelroLevel::Off,\n             ..Default::default()\n         },"}, {"sha": "9f3e0bd5ef0e3ac8b74484d418e249f44740abca", "filename": "compiler/rustc_target/src/spec/android_base.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/f0d0573db1a791958938789b35309aab7323c284/compiler%2Frustc_target%2Fsrc%2Fspec%2Fandroid_base.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f0d0573db1a791958938789b35309aab7323c284/compiler%2Frustc_target%2Fsrc%2Fspec%2Fandroid_base.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_target%2Fsrc%2Fspec%2Fandroid_base.rs?ref=f0d0573db1a791958938789b35309aab7323c284", "patch": "@@ -4,7 +4,6 @@ pub fn opts() -> TargetOptions {\n     let mut base = super::linux_base::opts();\n     base.os = \"android\".into();\n     base.default_dwarf_version = 2;\n-    base.position_independent_executables = true;\n     base.has_thread_local = false;\n     // This is for backward compatibility, see https://github.com/rust-lang/rust/issues/49867\n     // for context. (At that time, there was no `-C force-unwind-tables`, so the only solution"}, {"sha": "2a24e4459c553c65ceb35feb37d8afb5fc8ba597", "filename": "compiler/rustc_target/src/spec/hexagon_unknown_linux_musl.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/f0d0573db1a791958938789b35309aab7323c284/compiler%2Frustc_target%2Fsrc%2Fspec%2Fhexagon_unknown_linux_musl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f0d0573db1a791958938789b35309aab7323c284/compiler%2Frustc_target%2Fsrc%2Fspec%2Fhexagon_unknown_linux_musl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_target%2Fsrc%2Fspec%2Fhexagon_unknown_linux_musl.rs?ref=f0d0573db1a791958938789b35309aab7323c284", "patch": "@@ -10,7 +10,6 @@ pub fn target() -> Target {\n     base.crt_static_default = false;\n     base.has_rpath = true;\n     base.linker_is_gnu = false;\n-    base.dynamic_linking = true;\n \n     base.c_enum_min_bits = 8;\n "}, {"sha": "75ac66c276d57c72b454b721c95d252d2280ac1f", "filename": "compiler/rustc_target/src/spec/powerpc_unknown_freebsd.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/f0d0573db1a791958938789b35309aab7323c284/compiler%2Frustc_target%2Fsrc%2Fspec%2Fpowerpc_unknown_freebsd.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f0d0573db1a791958938789b35309aab7323c284/compiler%2Frustc_target%2Fsrc%2Fspec%2Fpowerpc_unknown_freebsd.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_target%2Fsrc%2Fspec%2Fpowerpc_unknown_freebsd.rs?ref=f0d0573db1a791958938789b35309aab7323c284", "patch": "@@ -1,5 +1,5 @@\n use crate::abi::Endian;\n-use crate::spec::{LinkerFlavor, RelocModel, Target, TargetOptions};\n+use crate::spec::{LinkerFlavor, Target, TargetOptions};\n \n pub fn target() -> Target {\n     let mut base = super::freebsd_base::opts();\n@@ -15,7 +15,6 @@ pub fn target() -> Target {\n         options: TargetOptions {\n             endian: Endian::Big,\n             features: \"+secure-plt\".into(),\n-            relocation_model: RelocModel::Pic,\n             mcount: \"_mcount\".into(),\n             ..base\n         },"}, {"sha": "26da7e800114a17994a709771348c6c3585da4d3", "filename": "compiler/rustc_target/src/spec/x86_64_unknown_l4re_uclibc.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f0d0573db1a791958938789b35309aab7323c284/compiler%2Frustc_target%2Fsrc%2Fspec%2Fx86_64_unknown_l4re_uclibc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f0d0573db1a791958938789b35309aab7323c284/compiler%2Frustc_target%2Fsrc%2Fspec%2Fx86_64_unknown_l4re_uclibc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_target%2Fsrc%2Fspec%2Fx86_64_unknown_l4re_uclibc.rs?ref=f0d0573db1a791958938789b35309aab7323c284", "patch": "@@ -4,8 +4,6 @@ pub fn target() -> Target {\n     let mut base = super::l4re_base::opts();\n     base.cpu = \"x86-64\".into();\n     base.max_atomic_width = Some(64);\n-    base.crt_static_allows_dylibs = false;\n-    base.dynamic_linking = false;\n     base.panic_strategy = PanicStrategy::Abort;\n \n     Target {"}, {"sha": "b9a345127e3724d736c13be060afaae504890c03", "filename": "compiler/rustc_target/src/spec/x86_64_unknown_none.rs", "status": "modified", "additions": 2, "deletions": 5, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/f0d0573db1a791958938789b35309aab7323c284/compiler%2Frustc_target%2Fsrc%2Fspec%2Fx86_64_unknown_none.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f0d0573db1a791958938789b35309aab7323c284/compiler%2Frustc_target%2Fsrc%2Fspec%2Fx86_64_unknown_none.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_target%2Fsrc%2Fspec%2Fx86_64_unknown_none.rs?ref=f0d0573db1a791958938789b35309aab7323c284", "patch": "@@ -4,10 +4,8 @@\n // `target-cpu` compiler flags to opt-in more hardware-specific\n // features.\n \n-use super::{\n-    CodeModel, LinkerFlavor, LldFlavor, PanicStrategy, RelocModel, RelroLevel, StackProbeType,\n-    Target, TargetOptions,\n-};\n+use super::{CodeModel, LinkerFlavor, LldFlavor, PanicStrategy};\n+use super::{RelroLevel, StackProbeType, Target, TargetOptions};\n \n pub fn target() -> Target {\n     let opts = TargetOptions {\n@@ -18,7 +16,6 @@ pub fn target() -> Target {\n         position_independent_executables: true,\n         static_position_independent_executables: true,\n         relro_level: RelroLevel::Full,\n-        relocation_model: RelocModel::Pic,\n         linker_flavor: LinkerFlavor::Lld(LldFlavor::Ld),\n         linker: Some(\"rust-lld\".into()),\n         features:"}]}