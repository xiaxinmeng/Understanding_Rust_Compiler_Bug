{"sha": "8042206657314dc5470fca8ce6ad82424034f40c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjgwNDIyMDY2NTczMTRkYzU0NzBmY2E4Y2U2YWQ4MjQyNDAzNGY0MGM=", "commit": {"author": {"name": "varkor", "email": "github@varkor.com", "date": "2019-10-13T15:14:59Z"}, "committer": {"name": "varkor", "email": "github@varkor.com", "date": "2019-10-25T22:26:27Z"}, "message": "Handle `ImplItem` in `check_attr`", "tree": {"sha": "4c54fc0ff698feed5460c5f1d272d9a42069171b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4c54fc0ff698feed5460c5f1d272d9a42069171b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8042206657314dc5470fca8ce6ad82424034f40c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8042206657314dc5470fca8ce6ad82424034f40c", "html_url": "https://github.com/rust-lang/rust/commit/8042206657314dc5470fca8ce6ad82424034f40c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8042206657314dc5470fca8ce6ad82424034f40c/comments", "author": {"login": "varkor", "id": 3943692, "node_id": "MDQ6VXNlcjM5NDM2OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3943692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/varkor", "html_url": "https://github.com/varkor", "followers_url": "https://api.github.com/users/varkor/followers", "following_url": "https://api.github.com/users/varkor/following{/other_user}", "gists_url": "https://api.github.com/users/varkor/gists{/gist_id}", "starred_url": "https://api.github.com/users/varkor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/varkor/subscriptions", "organizations_url": "https://api.github.com/users/varkor/orgs", "repos_url": "https://api.github.com/users/varkor/repos", "events_url": "https://api.github.com/users/varkor/events{/privacy}", "received_events_url": "https://api.github.com/users/varkor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "varkor", "id": 3943692, "node_id": "MDQ6VXNlcjM5NDM2OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3943692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/varkor", "html_url": "https://github.com/varkor", "followers_url": "https://api.github.com/users/varkor/followers", "following_url": "https://api.github.com/users/varkor/following{/other_user}", "gists_url": "https://api.github.com/users/varkor/gists{/gist_id}", "starred_url": "https://api.github.com/users/varkor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/varkor/subscriptions", "organizations_url": "https://api.github.com/users/varkor/orgs", "repos_url": "https://api.github.com/users/varkor/repos", "events_url": "https://api.github.com/users/varkor/events{/privacy}", "received_events_url": "https://api.github.com/users/varkor/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "41ee9eaee76fc38eebc0580e8361bced8edd7ccb", "url": "https://api.github.com/repos/rust-lang/rust/commits/41ee9eaee76fc38eebc0580e8361bced8edd7ccb", "html_url": "https://github.com/rust-lang/rust/commit/41ee9eaee76fc38eebc0580e8361bced8edd7ccb"}], "stats": {"total": 71, "additions": 65, "deletions": 6}, "files": [{"sha": "a175bcafdc4a4788cea72c24d6e14903e6ccdd9f", "filename": "src/librustc/hir/check_attr.rs", "status": "modified", "additions": 16, "deletions": 1, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/8042206657314dc5470fca8ce6ad82424034f40c/src%2Flibrustc%2Fhir%2Fcheck_attr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8042206657314dc5470fca8ce6ad82424034f40c/src%2Flibrustc%2Fhir%2Fcheck_attr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fhir%2Fcheck_attr.rs?ref=8042206657314dc5470fca8ce6ad82424034f40c", "patch": "@@ -119,6 +119,15 @@ impl Target {\n             hir::ForeignItemKind::Type => Target::ForeignTy,\n         }\n     }\n+\n+    fn from_impl_item(impl_item: &hir::ImplItem) -> Target {\n+        match impl_item.kind {\n+            hir::ImplItemKind::Const(..) => Target::Const,\n+            hir::ImplItemKind::Method(..) => Target::Method { body: true },\n+            hir::ImplItemKind::TyAlias(..) => Target::TyAlias,\n+            hir::ImplItemKind::OpaqueTy(..) => Target::OpaqueTy,\n+        }\n+    }\n }\n \n struct CheckAttrVisitor<'tcx> {\n@@ -360,7 +369,7 @@ impl CheckAttrVisitor<'tcx> {\n         // Warn on repr(u8, u16), repr(C, simd), and c-like-enum-repr(C, u8)\n         if (int_reprs > 1)\n            || (is_simd && is_c)\n-           || (int_reprs == 1 && is_c && item.map(|item| is_c_like_enum(item)).unwrap_or(false)) {\n+           || (int_reprs == 1 && is_c && item.map_or(false, |item| is_c_like_enum(item))) {\n             let hint_spans: Vec<_> = hint_spans.collect();\n             span_warn!(self.tcx.sess, hint_spans, E0566,\n                        \"conflicting representation hints\");\n@@ -451,6 +460,12 @@ impl Visitor<'tcx> for CheckAttrVisitor<'tcx> {\n         intravisit::walk_foreign_item(self, f_item)\n     }\n \n+    fn visit_impl_item(&mut self, impl_item: &'tcx hir::ImplItem) {\n+        let target = Target::from_impl_item(impl_item);\n+        self.check_attributes(impl_item.hir_id, &impl_item.attrs, &impl_item.span, target, None);\n+        intravisit::walk_impl_item(self, impl_item)\n+    }\n+\n     fn visit_stmt(&mut self, stmt: &'tcx hir::Stmt) {\n         self.check_stmt_attributes(stmt);\n         intravisit::walk_stmt(self, stmt)"}, {"sha": "2beb5aaba6590a803a0d72b00dc8dacaa2b630e9", "filename": "src/test/ui/lint/inline-trait-and-foreign-items.rs", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/8042206657314dc5470fca8ce6ad82424034f40c/src%2Ftest%2Fui%2Flint%2Finline-trait-and-foreign-items.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8042206657314dc5470fca8ce6ad82424034f40c/src%2Ftest%2Fui%2Flint%2Finline-trait-and-foreign-items.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Finline-trait-and-foreign-items.rs?ref=8042206657314dc5470fca8ce6ad82424034f40c", "patch": "@@ -1,11 +1,25 @@\n #![feature(extern_types)]\n+#![feature(type_alias_impl_trait)]\n \n trait Trait {\n     #[inline] //~ ERROR attribute should be applied to function or closure\n     const X: u32;\n \n     #[inline] //~ ERROR attribute should be applied to function or closure\n     type T;\n+\n+    type U;\n+}\n+\n+impl Trait for () {\n+    #[inline] //~ ERROR attribute should be applied to function or closure\n+    const X: u32 = 0;\n+\n+    #[inline] //~ ERROR attribute should be applied to function or closure\n+    type T = Self;\n+\n+    #[inline] //~ ERROR attribute should be applied to function or closure\n+    type U = impl Trait; //~ ERROR could not find defining uses\n }\n \n extern {"}, {"sha": "f67c7a6018ce4b0f49b22d71904c744c274a08ad", "filename": "src/test/ui/lint/inline-trait-and-foreign-items.stderr", "status": "modified", "additions": 35, "deletions": 5, "changes": 40, "blob_url": "https://github.com/rust-lang/rust/blob/8042206657314dc5470fca8ce6ad82424034f40c/src%2Ftest%2Fui%2Flint%2Finline-trait-and-foreign-items.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/8042206657314dc5470fca8ce6ad82424034f40c/src%2Ftest%2Fui%2Flint%2Finline-trait-and-foreign-items.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Finline-trait-and-foreign-items.stderr?ref=8042206657314dc5470fca8ce6ad82424034f40c", "patch": "@@ -1,35 +1,65 @@\n error[E0518]: attribute should be applied to function or closure\n-  --> $DIR/inline-trait-and-foreign-items.rs:12:5\n+  --> $DIR/inline-trait-and-foreign-items.rs:26:5\n    |\n LL |     #[inline]\n    |     ^^^^^^^^^\n LL |     static X: u32;\n    |     -------------- not a function or closure\n \n error[E0518]: attribute should be applied to function or closure\n-  --> $DIR/inline-trait-and-foreign-items.rs:15:5\n+  --> $DIR/inline-trait-and-foreign-items.rs:29:5\n    |\n LL |     #[inline]\n    |     ^^^^^^^^^\n LL |     type T;\n    |     ------- not a function or closure\n \n error[E0518]: attribute should be applied to function or closure\n-  --> $DIR/inline-trait-and-foreign-items.rs:4:5\n+  --> $DIR/inline-trait-and-foreign-items.rs:5:5\n    |\n LL |     #[inline]\n    |     ^^^^^^^^^\n LL |     const X: u32;\n    |     ------------- not a function or closure\n \n error[E0518]: attribute should be applied to function or closure\n-  --> $DIR/inline-trait-and-foreign-items.rs:7:5\n+  --> $DIR/inline-trait-and-foreign-items.rs:8:5\n    |\n LL |     #[inline]\n    |     ^^^^^^^^^\n LL |     type T;\n    |     ------- not a function or closure\n \n-error: aborting due to 4 previous errors\n+error[E0518]: attribute should be applied to function or closure\n+  --> $DIR/inline-trait-and-foreign-items.rs:15:5\n+   |\n+LL |     #[inline]\n+   |     ^^^^^^^^^\n+LL |     const X: u32 = 0;\n+   |     ----------------- not a function or closure\n+\n+error[E0518]: attribute should be applied to function or closure\n+  --> $DIR/inline-trait-and-foreign-items.rs:18:5\n+   |\n+LL |     #[inline]\n+   |     ^^^^^^^^^\n+LL |     type T = Self;\n+   |     -------------- not a function or closure\n+\n+error[E0518]: attribute should be applied to function or closure\n+  --> $DIR/inline-trait-and-foreign-items.rs:21:5\n+   |\n+LL |     #[inline]\n+   |     ^^^^^^^^^\n+LL |     type U = impl Trait;\n+   |     -------------------- not a function or closure\n+\n+error: could not find defining uses\n+  --> $DIR/inline-trait-and-foreign-items.rs:22:5\n+   |\n+LL |     type U = impl Trait;\n+   |     ^^^^^^^^^^^^^^^^^^^^\n+\n+error: aborting due to 8 previous errors\n \n For more information about this error, try `rustc --explain E0518`."}]}