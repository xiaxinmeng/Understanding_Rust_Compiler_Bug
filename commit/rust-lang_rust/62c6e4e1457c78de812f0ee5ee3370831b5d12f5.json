{"sha": "62c6e4e1457c78de812f0ee5ee3370831b5d12f5", "node_id": "MDY6Q29tbWl0NzI0NzEyOjYyYzZlNGUxNDU3Yzc4ZGU4MTJmMGVlNWVlMzM3MDgzMWI1ZDEyZjU=", "commit": {"author": {"name": "Scott McMurray", "email": "scottmcm@users.noreply.github.com", "date": "2018-08-25T06:13:31Z"}, "committer": {"name": "Scott McMurray", "email": "scottmcm@users.noreply.github.com", "date": "2018-09-20T05:31:30Z"}, "message": "Add an is_marker flag to TraitDef", "tree": {"sha": "d2a4903df2e1c879eea97544b6e58f41766158b5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d2a4903df2e1c879eea97544b6e58f41766158b5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/62c6e4e1457c78de812f0ee5ee3370831b5d12f5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/62c6e4e1457c78de812f0ee5ee3370831b5d12f5", "html_url": "https://github.com/rust-lang/rust/commit/62c6e4e1457c78de812f0ee5ee3370831b5d12f5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/62c6e4e1457c78de812f0ee5ee3370831b5d12f5/comments", "author": {"login": "scottmcm", "id": 18526288, "node_id": "MDQ6VXNlcjE4NTI2Mjg4", "avatar_url": "https://avatars.githubusercontent.com/u/18526288?v=4", "gravatar_id": "", "url": "https://api.github.com/users/scottmcm", "html_url": "https://github.com/scottmcm", "followers_url": "https://api.github.com/users/scottmcm/followers", "following_url": "https://api.github.com/users/scottmcm/following{/other_user}", "gists_url": "https://api.github.com/users/scottmcm/gists{/gist_id}", "starred_url": "https://api.github.com/users/scottmcm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/scottmcm/subscriptions", "organizations_url": "https://api.github.com/users/scottmcm/orgs", "repos_url": "https://api.github.com/users/scottmcm/repos", "events_url": "https://api.github.com/users/scottmcm/events{/privacy}", "received_events_url": "https://api.github.com/users/scottmcm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "scottmcm", "id": 18526288, "node_id": "MDQ6VXNlcjE4NTI2Mjg4", "avatar_url": "https://avatars.githubusercontent.com/u/18526288?v=4", "gravatar_id": "", "url": "https://api.github.com/users/scottmcm", "html_url": "https://github.com/scottmcm", "followers_url": "https://api.github.com/users/scottmcm/followers", "following_url": "https://api.github.com/users/scottmcm/following{/other_user}", "gists_url": "https://api.github.com/users/scottmcm/gists{/gist_id}", "starred_url": "https://api.github.com/users/scottmcm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/scottmcm/subscriptions", "organizations_url": "https://api.github.com/users/scottmcm/orgs", "repos_url": "https://api.github.com/users/scottmcm/repos", "events_url": "https://api.github.com/users/scottmcm/events{/privacy}", "received_events_url": "https://api.github.com/users/scottmcm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ed45f9cbf48d67ea4ca36d71b7c28c4768fb36de", "url": "https://api.github.com/repos/rust-lang/rust/commits/ed45f9cbf48d67ea4ca36d71b7c28c4768fb36de", "html_url": "https://github.com/rust-lang/rust/commit/ed45f9cbf48d67ea4ca36d71b7c28c4768fb36de"}], "stats": {"total": 18, "additions": 16, "deletions": 2}, "files": [{"sha": "78caa45187cc62f6d6c176b593fe9de53d7b0235", "filename": "src/librustc/ich/impls_ty.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/62c6e4e1457c78de812f0ee5ee3370831b5d12f5/src%2Flibrustc%2Fich%2Fimpls_ty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/62c6e4e1457c78de812f0ee5ee3370831b5d12f5/src%2Flibrustc%2Fich%2Fimpls_ty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fich%2Fimpls_ty.rs?ref=62c6e4e1457c78de812f0ee5ee3370831b5d12f5", "patch": "@@ -1033,6 +1033,7 @@ impl_stable_hash_for!(struct ty::TraitDef {\n     unsafety,\n     paren_sugar,\n     has_auto_impl,\n+    is_marker,\n     def_path_hash,\n });\n "}, {"sha": "7c75215fb8808622f20c3a5ff62efba5fb0db042", "filename": "src/librustc/ty/trait_def.rs", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/62c6e4e1457c78de812f0ee5ee3370831b5d12f5/src%2Flibrustc%2Fty%2Ftrait_def.rs", "raw_url": "https://github.com/rust-lang/rust/raw/62c6e4e1457c78de812f0ee5ee3370831b5d12f5/src%2Flibrustc%2Fty%2Ftrait_def.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Ftrait_def.rs?ref=62c6e4e1457c78de812f0ee5ee3370831b5d12f5", "patch": "@@ -36,6 +36,11 @@ pub struct TraitDef {\n \n     pub has_auto_impl: bool,\n \n+    /// If `true`, then this trait has the `#[marker]` attribute, indicating\n+    /// that all its associated items have defaults that cannot be overridden,\n+    /// and thus `impl`s of it are allowed to overlap.\n+    pub is_marker: bool,\n+\n     /// The ICH of this trait's DefPath, cached here so it doesn't have to be\n     /// recomputed all the time.\n     pub def_path_hash: DefPathHash,\n@@ -53,13 +58,15 @@ impl<'a, 'gcx, 'tcx> TraitDef {\n                unsafety: hir::Unsafety,\n                paren_sugar: bool,\n                has_auto_impl: bool,\n+               is_marker: bool,\n                def_path_hash: DefPathHash)\n                -> TraitDef {\n         TraitDef {\n             def_id,\n-            paren_sugar,\n             unsafety,\n+            paren_sugar,\n             has_auto_impl,\n+            is_marker,\n             def_path_hash,\n         }\n     }"}, {"sha": "e0f435f5ea5c99549da40889187422e973d47d63", "filename": "src/librustc_metadata/decoder.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/62c6e4e1457c78de812f0ee5ee3370831b5d12f5/src%2Flibrustc_metadata%2Fdecoder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/62c6e4e1457c78de812f0ee5ee3370831b5d12f5/src%2Flibrustc_metadata%2Fdecoder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_metadata%2Fdecoder.rs?ref=62c6e4e1457c78de812f0ee5ee3370831b5d12f5", "patch": "@@ -539,6 +539,7 @@ impl<'a, 'tcx> CrateMetadata {\n                           data.unsafety,\n                           data.paren_sugar,\n                           data.has_auto_impl,\n+                          data.is_marker,\n                           self.def_path_table.def_path_hash(item_id))\n     }\n "}, {"sha": "c36ae02ab54e0a5112d24527c9183fd611057db7", "filename": "src/librustc_metadata/encoder.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/62c6e4e1457c78de812f0ee5ee3370831b5d12f5/src%2Flibrustc_metadata%2Fencoder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/62c6e4e1457c78de812f0ee5ee3370831b5d12f5/src%2Flibrustc_metadata%2Fencoder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_metadata%2Fencoder.rs?ref=62c6e4e1457c78de812f0ee5ee3370831b5d12f5", "patch": "@@ -1152,6 +1152,7 @@ impl<'a, 'b: 'a, 'tcx: 'b> IsolatedEncoder<'a, 'b, 'tcx> {\n                     unsafety: trait_def.unsafety,\n                     paren_sugar: trait_def.paren_sugar,\n                     has_auto_impl: tcx.trait_is_auto(def_id),\n+                    is_marker: trait_def.is_marker,\n                     super_predicates: self.lazy(&tcx.super_predicates_of(def_id)),\n                 };\n "}, {"sha": "da2a8ae714b5a6f32745ee6a632d7ee8ac272b00", "filename": "src/librustc_metadata/schema.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/62c6e4e1457c78de812f0ee5ee3370831b5d12f5/src%2Flibrustc_metadata%2Fschema.rs", "raw_url": "https://github.com/rust-lang/rust/raw/62c6e4e1457c78de812f0ee5ee3370831b5d12f5/src%2Flibrustc_metadata%2Fschema.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_metadata%2Fschema.rs?ref=62c6e4e1457c78de812f0ee5ee3370831b5d12f5", "patch": "@@ -472,13 +472,15 @@ pub struct TraitData<'tcx> {\n     pub unsafety: hir::Unsafety,\n     pub paren_sugar: bool,\n     pub has_auto_impl: bool,\n+    pub is_marker: bool,\n     pub super_predicates: Lazy<ty::GenericPredicates<'tcx>>,\n }\n \n impl_stable_hash_for!(struct TraitData<'tcx> {\n     unsafety,\n     paren_sugar,\n     has_auto_impl,\n+    is_marker,\n     super_predicates\n });\n "}, {"sha": "5892296102c9573a72ac3a51598e47843bcfc1e6", "filename": "src/librustc_typeck/collect.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/62c6e4e1457c78de812f0ee5ee3370831b5d12f5/src%2Flibrustc_typeck%2Fcollect.rs", "raw_url": "https://github.com/rust-lang/rust/raw/62c6e4e1457c78de812f0ee5ee3370831b5d12f5/src%2Flibrustc_typeck%2Fcollect.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcollect.rs?ref=62c6e4e1457c78de812f0ee5ee3370831b5d12f5", "patch": "@@ -735,8 +735,10 @@ fn trait_def<'a, 'tcx>(tcx: TyCtxt<'a, 'tcx, 'tcx>, def_id: DefId) -> &'tcx ty::\n         err.emit();\n     }\n \n+    let is_marker = false; // FIXME (scottmcm)\n+\n     let def_path_hash = tcx.def_path_hash(def_id);\n-    let def = ty::TraitDef::new(def_id, unsafety, paren_sugar, is_auto, def_path_hash);\n+    let def = ty::TraitDef::new(def_id, unsafety, paren_sugar, is_auto, is_marker, def_path_hash);\n     tcx.alloc_trait_def(def)\n }\n "}]}