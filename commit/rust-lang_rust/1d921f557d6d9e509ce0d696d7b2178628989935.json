{"sha": "1d921f557d6d9e509ce0d696d7b2178628989935", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFkOTIxZjU1N2Q2ZDllNTA5Y2UwZDY5NmQ3YjIxNzg2Mjg5ODk5MzU=", "commit": {"author": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2015-02-03T23:36:04Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2015-02-04T04:11:20Z"}, "message": "rollup merge of #21897: dotdash/rposition\n\nThe extra check caused by the expect() call can, in general, not be\noptimized away, because the length of the iterator is unknown at compile\ntime, causing a noticable slow-down. Since the check only triggers if\nthe element isn't actually found in the iterator, i.e. it isn't\nguaranteed to trigger for ill-behaved ExactSizeIterators, it seems\nreasonable to switch to an implementation that doesn't need the check\nand just always returns None if the value isn't found.\n\nBenchmark:\n````rust\nlet v: Vec<u8> = (0..1024*65).map(|_| 0).collect();\nb.iter(|| {\n    v.as_slice().iter().rposition(|&c| c == 1)\n});\n````\n\nBefore:\n````\ntest rposition  ... bench:     49939 ns/iter (+/- 23)\n````\n\nAfter:\n````\ntest rposition  ... bench:     33306 ns/iter (+/- 68)\n````", "tree": {"sha": "eebe80ab3b8de14a572c83612362126e444b10ee", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/eebe80ab3b8de14a572c83612362126e444b10ee"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1d921f557d6d9e509ce0d696d7b2178628989935", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1d921f557d6d9e509ce0d696d7b2178628989935", "html_url": "https://github.com/rust-lang/rust/commit/1d921f557d6d9e509ce0d696d7b2178628989935", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1d921f557d6d9e509ce0d696d7b2178628989935/comments", "author": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "61b2f3a4f0a27180a0cdc3b3343ac63cf86ff8cc", "url": "https://api.github.com/repos/rust-lang/rust/commits/61b2f3a4f0a27180a0cdc3b3343ac63cf86ff8cc", "html_url": "https://github.com/rust-lang/rust/commit/61b2f3a4f0a27180a0cdc3b3343ac63cf86ff8cc"}, {"sha": "9a17f62947d0c079f1c877de4fe1dab5b2c500d9", "url": "https://api.github.com/repos/rust-lang/rust/commits/9a17f62947d0c079f1c877de4fe1dab5b2c500d9", "html_url": "https://github.com/rust-lang/rust/commit/9a17f62947d0c079f1c877de4fe1dab5b2c500d9"}], "stats": {"total": 7, "additions": 4, "deletions": 3}, "files": [{"sha": "c52bca0f4461c8e8e191ae7bb6956c52974f5af9", "filename": "src/libcore/iter.rs", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/1d921f557d6d9e509ce0d696d7b2178628989935/src%2Flibcore%2Fiter.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1d921f557d6d9e509ce0d696d7b2178628989935/src%2Flibcore%2Fiter.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fiter.rs?ref=1d921f557d6d9e509ce0d696d7b2178628989935", "patch": "@@ -724,11 +724,12 @@ pub trait IteratorExt: Iterator + Sized {\n         P: FnMut(Self::Item) -> bool,\n         Self: ExactSizeIterator + DoubleEndedIterator\n     {\n-        let len = self.len();\n-        for i in (0..len).rev() {\n-            if predicate(self.next_back().expect(\"rposition: incorrect ExactSizeIterator\")) {\n+        let mut i = self.len() - 1;\n+        while let Some(v) = self.next_back() {\n+            if predicate(v) {\n                 return Some(i);\n             }\n+            i -= 1;\n         }\n         None\n     }"}]}