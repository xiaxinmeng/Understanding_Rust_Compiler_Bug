{"sha": "e00e6554ddc13be86733dc8a37a0a229931f378a", "node_id": "MDY6Q29tbWl0NzI0NzEyOmUwMGU2NTU0ZGRjMTNiZTg2NzMzZGM4YTM3YTBhMjI5OTMxZjM3OGE=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2019-11-25T04:51:42Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-11-25T04:51:42Z"}, "message": "Merge #2362\n\n2362: Expand compile_error! r=edwin0cheng a=kjeremy\n\nDoes not validate that the input is a string literal. I thought that I could `match_ast!` against the `macro_args` but that did not work. Even if it had I am not sure which error would be appropriate.\n\nCo-authored-by: Jeremy Kolb <kjeremy@gmail.com>", "tree": {"sha": "22947d2eb6fff1fa48488766c02e19fe752605ef", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/22947d2eb6fff1fa48488766c02e19fe752605ef"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e00e6554ddc13be86733dc8a37a0a229931f378a", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJd213eCRBK7hj4Ov3rIwAAdHIIAELOByEO4VYguyC+rKtDqxyT\njC8NLP/mJkp2Dc15Ph/RrohMI+ePBRW3PWc/KfUzmX+eOAUcwdkAplGCKPgPEmEI\ni/Z+WbAcXMjPfa7Xaejh7WnZNqL8JGRdAZrZ0qFgaRLFQqNbKWWi7oGsVgi4by4d\nyRtVhak7PXm2st6SDs1R+on7EDQxzuMch1ZZ25daJNxtD6cBO+Gp6D38/lBRqinp\nWt80Avx7gDk6zF/Rcutug60MA6+LV6eQL0VCEbjGlgMzh6ejFh9nZDb8qIFoCpQZ\nPML2fWBmcN98LPNVftOSm/LTlIOrdoYYKLOb8gIoQ2b1UMaareIsqiT6xPAF8Dc=\n=gob2\n-----END PGP SIGNATURE-----\n", "payload": "tree 22947d2eb6fff1fa48488766c02e19fe752605ef\nparent a888441c4745c3d72bee737c69873dfc9f52f4bb\nparent 67d3600f59684b4fe3eabe7036fe7e7ce4db3257\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1574657502 +0000\ncommitter GitHub <noreply@github.com> 1574657502 +0000\n\nMerge #2362\n\n2362: Expand compile_error! r=edwin0cheng a=kjeremy\n\nDoes not validate that the input is a string literal. I thought that I could `match_ast!` against the `macro_args` but that did not work. Even if it had I am not sure which error would be appropriate.\n\nCo-authored-by: Jeremy Kolb <kjeremy@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e00e6554ddc13be86733dc8a37a0a229931f378a", "html_url": "https://github.com/rust-lang/rust/commit/e00e6554ddc13be86733dc8a37a0a229931f378a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e00e6554ddc13be86733dc8a37a0a229931f378a/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a888441c4745c3d72bee737c69873dfc9f52f4bb", "url": "https://api.github.com/repos/rust-lang/rust/commits/a888441c4745c3d72bee737c69873dfc9f52f4bb", "html_url": "https://github.com/rust-lang/rust/commit/a888441c4745c3d72bee737c69873dfc9f52f4bb"}, {"sha": "67d3600f59684b4fe3eabe7036fe7e7ce4db3257", "url": "https://api.github.com/repos/rust-lang/rust/commits/67d3600f59684b4fe3eabe7036fe7e7ce4db3257", "html_url": "https://github.com/rust-lang/rust/commit/67d3600f59684b4fe3eabe7036fe7e7ce4db3257"}], "stats": {"total": 39, "additions": 39, "deletions": 0}, "files": [{"sha": "d370dfb34f46877ed55bb544347d1c6911bc413a", "filename": "crates/ra_hir_expand/src/builtin_macro.rs", "status": "modified", "additions": 38, "deletions": 0, "changes": 38, "blob_url": "https://github.com/rust-lang/rust/blob/e00e6554ddc13be86733dc8a37a0a229931f378a/crates%2Fra_hir_expand%2Fsrc%2Fbuiltin_macro.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e00e6554ddc13be86733dc8a37a0a229931f378a/crates%2Fra_hir_expand%2Fsrc%2Fbuiltin_macro.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_expand%2Fsrc%2Fbuiltin_macro.rs?ref=e00e6554ddc13be86733dc8a37a0a229931f378a", "patch": "@@ -46,6 +46,7 @@ macro_rules! register_builtin {\n \n register_builtin! {\n     (COLUMN_MACRO, Column) => column_expand,\n+    (COMPILE_ERROR_MACRO, CompileError) => compile_error_expand,\n     (FILE_MACRO, File) => file_expand,\n     (LINE_MACRO, Line) => line_expand,\n     (STRINGIFY_MACRO, Stringify) => stringify_expand\n@@ -183,6 +184,26 @@ fn file_expand(\n     Ok(expanded)\n }\n \n+fn compile_error_expand(\n+    _db: &dyn AstDatabase,\n+    _id: MacroCallId,\n+    tt: &tt::Subtree,\n+) -> Result<tt::Subtree, mbe::ExpandError> {\n+    if tt.count() == 1 {\n+        match &tt.token_trees[0] {\n+            tt::TokenTree::Leaf(tt::Leaf::Literal(it)) => {\n+                let s = it.text.as_str();\n+                if s.contains(r#\"\"\"#) {\n+                    return Ok(quote! { loop { #it }});\n+                }\n+            }\n+            _ => {}\n+        };\n+    }\n+\n+    Err(mbe::ExpandError::BindingError(\"Must be a string\".into()))\n+}\n+\n #[cfg(test)]\n mod tests {\n     use super::*;\n@@ -270,4 +291,21 @@ mod tests {\n \n         assert_eq!(expanded, \"\\\"\\\"\");\n     }\n+\n+    #[test]\n+    fn test_compile_error_expand() {\n+        let expanded = expand_builtin_macro(\n+            r#\"\n+        #[rustc_builtin_macro]\n+        macro_rules! compile_error {\n+            ($msg:expr) => ({ /* compiler built-in */ });\n+            ($msg:expr,) => ({ /* compiler built-in */ })\n+        }\n+        compile_error!(\"error!\");\n+\"#,\n+            BuiltinFnLikeExpander::CompileError,\n+        );\n+\n+        assert_eq!(expanded, r#\"loop{\"error!\"}\"#);\n+    }\n }"}, {"sha": "7824489d7f4cd40ae7761a6854539508c82e9b35", "filename": "crates/ra_hir_expand/src/name.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/e00e6554ddc13be86733dc8a37a0a229931f378a/crates%2Fra_hir_expand%2Fsrc%2Fname.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e00e6554ddc13be86733dc8a37a0a229931f378a/crates%2Fra_hir_expand%2Fsrc%2Fname.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_expand%2Fsrc%2Fname.rs?ref=e00e6554ddc13be86733dc8a37a0a229931f378a", "patch": "@@ -144,5 +144,6 @@ pub const BOX_TYPE: Name = Name::new_inline_ascii(3, b\"Box\");\n // Builtin Macros\n pub const FILE_MACRO: Name = Name::new_inline_ascii(4, b\"file\");\n pub const COLUMN_MACRO: Name = Name::new_inline_ascii(6, b\"column\");\n+pub const COMPILE_ERROR_MACRO: Name = Name::new_inline_ascii(13, b\"compile_error\");\n pub const LINE_MACRO: Name = Name::new_inline_ascii(4, b\"line\");\n pub const STRINGIFY_MACRO: Name = Name::new_inline_ascii(9, b\"stringify\");"}]}