{"sha": "c923f045ce84ac846a732e0428e8458d6a61725d", "node_id": "MDY6Q29tbWl0NzI0NzEyOmM5MjNmMDQ1Y2U4NGFjODQ2YTczMmUwNDI4ZTg0NThkNmE2MTcyNWQ=", "commit": {"author": {"name": "Eduard-Mihai Burtescu", "email": "edy.burt@gmail.com", "date": "2020-02-11T21:03:00Z"}, "committer": {"name": "Eduard-Mihai Burtescu", "email": "edy.burt@gmail.com", "date": "2020-03-23T00:36:35Z"}, "message": "rustc_codegen_llvm: don't generate Self type debuginfo for methods for -Cdebuginfo=1.", "tree": {"sha": "f1ecd2dff4e354c4d3acf08895b26c5958b3d1ef", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f1ecd2dff4e354c4d3acf08895b26c5958b3d1ef"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c923f045ce84ac846a732e0428e8458d6a61725d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c923f045ce84ac846a732e0428e8458d6a61725d", "html_url": "https://github.com/rust-lang/rust/commit/c923f045ce84ac846a732e0428e8458d6a61725d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c923f045ce84ac846a732e0428e8458d6a61725d/comments", "author": {"login": "eddyb", "id": 77424, "node_id": "MDQ6VXNlcjc3NDI0", "avatar_url": "https://avatars.githubusercontent.com/u/77424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eddyb", "html_url": "https://github.com/eddyb", "followers_url": "https://api.github.com/users/eddyb/followers", "following_url": "https://api.github.com/users/eddyb/following{/other_user}", "gists_url": "https://api.github.com/users/eddyb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eddyb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eddyb/subscriptions", "organizations_url": "https://api.github.com/users/eddyb/orgs", "repos_url": "https://api.github.com/users/eddyb/repos", "events_url": "https://api.github.com/users/eddyb/events{/privacy}", "received_events_url": "https://api.github.com/users/eddyb/received_events", "type": "User", "site_admin": false}, "committer": {"login": "eddyb", "id": 77424, "node_id": "MDQ6VXNlcjc3NDI0", "avatar_url": "https://avatars.githubusercontent.com/u/77424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eddyb", "html_url": "https://github.com/eddyb", "followers_url": "https://api.github.com/users/eddyb/followers", "following_url": "https://api.github.com/users/eddyb/following{/other_user}", "gists_url": "https://api.github.com/users/eddyb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eddyb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eddyb/subscriptions", "organizations_url": "https://api.github.com/users/eddyb/orgs", "repos_url": "https://api.github.com/users/eddyb/repos", "events_url": "https://api.github.com/users/eddyb/events{/privacy}", "received_events_url": "https://api.github.com/users/eddyb/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "70239484001f91fcf847a0df6aff79d94991952a", "url": "https://api.github.com/repos/rust-lang/rust/commits/70239484001f91fcf847a0df6aff79d94991952a", "html_url": "https://github.com/rust-lang/rust/commit/70239484001f91fcf847a0df6aff79d94991952a"}], "stats": {"total": 7, "additions": 6, "deletions": 1}, "files": [{"sha": "4b8140263f1f25ade3797b44301f5ece1b3d92d5", "filename": "src/librustc_codegen_llvm/debuginfo/mod.rs", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/c923f045ce84ac846a732e0428e8458d6a61725d/src%2Flibrustc_codegen_llvm%2Fdebuginfo%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c923f045ce84ac846a732e0428e8458d6a61725d/src%2Flibrustc_codegen_llvm%2Fdebuginfo%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Fdebuginfo%2Fmod.rs?ref=c923f045ce84ac846a732e0428e8458d6a61725d", "patch": "@@ -475,7 +475,12 @@ impl DebugInfoMethods<'tcx> for CodegenCx<'ll, 'tcx> {\n                     // so avoid methods on other types (e.g., `<*mut T>::null`).\n                     match impl_self_ty.kind {\n                         ty::Adt(def, ..) if !def.is_box() => {\n-                            Some(type_metadata(cx, impl_self_ty, rustc_span::DUMMY_SP))\n+                            // Again, only create type information if full debuginfo is enabled\n+                            if cx.sess().opts.debuginfo == DebugInfo::Full {\n+                                Some(type_metadata(cx, impl_self_ty, rustc_span::DUMMY_SP))\n+                            } else {\n+                                Some(namespace::item_namespace(cx, def.did))\n+                            }\n                         }\n                         _ => None,\n                     }"}]}