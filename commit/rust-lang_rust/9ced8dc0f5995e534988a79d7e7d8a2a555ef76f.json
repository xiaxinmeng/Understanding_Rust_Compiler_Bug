{"sha": "9ced8dc0f5995e534988a79d7e7d8a2a555ef76f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjljZWQ4ZGMwZjU5OTVlNTM0OTg4YTc5ZDdlN2Q4YTJhNTU1ZWY3NmY=", "commit": {"author": {"name": "Tyler Mandry", "email": "tmandry@gmail.com", "date": "2020-12-09T21:38:33Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-12-09T21:38:33Z"}, "message": "Rollup merge of #79826 - LingMan:match_if, r=lcnr\n\nSimplify visit_{foreign,trait}_item\n\nUsing an `if` seems like a better semantic fit and saves a few lines.\n\nNoticed while looking at https://github.com/rust-lang/rust/pull/79752, but that's already merged.\nr? `@lcnr,` cc `@cjgillot`\n\n`@rustbot` modify labels +C-cleanup +T-compiler", "tree": {"sha": "9da7e97e0feb3ae901fdacea6dbe865fa9a40452", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9da7e97e0feb3ae901fdacea6dbe865fa9a40452"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9ced8dc0f5995e534988a79d7e7d8a2a555ef76f", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJf0UPZCRBK7hj4Ov3rIwAAdHIIAFs74jJdL6SF17ZCgBZ3LEdZ\ntCKtdYOXC/zE2LYcGiMMxSnoK7iLFyP2hPQ96cFJbXi9U+s1dIC2AavIhS6JIuHF\n5CnpAu7kP/YFlgnYTyjxACQKMOUzXtLkULG4sxovHpu0nM1OwXmynsVnqE+Qp/7X\n/DjUSpkYUaJ5/4mUtpPg19dQxLR3FbDD3J8koPwnvWEnMt5eXYHck/tPBq6Y5Asl\nfu+mpEcmYcI5YKfaLzrq4GC6t5LmFTtVGtR212gkdrRyPkWRsNbGEH6Gb95eVCwv\nG/ZFLd5osIk3L60M+b+MRxiG2Srxu4i/I0OIb93cMwGg/53ZFO72AmkimJo3lAo=\n=cgI9\n-----END PGP SIGNATURE-----\n", "payload": "tree 9da7e97e0feb3ae901fdacea6dbe865fa9a40452\nparent 666d1a8951093a5cc6e3e83bdc2cff9d7cd83045\nparent 7654b12112664f4e21e519c0c0d7d0aff1f70221\nauthor Tyler Mandry <tmandry@gmail.com> 1607549913 -0800\ncommitter GitHub <noreply@github.com> 1607549913 -0800\n\nRollup merge of #79826 - LingMan:match_if, r=lcnr\n\nSimplify visit_{foreign,trait}_item\n\nUsing an `if` seems like a better semantic fit and saves a few lines.\n\nNoticed while looking at https://github.com/rust-lang/rust/pull/79752, but that's already merged.\nr? `@lcnr,` cc `@cjgillot`\n\n`@rustbot` modify labels +C-cleanup +T-compiler\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9ced8dc0f5995e534988a79d7e7d8a2a555ef76f", "html_url": "https://github.com/rust-lang/rust/commit/9ced8dc0f5995e534988a79d7e7d8a2a555ef76f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9ced8dc0f5995e534988a79d7e7d8a2a555ef76f/comments", "author": {"login": "tmandry", "id": 2280544, "node_id": "MDQ6VXNlcjIyODA1NDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/2280544?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tmandry", "html_url": "https://github.com/tmandry", "followers_url": "https://api.github.com/users/tmandry/followers", "following_url": "https://api.github.com/users/tmandry/following{/other_user}", "gists_url": "https://api.github.com/users/tmandry/gists{/gist_id}", "starred_url": "https://api.github.com/users/tmandry/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tmandry/subscriptions", "organizations_url": "https://api.github.com/users/tmandry/orgs", "repos_url": "https://api.github.com/users/tmandry/repos", "events_url": "https://api.github.com/users/tmandry/events{/privacy}", "received_events_url": "https://api.github.com/users/tmandry/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "666d1a8951093a5cc6e3e83bdc2cff9d7cd83045", "url": "https://api.github.com/repos/rust-lang/rust/commits/666d1a8951093a5cc6e3e83bdc2cff9d7cd83045", "html_url": "https://github.com/rust-lang/rust/commit/666d1a8951093a5cc6e3e83bdc2cff9d7cd83045"}, {"sha": "7654b12112664f4e21e519c0c0d7d0aff1f70221", "url": "https://api.github.com/repos/rust-lang/rust/commits/7654b12112664f4e21e519c0c0d7d0aff1f70221", "html_url": "https://github.com/rust-lang/rust/commit/7654b12112664f4e21e519c0c0d7d0aff1f70221"}], "stats": {"total": 30, "additions": 10, "deletions": 20}, "files": [{"sha": "00152878d6d9bef999b1cb685d0d20fa44c85c2d", "filename": "compiler/rustc_passes/src/dead.rs", "status": "modified", "additions": 10, "deletions": 20, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/9ced8dc0f5995e534988a79d7e7d8a2a555ef76f/compiler%2Frustc_passes%2Fsrc%2Fdead.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9ced8dc0f5995e534988a79d7e7d8a2a555ef76f/compiler%2Frustc_passes%2Fsrc%2Fdead.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_passes%2Fsrc%2Fdead.rs?ref=9ced8dc0f5995e534988a79d7e7d8a2a555ef76f", "patch": "@@ -423,15 +423,11 @@ impl<'v, 'k, 'tcx> ItemLikeVisitor<'v> for LifeSeeder<'k, 'tcx> {\n     }\n \n     fn visit_trait_item(&mut self, trait_item: &hir::TraitItem<'_>) {\n-        match trait_item.kind {\n-            hir::TraitItemKind::Const(_, Some(_))\n-            | hir::TraitItemKind::Fn(_, hir::TraitFn::Provided(_)) => {\n-                if has_allow_dead_code_or_lang_attr(self.tcx, trait_item.hir_id, &trait_item.attrs)\n-                {\n-                    self.worklist.push(trait_item.hir_id);\n-                }\n-            }\n-            _ => {}\n+        use hir::TraitItemKind::{Const, Fn};\n+        if matches!(trait_item.kind, Const(_, Some(_)) | Fn(_, hir::TraitFn::Provided(_)))\n+            && has_allow_dead_code_or_lang_attr(self.tcx, trait_item.hir_id, &trait_item.attrs)\n+        {\n+            self.worklist.push(trait_item.hir_id);\n         }\n     }\n \n@@ -440,17 +436,11 @@ impl<'v, 'k, 'tcx> ItemLikeVisitor<'v> for LifeSeeder<'k, 'tcx> {\n     }\n \n     fn visit_foreign_item(&mut self, foreign_item: &hir::ForeignItem<'_>) {\n-        match foreign_item.kind {\n-            hir::ForeignItemKind::Static(..) | hir::ForeignItemKind::Fn(..) => {\n-                if has_allow_dead_code_or_lang_attr(\n-                    self.tcx,\n-                    foreign_item.hir_id,\n-                    &foreign_item.attrs,\n-                ) {\n-                    self.worklist.push(foreign_item.hir_id);\n-                }\n-            }\n-            _ => {}\n+        use hir::ForeignItemKind::{Fn, Static};\n+        if matches!(foreign_item.kind, Static(..) | Fn(..))\n+            && has_allow_dead_code_or_lang_attr(self.tcx, foreign_item.hir_id, &foreign_item.attrs)\n+        {\n+            self.worklist.push(foreign_item.hir_id);\n         }\n     }\n }"}]}