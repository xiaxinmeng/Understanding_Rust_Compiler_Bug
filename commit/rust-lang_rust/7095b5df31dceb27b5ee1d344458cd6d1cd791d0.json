{"sha": "7095b5df31dceb27b5ee1d344458cd6d1cd791d0", "node_id": "MDY6Q29tbWl0NzI0NzEyOjcwOTViNWRmMzFkY2ViMjdiNWVlMWQzNDQ0NThjZDZkMWNkNzkxZDA=", "commit": {"author": {"name": "mcarton", "email": "cartonmartin+git@gmail.com", "date": "2016-03-30T21:07:21Z"}, "committer": {"name": "mcarton", "email": "cartonmartin+git@gmail.com", "date": "2016-03-30T21:12:24Z"}, "message": "Fix FP in `REDUNDANT_CLOSURE` with divergent functions", "tree": {"sha": "174eb73c09f8d4e1a8a695a5e01046a3a05c9ece", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/174eb73c09f8d4e1a8a695a5e01046a3a05c9ece"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7095b5df31dceb27b5ee1d344458cd6d1cd791d0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7095b5df31dceb27b5ee1d344458cd6d1cd791d0", "html_url": "https://github.com/rust-lang/rust/commit/7095b5df31dceb27b5ee1d344458cd6d1cd791d0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7095b5df31dceb27b5ee1d344458cd6d1cd791d0/comments", "author": {"login": "mcarton", "id": 3751788, "node_id": "MDQ6VXNlcjM3NTE3ODg=", "avatar_url": "https://avatars.githubusercontent.com/u/3751788?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mcarton", "html_url": "https://github.com/mcarton", "followers_url": "https://api.github.com/users/mcarton/followers", "following_url": "https://api.github.com/users/mcarton/following{/other_user}", "gists_url": "https://api.github.com/users/mcarton/gists{/gist_id}", "starred_url": "https://api.github.com/users/mcarton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mcarton/subscriptions", "organizations_url": "https://api.github.com/users/mcarton/orgs", "repos_url": "https://api.github.com/users/mcarton/repos", "events_url": "https://api.github.com/users/mcarton/events{/privacy}", "received_events_url": "https://api.github.com/users/mcarton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "mcarton", "id": 3751788, "node_id": "MDQ6VXNlcjM3NTE3ODg=", "avatar_url": "https://avatars.githubusercontent.com/u/3751788?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mcarton", "html_url": "https://github.com/mcarton", "followers_url": "https://api.github.com/users/mcarton/followers", "following_url": "https://api.github.com/users/mcarton/following{/other_user}", "gists_url": "https://api.github.com/users/mcarton/gists{/gist_id}", "starred_url": "https://api.github.com/users/mcarton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mcarton/subscriptions", "organizations_url": "https://api.github.com/users/mcarton/orgs", "repos_url": "https://api.github.com/users/mcarton/repos", "events_url": "https://api.github.com/users/mcarton/events{/privacy}", "received_events_url": "https://api.github.com/users/mcarton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f98e3ecb374e3ba6309bbaaca1d5278d318d39d3", "url": "https://api.github.com/repos/rust-lang/rust/commits/f98e3ecb374e3ba6309bbaaca1d5278d318d39d3", "html_url": "https://github.com/rust-lang/rust/commit/f98e3ecb374e3ba6309bbaaca1d5278d318d39d3"}], "stats": {"total": 19, "additions": 18, "deletions": 1}, "files": [{"sha": "c080968ef84fefcf326765f69ac9ce3bdab1adc1", "filename": "src/eta_reduction.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/7095b5df31dceb27b5ee1d344458cd6d1cd791d0/src%2Feta_reduction.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7095b5df31dceb27b5ee1d344458cd6d1cd791d0/src%2Feta_reduction.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Feta_reduction.rs?ref=7095b5df31dceb27b5ee1d344458cd6d1cd791d0", "patch": "@@ -61,7 +61,8 @@ fn check_closure(cx: &LateContext, expr: &Expr) {\n                 match fn_ty.sty {\n                     // Is it an unsafe function? They don't implement the closure traits\n                     ty::TyFnDef(_, _, fn_ty) | ty::TyFnPtr(fn_ty) => {\n-                        if fn_ty.unsafety == Unsafety::Unsafe {\n+                        if fn_ty.unsafety == Unsafety::Unsafe ||\n+                            fn_ty.sig.skip_binder().output == ty::FnOutput::FnDiverging {\n                             return;\n                         }\n                     }"}, {"sha": "a744489fa9c242319d31c8a1ca5e5d829b2a6209", "filename": "tests/compile-fail/eta.rs", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/7095b5df31dceb27b5ee1d344458cd6d1cd791d0/tests%2Fcompile-fail%2Feta.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7095b5df31dceb27b5ee1d344458cd6d1cd791d0/tests%2Fcompile-fail%2Feta.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail%2Feta.rs?ref=7095b5df31dceb27b5ee1d344458cd6d1cd791d0", "patch": "@@ -22,6 +22,14 @@ fn main() {\n         Some(1u8).map(|a| unsafe_fn(a)); // unsafe fn\n     }\n \n+    // See #815\n+    let e = Some(1u8).map(|a| divergent(a));\n+    let e = Some(1u8).map(|a| generic(a));\n+    //~^ ERROR redundant closure found\n+    //~| HELP remove closure as shown\n+    //~| SUGGESTION map(generic);\n+    let e = Some(1u8).map(generic);\n+\n     // See #515\n     let a: Option<Box<::std::ops::Deref<Target = [i32]>>> =\n         Some(vec![1i32, 2]).map(|v| -> Box<::std::ops::Deref<Target = [i32]>> { Box::new(v) });\n@@ -47,3 +55,11 @@ where F: Fn(&X, &X) -> bool {\n fn below(x: &u8, y: &u8) -> bool { x < y }\n \n unsafe fn unsafe_fn(_: u8) { }\n+\n+fn divergent(_: u8) -> ! {\n+    unimplemented!()\n+}\n+\n+fn generic<T>(_: T) -> u8 {\n+    0\n+}"}]}