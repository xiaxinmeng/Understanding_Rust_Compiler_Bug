{"sha": "935c88ce1c863b6bfa3e4a295e6999a5593c08e2", "node_id": "MDY6Q29tbWl0NzI0NzEyOjkzNWM4OGNlMWM4NjNiNmJmYTNlNGEyOTVlNjk5OWE1NTkzYzA4ZTI=", "commit": {"author": {"name": "nham", "email": "hamann.nick@gmail.com", "date": "2014-07-28T04:28:49Z"}, "committer": {"name": "nham", "email": "hamann.nick@gmail.com", "date": "2014-07-28T04:28:49Z"}, "message": "Implement PartialOrd for Bitv and BitvSet", "tree": {"sha": "5d61b606d5f419dfef51dcb05319e46a2ab766d5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5d61b606d5f419dfef51dcb05319e46a2ab766d5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/935c88ce1c863b6bfa3e4a295e6999a5593c08e2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/935c88ce1c863b6bfa3e4a295e6999a5593c08e2", "html_url": "https://github.com/rust-lang/rust/commit/935c88ce1c863b6bfa3e4a295e6999a5593c08e2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/935c88ce1c863b6bfa3e4a295e6999a5593c08e2/comments", "author": {"login": "nham", "id": 546409, "node_id": "MDQ6VXNlcjU0NjQwOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/546409?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nham", "html_url": "https://github.com/nham", "followers_url": "https://api.github.com/users/nham/followers", "following_url": "https://api.github.com/users/nham/following{/other_user}", "gists_url": "https://api.github.com/users/nham/gists{/gist_id}", "starred_url": "https://api.github.com/users/nham/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nham/subscriptions", "organizations_url": "https://api.github.com/users/nham/orgs", "repos_url": "https://api.github.com/users/nham/repos", "events_url": "https://api.github.com/users/nham/events{/privacy}", "received_events_url": "https://api.github.com/users/nham/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nham", "id": 546409, "node_id": "MDQ6VXNlcjU0NjQwOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/546409?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nham", "html_url": "https://github.com/nham", "followers_url": "https://api.github.com/users/nham/followers", "following_url": "https://api.github.com/users/nham/following{/other_user}", "gists_url": "https://api.github.com/users/nham/gists{/gist_id}", "starred_url": "https://api.github.com/users/nham/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nham/subscriptions", "organizations_url": "https://api.github.com/users/nham/orgs", "repos_url": "https://api.github.com/users/nham/repos", "events_url": "https://api.github.com/users/nham/events{/privacy}", "received_events_url": "https://api.github.com/users/nham/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "220f8f6dcb37fd4db4d489337890a4d900e50503", "url": "https://api.github.com/repos/rust-lang/rust/commits/220f8f6dcb37fd4db4d489337890a4d900e50503", "html_url": "https://github.com/rust-lang/rust/commit/220f8f6dcb37fd4db4d489337890a4d900e50503"}], "stats": {"total": 41, "additions": 40, "deletions": 1}, "files": [{"sha": "55caf807b4fd449b13831daa1ebede02df96ff10", "filename": "src/libcollections/bitv.rs", "status": "modified", "additions": 40, "deletions": 1, "changes": 41, "blob_url": "https://github.com/rust-lang/rust/blob/935c88ce1c863b6bfa3e4a295e6999a5593c08e2/src%2Flibcollections%2Fbitv.rs", "raw_url": "https://github.com/rust-lang/rust/raw/935c88ce1c863b6bfa3e4a295e6999a5593c08e2/src%2Flibcollections%2Fbitv.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcollections%2Fbitv.rs?ref=935c88ce1c863b6bfa3e4a295e6999a5593c08e2", "patch": "@@ -67,6 +67,7 @@ use core::cmp;\n use core::default::Default;\n use core::fmt;\n use core::iter::Take;\n+use core::iter;\n use core::ops::Index;\n use core::slice;\n use core::uint;\n@@ -830,6 +831,13 @@ impl Clone for Bitv {\n     }\n }\n \n+impl PartialOrd for Bitv {\n+    #[inline]\n+    fn partial_cmp(&self, other: &Bitv) -> Option<Ordering> {\n+        iter::order::partial_cmp(self.iter(), other.iter())\n+    }\n+}\n+\n impl fmt::Show for Bitv {\n     fn fmt(&self, fmt: &mut fmt::Formatter) -> fmt::Result {\n         for bit in self.iter() {\n@@ -955,7 +963,7 @@ impl<'a> RandomAccessIterator<bool> for Bits<'a> {\n /// assert!(bv.eq_vec([true, true, false, true,\n ///                    false, false, false, false]));\n /// ```\n-#[deriving(Clone, PartialEq, Eq)]\n+#[deriving(Clone, PartialEq, Eq, PartialOrd)]\n pub struct BitvSet(Bitv);\n \n impl Default for BitvSet {\n@@ -2189,6 +2197,37 @@ mod tests {\n         assert_eq!(a.capacity(), uint::BITS);\n     }\n \n+    #[test]\n+    fn test_bitv_lt() {\n+        let mut a = Bitv::with_capacity(5u, false);\n+        let mut b = Bitv::with_capacity(5u, false);\n+\n+        assert!(!(a < b) && !(b < a));\n+        b.set(2, true);\n+        assert!(a < b);\n+        a.set(3, true);\n+        assert!(a < b);\n+        a.set(2, true);\n+        assert!(!(a < b) && b < a);\n+        b.set(0, true);\n+        assert!(a < b);\n+    }\n+\n+    #[test]\n+    fn test_ord() {\n+        let mut a = Bitv::with_capacity(5u, false);\n+        let mut b = Bitv::with_capacity(5u, false);\n+\n+        assert!(a <= b && a >= b);\n+        a.set(1, true);\n+        assert!(a > b && a >= b);\n+        assert!(b < a && b <= a);\n+        b.set(1, true);\n+        b.set(2, true);\n+        assert!(b > a && b >= a);\n+        assert!(a < b && a <= b);\n+    }\n+\n     #[test]\n     fn test_bitv_clone() {\n         let mut a = BitvSet::new();"}]}