{"sha": "79b9eb53710020955ad900729ff9fb9440de1f54", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc5YjllYjUzNzEwMDIwOTU1YWQ5MDA3MjlmZjlmYjk0NDBkZTFmNTQ=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-04-21T14:47:49Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-04-21T14:47:49Z"}, "message": "Auto merge of #7072 - ebobrow:imports-ending-with-self, r=camsteffen\n\nadd unnecessary_self_imports lint\n\nfixes #6552\n\nchangelog: add `unnecessary_self_imports` lint", "tree": {"sha": "624a3ea87f77cc5045ea8a74f317dc648848113c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/624a3ea87f77cc5045ea8a74f317dc648848113c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/79b9eb53710020955ad900729ff9fb9440de1f54", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/79b9eb53710020955ad900729ff9fb9440de1f54", "html_url": "https://github.com/rust-lang/rust/commit/79b9eb53710020955ad900729ff9fb9440de1f54", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/79b9eb53710020955ad900729ff9fb9440de1f54/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bbc22e2ef3081b757d089737e5752b9e413d27ba", "url": "https://api.github.com/repos/rust-lang/rust/commits/bbc22e2ef3081b757d089737e5752b9e413d27ba", "html_url": "https://github.com/rust-lang/rust/commit/bbc22e2ef3081b757d089737e5752b9e413d27ba"}, {"sha": "224881b94df5215952c7a955acaefacb388c50c5", "url": "https://api.github.com/repos/rust-lang/rust/commits/224881b94df5215952c7a955acaefacb388c50c5", "html_url": "https://github.com/rust-lang/rust/commit/224881b94df5215952c7a955acaefacb388c50c5"}], "stats": {"total": 117, "additions": 116, "deletions": 1}, "files": [{"sha": "204d56e2a9854bd137520e1a0280b64624d5066a", "filename": "CHANGELOG.md", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/79b9eb53710020955ad900729ff9fb9440de1f54/CHANGELOG.md", "raw_url": "https://github.com/rust-lang/rust/raw/79b9eb53710020955ad900729ff9fb9440de1f54/CHANGELOG.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/CHANGELOG.md?ref=79b9eb53710020955ad900729ff9fb9440de1f54", "patch": "@@ -2522,6 +2522,7 @@ Released 2018-09-13\n [`unnecessary_lazy_evaluations`]: https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_lazy_evaluations\n [`unnecessary_mut_passed`]: https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_mut_passed\n [`unnecessary_operation`]: https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_operation\n+[`unnecessary_self_imports`]: https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_self_imports\n [`unnecessary_sort_by`]: https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_sort_by\n [`unnecessary_unwrap`]: https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_unwrap\n [`unnecessary_wraps`]: https://rust-lang.github.io/rust-clippy/master/index.html#unnecessary_wraps"}, {"sha": "c2014e02e7e19a25cd8aa14cc54140268c43aa70", "filename": "clippy_lints/src/lib.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/79b9eb53710020955ad900729ff9fb9440de1f54/clippy_lints%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/79b9eb53710020955ad900729ff9fb9440de1f54/clippy_lints%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flib.rs?ref=79b9eb53710020955ad900729ff9fb9440de1f54", "patch": "@@ -357,6 +357,7 @@ mod unicode;\n mod unit_return_expecting_ord;\n mod unit_types;\n mod unnamed_address;\n+mod unnecessary_self_imports;\n mod unnecessary_sort_by;\n mod unnecessary_wraps;\n mod unnested_or_patterns;\n@@ -968,6 +969,7 @@ pub fn register_plugins(store: &mut rustc_lint::LintStore, sess: &Session, conf:\n         unit_types::UNIT_CMP,\n         unnamed_address::FN_ADDRESS_COMPARISONS,\n         unnamed_address::VTABLE_ADDRESS_COMPARISONS,\n+        unnecessary_self_imports::UNNECESSARY_SELF_IMPORTS,\n         unnecessary_sort_by::UNNECESSARY_SORT_BY,\n         unnecessary_wraps::UNNECESSARY_WRAPS,\n         unnested_or_patterns::UNNESTED_OR_PATTERNS,\n@@ -1053,6 +1055,7 @@ pub fn register_plugins(store: &mut rustc_lint::LintStore, sess: &Session, conf:\n     store.register_late_pass(|| box default_numeric_fallback::DefaultNumericFallback);\n     store.register_late_pass(|| box inconsistent_struct_constructor::InconsistentStructConstructor);\n     store.register_late_pass(|| box non_octal_unix_permissions::NonOctalUnixPermissions);\n+    store.register_early_pass(|| box unnecessary_self_imports::UnnecessarySelfImports);\n \n     let msrv = conf.msrv.as_ref().and_then(|s| {\n         parse_msrv(s, None, None).or_else(|| {\n@@ -1326,6 +1329,7 @@ pub fn register_plugins(store: &mut rustc_lint::LintStore, sess: &Session, conf:\n         LintId::of(strings::STRING_TO_STRING),\n         LintId::of(strings::STR_TO_STRING),\n         LintId::of(types::RC_BUFFER),\n+        LintId::of(unnecessary_self_imports::UNNECESSARY_SELF_IMPORTS),\n         LintId::of(unwrap_in_result::UNWRAP_IN_RESULT),\n         LintId::of(verbose_file_reads::VERBOSE_FILE_READS),\n         LintId::of(write::PRINT_STDERR),"}, {"sha": "64e9dc85466eb6e5a969b8d5d56a559e6bfe9a52", "filename": "clippy_lints/src/modulo_arithmetic.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/79b9eb53710020955ad900729ff9fb9440de1f54/clippy_lints%2Fsrc%2Fmodulo_arithmetic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/79b9eb53710020955ad900729ff9fb9440de1f54/clippy_lints%2Fsrc%2Fmodulo_arithmetic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmodulo_arithmetic.rs?ref=79b9eb53710020955ad900729ff9fb9440de1f54", "patch": "@@ -4,7 +4,7 @@ use clippy_utils::sext;\n use if_chain::if_chain;\n use rustc_hir::{BinOpKind, Expr, ExprKind};\n use rustc_lint::{LateContext, LateLintPass};\n-use rustc_middle::ty::{self};\n+use rustc_middle::ty;\n use rustc_session::{declare_lint_pass, declare_tool_lint};\n use std::fmt::Display;\n "}, {"sha": "48c54d79cf11347c7b06bafb5cf5e1269c0347d8", "filename": "clippy_lints/src/unnecessary_self_imports.rs", "status": "added", "additions": 67, "deletions": 0, "changes": 67, "blob_url": "https://github.com/rust-lang/rust/blob/79b9eb53710020955ad900729ff9fb9440de1f54/clippy_lints%2Fsrc%2Funnecessary_self_imports.rs", "raw_url": "https://github.com/rust-lang/rust/raw/79b9eb53710020955ad900729ff9fb9440de1f54/clippy_lints%2Fsrc%2Funnecessary_self_imports.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Funnecessary_self_imports.rs?ref=79b9eb53710020955ad900729ff9fb9440de1f54", "patch": "@@ -0,0 +1,67 @@\n+use clippy_utils::diagnostics::span_lint_and_then;\n+use if_chain::if_chain;\n+use rustc_ast::{Item, ItemKind, UseTreeKind};\n+use rustc_errors::Applicability;\n+use rustc_lint::{EarlyContext, EarlyLintPass};\n+use rustc_session::{declare_lint_pass, declare_tool_lint};\n+use rustc_span::symbol::kw;\n+\n+declare_clippy_lint! {\n+    /// **What it does:** Checks for imports ending in `::{self}`.\n+    ///\n+    /// **Why is this bad?** In most cases, this can be written much more cleanly by omitting `::{self}`.\n+    ///\n+    /// **Known problems:** Removing `::{self}` will cause any non-module items at the same path to also be imported.\n+    /// This might cause a naming conflict (https://github.com/rust-lang/rustfmt/issues/3568). This lint makes no attempt\n+    /// to detect this scenario and that is why it is a restriction lint.\n+    ///\n+    /// **Example:**\n+    ///\n+    /// ```rust\n+    /// use std::io::{self};\n+    /// ```\n+    /// Use instead:\n+    /// ```rust\n+    /// use std::io;\n+    /// ```\n+    pub UNNECESSARY_SELF_IMPORTS,\n+    restriction,\n+    \"imports ending in `::{self}`, which can be omitted\"\n+}\n+\n+declare_lint_pass!(UnnecessarySelfImports => [UNNECESSARY_SELF_IMPORTS]);\n+\n+impl EarlyLintPass for UnnecessarySelfImports {\n+    fn check_item(&mut self, cx: &EarlyContext<'_>, item: &Item) {\n+        if_chain! {\n+            if let ItemKind::Use(use_tree) = &item.kind;\n+            if let UseTreeKind::Nested(nodes) = &use_tree.kind;\n+            if let [(self_tree, _)] = &**nodes;\n+            if let [self_seg] = &*self_tree.prefix.segments;\n+            if self_seg.ident.name == kw::SelfLower;\n+            if let Some(last_segment) = use_tree.prefix.segments.last();\n+\n+            then {\n+                span_lint_and_then(\n+                    cx,\n+                    UNNECESSARY_SELF_IMPORTS,\n+                    item.span,\n+                    \"import ending with `::{self}`\",\n+                    |diag| {\n+                        diag.span_suggestion(\n+                            last_segment.span().with_hi(item.span.hi()),\n+                            \"consider omitting `::{self}`\",\n+                            format!(\n+                                \"{}{};\",\n+                                last_segment.ident,\n+                                if let UseTreeKind::Simple(Some(alias), ..) = self_tree.kind { format!(\" as {}\", alias) } else { String::new() },\n+                            ),\n+                            Applicability::MaybeIncorrect,\n+                        );\n+                        diag.note(\"this will slightly change semantics; any non-module items at the same path will also be imported\");\n+                    },\n+                );\n+            }\n+        }\n+    }\n+}"}, {"sha": "1185eaa1d552fecda9aef32d1f3ed574384332e6", "filename": "tests/ui/unnecessary_self_imports.fixed", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/79b9eb53710020955ad900729ff9fb9440de1f54/tests%2Fui%2Funnecessary_self_imports.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/79b9eb53710020955ad900729ff9fb9440de1f54/tests%2Fui%2Funnecessary_self_imports.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Funnecessary_self_imports.fixed?ref=79b9eb53710020955ad900729ff9fb9440de1f54", "patch": "@@ -0,0 +1,10 @@\n+// run-rustfix\n+#![warn(clippy::unnecessary_self_imports)]\n+#![allow(unused_imports, dead_code)]\n+\n+use std::collections::hash_map::{self, *};\n+use std::fs as alias;\n+use std::io::{self, Read};\n+use std::rc;\n+\n+fn main() {}"}, {"sha": "56bfbc09402adcd40cb1b27e2efad035ace7a459", "filename": "tests/ui/unnecessary_self_imports.rs", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/79b9eb53710020955ad900729ff9fb9440de1f54/tests%2Fui%2Funnecessary_self_imports.rs", "raw_url": "https://github.com/rust-lang/rust/raw/79b9eb53710020955ad900729ff9fb9440de1f54/tests%2Fui%2Funnecessary_self_imports.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Funnecessary_self_imports.rs?ref=79b9eb53710020955ad900729ff9fb9440de1f54", "patch": "@@ -0,0 +1,10 @@\n+// run-rustfix\n+#![warn(clippy::unnecessary_self_imports)]\n+#![allow(unused_imports, dead_code)]\n+\n+use std::collections::hash_map::{self, *};\n+use std::fs::{self as alias};\n+use std::io::{self, Read};\n+use std::rc::{self};\n+\n+fn main() {}"}, {"sha": "83a5618c983d313dc0ab895da9cd9346b0661a92", "filename": "tests/ui/unnecessary_self_imports.stderr", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/79b9eb53710020955ad900729ff9fb9440de1f54/tests%2Fui%2Funnecessary_self_imports.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/79b9eb53710020955ad900729ff9fb9440de1f54/tests%2Fui%2Funnecessary_self_imports.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Funnecessary_self_imports.stderr?ref=79b9eb53710020955ad900729ff9fb9440de1f54", "patch": "@@ -0,0 +1,23 @@\n+error: import ending with `::{self}`\n+  --> $DIR/unnecessary_self_imports.rs:6:1\n+   |\n+LL | use std::fs::{self as alias};\n+   | ^^^^^^^^^--------------------\n+   |          |\n+   |          help: consider omitting `::{self}`: `fs as alias;`\n+   |\n+   = note: `-D clippy::unnecessary-self-imports` implied by `-D warnings`\n+   = note: this will slightly change semantics; any non-module items at the same path will also be imported\n+\n+error: import ending with `::{self}`\n+  --> $DIR/unnecessary_self_imports.rs:8:1\n+   |\n+LL | use std::rc::{self};\n+   | ^^^^^^^^^-----------\n+   |          |\n+   |          help: consider omitting `::{self}`: `rc;`\n+   |\n+   = note: this will slightly change semantics; any non-module items at the same path will also be imported\n+\n+error: aborting due to 2 previous errors\n+"}]}