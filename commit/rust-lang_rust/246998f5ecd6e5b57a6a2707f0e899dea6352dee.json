{"sha": "246998f5ecd6e5b57a6a2707f0e899dea6352dee", "node_id": "C_kwDOAAsO6NoAKDI0Njk5OGY1ZWNkNmU1YjU3YTZhMjcwN2YwZTg5OWRlYTYzNTJkZWU", "commit": {"author": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2022-01-30T16:43:09Z"}, "committer": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2022-01-30T16:43:09Z"}, "message": "Remove some unused lint allows", "tree": {"sha": "0a736a2fbada64b456ce04a50833e14818a2f217", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0a736a2fbada64b456ce04a50833e14818a2f217"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/246998f5ecd6e5b57a6a2707f0e899dea6352dee", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/246998f5ecd6e5b57a6a2707f0e899dea6352dee", "html_url": "https://github.com/rust-lang/rust/commit/246998f5ecd6e5b57a6a2707f0e899dea6352dee", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/246998f5ecd6e5b57a6a2707f0e899dea6352dee/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1b8ea0705e235828e86d85e9707cea14a034fb19", "url": "https://api.github.com/repos/rust-lang/rust/commits/1b8ea0705e235828e86d85e9707cea14a034fb19", "html_url": "https://github.com/rust-lang/rust/commit/1b8ea0705e235828e86d85e9707cea14a034fb19"}], "stats": {"total": 33, "additions": 13, "deletions": 20}, "files": [{"sha": "5bbbc18b3f4323cb362e071d5e6016b23b71390d", "filename": "src/intrinsics/llvm.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/246998f5ecd6e5b57a6a2707f0e899dea6352dee/src%2Fintrinsics%2Fllvm.rs", "raw_url": "https://github.com/rust-lang/rust/raw/246998f5ecd6e5b57a6a2707f0e899dea6352dee/src%2Fintrinsics%2Fllvm.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fintrinsics%2Fllvm.rs?ref=246998f5ecd6e5b57a6a2707f0e899dea6352dee", "patch": "@@ -8,14 +8,14 @@ use rustc_middle::ty::subst::SubstsRef;\n pub(crate) fn codegen_llvm_intrinsic_call<'tcx>(\n     fx: &mut FunctionCx<'_, '_, 'tcx>,\n     intrinsic: &str,\n-    substs: SubstsRef<'tcx>,\n+    _substs: SubstsRef<'tcx>,\n     args: &[mir::Operand<'tcx>],\n     destination: Option<(CPlace<'tcx>, BasicBlock)>,\n ) {\n     let ret = destination.unwrap().0;\n \n     intrinsic_match! {\n-        fx, intrinsic, substs, args,\n+        fx, intrinsic, args,\n         _ => {\n             fx.tcx.sess.warn(&format!(\"unsupported llvm intrinsic {}; replacing with trap\", intrinsic));\n             crate::trap::trap_unimplemented(fx, intrinsic);"}, {"sha": "825b317d131a66b3cfa79f720e814bda38c877e9", "filename": "src/intrinsics/mod.rs", "status": "modified", "additions": 9, "deletions": 16, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/246998f5ecd6e5b57a6a2707f0e899dea6352dee/src%2Fintrinsics%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/246998f5ecd6e5b57a6a2707f0e899dea6352dee/src%2Fintrinsics%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fintrinsics%2Fmod.rs?ref=246998f5ecd6e5b57a6a2707f0e899dea6352dee", "patch": "@@ -43,28 +43,21 @@ macro intrinsic_arg {\n }\n \n macro intrinsic_match {\n-    ($fx:expr, $intrinsic:expr, $substs:expr, $args:expr,\n+    ($fx:expr, $intrinsic:expr, $args:expr,\n     _ => $unknown:block;\n     $(\n         $($($name:tt).*)|+ $(if $cond:expr)?, ($($a:ident $arg:ident),*) $content:block;\n     )*) => {\n-        let _ = $substs; // Silence warning when substs is unused.\n         match $intrinsic {\n             $(\n                 $(intrinsic_pat!($($name).*))|* $(if $cond)? => {\n-                    #[allow(unused_parens, non_snake_case)]\n-                    {\n-                        if let [$($arg),*] = $args {\n-                            let ($($arg,)*) = (\n-                                $(intrinsic_arg!($a $fx, $arg),)*\n-                            );\n-                            #[warn(unused_parens, non_snake_case)]\n-                            {\n-                                $content\n-                            }\n-                        } else {\n-                            bug!(\"wrong number of args for intrinsic {:?}\", $intrinsic);\n-                        }\n+                    if let [$($arg),*] = $args {\n+                        let ($($arg,)*) = (\n+                            $(intrinsic_arg!($a $fx, $arg),)*\n+                        );\n+                        $content\n+                    } else {\n+                        bug!(\"wrong number of args for intrinsic {:?}\", $intrinsic);\n                     }\n                 }\n             )*\n@@ -357,7 +350,7 @@ fn codegen_regular_intrinsic_call<'tcx>(\n     let usize_layout = fx.layout_of(fx.tcx.types.usize);\n \n     intrinsic_match! {\n-        fx, intrinsic, substs, args,\n+        fx, intrinsic, args,\n         _ => {\n             fx.tcx.sess.span_fatal(span, &format!(\"unsupported intrinsic {}\", intrinsic));\n         };"}, {"sha": "292d3ca45f1841e8aa1fcf532c5091980a1fa968", "filename": "src/intrinsics/simd.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/246998f5ecd6e5b57a6a2707f0e899dea6352dee/src%2Fintrinsics%2Fsimd.rs", "raw_url": "https://github.com/rust-lang/rust/raw/246998f5ecd6e5b57a6a2707f0e899dea6352dee/src%2Fintrinsics%2Fsimd.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fintrinsics%2Fsimd.rs?ref=246998f5ecd6e5b57a6a2707f0e899dea6352dee", "patch": "@@ -68,13 +68,13 @@ macro simd_flt_binop($fx:expr, $op:ident($x:ident, $y:ident) -> $ret:ident) {\n pub(super) fn codegen_simd_intrinsic_call<'tcx>(\n     fx: &mut FunctionCx<'_, '_, 'tcx>,\n     intrinsic: Symbol,\n-    substs: SubstsRef<'tcx>,\n+    _substs: SubstsRef<'tcx>,\n     args: &[mir::Operand<'tcx>],\n     ret: CPlace<'tcx>,\n     span: Span,\n ) {\n     intrinsic_match! {\n-        fx, intrinsic, substs, args,\n+        fx, intrinsic, args,\n         _ => {\n             fx.tcx.sess.span_fatal(span, &format!(\"Unknown SIMD intrinsic {}\", intrinsic));\n         };"}]}