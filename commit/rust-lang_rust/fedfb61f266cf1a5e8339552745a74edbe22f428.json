{"sha": "fedfb61f266cf1a5e8339552745a74edbe22f428", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZlZGZiNjFmMjY2Y2YxYTVlODMzOTU1Mjc0NWE3NGVkYmUyMmY0Mjg=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2018-12-31T03:11:17Z"}, "committer": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2018-12-31T03:11:17Z"}, "message": "make some intrinsics safe.", "tree": {"sha": "92a230f914c20412d3cb628f1848ba9199e82774", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/92a230f914c20412d3cb628f1848ba9199e82774"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fedfb61f266cf1a5e8339552745a74edbe22f428", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fedfb61f266cf1a5e8339552745a74edbe22f428", "html_url": "https://github.com/rust-lang/rust/commit/fedfb61f266cf1a5e8339552745a74edbe22f428", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fedfb61f266cf1a5e8339552745a74edbe22f428/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e4c47f9c608c4b12f0c4e4a006b769420b066dcb", "url": "https://api.github.com/repos/rust-lang/rust/commits/e4c47f9c608c4b12f0c4e4a006b769420b066dcb", "html_url": "https://github.com/rust-lang/rust/commit/e4c47f9c608c4b12f0c4e4a006b769420b066dcb"}], "stats": {"total": 24, "additions": 15, "deletions": 9}, "files": [{"sha": "f2d69eb7f74569ea9266962e9d87281579a76069", "filename": "src/librustc_typeck/check/intrinsic.rs", "status": "modified", "additions": 12, "deletions": 4, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/fedfb61f266cf1a5e8339552745a74edbe22f428/src%2Flibrustc_typeck%2Fcheck%2Fintrinsic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fedfb61f266cf1a5e8339552745a74edbe22f428/src%2Flibrustc_typeck%2Fcheck%2Fintrinsic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fintrinsic.rs?ref=fedfb61f266cf1a5e8339552745a74edbe22f428", "patch": "@@ -66,6 +66,17 @@ fn equate_intrinsic_type<'a, 'tcx>(\n     require_same_types(tcx, &cause, tcx.mk_fn_ptr(tcx.fn_sig(def_id)), fty);\n }\n \n+/// Returns whether the given intrinsic is unsafe to call or not.\n+pub fn intrisic_operation_unsafety(intrinsic: &str) -> hir::Unsafety {\n+    match intrinsic {\n+        \"size_of\" | \"min_align_of\" | \"needs_drop\" |\n+        \"overflowing_add\" | \"overflowing_sub\" | \"overflowing_mul\" |\n+        \"rotate_left\" | \"rotate_right\"\n+        => hir::Unsafety::Normal,\n+        _ => hir::Unsafety::Unsafe,\n+    }\n+}\n+\n /// Remember to add all intrinsics here, in librustc_codegen_llvm/intrinsic.rs,\n /// and in libcore/intrinsics.rs\n pub fn check_intrinsic_type<'a, 'tcx>(tcx: TyCtxt<'a, 'tcx, 'tcx>,\n@@ -117,10 +128,7 @@ pub fn check_intrinsic_type<'a, 'tcx>(tcx: TyCtxt<'a, 'tcx, 'tcx>,\n     } else if &name[..] == \"abort\" || &name[..] == \"unreachable\" {\n         (0, Vec::new(), tcx.types.never, hir::Unsafety::Unsafe)\n     } else {\n-        let unsafety = match &name[..] {\n-            \"size_of\" | \"min_align_of\" | \"needs_drop\" => hir::Unsafety::Normal,\n-            _ => hir::Unsafety::Unsafe,\n-        };\n+        let unsafety = intrisic_operation_unsafety(&name[..]);\n         let (n_tps, inputs, output) = match &name[..] {\n             \"breakpoint\" => (0, Vec::new(), tcx.mk_unit()),\n             \"size_of\" |"}, {"sha": "30019feb960aa5066a6a30b378c91cc3404d853f", "filename": "src/librustc_typeck/check/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fedfb61f266cf1a5e8339552745a74edbe22f428/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fedfb61f266cf1a5e8339552745a74edbe22f428/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs?ref=fedfb61f266cf1a5e8339552745a74edbe22f428", "patch": "@@ -80,7 +80,7 @@ mod closure;\n mod callee;\n mod compare_method;\n mod generator_interior;\n-mod intrinsic;\n+pub mod intrinsic;\n mod op;\n \n use astconv::{AstConv, PathSeg};"}, {"sha": "5d6fe3f38453514718e5912d07605d379c5bce17", "filename": "src/librustc_typeck/collect.rs", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/fedfb61f266cf1a5e8339552745a74edbe22f428/src%2Flibrustc_typeck%2Fcollect.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fedfb61f266cf1a5e8339552745a74edbe22f428/src%2Flibrustc_typeck%2Fcollect.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcollect.rs?ref=fedfb61f266cf1a5e8339552745a74edbe22f428", "patch": "@@ -16,6 +16,7 @@\n \n use astconv::{AstConv, Bounds};\n use constrained_type_params as ctp;\n+use check::intrinsic::intrisic_operation_unsafety;\n use lint;\n use middle::lang_items::SizedTraitLangItem;\n use middle::resolve_lifetime as rl;\n@@ -2076,10 +2077,7 @@ fn compute_sig_of_foreign_fn_decl<'a, 'tcx>(\n     abi: abi::Abi,\n ) -> ty::PolyFnSig<'tcx> {\n     let unsafety = if abi == abi::Abi::RustIntrinsic {\n-        match &*tcx.item_name(def_id).as_str() {\n-            \"size_of\" | \"min_align_of\" | \"needs_drop\" => hir::Unsafety::Normal,\n-            _ => hir::Unsafety::Unsafe,\n-        }\n+        intrisic_operation_unsafety(&*tcx.item_name(def_id).as_str())\n     } else {\n         hir::Unsafety::Unsafe\n     };"}]}