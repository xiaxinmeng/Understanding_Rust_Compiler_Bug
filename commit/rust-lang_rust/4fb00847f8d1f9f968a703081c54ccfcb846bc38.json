{"sha": "4fb00847f8d1f9f968a703081c54ccfcb846bc38", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRmYjAwODQ3ZjhkMWY5Zjk2OGE3MDMwODFjNTRjY2ZjYjg0NmJjMzg=", "commit": {"author": {"name": "Jack Huey", "email": "31162821+jackh726@users.noreply.github.com", "date": "2021-09-08T16:24:15Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-09-08T16:24:15Z"}, "message": "Rollup merge of #88541 - vandenheuvel:regression_test_74400, r=Mark-Simulacrum\n\nAdd regression test for #74400\n\nCloses #74400 by adding a regression test.", "tree": {"sha": "d8d9a8948a4cf0c7ceda98e1fd5e70b2d2a601e4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d8d9a8948a4cf0c7ceda98e1fd5e70b2d2a601e4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4fb00847f8d1f9f968a703081c54ccfcb846bc38", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJhOOOvCRBK7hj4Ov3rIwAA5qIIAI6xrxmf4Ul05psNJTGX8z5Y\n68lUv5uMjVVR5RHtU0XXLCxXeuc2+kINi1AUBMfIamJ5H7CFq6WvfRgpQyyBw6Dw\ntiytoFT/+HkzN3cGYzkA9b78su/3WfvztCO6+sK7KUIWP/HyTA+v5r2opxz/x2uA\npc8d88EpdPbQOZ9D7yMuNeojh00mPqbAnK9PjL+BoLdzb5boei/rPrSAvwmajNIm\nZ9wdiABoNz3wkxlZ4EBVAytZ4FN8w45ERef5TeamePIxSHeEIZn8kLvHX3pQ9/iC\nbJXEKfIswy0WIMVLKE4QRHDcgJQU3+QrHRBewd9PLL4qI7j/C/WncvUVdR0hgzA=\n=ZNv9\n-----END PGP SIGNATURE-----\n", "payload": "tree d8d9a8948a4cf0c7ceda98e1fd5e70b2d2a601e4\nparent 2f2aed1de7d7c7f0dd943635188078f810e1d468\nparent fe7bcd6e4044f760f90aa2309c76d3a75899126a\nauthor Jack Huey <31162821+jackh726@users.noreply.github.com> 1631118255 -0400\ncommitter GitHub <noreply@github.com> 1631118255 -0400\n\nRollup merge of #88541 - vandenheuvel:regression_test_74400, r=Mark-Simulacrum\n\nAdd regression test for #74400\n\nCloses #74400 by adding a regression test.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4fb00847f8d1f9f968a703081c54ccfcb846bc38", "html_url": "https://github.com/rust-lang/rust/commit/4fb00847f8d1f9f968a703081c54ccfcb846bc38", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4fb00847f8d1f9f968a703081c54ccfcb846bc38/comments", "author": {"login": "jackh726", "id": 31162821, "node_id": "MDQ6VXNlcjMxMTYyODIx", "avatar_url": "https://avatars.githubusercontent.com/u/31162821?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jackh726", "html_url": "https://github.com/jackh726", "followers_url": "https://api.github.com/users/jackh726/followers", "following_url": "https://api.github.com/users/jackh726/following{/other_user}", "gists_url": "https://api.github.com/users/jackh726/gists{/gist_id}", "starred_url": "https://api.github.com/users/jackh726/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jackh726/subscriptions", "organizations_url": "https://api.github.com/users/jackh726/orgs", "repos_url": "https://api.github.com/users/jackh726/repos", "events_url": "https://api.github.com/users/jackh726/events{/privacy}", "received_events_url": "https://api.github.com/users/jackh726/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2f2aed1de7d7c7f0dd943635188078f810e1d468", "url": "https://api.github.com/repos/rust-lang/rust/commits/2f2aed1de7d7c7f0dd943635188078f810e1d468", "html_url": "https://github.com/rust-lang/rust/commit/2f2aed1de7d7c7f0dd943635188078f810e1d468"}, {"sha": "fe7bcd6e4044f760f90aa2309c76d3a75899126a", "url": "https://api.github.com/repos/rust-lang/rust/commits/fe7bcd6e4044f760f90aa2309c76d3a75899126a", "html_url": "https://github.com/rust-lang/rust/commit/fe7bcd6e4044f760f90aa2309c76d3a75899126a"}], "stats": {"total": 54, "additions": 54, "deletions": 0}, "files": [{"sha": "5a1294f948f1c3c13e7aa984982f7b7b1d6b7841", "filename": "src/test/ui/lifetimes/lifetime-errors/issue_74400.nll.stderr", "status": "added", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/4fb00847f8d1f9f968a703081c54ccfcb846bc38/src%2Ftest%2Fui%2Flifetimes%2Flifetime-errors%2Fissue_74400.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4fb00847f8d1f9f968a703081c54ccfcb846bc38/src%2Ftest%2Fui%2Flifetimes%2Flifetime-errors%2Fissue_74400.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flifetimes%2Flifetime-errors%2Fissue_74400.nll.stderr?ref=4fb00847f8d1f9f968a703081c54ccfcb846bc38", "patch": "@@ -0,0 +1,30 @@\n+error[E0310]: the parameter type `T` may not live long enough\n+  --> $DIR/issue_74400.rs:12:5\n+   |\n+LL |     f(data, identity)\n+   |     ^^^^^^^^^^^^^^^^^\n+   |\n+   = help: consider adding an explicit lifetime bound `T: 'static`...\n+\n+error[E0308]: mismatched types\n+  --> $DIR/issue_74400.rs:12:5\n+   |\n+LL |     f(data, identity)\n+   |     ^^^^^^^^^^^^^^^^^ one type is more general than the other\n+   |\n+   = note: expected type `for<'r> Fn<(&'r T,)>`\n+              found type `Fn<(&T,)>`\n+\n+error: implementation of `FnOnce` is not general enough\n+  --> $DIR/issue_74400.rs:12:5\n+   |\n+LL |     f(data, identity)\n+   |     ^^^^^^^^^^^^^^^^^ implementation of `FnOnce` is not general enough\n+   |\n+   = note: `fn(&'2 T) -> &'2 T {identity::<&'2 T>}` must implement `FnOnce<(&'1 T,)>`, for any lifetime `'1`...\n+   = note: ...but it actually implements `FnOnce<(&'2 T,)>`, for some specific lifetime `'2`\n+\n+error: aborting due to 3 previous errors\n+\n+Some errors have detailed explanations: E0308, E0310.\n+For more information about an error, try `rustc --explain E0308`."}, {"sha": "f83384524f71822b4174c5bcf1a784b05a9d9de8", "filename": "src/test/ui/lifetimes/lifetime-errors/issue_74400.rs", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/4fb00847f8d1f9f968a703081c54ccfcb846bc38/src%2Ftest%2Fui%2Flifetimes%2Flifetime-errors%2Fissue_74400.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4fb00847f8d1f9f968a703081c54ccfcb846bc38/src%2Ftest%2Fui%2Flifetimes%2Flifetime-errors%2Fissue_74400.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flifetimes%2Flifetime-errors%2Fissue_74400.rs?ref=4fb00847f8d1f9f968a703081c54ccfcb846bc38", "patch": "@@ -0,0 +1,13 @@\n+//! Regression test for #74400: Type mismatch in function arguments E0631, E0271 are falsely\n+//! recognized as E0308 mismatched types.\n+\n+use std::convert::identity;\n+\n+fn main() {}\n+\n+fn f<T, S>(data: &[T], key: impl Fn(&T) -> S) {\n+}\n+\n+fn g<T>(data: &[T]) {\n+    f(data, identity) //~ ERROR implementation of `FnOnce` is not general\n+}"}, {"sha": "d972861a2b5673685ddeba6e903a50ab97d91b46", "filename": "src/test/ui/lifetimes/lifetime-errors/issue_74400.stderr", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/4fb00847f8d1f9f968a703081c54ccfcb846bc38/src%2Ftest%2Fui%2Flifetimes%2Flifetime-errors%2Fissue_74400.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4fb00847f8d1f9f968a703081c54ccfcb846bc38/src%2Ftest%2Fui%2Flifetimes%2Flifetime-errors%2Fissue_74400.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flifetimes%2Flifetime-errors%2Fissue_74400.stderr?ref=4fb00847f8d1f9f968a703081c54ccfcb846bc38", "patch": "@@ -0,0 +1,11 @@\n+error: implementation of `FnOnce` is not general enough\n+  --> $DIR/issue_74400.rs:12:5\n+   |\n+LL |     f(data, identity)\n+   |     ^ implementation of `FnOnce` is not general enough\n+   |\n+   = note: `fn(&'2 T) -> &'2 T {identity::<&'2 T>}` must implement `FnOnce<(&'1 T,)>`, for any lifetime `'1`...\n+   = note: ...but it actually implements `FnOnce<(&'2 T,)>`, for some specific lifetime `'2`\n+\n+error: aborting due to previous error\n+"}]}