{"sha": "bb6bec1d55586abfb6aa6ca924994b09035752dc", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJiNmJlYzFkNTU1ODZhYmZiNmFhNmNhOTI0OTk0YjA5MDM1NzUyZGM=", "commit": {"author": {"name": "Amanieu d'Antras", "email": "amanieu@gmail.com", "date": "2021-04-26T18:49:26Z"}, "committer": {"name": "Amanieu d'Antras", "email": "amanieu@gmail.com", "date": "2021-05-13T21:31:58Z"}, "message": "Clarify error message when both asm! and global_asm! are unsupported", "tree": {"sha": "eee60ce0de61e689351e7053a0951ecd4fabc1a4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/eee60ce0de61e689351e7053a0951ecd4fabc1a4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bb6bec1d55586abfb6aa6ca924994b09035752dc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bb6bec1d55586abfb6aa6ca924994b09035752dc", "html_url": "https://github.com/rust-lang/rust/commit/bb6bec1d55586abfb6aa6ca924994b09035752dc", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bb6bec1d55586abfb6aa6ca924994b09035752dc/comments", "author": {"login": "Amanieu", "id": 278509, "node_id": "MDQ6VXNlcjI3ODUwOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/278509?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Amanieu", "html_url": "https://github.com/Amanieu", "followers_url": "https://api.github.com/users/Amanieu/followers", "following_url": "https://api.github.com/users/Amanieu/following{/other_user}", "gists_url": "https://api.github.com/users/Amanieu/gists{/gist_id}", "starred_url": "https://api.github.com/users/Amanieu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Amanieu/subscriptions", "organizations_url": "https://api.github.com/users/Amanieu/orgs", "repos_url": "https://api.github.com/users/Amanieu/repos", "events_url": "https://api.github.com/users/Amanieu/events{/privacy}", "received_events_url": "https://api.github.com/users/Amanieu/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Amanieu", "id": 278509, "node_id": "MDQ6VXNlcjI3ODUwOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/278509?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Amanieu", "html_url": "https://github.com/Amanieu", "followers_url": "https://api.github.com/users/Amanieu/followers", "following_url": "https://api.github.com/users/Amanieu/following{/other_user}", "gists_url": "https://api.github.com/users/Amanieu/gists{/gist_id}", "starred_url": "https://api.github.com/users/Amanieu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Amanieu/subscriptions", "organizations_url": "https://api.github.com/users/Amanieu/orgs", "repos_url": "https://api.github.com/users/Amanieu/repos", "events_url": "https://api.github.com/users/Amanieu/events{/privacy}", "received_events_url": "https://api.github.com/users/Amanieu/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0df83f8e5e85268b0134f8c698e09b5c8d6b3ef6", "url": "https://api.github.com/repos/rust-lang/rust/commits/0df83f8e5e85268b0134f8c698e09b5c8d6b3ef6", "html_url": "https://github.com/rust-lang/rust/commit/0df83f8e5e85268b0134f8c698e09b5c8d6b3ef6"}], "stats": {"total": 11, "additions": 6, "deletions": 5}, "files": [{"sha": "1c3fae2afe71f2af5304cc7654434940082f744f", "filename": "compiler/rustc_ast_lowering/src/asm.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/bb6bec1d55586abfb6aa6ca924994b09035752dc/compiler%2Frustc_ast_lowering%2Fsrc%2Fasm.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bb6bec1d55586abfb6aa6ca924994b09035752dc/compiler%2Frustc_ast_lowering%2Fsrc%2Fasm.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_ast_lowering%2Fsrc%2Fasm.rs?ref=bb6bec1d55586abfb6aa6ca924994b09035752dc", "patch": "@@ -15,7 +15,8 @@ impl<'a, 'hir> LoweringContext<'a, 'hir> {\n         // lowering the register contraints in this case.\n         let asm_arch = if self.sess.opts.actually_rustdoc { None } else { self.sess.asm_arch };\n         if asm_arch.is_none() && !self.sess.opts.actually_rustdoc {\n-            struct_span_err!(self.sess, sp, E0472, \"asm! is unsupported on this target\").emit();\n+            struct_span_err!(self.sess, sp, E0472, \"inline assembly is unsupported on this target\")\n+                .emit();\n         }\n         if asm.options.contains(InlineAsmOptions::ATT_SYNTAX)\n             && !matches!(asm_arch, Some(asm::InlineAsmArch::X86 | asm::InlineAsmArch::X86_64))"}, {"sha": "3eeb76f3d00358e6a630cc13c09fa8ed768ea45d", "filename": "src/test/ui/asm/bad-arch.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/bb6bec1d55586abfb6aa6ca924994b09035752dc/src%2Ftest%2Fui%2Fasm%2Fbad-arch.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bb6bec1d55586abfb6aa6ca924994b09035752dc/src%2Ftest%2Fui%2Fasm%2Fbad-arch.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fasm%2Fbad-arch.rs?ref=bb6bec1d55586abfb6aa6ca924994b09035752dc", "patch": "@@ -18,9 +18,9 @@ trait Sized {}\n fn main() {\n     unsafe {\n         asm!(\"\");\n-        //~^ ERROR asm! is unsupported on this target\n+        //~^ ERROR inline assembly is unsupported on this target\n     }\n }\n \n global_asm!(\"\");\n-//~^ ERROR asm! is unsupported on this target\n+//~^ ERROR inline assembly is unsupported on this target"}, {"sha": "3ca5bcc707e4d3310ca869897e7e828927e5bee5", "filename": "src/test/ui/asm/bad-arch.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/bb6bec1d55586abfb6aa6ca924994b09035752dc/src%2Ftest%2Fui%2Fasm%2Fbad-arch.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/bb6bec1d55586abfb6aa6ca924994b09035752dc/src%2Ftest%2Fui%2Fasm%2Fbad-arch.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fasm%2Fbad-arch.stderr?ref=bb6bec1d55586abfb6aa6ca924994b09035752dc", "patch": "@@ -1,10 +1,10 @@\n-error[E0472]: asm! is unsupported on this target\n+error[E0472]: inline assembly is unsupported on this target\n   --> $DIR/bad-arch.rs:20:9\n    |\n LL |         asm!(\"\");\n    |         ^^^^^^^^^\n \n-error[E0472]: asm! is unsupported on this target\n+error[E0472]: inline assembly is unsupported on this target\n   --> $DIR/bad-arch.rs:25:1\n    |\n LL | global_asm!(\"\");"}]}