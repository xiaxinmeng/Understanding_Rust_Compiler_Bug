{"sha": "0256f60461cf607a7f84554926298c0fb74f381e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjAyNTZmNjA0NjFjZjYwN2E3Zjg0NTU0OTI2Mjk4YzBmYjc0ZjM4MWU=", "commit": {"author": {"name": "Mark Simulacrum", "email": "mark.simulacrum@gmail.com", "date": "2016-12-19T14:33:35Z"}, "committer": {"name": "Mark Simulacrum", "email": "mark.simulacrum@gmail.com", "date": "2016-12-21T03:03:34Z"}, "message": "Move debug info check into create_function_debug_context", "tree": {"sha": "96173beb8e871594f997f3b02fd9af17eabae875", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/96173beb8e871594f997f3b02fd9af17eabae875"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0256f60461cf607a7f84554926298c0fb74f381e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0256f60461cf607a7f84554926298c0fb74f381e", "html_url": "https://github.com/rust-lang/rust/commit/0256f60461cf607a7f84554926298c0fb74f381e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0256f60461cf607a7f84554926298c0fb74f381e/comments", "author": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a445199afb7e57254de40afd96d9e2ab5bb01e4a", "url": "https://api.github.com/repos/rust-lang/rust/commits/a445199afb7e57254de40afd96d9e2ab5bb01e4a", "html_url": "https://github.com/rust-lang/rust/commit/a445199afb7e57254de40afd96d9e2ab5bb01e4a"}], "stats": {"total": 31, "additions": 8, "deletions": 23}, "files": [{"sha": "8bd9786c665739f948b9946e5faab959547f6582", "filename": "src/librustc_trans/debuginfo/mod.rs", "status": "modified", "additions": 6, "deletions": 9, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/0256f60461cf607a7f84554926298c0fb74f381e/src%2Flibrustc_trans%2Fdebuginfo%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0256f60461cf607a7f84554926298c0fb74f381e/src%2Flibrustc_trans%2Fdebuginfo%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Fdebuginfo%2Fmod.rs?ref=0256f60461cf607a7f84554926298c0fb74f381e", "patch": "@@ -195,15 +195,6 @@ pub fn finalize(cx: &CrateContext) {\n     };\n }\n \n-/// Creates a function-specific debug context for a function w/o debuginfo.\n-pub fn empty_function_debug_context<'a, 'tcx>(cx: &CrateContext<'a, 'tcx>) -> FunctionDebugContext {\n-    if cx.sess().opts.debuginfo == NoDebugInfo {\n-        FunctionDebugContext::DebugInfoDisabled\n-    } else {\n-        FunctionDebugContext::FunctionWithoutDebugInfo\n-    }\n-}\n-\n /// Creates the function-specific debug context.\n ///\n /// Returns the FunctionDebugContext for the function which holds state needed\n@@ -220,6 +211,12 @@ pub fn create_function_debug_context<'a, 'tcx>(cx: &CrateContext<'a, 'tcx>,\n         return FunctionDebugContext::DebugInfoDisabled;\n     }\n \n+    for attr in cx.tcx().get_attrs(instance.def).iter() {\n+        if attr.check_name(\"no_debug\") {\n+            return FunctionDebugContext::FunctionWithoutDebugInfo;\n+        }\n+    }\n+\n     let containing_scope = get_containing_scope(cx, instance);\n     let span = mir.span;\n "}, {"sha": "4a908e8cea9b4b027fd232c93e1b83bc7729d450", "filename": "src/librustc_trans/mir/mod.rs", "status": "modified", "additions": 2, "deletions": 14, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/0256f60461cf607a7f84554926298c0fb74f381e/src%2Flibrustc_trans%2Fmir%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0256f60461cf607a7f84554926298c0fb74f381e/src%2Flibrustc_trans%2Fmir%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Fmir%2Fmod.rs?ref=0256f60461cf607a7f84554926298c0fb74f381e", "patch": "@@ -199,22 +199,10 @@ pub fn trans_mir<'a, 'tcx: 'a>(\n     sig: &ty::FnSig<'tcx>,\n     abi: Abi,\n ) {\n-    let def_id = instance.def;\n-    let local_id = fcx.ccx.tcx().map.as_local_node_id(def_id);\n-    let no_debug = if let Some(id) = local_id {\n-        fcx.ccx.tcx().map.attrs(id).iter().any(|item| item.check_name(\"no_debug\"))\n-    } else {\n-        fcx.ccx.sess().cstore.item_attrs(def_id).iter().any(|item| item.check_name(\"no_debug\"))\n-    };\n-\n-    let debug_context = if !no_debug {\n-        debuginfo::create_function_debug_context(fcx.ccx, instance, sig, abi, fcx.llfn, mir)\n-    } else {\n-        debuginfo::empty_function_debug_context(fcx.ccx)\n-    };\n+    let debug_context =\n+        debuginfo::create_function_debug_context(fcx.ccx, instance, sig, abi, fcx.llfn, mir);\n     let bcx = fcx.get_entry_block();\n \n-    // Analyze the temps to determine which must be lvalues\n     let cleanup_kinds = analyze::cleanup_kinds(&mir);\n \n     // Allocate a `Block` for every basic block"}]}