{"sha": "57c7119315132220ef547bed0dc8d15272190291", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU3YzcxMTkzMTUxMzIyMjBlZjU0N2JlZDBkYzhkMTUyNzIxOTAyOTE=", "commit": {"author": {"name": "David Cook", "email": "divergentdave@gmail.com", "date": "2020-04-17T04:24:57Z"}, "committer": {"name": "David Cook", "email": "divergentdave@gmail.com", "date": "2020-04-17T04:24:57Z"}, "message": "Handle std::sync::atomic::spin_loop_hint()", "tree": {"sha": "a957c19f6d60eb3fdcb368ee02c26aa25bd20793", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a957c19f6d60eb3fdcb368ee02c26aa25bd20793"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/57c7119315132220ef547bed0dc8d15272190291", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/57c7119315132220ef547bed0dc8d15272190291", "html_url": "https://github.com/rust-lang/rust/commit/57c7119315132220ef547bed0dc8d15272190291", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/57c7119315132220ef547bed0dc8d15272190291/comments", "author": {"login": "divergentdave", "id": 181772, "node_id": "MDQ6VXNlcjE4MTc3Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/181772?v=4", "gravatar_id": "", "url": "https://api.github.com/users/divergentdave", "html_url": "https://github.com/divergentdave", "followers_url": "https://api.github.com/users/divergentdave/followers", "following_url": "https://api.github.com/users/divergentdave/following{/other_user}", "gists_url": "https://api.github.com/users/divergentdave/gists{/gist_id}", "starred_url": "https://api.github.com/users/divergentdave/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/divergentdave/subscriptions", "organizations_url": "https://api.github.com/users/divergentdave/orgs", "repos_url": "https://api.github.com/users/divergentdave/repos", "events_url": "https://api.github.com/users/divergentdave/events{/privacy}", "received_events_url": "https://api.github.com/users/divergentdave/received_events", "type": "User", "site_admin": false}, "committer": {"login": "divergentdave", "id": 181772, "node_id": "MDQ6VXNlcjE4MTc3Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/181772?v=4", "gravatar_id": "", "url": "https://api.github.com/users/divergentdave", "html_url": "https://github.com/divergentdave", "followers_url": "https://api.github.com/users/divergentdave/followers", "following_url": "https://api.github.com/users/divergentdave/following{/other_user}", "gists_url": "https://api.github.com/users/divergentdave/gists{/gist_id}", "starred_url": "https://api.github.com/users/divergentdave/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/divergentdave/subscriptions", "organizations_url": "https://api.github.com/users/divergentdave/orgs", "repos_url": "https://api.github.com/users/divergentdave/repos", "events_url": "https://api.github.com/users/divergentdave/events{/privacy}", "received_events_url": "https://api.github.com/users/divergentdave/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9b4af73eb08963fa5450e6d967c29399c3339abe", "url": "https://api.github.com/repos/rust-lang/rust/commits/9b4af73eb08963fa5450e6d967c29399c3339abe", "html_url": "https://github.com/rust-lang/rust/commit/9b4af73eb08963fa5450e6d967c29399c3339abe"}], "stats": {"total": 23, "additions": 19, "deletions": 4}, "files": [{"sha": "e816a35253d9565cab4d87adf439c0ae50ea3080", "filename": "src/shims/foreign_items.rs", "status": "modified", "additions": 13, "deletions": 4, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/57c7119315132220ef547bed0dc8d15272190291/src%2Fshims%2Fforeign_items.rs", "raw_url": "https://github.com/rust-lang/rust/raw/57c7119315132220ef547bed0dc8d15272190291/src%2Fshims%2Fforeign_items.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fshims%2Fforeign_items.rs?ref=57c7119315132220ef547bed0dc8d15272190291", "patch": "@@ -434,10 +434,19 @@ pub trait EvalContextExt<'mir, 'tcx: 'mir>: crate::MiriEvalContextExt<'mir, 'tcx\n             }\n \n             // Target-specific shims\n-            _ => match this.tcx.sess.target.target.target_os.as_str() {\n-                \"linux\" | \"macos\" => return posix::EvalContextExt::emulate_foreign_item_by_name(this, link_name, args, dest, ret),\n-                \"windows\" => return windows::EvalContextExt::emulate_foreign_item_by_name(this, link_name, args, dest, ret),\n-                target => throw_unsup_format!(\"the target `{}` is not supported\", target),\n+            _ => {\n+                match this.tcx.sess.target.target.arch.as_str() {\n+                    \"x86\" | \"x86_64\" => match link_name {\n+                        \"llvm.x86.sse2.pause\" => return Ok(true),\n+                        _ => {}\n+                    }\n+                    _ => {}\n+                }\n+                match this.tcx.sess.target.target.target_os.as_str() {\n+                    \"linux\" | \"macos\" => return posix::EvalContextExt::emulate_foreign_item_by_name(this, link_name, args, dest, ret),\n+                    \"windows\" => return windows::EvalContextExt::emulate_foreign_item_by_name(this, link_name, args, dest, ret),\n+                    target => throw_unsup_format!(\"the target `{}` is not supported\", target),\n+                }\n             }\n         };\n "}, {"sha": "90885880e681f39a1b3870b6efc12df0aefb6d98", "filename": "tests/run-pass/sync.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/57c7119315132220ef547bed0dc8d15272190291/tests%2Frun-pass%2Fsync.rs", "raw_url": "https://github.com/rust-lang/rust/raw/57c7119315132220ef547bed0dc8d15272190291/tests%2Frun-pass%2Fsync.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Fsync.rs?ref=57c7119315132220ef547bed0dc8d15272190291", "patch": "@@ -1,13 +1,15 @@\n #![feature(rustc_private)]\n \n use std::sync::{Mutex, TryLockError};\n+use std::sync::atomic;\n \n fn main() {\n     test_mutex_stdlib();\n     #[cfg(not(target_os = \"windows\"))] // TODO: implement RwLock on Windows\n     {\n         test_rwlock_stdlib();\n     }\n+    test_spin_loop_hint();\n }\n \n fn test_mutex_stdlib() {\n@@ -50,3 +52,7 @@ impl<T> TryLockErrorExt<T> for TryLockError<T> {\n         }\n     }\n }\n+\n+fn test_spin_loop_hint() {\n+    atomic::spin_loop_hint();\n+}"}]}