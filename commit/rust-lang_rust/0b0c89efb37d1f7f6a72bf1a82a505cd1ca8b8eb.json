{"sha": "0b0c89efb37d1f7f6a72bf1a82a505cd1ca8b8eb", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBiMGM4OWVmYjM3ZDFmN2Y2YTcyYmYxYTgyYTUwNWNkMWNhOGI4ZWI=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2015-06-05T21:44:21Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2015-06-05T21:44:21Z"}, "message": "Auto merge of #26032 - achiwhane:master, r=steveklabnik\n\nAdded a sentence that tells the user that using main.rs and/or lib.rs is required for Cargo.", "tree": {"sha": "a004981fa7cdee51878e3e4d882687dd53f6d152", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a004981fa7cdee51878e3e4d882687dd53f6d152"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0b0c89efb37d1f7f6a72bf1a82a505cd1ca8b8eb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0b0c89efb37d1f7f6a72bf1a82a505cd1ca8b8eb", "html_url": "https://github.com/rust-lang/rust/commit/0b0c89efb37d1f7f6a72bf1a82a505cd1ca8b8eb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0b0c89efb37d1f7f6a72bf1a82a505cd1ca8b8eb/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c78c0994b1df5e365058f301330d06fa035c3734", "url": "https://api.github.com/repos/rust-lang/rust/commits/c78c0994b1df5e365058f301330d06fa035c3734", "html_url": "https://github.com/rust-lang/rust/commit/c78c0994b1df5e365058f301330d06fa035c3734"}, {"sha": "ac3301ec3b71daee43a0ad5d671767d44d3280a4", "url": "https://api.github.com/repos/rust-lang/rust/commits/ac3301ec3b71daee43a0ad5d671767d44d3280a4", "html_url": "https://github.com/rust-lang/rust/commit/ac3301ec3b71daee43a0ad5d671767d44d3280a4"}], "stats": {"total": 18, "additions": 9, "deletions": 9}, "files": [{"sha": "32002ebd1ec2a7178541906d591bfa0264e1acf1", "filename": "src/doc/trpl/hello-cargo.md", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/0b0c89efb37d1f7f6a72bf1a82a505cd1ca8b8eb/src%2Fdoc%2Ftrpl%2Fhello-cargo.md", "raw_url": "https://github.com/rust-lang/rust/raw/0b0c89efb37d1f7f6a72bf1a82a505cd1ca8b8eb/src%2Fdoc%2Ftrpl%2Fhello-cargo.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Ftrpl%2Fhello-cargo.md?ref=0b0c89efb37d1f7f6a72bf1a82a505cd1ca8b8eb", "patch": "@@ -33,7 +33,8 @@ $ mv main.rs src/main.rs\n ```\n \n Note that since we're creating an executable, we used `main.rs`. If we\n-want to make a library instead, we should use `lib.rs`.\n+want to make a library instead, we should use `lib.rs`. This convention is required\n+for Cargo to successfully compile our projects, but it can be overridden if we wish. \n Custom file locations for the entry point can be specified\n with a [`[[lib]]` or `[[bin]]`][crates-custom] key in the TOML file described below.\n \n@@ -62,18 +63,17 @@ version = \"0.0.1\"\n authors = [ \"Your name <you@example.com>\" ]\n ```\n \n-This file is in the [TOML][toml] format. Let\u2019s let it explain itself to you:\n+This file is in the [TOML][toml] format. TOML is similar to INI, but has some \n+extra goodies. According to the TOML docs, \n \n > TOML aims to be a minimal configuration file format that's easy to read due\n > to obvious semantics. TOML is designed to map unambiguously to a hash table.\n > TOML should be easy to parse into data structures in a wide variety of\n > languages.\n \n-TOML is very similar to INI, but with some extra goodies.\n-\n [toml]: https://github.com/toml-lang/toml\n \n-Once you have this file in place, we should be ready to build! Try this:\n+Once you have this file in place, we should be ready to build! To do so, run:\n \n ```bash\n $ cargo build\n@@ -82,7 +82,7 @@ $ ./target/debug/hello_world\n Hello, world!\n ```\n \n-Bam! We build our project with `cargo build`, and run it with\n+Bam! We built our project with `cargo build`, and ran it with\n `./target/debug/hello_world`. We can do both in one step with `cargo run`:\n \n ```bash\n@@ -103,9 +103,9 @@ Hello, world!\n ```\n \n This hasn\u2019t bought us a whole lot over our simple use of `rustc`, but think\n-about the future: when our project gets more complex, we would need to do more\n+about the future: when our project gets more complex, we need to do more\n things to get all of the parts to properly compile. With Cargo, as our project\n-grows, we can just `cargo build`, and it\u2019ll work the right way.\n+grows, we can just run `cargo build`, and it\u2019ll work the right way.\n \n When your project is finally ready for release, you can use\n `cargo build --release` to compile your project with optimizations.\n@@ -118,7 +118,7 @@ name = \"hello_world\"\n version = \"0.0.1\"\n ```\n \n-This file is used by Cargo to keep track of dependencies in your application.\n+The `Cargo.lock` file is used by Cargo to keep track of dependencies in your application.\n Right now, we don\u2019t have any, so it\u2019s a bit sparse. You won't ever need\n to touch this file yourself, just let Cargo handle it.\n "}]}