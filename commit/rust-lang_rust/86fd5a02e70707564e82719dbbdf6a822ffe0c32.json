{"sha": "86fd5a02e70707564e82719dbbdf6a822ffe0c32", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg2ZmQ1YTAyZTcwNzA3NTY0ZTgyNzE5ZGJiZGY2YTgyMmZmZTBjMzI=", "commit": {"author": {"name": "Amanieu d'Antras", "email": "amanieu@gmail.com", "date": "2016-03-13T16:40:06Z"}, "committer": {"name": "Amanieu d'Antras", "email": "amanieu@gmail.com", "date": "2016-03-13T18:01:35Z"}, "message": "Fix LLVM assert with write_volatile", "tree": {"sha": "4f9f2efffce63e08f4e2cb88d979eb1dcb0a4f74", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4f9f2efffce63e08f4e2cb88d979eb1dcb0a4f74"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/86fd5a02e70707564e82719dbbdf6a822ffe0c32", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/86fd5a02e70707564e82719dbbdf6a822ffe0c32", "html_url": "https://github.com/rust-lang/rust/commit/86fd5a02e70707564e82719dbbdf6a822ffe0c32", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/86fd5a02e70707564e82719dbbdf6a822ffe0c32/comments", "author": {"login": "Amanieu", "id": 278509, "node_id": "MDQ6VXNlcjI3ODUwOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/278509?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Amanieu", "html_url": "https://github.com/Amanieu", "followers_url": "https://api.github.com/users/Amanieu/followers", "following_url": "https://api.github.com/users/Amanieu/following{/other_user}", "gists_url": "https://api.github.com/users/Amanieu/gists{/gist_id}", "starred_url": "https://api.github.com/users/Amanieu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Amanieu/subscriptions", "organizations_url": "https://api.github.com/users/Amanieu/orgs", "repos_url": "https://api.github.com/users/Amanieu/repos", "events_url": "https://api.github.com/users/Amanieu/events{/privacy}", "received_events_url": "https://api.github.com/users/Amanieu/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Amanieu", "id": 278509, "node_id": "MDQ6VXNlcjI3ODUwOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/278509?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Amanieu", "html_url": "https://github.com/Amanieu", "followers_url": "https://api.github.com/users/Amanieu/followers", "following_url": "https://api.github.com/users/Amanieu/following{/other_user}", "gists_url": "https://api.github.com/users/Amanieu/gists{/gist_id}", "starred_url": "https://api.github.com/users/Amanieu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Amanieu/subscriptions", "organizations_url": "https://api.github.com/users/Amanieu/orgs", "repos_url": "https://api.github.com/users/Amanieu/repos", "events_url": "https://api.github.com/users/Amanieu/events{/privacy}", "received_events_url": "https://api.github.com/users/Amanieu/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1a019dc86de1459809f776b869e36f8e71a7665a", "url": "https://api.github.com/repos/rust-lang/rust/commits/1a019dc86de1459809f776b869e36f8e71a7665a", "html_url": "https://github.com/rust-lang/rust/commit/1a019dc86de1459809f776b869e36f8e71a7665a"}], "stats": {"total": 70, "additions": 69, "deletions": 1}, "files": [{"sha": "ac1d34f17064eb050d991efc3b8a79ef108538a5", "filename": "src/librustc_trans/trans/intrinsic.rs", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/86fd5a02e70707564e82719dbbdf6a822ffe0c32/src%2Flibrustc_trans%2Ftrans%2Fintrinsic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/86fd5a02e70707564e82719dbbdf6a822ffe0c32/src%2Flibrustc_trans%2Ftrans%2Fintrinsic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Ftrans%2Fintrinsic.rs?ref=86fd5a02e70707564e82719dbbdf6a822ffe0c32", "patch": "@@ -609,7 +609,11 @@ pub fn trans_intrinsic_call<'a, 'blk, 'tcx>(mut bcx: Block<'blk, 'tcx>,\n         (_, \"volatile_store\") => {\n             let tp_ty = *substs.types.get(FnSpace, 0);\n             let ptr = to_arg_ty_ptr(bcx, llargs[0], tp_ty);\n-            let val = from_arg_ty(bcx, llargs[1], tp_ty);\n+            let val = if type_is_immediate(bcx.ccx(), tp_ty) {\n+                from_arg_ty(bcx, llargs[1], tp_ty)\n+            } else {\n+                Load(bcx, llargs[1])\n+            };\n             let store = VolatileStore(bcx, val, ptr);\n             unsafe {\n                 llvm::LLVMSetAlignment(store, type_of::align_of(ccx, tp_ty));"}, {"sha": "9a77be049feebbebf3c3d175933fabe5c8eccc2b", "filename": "src/test/run-pass/issue-29663.rs", "status": "added", "additions": 64, "deletions": 0, "changes": 64, "blob_url": "https://github.com/rust-lang/rust/blob/86fd5a02e70707564e82719dbbdf6a822ffe0c32/src%2Ftest%2Frun-pass%2Fissue-29663.rs", "raw_url": "https://github.com/rust-lang/rust/raw/86fd5a02e70707564e82719dbbdf6a822ffe0c32/src%2Ftest%2Frun-pass%2Fissue-29663.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-29663.rs?ref=86fd5a02e70707564e82719dbbdf6a822ffe0c32", "patch": "@@ -0,0 +1,64 @@\n+// Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// write_volatile causes an LLVM assert with composite types\n+\n+#![feature(volatile)]\n+use std::ptr::{read_volatile, write_volatile};\n+\n+#[derive(Debug, Eq, PartialEq)]\n+struct A(u32);\n+#[derive(Debug, Eq, PartialEq)]\n+struct B(u64);\n+#[derive(Debug, Eq, PartialEq)]\n+struct C(u32, u32);\n+#[derive(Debug, Eq, PartialEq)]\n+struct D(u64, u64);\n+#[derive(Debug, Eq, PartialEq)]\n+struct E([u64; 32]);\n+\n+fn main() {\n+    unsafe {\n+        let mut x: u32 = 0;\n+        write_volatile(&mut x, 1);\n+        assert_eq!(read_volatile(&x), 1);\n+        assert_eq!(x, 1);\n+\n+        let mut x: u64 = 0;\n+        write_volatile(&mut x, 1);\n+        assert_eq!(read_volatile(&x), 1);\n+        assert_eq!(x, 1);\n+\n+        let mut x = A(0);\n+        write_volatile(&mut x, A(1));\n+        assert_eq!(read_volatile(&x), A(1));\n+        assert_eq!(x, A(1));\n+\n+        let mut x = B(0);\n+        write_volatile(&mut x, B(1));\n+        assert_eq!(read_volatile(&x), B(1));\n+        assert_eq!(x, B(1));\n+\n+        let mut x = C(0, 0);\n+        write_volatile(&mut x, C(1, 1));\n+        assert_eq!(read_volatile(&x), C(1, 1));\n+        assert_eq!(x, C(1, 1));\n+\n+        let mut x = D(0, 0);\n+        write_volatile(&mut x, D(1, 1));\n+        assert_eq!(read_volatile(&x), D(1, 1));\n+        assert_eq!(x, D(1, 1));\n+\n+        let mut x = E([0; 32]);\n+        write_volatile(&mut x, E([1; 32]));\n+        assert_eq!(read_volatile(&x), E([1; 32]));\n+        assert_eq!(x, E([1; 32]));\n+    }\n+}"}]}