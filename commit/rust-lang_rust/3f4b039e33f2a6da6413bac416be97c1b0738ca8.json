{"sha": "3f4b039e33f2a6da6413bac416be97c1b0738ca8", "node_id": "C_kwDOAAsO6NoAKDNmNGIwMzllMzNmMmE2ZGE2NDEzYmFjNDE2YmU5N2MxYjA3MzhjYTg", "commit": {"author": {"name": "Dylan DPC", "email": "dylan.dpc@gmail.com", "date": "2022-02-23T23:37:06Z"}, "committer": {"name": "Dylan DPC", "email": "dylan.dpc@gmail.com", "date": "2022-02-23T23:37:06Z"}, "message": "word wrpa", "tree": {"sha": "333190eceb9a09df8f4aa1a42a6a30e7561cbe77", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/333190eceb9a09df8f4aa1a42a6a30e7561cbe77"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3f4b039e33f2a6da6413bac416be97c1b0738ca8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3f4b039e33f2a6da6413bac416be97c1b0738ca8", "html_url": "https://github.com/rust-lang/rust/commit/3f4b039e33f2a6da6413bac416be97c1b0738ca8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3f4b039e33f2a6da6413bac416be97c1b0738ca8/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "eb795c24fba3da62570e144b405d7df7cf8f9963", "url": "https://api.github.com/repos/rust-lang/rust/commits/eb795c24fba3da62570e144b405d7df7cf8f9963", "html_url": "https://github.com/rust-lang/rust/commit/eb795c24fba3da62570e144b405d7df7cf8f9963"}], "stats": {"total": 10, "additions": 5, "deletions": 5}, "files": [{"sha": "17e2b97545a94d43878659b6a972ebbb95452267", "filename": "library/std/src/io/error.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/3f4b039e33f2a6da6413bac416be97c1b0738ca8/library%2Fstd%2Fsrc%2Fio%2Ferror.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3f4b039e33f2a6da6413bac416be97c1b0738ca8/library%2Fstd%2Fsrc%2Fio%2Ferror.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fio%2Ferror.rs?ref=3f4b039e33f2a6da6413bac416be97c1b0738ca8", "patch": "@@ -144,13 +144,13 @@ struct Custom {\n ///\n /// # Handling errors and matching on `ErrorKind`\n ///\n-/// In application code, use `match` for the `ErrorKind` values you are \n+/// In application code, use `match` for the `ErrorKind` values you are\n /// expecting; use `_` to match \"all other errors\".\n ///\n-/// In comprehensive and thorough tests that want to verify that a test doesn't \n-/// return any known incorrect error kind, you may want to cut-and-paste the \n-/// current full list of errors from here into your test code, and then match \n-/// `_` as the correct case. This seems counterintuitive, but it will make your \n+/// In comprehensive and thorough tests that want to verify that a test doesn't\n+/// return any known incorrect error kind, you may want to cut-and-paste the\n+/// current full list of errors from here into your test code, and then match\n+/// `_` as the correct case. This seems counterintuitive, but it will make your\n /// tests more robust. In particular, if you want to verify that your code does\n /// produce an unrecognized error kind, the robust solution is to check for all\n /// the recognized error kinds and fail in those cases."}]}