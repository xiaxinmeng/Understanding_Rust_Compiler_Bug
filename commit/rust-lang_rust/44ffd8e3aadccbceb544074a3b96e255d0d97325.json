{"sha": "44ffd8e3aadccbceb544074a3b96e255d0d97325", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ0ZmZkOGUzYWFkY2NiY2ViNTQ0MDc0YTNiOTZlMjU1ZDBkOTczMjU=", "commit": {"author": {"name": "Marijn Haverbeke", "email": "marijnh@gmail.com", "date": "2011-12-09T08:42:09Z"}, "committer": {"name": "Marijn Haverbeke", "email": "marijnh@gmail.com", "date": "2011-12-09T08:42:22Z"}, "message": "Allow type annotations for blocks\n\nI.e. {|foo: int| -> int foo + 2}\n\nIssue #1275", "tree": {"sha": "17b80b745a6bd1ac8171c9a8cff553b5b2bed149", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/17b80b745a6bd1ac8171c9a8cff553b5b2bed149"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/44ffd8e3aadccbceb544074a3b96e255d0d97325", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/44ffd8e3aadccbceb544074a3b96e255d0d97325", "html_url": "https://github.com/rust-lang/rust/commit/44ffd8e3aadccbceb544074a3b96e255d0d97325", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/44ffd8e3aadccbceb544074a3b96e255d0d97325/comments", "author": {"login": "marijnh", "id": 144427, "node_id": "MDQ6VXNlcjE0NDQyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/144427?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marijnh", "html_url": "https://github.com/marijnh", "followers_url": "https://api.github.com/users/marijnh/followers", "following_url": "https://api.github.com/users/marijnh/following{/other_user}", "gists_url": "https://api.github.com/users/marijnh/gists{/gist_id}", "starred_url": "https://api.github.com/users/marijnh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marijnh/subscriptions", "organizations_url": "https://api.github.com/users/marijnh/orgs", "repos_url": "https://api.github.com/users/marijnh/repos", "events_url": "https://api.github.com/users/marijnh/events{/privacy}", "received_events_url": "https://api.github.com/users/marijnh/received_events", "type": "User", "site_admin": false}, "committer": {"login": "marijnh", "id": 144427, "node_id": "MDQ6VXNlcjE0NDQyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/144427?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marijnh", "html_url": "https://github.com/marijnh", "followers_url": "https://api.github.com/users/marijnh/followers", "following_url": "https://api.github.com/users/marijnh/following{/other_user}", "gists_url": "https://api.github.com/users/marijnh/gists{/gist_id}", "starred_url": "https://api.github.com/users/marijnh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marijnh/subscriptions", "organizations_url": "https://api.github.com/users/marijnh/orgs", "repos_url": "https://api.github.com/users/marijnh/repos", "events_url": "https://api.github.com/users/marijnh/events{/privacy}", "received_events_url": "https://api.github.com/users/marijnh/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "54f72fbc10e3846214423d8734c15eebe0228575", "url": "https://api.github.com/repos/rust-lang/rust/commits/54f72fbc10e3846214423d8734c15eebe0228575", "html_url": "https://github.com/rust-lang/rust/commit/54f72fbc10e3846214423d8734c15eebe0228575"}], "stats": {"total": 22, "additions": 12, "deletions": 10}, "files": [{"sha": "7b8bd726eedbedd174aa8afec5e35e9a9702d154", "filename": "src/comp/syntax/parse/parser.rs", "status": "modified", "additions": 8, "deletions": 10, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/44ffd8e3aadccbceb544074a3b96e255d0d97325/src%2Fcomp%2Fsyntax%2Fparse%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/44ffd8e3aadccbceb544074a3b96e255d0d97325/src%2Fcomp%2Fsyntax%2Fparse%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fsyntax%2Fparse%2Fparser.rs?ref=44ffd8e3aadccbceb544074a3b96e255d0d97325", "patch": "@@ -567,7 +567,8 @@ fn parse_arg(p: parser) -> ast::arg {\n fn parse_fn_block_arg(p: parser) -> ast::arg {\n     let m = parse_arg_mode(p);\n     let i = parse_value_ident(p);\n-    let t = @spanned(p.get_lo_pos(), p.get_hi_pos(), ast::ty_infer);\n+    let t = eat(p, token::COLON) ? parse_ty(p, false) :\n+        @spanned(p.get_lo_pos(), p.get_hi_pos(), ast::ty_infer);\n     ret {mode: m, ty: t, ident: i, id: p.get_id()};\n }\n \n@@ -1747,16 +1748,13 @@ fn parse_fn_decl(p: parser, purity: ast::purity, il: ast::inlineness) ->\n }\n \n fn parse_fn_block_decl(p: parser) -> ast::fn_decl {\n-    let inputs =\n-        if p.peek() == token::OROR {\n-            p.bump();\n-            []\n-        } else {\n-            parse_seq(token::BINOP(token::OR), token::BINOP(token::OR),\n-                      seq_sep(token::COMMA), parse_fn_block_arg, p).node\n-        };\n+    let inputs = eat(p, token::OROR) ? [] :\n+        parse_seq(token::BINOP(token::OR), token::BINOP(token::OR),\n+                  seq_sep(token::COMMA), parse_fn_block_arg, p).node;\n+    let output = eat(p, token::RARROW) ? parse_ty(p, false) :\n+        @spanned(p.get_lo_pos(), p.get_hi_pos(), ast::ty_infer);\n     ret {inputs: inputs,\n-         output: @spanned(p.get_lo_pos(), p.get_hi_pos(), ast::ty_infer),\n+         output: output,\n          purity: ast::impure_fn,\n          il: ast::il_normal,\n          cf: ast::return_val,"}, {"sha": "1ed2e207f18377c8db4f4f131dd69fdfdd25acaa", "filename": "src/test/run-pass/block-explicit-types.rs", "status": "added", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/44ffd8e3aadccbceb544074a3b96e255d0d97325/src%2Ftest%2Frun-pass%2Fblock-explicit-types.rs", "raw_url": "https://github.com/rust-lang/rust/raw/44ffd8e3aadccbceb544074a3b96e255d0d97325/src%2Ftest%2Frun-pass%2Fblock-explicit-types.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fblock-explicit-types.rs?ref=44ffd8e3aadccbceb544074a3b96e255d0d97325", "patch": "@@ -0,0 +1,4 @@\n+fn main() {\n+    fn as_buf<T>(s: str, f: block(str) -> T) -> T { f(s) }\n+    as_buf(\"foo\", {|foo: str| -> () log_err foo;});\n+}"}]}