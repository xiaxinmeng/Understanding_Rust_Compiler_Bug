{"sha": "f52f18529a6971476820aa42c75618b4cede8e21", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY1MmYxODUyOWE2OTcxNDc2ODIwYWE0MmM3NTYxOGI0Y2VkZThlMjE=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2019-03-11T06:10:31Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2019-03-11T06:10:31Z"}, "message": "Auto merge of #58788 - matthewjasper:compare-children, r=pnkfelix\n\nMake migrate mode work at item level granularity\n\nMigrate mode now works entirely at the item level rather than the body level,\nensuring that we don't lose any errors in contained closures.\n\nCloses #58776\n\nr? @pnkfelix", "tree": {"sha": "c82f89b7290598e65bd983c81d3cd31b3cbf34da", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c82f89b7290598e65bd983c81d3cd31b3cbf34da"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f52f18529a6971476820aa42c75618b4cede8e21", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f52f18529a6971476820aa42c75618b4cede8e21", "html_url": "https://github.com/rust-lang/rust/commit/f52f18529a6971476820aa42c75618b4cede8e21", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f52f18529a6971476820aa42c75618b4cede8e21/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c2ddf5a1dd54ebe18ffb794e096c28a4ed8e1d16", "url": "https://api.github.com/repos/rust-lang/rust/commits/c2ddf5a1dd54ebe18ffb794e096c28a4ed8e1d16", "html_url": "https://github.com/rust-lang/rust/commit/c2ddf5a1dd54ebe18ffb794e096c28a4ed8e1d16"}, {"sha": "7285b5630b36b3e6aba135f91ded546e82775288", "url": "https://api.github.com/repos/rust-lang/rust/commits/7285b5630b36b3e6aba135f91ded546e82775288", "html_url": "https://github.com/rust-lang/rust/commit/7285b5630b36b3e6aba135f91ded546e82775288"}], "stats": {"total": 154, "additions": 129, "deletions": 25}, "files": [{"sha": "8ada67efaafdd3048c871095a1ccd73d2e15afbc", "filename": "src/librustc/middle/expr_use_visitor.rs", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/f52f18529a6971476820aa42c75618b4cede8e21/src%2Flibrustc%2Fmiddle%2Fexpr_use_visitor.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f52f18529a6971476820aa42c75618b4cede8e21/src%2Flibrustc%2Fmiddle%2Fexpr_use_visitor.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fexpr_use_visitor.rs?ref=f52f18529a6971476820aa42c75618b4cede8e21", "patch": "@@ -82,6 +82,9 @@ pub trait Delegate<'tcx> {\n               assignment_span: Span,\n               assignee_cmt: &mc::cmt_<'tcx>,\n               mode: MutateMode);\n+\n+    // A nested closure or generator - only one layer deep.\n+    fn nested_body(&mut self, _body_id: hir::BodyId) {}\n }\n \n #[derive(Copy, Clone, PartialEq, Debug)]\n@@ -531,8 +534,9 @@ impl<'a, 'gcx, 'tcx> ExprUseVisitor<'a, 'gcx, 'tcx> {\n                 self.consume_expr(&base);\n             }\n \n-            hir::ExprKind::Closure(.., fn_decl_span, _) => {\n-                self.walk_captures(expr, fn_decl_span)\n+            hir::ExprKind::Closure(_, _, body_id, fn_decl_span, _) => {\n+                self.delegate.nested_body(body_id);\n+                self.walk_captures(expr, fn_decl_span);\n             }\n \n             hir::ExprKind::Box(ref base) => {"}, {"sha": "1e3364ecb9a3473998d2a280e54182bf76806352", "filename": "src/librustc_borrowck/borrowck/gather_loans/mod.rs", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/f52f18529a6971476820aa42c75618b4cede8e21/src%2Flibrustc_borrowck%2Fborrowck%2Fgather_loans%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f52f18529a6971476820aa42c75618b4cede8e21/src%2Flibrustc_borrowck%2Fborrowck%2Fgather_loans%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_borrowck%2Fborrowck%2Fgather_loans%2Fmod.rs?ref=f52f18529a6971476820aa42c75618b4cede8e21", "patch": "@@ -153,6 +153,24 @@ impl<'a, 'tcx> euv::Delegate<'tcx> for GatherLoanCtxt<'a, 'tcx> {\n                      .node_type(id);\n         gather_moves::gather_decl(self.bccx, &self.move_data, id, ty);\n     }\n+\n+    fn nested_body(&mut self, body_id: hir::BodyId) {\n+        debug!(\"nested_body(body_id={:?})\", body_id);\n+        // rust-lang/rust#58776: MIR and AST borrow check disagree on where\n+        // certain closure errors are reported. As such migrate borrowck has to\n+        // operate at the level of items, rather than bodies. Check if the\n+        // contained closure had any errors and set `signalled_any_error` if it\n+        // has.\n+        let bccx = self.bccx;\n+        if bccx.tcx.migrate_borrowck() {\n+            if let SignalledError::NoErrorsSeen = bccx.signalled_any_error.get() {\n+                let closure_def_id = bccx.tcx.hir().body_owner_def_id(body_id);\n+                debug!(\"checking closure: {:?}\", closure_def_id);\n+\n+                bccx.signalled_any_error.set(bccx.tcx.borrowck(closure_def_id).signalled_any_error);\n+            }\n+        }\n+    }\n }\n \n /// Implements the A-* rules in README.md."}, {"sha": "0bdf44c2ae0493ee2b3c50ec032143497ec12b05", "filename": "src/librustc_mir/borrow_check/mod.rs", "status": "modified", "additions": 5, "deletions": 23, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/f52f18529a6971476820aa42c75618b4cede8e21/src%2Flibrustc_mir%2Fborrow_check%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f52f18529a6971476820aa42c75618b4cede8e21/src%2Flibrustc_mir%2Fborrow_check%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Fmod.rs?ref=f52f18529a6971476820aa42c75618b4cede8e21", "patch": "@@ -329,30 +329,12 @@ fn do_mir_borrowck<'a, 'gcx, 'tcx>(\n             // When borrowck=migrate, check if AST-borrowck would\n             // error on the given code.\n \n-            // rust-lang/rust#55492: loop over parents to ensure that\n-            // errors that AST-borrowck only detects in some parent of\n-            // a closure still allows NLL to signal an error.\n-            let mut curr_def_id = def_id;\n-            let signalled_any_error = loop {\n-                match tcx.borrowck(curr_def_id).signalled_any_error {\n-                    SignalledError::NoErrorsSeen => {\n-                        // keep traversing (and borrow-checking) parents\n-                    }\n-                    SignalledError::SawSomeError => {\n-                        // stop search here\n-                        break SignalledError::SawSomeError;\n-                    }\n-                }\n-\n-                if tcx.is_closure(curr_def_id) {\n-                    curr_def_id = tcx.parent_def_id(curr_def_id)\n-                        .expect(\"a closure must have a parent_def_id\");\n-                } else {\n-                    break SignalledError::NoErrorsSeen;\n-                }\n-            };\n+            // rust-lang/rust#55492, rust-lang/rust#58776 check the base def id\n+            // for errors. AST borrowck is responsible for aggregating\n+            // `signalled_any_error` from all of the nested closures here.\n+            let base_def_id = tcx.closure_base_def_id(def_id);\n \n-            match signalled_any_error {\n+            match tcx.borrowck(base_def_id).signalled_any_error {\n                 SignalledError::NoErrorsSeen => {\n                     // if AST-borrowck signalled no errors, then\n                     // downgrade all the buffered MIR-borrowck errors"}, {"sha": "9e0b0aac1e3c6e9c46feb7115ad97d4eb372918c", "filename": "src/test/ui/borrowck/issue-58776-borrowck-scans-children.ast.stderr", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/f52f18529a6971476820aa42c75618b4cede8e21/src%2Ftest%2Fui%2Fborrowck%2Fissue-58776-borrowck-scans-children.ast.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f52f18529a6971476820aa42c75618b4cede8e21/src%2Ftest%2Fui%2Fborrowck%2Fissue-58776-borrowck-scans-children.ast.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fborrowck%2Fissue-58776-borrowck-scans-children.ast.stderr?ref=f52f18529a6971476820aa42c75618b4cede8e21", "patch": "@@ -0,0 +1,15 @@\n+error[E0597]: `**greeting` does not live long enough\n+  --> $DIR/issue-58776-borrowck-scans-children.rs:10:24\n+   |\n+LL |     let res = (|| (|| &greeting)())();\n+   |                    --  ^^^^^^^^     - borrowed value only lives until here\n+   |                    |   |\n+   |                    |   borrowed value does not live long enough\n+   |                    capture occurs here\n+...\n+LL | }\n+   | - borrowed value needs to live until here\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0597`."}, {"sha": "bd8f2286f170cbaff9bcce56482e8f888dc367db", "filename": "src/test/ui/borrowck/issue-58776-borrowck-scans-children.migrate.stderr", "status": "added", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/f52f18529a6971476820aa42c75618b4cede8e21/src%2Ftest%2Fui%2Fborrowck%2Fissue-58776-borrowck-scans-children.migrate.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f52f18529a6971476820aa42c75618b4cede8e21/src%2Ftest%2Fui%2Fborrowck%2Fissue-58776-borrowck-scans-children.migrate.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fborrowck%2Fissue-58776-borrowck-scans-children.migrate.stderr?ref=f52f18529a6971476820aa42c75618b4cede8e21", "patch": "@@ -0,0 +1,32 @@\n+error[E0506]: cannot assign to `greeting` because it is borrowed\n+  --> $DIR/issue-58776-borrowck-scans-children.rs:13:5\n+   |\n+LL |     let res = (|| (|| &greeting)())();\n+   |                --      -------- borrow occurs due to use in closure\n+   |                |\n+   |                borrow of `greeting` occurs here\n+...\n+LL |     greeting = \"DEALLOCATED\".to_string();\n+   |     ^^^^^^^^ assignment to borrowed `greeting` occurs here\n+...\n+LL |     println!(\"thread result: {:?}\", res);\n+   |                                     --- borrow later used here\n+\n+error[E0505]: cannot move out of `greeting` because it is borrowed\n+  --> $DIR/issue-58776-borrowck-scans-children.rs:16:10\n+   |\n+LL |     let res = (|| (|| &greeting)())();\n+   |                --      -------- borrow occurs due to use in closure\n+   |                |\n+   |                borrow of `greeting` occurs here\n+...\n+LL |     drop(greeting);\n+   |          ^^^^^^^^ move out of `greeting` occurs here\n+...\n+LL |     println!(\"thread result: {:?}\", res);\n+   |                                     --- borrow later used here\n+\n+error: aborting due to 2 previous errors\n+\n+Some errors occurred: E0505, E0506.\n+For more information about an error, try `rustc --explain E0505`."}, {"sha": "bd8f2286f170cbaff9bcce56482e8f888dc367db", "filename": "src/test/ui/borrowck/issue-58776-borrowck-scans-children.nll.stderr", "status": "added", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/f52f18529a6971476820aa42c75618b4cede8e21/src%2Ftest%2Fui%2Fborrowck%2Fissue-58776-borrowck-scans-children.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f52f18529a6971476820aa42c75618b4cede8e21/src%2Ftest%2Fui%2Fborrowck%2Fissue-58776-borrowck-scans-children.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fborrowck%2Fissue-58776-borrowck-scans-children.nll.stderr?ref=f52f18529a6971476820aa42c75618b4cede8e21", "patch": "@@ -0,0 +1,32 @@\n+error[E0506]: cannot assign to `greeting` because it is borrowed\n+  --> $DIR/issue-58776-borrowck-scans-children.rs:13:5\n+   |\n+LL |     let res = (|| (|| &greeting)())();\n+   |                --      -------- borrow occurs due to use in closure\n+   |                |\n+   |                borrow of `greeting` occurs here\n+...\n+LL |     greeting = \"DEALLOCATED\".to_string();\n+   |     ^^^^^^^^ assignment to borrowed `greeting` occurs here\n+...\n+LL |     println!(\"thread result: {:?}\", res);\n+   |                                     --- borrow later used here\n+\n+error[E0505]: cannot move out of `greeting` because it is borrowed\n+  --> $DIR/issue-58776-borrowck-scans-children.rs:16:10\n+   |\n+LL |     let res = (|| (|| &greeting)())();\n+   |                --      -------- borrow occurs due to use in closure\n+   |                |\n+   |                borrow of `greeting` occurs here\n+...\n+LL |     drop(greeting);\n+   |          ^^^^^^^^ move out of `greeting` occurs here\n+...\n+LL |     println!(\"thread result: {:?}\", res);\n+   |                                     --- borrow later used here\n+\n+error: aborting due to 2 previous errors\n+\n+Some errors occurred: E0505, E0506.\n+For more information about an error, try `rustc --explain E0505`."}, {"sha": "378969f9a1867fcf7eae6ec19f19333d6fa426b9", "filename": "src/test/ui/borrowck/issue-58776-borrowck-scans-children.rs", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/f52f18529a6971476820aa42c75618b4cede8e21/src%2Ftest%2Fui%2Fborrowck%2Fissue-58776-borrowck-scans-children.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f52f18529a6971476820aa42c75618b4cede8e21/src%2Ftest%2Fui%2Fborrowck%2Fissue-58776-borrowck-scans-children.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fborrowck%2Fissue-58776-borrowck-scans-children.rs?ref=f52f18529a6971476820aa42c75618b4cede8e21", "patch": "@@ -0,0 +1,21 @@\n+// ignore-compare-mode-nll\n+\n+// revisions: ast migrate nll\n+\n+//[migrate]compile-flags: -Z borrowck=migrate\n+#![cfg_attr(nll, feature(nll))]\n+\n+fn main() {\n+    let mut greeting = \"Hello world!\".to_string();\n+    let res = (|| (|| &greeting)())();\n+    //[ast]~^ ERROR does not live long enough\n+\n+    greeting = \"DEALLOCATED\".to_string();\n+    //[migrate]~^ ERROR cannot assign\n+    //[nll]~^^ ERROR cannot assign\n+    drop(greeting);\n+    //[migrate]~^ ERROR cannot move\n+    //[nll]~^^ ERROR cannot move\n+\n+    println!(\"thread result: {:?}\", res);\n+}"}]}