{"sha": "f196e27d87cf2be019098c7562b4c2cf26566680", "node_id": "C_kwDOAAsO6NoAKGYxOTZlMjdkODdjZjJiZTAxOTA5OGM3NTYyYjRjMmNmMjY1NjY2ODA", "commit": {"author": {"name": "SparrowLii", "email": "liyuan179@huawei.com", "date": "2023-03-14T12:31:58Z"}, "committer": {"name": "SparrowLii", "email": "liyuan179@huawei.com", "date": "2023-05-06T01:34:22Z"}, "message": "fix `parallel!`", "tree": {"sha": "62fa0d47970025b9059803363c6c87252b511c65", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/62fa0d47970025b9059803363c6c87252b511c65"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f196e27d87cf2be019098c7562b4c2cf26566680", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f196e27d87cf2be019098c7562b4c2cf26566680", "html_url": "https://github.com/rust-lang/rust/commit/f196e27d87cf2be019098c7562b4c2cf26566680", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f196e27d87cf2be019098c7562b4c2cf26566680/comments", "author": {"login": "SparrowLii", "id": 68270294, "node_id": "MDQ6VXNlcjY4MjcwMjk0", "avatar_url": "https://avatars.githubusercontent.com/u/68270294?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SparrowLii", "html_url": "https://github.com/SparrowLii", "followers_url": "https://api.github.com/users/SparrowLii/followers", "following_url": "https://api.github.com/users/SparrowLii/following{/other_user}", "gists_url": "https://api.github.com/users/SparrowLii/gists{/gist_id}", "starred_url": "https://api.github.com/users/SparrowLii/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SparrowLii/subscriptions", "organizations_url": "https://api.github.com/users/SparrowLii/orgs", "repos_url": "https://api.github.com/users/SparrowLii/repos", "events_url": "https://api.github.com/users/SparrowLii/events{/privacy}", "received_events_url": "https://api.github.com/users/SparrowLii/received_events", "type": "User", "site_admin": false}, "committer": {"login": "SparrowLii", "id": 68270294, "node_id": "MDQ6VXNlcjY4MjcwMjk0", "avatar_url": "https://avatars.githubusercontent.com/u/68270294?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SparrowLii", "html_url": "https://github.com/SparrowLii", "followers_url": "https://api.github.com/users/SparrowLii/followers", "following_url": "https://api.github.com/users/SparrowLii/following{/other_user}", "gists_url": "https://api.github.com/users/SparrowLii/gists{/gist_id}", "starred_url": "https://api.github.com/users/SparrowLii/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SparrowLii/subscriptions", "organizations_url": "https://api.github.com/users/SparrowLii/orgs", "repos_url": "https://api.github.com/users/SparrowLii/repos", "events_url": "https://api.github.com/users/SparrowLii/events{/privacy}", "received_events_url": "https://api.github.com/users/SparrowLii/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "261b727d7626506f0eabb88e99c9d6a27b2a4f24", "url": "https://api.github.com/repos/rust-lang/rust/commits/261b727d7626506f0eabb88e99c9d6a27b2a4f24", "html_url": "https://github.com/rust-lang/rust/commit/261b727d7626506f0eabb88e99c9d6a27b2a4f24"}], "stats": {"total": 7, "additions": 7, "deletions": 0}, "files": [{"sha": "f30235572d01fc31134560a374de6ccce3df389d", "filename": "compiler/rustc_data_structures/src/sync.rs", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/f196e27d87cf2be019098c7562b4c2cf26566680/compiler%2Frustc_data_structures%2Fsrc%2Fsync.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f196e27d87cf2be019098c7562b4c2cf26566680/compiler%2Frustc_data_structures%2Fsrc%2Fsync.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_data_structures%2Fsrc%2Fsync.rs?ref=f196e27d87cf2be019098c7562b4c2cf26566680", "patch": "@@ -402,6 +402,13 @@ cfg_if! {\n                     // We catch panics here ensuring that all the blocks execute.\n                     // This makes behavior consistent with the parallel compiler.\n                     let mut panic = None;\n+                    if let Err(p) = ::std::panic::catch_unwind(\n+                        ::std::panic::AssertUnwindSafe(|| $fblock)\n+                    ) {\n+                        if panic.is_none() {\n+                            panic = Some(p);\n+                        }\n+                    }\n                     $(\n                         if let Err(p) = ::std::panic::catch_unwind(\n                             ::std::panic::AssertUnwindSafe(|| $blocks)"}]}