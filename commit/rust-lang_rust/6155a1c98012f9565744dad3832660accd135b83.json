{"sha": "6155a1c98012f9565744dad3832660accd135b83", "node_id": "MDY6Q29tbWl0NzI0NzEyOjYxNTVhMWM5ODAxMmY5NTY1NzQ0ZGFkMzgzMjY2MGFjY2QxMzViODM=", "commit": {"author": {"name": "Huon Wilson", "email": "dbau.pp+github@gmail.com", "date": "2013-12-07T12:13:37Z"}, "committer": {"name": "Huon Wilson", "email": "dbau.pp+github@gmail.com", "date": "2013-12-08T11:12:58Z"}, "message": "std::rand: implement the F distribution.", "tree": {"sha": "077fc2ff1861fc248eb278b089ca46112d7ee755", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/077fc2ff1861fc248eb278b089ca46112d7ee755"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6155a1c98012f9565744dad3832660accd135b83", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6155a1c98012f9565744dad3832660accd135b83", "html_url": "https://github.com/rust-lang/rust/commit/6155a1c98012f9565744dad3832660accd135b83", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6155a1c98012f9565744dad3832660accd135b83/comments", "author": {"login": "huonw", "id": 1203825, "node_id": "MDQ6VXNlcjEyMDM4MjU=", "avatar_url": "https://avatars.githubusercontent.com/u/1203825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/huonw", "html_url": "https://github.com/huonw", "followers_url": "https://api.github.com/users/huonw/followers", "following_url": "https://api.github.com/users/huonw/following{/other_user}", "gists_url": "https://api.github.com/users/huonw/gists{/gist_id}", "starred_url": "https://api.github.com/users/huonw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/huonw/subscriptions", "organizations_url": "https://api.github.com/users/huonw/orgs", "repos_url": "https://api.github.com/users/huonw/repos", "events_url": "https://api.github.com/users/huonw/events{/privacy}", "received_events_url": "https://api.github.com/users/huonw/received_events", "type": "User", "site_admin": false}, "committer": {"login": "huonw", "id": 1203825, "node_id": "MDQ6VXNlcjEyMDM4MjU=", "avatar_url": "https://avatars.githubusercontent.com/u/1203825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/huonw", "html_url": "https://github.com/huonw", "followers_url": "https://api.github.com/users/huonw/followers", "following_url": "https://api.github.com/users/huonw/following{/other_user}", "gists_url": "https://api.github.com/users/huonw/gists{/gist_id}", "starred_url": "https://api.github.com/users/huonw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/huonw/subscriptions", "organizations_url": "https://api.github.com/users/huonw/orgs", "repos_url": "https://api.github.com/users/huonw/repos", "events_url": "https://api.github.com/users/huonw/events{/privacy}", "received_events_url": "https://api.github.com/users/huonw/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1ee42912e1c83106082012e9c23090934be4ae69", "url": "https://api.github.com/repos/rust-lang/rust/commits/1ee42912e1c83106082012e9c23090934be4ae69", "html_url": "https://github.com/rust-lang/rust/commit/1ee42912e1c83106082012e9c23090934be4ae69"}], "stats": {"total": 61, "additions": 60, "deletions": 1}, "files": [{"sha": "dec0d3922d32687d78ecb0328ebe69ef7a04603e", "filename": "src/libstd/rand/distributions/gamma.rs", "status": "modified", "additions": 59, "deletions": 0, "changes": 59, "blob_url": "https://github.com/rust-lang/rust/blob/6155a1c98012f9565744dad3832660accd135b83/src%2Flibstd%2Frand%2Fdistributions%2Fgamma.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6155a1c98012f9565744dad3832660accd135b83/src%2Flibstd%2Frand%2Fdistributions%2Fgamma.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Frand%2Fdistributions%2Fgamma.rs?ref=6155a1c98012f9565744dad3832660accd135b83", "patch": "@@ -225,6 +225,55 @@ impl IndependentSample<f64> for ChiSquared {\n     }\n }\n \n+/// The Fisher F distribution `F(m, n)`.\n+///\n+/// This distribution is equivalent to the ratio of two normalised\n+/// chi-squared distributions, that is, `F(m,n) = (\u03c7\u00b2(m)/m) /\n+/// (\u03c7\u00b2(n)/n)`.\n+///\n+/// # Example\n+///\n+/// ```rust\n+/// use std::rand;\n+/// use std::rand::distributions::{FisherF, IndependentSample};\n+///\n+/// fn main() {\n+///     let f = FisherF::new(2.0, 32.0);\n+///     let v = f.ind_sample(&mut rand::task_rng());\n+///     println!(\"{} is from an F(2, 32) distribution\", v)\n+/// }\n+/// ```\n+pub struct FisherF {\n+    priv numer: ChiSquared,\n+    priv denom: ChiSquared,\n+    // denom_dof / numer_dof so that this can just be a straight\n+    // multiplication, rather than a division.\n+    priv dof_ratio: f64,\n+}\n+\n+impl FisherF {\n+    /// Create a new `FisherF` distribution, with the given\n+    /// parameter. Fails if either `m` or `n` are not positive.\n+    pub fn new(m: f64, n: f64) -> FisherF {\n+        assert!(m > 0.0, \"FisherF::new called with `m < 0`\");\n+        assert!(n > 0.0, \"FisherF::new called with `n < 0`\");\n+\n+        FisherF {\n+            numer: ChiSquared::new(m),\n+            denom: ChiSquared::new(n),\n+            dof_ratio: n / m\n+        }\n+    }\n+}\n+impl Sample<f64> for FisherF {\n+    fn sample<R: Rng>(&mut self, rng: &mut R) -> f64 { self.ind_sample(rng) }\n+}\n+impl IndependentSample<f64> for FisherF {\n+    fn ind_sample<R: Rng>(&self, rng: &mut R) -> f64 {\n+        self.numer.ind_sample(rng) / self.denom.ind_sample(rng) * self.dof_ratio\n+    }\n+}\n+\n #[cfg(test)]\n mod test {\n     use rand::*;\n@@ -264,6 +313,16 @@ mod test {\n     fn test_log_normal_invalid_dof() {\n         ChiSquared::new(-1.0);\n     }\n+\n+    #[test]\n+    fn test_f() {\n+        let mut f = FisherF::new(2.0, 32.0);\n+        let mut rng = task_rng();\n+        for _ in range(0, 1000) {\n+            f.sample(&mut rng);\n+            f.ind_sample(&mut rng);\n+        }\n+    }\n }\n \n #[cfg(test)]"}, {"sha": "261b77fb245624d3b4ef7030f78ff21b94c1d55f", "filename": "src/libstd/rand/distributions/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6155a1c98012f9565744dad3832660accd135b83/src%2Flibstd%2Frand%2Fdistributions%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6155a1c98012f9565744dad3832660accd135b83/src%2Flibstd%2Frand%2Fdistributions%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Frand%2Fdistributions%2Fmod.rs?ref=6155a1c98012f9565744dad3832660accd135b83", "patch": "@@ -27,7 +27,7 @@ use rand::{Rng, Rand};\n use clone::Clone;\n \n pub use self::range::Range;\n-pub use self::gamma::{Gamma, ChiSquared};\n+pub use self::gamma::{Gamma, ChiSquared, FisherF};\n pub use self::normal::{Normal, LogNormal};\n pub use self::exponential::Exp;\n "}]}