{"sha": "0f3e2f68d3dd3f59a306d9bb0e95ce0148b0c52b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBmM2UyZjY4ZDNkZDNmNTlhMzA2ZDliYjBlOTVjZTAxNDhiMGM1MmI=", "commit": {"author": {"name": "Camelid", "email": "camelidcamel@gmail.com", "date": "2021-02-08T03:42:12Z"}, "committer": {"name": "Camelid", "email": "camelidcamel@gmail.com", "date": "2021-02-08T03:42:12Z"}, "message": "Clarify docs for `DUMMY_NODE_ID`", "tree": {"sha": "e1379cd15741f7b7e1df8ba989fde2d632bbeeda", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e1379cd15741f7b7e1df8ba989fde2d632bbeeda"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0f3e2f68d3dd3f59a306d9bb0e95ce0148b0c52b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0f3e2f68d3dd3f59a306d9bb0e95ce0148b0c52b", "html_url": "https://github.com/rust-lang/rust/commit/0f3e2f68d3dd3f59a306d9bb0e95ce0148b0c52b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0f3e2f68d3dd3f59a306d9bb0e95ce0148b0c52b/comments", "author": {"login": "camelid", "id": 37223377, "node_id": "MDQ6VXNlcjM3MjIzMzc3", "avatar_url": "https://avatars.githubusercontent.com/u/37223377?v=4", "gravatar_id": "", "url": "https://api.github.com/users/camelid", "html_url": "https://github.com/camelid", "followers_url": "https://api.github.com/users/camelid/followers", "following_url": "https://api.github.com/users/camelid/following{/other_user}", "gists_url": "https://api.github.com/users/camelid/gists{/gist_id}", "starred_url": "https://api.github.com/users/camelid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/camelid/subscriptions", "organizations_url": "https://api.github.com/users/camelid/orgs", "repos_url": "https://api.github.com/users/camelid/repos", "events_url": "https://api.github.com/users/camelid/events{/privacy}", "received_events_url": "https://api.github.com/users/camelid/received_events", "type": "User", "site_admin": false}, "committer": {"login": "camelid", "id": 37223377, "node_id": "MDQ6VXNlcjM3MjIzMzc3", "avatar_url": "https://avatars.githubusercontent.com/u/37223377?v=4", "gravatar_id": "", "url": "https://api.github.com/users/camelid", "html_url": "https://github.com/camelid", "followers_url": "https://api.github.com/users/camelid/followers", "following_url": "https://api.github.com/users/camelid/following{/other_user}", "gists_url": "https://api.github.com/users/camelid/gists{/gist_id}", "starred_url": "https://api.github.com/users/camelid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/camelid/subscriptions", "organizations_url": "https://api.github.com/users/camelid/orgs", "repos_url": "https://api.github.com/users/camelid/repos", "events_url": "https://api.github.com/users/camelid/events{/privacy}", "received_events_url": "https://api.github.com/users/camelid/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2af4a014502832ff961d2efb6cc6d737f0c80ffb", "url": "https://api.github.com/repos/rust-lang/rust/commits/2af4a014502832ff961d2efb6cc6d737f0c80ffb", "html_url": "https://github.com/rust-lang/rust/commit/2af4a014502832ff961d2efb6cc6d737f0c80ffb"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "d20bace6088826890e2ecfb23df75637ff2c209f", "filename": "compiler/rustc_ast/src/node_id.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/0f3e2f68d3dd3f59a306d9bb0e95ce0148b0c52b/compiler%2Frustc_ast%2Fsrc%2Fnode_id.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f3e2f68d3dd3f59a306d9bb0e95ce0148b0c52b/compiler%2Frustc_ast%2Fsrc%2Fnode_id.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_ast%2Fsrc%2Fnode_id.rs?ref=0f3e2f68d3dd3f59a306d9bb0e95ce0148b0c52b", "patch": "@@ -18,9 +18,9 @@ rustc_data_structures::define_id_collections!(NodeMap, NodeSet, NodeId);\n /// The [`NodeId`] used to represent the root of the crate.\n pub const CRATE_NODE_ID: NodeId = NodeId::from_u32(0);\n \n-/// When parsing and doing expansions, we initially give all AST nodes this AST\n-/// [`NodeId`]. Then later, during expansion, we renumber them to have small,\n-/// positive IDs.\n+/// When parsing and at the beginning of doing expansions, we initially give all AST nodes\n+/// this dummy AST [`NodeId`]. Then, during a later phase of expansion, we renumber them\n+/// to have small, positive IDs.\n pub const DUMMY_NODE_ID: NodeId = NodeId::MAX;\n \n impl NodeId {"}]}