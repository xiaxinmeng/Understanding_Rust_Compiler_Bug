{"sha": "2433526809644fd8990773b32a6c6e7286d20a95", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI0MzM1MjY4MDk2NDRmZDg5OTA3NzNiMzJhNmM2ZTcyODZkMjBhOTU=", "commit": {"author": {"name": "Michael Hewson", "email": "michael@michaelhewson.ca", "date": "2018-12-19T23:27:58Z"}, "committer": {"name": "Michael Hewson", "email": "michael@michaelhewson.ca", "date": "2019-01-04T22:43:18Z"}, "message": "use `delay_span_bug` instead of `bug!` when doing layout sanity check\n\nIt's possible that `is_object_safe` is called on a trait that is ill-formed, and we shouldn't ICE unless there are no errors being raised. Using `delay_span_bug` solves this.\n\nfixes #56806", "tree": {"sha": "fd1176f8e64d02d39a0ed4538ba21e67ecff6cd7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fd1176f8e64d02d39a0ed4538ba21e67ecff6cd7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2433526809644fd8990773b32a6c6e7286d20a95", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2433526809644fd8990773b32a6c6e7286d20a95", "html_url": "https://github.com/rust-lang/rust/commit/2433526809644fd8990773b32a6c6e7286d20a95", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2433526809644fd8990773b32a6c6e7286d20a95/comments", "author": {"login": "mikeyhew", "id": 6751033, "node_id": "MDQ6VXNlcjY3NTEwMzM=", "avatar_url": "https://avatars.githubusercontent.com/u/6751033?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mikeyhew", "html_url": "https://github.com/mikeyhew", "followers_url": "https://api.github.com/users/mikeyhew/followers", "following_url": "https://api.github.com/users/mikeyhew/following{/other_user}", "gists_url": "https://api.github.com/users/mikeyhew/gists{/gist_id}", "starred_url": "https://api.github.com/users/mikeyhew/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mikeyhew/subscriptions", "organizations_url": "https://api.github.com/users/mikeyhew/orgs", "repos_url": "https://api.github.com/users/mikeyhew/repos", "events_url": "https://api.github.com/users/mikeyhew/events{/privacy}", "received_events_url": "https://api.github.com/users/mikeyhew/received_events", "type": "User", "site_admin": false}, "committer": {"login": "mikeyhew", "id": 6751033, "node_id": "MDQ6VXNlcjY3NTEwMzM=", "avatar_url": "https://avatars.githubusercontent.com/u/6751033?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mikeyhew", "html_url": "https://github.com/mikeyhew", "followers_url": "https://api.github.com/users/mikeyhew/followers", "following_url": "https://api.github.com/users/mikeyhew/following{/other_user}", "gists_url": "https://api.github.com/users/mikeyhew/gists{/gist_id}", "starred_url": "https://api.github.com/users/mikeyhew/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mikeyhew/subscriptions", "organizations_url": "https://api.github.com/users/mikeyhew/orgs", "repos_url": "https://api.github.com/users/mikeyhew/repos", "events_url": "https://api.github.com/users/mikeyhew/events{/privacy}", "received_events_url": "https://api.github.com/users/mikeyhew/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9723a495d4aeda267b5657750bf0f7f4436af507", "url": "https://api.github.com/repos/rust-lang/rust/commits/9723a495d4aeda267b5657750bf0f7f4436af507", "html_url": "https://github.com/rust-lang/rust/commit/9723a495d4aeda267b5657750bf0f7f4436af507"}], "stats": {"total": 42, "additions": 37, "deletions": 5}, "files": [{"sha": "3005a13e6644f62b819399d49b883efb65a030c9", "filename": "src/librustc/traits/object_safety.rs", "status": "modified", "additions": 18, "deletions": 5, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/2433526809644fd8990773b32a6c6e7286d20a95/src%2Flibrustc%2Ftraits%2Fobject_safety.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2433526809644fd8990773b32a6c6e7286d20a95/src%2Flibrustc%2Ftraits%2Fobject_safety.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Ftraits%2Fobject_safety.rs?ref=2433526809644fd8990773b32a6c6e7286d20a95", "patch": "@@ -369,7 +369,15 @@ impl<'a, 'tcx> TyCtxt<'a, 'tcx, 'tcx> {\n \n                 match abi_of_ty(unit_receiver_ty) {\n                     &Abi::Scalar(..) => (),\n-                    abi => bug!(\"Receiver when Self = () should have a Scalar ABI, found {:?}\", abi)\n+                    abi => {\n+                        self.sess.delay_span_bug(\n+                            self.def_span(method.def_id),\n+                            &format!(\n+                                \"Receiver when Self = () should have a Scalar ABI, found {:?}\",\n+                                abi\n+                            ),\n+                        );\n+                    }\n                 }\n \n                 let trait_object_ty = self.object_ty_for_trait(\n@@ -383,10 +391,15 @@ impl<'a, 'tcx> TyCtxt<'a, 'tcx, 'tcx> {\n \n                 match abi_of_ty(trait_object_receiver) {\n                     &Abi::ScalarPair(..) => (),\n-                    abi => bug!(\n-                        \"Receiver when Self = {} should have a ScalarPair ABI, found {:?}\",\n-                        trait_object_ty, abi\n-                    )\n+                    abi => {\n+                        self.sess.delay_span_bug(\n+                            self.def_span(method.def_id),\n+                            &format!(\n+                                \"Receiver when Self = {} should have a ScalarPair ABI, found {:?}\",\n+                                trait_object_ty, abi\n+                            ),\n+                        );\n+                    }\n                 }\n             }\n         }"}, {"sha": "b6454e578e6af22b8f4fd438efdccd4a5cc3a416", "filename": "src/test/ui/issues/issue-56806.rs", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/2433526809644fd8990773b32a6c6e7286d20a95/src%2Ftest%2Fui%2Fissues%2Fissue-56806.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2433526809644fd8990773b32a6c6e7286d20a95/src%2Ftest%2Fui%2Fissues%2Fissue-56806.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-56806.rs?ref=2433526809644fd8990773b32a6c6e7286d20a95", "patch": "@@ -0,0 +1,7 @@\n+pub trait Trait {\n+    fn dyn_instead_of_self(self: Box<dyn Trait>);\n+    //~^ ERROR invalid method receiver type: std::boxed::Box<(dyn Trait + 'static)>\n+}\n+\n+pub fn main() {\n+}"}, {"sha": "2dd3add8f60e61aa9cbb57d90b26653bea8a5026", "filename": "src/test/ui/issues/issue-56806.stderr", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/2433526809644fd8990773b32a6c6e7286d20a95/src%2Ftest%2Fui%2Fissues%2Fissue-56806.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/2433526809644fd8990773b32a6c6e7286d20a95/src%2Ftest%2Fui%2Fissues%2Fissue-56806.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-56806.stderr?ref=2433526809644fd8990773b32a6c6e7286d20a95", "patch": "@@ -0,0 +1,12 @@\n+error[E0307]: invalid method receiver type: std::boxed::Box<(dyn Trait + 'static)>\n+  --> $DIR/issue-56806.rs:2:34\n+   |\n+LL |     fn dyn_instead_of_self(self: Box<dyn Trait>);\n+   |                                  ^^^^^^^^^^^^^^\n+   |\n+   = note: type must be `Self` or a type that dereferences to it\n+   = help: consider changing to `self`, `&self`, `&mut self`, or `self: Box<Self>`\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0307`."}]}