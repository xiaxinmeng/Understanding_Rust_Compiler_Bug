{"sha": "ca82264ec7556a6011b9d3f1b2fd4c7cd0bc8ae2", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNhODIyNjRlYzc1NTZhNjAxMWI5ZDNmMWIyZmQ0YzdjZDBiYzhhZTI=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-05-09T19:01:05Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-05-09T19:01:05Z"}, "message": "Auto merge of #85065 - Mark-Simulacrum:preds-no-alloc, r=jackh726\n\nAvoid predecessors having Drop impls\n\nShould be a simple win - but let's make sure with perf.", "tree": {"sha": "949dfa0eed9b9930e3229f1e6dbcbc5ebf4aed86", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/949dfa0eed9b9930e3229f1e6dbcbc5ebf4aed86"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ca82264ec7556a6011b9d3f1b2fd4c7cd0bc8ae2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ca82264ec7556a6011b9d3f1b2fd4c7cd0bc8ae2", "html_url": "https://github.com/rust-lang/rust/commit/ca82264ec7556a6011b9d3f1b2fd4c7cd0bc8ae2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ca82264ec7556a6011b9d3f1b2fd4c7cd0bc8ae2/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7a2f4468892a9bf694b844f1fa1032779320c7e5", "url": "https://api.github.com/repos/rust-lang/rust/commits/7a2f4468892a9bf694b844f1fa1032779320c7e5", "html_url": "https://github.com/rust-lang/rust/commit/7a2f4468892a9bf694b844f1fa1032779320c7e5"}, {"sha": "0367e24f944e5e3241a548ca2e9472f24cab3566", "url": "https://api.github.com/repos/rust-lang/rust/commits/0367e24f944e5e3241a548ca2e9472f24cab3566", "html_url": "https://github.com/rust-lang/rust/commit/0367e24f944e5e3241a548ca2e9472f24cab3566"}], "stats": {"total": 10, "additions": 5, "deletions": 5}, "files": [{"sha": "de0c4f2e30e8b0e12ac92e6a3f0d114c9f1dcd81", "filename": "compiler/rustc_middle/src/mir/mod.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/ca82264ec7556a6011b9d3f1b2fd4c7cd0bc8ae2/compiler%2Frustc_middle%2Fsrc%2Fmir%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca82264ec7556a6011b9d3f1b2fd4c7cd0bc8ae2/compiler%2Frustc_middle%2Fsrc%2Fmir%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fmir%2Fmod.rs?ref=ca82264ec7556a6011b9d3f1b2fd4c7cd0bc8ae2", "patch": "@@ -461,7 +461,7 @@ impl<'tcx> Body<'tcx> {\n     }\n \n     #[inline]\n-    pub fn predecessors(&self) -> impl std::ops::Deref<Target = Predecessors> + '_ {\n+    pub fn predecessors(&self) -> &Predecessors {\n         self.predecessor_cache.compute(&self.basic_blocks)\n     }\n \n@@ -2815,13 +2815,13 @@ impl<'a, 'b> graph::GraphSuccessors<'b> for Body<'a> {\n \n impl graph::GraphPredecessors<'graph> for Body<'tcx> {\n     type Item = BasicBlock;\n-    type Iter = smallvec::IntoIter<[BasicBlock; 4]>;\n+    type Iter = std::iter::Copied<std::slice::Iter<'graph, BasicBlock>>;\n }\n \n impl graph::WithPredecessors for Body<'tcx> {\n     #[inline]\n     fn predecessors(&self, node: Self::Node) -> <Self as graph::GraphPredecessors<'_>>::Iter {\n-        self.predecessors()[node].clone().into_iter()\n+        self.predecessors()[node].iter().copied()\n     }\n }\n "}, {"sha": "0521f507ec7d3908e7d1b3e729af5124c86caf10", "filename": "compiler/rustc_mir/src/transform/coverage/graph.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ca82264ec7556a6011b9d3f1b2fd4c7cd0bc8ae2/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Fcoverage%2Fgraph.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca82264ec7556a6011b9d3f1b2fd4c7cd0bc8ae2/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Fcoverage%2Fgraph.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Fcoverage%2Fgraph.rs?ref=ca82264ec7556a6011b9d3f1b2fd4c7cd0bc8ae2", "patch": "@@ -269,13 +269,13 @@ impl graph::WithSuccessors for CoverageGraph {\n \n impl graph::GraphPredecessors<'graph> for CoverageGraph {\n     type Item = BasicCoverageBlock;\n-    type Iter = std::vec::IntoIter<BasicCoverageBlock>;\n+    type Iter = std::iter::Copied<std::slice::Iter<'graph, BasicCoverageBlock>>;\n }\n \n impl graph::WithPredecessors for CoverageGraph {\n     #[inline]\n     fn predecessors(&self, node: Self::Node) -> <Self as graph::GraphPredecessors<'_>>::Iter {\n-        self.predecessors[node].clone().into_iter()\n+        self.predecessors[node].iter().copied()\n     }\n }\n "}]}