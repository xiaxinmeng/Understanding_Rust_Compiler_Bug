{"sha": "2946f7aad17c5445c3837a6691bf2b7f51e883a8", "node_id": "C_kwDOAAsO6NoAKDI5NDZmN2FhZDE3YzU0NDVjMzgzN2E2NjkxYmYyYjdmNTFlODgzYTg", "commit": {"author": {"name": "Roland Kuhn", "email": "rk@rkuhn.info", "date": "2022-02-20T11:23:26Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-02-20T11:23:26Z"}, "message": "improve wording of Waker::wake documentation", "tree": {"sha": "ae1e3dff7f30ff50806f3a6c62d3771218021543", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ae1e3dff7f30ff50806f3a6c62d3771218021543"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2946f7aad17c5445c3837a6691bf2b7f51e883a8", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJiEiSuCRBK7hj4Ov3rIwAAi+wIACuE/K9AgrR48kF8RBRiEQrj\nBJh5qWl7/u/rMonz74Qa3lGPOmS4+vJ1oj7ZLAdCsqSjmwZyqICdl93mq6PZyOrM\nP/cICop8o8fx/CI7Fy43e/cXBGw8W9PWuEQqBL+n3l7pW/+9p0t44ucqFUzYZj64\nMEtgnXll/yngBAROWM8u2NM0b5sHHI21XFmYy4SI6lvJxHjZABCD+kIeummTgCbI\nlXhi1Afa7tk7nOQCBOWPOLbv5nA25as0IdG8nB7pmGJC9/C/eWuBkt6jSnPLbCDd\nzvQWhY7pxbbwN3Vu1UjTXoPRF6v1tGJHipdc8dq+mDgkULNVHrEVa1z3qG6YEAg=\n=a/Li\n-----END PGP SIGNATURE-----\n", "payload": "tree ae1e3dff7f30ff50806f3a6c62d3771218021543\nparent f52ebaa45dcb35a7dbb8fcb1a19ad41de02ab581\nauthor Roland Kuhn <rk@rkuhn.info> 1645356206 +0100\ncommitter GitHub <noreply@github.com> 1645356206 +0100\n\nimprove wording of Waker::wake documentation"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2946f7aad17c5445c3837a6691bf2b7f51e883a8", "html_url": "https://github.com/rust-lang/rust/commit/2946f7aad17c5445c3837a6691bf2b7f51e883a8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2946f7aad17c5445c3837a6691bf2b7f51e883a8/comments", "author": {"login": "rkuhn", "id": 470469, "node_id": "MDQ6VXNlcjQ3MDQ2OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/470469?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rkuhn", "html_url": "https://github.com/rkuhn", "followers_url": "https://api.github.com/users/rkuhn/followers", "following_url": "https://api.github.com/users/rkuhn/following{/other_user}", "gists_url": "https://api.github.com/users/rkuhn/gists{/gist_id}", "starred_url": "https://api.github.com/users/rkuhn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rkuhn/subscriptions", "organizations_url": "https://api.github.com/users/rkuhn/orgs", "repos_url": "https://api.github.com/users/rkuhn/repos", "events_url": "https://api.github.com/users/rkuhn/events{/privacy}", "received_events_url": "https://api.github.com/users/rkuhn/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f52ebaa45dcb35a7dbb8fcb1a19ad41de02ab581", "url": "https://api.github.com/repos/rust-lang/rust/commits/f52ebaa45dcb35a7dbb8fcb1a19ad41de02ab581", "html_url": "https://github.com/rust-lang/rust/commit/f52ebaa45dcb35a7dbb8fcb1a19ad41de02ab581"}], "stats": {"total": 14, "additions": 8, "deletions": 6}, "files": [{"sha": "301cfacb554adcd5dff0a411b6949e0d44a72540", "filename": "library/core/src/task/wake.rs", "status": "modified", "additions": 8, "deletions": 6, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/2946f7aad17c5445c3837a6691bf2b7f51e883a8/library%2Fcore%2Fsrc%2Ftask%2Fwake.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2946f7aad17c5445c3837a6691bf2b7f51e883a8/library%2Fcore%2Fsrc%2Ftask%2Fwake.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Ftask%2Fwake.rs?ref=2946f7aad17c5445c3837a6691bf2b7f51e883a8", "patch": "@@ -220,12 +220,14 @@ unsafe impl Sync for Waker {}\n impl Waker {\n     /// Wake up the task associated with this `Waker`.\n     ///\n-    /// Multiple wake-ups (through clones of this `Waker` or `wake_by_ref`) may be\n-    /// coalesced into a single `poll` invocation by the runtime, and as long as\n-    /// the runtime keeps running and the task is not finished it is expected that\n-    /// each wake-up is followed by an invocation of `poll`, even in the absence of\n-    /// other events. This makes it possible to yield to other tasks when running\n-    /// potentially unbounded processing loops in order to maintain fairness.\n+    /// As long as the runtime keeps running and the task is not finished, it is\n+    /// guaranteed that each invocation of `wake` (or `wake_by_ref`) will be followed\n+    /// by at least one `poll` of the task to which this `Waker` belongs. This makes\n+    /// it possible to temporarily yield to other tasks while running potentially\n+    /// unbounded processing loops.\n+    ///\n+    /// Note that the above implies that multiple wake-ups may be coalesced into a\n+    /// single `poll` invocation by the runtime.\n     #[inline]\n     #[stable(feature = \"futures_api\", since = \"1.36.0\")]\n     pub fn wake(self) {"}]}