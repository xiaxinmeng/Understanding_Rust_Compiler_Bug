{"sha": "a7ff5a00775ca8db59077307b0b9eb706f907941", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE3ZmY1YTAwNzc1Y2E4ZGI1OTA3NzMwN2IwYjllYjcwNmY5MDc5NDE=", "commit": {"author": {"name": "Dylan DPC", "email": "dylan.dpc@gmail.com", "date": "2020-05-25T21:58:56Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-05-25T21:58:56Z"}, "message": "Rollup merge of #72450 - csmoe:issue-72442, r=oli-obk\n\nFix ice-#72442\n\nCloses #72442\nCloses #72426\nr? @oli-obk", "tree": {"sha": "f1f780332b987c63d59211028b717b6f3162a086", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f1f780332b987c63d59211028b717b6f3162a086"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a7ff5a00775ca8db59077307b0b9eb706f907941", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJezD+gCRBK7hj4Ov3rIwAAdHIIAJbljWXvIZlduyb+RrlLZj/h\nXj3n6I5xqy8eI8cAUKsRM2pV7FtUila/fejp+pCc4Y9UbfKEyBgmp7CCAJ64K7eV\nF/dvs7MtZB61oJMmRo8PAWESmcthvzsxJBMcl+gYhBpyIrfiWbyqxW8ZM3jfOiM0\nieRTuftXc70C9b8wWQepUm3buW0tNhPEr4vh/xMtI4ZHv8LREhTuLi8G/zkrsUVG\nWMSv83rswWTxLvt7EltRDlbKLMCO5aZiZyd5grZYsZHJB0Zcr25p+eENsoyoBnc7\nMXKK2fCHWEoq9EcKVQ7jGE4xq8FYqNVQSEpgMopkLh/BU0zonODYBVi/TKTOM44=\n=ve4r\n-----END PGP SIGNATURE-----\n", "payload": "tree f1f780332b987c63d59211028b717b6f3162a086\nparent 0498845e54baf8f3bf493de39009d2d175dbd374\nparent 16ba3e129d5d37c63b7000fcd4b52261e7f1c4f1\nauthor Dylan DPC <dylan.dpc@gmail.com> 1590443936 +0200\ncommitter GitHub <noreply@github.com> 1590443936 +0200\n\nRollup merge of #72450 - csmoe:issue-72442, r=oli-obk\n\nFix ice-#72442\n\nCloses #72442\nCloses #72426\nr? @oli-obk\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a7ff5a00775ca8db59077307b0b9eb706f907941", "html_url": "https://github.com/rust-lang/rust/commit/a7ff5a00775ca8db59077307b0b9eb706f907941", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a7ff5a00775ca8db59077307b0b9eb706f907941/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0498845e54baf8f3bf493de39009d2d175dbd374", "url": "https://api.github.com/repos/rust-lang/rust/commits/0498845e54baf8f3bf493de39009d2d175dbd374", "html_url": "https://github.com/rust-lang/rust/commit/0498845e54baf8f3bf493de39009d2d175dbd374"}, {"sha": "16ba3e129d5d37c63b7000fcd4b52261e7f1c4f1", "url": "https://api.github.com/repos/rust-lang/rust/commits/16ba3e129d5d37c63b7000fcd4b52261e7f1c4f1", "html_url": "https://github.com/rust-lang/rust/commit/16ba3e129d5d37c63b7000fcd4b52261e7f1c4f1"}], "stats": {"total": 49, "additions": 48, "deletions": 1}, "files": [{"sha": "e15ea11569f346172d4816abf43039364c3a3cfc", "filename": "src/libcore/ops/try.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/a7ff5a00775ca8db59077307b0b9eb706f907941/src%2Flibcore%2Fops%2Ftry.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a7ff5a00775ca8db59077307b0b9eb706f907941/src%2Flibcore%2Fops%2Ftry.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fops%2Ftry.rs?ref=a7ff5a00775ca8db59077307b0b9eb706f907941", "patch": "@@ -25,6 +25,7 @@\n     )\n )]\n #[doc(alias = \"?\")]\n+#[cfg_attr(not(bootstrap), lang = \"try\")]\n pub trait Try {\n     /// The type of this value when viewed as successful.\n     #[unstable(feature = \"try_trait\", issue = \"42327\")]"}, {"sha": "83bada4041963deec529489e623e952b9fc98939", "filename": "src/librustc_hir/lang_items.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a7ff5a00775ca8db59077307b0b9eb706f907941/src%2Flibrustc_hir%2Flang_items.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a7ff5a00775ca8db59077307b0b9eb706f907941/src%2Flibrustc_hir%2Flang_items.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_hir%2Flang_items.rs?ref=a7ff5a00775ca8db59077307b0b9eb706f907941", "patch": "@@ -257,4 +257,6 @@ language_item_table! {\n     AlignOffsetLangItem,         \"align_offset\",       align_offset_fn,         Target::Fn;\n \n     TerminationTraitLangItem,    \"termination\",        termination,             Target::Trait;\n+\n+    TryTraitLangItem,            \"try\",                try_trait,               Target::Trait;\n }"}, {"sha": "50af3c12c6f3860a5983f1c33c0fab47b6e335c9", "filename": "src/librustc_trait_selection/traits/error_reporting/mod.rs", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/a7ff5a00775ca8db59077307b0b9eb706f907941/src%2Flibrustc_trait_selection%2Ftraits%2Ferror_reporting%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a7ff5a00775ca8db59077307b0b9eb706f907941/src%2Flibrustc_trait_selection%2Ftraits%2Ferror_reporting%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trait_selection%2Ftraits%2Ferror_reporting%2Fmod.rs?ref=a7ff5a00775ca8db59077307b0b9eb706f907941", "patch": "@@ -402,7 +402,11 @@ impl<'a, 'tcx> InferCtxtExt<'tcx> for InferCtxt<'a, 'tcx> {\n                         self.suggest_remove_reference(&obligation, &mut err, &trait_ref);\n                         self.suggest_semicolon_removal(&obligation, &mut err, span, &trait_ref);\n                         self.note_version_mismatch(&mut err, &trait_ref);\n-                        self.suggest_await_before_try(&mut err, &obligation, &trait_ref, span);\n+\n+                        if Some(trait_ref.def_id()) == tcx.lang_items().try_trait() {\n+                            self.suggest_await_before_try(&mut err, &obligation, &trait_ref, span);\n+                        }\n+\n                         if self.suggest_impl_trait(&mut err, span, &obligation, &trait_ref) {\n                             err.emit();\n                             return;"}, {"sha": "61c8c8c1594d3b80a6d2a36ffd1409460e7c00c9", "filename": "src/test/ui/async-await/issue-72442.rs", "status": "added", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/a7ff5a00775ca8db59077307b0b9eb706f907941/src%2Ftest%2Fui%2Fasync-await%2Fissue-72442.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a7ff5a00775ca8db59077307b0b9eb706f907941/src%2Ftest%2Fui%2Fasync-await%2Fissue-72442.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fasync-await%2Fissue-72442.rs?ref=a7ff5a00775ca8db59077307b0b9eb706f907941", "patch": "@@ -0,0 +1,26 @@\n+// edition:2018\n+// compile-flags:-Cincremental=tmp/issue-72442\n+\n+use std::fs::File;\n+use std::future::Future;\n+use std::io::prelude::*;\n+\n+fn main() -> Result<(), Box<dyn std::error::Error>> {\n+    block_on(async {\n+        {\n+            let path = std::path::Path::new(\".\");\n+            let mut f = File::open(path.to_str())?;\n+            //~^ ERROR the trait bound\n+            let mut src = String::new();\n+            f.read_to_string(&mut src)?;\n+            Ok(())\n+        }\n+    })\n+}\n+\n+fn block_on<F>(f: F) -> F::Output\n+where\n+    F: Future<Output = Result<(), Box<dyn std::error::Error>>>,\n+{\n+    Ok(())\n+}"}, {"sha": "56854333578713afe664cfd23c503d6d4a11c174", "filename": "src/test/ui/async-await/issue-72442.stderr", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/a7ff5a00775ca8db59077307b0b9eb706f907941/src%2Ftest%2Fui%2Fasync-await%2Fissue-72442.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a7ff5a00775ca8db59077307b0b9eb706f907941/src%2Ftest%2Fui%2Fasync-await%2Fissue-72442.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fasync-await%2Fissue-72442.stderr?ref=a7ff5a00775ca8db59077307b0b9eb706f907941", "patch": "@@ -0,0 +1,14 @@\n+error[E0277]: the trait bound `std::option::Option<&str>: std::convert::AsRef<std::path::Path>` is not satisfied\n+  --> $DIR/issue-72442.rs:12:36\n+   |\n+LL |             let mut f = File::open(path.to_str())?;\n+   |                                    ^^^^^^^^^^^^^ the trait `std::convert::AsRef<std::path::Path>` is not implemented for `std::option::Option<&str>`\n+   | \n+  ::: $SRC_DIR/libstd/fs.rs:LL:COL\n+   |\n+LL |     pub fn open<P: AsRef<Path>>(path: P) -> io::Result<File> {\n+   |                    ----------- required by this bound in `std::fs::File::open`\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0277`."}]}