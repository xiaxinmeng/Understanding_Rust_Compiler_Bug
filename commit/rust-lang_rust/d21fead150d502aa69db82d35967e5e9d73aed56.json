{"sha": "d21fead150d502aa69db82d35967e5e9d73aed56", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQyMWZlYWQxNTBkNTAyYWE2OWRiODJkMzU5NjdlNWU5ZDczYWVkNTY=", "commit": {"author": {"name": "Zach Lute", "email": "zach.lute@gmail.com", "date": "2018-09-05T06:26:11Z"}, "committer": {"name": "Zach Lute", "email": "zach.lute@gmail.com", "date": "2018-09-05T06:26:11Z"}, "message": "Added tests for Ptr.", "tree": {"sha": "be136ffa62dc46a9e2e8fad6e5da97eb6494a190", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/be136ffa62dc46a9e2e8fad6e5da97eb6494a190"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d21fead150d502aa69db82d35967e5e9d73aed56", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d21fead150d502aa69db82d35967e5e9d73aed56", "html_url": "https://github.com/rust-lang/rust/commit/d21fead150d502aa69db82d35967e5e9d73aed56", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d21fead150d502aa69db82d35967e5e9d73aed56/comments", "author": {"login": "zachlute", "id": 308981, "node_id": "MDQ6VXNlcjMwODk4MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/308981?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zachlute", "html_url": "https://github.com/zachlute", "followers_url": "https://api.github.com/users/zachlute/followers", "following_url": "https://api.github.com/users/zachlute/following{/other_user}", "gists_url": "https://api.github.com/users/zachlute/gists{/gist_id}", "starred_url": "https://api.github.com/users/zachlute/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zachlute/subscriptions", "organizations_url": "https://api.github.com/users/zachlute/orgs", "repos_url": "https://api.github.com/users/zachlute/repos", "events_url": "https://api.github.com/users/zachlute/events{/privacy}", "received_events_url": "https://api.github.com/users/zachlute/received_events", "type": "User", "site_admin": false}, "committer": {"login": "zachlute", "id": 308981, "node_id": "MDQ6VXNlcjMwODk4MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/308981?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zachlute", "html_url": "https://github.com/zachlute", "followers_url": "https://api.github.com/users/zachlute/followers", "following_url": "https://api.github.com/users/zachlute/following{/other_user}", "gists_url": "https://api.github.com/users/zachlute/gists{/gist_id}", "starred_url": "https://api.github.com/users/zachlute/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zachlute/subscriptions", "organizations_url": "https://api.github.com/users/zachlute/orgs", "repos_url": "https://api.github.com/users/zachlute/repos", "events_url": "https://api.github.com/users/zachlute/events{/privacy}", "received_events_url": "https://api.github.com/users/zachlute/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "af0ae9ee0409ce2296dafebf977e353a5b871d80", "url": "https://api.github.com/repos/rust-lang/rust/commits/af0ae9ee0409ce2296dafebf977e353a5b871d80", "html_url": "https://github.com/rust-lang/rust/commit/af0ae9ee0409ce2296dafebf977e353a5b871d80"}], "stats": {"total": 78, "additions": 78, "deletions": 0}, "files": [{"sha": "c9a5354ea3077b80eb187f1f6fcab6729040faaf", "filename": "crates/libsyntax2/src/lexer/ptr.rs", "status": "modified", "additions": 78, "deletions": 0, "changes": 78, "blob_url": "https://github.com/rust-lang/rust/blob/d21fead150d502aa69db82d35967e5e9d73aed56/crates%2Flibsyntax2%2Fsrc%2Flexer%2Fptr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d21fead150d502aa69db82d35967e5e9d73aed56/crates%2Flibsyntax2%2Fsrc%2Flexer%2Fptr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Flibsyntax2%2Fsrc%2Flexer%2Fptr.rs?ref=d21fead150d502aa69db82d35967e5e9d73aed56", "patch": "@@ -86,3 +86,81 @@ impl<'s> Ptr<'s> {\n         self.text[len as usize..].chars()\n     }\n }\n+\n+#[cfg(test)]\n+mod tests {\n+    use super::*;\n+\n+    #[test]\n+    fn test_current() {\n+        let ptr = Ptr::new(\"test\");\n+        assert_eq!(ptr.current(), Some('t'));\n+    }\n+\n+    #[test]\n+    fn test_nth() {\n+        let ptr = Ptr::new(\"test\");\n+        assert_eq!(ptr.nth(0), Some('t'));\n+        assert_eq!(ptr.nth(1), Some('e'));\n+        assert_eq!(ptr.nth(2), Some('s'));\n+        assert_eq!(ptr.nth(3), Some('t'));\n+        assert_eq!(ptr.nth(4), None);\n+    }\n+\n+    #[test]\n+    fn test_at() {\n+        let ptr = Ptr::new(\"test\");\n+        assert!(ptr.at('t'));\n+        assert!(!ptr.at('a'));\n+    }\n+\n+    #[test]\n+    fn test_at_str() {\n+        let ptr = Ptr::new(\"test\");\n+        assert!(ptr.at_str(\"t\"));\n+        assert!(ptr.at_str(\"te\"));\n+        assert!(ptr.at_str(\"test\"));\n+        assert!(!ptr.at_str(\"tests\"));\n+        assert!(!ptr.at_str(\"rust\"));\n+    }\n+\n+    #[test]\n+    fn test_at_p() {\n+        let ptr = Ptr::new(\"test\");\n+        assert!(ptr.at_p(|c| c == 't'));\n+        assert!(!ptr.at_p(|c| c == 'e'));\n+    }\n+\n+    #[test]\n+    fn test_nth_is_p() {\n+        let ptr = Ptr::new(\"test\");\n+        assert!(ptr.nth_is_p(0,|c| c == 't'));\n+        assert!(!ptr.nth_is_p(1,|c| c == 't'));\n+        assert!(ptr.nth_is_p(3,|c| c == 't'));\n+        assert!(!ptr.nth_is_p(150,|c| c == 't'));\n+    }\n+\n+    #[test]\n+    fn test_bump() {\n+        let mut ptr = Ptr::new(\"test\");\n+        assert_eq!(ptr.current(), Some('t'));\n+        ptr.bump();\n+        assert_eq!(ptr.current(), Some('e'));\n+        ptr.bump();\n+        assert_eq!(ptr.current(), Some('s'));\n+        ptr.bump();\n+        assert_eq!(ptr.current(), Some('t'));\n+        ptr.bump();\n+        assert_eq!(ptr.current(), None);\n+        ptr.bump();\n+        assert_eq!(ptr.current(), None);\n+    }\n+\n+    #[test]\n+    fn test_bump_while() {\n+        let mut ptr = Ptr::new(\"test\");\n+        assert_eq!(ptr.current(), Some('t'));\n+        ptr.bump_while(|c| c != 's');\n+        assert_eq!(ptr.current(), Some('s'));\n+    }\n+}"}]}