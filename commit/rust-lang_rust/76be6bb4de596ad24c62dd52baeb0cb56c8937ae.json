{"sha": "76be6bb4de596ad24c62dd52baeb0cb56c8937ae", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc2YmU2YmI0ZGU1OTZhZDI0YzYyZGQ1MmJhZWIwY2I1NmM4OTM3YWU=", "commit": {"author": {"name": "Jack Huey", "email": "31162821+jackh726@users.noreply.github.com", "date": "2021-02-02T21:01:38Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-02-02T21:01:38Z"}, "message": "Rollup merge of #81530 - ojeda:sys-use-abort-instead-of-wasm32-unreachable, r=Mark-Simulacrum\n\nsys: use `process::abort()` instead of `arch::wasm32::unreachable()`\n\nRationale:\n\n  - `abort()` lowers to `wasm32::unreachable()` anyway.\n  - `abort()` isn't `unsafe`.\n  - `abort()` matches the comment better.\n  - `abort()` avoids confusion by future readers (e.g. https://github.com/rust-lang/rust/pull/81527): the naming of wasm's `unreachable` instruction is a bit unfortunate because it is not related to the `unreachable()` intrinsic (intended to trigger UB).\n\nCodegen is likely to be different since `unreachable()` is `inline` while `abort()` is `cold`. Since it doesn't look like we are expecting here to trigger this case, the latter seems better anyway.", "tree": {"sha": "bee4e8d6d81ac203d243a9a49276d3de41cedbfc", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bee4e8d6d81ac203d243a9a49276d3de41cedbfc"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/76be6bb4de596ad24c62dd52baeb0cb56c8937ae", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJgGb2yCRBK7hj4Ov3rIwAAdHIIAIToFmIl5mjKKElgO0/uy9ce\nTQ/a/0+yU5A9D8vj8Ec2hVhDlotxDwH2hNnUMiq1dUQgrDhwBpLSKyroyyPcCvFB\npTW3W02iYAf2u72k18khFuw2qugWjM2XUWfemUEejRVee084I0UpLnV6cxT+sNz5\n365GvLgNw8cbezIJpF/FIA3PZpk4Z7nfZY9sgIcUtwuXxxYVRctOUKRYnaxVR43g\nxEK8yhdx2jCgUW6KrKwcjWRDWg48Ttw5sbLGlFe9YWDG05ELpRUW2FiDxHGwJwFz\n9jybwEaPKF+BAEPgV+ySYs8ArmpUtlBVSHSc8jOn4pgkwdBHiuQFZ9W0pwRNuE8=\n=1LkM\n-----END PGP SIGNATURE-----\n", "payload": "tree bee4e8d6d81ac203d243a9a49276d3de41cedbfc\nparent 71792d822c713b66616b2b5dde1fa9cffe3ab21d\nparent c7f4154c6a839d31abcbb74be4c9b2404ae3a2ec\nauthor Jack Huey <31162821+jackh726@users.noreply.github.com> 1612299698 -0500\ncommitter GitHub <noreply@github.com> 1612299698 -0500\n\nRollup merge of #81530 - ojeda:sys-use-abort-instead-of-wasm32-unreachable, r=Mark-Simulacrum\n\nsys: use `process::abort()` instead of `arch::wasm32::unreachable()`\n\nRationale:\n\n  - `abort()` lowers to `wasm32::unreachable()` anyway.\n  - `abort()` isn't `unsafe`.\n  - `abort()` matches the comment better.\n  - `abort()` avoids confusion by future readers (e.g. https://github.com/rust-lang/rust/pull/81527): the naming of wasm's `unreachable` instruction is a bit unfortunate because it is not related to the `unreachable()` intrinsic (intended to trigger UB).\n\nCodegen is likely to be different since `unreachable()` is `inline` while `abort()` is `cold`. Since it doesn't look like we are expecting here to trigger this case, the latter seems better anyway.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/76be6bb4de596ad24c62dd52baeb0cb56c8937ae", "html_url": "https://github.com/rust-lang/rust/commit/76be6bb4de596ad24c62dd52baeb0cb56c8937ae", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/76be6bb4de596ad24c62dd52baeb0cb56c8937ae/comments", "author": {"login": "jackh726", "id": 31162821, "node_id": "MDQ6VXNlcjMxMTYyODIx", "avatar_url": "https://avatars.githubusercontent.com/u/31162821?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jackh726", "html_url": "https://github.com/jackh726", "followers_url": "https://api.github.com/users/jackh726/followers", "following_url": "https://api.github.com/users/jackh726/following{/other_user}", "gists_url": "https://api.github.com/users/jackh726/gists{/gist_id}", "starred_url": "https://api.github.com/users/jackh726/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jackh726/subscriptions", "organizations_url": "https://api.github.com/users/jackh726/orgs", "repos_url": "https://api.github.com/users/jackh726/repos", "events_url": "https://api.github.com/users/jackh726/events{/privacy}", "received_events_url": "https://api.github.com/users/jackh726/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "71792d822c713b66616b2b5dde1fa9cffe3ab21d", "url": "https://api.github.com/repos/rust-lang/rust/commits/71792d822c713b66616b2b5dde1fa9cffe3ab21d", "html_url": "https://github.com/rust-lang/rust/commit/71792d822c713b66616b2b5dde1fa9cffe3ab21d"}, {"sha": "c7f4154c6a839d31abcbb74be4c9b2404ae3a2ec", "url": "https://api.github.com/repos/rust-lang/rust/commits/c7f4154c6a839d31abcbb74be4c9b2404ae3a2ec", "html_url": "https://github.com/rust-lang/rust/commit/c7f4154c6a839d31abcbb74be4c9b2404ae3a2ec"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "5eafb77da1dcdc5883b27b079cf81c8c1f911e61", "filename": "library/std/src/sys/wasm/thread.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/76be6bb4de596ad24c62dd52baeb0cb56c8937ae/library%2Fstd%2Fsrc%2Fsys%2Fwasm%2Fthread.rs", "raw_url": "https://github.com/rust-lang/rust/raw/76be6bb4de596ad24c62dd52baeb0cb56c8937ae/library%2Fstd%2Fsrc%2Fsys%2Fwasm%2Fthread.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys%2Fwasm%2Fthread.rs?ref=76be6bb4de596ad24c62dd52baeb0cb56c8937ae", "patch": "@@ -86,7 +86,7 @@ pub fn my_id() -> u32 {\n         if MY_ID == 0 {\n             let mut cur = NEXT_ID.load(SeqCst);\n             MY_ID = loop {\n-                let next = cur.checked_add(1).unwrap_or_else(|| crate::arch::wasm32::unreachable());\n+                let next = cur.checked_add(1).unwrap_or_else(|| crate::process::abort());\n                 match NEXT_ID.compare_exchange(cur, next, SeqCst, SeqCst) {\n                     Ok(_) => break next,\n                     Err(i) => cur = i,"}]}