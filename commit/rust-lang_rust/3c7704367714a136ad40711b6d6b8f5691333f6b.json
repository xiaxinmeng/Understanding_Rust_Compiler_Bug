{"sha": "3c7704367714a136ad40711b6d6b8f5691333f6b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNjNzcwNDM2NzcxNGExMzZhZDQwNzExYjZkNmI4ZjU2OTEzMzNmNmI=", "commit": {"author": {"name": "kennytm", "email": "kennytm@gmail.com", "date": "2018-09-07T05:47:13Z"}, "committer": {"name": "kennytm", "email": "kennytm@gmail.com", "date": "2018-09-07T07:26:49Z"}, "message": "Rollup merge of #53874 - withoutboats:pin-ptr-impls, r=RalfJung\n\nImplement Unpin for Box, Rc, and Arc\n\nPer the discussion in #49150, these should implement `Unpin` even if what they point to does not.", "tree": {"sha": "b23530635dc2b99690303872b32f4a1489c53c20", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b23530635dc2b99690303872b32f4a1489c53c20"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3c7704367714a136ad40711b6d6b8f5691333f6b", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEZ1R8CLMp8f2GxWoQ/vbIBR0OATwFAluSKDkACgkQ/vbIBR0O\nATxQ6xAAxlcItG75z0FahGlC1ywOzjwAW90DtXGjdQ982mP03R8PJdRa1Qx0B3CG\nINUaO6oHnzQmN7+LKiAP3Aa0vZXiy6wmnOQCXEZOPplRAgc85Lgo8wUC/ZDTTboq\nAN3IFJnWMUQWJIToz2IHpJUe5Dvd+ixpwdjI7IaFOktEu7fGPp/+pRVXIoTvzob6\nuHw7syagBLYGlxK6jpfNAXmZNcbdd0uD3z9D9Ro01vK4MjOqdxZRmvXD5pppN0CG\nzwFk3MMGUoQKfh0jDAxcUBNaz7/7Fu6eze87eegfwQUln8MGLEDNCy5NFvMRQapJ\nVXtEgdJ+2wERb+fAKIrLCJcRUS4wEUObJY/dFMQqn7aLV+91LFwA1EqusOF0Eb3H\nG7t3ERAq1Hc7i//+S04mD+9iQWxPzgg/fF4bnztefFefp5gFPjLtqRADKeU0oduz\ngM69AfYAluEZHuNZ+FR0U/jR2vx2pQo3lMfaMZzO8/wugsqTlwXaG5LqEb9x3RZp\nHUqQXWEpuMWPOcek3z/FDEX6n+yD0W/Fse4ekewQhmV/ikcAOpiE1dshEEvfmgCQ\nA+b/8IUvHPcPZ/4gQQJxGKaJE2jXEWYVzPyolOZNXVOAoqgf/0x7Xb5GXcQrVXW/\nMpRaW02qNtPZo3qTqduG+i3RoItttDLOHZMc6d4kRTNdxh8wEy4=\n=9Fg4\n-----END PGP SIGNATURE-----", "payload": "tree b23530635dc2b99690303872b32f4a1489c53c20\nparent 3792dbd0133c1f44a7a7444ea504db85c8bdec28\nparent 972cd8bb69d4c856735adc8abcfceab96a62f716\nauthor kennytm <kennytm@gmail.com> 1536299233 +0800\ncommitter kennytm <kennytm@gmail.com> 1536305209 +0800\n\nRollup merge of #53874 - withoutboats:pin-ptr-impls, r=RalfJung\n\nImplement Unpin for Box, Rc, and Arc\n\nPer the discussion in #49150, these should implement `Unpin` even if what they point to does not.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3c7704367714a136ad40711b6d6b8f5691333f6b", "html_url": "https://github.com/rust-lang/rust/commit/3c7704367714a136ad40711b6d6b8f5691333f6b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3c7704367714a136ad40711b6d6b8f5691333f6b/comments", "author": {"login": "kennytm", "id": 103023, "node_id": "MDQ6VXNlcjEwMzAyMw==", "avatar_url": "https://avatars.githubusercontent.com/u/103023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kennytm", "html_url": "https://github.com/kennytm", "followers_url": "https://api.github.com/users/kennytm/followers", "following_url": "https://api.github.com/users/kennytm/following{/other_user}", "gists_url": "https://api.github.com/users/kennytm/gists{/gist_id}", "starred_url": "https://api.github.com/users/kennytm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kennytm/subscriptions", "organizations_url": "https://api.github.com/users/kennytm/orgs", "repos_url": "https://api.github.com/users/kennytm/repos", "events_url": "https://api.github.com/users/kennytm/events{/privacy}", "received_events_url": "https://api.github.com/users/kennytm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kennytm", "id": 103023, "node_id": "MDQ6VXNlcjEwMzAyMw==", "avatar_url": "https://avatars.githubusercontent.com/u/103023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kennytm", "html_url": "https://github.com/kennytm", "followers_url": "https://api.github.com/users/kennytm/followers", "following_url": "https://api.github.com/users/kennytm/following{/other_user}", "gists_url": "https://api.github.com/users/kennytm/gists{/gist_id}", "starred_url": "https://api.github.com/users/kennytm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kennytm/subscriptions", "organizations_url": "https://api.github.com/users/kennytm/orgs", "repos_url": "https://api.github.com/users/kennytm/repos", "events_url": "https://api.github.com/users/kennytm/events{/privacy}", "received_events_url": "https://api.github.com/users/kennytm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3792dbd0133c1f44a7a7444ea504db85c8bdec28", "url": "https://api.github.com/repos/rust-lang/rust/commits/3792dbd0133c1f44a7a7444ea504db85c8bdec28", "html_url": "https://github.com/rust-lang/rust/commit/3792dbd0133c1f44a7a7444ea504db85c8bdec28"}, {"sha": "972cd8bb69d4c856735adc8abcfceab96a62f716", "url": "https://api.github.com/repos/rust-lang/rust/commits/972cd8bb69d4c856735adc8abcfceab96a62f716", "html_url": "https://github.com/rust-lang/rust/commit/972cd8bb69d4c856735adc8abcfceab96a62f716"}], "stats": {"total": 35, "additions": 33, "deletions": 2}, "files": [{"sha": "29ba433bec7f52ed8a9791baf2a0c176e14c8856", "filename": "src/liballoc/boxed.rs", "status": "modified", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/3c7704367714a136ad40711b6d6b8f5691333f6b/src%2Fliballoc%2Fboxed.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3c7704367714a136ad40711b6d6b8f5691333f6b/src%2Fliballoc%2Fboxed.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Fboxed.rs?ref=3c7704367714a136ad40711b6d6b8f5691333f6b", "patch": "@@ -749,6 +749,31 @@ impl<T: ?Sized> AsMut<T> for Box<T> {\n     }\n }\n \n+/* Nota bene\n+ *\n+ *  We could have chosen not to add this impl, and instead have written a\n+ *  function of Pin<Box<T>> to Pin<T>. Such a function would not be sound,\n+ *  because Box<T> implements Unpin even when T does not, as a result of\n+ *  this impl.\n+ *\n+ *  We chose this API instead of the alternative for a few reasons:\n+ *      - Logically, it is helpful to understand pinning in regard to the\n+ *        memory region being pointed to. For this reason none of the\n+ *        standard library pointer types support projecting through a pin\n+ *        (Box<T> is the only pointer type in std for which this would be\n+ *        safe.)\n+ *      - It is in practice very useful to have Box<T> be unconditionally\n+ *        Unpin because of trait objects, for which the structural auto\n+ *        trait functionality does not apply (e.g. Box<dyn Foo> would\n+ *        otherwise not be Unpin).\n+ *\n+ *  Another type with the same semantics as Box but only a conditional\n+ *  implementation of `Unpin` (where `T: Unpin`) would be valid/safe, and\n+ *  could have a method to project a Pin<T> from it.\n+ */\n+#[unstable(feature = \"pin\", issue = \"49150\")]\n+impl<T: ?Sized> Unpin for Box<T> { }\n+\n #[unstable(feature = \"generator_trait\", issue = \"43122\")]\n impl<T> Generator for Box<T>\n     where T: Generator + ?Sized"}, {"sha": "2d65aaecbd0cb2349ea37101e3cfe12146e947f1", "filename": "src/liballoc/rc.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/3c7704367714a136ad40711b6d6b8f5691333f6b/src%2Fliballoc%2Frc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3c7704367714a136ad40711b6d6b8f5691333f6b/src%2Fliballoc%2Frc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Frc.rs?ref=3c7704367714a136ad40711b6d6b8f5691333f6b", "patch": "@@ -252,7 +252,7 @@ use core::fmt;\n use core::hash::{Hash, Hasher};\n use core::intrinsics::abort;\n use core::marker;\n-use core::marker::{Unsize, PhantomData};\n+use core::marker::{Unpin, Unsize, PhantomData};\n use core::mem::{self, align_of_val, forget, size_of_val};\n use core::ops::Deref;\n use core::ops::CoerceUnsized;\n@@ -1830,3 +1830,6 @@ impl<T: ?Sized> AsRef<T> for Rc<T> {\n         &**self\n     }\n }\n+\n+#[unstable(feature = \"pin\", issue = \"49150\")]\n+impl<T: ?Sized> Unpin for Rc<T> { }"}, {"sha": "ff45daef514371ac6004036b0960640d53729b8f", "filename": "src/liballoc/sync.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/3c7704367714a136ad40711b6d6b8f5691333f6b/src%2Fliballoc%2Fsync.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3c7704367714a136ad40711b6d6b8f5691333f6b/src%2Fliballoc%2Fsync.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Fsync.rs?ref=3c7704367714a136ad40711b6d6b8f5691333f6b", "patch": "@@ -27,7 +27,7 @@ use core::mem::{self, align_of_val, size_of_val};\n use core::ops::Deref;\n use core::ops::CoerceUnsized;\n use core::ptr::{self, NonNull};\n-use core::marker::{Unsize, PhantomData};\n+use core::marker::{Unpin, Unsize, PhantomData};\n use core::hash::{Hash, Hasher};\n use core::{isize, usize};\n use core::convert::From;\n@@ -1943,3 +1943,6 @@ impl<T: ?Sized> AsRef<T> for Arc<T> {\n         &**self\n     }\n }\n+\n+#[unstable(feature = \"pin\", issue = \"49150\")]\n+impl<T: ?Sized> Unpin for Arc<T> { }"}]}