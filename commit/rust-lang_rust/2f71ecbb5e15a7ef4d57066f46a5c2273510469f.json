{"sha": "2f71ecbb5e15a7ef4d57066f46a5c2273510469f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJmNzFlY2JiNWUxNWE3ZWY0ZDU3MDY2ZjQ2YTVjMjI3MzUxMDQ2OWY=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-04-12T10:17:51Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-04-12T10:17:51Z"}, "message": "Rollup merge of #59806 - phansch:compiletest_docs2, r=oli-obk\n\ncompiletest: Improve no_prefer_dynamic docs\n\nThis adds some extra docs for the `no-prefer-dynamic` header.\n\nAnd also a `s/must_compile_successfully/compile_pass`.\n\n`must_compile_successfully` has been renamed to `compile_pass` at some\npoint in the past and this comment was still referring to the old name.", "tree": {"sha": "540d71e3c7f4ee38cb565de2396640bf74403d3a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/540d71e3c7f4ee38cb565de2396640bf74403d3a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2f71ecbb5e15a7ef4d57066f46a5c2273510469f", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJcsGXPCRBK7hj4Ov3rIwAAdHIIADdZg3a8qd5upRYxeHggqMjc\nNSEU1l5S+A6IFmfb5LVTc7de1tR+kErkuakxuHMPXB1u81f1BasIoWFlIMHnJs6D\nSUjjaVQS/X3pEJbS/Tx8W24mTPr/pBQ2bxHIDL4T9ZqviYzdKnyu0pBT7VbWdBa5\nrftJEb+DKWtpalWBeB1e5l+Z+fmi8VSlVeeaflUiHaMx60yEm5XqR8Fx4Z4HrONh\nteV6fx8SoRLqSrwQM1aedqNc/6/MgRJJynpt6CMSVUFOL/8HRPJqjT3qtQ49naYL\nbVeEx3+HxZBqmBF2eHx4p2VZHRJr1bewA7aDbd6u7K0fW3t3zjgFvrXB92vU9yY=\n=+gRl\n-----END PGP SIGNATURE-----\n", "payload": "tree 540d71e3c7f4ee38cb565de2396640bf74403d3a\nparent d77b7d9dc36db4e42a632e8d267746e709e84953\nparent edebed9fc93d433578aef6b0e2b6a47b580a2f95\nauthor Mazdak Farrokhzad <twingoow@gmail.com> 1555064271 +0200\ncommitter GitHub <noreply@github.com> 1555064271 +0200\n\nRollup merge of #59806 - phansch:compiletest_docs2, r=oli-obk\n\ncompiletest: Improve no_prefer_dynamic docs\n\nThis adds some extra docs for the `no-prefer-dynamic` header.\n\nAnd also a `s/must_compile_successfully/compile_pass`.\n\n`must_compile_successfully` has been renamed to `compile_pass` at some\npoint in the past and this comment was still referring to the old name.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2f71ecbb5e15a7ef4d57066f46a5c2273510469f", "html_url": "https://github.com/rust-lang/rust/commit/2f71ecbb5e15a7ef4d57066f46a5c2273510469f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2f71ecbb5e15a7ef4d57066f46a5c2273510469f/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d77b7d9dc36db4e42a632e8d267746e709e84953", "url": "https://api.github.com/repos/rust-lang/rust/commits/d77b7d9dc36db4e42a632e8d267746e709e84953", "html_url": "https://github.com/rust-lang/rust/commit/d77b7d9dc36db4e42a632e8d267746e709e84953"}, {"sha": "edebed9fc93d433578aef6b0e2b6a47b580a2f95", "url": "https://api.github.com/repos/rust-lang/rust/commits/edebed9fc93d433578aef6b0e2b6a47b580a2f95", "html_url": "https://github.com/rust-lang/rust/commit/edebed9fc93d433578aef6b0e2b6a47b580a2f95"}], "stats": {"total": 6, "additions": 5, "deletions": 1}, "files": [{"sha": "2fe837e99d33f916f00e4f2b32b3ef7c0520a262", "filename": "src/tools/compiletest/src/header.rs", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/2f71ecbb5e15a7ef4d57066f46a5c2273510469f/src%2Ftools%2Fcompiletest%2Fsrc%2Fheader.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2f71ecbb5e15a7ef4d57066f46a5c2273510469f/src%2Ftools%2Fcompiletest%2Fsrc%2Fheader.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fcompiletest%2Fsrc%2Fheader.rs?ref=2f71ecbb5e15a7ef4d57066f46a5c2273510469f", "patch": "@@ -303,6 +303,10 @@ pub struct TestProps {\n     // For UI tests, allows compiler to generate arbitrary output to stderr\n     pub dont_check_compiler_stderr: bool,\n     // Don't force a --crate-type=dylib flag on the command line\n+    //\n+    // Set this for example if you have an auxiliary test file that contains\n+    // a proc-macro and needs `#![crate_type = \"proc-macro\"]`. This ensures\n+    // that the aux file is compiled as a `proc-macro` and not as a `dylib`.\n     pub no_prefer_dynamic: bool,\n     // Run --pretty expanded when running pretty printing tests\n     pub pretty_expanded: bool,\n@@ -490,7 +494,7 @@ impl TestProps {\n             }\n \n             if !self.compile_pass {\n-                // run-pass implies must_compile_successfully\n+                // run-pass implies compile_pass\n                 self.compile_pass = config.parse_compile_pass(ln) || self.run_pass;\n             }\n "}]}