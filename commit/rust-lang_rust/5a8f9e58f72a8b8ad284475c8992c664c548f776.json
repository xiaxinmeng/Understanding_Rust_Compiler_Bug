{"sha": "5a8f9e58f72a8b8ad284475c8992c664c548f776", "node_id": "MDY6Q29tbWl0NzI0NzEyOjVhOGY5ZTU4ZjcyYThiOGFkMjg0NDc1Yzg5OTJjNjY0YzU0OGY3NzY=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2018-12-25T12:29:38Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2018-12-25T12:29:38Z"}, "message": "properly compare unequal function pointers", "tree": {"sha": "f4462517f14a11a99ae8e13f7f9a228ba5ed9306", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f4462517f14a11a99ae8e13f7f9a228ba5ed9306"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5a8f9e58f72a8b8ad284475c8992c664c548f776", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5a8f9e58f72a8b8ad284475c8992c664c548f776", "html_url": "https://github.com/rust-lang/rust/commit/5a8f9e58f72a8b8ad284475c8992c664c548f776", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5a8f9e58f72a8b8ad284475c8992c664c548f776/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4e4569cf4b5f044b030f9a3de61e4167395c5145", "url": "https://api.github.com/repos/rust-lang/rust/commits/4e4569cf4b5f044b030f9a3de61e4167395c5145", "html_url": "https://github.com/rust-lang/rust/commit/4e4569cf4b5f044b030f9a3de61e4167395c5145"}], "stats": {"total": 5, "additions": 3, "deletions": 2}, "files": [{"sha": "cc803c4ea954828042208e130fcf368640e4c839", "filename": "src/operator.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/5a8f9e58f72a8b8ad284475c8992c664c548f776/src%2Foperator.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5a8f9e58f72a8b8ad284475c8992c664c548f776/src%2Foperator.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Foperator.rs?ref=5a8f9e58f72a8b8ad284475c8992c664c548f776", "patch": "@@ -145,8 +145,8 @@ impl<'a, 'mir, 'tcx> EvalContextExt<'tcx> for super::MiriEvalContext<'a, 'mir, '\n                     // Dead allocations in miri cannot overlap with live allocations, but\n                     // on read hardware this can easily happen. Thus for comparisons we require\n                     // both pointers to be live.\n-                    self.memory().get(left.alloc_id)?.check_bounds_ptr(left)?;\n-                    self.memory().get(right.alloc_id)?.check_bounds_ptr(right)?;\n+                    self.memory().check_bounds_ptr(left, InboundsCheck::Live)?;\n+                    self.memory().check_bounds_ptr(right, InboundsCheck::Live)?;\n                     // Two in-bounds pointers, we can compare across allocations\n                     left == right\n                 }"}, {"sha": "cc888630d3eea8e3565370c2ba02216aadb87c88", "filename": "tests/run-pass/function_pointers.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/5a8f9e58f72a8b8ad284475c8992c664c548f776/tests%2Frun-pass%2Ffunction_pointers.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5a8f9e58f72a8b8ad284475c8992c664c548f776/tests%2Frun-pass%2Ffunction_pointers.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Ffunction_pointers.rs?ref=5a8f9e58f72a8b8ad284475c8992c664c548f776", "patch": "@@ -44,4 +44,5 @@ fn main() {\n     let g = f as fn() -> i32;\n     assert!(return_fn_ptr(g) == g);\n     assert!(return_fn_ptr(g) as unsafe fn() -> i32 == g as fn() -> i32 as unsafe fn() -> i32);\n+    assert!(return_fn_ptr(f) != f);\n }"}]}