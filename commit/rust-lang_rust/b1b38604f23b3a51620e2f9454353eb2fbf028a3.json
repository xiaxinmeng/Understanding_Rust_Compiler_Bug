{"sha": "b1b38604f23b3a51620e2f9454353eb2fbf028a3", "node_id": "MDY6Q29tbWl0NzI0NzEyOmIxYjM4NjA0ZjIzYjNhNTE2MjBlMmY5NDU0MzUzZWIyZmJmMDI4YTM=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-08-11T14:49:37Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-08-11T14:49:37Z"}, "message": "Auto merge of #7541 - LeSeulArtichaut:for-never-loop, r=camsteffen\n\n`never_loop`: suggest using an `if let` instead of a `for` loop\n\nchangelog: suggest using an `if let` statement instead of a `for` loop that [`never_loop`]s\n\nFixes #7537, r? `@camsteffen.`", "tree": {"sha": "2b9c16bbc3667dec6f429f6fbbb999edaf0c79da", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2b9c16bbc3667dec6f429f6fbbb999edaf0c79da"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b1b38604f23b3a51620e2f9454353eb2fbf028a3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b1b38604f23b3a51620e2f9454353eb2fbf028a3", "html_url": "https://github.com/rust-lang/rust/commit/b1b38604f23b3a51620e2f9454353eb2fbf028a3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b1b38604f23b3a51620e2f9454353eb2fbf028a3/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "76c4a337d1a9daef05aad63548f55568dffa7424", "url": "https://api.github.com/repos/rust-lang/rust/commits/76c4a337d1a9daef05aad63548f55568dffa7424", "html_url": "https://github.com/rust-lang/rust/commit/76c4a337d1a9daef05aad63548f55568dffa7424"}, {"sha": "fc0af8e4d80272b1255a6582a03f846b6f3dc66a", "url": "https://api.github.com/repos/rust-lang/rust/commits/fc0af8e4d80272b1255a6582a03f846b6f3dc66a", "html_url": "https://github.com/rust-lang/rust/commit/fc0af8e4d80272b1255a6582a03f846b6f3dc66a"}], "stats": {"total": 47, "additions": 43, "deletions": 4}, "files": [{"sha": "6d9f6215ed418dd95087021c4ee57464ae33b7d0", "filename": "clippy_lints/src/loops/never_loop.rs", "status": "modified", "additions": 38, "deletions": 4, "changes": 42, "blob_url": "https://github.com/rust-lang/rust/blob/b1b38604f23b3a51620e2f9454353eb2fbf028a3/clippy_lints%2Fsrc%2Floops%2Fnever_loop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b1b38604f23b3a51620e2f9454353eb2fbf028a3/clippy_lints%2Fsrc%2Floops%2Fnever_loop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Floops%2Fnever_loop.rs?ref=b1b38604f23b3a51620e2f9454353eb2fbf028a3", "patch": "@@ -1,13 +1,36 @@\n+use super::utils::make_iterator_snippet;\n use super::NEVER_LOOP;\n-use clippy_utils::diagnostics::span_lint;\n-use rustc_hir::{Block, Expr, ExprKind, HirId, InlineAsmOperand, Stmt, StmtKind};\n+use clippy_utils::diagnostics::span_lint_and_then;\n+use clippy_utils::higher;\n+use clippy_utils::source::snippet;\n+use rustc_errors::Applicability;\n+use rustc_hir::{Block, Expr, ExprKind, HirId, InlineAsmOperand, LoopSource, Node, Pat, Stmt, StmtKind};\n use rustc_lint::LateContext;\n use std::iter::{once, Iterator};\n \n pub(super) fn check(cx: &LateContext<'tcx>, expr: &'tcx Expr<'_>) {\n-    if let ExprKind::Loop(block, _, _, _) = expr.kind {\n+    if let ExprKind::Loop(block, _, source, _) = expr.kind {\n         match never_loop_block(block, expr.hir_id) {\n-            NeverLoopResult::AlwaysBreak => span_lint(cx, NEVER_LOOP, expr.span, \"this loop never actually loops\"),\n+            NeverLoopResult::AlwaysBreak => {\n+                span_lint_and_then(cx, NEVER_LOOP, expr.span, \"this loop never actually loops\", |diag| {\n+                    if_chain! {\n+                        if let LoopSource::ForLoop = source;\n+                        if let Some((_, Node::Expr(parent_match))) = cx.tcx.hir().parent_iter(expr.hir_id).nth(1);\n+                        if let Some((pat, iterator, _, for_span)) = higher::for_loop(parent_match);\n+                        then {\n+                            // Suggests using an `if let` instead. This is `Unspecified` because the\n+                            // loop may (probably) contain `break` statements which would be invalid\n+                            // in an `if let`.\n+                            diag.span_suggestion_verbose(\n+                                for_span.with_hi(iterator.span.hi()),\n+                                \"if you need the first element of the iterator, try writing\",\n+                                for_to_if_let_sugg(cx, iterator, pat),\n+                                Applicability::Unspecified,\n+                            );\n+                        }\n+                    };\n+                });\n+            },\n             NeverLoopResult::MayContinueMainLoop | NeverLoopResult::Otherwise => (),\n         }\n     }\n@@ -170,3 +193,14 @@ fn never_loop_expr_branch<'a, T: Iterator<Item = &'a Expr<'a>>>(e: &mut T, main_\n     e.map(|e| never_loop_expr(e, main_loop_id))\n         .fold(NeverLoopResult::AlwaysBreak, combine_branches)\n }\n+\n+fn for_to_if_let_sugg(cx: &LateContext<'_>, iterator: &Expr<'_>, pat: &Pat<'_>) -> String {\n+    let pat_snippet = snippet(cx, pat.span, \"_\");\n+    let iter_snippet = make_iterator_snippet(cx, iterator, &mut Applicability::Unspecified);\n+\n+    format!(\n+        \"if let Some({pat}) = {iter}.next()\",\n+        pat = pat_snippet,\n+        iter = iter_snippet\n+    )\n+}"}, {"sha": "9fbf3e9ce98003738d922fc0182127700887fc7b", "filename": "tests/ui/never_loop.stderr", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/b1b38604f23b3a51620e2f9454353eb2fbf028a3/tests%2Fui%2Fnever_loop.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b1b38604f23b3a51620e2f9454353eb2fbf028a3/tests%2Fui%2Fnever_loop.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fnever_loop.stderr?ref=b1b38604f23b3a51620e2f9454353eb2fbf028a3", "patch": "@@ -75,6 +75,11 @@ LL | |             _ => return,\n LL | |         }\n LL | |     }\n    | |_____^\n+   |\n+help: if you need the first element of the iterator, try writing\n+   |\n+LL |     if let Some(x) = (0..10).next() {\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: this loop never actually loops\n   --> $DIR/never_loop.rs:157:5"}]}