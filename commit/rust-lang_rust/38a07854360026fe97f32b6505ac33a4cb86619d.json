{"sha": "38a07854360026fe97f32b6505ac33a4cb86619d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM4YTA3ODU0MzYwMDI2ZmU5N2YzMmI2NTA1YWMzM2E0Y2I4NjYxOWQ=", "commit": {"author": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2019-09-25T15:39:45Z"}, "committer": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2019-09-25T21:45:18Z"}, "message": "map_unit_fn: rename tests to fixable", "tree": {"sha": "0d52ed16b36962964a4108569140671bcc8eec43", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0d52ed16b36962964a4108569140671bcc8eec43"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/38a07854360026fe97f32b6505ac33a4cb86619d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/38a07854360026fe97f32b6505ac33a4cb86619d", "html_url": "https://github.com/rust-lang/rust/commit/38a07854360026fe97f32b6505ac33a4cb86619d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/38a07854360026fe97f32b6505ac33a4cb86619d/comments", "author": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1090509564b129886db8629bcab4cb46e46f9041", "url": "https://api.github.com/repos/rust-lang/rust/commits/1090509564b129886db8629bcab4cb46e46f9041", "html_url": "https://github.com/rust-lang/rust/commit/1090509564b129886db8629bcab4cb46e46f9041"}], "stats": {"total": 96, "additions": 48, "deletions": 48}, "files": [{"sha": "1d2a3a17ee00b88e05710413b7a9e6f9d91037d0", "filename": "tests/ui/option_map_unit_fn_fixable.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/38a07854360026fe97f32b6505ac33a4cb86619d/tests%2Fui%2Foption_map_unit_fn_fixable.rs", "raw_url": "https://github.com/rust-lang/rust/raw/38a07854360026fe97f32b6505ac33a4cb86619d/tests%2Fui%2Foption_map_unit_fn_fixable.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Foption_map_unit_fn_fixable.rs?ref=38a07854360026fe97f32b6505ac33a4cb86619d", "previous_filename": "tests/ui/option_map_unit_fn.rs"}, {"sha": "4b619495b7b91f5d526df72451dbe4180764fe20", "filename": "tests/ui/option_map_unit_fn_fixable.stderr", "status": "renamed", "additions": 25, "deletions": 25, "changes": 50, "blob_url": "https://github.com/rust-lang/rust/blob/38a07854360026fe97f32b6505ac33a4cb86619d/tests%2Fui%2Foption_map_unit_fn_fixable.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/38a07854360026fe97f32b6505ac33a4cb86619d/tests%2Fui%2Foption_map_unit_fn_fixable.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Foption_map_unit_fn_fixable.stderr?ref=38a07854360026fe97f32b6505ac33a4cb86619d", "patch": "@@ -1,5 +1,5 @@\n error: called `map(f)` on an Option value where `f` is a unit function\n-  --> $DIR/option_map_unit_fn.rs:32:5\n+  --> $DIR/option_map_unit_fn_fixable.rs:32:5\n    |\n LL |     x.field.map(do_nothing);\n    |     ^^^^^^^^^^^^^^^^^^^^^^^-\n@@ -9,151 +9,151 @@ LL |     x.field.map(do_nothing);\n    = note: `-D clippy::option-map-unit-fn` implied by `-D warnings`\n \n error: called `map(f)` on an Option value where `f` is a unit function\n-  --> $DIR/option_map_unit_fn.rs:34:5\n+  --> $DIR/option_map_unit_fn_fixable.rs:34:5\n    |\n LL |     x.field.map(do_nothing);\n    |     ^^^^^^^^^^^^^^^^^^^^^^^-\n    |     |\n    |     help: try this: `if let Some(x_field) = x.field { do_nothing(...) }`\n \n error: called `map(f)` on an Option value where `f` is a unit function\n-  --> $DIR/option_map_unit_fn.rs:36:5\n+  --> $DIR/option_map_unit_fn_fixable.rs:36:5\n    |\n LL |     x.field.map(diverge);\n    |     ^^^^^^^^^^^^^^^^^^^^-\n    |     |\n    |     help: try this: `if let Some(x_field) = x.field { diverge(...) }`\n \n error: called `map(f)` on an Option value where `f` is a unit closure\n-  --> $DIR/option_map_unit_fn.rs:42:5\n+  --> $DIR/option_map_unit_fn_fixable.rs:42:5\n    |\n LL |     x.field.map(|value| x.do_option_nothing(value + captured));\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^-\n    |     |\n    |     help: try this: `if let Some(value) = x.field { x.do_option_nothing(value + captured) }`\n \n error: called `map(f)` on an Option value where `f` is a unit closure\n-  --> $DIR/option_map_unit_fn.rs:44:5\n+  --> $DIR/option_map_unit_fn_fixable.rs:44:5\n    |\n LL |     x.field.map(|value| { x.do_option_plus_one(value + captured); });\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^-\n    |     |\n    |     help: try this: `if let Some(value) = x.field { x.do_option_plus_one(value + captured); }`\n \n error: called `map(f)` on an Option value where `f` is a unit closure\n-  --> $DIR/option_map_unit_fn.rs:47:5\n+  --> $DIR/option_map_unit_fn_fixable.rs:47:5\n    |\n LL |     x.field.map(|value| do_nothing(value + captured));\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^-\n    |     |\n    |     help: try this: `if let Some(value) = x.field { do_nothing(value + captured) }`\n \n error: called `map(f)` on an Option value where `f` is a unit closure\n-  --> $DIR/option_map_unit_fn.rs:49:5\n+  --> $DIR/option_map_unit_fn_fixable.rs:49:5\n    |\n LL |     x.field.map(|value| { do_nothing(value + captured) });\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^-\n    |     |\n    |     help: try this: `if let Some(value) = x.field { do_nothing(value + captured) }`\n \n error: called `map(f)` on an Option value where `f` is a unit closure\n-  --> $DIR/option_map_unit_fn.rs:51:5\n+  --> $DIR/option_map_unit_fn_fixable.rs:51:5\n    |\n LL |     x.field.map(|value| { do_nothing(value + captured); });\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^-\n    |     |\n    |     help: try this: `if let Some(value) = x.field { do_nothing(value + captured); }`\n \n error: called `map(f)` on an Option value where `f` is a unit closure\n-  --> $DIR/option_map_unit_fn.rs:53:5\n+  --> $DIR/option_map_unit_fn_fixable.rs:53:5\n    |\n LL |     x.field.map(|value| { { do_nothing(value + captured); } });\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^-\n    |     |\n    |     help: try this: `if let Some(value) = x.field { do_nothing(value + captured); }`\n \n error: called `map(f)` on an Option value where `f` is a unit closure\n-  --> $DIR/option_map_unit_fn.rs:56:5\n+  --> $DIR/option_map_unit_fn_fixable.rs:56:5\n    |\n LL |     x.field.map(|value| diverge(value + captured));\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^-\n    |     |\n    |     help: try this: `if let Some(value) = x.field { diverge(value + captured) }`\n \n error: called `map(f)` on an Option value where `f` is a unit closure\n-  --> $DIR/option_map_unit_fn.rs:58:5\n+  --> $DIR/option_map_unit_fn_fixable.rs:58:5\n    |\n LL |     x.field.map(|value| { diverge(value + captured) });\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^-\n    |     |\n    |     help: try this: `if let Some(value) = x.field { diverge(value + captured) }`\n \n error: called `map(f)` on an Option value where `f` is a unit closure\n-  --> $DIR/option_map_unit_fn.rs:60:5\n+  --> $DIR/option_map_unit_fn_fixable.rs:60:5\n    |\n LL |     x.field.map(|value| { diverge(value + captured); });\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^-\n    |     |\n    |     help: try this: `if let Some(value) = x.field { diverge(value + captured); }`\n \n error: called `map(f)` on an Option value where `f` is a unit closure\n-  --> $DIR/option_map_unit_fn.rs:62:5\n+  --> $DIR/option_map_unit_fn_fixable.rs:62:5\n    |\n LL |     x.field.map(|value| { { diverge(value + captured); } });\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^-\n    |     |\n    |     help: try this: `if let Some(value) = x.field { diverge(value + captured); }`\n \n error: called `map(f)` on an Option value where `f` is a unit closure\n-  --> $DIR/option_map_unit_fn.rs:67:5\n+  --> $DIR/option_map_unit_fn_fixable.rs:67:5\n    |\n LL |     x.field.map(|value| { let y = plus_one(value + captured); });\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^-\n    |     |\n    |     help: try this: `if let Some(value) = x.field { let y = plus_one(value + captured); }`\n \n error: called `map(f)` on an Option value where `f` is a unit closure\n-  --> $DIR/option_map_unit_fn.rs:69:5\n+  --> $DIR/option_map_unit_fn_fixable.rs:69:5\n    |\n LL |     x.field.map(|value| { plus_one(value + captured); });\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^-\n    |     |\n    |     help: try this: `if let Some(value) = x.field { plus_one(value + captured); }`\n \n error: called `map(f)` on an Option value where `f` is a unit closure\n-  --> $DIR/option_map_unit_fn.rs:71:5\n+  --> $DIR/option_map_unit_fn_fixable.rs:71:5\n    |\n LL |     x.field.map(|value| { { plus_one(value + captured); } });\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^-\n    |     |\n    |     help: try this: `if let Some(value) = x.field { plus_one(value + captured); }`\n \n error: called `map(f)` on an Option value where `f` is a unit closure\n-  --> $DIR/option_map_unit_fn.rs:74:5\n+  --> $DIR/option_map_unit_fn_fixable.rs:74:5\n    |\n LL |     x.field.map(|ref value| { do_nothing(value + captured) });\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^-\n    |     |\n    |     help: try this: `if let Some(ref value) = x.field { do_nothing(value + captured) }`\n \n error: called `map(f)` on an Option value where `f` is a unit closure\n-  --> $DIR/option_map_unit_fn.rs:77:5\n+  --> $DIR/option_map_unit_fn_fixable.rs:77:5\n    |\n LL |     x.field.map(|value| { do_nothing(value); do_nothing(value) });\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^-\n    |     |\n    |     help: try this: `if let Some(value) = x.field { ... }`\n \n error: called `map(f)` on an Option value where `f` is a unit closure\n-  --> $DIR/option_map_unit_fn.rs:79:5\n+  --> $DIR/option_map_unit_fn_fixable.rs:79:5\n    |\n LL |     x.field.map(|value| if value > 0 { do_nothing(value); do_nothing(value) });\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^-\n    |     |\n    |     help: try this: `if let Some(value) = x.field { ... }`\n \n error: called `map(f)` on an Option value where `f` is a unit closure\n-  --> $DIR/option_map_unit_fn.rs:83:5\n+  --> $DIR/option_map_unit_fn_fixable.rs:83:5\n    |\n LL |        x.field.map(|value| {\n    |   _____^\n@@ -167,39 +167,39 @@ LL | ||     });\n    | \n \n error: called `map(f)` on an Option value where `f` is a unit closure\n-  --> $DIR/option_map_unit_fn.rs:87:5\n+  --> $DIR/option_map_unit_fn_fixable.rs:87:5\n    |\n LL |     x.field.map(|value| { do_nothing(value); do_nothing(value); });\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^-\n    |     |\n    |     help: try this: `if let Some(value) = x.field { ... }`\n \n error: called `map(f)` on an Option value where `f` is a unit function\n-  --> $DIR/option_map_unit_fn.rs:90:5\n+  --> $DIR/option_map_unit_fn_fixable.rs:90:5\n    |\n LL |     Some(42).map(diverge);\n    |     ^^^^^^^^^^^^^^^^^^^^^-\n    |     |\n    |     help: try this: `if let Some(_) = Some(42) { diverge(...) }`\n \n error: called `map(f)` on an Option value where `f` is a unit function\n-  --> $DIR/option_map_unit_fn.rs:91:5\n+  --> $DIR/option_map_unit_fn_fixable.rs:91:5\n    |\n LL |     \"12\".parse::<i32>().ok().map(diverge);\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^-\n    |     |\n    |     help: try this: `if let Some(_) = \"12\".parse::<i32>().ok() { diverge(...) }`\n \n error: called `map(f)` on an Option value where `f` is a unit function\n-  --> $DIR/option_map_unit_fn.rs:92:5\n+  --> $DIR/option_map_unit_fn_fixable.rs:92:5\n    |\n LL |     Some(plus_one(1)).map(do_nothing);\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^-\n    |     |\n    |     help: try this: `if let Some(_) = Some(plus_one(1)) { do_nothing(...) }`\n \n error: called `map(f)` on an Option value where `f` is a unit function\n-  --> $DIR/option_map_unit_fn.rs:96:5\n+  --> $DIR/option_map_unit_fn_fixable.rs:96:5\n    |\n LL |     y.map(do_nothing);\n    |     ^^^^^^^^^^^^^^^^^-", "previous_filename": "tests/ui/option_map_unit_fn.stderr"}, {"sha": "a8e891d8db024636560b72709bd72ad24569efc3", "filename": "tests/ui/result_map_unit_fn_fixable.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/38a07854360026fe97f32b6505ac33a4cb86619d/tests%2Fui%2Fresult_map_unit_fn_fixable.rs", "raw_url": "https://github.com/rust-lang/rust/raw/38a07854360026fe97f32b6505ac33a4cb86619d/tests%2Fui%2Fresult_map_unit_fn_fixable.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fresult_map_unit_fn_fixable.rs?ref=38a07854360026fe97f32b6505ac33a4cb86619d", "previous_filename": "tests/ui/result_map_unit_fn.rs"}, {"sha": "29d1bd6dc18cd2a8b2bcec5d8bc8e95076409528", "filename": "tests/ui/result_map_unit_fn_fixable.stderr", "status": "renamed", "additions": 23, "deletions": 23, "changes": 46, "blob_url": "https://github.com/rust-lang/rust/blob/38a07854360026fe97f32b6505ac33a4cb86619d/tests%2Fui%2Fresult_map_unit_fn_fixable.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/38a07854360026fe97f32b6505ac33a4cb86619d/tests%2Fui%2Fresult_map_unit_fn_fixable.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fresult_map_unit_fn_fixable.stderr?ref=38a07854360026fe97f32b6505ac33a4cb86619d", "patch": "@@ -1,5 +1,5 @@\n error: called `map(f)` on an Result value where `f` is a unit function\n-  --> $DIR/result_map_unit_fn.rs:34:5\n+  --> $DIR/result_map_unit_fn_fixable.rs:34:5\n    |\n LL |     x.field.map(do_nothing);\n    |     ^^^^^^^^^^^^^^^^^^^^^^^-\n@@ -9,151 +9,151 @@ LL |     x.field.map(do_nothing);\n    = note: `-D clippy::result-map-unit-fn` implied by `-D warnings`\n \n error: called `map(f)` on an Result value where `f` is a unit function\n-  --> $DIR/result_map_unit_fn.rs:36:5\n+  --> $DIR/result_map_unit_fn_fixable.rs:36:5\n    |\n LL |     x.field.map(do_nothing);\n    |     ^^^^^^^^^^^^^^^^^^^^^^^-\n    |     |\n    |     help: try this: `if let Ok(x_field) = x.field { do_nothing(...) }`\n \n error: called `map(f)` on an Result value where `f` is a unit function\n-  --> $DIR/result_map_unit_fn.rs:38:5\n+  --> $DIR/result_map_unit_fn_fixable.rs:38:5\n    |\n LL |     x.field.map(diverge);\n    |     ^^^^^^^^^^^^^^^^^^^^-\n    |     |\n    |     help: try this: `if let Ok(x_field) = x.field { diverge(...) }`\n \n error: called `map(f)` on an Result value where `f` is a unit closure\n-  --> $DIR/result_map_unit_fn.rs:44:5\n+  --> $DIR/result_map_unit_fn_fixable.rs:44:5\n    |\n LL |     x.field.map(|value| x.do_result_nothing(value + captured));\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^-\n    |     |\n    |     help: try this: `if let Ok(value) = x.field { x.do_result_nothing(value + captured) }`\n \n error: called `map(f)` on an Result value where `f` is a unit closure\n-  --> $DIR/result_map_unit_fn.rs:46:5\n+  --> $DIR/result_map_unit_fn_fixable.rs:46:5\n    |\n LL |     x.field.map(|value| { x.do_result_plus_one(value + captured); });\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^-\n    |     |\n    |     help: try this: `if let Ok(value) = x.field { x.do_result_plus_one(value + captured); }`\n \n error: called `map(f)` on an Result value where `f` is a unit closure\n-  --> $DIR/result_map_unit_fn.rs:49:5\n+  --> $DIR/result_map_unit_fn_fixable.rs:49:5\n    |\n LL |     x.field.map(|value| do_nothing(value + captured));\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^-\n    |     |\n    |     help: try this: `if let Ok(value) = x.field { do_nothing(value + captured) }`\n \n error: called `map(f)` on an Result value where `f` is a unit closure\n-  --> $DIR/result_map_unit_fn.rs:51:5\n+  --> $DIR/result_map_unit_fn_fixable.rs:51:5\n    |\n LL |     x.field.map(|value| { do_nothing(value + captured) });\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^-\n    |     |\n    |     help: try this: `if let Ok(value) = x.field { do_nothing(value + captured) }`\n \n error: called `map(f)` on an Result value where `f` is a unit closure\n-  --> $DIR/result_map_unit_fn.rs:53:5\n+  --> $DIR/result_map_unit_fn_fixable.rs:53:5\n    |\n LL |     x.field.map(|value| { do_nothing(value + captured); });\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^-\n    |     |\n    |     help: try this: `if let Ok(value) = x.field { do_nothing(value + captured); }`\n \n error: called `map(f)` on an Result value where `f` is a unit closure\n-  --> $DIR/result_map_unit_fn.rs:55:5\n+  --> $DIR/result_map_unit_fn_fixable.rs:55:5\n    |\n LL |     x.field.map(|value| { { do_nothing(value + captured); } });\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^-\n    |     |\n    |     help: try this: `if let Ok(value) = x.field { do_nothing(value + captured); }`\n \n error: called `map(f)` on an Result value where `f` is a unit closure\n-  --> $DIR/result_map_unit_fn.rs:58:5\n+  --> $DIR/result_map_unit_fn_fixable.rs:58:5\n    |\n LL |     x.field.map(|value| diverge(value + captured));\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^-\n    |     |\n    |     help: try this: `if let Ok(value) = x.field { diverge(value + captured) }`\n \n error: called `map(f)` on an Result value where `f` is a unit closure\n-  --> $DIR/result_map_unit_fn.rs:60:5\n+  --> $DIR/result_map_unit_fn_fixable.rs:60:5\n    |\n LL |     x.field.map(|value| { diverge(value + captured) });\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^-\n    |     |\n    |     help: try this: `if let Ok(value) = x.field { diverge(value + captured) }`\n \n error: called `map(f)` on an Result value where `f` is a unit closure\n-  --> $DIR/result_map_unit_fn.rs:62:5\n+  --> $DIR/result_map_unit_fn_fixable.rs:62:5\n    |\n LL |     x.field.map(|value| { diverge(value + captured); });\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^-\n    |     |\n    |     help: try this: `if let Ok(value) = x.field { diverge(value + captured); }`\n \n error: called `map(f)` on an Result value where `f` is a unit closure\n-  --> $DIR/result_map_unit_fn.rs:64:5\n+  --> $DIR/result_map_unit_fn_fixable.rs:64:5\n    |\n LL |     x.field.map(|value| { { diverge(value + captured); } });\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^-\n    |     |\n    |     help: try this: `if let Ok(value) = x.field { diverge(value + captured); }`\n \n error: called `map(f)` on an Result value where `f` is a unit closure\n-  --> $DIR/result_map_unit_fn.rs:69:5\n+  --> $DIR/result_map_unit_fn_fixable.rs:69:5\n    |\n LL |     x.field.map(|value| { let y = plus_one(value + captured); });\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^-\n    |     |\n    |     help: try this: `if let Ok(value) = x.field { let y = plus_one(value + captured); }`\n \n error: called `map(f)` on an Result value where `f` is a unit closure\n-  --> $DIR/result_map_unit_fn.rs:71:5\n+  --> $DIR/result_map_unit_fn_fixable.rs:71:5\n    |\n LL |     x.field.map(|value| { plus_one(value + captured); });\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^-\n    |     |\n    |     help: try this: `if let Ok(value) = x.field { plus_one(value + captured); }`\n \n error: called `map(f)` on an Result value where `f` is a unit closure\n-  --> $DIR/result_map_unit_fn.rs:73:5\n+  --> $DIR/result_map_unit_fn_fixable.rs:73:5\n    |\n LL |     x.field.map(|value| { { plus_one(value + captured); } });\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^-\n    |     |\n    |     help: try this: `if let Ok(value) = x.field { plus_one(value + captured); }`\n \n error: called `map(f)` on an Result value where `f` is a unit closure\n-  --> $DIR/result_map_unit_fn.rs:76:5\n+  --> $DIR/result_map_unit_fn_fixable.rs:76:5\n    |\n LL |     x.field.map(|ref value| { do_nothing(value + captured) });\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^-\n    |     |\n    |     help: try this: `if let Ok(ref value) = x.field { do_nothing(value + captured) }`\n \n error: called `map(f)` on an Result value where `f` is a unit closure\n-  --> $DIR/result_map_unit_fn.rs:79:5\n+  --> $DIR/result_map_unit_fn_fixable.rs:79:5\n    |\n LL |     x.field.map(|value| { do_nothing(value); do_nothing(value) });\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^-\n    |     |\n    |     help: try this: `if let Ok(value) = x.field { ... }`\n \n error: called `map(f)` on an Result value where `f` is a unit closure\n-  --> $DIR/result_map_unit_fn.rs:81:5\n+  --> $DIR/result_map_unit_fn_fixable.rs:81:5\n    |\n LL |     x.field.map(|value| if value > 0 { do_nothing(value); do_nothing(value) });\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^-\n    |     |\n    |     help: try this: `if let Ok(value) = x.field { ... }`\n \n error: called `map(f)` on an Result value where `f` is a unit closure\n-  --> $DIR/result_map_unit_fn.rs:85:5\n+  --> $DIR/result_map_unit_fn_fixable.rs:85:5\n    |\n LL |        x.field.map(|value| {\n    |   _____^\n@@ -167,23 +167,23 @@ LL | ||     });\n    | \n \n error: called `map(f)` on an Result value where `f` is a unit closure\n-  --> $DIR/result_map_unit_fn.rs:89:5\n+  --> $DIR/result_map_unit_fn_fixable.rs:89:5\n    |\n LL |     x.field.map(|value| { do_nothing(value); do_nothing(value); });\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^-\n    |     |\n    |     help: try this: `if let Ok(value) = x.field { ... }`\n \n error: called `map(f)` on an Result value where `f` is a unit function\n-  --> $DIR/result_map_unit_fn.rs:93:5\n+  --> $DIR/result_map_unit_fn_fixable.rs:93:5\n    |\n LL |     \"12\".parse::<i32>().map(diverge);\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^-\n    |     |\n    |     help: try this: `if let Ok(_) = \"12\".parse::<i32>() { diverge(...) }`\n \n error: called `map(f)` on an Result value where `f` is a unit function\n-  --> $DIR/result_map_unit_fn.rs:99:5\n+  --> $DIR/result_map_unit_fn_fixable.rs:99:5\n    |\n LL |     y.map(do_nothing);\n    |     ^^^^^^^^^^^^^^^^^-", "previous_filename": "tests/ui/result_map_unit_fn.stderr"}]}