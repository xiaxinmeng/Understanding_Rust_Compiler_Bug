{"sha": "708c2d95c14829e0acbe7f40d9bea39e7bb03450", "node_id": "C_kwDOAAsO6NoAKDcwOGMyZDk1YzE0ODI5ZTBhY2JlN2Y0MGQ5YmVhMzllN2JiMDM0NTA", "commit": {"author": {"name": "Nadir Fejzic", "email": "nadirfejzo@gmail.com", "date": "2022-10-01T13:58:10Z"}, "committer": {"name": "Nadir Fejzic", "email": "nadirfejzo@gmail.com", "date": "2022-11-10T14:46:41Z"}, "message": "feat: add and implement unchecked_duration_subtraction lint", "tree": {"sha": "26cd98e64b7c8c5fc7b2ee23ae0d397d8c5c0776", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/26cd98e64b7c8c5fc7b2ee23ae0d397d8c5c0776"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/708c2d95c14829e0acbe7f40d9bea39e7bb03450", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/708c2d95c14829e0acbe7f40d9bea39e7bb03450", "html_url": "https://github.com/rust-lang/rust/commit/708c2d95c14829e0acbe7f40d9bea39e7bb03450", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/708c2d95c14829e0acbe7f40d9bea39e7bb03450/comments", "author": {"login": "nfejzic", "id": 40841816, "node_id": "MDQ6VXNlcjQwODQxODE2", "avatar_url": "https://avatars.githubusercontent.com/u/40841816?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nfejzic", "html_url": "https://github.com/nfejzic", "followers_url": "https://api.github.com/users/nfejzic/followers", "following_url": "https://api.github.com/users/nfejzic/following{/other_user}", "gists_url": "https://api.github.com/users/nfejzic/gists{/gist_id}", "starred_url": "https://api.github.com/users/nfejzic/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nfejzic/subscriptions", "organizations_url": "https://api.github.com/users/nfejzic/orgs", "repos_url": "https://api.github.com/users/nfejzic/repos", "events_url": "https://api.github.com/users/nfejzic/events{/privacy}", "received_events_url": "https://api.github.com/users/nfejzic/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nfejzic", "id": 40841816, "node_id": "MDQ6VXNlcjQwODQxODE2", "avatar_url": "https://avatars.githubusercontent.com/u/40841816?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nfejzic", "html_url": "https://github.com/nfejzic", "followers_url": "https://api.github.com/users/nfejzic/followers", "following_url": "https://api.github.com/users/nfejzic/following{/other_user}", "gists_url": "https://api.github.com/users/nfejzic/gists{/gist_id}", "starred_url": "https://api.github.com/users/nfejzic/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nfejzic/subscriptions", "organizations_url": "https://api.github.com/users/nfejzic/orgs", "repos_url": "https://api.github.com/users/nfejzic/repos", "events_url": "https://api.github.com/users/nfejzic/events{/privacy}", "received_events_url": "https://api.github.com/users/nfejzic/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "432baf7026aa896cfe3d44705537879ab2202bfb", "url": "https://api.github.com/repos/rust-lang/rust/commits/432baf7026aa896cfe3d44705537879ab2202bfb", "html_url": "https://github.com/rust-lang/rust/commit/432baf7026aa896cfe3d44705537879ab2202bfb"}], "stats": {"total": 112, "additions": 111, "deletions": 1}, "files": [{"sha": "eb4ca9801432cfef98adfee8b4c5e026f50ee022", "filename": "CHANGELOG.md", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/708c2d95c14829e0acbe7f40d9bea39e7bb03450/CHANGELOG.md", "raw_url": "https://github.com/rust-lang/rust/raw/708c2d95c14829e0acbe7f40d9bea39e7bb03450/CHANGELOG.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/CHANGELOG.md?ref=708c2d95c14829e0acbe7f40d9bea39e7bb03450", "patch": "@@ -4428,6 +4428,7 @@ Released 2018-09-13\n [`try_err`]: https://rust-lang.github.io/rust-clippy/master/index.html#try_err\n [`type_complexity`]: https://rust-lang.github.io/rust-clippy/master/index.html#type_complexity\n [`type_repetition_in_bounds`]: https://rust-lang.github.io/rust-clippy/master/index.html#type_repetition_in_bounds\n+[`unchecked_duration_subtraction`]: https://rust-lang.github.io/rust-clippy/master/index.html#unchecked_duration_subtraction\n [`undocumented_unsafe_blocks`]: https://rust-lang.github.io/rust-clippy/master/index.html#undocumented_unsafe_blocks\n [`undropped_manually_drops`]: https://rust-lang.github.io/rust-clippy/master/index.html#undropped_manually_drops\n [`unicode_not_nfc`]: https://rust-lang.github.io/rust-clippy/master/index.html#unicode_not_nfc"}, {"sha": "a5407b65b88d1633f5bf2c8d7642e46dfdad3133", "filename": "clippy_lints/src/lib.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/708c2d95c14829e0acbe7f40d9bea39e7bb03450/clippy_lints%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/708c2d95c14829e0acbe7f40d9bea39e7bb03450/clippy_lints%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flib.rs?ref=708c2d95c14829e0acbe7f40d9bea39e7bb03450", "patch": "@@ -279,6 +279,7 @@ mod trailing_empty_array;\n mod trait_bounds;\n mod transmute;\n mod types;\n+mod unchecked_duration_subtraction;\n mod undocumented_unsafe_blocks;\n mod unicode;\n mod uninit_vec;\n@@ -921,6 +922,7 @@ pub fn register_plugins(store: &mut rustc_lint::LintStore, sess: &Session, conf:\n     store.register_late_pass(|_| Box::new(from_raw_with_void_ptr::FromRawWithVoidPtr));\n     store.register_late_pass(|_| Box::new(suspicious_xor_used_as_pow::ConfusingXorAndPow));\n     store.register_late_pass(move |_| Box::new(manual_is_ascii_check::ManualIsAsciiCheck::new(msrv)));\n+    store.register_late_pass(move || Box::new(unchecked_duration_subtraction::UncheckedDurationSubtraction::new(msrv)));\n     // add lints here, do not remove this comment, it's used in `new_lint`\n }\n "}, {"sha": "fb08067de8d4fd8be64823dea0044c4e671f8758", "filename": "clippy_lints/src/unchecked_duration_subtraction.rs", "status": "added", "additions": 107, "deletions": 0, "changes": 107, "blob_url": "https://github.com/rust-lang/rust/blob/708c2d95c14829e0acbe7f40d9bea39e7bb03450/clippy_lints%2Fsrc%2Funchecked_duration_subtraction.rs", "raw_url": "https://github.com/rust-lang/rust/raw/708c2d95c14829e0acbe7f40d9bea39e7bb03450/clippy_lints%2Fsrc%2Funchecked_duration_subtraction.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Funchecked_duration_subtraction.rs?ref=708c2d95c14829e0acbe7f40d9bea39e7bb03450", "patch": "@@ -0,0 +1,107 @@\n+use clippy_utils::{diagnostics, meets_msrv, msrvs, source, ty};\n+use rustc_errors::Applicability;\n+use rustc_hir::*;\n+use rustc_lint::{LateContext, LateLintPass};\n+use rustc_semver::RustcVersion;\n+use rustc_session::{declare_tool_lint, impl_lint_pass};\n+use rustc_span::symbol::sym;\n+\n+declare_clippy_lint! {\n+    /// ### What it does\n+    /// Finds patterns of unchecked subtraction of [`Duration`] from [`Instant::now()`].\n+    ///\n+    /// ### Why is this bad?\n+    /// Unchecked subtraction could cause underflow on certain platforms, leading to bugs and/or\n+    /// unintentional panics.\n+    ///\n+    /// ### Example\n+    /// ```rust\n+    /// let time_passed = Instant::now() - Duration::from_secs(5);\n+    /// ```\n+    ///\n+    /// Use instead:\n+    /// ```rust\n+    /// let time_passed = Instant::now().checked_sub(Duration::from_secs(5));\n+    /// ```\n+    ///\n+    /// [`Duration`]: std::time::Duration\n+    /// [`Instant::now()`]: std::time::Instant::now;\n+    #[clippy::version = \"1.65.0\"]\n+    pub UNCHECKED_DURATION_SUBTRACTION,\n+    suspicious,\n+    \"finds unchecked subtraction of a 'Duration' from an 'Instant'\"\n+}\n+\n+pub struct UncheckedDurationSubtraction {\n+    msrv: Option<RustcVersion>,\n+}\n+\n+impl UncheckedDurationSubtraction {\n+    #[must_use]\n+    pub fn new(msrv: Option<RustcVersion>) -> Self {\n+        Self { msrv }\n+    }\n+}\n+\n+impl_lint_pass!(UncheckedDurationSubtraction => [UNCHECKED_DURATION_SUBTRACTION]);\n+\n+impl<'tcx> LateLintPass<'tcx> for UncheckedDurationSubtraction {\n+    fn check_expr(&mut self, cx: &LateContext<'tcx>, expr: &'tcx Expr<'tcx>) {\n+        if expr.span.from_expansion() || !meets_msrv(self.msrv, msrvs::TRY_FROM) {\n+            return;\n+        }\n+\n+        if_chain! {\n+            if let ExprKind::Binary(op, lhs, rhs) = expr.kind;\n+\n+            if let BinOpKind::Sub = op.node;\n+\n+            // get types of left and right side\n+            if is_an_instant(cx, lhs);\n+            if is_a_duration(cx, rhs);\n+\n+            then {\n+                print_lint_and_sugg(cx, lhs, rhs, expr)\n+            }\n+        }\n+    }\n+}\n+\n+fn is_an_instant(cx: &LateContext<'_>, expr: &Expr<'_>) -> bool {\n+    let expr_ty = cx.typeck_results().expr_ty(expr);\n+\n+    match expr_ty.kind() {\n+        rustc_middle::ty::Adt(def, _) => {\n+            clippy_utils::match_def_path(cx, dbg!(def).did(), &clippy_utils::paths::INSTANT)\n+        },\n+        _ => false,\n+    }\n+}\n+\n+fn is_a_duration(cx: &LateContext<'_>, expr: &Expr<'_>) -> bool {\n+    let expr_ty = cx.typeck_results().expr_ty(expr);\n+    ty::is_type_diagnostic_item(cx, expr_ty, sym::Duration)\n+}\n+\n+fn print_lint_and_sugg(cx: &LateContext<'_>, left_expr: &Expr<'_>, right_expr: &Expr<'_>, expr: &Expr<'_>) {\n+    let mut applicability = Applicability::MachineApplicable;\n+\n+    let left_expr =\n+        source::snippet_with_applicability(cx, left_expr.span, \"std::time::Instant::now()\", &mut applicability);\n+    let right_expr = source::snippet_with_applicability(\n+        cx,\n+        right_expr.span,\n+        \"std::time::Duration::from_secs(1)\",\n+        &mut applicability,\n+    );\n+\n+    diagnostics::span_lint_and_sugg(\n+        cx,\n+        UNCHECKED_DURATION_SUBTRACTION,\n+        expr.span,\n+        \"unchecked subtraction of a 'Duration' from an 'Instant'\",\n+        \"try\",\n+        format!(\"{}.checked_sub({}).unwrap();\", left_expr, right_expr),\n+        applicability,\n+    );\n+}"}, {"sha": "ab58e9b8b68d32ae334718d4afcf2bceab7cea31", "filename": "clippy_lints/src/utils/conf.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/708c2d95c14829e0acbe7f40d9bea39e7bb03450/clippy_lints%2Fsrc%2Futils%2Fconf.rs", "raw_url": "https://github.com/rust-lang/rust/raw/708c2d95c14829e0acbe7f40d9bea39e7bb03450/clippy_lints%2Fsrc%2Futils%2Fconf.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Futils%2Fconf.rs?ref=708c2d95c14829e0acbe7f40d9bea39e7bb03450", "patch": "@@ -213,7 +213,7 @@ define_Conf! {\n     ///\n     /// Suppress lints whenever the suggested change would cause breakage for other crates.\n     (avoid_breaking_exported_api: bool = true),\n-    /// Lint: MANUAL_SPLIT_ONCE, MANUAL_STR_REPEAT, CLONED_INSTEAD_OF_COPIED, REDUNDANT_FIELD_NAMES, REDUNDANT_STATIC_LIFETIMES, FILTER_MAP_NEXT, CHECKED_CONVERSIONS, MANUAL_RANGE_CONTAINS, USE_SELF, MEM_REPLACE_WITH_DEFAULT, MANUAL_NON_EXHAUSTIVE, OPTION_AS_REF_DEREF, MAP_UNWRAP_OR, MATCH_LIKE_MATCHES_MACRO, MANUAL_STRIP, MISSING_CONST_FOR_FN, UNNESTED_OR_PATTERNS, FROM_OVER_INTO, PTR_AS_PTR, IF_THEN_SOME_ELSE_NONE, APPROX_CONSTANT, DEPRECATED_CFG_ATTR, INDEX_REFUTABLE_SLICE, MAP_CLONE, BORROW_AS_PTR, MANUAL_BITS, ERR_EXPECT, CAST_ABS_TO_UNSIGNED, UNINLINED_FORMAT_ARGS, MANUAL_CLAMP, MANUAL_LET_ELSE.\n+    /// Lint: MANUAL_SPLIT_ONCE, MANUAL_STR_REPEAT, CLONED_INSTEAD_OF_COPIED, REDUNDANT_FIELD_NAMES, REDUNDANT_STATIC_LIFETIMES, FILTER_MAP_NEXT, CHECKED_CONVERSIONS, MANUAL_RANGE_CONTAINS, USE_SELF, MEM_REPLACE_WITH_DEFAULT, MANUAL_NON_EXHAUSTIVE, OPTION_AS_REF_DEREF, MAP_UNWRAP_OR, MATCH_LIKE_MATCHES_MACRO, MANUAL_STRIP, MISSING_CONST_FOR_FN, UNNESTED_OR_PATTERNS, FROM_OVER_INTO, PTR_AS_PTR, IF_THEN_SOME_ELSE_NONE, APPROX_CONSTANT, DEPRECATED_CFG_ATTR, INDEX_REFUTABLE_SLICE, MAP_CLONE, BORROW_AS_PTR, MANUAL_BITS, ERR_EXPECT, CAST_ABS_TO_UNSIGNED, UNINLINED_FORMAT_ARGS, MANUAL_CLAMP, MANUAL_LET_ELSE, UNCHECKED_DURATION_SUBTRACTION.\n     ///\n     /// The minimum rust version that the project supports\n     (msrv: Option<String> = None),"}]}