{"sha": "bb74c20a5d2594cab6d9416c2ed2cc8bd45fc956", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJiNzRjMjBhNWQyNTk0Y2FiNmQ5NDE2YzJlZDJjYzhiZDQ1ZmM5NTY=", "commit": {"author": {"name": "leonardo.yvens", "email": "leoyvens@gmail.com", "date": "2017-10-03T01:04:23Z"}, "committer": {"name": "leonardo.yvens", "email": "leoyvens@gmail.com", "date": "2017-10-03T01:04:23Z"}, "message": "Inline eq_slice into str::eq\n\nIt's the only use of the function.", "tree": {"sha": "3beac70f2fbec8d83f494865576b9951c4bb8749", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3beac70f2fbec8d83f494865576b9951c4bb8749"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bb74c20a5d2594cab6d9416c2ed2cc8bd45fc956", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bb74c20a5d2594cab6d9416c2ed2cc8bd45fc956", "html_url": "https://github.com/rust-lang/rust/commit/bb74c20a5d2594cab6d9416c2ed2cc8bd45fc956", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bb74c20a5d2594cab6d9416c2ed2cc8bd45fc956/comments", "author": {"login": "leoyvens", "id": 9885558, "node_id": "MDQ6VXNlcjk4ODU1NTg=", "avatar_url": "https://avatars.githubusercontent.com/u/9885558?v=4", "gravatar_id": "", "url": "https://api.github.com/users/leoyvens", "html_url": "https://github.com/leoyvens", "followers_url": "https://api.github.com/users/leoyvens/followers", "following_url": "https://api.github.com/users/leoyvens/following{/other_user}", "gists_url": "https://api.github.com/users/leoyvens/gists{/gist_id}", "starred_url": "https://api.github.com/users/leoyvens/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/leoyvens/subscriptions", "organizations_url": "https://api.github.com/users/leoyvens/orgs", "repos_url": "https://api.github.com/users/leoyvens/repos", "events_url": "https://api.github.com/users/leoyvens/events{/privacy}", "received_events_url": "https://api.github.com/users/leoyvens/received_events", "type": "User", "site_admin": false}, "committer": {"login": "leoyvens", "id": 9885558, "node_id": "MDQ6VXNlcjk4ODU1NTg=", "avatar_url": "https://avatars.githubusercontent.com/u/9885558?v=4", "gravatar_id": "", "url": "https://api.github.com/users/leoyvens", "html_url": "https://github.com/leoyvens", "followers_url": "https://api.github.com/users/leoyvens/followers", "following_url": "https://api.github.com/users/leoyvens/following{/other_user}", "gists_url": "https://api.github.com/users/leoyvens/gists{/gist_id}", "starred_url": "https://api.github.com/users/leoyvens/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/leoyvens/subscriptions", "organizations_url": "https://api.github.com/users/leoyvens/orgs", "repos_url": "https://api.github.com/users/leoyvens/repos", "events_url": "https://api.github.com/users/leoyvens/events{/privacy}", "received_events_url": "https://api.github.com/users/leoyvens/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "185cc5f26d2c8a794189b028b43f6a3b8fc586db", "url": "https://api.github.com/repos/rust-lang/rust/commits/185cc5f26d2c8a794189b028b43f6a3b8fc586db", "html_url": "https://github.com/rust-lang/rust/commit/185cc5f26d2c8a794189b028b43f6a3b8fc586db"}], "stats": {"total": 13, "additions": 1, "deletions": 12}, "files": [{"sha": "670c2afa66f8597ae24e597cc6dff2faceefaf6e", "filename": "src/libcore/str/mod.rs", "status": "modified", "additions": 1, "deletions": 12, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/bb74c20a5d2594cab6d9416c2ed2cc8bd45fc956/src%2Flibcore%2Fstr%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bb74c20a5d2594cab6d9416c2ed2cc8bd45fc956/src%2Flibcore%2Fstr%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fstr%2Fmod.rs?ref=bb74c20a5d2594cab6d9416c2ed2cc8bd45fc956", "patch": "@@ -1405,16 +1405,6 @@ impl<'a> DoubleEndedIterator for LinesAny<'a> {\n #[allow(deprecated)]\n impl<'a> FusedIterator for LinesAny<'a> {}\n \n-/*\n-Section: Comparing strings\n-*/\n-\n-/// Bytewise slice equality\n-#[inline]\n-fn eq_slice(a: &str, b: &str) -> bool {\n-    a.as_bytes() == b.as_bytes()\n-}\n-\n /*\n Section: UTF-8 validation\n */\n@@ -1590,7 +1580,6 @@ mod traits {\n     use cmp::Ordering;\n     use ops;\n     use slice::{self, SliceIndex};\n-    use str::eq_slice;\n \n     /// Implements ordering of strings.\n     ///\n@@ -1611,7 +1600,7 @@ mod traits {\n     impl PartialEq for str {\n         #[inline]\n         fn eq(&self, other: &str) -> bool {\n-            eq_slice(self, other)\n+            self.as_bytes() == other.as_bytes()\n         }\n         #[inline]\n         fn ne(&self, other: &str) -> bool { !(*self).eq(other) }"}]}