{"sha": "0e4f55d63f84d86f856aa60786823e72083f40eb", "node_id": "C_kwDOAAsO6NoAKDBlNGY1NWQ2M2Y4NGQ4NmY4NTZhYTYwNzg2ODIzZTcyMDgzZjQwZWI", "commit": {"author": {"name": "Nicholas Nethercote", "email": "n.nethercote@gmail.com", "date": "2022-12-01T01:18:02Z"}, "committer": {"name": "Nicholas Nethercote", "email": "n.nethercote@gmail.com", "date": "2022-12-02T02:59:28Z"}, "message": "Inline and remove `late_lint_mod_pass`.\n\nIt has a single call site.", "tree": {"sha": "1dafd875916b81bd95898e1d286513114c9a9d29", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1dafd875916b81bd95898e1d286513114c9a9d29"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0e4f55d63f84d86f856aa60786823e72083f40eb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0e4f55d63f84d86f856aa60786823e72083f40eb", "html_url": "https://github.com/rust-lang/rust/commit/0e4f55d63f84d86f856aa60786823e72083f40eb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0e4f55d63f84d86f856aa60786823e72083f40eb/comments", "author": {"login": "nnethercote", "id": 1940286, "node_id": "MDQ6VXNlcjE5NDAyODY=", "avatar_url": "https://avatars.githubusercontent.com/u/1940286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nnethercote", "html_url": "https://github.com/nnethercote", "followers_url": "https://api.github.com/users/nnethercote/followers", "following_url": "https://api.github.com/users/nnethercote/following{/other_user}", "gists_url": "https://api.github.com/users/nnethercote/gists{/gist_id}", "starred_url": "https://api.github.com/users/nnethercote/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nnethercote/subscriptions", "organizations_url": "https://api.github.com/users/nnethercote/orgs", "repos_url": "https://api.github.com/users/nnethercote/repos", "events_url": "https://api.github.com/users/nnethercote/events{/privacy}", "received_events_url": "https://api.github.com/users/nnethercote/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nnethercote", "id": 1940286, "node_id": "MDQ6VXNlcjE5NDAyODY=", "avatar_url": "https://avatars.githubusercontent.com/u/1940286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nnethercote", "html_url": "https://github.com/nnethercote", "followers_url": "https://api.github.com/users/nnethercote/followers", "following_url": "https://api.github.com/users/nnethercote/following{/other_user}", "gists_url": "https://api.github.com/users/nnethercote/gists{/gist_id}", "starred_url": "https://api.github.com/users/nnethercote/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nnethercote/subscriptions", "organizations_url": "https://api.github.com/users/nnethercote/orgs", "repos_url": "https://api.github.com/users/nnethercote/repos", "events_url": "https://api.github.com/users/nnethercote/events{/privacy}", "received_events_url": "https://api.github.com/users/nnethercote/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "890c5ead2043f22c8d57d4758e0826cde896f059", "url": "https://api.github.com/repos/rust-lang/rust/commits/890c5ead2043f22c8d57d4758e0826cde896f059", "html_url": "https://github.com/rust-lang/rust/commit/890c5ead2043f22c8d57d4758e0826cde896f059"}], "stats": {"total": 25, "additions": 8, "deletions": 17}, "files": [{"sha": "6a22c87cf56c1faa1e77154d19d732cea4259253", "filename": "compiler/rustc_lint/src/late.rs", "status": "modified", "additions": 8, "deletions": 17, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/0e4f55d63f84d86f856aa60786823e72083f40eb/compiler%2Frustc_lint%2Fsrc%2Flate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0e4f55d63f84d86f856aa60786823e72083f40eb/compiler%2Frustc_lint%2Fsrc%2Flate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_lint%2Fsrc%2Flate.rs?ref=0e4f55d63f84d86f856aa60786823e72083f40eb", "patch": "@@ -326,25 +326,28 @@ macro_rules! late_lint_pass_impl {\n \n crate::late_lint_methods!(late_lint_pass_impl, [], ['tcx]);\n \n-fn late_lint_mod_pass<'tcx, T: LateLintPass<'tcx>>(\n+pub fn late_lint_mod<'tcx, T: LateLintPass<'tcx> + 'tcx>(\n     tcx: TyCtxt<'tcx>,\n     module_def_id: LocalDefId,\n-    pass: T,\n+    builtin_lints: T,\n ) {\n-    let effective_visibilities = &tcx.effective_visibilities(());\n-\n     let context = LateContext {\n         tcx,\n         enclosing_body: None,\n         cached_typeck_results: Cell::new(None),\n         param_env: ty::ParamEnv::empty(),\n-        effective_visibilities,\n+        effective_visibilities: &tcx.effective_visibilities(()),\n         lint_store: unerased_lint_store(tcx),\n         last_node_with_lint_attrs: tcx.hir().local_def_id_to_hir_id(module_def_id),\n         generics: None,\n         only_module: true,\n     };\n \n+    let mut passes: Vec<_> =\n+        unerased_lint_store(tcx).late_module_passes.iter().map(|pass| (pass)(tcx)).collect();\n+    passes.push(Box::new(builtin_lints));\n+    let pass = LateLintPassObjects { lints: &mut passes[..] };\n+\n     let mut cx = LateContextAndPass { context, pass };\n \n     let (module, _span, hir_id) = tcx.hir().get_module(module_def_id);\n@@ -358,18 +361,6 @@ fn late_lint_mod_pass<'tcx, T: LateLintPass<'tcx>>(\n     }\n }\n \n-pub fn late_lint_mod<'tcx, T: LateLintPass<'tcx> + 'tcx>(\n-    tcx: TyCtxt<'tcx>,\n-    module_def_id: LocalDefId,\n-    builtin_lints: T,\n-) {\n-    let mut passes: Vec<_> =\n-        unerased_lint_store(tcx).late_module_passes.iter().map(|pass| (pass)(tcx)).collect();\n-    passes.push(Box::new(builtin_lints));\n-\n-    late_lint_mod_pass(tcx, module_def_id, LateLintPassObjects { lints: &mut passes[..] });\n-}\n-\n fn late_lint_pass_crate<'tcx, T: LateLintPass<'tcx>>(tcx: TyCtxt<'tcx>, pass: T) {\n     let effective_visibilities = &tcx.effective_visibilities(());\n "}]}