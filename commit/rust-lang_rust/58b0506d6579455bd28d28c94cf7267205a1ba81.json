{"sha": "58b0506d6579455bd28d28c94cf7267205a1ba81", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU4YjA1MDZkNjU3OTQ1NWJkMjhkMjhjOTRjZjcyNjcyMDVhMWJhODE=", "commit": {"author": {"name": "Santiago Pastorino", "email": "spastorino@gmail.com", "date": "2017-12-12T14:59:09Z"}, "committer": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2017-12-20T19:38:10Z"}, "message": "Move MirVisitable to visit.rs", "tree": {"sha": "15b0b5cfedc156a2e7b6e92a15462f0411900150", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/15b0b5cfedc156a2e7b6e92a15462f0411900150"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/58b0506d6579455bd28d28c94cf7267205a1ba81", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/58b0506d6579455bd28d28c94cf7267205a1ba81", "html_url": "https://github.com/rust-lang/rust/commit/58b0506d6579455bd28d28c94cf7267205a1ba81", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/58b0506d6579455bd28d28c94cf7267205a1ba81/comments", "author": {"login": "spastorino", "id": 52642, "node_id": "MDQ6VXNlcjUyNjQy", "avatar_url": "https://avatars.githubusercontent.com/u/52642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spastorino", "html_url": "https://github.com/spastorino", "followers_url": "https://api.github.com/users/spastorino/followers", "following_url": "https://api.github.com/users/spastorino/following{/other_user}", "gists_url": "https://api.github.com/users/spastorino/gists{/gist_id}", "starred_url": "https://api.github.com/users/spastorino/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spastorino/subscriptions", "organizations_url": "https://api.github.com/users/spastorino/orgs", "repos_url": "https://api.github.com/users/spastorino/repos", "events_url": "https://api.github.com/users/spastorino/events{/privacy}", "received_events_url": "https://api.github.com/users/spastorino/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "93afb1affc9f4e7616e05a3fc2fdb66e81f35d1e", "url": "https://api.github.com/repos/rust-lang/rust/commits/93afb1affc9f4e7616e05a3fc2fdb66e81f35d1e", "html_url": "https://github.com/rust-lang/rust/commit/93afb1affc9f4e7616e05a3fc2fdb66e81f35d1e"}], "stats": {"total": 51, "additions": 27, "deletions": 24}, "files": [{"sha": "becaf78f7eca58822cc5aeba4ae0e65e67be2c9a", "filename": "src/librustc/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/58b0506d6579455bd28d28c94cf7267205a1ba81/src%2Flibrustc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/58b0506d6579455bd28d28c94cf7267205a1ba81/src%2Flibrustc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Flib.rs?ref=58b0506d6579455bd28d28c94cf7267205a1ba81", "patch": "@@ -46,6 +46,7 @@\n #![feature(const_fn)]\n #![feature(core_intrinsics)]\n #![feature(drain_filter)]\n+#![feature(dyn_trait)]\n #![feature(from_ref)]\n #![feature(i128)]\n #![feature(i128_type)]"}, {"sha": "0e6c14af1ecfabfaf13eb7e0969214a2a642fbe5", "filename": "src/librustc/mir/visit.rs", "status": "modified", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/58b0506d6579455bd28d28c94cf7267205a1ba81/src%2Flibrustc%2Fmir%2Fvisit.rs", "raw_url": "https://github.com/rust-lang/rust/raw/58b0506d6579455bd28d28c94cf7267205a1ba81/src%2Flibrustc%2Fmir%2Fvisit.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmir%2Fvisit.rs?ref=58b0506d6579455bd28d28c94cf7267205a1ba81", "patch": "@@ -811,6 +811,31 @@ macro_rules! make_mir_visitor {\n make_mir_visitor!(Visitor,);\n make_mir_visitor!(MutVisitor,mut);\n \n+pub trait MirVisitable<'tcx> {\n+    fn apply(&self, location: Location, visitor: &mut dyn Visitor<'tcx>);\n+}\n+\n+impl<'tcx> MirVisitable<'tcx> for Statement<'tcx> {\n+    fn apply(&self, location: Location, visitor: &mut dyn Visitor<'tcx>)\n+    {\n+        visitor.visit_statement(location.block, self, location)\n+    }\n+}\n+\n+impl<'tcx> MirVisitable<'tcx> for Terminator<'tcx> {\n+    fn apply(&self, location: Location, visitor: &mut dyn Visitor<'tcx>)\n+    {\n+        visitor.visit_terminator(location.block, self, location)\n+    }\n+}\n+\n+impl<'tcx> MirVisitable<'tcx> for Option<Terminator<'tcx>> {\n+    fn apply(&self, location: Location, visitor: &mut dyn Visitor<'tcx>)\n+    {\n+        visitor.visit_terminator(location.block, self.as_ref().unwrap(), location)\n+    }\n+}\n+\n /// Extra information passed to `visit_ty` and friends to give context\n /// about where the type etc appears.\n #[derive(Copy, Clone, Debug, PartialEq, Eq, Hash)]"}, {"sha": "cce3f63b2808bbb811792c757c8e721ae75223d3", "filename": "src/librustc_mir/util/liveness.rs", "status": "modified", "additions": 1, "deletions": 24, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/58b0506d6579455bd28d28c94cf7267205a1ba81/src%2Flibrustc_mir%2Futil%2Fliveness.rs", "raw_url": "https://github.com/rust-lang/rust/raw/58b0506d6579455bd28d28c94cf7267205a1ba81/src%2Flibrustc_mir%2Futil%2Fliveness.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Futil%2Fliveness.rs?ref=58b0506d6579455bd28d28c94cf7267205a1ba81", "patch": "@@ -39,6 +39,7 @@ use rustc_data_structures::indexed_vec::{Idx, IndexVec};\n use rustc_data_structures::indexed_set::IdxSetBuf;\n use util::pretty::{dump_enabled, write_basic_block, write_mir_intro};\n use rustc::ty::item_path;\n+use rustc::mir::visit::MirVisitable;\n use std::path::{Path, PathBuf};\n use std::fs;\n use rustc::ty::TyCtxt;\n@@ -358,30 +359,6 @@ fn block<'tcx>(mode: LivenessMode, b: &BasicBlockData<'tcx>, locals: usize) -> D\n     visitor.defs_uses\n }\n \n-trait MirVisitable<'tcx> {\n-    fn apply<V>(&self, location: Location, visitor: &mut V)\n-    where\n-        V: Visitor<'tcx>;\n-}\n-\n-impl<'tcx> MirVisitable<'tcx> for Statement<'tcx> {\n-    fn apply<V>(&self, location: Location, visitor: &mut V)\n-    where\n-        V: Visitor<'tcx>,\n-    {\n-        visitor.visit_statement(location.block, self, location)\n-    }\n-}\n-\n-impl<'tcx> MirVisitable<'tcx> for Option<Terminator<'tcx>> {\n-    fn apply<V>(&self, location: Location, visitor: &mut V)\n-    where\n-        V: Visitor<'tcx>,\n-    {\n-        visitor.visit_terminator(location.block, self.as_ref().unwrap(), location)\n-    }\n-}\n-\n pub fn dump_mir<'a, 'tcx>(\n     tcx: TyCtxt<'a, 'tcx, 'tcx>,\n     pass_name: &str,"}]}