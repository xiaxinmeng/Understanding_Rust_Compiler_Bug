{"sha": "80a65bcaf2f2b8a5c659b21b32b42bc300338a0e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjgwYTY1YmNhZjJmMmI4YTVjNjU5YjIxYjMyYjQyYmMzMDAzMzhhMGU=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-01-25T07:49:40Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-01-25T07:49:40Z"}, "message": "Auto merge of #68448 - maurer:dyn-cdylib, r=alexcrichton\n\nrustc: Allow cdylibs to link against dylibs\n\nPreviously, rustc mandated that cdylibs could only link against rlibs as dependencies (not dylibs).\nThis commit disables that restriction and tests that it works in a simple case.\n\nI don't have a windows rustc dev environment, so I guessed at the MSVC test code, I'm hoping the CI can run that for me.\n\nAdditionally, we might want to consider emitting (through cargo or rustc) some metadata to help C users of a cdylib figure out where all the dylibs they need are. I don't think that should be needed to land this change, as it will still be usable by homogeneous build systems without it.\n\nMy new test was templated off the `tests/run-make-fulldeps/cdylib` test. It seemed more appropriate to have it as a separate test, since both foo.rs and bar.rs would need to be replicated to make that test cover both cases, but I can do that if it would be preferred.\n\nIf I'm doing anything out of order/process, please let me know; this is only my second change to rustc and the prior one was trivial.\n\nr? alexcrichton", "tree": {"sha": "52525b3dfbde41746b2b9b3c9122393574fd3b56", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/52525b3dfbde41746b2b9b3c9122393574fd3b56"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/80a65bcaf2f2b8a5c659b21b32b42bc300338a0e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/80a65bcaf2f2b8a5c659b21b32b42bc300338a0e", "html_url": "https://github.com/rust-lang/rust/commit/80a65bcaf2f2b8a5c659b21b32b42bc300338a0e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/80a65bcaf2f2b8a5c659b21b32b42bc300338a0e/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8bf17584e01d85c631bcb19b7cd0f95e84c9a9b1", "url": "https://api.github.com/repos/rust-lang/rust/commits/8bf17584e01d85c631bcb19b7cd0f95e84c9a9b1", "html_url": "https://github.com/rust-lang/rust/commit/8bf17584e01d85c631bcb19b7cd0f95e84c9a9b1"}, {"sha": "72aaa3a414d17aa0c4f19feafa5bab5f84b60e63", "url": "https://api.github.com/repos/rust-lang/rust/commits/72aaa3a414d17aa0c4f19feafa5bab5f84b60e63", "html_url": "https://github.com/rust-lang/rust/commit/72aaa3a414d17aa0c4f19feafa5bab5f84b60e63"}], "stats": {"total": 90, "additions": 66, "deletions": 24}, "files": [{"sha": "375f372005f7cad8d6b3791ee4b9a157acc01471", "filename": "src/librustc_metadata/dependency_format.rs", "status": "modified", "additions": 11, "deletions": 9, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/80a65bcaf2f2b8a5c659b21b32b42bc300338a0e/src%2Flibrustc_metadata%2Fdependency_format.rs", "raw_url": "https://github.com/rust-lang/rust/raw/80a65bcaf2f2b8a5c659b21b32b42bc300338a0e/src%2Flibrustc_metadata%2Fdependency_format.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_metadata%2Fdependency_format.rs?ref=80a65bcaf2f2b8a5c659b21b32b42bc300338a0e", "patch": "@@ -83,14 +83,17 @@ fn calculate_type(tcx: TyCtxt<'_>, ty: config::CrateType) -> DependencyList {\n     }\n \n     let preferred_linkage = match ty {\n-        // cdylibs must have all static dependencies.\n-        config::CrateType::Cdylib => Linkage::Static,\n-\n         // Generating a dylib without `-C prefer-dynamic` means that we're going\n         // to try to eagerly statically link all dependencies. This is normally\n         // done for end-product dylibs, not intermediate products.\n-        config::CrateType::Dylib if !sess.opts.cg.prefer_dynamic => Linkage::Static,\n-        config::CrateType::Dylib => Linkage::Dynamic,\n+        //\n+        // Treat cdylibs similarly. If `-C prefer-dynamic` is set, the caller may\n+        // be code-size conscious, but without it, it makes sense to statically\n+        // link a cdylib.\n+        config::CrateType::Dylib | config::CrateType::Cdylib if !sess.opts.cg.prefer_dynamic => {\n+            Linkage::Static\n+        }\n+        config::CrateType::Dylib | config::CrateType::Cdylib => Linkage::Dynamic,\n \n         // If the global prefer_dynamic switch is turned off, or the final\n         // executable will be statically linked, prefer static crate linkage.\n@@ -122,10 +125,9 @@ fn calculate_type(tcx: TyCtxt<'_>, ty: config::CrateType) -> DependencyList {\n             return v;\n         }\n \n-        // Staticlibs, cdylibs, and static executables must have all static\n-        // dependencies. If any are not found, generate some nice pretty errors.\n-        if ty == config::CrateType::Cdylib\n-            || ty == config::CrateType::Staticlib\n+        // Staticlibs and static executables must have all static dependencies.\n+        // If any are not found, generate some nice pretty errors.\n+        if ty == config::CrateType::Staticlib\n             || (ty == config::CrateType::Executable\n                 && sess.crt_static()\n                 && !sess.target.target.options.crt_static_allows_dylibs)"}, {"sha": "5c9b2d1bb2f1e7fa2dd1647ded0cb9011850113b", "filename": "src/test/run-make-fulldeps/cdylib-dylib-linkage/Makefile", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/80a65bcaf2f2b8a5c659b21b32b42bc300338a0e/src%2Ftest%2Frun-make-fulldeps%2Fcdylib-dylib-linkage%2FMakefile", "raw_url": "https://github.com/rust-lang/rust/raw/80a65bcaf2f2b8a5c659b21b32b42bc300338a0e/src%2Ftest%2Frun-make-fulldeps%2Fcdylib-dylib-linkage%2FMakefile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcdylib-dylib-linkage%2FMakefile?ref=80a65bcaf2f2b8a5c659b21b32b42bc300338a0e", "patch": "@@ -0,0 +1,27 @@\n+include ../tools.mk\n+\n+TARGET_SYSROOT := $(shell $(RUSTC) --print sysroot)/lib/rustlib/$(TARGET)/lib\n+\n+ifdef IS_MSVC\n+LIBSTD := $(wildcard $(TARGET_SYSROOT)/libstd-*.dll.lib)\n+else\n+LIBSTD := $(wildcard $(TARGET_SYSROOT)/$(call DYLIB_GLOB,std))\n+STD := $(basename $(patsubst lib%,%, $(notdir $(LIBSTD))))\n+endif\n+\n+all: $(call RUN_BINFILE,foo)\n+\t$(call RUN,foo)\n+\n+ifdef IS_MSVC\n+CLIBS := $(TMPDIR)/foo.dll.lib $(TMPDIR)/bar.dll.lib $(LIBSTD)\n+$(call RUN_BINFILE,foo): $(call DYLIB,foo)\n+\t$(CC) $(CFLAGS) foo.c $(CLIBS) $(call OUT_EXE,foo)\n+else\n+CLIBS := -lfoo -lbar -l$(STD) -L $(TMPDIR) -L $(TARGET_SYSROOT)\n+$(call RUN_BINFILE,foo): $(call DYLIB,foo)\n+\t$(CC) $(CFLAGS) foo.c $(CLIBS) -o $(call RUN_BINFILE,foo)\n+endif\n+\n+$(call DYLIB,foo):\n+\t$(RUSTC) -C prefer-dynamic bar.rs\n+\t$(RUSTC) foo.rs"}, {"sha": "b3a7539abaeffe6d4ac414f79e0448a582298b6d", "filename": "src/test/run-make-fulldeps/cdylib-dylib-linkage/bar.rs", "status": "added", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/80a65bcaf2f2b8a5c659b21b32b42bc300338a0e/src%2Ftest%2Frun-make-fulldeps%2Fcdylib-dylib-linkage%2Fbar.rs", "raw_url": "https://github.com/rust-lang/rust/raw/80a65bcaf2f2b8a5c659b21b32b42bc300338a0e/src%2Ftest%2Frun-make-fulldeps%2Fcdylib-dylib-linkage%2Fbar.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcdylib-dylib-linkage%2Fbar.rs?ref=80a65bcaf2f2b8a5c659b21b32b42bc300338a0e", "patch": "@@ -0,0 +1,5 @@\n+#![crate_type = \"dylib\"]\n+\n+pub fn bar() {\n+    println!(\"hello!\");\n+}"}, {"sha": "154f9682ef8f1dd678cdb5a3605a11cee1cb92bf", "filename": "src/test/run-make-fulldeps/cdylib-dylib-linkage/foo.c", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/80a65bcaf2f2b8a5c659b21b32b42bc300338a0e/src%2Ftest%2Frun-make-fulldeps%2Fcdylib-dylib-linkage%2Ffoo.c", "raw_url": "https://github.com/rust-lang/rust/raw/80a65bcaf2f2b8a5c659b21b32b42bc300338a0e/src%2Ftest%2Frun-make-fulldeps%2Fcdylib-dylib-linkage%2Ffoo.c", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcdylib-dylib-linkage%2Ffoo.c?ref=80a65bcaf2f2b8a5c659b21b32b42bc300338a0e", "patch": "@@ -0,0 +1,10 @@\n+#include <assert.h>\n+\n+extern void foo();\n+extern unsigned bar(unsigned a, unsigned b);\n+\n+int main() {\n+  foo();\n+  assert(bar(1, 2) == 3);\n+  return 0;\n+}"}, {"sha": "c2cc3afcc13222b756c0bb07b40b5e3e98f79f19", "filename": "src/test/run-make-fulldeps/cdylib-dylib-linkage/foo.rs", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/80a65bcaf2f2b8a5c659b21b32b42bc300338a0e/src%2Ftest%2Frun-make-fulldeps%2Fcdylib-dylib-linkage%2Ffoo.rs", "raw_url": "https://github.com/rust-lang/rust/raw/80a65bcaf2f2b8a5c659b21b32b42bc300338a0e/src%2Ftest%2Frun-make-fulldeps%2Fcdylib-dylib-linkage%2Ffoo.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcdylib-dylib-linkage%2Ffoo.rs?ref=80a65bcaf2f2b8a5c659b21b32b42bc300338a0e", "patch": "@@ -0,0 +1,13 @@\n+#![crate_type = \"cdylib\"]\n+\n+extern crate bar;\n+\n+#[no_mangle]\n+pub extern fn foo() {\n+    bar::bar();\n+}\n+\n+#[no_mangle]\n+pub extern fn bar(a: u32, b: u32) -> u32 {\n+    a + b\n+}"}, {"sha": "8bd2b3353b8f33c666d59db4521113c0e3c5d366", "filename": "src/test/ui/auxiliary/cdylib-dep.rs", "status": "removed", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/8bf17584e01d85c631bcb19b7cd0f95e84c9a9b1/src%2Ftest%2Fui%2Fauxiliary%2Fcdylib-dep.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8bf17584e01d85c631bcb19b7cd0f95e84c9a9b1/src%2Ftest%2Fui%2Fauxiliary%2Fcdylib-dep.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fauxiliary%2Fcdylib-dep.rs?ref=8bf17584e01d85c631bcb19b7cd0f95e84c9a9b1", "patch": "@@ -1 +0,0 @@\n-#![crate_type = \"dylib\"]"}, {"sha": "abf954d8fb2c4a34e15b9c2000600b4ef5bbed09", "filename": "src/test/ui/cdylib-deps-must-be-static.rs", "status": "removed", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/8bf17584e01d85c631bcb19b7cd0f95e84c9a9b1/src%2Ftest%2Fui%2Fcdylib-deps-must-be-static.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8bf17584e01d85c631bcb19b7cd0f95e84c9a9b1/src%2Ftest%2Fui%2Fcdylib-deps-must-be-static.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcdylib-deps-must-be-static.rs?ref=8bf17584e01d85c631bcb19b7cd0f95e84c9a9b1", "patch": "@@ -1,10 +0,0 @@\n-// build-fail\n-// error-pattern: crate `cdylib_dep` required to be available in rlib format, but was not found\n-// aux-build:cdylib-dep.rs\n-// ignore-musl\n-// ignore-cloudabi\n-// ignore-emscripten\n-// ignore-sgx no dynamic libraries\n-#![crate_type = \"cdylib\"]\n-\n-extern crate cdylib_dep;"}, {"sha": "a1dc8e985dad03c20c8516489d841226949e5219", "filename": "src/test/ui/cdylib-deps-must-be-static.stderr", "status": "removed", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/8bf17584e01d85c631bcb19b7cd0f95e84c9a9b1/src%2Ftest%2Fui%2Fcdylib-deps-must-be-static.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/8bf17584e01d85c631bcb19b7cd0f95e84c9a9b1/src%2Ftest%2Fui%2Fcdylib-deps-must-be-static.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcdylib-deps-must-be-static.stderr?ref=8bf17584e01d85c631bcb19b7cd0f95e84c9a9b1", "patch": "@@ -1,4 +0,0 @@\n-error: crate `cdylib_dep` required to be available in rlib format, but was not found in this form\n-\n-error: aborting due to previous error\n-"}]}