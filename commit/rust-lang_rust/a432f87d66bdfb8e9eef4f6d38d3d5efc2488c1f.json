{"sha": "a432f87d66bdfb8e9eef4f6d38d3d5efc2488c1f", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE0MzJmODdkNjZiZGZiOGU5ZWVmNGY2ZDM4ZDNkNWVmYzI0ODhjMWY=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-07-24T12:12:13Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-07-24T12:12:13Z"}, "message": "Cache macro expansion in semantics\n\n #5497 accidentally made syntax highlighting quadratic, due to\n repeated tokentreeizing of macros.", "tree": {"sha": "0f7f092a20440cf912a70114ea352152dd5c6b5b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0f7f092a20440cf912a70114ea352152dd5c6b5b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a432f87d66bdfb8e9eef4f6d38d3d5efc2488c1f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a432f87d66bdfb8e9eef4f6d38d3d5efc2488c1f", "html_url": "https://github.com/rust-lang/rust/commit/a432f87d66bdfb8e9eef4f6d38d3d5efc2488c1f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a432f87d66bdfb8e9eef4f6d38d3d5efc2488c1f/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b9ef6cf29518fb59d3a05b1d4b45999f08ad0aeb", "url": "https://api.github.com/repos/rust-lang/rust/commits/b9ef6cf29518fb59d3a05b1d4b45999f08ad0aeb", "html_url": "https://github.com/rust-lang/rust/commit/b9ef6cf29518fb59d3a05b1d4b45999f08ad0aeb"}], "stats": {"total": 16, "additions": 14, "deletions": 2}, "files": [{"sha": "1436b1afee93ba89760036070e2d0d3e6d063009", "filename": "crates/ra_hir/src/semantics.rs", "status": "modified", "additions": 14, "deletions": 2, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/a432f87d66bdfb8e9eef4f6d38d3d5efc2488c1f/crates%2Fra_hir%2Fsrc%2Fsemantics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a432f87d66bdfb8e9eef4f6d38d3d5efc2488c1f/crates%2Fra_hir%2Fsrc%2Fsemantics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fsemantics.rs?ref=a432f87d66bdfb8e9eef4f6d38d3d5efc2488c1f", "patch": "@@ -89,6 +89,7 @@ pub struct Semantics<'db, DB> {\n pub struct SemanticsImpl<'db> {\n     pub db: &'db dyn HirDatabase,\n     s2d_cache: RefCell<SourceToDefCache>,\n+    expansion_info_cache: RefCell<FxHashMap<HirFileId, Option<ExpansionInfo>>>,\n     cache: RefCell<FxHashMap<SyntaxNode, HirFileId>>,\n }\n \n@@ -275,7 +276,12 @@ impl<'db, DB: HirDatabase> Semantics<'db, DB> {\n \n impl<'db> SemanticsImpl<'db> {\n     fn new(db: &'db dyn HirDatabase) -> Self {\n-        Self { db, s2d_cache: Default::default(), cache: Default::default() }\n+        SemanticsImpl {\n+            db,\n+            s2d_cache: Default::default(),\n+            cache: Default::default(),\n+            expansion_info_cache: Default::default(),\n+        }\n     }\n \n     fn parse(&self, file_id: FileId) -> ast::SourceFile {\n@@ -328,7 +334,13 @@ impl<'db> SemanticsImpl<'db> {\n                 return None;\n             }\n             let file_id = sa.expand(self.db, token.with_value(&macro_call))?;\n-            let token = file_id.expansion_info(self.db.upcast())?.map_token_down(token.as_ref())?;\n+            let token = self\n+                .expansion_info_cache\n+                .borrow_mut()\n+                .entry(file_id)\n+                .or_insert_with(|| file_id.expansion_info(self.db.upcast()))\n+                .as_ref()?\n+                .map_token_down(token.as_ref())?;\n \n             self.cache(find_root(&token.value.parent()), token.file_id);\n "}]}