{"sha": "4827d41466af1e9b5f3a38d55f8f99e66e3f6842", "node_id": "C_kwDOAAsO6NoAKDQ4MjdkNDE0NjZhZjFlOWI1ZjNhMzhkNTVmOGY5OWU2NmUzZjY4NDI", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-10-28T11:50:15Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-10-28T11:50:15Z"}, "message": "Auto merge of #2627 - RalfJung:ignore-windows, r=RalfJung\n\nupdate ignore-windows comments\n\nTurns out 2 of these tests can actually be enabled. :)", "tree": {"sha": "caeeb5651805773612f9839d55b3a3060dca6210", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/caeeb5651805773612f9839d55b3a3060dca6210"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4827d41466af1e9b5f3a38d55f8f99e66e3f6842", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4827d41466af1e9b5f3a38d55f8f99e66e3f6842", "html_url": "https://github.com/rust-lang/rust/commit/4827d41466af1e9b5f3a38d55f8f99e66e3f6842", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4827d41466af1e9b5f3a38d55f8f99e66e3f6842/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3321c2d3e75f18df77f4cbde70b4a7a659697c8b", "url": "https://api.github.com/repos/rust-lang/rust/commits/3321c2d3e75f18df77f4cbde70b4a7a659697c8b", "html_url": "https://github.com/rust-lang/rust/commit/3321c2d3e75f18df77f4cbde70b4a7a659697c8b"}, {"sha": "676e53f5b108c7c460925d3d96874657be249569", "url": "https://api.github.com/repos/rust-lang/rust/commits/676e53f5b108c7c460925d3d96874657be249569", "html_url": "https://github.com/rust-lang/rust/commit/676e53f5b108c7c460925d3d96874657be249569"}], "stats": {"total": 12, "additions": 5, "deletions": 7}, "files": [{"sha": "163f46eacc19f52945ba0149e16a00da8e0ae064", "filename": "src/tools/miri/tests/fail/data_race/stack_pop_race.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/4827d41466af1e9b5f3a38d55f8f99e66e3f6842/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fdata_race%2Fstack_pop_race.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4827d41466af1e9b5f3a38d55f8f99e66e3f6842/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fdata_race%2Fstack_pop_race.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fdata_race%2Fstack_pop_race.rs?ref=4827d41466af1e9b5f3a38d55f8f99e66e3f6842", "patch": "@@ -1,4 +1,3 @@\n-//@ignore-target-windows: Concurrency on Windows is not supported yet.\n //@compile-flags: -Zmiri-preemption-rate=0\n use std::thread;\n "}, {"sha": "589f843cf82705ae401bcf591f27e42bbd08ad5f", "filename": "src/tools/miri/tests/fail/panic/no_std.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4827d41466af1e9b5f3a38d55f8f99e66e3f6842/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fpanic%2Fno_std.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4827d41466af1e9b5f3a38d55f8f99e66e3f6842/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fpanic%2Fno_std.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Ffail%2Fpanic%2Fno_std.rs?ref=4827d41466af1e9b5f3a38d55f8f99e66e3f6842", "patch": "@@ -3,7 +3,7 @@\n // windows tls dtors go through libstd right now, thus this test\n // cannot pass. When windows tls dtors go through the special magic\n // windows linker section, we can run this test on windows again.\n-//@ignore-target-windows\n+//@ignore-target-windows: no-std not supported on Windows\n \n // Plumbing to let us use `writeln!` to host stderr:\n "}, {"sha": "aa1c4892d186724a7a1e8ff4584f5c13f09bcf61", "filename": "src/tools/miri/tests/pass/concurrency/sync.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4827d41466af1e9b5f3a38d55f8f99e66e3f6842/src%2Ftools%2Fmiri%2Ftests%2Fpass%2Fconcurrency%2Fsync.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4827d41466af1e9b5f3a38d55f8f99e66e3f6842/src%2Ftools%2Fmiri%2Ftests%2Fpass%2Fconcurrency%2Fsync.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Fpass%2Fconcurrency%2Fsync.rs?ref=4827d41466af1e9b5f3a38d55f8f99e66e3f6842", "patch": "@@ -1,4 +1,4 @@\n-//@ignore-target-windows: Concurrency on Windows is not supported yet.\n+//@ignore-target-windows: Condvars on Windows are not supported yet.\n //@compile-flags: -Zmiri-disable-isolation -Zmiri-strict-provenance\n \n use std::sync::{Arc, Barrier, Condvar, Mutex, Once, RwLock};"}, {"sha": "55206f4bfc526f008aebf4383a81224ef40ab422", "filename": "src/tools/miri/tests/pass/concurrency/sync_nopreempt.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4827d41466af1e9b5f3a38d55f8f99e66e3f6842/src%2Ftools%2Fmiri%2Ftests%2Fpass%2Fconcurrency%2Fsync_nopreempt.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4827d41466af1e9b5f3a38d55f8f99e66e3f6842/src%2Ftools%2Fmiri%2Ftests%2Fpass%2Fconcurrency%2Fsync_nopreempt.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Fpass%2Fconcurrency%2Fsync_nopreempt.rs?ref=4827d41466af1e9b5f3a38d55f8f99e66e3f6842", "patch": "@@ -1,4 +1,4 @@\n-//@ignore-target-windows: Concurrency on Windows is not supported yet.\n+//@ignore-target-windows: Condvars on Windows are not supported yet.\n // We are making scheduler assumptions here.\n //@compile-flags: -Zmiri-strict-provenance -Zmiri-preemption-rate=0\n "}, {"sha": "eb0e860e68ebffb642c09b6d19d7d8e30942b846", "filename": "src/tools/miri/tests/pass/no_std.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4827d41466af1e9b5f3a38d55f8f99e66e3f6842/src%2Ftools%2Fmiri%2Ftests%2Fpass%2Fno_std.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4827d41466af1e9b5f3a38d55f8f99e66e3f6842/src%2Ftools%2Fmiri%2Ftests%2Fpass%2Fno_std.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Fpass%2Fno_std.rs?ref=4827d41466af1e9b5f3a38d55f8f99e66e3f6842", "patch": "@@ -3,7 +3,7 @@\n // windows tls dtors go through libstd right now, thus this test\n // cannot pass. When windows tls dtors go through the special magic\n // windows linker section, we can run this test on windows again.\n-//@ignore-target-windows\n+//@ignore-target-windows: no-std not supported on Windows\n \n // Plumbing to let us use `writeln!` to host stdout:\n "}, {"sha": "3f1153d265d7e144cc007ea263f845e3f1d685d2", "filename": "src/tools/miri/tests/pass/shims/env/current_exe.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4827d41466af1e9b5f3a38d55f8f99e66e3f6842/src%2Ftools%2Fmiri%2Ftests%2Fpass%2Fshims%2Fenv%2Fcurrent_exe.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4827d41466af1e9b5f3a38d55f8f99e66e3f6842/src%2Ftools%2Fmiri%2Ftests%2Fpass%2Fshims%2Fenv%2Fcurrent_exe.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Fpass%2Fshims%2Fenv%2Fcurrent_exe.rs?ref=4827d41466af1e9b5f3a38d55f8f99e66e3f6842", "patch": "@@ -1,4 +1,4 @@\n-//@ignore-target-windows\n+//@ignore-target-windows: current_exe not supported on Windows\n //@only-on-host: the Linux std implementation opens /proc/self/exe, which doesn't work cross-target\n //@compile-flags: -Zmiri-disable-isolation\n use std::env;"}, {"sha": "c94f63a54274a481a51a8fa46ea8f4972b398e61", "filename": "src/tools/miri/tests/pass/shims/sleep_long.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/4827d41466af1e9b5f3a38d55f8f99e66e3f6842/src%2Ftools%2Fmiri%2Ftests%2Fpass%2Fshims%2Fsleep_long.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4827d41466af1e9b5f3a38d55f8f99e66e3f6842/src%2Ftools%2Fmiri%2Ftests%2Fpass%2Fshims%2Fsleep_long.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Fpass%2Fshims%2Fsleep_long.rs?ref=4827d41466af1e9b5f3a38d55f8f99e66e3f6842", "patch": "@@ -1,4 +1,3 @@\n-//@ignore-target-windows: no threads nor sleep on Windows\n //@compile-flags: -Zmiri-ignore-leaks -Zmiri-disable-isolation\n use std::sync::{Arc, Mutex};\n use std::thread;"}]}