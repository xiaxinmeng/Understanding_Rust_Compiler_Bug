{"sha": "65b3c853178b04c5cbe41f26e6a1b1b90d7b8cc6", "node_id": "C_kwDOAAsO6NoAKDY1YjNjODUzMTc4YjA0YzVjYmU0MWYyNmU2YTFiMWI5MGQ3YjhjYzY", "commit": {"author": {"name": "Andre Bogus", "email": "bogusandre@gmail.com", "date": "2021-10-19T21:06:19Z"}, "committer": {"name": "Andre Bogus", "email": "bogusandre@gmail.com", "date": "2021-10-20T19:55:34Z"}, "message": "Add edition configuration to compiletest", "tree": {"sha": "31834716f458bd130e4747f8d7fb06544753acde", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/31834716f458bd130e4747f8d7fb06544753acde"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/65b3c853178b04c5cbe41f26e6a1b1b90d7b8cc6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/65b3c853178b04c5cbe41f26e6a1b1b90d7b8cc6", "html_url": "https://github.com/rust-lang/rust/commit/65b3c853178b04c5cbe41f26e6a1b1b90d7b8cc6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/65b3c853178b04c5cbe41f26e6a1b1b90d7b8cc6/comments", "author": {"login": "llogiq", "id": 4200835, "node_id": "MDQ6VXNlcjQyMDA4MzU=", "avatar_url": "https://avatars.githubusercontent.com/u/4200835?v=4", "gravatar_id": "", "url": "https://api.github.com/users/llogiq", "html_url": "https://github.com/llogiq", "followers_url": "https://api.github.com/users/llogiq/followers", "following_url": "https://api.github.com/users/llogiq/following{/other_user}", "gists_url": "https://api.github.com/users/llogiq/gists{/gist_id}", "starred_url": "https://api.github.com/users/llogiq/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/llogiq/subscriptions", "organizations_url": "https://api.github.com/users/llogiq/orgs", "repos_url": "https://api.github.com/users/llogiq/repos", "events_url": "https://api.github.com/users/llogiq/events{/privacy}", "received_events_url": "https://api.github.com/users/llogiq/received_events", "type": "User", "site_admin": false}, "committer": {"login": "llogiq", "id": 4200835, "node_id": "MDQ6VXNlcjQyMDA4MzU=", "avatar_url": "https://avatars.githubusercontent.com/u/4200835?v=4", "gravatar_id": "", "url": "https://api.github.com/users/llogiq", "html_url": "https://github.com/llogiq", "followers_url": "https://api.github.com/users/llogiq/followers", "following_url": "https://api.github.com/users/llogiq/following{/other_user}", "gists_url": "https://api.github.com/users/llogiq/gists{/gist_id}", "starred_url": "https://api.github.com/users/llogiq/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/llogiq/subscriptions", "organizations_url": "https://api.github.com/users/llogiq/orgs", "repos_url": "https://api.github.com/users/llogiq/repos", "events_url": "https://api.github.com/users/llogiq/events{/privacy}", "received_events_url": "https://api.github.com/users/llogiq/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1af55d19c7a9189374d89472f97dc119659bb67e", "url": "https://api.github.com/repos/rust-lang/rust/commits/1af55d19c7a9189374d89472f97dc119659bb67e", "html_url": "https://github.com/rust-lang/rust/commit/1af55d19c7a9189374d89472f97dc119659bb67e"}], "stats": {"total": 13, "additions": 12, "deletions": 1}, "files": [{"sha": "82fe790a576ab04c8fccc84af8bb1ebc1c1fcdb1", "filename": "src/tools/compiletest/src/common.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/65b3c853178b04c5cbe41f26e6a1b1b90d7b8cc6/src%2Ftools%2Fcompiletest%2Fsrc%2Fcommon.rs", "raw_url": "https://github.com/rust-lang/rust/raw/65b3c853178b04c5cbe41f26e6a1b1b90d7b8cc6/src%2Ftools%2Fcompiletest%2Fsrc%2Fcommon.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fcompiletest%2Fsrc%2Fcommon.rs?ref=65b3c853178b04c5cbe41f26e6a1b1b90d7b8cc6", "patch": "@@ -349,6 +349,9 @@ pub struct Config {\n     /// The current Rust channel\n     pub channel: String,\n \n+    /// The default Rust edition\n+    pub edition: Option<String>,\n+\n     // Configuration for various run-make tests frobbing things like C compilers\n     // or querying about various LLVM component information.\n     pub cc: String,"}, {"sha": "98d1ee19f69a1ca8bdfb88a533d2d6c41eb5a34b", "filename": "src/tools/compiletest/src/header.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/65b3c853178b04c5cbe41f26e6a1b1b90d7b8cc6/src%2Ftools%2Fcompiletest%2Fsrc%2Fheader.rs", "raw_url": "https://github.com/rust-lang/rust/raw/65b3c853178b04c5cbe41f26e6a1b1b90d7b8cc6/src%2Ftools%2Fcompiletest%2Fsrc%2Fheader.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fcompiletest%2Fsrc%2Fheader.rs?ref=65b3c853178b04c5cbe41f26e6a1b1b90d7b8cc6", "patch": "@@ -222,6 +222,7 @@ impl TestProps {\n     /// `//[foo]`), then the property is ignored unless `cfg` is\n     /// `Some(\"foo\")`.\n     fn load_from(&mut self, testfile: &Path, cfg: Option<&str>, config: &Config) {\n+        let mut has_edition = false;\n         if !testfile.is_dir() {\n             let file = File::open(testfile).unwrap();\n \n@@ -240,6 +241,7 @@ impl TestProps {\n \n                 if let Some(edition) = config.parse_edition(ln) {\n                     self.compile_flags.push(format!(\"--edition={}\", edition));\n+                    has_edition = true;\n                     if edition == \"2021\" {\n                         self.compile_flags.push(\"-Zunstable-options\".to_string());\n                     }\n@@ -391,6 +393,10 @@ impl TestProps {\n                 }\n             }\n         }\n+\n+        if let (Some(edition), false) = (&config.edition, has_edition) {\n+            self.compile_flags.push(format!(\"--edition={}\", edition));\n+        }\n     }\n \n     fn update_fail_mode(&mut self, ln: &str, config: &Config) {"}, {"sha": "58cde108b33221987b025fd0e5dcae64f8c5e8ff", "filename": "src/tools/compiletest/src/main.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/65b3c853178b04c5cbe41f26e6a1b1b90d7b8cc6/src%2Ftools%2Fcompiletest%2Fsrc%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/65b3c853178b04c5cbe41f26e6a1b1b90d7b8cc6/src%2Ftools%2Fcompiletest%2Fsrc%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fcompiletest%2Fsrc%2Fmain.rs?ref=65b3c853178b04c5cbe41f26e6a1b1b90d7b8cc6", "patch": "@@ -147,7 +147,8 @@ pub fn parse_config(args: Vec<String>) -> Config {\n         )\n         .optflag(\"\", \"force-rerun\", \"rerun tests even if the inputs are unchanged\")\n         .optflag(\"h\", \"help\", \"show this message\")\n-        .reqopt(\"\", \"channel\", \"current Rust channel\", \"CHANNEL\");\n+        .reqopt(\"\", \"channel\", \"current Rust channel\", \"CHANNEL\")\n+        .optopt(\"\", \"edition\", \"default Rust edition\", \"EDITION\");\n \n     let (argv0, args_) = args.split_first().unwrap();\n     if args.len() == 1 || args[1] == \"-h\" || args[1] == \"--help\" {\n@@ -282,6 +283,7 @@ pub fn parse_config(args: Vec<String>) -> Config {\n         rustfix_coverage: matches.opt_present(\"rustfix-coverage\"),\n         has_tidy,\n         channel: matches.opt_str(\"channel\").unwrap(),\n+        edition: matches.opt_str(\"edition\"),\n \n         cc: matches.opt_str(\"cc\").unwrap(),\n         cxx: matches.opt_str(\"cxx\").unwrap(),"}]}