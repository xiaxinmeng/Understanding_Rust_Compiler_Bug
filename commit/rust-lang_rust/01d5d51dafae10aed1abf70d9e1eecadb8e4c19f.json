{"sha": "01d5d51dafae10aed1abf70d9e1eecadb8e4c19f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjAxZDVkNTFkYWZhZTEwYWVkMWFiZjcwZDllMWVlY2FkYjhlNGMxOWY=", "commit": {"author": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2014-04-11T23:07:45Z"}, "committer": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2014-04-11T23:07:45Z"}, "message": "Document traits in std::num (#7511)", "tree": {"sha": "97bdb70d4b912f76061755ffe7d7d836ae423116", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/97bdb70d4b912f76061755ffe7d7d836ae423116"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/01d5d51dafae10aed1abf70d9e1eecadb8e4c19f", "comment_count": 9, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/01d5d51dafae10aed1abf70d9e1eecadb8e4c19f", "html_url": "https://github.com/rust-lang/rust/commit/01d5d51dafae10aed1abf70d9e1eecadb8e4c19f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/01d5d51dafae10aed1abf70d9e1eecadb8e4c19f/comments", "author": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b2b2bbb62893b9655f65cb2813eaaba4f2e742dd", "url": "https://api.github.com/repos/rust-lang/rust/commits/b2b2bbb62893b9655f65cb2813eaaba4f2e742dd", "html_url": "https://github.com/rust-lang/rust/commit/b2b2bbb62893b9655f65cb2813eaaba4f2e742dd"}], "stats": {"total": 4, "additions": 4, "deletions": 0}, "files": [{"sha": "d036e84712084ac048e56e9b95600a8c83917b71", "filename": "src/libstd/num/mod.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/01d5d51dafae10aed1abf70d9e1eecadb8e4c19f/src%2Flibstd%2Fnum%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/01d5d51dafae10aed1abf70d9e1eecadb8e4c19f/src%2Flibstd%2Fnum%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fnum%2Fmod.rs?ref=01d5d51dafae10aed1abf70d9e1eecadb8e4c19f", "patch": "@@ -159,6 +159,7 @@ pub fn abs_sub<T: Signed>(x: T, y: T) -> T {\n /// - `-1` if the number is negative\n #[inline(always)] pub fn signum<T: Signed>(value: T) -> T { value.signum() }\n \n+/// A trait for values which cannot be negative\n pub trait Unsigned: Num {}\n \n /// A collection of rounding operations.\n@@ -205,6 +206,7 @@ pub fn pow<T: One + Mul<T, T>>(mut base: T, mut exp: uint) -> T {\n     }\n }\n \n+/// Numbers which have upper and lower bounds\n pub trait Bounded {\n     // FIXME (#5527): These should be associated constants\n     fn min_value() -> Self;\n@@ -1046,10 +1048,12 @@ impl_num_cast!(int,   to_int)\n impl_num_cast!(f32,   to_f32)\n impl_num_cast!(f64,   to_f64)\n \n+/// A generic trait for converting a value to a string with a radix (base)\n pub trait ToStrRadix {\n     fn to_str_radix(&self, radix: uint) -> ~str;\n }\n \n+/// A generic trait for converting a string with a radix (base) to a value\n pub trait FromStrRadix {\n     fn from_str_radix(str: &str, radix: uint) -> Option<Self>;\n }"}]}