{"sha": "f13bbea1243d35467601e82096b3db956774b2a5", "node_id": "MDY6Q29tbWl0NzI0NzEyOmYxM2JiZWExMjQzZDM1NDY3NjAxZTgyMDk2YjNkYjk1Njc3NGIyYTU=", "commit": {"author": {"name": "Ophir LOJKINE", "email": "pere.jobs@gmail.com", "date": "2021-02-10T13:53:22Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-02-10T13:53:22Z"}, "message": "Catch errors on localStorage setting failure\n\nFixes https://github.com/rust-lang/rust/issues/81928\r\n\r\n\u201cAsk forgiveness not permission\u201d  : this makes the code both simpler and more robust", "tree": {"sha": "1f8f5887d318b89d0c0bbbf6d2ff68135d1899f7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1f8f5887d318b89d0c0bbbf6d2ff68135d1899f7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f13bbea1243d35467601e82096b3db956774b2a5", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJgI+VSCRBK7hj4Ov3rIwAAdHIIAGwiF0Pr03wM+qydogzNswhQ\ngL7VATJu8Uj50yHD8k85xYd6OeQagmSlHlYRdliluJksu2Mgw24ADSL/2aiiAW5V\nljmizW4iStkQhgKUgfUzCC310mWYENb9CCdjloym7bFaHkZvfldkdwtmMB9qXAY4\nokLE0NlUPC/wBaTk58LynBZ8OXr3pLT+F62Ia7utm2cg5rCMLrIP3OhYCZN2hdPl\nGmPZDRBAGWqGgFpwcsPeY0cMY0Jmh3vmP1HGt4mKyrgm9qzMCn1ZcyYTsq6dmYAz\nxVOGexi1tSoAEOuIdP6tWJHjWtv1PDXNHz29HxfdrwXLbzW7JQhjk636A+6Eovk=\n=kIpH\n-----END PGP SIGNATURE-----\n", "payload": "tree 1f8f5887d318b89d0c0bbbf6d2ff68135d1899f7\nparent 218bf8d7657e1aadf6f499651078f3710df20c7b\nauthor Ophir LOJKINE <pere.jobs@gmail.com> 1612965202 +0100\ncommitter GitHub <noreply@github.com> 1612965202 +0100\n\nCatch errors on localStorage setting failure\n\nFixes https://github.com/rust-lang/rust/issues/81928\r\n\r\n\u201cAsk forgiveness not permission\u201d  : this makes the code both simpler and more robust"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f13bbea1243d35467601e82096b3db956774b2a5", "html_url": "https://github.com/rust-lang/rust/commit/f13bbea1243d35467601e82096b3db956774b2a5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f13bbea1243d35467601e82096b3db956774b2a5/comments", "author": {"login": "lovasoa", "id": 552629, "node_id": "MDQ6VXNlcjU1MjYyOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/552629?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lovasoa", "html_url": "https://github.com/lovasoa", "followers_url": "https://api.github.com/users/lovasoa/followers", "following_url": "https://api.github.com/users/lovasoa/following{/other_user}", "gists_url": "https://api.github.com/users/lovasoa/gists{/gist_id}", "starred_url": "https://api.github.com/users/lovasoa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lovasoa/subscriptions", "organizations_url": "https://api.github.com/users/lovasoa/orgs", "repos_url": "https://api.github.com/users/lovasoa/repos", "events_url": "https://api.github.com/users/lovasoa/events{/privacy}", "received_events_url": "https://api.github.com/users/lovasoa/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "218bf8d7657e1aadf6f499651078f3710df20c7b", "url": "https://api.github.com/repos/rust-lang/rust/commits/218bf8d7657e1aadf6f499651078f3710df20c7b", "html_url": "https://github.com/rust-lang/rust/commit/218bf8d7657e1aadf6f499651078f3710df20c7b"}], "stats": {"total": 31, "additions": 8, "deletions": 23}, "files": [{"sha": "11265ae0ee33961c71582ed05d0545a5c5f7c782", "filename": "src/librustdoc/html/static/storage.js", "status": "modified", "additions": 8, "deletions": 23, "changes": 31, "blob_url": "https://github.com/rust-lang/rust/blob/f13bbea1243d35467601e82096b3db956774b2a5/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fstorage.js", "raw_url": "https://github.com/rust-lang/rust/raw/f13bbea1243d35467601e82096b3db956774b2a5/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fstorage.js", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fstorage.js?ref=f13bbea1243d35467601e82096b3db956774b2a5", "patch": "@@ -89,35 +89,20 @@ function hasOwnProperty(obj, property) {\n     return Object.prototype.hasOwnProperty.call(obj, property);\n }\n \n-function usableLocalStorage() {\n-    // Check if the browser supports localStorage at all:\n-    if (typeof Storage === \"undefined\") {\n-        return false;\n-    }\n-    // Check if we can access it; this access will fail if the browser\n-    // preferences deny access to localStorage, e.g., to prevent storage of\n-    // \"cookies\" (or cookie-likes, as is the case here).\n-    try {\n-        return window.localStorage !== null && window.localStorage !== undefined;\n-    } catch(err) {\n-        // Storage is supported, but browser preferences deny access to it.\n-        return false;\n-    }\n-}\n-\n function updateLocalStorage(name, value) {\n-    if (usableLocalStorage()) {\n-        localStorage[name] = value;\n-    } else {\n-        // No Web Storage support so we do nothing\n+    try {\n+        window.localStorage.setItem(name, value);\n+    } catch(e) {\n+        // localStorage is not accessible, do nothing\n     }\n }\n \n function getCurrentValue(name) {\n-    if (usableLocalStorage() && localStorage[name] !== undefined) {\n-        return localStorage[name];\n+    try {\n+        window.localStorage.getItem(name);\n+    } catch(e) {\n+        return null;\n     }\n-    return null;\n }\n \n function switchTheme(styleElem, mainStyleElem, newTheme, saveTheme) {"}]}