{"sha": "130f9488d3b861e02c9282b686eec717e30912cf", "node_id": "MDY6Q29tbWl0NzI0NzEyOjEzMGY5NDg4ZDNiODYxZTAyYzkyODJiNjg2ZWVjNzE3ZTMwOTEyY2Y=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2019-09-17T10:30:14Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2019-09-17T10:31:02Z"}, "message": "rustup", "tree": {"sha": "e86a64ece20af2a8ae7e707656656e40c6cb7f60", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e86a64ece20af2a8ae7e707656656e40c6cb7f60"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/130f9488d3b861e02c9282b686eec717e30912cf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/130f9488d3b861e02c9282b686eec717e30912cf", "html_url": "https://github.com/rust-lang/rust/commit/130f9488d3b861e02c9282b686eec717e30912cf", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/130f9488d3b861e02c9282b686eec717e30912cf/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d88138723780d11ca2c09560111223dc20b9d5f3", "url": "https://api.github.com/repos/rust-lang/rust/commits/d88138723780d11ca2c09560111223dc20b9d5f3", "html_url": "https://github.com/rust-lang/rust/commit/d88138723780d11ca2c09560111223dc20b9d5f3"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "340dd109e124990c3fe07b11ea30cf22b19773d9", "filename": "src/machine.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/130f9488d3b861e02c9282b686eec717e30912cf/src%2Fmachine.rs", "raw_url": "https://github.com/rust-lang/rust/raw/130f9488d3b861e02c9282b686eec717e30912cf/src%2Fmachine.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fmachine.rs?ref=130f9488d3b861e02c9282b686eec717e30912cf", "patch": "@@ -287,7 +287,7 @@ impl<'mir, 'tcx> Machine<'mir, 'tcx> for Evaluator<'tcx> {\n             (Some(stacks), base_tag)\n         };\n         let mut stacked_borrows = memory_extra.stacked_borrows.borrow_mut();\n-        let alloc: Allocation<Tag, Self::AllocExtra> = alloc.retag(\n+        let alloc: Allocation<Tag, Self::AllocExtra> = alloc.with_tags_and_extra(\n             |alloc| if !memory_extra.validate {\n                 Tag::Untagged\n             } else {"}]}