{"sha": "8870a5ea138bb4ba048140d90d728721c4b4ad4b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg4NzBhNWVhMTM4YmI0YmEwNDgxNDBkOTBkNzI4NzIxYzRiNGFkNGI=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2020-08-13T10:00:05Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-08-13T10:00:05Z"}, "message": "Merge #5743\n\n5743: Remove ra_fmt crate\n r=matklad a=matklad\n\nbors r+\n\ud83e\udd16\n\nCo-authored-by: Aleksey Kladov <aleksey.kladov@gmail.com>", "tree": {"sha": "e355901a2d197f2b7cceb35a732a111afed58198", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e355901a2d197f2b7cceb35a732a111afed58198"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8870a5ea138bb4ba048140d90d728721c4b4ad4b", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJfNQ8lCRBK7hj4Ov3rIwAAdHIIACjTYeIBVCAtEUxYXueyMxXx\n0CnZHs5s6nX5fIoUm1bfu1Hp0wswqLP92agvr7/eJ9CRcRoQttQJW12U47YtqNZz\n4H7Gm8ILqJTFisaModyTLc4E/rquNmqqc1uBFuMRuINWzfsHXkZ/sLHBwBrI/cV4\niFRz9sqWrbu7MlQBFHMDLxq6x3/W99RKBjRPHDLzYxS+sMcmiQTLmEsevHWKv/OG\nJgyCvgXbDcerp3LMnMl09c3OHYOdpy98aGRriH9C3NJaEBq3yasbLxJPDE742WL6\n224+RABwq68B9mqulB58zPv/Q3aXBYt/YMoramc19h+FoHfDQUKXoNKmBjomTjI=\n=UqD8\n-----END PGP SIGNATURE-----\n", "payload": "tree e355901a2d197f2b7cceb35a732a111afed58198\nparent b5cb16fb90b4a1076604c5795552ee4abe07a057\nparent c81f6230da98fd3e3fa91c0896d65922a1ed4a24\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1597312805 +0000\ncommitter GitHub <noreply@github.com> 1597312805 +0000\n\nMerge #5743\n\n5743: Remove ra_fmt crate\n r=matklad a=matklad\n\nbors r+\n\ud83e\udd16\n\nCo-authored-by: Aleksey Kladov <aleksey.kladov@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8870a5ea138bb4ba048140d90d728721c4b4ad4b", "html_url": "https://github.com/rust-lang/rust/commit/8870a5ea138bb4ba048140d90d728721c4b4ad4b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8870a5ea138bb4ba048140d90d728721c4b4ad4b/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b5cb16fb90b4a1076604c5795552ee4abe07a057", "url": "https://api.github.com/repos/rust-lang/rust/commits/b5cb16fb90b4a1076604c5795552ee4abe07a057", "html_url": "https://github.com/rust-lang/rust/commit/b5cb16fb90b4a1076604c5795552ee4abe07a057"}, {"sha": "c81f6230da98fd3e3fa91c0896d65922a1ed4a24", "url": "https://api.github.com/repos/rust-lang/rust/commits/c81f6230da98fd3e3fa91c0896d65922a1ed4a24", "html_url": "https://github.com/rust-lang/rust/commit/c81f6230da98fd3e3fa91c0896d65922a1ed4a24"}], "stats": {"total": 103, "additions": 32, "deletions": 71}, "files": [{"sha": "5f7b85b0593eff879f9e3af45f254d4ac45d9d79", "filename": "Cargo.lock", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/8870a5ea138bb4ba048140d90d728721c4b4ad4b/Cargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/8870a5ea138bb4ba048140d90d728721c4b4ad4b/Cargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.lock?ref=8870a5ea138bb4ba048140d90d728721c4b4ad4b", "patch": "@@ -955,7 +955,6 @@ dependencies = [\n  \"itertools\",\n  \"profile\",\n  \"ra_db\",\n- \"ra_fmt\",\n  \"ra_hir\",\n  \"ra_ide_db\",\n  \"rustc-hash\",\n@@ -980,14 +979,6 @@ dependencies = [\n  \"vfs\",\n ]\n \n-[[package]]\n-name = \"ra_fmt\"\n-version = \"0.1.0\"\n-dependencies = [\n- \"itertools\",\n- \"syntax\",\n-]\n-\n [[package]]\n name = \"ra_hir\"\n version = \"0.1.0\"\n@@ -1092,7 +1083,6 @@ dependencies = [\n  \"profile\",\n  \"ra_assists\",\n  \"ra_db\",\n- \"ra_fmt\",\n  \"ra_hir\",\n  \"ra_ide_db\",\n  \"ra_ssr\","}, {"sha": "83e44c124365dd7bbb3a95808e833cb05a052eb7", "filename": "crates/ra_assists/Cargo.toml", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/8870a5ea138bb4ba048140d90d728721c4b4ad4b/crates%2Fra_assists%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/8870a5ea138bb4ba048140d90d728721c4b4ad4b/crates%2Fra_assists%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_assists%2FCargo.toml?ref=8870a5ea138bb4ba048140d90d728721c4b4ad4b", "patch": "@@ -17,7 +17,6 @@ stdx = { path = \"../stdx\" }\n \n syntax = { path = \"../syntax\" }\n text_edit = { path = \"../text_edit\" }\n-ra_fmt = { path = \"../ra_fmt\" }\n profile = { path = \"../profile\" }\n ra_db = { path = \"../ra_db\" }\n ra_ide_db = { path = \"../ra_ide_db\" }"}, {"sha": "497f887cd1deb85503a060fd6e477c1253a47758", "filename": "crates/ra_assists/src/handlers/extract_struct_from_enum_variant.rs", "status": "modified", "additions": 6, "deletions": 10, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/8870a5ea138bb4ba048140d90d728721c4b4ad4b/crates%2Fra_assists%2Fsrc%2Fhandlers%2Fextract_struct_from_enum_variant.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8870a5ea138bb4ba048140d90d728721c4b4ad4b/crates%2Fra_assists%2Fsrc%2Fhandlers%2Fextract_struct_from_enum_variant.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_assists%2Fsrc%2Fhandlers%2Fextract_struct_from_enum_variant.rs?ref=8870a5ea138bb4ba048140d90d728721c4b4ad4b", "patch": "@@ -1,12 +1,11 @@\n use hir::{EnumVariant, Module, ModuleDef, Name};\n use ra_db::FileId;\n-use ra_fmt::leading_indent;\n use ra_ide_db::{defs::Definition, search::Reference, RootDatabase};\n use rustc_hash::FxHashSet;\n use syntax::{\n     algo::find_node_at_offset,\n-    ast::{self, ArgListOwner, AstNode, NameOwner, VisibilityOwner},\n-    SourceFile, SyntaxNode, TextRange, TextSize,\n+    ast::{self, edit::IndentLevel, ArgListOwner, AstNode, NameOwner, VisibilityOwner},\n+    SourceFile, TextRange, TextSize,\n };\n \n use crate::{\n@@ -72,7 +71,7 @@ pub(crate) fn extract_struct_from_enum_variant(\n             }\n             extract_struct_def(\n                 builder,\n-                enum_ast.syntax(),\n+                &enum_ast,\n                 &variant_name,\n                 &field_list.to_string(),\n                 start_offset,\n@@ -112,9 +111,10 @@ fn insert_import(\n     Some(())\n }\n \n+// FIXME: this should use strongly-typed `make`, rather than string manipulation.\n fn extract_struct_def(\n     builder: &mut AssistBuilder,\n-    enum_ast: &SyntaxNode,\n+    enum_: &ast::Enum,\n     variant_name: &str,\n     variant_list: &str,\n     start_offset: TextSize,\n@@ -126,11 +126,7 @@ fn extract_struct_def(\n     } else {\n         \"\".to_string()\n     };\n-    let indent = if let Some(indent) = leading_indent(enum_ast) {\n-        indent.to_string()\n-    } else {\n-        \"\".to_string()\n-    };\n+    let indent = IndentLevel::from_node(enum_.syntax());\n     let struct_def = format!(\n         r#\"{}struct {}{};\n "}, {"sha": "50a62ee8296b2e10d5c7102ef93aa36e416502b3", "filename": "crates/ra_assists/src/utils/insert_use.rs", "status": "modified", "additions": 24, "deletions": 3, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/8870a5ea138bb4ba048140d90d728721c4b4ad4b/crates%2Fra_assists%2Fsrc%2Futils%2Finsert_use.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8870a5ea138bb4ba048140d90d728721c4b4ad4b/crates%2Fra_assists%2Fsrc%2Futils%2Finsert_use.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_assists%2Fsrc%2Futils%2Finsert_use.rs?ref=8870a5ea138bb4ba048140d90d728721c4b4ad4b", "patch": "@@ -2,13 +2,15 @@\n // FIXME: rewrite according to the plan, outlined in\n // https://github.com/rust-analyzer/rust-analyzer/issues/3301#issuecomment-592931553\n \n+use std::iter::successors;\n+\n use either::Either;\n use hir::{self, ModPath};\n use syntax::{\n     ast::{self, NameOwner, VisibilityOwner},\n-    AstNode, Direction, SmolStr,\n+    AstNode, AstToken, Direction, SmolStr,\n     SyntaxKind::{PATH, PATH_SEGMENT},\n-    SyntaxNode, T,\n+    SyntaxNode, SyntaxToken, T,\n };\n use text_edit::TextEditBuilder;\n \n@@ -442,7 +444,7 @@ fn make_assist_add_new_use(\n     edit: &mut TextEditBuilder,\n ) {\n     if let Some(anchor) = anchor {\n-        let indent = ra_fmt::leading_indent(anchor);\n+        let indent = leading_indent(anchor);\n         let mut buf = String::new();\n         if after {\n             buf.push_str(\"\\n\");\n@@ -524,3 +526,22 @@ fn make_assist_add_nested_import(\n         edit.insert(end, \"}\".to_string());\n     }\n }\n+\n+/// If the node is on the beginning of the line, calculate indent.\n+fn leading_indent(node: &SyntaxNode) -> Option<SmolStr> {\n+    for token in prev_tokens(node.first_token()?) {\n+        if let Some(ws) = ast::Whitespace::cast(token.clone()) {\n+            let ws_text = ws.text();\n+            if let Some(pos) = ws_text.rfind('\\n') {\n+                return Some(ws_text[pos + 1..].into());\n+            }\n+        }\n+        if token.text().contains('\\n') {\n+            break;\n+        }\n+    }\n+    return None;\n+    fn prev_tokens(token: SyntaxToken) -> impl Iterator<Item = SyntaxToken> {\n+        successors(token.prev_token(), |token| token.prev_token())\n+    }\n+}"}, {"sha": "d42ca62be270a66cd4ab26ee066ed2c81be3775b", "filename": "crates/ra_fmt/Cargo.toml", "status": "removed", "additions": 0, "deletions": 15, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/b5cb16fb90b4a1076604c5795552ee4abe07a057/crates%2Fra_fmt%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/b5cb16fb90b4a1076604c5795552ee4abe07a057/crates%2Fra_fmt%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_fmt%2FCargo.toml?ref=b5cb16fb90b4a1076604c5795552ee4abe07a057", "patch": "@@ -1,15 +0,0 @@\n-[package]\n-edition = \"2018\"\n-name = \"ra_fmt\"\n-version = \"0.1.0\"\n-authors = [\"rust-analyzer developers\"]\n-publish = false\n-license = \"MIT OR Apache-2.0\"\n-\n-[lib]\n-doctest = false\n-\n-[dependencies]\n-itertools = \"0.9.0\"\n-\n-syntax = { path = \"../syntax\" }"}, {"sha": "b92477f9e7a2d5a375e200f38c26503043a5338a", "filename": "crates/ra_fmt/src/lib.rs", "status": "removed", "additions": 0, "deletions": 28, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/b5cb16fb90b4a1076604c5795552ee4abe07a057/crates%2Fra_fmt%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b5cb16fb90b4a1076604c5795552ee4abe07a057/crates%2Fra_fmt%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_fmt%2Fsrc%2Flib.rs?ref=b5cb16fb90b4a1076604c5795552ee4abe07a057", "patch": "@@ -1,28 +0,0 @@\n-//! This crate provides some utilities for indenting rust code.\n-\n-use std::iter::successors;\n-\n-use syntax::{\n-    ast::{self, AstToken},\n-    SmolStr, SyntaxNode, SyntaxToken,\n-};\n-\n-/// If the node is on the beginning of the line, calculate indent.\n-pub fn leading_indent(node: &SyntaxNode) -> Option<SmolStr> {\n-    for token in prev_tokens(node.first_token()?) {\n-        if let Some(ws) = ast::Whitespace::cast(token.clone()) {\n-            let ws_text = ws.text();\n-            if let Some(pos) = ws_text.rfind('\\n') {\n-                return Some(ws_text[pos + 1..].into());\n-            }\n-        }\n-        if token.text().contains('\\n') {\n-            break;\n-        }\n-    }\n-    None\n-}\n-\n-fn prev_tokens(token: SyntaxToken) -> impl Iterator<Item = SyntaxToken> {\n-    successors(token.prev_token(), |token| token.prev_token())\n-}"}, {"sha": "938398a41a277f957f295973b4a03a0b9ad8afad", "filename": "crates/ra_ide/Cargo.toml", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/8870a5ea138bb4ba048140d90d728721c4b4ad4b/crates%2Fra_ide%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/8870a5ea138bb4ba048140d90d728721c4b4ad4b/crates%2Fra_ide%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2FCargo.toml?ref=8870a5ea138bb4ba048140d90d728721c4b4ad4b", "patch": "@@ -26,7 +26,6 @@ text_edit = { path = \"../text_edit\" }\n ra_db = { path = \"../ra_db\" }\n ra_ide_db = { path = \"../ra_ide_db\" }\n cfg = { path = \"../cfg\" }\n-ra_fmt = { path = \"../ra_fmt\" }\n profile = { path = \"../profile\" }\n test_utils = { path = \"../test_utils\" }\n ra_assists = { path = \"../ra_assists\" }"}, {"sha": "7897c57b77b7312016eb67bb7d4df7b00db39365", "filename": "crates/ra_ide/src/typing.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/8870a5ea138bb4ba048140d90d728721c4b4ad4b/crates%2Fra_ide%2Fsrc%2Ftyping.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8870a5ea138bb4ba048140d90d728721c4b4ad4b/crates%2Fra_ide%2Fsrc%2Ftyping.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Ftyping.rs?ref=8870a5ea138bb4ba048140d90d728721c4b4ad4b", "patch": "@@ -16,11 +16,10 @@\n mod on_enter;\n \n use ra_db::{FilePosition, SourceDatabase};\n-use ra_fmt::leading_indent;\n use ra_ide_db::{source_change::SourceFileEdit, RootDatabase};\n use syntax::{\n     algo::find_node_at_offset,\n-    ast::{self, AstToken},\n+    ast::{self, edit::IndentLevel, AstToken},\n     AstNode, SourceFile,\n     SyntaxKind::{FIELD_EXPR, METHOD_CALL_EXPR},\n     TextRange, TextSize,\n@@ -104,7 +103,7 @@ fn on_dot_typed(file: &SourceFile, offset: TextSize) -> Option<TextEdit> {\n     if !matches!(parent.kind(), FIELD_EXPR | METHOD_CALL_EXPR) {\n         return None;\n     }\n-    let prev_indent = leading_indent(&parent)?;\n+    let prev_indent = IndentLevel::from_node(&parent);\n     let target_indent = format!(\"    {}\", prev_indent);\n     let target_indent_len = TextSize::of(&target_indent);\n     if current_indent_len == target_indent_len {"}]}