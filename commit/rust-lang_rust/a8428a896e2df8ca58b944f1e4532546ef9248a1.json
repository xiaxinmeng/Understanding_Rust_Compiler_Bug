{"sha": "a8428a896e2df8ca58b944f1e4532546ef9248a1", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE4NDI4YTg5NmUyZGY4Y2E1OGI5NDRmMWU0NTMyNTQ2ZWY5MjQ4YTE=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-01-16T08:59:18Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-01-16T09:07:42Z"}, "message": "rustdoc: Write fn docs", "tree": {"sha": "40336098c00e1ab3813e3cbcbbec1c855c558f77", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/40336098c00e1ab3813e3cbcbbec1c855c558f77"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a8428a896e2df8ca58b944f1e4532546ef9248a1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a8428a896e2df8ca58b944f1e4532546ef9248a1", "html_url": "https://github.com/rust-lang/rust/commit/a8428a896e2df8ca58b944f1e4532546ef9248a1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a8428a896e2df8ca58b944f1e4532546ef9248a1/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d928952191bbdaec8f8dcf6ce9803d9f11aa4f5b", "url": "https://api.github.com/repos/rust-lang/rust/commits/d928952191bbdaec8f8dcf6ce9803d9f11aa4f5b", "html_url": "https://github.com/rust-lang/rust/commit/d928952191bbdaec8f8dcf6ce9803d9f11aa4f5b"}], "stats": {"total": 59, "additions": 58, "deletions": 1}, "files": [{"sha": "e7abf6a43394eb4710336479ea05313a20178bcd", "filename": "src/rustdoc/gen.rs", "status": "modified", "additions": 58, "deletions": 1, "changes": 59, "blob_url": "https://github.com/rust-lang/rust/blob/a8428a896e2df8ca58b944f1e4532546ef9248a1/src%2Frustdoc%2Fgen.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a8428a896e2df8ca58b944f1e4532546ef9248a1/src%2Frustdoc%2Fgen.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustdoc%2Fgen.rs?ref=a8428a896e2df8ca58b944f1e4532546ef9248a1", "patch": "@@ -5,7 +5,7 @@ type ctxt = {\n \n fn write_markdown(\n     doc: doc::cratedoc,\n-    _crate: @ast::crate,\n+    crate: @ast::crate,\n     writer: io::writer\n ) {\n     let ctxt = {\n@@ -14,6 +14,54 @@ fn write_markdown(\n     };\n \n     write_header(ctxt, doc.topmod.name);\n+    write_top_module(ctxt, crate, doc.topmod);\n+}\n+\n+fn write_top_module(\n+    ctxt: ctxt,\n+    crate: @ast::crate,\n+    moddoc: doc::moddoc\n+) {\n+    write_mod_contents(ctxt, crate, moddoc);\n+}\n+\n+fn write_mod(\n+    ctxt: ctxt,\n+    crate: @ast::crate,\n+    moddoc: doc::moddoc\n+) {\n+    write_mod_contents(ctxt, crate, moddoc);\n+}\n+\n+fn write_mod_contents(\n+    ctxt: ctxt,\n+    crate: @ast::crate,\n+    moddoc: doc::moddoc\n+) {\n+    for fndoc in *moddoc.fns {\n+        write_fn(ctxt, crate, fndoc);\n+    }\n+\n+    for moddoc in *moddoc.mods {\n+        write_mod(ctxt, crate, moddoc);\n+    }\n+}\n+\n+fn write_fn(\n+    ctxt: ctxt,\n+    crate: @ast::crate,\n+    fndoc: doc::fndoc\n+) {\n+    import rustc::middle::ast_map;\n+\n+    let map = ast_map::map_crate(*crate);\n+    let decl = alt map.get(fndoc.id) {\n+      ast_map::node_item(@{\n+        node: ast::item_fn(decl, _, _), _\n+      }) { decl }\n+    };\n+\n+    write_fndoc(ctxt, fndoc.name, fndoc, decl);\n }\n \n #[doc(\n@@ -80,4 +128,13 @@ mod tests {\n         let markdown = write_markdown_str(doc, ast);\n         assert str::contains(markdown, \"# Crate belch\\n\");\n     }\n+\n+    #[test]\n+    fn write_markdown_should_write_function_header() {\n+        let source = \"fn func() { }\";\n+        let ast = parse::from_str(source);\n+        let doc = extract::extract(ast, \"\");\n+        let markdown = write_markdown_str(doc, ast);\n+        assert str::contains(markdown, \"## Function `func`\");\n+    }\n }\n\\ No newline at end of file"}]}