{"sha": "7d6aec68878ae15044ec8f075a5bede15ae421d3", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdkNmFlYzY4ODc4YWUxNTA0NGVjOGYwNzVhNWJlZGUxNWFlNDIxZDM=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2020-07-23T08:40:13Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2020-07-23T08:40:13Z"}, "message": "rustup", "tree": {"sha": "de0b5f6e606179fded4f2a4b593a8b36553ffab9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/de0b5f6e606179fded4f2a4b593a8b36553ffab9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7d6aec68878ae15044ec8f075a5bede15ae421d3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7d6aec68878ae15044ec8f075a5bede15ae421d3", "html_url": "https://github.com/rust-lang/rust/commit/7d6aec68878ae15044ec8f075a5bede15ae421d3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7d6aec68878ae15044ec8f075a5bede15ae421d3/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c44f1ae485f90303ca3dfe0784daf871e7741b7a", "url": "https://api.github.com/repos/rust-lang/rust/commits/c44f1ae485f90303ca3dfe0784daf871e7741b7a", "html_url": "https://github.com/rust-lang/rust/commit/c44f1ae485f90303ca3dfe0784daf871e7741b7a"}], "stats": {"total": 9, "additions": 5, "deletions": 4}, "files": [{"sha": "bfbf6b81b2e2e598bbbe62d9e049b00081a42f7c", "filename": "rust-version", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7d6aec68878ae15044ec8f075a5bede15ae421d3/rust-version", "raw_url": "https://github.com/rust-lang/rust/raw/7d6aec68878ae15044ec8f075a5bede15ae421d3/rust-version", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/rust-version?ref=7d6aec68878ae15044ec8f075a5bede15ae421d3", "patch": "@@ -1 +1 @@\n-567ad7455d5f25f6b38d2fded1cb621e0c34a48b\n+4825e12fc9c79954aa0fe18f5521efa6c19c7539"}, {"sha": "473da84aeea356c0df58737a0519ac5b53aada12", "filename": "src/helpers.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/7d6aec68878ae15044ec8f075a5bede15ae421d3/src%2Fhelpers.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7d6aec68878ae15044ec8f075a5bede15ae421d3/src%2Fhelpers.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fhelpers.rs?ref=7d6aec68878ae15044ec8f075a5bede15ae421d3", "patch": "@@ -92,14 +92,14 @@ pub trait EvalContextExt<'mir, 'tcx: 'mir>: crate::MiriEvalContextExt<'mir, 'tcx\n     /// Helper function to get the `TyAndLayout` of a `libc` type\n     fn libc_ty_layout(&mut self, name: &str) -> InterpResult<'tcx, TyAndLayout<'tcx>> {\n         let this = self.eval_context_mut();\n-        let ty = this.resolve_path(&[\"libc\", name]).monomorphic_ty(*this.tcx);\n+        let ty = this.resolve_path(&[\"libc\", name]).ty(*this.tcx, ty::ParamEnv::reveal_all());\n         this.layout_of(ty)\n     }\n \n     /// Helper function to get the `TyAndLayout` of a `windows` type\n     fn windows_ty_layout(&mut self, name: &str) -> InterpResult<'tcx, TyAndLayout<'tcx>> {\n         let this = self.eval_context_mut();\n-        let ty = this.resolve_path(&[\"std\", \"sys\", \"windows\", \"c\", name]).monomorphic_ty(*this.tcx);\n+        let ty = this.resolve_path(&[\"std\", \"sys\", \"windows\", \"c\", name]).ty(*this.tcx, ty::ParamEnv::reveal_all());\n         this.layout_of(ty)\n     }\n "}, {"sha": "a43e86dcc5b5ba3197d93b92f9ccbb2cfa2a080c", "filename": "src/shims/posix/fs.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/7d6aec68878ae15044ec8f075a5bede15ae421d3/src%2Fshims%2Fposix%2Ffs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7d6aec68878ae15044ec8f075a5bede15ae421d3/src%2Fshims%2Fposix%2Ffs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fshims%2Fposix%2Ffs.rs?ref=7d6aec68878ae15044ec8f075a5bede15ae421d3", "patch": "@@ -9,6 +9,7 @@ use log::trace;\n \n use rustc_data_structures::fx::FxHashMap;\n use rustc_target::abi::{Align, LayoutOf, Size};\n+use rustc_middle::ty;\n \n use crate::*;\n use stacked_borrows::Tag;\n@@ -670,7 +671,7 @@ pub trait EvalContextExt<'mir, 'tcx: 'mir>: crate::MiriEvalContextExt<'mir, 'tcx\n             // function and `resolve_path` is returning the latter.\n             let statx_ty = this\n                 .resolve_path(&[\"libc\", \"unix\", \"linux_like\", \"linux\", \"gnu\", \"statx\"])\n-                .monomorphic_ty(*this.tcx);\n+                .ty(*this.tcx, ty::ParamEnv::reveal_all());\n             let statxbuf_ty = this.tcx.mk_mut_ptr(statx_ty);\n             let statxbuf_layout = this.layout_of(statxbuf_ty)?;\n             let statxbuf_imm = ImmTy::from_scalar(statxbuf_scalar, statxbuf_layout);"}]}