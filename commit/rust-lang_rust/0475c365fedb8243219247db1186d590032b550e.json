{"sha": "0475c365fedb8243219247db1186d590032b550e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA0NzVjMzY1ZmVkYjgyNDMyMTkyNDdkYjExODZkNTkwMDMyYjU1MGU=", "commit": {"author": {"name": "Dylan MacKenzie", "email": "ecstaticmorse@gmail.com", "date": "2020-09-15T00:13:47Z"}, "committer": {"name": "Dylan MacKenzie", "email": "ecstaticmorse@gmail.com", "date": "2020-09-15T00:56:39Z"}, "message": "Add pass names to some common dataflow analyses", "tree": {"sha": "c021bb9f42dfb0ba0c1d8745cbbcb61d24cc6ea5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c021bb9f42dfb0ba0c1d8745cbbcb61d24cc6ea5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0475c365fedb8243219247db1186d590032b550e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0475c365fedb8243219247db1186d590032b550e", "html_url": "https://github.com/rust-lang/rust/commit/0475c365fedb8243219247db1186d590032b550e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0475c365fedb8243219247db1186d590032b550e/comments", "author": {"login": "ecstatic-morse", "id": 29463364, "node_id": "MDQ6VXNlcjI5NDYzMzY0", "avatar_url": "https://avatars.githubusercontent.com/u/29463364?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ecstatic-morse", "html_url": "https://github.com/ecstatic-morse", "followers_url": "https://api.github.com/users/ecstatic-morse/followers", "following_url": "https://api.github.com/users/ecstatic-morse/following{/other_user}", "gists_url": "https://api.github.com/users/ecstatic-morse/gists{/gist_id}", "starred_url": "https://api.github.com/users/ecstatic-morse/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ecstatic-morse/subscriptions", "organizations_url": "https://api.github.com/users/ecstatic-morse/orgs", "repos_url": "https://api.github.com/users/ecstatic-morse/repos", "events_url": "https://api.github.com/users/ecstatic-morse/events{/privacy}", "received_events_url": "https://api.github.com/users/ecstatic-morse/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ecstatic-morse", "id": 29463364, "node_id": "MDQ6VXNlcjI5NDYzMzY0", "avatar_url": "https://avatars.githubusercontent.com/u/29463364?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ecstatic-morse", "html_url": "https://github.com/ecstatic-morse", "followers_url": "https://api.github.com/users/ecstatic-morse/followers", "following_url": "https://api.github.com/users/ecstatic-morse/following{/other_user}", "gists_url": "https://api.github.com/users/ecstatic-morse/gists{/gist_id}", "starred_url": "https://api.github.com/users/ecstatic-morse/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ecstatic-morse/subscriptions", "organizations_url": "https://api.github.com/users/ecstatic-morse/orgs", "repos_url": "https://api.github.com/users/ecstatic-morse/repos", "events_url": "https://api.github.com/users/ecstatic-morse/events{/privacy}", "received_events_url": "https://api.github.com/users/ecstatic-morse/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8e3ce43de9844a869e85eafca531079f8e89b732", "url": "https://api.github.com/repos/rust-lang/rust/commits/8e3ce43de9844a869e85eafca531079f8e89b732", "html_url": "https://github.com/rust-lang/rust/commit/8e3ce43de9844a869e85eafca531079f8e89b732"}], "stats": {"total": 16, "additions": 14, "deletions": 2}, "files": [{"sha": "a6f06fee3b27be76d232fc12cd6141435f938e07", "filename": "compiler/rustc_mir/src/borrow_check/mod.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/0475c365fedb8243219247db1186d590032b550e/compiler%2Frustc_mir%2Fsrc%2Fborrow_check%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0475c365fedb8243219247db1186d590032b550e/compiler%2Frustc_mir%2Fsrc%2Fborrow_check%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir%2Fsrc%2Fborrow_check%2Fmod.rs?ref=0475c365fedb8243219247db1186d590032b550e", "patch": "@@ -205,6 +205,7 @@ fn do_mir_borrowck<'a, 'tcx>(\n \n     let mut flow_inits = MaybeInitializedPlaces::new(tcx, &body, &mdpe)\n         .into_engine(tcx, &body, def.did.to_def_id())\n+        .pass_name(\"borrowck\")\n         .iterate_to_fixpoint()\n         .into_results_cursor(&body);\n \n@@ -264,12 +265,15 @@ fn do_mir_borrowck<'a, 'tcx>(\n \n     let flow_borrows = Borrows::new(tcx, &body, regioncx.clone(), &borrow_set)\n         .into_engine(tcx, &body, def.did.to_def_id())\n+        .pass_name(\"borrowck\")\n         .iterate_to_fixpoint();\n     let flow_uninits = MaybeUninitializedPlaces::new(tcx, &body, &mdpe)\n         .into_engine(tcx, &body, def.did.to_def_id())\n+        .pass_name(\"borrowck\")\n         .iterate_to_fixpoint();\n     let flow_ever_inits = EverInitializedPlaces::new(tcx, &body, &mdpe)\n         .into_engine(tcx, &body, def.did.to_def_id())\n+        .pass_name(\"borrowck\")\n         .iterate_to_fixpoint();\n \n     let movable_generator = match tcx.hir().get(id) {"}, {"sha": "ef306813825f5b1bed3ee5ac118a523e358e25fe", "filename": "compiler/rustc_mir/src/transform/check_consts/validation.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/0475c365fedb8243219247db1186d590032b550e/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Fcheck_consts%2Fvalidation.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0475c365fedb8243219247db1186d590032b550e/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Fcheck_consts%2Fvalidation.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Fcheck_consts%2Fvalidation.rs?ref=0475c365fedb8243219247db1186d590032b550e", "patch": "@@ -57,6 +57,7 @@ impl Qualifs<'mir, 'tcx> {\n             MaybeMutBorrowedLocals::mut_borrows_only(tcx, &body, param_env)\n                 .unsound_ignore_borrow_on_drop()\n                 .into_engine(tcx, &body, def_id.to_def_id())\n+                .pass_name(\"const_qualification\")\n                 .iterate_to_fixpoint()\n                 .into_results_cursor(&body)\n         });"}, {"sha": "a8b2ee5705f1f16590bae7f2e681f0ca1e3cd272", "filename": "compiler/rustc_mir/src/transform/elaborate_drops.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/0475c365fedb8243219247db1186d590032b550e/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Felaborate_drops.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0475c365fedb8243219247db1186d590032b550e/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Felaborate_drops.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Felaborate_drops.rs?ref=0475c365fedb8243219247db1186d590032b550e", "patch": "@@ -44,13 +44,15 @@ impl<'tcx> MirPass<'tcx> for ElaborateDrops {\n             let inits = MaybeInitializedPlaces::new(tcx, body, &env)\n                 .into_engine(tcx, body, def_id)\n                 .dead_unwinds(&dead_unwinds)\n+                .pass_name(\"elaborate_drops\")\n                 .iterate_to_fixpoint()\n                 .into_results_cursor(body);\n \n             let uninits = MaybeUninitializedPlaces::new(tcx, body, &env)\n                 .mark_inactive_variants_as_uninit()\n                 .into_engine(tcx, body, def_id)\n                 .dead_unwinds(&dead_unwinds)\n+                .pass_name(\"elaborate_drops\")\n                 .iterate_to_fixpoint()\n                 .into_results_cursor(body);\n \n@@ -83,6 +85,7 @@ fn find_dead_unwinds<'tcx>(\n     let mut dead_unwinds = BitSet::new_empty(body.basic_blocks().len());\n     let mut flow_inits = MaybeInitializedPlaces::new(tcx, body, &env)\n         .into_engine(tcx, body, def_id)\n+        .pass_name(\"find_dead_unwinds\")\n         .iterate_to_fixpoint()\n         .into_results_cursor(body);\n     for (bb, bb_data) in body.basic_blocks().iter_enumerated() {"}, {"sha": "1fffcf81515377dcc039e80e1bb863c5de6b7f2e", "filename": "compiler/rustc_mir/src/transform/generator.rs", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/0475c365fedb8243219247db1186d590032b550e/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Fgenerator.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0475c365fedb8243219247db1186d590032b550e/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Fgenerator.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Fgenerator.rs?ref=0475c365fedb8243219247db1186d590032b550e", "patch": "@@ -467,8 +467,10 @@ fn locals_live_across_suspend_points(\n \n     // Calculate the MIR locals which have been previously\n     // borrowed (even if they are still active).\n-    let borrowed_locals_results =\n-        MaybeBorrowedLocals::all_borrows().into_engine(tcx, body_ref, def_id).iterate_to_fixpoint();\n+    let borrowed_locals_results = MaybeBorrowedLocals::all_borrows()\n+        .into_engine(tcx, body_ref, def_id)\n+        .pass_name(\"generator\")\n+        .iterate_to_fixpoint();\n \n     let mut borrowed_locals_cursor =\n         dataflow::ResultsCursor::new(body_ref, &borrowed_locals_results);\n@@ -484,6 +486,7 @@ fn locals_live_across_suspend_points(\n     // Calculate the liveness of MIR locals ignoring borrows.\n     let mut liveness = MaybeLiveLocals\n         .into_engine(tcx, body_ref, def_id)\n+        .pass_name(\"generator\")\n         .iterate_to_fixpoint()\n         .into_results_cursor(body_ref);\n "}, {"sha": "1615f19237096f4c2816a28673f53b6012fdbd96", "filename": "src/tools/clippy/clippy_lints/src/redundant_clone.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/0475c365fedb8243219247db1186d590032b550e/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Fredundant_clone.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0475c365fedb8243219247db1186d590032b550e/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Fredundant_clone.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Fredundant_clone.rs?ref=0475c365fedb8243219247db1186d590032b550e", "patch": "@@ -87,6 +87,7 @@ impl<'tcx> LateLintPass<'tcx> for RedundantClone {\n \n         let maybe_storage_live_result = MaybeStorageLive\n             .into_engine(cx.tcx, mir, def_id.to_def_id())\n+            .pass_name(\"redundant_clone\")\n             .iterate_to_fixpoint()\n             .into_results_cursor(mir);\n         let mut possible_borrower = {"}]}