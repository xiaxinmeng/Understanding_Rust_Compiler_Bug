{"sha": "1bf06495443584539b958873e04cc2f864ab10e4", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFiZjA2NDk1NDQzNTg0NTM5Yjk1ODg3M2UwNGNjMmY4NjRhYjEwZTQ=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2014-11-14T15:22:28Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2014-11-14T15:22:28Z"}, "message": "auto merge of #18893 : bkoropoff/rust/issue-18883, r=alexcrichton\n\nThis was a simple case of substitutions being applied inconsistently.  I haven't investigated why type parameters are actually showing up in the closure type here, but trans needs to handle them correctly in any case.", "tree": {"sha": "07098214ac283d0b8e48967575f92ef6243dbe68", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/07098214ac283d0b8e48967575f92ef6243dbe68"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1bf06495443584539b958873e04cc2f864ab10e4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1bf06495443584539b958873e04cc2f864ab10e4", "html_url": "https://github.com/rust-lang/rust/commit/1bf06495443584539b958873e04cc2f864ab10e4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1bf06495443584539b958873e04cc2f864ab10e4/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4963afdc7b6adeee74abd306d3933a58bbec522b", "url": "https://api.github.com/repos/rust-lang/rust/commits/4963afdc7b6adeee74abd306d3933a58bbec522b", "html_url": "https://github.com/rust-lang/rust/commit/4963afdc7b6adeee74abd306d3933a58bbec522b"}, {"sha": "01358587a5a3fd7a324f54349d210913229daac5", "url": "https://api.github.com/repos/rust-lang/rust/commits/01358587a5a3fd7a324f54349d210913229daac5", "html_url": "https://github.com/rust-lang/rust/commit/01358587a5a3fd7a324f54349d210913229daac5"}], "stats": {"total": 34, "additions": 27, "deletions": 7}, "files": [{"sha": "7a040196ea87bb342f339267e164cd0fbd749170", "filename": "src/librustc/middle/trans/callee.rs", "status": "modified", "additions": 6, "deletions": 5, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/1bf06495443584539b958873e04cc2f864ab10e4/src%2Flibrustc%2Fmiddle%2Ftrans%2Fcallee.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1bf06495443584539b958873e04cc2f864ab10e4/src%2Flibrustc%2Fmiddle%2Ftrans%2Fcallee.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftrans%2Fcallee.rs?ref=1bf06495443584539b958873e04cc2f864ab10e4", "patch": "@@ -253,12 +253,14 @@ pub fn trans_unboxing_shim(bcx: Block,\n                            llshimmedfn: ValueRef,\n                            fty: &ty::BareFnTy,\n                            method_id: ast::DefId,\n-                           substs: subst::Substs)\n+                           substs: &subst::Substs)\n                            -> ValueRef {\n     let _icx = push_ctxt(\"trans_unboxing_shim\");\n     let ccx = bcx.ccx();\n     let tcx = bcx.tcx();\n \n+    let fty = fty.subst(tcx, substs);\n+\n     // Transform the self type to `Box<self_type>`.\n     let self_type = fty.sig.inputs[0];\n     let boxed_self_type = ty::mk_uniq(tcx, self_type);\n@@ -279,8 +281,7 @@ pub fn trans_unboxing_shim(bcx: Block,\n         abi: fty.abi,\n         sig: boxed_function_type,\n     };\n-    let boxed_function_type =\n-        ty::mk_bare_fn(tcx, boxed_function_type).subst(tcx, &substs);\n+    let boxed_function_type = ty::mk_bare_fn(tcx, boxed_function_type);\n     let function_type = match fty.abi {\n         synabi::RustCall => {\n             // We're passing through to a RustCall ABI function, but\n@@ -301,10 +302,10 @@ pub fn trans_unboxing_shim(bcx: Block,\n                 abi: synabi::Rust,\n                 sig: fake_ty,\n             };\n-            ty::mk_bare_fn(tcx, fake_ty).subst(tcx, &substs)\n+            ty::mk_bare_fn(tcx, fake_ty)\n         }\n         _ => {\n-            ty::mk_bare_fn(tcx, (*fty).clone()).subst(tcx, &substs)\n+            ty::mk_bare_fn(tcx, fty)\n         }\n     };\n "}, {"sha": "098b82fe38c181e8a16d34496898b3c45546567f", "filename": "src/librustc/middle/trans/meth.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1bf06495443584539b958873e04cc2f864ab10e4/src%2Flibrustc%2Fmiddle%2Ftrans%2Fmeth.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1bf06495443584539b958873e04cc2f864ab10e4/src%2Flibrustc%2Fmiddle%2Ftrans%2Fmeth.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftrans%2Fmeth.rs?ref=1bf06495443584539b958873e04cc2f864ab10e4", "patch": "@@ -624,7 +624,7 @@ pub fn get_vtable(bcx: Block,\n                                                    llfn,\n                                                    &closure_type,\n                                                    closure_def_id,\n-                                                   substs);\n+                                                   &substs);\n                     }\n                 }\n \n@@ -723,7 +723,7 @@ fn emit_vtable_methods(bcx: Block,\n                                                      fn_ref,\n                                                      &m.fty,\n                                                      m_id,\n-                                                     substs.clone());\n+                                                     &substs);\n                     }\n                     Some(fn_ref).into_iter()\n                 }"}, {"sha": "c54844f570b9df21e5949c06a035a2bf3acc8426", "filename": "src/test/run-pass/issue-18883.rs", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/1bf06495443584539b958873e04cc2f864ab10e4/src%2Ftest%2Frun-pass%2Fissue-18883.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1bf06495443584539b958873e04cc2f864ab10e4/src%2Ftest%2Frun-pass%2Fissue-18883.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-18883.rs?ref=1bf06495443584539b958873e04cc2f864ab10e4", "patch": "@@ -0,0 +1,19 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// Test that we don't ICE due to encountering unsubstituted type\n+// parameters when untupling FnOnce parameters during translation of\n+// an unboxing shim.\n+\n+#![feature(unboxed_closures)]\n+\n+fn main() {\n+    let _: Box<FnOnce<(),()>> = box move |&mut:| {};\n+}"}]}