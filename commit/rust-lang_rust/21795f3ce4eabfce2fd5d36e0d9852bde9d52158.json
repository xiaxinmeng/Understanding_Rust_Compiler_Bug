{"sha": "21795f3ce4eabfce2fd5d36e0d9852bde9d52158", "node_id": "C_kwDOAAsO6NoAKDIxNzk1ZjNjZTRlYWJmY2UyZmQ1ZDM2ZTBkOTg1MmJkZTlkNTIxNTg", "commit": {"author": {"name": "Oli Scherer", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2022-05-25T16:11:37Z"}, "committer": {"name": "Oli Scherer", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2022-05-25T18:26:33Z"}, "message": "Fix annotations matching themselves", "tree": {"sha": "773d000df688fc8c2fce4d27b575d118da8a44db", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/773d000df688fc8c2fce4d27b575d118da8a44db"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/21795f3ce4eabfce2fd5d36e0d9852bde9d52158", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/21795f3ce4eabfce2fd5d36e0d9852bde9d52158", "html_url": "https://github.com/rust-lang/rust/commit/21795f3ce4eabfce2fd5d36e0d9852bde9d52158", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/21795f3ce4eabfce2fd5d36e0d9852bde9d52158/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "23bbe2bce72c4674ef46507a2db1e4e5e55ff3ff", "url": "https://api.github.com/repos/rust-lang/rust/commits/23bbe2bce72c4674ef46507a2db1e4e5e55ff3ff", "html_url": "https://github.com/rust-lang/rust/commit/23bbe2bce72c4674ef46507a2db1e4e5e55ff3ff"}], "stats": {"total": 3, "additions": 3, "deletions": 0}, "files": [{"sha": "f657be4ea65c71b1396ecf5ab1d6f083f25b0187", "filename": "ui_test/src/lib.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/21795f3ce4eabfce2fd5d36e0d9852bde9d52158/ui_test%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/21795f3ce4eabfce2fd5d36e0d9852bde9d52158/ui_test%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/ui_test%2Fsrc%2Flib.rs?ref=21795f3ce4eabfce2fd5d36e0d9852bde9d52158", "patch": "@@ -257,6 +257,9 @@ pub fn check_annotations(\n     comments: &Comments,\n ) {\n     let unnormalized_stderr = std::str::from_utf8(unnormalized_stderr).unwrap();\n+    // erase annotations from the stderr so they don't match themselves\n+    let annotations = Regex::new(r\"\\s*//~.*\").unwrap();\n+    let unnormalized_stderr = annotations.replace(unnormalized_stderr, \"\");\n     let mut found_annotation = false;\n     if let Some((ref error_pattern, definition_line)) = comments.error_pattern {\n         if !unnormalized_stderr.contains(error_pattern) {"}]}