{"sha": "5a731ffdaefe26f68d0744882390f6c12c4284da", "node_id": "MDY6Q29tbWl0NzI0NzEyOjVhNzMxZmZkYWVmZTI2ZjY4ZDA3NDQ4ODIzOTBmNmMxMmM0Mjg0ZGE=", "commit": {"author": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2020-12-01T20:56:15Z"}, "committer": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2021-06-29T18:05:11Z"}, "message": "Encode CommandLine in the index only.", "tree": {"sha": "b5d818bd81bd2f5faea98fbff9d705236939e7b8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b5d818bd81bd2f5faea98fbff9d705236939e7b8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5a731ffdaefe26f68d0744882390f6c12c4284da", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5a731ffdaefe26f68d0744882390f6c12c4284da", "html_url": "https://github.com/rust-lang/rust/commit/5a731ffdaefe26f68d0744882390f6c12c4284da", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5a731ffdaefe26f68d0744882390f6c12c4284da/comments", "author": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "66fee063b6c9baed90af1e99baf75c651c2a6247", "url": "https://api.github.com/repos/rust-lang/rust/commits/66fee063b6c9baed90af1e99baf75c651c2a6247", "html_url": "https://github.com/rust-lang/rust/commit/66fee063b6c9baed90af1e99baf75c651c2a6247"}], "stats": {"total": 41, "additions": 15, "deletions": 26}, "files": [{"sha": "c7e26013f1cbe1dcb8b224884f842d1b9e1f1743", "filename": "compiler/rustc_lint/src/levels.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/5a731ffdaefe26f68d0744882390f6c12c4284da/compiler%2Frustc_lint%2Fsrc%2Flevels.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5a731ffdaefe26f68d0744882390f6c12c4284da/compiler%2Frustc_lint%2Fsrc%2Flevels.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_lint%2Fsrc%2Flevels.rs?ref=5a731ffdaefe26f68d0744882390f6c12c4284da", "patch": "@@ -121,7 +121,7 @@ impl<'s> LintLevelsBuilder<'s> {\n             }\n         }\n \n-        self.cur = self.sets.list.push(LintSet::CommandLine { specs });\n+        self.cur = self.sets.list.push(LintSet { specs, parent: COMMAND_LINE });\n     }\n \n     /// Attempts to insert the `id` to `level_src` map entry. If unsuccessful\n@@ -524,7 +524,7 @@ impl<'s> LintLevelsBuilder<'s> {\n \n         let prev = self.cur;\n         if !specs.is_empty() {\n-            self.cur = self.sets.list.push(LintSet::Node { specs, parent: prev });\n+            self.cur = self.sets.list.push(LintSet { specs, parent: prev });\n         }\n \n         BuilderPush { prev, changed: prev != self.cur }"}, {"sha": "560581cf641a52e2f7e0eff75143b3e4a4bfc023", "filename": "compiler/rustc_middle/src/lint.rs", "status": "modified", "additions": 13, "deletions": 24, "changes": 37, "blob_url": "https://github.com/rust-lang/rust/blob/5a731ffdaefe26f68d0744882390f6c12c4284da/compiler%2Frustc_middle%2Fsrc%2Flint.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5a731ffdaefe26f68d0744882390f6c12c4284da/compiler%2Frustc_middle%2Fsrc%2Flint.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Flint.rs?ref=5a731ffdaefe26f68d0744882390f6c12c4284da", "patch": "@@ -66,17 +66,12 @@ rustc_index::newtype_index! {\n }\n \n #[derive(Debug, HashStable)]\n-pub enum LintSet {\n-    CommandLine {\n-        // -A,-W,-D flags, a `Symbol` for the flag itself and `Level` for which\n-        // flag.\n-        specs: FxHashMap<LintId, LevelAndSource>,\n-    },\n-\n-    Node {\n-        specs: FxHashMap<LintId, LevelAndSource>,\n-        parent: LintStackIndex,\n-    },\n+pub struct LintSet {\n+    // -A,-W,-D flags, a `Symbol` for the flag itself and `Level` for which\n+    // flag.\n+    pub specs: FxHashMap<LintId, LevelAndSource>,\n+\n+    pub parent: LintStackIndex,\n }\n \n impl LintLevelSets {\n@@ -139,20 +134,14 @@ impl LintLevelSets {\n             }\n         }\n         loop {\n-            match self.list[idx] {\n-                LintSet::CommandLine { ref specs } => {\n-                    if let Some(&(level, src)) = specs.get(&id) {\n-                        return (Some(level), src);\n-                    }\n-                    return (None, LintLevelSource::Default);\n-                }\n-                LintSet::Node { ref specs, parent } => {\n-                    if let Some(&(level, src)) = specs.get(&id) {\n-                        return (Some(level), src);\n-                    }\n-                    idx = parent;\n-                }\n+            let LintSet { ref specs, parent } = self.list[idx];\n+            if let Some(&(level, src)) = specs.get(&id) {\n+                return (Some(level), src);\n+            }\n+            if idx == COMMAND_LINE {\n+                return (None, LintLevelSource::Default);\n             }\n+            idx = parent;\n         }\n     }\n }"}]}