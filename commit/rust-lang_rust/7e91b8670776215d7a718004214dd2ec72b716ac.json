{"sha": "7e91b8670776215d7a718004214dd2ec72b716ac", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdlOTFiODY3MDc3NjIxNWQ3YTcxODAwNDIxNGRkMmVjNzJiNzE2YWM=", "commit": {"author": {"name": "Alexander von Gluck IV", "email": "kallisti5@unixzen.com", "date": "2016-09-25T21:55:40Z"}, "committer": {"name": "Alexander von Gluck IV", "email": "kallisti5@unixzen.com", "date": "2016-09-25T21:55:40Z"}, "message": "Haiku: Adjust haiku target to match new librustc_back design", "tree": {"sha": "6c6d169dd2ac37ea39cd08ab4dfff531537609fe", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6c6d169dd2ac37ea39cd08ab4dfff531537609fe"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7e91b8670776215d7a718004214dd2ec72b716ac", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7e91b8670776215d7a718004214dd2ec72b716ac", "html_url": "https://github.com/rust-lang/rust/commit/7e91b8670776215d7a718004214dd2ec72b716ac", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7e91b8670776215d7a718004214dd2ec72b716ac/comments", "author": {"login": "kallisti5", "id": 100110, "node_id": "MDQ6VXNlcjEwMDExMA==", "avatar_url": "https://avatars.githubusercontent.com/u/100110?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kallisti5", "html_url": "https://github.com/kallisti5", "followers_url": "https://api.github.com/users/kallisti5/followers", "following_url": "https://api.github.com/users/kallisti5/following{/other_user}", "gists_url": "https://api.github.com/users/kallisti5/gists{/gist_id}", "starred_url": "https://api.github.com/users/kallisti5/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kallisti5/subscriptions", "organizations_url": "https://api.github.com/users/kallisti5/orgs", "repos_url": "https://api.github.com/users/kallisti5/repos", "events_url": "https://api.github.com/users/kallisti5/events{/privacy}", "received_events_url": "https://api.github.com/users/kallisti5/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kallisti5", "id": 100110, "node_id": "MDQ6VXNlcjEwMDExMA==", "avatar_url": "https://avatars.githubusercontent.com/u/100110?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kallisti5", "html_url": "https://github.com/kallisti5", "followers_url": "https://api.github.com/users/kallisti5/followers", "following_url": "https://api.github.com/users/kallisti5/following{/other_user}", "gists_url": "https://api.github.com/users/kallisti5/gists{/gist_id}", "starred_url": "https://api.github.com/users/kallisti5/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kallisti5/subscriptions", "organizations_url": "https://api.github.com/users/kallisti5/orgs", "repos_url": "https://api.github.com/users/kallisti5/repos", "events_url": "https://api.github.com/users/kallisti5/events{/privacy}", "received_events_url": "https://api.github.com/users/kallisti5/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8ec1d21ffaecc7a7c0d39d6a9dcc5fa2ea892dde", "url": "https://api.github.com/repos/rust-lang/rust/commits/8ec1d21ffaecc7a7c0d39d6a9dcc5fa2ea892dde", "html_url": "https://github.com/rust-lang/rust/commit/8ec1d21ffaecc7a7c0d39d6a9dcc5fa2ea892dde"}], "stats": {"total": 70, "additions": 44, "deletions": 26}, "files": [{"sha": "5e319ba1838a0a9558e4d31fe65092da0b5dd7b5", "filename": "src/librustc_back/target/haiku_base.rs", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/7e91b8670776215d7a718004214dd2ec72b716ac/src%2Flibrustc_back%2Ftarget%2Fhaiku_base.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7e91b8670776215d7a718004214dd2ec72b716ac/src%2Flibrustc_back%2Ftarget%2Fhaiku_base.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_back%2Ftarget%2Fhaiku_base.rs?ref=7e91b8670776215d7a718004214dd2ec72b716ac", "patch": "@@ -0,0 +1,23 @@\n+// Copyright 2014-2015 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+use target::TargetOptions;\n+use std::default::Default;\n+\n+pub fn opts() -> TargetOptions {\n+    TargetOptions {\n+        linker: \"cc\".to_string(),\n+        dynamic_linking: true,\n+        executables: true,\n+        has_rpath: true,\n+        linker_is_gnu: true,\n+        .. Default::default()\n+    }\n+}"}, {"sha": "862016704f47cde38e68d5846f97de69ede07315", "filename": "src/librustc_back/target/i686_unknown_haiku.rs", "status": "modified", "additions": 10, "deletions": 13, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/7e91b8670776215d7a718004214dd2ec72b716ac/src%2Flibrustc_back%2Ftarget%2Fi686_unknown_haiku.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7e91b8670776215d7a718004214dd2ec72b716ac/src%2Flibrustc_back%2Ftarget%2Fi686_unknown_haiku.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_back%2Ftarget%2Fi686_unknown_haiku.rs?ref=7e91b8670776215d7a718004214dd2ec72b716ac", "patch": "@@ -8,12 +8,15 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-use target::Target;\n-use target::TargetOptions;\n-use std::default::Default;\n+use target::{Target, TargetResult};\n \n-pub fn target() -> Target {\n-    Target {\n+pub fn target() -> TargetResult {\n+    let mut base = super::haiku_base::opts();\n+    base.cpu = \"pentium4\".to_string();\n+    base.max_atomic_width = 64;\n+    base.pre_link_args.push(\"-m32\".to_string());\n+\n+    Ok(Target {\n         llvm_target: \"i686-unknown-haiku\".to_string(),\n         target_endian: \"little\".to_string(),\n         target_pointer_width: \"32\".to_string(),\n@@ -22,12 +25,6 @@ pub fn target() -> Target {\n         target_os: \"haiku\".to_string(),\n         target_env: \"\".to_string(),\n         target_vendor: \"unknown\".to_string(),\n-        options: TargetOptions {\n-            linker: \"cc\".to_string(),\n-            dynamic_linking: true,\n-            executables: true,\n-            has_rpath: true,\n-            .. Default::default()\n-        },\n-    }\n+        options: base,\n+    })\n }"}, {"sha": "087078021a1883ec98ed0e92f5ea7f62f3c0d357", "filename": "src/librustc_back/target/mod.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/7e91b8670776215d7a718004214dd2ec72b716ac/src%2Flibrustc_back%2Ftarget%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7e91b8670776215d7a718004214dd2ec72b716ac/src%2Flibrustc_back%2Ftarget%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_back%2Ftarget%2Fmod.rs?ref=7e91b8670776215d7a718004214dd2ec72b716ac", "patch": "@@ -56,6 +56,7 @@ mod apple_ios_base;\n mod bitrig_base;\n mod dragonfly_base;\n mod freebsd_base;\n+mod haiku_base;\n mod linux_base;\n mod linux_musl_base;\n mod openbsd_base;"}, {"sha": "171e88cee50c4fb6165cd9b2ccaff07a62e742b9", "filename": "src/librustc_back/target/x86_64_unknown_haiku.rs", "status": "modified", "additions": 10, "deletions": 13, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/7e91b8670776215d7a718004214dd2ec72b716ac/src%2Flibrustc_back%2Ftarget%2Fx86_64_unknown_haiku.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7e91b8670776215d7a718004214dd2ec72b716ac/src%2Flibrustc_back%2Ftarget%2Fx86_64_unknown_haiku.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_back%2Ftarget%2Fx86_64_unknown_haiku.rs?ref=7e91b8670776215d7a718004214dd2ec72b716ac", "patch": "@@ -8,12 +8,15 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-use target::Target;\n-use target::TargetOptions;\n-use std::default::Default;\n+use target::{Target, TargetResult};\n \n-pub fn target() -> Target {\n-    Target {\n+pub fn target() -> TargetResult {\n+    let mut base = super::haiku_base::opts();\n+    base.cpu = \"x86-64\".to_string();\n+    base.max_atomic_width = 64;\n+    base.pre_link_args.push(\"-m64\".to_string());\n+\n+    Ok(Target {\n         llvm_target: \"x86_64-unknown-haiku\".to_string(),\n         target_endian: \"little\".to_string(),\n         target_pointer_width: \"64\".to_string(),\n@@ -22,12 +25,6 @@ pub fn target() -> Target {\n         target_os: \"haiku\".to_string(),\n         target_env: \"\".to_string(),\n         target_vendor: \"unknown\".to_string(),\n-        options: TargetOptions {\n-            linker: \"cc\".to_string(),\n-            dynamic_linking: true,\n-            executables: true,\n-            has_rpath: true,\n-            .. Default::default()\n-        },\n-    }\n+        options: base,\n+    })\n }"}]}