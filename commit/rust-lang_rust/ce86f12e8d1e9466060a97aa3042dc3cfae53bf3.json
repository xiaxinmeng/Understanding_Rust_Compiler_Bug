{"sha": "ce86f12e8d1e9466060a97aa3042dc3cfae53bf3", "node_id": "C_kwDOAAsO6NoAKGNlODZmMTJlOGQxZTk0NjYwNjBhOTdhYTMwNDJkYzNjZmFlNTNiZjM", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2023-01-14T13:37:30Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2023-01-14T13:37:30Z"}, "message": "Auto merge of #13945 - bvanjoi:orpat-match, r=lnicola\n\nfix: check orpat in missing match\n\nfixed #13942", "tree": {"sha": "e5a4d99a6bd415a55c889540646498c67ba2b7ba", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e5a4d99a6bd415a55c889540646498c67ba2b7ba"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ce86f12e8d1e9466060a97aa3042dc3cfae53bf3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ce86f12e8d1e9466060a97aa3042dc3cfae53bf3", "html_url": "https://github.com/rust-lang/rust/commit/ce86f12e8d1e9466060a97aa3042dc3cfae53bf3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ce86f12e8d1e9466060a97aa3042dc3cfae53bf3/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8800ea646120745475b3dce10606fee8028b6a00", "url": "https://api.github.com/repos/rust-lang/rust/commits/8800ea646120745475b3dce10606fee8028b6a00", "html_url": "https://github.com/rust-lang/rust/commit/8800ea646120745475b3dce10606fee8028b6a00"}, {"sha": "e9724e55dfcbd6142a4a746e36bdd28f685072d6", "url": "https://api.github.com/repos/rust-lang/rust/commits/e9724e55dfcbd6142a4a746e36bdd28f685072d6", "html_url": "https://github.com/rust-lang/rust/commit/e9724e55dfcbd6142a4a746e36bdd28f685072d6"}], "stats": {"total": 61, "additions": 61, "deletions": 0}, "files": [{"sha": "0461cc790eb3030dca35c1a72648204c4e1c2311", "filename": "crates/ide-assists/src/handlers/add_missing_match_arms.rs", "status": "modified", "additions": 61, "deletions": 0, "changes": 61, "blob_url": "https://github.com/rust-lang/rust/blob/ce86f12e8d1e9466060a97aa3042dc3cfae53bf3/crates%2Fide-assists%2Fsrc%2Fhandlers%2Fadd_missing_match_arms.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ce86f12e8d1e9466060a97aa3042dc3cfae53bf3/crates%2Fide-assists%2Fsrc%2Fhandlers%2Fadd_missing_match_arms.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide-assists%2Fsrc%2Fhandlers%2Fadd_missing_match_arms.rs?ref=ce86f12e8d1e9466060a97aa3042dc3cfae53bf3", "patch": "@@ -269,6 +269,7 @@ fn does_pat_match_variant(pat: &Pat, var: &Pat) -> bool {\n         (Pat::TuplePat(tpat), Pat::TuplePat(tvar)) => {\n             tpat.fields().zip(tvar.fields()).all(|(p, v)| does_pat_match_variant(&p, &v))\n         }\n+        (Pat::OrPat(opat), _) => opat.pats().any(|p| does_pat_match_variant(&p, var)),\n         _ => utils::does_pat_match_variant(pat, var),\n     }\n }\n@@ -525,6 +526,19 @@ fn foo(a: bool) {\n             add_missing_match_arms,\n             r#\"\n fn foo(a: bool) {\n+    match (a, a)$0 {\n+        (true | false, true) => {}\n+        (true, false) => {}\n+        (false, false) => {}\n+    }\n+}\n+\"#,\n+        );\n+\n+        check_assist_not_applicable(\n+            add_missing_match_arms,\n+            r#\"\n+fn foo(a: bool) {\n     match (a, a)$0 {\n         (true, true) => {}\n         (true, false) => {}\n@@ -565,6 +579,26 @@ fn foo(a: bool) {\n             add_missing_match_arms,\n             r#\"\n fn foo(a: bool) {\n+    match (a, a)$0 {\n+        (true | false, true) => {}\n+    }\n+}\n+\"#,\n+            r#\"\n+fn foo(a: bool) {\n+    match (a, a) {\n+        (true | false, true) => {}\n+        $0(true, false) => todo!(),\n+        (false, false) => todo!(),\n+    }\n+}\n+\"#,\n+        );\n+\n+        check_assist(\n+            add_missing_match_arms,\n+            r#\"\n+fn foo(a: bool) {\n     match (a, a)$0 {\n         (false, true) => {}\n     }\n@@ -882,6 +916,33 @@ fn main() {\n }\n \"#,\n         );\n+\n+        check_assist(\n+            add_missing_match_arms,\n+            r#\"\n+enum E { A, B, C }\n+fn main() {\n+    use E::*;\n+    match (A, B, C)$0 {\n+        (A | B , A, A | B | C) => (),\n+        (A | B | C , B | C, A | B | C) => (),\n+    }\n+}\n+\"#,\n+            r#\"\n+enum E { A, B, C }\n+fn main() {\n+    use E::*;\n+    match (A, B, C) {\n+        (A | B , A, A | B | C) => (),\n+        (A | B | C , B | C, A | B | C) => (),\n+        $0(C, A, A) => todo!(),\n+        (C, A, B) => todo!(),\n+        (C, A, C) => todo!(),\n+    }\n+}\n+\"#,\n+        )\n     }\n \n     #[test]"}]}