{"sha": "47786d364206d089d41602572b6b83c2a0b3f240", "node_id": "C_kwDOAAsO6NoAKDQ3Nzg2ZDM2NDIwNmQwODlkNDE2MDI1NzJiNmI4M2MyYTBiM2YyNDA", "commit": {"author": {"name": "Guillaume Gomez", "email": "guillaume.gomez@huawei.com", "date": "2021-10-27T09:11:15Z"}, "committer": {"name": "Guillaume Gomez", "email": "guillaume.gomez@huawei.com", "date": "2021-10-28T08:43:34Z"}, "message": "Add missing documentation for doc alias", "tree": {"sha": "1cc5ea7da4bf05ac76049e79faaf98ec61908f7b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1cc5ea7da4bf05ac76049e79faaf98ec61908f7b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/47786d364206d089d41602572b6b83c2a0b3f240", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/47786d364206d089d41602572b6b83c2a0b3f240", "html_url": "https://github.com/rust-lang/rust/commit/47786d364206d089d41602572b6b83c2a0b3f240", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/47786d364206d089d41602572b6b83c2a0b3f240/comments", "author": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "committer": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c7a30c8b6860d1f3459086f7a91074db1b54bc37", "url": "https://api.github.com/repos/rust-lang/rust/commits/c7a30c8b6860d1f3459086f7a91074db1b54bc37", "html_url": "https://github.com/rust-lang/rust/commit/c7a30c8b6860d1f3459086f7a91074db1b54bc37"}], "stats": {"total": 51, "additions": 49, "deletions": 2}, "files": [{"sha": "5ee06c5f9171100d736229d77e571bf28d6444e0", "filename": "src/doc/rustdoc/src/the-doc-attribute.md", "status": "modified", "additions": 49, "deletions": 2, "changes": 51, "blob_url": "https://github.com/rust-lang/rust/blob/47786d364206d089d41602572b6b83c2a0b3f240/src%2Fdoc%2Frustdoc%2Fsrc%2Fthe-doc-attribute.md", "raw_url": "https://github.com/rust-lang/rust/raw/47786d364206d089d41602572b6b83c2a0b3f240/src%2Fdoc%2Frustdoc%2Fsrc%2Fthe-doc-attribute.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Frustdoc%2Fsrc%2Fthe-doc-attribute.md?ref=47786d364206d089d41602572b6b83c2a0b3f240", "patch": "@@ -153,7 +153,7 @@ example, if you want your doctests to fail if they produce any warnings, you cou\n These forms of the `#[doc]` attribute are used on individual items, to control how\n they are documented.\n \n-## `#[doc(no_inline)]`/`#[doc(inline)]`\n+### `#[doc(no_inline)]`/`#[doc(inline)]`\n \n These attributes are used on `use` statements, and control where the documentation shows\n up. For example, consider this Rust code:\n@@ -219,7 +219,54 @@ Now we'll have a `Re-exports` line, and `Bar` will not link to anywhere.\n One special case: In Rust 2018 and later, if you `pub use` one of your dependencies, `rustdoc` will\n not eagerly inline it as a module unless you add `#[doc(inline)]`.\n \n-## `#[doc(hidden)]`\n+### `#[doc(hidden)]`\n \n Any item annotated with `#[doc(hidden)]` will not appear in the documentation, unless\n the `strip-hidden` pass is removed.\n+\n+### `alias`\n+\n+This attribute adds an alias in the search index.\n+\n+Let's take an example:\n+\n+```rust,no_run\n+#[doc(alias = \"TheAlias\")]\n+pub struct SomeType;\n+```\n+\n+So now, if you enter \"TheAlias\" in the search, it'll display `SomeType`.\n+Of course, if you enter `SomeType` it'll return `SomeType` as expected!\n+\n+#### FFI example\n+\n+This doc attribute is especially useful when writing bindings for a C library.\n+For example, let's say we have a C function that looks like this:\n+\n+```c\n+int lib_name_do_something(Obj *obj);\n+```\n+\n+It takes a pointer to an `Obj` type and returns an integer. In Rust, it might\n+be written like this:\n+\n+```ignore (using non-existing ffi types)\n+pub struct Obj {\n+    inner: *mut ffi::Obj,\n+}\n+\n+impl Obj {\n+    pub fn do_something(&mut self) -> i32 {\n+        unsafe { ffi::lib_name_do_something(self.inner) }\n+    }\n+}\n+```\n+\n+The function has been turned into a method to make it more convenient to use.\n+However, if you want to look for the Rust equivalent of `lib_name_do_something`,\n+you have no way to do so.\n+\n+To get around this limitation, we just add `#[doc(alias = \"lib_name_do_something\")]`\n+on the `do_something` method and then it's all good!\n+Users can now look for `lib_name_do_something` in our crate directly and find\n+`Obj::do_something`."}]}