{"sha": "4a04d086cac54a41517d5657b59d5fe2caca2d71", "node_id": "C_kwDOAAsO6NoAKDRhMDRkMDg2Y2FjNTRhNDE1MTdkNTY1N2I1OWQ1ZmUyY2FjYTJkNzE", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2023-03-18T18:14:35Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2023-03-18T18:14:35Z"}, "message": "Auto merge of #107224 - nikic:llvm-16, r=cuviper\n\nUpgrade to LLVM 16\n\nThis updates Rust to LLVM 16. It also updates our host compiler for dist-x86_64-linux to LLVM 16. The reason for that is that Bolt from LLVM 15 is not capable of compiling LLVM 16 (https://github.com/llvm/llvm-project/issues/61114).\n\nLLVM 16.0.0 has been [released](https://discourse.llvm.org/t/llvm-16-0-0-release/69326) on March 18, while Rust 1.70 will become stable on June 1.\n\nTested images: `dist-x86_64-linux`, `dist-riscv64-linux` (alt), `dist-x86_64-illumos`, `dist-various-1`, `dist-various-2`, `dist-powerpc-linux`, `wasm32`, `armhf-gnu`\nTested images until the usual IPv6 failures: `test-various`", "tree": {"sha": "0dbdb16064771eef2d1d3bc437db3f287c350a06", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0dbdb16064771eef2d1d3bc437db3f287c350a06"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4a04d086cac54a41517d5657b59d5fe2caca2d71", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4a04d086cac54a41517d5657b59d5fe2caca2d71", "html_url": "https://github.com/rust-lang/rust/commit/4a04d086cac54a41517d5657b59d5fe2caca2d71", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4a04d086cac54a41517d5657b59d5fe2caca2d71/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2d0a7def330ed90f416a3429dbb44c5ee2a914e5", "url": "https://api.github.com/repos/rust-lang/rust/commits/2d0a7def330ed90f416a3429dbb44c5ee2a914e5", "html_url": "https://github.com/rust-lang/rust/commit/2d0a7def330ed90f416a3429dbb44c5ee2a914e5"}, {"sha": "b238a76f652390a486e5480b791abe0cd427add5", "url": "https://api.github.com/repos/rust-lang/rust/commits/b238a76f652390a486e5480b791abe0cd427add5", "html_url": "https://github.com/rust-lang/rust/commit/b238a76f652390a486e5480b791abe0cd427add5"}], "stats": {"total": 19, "additions": 10, "deletions": 9}, "files": [{"sha": "0bbccb57130225dda1105ac59dcb250094dc97a3", "filename": ".gitmodules", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4a04d086cac54a41517d5657b59d5fe2caca2d71/.gitmodules", "raw_url": "https://github.com/rust-lang/rust/raw/4a04d086cac54a41517d5657b59d5fe2caca2d71/.gitmodules", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/.gitmodules?ref=4a04d086cac54a41517d5657b59d5fe2caca2d71", "patch": "@@ -25,7 +25,7 @@\n [submodule \"src/llvm-project\"]\n \tpath = src/llvm-project\n \turl = https://github.com/rust-lang/llvm-project.git\n-\tbranch = rustc/15.0-2022-12-07\n+\tbranch = rustc/16.0-2023-03-06\n [submodule \"src/doc/embedded-book\"]\n \tpath = src/doc/embedded-book\n \turl = https://github.com/rust-embedded/book.git"}, {"sha": "0fee094c2223127d9c0d462d2e2efba5c16a0067", "filename": "src/bootstrap/config.rs", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/4a04d086cac54a41517d5657b59d5fe2caca2d71/src%2Fbootstrap%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4a04d086cac54a41517d5657b59d5fe2caca2d71/src%2Fbootstrap%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fconfig.rs?ref=4a04d086cac54a41517d5657b59d5fe2caca2d71", "patch": "@@ -1153,6 +1153,11 @@ impl Config {\n             config.rust_profile_generate = flags.rust_profile_generate;\n         }\n \n+        // rust_info must be set before is_ci_llvm_available() is called.\n+        let default = config.channel == \"dev\";\n+        config.ignore_git = ignore_git.unwrap_or(default);\n+        config.rust_info = GitInfo::new(config.ignore_git, &config.src);\n+\n         if let Some(llvm) = toml.llvm {\n             match llvm.ccache {\n                 Some(StringOrBool::String(ref s)) => config.ccache = Some(s.to_string()),\n@@ -1346,10 +1351,6 @@ impl Config {\n         config.rust_debuginfo_level_tools = with_defaults(debuginfo_level_tools);\n         config.rust_debuginfo_level_tests = debuginfo_level_tests.unwrap_or(0);\n \n-        let default = config.channel == \"dev\";\n-        config.ignore_git = ignore_git.unwrap_or(default);\n-        config.rust_info = GitInfo::new(config.ignore_git, &config.src);\n-\n         let download_rustc = config.download_rustc_commit.is_some();\n         // See https://github.com/rust-lang/compiler-team/issues/326\n         config.stage = match config.cmd {"}, {"sha": "4bb5eab6ac3faea4ab4e53c432a1643c3acec87e", "filename": "src/llvm-project", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": null, "raw_url": null, "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fllvm-project?ref=4a04d086cac54a41517d5657b59d5fe2caca2d71", "patch": "@@ -1 +1 @@\n-Subproject commit fd949f3034f8a422ecfffa889c2823485dde4bdd\n+Subproject commit 4bb5eab6ac3faea4ab4e53c432a1643c3acec87e"}, {"sha": "7b8ab2c79a7fe7034faf890c67e05e8cc55ebfc1", "filename": "tests/codegen/array-map.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/4a04d086cac54a41517d5657b59d5fe2caca2d71/tests%2Fcodegen%2Farray-map.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4a04d086cac54a41517d5657b59d5fe2caca2d71/tests%2Fcodegen%2Farray-map.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcodegen%2Farray-map.rs?ref=4a04d086cac54a41517d5657b59d5fe2caca2d71", "patch": "@@ -38,10 +38,10 @@ pub fn short_integer_zip_map(x: [u32; 8], y: [u32; 8]) -> [u32; 8] {\n //\n // CHECK-LABEL: @long_integer_map\n #[no_mangle]\n-pub fn long_integer_map(x: [u32; 64]) -> [u32; 64] {\n+pub fn long_integer_map(x: [u32; 512]) -> [u32; 512] {\n     // CHECK: start:\n-    // CHECK-NEXT: alloca [64 x i32]\n-    // CHECK-NEXT: alloca %\"core::mem::manually_drop::ManuallyDrop<[u32; 64]>\"\n+    // CHECK-NEXT: alloca [512 x i32]\n+    // CHECK-NEXT: alloca %\"core::mem::manually_drop::ManuallyDrop<[u32; 512]>\"\n     // CHECK-NOT: alloca\n     // CHECK: mul <{{[0-9]+}} x i32>\n     // CHECK: add <{{[0-9]+}} x i32>"}]}