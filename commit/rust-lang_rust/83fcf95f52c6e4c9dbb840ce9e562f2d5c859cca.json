{"sha": "83fcf95f52c6e4c9dbb840ce9e562f2d5c859cca", "node_id": "MDY6Q29tbWl0NzI0NzEyOjgzZmNmOTVmNTJjNmU0YzlkYmI4NDBjZTllNTYyZjJkNWM4NTljY2E=", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2021-01-22T23:25:29Z"}, "committer": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2021-01-23T01:18:11Z"}, "message": "rename cargo dev crater to cargo dev lintcheck", "tree": {"sha": "72443eedc87eb9ef5b45c72d881f87e11e7b862b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/72443eedc87eb9ef5b45c72d881f87e11e7b862b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/83fcf95f52c6e4c9dbb840ce9e562f2d5c859cca", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/83fcf95f52c6e4c9dbb840ce9e562f2d5c859cca", "html_url": "https://github.com/rust-lang/rust/commit/83fcf95f52c6e4c9dbb840ce9e562f2d5c859cca", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/83fcf95f52c6e4c9dbb840ce9e562f2d5c859cca/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "48fc948ca3548d5bdcc479b5f9c317767d941e3b", "url": "https://api.github.com/repos/rust-lang/rust/commits/48fc948ca3548d5bdcc479b5f9c317767d941e3b", "html_url": "https://github.com/rust-lang/rust/commit/48fc948ca3548d5bdcc479b5f9c317767d941e3b"}], "stats": {"total": 44, "additions": 22, "deletions": 22}, "files": [{"sha": "1142cc470fe82510b652d3767027e5cc322c70d6", "filename": ".cargo/config", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/83fcf95f52c6e4c9dbb840ce9e562f2d5c859cca/.cargo%2Fconfig", "raw_url": "https://github.com/rust-lang/rust/raw/83fcf95f52c6e4c9dbb840ce9e562f2d5c859cca/.cargo%2Fconfig", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/.cargo%2Fconfig?ref=83fcf95f52c6e4c9dbb840ce9e562f2d5c859cca", "patch": "@@ -1,7 +1,7 @@\n [alias]\n uitest = \"test --test compile-test\"\n dev = \"run --target-dir clippy_dev/target --package clippy_dev --bin clippy_dev --manifest-path clippy_dev/Cargo.toml --\"\n-dev-crater = \"run --target-dir clippy_dev/target --package clippy_dev --bin clippy_dev --manifest-path clippy_dev/Cargo.toml --features crater -- crater\"\n+dev-lintcheck = \"run --target-dir clippy_dev/target --package clippy_dev --bin clippy_dev --manifest-path clippy_dev/Cargo.toml --features lintcheck -- lintcheck\"\n \n [build]\n rustflags = [\"-Zunstable-options\"]"}, {"sha": "f48c1ee5ea26567cec7c165ff15beaf6eda26f45", "filename": "clippy_dev/Cargo.toml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/83fcf95f52c6e4c9dbb840ce9e562f2d5c859cca/clippy_dev%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/83fcf95f52c6e4c9dbb840ce9e562f2d5c859cca/clippy_dev%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_dev%2FCargo.toml?ref=83fcf95f52c6e4c9dbb840ce9e562f2d5c859cca", "patch": "@@ -21,5 +21,5 @@ ureq = { version = \"2.0.0-rc3\", optional = true }\n walkdir = \"2\"\n \n [features]\n-crater = [\"flate2\", \"serde_json\", \"tar\", \"toml\", \"ureq\", \"serde\"]\n+lintcheck = [\"flate2\", \"serde_json\", \"tar\", \"toml\", \"ureq\", \"serde\"]\n deny-warnings = []"}, {"sha": "1fbf7930d3ecf4a9da72573335cdace66a1bf697", "filename": "clippy_dev/lintcheck_crates.toml", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/83fcf95f52c6e4c9dbb840ce9e562f2d5c859cca/clippy_dev%2Flintcheck_crates.toml", "raw_url": "https://github.com/rust-lang/rust/raw/83fcf95f52c6e4c9dbb840ce9e562f2d5c859cca/clippy_dev%2Flintcheck_crates.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_dev%2Flintcheck_crates.toml?ref=83fcf95f52c6e4c9dbb840ce9e562f2d5c859cca", "previous_filename": "clippy_dev/crater_crates.toml"}, {"sha": "24d70d433f367e0072def9923508bb5a2b125c60", "filename": "clippy_dev/src/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/83fcf95f52c6e4c9dbb840ce9e562f2d5c859cca/clippy_dev%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/83fcf95f52c6e4c9dbb840ce9e562f2d5c859cca/clippy_dev%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_dev%2Fsrc%2Flib.rs?ref=83fcf95f52c6e4c9dbb840ce9e562f2d5c859cca", "patch": "@@ -11,8 +11,8 @@ use std::path::{Path, PathBuf};\n use walkdir::WalkDir;\n \n pub mod bless;\n-pub mod crater;\n pub mod fmt;\n+pub mod lintcheck;\n pub mod new_lint;\n pub mod ra_setup;\n pub mod serve;"}, {"sha": "e2099ff98c836ccd0093b83fac2e9fa68ee571c3", "filename": "clippy_dev/src/lintcheck.rs", "status": "renamed", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/83fcf95f52c6e4c9dbb840ce9e562f2d5c859cca/clippy_dev%2Fsrc%2Flintcheck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/83fcf95f52c6e4c9dbb840ce9e562f2d5c859cca/clippy_dev%2Fsrc%2Flintcheck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_dev%2Fsrc%2Flintcheck.rs?ref=83fcf95f52c6e4c9dbb840ce9e562f2d5c859cca", "patch": "@@ -4,7 +4,7 @@\n // When a new lint is introduced, we can search the results for new warnings and check for false\n // positives.\n \n-#![cfg(feature = \"crater\")]\n+#![cfg(feature = \"lintcheck\")]\n #![allow(clippy::filter_map)]\n \n use crate::clippy_project_root;\n@@ -69,16 +69,16 @@ impl std::fmt::Display for ClippyWarning {\n \n impl CrateSource {\n     fn download_and_extract(&self) -> Crate {\n-        let extract_dir = PathBuf::from(\"target/crater/crates\");\n-        let krate_download_dir = PathBuf::from(\"target/crater/downloads\");\n+        let extract_dir = PathBuf::from(\"target/lintcheck/crates\");\n+        let krate_download_dir = PathBuf::from(\"target/lintcheck/downloads\");\n \n         // url to download the crate from crates.io\n         let url = format!(\n             \"https://crates.io/api/v1/crates/{}/{}/download\",\n             self.name, self.version\n         );\n         println!(\"Downloading and extracting {} {} from {}\", self.name, self.version, url);\n-        let _ = std::fs::create_dir(\"target/crater/\");\n+        let _ = std::fs::create_dir(\"target/lintcheck/\");\n         let _ = std::fs::create_dir(&krate_download_dir);\n         let _ = std::fs::create_dir(&extract_dir);\n \n@@ -112,7 +112,7 @@ impl Crate {\n         println!(\"Linting {} {}...\", &self.name, &self.version);\n         let cargo_clippy_path = std::fs::canonicalize(cargo_clippy_path).unwrap();\n \n-        let shared_target_dir = clippy_project_root().join(\"target/crater/shared_target_dir/\");\n+        let shared_target_dir = clippy_project_root().join(\"target/lintcheck/shared_target_dir/\");\n \n         let all_output = std::process::Command::new(cargo_clippy_path)\n             .env(\"CARGO_TARGET_DIR\", shared_target_dir)\n@@ -149,9 +149,9 @@ fn build_clippy() {\n         .expect(\"Failed to build clippy!\");\n }\n \n-// get a list of CrateSources we want to check from a \"crater_crates.toml\" file.\n+// get a list of CrateSources we want to check from a \"lintcheck_crates.toml\" file.\n fn read_crates() -> Vec<CrateSource> {\n-    let toml_path = PathBuf::from(\"clippy_dev/crater_crates.toml\");\n+    let toml_path = PathBuf::from(\"clippy_dev/lintcheck_crates.toml\");\n     let toml_content: String =\n         std::fs::read_to_string(&toml_path).unwrap_or_else(|_| panic!(\"Failed to read {}\", toml_path.display()));\n     let crate_list: CrateList =\n@@ -231,7 +231,7 @@ pub fn run(clap_config: &ArgMatches) {\n         // if we don't have the specified crated in the .toml, throw an error\n         if !crates.iter().any(|krate| krate.name == only_one_crate) {\n             eprintln!(\n-                \"ERROR: could not find crate '{}' in clippy_dev/crater_crates.toml\",\n+                \"ERROR: could not find crate '{}' in clippy_dev/lintcheck_crates.toml\",\n                 only_one_crate\n             );\n             std::process::exit(1);\n@@ -279,8 +279,8 @@ pub fn run(clap_config: &ArgMatches) {\n     all_msgs.push(\"\\n\\n\\n\\nStats\\n\\n\".into());\n     all_msgs.push(stats_formatted);\n \n-    // save the text into mini-crater/logs.txt\n+    // save the text into lintcheck-logs/logs.txt\n     let mut text = clippy_ver; // clippy version number on top\n     text.push_str(&format!(\"\\n{}\", all_msgs.join(\"\")));\n-    write(\"mini-crater/logs.txt\", text).unwrap();\n+    write(\"lintcheck-logs/logs.txt\", text).unwrap();\n }", "previous_filename": "clippy_dev/src/crater.rs"}, {"sha": "e7a298a37e17a37f226c2b27fe84911bf3e92af7", "filename": "clippy_dev/src/main.rs", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/83fcf95f52c6e4c9dbb840ce9e562f2d5c859cca/clippy_dev%2Fsrc%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/83fcf95f52c6e4c9dbb840ce9e562f2d5c859cca/clippy_dev%2Fsrc%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_dev%2Fsrc%2Fmain.rs?ref=83fcf95f52c6e4c9dbb840ce9e562f2d5c859cca", "patch": "@@ -3,8 +3,8 @@\n use clap::{App, Arg, ArgMatches, SubCommand};\n use clippy_dev::{bless, fmt, new_lint, ra_setup, serve, stderr_length_check, update_lints};\n \n-#[cfg(feature = \"crater\")]\n-use clippy_dev::crater;\n+#[cfg(feature = \"lintcheck\")]\n+use clippy_dev::lintcheck;\n \n fn main() {\n     let matches = get_clap_config();\n@@ -13,9 +13,9 @@ fn main() {\n         (\"bless\", Some(matches)) => {\n             bless::bless(matches.is_present(\"ignore-timestamp\"));\n         },\n-        #[cfg(feature = \"crater\")]\n-        (\"crater\", Some(matches)) => {\n-            crater::run(&matches);\n+        #[cfg(feature = \"lintcheck\")]\n+        (\"lintcheck\", Some(matches)) => {\n+            lintcheck::run(&matches);\n         },\n         (\"fmt\", Some(matches)) => {\n             fmt::run(matches.is_present(\"check\"), matches.is_present(\"verbose\"));\n@@ -53,8 +53,8 @@ fn main() {\n }\n \n fn get_clap_config<'a>() -> ArgMatches<'a> {\n-    #[cfg(feature = \"crater\")]\n-    let crater_sbcmd = SubCommand::with_name(\"crater\")\n+    #[cfg(feature = \"lintcheck\")]\n+    let lintcheck_sbcmd = SubCommand::with_name(\"lintcheck\")\n         .about(\"run clippy on a set of crates and check output\")\n         .arg(\n             Arg::with_name(\"only\")\n@@ -183,8 +183,8 @@ fn get_clap_config<'a>() -> ArgMatches<'a> {\n                 .arg(Arg::with_name(\"lint\").help(\"Which lint's page to load initially (optional)\")),\n         );\n \n-    #[cfg(feature = \"crater\")]\n-    let app = app.subcommand(crater_sbcmd);\n+    #[cfg(feature = \"lintcheck\")]\n+    let app = app.subcommand(lintcheck_sbcmd);\n \n     app.get_matches()\n }"}, {"sha": "f9084dc8321b997f69abd87272efbf0cf7a848b8", "filename": "lintcheck-logs/logs.txt", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/83fcf95f52c6e4c9dbb840ce9e562f2d5c859cca/lintcheck-logs%2Flogs.txt", "raw_url": "https://github.com/rust-lang/rust/raw/83fcf95f52c6e4c9dbb840ce9e562f2d5c859cca/lintcheck-logs%2Flogs.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/lintcheck-logs%2Flogs.txt?ref=83fcf95f52c6e4c9dbb840ce9e562f2d5c859cca", "previous_filename": "mini-crater/logs.txt"}]}