{"sha": "d4a60ab34f4f612365e353fafdfb4e28f1484e47", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ0YTYwYWIzNGY0ZjYxMjM2NWUzNTNmYWZkZmI0ZTI4ZjE0ODRlNDc=", "commit": {"author": {"name": "Josh Stone", "email": "jistone@redhat.com", "date": "2021-07-28T23:35:59Z"}, "committer": {"name": "Josh Stone", "email": "jistone@redhat.com", "date": "2021-07-28T23:35:59Z"}, "message": "Update the examples in `String` and `VecDeque::retain`\n\nThe examples added in #60396 used a \"clever\" post-increment hack,\nunrelated to the actual point of the examples. That hack was found\n[confusing] in the users forum, and #81811 already changed the `Vec`\nexample to use a more direct iterator. This commit changes `String` and\n`VecDeque` in the same way for consistency.\n\n[confusing]: https://users.rust-lang.org/t/help-understand-strange-expression/62858", "tree": {"sha": "907bb2e0a5b1b25818eb7745f8bd3fbaf998e3da", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/907bb2e0a5b1b25818eb7745f8bd3fbaf998e3da"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d4a60ab34f4f612365e353fafdfb4e28f1484e47", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d4a60ab34f4f612365e353fafdfb4e28f1484e47", "html_url": "https://github.com/rust-lang/rust/commit/d4a60ab34f4f612365e353fafdfb4e28f1484e47", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d4a60ab34f4f612365e353fafdfb4e28f1484e47/comments", "author": {"login": "cuviper", "id": 36186, "node_id": "MDQ6VXNlcjM2MTg2", "avatar_url": "https://avatars.githubusercontent.com/u/36186?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cuviper", "html_url": "https://github.com/cuviper", "followers_url": "https://api.github.com/users/cuviper/followers", "following_url": "https://api.github.com/users/cuviper/following{/other_user}", "gists_url": "https://api.github.com/users/cuviper/gists{/gist_id}", "starred_url": "https://api.github.com/users/cuviper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cuviper/subscriptions", "organizations_url": "https://api.github.com/users/cuviper/orgs", "repos_url": "https://api.github.com/users/cuviper/repos", "events_url": "https://api.github.com/users/cuviper/events{/privacy}", "received_events_url": "https://api.github.com/users/cuviper/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cuviper", "id": 36186, "node_id": "MDQ6VXNlcjM2MTg2", "avatar_url": "https://avatars.githubusercontent.com/u/36186?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cuviper", "html_url": "https://github.com/cuviper", "followers_url": "https://api.github.com/users/cuviper/followers", "following_url": "https://api.github.com/users/cuviper/following{/other_user}", "gists_url": "https://api.github.com/users/cuviper/gists{/gist_id}", "starred_url": "https://api.github.com/users/cuviper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cuviper/subscriptions", "organizations_url": "https://api.github.com/users/cuviper/orgs", "repos_url": "https://api.github.com/users/cuviper/repos", "events_url": "https://api.github.com/users/cuviper/events{/privacy}", "received_events_url": "https://api.github.com/users/cuviper/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b70888601af92f6cdc0364abab3446e418b91d36", "url": "https://api.github.com/repos/rust-lang/rust/commits/b70888601af92f6cdc0364abab3446e418b91d36", "html_url": "https://github.com/rust-lang/rust/commit/b70888601af92f6cdc0364abab3446e418b91d36"}], "stats": {"total": 14, "additions": 8, "deletions": 6}, "files": [{"sha": "3cf6c56f43a579b089d2e8282c5256fe3498fdbc", "filename": "library/alloc/src/collections/vec_deque/mod.rs", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/d4a60ab34f4f612365e353fafdfb4e28f1484e47/library%2Falloc%2Fsrc%2Fcollections%2Fvec_deque%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d4a60ab34f4f612365e353fafdfb4e28f1484e47/library%2Falloc%2Fsrc%2Fcollections%2Fvec_deque%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Fsrc%2Fcollections%2Fvec_deque%2Fmod.rs?ref=d4a60ab34f4f612365e353fafdfb4e28f1484e47", "patch": "@@ -2107,7 +2107,8 @@ impl<T, A: Allocator> VecDeque<T, A> {\n     /// assert_eq!(buf, [2, 4]);\n     /// ```\n     ///\n-    /// The exact order may be useful for tracking external state, like an index.\n+    /// Because the elements are visited exactly once in the original order,\n+    /// external state may be used to decide which elements to keep.\n     ///\n     /// ```\n     /// use std::collections::VecDeque;\n@@ -2116,8 +2117,8 @@ impl<T, A: Allocator> VecDeque<T, A> {\n     /// buf.extend(1..6);\n     ///\n     /// let keep = [false, true, true, false, true];\n-    /// let mut i = 0;\n-    /// buf.retain(|_| (keep[i], i += 1).0);\n+    /// let mut iter = keep.iter();\n+    /// buf.retain(|_| *iter.next().unwrap());\n     /// assert_eq!(buf, [2, 3, 5]);\n     /// ```\n     #[stable(feature = \"vec_deque_retain\", since = \"1.4.0\")]"}, {"sha": "6a02de7f9a24fad0e29f7c105dd768bc512a37d5", "filename": "library/alloc/src/string.rs", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/d4a60ab34f4f612365e353fafdfb4e28f1484e47/library%2Falloc%2Fsrc%2Fstring.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d4a60ab34f4f612365e353fafdfb4e28f1484e47/library%2Falloc%2Fsrc%2Fstring.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Fsrc%2Fstring.rs?ref=d4a60ab34f4f612365e353fafdfb4e28f1484e47", "patch": "@@ -1350,13 +1350,14 @@ impl String {\n     /// assert_eq!(s, \"foobar\");\n     /// ```\n     ///\n-    /// The exact order may be useful for tracking external state, like an index.\n+    /// Because the elements are visited exactly once in the original order,\n+    /// external state may be used to decide which elements to keep.\n     ///\n     /// ```\n     /// let mut s = String::from(\"abcde\");\n     /// let keep = [false, true, true, false, true];\n-    /// let mut i = 0;\n-    /// s.retain(|_| (keep[i], i += 1).0);\n+    /// let mut iter = keep.iter();\n+    /// s.retain(|_| *iter.next().unwrap());\n     /// assert_eq!(s, \"bce\");\n     /// ```\n     #[inline]"}]}