{"sha": "b491b72673e0b6ae43ce7e14195082537749cc24", "node_id": "C_kwDOAAsO6NoAKGI0OTFiNzI2NzNlMGI2YWU0M2NlN2UxNDE5NTA4MjUzNzc0OWNjMjQ", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2022-03-06T00:02:00Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2022-03-06T00:02:00Z"}, "message": "implement simd_reduce_{add,mul}", "tree": {"sha": "a4d8acb5134b221889bd1609f5a57060b084febe", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a4d8acb5134b221889bd1609f5a57060b084febe"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b491b72673e0b6ae43ce7e14195082537749cc24", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b491b72673e0b6ae43ce7e14195082537749cc24", "html_url": "https://github.com/rust-lang/rust/commit/b491b72673e0b6ae43ce7e14195082537749cc24", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b491b72673e0b6ae43ce7e14195082537749cc24/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3ed8ad4423684a006e8db194c91f585798b500ab", "url": "https://api.github.com/repos/rust-lang/rust/commits/3ed8ad4423684a006e8db194c91f585798b500ab", "html_url": "https://github.com/rust-lang/rust/commit/3ed8ad4423684a006e8db194c91f585798b500ab"}], "stats": {"total": 33, "additions": 29, "deletions": 4}, "files": [{"sha": "670e3cb1b8acb7ab616801148570ca3009bd1f0b", "filename": "src/shims/intrinsics.rs", "status": "modified", "additions": 25, "deletions": 4, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/b491b72673e0b6ae43ce7e14195082537749cc24/src%2Fshims%2Fintrinsics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b491b72673e0b6ae43ce7e14195082537749cc24/src%2Fshims%2Fintrinsics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fshims%2Fintrinsics.rs?ref=b491b72673e0b6ae43ce7e14195082537749cc24", "patch": "@@ -382,7 +382,7 @@ pub trait EvalContextExt<'mir, 'tcx: 'mir>: crate::MiriEvalContextExt<'mir, 'tcx\n                 assert_eq!(dest_len, left_len);\n                 assert_eq!(dest_len, right_len);\n \n-                let op = match intrinsic_name {\n+                let mir_op = match intrinsic_name {\n                     \"simd_add\" => BinOp::Add,\n                     \"simd_sub\" => BinOp::Sub,\n                     \"simd_mul\" => BinOp::Mul,\n@@ -406,16 +406,16 @@ pub trait EvalContextExt<'mir, 'tcx: 'mir>: crate::MiriEvalContextExt<'mir, 'tcx\n                     let left = this.read_immediate(&this.mplace_index(&left, i)?.into())?;\n                     let right = this.read_immediate(&this.mplace_index(&right, i)?.into())?;\n                     let dest = this.mplace_index(&dest, i)?;\n-                    let (val, overflowed, ty) = this.overflowing_binary_op(op, &left, &right)?;\n-                    if matches!(op, BinOp::Shl | BinOp::Shr) {\n+                    let (val, overflowed, ty) = this.overflowing_binary_op(mir_op, &left, &right)?;\n+                    if matches!(mir_op, BinOp::Shl | BinOp::Shr) {\n                         // Shifts have extra UB as SIMD operations that the MIR binop does not have.\n                         // See <https://github.com/rust-lang/rust/issues/91237>.\n                         if overflowed {\n                             let r_val = right.to_scalar()?.to_bits(right.layout.size)?;\n                             throw_ub_format!(\"overflowing shift by {} in `{}` in SIMD lane {}\", r_val, intrinsic_name, i);\n                         }\n                     }\n-                    if matches!(op, BinOp::Eq | BinOp::Ne | BinOp::Lt | BinOp::Le | BinOp::Gt | BinOp::Ge) {\n+                    if matches!(mir_op, BinOp::Eq | BinOp::Ne | BinOp::Lt | BinOp::Le | BinOp::Gt | BinOp::Ge) {\n                         // Special handling for boolean-returning operations\n                         assert_eq!(ty, this.tcx.types.bool);\n                         let val = val.to_bool().unwrap();\n@@ -469,7 +469,28 @@ pub trait EvalContextExt<'mir, 'tcx: 'mir>: crate::MiriEvalContextExt<'mir, 'tcx\n                         }\n                     };\n                 }\n+                this.write_immediate(*res, dest)?;\n+            }\n+            #[rustfmt::skip]\n+            | \"simd_reduce_add_ordered\"\n+            | \"simd_reduce_mul_ordered\" => {\n+                use mir::BinOp;\n+\n+                let &[ref op, ref init] = check_arg_count(args)?;\n+                let (op, op_len) = this.operand_to_simd(op)?;\n+                let init = this.read_immediate(init)?;\n \n+                let mir_op = match intrinsic_name {\n+                    \"simd_reduce_add_ordered\" => BinOp::Add,\n+                    \"simd_reduce_mul_ordered\" => BinOp::Mul,\n+                    _ => unreachable!(),\n+                };\n+\n+                let mut res = init;\n+                for i in 0..op_len {\n+                    let op = this.read_immediate(&this.mplace_index(&op, i)?.into())?;\n+                    res = this.binary_op(mir_op, &res, &op)?;\n+                }\n                 this.write_immediate(*res, dest)?;\n             }\n             \"simd_select\" => {"}, {"sha": "9d1ca12a9f10e041abcd87b44f5dd4bf471cd032", "filename": "tests/run-pass/portable-simd.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/b491b72673e0b6ae43ce7e14195082537749cc24/tests%2Frun-pass%2Fportable-simd.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b491b72673e0b6ae43ce7e14195082537749cc24/tests%2Frun-pass%2Fportable-simd.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Fportable-simd.rs?ref=b491b72673e0b6ae43ce7e14195082537749cc24", "patch": "@@ -75,6 +75,10 @@ fn simd_ops_i32() {\n     assert_eq!(b.horizontal_or(), -1);\n     assert_eq!(a.horizontal_xor(), 0);\n     assert_eq!(b.horizontal_xor(), -4);\n+    assert_eq!(a.horizontal_sum(), 40);\n+    assert_eq!(b.horizontal_sum(), 2);\n+    assert_eq!(a.horizontal_product(), 100*100);\n+    assert_eq!(b.horizontal_product(), 6*-4);\n }\n \n fn simd_intrinsics() {"}]}