{"sha": "025e1b581adb0101f0d815479e30d5d745ee972f", "node_id": "C_kwDOAAsO6NoAKDAyNWUxYjU4MWFkYjAxMDFmMGQ4MTU0NzllMzBkNWQ3NDVlZTk3MmY", "commit": {"author": {"name": "Mark Rousskov", "email": "mark.simulacrum@gmail.com", "date": "2022-02-09T22:44:09Z"}, "committer": {"name": "Mark Rousskov", "email": "mark.simulacrum@gmail.com", "date": "2022-02-20T23:58:23Z"}, "message": "Delete Decoder::read_map_elt_key", "tree": {"sha": "fc8ff9a0fb23ca64b0e4153a4c10e845c40a0a83", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fc8ff9a0fb23ca64b0e4153a4c10e845c40a0a83"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/025e1b581adb0101f0d815479e30d5d745ee972f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/025e1b581adb0101f0d815479e30d5d745ee972f", "html_url": "https://github.com/rust-lang/rust/commit/025e1b581adb0101f0d815479e30d5d745ee972f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/025e1b581adb0101f0d815479e30d5d745ee972f/comments", "author": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "38e6dad1d3ad540e76ee400daa76cbeeb02925df", "url": "https://api.github.com/repos/rust-lang/rust/commits/38e6dad1d3ad540e76ee400daa76cbeeb02925df", "html_url": "https://github.com/rust-lang/rust/commit/38e6dad1d3ad540e76ee400daa76cbeeb02925df"}], "stats": {"total": 14, "additions": 3, "deletions": 11}, "files": [{"sha": "439641400d57594a295bde42607befbba0cadf5e", "filename": "compiler/rustc_serialize/src/collection_impls.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/025e1b581adb0101f0d815479e30d5d745ee972f/compiler%2Frustc_serialize%2Fsrc%2Fcollection_impls.rs", "raw_url": "https://github.com/rust-lang/rust/raw/025e1b581adb0101f0d815479e30d5d745ee972f/compiler%2Frustc_serialize%2Fsrc%2Fcollection_impls.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_serialize%2Fsrc%2Fcollection_impls.rs?ref=025e1b581adb0101f0d815479e30d5d745ee972f", "patch": "@@ -81,7 +81,7 @@ where\n         d.read_map(|d, len| {\n             let mut map = BTreeMap::new();\n             for _ in 0..len {\n-                let key = d.read_map_elt_key(|d| Decodable::decode(d));\n+                let key = Decodable::decode(d);\n                 let val = d.read_map_elt_val(|d| Decodable::decode(d));\n                 map.insert(key, val);\n             }\n@@ -147,7 +147,7 @@ where\n             let state = Default::default();\n             let mut map = HashMap::with_capacity_and_hasher(len, state);\n             for _ in 0..len {\n-                let key = d.read_map_elt_key(|d| Decodable::decode(d));\n+                let key = Decodable::decode(d);\n                 let val = d.read_map_elt_val(|d| Decodable::decode(d));\n                 map.insert(key, val);\n             }\n@@ -226,7 +226,7 @@ where\n             let state = Default::default();\n             let mut map = indexmap::IndexMap::with_capacity_and_hasher(len, state);\n             for _ in 0..len {\n-                let key = d.read_map_elt_key(|d| Decodable::decode(d));\n+                let key = Decodable::decode(d);\n                 let val = d.read_map_elt_val(|d| Decodable::decode(d));\n                 map.insert(key, val);\n             }"}, {"sha": "53ab6eda6f181bf9b0c0ddc54289206a85381d69", "filename": "compiler/rustc_serialize/src/serialize.rs", "status": "modified", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/025e1b581adb0101f0d815479e30d5d745ee972f/compiler%2Frustc_serialize%2Fsrc%2Fserialize.rs", "raw_url": "https://github.com/rust-lang/rust/raw/025e1b581adb0101f0d815479e30d5d745ee972f/compiler%2Frustc_serialize%2Fsrc%2Fserialize.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_serialize%2Fsrc%2Fserialize.rs?ref=025e1b581adb0101f0d815479e30d5d745ee972f", "patch": "@@ -226,14 +226,6 @@ pub trait Decoder {\n         f(self, len)\n     }\n \n-    #[inline]\n-    fn read_map_elt_key<T, F>(&mut self, f: F) -> T\n-    where\n-        F: FnOnce(&mut Self) -> T,\n-    {\n-        f(self)\n-    }\n-\n     #[inline]\n     fn read_map_elt_val<T, F>(&mut self, f: F) -> T\n     where"}]}