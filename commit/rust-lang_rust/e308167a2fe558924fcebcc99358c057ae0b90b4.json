{"sha": "e308167a2fe558924fcebcc99358c057ae0b90b4", "node_id": "MDY6Q29tbWl0NzI0NzEyOmUzMDgxNjdhMmZlNTU4OTI0ZmNlYmNjOTkzNThjMDU3YWUwYjkwYjQ=", "commit": {"author": {"name": "Erick Tryzelaar", "email": "erick.tryzelaar@gmail.com", "date": "2013-07-27T01:03:57Z"}, "committer": {"name": "Erick Tryzelaar", "email": "erick.tryzelaar@gmail.com", "date": "2013-07-28T06:41:09Z"}, "message": "cleanup .unwrap and .unwrap_err fixing io tests", "tree": {"sha": "6e2905fc4a4768bc9952d8e10703d486404b0821", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6e2905fc4a4768bc9952d8e10703d486404b0821"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e308167a2fe558924fcebcc99358c057ae0b90b4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e308167a2fe558924fcebcc99358c057ae0b90b4", "html_url": "https://github.com/rust-lang/rust/commit/e308167a2fe558924fcebcc99358c057ae0b90b4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e308167a2fe558924fcebcc99358c057ae0b90b4/comments", "author": {"login": "erickt", "id": 84711, "node_id": "MDQ6VXNlcjg0NzEx", "avatar_url": "https://avatars.githubusercontent.com/u/84711?v=4", "gravatar_id": "", "url": "https://api.github.com/users/erickt", "html_url": "https://github.com/erickt", "followers_url": "https://api.github.com/users/erickt/followers", "following_url": "https://api.github.com/users/erickt/following{/other_user}", "gists_url": "https://api.github.com/users/erickt/gists{/gist_id}", "starred_url": "https://api.github.com/users/erickt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/erickt/subscriptions", "organizations_url": "https://api.github.com/users/erickt/orgs", "repos_url": "https://api.github.com/users/erickt/repos", "events_url": "https://api.github.com/users/erickt/events{/privacy}", "received_events_url": "https://api.github.com/users/erickt/received_events", "type": "User", "site_admin": false}, "committer": {"login": "erickt", "id": 84711, "node_id": "MDQ6VXNlcjg0NzEx", "avatar_url": "https://avatars.githubusercontent.com/u/84711?v=4", "gravatar_id": "", "url": "https://api.github.com/users/erickt", "html_url": "https://github.com/erickt", "followers_url": "https://api.github.com/users/erickt/followers", "following_url": "https://api.github.com/users/erickt/following{/other_user}", "gists_url": "https://api.github.com/users/erickt/gists{/gist_id}", "starred_url": "https://api.github.com/users/erickt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/erickt/subscriptions", "organizations_url": "https://api.github.com/users/erickt/orgs", "repos_url": "https://api.github.com/users/erickt/repos", "events_url": "https://api.github.com/users/erickt/events{/privacy}", "received_events_url": "https://api.github.com/users/erickt/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4eb95f6d1c22419b50980d0bf8effc6e2f22feb5", "url": "https://api.github.com/repos/rust-lang/rust/commits/4eb95f6d1c22419b50980d0bf8effc6e2f22feb5", "html_url": "https://github.com/rust-lang/rust/commit/4eb95f6d1c22419b50980d0bf8effc6e2f22feb5"}], "stats": {"total": 42, "additions": 17, "deletions": 25}, "files": [{"sha": "1cabab713b82538910dda54eac97bb072c409082", "filename": "src/libextra/workcache.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/e308167a2fe558924fcebcc99358c057ae0b90b4/src%2Flibextra%2Fworkcache.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e308167a2fe558924fcebcc99358c057ae0b90b4/src%2Flibextra%2Fworkcache.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibextra%2Fworkcache.rs?ref=e308167a2fe558924fcebcc99358c057ae0b90b4", "patch": "@@ -22,7 +22,6 @@ use std::cell::Cell;\n use std::comm::{PortOne, oneshot, send_one, recv_one};\n use std::either::{Either, Left, Right};\n use std::io;\n-use std::result;\n use std::run;\n use std::task;\n \n@@ -208,7 +207,7 @@ fn json_encode<T:Encodable<json::Encoder>>(t: &T) -> ~str {\n // FIXME(#5121)\n fn json_decode<T:Decodable<json::Decoder>>(s: &str) -> T {\n     do io::with_str_reader(s) |rdr| {\n-        let j = result::unwrap(json::from_reader(rdr));\n+        let j = json::from_reader(rdr).unwrap();\n         let mut decoder = json::Decoder(j);\n         Decodable::decode(&mut decoder)\n     }"}, {"sha": "fcc53c33a5def9074dae82431c9314ec244656dc", "filename": "src/libstd/io.rs", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/e308167a2fe558924fcebcc99358c057ae0b90b4/src%2Flibstd%2Fio.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e308167a2fe558924fcebcc99358c057ae0b90b4/src%2Flibstd%2Fio.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fio.rs?ref=e308167a2fe558924fcebcc99358c057ae0b90b4", "patch": "@@ -1851,12 +1851,10 @@ mod tests {\n             ~\"A hoopy frood who really knows where his towel is.\";\n         debug!(frood.clone());\n         {\n-            let out: @io::Writer =\n-                result::unwrap(\n-                    io::file_writer(tmpfile, [io::Create, io::Truncate]));\n+            let out: @io::Writer = io::file_writer(tmpfile, [io::Create, io::Truncate]).unwrap();\n             out.write_str(frood);\n         }\n-        let inp: @io::Reader = result::unwrap(io::file_reader(tmpfile));\n+        let inp: @io::Reader = io::file_reader(tmpfile).unwrap();\n         let frood2: ~str = inp.read_c_str();\n         debug!(frood2.clone());\n         assert_eq!(frood, frood2);"}, {"sha": "ec2715fcf2e00f378cf8b0fdb78522fb033a245b", "filename": "src/libstd/result.rs", "status": "modified", "additions": 14, "deletions": 19, "changes": 33, "blob_url": "https://github.com/rust-lang/rust/blob/e308167a2fe558924fcebcc99358c057ae0b90b4/src%2Flibstd%2Fresult.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e308167a2fe558924fcebcc99358c057ae0b90b4/src%2Flibstd%2Fresult.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fresult.rs?ref=e308167a2fe558924fcebcc99358c057ae0b90b4", "patch": "@@ -242,11 +242,23 @@ impl<T, E> Result<T, E> {\n         }\n     }\n \n+    /// Unwraps a result, assuming it is an `ok(T)`\n     #[inline]\n-    pub fn unwrap(self) -> T { unwrap(self) }\n+    pub fn unwrap(self) -> T {\n+        match self {\n+            Ok(t) => t,\n+            Err(_) => fail!(\"unwrap called on an err result\")\n+        }\n+    }\n \n+    /// Unwraps a result, assuming it is an `err(U)`\n     #[inline]\n-    pub fn unwrap_err(self) -> E { unwrap_err(self) }\n+    pub fn unwrap_err(self) -> E {\n+        match self {\n+            Err(u) => u,\n+            Ok(_) => fail!(\"unwrap called on an ok result\")\n+        }\n+    }\n \n     #[inline]\n     pub fn chain<U>(self, op: &fn(T) -> Result<U,E>) -> Result<U,E> {\n@@ -375,23 +387,6 @@ pub fn iter_vec2<S,T,U>(ss: &[S], ts: &[T],\n     return Ok(());\n }\n \n-/// Unwraps a result, assuming it is an `ok(T)`\n-#[inline]\n-pub fn unwrap<T, U>(res: Result<T, U>) -> T {\n-    match res {\n-      Ok(t) => t,\n-      Err(_) => fail!(\"unwrap called on an err result\")\n-    }\n-}\n-\n-/// Unwraps a result, assuming it is an `err(U)`\n-#[inline]\n-pub fn unwrap_err<T, U>(res: Result<T, U>) -> U {\n-    match res {\n-      Err(u) => u,\n-      Ok(_) => fail!(\"unwrap called on an ok result\")\n-    }\n-}\n \n #[cfg(test)]\n mod tests {"}]}