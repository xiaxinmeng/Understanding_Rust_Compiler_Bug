{"sha": "6fc412fb73e64c22e028b082d05c4b31c6b96a17", "node_id": "C_kwDOAAsO6NoAKDZmYzQxMmZiNzNlNjRjMjJlMDI4YjA4MmQwNWM0YjMxYzZiOTZhMTc", "commit": {"author": {"name": "klensy", "email": "klensy@users.noreply.github.com", "date": "2022-06-15T11:15:54Z"}, "committer": {"name": "klensy", "email": "klensy@users.noreply.github.com", "date": "2022-06-16T12:51:12Z"}, "message": "bless clippy tests", "tree": {"sha": "d76418077d78f5470d557a8e5435c997dda7fbb1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d76418077d78f5470d557a8e5435c997dda7fbb1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6fc412fb73e64c22e028b082d05c4b31c6b96a17", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6fc412fb73e64c22e028b082d05c4b31c6b96a17", "html_url": "https://github.com/rust-lang/rust/commit/6fc412fb73e64c22e028b082d05c4b31c6b96a17", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6fc412fb73e64c22e028b082d05c4b31c6b96a17/comments", "author": {"login": "klensy", "id": 1782831, "node_id": "MDQ6VXNlcjE3ODI4MzE=", "avatar_url": "https://avatars.githubusercontent.com/u/1782831?v=4", "gravatar_id": "", "url": "https://api.github.com/users/klensy", "html_url": "https://github.com/klensy", "followers_url": "https://api.github.com/users/klensy/followers", "following_url": "https://api.github.com/users/klensy/following{/other_user}", "gists_url": "https://api.github.com/users/klensy/gists{/gist_id}", "starred_url": "https://api.github.com/users/klensy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/klensy/subscriptions", "organizations_url": "https://api.github.com/users/klensy/orgs", "repos_url": "https://api.github.com/users/klensy/repos", "events_url": "https://api.github.com/users/klensy/events{/privacy}", "received_events_url": "https://api.github.com/users/klensy/received_events", "type": "User", "site_admin": false}, "committer": {"login": "klensy", "id": 1782831, "node_id": "MDQ6VXNlcjE3ODI4MzE=", "avatar_url": "https://avatars.githubusercontent.com/u/1782831?v=4", "gravatar_id": "", "url": "https://api.github.com/users/klensy", "html_url": "https://github.com/klensy", "followers_url": "https://api.github.com/users/klensy/followers", "following_url": "https://api.github.com/users/klensy/following{/other_user}", "gists_url": "https://api.github.com/users/klensy/gists{/gist_id}", "starred_url": "https://api.github.com/users/klensy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/klensy/subscriptions", "organizations_url": "https://api.github.com/users/klensy/orgs", "repos_url": "https://api.github.com/users/klensy/repos", "events_url": "https://api.github.com/users/klensy/events{/privacy}", "received_events_url": "https://api.github.com/users/klensy/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "449ad044f2fceea9c768771059c3a73cd77d3d33", "url": "https://api.github.com/repos/rust-lang/rust/commits/449ad044f2fceea9c768771059c3a73cd77d3d33", "html_url": "https://github.com/rust-lang/rust/commit/449ad044f2fceea9c768771059c3a73cd77d3d33"}], "stats": {"total": 192, "additions": 96, "deletions": 96}, "files": [{"sha": "18a889837dfdb6852c7da225426dbd3cb1033acc", "filename": "src/test/ui/destructure-trait-ref.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/6fc412fb73e64c22e028b082d05c4b31c6b96a17/src%2Ftest%2Fui%2Fdestructure-trait-ref.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6fc412fb73e64c22e028b082d05c4b31c6b96a17/src%2Ftest%2Fui%2Fdestructure-trait-ref.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fdestructure-trait-ref.stderr?ref=6fc412fb73e64c22e028b082d05c4b31c6b96a17", "patch": "@@ -30,7 +30,7 @@ help: consider removing `&` from the pattern\n    |\n LL -     let &&x = &1isize as &dyn T;\n LL +     let &x = &1isize as &dyn T;\n-   | \n+   |\n \n error[E0308]: mismatched types\n   --> $DIR/destructure-trait-ref.rs:36:11\n@@ -46,7 +46,7 @@ help: consider removing `&` from the pattern\n    |\n LL -     let &&&x = &(&1isize as &dyn T);\n LL +     let &&x = &(&1isize as &dyn T);\n-   | \n+   |\n \n error[E0308]: mismatched types\n   --> $DIR/destructure-trait-ref.rs:40:13"}, {"sha": "f43427f9832d03d0ebc4b989a4394269f1d74113", "filename": "src/test/ui/mismatched_types/issue-38371.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/6fc412fb73e64c22e028b082d05c4b31c6b96a17/src%2Ftest%2Fui%2Fmismatched_types%2Fissue-38371.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6fc412fb73e64c22e028b082d05c4b31c6b96a17/src%2Ftest%2Fui%2Fmismatched_types%2Fissue-38371.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmismatched_types%2Fissue-38371.stderr?ref=6fc412fb73e64c22e028b082d05c4b31c6b96a17", "patch": "@@ -12,7 +12,7 @@ help: to take parameter `_a` by reference, move `&` to the type\n    |\n LL - fn foo(&_a: Foo) {}\n LL + fn foo(_a: &Foo) {}\n-   | \n+   |\n \n error[E0308]: mismatched types\n   --> $DIR/issue-38371.rs:16:9\n@@ -28,7 +28,7 @@ help: consider removing `&` from the pattern\n    |\n LL - fn agh(&&_a: &u32) {}\n LL + fn agh(&_a: &u32) {}\n-   | \n+   |\n \n error: aborting due to 2 previous errors\n "}, {"sha": "0e8f8853fb751d3baf37bbf6a87be70641e096d9", "filename": "src/test/ui/mismatched_types/ref-pat-suggestions.stderr", "status": "modified", "additions": 18, "deletions": 18, "changes": 36, "blob_url": "https://github.com/rust-lang/rust/blob/6fc412fb73e64c22e028b082d05c4b31c6b96a17/src%2Ftest%2Fui%2Fmismatched_types%2Fref-pat-suggestions.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6fc412fb73e64c22e028b082d05c4b31c6b96a17/src%2Ftest%2Fui%2Fmismatched_types%2Fref-pat-suggestions.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmismatched_types%2Fref-pat-suggestions.stderr?ref=6fc412fb73e64c22e028b082d05c4b31c6b96a17", "patch": "@@ -12,7 +12,7 @@ help: to take parameter `_a` by reference, move `&` to the type\n    |\n LL - fn _f0(&_a: u32) {}\n LL + fn _f0(_a: &u32) {}\n-   | \n+   |\n \n error[E0308]: mismatched types\n   --> $DIR/ref-pat-suggestions.rs:4:8\n@@ -28,7 +28,7 @@ help: to take parameter `_a` by reference, move `&mut` to the type\n    |\n LL - fn _f1(&mut _a: u32) {}\n LL + fn _f1(_a: &mut u32) {}\n-   | \n+   |\n \n error[E0308]: mismatched types\n   --> $DIR/ref-pat-suggestions.rs:5:9\n@@ -44,7 +44,7 @@ help: consider removing `&` from the pattern\n    |\n LL - fn _f2(&&_a: &u32) {}\n LL + fn _f2(&_a: &u32) {}\n-   | \n+   |\n \n error[E0308]: mismatched types\n   --> $DIR/ref-pat-suggestions.rs:6:13\n@@ -60,7 +60,7 @@ help: consider removing `&` from the pattern\n    |\n LL - fn _f3(&mut &_a: &mut u32) {}\n LL + fn _f3(&mut _a: &mut u32) {}\n-   | \n+   |\n \n error[E0308]: mismatched types\n   --> $DIR/ref-pat-suggestions.rs:7:9\n@@ -76,7 +76,7 @@ help: consider removing `&mut` from the pattern\n    |\n LL - fn _f4(&&mut _a: &u32) {}\n LL + fn _f4(&_a: &u32) {}\n-   | \n+   |\n \n error[E0308]: mismatched types\n   --> $DIR/ref-pat-suggestions.rs:8:13\n@@ -92,7 +92,7 @@ help: consider removing `&mut` from the pattern\n    |\n LL - fn _f5(&mut &mut _a: &mut u32) {}\n LL + fn _f5(&mut _a: &mut u32) {}\n-   | \n+   |\n \n error[E0308]: mismatched types\n   --> $DIR/ref-pat-suggestions.rs:11:23\n@@ -109,7 +109,7 @@ help: consider removing `&` from the pattern\n    |\n LL -     let _: fn(u32) = |&_a| ();\n LL +     let _: fn(u32) = |_a| ();\n-   | \n+   |\n \n error[E0308]: mismatched types\n   --> $DIR/ref-pat-suggestions.rs:12:23\n@@ -126,7 +126,7 @@ help: consider removing `&mut` from the pattern\n    |\n LL -     let _: fn(u32) = |&mut _a| ();\n LL +     let _: fn(u32) = |_a| ();\n-   | \n+   |\n \n error[E0308]: mismatched types\n   --> $DIR/ref-pat-suggestions.rs:13:25\n@@ -143,7 +143,7 @@ help: consider removing `&` from the pattern\n    |\n LL -     let _: fn(&u32) = |&&_a| ();\n LL +     let _: fn(&u32) = |&_a| ();\n-   | \n+   |\n \n error[E0308]: mismatched types\n   --> $DIR/ref-pat-suggestions.rs:14:33\n@@ -160,7 +160,7 @@ help: consider removing `&` from the pattern\n    |\n LL -     let _: fn(&mut u32) = |&mut &_a| ();\n LL +     let _: fn(&mut u32) = |&mut _a| ();\n-   | \n+   |\n \n error[E0308]: mismatched types\n   --> $DIR/ref-pat-suggestions.rs:15:25\n@@ -177,7 +177,7 @@ help: consider removing `&mut` from the pattern\n    |\n LL -     let _: fn(&u32) = |&&mut _a| ();\n LL +     let _: fn(&u32) = |&_a| ();\n-   | \n+   |\n \n error[E0308]: mismatched types\n   --> $DIR/ref-pat-suggestions.rs:16:33\n@@ -194,7 +194,7 @@ help: consider removing `&mut` from the pattern\n    |\n LL -     let _: fn(&mut u32) = |&mut &mut _a| ();\n LL +     let _: fn(&mut u32) = |&mut _a| ();\n-   | \n+   |\n \n error[E0308]: mismatched types\n   --> $DIR/ref-pat-suggestions.rs:18:14\n@@ -210,7 +210,7 @@ help: to take parameter `_a` by reference, move `&` to the type\n    |\n LL -     let _ = |&_a: u32| ();\n LL +     let _ = |_a: &u32| ();\n-   | \n+   |\n \n error[E0308]: mismatched types\n   --> $DIR/ref-pat-suggestions.rs:19:14\n@@ -226,7 +226,7 @@ help: to take parameter `_a` by reference, move `&mut` to the type\n    |\n LL -     let _ = |&mut _a: u32| ();\n LL +     let _ = |_a: &mut u32| ();\n-   | \n+   |\n \n error[E0308]: mismatched types\n   --> $DIR/ref-pat-suggestions.rs:20:15\n@@ -242,7 +242,7 @@ help: consider removing `&` from the pattern\n    |\n LL -     let _ = |&&_a: &u32| ();\n LL +     let _ = |&_a: &u32| ();\n-   | \n+   |\n \n error[E0308]: mismatched types\n   --> $DIR/ref-pat-suggestions.rs:21:19\n@@ -258,7 +258,7 @@ help: consider removing `&` from the pattern\n    |\n LL -     let _ = |&mut &_a: &mut u32| ();\n LL +     let _ = |&mut _a: &mut u32| ();\n-   | \n+   |\n \n error[E0308]: mismatched types\n   --> $DIR/ref-pat-suggestions.rs:22:15\n@@ -274,7 +274,7 @@ help: consider removing `&mut` from the pattern\n    |\n LL -     let _ = |&&mut _a: &u32| ();\n LL +     let _ = |&_a: &u32| ();\n-   | \n+   |\n \n error[E0308]: mismatched types\n   --> $DIR/ref-pat-suggestions.rs:23:19\n@@ -290,7 +290,7 @@ help: consider removing `&mut` from the pattern\n    |\n LL -     let _ = |&mut &mut _a: &mut u32| ();\n LL +     let _ = |&mut _a: &mut u32| ();\n-   | \n+   |\n \n error: aborting due to 18 previous errors\n "}, {"sha": "ad737f7bd15e17f94d4f37070ff2d27ed63c7966", "filename": "src/test/ui/pattern/for-loop-bad-item.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6fc412fb73e64c22e028b082d05c4b31c6b96a17/src%2Ftest%2Fui%2Fpattern%2Ffor-loop-bad-item.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6fc412fb73e64c22e028b082d05c4b31c6b96a17/src%2Ftest%2Fui%2Fpattern%2Ffor-loop-bad-item.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fpattern%2Ffor-loop-bad-item.stderr?ref=6fc412fb73e64c22e028b082d05c4b31c6b96a17", "patch": "@@ -12,7 +12,7 @@ help: consider removing `&mut` from the pattern\n    |\n LL -     for ((_, _), (&mut c, _)) in &mut map {\n LL +     for ((_, _), (c, _)) in &mut map {\n-   | \n+   |\n \n error[E0308]: mismatched types\n   --> $DIR/for-loop-bad-item.rs:14:14"}, {"sha": "aa2b407bf561656aeb1cd8ffd665f9f632d47f0b", "filename": "src/test/ui/suggestions/match-ergonomics.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/6fc412fb73e64c22e028b082d05c4b31c6b96a17/src%2Ftest%2Fui%2Fsuggestions%2Fmatch-ergonomics.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6fc412fb73e64c22e028b082d05c4b31c6b96a17/src%2Ftest%2Fui%2Fsuggestions%2Fmatch-ergonomics.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fmatch-ergonomics.stderr?ref=6fc412fb73e64c22e028b082d05c4b31c6b96a17", "patch": "@@ -12,7 +12,7 @@ help: consider removing `&` from the pattern\n    |\n LL -         [&v] => {},\n LL +         [v] => {},\n-   | \n+   |\n \n error[E0529]: expected an array or slice, found `Vec<i32>`\n   --> $DIR/match-ergonomics.rs:8:9\n@@ -44,7 +44,7 @@ help: consider removing `&` from the pattern\n    |\n LL -         &v => {},\n LL +         v => {},\n-   | \n+   |\n \n error[E0308]: mismatched types\n   --> $DIR/match-ergonomics.rs:40:13\n@@ -60,7 +60,7 @@ help: consider removing `&` from the pattern\n    |\n LL -     if let [&v] = &x[..] {}\n LL +     if let [v] = &x[..] {}\n-   | \n+   |\n \n error: aborting due to 5 previous errors\n "}, {"sha": "f137787bff0c786f5f1f5f85ab03c8e23b3816ef", "filename": "src/tools/clippy/tests/ui/eprint_with_newline.stderr", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/6fc412fb73e64c22e028b082d05c4b31c6b96a17/src%2Ftools%2Fclippy%2Ftests%2Fui%2Feprint_with_newline.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6fc412fb73e64c22e028b082d05c4b31c6b96a17/src%2Ftools%2Fclippy%2Ftests%2Fui%2Feprint_with_newline.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui%2Feprint_with_newline.stderr?ref=6fc412fb73e64c22e028b082d05c4b31c6b96a17", "patch": "@@ -9,7 +9,7 @@ help: use `eprintln!` instead\n    |\n LL -     eprint!(\"Hello/n\");\n LL +     eprintln!(\"Hello\");\n-   | \n+   |\n \n error: using `eprint!()` with a format string that ends in a single newline\n   --> $DIR/eprint_with_newline.rs:6:5\n@@ -21,7 +21,7 @@ help: use `eprintln!` instead\n    |\n LL -     eprint!(\"Hello {}/n\", \"world\");\n LL +     eprintln!(\"Hello {}\", \"world\");\n-   | \n+   |\n \n error: using `eprint!()` with a format string that ends in a single newline\n   --> $DIR/eprint_with_newline.rs:7:5\n@@ -33,7 +33,7 @@ help: use `eprintln!` instead\n    |\n LL -     eprint!(\"Hello {} {}/n\", \"world\", \"#2\");\n LL +     eprintln!(\"Hello {} {}\", \"world\", \"#2\");\n-   | \n+   |\n \n error: using `eprint!()` with a format string that ends in a single newline\n   --> $DIR/eprint_with_newline.rs:8:5\n@@ -45,7 +45,7 @@ help: use `eprintln!` instead\n    |\n LL -     eprint!(\"{}/n\", 1265);\n LL +     eprintln!(\"{}\", 1265);\n-   | \n+   |\n \n error: using `eprint!()` with a format string that ends in a single newline\n   --> $DIR/eprint_with_newline.rs:9:5\n@@ -57,7 +57,7 @@ help: use `eprintln!` instead\n    |\n LL -     eprint!(\"/n\");\n LL +     eprintln!();\n-   | \n+   |\n \n error: using `eprint!()` with a format string that ends in a single newline\n   --> $DIR/eprint_with_newline.rs:28:5\n@@ -69,7 +69,7 @@ help: use `eprintln!` instead\n    |\n LL -     eprint!(\"//n\"); // should fail\n LL +     eprintln!(\"/\"); // should fail\n-   | \n+   |\n \n error: using `eprint!()` with a format string that ends in a single newline\n   --> $DIR/eprint_with_newline.rs:35:5\n@@ -111,7 +111,7 @@ help: use `eprintln!` instead\n    |\n LL -     eprint!(\"/r/n\"); //~ ERROR\n LL +     eprintln!(\"/r\"); //~ ERROR\n-   | \n+   |\n \n error: using `eprint!()` with a format string that ends in a single newline\n   --> $DIR/eprint_with_newline.rs:48:5\n@@ -123,7 +123,7 @@ help: use `eprintln!` instead\n    |\n LL -     eprint!(\"foo/rbar/n\") // ~ ERROR\n LL +     eprintln!(\"foo/rbar\") // ~ ERROR\n-   | \n+   |\n \n error: aborting due to 10 previous errors\n "}, {"sha": "2696694680ad7abd56549743231a3b882444e28c", "filename": "src/tools/clippy/tests/ui/manual_split_once.stderr", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/6fc412fb73e64c22e028b082d05c4b31c6b96a17/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fmanual_split_once.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6fc412fb73e64c22e028b082d05c4b31c6b96a17/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fmanual_split_once.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fmanual_split_once.stderr?ref=6fc412fb73e64c22e028b082d05c4b31c6b96a17", "patch": "@@ -96,12 +96,12 @@ help: remove the `iter` usages\n    |\n LL -     let l = iter.next().unwrap();\n LL +     \n-   | \n+   |\n help: remove the `iter` usages\n    |\n LL -     let r = iter.next().unwrap();\n LL +     \n-   | \n+   |\n \n error: manual implementation of `split_once`\n   --> $DIR/manual_split_once.rs:49:5\n@@ -121,12 +121,12 @@ help: remove the `iter` usages\n    |\n LL -     let l = iter.next()?;\n LL +     \n-   | \n+   |\n help: remove the `iter` usages\n    |\n LL -     let r = iter.next()?;\n LL +     \n-   | \n+   |\n \n error: manual implementation of `rsplit_once`\n   --> $DIR/manual_split_once.rs:53:5\n@@ -146,12 +146,12 @@ help: remove the `iter` usages\n    |\n LL -     let r = iter.next().unwrap();\n LL +     \n-   | \n+   |\n help: remove the `iter` usages\n    |\n LL -     let l = iter.next().unwrap();\n LL +     \n-   | \n+   |\n \n error: manual implementation of `rsplit_once`\n   --> $DIR/manual_split_once.rs:57:5\n@@ -171,12 +171,12 @@ help: remove the `iter` usages\n    |\n LL -     let r = iter.next()?;\n LL +     \n-   | \n+   |\n help: remove the `iter` usages\n    |\n LL -     let l = iter.next()?;\n LL +     \n-   | \n+   |\n \n error: manual implementation of `split_once`\n   --> $DIR/manual_split_once.rs:142:13\n@@ -202,12 +202,12 @@ help: remove the `iter` usages\n    |\n LL -     let a = iter.next().unwrap();\n LL +     \n-   | \n+   |\n help: remove the `iter` usages\n    |\n LL -     let b = iter.next().unwrap();\n LL +     \n-   | \n+   |\n \n error: aborting due to 19 previous errors\n "}, {"sha": "abc9c1ece327aaec9831d88941c4cd05c6ea9ae7", "filename": "src/tools/clippy/tests/ui/map_unwrap_or.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/6fc412fb73e64c22e028b082d05c4b31c6b96a17/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fmap_unwrap_or.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6fc412fb73e64c22e028b082d05c4b31c6b96a17/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fmap_unwrap_or.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fmap_unwrap_or.stderr?ref=6fc412fb73e64c22e028b082d05c4b31c6b96a17", "patch": "@@ -12,7 +12,7 @@ help: use `map_or(<a>, <f>)` instead\n    |\n LL -     let _ = opt.map(|x| x + 1)\n LL +     let _ = opt.map_or(0, |x| x + 1);\n-   | \n+   |\n \n error: called `map(<f>).unwrap_or(<a>)` on an `Option` value. This can be done more directly by calling `map_or(<a>, <f>)` instead\n   --> $DIR/map_unwrap_or.rs:20:13\n@@ -59,7 +59,7 @@ help: use `and_then(<f>)` instead\n    |\n LL -     let _ = opt.map(|x| Some(x + 1)).unwrap_or(None);\n LL +     let _ = opt.and_then(|x| Some(x + 1));\n-   | \n+   |\n \n error: called `map(<f>).unwrap_or(None)` on an `Option` value. This can be done more directly by calling `and_then(<f>)` instead\n   --> $DIR/map_unwrap_or.rs:31:13\n@@ -92,7 +92,7 @@ help: use `and_then(<f>)` instead\n    |\n LL -         .map(|x| Some(x + 1))\n LL +         .and_then(|x| Some(x + 1));\n-   | \n+   |\n \n error: called `map(<f>).unwrap_or(<a>)` on an `Option` value. This can be done more directly by calling `map_or(<a>, <f>)` instead\n   --> $DIR/map_unwrap_or.rs:46:13\n@@ -104,7 +104,7 @@ help: use `map_or(<a>, <f>)` instead\n    |\n LL -     let _ = Some(\"prefix\").map(|p| format!(\"{}.\", p)).unwrap_or(id);\n LL +     let _ = Some(\"prefix\").map_or(id, |p| format!(\"{}.\", p));\n-   | \n+   |\n \n error: called `map(<f>).unwrap_or_else(<g>)` on an `Option` value. This can be done more directly by calling `map_or_else(<g>, <f>)` instead\n   --> $DIR/map_unwrap_or.rs:50:13"}, {"sha": "313cdbbeba183c3222fec8dd7848e48b27bb511b", "filename": "src/tools/clippy/tests/ui/needless_late_init.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/6fc412fb73e64c22e028b082d05c4b31c6b96a17/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fneedless_late_init.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6fc412fb73e64c22e028b082d05c4b31c6b96a17/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fneedless_late_init.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fneedless_late_init.stderr?ref=6fc412fb73e64c22e028b082d05c4b31c6b96a17", "patch": "@@ -164,7 +164,7 @@ help: remove the assignments from the `match` arms\n    |\n LL -         1 => f = \"three\",\n LL +         1 => \"three\",\n-   | \n+   |\n \n error: unneeded late initialization\n   --> $DIR/needless_late_init.rs:76:5\n@@ -180,7 +180,7 @@ help: remove the assignments from the branches\n    |\n LL -         g = 5;\n LL +         5\n-   | \n+   |\n help: add a semicolon after the `if` expression\n    |\n LL |     };"}, {"sha": "72aae0756033a5593826f90b900296a292a2d0df", "filename": "src/tools/clippy/tests/ui/print_literal.stderr", "status": "modified", "additions": 11, "deletions": 11, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/6fc412fb73e64c22e028b082d05c4b31c6b96a17/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fprint_literal.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6fc412fb73e64c22e028b082d05c4b31c6b96a17/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fprint_literal.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fprint_literal.stderr?ref=6fc412fb73e64c22e028b082d05c4b31c6b96a17", "patch": "@@ -9,7 +9,7 @@ help: try this\n    |\n LL -     print!(\"Hello {}\", \"world\");\n LL +     print!(\"Hello world\");\n-   | \n+   |\n \n error: literal with an empty format string\n   --> $DIR/print_literal.rs:26:36\n@@ -21,7 +21,7 @@ help: try this\n    |\n LL -     println!(\"Hello {} {}\", world, \"world\");\n LL +     println!(\"Hello {} world\", world);\n-   | \n+   |\n \n error: literal with an empty format string\n   --> $DIR/print_literal.rs:27:26\n@@ -33,7 +33,7 @@ help: try this\n    |\n LL -     println!(\"Hello {}\", \"world\");\n LL +     println!(\"Hello world\");\n-   | \n+   |\n \n error: literal with an empty format string\n   --> $DIR/print_literal.rs:32:25\n@@ -45,7 +45,7 @@ help: try this\n    |\n LL -     println!(\"{0} {1}\", \"hello\", \"world\");\n LL +     println!(\"hello {1}\", \"world\");\n-   | \n+   |\n \n error: literal with an empty format string\n   --> $DIR/print_literal.rs:32:34\n@@ -57,7 +57,7 @@ help: try this\n    |\n LL -     println!(\"{0} {1}\", \"hello\", \"world\");\n LL +     println!(\"{0} world\", \"hello\");\n-   | \n+   |\n \n error: literal with an empty format string\n   --> $DIR/print_literal.rs:33:25\n@@ -69,7 +69,7 @@ help: try this\n    |\n LL -     println!(\"{1} {0}\", \"hello\", \"world\");\n LL +     println!(\"{1} hello\", \"world\");\n-   | \n+   |\n \n error: literal with an empty format string\n   --> $DIR/print_literal.rs:33:34\n@@ -81,7 +81,7 @@ help: try this\n    |\n LL -     println!(\"{1} {0}\", \"hello\", \"world\");\n LL +     println!(\"world {0}\", \"hello\");\n-   | \n+   |\n \n error: literal with an empty format string\n   --> $DIR/print_literal.rs:36:29\n@@ -93,7 +93,7 @@ help: try this\n    |\n LL -     println!(\"{foo} {bar}\", foo = \"hello\", bar = \"world\");\n LL +     println!(\"hello {bar}\", bar = \"world\");\n-   | \n+   |\n \n error: literal with an empty format string\n   --> $DIR/print_literal.rs:36:44\n@@ -105,7 +105,7 @@ help: try this\n    |\n LL -     println!(\"{foo} {bar}\", foo = \"hello\", bar = \"world\");\n LL +     println!(\"{foo} world\", foo = \"hello\");\n-   | \n+   |\n \n error: literal with an empty format string\n   --> $DIR/print_literal.rs:37:29\n@@ -117,7 +117,7 @@ help: try this\n    |\n LL -     println!(\"{bar} {foo}\", foo = \"hello\", bar = \"world\");\n LL +     println!(\"{bar} hello\", bar = \"world\");\n-   | \n+   |\n \n error: literal with an empty format string\n   --> $DIR/print_literal.rs:37:44\n@@ -129,7 +129,7 @@ help: try this\n    |\n LL -     println!(\"{bar} {foo}\", foo = \"hello\", bar = \"world\");\n LL +     println!(\"world {foo}\", foo = \"hello\");\n-   | \n+   |\n \n error: aborting due to 11 previous errors\n "}, {"sha": "edbaa1cdf979fb0bc3f0f7a226cd555c70f10b97", "filename": "src/tools/clippy/tests/ui/print_with_newline.stderr", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/6fc412fb73e64c22e028b082d05c4b31c6b96a17/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fprint_with_newline.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6fc412fb73e64c22e028b082d05c4b31c6b96a17/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fprint_with_newline.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fprint_with_newline.stderr?ref=6fc412fb73e64c22e028b082d05c4b31c6b96a17", "patch": "@@ -9,7 +9,7 @@ help: use `println!` instead\n    |\n LL -     print!(\"Hello/n\");\n LL +     println!(\"Hello\");\n-   | \n+   |\n \n error: using `print!()` with a format string that ends in a single newline\n   --> $DIR/print_with_newline.rs:9:5\n@@ -21,7 +21,7 @@ help: use `println!` instead\n    |\n LL -     print!(\"Hello {}/n\", \"world\");\n LL +     println!(\"Hello {}\", \"world\");\n-   | \n+   |\n \n error: using `print!()` with a format string that ends in a single newline\n   --> $DIR/print_with_newline.rs:10:5\n@@ -33,7 +33,7 @@ help: use `println!` instead\n    |\n LL -     print!(\"Hello {} {}/n\", \"world\", \"#2\");\n LL +     println!(\"Hello {} {}\", \"world\", \"#2\");\n-   | \n+   |\n \n error: using `print!()` with a format string that ends in a single newline\n   --> $DIR/print_with_newline.rs:11:5\n@@ -45,7 +45,7 @@ help: use `println!` instead\n    |\n LL -     print!(\"{}/n\", 1265);\n LL +     println!(\"{}\", 1265);\n-   | \n+   |\n \n error: using `print!()` with a format string that ends in a single newline\n   --> $DIR/print_with_newline.rs:12:5\n@@ -57,7 +57,7 @@ help: use `println!` instead\n    |\n LL -     print!(\"/n\");\n LL +     println!();\n-   | \n+   |\n \n error: using `print!()` with a format string that ends in a single newline\n   --> $DIR/print_with_newline.rs:31:5\n@@ -69,7 +69,7 @@ help: use `println!` instead\n    |\n LL -     print!(\"//n\"); // should fail\n LL +     println!(\"/\"); // should fail\n-   | \n+   |\n \n error: using `print!()` with a format string that ends in a single newline\n   --> $DIR/print_with_newline.rs:38:5\n@@ -111,7 +111,7 @@ help: use `println!` instead\n    |\n LL -     print!(\"/r/n\"); //~ ERROR\n LL +     println!(\"/r\"); //~ ERROR\n-   | \n+   |\n \n error: using `print!()` with a format string that ends in a single newline\n   --> $DIR/print_with_newline.rs:51:5\n@@ -123,7 +123,7 @@ help: use `println!` instead\n    |\n LL -     print!(\"foo/rbar/n\") // ~ ERROR\n LL +     println!(\"foo/rbar\") // ~ ERROR\n-   | \n+   |\n \n error: aborting due to 10 previous errors\n "}, {"sha": "8f151e620a25eb9c6059e6256789679df83349d5", "filename": "src/tools/clippy/tests/ui/unnecessary_iter_cloned.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/6fc412fb73e64c22e028b082d05c4b31c6b96a17/src%2Ftools%2Fclippy%2Ftests%2Fui%2Funnecessary_iter_cloned.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6fc412fb73e64c22e028b082d05c4b31c6b96a17/src%2Ftools%2Fclippy%2Ftests%2Fui%2Funnecessary_iter_cloned.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui%2Funnecessary_iter_cloned.stderr?ref=6fc412fb73e64c22e028b082d05c4b31c6b96a17", "patch": "@@ -13,7 +13,7 @@ help: remove this `&`\n    |\n LL -         let other = match get_file_path(&t) {\n LL +         let other = match get_file_path(t) {\n-   | \n+   |\n \n error: unnecessary use of `copied`\n   --> $DIR/unnecessary_iter_cloned.rs:46:22\n@@ -29,7 +29,7 @@ help: remove this `&`\n    |\n LL -         let other = match get_file_path(&t) {\n LL +         let other = match get_file_path(t) {\n-   | \n+   |\n \n error: aborting due to 2 previous errors\n "}, {"sha": "243b4599dba427ccc2c657014b473aef7a4ed750", "filename": "src/tools/clippy/tests/ui/unnecessary_to_owned.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6fc412fb73e64c22e028b082d05c4b31c6b96a17/src%2Ftools%2Fclippy%2Ftests%2Fui%2Funnecessary_to_owned.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6fc412fb73e64c22e028b082d05c4b31c6b96a17/src%2Ftools%2Fclippy%2Ftests%2Fui%2Funnecessary_to_owned.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui%2Funnecessary_to_owned.stderr?ref=6fc412fb73e64c22e028b082d05c4b31c6b96a17", "patch": "@@ -489,7 +489,7 @@ help: remove this `&`\n    |\n LL -         let path = match get_file_path(&t) {\n LL +         let path = match get_file_path(t) {\n-   | \n+   |\n \n error: unnecessary use of `to_vec`\n   --> $DIR/unnecessary_to_owned.rs:221:14"}, {"sha": "3c5ec91d3e0fb8f3a6459b0cbfe2acd1d0c859a3", "filename": "src/tools/clippy/tests/ui/write_literal.stderr", "status": "modified", "additions": 11, "deletions": 11, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/6fc412fb73e64c22e028b082d05c4b31c6b96a17/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fwrite_literal.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6fc412fb73e64c22e028b082d05c4b31c6b96a17/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fwrite_literal.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fwrite_literal.stderr?ref=6fc412fb73e64c22e028b082d05c4b31c6b96a17", "patch": "@@ -9,7 +9,7 @@ help: try this\n    |\n LL -     write!(v, \"Hello {}\", \"world\");\n LL +     write!(v, \"Hello world\");\n-   | \n+   |\n \n error: literal with an empty format string\n   --> $DIR/write_literal.rs:31:39\n@@ -21,7 +21,7 @@ help: try this\n    |\n LL -     writeln!(v, \"Hello {} {}\", world, \"world\");\n LL +     writeln!(v, \"Hello {} world\", world);\n-   | \n+   |\n \n error: literal with an empty format string\n   --> $DIR/write_literal.rs:32:29\n@@ -33,7 +33,7 @@ help: try this\n    |\n LL -     writeln!(v, \"Hello {}\", \"world\");\n LL +     writeln!(v, \"Hello world\");\n-   | \n+   |\n \n error: literal with an empty format string\n   --> $DIR/write_literal.rs:37:28\n@@ -45,7 +45,7 @@ help: try this\n    |\n LL -     writeln!(v, \"{0} {1}\", \"hello\", \"world\");\n LL +     writeln!(v, \"hello {1}\", \"world\");\n-   | \n+   |\n \n error: literal with an empty format string\n   --> $DIR/write_literal.rs:37:37\n@@ -57,7 +57,7 @@ help: try this\n    |\n LL -     writeln!(v, \"{0} {1}\", \"hello\", \"world\");\n LL +     writeln!(v, \"{0} world\", \"hello\");\n-   | \n+   |\n \n error: literal with an empty format string\n   --> $DIR/write_literal.rs:38:28\n@@ -69,7 +69,7 @@ help: try this\n    |\n LL -     writeln!(v, \"{1} {0}\", \"hello\", \"world\");\n LL +     writeln!(v, \"{1} hello\", \"world\");\n-   | \n+   |\n \n error: literal with an empty format string\n   --> $DIR/write_literal.rs:38:37\n@@ -81,7 +81,7 @@ help: try this\n    |\n LL -     writeln!(v, \"{1} {0}\", \"hello\", \"world\");\n LL +     writeln!(v, \"world {0}\", \"hello\");\n-   | \n+   |\n \n error: literal with an empty format string\n   --> $DIR/write_literal.rs:41:32\n@@ -93,7 +93,7 @@ help: try this\n    |\n LL -     writeln!(v, \"{foo} {bar}\", foo = \"hello\", bar = \"world\");\n LL +     writeln!(v, \"hello {bar}\", bar = \"world\");\n-   | \n+   |\n \n error: literal with an empty format string\n   --> $DIR/write_literal.rs:41:47\n@@ -105,7 +105,7 @@ help: try this\n    |\n LL -     writeln!(v, \"{foo} {bar}\", foo = \"hello\", bar = \"world\");\n LL +     writeln!(v, \"{foo} world\", foo = \"hello\");\n-   | \n+   |\n \n error: literal with an empty format string\n   --> $DIR/write_literal.rs:42:32\n@@ -117,7 +117,7 @@ help: try this\n    |\n LL -     writeln!(v, \"{bar} {foo}\", foo = \"hello\", bar = \"world\");\n LL +     writeln!(v, \"{bar} hello\", bar = \"world\");\n-   | \n+   |\n \n error: literal with an empty format string\n   --> $DIR/write_literal.rs:42:47\n@@ -129,7 +129,7 @@ help: try this\n    |\n LL -     writeln!(v, \"{bar} {foo}\", foo = \"hello\", bar = \"world\");\n LL +     writeln!(v, \"world {foo}\", foo = \"hello\");\n-   | \n+   |\n \n error: aborting due to 11 previous errors\n "}, {"sha": "9ff297069c402c3876e0678e4498919571d0f821", "filename": "src/tools/clippy/tests/ui/write_literal_2.stderr", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/6fc412fb73e64c22e028b082d05c4b31c6b96a17/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fwrite_literal_2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6fc412fb73e64c22e028b082d05c4b31c6b96a17/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fwrite_literal_2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fwrite_literal_2.stderr?ref=6fc412fb73e64c22e028b082d05c4b31c6b96a17", "patch": "@@ -9,7 +9,7 @@ help: try this\n    |\n LL -     writeln!(v, \"{}\", \"{hello}\");\n LL +     writeln!(v, \"{{hello}}\");\n-   | \n+   |\n \n error: literal with an empty format string\n   --> $DIR/write_literal_2.rs:10:24\n@@ -21,7 +21,7 @@ help: try this\n    |\n LL -     writeln!(v, r\"{}\", r\"{hello}\");\n LL +     writeln!(v, r\"{{hello}}\");\n-   | \n+   |\n \n error: literal with an empty format string\n   --> $DIR/write_literal_2.rs:11:23\n@@ -33,7 +33,7 @@ help: try this\n    |\n LL -     writeln!(v, \"{}\", '/'');\n LL +     writeln!(v, \"'\");\n-   | \n+   |\n \n error: literal with an empty format string\n   --> $DIR/write_literal_2.rs:12:23\n@@ -45,7 +45,7 @@ help: try this\n    |\n LL -     writeln!(v, \"{}\", '\"');\n LL +     writeln!(v, \"/\"\");\n-   | \n+   |\n \n error: literal with an empty format string\n   --> $DIR/write_literal_2.rs:14:24\n@@ -57,7 +57,7 @@ help: try this\n    |\n LL -     writeln!(v, r\"{}\", '/'');\n LL +     writeln!(v, r\"'\");\n-   | \n+   |\n \n error: literal with an empty format string\n   --> $DIR/write_literal_2.rs:18:9"}, {"sha": "5f55431be0bd99a0abe28999aff27b3c668d1022", "filename": "src/tools/clippy/tests/ui/write_with_newline.stderr", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/6fc412fb73e64c22e028b082d05c4b31c6b96a17/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fwrite_with_newline.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6fc412fb73e64c22e028b082d05c4b31c6b96a17/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fwrite_with_newline.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fwrite_with_newline.stderr?ref=6fc412fb73e64c22e028b082d05c4b31c6b96a17", "patch": "@@ -9,7 +9,7 @@ help: use `writeln!()` instead\n    |\n LL -     write!(v, \"Hello/n\");\n LL +     writeln!(v, \"Hello\");\n-   | \n+   |\n \n error: using `write!()` with a format string that ends in a single newline\n   --> $DIR/write_with_newline.rs:14:5\n@@ -21,7 +21,7 @@ help: use `writeln!()` instead\n    |\n LL -     write!(v, \"Hello {}/n\", \"world\");\n LL +     writeln!(v, \"Hello {}\", \"world\");\n-   | \n+   |\n \n error: using `write!()` with a format string that ends in a single newline\n   --> $DIR/write_with_newline.rs:15:5\n@@ -33,7 +33,7 @@ help: use `writeln!()` instead\n    |\n LL -     write!(v, \"Hello {} {}/n\", \"world\", \"#2\");\n LL +     writeln!(v, \"Hello {} {}\", \"world\", \"#2\");\n-   | \n+   |\n \n error: using `write!()` with a format string that ends in a single newline\n   --> $DIR/write_with_newline.rs:16:5\n@@ -45,7 +45,7 @@ help: use `writeln!()` instead\n    |\n LL -     write!(v, \"{}/n\", 1265);\n LL +     writeln!(v, \"{}\", 1265);\n-   | \n+   |\n \n error: using `write!()` with a format string that ends in a single newline\n   --> $DIR/write_with_newline.rs:17:5\n@@ -57,7 +57,7 @@ help: use `writeln!()` instead\n    |\n LL -     write!(v, \"/n\");\n LL +     writeln!(v);\n-   | \n+   |\n \n error: using `write!()` with a format string that ends in a single newline\n   --> $DIR/write_with_newline.rs:36:5\n@@ -69,7 +69,7 @@ help: use `writeln!()` instead\n    |\n LL -     write!(v, \"//n\"); // should fail\n LL +     writeln!(v, \"/\"); // should fail\n-   | \n+   |\n \n error: using `write!()` with a format string that ends in a single newline\n   --> $DIR/write_with_newline.rs:43:5\n@@ -115,7 +115,7 @@ help: use `writeln!()` instead\n    |\n LL -     write!(v, \"/r/n\"); //~ ERROR\n LL +     writeln!(v, \"/r\"); //~ ERROR\n-   | \n+   |\n \n error: using `write!()` with a format string that ends in a single newline\n   --> $DIR/write_with_newline.rs:58:5\n@@ -127,7 +127,7 @@ help: use `writeln!()` instead\n    |\n LL -     write!(v, \"foo/rbar/n\");\n LL +     writeln!(v, \"foo/rbar\");\n-   | \n+   |\n \n error: aborting due to 10 previous errors\n "}]}