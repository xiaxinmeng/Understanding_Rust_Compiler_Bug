{"sha": "500ad266199ee2ea30ff022e3247e8a11979fec3", "node_id": "C_kwDOAAsO6NoAKDUwMGFkMjY2MTk5ZWUyZWEzMGZmMDIyZTMyNDdlOGExMTk3OWZlYzM", "commit": {"author": {"name": "joboet", "email": "jonasboettiger@icloud.com", "date": "2023-03-18T19:09:13Z"}, "committer": {"name": "joboet", "email": "jonasboettiger@icloud.com", "date": "2023-03-19T11:53:04Z"}, "message": "tidy: ignore files in .gitignore in mir opt check", "tree": {"sha": "472ab6f670efa7c81977944ebe8c56bf8bd2ab45", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/472ab6f670efa7c81977944ebe8c56bf8bd2ab45"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/500ad266199ee2ea30ff022e3247e8a11979fec3", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEVuz3PwcqDyifNyYbcE4BSbAZSzwFAmQW96EACgkQcE4BSbAZ\nSzwPkQ//cdV+prv8/AapLXvxrvkrbSLGaYs16laU6s6CjC4V2qdepIZrSygdX8YG\nIWvzo+ss3amV/3O8oZWvtEZ7orewjuTTFUFJ3a/e4omiPQ+PNMzuo39lg3dzeEhs\nGYAfvklUft0e4h8rN+S2kjY7AfiZoDjuwq8ZXRk8LzzdWRN8cv1purnvHJhoIJRw\n0ubHftv6hxoz+rxu2f+qpc/Xwe89ZzXFBbesO/rTOCL67NA/9FdHr/xkAe6ZLbNE\nrjgbyWDioL0pElk1xiGjaxZ+5MT1ktGGSpzlPRq+4xgjFIJee+jdxRVzdv3l/F8r\nhTe4Cwmill7bYIzUMk1305MvMvT7uIw0RzRyiy4Ho/rFoH2JnUxIqPOOHY+6sWyE\neiGzsgoK6kmlg6geHuUJsRJJkP7obVW8bmxdr698DSY+utxlKr8b1HPjLok36YBi\nSZe5+cBwew9wcuh6EWVaQJvZ1NOFSI4ydiKoqL0QjcFeueIKzmAWUMsOOo4OzdNk\nxbaxc2yIuf+VV5tuf+jGA5kZ5e4TIs0T9P3Jy9wogs35jetqODEZuLK31cCdtf3v\nodDFzCvLLmgMeZQFMqbAd5JuzDxhy/jOFmbqI8jx66HpohdG9r9mA6ij/neVsjtz\n/7nVw4yVjlV0eBNToXfSkwBy5Wy9OUyWw2syKMnhk/xFywW2vAE=\n=lpL0\n-----END PGP SIGNATURE-----", "payload": "tree 472ab6f670efa7c81977944ebe8c56bf8bd2ab45\nparent ab9bb3ea368b2412531a3e8c07ba73d1dd690134\nauthor joboet <jonasboettiger@icloud.com> 1679166553 +0100\ncommitter joboet <jonasboettiger@icloud.com> 1679226784 +0100\n\ntidy: ignore files in .gitignore in mir opt check\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/500ad266199ee2ea30ff022e3247e8a11979fec3", "html_url": "https://github.com/rust-lang/rust/commit/500ad266199ee2ea30ff022e3247e8a11979fec3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/500ad266199ee2ea30ff022e3247e8a11979fec3/comments", "author": {"login": "joboet", "id": 25721079, "node_id": "MDQ6VXNlcjI1NzIxMDc5", "avatar_url": "https://avatars.githubusercontent.com/u/25721079?v=4", "gravatar_id": "", "url": "https://api.github.com/users/joboet", "html_url": "https://github.com/joboet", "followers_url": "https://api.github.com/users/joboet/followers", "following_url": "https://api.github.com/users/joboet/following{/other_user}", "gists_url": "https://api.github.com/users/joboet/gists{/gist_id}", "starred_url": "https://api.github.com/users/joboet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/joboet/subscriptions", "organizations_url": "https://api.github.com/users/joboet/orgs", "repos_url": "https://api.github.com/users/joboet/repos", "events_url": "https://api.github.com/users/joboet/events{/privacy}", "received_events_url": "https://api.github.com/users/joboet/received_events", "type": "User", "site_admin": false}, "committer": {"login": "joboet", "id": 25721079, "node_id": "MDQ6VXNlcjI1NzIxMDc5", "avatar_url": "https://avatars.githubusercontent.com/u/25721079?v=4", "gravatar_id": "", "url": "https://api.github.com/users/joboet", "html_url": "https://github.com/joboet", "followers_url": "https://api.github.com/users/joboet/followers", "following_url": "https://api.github.com/users/joboet/following{/other_user}", "gists_url": "https://api.github.com/users/joboet/gists{/gist_id}", "starred_url": "https://api.github.com/users/joboet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/joboet/subscriptions", "organizations_url": "https://api.github.com/users/joboet/orgs", "repos_url": "https://api.github.com/users/joboet/repos", "events_url": "https://api.github.com/users/joboet/events{/privacy}", "received_events_url": "https://api.github.com/users/joboet/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ab9bb3ea368b2412531a3e8c07ba73d1dd690134", "url": "https://api.github.com/repos/rust-lang/rust/commits/ab9bb3ea368b2412531a3e8c07ba73d1dd690134", "html_url": "https://github.com/rust-lang/rust/commit/ab9bb3ea368b2412531a3e8c07ba73d1dd690134"}], "stats": {"total": 41, "additions": 22, "deletions": 19}, "files": [{"sha": "b316e9e9009fcad18fee617ac01f0cc158227eb5", "filename": "src/tools/tidy/src/mir_opt_tests.rs", "status": "modified", "additions": 22, "deletions": 19, "changes": 41, "blob_url": "https://github.com/rust-lang/rust/blob/500ad266199ee2ea30ff022e3247e8a11979fec3/src%2Ftools%2Ftidy%2Fsrc%2Fmir_opt_tests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/500ad266199ee2ea30ff022e3247e8a11979fec3/src%2Ftools%2Ftidy%2Fsrc%2Fmir_opt_tests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Ftidy%2Fsrc%2Fmir_opt_tests.rs?ref=500ad266199ee2ea30ff022e3247e8a11979fec3", "patch": "@@ -3,19 +3,24 @@\n use std::collections::HashSet;\n use std::path::{Path, PathBuf};\n \n+use crate::walk::walk_no_read;\n+\n fn check_unused_files(path: &Path, bless: bool, bad: &mut bool) {\n     let mut rs_files = Vec::<PathBuf>::new();\n     let mut output_files = HashSet::<PathBuf>::new();\n-    let files = walkdir::WalkDir::new(&path.join(\"mir-opt\")).into_iter();\n \n-    for file in files.filter_map(Result::ok).filter(|e| e.file_type().is_file()) {\n-        let filepath = file.path();\n-        if filepath.extension() == Some(\"rs\".as_ref()) {\n-            rs_files.push(filepath.to_owned());\n-        } else {\n-            output_files.insert(filepath.to_owned());\n-        }\n-    }\n+    walk_no_read(\n+        &[&path.join(\"mir-opt\")],\n+        |path| path.file_name() == Some(\"README.md\".as_ref()),\n+        &mut |file| {\n+            let filepath = file.path();\n+            if filepath.extension() == Some(\"rs\".as_ref()) {\n+                rs_files.push(filepath.to_owned());\n+            } else {\n+                output_files.insert(filepath.to_owned());\n+            }\n+        },\n+    );\n \n     for file in rs_files {\n         for bw in [32, 64] {\n@@ -26,16 +31,14 @@ fn check_unused_files(path: &Path, bless: bool, bad: &mut bool) {\n     }\n \n     for extra in output_files {\n-        if extra.file_name() != Some(\"README.md\".as_ref()) {\n-            if !bless {\n-                tidy_error!(\n-                    bad,\n-                    \"the following output file is not associated with any mir-opt test, you can remove it: {}\",\n-                    extra.display()\n-                );\n-            } else {\n-                let _ = std::fs::remove_file(extra);\n-            }\n+        if !bless {\n+            tidy_error!(\n+                bad,\n+                \"the following output file is not associated with any mir-opt test, you can remove it: {}\",\n+                extra.display()\n+            );\n+        } else {\n+            let _ = std::fs::remove_file(extra);\n         }\n     }\n }"}]}