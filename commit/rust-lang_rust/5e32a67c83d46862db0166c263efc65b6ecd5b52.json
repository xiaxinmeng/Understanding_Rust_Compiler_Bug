{"sha": "5e32a67c83d46862db0166c263efc65b6ecd5b52", "node_id": "MDY6Q29tbWl0NzI0NzEyOjVlMzJhNjdjODNkNDY4NjJkYjAxNjZjMjYzZWZjNjViNmVjZDViNTI=", "commit": {"author": {"name": "Veetaha", "email": "gerzoh1@gmail.com", "date": "2020-03-14T01:01:14Z"}, "committer": {"name": "Veetaha", "email": "gerzoh1@gmail.com", "date": "2020-03-14T01:01:14Z"}, "message": "vscode-postrefactor: more logging and better error handling", "tree": {"sha": "9fbc81a8cfef4d9d76b29d23d63c6a3126ee8f8e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9fbc81a8cfef4d9d76b29d23d63c6a3126ee8f8e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5e32a67c83d46862db0166c263efc65b6ecd5b52", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5e32a67c83d46862db0166c263efc65b6ecd5b52", "html_url": "https://github.com/rust-lang/rust/commit/5e32a67c83d46862db0166c263efc65b6ecd5b52", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5e32a67c83d46862db0166c263efc65b6ecd5b52/comments", "author": null, "committer": null, "parents": [{"sha": "d7b46e0527cd7b52845f37cffc57cbae4ba0b945", "url": "https://api.github.com/repos/rust-lang/rust/commits/d7b46e0527cd7b52845f37cffc57cbae4ba0b945", "html_url": "https://github.com/rust-lang/rust/commit/d7b46e0527cd7b52845f37cffc57cbae4ba0b945"}], "stats": {"total": 54, "additions": 31, "deletions": 23}, "files": [{"sha": "1b497edd7007813f975be4716164169cd353f382", "filename": "editors/code/package-lock.json", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5e32a67c83d46862db0166c263efc65b6ecd5b52/editors%2Fcode%2Fpackage-lock.json", "raw_url": "https://github.com/rust-lang/rust/raw/5e32a67c83d46862db0166c263efc65b6ecd5b52/editors%2Fcode%2Fpackage-lock.json", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fpackage-lock.json?ref=5e32a67c83d46862db0166c263efc65b6ecd5b52", "patch": "@@ -1,6 +1,6 @@\n {\n     \"name\": \"rust-analyzer\",\n-    \"version\": \"0.2.20200309-nightly\",\n+    \"version\": \"0.2.20200309\",\n     \"lockfileVersion\": 1,\n     \"requires\": true,\n     \"dependencies\": {"}, {"sha": "f63e1d20e850f8834bf2503c39df6b103095d0f7", "filename": "editors/code/src/config.ts", "status": "modified", "additions": 17, "deletions": 19, "changes": 36, "blob_url": "https://github.com/rust-lang/rust/blob/5e32a67c83d46862db0166c263efc65b6ecd5b52/editors%2Fcode%2Fsrc%2Fconfig.ts", "raw_url": "https://github.com/rust-lang/rust/raw/5e32a67c83d46862db0166c263efc65b6ecd5b52/editors%2Fcode%2Fsrc%2Fconfig.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Fconfig.ts?ref=5e32a67c83d46862db0166c263efc65b6ecd5b52", "patch": "@@ -1,7 +1,7 @@\n import * as os from \"os\";\n import * as vscode from 'vscode';\n import { ArtifactSource } from \"./installation/interfaces\";\n-import { log } from \"./util\";\n+import { log, vscodeReloadWindow } from \"./util\";\n \n const RA_LSP_DEBUG = process.env.__RA_LSP_SERVER_DEBUG;\n \n@@ -43,20 +43,20 @@ export class Config {\n     ]\n         .map(opt => `${this.rootSection}.${opt}`);\n \n+    readonly packageJsonVersion = vscode\n+        .extensions\n+        .getExtension(this.extensionId)!\n+        .packageJSON\n+        .version as string; // n.n.YYYYMMDD[-nightly]\n+\n     /**\n      * Either `nightly` or `YYYY-MM-DD` (i.e. `stable` release)\n      */\n     readonly extensionReleaseTag: string = (() => {\n-        const packageJsonVersion = vscode\n-            .extensions\n-            .getExtension(this.extensionId)!\n-            .packageJSON\n-            .version as string; // n.n.YYYYMMDD[-nightly]\n-\n-        if (packageJsonVersion.endsWith(NIGHTLY_TAG)) return NIGHTLY_TAG;\n+        if (this.packageJsonVersion.endsWith(NIGHTLY_TAG)) return NIGHTLY_TAG;\n \n         const realVersionRegexp = /^\\d+\\.\\d+\\.(\\d{4})(\\d{2})(\\d{2})/;\n-        const [, yyyy, mm, dd] = packageJsonVersion.match(realVersionRegexp)!;\n+        const [, yyyy, mm, dd] = this.packageJsonVersion.match(realVersionRegexp)!;\n \n         return `${yyyy}-${mm}-${dd}`;\n     })();\n@@ -72,7 +72,10 @@ export class Config {\n         this.cfg = vscode.workspace.getConfiguration(this.rootSection);\n         const enableLogging = this.cfg.get(\"trace.extension\") as boolean;\n         log.setEnabled(enableLogging);\n-        log.debug(\"Using configuration:\", this.cfg);\n+        log.debug(\n+            \"Extension version:\", this.packageJsonVersion,\n+            \"using configuration:\", this.cfg\n+        );\n     }\n \n     private async onConfigChange(event: vscode.ConfigurationChangeEvent) {\n@@ -90,7 +93,7 @@ export class Config {\n         );\n \n         if (userResponse === \"Reload now\") {\n-            vscode.commands.executeCommand(\"workbench.action.reloadWindow\");\n+            await vscodeReloadWindow();\n         }\n     }\n \n@@ -180,16 +183,11 @@ export class Config {\n     }\n \n     readonly installedNightlyExtensionReleaseDate = new DateStorage(\n-        \"rust-analyzer-installed-nightly-extension-release-date\",\n+        \"installed-nightly-extension-release-date\",\n         this.ctx.globalState\n     );\n-    readonly serverReleaseDate = new DateStorage(\n-        \"rust-analyzer-server-release-date\",\n-        this.ctx.globalState\n-    );\n-    readonly serverReleaseTag = new Storage<null | string>(\n-        \"rust-analyzer-release-tag\", this.ctx.globalState, null\n-    );\n+    readonly serverReleaseDate = new DateStorage(\"server-release-date\", this.ctx.globalState);\n+    readonly serverReleaseTag = new Storage<null | string>(\"server-release-tag\", this.ctx.globalState, null);\n \n     // We don't do runtime config validation here for simplicity. More on stackoverflow:\n     // https://stackoverflow.com/questions/60135780/what-is-the-best-way-to-type-check-the-configuration-for-vscode-extension"}, {"sha": "0d69b8d0cfe4541b8fef3c4894dfb74937753340", "filename": "editors/code/src/installation/extension.ts", "status": "modified", "additions": 13, "deletions": 3, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/5e32a67c83d46862db0166c263efc65b6ecd5b52/editors%2Fcode%2Fsrc%2Finstallation%2Fextension.ts", "raw_url": "https://github.com/rust-lang/rust/raw/5e32a67c83d46862db0166c263efc65b6ecd5b52/editors%2Fcode%2Fsrc%2Finstallation%2Fextension.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Finstallation%2Fextension.ts?ref=5e32a67c83d46862db0166c263efc65b6ecd5b52", "patch": "@@ -44,10 +44,20 @@ export async function ensureProperExtensionVersion(config: Config): Promise<neve\n \n     const currentExtReleaseDate = config.installedNightlyExtensionReleaseDate.get();\n \n-    assert(currentExtReleaseDate !== null, \"nightly release date must've been set during installation\");\n+    if (currentExtReleaseDate === null) {\n+        void vscode.window.showErrorMessage(\n+            \"Nightly release date must've been set during the installation. \" +\n+            \"Did you download and install the nightly .vsix package manually?\"\n+        );\n+        throw new Error(\"Nightly release date was not set in globalStorage\");\n+    }\n \n-    const hoursSinceLastUpdate = diffInHours(currentExtReleaseDate, new Date());\n-    log.debug(`Current rust-analyzer nightly was downloaded ${hoursSinceLastUpdate} hours ago`);\n+    const dateNow = new Date;\n+    const hoursSinceLastUpdate = diffInHours(currentExtReleaseDate, dateNow);\n+    log.debug(\n+        \"Current rust-analyzer nightly was downloaded\", hoursSinceLastUpdate,\n+        \"hours ago, namely:\", currentExtReleaseDate, \"and now is\", dateNow\n+    );\n \n     if (hoursSinceLastUpdate < HEURISTIC_NIGHTLY_RELEASE_PERIOD_IN_HOURS) {\n         return;"}]}