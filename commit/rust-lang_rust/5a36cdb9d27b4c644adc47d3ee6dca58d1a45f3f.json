{"sha": "5a36cdb9d27b4c644adc47d3ee6dca58d1a45f3f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjVhMzZjZGI5ZDI3YjRjNjQ0YWRjNDdkM2VlNmRjYTU4ZDFhNDVmM2Y=", "commit": {"author": {"name": "Yuki Okushi", "email": "jtitor@2k36.org", "date": "2021-08-06T02:21:32Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-08-06T02:21:32Z"}, "message": "Rollup merge of #87756 - Amanieu:no_profiler_runtime, r=jackh726\n\nAdd back -Zno-profiler-runtime\n\nThis was removed by #85284 in favor of `-Zprofiler-runtime=<name>`.However the suggested `-Zprofiler-runtime=None` doesn't work because`None` is treated as a crate name.", "tree": {"sha": "072c542b337c54e789c73b07737d0eb06526bb98", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/072c542b337c54e789c73b07737d0eb06526bb98"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5a36cdb9d27b4c644adc47d3ee6dca58d1a45f3f", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJhDJysCRBK7hj4Ov3rIwAAz8wIABbMFIwQgDb3U8UW6pTIItFv\nusFn1RndGZRizh6KYRL44XCUrJ+36116sX29xjPsIYc1EP25N1TRq40fHAylFe14\nRUd+Fo/otyWZmFSS+h/V10fcbjEcUmVKECiQcl7fg9vExitx+YmmnX+4ESfhuqSv\nMiOGPUboroOhpLX881vKIIHMes1bBjdMF35etdSw5iKQvHfY7CUt8373sITPm/Jk\nZ16TH9YM8tYCAvJM5/IXzYdpzYf+3D15ZqQvyvq+94ZQcyyK5I2JYetmwaRzVNp1\nUcNERu1wb9PjrbXnLK7Nn1i92htuSyPYHQQfuY/3z60Gra8kKmZ5RqC5O80xqTc=\n=64Hq\n-----END PGP SIGNATURE-----\n", "payload": "tree 072c542b337c54e789c73b07737d0eb06526bb98\nparent 71ad503fd9ce83d47aba75e0569598ee9406df78\nparent 1247f9b829eee452335b9b1b396561666a00fa2d\nauthor Yuki Okushi <jtitor@2k36.org> 1628216492 +0900\ncommitter GitHub <noreply@github.com> 1628216492 +0900\n\nRollup merge of #87756 - Amanieu:no_profiler_runtime, r=jackh726\n\nAdd back -Zno-profiler-runtime\n\nThis was removed by #85284 in favor of `-Zprofiler-runtime=<name>`.However the suggested `-Zprofiler-runtime=None` doesn't work because`None` is treated as a crate name.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5a36cdb9d27b4c644adc47d3ee6dca58d1a45f3f", "html_url": "https://github.com/rust-lang/rust/commit/5a36cdb9d27b4c644adc47d3ee6dca58d1a45f3f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5a36cdb9d27b4c644adc47d3ee6dca58d1a45f3f/comments", "author": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "71ad503fd9ce83d47aba75e0569598ee9406df78", "url": "https://api.github.com/repos/rust-lang/rust/commits/71ad503fd9ce83d47aba75e0569598ee9406df78", "html_url": "https://github.com/rust-lang/rust/commit/71ad503fd9ce83d47aba75e0569598ee9406df78"}, {"sha": "1247f9b829eee452335b9b1b396561666a00fa2d", "url": "https://api.github.com/repos/rust-lang/rust/commits/1247f9b829eee452335b9b1b396561666a00fa2d", "html_url": "https://github.com/rust-lang/rust/commit/1247f9b829eee452335b9b1b396561666a00fa2d"}], "stats": {"total": 23, "additions": 12, "deletions": 11}, "files": [{"sha": "b896143400698745985faaabf8bda2b2109ebeb9", "filename": "compiler/rustc_interface/src/tests.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/5a36cdb9d27b4c644adc47d3ee6dca58d1a45f3f/compiler%2Frustc_interface%2Fsrc%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5a36cdb9d27b4c644adc47d3ee6dca58d1a45f3f/compiler%2Frustc_interface%2Fsrc%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_interface%2Fsrc%2Ftests.rs?ref=5a36cdb9d27b4c644adc47d3ee6dca58d1a45f3f", "patch": "@@ -740,6 +740,7 @@ fn test_debugging_options_tracking_hash() {\n     tracked!(new_llvm_pass_manager, Some(true));\n     tracked!(no_generate_arange_section, true);\n     tracked!(no_link, true);\n+    tracked!(no_profiler_runtime, true);\n     tracked!(osx_rpath_install_name, true);\n     tracked!(panic_abort_tests, true);\n     tracked!(plt, Some(true));\n@@ -748,7 +749,7 @@ fn test_debugging_options_tracking_hash() {\n     tracked!(print_fuel, Some(\"abc\".to_string()));\n     tracked!(profile, true);\n     tracked!(profile_emit, Some(PathBuf::from(\"abc\")));\n-    tracked!(profiler_runtime, None);\n+    tracked!(profiler_runtime, \"abc\".to_string());\n     tracked!(relax_elf_relocations, Some(true));\n     tracked!(relro_level, Some(RelroLevel::Full));\n     tracked!(simulate_remapped_rust_src_base, Some(PathBuf::from(\"/rustc/abc\")));"}, {"sha": "394cb8389357f2f02633f06c2cf2f4f58b2a9748", "filename": "compiler/rustc_metadata/src/creader.rs", "status": "modified", "additions": 4, "deletions": 6, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/5a36cdb9d27b4c644adc47d3ee6dca58d1a45f3f/compiler%2Frustc_metadata%2Fsrc%2Fcreader.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5a36cdb9d27b4c644adc47d3ee6dca58d1a45f3f/compiler%2Frustc_metadata%2Fsrc%2Fcreader.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_metadata%2Fsrc%2Fcreader.rs?ref=5a36cdb9d27b4c644adc47d3ee6dca58d1a45f3f", "patch": "@@ -777,19 +777,17 @@ impl<'a> CrateLoader<'a> {\n     }\n \n     fn inject_profiler_runtime(&mut self, krate: &ast::Crate) {\n-        let profiler_runtime = &self.sess.opts.debugging_opts.profiler_runtime;\n-\n-        if !(profiler_runtime.is_some()\n-            && (self.sess.instrument_coverage()\n+        if self.sess.opts.debugging_opts.no_profiler_runtime\n+            || !(self.sess.instrument_coverage()\n                 || self.sess.opts.debugging_opts.profile\n-                || self.sess.opts.cg.profile_generate.enabled()))\n+                || self.sess.opts.cg.profile_generate.enabled())\n         {\n             return;\n         }\n \n         info!(\"loading profiler\");\n \n-        let name = Symbol::intern(profiler_runtime.as_ref().unwrap());\n+        let name = Symbol::intern(&self.sess.opts.debugging_opts.profiler_runtime);\n         if name == sym::profiler_builtins && self.sess.contains_name(&krate.attrs, sym::no_core) {\n             self.sess.err(\n                 \"`profiler_builtins` crate (required by compiler options) \\"}, {"sha": "cf8577a26cf714fd6c31b056e753b3c51208982f", "filename": "compiler/rustc_metadata/src/locator.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/5a36cdb9d27b4c644adc47d3ee6dca58d1a45f3f/compiler%2Frustc_metadata%2Fsrc%2Flocator.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5a36cdb9d27b4c644adc47d3ee6dca58d1a45f3f/compiler%2Frustc_metadata%2Fsrc%2Flocator.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_metadata%2Fsrc%2Flocator.rs?ref=5a36cdb9d27b4c644adc47d3ee6dca58d1a45f3f", "patch": "@@ -1103,8 +1103,8 @@ impl CrateError {\n                         if sess.is_nightly_build() {\n                             err.help(\"consider building the standard library from source with `cargo build -Zbuild-std`\");\n                         }\n-                    } else if Some(crate_name)\n-                        == sess.opts.debugging_opts.profiler_runtime.as_deref().map(Symbol::intern)\n+                    } else if crate_name\n+                        == Symbol::intern(&sess.opts.debugging_opts.profiler_runtime)\n                     {\n                         err.note(&\"the compiler may have been built without the profiler runtime\");\n                     }"}, {"sha": "95a7b0994b8ade388b041d22c910f94d1265f10f", "filename": "compiler/rustc_session/src/options.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/5a36cdb9d27b4c644adc47d3ee6dca58d1a45f3f/compiler%2Frustc_session%2Fsrc%2Foptions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5a36cdb9d27b4c644adc47d3ee6dca58d1a45f3f/compiler%2Frustc_session%2Fsrc%2Foptions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_session%2Fsrc%2Foptions.rs?ref=5a36cdb9d27b4c644adc47d3ee6dca58d1a45f3f", "patch": "@@ -1172,6 +1172,8 @@ options! {\n         \"compile without linking\"),\n     no_parallel_llvm: bool = (false, parse_no_flag, [UNTRACKED],\n         \"run LLVM in non-parallel mode (while keeping codegen-units and ThinLTO)\"),\n+    no_profiler_runtime: bool = (false, parse_no_flag, [TRACKED],\n+        \"prevent automatic injection of the profiler_builtins crate\"),\n     normalize_docs: bool = (false, parse_bool, [TRACKED],\n         \"normalize associated items in rustdoc when generating documentation\"),\n     osx_rpath_install_name: bool = (false, parse_bool, [TRACKED],\n@@ -1217,8 +1219,8 @@ options! {\n     profile_emit: Option<PathBuf> = (None, parse_opt_pathbuf, [TRACKED],\n         \"file path to emit profiling data at runtime when using 'profile' \\\n         (default based on relative source path)\"),\n-    profiler_runtime: Option<String> = (Some(String::from(\"profiler_builtins\")), parse_opt_string, [TRACKED],\n-        \"name of the profiler runtime crate to automatically inject, or None to disable\"),\n+    profiler_runtime: String = (String::from(\"profiler_builtins\"), parse_string, [TRACKED],\n+        \"name of the profiler runtime crate to automatically inject (default: `profiler_builtins`)\"),\n     query_dep_graph: bool = (false, parse_bool, [UNTRACKED],\n         \"enable queries of the dependency graph for regression testing (default: no)\"),\n     query_stats: bool = (false, parse_bool, [UNTRACKED],"}]}