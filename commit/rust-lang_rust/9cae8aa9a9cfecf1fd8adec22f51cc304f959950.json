{"sha": "9cae8aa9a9cfecf1fd8adec22f51cc304f959950", "node_id": "MDY6Q29tbWl0NzI0NzEyOjljYWU4YWE5YTljZmVjZjFmZDhhZGVjMjJmNTFjYzMwNGY5NTk5NTA=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2019-06-21T13:47:13Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2019-06-21T13:47:13Z"}, "message": "Auto merge of #4225 - jeremystucki:refactoring, r=flip1995\n\nRemove needless lifetimes\n\nchangelog: none", "tree": {"sha": "20121de1352a967d5fda2ace523c79c7949268b1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/20121de1352a967d5fda2ace523c79c7949268b1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9cae8aa9a9cfecf1fd8adec22f51cc304f959950", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9cae8aa9a9cfecf1fd8adec22f51cc304f959950", "html_url": "https://github.com/rust-lang/rust/commit/9cae8aa9a9cfecf1fd8adec22f51cc304f959950", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9cae8aa9a9cfecf1fd8adec22f51cc304f959950/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9617f970aca37b9763c4cfb34bc643289ceac4fd", "url": "https://api.github.com/repos/rust-lang/rust/commits/9617f970aca37b9763c4cfb34bc643289ceac4fd", "html_url": "https://github.com/rust-lang/rust/commit/9617f970aca37b9763c4cfb34bc643289ceac4fd"}, {"sha": "6dc8084788ed39e2c1814a858bb4b1d842a0862d", "url": "https://api.github.com/repos/rust-lang/rust/commits/6dc8084788ed39e2c1814a858bb4b1d842a0862d", "html_url": "https://github.com/rust-lang/rust/commit/6dc8084788ed39e2c1814a858bb4b1d842a0862d"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "9f6cfe04c1b17b5a9725e549cdc95e1d024f321b", "filename": "clippy_lints/src/consts.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9cae8aa9a9cfecf1fd8adec22f51cc304f959950/clippy_lints%2Fsrc%2Fconsts.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9cae8aa9a9cfecf1fd8adec22f51cc304f959950/clippy_lints%2Fsrc%2Fconsts.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fconsts.rs?ref=9cae8aa9a9cfecf1fd8adec22f51cc304f959950", "patch": "@@ -154,7 +154,7 @@ impl Constant {\n }\n \n /// Parses a `LitKind` to a `Constant`.\n-pub fn lit_to_constant<'tcx>(lit: &LitKind, ty: Ty<'tcx>) -> Constant {\n+pub fn lit_to_constant(lit: &LitKind, ty: Ty<'_>) -> Constant {\n     use syntax::ast::*;\n \n     match *lit {"}, {"sha": "95eae7b84278037bdce16f4af18cd1b3e2ce44bd", "filename": "clippy_lints/src/missing_inline.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9cae8aa9a9cfecf1fd8adec22f51cc304f959950/clippy_lints%2Fsrc%2Fmissing_inline.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9cae8aa9a9cfecf1fd8adec22f51cc304f959950/clippy_lints%2Fsrc%2Fmissing_inline.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmissing_inline.rs?ref=9cae8aa9a9cfecf1fd8adec22f51cc304f959950", "patch": "@@ -68,7 +68,7 @@ fn check_missing_inline_attrs(cx: &LateContext<'_, '_>, attrs: &[ast::Attribute]\n     }\n }\n \n-fn is_executable<'a, 'tcx>(cx: &LateContext<'a, 'tcx>) -> bool {\n+fn is_executable(cx: &LateContext<'_, '_>) -> bool {\n     use rustc::session::config::CrateType;\n \n     cx.tcx.sess.crate_types.get().iter().any(|t: &CrateType| match t {"}, {"sha": "f8c8da0a36c265d20a21eee70c95b55813735637", "filename": "clippy_lints/src/utils/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9cae8aa9a9cfecf1fd8adec22f51cc304f959950/clippy_lints%2Fsrc%2Futils%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9cae8aa9a9cfecf1fd8adec22f51cc304f959950/clippy_lints%2Fsrc%2Futils%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Futils%2Fmod.rs?ref=9cae8aa9a9cfecf1fd8adec22f51cc304f959950", "patch": "@@ -342,7 +342,7 @@ pub fn resolve_node(cx: &LateContext<'_, '_>, qpath: &QPath, id: HirId) -> Res {\n \n /// Returns the method names and argument list of nested method call expressions that make up\n /// `expr`.\n-pub fn method_calls<'a>(expr: &'a Expr, max_depth: usize) -> (Vec<Symbol>, Vec<&'a [Expr]>) {\n+pub fn method_calls(expr: &Expr, max_depth: usize) -> (Vec<Symbol>, Vec<&[Expr]>) {\n     let mut method_names = Vec::with_capacity(max_depth);\n     let mut arg_lists = Vec::with_capacity(max_depth);\n "}]}