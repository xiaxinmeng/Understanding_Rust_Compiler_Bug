{"sha": "3a8f81aac94ccb4051410232e4f39b89ed6dae4e", "node_id": "C_kwDOAAsO6NoAKDNhOGY4MWFhYzk0Y2NiNDA1MTQxMDIzMmU0ZjM5Yjg5ZWQ2ZGFlNGU", "commit": {"author": {"name": "David Tolnay", "email": "dtolnay@gmail.com", "date": "2022-04-26T22:16:23Z"}, "committer": {"name": "David Tolnay", "email": "dtolnay@gmail.com", "date": "2022-04-27T20:22:41Z"}, "message": "Make [e]println macros eagerly drop temporaries (for backport)", "tree": {"sha": "c0e6d0536e8ffdce4fb29c8494beb5d111be0775", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c0e6d0536e8ffdce4fb29c8494beb5d111be0775"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3a8f81aac94ccb4051410232e4f39b89ed6dae4e", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEERijF2Cz/ZdaBZKeK+boUO5X/bYIFAmJpphcACgkQ+boUO5X/\nbYJJUA//Zr70qE9b57fdbGWCd2jJnRJNx3r4tC5I6hsk9flXe2z7wa945pZDwtlt\nk+I7Lfe882hP/kXtJjYdXx0CjI5tnu8fl8WYqtxYO06AAh0xZuca+dBvFO9dAGv2\nc0KeEGNWhfbMxI6epnLQiaBN56E5sKLHLAT5uEXv+z00WwTDuxH2oUbFGpQ3gxLm\nyHvbGzL/pfoTINQG8ZQ0cQmNzdXa96J09LTOW+8krPGB9vxV9mM2JPmapdZVqaNV\nRlWoaCYk5QdBmNFK7Ae338CuuPfrT/AVusRFOD1yKvkxhAefUUM9nomhLmWUJeRK\ne4XwBF3KWcv7xOLictsGHLmWvj41ZyTovXcMGlr3a+qE4m7Cb5mp9urO8L/FTzHW\ntpCNSFUbcNoBjJZoXRgubndP/onH/PVhTPPMv6FwF50G/8nHgheHNhE3fevzAmMO\nwoKlwY9fGnx+1LPsJiYng/xRjoN398FWYlzficg1x3CxXTYl0wyIqOhzIqvWNT0F\nzImpLHqnytpyS0hVp6WObrlNOshK0V6RiSb50FkeOjuzGfDHlIJFbH6XCdHxZ8nv\nSG51VKmYcJH4S8WBtEwDGB6a9XfWZ7M6FCSy7rGaej1CXATuxvPXcIJgbUeV/H7y\n1ZimFMK8Qjv7K7bDQhkt9PiQhcUaWq1pUAlncj+HB3A/hMcoTUg=\n=BwfK\n-----END PGP SIGNATURE-----", "payload": "tree c0e6d0536e8ffdce4fb29c8494beb5d111be0775\nparent 69a5d2481e856a5a18885390b8cf6950b9ff8dd3\nauthor David Tolnay <dtolnay@gmail.com> 1651011383 -0700\ncommitter David Tolnay <dtolnay@gmail.com> 1651090961 -0700\n\nMake [e]println macros eagerly drop temporaries (for backport)\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3a8f81aac94ccb4051410232e4f39b89ed6dae4e", "html_url": "https://github.com/rust-lang/rust/commit/3a8f81aac94ccb4051410232e4f39b89ed6dae4e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3a8f81aac94ccb4051410232e4f39b89ed6dae4e/comments", "author": {"login": "dtolnay", "id": 1940490, "node_id": "MDQ6VXNlcjE5NDA0OTA=", "avatar_url": "https://avatars.githubusercontent.com/u/1940490?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dtolnay", "html_url": "https://github.com/dtolnay", "followers_url": "https://api.github.com/users/dtolnay/followers", "following_url": "https://api.github.com/users/dtolnay/following{/other_user}", "gists_url": "https://api.github.com/users/dtolnay/gists{/gist_id}", "starred_url": "https://api.github.com/users/dtolnay/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dtolnay/subscriptions", "organizations_url": "https://api.github.com/users/dtolnay/orgs", "repos_url": "https://api.github.com/users/dtolnay/repos", "events_url": "https://api.github.com/users/dtolnay/events{/privacy}", "received_events_url": "https://api.github.com/users/dtolnay/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dtolnay", "id": 1940490, "node_id": "MDQ6VXNlcjE5NDA0OTA=", "avatar_url": "https://avatars.githubusercontent.com/u/1940490?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dtolnay", "html_url": "https://github.com/dtolnay", "followers_url": "https://api.github.com/users/dtolnay/followers", "following_url": "https://api.github.com/users/dtolnay/following{/other_user}", "gists_url": "https://api.github.com/users/dtolnay/gists{/gist_id}", "starred_url": "https://api.github.com/users/dtolnay/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dtolnay/subscriptions", "organizations_url": "https://api.github.com/users/dtolnay/orgs", "repos_url": "https://api.github.com/users/dtolnay/repos", "events_url": "https://api.github.com/users/dtolnay/events{/privacy}", "received_events_url": "https://api.github.com/users/dtolnay/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "69a5d2481e856a5a18885390b8cf6950b9ff8dd3", "url": "https://api.github.com/repos/rust-lang/rust/commits/69a5d2481e856a5a18885390b8cf6950b9ff8dd3", "html_url": "https://github.com/rust-lang/rust/commit/69a5d2481e856a5a18885390b8cf6950b9ff8dd3"}], "stats": {"total": 18, "additions": 9, "deletions": 9}, "files": [{"sha": "732acaa4186e8341adb9d3450b4d62ff004df614", "filename": "library/std/src/macros.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/3a8f81aac94ccb4051410232e4f39b89ed6dae4e/library%2Fstd%2Fsrc%2Fmacros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3a8f81aac94ccb4051410232e4f39b89ed6dae4e/library%2Fstd%2Fsrc%2Fmacros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fmacros.rs?ref=3a8f81aac94ccb4051410232e4f39b89ed6dae4e", "patch": "@@ -99,9 +99,9 @@ macro_rules! println {\n     () => {\n         $crate::print!(\"\\n\")\n     };\n-    ($($arg:tt)*) => {\n-        $crate::io::_print($crate::format_args_nl!($($arg)*))\n-    };\n+    ($($arg:tt)*) => {{\n+        $crate::io::_print($crate::format_args_nl!($($arg)*));\n+    }};\n }\n \n /// Prints to the standard error.\n@@ -164,9 +164,9 @@ macro_rules! eprintln {\n     () => {\n         $crate::eprint!(\"\\n\")\n     };\n-    ($($arg:tt)*) => {\n-        $crate::io::_eprint($crate::format_args_nl!($($arg)*))\n-    };\n+    ($($arg:tt)*) => {{\n+        $crate::io::_eprint($crate::format_args_nl!($($arg)*));\n+    }};\n }\n \n /// Prints and returns the value of a given expression for quick and dirty"}, {"sha": "3af37955f238079de77ae656b08b2694d33ba5ba", "filename": "src/test/pretty/dollar-crate.pp", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3a8f81aac94ccb4051410232e4f39b89ed6dae4e/src%2Ftest%2Fpretty%2Fdollar-crate.pp", "raw_url": "https://github.com/rust-lang/rust/raw/3a8f81aac94ccb4051410232e4f39b89ed6dae4e/src%2Ftest%2Fpretty%2Fdollar-crate.pp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fpretty%2Fdollar-crate.pp?ref=3a8f81aac94ccb4051410232e4f39b89ed6dae4e", "patch": "@@ -9,5 +9,5 @@\n // pp-exact:dollar-crate.pp\n \n fn main() {\n-    ::std::io::_print(::core::fmt::Arguments::new_v1(&[\"rust\\n\"], &[]));\n+    { ::std::io::_print(::core::fmt::Arguments::new_v1(&[\"rust\\n\"], &[])); };\n }"}, {"sha": "43272248c280eb5d6a6555efbb14695b29c1d392", "filename": "src/test/ui/macros/trace-macro.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3a8f81aac94ccb4051410232e4f39b89ed6dae4e/src%2Ftest%2Fui%2Fmacros%2Ftrace-macro.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/3a8f81aac94ccb4051410232e4f39b89ed6dae4e/src%2Ftest%2Fui%2Fmacros%2Ftrace-macro.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmacros%2Ftrace-macro.stderr?ref=3a8f81aac94ccb4051410232e4f39b89ed6dae4e", "patch": "@@ -5,5 +5,5 @@ LL |     println!(\"Hello, World!\");\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: expanding `println! { \"Hello, World!\" }`\n-   = note: to `$crate :: io :: _print($crate :: format_args_nl! (\"Hello, World!\"))`\n+   = note: to `{ $crate :: io :: _print($crate :: format_args_nl! (\"Hello, World!\")) ; }`\n "}, {"sha": "fc0430d06fa1c03354a6875b6040d6793548f9b2", "filename": "src/test/ui/pattern/usefulness/tuple-struct-nonexhaustive.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3a8f81aac94ccb4051410232e4f39b89ed6dae4e/src%2Ftest%2Fui%2Fpattern%2Fusefulness%2Ftuple-struct-nonexhaustive.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/3a8f81aac94ccb4051410232e4f39b89ed6dae4e/src%2Ftest%2Fui%2Fpattern%2Fusefulness%2Ftuple-struct-nonexhaustive.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fpattern%2Fusefulness%2Ftuple-struct-nonexhaustive.stderr?ref=3a8f81aac94ccb4051410232e4f39b89ed6dae4e", "patch": "@@ -12,7 +12,7 @@ LL | struct Foo(isize, isize);\n    = note: the matched value is of type `Foo`\n help: ensure that all possible cases are being handled by adding a match arm with a wildcard pattern or an explicit pattern as shown\n    |\n-LL ~         Foo(2, b) => println!(\"{}\", b),\n+LL ~         Foo(2, b) => println!(\"{}\", b)\n LL +         Foo(_, _) => todo!()\n    |\n "}]}