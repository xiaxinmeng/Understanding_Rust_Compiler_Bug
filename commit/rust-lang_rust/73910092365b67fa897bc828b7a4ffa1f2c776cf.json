{"sha": "73910092365b67fa897bc828b7a4ffa1f2c776cf", "node_id": "MDY6Q29tbWl0NzI0NzEyOjczOTEwMDkyMzY1YjY3ZmE4OTdiYzgyOGI3YTRmZmExZjJjNzc2Y2Y=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-08-29T03:32:58Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-08-29T03:32:58Z"}, "message": "Rollup merge of #63980 - DutchGhost:master, r=cramertj\n\nadd missing `#[repr(C)]` on the Slices union\n\nAdds the `#[repr(C)]` attribute to the `Slices` union used to convert an `&str` into a `&[u8]`.\nWithout the attribute, the union has an unspecified layout: https://doc.rust-lang.org/reference/types/union.html, so performing the 'transmute' is unsound without the attribute (as far as I understand).\n\nThe `Repr` union, used for converting a raw ptr + len to a slice has this attribute as well:\nhttps://github.com/rust-lang/rust/blob/master/src/libcore/ptr/mod.rs#L211-#L216", "tree": {"sha": "5c5f821faca76cb44f2cc891746a1cbff1f2fa4b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5c5f821faca76cb44f2cc891746a1cbff1f2fa4b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/73910092365b67fa897bc828b7a4ffa1f2c776cf", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJdZ0dqCRBK7hj4Ov3rIwAAdHIIAHQM+GADTm863mrvkKcYNR0I\nnm5/FWSpBL7ZuaDwMP2Ye6l08ErTCrvoxnGNWfqho28eYyFi8rOTTG9umG+YGi42\nCqocoWgnM2FkEw3yqUtBUhdtGmJT9BIIt8OxW4eAF35Us8YQn54bM/GBQ2ji1mSX\nY4WsHYcEtbsWko1ytxRRzNKl3pY8lJGg/W89Bkq6VO/V74qWnHt55xbwEQ+w56aS\nUMKDpS9h/Bm67rqAoXSq84niK1VBFyCP8LTc8jvzIB/uFgi3Bz3zvJ/dG6oeHWQG\ncPcI/2Q9lg3BB3OEC9rG41K5/x1CkG8Zbh85nswaeBSvlKjCvdw4pa7lS92ooO4=\n=8n6S\n-----END PGP SIGNATURE-----\n", "payload": "tree 5c5f821faca76cb44f2cc891746a1cbff1f2fa4b\nparent e3028dbda8bf32495efe78f268461ff489bb905d\nparent 080fdb8184cea898f48818312a7645007c8b7594\nauthor Mazdak Farrokhzad <twingoow@gmail.com> 1567049578 +0200\ncommitter GitHub <noreply@github.com> 1567049578 +0200\n\nRollup merge of #63980 - DutchGhost:master, r=cramertj\n\nadd missing `#[repr(C)]` on the Slices union\n\nAdds the `#[repr(C)]` attribute to the `Slices` union used to convert an `&str` into a `&[u8]`.\nWithout the attribute, the union has an unspecified layout: https://doc.rust-lang.org/reference/types/union.html, so performing the 'transmute' is unsound without the attribute (as far as I understand).\n\nThe `Repr` union, used for converting a raw ptr + len to a slice has this attribute as well:\nhttps://github.com/rust-lang/rust/blob/master/src/libcore/ptr/mod.rs#L211-#L216\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/73910092365b67fa897bc828b7a4ffa1f2c776cf", "html_url": "https://github.com/rust-lang/rust/commit/73910092365b67fa897bc828b7a4ffa1f2c776cf", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/73910092365b67fa897bc828b7a4ffa1f2c776cf/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e3028dbda8bf32495efe78f268461ff489bb905d", "url": "https://api.github.com/repos/rust-lang/rust/commits/e3028dbda8bf32495efe78f268461ff489bb905d", "html_url": "https://github.com/rust-lang/rust/commit/e3028dbda8bf32495efe78f268461ff489bb905d"}, {"sha": "080fdb8184cea898f48818312a7645007c8b7594", "url": "https://api.github.com/repos/rust-lang/rust/commits/080fdb8184cea898f48818312a7645007c8b7594", "html_url": "https://github.com/rust-lang/rust/commit/080fdb8184cea898f48818312a7645007c8b7594"}], "stats": {"total": 1, "additions": 1, "deletions": 0}, "files": [{"sha": "752c372e93e3a46a192d8a8375934c44177501dc", "filename": "src/libcore/str/mod.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/73910092365b67fa897bc828b7a4ffa1f2c776cf/src%2Flibcore%2Fstr%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/73910092365b67fa897bc828b7a4ffa1f2c776cf/src%2Flibcore%2Fstr%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fstr%2Fmod.rs?ref=73910092365b67fa897bc828b7a4ffa1f2c776cf", "patch": "@@ -2170,6 +2170,7 @@ impl str {\n     #[inline(always)]\n     #[rustc_const_unstable(feature=\"const_str_as_bytes\")]\n     pub const fn as_bytes(&self) -> &[u8] {\n+        #[repr(C)]\n         union Slices<'a> {\n             str: &'a str,\n             slice: &'a [u8],"}]}