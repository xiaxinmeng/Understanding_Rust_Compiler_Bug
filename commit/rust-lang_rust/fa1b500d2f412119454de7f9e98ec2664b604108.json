{"sha": "fa1b500d2f412119454de7f9e98ec2664b604108", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZhMWI1MDBkMmY0MTIxMTk0NTRkZTdmOWU5OGVjMjY2NGI2MDQxMDg=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2021-01-28T17:55:54Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-01-28T17:55:54Z"}, "message": "Merge #7482\n\n7482: block_def_map: add a few macro tests r=jonas-schievink a=jonas-schievink\n\nbors r+\n\nCo-authored-by: Jonas Schievink <jonasschievink@gmail.com>", "tree": {"sha": "9ea03ce47285e8774053cf646aae408d8a02d918", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9ea03ce47285e8774053cf646aae408d8a02d918"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fa1b500d2f412119454de7f9e98ec2664b604108", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJgEvqqCRBK7hj4Ov3rIwAAdHIIAE++qfUgoU1YtfmKKUJSNiy6\n09jJ4HIbVA/PedWEjtZCxVx51U7Ap8Rsm+JNvzxHWzQZWl9P5SUZQ7TCWXANHV13\njXjSFhX9gg/hhV8uLDxmgwRwW36cColWEBU5DivdCKTT3lau9wPrqF9vcMFxwCRX\nOUGXcg9eaSR5t5K/n5aaT/UAOzwdt+6yeJGoentCOyGoDW1FJW27FTuNnSbfz7Si\n0PZWq9gaHzJ2J4cGPsPoVU/j77oS+8sKjJCoqAJTtm+KKrDeY4UqjuiKedwL6P6O\nKjQOvx9gS41yOx8UK45RBr17N42jPWQbo9PIxxRbBdQyhjprEusCTL0Lw0zkdHA=\n=0HLs\n-----END PGP SIGNATURE-----\n", "payload": "tree 9ea03ce47285e8774053cf646aae408d8a02d918\nparent 703e6bfdb6d7db87318a8f7c3b5c8c96283ee379\nparent 7177045a67f5a420188d4e677b31b4e763a4ab3e\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1611856554 +0000\ncommitter GitHub <noreply@github.com> 1611856554 +0000\n\nMerge #7482\n\n7482: block_def_map: add a few macro tests r=jonas-schievink a=jonas-schievink\n\nbors r+\n\nCo-authored-by: Jonas Schievink <jonasschievink@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fa1b500d2f412119454de7f9e98ec2664b604108", "html_url": "https://github.com/rust-lang/rust/commit/fa1b500d2f412119454de7f9e98ec2664b604108", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fa1b500d2f412119454de7f9e98ec2664b604108/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "703e6bfdb6d7db87318a8f7c3b5c8c96283ee379", "url": "https://api.github.com/repos/rust-lang/rust/commits/703e6bfdb6d7db87318a8f7c3b5c8c96283ee379", "html_url": "https://github.com/rust-lang/rust/commit/703e6bfdb6d7db87318a8f7c3b5c8c96283ee379"}, {"sha": "7177045a67f5a420188d4e677b31b4e763a4ab3e", "url": "https://api.github.com/repos/rust-lang/rust/commits/7177045a67f5a420188d4e677b31b4e763a4ab3e", "html_url": "https://github.com/rust-lang/rust/commit/7177045a67f5a420188d4e677b31b4e763a4ab3e"}], "stats": {"total": 63, "additions": 63, "deletions": 0}, "files": [{"sha": "6cc65951352cc0ac6449ab5a911988051e929d57", "filename": "crates/hir_def/src/nameres/tests/block.rs", "status": "modified", "additions": 63, "deletions": 0, "changes": 63, "blob_url": "https://github.com/rust-lang/rust/blob/fa1b500d2f412119454de7f9e98ec2664b604108/crates%2Fhir_def%2Fsrc%2Fnameres%2Ftests%2Fblock.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fa1b500d2f412119454de7f9e98ec2664b604108/crates%2Fhir_def%2Fsrc%2Fnameres%2Ftests%2Fblock.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_def%2Fsrc%2Fnameres%2Ftests%2Fblock.rs?ref=fa1b500d2f412119454de7f9e98ec2664b604108", "patch": "@@ -121,3 +121,66 @@ struct Struct {}\n         \"#]],\n     );\n }\n+\n+#[test]\n+fn legacy_macro_items() {\n+    // Checks that legacy-scoped `macro_rules!` from parent namespaces are resolved and expanded\n+    // correctly.\n+    check_at(\n+        r#\"\n+macro_rules! hit {\n+    () => {\n+        struct Hit {}\n+    }\n+}\n+\n+fn f() {\n+    hit!();\n+    $0\n+}\n+\"#,\n+        expect![[r#\"\n+            block scope\n+            Hit: t\n+            crate\n+            f: v\n+        \"#]],\n+    );\n+}\n+\n+#[test]\n+fn macro_resolve() {\n+    check_at(\n+        r#\"\n+//- /lib.rs crate:lib deps:core\n+use core::mark;\n+\n+fn f() {\n+    fn nested() {\n+        mark::hit!(Hit);\n+        $0\n+    }\n+}\n+//- /core.rs crate:core\n+pub mod mark {\n+    #[macro_export]\n+    macro_rules! _hit {\n+        ($name:ident) => {\n+            struct $name {}\n+        }\n+    }\n+\n+    pub use crate::_hit as hit;\n+}\n+\"#,\n+        expect![[r#\"\n+            block scope\n+            Hit: t\n+            block scope\n+            nested: v\n+            crate\n+            f: v\n+            mark: t\n+        \"#]],\n+    );\n+}"}]}