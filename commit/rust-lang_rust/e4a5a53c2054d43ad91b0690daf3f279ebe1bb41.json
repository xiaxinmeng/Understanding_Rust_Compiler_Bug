{"sha": "e4a5a53c2054d43ad91b0690daf3f279ebe1bb41", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU0YTVhNTNjMjA1NGQ0M2FkOTFiMDY5MGRhZjNmMjc5ZWJlMWJiNDE=", "commit": {"author": {"name": "Martin Carton", "email": "cartonmartin+github@gmail.com", "date": "2016-06-06T14:54:24Z"}, "committer": {"name": "Martin Carton", "email": "cartonmartin+github@gmail.com", "date": "2016-06-06T14:54:24Z"}, "message": "Merge pull request #988 from oli-obk/metadata3\n\nsimply parse unknown json-strings as strings instead of erroring", "tree": {"sha": "224b8083f5a4506f86e99fab836486765fc077a2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/224b8083f5a4506f86e99fab836486765fc077a2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e4a5a53c2054d43ad91b0690daf3f279ebe1bb41", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e4a5a53c2054d43ad91b0690daf3f279ebe1bb41", "html_url": "https://github.com/rust-lang/rust/commit/e4a5a53c2054d43ad91b0690daf3f279ebe1bb41", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e4a5a53c2054d43ad91b0690daf3f279ebe1bb41/comments", "author": {"login": "mcarton", "id": 3751788, "node_id": "MDQ6VXNlcjM3NTE3ODg=", "avatar_url": "https://avatars.githubusercontent.com/u/3751788?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mcarton", "html_url": "https://github.com/mcarton", "followers_url": "https://api.github.com/users/mcarton/followers", "following_url": "https://api.github.com/users/mcarton/following{/other_user}", "gists_url": "https://api.github.com/users/mcarton/gists{/gist_id}", "starred_url": "https://api.github.com/users/mcarton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mcarton/subscriptions", "organizations_url": "https://api.github.com/users/mcarton/orgs", "repos_url": "https://api.github.com/users/mcarton/repos", "events_url": "https://api.github.com/users/mcarton/events{/privacy}", "received_events_url": "https://api.github.com/users/mcarton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "mcarton", "id": 3751788, "node_id": "MDQ6VXNlcjM3NTE3ODg=", "avatar_url": "https://avatars.githubusercontent.com/u/3751788?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mcarton", "html_url": "https://github.com/mcarton", "followers_url": "https://api.github.com/users/mcarton/followers", "following_url": "https://api.github.com/users/mcarton/following{/other_user}", "gists_url": "https://api.github.com/users/mcarton/gists{/gist_id}", "starred_url": "https://api.github.com/users/mcarton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mcarton/subscriptions", "organizations_url": "https://api.github.com/users/mcarton/orgs", "repos_url": "https://api.github.com/users/mcarton/repos", "events_url": "https://api.github.com/users/mcarton/events{/privacy}", "received_events_url": "https://api.github.com/users/mcarton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a2c427470bb6c21ca0f0cafd65b9dd182917c3be", "url": "https://api.github.com/repos/rust-lang/rust/commits/a2c427470bb6c21ca0f0cafd65b9dd182917c3be", "html_url": "https://github.com/rust-lang/rust/commit/a2c427470bb6c21ca0f0cafd65b9dd182917c3be"}, {"sha": "8d5524f1daf9af3c5e6892c5af91bda49e589835", "url": "https://api.github.com/repos/rust-lang/rust/commits/8d5524f1daf9af3c5e6892c5af91bda49e589835", "html_url": "https://github.com/rust-lang/rust/commit/8d5524f1daf9af3c5e6892c5af91bda49e589835"}], "stats": {"total": 18, "additions": 12, "deletions": 6}, "files": [{"sha": "b183db84d57ec16c464694172352cf90769b62b5", "filename": "clippy_lints/src/utils/cargo.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e4a5a53c2054d43ad91b0690daf3f279ebe1bb41/clippy_lints%2Fsrc%2Futils%2Fcargo.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e4a5a53c2054d43ad91b0690daf3f279ebe1bb41/clippy_lints%2Fsrc%2Futils%2Fcargo.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Futils%2Fcargo.rs?ref=e4a5a53c2054d43ad91b0690daf3f279ebe1bb41", "patch": "@@ -32,7 +32,7 @@ pub struct Dependency {\n     optional: bool,\n     uses_default_features: bool,\n     features: Vec<String>,\n-    target: Option<()>,\n+    target: Option<String>,\n }\n \n #[derive(RustcDecodable, Debug)]"}, {"sha": "a42610e17328546864cd76f33357c904335acaf4", "filename": "src/main.rs", "status": "modified", "additions": 11, "deletions": 5, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/e4a5a53c2054d43ad91b0690daf3f279ebe1bb41/src%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e4a5a53c2054d43ad91b0690daf3f279ebe1bb41/src%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fmain.rs?ref=e4a5a53c2054d43ad91b0690daf3f279ebe1bb41", "patch": "@@ -128,9 +128,13 @@ pub fn main() {\n             let args = std::env::args().skip(2);\n             if let Some(first) = target.kind.get(0) {\n                 if target.kind.len() > 1 || first.ends_with(\"lib\") {\n-                    process(std::iter::once(\"--lib\".to_owned()).chain(args), &dep_path, &sys_root);\n+                    if let Err(code) = process(std::iter::once(\"--lib\".to_owned()).chain(args), &dep_path, &sys_root) {\n+                        std::process::exit(code);\n+                    }\n                 } else if first == \"bin\" {\n-                    process(vec![\"--bin\".to_owned(), target.name].into_iter().chain(args), &dep_path, &sys_root);\n+                    if let Err(code) = process(vec![\"--bin\".to_owned(), target.name].into_iter().chain(args), &dep_path, &sys_root) {\n+                        std::process::exit(code);\n+                    }\n                 }\n             } else {\n                 panic!(\"badly formatted cargo metadata: target::kind is an empty array\");\n@@ -152,7 +156,7 @@ pub fn main() {\n     }\n }\n \n-fn process<P, I>(old_args: I, dep_path: P, sysroot: &str)\n+fn process<P, I>(old_args: I, dep_path: P, sysroot: &str) -> Result<(), i32>\n     where P: AsRef<Path>, I: Iterator<Item=String> {\n \n     let mut args = vec![\"rustc\".to_owned()];\n@@ -178,7 +182,9 @@ fn process<P, I>(old_args: I, dep_path: P, sysroot: &str)\n         .spawn().expect(\"could not run cargo\")\n         .wait().expect(\"failed to wait for cargo?\");\n \n-    if let Some(code) = exit_status.code() {\n-        std::process::exit(code);\n+    if exit_status.success() {\n+        Ok(())\n+    } else {\n+        Err(exit_status.code().unwrap_or(-1))\n     }\n }"}]}