{"sha": "a96c5f208f92d8b7397f1fec94ac5fb4d6a8b9d2", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE5NmM1ZjIwOGY5MmQ4YjczOTdmMWZlYzk0YWM1ZmI0ZDZhOGI5ZDI=", "commit": {"author": {"name": "Jeffrey Yasskin", "email": "jyasskin@gmail.com", "date": "2010-07-18T23:39:10Z"}, "committer": {"name": "Graydon Hoare", "email": "graydon@pobox.com", "date": "2010-07-19T17:23:45Z"}, "message": "Make the build system run dsymutil so we can debug llvm-produced binaries on OSX.", "tree": {"sha": "0ab6ee392b526c88af54bae194150eae36a738b5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0ab6ee392b526c88af54bae194150eae36a738b5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a96c5f208f92d8b7397f1fec94ac5fb4d6a8b9d2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a96c5f208f92d8b7397f1fec94ac5fb4d6a8b9d2", "html_url": "https://github.com/rust-lang/rust/commit/a96c5f208f92d8b7397f1fec94ac5fb4d6a8b9d2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a96c5f208f92d8b7397f1fec94ac5fb4d6a8b9d2/comments", "author": {"login": "jyasskin", "id": 83420, "node_id": "MDQ6VXNlcjgzNDIw", "avatar_url": "https://avatars.githubusercontent.com/u/83420?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jyasskin", "html_url": "https://github.com/jyasskin", "followers_url": "https://api.github.com/users/jyasskin/followers", "following_url": "https://api.github.com/users/jyasskin/following{/other_user}", "gists_url": "https://api.github.com/users/jyasskin/gists{/gist_id}", "starred_url": "https://api.github.com/users/jyasskin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jyasskin/subscriptions", "organizations_url": "https://api.github.com/users/jyasskin/orgs", "repos_url": "https://api.github.com/users/jyasskin/repos", "events_url": "https://api.github.com/users/jyasskin/events{/privacy}", "received_events_url": "https://api.github.com/users/jyasskin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ca95da8bea639bbc99dfd160db0e58a552c9fa26", "url": "https://api.github.com/repos/rust-lang/rust/commits/ca95da8bea639bbc99dfd160db0e58a552c9fa26", "html_url": "https://github.com/rust-lang/rust/commit/ca95da8bea639bbc99dfd160db0e58a552c9fa26"}], "stats": {"total": 21, "additions": 19, "deletions": 2}, "files": [{"sha": "e7f5d786ad7269b211b6c2b29c9303870a197230", "filename": ".gitignore", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/a96c5f208f92d8b7397f1fec94ac5fb4d6a8b9d2/.gitignore", "raw_url": "https://github.com/rust-lang/rust/raw/a96c5f208f92d8b7397f1fec94ac5fb4d6a8b9d2/.gitignore", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/.gitignore?ref=a96c5f208f92d8b7397f1fec94ac5fb4d6a8b9d2", "patch": "@@ -10,6 +10,7 @@\n *.orig\n *.cmo\n *.cmi\n+*.dSYM\n *.d\n *.o\n *.aux"}, {"sha": "b262ea39e47c87d20ca12a863c724147f868a27f", "filename": "src/Makefile", "status": "modified", "additions": 18, "deletions": 2, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/a96c5f208f92d8b7397f1fec94ac5fb4d6a8b9d2/src%2FMakefile", "raw_url": "https://github.com/rust-lang/rust/raw/a96c5f208f92d8b7397f1fec94ac5fb4d6a8b9d2/src%2FMakefile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2FMakefile?ref=a96c5f208f92d8b7397f1fec94ac5fb4d6a8b9d2", "patch": "@@ -26,6 +26,11 @@ CFG_VALGRIND :=\n CFG_LLVM_CONFIG ?= llvm-config\n CFG_BOOT_FLAGS := $(FLAGS)\n \n+# On Darwin, we need to run dsymutil so the debugging information ends\n+# up in the right place.  On other platforms, it automatically gets\n+# embedded into the executable, so use a no-op command.\n+DSYMUTIL := true\n+\n ifeq ($(CFG_OSTYPE), Linux)\n   CFG_RUNTIME := librustrt.so\n   CFG_STDLIB := libstd.so\n@@ -56,6 +61,7 @@ ifeq ($(CFG_OSTYPE), Darwin)\n   # approaches welcome!\n   CFG_GCC_CFLAGS += -m32\n   CFG_GCC_LINK_FLAGS += -m32\n+  DSYMUTIL := dsymutil\n endif\n \n ifneq ($(findstring MINGW,$(CFG_OSTYPE)),)\n@@ -651,9 +657,17 @@ test/bench/shootout/%.x86$(CFG_EXE_SUFFIX): test/bench/shootout/%.rs $(REQ)\n \t@$(call CFG_ECHO, compile [llvm]: $<)\n \t$(CFG_QUIET)$(LLC) $(CFG_LLC_CFLAGS) -o $@ $<\n \n-%.llvm$(CFG_EXE_SUFFIX): %.s $(CFG_RUNTIME)\n-\t@$(call CFG_ECHO, compile [llvm]: $<)\n+%.o: %.s\n+\t@$(call CFG_ECHO, assemble [llvm]: $<)\n+\t$(CFG_QUIET)gcc $(CFG_GCC_CFLAGS) -o $@ -c $<\n+\n+%.llvm$(CFG_EXE_SUFFIX): %.o $(CFG_RUNTIME)\n+\t@$(call CFG_ECHO, link [llvm]: $<)\n \t$(CFG_QUIET)gcc $(CFG_GCC_CFLAGS) -o $@ $< -L. -lrustrt\n+\t@# dsymutil sometimes fails or prints a warning, but the\n+\t@# program still runs.  Since it simplifies debugging other\n+\t@# programs, I\\'ll live with the noise.\n+\t-$(CFG_QUIET)$(DSYMUTIL) $@\n \n test/run-pass/%.bc: test/run-pass/%.rc $(REQ)\n \t@$(call CFG_ECHO, compile [llvm]: $<)\n@@ -802,6 +816,8 @@ clean:\n \t$(CFG_QUIET)rm -f $(TEST_RFAIL_EXES_LLVM) $(TEST_RFAIL_OUTS_LLVM)\n \t$(CFG_QUIET)rm -f $(TEST_CFAIL_EXES_X86) $(TEST_CFAIL_OUTS_X86)\n \t$(CFG_QUIET)rm -f $(TEST_CFAIL_EXES_LLVM) $(TEST_CFAIL_OUTS_LLVM)\n+\t$(CFG_QUIET)rm -rf $(TEST_RPASS_EXES_LLVM:.llvm=.llvm.dSYM)\n+\t$(CFG_QUIET)rm -rf $(TEST_RFAIL_EXES_LLVM:.llvm=.llvm.dSYM)\n \t$(CFG_QUIET)rm -Rf $(PKG_NAME)-*.tar.gz dist\n \t$(CFG_QUIET)rm -f $(foreach ext,cmx cmi cmo cma o a d exe,\\\n                         $(wildcard boot/*/*.$(ext) boot/*/*/*.$(ext)))"}]}