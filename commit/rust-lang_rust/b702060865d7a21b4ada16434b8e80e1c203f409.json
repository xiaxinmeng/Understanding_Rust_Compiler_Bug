{"sha": "b702060865d7a21b4ada16434b8e80e1c203f409", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI3MDIwNjA4NjVkN2EyMWI0YWRhMTY0MzRiOGU4MGUxYzIwM2Y0MDk=", "commit": {"author": {"name": "Alexis Bourget", "email": "alexis.bourget@gmail.com", "date": "2020-10-12T22:52:13Z"}, "committer": {"name": "Alexis Bourget", "email": "alexis.bourget@gmail.com", "date": "2020-11-30T20:18:55Z"}, "message": "Intra doc links for iterator adapters", "tree": {"sha": "fae74e6439e945a9243afe668d1a1c1427b4a009", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fae74e6439e945a9243afe668d1a1c1427b4a009"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b702060865d7a21b4ada16434b8e80e1c203f409", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b702060865d7a21b4ada16434b8e80e1c203f409", "html_url": "https://github.com/rust-lang/rust/commit/b702060865d7a21b4ada16434b8e80e1c203f409", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b702060865d7a21b4ada16434b8e80e1c203f409/comments", "author": {"login": "poliorcetics", "id": 7951708, "node_id": "MDQ6VXNlcjc5NTE3MDg=", "avatar_url": "https://avatars.githubusercontent.com/u/7951708?v=4", "gravatar_id": "", "url": "https://api.github.com/users/poliorcetics", "html_url": "https://github.com/poliorcetics", "followers_url": "https://api.github.com/users/poliorcetics/followers", "following_url": "https://api.github.com/users/poliorcetics/following{/other_user}", "gists_url": "https://api.github.com/users/poliorcetics/gists{/gist_id}", "starred_url": "https://api.github.com/users/poliorcetics/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/poliorcetics/subscriptions", "organizations_url": "https://api.github.com/users/poliorcetics/orgs", "repos_url": "https://api.github.com/users/poliorcetics/repos", "events_url": "https://api.github.com/users/poliorcetics/events{/privacy}", "received_events_url": "https://api.github.com/users/poliorcetics/received_events", "type": "User", "site_admin": false}, "committer": {"login": "poliorcetics", "id": 7951708, "node_id": "MDQ6VXNlcjc5NTE3MDg=", "avatar_url": "https://avatars.githubusercontent.com/u/7951708?v=4", "gravatar_id": "", "url": "https://api.github.com/users/poliorcetics", "html_url": "https://github.com/poliorcetics", "followers_url": "https://api.github.com/users/poliorcetics/followers", "following_url": "https://api.github.com/users/poliorcetics/following{/other_user}", "gists_url": "https://api.github.com/users/poliorcetics/gists{/gist_id}", "starred_url": "https://api.github.com/users/poliorcetics/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/poliorcetics/subscriptions", "organizations_url": "https://api.github.com/users/poliorcetics/orgs", "repos_url": "https://api.github.com/users/poliorcetics/repos", "events_url": "https://api.github.com/users/poliorcetics/events{/privacy}", "received_events_url": "https://api.github.com/users/poliorcetics/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b3b1e0c224eb0ec025a903f58b219513ff5d8807", "url": "https://api.github.com/repos/rust-lang/rust/commits/b3b1e0c224eb0ec025a903f58b219513ff5d8807", "html_url": "https://github.com/rust-lang/rust/commit/b3b1e0c224eb0ec025a903f58b219513ff5d8807"}], "stats": {"total": 7, "additions": 3, "deletions": 4}, "files": [{"sha": "ae3a16b52b6ea5e9e06bbae8c7070a6857c71309", "filename": "Cargo.lock", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b702060865d7a21b4ada16434b8e80e1c203f409/Cargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/b702060865d7a21b4ada16434b8e80e1c203f409/Cargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.lock?ref=b702060865d7a21b4ada16434b8e80e1c203f409", "patch": "@@ -5256,7 +5256,7 @@ dependencies = [\n  \"chrono\",\n  \"lazy_static\",\n  \"matchers\",\n- \"parking_lot 0.11.0\",\n+ \"parking_lot 0.9.0\",\n  \"regex\",\n  \"serde\",\n  \"serde_json\","}, {"sha": "29e191db0f62f6307687685b3587617fc614bd43", "filename": "library/core/src/iter/adapters/flatten.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/b702060865d7a21b4ada16434b8e80e1c203f409/library%2Fcore%2Fsrc%2Fiter%2Fadapters%2Fflatten.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b702060865d7a21b4ada16434b8e80e1c203f409/library%2Fcore%2Fsrc%2Fiter%2Fadapters%2Fflatten.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fiter%2Fadapters%2Fflatten.rs?ref=b702060865d7a21b4ada16434b8e80e1c203f409", "patch": "@@ -120,8 +120,7 @@ where\n /// This `struct` is created by the [`flatten`] method on [`Iterator`]. See its\n /// documentation for more.\n ///\n-/// [`flatten`]: Iterator::flatten\n-/// [`Iterator`]: trait.Iterator.html\n+/// [`flatten`]: Iterator::flatten()\n #[must_use = \"iterators are lazy and do nothing unless consumed\"]\n #[stable(feature = \"iterator_flatten\", since = \"1.29.0\")]\n pub struct Flatten<I: Iterator<Item: IntoIterator>> {"}, {"sha": "b8d3430f91099a82adf33b25d2c0410f2d5c3382", "filename": "library/core/src/iter/adapters/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b702060865d7a21b4ada16434b8e80e1c203f409/library%2Fcore%2Fsrc%2Fiter%2Fadapters%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b702060865d7a21b4ada16434b8e80e1c203f409/library%2Fcore%2Fsrc%2Fiter%2Fadapters%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fiter%2Fadapters%2Fmod.rs?ref=b702060865d7a21b4ada16434b8e80e1c203f409", "patch": "@@ -110,7 +110,7 @@ pub unsafe trait SourceIter {\n     /// * whatever remains in the source after iteration has stopped\n     /// * the memory that has become unused by advancing a consuming iterator\n     ///\n-    /// [`next()`]: Iterator::next\n+    /// [`next()`]: Iterator::next()\n     unsafe fn as_inner(&mut self) -> &mut Self::Source;\n }\n "}]}