{"sha": "3ab4f9a204b130f7372e38ac7f79491478e544fb", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNhYjRmOWEyMDRiMTMwZjczNzJlMzhhYzdmNzk0OTE0NzhlNTQ0ZmI=", "commit": {"author": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2021-03-05T15:09:46Z"}, "committer": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2021-03-05T15:26:30Z"}, "message": "Remove theme.js file creation and move its code inside main.js", "tree": {"sha": "19d3e6bb8e77038677a208d472575fc5260570f8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/19d3e6bb8e77038677a208d472575fc5260570f8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3ab4f9a204b130f7372e38ac7f79491478e544fb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3ab4f9a204b130f7372e38ac7f79491478e544fb", "html_url": "https://github.com/rust-lang/rust/commit/3ab4f9a204b130f7372e38ac7f79491478e544fb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3ab4f9a204b130f7372e38ac7f79491478e544fb/comments", "author": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "committer": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8ccc89bc312caa65ca46b55b47492abdd5b6910a", "url": "https://api.github.com/repos/rust-lang/rust/commits/8ccc89bc312caa65ca46b55b47492abdd5b6910a", "html_url": "https://github.com/rust-lang/rust/commit/8ccc89bc312caa65ca46b55b47492abdd5b6910a"}], "stats": {"total": 141, "additions": 74, "deletions": 67}, "files": [{"sha": "8f55e23b3860fa2763643e44582eb05100a151d5", "filename": "src/librustdoc/html/layout.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/3ab4f9a204b130f7372e38ac7f79491478e544fb/src%2Flibrustdoc%2Fhtml%2Flayout.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3ab4f9a204b130f7372e38ac7f79491478e544fb/src%2Flibrustdoc%2Fhtml%2Flayout.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Flayout.rs?ref=3ab4f9a204b130f7372e38ac7f79491478e544fb", "patch": "@@ -88,7 +88,6 @@ crate fn render<T: Print, S: Print>(\n         </button>\\\n         <div id=\\\"theme-choices\\\" role=\\\"menu\\\"></div>\\\n     </div>\\\n-    <script src=\\\"{static_root_path}theme{suffix}.js\\\"></script>\\\n     <nav class=\\\"sub\\\">\\\n         <form class=\\\"search-form\\\">\\\n             <div class=\\\"search-container\\\">\\"}, {"sha": "bae350a8c195140c9c433e4158d750d16cf7155e", "filename": "src/librustdoc/html/render/write_shared.rs", "status": "modified", "additions": 5, "deletions": 56, "changes": 61, "blob_url": "https://github.com/rust-lang/rust/blob/3ab4f9a204b130f7372e38ac7f79491478e544fb/src%2Flibrustdoc%2Fhtml%2Frender%2Fwrite_shared.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3ab4f9a204b130f7372e38ac7f79491478e544fb/src%2Flibrustdoc%2Fhtml%2Frender%2Fwrite_shared.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender%2Fwrite_shared.rs?ref=3ab4f9a204b130f7372e38ac7f79491478e544fb", "patch": "@@ -108,65 +108,14 @@ pub(super) fn write_shared(\n \n     let mut themes: Vec<&String> = themes.iter().collect();\n     themes.sort();\n-    // To avoid theme switch latencies as much as possible, we put everything theme related\n-    // at the beginning of the html files into another js file.\n-    let theme_js = format!(\n-        r#\"var themes = document.getElementById(\"theme-choices\");\n-var themePicker = document.getElementById(\"theme-picker\");\n-\n-function showThemeButtonState() {{\n-    themes.style.display = \"block\";\n-    themePicker.style.borderBottomRightRadius = \"0\";\n-    themePicker.style.borderBottomLeftRadius = \"0\";\n-}}\n-\n-function hideThemeButtonState() {{\n-    themes.style.display = \"none\";\n-    themePicker.style.borderBottomRightRadius = \"3px\";\n-    themePicker.style.borderBottomLeftRadius = \"3px\";\n-}}\n-\n-function switchThemeButtonState() {{\n-    if (themes.style.display === \"block\") {{\n-        hideThemeButtonState();\n-    }} else {{\n-        showThemeButtonState();\n-    }}\n-}};\n-\n-function handleThemeButtonsBlur(e) {{\n-    var active = document.activeElement;\n-    var related = e.relatedTarget;\n-\n-    if (active.id !== \"theme-picker\" &&\n-        (!active.parentNode || active.parentNode.id !== \"theme-choices\") &&\n-        (!related ||\n-         (related.id !== \"theme-picker\" &&\n-          (!related.parentNode || related.parentNode.id !== \"theme-choices\")))) {{\n-        hideThemeButtonState();\n-    }}\n-}}\n-\n-themePicker.onclick = switchThemeButtonState;\n-themePicker.onblur = handleThemeButtonsBlur;\n-{}.forEach(function(item) {{\n-    var but = document.createElement(\"button\");\n-    but.textContent = item;\n-    but.onclick = function(el) {{\n-        switchTheme(currentTheme, mainTheme, item, true);\n-        useSystemTheme(false);\n-    }};\n-    but.onblur = handleThemeButtonsBlur;\n-    themes.appendChild(but);\n-}});\"#,\n-        serde_json::to_string(&themes).unwrap()\n-    );\n-\n-    write_minify(&cx.shared.fs, cx.path(\"theme.js\"), &theme_js, options.enable_minification)?;\n+\n     write_minify(\n         &cx.shared.fs,\n         cx.path(\"main.js\"),\n-        static_files::MAIN_JS,\n+        &static_files::MAIN_JS.replace(\n+            \"/* INSERT THEMES HERE */\",\n+            &format!(\" = {}\", serde_json::to_string(&themes).unwrap()),\n+        ),\n         options.enable_minification,\n     )?;\n     write_minify("}, {"sha": "5abcf4aec39bc649f0ac2acf33f203c3f315be4d", "filename": "src/librustdoc/html/static/main.js", "status": "modified", "additions": 60, "deletions": 1, "changes": 61, "blob_url": "https://github.com/rust-lang/rust/blob/3ab4f9a204b130f7372e38ac7f79491478e544fb/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fmain.js", "raw_url": "https://github.com/rust-lang/rust/raw/3ab4f9a204b130f7372e38ac7f79491478e544fb/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fmain.js", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fmain.js?ref=3ab4f9a204b130f7372e38ac7f79491478e544fb", "patch": "@@ -1,7 +1,7 @@\n // Local js definitions:\n /* global addClass, getSettingValue, hasClass */\n /* global onEach, onEachLazy, hasOwnProperty, removeClass, updateLocalStorage */\n-/* global hideThemeButtonState, showThemeButtonState */\n+/* global switchTheme, useSystemTheme */\n \n if (!String.prototype.startsWith) {\n     String.prototype.startsWith = function(searchString, position) {\n@@ -107,6 +107,65 @@ function defocusSearchBar() {\n     getSearchInput().blur();\n }\n \n+function showThemeButtonState() {\n+    var themePicker = getThemePickerElement();\n+    var themeChoices = getThemesElement();\n+\n+    themeChoices.style.display = \"block\";\n+    themePicker.style.borderBottomRightRadius = \"0\";\n+    themePicker.style.borderBottomLeftRadius = \"0\";\n+}\n+\n+function hideThemeButtonState() {\n+    var themePicker = getThemePickerElement();\n+    var themeChoices = getThemesElement();\n+\n+    themeChoices.style.display = \"none\";\n+    themePicker.style.borderBottomRightRadius = \"3px\";\n+    themePicker.style.borderBottomLeftRadius = \"3px\";\n+}\n+\n+// Set up the theme picker list.\n+(function () {\n+    var themeChoices = getThemesElement();\n+    var themePicker = getThemePickerElement();\n+    var availableThemes/* INSERT THEMES HERE */;\n+\n+    function switchThemeButtonState() {\n+        if (themeChoices.style.display === \"block\") {\n+            hideThemeButtonState();\n+        } else {\n+            showThemeButtonState();\n+        }\n+    }\n+\n+    function handleThemeButtonsBlur(e) {\n+        var active = document.activeElement;\n+        var related = e.relatedTarget;\n+\n+        if (active.id !== \"theme-picker\" &&\n+            (!active.parentNode || active.parentNode.id !== \"theme-choices\") &&\n+            (!related ||\n+             (related.id !== \"theme-picker\" &&\n+              (!related.parentNode || related.parentNode.id !== \"theme-choices\")))) {\n+            hideThemeButtonState();\n+        }\n+    }\n+\n+    themePicker.onclick = switchThemeButtonState;\n+    themePicker.onblur = handleThemeButtonsBlur;\n+    availableThemes.forEach(function(item) {\n+        var but = document.createElement(\"button\");\n+        but.textContent = item;\n+        but.onclick = function() {\n+            switchTheme(window.currentTheme, window.mainTheme, item, true);\n+            useSystemTheme(false);\n+        };\n+        but.onblur = handleThemeButtonsBlur;\n+        themeChoices.appendChild(but);\n+    });\n+}());\n+\n (function() {\n     \"use strict\";\n "}, {"sha": "c68128516d252df82d1f873452bd17c8ca8e62c6", "filename": "src/librustdoc/html/static/storage.js", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/3ab4f9a204b130f7372e38ac7f79491478e544fb/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fstorage.js", "raw_url": "https://github.com/rust-lang/rust/raw/3ab4f9a204b130f7372e38ac7f79491478e544fb/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fstorage.js", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fstorage.js?ref=3ab4f9a204b130f7372e38ac7f79491478e544fb", "patch": "@@ -2,8 +2,8 @@\n /* global resourcesSuffix */\n \n var darkThemes = [\"dark\", \"ayu\"];\n-var currentTheme = document.getElementById(\"themeStyle\");\n-var mainTheme = document.getElementById(\"mainThemeStyle\");\n+window.currentTheme = document.getElementById(\"themeStyle\");\n+window.mainTheme = document.getElementById(\"mainThemeStyle\");\n \n var settingsDataset = (function () {\n     var settingsElement = document.getElementById(\"default-settings\");\n@@ -137,7 +137,7 @@ function switchTheme(styleElem, mainStyleElem, newTheme, saveTheme) {\n     }\n }\n \n-// This function is called from \"theme.js\", generated in `html/render/mod.rs`.\n+// This function is called from \"main.js\".\n // eslint-disable-next-line no-unused-vars\n function useSystemTheme(value) {\n     if (value === undefined) {\n@@ -161,8 +161,8 @@ var updateSystemTheme = (function() {\n                 .getPropertyValue('content');\n \n             switchTheme(\n-                currentTheme,\n-                mainTheme,\n+                window.currentTheme,\n+                window.mainTheme,\n                 JSON.parse(cssTheme) || \"light\",\n                 true\n             );\n@@ -180,10 +180,10 @@ var updateSystemTheme = (function() {\n \n             if (mql.matches) {\n                 // prefers a dark theme\n-                switchTheme(currentTheme, mainTheme, darkTheme, true);\n+                switchTheme(window.currentTheme, window.mainTheme, darkTheme, true);\n             } else {\n                 // prefers a light theme, or has no preference\n-                switchTheme(currentTheme, mainTheme, lightTheme, true);\n+                switchTheme(window.currentTheme, window.mainTheme, lightTheme, true);\n             }\n \n             // note: we save the theme so that it doesn't suddenly change when\n@@ -212,8 +212,8 @@ if (getSettingValue(\"use-system-theme\") !== \"false\" && window.matchMedia) {\n     updateSystemTheme();\n } else {\n     switchTheme(\n-        currentTheme,\n-        mainTheme,\n+        window.currentTheme,\n+        window.mainTheme,\n         getSettingValue(\"theme\") || \"light\",\n         false\n     );"}]}