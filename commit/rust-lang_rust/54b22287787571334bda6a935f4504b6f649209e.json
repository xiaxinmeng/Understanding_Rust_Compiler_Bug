{"sha": "54b22287787571334bda6a935f4504b6f649209e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU0YjIyMjg3Nzg3NTcxMzM0YmRhNmE5MzVmNDUwNGI2ZjY0OTIwOWU=", "commit": {"author": {"name": "Fabian Drinck", "email": "fabian.drinck@rwth-aachen.de", "date": "2018-06-10T13:09:21Z"}, "committer": {"name": "Fabian Drinck", "email": "fabian.drinck@rwth-aachen.de", "date": "2018-06-14T16:44:37Z"}, "message": "Add DEBUG_FORMAT for DebruijnIndex", "tree": {"sha": "124529541e0a304b57599ac87f2b09fcdaed11bf", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/124529541e0a304b57599ac87f2b09fcdaed11bf"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/54b22287787571334bda6a935f4504b6f649209e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/54b22287787571334bda6a935f4504b6f649209e", "html_url": "https://github.com/rust-lang/rust/commit/54b22287787571334bda6a935f4504b6f649209e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/54b22287787571334bda6a935f4504b6f649209e/comments", "author": {"login": "fabric-and-ink", "id": 13430670, "node_id": "MDQ6VXNlcjEzNDMwNjcw", "avatar_url": "https://avatars.githubusercontent.com/u/13430670?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fabric-and-ink", "html_url": "https://github.com/fabric-and-ink", "followers_url": "https://api.github.com/users/fabric-and-ink/followers", "following_url": "https://api.github.com/users/fabric-and-ink/following{/other_user}", "gists_url": "https://api.github.com/users/fabric-and-ink/gists{/gist_id}", "starred_url": "https://api.github.com/users/fabric-and-ink/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fabric-and-ink/subscriptions", "organizations_url": "https://api.github.com/users/fabric-and-ink/orgs", "repos_url": "https://api.github.com/users/fabric-and-ink/repos", "events_url": "https://api.github.com/users/fabric-and-ink/events{/privacy}", "received_events_url": "https://api.github.com/users/fabric-and-ink/received_events", "type": "User", "site_admin": false}, "committer": {"login": "fabric-and-ink", "id": 13430670, "node_id": "MDQ6VXNlcjEzNDMwNjcw", "avatar_url": "https://avatars.githubusercontent.com/u/13430670?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fabric-and-ink", "html_url": "https://github.com/fabric-and-ink", "followers_url": "https://api.github.com/users/fabric-and-ink/followers", "following_url": "https://api.github.com/users/fabric-and-ink/following{/other_user}", "gists_url": "https://api.github.com/users/fabric-and-ink/gists{/gist_id}", "starred_url": "https://api.github.com/users/fabric-and-ink/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fabric-and-ink/subscriptions", "organizations_url": "https://api.github.com/users/fabric-and-ink/orgs", "repos_url": "https://api.github.com/users/fabric-and-ink/repos", "events_url": "https://api.github.com/users/fabric-and-ink/events{/privacy}", "received_events_url": "https://api.github.com/users/fabric-and-ink/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0ad3600700481270c4ea51cddf1e8330267d5345", "url": "https://api.github.com/repos/rust-lang/rust/commits/0ad3600700481270c4ea51cddf1e8330267d5345", "html_url": "https://github.com/rust-lang/rust/commit/0ad3600700481270c4ea51cddf1e8330267d5345"}], "stats": {"total": 31, "additions": 16, "deletions": 15}, "files": [{"sha": "1d354350aa8ee1e31f9f99a0b8ba65752a648e98", "filename": "src/librustc/ty/sty.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/54b22287787571334bda6a935f4504b6f649209e/src%2Flibrustc%2Fty%2Fsty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/54b22287787571334bda6a935f4504b6f649209e/src%2Flibrustc%2Fty%2Fsty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Fsty.rs?ref=54b22287787571334bda6a935f4504b6f649209e", "patch": "@@ -1023,6 +1023,7 @@ impl<'a, 'gcx, 'tcx> ParamTy {\n /// [dbi]: http://en.wikipedia.org/wiki/De_Bruijn_index\n newtype_index!(DebruijnIndex\n     {\n+        DEBUG_FORMAT = \"DebrujinIndex({})\",\n         const INNERMOST = 0,\n     });\n "}, {"sha": "8de9755d02f2f870e426e5cbbb8e61dd5397d643", "filename": "src/test/ui/nll/closure-requirements/escape-argument-callee.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/54b22287787571334bda6a935f4504b6f649209e/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fescape-argument-callee.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/54b22287787571334bda6a935f4504b6f649209e/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fescape-argument-callee.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fescape-argument-callee.stderr?ref=54b22287787571334bda6a935f4504b6f649209e", "patch": "@@ -18,7 +18,7 @@ LL |         let mut closure = expect_sig(|p, y| *p = y);\n    |\n    = note: defining type: DefId(0/1:9 ~ escape_argument_callee[317d]::test[0]::{{closure}}[0]) with closure substs [\n                i16,\n-               for<'r, 's, 't0> extern \"rust-call\" fn((&ReLateBound(0, BrNamed(crate0:DefIndex(0:0), 'r)) mut &ReLateBound(0, BrNamed(crate0:DefIndex(0:0), 's)) i32, &ReLateBound(0, BrNamed(crate0:DefIndex(0:0), 't0)) i32))\n+               for<'r, 's, 't0> extern \"rust-call\" fn((&ReLateBound(DebrujinIndex(0), BrNamed(crate0:DefIndex(0:0), 'r)) mut &ReLateBound(DebrujinIndex(0), BrNamed(crate0:DefIndex(0:0), 's)) i32, &ReLateBound(DebrujinIndex(0), BrNamed(crate0:DefIndex(0:0), 't0)) i32))\n            ]\n \n note: No external requirements"}, {"sha": "7890de6185084e65fc949f22ae29397febfcd89c", "filename": "src/test/ui/nll/closure-requirements/escape-argument.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/54b22287787571334bda6a935f4504b6f649209e/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fescape-argument.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/54b22287787571334bda6a935f4504b6f649209e/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fescape-argument.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fescape-argument.stderr?ref=54b22287787571334bda6a935f4504b6f649209e", "patch": "@@ -6,7 +6,7 @@ LL |         let mut closure = expect_sig(|p, y| *p = y);\n    |\n    = note: defining type: DefId(0/1:9 ~ escape_argument[317d]::test[0]::{{closure}}[0]) with closure substs [\n                i16,\n-               for<'r, 's> extern \"rust-call\" fn((&ReLateBound(0, BrNamed(crate0:DefIndex(0:0), 'r)) mut &ReLateBound(0, BrNamed(crate0:DefIndex(0:0), 's)) i32, &ReLateBound(0, BrNamed(crate0:DefIndex(0:0), 's)) i32))\n+               for<'r, 's> extern \"rust-call\" fn((&ReLateBound(DebrujinIndex(0), BrNamed(crate0:DefIndex(0:0), 'r)) mut &ReLateBound(DebrujinIndex(0), BrNamed(crate0:DefIndex(0:0), 's)) i32, &ReLateBound(DebrujinIndex(0), BrNamed(crate0:DefIndex(0:0), 's)) i32))\n            ]\n \n note: No external requirements"}, {"sha": "66079f555e8e40446fba4ac73ec252bd46dfaf4b", "filename": "src/test/ui/nll/closure-requirements/propagate-approximated-fail-no-postdom.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/54b22287787571334bda6a935f4504b6f649209e/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fpropagate-approximated-fail-no-postdom.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/54b22287787571334bda6a935f4504b6f649209e/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fpropagate-approximated-fail-no-postdom.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fpropagate-approximated-fail-no-postdom.stderr?ref=54b22287787571334bda6a935f4504b6f649209e", "patch": "@@ -24,7 +24,7 @@ LL | |         },\n    |\n    = note: defining type: DefId(0/1:20 ~ propagate_approximated_fail_no_postdom[317d]::supply[0]::{{closure}}[0]) with closure substs [\n                i16,\n-               for<'r, 's> extern \"rust-call\" fn((std::cell::Cell<&'_#1r &ReLateBound(0, BrNamed(crate0:DefIndex(0:0), 'r)) u32>, std::cell::Cell<&'_#2r &ReLateBound(0, BrNamed(crate0:DefIndex(0:0), 'r)) u32>, std::cell::Cell<&ReLateBound(0, BrNamed(crate0:DefIndex(0:0), 's)) &'_#3r u32>, std::cell::Cell<&ReLateBound(0, BrNamed(crate0:DefIndex(0:0), 'r)) u32>, std::cell::Cell<&ReLateBound(0, BrNamed(crate0:DefIndex(0:0), 's)) u32>))\n+               for<'r, 's> extern \"rust-call\" fn((std::cell::Cell<&'_#1r &ReLateBound(DebrujinIndex(0), BrNamed(crate0:DefIndex(0:0), 'r)) u32>, std::cell::Cell<&'_#2r &ReLateBound(DebrujinIndex(0), BrNamed(crate0:DefIndex(0:0), 'r)) u32>, std::cell::Cell<&ReLateBound(DebrujinIndex(0), BrNamed(crate0:DefIndex(0:0), 's)) &'_#3r u32>, std::cell::Cell<&ReLateBound(DebrujinIndex(0), BrNamed(crate0:DefIndex(0:0), 'r)) u32>, std::cell::Cell<&ReLateBound(DebrujinIndex(0), BrNamed(crate0:DefIndex(0:0), 's)) u32>))\n            ]\n \n note: No external requirements"}, {"sha": "5b5265d179883c3a30e49de74e59e0e13e894aa8", "filename": "src/test/ui/nll/closure-requirements/propagate-approximated-ref.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/54b22287787571334bda6a935f4504b6f649209e/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fpropagate-approximated-ref.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/54b22287787571334bda6a935f4504b6f649209e/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fpropagate-approximated-ref.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fpropagate-approximated-ref.stderr?ref=54b22287787571334bda6a935f4504b6f649209e", "patch": "@@ -18,7 +18,7 @@ LL | |     });\n    |\n    = note: defining type: DefId(0/1:18 ~ propagate_approximated_ref[317d]::supply[0]::{{closure}}[0]) with closure substs [\n                i16,\n-               for<'r, 's, 't0, 't1, 't2, 't3> extern \"rust-call\" fn((&ReLateBound(0, BrNamed(crate0:DefIndex(0:0), 'r)) std::cell::Cell<&'_#1r &ReLateBound(0, BrNamed(crate0:DefIndex(0:0), 's)) u32>, &ReLateBound(0, BrNamed(crate0:DefIndex(0:0), 't0)) std::cell::Cell<&ReLateBound(0, BrNamed(crate0:DefIndex(0:0), 't1)) &'_#2r u32>, &ReLateBound(0, BrNamed(crate0:DefIndex(0:0), 't2)) std::cell::Cell<&ReLateBound(0, BrNamed(crate0:DefIndex(0:0), 's)) u32>, &ReLateBound(0, BrNamed(crate0:DefIndex(0:0), 't3)) std::cell::Cell<&ReLateBound(0, BrNamed(crate0:DefIndex(0:0), 't1)) u32>))\n+               for<'r, 's, 't0, 't1, 't2, 't3> extern \"rust-call\" fn((&ReLateBound(DebrujinIndex(0), BrNamed(crate0:DefIndex(0:0), 'r)) std::cell::Cell<&'_#1r &ReLateBound(DebrujinIndex(0), BrNamed(crate0:DefIndex(0:0), 's)) u32>, &ReLateBound(DebrujinIndex(0), BrNamed(crate0:DefIndex(0:0), 't0)) std::cell::Cell<&ReLateBound(DebrujinIndex(0), BrNamed(crate0:DefIndex(0:0), 't1)) &'_#2r u32>, &ReLateBound(DebrujinIndex(0), BrNamed(crate0:DefIndex(0:0), 't2)) std::cell::Cell<&ReLateBound(DebrujinIndex(0), BrNamed(crate0:DefIndex(0:0), 's)) u32>, &ReLateBound(DebrujinIndex(0), BrNamed(crate0:DefIndex(0:0), 't3)) std::cell::Cell<&ReLateBound(DebrujinIndex(0), BrNamed(crate0:DefIndex(0:0), 't1)) u32>))\n            ]\n    = note: number of external vids: 3\n    = note: where '_#1r: '_#2r"}, {"sha": "af73d018655aa5002890e5ca17cb100df0994090", "filename": "src/test/ui/nll/closure-requirements/propagate-approximated-shorter-to-static-comparing-against-free.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/54b22287787571334bda6a935f4504b6f649209e/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fpropagate-approximated-shorter-to-static-comparing-against-free.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/54b22287787571334bda6a935f4504b6f649209e/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fpropagate-approximated-shorter-to-static-comparing-against-free.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fpropagate-approximated-shorter-to-static-comparing-against-free.stderr?ref=54b22287787571334bda6a935f4504b6f649209e", "patch": "@@ -23,7 +23,7 @@ LL | |     })\n    |\n    = note: defining type: DefId(0/1:12 ~ propagate_approximated_shorter_to_static_comparing_against_free[317d]::case1[0]::{{closure}}[0]) with closure substs [\n                i32,\n-               for<'r> extern \"rust-call\" fn((std::cell::Cell<&'_#1r u32>, std::cell::Cell<&ReLateBound(0, BrNamed(crate0:DefIndex(0:0), 'r)) u32>))\n+               for<'r> extern \"rust-call\" fn((std::cell::Cell<&'_#1r u32>, std::cell::Cell<&ReLateBound(DebrujinIndex(0), BrNamed(crate0:DefIndex(0:0), 'r)) u32>))\n            ]\n \n note: No external requirements\n@@ -51,7 +51,7 @@ LL | |     })\n    |\n    = note: defining type: DefId(0/1:13 ~ propagate_approximated_shorter_to_static_comparing_against_free[317d]::case2[0]::{{closure}}[0]) with closure substs [\n                i32,\n-               for<'r> extern \"rust-call\" fn((std::cell::Cell<&'_#1r u32>, std::cell::Cell<&ReLateBound(0, BrNamed(crate0:DefIndex(0:0), 'r)) u32>))\n+               for<'r> extern \"rust-call\" fn((std::cell::Cell<&'_#1r u32>, std::cell::Cell<&ReLateBound(DebrujinIndex(0), BrNamed(crate0:DefIndex(0:0), 'r)) u32>))\n            ]\n    = note: number of external vids: 2\n    = note: where '_#1r: '_#0r"}, {"sha": "aa0274905d8614225ba98537e05dae14f3607cf8", "filename": "src/test/ui/nll/closure-requirements/propagate-approximated-shorter-to-static-no-bound.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/54b22287787571334bda6a935f4504b6f649209e/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fpropagate-approximated-shorter-to-static-no-bound.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/54b22287787571334bda6a935f4504b6f649209e/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fpropagate-approximated-shorter-to-static-no-bound.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fpropagate-approximated-shorter-to-static-no-bound.stderr?ref=54b22287787571334bda6a935f4504b6f649209e", "patch": "@@ -18,7 +18,7 @@ LL | |     });\n    |\n    = note: defining type: DefId(0/1:18 ~ propagate_approximated_shorter_to_static_no_bound[317d]::supply[0]::{{closure}}[0]) with closure substs [\n                i16,\n-               for<'r, 's, 't0, 't1, 't2> extern \"rust-call\" fn((&ReLateBound(0, BrNamed(crate0:DefIndex(0:0), 'r)) std::cell::Cell<&'_#1r &ReLateBound(0, BrNamed(crate0:DefIndex(0:0), 's)) u32>, &ReLateBound(0, BrNamed(crate0:DefIndex(0:0), 't0)) std::cell::Cell<&ReLateBound(0, BrNamed(crate0:DefIndex(0:0), 's)) u32>, &ReLateBound(0, BrNamed(crate0:DefIndex(0:0), 't1)) std::cell::Cell<&ReLateBound(0, BrNamed(crate0:DefIndex(0:0), 't2)) u32>))\n+               for<'r, 's, 't0, 't1, 't2> extern \"rust-call\" fn((&ReLateBound(DebrujinIndex(0), BrNamed(crate0:DefIndex(0:0), 'r)) std::cell::Cell<&'_#1r &ReLateBound(DebrujinIndex(0), BrNamed(crate0:DefIndex(0:0), 's)) u32>, &ReLateBound(DebrujinIndex(0), BrNamed(crate0:DefIndex(0:0), 't0)) std::cell::Cell<&ReLateBound(DebrujinIndex(0), BrNamed(crate0:DefIndex(0:0), 's)) u32>, &ReLateBound(DebrujinIndex(0), BrNamed(crate0:DefIndex(0:0), 't1)) std::cell::Cell<&ReLateBound(DebrujinIndex(0), BrNamed(crate0:DefIndex(0:0), 't2)) u32>))\n            ]\n    = note: number of external vids: 2\n    = note: where '_#1r: '_#0r"}, {"sha": "7f7b3786f70a4e023b7b3ecb903839bca2818b7c", "filename": "src/test/ui/nll/closure-requirements/propagate-approximated-shorter-to-static-wrong-bound.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/54b22287787571334bda6a935f4504b6f649209e/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fpropagate-approximated-shorter-to-static-wrong-bound.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/54b22287787571334bda6a935f4504b6f649209e/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fpropagate-approximated-shorter-to-static-wrong-bound.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fpropagate-approximated-shorter-to-static-wrong-bound.stderr?ref=54b22287787571334bda6a935f4504b6f649209e", "patch": "@@ -18,7 +18,7 @@ LL | |     });\n    |\n    = note: defining type: DefId(0/1:18 ~ propagate_approximated_shorter_to_static_wrong_bound[317d]::supply[0]::{{closure}}[0]) with closure substs [\n                i16,\n-               for<'r, 's, 't0, 't1, 't2, 't3> extern \"rust-call\" fn((&ReLateBound(0, BrNamed(crate0:DefIndex(0:0), 'r)) std::cell::Cell<&'_#1r &ReLateBound(0, BrNamed(crate0:DefIndex(0:0), 's)) u32>, &ReLateBound(0, BrNamed(crate0:DefIndex(0:0), 't0)) std::cell::Cell<&'_#2r &ReLateBound(0, BrNamed(crate0:DefIndex(0:0), 't1)) u32>, &ReLateBound(0, BrNamed(crate0:DefIndex(0:0), 't2)) std::cell::Cell<&ReLateBound(0, BrNamed(crate0:DefIndex(0:0), 's)) u32>, &ReLateBound(0, BrNamed(crate0:DefIndex(0:0), 't3)) std::cell::Cell<&ReLateBound(0, BrNamed(crate0:DefIndex(0:0), 't1)) u32>))\n+               for<'r, 's, 't0, 't1, 't2, 't3> extern \"rust-call\" fn((&ReLateBound(DebrujinIndex(0), BrNamed(crate0:DefIndex(0:0), 'r)) std::cell::Cell<&'_#1r &ReLateBound(DebrujinIndex(0), BrNamed(crate0:DefIndex(0:0), 's)) u32>, &ReLateBound(DebrujinIndex(0), BrNamed(crate0:DefIndex(0:0), 't0)) std::cell::Cell<&'_#2r &ReLateBound(DebrujinIndex(0), BrNamed(crate0:DefIndex(0:0), 't1)) u32>, &ReLateBound(DebrujinIndex(0), BrNamed(crate0:DefIndex(0:0), 't2)) std::cell::Cell<&ReLateBound(DebrujinIndex(0), BrNamed(crate0:DefIndex(0:0), 's)) u32>, &ReLateBound(DebrujinIndex(0), BrNamed(crate0:DefIndex(0:0), 't3)) std::cell::Cell<&ReLateBound(DebrujinIndex(0), BrNamed(crate0:DefIndex(0:0), 't1)) u32>))\n            ]\n    = note: number of external vids: 3\n    = note: where '_#1r: '_#0r"}, {"sha": "2389cd3f6ae42fdcf5fb299f37a073621a2ea6fa", "filename": "src/test/ui/nll/closure-requirements/propagate-approximated-val.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/54b22287787571334bda6a935f4504b6f649209e/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fpropagate-approximated-val.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/54b22287787571334bda6a935f4504b6f649209e/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fpropagate-approximated-val.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fpropagate-approximated-val.stderr?ref=54b22287787571334bda6a935f4504b6f649209e", "patch": "@@ -18,7 +18,7 @@ LL | |     });\n    |\n    = note: defining type: DefId(0/1:18 ~ propagate_approximated_val[317d]::test[0]::{{closure}}[0]) with closure substs [\n                i16,\n-               for<'r, 's> extern \"rust-call\" fn((std::cell::Cell<&'_#1r &ReLateBound(0, BrNamed(crate0:DefIndex(0:0), 'r)) u32>, std::cell::Cell<&ReLateBound(0, BrNamed(crate0:DefIndex(0:0), 's)) &'_#2r u32>, std::cell::Cell<&ReLateBound(0, BrNamed(crate0:DefIndex(0:0), 'r)) u32>, std::cell::Cell<&ReLateBound(0, BrNamed(crate0:DefIndex(0:0), 's)) u32>))\n+               for<'r, 's> extern \"rust-call\" fn((std::cell::Cell<&'_#1r &ReLateBound(DebrujinIndex(0), BrNamed(crate0:DefIndex(0:0), 'r)) u32>, std::cell::Cell<&ReLateBound(DebrujinIndex(0), BrNamed(crate0:DefIndex(0:0), 's)) &'_#2r u32>, std::cell::Cell<&ReLateBound(DebrujinIndex(0), BrNamed(crate0:DefIndex(0:0), 'r)) u32>, std::cell::Cell<&ReLateBound(DebrujinIndex(0), BrNamed(crate0:DefIndex(0:0), 's)) u32>))\n            ]\n    = note: number of external vids: 3\n    = note: where '_#1r: '_#2r"}, {"sha": "42a067ae7bf1f18bdbec05aa5a8041201068c0f4", "filename": "src/test/ui/nll/closure-requirements/propagate-despite-same-free-region.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/54b22287787571334bda6a935f4504b6f649209e/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fpropagate-despite-same-free-region.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/54b22287787571334bda6a935f4504b6f649209e/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fpropagate-despite-same-free-region.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fpropagate-despite-same-free-region.stderr?ref=54b22287787571334bda6a935f4504b6f649209e", "patch": "@@ -16,7 +16,7 @@ LL | |         },\n    |\n    = note: defining type: DefId(0/1:16 ~ propagate_despite_same_free_region[317d]::supply[0]::{{closure}}[0]) with closure substs [\n                i16,\n-               for<'r, 's> extern \"rust-call\" fn((std::cell::Cell<&'_#1r &ReLateBound(0, BrNamed(crate0:DefIndex(0:0), 'r)) u32>, std::cell::Cell<&ReLateBound(0, BrNamed(crate0:DefIndex(0:0), 's)) &'_#2r u32>, std::cell::Cell<&ReLateBound(0, BrNamed(crate0:DefIndex(0:0), 'r)) u32>, std::cell::Cell<&ReLateBound(0, BrNamed(crate0:DefIndex(0:0), 's)) u32>))\n+               for<'r, 's> extern \"rust-call\" fn((std::cell::Cell<&'_#1r &ReLateBound(DebrujinIndex(0), BrNamed(crate0:DefIndex(0:0), 'r)) u32>, std::cell::Cell<&ReLateBound(DebrujinIndex(0), BrNamed(crate0:DefIndex(0:0), 's)) &'_#2r u32>, std::cell::Cell<&ReLateBound(DebrujinIndex(0), BrNamed(crate0:DefIndex(0:0), 'r)) u32>, std::cell::Cell<&ReLateBound(DebrujinIndex(0), BrNamed(crate0:DefIndex(0:0), 's)) u32>))\n            ]\n    = note: number of external vids: 3\n    = note: where '_#1r: '_#2r"}, {"sha": "f0619ab58c92b57d31c298761a25b14a70d048ad", "filename": "src/test/ui/nll/closure-requirements/propagate-fail-to-approximate-longer-no-bounds.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/54b22287787571334bda6a935f4504b6f649209e/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fpropagate-fail-to-approximate-longer-no-bounds.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/54b22287787571334bda6a935f4504b6f649209e/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fpropagate-fail-to-approximate-longer-no-bounds.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fpropagate-fail-to-approximate-longer-no-bounds.stderr?ref=54b22287787571334bda6a935f4504b6f649209e", "patch": "@@ -24,7 +24,7 @@ LL | |     });\n    |\n    = note: defining type: DefId(0/1:18 ~ propagate_fail_to_approximate_longer_no_bounds[317d]::supply[0]::{{closure}}[0]) with closure substs [\n                i16,\n-               for<'r, 's, 't0, 't1, 't2> extern \"rust-call\" fn((&ReLateBound(0, BrNamed(crate0:DefIndex(0:0), 'r)) std::cell::Cell<&ReLateBound(0, BrNamed(crate0:DefIndex(0:0), 's)) &'_#1r u32>, &ReLateBound(0, BrNamed(crate0:DefIndex(0:0), 't0)) std::cell::Cell<&ReLateBound(0, BrNamed(crate0:DefIndex(0:0), 't1)) u32>, &ReLateBound(0, BrNamed(crate0:DefIndex(0:0), 't2)) std::cell::Cell<&ReLateBound(0, BrNamed(crate0:DefIndex(0:0), 's)) u32>))\n+               for<'r, 's, 't0, 't1, 't2> extern \"rust-call\" fn((&ReLateBound(DebrujinIndex(0), BrNamed(crate0:DefIndex(0:0), 'r)) std::cell::Cell<&ReLateBound(DebrujinIndex(0), BrNamed(crate0:DefIndex(0:0), 's)) &'_#1r u32>, &ReLateBound(DebrujinIndex(0), BrNamed(crate0:DefIndex(0:0), 't0)) std::cell::Cell<&ReLateBound(DebrujinIndex(0), BrNamed(crate0:DefIndex(0:0), 't1)) u32>, &ReLateBound(DebrujinIndex(0), BrNamed(crate0:DefIndex(0:0), 't2)) std::cell::Cell<&ReLateBound(DebrujinIndex(0), BrNamed(crate0:DefIndex(0:0), 's)) u32>))\n            ]\n \n note: No external requirements"}, {"sha": "1e8280405c2ffe4e13e3f7d1a86c51bda7a25dc5", "filename": "src/test/ui/nll/closure-requirements/propagate-fail-to-approximate-longer-wrong-bounds.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/54b22287787571334bda6a935f4504b6f649209e/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fpropagate-fail-to-approximate-longer-wrong-bounds.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/54b22287787571334bda6a935f4504b6f649209e/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fpropagate-fail-to-approximate-longer-wrong-bounds.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fpropagate-fail-to-approximate-longer-wrong-bounds.stderr?ref=54b22287787571334bda6a935f4504b6f649209e", "patch": "@@ -24,7 +24,7 @@ LL | |     });\n    |\n    = note: defining type: DefId(0/1:18 ~ propagate_fail_to_approximate_longer_wrong_bounds[317d]::supply[0]::{{closure}}[0]) with closure substs [\n                i16,\n-               for<'r, 's, 't0, 't1, 't2, 't3> extern \"rust-call\" fn((&ReLateBound(0, BrNamed(crate0:DefIndex(0:0), 'r)) std::cell::Cell<&ReLateBound(0, BrNamed(crate0:DefIndex(0:0), 's)) &'_#1r u32>, &ReLateBound(0, BrNamed(crate0:DefIndex(0:0), 't0)) std::cell::Cell<&ReLateBound(0, BrNamed(crate0:DefIndex(0:0), 't1)) &'_#2r u32>, &ReLateBound(0, BrNamed(crate0:DefIndex(0:0), 't2)) std::cell::Cell<&ReLateBound(0, BrNamed(crate0:DefIndex(0:0), 's)) u32>, &ReLateBound(0, BrNamed(crate0:DefIndex(0:0), 't3)) std::cell::Cell<&ReLateBound(0, BrNamed(crate0:DefIndex(0:0), 't1)) u32>))\n+               for<'r, 's, 't0, 't1, 't2, 't3> extern \"rust-call\" fn((&ReLateBound(DebrujinIndex(0), BrNamed(crate0:DefIndex(0:0), 'r)) std::cell::Cell<&ReLateBound(DebrujinIndex(0), BrNamed(crate0:DefIndex(0:0), 's)) &'_#1r u32>, &ReLateBound(DebrujinIndex(0), BrNamed(crate0:DefIndex(0:0), 't0)) std::cell::Cell<&ReLateBound(DebrujinIndex(0), BrNamed(crate0:DefIndex(0:0), 't1)) &'_#2r u32>, &ReLateBound(DebrujinIndex(0), BrNamed(crate0:DefIndex(0:0), 't2)) std::cell::Cell<&ReLateBound(DebrujinIndex(0), BrNamed(crate0:DefIndex(0:0), 's)) u32>, &ReLateBound(DebrujinIndex(0), BrNamed(crate0:DefIndex(0:0), 't3)) std::cell::Cell<&ReLateBound(DebrujinIndex(0), BrNamed(crate0:DefIndex(0:0), 't1)) u32>))\n            ]\n \n note: No external requirements"}, {"sha": "317b57e37da2005a922bcc472b47280b392eabb5", "filename": "src/test/ui/nll/closure-requirements/return-wrong-bound-region.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/54b22287787571334bda6a935f4504b6f649209e/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Freturn-wrong-bound-region.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/54b22287787571334bda6a935f4504b6f649209e/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Freturn-wrong-bound-region.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Freturn-wrong-bound-region.stderr?ref=54b22287787571334bda6a935f4504b6f649209e", "patch": "@@ -18,7 +18,7 @@ LL |     expect_sig(|a, b| b); // ought to return `a`\n    |\n    = note: defining type: DefId(0/1:9 ~ return_wrong_bound_region[317d]::test[0]::{{closure}}[0]) with closure substs [\n                i16,\n-               for<'r, 's> extern \"rust-call\" fn((&ReLateBound(0, BrNamed(crate0:DefIndex(0:0), 'r)) i32, &ReLateBound(0, BrNamed(crate0:DefIndex(0:0), 's)) i32)) -> &ReLateBound(0, BrNamed(crate0:DefIndex(0:0), 'r)) i32\n+               for<'r, 's> extern \"rust-call\" fn((&ReLateBound(DebrujinIndex(0), BrNamed(crate0:DefIndex(0:0), 'r)) i32, &ReLateBound(DebrujinIndex(0), BrNamed(crate0:DefIndex(0:0), 's)) i32)) -> &ReLateBound(DebrujinIndex(0), BrNamed(crate0:DefIndex(0:0), 'r)) i32\n            ]\n \n note: No external requirements"}, {"sha": "7d65b21e8bde33d2ed4229cc5cc6f4157bd3678c", "filename": "src/test/ui/nll/ty-outlives/ty-param-closure-approximate-lower-bound.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/54b22287787571334bda6a935f4504b6f649209e/src%2Ftest%2Fui%2Fnll%2Fty-outlives%2Fty-param-closure-approximate-lower-bound.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/54b22287787571334bda6a935f4504b6f649209e/src%2Ftest%2Fui%2Fnll%2Fty-outlives%2Fty-param-closure-approximate-lower-bound.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fty-outlives%2Fty-param-closure-approximate-lower-bound.stderr?ref=54b22287787571334bda6a935f4504b6f649209e", "patch": "@@ -25,7 +25,7 @@ LL |     twice(cell, value, |a, b| invoke(a, b));\n    = note: defining type: DefId(0/1:14 ~ ty_param_closure_approximate_lower_bound[317d]::generic[0]::{{closure}}[0]) with closure substs [\n                T,\n                i16,\n-               for<'r, 's> extern \"rust-call\" fn((std::option::Option<std::cell::Cell<&'_#1r &ReLateBound(0, BrNamed(crate0:DefIndex(0:0), 'r)) ()>>, &ReLateBound(0, BrNamed(crate0:DefIndex(0:0), 's)) T))\n+               for<'r, 's> extern \"rust-call\" fn((std::option::Option<std::cell::Cell<&'_#1r &ReLateBound(DebrujinIndex(0), BrNamed(crate0:DefIndex(0:0), 'r)) ()>>, &ReLateBound(DebrujinIndex(0), BrNamed(crate0:DefIndex(0:0), 's)) T))\n            ]\n    = note: number of external vids: 2\n    = note: where T: '_#1r\n@@ -55,7 +55,7 @@ LL |     twice(cell, value, |a, b| invoke(a, b));\n    = note: defining type: DefId(0/1:17 ~ ty_param_closure_approximate_lower_bound[317d]::generic_fail[0]::{{closure}}[0]) with closure substs [\n                T,\n                i16,\n-               for<'r, 's> extern \"rust-call\" fn((std::option::Option<std::cell::Cell<&'_#1r &ReLateBound(0, BrNamed(crate0:DefIndex(0:0), 'r)) ()>>, &ReLateBound(0, BrNamed(crate0:DefIndex(0:0), 's)) T))\n+               for<'r, 's> extern \"rust-call\" fn((std::option::Option<std::cell::Cell<&'_#1r &ReLateBound(DebrujinIndex(0), BrNamed(crate0:DefIndex(0:0), 'r)) ()>>, &ReLateBound(DebrujinIndex(0), BrNamed(crate0:DefIndex(0:0), 's)) T))\n            ]\n    = note: number of external vids: 2\n    = note: where T: '_#1r"}]}