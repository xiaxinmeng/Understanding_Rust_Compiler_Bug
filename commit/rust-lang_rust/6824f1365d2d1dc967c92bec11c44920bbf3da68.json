{"sha": "6824f1365d2d1dc967c92bec11c44920bbf3da68", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY4MjRmMTM2NWQyZDFkYzk2N2M5MmJlYzExYzQ0OTIwYmJmM2RhNjg=", "commit": {"author": {"name": "Florian Hahn", "email": "flo@fhahn.com", "date": "2015-02-11T22:09:30Z"}, "committer": {"name": "Florian Hahn", "email": "flo@fhahn.com", "date": "2015-02-16T19:52:39Z"}, "message": "Add pfail targets for parse-fail tests", "tree": {"sha": "df43e36b748a6469c403d5da1a10fdb918b2d58f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/df43e36b748a6469c403d5da1a10fdb918b2d58f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6824f1365d2d1dc967c92bec11c44920bbf3da68", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6824f1365d2d1dc967c92bec11c44920bbf3da68", "html_url": "https://github.com/rust-lang/rust/commit/6824f1365d2d1dc967c92bec11c44920bbf3da68", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6824f1365d2d1dc967c92bec11c44920bbf3da68/comments", "author": {"login": "fhahn", "id": 450489, "node_id": "MDQ6VXNlcjQ1MDQ4OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/450489?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fhahn", "html_url": "https://github.com/fhahn", "followers_url": "https://api.github.com/users/fhahn/followers", "following_url": "https://api.github.com/users/fhahn/following{/other_user}", "gists_url": "https://api.github.com/users/fhahn/gists{/gist_id}", "starred_url": "https://api.github.com/users/fhahn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fhahn/subscriptions", "organizations_url": "https://api.github.com/users/fhahn/orgs", "repos_url": "https://api.github.com/users/fhahn/repos", "events_url": "https://api.github.com/users/fhahn/events{/privacy}", "received_events_url": "https://api.github.com/users/fhahn/received_events", "type": "User", "site_admin": false}, "committer": {"login": "fhahn", "id": 450489, "node_id": "MDQ6VXNlcjQ1MDQ4OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/450489?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fhahn", "html_url": "https://github.com/fhahn", "followers_url": "https://api.github.com/users/fhahn/followers", "following_url": "https://api.github.com/users/fhahn/following{/other_user}", "gists_url": "https://api.github.com/users/fhahn/gists{/gist_id}", "starred_url": "https://api.github.com/users/fhahn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fhahn/subscriptions", "organizations_url": "https://api.github.com/users/fhahn/orgs", "repos_url": "https://api.github.com/users/fhahn/repos", "events_url": "https://api.github.com/users/fhahn/events{/privacy}", "received_events_url": "https://api.github.com/users/fhahn/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5550bebcaa8e38a7c0ed61570bfee0cb5f24d3e5", "url": "https://api.github.com/repos/rust-lang/rust/commits/5550bebcaa8e38a7c0ed61570bfee0cb5f24d3e5", "html_url": "https://github.com/rust-lang/rust/commit/5550bebcaa8e38a7c0ed61570bfee0cb5f24d3e5"}], "stats": {"total": 28, "additions": 21, "deletions": 7}, "files": [{"sha": "d1b27a96f93b9caf7da8a4fbb9ac0b9e06a24a63", "filename": "configure", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/6824f1365d2d1dc967c92bec11c44920bbf3da68/configure", "raw_url": "https://github.com/rust-lang/rust/raw/6824f1365d2d1dc967c92bec11c44920bbf3da68/configure", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/configure?ref=6824f1365d2d1dc967c92bec11c44920bbf3da68", "patch": "@@ -1056,6 +1056,7 @@ do\n     make_dir $h/test/run-pass-fulldeps\n     make_dir $h/test/run-fail\n     make_dir $h/test/compile-fail\n+    make_dir $h/test/parse-fail\n     make_dir $h/test/compile-fail-fulldeps\n     make_dir $h/test/bench\n     make_dir $h/test/perf"}, {"sha": "d907f2259a3af624409320ada29ab34d6766e314", "filename": "mk/tests.mk", "status": "modified", "additions": 13, "deletions": 4, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/6824f1365d2d1dc967c92bec11c44920bbf3da68/mk%2Ftests.mk", "raw_url": "https://github.com/rust-lang/rust/raw/6824f1365d2d1dc967c92bec11c44920bbf3da68/mk%2Ftests.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mk%2Ftests.mk?ref=6824f1365d2d1dc967c92bec11c44920bbf3da68", "patch": "@@ -173,12 +173,12 @@ check-notidy: cleantmptestlogs cleantestlibs all check-stage2\n check-lite: cleantestlibs cleantmptestlogs \\\n \t$(foreach crate,$(TEST_TARGET_CRATES),check-stage2-$(crate)) \\\n \tcheck-stage2-rpass check-stage2-rpass-valgrind \\\n-\tcheck-stage2-rfail check-stage2-cfail check-stage2-rmake\n+\tcheck-stage2-rfail check-stage2-cfail check-stage2-pfail check-stage2-rmake\n \t$(Q)$(CFG_PYTHON) $(S)src/etc/check-summary.py tmp/*.log\n \n # Only check the 'reference' tests: rpass/cfail/rfail/rmake.\n check-ref: cleantestlibs cleantmptestlogs check-stage2-rpass check-stage2-rpass-valgrind \\\n-\tcheck-stage2-rfail check-stage2-cfail check-stage2-rmake\n+\tcheck-stage2-rfail check-stage2-cfail check-stage2-pfail check-stage2-rmake\n \t$(Q)$(CFG_PYTHON) $(S)src/etc/check-summary.py tmp/*.log\n \n # Only check the docs.\n@@ -290,6 +290,7 @@ check-stage$(1)-T-$(2)-H-$(3)-exec: \\\n \tcheck-stage$(1)-T-$(2)-H-$(3)-rpass-exec \\\n \tcheck-stage$(1)-T-$(2)-H-$(3)-rfail-exec \\\n \tcheck-stage$(1)-T-$(2)-H-$(3)-cfail-exec \\\n+\tcheck-stage$(1)-T-$(2)-H-$(3)-pfail-exec \\\n     check-stage$(1)-T-$(2)-H-$(3)-rpass-valgrind-exec \\\n     check-stage$(1)-T-$(2)-H-$(3)-rpass-full-exec \\\n \tcheck-stage$(1)-T-$(2)-H-$(3)-cfail-full-exec \\\n@@ -469,7 +470,8 @@ RPASS_VALGRIND_TESTS := $(RPASS_VALGRIND_RS)\n RPASS_FULL_TESTS := $(RPASS_FULL_RS)\n CFAIL_FULL_TESTS := $(CFAIL_FULL_RS)\n RFAIL_TESTS := $(RFAIL_RS)\n-CFAIL_TESTS := $(CFAIL_RS) $(PFAIL_RS)\n+CFAIL_TESTS := $(CFAIL_RS)\n+PFAIL_TESTS := $(PFAIL_RS)\n BENCH_TESTS := $(BENCH_RS)\n PERF_TESTS := $(PERF_RS)\n PRETTY_TESTS := $(PRETTY_RS)\n@@ -507,6 +509,11 @@ CTEST_BUILD_BASE_cfail = compile-fail\n CTEST_MODE_cfail = compile-fail\n CTEST_RUNTOOL_cfail = $(CTEST_RUNTOOL)\n \n+CTEST_SRC_BASE_pfail = parse-fail\n+CTEST_BUILD_BASE_pfail = parse-fail\n+CTEST_MODE_pfail = parse-fail\n+CTEST_RUNTOOL_pfail = $(CTEST_RUNTOOL)\n+\n CTEST_SRC_BASE_bench = bench\n CTEST_BUILD_BASE_bench = bench\n CTEST_MODE_bench = run-pass\n@@ -629,6 +636,7 @@ CTEST_DEPS_rpass-full_$(1)-T-$(2)-H-$(3) = $$(RPASS_FULL_TESTS) $$(CSREQ$(1)_T_$\n CTEST_DEPS_cfail-full_$(1)-T-$(2)-H-$(3) = $$(CFAIL_FULL_TESTS) $$(CSREQ$(1)_T_$(3)_H_$(3)) $$(SREQ$(1)_T_$(2)_H_$(3))\n CTEST_DEPS_rfail_$(1)-T-$(2)-H-$(3) = $$(RFAIL_TESTS)\n CTEST_DEPS_cfail_$(1)-T-$(2)-H-$(3) = $$(CFAIL_TESTS)\n+CTEST_DEPS_pfail_$(1)-T-$(2)-H-$(3) = $$(PFAIL_TESTS)\n CTEST_DEPS_bench_$(1)-T-$(2)-H-$(3) = $$(BENCH_TESTS)\n CTEST_DEPS_perf_$(1)-T-$(2)-H-$(3) = $$(PERF_TESTS)\n CTEST_DEPS_debuginfo-gdb_$(1)-T-$(2)-H-$(3) = $$(DEBUGINFO_GDB_TESTS)\n@@ -697,7 +705,7 @@ endif\n \n endef\n \n-CTEST_NAMES = rpass rpass-valgrind rpass-full cfail-full rfail cfail bench perf debuginfo-gdb debuginfo-lldb codegen\n+CTEST_NAMES = rpass rpass-valgrind rpass-full cfail-full rfail cfail pfail bench perf debuginfo-gdb debuginfo-lldb codegen\n \n $(foreach host,$(CFG_HOST), \\\n  $(eval $(foreach target,$(CFG_TARGET), \\\n@@ -856,6 +864,7 @@ TEST_GROUPS = \\\n \tcfail-full \\\n \trfail \\\n \tcfail \\\n+\tpfail \\\n \tbench \\\n \tperf \\\n \trmake \\"}, {"sha": "2c046d252799ee02338b399fb4e38a1b1cae75e4", "filename": "src/compiletest/common.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/6824f1365d2d1dc967c92bec11c44920bbf3da68/src%2Fcompiletest%2Fcommon.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6824f1365d2d1dc967c92bec11c44920bbf3da68/src%2Fcompiletest%2Fcommon.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcompiletest%2Fcommon.rs?ref=6824f1365d2d1dc967c92bec11c44920bbf3da68", "patch": "@@ -15,6 +15,7 @@ use std::str::FromStr;\n #[derive(Clone, Copy, PartialEq, Debug)]\n pub enum Mode {\n     CompileFail,\n+    ParseFail,\n     RunFail,\n     RunPass,\n     RunPassValgrind,\n@@ -29,6 +30,7 @@ impl FromStr for Mode {\n     fn from_str(s: &str) -> Result<Mode, ()> {\n         match s {\n           \"compile-fail\" => Ok(CompileFail),\n+          \"parse-fail\" => Ok(ParseFail),\n           \"run-fail\" => Ok(RunFail),\n           \"run-pass\" => Ok(RunPass),\n           \"run-pass-valgrind\" => Ok(RunPassValgrind),\n@@ -45,6 +47,7 @@ impl fmt::Display for Mode {\n     fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {\n         fmt::Display::fmt(match *self {\n             CompileFail => \"compile-fail\",\n+            ParseFail => \"parse-fail\",\n             RunFail => \"run-fail\",\n             RunPass => \"run-pass\",\n             RunPassValgrind => \"run-pass-valgrind\","}, {"sha": "72a57ee5bc24f816c58363a4fd0fb471e75ce0d9", "filename": "src/compiletest/compiletest.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6824f1365d2d1dc967c92bec11c44920bbf3da68/src%2Fcompiletest%2Fcompiletest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6824f1365d2d1dc967c92bec11c44920bbf3da68/src%2Fcompiletest%2Fcompiletest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcompiletest%2Fcompiletest.rs?ref=6824f1365d2d1dc967c92bec11c44920bbf3da68", "patch": "@@ -72,7 +72,7 @@ pub fn parse_config(args: Vec<String> ) -> Config {\n           reqopt(\"\", \"aux-base\", \"directory to find auxiliary test files\", \"PATH\"),\n           reqopt(\"\", \"stage-id\", \"the target-stage identifier\", \"stageN-TARGET\"),\n           reqopt(\"\", \"mode\", \"which sort of compile tests to run\",\n-                 \"(compile-fail|run-fail|run-pass|run-pass-valgrind|pretty|debug-info)\"),\n+                 \"(compile-fail|parse-fail|run-fail|run-pass|run-pass-valgrind|pretty|debug-info)\"),\n           optflag(\"\", \"ignored\", \"run tests marked as ignored\"),\n           optopt(\"\", \"runtool\", \"supervisor program to run tests under \\\n                                  (eg. emulator, valgrind)\", \"PROGRAM\"),"}, {"sha": "c5bb35ffe65e209efd2a1b86d71361f49f99a840", "filename": "src/compiletest/runtest.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/6824f1365d2d1dc967c92bec11c44920bbf3da68/src%2Fcompiletest%2Fruntest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6824f1365d2d1dc967c92bec11c44920bbf3da68/src%2Fcompiletest%2Fruntest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcompiletest%2Fruntest.rs?ref=6824f1365d2d1dc967c92bec11c44920bbf3da68", "patch": "@@ -11,7 +11,7 @@\n use self::TargetLocation::*;\n \n use common::Config;\n-use common::{CompileFail, Pretty, RunFail, RunPass, RunPassValgrind, DebugInfoGdb};\n+use common::{CompileFail, ParseFail, Pretty, RunFail, RunPass, RunPassValgrind, DebugInfoGdb};\n use common::{Codegen, DebugInfoLldb};\n use errors;\n use header::TestProps;\n@@ -66,6 +66,7 @@ pub fn run_metrics(config: Config, testfile: String, mm: &mut MetricMap) {\n     debug!(\"loaded props\");\n     match config.mode {\n       CompileFail => run_cfail_test(&config, &props, &testfile),\n+      ParseFail => run_cfail_test(&config, &props, &testfile),\n       RunFail => run_rfail_test(&config, &props, &testfile),\n       RunPass => run_rpass_test(&config, &props, &testfile),\n       RunPassValgrind => run_valgrind_test(&config, &props, &testfile),\n@@ -88,7 +89,7 @@ fn run_cfail_test(config: &Config, props: &TestProps, testfile: &Path) {\n     let proc_res = compile_test(config, props, testfile);\n \n     if proc_res.status.success() {\n-        fatal_proc_rec(\"compile-fail test compiled successfully!\",\n+        fatal_proc_rec(&format!(\"{} test compiled successfully!\", config.mode)[],\n                       &proc_res);\n     }\n "}]}