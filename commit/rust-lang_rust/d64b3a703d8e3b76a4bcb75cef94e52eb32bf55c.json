{"sha": "d64b3a703d8e3b76a4bcb75cef94e52eb32bf55c", "node_id": "C_kwDOAAsO6NoAKGQ2NGIzYTcwM2Q4ZTNiNzZhNGJjYjc1Y2VmOTRlNTJlYjMyYmY1NWM", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2021-10-23T03:28:21Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-10-23T03:28:21Z"}, "message": "Rollup merge of #89416 - notriddle:notriddle/do-not-elide-lifetimes-in-region-errors, r=jackh726\n\nnice_region_error: Include lifetime placeholders in error output\n\nAs you can see in src/test/ui/traits/self-without-lifetime-constraint.stderr\nyou can get very confusing type names if you don't have this.\n\nFixes #87763", "tree": {"sha": "65568b8d1a67b78f9e2d8afd36894a4c37d6fb77", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/65568b8d1a67b78f9e2d8afd36894a4c37d6fb77"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d64b3a703d8e3b76a4bcb75cef94e52eb32bf55c", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJhc4FVCRBK7hj4Ov3rIwAAthUIAAMQq9+wx4ueNVt+a/VNMhWB\nQfQKscTVJreIc00wBh/m3mglgRLrfrtfe/c+9FO+RPQJ/C7avCM90b6o8JCl1nAm\n3+Uvc/aMQEQU6jfl8pFPvfpvLEpxUFD/qPMDfPgNpPPQY7TEF+MCS0Xx+QRUCZan\nOmVomOTlMkSCTDUX3wi311e76J0hdbqjUvP5O6QWH+SoUjFukP/pq/jn7tpeeCW8\nDR/RwD4ERWnjrK2oKTcUQTBqcXA04UPPeO5x6fSGqt4ki2hzHx8LL2IlwDXzVHKv\nnWB9xMDZ5IlnqfhtLkrjWexbgOY2O8CJsGbK1vZGWq2qAeujz1MbZBn7EeP2Y+A=\n=DX9I\n-----END PGP SIGNATURE-----\n", "payload": "tree 65568b8d1a67b78f9e2d8afd36894a4c37d6fb77\nparent df430624b6274f06800f7323a2702b661cee0a84\nparent 98ed5548d7e604470ab9a97ffed4d9c12e424d83\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1634959701 +0200\ncommitter GitHub <noreply@github.com> 1634959701 +0200\n\nRollup merge of #89416 - notriddle:notriddle/do-not-elide-lifetimes-in-region-errors, r=jackh726\n\nnice_region_error: Include lifetime placeholders in error output\n\nAs you can see in src/test/ui/traits/self-without-lifetime-constraint.stderr\nyou can get very confusing type names if you don't have this.\n\nFixes #87763\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d64b3a703d8e3b76a4bcb75cef94e52eb32bf55c", "html_url": "https://github.com/rust-lang/rust/commit/d64b3a703d8e3b76a4bcb75cef94e52eb32bf55c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d64b3a703d8e3b76a4bcb75cef94e52eb32bf55c/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "df430624b6274f06800f7323a2702b661cee0a84", "url": "https://api.github.com/repos/rust-lang/rust/commits/df430624b6274f06800f7323a2702b661cee0a84", "html_url": "https://github.com/rust-lang/rust/commit/df430624b6274f06800f7323a2702b661cee0a84"}, {"sha": "98ed5548d7e604470ab9a97ffed4d9c12e424d83", "url": "https://api.github.com/repos/rust-lang/rust/commits/98ed5548d7e604470ab9a97ffed4d9c12e424d83", "html_url": "https://github.com/rust-lang/rust/commit/98ed5548d7e604470ab9a97ffed4d9c12e424d83"}], "stats": {"total": 115, "additions": 76, "deletions": 39}, "files": [{"sha": "b9e7ee12bc86df55872e82a103729820232a1483", "filename": "compiler/rustc_infer/src/infer/error_reporting/nice_region_error/trait_impl_difference.rs", "status": "modified", "additions": 48, "deletions": 11, "changes": 59, "blob_url": "https://github.com/rust-lang/rust/blob/d64b3a703d8e3b76a4bcb75cef94e52eb32bf55c/compiler%2Frustc_infer%2Fsrc%2Finfer%2Ferror_reporting%2Fnice_region_error%2Ftrait_impl_difference.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d64b3a703d8e3b76a4bcb75cef94e52eb32bf55c/compiler%2Frustc_infer%2Fsrc%2Finfer%2Ferror_reporting%2Fnice_region_error%2Ftrait_impl_difference.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_infer%2Fsrc%2Finfer%2Ferror_reporting%2Fnice_region_error%2Ftrait_impl_difference.rs?ref=d64b3a703d8e3b76a4bcb75cef94e52eb32bf55c", "patch": "@@ -9,10 +9,13 @@ use rustc_hir as hir;\n use rustc_hir::def::Res;\n use rustc_hir::def_id::DefId;\n use rustc_hir::intravisit::Visitor;\n-use rustc_middle::ty::error::ExpectedFound;\n-use rustc_middle::ty::{self, Ty, TyCtxt};\n+use rustc_middle::ty::print::RegionHighlightMode;\n+use rustc_middle::ty::{self, Ty, TyCtxt, TypeFoldable, TypeVisitor};\n+\n use rustc_span::{MultiSpan, Span, Symbol};\n \n+use std::ops::ControlFlow;\n+\n impl<'a, 'tcx> NiceRegionError<'a, 'tcx> {\n     /// Print the error message for lifetime errors when the `impl` doesn't conform to the `trait`.\n     pub(super) fn try_report_impl_not_conforming_to_trait(&self) -> Option<ErrorReported> {\n@@ -69,6 +72,47 @@ impl<'a, 'tcx> NiceRegionError<'a, 'tcx> {\n             .tcx()\n             .sess\n             .struct_span_err(sp, \"`impl` item signature doesn't match `trait` item signature\");\n+\n+        // Mark all unnamed regions in the type with a number.\n+        // This diagnostic is called in response to lifetime errors, so be informative.\n+        struct HighlightBuilder<'tcx> {\n+            highlight: RegionHighlightMode,\n+            tcx: TyCtxt<'tcx>,\n+            counter: usize,\n+        }\n+\n+        impl HighlightBuilder<'tcx> {\n+            fn build(tcx: TyCtxt<'tcx>, ty: Ty<'tcx>) -> RegionHighlightMode {\n+                let mut builder =\n+                    HighlightBuilder { highlight: RegionHighlightMode::default(), counter: 1, tcx };\n+                builder.visit_ty(ty);\n+                builder.highlight\n+            }\n+        }\n+\n+        impl<'tcx> ty::fold::TypeVisitor<'tcx> for HighlightBuilder<'tcx> {\n+            fn tcx_for_anon_const_substs(&self) -> Option<TyCtxt<'tcx>> {\n+                Some(self.tcx)\n+            }\n+\n+            fn visit_region(&mut self, r: ty::Region<'tcx>) -> ControlFlow<Self::BreakTy> {\n+                if !r.has_name() && self.counter <= 3 {\n+                    self.highlight.highlighting_region(r, self.counter);\n+                    self.counter += 1;\n+                }\n+                r.super_visit_with(self)\n+            }\n+        }\n+\n+        let expected_highlight = HighlightBuilder::build(self.tcx(), expected);\n+        let expected = self\n+            .infcx\n+            .extract_inference_diagnostics_data(expected.into(), Some(expected_highlight))\n+            .name;\n+        let found_highlight = HighlightBuilder::build(self.tcx(), found);\n+        let found =\n+            self.infcx.extract_inference_diagnostics_data(found.into(), Some(found_highlight)).name;\n+\n         err.span_label(sp, &format!(\"found `{}`\", found));\n         err.span_label(trait_sp, &format!(\"expected `{}`\", expected));\n \n@@ -96,15 +140,8 @@ impl<'a, 'tcx> NiceRegionError<'a, 'tcx> {\n             );\n         }\n \n-        if let Some((expected, found)) =\n-            self.infcx.expected_found_str_ty(ExpectedFound { expected, found })\n-        {\n-            // Highlighted the differences when showing the \"expected/found\" note.\n-            err.note_expected_found(&\"\", expected, &\"\", found);\n-        } else {\n-            // This fallback shouldn't be necessary, but let's keep it in just in case.\n-            err.note(&format!(\"expected `{}`\\n   found `{}`\", expected, found));\n-        }\n+        err.note(&format!(\"expected `{}`\\n   found `{}`\", expected, found));\n+\n         err.span_help(\n             type_param_span,\n             \"the lifetime requirements from the `impl` do not correspond to the requirements in \\"}, {"sha": "0546b6b51b27342f71de3f2bbf09ef055d7f4c0b", "filename": "src/test/ui/in-band-lifetimes/mismatched_trait_impl-2.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/d64b3a703d8e3b76a4bcb75cef94e52eb32bf55c/src%2Ftest%2Fui%2Fin-band-lifetimes%2Fmismatched_trait_impl-2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d64b3a703d8e3b76a4bcb75cef94e52eb32bf55c/src%2Ftest%2Fui%2Fin-band-lifetimes%2Fmismatched_trait_impl-2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fin-band-lifetimes%2Fmismatched_trait_impl-2.stderr?ref=d64b3a703d8e3b76a4bcb75cef94e52eb32bf55c", "patch": "@@ -2,15 +2,15 @@ error: `impl` item signature doesn't match `trait` item signature\n   --> $DIR/mismatched_trait_impl-2.rs:8:5\n    |\n LL |     fn deref(&self) -> &dyn Trait {\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ found `fn(&Struct) -> &dyn Trait`\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ found `fn(&'1 Struct) -> &'1 (dyn Trait + '1)`\n    |\n   ::: $SRC_DIR/core/src/ops/deref.rs:LL:COL\n    |\n LL |     fn deref(&self) -> &Self::Target;\n-   |     --------------------------------- expected `fn(&Struct) -> &(dyn Trait + 'static)`\n+   |     --------------------------------- expected `fn(&'1 Struct) -> &'1 (dyn Trait + 'static)`\n    |\n-   = note: expected `fn(&Struct) -> &(dyn Trait + 'static)`\n-              found `fn(&Struct) -> &dyn Trait`\n+   = note: expected `fn(&'1 Struct) -> &'1 (dyn Trait + 'static)`\n+              found `fn(&'1 Struct) -> &'1 (dyn Trait + '1)`\n    = help: the lifetime requirements from the `impl` do not correspond to the requirements in the `trait`\n    = help: verify the lifetime relationships in the `trait` and `impl` between the `self` argument, the other inputs and its output\n "}, {"sha": "c7a90c57add836b83d5f75a39b565a2693c58521", "filename": "src/test/ui/in-band-lifetimes/mismatched_trait_impl.nll.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/d64b3a703d8e3b76a4bcb75cef94e52eb32bf55c/src%2Ftest%2Fui%2Fin-band-lifetimes%2Fmismatched_trait_impl.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d64b3a703d8e3b76a4bcb75cef94e52eb32bf55c/src%2Ftest%2Fui%2Fin-band-lifetimes%2Fmismatched_trait_impl.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fin-band-lifetimes%2Fmismatched_trait_impl.nll.stderr?ref=d64b3a703d8e3b76a4bcb75cef94e52eb32bf55c", "patch": "@@ -2,13 +2,13 @@ error: `impl` item signature doesn't match `trait` item signature\n   --> $DIR/mismatched_trait_impl.rs:9:5\n    |\n LL |     fn foo(&self, x: &'a u32, y: &u32) -> &'a u32;\n-   |     ---------------------------------------------- expected `fn(&i32, &'a u32, &u32) -> &'a u32`\n+   |     ---------------------------------------------- expected `fn(&'1 i32, &'a u32, &'2 u32) -> &'a u32`\n ...\n LL |     fn foo(&self, x: &u32, y: &'a u32) -> &'a u32 {\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ found `fn(&i32, &u32, &u32) -> &u32`\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ found `fn(&'1 i32, &'2 u32, &'3 u32) -> &'3 u32`\n    |\n-   = note: expected `fn(&i32, &'a u32, &u32) -> &'a u32`\n-              found `fn(&i32, &u32, &u32) -> &u32`\n+   = note: expected `fn(&'1 i32, &'a u32, &'2 u32) -> &'a u32`\n+              found `fn(&'1 i32, &'2 u32, &'3 u32) -> &'3 u32`\n    = help: the lifetime requirements from the `impl` do not correspond to the requirements in the `trait`\n    = help: verify the lifetime relationships in the `trait` and `impl` between the `self` argument, the other inputs and its output\n "}, {"sha": "84e5339122ead338eee30d7ad1e85c932e43d22f", "filename": "src/test/ui/in-band-lifetimes/mismatched_trait_impl.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/d64b3a703d8e3b76a4bcb75cef94e52eb32bf55c/src%2Ftest%2Fui%2Fin-band-lifetimes%2Fmismatched_trait_impl.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d64b3a703d8e3b76a4bcb75cef94e52eb32bf55c/src%2Ftest%2Fui%2Fin-band-lifetimes%2Fmismatched_trait_impl.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fin-band-lifetimes%2Fmismatched_trait_impl.stderr?ref=d64b3a703d8e3b76a4bcb75cef94e52eb32bf55c", "patch": "@@ -2,13 +2,13 @@ error: `impl` item signature doesn't match `trait` item signature\n   --> $DIR/mismatched_trait_impl.rs:9:5\n    |\n LL |     fn foo(&self, x: &'a u32, y: &u32) -> &'a u32;\n-   |     ---------------------------------------------- expected `fn(&i32, &'a u32, &u32) -> &'a u32`\n+   |     ---------------------------------------------- expected `fn(&'1 i32, &'a u32, &'2 u32) -> &'a u32`\n ...\n LL |     fn foo(&self, x: &u32, y: &'a u32) -> &'a u32 {\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ found `fn(&i32, &u32, &u32) -> &u32`\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ found `fn(&'1 i32, &'2 u32, &'3 u32) -> &'3 u32`\n    |\n-   = note: expected `fn(&i32, &'a u32, &u32) -> &'a u32`\n-              found `fn(&i32, &u32, &u32) -> &u32`\n+   = note: expected `fn(&'1 i32, &'a u32, &'2 u32) -> &'a u32`\n+              found `fn(&'1 i32, &'2 u32, &'3 u32) -> &'3 u32`\n    = help: the lifetime requirements from the `impl` do not correspond to the requirements in the `trait`\n    = help: verify the lifetime relationships in the `trait` and `impl` between the `self` argument, the other inputs and its output\n "}, {"sha": "3040a8512ce1d9b9fbf050796590fb78de9b45d8", "filename": "src/test/ui/lifetimes/lifetime-mismatch-between-trait-and-impl.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/d64b3a703d8e3b76a4bcb75cef94e52eb32bf55c/src%2Ftest%2Fui%2Flifetimes%2Flifetime-mismatch-between-trait-and-impl.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d64b3a703d8e3b76a4bcb75cef94e52eb32bf55c/src%2Ftest%2Fui%2Flifetimes%2Flifetime-mismatch-between-trait-and-impl.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flifetimes%2Flifetime-mismatch-between-trait-and-impl.stderr?ref=d64b3a703d8e3b76a4bcb75cef94e52eb32bf55c", "patch": "@@ -2,13 +2,13 @@ error: `impl` item signature doesn't match `trait` item signature\n   --> $DIR/lifetime-mismatch-between-trait-and-impl.rs:6:5\n    |\n LL |     fn foo<'a>(x: &i32, y: &'a i32) -> &'a i32;\n-   |     ------------------------------------------- expected `fn(&i32, &'a i32) -> &'a i32`\n+   |     ------------------------------------------- expected `fn(&'1 i32, &'a i32) -> &'a i32`\n ...\n LL |     fn foo<'a>(x: &'a i32, y: &'a i32) -> &'a i32 {\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ found `fn(&i32, &i32) -> &i32`\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ found `fn(&'1 i32, &'1 i32) -> &'1 i32`\n    |\n-   = note: expected `fn(&i32, &'a i32) -> &'a i32`\n-              found `fn(&i32, &i32) -> &i32`\n+   = note: expected `fn(&'1 i32, &'a i32) -> &'a i32`\n+              found `fn(&'1 i32, &'1 i32) -> &'1 i32`\n    = help: the lifetime requirements from the `impl` do not correspond to the requirements in the `trait`\n    = help: verify the lifetime relationships in the `trait` and `impl` between the `self` argument, the other inputs and its output\n "}, {"sha": "2a2c23c94212f17f434c0e287e70c28ee2f845f2", "filename": "src/test/ui/mismatched_types/issue-75361-mismatched-impl.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/d64b3a703d8e3b76a4bcb75cef94e52eb32bf55c/src%2Ftest%2Fui%2Fmismatched_types%2Fissue-75361-mismatched-impl.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d64b3a703d8e3b76a4bcb75cef94e52eb32bf55c/src%2Ftest%2Fui%2Fmismatched_types%2Fissue-75361-mismatched-impl.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmismatched_types%2Fissue-75361-mismatched-impl.stderr?ref=d64b3a703d8e3b76a4bcb75cef94e52eb32bf55c", "patch": "@@ -2,13 +2,13 @@ error: `impl` item signature doesn't match `trait` item signature\n   --> $DIR/issue-75361-mismatched-impl.rs:18:3\n    |\n LL |   fn adjacent_edges(&self) -> Box<dyn MyTrait<Item = &Self::EdgeType>>;\n-   |   --------------------------------------------------------------------- expected `fn(&T) -> Box<(dyn MyTrait<Item = &T> + 'static)>`\n+   |   --------------------------------------------------------------------- expected `fn(&'1 T) -> Box<(dyn MyTrait<Item = &'1 T> + 'static)>`\n ...\n LL |   fn adjacent_edges(&self) -> Box<dyn MyTrait<Item = &Self::EdgeType> + '_> {\n-   |   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ found `fn(&T) -> Box<dyn MyTrait<Item = &T>>`\n+   |   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ found `fn(&'1 T) -> Box<(dyn MyTrait<Item = &'1 T> + '1)>`\n    |\n-   = note: expected `fn(&T) -> Box<(dyn MyTrait<Item = &T> + 'static)>`\n-              found `fn(&T) -> Box<dyn MyTrait<Item = &T>>`\n+   = note: expected `fn(&'1 T) -> Box<(dyn MyTrait<Item = &'1 T> + 'static)>`\n+              found `fn(&'1 T) -> Box<(dyn MyTrait<Item = &'1 T> + '1)>`\n help: the lifetime requirements from the `impl` do not correspond to the requirements in the `trait`\n   --> $DIR/issue-75361-mismatched-impl.rs:12:55\n    |"}, {"sha": "118b2cf3ecd857a2a3f6d5a43c5cc182927345a6", "filename": "src/test/ui/traits/param-without-lifetime-constraint.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/d64b3a703d8e3b76a4bcb75cef94e52eb32bf55c/src%2Ftest%2Fui%2Ftraits%2Fparam-without-lifetime-constraint.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d64b3a703d8e3b76a4bcb75cef94e52eb32bf55c/src%2Ftest%2Fui%2Ftraits%2Fparam-without-lifetime-constraint.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftraits%2Fparam-without-lifetime-constraint.stderr?ref=d64b3a703d8e3b76a4bcb75cef94e52eb32bf55c", "patch": "@@ -2,13 +2,13 @@ error: `impl` item signature doesn't match `trait` item signature\n   --> $DIR/param-without-lifetime-constraint.rs:14:5\n    |\n LL |     fn get_relation(&self) -> To;\n-   |     ----------------------------- expected `fn(&Article) -> &ProofReader`\n+   |     ----------------------------- expected `fn(&'1 Article) -> &'2 ProofReader`\n ...\n LL |     fn get_relation(&self) -> &ProofReader {\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ found `fn(&Article) -> &ProofReader`\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ found `fn(&'1 Article) -> &'1 ProofReader`\n    |\n-   = note: expected `fn(&Article) -> &ProofReader`\n-              found `fn(&Article) -> &ProofReader`\n+   = note: expected `fn(&'1 Article) -> &'2 ProofReader`\n+              found `fn(&'1 Article) -> &'1 ProofReader`\n help: the lifetime requirements from the `impl` do not correspond to the requirements in the `trait`\n   --> $DIR/param-without-lifetime-constraint.rs:10:31\n    |"}, {"sha": "85fada3b87c38a6cb8a50d18d6659f97c32d12ed", "filename": "src/test/ui/traits/self-without-lifetime-constraint.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/d64b3a703d8e3b76a4bcb75cef94e52eb32bf55c/src%2Ftest%2Fui%2Ftraits%2Fself-without-lifetime-constraint.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d64b3a703d8e3b76a4bcb75cef94e52eb32bf55c/src%2Ftest%2Fui%2Ftraits%2Fself-without-lifetime-constraint.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftraits%2Fself-without-lifetime-constraint.stderr?ref=d64b3a703d8e3b76a4bcb75cef94e52eb32bf55c", "patch": "@@ -2,13 +2,13 @@ error: `impl` item signature doesn't match `trait` item signature\n   --> $DIR/self-without-lifetime-constraint.rs:45:5\n    |\n LL |     fn column_result(value: ValueRef<'_>) -> FromSqlResult<Self, &Self>;\n-   |     -------------------------------------------------------------------- expected `fn(ValueRef<'_>) -> Result<(&str, &&str), FromSqlError>`\n+   |     -------------------------------------------------------------------- expected `fn(ValueRef<'1>) -> Result<(&'2 str, &'1 &'2 str), FromSqlError>`\n ...\n LL |     fn column_result(value: ValueRef<'_>) -> FromSqlResult<&str, &&str> {\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ found `fn(ValueRef<'_>) -> Result<(&str, &&str), FromSqlError>`\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ found `fn(ValueRef<'1>) -> Result<(&'1 str, &'1 &'1 str), FromSqlError>`\n    |\n-   = note: expected `fn(ValueRef<'_>) -> Result<(&str, &&str), _>`\n-              found `fn(ValueRef<'_>) -> Result<(&str, &&str), _>`\n+   = note: expected `fn(ValueRef<'1>) -> Result<(&'2 str, &'1 &'2 str), FromSqlError>`\n+              found `fn(ValueRef<'1>) -> Result<(&'1 str, &'1 &'1 str), FromSqlError>`\n help: the lifetime requirements from the `impl` do not correspond to the requirements in the `trait`\n   --> $DIR/self-without-lifetime-constraint.rs:41:60\n    |"}]}