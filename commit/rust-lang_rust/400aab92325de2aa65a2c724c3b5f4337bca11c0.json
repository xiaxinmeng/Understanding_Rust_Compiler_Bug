{"sha": "400aab92325de2aa65a2c724c3b5f4337bca11c0", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQwMGFhYjkyMzI1ZGUyYWE2NWEyYzcyNGMzYjVmNDMzN2JjYTExYzA=", "commit": {"author": {"name": "Oliver Schneider", "email": "oli-obk@users.noreply.github.com", "date": "2018-05-29T13:30:32Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2018-05-29T13:30:32Z"}, "message": "Merge pull request #2820 from flip1995/unused_def_conf\n\nRemove unused define_conf-macro definitions", "tree": {"sha": "0bd7c637451311de8362ff67d92e34249dc7b67e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0bd7c637451311de8362ff67d92e34249dc7b67e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/400aab92325de2aa65a2c724c3b5f4337bca11c0", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJbDVX4CRBK7hj4Ov3rIwAAdHIIAFjuPfXLwxolNb5yb/FS2LpJ\nHz/LDXRJDqlmBrw6KOfMvad1STq9kNwLUI+WJPmkA/WOxewzpV1VEoIc7xxIuDrA\nBDQ1LppAlyB+uShCzUXezx47+MlLUDGTfUdn72//ypXSyQq0VanppOrsSnBCOUj7\nY2HjQmPm3RtJwO780Jdc9h0N0XfmEq0ZhnpG71uebOBysWFAUixm1lRhhtEjv2bu\nGoq3WF+yAFviTlmCMdjN216FZwPumOKdhlZdPcAb0UcGFDzGsVXBNPDjWpph2Dmr\nNZqHy6gjt8XBf96MOK9fJ5DSu5B/c0FHY9QNeLPkVRdse/ihLiRUySPQ0M0WNFU=\n=g2ph\n-----END PGP SIGNATURE-----\n", "payload": "tree 0bd7c637451311de8362ff67d92e34249dc7b67e\nparent a338fa9b9538cf8079d084db155feb03c6f88ce7\nparent 3a41e0172c013d8e2842b05db91d5cb3c745590e\nauthor Oliver Schneider <oli-obk@users.noreply.github.com> 1527600632 +0200\ncommitter GitHub <noreply@github.com> 1527600632 +0200\n\nMerge pull request #2820 from flip1995/unused_def_conf\n\nRemove unused define_conf-macro definitions"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/400aab92325de2aa65a2c724c3b5f4337bca11c0", "html_url": "https://github.com/rust-lang/rust/commit/400aab92325de2aa65a2c724c3b5f4337bca11c0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/400aab92325de2aa65a2c724c3b5f4337bca11c0/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a338fa9b9538cf8079d084db155feb03c6f88ce7", "url": "https://api.github.com/repos/rust-lang/rust/commits/a338fa9b9538cf8079d084db155feb03c6f88ce7", "html_url": "https://github.com/rust-lang/rust/commit/a338fa9b9538cf8079d084db155feb03c6f88ce7"}, {"sha": "3a41e0172c013d8e2842b05db91d5cb3c745590e", "url": "https://api.github.com/repos/rust-lang/rust/commits/3a41e0172c013d8e2842b05db91d5cb3c745590e", "html_url": "https://github.com/rust-lang/rust/commit/3a41e0172c013d8e2842b05db91d5cb3c745590e"}], "stats": {"total": 23, "additions": 0, "deletions": 23}, "files": [{"sha": "27b7bdaf85e8030a037b9de71b6e3b410224c2b7", "filename": "clippy_lints/src/utils/conf.rs", "status": "modified", "additions": 0, "deletions": 23, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/400aab92325de2aa65a2c724c3b5f4337bca11c0/clippy_lints%2Fsrc%2Futils%2Fconf.rs", "raw_url": "https://github.com/rust-lang/rust/raw/400aab92325de2aa65a2c724c3b5f4337bca11c0/clippy_lints%2Fsrc%2Futils%2Fconf.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Futils%2Fconf.rs?ref=400aab92325de2aa65a2c724c3b5f4337bca11c0", "patch": "@@ -113,29 +113,6 @@ macro_rules! define_Conf {\n     // hack to convert tts\n     (TY $ty: ty) => { $ty };\n \n-    // how to read the value?\n-    (CONV i64, $value: expr) => { $value.as_integer() };\n-    (CONV u64, $value: expr) => {\n-        $value.as_integer()\n-        .iter()\n-        .filter_map(|&i| if i >= 0 { Some(i as u64) } else { None })\n-        .next()\n-    };\n-    (CONV String, $value: expr) => { $value.as_str().map(Into::into) };\n-    (CONV Vec<String>, $value: expr) => {{\n-        let slice = $value.as_array();\n-\n-        if let Some(slice) = slice {\n-            if slice.iter().any(|v| v.as_str().is_none()) {\n-                None\n-            } else {\n-                Some(slice.iter().map(|v| v.as_str().expect(\"already checked\").to_owned()).collect())\n-            }\n-        } else {\n-            None\n-        }\n-    }};\n-\n     // provide a nicer syntax to declare the default value of `Vec<String>` variables\n     (DEFAULT Vec<String>, $e: expr) => { $e.iter().map(|&e| e.to_owned()).collect() };\n     (DEFAULT $ty: ty, $e: expr) => { $e };"}]}