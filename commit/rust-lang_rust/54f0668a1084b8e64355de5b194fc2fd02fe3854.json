{"sha": "54f0668a1084b8e64355de5b194fc2fd02fe3854", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU0ZjA2NjhhMTA4NGI4ZTY0MzU1ZGU1YjE5NGZjMmZkMDJmZTM4NTQ=", "commit": {"author": {"name": "Nikita Popov", "email": "nikita.ppv@gmail.com", "date": "2018-05-22T17:23:40Z"}, "committer": {"name": "Nikita Popov", "email": "nikita.ppv@gmail.com", "date": "2018-05-22T17:23:40Z"}, "message": "Add -Z no-parallel-llvm flag\n\nCodegen issues commonly only manifest under specific circumstances,\ne.g. if multiple codegen units are used and ThinLTO is enabled.\nHowever, these configuration are threaded, making the use of LLVM\ndebugging facilities hard, as output is interleaved.\n\nThis patch adds a -Z no-parallel-llvm flag, which allows disabling\nparallelization of codegen and linking, while otherwise preserving\nbehavior with regard to codegen units and LTO.", "tree": {"sha": "7a536a53356594f686228b6281890eeb118770a1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7a536a53356594f686228b6281890eeb118770a1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/54f0668a1084b8e64355de5b194fc2fd02fe3854", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/54f0668a1084b8e64355de5b194fc2fd02fe3854", "html_url": "https://github.com/rust-lang/rust/commit/54f0668a1084b8e64355de5b194fc2fd02fe3854", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/54f0668a1084b8e64355de5b194fc2fd02fe3854/comments", "author": {"login": "nikic", "id": 216080, "node_id": "MDQ6VXNlcjIxNjA4MA==", "avatar_url": "https://avatars.githubusercontent.com/u/216080?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikic", "html_url": "https://github.com/nikic", "followers_url": "https://api.github.com/users/nikic/followers", "following_url": "https://api.github.com/users/nikic/following{/other_user}", "gists_url": "https://api.github.com/users/nikic/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikic/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikic/subscriptions", "organizations_url": "https://api.github.com/users/nikic/orgs", "repos_url": "https://api.github.com/users/nikic/repos", "events_url": "https://api.github.com/users/nikic/events{/privacy}", "received_events_url": "https://api.github.com/users/nikic/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikic", "id": 216080, "node_id": "MDQ6VXNlcjIxNjA4MA==", "avatar_url": "https://avatars.githubusercontent.com/u/216080?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikic", "html_url": "https://github.com/nikic", "followers_url": "https://api.github.com/users/nikic/followers", "following_url": "https://api.github.com/users/nikic/following{/other_user}", "gists_url": "https://api.github.com/users/nikic/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikic/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikic/subscriptions", "organizations_url": "https://api.github.com/users/nikic/orgs", "repos_url": "https://api.github.com/users/nikic/repos", "events_url": "https://api.github.com/users/nikic/events{/privacy}", "received_events_url": "https://api.github.com/users/nikic/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9f80ea32811db0bdbd05b1bef59f5db26b3e24a9", "url": "https://api.github.com/repos/rust-lang/rust/commits/9f80ea32811db0bdbd05b1bef59f5db26b3e24a9", "html_url": "https://github.com/rust-lang/rust/commit/9f80ea32811db0bdbd05b1bef59f5db26b3e24a9"}], "stats": {"total": 10, "additions": 8, "deletions": 2}, "files": [{"sha": "b3f1b9c8e627c7e25f777980d7cb5c4df31825aa", "filename": "src/librustc/session/config.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/54f0668a1084b8e64355de5b194fc2fd02fe3854/src%2Flibrustc%2Fsession%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/54f0668a1084b8e64355de5b194fc2fd02fe3854/src%2Flibrustc%2Fsession%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fsession%2Fconfig.rs?ref=54f0668a1084b8e64355de5b194fc2fd02fe3854", "patch": "@@ -1337,6 +1337,8 @@ options! {DebuggingOptions, DebuggingSetter, basic_debugging_options,\n           \"enable the experimental Chalk-based trait solving engine\"),\n     cross_lang_lto: CrossLangLto = (CrossLangLto::Disabled, parse_cross_lang_lto, [TRACKED],\n           \"generate build artifacts that are compatible with linker-based LTO.\"),\n+    no_parallel_llvm: bool = (false, parse_bool, [UNTRACKED],\n+          \"don't run LLVM in parallel (while keeping codegen-units and ThinLTO)\"),\n }\n \n pub fn default_lib_output() -> CrateType {"}, {"sha": "baab3c618be58e84a5c6e3820c907976be1d5301", "filename": "src/librustc_codegen_llvm/back/write.rs", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/54f0668a1084b8e64355de5b194fc2fd02fe3854/src%2Flibrustc_codegen_llvm%2Fback%2Fwrite.rs", "raw_url": "https://github.com/rust-lang/rust/raw/54f0668a1084b8e64355de5b194fc2fd02fe3854/src%2Flibrustc_codegen_llvm%2Fback%2Fwrite.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Fback%2Fwrite.rs?ref=54f0668a1084b8e64355de5b194fc2fd02fe3854", "patch": "@@ -1738,7 +1738,9 @@ fn start_executing_work(tcx: TyCtxt,\n                             .binary_search_by_key(&cost, |&(_, cost)| cost)\n                             .unwrap_or_else(|e| e);\n                         work_items.insert(insertion_index, (work, cost));\n-                        helper.request_token();\n+                        if !cgcx.opts.debugging_opts.no_parallel_llvm {\n+                            helper.request_token();\n+                        }\n                     }\n                 }\n \n@@ -1842,7 +1844,9 @@ fn start_executing_work(tcx: TyCtxt,\n                     };\n                     work_items.insert(insertion_index, (llvm_work_item, cost));\n \n-                    helper.request_token();\n+                    if !cgcx.opts.debugging_opts.no_parallel_llvm {\n+                        helper.request_token();\n+                    }\n                     assert_eq!(main_thread_worker_state,\n                                MainThreadWorkerState::Codegenning);\n                     main_thread_worker_state = MainThreadWorkerState::Idle;"}]}