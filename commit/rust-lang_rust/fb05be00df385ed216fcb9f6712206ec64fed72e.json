{"sha": "fb05be00df385ed216fcb9f6712206ec64fed72e", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZiMDViZTAwZGYzODVlZDIxNmZjYjlmNjcxMjIwNmVjNjRmZWQ3MmU=", "commit": {"author": {"name": "Josh Stone", "email": "jistone@redhat.com", "date": "2020-08-18T22:11:02Z"}, "committer": {"name": "Josh Stone", "email": "jistone@redhat.com", "date": "2020-08-22T20:44:54Z"}, "message": "Match scalar-pair-bool more flexibly for LLVM 11\n\nLLVM 11 started using `phi` and `select` for `fn pair_i32_bool`, which\nis still valid, but harder to match than the simple instructions we were\ngetting before. We'll just check that the unpacked args are directly\nreferenced in any way, and call it good.", "tree": {"sha": "8e944efec8383ad535ae54c19c81b765b95b5854", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8e944efec8383ad535ae54c19c81b765b95b5854"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fb05be00df385ed216fcb9f6712206ec64fed72e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fb05be00df385ed216fcb9f6712206ec64fed72e", "html_url": "https://github.com/rust-lang/rust/commit/fb05be00df385ed216fcb9f6712206ec64fed72e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fb05be00df385ed216fcb9f6712206ec64fed72e/comments", "author": {"login": "cuviper", "id": 36186, "node_id": "MDQ6VXNlcjM2MTg2", "avatar_url": "https://avatars.githubusercontent.com/u/36186?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cuviper", "html_url": "https://github.com/cuviper", "followers_url": "https://api.github.com/users/cuviper/followers", "following_url": "https://api.github.com/users/cuviper/following{/other_user}", "gists_url": "https://api.github.com/users/cuviper/gists{/gist_id}", "starred_url": "https://api.github.com/users/cuviper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cuviper/subscriptions", "organizations_url": "https://api.github.com/users/cuviper/orgs", "repos_url": "https://api.github.com/users/cuviper/repos", "events_url": "https://api.github.com/users/cuviper/events{/privacy}", "received_events_url": "https://api.github.com/users/cuviper/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cuviper", "id": 36186, "node_id": "MDQ6VXNlcjM2MTg2", "avatar_url": "https://avatars.githubusercontent.com/u/36186?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cuviper", "html_url": "https://github.com/cuviper", "followers_url": "https://api.github.com/users/cuviper/followers", "following_url": "https://api.github.com/users/cuviper/following{/other_user}", "gists_url": "https://api.github.com/users/cuviper/gists{/gist_id}", "starred_url": "https://api.github.com/users/cuviper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cuviper/subscriptions", "organizations_url": "https://api.github.com/users/cuviper/orgs", "repos_url": "https://api.github.com/users/cuviper/repos", "events_url": "https://api.github.com/users/cuviper/events{/privacy}", "received_events_url": "https://api.github.com/users/cuviper/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5c87749a271f82ab269603ade13867ffd50778ec", "url": "https://api.github.com/repos/rust-lang/rust/commits/5c87749a271f82ab269603ade13867ffd50778ec", "html_url": "https://github.com/rust-lang/rust/commit/5c87749a271f82ab269603ade13867ffd50778ec"}], "stats": {"total": 5, "additions": 3, "deletions": 2}, "files": [{"sha": "4704c8ad797d8a5a3fc347073c522009948e6925", "filename": "src/test/codegen/scalar-pair-bool.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/fb05be00df385ed216fcb9f6712206ec64fed72e/src%2Ftest%2Fcodegen%2Fscalar-pair-bool.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fb05be00df385ed216fcb9f6712206ec64fed72e/src%2Ftest%2Fcodegen%2Fscalar-pair-bool.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcodegen%2Fscalar-pair-bool.rs?ref=fb05be00df385ed216fcb9f6712206ec64fed72e", "patch": "@@ -24,8 +24,9 @@ pub fn pair_i32_bool(pair: (i32, bool)) -> (i32, bool) {\n #[no_mangle]\n pub fn pair_and_or((a, b): (bool, bool)) -> (bool, bool) {\n     // Make sure it can operate directly on the unpacked args\n-    // CHECK: and i1 %_1.0, %_1.1\n-    // CHECK: or i1 %_1.0, %_1.1\n+    // (but it might not be using simple and/or instructions)\n+    // CHECK-DAG: %_1.0\n+    // CHECK-DAG: %_1.1\n     (a && b, a || b)\n }\n "}]}