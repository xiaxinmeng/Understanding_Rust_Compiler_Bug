{"sha": "5db48a382a928969be301ee416df27f6508105c2", "node_id": "MDY6Q29tbWl0NzI0NzEyOjVkYjQ4YTM4MmE5Mjg5NjliZTMwMWVlNDE2ZGYyN2Y2NTA4MTA1YzI=", "commit": {"author": {"name": "Cameron Steffen", "email": "cam.steffen94@gmail.com", "date": "2021-02-03T17:45:16Z"}, "committer": {"name": "Cameron Steffen", "email": "cam.steffen94@gmail.com", "date": "2021-02-08T14:56:33Z"}, "message": "Refactor out UnusedSelfVisitor", "tree": {"sha": "5eeb688a39a6d8a3046ac30a20ed63adcc1f0244", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5eeb688a39a6d8a3046ac30a20ed63adcc1f0244"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5db48a382a928969be301ee416df27f6508105c2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5db48a382a928969be301ee416df27f6508105c2", "html_url": "https://github.com/rust-lang/rust/commit/5db48a382a928969be301ee416df27f6508105c2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5db48a382a928969be301ee416df27f6508105c2/comments", "author": {"login": "camsteffen", "id": 5565418, "node_id": "MDQ6VXNlcjU1NjU0MTg=", "avatar_url": "https://avatars.githubusercontent.com/u/5565418?v=4", "gravatar_id": "", "url": "https://api.github.com/users/camsteffen", "html_url": "https://github.com/camsteffen", "followers_url": "https://api.github.com/users/camsteffen/followers", "following_url": "https://api.github.com/users/camsteffen/following{/other_user}", "gists_url": "https://api.github.com/users/camsteffen/gists{/gist_id}", "starred_url": "https://api.github.com/users/camsteffen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/camsteffen/subscriptions", "organizations_url": "https://api.github.com/users/camsteffen/orgs", "repos_url": "https://api.github.com/users/camsteffen/repos", "events_url": "https://api.github.com/users/camsteffen/events{/privacy}", "received_events_url": "https://api.github.com/users/camsteffen/received_events", "type": "User", "site_admin": false}, "committer": {"login": "camsteffen", "id": 5565418, "node_id": "MDQ6VXNlcjU1NjU0MTg=", "avatar_url": "https://avatars.githubusercontent.com/u/5565418?v=4", "gravatar_id": "", "url": "https://api.github.com/users/camsteffen", "html_url": "https://github.com/camsteffen", "followers_url": "https://api.github.com/users/camsteffen/followers", "following_url": "https://api.github.com/users/camsteffen/following{/other_user}", "gists_url": "https://api.github.com/users/camsteffen/gists{/gist_id}", "starred_url": "https://api.github.com/users/camsteffen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/camsteffen/subscriptions", "organizations_url": "https://api.github.com/users/camsteffen/orgs", "repos_url": "https://api.github.com/users/camsteffen/repos", "events_url": "https://api.github.com/users/camsteffen/events{/privacy}", "received_events_url": "https://api.github.com/users/camsteffen/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1d3042294503e6027759baadc92056403aa8c991", "url": "https://api.github.com/repos/rust-lang/rust/commits/1d3042294503e6027759baadc92056403aa8c991", "html_url": "https://github.com/rust-lang/rust/commit/1d3042294503e6027759baadc92056403aa8c991"}], "stats": {"total": 45, "additions": 8, "deletions": 37}, "files": [{"sha": "9d61bd0cc2fe9e2eb572e40a1004b83d71c52bba", "filename": "clippy_lints/src/unused_self.rs", "status": "modified", "additions": 3, "deletions": 36, "changes": 39, "blob_url": "https://github.com/rust-lang/rust/blob/5db48a382a928969be301ee416df27f6508105c2/clippy_lints%2Fsrc%2Funused_self.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5db48a382a928969be301ee416df27f6508105c2/clippy_lints%2Fsrc%2Funused_self.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Funused_self.rs?ref=5db48a382a928969be301ee416df27f6508105c2", "patch": "@@ -1,12 +1,10 @@\n use if_chain::if_chain;\n-use rustc_hir::def::Res;\n-use rustc_hir::intravisit::{walk_path, NestedVisitorMap, Visitor};\n-use rustc_hir::{HirId, Impl, ImplItem, ImplItemKind, ItemKind, Path};\n+use rustc_hir::{Impl, ImplItem, ImplItemKind, ItemKind};\n use rustc_lint::{LateContext, LateLintPass};\n-use rustc_middle::hir::map::Map;\n use rustc_session::{declare_lint_pass, declare_tool_lint};\n \n use crate::utils::span_lint_and_help;\n+use crate::utils::visitors::LocalUsedVisitor;\n \n declare_clippy_lint! {\n     /// **What it does:** Checks methods that contain a `self` argument but don't use it\n@@ -57,13 +55,7 @@ impl<'tcx> LateLintPass<'tcx> for UnusedSelf {\n             then {\n                 let self_param = &body.params[0];\n                 let self_hir_id = self_param.pat.hir_id;\n-                let mut visitor = UnusedSelfVisitor {\n-                    cx,\n-                    uses_self: false,\n-                    self_hir_id: &self_hir_id,\n-                };\n-                visitor.visit_body(body);\n-                if !visitor.uses_self {\n+                if !LocalUsedVisitor::new(cx, self_hir_id).check_body(body) {\n                     span_lint_and_help(\n                         cx,\n                         UNUSED_SELF,\n@@ -78,28 +70,3 @@ impl<'tcx> LateLintPass<'tcx> for UnusedSelf {\n         }\n     }\n }\n-\n-struct UnusedSelfVisitor<'a, 'tcx> {\n-    cx: &'a LateContext<'tcx>,\n-    uses_self: bool,\n-    self_hir_id: &'a HirId,\n-}\n-\n-impl<'a, 'tcx> Visitor<'tcx> for UnusedSelfVisitor<'a, 'tcx> {\n-    type Map = Map<'tcx>;\n-\n-    fn visit_path(&mut self, path: &'tcx Path<'_>, _id: HirId) {\n-        if self.uses_self {\n-            // This function already uses `self`\n-            return;\n-        }\n-        if let Res::Local(hir_id) = &path.res {\n-            self.uses_self = self.self_hir_id == hir_id\n-        }\n-        walk_path(self, path);\n-    }\n-\n-    fn nested_visit_map(&mut self) -> NestedVisitorMap<Self::Map> {\n-        NestedVisitorMap::OnlyBodies(self.cx.tcx.hir())\n-    }\n-}"}, {"sha": "085c1f9c0cb8d3ea661a1640cbd946933467fe93", "filename": "clippy_lints/src/utils/visitors.rs", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/5db48a382a928969be301ee416df27f6508105c2/clippy_lints%2Fsrc%2Futils%2Fvisitors.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5db48a382a928969be301ee416df27f6508105c2/clippy_lints%2Fsrc%2Futils%2Fvisitors.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Futils%2Fvisitors.rs?ref=5db48a382a928969be301ee416df27f6508105c2", "patch": "@@ -1,7 +1,7 @@\n use crate::utils::path_to_local_id;\n use rustc_hir as hir;\n use rustc_hir::intravisit::{self, walk_expr, NestedVisitorMap, Visitor};\n-use rustc_hir::{Arm, Expr, HirId, Stmt};\n+use rustc_hir::{Arm, Body, Expr, HirId, Stmt};\n use rustc_lint::LateContext;\n use rustc_middle::hir::map::Map;\n \n@@ -157,6 +157,10 @@ impl<'hir> LocalUsedVisitor<'hir> {\n         self.check(arm, Self::visit_arm)\n     }\n \n+    pub fn check_body(&mut self, body: &'hir Body<'_>) -> bool {\n+        self.check(body, Self::visit_body)\n+    }\n+\n     pub fn check_expr(&mut self, expr: &'hir Expr<'_>) -> bool {\n         self.check(expr, Self::visit_expr)\n     }"}]}