{"sha": "e8dfb92641f64b772204d7670c7286cb9b8b398b", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU4ZGZiOTI2NDFmNjRiNzcyMjA0ZDc2NzBjNzI4NmNiOWI4YjM5OGI=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2018-08-22T09:58:34Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2018-08-22T09:58:34Z"}, "message": "Simplify", "tree": {"sha": "bb305d3003d01756fc8c282f008108d05da7decf", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bb305d3003d01756fc8c282f008108d05da7decf"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e8dfb92641f64b772204d7670c7286cb9b8b398b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e8dfb92641f64b772204d7670c7286cb9b8b398b", "html_url": "https://github.com/rust-lang/rust/commit/e8dfb92641f64b772204d7670c7286cb9b8b398b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e8dfb92641f64b772204d7670c7286cb9b8b398b/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "641659d5a8dcca0b8a1c36ff6d1c517a91296116", "url": "https://api.github.com/repos/rust-lang/rust/commits/641659d5a8dcca0b8a1c36ff6d1c517a91296116", "html_url": "https://github.com/rust-lang/rust/commit/641659d5a8dcca0b8a1c36ff6d1c517a91296116"}], "stats": {"total": 28, "additions": 10, "deletions": 18}, "files": [{"sha": "500d52c2a203f1725c0327dc4e96f117713f38a9", "filename": "crates/libeditor/src/code_actions.rs", "status": "modified", "additions": 3, "deletions": 8, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/e8dfb92641f64b772204d7670c7286cb9b8b398b/crates%2Flibeditor%2Fsrc%2Fcode_actions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e8dfb92641f64b772204d7670c7286cb9b8b398b/crates%2Flibeditor%2Fsrc%2Fcode_actions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Flibeditor%2Fsrc%2Fcode_actions.rs?ref=e8dfb92641f64b772204d7670c7286cb9b8b398b", "patch": "@@ -11,12 +11,7 @@ use libsyntax2::{\n \n pub struct ActionResult {\n     pub edit: Edit,\n-    pub cursor_position: CursorPosition,\n-}\n-\n-pub enum CursorPosition {\n-    Same,\n-    Offset(TextUnit),\n+    pub cursor_position: Option<TextUnit>,\n }\n \n pub fn flip_comma<'a>(file: &'a ParsedFile, offset: TextUnit) -> Option<impl FnOnce() -> ActionResult + 'a> {\n@@ -31,7 +26,7 @@ pub fn flip_comma<'a>(file: &'a ParsedFile, offset: TextUnit) -> Option<impl FnO\n         edit.replace(right.range(), left.text());\n         ActionResult {\n             edit: edit.finish(),\n-            cursor_position: CursorPosition::Same,\n+            cursor_position: None,\n         }\n     })\n }\n@@ -58,7 +53,7 @@ pub fn add_derive<'a>(file: &'a ParsedFile, offset: TextUnit) -> Option<impl FnO\n         };\n         ActionResult {\n             edit: edit.finish(),\n-            cursor_position: CursorPosition::Offset(offset),\n+            cursor_position: Some(offset),\n         }\n     })\n }"}, {"sha": "12d0a30dd1256a2fdc8a3a18aee8bcb772273b53", "filename": "crates/libeditor/src/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e8dfb92641f64b772204d7670c7286cb9b8b398b/crates%2Flibeditor%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e8dfb92641f64b772204d7670c7286cb9b8b398b/crates%2Flibeditor%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Flibeditor%2Fsrc%2Flib.rs?ref=e8dfb92641f64b772204d7670c7286cb9b8b398b", "patch": "@@ -21,7 +21,7 @@ pub use self::{\n     symbols::{StructureNode, file_structure, FileSymbol, file_symbols},\n     edit::{EditBuilder, Edit, AtomEdit},\n     code_actions::{\n-        ActionResult, CursorPosition, find_node,\n+        ActionResult, find_node,\n         flip_comma, add_derive,\n     },\n };"}, {"sha": "4f4b4b773cbfcce74dddfa9eea73f83ce0fe881d", "filename": "crates/libeditor/tests/test.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/e8dfb92641f64b772204d7670c7286cb9b8b398b/crates%2Flibeditor%2Ftests%2Ftest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e8dfb92641f64b772204d7670c7286cb9b8b398b/crates%2Flibeditor%2Ftests%2Ftest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Flibeditor%2Ftests%2Ftest.rs?ref=e8dfb92641f64b772204d7670c7286cb9b8b398b", "patch": "@@ -5,7 +5,7 @@ extern crate assert_eq_text;\n \n use assert_eq_text::{assert_eq_dbg};\n use libeditor::{\n-    ParsedFile, TextUnit, TextRange, ActionResult, CursorPosition,\n+    ParsedFile, TextUnit, TextRange, ActionResult,\n     highlight, runnables, extend_selection, file_structure,\n     flip_comma, add_derive, matching_brace,\n };\n@@ -177,8 +177,8 @@ fn check_action<F: Fn(&ParsedFile, TextUnit) -> Option<ActionResult>>(\n     let result = f(&file, before_cursor_pos).expect(\"code action is not applicable\");\n     let actual = result.edit.apply(&before);\n     let actual_cursor_pos = match result.cursor_position {\n-        CursorPosition::Same => result.edit.apply_to_offset(before_cursor_pos).unwrap(),\n-        CursorPosition::Offset(off) => off,\n+        None => result.edit.apply_to_offset(before_cursor_pos).unwrap(),\n+        Some(off) => off,\n     };\n     let actual = add_cursor(&actual, actual_cursor_pos);\n     assert_eq_text!(after, &actual);"}, {"sha": "9ff821a8b32b0619cb1030007d077e5b1fe39228", "filename": "crates/server/src/main_loop/handlers.rs", "status": "modified", "additions": 3, "deletions": 6, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/e8dfb92641f64b772204d7670c7286cb9b8b398b/crates%2Fserver%2Fsrc%2Fmain_loop%2Fhandlers.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e8dfb92641f64b772204d7670c7286cb9b8b398b/crates%2Fserver%2Fsrc%2Fmain_loop%2Fhandlers.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fserver%2Fsrc%2Fmain_loop%2Fhandlers.rs?ref=e8dfb92641f64b772204d7670c7286cb9b8b398b", "patch": "@@ -6,7 +6,7 @@ use languageserver_types::{\n     SymbolInformation, Position, Location,\n };\n use libanalysis::{Query};\n-use libeditor::{self, CursorPosition};\n+use libeditor;\n use libsyntax2::TextUnit;\n use serde_json::{to_value, from_value};\n \n@@ -230,11 +230,8 @@ pub fn handle_execute_command(\n         document_changes: None,\n     };\n     let edit = req::ApplyWorkspaceEditParams { edit };\n-    let cursor_pos = match action_result.cursor_position {\n-        CursorPosition::Same => None,\n-        CursorPosition::Offset(offset) => Some(offset.conv_with(&line_index)),\n-    };\n-\n+    let cursor_pos = action_result.cursor_position\n+        .map(|off| off.conv_with(&line_index));\n     Ok((edit, cursor_pos))\n }\n "}]}