{"sha": "c28084ac16af4ab594b6860958df140e7c876a13", "node_id": "MDY6Q29tbWl0NzI0NzEyOmMyODA4NGFjMTZhZjRhYjU5NGI2ODYwOTU4ZGYxNDBlN2M4NzZhMTM=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2019-05-30T03:37:37Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2019-05-30T03:37:37Z"}, "message": "Auto merge of #61005 - michaelwoerister:error-pgo-windows-unwind, r=zackmdavis\n\nEmit error when trying to use PGO in conjunction with unwinding on Windows.\n\nThis PR makes `rustc` emit an error when trying use PGO in conjunction with `-Cpanic=unwind` on Windows, isn't supported by LLVM yet. The error messages points to https://github.com/rust-lang/rust/issues/61002, which documents this known limitation.", "tree": {"sha": "5e71af9a3c56f961563959bf3a297dcf39d9a1e7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5e71af9a3c56f961563959bf3a297dcf39d9a1e7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c28084ac16af4ab594b6860958df140e7c876a13", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c28084ac16af4ab594b6860958df140e7c876a13", "html_url": "https://github.com/rust-lang/rust/commit/c28084ac16af4ab594b6860958df140e7c876a13", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c28084ac16af4ab594b6860958df140e7c876a13/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "19e0ddbb9f29c27f907fd0d23b70fbd53aeb6efb", "url": "https://api.github.com/repos/rust-lang/rust/commits/19e0ddbb9f29c27f907fd0d23b70fbd53aeb6efb", "html_url": "https://github.com/rust-lang/rust/commit/19e0ddbb9f29c27f907fd0d23b70fbd53aeb6efb"}, {"sha": "a19a9e9194a03add87cd10aacfe518a61487cf0d", "url": "https://api.github.com/repos/rust-lang/rust/commits/a19a9e9194a03add87cd10aacfe518a61487cf0d", "html_url": "https://github.com/rust-lang/rust/commit/a19a9e9194a03add87cd10aacfe518a61487cf0d"}], "stats": {"total": 61, "additions": 53, "deletions": 8}, "files": [{"sha": "40af5b45f9c35ebc1a00727022a5d7240d6757bd", "filename": "src/librustc/session/mod.rs", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/c28084ac16af4ab594b6860958df140e7c876a13/src%2Flibrustc%2Fsession%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c28084ac16af4ab594b6860958df140e7c876a13/src%2Flibrustc%2Fsession%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fsession%2Fmod.rs?ref=c28084ac16af4ab594b6860958df140e7c876a13", "patch": "@@ -1285,6 +1285,18 @@ fn validate_commandline_args_with_session_available(sess: &Session) {\n                               path.display()));\n         }\n     }\n+\n+    // PGO does not work reliably with panic=unwind on Windows. Let's make it\n+    // an error to combine the two for now. It always runs into an assertions\n+    // if LLVM is built with assertions, but without assertions it sometimes\n+    // does not crash and will probably generate a corrupted binary.\n+    if sess.opts.debugging_opts.pgo_gen.enabled() &&\n+       sess.target.target.options.is_like_msvc &&\n+       sess.panic_strategy() == PanicStrategy::Unwind {\n+        sess.err(\"Profile-guided optimization does not yet work in conjunction \\\n+                  with `-Cpanic=unwind` on Windows when targeting MSVC. \\\n+                  See https://github.com/rust-lang/rust/issues/61002 for details.\");\n+    }\n }\n \n /// Hash value constructed out of all the `-C metadata` arguments passed to the"}, {"sha": "e94365058862a11b0e874fbc6da91bcf0008c32b", "filename": "src/test/codegen/pgo-instrumentation.rs", "status": "modified", "additions": 7, "deletions": 4, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/c28084ac16af4ab594b6860958df140e7c876a13/src%2Ftest%2Fcodegen%2Fpgo-instrumentation.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c28084ac16af4ab594b6860958df140e7c876a13/src%2Ftest%2Fcodegen%2Fpgo-instrumentation.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcodegen%2Fpgo-instrumentation.rs?ref=c28084ac16af4ab594b6860958df140e7c876a13", "patch": "@@ -1,20 +1,23 @@\n // Test that `-Zpgo-gen` creates expected instrumentation artifacts in LLVM IR.\n+// Compiling with `-Cpanic=abort` because PGO+unwinding isn't supported on all platforms.\n \n // needs-profiler-support\n-// compile-flags: -Z pgo-gen -Ccodegen-units=1\n+// compile-flags: -Z pgo-gen -Ccodegen-units=1 -Cpanic=abort\n \n // CHECK: @__llvm_profile_raw_version =\n // CHECK: @__profc_{{.*}}pgo_instrumentation{{.*}}some_function{{.*}} = private global\n // CHECK: @__profd_{{.*}}pgo_instrumentation{{.*}}some_function{{.*}} = private global\n-// CHECK: @__profc_{{.*}}pgo_instrumentation{{.*}}main{{.*}} = private global\n-// CHECK: @__profd_{{.*}}pgo_instrumentation{{.*}}main{{.*}} = private global\n+// CHECK: @__profc_{{.*}}pgo_instrumentation{{.*}}some_other_function{{.*}} = private global\n+// CHECK: @__profd_{{.*}}pgo_instrumentation{{.*}}some_other_function{{.*}} = private global\n // CHECK: @__llvm_profile_filename = {{.*}}\"default_%m.profraw\\00\"{{.*}}\n \n+#![crate_type=\"lib\"]\n+\n #[inline(never)]\n fn some_function() {\n \n }\n \n-fn main() {\n+pub fn some_other_function() {\n     some_function();\n }"}, {"sha": "56f31434adee4a17845a53459e6d7fa1003abf75", "filename": "src/test/run-make-fulldeps/pgo-gen-lto/Makefile", "status": "modified", "additions": 11, "deletions": 1, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/c28084ac16af4ab594b6860958df140e7c876a13/src%2Ftest%2Frun-make-fulldeps%2Fpgo-gen-lto%2FMakefile", "raw_url": "https://github.com/rust-lang/rust/raw/c28084ac16af4ab594b6860958df140e7c876a13/src%2Ftest%2Frun-make-fulldeps%2Fpgo-gen-lto%2FMakefile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fpgo-gen-lto%2FMakefile?ref=c28084ac16af4ab594b6860958df140e7c876a13", "patch": "@@ -2,7 +2,17 @@\n \n -include ../tools.mk\n \n+COMPILE_FLAGS=-Copt-level=3 -Clto=fat -Z pgo-gen=\"$(TMPDIR)\"\n+\n+# LLVM doesn't yet support instrumenting binaries that use unwinding on MSVC:\n+# https://github.com/rust-lang/rust/issues/61002\n+#\n+# Things work fine with -Cpanic=abort though.\n+ifdef IS_MSVC\n+COMPILE_FLAGS+= -Cpanic=abort\n+endif\n+\n all:\n-\t$(RUSTC) -Copt-level=3 -Clto=fat -Z pgo-gen=\"$(TMPDIR)\" test.rs\n+\t$(RUSTC) $(COMPILE_FLAGS) test.rs\n \t$(call RUN,test) || exit 1\n \t[ -e \"$(TMPDIR)\"/default_*.profraw ] || (echo \"No .profraw file\"; exit 1)"}, {"sha": "bb86160d2dfdf76c13081aa0de0c6e66208b29fa", "filename": "src/test/run-make-fulldeps/pgo-gen-no-imp-symbols/Makefile", "status": "modified", "additions": 11, "deletions": 1, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/c28084ac16af4ab594b6860958df140e7c876a13/src%2Ftest%2Frun-make-fulldeps%2Fpgo-gen-no-imp-symbols%2FMakefile", "raw_url": "https://github.com/rust-lang/rust/raw/c28084ac16af4ab594b6860958df140e7c876a13/src%2Ftest%2Frun-make-fulldeps%2Fpgo-gen-no-imp-symbols%2FMakefile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fpgo-gen-no-imp-symbols%2FMakefile?ref=c28084ac16af4ab594b6860958df140e7c876a13", "patch": "@@ -2,8 +2,18 @@\n \n -include ../tools.mk\n \n+COMPILE_FLAGS=-O -Ccodegen-units=1 -Z pgo-gen=\"$(TMPDIR)\"\n+\n+# LLVM doesn't yet support instrumenting binaries that use unwinding on MSVC:\n+# https://github.com/rust-lang/rust/issues/61002\n+#\n+# Things work fine with -Cpanic=abort though.\n+ifdef IS_MSVC\n+COMPILE_FLAGS+= -Cpanic=abort\n+endif\n+\n all:\n-\t$(RUSTC) -O -Ccodegen-units=1 -Z pgo-gen=\"$(TMPDIR)\" --emit=llvm-ir test.rs\n+\t$(RUSTC) $(COMPILE_FLAGS) --emit=llvm-ir test.rs\n \t# We expect symbols starting with \"__llvm_profile_\".\n \t$(CGREP) \"__llvm_profile_\" < $(TMPDIR)/test.ll\n \t# We do NOT expect the \"__imp_\" version of these symbols."}, {"sha": "f0ab3b7d13d27444337c7d3ce385fa7828435533", "filename": "src/test/run-make-fulldeps/pgo-gen/Makefile", "status": "modified", "additions": 11, "deletions": 1, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/c28084ac16af4ab594b6860958df140e7c876a13/src%2Ftest%2Frun-make-fulldeps%2Fpgo-gen%2FMakefile", "raw_url": "https://github.com/rust-lang/rust/raw/c28084ac16af4ab594b6860958df140e7c876a13/src%2Ftest%2Frun-make-fulldeps%2Fpgo-gen%2FMakefile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fpgo-gen%2FMakefile?ref=c28084ac16af4ab594b6860958df140e7c876a13", "patch": "@@ -2,7 +2,17 @@\n \n -include ../tools.mk\n \n+COMPILE_FLAGS=-g -Z pgo-gen=\"$(TMPDIR)\"\n+\n+# LLVM doesn't yet support instrumenting binaries that use unwinding on MSVC:\n+# https://github.com/rust-lang/rust/issues/61002\n+#\n+# Things work fine with -Cpanic=abort though.\n+ifdef IS_MSVC\n+COMPILE_FLAGS+= -Cpanic=abort\n+endif\n+\n all:\n-\t$(RUSTC) -g -Z pgo-gen=\"$(TMPDIR)\" test.rs\n+\t$(RUSTC) $(COMPILE_FLAGS) test.rs\n \t$(call RUN,test) || exit 1\n \t[ -e \"$(TMPDIR)\"/default_*.profraw ] || (echo \"No .profraw file\"; exit 1)"}, {"sha": "72c3c34ee3741675510c54f0c7cd0b611762e4f7", "filename": "src/test/run-make-fulldeps/pgo-use/Makefile", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c28084ac16af4ab594b6860958df140e7c876a13/src%2Ftest%2Frun-make-fulldeps%2Fpgo-use%2FMakefile", "raw_url": "https://github.com/rust-lang/rust/raw/c28084ac16af4ab594b6860958df140e7c876a13/src%2Ftest%2Frun-make-fulldeps%2Fpgo-use%2FMakefile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fpgo-use%2FMakefile?ref=c28084ac16af4ab594b6860958df140e7c876a13", "patch": "@@ -16,7 +16,7 @@\n COMMON_FLAGS=-Copt-level=s -Ccodegen-units=1\n \n # LLVM doesn't support instrumenting binaries that use SEH:\n-# https://bugs.llvm.org/show_bug.cgi?id=41279\n+# https://github.com/rust-lang/rust/issues/61002\n #\n # Things work fine with -Cpanic=abort though.\n ifdef IS_MSVC"}]}