{"sha": "8d1b2ca3ec998fc8bdbfe03f5c8faf7cc138a9ed", "node_id": "C_kwDOAAsO6NoAKDhkMWIyY2EzZWM5OThmYzhiZGJmZTAzZjVjOGZhZjdjYzEzOGE5ZWQ", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2022-06-14T16:45:02Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2022-06-22T04:03:40Z"}, "message": "check that tag_alloc_base_pointer is not called on the wrong things", "tree": {"sha": "bef1a670740b50db3afcb8674aa4e4bef64cefdf", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bef1a670740b50db3afcb8674aa4e4bef64cefdf"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8d1b2ca3ec998fc8bdbfe03f5c8faf7cc138a9ed", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8d1b2ca3ec998fc8bdbfe03f5c8faf7cc138a9ed", "html_url": "https://github.com/rust-lang/rust/commit/8d1b2ca3ec998fc8bdbfe03f5c8faf7cc138a9ed", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8d1b2ca3ec998fc8bdbfe03f5c8faf7cc138a9ed/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cbb649adfe172a9ef4b1b91688c14b57c6c3b839", "url": "https://api.github.com/repos/rust-lang/rust/commits/cbb649adfe172a9ef4b1b91688c14b57c6c3b839", "html_url": "https://github.com/rust-lang/rust/commit/cbb649adfe172a9ef4b1b91688c14b57c6c3b839"}], "stats": {"total": 13, "additions": 13, "deletions": 0}, "files": [{"sha": "955677df6f0792a99bddfd5aac6b1ab627c6331e", "filename": "src/machine.rs", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/8d1b2ca3ec998fc8bdbfe03f5c8faf7cc138a9ed/src%2Fmachine.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8d1b2ca3ec998fc8bdbfe03f5c8faf7cc138a9ed/src%2Fmachine.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fmachine.rs?ref=8d1b2ca3ec998fc8bdbfe03f5c8faf7cc138a9ed", "patch": "@@ -662,6 +662,19 @@ impl<'mir, 'tcx> Machine<'mir, 'tcx> for Evaluator<'mir, 'tcx> {\n         ecx: &MiriEvalContext<'mir, 'tcx>,\n         ptr: Pointer<AllocId>,\n     ) -> Pointer<Tag> {\n+        if cfg!(debug_assertions) {\n+            // The machine promises to never call us on thread-local or extern statics.\n+            let alloc_id = ptr.provenance;\n+            match ecx.tcx.get_global_alloc(alloc_id) {\n+                Some(GlobalAlloc::Static(def_id)) if ecx.tcx.is_thread_local_static(def_id) => {\n+                    panic!(\"tag_alloc_base_pointer called on thread-local static\")\n+                }\n+                Some(GlobalAlloc::Static(def_id)) if ecx.tcx.is_foreign_item(def_id) => {\n+                    panic!(\"tag_alloc_base_pointer called on extern static\")\n+                }\n+                _ => {}\n+            }\n+        }\n         let absolute_addr = intptrcast::GlobalStateInner::rel_ptr_to_addr(ecx, ptr);\n         let sb_tag = if let Some(stacked_borrows) = &ecx.machine.stacked_borrows {\n             stacked_borrows.borrow_mut().base_tag(ptr.provenance)"}]}