{"sha": "cbc5eb87386e132c63ec33ff496019fad7478fe8", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNiYzVlYjg3Mzg2ZTEzMmM2M2VjMzNmZjQ5NjAxOWZhZDc0NzhmZTg=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-06-08T12:00:30Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-06-08T12:05:14Z"}, "message": "Refactor", "tree": {"sha": "44a5d2c0df7ee420dabea534d679792bc4acc15c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/44a5d2c0df7ee420dabea534d679792bc4acc15c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cbc5eb87386e132c63ec33ff496019fad7478fe8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cbc5eb87386e132c63ec33ff496019fad7478fe8", "html_url": "https://github.com/rust-lang/rust/commit/cbc5eb87386e132c63ec33ff496019fad7478fe8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cbc5eb87386e132c63ec33ff496019fad7478fe8/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "97ea2dfc4b6b49a175d4d0f85b37c77bd1ea3f3b", "url": "https://api.github.com/repos/rust-lang/rust/commits/97ea2dfc4b6b49a175d4d0f85b37c77bd1ea3f3b", "html_url": "https://github.com/rust-lang/rust/commit/97ea2dfc4b6b49a175d4d0f85b37c77bd1ea3f3b"}], "stats": {"total": 90, "additions": 49, "deletions": 41}, "files": [{"sha": "f7a79362d95f2e3f721b926a15fdeb80f34e1c97", "filename": "xtask/src/main.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/cbc5eb87386e132c63ec33ff496019fad7478fe8/xtask%2Fsrc%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cbc5eb87386e132c63ec33ff496019fad7478fe8/xtask%2Fsrc%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/xtask%2Fsrc%2Fmain.rs?ref=cbc5eb87386e132c63ec33ff496019fad7478fe8", "patch": "@@ -17,7 +17,7 @@ use xtask::{\n     install::{ClientOpt, InstallCmd, ServerOpt},\n     not_bash::pushd,\n     pre_commit, project_root,\n-    release::run_release,\n+    release::ReleaseCmd,\n     run_clippy, run_fuzzer, run_pre_cache, run_rustfmt, Result,\n };\n \n@@ -103,7 +103,7 @@ FLAGS:\n         \"release\" => {\n             let dry_run = args.contains(\"--dry-run\");\n             args.finish()?;\n-            run_release(dry_run)\n+            ReleaseCmd { dry_run }.run()\n         }\n         \"dist\" => {\n             let nightly = args.contains(\"--nightly\");"}, {"sha": "36c912184f0cdd28f56deb16102e6f75bdb977f9", "filename": "xtask/src/release.rs", "status": "modified", "additions": 47, "deletions": 39, "changes": 86, "blob_url": "https://github.com/rust-lang/rust/blob/cbc5eb87386e132c63ec33ff496019fad7478fe8/xtask%2Fsrc%2Frelease.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cbc5eb87386e132c63ec33ff496019fad7478fe8/xtask%2Fsrc%2Frelease.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/xtask%2Fsrc%2Frelease.rs?ref=cbc5eb87386e132c63ec33ff496019fad7478fe8", "patch": "@@ -4,56 +4,64 @@ use crate::{\n     project_root, Mode, Result,\n };\n \n-pub fn run_release(dry_run: bool) -> Result<()> {\n-    if !dry_run {\n-        run!(\"git switch release\")?;\n-        run!(\"git fetch upstream --tags --force\")?;\n-        run!(\"git reset --hard tags/nightly\")?;\n-        run!(\"git push\")?;\n-    }\n-    codegen::generate_assists_docs(Mode::Overwrite)?;\n-    codegen::generate_feature_docs(Mode::Overwrite)?;\n+pub struct ReleaseCmd {\n+    pub dry_run: bool,\n+}\n \n-    let website_root = project_root().join(\"../rust-analyzer.github.io\");\n-    let changelog_dir = website_root.join(\"./thisweek/_posts\");\n+impl ReleaseCmd {\n+    pub fn run(self) -> Result<()> {\n+        if !self.dry_run {\n+            run!(\"git switch release\")?;\n+            run!(\"git fetch upstream --tags --force\")?;\n+            run!(\"git reset --hard tags/nightly\")?;\n+            run!(\"git push\")?;\n+        }\n+        codegen::generate_assists_docs(Mode::Overwrite)?;\n+        codegen::generate_feature_docs(Mode::Overwrite)?;\n \n-    let today = date_iso()?;\n-    let commit = run!(\"git rev-parse HEAD\")?;\n-    let changelog_n = fs2::read_dir(changelog_dir.as_path())?.count();\n+        let website_root = project_root().join(\"../rust-analyzer.github.io\");\n+        let changelog_dir = website_root.join(\"./thisweek/_posts\");\n \n-    let contents = format!(\n-        \"\\\n-= Changelog #{}\n-:sectanchors:\n-:page-layout: post\n+        let today = date_iso()?;\n+        let commit = run!(\"git rev-parse HEAD\")?;\n+        let changelog_n = fs2::read_dir(changelog_dir.as_path())?.count();\n \n-Commit: commit:{}[] +\n-Release: release:{}[]\n+        let contents = format!(\n+            \"\\\n+    = Changelog #{}\n+    :sectanchors:\n+    :page-layout: post\n \n-== New Features\n+    Commit: commit:{}[] +\n+    Release: release:{}[]\n \n-* pr:[] .\n+    == New Features\n \n-== Fixes\n+    * pr:[] .\n \n-== Internal Improvements\n-\",\n-        changelog_n, commit, today\n-    );\n+    == Fixes\n \n-    let path = changelog_dir.join(format!(\"{}-changelog-{}.adoc\", today, changelog_n));\n-    fs2::write(&path, &contents)?;\n+    == Internal Improvements\n+    \",\n+            changelog_n, commit, today\n+        );\n \n-    for &adoc in [\"manual.adoc\", \"generated_features.adoc\", \"generated_assists.adoc\"].iter() {\n-        let src = project_root().join(\"./docs/user/\").join(adoc);\n-        let dst = website_root.join(adoc);\n-        fs2::copy(src, dst)?;\n-    }\n+        let path = changelog_dir.join(format!(\"{}-changelog-{}.adoc\", today, changelog_n));\n+        fs2::write(&path, &contents)?;\n \n-    let tags = run!(\"git tag --list\"; echo = false)?;\n-    let prev_tag = tags.lines().filter(|line| is_release_tag(line)).last().unwrap();\n+        for &adoc in [\"manual.adoc\", \"generated_features.adoc\", \"generated_assists.adoc\"].iter() {\n+            let src = project_root().join(\"./docs/user/\").join(adoc);\n+            let dst = website_root.join(adoc);\n+            fs2::copy(src, dst)?;\n+        }\n \n-    println!(\"\\n    git log {}..HEAD --merges --reverse\", prev_tag);\n+        let tags = run!(\"git tag --list\"; echo = false)?;\n+        let prev_tag = tags.lines().filter(|line| is_release_tag(line)).last().unwrap();\n \n-    Ok(())\n+        let git_log = run!(\"git log {}..HEAD --merges --reverse\", prev_tag; echo = false)?;\n+        let git_log_dst = website_root.join(\"git.log\");\n+        fs2::write(git_log_dst, &git_log)?;\n+\n+        Ok(())\n+    }\n }"}]}