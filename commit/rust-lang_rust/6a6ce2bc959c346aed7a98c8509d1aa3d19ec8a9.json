{"sha": "6a6ce2bc959c346aed7a98c8509d1aa3d19ec8a9", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZhNmNlMmJjOTU5YzM0NmFlZDdhOThjODUwOWQxYWEzZDE5ZWM4YTk=", "commit": {"author": {"name": "Jeremy A. Kolb", "email": "jkolb@ara.com", "date": "2019-01-23T20:59:19Z"}, "committer": {"name": "Jeremy A. Kolb", "email": "jkolb@ara.com", "date": "2019-01-23T21:23:21Z"}, "message": "Make EnumVariant a DocCommentsOwner", "tree": {"sha": "a860d95afb552d114734139e1dd5d2ab754636ab", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a860d95afb552d114734139e1dd5d2ab754636ab"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6a6ce2bc959c346aed7a98c8509d1aa3d19ec8a9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6a6ce2bc959c346aed7a98c8509d1aa3d19ec8a9", "html_url": "https://github.com/rust-lang/rust/commit/6a6ce2bc959c346aed7a98c8509d1aa3d19ec8a9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6a6ce2bc959c346aed7a98c8509d1aa3d19ec8a9/comments", "author": {"login": "kjeremy", "id": 4325700, "node_id": "MDQ6VXNlcjQzMjU3MDA=", "avatar_url": "https://avatars.githubusercontent.com/u/4325700?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kjeremy", "html_url": "https://github.com/kjeremy", "followers_url": "https://api.github.com/users/kjeremy/followers", "following_url": "https://api.github.com/users/kjeremy/following{/other_user}", "gists_url": "https://api.github.com/users/kjeremy/gists{/gist_id}", "starred_url": "https://api.github.com/users/kjeremy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kjeremy/subscriptions", "organizations_url": "https://api.github.com/users/kjeremy/orgs", "repos_url": "https://api.github.com/users/kjeremy/repos", "events_url": "https://api.github.com/users/kjeremy/events{/privacy}", "received_events_url": "https://api.github.com/users/kjeremy/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kjeremy", "id": 4325700, "node_id": "MDQ6VXNlcjQzMjU3MDA=", "avatar_url": "https://avatars.githubusercontent.com/u/4325700?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kjeremy", "html_url": "https://github.com/kjeremy", "followers_url": "https://api.github.com/users/kjeremy/followers", "following_url": "https://api.github.com/users/kjeremy/following{/other_user}", "gists_url": "https://api.github.com/users/kjeremy/gists{/gist_id}", "starred_url": "https://api.github.com/users/kjeremy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kjeremy/subscriptions", "organizations_url": "https://api.github.com/users/kjeremy/orgs", "repos_url": "https://api.github.com/users/kjeremy/repos", "events_url": "https://api.github.com/users/kjeremy/events{/privacy}", "received_events_url": "https://api.github.com/users/kjeremy/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bf9cd6ee30b3044b61e99e24e82fad56d3965417", "url": "https://api.github.com/repos/rust-lang/rust/commits/bf9cd6ee30b3044b61e99e24e82fad56d3965417", "html_url": "https://github.com/rust-lang/rust/commit/bf9cd6ee30b3044b61e99e24e82fad56d3965417"}], "stats": {"total": 6, "additions": 4, "deletions": 2}, "files": [{"sha": "ac6c8a835955ab727d9e47f871ed79ef7aa8eae2", "filename": "crates/ra_syntax/src/ast/generated.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/6a6ce2bc959c346aed7a98c8509d1aa3d19ec8a9/crates%2Fra_syntax%2Fsrc%2Fast%2Fgenerated.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6a6ce2bc959c346aed7a98c8509d1aa3d19ec8a9/crates%2Fra_syntax%2Fsrc%2Fast%2Fgenerated.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Fsrc%2Fast%2Fgenerated.rs?ref=6a6ce2bc959c346aed7a98c8509d1aa3d19ec8a9", "patch": "@@ -632,6 +632,7 @@ impl AstNode for EnumVariant {\n \n \n impl ast::NameOwner for EnumVariant {}\n+impl ast::DocCommentsOwner for EnumVariant {}\n impl EnumVariant {\n     pub fn expr(&self) -> Option<&Expr> {\n         super::child_opt(self)"}, {"sha": "c5297e46ddf292d992091268466962e6a2e447ba", "filename": "crates/ra_syntax/src/grammar.ron", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6a6ce2bc959c346aed7a98c8509d1aa3d19ec8a9/crates%2Fra_syntax%2Fsrc%2Fgrammar.ron", "raw_url": "https://github.com/rust-lang/rust/raw/6a6ce2bc959c346aed7a98c8509d1aa3d19ec8a9/crates%2Fra_syntax%2Fsrc%2Fgrammar.ron", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Fsrc%2Fgrammar.ron?ref=6a6ce2bc959c346aed7a98c8509d1aa3d19ec8a9", "patch": "@@ -279,7 +279,7 @@ Grammar(\n             \"DocCommentsOwner\"\n         ], options: [[\"variant_list\", \"EnumVariantList\"]] ),\n         \"EnumVariantList\": ( collections: [[\"variants\", \"EnumVariant\"]] ),\n-        \"EnumVariant\": ( traits: [\"NameOwner\"], options: [\"Expr\"] ),\n+        \"EnumVariant\": ( traits: [\"NameOwner\", \"DocCommentsOwner\"], options: [\"Expr\"] ),\n         \"TraitDef\": ( traits: [\"VisibilityOwner\", \"NameOwner\", \"AttrsOwner\", \"DocCommentsOwner\"] ),\n         \"Module\": (\n             traits: [\"VisibilityOwner\", \"NameOwner\", \"AttrsOwner\", \"DocCommentsOwner\" ],"}, {"sha": "bd77fee89f9c98f2672bcdb682d60943d2d167fb", "filename": "crates/ra_syntax/src/parser_impl/event.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/6a6ce2bc959c346aed7a98c8509d1aa3d19ec8a9/crates%2Fra_syntax%2Fsrc%2Fparser_impl%2Fevent.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6a6ce2bc959c346aed7a98c8509d1aa3d19ec8a9/crates%2Fra_syntax%2Fsrc%2Fparser_impl%2Fevent.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Fsrc%2Fparser_impl%2Fevent.rs?ref=6a6ce2bc959c346aed7a98c8509d1aa3d19ec8a9", "patch": "@@ -249,7 +249,8 @@ fn n_attached_trivias<'a>(\n     trivias: impl Iterator<Item = (SyntaxKind, &'a str)>,\n ) -> usize {\n     match kind {\n-        CONST_DEF | TYPE_DEF | STRUCT_DEF | ENUM_DEF | FN_DEF | TRAIT_DEF | MODULE => {\n+        CONST_DEF | TYPE_DEF | STRUCT_DEF | ENUM_DEF | ENUM_VARIANT | FN_DEF | TRAIT_DEF\n+        | MODULE => {\n             let mut res = 0;\n             for (i, (kind, text)) in trivias.enumerate() {\n                 match kind {"}]}