{"sha": "6127632c761b9a658b13c122ba0beb73f4542399", "node_id": "MDY6Q29tbWl0NzI0NzEyOjYxMjc2MzJjNzYxYjlhNjU4YjEzYzEyMmJhMGJlYjczZjQ1NDIzOTk=", "commit": {"author": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2019-08-28T14:38:53Z"}, "committer": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2019-08-28T14:38:53Z"}, "message": "Use f{32,64}const insts instead of loading from a global value", "tree": {"sha": "70abfb9b79b778d4f347417464149e353e06d649", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/70abfb9b79b778d4f347417464149e353e06d649"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6127632c761b9a658b13c122ba0beb73f4542399", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6127632c761b9a658b13c122ba0beb73f4542399", "html_url": "https://github.com/rust-lang/rust/commit/6127632c761b9a658b13c122ba0beb73f4542399", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6127632c761b9a658b13c122ba0beb73f4542399/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "40629999bcbf230d14a7ac56d4b56a86b8fad3d8", "url": "https://api.github.com/repos/rust-lang/rust/commits/40629999bcbf230d14a7ac56d4b56a86b8fad3d8", "html_url": "https://github.com/rust-lang/rust/commit/40629999bcbf230d14a7ac56d4b56a86b8fad3d8"}], "stats": {"total": 8, "additions": 8, "deletions": 0}, "files": [{"sha": "fbc6be97b06077cfdd19be616b9e8bb725bfb6d9", "filename": "src/constant.rs", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/6127632c761b9a658b13c122ba0beb73f4542399/src%2Fconstant.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6127632c761b9a658b13c122ba0beb73f4542399/src%2Fconstant.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fconstant.rs?ref=6127632c761b9a658b13c122ba0beb73f4542399", "patch": "@@ -122,6 +122,14 @@ pub fn trans_const_value<'tcx>(\n             let bits = const_.val.try_to_bits(layout.size).unwrap();\n             CValue::const_val(fx, ty, rustc::mir::interpret::sign_extend(bits, layout.size))\n         }\n+        ty::Float(fty) => {\n+            let bits = const_.val.try_to_bits(layout.size).unwrap();\n+            let val = match fty {\n+                FloatTy::F32 => fx.bcx.ins().f32const(Ieee32::with_bits(u32::try_from(bits).unwrap())),\n+                FloatTy::F64 => fx.bcx.ins().f64const(Ieee64::with_bits(u64::try_from(bits).unwrap())),\n+            };\n+            CValue::by_val(val, layout)\n+        }\n         ty::FnDef(_def_id, _substs) => CValue::by_ref(\n             fx.bcx\n                 .ins()"}]}