{"sha": "072bca3ff5a3907a71c22fba041825cfa3eb321e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA3MmJjYTNmZjVhMzkwN2E3MWMyMmZiYTA0MTgyNWNmYTNlYjMyMWU=", "commit": {"author": {"name": "Bastian Gruber", "email": "gruberbastian@me.com", "date": "2018-06-25T12:24:39Z"}, "committer": {"name": "Bastian Gruber", "email": "gruberbastian@me.com", "date": "2018-11-21T08:59:01Z"}, "message": "Remove 'unsafe' comments", "tree": {"sha": "c03159d4d16af3c6171f6c8a42cbdd8272717df1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c03159d4d16af3c6171f6c8a42cbdd8272717df1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/072bca3ff5a3907a71c22fba041825cfa3eb321e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/072bca3ff5a3907a71c22fba041825cfa3eb321e", "html_url": "https://github.com/rust-lang/rust/commit/072bca3ff5a3907a71c22fba041825cfa3eb321e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/072bca3ff5a3907a71c22fba041825cfa3eb321e/comments", "author": null, "committer": null, "parents": [{"sha": "700c83bc05ebeddbe3d3a10c2e309826d563b12b", "url": "https://api.github.com/repos/rust-lang/rust/commits/700c83bc05ebeddbe3d3a10c2e309826d563b12b", "html_url": "https://github.com/rust-lang/rust/commit/700c83bc05ebeddbe3d3a10c2e309826d563b12b"}], "stats": {"total": 3, "additions": 0, "deletions": 3}, "files": [{"sha": "9145eeb6063f6532fabbb6ccc7b7da50e2753776", "filename": "src/libstd/path.rs", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/072bca3ff5a3907a71c22fba041825cfa3eb321e/src%2Flibstd%2Fpath.rs", "raw_url": "https://github.com/rust-lang/rust/raw/072bca3ff5a3907a71c22fba041825cfa3eb321e/src%2Flibstd%2Fpath.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fpath.rs?ref=072bca3ff5a3907a71c22fba041825cfa3eb321e", "patch": "@@ -1551,7 +1551,6 @@ impl From<PathBuf> for Arc<Path> {\n     /// Converts a `PathBuf` into a `Arc<Path>`.\n     /// This conversion happens in place.\n     /// This conversion does not allocate memory.\n-    /// This function is unsafe. Data can't be moved from this reference.\n     #[inline]\n     fn from(s: PathBuf) -> Arc<Path> {\n         let arc: Arc<OsStr> = Arc::from(s.into_os_string());\n@@ -1564,7 +1563,6 @@ impl<'a> From<&'a Path> for Arc<Path> {\n     /// Converts a `PathBuf` into a `Arc<Path>`.\n     /// This conversion happens in place.\n     /// This conversion does not allocate memory.\n-    /// This function is unsafe. Data can't be moved from this reference.\n     #[inline]\n     fn from(s: &Path) -> Arc<Path> {\n         let arc: Arc<OsStr> = Arc::from(s.as_os_str());\n@@ -1577,7 +1575,6 @@ impl From<PathBuf> for Rc<Path> {\n     /// Converts a `PathBuf` into a `Rc<Path>`.\n     /// This conversion happens in place.\n     /// This conversion does not allocate memory.\n-    /// This function is unsafe. Data can't be moved from this reference.\n     #[inline]\n     fn from(s: PathBuf) -> Rc<Path> {\n         let rc: Rc<OsStr> = Rc::from(s.into_os_string());"}]}