{"sha": "bbc380b1e6b0e41042c8c259dfad49cea7af0b35", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJiYzM4MGIxZTZiMGU0MTA0MmM4YzI1OWRmYWQ0OWNlYTdhZjBiMzU=", "commit": {"author": {"name": "Nick Cameron", "email": "nrc@ncameron.org", "date": "2018-11-28T02:29:18Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2018-11-28T02:29:18Z"}, "message": "Merge pull request #3221 from alexreg/cosmetic-1\n\nCosmetic improvements", "tree": {"sha": "079ad4226b829fcd94348bf1bb927ecc462441dc", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/079ad4226b829fcd94348bf1bb927ecc462441dc"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bbc380b1e6b0e41042c8c259dfad49cea7af0b35", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJb/f1+CRBK7hj4Ov3rIwAAdHIIACcWGoUM3DuFm4LHIGo3Jgcz\nD5Rv9IrRC4ESFyyOYpWdFZIl7cPVtKWjcubxMzlTnMpi6EaY0GZtJv0+dGabIYSz\n4RXRDGoBY0Vd13WHqaA8iF6Hk8rH8BqN+jUaCusCS4UwAvodznQ6+CNt8bX7uL1s\nwzTml2W1MNirCY5DogNSAsuMuU+AkBQg0+l7+uQ00lSsncrhNGMJtCBiDKncU2Bs\ntWNqcxTGNIoCZTbklIiYlcWppHZr4q+6akJ3WLPGgmVyRK0pI+Pu5QITYNS6Hgad\n6JrnWos33rMSKT/u5Iud7+1yhJvFlAJl6ra3K6zrCpiP8OJZWFVXmJ91sze2oDQ=\n=5sKR\n-----END PGP SIGNATURE-----\n", "payload": "tree 079ad4226b829fcd94348bf1bb927ecc462441dc\nparent 70fe8ee3904ff0858f2cb2c379ecd2276e6f3893\nparent 7fb5c0b0c960b12737be8bf904cd926b1898ea0c\nauthor Nick Cameron <nrc@ncameron.org> 1543372158 +1300\ncommitter GitHub <noreply@github.com> 1543372158 +1300\n\nMerge pull request #3221 from alexreg/cosmetic-1\n\nCosmetic improvements"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bbc380b1e6b0e41042c8c259dfad49cea7af0b35", "html_url": "https://github.com/rust-lang/rust/commit/bbc380b1e6b0e41042c8c259dfad49cea7af0b35", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bbc380b1e6b0e41042c8c259dfad49cea7af0b35/comments", "author": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "70fe8ee3904ff0858f2cb2c379ecd2276e6f3893", "url": "https://api.github.com/repos/rust-lang/rust/commits/70fe8ee3904ff0858f2cb2c379ecd2276e6f3893", "html_url": "https://github.com/rust-lang/rust/commit/70fe8ee3904ff0858f2cb2c379ecd2276e6f3893"}, {"sha": "7fb5c0b0c960b12737be8bf904cd926b1898ea0c", "url": "https://api.github.com/repos/rust-lang/rust/commits/7fb5c0b0c960b12737be8bf904cd926b1898ea0c", "html_url": "https://github.com/rust-lang/rust/commit/7fb5c0b0c960b12737be8bf904cd926b1898ea0c"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "89bafccd6ed2dba26b23d4be79af6d188db4feac", "filename": "src/reorder.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/bbc380b1e6b0e41042c8c259dfad49cea7af0b35/src%2Freorder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bbc380b1e6b0e41042c8c259dfad49cea7af0b35/src%2Freorder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Freorder.rs?ref=bbc380b1e6b0e41042c8c259dfad49cea7af0b35", "patch": "@@ -37,15 +37,15 @@ use std::cmp::{Ord, Ordering};\n fn compare_items(a: &ast::Item, b: &ast::Item) -> Ordering {\n     match (&a.node, &b.node) {\n         (&ast::ItemKind::Mod(..), &ast::ItemKind::Mod(..)) => {\n-            a.ident.name.as_str().cmp(&b.ident.name.as_str())\n+            a.ident.as_str().cmp(&b.ident.as_str())\n         }\n         (&ast::ItemKind::ExternCrate(ref a_name), &ast::ItemKind::ExternCrate(ref b_name)) => {\n             // `extern crate foo as bar;`\n             //               ^^^ Comparing this.\n             let a_orig_name =\n-                a_name.map_or_else(|| a.ident.name.as_str(), |symbol| symbol.as_str());\n+                a_name.map_or_else(|| a.ident.as_str(), |symbol| symbol.as_str());\n             let b_orig_name =\n-                b_name.map_or_else(|| b.ident.name.as_str(), |symbol| symbol.as_str());\n+                b_name.map_or_else(|| b.ident.as_str(), |symbol| symbol.as_str());\n             let result = a_orig_name.cmp(&b_orig_name);\n             if result != Ordering::Equal {\n                 return result;\n@@ -57,7 +57,7 @@ fn compare_items(a: &ast::Item, b: &ast::Item) -> Ordering {\n                 (Some(..), None) => Ordering::Greater,\n                 (None, Some(..)) => Ordering::Less,\n                 (None, None) => Ordering::Equal,\n-                (Some(..), Some(..)) => a.ident.name.as_str().cmp(&b.ident.name.as_str()),\n+                (Some(..), Some(..)) => a.ident.as_str().cmp(&b.ident.as_str()),\n             }\n         }\n         _ => unreachable!(),"}]}