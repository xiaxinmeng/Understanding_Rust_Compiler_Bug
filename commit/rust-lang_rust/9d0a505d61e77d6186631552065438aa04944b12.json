{"sha": "9d0a505d61e77d6186631552065438aa04944b12", "node_id": "MDY6Q29tbWl0NzI0NzEyOjlkMGE1MDVkNjFlNzdkNjE4NjYzMTU1MjA2NTQzOGFhMDQ5NDRiMTI=", "commit": {"author": {"name": "Brian Anderson", "email": "andersrb@gmail.com", "date": "2011-04-02T17:55:29Z"}, "committer": {"name": "Brian Anderson", "email": "andersrb@gmail.com", "date": "2011-04-03T00:35:50Z"}, "message": "Terminate fail blocks by making their ends unreachable.\n\nThis will make implementing default alt arms simpler.", "tree": {"sha": "4524ae64dae8c696f08a137dcdc2a4dfbbf02d70", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4524ae64dae8c696f08a137dcdc2a4dfbbf02d70"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9d0a505d61e77d6186631552065438aa04944b12", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9d0a505d61e77d6186631552065438aa04944b12", "html_url": "https://github.com/rust-lang/rust/commit/9d0a505d61e77d6186631552065438aa04944b12", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9d0a505d61e77d6186631552065438aa04944b12/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4f90c88b4d395b03d6ad96316307b905be1be84a", "url": "https://api.github.com/repos/rust-lang/rust/commits/4f90c88b4d395b03d6ad96316307b905be1be84a", "html_url": "https://github.com/rust-lang/rust/commit/4f90c88b4d395b03d6ad96316307b905be1be84a"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "5b4a08f3f63a0a537c7f8c4ffdd63a4d84f1c941", "filename": "src/comp/middle/trans.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/9d0a505d61e77d6186631552065438aa04944b12/src%2Fcomp%2Fmiddle%2Ftrans.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9d0a505d61e77d6186631552065438aa04944b12/src%2Fcomp%2Fmiddle%2Ftrans.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Ftrans.rs?ref=9d0a505d61e77d6186631552065438aa04944b12", "patch": "@@ -3852,7 +3852,6 @@ fn trans_index(@block_ctxt cx, &ast.span sp, @ast.expr base,\n \n     // fail: bad bounds check.\n     auto fail_res = trans_fail(fail_cx, sp, \"bounds check\");\n-    fail_res.bcx.build.Br(next_cx.llbb);\n \n     auto body = next_cx.build.GEP(v, vec(C_int(0), C_int(abi.vec_elt_data)));\n     auto elt;\n@@ -4916,7 +4915,6 @@ fn trans_check_expr(@block_ctxt cx, @ast.expr e) -> result {\n     auto fail_res = trans_fail(fail_cx, e.span, expr_str);\n \n     auto next_cx = new_sub_block_ctxt(cx, \"next\");\n-    fail_res.bcx.build.Br(next_cx.llbb);\n     cond_res.bcx.build.CondBr(cond_res.val,\n                               next_cx.llbb,\n                               fail_cx.llbb);\n@@ -4929,7 +4927,9 @@ fn trans_fail(@block_ctxt cx, common.span sp, str fail_str) -> result {\n     auto V_line = sp.lo.line as int;\n     auto args = vec(V_fail_str, V_filename, C_int(V_line));\n \n-    ret trans_upcall(cx, \"upcall_fail\", args);\n+    auto sub = trans_upcall(cx, \"upcall_fail\", args);\n+    sub.bcx.build.Unreachable();\n+    ret res(sub.bcx, C_nil());\n }\n \n fn trans_put(@block_ctxt cx, &option.t[@ast.expr] e) -> result {"}]}