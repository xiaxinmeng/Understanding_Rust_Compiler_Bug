{"sha": "8d7b092a11df9b0e885f9af93b56759f8012e3ba", "node_id": "C_kwDOAAsO6NoAKDhkN2IwOTJhMTFkZjliMGU4ODVmOWFmOTNiNTY3NTlmODAxMmUzYmE", "commit": {"author": {"name": "Matthias Kaak", "email": "matthias.kaak@smartflyer.de", "date": "2023-01-30T19:54:33Z"}, "committer": {"name": "Matthias Kaak", "email": "matthias.kaak@smartflyer.de", "date": "2023-01-30T19:54:33Z"}, "message": "Improved wording of error messages of missing remainder implementations", "tree": {"sha": "c2e93778e08c7c55d3393669e1ad957971e9b66e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c2e93778e08c7c55d3393669e1ad957971e9b66e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8d7b092a11df9b0e885f9af93b56759f8012e3ba", "comment_count": 0, "verification": {"verified": false, "reason": "no_user", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEx8ufA+Wo1utLNZl1fP9YNIyoVG4FAmPYIHkACgkQfP9YNIyo\nVG76lg//cph2JcUNw34cbsJMzDg+OLTJDHcvq1bEvrYUFlXo4Xq+lUrE1ozH/1MS\n+7aM7esCJU1pnrbVY52SUCaCp8biZZCbt2I3HKCVFZF6076FIkDoI1GQ89u0WPoh\n00A7TVi3wS0dVqtqWqen4ZfI/+qDSbQPj4Vy0SxsxDGCIaUOw4IMkEa5qmJ+qSe1\nItJHWqadRj7FrAH2vhnYQ+NTBhweNdvaZ1mB45yZ0fr6r947GUE/oVUjAUmU8Pbz\n4aX/cYldctSxOZPeCi1+ruIfGtDyZzVL2rB/PJyNQNU2DrP4NB7VvMmH/yrgwVtn\nLrvCU/tCdZmm1MIyQmLEzrOIGSxFsNwUrZieADeNmwxLt4XIigX7tX4oBjmVsU16\n9dDRbsomXm3Cn5a6rJZl9euajQ2XU1qJ2GkEY25yN0ujyrkmZtCyJ1JHfTxPLcd+\nLz3KC9A/FO7L3ZL5bkslWvUYMkZEn7UrQUqqiqLKGb6JHUPzRhOicJ+V/ibaetmq\nvvp5O7DatZlumzrecqzDlj1Z02wcy5nEioBZuajMb4Kv+HuNxMxA+uZo/HGD7PjK\nJ2//T63eZkYNM3+G0pDjdN6YmCCltz6hDQFUYztTxR0gg+fEEr23hJ7katdqe6J+\nC0ljzmM0eCqEDeB0a5omnA78FGWUQZJtWYpelICDT72JHl5CZq4=\n=v1ym\n-----END PGP SIGNATURE-----", "payload": "tree c2e93778e08c7c55d3393669e1ad957971e9b66e\nparent e02517d753bae44b2150aa23ab3bca694097ac96\nauthor Matthias Kaak <matthias.kaak@smartflyer.de> 1675108473 +0000\ncommitter Matthias Kaak <matthias.kaak@smartflyer.de> 1675108473 +0000\n\nImproved wording of error messages of missing remainder implementations\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8d7b092a11df9b0e885f9af93b56759f8012e3ba", "html_url": "https://github.com/rust-lang/rust/commit/8d7b092a11df9b0e885f9af93b56759f8012e3ba", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8d7b092a11df9b0e885f9af93b56759f8012e3ba/comments", "author": null, "committer": null, "parents": [{"sha": "e02517d753bae44b2150aa23ab3bca694097ac96", "url": "https://api.github.com/repos/rust-lang/rust/commits/e02517d753bae44b2150aa23ab3bca694097ac96", "html_url": "https://github.com/rust-lang/rust/commit/e02517d753bae44b2150aa23ab3bca694097ac96"}], "stats": {"total": 16, "additions": 8, "deletions": 8}, "files": [{"sha": "278f720b62ebef9a1a07f99e110d003b29e74a1a", "filename": "compiler/rustc_hir_typeck/src/op.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8d7b092a11df9b0e885f9af93b56759f8012e3ba/compiler%2Frustc_hir_typeck%2Fsrc%2Fop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8d7b092a11df9b0e885f9af93b56759f8012e3ba/compiler%2Frustc_hir_typeck%2Fsrc%2Fop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir_typeck%2Fsrc%2Fop.rs?ref=8d7b092a11df9b0e885f9af93b56759f8012e3ba", "patch": "@@ -335,7 +335,7 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n                                 format!(\"cannot divide `{lhs_ty}` by `{rhs_ty}`\")\n                             }\n                             hir::BinOpKind::Rem => {\n-                                format!(\"cannot rem `{lhs_ty}` by `{rhs_ty}`\")\n+                                format!(\"cannot calculate the remainder of `{lhs_ty}` divided by `{rhs_ty}`\")\n                             }\n                             hir::BinOpKind::BitAnd => {\n                                 format!(\"no implementation for `{lhs_ty} & {rhs_ty}`\")"}, {"sha": "cc13db5c9565beca6844381a896532759c654fae", "filename": "library/core/src/ops/arith.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/8d7b092a11df9b0e885f9af93b56759f8012e3ba/library%2Fcore%2Fsrc%2Fops%2Farith.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8d7b092a11df9b0e885f9af93b56759f8012e3ba/library%2Fcore%2Fsrc%2Fops%2Farith.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fops%2Farith.rs?ref=8d7b092a11df9b0e885f9af93b56759f8012e3ba", "patch": "@@ -545,7 +545,7 @@ div_impl_float! { f32 f64 }\n #[lang = \"rem\"]\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n #[rustc_on_unimplemented(\n-    message = \"cannot rem `{Self}` by `{Rhs}`\",\n+    message = \"cannot calculate the remainder of `{Self}` divided by `{Rhs}`\",\n     label = \"no implementation for `{Self} % {Rhs}`\"\n )]\n #[doc(alias = \"%\")]\n@@ -981,7 +981,7 @@ div_assign_impl! { usize u8 u16 u32 u64 u128 isize i8 i16 i32 i64 i128 f32 f64 }\n #[lang = \"rem_assign\"]\n #[stable(feature = \"op_assign_traits\", since = \"1.8.0\")]\n #[rustc_on_unimplemented(\n-    message = \"cannot rem-assign `{Self}` by `{Rhs}``\",\n+    message = \"cannot calculate and assign the remainder of `{Self}` divided by `{Rhs}`\",\n     label = \"no implementation for `{Self} %= {Rhs}`\"\n )]\n #[doc(alias = \"%\")]"}, {"sha": "586d2568c306fe4877ba9c4c517d055a5e8b52c3", "filename": "tests/ui/binop/binary-op-on-double-ref.fixed", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8d7b092a11df9b0e885f9af93b56759f8012e3ba/tests%2Fui%2Fbinop%2Fbinary-op-on-double-ref.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/8d7b092a11df9b0e885f9af93b56759f8012e3ba/tests%2Fui%2Fbinop%2Fbinary-op-on-double-ref.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fbinop%2Fbinary-op-on-double-ref.fixed?ref=8d7b092a11df9b0e885f9af93b56759f8012e3ba", "patch": "@@ -3,7 +3,7 @@ fn main() {\n     let v = vec![1, 2, 3, 4, 5, 6, 7, 8, 9];\n     let vr = v.iter().filter(|x| {\n         *x % 2 == 0\n-        //~^ ERROR cannot rem `&&{integer}` by `{integer}`\n+        //~^ ERROR cannot calculate the remainder of `&&{integer}` divided by `{integer}`\n     });\n     println!(\"{:?}\", vr);\n }"}, {"sha": "48ee445466e35a8d37d0b78f5a9368d98100ad4b", "filename": "tests/ui/binop/binary-op-on-double-ref.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8d7b092a11df9b0e885f9af93b56759f8012e3ba/tests%2Fui%2Fbinop%2Fbinary-op-on-double-ref.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8d7b092a11df9b0e885f9af93b56759f8012e3ba/tests%2Fui%2Fbinop%2Fbinary-op-on-double-ref.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fbinop%2Fbinary-op-on-double-ref.rs?ref=8d7b092a11df9b0e885f9af93b56759f8012e3ba", "patch": "@@ -3,7 +3,7 @@ fn main() {\n     let v = vec![1, 2, 3, 4, 5, 6, 7, 8, 9];\n     let vr = v.iter().filter(|x| {\n         x % 2 == 0\n-        //~^ ERROR cannot rem `&&{integer}` by `{integer}`\n+        //~^ ERROR cannot calculate the remainder of `&&{integer}` divided by `{integer}`\n     });\n     println!(\"{:?}\", vr);\n }"}, {"sha": "2e8aeebc681d6ed1cecb10cbd7f04e18a2454971", "filename": "tests/ui/binop/binary-op-on-double-ref.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8d7b092a11df9b0e885f9af93b56759f8012e3ba/tests%2Fui%2Fbinop%2Fbinary-op-on-double-ref.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/8d7b092a11df9b0e885f9af93b56759f8012e3ba/tests%2Fui%2Fbinop%2Fbinary-op-on-double-ref.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fbinop%2Fbinary-op-on-double-ref.stderr?ref=8d7b092a11df9b0e885f9af93b56759f8012e3ba", "patch": "@@ -1,4 +1,4 @@\n-error[E0369]: cannot rem `&&{integer}` by `{integer}`\n+error[E0369]: cannot calculate the remainder of `&&{integer}` divided by `{integer}`\n   --> $DIR/binary-op-on-double-ref.rs:5:11\n    |\n LL |         x % 2 == 0"}, {"sha": "54c8838e48f113675dbfc6b8ef3cead310657e49", "filename": "tests/ui/binop/issue-28837.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8d7b092a11df9b0e885f9af93b56759f8012e3ba/tests%2Fui%2Fbinop%2Fissue-28837.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8d7b092a11df9b0e885f9af93b56759f8012e3ba/tests%2Fui%2Fbinop%2Fissue-28837.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fbinop%2Fissue-28837.rs?ref=8d7b092a11df9b0e885f9af93b56759f8012e3ba", "patch": "@@ -11,7 +11,7 @@ fn main() {\n \n     a / a; //~ ERROR cannot divide `A` by `A`\n \n-    a % a; //~ ERROR cannot rem `A` by `A`\n+    a % a; //~ ERROR cannot calculate the remainder of `A` divided by `A`\n \n     a & a; //~ ERROR no implementation for `A & A`\n "}, {"sha": "cca1da3b6ac49ee2a0b1316c0eb0d8a004af73de", "filename": "tests/ui/binop/issue-28837.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8d7b092a11df9b0e885f9af93b56759f8012e3ba/tests%2Fui%2Fbinop%2Fissue-28837.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/8d7b092a11df9b0e885f9af93b56759f8012e3ba/tests%2Fui%2Fbinop%2Fissue-28837.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fbinop%2Fissue-28837.stderr?ref=8d7b092a11df9b0e885f9af93b56759f8012e3ba", "patch": "@@ -62,7 +62,7 @@ LL | struct A;\n note: the trait `Div` must be implemented\n   --> $SRC_DIR/core/src/ops/arith.rs:LL:COL\n \n-error[E0369]: cannot rem `A` by `A`\n+error[E0369]: cannot calculate the remainder of `A` divided by `A`\n   --> $DIR/issue-28837.rs:14:7\n    |\n LL |     a % a;"}]}