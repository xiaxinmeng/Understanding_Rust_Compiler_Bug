{"sha": "3948e6070036f3ff2577da6041860dc77c4443b5", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM5NDhlNjA3MDAzNmYzZmYyNTc3ZGE2MDQxODYwZGM3N2M0NDQzYjU=", "commit": {"author": {"name": "Dylan DPC", "email": "dylan.dpc@gmail.com", "date": "2020-05-23T22:00:48Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-05-23T22:00:48Z"}, "message": "Rollup merge of #72400 - Aaron1011:fix/asm-incr-ice, r=Amanieu\n\nAdd missing ASM arena declarations to librustc_middle\n\nFixes #72386\n\nThese types also need to get allocated on the `librustc_middle` arena\nwhen we deserialize MIR.\n\n@Amanieu: If we end up using your approach in https://github.com/rust-lang/rust/pull/72392 instead, feel free to copy the test I added over to your PR.", "tree": {"sha": "a71b851489ff9985a26c1d5a364a72ce2b2e348d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a71b851489ff9985a26c1d5a364a72ce2b2e348d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3948e6070036f3ff2577da6041860dc77c4443b5", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJeyZ0RCRBK7hj4Ov3rIwAAdHIIADlzaU68YlggVg4+aVgOzB53\nTD3Upacp/xkhCHlxake5hvUfxdvc6MaeHFJ6s1M5t/aoavfASwQK7bQ0CEMhI4R5\nMMVPsysviFkSezL/ePJh0Kjpz/oZHQI2hokzNnRGGjxVYcojCTtJnwqXQVLJjpsI\ncdngmbv+fHiCcH0rZrGhzhO+XpBTcony8JPK3XKGL4P2hRUz5lXSxym8yFzq//h0\nqsG58bu+8Lpu0xzD6cLk0xbbIb6qemCXBbo8zG5ZKt+veMLbVQJq3N6z+GabYOfz\nmot590uWdOll0ndTDDwYzbnnuGWYeV+4SGU6pOy+7QgEMHDkb7Ju9l8xfUtLdoM=\n=UAJ1\n-----END PGP SIGNATURE-----\n", "payload": "tree a71b851489ff9985a26c1d5a364a72ce2b2e348d\nparent 238a0ce716d75c854a5fe3f4cc73a47918020963\nparent 8da494272f4c162c4a853e325a6bd33a80881ff6\nauthor Dylan DPC <dylan.dpc@gmail.com> 1590271248 +0200\ncommitter GitHub <noreply@github.com> 1590271248 +0200\n\nRollup merge of #72400 - Aaron1011:fix/asm-incr-ice, r=Amanieu\n\nAdd missing ASM arena declarations to librustc_middle\n\nFixes #72386\n\nThese types also need to get allocated on the `librustc_middle` arena\nwhen we deserialize MIR.\n\n@Amanieu: If we end up using your approach in https://github.com/rust-lang/rust/pull/72392 instead, feel free to copy the test I added over to your PR.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3948e6070036f3ff2577da6041860dc77c4443b5", "html_url": "https://github.com/rust-lang/rust/commit/3948e6070036f3ff2577da6041860dc77c4443b5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3948e6070036f3ff2577da6041860dc77c4443b5/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "238a0ce716d75c854a5fe3f4cc73a47918020963", "url": "https://api.github.com/repos/rust-lang/rust/commits/238a0ce716d75c854a5fe3f4cc73a47918020963", "html_url": "https://github.com/rust-lang/rust/commit/238a0ce716d75c854a5fe3f4cc73a47918020963"}, {"sha": "8da494272f4c162c4a853e325a6bd33a80881ff6", "url": "https://api.github.com/repos/rust-lang/rust/commits/8da494272f4c162c4a853e325a6bd33a80881ff6", "html_url": "https://github.com/rust-lang/rust/commit/8da494272f4c162c4a853e325a6bd33a80881ff6"}], "stats": {"total": 28, "additions": 28, "deletions": 0}, "files": [{"sha": "2df878c3fb2201df961339ca06848d88cc74a10a", "filename": "src/librustc_middle/arena.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/3948e6070036f3ff2577da6041860dc77c4443b5/src%2Flibrustc_middle%2Farena.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3948e6070036f3ff2577da6041860dc77c4443b5/src%2Flibrustc_middle%2Farena.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_middle%2Farena.rs?ref=3948e6070036f3ff2577da6041860dc77c4443b5", "patch": "@@ -76,6 +76,12 @@ macro_rules! arena_types {\n             [few] hir_definitions: rustc_hir::definitions::Definitions,\n             [] hir_owner: rustc_middle::hir::Owner<$tcx>,\n             [] hir_owner_nodes: rustc_middle::hir::OwnerNodes<$tcx>,\n+\n+            // Note that this deliberately duplicates items in the `rustc_hir::arena`,\n+            // since we need to allocate this type on both the `rustc_hir` arena\n+            // (during lowering) and the `librustc_middle` arena (for decoding MIR)\n+            [decode] asm_template: rustc_ast::ast::InlineAsmTemplatePiece,\n+\n         ], $tcx);\n     )\n }"}, {"sha": "3dc7f502a59928b0ac8e70051510d06f46a83e54", "filename": "src/test/incremental/issue-72386.rs", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/3948e6070036f3ff2577da6041860dc77c4443b5/src%2Ftest%2Fincremental%2Fissue-72386.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3948e6070036f3ff2577da6041860dc77c4443b5/src%2Ftest%2Fincremental%2Fissue-72386.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fincremental%2Fissue-72386.rs?ref=3948e6070036f3ff2577da6041860dc77c4443b5", "patch": "@@ -0,0 +1,22 @@\n+// revisions: rpass1 cfail1 rpass3\n+// only-x86_64\n+// Regression test for issue #72386\n+// Checks that we don't ICE when switching to an invalid register\n+// and back again\n+\n+#![feature(asm)]\n+\n+#[cfg(any(rpass1, rpass3))]\n+fn main() {\n+    unsafe {\n+        asm!(\"nop\")\n+    }\n+}\n+\n+#[cfg(cfail1)]\n+fn main() {\n+    unsafe {\n+        asm!(\"nop\",out(\"invalid_reg\")_)\n+        //[cfail1]~^ ERROR invalid register\n+    }\n+}"}]}