{"sha": "ccb18f47e25daee22f151f3d21774eec38abdbe3", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNjYjE4ZjQ3ZTI1ZGFlZTIyZjE1MWYzZDIxNzc0ZWVjMzhhYmRiZTM=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2013-12-22T01:28:21Z"}, "committer": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2013-12-26T23:54:33Z"}, "message": "librustc: De-`@mut` the `used_mut_nodes` table in the type context", "tree": {"sha": "b7b99834e93757a233e1d5e6c2b071e0222a6477", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b7b99834e93757a233e1d5e6c2b071e0222a6477"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ccb18f47e25daee22f151f3d21774eec38abdbe3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ccb18f47e25daee22f151f3d21774eec38abdbe3", "html_url": "https://github.com/rust-lang/rust/commit/ccb18f47e25daee22f151f3d21774eec38abdbe3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ccb18f47e25daee22f151f3d21774eec38abdbe3/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5c63b1febc2e618f79d07ce46c1305cfa28b6596", "url": "https://api.github.com/repos/rust-lang/rust/commits/5c63b1febc2e618f79d07ce46c1305cfa28b6596", "html_url": "https://github.com/rust-lang/rust/commit/5c63b1febc2e618f79d07ce46c1305cfa28b6596"}], "stats": {"total": 17, "additions": 12, "deletions": 5}, "files": [{"sha": "6176f5601c14b4f3c58a5be131440cbe5f1822a4", "filename": "src/librustc/middle/borrowck/check_loans.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/ccb18f47e25daee22f151f3d21774eec38abdbe3/src%2Flibrustc%2Fmiddle%2Fborrowck%2Fcheck_loans.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ccb18f47e25daee22f151f3d21774eec38abdbe3/src%2Flibrustc%2Fmiddle%2Fborrowck%2Fcheck_loans.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fborrowck%2Fcheck_loans.rs?ref=ccb18f47e25daee22f151f3d21774eec38abdbe3", "patch": "@@ -357,7 +357,10 @@ impl<'a> CheckLoanCtxt<'a> {\n                     mc::cat_local(id) |\n                     mc::cat_arg(id) |\n                     mc::cat_self(id) => {\n-                        this.tcx().used_mut_nodes.insert(id);\n+                        let mut used_mut_nodes = this.tcx()\n+                                                     .used_mut_nodes\n+                                                     .borrow_mut();\n+                        used_mut_nodes.get().insert(id);\n                         return;\n                     }\n "}, {"sha": "fa0af8526cf7fc69c55bcab61ef7cbd5bf4b385e", "filename": "src/librustc/middle/borrowck/gather_loans/mod.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/ccb18f47e25daee22f151f3d21774eec38abdbe3/src%2Flibrustc%2Fmiddle%2Fborrowck%2Fgather_loans%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ccb18f47e25daee22f151f3d21774eec38abdbe3/src%2Flibrustc%2Fmiddle%2Fborrowck%2Fgather_loans%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fborrowck%2Fgather_loans%2Fmod.rs?ref=ccb18f47e25daee22f151f3d21774eec38abdbe3", "patch": "@@ -607,7 +607,10 @@ impl<'a> GatherLoanCtxt<'a> {\n \n         match *loan_path {\n             LpVar(local_id) => {\n-                self.tcx().used_mut_nodes.insert(local_id);\n+                let mut used_mut_nodes = self.tcx()\n+                                             .used_mut_nodes\n+                                             .borrow_mut();\n+                used_mut_nodes.get().insert(local_id);\n             }\n             LpExtend(base, mc::McInherited, _) => {\n                 self.mark_loan_path_as_mutated(base);"}, {"sha": "abba887253239c6a72f32d241899c1531d9608f5", "filename": "src/librustc/middle/lint.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/ccb18f47e25daee22f151f3d21774eec38abdbe3/src%2Flibrustc%2Fmiddle%2Flint.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ccb18f47e25daee22f151f3d21774eec38abdbe3/src%2Flibrustc%2Fmiddle%2Flint.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Flint.rs?ref=ccb18f47e25daee22f151f3d21774eec38abdbe3", "patch": "@@ -1038,7 +1038,8 @@ fn check_unused_mut_pat(cx: &Context, p: &ast::Pat) {\n                 }\n             };\n \n-            if !initial_underscore && !cx.tcx.used_mut_nodes.contains(&p.id) {\n+            let used_mut_nodes = cx.tcx.used_mut_nodes.borrow();\n+            if !initial_underscore && !used_mut_nodes.get().contains(&p.id) {\n                 cx.span_lint(unused_mut, p.span,\n                              \"variable does not need to be mutable\");\n             }"}, {"sha": "2a2245cfe26c6d8761e0e5aef84261f535d4730a", "filename": "src/librustc/middle/ty.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ccb18f47e25daee22f151f3d21774eec38abdbe3/src%2Flibrustc%2Fmiddle%2Fty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ccb18f47e25daee22f151f3d21774eec38abdbe3/src%2Flibrustc%2Fmiddle%2Fty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fty.rs?ref=ccb18f47e25daee22f151f3d21774eec38abdbe3", "patch": "@@ -353,7 +353,7 @@ struct ctxt_ {\n     // Set of nodes which mark locals as mutable which end up getting used at\n     // some point. Local variable definitions not in this set can be warned\n     // about.\n-    used_mut_nodes: @mut HashSet<ast::NodeId>,\n+    used_mut_nodes: RefCell<HashSet<ast::NodeId>>,\n \n     // vtable resolution information for impl declarations\n     impl_vtables: typeck::impl_vtable_map,\n@@ -1005,7 +1005,7 @@ pub fn mk_ctxt(s: session::Session,\n         inherent_impls: RefCell::new(HashMap::new()),\n         impls: RefCell::new(HashMap::new()),\n         used_unsafe: RefCell::new(HashSet::new()),\n-        used_mut_nodes: @mut HashSet::new(),\n+        used_mut_nodes: RefCell::new(HashSet::new()),\n         impl_vtables: RefCell::new(HashMap::new()),\n         populated_external_types: @mut HashSet::new(),\n         populated_external_traits: @mut HashSet::new(),"}]}