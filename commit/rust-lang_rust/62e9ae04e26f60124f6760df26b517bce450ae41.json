{"sha": "62e9ae04e26f60124f6760df26b517bce450ae41", "node_id": "MDY6Q29tbWl0NzI0NzEyOjYyZTlhZTA0ZTI2ZjYwMTI0ZjY3NjBkZjI2YjUxN2JjZTQ1MGFlNDE=", "commit": {"author": {"name": "Michael Sullivan", "email": "sully@msully.net", "date": "2012-07-10T00:39:22Z"}, "committer": {"name": "Michael Sullivan", "email": "sully@msully.net", "date": "2012-07-11T18:42:49Z"}, "message": "Remove obsolete type param field from shape information.", "tree": {"sha": "0f69d18d8dab83609e6aafb2351a847d95476534", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0f69d18d8dab83609e6aafb2351a847d95476534"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/62e9ae04e26f60124f6760df26b517bce450ae41", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/62e9ae04e26f60124f6760df26b517bce450ae41", "html_url": "https://github.com/rust-lang/rust/commit/62e9ae04e26f60124f6760df26b517bce450ae41", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/62e9ae04e26f60124f6760df26b517bce450ae41/comments", "author": {"login": "msullivan", "id": 340349, "node_id": "MDQ6VXNlcjM0MDM0OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/340349?v=4", "gravatar_id": "", "url": "https://api.github.com/users/msullivan", "html_url": "https://github.com/msullivan", "followers_url": "https://api.github.com/users/msullivan/followers", "following_url": "https://api.github.com/users/msullivan/following{/other_user}", "gists_url": "https://api.github.com/users/msullivan/gists{/gist_id}", "starred_url": "https://api.github.com/users/msullivan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/msullivan/subscriptions", "organizations_url": "https://api.github.com/users/msullivan/orgs", "repos_url": "https://api.github.com/users/msullivan/repos", "events_url": "https://api.github.com/users/msullivan/events{/privacy}", "received_events_url": "https://api.github.com/users/msullivan/received_events", "type": "User", "site_admin": false}, "committer": {"login": "msullivan", "id": 340349, "node_id": "MDQ6VXNlcjM0MDM0OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/340349?v=4", "gravatar_id": "", "url": "https://api.github.com/users/msullivan", "html_url": "https://github.com/msullivan", "followers_url": "https://api.github.com/users/msullivan/followers", "following_url": "https://api.github.com/users/msullivan/following{/other_user}", "gists_url": "https://api.github.com/users/msullivan/gists{/gist_id}", "starred_url": "https://api.github.com/users/msullivan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/msullivan/subscriptions", "organizations_url": "https://api.github.com/users/msullivan/orgs", "repos_url": "https://api.github.com/users/msullivan/repos", "events_url": "https://api.github.com/users/msullivan/events{/privacy}", "received_events_url": "https://api.github.com/users/msullivan/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "120773b2a7b6a1ca8ba859528f3e3cd9e574bf3d", "url": "https://api.github.com/repos/rust-lang/rust/commits/120773b2a7b6a1ca8ba859528f3e3cd9e574bf3d", "html_url": "https://github.com/rust-lang/rust/commit/120773b2a7b6a1ca8ba859528f3e3cd9e574bf3d"}], "stats": {"total": 16, "additions": 0, "deletions": 16}, "files": [{"sha": "b0f021287c06a851fea2535352d47f18513b242f", "filename": "src/rt/rust_shape.h", "status": "modified", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/62e9ae04e26f60124f6760df26b517bce450ae41/src%2Frt%2Frust_shape.h", "raw_url": "https://github.com/rust-lang/rust/raw/62e9ae04e26f60124f6760df26b517bce450ae41/src%2Frt%2Frust_shape.h", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_shape.h?ref=62e9ae04e26f60124f6760df26b517bce450ae41", "patch": "@@ -407,10 +407,6 @@ ctxt<T>::walk_tag0() {\n     // Determine the size and alignment.\n     tinfo.tag_sa = get_size_align(tinfo.info_ptr);\n \n-    // Read in a dummy value; this used to be the number of parameters\n-    uint16_t number_of_params = get_u16_bump(sp);\n-    assert(number_of_params == 0 && \"tag has type parameters on it\");\n-\n     // Call to the implementation.\n     static_cast<T *>(this)->walk_tag1(tinfo);\n }\n@@ -489,10 +485,6 @@ ctxt<T>::walk_res0() {\n         reinterpret_cast<const rust_fn **>(tables->resources);\n     const rust_fn *dtor = resources[dtor_offset];\n \n-    // Read in a dummy value; this used to be the number of parameters\n-    uint16_t number_of_params = get_u16_bump(sp);\n-    assert(number_of_params == 0 && \"resource has type parameters on it\");\n-\n     uint16_t sp_size = get_u16_bump(sp);\n     const uint8_t *end_sp = sp + sp_size;\n "}, {"sha": "f6be67b1512b4d6daceca5ef3b0462a2abf40015", "filename": "src/rustc/middle/trans/shape.rs", "status": "modified", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/62e9ae04e26f60124f6760df26b517bce450ae41/src%2Frustc%2Fmiddle%2Ftrans%2Fshape.rs", "raw_url": "https://github.com/rust-lang/rust/raw/62e9ae04e26f60124f6760df26b517bce450ae41/src%2Frustc%2Fmiddle%2Ftrans%2Fshape.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustc%2Fmiddle%2Ftrans%2Fshape.rs?ref=62e9ae04e26f60124f6760df26b517bce450ae41", "patch": "@@ -250,10 +250,6 @@ fn shape_of(ccx: @crate_ctxt, t: ty::t) -> ~[u8] {\n             }\n             add_u16(s, id as u16);\n \n-            // Hack: always encode 0 tps, since the shape glue format\n-            // hasn't changed since we started monomorphizing.\n-            add_u16(s, 0_u16);\n-\n             s\n           }\n         }\n@@ -342,10 +338,6 @@ fn shape_of(ccx: @crate_ctxt, t: ty::t) -> ~[u8] {\n           let ri = @{did: dtor_did, parent_id: some(did), tps: tps};\n           let id = interner::intern(ccx.shape_cx.resources, ri);\n           add_u16(s, id as u16);\n-\n-          // Hack: always encode 0 tps, since the shape glue format\n-          // hasn't changed since we started monomorphizing.\n-          add_u16(s, 0_u16);\n         };\n         for ty::class_items_as_mutable_fields(ccx.tcx, did, substs).each |f| {\n            sub += shape_of(ccx, f.mt.ty);"}]}