{"sha": "1f8c4b096da8d7c6436038730fa4a862e1ac91f5", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFmOGM0YjA5NmRhOGQ3YzY0MzYwMzg3MzBmYTRhODYyZTFhYzkxZjU=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2013-05-26T16:35:00Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2013-05-26T16:35:00Z"}, "message": "auto merge of #6700 : ben0x539/rust/nestvariantdocs, r=thestinger\n\nThis indents all but the first line of multi-line annotations for individual enum variants with four spaces so that pandoc will recognize everything as belonging to the same list item.\r\n\r\nSince that introduces `<p>` tags for some list items, I've gone ahead and inserted blank lines after each list item so that consistently get `<p>` tags for all `<li>`s documenting variants. It's a bit less compact now but still tolerable, I think.", "tree": {"sha": "9781e1af8bebeb9c49457e386462846d6f044357", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9781e1af8bebeb9c49457e386462846d6f044357"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1f8c4b096da8d7c6436038730fa4a862e1ac91f5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1f8c4b096da8d7c6436038730fa4a862e1ac91f5", "html_url": "https://github.com/rust-lang/rust/commit/1f8c4b096da8d7c6436038730fa4a862e1ac91f5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1f8c4b096da8d7c6436038730fa4a862e1ac91f5/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f254d119eab514c91fbd6590fba821ec7a0bfd7f", "url": "https://api.github.com/repos/rust-lang/rust/commits/f254d119eab514c91fbd6590fba821ec7a0bfd7f", "html_url": "https://github.com/rust-lang/rust/commit/f254d119eab514c91fbd6590fba821ec7a0bfd7f"}, {"sha": "d89a6ceb1b36e7460afece5b3392c8f24f7ef6ce", "url": "https://api.github.com/repos/rust-lang/rust/commits/d89a6ceb1b36e7460afece5b3392c8f24f7ef6ce", "html_url": "https://github.com/rust-lang/rust/commit/d89a6ceb1b36e7460afece5b3392c8f24f7ef6ce"}], "stats": {"total": 39, "additions": 38, "deletions": 1}, "files": [{"sha": "97de4627d6b4c916dc0b8a04b9ac7d94e6131669", "filename": "src/librustdoc/markdown_pass.rs", "status": "modified", "additions": 38, "deletions": 1, "changes": 39, "blob_url": "https://github.com/rust-lang/rust/blob/1f8c4b096da8d7c6436038730fa4a862e1ac91f5/src%2Flibrustdoc%2Fmarkdown_pass.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f8c4b096da8d7c6436038730fa4a862e1ac91f5/src%2Flibrustdoc%2Fmarkdown_pass.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fmarkdown_pass.rs?ref=1f8c4b096da8d7c6436038730fa4a862e1ac91f5", "patch": "@@ -451,16 +451,32 @@ fn write_variants(\n fn write_variant(ctxt: &Ctxt, doc: doc::VariantDoc) {\n     assert!(doc.sig.is_some());\n     let sig = (&doc.sig).get();\n+\n+    // space out list items so they all end up within paragraph elements\n+    ctxt.w.put_line(~\"\");\n+\n     match copy doc.desc {\n         Some(desc) => {\n-            ctxt.w.put_line(fmt!(\"* `%s` - %s\", sig, desc));\n+            ctxt.w.put_line(list_item_indent(fmt!(\"* `%s` - %s\", sig, desc)));\n         }\n         None => {\n             ctxt.w.put_line(fmt!(\"* `%s`\", sig));\n         }\n     }\n }\n \n+fn list_item_indent(item: &str) -> ~str {\n+    let mut indented = ~[];\n+    for str::each_line_any(item) |line| {\n+        indented.push(line);\n+    }\n+\n+    // separate markdown elements within `*` lists must be indented by four\n+    // spaces, or they will escape the list context. indenting everything\n+    // seems fine though.\n+    str::connect_slices(indented, \"\\n    \")\n+}\n+\n fn write_trait(ctxt: &Ctxt, doc: doc::TraitDoc) {\n     write_common(ctxt, doc.desc(), doc.sections());\n     write_methods(ctxt, doc.methods);\n@@ -807,7 +823,9 @@ mod test {\n         assert!(str::contains(\n             markdown,\n             \"\\n\\n#### Variants\\n\\\n+             \\n\\\n              \\n* `b` - test\\\n+             \\n\\\n              \\n* `c` - test\\n\\n\"));\n     }\n \n@@ -817,7 +835,24 @@ mod test {\n         assert!(str::contains(\n             markdown,\n             \"\\n\\n#### Variants\\n\\\n+             \\n\\\n              \\n* `b`\\\n+             \\n\\\n+             \\n* `c`\\n\\n\"));\n+    }\n+\n+    #[test]\n+    fn should_write_variant_list_with_indent() {\n+        let markdown = render(\n+            ~\"enum a { #[doc = \\\"line 1\\\\n\\\\nline 2\\\"] b, c }\");\n+        assert!(str::contains(\n+            markdown,\n+            \"\\n\\n#### Variants\\n\\\n+             \\n\\\n+             \\n* `b` - line 1\\\n+             \\n    \\\n+             \\n    line 2\\\n+             \\n\\\n              \\n* `c`\\n\\n\"));\n     }\n \n@@ -827,7 +862,9 @@ mod test {\n         assert!(str::contains(\n             markdown,\n             \"\\n\\n#### Variants\\n\\\n+             \\n\\\n              \\n* `b(int)`\\\n+             \\n\\\n              \\n* `c(int)` - a\\n\\n\"));\n     }\n "}]}