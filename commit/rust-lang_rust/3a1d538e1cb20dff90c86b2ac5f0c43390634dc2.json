{"sha": "3a1d538e1cb20dff90c86b2ac5f0c43390634dc2", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNhMWQ1MzhlMWNiMjBkZmY5MGM4NmIyYWM1ZjBjNDMzOTA2MzRkYzI=", "commit": {"author": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2014-11-26T17:47:10Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2014-11-27T00:50:13Z"}, "message": "rollup merge of #19328: sfackler/buffered-get-mut\n\nThis is necessary to e.g. set a timeout on the underlying stream.\n\nr? @alexcrichton", "tree": {"sha": "760325ea5659816d44049e84bacb792d9a328934", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/760325ea5659816d44049e84bacb792d9a328934"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3a1d538e1cb20dff90c86b2ac5f0c43390634dc2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3a1d538e1cb20dff90c86b2ac5f0c43390634dc2", "html_url": "https://github.com/rust-lang/rust/commit/3a1d538e1cb20dff90c86b2ac5f0c43390634dc2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3a1d538e1cb20dff90c86b2ac5f0c43390634dc2/comments", "author": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "229808405859c46494957df4a5d0cf0e1ba2d257", "url": "https://api.github.com/repos/rust-lang/rust/commits/229808405859c46494957df4a5d0cf0e1ba2d257", "html_url": "https://github.com/rust-lang/rust/commit/229808405859c46494957df4a5d0cf0e1ba2d257"}, {"sha": "945b4edd678c8512b9b51855543db18251238d21", "url": "https://api.github.com/repos/rust-lang/rust/commits/945b4edd678c8512b9b51855543db18251238d21", "html_url": "https://github.com/rust-lang/rust/commit/945b4edd678c8512b9b51855543db18251238d21"}], "stats": {"total": 36, "additions": 26, "deletions": 10}, "files": [{"sha": "e92bad592d1268cc20309b1a18750058f343db87", "filename": "src/libstd/io/buffered.rs", "status": "modified", "additions": 26, "deletions": 10, "changes": 36, "blob_url": "https://github.com/rust-lang/rust/blob/3a1d538e1cb20dff90c86b2ac5f0c43390634dc2/src%2Flibstd%2Fio%2Fbuffered.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3a1d538e1cb20dff90c86b2ac5f0c43390634dc2/src%2Flibstd%2Fio%2Fbuffered.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fio%2Fbuffered.rs?ref=3a1d538e1cb20dff90c86b2ac5f0c43390634dc2", "patch": "@@ -75,10 +75,14 @@ impl<R: Reader> BufferedReader<R> {\n     }\n \n     /// Gets a reference to the underlying reader.\n+    pub fn get_ref<'a>(&self) -> &R { &self.inner }\n+\n+    /// Gets a mutable reference to the underlying reader.\n     ///\n-    /// This type does not expose the ability to get a mutable reference to the\n-    /// underlying reader because that could possibly corrupt the buffer.\n-    pub fn get_ref<'a>(&'a self) -> &'a R { &self.inner }\n+    /// ## Warning\n+    ///\n+    /// It is inadvisable to directly read from the underlying reader.\n+    pub fn get_mut(&mut self) -> &mut R { &mut self.inner }\n \n     /// Unwraps this `BufferedReader`, returning the underlying reader.\n     ///\n@@ -176,10 +180,14 @@ impl<W: Writer> BufferedWriter<W> {\n     }\n \n     /// Gets a reference to the underlying writer.\n+    pub fn get_ref(&self) -> &W { self.inner.as_ref().unwrap() }\n+\n+    /// Gets a mutable reference to the underlying write.\n     ///\n-    /// This type does not expose the ability to get a mutable reference to the\n-    /// underlying reader because that could possibly corrupt the buffer.\n-    pub fn get_ref<'a>(&'a self) -> &'a W { self.inner.as_ref().unwrap() }\n+    /// ## Warning\n+    ///\n+    /// It is inadvisable to directly read from the underlying writer.\n+    pub fn get_mut(&mut self) -> &mut W { self.inner.as_mut().unwrap() }\n \n     /// Unwraps this `BufferedWriter`, returning the underlying writer.\n     ///\n@@ -341,14 +349,22 @@ impl<S: Stream> BufferedStream<S> {\n     }\n \n     /// Gets a reference to the underlying stream.\n-    ///\n-    /// This type does not expose the ability to get a mutable reference to the\n-    /// underlying reader because that could possibly corrupt the buffer.\n-    pub fn get_ref<'a>(&'a self) -> &'a S {\n+    pub fn get_ref(&self) -> &S {\n         let InternalBufferedWriter(ref w) = self.inner.inner;\n         w.get_ref()\n     }\n \n+    /// Gets a mutable reference to the underlying stream.\n+    ///\n+    /// ## Warning\n+    ///\n+    /// It is inadvisable to read directly from or write directly to the\n+    /// underlying stream.\n+    pub fn get_mut(&mut self) -> &mut S {\n+        let InternalBufferedWriter(ref mut w) = self.inner.inner;\n+        w.get_mut()\n+    }\n+\n     /// Unwraps this `BufferedStream`, returning the underlying stream.\n     ///\n     /// The internal buffer is flushed before returning the stream. Any leftover"}]}