{"sha": "f12e60a5c8bacd8fb43b503000c19187aa3b09c2", "node_id": "MDY6Q29tbWl0NzI0NzEyOmYxMmU2MGE1YzhiYWNkOGZiNDNiNTAzMDAwYzE5MTg3YWEzYjA5YzI=", "commit": {"author": {"name": "Volker Mische", "email": "volker.mische@gmail.com", "date": "2015-01-16T20:29:43Z"}, "committer": {"name": "Steve Klabnik", "email": "steve@steveklabnik.com", "date": "2015-01-17T15:51:07Z"}, "message": "Make Index trait example clearer\n\nThe example of the `Index` and `IndexMut` trait contained too much `Foo`.\r\nIt now contains a bit more `Bar` to make things clearer which parts are\r\ndefining the type of the index.", "tree": {"sha": "a9701ca2ea5d9769c8cbb005c42cce73f655e1dc", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a9701ca2ea5d9769c8cbb005c42cce73f655e1dc"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f12e60a5c8bacd8fb43b503000c19187aa3b09c2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f12e60a5c8bacd8fb43b503000c19187aa3b09c2", "html_url": "https://github.com/rust-lang/rust/commit/f12e60a5c8bacd8fb43b503000c19187aa3b09c2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f12e60a5c8bacd8fb43b503000c19187aa3b09c2/comments", "author": {"login": "vmx", "id": 42839, "node_id": "MDQ6VXNlcjQyODM5", "avatar_url": "https://avatars.githubusercontent.com/u/42839?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vmx", "html_url": "https://github.com/vmx", "followers_url": "https://api.github.com/users/vmx/followers", "following_url": "https://api.github.com/users/vmx/following{/other_user}", "gists_url": "https://api.github.com/users/vmx/gists{/gist_id}", "starred_url": "https://api.github.com/users/vmx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vmx/subscriptions", "organizations_url": "https://api.github.com/users/vmx/orgs", "repos_url": "https://api.github.com/users/vmx/repos", "events_url": "https://api.github.com/users/vmx/events{/privacy}", "received_events_url": "https://api.github.com/users/vmx/received_events", "type": "User", "site_admin": false}, "committer": {"login": "steveklabnik", "id": 27786, "node_id": "MDQ6VXNlcjI3Nzg2", "avatar_url": "https://avatars.githubusercontent.com/u/27786?v=4", "gravatar_id": "", "url": "https://api.github.com/users/steveklabnik", "html_url": "https://github.com/steveklabnik", "followers_url": "https://api.github.com/users/steveklabnik/followers", "following_url": "https://api.github.com/users/steveklabnik/following{/other_user}", "gists_url": "https://api.github.com/users/steveklabnik/gists{/gist_id}", "starred_url": "https://api.github.com/users/steveklabnik/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/steveklabnik/subscriptions", "organizations_url": "https://api.github.com/users/steveklabnik/orgs", "repos_url": "https://api.github.com/users/steveklabnik/repos", "events_url": "https://api.github.com/users/steveklabnik/events{/privacy}", "received_events_url": "https://api.github.com/users/steveklabnik/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0109ceaf827461d525ada1a71dcba909071d7cdc", "url": "https://api.github.com/repos/rust-lang/rust/commits/0109ceaf827461d525ada1a71dcba909071d7cdc", "html_url": "https://github.com/rust-lang/rust/commit/0109ceaf827461d525ada1a71dcba909071d7cdc"}], "stats": {"total": 22, "additions": 10, "deletions": 12}, "files": [{"sha": "7d41c3fc5a56f45e2a0dbef004b0ead22e497d71", "filename": "src/libcore/ops.rs", "status": "modified", "additions": 10, "deletions": 12, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/f12e60a5c8bacd8fb43b503000c19187aa3b09c2/src%2Flibcore%2Fops.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f12e60a5c8bacd8fb43b503000c19187aa3b09c2/src%2Flibcore%2Fops.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fops.rs?ref=f12e60a5c8bacd8fb43b503000c19187aa3b09c2", "patch": "@@ -830,28 +830,27 @@ shr_impl_all! { u8 u16 u32 u64 usize i8 i16 i32 i64 isize }\n ///\n /// # Example\n ///\n-/// A trivial implementation of `Index`. When `Foo[Foo]` happens, it ends up\n+/// A trivial implementation of `Index`. When `Foo[Bar]` happens, it ends up\n /// calling `index`, and therefore, `main` prints `Indexing!`.\n ///\n /// ```\n-/// #![feature(associated_types)]\n-///\n /// use std::ops::Index;\n ///\n /// #[derive(Copy)]\n /// struct Foo;\n+/// struct Bar;\n ///\n-/// impl Index<Foo> for Foo {\n+/// impl Index<Bar> for Foo {\n ///     type Output = Foo;\n ///\n-///     fn index<'a>(&'a self, _index: &Foo) -> &'a Foo {\n+///     fn index<'a>(&'a self, _index: &Bar) -> &'a Foo {\n ///         println!(\"Indexing!\");\n ///         self\n ///     }\n /// }\n ///\n /// fn main() {\n-///     Foo[Foo];\n+///     Foo[Bar];\n /// }\n /// ```\n #[lang=\"index\"]\n@@ -867,28 +866,27 @@ pub trait Index<Index: ?Sized> {\n ///\n /// # Example\n ///\n-/// A trivial implementation of `IndexMut`. When `Foo[Foo]` happens, it ends up\n+/// A trivial implementation of `IndexMut`. When `Foo[Bar]` happens, it ends up\n /// calling `index_mut`, and therefore, `main` prints `Indexing!`.\n ///\n /// ```\n-/// #![feature(associated_types)]\n-///\n /// use std::ops::IndexMut;\n ///\n /// #[derive(Copy)]\n /// struct Foo;\n+/// struct Bar;\n ///\n-/// impl IndexMut<Foo> for Foo {\n+/// impl IndexMut<Bar> for Foo {\n ///     type Output = Foo;\n ///\n-///     fn index_mut<'a>(&'a mut self, _index: &Foo) -> &'a mut Foo {\n+///     fn index_mut<'a>(&'a mut self, _index: &Bar) -> &'a mut Foo {\n ///         println!(\"Indexing!\");\n ///         self\n ///     }\n /// }\n ///\n /// fn main() {\n-///     &mut Foo[Foo];\n+///     &mut Foo[Bar];\n /// }\n /// ```\n #[lang=\"index_mut\"]"}]}