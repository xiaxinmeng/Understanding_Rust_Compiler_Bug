{"sha": "24f9209a87680e101db27a4466fbbc1d56762c03", "node_id": "C_kwDOAAsO6NoAKDI0ZjkyMDlhODc2ODBlMTAxZGIyN2E0NDY2ZmJiYzFkNTY3NjJjMDM", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-04-21T15:39:10Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-04-21T15:39:10Z"}, "message": "Auto merge of #12040 - rainy-me:improve-parameter-completion, r=jonas-schievink\n\nfix: Improve parameter completion\n\nfix https://github.com/rust-lang/rust-analyzer/issues/12016 and handles some extra cases.", "tree": {"sha": "a5587ffe47fb6ff40e2f3872e49c51c8dbc876ae", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a5587ffe47fb6ff40e2f3872e49c51c8dbc876ae"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/24f9209a87680e101db27a4466fbbc1d56762c03", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/24f9209a87680e101db27a4466fbbc1d56762c03", "html_url": "https://github.com/rust-lang/rust/commit/24f9209a87680e101db27a4466fbbc1d56762c03", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/24f9209a87680e101db27a4466fbbc1d56762c03/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "71d49d31bbff3d8b0cba267509d33d6b6c1de08f", "url": "https://api.github.com/repos/rust-lang/rust/commits/71d49d31bbff3d8b0cba267509d33d6b6c1de08f", "html_url": "https://github.com/rust-lang/rust/commit/71d49d31bbff3d8b0cba267509d33d6b6c1de08f"}, {"sha": "8f8f20fda5936faff04f9c5c3c8880bd4572900f", "url": "https://api.github.com/repos/rust-lang/rust/commits/8f8f20fda5936faff04f9c5c3c8880bd4572900f", "html_url": "https://github.com/rust-lang/rust/commit/8f8f20fda5936faff04f9c5c3c8880bd4572900f"}], "stats": {"total": 124, "additions": 113, "deletions": 11}, "files": [{"sha": "ae09339e9516a2814634e410f36f8fd78d6589e3", "filename": "crates/ide_completion/src/completions/fn_param.rs", "status": "modified", "additions": 16, "deletions": 11, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/24f9209a87680e101db27a4466fbbc1d56762c03/crates%2Fide_completion%2Fsrc%2Fcompletions%2Ffn_param.rs", "raw_url": "https://github.com/rust-lang/rust/raw/24f9209a87680e101db27a4466fbbc1d56762c03/crates%2Fide_completion%2Fsrc%2Fcompletions%2Ffn_param.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_completion%2Fsrc%2Fcompletions%2Ffn_param.rs?ref=24f9209a87680e101db27a4466fbbc1d56762c03", "patch": "@@ -5,7 +5,7 @@ use rustc_hash::FxHashMap;\n use syntax::{\n     algo,\n     ast::{self, HasModuleItem},\n-    match_ast, AstNode, Direction, SyntaxKind,\n+    match_ast, AstNode, Direction, SyntaxKind, TextRange,\n };\n \n use crate::{\n@@ -27,14 +27,13 @@ pub(crate) fn complete_fn_param(acc: &mut Completions, ctx: &CompletionContext)\n \n     let comma_wrapper = comma_wrapper(ctx);\n     let mut add_new_item_to_acc = |label: &str, lookup: String| {\n-        let mk_item = |label: &str| {\n-            CompletionItem::new(CompletionItemKind::Binding, ctx.source_range(), label)\n+        let mk_item = |label: &str, range: TextRange| {\n+            CompletionItem::new(CompletionItemKind::Binding, range, label)\n         };\n-        let mut item = match &comma_wrapper {\n-            Some(fmt) => mk_item(&fmt(label)),\n-            None => mk_item(label),\n+        let item = match &comma_wrapper {\n+            Some((fmt, range, lookup)) => mk_item(&fmt(label), *range).lookup_by(lookup).to_owned(),\n+            None => mk_item(label, ctx.source_range()).lookup_by(lookup).to_owned(),\n         };\n-        item.lookup_by(lookup);\n         item.add_to(acc)\n     };\n \n@@ -162,14 +161,16 @@ fn should_add_self_completions(ctx: &CompletionContext, param_list: &ast::ParamL\n     inside_impl && no_params\n }\n \n-fn comma_wrapper(ctx: &CompletionContext) -> Option<impl Fn(&str) -> String> {\n+fn comma_wrapper(ctx: &CompletionContext) -> Option<(impl Fn(&str) -> String, TextRange, String)> {\n+    let param = ctx.token.ancestors().find(|node| node.kind() == SyntaxKind::PARAM)?;\n+\n     let next_token_kind = {\n-        let t = ctx.token.next_token()?;\n+        let t = param.last_token()?.next_token()?;\n         let t = algo::skip_whitespace_token(t, Direction::Next)?;\n         t.kind()\n     };\n     let prev_token_kind = {\n-        let t = ctx.previous_token.clone()?;\n+        let t = param.first_token()?.prev_token()?;\n         let t = algo::skip_whitespace_token(t, Direction::Prev)?;\n         t.kind()\n     };\n@@ -182,5 +183,9 @@ fn comma_wrapper(ctx: &CompletionContext) -> Option<impl Fn(&str) -> String> {\n         matches!(prev_token_kind, SyntaxKind::COMMA | SyntaxKind::L_PAREN | SyntaxKind::PIPE);\n     let leading = if has_leading_comma { \"\" } else { \", \" };\n \n-    Some(move |param: &_| format!(\"{}{}{}\", leading, param, trailing))\n+    Some((\n+        move |label: &_| (format!(\"{}{}{}\", leading, label, trailing)),\n+        param.text_range(),\n+        format!(\"{}{}\", leading, param.text()),\n+    ))\n }"}, {"sha": "bd6833567c3346ef400b54de757c5c6143c42279", "filename": "crates/ide_completion/src/render/function.rs", "status": "modified", "additions": 84, "deletions": 0, "changes": 84, "blob_url": "https://github.com/rust-lang/rust/blob/24f9209a87680e101db27a4466fbbc1d56762c03/crates%2Fide_completion%2Fsrc%2Frender%2Ffunction.rs", "raw_url": "https://github.com/rust-lang/rust/raw/24f9209a87680e101db27a4466fbbc1d56762c03/crates%2Fide_completion%2Fsrc%2Frender%2Ffunction.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_completion%2Fsrc%2Frender%2Ffunction.rs?ref=24f9209a87680e101db27a4466fbbc1d56762c03", "patch": "@@ -562,6 +562,90 @@ fn qux(Foo { bar }: Foo) {\n fn main() {\n   qux(${1:foo})$0\n }\n+\"#,\n+        );\n+    }\n+\n+    #[test]\n+    fn complete_fn_param() {\n+        // has mut kw\n+        check_edit(\n+            \"mut ba\",\n+            r#\"\n+fn f(foo: (), mut bar: u32) {}\n+fn g(foo: (), mut ba$0)\n+\"#,\n+            r#\"\n+fn f(foo: (), mut bar: u32) {}\n+fn g(foo: (), mut bar: u32)\n+\"#,\n+        );\n+\n+        // has type param\n+        check_edit(\n+            \"mut ba: u32\",\n+            r#\"\n+fn g(foo: (), mut ba$0: u32)\n+fn f(foo: (), mut bar: u32) {}\n+\"#,\n+            r#\"\n+fn g(foo: (), mut bar: u32)\n+fn f(foo: (), mut bar: u32) {}\n+\"#,\n+        );\n+    }\n+\n+    #[test]\n+    fn complete_fn_mut_param_add_comma() {\n+        // add leading and trailing comma\n+        check_edit(\n+            \", mut ba\",\n+            r#\"\n+fn f(foo: (), mut bar: u32) {}\n+fn g(foo: ()mut ba$0 baz: ())\n+\"#,\n+            r#\"\n+fn f(foo: (), mut bar: u32) {}\n+fn g(foo: (), mut bar: u32, baz: ())\n+\"#,\n+        );\n+    }\n+\n+    #[test]\n+    fn complete_fn_mut_param_has_attribute() {\n+        check_edit(\n+            \"mut ba\",\n+            r#\"\n+fn f(foo: (), #[baz = \"qux\"] mut bar: u32) {}\n+fn g(foo: (), mut ba$0)\n+\"#,\n+            r#\"\n+fn f(foo: (), #[baz = \"qux\"] mut bar: u32) {}\n+fn g(foo: (), #[baz = \"qux\"] mut bar: u32)\n+\"#,\n+        );\n+\n+        check_edit(\n+            r#\"#[baz = \"qux\"] mut ba\"#,\n+            r#\"\n+fn f(foo: (), #[baz = \"qux\"] mut bar: u32) {}\n+fn g(foo: (), #[baz = \"qux\"] mut ba$0)\n+\"#,\n+            r#\"\n+fn f(foo: (), #[baz = \"qux\"] mut bar: u32) {}\n+fn g(foo: (), #[baz = \"qux\"] mut bar: u32)\n+\"#,\n+        );\n+\n+        check_edit(\n+            r#\", #[baz = \"qux\"] mut ba\"#,\n+            r#\"\n+fn f(foo: (), #[baz = \"qux\"] mut bar: u32) {}\n+fn g(foo: ()#[baz = \"qux\"] mut ba$0)\n+\"#,\n+            r#\"\n+fn f(foo: (), #[baz = \"qux\"] mut bar: u32) {}\n+fn g(foo: (), #[baz = \"qux\"] mut bar: u32)\n \"#,\n         );\n     }"}, {"sha": "678c99aa7ad90c3f368fbd506d1adde23f652d59", "filename": "crates/ide_completion/src/tests/fn_param.rs", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/24f9209a87680e101db27a4466fbbc1d56762c03/crates%2Fide_completion%2Fsrc%2Ftests%2Ffn_param.rs", "raw_url": "https://github.com/rust-lang/rust/raw/24f9209a87680e101db27a4466fbbc1d56762c03/crates%2Fide_completion%2Fsrc%2Ftests%2Ffn_param.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_completion%2Fsrc%2Ftests%2Ffn_param.rs?ref=24f9209a87680e101db27a4466fbbc1d56762c03", "patch": "@@ -232,3 +232,16 @@ fn bar(bar$0) {}\n         \"#]],\n     )\n }\n+\n+#[test]\n+fn completes_for_params_with_attributes() {\n+    check(\n+        r#\"\n+fn f(foo: (), #[baz = \"qux\"] mut bar: u32) {}\n+fn g(foo: (), #[baz = \"qux\"] mut ba$0)\n+\"#,\n+        expect![[r##\"\n+            bn #[baz = \"qux\"] mut bar: u32\n+        \"##]],\n+    )\n+}"}]}