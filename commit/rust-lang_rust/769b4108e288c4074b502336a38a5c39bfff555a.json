{"sha": "769b4108e288c4074b502336a38a5c39bfff555a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc2OWI0MTA4ZTI4OGM0MDc0YjUwMjMzNmEzOGE1YzM5YmZmZjU1NWE=", "commit": {"author": {"name": "LeSeulArtichaut", "email": "leseulartichaut@gmail.com", "date": "2020-10-22T11:55:19Z"}, "committer": {"name": "LeSeulArtichaut", "email": "leseulartichaut@gmail.com", "date": "2020-10-22T11:55:19Z"}, "message": "Make closures inherit the parent function's target features", "tree": {"sha": "bc1b099b36021880eea62297e657441c3e2e447e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bc1b099b36021880eea62297e657441c3e2e447e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/769b4108e288c4074b502336a38a5c39bfff555a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/769b4108e288c4074b502336a38a5c39bfff555a", "html_url": "https://github.com/rust-lang/rust/commit/769b4108e288c4074b502336a38a5c39bfff555a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/769b4108e288c4074b502336a38a5c39bfff555a/comments", "author": {"login": "LeSeulArtichaut", "id": 38361244, "node_id": "MDQ6VXNlcjM4MzYxMjQ0", "avatar_url": "https://avatars.githubusercontent.com/u/38361244?v=4", "gravatar_id": "", "url": "https://api.github.com/users/LeSeulArtichaut", "html_url": "https://github.com/LeSeulArtichaut", "followers_url": "https://api.github.com/users/LeSeulArtichaut/followers", "following_url": "https://api.github.com/users/LeSeulArtichaut/following{/other_user}", "gists_url": "https://api.github.com/users/LeSeulArtichaut/gists{/gist_id}", "starred_url": "https://api.github.com/users/LeSeulArtichaut/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/LeSeulArtichaut/subscriptions", "organizations_url": "https://api.github.com/users/LeSeulArtichaut/orgs", "repos_url": "https://api.github.com/users/LeSeulArtichaut/repos", "events_url": "https://api.github.com/users/LeSeulArtichaut/events{/privacy}", "received_events_url": "https://api.github.com/users/LeSeulArtichaut/received_events", "type": "User", "site_admin": false}, "committer": {"login": "LeSeulArtichaut", "id": 38361244, "node_id": "MDQ6VXNlcjM4MzYxMjQ0", "avatar_url": "https://avatars.githubusercontent.com/u/38361244?v=4", "gravatar_id": "", "url": "https://api.github.com/users/LeSeulArtichaut", "html_url": "https://github.com/LeSeulArtichaut", "followers_url": "https://api.github.com/users/LeSeulArtichaut/followers", "following_url": "https://api.github.com/users/LeSeulArtichaut/following{/other_user}", "gists_url": "https://api.github.com/users/LeSeulArtichaut/gists{/gist_id}", "starred_url": "https://api.github.com/users/LeSeulArtichaut/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/LeSeulArtichaut/subscriptions", "organizations_url": "https://api.github.com/users/LeSeulArtichaut/orgs", "repos_url": "https://api.github.com/users/LeSeulArtichaut/repos", "events_url": "https://api.github.com/users/LeSeulArtichaut/events{/privacy}", "received_events_url": "https://api.github.com/users/LeSeulArtichaut/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8f0fa9d51ff4ad2c0869e660856cd327e79915e9", "url": "https://api.github.com/repos/rust-lang/rust/commits/8f0fa9d51ff4ad2c0869e660856cd327e79915e9", "html_url": "https://github.com/rust-lang/rust/commit/8f0fa9d51ff4ad2c0869e660856cd327e79915e9"}], "stats": {"total": 28, "additions": 27, "deletions": 1}, "files": [{"sha": "b30fb7be273f1fa2754db798ebb0d744ecfde337", "filename": "compiler/rustc_typeck/src/collect.rs", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/769b4108e288c4074b502336a38a5c39bfff555a/compiler%2Frustc_typeck%2Fsrc%2Fcollect.rs", "raw_url": "https://github.com/rust-lang/rust/raw/769b4108e288c4074b502336a38a5c39bfff555a/compiler%2Frustc_typeck%2Fsrc%2Fcollect.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcollect.rs?ref=769b4108e288c4074b502336a38a5c39bfff555a", "patch": "@@ -40,7 +40,7 @@ use rustc_middle::ty::query::Providers;\n use rustc_middle::ty::subst::InternalSubsts;\n use rustc_middle::ty::util::Discr;\n use rustc_middle::ty::util::IntTypeExt;\n-use rustc_middle::ty::{self, AdtKind, Const, ToPolyTraitRef, Ty, TyCtxt};\n+use rustc_middle::ty::{self, AdtKind, Const, DefIdTree, ToPolyTraitRef, Ty, TyCtxt};\n use rustc_middle::ty::{ReprOptions, ToPredicate, WithConstness};\n use rustc_session::config::SanitizerSet;\n use rustc_session::lint;\n@@ -2786,6 +2786,14 @@ fn codegen_fn_attrs(tcx: TyCtxt<'_>, id: DefId) -> CodegenFnAttrs {\n         }\n     });\n \n+    // #73631: closures inherit `#[target_feature]` annotations\n+    if tcx.features().target_feature_11 && tcx.is_closure(id) {\n+        let owner_id = tcx.parent(id).expect(\"closure should have a parent\");\n+        codegen_fn_attrs\n+            .target_features\n+            .extend(tcx.codegen_fn_attrs(owner_id).target_features.iter().copied())\n+    }\n+\n     // If a function uses #[target_feature] it can't be inlined into general\n     // purpose functions as they wouldn't have the right target features\n     // enabled. For that reason we also forbid #[inline(always)] as it can't be"}, {"sha": "e6c81f56ab8630a0c408af5afe73cadf90c7fdd7", "filename": "src/test/ui/rfcs/rfc-2396-target_feature-11/closures-inherit-target_feature.rs", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/769b4108e288c4074b502336a38a5c39bfff555a/src%2Ftest%2Fui%2Frfcs%2Frfc-2396-target_feature-11%2Fclosures-inherit-target_feature.rs", "raw_url": "https://github.com/rust-lang/rust/raw/769b4108e288c4074b502336a38a5c39bfff555a/src%2Ftest%2Fui%2Frfcs%2Frfc-2396-target_feature-11%2Fclosures-inherit-target_feature.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfcs%2Frfc-2396-target_feature-11%2Fclosures-inherit-target_feature.rs?ref=769b4108e288c4074b502336a38a5c39bfff555a", "patch": "@@ -0,0 +1,18 @@\n+// Tests #73631: closures inherit `#[target_feature]` annotations\n+\n+// check-pass\n+// only-x86_64\n+\n+#![feature(target_feature_11)]\n+\n+#[target_feature(enable=\"avx\")]\n+fn also_use_avx() {\n+    println!(\"Hello from AVX\")\n+}\n+\n+#[target_feature(enable=\"avx\")]\n+fn use_avx() -> Box<dyn Fn()> {\n+    Box::new(|| also_use_avx())\n+}\n+\n+fn main() {}\n\\ No newline at end of file"}]}