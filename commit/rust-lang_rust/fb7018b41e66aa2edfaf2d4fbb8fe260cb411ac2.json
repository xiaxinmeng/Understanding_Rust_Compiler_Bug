{"sha": "fb7018b41e66aa2edfaf2d4fbb8fe260cb411ac2", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZiNzAxOGI0MWU2NmFhMmVkZmFmMmQ0ZmJiOGZlMjYwY2I0MTFhYzI=", "commit": {"author": {"name": "Joshua Nelson", "email": "jyn514@gmail.com", "date": "2021-04-16T03:06:32Z"}, "committer": {"name": "Joshua Nelson", "email": "jyn514@gmail.com", "date": "2021-04-27T16:30:39Z"}, "message": "Test that non_default_option is not the default option\n\nOtherwise the test is useless and does nothing. This caught 2 bugs in\nthe test suite.", "tree": {"sha": "f60f4b607f15cbbb6b742aac41a114adcc5c04cb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f60f4b607f15cbbb6b742aac41a114adcc5c04cb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fb7018b41e66aa2edfaf2d4fbb8fe260cb411ac2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fb7018b41e66aa2edfaf2d4fbb8fe260cb411ac2", "html_url": "https://github.com/rust-lang/rust/commit/fb7018b41e66aa2edfaf2d4fbb8fe260cb411ac2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fb7018b41e66aa2edfaf2d4fbb8fe260cb411ac2/comments", "author": {"login": "jyn514", "id": 23638587, "node_id": "MDQ6VXNlcjIzNjM4NTg3", "avatar_url": "https://avatars.githubusercontent.com/u/23638587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jyn514", "html_url": "https://github.com/jyn514", "followers_url": "https://api.github.com/users/jyn514/followers", "following_url": "https://api.github.com/users/jyn514/following{/other_user}", "gists_url": "https://api.github.com/users/jyn514/gists{/gist_id}", "starred_url": "https://api.github.com/users/jyn514/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jyn514/subscriptions", "organizations_url": "https://api.github.com/users/jyn514/orgs", "repos_url": "https://api.github.com/users/jyn514/repos", "events_url": "https://api.github.com/users/jyn514/events{/privacy}", "received_events_url": "https://api.github.com/users/jyn514/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jyn514", "id": 23638587, "node_id": "MDQ6VXNlcjIzNjM4NTg3", "avatar_url": "https://avatars.githubusercontent.com/u/23638587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jyn514", "html_url": "https://github.com/jyn514", "followers_url": "https://api.github.com/users/jyn514/followers", "following_url": "https://api.github.com/users/jyn514/following{/other_user}", "gists_url": "https://api.github.com/users/jyn514/gists{/gist_id}", "starred_url": "https://api.github.com/users/jyn514/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jyn514/subscriptions", "organizations_url": "https://api.github.com/users/jyn514/orgs", "repos_url": "https://api.github.com/users/jyn514/repos", "events_url": "https://api.github.com/users/jyn514/events{/privacy}", "received_events_url": "https://api.github.com/users/jyn514/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ae54ee650750f8d84492e61f09e22051ec41b763", "url": "https://api.github.com/repos/rust-lang/rust/commits/ae54ee650750f8d84492e61f09e22051ec41b763", "html_url": "https://github.com/rust-lang/rust/commit/ae54ee650750f8d84492e61f09e22051ec41b763"}], "stats": {"total": 16, "additions": 10, "deletions": 6}, "files": [{"sha": "5800fa173dd8044e900892f0aa4557cff8edd35b", "filename": "compiler/rustc_interface/src/tests.rs", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/fb7018b41e66aa2edfaf2d4fbb8fe260cb411ac2/compiler%2Frustc_interface%2Fsrc%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fb7018b41e66aa2edfaf2d4fbb8fe260cb411ac2/compiler%2Frustc_interface%2Fsrc%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_interface%2Fsrc%2Ftests.rs?ref=fb7018b41e66aa2edfaf2d4fbb8fe260cb411ac2", "patch": "@@ -391,6 +391,7 @@ fn test_codegen_options_tracking_hash() {\n \n     macro_rules! untracked {\n         ($name: ident, $non_default_value: expr) => {\n+            assert_ne!(opts.cg.$name, $non_default_value);\n             opts.cg.$name = $non_default_value;\n             assert_eq!(reference.dep_tracking_hash(), opts.dep_tracking_hash());\n         };\n@@ -416,6 +417,7 @@ fn test_codegen_options_tracking_hash() {\n     macro_rules! tracked {\n         ($name: ident, $non_default_value: expr) => {\n             opts = reference.clone();\n+            assert_ne!(opts.cg.$name, $non_default_value);\n             opts.cg.$name = $non_default_value;\n             assert_ne!(reference.dep_tracking_hash(), opts.dep_tracking_hash());\n         };\n@@ -461,6 +463,7 @@ fn test_debugging_options_tracking_hash() {\n \n     macro_rules! untracked {\n         ($name: ident, $non_default_value: expr) => {\n+            assert_ne!(opts.debugging_opts.$name, $non_default_value);\n             opts.debugging_opts.$name = $non_default_value;\n             assert_eq!(reference.dep_tracking_hash(), opts.dep_tracking_hash());\n         };\n@@ -471,7 +474,7 @@ fn test_debugging_options_tracking_hash() {\n     untracked!(ast_json, true);\n     untracked!(ast_json_noexpand, true);\n     untracked!(borrowck, String::from(\"other\"));\n-    untracked!(deduplicate_diagnostics, true);\n+    untracked!(deduplicate_diagnostics, false);\n     untracked!(dep_tasks, true);\n     untracked!(dont_buffer_diagnostics, true);\n     untracked!(dump_dep_graph, true);\n@@ -515,7 +518,7 @@ fn test_debugging_options_tracking_hash() {\n     untracked!(self_profile_events, Some(vec![String::new()]));\n     untracked!(span_debug, true);\n     untracked!(span_free_formats, true);\n-    untracked!(strip, Strip::None);\n+    untracked!(strip, Strip::Debuginfo);\n     untracked!(terminal_width, Some(80));\n     untracked!(threads, 99);\n     untracked!(time, true);\n@@ -532,6 +535,7 @@ fn test_debugging_options_tracking_hash() {\n     macro_rules! tracked {\n         ($name: ident, $non_default_value: expr) => {\n             opts = reference.clone();\n+            assert_ne!(opts.debugging_opts.$name, $non_default_value);\n             opts.debugging_opts.$name = $non_default_value;\n             assert_ne!(reference.dep_tracking_hash(), opts.dep_tracking_hash());\n         };"}, {"sha": "a7b9d03844c21a3b5842ab67ef7a5f8020a1006f", "filename": "compiler/rustc_session/src/config.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/fb7018b41e66aa2edfaf2d4fbb8fe260cb411ac2/compiler%2Frustc_session%2Fsrc%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fb7018b41e66aa2edfaf2d4fbb8fe260cb411ac2/compiler%2Frustc_session%2Fsrc%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_session%2Fsrc%2Fconfig.rs?ref=fb7018b41e66aa2edfaf2d4fbb8fe260cb411ac2", "patch": "@@ -156,7 +156,7 @@ pub enum InstrumentCoverage {\n     Off,\n }\n \n-#[derive(Clone, PartialEq, Hash)]\n+#[derive(Clone, PartialEq, Hash, Debug)]\n pub enum LinkerPluginLto {\n     LinkerPlugin(PathBuf),\n     LinkerPluginAuto,\n@@ -172,7 +172,7 @@ impl LinkerPluginLto {\n     }\n }\n \n-#[derive(Clone, PartialEq, Hash)]\n+#[derive(Clone, PartialEq, Hash, Debug)]\n pub enum SwitchWithOptPath {\n     Enabled(Option<PathBuf>),\n     Disabled,\n@@ -778,7 +778,7 @@ pub enum CrateType {\n \n impl_stable_hash_via_hash!(CrateType);\n \n-#[derive(Clone, Hash)]\n+#[derive(Clone, Hash, Debug, PartialEq, Eq)]\n pub enum Passes {\n     Some(Vec<String>),\n     All,"}, {"sha": "759110f68598b89c3621d2df44e116833cf684a2", "filename": "compiler/rustc_session/src/options.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fb7018b41e66aa2edfaf2d4fbb8fe260cb411ac2/compiler%2Frustc_session%2Fsrc%2Foptions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fb7018b41e66aa2edfaf2d4fbb8fe260cb411ac2/compiler%2Frustc_session%2Fsrc%2Foptions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_session%2Fsrc%2Foptions.rs?ref=fb7018b41e66aa2edfaf2d4fbb8fe260cb411ac2", "patch": "@@ -1220,7 +1220,7 @@ options! {DebuggingOptions, DebuggingSetter, basic_debugging_options,\n     // - compiler/rustc_interface/src/tests.rs\n }\n \n-#[derive(Clone, Hash)]\n+#[derive(Clone, Hash, PartialEq, Eq, Debug)]\n pub enum WasiExecModel {\n     Command,\n     Reactor,"}]}