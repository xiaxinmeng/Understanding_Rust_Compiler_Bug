{"sha": "78ea972b9ff4a2c3eaa0328f6fa8e7038e8ca9d1", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc4ZWE5NzJiOWZmNGEyYzNlYWEwMzI4ZjZmYThlNzAzOGU4Y2E5ZDE=", "commit": {"author": {"name": "Alan Somers", "email": "asomers@gmail.com", "date": "2016-04-06T05:40:59Z"}, "committer": {"name": "Alan Somers", "email": "asomers@gmail.com", "date": "2016-04-06T05:40:59Z"}, "message": "Remove accidental comment", "tree": {"sha": "a712fcc19e3078911851dbbbada5b18efda20959", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a712fcc19e3078911851dbbbada5b18efda20959"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/78ea972b9ff4a2c3eaa0328f6fa8e7038e8ca9d1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/78ea972b9ff4a2c3eaa0328f6fa8e7038e8ca9d1", "html_url": "https://github.com/rust-lang/rust/commit/78ea972b9ff4a2c3eaa0328f6fa8e7038e8ca9d1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/78ea972b9ff4a2c3eaa0328f6fa8e7038e8ca9d1/comments", "author": {"login": "asomers", "id": 129721, "node_id": "MDQ6VXNlcjEyOTcyMQ==", "avatar_url": "https://avatars.githubusercontent.com/u/129721?v=4", "gravatar_id": "", "url": "https://api.github.com/users/asomers", "html_url": "https://github.com/asomers", "followers_url": "https://api.github.com/users/asomers/followers", "following_url": "https://api.github.com/users/asomers/following{/other_user}", "gists_url": "https://api.github.com/users/asomers/gists{/gist_id}", "starred_url": "https://api.github.com/users/asomers/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/asomers/subscriptions", "organizations_url": "https://api.github.com/users/asomers/orgs", "repos_url": "https://api.github.com/users/asomers/repos", "events_url": "https://api.github.com/users/asomers/events{/privacy}", "received_events_url": "https://api.github.com/users/asomers/received_events", "type": "User", "site_admin": false}, "committer": {"login": "asomers", "id": 129721, "node_id": "MDQ6VXNlcjEyOTcyMQ==", "avatar_url": "https://avatars.githubusercontent.com/u/129721?v=4", "gravatar_id": "", "url": "https://api.github.com/users/asomers", "html_url": "https://github.com/asomers", "followers_url": "https://api.github.com/users/asomers/followers", "following_url": "https://api.github.com/users/asomers/following{/other_user}", "gists_url": "https://api.github.com/users/asomers/gists{/gist_id}", "starred_url": "https://api.github.com/users/asomers/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/asomers/subscriptions", "organizations_url": "https://api.github.com/users/asomers/orgs", "repos_url": "https://api.github.com/users/asomers/repos", "events_url": "https://api.github.com/users/asomers/events{/privacy}", "received_events_url": "https://api.github.com/users/asomers/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1e9ffb899195291c6682c244f2d485b6121a7dc4", "url": "https://api.github.com/repos/rust-lang/rust/commits/1e9ffb899195291c6682c244f2d485b6121a7dc4", "html_url": "https://github.com/rust-lang/rust/commit/1e9ffb899195291c6682c244f2d485b6121a7dc4"}], "stats": {"total": 1, "additions": 0, "deletions": 1}, "files": [{"sha": "cb34d1a5fbcd113b42a82bb8552b71764ea22960", "filename": "src/libstd/sys/unix/thread.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/78ea972b9ff4a2c3eaa0328f6fa8e7038e8ca9d1/src%2Flibstd%2Fsys%2Funix%2Fthread.rs", "raw_url": "https://github.com/rust-lang/rust/raw/78ea972b9ff4a2c3eaa0328f6fa8e7038e8ca9d1/src%2Flibstd%2Fsys%2Funix%2Fthread.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Funix%2Fthread.rs?ref=78ea972b9ff4a2c3eaa0328f6fa8e7038e8ca9d1", "patch": "@@ -304,7 +304,6 @@ pub mod guard {\n         #[cfg(not(target_os = \"freebsd\"))]\n             let e = libc::pthread_getattr_np(libc::pthread_self(), &mut attr);\n         if e == 0 {\n-        //if libc::pthread_getattr_np(libc::pthread_self(), &mut attr) == 0 {\n             let mut guardsize = 0;\n             assert_eq!(libc::pthread_attr_getguardsize(&attr, &mut guardsize), 0);\n             if guardsize == 0 {"}]}