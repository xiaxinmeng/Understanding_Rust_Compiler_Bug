{"sha": "dbeef1d6574a8b4fe033d1188643c4f90a95e043", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRiZWVmMWQ2NTc0YThiNGZlMDMzZDExODg2NDNjNGY5MGE5NWUwNDM=", "commit": {"author": {"name": "Daniel Micay", "email": "danielmicay@gmail.com", "date": "2013-01-23T17:45:12Z"}, "committer": {"name": "Daniel Micay", "email": "danielmicay@gmail.com", "date": "2013-01-23T19:25:06Z"}, "message": "remove the LinearMap get_copy method\n\nThis isn't simpler (or faster) than just doing the copy in the caller,\nand it doesn't work for types that can be cloned but not copied.", "tree": {"sha": "eeda1c17e9df75906bd991e22007be9e12b2b927", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/eeda1c17e9df75906bd991e22007be9e12b2b927"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/dbeef1d6574a8b4fe033d1188643c4f90a95e043", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/dbeef1d6574a8b4fe033d1188643c4f90a95e043", "html_url": "https://github.com/rust-lang/rust/commit/dbeef1d6574a8b4fe033d1188643c4f90a95e043", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/dbeef1d6574a8b4fe033d1188643c4f90a95e043/comments", "author": {"login": "thestinger", "id": 1505226, "node_id": "MDQ6VXNlcjE1MDUyMjY=", "avatar_url": "https://avatars.githubusercontent.com/u/1505226?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thestinger", "html_url": "https://github.com/thestinger", "followers_url": "https://api.github.com/users/thestinger/followers", "following_url": "https://api.github.com/users/thestinger/following{/other_user}", "gists_url": "https://api.github.com/users/thestinger/gists{/gist_id}", "starred_url": "https://api.github.com/users/thestinger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thestinger/subscriptions", "organizations_url": "https://api.github.com/users/thestinger/orgs", "repos_url": "https://api.github.com/users/thestinger/repos", "events_url": "https://api.github.com/users/thestinger/events{/privacy}", "received_events_url": "https://api.github.com/users/thestinger/received_events", "type": "User", "site_admin": false}, "committer": {"login": "thestinger", "id": 1505226, "node_id": "MDQ6VXNlcjE1MDUyMjY=", "avatar_url": "https://avatars.githubusercontent.com/u/1505226?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thestinger", "html_url": "https://github.com/thestinger", "followers_url": "https://api.github.com/users/thestinger/followers", "following_url": "https://api.github.com/users/thestinger/following{/other_user}", "gists_url": "https://api.github.com/users/thestinger/gists{/gist_id}", "starred_url": "https://api.github.com/users/thestinger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thestinger/subscriptions", "organizations_url": "https://api.github.com/users/thestinger/orgs", "repos_url": "https://api.github.com/users/thestinger/repos", "events_url": "https://api.github.com/users/thestinger/events{/privacy}", "received_events_url": "https://api.github.com/users/thestinger/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "45c9f6a0999fa69bb6c60f6b2c432f84dca7be87", "url": "https://api.github.com/repos/rust-lang/rust/commits/45c9f6a0999fa69bb6c60f6b2c432f84dca7be87", "html_url": "https://github.com/rust-lang/rust/commit/45c9f6a0999fa69bb6c60f6b2c432f84dca7be87"}], "stats": {"total": 26, "additions": 9, "deletions": 17}, "files": [{"sha": "c84dea0201042bfe3d80dda6112c34b44ee236c0", "filename": "src/libcore/hashmap.rs", "status": "modified", "additions": 9, "deletions": 17, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/dbeef1d6574a8b4fe033d1188643c4f90a95e043/src%2Flibcore%2Fhashmap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dbeef1d6574a8b4fe033d1188643c4f90a95e043/src%2Flibcore%2Fhashmap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fhashmap.rs?ref=dbeef1d6574a8b4fe033d1188643c4f90a95e043", "patch": "@@ -413,14 +413,6 @@ pub mod linear {\n                 }\n             }\n         }\n-\n-        pure fn get_copy(&const self, k: &K) -> V {\n-            let value = self.find_copy(k);\n-            if value.is_none() {\n-                fail fmt!(\"No entry found for key: %?\", k);\n-            }\n-            option::unwrap(move value)\n-        }\n     }\n \n     impl<K:Hash IterBytes Eq, V: Eq> LinearMap<K, V>: Eq {\n@@ -503,17 +495,17 @@ pub mod test {\n         let mut m = ~LinearMap();\n         assert m.insert(1, 2);\n         assert m.insert(2, 4);\n-        assert m.get_copy(&1) == 2;\n-        assert m.get_copy(&2) == 4;\n+        assert *m.get(&1) == 2;\n+        assert *m.get(&2) == 4;\n     }\n \n     #[test]\n     pub fn overwrite() {\n         let mut m = ~LinearMap();\n         assert m.insert(1, 2);\n-        assert m.get_copy(&1) == 2;\n+        assert *m.get(&1) == 2;\n         assert !m.insert(1, 3);\n-        assert m.get_copy(&1) == 3;\n+        assert *m.get(&1) == 3;\n     }\n \n     #[test]\n@@ -522,9 +514,9 @@ pub mod test {\n         assert m.insert(1, 2);\n         assert m.insert(5, 3);\n         assert m.insert(9, 4);\n-        assert m.get_copy(&9) == 4;\n-        assert m.get_copy(&5) == 3;\n-        assert m.get_copy(&1) == 2;\n+        assert *m.get(&9) == 4;\n+        assert *m.get(&5) == 3;\n+        assert *m.get(&1) == 2;\n     }\n \n     #[test]\n@@ -534,8 +526,8 @@ pub mod test {\n         assert m.insert(5, 3);\n         assert m.insert(9, 4);\n         assert m.remove(&1);\n-        assert m.get_copy(&9) == 4;\n-        assert m.get_copy(&5) == 3;\n+        assert *m.get(&9) == 4;\n+        assert *m.get(&5) == 3;\n     }\n \n     #[test]"}]}