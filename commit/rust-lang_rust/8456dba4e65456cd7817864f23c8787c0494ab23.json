{"sha": "8456dba4e65456cd7817864f23c8787c0494ab23", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg0NTZkYmE0ZTY1NDU2Y2Q3ODE3ODY0ZjIzYzg3ODdjMDQ5NGFiMjM=", "commit": {"author": {"name": "Nick Cameron", "email": "ncameron@mozilla.com", "date": "2015-04-22T06:29:54Z"}, "committer": {"name": "Nick Cameron", "email": "ncameron@mozilla.com", "date": "2015-04-22T06:29:54Z"}, "message": "Fix spans for predicates in where clauses", "tree": {"sha": "3340ea4ecb6f475bc45a45b0eaba8f2944e62099", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3340ea4ecb6f475bc45a45b0eaba8f2944e62099"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8456dba4e65456cd7817864f23c8787c0494ab23", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8456dba4e65456cd7817864f23c8787c0494ab23", "html_url": "https://github.com/rust-lang/rust/commit/8456dba4e65456cd7817864f23c8787c0494ab23", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8456dba4e65456cd7817864f23c8787c0494ab23/comments", "author": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5910dc0e8e396a4af7b948b83bab03f27b414a0e", "url": "https://api.github.com/repos/rust-lang/rust/commits/5910dc0e8e396a4af7b948b83bab03f27b414a0e", "html_url": "https://github.com/rust-lang/rust/commit/5910dc0e8e396a4af7b948b83bab03f27b414a0e"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "d9a560b0eac0686e03301cc9ac1e2cff9e94371e", "filename": "src/libsyntax/parse/parser.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/8456dba4e65456cd7817864f23c8787c0494ab23/src%2Flibsyntax%2Fparse%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8456dba4e65456cd7817864f23c8787c0494ab23/src%2Flibsyntax%2Fparse%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fparser.rs?ref=8456dba4e65456cd7817864f23c8787c0494ab23", "patch": "@@ -3882,7 +3882,7 @@ impl<'a> Parser<'a> {\n                     let bounds =\n                         try!(self.parse_lifetimes(token::BinOp(token::Plus)));\n \n-                    let hi = self.span.hi;\n+                    let hi = self.last_span.hi;\n                     let span = mk_sp(lo, hi);\n \n                     where_clause.predicates.push(ast::WherePredicate::RegionPredicate(\n@@ -3911,7 +3911,7 @@ impl<'a> Parser<'a> {\n \n                     if try!(self.eat(&token::Colon) ){\n                         let bounds = try!(self.parse_ty_param_bounds(BoundParsingMode::Bare));\n-                        let hi = self.span.hi;\n+                        let hi = self.last_span.hi;\n                         let span = mk_sp(lo, hi);\n \n                         if bounds.is_empty() {\n@@ -3931,7 +3931,7 @@ impl<'a> Parser<'a> {\n                         parsed_something = true;\n                     } else if try!(self.eat(&token::Eq) ){\n                         // let ty = try!(self.parse_ty_nopanic());\n-                        let hi = self.span.hi;\n+                        let hi = self.last_span.hi;\n                         let span = mk_sp(lo, hi);\n                         // where_clause.predicates.push(\n                         //     ast::WherePredicate::EqPredicate(ast::WhereEqPredicate {"}]}