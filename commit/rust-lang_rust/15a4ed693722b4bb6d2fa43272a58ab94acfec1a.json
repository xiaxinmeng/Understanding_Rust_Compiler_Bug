{"sha": "15a4ed693722b4bb6d2fa43272a58ab94acfec1a", "node_id": "C_kwDOAAsO6NoAKDE1YTRlZDY5MzcyMmI0YmI2ZDJmYTQzMjcyYTU4YWI5NGFjZmVjMWE", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2021-11-28T18:48:53Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2021-11-28T18:54:56Z"}, "message": "adjust const_eval_select documentation", "tree": {"sha": "8d246430b577f0417436d2e40a4d4ff8fde0965f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8d246430b577f0417436d2e40a4d4ff8fde0965f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/15a4ed693722b4bb6d2fa43272a58ab94acfec1a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/15a4ed693722b4bb6d2fa43272a58ab94acfec1a", "html_url": "https://github.com/rust-lang/rust/commit/15a4ed693722b4bb6d2fa43272a58ab94acfec1a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/15a4ed693722b4bb6d2fa43272a58ab94acfec1a/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e6d2de9483a27f846f003fc745713339a9122473", "url": "https://api.github.com/repos/rust-lang/rust/commits/e6d2de9483a27f846f003fc745713339a9122473", "html_url": "https://github.com/rust-lang/rust/commit/e6d2de9483a27f846f003fc745713339a9122473"}], "stats": {"total": 41, "additions": 31, "deletions": 10}, "files": [{"sha": "3814c4237f11466f746fba4d20b80d680ef2d834", "filename": "library/core/src/intrinsics.rs", "status": "modified", "additions": 31, "deletions": 10, "changes": 41, "blob_url": "https://github.com/rust-lang/rust/blob/15a4ed693722b4bb6d2fa43272a58ab94acfec1a/library%2Fcore%2Fsrc%2Fintrinsics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/15a4ed693722b4bb6d2fa43272a58ab94acfec1a/library%2Fcore%2Fsrc%2Fintrinsics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fintrinsics.rs?ref=15a4ed693722b4bb6d2fa43272a58ab94acfec1a", "patch": "@@ -2271,19 +2271,40 @@ pub unsafe fn write_bytes<T>(dst: *mut T, val: u8, count: usize) {\n ///\n /// # Safety\n ///\n-/// This intrinsic allows breaking [referential transparency] in `const fn`\n-/// and is therefore `unsafe`.\n+/// The two functions must behave observably equivalent. Safe code in other\n+/// crates may assume that calling a `const fn` at compile-time and at run-time\n+/// produces the same result. A function that produces a different result when\n+/// evaluated at run-time, or has any other observable side-effects, is\n+/// *unsound*.\n+///\n+/// Here is an example of how this could cause a problem:\n+/// ```no_run\n+/// #![feature(const_eval_select)]\n+/// use std::hint::unreachable_unchecked;\n+/// use std::intrinsics::const_eval_select;\n+///\n+/// // Crate A\n+/// pub const fn inconsistent() -> i32 {\n+///     fn runtime() -> i32 { 1 }\n+///     const fn compiletime() -> i32 { 2 }\n ///\n-/// Code that uses this intrinsic must be extremely careful to ensure that\n-/// `const fn`s remain referentially-transparent independently of when they\n-/// are evaluated.\n+///     unsafe {\n+//          // \u26a0 This code violates the required equivalence of `compiletime`\n+///         // and `runtime`.\n+///         const_eval_select((), compiletime, runtime)\n+///     }\n+/// }\n ///\n-/// The Rust compiler assumes that it is sound to replace a call to a `const\n-/// fn` with the result produced by evaluating it at compile-time. If\n-/// evaluating the function at run-time were to produce a different result,\n-/// or have any other observable side-effects, the behavior is undefined.\n+/// // Crate B\n+/// const X: i32 = inconsistent();\n+/// let x = inconsistent();\n+/// if x != X { unsafe { unreachable_unchecked(); }}\n+/// ```\n ///\n-/// [referential transparency]: https://en.wikipedia.org/wiki/Referential_transparency\n+/// This code causes Undefined Behavior when being run, since the\n+/// `unreachable_unchecked` is actually being reached. The bug is in *crate A*,\n+/// which violates the principle that a `const fn` must behave the same at\n+/// compile-time and at run-time. The unsafe code in crate B is fine.\n #[unstable(\n     feature = \"const_eval_select\",\n     issue = \"none\","}]}