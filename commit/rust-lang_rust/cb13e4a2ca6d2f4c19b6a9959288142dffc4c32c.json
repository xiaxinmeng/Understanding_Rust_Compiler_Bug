{"sha": "cb13e4a2ca6d2f4c19b6a9959288142dffc4c32c", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNiMTNlNGEyY2E2ZDJmNGMxOWI2YTk5NTkyODgxNDJkZmZjNGMzMmM=", "commit": {"author": {"name": "Toby Fleming", "email": "sourcecode@tobywf.com", "date": "2021-07-31T22:26:59Z"}, "committer": {"name": "Toby Fleming", "email": "sourcecode@tobywf.com", "date": "2021-08-01T21:43:10Z"}, "message": "Rust project supports proc-macro dependent crates", "tree": {"sha": "4f96815d1807809c2c7f84339e92935bfeb2ae56", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4f96815d1807809c2c7f84339e92935bfeb2ae56"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cb13e4a2ca6d2f4c19b6a9959288142dffc4c32c", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE2QGIyv0iGaSguakcAoK7PXqTUQIFAmEHFZ0ACgkQAoK7PXqT\nUQJsKhAAl4SMq117p9bZpwiC8Ri0fett0lOBoWTYUOOnaIXYUGeJDV7GUlMXY4pX\nyyy9ijk3xNcQFoQPpi3EafmNsj1/h3Ru1DzwA4sgmGlJGSWhoZmPoSY3UnmvF7ub\nq6lvTXKwGVCmlcqZgyQm1CCw8cNPdMYdiTTW255smDbok7bkr8K5mM1FWmplr10E\nO7qU2g004zd6vh4N4SO8K2H29P+65Ytjibm2Wpdeh5yYTZ6m2WBlmyht0b1nKJfJ\nTKU5w2Gvt2GKJYR31BA86WIKsidVbjWCGpDJT/IgWKDWCFIYsF6eX3xwJSeI4T68\nEPFua8xO1i/beptieJAs00cCsIAIjvqTIJlQpZd6XlOrSHSqAC3zyMZSBpF6c0Cw\nZHIK3SgOcZP0Z1VpoP7+OVTmy0hKZUjgXcQbu7sSWnmqMbQm67aJcfLiQwJOt/Dd\niDEmAb6JbH3g2tqN+0B1ls+fewHFmj3kxZqNeFflNuVmhenF8IB7PijsP1nLQXqd\noO4B73yCSjmAG0gqcIPjJ9fXxx9LsnPX5wKq/rbxdk7eJNpg9LtZ3U5zrhTPMqAE\nqR3iY6IFyc4YMfTHmzHDneWVQwJ655Zn7IRhnNPYdI9xC2u5tdRGIIYCpY0r9TyQ\nfkFZWC3Q8ZeL7bSYbcRtE9zFRT6ZwJYQUcVI7unHs8yNgdHdzh0=\n=LkBy\n-----END PGP SIGNATURE-----", "payload": "tree 4f96815d1807809c2c7f84339e92935bfeb2ae56\nparent df0936b4af7bd573dc8906b6dbdbf80ff40b75f3\nauthor Toby Fleming <sourcecode@tobywf.com> 1627770419 -0700\ncommitter Toby Fleming <sourcecode@tobywf.com> 1627854190 -0700\n\nRust project supports proc-macro dependent crates\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cb13e4a2ca6d2f4c19b6a9959288142dffc4c32c", "html_url": "https://github.com/rust-lang/rust/commit/cb13e4a2ca6d2f4c19b6a9959288142dffc4c32c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cb13e4a2ca6d2f4c19b6a9959288142dffc4c32c/comments", "author": {"login": "tobywf", "id": 2903454, "node_id": "MDQ6VXNlcjI5MDM0NTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/2903454?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tobywf", "html_url": "https://github.com/tobywf", "followers_url": "https://api.github.com/users/tobywf/followers", "following_url": "https://api.github.com/users/tobywf/following{/other_user}", "gists_url": "https://api.github.com/users/tobywf/gists{/gist_id}", "starred_url": "https://api.github.com/users/tobywf/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tobywf/subscriptions", "organizations_url": "https://api.github.com/users/tobywf/orgs", "repos_url": "https://api.github.com/users/tobywf/repos", "events_url": "https://api.github.com/users/tobywf/events{/privacy}", "received_events_url": "https://api.github.com/users/tobywf/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tobywf", "id": 2903454, "node_id": "MDQ6VXNlcjI5MDM0NTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/2903454?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tobywf", "html_url": "https://github.com/tobywf", "followers_url": "https://api.github.com/users/tobywf/followers", "following_url": "https://api.github.com/users/tobywf/following{/other_user}", "gists_url": "https://api.github.com/users/tobywf/gists{/gist_id}", "starred_url": "https://api.github.com/users/tobywf/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tobywf/subscriptions", "organizations_url": "https://api.github.com/users/tobywf/orgs", "repos_url": "https://api.github.com/users/tobywf/repos", "events_url": "https://api.github.com/users/tobywf/events{/privacy}", "received_events_url": "https://api.github.com/users/tobywf/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "df0936b4af7bd573dc8906b6dbdbf80ff40b75f3", "url": "https://api.github.com/repos/rust-lang/rust/commits/df0936b4af7bd573dc8906b6dbdbf80ff40b75f3", "html_url": "https://github.com/rust-lang/rust/commit/df0936b4af7bd573dc8906b6dbdbf80ff40b75f3"}], "stats": {"total": 20, "additions": 18, "deletions": 2}, "files": [{"sha": "5db1aa1b4f32a5133261cf8adee293a7e4bdc1a5", "filename": "crates/project_model/src/project_json.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/cb13e4a2ca6d2f4c19b6a9959288142dffc4c32c/crates%2Fproject_model%2Fsrc%2Fproject_json.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cb13e4a2ca6d2f4c19b6a9959288142dffc4c32c/crates%2Fproject_model%2Fsrc%2Fproject_json.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fproject_model%2Fsrc%2Fproject_json.rs?ref=cb13e4a2ca6d2f4c19b6a9959288142dffc4c32c", "patch": "@@ -37,6 +37,7 @@ pub struct Crate {\n     pub(crate) is_workspace_member: bool,\n     pub(crate) include: Vec<AbsPathBuf>,\n     pub(crate) exclude: Vec<AbsPathBuf>,\n+    pub(crate) is_proc_macro: bool,\n }\n \n impl ProjectJson {\n@@ -96,6 +97,7 @@ impl ProjectJson {\n                         is_workspace_member,\n                         include,\n                         exclude,\n+                        is_proc_macro: crate_data.is_proc_macro,\n                     }\n                 })\n                 .collect::<Vec<_>>(),\n@@ -135,6 +137,8 @@ struct CrateData {\n     proc_macro_dylib_path: Option<PathBuf>,\n     is_workspace_member: Option<bool>,\n     source: Option<CrateSource>,\n+    #[serde(default)]\n+    is_proc_macro: bool,\n }\n \n #[derive(Deserialize, Debug, Clone)]"}, {"sha": "bfc0f144aac2060d9a940cd0aab2759d878331eb", "filename": "crates/project_model/src/workspace.rs", "status": "modified", "additions": 11, "deletions": 1, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/cb13e4a2ca6d2f4c19b6a9959288142dffc4c32c/crates%2Fproject_model%2Fsrc%2Fworkspace.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cb13e4a2ca6d2f4c19b6a9959288142dffc4c32c/crates%2Fproject_model%2Fsrc%2Fworkspace.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fproject_model%2Fsrc%2Fworkspace.rs?ref=cb13e4a2ca6d2f4c19b6a9959288142dffc4c32c", "patch": "@@ -446,10 +446,20 @@ fn project_json_to_crate_graph(\n \n     for (from, krate) in project.crates() {\n         if let Some(&from) = crates.get(&from) {\n-            if let Some((public_deps, _proc_macro)) = &sysroot_deps {\n+            if let Some((public_deps, libproc_macro)) = &sysroot_deps {\n                 for (name, to) in public_deps.iter() {\n                     add_dep(&mut crate_graph, from, name.clone(), *to)\n                 }\n+                if krate.is_proc_macro {\n+                    if let Some(proc_macro) = libproc_macro {\n+                        add_dep(\n+                            &mut crate_graph,\n+                            from,\n+                            CrateName::new(\"proc_macro\").unwrap(),\n+                            *proc_macro,\n+                        );\n+                    }\n+                }\n             }\n \n             for dep in &krate.deps {"}, {"sha": "6f00da3178a0766e314f1147ea1dccec7ea6ea76", "filename": "docs/user/manual.adoc", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/cb13e4a2ca6d2f4c19b6a9959288142dffc4c32c/docs%2Fuser%2Fmanual.adoc", "raw_url": "https://github.com/rust-lang/rust/raw/cb13e4a2ca6d2f4c19b6a9959288142dffc4c32c/docs%2Fuser%2Fmanual.adoc", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/docs%2Fuser%2Fmanual.adoc?ref=cb13e4a2ca6d2f4c19b6a9959288142dffc4c32c", "patch": "@@ -578,6 +578,8 @@ interface Crate {\n     /// the `env!` macro\n     env: : { [key: string]: string; },\n \n+    /// Whether the crate is a proc-macro crate.\n+    is_proc_macro: bool;\n     /// For proc-macro crates, path to compiled\n     /// proc-macro (.so file).\n     proc_macro_dylib_path?: string;\n@@ -597,7 +599,7 @@ Specifically, the `roots` setup will be different eventually.\n \n There are three ways to feed `rust-project.json` to rust-analyzer:\n \n-* Place `rust-project.json` file at the root of the project, and rust-anlayzer will discover it.\n+* Place `rust-project.json` file at the root of the project, and rust-analyzer will discover it.\n * Specify `\"rust-analyzer.linkedProjects\": [ \"path/to/rust-project.json\" ]` in the settings (and make sure that your LSP client sends settings as a part of initialize request).\n * Specify `\"rust-analyzer.linkedProjects\": [ { \"roots\": [...], \"crates\": [...] }]` inline.\n "}]}