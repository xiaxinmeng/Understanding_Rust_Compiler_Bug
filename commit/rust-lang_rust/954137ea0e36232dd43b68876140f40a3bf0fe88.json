{"sha": "954137ea0e36232dd43b68876140f40a3bf0fe88", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk1NDEzN2VhMGUzNjIzMmRkNDNiNjg4NzYxNDBmNDBhM2JmMGZlODg=", "commit": {"author": {"name": "Yuki Okushi", "email": "jtitor@2k36.org", "date": "2021-07-28T09:28:17Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-07-28T09:28:17Z"}, "message": "Rollup merge of #87453 - ibraheemdev:i-68697, r=wesleywiser\n\nSuggest removing unnecessary &mut as help message\n\nCloses #68697", "tree": {"sha": "e56d45e6c4135c7433f3f2f9f0b00f7c6bff23f0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e56d45e6c4135c7433f3f2f9f0b00f7c6bff23f0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/954137ea0e36232dd43b68876140f40a3bf0fe88", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJhASMxCRBK7hj4Ov3rIwAAJMQIABEHC7kXne/NuUVdmHV9sgti\nj3meC3QYsIVWOKlPnPDtefk+AGeb1NjObAh7JS0XtL6jNwus4L9f2JRQicjplC+3\nPNVZFu8k8yIwc+VRpIWQ6oHS+NJOQqhRhDC5HQ5JXyaeyK/7c7MuOYOE46w83PFq\nTEkyvv0FNTPJWMaUH4YZWyysP7CpcbfclULH7KaRiUxOf5rmPZsGmXREIFhgpM20\nPXCQpfkU9fPeIMCqey9OxW1dmxeLj5eKmNJMPyMOyH9DDmolSL8Kn8A+ybvIZX/O\nNz4aWd/7+mgkbug5WfgQMvWkx4O1dquzE+amHDl8NulmGooKgQ+jJZef8v/CMwQ=\n=uNFY\n-----END PGP SIGNATURE-----\n", "payload": "tree e56d45e6c4135c7433f3f2f9f0b00f7c6bff23f0\nparent 287a252c0bcd76b7d833f1314a6d6b182fcfee21\nparent df5e5168d862e5d5d013f53f9c569c7b5514dd8c\nauthor Yuki Okushi <jtitor@2k36.org> 1627464497 +0900\ncommitter GitHub <noreply@github.com> 1627464497 +0900\n\nRollup merge of #87453 - ibraheemdev:i-68697, r=wesleywiser\n\nSuggest removing unnecessary &mut as help message\n\nCloses #68697\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/954137ea0e36232dd43b68876140f40a3bf0fe88", "html_url": "https://github.com/rust-lang/rust/commit/954137ea0e36232dd43b68876140f40a3bf0fe88", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/954137ea0e36232dd43b68876140f40a3bf0fe88/comments", "author": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "287a252c0bcd76b7d833f1314a6d6b182fcfee21", "url": "https://api.github.com/repos/rust-lang/rust/commits/287a252c0bcd76b7d833f1314a6d6b182fcfee21", "html_url": "https://github.com/rust-lang/rust/commit/287a252c0bcd76b7d833f1314a6d6b182fcfee21"}, {"sha": "df5e5168d862e5d5d013f53f9c569c7b5514dd8c", "url": "https://api.github.com/repos/rust-lang/rust/commits/df5e5168d862e5d5d013f53f9c569c7b5514dd8c", "html_url": "https://github.com/rust-lang/rust/commit/df5e5168d862e5d5d013f53f9c569c7b5514dd8c"}], "stats": {"total": 70, "additions": 46, "deletions": 24}, "files": [{"sha": "f08208a1214b843a60a16719bece72ed1c3176a6", "filename": "compiler/rustc_mir/src/borrow_check/diagnostics/mutability_errors.rs", "status": "modified", "additions": 12, "deletions": 2, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/954137ea0e36232dd43b68876140f40a3bf0fe88/compiler%2Frustc_mir%2Fsrc%2Fborrow_check%2Fdiagnostics%2Fmutability_errors.rs", "raw_url": "https://github.com/rust-lang/rust/raw/954137ea0e36232dd43b68876140f40a3bf0fe88/compiler%2Frustc_mir%2Fsrc%2Fborrow_check%2Fdiagnostics%2Fmutability_errors.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir%2Fsrc%2Fborrow_check%2Fdiagnostics%2Fmutability_errors.rs?ref=954137ea0e36232dd43b68876140f40a3bf0fe88", "patch": "@@ -242,7 +242,12 @@ impl<'a, 'tcx> MirBorrowckCtxt<'a, 'tcx> {\n                     .unwrap_or(false) =>\n             {\n                 err.span_label(span, format!(\"cannot {ACT}\", ACT = act));\n-                err.span_label(span, \"try removing `&mut` here\");\n+                err.span_suggestion(\n+                    span,\n+                    \"try removing `&mut` here\",\n+                    String::new(),\n+                    Applicability::MaybeIncorrect,\n+                );\n             }\n \n             // We want to suggest users use `let mut` for local (user\n@@ -324,7 +329,12 @@ impl<'a, 'tcx> MirBorrowckCtxt<'a, 'tcx> {\n                 } =>\n             {\n                 err.span_label(span, format!(\"cannot {ACT}\", ACT = act));\n-                err.span_label(span, \"try removing `&mut` here\");\n+                err.span_suggestion(\n+                    span,\n+                    \"try removing `&mut` here\",\n+                    String::new(),\n+                    Applicability::MaybeIncorrect,\n+                );\n             }\n \n             PlaceRef { local, projection: [ProjectionElem::Deref] }"}, {"sha": "fff5015cdc1c987bf1dd6625ec6dd093c10a6d40", "filename": "src/test/ui/borrowck/issue-33819.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/954137ea0e36232dd43b68876140f40a3bf0fe88/src%2Ftest%2Fui%2Fborrowck%2Fissue-33819.rs", "raw_url": "https://github.com/rust-lang/rust/raw/954137ea0e36232dd43b68876140f40a3bf0fe88/src%2Ftest%2Fui%2Fborrowck%2Fissue-33819.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fborrowck%2Fissue-33819.rs?ref=954137ea0e36232dd43b68876140f40a3bf0fe88", "patch": "@@ -3,6 +3,7 @@ fn main() {\n     match op {\n         Some(ref v) => { let a = &mut v; },\n         //~^ ERROR cannot borrow `v` as mutable, as it is not declared as mutable\n+        //~| HELP try removing `&mut` here\n         None => {},\n     }\n }"}, {"sha": "f77fdbf2b6bfe914947588fbdc77f28b09467980", "filename": "src/test/ui/borrowck/issue-33819.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/954137ea0e36232dd43b68876140f40a3bf0fe88/src%2Ftest%2Fui%2Fborrowck%2Fissue-33819.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/954137ea0e36232dd43b68876140f40a3bf0fe88/src%2Ftest%2Fui%2Fborrowck%2Fissue-33819.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fborrowck%2Fissue-33819.stderr?ref=954137ea0e36232dd43b68876140f40a3bf0fe88", "patch": "@@ -5,7 +5,7 @@ LL |         Some(ref v) => { let a = &mut v; },\n    |                                  ^^^^^^\n    |                                  |\n    |                                  cannot borrow as mutable\n-   |                                  try removing `&mut` here\n+   |                                  help: try removing `&mut` here\n \n error: aborting due to previous error\n "}, {"sha": "3f092846dd4c03b9198a059d07052e8868a25630", "filename": "src/test/ui/borrowck/mut-borrow-of-mut-ref.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/954137ea0e36232dd43b68876140f40a3bf0fe88/src%2Ftest%2Fui%2Fborrowck%2Fmut-borrow-of-mut-ref.rs", "raw_url": "https://github.com/rust-lang/rust/raw/954137ea0e36232dd43b68876140f40a3bf0fe88/src%2Ftest%2Fui%2Fborrowck%2Fmut-borrow-of-mut-ref.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fborrowck%2Fmut-borrow-of-mut-ref.rs?ref=954137ea0e36232dd43b68876140f40a3bf0fe88", "patch": "@@ -4,8 +4,10 @@\n pub fn f(b: &mut i32) {\n     g(&mut b);\n     //~^ ERROR cannot borrow\n+    //~| HELP try removing `&mut` here\n     g(&mut &mut b);\n     //~^ ERROR cannot borrow\n+    //~| HELP try removing `&mut` here\n }\n \n pub fn g(_: &mut i32) {}"}, {"sha": "cb7355b2335965aa9490f0af4a25861a2a0f8302", "filename": "src/test/ui/borrowck/mut-borrow-of-mut-ref.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/954137ea0e36232dd43b68876140f40a3bf0fe88/src%2Ftest%2Fui%2Fborrowck%2Fmut-borrow-of-mut-ref.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/954137ea0e36232dd43b68876140f40a3bf0fe88/src%2Ftest%2Fui%2Fborrowck%2Fmut-borrow-of-mut-ref.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fborrowck%2Fmut-borrow-of-mut-ref.stderr?ref=954137ea0e36232dd43b68876140f40a3bf0fe88", "patch": "@@ -5,16 +5,16 @@ LL |     g(&mut b);\n    |       ^^^^^^\n    |       |\n    |       cannot borrow as mutable\n-   |       try removing `&mut` here\n+   |       help: try removing `&mut` here\n \n error[E0596]: cannot borrow `b` as mutable, as it is not declared as mutable\n-  --> $DIR/mut-borrow-of-mut-ref.rs:7:12\n+  --> $DIR/mut-borrow-of-mut-ref.rs:8:12\n    |\n LL |     g(&mut &mut b);\n    |            ^^^^^^\n    |            |\n    |            cannot borrow as mutable\n-   |            try removing `&mut` here\n+   |            help: try removing `&mut` here\n \n error: aborting due to 2 previous errors\n "}, {"sha": "95ccf2a4c89931f533bd45f488c6068e4389dfd7", "filename": "src/test/ui/did_you_mean/issue-31424.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/954137ea0e36232dd43b68876140f40a3bf0fe88/src%2Ftest%2Fui%2Fdid_you_mean%2Fissue-31424.rs", "raw_url": "https://github.com/rust-lang/rust/raw/954137ea0e36232dd43b68876140f40a3bf0fe88/src%2Ftest%2Fui%2Fdid_you_mean%2Fissue-31424.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fdid_you_mean%2Fissue-31424.rs?ref=954137ea0e36232dd43b68876140f40a3bf0fe88", "patch": "@@ -5,13 +5,16 @@ struct Struct;\n impl Struct {\n     fn foo(&mut self) {\n         (&mut self).bar(); //~ ERROR cannot borrow\n+        //~^ HELP try removing `&mut` here\n     }\n \n     // In this case we could keep the suggestion, but to distinguish the\n     // two cases is pretty hard. It's an obscure case anyway.\n     fn bar(self: &mut Self) {\n         //~^ WARN function cannot return without recursing\n+        //~^^ HELP a `loop` may express intention better if this is on purpose\n         (&mut self).bar(); //~ ERROR cannot borrow\n+        //~^ HELP try removing `&mut` here\n     }\n }\n "}, {"sha": "838e81043db7bbfb72a46339f99c442b21839862", "filename": "src/test/ui/did_you_mean/issue-31424.stderr", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/954137ea0e36232dd43b68876140f40a3bf0fe88/src%2Ftest%2Fui%2Fdid_you_mean%2Fissue-31424.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/954137ea0e36232dd43b68876140f40a3bf0fe88/src%2Ftest%2Fui%2Fdid_you_mean%2Fissue-31424.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fdid_you_mean%2Fissue-31424.stderr?ref=954137ea0e36232dd43b68876140f40a3bf0fe88", "patch": "@@ -5,28 +5,28 @@ LL |         (&mut self).bar();\n    |         ^^^^^^^^^^^\n    |         |\n    |         cannot borrow as mutable\n-   |         try removing `&mut` here\n+   |         help: try removing `&mut` here\n \n warning: function cannot return without recursing\n-  --> $DIR/issue-31424.rs:12:5\n+  --> $DIR/issue-31424.rs:13:5\n    |\n LL |     fn bar(self: &mut Self) {\n    |     ^^^^^^^^^^^^^^^^^^^^^^^ cannot return without recursing\n-LL |\n+...\n LL |         (&mut self).bar();\n    |         ----------------- recursive call site\n    |\n    = note: `#[warn(unconditional_recursion)]` on by default\n    = help: a `loop` may express intention better if this is on purpose\n \n error[E0596]: cannot borrow `self` as mutable, as it is not declared as mutable\n-  --> $DIR/issue-31424.rs:14:9\n+  --> $DIR/issue-31424.rs:16:9\n    |\n LL |         (&mut self).bar();\n    |         ^^^^^^^^^^^\n    |         |\n    |         cannot borrow as mutable\n-   |         try removing `&mut` here\n+   |         help: try removing `&mut` here\n \n error: aborting due to 2 previous errors; 1 warning emitted\n "}, {"sha": "53516f4f24713905d8b025bf963697ac01137e39", "filename": "src/test/ui/did_you_mean/issue-34126.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/954137ea0e36232dd43b68876140f40a3bf0fe88/src%2Ftest%2Fui%2Fdid_you_mean%2Fissue-34126.rs", "raw_url": "https://github.com/rust-lang/rust/raw/954137ea0e36232dd43b68876140f40a3bf0fe88/src%2Ftest%2Fui%2Fdid_you_mean%2Fissue-34126.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fdid_you_mean%2Fissue-34126.rs?ref=954137ea0e36232dd43b68876140f40a3bf0fe88", "patch": "@@ -5,6 +5,7 @@ impl Z {\n     fn start(&mut self) {\n         self.run(&mut self); //~ ERROR cannot borrow\n         //~| ERROR cannot borrow\n+        //~| HELP try removing `&mut` here\n     }\n }\n "}, {"sha": "669684fb3ddd743f2c4859b91cd8bb779c7f259b", "filename": "src/test/ui/did_you_mean/issue-34126.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/954137ea0e36232dd43b68876140f40a3bf0fe88/src%2Ftest%2Fui%2Fdid_you_mean%2Fissue-34126.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/954137ea0e36232dd43b68876140f40a3bf0fe88/src%2Ftest%2Fui%2Fdid_you_mean%2Fissue-34126.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fdid_you_mean%2Fissue-34126.stderr?ref=954137ea0e36232dd43b68876140f40a3bf0fe88", "patch": "@@ -5,7 +5,7 @@ LL |         self.run(&mut self);\n    |                  ^^^^^^^^^\n    |                  |\n    |                  cannot borrow as mutable\n-   |                  try removing `&mut` here\n+   |                  help: try removing `&mut` here\n \n error[E0502]: cannot borrow `self` as mutable because it is also borrowed as immutable\n   --> $DIR/issue-34126.rs:6:18"}, {"sha": "e89eda33f8c931e29abae38b181b0f0f49693fbb", "filename": "src/test/ui/did_you_mean/issue-34337.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/954137ea0e36232dd43b68876140f40a3bf0fe88/src%2Ftest%2Fui%2Fdid_you_mean%2Fissue-34337.rs", "raw_url": "https://github.com/rust-lang/rust/raw/954137ea0e36232dd43b68876140f40a3bf0fe88/src%2Ftest%2Fui%2Fdid_you_mean%2Fissue-34337.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fdid_you_mean%2Fissue-34337.rs?ref=954137ea0e36232dd43b68876140f40a3bf0fe88", "patch": "@@ -4,4 +4,5 @@ fn main() {\n     let mut v: Vec<String> = Vec::new();\n     let ref mut key = v[0];\n     get(&mut key); //~ ERROR cannot borrow\n+    //~| HELP try removing `&mut` here\n }"}, {"sha": "1f18ea8923bdafd1a89b88f390671e1f21291ba3", "filename": "src/test/ui/did_you_mean/issue-34337.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/954137ea0e36232dd43b68876140f40a3bf0fe88/src%2Ftest%2Fui%2Fdid_you_mean%2Fissue-34337.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/954137ea0e36232dd43b68876140f40a3bf0fe88/src%2Ftest%2Fui%2Fdid_you_mean%2Fissue-34337.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fdid_you_mean%2Fissue-34337.stderr?ref=954137ea0e36232dd43b68876140f40a3bf0fe88", "patch": "@@ -5,7 +5,7 @@ LL |     get(&mut key);\n    |         ^^^^^^^^\n    |         |\n    |         cannot borrow as mutable\n-   |         try removing `&mut` here\n+   |         help: try removing `&mut` here\n \n error: aborting due to previous error\n "}, {"sha": "6a19d85ff79f9a1af4c7d1335a5eb8b3348e62a3", "filename": "src/test/ui/did_you_mean/issue-37139.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/954137ea0e36232dd43b68876140f40a3bf0fe88/src%2Ftest%2Fui%2Fdid_you_mean%2Fissue-37139.rs", "raw_url": "https://github.com/rust-lang/rust/raw/954137ea0e36232dd43b68876140f40a3bf0fe88/src%2Ftest%2Fui%2Fdid_you_mean%2Fissue-37139.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fdid_you_mean%2Fissue-37139.rs?ref=954137ea0e36232dd43b68876140f40a3bf0fe88", "patch": "@@ -10,6 +10,7 @@ fn main() {\n     match x {\n         TestEnum::Item(ref mut x) => {\n             test(&mut x); //~ ERROR cannot borrow `x` as mutable, as it is not declared as mutable\n+            //~| HELP try removing `&mut` here\n         }\n     }\n }"}, {"sha": "dc1bdfaaed568effd5613e81985395daf1ae4832", "filename": "src/test/ui/did_you_mean/issue-37139.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/954137ea0e36232dd43b68876140f40a3bf0fe88/src%2Ftest%2Fui%2Fdid_you_mean%2Fissue-37139.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/954137ea0e36232dd43b68876140f40a3bf0fe88/src%2Ftest%2Fui%2Fdid_you_mean%2Fissue-37139.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fdid_you_mean%2Fissue-37139.stderr?ref=954137ea0e36232dd43b68876140f40a3bf0fe88", "patch": "@@ -5,7 +5,7 @@ LL |             test(&mut x);\n    |                  ^^^^^^\n    |                  |\n    |                  cannot borrow as mutable\n-   |                  try removing `&mut` here\n+   |                  help: try removing `&mut` here\n \n error: aborting due to previous error\n "}, {"sha": "836587d93b84b78f1ca066d728bb33be5ffd674b", "filename": "src/test/ui/nll/issue-51191.rs", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/954137ea0e36232dd43b68876140f40a3bf0fe88/src%2Ftest%2Fui%2Fnll%2Fissue-51191.rs", "raw_url": "https://github.com/rust-lang/rust/raw/954137ea0e36232dd43b68876140f40a3bf0fe88/src%2Ftest%2Fui%2Fnll%2Fissue-51191.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fissue-51191.rs?ref=954137ea0e36232dd43b68876140f40a3bf0fe88", "patch": "@@ -3,11 +3,13 @@ struct Struct;\n impl Struct {\n     fn bar(self: &mut Self) {\n         //~^ WARN function cannot return without recursing\n+        //~^^ HELP a `loop` may express intention better if this is on purpose\n         (&mut self).bar();\n         //~^ ERROR cannot borrow `self` as mutable, as it is not declared as mutable [E0596]\n+        //~^^ HELP try removing `&mut` here\n     }\n \n-    fn imm(self) {\n+    fn imm(self) { //~ HELP consider changing this to be mutable\n         (&mut self).bar();\n         //~^ ERROR cannot borrow `self` as mutable, as it is not declared as mutable [E0596]\n     }\n@@ -25,7 +27,8 @@ impl Struct {\n     fn mtblref(&mut self) {\n         (&mut self).bar();\n         //~^ ERROR cannot borrow `self` as mutable, as it is not declared as mutable [E0596]\n+        //~^^ HELP try removing `&mut` here\n     }\n }\n \n-fn main () {}\n+fn main() {}"}, {"sha": "450993425e26b99fe8cf9cc11d423745941d74b6", "filename": "src/test/ui/nll/issue-51191.stderr", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/954137ea0e36232dd43b68876140f40a3bf0fe88/src%2Ftest%2Fui%2Fnll%2Fissue-51191.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/954137ea0e36232dd43b68876140f40a3bf0fe88/src%2Ftest%2Fui%2Fnll%2Fissue-51191.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fissue-51191.stderr?ref=954137ea0e36232dd43b68876140f40a3bf0fe88", "patch": "@@ -3,50 +3,50 @@ warning: function cannot return without recursing\n    |\n LL |     fn bar(self: &mut Self) {\n    |     ^^^^^^^^^^^^^^^^^^^^^^^ cannot return without recursing\n-LL |\n+...\n LL |         (&mut self).bar();\n    |         ----------------- recursive call site\n    |\n    = note: `#[warn(unconditional_recursion)]` on by default\n    = help: a `loop` may express intention better if this is on purpose\n \n error[E0596]: cannot borrow `self` as mutable, as it is not declared as mutable\n-  --> $DIR/issue-51191.rs:6:9\n+  --> $DIR/issue-51191.rs:7:9\n    |\n LL |         (&mut self).bar();\n    |         ^^^^^^^^^^^\n    |         |\n    |         cannot borrow as mutable\n-   |         try removing `&mut` here\n+   |         help: try removing `&mut` here\n \n error[E0596]: cannot borrow `self` as mutable, as it is not declared as mutable\n-  --> $DIR/issue-51191.rs:11:9\n+  --> $DIR/issue-51191.rs:13:9\n    |\n LL |     fn imm(self) {\n    |            ---- help: consider changing this to be mutable: `mut self`\n LL |         (&mut self).bar();\n    |         ^^^^^^^^^^^ cannot borrow as mutable\n \n error[E0596]: cannot borrow `self` as mutable, as it is not declared as mutable\n-  --> $DIR/issue-51191.rs:20:9\n+  --> $DIR/issue-51191.rs:22:9\n    |\n LL |         (&mut self).bar();\n    |         ^^^^^^^^^^^ cannot borrow as mutable\n \n error[E0596]: cannot borrow data in a `&` reference as mutable\n-  --> $DIR/issue-51191.rs:20:9\n+  --> $DIR/issue-51191.rs:22:9\n    |\n LL |         (&mut self).bar();\n    |         ^^^^^^^^^^^ cannot borrow as mutable\n \n error[E0596]: cannot borrow `self` as mutable, as it is not declared as mutable\n-  --> $DIR/issue-51191.rs:26:9\n+  --> $DIR/issue-51191.rs:28:9\n    |\n LL |         (&mut self).bar();\n    |         ^^^^^^^^^^^\n    |         |\n    |         cannot borrow as mutable\n-   |         try removing `&mut` here\n+   |         help: try removing `&mut` here\n \n error: aborting due to 5 previous errors; 1 warning emitted\n "}]}