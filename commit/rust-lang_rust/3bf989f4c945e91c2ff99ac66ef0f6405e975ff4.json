{"sha": "3bf989f4c945e91c2ff99ac66ef0f6405e975ff4", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNiZjk4OWY0Yzk0NWU5MWMyZmY5OWFjNjZlZjBmNjQwNWU5NzVmZjQ=", "commit": {"author": {"name": "Stefan Schindler", "email": "dns2utf8@estada.ch", "date": "2018-02-16T09:30:31Z"}, "committer": {"name": "Stefan Schindler", "email": "dns2utf8@estada.ch", "date": "2018-02-16T09:30:31Z"}, "message": "Add link to yield_now", "tree": {"sha": "bd18d52f58e567ccd83a6ba3c5b6d16cb2a65fb3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bd18d52f58e567ccd83a6ba3c5b6d16cb2a65fb3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3bf989f4c945e91c2ff99ac66ef0f6405e975ff4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3bf989f4c945e91c2ff99ac66ef0f6405e975ff4", "html_url": "https://github.com/rust-lang/rust/commit/3bf989f4c945e91c2ff99ac66ef0f6405e975ff4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3bf989f4c945e91c2ff99ac66ef0f6405e975ff4/comments", "author": {"login": "dns2utf8", "id": 739070, "node_id": "MDQ6VXNlcjczOTA3MA==", "avatar_url": "https://avatars.githubusercontent.com/u/739070?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dns2utf8", "html_url": "https://github.com/dns2utf8", "followers_url": "https://api.github.com/users/dns2utf8/followers", "following_url": "https://api.github.com/users/dns2utf8/following{/other_user}", "gists_url": "https://api.github.com/users/dns2utf8/gists{/gist_id}", "starred_url": "https://api.github.com/users/dns2utf8/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dns2utf8/subscriptions", "organizations_url": "https://api.github.com/users/dns2utf8/orgs", "repos_url": "https://api.github.com/users/dns2utf8/repos", "events_url": "https://api.github.com/users/dns2utf8/events{/privacy}", "received_events_url": "https://api.github.com/users/dns2utf8/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dns2utf8", "id": 739070, "node_id": "MDQ6VXNlcjczOTA3MA==", "avatar_url": "https://avatars.githubusercontent.com/u/739070?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dns2utf8", "html_url": "https://github.com/dns2utf8", "followers_url": "https://api.github.com/users/dns2utf8/followers", "following_url": "https://api.github.com/users/dns2utf8/following{/other_user}", "gists_url": "https://api.github.com/users/dns2utf8/gists{/gist_id}", "starred_url": "https://api.github.com/users/dns2utf8/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dns2utf8/subscriptions", "organizations_url": "https://api.github.com/users/dns2utf8/orgs", "repos_url": "https://api.github.com/users/dns2utf8/repos", "events_url": "https://api.github.com/users/dns2utf8/events{/privacy}", "received_events_url": "https://api.github.com/users/dns2utf8/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5570cdcc9e7da0cca84e394e872bc16df2c6dc50", "url": "https://api.github.com/repos/rust-lang/rust/commits/5570cdcc9e7da0cca84e394e872bc16df2c6dc50", "html_url": "https://github.com/rust-lang/rust/commit/5570cdcc9e7da0cca84e394e872bc16df2c6dc50"}], "stats": {"total": 7, "additions": 4, "deletions": 3}, "files": [{"sha": "63fb6e437e4cc3cc27a1bf6a0d1355dba866d267", "filename": "src/libcore/sync/atomic.rs", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/3bf989f4c945e91c2ff99ac66ef0f6405e975ff4/src%2Flibcore%2Fsync%2Fatomic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3bf989f4c945e91c2ff99ac66ef0f6405e975ff4/src%2Flibcore%2Fsync%2Fatomic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fsync%2Fatomic.rs?ref=3bf989f4c945e91c2ff99ac66ef0f6405e975ff4", "patch": "@@ -97,9 +97,10 @@ use fmt;\n /// Save power or switch hyperthreads in a busy-wait spin-loop.\n ///\n /// This function is deliberately more primitive than\n-/// `std::thread::yield_now` and does not directly yield to the\n-/// system's scheduler.  In some cases it might be useful to use a\n-/// combination of both functions.  Careful benchmarking is advised.\n+/// [`std::thread::yield_now`](../../thread/fn.yield_now.html) and\n+/// does not directly yield to the system's scheduler.\n+/// In some cases it might be useful to use a combination of both functions.\n+/// Careful benchmarking is advised.\n ///\n /// On some platforms this function may not do anything at all.\n #[inline]"}]}