{"sha": "0129628a0f497834a544fa981078b43321c9020a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjAxMjk2MjhhMGY0OTc4MzRhNTQ0ZmE5ODEwNzhiNDMzMjFjOTAyMGE=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2021-04-02T17:00:57Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-04-02T17:00:57Z"}, "message": "Merge #8297\n\n8297: Only populate prelude for crate-level DefMaps r=jonas-schievink a=jonas-schievink\n\nFixes https://github.com/rust-analyzer/rust-analyzer/issues/8281\r\n\r\nbors r+\n\nCo-authored-by: Jonas Schievink <jonasschievink@gmail.com>", "tree": {"sha": "0388586d9388710da07d45ba4e1d190c4194da9a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0388586d9388710da07d45ba4e1d190c4194da9a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0129628a0f497834a544fa981078b43321c9020a", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJgZ03JCRBK7hj4Ov3rIwAAdHIIAJWhV1lwrYXMdIVB6/Njd/su\nkd23Xxe+5iNSPH8SrMrKUjsep3ru2oQo3c4uQ1iEp2YST0Y9eZeq7GmsgKmS+J6L\nynMGZm6Axmd384jEXsHr2ua11vrI9IaFvrN7n+E4jdf5JKHq+iygP+It4SI+tWCj\nUqhOEZCUQhUE1dnd2jo8VxV2tqposdhK1rNOQAj091uaV8bQ/TEiPal1XwncePwp\nDfDp87XxKekAZAFMdxPFUT+2/+2vgIfhbQHp1roiAZfHUwqrGF9eaPGjQw6pNLJk\nAi9qWoPKAil6q7ZtAFPrUBacZZZzQw2MiKbd/5UACFLCN73tNu1ujGddP5x6SrY=\n=hN0p\n-----END PGP SIGNATURE-----\n", "payload": "tree 0388586d9388710da07d45ba4e1d190c4194da9a\nparent f4d56989b657b15aec6675cf1ba697e3f87eb088\nparent 7ceaba21dff56ea46f2327895f34a00dc558464d\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1617382857 +0000\ncommitter GitHub <noreply@github.com> 1617382857 +0000\n\nMerge #8297\n\n8297: Only populate prelude for crate-level DefMaps r=jonas-schievink a=jonas-schievink\n\nFixes https://github.com/rust-analyzer/rust-analyzer/issues/8281\r\n\r\nbors r+\n\nCo-authored-by: Jonas Schievink <jonasschievink@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0129628a0f497834a544fa981078b43321c9020a", "html_url": "https://github.com/rust-lang/rust/commit/0129628a0f497834a544fa981078b43321c9020a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0129628a0f497834a544fa981078b43321c9020a/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f4d56989b657b15aec6675cf1ba697e3f87eb088", "url": "https://api.github.com/repos/rust-lang/rust/commits/f4d56989b657b15aec6675cf1ba697e3f87eb088", "html_url": "https://github.com/rust-lang/rust/commit/f4d56989b657b15aec6675cf1ba697e3f87eb088"}, {"sha": "7ceaba21dff56ea46f2327895f34a00dc558464d", "url": "https://api.github.com/repos/rust-lang/rust/commits/7ceaba21dff56ea46f2327895f34a00dc558464d", "html_url": "https://github.com/rust-lang/rust/commit/7ceaba21dff56ea46f2327895f34a00dc558464d"}], "stats": {"total": 72, "additions": 58, "deletions": 14}, "files": [{"sha": "6f946a6dd9a9e12f059a74ec2d430232591934f0", "filename": "crates/hir_def/src/nameres/collector.rs", "status": "modified", "additions": 16, "deletions": 14, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/0129628a0f497834a544fa981078b43321c9020a/crates%2Fhir_def%2Fsrc%2Fnameres%2Fcollector.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0129628a0f497834a544fa981078b43321c9020a/crates%2Fhir_def%2Fsrc%2Fnameres%2Fcollector.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_def%2Fsrc%2Fnameres%2Fcollector.rs?ref=0129628a0f497834a544fa981078b43321c9020a", "patch": "@@ -54,20 +54,22 @@ pub(super) fn collect_defs(\n ) -> DefMap {\n     let crate_graph = db.crate_graph();\n \n-    // populate external prelude\n-    for dep in &crate_graph[def_map.krate].dependencies {\n-        log::debug!(\"crate dep {:?} -> {:?}\", dep.name, dep.crate_id);\n-        let dep_def_map = db.crate_def_map(dep.crate_id);\n-        def_map\n-            .extern_prelude\n-            .insert(dep.as_name(), dep_def_map.module_id(dep_def_map.root).into());\n-\n-        // look for the prelude\n-        // If the dependency defines a prelude, we overwrite an already defined\n-        // prelude. This is necessary to import the \"std\" prelude if a crate\n-        // depends on both \"core\" and \"std\".\n-        if dep_def_map.prelude.is_some() {\n-            def_map.prelude = dep_def_map.prelude;\n+    if block.is_none() {\n+        // populate external prelude\n+        for dep in &crate_graph[def_map.krate].dependencies {\n+            log::debug!(\"crate dep {:?} -> {:?}\", dep.name, dep.crate_id);\n+            let dep_def_map = db.crate_def_map(dep.crate_id);\n+            def_map\n+                .extern_prelude\n+                .insert(dep.as_name(), dep_def_map.module_id(dep_def_map.root).into());\n+\n+            // look for the prelude\n+            // If the dependency defines a prelude, we overwrite an already defined\n+            // prelude. This is necessary to import the \"std\" prelude if a crate\n+            // depends on both \"core\" and \"std\".\n+            if dep_def_map.prelude.is_some() {\n+                def_map.prelude = dep_def_map.prelude;\n+            }\n         }\n     }\n "}, {"sha": "61443341724b537accba05f9ac9e84bd67741844", "filename": "crates/ide/src/hover.rs", "status": "modified", "additions": 42, "deletions": 0, "changes": 42, "blob_url": "https://github.com/rust-lang/rust/blob/0129628a0f497834a544fa981078b43321c9020a/crates%2Fide%2Fsrc%2Fhover.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0129628a0f497834a544fa981078b43321c9020a/crates%2Fide%2Fsrc%2Fhover.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fhover.rs?ref=0129628a0f497834a544fa981078b43321c9020a", "patch": "@@ -3897,4 +3897,46 @@ trait A where\n             \"#]],\n         );\n     }\n+\n+    #[test]\n+    fn string_shadowed_with_inner_items() {\n+        check(\n+            r#\"\n+//- /main.rs crate:main deps:alloc\n+\n+/// Custom `String` type.\n+struct String;\n+\n+fn f() {\n+    let _: String$0;\n+\n+    fn inner() {}\n+}\n+\n+//- /alloc.rs crate:alloc\n+#[prelude_import]\n+pub use string::*;\n+\n+mod string {\n+    /// This is `alloc::String`.\n+    pub struct String;\n+}\n+            \"#,\n+            expect![[r#\"\n+                *String*\n+\n+                ```rust\n+                main\n+                ```\n+\n+                ```rust\n+                struct String\n+                ```\n+\n+                ---\n+\n+                Custom `String` type.\n+            \"#]],\n+        )\n+    }\n }"}]}