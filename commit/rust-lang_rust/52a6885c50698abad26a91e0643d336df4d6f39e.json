{"sha": "52a6885c50698abad26a91e0643d336df4d6f39e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjUyYTY4ODVjNTA2OThhYmFkMjZhOTFlMDY0M2QzMzZkZjRkNmYzOWU=", "commit": {"author": {"name": "Ethan Brierley", "email": "ethanboxx@gmail.com", "date": "2021-06-22T09:20:56Z"}, "committer": {"name": "Ethan Brierley", "email": "ethanboxx@gmail.com", "date": "2021-06-22T09:20:56Z"}, "message": "postpone stabilizaton by one release", "tree": {"sha": "52b95feb0172abbd4fed545228b7dc975e1329f2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/52b95feb0172abbd4fed545228b7dc975e1329f2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/52a6885c50698abad26a91e0643d336df4d6f39e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/52a6885c50698abad26a91e0643d336df4d6f39e", "html_url": "https://github.com/rust-lang/rust/commit/52a6885c50698abad26a91e0643d336df4d6f39e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/52a6885c50698abad26a91e0643d336df4d6f39e/comments", "author": {"login": "eopb", "id": 8074468, "node_id": "MDQ6VXNlcjgwNzQ0Njg=", "avatar_url": "https://avatars.githubusercontent.com/u/8074468?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eopb", "html_url": "https://github.com/eopb", "followers_url": "https://api.github.com/users/eopb/followers", "following_url": "https://api.github.com/users/eopb/following{/other_user}", "gists_url": "https://api.github.com/users/eopb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eopb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eopb/subscriptions", "organizations_url": "https://api.github.com/users/eopb/orgs", "repos_url": "https://api.github.com/users/eopb/repos", "events_url": "https://api.github.com/users/eopb/events{/privacy}", "received_events_url": "https://api.github.com/users/eopb/received_events", "type": "User", "site_admin": false}, "committer": {"login": "eopb", "id": 8074468, "node_id": "MDQ6VXNlcjgwNzQ0Njg=", "avatar_url": "https://avatars.githubusercontent.com/u/8074468?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eopb", "html_url": "https://github.com/eopb", "followers_url": "https://api.github.com/users/eopb/followers", "following_url": "https://api.github.com/users/eopb/following{/other_user}", "gists_url": "https://api.github.com/users/eopb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eopb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eopb/subscriptions", "organizations_url": "https://api.github.com/users/eopb/orgs", "repos_url": "https://api.github.com/users/eopb/repos", "events_url": "https://api.github.com/users/eopb/events{/privacy}", "received_events_url": "https://api.github.com/users/eopb/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "85b06e9c015123f5bd216214f579e6f7fee0edb6", "url": "https://api.github.com/repos/rust-lang/rust/commits/85b06e9c015123f5bd216214f579e6f7fee0edb6", "html_url": "https://github.com/rust-lang/rust/commit/85b06e9c015123f5bd216214f579e6f7fee0edb6"}], "stats": {"total": 18, "additions": 9, "deletions": 9}, "files": [{"sha": "cdeba9c0792738be5fb55ebe76cf8f9f604172f5", "filename": "library/core/src/num/error.rs", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/52a6885c50698abad26a91e0643d336df4d6f39e/library%2Fcore%2Fsrc%2Fnum%2Ferror.rs", "raw_url": "https://github.com/rust-lang/rust/raw/52a6885c50698abad26a91e0643d336df4d6f39e/library%2Fcore%2Fsrc%2Fnum%2Ferror.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fnum%2Ferror.rs?ref=52a6885c50698abad26a91e0643d336df4d6f39e", "patch": "@@ -80,14 +80,14 @@ pub struct ParseIntError {\n /// }\n /// # }\n /// ```\n-#[stable(feature = \"int_error_matching\", since = \"1.54.0\")]\n+#[stable(feature = \"int_error_matching\", since = \"1.55.0\")]\n #[derive(Debug, Clone, PartialEq, Eq)]\n #[non_exhaustive]\n pub enum IntErrorKind {\n     /// Value being parsed is empty.\n     ///\n     /// This variant will be constructed when parsing an empty string.\n-    #[stable(feature = \"int_error_matching\", since = \"1.54.0\")]\n+    #[stable(feature = \"int_error_matching\", since = \"1.55.0\")]\n     Empty,\n     /// Contains an invalid digit in its context.\n     ///\n@@ -96,25 +96,25 @@ pub enum IntErrorKind {\n     ///\n     /// This variant is also constructed when a `+` or `-` is misplaced within a string\n     /// either on its own or in the middle of a number.\n-    #[stable(feature = \"int_error_matching\", since = \"1.54.0\")]\n+    #[stable(feature = \"int_error_matching\", since = \"1.55.0\")]\n     InvalidDigit,\n     /// Integer is too large to store in target integer type.\n-    #[stable(feature = \"int_error_matching\", since = \"1.54.0\")]\n+    #[stable(feature = \"int_error_matching\", since = \"1.55.0\")]\n     PosOverflow,\n     /// Integer is too small to store in target integer type.\n-    #[stable(feature = \"int_error_matching\", since = \"1.54.0\")]\n+    #[stable(feature = \"int_error_matching\", since = \"1.55.0\")]\n     NegOverflow,\n     /// Value was Zero\n     ///\n     /// This variant will be emitted when the parsing string has a value of zero, which\n     /// would be illegal for non-zero types.\n-    #[stable(feature = \"int_error_matching\", since = \"1.54.0\")]\n+    #[stable(feature = \"int_error_matching\", since = \"1.55.0\")]\n     Zero,\n }\n \n impl ParseIntError {\n     /// Outputs the detailed cause of parsing an integer failing.\n-    #[stable(feature = \"int_error_matching\", since = \"1.54.0\")]\n+    #[stable(feature = \"int_error_matching\", since = \"1.55.0\")]\n     pub fn kind(&self) -> &IntErrorKind {\n         &self.kind\n     }"}, {"sha": "6351f9564a4efb578133e0681511433d04ac7082", "filename": "library/core/src/num/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/52a6885c50698abad26a91e0643d336df4d6f39e/library%2Fcore%2Fsrc%2Fnum%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/52a6885c50698abad26a91e0643d336df4d6f39e/library%2Fcore%2Fsrc%2Fnum%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fnum%2Fmod.rs?ref=52a6885c50698abad26a91e0643d336df4d6f39e", "patch": "@@ -57,7 +57,7 @@ pub use nonzero::{NonZeroI128, NonZeroI16, NonZeroI32, NonZeroI64, NonZeroI8, No\n #[stable(feature = \"try_from\", since = \"1.34.0\")]\n pub use error::TryFromIntError;\n \n-#[stable(feature = \"int_error_matching\", since = \"1.54.0\")]\n+#[stable(feature = \"int_error_matching\", since = \"1.55.0\")]\n pub use error::IntErrorKind;\n \n macro_rules! usize_isize_to_xe_bytes_doc {"}, {"sha": "e7051f0ce95b24e2610fd14a92c31b7fb6b3bdb5", "filename": "library/std/src/num.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/52a6885c50698abad26a91e0643d336df4d6f39e/library%2Fstd%2Fsrc%2Fnum.rs", "raw_url": "https://github.com/rust-lang/rust/raw/52a6885c50698abad26a91e0643d336df4d6f39e/library%2Fstd%2Fsrc%2Fnum.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fnum.rs?ref=52a6885c50698abad26a91e0643d336df4d6f39e", "patch": "@@ -22,7 +22,7 @@ pub use core::num::{NonZeroI128, NonZeroI16, NonZeroI32, NonZeroI64, NonZeroI8,\n #[stable(feature = \"nonzero\", since = \"1.28.0\")]\n pub use core::num::{NonZeroU128, NonZeroU16, NonZeroU32, NonZeroU64, NonZeroU8, NonZeroUsize};\n \n-#[stable(feature = \"int_error_matching\", since = \"1.54.0\")]\n+#[stable(feature = \"int_error_matching\", since = \"1.55.0\")]\n pub use core::num::IntErrorKind;\n \n #[cfg(test)]"}]}