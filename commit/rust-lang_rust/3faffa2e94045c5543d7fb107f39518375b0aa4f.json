{"sha": "3faffa2e94045c5543d7fb107f39518375b0aa4f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNmYWZmYTJlOTQwNDVjNTU0M2Q3ZmIxMDdmMzk1MTgzNzViMGFhNGY=", "commit": {"author": {"name": "kennytm", "email": "kennytm@gmail.com", "date": "2018-10-26T12:48:08Z"}, "committer": {"name": "kennytm", "email": "kennytm@gmail.com", "date": "2018-10-26T15:07:02Z"}, "message": "Rollup merge of #55379 - RalfJung:no-empty-union, r=oli-obk\n\nvalidity: assert that unions are non-empty", "tree": {"sha": "c727c44881a082f0df2b175b48d80e7bb2c5cc5a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c727c44881a082f0df2b175b48d80e7bb2c5cc5a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3faffa2e94045c5543d7fb107f39518375b0aa4f", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEZ1R8CLMp8f2GxWoQ/vbIBR0OATwFAlvTLZcACgkQ/vbIBR0O\nATzAMA//edbld4AESUj89Nll2jxz9q7WPI/UcB8i2J/wRVXmfQp7TX/iSHPfAIXY\nspKb7BvwAh2vCKF4hzPQQ/n/3ZRX6mQnkkVDL4gjKZZaKRKBj2U8g+yFDZZFV9T1\n1RuCxK/PhIlfjwXk03acsjh+IO+yvgJBHBdAR9nxOxmbZqjt9hM9rvEAr/pQB/+k\nfQlAIkTN6DnMFBfIENx9LqfCxpqR5YS7hkgfSOa0bgqUgQSg7YqkGxj+Yt/UIyuR\nnxTvGbDp6klBWu95Zzt0AbMFVuoonu/hehRNc2z/GcSMBhzsWQmm/67ZytAqb57r\ne6dQ1m4Jo31oszRxbf486nNj1I0ul8hWr56tJPObj8rIr9oNIseyR3xPnhoe5kt3\nBwsM4IGMD4PegVQ1L3VsEBfNrWz3z/ErmzvSfxeRO0BuVt05rEy6oMb69StLQUyE\nr8/aU8rtLVrW5KUURw5nSGPtW09+3EaESKxWK1MKFVjmbc78EK68pv7XZ7sGDe6y\nLzz966LoyDQPMzK4tnswAlF/VgPyJDR7PWuQO2XNifnAyaf/eAMynS5py3/f7v62\nzkqeCHfn5wADxFWmZhyQgTJ4f7J0G0eJaqYYXvVPyfP0uuPAT2qWj3+lV1h8p2GJ\nGZFNloZzZ3D7AEaUEi/ASwDrdckfVoE6Cy53N0R7Tap+vpAyRow=\n=P1CN\n-----END PGP SIGNATURE-----", "payload": "tree c727c44881a082f0df2b175b48d80e7bb2c5cc5a\nparent 477f6f7577b701895083357d8d8dda9c7ee3e670\nparent 6b980462c6f5273b5b38d0e83c6da09c41d865e3\nauthor kennytm <kennytm@gmail.com> 1540558088 +0800\ncommitter kennytm <kennytm@gmail.com> 1540566422 +0800\n\nRollup merge of #55379 - RalfJung:no-empty-union, r=oli-obk\n\nvalidity: assert that unions are non-empty\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3faffa2e94045c5543d7fb107f39518375b0aa4f", "html_url": "https://github.com/rust-lang/rust/commit/3faffa2e94045c5543d7fb107f39518375b0aa4f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3faffa2e94045c5543d7fb107f39518375b0aa4f/comments", "author": {"login": "kennytm", "id": 103023, "node_id": "MDQ6VXNlcjEwMzAyMw==", "avatar_url": "https://avatars.githubusercontent.com/u/103023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kennytm", "html_url": "https://github.com/kennytm", "followers_url": "https://api.github.com/users/kennytm/followers", "following_url": "https://api.github.com/users/kennytm/following{/other_user}", "gists_url": "https://api.github.com/users/kennytm/gists{/gist_id}", "starred_url": "https://api.github.com/users/kennytm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kennytm/subscriptions", "organizations_url": "https://api.github.com/users/kennytm/orgs", "repos_url": "https://api.github.com/users/kennytm/repos", "events_url": "https://api.github.com/users/kennytm/events{/privacy}", "received_events_url": "https://api.github.com/users/kennytm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kennytm", "id": 103023, "node_id": "MDQ6VXNlcjEwMzAyMw==", "avatar_url": "https://avatars.githubusercontent.com/u/103023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kennytm", "html_url": "https://github.com/kennytm", "followers_url": "https://api.github.com/users/kennytm/followers", "following_url": "https://api.github.com/users/kennytm/following{/other_user}", "gists_url": "https://api.github.com/users/kennytm/gists{/gist_id}", "starred_url": "https://api.github.com/users/kennytm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kennytm/subscriptions", "organizations_url": "https://api.github.com/users/kennytm/orgs", "repos_url": "https://api.github.com/users/kennytm/repos", "events_url": "https://api.github.com/users/kennytm/events{/privacy}", "received_events_url": "https://api.github.com/users/kennytm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "477f6f7577b701895083357d8d8dda9c7ee3e670", "url": "https://api.github.com/repos/rust-lang/rust/commits/477f6f7577b701895083357d8d8dda9c7ee3e670", "html_url": "https://github.com/rust-lang/rust/commit/477f6f7577b701895083357d8d8dda9c7ee3e670"}, {"sha": "6b980462c6f5273b5b38d0e83c6da09c41d865e3", "url": "https://api.github.com/repos/rust-lang/rust/commits/6b980462c6f5273b5b38d0e83c6da09c41d865e3", "html_url": "https://github.com/rust-lang/rust/commit/6b980462c6f5273b5b38d0e83c6da09c41d865e3"}], "stats": {"total": 6, "additions": 5, "deletions": 1}, "files": [{"sha": "25e2ff6edb7630a60a2c2d332e2c7ae2a214f920", "filename": "src/librustc_mir/interpret/validity.rs", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/3faffa2e94045c5543d7fb107f39518375b0aa4f/src%2Flibrustc_mir%2Finterpret%2Fvalidity.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3faffa2e94045c5543d7fb107f39518375b0aa4f/src%2Flibrustc_mir%2Finterpret%2Fvalidity.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Finterpret%2Fvalidity.rs?ref=3faffa2e94045c5543d7fb107f39518375b0aa4f", "patch": "@@ -463,7 +463,11 @@ impl<'a, 'mir, 'tcx, M: Machine<'a, 'mir, 'tcx>> EvalContext<'a, 'mir, 'tcx, M>\n         // Validate all fields of compound data structures\n         let path_len = path.len(); // Remember the length, in case we need to truncate\n         match dest.layout.fields {\n-            layout::FieldPlacement::Union(..) => {\n+            layout::FieldPlacement::Union(fields) => {\n+                // Empty unions are not accepted by rustc. That's great, it means we can\n+                // use that as an unambiguous signal for detecting primitives.  Make sure\n+                // we did not miss any primitive.\n+                debug_assert!(fields > 0);\n                 // We can't check unions, their bits are allowed to be anything.\n                 // The fields don't need to correspond to any bit pattern of the union's fields.\n                 // See https://github.com/rust-lang/rust/issues/32836#issuecomment-406875389"}]}