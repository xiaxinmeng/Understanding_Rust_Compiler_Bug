{"sha": "9abc2312124de7c4275d76e9cbc81d50086c4768", "node_id": "MDY6Q29tbWl0NzI0NzEyOjlhYmMyMzEyMTI0ZGU3YzQyNzVkNzZlOWNiYzgxZDUwMDg2YzQ3Njg=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2018-12-02T11:14:14Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2018-12-02T11:14:14Z"}, "message": "Auto merge of #56378 - ljedrz:arena_tweaks, r=nagisa\n\narena: speed up TypedArena::clear and improve common patterns\n\n- speed up `TypedArena::clear`: improves its performance by up to **33%** (in case of a single entry)\n- simplify `DroplessArena::in_arena`", "tree": {"sha": "78b81359a2d7a8805cb5b846e1a6918b7bf28671", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/78b81359a2d7a8805cb5b846e1a6918b7bf28671"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9abc2312124de7c4275d76e9cbc81d50086c4768", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9abc2312124de7c4275d76e9cbc81d50086c4768", "html_url": "https://github.com/rust-lang/rust/commit/9abc2312124de7c4275d76e9cbc81d50086c4768", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9abc2312124de7c4275d76e9cbc81d50086c4768/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0765eb95b5e9e15fc29aa7725a01621dfeca2649", "url": "https://api.github.com/repos/rust-lang/rust/commits/0765eb95b5e9e15fc29aa7725a01621dfeca2649", "html_url": "https://github.com/rust-lang/rust/commit/0765eb95b5e9e15fc29aa7725a01621dfeca2649"}, {"sha": "95f32f1ebddae26ac6610040ea93ea3de440089a", "url": "https://api.github.com/repos/rust-lang/rust/commits/95f32f1ebddae26ac6610040ea93ea3de440089a", "html_url": "https://github.com/rust-lang/rust/commit/95f32f1ebddae26ac6610040ea93ea3de440089a"}], "stats": {"total": 24, "additions": 14, "deletions": 10}, "files": [{"sha": "aef3edd9eb64a3f1814ef6ec2f4d4481d895e319", "filename": "src/libarena/lib.rs", "status": "modified", "additions": 14, "deletions": 10, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/9abc2312124de7c4275d76e9cbc81d50086c4768/src%2Flibarena%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9abc2312124de7c4275d76e9cbc81d50086c4768/src%2Flibarena%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibarena%2Flib.rs?ref=9abc2312124de7c4275d76e9cbc81d50086c4768", "patch": "@@ -224,14 +224,14 @@ impl<T> TypedArena<T> {\n         unsafe {\n             // Clear the last chunk, which is partially filled.\n             let mut chunks_borrow = self.chunks.borrow_mut();\n-            if let Some(mut last_chunk) = chunks_borrow.pop() {\n+            if let Some(mut last_chunk) = chunks_borrow.last_mut() {\n                 self.clear_last_chunk(&mut last_chunk);\n+                let len = chunks_borrow.len();\n                 // If `T` is ZST, code below has no effect.\n-                for mut chunk in chunks_borrow.drain(..) {\n+                for mut chunk in chunks_borrow.drain(..len-1) {\n                     let cap = chunk.storage.cap();\n                     chunk.destroy(cap);\n                 }\n-                chunks_borrow.push(last_chunk);\n             }\n         }\n     }\n@@ -311,13 +311,8 @@ impl Default for DroplessArena {\n impl DroplessArena {\n     pub fn in_arena<T: ?Sized>(&self, ptr: *const T) -> bool {\n         let ptr = ptr as *const u8 as *mut u8;\n-        for chunk in &*self.chunks.borrow() {\n-            if chunk.start() <= ptr && ptr < chunk.end() {\n-                return true;\n-            }\n-        }\n \n-        false\n+        self.chunks.borrow().iter().any(|chunk| chunk.start() <= ptr && ptr < chunk.end())\n     }\n \n     #[inline]\n@@ -410,7 +405,7 @@ impl DroplessArena {\n     {\n         assert!(!mem::needs_drop::<T>());\n         assert!(mem::size_of::<T>() != 0);\n-        assert!(slice.len() != 0);\n+        assert!(!slice.is_empty());\n \n         let mem = self.alloc_raw(\n             slice.len() * mem::size_of::<T>(),\n@@ -606,6 +601,15 @@ mod tests {\n         }\n     }\n \n+    #[bench]\n+    pub fn bench_typed_arena_clear(b: &mut Bencher) {\n+        let mut arena = TypedArena::default();\n+        b.iter(|| {\n+            arena.alloc(Point { x: 1, y: 2, z: 3 });\n+            arena.clear();\n+        })\n+    }\n+\n     // Drop tests\n \n     struct DropCounter<'a> {"}]}