{"sha": "ed37ed7cb8dcb2855cd95166d45b753ffab112dc", "node_id": "C_kwDOAAsO6NoAKGVkMzdlZDdjYjhkY2IyODU1Y2Q5NTE2NmQ0NWI3NTNmZmFiMTEyZGM", "commit": {"author": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2022-06-24T19:47:55Z"}, "committer": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2022-06-26T20:33:28Z"}, "message": "Simplify github actions conf", "tree": {"sha": "2b3043a108da22a223a4535a2972e49ed5f100a2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2b3043a108da22a223a4535a2972e49ed5f100a2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ed37ed7cb8dcb2855cd95166d45b753ffab112dc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ed37ed7cb8dcb2855cd95166d45b753ffab112dc", "html_url": "https://github.com/rust-lang/rust/commit/ed37ed7cb8dcb2855cd95166d45b753ffab112dc", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ed37ed7cb8dcb2855cd95166d45b753ffab112dc/comments", "author": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "committer": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5e6a3be56c60935e31dc71a93e7166ea4d427a82", "url": "https://api.github.com/repos/rust-lang/rust/commits/5e6a3be56c60935e31dc71a93e7166ea4d427a82", "html_url": "https://github.com/rust-lang/rust/commit/5e6a3be56c60935e31dc71a93e7166ea4d427a82"}], "stats": {"total": 81, "additions": 53, "deletions": 28}, "files": [{"sha": "3dbf8d922152d3d205fd1a3de6ae5c9037700b98", "filename": ".github/workflows/ci.yml", "status": "modified", "additions": 33, "deletions": 19, "changes": 52, "blob_url": "https://github.com/rust-lang/rust/blob/ed37ed7cb8dcb2855cd95166d45b753ffab112dc/.github%2Fworkflows%2Fci.yml", "raw_url": "https://github.com/rust-lang/rust/raw/ed37ed7cb8dcb2855cd95166d45b753ffab112dc/.github%2Fworkflows%2Fci.yml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/.github%2Fworkflows%2Fci.yml?ref=ed37ed7cb8dcb2855cd95166d45b753ffab112dc", "patch": "@@ -11,7 +11,10 @@ jobs:\n     strategy:\n       fail-fast: false\n       matrix:\n-        libgccjit_version: [\"libgccjit.so\", \"libgccjit_without_int128.so\", \"libgccjit12.so\"]\n+        libgccjit_version:\n+          - { gcc: \"libgccjit.so\", extra: \"\" }\n+          - { gcc: \"libgccjit_without_int128.so\", extra: \"\" }\n+          - { gcc: \"libgccjit12.so\", extra: \"--no-default-features\" }\n \n     steps:\n     - uses: actions/checkout@v2\n@@ -28,7 +31,7 @@ jobs:\n       uses: dawidd6/action-download-artifact@v2\n       with:\n           workflow: main.yml\n-          name: ${{ matrix.libgccjit_version }}\n+          name: ${{ matrix.libgccjit_version.gcc }}\n           path: gcc-build\n           repo: antoyo/gcc\n           search_artifacts: true # Because, instead, the action only check the last job ran and that won't work since we want multiple artifacts.\n@@ -78,19 +81,10 @@ jobs:\n         key: ${{ runner.os }}-cargo-build-target-${{ hashFiles('rust-toolchain') }}\n \n     - name: Build\n-      if: matrix.libgccjit_version != 'libgccjit12.so'\n       run: |\n         ./prepare_build.sh\n-        ./build.sh\n-        cargo test\n-        ./clean_all.sh\n-\n-    - name: Build\n-      if: matrix.libgccjit_version == 'libgccjit12.so'\n-      run: |\n-        ./prepare_build.sh\n-        ./build.sh --no-default-features\n-        cargo test --no-default-features\n+        ./build.sh ${{ matrix.libgccjit_version.extra }}\n+        cargo test ${{ matrix.libgccjit_version.extra }}\n         ./clean_all.sh\n \n     - name: Prepare dependencies\n@@ -106,8 +100,29 @@ jobs:\n         command: build\n         args: --release\n \n-    - name: Test\n-      if: matrix.libgccjit_version != 'libgccjit12.so'\n+    - name: Test std_tests\n+      run: |\n+        # Enable backtraces for easier debugging\n+        export RUST_BACKTRACE=1\n+\n+        # Reduce amount of benchmark runs as they are slow\n+        export COMPILE_RUNS=2\n+        export RUN_RUNS=2\n+\n+        ./test.sh --release --clean --build-sysroot --std-tests ${{ matrix.libgccjit_version.extra }}\n+\n+    - name: Test test_libcore\n+      run: |\n+        # Enable backtraces for easier debugging\n+        export RUST_BACKTRACE=1\n+\n+        # Reduce amount of benchmark runs as they are slow\n+        export COMPILE_RUNS=2\n+        export RUN_RUNS=2\n+\n+        ./test.sh --release --test-libcore ${{ matrix.libgccjit_version.extra }}\n+\n+    - name: Test extended_sysroot_tests\n       run: |\n         # Enable backtraces for easier debugging\n         export RUST_BACKTRACE=1\n@@ -116,10 +131,9 @@ jobs:\n         export COMPILE_RUNS=2\n         export RUN_RUNS=2\n \n-        ./test.sh --release\n+        ./test.sh --release --extended-tests ${{ matrix.libgccjit_version.extra }}\n \n-    - name: Test\n-      if: matrix.libgccjit_version == 'libgccjit12.so'\n+    - name: Test test_rustc\n       run: |\n         # Enable backtraces for easier debugging\n         export RUST_BACKTRACE=1\n@@ -128,7 +142,7 @@ jobs:\n         export COMPILE_RUNS=2\n         export RUN_RUNS=2\n \n-        ./test.sh --release --no-default-features\n+        ./test.sh --release --test-rustc ${{ matrix.libgccjit_version.extra }}\n \n   duplicates:\n     runs-on: ubuntu-latest"}, {"sha": "b4d10fa6e4d2f7bfd78d9eb4505c046b6860fb1e", "filename": "test.sh", "status": "modified", "additions": 20, "deletions": 9, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/ed37ed7cb8dcb2855cd95166d45b753ffab112dc/test.sh", "raw_url": "https://github.com/rust-lang/rust/raw/ed37ed7cb8dcb2855cd95166d45b753ffab112dc/test.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/test.sh?ref=ed37ed7cb8dcb2855cd95166d45b753ffab112dc", "patch": "@@ -17,7 +17,7 @@ export LIBRARY_PATH=\"$GCC_PATH\"\n flags=\n gcc_master_branch=1\n channel=\"debug\"\n-func=all\n+funcs=()\n build_only=0\n \n while [[ $# -gt 0 ]]; do\n@@ -42,32 +42,36 @@ while [[ $# -gt 0 ]]; do\n             shift\n             ;;\n         \"--test-rustc\")\n-            func=test_rustc\n+            funcs+=(test_rustc)\n             shift\n             ;;\n \n         \"--test-libcore\")\n-            func=test_libcore\n+            funcs+=(test_libcore)\n             shift\n             ;;\n \n         \"--clean-ui-tests\")\n-            func=clean_ui_tests\n+            funcs+=(clean_ui_tests)\n+            shift\n+            ;;\n+        \"--clean\")\n+            funcs+=(clean)\n             shift\n             ;;\n \n         \"--std-tests\")\n-            func=std_tests\n+            funcs+=(std_tests)\n             shift\n             ;;\n \n         \"--extended-tests\")\n-            func=extended_sysroot_tests\n+            funcs+=(extended_sysroot_tests)\n             shift\n             ;;\n \n         \"--build-sysroot\")\n-            func=build_sysroot\n+            funcs+=(build_sysroot)\n             shift\n             ;;\n         \"--build\")\n@@ -84,14 +88,14 @@ done\n if [[ $channel == \"release\" ]]; then\n     export CHANNEL='release'\n     CARGO_INCREMENTAL=1 cargo rustc --release $flags\n-    shift\n else\n     echo $LD_LIBRARY_PATH\n     export CHANNEL='debug'\n     cargo rustc $flags\n fi\n \n if (( $build_only == 1 )); then\n+    echo \"Since it's `build-only`, exiting...\"\n     exit\n fi\n \n@@ -285,4 +289,11 @@ function all() {\n     test_rustc\n }\n \n-$func\n+if [ ${#funcs[@]} -eq 0 ]; then\n+    echo \"No command passed, running `--all`...\"\n+    all\n+else\n+    for t in ${funcs[@]}; do\n+        $t\n+    done\n+fi"}]}