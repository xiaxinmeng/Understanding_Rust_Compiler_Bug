{"sha": "b7f97715a38c7486e1329340f6da5236ed5af095", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI3Zjk3NzE1YTM4Yzc0ODZlMTMyOTM0MGY2ZGE1MjM2ZWQ1YWYwOTU=", "commit": {"author": {"name": "Luiz Carlos Mour\u00e3o Paes de Carvalho", "email": "luizcarlosmpc@gmail.com", "date": "2021-03-10T03:23:20Z"}, "committer": {"name": "Luiz Carlos Mour\u00e3o Paes de Carvalho", "email": "luizcarlosmpc@gmail.com", "date": "2021-03-10T03:23:20Z"}, "message": "fix:  tests should work for convert_iter_for_each_to_for", "tree": {"sha": "9afc71f3749517bf6a76b8a1441e34a72d796828", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9afc71f3749517bf6a76b8a1441e34a72d796828"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b7f97715a38c7486e1329340f6da5236ed5af095", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b7f97715a38c7486e1329340f6da5236ed5af095", "html_url": "https://github.com/rust-lang/rust/commit/b7f97715a38c7486e1329340f6da5236ed5af095", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b7f97715a38c7486e1329340f6da5236ed5af095/comments", "author": {"login": "saiintbrisson", "id": 29989290, "node_id": "MDQ6VXNlcjI5OTg5Mjkw", "avatar_url": "https://avatars.githubusercontent.com/u/29989290?v=4", "gravatar_id": "", "url": "https://api.github.com/users/saiintbrisson", "html_url": "https://github.com/saiintbrisson", "followers_url": "https://api.github.com/users/saiintbrisson/followers", "following_url": "https://api.github.com/users/saiintbrisson/following{/other_user}", "gists_url": "https://api.github.com/users/saiintbrisson/gists{/gist_id}", "starred_url": "https://api.github.com/users/saiintbrisson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/saiintbrisson/subscriptions", "organizations_url": "https://api.github.com/users/saiintbrisson/orgs", "repos_url": "https://api.github.com/users/saiintbrisson/repos", "events_url": "https://api.github.com/users/saiintbrisson/events{/privacy}", "received_events_url": "https://api.github.com/users/saiintbrisson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "saiintbrisson", "id": 29989290, "node_id": "MDQ6VXNlcjI5OTg5Mjkw", "avatar_url": "https://avatars.githubusercontent.com/u/29989290?v=4", "gravatar_id": "", "url": "https://api.github.com/users/saiintbrisson", "html_url": "https://github.com/saiintbrisson", "followers_url": "https://api.github.com/users/saiintbrisson/followers", "following_url": "https://api.github.com/users/saiintbrisson/following{/other_user}", "gists_url": "https://api.github.com/users/saiintbrisson/gists{/gist_id}", "starred_url": "https://api.github.com/users/saiintbrisson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/saiintbrisson/subscriptions", "organizations_url": "https://api.github.com/users/saiintbrisson/orgs", "repos_url": "https://api.github.com/users/saiintbrisson/repos", "events_url": "https://api.github.com/users/saiintbrisson/events{/privacy}", "received_events_url": "https://api.github.com/users/saiintbrisson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "87dc9d1fcc91b95c35c31b6ecee10ef3954bc286", "url": "https://api.github.com/repos/rust-lang/rust/commits/87dc9d1fcc91b95c35c31b6ecee10ef3954bc286", "html_url": "https://github.com/rust-lang/rust/commit/87dc9d1fcc91b95c35c31b6ecee10ef3954bc286"}], "stats": {"total": 55, "additions": 44, "deletions": 11}, "files": [{"sha": "7903a18fa438527cb41fd22a1ccaac2fbc8d1374", "filename": "crates/ide_assists/src/handlers/convert_iter_for_each_to_for.rs", "status": "modified", "additions": 44, "deletions": 11, "changes": 55, "blob_url": "https://github.com/rust-lang/rust/blob/b7f97715a38c7486e1329340f6da5236ed5af095/crates%2Fide_assists%2Fsrc%2Fhandlers%2Fconvert_iter_for_each_to_for.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b7f97715a38c7486e1329340f6da5236ed5af095/crates%2Fide_assists%2Fsrc%2Fhandlers%2Fconvert_iter_for_each_to_for.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_assists%2Fsrc%2Fhandlers%2Fconvert_iter_for_each_to_for.rs?ref=b7f97715a38c7486e1329340f6da5236ed5af095", "patch": "@@ -88,14 +88,28 @@ fn validate_method_call_expr(\n \n #[cfg(test)]\n mod tests {\n-    use crate::tests::check_assist;\n+    use crate::tests::{check_assist, check_assist_not_applicable};\n \n     use super::*;\n \n+    const EMPTY_ITER_FIXTURE: &'static str = r\"\n+//- /lib.rs deps:core crate:empty_iter\n+pub struct EmptyIter;\n+impl Iterator for EmptyIter {\n+    type Item = usize;\n+    fn next(&mut self) -> Option<Self::Item> { None }\n+}\n+pub struct Empty;\n+impl Empty {\n+    pub fn iter(&self) -> EmptyIter { EmptyIter }\n+}\n+\";\n+\n     fn check_assist_with_fixtures(before: &str, after: &str) {\n         let before = &format!(\n-            \"//- /main.rs crate:main deps:core,empty_iter{}{}\",\n+            \"//- /main.rs crate:main deps:core,empty_iter{}{}{}\",\n             before,\n+            EMPTY_ITER_FIXTURE,\n             FamousDefs::FIXTURE,\n         );\n         check_assist(convert_iter_for_each_to_for, before, after);\n@@ -105,55 +119,74 @@ mod tests {\n     fn test_for_each_in_method() {\n         check_assist_with_fixtures(\n             r#\"\n+use empty_iter::*;\n fn main() {\n-    let x = vec![(1, 1), (2, 2), (3, 3), (4, 4)];\n+    let x = Empty;\n     x.iter().$0for_each(|(x, y)| {\n         println!(\"x: {}, y: {}\", x, y);\n     });\n }\"#,\n             r#\"\n+use empty_iter::*;\n fn main() {\n-    let x = vec![(1, 1), (2, 2), (3, 3), (4, 4)];\n+    let x = Empty;\n     for (x, y) in x.iter() {\n         println!(\"x: {}, y: {}\", x, y);\n     };\n-}\"#,\n+}\n+\"#,\n         )\n     }\n \n     #[test]\n     fn test_for_each_without_braces() {\n         check_assist_with_fixtures(\n             r#\"\n+use empty_iter::*;\n fn main() {\n-    let x = vec![(1, 1), (2, 2), (3, 3), (4, 4)];\n+    let x = Empty;\n     x.iter().$0for_each(|(x, y)| println!(\"x: {}, y: {}\", x, y));\n }\"#,\n             r#\"\n+use empty_iter::*;\n fn main() {\n-    let x = vec![(1, 1), (2, 2), (3, 3), (4, 4)];\n+    let x = Empty;\n     for (x, y) in x.iter() {\n         println!(\"x: {}, y: {}\", x, y)\n     };\n-}\"#,\n+}\n+\"#,\n         )\n     }\n \n     #[test]\n     fn test_for_each_in_closure() {\n         check_assist_with_fixtures(\n             r#\"\n+use empty_iter::*;\n fn main() {\n-    let x = vec![(1, 1), (2, 2), (3, 3), (4, 4)];\n+    let x = Empty;\n     x.iter().for_each($0|(x, y)| println!(\"x: {}, y: {}\", x, y));\n }\"#,\n             r#\"\n+use empty_iter::*;\n fn main() {\n-    let x = vec![(1, 1), (2, 2), (3, 3), (4, 4)];\n+    let x = Empty;\n     for (x, y) in x.iter() {\n         println!(\"x: {}, y: {}\", x, y)\n     };\n-}\"#,\n+}\n+\"#,\n         )\n     }\n+\n+    #[test]\n+    fn test_for_each_not_applicable() {\n+        check_assist_not_applicable(\n+            convert_iter_for_each_to_for,\n+            r#\"\n+fn main() {\n+    value.$0for_each(|x| println!(\"{}\", x));\n+}\"#)\n+    }\n }\n\\ No newline at end of file"}]}