{"sha": "cc0ac7eecebd57278974329d3610bb2512740ef8", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNjMGFjN2VlY2ViZDU3Mjc4OTc0MzI5ZDM2MTBiYjI1MTI3NDBlZjg=", "commit": {"author": {"name": "Yuki Okushi", "email": "huyuumi.dev@gmail.com", "date": "2020-08-04T00:26:58Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-08-04T00:26:58Z"}, "message": "Rollup merge of #74759 - carbotaniuman:uabs, r=shepmaster\n\nadd `unsigned_abs` to signed integers\n\nMentioned on rust-lang/rfcs#2914\n\nThis PR simply adds an `unsigned_abs` to signed integers function which returns the correct absolute value as a unsigned integer.", "tree": {"sha": "a10392a9b94b5a9eb44013408c5b656c03067a6a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a10392a9b94b5a9eb44013408c5b656c03067a6a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cc0ac7eecebd57278974329d3610bb2512740ef8", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJfKKtSCRBK7hj4Ov3rIwAAdHIIACBbOBgSd/4RXSVFoPaN4k0h\nELSZzkXWhnrY6WFNntEQb5WlYKBRBnDWxXNe5FCTZXlMqBhqQmnsFx854uCMXLjE\nxKSUCYKHifsLyjkOFuLD9bOuOgxXTzkii58mS+LEbCtO68ssculcIKLgYG2eZ8Jb\nkjdf5trVIqn8ysW0NsfbplHjKCtxrcniqWI0x4g/K+ljtyPQjhQRRQ9fTjwfYBmi\nNaPxPbqEMmSgUVyxmO6Hds2GC4v1x1S37mRn1Q5RLGaA2tGZ8FePVGvFatj+mpC0\nuV3bwXxg6wXTWZvtPIPDsEUK67o9L1xx8yCP2tTGub7PWN85N3tjj/4m0PwNLFI=\n=k09F\n-----END PGP SIGNATURE-----\n", "payload": "tree a10392a9b94b5a9eb44013408c5b656c03067a6a\nparent d8cbd9caca648ecdb66ff4c945c060762aa6297f\nparent 784dd22aac3f58eebc73ff54ae0ea43682392e68\nauthor Yuki Okushi <huyuumi.dev@gmail.com> 1596500818 +0900\ncommitter GitHub <noreply@github.com> 1596500818 +0900\n\nRollup merge of #74759 - carbotaniuman:uabs, r=shepmaster\n\nadd `unsigned_abs` to signed integers\n\nMentioned on rust-lang/rfcs#2914\n\nThis PR simply adds an `unsigned_abs` to signed integers function which returns the correct absolute value as a unsigned integer.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cc0ac7eecebd57278974329d3610bb2512740ef8", "html_url": "https://github.com/rust-lang/rust/commit/cc0ac7eecebd57278974329d3610bb2512740ef8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cc0ac7eecebd57278974329d3610bb2512740ef8/comments", "author": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d8cbd9caca648ecdb66ff4c945c060762aa6297f", "url": "https://api.github.com/repos/rust-lang/rust/commits/d8cbd9caca648ecdb66ff4c945c060762aa6297f", "html_url": "https://github.com/rust-lang/rust/commit/d8cbd9caca648ecdb66ff4c945c060762aa6297f"}, {"sha": "784dd22aac3f58eebc73ff54ae0ea43682392e68", "url": "https://api.github.com/repos/rust-lang/rust/commits/784dd22aac3f58eebc73ff54ae0ea43682392e68", "html_url": "https://github.com/rust-lang/rust/commit/784dd22aac3f58eebc73ff54ae0ea43682392e68"}], "stats": {"total": 23, "additions": 23, "deletions": 0}, "files": [{"sha": "eb50dc28b9f1101e8afe9d9c04de69fc4f3c947b", "filename": "library/core/src/num/mod.rs", "status": "modified", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/cc0ac7eecebd57278974329d3610bb2512740ef8/library%2Fcore%2Fsrc%2Fnum%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cc0ac7eecebd57278974329d3610bb2512740ef8/library%2Fcore%2Fsrc%2Fnum%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fnum%2Fmod.rs?ref=cc0ac7eecebd57278974329d3610bb2512740ef8", "patch": "@@ -1601,6 +1601,29 @@ $EndFeature, \"\n             }\n         }\n \n+        doc_comment! {\n+            concat!(\"Computes the absolute value of `self` without any wrapping\n+or panicking.\n+\n+\n+# Examples\n+\n+Basic usage:\n+\n+```\n+\", $Feature, \"#![feature(unsigned_abs)]\n+assert_eq!(100\", stringify!($SelfT), \".unsigned_abs(), 100\", stringify!($UnsignedT), \");\n+assert_eq!((-100\", stringify!($SelfT), \").unsigned_abs(), 100\", stringify!($UnsignedT), \");\n+assert_eq!((-128i8).unsigned_abs(), 128u8);\",\n+$EndFeature, \"\n+```\"),\n+            #[unstable(feature = \"unsigned_abs\", issue = \"74913\")]\n+            #[inline]\n+            pub const fn unsigned_abs(self) -> $UnsignedT {\n+                 self.wrapping_abs() as $UnsignedT\n+            }\n+        }\n+\n         doc_comment! {\n             concat!(\"Wrapping (modular) exponentiation. Computes `self.pow(exp)`,\n wrapping around at the boundary of the type."}]}