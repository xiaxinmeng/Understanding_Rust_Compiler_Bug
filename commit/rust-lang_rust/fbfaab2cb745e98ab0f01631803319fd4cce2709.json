{"sha": "fbfaab2cb745e98ab0f01631803319fd4cce2709", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZiZmFhYjJjYjc0NWU5OGFiMGYwMTYzMTgwMzMxOWZkNGNjZTI3MDk=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2021-04-18T17:02:33Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2021-04-18T17:11:29Z"}, "message": "separate feature flag for unsizing casts in const fn", "tree": {"sha": "596f84fc852196e6b324b64ca1e1ab87bcd2d090", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/596f84fc852196e6b324b64ca1e1ab87bcd2d090"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fbfaab2cb745e98ab0f01631803319fd4cce2709", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fbfaab2cb745e98ab0f01631803319fd4cce2709", "html_url": "https://github.com/rust-lang/rust/commit/fbfaab2cb745e98ab0f01631803319fd4cce2709", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fbfaab2cb745e98ab0f01631803319fd4cce2709/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fdad6ab3a3e3f2cdd6bda7f2cc0c7da698ac01a0", "url": "https://api.github.com/repos/rust-lang/rust/commits/fdad6ab3a3e3f2cdd6bda7f2cc0c7da698ac01a0", "html_url": "https://github.com/rust-lang/rust/commit/fdad6ab3a3e3f2cdd6bda7f2cc0c7da698ac01a0"}], "stats": {"total": 76, "additions": 33, "deletions": 43}, "files": [{"sha": "590d16e9a5de7754536bd4e3c41fa17a5decbb52", "filename": "compiler/rustc_feature/src/active.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/fbfaab2cb745e98ab0f01631803319fd4cce2709/compiler%2Frustc_feature%2Fsrc%2Factive.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbfaab2cb745e98ab0f01631803319fd4cce2709/compiler%2Frustc_feature%2Fsrc%2Factive.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_feature%2Fsrc%2Factive.rs?ref=fbfaab2cb745e98ab0f01631803319fd4cce2709", "patch": "@@ -579,6 +579,9 @@ declare_features! (\n     /// Allows trait bounds in `const fn`.\n     (active, const_fn_trait_bound, \"1.53.0\", Some(57563), None),\n \n+    /// Allows unsizing coercions in `const fn`.\n+    (active, const_fn_unsize, \"1.53.0\", Some(64992), None),\n+\n     /// Allows to use the `#[cmse_nonsecure_entry]` attribute.\n     (active, cmse_nonsecure_entry, \"1.48.0\", Some(75835), None),\n "}, {"sha": "0aa342f0efb8a815ba216ca5c775a549d3ddabfb", "filename": "compiler/rustc_mir/src/transform/check_consts/ops.rs", "status": "modified", "additions": 9, "deletions": 22, "changes": 31, "blob_url": "https://github.com/rust-lang/rust/blob/fbfaab2cb745e98ab0f01631803319fd4cce2709/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Fcheck_consts%2Fops.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbfaab2cb745e98ab0f01631803319fd4cce2709/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Fcheck_consts%2Fops.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Fcheck_consts%2Fops.rs?ref=fbfaab2cb745e98ab0f01631803319fd4cce2709", "patch": "@@ -540,14 +540,19 @@ impl NonConstOp for UnionAccess {\n pub struct UnsizingCast;\n impl NonConstOp for UnsizingCast {\n     fn status_in_item(&self, ccx: &ConstCx<'_, '_>) -> Status {\n-        mcf_status_in_item(ccx)\n+        if ccx.const_kind() != hir::ConstContext::ConstFn {\n+            Status::Allowed\n+        } else {\n+            Status::Unstable(sym::const_fn_unsize)\n+        }\n     }\n \n     fn build_error(&self, ccx: &ConstCx<'_, 'tcx>, span: Span) -> DiagnosticBuilder<'tcx> {\n-        mcf_build_error(\n-            ccx,\n+        feature_err(\n+            &ccx.tcx.sess.parse_sess,\n+            sym::const_fn_unsize,\n             span,\n-            \"unsizing casts to types besides slices are not allowed in const fn\",\n+            \"unsizing casts to types besides slices are not allowed in const fn\"\n         )\n     }\n }\n@@ -677,21 +682,3 @@ pub mod ty {\n         }\n     }\n }\n-\n-fn mcf_status_in_item(ccx: &ConstCx<'_, '_>) -> Status {\n-    if ccx.const_kind() != hir::ConstContext::ConstFn {\n-        Status::Allowed\n-    } else {\n-        Status::Unstable(sym::const_fn)\n-    }\n-}\n-\n-fn mcf_build_error(ccx: &ConstCx<'_, 'tcx>, span: Span, msg: &str) -> DiagnosticBuilder<'tcx> {\n-    let mut err = struct_span_err!(ccx.tcx.sess, span, E0723, \"{}\", msg);\n-    err.note(\n-        \"see issue #57563 <https://github.com/rust-lang/rust/issues/57563> \\\n-             for more information\",\n-    );\n-    err.help(\"add `#![feature(const_fn)]` to the crate attributes to enable\");\n-    err\n-}"}, {"sha": "6456e96fa6a112773bb4e4d774bd1a9afc4df6ce", "filename": "compiler/rustc_span/src/symbol.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/fbfaab2cb745e98ab0f01631803319fd4cce2709/compiler%2Frustc_span%2Fsrc%2Fsymbol.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbfaab2cb745e98ab0f01631803319fd4cce2709/compiler%2Frustc_span%2Fsrc%2Fsymbol.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_span%2Fsrc%2Fsymbol.rs?ref=fbfaab2cb745e98ab0f01631803319fd4cce2709", "patch": "@@ -385,6 +385,7 @@ symbols! {\n         const_fn_trait_bound,\n         const_fn_transmute,\n         const_fn_union,\n+        const_fn_unsize,\n         const_generic_defaults,\n         const_generics,\n         const_generics_defaults,"}, {"sha": "3a5dcec668ff6f310bac35f8c04aacd7c6d253fe", "filename": "library/alloc/src/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fbfaab2cb745e98ab0f01631803319fd4cce2709/library%2Falloc%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbfaab2cb745e98ab0f01631803319fd4cce2709/library%2Falloc%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Fsrc%2Flib.rs?ref=fbfaab2cb745e98ab0f01631803319fd4cce2709", "patch": "@@ -89,7 +89,7 @@\n #![feature(cfg_target_has_atomic)]\n #![feature(coerce_unsized)]\n #![feature(const_btree_new)]\n-#![feature(const_fn)]\n+#![cfg_attr(bootstrap, feature(const_fn))]\n #![cfg_attr(not(bootstrap), feature(const_fn_trait_bound))]\n #![feature(cow_is_borrowed)]\n #![feature(const_cow_is_borrowed)]"}, {"sha": "af06ea00f19b5191687458f2f1fe533161e6caa0", "filename": "library/core/src/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fbfaab2cb745e98ab0f01631803319fd4cce2709/library%2Fcore%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbfaab2cb745e98ab0f01631803319fd4cce2709/library%2Fcore%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Flib.rs?ref=fbfaab2cb745e98ab0f01631803319fd4cce2709", "patch": "@@ -81,7 +81,7 @@\n #![feature(const_refs_to_cell)]\n #![feature(const_panic)]\n #![feature(const_pin)]\n-#![feature(const_fn)]\n+#![cfg_attr(bootstrap, feature(const_fn))]\n #![feature(const_fn_union)]\n #![feature(const_impl_trait)]\n #![feature(const_fn_floating_point_arithmetic)]"}, {"sha": "e6ce7e12520f509504e1bc298418a705a31d364b", "filename": "src/test/ui/consts/min_const_fn/min_const_fn.stderr", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/fbfaab2cb745e98ab0f01631803319fd4cce2709/src%2Ftest%2Fui%2Fconsts%2Fmin_const_fn%2Fmin_const_fn.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fbfaab2cb745e98ab0f01631803319fd4cce2709/src%2Ftest%2Fui%2Fconsts%2Fmin_const_fn%2Fmin_const_fn.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fmin_const_fn%2Fmin_const_fn.stderr?ref=fbfaab2cb745e98ab0f01631803319fd4cce2709", "patch": "@@ -288,32 +288,32 @@ LL | const fn no_dyn_trait_ret() -> &'static dyn std::fmt::Debug { &() }\n    = note: see issue #57563 <https://github.com/rust-lang/rust/issues/57563> for more information\n    = help: add `#![feature(const_fn_trait_bound)]` to the crate attributes to enable\n \n-error[E0723]: unsizing casts to types besides slices are not allowed in const fn\n+error[E0658]: unsizing casts to types besides slices are not allowed in const fn\n   --> $DIR/min_const_fn.rs:134:63\n    |\n LL | const fn no_dyn_trait_ret() -> &'static dyn std::fmt::Debug { &() }\n    |                                                               ^^^\n    |\n-   = note: see issue #57563 <https://github.com/rust-lang/rust/issues/57563> for more information\n-   = help: add `#![feature(const_fn)]` to the crate attributes to enable\n+   = note: see issue #64992 <https://github.com/rust-lang/rust/issues/64992> for more information\n+   = help: add `#![feature(const_fn_unsize)]` to the crate attributes to enable\n \n-error[E0723]: unsizing casts to types besides slices are not allowed in const fn\n+error[E0658]: unsizing casts to types besides slices are not allowed in const fn\n   --> $DIR/min_const_fn.rs:134:63\n    |\n LL | const fn no_dyn_trait_ret() -> &'static dyn std::fmt::Debug { &() }\n    |                                                               ^^^\n    |\n-   = note: see issue #57563 <https://github.com/rust-lang/rust/issues/57563> for more information\n-   = help: add `#![feature(const_fn)]` to the crate attributes to enable\n+   = note: see issue #64992 <https://github.com/rust-lang/rust/issues/64992> for more information\n+   = help: add `#![feature(const_fn_unsize)]` to the crate attributes to enable\n \n-error[E0723]: unsizing casts to types besides slices are not allowed in const fn\n+error[E0658]: unsizing casts to types besides slices are not allowed in const fn\n   --> $DIR/min_const_fn.rs:141:42\n    |\n LL | const fn really_no_traits_i_mean_it() { (&() as &dyn std::fmt::Debug, ()).1 }\n    |                                          ^^^\n    |\n-   = note: see issue #57563 <https://github.com/rust-lang/rust/issues/57563> for more information\n-   = help: add `#![feature(const_fn)]` to the crate attributes to enable\n+   = note: see issue #64992 <https://github.com/rust-lang/rust/issues/64992> for more information\n+   = help: add `#![feature(const_fn_unsize)]` to the crate attributes to enable\n \n error[E0658]: function pointers cannot appear in constant functions\n   --> $DIR/min_const_fn.rs:144:21\n@@ -344,5 +344,5 @@ LL | const fn no_fn_ptrs2() -> fn() { fn foo() {} foo }\n \n error: aborting due to 39 previous errors\n \n-Some errors have detailed explanations: E0013, E0493, E0658, E0723.\n+Some errors have detailed explanations: E0013, E0493, E0658.\n For more information about an error, try `rustc --explain E0013`."}, {"sha": "cf635d656996e0baf728c9159b6f14529c0b47f4", "filename": "src/test/ui/consts/min_const_fn/min_const_fn_dyn.stderr", "status": "modified", "additions": 4, "deletions": 5, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/fbfaab2cb745e98ab0f01631803319fd4cce2709/src%2Ftest%2Fui%2Fconsts%2Fmin_const_fn%2Fmin_const_fn_dyn.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fbfaab2cb745e98ab0f01631803319fd4cce2709/src%2Ftest%2Fui%2Fconsts%2Fmin_const_fn%2Fmin_const_fn_dyn.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fmin_const_fn%2Fmin_const_fn_dyn.stderr?ref=fbfaab2cb745e98ab0f01631803319fd4cce2709", "patch": "@@ -7,16 +7,15 @@ LL |     x.0.field;\n    = note: see issue #57563 <https://github.com/rust-lang/rust/issues/57563> for more information\n    = help: add `#![feature(const_fn_trait_bound)]` to the crate attributes to enable\n \n-error[E0723]: unsizing casts to types besides slices are not allowed in const fn\n+error[E0658]: unsizing casts to types besides slices are not allowed in const fn\n   --> $DIR/min_const_fn_dyn.rs:12:66\n    |\n LL | const fn no_inner_dyn_trait_ret() -> Hide { Hide(HasDyn { field: &0 }) }\n    |                                                                  ^^\n    |\n-   = note: see issue #57563 <https://github.com/rust-lang/rust/issues/57563> for more information\n-   = help: add `#![feature(const_fn)]` to the crate attributes to enable\n+   = note: see issue #64992 <https://github.com/rust-lang/rust/issues/64992> for more information\n+   = help: add `#![feature(const_fn_unsize)]` to the crate attributes to enable\n \n error: aborting due to 2 previous errors\n \n-Some errors have detailed explanations: E0658, E0723.\n-For more information about an error, try `rustc --explain E0658`.\n+For more information about this error, try `rustc --explain E0658`."}, {"sha": "79691cddfb40311e4e0bd6a29cdd704ec8a28e37", "filename": "src/test/ui/consts/unsizing-cast-non-null.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/fbfaab2cb745e98ab0f01631803319fd4cce2709/src%2Ftest%2Fui%2Fconsts%2Funsizing-cast-non-null.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fbfaab2cb745e98ab0f01631803319fd4cce2709/src%2Ftest%2Fui%2Fconsts%2Funsizing-cast-non-null.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Funsizing-cast-non-null.stderr?ref=fbfaab2cb745e98ab0f01631803319fd4cce2709", "patch": "@@ -1,12 +1,12 @@\n-error[E0723]: unsizing casts to types besides slices are not allowed in const fn\n+error[E0658]: unsizing casts to types besides slices are not allowed in const fn\n   --> $DIR/unsizing-cast-non-null.rs:6:5\n    |\n LL |     NonNull::<[T; 0]>::dangling()\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n-   = note: see issue #57563 <https://github.com/rust-lang/rust/issues/57563> for more information\n-   = help: add `#![feature(const_fn)]` to the crate attributes to enable\n+   = note: see issue #64992 <https://github.com/rust-lang/rust/issues/64992> for more information\n+   = help: add `#![feature(const_fn_unsize)]` to the crate attributes to enable\n \n error: aborting due to previous error\n \n-For more information about this error, try `rustc --explain E0723`.\n+For more information about this error, try `rustc --explain E0658`."}]}