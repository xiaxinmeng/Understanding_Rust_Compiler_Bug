{"sha": "eff4a36b3e5cfbd2b08bb5a3e8d07396dc532033", "node_id": "MDY6Q29tbWl0NzI0NzEyOmVmZjRhMzZiM2U1Y2ZiZDJiMDhiYjVhM2U4ZDA3Mzk2ZGM1MzIwMzM=", "commit": {"author": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2012-10-11T21:09:44Z"}, "committer": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2012-10-11T21:18:52Z"}, "message": "manual: mention overloading, traits on the arithmetic and bitwise operators.", "tree": {"sha": "6624d35666503e3bc067b22f2881af1ef10b860c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6624d35666503e3bc067b22f2881af1ef10b860c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/eff4a36b3e5cfbd2b08bb5a3e8d07396dc532033", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/eff4a36b3e5cfbd2b08bb5a3e8d07396dc532033", "html_url": "https://github.com/rust-lang/rust/commit/eff4a36b3e5cfbd2b08bb5a3e8d07396dc532033", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/eff4a36b3e5cfbd2b08bb5a3e8d07396dc532033/comments", "author": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "committer": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "edf493f07b5316363a3ced23572c7ed79310b048", "url": "https://api.github.com/repos/rust-lang/rust/commits/edf493f07b5316363a3ced23572c7ed79310b048", "html_url": "https://github.com/rust-lang/rust/commit/edf493f07b5316363a3ced23572c7ed79310b048"}], "stats": {"total": 29, "additions": 19, "deletions": 10}, "files": [{"sha": "fb5337baf2ed64db3241a16bd7f21fb5221e6403", "filename": "doc/rust.md", "status": "modified", "additions": 19, "deletions": 10, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/eff4a36b3e5cfbd2b08bb5a3e8d07396dc532033/doc%2Frust.md", "raw_url": "https://github.com/rust-lang/rust/raw/eff4a36b3e5cfbd2b08bb5a3e8d07396dc532033/doc%2Frust.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/doc%2Frust.md?ref=eff4a36b3e5cfbd2b08bb5a3e8d07396dc532033", "patch": "@@ -1674,40 +1674,49 @@ Binary operators expressions are given in terms of\n \n #### Arithmetic operators\n \n-Binary arithmetic expressions require both their operands to be of the\n-same type, and can be applied only to numeric types, with the\n-exception of `+`, which acts both as addition operator on numbers and\n-as concatenate operator on vectors and strings.\n+Binary arithmetic expressions are syntactic sugar for calls to built-in traits,\n+defined in the `core::ops` module of the `core` library.\n+This means that arithmetic operators can be overridden for user-defined types.\n+The default meaning of the operators on standard types is given here.\n \n `+`\n   : Addition and vector/string concatenation.\n+    Calls the `add` method on the `core::ops::Add` trait.\n `-`\n   : Subtraction.\n+    Calls the `sub` method on the `core::ops::Sub` trait.\n `*`\n   : Multiplication.\n+    Calls the `mul` method on the `core::ops::Mul` trait.\n `/`\n   : Division.\n+    Calls the `div` method on the `core::ops::Div` trait.\n `%`\n-  : Remainder.\n+  : Modulo (a.k.a. \"remainder\").\n+    Calls the `modulo` method on the `core::ops::Modulo` trait.\n \n #### Bitwise operators\n \n-Bitwise operators apply only to integer types, and perform their\n-operation on the bits of the two's complement representation of the\n-values.\n+Bitwise operators apply are, like the [arithmetic operators](#arithmetic-operators),\n+syntactic sugar for calls to built-in traits.\n+This means that bitwise operators can be overridden for user-defined types.\n+The default meaning of the operators on standard types is given here.\n \n `&`\n   : And.\n+    Calls the `bitand` method on the `core::ops::BitAnd` trait.\n `|`\n   : Inclusive or.\n+    Calls the `bitor` method on the `core::ops::BitOr` trait.\n `^`\n   : Exclusive or.\n+    Calls the `bitxor` method on the `core::ops::BitXor` trait.\n `<<`\n   : Logical left shift.\n+    Calls the `shl` method on the `core::ops::Shl` trait.\n `>>`\n   : Logical right shift.\n-`>>>`\n-  : Arithmetic right shift.\n+    Calls the `shr` method on the `core::ops::Shr` trait.\n \n #### Lazy boolean operators\n "}]}