{"sha": "2fe41574a1695a6608d738f40ec51bc61fc7604a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJmZTQxNTc0YTE2OTVhNjYwOGQ3MzhmNDBlYzUxYmM2MWZjNzYwNGE=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2018-12-19T13:19:53Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2018-12-20T09:15:38Z"}, "message": "fix tests", "tree": {"sha": "5388654b8938fdf90c4a2a1c1f77fac168b46f8b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5388654b8938fdf90c4a2a1c1f77fac168b46f8b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2fe41574a1695a6608d738f40ec51bc61fc7604a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2fe41574a1695a6608d738f40ec51bc61fc7604a", "html_url": "https://github.com/rust-lang/rust/commit/2fe41574a1695a6608d738f40ec51bc61fc7604a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2fe41574a1695a6608d738f40ec51bc61fc7604a/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e6465e7e2a7e136edd652d5f4c93b961dd652cbc", "url": "https://api.github.com/repos/rust-lang/rust/commits/e6465e7e2a7e136edd652d5f4c93b961dd652cbc", "html_url": "https://github.com/rust-lang/rust/commit/e6465e7e2a7e136edd652d5f4c93b961dd652cbc"}], "stats": {"total": 39, "additions": 26, "deletions": 13}, "files": [{"sha": "9e441ca79a781f0559a0204f179a344155647d11", "filename": "crates/ra_analysis/src/imp.rs", "status": "modified", "additions": 12, "deletions": 3, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/2fe41574a1695a6608d738f40ec51bc61fc7604a/crates%2Fra_analysis%2Fsrc%2Fimp.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2fe41574a1695a6608d738f40ec51bc61fc7604a/crates%2Fra_analysis%2Fsrc%2Fimp.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_analysis%2Fsrc%2Fimp.rs?ref=2fe41574a1695a6608d738f40ec51bc61fc7604a", "patch": "@@ -43,10 +43,19 @@ impl AnalysisHostImpl {\n     pub fn apply_change(&mut self, change: AnalysisChange) {\n         log::info!(\"apply_change {:?}\", change);\n         // self.gc_syntax_trees();\n-        for root_id in change.new_roots {\n+        if !change.new_roots.is_empty() {\n+            let mut local_roots = Vec::clone(&self.db.local_roots());\n+            for (root_id, is_local) in change.new_roots {\n+                self.db\n+                    .query_mut(ra_db::SourceRootQuery)\n+                    .set(root_id, Default::default());\n+                if is_local {\n+                    local_roots.push(root_id);\n+                }\n+            }\n             self.db\n-                .query_mut(ra_db::SourceRootQuery)\n-                .set(root_id, Default::default());\n+                .query_mut(ra_db::LocalRootsQuery)\n+                .set((), Arc::new(local_roots));\n         }\n \n         for (root_id, root_change) in change.roots_changed {"}, {"sha": "a1d462528d60c943f8392f6d6750ea7e279604b2", "filename": "crates/ra_analysis/src/lib.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/2fe41574a1695a6608d738f40ec51bc61fc7604a/crates%2Fra_analysis%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2fe41574a1695a6608d738f40ec51bc61fc7604a/crates%2Fra_analysis%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_analysis%2Fsrc%2Flib.rs?ref=2fe41574a1695a6608d738f40ec51bc61fc7604a", "patch": "@@ -44,7 +44,7 @@ pub use ra_db::{\n \n #[derive(Default)]\n pub struct AnalysisChange {\n-    new_roots: Vec<SourceRootId>,\n+    new_roots: Vec<(SourceRootId, bool)>,\n     roots_changed: FxHashMap<SourceRootId, RootChange>,\n     files_changed: Vec<(FileId, Arc<String>)>,\n     libraries_added: Vec<LibraryData>,\n@@ -95,8 +95,8 @@ impl AnalysisChange {\n     pub fn new() -> AnalysisChange {\n         AnalysisChange::default()\n     }\n-    pub fn add_root(&mut self, root_id: SourceRootId) {\n-        self.new_roots.push(root_id);\n+    pub fn add_root(&mut self, root_id: SourceRootId, is_local: bool) {\n+        self.new_roots.push((root_id, is_local));\n     }\n     pub fn add_file(\n         &mut self,"}, {"sha": "7cbdfb9530f09698d2e193f48f16ce2600f7ba53", "filename": "crates/ra_analysis/src/mock_analysis.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2fe41574a1695a6608d738f40ec51bc61fc7604a/crates%2Fra_analysis%2Fsrc%2Fmock_analysis.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2fe41574a1695a6608d738f40ec51bc61fc7604a/crates%2Fra_analysis%2Fsrc%2Fmock_analysis.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_analysis%2Fsrc%2Fmock_analysis.rs?ref=2fe41574a1695a6608d738f40ec51bc61fc7604a", "patch": "@@ -80,7 +80,7 @@ impl MockAnalysis {\n         let mut file_map = FileMap::default();\n         let source_root = SourceRootId(0);\n         let mut change = AnalysisChange::new();\n-        change.add_root(source_root);\n+        change.add_root(source_root, true);\n         for (path, contents) in self.files.into_iter() {\n             assert!(path.starts_with('/'));\n             let path = RelativePathBuf::from_path(&path[1..]).unwrap();"}, {"sha": "9423e6571403c613253a315df32d67881237c2d4", "filename": "crates/ra_hir/src/mock.rs", "status": "modified", "additions": 8, "deletions": 5, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/2fe41574a1695a6608d738f40ec51bc61fc7604a/crates%2Fra_hir%2Fsrc%2Fmock.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2fe41574a1695a6608d738f40ec51bc61fc7604a/crates%2Fra_hir%2Fsrc%2Fmock.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fmock.rs?ref=2fe41574a1695a6608d738f40ec51bc61fc7604a", "patch": "@@ -2,12 +2,14 @@ use std::sync::Arc;\n \n use parking_lot::Mutex;\n use salsa::{self, Database};\n-use ra_db::{LocationIntener, BaseDatabase, FilePosition, FileId, WORKSPACE, CrateGraph, SourceRoot};\n+use ra_db::{LocationIntener, BaseDatabase, FilePosition, FileId, CrateGraph, SourceRoot, SourceRootId};\n use relative_path::RelativePathBuf;\n use test_utils::{parse_fixture, CURSOR_MARKER, extract_offset};\n \n use crate::{db, DefId, DefLoc};\n \n+const WORKSPACE: SourceRootId = SourceRootId(0);\n+\n #[derive(Debug)]\n pub(crate) struct MockDatabase {\n     events: Mutex<Option<Vec<salsa::Event<MockDatabase>>>>,\n@@ -106,11 +108,11 @@ impl Default for MockDatabase {\n             runtime: salsa::Runtime::default(),\n             id_maps: Default::default(),\n         };\n-        db.query_mut(ra_db::SourceRootQuery)\n-            .set(ra_db::WORKSPACE, Default::default());\n         db.query_mut(ra_db::CrateGraphQuery)\n             .set((), Default::default());\n-        db.query_mut(ra_db::LibrariesQuery)\n+        db.query_mut(ra_db::LocalRootsQuery)\n+            .set((), Default::default());\n+        db.query_mut(ra_db::LibraryRootsQuery)\n             .set((), Default::default());\n         db\n     }\n@@ -163,7 +165,8 @@ salsa::database_storage! {\n             fn file_relative_path() for ra_db::FileRelativePathQuery;\n             fn file_source_root() for ra_db::FileSourceRootQuery;\n             fn source_root() for ra_db::SourceRootQuery;\n-            fn libraries() for ra_db::LibrariesQuery;\n+            fn local_roots() for ra_db::LocalRootsQuery;\n+            fn library_roots() for ra_db::LibraryRootsQuery;\n             fn crate_graph() for ra_db::CrateGraphQuery;\n         }\n         impl ra_db::SyntaxDatabase {"}, {"sha": "785877c4ba3a9806d0863fa710178fc45c778952", "filename": "crates/ra_lsp_server/src/server_world.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/2fe41574a1695a6608d738f40ec51bc61fc7604a/crates%2Fra_lsp_server%2Fsrc%2Fserver_world.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2fe41574a1695a6608d738f40ec51bc61fc7604a/crates%2Fra_lsp_server%2Fsrc%2Fserver_world.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_lsp_server%2Fsrc%2Fserver_world.rs?ref=2fe41574a1695a6608d738f40ec51bc61fc7604a", "patch": "@@ -48,7 +48,8 @@ impl ServerWorldState {\n         let roots_to_scan = roots.len();\n         let (mut vfs, roots) = Vfs::new(roots);\n         for r in roots {\n-            change.add_root(SourceRootId(r.0));\n+            let is_local = vfs.root2path(r).starts_with(&root);\n+            change.add_root(SourceRootId(r.0), is_local);\n         }\n \n         let mut crate_graph = CrateGraph::default();"}]}