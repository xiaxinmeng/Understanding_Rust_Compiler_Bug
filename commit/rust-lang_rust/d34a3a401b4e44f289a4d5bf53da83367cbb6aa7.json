{"sha": "d34a3a401b4e44f289a4d5bf53da83367cbb6aa7", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQzNGEzYTQwMWI0ZTQ0ZjI4OWE0ZDViZjUzZGE4MzM2N2NiYjZhYTc=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-07-03T22:42:58Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-07-03T22:42:58Z"}, "message": "Auto merge of #85090 - Aaron1011:type-outlives-global, r=matthewjasper,jackh726\n\nReturn `EvaluatedToOk` when type in outlives predicate is global\n\nA global type doesn't reference any local regions or types, so it's\nguaranteed to outlive any region.", "tree": {"sha": "c7f1e37d3df6c707c8c8e892b73b8c0ba7f6413b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c7f1e37d3df6c707c8c8e892b73b8c0ba7f6413b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d34a3a401b4e44f289a4d5bf53da83367cbb6aa7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d34a3a401b4e44f289a4d5bf53da83367cbb6aa7", "html_url": "https://github.com/rust-lang/rust/commit/d34a3a401b4e44f289a4d5bf53da83367cbb6aa7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d34a3a401b4e44f289a4d5bf53da83367cbb6aa7/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "71b8742bbcbed2cd908dbc031d6552d8b528c037", "url": "https://api.github.com/repos/rust-lang/rust/commits/71b8742bbcbed2cd908dbc031d6552d8b528c037", "html_url": "https://github.com/rust-lang/rust/commit/71b8742bbcbed2cd908dbc031d6552d8b528c037"}, {"sha": "1f7cb16fce3f5a334a3b05d168e8c933473e227f", "url": "https://api.github.com/repos/rust-lang/rust/commits/1f7cb16fce3f5a334a3b05d168e8c933473e227f", "html_url": "https://github.com/rust-lang/rust/commit/1f7cb16fce3f5a334a3b05d168e8c933473e227f"}], "stats": {"total": 40, "additions": 24, "deletions": 16}, "files": [{"sha": "6cecff4b89d9d0c26390d631c6dc6f4691d750c4", "filename": "compiler/rustc_trait_selection/src/traits/select/mod.rs", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/d34a3a401b4e44f289a4d5bf53da83367cbb6aa7/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fselect%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d34a3a401b4e44f289a4d5bf53da83367cbb6aa7/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fselect%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fselect%2Fmod.rs?ref=d34a3a401b4e44f289a4d5bf53da83367cbb6aa7", "patch": "@@ -492,7 +492,15 @@ impl<'cx, 'tcx> SelectionContext<'cx, 'tcx> {\n                     None => Ok(EvaluatedToAmbig),\n                 },\n \n-                ty::PredicateKind::TypeOutlives(..) | ty::PredicateKind::RegionOutlives(..) => {\n+                ty::PredicateKind::TypeOutlives(pred) => {\n+                    if pred.0.is_global() {\n+                        Ok(EvaluatedToOk)\n+                    } else {\n+                        Ok(EvaluatedToOkModuloRegions)\n+                    }\n+                }\n+\n+                ty::PredicateKind::RegionOutlives(..) => {\n                     // We do not consider region relationships when evaluating trait matches.\n                     Ok(EvaluatedToOkModuloRegions)\n                 }"}, {"sha": "1be0b05fa2b8c25a753cff2b82e3abe610bcf7a7", "filename": "src/test/ui/traits/issue-83538-tainted-cache-after-cycle.rs", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/d34a3a401b4e44f289a4d5bf53da83367cbb6aa7/src%2Ftest%2Fui%2Ftraits%2Fissue-83538-tainted-cache-after-cycle.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d34a3a401b4e44f289a4d5bf53da83367cbb6aa7/src%2Ftest%2Fui%2Ftraits%2Fissue-83538-tainted-cache-after-cycle.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftraits%2Fissue-83538-tainted-cache-after-cycle.rs?ref=d34a3a401b4e44f289a4d5bf53da83367cbb6aa7", "patch": "@@ -17,8 +17,8 @@ pub struct Second {\n     d: Vec<First>,\n }\n \n-struct Third<f> {\n-    g: Vec<f>,\n+struct Third<'a, f> {\n+    g: Vec<(f, &'a f)>,\n }\n \n enum Ty {\n@@ -38,29 +38,29 @@ struct Sixth {\n }\n \n #[rustc_evaluate_where_clauses]\n-fn forward()\n+fn forward<'a>()\n where\n     Vec<First>: Unpin,\n-    Third<Ty>: Unpin,\n+    Third<'a, Ty>: Unpin,\n {\n }\n \n #[rustc_evaluate_where_clauses]\n-fn reverse()\n+fn reverse<'a>()\n where\n-    Third<Ty>: Unpin,\n+    Third<'a, Ty>: Unpin,\n     Vec<First>: Unpin,\n {\n }\n \n fn main() {\n-    // Key is that Vec<First> is \"ok\" and Third<Ty> is \"ok modulo regions\":\n+    // Key is that Vec<First> is \"ok\" and Third<'_, Ty> is \"ok modulo regions\":\n \n     forward();\n     //~^ ERROR evaluate(Binder(TraitPredicate(<std::vec::Vec<First> as std::marker::Unpin>), [])) = Ok(EvaluatedToOk)\n-    //~| ERROR evaluate(Binder(TraitPredicate(<Third<Ty> as std::marker::Unpin>), [])) = Ok(EvaluatedToOkModuloRegions)\n+    //~| ERROR evaluate(Binder(TraitPredicate(<Third<'_, Ty> as std::marker::Unpin>), [])) = Ok(EvaluatedToOkModuloRegions)\n \n     reverse();\n     //~^ ERROR evaluate(Binder(TraitPredicate(<std::vec::Vec<First> as std::marker::Unpin>), [])) = Ok(EvaluatedToOk)\n-    //~| ERROR evaluate(Binder(TraitPredicate(<Third<Ty> as std::marker::Unpin>), [])) = Ok(EvaluatedToOkModuloRegions)\n+    //~| ERROR evaluate(Binder(TraitPredicate(<Third<'_, Ty> as std::marker::Unpin>), [])) = Ok(EvaluatedToOkModuloRegions)\n }"}, {"sha": "43acc66fd73cbb00a589f918c15cd1357b61eee0", "filename": "src/test/ui/traits/issue-83538-tainted-cache-after-cycle.stderr", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/d34a3a401b4e44f289a4d5bf53da83367cbb6aa7/src%2Ftest%2Fui%2Ftraits%2Fissue-83538-tainted-cache-after-cycle.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d34a3a401b4e44f289a4d5bf53da83367cbb6aa7/src%2Ftest%2Fui%2Ftraits%2Fissue-83538-tainted-cache-after-cycle.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftraits%2Fissue-83538-tainted-cache-after-cycle.stderr?ref=d34a3a401b4e44f289a4d5bf53da83367cbb6aa7", "patch": "@@ -7,20 +7,20 @@ LL |     Vec<First>: Unpin,\n LL |     forward();\n    |     ^^^^^^^\n \n-error: evaluate(Binder(TraitPredicate(<Third<Ty> as std::marker::Unpin>), [])) = Ok(EvaluatedToOkModuloRegions)\n+error: evaluate(Binder(TraitPredicate(<Third<'_, Ty> as std::marker::Unpin>), [])) = Ok(EvaluatedToOkModuloRegions)\n   --> $DIR/issue-83538-tainted-cache-after-cycle.rs:59:5\n    |\n-LL |     Third<Ty>: Unpin,\n-   |                ----- predicate\n+LL |     Third<'a, Ty>: Unpin,\n+   |                    ----- predicate\n ...\n LL |     forward();\n    |     ^^^^^^^\n \n-error: evaluate(Binder(TraitPredicate(<Third<Ty> as std::marker::Unpin>), [])) = Ok(EvaluatedToOkModuloRegions)\n+error: evaluate(Binder(TraitPredicate(<Third<'_, Ty> as std::marker::Unpin>), [])) = Ok(EvaluatedToOkModuloRegions)\n   --> $DIR/issue-83538-tainted-cache-after-cycle.rs:63:5\n    |\n-LL |     Third<Ty>: Unpin,\n-   |                ----- predicate\n+LL |     Third<'a, Ty>: Unpin,\n+   |                    ----- predicate\n ...\n LL |     reverse();\n    |     ^^^^^^^"}]}