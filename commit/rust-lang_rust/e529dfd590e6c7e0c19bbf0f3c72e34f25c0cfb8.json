{"sha": "e529dfd590e6c7e0c19bbf0f3c72e34f25c0cfb8", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU1MjlkZmQ1OTBlNmM3ZTBjMTliYmYwZjNjNzJlMzRmMjVjMGNmYjg=", "commit": {"author": {"name": "Orson Peters", "email": "orsonpeters@gmail.com", "date": "2018-07-09T04:31:24Z"}, "committer": {"name": "Orson Peters", "email": "orsonpeters@gmail.com", "date": "2018-07-09T04:31:24Z"}, "message": "Removed a single trailing space. Oops.", "tree": {"sha": "bf310e3e568f661dc20086c8b216b0403252cdb5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bf310e3e568f661dc20086c8b216b0403252cdb5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e529dfd590e6c7e0c19bbf0f3c72e34f25c0cfb8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e529dfd590e6c7e0c19bbf0f3c72e34f25c0cfb8", "html_url": "https://github.com/rust-lang/rust/commit/e529dfd590e6c7e0c19bbf0f3c72e34f25c0cfb8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e529dfd590e6c7e0c19bbf0f3c72e34f25c0cfb8/comments", "author": {"login": "orlp", "id": 202547, "node_id": "MDQ6VXNlcjIwMjU0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/202547?v=4", "gravatar_id": "", "url": "https://api.github.com/users/orlp", "html_url": "https://github.com/orlp", "followers_url": "https://api.github.com/users/orlp/followers", "following_url": "https://api.github.com/users/orlp/following{/other_user}", "gists_url": "https://api.github.com/users/orlp/gists{/gist_id}", "starred_url": "https://api.github.com/users/orlp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/orlp/subscriptions", "organizations_url": "https://api.github.com/users/orlp/orgs", "repos_url": "https://api.github.com/users/orlp/repos", "events_url": "https://api.github.com/users/orlp/events{/privacy}", "received_events_url": "https://api.github.com/users/orlp/received_events", "type": "User", "site_admin": false}, "committer": {"login": "orlp", "id": 202547, "node_id": "MDQ6VXNlcjIwMjU0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/202547?v=4", "gravatar_id": "", "url": "https://api.github.com/users/orlp", "html_url": "https://github.com/orlp", "followers_url": "https://api.github.com/users/orlp/followers", "following_url": "https://api.github.com/users/orlp/following{/other_user}", "gists_url": "https://api.github.com/users/orlp/gists{/gist_id}", "starred_url": "https://api.github.com/users/orlp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/orlp/subscriptions", "organizations_url": "https://api.github.com/users/orlp/orgs", "repos_url": "https://api.github.com/users/orlp/repos", "events_url": "https://api.github.com/users/orlp/events{/privacy}", "received_events_url": "https://api.github.com/users/orlp/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6faa295cecc7940526dc467e39ce20e652851cfb", "url": "https://api.github.com/repos/rust-lang/rust/commits/6faa295cecc7940526dc467e39ce20e652851cfb", "html_url": "https://github.com/rust-lang/rust/commit/6faa295cecc7940526dc467e39ce20e652851cfb"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "5efe1e23309a7d7a84e96796149be522763511c9", "filename": "src/liballoc/vec.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e529dfd590e6c7e0c19bbf0f3c72e34f25c0cfb8/src%2Fliballoc%2Fvec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e529dfd590e6c7e0c19bbf0f3c72e34f25c0cfb8/src%2Fliballoc%2Fvec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Fvec.rs?ref=e529dfd590e6c7e0c19bbf0f3c72e34f25c0cfb8", "patch": "@@ -810,7 +810,7 @@ impl<T> Vec<T> {\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n     pub fn swap_remove(&mut self, index: usize) -> T {\n         unsafe {\n-            // We replace self[index] with the last element. Note that if the \n+            // We replace self[index] with the last element. Note that if the\n             // bounds check on hole succeeds there must be a last element (which\n             // can be self[index] itself).\n             let hole: *mut T = &mut self[index];"}]}