{"sha": "59ee333a0e952eb7b91d86447b489aa12efd0bd3", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU5ZWUzMzNhMGU5NTJlYjdiOTFkODY0NDdiNDg5YWExMmVmZDBiZDM=", "commit": {"author": {"name": "varkor", "email": "github@varkor.com", "date": "2018-04-11T12:19:10Z"}, "committer": {"name": "varkor", "email": "github@varkor.com", "date": "2018-04-11T12:19:10Z"}, "message": "Fix derive(PartialOrd) implementation", "tree": {"sha": "d7d1d75f82910d04bd1c2f9c65a0538544407cdf", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d7d1d75f82910d04bd1c2f9c65a0538544407cdf"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/59ee333a0e952eb7b91d86447b489aa12efd0bd3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/59ee333a0e952eb7b91d86447b489aa12efd0bd3", "html_url": "https://github.com/rust-lang/rust/commit/59ee333a0e952eb7b91d86447b489aa12efd0bd3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/59ee333a0e952eb7b91d86447b489aa12efd0bd3/comments", "author": {"login": "varkor", "id": 3943692, "node_id": "MDQ6VXNlcjM5NDM2OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3943692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/varkor", "html_url": "https://github.com/varkor", "followers_url": "https://api.github.com/users/varkor/followers", "following_url": "https://api.github.com/users/varkor/following{/other_user}", "gists_url": "https://api.github.com/users/varkor/gists{/gist_id}", "starred_url": "https://api.github.com/users/varkor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/varkor/subscriptions", "organizations_url": "https://api.github.com/users/varkor/orgs", "repos_url": "https://api.github.com/users/varkor/repos", "events_url": "https://api.github.com/users/varkor/events{/privacy}", "received_events_url": "https://api.github.com/users/varkor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "varkor", "id": 3943692, "node_id": "MDQ6VXNlcjM5NDM2OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3943692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/varkor", "html_url": "https://github.com/varkor", "followers_url": "https://api.github.com/users/varkor/followers", "following_url": "https://api.github.com/users/varkor/following{/other_user}", "gists_url": "https://api.github.com/users/varkor/gists{/gist_id}", "starred_url": "https://api.github.com/users/varkor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/varkor/subscriptions", "organizations_url": "https://api.github.com/users/varkor/orgs", "repos_url": "https://api.github.com/users/varkor/repos", "events_url": "https://api.github.com/users/varkor/events{/privacy}", "received_events_url": "https://api.github.com/users/varkor/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4b9b70c394e7f341b4016fce4cbf763d404b26f9", "url": "https://api.github.com/repos/rust-lang/rust/commits/4b9b70c394e7f341b4016fce4cbf763d404b26f9", "html_url": "https://github.com/rust-lang/rust/commit/4b9b70c394e7f341b4016fce4cbf763d404b26f9"}], "stats": {"total": 16, "additions": 10, "deletions": 6}, "files": [{"sha": "2f66616d73f29debc8448d65183173688b75f3da", "filename": "src/libsyntax_ext/deriving/cmp/partial_ord.rs", "status": "modified", "additions": 10, "deletions": 6, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/59ee333a0e952eb7b91d86447b489aa12efd0bd3/src%2Flibsyntax_ext%2Fderiving%2Fcmp%2Fpartial_ord.rs", "raw_url": "https://github.com/rust-lang/rust/raw/59ee333a0e952eb7b91d86447b489aa12efd0bd3/src%2Flibsyntax_ext%2Fderiving%2Fcmp%2Fpartial_ord.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax_ext%2Fderiving%2Fcmp%2Fpartial_ord.rs?ref=59ee333a0e952eb7b91d86447b489aa12efd0bd3", "patch": "@@ -214,14 +214,18 @@ fn cs_op(less: bool, equal: bool, cx: &mut ExtCtxt, span: Span, substr: &Substru\n             _ => cx.span_bug(span, \"not exactly 2 arguments in `derive(PartialOrd)`\"),\n         };\n \n-        let cmp = cx.expr_binary(span, op, self_f.clone(), other_f.clone());\n+        let strict_ineq = cx.expr_binary(span, op, self_f.clone(), other_f.clone());\n \n-        let not_cmp = cx.expr_unary(span,\n-                                    ast::UnOp::Not,\n-                                    cx.expr_binary(span, op, other_f.clone(), self_f));\n+        let deleg_cmp = if !equal {\n+            cx.expr_unary(span,\n+                          ast::UnOp::Not,\n+                          cx.expr_binary(span, op, other_f.clone(), self_f))\n+        } else {\n+            cx.expr_binary(span, BinOpKind::Eq, self_f, other_f.clone())\n+        };\n \n-        let and = cx.expr_binary(span, BinOpKind::And, not_cmp, subexpr);\n-        cx.expr_binary(span, BinOpKind::Or, cmp, and)\n+        let and = cx.expr_binary(span, BinOpKind::And, deleg_cmp, subexpr);\n+        cx.expr_binary(span, BinOpKind::Or, strict_ineq, and)\n     },\n             cx.expr_bool(span, equal),\n             Box::new(|cx, span, (self_args, tag_tuple), _non_self_args| {"}]}