{"sha": "7f286a8e38258402c6e8e564864ac0132fac2004", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdmMjg2YThlMzgyNTg0MDJjNmU4ZTU2NDg2NGFjMDEzMmZhYzIwMDQ=", "commit": {"author": {"name": "Mark Simulacrum", "email": "mark.simulacrum@gmail.com", "date": "2017-05-31T16:52:50Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2017-05-31T16:52:50Z"}, "message": "Rollup merge of #42330 - qnighy:macro-named-default, r=petrochenkov\n\nParse macros named \"default\" correctly.\n\nFixes #42292.", "tree": {"sha": "8c4084d31f5b5c2cbc0d4fcf7d32fe9f3f6a932f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8c4084d31f5b5c2cbc0d4fcf7d32fe9f3f6a932f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7f286a8e38258402c6e8e564864ac0132fac2004", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7f286a8e38258402c6e8e564864ac0132fac2004", "html_url": "https://github.com/rust-lang/rust/commit/7f286a8e38258402c6e8e564864ac0132fac2004", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7f286a8e38258402c6e8e564864ac0132fac2004/comments", "author": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0c339ffbc0ef8130c339181e20032f5d1fbb6c76", "url": "https://api.github.com/repos/rust-lang/rust/commits/0c339ffbc0ef8130c339181e20032f5d1fbb6c76", "html_url": "https://github.com/rust-lang/rust/commit/0c339ffbc0ef8130c339181e20032f5d1fbb6c76"}, {"sha": "b670930933fd8af2316364d4e15e6a22983cf78d", "url": "https://api.github.com/repos/rust-lang/rust/commits/b670930933fd8af2316364d4e15e6a22983cf78d", "html_url": "https://github.com/rust-lang/rust/commit/b670930933fd8af2316364d4e15e6a22983cf78d"}], "stats": {"total": 69, "additions": 50, "deletions": 19}, "files": [{"sha": "936a2e8b2e1be93ae0c9596d8da869a95e91e233", "filename": "src/libsyntax/parse/parser.rs", "status": "modified", "additions": 23, "deletions": 19, "changes": 42, "blob_url": "https://github.com/rust-lang/rust/blob/7f286a8e38258402c6e8e564864ac0132fac2004/src%2Flibsyntax%2Fparse%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7f286a8e38258402c6e8e564864ac0132fac2004/src%2Flibsyntax%2Fparse%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fparser.rs?ref=7f286a8e38258402c6e8e564864ac0132fac2004", "patch": "@@ -698,24 +698,6 @@ impl<'a> Parser<'a> {\n         }\n     }\n \n-    pub fn check_contextual_keyword(&mut self, ident: Ident) -> bool {\n-        self.expected_tokens.push(TokenType::Token(token::Ident(ident)));\n-        if let token::Ident(ref cur_ident) = self.token {\n-            cur_ident.name == ident.name\n-        } else {\n-            false\n-        }\n-    }\n-\n-    pub fn eat_contextual_keyword(&mut self, ident: Ident) -> bool {\n-        if self.check_contextual_keyword(ident) {\n-            self.bump();\n-            true\n-        } else {\n-            false\n-        }\n-    }\n-\n     /// If the given word is not a keyword, signal an error.\n     /// If the next token is not the given word, signal an error.\n     /// Otherwise, eat it.\n@@ -3755,6 +3737,28 @@ impl<'a> Parser<'a> {\n         self.look_ahead(1, |t| t.is_ident() && !t.is_any_keyword())\n     }\n \n+    fn is_defaultness(&self) -> bool {\n+        // `pub` is included for better error messages\n+        self.token.is_keyword(keywords::Default) &&\n+        self.look_ahead(1, |t| t.is_keyword(keywords::Impl) ||\n+                        t.is_keyword(keywords::Const) ||\n+                        t.is_keyword(keywords::Fn) ||\n+                        t.is_keyword(keywords::Unsafe) ||\n+                        t.is_keyword(keywords::Extern) ||\n+                        t.is_keyword(keywords::Type) ||\n+                        t.is_keyword(keywords::Pub))\n+    }\n+\n+    fn eat_defaultness(&mut self) -> bool {\n+        let is_defaultness = self.is_defaultness();\n+        if is_defaultness {\n+            self.bump()\n+        } else {\n+            self.expected_tokens.push(TokenType::Keyword(keywords::Default));\n+        }\n+        is_defaultness\n+    }\n+\n     fn eat_macro_def(&mut self, attrs: &[Attribute], vis: &Visibility)\n                      -> PResult<'a, Option<P<Item>>> {\n         let lo = self.span;\n@@ -5229,7 +5233,7 @@ impl<'a> Parser<'a> {\n \n     /// Parse defaultness: DEFAULT or nothing\n     fn parse_defaultness(&mut self) -> PResult<'a, Defaultness> {\n-        if self.eat_contextual_keyword(keywords::Default.ident()) {\n+        if self.eat_defaultness() {\n             Ok(Defaultness::Default)\n         } else {\n             Ok(Defaultness::Final)"}, {"sha": "028d59a19dd6496e9f02b37a91f1848af393f419", "filename": "src/test/run-pass/macro-named-default.rs", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/7f286a8e38258402c6e8e564864ac0132fac2004/src%2Ftest%2Frun-pass%2Fmacro-named-default.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7f286a8e38258402c6e8e564864ac0132fac2004/src%2Ftest%2Frun-pass%2Fmacro-named-default.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fmacro-named-default.rs?ref=7f286a8e38258402c6e8e564864ac0132fac2004", "patch": "@@ -0,0 +1,27 @@\n+// Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+macro_rules! default {\n+    ($($x:tt)*) => { $($x)* }\n+}\n+\n+default! {\n+    struct A;\n+}\n+\n+impl A {\n+    default! {\n+        fn foo(&self) {}\n+    }\n+}\n+\n+fn main() {\n+    A.foo();\n+}"}]}