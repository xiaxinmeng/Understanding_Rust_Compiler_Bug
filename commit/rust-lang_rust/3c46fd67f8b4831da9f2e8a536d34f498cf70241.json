{"sha": "3c46fd67f8b4831da9f2e8a536d34f498cf70241", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNjNDZmZDY3ZjhiNDgzMWRhOWYyZThhNTM2ZDM0ZjQ5OGNmNzAyNDE=", "commit": {"author": {"name": "Aman Arora", "email": "me@aman-arora.com", "date": "2020-10-08T04:28:53Z"}, "committer": {"name": "Aman Arora", "email": "me@aman-arora.com", "date": "2020-10-11T07:33:27Z"}, "message": "traits diagnostics: Don't print closure/generator upvar_tys tuple\n\nCo-authored-by: Roxane Fruytier <roxane.fruytier@hotmail.com>", "tree": {"sha": "31a907436ecdfdf681ac2d3d57872680dcb5041b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/31a907436ecdfdf681ac2d3d57872680dcb5041b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3c46fd67f8b4831da9f2e8a536d34f498cf70241", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3c46fd67f8b4831da9f2e8a536d34f498cf70241", "html_url": "https://github.com/rust-lang/rust/commit/3c46fd67f8b4831da9f2e8a536d34f498cf70241", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3c46fd67f8b4831da9f2e8a536d34f498cf70241/comments", "author": {"login": "arora-aman", "id": 4193035, "node_id": "MDQ6VXNlcjQxOTMwMzU=", "avatar_url": "https://avatars.githubusercontent.com/u/4193035?v=4", "gravatar_id": "", "url": "https://api.github.com/users/arora-aman", "html_url": "https://github.com/arora-aman", "followers_url": "https://api.github.com/users/arora-aman/followers", "following_url": "https://api.github.com/users/arora-aman/following{/other_user}", "gists_url": "https://api.github.com/users/arora-aman/gists{/gist_id}", "starred_url": "https://api.github.com/users/arora-aman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/arora-aman/subscriptions", "organizations_url": "https://api.github.com/users/arora-aman/orgs", "repos_url": "https://api.github.com/users/arora-aman/repos", "events_url": "https://api.github.com/users/arora-aman/events{/privacy}", "received_events_url": "https://api.github.com/users/arora-aman/received_events", "type": "User", "site_admin": false}, "committer": {"login": "arora-aman", "id": 4193035, "node_id": "MDQ6VXNlcjQxOTMwMzU=", "avatar_url": "https://avatars.githubusercontent.com/u/4193035?v=4", "gravatar_id": "", "url": "https://api.github.com/users/arora-aman", "html_url": "https://github.com/arora-aman", "followers_url": "https://api.github.com/users/arora-aman/followers", "following_url": "https://api.github.com/users/arora-aman/following{/other_user}", "gists_url": "https://api.github.com/users/arora-aman/gists{/gist_id}", "starred_url": "https://api.github.com/users/arora-aman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/arora-aman/subscriptions", "organizations_url": "https://api.github.com/users/arora-aman/orgs", "repos_url": "https://api.github.com/users/arora-aman/repos", "events_url": "https://api.github.com/users/arora-aman/events{/privacy}", "received_events_url": "https://api.github.com/users/arora-aman/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "08d1ab0bf1c01948135548f5404eb625e454160e", "url": "https://api.github.com/repos/rust-lang/rust/commits/08d1ab0bf1c01948135548f5404eb625e454160e", "html_url": "https://github.com/rust-lang/rust/commit/08d1ab0bf1c01948135548f5404eb625e454160e"}], "stats": {"total": 36, "additions": 23, "deletions": 13}, "files": [{"sha": "7e86548f6ab9a5eab6acd5547bd023b074c99681", "filename": "compiler/rustc_trait_selection/src/traits/error_reporting/suggestions.rs", "status": "modified", "additions": 23, "deletions": 1, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/3c46fd67f8b4831da9f2e8a536d34f498cf70241/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Ferror_reporting%2Fsuggestions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3c46fd67f8b4831da9f2e8a536d34f498cf70241/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Ferror_reporting%2Fsuggestions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Ferror_reporting%2Fsuggestions.rs?ref=3c46fd67f8b4831da9f2e8a536d34f498cf70241", "patch": "@@ -1922,7 +1922,29 @@ impl<'a, 'tcx> InferCtxtExt<'tcx> for InferCtxt<'a, 'tcx> {\n                     return;\n                 }\n \n-                err.note(&format!(\"required because it appears within the type `{}`\", ty));\n+                // If the obligation for a tuple is set directly by a Generator or Closure,\n+                // then the tuple must be the one containing capture types.\n+                let is_upvar_tys_infer_tuple = if !matches!(ty.kind(), ty::Tuple(..)) {\n+                    false\n+                } else {\n+                    if let ObligationCauseCode::BuiltinDerivedObligation(ref data) =\n+                        *data.parent_code\n+                    {\n+                        let parent_trait_ref =\n+                            self.resolve_vars_if_possible(&data.parent_trait_ref);\n+                        let ty = parent_trait_ref.skip_binder().self_ty();\n+                        matches!(ty.kind(), ty::Generator(..))\n+                            || matches!(ty.kind(), ty::Closure(..))\n+                    } else {\n+                        false\n+                    }\n+                };\n+\n+                // Don't print the tuple of capture types\n+                if !is_upvar_tys_infer_tuple {\n+                    err.note(&format!(\"required because it appears within the type `{}`\", ty));\n+                }\n+\n                 obligated_types.push(ty);\n \n                 let parent_predicate = parent_trait_ref.without_const().to_predicate(tcx);"}, {"sha": "e97d088cf3ed3d5a82897f0fa3727f05d63278ad", "filename": "src/test/ui/async-await/issue-68112.stderr", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/3c46fd67f8b4831da9f2e8a536d34f498cf70241/src%2Ftest%2Fui%2Fasync-await%2Fissue-68112.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/3c46fd67f8b4831da9f2e8a536d34f498cf70241/src%2Ftest%2Fui%2Fasync-await%2Fissue-68112.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fasync-await%2Fissue-68112.stderr?ref=3c46fd67f8b4831da9f2e8a536d34f498cf70241", "patch": "@@ -41,7 +41,6 @@ LL |     require_send(send_fut);\n    |\n    = help: the trait `Sync` is not implemented for `RefCell<i32>`\n    = note: required because of the requirements on the impl of `Send` for `Arc<RefCell<i32>>`\n-   = note: required because it appears within the type `(Arc<RefCell<i32>>,)`\n    = note: required because it appears within the type `[static generator@$DIR/issue-68112.rs:47:31: 47:36 {}]`\n    = note: required because it appears within the type `from_generator::GenFuture<[static generator@$DIR/issue-68112.rs:47:31: 47:36 {}]>`\n    = note: required because it appears within the type `impl Future`"}, {"sha": "da5e25c0d18fa7061a71e23b7a46dda98fc8cace", "filename": "src/test/ui/closures/closure-move-sync.stderr", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3c46fd67f8b4831da9f2e8a536d34f498cf70241/src%2Ftest%2Fui%2Fclosures%2Fclosure-move-sync.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/3c46fd67f8b4831da9f2e8a536d34f498cf70241/src%2Ftest%2Fui%2Fclosures%2Fclosure-move-sync.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fclosures%2Fclosure-move-sync.stderr?ref=3c46fd67f8b4831da9f2e8a536d34f498cf70241", "patch": "@@ -11,7 +11,6 @@ LL |     F: Send + 'static,\n    |\n    = help: the trait `Sync` is not implemented for `std::sync::mpsc::Receiver<()>`\n    = note: required because of the requirements on the impl of `Send` for `&std::sync::mpsc::Receiver<()>`\n-   = note: required because it appears within the type `(&std::sync::mpsc::Receiver<()>,)`\n    = note: required because it appears within the type `[closure@$DIR/closure-move-sync.rs:6:27: 9:6]`\n \n error[E0277]: `Sender<()>` cannot be shared between threads safely\n@@ -27,7 +26,6 @@ LL |     F: Send + 'static,\n    |\n    = help: the trait `Sync` is not implemented for `Sender<()>`\n    = note: required because of the requirements on the impl of `Send` for `&Sender<()>`\n-   = note: required because it appears within the type `(&Sender<()>,)`\n    = note: required because it appears within the type `[closure@$DIR/closure-move-sync.rs:18:19: 18:42]`\n \n error: aborting due to 2 previous errors"}, {"sha": "96a8d6d70e016affe934bbb195154e68a53d77ef", "filename": "src/test/ui/generator/issue-68112.stderr", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/3c46fd67f8b4831da9f2e8a536d34f498cf70241/src%2Ftest%2Fui%2Fgenerator%2Fissue-68112.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/3c46fd67f8b4831da9f2e8a536d34f498cf70241/src%2Ftest%2Fui%2Fgenerator%2Fissue-68112.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fgenerator%2Fissue-68112.stderr?ref=3c46fd67f8b4831da9f2e8a536d34f498cf70241", "patch": "@@ -29,7 +29,6 @@ LL |     require_send(send_gen);\n    |\n    = help: the trait `Sync` is not implemented for `RefCell<i32>`\n    = note: required because of the requirements on the impl of `Send` for `Arc<RefCell<i32>>`\n-   = note: required because it appears within the type `(Arc<RefCell<i32>>,)`\n    = note: required because it appears within the type `[generator@$DIR/issue-68112.rs:38:5: 41:6 {()}]`\n    = note: required because it appears within the type `impl Generator`\n    = note: required because it appears within the type `impl Generator`"}, {"sha": "2384ed3d24972ad458192c03f22e80552aab79d6", "filename": "src/test/ui/generator/not-send-sync.stderr", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/3c46fd67f8b4831da9f2e8a536d34f498cf70241/src%2Ftest%2Fui%2Fgenerator%2Fnot-send-sync.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/3c46fd67f8b4831da9f2e8a536d34f498cf70241/src%2Ftest%2Fui%2Fgenerator%2Fnot-send-sync.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fgenerator%2Fnot-send-sync.stderr?ref=3c46fd67f8b4831da9f2e8a536d34f498cf70241", "patch": "@@ -9,7 +9,6 @@ LL |     assert_send(|| {\n    |\n    = help: the trait `Sync` is not implemented for `Cell<i32>`\n    = note: required because of the requirements on the impl of `Send` for `&Cell<i32>`\n-   = note: required because it appears within the type `(&Cell<i32>,)`\n    = note: required because it appears within the type `[generator@$DIR/not-send-sync.rs:16:17: 20:6 _]`\n \n error: generator cannot be shared between threads safely"}, {"sha": "b5c63584c6c1487595e14f0133b771e59951d4b0", "filename": "src/test/ui/generator/print/generator-print-verbose-1.stderr", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/3c46fd67f8b4831da9f2e8a536d34f498cf70241/src%2Ftest%2Fui%2Fgenerator%2Fprint%2Fgenerator-print-verbose-1.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/3c46fd67f8b4831da9f2e8a536d34f498cf70241/src%2Ftest%2Fui%2Fgenerator%2Fprint%2Fgenerator-print-verbose-1.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fgenerator%2Fprint%2Fgenerator-print-verbose-1.stderr?ref=3c46fd67f8b4831da9f2e8a536d34f498cf70241", "patch": "@@ -29,7 +29,6 @@ LL |     require_send(send_gen);\n    |\n    = help: the trait `Sync` is not implemented for `RefCell<i32>`\n    = note: required because of the requirements on the impl of `Send` for `Arc<RefCell<i32>>`\n-   = note: required because it appears within the type `(Arc<RefCell<i32>>,)`\n    = note: required because it appears within the type `[make_gen2<Arc<RefCell<i32>>>::{closure#0} upvar_tys=(Arc<RefCell<i32>>) {()}]`\n    = note: required because it appears within the type `Opaque(DefId(0:29 ~ generator_print_verbose_1[317d]::make_gen2::{opaque#0}), [std::sync::Arc<std::cell::RefCell<i32>>])`\n    = note: required because it appears within the type `Opaque(DefId(0:32 ~ generator_print_verbose_1[317d]::make_non_send_generator2::{opaque#0}), [])`"}, {"sha": "f23949091d912fe0ef99760e3fdcdfe9531f13bb", "filename": "src/test/ui/generator/print/generator-print-verbose-2.stderr", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/3c46fd67f8b4831da9f2e8a536d34f498cf70241/src%2Ftest%2Fui%2Fgenerator%2Fprint%2Fgenerator-print-verbose-2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/3c46fd67f8b4831da9f2e8a536d34f498cf70241/src%2Ftest%2Fui%2Fgenerator%2Fprint%2Fgenerator-print-verbose-2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fgenerator%2Fprint%2Fgenerator-print-verbose-2.stderr?ref=3c46fd67f8b4831da9f2e8a536d34f498cf70241", "patch": "@@ -9,7 +9,6 @@ LL |     assert_send(|| {\n    |\n    = help: the trait `Sync` is not implemented for `Cell<i32>`\n    = note: required because of the requirements on the impl of `Send` for `&'_#3r Cell<i32>`\n-   = note: required because it appears within the type `(&'_#3r Cell<i32>,)`\n    = note: required because it appears within the type `[main::{closure#1} upvar_tys=(&'_#3r Cell<i32>) _#17t]`\n \n error: generator cannot be shared between threads safely"}, {"sha": "6b2b8248a4f21c71f3c15d9280fab58148ebd360", "filename": "src/test/ui/impl-trait/auto-trait-leak2.stderr", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3c46fd67f8b4831da9f2e8a536d34f498cf70241/src%2Ftest%2Fui%2Fimpl-trait%2Fauto-trait-leak2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/3c46fd67f8b4831da9f2e8a536d34f498cf70241/src%2Ftest%2Fui%2Fimpl-trait%2Fauto-trait-leak2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimpl-trait%2Fauto-trait-leak2.stderr?ref=3c46fd67f8b4831da9f2e8a536d34f498cf70241", "patch": "@@ -11,7 +11,6 @@ LL |     send(before());\n    |     ^^^^ `Rc<Cell<i32>>` cannot be sent between threads safely\n    |\n    = help: within `impl Fn<(i32,)>`, the trait `Send` is not implemented for `Rc<Cell<i32>>`\n-   = note: required because it appears within the type `(Rc<Cell<i32>>,)`\n    = note: required because it appears within the type `[closure@$DIR/auto-trait-leak2.rs:7:5: 7:22]`\n    = note: required because it appears within the type `impl Fn<(i32,)>`\n \n@@ -28,7 +27,6 @@ LL | fn after() -> impl Fn(i32) {\n    |               ------------ within this `impl Fn<(i32,)>`\n    |\n    = help: within `impl Fn<(i32,)>`, the trait `Send` is not implemented for `Rc<Cell<i32>>`\n-   = note: required because it appears within the type `(Rc<Cell<i32>>,)`\n    = note: required because it appears within the type `[closure@$DIR/auto-trait-leak2.rs:24:5: 24:22]`\n    = note: required because it appears within the type `impl Fn<(i32,)>`\n "}, {"sha": "dd43da11664453e0108bbac3f294459934adf965", "filename": "src/test/ui/interior-mutability/interior-mutability.stderr", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/3c46fd67f8b4831da9f2e8a536d34f498cf70241/src%2Ftest%2Fui%2Finterior-mutability%2Finterior-mutability.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/3c46fd67f8b4831da9f2e8a536d34f498cf70241/src%2Ftest%2Fui%2Finterior-mutability%2Finterior-mutability.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Finterior-mutability%2Finterior-mutability.stderr?ref=3c46fd67f8b4831da9f2e8a536d34f498cf70241", "patch": "@@ -12,7 +12,6 @@ LL | pub fn catch_unwind<F: FnOnce() -> R + UnwindSafe, R>(f: F) -> Result<R> {\n    = help: within `Cell<i32>`, the trait `RefUnwindSafe` is not implemented for `UnsafeCell<i32>`\n    = note: required because it appears within the type `Cell<i32>`\n    = note: required because of the requirements on the impl of `UnwindSafe` for `&Cell<i32>`\n-   = note: required because it appears within the type `(&Cell<i32>,)`\n    = note: required because it appears within the type `[closure@$DIR/interior-mutability.rs:5:18: 5:35]`\n \n error: aborting due to previous error"}, {"sha": "c7d67a991bffc3164fdd28bab5e76b666268e195", "filename": "src/test/ui/kindck/kindck-nonsendable-1.stderr", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/3c46fd67f8b4831da9f2e8a536d34f498cf70241/src%2Ftest%2Fui%2Fkindck%2Fkindck-nonsendable-1.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/3c46fd67f8b4831da9f2e8a536d34f498cf70241/src%2Ftest%2Fui%2Fkindck%2Fkindck-nonsendable-1.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fkindck%2Fkindck-nonsendable-1.stderr?ref=3c46fd67f8b4831da9f2e8a536d34f498cf70241", "patch": "@@ -10,7 +10,6 @@ LL |     bar(move|| foo(x));\n    |     `Rc<usize>` cannot be sent between threads safely\n    |\n    = help: within `[closure@$DIR/kindck-nonsendable-1.rs:9:9: 9:22]`, the trait `Send` is not implemented for `Rc<usize>`\n-   = note: required because it appears within the type `(Rc<usize>,)`\n    = note: required because it appears within the type `[closure@$DIR/kindck-nonsendable-1.rs:9:9: 9:22]`\n \n error: aborting due to previous error"}, {"sha": "ef7fb4ad7b266ee7dbb26a1eadeaefdcb939b70a", "filename": "src/test/ui/no-send-res-ports.stderr", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/3c46fd67f8b4831da9f2e8a536d34f498cf70241/src%2Ftest%2Fui%2Fno-send-res-ports.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/3c46fd67f8b4831da9f2e8a536d34f498cf70241/src%2Ftest%2Fui%2Fno-send-res-ports.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fno-send-res-ports.stderr?ref=3c46fd67f8b4831da9f2e8a536d34f498cf70241", "patch": "@@ -19,7 +19,6 @@ LL |       F: Send + 'static,\n    = help: within `[closure@$DIR/no-send-res-ports.rs:25:19: 29:6]`, the trait `Send` is not implemented for `Rc<()>`\n    = note: required because it appears within the type `Port<()>`\n    = note: required because it appears within the type `Foo`\n-   = note: required because it appears within the type `(Foo,)`\n    = note: required because it appears within the type `[closure@$DIR/no-send-res-ports.rs:25:19: 29:6]`\n \n error: aborting due to previous error"}]}