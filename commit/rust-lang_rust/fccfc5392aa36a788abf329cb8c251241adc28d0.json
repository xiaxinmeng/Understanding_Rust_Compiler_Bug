{"sha": "fccfc5392aa36a788abf329cb8c251241adc28d0", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZjY2ZjNTM5MmFhMzZhNzg4YWJmMzI5Y2I4YzI1MTI0MWFkYzI4ZDA=", "commit": {"author": {"name": "QuietMisdreavus", "email": "bryan@icesoldier.me", "date": "2016-09-23T17:56:08Z"}, "committer": {"name": "QuietMisdreavus", "email": "bryan@icesoldier.me", "date": "2016-09-23T18:17:07Z"}, "message": "rustdoc: format non-self arguments for struct methods on their own line", "tree": {"sha": "ec2eb0d6905a6ecc725ac97e3ebda16996167ec4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ec2eb0d6905a6ecc725ac97e3ebda16996167ec4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fccfc5392aa36a788abf329cb8c251241adc28d0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fccfc5392aa36a788abf329cb8c251241adc28d0", "html_url": "https://github.com/rust-lang/rust/commit/fccfc5392aa36a788abf329cb8c251241adc28d0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fccfc5392aa36a788abf329cb8c251241adc28d0/comments", "author": null, "committer": null, "parents": [{"sha": "9cfd4ef38f99d4574049b1b1c641b80672cd1cff", "url": "https://api.github.com/repos/rust-lang/rust/commits/9cfd4ef38f99d4574049b1b1c641b80672cd1cff", "html_url": "https://github.com/rust-lang/rust/commit/9cfd4ef38f99d4574049b1b1c641b80672cd1cff"}], "stats": {"total": 6, "additions": 5, "deletions": 1}, "files": [{"sha": "853741db7ae4ee9514f92d65e480de081fa4ca8e", "filename": "src/librustdoc/html/format.rs", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/fccfc5392aa36a788abf329cb8c251241adc28d0/src%2Flibrustdoc%2Fhtml%2Fformat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fccfc5392aa36a788abf329cb8c251241adc28d0/src%2Flibrustdoc%2Fhtml%2Fformat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fformat.rs?ref=fccfc5392aa36a788abf329cb8c251241adc28d0", "patch": "@@ -657,7 +657,6 @@ impl<'a> fmt::Display for Method<'a> {\n         let decl = self.0;\n         let mut args = String::new();\n         for (i, input) in decl.inputs.values.iter().enumerate() {\n-            if i > 0 || !args.is_empty() { args.push_str(\", \"); }\n             if let Some(selfty) = input.to_self() {\n                 match selfty {\n                     clean::SelfValue => args.push_str(\"self\"),\n@@ -672,11 +671,16 @@ impl<'a> fmt::Display for Method<'a> {\n                     }\n                 }\n             } else {\n+                args.push_str(\"\\n    \");\n                 if !input.name.is_empty() {\n                     args.push_str(&format!(\"{}: \", input.name));\n                 }\n                 args.push_str(&format!(\"{}\", input.type_));\n             }\n+            if i + 1 < decl.inputs.values.len() { args.push_str(\",\"); }\n+        }\n+        if let Some(None) = decl.inputs.values.iter().last().map(|val| val.to_self()) {\n+            args.push_str(\"\\n\");\n         }\n         write!(f, \"({args}){arrow}\", args = args, arrow = decl.output)\n     }"}]}