{"sha": "65eecc6b59f69bac45ddce8081f5edd23e74b17e", "node_id": "C_kwDOAAsO6NoAKDY1ZWVjYzZiNTlmNjliYWM0NWRkY2U4MDgxZjVlZGQyM2U3NGIxN2U", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2023-02-25T23:46:28Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2023-02-25T23:46:28Z"}, "message": "Rollup merge of #108444 - Ezrashaw:add-test+docs-for-e0476, r=GuillaumeGomez\n\ndocs/test: add UI test and docs for `E0476`\n\nFinal undocumented error code. Not entirely sure about wording in the docs.\n\nPart of https://github.com/rust-lang/rust/issues/61137.\n\nr? ```@compiler-errors```\n\ncc ```@compiler-errors```", "tree": {"sha": "6a9ca8103320369dbf52834f7e2a1c720eb70fd1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6a9ca8103320369dbf52834f7e2a1c720eb70fd1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/65eecc6b59f69bac45ddce8081f5edd23e74b17e", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJj+p3UCRBK7hj4Ov3rIwAAqAEIAFm8GnPRqEihWaxokm5961so\nICYxoxaLo4/8dVUh+9M+bPNxBsXqrZExWmdGDsH0VBwHRoT3eXGUhbI9TDoS67Jl\nQ36u1mGl+NMQPpngQau0nnucIANJ6ovZm1U+fDeOCjlLMNtSq9anexlGUA0lPYi4\nFAS5hRSyLP/v8nIREVyFEtVZzMmDnN9iKMWVfIaYdfzZHvssig4hStKyh+739iwu\nPs+9+dLQ1rZ4vN2mP0qht7nsf0U1BkMQReXKdHPPl64CieG23lumSWGyulXUEAf+\nNKQBOO0f2L0heOED0dMwcwKaLMEU3B+ZftX8rH4fzAf2V4Cj4iyxsPbaRCODg5g=\n=j0MH\n-----END PGP SIGNATURE-----\n", "payload": "tree 6a9ca8103320369dbf52834f7e2a1c720eb70fd1\nparent 9631f4b5c9167bc93ea890736e22d97bfd0941b7\nparent 3b51e9fde8e86e6a082922bc7db2f673ed981836\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1677368788 +0100\ncommitter GitHub <noreply@github.com> 1677368788 +0100\n\nRollup merge of #108444 - Ezrashaw:add-test+docs-for-e0476, r=GuillaumeGomez\n\ndocs/test: add UI test and docs for `E0476`\n\nFinal undocumented error code. Not entirely sure about wording in the docs.\n\nPart of https://github.com/rust-lang/rust/issues/61137.\n\nr? ```@compiler-errors```\n\ncc ```@compiler-errors```\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/65eecc6b59f69bac45ddce8081f5edd23e74b17e", "html_url": "https://github.com/rust-lang/rust/commit/65eecc6b59f69bac45ddce8081f5edd23e74b17e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/65eecc6b59f69bac45ddce8081f5edd23e74b17e/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9631f4b5c9167bc93ea890736e22d97bfd0941b7", "url": "https://api.github.com/repos/rust-lang/rust/commits/9631f4b5c9167bc93ea890736e22d97bfd0941b7", "html_url": "https://github.com/rust-lang/rust/commit/9631f4b5c9167bc93ea890736e22d97bfd0941b7"}, {"sha": "3b51e9fde8e86e6a082922bc7db2f673ed981836", "url": "https://api.github.com/repos/rust-lang/rust/commits/3b51e9fde8e86e6a082922bc7db2f673ed981836", "html_url": "https://github.com/rust-lang/rust/commit/3b51e9fde8e86e6a082922bc7db2f673ed981836"}], "stats": {"total": 71, "additions": 68, "deletions": 3}, "files": [{"sha": "97201219cdf680baf8c81f3d4c29877910b9d27d", "filename": "compiler/rustc_error_codes/src/error_codes.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/65eecc6b59f69bac45ddce8081f5edd23e74b17e/compiler%2Frustc_error_codes%2Fsrc%2Ferror_codes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/65eecc6b59f69bac45ddce8081f5edd23e74b17e/compiler%2Frustc_error_codes%2Fsrc%2Ferror_codes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_error_codes%2Fsrc%2Ferror_codes.rs?ref=65eecc6b59f69bac45ddce8081f5edd23e74b17e", "patch": "@@ -253,6 +253,7 @@ E0466: include_str!(\"./error_codes/E0466.md\"),\n E0468: include_str!(\"./error_codes/E0468.md\"),\n E0469: include_str!(\"./error_codes/E0469.md\"),\n E0472: include_str!(\"./error_codes/E0472.md\"),\n+E0476: include_str!(\"./error_codes/E0476.md\"),\n E0477: include_str!(\"./error_codes/E0477.md\"),\n E0478: include_str!(\"./error_codes/E0478.md\"),\n E0482: include_str!(\"./error_codes/E0482.md\"),\n@@ -611,7 +612,6 @@ E0793: include_str!(\"./error_codes/E0793.md\"),\n //  E0473, // dereference of reference outside its lifetime\n //  E0474, // captured variable `..` does not outlive the enclosing closure\n //  E0475, // index of slice outside its lifetime\n-    E0476, // lifetime of the source pointer does not outlive lifetime bound...\n //  E0479, // the type `..` (provided as the value of a type parameter) is...\n //  E0480, // lifetime of method receiver does not outlive the method call\n //  E0481, // lifetime of function argument does not outlive the function call"}, {"sha": "fc141ba77f5df1ef6bf1bed0919cd1c13b060cc5", "filename": "compiler/rustc_error_codes/src/error_codes/E0476.md", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/65eecc6b59f69bac45ddce8081f5edd23e74b17e/compiler%2Frustc_error_codes%2Fsrc%2Ferror_codes%2FE0476.md", "raw_url": "https://github.com/rust-lang/rust/raw/65eecc6b59f69bac45ddce8081f5edd23e74b17e/compiler%2Frustc_error_codes%2Fsrc%2Ferror_codes%2FE0476.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_error_codes%2Fsrc%2Ferror_codes%2FE0476.md?ref=65eecc6b59f69bac45ddce8081f5edd23e74b17e", "patch": "@@ -0,0 +1,21 @@\n+The coerced type does not outlive the value being coerced to.\n+\n+Example of erroneous code:\n+\n+```compile_fail,E0476\n+#![feature(coerce_unsized)]\n+#![feature(unsize)]\n+\n+use std::marker::Unsize;\n+use std::ops::CoerceUnsized;\n+\n+// error: lifetime of the source pointer does not outlive lifetime bound of the\n+//        object type\n+impl<'a, 'b, T, S> CoerceUnsized<&'a T> for &'b S where S: Unsize<T> {}\n+```\n+\n+During a coercion, the \"source pointer\" (the coerced type) did not outlive the\n+\"object type\" (value being coerced to). In the above example, `'b` is not a\n+subtype of `'a`. This error can currently only be encountered with the unstable\n+`CoerceUnsized` trait which allows custom coercions of unsized types behind a\n+smart pointer to be implemented."}, {"sha": "373196b6642818efa16a3d7bc52a02f9c818e18f", "filename": "src/tools/error_index_generator/main.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/65eecc6b59f69bac45ddce8081f5edd23e74b17e/src%2Ftools%2Ferror_index_generator%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/65eecc6b59f69bac45ddce8081f5edd23e74b17e/src%2Ftools%2Ferror_index_generator%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Ferror_index_generator%2Fmain.rs?ref=65eecc6b59f69bac45ddce8081f5edd23e74b17e", "patch": "@@ -22,7 +22,7 @@ macro_rules! register_diagnostics {\n         pub fn error_codes() -> Vec<(&'static str, Option<&'static str>)> {\n             let mut errors: Vec<(&str, Option<&str>)> = vec![\n                 $((stringify!($error_code), Some($message)),)+\n-                $((stringify!($undocumented), None),)+\n+                $((stringify!($undocumented), None),)*\n             ];\n             errors.sort();\n             errors"}, {"sha": "8c904e8d7123ad6795cb512e339ab3508384145e", "filename": "src/tools/tidy/src/error_codes.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/65eecc6b59f69bac45ddce8081f5edd23e74b17e/src%2Ftools%2Ftidy%2Fsrc%2Ferror_codes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/65eecc6b59f69bac45ddce8081f5edd23e74b17e/src%2Ftools%2Ftidy%2Fsrc%2Ferror_codes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Ftidy%2Fsrc%2Ferror_codes.rs?ref=65eecc6b59f69bac45ddce8081f5edd23e74b17e", "patch": "@@ -31,7 +31,7 @@ const IGNORE_DOCTEST_CHECK: &[&str] = &[\"E0464\", \"E0570\", \"E0601\", \"E0602\", \"E06\n \n // Error codes that don't yet have a UI test. This list will eventually be removed.\n const IGNORE_UI_TEST_CHECK: &[&str] =\n-    &[\"E0461\", \"E0465\", \"E0476\", \"E0514\", \"E0554\", \"E0640\", \"E0717\", \"E0729\"];\n+    &[\"E0461\", \"E0465\", \"E0514\", \"E0554\", \"E0640\", \"E0717\", \"E0729\"];\n \n macro_rules! verbose_print {\n     ($verbose:expr, $($fmt:tt)*) => {"}, {"sha": "d5e4b8d2372743c357dbcc13434d6e3e377b4168", "filename": "tests/ui/error-codes/E0476.rs", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/65eecc6b59f69bac45ddce8081f5edd23e74b17e/tests%2Fui%2Ferror-codes%2FE0476.rs", "raw_url": "https://github.com/rust-lang/rust/raw/65eecc6b59f69bac45ddce8081f5edd23e74b17e/tests%2Fui%2Ferror-codes%2FE0476.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ferror-codes%2FE0476.rs?ref=65eecc6b59f69bac45ddce8081f5edd23e74b17e", "patch": "@@ -0,0 +1,13 @@\n+#![feature(coerce_unsized)]\n+#![feature(unsize)]\n+\n+use std::marker::Unsize;\n+use std::ops::CoerceUnsized;\n+\n+struct Wrapper<T>(T);\n+\n+impl<'a, 'b, T, S> CoerceUnsized<&'a Wrapper<T>> for &'b Wrapper<S> where S: Unsize<T> {}\n+//~^ ERROR lifetime of the source pointer does not outlive lifetime bound of the object type [E0476]\n+//~^^ ERROR E0119\n+\n+fn main() {}"}, {"sha": "a4bb26532a24fd08cf815defd52bd30d12b653ed", "filename": "tests/ui/error-codes/E0476.stderr", "status": "added", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/rust-lang/rust/blob/65eecc6b59f69bac45ddce8081f5edd23e74b17e/tests%2Fui%2Ferror-codes%2FE0476.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/65eecc6b59f69bac45ddce8081f5edd23e74b17e/tests%2Fui%2Ferror-codes%2FE0476.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ferror-codes%2FE0476.stderr?ref=65eecc6b59f69bac45ddce8081f5edd23e74b17e", "patch": "@@ -0,0 +1,31 @@\n+error[E0119]: conflicting implementations of trait `CoerceUnsized<&Wrapper<_>>` for type `&Wrapper<_>`\n+  --> $DIR/E0476.rs:9:1\n+   |\n+LL | impl<'a, 'b, T, S> CoerceUnsized<&'a Wrapper<T>> for &'b Wrapper<S> where S: Unsize<T> {}\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |\n+   = note: conflicting implementation in crate `core`:\n+           - impl<'a, 'b, T, U> CoerceUnsized<&'a U> for &'b T\n+             where 'b: 'a, T: Unsize<U>, T: ?Sized, U: ?Sized;\n+\n+error[E0476]: lifetime of the source pointer does not outlive lifetime bound of the object type\n+  --> $DIR/E0476.rs:9:1\n+   |\n+LL | impl<'a, 'b, T, S> CoerceUnsized<&'a Wrapper<T>> for &'b Wrapper<S> where S: Unsize<T> {}\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |\n+note: object type is valid for the lifetime `'a` as defined here\n+  --> $DIR/E0476.rs:9:6\n+   |\n+LL | impl<'a, 'b, T, S> CoerceUnsized<&'a Wrapper<T>> for &'b Wrapper<S> where S: Unsize<T> {}\n+   |      ^^\n+note: source pointer is only valid for the lifetime `'b` as defined here\n+  --> $DIR/E0476.rs:9:10\n+   |\n+LL | impl<'a, 'b, T, S> CoerceUnsized<&'a Wrapper<T>> for &'b Wrapper<S> where S: Unsize<T> {}\n+   |          ^^\n+\n+error: aborting due to 2 previous errors\n+\n+Some errors have detailed explanations: E0119, E0476.\n+For more information about an error, try `rustc --explain E0119`."}]}