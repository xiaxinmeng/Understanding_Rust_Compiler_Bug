{"sha": "096409cf8c2f0fcfe8dec77fd293ce5a4ba41284", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA5NjQwOWNmOGMyZjBmY2ZlOGRlYzc3ZmQyOTNjZTVhNGJhNDEyODQ=", "commit": {"author": {"name": "Steve Klabnik", "email": "steve@steveklabnik.com", "date": "2016-03-04T22:37:11Z"}, "committer": {"name": "Steve Klabnik", "email": "steve@steveklabnik.com", "date": "2016-03-04T22:37:11Z"}, "message": "End stdlib module summaries with a full stop.\n\nFixes #9447", "tree": {"sha": "5ca7279c19b94158b7f0fde82f02471ffb877a91", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5ca7279c19b94158b7f0fde82f02471ffb877a91"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/096409cf8c2f0fcfe8dec77fd293ce5a4ba41284", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/096409cf8c2f0fcfe8dec77fd293ce5a4ba41284", "html_url": "https://github.com/rust-lang/rust/commit/096409cf8c2f0fcfe8dec77fd293ce5a4ba41284", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/096409cf8c2f0fcfe8dec77fd293ce5a4ba41284/comments", "author": {"login": "steveklabnik", "id": 27786, "node_id": "MDQ6VXNlcjI3Nzg2", "avatar_url": "https://avatars.githubusercontent.com/u/27786?v=4", "gravatar_id": "", "url": "https://api.github.com/users/steveklabnik", "html_url": "https://github.com/steveklabnik", "followers_url": "https://api.github.com/users/steveklabnik/followers", "following_url": "https://api.github.com/users/steveklabnik/following{/other_user}", "gists_url": "https://api.github.com/users/steveklabnik/gists{/gist_id}", "starred_url": "https://api.github.com/users/steveklabnik/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/steveklabnik/subscriptions", "organizations_url": "https://api.github.com/users/steveklabnik/orgs", "repos_url": "https://api.github.com/users/steveklabnik/repos", "events_url": "https://api.github.com/users/steveklabnik/events{/privacy}", "received_events_url": "https://api.github.com/users/steveklabnik/received_events", "type": "User", "site_admin": false}, "committer": {"login": "steveklabnik", "id": 27786, "node_id": "MDQ6VXNlcjI3Nzg2", "avatar_url": "https://avatars.githubusercontent.com/u/27786?v=4", "gravatar_id": "", "url": "https://api.github.com/users/steveklabnik", "html_url": "https://github.com/steveklabnik", "followers_url": "https://api.github.com/users/steveklabnik/followers", "following_url": "https://api.github.com/users/steveklabnik/following{/other_user}", "gists_url": "https://api.github.com/users/steveklabnik/gists{/gist_id}", "starred_url": "https://api.github.com/users/steveklabnik/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/steveklabnik/subscriptions", "organizations_url": "https://api.github.com/users/steveklabnik/orgs", "repos_url": "https://api.github.com/users/steveklabnik/repos", "events_url": "https://api.github.com/users/steveklabnik/events{/privacy}", "received_events_url": "https://api.github.com/users/steveklabnik/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c97524bef9e59a80875110b402b3fc8c139d4d64", "url": "https://api.github.com/repos/rust-lang/rust/commits/c97524bef9e59a80875110b402b3fc8c139d4d64", "html_url": "https://github.com/rust-lang/rust/commit/c97524bef9e59a80875110b402b3fc8c139d4d64"}], "stats": {"total": 30, "additions": 15, "deletions": 15}, "files": [{"sha": "5789cd8edfc09bafb60c794e60d8b1ac514e3488", "filename": "src/libcollections/str.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/096409cf8c2f0fcfe8dec77fd293ce5a4ba41284/src%2Flibcollections%2Fstr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/096409cf8c2f0fcfe8dec77fd293ce5a4ba41284/src%2Flibcollections%2Fstr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcollections%2Fstr.rs?ref=096409cf8c2f0fcfe8dec77fd293ce5a4ba41284", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-//! Unicode string slices\n+//! Unicode string slices.\n //!\n //! *[See also the `str` primitive type](../primitive.str.html).*\n "}, {"sha": "b1f63ad71ca3740d1989c7bdfbe96fbb00edb583", "filename": "src/libcore/clone.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/096409cf8c2f0fcfe8dec77fd293ce5a4ba41284/src%2Flibcore%2Fclone.rs", "raw_url": "https://github.com/rust-lang/rust/raw/096409cf8c2f0fcfe8dec77fd293ce5a4ba41284/src%2Flibcore%2Fclone.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fclone.rs?ref=096409cf8c2f0fcfe8dec77fd293ce5a4ba41284", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-//! The `Clone` trait for types that cannot be 'implicitly copied'\n+//! The `Clone` trait for types that cannot be 'implicitly copied'.\n //!\n //! In Rust, some simple types are \"implicitly copyable\" and when you\n //! assign them or pass them as arguments, the receiver will get a copy,"}, {"sha": "6cc3b4e01b865dca4aefff08dbe5b74b75187d5b", "filename": "src/libcore/fmt/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/096409cf8c2f0fcfe8dec77fd293ce5a4ba41284/src%2Flibcore%2Ffmt%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/096409cf8c2f0fcfe8dec77fd293ce5a4ba41284/src%2Flibcore%2Ffmt%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Ffmt%2Fmod.rs?ref=096409cf8c2f0fcfe8dec77fd293ce5a4ba41284", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-//! Utilities for formatting and printing strings\n+//! Utilities for formatting and printing strings.\n \n #![stable(feature = \"rust1\", since = \"1.0.0\")]\n "}, {"sha": "0e65a79e347a03a02d6a3c77c9b9db2e7b64f18c", "filename": "src/libcore/iter.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/096409cf8c2f0fcfe8dec77fd293ce5a4ba41284/src%2Flibcore%2Fiter.rs", "raw_url": "https://github.com/rust-lang/rust/raw/096409cf8c2f0fcfe8dec77fd293ce5a4ba41284/src%2Flibcore%2Fiter.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fiter.rs?ref=096409cf8c2f0fcfe8dec77fd293ce5a4ba41284", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-//! Composable external iteration\n+//! Composable external iteration.\n //!\n //! If you've found yourself with a collection of some kind, and needed to\n //! perform an operation on the elements of said collection, you'll quickly run"}, {"sha": "2c648d1516bffc30d01aa7e382413544427ff61c", "filename": "src/libcore/mem.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/096409cf8c2f0fcfe8dec77fd293ce5a4ba41284/src%2Flibcore%2Fmem.rs", "raw_url": "https://github.com/rust-lang/rust/raw/096409cf8c2f0fcfe8dec77fd293ce5a4ba41284/src%2Flibcore%2Fmem.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fmem.rs?ref=096409cf8c2f0fcfe8dec77fd293ce5a4ba41284", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-//! Basic functions for dealing with memory\n+//! Basic functions for dealing with memory.\n //!\n //! This module contains functions for querying the size and alignment of\n //! types, initializing and manipulating memory."}, {"sha": "25df9c90578a5e24302aa82e7b8ebe663889e2c0", "filename": "src/libcore/ops.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/096409cf8c2f0fcfe8dec77fd293ce5a4ba41284/src%2Flibcore%2Fops.rs", "raw_url": "https://github.com/rust-lang/rust/raw/096409cf8c2f0fcfe8dec77fd293ce5a4ba41284/src%2Flibcore%2Fops.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fops.rs?ref=096409cf8c2f0fcfe8dec77fd293ce5a4ba41284", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-//! Overloadable operators\n+//! Overloadable operators.\n //!\n //! Implementing these traits allows you to get an effect similar to\n //! overloading operators."}, {"sha": "56b84fd6a64ddd7289d8d21f1ea8d8c1548e04ba", "filename": "src/libcore/option.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/096409cf8c2f0fcfe8dec77fd293ce5a4ba41284/src%2Flibcore%2Foption.rs", "raw_url": "https://github.com/rust-lang/rust/raw/096409cf8c2f0fcfe8dec77fd293ce5a4ba41284/src%2Flibcore%2Foption.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Foption.rs?ref=096409cf8c2f0fcfe8dec77fd293ce5a4ba41284", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-//! Optional values\n+//! Optional values.\n //!\n //! Type `Option` represents an optional value: every `Option`\n //! is either `Some` and contains a value, or `None`, and"}, {"sha": "3cbeac450e2182276869981880026bc66839cd0c", "filename": "src/libcore/ptr.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/096409cf8c2f0fcfe8dec77fd293ce5a4ba41284/src%2Flibcore%2Fptr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/096409cf8c2f0fcfe8dec77fd293ce5a4ba41284/src%2Flibcore%2Fptr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fptr.rs?ref=096409cf8c2f0fcfe8dec77fd293ce5a4ba41284", "patch": "@@ -10,7 +10,7 @@\n \n // FIXME: talk about offset, copy_memory, copy_nonoverlapping_memory\n \n-//! Raw, unsafe pointers, `*const T`, and `*mut T`\n+//! Raw, unsafe pointers, `*const T`, and `*mut T`.\n //!\n //! *[See also the pointer primitive types](../../std/primitive.pointer.html).*\n "}, {"sha": "09f612c20ecdfe04a1524b8cf1624803374b72e9", "filename": "src/libcore/result.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/096409cf8c2f0fcfe8dec77fd293ce5a4ba41284/src%2Flibcore%2Fresult.rs", "raw_url": "https://github.com/rust-lang/rust/raw/096409cf8c2f0fcfe8dec77fd293ce5a4ba41284/src%2Flibcore%2Fresult.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fresult.rs?ref=096409cf8c2f0fcfe8dec77fd293ce5a4ba41284", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-//! Error handling with the `Result` type\n+//! Error handling with the `Result` type.\n //!\n //! `Result<T, E>` is the type used for returning and propagating\n //! errors. It is an enum with the variants, `Ok(T)`, representing"}, {"sha": "5e15c0aefb709b98d907b4c81da6b8f38b515c3f", "filename": "src/libstd/ascii.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/096409cf8c2f0fcfe8dec77fd293ce5a4ba41284/src%2Flibstd%2Fascii.rs", "raw_url": "https://github.com/rust-lang/rust/raw/096409cf8c2f0fcfe8dec77fd293ce5a4ba41284/src%2Flibstd%2Fascii.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fascii.rs?ref=096409cf8c2f0fcfe8dec77fd293ce5a4ba41284", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-//! Operations on ASCII strings and characters\n+//! Operations on ASCII strings and characters.\n \n #![stable(feature = \"rust1\", since = \"1.0.0\")]\n "}, {"sha": "53384fb9b154b385bb728b61d1c597e107b60d88", "filename": "src/libstd/fs.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/096409cf8c2f0fcfe8dec77fd293ce5a4ba41284/src%2Flibstd%2Ffs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/096409cf8c2f0fcfe8dec77fd293ce5a4ba41284/src%2Flibstd%2Ffs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Ffs.rs?ref=096409cf8c2f0fcfe8dec77fd293ce5a4ba41284", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-//! Filesystem manipulation operations\n+//! Filesystem manipulation operations.\n //!\n //! This module contains basic methods to manipulate the contents of the local\n //! filesystem. All methods in this module represent cross-platform filesystem"}, {"sha": "72baa4abb26460c3c8c44d99d640b92c37b8194a", "filename": "src/libstd/os/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/096409cf8c2f0fcfe8dec77fd293ce5a4ba41284/src%2Flibstd%2Fos%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/096409cf8c2f0fcfe8dec77fd293ce5a4ba41284/src%2Flibstd%2Fos%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fos%2Fmod.rs?ref=096409cf8c2f0fcfe8dec77fd293ce5a4ba41284", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-//! OS-specific functionality\n+//! OS-specific functionality.\n \n #![stable(feature = \"os\", since = \"1.0.0\")]\n #![allow(missing_docs, bad_style)]"}, {"sha": "f4cd319f06454a128b5ec701f3de83f56f3d1a36", "filename": "src/libstd/prelude/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/096409cf8c2f0fcfe8dec77fd293ce5a4ba41284/src%2Flibstd%2Fprelude%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/096409cf8c2f0fcfe8dec77fd293ce5a4ba41284/src%2Flibstd%2Fprelude%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fprelude%2Fmod.rs?ref=096409cf8c2f0fcfe8dec77fd293ce5a4ba41284", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-//! The Rust Prelude\n+//! The Rust Prelude.\n //!\n //! Rust comes with a variety of things in its standard library. However, if\n //! you had to manually import every single thing that you used, it would be"}, {"sha": "1a42b091831b3a4244e8d54aab3a0851cbd5003b", "filename": "src/libstd/sync/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/096409cf8c2f0fcfe8dec77fd293ce5a4ba41284/src%2Flibstd%2Fsync%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/096409cf8c2f0fcfe8dec77fd293ce5a4ba41284/src%2Flibstd%2Fsync%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsync%2Fmod.rs?ref=096409cf8c2f0fcfe8dec77fd293ce5a4ba41284", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-//! Useful synchronization primitives\n+//! Useful synchronization primitives.\n //!\n //! This module contains useful safe and unsafe synchronization primitives.\n //! Most of the primitives in this module do not provide any sort of locking"}, {"sha": "6a923c8c094bfc80fa8792619c8c320a0b11ca69", "filename": "src/libstd/thread/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/096409cf8c2f0fcfe8dec77fd293ce5a4ba41284/src%2Flibstd%2Fthread%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/096409cf8c2f0fcfe8dec77fd293ce5a4ba41284/src%2Flibstd%2Fthread%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fthread%2Fmod.rs?ref=096409cf8c2f0fcfe8dec77fd293ce5a4ba41284", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-//! Native threads\n+//! Native threads.\n //!\n //! ## The threading model\n //!"}]}