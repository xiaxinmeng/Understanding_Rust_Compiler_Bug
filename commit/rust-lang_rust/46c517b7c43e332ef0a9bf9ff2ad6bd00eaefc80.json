{"sha": "46c517b7c43e332ef0a9bf9ff2ad6bd00eaefc80", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ2YzUxN2I3YzQzZTMzMmVmMGE5YmY5ZmYyYWQ2YmQwMGVhZWZjODA=", "commit": {"author": {"name": "Yuki Okushi", "email": "jtitor@2k36.org", "date": "2021-04-24T16:53:13Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-04-24T16:53:13Z"}, "message": "Rollup merge of #84459 - jyn514:json-mod, r=aDotInTheVoid\n\nrustdoc: Turn `JsonRenderer::mod_item_in` into `unreachable!()`\n\nThe JSON renderer no longer gets called on modules (since https://github.com/rust-lang/rust/pull/83055).\n\nr? ``@aDotInTheVoid``", "tree": {"sha": "d470cfb30da8f36ca34c02bed67a2abe43892cc9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d470cfb30da8f36ca34c02bed67a2abe43892cc9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/46c517b7c43e332ef0a9bf9ff2ad6bd00eaefc80", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJghEz5CRBK7hj4Ov3rIwAAObUIADU+8eBwDkJjY+3HuWnQ7xuy\nCkrSo2HGx0YrVFM2Je8xn6Zae2hTA79LPO406pFp15nZV+OGE3sh2DSQ84nTYWEV\nZZSCt17B7ohJb4EEeLjc+UwCckff1q2Msq/eMc2bpnKlkBQvT4bel+Jq0h8B4rgf\noTM8a8a09CTBfTzDCx7OuPcuL8M3Jwr5zELFrpRMtfThYg669M0j/JmGGYMffDD7\nEuoUkmxlkpeYXr0JiHHPgnH5UGgrCrVVCrER32hzBBPmZhttfr5HCA7e2VI3unaB\n3IH09S1a7s37anprR982pv12GUklLnjXI7sE3jMjkpvtX25THSUARAFE5/i7+RU=\n=8h8v\n-----END PGP SIGNATURE-----\n", "payload": "tree d470cfb30da8f36ca34c02bed67a2abe43892cc9\nparent 277b88be30a1f3af15212362e6bd8fe229eaa1f5\nparent 03ace761fbe0735bc5b76fbe94e4ef4478cbfcde\nauthor Yuki Okushi <jtitor@2k36.org> 1619283193 +0900\ncommitter GitHub <noreply@github.com> 1619283193 +0900\n\nRollup merge of #84459 - jyn514:json-mod, r=aDotInTheVoid\n\nrustdoc: Turn `JsonRenderer::mod_item_in` into `unreachable!()`\n\nThe JSON renderer no longer gets called on modules (since https://github.com/rust-lang/rust/pull/83055).\n\nr? ``@aDotInTheVoid``\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/46c517b7c43e332ef0a9bf9ff2ad6bd00eaefc80", "html_url": "https://github.com/rust-lang/rust/commit/46c517b7c43e332ef0a9bf9ff2ad6bd00eaefc80", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/46c517b7c43e332ef0a9bf9ff2ad6bd00eaefc80/comments", "author": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "277b88be30a1f3af15212362e6bd8fe229eaa1f5", "url": "https://api.github.com/repos/rust-lang/rust/commits/277b88be30a1f3af15212362e6bd8fe229eaa1f5", "html_url": "https://github.com/rust-lang/rust/commit/277b88be30a1f3af15212362e6bd8fe229eaa1f5"}, {"sha": "03ace761fbe0735bc5b76fbe94e4ef4478cbfcde", "url": "https://api.github.com/repos/rust-lang/rust/commits/03ace761fbe0735bc5b76fbe94e4ef4478cbfcde", "html_url": "https://github.com/rust-lang/rust/commit/03ace761fbe0735bc5b76fbe94e4ef4478cbfcde"}], "stats": {"total": 17, "additions": 2, "deletions": 15}, "files": [{"sha": "96ea4b6c3b8c19665d5e0b1b2977e3d4efd1573b", "filename": "src/librustdoc/json/mod.rs", "status": "modified", "additions": 2, "deletions": 15, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/46c517b7c43e332ef0a9bf9ff2ad6bd00eaefc80/src%2Flibrustdoc%2Fjson%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/46c517b7c43e332ef0a9bf9ff2ad6bd00eaefc80/src%2Flibrustdoc%2Fjson%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fjson%2Fmod.rs?ref=46c517b7c43e332ef0a9bf9ff2ad6bd00eaefc80", "patch": "@@ -181,21 +181,8 @@ impl<'tcx> FormatRenderer<'tcx> for JsonRenderer<'tcx> {\n         Ok(())\n     }\n \n-    fn mod_item_in(&mut self, item: &clean::Item) -> Result<(), Error> {\n-        use clean::types::ItemKind::*;\n-        if let ModuleItem(m) = &*item.kind {\n-            for item in &m.items {\n-                match &*item.kind {\n-                    // These don't have names so they don't get added to the output by default\n-                    ImportItem(_) => self.item(item.clone()).unwrap(),\n-                    ExternCrateItem { .. } => self.item(item.clone()).unwrap(),\n-                    ImplItem(i) => i.items.iter().for_each(|i| self.item(i.clone()).unwrap()),\n-                    _ => {}\n-                }\n-            }\n-        }\n-        self.item(item.clone()).unwrap();\n-        Ok(())\n+    fn mod_item_in(&mut self, _item: &clean::Item) -> Result<(), Error> {\n+        unreachable!(\"RUN_ON_MODULE = false should never call mod_item_in\")\n     }\n \n     fn after_krate(&mut self) -> Result<(), Error> {"}]}