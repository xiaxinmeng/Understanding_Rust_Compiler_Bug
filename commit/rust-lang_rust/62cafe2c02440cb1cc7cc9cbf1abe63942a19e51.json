{"sha": "62cafe2c02440cb1cc7cc9cbf1abe63942a19e51", "node_id": "MDY6Q29tbWl0NzI0NzEyOjYyY2FmZTJjMDI0NDBjYjFjYzdjYzljYmYxYWJlNjM5NDJhMTllNTE=", "commit": {"author": {"name": "xFrednet", "email": "xFrednet@gmail.com", "date": "2021-03-12T19:59:41Z"}, "committer": {"name": "xFrednet", "email": "xFrednet@gmail.com", "date": "2021-05-05T16:38:26Z"}, "message": "Applying PR suggestions", "tree": {"sha": "f3823ef4a2139c94e2af247b4f1c8ddd60841f2d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f3823ef4a2139c94e2af247b4f1c8ddd60841f2d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/62cafe2c02440cb1cc7cc9cbf1abe63942a19e51", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/62cafe2c02440cb1cc7cc9cbf1abe63942a19e51", "html_url": "https://github.com/rust-lang/rust/commit/62cafe2c02440cb1cc7cc9cbf1abe63942a19e51", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/62cafe2c02440cb1cc7cc9cbf1abe63942a19e51/comments", "author": {"login": "xFrednet", "id": 17087237, "node_id": "MDQ6VXNlcjE3MDg3MjM3", "avatar_url": "https://avatars.githubusercontent.com/u/17087237?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xFrednet", "html_url": "https://github.com/xFrednet", "followers_url": "https://api.github.com/users/xFrednet/followers", "following_url": "https://api.github.com/users/xFrednet/following{/other_user}", "gists_url": "https://api.github.com/users/xFrednet/gists{/gist_id}", "starred_url": "https://api.github.com/users/xFrednet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xFrednet/subscriptions", "organizations_url": "https://api.github.com/users/xFrednet/orgs", "repos_url": "https://api.github.com/users/xFrednet/repos", "events_url": "https://api.github.com/users/xFrednet/events{/privacy}", "received_events_url": "https://api.github.com/users/xFrednet/received_events", "type": "User", "site_admin": false}, "committer": {"login": "xFrednet", "id": 17087237, "node_id": "MDQ6VXNlcjE3MDg3MjM3", "avatar_url": "https://avatars.githubusercontent.com/u/17087237?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xFrednet", "html_url": "https://github.com/xFrednet", "followers_url": "https://api.github.com/users/xFrednet/followers", "following_url": "https://api.github.com/users/xFrednet/following{/other_user}", "gists_url": "https://api.github.com/users/xFrednet/gists{/gist_id}", "starred_url": "https://api.github.com/users/xFrednet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xFrednet/subscriptions", "organizations_url": "https://api.github.com/users/xFrednet/orgs", "repos_url": "https://api.github.com/users/xFrednet/repos", "events_url": "https://api.github.com/users/xFrednet/events{/privacy}", "received_events_url": "https://api.github.com/users/xFrednet/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c1fa1102d484b74cb7bc425994fa4246dd690ad3", "url": "https://api.github.com/repos/rust-lang/rust/commits/c1fa1102d484b74cb7bc425994fa4246dd690ad3", "html_url": "https://github.com/rust-lang/rust/commit/c1fa1102d484b74cb7bc425994fa4246dd690ad3"}], "stats": {"total": 9, "additions": 3, "deletions": 6}, "files": [{"sha": "b7bb557f9579c0348e1380d9ed85d59d391ac3c9", "filename": "clippy_lints/src/utils/internal_lints/metadata_collector.rs", "status": "modified", "additions": 3, "deletions": 6, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/62cafe2c02440cb1cc7cc9cbf1abe63942a19e51/clippy_lints%2Fsrc%2Futils%2Finternal_lints%2Fmetadata_collector.rs", "raw_url": "https://github.com/rust-lang/rust/raw/62cafe2c02440cb1cc7cc9cbf1abe63942a19e51/clippy_lints%2Fsrc%2Futils%2Finternal_lints%2Fmetadata_collector.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Futils%2Finternal_lints%2Fmetadata_collector.rs?ref=62cafe2c02440cb1cc7cc9cbf1abe63942a19e51", "patch": "@@ -32,7 +32,7 @@ use crate::utils::{\n };\n \n /// This is the output file of the lint collector.\n-const OUTPUT_FILE: &str = \"../metadata_collection.json\";\n+const OUTPUT_FILE: &str = \"../util/gh-pages/metadata_collection.json\";\n /// These lints are excluded from the export.\n const BLACK_LISTED_LINTS: [&str; 3] = [\"lint_author\", \"deep_code_inspection\", \"internal_metadata_collector\"];\n /// These groups will be ignored by the lint group matcher. This is useful for collections like\n@@ -62,7 +62,7 @@ const SUGGESTION_DIAGNOSTIC_BUILDER_METHODS: [(&str, bool); 9] = [\n     (\"span_suggestions\", true),\n ];\n const SUGGESTION_FUNCTIONS: [&[&str]; 2] = [\n-    &[\"clippy_utils\", \"diagnostics\", \"mutispan_sugg\"],\n+    &[\"clippy_utils\", \"diagnostics\", \"multispan_sugg\"],\n     &[\"clippy_utils\", \"diagnostics\", \"multispan_sugg_with_applicability\"],\n ];\n \n@@ -226,11 +226,8 @@ impl<'hir> LateLintPass<'hir> for MetadataCollector {\n     fn check_item(&mut self, cx: &LateContext<'hir>, item: &'hir Item<'_>) {\n         if_chain! {\n             // item validation\n-            if let ItemKind::Static(ref ty, Mutability::Not, body_id) = item.kind;\n+            if let ItemKind::Static(ref ty, Mutability::Not, _) = item.kind;\n             if is_lint_ref_type(cx, ty);\n-            let expr = &cx.tcx.hir().body(body_id).value;\n-            if let ExprKind::AddrOf(_, _, ref inner_exp) = expr.kind;\n-            if let ExprKind::Struct(_, _, _) = inner_exp.kind;\n             // blacklist check\n             let lint_name = sym_to_string(item.ident.name).to_ascii_lowercase();\n             if !BLACK_LISTED_LINTS.contains(&lint_name.as_str());"}]}