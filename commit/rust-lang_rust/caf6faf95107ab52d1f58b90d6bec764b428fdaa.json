{"sha": "caf6faf95107ab52d1f58b90d6bec764b428fdaa", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNhZjZmYWY5NTEwN2FiNTJkMWY1OGI5MGQ2YmVjNzY0YjQyOGZkYWE=", "commit": {"author": {"name": "Mara Bos", "email": "m-ou.se@m-ou.se", "date": "2021-05-25T18:20:05Z"}, "committer": {"name": "Mara Bos", "email": "m-ou.se@m-ou.se", "date": "2021-05-25T18:20:05Z"}, "message": "Remove Iterator #[rustc_on_unimplemented]s that no longer apply.", "tree": {"sha": "274b7c3b66a3a7953eb2ac8b96ee4dcc16be105f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/274b7c3b66a3a7953eb2ac8b96ee4dcc16be105f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/caf6faf95107ab52d1f58b90d6bec764b428fdaa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/caf6faf95107ab52d1f58b90d6bec764b428fdaa", "html_url": "https://github.com/rust-lang/rust/commit/caf6faf95107ab52d1f58b90d6bec764b428fdaa", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/caf6faf95107ab52d1f58b90d6bec764b428fdaa/comments", "author": {"login": "m-ou-se", "id": 783247, "node_id": "MDQ6VXNlcjc4MzI0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/783247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-ou-se", "html_url": "https://github.com/m-ou-se", "followers_url": "https://api.github.com/users/m-ou-se/followers", "following_url": "https://api.github.com/users/m-ou-se/following{/other_user}", "gists_url": "https://api.github.com/users/m-ou-se/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-ou-se/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-ou-se/subscriptions", "organizations_url": "https://api.github.com/users/m-ou-se/orgs", "repos_url": "https://api.github.com/users/m-ou-se/repos", "events_url": "https://api.github.com/users/m-ou-se/events{/privacy}", "received_events_url": "https://api.github.com/users/m-ou-se/received_events", "type": "User", "site_admin": false}, "committer": {"login": "m-ou-se", "id": 783247, "node_id": "MDQ6VXNlcjc4MzI0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/783247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-ou-se", "html_url": "https://github.com/m-ou-se", "followers_url": "https://api.github.com/users/m-ou-se/followers", "following_url": "https://api.github.com/users/m-ou-se/following{/other_user}", "gists_url": "https://api.github.com/users/m-ou-se/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-ou-se/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-ou-se/subscriptions", "organizations_url": "https://api.github.com/users/m-ou-se/orgs", "repos_url": "https://api.github.com/users/m-ou-se/repos", "events_url": "https://api.github.com/users/m-ou-se/events{/privacy}", "received_events_url": "https://api.github.com/users/m-ou-se/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cdbe2888979bb8797b05f0d58a6f6e60753983d2", "url": "https://api.github.com/repos/rust-lang/rust/commits/cdbe2888979bb8797b05f0d58a6f6e60753983d2", "html_url": "https://github.com/rust-lang/rust/commit/cdbe2888979bb8797b05f0d58a6f6e60753983d2"}], "stats": {"total": 34, "additions": 0, "deletions": 34}, "files": [{"sha": "a696c88f66366641c2f159c978656f4352f5b49e", "filename": "library/core/src/iter/traits/iterator.rs", "status": "modified", "additions": 0, "deletions": 34, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/caf6faf95107ab52d1f58b90d6bec764b428fdaa/library%2Fcore%2Fsrc%2Fiter%2Ftraits%2Fiterator.rs", "raw_url": "https://github.com/rust-lang/rust/raw/caf6faf95107ab52d1f58b90d6bec764b428fdaa/library%2Fcore%2Fsrc%2Fiter%2Ftraits%2Fiterator.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fiter%2Ftraits%2Fiterator.rs?ref=caf6faf95107ab52d1f58b90d6bec764b428fdaa", "patch": "@@ -25,40 +25,6 @@ fn _assert_is_object_safe(_: &dyn Iterator<Item = ()>) {}\n /// [impl]: crate::iter#implementing-iterator\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n #[rustc_on_unimplemented(\n-    on(\n-        _Self = \"[std::ops::Range<Idx>; 1]\",\n-        label = \"if you meant to iterate between two values, remove the square brackets\",\n-        note = \"`[start..end]` is an array of one `Range`; you might have meant to have a `Range` \\\n-                without the brackets: `start..end`\"\n-    ),\n-    on(\n-        _Self = \"[std::ops::RangeFrom<Idx>; 1]\",\n-        label = \"if you meant to iterate from a value onwards, remove the square brackets\",\n-        note = \"`[start..]` is an array of one `RangeFrom`; you might have meant to have a \\\n-              `RangeFrom` without the brackets: `start..`, keeping in mind that iterating over an \\\n-              unbounded iterator will run forever unless you `break` or `return` from within the \\\n-              loop\"\n-    ),\n-    on(\n-        _Self = \"[std::ops::RangeTo<Idx>; 1]\",\n-        label = \"if you meant to iterate until a value, remove the square brackets and add a \\\n-                 starting value\",\n-        note = \"`[..end]` is an array of one `RangeTo`; you might have meant to have a bounded \\\n-                `Range` without the brackets: `0..end`\"\n-    ),\n-    on(\n-        _Self = \"[std::ops::RangeInclusive<Idx>; 1]\",\n-        label = \"if you meant to iterate between two values, remove the square brackets\",\n-        note = \"`[start..=end]` is an array of one `RangeInclusive`; you might have meant to have a \\\n-              `RangeInclusive` without the brackets: `start..=end`\"\n-    ),\n-    on(\n-        _Self = \"[std::ops::RangeToInclusive<Idx>; 1]\",\n-        label = \"if you meant to iterate until a value (including it), remove the square brackets \\\n-                 and add a starting value\",\n-        note = \"`[..=end]` is an array of one `RangeToInclusive`; you might have meant to have a \\\n-                bounded `RangeInclusive` without the brackets: `0..=end`\"\n-    ),\n     on(\n         _Self = \"std::ops::RangeTo<Idx>\",\n         label = \"if you meant to iterate until a value, add a starting value\","}]}