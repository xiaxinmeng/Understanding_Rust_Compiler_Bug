{"sha": "c00393163cf1aae888b654a46b5f400e2ded4d1f", "node_id": "MDY6Q29tbWl0NzI0NzEyOmMwMDM5MzE2M2NmMWFhZTg4OGI2NTRhNDZiNWY0MDBlMmRlZDRkMWY=", "commit": {"author": {"name": "Beno\u00eet CORTIER", "email": "benoit.cortier@fried-world.eu", "date": "2017-07-01T14:56:19Z"}, "committer": {"name": "Oliver Schneider", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2017-08-21T12:01:31Z"}, "message": "Improve needless_borrowed_ref lint: remove the hand rolled span part.", "tree": {"sha": "880695f180073920c6dcd269c45ce4274fca857e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/880695f180073920c6dcd269c45ce4274fca857e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c00393163cf1aae888b654a46b5f400e2ded4d1f", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEYFTdM4NKd7XQft77pp+NIls619kFAlmay5wACgkQpp+NIls6\n19kTSRAAsHLVQNhko71/jgkXnyDROen3DycXeKnSz/aLn7LGk9OuqwbLGzFKZ6gm\n4awmQw/t97nj7IohiWCo5De93guvCjmJSSJqHKJdwd8uazuW/JGc46uxuzqa88O/\n4jE3++KAYHFYuTPiiQrXoo+FQa4vTBt4Sk3lnNS88ve3CBdiGsxlh1u6psJE79yX\n0RJY0ReWEV6Bfnpfk3qCm7Z1k+cy9FuoFBx2ggBFQvqohaadaxW+ziIgjRBDnEab\nryjfRxFd+qj16muqliOktfVmaoqIkPVCTmbafOmMbrR6uX8osv0glpWO7gNZvMQt\nspa8cA1DIl6nO1TZlwP4/LI7Tax4MaAN+H1Xxkge9Ph78zykooHXT7HD94ZMdt5n\n/gvVLx82QRPm3ejuHfI98kTOUcTjNwonBTUtJCvGg3wk7u/iePNry/NCrwHYyNNd\n+LLEXghHHj0N0iIjUG5SY8eA3/TnkEICP4EoRMM1tVX9AXMbpRYARKK5Md9/wLj5\niKe5Aunl41zOVEcJl+NwNnMqjYqlcrChBU805bNcR3+hFamLUZOcOCO0W7STY0Wv\nWDwaETNoNiNWD4py9BocwCEtFiB7GPRnqbmDEwmv/AyxV+dfUABA6cGpMJQCRaFS\nO7m93nTbIYeKSVX8/1JqZAiAoH/XWA3PUv2JkCq6fOaPk9C8Vh0=\n=xH/J\n-----END PGP SIGNATURE-----", "payload": "tree 880695f180073920c6dcd269c45ce4274fca857e\nparent fe57fdd15e6046720463491359d32c5833ffad9c\nauthor Beno\u00eet CORTIER <benoit.cortier@fried-world.eu> 1498920979 +0200\ncommitter Oliver Schneider <git-spam-no-reply9815368754983@oli-obk.de> 1503316891 +0200\n\nImprove needless_borrowed_ref lint: remove the hand rolled span part.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c00393163cf1aae888b654a46b5f400e2ded4d1f", "html_url": "https://github.com/rust-lang/rust/commit/c00393163cf1aae888b654a46b5f400e2ded4d1f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c00393163cf1aae888b654a46b5f400e2ded4d1f/comments", "author": {"login": "CBenoit", "id": 3809077, "node_id": "MDQ6VXNlcjM4MDkwNzc=", "avatar_url": "https://avatars.githubusercontent.com/u/3809077?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CBenoit", "html_url": "https://github.com/CBenoit", "followers_url": "https://api.github.com/users/CBenoit/followers", "following_url": "https://api.github.com/users/CBenoit/following{/other_user}", "gists_url": "https://api.github.com/users/CBenoit/gists{/gist_id}", "starred_url": "https://api.github.com/users/CBenoit/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CBenoit/subscriptions", "organizations_url": "https://api.github.com/users/CBenoit/orgs", "repos_url": "https://api.github.com/users/CBenoit/repos", "events_url": "https://api.github.com/users/CBenoit/events{/privacy}", "received_events_url": "https://api.github.com/users/CBenoit/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fe57fdd15e6046720463491359d32c5833ffad9c", "url": "https://api.github.com/repos/rust-lang/rust/commits/fe57fdd15e6046720463491359d32c5833ffad9c", "html_url": "https://github.com/rust-lang/rust/commit/fe57fdd15e6046720463491359d32c5833ffad9c"}], "stats": {"total": 12, "additions": 7, "deletions": 5}, "files": [{"sha": "6e17d23fb0bbde470b9c0844f6a3c8588801acda", "filename": "clippy_lints/src/needless_borrowed_ref.rs", "status": "modified", "additions": 7, "deletions": 5, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/c00393163cf1aae888b654a46b5f400e2ded4d1f/clippy_lints%2Fsrc%2Fneedless_borrowed_ref.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c00393163cf1aae888b654a46b5f400e2ded4d1f/clippy_lints%2Fsrc%2Fneedless_borrowed_ref.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fneedless_borrowed_ref.rs?ref=c00393163cf1aae888b654a46b5f400e2ded4d1f", "patch": "@@ -7,10 +7,13 @@ use rustc::lint::*;\n use rustc::hir::{MutImmutable, Pat, PatKind, BindingAnnotation};\n =======\n use rustc::hir::{MutImmutable, Pat, PatKind};\n+<<<<<<< HEAD\n >>>>>>> e30bf721... Improve needless_borrowed_ref and add suggestion to it.\n use rustc::ty;\n+=======\n+>>>>>>> 4ae45c87... Improve needless_borrowed_ref lint: remove the hand rolled span part.\n use utils::{span_lint_and_then, in_macro, snippet};\n-use syntax_pos::{Span, BytePos};\n+use rustc::hir::BindingMode::BindByRef;\n \n /// **What it does:** Checks for useless borrowed references.\n ///\n@@ -60,14 +63,13 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for NeedlessBorrowedRef {\n             // Only lint immutable refs, because `&mut ref T` may be useful.\n             let PatKind::Ref(ref sub_pat, MutImmutable) = pat.node,\n \n-            // Check sub_pat got a 'ref' keyword.\n-            let ty::TyRef(_, _) = cx.tables.pat_ty(sub_pat).sty,\n+            // Check sub_pat got a `ref` keyword (excluding `ref mut`).\n+            let PatKind::Binding(BindByRef(MutImmutable), _, spanned_name, ..) = sub_pat.node,\n         ], {\n-            let part_to_keep = Span{ lo: pat.span.lo + BytePos(5), hi: pat.span.hi, ctxt: pat.span.ctxt };\n             span_lint_and_then(cx, NEEDLESS_BORROWED_REFERENCE, pat.span,\n                                \"this pattern takes a reference on something that is being de-referenced\",\n                                |db| {\n-                                   let hint = snippet(cx, part_to_keep, \"..\").into_owned();\n+                                   let hint = snippet(cx, spanned_name.span, \"..\").into_owned();\n                                    db.span_suggestion(pat.span, \"try removing the `&ref` part and just keep\", hint);\n                                });\n         }}"}]}