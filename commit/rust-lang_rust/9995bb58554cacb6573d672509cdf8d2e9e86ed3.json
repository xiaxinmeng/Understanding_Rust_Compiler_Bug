{"sha": "9995bb58554cacb6573d672509cdf8d2e9e86ed3", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk5OTViYjU4NTU0Y2FjYjY1NzNkNjcyNTA5Y2RmOGQyZTllODZlZDM=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-05-07T17:30:09Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-05-07T17:30:09Z"}, "message": "Rollup merge of #60583 - varkor:const-generics-emplace, r=petrochenkov\n\nFix parsing issue with negative literals as const generic arguments", "tree": {"sha": "6044fdd9e94b355e5d18cf74b24183686a3e00ac", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6044fdd9e94b355e5d18cf74b24183686a3e00ac"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9995bb58554cacb6573d672509cdf8d2e9e86ed3", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJc0cChCRBK7hj4Ov3rIwAAdHIIAGxg66GAbXMC7sxc/7ATnhFh\nb00iuBtV47Mfz3Cu+vggs+rftHFRddvvB363PN1D9/i3G73yCyz4qrkB3nWid7yb\npo9mBSmbhiN1VbVOfFB1Y9tobGHRBhS6IYlqFPxXh0eHE2N0ZddMxHesJkIqtGxA\nYOOGoPtuZQt091GPoAGApCOD5uec/bvdJXLFeZsj23buvmUwz5FRJuGeiMUC38j5\ndoCzMB6jZgwpbOj+yc2xzI+cg1Uwp4uIXhizhz/1lopEG3I3lPG3ZXsLDN7TS3JZ\nQj6Q1mpSvPcfi/gYYhdU2IfM5sWc+wB3WXeOguso0yQk5SIjJX2z18A+cssxrxs=\n=fuH/\n-----END PGP SIGNATURE-----\n", "payload": "tree 6044fdd9e94b355e5d18cf74b24183686a3e00ac\nparent e280818cb06f98ad2101c0cc95b2a9e05f2fa89f\nparent e570fe5b220c1c9064587f94a885587b7f910ab1\nauthor Mazdak Farrokhzad <twingoow@gmail.com> 1557250209 +0200\ncommitter GitHub <noreply@github.com> 1557250209 +0200\n\nRollup merge of #60583 - varkor:const-generics-emplace, r=petrochenkov\n\nFix parsing issue with negative literals as const generic arguments\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9995bb58554cacb6573d672509cdf8d2e9e86ed3", "html_url": "https://github.com/rust-lang/rust/commit/9995bb58554cacb6573d672509cdf8d2e9e86ed3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9995bb58554cacb6573d672509cdf8d2e9e86ed3/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e280818cb06f98ad2101c0cc95b2a9e05f2fa89f", "url": "https://api.github.com/repos/rust-lang/rust/commits/e280818cb06f98ad2101c0cc95b2a9e05f2fa89f", "html_url": "https://github.com/rust-lang/rust/commit/e280818cb06f98ad2101c0cc95b2a9e05f2fa89f"}, {"sha": "e570fe5b220c1c9064587f94a885587b7f910ab1", "url": "https://api.github.com/repos/rust-lang/rust/commits/e570fe5b220c1c9064587f94a885587b7f910ab1", "html_url": "https://github.com/rust-lang/rust/commit/e570fe5b220c1c9064587f94a885587b7f910ab1"}], "stats": {"total": 15, "additions": 4, "deletions": 11}, "files": [{"sha": "921b857bf98e7dc81eeac3be97dcd6de4efcffe5", "filename": "src/libsyntax/parse/parser.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/9995bb58554cacb6573d672509cdf8d2e9e86ed3/src%2Flibsyntax%2Fparse%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9995bb58554cacb6573d672509cdf8d2e9e86ed3/src%2Flibsyntax%2Fparse%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fparser.rs?ref=9995bb58554cacb6573d672509cdf8d2e9e86ed3", "patch": "@@ -2319,7 +2319,8 @@ impl<'a> Parser<'a> {\n         let ident = self.parse_path_segment_ident()?;\n \n         let is_args_start = |token: &token::Token| match *token {\n-            token::Lt | token::BinOp(token::Shl) | token::OpenDelim(token::Paren) => true,\n+            token::Lt | token::BinOp(token::Shl) | token::OpenDelim(token::Paren)\n+            | token::LArrow => true,\n             _ => false,\n         };\n         let check_args_start = |this: &mut Self| {\n@@ -6056,8 +6057,6 @@ impl<'a> Parser<'a> {\n                         self.fatal(\"identifiers may currently not be used for const generics\")\n                     );\n                 } else {\n-                    // FIXME(const_generics): this currently conflicts with emplacement syntax\n-                    // with negative integer literals.\n                     self.parse_literal_maybe_minus()?\n                 };\n                 let value = AnonConst {"}, {"sha": "22c6c351622817fd29a28338b59add36ffe24858", "filename": "src/test/ui/const-generics/const-expression-parameter.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9995bb58554cacb6573d672509cdf8d2e9e86ed3/src%2Ftest%2Fui%2Fconst-generics%2Fconst-expression-parameter.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9995bb58554cacb6573d672509cdf8d2e9e86ed3/src%2Ftest%2Fui%2Fconst-generics%2Fconst-expression-parameter.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fconst-expression-parameter.rs?ref=9995bb58554cacb6573d672509cdf8d2e9e86ed3", "patch": "@@ -6,7 +6,7 @@ fn i32_identity<const X: i32>() -> i32 {\n }\n \n fn foo_a() {\n-    i32_identity::<-1>(); //~ ERROR expected identifier, found `<-`\n+    i32_identity::<-1>(); // ok\n }\n \n fn foo_b() {"}, {"sha": "c255127c28079a436c170b36b02dd120ebbbeca1", "filename": "src/test/ui/const-generics/const-expression-parameter.stderr", "status": "modified", "additions": 1, "deletions": 7, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/9995bb58554cacb6573d672509cdf8d2e9e86ed3/src%2Ftest%2Fui%2Fconst-generics%2Fconst-expression-parameter.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9995bb58554cacb6573d672509cdf8d2e9e86ed3/src%2Ftest%2Fui%2Fconst-generics%2Fconst-expression-parameter.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fconst-expression-parameter.stderr?ref=9995bb58554cacb6573d672509cdf8d2e9e86ed3", "patch": "@@ -1,9 +1,3 @@\n-error: expected identifier, found `<-`\n-  --> $DIR/const-expression-parameter.rs:9:19\n-   |\n-LL |     i32_identity::<-1>();\n-   |                   ^^ expected identifier\n-\n error: expected one of `,` or `>`, found `+`\n   --> $DIR/const-expression-parameter.rs:13:22\n    |\n@@ -16,5 +10,5 @@ warning: the feature `const_generics` is incomplete and may cause the compiler t\n LL | #![feature(const_generics)]\n    |            ^^^^^^^^^^^^^^\n \n-error: aborting due to 2 previous errors\n+error: aborting due to previous error\n "}]}