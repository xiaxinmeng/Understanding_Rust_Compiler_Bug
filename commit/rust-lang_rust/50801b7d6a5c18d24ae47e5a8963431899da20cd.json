{"sha": "50801b7d6a5c18d24ae47e5a8963431899da20cd", "node_id": "C_kwDOAAsO6NoAKDUwODAxYjdkNmE1YzE4ZDI0YWU0N2U1YTg5NjM0MzE4OTlkYTIwY2Q", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2023-01-03T09:40:20Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2023-01-03T09:40:20Z"}, "message": "Auto merge of #13853 - veber-alex:diag_fix, r=Veykril\n\nUse diagnostic code as link to full message\n\nfixes #13823 by adding a vscode setting that will keeping the existing diagnostic code and use it as a link to the full compiler error message.\nWhile I was there I also fixed `index` to fallback to `rendered.length` to make the previewRustcOutput feature work.", "tree": {"sha": "fd27f1f3f95d85eeaef45d004f644791cc39e9dd", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fd27f1f3f95d85eeaef45d004f644791cc39e9dd"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/50801b7d6a5c18d24ae47e5a8963431899da20cd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/50801b7d6a5c18d24ae47e5a8963431899da20cd", "html_url": "https://github.com/rust-lang/rust/commit/50801b7d6a5c18d24ae47e5a8963431899da20cd", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/50801b7d6a5c18d24ae47e5a8963431899da20cd/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e75e2f83689d1591749b032b79c682c6d15c2424", "url": "https://api.github.com/repos/rust-lang/rust/commits/e75e2f83689d1591749b032b79c682c6d15c2424", "html_url": "https://github.com/rust-lang/rust/commit/e75e2f83689d1591749b032b79c682c6d15c2424"}, {"sha": "ddc0147d536b26a980c0446f86cda0e40378ea32", "url": "https://api.github.com/repos/rust-lang/rust/commits/ddc0147d536b26a980c0446f86cda0e40378ea32", "html_url": "https://github.com/rust-lang/rust/commit/ddc0147d536b26a980c0446f86cda0e40378ea32"}], "stats": {"total": 23, "additions": 21, "deletions": 2}, "files": [{"sha": "89ff64fca73811d62443e250d8f08d9074a28f39", "filename": "editors/code/package.json", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/50801b7d6a5c18d24ae47e5a8963431899da20cd/editors%2Fcode%2Fpackage.json", "raw_url": "https://github.com/rust-lang/rust/raw/50801b7d6a5c18d24ae47e5a8963431899da20cd/editors%2Fcode%2Fpackage.json", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fpackage.json?ref=50801b7d6a5c18d24ae47e5a8963431899da20cd", "patch": "@@ -411,6 +411,11 @@\n                     \"default\": false,\n                     \"type\": \"boolean\"\n                 },\n+                \"rust-analyzer.diagnostics.useRustcErrorCode\": {\n+                    \"markdownDescription\": \"Whether to use the rustc error code.\",\n+                    \"default\": false,\n+                    \"type\": \"boolean\"\n+                },\n                 \"$generated-start\": {},\n                 \"rust-analyzer.assist.emitMustUse\": {\n                     \"markdownDescription\": \"Whether to insert #[must_use] when generating `as_` methods\\nfor enum variants.\","}, {"sha": "1470c1f581d41af3f3d547c1008a31a0535004d8", "filename": "editors/code/src/client.ts", "status": "modified", "additions": 12, "deletions": 2, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/50801b7d6a5c18d24ae47e5a8963431899da20cd/editors%2Fcode%2Fsrc%2Fclient.ts", "raw_url": "https://github.com/rust-lang/rust/raw/50801b7d6a5c18d24ae47e5a8963431899da20cd/editors%2Fcode%2Fsrc%2Fclient.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Fclient.ts?ref=50801b7d6a5c18d24ae47e5a8963431899da20cd", "patch": "@@ -106,6 +106,7 @@ export async function createClient(\n                 next: lc.HandleDiagnosticsSignature\n             ) {\n                 const preview = config.previewRustcOutput;\n+                const errorCode = config.useRustcErrorCode;\n                 diagnostics.forEach((diag, idx) => {\n                     // Abuse the fact that VSCode leaks the LSP diagnostics data field through the\n                     // Diagnostic class, if they ever break this we are out of luck and have to go\n@@ -119,19 +120,28 @@ export async function createClient(\n                         ?.rendered;\n                     if (rendered) {\n                         if (preview) {\n-                            const index = rendered.match(/^(note|help):/m)?.index || 0;\n+                            const index =\n+                                rendered.match(/^(note|help):/m)?.index || rendered.length;\n                             diag.message = rendered\n                                 .substring(0, index)\n                                 .replace(/^ -->[^\\n]+\\n/m, \"\");\n                         }\n+                        let value;\n+                        if (errorCode) {\n+                            if (typeof diag.code === \"string\" || typeof diag.code === \"number\") {\n+                                value = diag.code;\n+                            } else {\n+                                value = diag.code?.value;\n+                            }\n+                        }\n                         diag.code = {\n                             target: vscode.Uri.from({\n                                 scheme: \"rust-analyzer-diagnostics-view\",\n                                 path: \"/diagnostic message\",\n                                 fragment: uri.toString(),\n                                 query: idx.toString(),\n                             }),\n-                            value: \"Click for full compiler diagnostic\",\n+                            value: value ?? \"Click for full compiler diagnostic\",\n                         };\n                     }\n                 });"}, {"sha": "eb4f965291fe59bfb907fcef06d912bdfa96b372", "filename": "editors/code/src/config.ts", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/50801b7d6a5c18d24ae47e5a8963431899da20cd/editors%2Fcode%2Fsrc%2Fconfig.ts", "raw_url": "https://github.com/rust-lang/rust/raw/50801b7d6a5c18d24ae47e5a8963431899da20cd/editors%2Fcode%2Fsrc%2Fconfig.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Fconfig.ts?ref=50801b7d6a5c18d24ae47e5a8963431899da20cd", "patch": "@@ -241,6 +241,10 @@ export class Config {\n     get previewRustcOutput() {\n         return this.get<boolean>(\"diagnostics.previewRustcOutput\");\n     }\n+\n+    get useRustcErrorCode() {\n+        return this.get<boolean>(\"diagnostics.useRustcErrorCode\");\n+    }\n }\n \n const VarRegex = new RegExp(/\\$\\{(.+?)\\}/g);"}]}