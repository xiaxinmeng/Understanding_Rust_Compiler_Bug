{"sha": "67aeb2eaeb9910d2177a6fc0e675c6bc84261c3d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY3YWViMmVhZWI5OTEwZDIxNzdhNmZjMGU2NzVjNmJjODQyNjFjM2Q=", "commit": {"author": {"name": "laurent", "email": "laurent.mazare@gmail.com", "date": "2017-11-07T21:49:30Z"}, "committer": {"name": "laurent", "email": "laurent.mazare@gmail.com", "date": "2017-11-07T21:49:30Z"}, "message": "Only apply when there is a single argument.", "tree": {"sha": "53c2a447ad20e30db03859d46486738a1bd6042b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/53c2a447ad20e30db03859d46486738a1bd6042b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/67aeb2eaeb9910d2177a6fc0e675c6bc84261c3d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/67aeb2eaeb9910d2177a6fc0e675c6bc84261c3d", "html_url": "https://github.com/rust-lang/rust/commit/67aeb2eaeb9910d2177a6fc0e675c6bc84261c3d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/67aeb2eaeb9910d2177a6fc0e675c6bc84261c3d/comments", "author": {"login": "LaurentMazare", "id": 1041292, "node_id": "MDQ6VXNlcjEwNDEyOTI=", "avatar_url": "https://avatars.githubusercontent.com/u/1041292?v=4", "gravatar_id": "", "url": "https://api.github.com/users/LaurentMazare", "html_url": "https://github.com/LaurentMazare", "followers_url": "https://api.github.com/users/LaurentMazare/followers", "following_url": "https://api.github.com/users/LaurentMazare/following{/other_user}", "gists_url": "https://api.github.com/users/LaurentMazare/gists{/gist_id}", "starred_url": "https://api.github.com/users/LaurentMazare/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/LaurentMazare/subscriptions", "organizations_url": "https://api.github.com/users/LaurentMazare/orgs", "repos_url": "https://api.github.com/users/LaurentMazare/repos", "events_url": "https://api.github.com/users/LaurentMazare/events{/privacy}", "received_events_url": "https://api.github.com/users/LaurentMazare/received_events", "type": "User", "site_admin": false}, "committer": {"login": "LaurentMazare", "id": 1041292, "node_id": "MDQ6VXNlcjEwNDEyOTI=", "avatar_url": "https://avatars.githubusercontent.com/u/1041292?v=4", "gravatar_id": "", "url": "https://api.github.com/users/LaurentMazare", "html_url": "https://github.com/LaurentMazare", "followers_url": "https://api.github.com/users/LaurentMazare/followers", "following_url": "https://api.github.com/users/LaurentMazare/following{/other_user}", "gists_url": "https://api.github.com/users/LaurentMazare/gists{/gist_id}", "starred_url": "https://api.github.com/users/LaurentMazare/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/LaurentMazare/subscriptions", "organizations_url": "https://api.github.com/users/LaurentMazare/orgs", "repos_url": "https://api.github.com/users/LaurentMazare/repos", "events_url": "https://api.github.com/users/LaurentMazare/events{/privacy}", "received_events_url": "https://api.github.com/users/LaurentMazare/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "82793768b79ef6415c79df0f0385ae5a5d3b00c5", "url": "https://api.github.com/repos/rust-lang/rust/commits/82793768b79ef6415c79df0f0385ae5a5d3b00c5", "html_url": "https://github.com/rust-lang/rust/commit/82793768b79ef6415c79df0f0385ae5a5d3b00c5"}], "stats": {"total": 38, "additions": 20, "deletions": 18}, "files": [{"sha": "7fe3b87823380bd2a65ee7155f5c3c174c27a0f9", "filename": "clippy_lints/src/booleans.rs", "status": "modified", "additions": 20, "deletions": 18, "changes": 38, "blob_url": "https://github.com/rust-lang/rust/blob/67aeb2eaeb9910d2177a6fc0e675c6bc84261c3d/clippy_lints%2Fsrc%2Fbooleans.rs", "raw_url": "https://github.com/rust-lang/rust/raw/67aeb2eaeb9910d2177a6fc0e675c6bc84261c3d/clippy_lints%2Fsrc%2Fbooleans.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fbooleans.rs?ref=67aeb2eaeb9910d2177a6fc0e675c6bc84261c3d", "patch": "@@ -405,24 +405,26 @@ impl<'a, 'tcx> NonminimalBoolVisitor<'a, 'tcx> {\n     }\n \n     fn handle_method_call_in_not(&mut self, e: &'tcx Expr, inner: &'tcx Expr) {\n-        if let ExprMethodCall(ref path, _, _) = inner.node {\n-            METHODS_WITH_NEGATION.iter().for_each(|&(method, negation_method)| {\n-                if method == path.name.as_str() {\n-                    span_lint_and_then(\n-                        self.cx,\n-                        NONMINIMAL_BOOL,\n-                        e.span,\n-                        \"this boolean expression can be simplified\",\n-                        |db| {\n-                            db.span_suggestion(\n-                                e.span,\n-                                \"try\",\n-                                negation_method.to_owned()\n-                            );\n-                        }\n-                    )\n-                }\n-            })\n+        if let ExprMethodCall(ref path, _, ref args) = inner.node {\n+            if args.len() == 1 {\n+                METHODS_WITH_NEGATION.iter().for_each(|&(method, negation_method)| {\n+                    if method == path.name.as_str() {\n+                        span_lint_and_then(\n+                            self.cx,\n+                            NONMINIMAL_BOOL,\n+                            e.span,\n+                            \"this boolean expression can be simplified\",\n+                            |db| {\n+                                db.span_suggestion(\n+                                    e.span,\n+                                    \"try\",\n+                                    negation_method.to_owned()\n+                                );\n+                            }\n+                        )\n+                    }\n+                })\n+            }\n         }\n     }\n }"}]}