{"sha": "c0c27761b42ad41db707d00e1988ad060341498f", "node_id": "MDY6Q29tbWl0NzI0NzEyOmMwYzI3NzYxYjQyYWQ0MWRiNzA3ZDAwZTE5ODhhZDA2MDM0MTQ5OGY=", "commit": {"author": {"name": "Seiichi Uchida", "email": "seuchida@gmail.com", "date": "2017-08-02T14:27:19Z"}, "committer": {"name": "Seiichi Uchida", "email": "seuchida@gmail.com", "date": "2017-08-02T14:27:19Z"}, "message": "Simplify comments separator", "tree": {"sha": "2787d174705f585bc889daa91d9d2651b378caee", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2787d174705f585bc889daa91d9d2651b378caee"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c0c27761b42ad41db707d00e1988ad060341498f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c0c27761b42ad41db707d00e1988ad060341498f", "html_url": "https://github.com/rust-lang/rust/commit/c0c27761b42ad41db707d00e1988ad060341498f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c0c27761b42ad41db707d00e1988ad060341498f/comments", "author": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "committer": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d95549775143113816133145c82c420e7e782879", "url": "https://api.github.com/repos/rust-lang/rust/commits/d95549775143113816133145c82c420e7e782879", "html_url": "https://github.com/rust-lang/rust/commit/d95549775143113816133145c82c420e7e782879"}], "stats": {"total": 12, "additions": 5, "deletions": 7}, "files": [{"sha": "7b2c016aed077ca4c6c8656e2aac1917f0988a3d", "filename": "src/items.rs", "status": "modified", "additions": 5, "deletions": 7, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/c0c27761b42ad41db707d00e1988ad060341498f/src%2Fitems.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c0c27761b42ad41db707d00e1988ad060341498f/src%2Fitems.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fitems.rs?ref=c0c27761b42ad41db707d00e1988ad060341498f", "patch": "@@ -2568,16 +2568,14 @@ fn rewrite_where_clause_rfc_style(\n     };\n     let preds_str = try_opt!(write_list(&items.collect::<Vec<_>>(), &fmt));\n \n-    let newline_before_where = if comment_before.is_empty() || comment_before.ends_with('\\n') {\n+    let comment_separator = |comment: &str, shape: Shape| if comment.is_empty() {\n         String::new()\n     } else {\n-        \"\\n\".to_owned() + &shape.indent.to_string(context.config)\n-    };\n-    let newline_after_where = if comment_after.is_empty() {\n-        String::new()\n-    } else {\n-        \"\\n\".to_owned() + &clause_shape.indent.to_string(context.config)\n+        format!(\"\\n{}\", shape.indent.to_string(context.config))\n     };\n+    let newline_before_where = comment_separator(&comment_before, shape);\n+    let newline_after_where = comment_separator(&comment_after, clause_shape);\n+\n     // 6 = `where `\n     let clause_sep = if where_clause_option.compress_where && comment_before.is_empty() &&\n         comment_after.is_empty() && !preds_str.contains('\\n') &&"}]}