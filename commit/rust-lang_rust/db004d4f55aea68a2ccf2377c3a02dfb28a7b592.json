{"sha": "db004d4f55aea68a2ccf2377c3a02dfb28a7b592", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRiMDA0ZDRmNTVhZWE2OGEyY2NmMjM3N2MzYTAyZGZiMjhhN2I1OTI=", "commit": {"author": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2017-06-30T20:44:45Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2017-06-30T20:44:45Z"}, "message": "Rollup merge of #42925 - tbu-:pr_document_file_open_errors, r=GuillaumeGomez\n\nDocument possible `io::ErrorKind`s of `fs::open`\n\nTry to make clear that this isn't an API guarantee for now, as we likely\nwant to refine these errors in the future, e.g. `ENOSPC` \"No space left\non device\".\n\nCC #40322", "tree": {"sha": "e15a95f8fa327b309505ee5e8a0e058fae678b06", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e15a95f8fa327b309505ee5e8a0e058fae678b06"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/db004d4f55aea68a2ccf2377c3a02dfb28a7b592", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/db004d4f55aea68a2ccf2377c3a02dfb28a7b592", "html_url": "https://github.com/rust-lang/rust/commit/db004d4f55aea68a2ccf2377c3a02dfb28a7b592", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/db004d4f55aea68a2ccf2377c3a02dfb28a7b592/comments", "author": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ed04f56e9d012c7c0415836b520b73b05ac168a6", "url": "https://api.github.com/repos/rust-lang/rust/commits/ed04f56e9d012c7c0415836b520b73b05ac168a6", "html_url": "https://github.com/rust-lang/rust/commit/ed04f56e9d012c7c0415836b520b73b05ac168a6"}, {"sha": "2783d0f7dac17f764c6580a04877e6813be574d2", "url": "https://api.github.com/repos/rust-lang/rust/commits/2783d0f7dac17f764c6580a04877e6813be574d2", "html_url": "https://github.com/rust-lang/rust/commit/2783d0f7dac17f764c6580a04877e6813be574d2"}], "stats": {"total": 39, "additions": 30, "deletions": 9}, "files": [{"sha": "88994b284c90dced81a4592873f405756d2c82d6", "filename": "src/libstd/fs.rs", "status": "modified", "additions": 30, "deletions": 9, "changes": 39, "blob_url": "https://github.com/rust-lang/rust/blob/db004d4f55aea68a2ccf2377c3a02dfb28a7b592/src%2Flibstd%2Ffs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/db004d4f55aea68a2ccf2377c3a02dfb28a7b592/src%2Flibstd%2Ffs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Ffs.rs?ref=db004d4f55aea68a2ccf2377c3a02dfb28a7b592", "patch": "@@ -653,15 +653,29 @@ impl OpenOptions {\n     /// # Errors\n     ///\n     /// This function will return an error under a number of different\n-    /// circumstances, to include but not limited to:\n-    ///\n-    /// * Opening a file that does not exist without setting `create` or\n-    ///   `create_new`.\n-    /// * Attempting to open a file with access that the user lacks\n-    ///   permissions for\n-    /// * Filesystem-level errors (full disk, etc)\n-    /// * Invalid combinations of open options (truncate without write access,\n-    ///   no access mode set, etc)\n+    /// circumstances. Some of these error conditions are listed here, together\n+    /// with their [`ErrorKind`]. The mapping to [`ErrorKind`]s is not part of\n+    /// the compatiblity contract of the function, especially the `Other` kind\n+    /// might change to more specific kinds in the future.\n+    ///\n+    /// * [`NotFound`]: The specified file does not exist and neither `create`\n+    ///   or `create_new` is set.\n+    /// * [`NotFound`]: One of the directory components of the file path does\n+    ///   not exist.\n+    /// * [`PermissionDenied`]: The user lacks permission to get the specified\n+    ///   access rights for the file.\n+    /// * [`PermissionDenied`]: The user lacks permission to open one of the\n+    ///   directory components of the specified path.\n+    /// * [`AlreadyExists`]: `create_new` was specified and the file already\n+    ///   exists.\n+    /// * [`InvalidInput`]: Invalid combinations of open options (truncate\n+    ///   without write access, no access mode set, etc.).\n+    /// * [`Other`]: One of the directory components of the specified file path\n+    ///   was not, in fact, a directory.\n+    /// * [`Other`]: Filesystem-level errors: full disk, write permission\n+    ///   requested on a read-only file system, exceeded disk quota, too many\n+    ///   open files, too long filename, too many symbolic links in the\n+    ///   specified path (Unix-like systems only), etc.\n     ///\n     /// # Examples\n     ///\n@@ -670,6 +684,13 @@ impl OpenOptions {\n     ///\n     /// let file = OpenOptions::new().open(\"foo.txt\");\n     /// ```\n+    ///\n+    /// [`ErrorKind`]: ../io/enum.ErrorKind.html\n+    /// [`AlreadyExists`]: ../io/enum.ErrorKind.html#variant.AlreadyExists\n+    /// [`InvalidInput`]: ../io/enum.ErrorKind.html#variant.InvalidInput\n+    /// [`NotFound`]: ../io/enum.ErrorKind.html#variant.NotFound\n+    /// [`Other`]: ../io/enum.ErrorKind.html#variant.Other\n+    /// [`PermissionDenied`]: ../io/enum.ErrorKind.html#variant.PermissionDenied\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n     pub fn open<P: AsRef<Path>>(&self, path: P) -> io::Result<File> {\n         self._open(path.as_ref())"}]}