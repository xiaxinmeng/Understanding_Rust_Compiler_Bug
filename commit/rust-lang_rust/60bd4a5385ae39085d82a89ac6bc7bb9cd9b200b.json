{"sha": "60bd4a5385ae39085d82a89ac6bc7bb9cd9b200b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjYwYmQ0YTUzODVhZTM5MDg1ZDgyYTg5YWM2YmM3YmI5Y2Q5YjIwMGI=", "commit": {"author": {"name": "Seth Pink", "email": "sethpink@gmail.com", "date": "2013-02-17T02:41:45Z"}, "committer": {"name": "Seth Pink", "email": "sethpink@gmail.com", "date": "2013-02-17T02:41:45Z"}, "message": "Removed more capture claueses.", "tree": {"sha": "b3a6e8629f16bf2cfb8503886baf6f20fe5cc9f9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b3a6e8629f16bf2cfb8503886baf6f20fe5cc9f9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/60bd4a5385ae39085d82a89ac6bc7bb9cd9b200b", "comment_count": 6, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/60bd4a5385ae39085d82a89ac6bc7bb9cd9b200b", "html_url": "https://github.com/rust-lang/rust/commit/60bd4a5385ae39085d82a89ac6bc7bb9cd9b200b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/60bd4a5385ae39085d82a89ac6bc7bb9cd9b200b/comments", "author": {"login": "sp0", "id": 1902223, "node_id": "MDQ6VXNlcjE5MDIyMjM=", "avatar_url": "https://avatars.githubusercontent.com/u/1902223?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sp0", "html_url": "https://github.com/sp0", "followers_url": "https://api.github.com/users/sp0/followers", "following_url": "https://api.github.com/users/sp0/following{/other_user}", "gists_url": "https://api.github.com/users/sp0/gists{/gist_id}", "starred_url": "https://api.github.com/users/sp0/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sp0/subscriptions", "organizations_url": "https://api.github.com/users/sp0/orgs", "repos_url": "https://api.github.com/users/sp0/repos", "events_url": "https://api.github.com/users/sp0/events{/privacy}", "received_events_url": "https://api.github.com/users/sp0/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sp0", "id": 1902223, "node_id": "MDQ6VXNlcjE5MDIyMjM=", "avatar_url": "https://avatars.githubusercontent.com/u/1902223?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sp0", "html_url": "https://github.com/sp0", "followers_url": "https://api.github.com/users/sp0/followers", "following_url": "https://api.github.com/users/sp0/following{/other_user}", "gists_url": "https://api.github.com/users/sp0/gists{/gist_id}", "starred_url": "https://api.github.com/users/sp0/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sp0/subscriptions", "organizations_url": "https://api.github.com/users/sp0/orgs", "repos_url": "https://api.github.com/users/sp0/repos", "events_url": "https://api.github.com/users/sp0/events{/privacy}", "received_events_url": "https://api.github.com/users/sp0/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1f4c758f9b4d92a209bb1a11b11ac937ad76d161", "url": "https://api.github.com/repos/rust-lang/rust/commits/1f4c758f9b4d92a209bb1a11b11ac937ad76d161", "html_url": "https://github.com/rust-lang/rust/commit/1f4c758f9b4d92a209bb1a11b11ac937ad76d161"}], "stats": {"total": 10, "additions": 5, "deletions": 5}, "files": [{"sha": "e992c2a3af74714259f0b2431086dfedd8679d10", "filename": "src/librustc/middle/astencode.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/60bd4a5385ae39085d82a89ac6bc7bb9cd9b200b/src%2Flibrustc%2Fmiddle%2Fastencode.rs", "raw_url": "https://github.com/rust-lang/rust/raw/60bd4a5385ae39085d82a89ac6bc7bb9cd9b200b/src%2Flibrustc%2Fmiddle%2Fastencode.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fastencode.rs?ref=60bd4a5385ae39085d82a89ac6bc7bb9cd9b200b", "patch": "@@ -821,7 +821,7 @@ fn encode_side_tables_for_ii(ecx: @e::encode_ctxt,\n         let ebml_w = copy ebml_w;\n         ast_util::visit_ids_for_inlined_item(\n             ii,\n-            fn@(id: ast::node_id, copy ebml_w) {\n+            fn@(id: ast::node_id) {\n                 // Note: this will cause a copy of ebml_w, which is bad as\n                 // it has mut fields.  But I believe it's harmless since\n                 // we generate balanced EBML."}, {"sha": "c48f56dd143bbe76486c7a1de5416708c8243670", "filename": "src/libstd/par.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/60bd4a5385ae39085d82a89ac6bc7bb9cd9b200b/src%2Flibstd%2Fpar.rs", "raw_url": "https://github.com/rust-lang/rust/raw/60bd4a5385ae39085d82a89ac6bc7bb9cd9b200b/src%2Flibstd%2Fpar.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fpar.rs?ref=60bd4a5385ae39085d82a89ac6bc7bb9cd9b200b", "patch": "@@ -107,7 +107,7 @@ pub fn mapi<A: Copy Owned, B: Copy Owned>(\n {\n     let slices = map_slices(xs, || {\n         let f = fn_factory();\n-        fn~(base: uint, slice : &[A], copy f) -> ~[B] {\n+        fn~(base: uint, slice : &[A]) -> ~[B] {\n             vec::mapi(slice, |i, x| {\n                 f(i + base, x)\n             })\n@@ -126,7 +126,7 @@ pub fn alli<A: Copy Owned>(\n {\n     do vec::all(map_slices(xs, || {\n         let f = fn_factory();\n-        fn~(base: uint, slice : &[A], copy f) -> bool {\n+        fn~(base: uint, slice : &[A]) -> bool {\n             vec::alli(slice, |i, x| {\n                 f(i + base, x)\n             })\n@@ -140,7 +140,7 @@ pub fn any<A: Copy Owned>(\n     fn_factory: &fn() -> ~fn(&A) -> bool) -> bool {\n     do vec::any(map_slices(xs, || {\n         let f = fn_factory();\n-        fn~(_base : uint, slice: &[A], copy f) -> bool {\n+        fn~(_base : uint, slice: &[A]) -> bool {\n             vec::any(slice, |x| f(x))\n         }\n     })) |x| { *x }"}, {"sha": "397b0f682d62cd796b3bdb3a04e7b1f1f666a514", "filename": "src/test/compile-fail/kindck-nonsendable-1.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/60bd4a5385ae39085d82a89ac6bc7bb9cd9b200b/src%2Ftest%2Fcompile-fail%2Fkindck-nonsendable-1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/60bd4a5385ae39085d82a89ac6bc7bb9cd9b200b/src%2Ftest%2Fcompile-fail%2Fkindck-nonsendable-1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fkindck-nonsendable-1.rs?ref=60bd4a5385ae39085d82a89ac6bc7bb9cd9b200b", "patch": "@@ -13,6 +13,6 @@ fn foo(_x: @uint) {}\n fn main() {\n     let x = @3u;\n     let _ = fn~() { foo(x); }; //~ ERROR value has non-owned type `@uint`\n-    let _ = fn~(copy x) { foo(x); }; //~ ERROR value has non-owned type `@uint`\n+    let _ = fn~() { foo(x); }; //~ ERROR value has non-owned type `@uint`\n     let _ = fn~() { foo(x); }; //~ ERROR value has non-owned type `@uint`\n }"}]}