{"sha": "2bf720900f94e36969af44ff8ac52470faf9af4b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJiZjcyMDkwMGY5NGUzNjk2OWFmNDRmZjhhYzUyNDcwZmFmOWFmNGI=", "commit": {"author": {"name": "Lukas Tobias Wirth", "email": "lukastw97@gmail.com", "date": "2021-05-20T08:25:04Z"}, "committer": {"name": "Lukas Tobias Wirth", "email": "lukastw97@gmail.com", "date": "2021-05-20T08:25:04Z"}, "message": "Check for differing attributes in granularity guessing", "tree": {"sha": "c31115d2c813e1f4a0e3bff9fff09d90b471edde", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c31115d2c813e1f4a0e3bff9fff09d90b471edde"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2bf720900f94e36969af44ff8ac52470faf9af4b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2bf720900f94e36969af44ff8ac52470faf9af4b", "html_url": "https://github.com/rust-lang/rust/commit/2bf720900f94e36969af44ff8ac52470faf9af4b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2bf720900f94e36969af44ff8ac52470faf9af4b/comments", "author": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b4fe479236f592fcbfa1422dda54253b77d8b0e1", "url": "https://api.github.com/repos/rust-lang/rust/commits/b4fe479236f592fcbfa1422dda54253b77d8b0e1", "html_url": "https://github.com/rust-lang/rust/commit/b4fe479236f592fcbfa1422dda54253b77d8b0e1"}], "stats": {"total": 28, "additions": 21, "deletions": 7}, "files": [{"sha": "aa61c5bcb467e601cd5dccd462d79cb2de0c474b", "filename": "crates/ide_db/src/helpers/insert_use.rs", "status": "modified", "additions": 8, "deletions": 6, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/2bf720900f94e36969af44ff8ac52470faf9af4b/crates%2Fide_db%2Fsrc%2Fhelpers%2Finsert_use.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2bf720900f94e36969af44ff8ac52470faf9af4b/crates%2Fide_db%2Fsrc%2Fhelpers%2Finsert_use.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_db%2Fsrc%2Fhelpers%2Finsert_use.rs?ref=2bf720900f94e36969af44ff8ac52470faf9af4b", "patch": "@@ -4,13 +4,13 @@ use std::cmp::Ordering;\n use hir::Semantics;\n use syntax::{\n     algo,\n-    ast::{self, make, AstNode, ModuleItemOwner, PathSegmentKind, VisibilityOwner},\n+    ast::{self, make, AstNode, AttrsOwner, ModuleItemOwner, PathSegmentKind, VisibilityOwner},\n     ted, AstToken, Direction, NodeOrToken, SyntaxNode, SyntaxToken,\n };\n \n use crate::{\n     helpers::merge_imports::{\n-        common_prefix, eq_visibility, try_merge_imports, use_tree_path_cmp, MergeBehavior,\n+        common_prefix, eq_attrs, eq_visibility, try_merge_imports, use_tree_path_cmp, MergeBehavior,\n     },\n     RootDatabase,\n };\n@@ -88,7 +88,7 @@ impl ImportScope {\n         let use_stmt = |item| match item {\n             ast::Item::Use(use_) => {\n                 let use_tree = use_.use_tree()?;\n-                Some((use_tree, use_.visibility()))\n+                Some((use_tree, use_.visibility(), use_.attrs()))\n             }\n             _ => None,\n         };\n@@ -98,7 +98,7 @@ impl ImportScope {\n         }\n         .filter_map(use_stmt);\n         let mut res = ImportGranularityGuess::Unknown;\n-        let (mut prev, mut prev_vis) = match use_stmts.next() {\n+        let (mut prev, mut prev_vis, mut prev_attrs) = match use_stmts.next() {\n             Some(it) => it,\n             None => return res,\n         };\n@@ -113,11 +113,12 @@ impl ImportScope {\n                 }\n             }\n \n-            let (curr, curr_vis) = match use_stmts.next() {\n+            let (curr, curr_vis, curr_attrs) = match use_stmts.next() {\n                 Some(it) => it,\n                 None => break res,\n             };\n-            if eq_visibility(prev_vis, curr_vis.clone()) {\n+            if eq_visibility(prev_vis, curr_vis.clone()) && eq_attrs(prev_attrs, curr_attrs.clone())\n+            {\n                 if let Some((prev_path, curr_path)) = prev.path().zip(curr.path()) {\n                     if let Some(_) = common_prefix(&prev_path, &curr_path) {\n                         if prev.use_tree_list().is_none() && curr.use_tree_list().is_none() {\n@@ -133,6 +134,7 @@ impl ImportScope {\n             }\n             prev = curr;\n             prev_vis = curr_vis;\n+            prev_attrs = curr_attrs;\n         }\n     }\n }"}, {"sha": "78a2a87b385a333072d5204eb8f29ccd4477e24c", "filename": "crates/ide_db/src/helpers/insert_use/tests.rs", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/2bf720900f94e36969af44ff8ac52470faf9af4b/crates%2Fide_db%2Fsrc%2Fhelpers%2Finsert_use%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2bf720900f94e36969af44ff8ac52470faf9af4b/crates%2Fide_db%2Fsrc%2Fhelpers%2Finsert_use%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_db%2Fsrc%2Fhelpers%2Finsert_use%2Ftests.rs?ref=2bf720900f94e36969af44ff8ac52470faf9af4b", "patch": "@@ -717,6 +717,18 @@ pub use foo::bar::qux;\n     );\n }\n \n+#[test]\n+fn guess_skips_differing_attrs() {\n+    check_guess(\n+        r\"\n+pub use foo::bar::baz;\n+#[doc(hidden)]\n+pub use foo::bar::qux;\n+\",\n+        ImportGranularityGuess::Unknown,\n+    );\n+}\n+\n #[test]\n fn guess_grouping_matters() {\n     check_guess("}, {"sha": "697e8bcffa90024734d5938eba5ccf79c046d513", "filename": "crates/ide_db/src/helpers/merge_imports.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2bf720900f94e36969af44ff8ac52470faf9af4b/crates%2Fide_db%2Fsrc%2Fhelpers%2Fmerge_imports.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2bf720900f94e36969af44ff8ac52470faf9af4b/crates%2Fide_db%2Fsrc%2Fhelpers%2Fmerge_imports.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_db%2Fsrc%2Fhelpers%2Fmerge_imports.rs?ref=2bf720900f94e36969af44ff8ac52470faf9af4b", "patch": "@@ -299,7 +299,7 @@ pub fn eq_visibility(vis0: Option<ast::Visibility>, vis1: Option<ast::Visibility\n     }\n }\n \n-fn eq_attrs(\n+pub fn eq_attrs(\n     attrs0: impl Iterator<Item = ast::Attr>,\n     attrs1: impl Iterator<Item = ast::Attr>,\n ) -> bool {"}]}