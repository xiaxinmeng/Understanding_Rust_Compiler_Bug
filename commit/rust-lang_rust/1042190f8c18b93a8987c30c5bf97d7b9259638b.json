{"sha": "1042190f8c18b93a8987c30c5bf97d7b9259638b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjEwNDIxOTBmOGMxOGI5M2E4OTg3YzMwYzViZjk3ZDdiOTI1OTYzOGI=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2017-10-22T00:35:05Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2017-10-22T00:35:05Z"}, "message": "Auto merge of #45400 - alexcrichton:bootstrap-thinlto, r=Mark-Simulacrum\n\nrustbuild: Compile rustc with ThinLTO\n\nThis commit enables ThinLTO for the compiler as well as multiple codegen units.\nThis is intended to get the benefits of parallel codegen while also avoiding\nany major loss of perf. Finally this commit is also intended as further testing\nfor #45320 and shaking out bugs.", "tree": {"sha": "7fbd98f83856140375e2a09f9ed4f0dec873dfa0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7fbd98f83856140375e2a09f9ed4f0dec873dfa0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1042190f8c18b93a8987c30c5bf97d7b9259638b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1042190f8c18b93a8987c30c5bf97d7b9259638b", "html_url": "https://github.com/rust-lang/rust/commit/1042190f8c18b93a8987c30c5bf97d7b9259638b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1042190f8c18b93a8987c30c5bf97d7b9259638b/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9ea3878dfec9b20993eaebfdb7566b29e49c52ab", "url": "https://api.github.com/repos/rust-lang/rust/commits/9ea3878dfec9b20993eaebfdb7566b29e49c52ab", "html_url": "https://github.com/rust-lang/rust/commit/9ea3878dfec9b20993eaebfdb7566b29e49c52ab"}, {"sha": "d01427f53e81a24e1c49d1672f37d4809c04a004", "url": "https://api.github.com/repos/rust-lang/rust/commits/d01427f53e81a24e1c49d1672f37d4809c04a004", "html_url": "https://github.com/rust-lang/rust/commit/d01427f53e81a24e1c49d1672f37d4809c04a004"}], "stats": {"total": 27, "additions": 21, "deletions": 6}, "files": [{"sha": "16a23eb364a3822b9e7d55d6d1bbd88754e57a70", "filename": "src/bootstrap/bin/rustc.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/1042190f8c18b93a8987c30c5bf97d7b9259638b/src%2Fbootstrap%2Fbin%2Frustc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1042190f8c18b93a8987c30c5bf97d7b9259638b/src%2Fbootstrap%2Fbin%2Frustc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fbin%2Frustc.rs?ref=1042190f8c18b93a8987c30c5bf97d7b9259638b", "patch": "@@ -175,6 +175,9 @@ fn main() {\n         if let Ok(s) = env::var(\"RUSTC_CODEGEN_UNITS\") {\n             cmd.arg(\"-C\").arg(format!(\"codegen-units={}\", s));\n         }\n+        if stage != \"0\" && env::var(\"RUSTC_THINLTO\").is_ok() {\n+            cmd.arg(\"-Ccodegen-units=16\").arg(\"-Zthinlto\");\n+        }\n \n         // Emit save-analysis info.\n         if env::var(\"RUSTC_SAVE_ANALYSIS\") == Ok(\"api\".to_string()) {"}, {"sha": "0dca395fa1fdbfe8f48d8ff709a247e8813351fb", "filename": "src/bootstrap/builder.rs", "status": "modified", "additions": 12, "deletions": 2, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/1042190f8c18b93a8987c30c5bf97d7b9259638b/src%2Fbootstrap%2Fbuilder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1042190f8c18b93a8987c30c5bf97d7b9259638b/src%2Fbootstrap%2Fbuilder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fbuilder.rs?ref=1042190f8c18b93a8987c30c5bf97d7b9259638b", "patch": "@@ -471,8 +471,6 @@ impl<'a> Builder<'a> {\n              .env(\"RUSTC\", self.out.join(\"bootstrap/debug/rustc\"))\n              .env(\"RUSTC_REAL\", self.rustc(compiler))\n              .env(\"RUSTC_STAGE\", stage.to_string())\n-             .env(\"RUSTC_CODEGEN_UNITS\",\n-                  self.config.rust_codegen_units.to_string())\n              .env(\"RUSTC_DEBUG_ASSERTIONS\",\n                   self.config.rust_debug_assertions.to_string())\n              .env(\"RUSTC_SYSROOT\", self.sysroot(compiler))\n@@ -486,6 +484,10 @@ impl<'a> Builder<'a> {\n              })\n              .env(\"TEST_MIRI\", self.config.test_miri.to_string());\n \n+        if let Some(n) = self.config.rust_codegen_units {\n+            cargo.env(\"RUSTC_CODEGEN_UNITS\", n.to_string());\n+        }\n+\n         if let Some(host_linker) = self.build.linker(compiler.host) {\n             cargo.env(\"RUSTC_HOST_LINKER\", host_linker);\n         }\n@@ -618,6 +620,14 @@ impl<'a> Builder<'a> {\n         // FIXME: cargo bench does not accept `--release`\n         if self.config.rust_optimize && cmd != \"bench\" {\n             cargo.arg(\"--release\");\n+\n+            if mode != Mode::Libstd &&\n+               self.config.rust_codegen_units.is_none() &&\n+               self.build.is_rust_llvm(compiler.host)\n+\n+            {\n+                cargo.env(\"RUSTC_THINLTO\", \"1\");\n+            }\n         }\n         if self.config.locked_deps {\n             cargo.arg(\"--locked\");"}, {"sha": "66e5efcea4e809e9b8ee025604a37a9d6f00a7fc", "filename": "src/bootstrap/config.rs", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/1042190f8c18b93a8987c30c5bf97d7b9259638b/src%2Fbootstrap%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1042190f8c18b93a8987c30c5bf97d7b9259638b/src%2Fbootstrap%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fconfig.rs?ref=1042190f8c18b93a8987c30c5bf97d7b9259638b", "patch": "@@ -81,7 +81,7 @@ pub struct Config {\n \n     // rust codegen options\n     pub rust_optimize: bool,\n-    pub rust_codegen_units: u32,\n+    pub rust_codegen_units: Option<u32>,\n     pub rust_debug_assertions: bool,\n     pub rust_debuginfo: bool,\n     pub rust_debuginfo_lines: bool,\n@@ -307,7 +307,6 @@ impl Config {\n         config.submodules = true;\n         config.docs = true;\n         config.rust_rpath = true;\n-        config.rust_codegen_units = 1;\n         config.channel = \"dev\".to_string();\n         config.codegen_tests = true;\n         config.ignore_git = false;\n@@ -470,8 +469,8 @@ impl Config {\n             config.musl_root = rust.musl_root.clone().map(PathBuf::from);\n \n             match rust.codegen_units {\n-                Some(0) => config.rust_codegen_units = num_cpus::get() as u32,\n-                Some(n) => config.rust_codegen_units = n,\n+                Some(0) => config.rust_codegen_units = Some(num_cpus::get() as u32),\n+                Some(n) => config.rust_codegen_units = Some(n),\n                 None => {}\n             }\n         }"}, {"sha": "d96a4f40d3f8ea0475582b7b9a6cca19afbc1926", "filename": "src/libstd/collections/hash/map.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/1042190f8c18b93a8987c30c5bf97d7b9259638b/src%2Flibstd%2Fcollections%2Fhash%2Fmap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1042190f8c18b93a8987c30c5bf97d7b9259638b/src%2Flibstd%2Fcollections%2Fhash%2Fmap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fcollections%2Fhash%2Fmap.rs?ref=1042190f8c18b93a8987c30c5bf97d7b9259638b", "patch": "@@ -1113,6 +1113,7 @@ impl<K, V, S> HashMap<K, V, S>\n     /// assert_eq!(map.get(&2), None);\n     /// ```\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n+    #[inline]\n     pub fn get<Q: ?Sized>(&self, k: &Q) -> Option<&V>\n         where K: Borrow<Q>,\n               Q: Hash + Eq\n@@ -2554,6 +2555,7 @@ impl<K, S, Q: ?Sized> super::Recover<Q> for HashMap<K, (), S>\n {\n     type Key = K;\n \n+    #[inline]\n     fn get(&self, key: &Q) -> Option<&K> {\n         self.search(key).into_occupied_bucket().map(|bucket| bucket.into_refs().0)\n     }\n@@ -2566,6 +2568,7 @@ impl<K, S, Q: ?Sized> super::Recover<Q> for HashMap<K, (), S>\n         self.search_mut(key).into_occupied_bucket().map(|bucket| pop_internal(bucket).0)\n     }\n \n+    #[inline]\n     fn replace(&mut self, key: K) -> Option<K> {\n         self.reserve(1);\n "}]}