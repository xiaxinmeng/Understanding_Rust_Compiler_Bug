{"sha": "0e4c829f2b09c6e3d9a326753517ce0514e356af", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBlNGM4MjlmMmIwOWM2ZTNkOWEzMjY3NTM1MTdjZTA1MTRlMzU2YWY=", "commit": {"author": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2017-11-12T12:19:15Z"}, "committer": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2017-11-12T20:38:24Z"}, "message": "Add \"As parameters\" items as well", "tree": {"sha": "1fa1c7be690e069f6e6c8d4001d76a121e051005", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1fa1c7be690e069f6e6c8d4001d76a121e051005"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0e4c829f2b09c6e3d9a326753517ce0514e356af", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0e4c829f2b09c6e3d9a326753517ce0514e356af", "html_url": "https://github.com/rust-lang/rust/commit/0e4c829f2b09c6e3d9a326753517ce0514e356af", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0e4c829f2b09c6e3d9a326753517ce0514e356af/comments", "author": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "committer": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5c5ab0d1fb5eb2f5ed53af658cbdf573e1bd3edd", "url": "https://api.github.com/repos/rust-lang/rust/commits/5c5ab0d1fb5eb2f5ed53af658cbdf573e1bd3edd", "html_url": "https://github.com/rust-lang/rust/commit/5c5ab0d1fb5eb2f5ed53af658cbdf573e1bd3edd"}], "stats": {"total": 47, "additions": 25, "deletions": 22}, "files": [{"sha": "8d0faf261f6c934df9314726a828edd992f69a47", "filename": "src/librustdoc/html/static/main.js", "status": "modified", "additions": 25, "deletions": 22, "changes": 47, "blob_url": "https://github.com/rust-lang/rust/blob/0e4c829f2b09c6e3d9a326753517ce0514e356af/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fmain.js", "raw_url": "https://github.com/rust-lang/rust/raw/0e4c829f2b09c6e3d9a326753517ce0514e356af/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fmain.js", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fmain.js?ref=0e4c829f2b09c6e3d9a326753517ce0514e356af", "patch": "@@ -564,7 +564,7 @@\n                 var results_length = 0;\n                 val = extractGenerics(val.substr(1, val.length - 2));\n                 for (var i = 0; i < nSearchWords; ++i) {\n-                    var param = findArg(searchIndex[i], val, true);\n+                    var in_args = findArg(searchIndex[i], val, true);\n                     var returned = checkReturned(searchIndex[i], val, true);\n                     var ty = searchIndex[i];\n                     if (searchWords[i] === val.name) {\n@@ -575,20 +575,20 @@\n                             results[ty.path + ty.name] = {id: i, index: -1};\n                             results_length += 1;\n                         }\n-                    } else if ((param === true || returned === true) &&\n+                    } else if ((in_args === true || returned === true) &&\n                                typePassesFilter(typeFilter, searchIndex[i].ty)) {\n                         if (results[ty.path + ty.name] === undefined) {\n                             results[ty.path + ty.name] = {\n                                 id: i,\n                                 index: -1,\n                                 dontValidate: true,\n-                                param: param,\n+                                in_args: in_args,\n                                 returned: returned,\n                             };\n                             results_length += 1;\n                         } else {\n-                            if (param === true) {\n-                                results[ty.path + ty.name].param = true;\n+                            if (in_args === true) {\n+                                results[ty.path + ty.name].in_args = true;\n                             }\n                             if (returned === true) {\n                                 results[ty.path + ty.name].returned = true;\n@@ -625,7 +625,7 @@\n                     var typeOutput = type.output ? type.output.name : \"\";\n                     var returned = checkReturned(ty, output, true);\n                     if (output.name === \"*\" || returned === true) {\n-                        var param = false;\n+                        var in_args = false;\n                         var module = false;\n \n                         if (input === \"*\") {\n@@ -635,23 +635,23 @@\n                             for (var it = 0; allFound === true && it < inputs.length; it++) {\n                                 allFound = checkType(type, inputs[it], true);\n                             }\n-                            param = allFound;\n+                            in_args = allFound;\n                         }\n-                        if (param === true || returned === true || module === true) {\n+                        if (in_args === true || returned === true || module === true) {\n                             if (results[ty.path + ty.name] !== undefined) {\n                                 if (returned === true) {\n                                     results[ty.path + ty.name].returned = true;\n                                 }\n-                                if (param === true) {\n-                                    results[ty.path + ty.name].param = true;\n+                                if (in_args === true) {\n+                                    results[ty.path + ty.name].in_args = true;\n                                 }\n                             } else {\n                                 results[ty.path + ty.name] = {\n                                     id: i,\n                                     index: -1,\n                                     dontValidate: true,\n                                     returned: returned,\n-                                    param: param,\n+                                    in_args: in_args,\n                                 };\n                             }\n                         }\n@@ -677,10 +677,10 @@\n                             continue;\n                         }\n                         var returned = false;\n-                        var param = false;\n+                        var in_args = false;\n                         var index = -1;\n                         // we want lev results to go lower than others\n-                        var lev = 0;\n+                        var lev = MAX_LEV_DISTANCE;\n \n                         if (searchWords[j].indexOf(split[i]) > -1 ||\n                             searchWords[j].indexOf(val) > -1 ||\n@@ -696,7 +696,7 @@\n                             if (typePassesFilter(typeFilter, searchIndex[j].ty) &&\n                                 (results[ty.path + ty.name] === undefined ||\n                                  results[ty.path + ty.name].lev > lev_distance)) {\n-                                lev = lev_distance;\n+                                lev = min(lev, lev_distance);\n                                 index = 0;\n                             }\n                         }\n@@ -705,8 +705,8 @@\n                             if (typePassesFilter(typeFilter, searchIndex[j].ty) &&\n                                 (results[ty.path + ty.name] === undefined ||\n                                  results[ty.path + ty.name].lev > lev_distance)) {\n-                                param = true;\n-                                lev = lev_distance;\n+                                in_args = true;\n+                                lev = min(lev_distance, lev);\n                                 index = 0;\n                             }\n                         }\n@@ -716,7 +716,7 @@\n                                 (results[ty.path + ty.name] === undefined ||\n                                  results[ty.path + ty.name].lev > lev_distance)) {\n                                 returned = true;\n-                                lev = lev_distance;\n+                                lev = min(lev_distance, lev);\n                                 index = 0;\n                             }\n                         }\n@@ -726,16 +726,16 @@\n                                     id: j,\n                                     index: index,\n                                     lev: lev,\n-                                    param: param,\n+                                    in_args: in_args,\n                                     returned: returned,\n                                 };\n                                 results_length += 1;\n                             } else {\n                                 if (results[ty.path + ty.name].lev > lev) {\n                                     results[ty.path + ty.name].lev = lev;\n                                 }\n-                                if (param === true) {\n-                                    results[ty.path + ty.name].param = true;\n+                                if (in_args === true) {\n+                                    results[ty.path + ty.name].in_args = true;\n                                 }\n                                 if (returned === true) {\n                                     results[ty.path + ty.name].returned = true;\n@@ -1164,11 +1164,14 @@\n                     filterdata.push([obj.name, obj.ty, obj.path, obj.desc]);\n                     if (obj.type) {\n                         if (results['returned'].length < maxResults &&\n-                            resultIndex[i].returned === true) {\n+                            resultIndex[i].returned === true)\n+                        {\n                             results['returned'].push(obj);\n                             added = true;\n                         }\n-                        if (results['in_args'].length < maxResults && resultIndex[i] === true) {\n+                        if (results['in_args'].length < maxResults &&\n+                            resultIndex[i].in_args === true)\n+                        {\n                             results['in_args'].push(obj);\n                             added = true;\n                         }"}]}