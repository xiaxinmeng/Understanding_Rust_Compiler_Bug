{"sha": "c8c99429d2d40e70824dae90305acae88a3d917d", "node_id": "MDY6Q29tbWl0NzI0NzEyOmM4Yzk5NDI5ZDJkNDBlNzA4MjRkYWU5MDMwNWFjYWU4OGEzZDkxN2Q=", "commit": {"author": {"name": "Young-il Choi", "email": "duddlf.choi@samsung.com", "date": "2013-12-27T08:29:53Z"}, "committer": {"name": "Young-il Choi", "email": "duddlf.choi@samsung.com", "date": "2014-01-06T04:04:26Z"}, "message": "librustc: move target dependent logic to back::link", "tree": {"sha": "93a39aa8471a205ad0d7114038508bc5d69d9075", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/93a39aa8471a205ad0d7114038508bc5d69d9075"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c8c99429d2d40e70824dae90305acae88a3d917d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c8c99429d2d40e70824dae90305acae88a3d917d", "html_url": "https://github.com/rust-lang/rust/commit/c8c99429d2d40e70824dae90305acae88a3d917d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c8c99429d2d40e70824dae90305acae88a3d917d/comments", "author": {"login": "yichoi", "id": 3222276, "node_id": "MDQ6VXNlcjMyMjIyNzY=", "avatar_url": "https://avatars.githubusercontent.com/u/3222276?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yichoi", "html_url": "https://github.com/yichoi", "followers_url": "https://api.github.com/users/yichoi/followers", "following_url": "https://api.github.com/users/yichoi/following{/other_user}", "gists_url": "https://api.github.com/users/yichoi/gists{/gist_id}", "starred_url": "https://api.github.com/users/yichoi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yichoi/subscriptions", "organizations_url": "https://api.github.com/users/yichoi/orgs", "repos_url": "https://api.github.com/users/yichoi/repos", "events_url": "https://api.github.com/users/yichoi/events{/privacy}", "received_events_url": "https://api.github.com/users/yichoi/received_events", "type": "User", "site_admin": false}, "committer": {"login": "yichoi", "id": 3222276, "node_id": "MDQ6VXNlcjMyMjIyNzY=", "avatar_url": "https://avatars.githubusercontent.com/u/3222276?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yichoi", "html_url": "https://github.com/yichoi", "followers_url": "https://api.github.com/users/yichoi/followers", "following_url": "https://api.github.com/users/yichoi/following{/other_user}", "gists_url": "https://api.github.com/users/yichoi/gists{/gist_id}", "starred_url": "https://api.github.com/users/yichoi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yichoi/subscriptions", "organizations_url": "https://api.github.com/users/yichoi/orgs", "repos_url": "https://api.github.com/users/yichoi/repos", "events_url": "https://api.github.com/users/yichoi/events{/privacy}", "received_events_url": "https://api.github.com/users/yichoi/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "19e97f5c5db9b47558c7bdc2249c228254b81a1e", "url": "https://api.github.com/repos/rust-lang/rust/commits/19e97f5c5db9b47558c7bdc2249c228254b81a1e", "html_url": "https://github.com/rust-lang/rust/commit/19e97f5c5db9b47558c7bdc2249c228254b81a1e"}], "stats": {"total": 26, "additions": 18, "deletions": 8}, "files": [{"sha": "cc96bea9fa1b14bd6b02c5287eb46d99b0da31b2", "filename": "src/librustc/back/archive.rs", "status": "modified", "additions": 2, "deletions": 8, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/c8c99429d2d40e70824dae90305acae88a3d917d/src%2Flibrustc%2Fback%2Farchive.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c8c99429d2d40e70824dae90305acae88a3d917d/src%2Flibrustc%2Fback%2Farchive.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fback%2Farchive.rs?ref=c8c99429d2d40e70824dae90305acae88a3d917d", "patch": "@@ -10,6 +10,7 @@\n \n //! A helper class for dealing with static archives\n \n+use back::link::{get_ar_prog};\n use driver::session::Session;\n use metadata::filesearch;\n use lib::llvm::{ArchiveRef, llvm};\n@@ -37,14 +38,7 @@ pub struct ArchiveRO {\n \n fn run_ar(sess: Session, args: &str, cwd: Option<&Path>,\n         paths: &[&Path]) -> ProcessOutput {\n-    let ar = if sess.opts.target_triple == ~\"arm-linux-androideabi\" {\n-        match sess.opts.android_cross_path {\n-            Some(ref path) => *path + \"/bin/\" + \"arm-linux-androideabi-ar\",\n-            None => ~\"arm-linux-androideabi-ar\"\n-        }\n-    } else {\n-        sess.opts.ar.clone().unwrap_or_else(|| ~\"ar\")\n-    };\n+    let ar = get_ar_prog(sess);\n \n     let mut args = ~[args.to_owned()];\n     let mut paths = paths.iter().map(|p| p.as_str().unwrap().to_owned());"}, {"sha": "a0364101d3debe423d5bfa5ad4dbb841e28cf53c", "filename": "src/librustc/back/link.rs", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/c8c99429d2d40e70824dae90305acae88a3d917d/src%2Flibrustc%2Fback%2Flink.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c8c99429d2d40e70824dae90305acae88a3d917d/src%2Flibrustc%2Fback%2Flink.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fback%2Flink.rs?ref=c8c99429d2d40e70824dae90305acae88a3d917d", "patch": "@@ -736,6 +736,22 @@ pub fn get_cc_prog(sess: Session) -> ~str {\n     }\n }\n \n+pub fn get_ar_prog(sess: Session) -> ~str {\n+    match sess.targ_cfg.os {\n+        abi::OsAndroid => match sess.opts.android_cross_path {\n+            Some(ref path) => format!(\"{}/bin/arm-linux-androideabi-ar\", *path),\n+            None => {\n+                sess.fatal(\"need Android NDK path for linking \\\n+                            (--android-cross-path)\")\n+            }\n+        },\n+        _ => match sess.opts.ar {\n+            Some(ref ar) => format!(\"{}\", *ar),\n+            None => ~\"ar\"\n+        },\n+    }\n+}\n+\n /// Perform the linkage portion of the compilation phase. This will generate all\n /// of the requested outputs for this compilation session.\n pub fn link_binary(sess: Session,"}]}