{"sha": "3d6c79109e869de58d6545f683b3e796237039fb", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNkNmM3OTEwOWU4NjlkZTU4ZDY1NDVmNjgzYjNlNzk2MjM3MDM5ZmI=", "commit": {"author": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2012-04-20T03:05:50Z"}, "committer": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2012-04-20T04:01:11Z"}, "message": "update syntax to include a slash", "tree": {"sha": "339f570d9530df783143415f618af03f76648788", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/339f570d9530df783143415f618af03f76648788"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3d6c79109e869de58d6545f683b3e796237039fb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3d6c79109e869de58d6545f683b3e796237039fb", "html_url": "https://github.com/rust-lang/rust/commit/3d6c79109e869de58d6545f683b3e796237039fb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3d6c79109e869de58d6545f683b3e796237039fb/comments", "author": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3c995fb8f3676a313f5ac883e175cc5fe354e640", "url": "https://api.github.com/repos/rust-lang/rust/commits/3c995fb8f3676a313f5ac883e175cc5fe354e640", "html_url": "https://github.com/rust-lang/rust/commit/3c995fb8f3676a313f5ac883e175cc5fe354e640"}], "stats": {"total": 39, "additions": 22, "deletions": 17}, "files": [{"sha": "d891275db5d13350c225423dd1be099cd8ef7119", "filename": "src/librustsyntax/parse/parser.rs", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/3d6c79109e869de58d6545f683b3e796237039fb/src%2Flibrustsyntax%2Fparse%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3d6c79109e869de58d6545f683b3e796237039fb/src%2Flibrustsyntax%2Fparse%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustsyntax%2Fparse%2Fparser.rs?ref=3d6c79109e869de58d6545f683b3e796237039fb", "patch": "@@ -2249,7 +2249,12 @@ fn parse_item_type(p: parser, attrs: [ast::attribute]) -> @ast::item {\n }\n \n fn parse_region_param(p: parser) -> ast::region_param {\n-    if eat(p, token::BINOP(token::AND)) {ast::rp_self} else {ast::rp_none}\n+    if eat(p, token::BINOP(token::SLASH)) {\n+        expect(p, token::BINOP(token::AND));\n+        ast::rp_self\n+    } else {\n+        ast::rp_none\n+    }\n }\n \n fn parse_item_enum(p: parser, attrs: [ast::attribute]) -> @ast::item {"}, {"sha": "52673a548ec7b60cd7724358d7ec0b2ed1987c14", "filename": "src/librustsyntax/print/pprust.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3d6c79109e869de58d6545f683b3e796237039fb/src%2Flibrustsyntax%2Fprint%2Fpprust.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3d6c79109e869de58d6545f683b3e796237039fb/src%2Flibrustsyntax%2Fprint%2Fpprust.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustsyntax%2Fprint%2Fpprust.rs?ref=3d6c79109e869de58d6545f683b3e796237039fb", "patch": "@@ -1407,7 +1407,7 @@ fn print_bounds(s: ps, bounds: @[ast::ty_param_bound]) {\n \n fn print_region_param(s: ps, rp: ast::region_param) {\n     alt rp {\n-      ast::rp_self { word(s.s, \"&\") }\n+      ast::rp_self { word(s.s, \"/&\") }\n       ast::rp_none { }\n     }\n }"}, {"sha": "3418f3d92c059356c09dc90642165cc5760e6015", "filename": "src/test/bench/shootout-binarytrees.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3d6c79109e869de58d6545f683b3e796237039fb/src%2Ftest%2Fbench%2Fshootout-binarytrees.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3d6c79109e869de58d6545f683b3e796237039fb/src%2Ftest%2Fbench%2Fshootout-binarytrees.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fbench%2Fshootout-binarytrees.rs?ref=3d6c79109e869de58d6545f683b3e796237039fb", "patch": "@@ -2,7 +2,7 @@ use std;\n import std::arena;\n import std::arena::arena;\n \n-enum tree& { nil, node(&tree, &tree, int), }\n+enum tree/& { nil, node(&tree, &tree, int), }\n \n fn item_check(t: &tree) -> int {\n     alt *t {"}, {"sha": "226039f4c2a5a89360c46a9a53a639d4d3f9b7f5", "filename": "src/test/compile-fail/regions-creating-enums.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3d6c79109e869de58d6545f683b3e796237039fb/src%2Ftest%2Fcompile-fail%2Fregions-creating-enums.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3d6c79109e869de58d6545f683b3e796237039fb/src%2Ftest%2Fcompile-fail%2Fregions-creating-enums.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fregions-creating-enums.rs?ref=3d6c79109e869de58d6545f683b3e796237039fb", "patch": "@@ -1,4 +1,4 @@\n-enum ast& {\n+enum ast/& {\n     num(uint),\n     add(&ast, &ast)\n }"}, {"sha": "4126ef7554733d72ca5cb9d778a03e68e65ee87c", "filename": "src/test/compile-fail/regions-in-enums.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/3d6c79109e869de58d6545f683b3e796237039fb/src%2Ftest%2Fcompile-fail%2Fregions-in-enums.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3d6c79109e869de58d6545f683b3e796237039fb/src%2Ftest%2Fcompile-fail%2Fregions-in-enums.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fregions-in-enums.rs?ref=3d6c79109e869de58d6545f683b3e796237039fb", "patch": "@@ -10,15 +10,15 @@ enum no2 {\n     x2(&foo.uint) //! ERROR named regions other than `self` are not allowed as part of a type declaration\n }\n \n-enum yes0& {\n+enum yes0/& {\n     x3(&uint)\n }\n \n-enum yes1& {\n+enum yes1/& {\n     x4(&self.uint)\n }\n \n-enum yes2& {\n+enum yes2/& {\n     x5(&foo.uint) //! ERROR named regions other than `self` are not allowed as part of a type declaration\n }\n "}, {"sha": "1c8e6c003edfddd410318467539dc86a410d11b1", "filename": "src/test/compile-fail/regions-in-rsrcs.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/3d6c79109e869de58d6545f683b3e796237039fb/src%2Ftest%2Fcompile-fail%2Fregions-in-rsrcs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3d6c79109e869de58d6545f683b3e796237039fb/src%2Ftest%2Fcompile-fail%2Fregions-in-rsrcs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fregions-in-rsrcs.rs?ref=3d6c79109e869de58d6545f683b3e796237039fb", "patch": "@@ -7,13 +7,13 @@ resource no1(x: &self.uint) { //! ERROR to use region types here, the containing\n resource no2(x: &foo.uint) { //! ERROR named regions other than `self` are not allowed as part of a type declaration\n }\n \n-resource yes0&(x: &uint) {\n+resource yes0/&(x: &uint) {\n }\n \n-resource yes1&(x: &self.uint) {\n+resource yes1/&(x: &self.uint) {\n }\n \n-resource yes2&(x: &foo.uint) { //! ERROR named regions other than `self` are not allowed as part of a type declaration\n+resource yes2/&(x: &foo.uint) { //! ERROR named regions other than `self` are not allowed as part of a type declaration\n }\n \n fn main() {}\n\\ No newline at end of file"}, {"sha": "49202a340a14634f93caf576925f5ab1d5264059", "filename": "src/test/compile-fail/regions-in-type-items.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/3d6c79109e869de58d6545f683b3e796237039fb/src%2Ftest%2Fcompile-fail%2Fregions-in-type-items.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3d6c79109e869de58d6545f683b3e796237039fb/src%2Ftest%2Fcompile-fail%2Fregions-in-type-items.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fregions-in-type-items.rs?ref=3d6c79109e869de58d6545f683b3e796237039fb", "patch": "@@ -10,15 +10,15 @@ type item_ty_no2 = {\n     x: &foo.uint //! ERROR named regions other than `self` are not allowed as part of a type declaration\n };\n \n-type item_ty_yes0& = {\n+type item_ty_yes0/& = {\n     x: &uint\n };\n \n-type item_ty_yes1& = {\n+type item_ty_yes1/& = {\n     x: &self.uint\n };\n \n-type item_ty_yes2& = {\n+type item_ty_yes2/& = {\n     x: &foo.uint //! ERROR named regions other than `self` are not allowed as part of a type declaration\n };\n "}, {"sha": "e761cefab58c30b4783da9b7f16bd8d41059876c", "filename": "src/test/run-pass/regions-mock-trans-impls.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/3d6c79109e869de58d6545f683b3e796237039fb/src%2Ftest%2Frun-pass%2Fregions-mock-trans-impls.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3d6c79109e869de58d6545f683b3e796237039fb/src%2Ftest%2Frun-pass%2Fregions-mock-trans-impls.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fregions-mock-trans-impls.rs?ref=3d6c79109e869de58d6545f683b3e796237039fb", "patch": "@@ -2,11 +2,11 @@ import libc, sys, unsafe;\n \n enum arena = ();\n \n-type bcx& = {\n+type bcx/& = {\n     fcx: &fcx\n };\n \n-type fcx& = {\n+type fcx/& = {\n     arena: &arena,\n     ccx: &ccx\n };"}, {"sha": "4568bca444c9d5efacab047f13b4418f3a13d418", "filename": "src/test/run-pass/regions-mock-trans.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/3d6c79109e869de58d6545f683b3e796237039fb/src%2Ftest%2Frun-pass%2Fregions-mock-trans.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3d6c79109e869de58d6545f683b3e796237039fb/src%2Ftest%2Frun-pass%2Fregions-mock-trans.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fregions-mock-trans.rs?ref=3d6c79109e869de58d6545f683b3e796237039fb", "patch": "@@ -2,11 +2,11 @@ import libc, sys, unsafe;\n \n enum arena = ();\n \n-type bcx& = {\n+type bcx/& = {\n     fcx: &fcx\n };\n \n-type fcx& = {\n+type fcx/& = {\n     arena: &arena,\n     ccx: &ccx\n };"}]}