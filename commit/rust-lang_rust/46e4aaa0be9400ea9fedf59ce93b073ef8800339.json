{"sha": "46e4aaa0be9400ea9fedf59ce93b073ef8800339", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ2ZTRhYWEwYmU5NDAwZWE5ZmVkZjU5Y2U5M2IwNzNlZjg4MDAzMzk=", "commit": {"author": {"name": "Haitao Li", "email": "lihaitao@gmail.com", "date": "2012-04-09T06:38:53Z"}, "committer": {"name": "Haitao Li", "email": "lihaitao@gmail.com", "date": "2012-04-09T06:38:53Z"}, "message": "rustc: External fns declared as fns not global variables\n\nIssue #2167", "tree": {"sha": "649895ba42b99611bc78b366f15f79d8d34c8c50", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/649895ba42b99611bc78b366f15f79d8d34c8c50"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/46e4aaa0be9400ea9fedf59ce93b073ef8800339", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/46e4aaa0be9400ea9fedf59ce93b073ef8800339", "html_url": "https://github.com/rust-lang/rust/commit/46e4aaa0be9400ea9fedf59ce93b073ef8800339", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/46e4aaa0be9400ea9fedf59ce93b073ef8800339/comments", "author": {"login": "lht", "id": 19508, "node_id": "MDQ6VXNlcjE5NTA4", "avatar_url": "https://avatars.githubusercontent.com/u/19508?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lht", "html_url": "https://github.com/lht", "followers_url": "https://api.github.com/users/lht/followers", "following_url": "https://api.github.com/users/lht/following{/other_user}", "gists_url": "https://api.github.com/users/lht/gists{/gist_id}", "starred_url": "https://api.github.com/users/lht/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lht/subscriptions", "organizations_url": "https://api.github.com/users/lht/orgs", "repos_url": "https://api.github.com/users/lht/repos", "events_url": "https://api.github.com/users/lht/events{/privacy}", "received_events_url": "https://api.github.com/users/lht/received_events", "type": "User", "site_admin": false}, "committer": {"login": "lht", "id": 19508, "node_id": "MDQ6VXNlcjE5NTA4", "avatar_url": "https://avatars.githubusercontent.com/u/19508?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lht", "html_url": "https://github.com/lht", "followers_url": "https://api.github.com/users/lht/followers", "following_url": "https://api.github.com/users/lht/following{/other_user}", "gists_url": "https://api.github.com/users/lht/gists{/gist_id}", "starred_url": "https://api.github.com/users/lht/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lht/subscriptions", "organizations_url": "https://api.github.com/users/lht/orgs", "repos_url": "https://api.github.com/users/lht/repos", "events_url": "https://api.github.com/users/lht/events{/privacy}", "received_events_url": "https://api.github.com/users/lht/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "460b92a37ff8b8a913c1d92c4755be66b3cee8aa", "url": "https://api.github.com/repos/rust-lang/rust/commits/460b92a37ff8b8a913c1d92c4755be66b3cee8aa", "html_url": "https://github.com/rust-lang/rust/commit/460b92a37ff8b8a913c1d92c4755be66b3cee8aa"}], "stats": {"total": 15, "additions": 11, "deletions": 4}, "files": [{"sha": "93f88b158c2a2ee0398926b71a9f3081606dd537", "filename": "src/rustc/middle/trans/base.rs", "status": "modified", "additions": 11, "deletions": 4, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/46e4aaa0be9400ea9fedf59ce93b073ef8800339/src%2Frustc%2Fmiddle%2Ftrans%2Fbase.rs", "raw_url": "https://github.com/rust-lang/rust/raw/46e4aaa0be9400ea9fedf59ce93b073ef8800339/src%2Frustc%2Fmiddle%2Ftrans%2Fbase.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustc%2Fmiddle%2Ftrans%2Fbase.rs?ref=46e4aaa0be9400ea9fedf59ce93b073ef8800339", "patch": "@@ -1772,11 +1772,17 @@ fn lval_no_env(bcx: block, val: ValueRef, kind: lval_kind)\n fn trans_external_path(ccx: @crate_ctxt, did: ast::def_id, t: ty::t)\n     -> ValueRef {\n     let name = csearch::get_symbol(ccx.sess.cstore, did);\n-    let llty = alt ty::get(t).struct {\n-      ty::ty_fn(_) { type_of_fn_from_ty(ccx, t) }\n-      _ { type_of(ccx, t) }\n+    alt ty::get(t).struct {\n+      ty::ty_fn(_) {\n+        let llty = type_of_fn_from_ty(ccx, t);\n+        ret get_extern_fn(ccx.externs, ccx.llmod, name,\n+                          lib::llvm::CCallConv, llty);\n+      }\n+      _ {\n+        let llty = type_of(ccx, t);\n+        ret get_extern_const(ccx.externs, ccx.llmod, name, llty);\n+      }\n     };\n-    ret get_extern_const(ccx.externs, ccx.llmod, name, llty);\n }\n \n fn normalize_for_monomorphization(tcx: ty::ctxt, ty: ty::t) -> option<ty::t> {\n@@ -4498,6 +4504,7 @@ fn create_main_wrapper(ccx: @crate_ctxt, sp: span, main_llfn: ValueRef,\n         let start_ty = T_fn([val_ty(rust_main), ccx.int_type, ccx.int_type,\n                              val_ty(crate_map)], ccx.int_type);\n         let start = decl_cdecl_fn(ccx.llmod, \"rust_start\", start_ty);\n+\n         let args = [rust_main, llvm::LLVMGetParam(llfn, 0 as c_uint),\n                     llvm::LLVMGetParam(llfn, 1 as c_uint), crate_map];\n         let result = unsafe {"}]}