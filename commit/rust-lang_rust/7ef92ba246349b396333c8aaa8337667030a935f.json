{"sha": "7ef92ba246349b396333c8aaa8337667030a935f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdlZjkyYmEyNDYzNDliMzk2MzMzYzhhYWE4MzM3NjY3MDMwYTkzNWY=", "commit": {"author": {"name": "John Clements", "email": "clements@racket-lang.org", "date": "2013-04-19T17:49:02Z"}, "committer": {"name": "John Clements", "email": "clements@racket-lang.org", "date": "2013-04-28T16:51:15Z"}, "message": "rename parse_instance_var to parse_name_and_ty\n\nthe name no longer made sense. perhaps this could just be inlined.", "tree": {"sha": "e0511ae80109dc5541ba43352fa1bf2bead491ec", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e0511ae80109dc5541ba43352fa1bf2bead491ec"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7ef92ba246349b396333c8aaa8337667030a935f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7ef92ba246349b396333c8aaa8337667030a935f", "html_url": "https://github.com/rust-lang/rust/commit/7ef92ba246349b396333c8aaa8337667030a935f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7ef92ba246349b396333c8aaa8337667030a935f/comments", "author": {"login": "jbclements", "id": 226617, "node_id": "MDQ6VXNlcjIyNjYxNw==", "avatar_url": "https://avatars.githubusercontent.com/u/226617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jbclements", "html_url": "https://github.com/jbclements", "followers_url": "https://api.github.com/users/jbclements/followers", "following_url": "https://api.github.com/users/jbclements/following{/other_user}", "gists_url": "https://api.github.com/users/jbclements/gists{/gist_id}", "starred_url": "https://api.github.com/users/jbclements/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jbclements/subscriptions", "organizations_url": "https://api.github.com/users/jbclements/orgs", "repos_url": "https://api.github.com/users/jbclements/repos", "events_url": "https://api.github.com/users/jbclements/events{/privacy}", "received_events_url": "https://api.github.com/users/jbclements/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jbclements", "id": 226617, "node_id": "MDQ6VXNlcjIyNjYxNw==", "avatar_url": "https://avatars.githubusercontent.com/u/226617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jbclements", "html_url": "https://github.com/jbclements", "followers_url": "https://api.github.com/users/jbclements/followers", "following_url": "https://api.github.com/users/jbclements/following{/other_user}", "gists_url": "https://api.github.com/users/jbclements/gists{/gist_id}", "starred_url": "https://api.github.com/users/jbclements/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jbclements/subscriptions", "organizations_url": "https://api.github.com/users/jbclements/orgs", "repos_url": "https://api.github.com/users/jbclements/repos", "events_url": "https://api.github.com/users/jbclements/events{/privacy}", "received_events_url": "https://api.github.com/users/jbclements/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2a74c58588e116d250fa9043ff4914cc68ef49e4", "url": "https://api.github.com/repos/rust-lang/rust/commits/2a74c58588e116d250fa9043ff4914cc68ef49e4", "html_url": "https://github.com/rust-lang/rust/commit/2a74c58588e116d250fa9043ff4914cc68ef49e4"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "d15ec21a63f8c6fa76812999ed0365f4024d7e55", "filename": "src/libsyntax/parse/parser.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/7ef92ba246349b396333c8aaa8337667030a935f/src%2Flibsyntax%2Fparse%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7ef92ba246349b396333c8aaa8337667030a935f/src%2Flibsyntax%2Fparse%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fparser.rs?ref=7ef92ba246349b396333c8aaa8337667030a935f", "patch": "@@ -2463,8 +2463,8 @@ pub impl Parser {\n         return @spanned(lo, self.last_span.hi, decl_local(locals));\n     }\n \n-    /* assumes \"let\" token has already been consumed */\n-    fn parse_instance_var(&self, pr: visibility) -> @struct_field {\n+    // parse a structure field\n+    fn parse_name_and_ty(&self, pr: visibility) -> @struct_field {\n         let mut is_mutbl = struct_immutable;\n         let lo = self.span.lo;\n         if self.eat_keyword(&~\"mut\") {\n@@ -3327,7 +3327,7 @@ pub impl Parser {\n             self.obsolete(*self.last_span, ObsoleteLet);\n         }\n \n-        let a_var = self.parse_instance_var(vis);\n+        let a_var = self.parse_name_and_ty(vis);\n         match *self.token {\n             token::SEMI => {\n                 self.obsolete(copy *self.span, ObsoleteFieldTerminator);"}]}