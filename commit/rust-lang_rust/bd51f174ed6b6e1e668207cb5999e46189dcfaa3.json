{"sha": "bd51f174ed6b6e1e668207cb5999e46189dcfaa3", "node_id": "C_kwDOAAsO6NoAKGJkNTFmMTc0ZWQ2YjZlMWU2NjgyMDdjYjU5OTllNDYxODlkY2ZhYTM", "commit": {"author": {"name": "Guillaume Gomez", "email": "guillaume.gomez@huawei.com", "date": "2022-03-27T01:01:34Z"}, "committer": {"name": "Guillaume Gomez", "email": "guillaume.gomez@huawei.com", "date": "2022-03-27T01:01:34Z"}, "message": "Remove SelectionContext::allow_negative_impls field", "tree": {"sha": "43eb79bf502955e7bd5a8365824e24be0a3c4f36", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/43eb79bf502955e7bd5a8365824e24be0a3c4f36"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bd51f174ed6b6e1e668207cb5999e46189dcfaa3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bd51f174ed6b6e1e668207cb5999e46189dcfaa3", "html_url": "https://github.com/rust-lang/rust/commit/bd51f174ed6b6e1e668207cb5999e46189dcfaa3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bd51f174ed6b6e1e668207cb5999e46189dcfaa3/comments", "author": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "committer": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ad887322541b1c255b210cf87fae675072d1027f", "url": "https://api.github.com/repos/rust-lang/rust/commits/ad887322541b1c255b210cf87fae675072d1027f", "html_url": "https://github.com/rust-lang/rust/commit/ad887322541b1c255b210cf87fae675072d1027f"}], "stats": {"total": 28, "additions": 2, "deletions": 26}, "files": [{"sha": "ee9983ee8b8d8d3034bbcbd1040dac53e6b07405", "filename": "compiler/rustc_trait_selection/src/traits/auto_trait.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/bd51f174ed6b6e1e668207cb5999e46189dcfaa3/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fauto_trait.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bd51f174ed6b6e1e668207cb5999e46189dcfaa3/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fauto_trait.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fauto_trait.rs?ref=bd51f174ed6b6e1e668207cb5999e46189dcfaa3", "patch": "@@ -87,7 +87,7 @@ impl<'tcx> AutoTraitFinder<'tcx> {\n         let trait_pred = ty::Binder::dummy(trait_ref);\n \n         let bail_out = tcx.infer_ctxt().enter(|infcx| {\n-            let mut selcx = SelectionContext::with_negative(&infcx, true);\n+            let mut selcx = SelectionContext::new(&infcx);\n             let result = selcx.select(&Obligation::new(\n                 ObligationCause::dummy(),\n                 orig_env,\n@@ -295,7 +295,7 @@ impl<'tcx> AutoTraitFinder<'tcx> {\n             fresh_preds.insert(self.clean_pred(infcx, predicate));\n         }\n \n-        let mut select = SelectionContext::with_negative(&infcx, true);\n+        let mut select = SelectionContext::new(&infcx);\n \n         let mut already_visited = FxHashSet::default();\n         let mut predicates = VecDeque::new();"}, {"sha": "72d156067a1dd444ea03e24fb134168b2d164eb0", "filename": "compiler/rustc_trait_selection/src/traits/select/mod.rs", "status": "modified", "additions": 0, "deletions": 24, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/bd51f174ed6b6e1e668207cb5999e46189dcfaa3/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fselect%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bd51f174ed6b6e1e668207cb5999e46189dcfaa3/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fselect%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fselect%2Fmod.rs?ref=bd51f174ed6b6e1e668207cb5999e46189dcfaa3", "patch": "@@ -119,11 +119,6 @@ pub struct SelectionContext<'cx, 'tcx> {\n \n     intercrate_ambiguity_causes: Option<Vec<IntercrateAmbiguityCause>>,\n \n-    /// Controls whether or not to filter out negative impls when selecting.\n-    /// This is used in librustdoc to distinguish between the lack of an impl\n-    /// and a negative impl\n-    allow_negative_impls: bool,\n-\n     /// The mode that trait queries run in, which informs our error handling\n     /// policy. In essence, canonicalized queries need their errors propagated\n     /// rather than immediately reported because we do not have accurate spans.\n@@ -215,7 +210,6 @@ impl<'cx, 'tcx> SelectionContext<'cx, 'tcx> {\n             freshener: infcx.freshener_keep_static(),\n             intercrate: false,\n             intercrate_ambiguity_causes: None,\n-            allow_negative_impls: false,\n             query_mode: TraitQueryMode::Standard,\n         }\n     }\n@@ -226,22 +220,6 @@ impl<'cx, 'tcx> SelectionContext<'cx, 'tcx> {\n             freshener: infcx.freshener_keep_static(),\n             intercrate: true,\n             intercrate_ambiguity_causes: None,\n-            allow_negative_impls: false,\n-            query_mode: TraitQueryMode::Standard,\n-        }\n-    }\n-\n-    pub fn with_negative(\n-        infcx: &'cx InferCtxt<'cx, 'tcx>,\n-        allow_negative_impls: bool,\n-    ) -> SelectionContext<'cx, 'tcx> {\n-        debug!(?allow_negative_impls, \"with_negative\");\n-        SelectionContext {\n-            infcx,\n-            freshener: infcx.freshener_keep_static(),\n-            intercrate: false,\n-            intercrate_ambiguity_causes: None,\n-            allow_negative_impls,\n             query_mode: TraitQueryMode::Standard,\n         }\n     }\n@@ -256,7 +234,6 @@ impl<'cx, 'tcx> SelectionContext<'cx, 'tcx> {\n             freshener: infcx.freshener_keep_static(),\n             intercrate: false,\n             intercrate_ambiguity_causes: None,\n-            allow_negative_impls: false,\n             query_mode,\n         }\n     }\n@@ -1192,7 +1169,6 @@ impl<'cx, 'tcx> SelectionContext<'cx, 'tcx> {\n             if let ImplCandidate(def_id) = candidate {\n                 if ty::ImplPolarity::Reservation == tcx.impl_polarity(def_id)\n                     || obligation.polarity() == tcx.impl_polarity(def_id)\n-                    || self.allow_negative_impls\n                 {\n                     result.push(candidate);\n                 }"}]}