{"sha": "a6f9826979ae590bba7f68024afebbb688f61911", "node_id": "C_kwDOAAsO6NoAKGE2Zjk4MjY5NzlhZTU5MGJiYTdmNjgwMjRhZmViYmI2ODhmNjE5MTE", "commit": {"author": {"name": "Deadbeef", "email": "ent3rm4n@gmail.com", "date": "2022-07-25T08:16:34Z"}, "committer": {"name": "Deadbeef", "email": "ent3rm4n@gmail.com", "date": "2022-07-26T14:14:21Z"}, "message": "Add `Self: ~const Trait` to traits with `#[const_trait]`", "tree": {"sha": "7452e9e18550ca2c2577c38560408ff708eabb1c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7452e9e18550ca2c2577c38560408ff708eabb1c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a6f9826979ae590bba7f68024afebbb688f61911", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a6f9826979ae590bba7f68024afebbb688f61911", "html_url": "https://github.com/rust-lang/rust/commit/a6f9826979ae590bba7f68024afebbb688f61911", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a6f9826979ae590bba7f68024afebbb688f61911/comments", "author": {"login": "fee1-dead", "id": 43851243, "node_id": "MDQ6VXNlcjQzODUxMjQz", "avatar_url": "https://avatars.githubusercontent.com/u/43851243?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fee1-dead", "html_url": "https://github.com/fee1-dead", "followers_url": "https://api.github.com/users/fee1-dead/followers", "following_url": "https://api.github.com/users/fee1-dead/following{/other_user}", "gists_url": "https://api.github.com/users/fee1-dead/gists{/gist_id}", "starred_url": "https://api.github.com/users/fee1-dead/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fee1-dead/subscriptions", "organizations_url": "https://api.github.com/users/fee1-dead/orgs", "repos_url": "https://api.github.com/users/fee1-dead/repos", "events_url": "https://api.github.com/users/fee1-dead/events{/privacy}", "received_events_url": "https://api.github.com/users/fee1-dead/received_events", "type": "User", "site_admin": false}, "committer": {"login": "fee1-dead", "id": 43851243, "node_id": "MDQ6VXNlcjQzODUxMjQz", "avatar_url": "https://avatars.githubusercontent.com/u/43851243?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fee1-dead", "html_url": "https://github.com/fee1-dead", "followers_url": "https://api.github.com/users/fee1-dead/followers", "following_url": "https://api.github.com/users/fee1-dead/following{/other_user}", "gists_url": "https://api.github.com/users/fee1-dead/gists{/gist_id}", "starred_url": "https://api.github.com/users/fee1-dead/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fee1-dead/subscriptions", "organizations_url": "https://api.github.com/users/fee1-dead/orgs", "repos_url": "https://api.github.com/users/fee1-dead/repos", "events_url": "https://api.github.com/users/fee1-dead/events{/privacy}", "received_events_url": "https://api.github.com/users/fee1-dead/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2614e437f54ebf98b8336d35af0a5821990eeac9", "url": "https://api.github.com/repos/rust-lang/rust/commits/2614e437f54ebf98b8336d35af0a5821990eeac9", "html_url": "https://github.com/rust-lang/rust/commit/2614e437f54ebf98b8336d35af0a5821990eeac9"}], "stats": {"total": 16, "additions": 12, "deletions": 4}, "files": [{"sha": "819513884cedc8555f7c72afdab1da8d15fafbfa", "filename": "compiler/rustc_middle/src/ty/print/pretty.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a6f9826979ae590bba7f68024afebbb688f61911/compiler%2Frustc_middle%2Fsrc%2Fty%2Fprint%2Fpretty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a6f9826979ae590bba7f68024afebbb688f61911/compiler%2Frustc_middle%2Fsrc%2Fty%2Fprint%2Fpretty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fty%2Fprint%2Fpretty.rs?ref=a6f9826979ae590bba7f68024afebbb688f61911", "patch": "@@ -2556,7 +2556,7 @@ define_print_and_forward_display! {\n \n     ty::TraitPredicate<'tcx> {\n         p!(print(self.trait_ref.self_ty()), \": \");\n-        if let ty::BoundConstness::ConstIfConst = self.constness {\n+        if let ty::BoundConstness::ConstIfConst = self.constness && cx.tcx().features().const_trait_impl {\n             p!(\"~const \");\n         }\n         p!(print(self.trait_ref.print_only_trait_path()))"}, {"sha": "feda93138fc03ad0bd55f5adb4a4d610d2c7f565", "filename": "compiler/rustc_typeck/src/collect.rs", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/a6f9826979ae590bba7f68024afebbb688f61911/compiler%2Frustc_typeck%2Fsrc%2Fcollect.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a6f9826979ae590bba7f68024afebbb688f61911/compiler%2Frustc_typeck%2Fsrc%2Fcollect.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcollect.rs?ref=a6f9826979ae590bba7f68024afebbb688f61911", "patch": "@@ -2090,10 +2090,17 @@ fn predicates_of(tcx: TyCtxt<'_>, def_id: DefId) -> ty::GenericPredicates<'_> {\n         // from the trait itself that *shouldn't* be shown as the source of\n         // an obligation and instead be skipped. Otherwise we'd use\n         // `tcx.def_span(def_id);`\n+\n+        let constness = if tcx.has_attr(def_id, sym::const_trait) {\n+            ty::BoundConstness::ConstIfConst\n+        } else {\n+            ty::BoundConstness::NotConst\n+        };\n+\n         let span = rustc_span::DUMMY_SP;\n         result.predicates =\n             tcx.arena.alloc_from_iter(result.predicates.iter().copied().chain(std::iter::once((\n-                ty::TraitRef::identity(tcx, def_id).without_const().to_predicate(tcx),\n+                ty::TraitRef::identity(tcx, def_id).with_constness(constness).to_predicate(tcx),\n                 span,\n             ))));\n     }"}, {"sha": "20bb67687848fc1cb9c68dcdab594b2553743b39", "filename": "library/core/src/cmp.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/a6f9826979ae590bba7f68024afebbb688f61911/library%2Fcore%2Fsrc%2Fcmp.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a6f9826979ae590bba7f68024afebbb688f61911/library%2Fcore%2Fsrc%2Fcmp.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fcmp.rs?ref=a6f9826979ae590bba7f68024afebbb688f61911", "patch": "@@ -1503,9 +1503,10 @@ mod impls {\n     // & pointers\n \n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n-    impl<A: ?Sized, B: ?Sized> PartialEq<&B> for &A\n+    #[rustc_const_unstable(feature = \"const_cmp\", issue = \"92391\")]\n+    impl<A: ?Sized, B: ?Sized> const PartialEq<&B> for &A\n     where\n-        A: PartialEq<B>,\n+        A: ~const PartialEq<B>,\n     {\n         #[inline]\n         fn eq(&self, other: &&B) -> bool {"}]}