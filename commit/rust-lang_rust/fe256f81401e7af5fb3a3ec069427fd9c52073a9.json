{"sha": "fe256f81401e7af5fb3a3ec069427fd9c52073a9", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZlMjU2ZjgxNDAxZTdhZjVmYjNhM2VjMDY5NDI3ZmQ5YzUyMDczYTk=", "commit": {"author": {"name": "Jorge Aparicio", "email": "japaricious@gmail.com", "date": "2014-10-31T05:03:52Z"}, "committer": {"name": "Jorge Aparicio", "email": "japaricious@gmail.com", "date": "2014-11-02T00:56:07Z"}, "message": "Remove unnecessary allocations", "tree": {"sha": "6ef164aedf102990948461ab89105984d53043d5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6ef164aedf102990948461ab89105984d53043d5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fe256f81401e7af5fb3a3ec069427fd9c52073a9", "comment_count": 9, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fe256f81401e7af5fb3a3ec069427fd9c52073a9", "html_url": "https://github.com/rust-lang/rust/commit/fe256f81401e7af5fb3a3ec069427fd9c52073a9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fe256f81401e7af5fb3a3ec069427fd9c52073a9/comments", "author": null, "committer": null, "parents": [{"sha": "423e17b9df16990411cd7afded2e09139c6c6d09", "url": "https://api.github.com/repos/rust-lang/rust/commits/423e17b9df16990411cd7afded2e09139c6c6d09", "html_url": "https://github.com/rust-lang/rust/commit/423e17b9df16990411cd7afded2e09139c6c6d09"}], "stats": {"total": 10, "additions": 5, "deletions": 5}, "files": [{"sha": "55247792921a0dd0952cff4df5ddeb827c7ba4af", "filename": "src/compiletest/runtest.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fe256f81401e7af5fb3a3ec069427fd9c52073a9/src%2Fcompiletest%2Fruntest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fe256f81401e7af5fb3a3ec069427fd9c52073a9/src%2Fcompiletest%2Fruntest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcompiletest%2Fruntest.rs?ref=fe256f81401e7af5fb3a3ec069427fd9c52073a9", "patch": "@@ -627,7 +627,7 @@ fn find_rust_src_root(config: &Config) -> Option<Path> {\n     let path_postfix = Path::new(\"src/etc/lldb_batchmode.py\");\n \n     while path.pop() {\n-        if path.join(path_postfix.clone()).is_file() {\n+        if path.join(&path_postfix).is_file() {\n             return Some(path);\n         }\n     }"}, {"sha": "f8e778ce15f6a5cea37bd727fa7dc56aeeae8b41", "filename": "src/librustc/driver/session.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fe256f81401e7af5fb3a3ec069427fd9c52073a9/src%2Flibrustc%2Fdriver%2Fsession.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fe256f81401e7af5fb3a3ec069427fd9c52073a9/src%2Flibrustc%2Fdriver%2Fsession.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fdriver%2Fsession.rs?ref=fe256f81401e7af5fb3a3ec069427fd9c52073a9", "patch": "@@ -231,7 +231,7 @@ pub fn build_session_(sopts: config::Options,\n         if path.is_absolute() {\n             path.clone()\n         } else {\n-            os::getcwd().join(path.clone())\n+            os::getcwd().join(&path)\n         }\n     );\n "}, {"sha": "312a4c41ac9a6cc87632aeb10f60c29e3792afab", "filename": "src/libstd/io/process.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fe256f81401e7af5fb3a3ec069427fd9c52073a9/src%2Flibstd%2Fio%2Fprocess.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fe256f81401e7af5fb3a3ec069427fd9c52073a9/src%2Flibstd%2Fio%2Fprocess.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fio%2Fprocess.rs?ref=fe256f81401e7af5fb3a3ec069427fd9c52073a9", "patch": "@@ -918,7 +918,7 @@ mod tests {\n         let prog = pwd_cmd().cwd(&parent_dir).spawn().unwrap();\n \n         let output = String::from_utf8(prog.wait_with_output().unwrap().output).unwrap();\n-        let child_dir = Path::new(output.as_slice().trim().into_string());\n+        let child_dir = Path::new(output.as_slice().trim());\n \n         let parent_stat = parent_dir.stat().unwrap();\n         let child_stat = child_dir.stat().unwrap();"}, {"sha": "61ff88a2fa338c1b2583a60eff534c4dd88efe29", "filename": "src/libterm/terminfo/searcher.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fe256f81401e7af5fb3a3ec069427fd9c52073a9/src%2Flibterm%2Fterminfo%2Fsearcher.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fe256f81401e7af5fb3a3ec069427fd9c52073a9/src%2Flibterm%2Fterminfo%2Fsearcher.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibterm%2Fterminfo%2Fsearcher.rs?ref=fe256f81401e7af5fb3a3ec069427fd9c52073a9", "patch": "@@ -41,7 +41,7 @@ pub fn get_dbpath_for_term(term: &str) -> Option<Box<Path>> {\n                     if i == \"\" {\n                         dirs_to_search.push(Path::new(\"/usr/share/terminfo\"));\n                     } else {\n-                        dirs_to_search.push(Path::new(i.to_string()));\n+                        dirs_to_search.push(Path::new(i));\n                     }\n                 },\n                 // Found nothing in TERMINFO_DIRS, use the default paths:"}, {"sha": "490614ef12144d13b6c43bd25c486f80b8fdd507", "filename": "src/test/run-pass/process-spawn-with-unicode-params.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fe256f81401e7af5fb3a3ec069427fd9c52073a9/src%2Ftest%2Frun-pass%2Fprocess-spawn-with-unicode-params.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fe256f81401e7af5fb3a3ec069427fd9c52073a9/src%2Ftest%2Frun-pass%2Fprocess-spawn-with-unicode-params.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fprocess-spawn-with-unicode-params.rs?ref=fe256f81401e7af5fb3a3ec069427fd9c52073a9", "patch": "@@ -48,7 +48,7 @@ fn main() {\n \n         let child_filestem = Path::new(child_name);\n         let child_filename = child_filestem.with_extension(my_ext);\n-        let child_path     = cwd.join(child_filename.clone());\n+        let child_path     = cwd.join(child_filename);\n \n         // make a separate directory for the child\n         drop(fs::mkdir(&cwd, io::USER_RWX).is_ok());"}]}