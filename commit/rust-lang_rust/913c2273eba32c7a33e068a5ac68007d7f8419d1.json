{"sha": "913c2273eba32c7a33e068a5ac68007d7f8419d1", "node_id": "MDY6Q29tbWl0NzI0NzEyOjkxM2MyMjczZWJhMzJjN2EzM2UwNjhhNWFjNjgwMDdkN2Y4NDE5ZDE=", "commit": {"author": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2015-06-11T18:26:16Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2015-06-17T16:07:17Z"}, "message": "Add comment about stabilizing CString::from_ptr\n\nThis naming needs to consider the raw vs ptr naming of\nBox/CStr/CString/slice/etc.", "tree": {"sha": "f5c6bd762c1826a00a063a97074895c814140b45", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f5c6bd762c1826a00a063a97074895c814140b45"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/913c2273eba32c7a33e068a5ac68007d7f8419d1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/913c2273eba32c7a33e068a5ac68007d7f8419d1", "html_url": "https://github.com/rust-lang/rust/commit/913c2273eba32c7a33e068a5ac68007d7f8419d1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/913c2273eba32c7a33e068a5ac68007d7f8419d1/comments", "author": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c9b40a30c0a8c5776920aec54039d0571e903f5a", "url": "https://api.github.com/repos/rust-lang/rust/commits/c9b40a30c0a8c5776920aec54039d0571e903f5a", "html_url": "https://github.com/rust-lang/rust/commit/c9b40a30c0a8c5776920aec54039d0571e903f5a"}], "stats": {"total": 6, "additions": 6, "deletions": 0}, "files": [{"sha": "1039756363e9fa1aa6a05ed1a9f7f30720a19488", "filename": "src/liballoc/boxed.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/913c2273eba32c7a33e068a5ac68007d7f8419d1/src%2Fliballoc%2Fboxed.rs", "raw_url": "https://github.com/rust-lang/rust/raw/913c2273eba32c7a33e068a5ac68007d7f8419d1/src%2Fliballoc%2Fboxed.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Fboxed.rs?ref=913c2273eba32c7a33e068a5ac68007d7f8419d1", "patch": "@@ -124,6 +124,7 @@ impl<T : ?Sized> Box<T> {\n     #[unstable(feature = \"box_raw\",\n                reason = \"may be renamed or moved out of Box scope\")]\n     #[inline]\n+    // NB: may want to be called from_ptr, see comments on CStr::from_ptr\n     pub unsafe fn from_raw(raw: *mut T) -> Self {\n         mem::transmute(raw)\n     }\n@@ -147,6 +148,7 @@ impl<T : ?Sized> Box<T> {\n     /// ```\n     #[unstable(feature = \"box_raw\", reason = \"may be renamed\")]\n     #[inline]\n+    // NB: may want to be called into_ptr, see comments on CStr::from_ptr\n     pub fn into_raw(b: Box<T>) -> *mut T {\n         unsafe { mem::transmute(b) }\n     }"}, {"sha": "ffc204ada60fb92a0468654690c95afa0e51b6b3", "filename": "src/libstd/ffi/c_str.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/913c2273eba32c7a33e068a5ac68007d7f8419d1/src%2Flibstd%2Fffi%2Fc_str.rs", "raw_url": "https://github.com/rust-lang/rust/raw/913c2273eba32c7a33e068a5ac68007d7f8419d1/src%2Flibstd%2Fffi%2Fc_str.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fffi%2Fc_str.rs?ref=913c2273eba32c7a33e068a5ac68007d7f8419d1", "patch": "@@ -206,6 +206,9 @@ impl CString {\n     /// `into_ptr`. The length of the string will be recalculated\n     /// using the pointer.\n     #[unstable(feature = \"cstr_memory\", reason = \"recently added\")]\n+    // NB: may want to be called from_raw, needs to consider CStr::from_ptr,\n+    //     Box::from_raw (or whatever it's currently called), and\n+    //     slice::from_raw_parts\n     pub unsafe fn from_ptr(ptr: *const libc::c_char) -> CString {\n         let len = libc::strlen(ptr) + 1; // Including the NUL byte\n         let slice = slice::from_raw_parts(ptr, len as usize);\n@@ -221,6 +224,7 @@ impl CString {\n     ///\n     /// Failure to call `from_ptr` will lead to a memory leak.\n     #[unstable(feature = \"cstr_memory\", reason = \"recently added\")]\n+    // NB: may want to be called into_raw, see comments on from_ptr\n     pub fn into_ptr(self) -> *const libc::c_char {\n         // It is important that the bytes be sized to fit - we need\n         // the capacity to be determinable from the string length, and"}]}