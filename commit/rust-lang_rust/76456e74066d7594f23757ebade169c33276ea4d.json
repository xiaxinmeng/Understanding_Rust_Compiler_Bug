{"sha": "76456e74066d7594f23757ebade169c33276ea4d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc2NDU2ZTc0MDY2ZDc1OTRmMjM3NTdlYmFkZTE2OWMzMzI3NmVhNGQ=", "commit": {"author": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2019-10-04T02:32:56Z"}, "committer": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2019-10-04T02:32:56Z"}, "message": "review comments", "tree": {"sha": "4cea37b9246bd49dba79586a9602f6334aaf204f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4cea37b9246bd49dba79586a9602f6334aaf204f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/76456e74066d7594f23757ebade169c33276ea4d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/76456e74066d7594f23757ebade169c33276ea4d", "html_url": "https://github.com/rust-lang/rust/commit/76456e74066d7594f23757ebade169c33276ea4d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/76456e74066d7594f23757ebade169c33276ea4d/comments", "author": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "committer": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "02f57f83a9ea5903cb02bdc304800661c8f4296f", "url": "https://api.github.com/repos/rust-lang/rust/commits/02f57f83a9ea5903cb02bdc304800661c8f4296f", "html_url": "https://github.com/rust-lang/rust/commit/02f57f83a9ea5903cb02bdc304800661c8f4296f"}], "stats": {"total": 98, "additions": 51, "deletions": 47}, "files": [{"sha": "fd74d8673da4dbc482430bd764caccf5d61a0dd6", "filename": "src/librustc_errors/diagnostic.rs", "status": "modified", "additions": 43, "deletions": 41, "changes": 84, "blob_url": "https://github.com/rust-lang/rust/blob/76456e74066d7594f23757ebade169c33276ea4d/src%2Flibrustc_errors%2Fdiagnostic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/76456e74066d7594f23757ebade169c33276ea4d/src%2Flibrustc_errors%2Fdiagnostic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_errors%2Fdiagnostic.rs?ref=76456e74066d7594f23757ebade169c33276ea4d", "patch": "@@ -304,6 +304,24 @@ impl Diagnostic {\n         msg: &str,\n         suggestion: String,\n         applicability: Applicability,\n+    ) -> &mut Self {\n+        self.span_suggestion_with_style(\n+            sp,\n+            msg,\n+            suggestion,\n+            applicability,\n+            SuggestionStyle::ShowCode,\n+        );\n+        self\n+    }\n+\n+    pub fn span_suggestion_with_style(\n+        &mut self,\n+        sp: Span,\n+        msg: &str,\n+        suggestion: String,\n+        applicability: Applicability,\n+        style: SuggestionStyle,\n     ) -> &mut Self {\n         self.suggestions.push(CodeSuggestion {\n             substitutions: vec![Substitution {\n@@ -313,7 +331,7 @@ impl Diagnostic {\n                 }],\n             }],\n             msg: msg.to_owned(),\n-            style: SuggestionStyle::ShowCode,\n+            style,\n             applicability,\n         });\n         self\n@@ -326,17 +344,13 @@ impl Diagnostic {\n         suggestion: String,\n         applicability: Applicability,\n     ) -> &mut Self {\n-        self.suggestions.push(CodeSuggestion {\n-            substitutions: vec![Substitution {\n-                parts: vec![SubstitutionPart {\n-                    snippet: suggestion,\n-                    span: sp,\n-                }],\n-            }],\n-            msg: msg.to_owned(),\n-            style: SuggestionStyle::ShowAlways,\n+        self.span_suggestion_with_style(\n+            sp,\n+            msg,\n+            suggestion,\n             applicability,\n-        });\n+            SuggestionStyle::ShowAlways,\n+        );\n         self\n     }\n \n@@ -369,17 +383,13 @@ impl Diagnostic {\n     pub fn span_suggestion_short(\n         &mut self, sp: Span, msg: &str, suggestion: String, applicability: Applicability\n     ) -> &mut Self {\n-        self.suggestions.push(CodeSuggestion {\n-            substitutions: vec![Substitution {\n-                parts: vec![SubstitutionPart {\n-                    snippet: suggestion,\n-                    span: sp,\n-                }],\n-            }],\n-            msg: msg.to_owned(),\n-            style: SuggestionStyle::HideCodeInline,\n+        self.span_suggestion_with_style(\n+            sp,\n+            msg,\n+            suggestion,\n             applicability,\n-        });\n+            SuggestionStyle::HideCodeInline,\n+        );\n         self\n     }\n \n@@ -392,17 +402,13 @@ impl Diagnostic {\n     pub fn span_suggestion_hidden(\n         &mut self, sp: Span, msg: &str, suggestion: String, applicability: Applicability\n     ) -> &mut Self {\n-        self.suggestions.push(CodeSuggestion {\n-            substitutions: vec![Substitution {\n-                parts: vec![SubstitutionPart {\n-                    snippet: suggestion,\n-                    span: sp,\n-                }],\n-            }],\n-            msg: msg.to_owned(),\n-            style: SuggestionStyle::HideCodeAlways,\n+        self.span_suggestion_with_style(\n+            sp,\n+            msg,\n+            suggestion,\n             applicability,\n-        });\n+            SuggestionStyle::HideCodeAlways,\n+        );\n         self\n     }\n \n@@ -413,17 +419,13 @@ impl Diagnostic {\n     pub fn tool_only_span_suggestion(\n         &mut self, sp: Span, msg: &str, suggestion: String, applicability: Applicability\n     ) -> &mut Self {\n-        self.suggestions.push(CodeSuggestion {\n-            substitutions: vec![Substitution {\n-                parts: vec![SubstitutionPart {\n-                    snippet: suggestion,\n-                    span: sp,\n-                }],\n-            }],\n-            msg: msg.to_owned(),\n-            style: SuggestionStyle::CompletelyHidden,\n+        self.span_suggestion_with_style(\n+            sp,\n+            msg,\n+            suggestion,\n             applicability,\n-        });\n+            SuggestionStyle::CompletelyHidden,\n+        );\n         self\n     }\n "}, {"sha": "54b0353d992fbd9e0c66d7af656a1e9f1bc4ca83", "filename": "src/librustc_errors/emitter.rs", "status": "modified", "additions": 8, "deletions": 6, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/76456e74066d7594f23757ebade169c33276ea4d/src%2Flibrustc_errors%2Femitter.rs", "raw_url": "https://github.com/rust-lang/rust/raw/76456e74066d7594f23757ebade169c33276ea4d/src%2Flibrustc_errors%2Femitter.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_errors%2Femitter.rs?ref=76456e74066d7594f23757ebade169c33276ea4d", "patch": "@@ -218,12 +218,14 @@ pub trait Emitter {\n                sugg.msg.split_whitespace().count() < 10 &&\n                // don't display multiline suggestions as labels\n                !sugg.substitutions[0].parts[0].snippet.contains('\\n') &&\n-               // when this style is set we want the suggestion to be a message, not inline\n-               sugg.style != SuggestionStyle::HideCodeAlways &&\n-               // trivial suggestion for tooling's sake, never shown\n-               sugg.style != SuggestionStyle::CompletelyHidden &&\n-               // subtle suggestion, never shown inline\n-               sugg.style != SuggestionStyle::ShowAlways\n+               ![\n+                    // when this style is set we want the suggestion to be a message, not inline\n+                    SuggestionStyle::HideCodeAlways,\n+                    // trivial suggestion for tooling's sake, never shown\n+                    SuggestionStyle::CompletelyHidden,\n+                    // subtle suggestion, never shown inline\n+                    SuggestionStyle::ShowAlways,\n+               ].contains(&sugg.style)\n             {\n                 let substitution = &sugg.substitutions[0].parts[0].snippet.trim();\n                 let msg = if substitution.len() == 0 || sugg.style.hide_inline() {"}]}