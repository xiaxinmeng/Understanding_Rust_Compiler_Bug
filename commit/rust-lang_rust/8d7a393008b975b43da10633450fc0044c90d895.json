{"sha": "8d7a393008b975b43da10633450fc0044c90d895", "node_id": "C_kwDOAAsO6NoAKDhkN2EzOTMwMDhiOTc1YjQzZGExMDYzMzQ1MGZjMDA0NGM5MGQ4OTU", "commit": {"author": {"name": "Wang Ruochen", "email": "wrc@ruo-chen.wang", "date": "2022-05-05T17:57:47Z"}, "committer": {"name": "Wang Ruochen", "email": "wrc@ruo-chen.wang", "date": "2022-05-05T18:44:11Z"}, "message": "Check const reference", "tree": {"sha": "1d170e42a5b20dac618b5e37672683ec7d9b0db0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1d170e42a5b20dac618b5e37672683ec7d9b0db0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8d7a393008b975b43da10633450fc0044c90d895", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8d7a393008b975b43da10633450fc0044c90d895", "html_url": "https://github.com/rust-lang/rust/commit/8d7a393008b975b43da10633450fc0044c90d895", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8d7a393008b975b43da10633450fc0044c90d895/comments", "author": {"login": "weirane", "id": 37568244, "node_id": "MDQ6VXNlcjM3NTY4MjQ0", "avatar_url": "https://avatars.githubusercontent.com/u/37568244?v=4", "gravatar_id": "", "url": "https://api.github.com/users/weirane", "html_url": "https://github.com/weirane", "followers_url": "https://api.github.com/users/weirane/followers", "following_url": "https://api.github.com/users/weirane/following{/other_user}", "gists_url": "https://api.github.com/users/weirane/gists{/gist_id}", "starred_url": "https://api.github.com/users/weirane/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/weirane/subscriptions", "organizations_url": "https://api.github.com/users/weirane/orgs", "repos_url": "https://api.github.com/users/weirane/repos", "events_url": "https://api.github.com/users/weirane/events{/privacy}", "received_events_url": "https://api.github.com/users/weirane/received_events", "type": "User", "site_admin": false}, "committer": {"login": "weirane", "id": 37568244, "node_id": "MDQ6VXNlcjM3NTY4MjQ0", "avatar_url": "https://avatars.githubusercontent.com/u/37568244?v=4", "gravatar_id": "", "url": "https://api.github.com/users/weirane", "html_url": "https://github.com/weirane", "followers_url": "https://api.github.com/users/weirane/followers", "following_url": "https://api.github.com/users/weirane/following{/other_user}", "gists_url": "https://api.github.com/users/weirane/gists{/gist_id}", "starred_url": "https://api.github.com/users/weirane/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/weirane/subscriptions", "organizations_url": "https://api.github.com/users/weirane/orgs", "repos_url": "https://api.github.com/users/weirane/repos", "events_url": "https://api.github.com/users/weirane/events{/privacy}", "received_events_url": "https://api.github.com/users/weirane/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "81d7cbbbe23ae85e9f9003fec65ba1959af16513", "url": "https://api.github.com/repos/rust-lang/rust/commits/81d7cbbbe23ae85e9f9003fec65ba1959af16513", "html_url": "https://github.com/rust-lang/rust/commit/81d7cbbbe23ae85e9f9003fec65ba1959af16513"}], "stats": {"total": 53, "additions": 52, "deletions": 1}, "files": [{"sha": "5498afddd951981539d5c861e45e5ea3f7aec56c", "filename": "crates/ide-assists/src/handlers/convert_let_else_to_match.rs", "status": "modified", "additions": 52, "deletions": 1, "changes": 53, "blob_url": "https://github.com/rust-lang/rust/blob/8d7a393008b975b43da10633450fc0044c90d895/crates%2Fide-assists%2Fsrc%2Fhandlers%2Fconvert_let_else_to_match.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8d7a393008b975b43da10633450fc0044c90d895/crates%2Fide-assists%2Fsrc%2Fhandlers%2Fconvert_let_else_to_match.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide-assists%2Fsrc%2Fhandlers%2Fconvert_let_else_to_match.rs?ref=8d7a393008b975b43da10633450fc0044c90d895", "patch": "@@ -16,7 +16,10 @@ fn binders_in_pat(\n         IdentPat(p) => {\n             let ident = p.name()?;\n             let ismut = p.ref_token().is_none() && p.mut_token().is_some();\n-            acc.push((ident, ismut));\n+            // check for const reference\n+            if !(p.is_simple_ident() && sem.resolve_bind_pat_to_const(p).is_some()) {\n+                acc.push((ident, ismut));\n+            }\n             if let Some(inner) = p.pat() {\n                 binders_in_pat(acc, &inner, sem)?;\n             }\n@@ -244,6 +247,54 @@ fn main() {\n         );\n     }\n \n+    #[test]\n+    fn convert_let_else_to_match_const_ref() {\n+        check_assist(\n+            convert_let_else_to_match,\n+            r\"\n+enum Option<T> {\n+    Some(T),\n+    None,\n+}\n+use Option::*;\n+fn main() {\n+    let None = f() el$0se { continue };\n+}\",\n+            r\"\n+enum Option<T> {\n+    Some(T),\n+    None,\n+}\n+use Option::*;\n+fn main() {\n+    match f() {\n+        None => {}\n+        _ => continue,\n+    }\n+}\",\n+        );\n+    }\n+\n+    #[test]\n+    fn convert_let_else_to_match_const_ref_const() {\n+        check_assist(\n+            convert_let_else_to_match,\n+            r\"\n+const NEG1: i32 = -1;\n+fn main() {\n+    let NEG1 = f() el$0se { continue };\n+}\",\n+            r\"\n+const NEG1: i32 = -1;\n+fn main() {\n+    match f() {\n+        NEG1 => {}\n+        _ => continue,\n+    }\n+}\",\n+        );\n+    }\n+\n     #[test]\n     fn convert_let_else_to_match_mut() {\n         check_assist("}]}