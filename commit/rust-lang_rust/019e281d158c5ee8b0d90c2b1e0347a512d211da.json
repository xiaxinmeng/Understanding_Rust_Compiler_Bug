{"sha": "019e281d158c5ee8b0d90c2b1e0347a512d211da", "node_id": "MDY6Q29tbWl0NzI0NzEyOjAxOWUyODFkMTU4YzVlZThiMGQ5MGMyYjFlMDM0N2E1MTJkMjExZGE=", "commit": {"author": {"name": "Philipp Krones", "email": "hello@philkrones.com", "date": "2020-07-13T13:59:42Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-07-13T13:59:42Z"}, "message": "Rollup merge of #5752 - chrisduerr:pedantic_ranges, r=flip1995\n\nMove range_minus_one to pedantic\n\nThis moves the range_minus_one lint to the pedantic category, so there\nwill not be any warnings emitted by default. This should work around\nproblems where the suggestion is impossible to resolve due to the range\nconsumer only accepting a specific range implementation, rather than the\n`RangeBounds` trait (see #3307).\n\nWhile it is possible to work around this by extracting the boundary into\na variable, I don't think clippy should encourage people to disable or\nwork around lints, but instead the lints should be fixable. So hopefully\nthis will help until a proper implementation checks what the range is\nused for.\n\n*Please keep the line below*\nchangelog: move [`range_minus_one`] to pedantic", "tree": {"sha": "1d5487001075cf25824a8faf96ce104d9daccce1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1d5487001075cf25824a8faf96ce104d9daccce1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/019e281d158c5ee8b0d90c2b1e0347a512d211da", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJfDGjPCRBK7hj4Ov3rIwAAdHIIAFoOC/HEf2I1mvVwvtherNB5\nBaPQ/l597+21UOo3XBL7avxCEyua2QWbR/TSdpYmllHfniNo8uje+yNv790eT40n\nsraEVx4diNPibcL8cUZp2MbCQDSrwKZvNwfnGa773wi8tVstSzQoMFkFR2RaD7kY\nsrBZ65/Vl5IUo5wEgRvo40Sx/1GStgPXzYmDasg9o4qMCA1GEXSDUwNae3eR95gF\nzr6AywQktMwwP+B3ZTpwFS6du3RXCAMF6N+neDhtjn3N3AnygBKZv9mM0JqUoWA0\n49h+GhsqK4Ko82x/5/GAQG6rh+D3Vbb3/PaZ+Aw1lL5ov16iNE9w0zG/kkRuA68=\n=xACw\n-----END PGP SIGNATURE-----\n", "payload": "tree 1d5487001075cf25824a8faf96ce104d9daccce1\nparent 75d43aac73df6086ab9566a39d5ea7afe70d89c9\nparent afa4148cc6dee0f9e0ca5b33f2511b9305d84fcb\nauthor Philipp Krones <hello@philkrones.com> 1594648782 +0200\ncommitter GitHub <noreply@github.com> 1594648782 +0200\n\nRollup merge of #5752 - chrisduerr:pedantic_ranges, r=flip1995\n\nMove range_minus_one to pedantic\n\nThis moves the range_minus_one lint to the pedantic category, so there\nwill not be any warnings emitted by default. This should work around\nproblems where the suggestion is impossible to resolve due to the range\nconsumer only accepting a specific range implementation, rather than the\n`RangeBounds` trait (see #3307).\n\nWhile it is possible to work around this by extracting the boundary into\na variable, I don't think clippy should encourage people to disable or\nwork around lints, but instead the lints should be fixable. So hopefully\nthis will help until a proper implementation checks what the range is\nused for.\n\n*Please keep the line below*\nchangelog: move [`range_minus_one`] to pedantic\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/019e281d158c5ee8b0d90c2b1e0347a512d211da", "html_url": "https://github.com/rust-lang/rust/commit/019e281d158c5ee8b0d90c2b1e0347a512d211da", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/019e281d158c5ee8b0d90c2b1e0347a512d211da/comments", "author": {"login": "flip1995", "id": 9744647, "node_id": "MDQ6VXNlcjk3NDQ2NDc=", "avatar_url": "https://avatars.githubusercontent.com/u/9744647?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flip1995", "html_url": "https://github.com/flip1995", "followers_url": "https://api.github.com/users/flip1995/followers", "following_url": "https://api.github.com/users/flip1995/following{/other_user}", "gists_url": "https://api.github.com/users/flip1995/gists{/gist_id}", "starred_url": "https://api.github.com/users/flip1995/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flip1995/subscriptions", "organizations_url": "https://api.github.com/users/flip1995/orgs", "repos_url": "https://api.github.com/users/flip1995/repos", "events_url": "https://api.github.com/users/flip1995/events{/privacy}", "received_events_url": "https://api.github.com/users/flip1995/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "75d43aac73df6086ab9566a39d5ea7afe70d89c9", "url": "https://api.github.com/repos/rust-lang/rust/commits/75d43aac73df6086ab9566a39d5ea7afe70d89c9", "html_url": "https://github.com/rust-lang/rust/commit/75d43aac73df6086ab9566a39d5ea7afe70d89c9"}, {"sha": "afa4148cc6dee0f9e0ca5b33f2511b9305d84fcb", "url": "https://api.github.com/repos/rust-lang/rust/commits/afa4148cc6dee0f9e0ca5b33f2511b9305d84fcb", "html_url": "https://github.com/rust-lang/rust/commit/afa4148cc6dee0f9e0ca5b33f2511b9305d84fcb"}], "stats": {"total": 37, "additions": 23, "deletions": 14}, "files": [{"sha": "aa911cf59ee017c6dc9cc381de98e73f53b50507", "filename": "clippy_lints/src/lib.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/019e281d158c5ee8b0d90c2b1e0347a512d211da/clippy_lints%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/019e281d158c5ee8b0d90c2b1e0347a512d211da/clippy_lints%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flib.rs?ref=019e281d158c5ee8b0d90c2b1e0347a512d211da", "patch": "@@ -1161,6 +1161,7 @@ pub fn register_plugins(store: &mut rustc_lint::LintStore, sess: &Session, conf:\n         LintId::of(&needless_pass_by_value::NEEDLESS_PASS_BY_VALUE),\n         LintId::of(&non_expressive_names::SIMILAR_NAMES),\n         LintId::of(&option_if_let_else::OPTION_IF_LET_ELSE),\n+        LintId::of(&ranges::RANGE_MINUS_ONE),\n         LintId::of(&ranges::RANGE_PLUS_ONE),\n         LintId::of(&shadow::SHADOW_UNRELATED),\n         LintId::of(&strings::STRING_ADD_ASSIGN),\n@@ -1383,7 +1384,6 @@ pub fn register_plugins(store: &mut rustc_lint::LintStore, sess: &Session, conf:\n         LintId::of(&ptr::PTR_ARG),\n         LintId::of(&ptr_offset_with_cast::PTR_OFFSET_WITH_CAST),\n         LintId::of(&question_mark::QUESTION_MARK),\n-        LintId::of(&ranges::RANGE_MINUS_ONE),\n         LintId::of(&ranges::RANGE_ZIP_WITH_LEN),\n         LintId::of(&ranges::REVERSED_EMPTY_RANGES),\n         LintId::of(&redundant_clone::REDUNDANT_CLONE),\n@@ -1599,7 +1599,6 @@ pub fn register_plugins(store: &mut rustc_lint::LintStore, sess: &Session, conf:\n         LintId::of(&partialeq_ne_impl::PARTIALEQ_NE_IMPL),\n         LintId::of(&precedence::PRECEDENCE),\n         LintId::of(&ptr_offset_with_cast::PTR_OFFSET_WITH_CAST),\n-        LintId::of(&ranges::RANGE_MINUS_ONE),\n         LintId::of(&ranges::RANGE_ZIP_WITH_LEN),\n         LintId::of(&reference::DEREF_ADDROF),\n         LintId::of(&reference::REF_IN_DEREF),"}, {"sha": "dd608de5723e228defc9f1e9be5d91a2c0a445e6", "filename": "clippy_lints/src/ranges.rs", "status": "modified", "additions": 10, "deletions": 2, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/019e281d158c5ee8b0d90c2b1e0347a512d211da/clippy_lints%2Fsrc%2Franges.rs", "raw_url": "https://github.com/rust-lang/rust/raw/019e281d158c5ee8b0d90c2b1e0347a512d211da/clippy_lints%2Fsrc%2Franges.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Franges.rs?ref=019e281d158c5ee8b0d90c2b1e0347a512d211da", "patch": "@@ -52,6 +52,11 @@ declare_clippy_lint! {\n     /// exclusive ranges, because they essentially add an extra branch that\n     /// LLVM may fail to hoist out of the loop.\n     ///\n+    /// This will cause a warning that cannot be fixed if the consumer of the\n+    /// range only accepts a specific range type, instead of the generic\n+    /// `RangeBounds` trait\n+    /// ([#3307](https://github.com/rust-lang/rust-clippy/issues/3307)).\n+    ///\n     /// **Example:**\n     /// ```rust,ignore\n     /// for x..(y+1) { .. }\n@@ -72,7 +77,10 @@ declare_clippy_lint! {\n     /// **Why is this bad?** The code is more readable with an exclusive range\n     /// like `x..y`.\n     ///\n-    /// **Known problems:** None.\n+    /// **Known problems:** This will cause a warning that cannot be fixed if\n+    /// the consumer of the range only accepts a specific range type, instead of\n+    /// the generic `RangeBounds` trait\n+    /// ([#3307](https://github.com/rust-lang/rust-clippy/issues/3307)).\n     ///\n     /// **Example:**\n     /// ```rust,ignore\n@@ -83,7 +91,7 @@ declare_clippy_lint! {\n     /// for x..y { .. }\n     /// ```\n     pub RANGE_MINUS_ONE,\n-    complexity,\n+    pedantic,\n     \"`x..=(y-1)` reads better as `x..y`\"\n }\n "}, {"sha": "0c77e07c872ae14169c4d4ef1fb38a6aa61ab50d", "filename": "src/lintlist/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/019e281d158c5ee8b0d90c2b1e0347a512d211da/src%2Flintlist%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/019e281d158c5ee8b0d90c2b1e0347a512d211da/src%2Flintlist%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flintlist%2Fmod.rs?ref=019e281d158c5ee8b0d90c2b1e0347a512d211da", "patch": "@@ -1790,7 +1790,7 @@ pub static ref ALL_LINTS: Vec<Lint> = vec![\n     },\n     Lint {\n         name: \"range_minus_one\",\n-        group: \"complexity\",\n+        group: \"pedantic\",\n         desc: \"`x..=(y-1)` reads better as `x..y`\",\n         deprecation: None,\n         module: \"ranges\","}, {"sha": "19b253b0fe2c6b94c1c43c9cfd4e736b438967b5", "filename": "tests/ui/range_plus_minus_one.fixed", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/019e281d158c5ee8b0d90c2b1e0347a512d211da/tests%2Fui%2Frange_plus_minus_one.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/019e281d158c5ee8b0d90c2b1e0347a512d211da/tests%2Fui%2Frange_plus_minus_one.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Frange_plus_minus_one.fixed?ref=019e281d158c5ee8b0d90c2b1e0347a512d211da", "patch": "@@ -7,6 +7,7 @@ fn f() -> usize {\n }\n \n #[warn(clippy::range_plus_one)]\n+#[warn(clippy::range_minus_one)]\n fn main() {\n     for _ in 0..2 {}\n     for _ in 0..=2 {}"}, {"sha": "7d034117547caf87990d1c824b99b872471eefe8", "filename": "tests/ui/range_plus_minus_one.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/019e281d158c5ee8b0d90c2b1e0347a512d211da/tests%2Fui%2Frange_plus_minus_one.rs", "raw_url": "https://github.com/rust-lang/rust/raw/019e281d158c5ee8b0d90c2b1e0347a512d211da/tests%2Fui%2Frange_plus_minus_one.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Frange_plus_minus_one.rs?ref=019e281d158c5ee8b0d90c2b1e0347a512d211da", "patch": "@@ -7,6 +7,7 @@ fn f() -> usize {\n }\n \n #[warn(clippy::range_plus_one)]\n+#[warn(clippy::range_minus_one)]\n fn main() {\n     for _ in 0..2 {}\n     for _ in 0..=2 {}"}, {"sha": "fb4f1658597a585de8f220e9255e0f5c57388ad5", "filename": "tests/ui/range_plus_minus_one.stderr", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/019e281d158c5ee8b0d90c2b1e0347a512d211da/tests%2Fui%2Frange_plus_minus_one.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/019e281d158c5ee8b0d90c2b1e0347a512d211da/tests%2Fui%2Frange_plus_minus_one.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Frange_plus_minus_one.stderr?ref=019e281d158c5ee8b0d90c2b1e0347a512d211da", "patch": "@@ -1,57 +1,57 @@\n error: an inclusive range would be more readable\n-  --> $DIR/range_plus_minus_one.rs:14:14\n+  --> $DIR/range_plus_minus_one.rs:15:14\n    |\n LL |     for _ in 0..3 + 1 {}\n    |              ^^^^^^^^ help: use: `0..=3`\n    |\n    = note: `-D clippy::range-plus-one` implied by `-D warnings`\n \n error: an inclusive range would be more readable\n-  --> $DIR/range_plus_minus_one.rs:17:14\n+  --> $DIR/range_plus_minus_one.rs:18:14\n    |\n LL |     for _ in 0..1 + 5 {}\n    |              ^^^^^^^^ help: use: `0..=5`\n \n error: an inclusive range would be more readable\n-  --> $DIR/range_plus_minus_one.rs:20:14\n+  --> $DIR/range_plus_minus_one.rs:21:14\n    |\n LL |     for _ in 1..1 + 1 {}\n    |              ^^^^^^^^ help: use: `1..=1`\n \n error: an inclusive range would be more readable\n-  --> $DIR/range_plus_minus_one.rs:26:14\n+  --> $DIR/range_plus_minus_one.rs:27:14\n    |\n LL |     for _ in 0..(1 + f()) {}\n    |              ^^^^^^^^^^^^ help: use: `0..=f()`\n \n error: an exclusive range would be more readable\n-  --> $DIR/range_plus_minus_one.rs:30:13\n+  --> $DIR/range_plus_minus_one.rs:31:13\n    |\n LL |     let _ = ..=11 - 1;\n    |             ^^^^^^^^^ help: use: `..11`\n    |\n    = note: `-D clippy::range-minus-one` implied by `-D warnings`\n \n error: an exclusive range would be more readable\n-  --> $DIR/range_plus_minus_one.rs:31:13\n+  --> $DIR/range_plus_minus_one.rs:32:13\n    |\n LL |     let _ = ..=(11 - 1);\n    |             ^^^^^^^^^^^ help: use: `..11`\n \n error: an inclusive range would be more readable\n-  --> $DIR/range_plus_minus_one.rs:32:13\n+  --> $DIR/range_plus_minus_one.rs:33:13\n    |\n LL |     let _ = (1..11 + 1);\n    |             ^^^^^^^^^^^ help: use: `(1..=11)`\n \n error: an inclusive range would be more readable\n-  --> $DIR/range_plus_minus_one.rs:33:13\n+  --> $DIR/range_plus_minus_one.rs:34:13\n    |\n LL |     let _ = (f() + 1)..(f() + 1);\n    |             ^^^^^^^^^^^^^^^^^^^^ help: use: `((f() + 1)..=f())`\n \n error: an inclusive range would be more readable\n-  --> $DIR/range_plus_minus_one.rs:37:14\n+  --> $DIR/range_plus_minus_one.rs:38:14\n    |\n LL |     for _ in 1..ONE + ONE {}\n    |              ^^^^^^^^^^^^ help: use: `1..=ONE`"}]}