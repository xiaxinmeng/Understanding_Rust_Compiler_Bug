{"sha": "54a0a98347f739ee3b9cad8760e237fa6cd8db54", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU0YTBhOTgzNDdmNzM5ZWUzYjljYWQ4NzYwZTIzN2ZhNmNkOGRiNTQ=", "commit": {"author": {"name": "Pietro Albini", "email": "pietro@pietroalbini.org", "date": "2020-10-22T10:06:12Z"}, "committer": {"name": "Pietro Albini", "email": "pietro@pietroalbini.org", "date": "2020-11-05T10:54:29Z"}, "message": "ci: gate on aarch64-gnu passing tests", "tree": {"sha": "fe841ba0468fac64f9a09b2a2556ad5a8c311e90", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fe841ba0468fac64f9a09b2a2556ad5a8c311e90"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/54a0a98347f739ee3b9cad8760e237fa6cd8db54", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE1JbYPtLJAsc22U9xPgar6Auq8ZwFAl+j2eUACgkQPgar6Auq\n8ZwWkw//Vd1puDseFXeVIMgRxAWHqFWFwzoiZO6TpFnBP4T1gMa76TY5S4y5x37h\nLb2MzjMbVwXfh0lNITcGPJDdFmQTvMSLu6q6KwFW6N41mzOiQBt2dfBXL+UUtK+Z\nnzoIw9kHgUk/t1v6+lce3quo4OP6QgTxCLVc/sr2082q49RTftyr0Ezd67dbE9L5\nr8fiRGIOXeYPETfJbB+B6xEAMbabmAaZ55buwWSDauPO3QTV3j9Xi02OKGkrqMc1\nQ8j40zTxfMsc1jrdFj0/RZZW14Xz7S5aW7d8LU6ufC2mNjehlWdc3Go70qoCagkq\nddABb0iuNqZeJveCut6o8GC0r0zY3ykXkXRB+ondAvNVetv5VezbudzNLK9dI1Yy\nMtgslf55Ljx24WXkr9B9CjixqNOuf0fZfEAwghTaAEJZ6rsMW+DkCrO1rzDomTdf\n3ByEgFKwrM0BhhoBd3BoTKJeLPAfdFJ30c/g6lyu4USoGT4Oa9R6AIyNGwsEN5nT\nqIBvSz1TnG7ys+lZaU2RzG1UvS8TkOEedH/1HtHIrmWfFId6irxiB93kzjAlBv/l\nziHhvVqhJGf5nfa86A/vR0VfzsaNo6G/0N+LXWmX4AJ7nKaK3Bl3gV4wlWAT/Mcm\nMWM9GCFvLCK5rbZW9PCYVIH9A8opiA8pU+WlrNr7Xb+igg+1StU=\n=Ghw3\n-----END PGP SIGNATURE-----", "payload": "tree fe841ba0468fac64f9a09b2a2556ad5a8c311e90\nparent 8c2070121905b66698ebbfb105eab30f3484e602\nauthor Pietro Albini <pietro@pietroalbini.org> 1603361172 +0200\ncommitter Pietro Albini <pietro@pietroalbini.org> 1604573669 +0100\n\nci: gate on aarch64-gnu passing tests\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/54a0a98347f739ee3b9cad8760e237fa6cd8db54", "html_url": "https://github.com/rust-lang/rust/commit/54a0a98347f739ee3b9cad8760e237fa6cd8db54", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/54a0a98347f739ee3b9cad8760e237fa6cd8db54/comments", "author": {"login": "pietroalbini", "id": 2299951, "node_id": "MDQ6VXNlcjIyOTk5NTE=", "avatar_url": "https://avatars.githubusercontent.com/u/2299951?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pietroalbini", "html_url": "https://github.com/pietroalbini", "followers_url": "https://api.github.com/users/pietroalbini/followers", "following_url": "https://api.github.com/users/pietroalbini/following{/other_user}", "gists_url": "https://api.github.com/users/pietroalbini/gists{/gist_id}", "starred_url": "https://api.github.com/users/pietroalbini/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pietroalbini/subscriptions", "organizations_url": "https://api.github.com/users/pietroalbini/orgs", "repos_url": "https://api.github.com/users/pietroalbini/repos", "events_url": "https://api.github.com/users/pietroalbini/events{/privacy}", "received_events_url": "https://api.github.com/users/pietroalbini/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pietroalbini", "id": 2299951, "node_id": "MDQ6VXNlcjIyOTk5NTE=", "avatar_url": "https://avatars.githubusercontent.com/u/2299951?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pietroalbini", "html_url": "https://github.com/pietroalbini", "followers_url": "https://api.github.com/users/pietroalbini/followers", "following_url": "https://api.github.com/users/pietroalbini/following{/other_user}", "gists_url": "https://api.github.com/users/pietroalbini/gists{/gist_id}", "starred_url": "https://api.github.com/users/pietroalbini/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pietroalbini/subscriptions", "organizations_url": "https://api.github.com/users/pietroalbini/orgs", "repos_url": "https://api.github.com/users/pietroalbini/repos", "events_url": "https://api.github.com/users/pietroalbini/events{/privacy}", "received_events_url": "https://api.github.com/users/pietroalbini/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8c2070121905b66698ebbfb105eab30f3484e602", "url": "https://api.github.com/repos/rust-lang/rust/commits/8c2070121905b66698ebbfb105eab30f3484e602", "html_url": "https://github.com/rust-lang/rust/commit/8c2070121905b66698ebbfb105eab30f3484e602"}], "stats": {"total": 135, "additions": 8, "deletions": 127}, "files": [{"sha": "90296ec32eedae24730365602c45efab7ad1a09c", "filename": ".github/workflows/ci.yml", "status": "modified", "additions": 5, "deletions": 110, "changes": 115, "blob_url": "https://github.com/rust-lang/rust/blob/54a0a98347f739ee3b9cad8760e237fa6cd8db54/.github%2Fworkflows%2Fci.yml", "raw_url": "https://github.com/rust-lang/rust/raw/54a0a98347f739ee3b9cad8760e237fa6cd8db54/.github%2Fworkflows%2Fci.yml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/.github%2Fworkflows%2Fci.yml?ref=54a0a98347f739ee3b9cad8760e237fa6cd8db54", "patch": "@@ -154,6 +154,11 @@ jobs:\n     strategy:\n       matrix:\n         include:\n+          - name: aarch64-gnu\n+            os:\n+              - self-hosted\n+              - ARM64\n+              - linux\n           - name: arm-android\n             os: ubuntu-latest-xl\n             env: {}\n@@ -509,116 +514,6 @@ jobs:\n           AWS_ACCESS_KEY_ID: \"${{ env.ARTIFACTS_AWS_ACCESS_KEY_ID }}\"\n           AWS_SECRET_ACCESS_KEY: \"${{ secrets[format('AWS_SECRET_ACCESS_KEY_{0}', env.ARTIFACTS_AWS_ACCESS_KEY_ID)] }}\"\n         if: \"success() && !env.SKIP_JOB && (github.event_name == 'push' || env.DEPLOY == '1' || env.DEPLOY_ALT == '1')\"\n-  auto-fallible:\n-    name: auto-fallible\n-    env:\n-      CI_JOB_NAME: \"${{ matrix.name }}\"\n-      SCCACHE_BUCKET: rust-lang-gha-caches\n-      DEPLOY_BUCKET: rust-lang-gha\n-      TOOLSTATE_REPO: \"https://github.com/pietroalbini/rust-toolstate\"\n-      TOOLSTATE_ISSUES_API_URL: \"https://api.github.com/repos/pietroalbini/rust-toolstate/issues\"\n-      TOOLSTATE_PUBLISH: 1\n-      CACHES_AWS_ACCESS_KEY_ID: AKIA46X5W6CZOMUQATD5\n-      ARTIFACTS_AWS_ACCESS_KEY_ID: AKIA46X5W6CZH5AYXDVF\n-      CACHE_DOMAIN: ci-caches-gha.rust-lang.org\n-    if: \"github.event_name == 'push' && github.ref == 'refs/heads/auto' && github.repository == 'rust-lang-ci/rust'\"\n-    strategy:\n-      fail-fast: false\n-      matrix:\n-        include:\n-          - name: aarch64-gnu\n-            os:\n-              - self-hosted\n-              - ARM64\n-              - linux\n-    timeout-minutes: 600\n-    runs-on: \"${{ matrix.os }}\"\n-    steps:\n-      - name: disable git crlf conversion\n-        run: git config --global core.autocrlf false\n-      - name: checkout the source code\n-        uses: actions/checkout@v2\n-        with:\n-          fetch-depth: 2\n-      - name: configure the PR in which the error message will be posted\n-        run: \"echo \\\"[CI_PR_NUMBER=$num]\\\"\"\n-        env:\n-          num: \"${{ github.event.number }}\"\n-        if: \"success() && !env.SKIP_JOBS && github.event_name == 'pull_request'\"\n-      - name: add extra environment variables\n-        run: src/ci/scripts/setup-environment.sh\n-        env:\n-          EXTRA_VARIABLES: \"${{ toJson(matrix.env) }}\"\n-        if: success() && !env.SKIP_JOB\n-      - name: decide whether to skip this job\n-        run: src/ci/scripts/should-skip-this.sh\n-        if: success() && !env.SKIP_JOB\n-      - name: configure GitHub Actions to kill the build when outdated\n-        uses: rust-lang/simpleinfra/github-actions/cancel-outdated-builds@master\n-        with:\n-          github_token: \"${{ secrets.github_token }}\"\n-        if: \"success() && !env.SKIP_JOB && github.ref != 'refs/heads/try'\"\n-      - name: collect CPU statistics\n-        run: src/ci/scripts/collect-cpu-stats.sh\n-        if: success() && !env.SKIP_JOB\n-      - name: show the current environment\n-        run: src/ci/scripts/dump-environment.sh\n-        if: success() && !env.SKIP_JOB\n-      - name: install awscli\n-        run: src/ci/scripts/install-awscli.sh\n-        if: success() && !env.SKIP_JOB\n-      - name: install sccache\n-        run: src/ci/scripts/install-sccache.sh\n-        if: success() && !env.SKIP_JOB\n-      - name: select Xcode\n-        run: src/ci/scripts/select-xcode.sh\n-        if: success() && !env.SKIP_JOB\n-      - name: install clang\n-        run: src/ci/scripts/install-clang.sh\n-        if: success() && !env.SKIP_JOB\n-      - name: install WIX\n-        run: src/ci/scripts/install-wix.sh\n-        if: success() && !env.SKIP_JOB\n-      - name: ensure the build happens on a partition with enough space\n-        run: src/ci/scripts/symlink-build-dir.sh\n-        if: success() && !env.SKIP_JOB\n-      - name: disable git crlf conversion\n-        run: src/ci/scripts/disable-git-crlf-conversion.sh\n-        if: success() && !env.SKIP_JOB\n-      - name: install MSYS2\n-        run: src/ci/scripts/install-msys2.sh\n-        if: success() && !env.SKIP_JOB\n-      - name: install MinGW\n-        run: src/ci/scripts/install-mingw.sh\n-        if: success() && !env.SKIP_JOB\n-      - name: install ninja\n-        run: src/ci/scripts/install-ninja.sh\n-        if: success() && !env.SKIP_JOB\n-      - name: enable ipv6 on Docker\n-        run: src/ci/scripts/enable-docker-ipv6.sh\n-        if: success() && !env.SKIP_JOB\n-      - name: disable git crlf conversion\n-        run: src/ci/scripts/disable-git-crlf-conversion.sh\n-        if: success() && !env.SKIP_JOB\n-      - name: checkout submodules\n-        run: src/ci/scripts/checkout-submodules.sh\n-        if: success() && !env.SKIP_JOB\n-      - name: ensure line endings are correct\n-        run: src/ci/scripts/verify-line-endings.sh\n-        if: success() && !env.SKIP_JOB\n-      - name: run the build\n-        run: src/ci/scripts/run-build-from-ci.sh\n-        env:\n-          AWS_ACCESS_KEY_ID: \"${{ env.CACHES_AWS_ACCESS_KEY_ID }}\"\n-          AWS_SECRET_ACCESS_KEY: \"${{ secrets[format('AWS_SECRET_ACCESS_KEY_{0}', env.CACHES_AWS_ACCESS_KEY_ID)] }}\"\n-          TOOLSTATE_REPO_ACCESS_TOKEN: \"${{ secrets.TOOLSTATE_REPO_ACCESS_TOKEN }}\"\n-        if: success() && !env.SKIP_JOB\n-      - name: upload artifacts to S3\n-        run: src/ci/scripts/upload-artifacts.sh\n-        env:\n-          AWS_ACCESS_KEY_ID: \"${{ env.ARTIFACTS_AWS_ACCESS_KEY_ID }}\"\n-          AWS_SECRET_ACCESS_KEY: \"${{ secrets[format('AWS_SECRET_ACCESS_KEY_{0}', env.ARTIFACTS_AWS_ACCESS_KEY_ID)] }}\"\n-        if: \"success() && !env.SKIP_JOB && (github.event_name == 'push' || env.DEPLOY == '1' || env.DEPLOY_ALT == '1')\"\n   try:\n     name: try\n     env:"}, {"sha": "1e28b5a2536558bf073f0639accf4f0975d9b29a", "filename": "src/ci/github-actions/ci.yml", "status": "modified", "additions": 3, "deletions": 17, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/54a0a98347f739ee3b9cad8760e237fa6cd8db54/src%2Fci%2Fgithub-actions%2Fci.yml", "raw_url": "https://github.com/rust-lang/rust/raw/54a0a98347f739ee3b9cad8760e237fa6cd8db54/src%2Fci%2Fgithub-actions%2Fci.yml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fgithub-actions%2Fci.yml?ref=54a0a98347f739ee3b9cad8760e237fa6cd8db54", "patch": "@@ -301,6 +301,9 @@ jobs:\n           #   Linux/Docker builders   #\n           #############################\n \n+          - name: aarch64-gnu\n+            <<: *job-aarch64-linux\n+\n           - name: arm-android\n             <<: *job-linux-xl\n \n@@ -653,23 +656,6 @@ jobs:\n               SCRIPT: python x.py dist\n             <<: *job-windows-xl\n \n-  auto-fallible:\n-    <<: *base-ci-job\n-    name: auto-fallible\n-    env:\n-      <<: [*shared-ci-variables, *dummy-variables]\n-    if: github.event_name == 'push' && github.ref == 'refs/heads/auto' && github.repository == 'rust-lang-ci/rust'\n-    strategy:\n-      fail-fast: false\n-      matrix:\n-        include:\n-          #############################\n-          #   Linux/Docker builders   #\n-          #############################\n-\n-          - name: aarch64-gnu\n-            <<: *job-aarch64-linux\n-\n   try:\n     <<: *base-ci-job\n     name: try"}]}