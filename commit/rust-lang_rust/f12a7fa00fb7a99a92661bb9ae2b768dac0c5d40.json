{"sha": "f12a7fa00fb7a99a92661bb9ae2b768dac0c5d40", "node_id": "C_kwDOAAsO6NoAKGYxMmE3ZmEwMGZiN2E5OWE5MjY2MWJiOWFlMmI3NjhkYWMwYzVkNDA", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2023-04-23T09:13:33Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2023-04-23T09:13:33Z"}, "message": "Auto merge of #110497 - cjgillot:span-ctxt, r=b-naber\n\nRefactor `SyntaxContext::ctxt` logic.\n\nI'm still trying to make a test from the issue.\n\ncc `@deepink-mas` does this solve the issue?\n\nFixes https://github.com/rust-lang/rust/issues/110230", "tree": {"sha": "9df2ba88e059c98e0a360d129611a5f930694df5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9df2ba88e059c98e0a360d129611a5f930694df5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f12a7fa00fb7a99a92661bb9ae2b768dac0c5d40", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f12a7fa00fb7a99a92661bb9ae2b768dac0c5d40", "html_url": "https://github.com/rust-lang/rust/commit/f12a7fa00fb7a99a92661bb9ae2b768dac0c5d40", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f12a7fa00fb7a99a92661bb9ae2b768dac0c5d40/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9de7d9169c6f2208c544a3d4a170719360cae58c", "url": "https://api.github.com/repos/rust-lang/rust/commits/9de7d9169c6f2208c544a3d4a170719360cae58c", "html_url": "https://github.com/rust-lang/rust/commit/9de7d9169c6f2208c544a3d4a170719360cae58c"}, {"sha": "99962a841831469fbb7a06ccc5a9c9766d052234", "url": "https://api.github.com/repos/rust-lang/rust/commits/99962a841831469fbb7a06ccc5a9c9766d052234", "html_url": "https://github.com/rust-lang/rust/commit/99962a841831469fbb7a06ccc5a9c9766d052234"}], "stats": {"total": 24, "additions": 14, "deletions": 10}, "files": [{"sha": "1eea0f63ca0cc4e1bcdcf48addf3d468dbe01ff2", "filename": "compiler/rustc_span/src/span_encoding.rs", "status": "modified", "additions": 14, "deletions": 10, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/f12a7fa00fb7a99a92661bb9ae2b768dac0c5d40/compiler%2Frustc_span%2Fsrc%2Fspan_encoding.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f12a7fa00fb7a99a92661bb9ae2b768dac0c5d40/compiler%2Frustc_span%2Fsrc%2Fspan_encoding.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_span%2Fsrc%2Fspan_encoding.rs?ref=f12a7fa00fb7a99a92661bb9ae2b768dac0c5d40", "patch": "@@ -181,19 +181,23 @@ impl Span {\n     #[inline]\n     pub fn ctxt(self) -> SyntaxContext {\n         let ctxt_or_tag = self.ctxt_or_tag as u32;\n-        if ctxt_or_tag <= MAX_CTXT {\n-            if self.len_or_tag == LEN_TAG || self.len_or_tag & PARENT_MASK == 0 {\n-                // Inline format or interned format with inline ctxt.\n-                SyntaxContext::from_u32(ctxt_or_tag)\n+        // Check for interned format.\n+        if self.len_or_tag == LEN_TAG {\n+            if ctxt_or_tag == CTXT_TAG {\n+                // Fully interned format.\n+                let index = self.base_or_index;\n+                with_span_interner(|interner| interner.spans[index as usize].ctxt)\n             } else {\n-                // Inline format or interned format with inline parent.\n-                // We know that the SyntaxContext is root.\n-                SyntaxContext::root()\n+                // Interned format with inline ctxt.\n+                SyntaxContext::from_u32(ctxt_or_tag)\n             }\n+        } else if self.len_or_tag & PARENT_MASK == 0 {\n+            // Inline format with inline ctxt.\n+            SyntaxContext::from_u32(ctxt_or_tag)\n         } else {\n-            // Interned format.\n-            let index = self.base_or_index;\n-            with_span_interner(|interner| interner.spans[index as usize].ctxt)\n+            // Inline format with inline parent.\n+            // We know that the SyntaxContext is root.\n+            SyntaxContext::root()\n         }\n     }\n }"}]}