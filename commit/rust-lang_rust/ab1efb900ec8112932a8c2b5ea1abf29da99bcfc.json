{"sha": "ab1efb900ec8112932a8c2b5ea1abf29da99bcfc", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFiMWVmYjkwMGVjODExMjkzMmE4YzJiNWVhMWFiZjI5ZGE5OWJjZmM=", "commit": {"author": {"name": "Jeff Olson", "email": "olson.jeffery@gmail.com", "date": "2012-03-28T15:51:44Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-04-06T22:35:49Z"}, "message": "fixed unix uv struct err from prev commit, also starting uv docs", "tree": {"sha": "0699adea18e9131758dcfcac6bfe0ad3de08a079", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0699adea18e9131758dcfcac6bfe0ad3de08a079"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ab1efb900ec8112932a8c2b5ea1abf29da99bcfc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ab1efb900ec8112932a8c2b5ea1abf29da99bcfc", "html_url": "https://github.com/rust-lang/rust/commit/ab1efb900ec8112932a8c2b5ea1abf29da99bcfc", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ab1efb900ec8112932a8c2b5ea1abf29da99bcfc/comments", "author": {"login": "olsonjeffery", "id": 10408, "node_id": "MDQ6VXNlcjEwNDA4", "avatar_url": "https://avatars.githubusercontent.com/u/10408?v=4", "gravatar_id": "", "url": "https://api.github.com/users/olsonjeffery", "html_url": "https://github.com/olsonjeffery", "followers_url": "https://api.github.com/users/olsonjeffery/followers", "following_url": "https://api.github.com/users/olsonjeffery/following{/other_user}", "gists_url": "https://api.github.com/users/olsonjeffery/gists{/gist_id}", "starred_url": "https://api.github.com/users/olsonjeffery/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/olsonjeffery/subscriptions", "organizations_url": "https://api.github.com/users/olsonjeffery/orgs", "repos_url": "https://api.github.com/users/olsonjeffery/repos", "events_url": "https://api.github.com/users/olsonjeffery/events{/privacy}", "received_events_url": "https://api.github.com/users/olsonjeffery/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fcc973b5ac137beea289f471c6c52dbba17de0c1", "url": "https://api.github.com/repos/rust-lang/rust/commits/fcc973b5ac137beea289f471c6c52dbba17de0c1", "html_url": "https://github.com/rust-lang/rust/commit/fcc973b5ac137beea289f471c6c52dbba17de0c1"}], "stats": {"total": 24, "additions": 23, "deletions": 1}, "files": [{"sha": "a6aeb5c9ffa836874a0c0c7a6d27ba5cfa1c8273", "filename": "src/libstd/uv.rs", "status": "modified", "additions": 23, "deletions": 1, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/ab1efb900ec8112932a8c2b5ea1abf29da99bcfc/src%2Flibstd%2Fuv.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ab1efb900ec8112932a8c2b5ea1abf29da99bcfc/src%2Flibstd%2Fuv.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fuv.rs?ref=ab1efb900ec8112932a8c2b5ea1abf29da99bcfc", "patch": "@@ -1,8 +1,30 @@\n+#[doc = \"\n+Rust mappings to libuv (http://github.com/joyent/libuv)\n+\n+This crate provides a low-level mapping to libuv, a library for\n+running an asynchronous event loop, with extensive IO operations.\n+\n+This crate is seeing heavy work, currently, and the final API layout\n+should not be inferred from its current form.\n+\n+The base module contains a set of safe functions for creating\n+an event loop that runs within a single task, but allows operations\n+against it from other tasks, but funneling it through a uv_async\n+request which reads from a port that users write to.\n+\n+The 'll' module contains low-level, bare-metal mappings to the libuv\n+C-api. All functions within this module are marked unsafe and should\n+be used, primarily, for composing rust-idiomatic abstractions. In\n+lieu of satisfactory documention for the 'll' module, itself, libuv's\n+uv.h should be consulted.\n+\"];\n+\n import map::hashmap;\n export loop_new, loop_delete, run, close, run_in_bg;\n export async_init, async_send;\n export timer_init, timer_start, timer_stop;\n export uv_ip4_addr, uv_ip6_addr;\n+export direct;\n \n // these are processed solely in the\n // process_operation() crust fn below\n@@ -184,7 +206,7 @@ type uv_connect_t = {\n fn gen_stub_uv_connect_t() -> uv_connect_t {\n     ret {\n         a00: 0 as *u8, a01: 0 as *u8, a02: 0 as *u8, a03: 0 as *u8,\n-        a01: 0 as *u8, a05: 0 as *u8\n+        a04: 0 as *u8, a05: 0 as *u8\n     };\n }\n #[cfg(target_os = \"win32\")]"}]}