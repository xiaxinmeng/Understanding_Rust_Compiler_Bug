{"sha": "b01b6e1d5664a1ebaf0e9264be5dddbbc8b4996b", "node_id": "MDY6Q29tbWl0NzI0NzEyOmIwMWI2ZTFkNTY2NGExZWJhZjBlOTI2NGJlNWRkZGJiYzhiNDk5NmI=", "commit": {"author": {"name": "Mark Simulacrum", "email": "mark.simulacrum@gmail.com", "date": "2017-01-04T18:47:43Z"}, "committer": {"name": "Mark Simulacrum", "email": "mark.simulacrum@gmail.com", "date": "2017-01-04T18:47:43Z"}, "message": "Fix errors introduced during rebase", "tree": {"sha": "b8f62eb424b11df7d0a2a5d4f581e75440afe142", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b8f62eb424b11df7d0a2a5d4f581e75440afe142"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b01b6e1d5664a1ebaf0e9264be5dddbbc8b4996b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b01b6e1d5664a1ebaf0e9264be5dddbbc8b4996b", "html_url": "https://github.com/rust-lang/rust/commit/b01b6e1d5664a1ebaf0e9264be5dddbbc8b4996b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b01b6e1d5664a1ebaf0e9264be5dddbbc8b4996b/comments", "author": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "21f86ba1bc4c58706973c88a81d0b2e51190c0b7", "url": "https://api.github.com/repos/rust-lang/rust/commits/21f86ba1bc4c58706973c88a81d0b2e51190c0b7", "html_url": "https://github.com/rust-lang/rust/commit/21f86ba1bc4c58706973c88a81d0b2e51190c0b7"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "842a21e98db46f12686db159bd8d27cb9421afcd", "filename": "src/librustc_trans/intrinsic.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b01b6e1d5664a1ebaf0e9264be5dddbbc8b4996b/src%2Flibrustc_trans%2Fintrinsic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b01b6e1d5664a1ebaf0e9264be5dddbbc8b4996b/src%2Flibrustc_trans%2Fintrinsic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Fintrinsic.rs?ref=b01b6e1d5664a1ebaf0e9264be5dddbbc8b4996b", "patch": "@@ -694,7 +694,7 @@ fn try_intrinsic<'a, 'tcx>(\n         bcx.call(func, &[data], None);\n         bcx.store(C_null(Type::i8p(&bcx.ccx)), dest, None);\n     } else if wants_msvc_seh(bcx.sess()) {\n-        trans_msvc_try(bcx, fcx, func, data, local_ptr, dest);\n+        trans_msvc_try(bcx, ccx, func, data, local_ptr, dest);\n     } else {\n         trans_gnu_try(bcx, ccx, func, data, local_ptr, dest);\n     }"}, {"sha": "6d92cd99fbeb971b3977ef32c9066027d648bb6e", "filename": "src/librustc_trans/mir/block.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/b01b6e1d5664a1ebaf0e9264be5dddbbc8b4996b/src%2Flibrustc_trans%2Fmir%2Fblock.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b01b6e1d5664a1ebaf0e9264be5dddbbc8b4996b/src%2Flibrustc_trans%2Fmir%2Fblock.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Fmir%2Fblock.rs?ref=b01b6e1d5664a1ebaf0e9264be5dddbbc8b4996b", "patch": "@@ -209,7 +209,7 @@ impl<'a, 'tcx> MirContext<'a, 'tcx> {\n                     };\n                     let llslot = match op.val {\n                         Immediate(_) | Pair(..) => {\n-                            let llscratch = bcx.fcx().alloca(ret.original_ty, \"ret\");\n+                            let llscratch = bcx.alloca(ret.original_ty, \"ret\");\n                             self.store_operand(&bcx, llscratch, op, None);\n                             llscratch\n                         }\n@@ -651,7 +651,7 @@ impl<'a, 'tcx> MirContext<'a, 'tcx> {\n         let (mut llval, by_ref) = match op.val {\n             Immediate(_) | Pair(..) => {\n                 if arg.is_indirect() || arg.cast.is_some() {\n-                    let llscratch = bcx.fcx().alloca(arg.original_ty, \"arg\");\n+                    let llscratch = bcx.alloca(arg.original_ty, \"arg\");\n                     self.store_operand(bcx, llscratch, op, None);\n                     (llscratch, true)\n                 } else {"}, {"sha": "eedd7956805b6a52fb7a43a074e27496ae387d7a", "filename": "src/librustc_trans/mir/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b01b6e1d5664a1ebaf0e9264be5dddbbc8b4996b/src%2Flibrustc_trans%2Fmir%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b01b6e1d5664a1ebaf0e9264be5dddbbc8b4996b/src%2Flibrustc_trans%2Fmir%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Fmir%2Fmod.rs?ref=b01b6e1d5664a1ebaf0e9264be5dddbbc8b4996b", "patch": "@@ -519,7 +519,7 @@ fn arg_local_refs<'a, 'tcx>(bcx: &Builder<'a, 'tcx>,\n             // doesn't actually strip the offset when splitting the closure\n             // environment into its components so it ends up out of bounds.\n             let env_ptr = if !env_ref {\n-                let alloc = bcx.fcx().alloca(common::val_ty(llval), \"__debuginfo_env_ptr\");\n+                let alloc = bcx.alloca(common::val_ty(llval), \"__debuginfo_env_ptr\");\n                 bcx.store(llval, alloc, None);\n                 alloc\n             } else {"}]}