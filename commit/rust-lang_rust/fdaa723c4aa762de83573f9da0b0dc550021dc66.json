{"sha": "fdaa723c4aa762de83573f9da0b0dc550021dc66", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZkYWE3MjNjNGFhNzYyZGU4MzU3M2Y5ZGEwYjBkYzU1MDAyMWRjNjY=", "commit": {"author": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2010-07-09T05:58:11Z"}, "committer": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2010-07-09T05:58:11Z"}, "message": "Encode and decode DW_AT_rust_iterator on DW_TAG_subprogram DIEs.", "tree": {"sha": "dee29d5b5bc8169ab7b4b7023bd1183662877acd", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/dee29d5b5bc8169ab7b4b7023bd1183662877acd"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fdaa723c4aa762de83573f9da0b0dc550021dc66", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fdaa723c4aa762de83573f9da0b0dc550021dc66", "html_url": "https://github.com/rust-lang/rust/commit/fdaa723c4aa762de83573f9da0b0dc550021dc66", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fdaa723c4aa762de83573f9da0b0dc550021dc66/comments", "author": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "committer": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ddf49afe08d8a8e4b89ed78cf2ff9292e0e10643", "url": "https://api.github.com/repos/rust-lang/rust/commits/ddf49afe08d8a8e4b89ed78cf2ff9292e0e10643", "html_url": "https://github.com/rust-lang/rust/commit/ddf49afe08d8a8e4b89ed78cf2ff9292e0e10643"}], "stats": {"total": 10, "additions": 8, "deletions": 2}, "files": [{"sha": "cdc88da77d60aaf022c6812359475fc30f46d11b", "filename": "src/boot/me/dwarf.ml", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/fdaa723c4aa762de83573f9da0b0dc550021dc66/src%2Fboot%2Fme%2Fdwarf.ml", "raw_url": "https://github.com/rust-lang/rust/raw/fdaa723c4aa762de83573f9da0b0dc550021dc66/src%2Fboot%2Fme%2Fdwarf.ml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fboot%2Fme%2Fdwarf.ml?ref=fdaa723c4aa762de83573f9da0b0dc550021dc66", "patch": "@@ -1203,6 +1203,7 @@ let (abbrev_subprogram:abbrev) =\n      (DW_AT_return_addr, DW_FORM_block1);\n      (DW_AT_mutable, DW_FORM_flag);\n      (DW_AT_pure, DW_FORM_flag);\n+     (DW_AT_rust_iterator, DW_FORM_flag);\n    |])\n ;;\n \n@@ -2295,6 +2296,7 @@ let dwarf_visitor\n       (id:Ast.ident)\n       (ret_slot:Ast.slot)\n       (effect:Ast.effect)\n+      (iter:bool)\n       (fix:fixup)\n       : unit =\n     (* NB: retpc = \"top word of frame-base\" by convention in ABI/x86. *)\n@@ -2314,6 +2316,8 @@ let dwarf_visitor\n          (* DW_AT_return_addr *)\n          dw_form_block1 [| DW_OP_fbreg (Asm.IMM retpc); |];\n          encode_effect effect;\n+         (* DW_AT_rust_iterator: DW_FORM_flag *)\n+         BYTE (if iter then 1 else 0)\n        |])\n     in\n       emit_die subprogram_die\n@@ -2388,7 +2392,8 @@ let dwarf_visitor\n                   (path_name())\n                   (Array.length item.node.Ast.decl_params);\n                 emit_subprogram_die\n-                  id tsig.Ast.sig_output_slot taux.Ast.fn_effect\n+                  id tsig.Ast.sig_output_slot\n+                  taux.Ast.fn_effect taux.Ast.fn_is_iter\n                   (Hashtbl.find cx.ctxt_fn_fixups item.id);\n                 emit_type_param_decl_dies item.node.Ast.decl_params;\n             end\n@@ -3132,9 +3137,10 @@ let rec extract_mod_items\n           let ident = get_name die in\n           let oslot = get_referenced_slot die in\n           let effect = get_effect die in\n+          let iter = get_flag die DW_AT_rust_iterator in\n           let (params, islots) = get_formals die in\n           let taux = { Ast.fn_effect = effect;\n-                       Ast.fn_is_iter = false }\n+                       Ast.fn_is_iter = iter }\n           in\n           let tfn = { Ast.fn_input_slots = form_header_slots islots;\n                        Ast.fn_input_constrs = [| |];"}]}