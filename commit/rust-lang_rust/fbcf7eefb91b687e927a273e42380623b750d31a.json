{"sha": "fbcf7eefb91b687e927a273e42380623b750d31a", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZiY2Y3ZWVmYjkxYjY4N2U5MjdhMjczZTQyMzgwNjIzYjc1MGQzMWE=", "commit": {"author": {"name": "Michael Wright", "email": "mikerite@lavabit.com", "date": "2019-03-07T06:13:59Z"}, "committer": {"name": "Michael Wright", "email": "mikerite@lavabit.com", "date": "2019-03-07T06:13:59Z"}, "message": "Add `[rustfmt::skip]` to `unused_unit` test", "tree": {"sha": "5977763ad5e242b53df462b6cbb16a13b728af54", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5977763ad5e242b53df462b6cbb16a13b728af54"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fbcf7eefb91b687e927a273e42380623b750d31a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fbcf7eefb91b687e927a273e42380623b750d31a", "html_url": "https://github.com/rust-lang/rust/commit/fbcf7eefb91b687e927a273e42380623b750d31a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fbcf7eefb91b687e927a273e42380623b750d31a/comments", "author": null, "committer": null, "parents": [{"sha": "131c8f6bf2bec0d778775c1621073e9a7c4ee8c1", "url": "https://api.github.com/repos/rust-lang/rust/commits/131c8f6bf2bec0d778775c1621073e9a7c4ee8c1", "html_url": "https://github.com/rust-lang/rust/commit/131c8f6bf2bec0d778775c1621073e9a7c4ee8c1"}], "stats": {"total": 18, "additions": 10, "deletions": 8}, "files": [{"sha": "ec860de93582130e66aa8354eae93fc7f695aab9", "filename": "ci/base-tests.sh", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fbcf7eefb91b687e927a273e42380623b750d31a/ci%2Fbase-tests.sh", "raw_url": "https://github.com/rust-lang/rust/raw/fbcf7eefb91b687e927a273e42380623b750d31a/ci%2Fbase-tests.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/ci%2Fbase-tests.sh?ref=fbcf7eefb91b687e927a273e42380623b750d31a", "patch": "@@ -59,7 +59,7 @@ rustup override set nightly\n # avoid loop spam and allow cmds with exit status != 0\n set +ex\n \n-for file in `find tests -not -path \"tests/ui/unused_unit.rs\" | grep \"\\.rs$\"` ; do\n+for file in `find tests | grep \"\\.rs$\"` ; do\n   rustfmt ${file} --check\n   if [ $? -ne 0 ]; then\n     echo \"${file} needs reformatting!\""}, {"sha": "6d6ecd105c608dbbc00acceb0b36042aa97a1149", "filename": "tests/ui/unused_unit.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fbcf7eefb91b687e927a273e42380623b750d31a/tests%2Fui%2Funused_unit.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbcf7eefb91b687e927a273e42380623b750d31a/tests%2Fui%2Funused_unit.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Funused_unit.rs?ref=fbcf7eefb91b687e927a273e42380623b750d31a", "patch": "@@ -8,6 +8,8 @@\n \n #![deny(clippy::unused_unit)]\n #![allow(clippy::needless_return)]\n+#![feature(custom_inner_attributes)]\n+#![rustfmt::skip]\n \n struct Unitter;\n impl Unitter {"}, {"sha": "92098925ac17105a173a3ec2d1a5a3447ec2af53", "filename": "tests/ui/unused_unit.stderr", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/fbcf7eefb91b687e927a273e42380623b750d31a/tests%2Fui%2Funused_unit.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fbcf7eefb91b687e927a273e42380623b750d31a/tests%2Fui%2Funused_unit.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Funused_unit.stderr?ref=fbcf7eefb91b687e927a273e42380623b750d31a", "patch": "@@ -1,5 +1,5 @@\n error: unneeded unit return type\n-  --> $DIR/unused_unit.rs:15:59\n+  --> $DIR/unused_unit.rs:17:59\n    |\n LL |       pub fn get_unit<F: Fn() -> (), G>(&self, f: F, _g: G) ->\n    |  ___________________________________________________________^\n@@ -13,37 +13,37 @@ LL | #![deny(clippy::unused_unit)]\n    |         ^^^^^^^^^^^^^^^^^^^\n \n error: unneeded unit return type\n-  --> $DIR/unused_unit.rs:25:19\n+  --> $DIR/unused_unit.rs:27:19\n    |\n LL |     fn into(self) -> () {\n    |                   ^^^^^ help: remove the `-> ()`\n \n error: unneeded unit expression\n-  --> $DIR/unused_unit.rs:26:9\n+  --> $DIR/unused_unit.rs:28:9\n    |\n LL |         ()\n    |         ^^ help: remove the final `()`\n \n error: unneeded unit return type\n-  --> $DIR/unused_unit.rs:30:18\n+  --> $DIR/unused_unit.rs:32:18\n    |\n LL | fn return_unit() -> () { () }\n    |                  ^^^^^ help: remove the `-> ()`\n \n error: unneeded unit expression\n-  --> $DIR/unused_unit.rs:30:26\n+  --> $DIR/unused_unit.rs:32:26\n    |\n LL | fn return_unit() -> () { () }\n    |                          ^^ help: remove the final `()`\n \n error: unneeded `()`\n-  --> $DIR/unused_unit.rs:37:14\n+  --> $DIR/unused_unit.rs:39:14\n    |\n LL |         break();\n    |              ^^ help: remove the `()`\n \n error: unneeded `()`\n-  --> $DIR/unused_unit.rs:39:11\n+  --> $DIR/unused_unit.rs:41:11\n    |\n LL |     return();\n    |           ^^ help: remove the `()`"}]}