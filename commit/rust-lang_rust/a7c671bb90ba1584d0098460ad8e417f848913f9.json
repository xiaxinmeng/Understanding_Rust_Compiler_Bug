{"sha": "a7c671bb90ba1584d0098460ad8e417f848913f9", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE3YzY3MWJiOTBiYTE1ODRkMDA5ODQ2MGFkOGU0MTdmODQ4OTEzZjk=", "commit": {"author": {"name": "Oliver Middleton", "email": "olliemail27@gmail.com", "date": "2016-08-27T16:00:36Z"}, "committer": {"name": "Oliver Middleton", "email": "olliemail27@gmail.com", "date": "2016-08-27T16:00:36Z"}, "message": "rustdoc: Add missing item types to page titles\n\nMost pages include the item type in the title such as \"Struct\nstd::vec::Vec\". However it is missing from the pages for foreign\nfunctions, type definitions, macros, statics and constants. This adds them\nso for example, instead of a title of \"std::u32::MAX\" it is \"Constant\nstd::u32::MAX\" to match the others.", "tree": {"sha": "f4b23f24c56b81fd9a812af3c77c0b7b5786498d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f4b23f24c56b81fd9a812af3c77c0b7b5786498d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a7c671bb90ba1584d0098460ad8e417f848913f9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a7c671bb90ba1584d0098460ad8e417f848913f9", "html_url": "https://github.com/rust-lang/rust/commit/a7c671bb90ba1584d0098460ad8e417f848913f9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a7c671bb90ba1584d0098460ad8e417f848913f9/comments", "author": {"login": "ollie27", "id": 7189418, "node_id": "MDQ6VXNlcjcxODk0MTg=", "avatar_url": "https://avatars.githubusercontent.com/u/7189418?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ollie27", "html_url": "https://github.com/ollie27", "followers_url": "https://api.github.com/users/ollie27/followers", "following_url": "https://api.github.com/users/ollie27/following{/other_user}", "gists_url": "https://api.github.com/users/ollie27/gists{/gist_id}", "starred_url": "https://api.github.com/users/ollie27/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ollie27/subscriptions", "organizations_url": "https://api.github.com/users/ollie27/orgs", "repos_url": "https://api.github.com/users/ollie27/repos", "events_url": "https://api.github.com/users/ollie27/events{/privacy}", "received_events_url": "https://api.github.com/users/ollie27/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ollie27", "id": 7189418, "node_id": "MDQ6VXNlcjcxODk0MTg=", "avatar_url": "https://avatars.githubusercontent.com/u/7189418?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ollie27", "html_url": "https://github.com/ollie27", "followers_url": "https://api.github.com/users/ollie27/followers", "following_url": "https://api.github.com/users/ollie27/following{/other_user}", "gists_url": "https://api.github.com/users/ollie27/gists{/gist_id}", "starred_url": "https://api.github.com/users/ollie27/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ollie27/subscriptions", "organizations_url": "https://api.github.com/users/ollie27/orgs", "repos_url": "https://api.github.com/users/ollie27/repos", "events_url": "https://api.github.com/users/ollie27/events{/privacy}", "received_events_url": "https://api.github.com/users/ollie27/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "71bdeea561355ba5adbc9a1f44f4f866a75a15c4", "url": "https://api.github.com/repos/rust-lang/rust/commits/71bdeea561355ba5adbc9a1f44f4f866a75a15c4", "html_url": "https://github.com/rust-lang/rust/commit/71bdeea561355ba5adbc9a1f44f4f866a75a15c4"}], "stats": {"total": 77, "additions": 74, "deletions": 3}, "files": [{"sha": "3717e876d736de01e028577edd70abc309a85e0f", "filename": "src/librustdoc/html/render.rs", "status": "modified", "additions": 15, "deletions": 3, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/a7c671bb90ba1584d0098460ad8e417f848913f9/src%2Flibrustdoc%2Fhtml%2Frender.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a7c671bb90ba1584d0098460ad8e417f848913f9/src%2Flibrustdoc%2Fhtml%2Frender.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender.rs?ref=a7c671bb90ba1584d0098460ad8e417f848913f9", "patch": "@@ -1552,12 +1552,21 @@ impl<'a> fmt::Display for Item<'a> {\n                 } else {\n                     write!(fmt, \"Module \")?;\n                 },\n-            clean::FunctionItem(..) => write!(fmt, \"Function \")?,\n+            clean::FunctionItem(..) | clean::ForeignFunctionItem(..) =>\n+                write!(fmt, \"Function \")?,\n             clean::TraitItem(..) => write!(fmt, \"Trait \")?,\n             clean::StructItem(..) => write!(fmt, \"Struct \")?,\n             clean::EnumItem(..) => write!(fmt, \"Enum \")?,\n+            clean::TypedefItem(..) => write!(fmt, \"Type Definition \")?,\n+            clean::MacroItem(..) => write!(fmt, \"Macro \")?,\n             clean::PrimitiveItem(..) => write!(fmt, \"Primitive Type \")?,\n-            _ => {}\n+            clean::StaticItem(..) | clean::ForeignStaticItem(..) =>\n+                write!(fmt, \"Static \")?,\n+            clean::ConstantItem(..) => write!(fmt, \"Constant \")?,\n+            _ => {\n+                // We don't generate pages for any other type.\n+                unreachable!();\n+            }\n         }\n         if !self.item.is_primitive() {\n             let cur = &self.cx.current;\n@@ -1618,7 +1627,10 @@ impl<'a> fmt::Display for Item<'a> {\n             clean::StaticItem(ref i) | clean::ForeignStaticItem(ref i) =>\n                 item_static(fmt, self.cx, self.item, i),\n             clean::ConstantItem(ref c) => item_constant(fmt, self.cx, self.item, c),\n-            _ => Ok(())\n+            _ => {\n+                // We don't generate pages for any other type.\n+                unreachable!();\n+            }\n         }\n     }\n }"}, {"sha": "a56fa420944f70b9ab900af01b75d2f09649089c", "filename": "src/test/rustdoc/titles.rs", "status": "added", "additions": 59, "deletions": 0, "changes": 59, "blob_url": "https://github.com/rust-lang/rust/blob/a7c671bb90ba1584d0098460ad8e417f848913f9/src%2Ftest%2Frustdoc%2Ftitles.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a7c671bb90ba1584d0098460ad8e417f848913f9/src%2Ftest%2Frustdoc%2Ftitles.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Ftitles.rs?ref=a7c671bb90ba1584d0098460ad8e417f848913f9", "patch": "@@ -0,0 +1,59 @@\n+// Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![crate_name = \"foo\"]\n+\n+// @matches 'foo/index.html' '//h1' 'Crate foo'\n+\n+// @matches 'foo/foo_mod/index.html' '//h1' 'Module foo::foo_mod'\n+pub mod foo_mod {\n+    pub struct __Thing {}\n+}\n+\n+extern {\n+    // @matches 'foo/fn.foo_ffn.html' '//h1' 'Function foo::foo_ffn'\n+    pub fn foo_ffn();\n+}\n+\n+// @matches 'foo/fn.foo_fn.html' '//h1' 'Function foo::foo_fn'\n+pub fn foo_fn() {}\n+\n+// @matches 'foo/trait.FooTrait.html' '//h1' 'Trait foo::FooTrait'\n+pub trait FooTrait {}\n+\n+// @matches 'foo/struct.FooStruct.html' '//h1' 'Struct foo::FooStruct'\n+pub struct FooStruct;\n+\n+// @matches 'foo/enum.FooEnum.html' '//h1' 'Enum foo::FooEnum'\n+pub enum FooEnum {}\n+\n+// @matches 'foo/type.FooType.html' '//h1' 'Type Definition foo::FooType'\n+pub type FooType = FooStruct;\n+\n+// @matches 'foo/macro.foo_macro.html' '//h1' 'Macro foo::foo_macro'\n+#[macro_export]\n+macro_rules! foo_macro {\n+    () => ();\n+}\n+\n+// @matches 'foo/primitive.bool.html' '//h1' 'Primitive Type bool'\n+#[doc(primitive = \"bool\")]\n+mod bool {}\n+\n+// @matches 'foo/static.FOO_STATIC.html' '//h1' 'Static foo::FOO_STATIC'\n+pub static FOO_STATIC: FooStruct = FooStruct;\n+\n+extern {\n+    // @matches 'foo/static.FOO_FSTATIC.html' '//h1' 'Static foo::FOO_FSTATIC'\n+    pub static FOO_FSTATIC: FooStruct;\n+}\n+\n+// @matches 'foo/constant.FOO_CONSTANT.html' '//h1' 'Constant foo::FOO_CONSTANT'\n+pub const FOO_CONSTANT: FooStruct = FooStruct;"}]}