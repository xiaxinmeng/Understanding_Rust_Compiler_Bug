{"sha": "61cfe92a992f8cd8b1af8e443c442be9559c3a19", "node_id": "MDY6Q29tbWl0NzI0NzEyOjYxY2ZlOTJhOTkyZjhjZDhiMWFmOGU0NDNjNDQyYmU5NTU5YzNhMTk=", "commit": {"author": {"name": "Aaron Hill", "email": "aa1ronham@gmail.com", "date": "2019-09-24T14:01:14Z"}, "committer": {"name": "Aaron Hill", "email": "aa1ronham@gmail.com", "date": "2019-09-24T19:59:02Z"}, "message": "Add additional tests for type alias impl trait coherence", "tree": {"sha": "a04e7c29d2652d09105605a87eafa71fd394faf0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a04e7c29d2652d09105605a87eafa71fd394faf0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/61cfe92a992f8cd8b1af8e443c442be9559c3a19", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE7J9Gc3TfBwj2K399tAh+UQ6YsWQFAl2KdYcACgkQtAh+UQ6Y\nsWRD6g//ah6JnuFe0xVBHa3AXoBPimW48tirfuAcOs5XEbvyj9Az5HXSs2HzKt2L\n+NIhJ5DyhniomhKHWBRMUR71Uw6UDeqN2NG4VcHPLeHddsKgyJcQdr6leOkKneJz\nfA3P97bUYG/f15GdxGg0VcFTUQiMOHI1buafHoeWgOQthbltyIcI1joSIiMu6wXu\nd/nUH9nsUtzoPy8gweE5aOyg1lgTxfRWjC/mVHZxlIeXhfFQqZ9DEiHgy8PcuSJx\ncgrlW3yIGrzHljQbdpLH15VhLAesa2KpVTHWCITqrAKzzTA/gEzByQFduL0u0pNo\nR1NjtPU7jr+N5KcxulgQF6ub9/RIa+WCEgZLJStgqZ8miDEc2FahnEbR8xIgPIx7\nKZ/J8cdkW7mhnlGD5iHddmD3Zm6z0l4v2hXjpheuvwCntSHK2k/nwYjwjDIItC8O\nw5+k+0bp9lXLsIhZkpZL+niT2SyZqU36hi97qFMyPsJpzR3muFTzgs8Ukk2WO5Lp\n08u3FhnhRIlK+aJS54MxGZHhSfFdp4OuonE9l0Kl7eQ1qZv63i+1JdEexQHnLE1u\nOUV/BpjfbIz1K2eEnfDguLkkv35LxDX9YiF9+AEBep3zgaeH+asaoUSSzIE46UN5\nthergvuYtGtIgZvHJAkx1tSujl63tu5YY2+gLkgk4TkT3B98zx0=\n=Y9IO\n-----END PGP SIGNATURE-----", "payload": "tree a04e7c29d2652d09105605a87eafa71fd394faf0\nparent 33e1dd78646e712e7fe159e903fff58bd1734418\nauthor Aaron Hill <aa1ronham@gmail.com> 1569333674 -0400\ncommitter Aaron Hill <aa1ronham@gmail.com> 1569355142 -0400\n\nAdd additional tests for type alias impl trait coherence\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/61cfe92a992f8cd8b1af8e443c442be9559c3a19", "html_url": "https://github.com/rust-lang/rust/commit/61cfe92a992f8cd8b1af8e443c442be9559c3a19", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/61cfe92a992f8cd8b1af8e443c442be9559c3a19/comments", "author": {"login": "Aaron1011", "id": 1408859, "node_id": "MDQ6VXNlcjE0MDg4NTk=", "avatar_url": "https://avatars.githubusercontent.com/u/1408859?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Aaron1011", "html_url": "https://github.com/Aaron1011", "followers_url": "https://api.github.com/users/Aaron1011/followers", "following_url": "https://api.github.com/users/Aaron1011/following{/other_user}", "gists_url": "https://api.github.com/users/Aaron1011/gists{/gist_id}", "starred_url": "https://api.github.com/users/Aaron1011/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Aaron1011/subscriptions", "organizations_url": "https://api.github.com/users/Aaron1011/orgs", "repos_url": "https://api.github.com/users/Aaron1011/repos", "events_url": "https://api.github.com/users/Aaron1011/events{/privacy}", "received_events_url": "https://api.github.com/users/Aaron1011/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Aaron1011", "id": 1408859, "node_id": "MDQ6VXNlcjE0MDg4NTk=", "avatar_url": "https://avatars.githubusercontent.com/u/1408859?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Aaron1011", "html_url": "https://github.com/Aaron1011", "followers_url": "https://api.github.com/users/Aaron1011/followers", "following_url": "https://api.github.com/users/Aaron1011/following{/other_user}", "gists_url": "https://api.github.com/users/Aaron1011/gists{/gist_id}", "starred_url": "https://api.github.com/users/Aaron1011/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Aaron1011/subscriptions", "organizations_url": "https://api.github.com/users/Aaron1011/orgs", "repos_url": "https://api.github.com/users/Aaron1011/repos", "events_url": "https://api.github.com/users/Aaron1011/events{/privacy}", "received_events_url": "https://api.github.com/users/Aaron1011/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "33e1dd78646e712e7fe159e903fff58bd1734418", "url": "https://api.github.com/repos/rust-lang/rust/commits/33e1dd78646e712e7fe159e903fff58bd1734418", "html_url": "https://github.com/rust-lang/rust/commit/33e1dd78646e712e7fe159e903fff58bd1734418"}], "stats": {"total": 71, "additions": 71, "deletions": 0}, "files": [{"sha": "c767578120883a01d34bb99957329727a95faba9", "filename": "src/test/ui/impl-trait/auto-trait.rs", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/61cfe92a992f8cd8b1af8e443c442be9559c3a19/src%2Ftest%2Fui%2Fimpl-trait%2Fauto-trait.rs", "raw_url": "https://github.com/rust-lang/rust/raw/61cfe92a992f8cd8b1af8e443c442be9559c3a19/src%2Ftest%2Fui%2Fimpl-trait%2Fauto-trait.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimpl-trait%2Fauto-trait.rs?ref=61cfe92a992f8cd8b1af8e443c442be9559c3a19", "patch": "@@ -0,0 +1,23 @@\n+// Tests that type alias impls traits do not leak auto-traits for\n+// the purposes of coherence checking\n+#![feature(type_alias_impl_trait)]\n+\n+trait OpaqueTrait { }\n+impl<T> OpaqueTrait for T { }\n+type OpaqueType = impl OpaqueTrait;\n+fn mk_opaque() -> OpaqueType { () }\n+\n+#[derive(Debug)]\n+struct D<T>(T);\n+\n+trait AnotherTrait { }\n+impl<T: Send> AnotherTrait for T { }\n+\n+// This is in error, because we cannot assume that `OpaqueType: !Send`.\n+// (We treat opaque types as \"foreign types\" that could grow more impls\n+// in the future.)\n+impl AnotherTrait for D<OpaqueType> {\n+    //~^ ERROR conflicting implementations of trait `AnotherTrait` for type `D<OpaqueType>`\n+}\n+\n+fn main() {}"}, {"sha": "5e72ca7a47ba1d82538efd9c17fece77a3000748", "filename": "src/test/ui/impl-trait/auto-trait.stderr", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/61cfe92a992f8cd8b1af8e443c442be9559c3a19/src%2Ftest%2Fui%2Fimpl-trait%2Fauto-trait.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/61cfe92a992f8cd8b1af8e443c442be9559c3a19/src%2Ftest%2Fui%2Fimpl-trait%2Fauto-trait.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimpl-trait%2Fauto-trait.stderr?ref=61cfe92a992f8cd8b1af8e443c442be9559c3a19", "patch": "@@ -0,0 +1,12 @@\n+error[E0119]: conflicting implementations of trait `AnotherTrait` for type `D<OpaqueType>`:\n+  --> $DIR/auto-trait.rs:19:1\n+   |\n+LL | impl<T: Send> AnotherTrait for T { }\n+   | -------------------------------- first implementation here\n+...\n+LL | impl AnotherTrait for D<OpaqueType> {\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ conflicting implementation for `D<OpaqueType>`\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0119`."}, {"sha": "4977f9bdbacd9a34fa72f9ad0414157c6dd4e504", "filename": "src/test/ui/impl-trait/negative-reasoning.rs", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/61cfe92a992f8cd8b1af8e443c442be9559c3a19/src%2Ftest%2Fui%2Fimpl-trait%2Fnegative-reasoning.rs", "raw_url": "https://github.com/rust-lang/rust/raw/61cfe92a992f8cd8b1af8e443c442be9559c3a19/src%2Ftest%2Fui%2Fimpl-trait%2Fnegative-reasoning.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimpl-trait%2Fnegative-reasoning.rs?ref=61cfe92a992f8cd8b1af8e443c442be9559c3a19", "patch": "@@ -0,0 +1,22 @@\n+// Tests that we cannot assume that an opaque type does *not* implement some\n+// other trait\n+#![feature(type_alias_impl_trait)]\n+\n+trait OpaqueTrait { }\n+impl<T> OpaqueTrait for T { }\n+type OpaqueType = impl OpaqueTrait;\n+fn mk_opaque() -> OpaqueType { () }\n+\n+#[derive(Debug)]\n+struct D<T>(T);\n+\n+trait AnotherTrait { }\n+impl<T: std::fmt::Debug> AnotherTrait for T { }\n+\n+\n+// This is in error, because we cannot assume that `OpaqueType: !Debug`\n+impl AnotherTrait for D<OpaqueType> {\n+    //~^ ERROR conflicting implementations of trait `AnotherTrait` for type `D<OpaqueType>`\n+}\n+\n+fn main() {}"}, {"sha": "526a664726ac26fa6da82b4b18b384f81be7b898", "filename": "src/test/ui/impl-trait/negative-reasoning.stderr", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/61cfe92a992f8cd8b1af8e443c442be9559c3a19/src%2Ftest%2Fui%2Fimpl-trait%2Fnegative-reasoning.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/61cfe92a992f8cd8b1af8e443c442be9559c3a19/src%2Ftest%2Fui%2Fimpl-trait%2Fnegative-reasoning.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimpl-trait%2Fnegative-reasoning.stderr?ref=61cfe92a992f8cd8b1af8e443c442be9559c3a19", "patch": "@@ -0,0 +1,14 @@\n+error[E0119]: conflicting implementations of trait `AnotherTrait` for type `D<OpaqueType>`:\n+  --> $DIR/negative-reasoning.rs:18:1\n+   |\n+LL | impl<T: std::fmt::Debug> AnotherTrait for T { }\n+   | ------------------------------------------- first implementation here\n+...\n+LL | impl AnotherTrait for D<OpaqueType> {\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ conflicting implementation for `D<OpaqueType>`\n+   |\n+   = note: upstream crates may add a new impl of trait `std::fmt::Debug` for type `OpaqueType` in future versions\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0119`."}]}