{"sha": "7c4611c7e170a7eb6a642f9267b95a14f0cd54de", "node_id": "C_kwDOAAsO6NoAKDdjNDYxMWM3ZTE3MGE3ZWI2YTY0MmY5MjY3Yjk1YTE0ZjBjZDU0ZGU", "commit": {"author": {"name": "koka", "email": "koka.code@gmail.com", "date": "2022-11-15T03:58:17Z"}, "committer": {"name": "koka", "email": "koka.code@gmail.com", "date": "2022-11-15T03:58:17Z"}, "message": "Allow return types for closures with lifetime binder", "tree": {"sha": "163dc192fcd344da169c4f9959e3e35db2b0f7ba", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/163dc192fcd344da169c4f9959e3e35db2b0f7ba"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7c4611c7e170a7eb6a642f9267b95a14f0cd54de", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niHUEABYIAB0WIQTeiB5r8ReBHCJcHiKlkXpAaXd0zQUCY3MOsAAKCRClkXpAaXd0\nzQJHAQCg7jSHWewxIvTOwkr4wdJJJ8dvztGY+/DKO7dultlGJgD/cRaOl9KtweTM\nZ1meBYSC6yud+WcNI/yHkd0tVMnWEg8=\n=xfhY\n-----END PGP SIGNATURE-----", "payload": "tree 163dc192fcd344da169c4f9959e3e35db2b0f7ba\nparent 3c7f74de0b6b6a23f9a057b9d27990b05a20929e\nauthor koka <koka.code@gmail.com> 1668484697 +0900\ncommitter koka <koka.code@gmail.com> 1668484697 +0900\n\nAllow return types for closures with lifetime binder\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7c4611c7e170a7eb6a642f9267b95a14f0cd54de", "html_url": "https://github.com/rust-lang/rust/commit/7c4611c7e170a7eb6a642f9267b95a14f0cd54de", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7c4611c7e170a7eb6a642f9267b95a14f0cd54de/comments", "author": {"login": "koka831", "id": 14945055, "node_id": "MDQ6VXNlcjE0OTQ1MDU1", "avatar_url": "https://avatars.githubusercontent.com/u/14945055?v=4", "gravatar_id": "", "url": "https://api.github.com/users/koka831", "html_url": "https://github.com/koka831", "followers_url": "https://api.github.com/users/koka831/followers", "following_url": "https://api.github.com/users/koka831/following{/other_user}", "gists_url": "https://api.github.com/users/koka831/gists{/gist_id}", "starred_url": "https://api.github.com/users/koka831/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/koka831/subscriptions", "organizations_url": "https://api.github.com/users/koka831/orgs", "repos_url": "https://api.github.com/users/koka831/repos", "events_url": "https://api.github.com/users/koka831/events{/privacy}", "received_events_url": "https://api.github.com/users/koka831/received_events", "type": "User", "site_admin": false}, "committer": {"login": "koka831", "id": 14945055, "node_id": "MDQ6VXNlcjE0OTQ1MDU1", "avatar_url": "https://avatars.githubusercontent.com/u/14945055?v=4", "gravatar_id": "", "url": "https://api.github.com/users/koka831", "html_url": "https://github.com/koka831", "followers_url": "https://api.github.com/users/koka831/followers", "following_url": "https://api.github.com/users/koka831/following{/other_user}", "gists_url": "https://api.github.com/users/koka831/gists{/gist_id}", "starred_url": "https://api.github.com/users/koka831/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/koka831/subscriptions", "organizations_url": "https://api.github.com/users/koka831/orgs", "repos_url": "https://api.github.com/users/koka831/repos", "events_url": "https://api.github.com/users/koka831/events{/privacy}", "received_events_url": "https://api.github.com/users/koka831/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3c7f74de0b6b6a23f9a057b9d27990b05a20929e", "url": "https://api.github.com/repos/rust-lang/rust/commits/3c7f74de0b6b6a23f9a057b9d27990b05a20929e", "html_url": "https://github.com/rust-lang/rust/commit/3c7f74de0b6b6a23f9a057b9d27990b05a20929e"}], "stats": {"total": 62, "additions": 40, "deletions": 22}, "files": [{"sha": "cad8da18c2fbc5c80f14a259600f019ee8226963", "filename": "clippy_lints/src/unused_unit.rs", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/7c4611c7e170a7eb6a642f9267b95a14f0cd54de/clippy_lints%2Fsrc%2Funused_unit.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7c4611c7e170a7eb6a642f9267b95a14f0cd54de/clippy_lints%2Fsrc%2Funused_unit.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Funused_unit.rs?ref=7c4611c7e170a7eb6a642f9267b95a14f0cd54de", "patch": "@@ -1,8 +1,7 @@\n use clippy_utils::diagnostics::span_lint_and_sugg;\n use clippy_utils::source::{position_before_rarrow, snippet_opt};\n use if_chain::if_chain;\n-use rustc_ast::ast;\n-use rustc_ast::visit::FnKind;\n+use rustc_ast::{ast, visit::FnKind, ClosureBinder};\n use rustc_errors::Applicability;\n use rustc_lint::{EarlyContext, EarlyLintPass};\n use rustc_session::{declare_lint_pass, declare_tool_lint};\n@@ -43,6 +42,11 @@ impl EarlyLintPass for UnusedUnit {\n             if let ast::TyKind::Tup(ref vals) = ty.kind;\n             if vals.is_empty() && !ty.span.from_expansion() && get_def(span) == get_def(ty.span);\n             then {\n+                // implicit types in closure signatures are forbidden when `for<...>` is present\n+                if let FnKind::Closure(&ClosureBinder::For { .. }, ..) = kind {\n+                    return;\n+                }\n+\n                 lint_unneeded_unit_return(cx, ty, span);\n             }\n         }"}, {"sha": "3dd640b86f0b38992d49a132b1a6fa069816053d", "filename": "tests/ui/unused_unit.fixed", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/7c4611c7e170a7eb6a642f9267b95a14f0cd54de/tests%2Fui%2Funused_unit.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/7c4611c7e170a7eb6a642f9267b95a14f0cd54de/tests%2Fui%2Funused_unit.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Funused_unit.fixed?ref=7c4611c7e170a7eb6a642f9267b95a14f0cd54de", "patch": "@@ -7,6 +7,7 @@\n // test of the JSON error format.\n \n #![feature(custom_inner_attributes)]\n+#![feature(closure_lifetime_binder)]\n #![rustfmt::skip]\n \n #![deny(clippy::unused_unit)]\n@@ -87,3 +88,9 @@ fn macro_expr() {\n     }\n     e!()\n }\n+\n+mod issue9748 {\n+    fn main() {\n+        let _ = for<'a> |_: &'a u32| -> () {};\n+    }\n+}"}, {"sha": "bddecf06fb76d9add6ede29d4fbdc1fde8e6e777", "filename": "tests/ui/unused_unit.rs", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/7c4611c7e170a7eb6a642f9267b95a14f0cd54de/tests%2Fui%2Funused_unit.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7c4611c7e170a7eb6a642f9267b95a14f0cd54de/tests%2Fui%2Funused_unit.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Funused_unit.rs?ref=7c4611c7e170a7eb6a642f9267b95a14f0cd54de", "patch": "@@ -7,6 +7,7 @@\n // test of the JSON error format.\n \n #![feature(custom_inner_attributes)]\n+#![feature(closure_lifetime_binder)]\n #![rustfmt::skip]\n \n #![deny(clippy::unused_unit)]\n@@ -87,3 +88,9 @@ fn macro_expr() {\n     }\n     e!()\n }\n+\n+mod issue9748 {\n+    fn main() {\n+        let _ = for<'a> |_: &'a u32| -> () {};\n+    }\n+}"}, {"sha": "ce06738cfe473fe49f2c5b3f38868c5662dfd906", "filename": "tests/ui/unused_unit.stderr", "status": "modified", "additions": 20, "deletions": 20, "changes": 40, "blob_url": "https://github.com/rust-lang/rust/blob/7c4611c7e170a7eb6a642f9267b95a14f0cd54de/tests%2Fui%2Funused_unit.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7c4611c7e170a7eb6a642f9267b95a14f0cd54de/tests%2Fui%2Funused_unit.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Funused_unit.stderr?ref=7c4611c7e170a7eb6a642f9267b95a14f0cd54de", "patch": "@@ -1,119 +1,119 @@\n error: unneeded unit return type\n-  --> $DIR/unused_unit.rs:19:58\n+  --> $DIR/unused_unit.rs:20:58\n    |\n LL |     pub fn get_unit<F: Fn() -> (), G>(&self, f: F, _g: G) -> ()\n    |                                                          ^^^^^^ help: remove the `-> ()`\n    |\n note: the lint level is defined here\n-  --> $DIR/unused_unit.rs:12:9\n+  --> $DIR/unused_unit.rs:13:9\n    |\n LL | #![deny(clippy::unused_unit)]\n    |         ^^^^^^^^^^^^^^^^^^^\n \n error: unneeded unit return type\n-  --> $DIR/unused_unit.rs:19:28\n+  --> $DIR/unused_unit.rs:20:28\n    |\n LL |     pub fn get_unit<F: Fn() -> (), G>(&self, f: F, _g: G) -> ()\n    |                            ^^^^^^ help: remove the `-> ()`\n \n error: unneeded unit return type\n-  --> $DIR/unused_unit.rs:20:18\n+  --> $DIR/unused_unit.rs:21:18\n    |\n LL |     where G: Fn() -> () {\n    |                  ^^^^^^ help: remove the `-> ()`\n \n error: unneeded unit return type\n-  --> $DIR/unused_unit.rs:21:26\n+  --> $DIR/unused_unit.rs:22:26\n    |\n LL |         let _y: &dyn Fn() -> () = &f;\n    |                          ^^^^^^ help: remove the `-> ()`\n \n error: unneeded unit return type\n-  --> $DIR/unused_unit.rs:28:18\n+  --> $DIR/unused_unit.rs:29:18\n    |\n LL |     fn into(self) -> () {\n    |                  ^^^^^^ help: remove the `-> ()`\n \n error: unneeded unit expression\n-  --> $DIR/unused_unit.rs:29:9\n+  --> $DIR/unused_unit.rs:30:9\n    |\n LL |         ()\n    |         ^^ help: remove the final `()`\n \n error: unneeded unit return type\n-  --> $DIR/unused_unit.rs:34:29\n+  --> $DIR/unused_unit.rs:35:29\n    |\n LL |     fn redundant<F: FnOnce() -> (), G, H>(&self, _f: F, _g: G, _h: H)\n    |                             ^^^^^^ help: remove the `-> ()`\n \n error: unneeded unit return type\n-  --> $DIR/unused_unit.rs:36:19\n+  --> $DIR/unused_unit.rs:37:19\n    |\n LL |         G: FnMut() -> (),\n    |                   ^^^^^^ help: remove the `-> ()`\n \n error: unneeded unit return type\n-  --> $DIR/unused_unit.rs:37:16\n+  --> $DIR/unused_unit.rs:38:16\n    |\n LL |         H: Fn() -> ();\n    |                ^^^^^^ help: remove the `-> ()`\n \n error: unneeded unit return type\n-  --> $DIR/unused_unit.rs:41:29\n+  --> $DIR/unused_unit.rs:42:29\n    |\n LL |     fn redundant<F: FnOnce() -> (), G, H>(&self, _f: F, _g: G, _h: H)\n    |                             ^^^^^^ help: remove the `-> ()`\n \n error: unneeded unit return type\n-  --> $DIR/unused_unit.rs:43:19\n+  --> $DIR/unused_unit.rs:44:19\n    |\n LL |         G: FnMut() -> (),\n    |                   ^^^^^^ help: remove the `-> ()`\n \n error: unneeded unit return type\n-  --> $DIR/unused_unit.rs:44:16\n+  --> $DIR/unused_unit.rs:45:16\n    |\n LL |         H: Fn() -> () {}\n    |                ^^^^^^ help: remove the `-> ()`\n \n error: unneeded unit return type\n-  --> $DIR/unused_unit.rs:47:17\n+  --> $DIR/unused_unit.rs:48:17\n    |\n LL | fn return_unit() -> () { () }\n    |                 ^^^^^^ help: remove the `-> ()`\n \n error: unneeded unit expression\n-  --> $DIR/unused_unit.rs:47:26\n+  --> $DIR/unused_unit.rs:48:26\n    |\n LL | fn return_unit() -> () { () }\n    |                          ^^ help: remove the final `()`\n \n error: unneeded `()`\n-  --> $DIR/unused_unit.rs:57:14\n+  --> $DIR/unused_unit.rs:58:14\n    |\n LL |         break();\n    |              ^^ help: remove the `()`\n \n error: unneeded `()`\n-  --> $DIR/unused_unit.rs:59:11\n+  --> $DIR/unused_unit.rs:60:11\n    |\n LL |     return();\n    |           ^^ help: remove the `()`\n \n error: unneeded unit return type\n-  --> $DIR/unused_unit.rs:76:10\n+  --> $DIR/unused_unit.rs:77:10\n    |\n LL | fn test()->(){}\n    |          ^^^^ help: remove the `-> ()`\n \n error: unneeded unit return type\n-  --> $DIR/unused_unit.rs:79:11\n+  --> $DIR/unused_unit.rs:80:11\n    |\n LL | fn test2() ->(){}\n    |           ^^^^^ help: remove the `-> ()`\n \n error: unneeded unit return type\n-  --> $DIR/unused_unit.rs:82:11\n+  --> $DIR/unused_unit.rs:83:11\n    |\n LL | fn test3()-> (){}\n    |           ^^^^^ help: remove the `-> ()`"}]}