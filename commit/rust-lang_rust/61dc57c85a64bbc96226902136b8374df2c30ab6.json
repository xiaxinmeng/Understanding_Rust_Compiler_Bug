{"sha": "61dc57c85a64bbc96226902136b8374df2c30ab6", "node_id": "MDY6Q29tbWl0NzI0NzEyOjYxZGM1N2M4NWE2NGJiYzk2MjI2OTAyMTM2YjgzNzRkZjJjMzBhYjY=", "commit": {"author": {"name": "Jonas Schievink", "email": "jonasschievink@gmail.com", "date": "2020-09-25T17:42:44Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-09-25T17:42:44Z"}, "message": "Rollup merge of #77126 - Mark-Simulacrum:llvm-less-often, r=alexcrichton\n\nInvalidate local LLVM cache less often\n\nThis avoids a download of LLVM after every rebase. The downside to this is that if we land some patch affecting LLVM built in CI that breaks this option, but that PR does not update the LLVM submodule, we'll likely not notice until the next update -- but this seems unlikely to happen in practice and I am not personally worried about it.\n\nr? @alexcrichton", "tree": {"sha": "81ae1c3e5c130aaea6f37e9936ab475238b0cd28", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/81ae1c3e5c130aaea6f37e9936ab475238b0cd28"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/61dc57c85a64bbc96226902136b8374df2c30ab6", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJfbiwVCRBK7hj4Ov3rIwAAdHIIAE3DOKJRpiluCx93d1LJ1/Q8\nGDne0zq/W8ziTfhCcmy/a8Vymr3eALgdZCACAzPOyJxGqT9SSFmvXPHQkRoDJp+m\nGzVW+9CBI4wCjFuXonKCrmU5Q1nlorqpqk/JHfsQYbHt2eKEbIuoA0HwdmdBHL/p\nkNZFRFRReCHdoA7jBr5+zzzV8WyCJP+ag73zy+z24EBb3TfcPn4nmdx7BNJKFeTr\n2Ore2wQDUKeoQWm7GwuoSYuehU4aBAP8AHRdOTirsnHIcammHl13IW2Zh026gYz8\nCi0iQGMHUwVvYZL/l9D7mK+cJerQCB9FLKBbA6I+/Y465nUHms+gp74OLWXHdr4=\n=fONP\n-----END PGP SIGNATURE-----\n", "payload": "tree 81ae1c3e5c130aaea6f37e9936ab475238b0cd28\nparent 0a3cf02fd7c1d3c52ba2c4cd8d955e3fb091f651\nparent ef95430b9bb42fefa0a5e885525525bb52d9cb00\nauthor Jonas Schievink <jonasschievink@gmail.com> 1601055764 +0200\ncommitter GitHub <noreply@github.com> 1601055764 +0200\n\nRollup merge of #77126 - Mark-Simulacrum:llvm-less-often, r=alexcrichton\n\nInvalidate local LLVM cache less often\n\nThis avoids a download of LLVM after every rebase. The downside to this is that if we land some patch affecting LLVM built in CI that breaks this option, but that PR does not update the LLVM submodule, we'll likely not notice until the next update -- but this seems unlikely to happen in practice and I am not personally worried about it.\n\nr? @alexcrichton\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/61dc57c85a64bbc96226902136b8374df2c30ab6", "html_url": "https://github.com/rust-lang/rust/commit/61dc57c85a64bbc96226902136b8374df2c30ab6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/61dc57c85a64bbc96226902136b8374df2c30ab6/comments", "author": {"login": "jonas-schievink", "id": 1786438, "node_id": "MDQ6VXNlcjE3ODY0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1786438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonas-schievink", "html_url": "https://github.com/jonas-schievink", "followers_url": "https://api.github.com/users/jonas-schievink/followers", "following_url": "https://api.github.com/users/jonas-schievink/following{/other_user}", "gists_url": "https://api.github.com/users/jonas-schievink/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonas-schievink/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonas-schievink/subscriptions", "organizations_url": "https://api.github.com/users/jonas-schievink/orgs", "repos_url": "https://api.github.com/users/jonas-schievink/repos", "events_url": "https://api.github.com/users/jonas-schievink/events{/privacy}", "received_events_url": "https://api.github.com/users/jonas-schievink/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0a3cf02fd7c1d3c52ba2c4cd8d955e3fb091f651", "url": "https://api.github.com/repos/rust-lang/rust/commits/0a3cf02fd7c1d3c52ba2c4cd8d955e3fb091f651", "html_url": "https://github.com/rust-lang/rust/commit/0a3cf02fd7c1d3c52ba2c4cd8d955e3fb091f651"}, {"sha": "ef95430b9bb42fefa0a5e885525525bb52d9cb00", "url": "https://api.github.com/repos/rust-lang/rust/commits/ef95430b9bb42fefa0a5e885525525bb52d9cb00", "html_url": "https://github.com/rust-lang/rust/commit/ef95430b9bb42fefa0a5e885525525bb52d9cb00"}], "stats": {"total": 21, "additions": 16, "deletions": 5}, "files": [{"sha": "c5efb8ed5e51cef43075490a418ec6ab7047bb57", "filename": "config.toml.example", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/61dc57c85a64bbc96226902136b8374df2c30ab6/config.toml.example", "raw_url": "https://github.com/rust-lang/rust/raw/61dc57c85a64bbc96226902136b8374df2c30ab6/config.toml.example", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/config.toml.example?ref=61dc57c85a64bbc96226902136b8374df2c30ab6", "patch": "@@ -36,8 +36,8 @@ changelog-seen = 1\n # toolchain or changing LLVM locally, you probably want to set this to true.\n #\n # It's currently false by default due to being newly added; please file bugs if\n-# enabling this did not work for you on Linux (macOS and Windows support is\n-# coming soon).\n+# enabling this did not work for you on x86_64-unknown-linux-gnu.\n+# Other target triples are currently not supported; see #77084.\n #\n # We also currently only support this when building LLVM for the build triple.\n #\n@@ -380,7 +380,7 @@ changelog-seen = 1\n \n # Whether or not to leave debug! and trace! calls in the rust binary.\n # Overrides the `debug-assertions` option, if defined.\n-# \n+#\n # Defaults to rust.debug-assertions value\n #debug-logging = debug-assertions\n "}, {"sha": "5c9184f450687c74a387e3dea13154f000069d81", "filename": "src/bootstrap/bootstrap.py", "status": "modified", "additions": 13, "deletions": 2, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/61dc57c85a64bbc96226902136b8374df2c30ab6/src%2Fbootstrap%2Fbootstrap.py", "raw_url": "https://github.com/rust-lang/rust/raw/61dc57c85a64bbc96226902136b8374df2c30ab6/src%2Fbootstrap%2Fbootstrap.py", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fbootstrap.py?ref=61dc57c85a64bbc96226902136b8374df2c30ab6", "patch": "@@ -424,8 +424,19 @@ def download_stage0(self):\n                     rustfmt_stamp.write(self.date + self.rustfmt_channel)\n \n         if self.downloading_llvm():\n-            llvm_sha = subprocess.check_output([\"git\", \"log\", \"--author=bors\",\n-                \"--format=%H\", \"-n1\"]).decode(sys.getdefaultencoding()).strip()\n+            # We want the most recent LLVM submodule update to avoid downloading\n+            # LLVM more often than necessary.\n+            #\n+            # This git command finds that commit SHA, looking for bors-authored\n+            # merges that modified src/llvm-project.\n+            #\n+            # This works even in a repository that has not yet initialized\n+            # submodules.\n+            llvm_sha = subprocess.check_output([\n+                \"git\", \"log\", \"--author=bors\", \"--format=%H\", \"-n1\",\n+                \"-m\", \"--first-parent\",\n+                \"--\", \"src/llvm-project\"\n+            ]).decode(sys.getdefaultencoding()).strip()\n             llvm_assertions = self.get_toml('assertions', 'llvm') == 'true'\n             if self.program_out_of_date(self.llvm_stamp(), llvm_sha + str(llvm_assertions)):\n                 self._download_ci_llvm(llvm_sha, llvm_assertions)"}]}