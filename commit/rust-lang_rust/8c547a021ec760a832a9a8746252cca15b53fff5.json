{"sha": "8c547a021ec760a832a9a8746252cca15b53fff5", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhjNTQ3YTAyMWVjNzYwYTgzMmE5YTg3NDYyNTJjY2ExNWI1M2ZmZjU=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2016-12-31T04:44:52Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2016-12-31T04:44:52Z"}, "message": "Auto merge of #38729 - alexcrichton:android-steps, r=brson\n\nrustbuild: Add more deps on android-copy-libs\n\nThe android-copy-libs step is crucial for running tests on the Android target as\nit copies necessary scripts and such to the emulator. We must run that before\nrunning any tests there, but we erroneously only did it for compiletest test\nsuites!", "tree": {"sha": "b178b6379354cc8972698e7b2c574ae589e475c3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b178b6379354cc8972698e7b2c574ae589e475c3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8c547a021ec760a832a9a8746252cca15b53fff5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8c547a021ec760a832a9a8746252cca15b53fff5", "html_url": "https://github.com/rust-lang/rust/commit/8c547a021ec760a832a9a8746252cca15b53fff5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8c547a021ec760a832a9a8746252cca15b53fff5/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b68d3293e34fd2be7f61881a2e0733bbbce97619", "url": "https://api.github.com/repos/rust-lang/rust/commits/b68d3293e34fd2be7f61881a2e0733bbbce97619", "html_url": "https://github.com/rust-lang/rust/commit/b68d3293e34fd2be7f61881a2e0733bbbce97619"}, {"sha": "cf8fde1441c7e9eee252d2c584cf7e3807016249", "url": "https://api.github.com/repos/rust-lang/rust/commits/cf8fde1441c7e9eee252d2c584cf7e3807016249", "html_url": "https://github.com/rust-lang/rust/commit/cf8fde1441c7e9eee252d2c584cf7e3807016249"}], "stats": {"total": 21, "additions": 14, "deletions": 7}, "files": [{"sha": "9b576a590a9d5404c92689c448e1a775e267b128", "filename": "src/bootstrap/check.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/8c547a021ec760a832a9a8746252cca15b53fff5/src%2Fbootstrap%2Fcheck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8c547a021ec760a832a9a8746252cca15b53fff5/src%2Fbootstrap%2Fcheck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fcheck.rs?ref=8c547a021ec760a832a9a8746252cca15b53fff5", "patch": "@@ -507,6 +507,10 @@ fn find_tests(dir: &Path,\n pub fn android_copy_libs(build: &Build,\n                          compiler: &Compiler,\n                          target: &str) {\n+    if !target.contains(\"android\") {\n+        return\n+    }\n+\n     println!(\"Android copy libs to emulator ({})\", target);\n     build.run(Command::new(\"adb\").arg(\"remount\"));\n     build.run(Command::new(\"adb\").args(&[\"shell\", \"rm\", \"-r\", ADB_TEST_DIR]));"}, {"sha": "8f7ad465c24af61473accb058021a43f4ab2e557", "filename": "src/bootstrap/step.rs", "status": "modified", "additions": 10, "deletions": 7, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/8c547a021ec760a832a9a8746252cca15b53fff5/src%2Fbootstrap%2Fstep.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8c547a021ec760a832a9a8746252cca15b53fff5/src%2Fbootstrap%2Fstep.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fstep.rs?ref=8c547a021ec760a832a9a8746252cca15b53fff5", "patch": "@@ -295,13 +295,7 @@ pub fn build_rules<'a>(build: &'a Build) -> Rules {\n                  .dep(|s| s.name(\"libtest\"))\n                  .dep(|s| s.name(\"tool-compiletest\").target(s.host))\n                  .dep(|s| s.name(\"test-helpers\"))\n-                 .dep(move |s| {\n-                     if s.target.contains(\"android\") {\n-                         s.name(\"android-copy-libs\")\n-                     } else {\n-                         Step::noop()\n-                     }\n-                 })\n+                 .dep(|s| s.name(\"android-copy-libs\"))\n                  .default(mode != \"pretty\") // pretty tests don't run everywhere\n                  .run(move |s| {\n                      check::compiletest(build, &s.compiler(), s.target, mode, dir)\n@@ -343,6 +337,7 @@ pub fn build_rules<'a>(build: &'a Build) -> Rules {\n              .dep(|s| s.name(\"tool-compiletest\").target(s.host))\n              .dep(|s| s.name(\"test-helpers\"))\n              .dep(|s| s.name(\"debugger-scripts\"))\n+             .dep(|s| s.name(\"android-copy-libs\"))\n              .run(move |s| check::compiletest(build, &s.compiler(), s.target,\n                                          \"debuginfo-gdb\", \"debuginfo\"));\n     }\n@@ -386,12 +381,14 @@ pub fn build_rules<'a>(build: &'a Build) -> Rules {\n     for (krate, path, _default) in krates(\"std_shim\") {\n         rules.test(&krate.test_step, path)\n              .dep(|s| s.name(\"libtest\"))\n+             .dep(|s| s.name(\"android-copy-libs\"))\n              .run(move |s| check::krate(build, &s.compiler(), s.target,\n                                         Mode::Libstd, TestKind::Test,\n                                         Some(&krate.name)));\n     }\n     rules.test(\"check-std-all\", \"path/to/nowhere\")\n          .dep(|s| s.name(\"libtest\"))\n+         .dep(|s| s.name(\"android-copy-libs\"))\n          .default(true)\n          .run(move |s| check::krate(build, &s.compiler(), s.target,\n                                     Mode::Libstd, TestKind::Test, None));\n@@ -400,38 +397,44 @@ pub fn build_rules<'a>(build: &'a Build) -> Rules {\n     for (krate, path, _default) in krates(\"std_shim\") {\n         rules.bench(&krate.bench_step, path)\n              .dep(|s| s.name(\"libtest\"))\n+             .dep(|s| s.name(\"android-copy-libs\"))\n              .run(move |s| check::krate(build, &s.compiler(), s.target,\n                                         Mode::Libstd, TestKind::Bench,\n                                         Some(&krate.name)));\n     }\n     rules.bench(\"bench-std-all\", \"path/to/nowhere\")\n          .dep(|s| s.name(\"libtest\"))\n+         .dep(|s| s.name(\"android-copy-libs\"))\n          .default(true)\n          .run(move |s| check::krate(build, &s.compiler(), s.target,\n                                     Mode::Libstd, TestKind::Bench, None));\n \n     for (krate, path, _default) in krates(\"test_shim\") {\n         rules.test(&krate.test_step, path)\n              .dep(|s| s.name(\"libtest\"))\n+             .dep(|s| s.name(\"android-copy-libs\"))\n              .run(move |s| check::krate(build, &s.compiler(), s.target,\n                                         Mode::Libtest, TestKind::Test,\n                                         Some(&krate.name)));\n     }\n     rules.test(\"check-test-all\", \"path/to/nowhere\")\n          .dep(|s| s.name(\"libtest\"))\n+         .dep(|s| s.name(\"android-copy-libs\"))\n          .default(true)\n          .run(move |s| check::krate(build, &s.compiler(), s.target,\n                                     Mode::Libtest, TestKind::Test, None));\n     for (krate, path, _default) in krates(\"rustc-main\") {\n         rules.test(&krate.test_step, path)\n              .dep(|s| s.name(\"librustc\"))\n+             .dep(|s| s.name(\"android-copy-libs\"))\n              .host(true)\n              .run(move |s| check::krate(build, &s.compiler(), s.target,\n                                         Mode::Librustc, TestKind::Test,\n                                         Some(&krate.name)));\n     }\n     rules.test(\"check-rustc-all\", \"path/to/nowhere\")\n          .dep(|s| s.name(\"librustc\"))\n+         .dep(|s| s.name(\"android-copy-libs\"))\n          .default(true)\n          .host(true)\n          .run(move |s| check::krate(build, &s.compiler(), s.target,"}]}