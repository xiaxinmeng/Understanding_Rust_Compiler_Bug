{"sha": "efedcb23447a805fad841c4e38d5dea0d53ec3c7", "node_id": "MDY6Q29tbWl0NzI0NzEyOmVmZWRjYjIzNDQ3YTgwNWZhZDg0MWM0ZTM4ZDVkZWEwZDUzZWMzYzc=", "commit": {"author": {"name": "Eduardo Pinho", "email": "enet4mikeenet@gmail.com", "date": "2020-10-23T11:13:07Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-10-23T11:13:07Z"}, "message": "Update description of Empty Enum for accuracy\n\nAn empty enum is similar to the never type `!`, rather than the unit type `()`.", "tree": {"sha": "e544a8b49512d0554bbfe9c0a342928960681b51", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e544a8b49512d0554bbfe9c0a342928960681b51"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/efedcb23447a805fad841c4e38d5dea0d53ec3c7", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJfkrrDCRBK7hj4Ov3rIwAAdHIIAI2syqkZINjAtdH5znJr54JJ\nsmCeE1geeXRrddURpiZ+iRPTfxoMmnbPtzDCW1rKAmH2pSaAsLM5tXVB1+ifIVnm\noKe8XMTfb6ytdgq5kYPD4cC5jHnWss1m7JGNcIrANnbfFYKq1a7r8lk03Ezf8v8h\ncazJozaZlqZuXEIec9ZO8yWTD5eXxKhaIzMoWiP6RSG/iCmd2oguxz/UemdSI6Pq\nEFfuQzX0CSQOCIU3dfr2oOIsZtRqCSjM5E9wrOhQyKDpigXlHmwIXjiP+gija+7Q\n3FeuV7pXuy+UIiNY12uyUb9UHSDViNlMZiYiAS5Yxa3/937OuSFiES+C5PW1Q0E=\n=ETum\n-----END PGP SIGNATURE-----\n", "payload": "tree e544a8b49512d0554bbfe9c0a342928960681b51\nparent a9cd294cf2775441e713c7ee2918b728733b99f5\nauthor Eduardo Pinho <enet4mikeenet@gmail.com> 1603451587 +0100\ncommitter GitHub <noreply@github.com> 1603451587 +0100\n\nUpdate description of Empty Enum for accuracy\n\nAn empty enum is similar to the never type `!`, rather than the unit type `()`."}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/efedcb23447a805fad841c4e38d5dea0d53ec3c7", "html_url": "https://github.com/rust-lang/rust/commit/efedcb23447a805fad841c4e38d5dea0d53ec3c7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/efedcb23447a805fad841c4e38d5dea0d53ec3c7/comments", "author": {"login": "Enet4", "id": 4738426, "node_id": "MDQ6VXNlcjQ3Mzg0MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/4738426?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Enet4", "html_url": "https://github.com/Enet4", "followers_url": "https://api.github.com/users/Enet4/followers", "following_url": "https://api.github.com/users/Enet4/following{/other_user}", "gists_url": "https://api.github.com/users/Enet4/gists{/gist_id}", "starred_url": "https://api.github.com/users/Enet4/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Enet4/subscriptions", "organizations_url": "https://api.github.com/users/Enet4/orgs", "repos_url": "https://api.github.com/users/Enet4/repos", "events_url": "https://api.github.com/users/Enet4/events{/privacy}", "received_events_url": "https://api.github.com/users/Enet4/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a9cd294cf2775441e713c7ee2918b728733b99f5", "url": "https://api.github.com/repos/rust-lang/rust/commits/a9cd294cf2775441e713c7ee2918b728733b99f5", "html_url": "https://github.com/rust-lang/rust/commit/a9cd294cf2775441e713c7ee2918b728733b99f5"}], "stats": {"total": 3, "additions": 2, "deletions": 1}, "files": [{"sha": "9b704ee9ecab2debb5908463fa576ddc0c0c6680", "filename": "library/std/src/keyword_docs.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/efedcb23447a805fad841c4e38d5dea0d53ec3c7/library%2Fstd%2Fsrc%2Fkeyword_docs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/efedcb23447a805fad841c4e38d5dea0d53ec3c7/library%2Fstd%2Fsrc%2Fkeyword_docs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fkeyword_docs.rs?ref=efedcb23447a805fad841c4e38d5dea0d53ec3c7", "patch": "@@ -346,14 +346,15 @@ mod else_keyword {}\n /// When data follows along with a variant, such as with rust's built-in [`Option`] type, the data\n /// is added as the type describes, for example `Option::Some(123)`. The same follows with\n /// struct-like variants, with things looking like `ComplexEnum::LotsOfThings { usual_struct_stuff:\n-/// true, blah: \"hello!\".to_string(), }`. Empty Enums are similar to () in that they cannot be\n+/// true, blah: \"hello!\".to_string(), }`. Empty Enums are similar to [`!`] in that they cannot be\n /// instantiated at all, and are used mainly to mess with the type system in interesting ways.\n ///\n /// For more information, take a look at the [Rust Book] or the [Reference]\n ///\n /// [ADT]: https://en.wikipedia.org/wiki/Algebraic_data_type\n /// [Rust Book]: ../book/ch06-01-defining-an-enum.html\n /// [Reference]: ../reference/items/enumerations.html\n+/// [`!`]: primitive.never.html\n mod enum_keyword {}\n \n #[doc(keyword = \"extern\")]"}]}