{"sha": "a71a49faa83631bc7e74a25ac65ac711b28799d9", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE3MWE0OWZhYTgzNjMxYmM3ZTc0YTI1YWM2NWFjNzExYjI4Nzk5ZDk=", "commit": {"author": {"name": "Michael Sullivan", "email": "sully@msully.net", "date": "2012-06-23T00:37:19Z"}, "committer": {"name": "Michael Sullivan", "email": "sully@msully.net", "date": "2012-06-26T02:29:27Z"}, "message": "Split deprecated str and vec warnings into two flags, enable old_vecs by default.", "tree": {"sha": "bb8df68f4501a97de86bd5124c616e94d9621fd2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bb8df68f4501a97de86bd5124c616e94d9621fd2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a71a49faa83631bc7e74a25ac65ac711b28799d9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a71a49faa83631bc7e74a25ac65ac711b28799d9", "html_url": "https://github.com/rust-lang/rust/commit/a71a49faa83631bc7e74a25ac65ac711b28799d9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a71a49faa83631bc7e74a25ac65ac711b28799d9/comments", "author": {"login": "msullivan", "id": 340349, "node_id": "MDQ6VXNlcjM0MDM0OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/340349?v=4", "gravatar_id": "", "url": "https://api.github.com/users/msullivan", "html_url": "https://github.com/msullivan", "followers_url": "https://api.github.com/users/msullivan/followers", "following_url": "https://api.github.com/users/msullivan/following{/other_user}", "gists_url": "https://api.github.com/users/msullivan/gists{/gist_id}", "starred_url": "https://api.github.com/users/msullivan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/msullivan/subscriptions", "organizations_url": "https://api.github.com/users/msullivan/orgs", "repos_url": "https://api.github.com/users/msullivan/repos", "events_url": "https://api.github.com/users/msullivan/events{/privacy}", "received_events_url": "https://api.github.com/users/msullivan/received_events", "type": "User", "site_admin": false}, "committer": {"login": "msullivan", "id": 340349, "node_id": "MDQ6VXNlcjM0MDM0OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/340349?v=4", "gravatar_id": "", "url": "https://api.github.com/users/msullivan", "html_url": "https://github.com/msullivan", "followers_url": "https://api.github.com/users/msullivan/followers", "following_url": "https://api.github.com/users/msullivan/following{/other_user}", "gists_url": "https://api.github.com/users/msullivan/gists{/gist_id}", "starred_url": "https://api.github.com/users/msullivan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/msullivan/subscriptions", "organizations_url": "https://api.github.com/users/msullivan/orgs", "repos_url": "https://api.github.com/users/msullivan/repos", "events_url": "https://api.github.com/users/msullivan/events{/privacy}", "received_events_url": "https://api.github.com/users/msullivan/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1c5e2cacefdf6cf5b2dc448fee9d3f68629ccc90", "url": "https://api.github.com/repos/rust-lang/rust/commits/1c5e2cacefdf6cf5b2dc448fee9d3f68629ccc90", "html_url": "https://github.com/rust-lang/rust/commit/1c5e2cacefdf6cf5b2dc448fee9d3f68629ccc90"}], "stats": {"total": 25, "additions": 18, "deletions": 7}, "files": [{"sha": "0561783f2f6e80c6a56634fc474f5b17b92902e2", "filename": "src/rustc/middle/lint.rs", "status": "modified", "additions": 18, "deletions": 7, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/a71a49faa83631bc7e74a25ac65ac711b28799d9/src%2Frustc%2Fmiddle%2Flint.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a71a49faa83631bc7e74a25ac65ac711b28799d9/src%2Frustc%2Fmiddle%2Flint.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustc%2Fmiddle%2Flint.rs?ref=a71a49faa83631bc7e74a25ac65ac711b28799d9", "patch": "@@ -47,6 +47,7 @@ enum lint {\n     non_implicitly_copyable_typarams,\n     vecs_not_implicitly_copyable,\n     implicit_copies,\n+    old_strs,\n }\n \n // This is pretty unfortunate. We really want some sort of \"deriving Enum\"\n@@ -62,6 +63,7 @@ fn int_to_lint(i: int) -> lint {\n       6 { non_implicitly_copyable_typarams }\n       7 { vecs_not_implicitly_copyable }\n       8 { implicit_copies }\n+      9 { old_strs }\n     }\n }\n \n@@ -103,7 +105,12 @@ fn get_lint_dict() -> lint_dict {\n \n         (\"old_vecs\",\n          @{lint: old_vecs,\n-           desc: \"old (deprecated) vectors and strings\",\n+           desc: \"old (deprecated) vectors\",\n+           default: warn}),\n+\n+        (\"old_strs\",\n+         @{lint: old_strs,\n+           desc: \"old (deprecated) strings\",\n            default: ignore}),\n \n         (\"unrecognized_warning\",\n@@ -419,13 +426,19 @@ fn check_item_old_vecs(cx: ty::ctxt, it: @ast::item) {\n \n         visit_expr:fn@(e: @ast::expr) {\n             alt e.node {\n-              ast::expr_vec(_, _) |\n-              ast::expr_lit(@{node: ast::lit_str(_), span:_})\n+              ast::expr_vec(_, _)\n               if ! uses_vstore.contains_key(e.id) {\n                 cx.sess.span_lint(\n                     old_vecs, e.id, it.id,\n-                    e.span, \"deprecated vec/str expr\");\n+                    e.span, \"deprecated vec expr\");\n               }\n+              ast::expr_lit(@{node: ast::lit_str(_), span:_})\n+              if ! uses_vstore.contains_key(e.id) {\n+                cx.sess.span_lint(\n+                    old_strs, e.id, it.id,\n+                    e.span, \"deprecated str expr\");\n+              }\n+\n               ast::expr_vstore(@inner, _) {\n                 uses_vstore.insert(inner.id, true);\n               }\n@@ -441,15 +454,13 @@ fn check_item_old_vecs(cx: ty::ctxt, it: @ast::item) {\n                     old_vecs, t.id, it.id,\n                     t.span, \"deprecated vec type\");\n               }\n-\n               ast::ty_path(@{span: _, global: _, idents: ids,\n                              rp: none, types: _}, _)\n               if ids == [@\"str\"] && (! uses_vstore.contains_key(t.id)) {\n                 cx.sess.span_lint(\n-                    old_vecs, t.id, it.id,\n+                    old_strs, t.id, it.id,\n                     t.span, \"deprecated str type\");\n               }\n-\n               ast::ty_vstore(inner, _) {\n                 uses_vstore.insert(inner.id, true);\n               }"}]}