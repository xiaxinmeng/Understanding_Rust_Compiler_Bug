{"sha": "cc09b1a08cc61dd3f485308adf3a5a252c718861", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNjMDliMWEwOGNjNjFkZDNmNDg1MzA4YWRmM2E1YTI1MmM3MTg4NjE=", "commit": {"author": {"name": "Eduard Burtescu", "email": "edy.burt@gmail.com", "date": "2015-07-27T15:11:43Z"}, "committer": {"name": "Eduard Burtescu", "email": "edy.burt@gmail.com", "date": "2015-07-27T15:11:43Z"}, "message": "Turn on `box(PLACE) expr` deprecation warning post-snapshot.", "tree": {"sha": "0e7971effb8281073ef571c30fb86b2f00bd7829", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0e7971effb8281073ef571c30fb86b2f00bd7829"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cc09b1a08cc61dd3f485308adf3a5a252c718861", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cc09b1a08cc61dd3f485308adf3a5a252c718861", "html_url": "https://github.com/rust-lang/rust/commit/cc09b1a08cc61dd3f485308adf3a5a252c718861", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cc09b1a08cc61dd3f485308adf3a5a252c718861/comments", "author": {"login": "eddyb", "id": 77424, "node_id": "MDQ6VXNlcjc3NDI0", "avatar_url": "https://avatars.githubusercontent.com/u/77424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eddyb", "html_url": "https://github.com/eddyb", "followers_url": "https://api.github.com/users/eddyb/followers", "following_url": "https://api.github.com/users/eddyb/following{/other_user}", "gists_url": "https://api.github.com/users/eddyb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eddyb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eddyb/subscriptions", "organizations_url": "https://api.github.com/users/eddyb/orgs", "repos_url": "https://api.github.com/users/eddyb/repos", "events_url": "https://api.github.com/users/eddyb/events{/privacy}", "received_events_url": "https://api.github.com/users/eddyb/received_events", "type": "User", "site_admin": false}, "committer": {"login": "eddyb", "id": 77424, "node_id": "MDQ6VXNlcjc3NDI0", "avatar_url": "https://avatars.githubusercontent.com/u/77424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eddyb", "html_url": "https://github.com/eddyb", "followers_url": "https://api.github.com/users/eddyb/followers", "following_url": "https://api.github.com/users/eddyb/following{/other_user}", "gists_url": "https://api.github.com/users/eddyb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eddyb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eddyb/subscriptions", "organizations_url": "https://api.github.com/users/eddyb/orgs", "repos_url": "https://api.github.com/users/eddyb/repos", "events_url": "https://api.github.com/users/eddyb/events{/privacy}", "received_events_url": "https://api.github.com/users/eddyb/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5720f7055ac13cf616eb3a9a0b187440b56817d5", "url": "https://api.github.com/repos/rust-lang/rust/commits/5720f7055ac13cf616eb3a9a0b187440b56817d5", "html_url": "https://github.com/rust-lang/rust/commit/5720f7055ac13cf616eb3a9a0b187440b56817d5"}], "stats": {"total": 33, "additions": 20, "deletions": 13}, "files": [{"sha": "a54b3420353ddd12bdaf2ff78d46441f93a668ea", "filename": "src/liballoc/boxed.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/cc09b1a08cc61dd3f485308adf3a5a252c718861/src%2Fliballoc%2Fboxed.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cc09b1a08cc61dd3f485308adf3a5a252c718861/src%2Fliballoc%2Fboxed.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Fboxed.rs?ref=cc09b1a08cc61dd3f485308adf3a5a252c718861", "patch": "@@ -297,7 +297,7 @@ impl<T: Clone> Clone for Box<T> {\n     /// let y = x.clone();\n     /// ```\n     #[inline]\n-    fn clone(&self) -> Box<T> { box (HEAP) {(**self).clone()} }\n+    fn clone(&self) -> Box<T> { box {(**self).clone()} }\n     /// Copies `source`'s contents into `self` without creating a new allocation.\n     ///\n     /// # Examples"}, {"sha": "80a10b2463f015d3f2c6c4b371f8d0af9c9099ec", "filename": "src/libsyntax/parse/parser.rs", "status": "modified", "additions": 7, "deletions": 11, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/cc09b1a08cc61dd3f485308adf3a5a252c718861/src%2Flibsyntax%2Fparse%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cc09b1a08cc61dd3f485308adf3a5a252c718861/src%2Flibsyntax%2Fparse%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fparser.rs?ref=cc09b1a08cc61dd3f485308adf3a5a252c718861", "patch": "@@ -2637,19 +2637,15 @@ impl<'a> Parser<'a> {\n             //\n             // ... but for now: check for a place: `box(PLACE) EXPR`.\n \n-            if try!(self.eat(&token::OpenDelim(token::Paren)) ){\n-                // SNAP d4432b3\n-                // Enable this warning after snapshot ...\n-                //\n-                // let box_span = mk_sp(lo, self.last_span.hi);\n-                // self.span_warn(\n-                //     box_span,\n-                //     \"deprecated syntax; use the `in` keyword now \\\n-                //            (e.g. change `box (<expr>) <expr>` to \\\n-                //                         `in <expr> { <expr> }`)\");\n+            if try!(self.eat(&token::OpenDelim(token::Paren))) {\n+                let box_span = mk_sp(lo, self.last_span.hi);\n+                self.span_warn(box_span,\n+                    \"deprecated syntax; use the `in` keyword now \\\n+                           (e.g. change `box (<expr>) <expr>` to \\\n+                                        `in <expr> { <expr> }`)\");\n \n                 // Continue supporting `box () EXPR` (temporarily)\n-                if !try!(self.eat(&token::CloseDelim(token::Paren)) ){\n+                if !try!(self.eat(&token::CloseDelim(token::Paren))) {\n                     let place = try!(self.parse_expr_nopanic());\n                     try!(self.expect(&token::CloseDelim(token::Paren)));\n                     // Give a suggestion to use `box()` when a parenthesised expression is used"}, {"sha": "a0a6e54e942b0a87a43d6ecd22fa96d6d34cc683", "filename": "src/test/compile-fail/borrowck-lend-flow-if.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/cc09b1a08cc61dd3f485308adf3a5a252c718861/src%2Ftest%2Fcompile-fail%2Fborrowck-lend-flow-if.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cc09b1a08cc61dd3f485308adf3a5a252c718861/src%2Ftest%2Fcompile-fail%2Fborrowck-lend-flow-if.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fborrowck-lend-flow-if.rs?ref=cc09b1a08cc61dd3f485308adf3a5a252c718861", "patch": "@@ -24,6 +24,7 @@ fn produce<T>() -> T { panic!(); }\n \n fn inc(v: &mut Box<isize>) {\n     *v = box() (**v + 1);\n+    //~^ WARN deprecated syntax\n }\n \n fn pre_freeze_cond() {"}, {"sha": "9356eeda60503f536b504d05af9553e069d1460d", "filename": "src/test/compile-fail/borrowck-lend-flow-loop.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/cc09b1a08cc61dd3f485308adf3a5a252c718861/src%2Ftest%2Fcompile-fail%2Fborrowck-lend-flow-loop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cc09b1a08cc61dd3f485308adf3a5a252c718861/src%2Ftest%2Fcompile-fail%2Fborrowck-lend-flow-loop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fborrowck-lend-flow-loop.rs?ref=cc09b1a08cc61dd3f485308adf3a5a252c718861", "patch": "@@ -23,6 +23,7 @@ fn produce<T>() -> T { panic!(); }\n \n fn inc(v: &mut Box<isize>) {\n     *v = box() (**v + 1);\n+    //~^ WARN deprecated syntax\n }\n \n fn loop_overarching_alias_mut() {"}, {"sha": "c3dcddf858724c3f020207ee8d149d175f409a09", "filename": "src/test/compile-fail/borrowck-lend-flow.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/cc09b1a08cc61dd3f485308adf3a5a252c718861/src%2Ftest%2Fcompile-fail%2Fborrowck-lend-flow.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cc09b1a08cc61dd3f485308adf3a5a252c718861/src%2Ftest%2Fcompile-fail%2Fborrowck-lend-flow.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fborrowck-lend-flow.rs?ref=cc09b1a08cc61dd3f485308adf3a5a252c718861", "patch": "@@ -24,6 +24,7 @@ fn produce<T>() -> T { panic!(); }\n \n fn inc(v: &mut Box<isize>) {\n     *v = box() (**v + 1);\n+    //~^ WARN deprecated syntax\n }\n \n fn pre_freeze() {"}, {"sha": "558475c28d7014192b0c7e73811ba4a34e227992", "filename": "src/test/compile-fail/borrowck-loan-in-overloaded-op.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/cc09b1a08cc61dd3f485308adf3a5a252c718861/src%2Ftest%2Fcompile-fail%2Fborrowck-loan-in-overloaded-op.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cc09b1a08cc61dd3f485308adf3a5a252c718861/src%2Ftest%2Fcompile-fail%2Fborrowck-loan-in-overloaded-op.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fborrowck-loan-in-overloaded-op.rs?ref=cc09b1a08cc61dd3f485308adf3a5a252c718861", "patch": "@@ -23,6 +23,7 @@ impl Add for foo {\n         let foo(box i) = self;\n         let foo(box j) = f;\n         foo(box() (i + j))\n+        //~^ WARN deprecated syntax\n     }\n }\n "}, {"sha": "ace1b399662898d469d7e710c087d35c9543041a", "filename": "src/test/compile-fail/feature-gate-box-expr.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/cc09b1a08cc61dd3f485308adf3a5a252c718861/src%2Ftest%2Fcompile-fail%2Ffeature-gate-box-expr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cc09b1a08cc61dd3f485308adf3a5a252c718861/src%2Ftest%2Fcompile-fail%2Ffeature-gate-box-expr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Ffeature-gate-box-expr.rs?ref=cc09b1a08cc61dd3f485308adf3a5a252c718861", "patch": "@@ -21,5 +21,6 @@ fn main() {\n     println!(\"x: {}\", x);\n \n     let x = box () 'c'; //~ ERROR box expression syntax is experimental\n+    //~^ WARN deprecated syntax\n     println!(\"x: {}\", x);\n }"}, {"sha": "7c75605d57d329e685f689094c182f22bf6fa64f", "filename": "src/test/compile-fail/feature-gate-placement-expr.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/cc09b1a08cc61dd3f485308adf3a5a252c718861/src%2Ftest%2Fcompile-fail%2Ffeature-gate-placement-expr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cc09b1a08cc61dd3f485308adf3a5a252c718861/src%2Ftest%2Fcompile-fail%2Ffeature-gate-placement-expr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Ffeature-gate-placement-expr.rs?ref=cc09b1a08cc61dd3f485308adf3a5a252c718861", "patch": "@@ -20,6 +20,7 @@ fn main() {\n     use std::boxed::HEAP;\n \n     let x = box (HEAP) 'c'; //~ ERROR placement-in expression syntax is experimental\n+    //~^ WARN deprecated syntax\n     println!(\"x: {}\", x);\n \n     let x = in HEAP { 'c' }; //~ ERROR placement-in expression syntax is experimental"}, {"sha": "b33a6767274ea6f32c5677734e17fcd07adfcfc1", "filename": "src/test/compile-fail/issue-14084.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/cc09b1a08cc61dd3f485308adf3a5a252c718861/src%2Ftest%2Fcompile-fail%2Fissue-14084.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cc09b1a08cc61dd3f485308adf3a5a252c718861/src%2Ftest%2Fcompile-fail%2Fissue-14084.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-14084.rs?ref=cc09b1a08cc61dd3f485308adf3a5a252c718861", "patch": "@@ -15,4 +15,5 @@ fn main() {\n     box ( () ) 0;\n     //~^ ERROR: the trait `core::ops::Placer<_>` is not implemented\n     //~| ERROR: the trait `core::ops::Placer<_>` is not implemented\n+    //~| WARN deprecated syntax\n }"}, {"sha": "e1d462d1700029432450a5f37b03d5a986d9fbff", "filename": "src/test/compile-fail/moves-based-on-type-tuple.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/cc09b1a08cc61dd3f485308adf3a5a252c718861/src%2Ftest%2Fcompile-fail%2Fmoves-based-on-type-tuple.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cc09b1a08cc61dd3f485308adf3a5a252c718861/src%2Ftest%2Fcompile-fail%2Fmoves-based-on-type-tuple.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fmoves-based-on-type-tuple.rs?ref=cc09b1a08cc61dd3f485308adf3a5a252c718861", "patch": "@@ -10,7 +10,10 @@\n \n #![feature(box_syntax)]\n \n-fn dup(x: Box<isize>) -> Box<(Box<isize>,Box<isize>)> { box() (x, x) } //~ ERROR use of moved value\n+fn dup(x: Box<isize>) -> Box<(Box<isize>,Box<isize>)> {\n+    box() (x, x) //~ ERROR use of moved value\n+    //~^ WARN deprecated syntax\n+}\n fn main() {\n     dup(box 3);\n }"}, {"sha": "3cf3685d5bd0413c78f2b918428c9e2cb960573a", "filename": "src/test/parse-fail/parenthesized-box-expr-message.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/cc09b1a08cc61dd3f485308adf3a5a252c718861/src%2Ftest%2Fparse-fail%2Fparenthesized-box-expr-message.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cc09b1a08cc61dd3f485308adf3a5a252c718861/src%2Ftest%2Fparse-fail%2Fparenthesized-box-expr-message.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fparse-fail%2Fparenthesized-box-expr-message.rs?ref=cc09b1a08cc61dd3f485308adf3a5a252c718861", "patch": "@@ -14,5 +14,6 @@ fn main() {\n     box (1 + 1)\n     //~^ HELP try using `box ()` instead:\n     //~| SUGGESTION box () (1 + 1)\n+    //~| WARN deprecated syntax\n     ; //~ ERROR expected expression, found `;`\n }"}]}