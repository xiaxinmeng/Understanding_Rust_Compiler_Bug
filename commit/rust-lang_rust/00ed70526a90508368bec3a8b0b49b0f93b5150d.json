{"sha": "00ed70526a90508368bec3a8b0b49b0f93b5150d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjAwZWQ3MDUyNmE5MDUwODM2OGJlYzNhOGIwYjQ5YjBmOTNiNTE1MGQ=", "commit": {"author": {"name": "bors[bot]", "email": "bors[bot]@users.noreply.github.com", "date": "2018-10-28T22:52:21Z"}, "committer": {"name": "bors[bot]", "email": "bors[bot]@users.noreply.github.com", "date": "2018-10-28T22:52:21Z"}, "message": "Merge #3373\n\n3373: UI test cleanup: Extract unnecessary_operation tests r=matthiaskrgr a=phansch\n\ncc #2038 \n\nCo-authored-by: Philipp Hansch <dev@phansch.net>", "tree": {"sha": "ddaf7a500474aaeb1b47b2ca648ba70f8d618876", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ddaf7a500474aaeb1b47b2ca648ba70f8d618876"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/00ed70526a90508368bec3a8b0b49b0f93b5150d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/00ed70526a90508368bec3a8b0b49b0f93b5150d", "html_url": "https://github.com/rust-lang/rust/commit/00ed70526a90508368bec3a8b0b49b0f93b5150d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/00ed70526a90508368bec3a8b0b49b0f93b5150d/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "parents": [{"sha": "a791bf8c081bede3fda8cc43b626ade1cda6087c", "url": "https://api.github.com/repos/rust-lang/rust/commits/a791bf8c081bede3fda8cc43b626ade1cda6087c", "html_url": "https://github.com/rust-lang/rust/commit/a791bf8c081bede3fda8cc43b626ade1cda6087c"}, {"sha": "7adc8dc956ccea25cb1036c120a231c3b0933a08", "url": "https://api.github.com/repos/rust-lang/rust/commits/7adc8dc956ccea25cb1036c120a231c3b0933a08", "html_url": "https://github.com/rust-lang/rust/commit/7adc8dc956ccea25cb1036c120a231c3b0933a08"}], "stats": {"total": 355, "additions": 202, "deletions": 153}, "files": [{"sha": "bee3aeb6f7f2b8ea6c3fefb5ea26e9a5b875ebec", "filename": "tests/ui/no_effect.rs", "status": "modified", "additions": 1, "deletions": 30, "changes": 31, "blob_url": "https://github.com/rust-lang/rust/blob/00ed70526a90508368bec3a8b0b49b0f93b5150d/tests%2Fui%2Fno_effect.rs", "raw_url": "https://github.com/rust-lang/rust/raw/00ed70526a90508368bec3a8b0b49b0f93b5150d/tests%2Fui%2Fno_effect.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fno_effect.rs?ref=00ed70526a90508368bec3a8b0b49b0f93b5150d", "patch": "@@ -13,7 +13,7 @@\n #![feature(box_syntax)]\n \n \n-#![warn(clippy::no_effect, clippy::unnecessary_operation)]\n+#![warn(clippy::no_effect)]\n #![allow(dead_code)]\n #![allow(path_statements)]\n #![allow(clippy::deref_addrof)]\n@@ -105,33 +105,4 @@ fn main() {\n     DropTuple(0);\n     DropEnum::Tuple(0);\n     DropEnum::Struct { field: 0 };\n-\n-    Tuple(get_number());\n-    Struct { field: get_number() };\n-    Struct { ..get_struct() };\n-    Enum::Tuple(get_number());\n-    Enum::Struct { field: get_number() };\n-    5 + get_number();\n-    *&get_number();\n-    &get_number();\n-    (5, 6, get_number());\n-    box get_number();\n-    get_number()..;\n-    ..get_number();\n-    5..get_number();\n-    [42, get_number()];\n-    [42, 55][get_number() as usize];\n-    (42, get_number()).1;\n-    [get_number(); 55];\n-    [42; 55][get_number() as usize];\n-    {get_number()};\n-    FooString { s: String::from(\"blah\"), };\n-\n-    // Do not warn\n-    DropTuple(get_number());\n-    DropStruct { field: get_number() };\n-    DropStruct { field: get_number() };\n-    DropStruct { ..get_drop_struct() };\n-    DropEnum::Tuple(get_number());\n-    DropEnum::Struct { field: get_number() };\n }"}, {"sha": "7f012aa2ed4bb12b13c99ca53e2902c4fefd6533", "filename": "tests/ui/no_effect.stderr", "status": "modified", "additions": 1, "deletions": 123, "changes": 124, "blob_url": "https://github.com/rust-lang/rust/blob/00ed70526a90508368bec3a8b0b49b0f93b5150d/tests%2Fui%2Fno_effect.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/00ed70526a90508368bec3a8b0b49b0f93b5150d/tests%2Fui%2Fno_effect.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fno_effect.stderr?ref=00ed70526a90508368bec3a8b0b49b0f93b5150d", "patch": "@@ -150,127 +150,5 @@ error: statement with no effect\n 98 |     FooString { s: s };\n    |     ^^^^^^^^^^^^^^^^^^^\n \n-error: statement can be reduced\n-   --> $DIR/no_effect.rs:109:5\n-    |\n-109 |     Tuple(get_number());\n-    |     ^^^^^^^^^^^^^^^^^^^^ help: replace it with: `get_number();`\n-    |\n-    = note: `-D clippy::unnecessary-operation` implied by `-D warnings`\n-\n-error: statement can be reduced\n-   --> $DIR/no_effect.rs:110:5\n-    |\n-110 |     Struct { field: get_number() };\n-    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: replace it with: `get_number();`\n-\n-error: statement can be reduced\n-   --> $DIR/no_effect.rs:111:5\n-    |\n-111 |     Struct { ..get_struct() };\n-    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: replace it with: `get_struct();`\n-\n-error: statement can be reduced\n-   --> $DIR/no_effect.rs:112:5\n-    |\n-112 |     Enum::Tuple(get_number());\n-    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: replace it with: `get_number();`\n-\n-error: statement can be reduced\n-   --> $DIR/no_effect.rs:113:5\n-    |\n-113 |     Enum::Struct { field: get_number() };\n-    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: replace it with: `get_number();`\n-\n-error: statement can be reduced\n-   --> $DIR/no_effect.rs:114:5\n-    |\n-114 |     5 + get_number();\n-    |     ^^^^^^^^^^^^^^^^^ help: replace it with: `5;get_number();`\n-\n-error: statement can be reduced\n-   --> $DIR/no_effect.rs:115:5\n-    |\n-115 |     *&get_number();\n-    |     ^^^^^^^^^^^^^^^ help: replace it with: `get_number();`\n-\n-error: statement can be reduced\n-   --> $DIR/no_effect.rs:116:5\n-    |\n-116 |     &get_number();\n-    |     ^^^^^^^^^^^^^^ help: replace it with: `get_number();`\n-\n-error: statement can be reduced\n-   --> $DIR/no_effect.rs:117:5\n-    |\n-117 |     (5, 6, get_number());\n-    |     ^^^^^^^^^^^^^^^^^^^^^ help: replace it with: `5;6;get_number();`\n-\n-error: statement can be reduced\n-   --> $DIR/no_effect.rs:118:5\n-    |\n-118 |     box get_number();\n-    |     ^^^^^^^^^^^^^^^^^ help: replace it with: `get_number();`\n-\n-error: statement can be reduced\n-   --> $DIR/no_effect.rs:119:5\n-    |\n-119 |     get_number()..;\n-    |     ^^^^^^^^^^^^^^^ help: replace it with: `get_number();`\n-\n-error: statement can be reduced\n-   --> $DIR/no_effect.rs:120:5\n-    |\n-120 |     ..get_number();\n-    |     ^^^^^^^^^^^^^^^ help: replace it with: `get_number();`\n-\n-error: statement can be reduced\n-   --> $DIR/no_effect.rs:121:5\n-    |\n-121 |     5..get_number();\n-    |     ^^^^^^^^^^^^^^^^ help: replace it with: `5;get_number();`\n-\n-error: statement can be reduced\n-   --> $DIR/no_effect.rs:122:5\n-    |\n-122 |     [42, get_number()];\n-    |     ^^^^^^^^^^^^^^^^^^^ help: replace it with: `42;get_number();`\n-\n-error: statement can be reduced\n-   --> $DIR/no_effect.rs:123:5\n-    |\n-123 |     [42, 55][get_number() as usize];\n-    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: replace it with: `[42, 55];get_number() as usize;`\n-\n-error: statement can be reduced\n-   --> $DIR/no_effect.rs:124:5\n-    |\n-124 |     (42, get_number()).1;\n-    |     ^^^^^^^^^^^^^^^^^^^^^ help: replace it with: `42;get_number();`\n-\n-error: statement can be reduced\n-   --> $DIR/no_effect.rs:125:5\n-    |\n-125 |     [get_number(); 55];\n-    |     ^^^^^^^^^^^^^^^^^^^ help: replace it with: `get_number();`\n-\n-error: statement can be reduced\n-   --> $DIR/no_effect.rs:126:5\n-    |\n-126 |     [42; 55][get_number() as usize];\n-    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: replace it with: `[42; 55];get_number() as usize;`\n-\n-error: statement can be reduced\n-   --> $DIR/no_effect.rs:127:5\n-    |\n-127 |     {get_number()};\n-    |     ^^^^^^^^^^^^^^^ help: replace it with: `get_number();`\n-\n-error: statement can be reduced\n-   --> $DIR/no_effect.rs:128:5\n-    |\n-128 |     FooString { s: String::from(\"blah\"), };\n-    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: replace it with: `String::from(\"blah\");`\n-\n-error: aborting due to 45 previous errors\n+error: aborting due to 25 previous errors\n "}, {"sha": "de44047c867154da2d9bbd530b5895eb7d393214", "filename": "tests/ui/unnecessary_operation.rs", "status": "added", "additions": 76, "deletions": 0, "changes": 76, "blob_url": "https://github.com/rust-lang/rust/blob/00ed70526a90508368bec3a8b0b49b0f93b5150d/tests%2Fui%2Funnecessary_operation.rs", "raw_url": "https://github.com/rust-lang/rust/raw/00ed70526a90508368bec3a8b0b49b0f93b5150d/tests%2Fui%2Funnecessary_operation.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Funnecessary_operation.rs?ref=00ed70526a90508368bec3a8b0b49b0f93b5150d", "patch": "@@ -0,0 +1,76 @@\n+// Copyright 2014-2018 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![feature(box_syntax)]\n+#![allow(clippy::deref_addrof)]\n+#![warn(clippy::unnecessary_operation)]\n+\n+struct Tuple(i32);\n+struct Struct {\n+    field: i32\n+}\n+enum Enum {\n+    Tuple(i32),\n+    Struct { field: i32 },\n+}\n+struct DropStruct {\n+    field: i32\n+}\n+impl Drop for DropStruct {\n+    fn drop(&mut self) {}\n+}\n+struct DropTuple(i32);\n+impl Drop for DropTuple {\n+    fn drop(&mut self) {}\n+}\n+enum DropEnum {\n+    Tuple(i32),\n+    Struct { field: i32 },\n+}\n+impl Drop for DropEnum {\n+    fn drop(&mut self) {}\n+}\n+struct FooString {\n+    s: String,\n+}\n+\n+fn get_number() -> i32 { 0 }\n+fn get_struct() -> Struct { Struct { field: 0 } }\n+fn get_drop_struct() -> DropStruct { DropStruct { field: 0 } }\n+\n+fn main() {\n+    Tuple(get_number());\n+    Struct { field: get_number() };\n+    Struct { ..get_struct() };\n+    Enum::Tuple(get_number());\n+    Enum::Struct { field: get_number() };\n+    5 + get_number();\n+    *&get_number();\n+    &get_number();\n+    (5, 6, get_number());\n+    box get_number();\n+    get_number()..;\n+    ..get_number();\n+    5..get_number();\n+    [42, get_number()];\n+    [42, 55][get_number() as usize];\n+    (42, get_number()).1;\n+    [get_number(); 55];\n+    [42; 55][get_number() as usize];\n+    {get_number()};\n+    FooString { s: String::from(\"blah\"), };\n+\n+    // Do not warn\n+    DropTuple(get_number());\n+    DropStruct { field: get_number() };\n+    DropStruct { field: get_number() };\n+    DropStruct { ..get_drop_struct() };\n+    DropEnum::Tuple(get_number());\n+    DropEnum::Struct { field: get_number() };\n+}"}, {"sha": "8e5417eb13e33f2af7590522dbcf41c7db37dee8", "filename": "tests/ui/unnecessary_operation.stderr", "status": "added", "additions": 124, "deletions": 0, "changes": 124, "blob_url": "https://github.com/rust-lang/rust/blob/00ed70526a90508368bec3a8b0b49b0f93b5150d/tests%2Fui%2Funnecessary_operation.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/00ed70526a90508368bec3a8b0b49b0f93b5150d/tests%2Fui%2Funnecessary_operation.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Funnecessary_operation.stderr?ref=00ed70526a90508368bec3a8b0b49b0f93b5150d", "patch": "@@ -0,0 +1,124 @@\n+error: statement can be reduced\n+  --> $DIR/unnecessary_operation.rs:48:5\n+   |\n+48 |     Tuple(get_number());\n+   |     ^^^^^^^^^^^^^^^^^^^^ help: replace it with: `get_number();`\n+   |\n+   = note: `-D clippy::unnecessary-operation` implied by `-D warnings`\n+\n+error: statement can be reduced\n+  --> $DIR/unnecessary_operation.rs:49:5\n+   |\n+49 |     Struct { field: get_number() };\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: replace it with: `get_number();`\n+\n+error: statement can be reduced\n+  --> $DIR/unnecessary_operation.rs:50:5\n+   |\n+50 |     Struct { ..get_struct() };\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: replace it with: `get_struct();`\n+\n+error: statement can be reduced\n+  --> $DIR/unnecessary_operation.rs:51:5\n+   |\n+51 |     Enum::Tuple(get_number());\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: replace it with: `get_number();`\n+\n+error: statement can be reduced\n+  --> $DIR/unnecessary_operation.rs:52:5\n+   |\n+52 |     Enum::Struct { field: get_number() };\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: replace it with: `get_number();`\n+\n+error: statement can be reduced\n+  --> $DIR/unnecessary_operation.rs:53:5\n+   |\n+53 |     5 + get_number();\n+   |     ^^^^^^^^^^^^^^^^^ help: replace it with: `5;get_number();`\n+\n+error: statement can be reduced\n+  --> $DIR/unnecessary_operation.rs:54:5\n+   |\n+54 |     *&get_number();\n+   |     ^^^^^^^^^^^^^^^ help: replace it with: `get_number();`\n+\n+error: statement can be reduced\n+  --> $DIR/unnecessary_operation.rs:55:5\n+   |\n+55 |     &get_number();\n+   |     ^^^^^^^^^^^^^^ help: replace it with: `get_number();`\n+\n+error: statement can be reduced\n+  --> $DIR/unnecessary_operation.rs:56:5\n+   |\n+56 |     (5, 6, get_number());\n+   |     ^^^^^^^^^^^^^^^^^^^^^ help: replace it with: `5;6;get_number();`\n+\n+error: statement can be reduced\n+  --> $DIR/unnecessary_operation.rs:57:5\n+   |\n+57 |     box get_number();\n+   |     ^^^^^^^^^^^^^^^^^ help: replace it with: `get_number();`\n+\n+error: statement can be reduced\n+  --> $DIR/unnecessary_operation.rs:58:5\n+   |\n+58 |     get_number()..;\n+   |     ^^^^^^^^^^^^^^^ help: replace it with: `get_number();`\n+\n+error: statement can be reduced\n+  --> $DIR/unnecessary_operation.rs:59:5\n+   |\n+59 |     ..get_number();\n+   |     ^^^^^^^^^^^^^^^ help: replace it with: `get_number();`\n+\n+error: statement can be reduced\n+  --> $DIR/unnecessary_operation.rs:60:5\n+   |\n+60 |     5..get_number();\n+   |     ^^^^^^^^^^^^^^^^ help: replace it with: `5;get_number();`\n+\n+error: statement can be reduced\n+  --> $DIR/unnecessary_operation.rs:61:5\n+   |\n+61 |     [42, get_number()];\n+   |     ^^^^^^^^^^^^^^^^^^^ help: replace it with: `42;get_number();`\n+\n+error: statement can be reduced\n+  --> $DIR/unnecessary_operation.rs:62:5\n+   |\n+62 |     [42, 55][get_number() as usize];\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: replace it with: `[42, 55];get_number() as usize;`\n+\n+error: statement can be reduced\n+  --> $DIR/unnecessary_operation.rs:63:5\n+   |\n+63 |     (42, get_number()).1;\n+   |     ^^^^^^^^^^^^^^^^^^^^^ help: replace it with: `42;get_number();`\n+\n+error: statement can be reduced\n+  --> $DIR/unnecessary_operation.rs:64:5\n+   |\n+64 |     [get_number(); 55];\n+   |     ^^^^^^^^^^^^^^^^^^^ help: replace it with: `get_number();`\n+\n+error: statement can be reduced\n+  --> $DIR/unnecessary_operation.rs:65:5\n+   |\n+65 |     [42; 55][get_number() as usize];\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: replace it with: `[42; 55];get_number() as usize;`\n+\n+error: statement can be reduced\n+  --> $DIR/unnecessary_operation.rs:66:5\n+   |\n+66 |     {get_number()};\n+   |     ^^^^^^^^^^^^^^^ help: replace it with: `get_number();`\n+\n+error: statement can be reduced\n+  --> $DIR/unnecessary_operation.rs:67:5\n+   |\n+67 |     FooString { s: String::from(\"blah\"), };\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: replace it with: `String::from(\"blah\");`\n+\n+error: aborting due to 20 previous errors\n+"}]}