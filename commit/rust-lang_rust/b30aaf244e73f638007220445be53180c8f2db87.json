{"sha": "b30aaf244e73f638007220445be53180c8f2db87", "node_id": "MDY6Q29tbWl0NzI0NzEyOmIzMGFhZjI0NGU3M2Y2MzgwMDcyMjA0NDViZTUzMTgwYzhmMmRiODc=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2018-05-28T20:04:50Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2018-05-28T20:04:52Z"}, "message": "get rid of str::from_raw_parts_mut\n\nstr::from_raw_parts has been removed long ago because it can be obtained via\nstr::from_utf8_unchecked and slice::from_raw_parts.  The same goes for\nstr::from_raw_parts_mut.", "tree": {"sha": "99348be44ebe04c68f6102a10dfff7cc7cc14062", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/99348be44ebe04c68f6102a10dfff7cc7cc14062"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b30aaf244e73f638007220445be53180c8f2db87", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b30aaf244e73f638007220445be53180c8f2db87", "html_url": "https://github.com/rust-lang/rust/commit/b30aaf244e73f638007220445be53180c8f2db87", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b30aaf244e73f638007220445be53180c8f2db87/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3ee9d899695edf3a00870f6243c27c21d9084a8f", "url": "https://api.github.com/repos/rust-lang/rust/commits/3ee9d899695edf3a00870f6243c27c21d9084a8f", "html_url": "https://github.com/rust-lang/rust/commit/3ee9d899695edf3a00870f6243c27c21d9084a8f"}], "stats": {"total": 36, "additions": 5, "deletions": 31}, "files": [{"sha": "3169893fcde142e59404e0f73e7a890d7d5f3d31", "filename": "src/libcore/str/mod.rs", "status": "modified", "additions": 5, "deletions": 31, "changes": 36, "blob_url": "https://github.com/rust-lang/rust/blob/b30aaf244e73f638007220445be53180c8f2db87/src%2Flibcore%2Fstr%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b30aaf244e73f638007220445be53180c8f2db87/src%2Flibcore%2Fstr%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fstr%2Fmod.rs?ref=b30aaf244e73f638007220445be53180c8f2db87", "patch": "@@ -376,35 +376,6 @@ pub fn from_utf8_mut(v: &mut [u8]) -> Result<&mut str, Utf8Error> {\n     Ok(unsafe { from_utf8_unchecked_mut(v) })\n }\n \n-/// Forms a str from a pointer and a length.\n-///\n-/// The `len` argument is the number of bytes in the string.\n-///\n-/// # Safety\n-///\n-/// This function is unsafe as there is no guarantee that the given pointer is\n-/// valid for `len` bytes, nor whether the lifetime inferred is a suitable\n-/// lifetime for the returned str.\n-///\n-/// The data must be valid UTF-8\n-///\n-/// `p` must be non-null and aligned, even for zero-length strs, as is\n-/// required for all references. However, for zero-length strs, `p` can be\n-/// a bogus non-dereferencable pointer such as [`NonNull::dangling()`].\n-///\n-/// # Caveat\n-///\n-/// The lifetime for the returned str is inferred from its usage. To\n-/// prevent accidental misuse, it's suggested to tie the lifetime to whichever\n-/// source lifetime is safe in the context, such as by providing a helper\n-/// function taking the lifetime of a host value for the str, or by explicit\n-/// annotation.\n-///\n-/// [`NonNull::dangling()`]: ../../std/ptr/struct.NonNull.html#method.dangling\n-unsafe fn from_raw_parts_mut<'a>(p: *mut u8, len: usize) -> &'a mut str {\n-    from_utf8_unchecked_mut(slice::from_raw_parts_mut(p, len))\n-}\n-\n /// Converts a slice of bytes to a string slice without checking\n /// that the string contains valid UTF-8.\n ///\n@@ -2600,8 +2571,11 @@ impl str {\n             let len = self.len();\n             let ptr = self.as_ptr() as *mut u8;\n             unsafe {\n-                (from_raw_parts_mut(ptr, mid),\n-                 from_raw_parts_mut(ptr.offset(mid as isize), len - mid))\n+                (from_utf8_unchecked_mut(slice::from_raw_parts_mut(ptr, mid)),\n+                 from_utf8_unchecked_mut(slice::from_raw_parts_mut(\n+                    ptr.offset(mid as isize),\n+                    len - mid\n+                 )))\n             }\n         } else {\n             slice_error_fail(self, 0, mid)"}]}