{"sha": "5a9047b9b3109be22c219519120881189ca6b61d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjVhOTA0N2I5YjMxMDliZTIyYzIxOTUxOTEyMDg4MTE4OWNhNmI2MWQ=", "commit": {"author": {"name": "Jorge Aparicio", "email": "japaricious@gmail.com", "date": "2014-12-04T00:52:54Z"}, "committer": {"name": "Jorge Aparicio", "email": "japaricious@gmail.com", "date": "2014-12-13T22:03:45Z"}, "message": "librustc: fix fallout", "tree": {"sha": "89a9e25e74b8b988eb9984b6ce11bcd53f05ff73", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/89a9e25e74b8b988eb9984b6ce11bcd53f05ff73"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5a9047b9b3109be22c219519120881189ca6b61d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5a9047b9b3109be22c219519120881189ca6b61d", "html_url": "https://github.com/rust-lang/rust/commit/5a9047b9b3109be22c219519120881189ca6b61d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5a9047b9b3109be22c219519120881189ca6b61d/comments", "author": null, "committer": null, "parents": [{"sha": "fee500d3124544ee6d9c59d9d9b15927172458d8", "url": "https://api.github.com/repos/rust-lang/rust/commits/fee500d3124544ee6d9c59d9d9b15927172458d8", "html_url": "https://github.com/rust-lang/rust/commit/fee500d3124544ee6d9c59d9d9b15927172458d8"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "9791f8d2f592987b4a83b5b620c1a70244f7c6c4", "filename": "src/librustc/middle/subst.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/5a9047b9b3109be22c219519120881189ca6b61d/src%2Flibrustc%2Fmiddle%2Fsubst.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5a9047b9b3109be22c219519120881189ca6b61d/src%2Flibrustc%2Fmiddle%2Fsubst.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fsubst.rs?ref=5a9047b9b3109be22c219519120881189ca6b61d", "patch": "@@ -420,11 +420,11 @@ impl<T> VecPerParamSpace<T> {\n         spaces.iter().all(|&space| { pred(self.get_slice(space)) })\n     }\n \n-    pub fn all(&self, pred: |&T| -> bool) -> bool {\n+    pub fn all<P>(&self, pred: P) -> bool where P: FnMut(&T) -> bool {\n         self.iter().all(pred)\n     }\n \n-    pub fn any(&self, pred: |&T| -> bool) -> bool {\n+    pub fn any<P>(&self, pred: P) -> bool where P: FnMut(&T) -> bool {\n         self.iter().any(pred)\n     }\n "}]}