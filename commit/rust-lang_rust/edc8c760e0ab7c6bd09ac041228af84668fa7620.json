{"sha": "edc8c760e0ab7c6bd09ac041228af84668fa7620", "node_id": "MDY6Q29tbWl0NzI0NzEyOmVkYzhjNzYwZTBhYjdjNmJkMDlhYzA0MTIyOGFmODQ2NjhmYTc2MjA=", "commit": {"author": {"name": "Michael Hewson", "email": "michael@michaelhewson.ca", "date": "2017-10-20T06:42:47Z"}, "committer": {"name": "Michael Hewson", "email": "michael@michaelhewson.ca", "date": "2017-11-07T18:36:10Z"}, "message": "add tests for the arbitrary_self_types, which won't pass yet", "tree": {"sha": "5796bddbe201c3b509dd47e7d3c1523561d7311e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5796bddbe201c3b509dd47e7d3c1523561d7311e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/edc8c760e0ab7c6bd09ac041228af84668fa7620", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/edc8c760e0ab7c6bd09ac041228af84668fa7620", "html_url": "https://github.com/rust-lang/rust/commit/edc8c760e0ab7c6bd09ac041228af84668fa7620", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/edc8c760e0ab7c6bd09ac041228af84668fa7620/comments", "author": {"login": "mikeyhew", "id": 6751033, "node_id": "MDQ6VXNlcjY3NTEwMzM=", "avatar_url": "https://avatars.githubusercontent.com/u/6751033?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mikeyhew", "html_url": "https://github.com/mikeyhew", "followers_url": "https://api.github.com/users/mikeyhew/followers", "following_url": "https://api.github.com/users/mikeyhew/following{/other_user}", "gists_url": "https://api.github.com/users/mikeyhew/gists{/gist_id}", "starred_url": "https://api.github.com/users/mikeyhew/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mikeyhew/subscriptions", "organizations_url": "https://api.github.com/users/mikeyhew/orgs", "repos_url": "https://api.github.com/users/mikeyhew/repos", "events_url": "https://api.github.com/users/mikeyhew/events{/privacy}", "received_events_url": "https://api.github.com/users/mikeyhew/received_events", "type": "User", "site_admin": false}, "committer": {"login": "mikeyhew", "id": 6751033, "node_id": "MDQ6VXNlcjY3NTEwMzM=", "avatar_url": "https://avatars.githubusercontent.com/u/6751033?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mikeyhew", "html_url": "https://github.com/mikeyhew", "followers_url": "https://api.github.com/users/mikeyhew/followers", "following_url": "https://api.github.com/users/mikeyhew/following{/other_user}", "gists_url": "https://api.github.com/users/mikeyhew/gists{/gist_id}", "starred_url": "https://api.github.com/users/mikeyhew/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mikeyhew/subscriptions", "organizations_url": "https://api.github.com/users/mikeyhew/orgs", "repos_url": "https://api.github.com/users/mikeyhew/repos", "events_url": "https://api.github.com/users/mikeyhew/events{/privacy}", "received_events_url": "https://api.github.com/users/mikeyhew/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7ade24f67201531778e7674b4b63ebf1a23c9643", "url": "https://api.github.com/repos/rust-lang/rust/commits/7ade24f67201531778e7674b4b63ebf1a23c9643", "html_url": "https://github.com/rust-lang/rust/commit/7ade24f67201531778e7674b4b63ebf1a23c9643"}], "stats": {"total": 70, "additions": 70, "deletions": 0}, "files": [{"sha": "6f72636f45e434421859fd3edf322ad691ec5828", "filename": "src/test/compile-fail/arbitrary-self-types-inherent-impl.rs", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/edc8c760e0ab7c6bd09ac041228af84668fa7620/src%2Ftest%2Fcompile-fail%2Farbitrary-self-types-inherent-impl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/edc8c760e0ab7c6bd09ac041228af84668fa7620/src%2Ftest%2Fcompile-fail%2Farbitrary-self-types-inherent-impl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Farbitrary-self-types-inherent-impl.rs?ref=edc8c760e0ab7c6bd09ac041228af84668fa7620", "patch": "@@ -0,0 +1,11 @@\n+#![feature(arbitrary_self_types)]\n+\n+use std::rc::Rc;\n+\n+struct Foo;\n+\n+impl Foo {\n+    fn foo(self: Rc<Self>) {} //~ ERROR arbitrary self types are only allowed for trait methods\n+}\n+\n+fn main() {}"}, {"sha": "2d3ef639e33dbc5079fa3ff458667ec097594aeb", "filename": "src/test/compile-fail/arbitrary-self-types-not-object-safe.rs", "status": "added", "additions": 42, "deletions": 0, "changes": 42, "blob_url": "https://github.com/rust-lang/rust/blob/edc8c760e0ab7c6bd09ac041228af84668fa7620/src%2Ftest%2Fcompile-fail%2Farbitrary-self-types-not-object-safe.rs", "raw_url": "https://github.com/rust-lang/rust/raw/edc8c760e0ab7c6bd09ac041228af84668fa7620/src%2Ftest%2Fcompile-fail%2Farbitrary-self-types-not-object-safe.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Farbitrary-self-types-not-object-safe.rs?ref=edc8c760e0ab7c6bd09ac041228af84668fa7620", "patch": "@@ -0,0 +1,42 @@\n+#![feature(arbitrary_self_types)]\n+\n+use std::rc::Rc;\n+\n+trait Foo {\n+    fn foo(self: Rc<Self>) -> usize;\n+}\n+\n+trait Bar {\n+    fn foo(self: Rc<Self>) -> usize where Self: Sized;\n+    fn bar(self: Box<Self>) -> usize;\n+}\n+\n+impl Foo for usize {\n+    fn foo(self: Rc<Self>) -> usize {\n+        *self\n+    }\n+}\n+\n+impl Bar for usize {\n+    fn foo(self: Rc<Self>) -> usize {\n+        *self\n+    }\n+\n+    fn bar(self: Box<Self>) -> usize {\n+        *self\n+    }\n+}\n+\n+fn make_foo() {\n+    let x = Box::new(5usize) as Box<Foo>;\n+    //~^ ERROR E0038\n+    //~| NOTE the method `foo` has an arbitrary self type\n+    //~| NOTE the trait `Foo` cannot be made into an object\n+}\n+\n+fn make_bar() {\n+    let x = Box::new(5usize) as Box<Bar>;\n+    x.bar();\n+}\n+\n+fn main() {}"}, {"sha": "86fb2b732839c105cb64395bc91b64dcc76502a9", "filename": "src/test/compile-fail/feature-gate-arbitrary-self-types.rs", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/edc8c760e0ab7c6bd09ac041228af84668fa7620/src%2Ftest%2Fcompile-fail%2Ffeature-gate-arbitrary-self-types.rs", "raw_url": "https://github.com/rust-lang/rust/raw/edc8c760e0ab7c6bd09ac041228af84668fa7620/src%2Ftest%2Fcompile-fail%2Ffeature-gate-arbitrary-self-types.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Ffeature-gate-arbitrary-self-types.rs?ref=edc8c760e0ab7c6bd09ac041228af84668fa7620", "patch": "@@ -0,0 +1,17 @@\n+use std::rc::Rc;\n+\n+trait Foo {\n+    fn foo(self: Rc<Box<Self>>); //~ ERROR arbitrary self types are unstable\n+}\n+\n+struct Bar;\n+\n+impl Foo for Bar {\n+    fn foo(self: Rc<Box<Self>>) {} //~ ERROR arbitrary self types are unstable\n+}\n+\n+impl Bar {\n+    fn bar(self: Box<Rc<Self>>) {} //~ ERROR arbitrary self types are unstable\n+}\n+\n+fn main() {}"}]}