{"sha": "ecaf7b7ceeef920f9bb771c383920ae77a63e169", "node_id": "C_kwDOAAsO6NoAKGVjYWY3YjdjZWVlZjkyMGY5YmI3NzFjMzgzOTIwYWU3N2E2M2UxNjk", "commit": {"author": {"name": "Oli Scherer", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2022-05-12T07:43:05Z"}, "committer": {"name": "Oli Scherer", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2022-05-30T08:52:25Z"}, "message": "Reduce the scope of a mutable variable", "tree": {"sha": "2ce0507f4a3a19e8f7785fc0570c336f91fd969a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2ce0507f4a3a19e8f7785fc0570c336f91fd969a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ecaf7b7ceeef920f9bb771c383920ae77a63e169", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ecaf7b7ceeef920f9bb771c383920ae77a63e169", "html_url": "https://github.com/rust-lang/rust/commit/ecaf7b7ceeef920f9bb771c383920ae77a63e169", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ecaf7b7ceeef920f9bb771c383920ae77a63e169/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4d390de4a3de9e73a51f1edfcecaf8519d94b3ee", "url": "https://api.github.com/repos/rust-lang/rust/commits/4d390de4a3de9e73a51f1edfcecaf8519d94b3ee", "html_url": "https://github.com/rust-lang/rust/commit/4d390de4a3de9e73a51f1edfcecaf8519d94b3ee"}], "stats": {"total": 9, "additions": 2, "deletions": 7}, "files": [{"sha": "eea6e2a47a94bcc92ed9087d2eceba67093ba4e5", "filename": "compiler/rustc_const_eval/src/transform/check_consts/check.rs", "status": "modified", "additions": 2, "deletions": 7, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/ecaf7b7ceeef920f9bb771c383920ae77a63e169/compiler%2Frustc_const_eval%2Fsrc%2Ftransform%2Fcheck_consts%2Fcheck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ecaf7b7ceeef920f9bb771c383920ae77a63e169/compiler%2Frustc_const_eval%2Fsrc%2Ftransform%2Fcheck_consts%2Fcheck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_const_eval%2Fsrc%2Ftransform%2Fcheck_consts%2Fcheck.rs?ref=ecaf7b7ceeef920f9bb771c383920ae77a63e169", "patch": "@@ -711,8 +711,6 @@ impl<'tcx> Visitor<'tcx> for Checker<'_, 'tcx> {\n                     }\n                 };\n \n-                let mut nonconst_call_permission = false;\n-\n                 // Attempting to call a trait method?\n                 if let Some(trait_id) = tcx.trait_of_item(callee) {\n                     trace!(\"attempting to call a trait method\");\n@@ -776,6 +774,7 @@ impl<'tcx> Visitor<'tcx> for Checker<'_, 'tcx> {\n                         _ if !tcx.is_const_fn_raw(callee) => {\n                             // At this point, it is only legal when the caller is in a trait\n                             // marked with #[const_trait], and the callee is in the same trait.\n+                            let mut nonconst_call_permission = false;\n                             if let Some(callee_trait) = tcx.trait_of_item(callee)\n                                 && tcx.has_attr(callee_trait, sym::const_trait)\n                                 && Some(callee_trait) == tcx.trait_of_item(caller)\n@@ -872,14 +871,10 @@ impl<'tcx> Visitor<'tcx> for Checker<'_, 'tcx> {\n                 let is_intrinsic = tcx.is_intrinsic(callee);\n \n                 if !tcx.is_const_fn_raw(callee) {\n-                    if tcx.is_const_default_method(callee) {\n+                    if !tcx.is_const_default_method(callee) {\n                         // To get to here we must have already found a const impl for the\n                         // trait, but for it to still be non-const can be that the impl is\n                         // using default method bodies.\n-                        nonconst_call_permission = true;\n-                    }\n-\n-                    if !nonconst_call_permission {\n                         self.check_op(ops::FnCallNonConst {\n                             caller,\n                             callee,"}]}