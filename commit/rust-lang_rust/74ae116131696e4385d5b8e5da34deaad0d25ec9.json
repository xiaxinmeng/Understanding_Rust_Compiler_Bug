{"sha": "74ae116131696e4385d5b8e5da34deaad0d25ec9", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc0YWUxMTYxMzE2OTZlNDM4NWQ1YjhlNWRhMzRkZWFhZDBkMjVlYzk=", "commit": {"author": {"name": "Eduardo Broto", "email": "ebroto@tutanota.com", "date": "2020-10-11T20:15:56Z"}, "committer": {"name": "Eduardo Broto", "email": "ebroto@tutanota.com", "date": "2020-10-11T20:28:55Z"}, "message": "Use lowercase in error messages", "tree": {"sha": "24a5f20cd3ce0616b512152bd5a64ee25fa346aa", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/24a5f20cd3ce0616b512152bd5a64ee25fa346aa"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/74ae116131696e4385d5b8e5da34deaad0d25ec9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/74ae116131696e4385d5b8e5da34deaad0d25ec9", "html_url": "https://github.com/rust-lang/rust/commit/74ae116131696e4385d5b8e5da34deaad0d25ec9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/74ae116131696e4385d5b8e5da34deaad0d25ec9/comments", "author": {"login": "ebroto", "id": 816908, "node_id": "MDQ6VXNlcjgxNjkwOA==", "avatar_url": "https://avatars.githubusercontent.com/u/816908?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ebroto", "html_url": "https://github.com/ebroto", "followers_url": "https://api.github.com/users/ebroto/followers", "following_url": "https://api.github.com/users/ebroto/following{/other_user}", "gists_url": "https://api.github.com/users/ebroto/gists{/gist_id}", "starred_url": "https://api.github.com/users/ebroto/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ebroto/subscriptions", "organizations_url": "https://api.github.com/users/ebroto/orgs", "repos_url": "https://api.github.com/users/ebroto/repos", "events_url": "https://api.github.com/users/ebroto/events{/privacy}", "received_events_url": "https://api.github.com/users/ebroto/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ebroto", "id": 816908, "node_id": "MDQ6VXNlcjgxNjkwOA==", "avatar_url": "https://avatars.githubusercontent.com/u/816908?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ebroto", "html_url": "https://github.com/ebroto", "followers_url": "https://api.github.com/users/ebroto/followers", "following_url": "https://api.github.com/users/ebroto/following{/other_user}", "gists_url": "https://api.github.com/users/ebroto/gists{/gist_id}", "starred_url": "https://api.github.com/users/ebroto/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ebroto/subscriptions", "organizations_url": "https://api.github.com/users/ebroto/orgs", "repos_url": "https://api.github.com/users/ebroto/repos", "events_url": "https://api.github.com/users/ebroto/events{/privacy}", "received_events_url": "https://api.github.com/users/ebroto/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6021c231599eabcb07b3a8207bddbb3796c93eee", "url": "https://api.github.com/repos/rust-lang/rust/commits/6021c231599eabcb07b3a8207bddbb3796c93eee", "html_url": "https://github.com/rust-lang/rust/commit/6021c231599eabcb07b3a8207bddbb3796c93eee"}], "stats": {"total": 30, "additions": 15, "deletions": 15}, "files": [{"sha": "fd45a6da61ca676739dc186d933780445d8bae62", "filename": "clippy_lints/src/functions.rs", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/74ae116131696e4385d5b8e5da34deaad0d25ec9/clippy_lints%2Fsrc%2Ffunctions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/74ae116131696e4385d5b8e5da34deaad0d25ec9/clippy_lints%2Fsrc%2Ffunctions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Ffunctions.rs?ref=74ae116131696e4385d5b8e5da34deaad0d25ec9", "patch": "@@ -194,19 +194,19 @@ declare_clippy_lint! {\n     /// use std::fmt;\n     ///\n     /// #[derive(Debug)]\n-    /// struct EndOfStream;\n+    /// pub struct EndOfStream;\n     ///\n     /// impl fmt::Display for EndOfStream {\n-    /// \tfn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {\n-    ///\t\t\twrite!(f, \"End of Stream\")\n-    /// \t}\n+    ///     fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {\n+    ///         write!(f, \"End of Stream\")\n+    ///     }\n     /// }\n     ///\n     /// impl std::error::Error for EndOfStream { }\n     ///\n     /// pub fn read_u8() -> Result<u8, EndOfStream> { Err(EndOfStream) }\n     ///# fn main() {\n-    ///# \tread_u8().unwrap();\n+    ///#     read_u8().unwrap();\n     ///# }\n     /// ```\n     ///\n@@ -483,9 +483,9 @@ fn check_result_unit_err(cx: &LateContext<'_>, decl: &hir::FnDecl<'_>, item_span\n                 cx,\n                 RESULT_UNIT_ERR,\n                 fn_header_span,\n-                \"This returns a `Result<_, ()>\",\n+                \"this returns a `Result<_, ()>\",\n                 None,\n-                \"Use a custom Error type instead\",\n+                \"use a custom Error type instead\",\n             );\n         }\n     }"}, {"sha": "b8230032491b65e1c1af8c44b6286f2f29a17978", "filename": "tests/ui/result_unit_error.stderr", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/74ae116131696e4385d5b8e5da34deaad0d25ec9/tests%2Fui%2Fresult_unit_error.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/74ae116131696e4385d5b8e5da34deaad0d25ec9/tests%2Fui%2Fresult_unit_error.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fresult_unit_error.stderr?ref=74ae116131696e4385d5b8e5da34deaad0d25ec9", "patch": "@@ -1,35 +1,35 @@\n-error: This returns a `Result<_, ()>\n+error: this returns a `Result<_, ()>\n   --> $DIR/result_unit_error.rs:4:1\n    |\n LL | pub fn returns_unit_error() -> Result<u32, ()> {\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: `-D clippy::result-unit-err` implied by `-D warnings`\n-   = help: Use a custom Error type instead\n+   = help: use a custom Error type instead\n \n-error: This returns a `Result<_, ()>\n+error: this returns a `Result<_, ()>\n   --> $DIR/result_unit_error.rs:13:5\n    |\n LL |     fn get_that_error(&self) -> Result<bool, ()>;\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n-   = help: Use a custom Error type instead\n+   = help: use a custom Error type instead\n \n-error: This returns a `Result<_, ()>\n+error: this returns a `Result<_, ()>\n   --> $DIR/result_unit_error.rs:15:5\n    |\n LL |     fn get_this_one_too(&self) -> Result<bool, ()> {\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n-   = help: Use a custom Error type instead\n+   = help: use a custom Error type instead\n \n-error: This returns a `Result<_, ()>\n+error: this returns a `Result<_, ()>\n   --> $DIR/result_unit_error.rs:33:5\n    |\n LL |     pub fn unit_error(&self) -> Result<usize, ()> {\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n-   = help: Use a custom Error type instead\n+   = help: use a custom Error type instead\n \n error: aborting due to 4 previous errors\n "}]}