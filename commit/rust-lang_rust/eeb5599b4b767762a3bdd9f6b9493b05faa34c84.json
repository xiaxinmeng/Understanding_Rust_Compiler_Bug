{"sha": "eeb5599b4b767762a3bdd9f6b9493b05faa34c84", "node_id": "MDY6Q29tbWl0NzI0NzEyOmVlYjU1OTliNGI3Njc3NjJhM2JkZDlmNmI5NDkzYjA1ZmFhMzRjODQ=", "commit": {"author": {"name": "topecongiro", "email": "seuchida@gmail.com", "date": "2017-06-23T04:40:30Z"}, "committer": {"name": "topecongiro", "email": "seuchida@gmail.com", "date": "2017-06-23T04:43:43Z"}, "message": "Do not add trailing comma inside macro invocation unless there already is", "tree": {"sha": "50e4f52bd153b4558243ca15efa9a6a84c631d07", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/50e4f52bd153b4558243ca15efa9a6a84c631d07"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/eeb5599b4b767762a3bdd9f6b9493b05faa34c84", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/eeb5599b4b767762a3bdd9f6b9493b05faa34c84", "html_url": "https://github.com/rust-lang/rust/commit/eeb5599b4b767762a3bdd9f6b9493b05faa34c84", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/eeb5599b4b767762a3bdd9f6b9493b05faa34c84/comments", "author": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "committer": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c9d53e13d714047f5e291e713e579e0613959689", "url": "https://api.github.com/repos/rust-lang/rust/commits/c9d53e13d714047f5e291e713e579e0613959689", "html_url": "https://github.com/rust-lang/rust/commit/c9d53e13d714047f5e291e713e579e0613959689"}], "stats": {"total": 38, "additions": 29, "deletions": 9}, "files": [{"sha": "35c028d24db4efe77986e8eea07b694a4e3a886f", "filename": "src/expr.rs", "status": "modified", "additions": 27, "deletions": 7, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/eeb5599b4b767762a3bdd9f6b9493b05faa34c84/src%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eeb5599b4b767762a3bdd9f6b9493b05faa34c84/src%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fexpr.rs?ref=eeb5599b4b767762a3bdd9f6b9493b05faa34c84", "patch": "@@ -2009,6 +2009,11 @@ pub fn rewrite_call_with_binary_search<R>(\n where\n     R: Rewrite,\n {\n+    let force_trailing_comma = if context.inside_macro {\n+        span_ends_with_comma(context, span)\n+    } else {\n+        false\n+    };\n     let closure = |callee_max_width| {\n         // FIXME using byte lens instead of char lens (and probably all over the\n         // place too)\n@@ -2027,7 +2032,7 @@ where\n             span,\n             shape,\n             context.config.fn_call_width(),\n-            false,\n+            force_trailing_comma,\n         )\n     };\n \n@@ -2041,14 +2046,19 @@ pub fn rewrite_call(\n     span: Span,\n     shape: Shape,\n ) -> Option<String> {\n+    let force_trailing_comma = if context.inside_macro {\n+        span_ends_with_comma(context, span)\n+    } else {\n+        false\n+    };\n     rewrite_call_inner(\n         context,\n         &callee,\n         &args.iter().map(|x| &**x).collect::<Vec<_>>(),\n         span,\n         shape,\n         context.config.fn_call_width(),\n-        false,\n+        force_trailing_comma,\n     ).ok()\n }\n \n@@ -2155,15 +2165,13 @@ fn rewrite_call_args<'a, T>(\n where\n     T: Rewrite + Spanned + ToExpr + 'a,\n {\n-    let mut item_context = context.clone();\n-    item_context.inside_macro = false;\n     let items = itemize_list(\n         context.codemap,\n         args.iter(),\n         \")\",\n         |item| item.span().lo,\n         |item| item.span().hi,\n-        |item| item.rewrite(&item_context, shape),\n+        |item| item.rewrite(context, shape),\n         span.lo,\n         span.hi,\n     );\n@@ -2173,7 +2181,7 @@ where\n     // indentation. If its first line fits on one line with the other arguments,\n     // we format the function arguments horizontally.\n     let tactic = try_overflow_last_arg(\n-        &item_context,\n+        context,\n         &mut item_vec,\n         &args[..],\n         shape,\n@@ -2444,6 +2452,13 @@ pub fn wrap_args_with_parens(\n     }\n }\n \n+fn span_ends_with_comma(context: &RewriteContext, span: Span) -> bool {\n+    let snippet = context.snippet(span);\n+    snippet\n+        .trim_right_matches(|c: char| c == ')' || c.is_whitespace())\n+        .ends_with(',')\n+}\n+\n fn rewrite_paren(context: &RewriteContext, subexpr: &ast::Expr, shape: Shape) -> Option<String> {\n     debug!(\"rewrite_paren, shape: {:?}\", shape);\n     let paren_overhead = paren_overhead(context);\n@@ -2733,14 +2748,19 @@ where\n     debug!(\"rewrite_tuple {:?}\", shape);\n     if context.use_block_indent() {\n         // We use the same rule as funcation call for rewriting tuple.\n+        let force_trailing_comma = if context.inside_macro {\n+            span_ends_with_comma(context, span)\n+        } else {\n+            items.len() == 1\n+        };\n         rewrite_call_inner(\n             context,\n             &String::new(),\n             items,\n             span,\n             shape,\n             context.config.fn_call_width(),\n-            items.len() == 1,\n+            force_trailing_comma,\n         ).ok()\n     } else {\n         rewrite_tuple_in_visual_indent_style(context, items, span, shape)"}, {"sha": "75d6b6765fb7d76ac5edf384d5ed825b803fef6f", "filename": "tests/target/configs-fn_call_style-block.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/eeb5599b4b767762a3bdd9f6b9493b05faa34c84/tests%2Ftarget%2Fconfigs-fn_call_style-block.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eeb5599b4b767762a3bdd9f6b9493b05faa34c84/tests%2Ftarget%2Fconfigs-fn_call_style-block.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fconfigs-fn_call_style-block.rs?ref=eeb5599b4b767762a3bdd9f6b9493b05faa34c84", "patch": "@@ -33,7 +33,7 @@ fn main() {\n     // nesting macro and function call\n     try!(foo(\n         xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx,\n-        xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx,\n+        xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\n     ));\n     try!(foo(try!(\n         xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx,"}, {"sha": "eb95fe4758c22548d823a653ee5ee43dad98db3f", "filename": "tests/target/macros.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/eeb5599b4b767762a3bdd9f6b9493b05faa34c84/tests%2Ftarget%2Fmacros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eeb5599b4b767762a3bdd9f6b9493b05faa34c84/tests%2Ftarget%2Fmacros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fmacros.rs?ref=eeb5599b4b767762a3bdd9f6b9493b05faa34c84", "patch": "@@ -152,7 +152,7 @@ fn issue1739() {\n             b: types::Timestamptz,\n             c: types::Text,\n             d: types::Text,\n-            e: types::Text,\n+            e: types::Text\n         )\n     );\n "}]}