{"sha": "c2aefd5b95adb9e07919a11cdfcca45de79b5324", "node_id": "MDY6Q29tbWl0NzI0NzEyOmMyYWVmZDViOTVhZGI5ZTA3OTE5YTExY2RmY2NhNDVkZTc5YjUzMjQ=", "commit": {"author": {"name": "Florian Diebold", "email": "flodiebold@gmail.com", "date": "2021-04-29T18:21:50Z"}, "committer": {"name": "Florian Diebold", "email": "flodiebold@gmail.com", "date": "2021-04-29T18:23:02Z"}, "message": "Don't look in super traits for <T as Trait>::Assoc\n\nThis isn't actually how it works, you have to specify the exact trait\nthat has the associated type.\n\nFixes #8686.", "tree": {"sha": "e16281e3b3f694775a88b6ed39e5a37db7125183", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e16281e3b3f694775a88b6ed39e5a37db7125183"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c2aefd5b95adb9e07919a11cdfcca45de79b5324", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c2aefd5b95adb9e07919a11cdfcca45de79b5324", "html_url": "https://github.com/rust-lang/rust/commit/c2aefd5b95adb9e07919a11cdfcca45de79b5324", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c2aefd5b95adb9e07919a11cdfcca45de79b5324/comments", "author": {"login": "flodiebold", "id": 906069, "node_id": "MDQ6VXNlcjkwNjA2OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/906069?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flodiebold", "html_url": "https://github.com/flodiebold", "followers_url": "https://api.github.com/users/flodiebold/followers", "following_url": "https://api.github.com/users/flodiebold/following{/other_user}", "gists_url": "https://api.github.com/users/flodiebold/gists{/gist_id}", "starred_url": "https://api.github.com/users/flodiebold/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flodiebold/subscriptions", "organizations_url": "https://api.github.com/users/flodiebold/orgs", "repos_url": "https://api.github.com/users/flodiebold/repos", "events_url": "https://api.github.com/users/flodiebold/events{/privacy}", "received_events_url": "https://api.github.com/users/flodiebold/received_events", "type": "User", "site_admin": false}, "committer": {"login": "flodiebold", "id": 906069, "node_id": "MDQ6VXNlcjkwNjA2OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/906069?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flodiebold", "html_url": "https://github.com/flodiebold", "followers_url": "https://api.github.com/users/flodiebold/followers", "following_url": "https://api.github.com/users/flodiebold/following{/other_user}", "gists_url": "https://api.github.com/users/flodiebold/gists{/gist_id}", "starred_url": "https://api.github.com/users/flodiebold/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flodiebold/subscriptions", "organizations_url": "https://api.github.com/users/flodiebold/orgs", "repos_url": "https://api.github.com/users/flodiebold/repos", "events_url": "https://api.github.com/users/flodiebold/events{/privacy}", "received_events_url": "https://api.github.com/users/flodiebold/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2d20ab7eaf928dfaf3e1823707a3b6b84e918d07", "url": "https://api.github.com/repos/rust-lang/rust/commits/2d20ab7eaf928dfaf3e1823707a3b6b84e918d07", "html_url": "https://github.com/rust-lang/rust/commit/2d20ab7eaf928dfaf3e1823707a3b6b84e918d07"}], "stats": {"total": 21, "additions": 14, "deletions": 7}, "files": [{"sha": "c99dd8d0a46d5b1c56a283d6a46aaebdfabbee3d", "filename": "crates/hir_ty/src/lower.rs", "status": "modified", "additions": 6, "deletions": 7, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/c2aefd5b95adb9e07919a11cdfcca45de79b5324/crates%2Fhir_ty%2Fsrc%2Flower.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c2aefd5b95adb9e07919a11cdfcca45de79b5324/crates%2Fhir_ty%2Fsrc%2Flower.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_ty%2Fsrc%2Flower.rs?ref=c2aefd5b95adb9e07919a11cdfcca45de79b5324", "patch": "@@ -414,17 +414,16 @@ impl<'a> TyLoweringContext<'a> {\n                     self.lower_trait_ref_from_resolved_path(trait_, resolved_segment, self_ty);\n                 let ty = if remaining_segments.len() == 1 {\n                     let segment = remaining_segments.first().unwrap();\n-                    let found = associated_type_by_name_including_super_traits(\n-                        self.db,\n-                        trait_ref,\n-                        &segment.name,\n-                    );\n+                    let found = self\n+                        .db\n+                        .trait_data(trait_ref.hir_trait_id())\n+                        .associated_type_by_name(&segment.name);\n                     match found {\n-                        Some((super_trait_ref, associated_ty)) => {\n+                        Some(associated_ty) => {\n                             // FIXME handle type parameters on the segment\n                             TyKind::Alias(AliasTy::Projection(ProjectionTy {\n                                 associated_ty_id: to_assoc_type_id(associated_ty),\n-                                substitution: super_trait_ref.substitution,\n+                                substitution: trait_ref.substitution,\n                             }))\n                             .intern(&Interner)\n                         }"}, {"sha": "d14f5c9bb11af73c43f047055870c29c734e6ae8", "filename": "crates/hir_ty/src/tests/regression.rs", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/c2aefd5b95adb9e07919a11cdfcca45de79b5324/crates%2Fhir_ty%2Fsrc%2Ftests%2Fregression.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c2aefd5b95adb9e07919a11cdfcca45de79b5324/crates%2Fhir_ty%2Fsrc%2Ftests%2Fregression.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_ty%2Fsrc%2Ftests%2Fregression.rs?ref=c2aefd5b95adb9e07919a11cdfcca45de79b5324", "patch": "@@ -1039,6 +1039,14 @@ fn test() {\n }\n         \"#,\n         expect![[r#\"\n+            144..152 'residual': R\n+            365..366 'r': ControlFlow<B, !>\n+            395..410 '{ ControlFlow }': ControlFlow<B, C>\n+            397..408 'ControlFlow': ControlFlow<B, C>\n+            424..482 '{     ...!>); }': ()\n+            430..456 'Contro...sidual': fn from_residual<ControlFlow<u32, {unknown}>, ControlFlow<u32, !>>(ControlFlow<u32, !>) -> ControlFlow<u32, {unknown}>\n+            430..479 'Contro...2, !>)': ControlFlow<u32, {unknown}>\n+            457..478 'Contro...32, !>': ControlFlow<u32, !>\n         \"#]],\n     );\n }"}]}