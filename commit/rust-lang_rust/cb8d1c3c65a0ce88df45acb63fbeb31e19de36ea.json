{"sha": "cb8d1c3c65a0ce88df45acb63fbeb31e19de36ea", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNiOGQxYzNjNjVhMGNlODhkZjQ1YWNiNjNmYmViMzFlMTlkZTM2ZWE=", "commit": {"author": {"name": "Oliver Scherer", "email": "github35764891676564198441@oli-obk.de", "date": "2019-12-22T11:59:15Z"}, "committer": {"name": "Oliver Scherer", "email": "github35764891676564198441@oli-obk.de", "date": "2019-12-26T21:50:17Z"}, "message": "Explain what we are doing with parameter environments for statics", "tree": {"sha": "164ad8909dd5d5563051a20992fe0417b7a31372", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/164ad8909dd5d5563051a20992fe0417b7a31372"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cb8d1c3c65a0ce88df45acb63fbeb31e19de36ea", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cb8d1c3c65a0ce88df45acb63fbeb31e19de36ea", "html_url": "https://github.com/rust-lang/rust/commit/cb8d1c3c65a0ce88df45acb63fbeb31e19de36ea", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cb8d1c3c65a0ce88df45acb63fbeb31e19de36ea/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8a88ff1006189de229c0c92c48e1ddd7a3144e81", "url": "https://api.github.com/repos/rust-lang/rust/commits/8a88ff1006189de229c0c92c48e1ddd7a3144e81", "html_url": "https://github.com/rust-lang/rust/commit/8a88ff1006189de229c0c92c48e1ddd7a3144e81"}], "stats": {"total": 10, "additions": 5, "deletions": 5}, "files": [{"sha": "76f74a3ecaa69acb2d26bbc566c6fdba0d27d403", "filename": "src/librustc_mir/interpret/eval_context.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/cb8d1c3c65a0ce88df45acb63fbeb31e19de36ea/src%2Flibrustc_mir%2Finterpret%2Feval_context.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cb8d1c3c65a0ce88df45acb63fbeb31e19de36ea/src%2Flibrustc_mir%2Finterpret%2Feval_context.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Finterpret%2Feval_context.rs?ref=cb8d1c3c65a0ce88df45acb63fbeb31e19de36ea", "patch": "@@ -758,11 +758,11 @@ impl<'mir, 'tcx, M: Machine<'mir, 'tcx>> InterpCx<'mir, 'tcx, M> {\n         &self,\n         gid: GlobalId<'tcx>,\n     ) -> InterpResult<'tcx, MPlaceTy<'tcx, M::PointerTag>> {\n-        // FIXME(oli-obk): make this check an assertion that it's not a static here\n-        // FIXME(RalfJ, oli-obk): document that `Place::Static` can never be anything but a static\n-        // and `ConstValue::Unevaluated` can never be a static\n-        // FIXME(oli-obk, spastorino): the above FIXME is not true anymore, PlaceBase::Static does\n-        // not exist anymore (except for promoteds but it's going away soon).\n+        // For statics we pick `ParamEnv::reveal_all`, because statics don't have generics\n+        // and thus don't care about the parameter environment. While we could just use\n+        // `self.param_env`, that would mean we invoke the query to evaluate the static\n+        // with different parameter environments, thus causing the static to be evaluated\n+        // multiple times.\n         let param_env = if self.tcx.is_static(gid.instance.def_id()) {\n             ty::ParamEnv::reveal_all()\n         } else {"}]}