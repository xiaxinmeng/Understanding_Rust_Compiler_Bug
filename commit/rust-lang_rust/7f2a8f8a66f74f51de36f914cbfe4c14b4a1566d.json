{"sha": "7f2a8f8a66f74f51de36f914cbfe4c14b4a1566d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdmMmE4ZjhhNjZmNzRmNTFkZTM2ZjkxNGNiZmU0YzE0YjRhMTU2NmQ=", "commit": {"author": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2018-08-15T12:49:36Z"}, "committer": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2018-08-15T12:49:36Z"}, "message": "Disable some example which don't compile yet", "tree": {"sha": "5593502ab4b0ad0ad335e4720a8cfad7209a9a48", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5593502ab4b0ad0ad335e4720a8cfad7209a9a48"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7f2a8f8a66f74f51de36f914cbfe4c14b4a1566d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7f2a8f8a66f74f51de36f914cbfe4c14b4a1566d", "html_url": "https://github.com/rust-lang/rust/commit/7f2a8f8a66f74f51de36f914cbfe4c14b4a1566d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7f2a8f8a66f74f51de36f914cbfe4c14b4a1566d/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7f2a887c838754c0fa392c690ff8321d5dfeb0bb", "url": "https://api.github.com/repos/rust-lang/rust/commits/7f2a887c838754c0fa392c690ff8321d5dfeb0bb", "html_url": "https://github.com/rust-lang/rust/commit/7f2a887c838754c0fa392c690ff8321d5dfeb0bb"}], "stats": {"total": 17, "additions": 10, "deletions": 7}, "files": [{"sha": "863d80ed3c58e08050c0df55254386969c2cea01", "filename": "build.sh", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7f2a8f8a66f74f51de36f914cbfe4c14b4a1566d/build.sh", "raw_url": "https://github.com/rust-lang/rust/raw/7f2a8f8a66f74f51de36f914cbfe4c14b4a1566d/build.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/build.sh?ref=7f2a8f8a66f74f51de36f914cbfe4c14b4a1566d", "patch": "@@ -30,7 +30,7 @@ $RUSTC ../../examples/example.rs --crate-type lib &&\n SHOULD_RUN=1 $RUSTC ../../examples/mini_core_hello_world.rs --crate-type bin &&\n \n $RUSTC ../../examples/mini_core_hello_world.rs --crate-type bin &&\n-extract_data mini_core_hello_world mini_core_hello_world.o\n+extract_data mini_core_hello_world mini_core_hello_world.o &&\n \n gcc mini_core.o mini_core_hello_world.o -o mini_core_hello_world &&\n ./mini_core_hello_world &&"}, {"sha": "6d84fb148c0faeeb17421ee2253986a54d93d57d", "filename": "examples/example.rs", "status": "modified", "additions": 8, "deletions": 6, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/7f2a8f8a66f74f51de36f914cbfe4c14b4a1566d/examples%2Fexample.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7f2a8f8a66f74f51de36f914cbfe4c14b4a1566d/examples%2Fexample.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/examples%2Fexample.rs?ref=7f2a8f8a66f74f51de36f914cbfe4c14b4a1566d", "patch": "@@ -33,12 +33,14 @@ enum BoolOption {\n     None,\n }\n \n+/*\n fn option_unwrap_or(o: BoolOption, d: bool) -> bool {\n     match o {\n         BoolOption::Some(b) => b,\n         BoolOption::None => d,\n     }\n }\n+*/\n \n fn ret_42() -> u8 {\n     42\n@@ -60,12 +62,12 @@ fn cmp_raw_ptr(a: *const u8, b: *const u8) -> bool {\n     a == b\n }\n \n-fn int_cast(a: u16, b: i16) -> (u8, u16, u32, usize, i8, i16, i32, isize, u8, u32) {\n+/*fn int_cast(a: u16, b: i16) -> (u8, u16, u32, usize, i8, i16, i32, isize, u8, u32) {\n     (\n         a as u8, a as u16, a as u32, a as usize, a as i8, a as i16, a as i32, a as isize, b as u8,\n         b as u32,\n     )\n-}\n+}*/\n \n fn char_cast(c: char) -> u8 {\n     c as u8\n@@ -151,9 +153,9 @@ fn repeat_array() -> [u8; 3] {\n     [0; 3]\n }\n \n-unsafe fn use_ctlz_nonzero(a: u16) -> u16 {\n+/*unsafe fn use_ctlz_nonzero(a: u16) -> u16 {\n     intrinsics::ctlz_nonzero(a)\n-}\n+}*/\n \n fn ptr_as_usize(ptr: *const u8) -> usize {\n     ptr as usize\n@@ -163,9 +165,9 @@ fn float_cast(a: f32, b: f64) -> (f64, f32) {\n     (a as f64, b as f32)\n }\n \n-fn int_to_float(a: u8, b: i32) -> (f64, f32) {\n+/*fn int_to_float(a: u8, b: i32) -> (f64, f32) {\n     (a as f64, b as f32)\n-}\n+}*/\n \n fn make_array() -> [u8; 3] {\n     [42, 0, 5]"}, {"sha": "a0e59c0a0c49d158bf164f2ca07f88a67b6b1f95", "filename": "src/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/7f2a8f8a66f74f51de36f914cbfe4c14b4a1566d/src%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7f2a8f8a66f74f51de36f914cbfe4c14b4a1566d/src%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flib.rs?ref=7f2a8f8a66f74f51de36f914cbfe4c14b4a1566d", "patch": "@@ -99,6 +99,7 @@ mod prelude {\n     pub use crate::{CodegenCx, ModuleTup};\n \n     pub fn should_codegen(sess: &Session) -> bool {\n+        //return true;\n         ::std::env::var(\"SHOULD_CODEGEN\").is_ok()\n             || sess.crate_types.get().contains(&CrateType::Executable)\n     }"}]}