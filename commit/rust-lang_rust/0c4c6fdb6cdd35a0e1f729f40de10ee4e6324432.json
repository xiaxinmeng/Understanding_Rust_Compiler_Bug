{"sha": "0c4c6fdb6cdd35a0e1f729f40de10ee4e6324432", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBjNGM2ZmRiNmNkZDM1YTBlMWY3MjlmNDBkZTEwZWU0ZTYzMjQ0MzI=", "commit": {"author": {"name": "Vadim Petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2017-02-18T17:10:01Z"}, "committer": {"name": "Vadim Petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2017-02-18T17:10:01Z"}, "message": "Rebuild mingw startup objects only when necessary", "tree": {"sha": "16ab8a18f42b079641b10f9c9530fedf94998678", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/16ab8a18f42b079641b10f9c9530fedf94998678"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0c4c6fdb6cdd35a0e1f729f40de10ee4e6324432", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0c4c6fdb6cdd35a0e1f729f40de10ee4e6324432", "html_url": "https://github.com/rust-lang/rust/commit/0c4c6fdb6cdd35a0e1f729f40de10ee4e6324432", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0c4c6fdb6cdd35a0e1f729f40de10ee4e6324432/comments", "author": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "committer": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8f2fc9db15d41285619138900c6f65686bd32a2a", "url": "https://api.github.com/repos/rust-lang/rust/commits/8f2fc9db15d41285619138900c6f65686bd32a2a", "html_url": "https://github.com/rust-lang/rust/commit/8f2fc9db15d41285619138900c6f65686bd32a2a"}], "stats": {"total": 34, "additions": 21, "deletions": 13}, "files": [{"sha": "f1261e5e7d4ea4001339550ce0aea6e5b808e524", "filename": "src/bootstrap/compile.rs", "status": "modified", "additions": 21, "deletions": 13, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/0c4c6fdb6cdd35a0e1f729f40de10ee4e6324432/src%2Fbootstrap%2Fcompile.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0c4c6fdb6cdd35a0e1f729f40de10ee4e6324432/src%2Fbootstrap%2Fcompile.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fcompile.rs?ref=0c4c6fdb6cdd35a0e1f729f40de10ee4e6324432", "patch": "@@ -21,7 +21,7 @@ use std::fs::{self, File};\n use std::path::{Path, PathBuf};\n use std::process::Command;\n \n-use build_helper::{output, mtime};\n+use build_helper::{output, mtime, up_to_date};\n use filetime::FileTime;\n \n use util::{exe, libdir, is_dylib, copy};\n@@ -132,21 +132,29 @@ pub fn build_startup_objects(build: &Build, for_compiler: &Compiler, target: &st\n \n     let compiler = Compiler::new(0, &build.config.build);\n     let compiler_path = build.compiler_path(&compiler);\n-    let into = build.sysroot_libdir(for_compiler, target);\n-    t!(fs::create_dir_all(&into));\n-\n-    for file in t!(fs::read_dir(build.src.join(\"src/rtstartup\"))) {\n-        let file = t!(file);\n-        let mut cmd = Command::new(&compiler_path);\n-        build.run(cmd.env(\"RUSTC_BOOTSTRAP\", \"1\")\n-                     .arg(\"--target\").arg(target)\n-                     .arg(\"--emit=obj\")\n-                     .arg(\"--out-dir\").arg(&into)\n-                     .arg(file.path()));\n+    let src_dir = &build.src.join(\"src/rtstartup\");\n+    let dst_dir = &build.native_dir(target).join(\"rtstartup\");\n+    let sysroot_dir = &build.sysroot_libdir(for_compiler, target);\n+    t!(fs::create_dir_all(dst_dir));\n+    t!(fs::create_dir_all(sysroot_dir));\n+\n+    for file in &[\"rsbegin\", \"rsend\"] {\n+        let src_file = &src_dir.join(file.to_string() + \".rs\");\n+        let dst_file = &dst_dir.join(file.to_string() + \".o\");\n+        if !up_to_date(src_file, dst_file) {\n+            let mut cmd = Command::new(&compiler_path);\n+            build.run(cmd.env(\"RUSTC_BOOTSTRAP\", \"1\")\n+                        .arg(\"--target\").arg(target)\n+                        .arg(\"--emit=obj\")\n+                        .arg(\"--out-dir\").arg(dst_dir)\n+                        .arg(src_file));\n+        }\n+\n+        copy(dst_file, &sysroot_dir.join(file.to_string() + \".o\"));\n     }\n \n     for obj in [\"crt2.o\", \"dllcrt2.o\"].iter() {\n-        copy(&compiler_file(build.cc(target), obj), &into.join(obj));\n+        copy(&compiler_file(build.cc(target), obj), &sysroot_dir.join(obj));\n     }\n }\n "}]}