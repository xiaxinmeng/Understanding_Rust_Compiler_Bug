{"sha": "11bbaecca0f31d4960faaeb9d603133888b6ad17", "node_id": "MDY6Q29tbWl0NzI0NzEyOjExYmJhZWNjYTBmMzFkNDk2MGZhYWViOWQ2MDMxMzM4ODhiNmFkMTc=", "commit": {"author": {"name": "Andr\u00e9 Oliveira", "email": "p32blo@gmail.com", "date": "2021-08-09T17:45:42Z"}, "committer": {"name": "Andr\u00e9 Oliveira", "email": "p32blo@gmail.com", "date": "2021-08-10T13:43:57Z"}, "message": "Formatting issues", "tree": {"sha": "495b3fa072e04066fdaca24d5444b65bd3508c03", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/495b3fa072e04066fdaca24d5444b65bd3508c03"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/11bbaecca0f31d4960faaeb9d603133888b6ad17", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/11bbaecca0f31d4960faaeb9d603133888b6ad17", "html_url": "https://github.com/rust-lang/rust/commit/11bbaecca0f31d4960faaeb9d603133888b6ad17", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/11bbaecca0f31d4960faaeb9d603133888b6ad17/comments", "author": {"login": "p32blo", "id": 6619062, "node_id": "MDQ6VXNlcjY2MTkwNjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6619062?v=4", "gravatar_id": "", "url": "https://api.github.com/users/p32blo", "html_url": "https://github.com/p32blo", "followers_url": "https://api.github.com/users/p32blo/followers", "following_url": "https://api.github.com/users/p32blo/following{/other_user}", "gists_url": "https://api.github.com/users/p32blo/gists{/gist_id}", "starred_url": "https://api.github.com/users/p32blo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/p32blo/subscriptions", "organizations_url": "https://api.github.com/users/p32blo/orgs", "repos_url": "https://api.github.com/users/p32blo/repos", "events_url": "https://api.github.com/users/p32blo/events{/privacy}", "received_events_url": "https://api.github.com/users/p32blo/received_events", "type": "User", "site_admin": false}, "committer": {"login": "p32blo", "id": 6619062, "node_id": "MDQ6VXNlcjY2MTkwNjI=", "avatar_url": "https://avatars.githubusercontent.com/u/6619062?v=4", "gravatar_id": "", "url": "https://api.github.com/users/p32blo", "html_url": "https://github.com/p32blo", "followers_url": "https://api.github.com/users/p32blo/followers", "following_url": "https://api.github.com/users/p32blo/following{/other_user}", "gists_url": "https://api.github.com/users/p32blo/gists{/gist_id}", "starred_url": "https://api.github.com/users/p32blo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/p32blo/subscriptions", "organizations_url": "https://api.github.com/users/p32blo/orgs", "repos_url": "https://api.github.com/users/p32blo/repos", "events_url": "https://api.github.com/users/p32blo/events{/privacy}", "received_events_url": "https://api.github.com/users/p32blo/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5e571a375bde422c6e475b4910aaf717241f9a99", "url": "https://api.github.com/repos/rust-lang/rust/commits/5e571a375bde422c6e475b4910aaf717241f9a99", "html_url": "https://github.com/rust-lang/rust/commit/5e571a375bde422c6e475b4910aaf717241f9a99"}], "stats": {"total": 24, "additions": 12, "deletions": 12}, "files": [{"sha": "6425510acf9f35e656482216c98b299332bb39a9", "filename": "crates/rust-analyzer/src/handlers.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/11bbaecca0f31d4960faaeb9d603133888b6ad17/crates%2Frust-analyzer%2Fsrc%2Fhandlers.rs", "raw_url": "https://github.com/rust-lang/rust/raw/11bbaecca0f31d4960faaeb9d603133888b6ad17/crates%2Frust-analyzer%2Fsrc%2Fhandlers.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fhandlers.rs?ref=11bbaecca0f31d4960faaeb9d603133888b6ad17", "patch": "@@ -3,7 +3,7 @@\n //! `ide` crate.\n \n use std::{\n-    io::{Write as _},\n+    io::Write as _,\n     process::{self, Stdio},\n };\n "}, {"sha": "06252b921eafcded737f3067c5f856448c36d63d", "filename": "editors/code/src/commands.ts", "status": "modified", "additions": 11, "deletions": 11, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/11bbaecca0f31d4960faaeb9d603133888b6ad17/editors%2Fcode%2Fsrc%2Fcommands.ts", "raw_url": "https://github.com/rust-lang/rust/raw/11bbaecca0f31d4960faaeb9d603133888b6ad17/editors%2Fcode%2Fsrc%2Fcommands.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Fcommands.ts?ref=11bbaecca0f31d4960faaeb9d603133888b6ad17", "patch": "@@ -473,12 +473,12 @@ export function viewItemTree(ctx: Ctx): Cmd {\n \n function crateGraph(ctx: Ctx, full: boolean): Cmd {\n     return async () => {\n-        const node_modules_path = vscode.Uri.file(path.join(ctx.extensionPath, \"node_modules\"));\n+        const nodeModulesPath = vscode.Uri.file(path.join(ctx.extensionPath, \"node_modules\"));\n \n         const panel = vscode.window.createWebviewPanel(\"rust-analyzer.crate-graph\", \"rust-analyzer crate graph\", vscode.ViewColumn.Two, {\n             enableScripts: true,\n             retainContextWhenHidden: true,\n-            localResourceRoots: [node_modules_path]\n+            localResourceRoots: [nodeModulesPath]\n         });\n         const params = {\n             full: full,\n@@ -487,15 +487,15 @@ function crateGraph(ctx: Ctx, full: boolean): Cmd {\n         const dot = await ctx.client.sendRequest(ra.viewCrateGraph, params);\n \n         const scripts = [\n-            { file: vscode.Uri.joinPath(node_modules_path, 'd3', 'dist', 'd3.min.js') },\n-            { file: vscode.Uri.joinPath(node_modules_path, '@hpcc-js', 'wasm', 'dist', 'index.min.js'), worker: true },\n-            { file: vscode.Uri.joinPath(node_modules_path, 'd3-graphviz', 'build', 'd3-graphviz.min.js') },\n-        ]\n+            { file: vscode.Uri.joinPath(nodeModulesPath, 'd3', 'dist', 'd3.min.js') },\n+            { file: vscode.Uri.joinPath(nodeModulesPath, '@hpcc-js', 'wasm', 'dist', 'index.min.js'), worker: true },\n+            { file: vscode.Uri.joinPath(nodeModulesPath, 'd3-graphviz', 'build', 'd3-graphviz.min.js') },\n+        ];\n \n-        const scripts_html = scripts.map(({ file, worker }) => {\n-            let uri = panel.webview.asWebviewUri(file);\n-            return `<script type=\"${worker ? \"javascript/worker\" : \"text/javascript\"}\" src=\"${uri}\"></script>`\n-        }).join(\"\\n\")\n+        const scriptsHtml = scripts.map(({ file, worker }) => {\n+            const uri = panel.webview.asWebviewUri(file);\n+            return `<script type=\"${worker ? \"javascript/worker\" : \"text/javascript\"}\" src=\"${uri}\"></script>`;\n+        }).join(\"\\n\");\n \n         const html = `\n             <!DOCTYPE html>\n@@ -515,7 +515,7 @@ function crateGraph(ctx: Ctx, full: boolean): Cmd {\n                 </style>\n             </head>\n             <body>\n-                ${scripts_html}\n+                ${scriptsHtml}\n                 <div id=\"graph\"></div>\n                 <script>\n                     let graph = d3.select(\"#graph\")"}]}