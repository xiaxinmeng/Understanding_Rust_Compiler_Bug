{"sha": "e5318f3f9b9797af903a57addbe37ca117da8d96", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU1MzE4ZjNmOWI5Nzk3YWY5MDNhNTdhZGRiZTM3Y2ExMTdkYThkOTY=", "commit": {"author": {"name": "lqd", "email": "remy.rakic+github@gmail.com", "date": "2019-01-09T13:21:46Z"}, "committer": {"name": "lqd", "email": "remy.rakic+github@gmail.com", "date": "2019-01-09T13:21:46Z"}, "message": "MetadataOnlyCodegenBackend: remove `is_inline` call\n\nThis function has no side effects, and its result is ignored.", "tree": {"sha": "6945ffd381957b2339510d3cea7699bfe323a5fc", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6945ffd381957b2339510d3cea7699bfe323a5fc"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e5318f3f9b9797af903a57addbe37ca117da8d96", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e5318f3f9b9797af903a57addbe37ca117da8d96", "html_url": "https://github.com/rust-lang/rust/commit/e5318f3f9b9797af903a57addbe37ca117da8d96", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e5318f3f9b9797af903a57addbe37ca117da8d96/comments", "author": {"login": "lqd", "id": 247183, "node_id": "MDQ6VXNlcjI0NzE4Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/247183?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lqd", "html_url": "https://github.com/lqd", "followers_url": "https://api.github.com/users/lqd/followers", "following_url": "https://api.github.com/users/lqd/following{/other_user}", "gists_url": "https://api.github.com/users/lqd/gists{/gist_id}", "starred_url": "https://api.github.com/users/lqd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lqd/subscriptions", "organizations_url": "https://api.github.com/users/lqd/orgs", "repos_url": "https://api.github.com/users/lqd/repos", "events_url": "https://api.github.com/users/lqd/events{/privacy}", "received_events_url": "https://api.github.com/users/lqd/received_events", "type": "User", "site_admin": false}, "committer": {"login": "lqd", "id": 247183, "node_id": "MDQ6VXNlcjI0NzE4Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/247183?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lqd", "html_url": "https://github.com/lqd", "followers_url": "https://api.github.com/users/lqd/followers", "following_url": "https://api.github.com/users/lqd/following{/other_user}", "gists_url": "https://api.github.com/users/lqd/gists{/gist_id}", "starred_url": "https://api.github.com/users/lqd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lqd/subscriptions", "organizations_url": "https://api.github.com/users/lqd/orgs", "repos_url": "https://api.github.com/users/lqd/repos", "events_url": "https://api.github.com/users/lqd/events{/privacy}", "received_events_url": "https://api.github.com/users/lqd/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c075e245de4eee21b1c32785271eabf05359ab09", "url": "https://api.github.com/repos/rust-lang/rust/commits/c075e245de4eee21b1c32785271eabf05359ab09", "html_url": "https://github.com/rust-lang/rust/commit/c075e245de4eee21b1c32785271eabf05359ab09"}], "stats": {"total": 1, "additions": 0, "deletions": 1}, "files": [{"sha": "8981c542961e273b5b970dca8dffe33184e05f4e", "filename": "src/librustc_codegen_utils/codegen_backend.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/e5318f3f9b9797af903a57addbe37ca117da8d96/src%2Flibrustc_codegen_utils%2Fcodegen_backend.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e5318f3f9b9797af903a57addbe37ca117da8d96/src%2Flibrustc_codegen_utils%2Fcodegen_backend.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_utils%2Fcodegen_backend.rs?ref=e5318f3f9b9797af903a57addbe37ca117da8d96", "patch": "@@ -144,7 +144,6 @@ impl CodegenBackend for MetadataOnlyCodegenBackend {\n             if let MonoItem::Fn(inst) = mono_item {\n                 let def_id = inst.def_id();\n                 if def_id.is_local() {\n-                    let _ = inst.def.is_inline(tcx);\n                     let _ = tcx.codegen_fn_attrs(def_id);\n                 }\n             }"}]}