{"sha": "407d1d5fd4a81b2bc717fc86475209eb59d50fb8", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQwN2QxZDVmZDRhODFiMmJjNzE3ZmM4NjQ3NTIwOWViNTlkNTBmYjg=", "commit": {"author": {"name": "Adam Perry", "email": "adam.n.perry@gmail.com", "date": "2019-10-10T14:31:22Z"}, "committer": {"name": "Adam Perry", "email": "adam.n.perry@gmail.com", "date": "2019-10-10T14:31:22Z"}, "message": "Instance::resolve_for_fn_ptr unconditionally resolves first.\n\nPer review feedback.", "tree": {"sha": "94c5502fad585e23fcdaa78d9a0749a949fee502", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/94c5502fad585e23fcdaa78d9a0749a949fee502"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/407d1d5fd4a81b2bc717fc86475209eb59d50fb8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/407d1d5fd4a81b2bc717fc86475209eb59d50fb8", "html_url": "https://github.com/rust-lang/rust/commit/407d1d5fd4a81b2bc717fc86475209eb59d50fb8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/407d1d5fd4a81b2bc717fc86475209eb59d50fb8/comments", "author": {"login": "anp", "id": 6812281, "node_id": "MDQ6VXNlcjY4MTIyODE=", "avatar_url": "https://avatars.githubusercontent.com/u/6812281?v=4", "gravatar_id": "", "url": "https://api.github.com/users/anp", "html_url": "https://github.com/anp", "followers_url": "https://api.github.com/users/anp/followers", "following_url": "https://api.github.com/users/anp/following{/other_user}", "gists_url": "https://api.github.com/users/anp/gists{/gist_id}", "starred_url": "https://api.github.com/users/anp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/anp/subscriptions", "organizations_url": "https://api.github.com/users/anp/orgs", "repos_url": "https://api.github.com/users/anp/repos", "events_url": "https://api.github.com/users/anp/events{/privacy}", "received_events_url": "https://api.github.com/users/anp/received_events", "type": "User", "site_admin": false}, "committer": {"login": "anp", "id": 6812281, "node_id": "MDQ6VXNlcjY4MTIyODE=", "avatar_url": "https://avatars.githubusercontent.com/u/6812281?v=4", "gravatar_id": "", "url": "https://api.github.com/users/anp", "html_url": "https://github.com/anp", "followers_url": "https://api.github.com/users/anp/followers", "following_url": "https://api.github.com/users/anp/following{/other_user}", "gists_url": "https://api.github.com/users/anp/gists{/gist_id}", "starred_url": "https://api.github.com/users/anp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/anp/subscriptions", "organizations_url": "https://api.github.com/users/anp/orgs", "repos_url": "https://api.github.com/users/anp/repos", "events_url": "https://api.github.com/users/anp/events{/privacy}", "received_events_url": "https://api.github.com/users/anp/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1cdd5d099d3a8da42db6fbd259d3f757bccb961f", "url": "https://api.github.com/repos/rust-lang/rust/commits/1cdd5d099d3a8da42db6fbd259d3f757bccb961f", "html_url": "https://github.com/rust-lang/rust/commit/1cdd5d099d3a8da42db6fbd259d3f757bccb961f"}], "stats": {"total": 22, "additions": 13, "deletions": 9}, "files": [{"sha": "0a86b0b41480227456de97e2c4aefa32db58356a", "filename": "src/librustc/ty/instance.rs", "status": "modified", "additions": 13, "deletions": 9, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/407d1d5fd4a81b2bc717fc86475209eb59d50fb8/src%2Flibrustc%2Fty%2Finstance.rs", "raw_url": "https://github.com/rust-lang/rust/raw/407d1d5fd4a81b2bc717fc86475209eb59d50fb8/src%2Flibrustc%2Fty%2Finstance.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Finstance.rs?ref=407d1d5fd4a81b2bc717fc86475209eb59d50fb8", "patch": "@@ -310,15 +310,19 @@ impl<'tcx> Instance<'tcx> {\n         substs: SubstsRef<'tcx>,\n     ) -> Option<Instance<'tcx>> {\n         debug!(\"resolve(def_id={:?}, substs={:?})\", def_id, substs);\n-        if tcx.codegen_fn_attrs(def_id).flags.contains(CodegenFnAttrFlags::TRACK_CALLER) {\n-            debug!(\" => fn pointer created for function with #[track_caller]\");\n-            Some(Instance {\n-                def: InstanceDef::ReifyShim(def_id),\n-                substs,\n-            })\n-        } else {\n-            Instance::resolve(tcx, param_env, def_id, substs)\n-        }\n+        Instance::resolve(tcx, param_env, def_id, substs).map(|resolved| {\n+            let resolved_def = resolved.def_id();\n+            let codegen_attrs = tcx.codegen_fn_attrs(resolved_def);\n+            if codegen_attrs.flags.contains(CodegenFnAttrFlags::TRACK_CALLER) {\n+                debug!(\" => fn pointer created for function with #[track_caller]\");\n+                Instance {\n+                    def: InstanceDef::ReifyShim(resolved_def),\n+                    substs,\n+                }\n+            } else {\n+                resolved\n+            }\n+        })\n     }\n \n     pub fn resolve_for_vtable("}]}