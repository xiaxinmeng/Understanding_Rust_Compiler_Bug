{"sha": "9599f3cc5430039b615bc5171be41a6733083dc0", "node_id": "C_kwDOAAsO6NoAKDk1OTlmM2NjNTQzMDAzOWI2MTViYzUxNzFiZTQxYTY3MzMwODNkYzA", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2023-03-18T11:04:21Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2023-03-18T11:04:21Z"}, "message": "Rollup merge of #107416 - czzrr:issue-80618, r=GuillaumeGomez\n\nError code E0794 for late-bound lifetime parameter error.\n\nThis PR addresses [#80618](https://github.com/rust-lang/rust/issues/80618).", "tree": {"sha": "47d18861bffc4761a2c33160c07fcdd02a2d93d0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/47d18861bffc4761a2c33160c07fcdd02a2d93d0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9599f3cc5430039b615bc5171be41a6733083dc0", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJkFZq1CRBK7hj4Ov3rIwAAjU8IAHonxZ7JgZYSFEchtJ7PAibU\nXaNgcphpkXXGe4YmomoVYBnh7LaQKJsdUNh+MyFN1b4vNtpc0hnQs+0IAjnIPVXG\nJM7ZVre8Dg4tjal3oOpnV3AED+6T/3RWGZ14STEZOiABfzSQOVjup32kjfCxlGNK\nRKYAsHAlMQc9c+nnR8zRyJqbzIkjf8S5oNq8RT/QaEHEsk92Tj6qkOYTwd3cM4m2\n98dZW9WwMjc4/sr9CM3j0CDVecujHMu7+zt9TvUXsU/l+PaQdCUzcPblfS4iRah8\nsfCCBMMqgbT1s491+s9jXpZMKWfHj8/jeBRZmtK9bBFjmgzGDgIfeeULcgsLKhY=\n=zfOt\n-----END PGP SIGNATURE-----\n", "payload": "tree 47d18861bffc4761a2c33160c07fcdd02a2d93d0\nparent df61fcaec1fdd3b949a7721abfaf37a8ca6e144c\nparent 75563cd7253bb72876c5c97ff2f7813dd1485bc5\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1679137461 +0100\ncommitter GitHub <noreply@github.com> 1679137461 +0100\n\nRollup merge of #107416 - czzrr:issue-80618, r=GuillaumeGomez\n\nError code E0794 for late-bound lifetime parameter error.\n\nThis PR addresses [#80618](https://github.com/rust-lang/rust/issues/80618).\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9599f3cc5430039b615bc5171be41a6733083dc0", "html_url": "https://github.com/rust-lang/rust/commit/9599f3cc5430039b615bc5171be41a6733083dc0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9599f3cc5430039b615bc5171be41a6733083dc0/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "df61fcaec1fdd3b949a7721abfaf37a8ca6e144c", "url": "https://api.github.com/repos/rust-lang/rust/commits/df61fcaec1fdd3b949a7721abfaf37a8ca6e144c", "html_url": "https://github.com/rust-lang/rust/commit/df61fcaec1fdd3b949a7721abfaf37a8ca6e144c"}, {"sha": "75563cd7253bb72876c5c97ff2f7813dd1485bc5", "url": "https://api.github.com/repos/rust-lang/rust/commits/75563cd7253bb72876c5c97ff2f7813dd1485bc5", "html_url": "https://github.com/rust-lang/rust/commit/75563cd7253bb72876c5c97ff2f7813dd1485bc5"}], "stats": {"total": 161, "additions": 126, "deletions": 35}, "files": [{"sha": "d104ff0891d34d06b95089a27cb19b78ce7853ed", "filename": "compiler/rustc_error_codes/src/error_codes.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/9599f3cc5430039b615bc5171be41a6733083dc0/compiler%2Frustc_error_codes%2Fsrc%2Ferror_codes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9599f3cc5430039b615bc5171be41a6733083dc0/compiler%2Frustc_error_codes%2Fsrc%2Ferror_codes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_error_codes%2Fsrc%2Ferror_codes.rs?ref=9599f3cc5430039b615bc5171be41a6733083dc0", "patch": "@@ -513,6 +513,7 @@ E0790: include_str!(\"./error_codes/E0790.md\"),\n E0791: include_str!(\"./error_codes/E0791.md\"),\n E0792: include_str!(\"./error_codes/E0792.md\"),\n E0793: include_str!(\"./error_codes/E0793.md\"),\n+E0794: include_str!(\"./error_codes/E0794.md\"),\n }\n \n // Undocumented removed error codes. Note that many removed error codes are documented."}, {"sha": "a33802885c00644762f370b176313767ff23ad8d", "filename": "compiler/rustc_error_codes/src/error_codes/E0794.md", "status": "added", "additions": 64, "deletions": 0, "changes": 64, "blob_url": "https://github.com/rust-lang/rust/blob/9599f3cc5430039b615bc5171be41a6733083dc0/compiler%2Frustc_error_codes%2Fsrc%2Ferror_codes%2FE0794.md", "raw_url": "https://github.com/rust-lang/rust/raw/9599f3cc5430039b615bc5171be41a6733083dc0/compiler%2Frustc_error_codes%2Fsrc%2Ferror_codes%2FE0794.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_error_codes%2Fsrc%2Ferror_codes%2FE0794.md?ref=9599f3cc5430039b615bc5171be41a6733083dc0", "patch": "@@ -0,0 +1,64 @@\n+A lifetime parameter of a function definition is called *late-bound* if it both:\n+\n+1. appears in an argument type\n+2. does not appear in a generic type constraint\n+\n+You cannot specify lifetime arguments for late-bound lifetime parameters.\n+\n+Erroneous code example:\n+\n+```compile_fail,E0794\n+fn foo<'a>(x: &'a str) -> &'a str { x }\n+let _ = foo::<'static>;\n+```\n+\n+The type of a concrete instance of a generic function is universally quantified\n+over late-bound lifetime parameters. This is because we want the function to\n+work for any lifetime substituted for the late-bound lifetime parameter, no\n+matter where the function is called. Consequently, it doesn't make sense to\n+specify arguments for late-bound lifetime parameters, since they are not\n+resolved until the function's call site(s).\n+\n+To fix the issue, remove the specified lifetime:\n+\n+```\n+fn foo<'a>(x: &'a str) -> &'a str { x }\n+let _ = foo;\n+```\n+\n+### Additional information\n+\n+Lifetime parameters that are not late-bound are called *early-bound*.\n+Confusion may arise from the fact that late-bound and early-bound\n+lifetime parameters are declared the same way in function definitions.\n+When referring to a function pointer type, universal quantification over\n+late-bound lifetime parameters can be made explicit:\n+\n+```\n+trait BarTrait<'a> {}\n+\n+struct Bar<'a> {\n+    s: &'a str\n+}\n+\n+impl<'a> BarTrait<'a> for Bar<'a> {}\n+\n+fn bar<'a, 'b, T>(x: &'a str, _t: T) -> &'a str\n+where T: BarTrait<'b>\n+{\n+    x\n+}\n+\n+let bar_fn: for<'a> fn(&'a str, Bar<'static>) -> &'a str = bar; // OK\n+let bar_fn2 = bar::<'static, Bar>; // Not allowed\n+let bar_fn3 = bar::<Bar>; // OK\n+```\n+\n+In the definition of `bar`, the lifetime parameter `'a` is late-bound, while\n+`'b` is early-bound. This is reflected in the type annotation for `bar_fn`,\n+where `'a` is universally quantified and `'b` is substituted by a specific\n+lifetime. It is not allowed to explicitly specify early-bound lifetime\n+arguments when late-bound lifetime parameters are present (as for `bar_fn2`,\n+see issue #42868: https://github.com/rust-lang/rust/issues/42868), although the\n+types that are constrained by early-bound parameters can be specified (as for\n+`bar_fn3`)."}, {"sha": "3b5c67de2390e69198ca0bde9b9676c2843cb973", "filename": "compiler/rustc_hir_analysis/src/astconv/generics.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9599f3cc5430039b615bc5171be41a6733083dc0/compiler%2Frustc_hir_analysis%2Fsrc%2Fastconv%2Fgenerics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9599f3cc5430039b615bc5171be41a6733083dc0/compiler%2Frustc_hir_analysis%2Fsrc%2Fastconv%2Fgenerics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir_analysis%2Fsrc%2Fastconv%2Fgenerics.rs?ref=9599f3cc5430039b615bc5171be41a6733083dc0", "patch": "@@ -612,7 +612,7 @@ pub(crate) fn prohibit_explicit_late_bound_lifetimes(\n         if position == GenericArgPosition::Value\n             && args.num_lifetime_params() != param_counts.lifetimes\n         {\n-            let mut err = tcx.sess.struct_span_err(span, msg);\n+            let mut err = struct_span_err!(tcx.sess, span, E0794, \"{}\", msg);\n             err.span_note(span_late, note);\n             err.emit();\n         } else {"}, {"sha": "463a37d7e3d1357f3c4d6d8d63c9ff8a3c15aa11", "filename": "tests/ui/const-generics/const-arg-in-const-arg.full.stderr", "status": "modified", "additions": 9, "deletions": 8, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/9599f3cc5430039b615bc5171be41a6733083dc0/tests%2Fui%2Fconst-generics%2Fconst-arg-in-const-arg.full.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9599f3cc5430039b615bc5171be41a6733083dc0/tests%2Fui%2Fconst-generics%2Fconst-arg-in-const-arg.full.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fconst-generics%2Fconst-arg-in-const-arg.full.stderr?ref=9599f3cc5430039b615bc5171be41a6733083dc0", "patch": "@@ -1,4 +1,4 @@\n-error: cannot specify lifetime arguments explicitly if late bound lifetime parameters are present\n+error[E0794]: cannot specify lifetime arguments explicitly if late bound lifetime parameters are present\n   --> $DIR/const-arg-in-const-arg.rs:18:23\n    |\n LL |     let _: [u8; faz::<'a>(&())];\n@@ -10,7 +10,7 @@ note: the late bound lifetime parameter is introduced here\n LL | const fn faz<'a>(_: &'a ()) -> usize { 13 }\n    |              ^^\n \n-error: cannot specify lifetime arguments explicitly if late bound lifetime parameters are present\n+error[E0794]: cannot specify lifetime arguments explicitly if late bound lifetime parameters are present\n   --> $DIR/const-arg-in-const-arg.rs:21:23\n    |\n LL |     let _: [u8; faz::<'b>(&())];\n@@ -22,7 +22,7 @@ note: the late bound lifetime parameter is introduced here\n LL | const fn faz<'a>(_: &'a ()) -> usize { 13 }\n    |              ^^\n \n-error: cannot specify lifetime arguments explicitly if late bound lifetime parameters are present\n+error[E0794]: cannot specify lifetime arguments explicitly if late bound lifetime parameters are present\n   --> $DIR/const-arg-in-const-arg.rs:41:24\n    |\n LL |     let _: Foo<{ faz::<'a>(&()) }>;\n@@ -34,7 +34,7 @@ note: the late bound lifetime parameter is introduced here\n LL | const fn faz<'a>(_: &'a ()) -> usize { 13 }\n    |              ^^\n \n-error: cannot specify lifetime arguments explicitly if late bound lifetime parameters are present\n+error[E0794]: cannot specify lifetime arguments explicitly if late bound lifetime parameters are present\n   --> $DIR/const-arg-in-const-arg.rs:44:24\n    |\n LL |     let _: Foo<{ faz::<'b>(&()) }>;\n@@ -94,7 +94,7 @@ LL |     let _ = [0; bar::<N>()];\n    |\n    = help: try adding a `where` bound using this expression: `where [(); bar::<N>()]:`\n \n-error: cannot specify lifetime arguments explicitly if late bound lifetime parameters are present\n+error[E0794]: cannot specify lifetime arguments explicitly if late bound lifetime parameters are present\n   --> $DIR/const-arg-in-const-arg.rs:30:23\n    |\n LL |     let _ = [0; faz::<'a>(&())];\n@@ -106,7 +106,7 @@ note: the late bound lifetime parameter is introduced here\n LL | const fn faz<'a>(_: &'a ()) -> usize { 13 }\n    |              ^^\n \n-error: cannot specify lifetime arguments explicitly if late bound lifetime parameters are present\n+error[E0794]: cannot specify lifetime arguments explicitly if late bound lifetime parameters are present\n   --> $DIR/const-arg-in-const-arg.rs:33:23\n    |\n LL |     let _ = [0; faz::<'b>(&())];\n@@ -134,7 +134,7 @@ LL |     let _ = Foo::<{ bar::<N>() }>;\n    |\n    = help: try adding a `where` bound using this expression: `where [(); { bar::<N>() }]:`\n \n-error: cannot specify lifetime arguments explicitly if late bound lifetime parameters are present\n+error[E0794]: cannot specify lifetime arguments explicitly if late bound lifetime parameters are present\n   --> $DIR/const-arg-in-const-arg.rs:52:27\n    |\n LL |     let _ = Foo::<{ faz::<'a>(&()) }>;\n@@ -146,7 +146,7 @@ note: the late bound lifetime parameter is introduced here\n LL | const fn faz<'a>(_: &'a ()) -> usize { 13 }\n    |              ^^\n \n-error: cannot specify lifetime arguments explicitly if late bound lifetime parameters are present\n+error[E0794]: cannot specify lifetime arguments explicitly if late bound lifetime parameters are present\n   --> $DIR/const-arg-in-const-arg.rs:55:27\n    |\n LL |     let _ = Foo::<{ faz::<'b>(&()) }>;\n@@ -160,3 +160,4 @@ LL | const fn faz<'a>(_: &'a ()) -> usize { 13 }\n \n error: aborting due to 16 previous errors\n \n+For more information about this error, try `rustc --explain E0794`."}, {"sha": "a7bd9c62b0ee36ba1d9f52a18a479b15fd93759d", "filename": "tests/ui/const-generics/const-arg-in-const-arg.min.stderr", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/9599f3cc5430039b615bc5171be41a6733083dc0/tests%2Fui%2Fconst-generics%2Fconst-arg-in-const-arg.min.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9599f3cc5430039b615bc5171be41a6733083dc0/tests%2Fui%2Fconst-generics%2Fconst-arg-in-const-arg.min.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fconst-generics%2Fconst-arg-in-const-arg.min.stderr?ref=9599f3cc5430039b615bc5171be41a6733083dc0", "patch": "@@ -216,7 +216,7 @@ help: if this generic argument was intended as a const parameter, surround it wi\n LL |     let _: [u8; bar::<{ N }>()];\n    |                       +   +\n \n-error: cannot specify lifetime arguments explicitly if late bound lifetime parameters are present\n+error[E0794]: cannot specify lifetime arguments explicitly if late bound lifetime parameters are present\n   --> $DIR/const-arg-in-const-arg.rs:18:23\n    |\n LL |     let _: [u8; faz::<'a>(&())];\n@@ -228,7 +228,7 @@ note: the late bound lifetime parameter is introduced here\n LL | const fn faz<'a>(_: &'a ()) -> usize { 13 }\n    |              ^^\n \n-error: cannot specify lifetime arguments explicitly if late bound lifetime parameters are present\n+error[E0794]: cannot specify lifetime arguments explicitly if late bound lifetime parameters are present\n   --> $DIR/const-arg-in-const-arg.rs:21:23\n    |\n LL |     let _: [u8; faz::<'b>(&())];\n@@ -251,7 +251,7 @@ help: if this generic argument was intended as a const parameter, surround it wi\n LL |     let _: Foo<{ bar::<{ N }>() }>;\n    |                        +   +\n \n-error: cannot specify lifetime arguments explicitly if late bound lifetime parameters are present\n+error[E0794]: cannot specify lifetime arguments explicitly if late bound lifetime parameters are present\n   --> $DIR/const-arg-in-const-arg.rs:41:24\n    |\n LL |     let _: Foo<{ faz::<'a>(&()) }>;\n@@ -263,7 +263,7 @@ note: the late bound lifetime parameter is introduced here\n LL | const fn faz<'a>(_: &'a ()) -> usize { 13 }\n    |              ^^\n \n-error: cannot specify lifetime arguments explicitly if late bound lifetime parameters are present\n+error[E0794]: cannot specify lifetime arguments explicitly if late bound lifetime parameters are present\n   --> $DIR/const-arg-in-const-arg.rs:44:24\n    |\n LL |     let _: Foo<{ faz::<'b>(&()) }>;\n@@ -294,7 +294,7 @@ help: if this generic argument was intended as a const parameter, surround it wi\n LL |     let _ = [0; bar::<{ N }>()];\n    |                       +   +\n \n-error: cannot specify lifetime arguments explicitly if late bound lifetime parameters are present\n+error[E0794]: cannot specify lifetime arguments explicitly if late bound lifetime parameters are present\n   --> $DIR/const-arg-in-const-arg.rs:30:23\n    |\n LL |     let _ = [0; faz::<'a>(&())];\n@@ -306,7 +306,7 @@ note: the late bound lifetime parameter is introduced here\n LL | const fn faz<'a>(_: &'a ()) -> usize { 13 }\n    |              ^^\n \n-error: cannot specify lifetime arguments explicitly if late bound lifetime parameters are present\n+error[E0794]: cannot specify lifetime arguments explicitly if late bound lifetime parameters are present\n   --> $DIR/const-arg-in-const-arg.rs:33:23\n    |\n LL |     let _ = [0; faz::<'b>(&())];\n@@ -329,7 +329,7 @@ help: if this generic argument was intended as a const parameter, surround it wi\n LL |     let _ = Foo::<{ bar::<{ N }>() }>;\n    |                           +   +\n \n-error: cannot specify lifetime arguments explicitly if late bound lifetime parameters are present\n+error[E0794]: cannot specify lifetime arguments explicitly if late bound lifetime parameters are present\n   --> $DIR/const-arg-in-const-arg.rs:52:27\n    |\n LL |     let _ = Foo::<{ faz::<'a>(&()) }>;\n@@ -341,7 +341,7 @@ note: the late bound lifetime parameter is introduced here\n LL | const fn faz<'a>(_: &'a ()) -> usize { 13 }\n    |              ^^\n \n-error: cannot specify lifetime arguments explicitly if late bound lifetime parameters are present\n+error[E0794]: cannot specify lifetime arguments explicitly if late bound lifetime parameters are present\n   --> $DIR/const-arg-in-const-arg.rs:55:27\n    |\n LL |     let _ = Foo::<{ faz::<'b>(&()) }>;\n@@ -355,5 +355,5 @@ LL | const fn faz<'a>(_: &'a ()) -> usize { 13 }\n \n error: aborting due to 36 previous errors\n \n-Some errors have detailed explanations: E0658, E0747.\n+Some errors have detailed explanations: E0658, E0747, E0794.\n For more information about an error, try `rustc --explain E0658`."}, {"sha": "6aa8ff461a9a92434cb9272087cc3cdced91adf3", "filename": "tests/ui/late-bound-lifetimes/issue-80618.rs", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/9599f3cc5430039b615bc5171be41a6733083dc0/tests%2Fui%2Flate-bound-lifetimes%2Fissue-80618.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9599f3cc5430039b615bc5171be41a6733083dc0/tests%2Fui%2Flate-bound-lifetimes%2Fissue-80618.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Flate-bound-lifetimes%2Fissue-80618.rs?ref=9599f3cc5430039b615bc5171be41a6733083dc0", "patch": "@@ -0,0 +1,8 @@\n+fn foo<'a>(x: &'a str) -> &'a str {\n+    x\n+}\n+\n+fn main() {\n+    let _ = foo::<'static>;\n+//~^ ERROR cannot specify lifetime arguments explicitly if late bound lifetime parameters are present [E0794]\n+}"}, {"sha": "cf7423fc16feb43b59680d311bd4d725f67de0de", "filename": "tests/ui/late-bound-lifetimes/issue-80618.stderr", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/9599f3cc5430039b615bc5171be41a6733083dc0/tests%2Fui%2Flate-bound-lifetimes%2Fissue-80618.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9599f3cc5430039b615bc5171be41a6733083dc0/tests%2Fui%2Flate-bound-lifetimes%2Fissue-80618.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Flate-bound-lifetimes%2Fissue-80618.stderr?ref=9599f3cc5430039b615bc5171be41a6733083dc0", "patch": "@@ -0,0 +1,15 @@\n+error[E0794]: cannot specify lifetime arguments explicitly if late bound lifetime parameters are present\n+  --> $DIR/issue-80618.rs:6:19\n+   |\n+LL |     let _ = foo::<'static>;\n+   |                   ^^^^^^^\n+   |\n+note: the late bound lifetime parameter is introduced here\n+  --> $DIR/issue-80618.rs:1:8\n+   |\n+LL | fn foo<'a>(x: &'a str) -> &'a str {\n+   |        ^^\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0794`."}, {"sha": "645d8b8d14ad2c2d986d277eaaa793017532121e", "filename": "tests/ui/methods/method-call-lifetime-args-fail.stderr", "status": "modified", "additions": 16, "deletions": 15, "changes": 31, "blob_url": "https://github.com/rust-lang/rust/blob/9599f3cc5430039b615bc5171be41a6733083dc0/tests%2Fui%2Fmethods%2Fmethod-call-lifetime-args-fail.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9599f3cc5430039b615bc5171be41a6733083dc0/tests%2Fui%2Fmethods%2Fmethod-call-lifetime-args-fail.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmethods%2Fmethod-call-lifetime-args-fail.stderr?ref=9599f3cc5430039b615bc5171be41a6733083dc0", "patch": "@@ -30,7 +30,7 @@ note: method defined here, with 2 lifetime parameters: `'a`, `'b`\n LL |     fn early<'a, 'b>(self) -> (&'a u8, &'b u8) { loop {} }\n    |        ^^^^^ --  --\n \n-error: cannot specify lifetime arguments explicitly if late bound lifetime parameters are present\n+error[E0794]: cannot specify lifetime arguments explicitly if late bound lifetime parameters are present\n   --> $DIR/method-call-lifetime-args-fail.rs:27:15\n    |\n LL |     S::late::<'static>(S, &0, &0);\n@@ -42,7 +42,7 @@ note: the late bound lifetime parameter is introduced here\n LL |     fn late<'a, 'b>(self, _: &'a u8, _: &'b u8) {}\n    |             ^^\n \n-error: cannot specify lifetime arguments explicitly if late bound lifetime parameters are present\n+error[E0794]: cannot specify lifetime arguments explicitly if late bound lifetime parameters are present\n   --> $DIR/method-call-lifetime-args-fail.rs:29:15\n    |\n LL |     S::late::<'static, 'static>(S, &0, &0);\n@@ -54,7 +54,7 @@ note: the late bound lifetime parameter is introduced here\n LL |     fn late<'a, 'b>(self, _: &'a u8, _: &'b u8) {}\n    |             ^^\n \n-error: cannot specify lifetime arguments explicitly if late bound lifetime parameters are present\n+error[E0794]: cannot specify lifetime arguments explicitly if late bound lifetime parameters are present\n   --> $DIR/method-call-lifetime-args-fail.rs:31:15\n    |\n LL |     S::late::<'static, 'static, 'static>(S, &0, &0);\n@@ -66,7 +66,7 @@ note: the late bound lifetime parameter is introduced here\n LL |     fn late<'a, 'b>(self, _: &'a u8, _: &'b u8) {}\n    |             ^^\n \n-error: cannot specify lifetime arguments explicitly if late bound lifetime parameters are present\n+error[E0794]: cannot specify lifetime arguments explicitly if late bound lifetime parameters are present\n   --> $DIR/method-call-lifetime-args-fail.rs:34:21\n    |\n LL |     S::late_early::<'static, 'static>(S, &0);\n@@ -78,7 +78,7 @@ note: the late bound lifetime parameter is introduced here\n LL |     fn late_early<'a, 'b>(self, _: &'a u8) -> &'b u8 { loop {} }\n    |                   ^^\n \n-error: cannot specify lifetime arguments explicitly if late bound lifetime parameters are present\n+error[E0794]: cannot specify lifetime arguments explicitly if late bound lifetime parameters are present\n   --> $DIR/method-call-lifetime-args-fail.rs:36:21\n    |\n LL |     S::late_early::<'static, 'static, 'static>(S, &0);\n@@ -90,7 +90,7 @@ note: the late bound lifetime parameter is introduced here\n LL |     fn late_early<'a, 'b>(self, _: &'a u8) -> &'b u8 { loop {} }\n    |                   ^^\n \n-error: cannot specify lifetime arguments explicitly if late bound lifetime parameters are present\n+error[E0794]: cannot specify lifetime arguments explicitly if late bound lifetime parameters are present\n   --> $DIR/method-call-lifetime-args-fail.rs:40:24\n    |\n LL |     S::late_implicit::<'static>(S, &0, &0);\n@@ -102,7 +102,7 @@ note: the late bound lifetime parameter is introduced here\n LL |     fn late_implicit(self, _: &u8, _: &u8) {}\n    |                               ^\n \n-error: cannot specify lifetime arguments explicitly if late bound lifetime parameters are present\n+error[E0794]: cannot specify lifetime arguments explicitly if late bound lifetime parameters are present\n   --> $DIR/method-call-lifetime-args-fail.rs:42:24\n    |\n LL |     S::late_implicit::<'static, 'static>(S, &0, &0);\n@@ -114,7 +114,7 @@ note: the late bound lifetime parameter is introduced here\n LL |     fn late_implicit(self, _: &u8, _: &u8) {}\n    |                               ^\n \n-error: cannot specify lifetime arguments explicitly if late bound lifetime parameters are present\n+error[E0794]: cannot specify lifetime arguments explicitly if late bound lifetime parameters are present\n   --> $DIR/method-call-lifetime-args-fail.rs:44:24\n    |\n LL |     S::late_implicit::<'static, 'static, 'static>(S, &0, &0);\n@@ -126,7 +126,7 @@ note: the late bound lifetime parameter is introduced here\n LL |     fn late_implicit(self, _: &u8, _: &u8) {}\n    |                               ^\n \n-error: cannot specify lifetime arguments explicitly if late bound lifetime parameters are present\n+error[E0794]: cannot specify lifetime arguments explicitly if late bound lifetime parameters are present\n   --> $DIR/method-call-lifetime-args-fail.rs:47:30\n    |\n LL |     S::late_implicit_early::<'static, 'static>(S, &0);\n@@ -138,7 +138,7 @@ note: the late bound lifetime parameter is introduced here\n LL |     fn late_implicit_early<'b>(self, _: &u8) -> &'b u8 { loop {} }\n    |                                         ^\n \n-error: cannot specify lifetime arguments explicitly if late bound lifetime parameters are present\n+error[E0794]: cannot specify lifetime arguments explicitly if late bound lifetime parameters are present\n   --> $DIR/method-call-lifetime-args-fail.rs:49:30\n    |\n LL |     S::late_implicit_early::<'static, 'static, 'static>(S, &0);\n@@ -150,7 +150,7 @@ note: the late bound lifetime parameter is introduced here\n LL |     fn late_implicit_early<'b>(self, _: &u8) -> &'b u8 { loop {} }\n    |                                         ^\n \n-error: cannot specify lifetime arguments explicitly if late bound lifetime parameters are present\n+error[E0794]: cannot specify lifetime arguments explicitly if late bound lifetime parameters are present\n   --> $DIR/method-call-lifetime-args-fail.rs:52:35\n    |\n LL |     S::late_implicit_self_early::<'static, 'static>(&S);\n@@ -162,7 +162,7 @@ note: the late bound lifetime parameter is introduced here\n LL |     fn late_implicit_self_early<'b>(&self) -> &'b u8 { loop {} }\n    |                                     ^\n \n-error: cannot specify lifetime arguments explicitly if late bound lifetime parameters are present\n+error[E0794]: cannot specify lifetime arguments explicitly if late bound lifetime parameters are present\n   --> $DIR/method-call-lifetime-args-fail.rs:54:35\n    |\n LL |     S::late_implicit_self_early::<'static, 'static, 'static>(&S);\n@@ -174,7 +174,7 @@ note: the late bound lifetime parameter is introduced here\n LL |     fn late_implicit_self_early<'b>(&self) -> &'b u8 { loop {} }\n    |                                     ^\n \n-error: cannot specify lifetime arguments explicitly if late bound lifetime parameters are present\n+error[E0794]: cannot specify lifetime arguments explicitly if late bound lifetime parameters are present\n   --> $DIR/method-call-lifetime-args-fail.rs:57:28\n    |\n LL |     S::late_unused_early::<'static, 'static>(S);\n@@ -186,7 +186,7 @@ note: the late bound lifetime parameter is introduced here\n LL |     fn late_unused_early<'a, 'b>(self) -> &'b u8 { loop {} }\n    |                          ^^\n \n-error: cannot specify lifetime arguments explicitly if late bound lifetime parameters are present\n+error[E0794]: cannot specify lifetime arguments explicitly if late bound lifetime parameters are present\n   --> $DIR/method-call-lifetime-args-fail.rs:59:28\n    |\n LL |     S::late_unused_early::<'static, 'static, 'static>(S);\n@@ -232,4 +232,5 @@ LL |     fn early<'a, 'b>(self) -> (&'a u8, &'b u8) { loop {} }\n \n error: aborting due to 18 previous errors\n \n-For more information about this error, try `rustc --explain E0107`.\n+Some errors have detailed explanations: E0107, E0794.\n+For more information about an error, try `rustc --explain E0107`."}, {"sha": "b215d5832171f6192ccc250f51dc5e0783f27f1b", "filename": "tests/ui/methods/method-call-lifetime-args.stderr", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/9599f3cc5430039b615bc5171be41a6733083dc0/tests%2Fui%2Fmethods%2Fmethod-call-lifetime-args.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9599f3cc5430039b615bc5171be41a6733083dc0/tests%2Fui%2Fmethods%2Fmethod-call-lifetime-args.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmethods%2Fmethod-call-lifetime-args.stderr?ref=9599f3cc5430039b615bc5171be41a6733083dc0", "patch": "@@ -1,4 +1,4 @@\n-error: cannot specify lifetime arguments explicitly if late bound lifetime parameters are present\n+error[E0794]: cannot specify lifetime arguments explicitly if late bound lifetime parameters are present\n   --> $DIR/method-call-lifetime-args.rs:9:15\n    |\n LL |     S::late::<'static>(S, &0, &0);\n@@ -10,7 +10,7 @@ note: the late bound lifetime parameter is introduced here\n LL |     fn late<'a, 'b>(self, _: &'a u8, _: &'b u8) {}\n    |             ^^\n \n-error: cannot specify lifetime arguments explicitly if late bound lifetime parameters are present\n+error[E0794]: cannot specify lifetime arguments explicitly if late bound lifetime parameters are present\n   --> $DIR/method-call-lifetime-args.rs:11:24\n    |\n LL |     S::late_implicit::<'static>(S, &0, &0);\n@@ -24,3 +24,4 @@ LL |     fn late_implicit(self, _: &u8, _: &u8) {}\n \n error: aborting due to 2 previous errors\n \n+For more information about this error, try `rustc --explain E0794`."}]}