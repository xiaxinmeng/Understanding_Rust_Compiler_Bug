{"sha": "669a8bcf8296b0a72659a85402caa20ebda4cfac", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY2OWE4YmNmODI5NmIwYTcyNjU5YTg1NDAyY2FhMjBlYmRhNGNmYWM=", "commit": {"author": {"name": "topecongiro", "email": "seuchida@gmail.com", "date": "2018-07-01T00:59:45Z"}, "committer": {"name": "topecongiro", "email": "seuchida@gmail.com", "date": "2018-07-01T00:59:45Z"}, "message": "Add a test for #2721", "tree": {"sha": "415548c93617eae9eb5b0879cb17d60e7eb26edf", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/415548c93617eae9eb5b0879cb17d60e7eb26edf"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/669a8bcf8296b0a72659a85402caa20ebda4cfac", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/669a8bcf8296b0a72659a85402caa20ebda4cfac", "html_url": "https://github.com/rust-lang/rust/commit/669a8bcf8296b0a72659a85402caa20ebda4cfac", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/669a8bcf8296b0a72659a85402caa20ebda4cfac/comments", "author": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "committer": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "888abbb0ec5db10e5117de12077c9a4b2cd3c417", "url": "https://api.github.com/repos/rust-lang/rust/commits/888abbb0ec5db10e5117de12077c9a4b2cd3c417", "html_url": "https://github.com/rust-lang/rust/commit/888abbb0ec5db10e5117de12077c9a4b2cd3c417"}], "stats": {"total": 64, "additions": 64, "deletions": 0}, "files": [{"sha": "b6ff049430dfd6b18bd3d01ee637b4a5b261518f", "filename": "tests/source/macro_rules.rs", "status": "modified", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/669a8bcf8296b0a72659a85402caa20ebda4cfac/tests%2Fsource%2Fmacro_rules.rs", "raw_url": "https://github.com/rust-lang/rust/raw/669a8bcf8296b0a72659a85402caa20ebda4cfac/tests%2Fsource%2Fmacro_rules.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Fmacro_rules.rs?ref=669a8bcf8296b0a72659a85402caa20ebda4cfac", "patch": "@@ -230,3 +230,35 @@ macro_rules! save_regs {\n              :::: \"intel\", \"volatile\");\n     };\n }\n+\n+// #2721\n+macro_rules! impl_as_byte_slice_arrays {\n+    ($n:expr,) => {};\n+    ($n:expr, $N:ident, $($NN:ident,)*) => {\n+        impl_as_byte_slice_arrays!($n - 1, $($NN,)*);\n+        \n+        impl<T> AsByteSliceMut for [T; $n] where [T]: AsByteSliceMut {\n+            fn as_byte_slice_mut(&mut self) -> &mut [u8] {\n+                self[..].as_byte_slice_mut()\n+            }\n+\n+            fn to_le(&mut self) {\n+                self[..].to_le()\n+            }\n+        }\n+    };\n+    (!div $n:expr,) => {};\n+    (!div $n:expr, $N:ident, $($NN:ident,)*) => {\n+        impl_as_byte_slice_arrays!(!div $n / 2, $($NN,)*);\n+\n+        impl<T> AsByteSliceMut for [T; $n] where [T]: AsByteSliceMut {\n+            fn as_byte_slice_mut(&mut self) -> &mut [u8] {\n+                self[..].as_byte_slice_mut()\n+            }\n+            \n+            fn to_le(&mut self) {\n+                self[..].to_le()\n+            }\n+        }\n+    };\n+}"}, {"sha": "41bc1420476739aeef535a1a363a85ea24768263", "filename": "tests/target/macro_rules.rs", "status": "modified", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/669a8bcf8296b0a72659a85402caa20ebda4cfac/tests%2Ftarget%2Fmacro_rules.rs", "raw_url": "https://github.com/rust-lang/rust/raw/669a8bcf8296b0a72659a85402caa20ebda4cfac/tests%2Ftarget%2Fmacro_rules.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fmacro_rules.rs?ref=669a8bcf8296b0a72659a85402caa20ebda4cfac", "patch": "@@ -271,3 +271,35 @@ macro_rules! save_regs {\n              :::: \"intel\", \"volatile\");\n     };\n }\n+\n+// #2721\n+macro_rules! impl_as_byte_slice_arrays {\n+    ($n:expr,) => {};\n+    ($n:expr, $N:ident, $($NN:ident,)*) => {\n+        impl_as_byte_slice_arrays!($n - 1, $($NN,)*);\n+\n+        impl<T> AsByteSliceMut for [T; $n] where [T]: AsByteSliceMut {\n+            fn as_byte_slice_mut(&mut self) -> &mut [u8] {\n+                self[..].as_byte_slice_mut()\n+            }\n+\n+            fn to_le(&mut self) {\n+                self[..].to_le()\n+            }\n+        }\n+    };\n+    (!div $n:expr,) => {};\n+    (!div $n:expr, $N:ident, $($NN:ident,)*) => {\n+        impl_as_byte_slice_arrays!(!div $n / 2, $($NN,)*);\n+\n+        impl<T> AsByteSliceMut for [T; $n] where [T]: AsByteSliceMut {\n+            fn as_byte_slice_mut(&mut self) -> &mut [u8] {\n+                self[..].as_byte_slice_mut()\n+            }\n+\n+            fn to_le(&mut self) {\n+                self[..].to_le()\n+            }\n+        }\n+    };\n+}"}]}