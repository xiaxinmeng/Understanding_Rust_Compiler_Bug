{"sha": "55c4057f55bac2c0f3a21fc82b4e28c12f5d85d3", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU1YzQwNTdmNTViYWMyYzBmM2EyMWZjODJiNGUyOGMxMmY1ZDg1ZDM=", "commit": {"author": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2020-07-20T02:12:37Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-07-20T02:12:37Z"}, "message": "Rollup merge of #74516 - lcnr:min-specialization-ice, r=matthewjasper\n\ndo not try fetching the ancestors of errored trait impls\n\nfixes #74483\n\nWhile building the specialization graph, we use `tcx.all_impls` which discards impls with incorrect self types,\nwe do however call `trait_def.ancestors` with these impls which caused an ICE as they aren't part of the\nspecialization graph.", "tree": {"sha": "6573a846f530faf2b1a95f4cf2b72915037b186a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6573a846f530faf2b1a95f4cf2b72915037b186a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/55c4057f55bac2c0f3a21fc82b4e28c12f5d85d3", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJfFP2VCRBK7hj4Ov3rIwAAdHIIAAXArdmOe1NVSszM+d5dlR9j\nS+Ir05Dg27OaNc4FBgoV64N/iv67GUu+OIX+70g/BvGdLxVjA+zddF+IaT16GSjD\nywOccPtgkw4ht5gIkeEkqxDiZvvLFWf5Bns1CsiaWutzh/Fqmp7wlJ/xLFoUXxmJ\nZxz1nv4MPzOatDr37zYKVKmNI8uXPXCMyBrJhf9omCSMvG2XZMD6y+R+euHrnpO5\nszIXtLiGFlVuyZwbOuJ88vALBTP5ypBArU047Ta5Kpmz21BiWaRThrD1FHdCT2lr\narQPP1qyKffG7BhUu3mWnYJ8nVCKEoRo+SFroLB20ypmg04kM7k8s+rlDHWZq7c=\n=Jrl5\n-----END PGP SIGNATURE-----\n", "payload": "tree 6573a846f530faf2b1a95f4cf2b72915037b186a\nparent 3981386b8e80e3ce35e70ffdac303c75d3771ea4\nparent 455e6140d81f48d99d43573382c67f804434a949\nauthor Manish Goregaokar <manishsmail@gmail.com> 1595211157 -0700\ncommitter GitHub <noreply@github.com> 1595211157 -0700\n\nRollup merge of #74516 - lcnr:min-specialization-ice, r=matthewjasper\n\ndo not try fetching the ancestors of errored trait impls\n\nfixes #74483\n\nWhile building the specialization graph, we use `tcx.all_impls` which discards impls with incorrect self types,\nwe do however call `trait_def.ancestors` with these impls which caused an ICE as they aren't part of the\nspecialization graph.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/55c4057f55bac2c0f3a21fc82b4e28c12f5d85d3", "html_url": "https://github.com/rust-lang/rust/commit/55c4057f55bac2c0f3a21fc82b4e28c12f5d85d3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/55c4057f55bac2c0f3a21fc82b4e28c12f5d85d3/comments", "author": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3981386b8e80e3ce35e70ffdac303c75d3771ea4", "url": "https://api.github.com/repos/rust-lang/rust/commits/3981386b8e80e3ce35e70ffdac303c75d3771ea4", "html_url": "https://github.com/rust-lang/rust/commit/3981386b8e80e3ce35e70ffdac303c75d3771ea4"}, {"sha": "455e6140d81f48d99d43573382c67f804434a949", "url": "https://api.github.com/repos/rust-lang/rust/commits/455e6140d81f48d99d43573382c67f804434a949", "html_url": "https://github.com/rust-lang/rust/commit/455e6140d81f48d99d43573382c67f804434a949"}], "stats": {"total": 20, "additions": 19, "deletions": 1}, "files": [{"sha": "c9aae8980076f1a81c3446a03b2d88b0c04fbb91", "filename": "src/librustc_middle/traits/specialization_graph.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/55c4057f55bac2c0f3a21fc82b4e28c12f5d85d3/src%2Flibrustc_middle%2Ftraits%2Fspecialization_graph.rs", "raw_url": "https://github.com/rust-lang/rust/raw/55c4057f55bac2c0f3a21fc82b4e28c12f5d85d3/src%2Flibrustc_middle%2Ftraits%2Fspecialization_graph.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_middle%2Ftraits%2Fspecialization_graph.rs?ref=55c4057f55bac2c0f3a21fc82b4e28c12f5d85d3", "patch": "@@ -1,5 +1,6 @@\n use crate::ich::{self, StableHashingContext};\n use crate::ty::fast_reject::SimplifiedType;\n+use crate::ty::fold::TypeFoldable;\n use crate::ty::{self, TyCtxt};\n use rustc_data_structures::fx::FxHashMap;\n use rustc_data_structures::stable_hasher::{HashStable, StableHasher};\n@@ -226,7 +227,8 @@ pub fn ancestors(\n     start_from_impl: DefId,\n ) -> Result<Ancestors<'tcx>, ErrorReported> {\n     let specialization_graph = tcx.specialization_graph_of(trait_def_id);\n-    if specialization_graph.has_errored {\n+\n+    if specialization_graph.has_errored || tcx.type_of(start_from_impl).references_error() {\n         Err(ErrorReported)\n     } else {\n         Ok(Ancestors {"}, {"sha": "77a64320d6f3758dab7e00868121f43da1b00830", "filename": "src/test/ui/specialization/min_specialization/impl-on-nonexisting.rs", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/55c4057f55bac2c0f3a21fc82b4e28c12f5d85d3/src%2Ftest%2Fui%2Fspecialization%2Fmin_specialization%2Fimpl-on-nonexisting.rs", "raw_url": "https://github.com/rust-lang/rust/raw/55c4057f55bac2c0f3a21fc82b4e28c12f5d85d3/src%2Ftest%2Fui%2Fspecialization%2Fmin_specialization%2Fimpl-on-nonexisting.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspecialization%2Fmin_specialization%2Fimpl-on-nonexisting.rs?ref=55c4057f55bac2c0f3a21fc82b4e28c12f5d85d3", "patch": "@@ -0,0 +1,7 @@\n+#![feature(min_specialization)]\n+\n+trait Trait {}\n+impl Trait for NonExistent {}\n+//~^ ERROR cannot find type `NonExistent` in this scope\n+\n+fn main() {}"}, {"sha": "b032ccbe53ffc258f9a65ab87dadee6540a25f36", "filename": "src/test/ui/specialization/min_specialization/impl-on-nonexisting.stderr", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/55c4057f55bac2c0f3a21fc82b4e28c12f5d85d3/src%2Ftest%2Fui%2Fspecialization%2Fmin_specialization%2Fimpl-on-nonexisting.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/55c4057f55bac2c0f3a21fc82b4e28c12f5d85d3/src%2Ftest%2Fui%2Fspecialization%2Fmin_specialization%2Fimpl-on-nonexisting.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspecialization%2Fmin_specialization%2Fimpl-on-nonexisting.stderr?ref=55c4057f55bac2c0f3a21fc82b4e28c12f5d85d3", "patch": "@@ -0,0 +1,9 @@\n+error[E0412]: cannot find type `NonExistent` in this scope\n+  --> $DIR/impl-on-nonexisting.rs:4:16\n+   |\n+LL | impl Trait for NonExistent {}\n+   |                ^^^^^^^^^^^ not found in this scope\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0412`."}]}