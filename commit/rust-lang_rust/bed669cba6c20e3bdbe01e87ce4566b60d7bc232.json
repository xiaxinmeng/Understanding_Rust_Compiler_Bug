{"sha": "bed669cba6c20e3bdbe01e87ce4566b60d7bc232", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJlZDY2OWNiYTZjMjBlM2JkYmUwMWU4N2NlNDU2NmI2MGQ3YmMyMzI=", "commit": {"author": {"name": "Tim Chevalier", "email": "chevalier@alum.wellesley.edu", "date": "2013-10-07T19:43:42Z"}, "committer": {"name": "Tim Chevalier", "email": "chevalier@alum.wellesley.edu", "date": "2013-10-08T01:06:30Z"}, "message": "syntax: Display spans for open delimiters when a file ends prematurely\n\nIt's more helpful to list the span of each open delimiter seen so far\nthan to print out an error with the span of the last position in the file.\n\nCloses #2354", "tree": {"sha": "f6037b755df1945af741b7ab183a9f45280f3eef", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f6037b755df1945af741b7ab183a9f45280f3eef"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bed669cba6c20e3bdbe01e87ce4566b60d7bc232", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bed669cba6c20e3bdbe01e87ce4566b60d7bc232", "html_url": "https://github.com/rust-lang/rust/commit/bed669cba6c20e3bdbe01e87ce4566b60d7bc232", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bed669cba6c20e3bdbe01e87ce4566b60d7bc232/comments", "author": {"login": "catamorphism", "id": 427212, "node_id": "MDQ6VXNlcjQyNzIxMg==", "avatar_url": "https://avatars.githubusercontent.com/u/427212?v=4", "gravatar_id": "", "url": "https://api.github.com/users/catamorphism", "html_url": "https://github.com/catamorphism", "followers_url": "https://api.github.com/users/catamorphism/followers", "following_url": "https://api.github.com/users/catamorphism/following{/other_user}", "gists_url": "https://api.github.com/users/catamorphism/gists{/gist_id}", "starred_url": "https://api.github.com/users/catamorphism/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/catamorphism/subscriptions", "organizations_url": "https://api.github.com/users/catamorphism/orgs", "repos_url": "https://api.github.com/users/catamorphism/repos", "events_url": "https://api.github.com/users/catamorphism/events{/privacy}", "received_events_url": "https://api.github.com/users/catamorphism/received_events", "type": "User", "site_admin": false}, "committer": {"login": "catamorphism", "id": 427212, "node_id": "MDQ6VXNlcjQyNzIxMg==", "avatar_url": "https://avatars.githubusercontent.com/u/427212?v=4", "gravatar_id": "", "url": "https://api.github.com/users/catamorphism", "html_url": "https://github.com/catamorphism", "followers_url": "https://api.github.com/users/catamorphism/followers", "following_url": "https://api.github.com/users/catamorphism/following{/other_user}", "gists_url": "https://api.github.com/users/catamorphism/gists{/gist_id}", "starred_url": "https://api.github.com/users/catamorphism/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/catamorphism/subscriptions", "organizations_url": "https://api.github.com/users/catamorphism/orgs", "repos_url": "https://api.github.com/users/catamorphism/repos", "events_url": "https://api.github.com/users/catamorphism/events{/privacy}", "received_events_url": "https://api.github.com/users/catamorphism/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8eb28bb7dcd77ac9e804ab2d75b387ca3f47f9d4", "url": "https://api.github.com/repos/rust-lang/rust/commits/8eb28bb7dcd77ac9e804ab2d75b387ca3f47f9d4", "html_url": "https://github.com/rust-lang/rust/commit/8eb28bb7dcd77ac9e804ab2d75b387ca3f47f9d4"}], "stats": {"total": 34, "additions": 25, "deletions": 9}, "files": [{"sha": "e9f55c62b6c55b3dbb32aea313ad8ff527d5b7cf", "filename": "src/libsyntax/parse/parser.rs", "status": "modified", "additions": 11, "deletions": 1, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/bed669cba6c20e3bdbe01e87ce4566b60d7bc232/src%2Flibsyntax%2Fparse%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bed669cba6c20e3bdbe01e87ce4566b60d7bc232/src%2Flibsyntax%2Fparse%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fparser.rs?ref=bed669cba6c20e3bdbe01e87ce4566b60d7bc232", "patch": "@@ -308,6 +308,7 @@ pub fn Parser(sess: @mut ParseSess,\n         quote_depth: @mut 0,\n         obsolete_set: @mut HashSet::new(),\n         mod_path_stack: @mut ~[],\n+        open_braces: @mut ~[]\n     }\n }\n \n@@ -336,6 +337,8 @@ pub struct Parser {\n     obsolete_set: @mut HashSet<ObsoleteSyntax>,\n     /// Used to determine the path to externally loaded source files\n     mod_path_stack: @mut ~[@str],\n+    /// Stack of spans of open delimiters. Used for error message.\n+    open_braces: @mut ~[@Span]\n }\n \n #[unsafe_destructor]\n@@ -2022,12 +2025,18 @@ impl Parser {\n \n         match *self.token {\n             token::EOF => {\n-                self.fatal(\"file ended with unbalanced delimiters\");\n+                for sp in self.open_braces.iter() {\n+                    self.span_note(**sp, \"Did you mean to close this delimiter?\");\n+                }\n+                // There shouldn't really be a span, but it's easier for the test runner\n+                // if we give it one\n+                self.fatal(\"This file contains an un-closed delimiter \");\n             }\n             token::LPAREN | token::LBRACE | token::LBRACKET => {\n                 let close_delim = token::flip_delimiter(&*self.token);\n \n                 // Parse the open delimiter.\n+                (*self.open_braces).push(@*self.span);\n                 let mut result = ~[parse_any_tt_tok(self)];\n \n                 let trees =\n@@ -2038,6 +2047,7 @@ impl Parser {\n \n                 // Parse the close delimiter.\n                 result.push(parse_any_tt_tok(self));\n+                self.open_braces.pop();\n \n                 tt_delim(@mut result)\n             }"}, {"sha": "67b5c6becc7413130a8883d14b46f356622ba204", "filename": "src/test/compile-fail/issue-2354-1.rs", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/bed669cba6c20e3bdbe01e87ce4566b60d7bc232/src%2Ftest%2Fcompile-fail%2Fissue-2354-1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bed669cba6c20e3bdbe01e87ce4566b60d7bc232/src%2Ftest%2Fcompile-fail%2Fissue-2354-1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-2354-1.rs?ref=bed669cba6c20e3bdbe01e87ce4566b60d7bc232", "patch": "@@ -0,0 +1,12 @@\n+// Copyright 2013 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+static foo: int = 2; } //~ ERROR incorrect close delimiter:\n+"}, {"sha": "9761bd3317c703f0f73cc8c333cdfa3d011282ed", "filename": "src/test/compile-fail/issue-2354.rs", "status": "modified", "additions": 2, "deletions": 8, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/bed669cba6c20e3bdbe01e87ce4566b60d7bc232/src%2Ftest%2Fcompile-fail%2Fissue-2354.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bed669cba6c20e3bdbe01e87ce4566b60d7bc232/src%2Ftest%2Fcompile-fail%2Fissue-2354.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-2354.rs?ref=bed669cba6c20e3bdbe01e87ce4566b60d7bc232", "patch": "@@ -8,13 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// xfail-test\n-/*\n-  Ideally, the error about the missing close brace in foo would be reported\n-  near the corresponding open brace. But currently it's reported at the end.\n-  xfailed for now (see Issue #2354)\n- */\n-fn foo() { //~ ERROR this open brace is not closed\n+fn foo() { //~ NOTE Did you mean to close this delimiter?\n   match Some(x) {\n       Some(y) { fail!(); }\n       None    { fail!(); }\n@@ -25,4 +19,4 @@ fn bar() {\n     while (i < 1000) {}\n }\n \n-fn main() {}\n+fn main() {} //~ ERROR This file contains an un-closed delimiter"}]}