{"sha": "5411cbf656b42ef1d8a95e9de1a50bea616f7c56", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU0MTFjYmY2NTZiNDJlZjFkOGE5NWU5ZGUxYTUwYmVhNjE2ZjdjNTY=", "commit": {"author": {"name": "John Clements", "email": "clements@racket-lang.org", "date": "2013-04-15T23:31:57Z"}, "committer": {"name": "John Clements", "email": "clements@racket-lang.org", "date": "2013-04-28T16:51:14Z"}, "message": "remove unused flag to parse_local fn", "tree": {"sha": "c4d0f70f12063672cd80a7a71b6309011cee5f60", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c4d0f70f12063672cd80a7a71b6309011cee5f60"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5411cbf656b42ef1d8a95e9de1a50bea616f7c56", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5411cbf656b42ef1d8a95e9de1a50bea616f7c56", "html_url": "https://github.com/rust-lang/rust/commit/5411cbf656b42ef1d8a95e9de1a50bea616f7c56", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5411cbf656b42ef1d8a95e9de1a50bea616f7c56/comments", "author": {"login": "jbclements", "id": 226617, "node_id": "MDQ6VXNlcjIyNjYxNw==", "avatar_url": "https://avatars.githubusercontent.com/u/226617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jbclements", "html_url": "https://github.com/jbclements", "followers_url": "https://api.github.com/users/jbclements/followers", "following_url": "https://api.github.com/users/jbclements/following{/other_user}", "gists_url": "https://api.github.com/users/jbclements/gists{/gist_id}", "starred_url": "https://api.github.com/users/jbclements/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jbclements/subscriptions", "organizations_url": "https://api.github.com/users/jbclements/orgs", "repos_url": "https://api.github.com/users/jbclements/repos", "events_url": "https://api.github.com/users/jbclements/events{/privacy}", "received_events_url": "https://api.github.com/users/jbclements/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jbclements", "id": 226617, "node_id": "MDQ6VXNlcjIyNjYxNw==", "avatar_url": "https://avatars.githubusercontent.com/u/226617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jbclements", "html_url": "https://github.com/jbclements", "followers_url": "https://api.github.com/users/jbclements/followers", "following_url": "https://api.github.com/users/jbclements/following{/other_user}", "gists_url": "https://api.github.com/users/jbclements/gists{/gist_id}", "starred_url": "https://api.github.com/users/jbclements/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jbclements/subscriptions", "organizations_url": "https://api.github.com/users/jbclements/orgs", "repos_url": "https://api.github.com/users/jbclements/repos", "events_url": "https://api.github.com/users/jbclements/events{/privacy}", "received_events_url": "https://api.github.com/users/jbclements/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "63397b8519c07a4714830a07368b1b044dbdac4b", "url": "https://api.github.com/repos/rust-lang/rust/commits/63397b8519c07a4714830a07368b1b044dbdac4b", "html_url": "https://github.com/rust-lang/rust/commit/63397b8519c07a4714830a07368b1b044dbdac4b"}], "stats": {"total": 9, "additions": 4, "deletions": 5}, "files": [{"sha": "b0a400085b1fbebb228cffeee8610f6132cd708b", "filename": "src/libsyntax/parse/parser.rs", "status": "modified", "additions": 4, "deletions": 5, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/5411cbf656b42ef1d8a95e9de1a50bea616f7c56/src%2Flibsyntax%2Fparse%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5411cbf656b42ef1d8a95e9de1a50bea616f7c56/src%2Flibsyntax%2Fparse%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fparser.rs?ref=5411cbf656b42ef1d8a95e9de1a50bea616f7c56", "patch": "@@ -2433,8 +2433,7 @@ pub impl Parser {\n     }\n \n     // parse a local variable declaration\n-    fn parse_local(&self, is_mutbl: bool,\n-                   allow_init: bool) -> @local {\n+    fn parse_local(&self, is_mutbl: bool) -> @local {\n         let lo = self.span.lo;\n         let pat = self.parse_pat(false);\n         let mut ty = @Ty {\n@@ -2443,7 +2442,7 @@ pub impl Parser {\n             span: mk_sp(lo, lo),\n         };\n         if self.eat(&token::COLON) { ty = self.parse_ty(false); }\n-        let init = if allow_init { self.parse_initializer() } else { None };\n+        let init = self.parse_initializer();\n         @spanned(\n             lo,\n             self.last_span.hi,\n@@ -2460,9 +2459,9 @@ pub impl Parser {\n     fn parse_let(&self) -> @decl {\n         let is_mutbl = self.eat_keyword(&~\"mut\");\n         let lo = self.span.lo;\n-        let mut locals = ~[self.parse_local(is_mutbl, true)];\n+        let mut locals = ~[self.parse_local(is_mutbl)];\n         while self.eat(&token::COMMA) {\n-            locals.push(self.parse_local(is_mutbl, true));\n+            locals.push(self.parse_local(is_mutbl));\n         }\n         return @spanned(lo, self.last_span.hi, decl_local(locals));\n     }"}]}