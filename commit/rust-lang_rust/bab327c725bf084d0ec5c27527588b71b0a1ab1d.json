{"sha": "bab327c725bf084d0ec5c27527588b71b0a1ab1d", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJhYjMyN2M3MjViZjA4NGQwZWM1YzI3NTI3NTg4YjcxYjBhMWFiMWQ=", "commit": {"author": {"name": "Bastian Kauschke", "email": "bastian_kauschke@hotmail.de", "date": "2020-03-31T16:42:54Z"}, "committer": {"name": "Bastian Kauschke", "email": "bastian_kauschke@hotmail.de", "date": "2020-03-31T17:01:49Z"}, "message": "update unused_braces wording", "tree": {"sha": "41391311c3f653286e6d9b9e70bdeb9de7b7e54a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/41391311c3f653286e6d9b9e70bdeb9de7b7e54a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bab327c725bf084d0ec5c27527588b71b0a1ab1d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bab327c725bf084d0ec5c27527588b71b0a1ab1d", "html_url": "https://github.com/rust-lang/rust/commit/bab327c725bf084d0ec5c27527588b71b0a1ab1d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bab327c725bf084d0ec5c27527588b71b0a1ab1d/comments", "author": {"login": "lcnr", "id": 29864074, "node_id": "MDQ6VXNlcjI5ODY0MDc0", "avatar_url": "https://avatars.githubusercontent.com/u/29864074?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lcnr", "html_url": "https://github.com/lcnr", "followers_url": "https://api.github.com/users/lcnr/followers", "following_url": "https://api.github.com/users/lcnr/following{/other_user}", "gists_url": "https://api.github.com/users/lcnr/gists{/gist_id}", "starred_url": "https://api.github.com/users/lcnr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lcnr/subscriptions", "organizations_url": "https://api.github.com/users/lcnr/orgs", "repos_url": "https://api.github.com/users/lcnr/repos", "events_url": "https://api.github.com/users/lcnr/events{/privacy}", "received_events_url": "https://api.github.com/users/lcnr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "lcnr", "id": 29864074, "node_id": "MDQ6VXNlcjI5ODY0MDc0", "avatar_url": "https://avatars.githubusercontent.com/u/29864074?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lcnr", "html_url": "https://github.com/lcnr", "followers_url": "https://api.github.com/users/lcnr/followers", "following_url": "https://api.github.com/users/lcnr/following{/other_user}", "gists_url": "https://api.github.com/users/lcnr/gists{/gist_id}", "starred_url": "https://api.github.com/users/lcnr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lcnr/subscriptions", "organizations_url": "https://api.github.com/users/lcnr/orgs", "repos_url": "https://api.github.com/users/lcnr/repos", "events_url": "https://api.github.com/users/lcnr/events{/privacy}", "received_events_url": "https://api.github.com/users/lcnr/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bcf35b1d8095625853fa6ae7fa435b662fc3241f", "url": "https://api.github.com/repos/rust-lang/rust/commits/bcf35b1d8095625853fa6ae7fa435b662fc3241f", "html_url": "https://github.com/rust-lang/rust/commit/bcf35b1d8095625853fa6ae7fa435b662fc3241f"}], "stats": {"total": 41, "additions": 20, "deletions": 21}, "files": [{"sha": "51f91aa6fb79288ac63d9fa89844a223be04740e", "filename": "src/librustc_lint/unused.rs", "status": "modified", "additions": 11, "deletions": 12, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/bab327c725bf084d0ec5c27527588b71b0a1ab1d/src%2Flibrustc_lint%2Funused.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bab327c725bf084d0ec5c27527588b71b0a1ab1d/src%2Flibrustc_lint%2Funused.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_lint%2Funused.rs?ref=bab327c725bf084d0ec5c27527588b71b0a1ab1d", "patch": "@@ -327,11 +327,11 @@ enum UnusedDelimsCtx {\n     AssignedValue,\n     IfCond,\n     WhileCond,\n-    ForHeadExpr,\n-    MatchHeadExpr,\n+    ForIterExpr,\n+    MatchScrutineeExpr,\n     ReturnValue,\n     BlockRetValue,\n-    LetHeadExpr,\n+    LetScrutineeExpr,\n     ArrayLenExpr,\n     AnonConst,\n }\n@@ -344,11 +344,11 @@ impl From<UnusedDelimsCtx> for &'static str {\n             UnusedDelimsCtx::AssignedValue => \"assigned value\",\n             UnusedDelimsCtx::IfCond => \"`if` condition\",\n             UnusedDelimsCtx::WhileCond => \"`while` condition\",\n-            UnusedDelimsCtx::ForHeadExpr => \"`for` head expression\",\n-            UnusedDelimsCtx::MatchHeadExpr => \"`match` head expression\",\n+            UnusedDelimsCtx::ForIterExpr => \"`for` iterator expression\",\n+            UnusedDelimsCtx::MatchScrutineeExpr => \"`match` scrutinee expression\",\n             UnusedDelimsCtx::ReturnValue => \"`return` value\",\n             UnusedDelimsCtx::BlockRetValue => \"block return value\",\n-            UnusedDelimsCtx::LetHeadExpr => \"`let` head expression\",\n+            UnusedDelimsCtx::LetScrutineeExpr => \"`let` scrutinee expression\",\n             UnusedDelimsCtx::ArrayLenExpr | UnusedDelimsCtx::AnonConst => \"const expression\",\n         }\n     }\n@@ -399,7 +399,6 @@ trait UnusedDelimLint {\n         self.emit_unused_delims(cx, value.span, &expr_text, ctx.into(), keep_space);\n     }\n \n-    /// emits a lint\n     fn emit_unused_delims(\n         &self,\n         cx: &EarlyContext<'_>,\n@@ -471,12 +470,12 @@ trait UnusedDelimLint {\n             }\n \n             ForLoop(_, ref cond, ref block, ..) => {\n-                (cond, UnusedDelimsCtx::ForHeadExpr, true, None, Some(block.span.lo()))\n+                (cond, UnusedDelimsCtx::ForIterExpr, true, None, Some(block.span.lo()))\n             }\n \n             Match(ref head, _) => {\n                 let left = e.span.lo() + rustc_span::BytePos(5);\n-                (head, UnusedDelimsCtx::MatchHeadExpr, true, Some(left), None)\n+                (head, UnusedDelimsCtx::MatchScrutineeExpr, true, Some(left), None)\n             }\n \n             Ret(Some(ref value)) => {\n@@ -597,7 +596,7 @@ impl UnusedDelimLint for UnusedParens {\n                 self.check_unused_delims_expr(\n                     cx,\n                     expr,\n-                    UnusedDelimsCtx::LetHeadExpr,\n+                    UnusedDelimsCtx::LetScrutineeExpr,\n                     followed_by_block,\n                     None,\n                     None,\n@@ -732,7 +731,7 @@ impl EarlyLintPass for UnusedParens {\n declare_lint! {\n     pub(super) UNUSED_BRACES,\n     Warn,\n-    \"suggests removing `{` and `}`  in case they are not necessary\"\n+    \"unnecessary braces around an expression\"\n }\n \n declare_lint_pass!(UnusedBraces => [UNUSED_BRACES]);\n@@ -804,7 +803,7 @@ impl UnusedDelimLint for UnusedBraces {\n                 self.check_unused_delims_expr(\n                     cx,\n                     expr,\n-                    UnusedDelimsCtx::LetHeadExpr,\n+                    UnusedDelimsCtx::LetScrutineeExpr,\n                     followed_by_block,\n                     None,\n                     None,"}, {"sha": "623cd04d9bce35ddb1a65209554ef1c3ee0648a8", "filename": "src/test/ui/lint/lint-unnecessary-parens.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/bab327c725bf084d0ec5c27527588b71b0a1ab1d/src%2Ftest%2Fui%2Flint%2Flint-unnecessary-parens.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bab327c725bf084d0ec5c27527588b71b0a1ab1d/src%2Ftest%2Fui%2Flint%2Flint-unnecessary-parens.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Flint-unnecessary-parens.rs?ref=bab327c725bf084d0ec5c27527588b71b0a1ab1d", "patch": "@@ -48,11 +48,11 @@ fn main() {\n     if (true) {} //~ ERROR unnecessary parentheses around `if` condition\n     while (true) {} //~ ERROR unnecessary parentheses around `while` condition\n     //~^ WARN denote infinite loops with\n-    match (true) { //~ ERROR unnecessary parentheses around `match` head expression\n+    match (true) { //~ ERROR unnecessary parentheses around `match` scrutinee expression\n         _ => {}\n     }\n-    if let 1 = (1) {} //~ ERROR unnecessary parentheses around `let` head expression\n-    while let 1 = (2) {} //~ ERROR unnecessary parentheses around `let` head expression\n+    if let 1 = (1) {} //~ ERROR unnecessary parentheses around `let` scrutinee expression\n+    while let 1 = (2) {} //~ ERROR unnecessary parentheses around `let` scrutinee expression\n     let v = X { y: false };\n     // struct lits needs parens, so these shouldn't warn.\n     if (v == X { y: true }) {}"}, {"sha": "15184ba36ae85b68887575223c2ea413753c4f2b", "filename": "src/test/ui/lint/lint-unnecessary-parens.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/bab327c725bf084d0ec5c27527588b71b0a1ab1d/src%2Ftest%2Fui%2Flint%2Flint-unnecessary-parens.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/bab327c725bf084d0ec5c27527588b71b0a1ab1d/src%2Ftest%2Fui%2Flint%2Flint-unnecessary-parens.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Flint-unnecessary-parens.stderr?ref=bab327c725bf084d0ec5c27527588b71b0a1ab1d", "patch": "@@ -72,19 +72,19 @@ LL |     while (true) {}\n    |\n    = note: `#[warn(while_true)]` on by default\n \n-error: unnecessary parentheses around `match` head expression\n+error: unnecessary parentheses around `match` scrutinee expression\n   --> $DIR/lint-unnecessary-parens.rs:51:11\n    |\n LL |     match (true) {\n    |           ^^^^^^ help: remove these parentheses\n \n-error: unnecessary parentheses around `let` head expression\n+error: unnecessary parentheses around `let` scrutinee expression\n   --> $DIR/lint-unnecessary-parens.rs:54:16\n    |\n LL |     if let 1 = (1) {}\n    |                ^^^ help: remove these parentheses\n \n-error: unnecessary parentheses around `let` head expression\n+error: unnecessary parentheses around `let` scrutinee expression\n   --> $DIR/lint-unnecessary-parens.rs:55:19\n    |\n LL |     while let 1 = (2) {}"}, {"sha": "72f425ffc3e01147e88c6cc2b1c529545ded8de2", "filename": "src/test/ui/lint/unused_braces.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bab327c725bf084d0ec5c27527588b71b0a1ab1d/src%2Ftest%2Fui%2Flint%2Funused_braces.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/bab327c725bf084d0ec5c27527588b71b0a1ab1d/src%2Ftest%2Fui%2Flint%2Funused_braces.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Funused_braces.stderr?ref=bab327c725bf084d0ec5c27527588b71b0a1ab1d", "patch": "@@ -22,7 +22,7 @@ note: the lint level is defined here\n LL | #![warn(unused_braces, unused_parens)]\n    |         ^^^^^^^^^^^^^\n \n-warning: unnecessary braces around `let` head expression\n+warning: unnecessary braces around `let` scrutinee expression\n   --> $DIR/unused_braces.rs:11:16\n    |\n LL |     if let 7 = { 7 } {"}, {"sha": "5fb67fd7c95a3a99a8ff0cbbd4c7c9cbab1f4c97", "filename": "src/test/ui/lint/unused_parens_remove_json_suggestion.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/bab327c725bf084d0ec5c27527588b71b0a1ab1d/src%2Ftest%2Fui%2Flint%2Funused_parens_remove_json_suggestion.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/bab327c725bf084d0ec5c27527588b71b0a1ab1d/src%2Ftest%2Fui%2Flint%2Funused_parens_remove_json_suggestion.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Funused_parens_remove_json_suggestion.stderr?ref=bab327c725bf084d0ec5c27527588b71b0a1ab1d", "patch": "@@ -46,14 +46,14 @@ LL |     while(true && false) {\n    |          ^^^^^^^^^^^^^^^ help: remove these parentheses\n \n \"}\n-{\"message\":\"unnecessary parentheses around `for` head expression\",\"code\":{\"code\":\"unused_parens\",\"explanation\":null},\"level\":\"error\",\"spans\":[{\"file_name\":\"$DIR/unused_parens_remove_json_suggestion.rs\",\"byte_start\":987,\"byte_end\":995,\"line_start\":44,\"line_end\":44,\"column_start\":18,\"column_end\":26,\"is_primary\":true,\"text\":[{\"text\":\"        for _ in (0 .. 3){\n+{\"message\":\"unnecessary parentheses around `for` iterator expression\",\"code\":{\"code\":\"unused_parens\",\"explanation\":null},\"level\":\"error\",\"spans\":[{\"file_name\":\"$DIR/unused_parens_remove_json_suggestion.rs\",\"byte_start\":987,\"byte_end\":995,\"line_start\":44,\"line_end\":44,\"column_start\":18,\"column_end\":26,\"is_primary\":true,\"text\":[{\"text\":\"        for _ in (0 .. 3){\n   --> $DIR/unused_parens_remove_json_suggestion.rs:44:18\n    |\n LL |         for _ in (0 .. 3){\n    |                  ^^^^^^^^ help: remove these parentheses\n \n \"}\n-{\"message\":\"unnecessary parentheses around `for` head expression\",\"code\":{\"code\":\"unused_parens\",\"explanation\":null},\"level\":\"error\",\"spans\":[{\"file_name\":\"$DIR/unused_parens_remove_json_suggestion.rs\",\"byte_start\":1088,\"byte_end\":1096,\"line_start\":49,\"line_end\":49,\"column_start\":14,\"column_end\":22,\"is_primary\":true,\"text\":[{\"text\":\"    for _ in (0 .. 3) {\n+{\"message\":\"unnecessary parentheses around `for` iterator expression\",\"code\":{\"code\":\"unused_parens\",\"explanation\":null},\"level\":\"error\",\"spans\":[{\"file_name\":\"$DIR/unused_parens_remove_json_suggestion.rs\",\"byte_start\":1088,\"byte_end\":1096,\"line_start\":49,\"line_end\":49,\"column_start\":14,\"column_end\":22,\"is_primary\":true,\"text\":[{\"text\":\"    for _ in (0 .. 3) {\n   --> $DIR/unused_parens_remove_json_suggestion.rs:49:14\n    |\n LL |     for _ in (0 .. 3) {"}]}