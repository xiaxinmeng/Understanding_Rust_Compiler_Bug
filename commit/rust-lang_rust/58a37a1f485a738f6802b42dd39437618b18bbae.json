{"sha": "58a37a1f485a738f6802b42dd39437618b18bbae", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU4YTM3YTFmNDg1YTczOGY2ODAyYjQyZGQzOTQzNzYxOGIxOGJiYWU=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2013-05-13T00:36:53Z"}, "committer": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2013-05-13T00:36:53Z"}, "message": "libstd: Fix merge fallout.", "tree": {"sha": "837010feec6db4c5c2f9be6eb1c62de90e9d57b8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/837010feec6db4c5c2f9be6eb1c62de90e9d57b8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/58a37a1f485a738f6802b42dd39437618b18bbae", "comment_count": 4, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/58a37a1f485a738f6802b42dd39437618b18bbae", "html_url": "https://github.com/rust-lang/rust/commit/58a37a1f485a738f6802b42dd39437618b18bbae", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/58a37a1f485a738f6802b42dd39437618b18bbae/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "db0693ac8d06202a289f451c223eb6f514819ffe", "url": "https://api.github.com/repos/rust-lang/rust/commits/db0693ac8d06202a289f451c223eb6f514819ffe", "html_url": "https://github.com/rust-lang/rust/commit/db0693ac8d06202a289f451c223eb6f514819ffe"}], "stats": {"total": 24, "additions": 14, "deletions": 10}, "files": [{"sha": "13d8fd26654918fd4408f4f5c6c3de0ebae5f915", "filename": "src/libcore/old_iter.rs", "status": "modified", "additions": 10, "deletions": 6, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/58a37a1f485a738f6802b42dd39437618b18bbae/src%2Flibcore%2Fold_iter.rs", "raw_url": "https://github.com/rust-lang/rust/raw/58a37a1f485a738f6802b42dd39437618b18bbae/src%2Flibcore%2Fold_iter.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fold_iter.rs?ref=58a37a1f485a738f6802b42dd39437618b18bbae", "patch": "@@ -128,26 +128,30 @@ pub fn _eachi<A,IA:BaseIter<A>>(this: &IA, blk: &fn(uint, &A) -> bool) -> bool {\n }\n \n #[cfg(stage0)]\n-pub fn eachi<A,IA:BaseIter<A>>(self: &IA, blk: &fn(uint, &A) -> bool) {\n-    _eachi(self, blk);\n+pub fn eachi<A,IA:BaseIter<A>>(this: &IA, blk: &fn(uint, &A) -> bool) {\n+    _eachi(this, blk);\n }\n #[cfg(not(stage0))]\n-pub fn eachi<A,IA:BaseIter<A>>(self: &IA, blk: &fn(uint, &A) -> bool) -> bool {\n-    _eachi(self, blk)\n+pub fn eachi<A,IA:BaseIter<A>>(this: &IA, blk: &fn(uint, &A) -> bool) -> bool {\n+    _eachi(this, blk)\n }\n \n #[inline(always)]\n pub fn all<A,IA:BaseIter<A>>(this: &IA, blk: &fn(&A) -> bool) -> bool {\n     for this.each |a| {\n-        if !blk(a) { return false; }\n+        if !blk(a) {\n+            return false;\n+        }\n     }\n     return true;\n }\n \n #[inline(always)]\n pub fn any<A,IA:BaseIter<A>>(this: &IA, blk: &fn(&A) -> bool) -> bool {\n     for this.each |a| {\n-        if blk(a) { return true; }\n+        if blk(a) {\n+            return true;\n+        }\n     }\n     return false;\n }"}, {"sha": "c5ab1a7719cd5b667ee860cc1a9220ebe3f4e8d8", "filename": "src/libstd/priority_queue.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/58a37a1f485a738f6802b42dd39437618b18bbae/src%2Flibstd%2Fpriority_queue.rs", "raw_url": "https://github.com/rust-lang/rust/raw/58a37a1f485a738f6802b42dd39437618b18bbae/src%2Flibstd%2Fpriority_queue.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fpriority_queue.rs?ref=58a37a1f485a738f6802b42dd39437618b18bbae", "patch": "@@ -153,7 +153,7 @@ pub impl <T:Ord> PriorityQueue<T> {\n             while pos > start {\n                 let parent = (pos - 1) >> 1;\n                 if new > self.data[parent] {\n-                    let x = replace(&mut self.data[parent], rusti::uninit());\n+                    let x = replace(&mut self.data[parent], uninit());\n                     move_val_init(&mut self.data[pos], x);\n                     pos = parent;\n                     loop\n@@ -172,7 +172,7 @@ pub impl <T:Ord> PriorityQueue<T> {\n             while pos > start {\n                 let parent = (pos - 1) >> 1;\n                 if new > self.data[parent] {\n-                    let x = replace(&mut self.data[parent], rusti::init());\n+                    let x = replace(&mut self.data[parent], init());\n                     move_val_init(&mut self.data[pos], x);\n                     pos = parent;\n                     loop\n@@ -196,7 +196,7 @@ pub impl <T:Ord> PriorityQueue<T> {\n                 if right < end && !(self.data[child] > self.data[right]) {\n                     child = right;\n                 }\n-                let x = replace(&mut self.data[child], rusti::uninit());\n+                let x = replace(&mut self.data[child], uninit());\n                 move_val_init(&mut self.data[pos], x);\n                 pos = child;\n                 child = 2 * pos + 1;\n@@ -219,7 +219,7 @@ pub impl <T:Ord> PriorityQueue<T> {\n                 if right < end && !(self.data[child] > self.data[right]) {\n                     child = right;\n                 }\n-                let x = replace(&mut self.data[child], rusti::init());\n+                let x = replace(&mut self.data[child], init());\n                 move_val_init(&mut self.data[pos], x);\n                 pos = child;\n                 child = 2 * pos + 1;"}]}