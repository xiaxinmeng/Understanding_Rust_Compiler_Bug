{"sha": "1a4a723dda97eb25a5fec8cb664e265c9c319dca", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFhNGE3MjNkZGE5N2ViMjVhNWZlYzhjYjY2NGUyNjVjOWMzMTlkY2E=", "commit": {"author": {"name": "Eitan Adler", "email": "lists@eitanadler.com", "date": "2016-09-18T06:10:12Z"}, "committer": {"name": "Eitan Adler", "email": "lists@eitanadler.com", "date": "2016-09-18T06:10:12Z"}, "message": "remove useless semicolon from python", "tree": {"sha": "f39b071d059d7b523de74c6cb37151e6007823dc", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f39b071d059d7b523de74c6cb37151e6007823dc"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1a4a723dda97eb25a5fec8cb664e265c9c319dca", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1a4a723dda97eb25a5fec8cb664e265c9c319dca", "html_url": "https://github.com/rust-lang/rust/commit/1a4a723dda97eb25a5fec8cb664e265c9c319dca", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1a4a723dda97eb25a5fec8cb664e265c9c319dca/comments", "author": {"login": "grimreaper", "id": 433817, "node_id": "MDQ6VXNlcjQzMzgxNw==", "avatar_url": "https://avatars.githubusercontent.com/u/433817?v=4", "gravatar_id": "", "url": "https://api.github.com/users/grimreaper", "html_url": "https://github.com/grimreaper", "followers_url": "https://api.github.com/users/grimreaper/followers", "following_url": "https://api.github.com/users/grimreaper/following{/other_user}", "gists_url": "https://api.github.com/users/grimreaper/gists{/gist_id}", "starred_url": "https://api.github.com/users/grimreaper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/grimreaper/subscriptions", "organizations_url": "https://api.github.com/users/grimreaper/orgs", "repos_url": "https://api.github.com/users/grimreaper/repos", "events_url": "https://api.github.com/users/grimreaper/events{/privacy}", "received_events_url": "https://api.github.com/users/grimreaper/received_events", "type": "User", "site_admin": false}, "committer": {"login": "grimreaper", "id": 433817, "node_id": "MDQ6VXNlcjQzMzgxNw==", "avatar_url": "https://avatars.githubusercontent.com/u/433817?v=4", "gravatar_id": "", "url": "https://api.github.com/users/grimreaper", "html_url": "https://github.com/grimreaper", "followers_url": "https://api.github.com/users/grimreaper/followers", "following_url": "https://api.github.com/users/grimreaper/following{/other_user}", "gists_url": "https://api.github.com/users/grimreaper/gists{/gist_id}", "starred_url": "https://api.github.com/users/grimreaper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/grimreaper/subscriptions", "organizations_url": "https://api.github.com/users/grimreaper/orgs", "repos_url": "https://api.github.com/users/grimreaper/repos", "events_url": "https://api.github.com/users/grimreaper/events{/privacy}", "received_events_url": "https://api.github.com/users/grimreaper/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "22c66c4b38672d6e61304252183a9588caed2601", "url": "https://api.github.com/repos/rust-lang/rust/commits/22c66c4b38672d6e61304252183a9588caed2601", "html_url": "https://github.com/rust-lang/rust/commit/22c66c4b38672d6e61304252183a9588caed2601"}], "stats": {"total": 24, "additions": 12, "deletions": 12}, "files": [{"sha": "e3c08bb35e075cf9b4de507728884fb8504952f4", "filename": "src/etc/platform-intrinsics/generator.py", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1a4a723dda97eb25a5fec8cb664e265c9c319dca/src%2Fetc%2Fplatform-intrinsics%2Fgenerator.py", "raw_url": "https://github.com/rust-lang/rust/raw/1a4a723dda97eb25a5fec8cb664e265c9c319dca/src%2Fetc%2Fplatform-intrinsics%2Fgenerator.py", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fetc%2Fplatform-intrinsics%2Fgenerator.py?ref=1a4a723dda97eb25a5fec8cb664e265c9c319dca", "patch": "@@ -285,7 +285,7 @@ def __eq__(self, other):\n \n class Pointer(Type):\n     def __init__(self, elem, llvm_elem, const):\n-        self._elem = elem;\n+        self._elem = elem\n         self._llvm_elem = llvm_elem\n         self._const = const\n         Type.__init__(self, BITWIDTH_POINTER)"}, {"sha": "bddc83f63d25de55f785edddd399dfdd7fcc7645", "filename": "src/etc/unicode.py", "status": "modified", "additions": 11, "deletions": 11, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/1a4a723dda97eb25a5fec8cb664e265c9c319dca/src%2Fetc%2Funicode.py", "raw_url": "https://github.com/rust-lang/rust/raw/1a4a723dda97eb25a5fec8cb664e265c9c319dca/src%2Fetc%2Funicode.py", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fetc%2Funicode.py?ref=1a4a723dda97eb25a5fec8cb664e265c9c319dca", "patch": "@@ -82,28 +82,28 @@ def load_unicode_data(f):\n     canon_decomp = {}\n     compat_decomp = {}\n \n-    udict = {};\n-    range_start = -1;\n+    udict = {}\n+    range_start = -1\n     for line in fileinput.input(f):\n-        data = line.split(';');\n+        data = line.split(';')\n         if len(data) != 15:\n             continue\n-        cp = int(data[0], 16);\n+        cp = int(data[0], 16)\n         if is_surrogate(cp):\n             continue\n         if range_start >= 0:\n             for i in xrange(range_start, cp):\n-                udict[i] = data;\n-            range_start = -1;\n+                udict[i] = data\n+            range_start = -1\n         if data[1].endswith(\", First>\"):\n-            range_start = cp;\n-            continue;\n-        udict[cp] = data;\n+            range_start = cp\n+            continue\n+        udict[cp] = data\n \n     for code in udict:\n         (code_org, name, gencat, combine, bidi,\n          decomp, deci, digit, num, mirror,\n-         old, iso, upcase, lowcase, titlecase) = udict[code];\n+         old, iso, upcase, lowcase, titlecase) = udict[code]\n \n         # generate char to char direct common and simple conversions\n         # uppercase to lowercase\n@@ -382,7 +382,7 @@ def emit_bool_trie(f, name, t_data, is_pub=True):\n     global bytes_old, bytes_new\n     bytes_old += 8 * len(t_data)\n     CHUNK = 64\n-    rawdata = [False] * 0x110000;\n+    rawdata = [False] * 0x110000\n     for (lo, hi) in t_data:\n         for cp in range(lo, hi + 1):\n             rawdata[cp] = True"}]}