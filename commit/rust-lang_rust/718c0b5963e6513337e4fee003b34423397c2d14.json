{"sha": "718c0b5963e6513337e4fee003b34423397c2d14", "node_id": "MDY6Q29tbWl0NzI0NzEyOjcxOGMwYjU5NjNlNjUxMzMzN2U0ZmVlMDAzYjM0NDIzMzk3YzJkMTQ=", "commit": {"author": {"name": "Roy Frostig", "email": "rfrostig@mozilla.com", "date": "2010-08-05T06:09:25Z"}, "committer": {"name": "Roy Frostig", "email": "rfrostig@mozilla.com", "date": "2010-08-05T06:09:33Z"}, "message": "Add to std._io some formatter/type-specific-writer mechanism.  Make a few type-specific buffered writers as wrappers of buf_writer.", "tree": {"sha": "bfce28f0d0e3b523691c4b536af213330a0f0a96", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bfce28f0d0e3b523691c4b536af213330a0f0a96"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/718c0b5963e6513337e4fee003b34423397c2d14", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/718c0b5963e6513337e4fee003b34423397c2d14", "html_url": "https://github.com/rust-lang/rust/commit/718c0b5963e6513337e4fee003b34423397c2d14", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/718c0b5963e6513337e4fee003b34423397c2d14/comments", "author": {"login": "froystig", "id": 123903, "node_id": "MDQ6VXNlcjEyMzkwMw==", "avatar_url": "https://avatars.githubusercontent.com/u/123903?v=4", "gravatar_id": "", "url": "https://api.github.com/users/froystig", "html_url": "https://github.com/froystig", "followers_url": "https://api.github.com/users/froystig/followers", "following_url": "https://api.github.com/users/froystig/following{/other_user}", "gists_url": "https://api.github.com/users/froystig/gists{/gist_id}", "starred_url": "https://api.github.com/users/froystig/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/froystig/subscriptions", "organizations_url": "https://api.github.com/users/froystig/orgs", "repos_url": "https://api.github.com/users/froystig/repos", "events_url": "https://api.github.com/users/froystig/events{/privacy}", "received_events_url": "https://api.github.com/users/froystig/received_events", "type": "User", "site_admin": false}, "committer": {"login": "froystig", "id": 123903, "node_id": "MDQ6VXNlcjEyMzkwMw==", "avatar_url": "https://avatars.githubusercontent.com/u/123903?v=4", "gravatar_id": "", "url": "https://api.github.com/users/froystig", "html_url": "https://github.com/froystig", "followers_url": "https://api.github.com/users/froystig/followers", "following_url": "https://api.github.com/users/froystig/following{/other_user}", "gists_url": "https://api.github.com/users/froystig/gists{/gist_id}", "starred_url": "https://api.github.com/users/froystig/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/froystig/subscriptions", "organizations_url": "https://api.github.com/users/froystig/orgs", "repos_url": "https://api.github.com/users/froystig/repos", "events_url": "https://api.github.com/users/froystig/events{/privacy}", "received_events_url": "https://api.github.com/users/froystig/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6e98a3b64f3c7577aae4317363328ac6a762a2f2", "url": "https://api.github.com/repos/rust-lang/rust/commits/6e98a3b64f3c7577aae4317363328ac6a762a2f2", "html_url": "https://github.com/rust-lang/rust/commit/6e98a3b64f3c7577aae4317363328ac6a762a2f2"}], "stats": {"total": 76, "additions": 75, "deletions": 1}, "files": [{"sha": "b0b0c313af84c0ebc0a3bedc1cd1a5ea8e08bd25", "filename": "src/lib/_io.rs", "status": "modified", "additions": 51, "deletions": 0, "changes": 51, "blob_url": "https://github.com/rust-lang/rust/blob/718c0b5963e6513337e4fee003b34423397c2d14/src%2Flib%2F_io.rs", "raw_url": "https://github.com/rust-lang/rust/raw/718c0b5963e6513337e4fee003b34423397c2d14/src%2Flib%2F_io.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flib%2F_io.rs?ref=718c0b5963e6513337e4fee003b34423397c2d14", "patch": "@@ -1,3 +1,7 @@\n+import std.os;\n+import std._str;\n+import std._vec;\n+\n type buf_reader = unsafe obj {\n   fn read() -> vec[u8];\n };\n@@ -107,3 +111,50 @@ fn new_buf_writer(str path, vec[fileflag] flags) -> buf_writer {\n   }\n   ret fd_buf_writer(fd);\n }\n+\n+type formatter[T] = fn(&T x) -> vec[u8];\n+\n+type writer[T] = unsafe obj { fn write(&T x); };\n+\n+fn mk_writer[T](str path,\n+                vec[fileflag] flags,\n+                &formatter[T] fmt)\n+  -> writer[T]\n+{\n+  unsafe obj w[T](buf_writer out, formatter[T] fmt) {\n+    fn write(&T x) {\n+      out.write(fmt(x));\n+    }\n+  }\n+  ret w[T](new_buf_writer(path, flags), fmt);\n+}\n+\n+/* TODO: int_writer, uint_writer, ... */\n+\n+fn str_writer(str path, vec[fileflag] flags) -> writer[str] {\n+  auto fmt = _str.bytes; // FIXME (issue #90)\n+  ret mk_writer[str](path, flags, fmt);\n+}\n+\n+fn vec_writer[T](str path,\n+                 vec[fileflag] flags,\n+                 &formatter[T] inner)\n+  -> writer[vec[T]]\n+{\n+  fn fmt[T](&vec[T] v, &formatter[T] inner) -> vec[u8] {\n+    let vec[u8] res = _str.bytes(\"vec(\");\n+    auto first = true;\n+    for (T x in v) {\n+      if (!first) {\n+        res += _str.bytes(\", \");\n+      } else {\n+        first = false;\n+      }\n+      res += inner(x);\n+    }\n+    res += _str.bytes(\")\\n\");\n+    ret res;\n+  }\n+\n+  ret mk_writer[vec[T]](path, flags, bind fmt[T](_, inner));\n+}"}, {"sha": "8eed9a38466aa47068866c0916c957a5853c5f5f", "filename": "src/lib/_str.rs", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/718c0b5963e6513337e4fee003b34423397c2d14/src%2Flib%2F_str.rs", "raw_url": "https://github.com/rust-lang/rust/raw/718c0b5963e6513337e4fee003b34423397c2d14/src%2Flib%2F_str.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flib%2F_str.rs?ref=718c0b5963e6513337e4fee003b34423397c2d14", "patch": "@@ -12,6 +12,18 @@ fn is_utf8(vec[u8] v) -> bool {\n   fail; // FIXME\n }\n \n+fn is_ascii(str s) -> bool {\n+  let uint i = len(s);\n+  while (i > 0u) {\n+    i -= 1u;\n+    // FIXME (issue #94)\n+    if ((s.(i as int) & 0x80u8) != 0u8) {\n+      ret false;\n+    }\n+  }\n+  ret true;\n+}\n+\n fn alloc(uint n_bytes) -> str {\n   ret rustrt.str_alloc(n_bytes);\n }\n@@ -23,3 +35,10 @@ fn len(str s) -> uint {\n fn buf(str s) -> sbuf {\n   ret rustrt.str_buf(s);\n }\n+\n+fn bytes(&str s) -> vec[u8] {\n+  fn ith(str s, uint i) -> u8 {\n+    ret s.(i as int); // FIXME (issue #94)\n+  }\n+  ret _vec.init_fn[u8](bind ith(s, _), _str.len(s));\n+}"}, {"sha": "058fb2378f3f6c6a8360c9db22442616f51eaa03", "filename": "src/test/run-pass/lib-map.rs", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/718c0b5963e6513337e4fee003b34423397c2d14/src%2Ftest%2Frun-pass%2Flib-map.rs", "raw_url": "https://github.com/rust-lang/rust/raw/718c0b5963e6513337e4fee003b34423397c2d14/src%2Ftest%2Frun-pass%2Flib-map.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Flib-map.rs?ref=718c0b5963e6513337e4fee003b34423397c2d14", "patch": "@@ -4,13 +4,17 @@ use std;\n import std.map;\n \n fn test_simple() {\n+  log \"*** starting test_simple\";\n+\n   fn eq(&uint x, &uint y) -> bool { ret x == y; }\n \n   let map.hashfn[uint] hasher = std.util.id[uint];\n   let map.eqfn[uint] eqer = eq;\n   let map.hashmap[uint, uint] hm = map.mk_hashmap[uint, uint](hasher, eqer);\n+\n+  log \"*** finished test_simple\";\n }\n \n fn main() {\n   test_simple();\n-}\n\\ No newline at end of file\n+}"}]}