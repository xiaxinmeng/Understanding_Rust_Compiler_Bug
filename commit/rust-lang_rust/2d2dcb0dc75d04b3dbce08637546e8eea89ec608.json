{"sha": "2d2dcb0dc75d04b3dbce08637546e8eea89ec608", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJkMmRjYjBkYzc1ZDA0YjNkYmNlMDg2Mzc1NDZlOGVlYTg5ZWM2MDg=", "commit": {"author": {"name": "Pietro Albini", "email": "pietro@pietroalbini.org", "date": "2019-07-10T13:55:13Z"}, "committer": {"name": "Pietro Albini", "email": "pietro@pietroalbini.org", "date": "2019-07-10T14:14:25Z"}, "message": "ci: add a pr builder to test tools when submodules are updated\n\nThe builder will skip time consuming tasks (like the actual tests) when\nit detects no updated submodules.", "tree": {"sha": "93487d892e68fa8ad8b7575d44378847daed825d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/93487d892e68fa8ad8b7575d44378847daed825d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2d2dcb0dc75d04b3dbce08637546e8eea89ec608", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE1JbYPtLJAsc22U9xPgar6Auq8ZwFAl0l8sMACgkQPgar6Auq\n8ZzgcA/9Hi5wc2iupLwQU6WU+xSxilTsL+2mouuEB2Lcj9fOgTvtU930AAdwZBbA\nchRqSSjKS4WIg1F2Uo4xgroiqCSzujFfcc4xWuCjR4EmOtoBkJ/ne7bPWBjsHkXq\nVXceZ+5KS4qPOekXN3P2WPnEC7EnV0TJboK5hTmwWemSiuqC5aXcvB30fqZRzfpu\nAZIg7ujpAxMLKydDJEqtBQ3daODZb+TjY0EXXz/aQbt19CYYqms/1Cq76kUbqbMd\nHWUgPjy8i/wBWSNyUn9DeJKt9JEnYbVlQ/SusBLCNbth/aMsO9zJiAVjfuSaMFaI\nBUujouVMIlGYmXF8OjD9qRSUBXj5oKGqo7Zbm14hC5UGo633yHl90WZ28IykoLch\nZj7DpaFiou1d95KXXdMtcw6ro2SGed25yasI1mukm4hib0VlERdbLaQE4ekWcXjN\nyXX6rFn5Q/iZcn01OzJzZ7f32MuWCaASlAFZcAGVBahG6U4KdwG0UF338cvSGFmG\nh+PUAu8/rWrk7A+mxfWufej5Vmp/rxvXaMP8HoXrZo9M3LXA5jdKMzurNOJ+h/WA\nXz2blZLfVsYAduj7xrzoY1s2X8c8+vp3JAHB7gr4/2X9VH4uMpLFEDn1nw0CDjLx\nr8wYo1QaDmHZ35/cRpLCzablK48Qeo8w1T/aO+PzkWR3okJomSg=\n=9kkH\n-----END PGP SIGNATURE-----", "payload": "tree 93487d892e68fa8ad8b7575d44378847daed825d\nparent 78ca1bda3522b14bc0336bc01dd1d49fdba2cda7\nauthor Pietro Albini <pietro@pietroalbini.org> 1562766913 +0200\ncommitter Pietro Albini <pietro@pietroalbini.org> 1562768065 +0200\n\nci: add a pr builder to test tools when submodules are updated\n\nThe builder will skip time consuming tasks (like the actual tests) when\nit detects no updated submodules.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2d2dcb0dc75d04b3dbce08637546e8eea89ec608", "html_url": "https://github.com/rust-lang/rust/commit/2d2dcb0dc75d04b3dbce08637546e8eea89ec608", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2d2dcb0dc75d04b3dbce08637546e8eea89ec608/comments", "author": {"login": "pietroalbini", "id": 2299951, "node_id": "MDQ6VXNlcjIyOTk5NTE=", "avatar_url": "https://avatars.githubusercontent.com/u/2299951?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pietroalbini", "html_url": "https://github.com/pietroalbini", "followers_url": "https://api.github.com/users/pietroalbini/followers", "following_url": "https://api.github.com/users/pietroalbini/following{/other_user}", "gists_url": "https://api.github.com/users/pietroalbini/gists{/gist_id}", "starred_url": "https://api.github.com/users/pietroalbini/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pietroalbini/subscriptions", "organizations_url": "https://api.github.com/users/pietroalbini/orgs", "repos_url": "https://api.github.com/users/pietroalbini/repos", "events_url": "https://api.github.com/users/pietroalbini/events{/privacy}", "received_events_url": "https://api.github.com/users/pietroalbini/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pietroalbini", "id": 2299951, "node_id": "MDQ6VXNlcjIyOTk5NTE=", "avatar_url": "https://avatars.githubusercontent.com/u/2299951?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pietroalbini", "html_url": "https://github.com/pietroalbini", "followers_url": "https://api.github.com/users/pietroalbini/followers", "following_url": "https://api.github.com/users/pietroalbini/following{/other_user}", "gists_url": "https://api.github.com/users/pietroalbini/gists{/gist_id}", "starred_url": "https://api.github.com/users/pietroalbini/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pietroalbini/subscriptions", "organizations_url": "https://api.github.com/users/pietroalbini/orgs", "repos_url": "https://api.github.com/users/pietroalbini/repos", "events_url": "https://api.github.com/users/pietroalbini/events{/privacy}", "received_events_url": "https://api.github.com/users/pietroalbini/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "78ca1bda3522b14bc0336bc01dd1d49fdba2cda7", "url": "https://api.github.com/repos/rust-lang/rust/commits/78ca1bda3522b14bc0336bc01dd1d49fdba2cda7", "html_url": "https://github.com/rust-lang/rust/commit/78ca1bda3522b14bc0336bc01dd1d49fdba2cda7"}], "stats": {"total": 56, "additions": 38, "deletions": 18}, "files": [{"sha": "e77d047fa2d99cfd672894b0f14995f611a04925", "filename": ".azure-pipelines/pr.yml", "status": "modified", "additions": 9, "deletions": 11, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/2d2dcb0dc75d04b3dbce08637546e8eea89ec608/.azure-pipelines%2Fpr.yml", "raw_url": "https://github.com/rust-lang/rust/raw/2d2dcb0dc75d04b3dbce08637546e8eea89ec608/.azure-pipelines%2Fpr.yml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/.azure-pipelines%2Fpr.yml?ref=2d2dcb0dc75d04b3dbce08637546e8eea89ec608", "patch": "@@ -20,14 +20,12 @@ jobs:\n       mingw-check:\n         IMAGE: mingw-check\n \n-# TODO: enable this job if the commit message matches this regex, need tools\n-# figure out how to get the current commit message on azure and stick it in a\n-# condition somewhere\n-#     if: commit_message =~ /(?i:^update.*\\b(rls|rustfmt|clippy|miri|cargo)\\b)/\n-# - job: Linux-x86_64-gnu-tools\n-#   pool:\n-#     vmImage: ubuntu-16.04\n-#   steps:\n-#     - template: steps/run.yml\n-#   variables:\n-#     IMAGE: x86_64-gnu-tools\n+- job: LinuxTools\n+  pool:\n+    vmImage: ubuntu-16.04\n+  steps:\n+    - template: steps/run.yml\n+      parameters:\n+        only_on_updated_submodules: 'yes'\n+  variables:\n+    IMAGE: x86_64-gnu-tools"}, {"sha": "2c949601b5e219e35414f331a87175718d98bf60", "filename": ".azure-pipelines/steps/run.yml", "status": "modified", "additions": 29, "deletions": 7, "changes": 36, "blob_url": "https://github.com/rust-lang/rust/blob/2d2dcb0dc75d04b3dbce08637546e8eea89ec608/.azure-pipelines%2Fsteps%2Frun.yml", "raw_url": "https://github.com/rust-lang/rust/raw/2d2dcb0dc75d04b3dbce08637546e8eea89ec608/.azure-pipelines%2Fsteps%2Frun.yml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/.azure-pipelines%2Fsteps%2Frun.yml?ref=2d2dcb0dc75d04b3dbce08637546e8eea89ec608", "patch": "@@ -6,6 +6,11 @@\n #\n # Check travis config for `gdb --batch` command to print all crash logs\n \n+parameters:\n+  # When this parameter is set to anything other than an empty string the tests\n+  # will only be executed when the commit updates submodules\n+  only_on_updated_submodules: ''\n+\n steps:\n \n # Disable automatic line ending conversion, which is enabled by default on\n@@ -18,6 +23,22 @@ steps:\n - checkout: self\n   fetchDepth: 2\n \n+# Set the SKIP_JOB environment variable if this job is supposed to only run\n+# when submodules are updated and they were not. The following time consuming\n+# tasks will be skipped when the environment variable is present.\n+- ${{ if parameters.only_on_updated_submodules }}:\n+  - bash: |\n+      set -e\n+      # Submodules pseudo-files inside git have the 160000 permissions, so when\n+      # those files are present in the diff a submodule was updated.\n+      if git diff HEAD^ | grep \"^index .* 160000\" >/dev/null 2>&1; then\n+          echo \"Executing the job since submodules are updated\"\n+      else\n+          echo \"Not executing this job since no submodules were updated\"\n+          echo \"##vso[task.setvariable variable=SKIP_JOB;]1\"\n+      fi\n+    displayName: Decide whether to run this job\n+\n # Spawn a background process to collect CPU usage statistics which we'll upload\n # at the end of the build. See the comments in the script here for more\n # information.\n@@ -68,20 +89,20 @@ steps:\n     echo '{\"ipv6\":true,\"fixed-cidr-v6\":\"fd9a:8454:6789:13f7::/64\"}' | sudo tee /etc/docker/daemon.json\n     sudo service docker restart\n   displayName: Enable IPv6\n-  condition: and(succeeded(), eq(variables['Agent.OS'], 'Linux'))\n+  condition: and(succeeded(), not(variables.SKIP_JOB), eq(variables['Agent.OS'], 'Linux'))\n \n # Check out all our submodules, but more quickly than using git by using one of\n # our custom scripts\n - bash: |\n     set -e\n     mkdir -p $HOME/rustsrc\n     $BUILD_SOURCESDIRECTORY/src/ci/init_repo.sh . $HOME/rustsrc\n-  condition: and(succeeded(), ne(variables['Agent.OS'], 'Windows_NT'))\n+  condition: and(succeeded(), not(variables.SKIP_JOB), ne(variables['Agent.OS'], 'Windows_NT'))\n   displayName: Check out submodules (Unix)\n - script: |\n     if not exist D:\\cache\\rustsrc\\NUL mkdir D:\\cache\\rustsrc\n     sh src/ci/init_repo.sh . /d/cache/rustsrc\n-  condition: and(succeeded(), eq(variables['Agent.OS'], 'Windows_NT'))\n+  condition: and(succeeded(), not(variables.SKIP_JOB), eq(variables['Agent.OS'], 'Windows_NT'))\n   displayName: Check out submodules (Windows)\n \n # Ensure the `aws` CLI is installed so we can deploy later on, cache docker\n@@ -93,10 +114,10 @@ steps:\n     retry pip3 install awscli --upgrade --user\n     echo \"##vso[task.prependpath]$HOME/.local/bin\"\n   displayName: Install awscli (Linux)\n-  condition: and(succeeded(), eq(variables['Agent.OS'], 'Linux'))\n+  condition: and(succeeded(), not(variables.SKIP_JOB), eq(variables['Agent.OS'], 'Linux'))\n - script: pip install awscli\n   displayName: Install awscli (non-Linux)\n-  condition: and(succeeded(), ne(variables['Agent.OS'], 'Linux'))\n+  condition: and(succeeded(), not(variables.SKIP_JOB), ne(variables['Agent.OS'], 'Linux'))\n \n # Configure our CI_JOB_NAME variable which log analyzers can use for the main\n # step to see what's going on.\n@@ -112,7 +133,7 @@ steps:\n     python2.7 \"$BUILD_SOURCESDIRECTORY/src/tools/publish_toolstate.py\" \"$(git rev-parse HEAD)\" \"$(git log --format=%s -n1 HEAD)\" \"\" \"\"\n     cd ..\n     rm -rf rust-toolstate\n-  condition: and(succeeded(), eq(variables['IMAGE'], 'mingw-check'))\n+  condition: and(succeeded(), not(variables.SKIP_JOB), eq(variables['IMAGE'], 'mingw-check'))\n   displayName: Verify the publish_toolstate script works\n \n - bash: |\n@@ -133,6 +154,7 @@ steps:\n     SRC: .\n     AWS_SECRET_ACCESS_KEY: $(AWS_SECRET_ACCESS_KEY)\n     TOOLSTATE_REPO_ACCESS_TOKEN: $(TOOLSTATE_REPO_ACCESS_TOKEN)\n+  condition: and(succeeded(), not(variables.SKIP_JOB))\n   displayName: Run build\n \n # If we're a deploy builder, use the `aws` command to publish everything to our\n@@ -155,7 +177,7 @@ steps:\n     retry aws s3 cp --no-progress --recursive --acl public-read ./$upload_dir s3://$DEPLOY_BUCKET/$deploy_dir/$BUILD_SOURCEVERSION\n   env:\n     AWS_SECRET_ACCESS_KEY: $(AWS_SECRET_ACCESS_KEY)\n-  condition: and(succeeded(), or(eq(variables.DEPLOY, '1'), eq(variables.DEPLOY_ALT, '1')))\n+  condition: and(succeeded(), not(variables.SKIP_JOB), or(eq(variables.DEPLOY, '1'), eq(variables.DEPLOY_ALT, '1')))\n   displayName: Upload artifacts\n \n # Upload CPU usage statistics that we've been gathering this whole time. Always"}]}