{"sha": "5a3e1cdaec91b6fc43d4a95670859b8b5637e397", "node_id": "MDY6Q29tbWl0NzI0NzEyOjVhM2UxY2RhZWM5MWI2ZmM0M2Q0YTk1NjcwODU5YjhiNTYzN2UzOTc=", "commit": {"author": {"name": "Luqman Aden", "email": "me@luqman.ca", "date": "2013-06-10T21:29:48Z"}, "committer": {"name": "Luqman Aden", "email": "me@luqman.ca", "date": "2013-06-10T21:29:48Z"}, "message": "librustc: Don't allow newtype or unit-like structs to shadow other names in the value namespace.", "tree": {"sha": "6b0c0236ed1d13db168766c0159b773c5bba6b89", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6b0c0236ed1d13db168766c0159b773c5bba6b89"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5a3e1cdaec91b6fc43d4a95670859b8b5637e397", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5a3e1cdaec91b6fc43d4a95670859b8b5637e397", "html_url": "https://github.com/rust-lang/rust/commit/5a3e1cdaec91b6fc43d4a95670859b8b5637e397", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5a3e1cdaec91b6fc43d4a95670859b8b5637e397/comments", "author": {"login": "luqmana", "id": 287063, "node_id": "MDQ6VXNlcjI4NzA2Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/287063?v=4", "gravatar_id": "", "url": "https://api.github.com/users/luqmana", "html_url": "https://github.com/luqmana", "followers_url": "https://api.github.com/users/luqmana/followers", "following_url": "https://api.github.com/users/luqmana/following{/other_user}", "gists_url": "https://api.github.com/users/luqmana/gists{/gist_id}", "starred_url": "https://api.github.com/users/luqmana/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/luqmana/subscriptions", "organizations_url": "https://api.github.com/users/luqmana/orgs", "repos_url": "https://api.github.com/users/luqmana/repos", "events_url": "https://api.github.com/users/luqmana/events{/privacy}", "received_events_url": "https://api.github.com/users/luqmana/received_events", "type": "User", "site_admin": false}, "committer": {"login": "luqmana", "id": 287063, "node_id": "MDQ6VXNlcjI4NzA2Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/287063?v=4", "gravatar_id": "", "url": "https://api.github.com/users/luqmana", "html_url": "https://github.com/luqmana", "followers_url": "https://api.github.com/users/luqmana/followers", "following_url": "https://api.github.com/users/luqmana/following{/other_user}", "gists_url": "https://api.github.com/users/luqmana/gists{/gist_id}", "starred_url": "https://api.github.com/users/luqmana/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/luqmana/subscriptions", "organizations_url": "https://api.github.com/users/luqmana/orgs", "repos_url": "https://api.github.com/users/luqmana/repos", "events_url": "https://api.github.com/users/luqmana/events{/privacy}", "received_events_url": "https://api.github.com/users/luqmana/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2ff6b298c5f23f48aa993fced41b6e29e446b7ce", "url": "https://api.github.com/repos/rust-lang/rust/commits/2ff6b298c5f23f48aa993fced41b6e29e446b7ce", "html_url": "https://github.com/rust-lang/rust/commit/2ff6b298c5f23f48aa993fced41b6e29e446b7ce"}], "stats": {"total": 28, "additions": 14, "deletions": 14}, "files": [{"sha": "23b410c3d496d448cb531fdc3083a6bb5cd4edc4", "filename": "src/librustc/middle/resolve.rs", "status": "modified", "additions": 14, "deletions": 14, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/5a3e1cdaec91b6fc43d4a95670859b8b5637e397/src%2Flibrustc%2Fmiddle%2Fresolve.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5a3e1cdaec91b6fc43d4a95670859b8b5637e397/src%2Flibrustc%2Fmiddle%2Fresolve.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fresolve.rs?ref=5a3e1cdaec91b6fc43d4a95670859b8b5637e397", "patch": "@@ -1195,22 +1195,22 @@ impl Resolver {\n \n             // These items live in both the type and value namespaces.\n             item_struct(struct_def, _) => {\n-                let (name_bindings, new_parent) =\n-                    self.add_child(ident, parent, ForbidDuplicateTypes, sp);\n+                // Adding to both Type and Value namespaces or just Type?\n+                let (forbid, ctor_id) = match struct_def.ctor_id {\n+                    Some(ctor_id)   => (ForbidDuplicateTypesAndValues, Some(ctor_id)),\n+                    None            => (ForbidDuplicateTypes, None)\n+                };\n \n-                name_bindings.define_type(\n-                    privacy, def_ty(local_def(item.id)), sp);\n+                let (name_bindings, new_parent) = self.add_child(ident, parent, forbid, sp);\n \n-                // If this struct is tuple-like or enum-like, define a name\n-                // in the value namespace.\n-                match struct_def.ctor_id {\n-                    None => {}\n-                    Some(ctor_id) => {\n-                        name_bindings.define_value(\n-                            privacy,\n-                            def_struct(local_def(ctor_id)),\n-                            sp);\n-                    }\n+                // Define a name in the type namespace.\n+                name_bindings.define_type(privacy, def_ty(local_def(item.id)), sp);\n+\n+                // If this is a newtype or unit-like struct, define a name\n+                // in the value namespace as well\n+                do ctor_id.while_some |cid| {\n+                    name_bindings.define_value(privacy, def_struct(local_def(cid)), sp);\n+                    None\n                 }\n \n                 // Record the def ID of this struct."}]}