{"sha": "06eb912e761d39c63490ab5e688abcf2f94fc61d", "node_id": "C_kwDOAAsO6NoAKDA2ZWI5MTJlNzYxZDM5YzYzNDkwYWI1ZTY4OGFiY2YyZjk0ZmM2MWQ", "commit": {"author": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2022-02-06T04:51:33Z"}, "committer": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2022-02-11T20:45:51Z"}, "message": "fix tests, add new tests checking borrowck CFTE ICE", "tree": {"sha": "340ed5c2093f1dbd8f6ae4e3fc88cdb6d0563f99", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/340ed5c2093f1dbd8f6ae4e3fc88cdb6d0563f99"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/06eb912e761d39c63490ab5e688abcf2f94fc61d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/06eb912e761d39c63490ab5e688abcf2f94fc61d", "html_url": "https://github.com/rust-lang/rust/commit/06eb912e761d39c63490ab5e688abcf2f94fc61d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/06eb912e761d39c63490ab5e688abcf2f94fc61d/comments", "author": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "77dae2d25d900a8e7493c548498cdc94bdcee3d9", "url": "https://api.github.com/repos/rust-lang/rust/commits/77dae2d25d900a8e7493c548498cdc94bdcee3d9", "html_url": "https://github.com/rust-lang/rust/commit/77dae2d25d900a8e7493c548498cdc94bdcee3d9"}], "stats": {"total": 63, "additions": 23, "deletions": 40}, "files": [{"sha": "bb5a2f1766f1b806a8fe1d325e123226baa33091", "filename": "src/test/ui/const-generics/const-generic-default-wont-borrowck.rs", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/06eb912e761d39c63490ab5e688abcf2f94fc61d/src%2Ftest%2Fui%2Fconst-generics%2Fconst-generic-default-wont-borrowck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/06eb912e761d39c63490ab5e688abcf2f94fc61d/src%2Ftest%2Fui%2Fconst-generics%2Fconst-generic-default-wont-borrowck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fconst-generic-default-wont-borrowck.rs?ref=06eb912e761d39c63490ab5e688abcf2f94fc61d", "patch": "@@ -0,0 +1,6 @@\n+struct X<const N: usize = {\n+    let s: &'static str; s.len()\n+    //~^ ERROR borrow of possibly-uninitialized variable\n+}>;\n+\n+fn main() {}"}, {"sha": "6c25019b0ceb367ad8b1ee8f45c482a318d095d9", "filename": "src/test/ui/const-generics/const-generic-default-wont-borrowck.stderr", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/06eb912e761d39c63490ab5e688abcf2f94fc61d/src%2Ftest%2Fui%2Fconst-generics%2Fconst-generic-default-wont-borrowck.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/06eb912e761d39c63490ab5e688abcf2f94fc61d/src%2Ftest%2Fui%2Fconst-generics%2Fconst-generic-default-wont-borrowck.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fconst-generic-default-wont-borrowck.stderr?ref=06eb912e761d39c63490ab5e688abcf2f94fc61d", "patch": "@@ -0,0 +1,9 @@\n+error[E0381]: borrow of possibly-uninitialized variable: `s`\n+  --> $DIR/const-generic-default-wont-borrowck.rs:2:26\n+   |\n+LL |     let s: &'static str; s.len()\n+   |                          ^^^^^^^ use of possibly-uninitialized `*s`\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0381`."}, {"sha": "61b00be345feee4bb0cf3a42aaa397097a8de029", "filename": "src/test/ui/consts/const-mut-refs/issue-76510.32bit.stderr", "status": "modified", "additions": 3, "deletions": 14, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/06eb912e761d39c63490ab5e688abcf2f94fc61d/src%2Ftest%2Fui%2Fconsts%2Fconst-mut-refs%2Fissue-76510.32bit.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/06eb912e761d39c63490ab5e688abcf2f94fc61d/src%2Ftest%2Fui%2Fconsts%2Fconst-mut-refs%2Fissue-76510.32bit.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst-mut-refs%2Fissue-76510.32bit.stderr?ref=06eb912e761d39c63490ab5e688abcf2f94fc61d", "patch": "@@ -19,18 +19,7 @@ error[E0596]: cannot borrow data in a `&` reference as mutable\n LL | const S: &'static mut str = &mut \" hello \";\n    |                             ^^^^^^^^^^^^^^ cannot borrow as mutable\n \n-error[E0080]: it is undefined behavior to use this value\n-  --> $DIR/issue-76510.rs:5:1\n-   |\n-LL | const S: &'static mut str = &mut \" hello \";\n-   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ type validation failed: encountered mutable reference in a `const`\n-   |\n-   = note: The rules on what exactly is undefined behavior aren't clear, so this check might be overzealous. Please open an issue on the rustc repository if you believe it should not be considered undefined behavior.\n-   = note: the raw bytes of the constant (size: 8, align: 4) {\n-               \u257e\u2500alloc3\u2500\u2500\u257c 07 00 00 00                         \u2502 \u257e\u2500\u2500\u257c....\n-           }\n-\n-error: aborting due to 4 previous errors\n+error: aborting due to 3 previous errors\n \n-Some errors have detailed explanations: E0080, E0596, E0658, E0764.\n-For more information about an error, try `rustc --explain E0080`.\n+Some errors have detailed explanations: E0596, E0658, E0764.\n+For more information about an error, try `rustc --explain E0596`."}, {"sha": "61b00be345feee4bb0cf3a42aaa397097a8de029", "filename": "src/test/ui/consts/const-mut-refs/issue-76510.64bit.stderr", "status": "modified", "additions": 3, "deletions": 14, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/06eb912e761d39c63490ab5e688abcf2f94fc61d/src%2Ftest%2Fui%2Fconsts%2Fconst-mut-refs%2Fissue-76510.64bit.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/06eb912e761d39c63490ab5e688abcf2f94fc61d/src%2Ftest%2Fui%2Fconsts%2Fconst-mut-refs%2Fissue-76510.64bit.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst-mut-refs%2Fissue-76510.64bit.stderr?ref=06eb912e761d39c63490ab5e688abcf2f94fc61d", "patch": "@@ -19,18 +19,7 @@ error[E0596]: cannot borrow data in a `&` reference as mutable\n LL | const S: &'static mut str = &mut \" hello \";\n    |                             ^^^^^^^^^^^^^^ cannot borrow as mutable\n \n-error[E0080]: it is undefined behavior to use this value\n-  --> $DIR/issue-76510.rs:5:1\n-   |\n-LL | const S: &'static mut str = &mut \" hello \";\n-   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ type validation failed: encountered mutable reference in a `const`\n-   |\n-   = note: The rules on what exactly is undefined behavior aren't clear, so this check might be overzealous. Please open an issue on the rustc repository if you believe it should not be considered undefined behavior.\n-   = note: the raw bytes of the constant (size: 16, align: 8) {\n-               \u257e\u2500\u2500\u2500\u2500\u2500\u2500\u2500alloc3\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u257c 07 00 00 00 00 00 00 00 \u2502 \u257e\u2500\u2500\u2500\u2500\u2500\u2500\u257c........\n-           }\n-\n-error: aborting due to 4 previous errors\n+error: aborting due to 3 previous errors\n \n-Some errors have detailed explanations: E0080, E0596, E0658, E0764.\n-For more information about an error, try `rustc --explain E0080`.\n+Some errors have detailed explanations: E0596, E0658, E0764.\n+For more information about an error, try `rustc --explain E0596`."}, {"sha": "143d2fb6b9a3a1a599f36edcc222f4f1d7d34e83", "filename": "src/test/ui/consts/const-mut-refs/issue-76510.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/06eb912e761d39c63490ab5e688abcf2f94fc61d/src%2Ftest%2Fui%2Fconsts%2Fconst-mut-refs%2Fissue-76510.rs", "raw_url": "https://github.com/rust-lang/rust/raw/06eb912e761d39c63490ab5e688abcf2f94fc61d/src%2Ftest%2Fui%2Fconsts%2Fconst-mut-refs%2Fissue-76510.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst-mut-refs%2Fissue-76510.rs?ref=06eb912e761d39c63490ab5e688abcf2f94fc61d", "patch": "@@ -6,7 +6,6 @@ const S: &'static mut str = &mut \" hello \";\n //~^ ERROR: mutable references are not allowed in the final value of constants\n //~| ERROR: mutation through a reference is not allowed in constants\n //~| ERROR: cannot borrow data in a `&` reference as mutable\n-//~| ERROR: it is undefined behavior to use this value\n \n const fn trigger() -> [(); unsafe {\n         let s = transmute::<(*const u8, usize), &ManuallyDrop<str>>((S.as_ptr(), 3));"}, {"sha": "b85e612992549fdd3f78eded1cb9fc4dca92b83d", "filename": "src/test/ui/consts/issue-78655.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/06eb912e761d39c63490ab5e688abcf2f94fc61d/src%2Ftest%2Fui%2Fconsts%2Fissue-78655.rs", "raw_url": "https://github.com/rust-lang/rust/raw/06eb912e761d39c63490ab5e688abcf2f94fc61d/src%2Ftest%2Fui%2Fconsts%2Fissue-78655.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fissue-78655.rs?ref=06eb912e761d39c63490ab5e688abcf2f94fc61d", "patch": "@@ -1,4 +1,4 @@\n-const FOO: *const u32 = { //~ ERROR encountered dangling pointer in final constant\n+const FOO: *const u32 = {\n     let x;\n     &x //~ ERROR borrow of possibly-uninitialized variable: `x`\n };"}, {"sha": "734266a3453b580d2204657d1677d9635334417d", "filename": "src/test/ui/consts/issue-78655.stderr", "status": "modified", "additions": 1, "deletions": 10, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/06eb912e761d39c63490ab5e688abcf2f94fc61d/src%2Ftest%2Fui%2Fconsts%2Fissue-78655.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/06eb912e761d39c63490ab5e688abcf2f94fc61d/src%2Ftest%2Fui%2Fconsts%2Fissue-78655.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fissue-78655.stderr?ref=06eb912e761d39c63490ab5e688abcf2f94fc61d", "patch": "@@ -4,15 +4,6 @@ error[E0381]: borrow of possibly-uninitialized variable: `x`\n LL |     &x\n    |     ^^ use of possibly-uninitialized `x`\n \n-error: encountered dangling pointer in final constant\n-  --> $DIR/issue-78655.rs:1:1\n-   |\n-LL | / const FOO: *const u32 = {\n-LL | |     let x;\n-LL | |     &x\n-LL | | };\n-   | |__^\n-\n error: could not evaluate constant pattern\n   --> $DIR/issue-78655.rs:7:9\n    |\n@@ -25,6 +16,6 @@ error: could not evaluate constant pattern\n LL |     let FOO = FOO;\n    |         ^^^\n \n-error: aborting due to 4 previous errors\n+error: aborting due to 3 previous errors\n \n For more information about this error, try `rustc --explain E0381`."}]}