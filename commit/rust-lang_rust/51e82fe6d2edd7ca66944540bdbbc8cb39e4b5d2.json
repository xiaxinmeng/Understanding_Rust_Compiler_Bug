{"sha": "51e82fe6d2edd7ca66944540bdbbc8cb39e4b5d2", "node_id": "MDY6Q29tbWl0NzI0NzEyOjUxZTgyZmU2ZDJlZGQ3Y2E2Njk0NDU0MGJkYmJjOGNiMzllNGI1ZDI=", "commit": {"author": {"name": "bors[bot]", "email": "bors[bot]@users.noreply.github.com", "date": "2019-05-21T13:58:42Z"}, "committer": {"name": "bors[bot]", "email": "bors[bot]@users.noreply.github.com", "date": "2019-05-21T13:58:42Z"}, "message": "Merge #1299\n\n1299: Use ThemeColor and add support for light themes r=matklad a=lnicola\n\nPart of #1294.\r\n\r\n- switch to `ThemeColor`\r\n- add light and high contrast theme definitions\r\n- highlight control flow keywords and `unsafe`\r\n\n\nCo-authored-by: Lauren\u021biu Nicola <lnicola@dend.ro>", "tree": {"sha": "4ba523d010901e2c68d2901217074494d01c22d1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4ba523d010901e2c68d2901217074494d01c22d1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/51e82fe6d2edd7ca66944540bdbbc8cb39e4b5d2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/51e82fe6d2edd7ca66944540bdbbc8cb39e4b5d2", "html_url": "https://github.com/rust-lang/rust/commit/51e82fe6d2edd7ca66944540bdbbc8cb39e4b5d2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/51e82fe6d2edd7ca66944540bdbbc8cb39e4b5d2/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "parents": [{"sha": "c6a5d871d7a670473a78e03852bb158f3b6d5be3", "url": "https://api.github.com/repos/rust-lang/rust/commits/c6a5d871d7a670473a78e03852bb158f3b6d5be3", "html_url": "https://github.com/rust-lang/rust/commit/c6a5d871d7a670473a78e03852bb158f3b6d5be3"}, {"sha": "b08362f6d2973336764c52ebc7cc5e9f34f0d80a", "url": "https://api.github.com/repos/rust-lang/rust/commits/b08362f6d2973336764c52ebc7cc5e9f34f0d80a", "html_url": "https://github.com/rust-lang/rust/commit/b08362f6d2973336764c52ebc7cc5e9f34f0d80a"}], "stats": {"total": 163, "additions": 149, "deletions": 14}, "files": [{"sha": "2158291dc2fcb97e944867082de85469b7895009", "filename": "crates/ra_ide_api/src/syntax_highlighting.rs", "status": "modified", "additions": 18, "deletions": 1, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/51e82fe6d2edd7ca66944540bdbbc8cb39e4b5d2/crates%2Fra_ide_api%2Fsrc%2Fsyntax_highlighting.rs", "raw_url": "https://github.com/rust-lang/rust/raw/51e82fe6d2edd7ca66944540bdbbc8cb39e4b5d2/crates%2Fra_ide_api%2Fsrc%2Fsyntax_highlighting.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fsyntax_highlighting.rs?ref=51e82fe6d2edd7ca66944540bdbbc8cb39e4b5d2", "patch": "@@ -1,6 +1,6 @@\n use rustc_hash::FxHashSet;\n \n-use ra_syntax::{ast, AstNode, TextRange, Direction, SyntaxKind::*, SyntaxElement, T};\n+use ra_syntax::{ast, AstNode, TextRange, Direction, SyntaxKind, SyntaxKind::*, SyntaxElement, T};\n use ra_db::SourceDatabase;\n \n use crate::{FileId, db::RootDatabase};\n@@ -11,6 +11,21 @@ pub struct HighlightedRange {\n     pub tag: &'static str,\n }\n \n+fn is_control_keyword(kind: SyntaxKind) -> bool {\n+    match kind {\n+        T![for]\n+        | T![loop]\n+        | T![while]\n+        | T![continue]\n+        | T![break]\n+        | T![if]\n+        | T![else]\n+        | T![match]\n+        | T![return] => true,\n+        _ => false,\n+    }\n+}\n+\n pub(crate) fn highlight(db: &RootDatabase, file_id: FileId) -> Vec<HighlightedRange> {\n     let source_file = db.parse(file_id);\n \n@@ -29,6 +44,8 @@ pub(crate) fn highlight(db: &RootDatabase, file_id: FileId) -> Vec<HighlightedRa\n             NAME => \"function\",\n             INT_NUMBER | FLOAT_NUMBER | CHAR | BYTE => \"literal\",\n             LIFETIME => \"parameter\",\n+            T![unsafe] => \"keyword.unsafe\",\n+            k if is_control_keyword(k) => \"keyword.control\",\n             k if k.is_keyword() => \"keyword\",\n             _ => {\n                 if let Some(macro_call) = node.as_node().and_then(ast::MacroCall::cast) {"}, {"sha": "750c97bb17e2d2e32b3b1083d872249ab23e2885", "filename": "editors/code/package.json", "status": "modified", "additions": 110, "deletions": 0, "changes": 110, "blob_url": "https://github.com/rust-lang/rust/blob/51e82fe6d2edd7ca66944540bdbbc8cb39e4b5d2/editors%2Fcode%2Fpackage.json", "raw_url": "https://github.com/rust-lang/rust/raw/51e82fe6d2edd7ca66944540bdbbc8cb39e4b5d2/editors%2Fcode%2Fpackage.json", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fpackage.json?ref=51e82fe6d2edd7ca66944540bdbbc8cb39e4b5d2", "patch": "@@ -268,6 +268,116 @@\n                 },\n                 \"pattern\": \"$rustc\"\n             }\n+        ],\n+        \"colors\": [\n+            {\n+                \"id\": \"ralsp.comment\",\n+                \"description\": \"Color for comments\",\n+                \"defaults\": {\n+                    \"dark\": \"#6A9955\",\n+                    \"light\": \"#008000\",\n+                    \"highContrast\": \"#7CA668\"\n+                }\n+            },\n+            {\n+                \"id\": \"ralsp.string\",\n+                \"description\": \"Color for strings\",\n+                \"defaults\": {\n+                    \"dark\": \"#CE9178\",\n+                    \"light\": \"#A31515\",\n+                    \"highContrast\": \"#CE9178\"\n+                }\n+            },\n+            {\n+                \"id\": \"ralsp.keyword\",\n+                \"description\": \"Color for keywords\",\n+                \"defaults\": {\n+                    \"dark\": \"#569cd6\",\n+                    \"light\": \"#0000FF\",\n+                    \"highContrast\": \"#569CD6\"\n+                }\n+            },\n+            {\n+                \"id\": \"ralsp.keyword.control\",\n+                \"description\": \"Color for control keywords\",\n+                \"defaults\": {\n+                    \"dark\": \"#C586C0\",\n+                    \"light\": \"#AF00DB\",\n+                    \"highContrast\": \"#C586C0\"\n+                }\n+            },\n+            {\n+                \"id\": \"ralsp.keyword.unsafe\",\n+                \"description\": \"Color for unsafe\",\n+                \"defaults\": {\n+                    \"dark\": \"#FF3030\",\n+                    \"light\": \"#FF1010\",\n+                    \"highContrast\": \"#FF1010\"\n+                }\n+            },\n+            {\n+                \"id\": \"ralsp.function\",\n+                \"description\": \"Color for functions\",\n+                \"defaults\": {\n+                    \"dark\": \"#DCDCAA\",\n+                    \"light\": \"#795E26\",\n+                    \"highContrast\": \"#DCDCAA\"\n+                }\n+            },\n+            {\n+                \"id\": \"ralsp.parameter\",\n+                \"description\": \"Color for parameters\",\n+                \"defaults\": {\n+                    \"dark\": \"#9CDCFE\",\n+                    \"light\": \"#001080\",\n+                    \"highContrast\": \"#9CDCFE\"\n+                }\n+            },\n+            {\n+                \"id\": \"ralsp.builtin\",\n+                \"description\": \"Color for builtins\",\n+                \"defaults\": {\n+                    \"dark\": \"#DD6718\",\n+                    \"light\": \"#DD6718\",\n+                    \"highContrast\": \"#DD6718\"\n+                }\n+            },\n+            {\n+                \"id\": \"ralsp.text\",\n+                \"description\": \"Color for text\",\n+                \"defaults\": {\n+                    \"dark\": \"#D4D4D4\",\n+                    \"light\": \"#000000\",\n+                    \"highContrast\": \"#FFFFFF\"\n+                }\n+            },\n+            {\n+                \"id\": \"ralsp.attribute\",\n+                \"description\": \"Color for attributes\",\n+                \"defaults\": {\n+                    \"dark\": \"#9FE9BF\",\n+                    \"light\": \"#1F4B1F\",\n+                    \"highContrast\": \"#108010\"\n+                }\n+            },\n+            {\n+                \"id\": \"ralsp.literal\",\n+                \"description\": \"Color for literals\",\n+                \"defaults\": {\n+                    \"dark\": \"#BECEA8\",\n+                    \"light\": \"#09885A\",\n+                    \"highContrast\": \"#B5CEA8\"\n+                }\n+            },\n+            {\n+                \"id\": \"ralsp.macro\",\n+                \"description\": \"Color for DFAF8F\",\n+                \"defaults\": {\n+                    \"dark\": \"#BFEBBF\",\n+                    \"light\": \"#DD6718\",\n+                    \"highContrast\": \"#ED7718\"\n+                }\n+            }\n         ]\n     }\n }"}, {"sha": "e1a68544abde283cfc46563f0eb27c530ffead92", "filename": "editors/code/src/highlighting.ts", "status": "modified", "additions": 21, "deletions": 13, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/51e82fe6d2edd7ca66944540bdbbc8cb39e4b5d2/editors%2Fcode%2Fsrc%2Fhighlighting.ts", "raw_url": "https://github.com/rust-lang/rust/raw/51e82fe6d2edd7ca66944540bdbbc8cb39e4b5d2/editors%2Fcode%2Fsrc%2Fhighlighting.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Fhighlighting.ts?ref=51e82fe6d2edd7ca66944540bdbbc8cb39e4b5d2", "patch": "@@ -13,23 +13,31 @@ export class Highlighter {\n         string,\n         vscode.TextEditorDecorationType\n     > {\n-        const decor = (color: string) =>\n-            vscode.window.createTextEditorDecorationType({ color });\n+        const colorContrib = (\n+            tag: string\n+        ): [string, vscode.TextEditorDecorationType] => {\n+            const color = new vscode.ThemeColor('ralsp.' + tag);\n+            const decor = vscode.window.createTextEditorDecorationType({\n+                color\n+            });\n+            return [tag, decor];\n+        };\n \n         const decorations: Iterable<\n             [string, vscode.TextEditorDecorationType]\n         > = [\n-            ['background', decor('#3F3F3F')],\n-            ['comment', decor('#7F9F7F')],\n-            ['string', decor('#CC9393')],\n-            ['keyword', decor('#F0DFAF')],\n-            ['function', decor('#93E0E3')],\n-            ['parameter', decor('#94BFF3')],\n-            ['builtin', decor('#DD6718')],\n-            ['text', decor('#DCDCCC')],\n-            ['attribute', decor('#BFEBBF')],\n-            ['literal', decor('#DFAF8F')],\n-            ['macro', decor('#DFAF8F')]\n+            colorContrib('comment'),\n+            colorContrib('string'),\n+            colorContrib('keyword'),\n+            colorContrib('keyword.control'),\n+            colorContrib('keyword.unsafe'),\n+            colorContrib('function'),\n+            colorContrib('parameter'),\n+            colorContrib('builtin'),\n+            colorContrib('text'),\n+            colorContrib('attribute'),\n+            colorContrib('literal'),\n+            colorContrib('macro')\n         ];\n \n         return new Map<string, vscode.TextEditorDecorationType>(decorations);"}]}