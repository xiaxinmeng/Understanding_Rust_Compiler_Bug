{"sha": "5c83422a5bdf8eacd4bbc727fb880b99ed66b04f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjVjODM0MjJhNWJkZjhlYWNkNGJiYzcyN2ZiODgwYjk5ZWQ2NmIwNGY=", "commit": {"author": {"name": "Isaac Whitfield", "email": "iw@whitfin.io", "date": "2018-05-09T06:10:03Z"}, "committer": {"name": "Isaac Whitfield", "email": "iw@whitfin.io", "date": "2018-05-11T15:09:53Z"}, "message": "Neaten a couple of long signatures", "tree": {"sha": "593ecc09a158316842f8be41e31c93146586e32b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/593ecc09a158316842f8be41e31c93146586e32b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5c83422a5bdf8eacd4bbc727fb880b99ed66b04f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5c83422a5bdf8eacd4bbc727fb880b99ed66b04f", "html_url": "https://github.com/rust-lang/rust/commit/5c83422a5bdf8eacd4bbc727fb880b99ed66b04f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5c83422a5bdf8eacd4bbc727fb880b99ed66b04f/comments", "author": {"login": "whitfin", "id": 5376378, "node_id": "MDQ6VXNlcjUzNzYzNzg=", "avatar_url": "https://avatars.githubusercontent.com/u/5376378?v=4", "gravatar_id": "", "url": "https://api.github.com/users/whitfin", "html_url": "https://github.com/whitfin", "followers_url": "https://api.github.com/users/whitfin/followers", "following_url": "https://api.github.com/users/whitfin/following{/other_user}", "gists_url": "https://api.github.com/users/whitfin/gists{/gist_id}", "starred_url": "https://api.github.com/users/whitfin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/whitfin/subscriptions", "organizations_url": "https://api.github.com/users/whitfin/orgs", "repos_url": "https://api.github.com/users/whitfin/repos", "events_url": "https://api.github.com/users/whitfin/events{/privacy}", "received_events_url": "https://api.github.com/users/whitfin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "whitfin", "id": 5376378, "node_id": "MDQ6VXNlcjUzNzYzNzg=", "avatar_url": "https://avatars.githubusercontent.com/u/5376378?v=4", "gravatar_id": "", "url": "https://api.github.com/users/whitfin", "html_url": "https://github.com/whitfin", "followers_url": "https://api.github.com/users/whitfin/followers", "following_url": "https://api.github.com/users/whitfin/following{/other_user}", "gists_url": "https://api.github.com/users/whitfin/gists{/gist_id}", "starred_url": "https://api.github.com/users/whitfin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/whitfin/subscriptions", "organizations_url": "https://api.github.com/users/whitfin/orgs", "repos_url": "https://api.github.com/users/whitfin/repos", "events_url": "https://api.github.com/users/whitfin/events{/privacy}", "received_events_url": "https://api.github.com/users/whitfin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d23cbc3fbec44fe1ffbc468a396cf65755b56fc8", "url": "https://api.github.com/repos/rust-lang/rust/commits/d23cbc3fbec44fe1ffbc468a396cf65755b56fc8", "html_url": "https://github.com/rust-lang/rust/commit/d23cbc3fbec44fe1ffbc468a396cf65755b56fc8"}], "stats": {"total": 12, "additions": 8, "deletions": 4}, "files": [{"sha": "afa9bca2ba98c9c2456f28cc713c13b4eeacf1ba", "filename": "src/librustc_trans/back/write.rs", "status": "modified", "additions": 8, "deletions": 4, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/5c83422a5bdf8eacd4bbc727fb880b99ed66b04f/src%2Flibrustc_trans%2Fback%2Fwrite.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5c83422a5bdf8eacd4bbc727fb880b99ed66b04f/src%2Flibrustc_trans%2Fback%2Fwrite.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Fback%2Fwrite.rs?ref=5c83422a5bdf8eacd4bbc727fb880b99ed66b04f", "patch": "@@ -1021,9 +1021,10 @@ pub fn start_async_translation(tcx: TyCtxt,\n     }\n }\n \n-fn generate_module_artifacts(sess: &Session,\n-                             compiled_modules: &CompiledModules)\n-                                -> FxHashMap<WorkProductId, WorkProduct> {\n+fn generate_module_artifacts(\n+    sess: &Session,\n+    compiled_modules: &CompiledModules\n+) -> FxHashMap<WorkProductId, WorkProduct> {\n     let mut work_products = FxHashMap::default();\n \n     if sess.opts.incremental.is_none() {\n@@ -2242,7 +2243,10 @@ pub struct OngoingCrateTranslation {\n }\n \n impl OngoingCrateTranslation {\n-    pub(crate) fn join(self, sess: &Session) -> (CrateTranslation, FxHashMap<WorkProductId, WorkProduct>) {\n+    pub(crate) fn join(\n+        self,\n+        sess: &Session\n+    ) -> (CrateTranslation, FxHashMap<WorkProductId, WorkProduct>) {\n         self.shared_emitter_main.check(sess, true);\n         let compiled_modules = match self.future.join() {\n             Ok(Ok(compiled_modules)) => compiled_modules,"}]}