{"sha": "6ee7e35287e106b1ee9d276111692ebfc050ca81", "node_id": "C_kwDOAAsO6NoAKDZlZTdlMzUyODdlMTA2YjFlZTlkMjc2MTExNjkyZWJmYzA1MGNhODE", "commit": {"author": {"name": "lcnr", "email": "rust@lcnr.de", "date": "2022-06-08T08:46:52Z"}, "committer": {"name": "lcnr", "email": "rust@lcnr.de", "date": "2022-06-08T08:46:52Z"}, "message": "bye `BorrowckMode`", "tree": {"sha": "4cbc8c50885f2f5a603825d1129256a4968d68a0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4cbc8c50885f2f5a603825d1129256a4968d68a0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6ee7e35287e106b1ee9d276111692ebfc050ca81", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6ee7e35287e106b1ee9d276111692ebfc050ca81", "html_url": "https://github.com/rust-lang/rust/commit/6ee7e35287e106b1ee9d276111692ebfc050ca81", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6ee7e35287e106b1ee9d276111692ebfc050ca81/comments", "author": {"login": "lcnr", "id": 29864074, "node_id": "MDQ6VXNlcjI5ODY0MDc0", "avatar_url": "https://avatars.githubusercontent.com/u/29864074?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lcnr", "html_url": "https://github.com/lcnr", "followers_url": "https://api.github.com/users/lcnr/followers", "following_url": "https://api.github.com/users/lcnr/following{/other_user}", "gists_url": "https://api.github.com/users/lcnr/gists{/gist_id}", "starred_url": "https://api.github.com/users/lcnr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lcnr/subscriptions", "organizations_url": "https://api.github.com/users/lcnr/orgs", "repos_url": "https://api.github.com/users/lcnr/repos", "events_url": "https://api.github.com/users/lcnr/events{/privacy}", "received_events_url": "https://api.github.com/users/lcnr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "lcnr", "id": 29864074, "node_id": "MDQ6VXNlcjI5ODY0MDc0", "avatar_url": "https://avatars.githubusercontent.com/u/29864074?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lcnr", "html_url": "https://github.com/lcnr", "followers_url": "https://api.github.com/users/lcnr/followers", "following_url": "https://api.github.com/users/lcnr/following{/other_user}", "gists_url": "https://api.github.com/users/lcnr/gists{/gist_id}", "starred_url": "https://api.github.com/users/lcnr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lcnr/subscriptions", "organizations_url": "https://api.github.com/users/lcnr/orgs", "repos_url": "https://api.github.com/users/lcnr/repos", "events_url": "https://api.github.com/users/lcnr/events{/privacy}", "received_events_url": "https://api.github.com/users/lcnr/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "64a7aa7016de32f4d991c30bfa40d3911e18a213", "url": "https://api.github.com/repos/rust-lang/rust/commits/64a7aa7016de32f4d991c30bfa40d3911e18a213", "html_url": "https://github.com/rust-lang/rust/commit/64a7aa7016de32f4d991c30bfa40d3911e18a213"}], "stats": {"total": 17, "additions": 0, "deletions": 17}, "files": [{"sha": "cabaf321f80c302194b3209d200de650a2be5bcb", "filename": "compiler/rustc_session/src/config.rs", "status": "modified", "additions": 0, "deletions": 17, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/6ee7e35287e106b1ee9d276111692ebfc050ca81/compiler%2Frustc_session%2Fsrc%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6ee7e35287e106b1ee9d276111692ebfc050ca81/compiler%2Frustc_session%2Fsrc%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_session%2Fsrc%2Fconfig.rs?ref=6ee7e35287e106b1ee9d276111692ebfc050ca81", "patch": "@@ -547,23 +547,6 @@ pub enum PrintRequest {\n     LinkArgs,\n }\n \n-#[derive(Copy, Clone)]\n-pub enum BorrowckMode {\n-    Mir,\n-    Migrate,\n-}\n-\n-impl BorrowckMode {\n-    /// Returns whether we should run the MIR-based borrow check, but also fall back\n-    /// on the AST borrow check if the MIR-based one errors.\n-    pub fn migrate(self) -> bool {\n-        match self {\n-            BorrowckMode::Mir => false,\n-            BorrowckMode::Migrate => true,\n-        }\n-    }\n-}\n-\n pub enum Input {\n     /// Load source code from a file.\n     File(PathBuf),"}]}