{"sha": "d729e764926bba02422115d5c60e51519de50dea", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ3MjllNzY0OTI2YmJhMDI0MjIxMTVkNWM2MGU1MTUxOWRlNTBkZWE=", "commit": {"author": {"name": "Dylan DPC", "email": "dylan.dpc@gmail.com", "date": "2020-12-21T01:47:39Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-12-21T01:47:39Z"}, "message": "Rollup merge of #80170 - ldm0:fixice, r=lcnr\n\nFix ICE when lookup method in trait for type that have bound vars\n\nCloses #77910", "tree": {"sha": "325702d4bfa7b69e2ca9da8bbd61cee6eb178fcb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/325702d4bfa7b69e2ca9da8bbd61cee6eb178fcb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d729e764926bba02422115d5c60e51519de50dea", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJf3/67CRBK7hj4Ov3rIwAAdHIIAJYu6PP8Zg7SnJ7A4nPtMVhW\nJP1nEv0D5FWQpQ7odQBbmeDFS/Sbtm94fTg3GMbM2+s/QJwaGXX70wQqwJbaYvoy\nssPanJ0bg5miS6s5ekpSYOCIERuQSbUl5zry+OiqnbdJpcvjdE6h/x9s6723Nqew\nRk2Ev6NB0SrpLEAJK6ELTuLbyMhC9BbOzVzAwETWKYNggyDE14e8AzAT5hvZOvdK\nQeNoSuZZWQ8Ix0OKVi+VYGoTUJRD0nW1Cai7NE84Lb8IrCKiSlgmMAuuJo/rgk1Z\nmTmy15sw06BanLW+jtl0I2+ttMyx/F6SPc0xsFE4VAx1gJZWvkAZ99Bjxalbq64=\n=z17L\n-----END PGP SIGNATURE-----\n", "payload": "tree 325702d4bfa7b69e2ca9da8bbd61cee6eb178fcb\nparent 251d435e2bc003a5042b943f9518e02204b8f66c\nparent 00bb2935fcfb54dcd2b770ff451bd0a4c97738a0\nauthor Dylan DPC <dylan.dpc@gmail.com> 1608515259 +0100\ncommitter GitHub <noreply@github.com> 1608515259 +0100\n\nRollup merge of #80170 - ldm0:fixice, r=lcnr\n\nFix ICE when lookup method in trait for type that have bound vars\n\nCloses #77910\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d729e764926bba02422115d5c60e51519de50dea", "html_url": "https://github.com/rust-lang/rust/commit/d729e764926bba02422115d5c60e51519de50dea", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d729e764926bba02422115d5c60e51519de50dea/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "251d435e2bc003a5042b943f9518e02204b8f66c", "url": "https://api.github.com/repos/rust-lang/rust/commits/251d435e2bc003a5042b943f9518e02204b8f66c", "html_url": "https://github.com/rust-lang/rust/commit/251d435e2bc003a5042b943f9518e02204b8f66c"}, {"sha": "00bb2935fcfb54dcd2b770ff451bd0a4c97738a0", "url": "https://api.github.com/repos/rust-lang/rust/commits/00bb2935fcfb54dcd2b770ff451bd0a4c97738a0", "html_url": "https://github.com/rust-lang/rust/commit/00bb2935fcfb54dcd2b770ff451bd0a4c97738a0"}], "stats": {"total": 69, "additions": 66, "deletions": 3}, "files": [{"sha": "6467e04407939400018df59daecc245cba23084b", "filename": "compiler/rustc_typeck/src/check/_match.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d729e764926bba02422115d5c60e51519de50dea/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2F_match.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d729e764926bba02422115d5c60e51519de50dea/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2F_match.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2F_match.rs?ref=d729e764926bba02422115d5c60e51519de50dea", "patch": "@@ -31,7 +31,7 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n             _ => (false, false, false),\n         };\n \n-        // Type check the descriminant and get its type.\n+        // Type check the discriminant and get its type.\n         let scrutinee_ty = if force_scrutinee_bool {\n             // Here we want to ensure:\n             //"}, {"sha": "9ab056c0d74b3a3d7ef8bc8e683707b16d780542", "filename": "compiler/rustc_typeck/src/check/op.rs", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/d729e764926bba02422115d5c60e51519de50dea/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d729e764926bba02422115d5c60e51519de50dea/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fop.rs?ref=d729e764926bba02422115d5c60e51519de50dea", "patch": "@@ -503,8 +503,14 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n             if !self.tcx.has_typeck_results(def_id) {\n                 return false;\n             }\n-            // We're emitting a suggestion, so we can just ignore regions\n-            let fn_sig = self.tcx.fn_sig(def_id).skip_binder();\n+            // FIXME: Instead of exiting early when encountering bound vars in\n+            // the function signature, consider keeping the binder here and\n+            // propagating it downwards.\n+            let fn_sig = if let Some(fn_sig) = self.tcx.fn_sig(def_id).no_bound_vars() {\n+                fn_sig\n+            } else {\n+                return false;\n+            };\n \n             let other_ty = if let FnDef(def_id, _) = *other_ty.kind() {\n                 if !self.tcx.has_typeck_results(def_id) {"}, {"sha": "d786e3358598446d63d07ccaf7b0584937a1bea5", "filename": "src/test/ui/binop/issue-77910-1.rs", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/d729e764926bba02422115d5c60e51519de50dea/src%2Ftest%2Fui%2Fbinop%2Fissue-77910-1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d729e764926bba02422115d5c60e51519de50dea/src%2Ftest%2Fui%2Fbinop%2Fissue-77910-1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fbinop%2Fissue-77910-1.rs?ref=d729e764926bba02422115d5c60e51519de50dea", "patch": "@@ -0,0 +1,11 @@\n+fn foo(s: &i32) -> &i32 {\n+    let xs;\n+    xs\n+}\n+fn main() {\n+    let y;\n+    // we shouldn't ice with the bound var here.\n+    assert_eq!(foo, y);\n+    //~^ ERROR binary operation `==` cannot be applied to type\n+    //~| ERROR `for<'r> fn(&'r i32) -> &'r i32 {foo}` doesn't implement `Debug`\n+}"}, {"sha": "e48d3e19996f36fb4bbfaafce086967dce3b2e63", "filename": "src/test/ui/binop/issue-77910-1.stderr", "status": "added", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/d729e764926bba02422115d5c60e51519de50dea/src%2Ftest%2Fui%2Fbinop%2Fissue-77910-1.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d729e764926bba02422115d5c60e51519de50dea/src%2Ftest%2Fui%2Fbinop%2Fissue-77910-1.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fbinop%2Fissue-77910-1.stderr?ref=d729e764926bba02422115d5c60e51519de50dea", "patch": "@@ -0,0 +1,26 @@\n+error[E0369]: binary operation `==` cannot be applied to type `for<'r> fn(&'r i32) -> &'r i32 {foo}`\n+  --> $DIR/issue-77910-1.rs:8:5\n+   |\n+LL |     assert_eq!(foo, y);\n+   |     ^^^^^^^^^^^^^^^^^^^\n+   |     |\n+   |     for<'r> fn(&'r i32) -> &'r i32 {foo}\n+   |     _\n+   |\n+   = note: this error originates in a macro (in Nightly builds, run with -Z macro-backtrace for more info)\n+\n+error[E0277]: `for<'r> fn(&'r i32) -> &'r i32 {foo}` doesn't implement `Debug`\n+  --> $DIR/issue-77910-1.rs:8:5\n+   |\n+LL |     assert_eq!(foo, y);\n+   |     ^^^^^^^^^^^^^^^^^^^ `for<'r> fn(&'r i32) -> &'r i32 {foo}` cannot be formatted using `{:?}` because it doesn't implement `Debug`\n+   |\n+   = help: the trait `Debug` is not implemented for `for<'r> fn(&'r i32) -> &'r i32 {foo}`\n+   = note: required because of the requirements on the impl of `Debug` for `&for<'r> fn(&'r i32) -> &'r i32 {foo}`\n+   = note: required by `std::fmt::Debug::fmt`\n+   = note: this error originates in a macro (in Nightly builds, run with -Z macro-backtrace for more info)\n+\n+error: aborting due to 2 previous errors\n+\n+Some errors have detailed explanations: E0277, E0369.\n+For more information about an error, try `rustc --explain E0277`."}, {"sha": "2bb48d3657617df7f6fee9e21aed428d8f69f541", "filename": "src/test/ui/binop/issue-77910-2.rs", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/d729e764926bba02422115d5c60e51519de50dea/src%2Ftest%2Fui%2Fbinop%2Fissue-77910-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d729e764926bba02422115d5c60e51519de50dea/src%2Ftest%2Fui%2Fbinop%2Fissue-77910-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fbinop%2Fissue-77910-2.rs?ref=d729e764926bba02422115d5c60e51519de50dea", "patch": "@@ -0,0 +1,9 @@\n+fn foo(s: &i32) -> &i32 {\n+    let xs;\n+    xs\n+}\n+fn main() {\n+    let y;\n+    if foo == y {}\n+    //~^ ERROR binary operation `==` cannot be applied to type\n+}"}, {"sha": "5477a5762a8fd0fc424ff3fbb5ffd11605c1d175", "filename": "src/test/ui/binop/issue-77910-2.stderr", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/d729e764926bba02422115d5c60e51519de50dea/src%2Ftest%2Fui%2Fbinop%2Fissue-77910-2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d729e764926bba02422115d5c60e51519de50dea/src%2Ftest%2Fui%2Fbinop%2Fissue-77910-2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fbinop%2Fissue-77910-2.stderr?ref=d729e764926bba02422115d5c60e51519de50dea", "patch": "@@ -0,0 +1,11 @@\n+error[E0369]: binary operation `==` cannot be applied to type `for<'r> fn(&'r i32) -> &'r i32 {foo}`\n+  --> $DIR/issue-77910-2.rs:7:12\n+   |\n+LL |     if foo == y {}\n+   |        --- ^^ - _\n+   |        |\n+   |        for<'r> fn(&'r i32) -> &'r i32 {foo}\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0369`."}]}