{"sha": "d9b2e6b74fb0f8b4320c61d78dc5e07a8d3123b5", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ5YjJlNmI3NGZiMGY4YjQzMjBjNjFkNzhkYzVlMDdhOGQzMTIzYjU=", "commit": {"author": {"name": "Alexis Beingessner", "email": "a.beingessner@gmail.com", "date": "2014-08-02T18:36:51Z"}, "committer": {"name": "Alexis Beingessner", "email": "a.beingessner@gmail.com", "date": "2014-08-02T18:50:29Z"}, "message": "fix underflow in vec swap_remove\nfixes #16200", "tree": {"sha": "47903ebf09b27be30d6fa023b4bce925ddaf7c4c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/47903ebf09b27be30d6fa023b4bce925ddaf7c4c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d9b2e6b74fb0f8b4320c61d78dc5e07a8d3123b5", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d9b2e6b74fb0f8b4320c61d78dc5e07a8d3123b5", "html_url": "https://github.com/rust-lang/rust/commit/d9b2e6b74fb0f8b4320c61d78dc5e07a8d3123b5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d9b2e6b74fb0f8b4320c61d78dc5e07a8d3123b5/comments", "author": {"login": "Gankra", "id": 1136864, "node_id": "MDQ6VXNlcjExMzY4NjQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1136864?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Gankra", "html_url": "https://github.com/Gankra", "followers_url": "https://api.github.com/users/Gankra/followers", "following_url": "https://api.github.com/users/Gankra/following{/other_user}", "gists_url": "https://api.github.com/users/Gankra/gists{/gist_id}", "starred_url": "https://api.github.com/users/Gankra/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Gankra/subscriptions", "organizations_url": "https://api.github.com/users/Gankra/orgs", "repos_url": "https://api.github.com/users/Gankra/repos", "events_url": "https://api.github.com/users/Gankra/events{/privacy}", "received_events_url": "https://api.github.com/users/Gankra/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Gankra", "id": 1136864, "node_id": "MDQ6VXNlcjExMzY4NjQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1136864?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Gankra", "html_url": "https://github.com/Gankra", "followers_url": "https://api.github.com/users/Gankra/followers", "following_url": "https://api.github.com/users/Gankra/following{/other_user}", "gists_url": "https://api.github.com/users/Gankra/gists{/gist_id}", "starred_url": "https://api.github.com/users/Gankra/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Gankra/subscriptions", "organizations_url": "https://api.github.com/users/Gankra/orgs", "repos_url": "https://api.github.com/users/Gankra/repos", "events_url": "https://api.github.com/users/Gankra/events{/privacy}", "received_events_url": "https://api.github.com/users/Gankra/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "032d5c1dcd95145d58fe3cce63853855578022a7", "url": "https://api.github.com/repos/rust-lang/rust/commits/032d5c1dcd95145d58fe3cce63853855578022a7", "html_url": "https://github.com/rust-lang/rust/commit/032d5c1dcd95145d58fe3cce63853855578022a7"}], "stats": {"total": 8, "additions": 7, "deletions": 1}, "files": [{"sha": "6618906cf69dee18e8c1b7cac37a68f56ed88d8a", "filename": "src/libcollections/vec.rs", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/d9b2e6b74fb0f8b4320c61d78dc5e07a8d3123b5/src%2Flibcollections%2Fvec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d9b2e6b74fb0f8b4320c61d78dc5e07a8d3123b5/src%2Flibcollections%2Fvec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcollections%2Fvec.rs?ref=d9b2e6b74fb0f8b4320c61d78dc5e07a8d3123b5", "patch": "@@ -964,7 +964,7 @@ impl<T> Vec<T> {\n     #[inline]\n     pub fn swap_remove(&mut self, index: uint) -> Option<T> {\n         let length = self.len();\n-        if index < length - 1 {\n+        if length > 0 && index < length - 1 {\n             self.as_mut_slice().swap(index, length - 1);\n         } else if index >= length {\n             return None\n@@ -2003,6 +2003,12 @@ mod tests {\n         let _ = vec[3];\n     }\n \n+    #[test]\n+    fn test_swap_remove_empty() {\n+        let mut vec: Vec<uint> = vec!();\n+        assert_eq!(vec.swap_remove(0), None);\n+    }\n+\n     #[bench]\n     fn bench_new(b: &mut Bencher) {\n         b.iter(|| {"}]}