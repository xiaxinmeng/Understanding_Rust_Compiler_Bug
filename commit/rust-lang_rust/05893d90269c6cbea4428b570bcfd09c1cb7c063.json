{"sha": "05893d90269c6cbea4428b570bcfd09c1cb7c063", "node_id": "C_kwDOAAsO6NoAKDA1ODkzZDkwMjY5YzZjYmVhNDQyOGI1NzBiY2ZkMDljMWNiN2MwNjM", "commit": {"author": {"name": "David Tolnay", "email": "dtolnay@gmail.com", "date": "2022-06-22T06:21:37Z"}, "committer": {"name": "David Tolnay", "email": "dtolnay@gmail.com", "date": "2022-06-22T06:21:37Z"}, "message": "Bless stderr files after rustfmt", "tree": {"sha": "610d1d5a72f327b7b4b62aaed854b5d1a715bcb3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/610d1d5a72f327b7b4b62aaed854b5d1a715bcb3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/05893d90269c6cbea4428b570bcfd09c1cb7c063", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEERijF2Cz/ZdaBZKeK+boUO5X/bYIFAmKytPEACgkQ+boUO5X/\nbYK5mxAAjQgueih7gTRn+pyiwNYDFk0eSfXXhqZWtJsaCt8fB+xJ74qCFvVCJVFJ\nROO9ED4XsVUKoTdDcHDLsPiqB/5vEirH0qbIK/phAlXqrN67hDKUTCnMc9Ga6pGe\nimh7VccYjXA931EQbciACpc30m9NzJ/i1UbO27p7AFWjRiZMoS2/ngg98IYVjII2\nAQq+p7IsYS0Ag9t7X3qYznXA15kpsdsKzenICTu5Bo6YI3pxYSLhbMJ7Ro+3ny6L\nw4NcS83c44ZWkzYe7Icizoe4JKZ8oDQ+EG+K2Y5tivYXNJDoo727ZdFp3LolqSpL\nuevHBQy7caxWHwOY7Ljz8HJEhIDvKcv5TZ+jIss5nT8nYwMCtcMDiHdhhhTzKcar\nAxcZ6BiGAWcA2sd+Rq30SXAk6GW0fHSv/0mqudTI4NzfogzwvzQ/M0oGZJSy4Ah8\nZrX1tUWOLMVRb4fcT/KJxht+tMFdhHCHqfH3mKanACGsCnNuta2b8LDqgjX4Zupn\nZCdisH8dW0sgW1eJj6UgDSGF7fdvYtcXaHhskjO4ULmGk5FGoP40ek4ZJ4/I/EXQ\nO3i7yS6OOhtf6LqYWQ4FcM3icVDepOYXI0kP9+bYbsRuxBNaadJM3AGp4Bo+U2S5\nOdgkNvp8OAceBJaq7rxNiujYFA83FZkodd3jSYC8GQy1Mt0yaWA=\n=d+jC\n-----END PGP SIGNATURE-----", "payload": "tree 610d1d5a72f327b7b4b62aaed854b5d1a715bcb3\nparent 639f660dde9936368714a10a80a325a78a1b3a99\nauthor David Tolnay <dtolnay@gmail.com> 1655878897 -0700\ncommitter David Tolnay <dtolnay@gmail.com> 1655878897 -0700\n\nBless stderr files after rustfmt\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/05893d90269c6cbea4428b570bcfd09c1cb7c063", "html_url": "https://github.com/rust-lang/rust/commit/05893d90269c6cbea4428b570bcfd09c1cb7c063", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/05893d90269c6cbea4428b570bcfd09c1cb7c063/comments", "author": {"login": "dtolnay", "id": 1940490, "node_id": "MDQ6VXNlcjE5NDA0OTA=", "avatar_url": "https://avatars.githubusercontent.com/u/1940490?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dtolnay", "html_url": "https://github.com/dtolnay", "followers_url": "https://api.github.com/users/dtolnay/followers", "following_url": "https://api.github.com/users/dtolnay/following{/other_user}", "gists_url": "https://api.github.com/users/dtolnay/gists{/gist_id}", "starred_url": "https://api.github.com/users/dtolnay/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dtolnay/subscriptions", "organizations_url": "https://api.github.com/users/dtolnay/orgs", "repos_url": "https://api.github.com/users/dtolnay/repos", "events_url": "https://api.github.com/users/dtolnay/events{/privacy}", "received_events_url": "https://api.github.com/users/dtolnay/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dtolnay", "id": 1940490, "node_id": "MDQ6VXNlcjE5NDA0OTA=", "avatar_url": "https://avatars.githubusercontent.com/u/1940490?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dtolnay", "html_url": "https://github.com/dtolnay", "followers_url": "https://api.github.com/users/dtolnay/followers", "following_url": "https://api.github.com/users/dtolnay/following{/other_user}", "gists_url": "https://api.github.com/users/dtolnay/gists{/gist_id}", "starred_url": "https://api.github.com/users/dtolnay/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dtolnay/subscriptions", "organizations_url": "https://api.github.com/users/dtolnay/orgs", "repos_url": "https://api.github.com/users/dtolnay/repos", "events_url": "https://api.github.com/users/dtolnay/events{/privacy}", "received_events_url": "https://api.github.com/users/dtolnay/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "639f660dde9936368714a10a80a325a78a1b3a99", "url": "https://api.github.com/repos/rust-lang/rust/commits/639f660dde9936368714a10a80a325a78a1b3a99", "html_url": "https://github.com/rust-lang/rust/commit/639f660dde9936368714a10a80a325a78a1b3a99"}], "stats": {"total": 39, "additions": 26, "deletions": 13}, "files": [{"sha": "374d6ab06809109d59008badbfd2c82fa54e70e0", "filename": "tests/fail/branchless-select-i128-pointer.stderr", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/05893d90269c6cbea4428b570bcfd09c1cb7c063/tests%2Ffail%2Fbranchless-select-i128-pointer.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/05893d90269c6cbea4428b570bcfd09c1cb7c063/tests%2Ffail%2Fbranchless-select-i128-pointer.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ffail%2Fbranchless-select-i128-pointer.stderr?ref=05893d90269c6cbea4428b570bcfd09c1cb7c063", "patch": "@@ -2,7 +2,9 @@ error: Undefined Behavior: type validation failed: encountered a dangling refere\n   --> $DIR/branchless-select-i128-pointer.rs:LL:CC\n    |\n LL | /             transmute::<_, &str>(\n-LL | |                 !mask & transmute::<_, TwoPtrs>(\"false !\") | mask & transmute::<_, TwoPtrs>(\"true !\"),\n+LL | |\n+LL | |                 !mask & transmute::<_, TwoPtrs>(\"false !\")\n+LL | |                     | mask & transmute::<_, TwoPtrs>(\"true !\"),\n LL | |             )\n    | |_____________^ type validation failed: encountered a dangling reference (address $HEX is unallocated)\n    |"}, {"sha": "91a681e74450576c503f246a5dd9266142a12123", "filename": "tests/fail/data_race/dealloc_read_race1.stderr", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/05893d90269c6cbea4428b570bcfd09c1cb7c063/tests%2Ffail%2Fdata_race%2Fdealloc_read_race1.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/05893d90269c6cbea4428b570bcfd09c1cb7c063/tests%2Ffail%2Fdata_race%2Fdealloc_read_race1.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ffail%2Fdata_race%2Fdealloc_read_race1.stderr?ref=05893d90269c6cbea4428b570bcfd09c1cb7c063", "patch": "@@ -1,8 +1,13 @@\n error: Undefined Behavior: Data race detected between Deallocate on Thread(id = 2) and Read on Thread(id = 1) at ALLOC (current vector clock = VClock, conflicting timestamp = VClock)\n   --> $DIR/dealloc_read_race1.rs:LL:CC\n    |\n-LL |             __rust_dealloc(ptr.0 as *mut _, std::mem::size_of::<usize>(), std::mem::align_of::<usize>());\n-   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Data race detected between Deallocate on Thread(id = 2) and Read on Thread(id = 1) at ALLOC (current vector clock = VClock, conflicting timestamp = VClock)\n+LL | /             __rust_dealloc(\n+LL | |\n+LL | |                 ptr.0 as *mut _,\n+LL | |                 std::mem::size_of::<usize>(),\n+LL | |                 std::mem::align_of::<usize>(),\n+LL | |             );\n+   | |_____________^ Data race detected between Deallocate on Thread(id = 2) and Read on Thread(id = 1) at ALLOC (current vector clock = VClock, conflicting timestamp = VClock)\n    |\n    = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information"}, {"sha": "dc1a6ed267c6b1d0fefaa2398b52e9408497783a", "filename": "tests/fail/data_race/dealloc_write_race1.stderr", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/05893d90269c6cbea4428b570bcfd09c1cb7c063/tests%2Ffail%2Fdata_race%2Fdealloc_write_race1.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/05893d90269c6cbea4428b570bcfd09c1cb7c063/tests%2Ffail%2Fdata_race%2Fdealloc_write_race1.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ffail%2Fdata_race%2Fdealloc_write_race1.stderr?ref=05893d90269c6cbea4428b570bcfd09c1cb7c063", "patch": "@@ -1,8 +1,13 @@\n error: Undefined Behavior: Data race detected between Deallocate on Thread(id = 2) and Write on Thread(id = 1) at ALLOC (current vector clock = VClock, conflicting timestamp = VClock)\n   --> $DIR/dealloc_write_race1.rs:LL:CC\n    |\n-LL |             __rust_dealloc(ptr.0 as *mut _, std::mem::size_of::<usize>(), std::mem::align_of::<usize>());\n-   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Data race detected between Deallocate on Thread(id = 2) and Write on Thread(id = 1) at ALLOC (current vector clock = VClock, conflicting timestamp = VClock)\n+LL | /             __rust_dealloc(\n+LL | |\n+LL | |                 ptr.0 as *mut _,\n+LL | |                 std::mem::size_of::<usize>(),\n+LL | |                 std::mem::align_of::<usize>(),\n+LL | |             );\n+   | |_____________^ Data race detected between Deallocate on Thread(id = 2) and Write on Thread(id = 1) at ALLOC (current vector clock = VClock, conflicting timestamp = VClock)\n    |\n    = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information"}, {"sha": "56314e6d285930dacfad6ddda8127102b6527a3d", "filename": "tests/fail/function_calls/check_callback_abi.stderr", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/05893d90269c6cbea4428b570bcfd09c1cb7c063/tests%2Ffail%2Ffunction_calls%2Fcheck_callback_abi.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/05893d90269c6cbea4428b570bcfd09c1cb7c063/tests%2Ffail%2Ffunction_calls%2Fcheck_callback_abi.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ffail%2Ffunction_calls%2Fcheck_callback_abi.stderr?ref=05893d90269c6cbea4428b570bcfd09c1cb7c063", "patch": "@@ -2,6 +2,7 @@ error: Undefined Behavior: calling a function with ABI C using caller ABI Rust\n   --> $DIR/check_callback_abi.rs:LL:CC\n    |\n LL | /         std::intrinsics::r#try(\n+LL | |\n LL | |             std::mem::transmute::<extern \"C\" fn(*mut u8), _>(try_fn),\n LL | |             std::ptr::null_mut(),\n LL | |             |_, _| unreachable!(),"}, {"sha": "dee7f66e0ad9cd2d986a2ae6c3d2710718a357cc", "filename": "tests/fail/function_calls/exported_symbol_abi_mismatch.cache.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/05893d90269c6cbea4428b570bcfd09c1cb7c063/tests%2Ffail%2Ffunction_calls%2Fexported_symbol_abi_mismatch.cache.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/05893d90269c6cbea4428b570bcfd09c1cb7c063/tests%2Ffail%2Ffunction_calls%2Fexported_symbol_abi_mismatch.cache.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ffail%2Ffunction_calls%2Fexported_symbol_abi_mismatch.cache.stderr?ref=05893d90269c6cbea4428b570bcfd09c1cb7c063", "patch": "@@ -1,8 +1,8 @@\n error: Undefined Behavior: calling a function with calling convention Rust using calling convention C\n   --> $DIR/exported_symbol_abi_mismatch.rs:LL:CC\n    |\n-LL |         unsafe { foo() }\n-   |                  ^^^^^ calling a function with calling convention Rust using calling convention C\n+LL |             foo();\n+   |             ^^^^^ calling a function with calling convention Rust using calling convention C\n    |\n    = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information"}, {"sha": "ebe19796609cf66dd2cbff9c9431e293dd245818", "filename": "tests/fail/function_calls/exported_symbol_abi_mismatch.fn_ptr.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/05893d90269c6cbea4428b570bcfd09c1cb7c063/tests%2Ffail%2Ffunction_calls%2Fexported_symbol_abi_mismatch.fn_ptr.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/05893d90269c6cbea4428b570bcfd09c1cb7c063/tests%2Ffail%2Ffunction_calls%2Fexported_symbol_abi_mismatch.fn_ptr.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ffail%2Ffunction_calls%2Fexported_symbol_abi_mismatch.fn_ptr.stderr?ref=05893d90269c6cbea4428b570bcfd09c1cb7c063", "patch": "@@ -1,8 +1,8 @@\n error: Undefined Behavior: calling a function with calling convention Rust using calling convention C\n   --> $DIR/exported_symbol_abi_mismatch.rs:LL:CC\n    |\n-LL |     unsafe { std::mem::transmute::<unsafe fn(), unsafe extern \"C\" fn()>(foo)() }\n-   |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ calling a function with calling convention Rust using calling convention C\n+LL |         std::mem::transmute::<unsafe fn(), unsafe extern \"C\" fn()>(foo)();\n+   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ calling a function with calling convention Rust using calling convention C\n    |\n    = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information"}, {"sha": "dee7f66e0ad9cd2d986a2ae6c3d2710718a357cc", "filename": "tests/fail/function_calls/exported_symbol_abi_mismatch.no_cache.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/05893d90269c6cbea4428b570bcfd09c1cb7c063/tests%2Ffail%2Ffunction_calls%2Fexported_symbol_abi_mismatch.no_cache.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/05893d90269c6cbea4428b570bcfd09c1cb7c063/tests%2Ffail%2Ffunction_calls%2Fexported_symbol_abi_mismatch.no_cache.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ffail%2Ffunction_calls%2Fexported_symbol_abi_mismatch.no_cache.stderr?ref=05893d90269c6cbea4428b570bcfd09c1cb7c063", "patch": "@@ -1,8 +1,8 @@\n error: Undefined Behavior: calling a function with calling convention Rust using calling convention C\n   --> $DIR/exported_symbol_abi_mismatch.rs:LL:CC\n    |\n-LL |         unsafe { foo() }\n-   |                  ^^^^^ calling a function with calling convention Rust using calling convention C\n+LL |             foo();\n+   |             ^^^^^ calling a function with calling convention Rust using calling convention C\n    |\n    = help: this indicates a bug in the program: it performed an invalid operation, and caused Undefined Behavior\n    = help: see https://doc.rust-lang.org/nightly/reference/behavior-considered-undefined.html for further information"}, {"sha": "cb1d725ec878c3a936b79386ab5698a072ca6838", "filename": "tests/fail/type-too-large.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/05893d90269c6cbea4428b570bcfd09c1cb7c063/tests%2Ffail%2Ftype-too-large.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/05893d90269c6cbea4428b570bcfd09c1cb7c063/tests%2Ffail%2Ftype-too-large.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ffail%2Ftype-too-large.stderr?ref=05893d90269c6cbea4428b570bcfd09c1cb7c063", "patch": "@@ -1,8 +1,8 @@\n error: post-monomorphization error: values of the type `[u8; 2305843011361177600]` are too big for the current architecture\n   --> $DIR/type-too-large.rs:LL:CC\n    |\n-LL |         [0; (1u64<<61) as usize +(1u64<<31) as usize];\n-   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ values of the type `[u8; 2305843011361177600]` are too big for the current architecture\n+LL |     _fat = [0; (1u64 << 61) as usize + (1u64 << 31) as usize];\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ values of the type `[u8; 2305843011361177600]` are too big for the current architecture\n    |\n    = note: inside `main` at $DIR/type-too-large.rs:LL:CC\n "}]}