{"sha": "10e7fd25feb96f7fe5b82864374833ebf273fa2f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjEwZTdmZDI1ZmViOTZmN2ZlNWI4Mjg2NDM3NDgzM2ViZjI3M2ZhMmY=", "commit": {"author": {"name": "Lauren\u021biu Nicola", "email": "lnicola@dend.ro", "date": "2021-01-10T15:56:53Z"}, "committer": {"name": "Lauren\u021biu Nicola", "email": "lnicola@dend.ro", "date": "2021-01-10T15:56:53Z"}, "message": "Fix typo, parentheses is plural", "tree": {"sha": "f8ccb57d183ed7f3d7b99282358f323c6d97edec", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f8ccb57d183ed7f3d7b99282358f323c6d97edec"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/10e7fd25feb96f7fe5b82864374833ebf273fa2f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/10e7fd25feb96f7fe5b82864374833ebf273fa2f", "html_url": "https://github.com/rust-lang/rust/commit/10e7fd25feb96f7fe5b82864374833ebf273fa2f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/10e7fd25feb96f7fe5b82864374833ebf273fa2f/comments", "author": {"login": "lnicola", "id": 308347, "node_id": "MDQ6VXNlcjMwODM0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/308347?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lnicola", "html_url": "https://github.com/lnicola", "followers_url": "https://api.github.com/users/lnicola/followers", "following_url": "https://api.github.com/users/lnicola/following{/other_user}", "gists_url": "https://api.github.com/users/lnicola/gists{/gist_id}", "starred_url": "https://api.github.com/users/lnicola/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lnicola/subscriptions", "organizations_url": "https://api.github.com/users/lnicola/orgs", "repos_url": "https://api.github.com/users/lnicola/repos", "events_url": "https://api.github.com/users/lnicola/events{/privacy}", "received_events_url": "https://api.github.com/users/lnicola/received_events", "type": "User", "site_admin": false}, "committer": {"login": "lnicola", "id": 308347, "node_id": "MDQ6VXNlcjMwODM0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/308347?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lnicola", "html_url": "https://github.com/lnicola", "followers_url": "https://api.github.com/users/lnicola/followers", "following_url": "https://api.github.com/users/lnicola/following{/other_user}", "gists_url": "https://api.github.com/users/lnicola/gists{/gist_id}", "starred_url": "https://api.github.com/users/lnicola/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lnicola/subscriptions", "organizations_url": "https://api.github.com/users/lnicola/orgs", "repos_url": "https://api.github.com/users/lnicola/repos", "events_url": "https://api.github.com/users/lnicola/events{/privacy}", "received_events_url": "https://api.github.com/users/lnicola/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "035fed5f9f7c062da7d23190dab1a7021fd48a5d", "url": "https://api.github.com/repos/rust-lang/rust/commits/035fed5f9f7c062da7d23190dab1a7021fd48a5d", "html_url": "https://github.com/rust-lang/rust/commit/035fed5f9f7c062da7d23190dab1a7021fd48a5d"}], "stats": {"total": 270, "additions": 135, "deletions": 135}, "files": [{"sha": "8dd05ac5245ae1ca8f1c78c05aebcf3ba86a2950", "filename": "crates/ide/src/syntax_highlighting/tags.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/10e7fd25feb96f7fe5b82864374833ebf273fa2f/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftags.rs", "raw_url": "https://github.com/rust-lang/rust/raw/10e7fd25feb96f7fe5b82864374833ebf273fa2f/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftags.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftags.rs?ref=10e7fd25feb96f7fe5b82864374833ebf273fa2f", "patch": "@@ -120,7 +120,7 @@ impl HlTag {\n             HlTag::Punctuation(punct) => match punct {\n                 HlPunct::Bracket => \"bracket\",\n                 HlPunct::Brace => \"brace\",\n-                HlPunct::Parenthesis => \"parentheses\",\n+                HlPunct::Parenthesis => \"parenthesis\",\n                 HlPunct::Angle => \"angle\",\n                 HlPunct::Comma => \"comma\",\n                 HlPunct::Dot => \"dot\","}, {"sha": "e36e6fc3fa1ef1171a0c24d5f1f58bee386196ff", "filename": "crates/ide/src/syntax_highlighting/test_data/highlight_assoc_functions.html", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/10e7fd25feb96f7fe5b82864374833ebf273fa2f/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftest_data%2Fhighlight_assoc_functions.html", "raw_url": "https://github.com/rust-lang/rust/raw/10e7fd25feb96f7fe5b82864374833ebf273fa2f/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftest_data%2Fhighlight_assoc_functions.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftest_data%2Fhighlight_assoc_functions.html?ref=10e7fd25feb96f7fe5b82864374833ebf273fa2f", "patch": "@@ -36,22 +36,22 @@\n \n .unresolved_reference { color: #FC5555; text-decoration: wavy underline; }\n </style>\n-<pre><code><span class=\"keyword\">fn</span> <span class=\"function declaration\">not_static</span><span class=\"parentheses\">(</span><span class=\"parentheses\">)</span> <span class=\"brace\">{</span><span class=\"brace\">}</span>\n+<pre><code><span class=\"keyword\">fn</span> <span class=\"function declaration\">not_static</span><span class=\"parenthesis\">(</span><span class=\"parenthesis\">)</span> <span class=\"brace\">{</span><span class=\"brace\">}</span>\n \n <span class=\"keyword\">struct</span> <span class=\"struct declaration\">foo</span> <span class=\"brace\">{</span><span class=\"brace\">}</span>\n \n <span class=\"keyword\">impl</span> <span class=\"struct\">foo</span> <span class=\"brace\">{</span>\n-    <span class=\"keyword\">pub</span> <span class=\"keyword\">fn</span> <span class=\"function declaration static associated\">is_static</span><span class=\"parentheses\">(</span><span class=\"parentheses\">)</span> <span class=\"brace\">{</span><span class=\"brace\">}</span>\n-    <span class=\"keyword\">pub</span> <span class=\"keyword\">fn</span> <span class=\"function declaration associated\">is_not_static</span><span class=\"parentheses\">(</span><span class=\"operator\">&</span><span class=\"self_keyword\">self</span><span class=\"parentheses\">)</span> <span class=\"brace\">{</span><span class=\"brace\">}</span>\n+    <span class=\"keyword\">pub</span> <span class=\"keyword\">fn</span> <span class=\"function declaration static associated\">is_static</span><span class=\"parenthesis\">(</span><span class=\"parenthesis\">)</span> <span class=\"brace\">{</span><span class=\"brace\">}</span>\n+    <span class=\"keyword\">pub</span> <span class=\"keyword\">fn</span> <span class=\"function declaration associated\">is_not_static</span><span class=\"parenthesis\">(</span><span class=\"operator\">&</span><span class=\"self_keyword\">self</span><span class=\"parenthesis\">)</span> <span class=\"brace\">{</span><span class=\"brace\">}</span>\n <span class=\"brace\">}</span>\n \n <span class=\"keyword\">trait</span> <span class=\"trait declaration\">t</span> <span class=\"brace\">{</span>\n-    <span class=\"keyword\">fn</span> <span class=\"function declaration static associated\">t_is_static</span><span class=\"parentheses\">(</span><span class=\"parentheses\">)</span> <span class=\"brace\">{</span><span class=\"brace\">}</span>\n-    <span class=\"keyword\">fn</span> <span class=\"function declaration associated\">t_is_not_static</span><span class=\"parentheses\">(</span><span class=\"operator\">&</span><span class=\"self_keyword\">self</span><span class=\"parentheses\">)</span> <span class=\"brace\">{</span><span class=\"brace\">}</span>\n+    <span class=\"keyword\">fn</span> <span class=\"function declaration static associated\">t_is_static</span><span class=\"parenthesis\">(</span><span class=\"parenthesis\">)</span> <span class=\"brace\">{</span><span class=\"brace\">}</span>\n+    <span class=\"keyword\">fn</span> <span class=\"function declaration associated\">t_is_not_static</span><span class=\"parenthesis\">(</span><span class=\"operator\">&</span><span class=\"self_keyword\">self</span><span class=\"parenthesis\">)</span> <span class=\"brace\">{</span><span class=\"brace\">}</span>\n <span class=\"brace\">}</span>\n \n <span class=\"keyword\">impl</span> <span class=\"trait\">t</span> <span class=\"keyword\">for</span> <span class=\"struct\">foo</span> <span class=\"brace\">{</span>\n-    <span class=\"keyword\">pub</span> <span class=\"keyword\">fn</span> <span class=\"function declaration static associated\">is_static</span><span class=\"parentheses\">(</span><span class=\"parentheses\">)</span> <span class=\"brace\">{</span><span class=\"brace\">}</span>\n-    <span class=\"keyword\">pub</span> <span class=\"keyword\">fn</span> <span class=\"function declaration associated\">is_not_static</span><span class=\"parentheses\">(</span><span class=\"operator\">&</span><span class=\"self_keyword\">self</span><span class=\"parentheses\">)</span> <span class=\"brace\">{</span><span class=\"brace\">}</span>\n+    <span class=\"keyword\">pub</span> <span class=\"keyword\">fn</span> <span class=\"function declaration static associated\">is_static</span><span class=\"parenthesis\">(</span><span class=\"parenthesis\">)</span> <span class=\"brace\">{</span><span class=\"brace\">}</span>\n+    <span class=\"keyword\">pub</span> <span class=\"keyword\">fn</span> <span class=\"function declaration associated\">is_not_static</span><span class=\"parenthesis\">(</span><span class=\"operator\">&</span><span class=\"self_keyword\">self</span><span class=\"parenthesis\">)</span> <span class=\"brace\">{</span><span class=\"brace\">}</span>\n <span class=\"brace\">}</span>\n         </code></pre>\n\\ No newline at end of file"}, {"sha": "6dadda1c1dddaf511be2ae8f9a65b9508a464ca9", "filename": "crates/ide/src/syntax_highlighting/test_data/highlight_doctest.html", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/10e7fd25feb96f7fe5b82864374833ebf273fa2f/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftest_data%2Fhighlight_doctest.html", "raw_url": "https://github.com/rust-lang/rust/raw/10e7fd25feb96f7fe5b82864374833ebf273fa2f/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftest_data%2Fhighlight_doctest.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftest_data%2Fhighlight_doctest.html?ref=10e7fd25feb96f7fe5b82864374833ebf273fa2f", "patch": "@@ -56,10 +56,10 @@\n     <span class=\"comment documentation\">/// # Examples</span>\n     <span class=\"comment documentation\">///</span>\n     <span class=\"comment documentation\">/// ```</span>\n-    <span class=\"comment documentation\">/// #</span><span class=\"none injected\"> </span><span class=\"attribute attribute injected\">#</span><span class=\"attribute attribute injected\">!</span><span class=\"attribute attribute injected\">[</span><span class=\"function attribute injected\">allow</span><span class=\"parentheses attribute injected\">(</span><span class=\"attribute attribute injected\">unused_mut</span><span class=\"parentheses attribute injected\">)</span><span class=\"attribute attribute injected\">]</span>\n-    <span class=\"comment documentation\">/// </span><span class=\"keyword injected\">let</span><span class=\"none injected\"> </span><span class=\"keyword injected\">mut</span><span class=\"none injected\"> </span><span class=\"variable declaration injected mutable\">foo</span><span class=\"colon injected\">:</span><span class=\"none injected\"> </span><span class=\"struct injected\">Foo</span><span class=\"none injected\"> </span><span class=\"operator injected\">=</span><span class=\"none injected\"> </span><span class=\"struct injected\">Foo</span><span class=\"operator injected\">::</span><span class=\"function injected\">new</span><span class=\"parentheses injected\">(</span><span class=\"parentheses injected\">)</span><span class=\"semicolon injected\">;</span>\n+    <span class=\"comment documentation\">/// #</span><span class=\"none injected\"> </span><span class=\"attribute attribute injected\">#</span><span class=\"attribute attribute injected\">!</span><span class=\"attribute attribute injected\">[</span><span class=\"function attribute injected\">allow</span><span class=\"parenthesis attribute injected\">(</span><span class=\"attribute attribute injected\">unused_mut</span><span class=\"parenthesis attribute injected\">)</span><span class=\"attribute attribute injected\">]</span>\n+    <span class=\"comment documentation\">/// </span><span class=\"keyword injected\">let</span><span class=\"none injected\"> </span><span class=\"keyword injected\">mut</span><span class=\"none injected\"> </span><span class=\"variable declaration injected mutable\">foo</span><span class=\"colon injected\">:</span><span class=\"none injected\"> </span><span class=\"struct injected\">Foo</span><span class=\"none injected\"> </span><span class=\"operator injected\">=</span><span class=\"none injected\"> </span><span class=\"struct injected\">Foo</span><span class=\"operator injected\">::</span><span class=\"function injected\">new</span><span class=\"parenthesis injected\">(</span><span class=\"parenthesis injected\">)</span><span class=\"semicolon injected\">;</span>\n     <span class=\"comment documentation\">/// ```</span>\n-    <span class=\"keyword\">pub</span> <span class=\"keyword\">const</span> <span class=\"keyword\">fn</span> <span class=\"function declaration static associated\">new</span><span class=\"parentheses\">(</span><span class=\"parentheses\">)</span> <span class=\"operator\">-&gt;</span> <span class=\"struct\">Foo</span> <span class=\"brace\">{</span>\n+    <span class=\"keyword\">pub</span> <span class=\"keyword\">const</span> <span class=\"keyword\">fn</span> <span class=\"function declaration static associated\">new</span><span class=\"parenthesis\">(</span><span class=\"parenthesis\">)</span> <span class=\"operator\">-&gt;</span> <span class=\"struct\">Foo</span> <span class=\"brace\">{</span>\n         <span class=\"struct\">Foo</span> <span class=\"brace\">{</span> <span class=\"field\">bar</span><span class=\"colon\">:</span> <span class=\"bool_literal\">true</span> <span class=\"brace\">}</span>\n     <span class=\"brace\">}</span>\n \n@@ -70,10 +70,10 @@\n     <span class=\"comment documentation\">/// ```</span>\n     <span class=\"comment documentation\">/// </span><span class=\"keyword injected\">use</span><span class=\"none injected\"> </span><span class=\"module injected\">x</span><span class=\"operator injected\">::</span><span class=\"module injected\">y</span><span class=\"semicolon injected\">;</span>\n     <span class=\"comment documentation\">///</span>\n-    <span class=\"comment documentation\">/// </span><span class=\"keyword injected\">let</span><span class=\"none injected\"> </span><span class=\"variable declaration injected\">foo</span><span class=\"none injected\"> </span><span class=\"operator injected\">=</span><span class=\"none injected\"> </span><span class=\"struct injected\">Foo</span><span class=\"operator injected\">::</span><span class=\"function injected\">new</span><span class=\"parentheses injected\">(</span><span class=\"parentheses injected\">)</span><span class=\"semicolon injected\">;</span>\n+    <span class=\"comment documentation\">/// </span><span class=\"keyword injected\">let</span><span class=\"none injected\"> </span><span class=\"variable declaration injected\">foo</span><span class=\"none injected\"> </span><span class=\"operator injected\">=</span><span class=\"none injected\"> </span><span class=\"struct injected\">Foo</span><span class=\"operator injected\">::</span><span class=\"function injected\">new</span><span class=\"parenthesis injected\">(</span><span class=\"parenthesis injected\">)</span><span class=\"semicolon injected\">;</span>\n     <span class=\"comment documentation\">///</span>\n     <span class=\"comment documentation\">/// </span><span class=\"comment injected\">// calls bar on foo</span>\n-    <span class=\"comment documentation\">/// </span><span class=\"macro injected\">assert!</span><span class=\"parentheses injected\">(</span><span class=\"none injected\">foo</span><span class=\"operator injected\">.</span><span class=\"none injected\">bar</span><span class=\"parentheses injected\">(</span><span class=\"parentheses injected\">)</span><span class=\"parentheses injected\">)</span><span class=\"semicolon injected\">;</span>\n+    <span class=\"comment documentation\">/// </span><span class=\"macro injected\">assert!</span><span class=\"parenthesis injected\">(</span><span class=\"none injected\">foo</span><span class=\"operator injected\">.</span><span class=\"none injected\">bar</span><span class=\"parenthesis injected\">(</span><span class=\"parenthesis injected\">)</span><span class=\"parenthesis injected\">)</span><span class=\"semicolon injected\">;</span>\n     <span class=\"comment documentation\">///</span>\n     <span class=\"comment documentation\">/// </span><span class=\"keyword injected\">let</span><span class=\"none injected\"> </span><span class=\"variable declaration injected\">bar</span><span class=\"none injected\"> </span><span class=\"operator injected\">=</span><span class=\"none injected\"> </span><span class=\"variable injected\">foo</span><span class=\"operator injected\">.</span><span class=\"field injected\">bar</span><span class=\"none injected\"> </span><span class=\"operator injected\">||</span><span class=\"none injected\"> </span><span class=\"struct injected\">Foo</span><span class=\"operator injected\">::</span><span class=\"constant injected\">bar</span><span class=\"semicolon injected\">;</span>\n     <span class=\"comment documentation\">///</span>\n@@ -87,22 +87,22 @@\n     <span class=\"comment documentation\">/// ```</span>\n     <span class=\"comment documentation\">///</span>\n     <span class=\"comment documentation\">/// ```rust,no_run</span>\n-    <span class=\"comment documentation\">/// </span><span class=\"keyword injected\">let</span><span class=\"none injected\"> </span><span class=\"variable declaration injected\">foobar</span><span class=\"none injected\"> </span><span class=\"operator injected\">=</span><span class=\"none injected\"> </span><span class=\"struct injected\">Foo</span><span class=\"operator injected\">::</span><span class=\"function injected\">new</span><span class=\"parentheses injected\">(</span><span class=\"parentheses injected\">)</span><span class=\"operator injected\">.</span><span class=\"function injected\">bar</span><span class=\"parentheses injected\">(</span><span class=\"parentheses injected\">)</span><span class=\"semicolon injected\">;</span>\n+    <span class=\"comment documentation\">/// </span><span class=\"keyword injected\">let</span><span class=\"none injected\"> </span><span class=\"variable declaration injected\">foobar</span><span class=\"none injected\"> </span><span class=\"operator injected\">=</span><span class=\"none injected\"> </span><span class=\"struct injected\">Foo</span><span class=\"operator injected\">::</span><span class=\"function injected\">new</span><span class=\"parenthesis injected\">(</span><span class=\"parenthesis injected\">)</span><span class=\"operator injected\">.</span><span class=\"function injected\">bar</span><span class=\"parenthesis injected\">(</span><span class=\"parenthesis injected\">)</span><span class=\"semicolon injected\">;</span>\n     <span class=\"comment documentation\">/// ```</span>\n     <span class=\"comment documentation\">///</span>\n     <span class=\"comment documentation\">/// ```sh</span>\n     <span class=\"comment documentation\">/// echo 1</span>\n     <span class=\"comment documentation\">/// ```</span>\n-    <span class=\"keyword\">pub</span> <span class=\"keyword\">fn</span> <span class=\"function declaration associated\">foo</span><span class=\"parentheses\">(</span><span class=\"operator\">&</span><span class=\"self_keyword\">self</span><span class=\"parentheses\">)</span> <span class=\"operator\">-&gt;</span> <span class=\"builtin_type\">bool</span> <span class=\"brace\">{</span>\n+    <span class=\"keyword\">pub</span> <span class=\"keyword\">fn</span> <span class=\"function declaration associated\">foo</span><span class=\"parenthesis\">(</span><span class=\"operator\">&</span><span class=\"self_keyword\">self</span><span class=\"parenthesis\">)</span> <span class=\"operator\">-&gt;</span> <span class=\"builtin_type\">bool</span> <span class=\"brace\">{</span>\n         <span class=\"bool_literal\">true</span>\n     <span class=\"brace\">}</span>\n <span class=\"brace\">}</span>\n \n <span class=\"comment documentation\">/// ```</span>\n-<span class=\"comment documentation\">/// </span><span class=\"macro injected\">noop!</span><span class=\"parentheses injected\">(</span><span class=\"numeric_literal injected\">1</span><span class=\"parentheses injected\">)</span><span class=\"semicolon injected\">;</span>\n+<span class=\"comment documentation\">/// </span><span class=\"macro injected\">noop!</span><span class=\"parenthesis injected\">(</span><span class=\"numeric_literal injected\">1</span><span class=\"parenthesis injected\">)</span><span class=\"semicolon injected\">;</span>\n <span class=\"comment documentation\">/// ```</span>\n <span class=\"keyword\">macro_rules</span><span class=\"punctuation\">!</span> <span class=\"macro declaration\">noop</span> <span class=\"brace\">{</span>\n-    <span class=\"parentheses\">(</span><span class=\"punctuation\">$</span>expr<span class=\"colon\">:</span>expr<span class=\"parentheses\">)</span> <span class=\"operator\">=</span><span class=\"angle\">&gt;</span> <span class=\"brace\">{</span>\n+    <span class=\"parenthesis\">(</span><span class=\"punctuation\">$</span>expr<span class=\"colon\">:</span>expr<span class=\"parenthesis\">)</span> <span class=\"operator\">=</span><span class=\"angle\">&gt;</span> <span class=\"brace\">{</span>\n         <span class=\"punctuation\">$</span>expr\n     <span class=\"brace\">}</span>\n <span class=\"brace\">}</span></code></pre>\n\\ No newline at end of file"}, {"sha": "753b535b553d4aca22f974d521263a19fd9c50d0", "filename": "crates/ide/src/syntax_highlighting/test_data/highlight_injection.html", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/10e7fd25feb96f7fe5b82864374833ebf273fa2f/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftest_data%2Fhighlight_injection.html", "raw_url": "https://github.com/rust-lang/rust/raw/10e7fd25feb96f7fe5b82864374833ebf273fa2f/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftest_data%2Fhighlight_injection.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftest_data%2Fhighlight_injection.html?ref=10e7fd25feb96f7fe5b82864374833ebf273fa2f", "patch": "@@ -36,14 +36,14 @@\n \n .unresolved_reference { color: #FC5555; text-decoration: wavy underline; }\n </style>\n-<pre><code><span class=\"keyword\">fn</span> <span class=\"function declaration\">fixture</span><span class=\"parentheses\">(</span><span class=\"value_param declaration\">ra_fixture</span><span class=\"colon\">:</span> <span class=\"operator\">&</span><span class=\"builtin_type\">str</span><span class=\"parentheses\">)</span> <span class=\"brace\">{</span><span class=\"brace\">}</span>\n+<pre><code><span class=\"keyword\">fn</span> <span class=\"function declaration\">fixture</span><span class=\"parenthesis\">(</span><span class=\"value_param declaration\">ra_fixture</span><span class=\"colon\">:</span> <span class=\"operator\">&</span><span class=\"builtin_type\">str</span><span class=\"parenthesis\">)</span> <span class=\"brace\">{</span><span class=\"brace\">}</span>\n \n-<span class=\"keyword\">fn</span> <span class=\"function declaration\">main</span><span class=\"parentheses\">(</span><span class=\"parentheses\">)</span> <span class=\"brace\">{</span>\n-    <span class=\"function\">fixture</span><span class=\"parentheses\">(</span><span class=\"string_literal\">r#\"</span>\n+<span class=\"keyword\">fn</span> <span class=\"function declaration\">main</span><span class=\"parenthesis\">(</span><span class=\"parenthesis\">)</span> <span class=\"brace\">{</span>\n+    <span class=\"function\">fixture</span><span class=\"parenthesis\">(</span><span class=\"string_literal\">r#\"</span>\n         <span class=\"keyword\">trait</span> <span class=\"trait declaration\">Foo</span> <span class=\"brace\">{</span>\n-            <span class=\"keyword\">fn</span> <span class=\"function declaration static associated\">foo</span><span class=\"parentheses\">(</span><span class=\"parentheses\">)</span> <span class=\"brace\">{</span>\n-                <span class=\"macro\">println!</span><span class=\"parentheses\">(</span><span class=\"string_literal\">\"2 + 2 = {}\"</span><span class=\"comma\">,</span> <span class=\"numeric_literal\">4</span><span class=\"parentheses\">)</span><span class=\"semicolon\">;</span>\n+            <span class=\"keyword\">fn</span> <span class=\"function declaration static associated\">foo</span><span class=\"parenthesis\">(</span><span class=\"parenthesis\">)</span> <span class=\"brace\">{</span>\n+                <span class=\"macro\">println!</span><span class=\"parenthesis\">(</span><span class=\"string_literal\">\"2 + 2 = {}\"</span><span class=\"comma\">,</span> <span class=\"numeric_literal\">4</span><span class=\"parenthesis\">)</span><span class=\"semicolon\">;</span>\n             <span class=\"brace\">}</span>\n         <span class=\"brace\">}</span><span class=\"string_literal\">\"#</span>\n-    <span class=\"parentheses\">)</span><span class=\"semicolon\">;</span>\n+    <span class=\"parenthesis\">)</span><span class=\"semicolon\">;</span>\n <span class=\"brace\">}</span></code></pre>\n\\ No newline at end of file"}, {"sha": "66d80c4b66ca10c895c4554e77f63b3711a8d843", "filename": "crates/ide/src/syntax_highlighting/test_data/highlight_strings.html", "status": "modified", "additions": 48, "deletions": 48, "changes": 96, "blob_url": "https://github.com/rust-lang/rust/blob/10e7fd25feb96f7fe5b82864374833ebf273fa2f/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftest_data%2Fhighlight_strings.html", "raw_url": "https://github.com/rust-lang/rust/raw/10e7fd25feb96f7fe5b82864374833ebf273fa2f/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftest_data%2Fhighlight_strings.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftest_data%2Fhighlight_strings.html?ref=10e7fd25feb96f7fe5b82864374833ebf273fa2f", "patch": "@@ -37,63 +37,63 @@\n .unresolved_reference { color: #FC5555; text-decoration: wavy underline; }\n </style>\n <pre><code><span class=\"keyword\">macro_rules</span><span class=\"punctuation\">!</span> <span class=\"macro declaration\">println</span> <span class=\"brace\">{</span>\n-    <span class=\"parentheses\">(</span><span class=\"punctuation\">$</span><span class=\"parentheses\">(</span><span class=\"punctuation\">$</span>arg<span class=\"colon\">:</span>tt<span class=\"parentheses\">)</span><span class=\"punctuation\">*</span><span class=\"parentheses\">)</span> <span class=\"operator\">=</span><span class=\"angle\">&gt;</span> <span class=\"parentheses\">(</span><span class=\"brace\">{</span>\n-        <span class=\"punctuation\">$</span>crate<span class=\"colon\">:</span><span class=\"colon\">:</span>io<span class=\"colon\">:</span><span class=\"colon\">:</span>_print<span class=\"parentheses\">(</span><span class=\"punctuation\">$</span>crate<span class=\"colon\">:</span><span class=\"colon\">:</span>format_args_nl<span class=\"punctuation\">!</span><span class=\"parentheses\">(</span><span class=\"punctuation\">$</span><span class=\"parentheses\">(</span><span class=\"punctuation\">$</span>arg<span class=\"parentheses\">)</span><span class=\"punctuation\">*</span><span class=\"parentheses\">)</span><span class=\"parentheses\">)</span><span class=\"semicolon\">;</span>\n-    <span class=\"brace\">}</span><span class=\"parentheses\">)</span>\n+    <span class=\"parenthesis\">(</span><span class=\"punctuation\">$</span><span class=\"parenthesis\">(</span><span class=\"punctuation\">$</span>arg<span class=\"colon\">:</span>tt<span class=\"parenthesis\">)</span><span class=\"punctuation\">*</span><span class=\"parenthesis\">)</span> <span class=\"operator\">=</span><span class=\"angle\">&gt;</span> <span class=\"parenthesis\">(</span><span class=\"brace\">{</span>\n+        <span class=\"punctuation\">$</span>crate<span class=\"colon\">:</span><span class=\"colon\">:</span>io<span class=\"colon\">:</span><span class=\"colon\">:</span>_print<span class=\"parenthesis\">(</span><span class=\"punctuation\">$</span>crate<span class=\"colon\">:</span><span class=\"colon\">:</span>format_args_nl<span class=\"punctuation\">!</span><span class=\"parenthesis\">(</span><span class=\"punctuation\">$</span><span class=\"parenthesis\">(</span><span class=\"punctuation\">$</span>arg<span class=\"parenthesis\">)</span><span class=\"punctuation\">*</span><span class=\"parenthesis\">)</span><span class=\"parenthesis\">)</span><span class=\"semicolon\">;</span>\n+    <span class=\"brace\">}</span><span class=\"parenthesis\">)</span>\n <span class=\"brace\">}</span>\n <span class=\"attribute attribute\">#</span><span class=\"attribute attribute\">[</span><span class=\"function attribute\">rustc_builtin_macro</span><span class=\"attribute attribute\">]</span>\n <span class=\"keyword\">macro_rules</span><span class=\"punctuation\">!</span> <span class=\"macro declaration\">format_args_nl</span> <span class=\"brace\">{</span>\n-    <span class=\"parentheses\">(</span><span class=\"punctuation\">$</span>fmt<span class=\"colon\">:</span>expr<span class=\"parentheses\">)</span> <span class=\"operator\">=</span><span class=\"angle\">&gt;</span> <span class=\"brace\">{</span><span class=\"brace\">{</span> <span class=\"comment\">/* compiler built-in */</span> <span class=\"brace\">}</span><span class=\"brace\">}</span><span class=\"semicolon\">;</span>\n-    <span class=\"parentheses\">(</span><span class=\"punctuation\">$</span>fmt<span class=\"colon\">:</span>expr<span class=\"comma\">,</span> <span class=\"punctuation\">$</span><span class=\"parentheses\">(</span><span class=\"punctuation\">$</span>args<span class=\"colon\">:</span>tt<span class=\"parentheses\">)</span><span class=\"punctuation\">*</span><span class=\"parentheses\">)</span> <span class=\"operator\">=</span><span class=\"angle\">&gt;</span> <span class=\"brace\">{</span><span class=\"brace\">{</span> <span class=\"comment\">/* compiler built-in */</span> <span class=\"brace\">}</span><span class=\"brace\">}</span><span class=\"semicolon\">;</span>\n+    <span class=\"parenthesis\">(</span><span class=\"punctuation\">$</span>fmt<span class=\"colon\">:</span>expr<span class=\"parenthesis\">)</span> <span class=\"operator\">=</span><span class=\"angle\">&gt;</span> <span class=\"brace\">{</span><span class=\"brace\">{</span> <span class=\"comment\">/* compiler built-in */</span> <span class=\"brace\">}</span><span class=\"brace\">}</span><span class=\"semicolon\">;</span>\n+    <span class=\"parenthesis\">(</span><span class=\"punctuation\">$</span>fmt<span class=\"colon\">:</span>expr<span class=\"comma\">,</span> <span class=\"punctuation\">$</span><span class=\"parenthesis\">(</span><span class=\"punctuation\">$</span>args<span class=\"colon\">:</span>tt<span class=\"parenthesis\">)</span><span class=\"punctuation\">*</span><span class=\"parenthesis\">)</span> <span class=\"operator\">=</span><span class=\"angle\">&gt;</span> <span class=\"brace\">{</span><span class=\"brace\">{</span> <span class=\"comment\">/* compiler built-in */</span> <span class=\"brace\">}</span><span class=\"brace\">}</span><span class=\"semicolon\">;</span>\n <span class=\"brace\">}</span>\n \n-<span class=\"keyword\">fn</span> <span class=\"function declaration\">main</span><span class=\"parentheses\">(</span><span class=\"parentheses\">)</span> <span class=\"brace\">{</span>\n+<span class=\"keyword\">fn</span> <span class=\"function declaration\">main</span><span class=\"parenthesis\">(</span><span class=\"parenthesis\">)</span> <span class=\"brace\">{</span>\n     <span class=\"comment\">// from https://doc.rust-lang.org/std/fmt/index.html</span>\n-    <span class=\"macro\">println!</span><span class=\"parentheses\">(</span><span class=\"string_literal\">\"Hello\"</span><span class=\"parentheses\">)</span><span class=\"semicolon\">;</span>                 <span class=\"comment\">// =&gt; \"Hello\"</span>\n-    <span class=\"macro\">println!</span><span class=\"parentheses\">(</span><span class=\"string_literal\">\"Hello, </span><span class=\"format_specifier\">{</span><span class=\"format_specifier\">}</span><span class=\"string_literal\">!\"</span><span class=\"comma\">,</span> <span class=\"string_literal\">\"world\"</span><span class=\"parentheses\">)</span><span class=\"semicolon\">;</span>   <span class=\"comment\">// =&gt; \"Hello, world!\"</span>\n-    <span class=\"macro\">println!</span><span class=\"parentheses\">(</span><span class=\"string_literal\">\"The number is </span><span class=\"format_specifier\">{</span><span class=\"format_specifier\">}</span><span class=\"string_literal\">\"</span><span class=\"comma\">,</span> <span class=\"numeric_literal\">1</span><span class=\"parentheses\">)</span><span class=\"semicolon\">;</span>   <span class=\"comment\">// =&gt; \"The number is 1\"</span>\n-    <span class=\"macro\">println!</span><span class=\"parentheses\">(</span><span class=\"string_literal\">\"</span><span class=\"format_specifier\">{</span><span class=\"format_specifier\">:</span><span class=\"format_specifier\">?</span><span class=\"format_specifier\">}</span><span class=\"string_literal\">\"</span><span class=\"comma\">,</span> <span class=\"parentheses\">(</span><span class=\"numeric_literal\">3</span><span class=\"comma\">,</span> <span class=\"numeric_literal\">4</span><span class=\"parentheses\">)</span><span class=\"parentheses\">)</span><span class=\"semicolon\">;</span>          <span class=\"comment\">// =&gt; \"(3, 4)\"</span>\n-    <span class=\"macro\">println!</span><span class=\"parentheses\">(</span><span class=\"string_literal\">\"</span><span class=\"format_specifier\">{</span><span class=\"variable\">value</span><span class=\"format_specifier\">}</span><span class=\"string_literal\">\"</span><span class=\"comma\">,</span> value<span class=\"operator\">=</span><span class=\"numeric_literal\">4</span><span class=\"parentheses\">)</span><span class=\"semicolon\">;</span>      <span class=\"comment\">// =&gt; \"4\"</span>\n-    <span class=\"macro\">println!</span><span class=\"parentheses\">(</span><span class=\"string_literal\">\"</span><span class=\"format_specifier\">{</span><span class=\"format_specifier\">}</span><span class=\"string_literal\"> </span><span class=\"format_specifier\">{</span><span class=\"format_specifier\">}</span><span class=\"string_literal\">\"</span><span class=\"comma\">,</span> <span class=\"numeric_literal\">1</span><span class=\"comma\">,</span> <span class=\"numeric_literal\">2</span><span class=\"parentheses\">)</span><span class=\"semicolon\">;</span>           <span class=\"comment\">// =&gt; \"1 2\"</span>\n-    <span class=\"macro\">println!</span><span class=\"parentheses\">(</span><span class=\"string_literal\">\"</span><span class=\"format_specifier\">{</span><span class=\"format_specifier\">:</span><span class=\"numeric_literal\">0</span><span class=\"numeric_literal\">4</span><span class=\"format_specifier\">}</span><span class=\"string_literal\">\"</span><span class=\"comma\">,</span> <span class=\"numeric_literal\">42</span><span class=\"parentheses\">)</span><span class=\"semicolon\">;</span>             <span class=\"comment\">// =&gt; \"0042\" with leading zerosV</span>\n-    <span class=\"macro\">println!</span><span class=\"parentheses\">(</span><span class=\"string_literal\">\"</span><span class=\"format_specifier\">{</span><span class=\"numeric_literal\">1</span><span class=\"format_specifier\">}</span><span class=\"string_literal\"> </span><span class=\"format_specifier\">{</span><span class=\"format_specifier\">}</span><span class=\"string_literal\"> </span><span class=\"format_specifier\">{</span><span class=\"numeric_literal\">0</span><span class=\"format_specifier\">}</span><span class=\"string_literal\"> </span><span class=\"format_specifier\">{</span><span class=\"format_specifier\">}</span><span class=\"string_literal\">\"</span><span class=\"comma\">,</span> <span class=\"numeric_literal\">1</span><span class=\"comma\">,</span> <span class=\"numeric_literal\">2</span><span class=\"parentheses\">)</span><span class=\"semicolon\">;</span>   <span class=\"comment\">// =&gt; \"2 1 1 2\"</span>\n-    <span class=\"macro\">println!</span><span class=\"parentheses\">(</span><span class=\"string_literal\">\"</span><span class=\"format_specifier\">{</span><span class=\"variable\">argument</span><span class=\"format_specifier\">}</span><span class=\"string_literal\">\"</span><span class=\"comma\">,</span> argument <span class=\"operator\">=</span> <span class=\"string_literal\">\"test\"</span><span class=\"parentheses\">)</span><span class=\"semicolon\">;</span>   <span class=\"comment\">// =&gt; \"test\"</span>\n-    <span class=\"macro\">println!</span><span class=\"parentheses\">(</span><span class=\"string_literal\">\"</span><span class=\"format_specifier\">{</span><span class=\"variable\">name</span><span class=\"format_specifier\">}</span><span class=\"string_literal\"> </span><span class=\"format_specifier\">{</span><span class=\"format_specifier\">}</span><span class=\"string_literal\">\"</span><span class=\"comma\">,</span> <span class=\"numeric_literal\">1</span><span class=\"comma\">,</span> name <span class=\"operator\">=</span> <span class=\"numeric_literal\">2</span><span class=\"parentheses\">)</span><span class=\"semicolon\">;</span>          <span class=\"comment\">// =&gt; \"2 1\"</span>\n-    <span class=\"macro\">println!</span><span class=\"parentheses\">(</span><span class=\"string_literal\">\"</span><span class=\"format_specifier\">{</span><span class=\"variable\">a</span><span class=\"format_specifier\">}</span><span class=\"string_literal\"> </span><span class=\"format_specifier\">{</span><span class=\"variable\">c</span><span class=\"format_specifier\">}</span><span class=\"string_literal\"> </span><span class=\"format_specifier\">{</span><span class=\"variable\">b</span><span class=\"format_specifier\">}</span><span class=\"string_literal\">\"</span><span class=\"comma\">,</span> a<span class=\"operator\">=</span><span class=\"string_literal\">\"a\"</span><span class=\"comma\">,</span> b<span class=\"operator\">=</span><span class=\"char_literal\">'b'</span><span class=\"comma\">,</span> c<span class=\"operator\">=</span><span class=\"numeric_literal\">3</span><span class=\"parentheses\">)</span><span class=\"semicolon\">;</span>  <span class=\"comment\">// =&gt; \"a 3 b\"</span>\n-    <span class=\"macro\">println!</span><span class=\"parentheses\">(</span><span class=\"string_literal\">\"{{</span><span class=\"format_specifier\">{</span><span class=\"format_specifier\">}</span><span class=\"string_literal\">}}\"</span><span class=\"comma\">,</span> <span class=\"numeric_literal\">2</span><span class=\"parentheses\">)</span><span class=\"semicolon\">;</span>                       <span class=\"comment\">// =&gt; \"{2}\"</span>\n-    <span class=\"macro\">println!</span><span class=\"parentheses\">(</span><span class=\"string_literal\">\"Hello </span><span class=\"format_specifier\">{</span><span class=\"format_specifier\">:</span><span class=\"numeric_literal\">5</span><span class=\"format_specifier\">}</span><span class=\"string_literal\">!\"</span><span class=\"comma\">,</span> <span class=\"string_literal\">\"x\"</span><span class=\"parentheses\">)</span><span class=\"semicolon\">;</span>\n-    <span class=\"macro\">println!</span><span class=\"parentheses\">(</span><span class=\"string_literal\">\"Hello </span><span class=\"format_specifier\">{</span><span class=\"format_specifier\">:</span><span class=\"numeric_literal\">1</span><span class=\"format_specifier\">$</span><span class=\"format_specifier\">}</span><span class=\"string_literal\">!\"</span><span class=\"comma\">,</span> <span class=\"string_literal\">\"x\"</span><span class=\"comma\">,</span> <span class=\"numeric_literal\">5</span><span class=\"parentheses\">)</span><span class=\"semicolon\">;</span>\n-    <span class=\"macro\">println!</span><span class=\"parentheses\">(</span><span class=\"string_literal\">\"Hello </span><span class=\"format_specifier\">{</span><span class=\"numeric_literal\">1</span><span class=\"format_specifier\">:</span><span class=\"numeric_literal\">0</span><span class=\"format_specifier\">$</span><span class=\"format_specifier\">}</span><span class=\"string_literal\">!\"</span><span class=\"comma\">,</span> <span class=\"numeric_literal\">5</span><span class=\"comma\">,</span> <span class=\"string_literal\">\"x\"</span><span class=\"parentheses\">)</span><span class=\"semicolon\">;</span>\n-    <span class=\"macro\">println!</span><span class=\"parentheses\">(</span><span class=\"string_literal\">\"Hello </span><span class=\"format_specifier\">{</span><span class=\"format_specifier\">:</span><span class=\"variable\">width</span><span class=\"format_specifier\">$</span><span class=\"format_specifier\">}</span><span class=\"string_literal\">!\"</span><span class=\"comma\">,</span> <span class=\"string_literal\">\"x\"</span><span class=\"comma\">,</span> width <span class=\"operator\">=</span> <span class=\"numeric_literal\">5</span><span class=\"parentheses\">)</span><span class=\"semicolon\">;</span>\n-    <span class=\"macro\">println!</span><span class=\"parentheses\">(</span><span class=\"string_literal\">\"Hello </span><span class=\"format_specifier\">{</span><span class=\"format_specifier\">:</span><span class=\"format_specifier\">&lt;</span><span class=\"numeric_literal\">5</span><span class=\"format_specifier\">}</span><span class=\"string_literal\">!\"</span><span class=\"comma\">,</span> <span class=\"string_literal\">\"x\"</span><span class=\"parentheses\">)</span><span class=\"semicolon\">;</span>\n-    <span class=\"macro\">println!</span><span class=\"parentheses\">(</span><span class=\"string_literal\">\"Hello </span><span class=\"format_specifier\">{</span><span class=\"format_specifier\">:</span><span class=\"format_specifier\">-</span><span class=\"format_specifier\">&lt;</span><span class=\"numeric_literal\">5</span><span class=\"format_specifier\">}</span><span class=\"string_literal\">!\"</span><span class=\"comma\">,</span> <span class=\"string_literal\">\"x\"</span><span class=\"parentheses\">)</span><span class=\"semicolon\">;</span>\n-    <span class=\"macro\">println!</span><span class=\"parentheses\">(</span><span class=\"string_literal\">\"Hello </span><span class=\"format_specifier\">{</span><span class=\"format_specifier\">:</span><span class=\"format_specifier\">^</span><span class=\"numeric_literal\">5</span><span class=\"format_specifier\">}</span><span class=\"string_literal\">!\"</span><span class=\"comma\">,</span> <span class=\"string_literal\">\"x\"</span><span class=\"parentheses\">)</span><span class=\"semicolon\">;</span>\n-    <span class=\"macro\">println!</span><span class=\"parentheses\">(</span><span class=\"string_literal\">\"Hello </span><span class=\"format_specifier\">{</span><span class=\"format_specifier\">:</span><span class=\"format_specifier\">&gt;</span><span class=\"numeric_literal\">5</span><span class=\"format_specifier\">}</span><span class=\"string_literal\">!\"</span><span class=\"comma\">,</span> <span class=\"string_literal\">\"x\"</span><span class=\"parentheses\">)</span><span class=\"semicolon\">;</span>\n-    <span class=\"macro\">println!</span><span class=\"parentheses\">(</span><span class=\"string_literal\">\"Hello </span><span class=\"format_specifier\">{</span><span class=\"format_specifier\">:</span><span class=\"format_specifier\">+</span><span class=\"format_specifier\">}</span><span class=\"string_literal\">!\"</span><span class=\"comma\">,</span> <span class=\"numeric_literal\">5</span><span class=\"parentheses\">)</span><span class=\"semicolon\">;</span>\n-    <span class=\"macro\">println!</span><span class=\"parentheses\">(</span><span class=\"string_literal\">\"</span><span class=\"format_specifier\">{</span><span class=\"format_specifier\">:</span><span class=\"format_specifier\">#</span><span class=\"variable\">x</span><span class=\"format_specifier\">}</span><span class=\"string_literal\">!\"</span><span class=\"comma\">,</span> <span class=\"numeric_literal\">27</span><span class=\"parentheses\">)</span><span class=\"semicolon\">;</span>\n-    <span class=\"macro\">println!</span><span class=\"parentheses\">(</span><span class=\"string_literal\">\"Hello </span><span class=\"format_specifier\">{</span><span class=\"format_specifier\">:</span><span class=\"numeric_literal\">0</span><span class=\"numeric_literal\">5</span><span class=\"format_specifier\">}</span><span class=\"string_literal\">!\"</span><span class=\"comma\">,</span> <span class=\"numeric_literal\">5</span><span class=\"parentheses\">)</span><span class=\"semicolon\">;</span>\n-    <span class=\"macro\">println!</span><span class=\"parentheses\">(</span><span class=\"string_literal\">\"Hello </span><span class=\"format_specifier\">{</span><span class=\"format_specifier\">:</span><span class=\"numeric_literal\">0</span><span class=\"numeric_literal\">5</span><span class=\"format_specifier\">}</span><span class=\"string_literal\">!\"</span><span class=\"comma\">,</span> <span class=\"punctuation\">-</span><span class=\"numeric_literal\">5</span><span class=\"parentheses\">)</span><span class=\"semicolon\">;</span>\n-    <span class=\"macro\">println!</span><span class=\"parentheses\">(</span><span class=\"string_literal\">\"</span><span class=\"format_specifier\">{</span><span class=\"format_specifier\">:</span><span class=\"format_specifier\">#</span><span class=\"numeric_literal\">0</span><span class=\"numeric_literal\">10</span><span class=\"variable\">x</span><span class=\"format_specifier\">}</span><span class=\"string_literal\">!\"</span><span class=\"comma\">,</span> <span class=\"numeric_literal\">27</span><span class=\"parentheses\">)</span><span class=\"semicolon\">;</span>\n-    <span class=\"macro\">println!</span><span class=\"parentheses\">(</span><span class=\"string_literal\">\"Hello </span><span class=\"format_specifier\">{</span><span class=\"numeric_literal\">0</span><span class=\"format_specifier\">}</span><span class=\"string_literal\"> is </span><span class=\"format_specifier\">{</span><span class=\"numeric_literal\">1</span><span class=\"format_specifier\">:</span><span class=\"format_specifier\">.</span><span class=\"numeric_literal\">5</span><span class=\"format_specifier\">}</span><span class=\"string_literal\">\"</span><span class=\"comma\">,</span> <span class=\"string_literal\">\"x\"</span><span class=\"comma\">,</span> <span class=\"numeric_literal\">0.01</span><span class=\"parentheses\">)</span><span class=\"semicolon\">;</span>\n-    <span class=\"macro\">println!</span><span class=\"parentheses\">(</span><span class=\"string_literal\">\"Hello </span><span class=\"format_specifier\">{</span><span class=\"numeric_literal\">1</span><span class=\"format_specifier\">}</span><span class=\"string_literal\"> is </span><span class=\"format_specifier\">{</span><span class=\"numeric_literal\">2</span><span class=\"format_specifier\">:</span><span class=\"format_specifier\">.</span><span class=\"numeric_literal\">0</span><span class=\"format_specifier\">$</span><span class=\"format_specifier\">}</span><span class=\"string_literal\">\"</span><span class=\"comma\">,</span> <span class=\"numeric_literal\">5</span><span class=\"comma\">,</span> <span class=\"string_literal\">\"x\"</span><span class=\"comma\">,</span> <span class=\"numeric_literal\">0.01</span><span class=\"parentheses\">)</span><span class=\"semicolon\">;</span>\n-    <span class=\"macro\">println!</span><span class=\"parentheses\">(</span><span class=\"string_literal\">\"Hello </span><span class=\"format_specifier\">{</span><span class=\"numeric_literal\">0</span><span class=\"format_specifier\">}</span><span class=\"string_literal\"> is </span><span class=\"format_specifier\">{</span><span class=\"numeric_literal\">2</span><span class=\"format_specifier\">:</span><span class=\"format_specifier\">.</span><span class=\"numeric_literal\">1</span><span class=\"format_specifier\">$</span><span class=\"format_specifier\">}</span><span class=\"string_literal\">\"</span><span class=\"comma\">,</span> <span class=\"string_literal\">\"x\"</span><span class=\"comma\">,</span> <span class=\"numeric_literal\">5</span><span class=\"comma\">,</span> <span class=\"numeric_literal\">0.01</span><span class=\"parentheses\">)</span><span class=\"semicolon\">;</span>\n-    <span class=\"macro\">println!</span><span class=\"parentheses\">(</span><span class=\"string_literal\">\"Hello </span><span class=\"format_specifier\">{</span><span class=\"format_specifier\">}</span><span class=\"string_literal\"> is </span><span class=\"format_specifier\">{</span><span class=\"format_specifier\">:</span><span class=\"format_specifier\">.</span><span class=\"format_specifier\">*</span><span class=\"format_specifier\">}</span><span class=\"string_literal\">\"</span><span class=\"comma\">,</span>    <span class=\"string_literal\">\"x\"</span><span class=\"comma\">,</span> <span class=\"numeric_literal\">5</span><span class=\"comma\">,</span> <span class=\"numeric_literal\">0.01</span><span class=\"parentheses\">)</span><span class=\"semicolon\">;</span>\n-    <span class=\"macro\">println!</span><span class=\"parentheses\">(</span><span class=\"string_literal\">\"Hello </span><span class=\"format_specifier\">{</span><span class=\"format_specifier\">}</span><span class=\"string_literal\"> is </span><span class=\"format_specifier\">{</span><span class=\"numeric_literal\">2</span><span class=\"format_specifier\">:</span><span class=\"format_specifier\">.</span><span class=\"format_specifier\">*</span><span class=\"format_specifier\">}</span><span class=\"string_literal\">\"</span><span class=\"comma\">,</span>   <span class=\"string_literal\">\"x\"</span><span class=\"comma\">,</span> <span class=\"numeric_literal\">5</span><span class=\"comma\">,</span> <span class=\"numeric_literal\">0.01</span><span class=\"parentheses\">)</span><span class=\"semicolon\">;</span>\n-    <span class=\"macro\">println!</span><span class=\"parentheses\">(</span><span class=\"string_literal\">\"Hello </span><span class=\"format_specifier\">{</span><span class=\"format_specifier\">}</span><span class=\"string_literal\"> is </span><span class=\"format_specifier\">{</span><span class=\"variable\">number</span><span class=\"format_specifier\">:</span><span class=\"format_specifier\">.</span><span class=\"variable\">prec</span><span class=\"format_specifier\">$</span><span class=\"format_specifier\">}</span><span class=\"string_literal\">\"</span><span class=\"comma\">,</span> <span class=\"string_literal\">\"x\"</span><span class=\"comma\">,</span> prec <span class=\"operator\">=</span> <span class=\"numeric_literal\">5</span><span class=\"comma\">,</span> number <span class=\"operator\">=</span> <span class=\"numeric_literal\">0.01</span><span class=\"parentheses\">)</span><span class=\"semicolon\">;</span>\n-    <span class=\"macro\">println!</span><span class=\"parentheses\">(</span><span class=\"string_literal\">\"</span><span class=\"format_specifier\">{</span><span class=\"format_specifier\">}</span><span class=\"string_literal\">, `</span><span class=\"format_specifier\">{</span><span class=\"variable\">name</span><span class=\"format_specifier\">:</span><span class=\"format_specifier\">.</span><span class=\"format_specifier\">*</span><span class=\"format_specifier\">}</span><span class=\"string_literal\">` has 3 fractional digits\"</span><span class=\"comma\">,</span> <span class=\"string_literal\">\"Hello\"</span><span class=\"comma\">,</span> <span class=\"numeric_literal\">3</span><span class=\"comma\">,</span> name<span class=\"operator\">=</span><span class=\"numeric_literal\">1234.56</span><span class=\"parentheses\">)</span><span class=\"semicolon\">;</span>\n-    <span class=\"macro\">println!</span><span class=\"parentheses\">(</span><span class=\"string_literal\">\"</span><span class=\"format_specifier\">{</span><span class=\"format_specifier\">}</span><span class=\"string_literal\">, `</span><span class=\"format_specifier\">{</span><span class=\"variable\">name</span><span class=\"format_specifier\">:</span><span class=\"format_specifier\">.</span><span class=\"format_specifier\">*</span><span class=\"format_specifier\">}</span><span class=\"string_literal\">` has 3 characters\"</span><span class=\"comma\">,</span> <span class=\"string_literal\">\"Hello\"</span><span class=\"comma\">,</span> <span class=\"numeric_literal\">3</span><span class=\"comma\">,</span> name<span class=\"operator\">=</span><span class=\"string_literal\">\"1234.56\"</span><span class=\"parentheses\">)</span><span class=\"semicolon\">;</span>\n-    <span class=\"macro\">println!</span><span class=\"parentheses\">(</span><span class=\"string_literal\">\"</span><span class=\"format_specifier\">{</span><span class=\"format_specifier\">}</span><span class=\"string_literal\">, `</span><span class=\"format_specifier\">{</span><span class=\"variable\">name</span><span class=\"format_specifier\">:</span><span class=\"format_specifier\">&gt;</span><span class=\"numeric_literal\">8</span><span class=\"format_specifier\">.</span><span class=\"format_specifier\">*</span><span class=\"format_specifier\">}</span><span class=\"string_literal\">` has 3 right-aligned characters\"</span><span class=\"comma\">,</span> <span class=\"string_literal\">\"Hello\"</span><span class=\"comma\">,</span> <span class=\"numeric_literal\">3</span><span class=\"comma\">,</span> name<span class=\"operator\">=</span><span class=\"string_literal\">\"1234.56\"</span><span class=\"parentheses\">)</span><span class=\"semicolon\">;</span>\n-    <span class=\"macro\">println!</span><span class=\"parentheses\">(</span><span class=\"string_literal\">\"Hello {{}}\"</span><span class=\"parentheses\">)</span><span class=\"semicolon\">;</span>\n-    <span class=\"macro\">println!</span><span class=\"parentheses\">(</span><span class=\"string_literal\">\"{{ Hello\"</span><span class=\"parentheses\">)</span><span class=\"semicolon\">;</span>\n+    <span class=\"macro\">println!</span><span class=\"parenthesis\">(</span><span class=\"string_literal\">\"Hello\"</span><span class=\"parenthesis\">)</span><span class=\"semicolon\">;</span>                 <span class=\"comment\">// =&gt; \"Hello\"</span>\n+    <span class=\"macro\">println!</span><span class=\"parenthesis\">(</span><span class=\"string_literal\">\"Hello, </span><span class=\"format_specifier\">{</span><span class=\"format_specifier\">}</span><span class=\"string_literal\">!\"</span><span class=\"comma\">,</span> <span class=\"string_literal\">\"world\"</span><span class=\"parenthesis\">)</span><span class=\"semicolon\">;</span>   <span class=\"comment\">// =&gt; \"Hello, world!\"</span>\n+    <span class=\"macro\">println!</span><span class=\"parenthesis\">(</span><span class=\"string_literal\">\"The number is </span><span class=\"format_specifier\">{</span><span class=\"format_specifier\">}</span><span class=\"string_literal\">\"</span><span class=\"comma\">,</span> <span class=\"numeric_literal\">1</span><span class=\"parenthesis\">)</span><span class=\"semicolon\">;</span>   <span class=\"comment\">// =&gt; \"The number is 1\"</span>\n+    <span class=\"macro\">println!</span><span class=\"parenthesis\">(</span><span class=\"string_literal\">\"</span><span class=\"format_specifier\">{</span><span class=\"format_specifier\">:</span><span class=\"format_specifier\">?</span><span class=\"format_specifier\">}</span><span class=\"string_literal\">\"</span><span class=\"comma\">,</span> <span class=\"parenthesis\">(</span><span class=\"numeric_literal\">3</span><span class=\"comma\">,</span> <span class=\"numeric_literal\">4</span><span class=\"parenthesis\">)</span><span class=\"parenthesis\">)</span><span class=\"semicolon\">;</span>          <span class=\"comment\">// =&gt; \"(3, 4)\"</span>\n+    <span class=\"macro\">println!</span><span class=\"parenthesis\">(</span><span class=\"string_literal\">\"</span><span class=\"format_specifier\">{</span><span class=\"variable\">value</span><span class=\"format_specifier\">}</span><span class=\"string_literal\">\"</span><span class=\"comma\">,</span> value<span class=\"operator\">=</span><span class=\"numeric_literal\">4</span><span class=\"parenthesis\">)</span><span class=\"semicolon\">;</span>      <span class=\"comment\">// =&gt; \"4\"</span>\n+    <span class=\"macro\">println!</span><span class=\"parenthesis\">(</span><span class=\"string_literal\">\"</span><span class=\"format_specifier\">{</span><span class=\"format_specifier\">}</span><span class=\"string_literal\"> </span><span class=\"format_specifier\">{</span><span class=\"format_specifier\">}</span><span class=\"string_literal\">\"</span><span class=\"comma\">,</span> <span class=\"numeric_literal\">1</span><span class=\"comma\">,</span> <span class=\"numeric_literal\">2</span><span class=\"parenthesis\">)</span><span class=\"semicolon\">;</span>           <span class=\"comment\">// =&gt; \"1 2\"</span>\n+    <span class=\"macro\">println!</span><span class=\"parenthesis\">(</span><span class=\"string_literal\">\"</span><span class=\"format_specifier\">{</span><span class=\"format_specifier\">:</span><span class=\"numeric_literal\">0</span><span class=\"numeric_literal\">4</span><span class=\"format_specifier\">}</span><span class=\"string_literal\">\"</span><span class=\"comma\">,</span> <span class=\"numeric_literal\">42</span><span class=\"parenthesis\">)</span><span class=\"semicolon\">;</span>             <span class=\"comment\">// =&gt; \"0042\" with leading zerosV</span>\n+    <span class=\"macro\">println!</span><span class=\"parenthesis\">(</span><span class=\"string_literal\">\"</span><span class=\"format_specifier\">{</span><span class=\"numeric_literal\">1</span><span class=\"format_specifier\">}</span><span class=\"string_literal\"> </span><span class=\"format_specifier\">{</span><span class=\"format_specifier\">}</span><span class=\"string_literal\"> </span><span class=\"format_specifier\">{</span><span class=\"numeric_literal\">0</span><span class=\"format_specifier\">}</span><span class=\"string_literal\"> </span><span class=\"format_specifier\">{</span><span class=\"format_specifier\">}</span><span class=\"string_literal\">\"</span><span class=\"comma\">,</span> <span class=\"numeric_literal\">1</span><span class=\"comma\">,</span> <span class=\"numeric_literal\">2</span><span class=\"parenthesis\">)</span><span class=\"semicolon\">;</span>   <span class=\"comment\">// =&gt; \"2 1 1 2\"</span>\n+    <span class=\"macro\">println!</span><span class=\"parenthesis\">(</span><span class=\"string_literal\">\"</span><span class=\"format_specifier\">{</span><span class=\"variable\">argument</span><span class=\"format_specifier\">}</span><span class=\"string_literal\">\"</span><span class=\"comma\">,</span> argument <span class=\"operator\">=</span> <span class=\"string_literal\">\"test\"</span><span class=\"parenthesis\">)</span><span class=\"semicolon\">;</span>   <span class=\"comment\">// =&gt; \"test\"</span>\n+    <span class=\"macro\">println!</span><span class=\"parenthesis\">(</span><span class=\"string_literal\">\"</span><span class=\"format_specifier\">{</span><span class=\"variable\">name</span><span class=\"format_specifier\">}</span><span class=\"string_literal\"> </span><span class=\"format_specifier\">{</span><span class=\"format_specifier\">}</span><span class=\"string_literal\">\"</span><span class=\"comma\">,</span> <span class=\"numeric_literal\">1</span><span class=\"comma\">,</span> name <span class=\"operator\">=</span> <span class=\"numeric_literal\">2</span><span class=\"parenthesis\">)</span><span class=\"semicolon\">;</span>          <span class=\"comment\">// =&gt; \"2 1\"</span>\n+    <span class=\"macro\">println!</span><span class=\"parenthesis\">(</span><span class=\"string_literal\">\"</span><span class=\"format_specifier\">{</span><span class=\"variable\">a</span><span class=\"format_specifier\">}</span><span class=\"string_literal\"> </span><span class=\"format_specifier\">{</span><span class=\"variable\">c</span><span class=\"format_specifier\">}</span><span class=\"string_literal\"> </span><span class=\"format_specifier\">{</span><span class=\"variable\">b</span><span class=\"format_specifier\">}</span><span class=\"string_literal\">\"</span><span class=\"comma\">,</span> a<span class=\"operator\">=</span><span class=\"string_literal\">\"a\"</span><span class=\"comma\">,</span> b<span class=\"operator\">=</span><span class=\"char_literal\">'b'</span><span class=\"comma\">,</span> c<span class=\"operator\">=</span><span class=\"numeric_literal\">3</span><span class=\"parenthesis\">)</span><span class=\"semicolon\">;</span>  <span class=\"comment\">// =&gt; \"a 3 b\"</span>\n+    <span class=\"macro\">println!</span><span class=\"parenthesis\">(</span><span class=\"string_literal\">\"{{</span><span class=\"format_specifier\">{</span><span class=\"format_specifier\">}</span><span class=\"string_literal\">}}\"</span><span class=\"comma\">,</span> <span class=\"numeric_literal\">2</span><span class=\"parenthesis\">)</span><span class=\"semicolon\">;</span>                       <span class=\"comment\">// =&gt; \"{2}\"</span>\n+    <span class=\"macro\">println!</span><span class=\"parenthesis\">(</span><span class=\"string_literal\">\"Hello </span><span class=\"format_specifier\">{</span><span class=\"format_specifier\">:</span><span class=\"numeric_literal\">5</span><span class=\"format_specifier\">}</span><span class=\"string_literal\">!\"</span><span class=\"comma\">,</span> <span class=\"string_literal\">\"x\"</span><span class=\"parenthesis\">)</span><span class=\"semicolon\">;</span>\n+    <span class=\"macro\">println!</span><span class=\"parenthesis\">(</span><span class=\"string_literal\">\"Hello </span><span class=\"format_specifier\">{</span><span class=\"format_specifier\">:</span><span class=\"numeric_literal\">1</span><span class=\"format_specifier\">$</span><span class=\"format_specifier\">}</span><span class=\"string_literal\">!\"</span><span class=\"comma\">,</span> <span class=\"string_literal\">\"x\"</span><span class=\"comma\">,</span> <span class=\"numeric_literal\">5</span><span class=\"parenthesis\">)</span><span class=\"semicolon\">;</span>\n+    <span class=\"macro\">println!</span><span class=\"parenthesis\">(</span><span class=\"string_literal\">\"Hello </span><span class=\"format_specifier\">{</span><span class=\"numeric_literal\">1</span><span class=\"format_specifier\">:</span><span class=\"numeric_literal\">0</span><span class=\"format_specifier\">$</span><span class=\"format_specifier\">}</span><span class=\"string_literal\">!\"</span><span class=\"comma\">,</span> <span class=\"numeric_literal\">5</span><span class=\"comma\">,</span> <span class=\"string_literal\">\"x\"</span><span class=\"parenthesis\">)</span><span class=\"semicolon\">;</span>\n+    <span class=\"macro\">println!</span><span class=\"parenthesis\">(</span><span class=\"string_literal\">\"Hello </span><span class=\"format_specifier\">{</span><span class=\"format_specifier\">:</span><span class=\"variable\">width</span><span class=\"format_specifier\">$</span><span class=\"format_specifier\">}</span><span class=\"string_literal\">!\"</span><span class=\"comma\">,</span> <span class=\"string_literal\">\"x\"</span><span class=\"comma\">,</span> width <span class=\"operator\">=</span> <span class=\"numeric_literal\">5</span><span class=\"parenthesis\">)</span><span class=\"semicolon\">;</span>\n+    <span class=\"macro\">println!</span><span class=\"parenthesis\">(</span><span class=\"string_literal\">\"Hello </span><span class=\"format_specifier\">{</span><span class=\"format_specifier\">:</span><span class=\"format_specifier\">&lt;</span><span class=\"numeric_literal\">5</span><span class=\"format_specifier\">}</span><span class=\"string_literal\">!\"</span><span class=\"comma\">,</span> <span class=\"string_literal\">\"x\"</span><span class=\"parenthesis\">)</span><span class=\"semicolon\">;</span>\n+    <span class=\"macro\">println!</span><span class=\"parenthesis\">(</span><span class=\"string_literal\">\"Hello </span><span class=\"format_specifier\">{</span><span class=\"format_specifier\">:</span><span class=\"format_specifier\">-</span><span class=\"format_specifier\">&lt;</span><span class=\"numeric_literal\">5</span><span class=\"format_specifier\">}</span><span class=\"string_literal\">!\"</span><span class=\"comma\">,</span> <span class=\"string_literal\">\"x\"</span><span class=\"parenthesis\">)</span><span class=\"semicolon\">;</span>\n+    <span class=\"macro\">println!</span><span class=\"parenthesis\">(</span><span class=\"string_literal\">\"Hello </span><span class=\"format_specifier\">{</span><span class=\"format_specifier\">:</span><span class=\"format_specifier\">^</span><span class=\"numeric_literal\">5</span><span class=\"format_specifier\">}</span><span class=\"string_literal\">!\"</span><span class=\"comma\">,</span> <span class=\"string_literal\">\"x\"</span><span class=\"parenthesis\">)</span><span class=\"semicolon\">;</span>\n+    <span class=\"macro\">println!</span><span class=\"parenthesis\">(</span><span class=\"string_literal\">\"Hello </span><span class=\"format_specifier\">{</span><span class=\"format_specifier\">:</span><span class=\"format_specifier\">&gt;</span><span class=\"numeric_literal\">5</span><span class=\"format_specifier\">}</span><span class=\"string_literal\">!\"</span><span class=\"comma\">,</span> <span class=\"string_literal\">\"x\"</span><span class=\"parenthesis\">)</span><span class=\"semicolon\">;</span>\n+    <span class=\"macro\">println!</span><span class=\"parenthesis\">(</span><span class=\"string_literal\">\"Hello </span><span class=\"format_specifier\">{</span><span class=\"format_specifier\">:</span><span class=\"format_specifier\">+</span><span class=\"format_specifier\">}</span><span class=\"string_literal\">!\"</span><span class=\"comma\">,</span> <span class=\"numeric_literal\">5</span><span class=\"parenthesis\">)</span><span class=\"semicolon\">;</span>\n+    <span class=\"macro\">println!</span><span class=\"parenthesis\">(</span><span class=\"string_literal\">\"</span><span class=\"format_specifier\">{</span><span class=\"format_specifier\">:</span><span class=\"format_specifier\">#</span><span class=\"variable\">x</span><span class=\"format_specifier\">}</span><span class=\"string_literal\">!\"</span><span class=\"comma\">,</span> <span class=\"numeric_literal\">27</span><span class=\"parenthesis\">)</span><span class=\"semicolon\">;</span>\n+    <span class=\"macro\">println!</span><span class=\"parenthesis\">(</span><span class=\"string_literal\">\"Hello </span><span class=\"format_specifier\">{</span><span class=\"format_specifier\">:</span><span class=\"numeric_literal\">0</span><span class=\"numeric_literal\">5</span><span class=\"format_specifier\">}</span><span class=\"string_literal\">!\"</span><span class=\"comma\">,</span> <span class=\"numeric_literal\">5</span><span class=\"parenthesis\">)</span><span class=\"semicolon\">;</span>\n+    <span class=\"macro\">println!</span><span class=\"parenthesis\">(</span><span class=\"string_literal\">\"Hello </span><span class=\"format_specifier\">{</span><span class=\"format_specifier\">:</span><span class=\"numeric_literal\">0</span><span class=\"numeric_literal\">5</span><span class=\"format_specifier\">}</span><span class=\"string_literal\">!\"</span><span class=\"comma\">,</span> <span class=\"punctuation\">-</span><span class=\"numeric_literal\">5</span><span class=\"parenthesis\">)</span><span class=\"semicolon\">;</span>\n+    <span class=\"macro\">println!</span><span class=\"parenthesis\">(</span><span class=\"string_literal\">\"</span><span class=\"format_specifier\">{</span><span class=\"format_specifier\">:</span><span class=\"format_specifier\">#</span><span class=\"numeric_literal\">0</span><span class=\"numeric_literal\">10</span><span class=\"variable\">x</span><span class=\"format_specifier\">}</span><span class=\"string_literal\">!\"</span><span class=\"comma\">,</span> <span class=\"numeric_literal\">27</span><span class=\"parenthesis\">)</span><span class=\"semicolon\">;</span>\n+    <span class=\"macro\">println!</span><span class=\"parenthesis\">(</span><span class=\"string_literal\">\"Hello </span><span class=\"format_specifier\">{</span><span class=\"numeric_literal\">0</span><span class=\"format_specifier\">}</span><span class=\"string_literal\"> is </span><span class=\"format_specifier\">{</span><span class=\"numeric_literal\">1</span><span class=\"format_specifier\">:</span><span class=\"format_specifier\">.</span><span class=\"numeric_literal\">5</span><span class=\"format_specifier\">}</span><span class=\"string_literal\">\"</span><span class=\"comma\">,</span> <span class=\"string_literal\">\"x\"</span><span class=\"comma\">,</span> <span class=\"numeric_literal\">0.01</span><span class=\"parenthesis\">)</span><span class=\"semicolon\">;</span>\n+    <span class=\"macro\">println!</span><span class=\"parenthesis\">(</span><span class=\"string_literal\">\"Hello </span><span class=\"format_specifier\">{</span><span class=\"numeric_literal\">1</span><span class=\"format_specifier\">}</span><span class=\"string_literal\"> is </span><span class=\"format_specifier\">{</span><span class=\"numeric_literal\">2</span><span class=\"format_specifier\">:</span><span class=\"format_specifier\">.</span><span class=\"numeric_literal\">0</span><span class=\"format_specifier\">$</span><span class=\"format_specifier\">}</span><span class=\"string_literal\">\"</span><span class=\"comma\">,</span> <span class=\"numeric_literal\">5</span><span class=\"comma\">,</span> <span class=\"string_literal\">\"x\"</span><span class=\"comma\">,</span> <span class=\"numeric_literal\">0.01</span><span class=\"parenthesis\">)</span><span class=\"semicolon\">;</span>\n+    <span class=\"macro\">println!</span><span class=\"parenthesis\">(</span><span class=\"string_literal\">\"Hello </span><span class=\"format_specifier\">{</span><span class=\"numeric_literal\">0</span><span class=\"format_specifier\">}</span><span class=\"string_literal\"> is </span><span class=\"format_specifier\">{</span><span class=\"numeric_literal\">2</span><span class=\"format_specifier\">:</span><span class=\"format_specifier\">.</span><span class=\"numeric_literal\">1</span><span class=\"format_specifier\">$</span><span class=\"format_specifier\">}</span><span class=\"string_literal\">\"</span><span class=\"comma\">,</span> <span class=\"string_literal\">\"x\"</span><span class=\"comma\">,</span> <span class=\"numeric_literal\">5</span><span class=\"comma\">,</span> <span class=\"numeric_literal\">0.01</span><span class=\"parenthesis\">)</span><span class=\"semicolon\">;</span>\n+    <span class=\"macro\">println!</span><span class=\"parenthesis\">(</span><span class=\"string_literal\">\"Hello </span><span class=\"format_specifier\">{</span><span class=\"format_specifier\">}</span><span class=\"string_literal\"> is </span><span class=\"format_specifier\">{</span><span class=\"format_specifier\">:</span><span class=\"format_specifier\">.</span><span class=\"format_specifier\">*</span><span class=\"format_specifier\">}</span><span class=\"string_literal\">\"</span><span class=\"comma\">,</span>    <span class=\"string_literal\">\"x\"</span><span class=\"comma\">,</span> <span class=\"numeric_literal\">5</span><span class=\"comma\">,</span> <span class=\"numeric_literal\">0.01</span><span class=\"parenthesis\">)</span><span class=\"semicolon\">;</span>\n+    <span class=\"macro\">println!</span><span class=\"parenthesis\">(</span><span class=\"string_literal\">\"Hello </span><span class=\"format_specifier\">{</span><span class=\"format_specifier\">}</span><span class=\"string_literal\"> is </span><span class=\"format_specifier\">{</span><span class=\"numeric_literal\">2</span><span class=\"format_specifier\">:</span><span class=\"format_specifier\">.</span><span class=\"format_specifier\">*</span><span class=\"format_specifier\">}</span><span class=\"string_literal\">\"</span><span class=\"comma\">,</span>   <span class=\"string_literal\">\"x\"</span><span class=\"comma\">,</span> <span class=\"numeric_literal\">5</span><span class=\"comma\">,</span> <span class=\"numeric_literal\">0.01</span><span class=\"parenthesis\">)</span><span class=\"semicolon\">;</span>\n+    <span class=\"macro\">println!</span><span class=\"parenthesis\">(</span><span class=\"string_literal\">\"Hello </span><span class=\"format_specifier\">{</span><span class=\"format_specifier\">}</span><span class=\"string_literal\"> is </span><span class=\"format_specifier\">{</span><span class=\"variable\">number</span><span class=\"format_specifier\">:</span><span class=\"format_specifier\">.</span><span class=\"variable\">prec</span><span class=\"format_specifier\">$</span><span class=\"format_specifier\">}</span><span class=\"string_literal\">\"</span><span class=\"comma\">,</span> <span class=\"string_literal\">\"x\"</span><span class=\"comma\">,</span> prec <span class=\"operator\">=</span> <span class=\"numeric_literal\">5</span><span class=\"comma\">,</span> number <span class=\"operator\">=</span> <span class=\"numeric_literal\">0.01</span><span class=\"parenthesis\">)</span><span class=\"semicolon\">;</span>\n+    <span class=\"macro\">println!</span><span class=\"parenthesis\">(</span><span class=\"string_literal\">\"</span><span class=\"format_specifier\">{</span><span class=\"format_specifier\">}</span><span class=\"string_literal\">, `</span><span class=\"format_specifier\">{</span><span class=\"variable\">name</span><span class=\"format_specifier\">:</span><span class=\"format_specifier\">.</span><span class=\"format_specifier\">*</span><span class=\"format_specifier\">}</span><span class=\"string_literal\">` has 3 fractional digits\"</span><span class=\"comma\">,</span> <span class=\"string_literal\">\"Hello\"</span><span class=\"comma\">,</span> <span class=\"numeric_literal\">3</span><span class=\"comma\">,</span> name<span class=\"operator\">=</span><span class=\"numeric_literal\">1234.56</span><span class=\"parenthesis\">)</span><span class=\"semicolon\">;</span>\n+    <span class=\"macro\">println!</span><span class=\"parenthesis\">(</span><span class=\"string_literal\">\"</span><span class=\"format_specifier\">{</span><span class=\"format_specifier\">}</span><span class=\"string_literal\">, `</span><span class=\"format_specifier\">{</span><span class=\"variable\">name</span><span class=\"format_specifier\">:</span><span class=\"format_specifier\">.</span><span class=\"format_specifier\">*</span><span class=\"format_specifier\">}</span><span class=\"string_literal\">` has 3 characters\"</span><span class=\"comma\">,</span> <span class=\"string_literal\">\"Hello\"</span><span class=\"comma\">,</span> <span class=\"numeric_literal\">3</span><span class=\"comma\">,</span> name<span class=\"operator\">=</span><span class=\"string_literal\">\"1234.56\"</span><span class=\"parenthesis\">)</span><span class=\"semicolon\">;</span>\n+    <span class=\"macro\">println!</span><span class=\"parenthesis\">(</span><span class=\"string_literal\">\"</span><span class=\"format_specifier\">{</span><span class=\"format_specifier\">}</span><span class=\"string_literal\">, `</span><span class=\"format_specifier\">{</span><span class=\"variable\">name</span><span class=\"format_specifier\">:</span><span class=\"format_specifier\">&gt;</span><span class=\"numeric_literal\">8</span><span class=\"format_specifier\">.</span><span class=\"format_specifier\">*</span><span class=\"format_specifier\">}</span><span class=\"string_literal\">` has 3 right-aligned characters\"</span><span class=\"comma\">,</span> <span class=\"string_literal\">\"Hello\"</span><span class=\"comma\">,</span> <span class=\"numeric_literal\">3</span><span class=\"comma\">,</span> name<span class=\"operator\">=</span><span class=\"string_literal\">\"1234.56\"</span><span class=\"parenthesis\">)</span><span class=\"semicolon\">;</span>\n+    <span class=\"macro\">println!</span><span class=\"parenthesis\">(</span><span class=\"string_literal\">\"Hello {{}}\"</span><span class=\"parenthesis\">)</span><span class=\"semicolon\">;</span>\n+    <span class=\"macro\">println!</span><span class=\"parenthesis\">(</span><span class=\"string_literal\">\"{{ Hello\"</span><span class=\"parenthesis\">)</span><span class=\"semicolon\">;</span>\n \n-    <span class=\"macro\">println!</span><span class=\"parentheses\">(</span><span class=\"string_literal\">r\"Hello, </span><span class=\"format_specifier\">{</span><span class=\"format_specifier\">}</span><span class=\"string_literal\">!\"</span><span class=\"comma\">,</span> <span class=\"string_literal\">\"world\"</span><span class=\"parentheses\">)</span><span class=\"semicolon\">;</span>\n+    <span class=\"macro\">println!</span><span class=\"parenthesis\">(</span><span class=\"string_literal\">r\"Hello, </span><span class=\"format_specifier\">{</span><span class=\"format_specifier\">}</span><span class=\"string_literal\">!\"</span><span class=\"comma\">,</span> <span class=\"string_literal\">\"world\"</span><span class=\"parenthesis\">)</span><span class=\"semicolon\">;</span>\n \n     <span class=\"comment\">// escape sequences</span>\n-    <span class=\"macro\">println!</span><span class=\"parentheses\">(</span><span class=\"string_literal\">\"Hello</span><span class=\"escape_sequence\">\\n</span><span class=\"string_literal\">World\"</span><span class=\"parentheses\">)</span><span class=\"semicolon\">;</span>\n-    <span class=\"macro\">println!</span><span class=\"parentheses\">(</span><span class=\"string_literal\">\"</span><span class=\"escape_sequence\">\\u{48}</span><span class=\"escape_sequence\">\\x65</span><span class=\"escape_sequence\">\\x6C</span><span class=\"escape_sequence\">\\x6C</span><span class=\"escape_sequence\">\\x6F</span><span class=\"string_literal\"> World\"</span><span class=\"parentheses\">)</span><span class=\"semicolon\">;</span>\n+    <span class=\"macro\">println!</span><span class=\"parenthesis\">(</span><span class=\"string_literal\">\"Hello</span><span class=\"escape_sequence\">\\n</span><span class=\"string_literal\">World\"</span><span class=\"parenthesis\">)</span><span class=\"semicolon\">;</span>\n+    <span class=\"macro\">println!</span><span class=\"parenthesis\">(</span><span class=\"string_literal\">\"</span><span class=\"escape_sequence\">\\u{48}</span><span class=\"escape_sequence\">\\x65</span><span class=\"escape_sequence\">\\x6C</span><span class=\"escape_sequence\">\\x6C</span><span class=\"escape_sequence\">\\x6F</span><span class=\"string_literal\"> World\"</span><span class=\"parenthesis\">)</span><span class=\"semicolon\">;</span>\n \n-    <span class=\"macro\">println!</span><span class=\"parentheses\">(</span><span class=\"string_literal\">\"</span><span class=\"format_specifier\">{</span><span class=\"escape_sequence\">\\x41</span><span class=\"format_specifier\">}</span><span class=\"string_literal\">\"</span><span class=\"comma\">,</span> A <span class=\"operator\">=</span> <span class=\"numeric_literal\">92</span><span class=\"parentheses\">)</span><span class=\"semicolon\">;</span>\n-    <span class=\"macro\">println!</span><span class=\"parentheses\">(</span><span class=\"string_literal\">\"</span><span class=\"format_specifier\">{</span><span class=\"variable\">\u043d\u0438\u0447\u043e\u0441\u0438</span><span class=\"format_specifier\">}</span><span class=\"string_literal\">\"</span><span class=\"comma\">,</span> \u043d\u0438\u0447\u043e\u0441\u0438 <span class=\"operator\">=</span> <span class=\"numeric_literal\">92</span><span class=\"parentheses\">)</span><span class=\"semicolon\">;</span>\n+    <span class=\"macro\">println!</span><span class=\"parenthesis\">(</span><span class=\"string_literal\">\"</span><span class=\"format_specifier\">{</span><span class=\"escape_sequence\">\\x41</span><span class=\"format_specifier\">}</span><span class=\"string_literal\">\"</span><span class=\"comma\">,</span> A <span class=\"operator\">=</span> <span class=\"numeric_literal\">92</span><span class=\"parenthesis\">)</span><span class=\"semicolon\">;</span>\n+    <span class=\"macro\">println!</span><span class=\"parenthesis\">(</span><span class=\"string_literal\">\"</span><span class=\"format_specifier\">{</span><span class=\"variable\">\u043d\u0438\u0447\u043e\u0441\u0438</span><span class=\"format_specifier\">}</span><span class=\"string_literal\">\"</span><span class=\"comma\">,</span> \u043d\u0438\u0447\u043e\u0441\u0438 <span class=\"operator\">=</span> <span class=\"numeric_literal\">92</span><span class=\"parenthesis\">)</span><span class=\"semicolon\">;</span>\n \n-    <span class=\"macro\">println!</span><span class=\"parentheses\">(</span><span class=\"string_literal\">\"</span><span class=\"format_specifier\">{</span><span class=\"format_specifier\">:</span><span class=\"variable\">x</span><span class=\"format_specifier\">?</span><span class=\"format_specifier\">}</span><span class=\"string_literal\"> </span><span class=\"format_specifier\">{</span><span class=\"format_specifier\">}</span><span class=\"string_literal\"> \"</span><span class=\"comma\">,</span> thingy<span class=\"comma\">,</span> n2<span class=\"parentheses\">)</span><span class=\"semicolon\">;</span>\n+    <span class=\"macro\">println!</span><span class=\"parenthesis\">(</span><span class=\"string_literal\">\"</span><span class=\"format_specifier\">{</span><span class=\"format_specifier\">:</span><span class=\"variable\">x</span><span class=\"format_specifier\">?</span><span class=\"format_specifier\">}</span><span class=\"string_literal\"> </span><span class=\"format_specifier\">{</span><span class=\"format_specifier\">}</span><span class=\"string_literal\"> \"</span><span class=\"comma\">,</span> thingy<span class=\"comma\">,</span> n2<span class=\"parenthesis\">)</span><span class=\"semicolon\">;</span>\n <span class=\"brace\">}</span></code></pre>\n\\ No newline at end of file"}, {"sha": "9d4d6d4a081ae0a5b92e42dce8ba964b850aee54", "filename": "crates/ide/src/syntax_highlighting/test_data/highlight_unsafe.html", "status": "modified", "additions": 11, "deletions": 11, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/10e7fd25feb96f7fe5b82864374833ebf273fa2f/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftest_data%2Fhighlight_unsafe.html", "raw_url": "https://github.com/rust-lang/rust/raw/10e7fd25feb96f7fe5b82864374833ebf273fa2f/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftest_data%2Fhighlight_unsafe.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftest_data%2Fhighlight_unsafe.html?ref=10e7fd25feb96f7fe5b82864374833ebf273fa2f", "patch": "@@ -36,7 +36,7 @@\n \n .unresolved_reference { color: #FC5555; text-decoration: wavy underline; }\n </style>\n-<pre><code><span class=\"keyword unsafe\">unsafe</span> <span class=\"keyword\">fn</span> <span class=\"function declaration unsafe\">unsafe_fn</span><span class=\"parentheses\">(</span><span class=\"parentheses\">)</span> <span class=\"brace\">{</span><span class=\"brace\">}</span>\n+<pre><code><span class=\"keyword unsafe\">unsafe</span> <span class=\"keyword\">fn</span> <span class=\"function declaration unsafe\">unsafe_fn</span><span class=\"parenthesis\">(</span><span class=\"parenthesis\">)</span> <span class=\"brace\">{</span><span class=\"brace\">}</span>\n \n <span class=\"keyword\">union</span> <span class=\"union declaration\">Union</span> <span class=\"brace\">{</span>\n     <span class=\"field declaration\">a</span><span class=\"colon\">:</span> <span class=\"builtin_type\">u32</span><span class=\"comma\">,</span>\n@@ -46,7 +46,7 @@\n <span class=\"keyword\">struct</span> <span class=\"struct declaration\">HasUnsafeFn</span><span class=\"semicolon\">;</span>\n \n <span class=\"keyword\">impl</span> <span class=\"struct\">HasUnsafeFn</span> <span class=\"brace\">{</span>\n-    <span class=\"keyword unsafe\">unsafe</span> <span class=\"keyword\">fn</span> <span class=\"function declaration associated unsafe\">unsafe_method</span><span class=\"parentheses\">(</span><span class=\"operator\">&</span><span class=\"self_keyword\">self</span><span class=\"parentheses\">)</span> <span class=\"brace\">{</span><span class=\"brace\">}</span>\n+    <span class=\"keyword unsafe\">unsafe</span> <span class=\"keyword\">fn</span> <span class=\"function declaration associated unsafe\">unsafe_method</span><span class=\"parenthesis\">(</span><span class=\"operator\">&</span><span class=\"self_keyword\">self</span><span class=\"parenthesis\">)</span> <span class=\"brace\">{</span><span class=\"brace\">}</span>\n <span class=\"brace\">}</span>\n \n <span class=\"keyword\">struct</span> <span class=\"struct declaration\">TypeForStaticMut</span> <span class=\"brace\">{</span>\n@@ -55,31 +55,31 @@\n \n <span class=\"keyword\">static</span> <span class=\"keyword\">mut</span> <span class=\"static declaration mutable unsafe\">global_mut</span><span class=\"colon\">:</span> <span class=\"struct\">TypeForStaticMut</span> <span class=\"operator\">=</span> <span class=\"struct\">TypeForStaticMut</span> <span class=\"brace\">{</span> <span class=\"field\">a</span><span class=\"colon\">:</span> <span class=\"numeric_literal\">0</span> <span class=\"brace\">}</span><span class=\"semicolon\">;</span>\n \n-<span class=\"attribute attribute\">#</span><span class=\"attribute attribute\">[</span><span class=\"function attribute\">repr</span><span class=\"parentheses attribute\">(</span><span class=\"attribute attribute\">packed</span><span class=\"parentheses attribute\">)</span><span class=\"attribute attribute\">]</span>\n+<span class=\"attribute attribute\">#</span><span class=\"attribute attribute\">[</span><span class=\"function attribute\">repr</span><span class=\"parenthesis attribute\">(</span><span class=\"attribute attribute\">packed</span><span class=\"parenthesis attribute\">)</span><span class=\"attribute attribute\">]</span>\n <span class=\"keyword\">struct</span> <span class=\"struct declaration\">Packed</span> <span class=\"brace\">{</span>\n     <span class=\"field declaration\">a</span><span class=\"colon\">:</span> <span class=\"builtin_type\">u16</span><span class=\"comma\">,</span>\n <span class=\"brace\">}</span>\n \n <span class=\"keyword\">trait</span> <span class=\"trait declaration\">DoTheAutoref</span> <span class=\"brace\">{</span>\n-    <span class=\"keyword\">fn</span> <span class=\"function declaration associated\">calls_autoref</span><span class=\"parentheses\">(</span><span class=\"operator\">&</span><span class=\"self_keyword\">self</span><span class=\"parentheses\">)</span><span class=\"semicolon\">;</span>\n+    <span class=\"keyword\">fn</span> <span class=\"function declaration associated\">calls_autoref</span><span class=\"parenthesis\">(</span><span class=\"operator\">&</span><span class=\"self_keyword\">self</span><span class=\"parenthesis\">)</span><span class=\"semicolon\">;</span>\n <span class=\"brace\">}</span>\n \n <span class=\"keyword\">impl</span> <span class=\"trait\">DoTheAutoref</span> <span class=\"keyword\">for</span> <span class=\"builtin_type\">u16</span> <span class=\"brace\">{</span>\n-    <span class=\"keyword\">fn</span> <span class=\"function declaration associated\">calls_autoref</span><span class=\"parentheses\">(</span><span class=\"operator\">&</span><span class=\"self_keyword\">self</span><span class=\"parentheses\">)</span> <span class=\"brace\">{</span><span class=\"brace\">}</span>\n+    <span class=\"keyword\">fn</span> <span class=\"function declaration associated\">calls_autoref</span><span class=\"parenthesis\">(</span><span class=\"operator\">&</span><span class=\"self_keyword\">self</span><span class=\"parenthesis\">)</span> <span class=\"brace\">{</span><span class=\"brace\">}</span>\n <span class=\"brace\">}</span>\n \n-<span class=\"keyword\">fn</span> <span class=\"function declaration\">main</span><span class=\"parentheses\">(</span><span class=\"parentheses\">)</span> <span class=\"brace\">{</span>\n+<span class=\"keyword\">fn</span> <span class=\"function declaration\">main</span><span class=\"parenthesis\">(</span><span class=\"parenthesis\">)</span> <span class=\"brace\">{</span>\n     <span class=\"keyword\">let</span> <span class=\"variable declaration\">x</span> <span class=\"operator\">=</span> <span class=\"operator\">&</span><span class=\"numeric_literal\">5</span> <span class=\"keyword\">as</span> <span class=\"keyword\">*</span><span class=\"keyword\">const</span> <span class=\"punctuation\">_</span> <span class=\"keyword\">as</span> <span class=\"keyword\">*</span><span class=\"keyword\">const</span> <span class=\"builtin_type\">usize</span><span class=\"semicolon\">;</span>\n     <span class=\"keyword\">let</span> <span class=\"variable declaration\">u</span> <span class=\"operator\">=</span> <span class=\"union\">Union</span> <span class=\"brace\">{</span> <span class=\"field\">b</span><span class=\"colon\">:</span> <span class=\"numeric_literal\">0</span> <span class=\"brace\">}</span><span class=\"semicolon\">;</span>\n     <span class=\"keyword unsafe\">unsafe</span> <span class=\"brace\">{</span>\n         <span class=\"comment\">// unsafe fn and method calls</span>\n-        <span class=\"function unsafe\">unsafe_fn</span><span class=\"parentheses\">(</span><span class=\"parentheses\">)</span><span class=\"semicolon\">;</span>\n+        <span class=\"function unsafe\">unsafe_fn</span><span class=\"parenthesis\">(</span><span class=\"parenthesis\">)</span><span class=\"semicolon\">;</span>\n         <span class=\"keyword\">let</span> <span class=\"variable declaration\">b</span> <span class=\"operator\">=</span> <span class=\"variable\">u</span><span class=\"operator\">.</span><span class=\"field unsafe\">b</span><span class=\"semicolon\">;</span>\n         <span class=\"keyword control\">match</span> <span class=\"variable\">u</span> <span class=\"brace\">{</span>\n-            <span class=\"union\">Union</span> <span class=\"brace\">{</span> <span class=\"field unsafe\">b</span><span class=\"colon\">:</span> <span class=\"numeric_literal\">0</span> <span class=\"brace\">}</span> <span class=\"operator\">=&gt;</span> <span class=\"parentheses\">(</span><span class=\"parentheses\">)</span><span class=\"comma\">,</span>\n-            <span class=\"union\">Union</span> <span class=\"brace\">{</span> <span class=\"field unsafe\">a</span> <span class=\"brace\">}</span> <span class=\"operator\">=&gt;</span> <span class=\"parentheses\">(</span><span class=\"parentheses\">)</span><span class=\"comma\">,</span>\n+            <span class=\"union\">Union</span> <span class=\"brace\">{</span> <span class=\"field unsafe\">b</span><span class=\"colon\">:</span> <span class=\"numeric_literal\">0</span> <span class=\"brace\">}</span> <span class=\"operator\">=&gt;</span> <span class=\"parenthesis\">(</span><span class=\"parenthesis\">)</span><span class=\"comma\">,</span>\n+            <span class=\"union\">Union</span> <span class=\"brace\">{</span> <span class=\"field unsafe\">a</span> <span class=\"brace\">}</span> <span class=\"operator\">=&gt;</span> <span class=\"parenthesis\">(</span><span class=\"parenthesis\">)</span><span class=\"comma\">,</span>\n         <span class=\"brace\">}</span>\n-        <span class=\"struct\">HasUnsafeFn</span><span class=\"operator\">.</span><span class=\"function associated unsafe\">unsafe_method</span><span class=\"parentheses\">(</span><span class=\"parentheses\">)</span><span class=\"semicolon\">;</span>\n+        <span class=\"struct\">HasUnsafeFn</span><span class=\"operator\">.</span><span class=\"function associated unsafe\">unsafe_method</span><span class=\"parenthesis\">(</span><span class=\"parenthesis\">)</span><span class=\"semicolon\">;</span>\n \n         <span class=\"comment\">// unsafe deref</span>\n         <span class=\"keyword\">let</span> <span class=\"variable declaration\">y</span> <span class=\"operator\">=</span> <span class=\"operator unsafe\">*</span><span class=\"variable\">x</span><span class=\"semicolon\">;</span>\n@@ -95,6 +95,6 @@\n         <span class=\"keyword\">let</span> <span class=\"struct\">Packed</span> <span class=\"brace\">{</span> <span class=\"field\">a</span><span class=\"colon\">:</span> <span class=\"keyword unsafe\">ref</span> <span class=\"variable declaration\">_a</span> <span class=\"brace\">}</span> <span class=\"operator\">=</span> <span class=\"variable\">packed</span><span class=\"semicolon\">;</span>\n \n         <span class=\"comment\">// unsafe auto ref of packed field</span>\n-        <span class=\"variable\">packed</span><span class=\"operator\">.</span><span class=\"field\">a</span><span class=\"operator\">.</span><span class=\"function associated unsafe\">calls_autoref</span><span class=\"parentheses\">(</span><span class=\"parentheses\">)</span><span class=\"semicolon\">;</span>\n+        <span class=\"variable\">packed</span><span class=\"operator\">.</span><span class=\"field\">a</span><span class=\"operator\">.</span><span class=\"function associated unsafe\">calls_autoref</span><span class=\"parenthesis\">(</span><span class=\"parenthesis\">)</span><span class=\"semicolon\">;</span>\n     <span class=\"brace\">}</span>\n <span class=\"brace\">}</span></code></pre>\n\\ No newline at end of file"}, {"sha": "6b7447c46e18e44f6884854bd63ff2fc3cd986e6", "filename": "crates/ide/src/syntax_highlighting/test_data/highlighting.html", "status": "modified", "additions": 39, "deletions": 39, "changes": 78, "blob_url": "https://github.com/rust-lang/rust/blob/10e7fd25feb96f7fe5b82864374833ebf273fa2f/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftest_data%2Fhighlighting.html", "raw_url": "https://github.com/rust-lang/rust/raw/10e7fd25feb96f7fe5b82864374833ebf273fa2f/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftest_data%2Fhighlighting.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftest_data%2Fhighlighting.html?ref=10e7fd25feb96f7fe5b82864374833ebf273fa2f", "patch": "@@ -66,112 +66,112 @@\n <span class=\"brace\">}</span>\n \n <span class=\"keyword\">trait</span> <span class=\"trait declaration\">Bar</span> <span class=\"brace\">{</span>\n-    <span class=\"keyword\">fn</span> <span class=\"function declaration associated\">bar</span><span class=\"parentheses\">(</span><span class=\"operator\">&</span><span class=\"self_keyword\">self</span><span class=\"parentheses\">)</span> <span class=\"operator\">-&gt;</span> <span class=\"builtin_type\">i32</span><span class=\"semicolon\">;</span>\n+    <span class=\"keyword\">fn</span> <span class=\"function declaration associated\">bar</span><span class=\"parenthesis\">(</span><span class=\"operator\">&</span><span class=\"self_keyword\">self</span><span class=\"parenthesis\">)</span> <span class=\"operator\">-&gt;</span> <span class=\"builtin_type\">i32</span><span class=\"semicolon\">;</span>\n <span class=\"brace\">}</span>\n \n <span class=\"keyword\">impl</span> <span class=\"trait\">Bar</span> <span class=\"keyword\">for</span> <span class=\"struct\">Foo</span> <span class=\"brace\">{</span>\n-    <span class=\"keyword\">fn</span> <span class=\"function declaration associated\">bar</span><span class=\"parentheses\">(</span><span class=\"operator\">&</span><span class=\"self_keyword\">self</span><span class=\"parentheses\">)</span> <span class=\"operator\">-&gt;</span> <span class=\"builtin_type\">i32</span> <span class=\"brace\">{</span>\n+    <span class=\"keyword\">fn</span> <span class=\"function declaration associated\">bar</span><span class=\"parenthesis\">(</span><span class=\"operator\">&</span><span class=\"self_keyword\">self</span><span class=\"parenthesis\">)</span> <span class=\"operator\">-&gt;</span> <span class=\"builtin_type\">i32</span> <span class=\"brace\">{</span>\n         <span class=\"self_keyword\">self</span><span class=\"operator\">.</span><span class=\"field\">x</span>\n     <span class=\"brace\">}</span>\n <span class=\"brace\">}</span>\n \n <span class=\"keyword\">impl</span> <span class=\"struct\">Foo</span> <span class=\"brace\">{</span>\n-    <span class=\"keyword\">fn</span> <span class=\"function declaration associated\">baz</span><span class=\"parentheses\">(</span><span class=\"keyword\">mut</span> <span class=\"self_keyword mutable\">self</span><span class=\"comma\">,</span> <span class=\"value_param declaration\">f</span><span class=\"colon\">:</span> <span class=\"struct\">Foo</span><span class=\"parentheses\">)</span> <span class=\"operator\">-&gt;</span> <span class=\"builtin_type\">i32</span> <span class=\"brace\">{</span>\n-        <span class=\"value_param\">f</span><span class=\"operator\">.</span><span class=\"function consuming associated\">baz</span><span class=\"parentheses\">(</span><span class=\"self_keyword mutable consuming\">self</span><span class=\"parentheses\">)</span>\n+    <span class=\"keyword\">fn</span> <span class=\"function declaration associated\">baz</span><span class=\"parenthesis\">(</span><span class=\"keyword\">mut</span> <span class=\"self_keyword mutable\">self</span><span class=\"comma\">,</span> <span class=\"value_param declaration\">f</span><span class=\"colon\">:</span> <span class=\"struct\">Foo</span><span class=\"parenthesis\">)</span> <span class=\"operator\">-&gt;</span> <span class=\"builtin_type\">i32</span> <span class=\"brace\">{</span>\n+        <span class=\"value_param\">f</span><span class=\"operator\">.</span><span class=\"function consuming associated\">baz</span><span class=\"parenthesis\">(</span><span class=\"self_keyword mutable consuming\">self</span><span class=\"parenthesis\">)</span>\n     <span class=\"brace\">}</span>\n \n-    <span class=\"keyword\">fn</span> <span class=\"function declaration associated\">qux</span><span class=\"parentheses\">(</span><span class=\"operator\">&</span><span class=\"keyword\">mut</span> <span class=\"self_keyword mutable\">self</span><span class=\"parentheses\">)</span> <span class=\"brace\">{</span>\n+    <span class=\"keyword\">fn</span> <span class=\"function declaration associated\">qux</span><span class=\"parenthesis\">(</span><span class=\"operator\">&</span><span class=\"keyword\">mut</span> <span class=\"self_keyword mutable\">self</span><span class=\"parenthesis\">)</span> <span class=\"brace\">{</span>\n         <span class=\"self_keyword mutable\">self</span><span class=\"operator\">.</span><span class=\"field\">x</span> <span class=\"operator\">=</span> <span class=\"numeric_literal\">0</span><span class=\"semicolon\">;</span>\n     <span class=\"brace\">}</span>\n \n-    <span class=\"keyword\">fn</span> <span class=\"function declaration associated\">quop</span><span class=\"parentheses\">(</span><span class=\"operator\">&</span><span class=\"self_keyword\">self</span><span class=\"parentheses\">)</span> <span class=\"operator\">-&gt;</span> <span class=\"builtin_type\">i32</span> <span class=\"brace\">{</span>\n+    <span class=\"keyword\">fn</span> <span class=\"function declaration associated\">quop</span><span class=\"parenthesis\">(</span><span class=\"operator\">&</span><span class=\"self_keyword\">self</span><span class=\"parenthesis\">)</span> <span class=\"operator\">-&gt;</span> <span class=\"builtin_type\">i32</span> <span class=\"brace\">{</span>\n         <span class=\"self_keyword\">self</span><span class=\"operator\">.</span><span class=\"field\">x</span>\n     <span class=\"brace\">}</span>\n <span class=\"brace\">}</span>\n \n-<span class=\"attribute attribute\">#</span><span class=\"attribute attribute\">[</span><span class=\"function attribute\">derive</span><span class=\"parentheses attribute\">(</span><span class=\"attribute attribute\">Copy</span><span class=\"parentheses attribute\">)</span><span class=\"attribute attribute\">]</span>\n+<span class=\"attribute attribute\">#</span><span class=\"attribute attribute\">[</span><span class=\"function attribute\">derive</span><span class=\"parenthesis attribute\">(</span><span class=\"attribute attribute\">Copy</span><span class=\"parenthesis attribute\">)</span><span class=\"attribute attribute\">]</span>\n <span class=\"keyword\">struct</span> <span class=\"struct declaration\">FooCopy</span> <span class=\"brace\">{</span>\n     <span class=\"field declaration\">x</span><span class=\"colon\">:</span> <span class=\"builtin_type\">u32</span><span class=\"comma\">,</span>\n <span class=\"brace\">}</span>\n \n <span class=\"keyword\">impl</span> <span class=\"struct\">FooCopy</span> <span class=\"brace\">{</span>\n-    <span class=\"keyword\">fn</span> <span class=\"function declaration associated\">baz</span><span class=\"parentheses\">(</span><span class=\"self_keyword\">self</span><span class=\"comma\">,</span> <span class=\"value_param declaration\">f</span><span class=\"colon\">:</span> <span class=\"struct\">FooCopy</span><span class=\"parentheses\">)</span> <span class=\"operator\">-&gt;</span> <span class=\"builtin_type\">u32</span> <span class=\"brace\">{</span>\n-        <span class=\"value_param\">f</span><span class=\"operator\">.</span><span class=\"function associated\">baz</span><span class=\"parentheses\">(</span><span class=\"self_keyword\">self</span><span class=\"parentheses\">)</span>\n+    <span class=\"keyword\">fn</span> <span class=\"function declaration associated\">baz</span><span class=\"parenthesis\">(</span><span class=\"self_keyword\">self</span><span class=\"comma\">,</span> <span class=\"value_param declaration\">f</span><span class=\"colon\">:</span> <span class=\"struct\">FooCopy</span><span class=\"parenthesis\">)</span> <span class=\"operator\">-&gt;</span> <span class=\"builtin_type\">u32</span> <span class=\"brace\">{</span>\n+        <span class=\"value_param\">f</span><span class=\"operator\">.</span><span class=\"function associated\">baz</span><span class=\"parenthesis\">(</span><span class=\"self_keyword\">self</span><span class=\"parenthesis\">)</span>\n     <span class=\"brace\">}</span>\n \n-    <span class=\"keyword\">fn</span> <span class=\"function declaration associated\">qux</span><span class=\"parentheses\">(</span><span class=\"operator\">&</span><span class=\"keyword\">mut</span> <span class=\"self_keyword mutable\">self</span><span class=\"parentheses\">)</span> <span class=\"brace\">{</span>\n+    <span class=\"keyword\">fn</span> <span class=\"function declaration associated\">qux</span><span class=\"parenthesis\">(</span><span class=\"operator\">&</span><span class=\"keyword\">mut</span> <span class=\"self_keyword mutable\">self</span><span class=\"parenthesis\">)</span> <span class=\"brace\">{</span>\n         <span class=\"self_keyword mutable\">self</span><span class=\"operator\">.</span><span class=\"field\">x</span> <span class=\"operator\">=</span> <span class=\"numeric_literal\">0</span><span class=\"semicolon\">;</span>\n     <span class=\"brace\">}</span>\n \n-    <span class=\"keyword\">fn</span> <span class=\"function declaration associated\">quop</span><span class=\"parentheses\">(</span><span class=\"operator\">&</span><span class=\"self_keyword\">self</span><span class=\"parentheses\">)</span> <span class=\"operator\">-&gt;</span> <span class=\"builtin_type\">u32</span> <span class=\"brace\">{</span>\n+    <span class=\"keyword\">fn</span> <span class=\"function declaration associated\">quop</span><span class=\"parenthesis\">(</span><span class=\"operator\">&</span><span class=\"self_keyword\">self</span><span class=\"parenthesis\">)</span> <span class=\"operator\">-&gt;</span> <span class=\"builtin_type\">u32</span> <span class=\"brace\">{</span>\n         <span class=\"self_keyword\">self</span><span class=\"operator\">.</span><span class=\"field\">x</span>\n     <span class=\"brace\">}</span>\n <span class=\"brace\">}</span>\n \n <span class=\"keyword\">static</span> <span class=\"keyword\">mut</span> <span class=\"static declaration mutable unsafe\">STATIC_MUT</span><span class=\"colon\">:</span> <span class=\"builtin_type\">i32</span> <span class=\"operator\">=</span> <span class=\"numeric_literal\">0</span><span class=\"semicolon\">;</span>\n \n-<span class=\"keyword\">fn</span> <span class=\"function declaration\">foo</span><span class=\"angle\">&lt;</span><span class=\"lifetime declaration\">'a</span><span class=\"comma\">,</span> <span class=\"type_param declaration\">T</span><span class=\"angle\">&gt;</span><span class=\"parentheses\">(</span><span class=\"parentheses\">)</span> <span class=\"operator\">-&gt;</span> <span class=\"type_param\">T</span> <span class=\"brace\">{</span>\n-    <span class=\"function\">foo</span><span class=\"operator\">::</span><span class=\"angle\">&lt;</span><span class=\"lifetime\">'a</span><span class=\"comma\">,</span> <span class=\"builtin_type\">i32</span><span class=\"angle\">&gt;</span><span class=\"parentheses\">(</span><span class=\"parentheses\">)</span>\n+<span class=\"keyword\">fn</span> <span class=\"function declaration\">foo</span><span class=\"angle\">&lt;</span><span class=\"lifetime declaration\">'a</span><span class=\"comma\">,</span> <span class=\"type_param declaration\">T</span><span class=\"angle\">&gt;</span><span class=\"parenthesis\">(</span><span class=\"parenthesis\">)</span> <span class=\"operator\">-&gt;</span> <span class=\"type_param\">T</span> <span class=\"brace\">{</span>\n+    <span class=\"function\">foo</span><span class=\"operator\">::</span><span class=\"angle\">&lt;</span><span class=\"lifetime\">'a</span><span class=\"comma\">,</span> <span class=\"builtin_type\">i32</span><span class=\"angle\">&gt;</span><span class=\"parenthesis\">(</span><span class=\"parenthesis\">)</span>\n <span class=\"brace\">}</span>\n \n-<span class=\"keyword\">fn</span> <span class=\"function declaration\">never</span><span class=\"parentheses\">(</span><span class=\"parentheses\">)</span> <span class=\"operator\">-&gt;</span> <span class=\"builtin_type\">!</span> <span class=\"brace\">{</span>\n+<span class=\"keyword\">fn</span> <span class=\"function declaration\">never</span><span class=\"parenthesis\">(</span><span class=\"parenthesis\">)</span> <span class=\"operator\">-&gt;</span> <span class=\"builtin_type\">!</span> <span class=\"brace\">{</span>\n     <span class=\"keyword control\">loop</span> <span class=\"brace\">{</span><span class=\"brace\">}</span>\n <span class=\"brace\">}</span>\n \n-<span class=\"keyword\">fn</span> <span class=\"function declaration\">const_param</span><span class=\"angle\">&lt;</span><span class=\"keyword\">const</span> <span class=\"const_param declaration\">FOO</span><span class=\"colon\">:</span> <span class=\"builtin_type\">usize</span><span class=\"angle\">&gt;</span><span class=\"parentheses\">(</span><span class=\"parentheses\">)</span> <span class=\"operator\">-&gt;</span> <span class=\"builtin_type\">usize</span> <span class=\"brace\">{</span>\n+<span class=\"keyword\">fn</span> <span class=\"function declaration\">const_param</span><span class=\"angle\">&lt;</span><span class=\"keyword\">const</span> <span class=\"const_param declaration\">FOO</span><span class=\"colon\">:</span> <span class=\"builtin_type\">usize</span><span class=\"angle\">&gt;</span><span class=\"parenthesis\">(</span><span class=\"parenthesis\">)</span> <span class=\"operator\">-&gt;</span> <span class=\"builtin_type\">usize</span> <span class=\"brace\">{</span>\n     <span class=\"const_param\">FOO</span>\n <span class=\"brace\">}</span>\n \n <span class=\"keyword\">use</span> <span class=\"module\">ops</span><span class=\"operator\">::</span><span class=\"trait\">Fn</span><span class=\"semicolon\">;</span>\n-<span class=\"keyword\">fn</span> <span class=\"function declaration\">baz</span><span class=\"angle\">&lt;</span><span class=\"type_param declaration\">F</span><span class=\"colon\">:</span> <span class=\"trait\">Fn</span><span class=\"parentheses\">(</span><span class=\"parentheses\">)</span> <span class=\"operator\">-&gt;</span> <span class=\"parentheses\">(</span><span class=\"parentheses\">)</span><span class=\"angle\">&gt;</span><span class=\"parentheses\">(</span><span class=\"value_param declaration callable\">f</span><span class=\"colon\">:</span> <span class=\"type_param\">F</span><span class=\"parentheses\">)</span> <span class=\"brace\">{</span>\n-    <span class=\"value_param callable\">f</span><span class=\"parentheses\">(</span><span class=\"parentheses\">)</span>\n+<span class=\"keyword\">fn</span> <span class=\"function declaration\">baz</span><span class=\"angle\">&lt;</span><span class=\"type_param declaration\">F</span><span class=\"colon\">:</span> <span class=\"trait\">Fn</span><span class=\"parenthesis\">(</span><span class=\"parenthesis\">)</span> <span class=\"operator\">-&gt;</span> <span class=\"parenthesis\">(</span><span class=\"parenthesis\">)</span><span class=\"angle\">&gt;</span><span class=\"parenthesis\">(</span><span class=\"value_param declaration callable\">f</span><span class=\"colon\">:</span> <span class=\"type_param\">F</span><span class=\"parenthesis\">)</span> <span class=\"brace\">{</span>\n+    <span class=\"value_param callable\">f</span><span class=\"parenthesis\">(</span><span class=\"parenthesis\">)</span>\n <span class=\"brace\">}</span>\n \n-<span class=\"keyword\">fn</span> <span class=\"function declaration\">foobar</span><span class=\"parentheses\">(</span><span class=\"parentheses\">)</span> <span class=\"operator\">-&gt;</span> <span class=\"keyword\">impl</span> <span class=\"macro\">Copy</span> <span class=\"brace\">{</span><span class=\"brace\">}</span>\n+<span class=\"keyword\">fn</span> <span class=\"function declaration\">foobar</span><span class=\"parenthesis\">(</span><span class=\"parenthesis\">)</span> <span class=\"operator\">-&gt;</span> <span class=\"keyword\">impl</span> <span class=\"macro\">Copy</span> <span class=\"brace\">{</span><span class=\"brace\">}</span>\n \n-<span class=\"keyword\">fn</span> <span class=\"function declaration\">foo</span><span class=\"parentheses\">(</span><span class=\"parentheses\">)</span> <span class=\"brace\">{</span>\n-    <span class=\"keyword\">let</span> <span class=\"variable declaration\">bar</span> <span class=\"operator\">=</span> <span class=\"function\">foobar</span><span class=\"parentheses\">(</span><span class=\"parentheses\">)</span><span class=\"semicolon\">;</span>\n+<span class=\"keyword\">fn</span> <span class=\"function declaration\">foo</span><span class=\"parenthesis\">(</span><span class=\"parenthesis\">)</span> <span class=\"brace\">{</span>\n+    <span class=\"keyword\">let</span> <span class=\"variable declaration\">bar</span> <span class=\"operator\">=</span> <span class=\"function\">foobar</span><span class=\"parenthesis\">(</span><span class=\"parenthesis\">)</span><span class=\"semicolon\">;</span>\n <span class=\"brace\">}</span>\n \n <span class=\"keyword\">macro_rules</span><span class=\"punctuation\">!</span> <span class=\"macro declaration\">def_fn</span> <span class=\"brace\">{</span>\n-    <span class=\"parentheses\">(</span><span class=\"punctuation\">$</span><span class=\"parentheses\">(</span><span class=\"punctuation\">$</span>tt<span class=\"colon\">:</span>tt<span class=\"parentheses\">)</span><span class=\"punctuation\">*</span><span class=\"parentheses\">)</span> <span class=\"operator\">=</span><span class=\"angle\">&gt;</span> <span class=\"brace\">{</span><span class=\"punctuation\">$</span><span class=\"parentheses\">(</span><span class=\"punctuation\">$</span>tt<span class=\"parentheses\">)</span><span class=\"punctuation\">*</span><span class=\"brace\">}</span>\n+    <span class=\"parenthesis\">(</span><span class=\"punctuation\">$</span><span class=\"parenthesis\">(</span><span class=\"punctuation\">$</span>tt<span class=\"colon\">:</span>tt<span class=\"parenthesis\">)</span><span class=\"punctuation\">*</span><span class=\"parenthesis\">)</span> <span class=\"operator\">=</span><span class=\"angle\">&gt;</span> <span class=\"brace\">{</span><span class=\"punctuation\">$</span><span class=\"parenthesis\">(</span><span class=\"punctuation\">$</span>tt<span class=\"parenthesis\">)</span><span class=\"punctuation\">*</span><span class=\"brace\">}</span>\n <span class=\"brace\">}</span>\n \n <span class=\"macro\">def_fn!</span> <span class=\"brace\">{</span>\n-    <span class=\"keyword\">fn</span> <span class=\"function declaration\">bar</span><span class=\"parentheses\">(</span><span class=\"parentheses\">)</span> <span class=\"operator\">-</span><span class=\"operator\">&gt;</span> <span class=\"builtin_type\">u32</span> <span class=\"brace\">{</span>\n+    <span class=\"keyword\">fn</span> <span class=\"function declaration\">bar</span><span class=\"parenthesis\">(</span><span class=\"parenthesis\">)</span> <span class=\"operator\">-</span><span class=\"operator\">&gt;</span> <span class=\"builtin_type\">u32</span> <span class=\"brace\">{</span>\n         <span class=\"numeric_literal\">100</span>\n     <span class=\"brace\">}</span>\n <span class=\"brace\">}</span>\n \n <span class=\"keyword\">macro_rules</span><span class=\"punctuation\">!</span> <span class=\"macro declaration\">noop</span> <span class=\"brace\">{</span>\n-    <span class=\"parentheses\">(</span><span class=\"punctuation\">$</span>expr<span class=\"colon\">:</span>expr<span class=\"parentheses\">)</span> <span class=\"operator\">=</span><span class=\"angle\">&gt;</span> <span class=\"brace\">{</span>\n+    <span class=\"parenthesis\">(</span><span class=\"punctuation\">$</span>expr<span class=\"colon\">:</span>expr<span class=\"parenthesis\">)</span> <span class=\"operator\">=</span><span class=\"angle\">&gt;</span> <span class=\"brace\">{</span>\n         <span class=\"punctuation\">$</span>expr\n     <span class=\"brace\">}</span>\n <span class=\"brace\">}</span>\n \n <span class=\"keyword\">macro_rules</span><span class=\"punctuation\">!</span> <span class=\"macro declaration\">keyword_frag</span> <span class=\"brace\">{</span>\n-    <span class=\"parentheses\">(</span><span class=\"punctuation\">$</span>type<span class=\"colon\">:</span>ty<span class=\"parentheses\">)</span> <span class=\"operator\">=</span><span class=\"angle\">&gt;</span> <span class=\"parentheses\">(</span><span class=\"punctuation\">$</span>type<span class=\"parentheses\">)</span>\n+    <span class=\"parenthesis\">(</span><span class=\"punctuation\">$</span>type<span class=\"colon\">:</span>ty<span class=\"parenthesis\">)</span> <span class=\"operator\">=</span><span class=\"angle\">&gt;</span> <span class=\"parenthesis\">(</span><span class=\"punctuation\">$</span>type<span class=\"parenthesis\">)</span>\n <span class=\"brace\">}</span>\n \n <span class=\"comment\">// comment</span>\n-<span class=\"keyword\">fn</span> <span class=\"function declaration\">main</span><span class=\"parentheses\">(</span><span class=\"parentheses\">)</span> <span class=\"brace\">{</span>\n-    <span class=\"macro\">println!</span><span class=\"parentheses\">(</span><span class=\"string_literal\">\"Hello, {}!\"</span><span class=\"comma\">,</span> <span class=\"numeric_literal\">92</span><span class=\"parentheses\">)</span><span class=\"semicolon\">;</span>\n+<span class=\"keyword\">fn</span> <span class=\"function declaration\">main</span><span class=\"parenthesis\">(</span><span class=\"parenthesis\">)</span> <span class=\"brace\">{</span>\n+    <span class=\"macro\">println!</span><span class=\"parenthesis\">(</span><span class=\"string_literal\">\"Hello, {}!\"</span><span class=\"comma\">,</span> <span class=\"numeric_literal\">92</span><span class=\"parenthesis\">)</span><span class=\"semicolon\">;</span>\n \n-    <span class=\"keyword\">let</span> <span class=\"keyword\">mut</span> <span class=\"variable declaration mutable\">vec</span> <span class=\"operator\">=</span> <span class=\"unresolved_reference\">Vec</span><span class=\"operator\">::</span><span class=\"unresolved_reference\">new</span><span class=\"parentheses\">(</span><span class=\"parentheses\">)</span><span class=\"semicolon\">;</span>\n+    <span class=\"keyword\">let</span> <span class=\"keyword\">mut</span> <span class=\"variable declaration mutable\">vec</span> <span class=\"operator\">=</span> <span class=\"unresolved_reference\">Vec</span><span class=\"operator\">::</span><span class=\"unresolved_reference\">new</span><span class=\"parenthesis\">(</span><span class=\"parenthesis\">)</span><span class=\"semicolon\">;</span>\n     <span class=\"keyword control\">if</span> <span class=\"bool_literal\">true</span> <span class=\"brace\">{</span>\n         <span class=\"keyword\">let</span> <span class=\"variable declaration\">x</span> <span class=\"operator\">=</span> <span class=\"numeric_literal\">92</span><span class=\"semicolon\">;</span>\n-        <span class=\"variable mutable\">vec</span><span class=\"operator\">.</span><span class=\"unresolved_reference\">push</span><span class=\"parentheses\">(</span><span class=\"struct\">Foo</span> <span class=\"brace\">{</span> <span class=\"field\">x</span><span class=\"comma\">,</span> <span class=\"field\">y</span><span class=\"colon\">:</span> <span class=\"numeric_literal\">1</span> <span class=\"brace\">}</span><span class=\"parentheses\">)</span><span class=\"semicolon\">;</span>\n+        <span class=\"variable mutable\">vec</span><span class=\"operator\">.</span><span class=\"unresolved_reference\">push</span><span class=\"parenthesis\">(</span><span class=\"struct\">Foo</span> <span class=\"brace\">{</span> <span class=\"field\">x</span><span class=\"comma\">,</span> <span class=\"field\">y</span><span class=\"colon\">:</span> <span class=\"numeric_literal\">1</span> <span class=\"brace\">}</span><span class=\"parenthesis\">)</span><span class=\"semicolon\">;</span>\n     <span class=\"brace\">}</span>\n     <span class=\"keyword unsafe\">unsafe</span> <span class=\"brace\">{</span>\n-        <span class=\"variable mutable\">vec</span><span class=\"operator\">.</span><span class=\"unresolved_reference\">set_len</span><span class=\"parentheses\">(</span><span class=\"numeric_literal\">0</span><span class=\"parentheses\">)</span><span class=\"semicolon\">;</span>\n+        <span class=\"variable mutable\">vec</span><span class=\"operator\">.</span><span class=\"unresolved_reference\">set_len</span><span class=\"parenthesis\">(</span><span class=\"numeric_literal\">0</span><span class=\"parenthesis\">)</span><span class=\"semicolon\">;</span>\n         <span class=\"static mutable unsafe\">STATIC_MUT</span> <span class=\"operator\">=</span> <span class=\"numeric_literal\">1</span><span class=\"semicolon\">;</span>\n     <span class=\"brace\">}</span>\n \n     <span class=\"keyword control\">for</span> <span class=\"variable declaration\">e</span> <span class=\"keyword control\">in</span> <span class=\"variable mutable\">vec</span> <span class=\"brace\">{</span>\n         <span class=\"comment\">// Do nothing</span>\n     <span class=\"brace\">}</span>\n \n-    <span class=\"macro\">noop!</span><span class=\"parentheses\">(</span><span class=\"macro\">noop</span><span class=\"macro\">!</span><span class=\"parentheses\">(</span><span class=\"numeric_literal\">1</span><span class=\"parentheses\">)</span><span class=\"parentheses\">)</span><span class=\"semicolon\">;</span>\n+    <span class=\"macro\">noop!</span><span class=\"parenthesis\">(</span><span class=\"macro\">noop</span><span class=\"macro\">!</span><span class=\"parenthesis\">(</span><span class=\"numeric_literal\">1</span><span class=\"parenthesis\">)</span><span class=\"parenthesis\">)</span><span class=\"semicolon\">;</span>\n \n     <span class=\"keyword\">let</span> <span class=\"keyword\">mut</span> <span class=\"variable declaration mutable\">x</span> <span class=\"operator\">=</span> <span class=\"numeric_literal\">42</span><span class=\"semicolon\">;</span>\n     <span class=\"keyword\">let</span> <span class=\"variable declaration mutable\">y</span> <span class=\"operator\">=</span> <span class=\"operator\">&</span><span class=\"keyword\">mut</span> <span class=\"variable mutable\">x</span><span class=\"semicolon\">;</span>\n@@ -183,14 +183,14 @@\n \n     <span class=\"keyword\">let</span> <span class=\"keyword\">mut</span> <span class=\"variable declaration mutable\">foo</span> <span class=\"operator\">=</span> <span class=\"struct\">Foo</span> <span class=\"brace\">{</span> <span class=\"field\">x</span><span class=\"comma\">,</span> <span class=\"field\">y</span><span class=\"colon\">:</span> <span class=\"variable mutable\">x</span> <span class=\"brace\">}</span><span class=\"semicolon\">;</span>\n     <span class=\"keyword\">let</span> <span class=\"variable declaration\">foo2</span> <span class=\"operator\">=</span> <span class=\"struct\">Foo</span> <span class=\"brace\">{</span> <span class=\"field\">x</span><span class=\"comma\">,</span> <span class=\"field\">y</span><span class=\"colon\">:</span> <span class=\"variable mutable\">x</span> <span class=\"brace\">}</span><span class=\"semicolon\">;</span>\n-    <span class=\"variable mutable\">foo</span><span class=\"operator\">.</span><span class=\"function associated\">quop</span><span class=\"parentheses\">(</span><span class=\"parentheses\">)</span><span class=\"semicolon\">;</span>\n-    <span class=\"variable mutable\">foo</span><span class=\"operator\">.</span><span class=\"function mutable associated\">qux</span><span class=\"parentheses\">(</span><span class=\"parentheses\">)</span><span class=\"semicolon\">;</span>\n-    <span class=\"variable mutable\">foo</span><span class=\"operator\">.</span><span class=\"function consuming associated\">baz</span><span class=\"parentheses\">(</span><span class=\"variable consuming\">foo2</span><span class=\"parentheses\">)</span><span class=\"semicolon\">;</span>\n+    <span class=\"variable mutable\">foo</span><span class=\"operator\">.</span><span class=\"function associated\">quop</span><span class=\"parenthesis\">(</span><span class=\"parenthesis\">)</span><span class=\"semicolon\">;</span>\n+    <span class=\"variable mutable\">foo</span><span class=\"operator\">.</span><span class=\"function mutable associated\">qux</span><span class=\"parenthesis\">(</span><span class=\"parenthesis\">)</span><span class=\"semicolon\">;</span>\n+    <span class=\"variable mutable\">foo</span><span class=\"operator\">.</span><span class=\"function consuming associated\">baz</span><span class=\"parenthesis\">(</span><span class=\"variable consuming\">foo2</span><span class=\"parenthesis\">)</span><span class=\"semicolon\">;</span>\n \n     <span class=\"keyword\">let</span> <span class=\"keyword\">mut</span> <span class=\"variable declaration mutable\">copy</span> <span class=\"operator\">=</span> <span class=\"struct\">FooCopy</span> <span class=\"brace\">{</span> <span class=\"field\">x</span> <span class=\"brace\">}</span><span class=\"semicolon\">;</span>\n-    <span class=\"variable mutable\">copy</span><span class=\"operator\">.</span><span class=\"function associated\">quop</span><span class=\"parentheses\">(</span><span class=\"parentheses\">)</span><span class=\"semicolon\">;</span>\n-    <span class=\"variable mutable\">copy</span><span class=\"operator\">.</span><span class=\"function mutable associated\">qux</span><span class=\"parentheses\">(</span><span class=\"parentheses\">)</span><span class=\"semicolon\">;</span>\n-    <span class=\"variable mutable\">copy</span><span class=\"operator\">.</span><span class=\"function associated\">baz</span><span class=\"parentheses\">(</span><span class=\"variable mutable\">copy</span><span class=\"parentheses\">)</span><span class=\"semicolon\">;</span>\n+    <span class=\"variable mutable\">copy</span><span class=\"operator\">.</span><span class=\"function associated\">quop</span><span class=\"parenthesis\">(</span><span class=\"parenthesis\">)</span><span class=\"semicolon\">;</span>\n+    <span class=\"variable mutable\">copy</span><span class=\"operator\">.</span><span class=\"function mutable associated\">qux</span><span class=\"parenthesis\">(</span><span class=\"parenthesis\">)</span><span class=\"semicolon\">;</span>\n+    <span class=\"variable mutable\">copy</span><span class=\"operator\">.</span><span class=\"function associated\">baz</span><span class=\"parenthesis\">(</span><span class=\"variable mutable\">copy</span><span class=\"parenthesis\">)</span><span class=\"semicolon\">;</span>\n \n     <span class=\"keyword\">let</span> <span class=\"variable declaration callable\">a</span> <span class=\"operator\">=</span> <span class=\"punctuation\">|</span><span class=\"value_param declaration\">x</span><span class=\"punctuation\">|</span> <span class=\"value_param\">x</span><span class=\"semicolon\">;</span>\n     <span class=\"keyword\">let</span> <span class=\"variable declaration callable\">bar</span> <span class=\"operator\">=</span> <span class=\"struct\">Foo</span><span class=\"operator\">::</span><span class=\"function associated\">baz</span><span class=\"semicolon\">;</span>\n@@ -207,15 +207,15 @@\n <span class=\"brace\">}</span>\n \n <span class=\"keyword\">enum</span> <span class=\"enum declaration\">Option</span><span class=\"angle\">&lt;</span><span class=\"type_param declaration\">T</span><span class=\"angle\">&gt;</span> <span class=\"brace\">{</span>\n-    <span class=\"enum_variant declaration\">Some</span><span class=\"parentheses\">(</span><span class=\"type_param\">T</span><span class=\"parentheses\">)</span><span class=\"comma\">,</span>\n+    <span class=\"enum_variant declaration\">Some</span><span class=\"parenthesis\">(</span><span class=\"type_param\">T</span><span class=\"parenthesis\">)</span><span class=\"comma\">,</span>\n     <span class=\"enum_variant declaration\">None</span><span class=\"comma\">,</span>\n <span class=\"brace\">}</span>\n <span class=\"keyword\">use</span> <span class=\"enum\">Option</span><span class=\"operator\">::</span><span class=\"punctuation\">*</span><span class=\"semicolon\">;</span>\n \n <span class=\"keyword\">impl</span><span class=\"angle\">&lt;</span><span class=\"type_param declaration\">T</span><span class=\"angle\">&gt;</span> <span class=\"enum\">Option</span><span class=\"angle\">&lt;</span><span class=\"type_param\">T</span><span class=\"angle\">&gt;</span> <span class=\"brace\">{</span>\n-    <span class=\"keyword\">fn</span> <span class=\"function declaration associated\">and</span><span class=\"angle\">&lt;</span><span class=\"type_param declaration\">U</span><span class=\"angle\">&gt;</span><span class=\"parentheses\">(</span><span class=\"self_keyword\">self</span><span class=\"comma\">,</span> <span class=\"value_param declaration\">other</span><span class=\"colon\">:</span> <span class=\"enum\">Option</span><span class=\"angle\">&lt;</span><span class=\"type_param\">U</span><span class=\"angle\">&gt;</span><span class=\"parentheses\">)</span> <span class=\"operator\">-&gt;</span> <span class=\"enum\">Option</span><span class=\"angle\">&lt;</span><span class=\"parentheses\">(</span><span class=\"type_param\">T</span><span class=\"comma\">,</span> <span class=\"type_param\">U</span><span class=\"parentheses\">)</span><span class=\"angle\">&gt;</span> <span class=\"brace\">{</span>\n+    <span class=\"keyword\">fn</span> <span class=\"function declaration associated\">and</span><span class=\"angle\">&lt;</span><span class=\"type_param declaration\">U</span><span class=\"angle\">&gt;</span><span class=\"parenthesis\">(</span><span class=\"self_keyword\">self</span><span class=\"comma\">,</span> <span class=\"value_param declaration\">other</span><span class=\"colon\">:</span> <span class=\"enum\">Option</span><span class=\"angle\">&lt;</span><span class=\"type_param\">U</span><span class=\"angle\">&gt;</span><span class=\"parenthesis\">)</span> <span class=\"operator\">-&gt;</span> <span class=\"enum\">Option</span><span class=\"angle\">&lt;</span><span class=\"parenthesis\">(</span><span class=\"type_param\">T</span><span class=\"comma\">,</span> <span class=\"type_param\">U</span><span class=\"parenthesis\">)</span><span class=\"angle\">&gt;</span> <span class=\"brace\">{</span>\n         <span class=\"keyword control\">match</span> <span class=\"value_param\">other</span> <span class=\"brace\">{</span>\n-            <span class=\"enum_variant\">None</span> <span class=\"operator\">=&gt;</span> <span class=\"macro\">unimplemented!</span><span class=\"parentheses\">(</span><span class=\"parentheses\">)</span><span class=\"comma\">,</span>\n+            <span class=\"enum_variant\">None</span> <span class=\"operator\">=&gt;</span> <span class=\"macro\">unimplemented!</span><span class=\"parenthesis\">(</span><span class=\"parenthesis\">)</span><span class=\"comma\">,</span>\n             <span class=\"variable declaration\">Nope</span> <span class=\"operator\">=&gt;</span> <span class=\"variable\">Nope</span><span class=\"comma\">,</span>\n         <span class=\"brace\">}</span>\n     <span class=\"brace\">}</span>"}, {"sha": "78dfec9518cc8ef0e67b392af1647f803351d95d", "filename": "crates/ide/src/syntax_highlighting/test_data/injection.html", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/10e7fd25feb96f7fe5b82864374833ebf273fa2f/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftest_data%2Finjection.html", "raw_url": "https://github.com/rust-lang/rust/raw/10e7fd25feb96f7fe5b82864374833ebf273fa2f/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftest_data%2Finjection.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftest_data%2Finjection.html?ref=10e7fd25feb96f7fe5b82864374833ebf273fa2f", "patch": "@@ -36,13 +36,13 @@\n \n .unresolved_reference { color: #FC5555; text-decoration: wavy underline; }\n </style>\n-<pre><code><span class=\"keyword\">fn</span> <span class=\"function declaration\">f</span><span class=\"parentheses\">(</span><span class=\"value_param declaration\">ra_fixture</span><span class=\"colon\">:</span> <span class=\"operator\">&</span><span class=\"builtin_type\">str</span><span class=\"parentheses\">)</span> <span class=\"brace\">{</span><span class=\"brace\">}</span>\n-<span class=\"keyword\">fn</span> <span class=\"function declaration\">main</span><span class=\"parentheses\">(</span><span class=\"parentheses\">)</span> <span class=\"brace\">{</span>\n-    <span class=\"function\">f</span><span class=\"parentheses\">(</span><span class=\"string_literal\">r\"</span>\n-<span class=\"keyword\">fn</span> <span class=\"function declaration\">foo</span><span class=\"parentheses\">(</span><span class=\"parentheses\">)</span> <span class=\"brace\">{</span>\n-    <span class=\"function\">foo</span><span class=\"parentheses\">(</span><span class=\"keyword\">$0</span><span class=\"brace\">{</span>\n+<pre><code><span class=\"keyword\">fn</span> <span class=\"function declaration\">f</span><span class=\"parenthesis\">(</span><span class=\"value_param declaration\">ra_fixture</span><span class=\"colon\">:</span> <span class=\"operator\">&</span><span class=\"builtin_type\">str</span><span class=\"parenthesis\">)</span> <span class=\"brace\">{</span><span class=\"brace\">}</span>\n+<span class=\"keyword\">fn</span> <span class=\"function declaration\">main</span><span class=\"parenthesis\">(</span><span class=\"parenthesis\">)</span> <span class=\"brace\">{</span>\n+    <span class=\"function\">f</span><span class=\"parenthesis\">(</span><span class=\"string_literal\">r\"</span>\n+<span class=\"keyword\">fn</span> <span class=\"function declaration\">foo</span><span class=\"parenthesis\">(</span><span class=\"parenthesis\">)</span> <span class=\"brace\">{</span>\n+    <span class=\"function\">foo</span><span class=\"parenthesis\">(</span><span class=\"keyword\">$0</span><span class=\"brace\">{</span>\n         <span class=\"numeric_literal\">92</span>\n-    <span class=\"brace\">}</span><span class=\"keyword\">$0</span><span class=\"parentheses\">)</span>\n-<span class=\"brace\">}</span><span class=\"string_literal\">\"</span><span class=\"parentheses\">)</span><span class=\"semicolon\">;</span>\n+    <span class=\"brace\">}</span><span class=\"keyword\">$0</span><span class=\"parenthesis\">)</span>\n+<span class=\"brace\">}</span><span class=\"string_literal\">\"</span><span class=\"parenthesis\">)</span><span class=\"semicolon\">;</span>\n <span class=\"brace\">}</span>\n     </code></pre>\n\\ No newline at end of file"}, {"sha": "e64f2e5e93f75624cff87a91a313fc1f384f7ce0", "filename": "crates/ide/src/syntax_highlighting/test_data/rainbow_highlighting.html", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/10e7fd25feb96f7fe5b82864374833ebf273fa2f/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftest_data%2Frainbow_highlighting.html", "raw_url": "https://github.com/rust-lang/rust/raw/10e7fd25feb96f7fe5b82864374833ebf273fa2f/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftest_data%2Frainbow_highlighting.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftest_data%2Frainbow_highlighting.html?ref=10e7fd25feb96f7fe5b82864374833ebf273fa2f", "patch": "@@ -36,15 +36,15 @@\n \n .unresolved_reference { color: #FC5555; text-decoration: wavy underline; }\n </style>\n-<pre><code><span class=\"keyword\">fn</span> <span class=\"function declaration\">main</span><span class=\"parentheses\">(</span><span class=\"parentheses\">)</span> <span class=\"brace\">{</span>\n+<pre><code><span class=\"keyword\">fn</span> <span class=\"function declaration\">main</span><span class=\"parenthesis\">(</span><span class=\"parenthesis\">)</span> <span class=\"brace\">{</span>\n     <span class=\"keyword\">let</span> <span class=\"variable declaration\" data-binding-hash=\"8121853618659664005\" style=\"color: hsl(273,88%,88%);\">hello</span> <span class=\"operator\">=</span> <span class=\"string_literal\">\"hello\"</span><span class=\"semicolon\">;</span>\n-    <span class=\"keyword\">let</span> <span class=\"variable declaration\" data-binding-hash=\"2705725358298919760\" style=\"color: hsl(76,47%,83%);\">x</span> <span class=\"operator\">=</span> <span class=\"variable\" data-binding-hash=\"8121853618659664005\" style=\"color: hsl(273,88%,88%);\">hello</span><span class=\"operator\">.</span><span class=\"unresolved_reference\">to_string</span><span class=\"parentheses\">(</span><span class=\"parentheses\">)</span><span class=\"semicolon\">;</span>\n-    <span class=\"keyword\">let</span> <span class=\"variable declaration\" data-binding-hash=\"3365759661443752373\" style=\"color: hsl(15,86%,51%);\">y</span> <span class=\"operator\">=</span> <span class=\"variable\" data-binding-hash=\"8121853618659664005\" style=\"color: hsl(273,88%,88%);\">hello</span><span class=\"operator\">.</span><span class=\"unresolved_reference\">to_string</span><span class=\"parentheses\">(</span><span class=\"parentheses\">)</span><span class=\"semicolon\">;</span>\n+    <span class=\"keyword\">let</span> <span class=\"variable declaration\" data-binding-hash=\"2705725358298919760\" style=\"color: hsl(76,47%,83%);\">x</span> <span class=\"operator\">=</span> <span class=\"variable\" data-binding-hash=\"8121853618659664005\" style=\"color: hsl(273,88%,88%);\">hello</span><span class=\"operator\">.</span><span class=\"unresolved_reference\">to_string</span><span class=\"parenthesis\">(</span><span class=\"parenthesis\">)</span><span class=\"semicolon\">;</span>\n+    <span class=\"keyword\">let</span> <span class=\"variable declaration\" data-binding-hash=\"3365759661443752373\" style=\"color: hsl(15,86%,51%);\">y</span> <span class=\"operator\">=</span> <span class=\"variable\" data-binding-hash=\"8121853618659664005\" style=\"color: hsl(273,88%,88%);\">hello</span><span class=\"operator\">.</span><span class=\"unresolved_reference\">to_string</span><span class=\"parenthesis\">(</span><span class=\"parenthesis\">)</span><span class=\"semicolon\">;</span>\n \n     <span class=\"keyword\">let</span> <span class=\"variable declaration\" data-binding-hash=\"794745962933817518\" style=\"color: hsl(127,71%,87%);\">x</span> <span class=\"operator\">=</span> <span class=\"string_literal\">\"other color please!\"</span><span class=\"semicolon\">;</span>\n-    <span class=\"keyword\">let</span> <span class=\"variable declaration\" data-binding-hash=\"6717528807933952652\" style=\"color: hsl(90,74%,79%);\">y</span> <span class=\"operator\">=</span> <span class=\"variable\" data-binding-hash=\"794745962933817518\" style=\"color: hsl(127,71%,87%);\">x</span><span class=\"operator\">.</span><span class=\"unresolved_reference\">to_string</span><span class=\"parentheses\">(</span><span class=\"parentheses\">)</span><span class=\"semicolon\">;</span>\n+    <span class=\"keyword\">let</span> <span class=\"variable declaration\" data-binding-hash=\"6717528807933952652\" style=\"color: hsl(90,74%,79%);\">y</span> <span class=\"operator\">=</span> <span class=\"variable\" data-binding-hash=\"794745962933817518\" style=\"color: hsl(127,71%,87%);\">x</span><span class=\"operator\">.</span><span class=\"unresolved_reference\">to_string</span><span class=\"parenthesis\">(</span><span class=\"parenthesis\">)</span><span class=\"semicolon\">;</span>\n <span class=\"brace\">}</span>\n \n-<span class=\"keyword\">fn</span> <span class=\"function declaration\">bar</span><span class=\"parentheses\">(</span><span class=\"parentheses\">)</span> <span class=\"brace\">{</span>\n+<span class=\"keyword\">fn</span> <span class=\"function declaration\">bar</span><span class=\"parenthesis\">(</span><span class=\"parenthesis\">)</span> <span class=\"brace\">{</span>\n     <span class=\"keyword\">let</span> <span class=\"keyword\">mut</span> <span class=\"variable declaration mutable\" data-binding-hash=\"8121853618659664005\" style=\"color: hsl(273,88%,88%);\">hello</span> <span class=\"operator\">=</span> <span class=\"string_literal\">\"hello\"</span><span class=\"semicolon\">;</span>\n <span class=\"brace\">}</span></code></pre>\n\\ No newline at end of file"}, {"sha": "7f90883821292e9e0d838b6477cccdc2da4574bb", "filename": "crates/syntax/src/validation.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/10e7fd25feb96f7fe5b82864374833ebf273fa2f/crates%2Fsyntax%2Fsrc%2Fvalidation.rs", "raw_url": "https://github.com/rust-lang/rust/raw/10e7fd25feb96f7fe5b82864374833ebf273fa2f/crates%2Fsyntax%2Fsrc%2Fvalidation.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Fsrc%2Fvalidation.rs?ref=10e7fd25feb96f7fe5b82864374833ebf273fa2f", "patch": "@@ -344,9 +344,9 @@ fn validate_trait_object_ty(ty: ast::DynTraitType) -> Option<SyntaxError> {\n \n     if tbl.bounds().count() > 1 {\n         let dyn_token = ty.dyn_token()?;\n-        let potential_parentheses =\n+        let potential_parenthesis =\n             algo::skip_trivia_token(dyn_token.prev_token()?, Direction::Prev)?;\n-        let kind = potential_parentheses.kind();\n+        let kind = potential_parenthesis.kind();\n         if !matches!(kind, T!['('] | T![<] | T![=]) {\n             return Some(SyntaxError::new(\"ambiguous `+` in a type\", ty.syntax().text_range()));\n         }"}]}