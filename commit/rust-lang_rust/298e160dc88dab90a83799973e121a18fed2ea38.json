{"sha": "298e160dc88dab90a83799973e121a18fed2ea38", "node_id": "C_kwDOAAsO6NoAKDI5OGUxNjBkYzg4ZGFiOTBhODM3OTk5NzNlMTIxYTE4ZmVkMmVhMzg", "commit": {"author": {"name": "Mara Bos", "email": "m-ou.se@m-ou.se", "date": "2023-01-12T18:58:49Z"}, "committer": {"name": "Mara Bos", "email": "m-ou.se@m-ou.se", "date": "2023-01-12T18:58:49Z"}, "message": "Assume there are no macros left in ast lowering.", "tree": {"sha": "445f00d5feea9838d50d20d49e320c248cea096f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/445f00d5feea9838d50d20d49e320c248cea096f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/298e160dc88dab90a83799973e121a18fed2ea38", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/298e160dc88dab90a83799973e121a18fed2ea38", "html_url": "https://github.com/rust-lang/rust/commit/298e160dc88dab90a83799973e121a18fed2ea38", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/298e160dc88dab90a83799973e121a18fed2ea38/comments", "author": {"login": "m-ou-se", "id": 783247, "node_id": "MDQ6VXNlcjc4MzI0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/783247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-ou-se", "html_url": "https://github.com/m-ou-se", "followers_url": "https://api.github.com/users/m-ou-se/followers", "following_url": "https://api.github.com/users/m-ou-se/following{/other_user}", "gists_url": "https://api.github.com/users/m-ou-se/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-ou-se/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-ou-se/subscriptions", "organizations_url": "https://api.github.com/users/m-ou-se/orgs", "repos_url": "https://api.github.com/users/m-ou-se/repos", "events_url": "https://api.github.com/users/m-ou-se/events{/privacy}", "received_events_url": "https://api.github.com/users/m-ou-se/received_events", "type": "User", "site_admin": false}, "committer": {"login": "m-ou-se", "id": 783247, "node_id": "MDQ6VXNlcjc4MzI0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/783247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-ou-se", "html_url": "https://github.com/m-ou-se", "followers_url": "https://api.github.com/users/m-ou-se/followers", "following_url": "https://api.github.com/users/m-ou-se/following{/other_user}", "gists_url": "https://api.github.com/users/m-ou-se/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-ou-se/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-ou-se/subscriptions", "organizations_url": "https://api.github.com/users/m-ou-se/orgs", "repos_url": "https://api.github.com/users/m-ou-se/repos", "events_url": "https://api.github.com/users/m-ou-se/events{/privacy}", "received_events_url": "https://api.github.com/users/m-ou-se/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "56593104acef6afc0f3d29c765801bb44ec02c65", "url": "https://api.github.com/repos/rust-lang/rust/commits/56593104acef6afc0f3d29c765801bb44ec02c65", "html_url": "https://github.com/rust-lang/rust/commit/56593104acef6afc0f3d29c765801bb44ec02c65"}], "stats": {"total": 9, "additions": 2, "deletions": 7}, "files": [{"sha": "693b9a399cfb4c567fe6c43e4e9d3abd57f3a842", "filename": "compiler/rustc_ast_lowering/src/format.rs", "status": "modified", "additions": 2, "deletions": 7, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/298e160dc88dab90a83799973e121a18fed2ea38/compiler%2Frustc_ast_lowering%2Fsrc%2Fformat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/298e160dc88dab90a83799973e121a18fed2ea38/compiler%2Frustc_ast_lowering%2Fsrc%2Fformat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_ast_lowering%2Fsrc%2Fformat.rs?ref=298e160dc88dab90a83799973e121a18fed2ea38", "patch": "@@ -334,13 +334,8 @@ fn may_contain_yield_point(e: &ast::Expr) -> bool {\n         }\n \n         fn visit_mac_call(&mut self, _: &ast::MacCall) {\n-            self.0 = true;\n-        }\n-\n-        fn visit_attribute(&mut self, _: &ast::Attribute) {\n-            // Conservatively assume this may be a proc macro attribute in\n-            // expression position.\n-            self.0 = true;\n+            // Macros should be expanded at this point.\n+            unreachable!(\"unexpanded macro in ast lowering\");\n         }\n \n         fn visit_item(&mut self, _: &ast::Item) {"}]}