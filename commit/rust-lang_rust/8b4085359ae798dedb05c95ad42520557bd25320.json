{"sha": "8b4085359ae798dedb05c95ad42520557bd25320", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhiNDA4NTM1OWFlNzk4ZGVkYjA1Yzk1YWQ0MjUyMDU1N2JkMjUzMjA=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-09-23T20:13:47Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-09-23T20:13:47Z"}, "message": "Auto merge of #76673 - simonvandel:remove-unneeded-drops, r=oli-obk\n\nMIR pass to remove unneeded drops on types not needing drop\n\nThis is heavily dependent on MIR inlining running to actually see the drop statement.\n\nDo we want to special case replacing a call to std::mem::drop with a goto aswell?", "tree": {"sha": "d636a9670fdcae36ee917808167b174f4489bc28", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d636a9670fdcae36ee917808167b174f4489bc28"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8b4085359ae798dedb05c95ad42520557bd25320", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8b4085359ae798dedb05c95ad42520557bd25320", "html_url": "https://github.com/rust-lang/rust/commit/8b4085359ae798dedb05c95ad42520557bd25320", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8b4085359ae798dedb05c95ad42520557bd25320/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a6008fac97f81a3fc51668b0c7fa0e2e6f2a599b", "url": "https://api.github.com/repos/rust-lang/rust/commits/a6008fac97f81a3fc51668b0c7fa0e2e6f2a599b", "html_url": "https://github.com/rust-lang/rust/commit/a6008fac97f81a3fc51668b0c7fa0e2e6f2a599b"}, {"sha": "05f84c67a4f38136b1a7be9065781611061a23d3", "url": "https://api.github.com/repos/rust-lang/rust/commits/05f84c67a4f38136b1a7be9065781611061a23d3", "html_url": "https://github.com/rust-lang/rust/commit/05f84c67a4f38136b1a7be9065781611061a23d3"}], "stats": {"total": 218, "additions": 210, "deletions": 8}, "files": [{"sha": "f48ad039b4ff9682adb50ea12f1b63f37ffef872", "filename": "compiler/rustc_mir/src/transform/mod.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8b4085359ae798dedb05c95ad42520557bd25320/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8b4085359ae798dedb05c95ad42520557bd25320/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Fmod.rs?ref=8b4085359ae798dedb05c95ad42520557bd25320", "patch": "@@ -38,6 +38,7 @@ pub mod nrvo;\n pub mod promote_consts;\n pub mod qualify_min_const_fn;\n pub mod remove_noop_landing_pads;\n+pub mod remove_unneeded_drops;\n pub mod required_consts;\n pub mod rustc_peek;\n pub mod simplify;\n@@ -461,6 +462,7 @@ fn run_optimization_passes<'tcx>(\n \n     // The main optimizations that we do on MIR.\n     let optimizations: &[&dyn MirPass<'tcx>] = &[\n+        &remove_unneeded_drops::RemoveUnneededDrops,\n         &match_branches::MatchBranchSimplification,\n         // inst combine is after MatchBranchSimplification to clean up Ne(_1, false)\n         &instcombine::InstCombine,"}, {"sha": "f027f5e33a18764d8e02b06720a4b2e21d9aba89", "filename": "compiler/rustc_mir/src/transform/remove_unneeded_drops.rs", "status": "added", "additions": 59, "deletions": 0, "changes": 59, "blob_url": "https://github.com/rust-lang/rust/blob/8b4085359ae798dedb05c95ad42520557bd25320/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Fremove_unneeded_drops.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8b4085359ae798dedb05c95ad42520557bd25320/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Fremove_unneeded_drops.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Fremove_unneeded_drops.rs?ref=8b4085359ae798dedb05c95ad42520557bd25320", "patch": "@@ -0,0 +1,59 @@\n+//! This pass replaces a drop of a type that does not need dropping, with a goto\n+\n+use crate::transform::{MirPass, MirSource};\n+use rustc_hir::def_id::LocalDefId;\n+use rustc_middle::mir::visit::Visitor;\n+use rustc_middle::mir::*;\n+use rustc_middle::ty::TyCtxt;\n+\n+use super::simplify::simplify_cfg;\n+\n+pub struct RemoveUnneededDrops;\n+\n+impl<'tcx> MirPass<'tcx> for RemoveUnneededDrops {\n+    fn run_pass(&self, tcx: TyCtxt<'tcx>, source: MirSource<'tcx>, body: &mut Body<'tcx>) {\n+        trace!(\"Running RemoveUnneededDrops on {:?}\", source);\n+        let mut opt_finder = RemoveUnneededDropsOptimizationFinder {\n+            tcx,\n+            body,\n+            optimizations: vec![],\n+            def_id: source.def_id().expect_local(),\n+        };\n+        opt_finder.visit_body(body);\n+        let should_simplify = !opt_finder.optimizations.is_empty();\n+        for (loc, target) in opt_finder.optimizations {\n+            let terminator = body.basic_blocks_mut()[loc.block].terminator_mut();\n+            debug!(\"SUCCESS: replacing `drop` with goto({:?})\", target);\n+            terminator.kind = TerminatorKind::Goto { target };\n+        }\n+\n+        // if we applied optimizations, we potentially have some cfg to cleanup to\n+        // make it easier for further passes\n+        if should_simplify {\n+            simplify_cfg(body);\n+        }\n+    }\n+}\n+\n+impl<'a, 'tcx> Visitor<'tcx> for RemoveUnneededDropsOptimizationFinder<'a, 'tcx> {\n+    fn visit_terminator(&mut self, terminator: &Terminator<'tcx>, location: Location) {\n+        match terminator.kind {\n+            TerminatorKind::Drop { place, target, .. }\n+            | TerminatorKind::DropAndReplace { place, target, .. } => {\n+                let ty = place.ty(self.body, self.tcx);\n+                let needs_drop = ty.ty.needs_drop(self.tcx, self.tcx.param_env(self.def_id));\n+                if !needs_drop {\n+                    self.optimizations.push((location, target));\n+                }\n+            }\n+            _ => {}\n+        }\n+        self.super_terminator(terminator, location);\n+    }\n+}\n+pub struct RemoveUnneededDropsOptimizationFinder<'a, 'tcx> {\n+    tcx: TyCtxt<'tcx>,\n+    body: &'a Body<'tcx>,\n+    optimizations: Vec<(Location, BasicBlock)>,\n+    def_id: LocalDefId,\n+}"}, {"sha": "881c296cee77aef842f27e2bef58241622c8064a", "filename": "src/test/mir-opt/dest-prop/cycle.main.DestinationPropagation.diff", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/8b4085359ae798dedb05c95ad42520557bd25320/src%2Ftest%2Fmir-opt%2Fdest-prop%2Fcycle.main.DestinationPropagation.diff", "raw_url": "https://github.com/rust-lang/rust/raw/8b4085359ae798dedb05c95ad42520557bd25320/src%2Ftest%2Fmir-opt%2Fdest-prop%2Fcycle.main.DestinationPropagation.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fdest-prop%2Fcycle.main.DestinationPropagation.diff?ref=8b4085359ae798dedb05c95ad42520557bd25320", "patch": "@@ -57,10 +57,6 @@\n -         _6 = _1;                         // scope 3 at $DIR/cycle.rs:14:10: 14:11\n +         _6 = _4;                         // scope 3 at $DIR/cycle.rs:14:10: 14:11\n           _5 = const ();                   // scope 4 at $SRC_DIR/core/src/mem/mod.rs:LL:COL\n-          drop(_6) -> bb2;                 // scope 4 at $SRC_DIR/core/src/mem/mod.rs:LL:COL\n-      }\n-  \n-      bb2: {\n           StorageDead(_6);                 // scope 3 at $DIR/cycle.rs:14:11: 14:12\n           StorageDead(_5);                 // scope 3 at $DIR/cycle.rs:14:12: 14:13\n           _0 = const ();                   // scope 0 at $DIR/cycle.rs:8:11: 15:2"}, {"sha": "f15e7bcb2fba636673da78bad70fc4ca37c44fdf", "filename": "src/test/mir-opt/dest-prop/union.main.DestinationPropagation.diff", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/8b4085359ae798dedb05c95ad42520557bd25320/src%2Ftest%2Fmir-opt%2Fdest-prop%2Funion.main.DestinationPropagation.diff", "raw_url": "https://github.com/rust-lang/rust/raw/8b4085359ae798dedb05c95ad42520557bd25320/src%2Ftest%2Fmir-opt%2Fdest-prop%2Funion.main.DestinationPropagation.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fdest-prop%2Funion.main.DestinationPropagation.diff?ref=8b4085359ae798dedb05c95ad42520557bd25320", "patch": "@@ -32,10 +32,6 @@\n           StorageLive(_4);                 // scope 1 at $DIR/union.rs:15:10: 15:26\n           _4 = (_1.0: u32);                // scope 2 at $DIR/union.rs:15:19: 15:24\n           _3 = const ();                   // scope 3 at $SRC_DIR/core/src/mem/mod.rs:LL:COL\n-          drop(_4) -> bb2;                 // scope 3 at $SRC_DIR/core/src/mem/mod.rs:LL:COL\n-      }\n-  \n-      bb2: {\n           StorageDead(_4);                 // scope 1 at $DIR/union.rs:15:26: 15:27\n           StorageDead(_3);                 // scope 1 at $DIR/union.rs:15:27: 15:28\n           _0 = const ();                   // scope 0 at $DIR/union.rs:8:11: 16:2"}, {"sha": "787cf6f97c1f2da412a80b719745da1b0ef2f083", "filename": "src/test/mir-opt/remove_unneeded_drops.cannot_opt_generic.RemoveUnneededDrops.diff", "status": "added", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/8b4085359ae798dedb05c95ad42520557bd25320/src%2Ftest%2Fmir-opt%2Fremove_unneeded_drops.cannot_opt_generic.RemoveUnneededDrops.diff", "raw_url": "https://github.com/rust-lang/rust/raw/8b4085359ae798dedb05c95ad42520557bd25320/src%2Ftest%2Fmir-opt%2Fremove_unneeded_drops.cannot_opt_generic.RemoveUnneededDrops.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fremove_unneeded_drops.cannot_opt_generic.RemoveUnneededDrops.diff?ref=8b4085359ae798dedb05c95ad42520557bd25320", "patch": "@@ -0,0 +1,32 @@\n+- // MIR for `cannot_opt_generic` before RemoveUnneededDrops\n++ // MIR for `cannot_opt_generic` after RemoveUnneededDrops\n+  \n+  fn cannot_opt_generic(_1: T) -> () {\n+      debug x => _1;                       // in scope 0 at $DIR/remove_unneeded_drops.rs:20:26: 20:27\n+      let mut _0: ();                      // return place in scope 0 at $DIR/remove_unneeded_drops.rs:20:32: 20:32\n+      let _2: ();                          // in scope 0 at $DIR/remove_unneeded_drops.rs:21:5: 21:12\n+      let mut _3: T;                       // in scope 0 at $DIR/remove_unneeded_drops.rs:21:10: 21:11\n+      scope 1 {\n+          debug _x => _3;                  // in scope 1 at $SRC_DIR/core/src/mem/mod.rs:LL:COL\n+      }\n+  \n+      bb0: {\n+          StorageLive(_2);                 // scope 0 at $DIR/remove_unneeded_drops.rs:21:5: 21:12\n+          StorageLive(_3);                 // scope 0 at $DIR/remove_unneeded_drops.rs:21:10: 21:11\n+          _3 = move _1;                    // scope 0 at $DIR/remove_unneeded_drops.rs:21:10: 21:11\n+          _2 = const ();                   // scope 1 at $SRC_DIR/core/src/mem/mod.rs:LL:COL\n+          drop(_3) -> [return: bb2, unwind: bb1]; // scope 1 at $SRC_DIR/core/src/mem/mod.rs:LL:COL\n+      }\n+  \n+      bb1 (cleanup): {\n+          resume;                          // scope 0 at $DIR/remove_unneeded_drops.rs:20:1: 22:2\n+      }\n+  \n+      bb2: {\n+          StorageDead(_3);                 // scope 0 at $DIR/remove_unneeded_drops.rs:21:11: 21:12\n+          StorageDead(_2);                 // scope 0 at $DIR/remove_unneeded_drops.rs:21:12: 21:13\n+          _0 = const ();                   // scope 0 at $DIR/remove_unneeded_drops.rs:20:32: 22:2\n+          return;                          // scope 0 at $DIR/remove_unneeded_drops.rs:22:2: 22:2\n+      }\n+  }\n+  "}, {"sha": "52e182eeb4a8a32bd49a6117bff3ec175c433e12", "filename": "src/test/mir-opt/remove_unneeded_drops.dont_opt.RemoveUnneededDrops.diff", "status": "added", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/8b4085359ae798dedb05c95ad42520557bd25320/src%2Ftest%2Fmir-opt%2Fremove_unneeded_drops.dont_opt.RemoveUnneededDrops.diff", "raw_url": "https://github.com/rust-lang/rust/raw/8b4085359ae798dedb05c95ad42520557bd25320/src%2Ftest%2Fmir-opt%2Fremove_unneeded_drops.dont_opt.RemoveUnneededDrops.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fremove_unneeded_drops.dont_opt.RemoveUnneededDrops.diff?ref=8b4085359ae798dedb05c95ad42520557bd25320", "patch": "@@ -0,0 +1,32 @@\n+- // MIR for `dont_opt` before RemoveUnneededDrops\n++ // MIR for `dont_opt` after RemoveUnneededDrops\n+  \n+  fn dont_opt(_1: Vec<bool>) -> () {\n+      debug x => _1;                       // in scope 0 at $DIR/remove_unneeded_drops.rs:8:13: 8:14\n+      let mut _0: ();                      // return place in scope 0 at $DIR/remove_unneeded_drops.rs:8:27: 8:27\n+      let _2: ();                          // in scope 0 at $DIR/remove_unneeded_drops.rs:9:5: 9:12\n+      let mut _3: std::vec::Vec<bool>;     // in scope 0 at $DIR/remove_unneeded_drops.rs:9:10: 9:11\n+      scope 1 {\n+          debug _x => _3;                  // in scope 1 at $SRC_DIR/core/src/mem/mod.rs:LL:COL\n+      }\n+  \n+      bb0: {\n+          StorageLive(_2);                 // scope 0 at $DIR/remove_unneeded_drops.rs:9:5: 9:12\n+          StorageLive(_3);                 // scope 0 at $DIR/remove_unneeded_drops.rs:9:10: 9:11\n+          _3 = move _1;                    // scope 0 at $DIR/remove_unneeded_drops.rs:9:10: 9:11\n+          _2 = const ();                   // scope 1 at $SRC_DIR/core/src/mem/mod.rs:LL:COL\n+          drop(_3) -> [return: bb2, unwind: bb1]; // scope 1 at $SRC_DIR/core/src/mem/mod.rs:LL:COL\n+      }\n+  \n+      bb1 (cleanup): {\n+          resume;                          // scope 0 at $DIR/remove_unneeded_drops.rs:8:1: 10:2\n+      }\n+  \n+      bb2: {\n+          StorageDead(_3);                 // scope 0 at $DIR/remove_unneeded_drops.rs:9:11: 9:12\n+          StorageDead(_2);                 // scope 0 at $DIR/remove_unneeded_drops.rs:9:12: 9:13\n+          _0 = const ();                   // scope 0 at $DIR/remove_unneeded_drops.rs:8:27: 10:2\n+          return;                          // scope 0 at $DIR/remove_unneeded_drops.rs:10:2: 10:2\n+      }\n+  }\n+  "}, {"sha": "bc9e1344f3176c992de29a800453cad2c417e896", "filename": "src/test/mir-opt/remove_unneeded_drops.opt.RemoveUnneededDrops.diff", "status": "added", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/8b4085359ae798dedb05c95ad42520557bd25320/src%2Ftest%2Fmir-opt%2Fremove_unneeded_drops.opt.RemoveUnneededDrops.diff", "raw_url": "https://github.com/rust-lang/rust/raw/8b4085359ae798dedb05c95ad42520557bd25320/src%2Ftest%2Fmir-opt%2Fremove_unneeded_drops.opt.RemoveUnneededDrops.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fremove_unneeded_drops.opt.RemoveUnneededDrops.diff?ref=8b4085359ae798dedb05c95ad42520557bd25320", "patch": "@@ -0,0 +1,28 @@\n+- // MIR for `opt` before RemoveUnneededDrops\n++ // MIR for `opt` after RemoveUnneededDrops\n+  \n+  fn opt(_1: bool) -> () {\n+      debug x => _1;                       // in scope 0 at $DIR/remove_unneeded_drops.rs:3:8: 3:9\n+      let mut _0: ();                      // return place in scope 0 at $DIR/remove_unneeded_drops.rs:3:17: 3:17\n+      let _2: ();                          // in scope 0 at $DIR/remove_unneeded_drops.rs:4:5: 4:12\n+      let mut _3: bool;                    // in scope 0 at $DIR/remove_unneeded_drops.rs:4:10: 4:11\n+      scope 1 {\n+          debug _x => _3;                  // in scope 1 at $SRC_DIR/core/src/mem/mod.rs:LL:COL\n+      }\n+  \n+      bb0: {\n+          StorageLive(_2);                 // scope 0 at $DIR/remove_unneeded_drops.rs:4:5: 4:12\n+          StorageLive(_3);                 // scope 0 at $DIR/remove_unneeded_drops.rs:4:10: 4:11\n+          _3 = _1;                         // scope 0 at $DIR/remove_unneeded_drops.rs:4:10: 4:11\n+          _2 = const ();                   // scope 1 at $SRC_DIR/core/src/mem/mod.rs:LL:COL\n+-         drop(_3) -> bb1;                 // scope 1 at $SRC_DIR/core/src/mem/mod.rs:LL:COL\n+-     }\n+- \n+-     bb1: {\n+          StorageDead(_3);                 // scope 0 at $DIR/remove_unneeded_drops.rs:4:11: 4:12\n+          StorageDead(_2);                 // scope 0 at $DIR/remove_unneeded_drops.rs:4:12: 4:13\n+          _0 = const ();                   // scope 0 at $DIR/remove_unneeded_drops.rs:3:17: 5:2\n+          return;                          // scope 0 at $DIR/remove_unneeded_drops.rs:5:2: 5:2\n+      }\n+  }\n+  "}, {"sha": "5c8b1d1372115ac7dc5029a8194cb5d1b1915a68", "filename": "src/test/mir-opt/remove_unneeded_drops.opt_generic_copy.RemoveUnneededDrops.diff", "status": "added", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/8b4085359ae798dedb05c95ad42520557bd25320/src%2Ftest%2Fmir-opt%2Fremove_unneeded_drops.opt_generic_copy.RemoveUnneededDrops.diff", "raw_url": "https://github.com/rust-lang/rust/raw/8b4085359ae798dedb05c95ad42520557bd25320/src%2Ftest%2Fmir-opt%2Fremove_unneeded_drops.opt_generic_copy.RemoveUnneededDrops.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fremove_unneeded_drops.opt_generic_copy.RemoveUnneededDrops.diff?ref=8b4085359ae798dedb05c95ad42520557bd25320", "patch": "@@ -0,0 +1,28 @@\n+- // MIR for `opt_generic_copy` before RemoveUnneededDrops\n++ // MIR for `opt_generic_copy` after RemoveUnneededDrops\n+  \n+  fn opt_generic_copy(_1: T) -> () {\n+      debug x => _1;                       // in scope 0 at $DIR/remove_unneeded_drops.rs:13:30: 13:31\n+      let mut _0: ();                      // return place in scope 0 at $DIR/remove_unneeded_drops.rs:13:36: 13:36\n+      let _2: ();                          // in scope 0 at $DIR/remove_unneeded_drops.rs:14:5: 14:12\n+      let mut _3: T;                       // in scope 0 at $DIR/remove_unneeded_drops.rs:14:10: 14:11\n+      scope 1 {\n+          debug _x => _3;                  // in scope 1 at $SRC_DIR/core/src/mem/mod.rs:LL:COL\n+      }\n+  \n+      bb0: {\n+          StorageLive(_2);                 // scope 0 at $DIR/remove_unneeded_drops.rs:14:5: 14:12\n+          StorageLive(_3);                 // scope 0 at $DIR/remove_unneeded_drops.rs:14:10: 14:11\n+          _3 = _1;                         // scope 0 at $DIR/remove_unneeded_drops.rs:14:10: 14:11\n+          _2 = const ();                   // scope 1 at $SRC_DIR/core/src/mem/mod.rs:LL:COL\n+-         drop(_3) -> bb1;                 // scope 1 at $SRC_DIR/core/src/mem/mod.rs:LL:COL\n+-     }\n+- \n+-     bb1: {\n+          StorageDead(_3);                 // scope 0 at $DIR/remove_unneeded_drops.rs:14:11: 14:12\n+          StorageDead(_2);                 // scope 0 at $DIR/remove_unneeded_drops.rs:14:12: 14:13\n+          _0 = const ();                   // scope 0 at $DIR/remove_unneeded_drops.rs:13:36: 15:2\n+          return;                          // scope 0 at $DIR/remove_unneeded_drops.rs:15:2: 15:2\n+      }\n+  }\n+  "}, {"sha": "1052f2886770d423b755c9457c5213f724d54981", "filename": "src/test/mir-opt/remove_unneeded_drops.rs", "status": "added", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/8b4085359ae798dedb05c95ad42520557bd25320/src%2Ftest%2Fmir-opt%2Fremove_unneeded_drops.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8b4085359ae798dedb05c95ad42520557bd25320/src%2Ftest%2Fmir-opt%2Fremove_unneeded_drops.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fremove_unneeded_drops.rs?ref=8b4085359ae798dedb05c95ad42520557bd25320", "patch": "@@ -0,0 +1,29 @@\n+// ignore-wasm32-bare compiled with panic=abort by default\n+// EMIT_MIR remove_unneeded_drops.opt.RemoveUnneededDrops.diff\n+fn opt(x: bool) {\n+    drop(x);\n+}\n+\n+// EMIT_MIR remove_unneeded_drops.dont_opt.RemoveUnneededDrops.diff\n+fn dont_opt(x: Vec<bool>) {\n+    drop(x);\n+}\n+\n+// EMIT_MIR remove_unneeded_drops.opt_generic_copy.RemoveUnneededDrops.diff\n+fn opt_generic_copy<T: Copy>(x: T) {\n+    drop(x);\n+}\n+\n+// EMIT_MIR remove_unneeded_drops.cannot_opt_generic.RemoveUnneededDrops.diff\n+// since the pass is not running on monomorphisized code,\n+// we can't (but probably should) optimize this\n+fn cannot_opt_generic<T>(x: T) {\n+    drop(x);\n+}\n+\n+fn main() {\n+    opt(true);\n+    opt_generic_copy(42);\n+    cannot_opt_generic(42);\n+    dont_opt(vec![true]);\n+}"}]}