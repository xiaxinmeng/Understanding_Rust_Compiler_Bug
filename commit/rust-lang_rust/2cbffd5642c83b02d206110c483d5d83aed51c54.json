{"sha": "2cbffd5642c83b02d206110c483d5d83aed51c54", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJjYmZmZDU2NDJjODNiMDJkMjA2MTEwYzQ4M2Q1ZDgzYWVkNTFjNTQ=", "commit": {"author": {"name": "Ali Clark", "email": "ali@clark.gb.net", "date": "2016-01-21T02:43:22Z"}, "committer": {"name": "Ali Clark", "email": "ali@clark.gb.net", "date": "2016-01-21T02:50:48Z"}, "message": "actively disable stack execution on linux and bsd", "tree": {"sha": "62f78c563e0f9c714947e96d38f5f874f5c20a31", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/62f78c563e0f9c714947e96d38f5f874f5c20a31"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2cbffd5642c83b02d206110c483d5d83aed51c54", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2cbffd5642c83b02d206110c483d5d83aed51c54", "html_url": "https://github.com/rust-lang/rust/commit/2cbffd5642c83b02d206110c483d5d83aed51c54", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2cbffd5642c83b02d206110c483d5d83aed51c54/comments", "author": null, "committer": null, "parents": [{"sha": "7dce32e65d53ff9cfd8dba89121efa4c977030de", "url": "https://api.github.com/repos/rust-lang/rust/commits/7dce32e65d53ff9cfd8dba89121efa4c977030de", "html_url": "https://github.com/rust-lang/rust/commit/7dce32e65d53ff9cfd8dba89121efa4c977030de"}], "stats": {"total": 25, "additions": 25, "deletions": 0}, "files": [{"sha": "ead16f957079c1996b17bdd9171e202c68fe43a4", "filename": "src/librustc_back/target/dragonfly_base.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/2cbffd5642c83b02d206110c483d5d83aed51c54/src%2Flibrustc_back%2Ftarget%2Fdragonfly_base.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2cbffd5642c83b02d206110c483d5d83aed51c54/src%2Flibrustc_back%2Ftarget%2Fdragonfly_base.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_back%2Ftarget%2Fdragonfly_base.rs?ref=2cbffd5642c83b02d206110c483d5d83aed51c54", "patch": "@@ -24,6 +24,9 @@ pub fn opts() -> TargetOptions {\n             // libraries which follow this flag.  Thus, use it before\n             // specifying libraries to link to.\n             \"-Wl,--as-needed\".to_string(),\n+\n+            // Always enable NX protection when it is available\n+            \"-Wl,-z,noexecstack\".to_string(),\n         ),\n         position_independent_executables: true,\n         archive_format: \"gnu\".to_string(),"}, {"sha": "9b5d55fa0d5884fe53c118a01870e9a3a68e4494", "filename": "src/librustc_back/target/freebsd_base.rs", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/2cbffd5642c83b02d206110c483d5d83aed51c54/src%2Flibrustc_back%2Ftarget%2Ffreebsd_base.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2cbffd5642c83b02d206110c483d5d83aed51c54/src%2Flibrustc_back%2Ftarget%2Ffreebsd_base.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_back%2Ftarget%2Ffreebsd_base.rs?ref=2cbffd5642c83b02d206110c483d5d83aed51c54", "patch": "@@ -17,6 +17,19 @@ pub fn opts() -> TargetOptions {\n         dynamic_linking: true,\n         executables: true,\n         has_rpath: true,\n+        pre_link_args: vec![\n+            // We want to be able to strip as much executable code as possible\n+            // from the linker command line, and this flag indicates to the\n+            // linker that it can avoid linking in dynamic libraries that don't\n+            // actually satisfy any symbols up to that point (as with many other\n+            // resolutions the linker does). This option only applies to all\n+            // following libraries so we're sure to pass it as one of the first\n+            // arguments.\n+            \"-Wl,--as-needed\".to_string(),\n+\n+            // Always enable NX protection when it is available\n+            \"-Wl,-z,noexecstack\".to_string(),\n+        ],\n         archive_format: \"gnu\".to_string(),\n         exe_allocation_crate: super::maybe_jemalloc(),\n "}, {"sha": "20aae113f7bb34f4026e78672804b99b82e9cb0e", "filename": "src/librustc_back/target/linux_base.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/2cbffd5642c83b02d206110c483d5d83aed51c54/src%2Flibrustc_back%2Ftarget%2Flinux_base.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2cbffd5642c83b02d206110c483d5d83aed51c54/src%2Flibrustc_back%2Ftarget%2Flinux_base.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_back%2Ftarget%2Flinux_base.rs?ref=2cbffd5642c83b02d206110c483d5d83aed51c54", "patch": "@@ -26,6 +26,9 @@ pub fn opts() -> TargetOptions {\n             // following libraries so we're sure to pass it as one of the first\n             // arguments.\n             \"-Wl,--as-needed\".to_string(),\n+\n+            // Always enable NX protection when it is available\n+            \"-Wl,-z,noexecstack\".to_string(),\n         ],\n         position_independent_executables: true,\n         archive_format: \"gnu\".to_string(),"}, {"sha": "ead8a7259f03b0a1f8906f877f96cf9f16eaf8da", "filename": "src/librustc_back/target/netbsd_base.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/2cbffd5642c83b02d206110c483d5d83aed51c54/src%2Flibrustc_back%2Ftarget%2Fnetbsd_base.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2cbffd5642c83b02d206110c483d5d83aed51c54/src%2Flibrustc_back%2Ftarget%2Fnetbsd_base.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_back%2Ftarget%2Fnetbsd_base.rs?ref=2cbffd5642c83b02d206110c483d5d83aed51c54", "patch": "@@ -24,6 +24,9 @@ pub fn opts() -> TargetOptions {\n             // libraries which follow this flag.  Thus, use it before\n             // specifying libraries to link to.\n             \"-Wl,--as-needed\".to_string(),\n+\n+            // Always enable NX protection when it is available\n+            \"-Wl,-z,noexecstack\".to_string(),\n         ),\n         position_independent_executables: true,\n         archive_format: \"gnu\".to_string(),"}, {"sha": "e0c2d062949d877a25883e334fc54011e368425b", "filename": "src/librustc_back/target/openbsd_base.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/2cbffd5642c83b02d206110c483d5d83aed51c54/src%2Flibrustc_back%2Ftarget%2Fopenbsd_base.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2cbffd5642c83b02d206110c483d5d83aed51c54/src%2Flibrustc_back%2Ftarget%2Fopenbsd_base.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_back%2Ftarget%2Fopenbsd_base.rs?ref=2cbffd5642c83b02d206110c483d5d83aed51c54", "patch": "@@ -24,6 +24,9 @@ pub fn opts() -> TargetOptions {\n             // libraries which follow this flag.  Thus, use it before\n             // specifying libraries to link to.\n             \"-Wl,--as-needed\".to_string(),\n+\n+            // Always enable NX protection when it is available\n+            \"-Wl,-z,noexecstack\".to_string(),\n         ),\n         position_independent_executables: true,\n         archive_format: \"gnu\".to_string(),"}]}