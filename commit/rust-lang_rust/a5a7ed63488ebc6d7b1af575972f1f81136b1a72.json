{"sha": "a5a7ed63488ebc6d7b1af575972f1f81136b1a72", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE1YTdlZDYzNDg4ZWJjNmQ3YjFhZjU3NTk3MmYxZjgxMTM2YjFhNzI=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-09-16T21:21:50Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-09-16T21:21:50Z"}, "message": "Rollup merge of #64509 - varkor:convert-identity-doc-fixes, r=Centril\n\nMake some adjustments to the documentation for `std::convert::identity`\n\nFixes some extra blank lines and makes some minor tweaks to the wording.", "tree": {"sha": "1fed6ffef88e986211d68b3e4c6f16d3d629cbd4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1fed6ffef88e986211d68b3e4c6f16d3d629cbd4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a5a7ed63488ebc6d7b1af575972f1f81136b1a72", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJdf/zuCRBK7hj4Ov3rIwAAdHIIACdR7y6OXv/fjZHmDQiTrKOY\nzFWNaDgm3Roi/PzLDHfV8w9hQouExCUmXsHmGNftZiVfUZpqgjmMrF2ngzZB4Bdm\n/SwlaxaPMc5C53L01BGCuvMd7+GcPNY26r6GBeGFDZiNhTvhaj2VwMt730ZbdYfd\nGxNH3C1mdgkAZrR7rbM3AELftnbCC8YWvAmFUKsxg9Dyk290iFRDpFxvSVAEkFRu\nMxdUfdpuTirc5yJLt+hgRF2Tl5nLzmZg45fLDKLH7c47ANuLd8kWxGp68WokgasM\nW04zu3wxexFQ8JTupfcIXarmef+xwCaMpXFVXqXumxDU9LJEcJTQmBtM+1nuwvo=\n=/jrR\n-----END PGP SIGNATURE-----\n", "payload": "tree 1fed6ffef88e986211d68b3e4c6f16d3d629cbd4\nparent a31d71f56b31fa2273acaae148280ad6dc4160c9\nparent 18b24b718d2f3d5788a1a0406ae5d0b652f176fd\nauthor Mazdak Farrokhzad <twingoow@gmail.com> 1568668910 +0200\ncommitter GitHub <noreply@github.com> 1568668910 +0200\n\nRollup merge of #64509 - varkor:convert-identity-doc-fixes, r=Centril\n\nMake some adjustments to the documentation for `std::convert::identity`\n\nFixes some extra blank lines and makes some minor tweaks to the wording.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a5a7ed63488ebc6d7b1af575972f1f81136b1a72", "html_url": "https://github.com/rust-lang/rust/commit/a5a7ed63488ebc6d7b1af575972f1f81136b1a72", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a5a7ed63488ebc6d7b1af575972f1f81136b1a72/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a31d71f56b31fa2273acaae148280ad6dc4160c9", "url": "https://api.github.com/repos/rust-lang/rust/commits/a31d71f56b31fa2273acaae148280ad6dc4160c9", "html_url": "https://github.com/rust-lang/rust/commit/a31d71f56b31fa2273acaae148280ad6dc4160c9"}, {"sha": "18b24b718d2f3d5788a1a0406ae5d0b652f176fd", "url": "https://api.github.com/repos/rust-lang/rust/commits/18b24b718d2f3d5788a1a0406ae5d0b652f176fd", "html_url": "https://github.com/rust-lang/rust/commit/18b24b718d2f3d5788a1a0406ae5d0b652f176fd"}], "stats": {"total": 17, "additions": 9, "deletions": 8}, "files": [{"sha": "06f2b7bab12ebc548c8c051ce8ee3d1a258b3eb2", "filename": "src/libcore/convert.rs", "status": "modified", "additions": 9, "deletions": 8, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/a5a7ed63488ebc6d7b1af575972f1f81136b1a72/src%2Flibcore%2Fconvert.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a5a7ed63488ebc6d7b1af575972f1f81136b1a72/src%2Flibcore%2Fconvert.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fconvert.rs?ref=a5a7ed63488ebc6d7b1af575972f1f81136b1a72", "patch": "@@ -42,11 +42,11 @@\n \n use crate::fmt;\n \n-/// An identity function.\n+/// The identity function.\n ///\n /// Two things are important to note about this function:\n ///\n-/// - It is not always equivalent to a closure like `|x| x` since the\n+/// - It is not always equivalent to a closure like `|x| x`, since the\n ///   closure may coerce `x` into a different type.\n ///\n /// - It moves the input `x` passed to the function.\n@@ -56,31 +56,32 @@ use crate::fmt;\n ///\n /// # Examples\n ///\n-/// Using `identity` to do nothing among other interesting functions:\n+/// Using `identity` to do nothing in a sequence of other, interesting,\n+/// functions:\n ///\n /// ```rust\n /// use std::convert::identity;\n ///\n /// fn manipulation(x: u32) -> u32 {\n-///     // Let's assume that this function does something interesting.\n+///     // Let's pretend that adding one is an interesting function.\n ///     x + 1\n /// }\n ///\n /// let _arr = &[identity, manipulation];\n /// ```\n ///\n-/// Using `identity` to get a function that changes nothing in a conditional:\n+/// Using `identity` as a \"do nothing\" base case in a conditional:\n ///\n /// ```rust\n /// use std::convert::identity;\n ///\n /// # let condition = true;\n-///\n+/// #\n /// # fn manipulation(x: u32) -> u32 { x + 1 }\n-///\n+/// #\n /// let do_stuff = if condition { manipulation } else { identity };\n ///\n-/// // do more interesting stuff..\n+/// // Do more interesting stuff...\n ///\n /// let _results = do_stuff(42);\n /// ```"}]}