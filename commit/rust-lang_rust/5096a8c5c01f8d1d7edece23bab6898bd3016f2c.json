{"sha": "5096a8c5c01f8d1d7edece23bab6898bd3016f2c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjUwOTZhOGM1YzAxZjhkMWQ3ZWRlY2UyM2JhYjY4OThiZDMwMTZmMmM=", "commit": {"author": {"name": "Andrew Cann", "email": "shum@canndrew.org", "date": "2016-08-01T12:15:54Z"}, "committer": {"name": "Andrew Cann", "email": "shum@canndrew.org", "date": "2016-08-13T13:37:09Z"}, "message": "Control usage of `!` through a feature gate.\n\nAdds the `bang_type` feature gate. `!` in a non-return-type position now\nrelies on that feature.", "tree": {"sha": "9136eb8a711502600646930721460a69bc982e4a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9136eb8a711502600646930721460a69bc982e4a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5096a8c5c01f8d1d7edece23bab6898bd3016f2c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5096a8c5c01f8d1d7edece23bab6898bd3016f2c", "html_url": "https://github.com/rust-lang/rust/commit/5096a8c5c01f8d1d7edece23bab6898bd3016f2c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5096a8c5c01f8d1d7edece23bab6898bd3016f2c/comments", "author": {"login": "canndrew", "id": 5555066, "node_id": "MDQ6VXNlcjU1NTUwNjY=", "avatar_url": "https://avatars.githubusercontent.com/u/5555066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/canndrew", "html_url": "https://github.com/canndrew", "followers_url": "https://api.github.com/users/canndrew/followers", "following_url": "https://api.github.com/users/canndrew/following{/other_user}", "gists_url": "https://api.github.com/users/canndrew/gists{/gist_id}", "starred_url": "https://api.github.com/users/canndrew/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/canndrew/subscriptions", "organizations_url": "https://api.github.com/users/canndrew/orgs", "repos_url": "https://api.github.com/users/canndrew/repos", "events_url": "https://api.github.com/users/canndrew/events{/privacy}", "received_events_url": "https://api.github.com/users/canndrew/received_events", "type": "User", "site_admin": false}, "committer": {"login": "canndrew", "id": 5555066, "node_id": "MDQ6VXNlcjU1NTUwNjY=", "avatar_url": "https://avatars.githubusercontent.com/u/5555066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/canndrew", "html_url": "https://github.com/canndrew", "followers_url": "https://api.github.com/users/canndrew/followers", "following_url": "https://api.github.com/users/canndrew/following{/other_user}", "gists_url": "https://api.github.com/users/canndrew/gists{/gist_id}", "starred_url": "https://api.github.com/users/canndrew/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/canndrew/subscriptions", "organizations_url": "https://api.github.com/users/canndrew/orgs", "repos_url": "https://api.github.com/users/canndrew/repos", "events_url": "https://api.github.com/users/canndrew/events{/privacy}", "received_events_url": "https://api.github.com/users/canndrew/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0e1c2aa52e7ec3f162ab4436c2ed0746d1992109", "url": "https://api.github.com/repos/rust-lang/rust/commits/0e1c2aa52e7ec3f162ab4436c2ed0746d1992109", "html_url": "https://github.com/rust-lang/rust/commit/0e1c2aa52e7ec3f162ab4436c2ed0746d1992109"}], "stats": {"total": 29, "additions": 26, "deletions": 3}, "files": [{"sha": "74ef378f23d90f0a69af5a79b6dd682f33eaeaa2", "filename": "src/libcore/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/5096a8c5c01f8d1d7edece23bab6898bd3016f2c/src%2Flibcore%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5096a8c5c01f8d1d7edece23bab6898bd3016f2c/src%2Flibcore%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Flib.rs?ref=5096a8c5c01f8d1d7edece23bab6898bd3016f2c", "patch": "@@ -87,6 +87,7 @@\n #![feature(staged_api)]\n #![feature(unboxed_closures)]\n #![feature(question_mark)]\n+#![cfg_attr(not(stage0), feature(bang_type))]\n \n #[macro_use]\n mod macros;"}, {"sha": "efedc7229e64c951e3536bd2b36cec1a7d207449", "filename": "src/libsyntax/feature_gate.rs", "status": "modified", "additions": 18, "deletions": 1, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/5096a8c5c01f8d1d7edece23bab6898bd3016f2c/src%2Flibsyntax%2Ffeature_gate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5096a8c5c01f8d1d7edece23bab6898bd3016f2c/src%2Flibsyntax%2Ffeature_gate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Ffeature_gate.rs?ref=5096a8c5c01f8d1d7edece23bab6898bd3016f2c", "patch": "@@ -284,7 +284,10 @@ declare_features! (\n \n     // Allows tuple structs and variants in more contexts,\n     // Permits numeric fields in struct expressions and patterns.\n-    (active, relaxed_adts, \"1.12.0\", Some(35626))\n+    (active, relaxed_adts, \"1.12.0\", Some(35626)),\n+\n+    // The `!` type\n+    (active, bang_type, \"1.13.0\", Some(35121))\n );\n \n declare_features! (\n@@ -963,11 +966,25 @@ impl<'a> Visitor for PostExpansionVisitor<'a> {\n                 gate_feature_post!(&self, conservative_impl_trait, ty.span,\n                                    \"`impl Trait` is experimental\");\n             }\n+            ast::TyKind::Empty => {\n+                gate_feature_post!(&self, bang_type, ty.span,\n+                                   \"The `!` type is experimental\");\n+            },\n             _ => {}\n         }\n         visit::walk_ty(self, ty)\n     }\n \n+    fn visit_fn_ret_ty(&mut self, ret_ty: &ast::FunctionRetTy) {\n+        if let ast::FunctionRetTy::Ty(ref output_ty) = *ret_ty {\n+            match output_ty.node {\n+                ast::TyKind::Empty => return,\n+                _ => (),\n+            };\n+            visit::walk_ty(self, output_ty)\n+        }\n+    }\n+\n     fn visit_expr(&mut self, e: &ast::Expr) {\n         match e.node {\n             ast::ExprKind::Box(_) => {"}, {"sha": "228409b82074449a60c51e974be52beb44182317", "filename": "src/libsyntax/visit.rs", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/5096a8c5c01f8d1d7edece23bab6898bd3016f2c/src%2Flibsyntax%2Fvisit.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5096a8c5c01f8d1d7edece23bab6898bd3016f2c/src%2Flibsyntax%2Fvisit.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fvisit.rs?ref=5096a8c5c01f8d1d7edece23bab6898bd3016f2c", "patch": "@@ -4,7 +4,8 @@\n //\n // Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n // http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your,\n+//                 \"The `!` type is experimental\");\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n@@ -128,6 +129,9 @@ pub trait Visitor: Sized {\n     fn visit_vis(&mut self, vis: &Visibility) {\n         walk_vis(self, vis)\n     }\n+    fn visit_fn_ret_ty(&mut self, ret_ty: &FunctionRetTy) {\n+        walk_fn_ret_ty(self, ret_ty)\n+    }\n }\n \n #[macro_export]\n@@ -510,7 +514,7 @@ pub fn walk_fn_decl<V: Visitor>(visitor: &mut V, function_declaration: &FnDecl)\n         visitor.visit_pat(&argument.pat);\n         visitor.visit_ty(&argument.ty)\n     }\n-    walk_fn_ret_ty(visitor, &function_declaration.output)\n+    visitor.visit_fn_ret_ty(&function_declaration.output)\n }\n \n pub fn walk_fn_kind<V: Visitor>(visitor: &mut V, function_kind: FnKind) {"}, {"sha": "6d81099cedaa814360dea0f4edef7defc37c3bb5", "filename": "src/test/run-fail/adjust_empty.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/5096a8c5c01f8d1d7edece23bab6898bd3016f2c/src%2Ftest%2Frun-fail%2Fadjust_empty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5096a8c5c01f8d1d7edece23bab6898bd3016f2c/src%2Ftest%2Frun-fail%2Fadjust_empty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Fadjust_empty.rs?ref=5096a8c5c01f8d1d7edece23bab6898bd3016f2c", "patch": "@@ -8,6 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#![feature(bang_type)]\n \n \n "}]}