{"sha": "7cf63a2a72577a412ed9b345990342880715e9ab", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdjZjYzYTJhNzI1NzdhNDEyZWQ5YjM0NTk5MDM0Mjg4MDcxNWU5YWI=", "commit": {"author": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2016-05-21T09:43:17Z"}, "committer": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2016-05-31T23:43:38Z"}, "message": "more debug dumping in trans", "tree": {"sha": "d1ff941b7fb952dcf84f914b4dd3a81b288d37ee", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d1ff941b7fb952dcf84f914b4dd3a81b288d37ee"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7cf63a2a72577a412ed9b345990342880715e9ab", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7cf63a2a72577a412ed9b345990342880715e9ab", "html_url": "https://github.com/rust-lang/rust/commit/7cf63a2a72577a412ed9b345990342880715e9ab", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7cf63a2a72577a412ed9b345990342880715e9ab/comments", "author": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d3afbd6c4d03cfde1291da53f3830d1dbd44f35e", "url": "https://api.github.com/repos/rust-lang/rust/commits/d3afbd6c4d03cfde1291da53f3830d1dbd44f35e", "html_url": "https://github.com/rust-lang/rust/commit/d3afbd6c4d03cfde1291da53f3830d1dbd44f35e"}], "stats": {"total": 5, "additions": 4, "deletions": 1}, "files": [{"sha": "1b13a662d369cc465c02b135d18daa1d05dfcc67", "filename": "src/librustc_trans/common.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/7cf63a2a72577a412ed9b345990342880715e9ab/src%2Flibrustc_trans%2Fcommon.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7cf63a2a72577a412ed9b345990342880715e9ab/src%2Flibrustc_trans%2Fcommon.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Fcommon.rs?ref=7cf63a2a72577a412ed9b345990342880715e9ab", "patch": "@@ -1061,7 +1061,7 @@ pub fn fulfill_obligation<'a, 'tcx>(scx: &SharedCrateContext<'a, 'tcx>,\n     let trait_ref = tcx.erase_regions(&trait_ref);\n \n     scx.trait_cache().memoize(trait_ref, || {\n-        debug!(\"trans fulfill_obligation: trait_ref={:?} def_id={:?}\",\n+        debug!(\"trans::fulfill_obligation(trait_ref={:?}, def_id={:?})\",\n                trait_ref, trait_ref.def_id());\n \n         // Do the initial selection for the obligation. This yields the\n@@ -1096,11 +1096,14 @@ pub fn fulfill_obligation<'a, 'tcx>(scx: &SharedCrateContext<'a, 'tcx>,\n                 }\n             };\n \n+            debug!(\"fulfill_obligation: selection={:?}\", selection);\n+\n             // Currently, we use a fulfillment context to completely resolve\n             // all nested obligations. This is because they can inform the\n             // inference of the impl's type parameters.\n             let mut fulfill_cx = traits::FulfillmentContext::new();\n             let vtable = selection.map(|predicate| {\n+                debug!(\"fulfill_obligation: register_predicate_obligation {:?}\", predicate);\n                 fulfill_cx.register_predicate_obligation(&infcx, predicate);\n             });\n             let vtable = infcx.drain_fulfillment_cx_or_panic(span, &mut fulfill_cx, &vtable);"}]}