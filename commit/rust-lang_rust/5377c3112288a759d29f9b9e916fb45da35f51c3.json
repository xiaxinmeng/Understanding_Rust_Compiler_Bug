{"sha": "5377c3112288a759d29f9b9e916fb45da35f51c3", "node_id": "C_kwDOAAsO6NoAKDUzNzdjMzExMjI4OGE3NTlkMjlmOWI5ZTkxNmZiNDVkYTM1ZjUxYzM", "commit": {"author": {"name": "Dylan DPC", "email": "99973273+Dylan-DPC@users.noreply.github.com", "date": "2022-09-21T13:31:06Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-09-21T13:31:06Z"}, "message": "Rollup merge of #89891 - ojeda:modular-alloc, r=Mark-Simulacrum\n\n`alloc`: add unstable cfg features `no_rc` and `no_sync`\n\nIn Rust for Linux we are using these to make `alloc` a bit more modular.\n\nSee https://github.com/rust-lang/rust/pull/86048 and https://github.com/rust-lang/rust/pull/84266 for similar requests.\n\nOf course, the particular names are not important.", "tree": {"sha": "22198e9830e269fce5989ed51de2c55129a49113", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/22198e9830e269fce5989ed51de2c55129a49113"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5377c3112288a759d29f9b9e916fb45da35f51c3", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJjKxIaCRBK7hj4Ov3rIwAAL6wIAE1hjgkUjL2FiCJAyQby9GfE\nTSpSEGf77o1ceeXbI1NqKADnLUAVhsyjT1XWT7SIaJBCk5LppD8sTAO5M7MPDguj\nRu204wvCcVZ0ZM4eP/jTqQYytEi7K7sex+RM1Yruulw2qsakbjOrnHEWZvvupIoI\ndcZdk5AHHQcq/aZwNLXRlJKDItvKIjxGfDgD7cGzxAex26rH0RfRYxtflVOkRuj/\nbC8uHCgLnnYeK1A66rdsi+7DLJVS4xbxAhzpNmkTiJkSxooPGT4jsRw+vBnaaf5m\nb7gjiRtHFfE7xTVJtFb3xirdIQeNJ9abstZfxxoINExV7YLSAA0yyeeO+7ph9Go=\n=eo5r\n-----END PGP SIGNATURE-----\n", "payload": "tree 22198e9830e269fce5989ed51de2c55129a49113\nparent cba4a389b3961a2fd72e01bd6cb0b0e065edaf3d\nparent 614c2e404a2eae63c2f392fd90e98960b6ec59bc\nauthor Dylan DPC <99973273+Dylan-DPC@users.noreply.github.com> 1663767066 +0530\ncommitter GitHub <noreply@github.com> 1663767066 +0530\n\nRollup merge of #89891 - ojeda:modular-alloc, r=Mark-Simulacrum\n\n`alloc`: add unstable cfg features `no_rc` and `no_sync`\n\nIn Rust for Linux we are using these to make `alloc` a bit more modular.\n\nSee https://github.com/rust-lang/rust/pull/86048 and https://github.com/rust-lang/rust/pull/84266 for similar requests.\n\nOf course, the particular names are not important.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5377c3112288a759d29f9b9e916fb45da35f51c3", "html_url": "https://github.com/rust-lang/rust/commit/5377c3112288a759d29f9b9e916fb45da35f51c3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5377c3112288a759d29f9b9e916fb45da35f51c3/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cba4a389b3961a2fd72e01bd6cb0b0e065edaf3d", "url": "https://api.github.com/repos/rust-lang/rust/commits/cba4a389b3961a2fd72e01bd6cb0b0e065edaf3d", "html_url": "https://github.com/rust-lang/rust/commit/cba4a389b3961a2fd72e01bd6cb0b0e065edaf3d"}, {"sha": "614c2e404a2eae63c2f392fd90e98960b6ec59bc", "url": "https://api.github.com/repos/rust-lang/rust/commits/614c2e404a2eae63c2f392fd90e98960b6ec59bc", "html_url": "https://github.com/rust-lang/rust/commit/614c2e404a2eae63c2f392fd90e98960b6ec59bc"}], "stats": {"total": 19, "additions": 16, "deletions": 3}, "files": [{"sha": "6b3b1c222229cfe82957f8a082e39874c4b629ff", "filename": "library/alloc/src/lib.rs", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/5377c3112288a759d29f9b9e916fb45da35f51c3/library%2Falloc%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5377c3112288a759d29f9b9e916fb45da35f51c3/library%2Falloc%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Fsrc%2Flib.rs?ref=5377c3112288a759d29f9b9e916fb45da35f51c3", "patch": "@@ -69,6 +69,8 @@\n     any(not(feature = \"miri-test-libstd\"), test, doctest),\n     no_global_oom_handling,\n     not(no_global_oom_handling),\n+    not(no_rc),\n+    not(no_sync),\n     target_has_atomic = \"ptr\"\n ))]\n #![no_std]\n@@ -225,16 +227,17 @@ mod boxed {\n }\n pub mod borrow;\n pub mod collections;\n-#[cfg(not(no_global_oom_handling))]\n+#[cfg(all(not(no_rc), not(no_sync), not(no_global_oom_handling)))]\n pub mod ffi;\n pub mod fmt;\n+#[cfg(not(no_rc))]\n pub mod rc;\n pub mod slice;\n pub mod str;\n pub mod string;\n-#[cfg(target_has_atomic = \"ptr\")]\n+#[cfg(all(not(no_rc), not(no_sync), target_has_atomic = \"ptr\"))]\n pub mod sync;\n-#[cfg(all(not(no_global_oom_handling), target_has_atomic = \"ptr\"))]\n+#[cfg(all(not(no_global_oom_handling), not(no_rc), not(no_sync), target_has_atomic = \"ptr\"))]\n pub mod task;\n #[cfg(test)]\n mod tests;"}, {"sha": "0464dbde065efa02cc7a2a70f11c51fa9b8accdc", "filename": "src/bootstrap/lib.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5377c3112288a759d29f9b9e916fb45da35f51c3/src%2Fbootstrap%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5377c3112288a759d29f9b9e916fb45da35f51c3/src%2Fbootstrap%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Flib.rs?ref=5377c3112288a759d29f9b9e916fb45da35f51c3", "patch": "@@ -201,6 +201,8 @@ const EXTRA_CHECK_CFGS: &[(Option<Mode>, &'static str, Option<&[&'static str]>)]\n     (Some(Mode::Std), \"stdarch_intel_sde\", None),\n     (Some(Mode::Std), \"no_fp_fmt_parse\", None),\n     (Some(Mode::Std), \"no_global_oom_handling\", None),\n+    (Some(Mode::Std), \"no_rc\", None),\n+    (Some(Mode::Std), \"no_sync\", None),\n     (Some(Mode::Std), \"freebsd12\", None),\n     (Some(Mode::Std), \"backtrace_in_libstd\", None),\n     /* Extra values not defined in the built-in targets yet, but used in std */"}, {"sha": "5f7ae70fa0268bb0b5eae6e2ead37c5945293496", "filename": "src/test/run-make-fulldeps/alloc-no-rc/Makefile", "status": "added", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/5377c3112288a759d29f9b9e916fb45da35f51c3/src%2Ftest%2Frun-make-fulldeps%2Falloc-no-rc%2FMakefile", "raw_url": "https://github.com/rust-lang/rust/raw/5377c3112288a759d29f9b9e916fb45da35f51c3/src%2Ftest%2Frun-make-fulldeps%2Falloc-no-rc%2FMakefile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Falloc-no-rc%2FMakefile?ref=5377c3112288a759d29f9b9e916fb45da35f51c3", "patch": "@@ -0,0 +1,4 @@\n+include ../tools.mk\n+\n+all:\n+\t$(RUSTC) --edition=2021 -Dwarnings --crate-type=rlib ../../../../library/alloc/src/lib.rs --cfg no_rc"}, {"sha": "6a258a2ddfd6952edecaf05ffb6f8a6908f17046", "filename": "src/test/run-make-fulldeps/alloc-no-sync/Makefile", "status": "added", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/5377c3112288a759d29f9b9e916fb45da35f51c3/src%2Ftest%2Frun-make-fulldeps%2Falloc-no-sync%2FMakefile", "raw_url": "https://github.com/rust-lang/rust/raw/5377c3112288a759d29f9b9e916fb45da35f51c3/src%2Ftest%2Frun-make-fulldeps%2Falloc-no-sync%2FMakefile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Falloc-no-sync%2FMakefile?ref=5377c3112288a759d29f9b9e916fb45da35f51c3", "patch": "@@ -0,0 +1,4 @@\n+include ../tools.mk\n+\n+all:\n+\t$(RUSTC) --edition=2021 -Dwarnings --crate-type=rlib ../../../../library/alloc/src/lib.rs --cfg no_sync"}]}