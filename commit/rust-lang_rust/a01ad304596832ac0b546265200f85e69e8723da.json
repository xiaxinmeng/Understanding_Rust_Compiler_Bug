{"sha": "a01ad304596832ac0b546265200f85e69e8723da", "node_id": "MDY6Q29tbWl0NzI0NzEyOmEwMWFkMzA0NTk2ODMyYWMwYjU0NjI2NTIwMGY4NWU2OWU4NzIzZGE=", "commit": {"author": {"name": "topecongiro", "email": "seuchida@gmail.com", "date": "2017-06-03T13:44:21Z"}, "committer": {"name": "topecongiro", "email": "seuchida@gmail.com", "date": "2017-06-04T10:35:29Z"}, "message": "Forbid line break between if and pattern", "tree": {"sha": "e1ac2b081f7f71b972393cd9028065a9a17aa6c4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e1ac2b081f7f71b972393cd9028065a9a17aa6c4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a01ad304596832ac0b546265200f85e69e8723da", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a01ad304596832ac0b546265200f85e69e8723da", "html_url": "https://github.com/rust-lang/rust/commit/a01ad304596832ac0b546265200f85e69e8723da", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a01ad304596832ac0b546265200f85e69e8723da/comments", "author": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "committer": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fef347cb9e9c1ee7b52b7076846f1397c00d1022", "url": "https://api.github.com/repos/rust-lang/rust/commits/fef347cb9e9c1ee7b52b7076846f1397c00d1022", "html_url": "https://github.com/rust-lang/rust/commit/fef347cb9e9c1ee7b52b7076846f1397c00d1022"}], "stats": {"total": 6, "additions": 6, "deletions": 0}, "files": [{"sha": "a1bdf9956033640dc32f6f6f062cbad8e3047168", "filename": "src/expr.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/a01ad304596832ac0b546265200f85e69e8723da/src%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a01ad304596832ac0b546265200f85e69e8723da/src%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fexpr.rs?ref=a01ad304596832ac0b546265200f85e69e8723da", "patch": "@@ -928,6 +928,7 @@ impl<'a> Rewrite for ControlFlow<'a> {\n                                           cond,\n                                           self.matcher,\n                                           self.connector,\n+                                          self.keyword,\n                                           cond_shape))\n             }\n             None => String::new(),\n@@ -1529,6 +1530,7 @@ fn rewrite_pat_expr(context: &RewriteContext,\n                     // Connecting piece between pattern and expression,\n                     // *without* trailing space.\n                     connector: &str,\n+                    keyword: &str,\n                     shape: Shape)\n                     -> Option<String> {\n     debug!(\"rewrite_pat_expr {:?} {:?} {:?}\", shape, pat, expr);\n@@ -1567,6 +1569,10 @@ fn rewrite_pat_expr(context: &RewriteContext,\n         }\n     }\n \n+    if pat.is_none() && keyword == \"if\" {\n+        return None;\n+    }\n+\n     let nested_indent = shape.indent.block_only().block_indent(context.config);\n \n     // The expression won't fit on the current line, jump to next."}]}