{"sha": "789e8283dd7305c95b65672bb21712a69b31e677", "node_id": "C_kwDOAAsO6NoAKDc4OWU4MjgzZGQ3MzA1Yzk1YjY1NjcyYmIyMTcxMmE2OWIzMWU2Nzc", "commit": {"author": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2023-02-01T01:12:57Z"}, "committer": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2023-02-01T01:13:04Z"}, "message": "Don't call with_reveal_all_normalized in evaluate when param-env has inference vars in it", "tree": {"sha": "5b06774eab6b8c431f647e1f37be20f0d50ce91c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5b06774eab6b8c431f647e1f37be20f0d50ce91c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/789e8283dd7305c95b65672bb21712a69b31e677", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/789e8283dd7305c95b65672bb21712a69b31e677", "html_url": "https://github.com/rust-lang/rust/commit/789e8283dd7305c95b65672bb21712a69b31e677", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/789e8283dd7305c95b65672bb21712a69b31e677/comments", "author": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bbf33836b9adfe4328aefa108c421e670a3923b7", "url": "https://api.github.com/repos/rust-lang/rust/commits/bbf33836b9adfe4328aefa108c421e670a3923b7", "html_url": "https://github.com/rust-lang/rust/commit/bbf33836b9adfe4328aefa108c421e670a3923b7"}], "stats": {"total": 10, "additions": 4, "deletions": 6}, "files": [{"sha": "b0593f1f887fd54b28ff533b74353a68766196d3", "filename": "compiler/rustc_middle/src/ty/consts/kind.rs", "status": "modified", "additions": 4, "deletions": 6, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/789e8283dd7305c95b65672bb21712a69b31e677/compiler%2Frustc_middle%2Fsrc%2Fty%2Fconsts%2Fkind.rs", "raw_url": "https://github.com/rust-lang/rust/raw/789e8283dd7305c95b65672bb21712a69b31e677/compiler%2Frustc_middle%2Fsrc%2Fty%2Fconsts%2Fkind.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fty%2Fconsts%2Fkind.rs?ref=789e8283dd7305c95b65672bb21712a69b31e677", "patch": "@@ -217,23 +217,21 @@ impl<'tcx> ConstKind<'tcx> {\n             // Note that we erase regions *before* calling `with_reveal_all_normalized`,\n             // so that we don't try to invoke this query with\n             // any region variables.\n-            let param_env_and = tcx\n-                .erase_regions(param_env)\n-                .with_reveal_all_normalized(tcx)\n-                .and(tcx.erase_regions(unevaluated));\n \n             // HACK(eddyb) when the query key would contain inference variables,\n             // attempt using identity substs and `ParamEnv` instead, that will succeed\n             // when the expression doesn't depend on any parameters.\n             // FIXME(eddyb, skinny121) pass `InferCtxt` into here when it's available, so that\n             // we can call `infcx.const_eval_resolve` which handles inference variables.\n-            let param_env_and = if param_env_and.needs_infer() {\n+            let param_env_and = if (param_env, unevaluated).has_non_region_infer() {\n                 tcx.param_env(unevaluated.def.did).and(ty::UnevaluatedConst {\n                     def: unevaluated.def,\n                     substs: InternalSubsts::identity_for_item(tcx, unevaluated.def.did),\n                 })\n             } else {\n-                param_env_and\n+                tcx.erase_regions(param_env)\n+                    .with_reveal_all_normalized(tcx)\n+                    .and(tcx.erase_regions(unevaluated))\n             };\n \n             // FIXME(eddyb) maybe the `const_eval_*` methods should take"}]}