{"sha": "d121b34e9919dda5f1c2baa672459cbabbf05817", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQxMjFiMzRlOTkxOWRkYTVmMWMyYmFhNjcyNDU5Y2JhYmJmMDU4MTc=", "commit": {"author": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2021-03-30T18:31:06Z"}, "committer": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2021-03-30T18:31:06Z"}, "message": "Remove hir::CrateItem.", "tree": {"sha": "2fc7f6b62d3dd5f468adc83dbe36bdfdadda1517", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2fc7f6b62d3dd5f468adc83dbe36bdfdadda1517"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d121b34e9919dda5f1c2baa672459cbabbf05817", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d121b34e9919dda5f1c2baa672459cbabbf05817", "html_url": "https://github.com/rust-lang/rust/commit/d121b34e9919dda5f1c2baa672459cbabbf05817", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d121b34e9919dda5f1c2baa672459cbabbf05817/comments", "author": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a57a8c3058b3cd9d59e0027fc582a60988883c89", "url": "https://api.github.com/repos/rust-lang/rust/commits/a57a8c3058b3cd9d59e0027fc582a60988883c89", "html_url": "https://github.com/rust-lang/rust/commit/a57a8c3058b3cd9d59e0027fc582a60988883c89"}], "stats": {"total": 12, "additions": 6, "deletions": 6}, "files": [{"sha": "21b4983a1af0270020f62aa12abde52f27a710e5", "filename": "clippy_lints/src/missing_doc.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d121b34e9919dda5f1c2baa672459cbabbf05817/clippy_lints%2Fsrc%2Fmissing_doc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d121b34e9919dda5f1c2baa672459cbabbf05817/clippy_lints%2Fsrc%2Fmissing_doc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmissing_doc.rs?ref=d121b34e9919dda5f1c2baa672459cbabbf05817", "patch": "@@ -128,7 +128,7 @@ impl<'tcx> LateLintPass<'tcx> for MissingDoc {\n \n     fn check_crate(&mut self, cx: &LateContext<'tcx>, krate: &'tcx hir::Crate<'_>) {\n         let attrs = cx.tcx.hir().attrs(hir::CRATE_HIR_ID);\n-        self.check_missing_docs_attrs(cx, attrs, krate.item.span, \"the\", \"crate\");\n+        self.check_missing_docs_attrs(cx, attrs, krate.item.inner, \"the\", \"crate\");\n     }\n \n     fn check_item(&mut self, cx: &LateContext<'tcx>, it: &'tcx hir::Item<'_>) {"}, {"sha": "6b235875c203157cc40b6c3ab96bdda15417d5d0", "filename": "clippy_utils/src/lib.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/d121b34e9919dda5f1c2baa672459cbabbf05817/clippy_utils%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d121b34e9919dda5f1c2baa672459cbabbf05817/clippy_utils%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_utils%2Fsrc%2Flib.rs?ref=d121b34e9919dda5f1c2baa672459cbabbf05817", "patch": "@@ -61,10 +61,10 @@ use rustc_hir::def::{CtorKind, CtorOf, DefKind, Res};\n use rustc_hir::def_id::{DefId, LOCAL_CRATE};\n use rustc_hir::intravisit::{self, NestedVisitorMap, Visitor};\n use rustc_hir::{\n-    def, Arm, BindingAnnotation, Block, Body, Constness, CrateItem, Expr, ExprKind, FieldDef, FnDecl, ForeignItem,\n-    GenericArgs, GenericParam, HirId, Impl, ImplItem, ImplItemKind, Item, ItemKind, LangItem, Lifetime, Local,\n-    MacroDef, MatchSource, Node, Param, Pat, PatKind, Path, PathSegment, QPath, Stmt, TraitItem, TraitItemKind,\n-    TraitRef, TyKind, Variant, Visibility,\n+    def, Arm, BindingAnnotation, Block, Body, Constness, Expr, ExprKind, FieldDef, FnDecl, ForeignItem, GenericArgs,\n+    GenericParam, HirId, Impl, ImplItem, ImplItemKind, Item, ItemKind, LangItem, Lifetime, Local, MacroDef,\n+    MatchSource, Mod, Node, Param, Pat, PatKind, Path, PathSegment, QPath, Stmt, TraitItem, TraitItemKind, TraitRef,\n+    TyKind, Variant, Visibility,\n };\n use rustc_lint::{LateContext, Level, Lint, LintContext};\n use rustc_middle::hir::exports::Export;\n@@ -743,7 +743,7 @@ pub fn get_node_span(node: Node<'_>) -> Option<Span> {\n         | Node::Lifetime(Lifetime { span, .. })\n         | Node::GenericParam(GenericParam { span, .. })\n         | Node::Visibility(Visibility { span, .. })\n-        | Node::Crate(CrateItem { span, .. }) => Some(*span),\n+        | Node::Crate(Mod { inner: span, .. }) => Some(*span),\n         Node::Ctor(_) | Node::AnonConst(_) => None,\n     }\n }"}]}