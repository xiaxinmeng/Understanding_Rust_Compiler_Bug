{"sha": "2b1e35ec129b53bc440b59ede8bfaccb88a3cbf4", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJiMWUzNWVjMTI5YjUzYmM0NDBiNTllZGU4YmZhY2NiODhhM2NiZjQ=", "commit": {"author": {"name": "Oliver Middleton", "email": "olliemail27@gmail.com", "date": "2016-04-22T10:48:46Z"}, "committer": {"name": "Oliver Middleton", "email": "olliemail27@gmail.com", "date": "2016-04-22T10:51:25Z"}, "message": "rustdoc: Cleanup ABI rendering\n\nUse a common method for rendering `extern \"<abi>\"`.\n\nThis now consistently shows `extern \"C\" fn` rather than just `extern fn`.", "tree": {"sha": "53affdf3d5596d72cb9a57b4b4b4a591810cbba2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/53affdf3d5596d72cb9a57b4b4b4a591810cbba2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2b1e35ec129b53bc440b59ede8bfaccb88a3cbf4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2b1e35ec129b53bc440b59ede8bfaccb88a3cbf4", "html_url": "https://github.com/rust-lang/rust/commit/2b1e35ec129b53bc440b59ede8bfaccb88a3cbf4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2b1e35ec129b53bc440b59ede8bfaccb88a3cbf4/comments", "author": {"login": "ollie27", "id": 7189418, "node_id": "MDQ6VXNlcjcxODk0MTg=", "avatar_url": "https://avatars.githubusercontent.com/u/7189418?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ollie27", "html_url": "https://github.com/ollie27", "followers_url": "https://api.github.com/users/ollie27/followers", "following_url": "https://api.github.com/users/ollie27/following{/other_user}", "gists_url": "https://api.github.com/users/ollie27/gists{/gist_id}", "starred_url": "https://api.github.com/users/ollie27/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ollie27/subscriptions", "organizations_url": "https://api.github.com/users/ollie27/orgs", "repos_url": "https://api.github.com/users/ollie27/repos", "events_url": "https://api.github.com/users/ollie27/events{/privacy}", "received_events_url": "https://api.github.com/users/ollie27/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ollie27", "id": 7189418, "node_id": "MDQ6VXNlcjcxODk0MTg=", "avatar_url": "https://avatars.githubusercontent.com/u/7189418?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ollie27", "html_url": "https://github.com/ollie27", "followers_url": "https://api.github.com/users/ollie27/followers", "following_url": "https://api.github.com/users/ollie27/following{/other_user}", "gists_url": "https://api.github.com/users/ollie27/gists{/gist_id}", "starred_url": "https://api.github.com/users/ollie27/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ollie27/subscriptions", "organizations_url": "https://api.github.com/users/ollie27/orgs", "repos_url": "https://api.github.com/users/ollie27/repos", "events_url": "https://api.github.com/users/ollie27/events{/privacy}", "received_events_url": "https://api.github.com/users/ollie27/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "887e9471783ff3f5edc920a85b6110486dc063c0", "url": "https://api.github.com/repos/rust-lang/rust/commits/887e9471783ff3f5edc920a85b6110486dc063c0", "html_url": "https://github.com/rust-lang/rust/commit/887e9471783ff3f5edc920a85b6110486dc063c0"}], "stats": {"total": 69, "additions": 48, "deletions": 21}, "files": [{"sha": "c030f02f12334dc4b1d9fb584d2eb72795bcf34c", "filename": "src/librustdoc/clean/mod.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/2b1e35ec129b53bc440b59ede8bfaccb88a3cbf4/src%2Flibrustdoc%2Fclean%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2b1e35ec129b53bc440b59ede8bfaccb88a3cbf4/src%2Flibrustdoc%2Fclean%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Fmod.rs?ref=2b1e35ec129b53bc440b59ede8bfaccb88a3cbf4", "patch": "@@ -1721,7 +1721,7 @@ impl<'tcx> Clean<Type> for ty::Ty<'tcx> {\n                     where_predicates: Vec::new()\n                 },\n                 decl: (cx.map.local_def_id(0), &fty.sig).clean(cx),\n-                abi: fty.abi.to_string(),\n+                abi: fty.abi,\n             }),\n             ty::TyStruct(def, substs) |\n             ty::TyEnum(def, substs) => {\n@@ -2143,7 +2143,7 @@ pub struct BareFunctionDecl {\n     pub unsafety: hir::Unsafety,\n     pub generics: Generics,\n     pub decl: FnDecl,\n-    pub abi: String,\n+    pub abi: Abi,\n }\n \n impl Clean<BareFunctionDecl> for hir::BareFnTy {\n@@ -2156,7 +2156,7 @@ impl Clean<BareFunctionDecl> for hir::BareFnTy {\n                 where_predicates: Vec::new()\n             },\n             decl: self.decl.clean(cx),\n-            abi: self.abi.to_string(),\n+            abi: self.abi,\n         }\n     }\n }"}, {"sha": "72414ad4c5e9c5dc444580b52ff6ffaf4cf690b3", "filename": "src/librustdoc/html/format.rs", "status": "modified", "additions": 2, "deletions": 7, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/2b1e35ec129b53bc440b59ede8bfaccb88a3cbf4/src%2Flibrustdoc%2Fhtml%2Fformat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2b1e35ec129b53bc440b59ede8bfaccb88a3cbf4/src%2Flibrustdoc%2Fhtml%2Fformat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fformat.rs?ref=2b1e35ec129b53bc440b59ede8bfaccb88a3cbf4", "patch": "@@ -451,11 +451,7 @@ impl fmt::Display for clean::Type {\n             clean::BareFunction(ref decl) => {\n                 write!(f, \"{}{}fn{}{}\",\n                        UnsafetySpace(decl.unsafety),\n-                       match &*decl.abi {\n-                           \"\" => \" extern \".to_string(),\n-                           \"\\\"Rust\\\"\" => \"\".to_string(),\n-                           s => format!(\" extern {} \", s)\n-                       },\n+                       AbiSpace(decl.abi),\n                        decl.generics,\n                        decl.decl)\n             }\n@@ -770,8 +766,7 @@ impl fmt::Display for AbiSpace {\n     fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {\n         match self.0 {\n             Abi::Rust => Ok(()),\n-            Abi::C => write!(f, \"extern \"),\n-            abi => write!(f, \"extern {} \", abi),\n+            abi => write!(f, \"extern &quot;{}&quot; \", abi.name()),\n         }\n     }\n }"}, {"sha": "f41c81f20edf907cc599c1d4efdefbd3744d5bd6", "filename": "src/librustdoc/html/render.rs", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/2b1e35ec129b53bc440b59ede8bfaccb88a3cbf4/src%2Flibrustdoc%2Fhtml%2Frender.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2b1e35ec129b53bc440b59ede8bfaccb88a3cbf4/src%2Flibrustdoc%2Fhtml%2Frender.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender.rs?ref=2b1e35ec129b53bc440b59ede8bfaccb88a3cbf4", "patch": "@@ -2129,8 +2129,6 @@ fn render_assoc_item(w: &mut fmt::Formatter,\n               d: &clean::FnDecl,\n               link: AssocItemLink)\n               -> fmt::Result {\n-        use syntax::abi::Abi;\n-\n         let name = meth.name.as_ref().unwrap();\n         let anchor = format!(\"#{}.{}\", shortty(meth), name);\n         let href = match link {\n@@ -2157,10 +2155,7 @@ fn render_assoc_item(w: &mut fmt::Formatter,\n                    {generics}{decl}{where_clause}\",\n                ConstnessSpace(vis_constness),\n                UnsafetySpace(unsafety),\n-               match abi {\n-                   Abi::Rust => String::new(),\n-                   a => format!(\"extern {} \", a.to_string())\n-               },\n+               AbiSpace(abi),\n                href = href,\n                name = name,\n                generics = *g,"}, {"sha": "5c64b4118c3ab1a748e2175b3f74c82baa123efc", "filename": "src/test/rustdoc/extern-impl.rs", "status": "added", "additions": 37, "deletions": 0, "changes": 37, "blob_url": "https://github.com/rust-lang/rust/blob/2b1e35ec129b53bc440b59ede8bfaccb88a3cbf4/src%2Ftest%2Frustdoc%2Fextern-impl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2b1e35ec129b53bc440b59ede8bfaccb88a3cbf4/src%2Ftest%2Frustdoc%2Fextern-impl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fextern-impl.rs?ref=2b1e35ec129b53bc440b59ede8bfaccb88a3cbf4", "patch": "@@ -0,0 +1,37 @@\n+// Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![crate_name = \"foo\"]\n+\n+// @has foo/struct.Foo.html\n+pub struct Foo;\n+\n+impl Foo {\n+    // @has - '//code' 'fn rust0()'\n+    pub fn rust0() {}\n+    // @has - '//code' 'fn rust1()'\n+    pub extern \"Rust\" fn rust1() {}\n+    // @has - '//code' 'extern \"C\" fn c0()'\n+    pub extern fn c0() {}\n+    // @has - '//code' 'extern \"C\" fn c1()'\n+    pub extern \"C\" fn c1() {}\n+    // @has - '//code' 'extern \"system\" fn system0()'\n+    pub extern \"system\" fn system0() {}\n+}\n+\n+// @has foo/trait.Bar.html\n+pub trait Bar {}\n+\n+// @has - '//code' 'impl Bar for fn()'\n+impl Bar for fn() {}\n+// @has - '//code' 'impl Bar for extern \"C\" fn()'\n+impl Bar for extern fn() {}\n+// @has - '//code' 'impl Bar for extern \"system\" fn()'\n+impl Bar for extern \"system\" fn() {}"}, {"sha": "8511d461703de58dfc9cf656656f0ec2b1839e53", "filename": "src/test/rustdoc/ffi.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/2b1e35ec129b53bc440b59ede8bfaccb88a3cbf4/src%2Ftest%2Frustdoc%2Fffi.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2b1e35ec129b53bc440b59ede8bfaccb88a3cbf4/src%2Ftest%2Frustdoc%2Fffi.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fffi.rs?ref=2b1e35ec129b53bc440b59ede8bfaccb88a3cbf4", "patch": "@@ -13,10 +13,10 @@\n \n extern crate rustdoc_ffi as lib;\n \n-// @has ffi/fn.foreigner.html //pre 'pub unsafe extern fn foreigner(cold_as_ice: u32)'\n+// @has ffi/fn.foreigner.html //pre 'pub unsafe extern \"C\" fn foreigner(cold_as_ice: u32)'\n pub use lib::foreigner;\n \n extern \"C\" {\n-    // @has ffi/fn.another.html //pre 'pub unsafe extern fn another(cold_as_ice: u32)'\n+    // @has ffi/fn.another.html //pre 'pub unsafe extern \"C\" fn another(cold_as_ice: u32)'\n     pub fn another(cold_as_ice: u32);\n }"}, {"sha": "75df53589454f6d3927e8d8fc382d9f3b4f7fc9d", "filename": "src/test/rustdoc/issue-22038.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/2b1e35ec129b53bc440b59ede8bfaccb88a3cbf4/src%2Ftest%2Frustdoc%2Fissue-22038.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2b1e35ec129b53bc440b59ede8bfaccb88a3cbf4/src%2Ftest%2Frustdoc%2Fissue-22038.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fissue-22038.rs?ref=2b1e35ec129b53bc440b59ede8bfaccb88a3cbf4", "patch": "@@ -10,7 +10,7 @@\n \n extern {\n     // @has issue_22038/fn.foo1.html \\\n-    //      '//*[@class=\"rust fn\"]' 'pub unsafe extern fn foo1()'\n+    //      '//*[@class=\"rust fn\"]' 'pub unsafe extern \"C\" fn foo1()'\n     pub fn foo1();\n }\n \n@@ -21,7 +21,7 @@ extern \"system\" {\n }\n \n // @has issue_22038/fn.bar.html \\\n-//      '//*[@class=\"rust fn\"]' 'pub extern fn bar()'\n+//      '//*[@class=\"rust fn\"]' 'pub extern \"C\" fn bar()'\n pub extern fn bar() {}\n \n // @has issue_22038/fn.baz.html \\"}, {"sha": "6ba776ba4679f845c2dd9f3f880e586f7d056b34", "filename": "src/test/rustdoc/variadic.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2b1e35ec129b53bc440b59ede8bfaccb88a3cbf4/src%2Ftest%2Frustdoc%2Fvariadic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2b1e35ec129b53bc440b59ede8bfaccb88a3cbf4/src%2Ftest%2Frustdoc%2Fvariadic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fvariadic.rs?ref=2b1e35ec129b53bc440b59ede8bfaccb88a3cbf4", "patch": "@@ -9,6 +9,6 @@\n // except according to those terms.\n \n extern \"C\" {\n-    // @has variadic/fn.foo.html //pre 'pub unsafe extern fn foo(x: i32, ...)'\n+    // @has variadic/fn.foo.html //pre 'pub unsafe extern \"C\" fn foo(x: i32, ...)'\n     pub fn foo(x: i32, ...);\n }"}]}