{"sha": "9d554212de0398ac044e6d815da3bfb184831e77", "node_id": "MDY6Q29tbWl0NzI0NzEyOjlkNTU0MjEyZGUwMzk4YWMwNDRlNmQ4MTVkYTNiZmIxODQ4MzFlNzc=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2014-08-13T05:56:20Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2014-08-13T05:56:20Z"}, "message": "auto merge of #16421 : ipetkov/rust/cmd-fd-fix-retry, r=alexcrichton\n\nRetry pull requesting of https://github.com/rust-lang/rust/pull/16407 after accidentally messing up rebasing of branches and making bors think the PR was merged", "tree": {"sha": "817cbc7ed38cda683ae4af90140fff44d5db4b73", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/817cbc7ed38cda683ae4af90140fff44d5db4b73"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9d554212de0398ac044e6d815da3bfb184831e77", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9d554212de0398ac044e6d815da3bfb184831e77", "html_url": "https://github.com/rust-lang/rust/commit/9d554212de0398ac044e6d815da3bfb184831e77", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9d554212de0398ac044e6d815da3bfb184831e77/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6291781592ff079fc1e84f4b8be5684d2a52b8bd", "url": "https://api.github.com/repos/rust-lang/rust/commits/6291781592ff079fc1e84f4b8be5684d2a52b8bd", "html_url": "https://github.com/rust-lang/rust/commit/6291781592ff079fc1e84f4b8be5684d2a52b8bd"}, {"sha": "3fe0ba9afc7504ec01a778d8d72bd0b72fd013e1", "url": "https://api.github.com/repos/rust-lang/rust/commits/3fe0ba9afc7504ec01a778d8d72bd0b72fd013e1", "html_url": "https://github.com/rust-lang/rust/commit/3fe0ba9afc7504ec01a778d8d72bd0b72fd013e1"}], "stats": {"total": 27, "additions": 25, "deletions": 2}, "files": [{"sha": "4b832a4a97efa00946188d1a64a640df39c6bab6", "filename": "src/libnative/io/process.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9d554212de0398ac044e6d815da3bfb184831e77/src%2Flibnative%2Fio%2Fprocess.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9d554212de0398ac044e6d815da3bfb184831e77/src%2Flibnative%2Fio%2Fprocess.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibnative%2Fio%2Fprocess.rs?ref=9d554212de0398ac044e6d815da3bfb184831e77", "patch": "@@ -80,7 +80,7 @@ impl Process {\n                 rtio::Ignored => { ret.push(None); Ok(None) }\n                 rtio::InheritFd(fd) => {\n                     ret.push(None);\n-                    Ok(Some(file::FileDesc::new(fd, true)))\n+                    Ok(Some(file::FileDesc::new(fd, false)))\n                 }\n                 rtio::CreatePipe(readable, _writable) => {\n                     let (reader, writer) = try!(pipe());"}, {"sha": "c82b4831341ef05f785ba83fed563383a2a35a88", "filename": "src/libstd/io/process.rs", "status": "modified", "additions": 24, "deletions": 1, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/9d554212de0398ac044e6d815da3bfb184831e77/src%2Flibstd%2Fio%2Fprocess.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9d554212de0398ac044e6d815da3bfb184831e77/src%2Flibstd%2Fio%2Fprocess.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fio%2Fprocess.rs?ref=9d554212de0398ac044e6d815da3bfb184831e77", "patch": "@@ -378,7 +378,8 @@ pub enum StdioContainer {\n     Ignored,\n \n     /// The specified file descriptor is inherited for the stream which it is\n-    /// specified for.\n+    /// specified for. Ownership of the file descriptor is *not* taken, so the\n+    /// caller must clean it up.\n     InheritFd(libc::c_int),\n \n     /// Creates a pipe for the specified file descriptor which will be created\n@@ -605,6 +606,7 @@ impl Drop for Process {\n \n #[cfg(test)]\n mod tests {\n+    extern crate native;\n     use io::process::{Command, Process};\n     use prelude::*;\n \n@@ -1017,4 +1019,25 @@ mod tests {\n         assert!(Process::kill(id, 0).is_ok());\n         assert!(Process::kill(id, PleaseExitSignal).is_ok());\n     })\n+\n+    iotest!(fn dont_close_fd_on_command_spawn() {\n+        use std::rt::rtio::{Truncate, Write};\n+        use native::io::file;\n+\n+        let path = if cfg!(windows) {\n+            Path::new(\"NUL\")\n+        } else {\n+            Path::new(\"/dev/null\")\n+        };\n+\n+        let mut fdes = match file::open(&path.to_c_str(), Truncate, Write) {\n+            Ok(f) => f,\n+            Err(_) => fail!(\"failed to open file descriptor\"),\n+        };\n+\n+        let mut cmd = pwd_cmd();\n+        let _ = cmd.stdout(InheritFd(fdes.fd()));\n+        assert!(cmd.status().unwrap().success());\n+        assert!(fdes.inner_write(\"extra write\\n\".as_bytes()).is_ok());\n+    })\n }"}]}