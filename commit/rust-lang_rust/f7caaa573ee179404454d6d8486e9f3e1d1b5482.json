{"sha": "f7caaa573ee179404454d6d8486e9f3e1d1b5482", "node_id": "C_kwDOAAsO6NoAKGY3Y2FhYTU3M2VlMTc5NDA0NDU0ZDZkODQ4NmU5ZjNlMWQxYjU0ODI", "commit": {"author": {"name": "Dylan DPC", "email": "99973273+Dylan-DPC@users.noreply.github.com", "date": "2023-02-13T05:42:50Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2023-02-13T05:42:50Z"}, "message": "Rollup merge of #107962 - scottmcm:why-not-exact, r=Mark-Simulacrum\n\nAdd a doc note about why `Chain` is not `ExactSizeIterator`\n\nInspired by <https://rust-lang.zulipchat.com/#narrow/stream/122651-general/topic/Why.20isn't.20Chain.3CA.2C.20B.3E.20an.20ExactSizeIterator.3F/near/327395874>.", "tree": {"sha": "faf10b1f06fe827fb8bffa7f43a5b547be7cb05e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/faf10b1f06fe827fb8bffa7f43a5b547be7cb05e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f7caaa573ee179404454d6d8486e9f3e1d1b5482", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJj6c3aCRBK7hj4Ov3rIwAAFdoIACntbv7mz5uBcv3mYM/JtYgR\nDxg3/HUHyGJsD6+27t2GlY+15tHn4EXEI1YVVnhK2E1mix7qJVxs+JkR0GiWVTaT\n+kh3XSFqkp043bOmr0d/FKHNWoGI9t4wYRl7rqQtQ9F2ER4LW2i/9z7DxukvIIms\numPkrMLUmv0wVhDfcX59yFA9QWSpr5zUnaOiASEOmlk0Q9QPJ19psXnVT6TDYypM\nAP9eXnkPP/Szp2Fhhm0A71yvbxM+Srmi15209Kt8APcOFh//gXLbdjKdk9FAFIcr\nECgmEO0yMAEeMs/HThgCaLodJjBbAvWbqQmWwSygFKw0MYizVV+ifIRNy7WW5jw=\n=0nXV\n-----END PGP SIGNATURE-----\n", "payload": "tree faf10b1f06fe827fb8bffa7f43a5b547be7cb05e\nparent 2ec6aebb417a067b6ec4c1dd2b4e62ce0be0698e\nparent 79d2430e9961c9b38aa8366f028fbcbcf98e74a5\nauthor Dylan DPC <99973273+Dylan-DPC@users.noreply.github.com> 1676266970 +0530\ncommitter GitHub <noreply@github.com> 1676266970 +0530\n\nRollup merge of #107962 - scottmcm:why-not-exact, r=Mark-Simulacrum\n\nAdd a doc note about why `Chain` is not `ExactSizeIterator`\n\nInspired by <https://rust-lang.zulipchat.com/#narrow/stream/122651-general/topic/Why.20isn't.20Chain.3CA.2C.20B.3E.20an.20ExactSizeIterator.3F/near/327395874>.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f7caaa573ee179404454d6d8486e9f3e1d1b5482", "html_url": "https://github.com/rust-lang/rust/commit/f7caaa573ee179404454d6d8486e9f3e1d1b5482", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f7caaa573ee179404454d6d8486e9f3e1d1b5482/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2ec6aebb417a067b6ec4c1dd2b4e62ce0be0698e", "url": "https://api.github.com/repos/rust-lang/rust/commits/2ec6aebb417a067b6ec4c1dd2b4e62ce0be0698e", "html_url": "https://github.com/rust-lang/rust/commit/2ec6aebb417a067b6ec4c1dd2b4e62ce0be0698e"}, {"sha": "79d2430e9961c9b38aa8366f028fbcbcf98e74a5", "url": "https://api.github.com/repos/rust-lang/rust/commits/79d2430e9961c9b38aa8366f028fbcbcf98e74a5", "html_url": "https://github.com/rust-lang/rust/commit/79d2430e9961c9b38aa8366f028fbcbcf98e74a5"}], "stats": {"total": 21, "additions": 21, "deletions": 0}, "files": [{"sha": "908830d8a95141763e1db55464e48faa9e8ee5c4", "filename": "library/core/src/iter/traits/exact_size.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/f7caaa573ee179404454d6d8486e9f3e1d1b5482/library%2Fcore%2Fsrc%2Fiter%2Ftraits%2Fexact_size.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f7caaa573ee179404454d6d8486e9f3e1d1b5482/library%2Fcore%2Fsrc%2Fiter%2Ftraits%2Fexact_size.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fiter%2Ftraits%2Fexact_size.rs?ref=f7caaa573ee179404454d6d8486e9f3e1d1b5482", "patch": "@@ -21,6 +21,16 @@\n ///\n /// [`len`]: ExactSizeIterator::len\n ///\n+/// # When *shouldn't* an adapter be `ExactSizeIterator`?\n+///\n+/// If an adapter makes an iterator *longer*, then it's usually incorrect for\n+/// that adapter to implement `ExactSizeIterator`.  The inner exact-sized\n+/// iterator might already be `usize::MAX`-long, and thus the length of the\n+/// longer adapted iterator would no longer be exactly representable in `usize`.\n+///\n+/// This is why [`Chain<A, B>`](crate::iter::Chain) isn't `ExactSizeIterator`,\n+/// even when `A` and `B` are both `ExactSizeIterator`.\n+///\n /// # Examples\n ///\n /// Basic usage:"}, {"sha": "af02848233d997cab74c88d8052865e707ce3894", "filename": "library/core/src/iter/traits/marker.rs", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/f7caaa573ee179404454d6d8486e9f3e1d1b5482/library%2Fcore%2Fsrc%2Fiter%2Ftraits%2Fmarker.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f7caaa573ee179404454d6d8486e9f3e1d1b5482/library%2Fcore%2Fsrc%2Fiter%2Ftraits%2Fmarker.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fiter%2Ftraits%2Fmarker.rs?ref=f7caaa573ee179404454d6d8486e9f3e1d1b5482", "patch": "@@ -31,6 +31,17 @@ impl<I: FusedIterator + ?Sized> FusedIterator for &mut I {}\n /// The iterator must produce exactly the number of elements it reported\n /// or diverge before reaching the end.\n ///\n+/// # When *shouldn't* an adapter be `TrustedLen`?\n+///\n+/// If an adapter makes an iterator *shorter* by a given amount, then it's\n+/// usually incorrect for that adapter to implement `TrustedLen`.  The inner\n+/// iterator might return more than `usize::MAX` items, but there's no way to\n+/// know what `k` elements less than that will be, since the `size_hint` from\n+/// the inner iterator has already saturated and lost that information.\n+///\n+/// This is why [`Skip<I>`](crate::iter::Skip) isn't `TrustedLen`, even when\n+/// `I` implements `TrustedLen`.\n+///\n /// # Safety\n ///\n /// This trait must only be implemented when the contract is upheld. Consumers"}]}