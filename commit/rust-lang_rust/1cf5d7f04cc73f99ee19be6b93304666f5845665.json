{"sha": "1cf5d7f04cc73f99ee19be6b93304666f5845665", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFjZjVkN2YwNGNjNzNmOTllZTE5YmU2YjkzMzA0NjY2ZjU4NDU2NjU=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2019-05-02T07:03:28Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2019-05-02T07:03:28Z"}, "message": "Auto merge of #4035 - JoshMcguigan:useless_let_if_seq-3043, r=oli-obk\n\nuseless_let_if_seq handle interior mutability\n\nfixes #3043\n\nThis passes all tests, including a new one specifically dealing with a type with interior mutability. The main thing I'm unsure of is whether the span I used in the call to `is_freeze` is the most appropriate span to use, or if it matters.", "tree": {"sha": "c9c18b586553b748bf65a7c73552fff495cab747", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c9c18b586553b748bf65a7c73552fff495cab747"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1cf5d7f04cc73f99ee19be6b93304666f5845665", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1cf5d7f04cc73f99ee19be6b93304666f5845665", "html_url": "https://github.com/rust-lang/rust/commit/1cf5d7f04cc73f99ee19be6b93304666f5845665", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1cf5d7f04cc73f99ee19be6b93304666f5845665/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2ed0b3bfa05c796c6645ed1814cd372e73f45c66", "url": "https://api.github.com/repos/rust-lang/rust/commits/2ed0b3bfa05c796c6645ed1814cd372e73f45c66", "html_url": "https://github.com/rust-lang/rust/commit/2ed0b3bfa05c796c6645ed1814cd372e73f45c66"}, {"sha": "bb12d59551c046d288801264a56560321d10bf35", "url": "https://api.github.com/repos/rust-lang/rust/commits/bb12d59551c046d288801264a56560321d10bf35", "html_url": "https://github.com/rust-lang/rust/commit/bb12d59551c046d288801264a56560321d10bf35"}], "stats": {"total": 15, "additions": 15, "deletions": 0}, "files": [{"sha": "36ba198de8d10b2f71e42c9bc6905c342e8bfff2", "filename": "clippy_lints/src/let_if_seq.rs", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/1cf5d7f04cc73f99ee19be6b93304666f5845665/clippy_lints%2Fsrc%2Flet_if_seq.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1cf5d7f04cc73f99ee19be6b93304666f5845665/clippy_lints%2Fsrc%2Flet_if_seq.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flet_if_seq.rs?ref=1cf5d7f04cc73f99ee19be6b93304666f5845665", "patch": "@@ -71,6 +71,13 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for LetIfSeq {\n                 then {\n                     let span = stmt.span.to(if_.span);\n \n+                    let has_interior_mutability = !cx.tables.node_type(canonical_id).is_freeze(\n+                        cx.tcx,\n+                        cx.param_env,\n+                        span\n+                    );\n+                    if has_interior_mutability { return; }\n+\n                     let (default_multi_stmts, default) = if let Some(ref else_) = *else_ {\n                         if let hir::ExprKind::Block(ref else_, _) = else_.node {\n                             if let Some(default) = check_assign(cx, canonical_id, else_) {"}, {"sha": "802beeb4be6b18360bd5f6e59defababa1319c74", "filename": "tests/ui/let_if_seq.rs", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/1cf5d7f04cc73f99ee19be6b93304666f5845665/tests%2Fui%2Flet_if_seq.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1cf5d7f04cc73f99ee19be6b93304666f5845665/tests%2Fui%2Flet_if_seq.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Flet_if_seq.rs?ref=1cf5d7f04cc73f99ee19be6b93304666f5845665", "patch": "@@ -108,4 +108,12 @@ fn main() {\n     }\n \n     baz = 1337;\n+\n+    // issue 3043 - types with interior mutability should not trigger this lint\n+    use std::cell::Cell;\n+    let mut val = Cell::new(1);\n+    if true {\n+        val = Cell::new(2);\n+    }\n+    println!(\"{}\", val.get());\n }"}]}