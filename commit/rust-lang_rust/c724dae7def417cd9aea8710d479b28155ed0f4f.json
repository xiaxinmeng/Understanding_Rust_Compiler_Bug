{"sha": "c724dae7def417cd9aea8710d479b28155ed0f4f", "node_id": "MDY6Q29tbWl0NzI0NzEyOmM3MjRkYWU3ZGVmNDE3Y2Q5YWVhODcxMGQ0NzliMjgxNTVlZDBmNGY=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2013-03-15T16:21:56Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2013-03-15T16:21:56Z"}, "message": "auto merge of #5395 : thestinger/rust/iter, r=pcwalton", "tree": {"sha": "1d891ba5e74b2bd23178f85538ba5e50db2bffcf", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1d891ba5e74b2bd23178f85538ba5e50db2bffcf"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c724dae7def417cd9aea8710d479b28155ed0f4f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c724dae7def417cd9aea8710d479b28155ed0f4f", "html_url": "https://github.com/rust-lang/rust/commit/c724dae7def417cd9aea8710d479b28155ed0f4f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c724dae7def417cd9aea8710d479b28155ed0f4f/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "19bb16650f385755312e7d2399ce14e8253d92fa", "url": "https://api.github.com/repos/rust-lang/rust/commits/19bb16650f385755312e7d2399ce14e8253d92fa", "html_url": "https://github.com/rust-lang/rust/commit/19bb16650f385755312e7d2399ce14e8253d92fa"}, {"sha": "a49ccee68efc7ec05e882e5929669108f65f74fa", "url": "https://api.github.com/repos/rust-lang/rust/commits/a49ccee68efc7ec05e882e5929669108f65f74fa", "html_url": "https://github.com/rust-lang/rust/commit/a49ccee68efc7ec05e882e5929669108f65f74fa"}], "stats": {"total": 28, "additions": 13, "deletions": 15}, "files": [{"sha": "1e3bba64f2747c1706ca18fbe2207233a2a6f98e", "filename": "src/libcore/option.rs", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/c724dae7def417cd9aea8710d479b28155ed0f4f/src%2Flibcore%2Foption.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c724dae7def417cd9aea8710d479b28155ed0f4f/src%2Flibcore%2Foption.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Foption.rs?ref=c724dae7def417cd9aea8710d479b28155ed0f4f", "patch": "@@ -46,7 +46,7 @@ use ops::Add;\n use kinds::Copy;\n use util;\n use num::Zero;\n-use iter::BaseIter;\n+use iter::{BaseIter, MutableIter};\n \n #[cfg(test)] use ptr;\n #[cfg(test)] use str;\n@@ -323,6 +323,13 @@ impl<T> BaseIter<T> for Option<T> {\n     }\n }\n \n+impl<T> MutableIter<T> for Option<T> {\n+    #[inline(always)]\n+    fn each_mut(&mut self, f: &fn(&'self mut T) -> bool) {\n+        match *self { None => (), Some(ref mut t) => { f(t); } }\n+    }\n+}\n+\n pub impl<T> Option<T> {\n     /// Returns true if the option equals `none`\n     #[inline(always)]"}, {"sha": "e0c60c72ca76af164a4adbb9591e9dc8808698cb", "filename": "src/libstd/treemap.rs", "status": "modified", "additions": 5, "deletions": 14, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/c724dae7def417cd9aea8710d479b28155ed0f4f/src%2Flibstd%2Ftreemap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c724dae7def417cd9aea8710d479b28155ed0f4f/src%2Flibstd%2Ftreemap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Ftreemap.rs?ref=c724dae7def417cd9aea8710d479b28155ed0f4f", "patch": "@@ -72,7 +72,7 @@ pure fn lt<K: Ord + TotalOrd, V>(a: &TreeMap<K, V>,\n         }\n     };\n \n-    return a_len < b_len;\n+    a_len < b_len\n }\n \n impl<K: Ord + TotalOrd, V> Ord for TreeMap<K, V> {\n@@ -694,22 +694,13 @@ fn remove<K: TotalOrd, V>(node: &mut Option<~TreeNode<K, V>>,\n \n                 skew(save);\n \n-                match save.right {\n-                  Some(ref mut right) => {\n+                for save.right.each_mut |right| {\n                     skew(right);\n-                    match right.right {\n-                      Some(ref mut x) => { skew(x) },\n-                      None => ()\n-                    }\n-                  }\n-                  None => ()\n+                    for right.right.each_mut |x| { skew(x) }\n                 }\n \n                 split(save);\n-                match save.right {\n-                  Some(ref mut x) => { split(x) },\n-                  None => ()\n-                }\n+                for save.right.each_mut |x| { split(x) }\n             }\n \n             return removed;\n@@ -718,7 +709,7 @@ fn remove<K: TotalOrd, V>(node: &mut Option<~TreeNode<K, V>>,\n     }\n \n     *node = None;\n-    return true;\n+    true\n }\n \n #[cfg(test)]"}]}