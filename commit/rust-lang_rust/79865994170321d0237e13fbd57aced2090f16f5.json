{"sha": "79865994170321d0237e13fbd57aced2090f16f5", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc5ODY1OTk0MTcwMzIxZDAyMzdlMTNmYmQ1N2FjZWQyMDkwZjE2ZjU=", "commit": {"author": {"name": "Nadrieril", "email": "nadrieril@gmail.com", "date": "2019-09-26T18:47:05Z"}, "committer": {"name": "Nadrieril", "email": "nadrieril@gmail.com", "date": "2019-10-27T17:34:21Z"}, "message": "Remove mention of old slice pattern syntax", "tree": {"sha": "fa1647e12decfa4e02dc11b6aa853c593efb3a35", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fa1647e12decfa4e02dc11b6aa853c593efb3a35"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/79865994170321d0237e13fbd57aced2090f16f5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/79865994170321d0237e13fbd57aced2090f16f5", "html_url": "https://github.com/rust-lang/rust/commit/79865994170321d0237e13fbd57aced2090f16f5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/79865994170321d0237e13fbd57aced2090f16f5/comments", "author": {"login": "Nadrieril", "id": 6783654, "node_id": "MDQ6VXNlcjY3ODM2NTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/6783654?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Nadrieril", "html_url": "https://github.com/Nadrieril", "followers_url": "https://api.github.com/users/Nadrieril/followers", "following_url": "https://api.github.com/users/Nadrieril/following{/other_user}", "gists_url": "https://api.github.com/users/Nadrieril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Nadrieril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Nadrieril/subscriptions", "organizations_url": "https://api.github.com/users/Nadrieril/orgs", "repos_url": "https://api.github.com/users/Nadrieril/repos", "events_url": "https://api.github.com/users/Nadrieril/events{/privacy}", "received_events_url": "https://api.github.com/users/Nadrieril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Nadrieril", "id": 6783654, "node_id": "MDQ6VXNlcjY3ODM2NTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/6783654?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Nadrieril", "html_url": "https://github.com/Nadrieril", "followers_url": "https://api.github.com/users/Nadrieril/followers", "following_url": "https://api.github.com/users/Nadrieril/following{/other_user}", "gists_url": "https://api.github.com/users/Nadrieril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Nadrieril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Nadrieril/subscriptions", "organizations_url": "https://api.github.com/users/Nadrieril/orgs", "repos_url": "https://api.github.com/users/Nadrieril/repos", "events_url": "https://api.github.com/users/Nadrieril/events{/privacy}", "received_events_url": "https://api.github.com/users/Nadrieril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "af35934fa50f4d69fab46b98746dcbaa72aee19f", "url": "https://api.github.com/repos/rust-lang/rust/commits/af35934fa50f4d69fab46b98746dcbaa72aee19f", "html_url": "https://github.com/rust-lang/rust/commit/af35934fa50f4d69fab46b98746dcbaa72aee19f"}], "stats": {"total": 26, "additions": 13, "deletions": 13}, "files": [{"sha": "d3e5f28f92fef680fb799abb6250125636af602f", "filename": "src/librustc_mir/hair/pattern/_match.rs", "status": "modified", "additions": 13, "deletions": 13, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/79865994170321d0237e13fbd57aced2090f16f5/src%2Flibrustc_mir%2Fhair%2Fpattern%2F_match.rs", "raw_url": "https://github.com/rust-lang/rust/raw/79865994170321d0237e13fbd57aced2090f16f5/src%2Flibrustc_mir%2Fhair%2Fpattern%2F_match.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fhair%2Fpattern%2F_match.rs?ref=79865994170321d0237e13fbd57aced2090f16f5", "patch": "@@ -291,17 +291,17 @@ impl<'p, 'tcx> Matrix<'p, 'tcx> {\n }\n \n /// Pretty-printer for matrices of patterns, example:\n-/// ++++++++++++++++++++++++++\n-/// + _     + []             +\n-/// ++++++++++++++++++++++++++\n-/// + true  + [First]        +\n-/// ++++++++++++++++++++++++++\n-/// + true  + [Second(true)] +\n-/// ++++++++++++++++++++++++++\n-/// + false + [_]            +\n-/// ++++++++++++++++++++++++++\n-/// + _     + [_, _, ..tail] +\n-/// ++++++++++++++++++++++++++\n+/// +++++++++++++++++++++++++++++\n+/// + _     + []                +\n+/// +++++++++++++++++++++++++++++\n+/// + true  + [First]           +\n+/// +++++++++++++++++++++++++++++\n+/// + true  + [Second(true)]    +\n+/// +++++++++++++++++++++++++++++\n+/// + false + [_]               +\n+/// +++++++++++++++++++++++++++++\n+/// + _     + [_, _, tail @ ..] +\n+/// +++++++++++++++++++++++++++++\n impl<'p, 'tcx> fmt::Debug for Matrix<'p, 'tcx> {\n     fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {\n         write!(f, \"\\n\")?;\n@@ -1439,7 +1439,7 @@ fn is_useful_specialized<'p, 'a, 'tcx>(\n /// In most cases, there's only one constructor that a specific pattern\n /// represents, such as a specific enum variant or a specific literal value.\n /// Slice patterns, however, can match slices of different lengths. For instance,\n-/// `[a, b, ..tail]` can match a slice of length 2, 3, 4 and so on.\n+/// `[a, b, tail @ ..]` can match a slice of length 2, 3, 4 and so on.\n ///\n /// Returns `None` in case of a catch-all, which can't be specialized.\n fn pat_constructors<'tcx>(\n@@ -1884,7 +1884,7 @@ fn patterns_for_variant<'p, 'a: 'p, 'tcx>(\n /// into `arity` patterns based on the constructor. For most patterns, the step is trivial,\n /// for instance tuple patterns are flattened and box patterns expand into their inner pattern.\n ///\n-/// OTOH, slice patterns with a subslice pattern (..tail) can be expanded into multiple\n+/// OTOH, slice patterns with a subslice pattern (tail @ ..) can be expanded into multiple\n /// different patterns.\n /// Structure patterns with a partial wild pattern (Foo { a: 42, .. }) have their missing\n /// fields filled with wild patterns."}]}