{"sha": "e9fb7bada1dc2d288ef44852b0e1986dbcfaaab5", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU5ZmI3YmFkYTFkYzJkMjg4ZWY0NDg1MmIwZTE5ODZkYmNmYWFhYjU=", "commit": {"author": {"name": "Amanieu d'Antras", "email": "amanieu@gmail.com", "date": "2021-07-29T09:15:50Z"}, "committer": {"name": "Amanieu d'Antras", "email": "amanieu@gmail.com", "date": "2021-08-12T11:42:58Z"}, "message": "Fix error message typo for pure asm without outputs", "tree": {"sha": "9e073cc1f3f27011f021cc8d17f52b4ee48427ff", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9e073cc1f3f27011f021cc8d17f52b4ee48427ff"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e9fb7bada1dc2d288ef44852b0e1986dbcfaaab5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e9fb7bada1dc2d288ef44852b0e1986dbcfaaab5", "html_url": "https://github.com/rust-lang/rust/commit/e9fb7bada1dc2d288ef44852b0e1986dbcfaaab5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e9fb7bada1dc2d288ef44852b0e1986dbcfaaab5/comments", "author": {"login": "Amanieu", "id": 278509, "node_id": "MDQ6VXNlcjI3ODUwOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/278509?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Amanieu", "html_url": "https://github.com/Amanieu", "followers_url": "https://api.github.com/users/Amanieu/followers", "following_url": "https://api.github.com/users/Amanieu/following{/other_user}", "gists_url": "https://api.github.com/users/Amanieu/gists{/gist_id}", "starred_url": "https://api.github.com/users/Amanieu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Amanieu/subscriptions", "organizations_url": "https://api.github.com/users/Amanieu/orgs", "repos_url": "https://api.github.com/users/Amanieu/repos", "events_url": "https://api.github.com/users/Amanieu/events{/privacy}", "received_events_url": "https://api.github.com/users/Amanieu/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Amanieu", "id": 278509, "node_id": "MDQ6VXNlcjI3ODUwOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/278509?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Amanieu", "html_url": "https://github.com/Amanieu", "followers_url": "https://api.github.com/users/Amanieu/followers", "following_url": "https://api.github.com/users/Amanieu/following{/other_user}", "gists_url": "https://api.github.com/users/Amanieu/gists{/gist_id}", "starred_url": "https://api.github.com/users/Amanieu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Amanieu/subscriptions", "organizations_url": "https://api.github.com/users/Amanieu/orgs", "repos_url": "https://api.github.com/users/Amanieu/repos", "events_url": "https://api.github.com/users/Amanieu/events{/privacy}", "received_events_url": "https://api.github.com/users/Amanieu/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ccffcafd55e58f769d4b0efc0064bf65e76998e4", "url": "https://api.github.com/repos/rust-lang/rust/commits/ccffcafd55e58f769d4b0efc0064bf65e76998e4", "html_url": "https://github.com/rust-lang/rust/commit/ccffcafd55e58f769d4b0efc0064bf65e76998e4"}], "stats": {"total": 14, "additions": 7, "deletions": 7}, "files": [{"sha": "df3aed3bca2ef85a14d1857cd7f4d381f6deb01a", "filename": "compiler/rustc_builtin_macros/src/asm.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e9fb7bada1dc2d288ef44852b0e1986dbcfaaab5/compiler%2Frustc_builtin_macros%2Fsrc%2Fasm.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e9fb7bada1dc2d288ef44852b0e1986dbcfaaab5/compiler%2Frustc_builtin_macros%2Fsrc%2Fasm.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_builtin_macros%2Fsrc%2Fasm.rs?ref=e9fb7bada1dc2d288ef44852b0e1986dbcfaaab5", "patch": "@@ -273,7 +273,7 @@ fn parse_args<'a>(\n     if args.options.contains(ast::InlineAsmOptions::PURE) && !have_real_output {\n         ecx.struct_span_err(\n             args.options_spans.clone(),\n-            \"asm with `pure` option must have at least one output\",\n+            \"asm with the `pure` option must have at least one output\",\n         )\n         .emit();\n     }"}, {"sha": "1f5eb4afbd31765a9a2971505f220acb724b60bb", "filename": "src/test/ui/asm/bad-options.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e9fb7bada1dc2d288ef44852b0e1986dbcfaaab5/src%2Ftest%2Fui%2Fasm%2Fbad-options.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e9fb7bada1dc2d288ef44852b0e1986dbcfaaab5/src%2Ftest%2Fui%2Fasm%2Fbad-options.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fasm%2Fbad-options.rs?ref=e9fb7bada1dc2d288ef44852b0e1986dbcfaaab5", "patch": "@@ -9,9 +9,9 @@ fn main() {\n         //~^ ERROR the `nomem` and `readonly` options are mutually exclusive\n         asm!(\"\", options(pure, nomem, noreturn));\n         //~^ ERROR the `pure` and `noreturn` options are mutually exclusive\n-        //~^^ ERROR asm with `pure` option must have at least one output\n+        //~^^ ERROR asm with the `pure` option must have at least one output\n         asm!(\"{}\", in(reg) foo, options(pure, nomem));\n-        //~^ ERROR asm with `pure` option must have at least one output\n+        //~^ ERROR asm with the `pure` option must have at least one output\n         asm!(\"{}\", out(reg) foo, options(noreturn));\n         //~^ ERROR asm outputs are not allowed with the `noreturn` option\n     }"}, {"sha": "20f00c13c75564a2246b52a37eaa972655b7978a", "filename": "src/test/ui/asm/bad-options.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e9fb7bada1dc2d288ef44852b0e1986dbcfaaab5/src%2Ftest%2Fui%2Fasm%2Fbad-options.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e9fb7bada1dc2d288ef44852b0e1986dbcfaaab5/src%2Ftest%2Fui%2Fasm%2Fbad-options.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fasm%2Fbad-options.stderr?ref=e9fb7bada1dc2d288ef44852b0e1986dbcfaaab5", "patch": "@@ -10,13 +10,13 @@ error: the `pure` and `noreturn` options are mutually exclusive\n LL |         asm!(\"\", options(pure, nomem, noreturn));\n    |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n-error: asm with `pure` option must have at least one output\n+error: asm with the `pure` option must have at least one output\n   --> $DIR/bad-options.rs:10:18\n    |\n LL |         asm!(\"\", options(pure, nomem, noreturn));\n    |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n-error: asm with `pure` option must have at least one output\n+error: asm with the `pure` option must have at least one output\n   --> $DIR/bad-options.rs:13:33\n    |\n LL |         asm!(\"{}\", in(reg) foo, options(pure, nomem));"}, {"sha": "fbf187040f96c642240fe886b449fb707d576d19", "filename": "src/test/ui/asm/naked-functions.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e9fb7bada1dc2d288ef44852b0e1986dbcfaaab5/src%2Ftest%2Fui%2Fasm%2Fnaked-functions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e9fb7bada1dc2d288ef44852b0e1986dbcfaaab5/src%2Ftest%2Fui%2Fasm%2Fnaked-functions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fasm%2Fnaked-functions.rs?ref=e9fb7bada1dc2d288ef44852b0e1986dbcfaaab5", "patch": "@@ -124,7 +124,7 @@ unsafe extern \"C\" fn invalid_options() {\n #[naked]\n unsafe extern \"C\" fn invalid_options_continued() {\n     asm!(\"\", options(readonly, nostack), options(pure));\n-    //~^ ERROR asm with `pure` option must have at least one output\n+    //~^ ERROR asm with the `pure` option must have at least one output\n     //~| WARN asm options unsupported in naked functions: `nostack`, `pure`, `readonly`\n     //~| WARN this was previously accepted\n     //~| WARN asm in naked functions must use `noreturn` option"}, {"sha": "16d3472c28ab0dad7ffbcebde8abf1ffc1bc9b68", "filename": "src/test/ui/asm/naked-functions.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e9fb7bada1dc2d288ef44852b0e1986dbcfaaab5/src%2Ftest%2Fui%2Fasm%2Fnaked-functions.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e9fb7bada1dc2d288ef44852b0e1986dbcfaaab5/src%2Ftest%2Fui%2Fasm%2Fnaked-functions.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fasm%2Fnaked-functions.stderr?ref=e9fb7bada1dc2d288ef44852b0e1986dbcfaaab5", "patch": "@@ -1,4 +1,4 @@\n-error: asm with `pure` option must have at least one output\n+error: asm with the `pure` option must have at least one output\n   --> $DIR/naked-functions.rs:126:14\n    |\n LL |     asm!(\"\", options(readonly, nostack), options(pure));"}]}