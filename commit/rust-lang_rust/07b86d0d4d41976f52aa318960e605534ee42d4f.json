{"sha": "07b86d0d4d41976f52aa318960e605534ee42d4f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA3Yjg2ZDBkNGQ0MTk3NmY1MmFhMzE4OTYwZTYwNTUzNGVlNDJkNGY=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2016-10-17T11:32:15Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2016-10-17T11:32:15Z"}, "message": "Auto merge of #37162 - matklad:static-mut-lint, r=jseyfried\n\nLint against lowercase static mut\n\nCloses #37145.\n\nLint for non mut statics was added in https://github.com/rust-lang/rust/pull/7523, and it explicitly did not cover mut statics. I am not sure why.", "tree": {"sha": "411b4c9dade7d519fa31f35aab7180a69725f8d5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/411b4c9dade7d519fa31f35aab7180a69725f8d5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/07b86d0d4d41976f52aa318960e605534ee42d4f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/07b86d0d4d41976f52aa318960e605534ee42d4f", "html_url": "https://github.com/rust-lang/rust/commit/07b86d0d4d41976f52aa318960e605534ee42d4f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/07b86d0d4d41976f52aa318960e605534ee42d4f/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "da7f8c540b47c5bb063356bf5ad05a6a49ed0ff1", "url": "https://api.github.com/repos/rust-lang/rust/commits/da7f8c540b47c5bb063356bf5ad05a6a49ed0ff1", "html_url": "https://github.com/rust-lang/rust/commit/da7f8c540b47c5bb063356bf5ad05a6a49ed0ff1"}, {"sha": "066d62d4b4d508f7a46d773c9100dc6516ac34f6", "url": "https://api.github.com/repos/rust-lang/rust/commits/066d62d4b4d508f7a46d773c9100dc6516ac34f6", "html_url": "https://github.com/rust-lang/rust/commit/066d62d4b4d508f7a46d773c9100dc6516ac34f6"}], "stats": {"total": 83, "additions": 33, "deletions": 50}, "files": [{"sha": "991c456fe7463c7b126a774bc0911a1c7567fa45", "filename": "src/libcollectionstest/vec.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/07b86d0d4d41976f52aa318960e605534ee42d4f/src%2Flibcollectionstest%2Fvec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/07b86d0d4d41976f52aa318960e605534ee42d4f/src%2Flibcollectionstest%2Fvec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcollectionstest%2Fvec.rs?ref=07b86d0d4d41976f52aa318960e605534ee42d4f", "patch": "@@ -326,22 +326,22 @@ fn test_zip_unzip() {\n \n #[test]\n fn test_vec_truncate_drop() {\n-    static mut drops: u32 = 0;\n+    static mut DROPS: u32 = 0;\n     struct Elem(i32);\n     impl Drop for Elem {\n         fn drop(&mut self) {\n             unsafe {\n-                drops += 1;\n+                DROPS += 1;\n             }\n         }\n     }\n \n     let mut v = vec![Elem(1), Elem(2), Elem(3), Elem(4), Elem(5)];\n-    assert_eq!(unsafe { drops }, 0);\n+    assert_eq!(unsafe { DROPS }, 0);\n     v.truncate(3);\n-    assert_eq!(unsafe { drops }, 2);\n+    assert_eq!(unsafe { DROPS }, 2);\n     v.truncate(0);\n-    assert_eq!(unsafe { drops }, 5);\n+    assert_eq!(unsafe { DROPS }, 5);\n }\n \n #[test]"}, {"sha": "9dfd34302686bfa098fc41a4db3f6a047b579af9", "filename": "src/libcollectionstest/vec_deque.rs", "status": "modified", "additions": 11, "deletions": 11, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/07b86d0d4d41976f52aa318960e605534ee42d4f/src%2Flibcollectionstest%2Fvec_deque.rs", "raw_url": "https://github.com/rust-lang/rust/raw/07b86d0d4d41976f52aa318960e605534ee42d4f/src%2Flibcollectionstest%2Fvec_deque.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcollectionstest%2Fvec_deque.rs?ref=07b86d0d4d41976f52aa318960e605534ee42d4f", "patch": "@@ -695,12 +695,12 @@ fn test_show() {\n \n #[test]\n fn test_drop() {\n-    static mut drops: i32 = 0;\n+    static mut DROPS: i32 = 0;\n     struct Elem;\n     impl Drop for Elem {\n         fn drop(&mut self) {\n             unsafe {\n-                drops += 1;\n+                DROPS += 1;\n             }\n         }\n     }\n@@ -712,17 +712,17 @@ fn test_drop() {\n     ring.push_front(Elem);\n     drop(ring);\n \n-    assert_eq!(unsafe { drops }, 4);\n+    assert_eq!(unsafe { DROPS }, 4);\n }\n \n #[test]\n fn test_drop_with_pop() {\n-    static mut drops: i32 = 0;\n+    static mut DROPS: i32 = 0;\n     struct Elem;\n     impl Drop for Elem {\n         fn drop(&mut self) {\n             unsafe {\n-                drops += 1;\n+                DROPS += 1;\n             }\n         }\n     }\n@@ -735,20 +735,20 @@ fn test_drop_with_pop() {\n \n     drop(ring.pop_back());\n     drop(ring.pop_front());\n-    assert_eq!(unsafe { drops }, 2);\n+    assert_eq!(unsafe { DROPS }, 2);\n \n     drop(ring);\n-    assert_eq!(unsafe { drops }, 4);\n+    assert_eq!(unsafe { DROPS }, 4);\n }\n \n #[test]\n fn test_drop_clear() {\n-    static mut drops: i32 = 0;\n+    static mut DROPS: i32 = 0;\n     struct Elem;\n     impl Drop for Elem {\n         fn drop(&mut self) {\n             unsafe {\n-                drops += 1;\n+                DROPS += 1;\n             }\n         }\n     }\n@@ -759,10 +759,10 @@ fn test_drop_clear() {\n     ring.push_back(Elem);\n     ring.push_front(Elem);\n     ring.clear();\n-    assert_eq!(unsafe { drops }, 4);\n+    assert_eq!(unsafe { DROPS }, 4);\n \n     drop(ring);\n-    assert_eq!(unsafe { drops }, 4);\n+    assert_eq!(unsafe { DROPS }, 4);\n }\n \n #[test]"}, {"sha": "fea3de59520ca76892063ea21a7f8375a02f8220", "filename": "src/librustc_lint/bad_style.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/07b86d0d4d41976f52aa318960e605534ee42d4f/src%2Flibrustc_lint%2Fbad_style.rs", "raw_url": "https://github.com/rust-lang/rust/raw/07b86d0d4d41976f52aa318960e605534ee42d4f/src%2Flibrustc_lint%2Fbad_style.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_lint%2Fbad_style.rs?ref=07b86d0d4d41976f52aa318960e605534ee42d4f", "patch": "@@ -355,9 +355,8 @@ impl LintPass for NonUpperCaseGlobals {\n impl LateLintPass for NonUpperCaseGlobals {\n     fn check_item(&mut self, cx: &LateContext, it: &hir::Item) {\n         match it.node {\n-            // only check static constants\n-            hir::ItemStatic(_, hir::MutImmutable, _) => {\n-                NonUpperCaseGlobals::check_upper_case(cx, \"static constant\", it.name, it.span);\n+            hir::ItemStatic(..) => {\n+                NonUpperCaseGlobals::check_upper_case(cx, \"static variable\", it.name, it.span);\n             }\n             hir::ItemConst(..) => {\n                 NonUpperCaseGlobals::check_upper_case(cx, \"constant\", it.name, it.span);"}, {"sha": "71e163321aea23a71b0e83e437ed187fcd4ee59b", "filename": "src/libstd/sync/once.rs", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/07b86d0d4d41976f52aa318960e605534ee42d4f/src%2Flibstd%2Fsync%2Fonce.rs", "raw_url": "https://github.com/rust-lang/rust/raw/07b86d0d4d41976f52aa318960e605534ee42d4f/src%2Flibstd%2Fsync%2Fonce.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsync%2Fonce.rs?ref=07b86d0d4d41976f52aa318960e605534ee42d4f", "patch": "@@ -387,7 +387,7 @@ mod tests {\n     #[test]\n     fn stampede_once() {\n         static O: Once = Once::new();\n-        static mut run: bool = false;\n+        static mut RUN: bool = false;\n \n         let (tx, rx) = channel();\n         for _ in 0..10 {\n@@ -396,21 +396,21 @@ mod tests {\n                 for _ in 0..4 { thread::yield_now() }\n                 unsafe {\n                     O.call_once(|| {\n-                        assert!(!run);\n-                        run = true;\n+                        assert!(!RUN);\n+                        RUN = true;\n                     });\n-                    assert!(run);\n+                    assert!(RUN);\n                 }\n                 tx.send(()).unwrap();\n             });\n         }\n \n         unsafe {\n             O.call_once(|| {\n-                assert!(!run);\n-                run = true;\n+                assert!(!RUN);\n+                RUN = true;\n             });\n-            assert!(run);\n+            assert!(RUN);\n         }\n \n         for _ in 0..10 {"}, {"sha": "65c85697ce720f6842a2fd52d6bb70626ac98d71", "filename": "src/rtstartup/rsbegin.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/07b86d0d4d41976f52aa318960e605534ee42d4f/src%2Frtstartup%2Frsbegin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/07b86d0d4d41976f52aa318960e605534ee42d4f/src%2Frtstartup%2Frsbegin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frtstartup%2Frsbegin.rs?ref=07b86d0d4d41976f52aa318960e605534ee42d4f", "patch": "@@ -44,7 +44,7 @@ pub mod eh_frames {\n \n     // Scratch space for unwinder's internal book-keeping.\n     // This is defined as `struct object` in $GCC/libgcc/unwind-dw2-fde.h.\n-    static mut obj: [isize; 6] = [0; 6];\n+    static mut OBJ: [isize; 6] = [0; 6];\n \n     // Unwind info registration/deregistration routines.\n     // See the docs of `unwind` module in libstd.\n@@ -56,13 +56,13 @@ pub mod eh_frames {\n     unsafe fn init() {\n         // register unwind info on module startup\n         rust_eh_register_frames(&__EH_FRAME_BEGIN__ as *const u8,\n-                                &mut obj as *mut _ as *mut u8);\n+                                &mut OBJ as *mut _ as *mut u8);\n     }\n \n     unsafe fn uninit() {\n         // unregister on shutdown\n         rust_eh_unregister_frames(&__EH_FRAME_BEGIN__ as *const u8,\n-                                  &mut obj as *mut _ as *mut u8);\n+                                  &mut OBJ as *mut _ as *mut u8);\n     }\n \n     // MSVC-specific init/uninit routine registration"}, {"sha": "b2e6072c9855c38f93db02865e105befb2be182f", "filename": "src/test/compile-fail/lint-group-style.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/07b86d0d4d41976f52aa318960e605534ee42d4f/src%2Ftest%2Fcompile-fail%2Flint-group-style.rs", "raw_url": "https://github.com/rust-lang/rust/raw/07b86d0d4d41976f52aa318960e605534ee42d4f/src%2Ftest%2Fcompile-fail%2Flint-group-style.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Flint-group-style.rs?ref=07b86d0d4d41976f52aa318960e605534ee42d4f", "patch": "@@ -24,7 +24,7 @@ mod test {\n     mod bad {\n         fn CamelCase() {} //~ ERROR function `CamelCase` should have a snake case name\n \n-        static bad: isize = 1; //~ ERROR static constant `bad` should have an upper case name\n+        static bad: isize = 1; //~ ERROR static variable `bad` should have an upper case name\n     }\n \n     mod warn {"}, {"sha": "463a93612ca00ced6b602ec75528858867461253", "filename": "src/test/compile-fail/lint-non-uppercase-statics.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/07b86d0d4d41976f52aa318960e605534ee42d4f/src%2Ftest%2Fcompile-fail%2Flint-non-uppercase-statics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/07b86d0d4d41976f52aa318960e605534ee42d4f/src%2Ftest%2Fcompile-fail%2Flint-non-uppercase-statics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Flint-non-uppercase-statics.rs?ref=07b86d0d4d41976f52aa318960e605534ee42d4f", "patch": "@@ -11,6 +11,9 @@\n #![forbid(non_upper_case_globals)]\n #![allow(dead_code)]\n \n-static foo: isize = 1; //~ ERROR static constant `foo` should have an upper case name such as `FOO`\n+static foo: isize = 1; //~ ERROR static variable `foo` should have an upper case name such as `FOO`\n+\n+static mut bar: isize = 1;\n+        //~^ ERROR static variable `bar` should have an upper case name such as `BAR`\n \n fn main() { }"}, {"sha": "aa5b3834c01786fc0d58684a6aaabfc69839649a", "filename": "src/test/run-pass/lint-non-uppercase-statics-lowercase-mut-statics.rs", "status": "removed", "additions": 0, "deletions": 19, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/da7f8c540b47c5bb063356bf5ad05a6a49ed0ff1/src%2Ftest%2Frun-pass%2Flint-non-uppercase-statics-lowercase-mut-statics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/da7f8c540b47c5bb063356bf5ad05a6a49ed0ff1/src%2Ftest%2Frun-pass%2Flint-non-uppercase-statics-lowercase-mut-statics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Flint-non-uppercase-statics-lowercase-mut-statics.rs?ref=da7f8c540b47c5bb063356bf5ad05a6a49ed0ff1", "patch": "@@ -1,19 +0,0 @@\n-// Copyright 2013 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n-\n-// pretty-expanded FIXME #23616\n-\n-#![forbid(non_camel_case_types)]\n-#![forbid(non_upper_case_globals)]\n-\n-static mut bar: isize = 2;\n-\n-pub fn main() {}"}]}