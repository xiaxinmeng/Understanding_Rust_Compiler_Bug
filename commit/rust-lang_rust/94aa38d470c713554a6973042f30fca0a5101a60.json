{"sha": "94aa38d470c713554a6973042f30fca0a5101a60", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk0YWEzOGQ0NzBjNzEzNTU0YTY5NzMwNDJmMzBmY2EwYTUxMDFhNjA=", "commit": {"author": {"name": "Michael Sullivan", "email": "sully@msully.net", "date": "2012-08-06T20:13:18Z"}, "committer": {"name": "Michael Sullivan", "email": "sully@msully.net", "date": "2012-08-07T00:20:22Z"}, "message": "Move some decoder code to the right place.", "tree": {"sha": "61c04ea20c699b7920b69b596a16d77ef1d407f0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/61c04ea20c699b7920b69b596a16d77ef1d407f0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/94aa38d470c713554a6973042f30fca0a5101a60", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/94aa38d470c713554a6973042f30fca0a5101a60", "html_url": "https://github.com/rust-lang/rust/commit/94aa38d470c713554a6973042f30fca0a5101a60", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/94aa38d470c713554a6973042f30fca0a5101a60/comments", "author": {"login": "msullivan", "id": 340349, "node_id": "MDQ6VXNlcjM0MDM0OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/340349?v=4", "gravatar_id": "", "url": "https://api.github.com/users/msullivan", "html_url": "https://github.com/msullivan", "followers_url": "https://api.github.com/users/msullivan/followers", "following_url": "https://api.github.com/users/msullivan/following{/other_user}", "gists_url": "https://api.github.com/users/msullivan/gists{/gist_id}", "starred_url": "https://api.github.com/users/msullivan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/msullivan/subscriptions", "organizations_url": "https://api.github.com/users/msullivan/orgs", "repos_url": "https://api.github.com/users/msullivan/repos", "events_url": "https://api.github.com/users/msullivan/events{/privacy}", "received_events_url": "https://api.github.com/users/msullivan/received_events", "type": "User", "site_admin": false}, "committer": {"login": "msullivan", "id": 340349, "node_id": "MDQ6VXNlcjM0MDM0OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/340349?v=4", "gravatar_id": "", "url": "https://api.github.com/users/msullivan", "html_url": "https://github.com/msullivan", "followers_url": "https://api.github.com/users/msullivan/followers", "following_url": "https://api.github.com/users/msullivan/following{/other_user}", "gists_url": "https://api.github.com/users/msullivan/gists{/gist_id}", "starred_url": "https://api.github.com/users/msullivan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/msullivan/subscriptions", "organizations_url": "https://api.github.com/users/msullivan/orgs", "repos_url": "https://api.github.com/users/msullivan/repos", "events_url": "https://api.github.com/users/msullivan/events{/privacy}", "received_events_url": "https://api.github.com/users/msullivan/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a3dd67ae9165ee87c98ba7e5585ce859fd3fbe68", "url": "https://api.github.com/repos/rust-lang/rust/commits/a3dd67ae9165ee87c98ba7e5585ce859fd3fbe68", "html_url": "https://github.com/rust-lang/rust/commit/a3dd67ae9165ee87c98ba7e5585ce859fd3fbe68"}], "stats": {"total": 32, "additions": 15, "deletions": 17}, "files": [{"sha": "49299ac850c50185319f17a13784c40555570cdd", "filename": "src/rustc/metadata/encoder.rs", "status": "modified", "additions": 15, "deletions": 17, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/94aa38d470c713554a6973042f30fca0a5101a60/src%2Frustc%2Fmetadata%2Fencoder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/94aa38d470c713554a6973042f30fca0a5101a60/src%2Frustc%2Fmetadata%2Fencoder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustc%2Fmetadata%2Fencoder.rs?ref=94aa38d470c713554a6973042f30fca0a5101a60", "patch": "@@ -777,6 +777,21 @@ fn encode_info_for_item(ecx: @encode_ctxt, ebml_w: ebml::writer, item: @item,\n         let bkts = create_index(idx, hash_node_id);\n         encode_index(ebml_w, bkts, write_int);\n         ebml_w.end_tag();\n+\n+        /* Encode the constructor */\n+        for ctor.each |ctor| {\n+            debug!{\"encoding info for ctor %s %d\", *item.ident,\n+                   ctor.node.id};\n+            vec::push(*index, {\n+                val: ctor.node.id,\n+                pos: ebml_w.writer.tell()\n+            });\n+            encode_info_for_fn(ecx, ebml_w, ctor.node.id, item.ident,\n+                               path, if tps.len() > 0u {\n+                                   some(ii_ctor(ctor, item.ident, tps,\n+                                                local_def(item.id))) }\n+                               else { none }, tps, ctor.node.dec);\n+        }\n       }\n       item_impl(tps, traits, _, methods) => {\n         add_to_index();\n@@ -891,23 +906,6 @@ fn encode_info_for_items(ecx: @encode_ctxt, ebml_w: ebml::writer,\n             match check ecx.tcx.items.get(i.id) {\n               ast_map::node_item(_, pt) => {\n                 encode_info_for_item(ecx, ebml_w, i, index, *pt);\n-                /* encode ctor, then encode items */\n-                match i.node {\n-                   item_class(tps, _, _, some(ctor), m_dtor) => {\n-                       debug!{\"encoding info for ctor %s %d\", *i.ident,\n-                              ctor.node.id};\n-                       vec::push(*index, {\n-                            val: ctor.node.id,\n-                            pos: ebml_w.writer.tell()\n-                       });\n-                       encode_info_for_fn(ecx, ebml_w, ctor.node.id, i.ident,\n-                          *pt, if tps.len() > 0u {\n-                                 some(ii_ctor(ctor, i.ident, tps,\n-                                              local_def(i.id))) }\n-                          else { none }, tps, ctor.node.dec);\n-                   }\n-                   _ => {}\n-                }\n               }\n             }\n         },"}]}