{"sha": "aee13574f2a31f5e8b6293a06de2622e554c7172", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFlZTEzNTc0ZjJhMzFmNWU4YjYyOTNhMDZkZTI2MjJlNTU0YzcxNzI=", "commit": {"author": {"name": "Tyler Mandry", "email": "tmandry@gmail.com", "date": "2019-06-26T21:08:33Z"}, "committer": {"name": "Tyler Mandry", "email": "tmandry@gmail.com", "date": "2019-06-28T22:39:33Z"}, "message": "Remove Clone requirement", "tree": {"sha": "ea59cfd0e59691d930448449ab347b683c9f7fd9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ea59cfd0e59691d930448449ab347b683c9f7fd9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/aee13574f2a31f5e8b6293a06de2622e554c7172", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/aee13574f2a31f5e8b6293a06de2622e554c7172", "html_url": "https://github.com/rust-lang/rust/commit/aee13574f2a31f5e8b6293a06de2622e554c7172", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/aee13574f2a31f5e8b6293a06de2622e554c7172/comments", "author": {"login": "tmandry", "id": 2280544, "node_id": "MDQ6VXNlcjIyODA1NDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/2280544?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tmandry", "html_url": "https://github.com/tmandry", "followers_url": "https://api.github.com/users/tmandry/followers", "following_url": "https://api.github.com/users/tmandry/following{/other_user}", "gists_url": "https://api.github.com/users/tmandry/gists{/gist_id}", "starred_url": "https://api.github.com/users/tmandry/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tmandry/subscriptions", "organizations_url": "https://api.github.com/users/tmandry/orgs", "repos_url": "https://api.github.com/users/tmandry/repos", "events_url": "https://api.github.com/users/tmandry/events{/privacy}", "received_events_url": "https://api.github.com/users/tmandry/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tmandry", "id": 2280544, "node_id": "MDQ6VXNlcjIyODA1NDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/2280544?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tmandry", "html_url": "https://github.com/tmandry", "followers_url": "https://api.github.com/users/tmandry/followers", "following_url": "https://api.github.com/users/tmandry/following{/other_user}", "gists_url": "https://api.github.com/users/tmandry/gists{/gist_id}", "starred_url": "https://api.github.com/users/tmandry/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tmandry/subscriptions", "organizations_url": "https://api.github.com/users/tmandry/orgs", "repos_url": "https://api.github.com/users/tmandry/repos", "events_url": "https://api.github.com/users/tmandry/events{/privacy}", "received_events_url": "https://api.github.com/users/tmandry/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "11b09e7f9e8f5e5600be65a16daa564af60d8c57", "url": "https://api.github.com/repos/rust-lang/rust/commits/11b09e7f9e8f5e5600be65a16daa564af60d8c57", "html_url": "https://github.com/rust-lang/rust/commit/11b09e7f9e8f5e5600be65a16daa564af60d8c57"}], "stats": {"total": 8, "additions": 3, "deletions": 5}, "files": [{"sha": "f0014602e2d6b161089727ccbcf901fcf80c8362", "filename": "src/librustc_mir/dataflow/at_location.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/aee13574f2a31f5e8b6293a06de2622e554c7172/src%2Flibrustc_mir%2Fdataflow%2Fat_location.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aee13574f2a31f5e8b6293a06de2622e554c7172/src%2Flibrustc_mir%2Fdataflow%2Fat_location.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fdataflow%2Fat_location.rs?ref=aee13574f2a31f5e8b6293a06de2622e554c7172", "patch": "@@ -61,7 +61,6 @@ pub trait FlowsAtLocation {\n /// (e.g., via `reconstruct_statement_effect` and\n /// `reconstruct_terminator_effect`; don't forget to call\n /// `apply_local_effect`).\n-#[derive(Clone)]\n pub struct FlowAtLocation<'tcx, BD, DR = DataflowResults<'tcx, BD>>\n where\n     BD: BitDenotation<'tcx>,"}, {"sha": "0a3ae252be01465c29ab0ff63c008b0fcaec6b1c", "filename": "src/librustc_mir/dataflow/impls/storage_liveness.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/aee13574f2a31f5e8b6293a06de2622e554c7172/src%2Flibrustc_mir%2Fdataflow%2Fimpls%2Fstorage_liveness.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aee13574f2a31f5e8b6293a06de2622e554c7172/src%2Flibrustc_mir%2Fdataflow%2Fimpls%2Fstorage_liveness.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fdataflow%2Fimpls%2Fstorage_liveness.rs?ref=aee13574f2a31f5e8b6293a06de2622e554c7172", "patch": "@@ -76,7 +76,6 @@ impl<'a, 'tcx> BottomValue for MaybeStorageLive<'a, 'tcx> {\n /// In the case of a movable generator, borrowed_locals can be `None` and we\n /// will not consider borrows in this pass. This relies on the fact that we only\n /// use this pass at yield points for these generators.\n-#[derive(Clone)]\n pub struct RequiresStorage<'mir, 'tcx, 'b> {\n     body: &'mir Body<'tcx>,\n     borrowed_locals:"}, {"sha": "c4edc23a1decda53d8430fe04b9f18b93eb768e1", "filename": "src/librustc_mir/dataflow/mod.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/aee13574f2a31f5e8b6293a06de2622e554c7172/src%2Flibrustc_mir%2Fdataflow%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aee13574f2a31f5e8b6293a06de2622e554c7172/src%2Flibrustc_mir%2Fdataflow%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fdataflow%2Fmod.rs?ref=aee13574f2a31f5e8b6293a06de2622e554c7172", "patch": "@@ -345,8 +345,7 @@ pub(crate) trait DataflowResultsConsumer<'a, 'tcx: 'a> {\n }\n \n /// Allows iterating dataflow results in a flexible and reasonably fast way.\n-#[derive(Clone)]\n-pub struct DataflowResultsCursor<'mir, 'tcx, BD, DR>\n+pub struct DataflowResultsCursor<'mir, 'tcx, BD, DR = DataflowResults<'tcx, BD>>\n where\n     BD: BitDenotation<'tcx>,\n     DR: Borrow<DataflowResults<'tcx, BD>>,"}, {"sha": "c5f0f36b8b9f295f06ca98bc3f713bf408a071b6", "filename": "src/librustc_mir/transform/generator.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/aee13574f2a31f5e8b6293a06de2622e554c7172/src%2Flibrustc_mir%2Ftransform%2Fgenerator.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aee13574f2a31f5e8b6293a06de2622e554c7172/src%2Flibrustc_mir%2Ftransform%2Fgenerator.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Fgenerator.rs?ref=aee13574f2a31f5e8b6293a06de2622e554c7172", "patch": "@@ -446,8 +446,9 @@ fn locals_live_across_suspend_points(\n     // for.\n     let requires_storage_analysis = RequiresStorage::new(body, &borrowed_locals_result);\n     let requires_storage =\n-        do_dataflow(tcx, body, def_id, &[], &dead_unwinds, requires_storage_analysis.clone(),\n+        do_dataflow(tcx, body, def_id, &[], &dead_unwinds, requires_storage_analysis,\n                     |bd, p| DebugFormatted::new(&bd.body().local_decls[p]));\n+    let requires_storage_analysis = RequiresStorage::new(body, &borrowed_locals_result);\n \n     // Calculate the liveness of MIR locals ignoring borrows.\n     let mut live_locals = liveness::LiveVarSet::new_empty(body.local_decls.len());"}]}