{"sha": "274146d650e9c5ef476cb31bbc47e555ed4d359b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI3NDE0NmQ2NTBlOWM1ZWY0NzZjYjMxYmJjNDdlNTU1ZWQ0ZDM1OWI=", "commit": {"author": {"name": "Jorge Aparicio", "email": "japaricious@gmail.com", "date": "2015-01-02T04:44:52Z"}, "committer": {"name": "Jorge Aparicio", "email": "japaricious@gmail.com", "date": "2015-01-03T14:34:05Z"}, "message": "rustc_typeck: fix fallout", "tree": {"sha": "3a485109df46350d893f6a7ca24d13bdd8db4111", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3a485109df46350d893f6a7ca24d13bdd8db4111"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/274146d650e9c5ef476cb31bbc47e555ed4d359b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/274146d650e9c5ef476cb31bbc47e555ed4d359b", "html_url": "https://github.com/rust-lang/rust/commit/274146d650e9c5ef476cb31bbc47e555ed4d359b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/274146d650e9c5ef476cb31bbc47e555ed4d359b/comments", "author": null, "committer": null, "parents": [{"sha": "62ee3f1622183dfab2ed5894e9ab61deda416e9a", "url": "https://api.github.com/repos/rust-lang/rust/commits/62ee3f1622183dfab2ed5894e9ab61deda416e9a", "html_url": "https://github.com/rust-lang/rust/commit/62ee3f1622183dfab2ed5894e9ab61deda416e9a"}], "stats": {"total": 12, "additions": 6, "deletions": 6}, "files": [{"sha": "52501b08fd1f8223f0db87d2c743cdf6dadf8073", "filename": "src/librustc_typeck/check/regionck.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/274146d650e9c5ef476cb31bbc47e555ed4d359b/src%2Flibrustc_typeck%2Fcheck%2Fregionck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/274146d650e9c5ef476cb31bbc47e555ed4d359b/src%2Flibrustc_typeck%2Fcheck%2Fregionck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fregionck.rs?ref=274146d650e9c5ef476cb31bbc47e555ed4d359b", "patch": "@@ -1052,11 +1052,11 @@ fn constrain_callee(rcx: &mut Rcx,\n     }\n }\n \n-fn constrain_call<'a, I: Iterator<&'a ast::Expr>>(rcx: &mut Rcx,\n-                                                  call_expr: &ast::Expr,\n-                                                  receiver: Option<&ast::Expr>,\n-                                                  mut arg_exprs: I,\n-                                                  implicitly_ref_args: bool) {\n+fn constrain_call<'a, I: Iterator<Item=&'a ast::Expr>>(rcx: &mut Rcx,\n+                                                       call_expr: &ast::Expr,\n+                                                       receiver: Option<&ast::Expr>,\n+                                                       mut arg_exprs: I,\n+                                                       implicitly_ref_args: bool) {\n     //! Invoked on every call site (i.e., normal calls, method calls,\n     //! and overloaded operators). Constrains the regions which appear\n     //! in the type of the function. Also constrains the regions that"}, {"sha": "8c2cb557c1c9d545cec51501f633c5d899ab688b", "filename": "src/librustc_typeck/collect.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/274146d650e9c5ef476cb31bbc47e555ed4d359b/src%2Flibrustc_typeck%2Fcollect.rs", "raw_url": "https://github.com/rust-lang/rust/raw/274146d650e9c5ef476cb31bbc47e555ed4d359b/src%2Flibrustc_typeck%2Fcollect.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcollect.rs?ref=274146d650e9c5ef476cb31bbc47e555ed4d359b", "patch": "@@ -428,7 +428,7 @@ fn convert_methods<'a,'tcx,'i,I>(ccx: &CrateCtxt<'a, 'tcx>,\n                                  untransformed_rcvr_ty: Ty<'tcx>,\n                                  rcvr_ty_generics: &ty::Generics<'tcx>,\n                                  rcvr_visibility: ast::Visibility)\n-                                 where I: Iterator<&'i ast::Method> {\n+                                 where I: Iterator<Item=&'i ast::Method> {\n     debug!(\"convert_methods(untransformed_rcvr_ty={}, rcvr_ty_generics={})\",\n            untransformed_rcvr_ty.repr(ccx.tcx),\n            rcvr_ty_generics.repr(ccx.tcx));"}]}