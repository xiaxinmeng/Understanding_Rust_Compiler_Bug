{"sha": "3b5157917abe5753d994b9de30aa2f1065a3bd45", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNiNTE1NzkxN2FiZTU3NTNkOTk0YjlkZTMwYWEyZjEwNjVhM2JkNDU=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-05-28T09:48:55Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-05-28T09:48:55Z"}, "message": "Rollup merge of #61220 - imbrem:error_explanations, r=estebank\n\nAdded error message for E0284\n\nWork on #61137", "tree": {"sha": "1f1ada821e72a29756ec83c9784713cbf6663339", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1f1ada821e72a29756ec83c9784713cbf6663339"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3b5157917abe5753d994b9de30aa2f1065a3bd45", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJc7QQHCRBK7hj4Ov3rIwAAdHIIAK1NlktFZjXlTPCZhKmo2S9n\nQUJ4Kp5j3/7BgSuyz5xaCjUzez+rVsrHig02YqyxbDVaXsSyl96dwd5fY37dAn50\nRYMoXkAKBsAeVfKGYrwMZvJEDL546xzC1TZO/dEQn9Bzu070r4Wz8OB4T6qxKpZh\ndjgcAG8o+SJjeutKSwBXlt8WvAsyqTdG2x2RIVUVgiTqUMvGSCfCmMnC7Tt2XYku\nlFboxV048hoGpTD6P4yJjYE803crOUHTyvt19QDlsrJKCkOHTHAcofa31B526VXK\nxpsc3b6iUOZ3D1HDWUF2RK1N2FRP2JQLawpWcEEpwt7NGAtKEk3U8CD46o0vG9k=\n=9Lx+\n-----END PGP SIGNATURE-----\n", "payload": "tree 1f1ada821e72a29756ec83c9784713cbf6663339\nparent 08f77243552afbd5a4ed093dcf2aec9bcd9d41a4\nparent b3480126d4acbd197836089257e9a4c751a78f5b\nauthor Mazdak Farrokhzad <twingoow@gmail.com> 1559036935 +0200\ncommitter GitHub <noreply@github.com> 1559036935 +0200\n\nRollup merge of #61220 - imbrem:error_explanations, r=estebank\n\nAdded error message for E0284\n\nWork on #61137\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3b5157917abe5753d994b9de30aa2f1065a3bd45", "html_url": "https://github.com/rust-lang/rust/commit/3b5157917abe5753d994b9de30aa2f1065a3bd45", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3b5157917abe5753d994b9de30aa2f1065a3bd45/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "08f77243552afbd5a4ed093dcf2aec9bcd9d41a4", "url": "https://api.github.com/repos/rust-lang/rust/commits/08f77243552afbd5a4ed093dcf2aec9bcd9d41a4", "html_url": "https://github.com/rust-lang/rust/commit/08f77243552afbd5a4ed093dcf2aec9bcd9d41a4"}, {"sha": "b3480126d4acbd197836089257e9a4c751a78f5b", "url": "https://api.github.com/repos/rust-lang/rust/commits/b3480126d4acbd197836089257e9a4c751a78f5b", "html_url": "https://github.com/rust-lang/rust/commit/b3480126d4acbd197836089257e9a4c751a78f5b"}], "stats": {"total": 50, "additions": 49, "deletions": 1}, "files": [{"sha": "6243e911bd5fdf92bc5b834a3ad51e7ccb0f7fd7", "filename": "src/librustc/error_codes.rs", "status": "modified", "additions": 45, "deletions": 1, "changes": 46, "blob_url": "https://github.com/rust-lang/rust/blob/3b5157917abe5753d994b9de30aa2f1065a3bd45/src%2Flibrustc%2Ferror_codes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3b5157917abe5753d994b9de30aa2f1065a3bd45/src%2Flibrustc%2Ferror_codes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Ferror_codes.rs?ref=3b5157917abe5753d994b9de30aa2f1065a3bd45", "patch": "@@ -1207,6 +1207,51 @@ fn main() {\n ```\n \"##,\n \n+E0284: r##\"\n+This error occurs when the compiler is unable to unambiguously infer the\n+return type of a function or method which is generic on return type, such\n+as the `collect` method for `Iterator`s.\n+\n+For example:\n+\n+```compile_fail,E0284\n+fn foo() -> Result<bool, ()> {\n+    let results = [Ok(true), Ok(false), Err(())].iter().cloned();\n+    let v: Vec<bool> = results.collect()?;\n+    // Do things with v...\n+    Ok(true)\n+}\n+```\n+\n+Here we have an iterator `results` over `Result<bool, ()>`.\n+Hence, `results.collect()` can return any type implementing\n+`FromIterator<Result<bool, ()>>`. On the other hand, the\n+`?` operator can accept any type implementing `Try`.\n+\n+The author of this code probably wants `collect()` to return a\n+`Result<Vec<bool>, ()>`, but the compiler can't be sure\n+that there isn't another type `T` implementing both `Try` and\n+`FromIterator<Result<bool, ()>>` in scope such that\n+`T::Ok == Vec<bool>`. Hence, this code is ambiguous and an error\n+is returned.\n+\n+To resolve this error, use a concrete type for the intermediate expression:\n+\n+```\n+fn foo() -> Result<bool, ()> {\n+    let results = [Ok(true), Ok(false), Err(())].iter().cloned();\n+    let v = {\n+        let temp: Result<Vec<bool>, ()> = results.collect();\n+        temp?\n+    };\n+    // Do things with v...\n+    Ok(true)\n+}\n+```\n+\n+Note that the type of `v` can now be inferred from the type of `temp`.\n+\"##,\n+\n E0308: r##\"\n This error occurs when the compiler was unable to infer the concrete type of a\n variable. It can occur for several cases, the most common of which is a\n@@ -2158,7 +2203,6 @@ register_diagnostics! {\n     E0278, // requirement is not satisfied\n     E0279, // requirement is not satisfied\n     E0280, // requirement is not satisfied\n-    E0284, // cannot resolve type\n //  E0285, // overflow evaluation builtin bounds\n //  E0296, // replaced with a generic attribute input check\n //  E0300, // unexpanded macro"}, {"sha": "a26ee23894f6dcd04db477b1901adadf00331715", "filename": "src/test/ui/associated-types/associated-types-overridden-binding.stderr", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/3b5157917abe5753d994b9de30aa2f1065a3bd45/src%2Ftest%2Fui%2Fassociated-types%2Fassociated-types-overridden-binding.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/3b5157917abe5753d994b9de30aa2f1065a3bd45/src%2Ftest%2Fui%2Fassociated-types%2Fassociated-types-overridden-binding.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fassociated-types%2Fassociated-types-overridden-binding.stderr?ref=3b5157917abe5753d994b9de30aa2f1065a3bd45", "patch": "@@ -12,3 +12,4 @@ LL | trait Foo: Iterator<Item = i32> {}\n \n error: aborting due to previous error\n \n+For more information about this error, try `rustc --explain E0284`."}, {"sha": "da14a69ae306a67baece987e98b21226ce43256f", "filename": "src/test/ui/associated-types/associated-types-unconstrained.stderr", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/3b5157917abe5753d994b9de30aa2f1065a3bd45/src%2Ftest%2Fui%2Fassociated-types%2Fassociated-types-unconstrained.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/3b5157917abe5753d994b9de30aa2f1065a3bd45/src%2Ftest%2Fui%2Fassociated-types%2Fassociated-types-unconstrained.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fassociated-types%2Fassociated-types-unconstrained.stderr?ref=3b5157917abe5753d994b9de30aa2f1065a3bd45", "patch": "@@ -6,3 +6,4 @@ LL |     let x: isize = Foo::bar();\n \n error: aborting due to previous error\n \n+For more information about this error, try `rustc --explain E0284`."}, {"sha": "64694c7a8d0b66dbb9c917c8e667500af41a1d70", "filename": "src/test/ui/issues/issue-12028.stderr", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/3b5157917abe5753d994b9de30aa2f1065a3bd45/src%2Ftest%2Fui%2Fissues%2Fissue-12028.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/3b5157917abe5753d994b9de30aa2f1065a3bd45/src%2Ftest%2Fui%2Fissues%2Fissue-12028.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-12028.stderr?ref=3b5157917abe5753d994b9de30aa2f1065a3bd45", "patch": "@@ -6,3 +6,4 @@ LL |         self.input_stream(&mut stream);\n \n error: aborting due to previous error\n \n+For more information about this error, try `rustc --explain E0284`."}, {"sha": "f62a540572c934661246e79c7050cc3885c76afe", "filename": "src/test/ui/question-mark-type-infer.stderr", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/3b5157917abe5753d994b9de30aa2f1065a3bd45/src%2Ftest%2Fui%2Fquestion-mark-type-infer.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/3b5157917abe5753d994b9de30aa2f1065a3bd45/src%2Ftest%2Fui%2Fquestion-mark-type-infer.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fquestion-mark-type-infer.stderr?ref=3b5157917abe5753d994b9de30aa2f1065a3bd45", "patch": "@@ -6,3 +6,4 @@ LL |     l.iter().map(f).collect()?\n \n error: aborting due to previous error\n \n+For more information about this error, try `rustc --explain E0284`."}]}