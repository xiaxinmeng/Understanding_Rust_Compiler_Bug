{"sha": "a067b4588aabfab1de57829cdfe5d660733a158d", "node_id": "MDY6Q29tbWl0NzI0NzEyOmEwNjdiNDU4OGFhYmZhYjFkZTU3ODI5Y2RmZTVkNjYwNzMzYTE1OGQ=", "commit": {"author": {"name": "Blake Loring", "email": "Blake.Loring@ig.com", "date": "2015-07-29T09:06:50Z"}, "committer": {"name": "Blake Loring", "email": "Blake.Loring@ig.com", "date": "2015-07-29T09:06:50Z"}, "message": "Modified to add 'found' to error message closes #26485", "tree": {"sha": "ba7b396433861c158b3d362da0b025b5bef01575", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ba7b396433861c158b3d362da0b025b5bef01575"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a067b4588aabfab1de57829cdfe5d660733a158d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a067b4588aabfab1de57829cdfe5d660733a158d", "html_url": "https://github.com/rust-lang/rust/commit/a067b4588aabfab1de57829cdfe5d660733a158d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a067b4588aabfab1de57829cdfe5d660733a158d/comments", "author": null, "committer": null, "parents": [{"sha": "d576ef3d7be3efe28f902bbb3b2197f4553db412", "url": "https://api.github.com/repos/rust-lang/rust/commits/d576ef3d7be3efe28f902bbb3b2197f4553db412", "html_url": "https://github.com/rust-lang/rust/commit/d576ef3d7be3efe28f902bbb3b2197f4553db412"}], "stats": {"total": 16, "additions": 8, "deletions": 8}, "files": [{"sha": "88fc6181f924121457cd23d08c46a1df8508d661", "filename": "src/librustc/middle/ty.rs", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/a067b4588aabfab1de57829cdfe5d660733a158d/src%2Flibrustc%2Fmiddle%2Fty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a067b4588aabfab1de57829cdfe5d660733a158d/src%2Flibrustc%2Fmiddle%2Fty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fty.rs?ref=a067b4588aabfab1de57829cdfe5d660733a158d", "patch": "@@ -44,7 +44,7 @@ use metadata::csearch;\n use middle;\n use middle::cast;\n use middle::check_const;\n-use middle::const_eval::{self, ConstVal};\n+use middle::const_eval::{self, ConstVal, ErrKind};\n use middle::const_eval::EvalHint::UncheckedExprHint;\n use middle::def::{self, DefMap, ExportMap};\n use middle::dependency_format;\n@@ -6107,20 +6107,20 @@ impl<'tcx> ctxt<'tcx> {\n                     found);\n             }\n             Err(err) => {\n-                let err_description = err.description();\n-                let found = match count_expr.node {\n+                let err_msg = match count_expr.node {\n                     ast::ExprPath(None, ast::Path {\n                         global: false,\n                         ref segments,\n                         ..\n                     }) if segments.len() == 1 =>\n-                        format!(\"{}\", \"found variable\"),\n-                    _ =>\n-                        format!(\"but {}\", err_description),\n+                        format!(\"found variable\"),\n+                    _ => match err.kind {\n+                        ErrKind::MiscCatchAll => format!(\"but found {}\", err.description()),\n+                        _ => format!(\"but {}\", err.description())\n+                    }\n                 };\n                 span_err!(self.sess, count_expr.span, E0307,\n-                    \"expected constant integer for repeat count, {}\",\n-                    found);\n+                    \"expected constant integer for repeat count, {}\", err_msg);\n             }\n         }\n         0"}]}