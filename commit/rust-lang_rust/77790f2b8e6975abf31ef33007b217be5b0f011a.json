{"sha": "77790f2b8e6975abf31ef33007b217be5b0f011a", "node_id": "C_kwDOAAsO6NoAKDc3NzkwZjJiOGU2OTc1YWJmMzFlZjMzMDA3YjIxN2JlNWIwZjAxMWE", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2022-03-12T13:56:26Z"}, "committer": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2022-03-12T15:50:49Z"}, "message": "fix clippy::needless_return", "tree": {"sha": "6fcd949752b340ec58e04d819da77fa74d721f75", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6fcd949752b340ec58e04d819da77fa74d721f75"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/77790f2b8e6975abf31ef33007b217be5b0f011a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/77790f2b8e6975abf31ef33007b217be5b0f011a", "html_url": "https://github.com/rust-lang/rust/commit/77790f2b8e6975abf31ef33007b217be5b0f011a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/77790f2b8e6975abf31ef33007b217be5b0f011a/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "21ffc5350d436f673cf20f868cd0d0802905eea7", "url": "https://api.github.com/repos/rust-lang/rust/commits/21ffc5350d436f673cf20f868cd0d0802905eea7", "html_url": "https://github.com/rust-lang/rust/commit/21ffc5350d436f673cf20f868cd0d0802905eea7"}], "stats": {"total": 31, "additions": 14, "deletions": 17}, "files": [{"sha": "958673600ba15fe701444870fd9714110b9e9326", "filename": "crates/hir_ty/src/consteval.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/77790f2b8e6975abf31ef33007b217be5b0f011a/crates%2Fhir_ty%2Fsrc%2Fconsteval.rs", "raw_url": "https://github.com/rust-lang/rust/raw/77790f2b8e6975abf31ef33007b217be5b0f011a/crates%2Fhir_ty%2Fsrc%2Fconsteval.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_ty%2Fsrc%2Fconsteval.rs?ref=77790f2b8e6975abf31ef33007b217be5b0f011a", "patch": "@@ -235,7 +235,7 @@ pub fn eval_const(expr: &Expr, ctx: &mut ConstEvalCtx<'_>) -> Result<ComputedExp\n                     Ok(ComputedExpr::Literal(Literal::Int(r, None)))\n                 }\n                 BinaryOp::LogicOp(_) => Err(ConstEvalError::TypeError),\n-                _ => return Err(ConstEvalError::NotSupported(\"bin op on this operators\")),\n+                _ => Err(ConstEvalError::NotSupported(\"bin op on this operators\")),\n             }\n         }\n         Expr::Block { statements, tail, .. } => {"}, {"sha": "2d493b154f1e02cbb5d552696c6146ee755625a3", "filename": "crates/hir_ty/src/method_resolution.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/77790f2b8e6975abf31ef33007b217be5b0f011a/crates%2Fhir_ty%2Fsrc%2Fmethod_resolution.rs", "raw_url": "https://github.com/rust-lang/rust/raw/77790f2b8e6975abf31ef33007b217be5b0f011a/crates%2Fhir_ty%2Fsrc%2Fmethod_resolution.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_ty%2Fsrc%2Fmethod_resolution.rs?ref=77790f2b8e6975abf31ef33007b217be5b0f011a", "patch": "@@ -278,7 +278,7 @@ impl InherentImpls {\n         impls.collect_def_map(db, &crate_def_map);\n         impls.shrink_to_fit();\n \n-        return Arc::new(impls);\n+        Arc::new(impls)\n     }\n \n     pub(crate) fn inherent_impls_in_block_query(\n@@ -291,7 +291,7 @@ impl InherentImpls {\n             impls.shrink_to_fit();\n             return Some(Arc::new(impls));\n         }\n-        return None;\n+        None\n     }\n \n     fn shrink_to_fit(&mut self) {"}, {"sha": "ffe4c74e0af0e3fb13f4415d76f6472bf0df24af", "filename": "crates/ide_assists/src/handlers/extract_module.rs", "status": "modified", "additions": 9, "deletions": 11, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/77790f2b8e6975abf31ef33007b217be5b0f011a/crates%2Fide_assists%2Fsrc%2Fhandlers%2Fextract_module.rs", "raw_url": "https://github.com/rust-lang/rust/raw/77790f2b8e6975abf31ef33007b217be5b0f011a/crates%2Fide_assists%2Fsrc%2Fhandlers%2Fextract_module.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_assists%2Fsrc%2Fhandlers%2Fextract_module.rs?ref=77790f2b8e6975abf31ef33007b217be5b0f011a", "patch": "@@ -333,7 +333,7 @@ impl Module {\n             }\n         });\n \n-        return (refs, adt_fields);\n+        (refs, adt_fields)\n     }\n \n     fn expand_and_group_usages_file_wise(\n@@ -563,7 +563,7 @@ impl Module {\n                     }\n                 });\n             }\n-            return use_opt;\n+            use_opt\n         });\n \n         let mut use_tree_str_opt: Option<Vec<ast::Path>> = None;\n@@ -646,7 +646,7 @@ impl Module {\n             return Some(item);\n         }\n \n-        return None;\n+        None\n     }\n \n     fn process_use_stmt_for_import_resolve(\n@@ -842,7 +842,7 @@ fn does_source_exists_outside_sel_in_same_mod(\n         _ => {}\n     }\n \n-    return source_exists_outside_sel_in_same_mod;\n+    source_exists_outside_sel_in_same_mod\n }\n \n fn get_replacements_for_visibilty_change(\n@@ -890,7 +890,7 @@ fn get_replacements_for_visibilty_change(\n         }\n     });\n \n-    return (body_items, replacements, record_field_parents, impls);\n+    (body_items, replacements, record_field_parents, impls)\n }\n \n fn get_use_tree_paths_from_path(\n@@ -943,15 +943,13 @@ fn compare_hir_and_ast_module(\n         return None;\n     }\n \n-    return Some(());\n+    Some(())\n }\n \n fn indent_range_before_given_node(node: &SyntaxNode) -> Option<TextRange> {\n-    let x = node.siblings_with_tokens(syntax::Direction::Prev).find(|x| {\n-        return x.kind() == WHITESPACE;\n-    })?;\n-\n-    return Some(x.text_range());\n+    node.siblings_with_tokens(syntax::Direction::Prev)\n+        .find(|x| x.kind() == WHITESPACE)\n+        .map(|x| x.text_range())\n }\n \n #[cfg(test)]"}, {"sha": "3c0e43ceacdca1282c530cf846e3249f085a555c", "filename": "crates/ide_completion/src/completions/attribute/derive.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/77790f2b8e6975abf31ef33007b217be5b0f011a/crates%2Fide_completion%2Fsrc%2Fcompletions%2Fattribute%2Fderive.rs", "raw_url": "https://github.com/rust-lang/rust/raw/77790f2b8e6975abf31ef33007b217be5b0f011a/crates%2Fide_completion%2Fsrc%2Fcompletions%2Fattribute%2Fderive.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_completion%2Fsrc%2Fcompletions%2Fattribute%2Fderive.rs?ref=77790f2b8e6975abf31ef33007b217be5b0f011a", "patch": "@@ -46,7 +46,6 @@ pub(crate) fn complete_derive(acc: &mut Completions, ctx: &CompletionContext) {\n                     acc.add_resolution(ctx, name, def);\n                 }\n             }\n-            return;\n         }\n         None if is_absolute_path => acc.add_crate_roots(ctx),\n         // only show modules in a fresh UseTree"}, {"sha": "1dcec5f4939287bd91813229c341a2c7ca2d3f1d", "filename": "crates/ide_completion/src/completions/attribute/repr.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/77790f2b8e6975abf31ef33007b217be5b0f011a/crates%2Fide_completion%2Fsrc%2Fcompletions%2Fattribute%2Frepr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/77790f2b8e6975abf31ef33007b217be5b0f011a/crates%2Fide_completion%2Fsrc%2Fcompletions%2Fattribute%2Frepr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_completion%2Fsrc%2Fcompletions%2Fattribute%2Frepr.rs?ref=77790f2b8e6975abf31ef33007b217be5b0f011a", "patch": "@@ -14,7 +14,7 @@ pub(super) fn complete_repr(acc: &mut Completions, ctx: &CompletionContext, inpu\n                     ast::Expr::PathExpr(path) => path.path()?.as_single_name_ref(),\n                     ast::Expr::CallExpr(call) => match call.expr()? {\n                         ast::Expr::PathExpr(path) => path.path()?.as_single_name_ref(),\n-                        _ => return None,\n+                        _ => None,\n                     },\n                     _ => None,\n                 })"}, {"sha": "b62a830803b5487f30f8a0f69a134ae15e13a631", "filename": "crates/rust-analyzer/src/main_loop.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/77790f2b8e6975abf31ef33007b217be5b0f011a/crates%2Frust-analyzer%2Fsrc%2Fmain_loop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/77790f2b8e6975abf31ef33007b217be5b0f011a/crates%2Frust-analyzer%2Fsrc%2Fmain_loop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fmain_loop.rs?ref=77790f2b8e6975abf31ef33007b217be5b0f011a", "patch": "@@ -167,7 +167,7 @@ impl GlobalState {\n             self.handle_event(event)?\n         }\n \n-        return Err(\"client exited without proper shutdown sequence\".into());\n+        Err(\"client exited without proper shutdown sequence\".into())\n     }\n \n     fn next_event(&self, inbox: &Receiver<lsp_server::Message>) -> Option<Event> {"}]}