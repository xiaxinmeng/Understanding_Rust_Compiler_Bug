{"sha": "ee338d934e0ab1c13cfc14a90219036da3a67ed1", "node_id": "MDY6Q29tbWl0NzI0NzEyOmVlMzM4ZDkzNGUwYWIxYzEzY2ZjMTRhOTAyMTkwMzZkYTNhNjdlZDE=", "commit": {"author": {"name": "Oliver Schneider", "email": "git1984941651981@oli-obk.de", "date": "2015-05-05T14:56:29Z"}, "committer": {"name": "Oliver Schneider", "email": "git1984941651981@oli-obk.de", "date": "2015-05-05T14:56:29Z"}, "message": "don't create a thread just for panic-isolation", "tree": {"sha": "438e6c2893168c0edca79ecdb6864aad4050a013", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/438e6c2893168c0edca79ecdb6864aad4050a013"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ee338d934e0ab1c13cfc14a90219036da3a67ed1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ee338d934e0ab1c13cfc14a90219036da3a67ed1", "html_url": "https://github.com/rust-lang/rust/commit/ee338d934e0ab1c13cfc14a90219036da3a67ed1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ee338d934e0ab1c13cfc14a90219036da3a67ed1/comments", "author": null, "committer": null, "parents": [{"sha": "a14dcdf0c25ed7e1714f80cee3a24be796db4deb", "url": "https://api.github.com/repos/rust-lang/rust/commits/a14dcdf0c25ed7e1714f80cee3a24be796db4deb", "html_url": "https://github.com/rust-lang/rust/commit/a14dcdf0c25ed7e1714f80cee3a24be796db4deb"}], "stats": {"total": 6, "additions": 4, "deletions": 2}, "files": [{"sha": "d19bcc6fa55c5264b904c4ed4f09ca16de6066bc", "filename": "tests/idem.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/ee338d934e0ab1c13cfc14a90219036da3a67ed1/tests%2Fidem.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ee338d934e0ab1c13cfc14a90219036da3a67ed1/tests%2Fidem.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fidem.rs?ref=ee338d934e0ab1c13cfc14a90219036da3a67ed1", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#![feature(catch_panic)]\n+\n extern crate rustfmt;\n \n use std::collections::HashMap;\n@@ -69,9 +71,9 @@ pub fn idempotent_check(filename: String) -> Result<(), HashMap<String, String>>\n     // function handle needs to have static lifetime. Instead of using a global RefCell, we use\n     // panic to return a result in case of failure. This has the advantage of smoothing the road to\n     // multithreaded rustfmt\n-    thread::spawn(move || {\n+    thread::catch_panic(move || {\n         run(args, WriteMode::Return(HANDLE_RESULT));\n-    }).join().map_err(|any|\n+    }).map_err(|any|\n         // i know it is a hashmap\n         *any.downcast().unwrap()\n     )"}]}