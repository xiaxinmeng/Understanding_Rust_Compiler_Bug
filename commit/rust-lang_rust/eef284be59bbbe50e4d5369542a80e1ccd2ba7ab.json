{"sha": "eef284be59bbbe50e4d5369542a80e1ccd2ba7ab", "node_id": "MDY6Q29tbWl0NzI0NzEyOmVlZjI4NGJlNTliYmJlNTBlNGQ1MzY5NTQyYTgwZTFjY2QyYmE3YWI=", "commit": {"author": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2020-08-10T03:29:39Z"}, "committer": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2020-08-10T19:04:10Z"}, "message": "Tweak ordering of suggestions\n\nModify logic to make it easier to follow and recover labels that would\notherwise be lost.", "tree": {"sha": "e071f85f8fcfeb6ca763eb37ca0d1b2d9e9901a5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e071f85f8fcfeb6ca763eb37ca0d1b2d9e9901a5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/eef284be59bbbe50e4d5369542a80e1ccd2ba7ab", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/eef284be59bbbe50e4d5369542a80e1ccd2ba7ab", "html_url": "https://github.com/rust-lang/rust/commit/eef284be59bbbe50e4d5369542a80e1ccd2ba7ab", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/eef284be59bbbe50e4d5369542a80e1ccd2ba7ab/comments", "author": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "committer": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "18f3be7704a4ec7976fcd1272c728974243d29bd", "url": "https://api.github.com/repos/rust-lang/rust/commits/18f3be7704a4ec7976fcd1272c728974243d29bd", "html_url": "https://github.com/rust-lang/rust/commit/18f3be7704a4ec7976fcd1272c728974243d29bd"}], "stats": {"total": 218, "additions": 131, "deletions": 87}, "files": [{"sha": "1ea0a6ff2185bc6a41db30a57c82ca3aba9e6b49", "filename": "src/librustc_resolve/late/diagnostics.rs", "status": "modified", "additions": 10, "deletions": 6, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/eef284be59bbbe50e4d5369542a80e1ccd2ba7ab/src%2Flibrustc_resolve%2Flate%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eef284be59bbbe50e4d5369542a80e1ccd2ba7ab/src%2Flibrustc_resolve%2Flate%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Flate%2Fdiagnostics.rs?ref=eef284be59bbbe50e4d5369542a80e1ccd2ba7ab", "patch": "@@ -339,8 +339,6 @@ impl<'a> LateResolutionVisitor<'a, '_, '_> {\n \n         // Try Levenshtein algorithm.\n         let typo_sugg = self.lookup_typo_candidate(path, ns, is_expected, span);\n-        let levenshtein_worked = self.r.add_typo_suggestion(&mut err, typo_sugg, ident_span);\n-\n         // Try context-dependent help if relaxed lookup didn't work.\n         if let Some(res) = res {\n             if self.smart_resolve_context_dependent_help(\n@@ -351,14 +349,18 @@ impl<'a> LateResolutionVisitor<'a, '_, '_> {\n                 &path_str,\n                 &fallback_label,\n             ) {\n+                // We do this to avoid losing a secondary span when we override the main error span.\n+                self.r.add_typo_suggestion(&mut err, typo_sugg, ident_span);\n                 return (err, candidates);\n             }\n         }\n \n-        // Fallback label.\n-        if !levenshtein_worked {\n+        if !self.type_ascription_suggestion(&mut err, base_span)\n+            && !self.r.add_typo_suggestion(&mut err, typo_sugg, ident_span)\n+        {\n+            // Fallback label.\n             err.span_label(base_span, fallback_label);\n-            self.type_ascription_suggestion(&mut err, base_span);\n+\n             match self.diagnostic_metadata.current_let_binding {\n                 Some((pat_sp, Some(ty_sp), None)) if ty_sp.contains(base_span) && could_be_expr => {\n                     err.span_suggestion_short(\n@@ -869,7 +871,7 @@ impl<'a> LateResolutionVisitor<'a, '_, '_> {\n         start.to(sm.next_point(start))\n     }\n \n-    fn type_ascription_suggestion(&self, err: &mut DiagnosticBuilder<'_>, base_span: Span) {\n+    fn type_ascription_suggestion(&self, err: &mut DiagnosticBuilder<'_>, base_span: Span) -> bool {\n         let sm = self.r.session.source_map();\n         let base_snippet = sm.span_to_snippet(base_span);\n         if let Some(&sp) = self.diagnostic_metadata.current_type_ascription.last() {\n@@ -939,9 +941,11 @@ impl<'a> LateResolutionVisitor<'a, '_, '_> {\n                             \"expecting a type here because of type ascription\",\n                         );\n                     }\n+                    return show_label;\n                 }\n             }\n         }\n+        false\n     }\n \n     fn find_module(&mut self, def_id: DefId) -> Option<(Module<'a>, ImportSuggestion)> {"}, {"sha": "af783996f76c978e4b7d35412a364e039748cf91", "filename": "src/test/ui/empty/empty-struct-braces-expr.stderr", "status": "modified", "additions": 24, "deletions": 14, "changes": 38, "blob_url": "https://github.com/rust-lang/rust/blob/eef284be59bbbe50e4d5369542a80e1ccd2ba7ab/src%2Ftest%2Fui%2Fempty%2Fempty-struct-braces-expr.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/eef284be59bbbe50e4d5369542a80e1ccd2ba7ab/src%2Ftest%2Fui%2Fempty%2Fempty-struct-braces-expr.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fempty%2Fempty-struct-braces-expr.stderr?ref=eef284be59bbbe50e4d5369542a80e1ccd2ba7ab", "patch": "@@ -12,14 +12,14 @@ LL |     let e1 = Empty1;\n LL | pub struct XEmpty2;\n    | ------------------- similarly named unit struct `XEmpty2` defined here\n    |\n-help: a unit struct with a similar name exists\n-   |\n-LL |     let e1 = XEmpty2;\n-   |              ^^^^^^^\n help: use struct literal syntax instead\n    |\n LL |     let e1 = Empty1 {};\n    |              ^^^^^^^^^\n+help: a unit struct with a similar name exists\n+   |\n+LL |     let e1 = XEmpty2;\n+   |              ^^^^^^^\n \n error[E0423]: expected function, tuple struct or tuple variant, found struct `Empty1`\n   --> $DIR/empty-struct-braces-expr.rs:16:14\n@@ -29,15 +29,20 @@ LL | struct Empty1 {}\n ...\n LL |     let e1 = Empty1();\n    |              ^^^^^^^^\n+   | \n+  ::: $DIR/auxiliary/empty-struct.rs:2:1\n    |\n-help: a unit struct with a similar name exists\n+LL | pub struct XEmpty2;\n+   | ------------------- similarly named unit struct `XEmpty2` defined here\n    |\n-LL |     let e1 = XEmpty2();\n-   |              ^^^^^^^\n help: use struct literal syntax instead\n    |\n LL |     let e1 = Empty1 {};\n    |              ^^^^^^^^^\n+help: a unit struct with a similar name exists\n+   |\n+LL |     let e1 = XEmpty2();\n+   |              ^^^^^^^\n \n error[E0423]: expected value, found struct variant `E::Empty3`\n   --> $DIR/empty-struct-braces-expr.rs:18:14\n@@ -68,29 +73,34 @@ LL |     let xe1 = XEmpty1;\n LL | pub struct XEmpty2;\n    | ------------------- similarly named unit struct `XEmpty2` defined here\n    |\n-help: a unit struct with a similar name exists\n-   |\n-LL |     let xe1 = XEmpty2;\n-   |               ^^^^^^^\n help: use struct literal syntax instead\n    |\n LL |     let xe1 = XEmpty1 {};\n    |               ^^^^^^^^^^\n+help: a unit struct with a similar name exists\n+   |\n+LL |     let xe1 = XEmpty2;\n+   |               ^^^^^^^\n \n error[E0423]: expected function, tuple struct or tuple variant, found struct `XEmpty1`\n   --> $DIR/empty-struct-braces-expr.rs:23:15\n    |\n LL |     let xe1 = XEmpty1();\n    |               ^^^^^^^^^\n+   | \n+  ::: $DIR/auxiliary/empty-struct.rs:2:1\n    |\n-help: a unit struct with a similar name exists\n+LL | pub struct XEmpty2;\n+   | ------------------- similarly named unit struct `XEmpty2` defined here\n    |\n-LL |     let xe1 = XEmpty2();\n-   |               ^^^^^^^\n help: use struct literal syntax instead\n    |\n LL |     let xe1 = XEmpty1 {};\n    |               ^^^^^^^^^^\n+help: a unit struct with a similar name exists\n+   |\n+LL |     let xe1 = XEmpty2();\n+   |               ^^^^^^^\n \n error[E0599]: no variant or associated item named `Empty3` found for enum `empty_struct::XE` in the current scope\n   --> $DIR/empty-struct-braces-expr.rs:25:19"}, {"sha": "70847ca45d0fd95604c05cd1683d189f9d7a251c", "filename": "src/test/ui/empty/empty-struct-braces-pat-1.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/eef284be59bbbe50e4d5369542a80e1ccd2ba7ab/src%2Ftest%2Fui%2Fempty%2Fempty-struct-braces-pat-1.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/eef284be59bbbe50e4d5369542a80e1ccd2ba7ab/src%2Ftest%2Fui%2Fempty%2Fempty-struct-braces-pat-1.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fempty%2Fempty-struct-braces-pat-1.stderr?ref=eef284be59bbbe50e4d5369542a80e1ccd2ba7ab", "patch": "@@ -18,14 +18,14 @@ LL |         XE::XEmpty3 => ()\n LL |     XEmpty4,\n    |     ------- similarly named unit variant `XEmpty4` defined here\n    |\n-help: a unit variant with a similar name exists\n-   |\n-LL |         XE::XEmpty4 => ()\n-   |             ^^^^^^^\n help: use struct pattern syntax instead\n    |\n LL |         XE::XEmpty3 { /* fields */ } => ()\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+help: a unit variant with a similar name exists\n+   |\n+LL |         XE::XEmpty4 => ()\n+   |             ^^^^^^^\n \n error: aborting due to 2 previous errors\n "}, {"sha": "19792bc9fc5b8213be333e70e167f5a3197416e5", "filename": "src/test/ui/empty/empty-struct-braces-pat-2.stderr", "status": "modified", "additions": 32, "deletions": 12, "changes": 44, "blob_url": "https://github.com/rust-lang/rust/blob/eef284be59bbbe50e4d5369542a80e1ccd2ba7ab/src%2Ftest%2Fui%2Fempty%2Fempty-struct-braces-pat-2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/eef284be59bbbe50e4d5369542a80e1ccd2ba7ab/src%2Ftest%2Fui%2Fempty%2Fempty-struct-braces-pat-2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fempty%2Fempty-struct-braces-pat-2.stderr?ref=eef284be59bbbe50e4d5369542a80e1ccd2ba7ab", "patch": "@@ -6,30 +6,40 @@ LL | struct Empty1 {}\n ...\n LL |         Empty1() => ()\n    |         ^^^^^^^^\n+   | \n+  ::: $DIR/auxiliary/empty-struct.rs:3:1\n    |\n-help: a tuple struct with a similar name exists\n+LL | pub struct XEmpty6();\n+   | --------------------- similarly named tuple struct `XEmpty6` defined here\n    |\n-LL |         XEmpty6() => ()\n-   |         ^^^^^^^\n help: use struct pattern syntax instead\n    |\n LL |         Empty1 {} => ()\n    |         ^^^^^^^^^\n+help: a tuple struct with a similar name exists\n+   |\n+LL |         XEmpty6() => ()\n+   |         ^^^^^^^\n \n error[E0532]: expected tuple struct or tuple variant, found struct `XEmpty1`\n   --> $DIR/empty-struct-braces-pat-2.rs:18:9\n    |\n LL |         XEmpty1() => ()\n    |         ^^^^^^^^^\n+   | \n+  ::: $DIR/auxiliary/empty-struct.rs:3:1\n    |\n-help: a tuple struct with a similar name exists\n+LL | pub struct XEmpty6();\n+   | --------------------- similarly named tuple struct `XEmpty6` defined here\n    |\n-LL |         XEmpty6() => ()\n-   |         ^^^^^^^\n help: use struct pattern syntax instead\n    |\n LL |         XEmpty1 {} => ()\n    |         ^^^^^^^^^^\n+help: a tuple struct with a similar name exists\n+   |\n+LL |         XEmpty6() => ()\n+   |         ^^^^^^^\n \n error[E0532]: expected tuple struct or tuple variant, found struct `Empty1`\n   --> $DIR/empty-struct-braces-pat-2.rs:21:9\n@@ -39,30 +49,40 @@ LL | struct Empty1 {}\n ...\n LL |         Empty1(..) => ()\n    |         ^^^^^^^^^^\n+   | \n+  ::: $DIR/auxiliary/empty-struct.rs:3:1\n    |\n-help: a tuple struct with a similar name exists\n+LL | pub struct XEmpty6();\n+   | --------------------- similarly named tuple struct `XEmpty6` defined here\n    |\n-LL |         XEmpty6(..) => ()\n-   |         ^^^^^^^\n help: use struct pattern syntax instead\n    |\n LL |         Empty1 {} => ()\n    |         ^^^^^^^^^\n+help: a tuple struct with a similar name exists\n+   |\n+LL |         XEmpty6(..) => ()\n+   |         ^^^^^^^\n \n error[E0532]: expected tuple struct or tuple variant, found struct `XEmpty1`\n   --> $DIR/empty-struct-braces-pat-2.rs:24:9\n    |\n LL |         XEmpty1(..) => ()\n    |         ^^^^^^^^^^^\n+   | \n+  ::: $DIR/auxiliary/empty-struct.rs:3:1\n    |\n-help: a tuple struct with a similar name exists\n+LL | pub struct XEmpty6();\n+   | --------------------- similarly named tuple struct `XEmpty6` defined here\n    |\n-LL |         XEmpty6(..) => ()\n-   |         ^^^^^^^\n help: use struct pattern syntax instead\n    |\n LL |         XEmpty1 {} => ()\n    |         ^^^^^^^^^^\n+help: a tuple struct with a similar name exists\n+   |\n+LL |         XEmpty6(..) => ()\n+   |         ^^^^^^^\n \n error: aborting due to 4 previous errors\n "}, {"sha": "066c42d8181b962a3d7e246327762da08bf376cc", "filename": "src/test/ui/empty/empty-struct-braces-pat-3.stderr", "status": "modified", "additions": 16, "deletions": 6, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/eef284be59bbbe50e4d5369542a80e1ccd2ba7ab/src%2Ftest%2Fui%2Fempty%2Fempty-struct-braces-pat-3.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/eef284be59bbbe50e4d5369542a80e1ccd2ba7ab/src%2Ftest%2Fui%2Fempty%2Fempty-struct-braces-pat-3.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fempty%2Fempty-struct-braces-pat-3.stderr?ref=eef284be59bbbe50e4d5369542a80e1ccd2ba7ab", "patch": "@@ -12,15 +12,20 @@ error[E0532]: expected tuple struct or tuple variant, found struct variant `XE::\n    |\n LL |         XE::XEmpty3() => ()\n    |         ^^^^^^^^^^^^^\n+   | \n+  ::: $DIR/auxiliary/empty-struct.rs:8:5\n    |\n-help: a tuple variant with a similar name exists\n+LL |     XEmpty5(),\n+   |     --------- similarly named tuple variant `XEmpty5` defined here\n    |\n-LL |         XE::XEmpty5() => ()\n-   |             ^^^^^^^\n help: use struct pattern syntax instead\n    |\n LL |         XE::XEmpty3 { /* fields */ } => ()\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+help: a tuple variant with a similar name exists\n+   |\n+LL |         XE::XEmpty5() => ()\n+   |             ^^^^^^^\n \n error[E0532]: expected tuple struct or tuple variant, found struct variant `E::Empty3`\n   --> $DIR/empty-struct-braces-pat-3.rs:25:9\n@@ -36,15 +41,20 @@ error[E0532]: expected tuple struct or tuple variant, found struct variant `XE::\n    |\n LL |         XE::XEmpty3(..) => ()\n    |         ^^^^^^^^^^^^^^^\n+   | \n+  ::: $DIR/auxiliary/empty-struct.rs:8:5\n    |\n-help: a tuple variant with a similar name exists\n+LL |     XEmpty5(),\n+   |     --------- similarly named tuple variant `XEmpty5` defined here\n    |\n-LL |         XE::XEmpty5(..) => ()\n-   |             ^^^^^^^\n help: use struct pattern syntax instead\n    |\n LL |         XE::XEmpty3 { /* fields */ } => ()\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+help: a tuple variant with a similar name exists\n+   |\n+LL |         XE::XEmpty5(..) => ()\n+   |             ^^^^^^^\n \n error: aborting due to 4 previous errors\n "}, {"sha": "e43b3c3546b9b71c5147fa456e704b1db4b2d8c4", "filename": "src/test/ui/error-codes/E0423.stderr", "status": "modified", "additions": 7, "deletions": 4, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/eef284be59bbbe50e4d5369542a80e1ccd2ba7ab/src%2Ftest%2Fui%2Ferror-codes%2FE0423.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/eef284be59bbbe50e4d5369542a80e1ccd2ba7ab/src%2Ftest%2Fui%2Ferror-codes%2FE0423.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ferror-codes%2FE0423.stderr?ref=eef284be59bbbe50e4d5369542a80e1ccd2ba7ab", "patch": "@@ -34,15 +34,18 @@ LL |     struct Foo { a: bool };\n LL | \n LL |     let f = Foo();\n    |             ^^^^^\n+...\n+LL | fn foo() {\n+   | -------- similarly named function `foo` defined here\n    |\n-help: a function with a similar name exists\n-   |\n-LL |     let f = foo();\n-   |             ^^^\n help: use struct literal syntax instead\n    |\n LL |     let f = Foo { a: val };\n    |             ^^^^^^^^^^^^^^\n+help: a function with a similar name exists\n+   |\n+LL |     let f = foo();\n+   |             ^^^\n \n error[E0423]: expected value, found struct `T`\n   --> $DIR/E0423.rs:14:8"}, {"sha": "aa30a7e0d64670b4b2a40411962e261319330bdb", "filename": "src/test/ui/issues/issue-64792-bad-unicode-ctor.stderr", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/eef284be59bbbe50e4d5369542a80e1ccd2ba7ab/src%2Ftest%2Fui%2Fissues%2Fissue-64792-bad-unicode-ctor.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/eef284be59bbbe50e4d5369542a80e1ccd2ba7ab/src%2Ftest%2Fui%2Fissues%2Fissue-64792-bad-unicode-ctor.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-64792-bad-unicode-ctor.stderr?ref=eef284be59bbbe50e4d5369542a80e1ccd2ba7ab", "patch": "@@ -5,16 +5,16 @@ LL | struct X {}\n    | ----------- `X` defined here\n LL | \n LL | const Y: X = X(\"\u00f6\");\n-   |              ^^^^^^\n+   | -------------^^^^^^- similarly named constant `Y` defined here\n    |\n-help: a constant with a similar name exists\n-   |\n-LL | const Y: X = Y(\"\u00f6\");\n-   |              ^\n help: use struct literal syntax instead\n    |\n LL | const Y: X = X {};\n    |              ^^^^\n+help: a constant with a similar name exists\n+   |\n+LL | const Y: X = Y(\"\u00f6\");\n+   |              ^\n \n error: aborting due to previous error\n "}, {"sha": "2e25ffa168f2c9f055c2f111565e86e7d7e307c8", "filename": "src/test/ui/namespace/namespace-mix.stderr", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/eef284be59bbbe50e4d5369542a80e1ccd2ba7ab/src%2Ftest%2Fui%2Fnamespace%2Fnamespace-mix.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/eef284be59bbbe50e4d5369542a80e1ccd2ba7ab/src%2Ftest%2Fui%2Fnamespace%2Fnamespace-mix.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnamespace%2Fnamespace-mix.stderr?ref=eef284be59bbbe50e4d5369542a80e1ccd2ba7ab", "patch": "@@ -53,14 +53,14 @@ LL |         TV(),\n LL |     check(m7::V);\n    |           ^^^^^\n    |\n-help: a tuple variant with a similar name exists\n-   |\n-LL |     check(m7::TV);\n-   |               ^^\n help: use struct literal syntax instead\n    |\n LL |     check(m7::V {});\n    |           ^^^^^^^^\n+help: a tuple variant with a similar name exists\n+   |\n+LL |     check(m7::TV);\n+   |               ^^\n help: consider importing one of these items instead\n    |\n LL | use m8::V;\n@@ -79,14 +79,14 @@ LL |     check(xm7::V);\n LL |         TV(),\n    |         ---- similarly named tuple variant `TV` defined here\n    |\n-help: a tuple variant with a similar name exists\n-   |\n-LL |     check(xm7::TV);\n-   |                ^^\n help: use struct literal syntax instead\n    |\n LL |     check(xm7::V { /* fields */ });\n    |           ^^^^^^^^^^^^^^^^^^^^^^^\n+help: a tuple variant with a similar name exists\n+   |\n+LL |     check(xm7::TV);\n+   |                ^^\n help: consider importing one of these items instead\n    |\n LL | use m8::V;"}, {"sha": "72d66b0f6a2a16e4947f6140c33daebf71e40d19", "filename": "src/test/ui/resolve/issue-39226.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/eef284be59bbbe50e4d5369542a80e1ccd2ba7ab/src%2Ftest%2Fui%2Fresolve%2Fissue-39226.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/eef284be59bbbe50e4d5369542a80e1ccd2ba7ab/src%2Ftest%2Fui%2Fresolve%2Fissue-39226.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fresolve%2Fissue-39226.stderr?ref=eef284be59bbbe50e4d5369542a80e1ccd2ba7ab", "patch": "@@ -7,14 +7,14 @@ LL | struct Handle {}\n LL |         handle: Handle\n    |                 ^^^^^^\n    |\n-help: a local variable with a similar name exists\n-   |\n-LL |         handle: handle\n-   |                 ^^^^^^\n help: use struct literal syntax instead\n    |\n LL |         handle: Handle {}\n    |                 ^^^^^^^^^\n+help: a local variable with a similar name exists\n+   |\n+LL |         handle: handle\n+   |                 ^^^^^^\n \n error: aborting due to previous error\n "}, {"sha": "f3cc338f13c2704d81b8ac6e28cfbd50fda97de2", "filename": "src/test/ui/resolve/privacy-enum-ctor.stderr", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/eef284be59bbbe50e4d5369542a80e1ccd2ba7ab/src%2Ftest%2Fui%2Fresolve%2Fprivacy-enum-ctor.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/eef284be59bbbe50e4d5369542a80e1ccd2ba7ab/src%2Ftest%2Fui%2Fresolve%2Fprivacy-enum-ctor.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fresolve%2Fprivacy-enum-ctor.stderr?ref=eef284be59bbbe50e4d5369542a80e1ccd2ba7ab", "patch": "@@ -22,10 +22,6 @@ LL |     fn f() {\n LL |         Z;\n    |         ^\n    |\n-help: a function with a similar name exists\n-   |\n-LL |         f;\n-   |         ^\n help: try using one of the enum's variants\n    |\n LL |         m::Z::Fn;\n@@ -34,6 +30,10 @@ LL |         m::Z::Struct;\n    |         ^^^^^^^^^^^^\n LL |         m::Z::Unit;\n    |         ^^^^^^^^^^\n+help: a function with a similar name exists\n+   |\n+LL |         f;\n+   |         ^\n \n error[E0423]: expected value, found struct variant `Z::Struct`\n   --> $DIR/privacy-enum-ctor.rs:29:20\n@@ -55,10 +55,6 @@ LL |     fn f() {\n LL |     let _: E = m::E;\n    |                ^^^^\n    |\n-help: a function with a similar name exists\n-   |\n-LL |     let _: E = m::f;\n-   |                   ^\n help: try using one of the enum's variants\n    |\n LL |     let _: E = E::Fn;\n@@ -67,6 +63,10 @@ LL |     let _: E = E::Struct;\n    |                ^^^^^^^^^\n LL |     let _: E = E::Unit;\n    |                ^^^^^^^\n+help: a function with a similar name exists\n+   |\n+LL |     let _: E = m::f;\n+   |                   ^\n help: consider importing one of these items instead\n    |\n LL | use std::f32::consts::E;"}, {"sha": "2d35159ec9a22b3afda928a98bac6842f8e86259", "filename": "src/test/ui/resolve/suggest-path-instead-of-mod-dot-item.stderr", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/eef284be59bbbe50e4d5369542a80e1ccd2ba7ab/src%2Ftest%2Fui%2Fresolve%2Fsuggest-path-instead-of-mod-dot-item.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/eef284be59bbbe50e4d5369542a80e1ccd2ba7ab/src%2Ftest%2Fui%2Fresolve%2Fsuggest-path-instead-of-mod-dot-item.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fresolve%2Fsuggest-path-instead-of-mod-dot-item.stderr?ref=eef284be59bbbe50e4d5369542a80e1ccd2ba7ab", "patch": "@@ -31,14 +31,14 @@ LL |     pub const I: i32 = 1;\n LL |     a::b.J\n    |     ^^^^\n    |\n-help: a constant with a similar name exists\n-   |\n-LL |     a::I.J\n-   |        ^\n help: use the path separator to refer to an item\n    |\n LL |     a::b::J\n    |\n+help: a constant with a similar name exists\n+   |\n+LL |     a::I.J\n+   |        ^\n \n error[E0423]: expected value, found module `a`\n   --> $DIR/suggest-path-instead-of-mod-dot-item.rs:37:5\n@@ -68,14 +68,14 @@ LL |     pub const I: i32 = 1;\n LL |     a::b.f()\n    |     ^^^^\n    |\n-help: a constant with a similar name exists\n-   |\n-LL |     a::I.f()\n-   |        ^\n help: use the path separator to refer to an item\n    |\n LL |     a::b::f()\n    |     ^^^^^^^\n+help: a constant with a similar name exists\n+   |\n+LL |     a::I.f()\n+   |        ^\n \n error[E0423]: expected value, found module `a::b`\n   --> $DIR/suggest-path-instead-of-mod-dot-item.rs:50:5"}, {"sha": "9b2febb1393e13524f4f1538c0551037a146a894", "filename": "src/test/ui/suggestions/fn-or-tuple-struct-without-args.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/eef284be59bbbe50e4d5369542a80e1ccd2ba7ab/src%2Ftest%2Fui%2Fsuggestions%2Ffn-or-tuple-struct-without-args.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/eef284be59bbbe50e4d5369542a80e1ccd2ba7ab/src%2Ftest%2Fui%2Fsuggestions%2Ffn-or-tuple-struct-without-args.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Ffn-or-tuple-struct-without-args.stderr?ref=eef284be59bbbe50e4d5369542a80e1ccd2ba7ab", "patch": "@@ -9,14 +9,14 @@ LL |     B { a: usize },\n LL |     let _: E = E::B;\n    |                ^^^^\n    |\n-help: a tuple variant with a similar name exists\n-   |\n-LL |     let _: E = E::A;\n-   |                   ^\n help: use struct literal syntax instead\n    |\n LL |     let _: E = E::B { a: val };\n    |                ^^^^^^^^^^^^^^^\n+help: a tuple variant with a similar name exists\n+   |\n+LL |     let _: E = E::A;\n+   |                   ^\n \n error[E0308]: mismatched types\n   --> $DIR/fn-or-tuple-struct-without-args.rs:29:20"}, {"sha": "d78fd08fd606559bd2c4ea44da72d9d06977747f", "filename": "src/test/ui/type/type-ascription-with-fn-call.stderr", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/eef284be59bbbe50e4d5369542a80e1ccd2ba7ab/src%2Ftest%2Fui%2Ftype%2Ftype-ascription-with-fn-call.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/eef284be59bbbe50e4d5369542a80e1ccd2ba7ab/src%2Ftest%2Fui%2Ftype%2Ftype-ascription-with-fn-call.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftype%2Ftype-ascription-with-fn-call.stderr?ref=eef284be59bbbe50e4d5369542a80e1ccd2ba7ab", "patch": "@@ -4,10 +4,7 @@ error[E0573]: expected type, found function `f`\n LL |     f()  :\n    |          - help: maybe you meant to write `;` here\n LL |     f();\n-   |     ^^^\n-   |     |\n-   |     not a type\n-   |     expecting a type here because of type ascription\n+   |     ^^^ expecting a type here because of type ascription\n \n error: aborting due to previous error\n "}]}