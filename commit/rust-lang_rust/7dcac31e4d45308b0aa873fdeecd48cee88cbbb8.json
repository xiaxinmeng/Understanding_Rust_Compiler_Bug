{"sha": "7dcac31e4d45308b0aa873fdeecd48cee88cbbb8", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdkY2FjMzFlNGQ0NTMwOGIwYWE4NzNmZGVlY2Q0OGNlZTg4Y2JiYjg=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-03-18T01:33:48Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-03-19T01:18:18Z"}, "message": "rt: Remove rust_task_thread::dead_tasks", "tree": {"sha": "d8f25b3f35c16c4209dcae4f77922ef8984240e5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d8f25b3f35c16c4209dcae4f77922ef8984240e5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7dcac31e4d45308b0aa873fdeecd48cee88cbbb8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7dcac31e4d45308b0aa873fdeecd48cee88cbbb8", "html_url": "https://github.com/rust-lang/rust/commit/7dcac31e4d45308b0aa873fdeecd48cee88cbbb8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7dcac31e4d45308b0aa873fdeecd48cee88cbbb8/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6f6650e72645dc4eb16696f10f3a047e98722762", "url": "https://api.github.com/repos/rust-lang/rust/commits/6f6650e72645dc4eb16696f10f3a047e98722762", "html_url": "https://github.com/rust-lang/rust/commit/6f6650e72645dc4eb16696f10f3a047e98722762"}], "stats": {"total": 30, "additions": 10, "deletions": 20}, "files": [{"sha": "6b490a2404b05449f2c6d55d3136dbc379c9cb8e", "filename": "src/rt/rust_task_thread.cpp", "status": "modified", "additions": 9, "deletions": 19, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/7dcac31e4d45308b0aa873fdeecd48cee88cbbb8/src%2Frt%2Frust_task_thread.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/7dcac31e4d45308b0aa873fdeecd48cee88cbbb8/src%2Frt%2Frust_task_thread.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_task_thread.cpp?ref=7dcac31e4d45308b0aa873fdeecd48cee88cbbb8", "patch": "@@ -27,6 +27,7 @@ rust_task_thread::rust_task_thread(rust_scheduler *sched,\n     id(id),\n     should_exit(false),\n     cached_c_stack(NULL),\n+    dead_task(NULL),\n     kernel(sched->kernel),\n     sched(sched),\n     srv(srv),\n@@ -108,23 +109,18 @@ rust_task_thread::number_of_live_tasks() {\n  */\n void\n rust_task_thread::reap_dead_tasks() {\n-    if (dead_tasks.length() == 0) {\n+    if (dead_task == NULL) {\n         return;\n     }\n \n-    A(this, dead_tasks.length() == 1,\n-      \"Only one task should die during a single turn of the event loop\");\n-\n-    // First make a copy of the dead_task list with the lock held\n-    rust_task *dead_task = dead_tasks.pop_value();\n-\n     // Dereferencing the task will probably cause it to be released\n     // from the scheduler, which may end up trying to take this lock\n     lock.unlock();\n \n     dead_task->delete_all_stacks();\n     // Deref the task, which may cause it to request us to release it\n     dead_task->deref();\n+    dead_task = NULL;\n \n     lock.lock();\n }\n@@ -187,14 +183,6 @@ rust_task_thread::log_state() {\n                 blocked_tasks[i]->get_cond_name());\n         }\n     }\n-\n-    if (!dead_tasks.is_empty()) {\n-        log(NULL, log_debug, \"dead tasks:\");\n-        for (size_t i = 0; i < dead_tasks.length(); i++) {\n-            log(NULL, log_debug, \"\\t task: %s 0x%\" PRIxPTR,\n-                dead_tasks[i]->name, dead_tasks[i]);\n-        }\n-    }\n }\n /**\n  * Starts the main scheduler loop which performs task scheduling for this\n@@ -221,7 +209,7 @@ rust_task_thread::start_main_loop() {\n                  \"all tasks are blocked, scheduler id %d yielding ...\",\n                  id);\n             lock.wait();\n-            A(this, dead_tasks.length() == 0,\n+            A(this, dead_task == NULL,\n               \"Tasks should only die after running\");\n             DLOG(this, task,\n                  \"scheduler %d resuming ...\", id);\n@@ -257,7 +245,7 @@ rust_task_thread::start_main_loop() {\n \n     A(this, running_tasks.is_empty(), \"Should have no running tasks\");\n     A(this, blocked_tasks.is_empty(), \"Should have no blocked tasks\");\n-    A(this, dead_tasks.is_empty(), \"Should have no dead tasks\");\n+    A(this, dead_task == NULL, \"Should have no dead tasks\");\n \n     DLOG(this, dom, \"finished main-loop %d\", id);\n \n@@ -290,8 +278,6 @@ rust_task_thread::state_list(rust_task_state state) {\n         return &running_tasks;\n     case task_state_blocked:\n         return &blocked_tasks;\n-    case task_state_dead:\n-        return &dead_tasks;\n     default:\n         return NULL;\n     }\n@@ -332,6 +318,10 @@ rust_task_thread::transition(rust_task *task,\n     if (dst_list) {\n         dst_list->append(task);\n     }\n+    if (dst == task_state_dead) {\n+        I(this, dead_task == NULL);\n+        dead_task = task;\n+    }\n     task->set_state(dst, cond, cond_name);\n \n     lock.signal();"}, {"sha": "377d8af9fdbf5173a7a38b0f5290a14f60f9db45", "filename": "src/rt/rust_task_thread.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7dcac31e4d45308b0aa873fdeecd48cee88cbbb8/src%2Frt%2Frust_task_thread.h", "raw_url": "https://github.com/rust-lang/rust/raw/7dcac31e4d45308b0aa873fdeecd48cee88cbbb8/src%2Frt%2Frust_task_thread.h", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_task_thread.h?ref=7dcac31e4d45308b0aa873fdeecd48cee88cbbb8", "patch": "@@ -49,7 +49,7 @@ struct rust_task_thread : public kernel_owned<rust_task_thread>,\n \n     rust_task_list running_tasks;\n     rust_task_list blocked_tasks;\n-    rust_task_list dead_tasks;\n+    rust_task *dead_task;\n \n     void prepare_c_stack(rust_task *task);\n     void unprepare_c_stack();"}]}