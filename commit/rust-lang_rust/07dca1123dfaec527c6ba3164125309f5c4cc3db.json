{"sha": "07dca1123dfaec527c6ba3164125309f5c4cc3db", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA3ZGNhMTEyM2RmYWVjNTI3YzZiYTMxNjQxMjUzMDlmNWM0Y2MzZGI=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2020-01-17T10:50:06Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-01-17T10:50:06Z"}, "message": "Merge #2867\n\n2867: Nest attrs into exprs in function args r=matklad a=matklad\n\n\n\nCo-authored-by: Aleksey Kladov <aleksey.kladov@gmail.com>", "tree": {"sha": "36e66272f2da663034059df83f299e20c84d27de", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/36e66272f2da663034059df83f299e20c84d27de"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/07dca1123dfaec527c6ba3164125309f5c4cc3db", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJeIZFeCRBK7hj4Ov3rIwAAdHIIADqTSsDqHaQq8XIYiY7VgClS\nijw1hp3Ph5LQlViStkQkRb3rEdRZxlnrlg2KZ82u2fIHucJ6yTimWrsoM15XHHt0\nkd5FRJ1gbFMPfOsPA/Zc0v4iGDkCCVwF+s4t3qUjg7A0oIh1s0df0gpP4JR4jEps\nSJNBLTDuzZA3XUKnmMQU4qcxCtHLcyTbtvEniearSQpmqO0hUWJpkkivXvzOtY63\naLT8d0/mhvf+7LVtoBspE9ohPh4m8Oh1uRJ4OK6uptkRssH5NOayVE61NqCq9PXL\n05f9A/ZZfDDGk6B1f7vDv1mtK7oOkq7OvNx9y7sITdP5LBxLmmiEZCgnYwd64ME=\n=zSct\n-----END PGP SIGNATURE-----\n", "payload": "tree 36e66272f2da663034059df83f299e20c84d27de\nparent 90b8a31b83b1aafc3fb555ba4307527f9258f46d\nparent 3a859e587f3bcf9f49293bd1f2b2d19cdfd2be4b\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1579258206 +0000\ncommitter GitHub <noreply@github.com> 1579258206 +0000\n\nMerge #2867\n\n2867: Nest attrs into exprs in function args r=matklad a=matklad\n\n\n\nCo-authored-by: Aleksey Kladov <aleksey.kladov@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/07dca1123dfaec527c6ba3164125309f5c4cc3db", "html_url": "https://github.com/rust-lang/rust/commit/07dca1123dfaec527c6ba3164125309f5c4cc3db", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/07dca1123dfaec527c6ba3164125309f5c4cc3db/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "90b8a31b83b1aafc3fb555ba4307527f9258f46d", "url": "https://api.github.com/repos/rust-lang/rust/commits/90b8a31b83b1aafc3fb555ba4307527f9258f46d", "html_url": "https://github.com/rust-lang/rust/commit/90b8a31b83b1aafc3fb555ba4307527f9258f46d"}, {"sha": "3a859e587f3bcf9f49293bd1f2b2d19cdfd2be4b", "url": "https://api.github.com/repos/rust-lang/rust/commits/3a859e587f3bcf9f49293bd1f2b2d19cdfd2be4b", "html_url": "https://github.com/rust-lang/rust/commit/3a859e587f3bcf9f49293bd1f2b2d19cdfd2be4b"}], "stats": {"total": 114, "additions": 59, "deletions": 55}, "files": [{"sha": "06c92645e06ef0638d5af244f7e771d4e01d4012", "filename": "crates/ra_parser/src/grammar/expressions.rs", "status": "modified", "additions": 21, "deletions": 4, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/07dca1123dfaec527c6ba3164125309f5c4cc3db/crates%2Fra_parser%2Fsrc%2Fgrammar%2Fexpressions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/07dca1123dfaec527c6ba3164125309f5c4cc3db/crates%2Fra_parser%2Fsrc%2Fgrammar%2Fexpressions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_parser%2Fsrc%2Fgrammar%2Fexpressions.rs?ref=07dca1123dfaec527c6ba3164125309f5c4cc3db", "patch": "@@ -19,6 +19,26 @@ pub(super) fn expr(p: &mut Parser) -> (Option<CompletedMarker>, BlockLike) {\n     expr_bp(p, r, 1)\n }\n \n+pub(super) fn expr_with_attrs(p: &mut Parser) -> bool {\n+    let m = p.start();\n+    let has_attrs = p.at(T![#]);\n+    attributes::outer_attributes(p);\n+\n+    let (cm, _block_like) = expr(p);\n+    let success = cm.is_some();\n+\n+    match (has_attrs, cm) {\n+        (true, Some(cm)) => {\n+            let kind = cm.kind();\n+            cm.undo_completion(p).abandon(p);\n+            m.complete(p, kind);\n+        }\n+        _ => m.abandon(p),\n+    }\n+\n+    success\n+}\n+\n pub(super) fn expr_stmt(p: &mut Parser) -> (Option<CompletedMarker>, BlockLike) {\n     let r = Restrictions { forbid_structs: false, prefer_stmt: true };\n     expr_bp(p, r, 1)\n@@ -544,12 +564,9 @@ fn arg_list(p: &mut Parser) {\n         // fn main() {\n         //     foo(#[attr] 92)\n         // }\n-        attributes::outer_attributes(p);\n-        if !p.at_ts(EXPR_FIRST) {\n-            p.error(\"expected expression\");\n+        if !expr_with_attrs(p) {\n             break;\n         }\n-        expr(p);\n         if !p.at(T![')']) && !p.expect(T![,]) {\n             break;\n         }"}, {"sha": "2cc321473aa51674edb66e16fd7b3a072116e014", "filename": "crates/ra_parser/src/grammar/expressions/atom.rs", "status": "modified", "additions": 2, "deletions": 13, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/07dca1123dfaec527c6ba3164125309f5c4cc3db/crates%2Fra_parser%2Fsrc%2Fgrammar%2Fexpressions%2Fatom.rs", "raw_url": "https://github.com/rust-lang/rust/raw/07dca1123dfaec527c6ba3164125309f5c4cc3db/crates%2Fra_parser%2Fsrc%2Fgrammar%2Fexpressions%2Fatom.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_parser%2Fsrc%2Fgrammar%2Fexpressions%2Fatom.rs?ref=07dca1123dfaec527c6ba3164125309f5c4cc3db", "patch": "@@ -191,19 +191,8 @@ fn array_expr(p: &mut Parser) -> CompletedMarker {\n \n         // test array_attrs\n         // const A: &[i64] = &[1, #[cfg(test)] 2];\n-        let m = p.start();\n-        let has_attrs = p.at(T![#]);\n-        attributes::outer_attributes(p);\n-\n-        let cm = expr(p).0;\n-\n-        match (has_attrs, cm) {\n-            (true, Some(cm)) => {\n-                let kind = cm.kind();\n-                cm.undo_completion(p).abandon(p);\n-                m.complete(p, kind);\n-            }\n-            _ => m.abandon(p),\n+        if !expr_with_attrs(p) {\n+            break;\n         }\n \n         if n_exprs == 1 && p.eat(T![;]) {"}, {"sha": "cb45eb2fc2028aadd036330717eccf3f65f8da73", "filename": "crates/ra_syntax/test_data/parser/err/0022_bad_exprs.txt", "status": "modified", "additions": 26, "deletions": 28, "changes": 54, "blob_url": "https://github.com/rust-lang/rust/blob/07dca1123dfaec527c6ba3164125309f5c4cc3db/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0022_bad_exprs.txt", "raw_url": "https://github.com/rust-lang/rust/raw/07dca1123dfaec527c6ba3164125309f5c4cc3db/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0022_bad_exprs.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0022_bad_exprs.txt?ref=07dca1123dfaec527c6ba3164125309f5c4cc3db", "patch": "@@ -12,8 +12,8 @@ SOURCE_FILE@[0; 112)\n       BLOCK@[7; 33)\n         L_CURLY@[7; 8) \"{\"\n         WHITESPACE@[8; 9) \" \"\n-        EXPR_STMT@[9; 26)\n-          ARRAY_EXPR@[9; 26)\n+        EXPR_STMT@[9; 17)\n+          ARRAY_EXPR@[9; 17)\n             L_BRACK@[9; 10) \"[\"\n             LITERAL@[10; 11)\n               INT_NUMBER@[10; 11) \"1\"\n@@ -25,10 +25,13 @@ SOURCE_FILE@[0; 112)\n             WHITESPACE@[15; 16) \" \"\n             ERROR@[16; 17)\n               AT@[16; 17) \"@\"\n+        EXPR_STMT@[17; 18)\n+          ERROR@[17; 18)\n             COMMA@[17; 18) \",\"\n-            WHITESPACE@[18; 19) \" \"\n-            ERROR@[19; 25)\n-              STRUCT_KW@[19; 25) \"struct\"\n+        WHITESPACE@[18; 19) \" \"\n+        STRUCT_DEF@[19; 26)\n+          STRUCT_KW@[19; 25) \"struct\"\n+          ERROR@[25; 26)\n             COMMA@[25; 26) \",\"\n         WHITESPACE@[26; 27) \" \"\n         LET_STMT@[27; 31)\n@@ -51,14 +54,14 @@ SOURCE_FILE@[0; 112)\n       BLOCK@[41; 68)\n         L_CURLY@[41; 42) \"{\"\n         WHITESPACE@[42; 43) \" \"\n-        EXPR_STMT@[43; 52)\n-          CALL_EXPR@[43; 52)\n+        EXPR_STMT@[43; 54)\n+          CALL_EXPR@[43; 54)\n             PATH_EXPR@[43; 46)\n               PATH@[43; 46)\n                 PATH_SEGMENT@[43; 46)\n                   NAME_REF@[43; 46)\n                     IDENT@[43; 46) \"foo\"\n-            ARG_LIST@[46; 52)\n+            ARG_LIST@[46; 54)\n               L_PAREN@[46; 47) \"(\"\n               LITERAL@[47; 48)\n                 INT_NUMBER@[47; 48) \"1\"\n@@ -67,10 +70,9 @@ SOURCE_FILE@[0; 112)\n               LITERAL@[50; 51)\n                 INT_NUMBER@[50; 51) \"2\"\n               COMMA@[51; 52) \",\"\n-        WHITESPACE@[52; 53) \" \"\n-        EXPR_STMT@[53; 54)\n-          ERROR@[53; 54)\n-            AT@[53; 54) \"@\"\n+              WHITESPACE@[52; 53) \" \"\n+              ERROR@[53; 54)\n+                AT@[53; 54) \"@\"\n         EXPR_STMT@[54; 55)\n           ERROR@[54; 55)\n             COMMA@[54; 55) \",\"\n@@ -101,8 +103,8 @@ SOURCE_FILE@[0; 112)\n       BLOCK@[76; 111)\n         L_CURLY@[76; 77) \"{\"\n         WHITESPACE@[77; 78) \" \"\n-        EXPR_STMT@[78; 91)\n-          METHOD_CALL_EXPR@[78; 91)\n+        EXPR_STMT@[78; 93)\n+          METHOD_CALL_EXPR@[78; 93)\n             PATH_EXPR@[78; 81)\n               PATH@[78; 81)\n                 PATH_SEGMENT@[78; 81)\n@@ -111,7 +113,7 @@ SOURCE_FILE@[0; 112)\n             DOT@[81; 82) \".\"\n             NAME_REF@[82; 85)\n               IDENT@[82; 85) \"bar\"\n-            ARG_LIST@[85; 91)\n+            ARG_LIST@[85; 93)\n               L_PAREN@[85; 86) \"(\"\n               LITERAL@[86; 87)\n                 INT_NUMBER@[86; 87) \"1\"\n@@ -120,10 +122,9 @@ SOURCE_FILE@[0; 112)\n               LITERAL@[89; 90)\n                 INT_NUMBER@[89; 90) \"2\"\n               COMMA@[90; 91) \",\"\n-        WHITESPACE@[91; 92) \" \"\n-        EXPR_STMT@[92; 93)\n-          ERROR@[92; 93)\n-            AT@[92; 93) \"@\"\n+              WHITESPACE@[91; 92) \" \"\n+              ERROR@[92; 93)\n+                AT@[92; 93) \"@\"\n         EXPR_STMT@[93; 94)\n           ERROR@[93; 94)\n             COMMA@[93; 94) \",\"\n@@ -148,15 +149,14 @@ SOURCE_FILE@[0; 112)\n         R_CURLY@[110; 111) \"}\"\n   WHITESPACE@[111; 112) \"\\n\"\n error 16: expected expression\n-error 19: expected expression\n-error 26: expected expression\n-error 26: expected COMMA\n-error 26: expected R_BRACK\n-error 26: expected SEMI\n+error 17: expected R_BRACK\n+error 17: expected SEMI\n+error 17: expected expression\n+error 18: expected SEMI\n+error 25: expected a name\n+error 26: expected `;`, `{`, or `(`\n error 30: expected pattern\n error 31: expected SEMI\n-error 52: expected expression\n-error 52: expected SEMI\n error 53: expected expression\n error 54: expected SEMI\n error 54: expected expression\n@@ -168,8 +168,6 @@ error 61: expected SEMI\n error 65: expected pattern\n error 65: expected SEMI\n error 65: expected expression\n-error 91: expected expression\n-error 91: expected SEMI\n error 92: expected expression\n error 93: expected SEMI\n error 93: expected expression"}, {"sha": "8092d700991a27a46009ff7bc33e84c1ce30bcae", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0152_arg_with_attr.txt", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/07dca1123dfaec527c6ba3164125309f5c4cc3db/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0152_arg_with_attr.txt", "raw_url": "https://github.com/rust-lang/rust/raw/07dca1123dfaec527c6ba3164125309f5c4cc3db/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0152_arg_with_attr.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0152_arg_with_attr.txt?ref=07dca1123dfaec527c6ba3164125309f5c4cc3db", "patch": "@@ -20,16 +20,16 @@ SOURCE_FILE@[0; 34)\n                   IDENT@[16; 19) \"foo\"\n           ARG_LIST@[19; 31)\n             L_PAREN@[19; 20) \"(\"\n-            ATTR@[20; 27)\n-              POUND@[20; 21) \"#\"\n-              L_BRACK@[21; 22) \"[\"\n-              PATH@[22; 26)\n-                PATH_SEGMENT@[22; 26)\n-                  NAME_REF@[22; 26)\n-                    IDENT@[22; 26) \"attr\"\n-              R_BRACK@[26; 27) \"]\"\n-            WHITESPACE@[27; 28) \" \"\n-            LITERAL@[28; 30)\n+            LITERAL@[20; 30)\n+              ATTR@[20; 27)\n+                POUND@[20; 21) \"#\"\n+                L_BRACK@[21; 22) \"[\"\n+                PATH@[22; 26)\n+                  PATH_SEGMENT@[22; 26)\n+                    NAME_REF@[22; 26)\n+                      IDENT@[22; 26) \"attr\"\n+                R_BRACK@[26; 27) \"]\"\n+              WHITESPACE@[27; 28) \" \"\n               INT_NUMBER@[28; 30) \"92\"\n             R_PAREN@[30; 31) \")\"\n         WHITESPACE@[31; 32) \"\\n\""}]}