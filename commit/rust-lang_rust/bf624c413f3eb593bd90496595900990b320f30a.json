{"sha": "bf624c413f3eb593bd90496595900990b320f30a", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJmNjI0YzQxM2YzZWI1OTNiZDkwNDk2NTk1OTAwOTkwYjMyMGYzMGE=", "commit": {"author": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2016-04-16T10:11:18Z"}, "committer": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2016-04-21T08:42:25Z"}, "message": "improve tidy to give you file that failed\n\nthe current tidy panics give you no idea why it failed", "tree": {"sha": "50bc60364ad9f6273895932d3389c60ed33a1606", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/50bc60364ad9f6273895932d3389c60ed33a1606"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bf624c413f3eb593bd90496595900990b320f30a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bf624c413f3eb593bd90496595900990b320f30a", "html_url": "https://github.com/rust-lang/rust/commit/bf624c413f3eb593bd90496595900990b320f30a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bf624c413f3eb593bd90496595900990b320f30a/comments", "author": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "01d2b4ab6bdb33e8678c43612b81dbbbad32cc93", "url": "https://api.github.com/repos/rust-lang/rust/commits/01d2b4ab6bdb33e8678c43612b81dbbbad32cc93", "html_url": "https://github.com/rust-lang/rust/commit/01d2b4ab6bdb33e8678c43612b81dbbbad32cc93"}], "stats": {"total": 13, "additions": 9, "deletions": 4}, "files": [{"sha": "43475f203d57ced698b2b34c4b25cc9c255e7c2e", "filename": "src/tools/tidy/src/bins.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bf624c413f3eb593bd90496595900990b320f30a/src%2Ftools%2Ftidy%2Fsrc%2Fbins.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bf624c413f3eb593bd90496595900990b320f30a/src%2Ftools%2Ftidy%2Fsrc%2Fbins.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Ftidy%2Fsrc%2Fbins.rs?ref=bf624c413f3eb593bd90496595900990b320f30a", "patch": "@@ -35,7 +35,7 @@ pub fn check(path: &Path, bad: &mut bool) {\n             return\n         }\n \n-        let metadata = t!(fs::metadata(&file));\n+        let metadata = t!(fs::metadata(&file), &file);\n         if metadata.mode() & 0o111 != 0 {\n             println!(\"binary checked into source: {}\", file.display());\n             *bad = true;"}, {"sha": "77dcf9c1bd81fdb180b5e35b1e166a5cc096c6b5", "filename": "src/tools/tidy/src/cargo.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bf624c413f3eb593bd90496595900990b320f30a/src%2Ftools%2Ftidy%2Fsrc%2Fcargo.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bf624c413f3eb593bd90496595900990b320f30a/src%2Ftools%2Ftidy%2Fsrc%2Fcargo.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Ftidy%2Fsrc%2Fcargo.rs?ref=bf624c413f3eb593bd90496595900990b320f30a", "patch": "@@ -20,7 +20,7 @@ use std::fs::File;\n use std::path::Path;\n \n pub fn check(path: &Path, bad: &mut bool) {\n-    for entry in t!(path.read_dir()).map(|e| t!(e)) {\n+    for entry in t!(path.read_dir(), path).map(|e| t!(e)) {\n         // Look for `Cargo.toml` with a sibling `src/lib.rs` or `lib.rs`\n         if entry.file_name().to_str() == Some(\"Cargo.toml\") {\n             if path.join(\"src/lib.rs\").is_file() {"}, {"sha": "e9e2508aba9bd022ec700ae8d73f2de8c586746d", "filename": "src/tools/tidy/src/main.rs", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/bf624c413f3eb593bd90496595900990b320f30a/src%2Ftools%2Ftidy%2Fsrc%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bf624c413f3eb593bd90496595900990b320f30a/src%2Ftools%2Ftidy%2Fsrc%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Ftidy%2Fsrc%2Fmain.rs?ref=bf624c413f3eb593bd90496595900990b320f30a", "patch": "@@ -19,6 +19,11 @@ use std::path::{PathBuf, Path};\n use std::env;\n \n macro_rules! t {\n+    ($e:expr, $p:expr) => (match $e {\n+        Ok(e) => e,\n+        Err(e) => panic!(\"{} failed on {} with {}\", stringify!($e), ($p).display(), e),\n+    });\n+\n     ($e:expr) => (match $e {\n         Ok(e) => e,\n         Err(e) => panic!(\"{} failed with {}\", stringify!($e), e),\n@@ -63,7 +68,7 @@ fn filter_dirs(path: &Path) -> bool {\n \n \n fn walk(path: &Path, skip: &mut FnMut(&Path) -> bool, f: &mut FnMut(&Path)) {\n-    for entry in t!(fs::read_dir(path)) {\n+    for entry in t!(fs::read_dir(path), path) {\n         let entry = t!(entry);\n         let kind = t!(entry.file_type());\n         let path = entry.path();"}, {"sha": "61230b3b030e53818112bb92c0b65809fafcfa79", "filename": "src/tools/tidy/src/style.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bf624c413f3eb593bd90496595900990b320f30a/src%2Ftools%2Ftidy%2Fsrc%2Fstyle.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bf624c413f3eb593bd90496595900990b320f30a/src%2Ftools%2Ftidy%2Fsrc%2Fstyle.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Ftidy%2Fsrc%2Fstyle.rs?ref=bf624c413f3eb593bd90496595900990b320f30a", "patch": "@@ -52,7 +52,7 @@ pub fn check(path: &Path, bad: &mut bool) {\n         }\n \n         contents.truncate(0);\n-        t!(t!(File::open(file)).read_to_string(&mut contents));\n+        t!(t!(File::open(file), file).read_to_string(&mut contents));\n         let skip_cr = contents.contains(\"ignore-tidy-cr\");\n         let skip_tab = contents.contains(\"ignore-tidy-tab\");\n         let skip_length = contents.contains(\"ignore-tidy-linelength\");"}]}