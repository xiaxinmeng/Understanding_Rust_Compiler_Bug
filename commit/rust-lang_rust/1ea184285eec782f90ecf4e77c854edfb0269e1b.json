{"sha": "1ea184285eec782f90ecf4e77c854edfb0269e1b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFlYTE4NDI4NWVlYzc4MmY5MGVjZjRlNzdjODU0ZWRmYjAyNjllMWI=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-02-03T02:30:04Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-02-03T02:30:06Z"}, "message": "rt: Change the win32 event object to an auto-reset event\n\nThe way I read the docs, having this be a manual reset event means\nthat after the first time it's signalled it stays that way until reset,\nand we never, ever reset it.", "tree": {"sha": "9dc6c507ffb2a1128e475296ca2af2b234de8e57", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9dc6c507ffb2a1128e475296ca2af2b234de8e57"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1ea184285eec782f90ecf4e77c854edfb0269e1b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1ea184285eec782f90ecf4e77c854edfb0269e1b", "html_url": "https://github.com/rust-lang/rust/commit/1ea184285eec782f90ecf4e77c854edfb0269e1b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1ea184285eec782f90ecf4e77c854edfb0269e1b/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3b4dd26ff1ac2bea0dec22ea35f1b0a850f4ecb4", "url": "https://api.github.com/repos/rust-lang/rust/commits/3b4dd26ff1ac2bea0dec22ea35f1b0a850f4ecb4", "html_url": "https://github.com/rust-lang/rust/commit/3b4dd26ff1ac2bea0dec22ea35f1b0a850f4ecb4"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "f9d40681a60a40fcffccd22ca3670e9c174740d2", "filename": "src/rt/sync/lock_and_signal.cpp", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1ea184285eec782f90ecf4e77c854edfb0269e1b/src%2Frt%2Fsync%2Flock_and_signal.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/1ea184285eec782f90ecf4e77c854edfb0269e1b/src%2Frt%2Fsync%2Flock_and_signal.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Fsync%2Flock_and_signal.cpp?ref=1ea184285eec782f90ecf4e77c854edfb0269e1b", "patch": "@@ -18,7 +18,7 @@\n lock_and_signal::lock_and_signal()\n     : _holding_thread(INVALID_THREAD)\n {\n-    _event = CreateEvent(NULL, TRUE, FALSE, NULL);\n+    _event = CreateEvent(NULL, FALSE, FALSE, NULL);\n     InitializeCriticalSection(&_cs);\n }\n "}]}