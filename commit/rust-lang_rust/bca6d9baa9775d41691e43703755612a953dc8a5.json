{"sha": "bca6d9baa9775d41691e43703755612a953dc8a5", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJjYTZkOWJhYTk3NzVkNDE2OTFlNDM3MDM3NTU2MTJhOTUzZGM4YTU=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-06-26T02:28:45Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-06-26T02:28:45Z"}, "message": "Auto merge of #86622 - FabianWolff:issue-83475, r=jonas-schievink\n\nCheck that `#[cmse_nonsecure_entry]` is applied to a function definition\n\nThis PR fixes #83475. The compiler currently neglects to check whether `#[cmse_nonsecure_entry]` is applied to a function (and not, say, a struct) definition, leading to an ICE later on when the type checker attempts to retrieve the function signature. I have fixed this problem by adding an appropriate check to the `check_attr` pass, so that an error is reported instead of an ICE.", "tree": {"sha": "0f153e69c8e5de940a49af81e3d11328eca0bdd3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0f153e69c8e5de940a49af81e3d11328eca0bdd3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bca6d9baa9775d41691e43703755612a953dc8a5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bca6d9baa9775d41691e43703755612a953dc8a5", "html_url": "https://github.com/rust-lang/rust/commit/bca6d9baa9775d41691e43703755612a953dc8a5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bca6d9baa9775d41691e43703755612a953dc8a5/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "dd1525a021a6639a7976129abe525ad00defff59", "url": "https://api.github.com/repos/rust-lang/rust/commits/dd1525a021a6639a7976129abe525ad00defff59", "html_url": "https://github.com/rust-lang/rust/commit/dd1525a021a6639a7976129abe525ad00defff59"}, {"sha": "499afcdfcf1ad9e819b0fae35aac7f8e8730f045", "url": "https://api.github.com/repos/rust-lang/rust/commits/499afcdfcf1ad9e819b0fae35aac7f8e8730f045", "html_url": "https://github.com/rust-lang/rust/commit/499afcdfcf1ad9e819b0fae35aac7f8e8730f045"}], "stats": {"total": 40, "additions": 40, "deletions": 0}, "files": [{"sha": "d0795841c5359b30f382f27ab27fbaffb3c0ab62", "filename": "compiler/rustc_passes/src/check_attr.rs", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/bca6d9baa9775d41691e43703755612a953dc8a5/compiler%2Frustc_passes%2Fsrc%2Fcheck_attr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bca6d9baa9775d41691e43703755612a953dc8a5/compiler%2Frustc_passes%2Fsrc%2Fcheck_attr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_passes%2Fsrc%2Fcheck_attr.rs?ref=bca6d9baa9775d41691e43703755612a953dc8a5", "patch": "@@ -97,6 +97,7 @@ impl CheckAttrVisitor<'tcx> {\n                 | sym::rustc_dirty\n                 | sym::rustc_if_this_changed\n                 | sym::rustc_then_this_would_need => self.check_rustc_dirty_clean(&attr),\n+                sym::cmse_nonsecure_entry => self.check_cmse_nonsecure_entry(attr, span, target),\n                 _ => true,\n             };\n             // lint-only checks\n@@ -234,6 +235,25 @@ impl CheckAttrVisitor<'tcx> {\n         }\n     }\n \n+    /// Checks if `#[cmse_nonsecure_entry]` is applied to a function definition.\n+    fn check_cmse_nonsecure_entry(&self, attr: &Attribute, span: &Span, target: Target) -> bool {\n+        match target {\n+            Target::Fn\n+            | Target::Method(MethodKind::Trait { body: true } | MethodKind::Inherent) => true,\n+            _ => {\n+                self.tcx\n+                    .sess\n+                    .struct_span_err(\n+                        attr.span,\n+                        \"attribute should be applied to a function definition\",\n+                    )\n+                    .span_label(*span, \"not a function definition\")\n+                    .emit();\n+                false\n+            }\n+        }\n+    }\n+\n     /// Checks if a `#[track_caller]` is applied to a non-naked function. Returns `true` if valid.\n     fn check_track_caller(\n         &self,"}, {"sha": "a839406cd0aaf9103cf57c0a0d2961ed7eb44f45", "filename": "src/test/ui/cmse-nonsecure/cmse-nonsecure-entry/issue-83475.rs", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/bca6d9baa9775d41691e43703755612a953dc8a5/src%2Ftest%2Fui%2Fcmse-nonsecure%2Fcmse-nonsecure-entry%2Fissue-83475.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bca6d9baa9775d41691e43703755612a953dc8a5/src%2Ftest%2Fui%2Fcmse-nonsecure%2Fcmse-nonsecure-entry%2Fissue-83475.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcmse-nonsecure%2Fcmse-nonsecure-entry%2Fissue-83475.rs?ref=bca6d9baa9775d41691e43703755612a953dc8a5", "patch": "@@ -0,0 +1,9 @@\n+// Regression test for the ICE described in #83475.\n+\n+#![crate_type=\"lib\"]\n+\n+#![feature(cmse_nonsecure_entry)]\n+#[cmse_nonsecure_entry]\n+//~^ ERROR: attribute should be applied to a function definition\n+struct XEmpty2;\n+//~^ NOTE: not a function definition"}, {"sha": "426d82d8d0753226ca67108cb41303bffac4d662", "filename": "src/test/ui/cmse-nonsecure/cmse-nonsecure-entry/issue-83475.stderr", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/bca6d9baa9775d41691e43703755612a953dc8a5/src%2Ftest%2Fui%2Fcmse-nonsecure%2Fcmse-nonsecure-entry%2Fissue-83475.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/bca6d9baa9775d41691e43703755612a953dc8a5/src%2Ftest%2Fui%2Fcmse-nonsecure%2Fcmse-nonsecure-entry%2Fissue-83475.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcmse-nonsecure%2Fcmse-nonsecure-entry%2Fissue-83475.stderr?ref=bca6d9baa9775d41691e43703755612a953dc8a5", "patch": "@@ -0,0 +1,11 @@\n+error: attribute should be applied to a function definition\n+  --> $DIR/issue-83475.rs:6:1\n+   |\n+LL | #[cmse_nonsecure_entry]\n+   | ^^^^^^^^^^^^^^^^^^^^^^^\n+LL |\n+LL | struct XEmpty2;\n+   | --------------- not a function definition\n+\n+error: aborting due to previous error\n+"}]}