{"sha": "485e52e1539d7fb1916c201a73f3d467a18646bf", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ4NWU1MmUxNTM5ZDdmYjE5MTZjMjAxYTczZjNkNDY3YTE4NjQ2YmY=", "commit": {"author": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2020-05-01T15:51:51Z"}, "committer": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2020-05-01T15:51:51Z"}, "message": "Rustup to rustc 1.45.0-nightly (7ced01a73 2020-04-30)", "tree": {"sha": "fae79bae8652b46ccdf9d11629ca9c7d7cc3d431", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fae79bae8652b46ccdf9d11629ca9c7d7cc3d431"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/485e52e1539d7fb1916c201a73f3d467a18646bf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/485e52e1539d7fb1916c201a73f3d467a18646bf", "html_url": "https://github.com/rust-lang/rust/commit/485e52e1539d7fb1916c201a73f3d467a18646bf", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/485e52e1539d7fb1916c201a73f3d467a18646bf/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9fb167e711f9470348cca422e9eacf096cac551a", "url": "https://api.github.com/repos/rust-lang/rust/commits/9fb167e711f9470348cca422e9eacf096cac551a", "html_url": "https://github.com/rust-lang/rust/commit/9fb167e711f9470348cca422e9eacf096cac551a"}], "stats": {"total": 13, "additions": 5, "deletions": 8}, "files": [{"sha": "1bc2439682ea35a34b9116b955f178bd0bb1ce6b", "filename": "rust-toolchain", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/485e52e1539d7fb1916c201a73f3d467a18646bf/rust-toolchain", "raw_url": "https://github.com/rust-lang/rust/raw/485e52e1539d7fb1916c201a73f3d467a18646bf/rust-toolchain", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/rust-toolchain?ref=485e52e1539d7fb1916c201a73f3d467a18646bf", "patch": "@@ -1 +1 @@\n-nightly-2020-04-30\n+nightly-2020-05-01"}, {"sha": "d3c24c556f3614a16a697f4012ef285d85a6cd99", "filename": "src/archive.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/485e52e1539d7fb1916c201a73f3d467a18646bf/src%2Farchive.rs", "raw_url": "https://github.com/rust-lang/rust/raw/485e52e1539d7fb1916c201a73f3d467a18646bf/src%2Farchive.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Farchive.rs?ref=485e52e1539d7fb1916c201a73f3d467a18646bf", "patch": "@@ -4,7 +4,7 @@ use std::path::{Path, PathBuf};\n use crate::prelude::*;\n \n use rustc_codegen_ssa::back::archive::{find_library, ArchiveBuilder};\n-use rustc_codegen_ssa::{METADATA_FILENAME, RLIB_BYTECODE_EXTENSION};\n+use rustc_codegen_ssa::METADATA_FILENAME;\n \n struct ArchiveConfig<'a> {\n     sess: &'a Session,\n@@ -116,8 +116,8 @@ impl<'a> ArchiveBuilder<'a> for ArArchiveBuilder<'a> {\n         let obj_start = name.to_owned();\n \n         self.add_archive(rlib.to_owned(), move |fname: &str| {\n-            // Ignore bytecode/metadata files, no matter the name.\n-            if fname.ends_with(RLIB_BYTECODE_EXTENSION) || fname == METADATA_FILENAME {\n+            // Ignore metadata files, no matter the name.\n+            if fname == METADATA_FILENAME {\n                 return true;\n             }\n "}, {"sha": "76bd614b164860edead3162bc139badc9b1dc913", "filename": "src/driver/aot.rs", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/485e52e1539d7fb1916c201a73f3d467a18646bf/src%2Fdriver%2Faot.rs", "raw_url": "https://github.com/rust-lang/rust/raw/485e52e1539d7fb1916c201a73f3d467a18646bf/src%2Fdriver%2Faot.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdriver%2Faot.rs?ref=485e52e1539d7fb1916c201a73f3d467a18646bf", "patch": "@@ -64,7 +64,6 @@ fn emit_module<B: Backend>(\n             kind,\n             object: Some(tmp_file),\n             bytecode: None,\n-            bytecode_compressed: None,\n         },\n         work_product,\n     )\n@@ -85,7 +84,7 @@ fn reuse_workproduct_for_cgu(\n                 object = Some(path.clone());\n                 path\n             }\n-            WorkProductFileKind::Bytecode | WorkProductFileKind::BytecodeCompressed => {\n+            WorkProductFileKind::Bytecode => {\n                 panic!(\"cg_clif doesn't use bytecode\");\n             }\n         };\n@@ -107,7 +106,6 @@ fn reuse_workproduct_for_cgu(\n         kind: ModuleKind::Regular,\n         object,\n         bytecode: None,\n-        bytecode_compressed: None,\n     }\n }\n \n@@ -239,7 +237,6 @@ pub(super) fn run_aot(\n             kind: ModuleKind::Metadata,\n             object: Some(tmp_file),\n             bytecode: None,\n-            bytecode_compressed: None,\n         })\n     } else {\n         None"}]}