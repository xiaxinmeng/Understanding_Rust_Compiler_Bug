{"sha": "f7cabc6550f23d8a761abf737763a0375a0ac41a", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY3Y2FiYzY1NTBmMjNkOGE3NjFhYmY3Mzc3NjNhMDM3NWEwYWM0MWE=", "commit": {"author": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2018-02-12T06:10:35Z"}, "committer": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2018-02-12T06:10:35Z"}, "message": "Continue parsing function after finding `...` arg\n\nWhen encountering a variadic argument in a function definition that\ndoesn't accept it, if immediately after there's a closing paren,\ncontinue parsing as normal. Otherwise keep current behavior of emitting\nerror and stopping.", "tree": {"sha": "b4b2439df39240ecec0ec0a65ef4c6d42395b2e1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b4b2439df39240ecec0ec0a65ef4c6d42395b2e1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f7cabc6550f23d8a761abf737763a0375a0ac41a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f7cabc6550f23d8a761abf737763a0375a0ac41a", "html_url": "https://github.com/rust-lang/rust/commit/f7cabc6550f23d8a761abf737763a0375a0ac41a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f7cabc6550f23d8a761abf737763a0375a0ac41a/comments", "author": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "committer": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d0f1f4281632386ab0e3f35eed87fac0e5b2d771", "url": "https://api.github.com/repos/rust-lang/rust/commits/d0f1f4281632386ab0e3f35eed87fac0e5b2d771", "html_url": "https://github.com/rust-lang/rust/commit/d0f1f4281632386ab0e3f35eed87fac0e5b2d771"}], "stats": {"total": 48, "additions": 43, "deletions": 5}, "files": [{"sha": "ac582627f88fdb34f6022c557180cbb169c1b9ba", "filename": "src/libsyntax/parse/parser.rs", "status": "modified", "additions": 16, "deletions": 5, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/f7cabc6550f23d8a761abf737763a0375a0ac41a/src%2Flibsyntax%2Fparse%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f7cabc6550f23d8a761abf737763a0375a0ac41a/src%2Flibsyntax%2Fparse%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fparser.rs?ref=f7cabc6550f23d8a761abf737763a0375a0ac41a", "patch": "@@ -4859,19 +4859,30 @@ impl<'a> Parser<'a> {\n                 |p| {\n                     if p.token == token::DotDotDot {\n                         p.bump();\n+                        variadic = true;\n                         if allow_variadic {\n                             if p.token != token::CloseDelim(token::Paren) {\n                                 let span = p.span;\n                                 p.span_err(span,\n                                     \"`...` must be last in argument list for variadic function\");\n                             }\n+                            Ok(None)\n                         } else {\n-                            let span = p.span;\n-                            p.span_err(span,\n-                                       \"only foreign functions are allowed to be variadic\");\n+                            let span = p.prev_span;\n+                            if p.token == token::CloseDelim(token::Paren) {\n+                                // continue parsing to present any further errors\n+                                p.struct_span_err(\n+                                    span,\n+                                    \"only foreign functions are allowed to be variadic\"\n+                                ).emit();\n+                                Ok(Some(dummy_arg(span)))\n+                           } else {\n+                               // this function definition looks beyond recovery, stop parsing\n+                                p.span_err(span,\n+                                           \"only foreign functions are allowed to be variadic\");\n+                                Ok(None)\n+                            }\n                         }\n-                        variadic = true;\n-                        Ok(None)\n                     } else {\n                         match p.parse_arg_general(named_args) {\n                             Ok(arg) => Ok(Some(arg)),"}, {"sha": "3d421e00b08e44163d11adb8770f0db58f129cde", "filename": "src/test/ui/invalid-variadic-function.rs", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/f7cabc6550f23d8a761abf737763a0375a0ac41a/src%2Ftest%2Fui%2Finvalid-variadic-function.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f7cabc6550f23d8a761abf737763a0375a0ac41a/src%2Ftest%2Fui%2Finvalid-variadic-function.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Finvalid-variadic-function.rs?ref=f7cabc6550f23d8a761abf737763a0375a0ac41a", "patch": "@@ -0,0 +1,13 @@\n+// Copyright 2018 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+extern \"C\" fn foo(x: u8, ...);\n+//~^ ERROR only foreign functions are allowed to be variadic\n+//~| ERROR expected one of `->`, `where`, or `{`, found `;`"}, {"sha": "15a908b3f00f22f12b6f97f14661d00b663da95d", "filename": "src/test/ui/invalid-variadic-function.stderr", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/f7cabc6550f23d8a761abf737763a0375a0ac41a/src%2Ftest%2Fui%2Finvalid-variadic-function.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f7cabc6550f23d8a761abf737763a0375a0ac41a/src%2Ftest%2Fui%2Finvalid-variadic-function.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Finvalid-variadic-function.stderr?ref=f7cabc6550f23d8a761abf737763a0375a0ac41a", "patch": "@@ -0,0 +1,14 @@\n+error: only foreign functions are allowed to be variadic\n+  --> $DIR/invalid-variadic-function.rs:11:26\n+   |\n+11 | extern \"C\" fn foo(x: u8, ...);\n+   |                          ^^^\n+\n+error: expected one of `->`, `where`, or `{`, found `;`\n+  --> $DIR/invalid-variadic-function.rs:11:30\n+   |\n+11 | extern \"C\" fn foo(x: u8, ...);\n+   |                              ^ expected one of `->`, `where`, or `{` here\n+\n+error: aborting due to 2 previous errors\n+"}]}