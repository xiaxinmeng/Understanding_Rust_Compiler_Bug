{"sha": "1a8d609e89ed647204b68bfe40e83357644476cb", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFhOGQ2MDllODllZDY0NzIwNGI2OGJmZTQwZTgzMzU3NjQ0NDc2Y2I=", "commit": {"author": {"name": "Roy Frostig", "email": "rfrostig@mozilla.com", "date": "2010-08-04T19:59:48Z"}, "committer": {"name": "Roy Frostig", "email": "rfrostig@mozilla.com", "date": "2010-08-04T19:59:48Z"}, "message": "Add a buffered writer to stdlib _io module.", "tree": {"sha": "b72f13c7d160f5d29be6261e09c51990a3b18f01", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b72f13c7d160f5d29be6261e09c51990a3b18f01"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1a8d609e89ed647204b68bfe40e83357644476cb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1a8d609e89ed647204b68bfe40e83357644476cb", "html_url": "https://github.com/rust-lang/rust/commit/1a8d609e89ed647204b68bfe40e83357644476cb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1a8d609e89ed647204b68bfe40e83357644476cb/comments", "author": {"login": "froystig", "id": 123903, "node_id": "MDQ6VXNlcjEyMzkwMw==", "avatar_url": "https://avatars.githubusercontent.com/u/123903?v=4", "gravatar_id": "", "url": "https://api.github.com/users/froystig", "html_url": "https://github.com/froystig", "followers_url": "https://api.github.com/users/froystig/followers", "following_url": "https://api.github.com/users/froystig/following{/other_user}", "gists_url": "https://api.github.com/users/froystig/gists{/gist_id}", "starred_url": "https://api.github.com/users/froystig/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/froystig/subscriptions", "organizations_url": "https://api.github.com/users/froystig/orgs", "repos_url": "https://api.github.com/users/froystig/repos", "events_url": "https://api.github.com/users/froystig/events{/privacy}", "received_events_url": "https://api.github.com/users/froystig/received_events", "type": "User", "site_admin": false}, "committer": {"login": "froystig", "id": 123903, "node_id": "MDQ6VXNlcjEyMzkwMw==", "avatar_url": "https://avatars.githubusercontent.com/u/123903?v=4", "gravatar_id": "", "url": "https://api.github.com/users/froystig", "html_url": "https://github.com/froystig", "followers_url": "https://api.github.com/users/froystig/followers", "following_url": "https://api.github.com/users/froystig/following{/other_user}", "gists_url": "https://api.github.com/users/froystig/gists{/gist_id}", "starred_url": "https://api.github.com/users/froystig/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/froystig/subscriptions", "organizations_url": "https://api.github.com/users/froystig/orgs", "repos_url": "https://api.github.com/users/froystig/repos", "events_url": "https://api.github.com/users/froystig/events{/privacy}", "received_events_url": "https://api.github.com/users/froystig/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b9075c23c0c1d87296b338869bce37ca709cbce2", "url": "https://api.github.com/repos/rust-lang/rust/commits/b9075c23c0c1d87296b338869bce37ca709cbce2", "html_url": "https://github.com/rust-lang/rust/commit/b9075c23c0c1d87296b338869bce37ca709cbce2"}], "stats": {"total": 57, "additions": 50, "deletions": 7}, "files": [{"sha": "096c768a41a559abbf456950b933a4edabdfd76e", "filename": "src/lib/_io.rs", "status": "modified", "additions": 41, "deletions": 3, "changes": 44, "blob_url": "https://github.com/rust-lang/rust/blob/1a8d609e89ed647204b68bfe40e83357644476cb/src%2Flib%2F_io.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1a8d609e89ed647204b68bfe40e83357644476cb/src%2Flib%2F_io.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flib%2F_io.rs?ref=1a8d609e89ed647204b68bfe40e83357644476cb", "patch": "@@ -2,6 +2,10 @@ type buf_reader = unsafe obj {\n   fn read() -> vec[u8];\n };\n \n+type buf_writer = unsafe obj {\n+  fn write(vec[u8] v);\n+};\n+\n fn default_bufsz() -> uint {\n   ret 4096u;\n }\n@@ -10,7 +14,7 @@ fn new_buf() -> vec[u8] {\n   ret _vec.alloc[u8](default_bufsz());\n }\n \n-fn new_buf_reader(str s) -> buf_reader {\n+fn new_buf_reader(str path) -> buf_reader {\n \n   unsafe obj fd_buf_reader(int fd, mutable vec[u8] buf) {\n \n@@ -39,11 +43,45 @@ fn new_buf_reader(str s) -> buf_reader {\n     }\n   }\n \n-  auto fd = os.libc.open(_str.buf(s), 0);\n+  auto fd = os.libc.open(_str.buf(path), 0);\n   if (fd < 0) {\n-    log \"error opening file\";\n+    log \"error opening file for reading\";\n     log sys.rustrt.last_os_error();\n     fail;\n   }\n   ret fd_buf_reader(fd, new_buf());\n }\n+\n+fn new_buf_writer(str path) -> buf_writer {\n+\n+  unsafe obj fd_buf_writer(int fd) {\n+\n+    fn write(vec[u8] v) {\n+      auto len = _vec.len[u8](v);\n+      auto count = 0u;\n+      auto vbuf;\n+      while (count < len) {\n+        vbuf = _vec.buf_off[u8](v, count);\n+        auto nout = os.libc.write(fd, vbuf, len);\n+        if (nout < 0) {\n+          log \"error dumping buffer\";\n+          log sys.rustrt.last_os_error();\n+          fail;\n+        }\n+        count += nout as uint;\n+      }\n+    }\n+\n+    drop {\n+      os.libc.close(fd);\n+    }\n+  }\n+\n+  auto fd = os.libc.open(_str.buf(path), 0);\n+  if (fd < 0) {\n+    log \"error opening file for writing\";\n+    log sys.rustrt.last_os_error();\n+    fail;\n+  }\n+  ret fd_buf_writer(fd);\n+}"}, {"sha": "e374bf52da13d561aab5a2ab745f59c1f8b52ec1", "filename": "src/lib/_vec.rs", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/1a8d609e89ed647204b68bfe40e83357644476cb/src%2Flib%2F_vec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1a8d609e89ed647204b68bfe40e83357644476cb/src%2Flib%2F_vec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flib%2F_vec.rs?ref=1a8d609e89ed647204b68bfe40e83357644476cb", "patch": "@@ -3,7 +3,7 @@ import op = util.operator;\n \n native \"rust\" mod rustrt {\n   type vbuf;\n-  fn vec_buf[T](vec[T] v) -> vbuf;\n+  fn vec_buf[T](vec[T] v, uint offset) -> vbuf;\n   fn vec_len[T](vec[T] v) -> uint;\n   /* The T in vec_alloc[T, U] is the type of the vec to allocate.  The\n    * U is the type of an element in the vec.  So to allocate a vec[U] we\n@@ -50,7 +50,12 @@ fn len[T](vec[T] v) -> uint {\n }\n \n fn buf[T](vec[T] v) -> vbuf {\n-  ret rustrt.vec_buf[T](v);\n+  ret rustrt.vec_buf[T](v, 0u);\n+}\n+\n+fn buf_off[T](vec[T] v, uint offset) -> vbuf {\n+  check (offset < len[T](v));\n+  ret rustrt.vec_buf[T](v, offset);\n }\n \n // Returns elements from [start..end) from v."}, {"sha": "657109c6df2eec171b6b39e760d13d0e675bb370", "filename": "src/rt/rust_builtin.cpp", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1a8d609e89ed647204b68bfe40e83357644476cb/src%2Frt%2Frust_builtin.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/1a8d609e89ed647204b68bfe40e83357644476cb/src%2Frt%2Frust_builtin.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_builtin.cpp?ref=1a8d609e89ed647204b68bfe40e83357644476cb", "patch": "@@ -116,9 +116,9 @@ str_buf(rust_task *task, rust_str *s)\n }\n \n extern \"C\" CDECL void *\n-vec_buf(rust_task *task, type_desc *ty, rust_vec *v)\n+vec_buf(rust_task *task, type_desc *ty, rust_vec *v, size_t offset)\n {\n-    return (void *)&v->data[0];\n+    return (void *)&v->data[ty->size * offset];\n }\n \n extern \"C\" CDECL size_t"}]}