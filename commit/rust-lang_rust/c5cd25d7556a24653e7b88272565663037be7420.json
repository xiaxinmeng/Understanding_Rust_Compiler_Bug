{"sha": "c5cd25d7556a24653e7b88272565663037be7420", "node_id": "MDY6Q29tbWl0NzI0NzEyOmM1Y2QyNWQ3NTU2YTI0NjUzZTdiODgyNzI1NjU2NjMwMzdiZTc0MjA=", "commit": {"author": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2021-05-30T15:10:42Z"}, "committer": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2021-05-30T15:13:00Z"}, "message": "Fix incorrect prefer_inner calls on some attribute completions", "tree": {"sha": "e9cc4ba6c478988c19f359e0bd06f18fac3e24cf", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e9cc4ba6c478988c19f359e0bd06f18fac3e24cf"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c5cd25d7556a24653e7b88272565663037be7420", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c5cd25d7556a24653e7b88272565663037be7420", "html_url": "https://github.com/rust-lang/rust/commit/c5cd25d7556a24653e7b88272565663037be7420", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c5cd25d7556a24653e7b88272565663037be7420/comments", "author": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f41b68637a10fe0ebc56575d4acb6010dc94cc64", "url": "https://api.github.com/repos/rust-lang/rust/commits/f41b68637a10fe0ebc56575d4acb6010dc94cc64", "html_url": "https://github.com/rust-lang/rust/commit/f41b68637a10fe0ebc56575d4acb6010dc94cc64"}], "stats": {"total": 37, "additions": 31, "deletions": 6}, "files": [{"sha": "76d926157c08746318e339435154f0f08c6ef776", "filename": "crates/ide_completion/src/completions/attribute.rs", "status": "modified", "additions": 31, "deletions": 6, "changes": 37, "blob_url": "https://github.com/rust-lang/rust/blob/c5cd25d7556a24653e7b88272565663037be7420/crates%2Fide_completion%2Fsrc%2Fcompletions%2Fattribute.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c5cd25d7556a24653e7b88272565663037be7420/crates%2Fide_completion%2Fsrc%2Fcompletions%2Fattribute.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_completion%2Fsrc%2Fcompletions%2Fattribute.rs?ref=c5cd25d7556a24653e7b88272565663037be7420", "patch": "@@ -219,8 +219,7 @@ const ATTRIBUTES: &[AttrCompletion] = &[\n     ),\n     attr(\"feature(\u2026)\", Some(\"feature\"), Some(\"feature(${0:flag})\")).prefer_inner(),\n     attr(\"forbid(\u2026)\", Some(\"forbid\"), Some(\"forbid(${0:lint})\")),\n-    // FIXME: resolve through macro resolution?\n-    attr(\"global_allocator\", None, None).prefer_inner(),\n+    attr(\"global_allocator\", None, None),\n     attr(r#\"ignore = \"\u2026\"\"#, Some(\"ignore\"), Some(r#\"ignore = \"${0:reason}\"\"#)),\n     attr(\"inline\", Some(\"inline\"), Some(\"inline\")),\n     attr(\"link\", None, None),\n@@ -239,7 +238,7 @@ const ATTRIBUTES: &[AttrCompletion] = &[\n     attr(\"no_mangle\", None, None),\n     attr(\"no_std\", None, None).prefer_inner(),\n     attr(\"non_exhaustive\", None, None),\n-    attr(\"panic_handler\", None, None).prefer_inner(),\n+    attr(\"panic_handler\", None, None),\n     attr(r#\"path = \"\u2026\"\"#, Some(\"path\"), Some(r#\"path =\"${0:path}\"\"#)),\n     attr(\"proc_macro\", None, None),\n     attr(\"proc_macro_attribute\", None, None),\n@@ -609,6 +608,7 @@ mod tests {\n                 at export_name = \"\u2026\"\n                 at link_name = \"\u2026\"\n                 at link_section = \"\u2026\"\n+                at global_allocator\n                 at used\n             \"#]],\n         );\n@@ -732,20 +732,45 @@ mod tests {\n     }\n \n     #[test]\n-    fn complete_attribute_on_expr() {\n+    fn complete_attribute_on_fn() {\n         check(\n-            r#\"fn main() { #[$0] foo() }\"#,\n+            r#\"#[$0] fn main() {}\"#,\n             expect![[r#\"\n                 at allow(\u2026)\n                 at cfg(\u2026)\n                 at cfg_attr(\u2026)\n                 at deny(\u2026)\n                 at forbid(\u2026)\n                 at warn(\u2026)\n+                at deprecated\n+                at doc = \"\u2026\"\n+                at doc(hidden)\n+                at doc(alias = \"\u2026\")\n+                at must_use\n+                at no_mangle\n+                at export_name = \"\u2026\"\n+                at link_name = \"\u2026\"\n+                at link_section = \"\u2026\"\n+                at cold\n+                at ignore = \"\u2026\"\n+                at inline\n+                at must_use\n+                at panic_handler\n+                at proc_macro\n+                at proc_macro_derive(\u2026)\n+                at proc_macro_attribute\n+                at should_panic\n+                at target_feature = \"\u2026\"\n+                at test\n+                at track_caller\n             \"#]],\n         );\n+    }\n+\n+    #[test]\n+    fn complete_attribute_on_expr() {\n         check(\n-            r#\"fn main() { #[$0] foo(); }\"#,\n+            r#\"fn main() { #[$0] foo() }\"#,\n             expect![[r#\"\n                 at allow(\u2026)\n                 at cfg(\u2026)"}]}