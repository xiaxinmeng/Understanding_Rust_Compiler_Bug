{"sha": "e9bf73cb2b025e188787683f1423177a9102d260", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU5YmY3M2NiMmIwMjVlMTg4Nzg3NjgzZjE0MjMxNzdhOTEwMmQyNjA=", "commit": {"author": {"name": "Yuki Okushi", "email": "yuki.okushi@huawei.com", "date": "2021-09-17T04:39:26Z"}, "committer": {"name": "Yuki Okushi", "email": "yuki.okushi@huawei.com", "date": "2021-09-17T04:39:26Z"}, "message": "Use `multipart_suggestion`", "tree": {"sha": "dd0a3e2a1064a59b36d6aece647fcdc92812ac9d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/dd0a3e2a1064a59b36d6aece647fcdc92812ac9d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e9bf73cb2b025e188787683f1423177a9102d260", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEx6scKn6IIf/+FpBu2rpbBylhwYoFAmFEG/4ACgkQ2rpbBylh\nwYoPlA//cffRYS1tpwz5Skr2N8O6IDfEfb9C8UF1SrttElj0fE0sfMwvZq8t05XN\n5azteilp/c4Sa6shupfGilDJQXVpl8+T4u+L/d3ra4u2UlHqWjL+GaKIgaWuaPnC\noSIOKV5WwnmD4tofpRfuikVZehOyhxN7jMvvyswwXjvkBGgUwyPdezm8ErOk0NzO\n9cdHEQ4Pyj3DvGisNzi9+P99lxaNsY9RdChOsy4mgK83iodUkPnJXu14HGlLZRcF\ncyjIROIzgtWvoFafJMOtTv/tntzCVlD9p2yEea87rteGFf0t7muBsIJPjE7QfKlc\ndrEPnvMourNIdWH7pU1FGLXr6pTXKDq+xMZYCM9vC2e9ryjwKkuOacwXGq8KClUz\n8UH9lSYS2XkKPooIjE/9HqWZEVSR9QLDyZjyVePpCKOJGBKV1QEaH7cOzP0s/Njy\n+i5sLY7u695tABhVIqoBnG0hRrIzpPTKh0wWlg5hPW2d3mFG8TGXkZdFG/Ck8kDE\nUrtKQs2QhWijOabSFvAJgwEBBd0lXHkcLwergfC1juGfVl0d3adG6OFY2Rjvs03k\nMJlH1EoQNJqOeCKHLUdxDOecvIGsKsjSoeLM0i6bY4brEDJGTONKVFjwOZvcXAwb\nb8IOFHuY8xrU+QeVeQvkOR5KO8FK7iloLluvFHIIUwwYFU3sqVE=\n=JHuY\n-----END PGP SIGNATURE-----", "payload": "tree dd0a3e2a1064a59b36d6aece647fcdc92812ac9d\nparent 58765d61ee1762ce0dd9565074000cb9c1267a02\nauthor Yuki Okushi <yuki.okushi@huawei.com> 1631853566 +0900\ncommitter Yuki Okushi <yuki.okushi@huawei.com> 1631853566 +0900\n\nUse `multipart_suggestion`\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e9bf73cb2b025e188787683f1423177a9102d260", "html_url": "https://github.com/rust-lang/rust/commit/e9bf73cb2b025e188787683f1423177a9102d260", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e9bf73cb2b025e188787683f1423177a9102d260/comments", "author": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "58765d61ee1762ce0dd9565074000cb9c1267a02", "url": "https://api.github.com/repos/rust-lang/rust/commits/58765d61ee1762ce0dd9565074000cb9c1267a02", "html_url": "https://github.com/rust-lang/rust/commit/58765d61ee1762ce0dd9565074000cb9c1267a02"}], "stats": {"total": 44, "additions": 21, "deletions": 23}, "files": [{"sha": "88b5f89f6809f21f7a0f63ee2a3b96883fc2bdda", "filename": "compiler/rustc_parse/src/parser/diagnostics.rs", "status": "modified", "additions": 13, "deletions": 19, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/e9bf73cb2b025e188787683f1423177a9102d260/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e9bf73cb2b025e188787683f1423177a9102d260/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fdiagnostics.rs?ref=e9bf73cb2b025e188787683f1423177a9102d260", "patch": "@@ -1334,31 +1334,25 @@ impl<'a> Parser<'a> {\n     pub(super) fn recover_parens_around_for_head(\n         &mut self,\n         pat: P<Pat>,\n-        expr: &Expr,\n         begin_paren: Option<Span>,\n     ) -> P<Pat> {\n         match (&self.token.kind, begin_paren) {\n             (token::CloseDelim(token::Paren), Some(begin_par_sp)) => {\n                 self.bump();\n \n-                let pat_str = self\n-                    // Remove the `(` from the span of the pattern:\n-                    .span_to_snippet(pat.span.trim_start(begin_par_sp).unwrap())\n-                    .unwrap_or_else(|_| pprust::pat_to_string(&pat));\n-\n-                let sp = MultiSpan::from_spans(vec![begin_par_sp, self.prev_token.span]);\n-\n-                self.struct_span_err(sp, \"unexpected parenthesis surrounding `for` loop head\")\n-                    .span_suggestion(\n-                        begin_par_sp.to(self.prev_token.span),\n-                        \"remove parenthesis in `for` loop\",\n-                        format!(\"{} in {}\", pat_str, pprust::expr_to_string(&expr)),\n-                        // With e.g. `for (x) in y)` this would replace `(x) in y)`\n-                        // with `x) in y)` which is syntactically invalid.\n-                        // However, this is prevented before we get here.\n-                        Applicability::MachineApplicable,\n-                    )\n-                    .emit();\n+                self.struct_span_err(\n+                    MultiSpan::from_spans(vec![begin_par_sp, self.prev_token.span]),\n+                    \"unexpected parenthesis surrounding `for` loop head\",\n+                )\n+                .multipart_suggestion(\n+                    \"remove parenthesis in `for` loop\",\n+                    vec![(begin_par_sp, String::new()), (self.prev_token.span, String::new())],\n+                    // With e.g. `for (x) in y)` this would replace `(x) in y)`\n+                    // with `x) in y)` which is syntactically invalid.\n+                    // However, this is prevented before we get here.\n+                    Applicability::MachineApplicable,\n+                )\n+                .emit();\n \n                 // Unwrap `(pat)` into `pat` to avoid the `unused_parens` lint.\n                 pat.and_then(|pat| match pat.kind {"}, {"sha": "d8f9fc9179e890e9a6a012e7a81f16577184882c", "filename": "compiler/rustc_parse/src/parser/expr.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e9bf73cb2b025e188787683f1423177a9102d260/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e9bf73cb2b025e188787683f1423177a9102d260/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fexpr.rs?ref=e9bf73cb2b025e188787683f1423177a9102d260", "patch": "@@ -2042,7 +2042,7 @@ impl<'a> Parser<'a> {\n         self.check_for_for_in_in_typo(self.prev_token.span);\n         let expr = self.parse_expr_res(Restrictions::NO_STRUCT_LITERAL, None)?;\n \n-        let pat = self.recover_parens_around_for_head(pat, &expr, begin_paren);\n+        let pat = self.recover_parens_around_for_head(pat, begin_paren);\n \n         let (iattrs, loop_block) = self.parse_inner_attrs_and_block()?;\n         attrs.extend(iattrs);"}, {"sha": "21991348327b36e99d5f4c67b9aa5e2057b91a91", "filename": "src/test/ui/parser/recover-for-loop-parens-around-head.stderr", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/e9bf73cb2b025e188787683f1423177a9102d260/src%2Ftest%2Fui%2Fparser%2Frecover-for-loop-parens-around-head.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e9bf73cb2b025e188787683f1423177a9102d260/src%2Ftest%2Fui%2Fparser%2Frecover-for-loop-parens-around-head.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Frecover-for-loop-parens-around-head.stderr?ref=e9bf73cb2b025e188787683f1423177a9102d260", "patch": "@@ -8,9 +8,13 @@ error: unexpected parenthesis surrounding `for` loop head\n   --> $DIR/recover-for-loop-parens-around-head.rs:10:9\n    |\n LL |     for ( elem in vec ) {\n-   |         ^-------------^\n-   |         |\n-   |         help: remove parenthesis in `for` loop: `elem in vec`\n+   |         ^             ^\n+   |\n+help: remove parenthesis in `for` loop\n+   |\n+LL -     for ( elem in vec ) {\n+LL +     for  elem in vec  {\n+   | \n \n error[E0308]: mismatched types\n   --> $DIR/recover-for-loop-parens-around-head.rs:13:38"}]}