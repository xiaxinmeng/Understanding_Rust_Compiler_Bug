{"sha": "5566aec8c992d8a8bf6bc2ad45535f2df7feed73", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU1NjZhZWM4Yzk5MmQ4YThiZjZiYzJhZDQ1NTM1ZjJkZjdmZWVkNzM=", "commit": {"author": {"name": "Oliver Scherer", "email": "github35764891676564198441@oli-obk.de", "date": "2019-02-25T09:32:55Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-02-25T09:32:55Z"}, "message": "Merge pull request #645 from RalfJung/box-alloc\n\ntest using the Global allocator trait to alloc/free a Box", "tree": {"sha": "35d649d2619fab532e44133cf61dacbc6481724c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/35d649d2619fab532e44133cf61dacbc6481724c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5566aec8c992d8a8bf6bc2ad45535f2df7feed73", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJcc7ZHCRBK7hj4Ov3rIwAAdHIIAJD5pF3lYhTwLBoupbsc2vzJ\n3CdmCwfgGmiXqSaEseD9FY35TbkePoQpGiCnrfnL9mLqw6cUne+tB4Oliao8sdki\n0EnJcRe4xF0DKalcDukcCrfg24R1FlzQtc+X/JWyWQ5X03oCm8c9bBPouzHbJWao\ncrx37Z8zqwcv6w9er/usE1wwLoT1j7M2h04GbM3CfA0ikyB5nDA5fjNCdWQjlFN1\nhLNAqlKeT9O+aYAaGYkeEbrGB+TNKzPtR1cUxG7la/s2JFADG2alynw4hlcg3Pdl\nj1nHs+cQiJAThio8Y+FLsGulY3fbXalWKDL1CrEnKQIRCAg8VHuWB78aJ92R7Ds=\n=iu3i\n-----END PGP SIGNATURE-----\n", "payload": "tree 35d649d2619fab532e44133cf61dacbc6481724c\nparent 724be298a1e12593dbc3786cafc307627e46e802\nparent ac23bcd2980c98cf6145524f31c63320431d5d4a\nauthor Oliver Scherer <github35764891676564198441@oli-obk.de> 1551087175 +0100\ncommitter GitHub <noreply@github.com> 1551087175 +0100\n\nMerge pull request #645 from RalfJung/box-alloc\n\ntest using the Global allocator trait to alloc/free a Box"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5566aec8c992d8a8bf6bc2ad45535f2df7feed73", "html_url": "https://github.com/rust-lang/rust/commit/5566aec8c992d8a8bf6bc2ad45535f2df7feed73", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5566aec8c992d8a8bf6bc2ad45535f2df7feed73/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "724be298a1e12593dbc3786cafc307627e46e802", "url": "https://api.github.com/repos/rust-lang/rust/commits/724be298a1e12593dbc3786cafc307627e46e802", "html_url": "https://github.com/rust-lang/rust/commit/724be298a1e12593dbc3786cafc307627e46e802"}, {"sha": "ac23bcd2980c98cf6145524f31c63320431d5d4a", "url": "https://api.github.com/repos/rust-lang/rust/commits/ac23bcd2980c98cf6145524f31c63320431d5d4a", "html_url": "https://github.com/rust-lang/rust/commit/ac23bcd2980c98cf6145524f31c63320431d5d4a"}], "stats": {"total": 25, "additions": 25, "deletions": 0}, "files": [{"sha": "e1aace8cecaf11a685ef9da1426f2410a4080694", "filename": "tests/run-pass/heap_allocator.rs", "status": "renamed", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/5566aec8c992d8a8bf6bc2ad45535f2df7feed73/tests%2Frun-pass%2Fheap_allocator.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5566aec8c992d8a8bf6bc2ad45535f2df7feed73/tests%2Frun-pass%2Fheap_allocator.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Fheap_allocator.rs?ref=5566aec8c992d8a8bf6bc2ad45535f2df7feed73", "patch": "@@ -1,6 +1,7 @@\n //ignore-windows: Inspects allocation base address on Windows\n #![feature(allocator_api)]\n \n+use std::ptr::NonNull;\n use std::alloc::{Global, Alloc, Layout, System};\n \n fn check_overalign_requests<T: Alloc>(mut allocator: T) {\n@@ -23,7 +24,31 @@ fn check_overalign_requests<T: Alloc>(mut allocator: T) {\n     }\n }\n \n+fn global_to_box() {\n+    type T = [i32; 4];\n+    let l = Layout::new::<T>();\n+    // allocate manually with global allocator, then turn into Box and free there\n+    unsafe {\n+        let ptr = Global.alloc(l).unwrap().as_ptr() as *mut T;\n+        let b = Box::from_raw(ptr);\n+        drop(b);\n+    }\n+}\n+\n+fn box_to_global() {\n+    type T = [i32; 4];\n+    let l = Layout::new::<T>();\n+    // allocate with the Box, then deallocate manually with global allocator\n+    unsafe {\n+        let b = Box::new(T::default());\n+        let ptr = Box::into_raw(b);\n+        Global.dealloc(NonNull::new(ptr as *mut u8).unwrap(), l);\n+    }\n+}\n+\n fn main() {\n     check_overalign_requests(System);\n     check_overalign_requests(Global);\n+    global_to_box();\n+    box_to_global();\n }", "previous_filename": "tests/run-pass/heap_system.rs"}]}