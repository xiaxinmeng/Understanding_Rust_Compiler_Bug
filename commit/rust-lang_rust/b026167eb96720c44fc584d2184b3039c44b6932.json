{"sha": "b026167eb96720c44fc584d2184b3039c44b6932", "node_id": "C_kwDOAAsO6NoAKGIwMjYxNjdlYjk2NzIwYzQ0ZmM1ODRkMjE4NGIzMDM5YzQ0YjY5MzI", "commit": {"author": {"name": "Alex Rao", "email": "alexhrao@users.noreply.github.com", "date": "2022-12-27T18:17:56Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-12-27T18:17:56Z"}, "message": "Fix UnsafeCell Documentation Spelling Error\n\nThis fixes the spelling of \"deallocated\" (instead of the original \"deallocted\") In the `cell.rs` source file", "tree": {"sha": "05d42c1726c1b1c3dd4b380659666cdb31b048b8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/05d42c1726c1b1c3dd4b380659666cdb31b048b8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b026167eb96720c44fc584d2184b3039c44b6932", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJjqzbUCRBK7hj4Ov3rIwAAkoYIAHHF/s8El7ZpDJGsJw6h2Hk8\nXDQrKvQ4EoftjzMdd2o/tbhXQt0ctmHv7oqc3bJUYC5yO/3KZSl2gd+3H5BiUjMJ\n494VzV+lB3GEzJOIa4J1SUQ8WQvqZ3y/cpkMUr5nXZ0krBvhs86FIYJS9KgW4Wmz\nfl1qAbK4KCwdv9aCMldIy6Hx9K8UllAjy/7snyDHvH05GaCZZc8O4Hvfvz7cYuIQ\naAFBKgCQ338An7ndGcyu1KZMOl6ChkBzsRBNxTzNlVECy9YqyMqZaHSj5vXJw51g\nwB+Q/Qtv8TxB1jNh0mYwHwim5joGTyDa7ZAasAuCzWk2gMyHUI/NZUGsr4ICEzI=\n=V5Ep\n-----END PGP SIGNATURE-----\n", "payload": "tree 05d42c1726c1b1c3dd4b380659666cdb31b048b8\nparent db7962532610cfbfb9be17e8d6c1b48acf5ed184\nauthor Alex Rao <alexhrao@users.noreply.github.com> 1672165076 -0600\ncommitter GitHub <noreply@github.com> 1672165076 -0600\n\nFix UnsafeCell Documentation Spelling Error\n\nThis fixes the spelling of \"deallocated\" (instead of the original \"deallocted\") In the `cell.rs` source file"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b026167eb96720c44fc584d2184b3039c44b6932", "html_url": "https://github.com/rust-lang/rust/commit/b026167eb96720c44fc584d2184b3039c44b6932", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b026167eb96720c44fc584d2184b3039c44b6932/comments", "author": {"login": "alexhrao", "id": 20663037, "node_id": "MDQ6VXNlcjIwNjYzMDM3", "avatar_url": "https://avatars.githubusercontent.com/u/20663037?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexhrao", "html_url": "https://github.com/alexhrao", "followers_url": "https://api.github.com/users/alexhrao/followers", "following_url": "https://api.github.com/users/alexhrao/following{/other_user}", "gists_url": "https://api.github.com/users/alexhrao/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexhrao/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexhrao/subscriptions", "organizations_url": "https://api.github.com/users/alexhrao/orgs", "repos_url": "https://api.github.com/users/alexhrao/repos", "events_url": "https://api.github.com/users/alexhrao/events{/privacy}", "received_events_url": "https://api.github.com/users/alexhrao/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "db7962532610cfbfb9be17e8d6c1b48acf5ed184", "url": "https://api.github.com/repos/rust-lang/rust/commits/db7962532610cfbfb9be17e8d6c1b48acf5ed184", "html_url": "https://github.com/rust-lang/rust/commit/db7962532610cfbfb9be17e8d6c1b48acf5ed184"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "ba93165cf53a2d3d989c13f2fa88664ea2257856", "filename": "library/core/src/cell.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b026167eb96720c44fc584d2184b3039c44b6932/library%2Fcore%2Fsrc%2Fcell.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b026167eb96720c44fc584d2184b3039c44b6932/library%2Fcore%2Fsrc%2Fcell.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fcell.rs?ref=b026167eb96720c44fc584d2184b3039c44b6932", "patch": "@@ -1783,7 +1783,7 @@ impl<T: ?Sized + fmt::Display> fmt::Display for RefMut<'_, T> {\n /// until the reference expires. As a special exception, given an `&T`, any part of it that is\n /// inside an `UnsafeCell<_>` may be deallocated during the lifetime of the reference, after the\n /// last time the reference is used (dereferenced or reborrowed). Since you cannot deallocate a part\n-/// of what a reference points to, this means the memory an `&T` points to can be deallocted only if\n+/// of what a reference points to, this means the memory an `&T` points to can be deallocated only if\n /// *every part of it* (including padding) is inside an `UnsafeCell`.\n ///\n ///     However, whenever a `&UnsafeCell<T>` is constructed or dereferenced, it must still point to"}]}