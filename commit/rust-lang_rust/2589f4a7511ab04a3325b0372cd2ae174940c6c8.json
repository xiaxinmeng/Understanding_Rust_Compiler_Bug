{"sha": "2589f4a7511ab04a3325b0372cd2ae174940c6c8", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI1ODlmNGE3NTExYWIwNGEzMzI1YjAzNzJjZDJhZTE3NDk0MGM2Yzg=", "commit": {"author": {"name": "Scott Olson", "email": "scott@solson.me", "date": "2017-02-09T11:10:33Z"}, "committer": {"name": "Scott Olson", "email": "scott@solson.me", "date": "2017-02-09T11:10:33Z"}, "message": "Fix indentation in test.", "tree": {"sha": "9e96225a2621f2b85037a2fc269be52d6aed0354", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9e96225a2621f2b85037a2fc269be52d6aed0354"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2589f4a7511ab04a3325b0372cd2ae174940c6c8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2589f4a7511ab04a3325b0372cd2ae174940c6c8", "html_url": "https://github.com/rust-lang/rust/commit/2589f4a7511ab04a3325b0372cd2ae174940c6c8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2589f4a7511ab04a3325b0372cd2ae174940c6c8/comments", "author": {"login": "solson", "id": 26806, "node_id": "MDQ6VXNlcjI2ODA2", "avatar_url": "https://avatars.githubusercontent.com/u/26806?v=4", "gravatar_id": "", "url": "https://api.github.com/users/solson", "html_url": "https://github.com/solson", "followers_url": "https://api.github.com/users/solson/followers", "following_url": "https://api.github.com/users/solson/following{/other_user}", "gists_url": "https://api.github.com/users/solson/gists{/gist_id}", "starred_url": "https://api.github.com/users/solson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/solson/subscriptions", "organizations_url": "https://api.github.com/users/solson/orgs", "repos_url": "https://api.github.com/users/solson/repos", "events_url": "https://api.github.com/users/solson/events{/privacy}", "received_events_url": "https://api.github.com/users/solson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "solson", "id": 26806, "node_id": "MDQ6VXNlcjI2ODA2", "avatar_url": "https://avatars.githubusercontent.com/u/26806?v=4", "gravatar_id": "", "url": "https://api.github.com/users/solson", "html_url": "https://github.com/solson", "followers_url": "https://api.github.com/users/solson/followers", "following_url": "https://api.github.com/users/solson/following{/other_user}", "gists_url": "https://api.github.com/users/solson/gists{/gist_id}", "starred_url": "https://api.github.com/users/solson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/solson/subscriptions", "organizations_url": "https://api.github.com/users/solson/orgs", "repos_url": "https://api.github.com/users/solson/repos", "events_url": "https://api.github.com/users/solson/events{/privacy}", "received_events_url": "https://api.github.com/users/solson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b8b898093cf2b37dfe5c192cbd7f1004073fde0e", "url": "https://api.github.com/repos/rust-lang/rust/commits/b8b898093cf2b37dfe5c192cbd7f1004073fde0e", "html_url": "https://github.com/rust-lang/rust/commit/b8b898093cf2b37dfe5c192cbd7f1004073fde0e"}], "stats": {"total": 28, "additions": 14, "deletions": 14}, "files": [{"sha": "eb96d94efec930d3edaf3149d43b38a94a488d20", "filename": "src/test/run-pass/mir_adt_construction.rs", "status": "modified", "additions": 14, "deletions": 14, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/2589f4a7511ab04a3325b0372cd2ae174940c6c8/src%2Ftest%2Frun-pass%2Fmir_adt_construction.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2589f4a7511ab04a3325b0372cd2ae174940c6c8/src%2Ftest%2Frun-pass%2Fmir_adt_construction.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fmir_adt_construction.rs?ref=2589f4a7511ab04a3325b0372cd2ae174940c6c8", "patch": "@@ -17,12 +17,12 @@ enum CEnum {\n }\n \n fn test1(c: CEnum) -> i32 {\n-  let c2 = CEnum::Hello;\n-  match (c, c2) {\n-    (CEnum::Hello, CEnum::Hello) => 42,\n-    (CEnum::World, CEnum::Hello) => 0,\n-    _ => 1\n-  }\n+    let c2 = CEnum::Hello;\n+    match (c, c2) {\n+        (CEnum::Hello, CEnum::Hello) => 42,\n+        (CEnum::World, CEnum::Hello) => 0,\n+        _ => 1\n+    }\n }\n \n #[repr(packed)]\n@@ -90,12 +90,12 @@ fn test5(x: fn(u32) -> Option<u32>) -> (Option<u32>, Option<u32>) {\n }\n \n fn main() {\n-  assert_eq!(test1(CEnum::Hello), 42);\n-  assert_eq!(test1(CEnum::World), 0);\n-  assert_eq!(test2(), Pakd { a: 42, b: 42, c: 42, d: 42, e: () });\n-  assert_eq!(test3(), TupleLike(42, 42));\n-  let t4 = test4(TupleLike);\n-  assert_eq!(t4.0, t4.1);\n-  let t5 = test5(Some);\n-  assert_eq!(t5.0, t5.1);\n+    assert_eq!(test1(CEnum::Hello), 42);\n+    assert_eq!(test1(CEnum::World), 0);\n+    assert_eq!(test2(), Pakd { a: 42, b: 42, c: 42, d: 42, e: () });\n+    assert_eq!(test3(), TupleLike(42, 42));\n+    let t4 = test4(TupleLike);\n+    assert_eq!(t4.0, t4.1);\n+    let t5 = test5(Some);\n+    assert_eq!(t5.0, t5.1);\n }"}]}