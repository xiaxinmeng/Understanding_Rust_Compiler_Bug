{"sha": "fe993dbdf33dd67b27675cf709a87e86d20cd105", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZlOTkzZGJkZjMzZGQ2N2IyNzY3NWNmNzA5YTg3ZTg2ZDIwY2QxMDU=", "commit": {"author": {"name": "Nick Cameron", "email": "nrc@ncameron.org", "date": "2016-04-16T22:23:48Z"}, "committer": {"name": "Nick Cameron", "email": "nrc@ncameron.org", "date": "2016-04-16T22:23:48Z"}, "message": "Merge pull request #947 from marcusklaas/match-pattern-limit\n\nFix off-by-one error in pattern formatting", "tree": {"sha": "9df5a96b1d75a4856e47d48dd44d0858d4336983", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9df5a96b1d75a4856e47d48dd44d0858d4336983"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fe993dbdf33dd67b27675cf709a87e86d20cd105", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fe993dbdf33dd67b27675cf709a87e86d20cd105", "html_url": "https://github.com/rust-lang/rust/commit/fe993dbdf33dd67b27675cf709a87e86d20cd105", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fe993dbdf33dd67b27675cf709a87e86d20cd105/comments", "author": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "27c91ee35b6dd42bb20f1aef4216299ab19bdaff", "url": "https://api.github.com/repos/rust-lang/rust/commits/27c91ee35b6dd42bb20f1aef4216299ab19bdaff", "html_url": "https://github.com/rust-lang/rust/commit/27c91ee35b6dd42bb20f1aef4216299ab19bdaff"}, {"sha": "63f0fc964130f7710b8c2e5f045cabff761025da", "url": "https://api.github.com/repos/rust-lang/rust/commits/63f0fc964130f7710b8c2e5f045cabff761025da", "html_url": "https://github.com/rust-lang/rust/commit/63f0fc964130f7710b8c2e5f045cabff761025da"}], "stats": {"total": 45, "additions": 43, "deletions": 2}, "files": [{"sha": "3cec98bb93af2d03dc6753a058e743e1c80d178c", "filename": "src/patterns.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/fe993dbdf33dd67b27675cf709a87e86d20cd105/src%2Fpatterns.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fe993dbdf33dd67b27675cf709a87e86d20cd105/src%2Fpatterns.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fpatterns.rs?ref=fe993dbdf33dd67b27675cf709a87e86d20cd105", "patch": "@@ -76,8 +76,9 @@ impl Rewrite for Pat {\n                         if pat_vec.is_empty() {\n                             Some(path_str)\n                         } else {\n-                            // 1 = (\n-                            let width = try_opt!(width.checked_sub(path_str.len() + 1));\n+                            // 2 = \"()\".len()\n+                            let width = try_opt!(width.checked_sub(path_str.len() + 2));\n+                            // 1 = \"(\".len()\n                             let offset = offset + path_str.len() + 1;\n                             let items = itemize_list(context.codemap,\n                                                      pat_vec.iter(),"}, {"sha": "f58a8b0663bc53db1476cb9c2fa2719e4f58fb07", "filename": "tests/source/issue-913.rs", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/fe993dbdf33dd67b27675cf709a87e86d20cd105/tests%2Fsource%2Fissue-913.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fe993dbdf33dd67b27675cf709a87e86d20cd105/tests%2Fsource%2Fissue-913.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Fissue-913.rs?ref=fe993dbdf33dd67b27675cf709a87e86d20cd105", "patch": "@@ -0,0 +1,20 @@\n+mod client {\n+    impl Client {\n+        fn test(self) -> Result<()> {\n+            let next_state = match self.state {\n+                State::V5(v5::State::Command(v5::coand::State::WriteVersion(ref mut response))) => {\n+                         let x   =   reformat . meeee()  ; \n+                }\n+            };\n+\n+            let next_state = match self.state {\n+                State::V5(v5::State::Command(v5::comand::State::WriteVersion(ref mut response))) => {\n+                    // The pattern cannot be formatted in a way that the match stays\n+                    // within the column limit. The rewrite should therefore be \n+                    // skipped.\n+                    let x =  dont . reformat . meeee();\n+                }\n+            };\n+        }\n+    }\n+}"}, {"sha": "c7aee5fe3abaeddc969967a098f4fe837cef379f", "filename": "tests/target/issue-913.rs", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/fe993dbdf33dd67b27675cf709a87e86d20cd105/tests%2Ftarget%2Fissue-913.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fe993dbdf33dd67b27675cf709a87e86d20cd105/tests%2Ftarget%2Fissue-913.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fissue-913.rs?ref=fe993dbdf33dd67b27675cf709a87e86d20cd105", "patch": "@@ -0,0 +1,20 @@\n+mod client {\n+    impl Client {\n+        fn test(self) -> Result<()> {\n+            let next_state = match self.state {\n+                State::V5(v5::State::Command(v5::coand::State::WriteVersion(ref mut response))) => {\n+                    let x = reformat.meeee();\n+                }\n+            };\n+\n+            let next_state = match self.state {\n+                State::V5(v5::State::Command(v5::comand::State::WriteVersion(ref mut response))) => {\n+                    // The pattern cannot be formatted in a way that the match stays\n+                    // within the column limit. The rewrite should therefore be \n+                    // skipped.\n+                    let x =  dont . reformat . meeee();\n+                }\n+            };\n+        }\n+    }\n+}"}]}