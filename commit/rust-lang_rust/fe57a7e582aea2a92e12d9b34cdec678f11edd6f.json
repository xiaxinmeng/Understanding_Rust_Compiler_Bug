{"sha": "fe57a7e582aea2a92e12d9b34cdec678f11edd6f", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZlNTdhN2U1ODJhZWEyYTkyZTEyZDliMzRjZGVjNjc4ZjExZWRkNmY=", "commit": {"author": {"name": "unknown", "email": "graydon@4632428-PC.(none)", "date": "2012-01-26T00:02:53Z"}, "committer": {"name": "unknown", "email": "graydon@4632428-PC.(none)", "date": "2012-01-26T00:02:53Z"}, "message": "Add Inno Setup installer script rather than NSIS", "tree": {"sha": "6d68feb7cc76f531984a8f24e411260b8a88a159", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6d68feb7cc76f531984a8f24e411260b8a88a159"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fe57a7e582aea2a92e12d9b34cdec678f11edd6f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fe57a7e582aea2a92e12d9b34cdec678f11edd6f", "html_url": "https://github.com/rust-lang/rust/commit/fe57a7e582aea2a92e12d9b34cdec678f11edd6f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fe57a7e582aea2a92e12d9b34cdec678f11edd6f/comments", "author": null, "committer": null, "parents": [{"sha": "7da3733c73e7a3ba4c18f3927bbbe185598ad233", "url": "https://api.github.com/repos/rust-lang/rust/commits/7da3733c73e7a3ba4c18f3927bbbe185598ad233", "html_url": "https://github.com/rust-lang/rust/commit/7da3733c73e7a3ba4c18f3927bbbe185598ad233"}], "stats": {"total": 316, "additions": 300, "deletions": 16}, "files": [{"sha": "102d019dbe3d77237c11bdf87deca3313390a9f8", "filename": "LICENSE.txt", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/fe57a7e582aea2a92e12d9b34cdec678f11edd6f/LICENSE.txt", "raw_url": "https://github.com/rust-lang/rust/raw/fe57a7e582aea2a92e12d9b34cdec678f11edd6f/LICENSE.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/LICENSE.txt?ref=fe57a7e582aea2a92e12d9b34cdec678f11edd6f", "patch": "@@ -186,6 +186,17 @@ included:\n     USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY\n     OF SUCH DAMAGE.\n \n+* The auxiliary file src/etc/pkg/modpath.iss contains a\n+  library routine compiled, by Inno Setup, into the Windows\n+  installer binary. This file is licensed under the LGPL,\n+  but, in our legal interpretation, this does not affect the\n+  aggregate \"collected work\" license of the Rust\n+  distribution (MIT) nor any other components of it. We\n+  believe that the terms governing distribution of the\n+  binary Windows installer built from modpath.iss are\n+  therefore LGPL, but not the terms governing distribution\n+  of any of the files installed by such an installer (such\n+  as the Rust compiler or runtime libraries themselves).\n \n * The libuv asynchronous I/O library. Code for this package\n   is found in the src/rt/libuv directory, within this"}, {"sha": "6f77629bbf3c9eaface3cd1a6ff8a15e4fe8ca65", "filename": "Makefile.in", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fe57a7e582aea2a92e12d9b34cdec678f11edd6f/Makefile.in", "raw_url": "https://github.com/rust-lang/rust/raw/fe57a7e582aea2a92e12d9b34cdec678f11edd6f/Makefile.in", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Makefile.in?ref=fe57a7e582aea2a92e12d9b34cdec678f11edd6f", "patch": "@@ -114,7 +114,7 @@ LIBRUSTC_GLOB :=$(call CFG_LIB_GLOB,rustc)\n \n # version-string calculation\n CFG_GIT_DIR := $(CFG_SRC_DIR).git\n-CFG_RELEASE = 0.2pre\n+CFG_RELEASE = 0.1.1\n CFG_VERSION = $(CFG_RELEASE)\n \n ifneq ($(wildcard $(CFG_GIT)),)"}, {"sha": "a9bf251223afe130c5df1df5f0956c83003cb844", "filename": "configure", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fe57a7e582aea2a92e12d9b34cdec678f11edd6f/configure", "raw_url": "https://github.com/rust-lang/rust/raw/fe57a7e582aea2a92e12d9b34cdec678f11edd6f/configure", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/configure?ref=fe57a7e582aea2a92e12d9b34cdec678f11edd6f", "patch": "@@ -289,7 +289,7 @@ probe CFG_GCC              gcc\n probe CFG_LLVM_CONFIG      llvm-config\n probe CFG_VALGRIND         valgrind\n probe CFG_PERF             perf\n-probe CFG_MAKENSIS         makensis\n+probe CFG_ISCC             iscc\n probe CFG_NATURALDOCS      NaturalDocs naturaldocs\n probe CFG_LLNEXTGEN        LLnextgen\n probe CFG_PANDOC           pandoc"}, {"sha": "339e3efebd051445e20d4b397cf0e835107d3f1f", "filename": "mk/dist.mk", "status": "modified", "additions": 18, "deletions": 14, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/fe57a7e582aea2a92e12d9b34cdec678f11edd6f/mk%2Fdist.mk", "raw_url": "https://github.com/rust-lang/rust/raw/fe57a7e582aea2a92e12d9b34cdec678f11edd6f/mk%2Fdist.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mk%2Fdist.mk?ref=fe57a7e582aea2a92e12d9b34cdec678f11edd6f", "patch": "@@ -6,8 +6,9 @@ PKG_NAME := rust\n PKG_DIR = $(PKG_NAME)-$(CFG_RELEASE)\n PKG_TAR = $(PKG_DIR).tar.gz\n \n-ifdef CFG_MAKENSIS\n-PKG_NSI = $(S)src/etc/pkg/rust.nsi\n+ifdef CFG_ISCC\n+PKG_ISS = $(wildcard $(S)src/etc/pkg/*.iss)\n+PKG_ICO = $(S)src/etc/pkg/rust-logo.ico\n PKG_EXE = $(PKG_DIR)-install.exe\n endif\n \n@@ -38,18 +39,23 @@ PKG_FILES := \\\n \n UNROOTED_PKG_FILES := $(patsubst $(S)%,./%,$(PKG_FILES))\n \n-lic.txt: $(S)LICENSE.txt\n-\t@$(call E, crlf: $@)\n-\t@$(Q)perl -pe 's@\\r\\n|\\n@\\r\\n@go' <$< >$@\n+ifdef CFG_ISCC\n+LICENSE.txt: $(S)LICENSE.txt\n+\tcp $< $@\n \n-ifdef CFG_MAKENSIS\n-$(PKG_EXE): $(PKG_NSI) $(PKG_FILES) all rustc-stage3 lic.txt\n-\t@$(call E, makensis: $@)\n-\t$(Q)\"$(CFG_MAKENSIS)\" -NOCD -V1 \"-XOutFile $@\" \\\n-                        \"-XLicenseData lic.txt\" $<\n-\t$(Q)rm -f lic.txt\n+%.iss: $(S)src/etc/pkg/%.iss\n+\tcp $< $@\n+\n+%.ico: $(S)src/etc/pkg/%.ico\n+\tcp $< $@\n+\n+$(PKG_EXE): rust.iss modpath.iss LICENSE.txt rust-logo.ico \\\n+            $(PKG_FILES) all rustc-stage3\n+\t@$(call E, ISCC: $@)\n+\t$(Q)\"$(CFG_ISCC)\" $<\n endif\n \n+\n $(PKG_TAR): $(PKG_FILES)\n \t@$(call E, making dist dir)\n \t$(Q)rm -Rf dist\n@@ -68,7 +74,7 @@ $(PKG_TAR): $(PKG_FILES)\n \t$(Q)tar -czf $(PKG_TAR) -C dist $(PKG_DIR)\n \t$(Q)rm -Rf dist\n \n-.PHONY: dist nsis-dist distcheck\n+.PHONY: dist distcheck\n \n ifdef CFG_WINDOWSY\n \n@@ -84,8 +90,6 @@ else\n \n dist: $(PKG_TAR)\n \n-nsis-dist: $(PKG_EXE)\n-\n distcheck: $(PKG_TAR)\n \t$(Q)rm -Rf dist\n \t$(Q)mkdir -p dist"}, {"sha": "c0b4475ad05e1deb804d9a0ddb0d86b543825b4c", "filename": "src/etc/pkg/modpath.iss", "status": "added", "additions": 219, "deletions": 0, "changes": 219, "blob_url": "https://github.com/rust-lang/rust/blob/fe57a7e582aea2a92e12d9b34cdec678f11edd6f/src%2Fetc%2Fpkg%2Fmodpath.iss", "raw_url": "https://github.com/rust-lang/rust/raw/fe57a7e582aea2a92e12d9b34cdec678f11edd6f/src%2Fetc%2Fpkg%2Fmodpath.iss", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fetc%2Fpkg%2Fmodpath.iss?ref=fe57a7e582aea2a92e12d9b34cdec678f11edd6f", "patch": "@@ -0,0 +1,219 @@\n+// ----------------------------------------------------------------------------\n+//\n+// Inno Setup Ver:\t5.4.2\n+// Script Version:\t1.4.1\n+// Author:\t\t\tJared Breland <jbreland@legroom.net>\n+// Homepage:\t\thttp://www.legroom.net/software\n+// License:\t\t\tGNU Lesser General Public License (LGPL), version 3\n+//\t\t\t\t\t\thttp://www.gnu.org/licenses/lgpl.html\n+//\n+// Script Function:\n+//\tAllow modification of environmental path directly from Inno Setup installers\n+//\n+// Instructions:\n+//\tCopy modpath.iss to the same directory as your setup script\n+//\n+//\tAdd this statement to your [Setup] section\n+//\t\tChangesEnvironment=true\n+//\n+//\tAdd this statement to your [Tasks] section\n+//\tYou can change the Description or Flags\n+//\tYou can change the Name, but it must match the ModPathName setting below\n+//\t\tName: modifypath; Description: &Add application directory to your environmental path; Flags: unchecked\n+//\n+//\tAdd the following to the end of your [Code] section\n+//\tModPathName defines the name of the task defined above\n+//\tModPathType defines whether the 'user' or 'system' path will be modified;\n+//\t\tthis will default to user if anything other than system is set\n+//\tsetArrayLength must specify the total number of dirs to be added\n+//\tResult[0] contains first directory, Result[1] contains second, etc.\n+//\t\tconst\n+//\t\t\tModPathName = 'modifypath';\n+//\t\t\tModPathType = 'user';\n+//\n+//\t\tfunction ModPathDir(): TArrayOfString;\n+//\t\tbegin\n+//\t\t\tsetArrayLength(Result, 1);\n+//\t\t\tResult[0] := ExpandConstant('{app}');\n+//\t\tend;\n+//\t\t#include \"modpath.iss\"\n+// ----------------------------------------------------------------------------\n+\n+procedure ModPath();\n+var\n+\toldpath:\tString;\n+\tnewpath:\tString;\n+\tupdatepath:\tBoolean;\n+\tpathArr:\tTArrayOfString;\n+\taExecFile:\tString;\n+\taExecArr:\tTArrayOfString;\n+\ti, d:\t\tInteger;\n+\tpathdir:\tTArrayOfString;\n+\tregroot:\tInteger;\n+\tregpath:\tString;\n+\n+begin\n+\t// Get constants from main script and adjust behavior accordingly\n+\t// ModPathType MUST be 'system' or 'user'; force 'user' if invalid\n+\tif ModPathType = 'system' then begin\n+\t\tregroot := HKEY_LOCAL_MACHINE;\n+\t\tregpath := 'SYSTEM\\CurrentControlSet\\Control\\Session Manager\\Environment';\n+\tend else begin\n+\t\tregroot := HKEY_CURRENT_USER;\n+\t\tregpath := 'Environment';\n+\tend;\n+\n+\t// Get array of new directories and act on each individually\n+\tpathdir := ModPathDir();\n+\tfor d := 0 to GetArrayLength(pathdir)-1 do begin\n+\t\tupdatepath := true;\n+\n+\t\t// Modify WinNT path\n+\t\tif UsingWinNT() = true then begin\n+\n+\t\t\t// Get current path, split into an array\n+\t\t\tRegQueryStringValue(regroot, regpath, 'Path', oldpath);\n+\t\t\toldpath := oldpath + ';';\n+\t\t\ti := 0;\n+\n+\t\t\twhile (Pos(';', oldpath) > 0) do begin\n+\t\t\t\tSetArrayLength(pathArr, i+1);\n+\t\t\t\tpathArr[i] := Copy(oldpath, 0, Pos(';', oldpath)-1);\n+\t\t\t\toldpath := Copy(oldpath, Pos(';', oldpath)+1, Length(oldpath));\n+\t\t\t\ti := i + 1;\n+\n+\t\t\t\t// Check if current directory matches app dir\n+\t\t\t\tif pathdir[d] = pathArr[i-1] then begin\n+\t\t\t\t\t// if uninstalling, remove dir from path\n+\t\t\t\t\tif IsUninstaller() = true then begin\n+\t\t\t\t\t\tcontinue;\n+\t\t\t\t\t// if installing, flag that dir already exists in path\n+\t\t\t\t\tend else begin\n+\t\t\t\t\t\tupdatepath := false;\n+\t\t\t\t\tend;\n+\t\t\t\tend;\n+\n+\t\t\t\t// Add current directory to new path\n+\t\t\t\tif i = 1 then begin\n+\t\t\t\t\tnewpath := pathArr[i-1];\n+\t\t\t\tend else begin\n+\t\t\t\t\tnewpath := newpath + ';' + pathArr[i-1];\n+\t\t\t\tend;\n+\t\t\tend;\n+\n+\t\t\t// Append app dir to path if not already included\n+\t\t\tif (IsUninstaller() = false) AND (updatepath = true) then\n+\t\t\t\tnewpath := newpath + ';' + pathdir[d];\n+\n+\t\t\t// Write new path\n+\t\t\tRegWriteStringValue(regroot, regpath, 'Path', newpath);\n+\n+\t\t// Modify Win9x path\n+\t\tend else begin\n+\n+\t\t\t// Convert to shortened dirname\n+\t\t\tpathdir[d] := GetShortName(pathdir[d]);\n+\n+\t\t\t// If autoexec.bat exists, check if app dir already exists in path\n+\t\t\taExecFile := 'C:\\AUTOEXEC.BAT';\n+\t\t\tif FileExists(aExecFile) then begin\n+\t\t\t\tLoadStringsFromFile(aExecFile, aExecArr);\n+\t\t\t\tfor i := 0 to GetArrayLength(aExecArr)-1 do begin\n+\t\t\t\t\tif IsUninstaller() = false then begin\n+\t\t\t\t\t\t// If app dir already exists while installing, skip add\n+\t\t\t\t\t\tif (Pos(pathdir[d], aExecArr[i]) > 0) then\n+\t\t\t\t\t\t\tupdatepath := false;\n+\t\t\t\t\t\t\tbreak;\n+\t\t\t\t\tend else begin\n+\t\t\t\t\t\t// If app dir exists and = what we originally set, then delete at uninstall\n+\t\t\t\t\t\tif aExecArr[i] = 'SET PATH=%PATH%;' + pathdir[d] then\n+\t\t\t\t\t\t\taExecArr[i] := '';\n+\t\t\t\t\tend;\n+\t\t\t\tend;\n+\t\t\tend;\n+\n+\t\t\t// If app dir not found, or autoexec.bat didn't exist, then (create and) append to current path\n+\t\t\tif (IsUninstaller() = false) AND (updatepath = true) then begin\n+\t\t\t\tSaveStringToFile(aExecFile, #13#10 + 'SET PATH=%PATH%;' + pathdir[d], True);\n+\n+\t\t\t// If uninstalling, write the full autoexec out\n+\t\t\tend else begin\n+\t\t\t\tSaveStringsToFile(aExecFile, aExecArr, False);\n+\t\t\tend;\n+\t\tend;\n+\tend;\n+end;\n+\n+// Split a string into an array using passed delimeter\n+procedure Explode(var Dest: TArrayOfString; Text: String; Separator: String);\n+var\n+\ti: Integer;\n+begin\n+\ti := 0;\n+\trepeat\n+\t\tSetArrayLength(Dest, i+1);\n+\t\tif Pos(Separator,Text) > 0 then\tbegin\n+\t\t\tDest[i] := Copy(Text, 1, Pos(Separator, Text)-1);\n+\t\t\tText := Copy(Text, Pos(Separator,Text) + Length(Separator), Length(Text));\n+\t\t\ti := i + 1;\n+\t\tend else begin\n+\t\t\t Dest[i] := Text;\n+\t\t\t Text := '';\n+\t\tend;\n+\tuntil Length(Text)=0;\n+end;\n+\n+\n+procedure CurStepChanged(CurStep: TSetupStep);\n+var\n+\ttaskname:\tString;\n+begin\n+\ttaskname := ModPathName;\n+\tif CurStep = ssPostInstall then\n+\t\tif IsTaskSelected(taskname) then\n+\t\t\tModPath();\n+end;\n+\n+procedure CurUninstallStepChanged(CurUninstallStep: TUninstallStep);\n+var\n+\taSelectedTasks:\tTArrayOfString;\n+\ti:\t\t\t\tInteger;\n+\ttaskname:\t\tString;\n+\tregpath:\t\tString;\n+\tregstring:\t\tString;\n+\tappid:\t\t\tString;\n+begin\n+\t// only run during actual uninstall\n+\tif CurUninstallStep = usUninstall then begin\n+\t\t// get list of selected tasks saved in registry at install time\n+\t\tappid := '{#emit SetupSetting(\"AppId\")}';\n+\t\tif appid = '' then appid := '{#emit SetupSetting(\"AppName\")}';\n+\t\tregpath := ExpandConstant('Software\\Microsoft\\Windows\\CurrentVersion\\Uninstall\\'+appid+'_is1');\n+\t\tRegQueryStringValue(HKLM, regpath, 'Inno Setup: Selected Tasks', regstring);\n+\t\tif regstring = '' then RegQueryStringValue(HKCU, regpath, 'Inno Setup: Selected Tasks', regstring);\n+\n+\t\t// check each task; if matches modpath taskname, trigger patch removal\n+\t\tif regstring <> '' then begin\n+\t\t\ttaskname := ModPathName;\n+\t\t\tExplode(aSelectedTasks, regstring, ',');\n+\t\t\tif GetArrayLength(aSelectedTasks) > 0 then begin\n+\t\t\t\tfor i := 0 to GetArrayLength(aSelectedTasks)-1 do begin\n+\t\t\t\t\tif comparetext(aSelectedTasks[i], taskname) = 0 then\n+\t\t\t\t\t\tModPath();\n+\t\t\t\tend;\n+\t\t\tend;\n+\t\tend;\n+\tend;\n+end;\n+\n+function NeedRestart(): Boolean;\n+var\n+\ttaskname:\tString;\n+begin\n+\ttaskname := ModPathName;\n+\tif IsTaskSelected(taskname) and not UsingWinNT() then begin\n+\t\tResult := True;\n+\tend else begin\n+\t\tResult := False;\n+\tend;\n+end;"}, {"sha": "4749b398c2d2c063219f8e5b5c99bf1547ec0d99", "filename": "src/etc/pkg/rust-logo.ico", "status": "added", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/fe57a7e582aea2a92e12d9b34cdec678f11edd6f/src%2Fetc%2Fpkg%2Frust-logo.ico", "raw_url": "https://github.com/rust-lang/rust/raw/fe57a7e582aea2a92e12d9b34cdec678f11edd6f/src%2Fetc%2Fpkg%2Frust-logo.ico", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fetc%2Fpkg%2Frust-logo.ico?ref=fe57a7e582aea2a92e12d9b34cdec678f11edd6f"}, {"sha": "d7bd716c8ba5e5bcb0d2eed8c37faa79563160bc", "filename": "src/etc/pkg/rust.iss", "status": "added", "additions": 50, "deletions": 0, "changes": 50, "blob_url": "https://github.com/rust-lang/rust/blob/fe57a7e582aea2a92e12d9b34cdec678f11edd6f/src%2Fetc%2Fpkg%2Frust.iss", "raw_url": "https://github.com/rust-lang/rust/raw/fe57a7e582aea2a92e12d9b34cdec678f11edd6f/src%2Fetc%2Fpkg%2Frust.iss", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fetc%2Fpkg%2Frust.iss?ref=fe57a7e582aea2a92e12d9b34cdec678f11edd6f", "patch": "@@ -0,0 +1,50 @@\n+#define CFG_VERSION GetEnv(\"CFG_VERSION\")\n+\n+[Setup]\n+\n+SetupIconFile=rust-logo.ico\n+AppName=Rust\n+AppVersion={#CFG_VERSION}\n+AppCopyright=Copyright (C) 2006-2011 Mozilla Foundation, MIT license\n+AppPublisher=Mozilla Foundation\n+AppPublisherURL=http://www.rust-lang.org\n+VersionInfoVersion={#CFG_VERSION}\n+LicenseFile=LICENSE.txt\n+\n+DisableWelcomePage=true\n+DisableProgramGroupPage=true\n+DisableReadyPage=true\n+DisableStartupPrompt=true\n+\n+OutputDir=.\\\n+SourceDir=.\\\n+OutputBaseFilename=rust-{#CFG_VERSION}-install\n+DefaultDirName={pf32}\\Rust\n+\n+Compression=lzma2/ultra\n+InternalCompressLevel=ultra\n+SolidCompression=true\n+\n+ChangesEnvironment=true\n+ChangesAssociations=no\n+AllowUNCPath=false\n+AllowNoIcons=true\n+Uninstallable=yes\n+\n+[Tasks]\n+Name: modifypath; Description: &Add {app}\\bin to your PATH (recommended)\n+\n+[Files]\n+Source: \"i686-pc-mingw32/stage3/*.*\" ; DestDir: \"{app}\"; Flags: ignoreversion recursesubdirs\n+\n+[Code]\n+const\n+\tModPathName = 'modifypath';\n+\tModPathType = 'user';\n+\n+function ModPathDir(): TArrayOfString;\n+begin\n+\tsetArrayLength(Result, 1)\n+\tResult[0] := ExpandConstant('{app}\\bin');\n+end;\n+#include \"modpath.iss\"\n\\ No newline at end of file"}]}