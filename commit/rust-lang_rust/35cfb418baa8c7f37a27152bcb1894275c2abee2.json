{"sha": "35cfb418baa8c7f37a27152bcb1894275c2abee2", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM1Y2ZiNDE4YmFhOGM3ZjM3YTI3MTUyYmNiMTg5NDI3NWMyYWJlZTI=", "commit": {"author": {"name": "Florian Diebold", "email": "flodiebold@gmail.com", "date": "2019-02-10T14:16:23Z"}, "committer": {"name": "Florian Diebold", "email": "flodiebold@gmail.com", "date": "2019-02-10T15:20:01Z"}, "message": "Add some tests", "tree": {"sha": "4fe63f3cabd1868bc41634818f9a212c64604fd7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4fe63f3cabd1868bc41634818f9a212c64604fd7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/35cfb418baa8c7f37a27152bcb1894275c2abee2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/35cfb418baa8c7f37a27152bcb1894275c2abee2", "html_url": "https://github.com/rust-lang/rust/commit/35cfb418baa8c7f37a27152bcb1894275c2abee2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/35cfb418baa8c7f37a27152bcb1894275c2abee2/comments", "author": {"login": "flodiebold", "id": 906069, "node_id": "MDQ6VXNlcjkwNjA2OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/906069?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flodiebold", "html_url": "https://github.com/flodiebold", "followers_url": "https://api.github.com/users/flodiebold/followers", "following_url": "https://api.github.com/users/flodiebold/following{/other_user}", "gists_url": "https://api.github.com/users/flodiebold/gists{/gist_id}", "starred_url": "https://api.github.com/users/flodiebold/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flodiebold/subscriptions", "organizations_url": "https://api.github.com/users/flodiebold/orgs", "repos_url": "https://api.github.com/users/flodiebold/repos", "events_url": "https://api.github.com/users/flodiebold/events{/privacy}", "received_events_url": "https://api.github.com/users/flodiebold/received_events", "type": "User", "site_admin": false}, "committer": {"login": "flodiebold", "id": 906069, "node_id": "MDQ6VXNlcjkwNjA2OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/906069?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flodiebold", "html_url": "https://github.com/flodiebold", "followers_url": "https://api.github.com/users/flodiebold/followers", "following_url": "https://api.github.com/users/flodiebold/following{/other_user}", "gists_url": "https://api.github.com/users/flodiebold/gists{/gist_id}", "starred_url": "https://api.github.com/users/flodiebold/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flodiebold/subscriptions", "organizations_url": "https://api.github.com/users/flodiebold/orgs", "repos_url": "https://api.github.com/users/flodiebold/repos", "events_url": "https://api.github.com/users/flodiebold/events{/privacy}", "received_events_url": "https://api.github.com/users/flodiebold/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8e4be2708635818aa3e210f0e39fb871cc433004", "url": "https://api.github.com/repos/rust-lang/rust/commits/8e4be2708635818aa3e210f0e39fb871cc433004", "html_url": "https://github.com/rust-lang/rust/commit/8e4be2708635818aa3e210f0e39fb871cc433004"}], "stats": {"total": 120, "additions": 120, "deletions": 0}, "files": [{"sha": "5732eeccf1e1587c3aded8c8635ca2c3ccd2bae8", "filename": "crates/ra_hir/src/marks.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/35cfb418baa8c7f37a27152bcb1894275c2abee2/crates%2Fra_hir%2Fsrc%2Fmarks.rs", "raw_url": "https://github.com/rust-lang/rust/raw/35cfb418baa8c7f37a27152bcb1894275c2abee2/crates%2Fra_hir%2Fsrc%2Fmarks.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fmarks.rs?ref=35cfb418baa8c7f37a27152bcb1894275c2abee2", "patch": "@@ -4,4 +4,5 @@ test_utils::marks!(\n     type_var_cycles_resolve_completely\n     type_var_cycles_resolve_as_possible\n     type_var_resolves_to_int_var\n+    glob_enum\n );"}, {"sha": "91566fc9849372c33961548b21d3bed7279a2692", "filename": "crates/ra_hir/src/nameres/tests.rs", "status": "modified", "additions": 119, "deletions": 0, "changes": 119, "blob_url": "https://github.com/rust-lang/rust/blob/35cfb418baa8c7f37a27152bcb1894275c2abee2/crates%2Fra_hir%2Fsrc%2Fnameres%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/35cfb418baa8c7f37a27152bcb1894275c2abee2/crates%2Fra_hir%2Fsrc%2Fnameres%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fnameres%2Ftests.rs?ref=35cfb418baa8c7f37a27152bcb1894275c2abee2", "patch": "@@ -164,6 +164,125 @@ fn re_exports() {\n     );\n }\n \n+#[test]\n+fn glob_1() {\n+    let (item_map, module_id) = item_map(\n+        \"\n+        //- /lib.rs\n+        mod foo;\n+        use foo::*;\n+        <|>\n+\n+        //- /foo/mod.rs\n+        pub mod bar;\n+        pub use self::bar::Baz;\n+        pub struct Foo;\n+\n+        //- /foo/bar.rs\n+        pub struct Baz;\n+    \",\n+    );\n+    check_module_item_map(\n+        &item_map,\n+        module_id,\n+        \"\n+            Baz: t v\n+            Foo: t v\n+            bar: t\n+            foo: t\n+        \",\n+    );\n+}\n+\n+#[test]\n+fn glob_2() {\n+    let (item_map, module_id) = item_map(\n+        \"\n+        //- /lib.rs\n+        mod foo;\n+        use foo::*;\n+        <|>\n+\n+        //- /foo/mod.rs\n+        pub mod bar;\n+        pub use self::bar::*;\n+        pub struct Foo;\n+\n+        //- /foo/bar.rs\n+        pub struct Baz;\n+        pub use super::*;\n+    \",\n+    );\n+    check_module_item_map(\n+        &item_map,\n+        module_id,\n+        \"\n+            Baz: t v\n+            Foo: t v\n+            bar: t\n+            foo: t\n+        \",\n+    );\n+}\n+\n+#[test]\n+fn glob_enum() {\n+    covers!(glob_enum);\n+    let (item_map, module_id) = item_map(\n+        \"\n+        //- /lib.rs\n+        enum Foo {\n+            Bar, Baz\n+        }\n+        use self::Foo::*;\n+        <|>\n+    \",\n+    );\n+    check_module_item_map(\n+        &item_map,\n+        module_id,\n+        \"\n+            Bar: t v\n+            Baz: t v\n+            Foo: t\n+        \",\n+    );\n+}\n+\n+#[test]\n+fn glob_across_crates() {\n+    let (mut db, sr) = MockDatabase::with_files(\n+        \"\n+        //- /main.rs\n+        use test_crate::*;\n+\n+        //- /lib.rs\n+        pub struct Baz;\n+    \",\n+    );\n+    let main_id = sr.files[RelativePath::new(\"/main.rs\")];\n+    let lib_id = sr.files[RelativePath::new(\"/lib.rs\")];\n+\n+    let mut crate_graph = CrateGraph::default();\n+    let main_crate = crate_graph.add_crate_root(main_id);\n+    let lib_crate = crate_graph.add_crate_root(lib_id);\n+    crate_graph.add_dep(main_crate, \"test_crate\".into(), lib_crate).unwrap();\n+\n+    db.set_crate_graph(Arc::new(crate_graph));\n+\n+    let module = crate::source_binder::module_from_file_id(&db, main_id).unwrap();\n+    let krate = module.krate(&db).unwrap();\n+    let item_map = db.item_map(krate);\n+\n+    check_module_item_map(\n+        &item_map,\n+        module.module_id,\n+        \"\n+            Baz: t v\n+        \",\n+    );\n+}\n+\n #[test]\n fn module_resolution_works_for_non_standard_filenames() {\n     let (item_map, module_id) = item_map_custom_crate_root("}]}