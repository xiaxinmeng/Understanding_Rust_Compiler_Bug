{"sha": "9731c28e116943220b397d3131273344f0750913", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk3MzFjMjhlMTE2OTQzMjIwYjM5N2QzMTMxMjczMzQ0ZjA3NTA5MTM=", "commit": {"author": {"name": "Adolfo Ochagav\u00eda", "email": "aochagavia92@gmail.com", "date": "2014-06-07T16:17:58Z"}, "committer": {"name": "Adolfo Ochagav\u00eda", "email": "aochagavia92@gmail.com", "date": "2014-06-07T17:44:45Z"}, "message": "Implement Show for SmallIntMap", "tree": {"sha": "7aeb9051d11470f32268a40de1fbd81ede9432e6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7aeb9051d11470f32268a40de1fbd81ede9432e6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9731c28e116943220b397d3131273344f0750913", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9731c28e116943220b397d3131273344f0750913", "html_url": "https://github.com/rust-lang/rust/commit/9731c28e116943220b397d3131273344f0750913", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9731c28e116943220b397d3131273344f0750913/comments", "author": {"login": "aochagavia", "id": 5196584, "node_id": "MDQ6VXNlcjUxOTY1ODQ=", "avatar_url": "https://avatars.githubusercontent.com/u/5196584?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aochagavia", "html_url": "https://github.com/aochagavia", "followers_url": "https://api.github.com/users/aochagavia/followers", "following_url": "https://api.github.com/users/aochagavia/following{/other_user}", "gists_url": "https://api.github.com/users/aochagavia/gists{/gist_id}", "starred_url": "https://api.github.com/users/aochagavia/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aochagavia/subscriptions", "organizations_url": "https://api.github.com/users/aochagavia/orgs", "repos_url": "https://api.github.com/users/aochagavia/repos", "events_url": "https://api.github.com/users/aochagavia/events{/privacy}", "received_events_url": "https://api.github.com/users/aochagavia/received_events", "type": "User", "site_admin": false}, "committer": {"login": "aochagavia", "id": 5196584, "node_id": "MDQ6VXNlcjUxOTY1ODQ=", "avatar_url": "https://avatars.githubusercontent.com/u/5196584?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aochagavia", "html_url": "https://github.com/aochagavia", "followers_url": "https://api.github.com/users/aochagavia/followers", "following_url": "https://api.github.com/users/aochagavia/following{/other_user}", "gists_url": "https://api.github.com/users/aochagavia/gists{/gist_id}", "starred_url": "https://api.github.com/users/aochagavia/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aochagavia/subscriptions", "organizations_url": "https://api.github.com/users/aochagavia/orgs", "repos_url": "https://api.github.com/users/aochagavia/repos", "events_url": "https://api.github.com/users/aochagavia/events{/privacy}", "received_events_url": "https://api.github.com/users/aochagavia/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f1bff592b1d3dff14459374af930ae3fee6253ce", "url": "https://api.github.com/repos/rust-lang/rust/commits/f1bff592b1d3dff14459374af930ae3fee6253ce", "html_url": "https://github.com/rust-lang/rust/commit/f1bff592b1d3dff14459374af930ae3fee6253ce"}], "stats": {"total": 27, "additions": 27, "deletions": 0}, "files": [{"sha": "45584dd4b28ba4eccda480616bd855e23cbc1bcb", "filename": "src/libcollections/smallintmap.rs", "status": "modified", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/9731c28e116943220b397d3131273344f0750913/src%2Flibcollections%2Fsmallintmap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9731c28e116943220b397d3131273344f0750913/src%2Flibcollections%2Fsmallintmap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcollections%2Fsmallintmap.rs?ref=9731c28e116943220b397d3131273344f0750913", "patch": "@@ -17,6 +17,7 @@\n \n use core::prelude::*;\n \n+use core::fmt;\n use core::iter::{Enumerate, FilterMap};\n use core::mem::replace;\n \n@@ -176,6 +177,18 @@ impl<V:Clone> SmallIntMap<V> {\n     }\n }\n \n+impl<V: fmt::Show> fmt::Show for SmallIntMap<V> {\n+    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {\n+        try!(write!(f, r\"\\{\"));\n+\n+        for (i, (k, v)) in self.iter().enumerate() {\n+            if i != 0 { try!(write!(f, \", \")); }\n+            try!(write!(f, \"{}: {}\", k, *v));\n+        }\n+\n+        write!(f, r\"\\}\")\n+    }\n+}\n \n macro_rules! iterator {\n     (impl $name:ident -> $elem:ty, $getter:ident) => {\n@@ -461,6 +474,20 @@ mod test_map {\n         assert!(called);\n         m.insert(2, box 1);\n     }\n+\n+    #[test]\n+    fn test_show() {\n+        let mut map = SmallIntMap::new();\n+        let empty = SmallIntMap::<int>::new();\n+\n+        map.insert(1, 2);\n+        map.insert(3, 4);\n+\n+        let map_str = map.to_str();\n+        let map_str = map_str.as_slice();\n+        assert!(map_str == \"{1: 2, 3: 4}\" || map_str == \"{3: 4, 1: 2}\");\n+        assert_eq!(format!(\"{}\", empty), \"{}\".to_string());\n+    }\n }\n \n #[cfg(test)]"}]}