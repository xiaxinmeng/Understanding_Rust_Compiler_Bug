{"sha": "400e28d27af3c4e0f7fca2274cb1817651d7ba37", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQwMGUyOGQyN2FmM2M0ZTBmN2ZjYTIyNzRjYjE4MTc2NTFkN2JhMzc=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2019-01-21T14:48:07Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2019-01-21T18:08:47Z"}, "message": "fix validation range printing when encountering undef", "tree": {"sha": "d8660667017ed157acbe4824193de7546a7018eb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d8660667017ed157acbe4824193de7546a7018eb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/400e28d27af3c4e0f7fca2274cb1817651d7ba37", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/400e28d27af3c4e0f7fca2274cb1817651d7ba37", "html_url": "https://github.com/rust-lang/rust/commit/400e28d27af3c4e0f7fca2274cb1817651d7ba37", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/400e28d27af3c4e0f7fca2274cb1817651d7ba37/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "33b0b7148fa4eacf43c204b2505867a4cd8e4735", "url": "https://api.github.com/repos/rust-lang/rust/commits/33b0b7148fa4eacf43c204b2505867a4cd8e4735", "html_url": "https://github.com/rust-lang/rust/commit/33b0b7148fa4eacf43c204b2505867a4cd8e4735"}], "stats": {"total": 30, "additions": 25, "deletions": 5}, "files": [{"sha": "8f5a5bf8ee312d77dcbf27c6ebc9527aa484c340", "filename": "src/librustc_mir/interpret/validity.rs", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/400e28d27af3c4e0f7fca2274cb1817651d7ba37/src%2Flibrustc_mir%2Finterpret%2Fvalidity.rs", "raw_url": "https://github.com/rust-lang/rust/raw/400e28d27af3c4e0f7fca2274cb1817651d7ba37/src%2Flibrustc_mir%2Finterpret%2Fvalidity.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Finterpret%2Fvalidity.rs?ref=400e28d27af3c4e0f7fca2274cb1817651d7ba37", "patch": "@@ -449,8 +449,13 @@ impl<'rt, 'a, 'mir, 'tcx, M: Machine<'a, 'mir, 'tcx>>\n         }\n         // At least one value is excluded. Get the bits.\n         let value = try_validation!(value.not_undef(),\n-            value, self.path,\n-            format!(\"something in the range {:?}\", layout.valid_range));\n+            value,\n+            self.path,\n+            format!(\n+                \"something {}\",\n+                wrapping_range_format(&layout.valid_range, max_hi),\n+            )\n+        );\n         let bits = match value {\n             Scalar::Ptr(ptr) => {\n                 if lo == 1 && hi == max_hi {"}, {"sha": "3e0b0948ef3c3ff4b536809a261fb28bc50d6c72", "filename": "src/test/ui/consts/const-eval/ub-nonnull.rs", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/400e28d27af3c4e0f7fca2274cb1817651d7ba37/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fub-nonnull.rs", "raw_url": "https://github.com/rust-lang/rust/raw/400e28d27af3c4e0f7fca2274cb1817651d7ba37/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fub-nonnull.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fub-nonnull.rs?ref=400e28d27af3c4e0f7fca2274cb1817651d7ba37", "patch": "@@ -13,6 +13,13 @@ const NULL_U8: NonZeroU8 = unsafe { mem::transmute(0u8) };\n const NULL_USIZE: NonZeroUsize = unsafe { mem::transmute(0usize) };\n //~^ ERROR it is undefined behavior to use this value\n \n+union Transmute {\n+    uninit: (),\n+    out: NonZeroU8,\n+}\n+const UNINIT: NonZeroU8 = unsafe { Transmute { uninit: () }.out };\n+//~^ ERROR it is undefined behavior to use this value\n+\n // Also test other uses of rustc_layout_scalar_valid_range_start\n \n #[rustc_layout_scalar_valid_range_start(10)]"}, {"sha": "6230712ad6f232497c7123a6acf4d3b378470093", "filename": "src/test/ui/consts/const-eval/ub-nonnull.stderr", "status": "modified", "additions": 11, "deletions": 3, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/400e28d27af3c4e0f7fca2274cb1817651d7ba37/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fub-nonnull.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/400e28d27af3c4e0f7fca2274cb1817651d7ba37/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fub-nonnull.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fub-nonnull.stderr?ref=400e28d27af3c4e0f7fca2274cb1817651d7ba37", "patch": "@@ -23,21 +23,29 @@ LL | const NULL_USIZE: NonZeroUsize = unsafe { mem::transmute(0usize) };\n    = note: The rules on what exactly is undefined behavior aren't clear, so this check might be overzealous. Please open an issue on the rust compiler repository if you believe it should not be considered undefined behavior\n \n error[E0080]: it is undefined behavior to use this value\n-  --> $DIR/ub-nonnull.rs:21:1\n+  --> $DIR/ub-nonnull.rs:20:1\n+   |\n+LL | const UNINIT: NonZeroU8 = unsafe { Transmute { uninit: () }.out };\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ type validation failed: encountered uninitialized bytes, but expected something greater or equal to 1\n+   |\n+   = note: The rules on what exactly is undefined behavior aren't clear, so this check might be overzealous. Please open an issue on the rust compiler repository if you believe it should not be considered undefined behavior\n+\n+error[E0080]: it is undefined behavior to use this value\n+  --> $DIR/ub-nonnull.rs:28:1\n    |\n LL | const BAD_RANGE1: RestrictedRange1 = unsafe { RestrictedRange1(42) };\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ type validation failed: encountered 42, but expected something in the range 10..=30\n    |\n    = note: The rules on what exactly is undefined behavior aren't clear, so this check might be overzealous. Please open an issue on the rust compiler repository if you believe it should not be considered undefined behavior\n \n error[E0080]: it is undefined behavior to use this value\n-  --> $DIR/ub-nonnull.rs:27:1\n+  --> $DIR/ub-nonnull.rs:34:1\n    |\n LL | const BAD_RANGE2: RestrictedRange2 = unsafe { RestrictedRange2(20) };\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ type validation failed: encountered 20, but expected something less or equal to 10, or greater or equal to 30\n    |\n    = note: The rules on what exactly is undefined behavior aren't clear, so this check might be overzealous. Please open an issue on the rust compiler repository if you believe it should not be considered undefined behavior\n \n-error: aborting due to 5 previous errors\n+error: aborting due to 6 previous errors\n \n For more information about this error, try `rustc --explain E0080`."}]}