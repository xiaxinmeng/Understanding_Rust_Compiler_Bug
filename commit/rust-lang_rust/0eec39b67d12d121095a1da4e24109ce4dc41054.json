{"sha": "0eec39b67d12d121095a1da4e24109ce4dc41054", "node_id": "C_kwDOAAsO6NoAKDBlZWMzOWI2N2QxMmQxMjEwOTVhMWRhNGUyNDEwOWNlNGRjNDEwNTQ", "commit": {"author": {"name": "R\u00e9my Rakic", "email": "remy.rakic+github@gmail.com", "date": "2023-06-14T19:59:41Z"}, "committer": {"name": "R\u00e9my Rakic", "email": "remy.rakic+github@gmail.com", "date": "2023-06-14T20:08:04Z"}, "message": "make `traversal::reverse_postorder` use RPO cache", "tree": {"sha": "6508de7097b51fe2d3480d61aca37fa87abe9b2e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6508de7097b51fe2d3480d61aca37fa87abe9b2e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0eec39b67d12d121095a1da4e24109ce4dc41054", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0eec39b67d12d121095a1da4e24109ce4dc41054", "html_url": "https://github.com/rust-lang/rust/commit/0eec39b67d12d121095a1da4e24109ce4dc41054", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0eec39b67d12d121095a1da4e24109ce4dc41054/comments", "author": {"login": "lqd", "id": 247183, "node_id": "MDQ6VXNlcjI0NzE4Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/247183?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lqd", "html_url": "https://github.com/lqd", "followers_url": "https://api.github.com/users/lqd/followers", "following_url": "https://api.github.com/users/lqd/following{/other_user}", "gists_url": "https://api.github.com/users/lqd/gists{/gist_id}", "starred_url": "https://api.github.com/users/lqd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lqd/subscriptions", "organizations_url": "https://api.github.com/users/lqd/orgs", "repos_url": "https://api.github.com/users/lqd/repos", "events_url": "https://api.github.com/users/lqd/events{/privacy}", "received_events_url": "https://api.github.com/users/lqd/received_events", "type": "User", "site_admin": false}, "committer": {"login": "lqd", "id": 247183, "node_id": "MDQ6VXNlcjI0NzE4Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/247183?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lqd", "html_url": "https://github.com/lqd", "followers_url": "https://api.github.com/users/lqd/followers", "following_url": "https://api.github.com/users/lqd/following{/other_user}", "gists_url": "https://api.github.com/users/lqd/gists{/gist_id}", "starred_url": "https://api.github.com/users/lqd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lqd/subscriptions", "organizations_url": "https://api.github.com/users/lqd/orgs", "repos_url": "https://api.github.com/users/lqd/repos", "events_url": "https://api.github.com/users/lqd/events{/privacy}", "received_events_url": "https://api.github.com/users/lqd/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8f6e65136c94956fc172f73b31be282b65afb0c5", "url": "https://api.github.com/repos/rust-lang/rust/commits/8f6e65136c94956fc172f73b31be282b65afb0c5", "html_url": "https://github.com/rust-lang/rust/commit/8f6e65136c94956fc172f73b31be282b65afb0c5"}], "stats": {"total": 35, "additions": 6, "deletions": 29}, "files": [{"sha": "780003f5fa05d8bf4212175cbadc1eb128ad4481", "filename": "compiler/rustc_middle/src/mir/traversal.rs", "status": "modified", "additions": 6, "deletions": 29, "changes": 35, "blob_url": "https://github.com/rust-lang/rust/blob/0eec39b67d12d121095a1da4e24109ce4dc41054/compiler%2Frustc_middle%2Fsrc%2Fmir%2Ftraversal.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0eec39b67d12d121095a1da4e24109ce4dc41054/compiler%2Frustc_middle%2Fsrc%2Fmir%2Ftraversal.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fmir%2Ftraversal.rs?ref=0eec39b67d12d121095a1da4e24109ce4dc41054", "patch": "@@ -295,34 +295,11 @@ pub fn reachable_as_bitset(body: &Body<'_>) -> BitSet<BasicBlock> {\n     iter.visited\n }\n \n-#[derive(Clone)]\n-pub struct ReversePostorderIter<'a, 'tcx> {\n+/// Creates an iterator over the `Body`'s basic blocks, that:\n+/// - returns basic blocks in a reverse postorder,\n+/// - makes use of the `BasicBlocks` CFG cache's reverse postorder.\n+pub fn reverse_postorder<'a, 'tcx>(\n     body: &'a Body<'tcx>,\n-    blocks: &'a [BasicBlock],\n-    idx: usize,\n-}\n-\n-impl<'a, 'tcx> Iterator for ReversePostorderIter<'a, 'tcx> {\n-    type Item = (BasicBlock, &'a BasicBlockData<'tcx>);\n-\n-    fn next(&mut self) -> Option<(BasicBlock, &'a BasicBlockData<'tcx>)> {\n-        if self.idx == 0 {\n-            return None;\n-        }\n-        self.idx -= 1;\n-\n-        self.blocks.get(self.idx).map(|&bb| (bb, &self.body[bb]))\n-    }\n-\n-    fn size_hint(&self) -> (usize, Option<usize>) {\n-        (self.idx, Some(self.idx))\n-    }\n-}\n-\n-impl<'a, 'tcx> ExactSizeIterator for ReversePostorderIter<'a, 'tcx> {}\n-\n-pub fn reverse_postorder<'a, 'tcx>(body: &'a Body<'tcx>) -> ReversePostorderIter<'a, 'tcx> {\n-    let blocks = body.basic_blocks.postorder();\n-    let len = blocks.len();\n-    ReversePostorderIter { body, blocks, idx: len }\n+) -> impl Iterator<Item = (BasicBlock, &'a BasicBlockData<'tcx>)> + ExactSizeIterator {\n+    body.basic_blocks.reverse_postorder().iter().map(|&bb| (bb, &body.basic_blocks[bb]))\n }"}]}