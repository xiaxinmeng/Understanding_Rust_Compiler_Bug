{"sha": "940e0b376510d68e7ce4a8eb30e33517692d83b1", "node_id": "C_kwDOAAsO6NoAKDk0MGUwYjM3NjUxMGQ2OGU3Y2U0YThlYjMwZTMzNTE3NjkyZDgzYjE", "commit": {"author": {"name": "DrMeepster", "email": "19316085+DrMeepster@users.noreply.github.com", "date": "2022-06-01T01:25:06Z"}, "committer": {"name": "DrMeepster", "email": "19316085+DrMeepster@users.noreply.github.com", "date": "2022-06-11T23:52:59Z"}, "message": "fix compat_fn option method on miri", "tree": {"sha": "8b0fa0df4461090411092341b0650741a61a4dde", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8b0fa0df4461090411092341b0650741a61a4dde"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/940e0b376510d68e7ce4a8eb30e33517692d83b1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/940e0b376510d68e7ce4a8eb30e33517692d83b1", "html_url": "https://github.com/rust-lang/rust/commit/940e0b376510d68e7ce4a8eb30e33517692d83b1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/940e0b376510d68e7ce4a8eb30e33517692d83b1/comments", "author": {"login": "DrMeepster", "id": 19316085, "node_id": "MDQ6VXNlcjE5MzE2MDg1", "avatar_url": "https://avatars.githubusercontent.com/u/19316085?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DrMeepster", "html_url": "https://github.com/DrMeepster", "followers_url": "https://api.github.com/users/DrMeepster/followers", "following_url": "https://api.github.com/users/DrMeepster/following{/other_user}", "gists_url": "https://api.github.com/users/DrMeepster/gists{/gist_id}", "starred_url": "https://api.github.com/users/DrMeepster/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DrMeepster/subscriptions", "organizations_url": "https://api.github.com/users/DrMeepster/orgs", "repos_url": "https://api.github.com/users/DrMeepster/repos", "events_url": "https://api.github.com/users/DrMeepster/events{/privacy}", "received_events_url": "https://api.github.com/users/DrMeepster/received_events", "type": "User", "site_admin": false}, "committer": {"login": "DrMeepster", "id": 19316085, "node_id": "MDQ6VXNlcjE5MzE2MDg1", "avatar_url": "https://avatars.githubusercontent.com/u/19316085?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DrMeepster", "html_url": "https://github.com/DrMeepster", "followers_url": "https://api.github.com/users/DrMeepster/followers", "following_url": "https://api.github.com/users/DrMeepster/following{/other_user}", "gists_url": "https://api.github.com/users/DrMeepster/gists{/gist_id}", "starred_url": "https://api.github.com/users/DrMeepster/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DrMeepster/subscriptions", "organizations_url": "https://api.github.com/users/DrMeepster/orgs", "repos_url": "https://api.github.com/users/DrMeepster/repos", "events_url": "https://api.github.com/users/DrMeepster/events{/privacy}", "received_events_url": "https://api.github.com/users/DrMeepster/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "09d52bc5d4260bac8b9a2ea8ac7a07c5c72906f1", "url": "https://api.github.com/repos/rust-lang/rust/commits/09d52bc5d4260bac8b9a2ea8ac7a07c5c72906f1", "html_url": "https://github.com/rust-lang/rust/commit/09d52bc5d4260bac8b9a2ea8ac7a07c5c72906f1"}], "stats": {"total": 17, "additions": 9, "deletions": 8}, "files": [{"sha": "424a0892b420c069b2517d3c54535c16d84c01e4", "filename": "library/std/src/sys/windows/compat.rs", "status": "modified", "additions": 9, "deletions": 8, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/940e0b376510d68e7ce4a8eb30e33517692d83b1/library%2Fstd%2Fsrc%2Fsys%2Fwindows%2Fcompat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/940e0b376510d68e7ce4a8eb30e33517692d83b1/library%2Fstd%2Fsrc%2Fsys%2Fwindows%2Fcompat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys%2Fwindows%2Fcompat.rs?ref=940e0b376510d68e7ce4a8eb30e33517692d83b1", "patch": "@@ -103,20 +103,21 @@ macro_rules! compat_fn {\n \n             #[allow(dead_code)]\n             pub fn option() -> Option<F> {\n-                unsafe { PTR }\n+                unsafe {\n+                    if cfg!(miri) {\n+                        // Miri does not run `init`, so we just call `get_f` each time.\n+                        get_f()\n+                    } else {\n+                        PTR\n+                    }\n+                }\n             }\n \n             #[allow(dead_code)]\n             pub unsafe fn call($($argname: $argtype),*) -> $rettype {\n-                if let Some(ptr) = PTR {\n+                if let Some(ptr) = option() {\n                     return ptr($($argname),*);\n                 }\n-                if cfg!(miri) {\n-                    // Miri does not run `init`, so we just call `get_f` each time.\n-                    if let Some(ptr) = get_f() {\n-                        return ptr($($argname),*);\n-                    }\n-                }\n                 $fallback_body\n             }\n         }"}]}