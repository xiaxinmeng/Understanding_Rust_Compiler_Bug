{"sha": "c7e16c5f47ac86877ab6c52db61709349e4cf276", "node_id": "MDY6Q29tbWl0NzI0NzEyOmM3ZTE2YzVmNDdhYzg2ODc3YWI2YzUyZGI2MTcwOTM0OWU0Y2YyNzY=", "commit": {"author": {"name": "Mateusz Miku\u0142a", "email": "matti@marinelayer.io", "date": "2019-08-06T12:55:57Z"}, "committer": {"name": "Mateusz Miku\u0142a", "email": "mati865@gmail.com", "date": "2019-08-09T08:32:34Z"}, "message": "Check links on all platforms when running locally", "tree": {"sha": "d53dacf567b536a14d641ee6ca7c4efe719b5f72", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d53dacf567b536a14d641ee6ca7c4efe719b5f72"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c7e16c5f47ac86877ab6c52db61709349e4cf276", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c7e16c5f47ac86877ab6c52db61709349e4cf276", "html_url": "https://github.com/rust-lang/rust/commit/c7e16c5f47ac86877ab6c52db61709349e4cf276", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c7e16c5f47ac86877ab6c52db61709349e4cf276/comments", "author": {"login": "mati865", "id": 1174646, "node_id": "MDQ6VXNlcjExNzQ2NDY=", "avatar_url": "https://avatars.githubusercontent.com/u/1174646?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mati865", "html_url": "https://github.com/mati865", "followers_url": "https://api.github.com/users/mati865/followers", "following_url": "https://api.github.com/users/mati865/following{/other_user}", "gists_url": "https://api.github.com/users/mati865/gists{/gist_id}", "starred_url": "https://api.github.com/users/mati865/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mati865/subscriptions", "organizations_url": "https://api.github.com/users/mati865/orgs", "repos_url": "https://api.github.com/users/mati865/repos", "events_url": "https://api.github.com/users/mati865/events{/privacy}", "received_events_url": "https://api.github.com/users/mati865/received_events", "type": "User", "site_admin": false}, "committer": {"login": "mati865", "id": 1174646, "node_id": "MDQ6VXNlcjExNzQ2NDY=", "avatar_url": "https://avatars.githubusercontent.com/u/1174646?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mati865", "html_url": "https://github.com/mati865", "followers_url": "https://api.github.com/users/mati865/followers", "following_url": "https://api.github.com/users/mati865/following{/other_user}", "gists_url": "https://api.github.com/users/mati865/gists{/gist_id}", "starred_url": "https://api.github.com/users/mati865/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mati865/subscriptions", "organizations_url": "https://api.github.com/users/mati865/orgs", "repos_url": "https://api.github.com/users/mati865/repos", "events_url": "https://api.github.com/users/mati865/events{/privacy}", "received_events_url": "https://api.github.com/users/mati865/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d8f8be4636f6f49d28f548e0b8730f8e916b070d", "url": "https://api.github.com/repos/rust-lang/rust/commits/d8f8be4636f6f49d28f548e0b8730f8e916b070d", "html_url": "https://github.com/rust-lang/rust/commit/d8f8be4636f6f49d28f548e0b8730f8e916b070d"}], "stats": {"total": 49, "additions": 36, "deletions": 13}, "files": [{"sha": "df7eb7c455d0267922fc6bf07fac90c85c02a1f0", "filename": "src/bootstrap/tool.rs", "status": "modified", "additions": 23, "deletions": 3, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/c7e16c5f47ac86877ab6c52db61709349e4cf276/src%2Fbootstrap%2Ftool.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c7e16c5f47ac86877ab6c52db61709349e4cf276/src%2Fbootstrap%2Ftool.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Ftool.rs?ref=c7e16c5f47ac86877ab6c52db61709349e4cf276", "patch": "@@ -9,7 +9,7 @@ use build_helper::t;\n use crate::Mode;\n use crate::Compiler;\n use crate::builder::{Step, RunConfig, ShouldRun, Builder};\n-use crate::util::{exe, add_lib_path};\n+use crate::util::{exe, add_lib_path, CiEnv};\n use crate::compile;\n use crate::channel::GitInfo;\n use crate::channel;\n@@ -279,11 +279,26 @@ pub fn prepare_tool_cargo(\n     cargo\n }\n \n+fn rustbook_features() -> Vec<String> {\n+    let mut features = Vec::new();\n+\n+    // Due to CI budged and risk of spurious failures we want to limit jobs running this check.\n+    // At same time local builds should run it regardless of the platform.\n+    // `CiEnv::None` means it's local build and `CHECK_LINKS` is defined in x86_64-gnu-tools to\n+    // explicitly enable it on single job\n+    if CiEnv::current() == CiEnv::None || env::var(\"CHECK_LINKS\").is_ok() {\n+        features.push(\"linkcheck\".to_string());\n+    }\n+\n+    features\n+}\n+\n macro_rules! bootstrap_tool {\n     ($(\n         $name:ident, $path:expr, $tool_name:expr\n         $(,llvm_tools = $llvm:expr)*\n         $(,is_external_tool = $external:expr)*\n+        $(,features = $features:expr)*\n         ;\n     )+) => {\n         #[derive(Copy, PartialEq, Eq, Clone)]\n@@ -350,7 +365,12 @@ macro_rules! bootstrap_tool {\n                     } else {\n                         SourceType::InTree\n                     },\n-                    extra_features: Vec::new(),\n+                    extra_features: {\n+                        // FIXME(#60643): avoid this lint by using `_`\n+                        let mut _tmp = Vec::new();\n+                        $(_tmp.extend($features);)*\n+                        _tmp\n+                    },\n                 }).expect(\"expected to build -- essential tool\")\n             }\n         }\n@@ -359,7 +379,7 @@ macro_rules! bootstrap_tool {\n }\n \n bootstrap_tool!(\n-    Rustbook, \"src/tools/rustbook\", \"rustbook\";\n+    Rustbook, \"src/tools/rustbook\", \"rustbook\", features = rustbook_features();\n     UnstableBookGen, \"src/tools/unstable-book-gen\", \"unstable-book-gen\";\n     Tidy, \"src/tools/tidy\", \"tidy\";\n     Linkchecker, \"src/tools/linkchecker\", \"linkchecker\";"}, {"sha": "8035195c6ed0ae5cdee52296fa294ed6fde3c2d5", "filename": "src/ci/docker/x86_64-gnu-tools/Dockerfile", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/c7e16c5f47ac86877ab6c52db61709349e4cf276/src%2Fci%2Fdocker%2Fx86_64-gnu-tools%2FDockerfile", "raw_url": "https://github.com/rust-lang/rust/raw/c7e16c5f47ac86877ab6c52db61709349e4cf276/src%2Fci%2Fdocker%2Fx86_64-gnu-tools%2FDockerfile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fx86_64-gnu-tools%2FDockerfile?ref=c7e16c5f47ac86877ab6c52db61709349e4cf276", "patch": "@@ -21,6 +21,9 @@ COPY x86_64-gnu-tools/checkregression.py /tmp/\n COPY x86_64-gnu-tools/checktools.sh /tmp/\n COPY x86_64-gnu-tools/repo.sh /tmp/\n \n+# Run rustbook with `linkcheck` feature enabled\n+ENV CHECK_LINKS 1\n+\n ENV RUST_CONFIGURE_ARGS \\\n   --build=x86_64-unknown-linux-gnu \\\n   --save-toolstates=/tmp/toolstates.json"}, {"sha": "a7188f0d11eac264ff3eba66eeffe7e05b4bee2a", "filename": "src/tools/rustbook/Cargo.toml", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/c7e16c5f47ac86877ab6c52db61709349e4cf276/src%2Ftools%2Frustbook%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/c7e16c5f47ac86877ab6c52db61709349e4cf276/src%2Ftools%2Frustbook%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Frustbook%2FCargo.toml?ref=c7e16c5f47ac86877ab6c52db61709349e4cf276", "patch": "@@ -5,14 +5,15 @@ version = \"0.1.0\"\n license = \"MIT OR Apache-2.0\"\n edition = \"2018\"\n \n+[features]\n+linkcheck = [\"mdbook-linkcheck\"]\n+\n [dependencies]\n clap = \"2.25.0\"\n failure = \"0.1\"\n+mdbook-linkcheck = { version = \"0.3.0\", optional = true }\n \n [dependencies.mdbook]\n version = \"0.3.0\"\n default-features = false\n features = [\"search\"]\n-\n-[target.'cfg(all(target_arch = \"x86_64\", target_os = \"linux\"))'.dependencies]\n-mdbook-linkcheck = \"0.3.0\""}, {"sha": "95530b210afd6cb0ce8cac88994e8424c287d8d3", "filename": "src/tools/rustbook/src/main.rs", "status": "modified", "additions": 6, "deletions": 7, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/c7e16c5f47ac86877ab6c52db61709349e4cf276/src%2Ftools%2Frustbook%2Fsrc%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c7e16c5f47ac86877ab6c52db61709349e4cf276/src%2Ftools%2Frustbook%2Fsrc%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Frustbook%2Fsrc%2Fmain.rs?ref=c7e16c5f47ac86877ab6c52db61709349e4cf276", "patch": "@@ -8,10 +8,9 @@ use clap::{App, ArgMatches, SubCommand, AppSettings};\n use mdbook::MDBook;\n use mdbook::errors::{Result as Result3};\n \n-#[cfg(all(target_arch = \"x86_64\", target_os = \"linux\"))]\n+#[cfg(feature = \"linkcheck\")]\n use mdbook::renderer::RenderContext;\n-\n-#[cfg(all(target_arch = \"x86_64\", target_os = \"linux\"))]\n+#[cfg(feature = \"linkcheck\")]\n use mdbook_linkcheck::{self, errors::BrokenLinks};\n use failure::Error;\n \n@@ -52,7 +51,7 @@ fn main() {\n             if let Err(err) = linkcheck(sub_matches) {\n                 eprintln!(\"Error: {}\", err);\n \n-                #[cfg(all(target_arch = \"x86_64\", target_os = \"linux\"))]\n+                #[cfg(feature = \"linkcheck\")]\n                 {\n                     if let Ok(broken_links) = err.downcast::<BrokenLinks>() {\n                         for cause in broken_links.links().iter() {\n@@ -68,7 +67,7 @@ fn main() {\n     };\n }\n \n-#[cfg(all(target_arch = \"x86_64\", target_os = \"linux\"))]\n+#[cfg(feature = \"linkcheck\")]\n pub fn linkcheck(args: &ArgMatches<'_>) -> Result<(), Error> {\n     let book_dir = get_book_dir(args);\n     let book = MDBook::load(&book_dir).unwrap();\n@@ -78,9 +77,9 @@ pub fn linkcheck(args: &ArgMatches<'_>) -> Result<(), Error> {\n     mdbook_linkcheck::check_links(&render_ctx)\n }\n \n-#[cfg(not(all(target_arch = \"x86_64\", target_os = \"linux\")))]\n+#[cfg(not(feature = \"linkcheck\"))]\n pub fn linkcheck(_args: &ArgMatches<'_>) -> Result<(), Error> {\n-    println!(\"mdbook-linkcheck only works on x86_64 linux targets.\");\n+    println!(\"mdbook-linkcheck is disabled.\");\n     Ok(())\n }\n "}]}