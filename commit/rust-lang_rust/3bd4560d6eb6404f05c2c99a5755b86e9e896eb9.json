{"sha": "3bd4560d6eb6404f05c2c99a5755b86e9e896eb9", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNiZDQ1NjBkNmViNjQwNGYwNWMyYzk5YTU3NTViODZlOWU4OTZlYjk=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-01-31T07:30:15Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-01-31T20:23:30Z"}, "message": "convert punts and literals", "tree": {"sha": "3ff9bce589c5d455b57bf173a650480a9d172ccd", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3ff9bce589c5d455b57bf173a650480a9d172ccd"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3bd4560d6eb6404f05c2c99a5755b86e9e896eb9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3bd4560d6eb6404f05c2c99a5755b86e9e896eb9", "html_url": "https://github.com/rust-lang/rust/commit/3bd4560d6eb6404f05c2c99a5755b86e9e896eb9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3bd4560d6eb6404f05c2c99a5755b86e9e896eb9/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c09c6fc97c1d553dd348383eb98fc7a4788030cb", "url": "https://api.github.com/repos/rust-lang/rust/commits/c09c6fc97c1d553dd348383eb98fc7a4788030cb", "html_url": "https://github.com/rust-lang/rust/commit/c09c6fc97c1d553dd348383eb98fc7a4788030cb"}], "stats": {"total": 147, "additions": 127, "deletions": 20}, "files": [{"sha": "c23ad53cc49d135d101925c2b72d54a45e86e298", "filename": "crates/ra_hir/src/macros.rs", "status": "modified", "additions": 14, "deletions": 2, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/3bd4560d6eb6404f05c2c99a5755b86e9e896eb9/crates%2Fra_hir%2Fsrc%2Fmacros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3bd4560d6eb6404f05c2c99a5755b86e9e896eb9/crates%2Fra_hir%2Fsrc%2Fmacros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fmacros.rs?ref=3bd4560d6eb6404f05c2c99a5755b86e9e896eb9", "patch": "@@ -221,12 +221,24 @@ fn convert_tt(tt: &SyntaxNode) -> Option<tt::Subtree> {\n         if child == first_child || child == last_child || child.kind().is_trivia() {\n             continue;\n         }\n-        let child = if child.kind() == TOKEN_TREE {\n+        let child: tt::TokenTree = if child.kind() == TOKEN_TREE {\n             convert_tt(child)?.into()\n-        } else if child.kind().is_keyword() {\n+        } else if child.kind().is_keyword() || child.kind() == IDENT {\n             let text = child.leaf_text().unwrap().clone();\n             tt::Leaf::from(tt::Ident { text }).into()\n+        } else if child.kind().is_punct() {\n+            // FIXME: multibyte tokens\n+            tt::Leaf::from(tt::Punct {\n+                char: child.text().char_at(0)?,\n+            })\n+            .into()\n+        } else if child.kind().is_literal() {\n+            tt::Leaf::from(tt::Literal {\n+                text: child.leaf_text().unwrap().clone(),\n+            })\n+            .into()\n         } else {\n+            log::error!(\"unknown kind: {:?}\", child);\n             return None;\n         };\n         token_trees.push(child)"}, {"sha": "47334bdf08d154a78858538ed766f675e38bceba", "filename": "crates/ra_syntax/src/grammar.ron", "status": "modified", "additions": 8, "deletions": 6, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/3bd4560d6eb6404f05c2c99a5755b86e9e896eb9/crates%2Fra_syntax%2Fsrc%2Fgrammar.ron", "raw_url": "https://github.com/rust-lang/rust/raw/3bd4560d6eb6404f05c2c99a5755b86e9e896eb9/crates%2Fra_syntax%2Fsrc%2Fgrammar.ron", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Fsrc%2Fgrammar.ron?ref=3bd4560d6eb6404f05c2c99a5755b86e9e896eb9", "patch": "@@ -24,6 +24,7 @@ Grammar(\n         [\"/\", \"SLASH\"],\n         [\"^\", \"CARET\"],\n         [\"%\", \"PERCENT\"],\n+        [\"_\", \"UNDERSCORE\"],\n     ],\n     // Tokens for which the longest match must be chosen (e.g. `..` is a DOTDOT, but `.` is a DOT)\n     multi_byte_tokens: [\n@@ -99,20 +100,21 @@ Grammar(\n         \"default\",\n         \"union\",\n     ],\n-    tokens: [\n-        \"ERROR\",\n-        \"IDENT\",\n-        \"UNDERSCORE\",\n-        \"WHITESPACE\",\n+    literals: [\n         \"INT_NUMBER\",\n         \"FLOAT_NUMBER\",\n-        \"LIFETIME\",\n         \"CHAR\",\n         \"BYTE\",\n         \"STRING\",\n         \"RAW_STRING\",\n         \"BYTE_STRING\",\n         \"RAW_BYTE_STRING\",\n+    ],\n+    tokens: [\n+        \"ERROR\",\n+        \"IDENT\",\n+        \"WHITESPACE\",\n+        \"LIFETIME\",\n         \"COMMENT\",\n         \"SHEBANG\",\n     ],"}, {"sha": "fea5134584611960f9792300a3a36aa93cd9e1b8", "filename": "crates/ra_syntax/src/syntax_kinds/generated.rs", "status": "modified", "additions": 84, "deletions": 10, "changes": 94, "blob_url": "https://github.com/rust-lang/rust/blob/3bd4560d6eb6404f05c2c99a5755b86e9e896eb9/crates%2Fra_syntax%2Fsrc%2Fsyntax_kinds%2Fgenerated.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3bd4560d6eb6404f05c2c99a5755b86e9e896eb9/crates%2Fra_syntax%2Fsrc%2Fsyntax_kinds%2Fgenerated.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Fsrc%2Fsyntax_kinds%2Fgenerated.rs?ref=3bd4560d6eb6404f05c2c99a5755b86e9e896eb9", "patch": "@@ -36,6 +36,7 @@ pub enum SyntaxKind {\n     SLASH,\n     CARET,\n     PERCENT,\n+    UNDERSCORE,\n     DOT,\n     DOTDOT,\n     DOTDOTDOT,\n@@ -103,19 +104,18 @@ pub enum SyntaxKind {\n     AUTO_KW,\n     DEFAULT_KW,\n     UNION_KW,\n-    ERROR,\n-    IDENT,\n-    UNDERSCORE,\n-    WHITESPACE,\n     INT_NUMBER,\n     FLOAT_NUMBER,\n-    LIFETIME,\n     CHAR,\n     BYTE,\n     STRING,\n     RAW_STRING,\n     BYTE_STRING,\n     RAW_BYTE_STRING,\n+    ERROR,\n+    IDENT,\n+    WHITESPACE,\n+    LIFETIME,\n     COMMENT,\n     SHEBANG,\n     SOURCE_FILE,\n@@ -275,6 +275,79 @@ impl SyntaxKind {\n         }\n     }\n \n+    pub fn is_punct(self) -> bool {\n+        match self {\n+            | SEMI\n+            | COMMA\n+            | L_PAREN\n+            | R_PAREN\n+            | L_CURLY\n+            | R_CURLY\n+            | L_BRACK\n+            | R_BRACK\n+            | L_ANGLE\n+            | R_ANGLE\n+            | AT\n+            | POUND\n+            | TILDE\n+            | QUESTION\n+            | DOLLAR\n+            | AMP\n+            | PIPE\n+            | PLUS\n+            | STAR\n+            | SLASH\n+            | CARET\n+            | PERCENT\n+            | UNDERSCORE\n+            | DOT\n+            | DOTDOT\n+            | DOTDOTDOT\n+            | DOTDOTEQ\n+            | COLON\n+            | COLONCOLON\n+            | EQ\n+            | EQEQ\n+            | FAT_ARROW\n+            | EXCL\n+            | NEQ\n+            | MINUS\n+            | THIN_ARROW\n+            | LTEQ\n+            | GTEQ\n+            | PLUSEQ\n+            | MINUSEQ\n+            | PIPEEQ\n+            | AMPEQ\n+            | CARETEQ\n+            | SLASHEQ\n+            | STAREQ\n+            | PERCENTEQ\n+            | AMPAMP\n+            | PIPEPIPE\n+            | SHL\n+            | SHR\n+            | SHLEQ\n+            | SHREQ\n+                => true,\n+            _ => false\n+        }\n+    }\n+    pub fn is_literal(self) -> bool {\n+        match self {\n+            | INT_NUMBER\n+            | FLOAT_NUMBER\n+            | CHAR\n+            | BYTE\n+            | STRING\n+            | RAW_STRING\n+            | BYTE_STRING\n+            | RAW_BYTE_STRING\n+                => true,\n+            _ => false\n+        }\n+    }\n+\n     pub(crate) fn info(self) -> &'static SyntaxInfo {\n         match self {\n             SEMI => &SyntaxInfo { name: \"SEMI\" },\n@@ -299,6 +372,7 @@ impl SyntaxKind {\n             SLASH => &SyntaxInfo { name: \"SLASH\" },\n             CARET => &SyntaxInfo { name: \"CARET\" },\n             PERCENT => &SyntaxInfo { name: \"PERCENT\" },\n+            UNDERSCORE => &SyntaxInfo { name: \"UNDERSCORE\" },\n             DOT => &SyntaxInfo { name: \"DOT\" },\n             DOTDOT => &SyntaxInfo { name: \"DOTDOT\" },\n             DOTDOTDOT => &SyntaxInfo { name: \"DOTDOTDOT\" },\n@@ -366,19 +440,18 @@ impl SyntaxKind {\n             AUTO_KW => &SyntaxInfo { name: \"AUTO_KW\" },\n             DEFAULT_KW => &SyntaxInfo { name: \"DEFAULT_KW\" },\n             UNION_KW => &SyntaxInfo { name: \"UNION_KW\" },\n-            ERROR => &SyntaxInfo { name: \"ERROR\" },\n-            IDENT => &SyntaxInfo { name: \"IDENT\" },\n-            UNDERSCORE => &SyntaxInfo { name: \"UNDERSCORE\" },\n-            WHITESPACE => &SyntaxInfo { name: \"WHITESPACE\" },\n             INT_NUMBER => &SyntaxInfo { name: \"INT_NUMBER\" },\n             FLOAT_NUMBER => &SyntaxInfo { name: \"FLOAT_NUMBER\" },\n-            LIFETIME => &SyntaxInfo { name: \"LIFETIME\" },\n             CHAR => &SyntaxInfo { name: \"CHAR\" },\n             BYTE => &SyntaxInfo { name: \"BYTE\" },\n             STRING => &SyntaxInfo { name: \"STRING\" },\n             RAW_STRING => &SyntaxInfo { name: \"RAW_STRING\" },\n             BYTE_STRING => &SyntaxInfo { name: \"BYTE_STRING\" },\n             RAW_BYTE_STRING => &SyntaxInfo { name: \"RAW_BYTE_STRING\" },\n+            ERROR => &SyntaxInfo { name: \"ERROR\" },\n+            IDENT => &SyntaxInfo { name: \"IDENT\" },\n+            WHITESPACE => &SyntaxInfo { name: \"WHITESPACE\" },\n+            LIFETIME => &SyntaxInfo { name: \"LIFETIME\" },\n             COMMENT => &SyntaxInfo { name: \"COMMENT\" },\n             SHEBANG => &SyntaxInfo { name: \"SHEBANG\" },\n             SOURCE_FILE => &SyntaxInfo { name: \"SOURCE_FILE\" },\n@@ -559,6 +632,7 @@ impl SyntaxKind {\n             '/' => SLASH,\n             '^' => CARET,\n             '%' => PERCENT,\n+            '_' => UNDERSCORE,\n             _ => return None,\n         };\n         Some(tok)"}, {"sha": "837437136d81184a9b4bdf82d89bcb0c2c819595", "filename": "crates/ra_syntax/src/syntax_kinds/generated.rs.tera", "status": "modified", "additions": 21, "deletions": 2, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/3bd4560d6eb6404f05c2c99a5755b86e9e896eb9/crates%2Fra_syntax%2Fsrc%2Fsyntax_kinds%2Fgenerated.rs.tera", "raw_url": "https://github.com/rust-lang/rust/raw/3bd4560d6eb6404f05c2c99a5755b86e9e896eb9/crates%2Fra_syntax%2Fsrc%2Fsyntax_kinds%2Fgenerated.rs.tera", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Fsrc%2Fsyntax_kinds%2Fgenerated.rs.tera?ref=3bd4560d6eb6404f05c2c99a5755b86e9e896eb9", "patch": "@@ -23,7 +23,7 @@ pub enum SyntaxKind {\n {% for kw in concat(a=keywords, b=contextual_keywords) %}\n     {{kw | upper}}_KW,\n {%- endfor -%}\n-{% for t in concat(a=tokens, b=nodes) %}\n+{% for t in concat(a=literals, b=tokens, c=nodes) %}\n     {{t}},\n {%- endfor %}\n }\n@@ -40,6 +40,25 @@ impl SyntaxKind {\n         }\n     }\n \n+    pub fn is_punct(self) -> bool {\n+        match self {\n+{%- for t in concat(a=single_byte_tokens, b=multi_byte_tokens) %}\n+            | {{t.1}}\n+{%- endfor %}\n+                => true,\n+            _ => false\n+        }\n+    }\n+    pub fn is_literal(self) -> bool {\n+        match self {\n+{%- for t in literals %}\n+            | {{t}}\n+{%- endfor %}\n+                => true,\n+            _ => false\n+        }\n+    }\n+\n     pub(crate) fn info(self) -> &'static SyntaxInfo {\n         match self {\n {%- for t in concat(a=single_byte_tokens, b=multi_byte_tokens) %}\n@@ -48,7 +67,7 @@ impl SyntaxKind {\n {% for kw in concat(a=keywords, b=contextual_keywords) %}\n             {{kw | upper}}_KW => &SyntaxInfo { name: \"{{kw | upper}}_KW\" },\n {%- endfor -%}\n-{% for t in concat(a=tokens, b=nodes) %}\n+{% for t in concat(a=literals, b=tokens, c=nodes) %}\n             {{t}} => &SyntaxInfo { name: \"{{t}}\" },\n {%- endfor %}\n             TOMBSTONE => &SyntaxInfo { name: \"TOMBSTONE\" },"}]}