{"sha": "4418ff122fdc65d642dd4adb709634c4f879171e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ0MThmZjEyMmZkYzY1ZDY0MmRkNGFkYjcwOTYzNGM0Zjg3OTE3MWU=", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2020-07-23T21:31:33Z"}, "committer": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2020-08-10T21:49:06Z"}, "message": "unneeded-field-pattern: make lint adhere to lint message convention", "tree": {"sha": "d93f551bb9ad87ce943fee89872accaee1c1559b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d93f551bb9ad87ce943fee89872accaee1c1559b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4418ff122fdc65d642dd4adb709634c4f879171e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4418ff122fdc65d642dd4adb709634c4f879171e", "html_url": "https://github.com/rust-lang/rust/commit/4418ff122fdc65d642dd4adb709634c4f879171e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4418ff122fdc65d642dd4adb709634c4f879171e/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2792260636f720a44921c5f6571535e887aa6047", "url": "https://api.github.com/repos/rust-lang/rust/commits/2792260636f720a44921c5f6571535e887aa6047", "html_url": "https://github.com/rust-lang/rust/commit/2792260636f720a44921c5f6571535e887aa6047"}], "stats": {"total": 18, "additions": 9, "deletions": 9}, "files": [{"sha": "02789735c17a313b1aa152aa01eadc3df3bf1692", "filename": "clippy_lints/src/misc_early.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/4418ff122fdc65d642dd4adb709634c4f879171e/clippy_lints%2Fsrc%2Fmisc_early.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4418ff122fdc65d642dd4adb709634c4f879171e/clippy_lints%2Fsrc%2Fmisc_early.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmisc_early.rs?ref=4418ff122fdc65d642dd4adb709634c4f879171e", "patch": "@@ -298,9 +298,9 @@ impl EarlyLintPass for MiscEarlyLints {\n                     cx,\n                     UNNEEDED_FIELD_PATTERN,\n                     pat.span,\n-                    \"All the struct fields are matched to a wildcard pattern, consider using `..`.\",\n+                    \"all the struct fields are matched to a wildcard pattern, consider using `..`\",\n                     None,\n-                    &format!(\"Try with `{} {{ .. }}` instead\", type_name),\n+                    &format!(\"try with `{} {{ .. }}` instead\", type_name),\n                 );\n                 return;\n             }\n@@ -313,7 +313,7 @@ impl EarlyLintPass for MiscEarlyLints {\n                                 cx,\n                                 UNNEEDED_FIELD_PATTERN,\n                                 field.span,\n-                                \"You matched a field with a wildcard pattern. Consider using `..` instead\",\n+                                \"you matched a field with a wildcard pattern, consider using `..` instead\",\n                             );\n                         } else {\n                             let mut normal = vec![];\n@@ -333,10 +333,10 @@ impl EarlyLintPass for MiscEarlyLints {\n                                 cx,\n                                 UNNEEDED_FIELD_PATTERN,\n                                 field.span,\n-                                \"You matched a field with a wildcard pattern. Consider using `..` \\\n+                                \"you matched a field with a wildcard pattern, consider using `..` \\\n                                  instead\",\n                                 None,\n-                                &format!(\"Try with `{} {{ {}, .. }}`\", type_name, normal[..].join(\", \")),\n+                                &format!(\"try with `{} {{ {}, .. }}`\", type_name, normal[..].join(\", \")),\n                             );\n                         }\n                     }"}, {"sha": "b8d3c2945322b66e6e59859595fb44a12379ebc9", "filename": "tests/ui/unneeded_field_pattern.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/4418ff122fdc65d642dd4adb709634c4f879171e/tests%2Fui%2Funneeded_field_pattern.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4418ff122fdc65d642dd4adb709634c4f879171e/tests%2Fui%2Funneeded_field_pattern.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Funneeded_field_pattern.stderr?ref=4418ff122fdc65d642dd4adb709634c4f879171e", "patch": "@@ -1,19 +1,19 @@\n-error: You matched a field with a wildcard pattern. Consider using `..` instead\n+error: you matched a field with a wildcard pattern, consider using `..` instead\n   --> $DIR/unneeded_field_pattern.rs:14:15\n    |\n LL |         Foo { a: _, b: 0, .. } => {},\n    |               ^^^^\n    |\n    = note: `-D clippy::unneeded-field-pattern` implied by `-D warnings`\n-   = help: Try with `Foo { b: 0, .. }`\n+   = help: try with `Foo { b: 0, .. }`\n \n-error: All the struct fields are matched to a wildcard pattern, consider using `..`.\n+error: all the struct fields are matched to a wildcard pattern, consider using `..`\n   --> $DIR/unneeded_field_pattern.rs:16:9\n    |\n LL |         Foo { a: _, b: _, c: _ } => {},\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n-   = help: Try with `Foo { .. }` instead\n+   = help: try with `Foo { .. }` instead\n \n error: aborting due to 2 previous errors\n "}]}