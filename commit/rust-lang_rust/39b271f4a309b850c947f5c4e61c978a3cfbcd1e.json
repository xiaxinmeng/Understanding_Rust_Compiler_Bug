{"sha": "39b271f4a309b850c947f5c4e61c978a3cfbcd1e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM5YjI3MWY0YTMwOWI4NTBjOTQ3ZjVjNGU2MWM5NzhhM2NmYmNkMWU=", "commit": {"author": {"name": "Felix S. Klock II", "email": "pnkfelix@pnkfx.org", "date": "2014-05-08T13:50:54Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2014-05-15T20:50:42Z"}, "message": "Add `EntryPat` and `NodePat` variants to ast_map.\n\nAdd `EntryPat` and `NodePat` variants to ast_map, so that lookups for\nid 1 in `let S{val: _x /* pat 2 */} /* pat 1 */ = ...` will actually\nresolve to the pattern `S{ ... }`, rather than \"unknown node\", in a\nfunction like `node_id_to_str`.", "tree": {"sha": "0119be5e5d81f8cff37734b5c91dbe04e94162a9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0119be5e5d81f8cff37734b5c91dbe04e94162a9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/39b271f4a309b850c947f5c4e61c978a3cfbcd1e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/39b271f4a309b850c947f5c4e61c978a3cfbcd1e", "html_url": "https://github.com/rust-lang/rust/commit/39b271f4a309b850c947f5c4e61c978a3cfbcd1e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/39b271f4a309b850c947f5c4e61c978a3cfbcd1e/comments", "author": {"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b9e4fcbf04b21c39b5e704a1f24adbfe179f8814", "url": "https://api.github.com/repos/rust-lang/rust/commits/b9e4fcbf04b21c39b5e704a1f24adbfe179f8814", "html_url": "https://github.com/rust-lang/rust/commit/b9e4fcbf04b21c39b5e704a1f24adbfe179f8814"}], "stats": {"total": 13, "additions": 12, "deletions": 1}, "files": [{"sha": "861caa62515b517b0dcbe6cac2cc6f23be6145eb", "filename": "src/librustc/middle/trans/monomorphize.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/39b271f4a309b850c947f5c4e61c978a3cfbcd1e/src%2Flibrustc%2Fmiddle%2Ftrans%2Fmonomorphize.rs", "raw_url": "https://github.com/rust-lang/rust/raw/39b271f4a309b850c947f5c4e61c978a3cfbcd1e/src%2Flibrustc%2Fmiddle%2Ftrans%2Fmonomorphize.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftrans%2Fmonomorphize.rs?ref=39b271f4a309b850c947f5c4e61c978a3cfbcd1e", "patch": "@@ -309,6 +309,7 @@ pub fn monomorphic_fn(ccx: &CrateContext,\n         ast_map::NodeStmt(..) |\n         ast_map::NodeArg(..) |\n         ast_map::NodeBlock(..) |\n+        ast_map::NodePat(..) |\n         ast_map::NodeLocal(..) => {\n             ccx.sess().bug(format!(\"can't monomorphize a {:?}\", map_node))\n         }"}, {"sha": "6a7b913dce406222ffd0674888170f6520290051", "filename": "src/libsyntax/ast_map.rs", "status": "modified", "additions": 11, "deletions": 1, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/39b271f4a309b850c947f5c4e61c978a3cfbcd1e/src%2Flibsyntax%2Fast_map.rs", "raw_url": "https://github.com/rust-lang/rust/raw/39b271f4a309b850c947f5c4e61c978a3cfbcd1e/src%2Flibsyntax%2Fast_map.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fast_map.rs?ref=39b271f4a309b850c947f5c4e61c978a3cfbcd1e", "patch": "@@ -103,6 +103,7 @@ pub enum Node {\n     NodeStmt(@Stmt),\n     NodeArg(@Pat),\n     NodeLocal(@Pat),\n+    NodePat(@Pat),\n     NodeBlock(P<Block>),\n \n     /// NodeStructCtor represents a tuple struct.\n@@ -127,6 +128,7 @@ enum MapEntry {\n     EntryStmt(NodeId, @Stmt),\n     EntryArg(NodeId, @Pat),\n     EntryLocal(NodeId, @Pat),\n+    EntryPat(NodeId, @Pat),\n     EntryBlock(NodeId, P<Block>),\n     EntryStructCtor(NodeId, @StructDef),\n     EntryLifetime(NodeId, @Lifetime),\n@@ -154,6 +156,7 @@ impl MapEntry {\n             EntryStmt(id, _) => id,\n             EntryArg(id, _) => id,\n             EntryLocal(id, _) => id,\n+            EntryPat(id, _) => id,\n             EntryBlock(id, _) => id,\n             EntryStructCtor(id, _) => id,\n             EntryLifetime(id, _) => id,\n@@ -172,6 +175,7 @@ impl MapEntry {\n             EntryStmt(_, p) => NodeStmt(p),\n             EntryArg(_, p) => NodeArg(p),\n             EntryLocal(_, p) => NodeLocal(p),\n+            EntryPat(_, p) => NodePat(p),\n             EntryBlock(_, p) => NodeBlock(p),\n             EntryStructCtor(_, p) => NodeStructCtor(p),\n             EntryLifetime(_, p) => NodeLifetime(p),\n@@ -399,6 +403,7 @@ impl Map {\n             Some(NodeExpr(expr)) => expr.span,\n             Some(NodeStmt(stmt)) => stmt.span,\n             Some(NodeArg(pat)) | Some(NodeLocal(pat)) => pat.span,\n+            Some(NodePat(pat)) => pat.span,\n             Some(NodeBlock(block)) => block.span,\n             Some(NodeStructCtor(_)) => self.expect_item(self.get_parent(id)).span,\n             _ => fail!(\"node_span: could not find span for id {}\", id),\n@@ -513,7 +518,9 @@ impl<'a, F: FoldOps> Folder for Ctx<'a, F> {\n                 // Note: this is at least *potentially* a pattern...\n                 self.insert(pat.id, EntryLocal(self.parent, pat));\n             }\n-            _ => {}\n+            _ => {\n+                self.insert(pat.id, EntryPat(self.parent, pat));\n+            }\n         }\n \n         pat\n@@ -704,6 +711,9 @@ fn node_id_to_str(map: &Map, id: NodeId) -> StrBuf {\n             (format!(\"local {} (id={})\",\n                     pprust::pat_to_str(pat), id)).to_strbuf()\n         }\n+        Some(NodePat(pat)) => {\n+            (format!(\"pat {} (id={})\", pprust::pat_to_str(pat), id)).to_strbuf()\n+        }\n         Some(NodeBlock(block)) => {\n             (format!(\"block {} (id={})\",\n                     pprust::block_to_str(block), id)).to_strbuf()"}]}