{"sha": "e0adfe4d459482240d0614990fcb0ea112d48cf4", "node_id": "MDY6Q29tbWl0NzI0NzEyOmUwYWRmZTRkNDU5NDgyMjQwZDA2MTQ5OTBmY2IwZWExMTJkNDhjZjQ=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2020-01-30T11:21:37Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2020-01-30T11:22:15Z"}, "message": "new compile-fail test involving non-reborrowing-cast-to-raw", "tree": {"sha": "795f02e2b4e50430ebbddc8682f1bd412df66e74", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/795f02e2b4e50430ebbddc8682f1bd412df66e74"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e0adfe4d459482240d0614990fcb0ea112d48cf4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e0adfe4d459482240d0614990fcb0ea112d48cf4", "html_url": "https://github.com/rust-lang/rust/commit/e0adfe4d459482240d0614990fcb0ea112d48cf4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e0adfe4d459482240d0614990fcb0ea112d48cf4/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "acd156d722c6d285ad5332b7b7aeb57f3b25b09a", "url": "https://api.github.com/repos/rust-lang/rust/commits/acd156d722c6d285ad5332b7b7aeb57f3b25b09a", "html_url": "https://github.com/rust-lang/rust/commit/acd156d722c6d285ad5332b7b7aeb57f3b25b09a"}], "stats": {"total": 14, "additions": 13, "deletions": 1}, "files": [{"sha": "72fca84ba19babc0183c00179f8126493b34cc26", "filename": "tests/compile-fail/stacked_borrows/illegal_read8.rs", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/e0adfe4d459482240d0614990fcb0ea112d48cf4/tests%2Fcompile-fail%2Fstacked_borrows%2Fillegal_read8.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e0adfe4d459482240d0614990fcb0ea112d48cf4/tests%2Fcompile-fail%2Fstacked_borrows%2Fillegal_read8.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail%2Fstacked_borrows%2Fillegal_read8.rs?ref=e0adfe4d459482240d0614990fcb0ea112d48cf4", "patch": "@@ -0,0 +1,13 @@\n+// Make sure that creating a raw ptr next to a shared ref works\n+// but the shared ref still gets invalidated when the raw ptr is used for writing.\n+\n+fn main() { unsafe {\n+    use std::mem;\n+    let x = &mut 0;\n+    let y1: &i32 = mem::transmute(&*x); // launder lifetimes\n+    let y2 = x as *mut _;\n+    let _val = *y2;\n+    let _val = *y1;\n+    *y2 += 1;\n+    let _fail = *y1; //~ ERROR borrow stack\n+} }"}, {"sha": "824437f4f1bf9a930b084ac92665788d25a334ed", "filename": "tests/run-pass/stacked-borrows/stacked-borrows.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/e0adfe4d459482240d0614990fcb0ea112d48cf4/tests%2Frun-pass%2Fstacked-borrows%2Fstacked-borrows.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e0adfe4d459482240d0614990fcb0ea112d48cf4/tests%2Frun-pass%2Fstacked-borrows%2Fstacked-borrows.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Fstacked-borrows%2Fstacked-borrows.rs?ref=e0adfe4d459482240d0614990fcb0ea112d48cf4", "patch": "@@ -136,7 +136,6 @@ fn shr_and_raw() { unsafe {\n     let y2 = x as *mut _;\n     let _val = *y1;\n     *y2 += 1;\n-    // TODO: Once this works, add compile-fail test that tries to read from y1 again.\n } }\n \n fn disjoint_mutable_subborrows() {"}]}