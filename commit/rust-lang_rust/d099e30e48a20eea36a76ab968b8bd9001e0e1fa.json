{"sha": "d099e30e48a20eea36a76ab968b8bd9001e0e1fa", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQwOTllMzBlNDhhMjBlZWEzNmE3NmFiOTY4YjhiZDkwMDFlMGUxZmE=", "commit": {"author": {"name": "Corey Farwell", "email": "coreyf@rwell.org", "date": "2016-08-07T04:30:17Z"}, "committer": {"name": "Corey Farwell", "email": "coreyf@rwell.org", "date": "2016-08-11T20:48:43Z"}, "message": "Introduce `as_slice` method on `std::vec::IntoIter` struct.\n\nSimilar to the `as_slice` method on `core::slice::Iter` struct.", "tree": {"sha": "242686492a6b9b4d3ddae345b726aff8cabf4143", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/242686492a6b9b4d3ddae345b726aff8cabf4143"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d099e30e48a20eea36a76ab968b8bd9001e0e1fa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d099e30e48a20eea36a76ab968b8bd9001e0e1fa", "html_url": "https://github.com/rust-lang/rust/commit/d099e30e48a20eea36a76ab968b8bd9001e0e1fa", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d099e30e48a20eea36a76ab968b8bd9001e0e1fa/comments", "author": {"login": "frewsxcv", "id": 416575, "node_id": "MDQ6VXNlcjQxNjU3NQ==", "avatar_url": "https://avatars.githubusercontent.com/u/416575?v=4", "gravatar_id": "", "url": "https://api.github.com/users/frewsxcv", "html_url": "https://github.com/frewsxcv", "followers_url": "https://api.github.com/users/frewsxcv/followers", "following_url": "https://api.github.com/users/frewsxcv/following{/other_user}", "gists_url": "https://api.github.com/users/frewsxcv/gists{/gist_id}", "starred_url": "https://api.github.com/users/frewsxcv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/frewsxcv/subscriptions", "organizations_url": "https://api.github.com/users/frewsxcv/orgs", "repos_url": "https://api.github.com/users/frewsxcv/repos", "events_url": "https://api.github.com/users/frewsxcv/events{/privacy}", "received_events_url": "https://api.github.com/users/frewsxcv/received_events", "type": "User", "site_admin": false}, "committer": {"login": "frewsxcv", "id": 416575, "node_id": "MDQ6VXNlcjQxNjU3NQ==", "avatar_url": "https://avatars.githubusercontent.com/u/416575?v=4", "gravatar_id": "", "url": "https://api.github.com/users/frewsxcv", "html_url": "https://github.com/frewsxcv", "followers_url": "https://api.github.com/users/frewsxcv/followers", "following_url": "https://api.github.com/users/frewsxcv/following{/other_user}", "gists_url": "https://api.github.com/users/frewsxcv/gists{/gist_id}", "starred_url": "https://api.github.com/users/frewsxcv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/frewsxcv/subscriptions", "organizations_url": "https://api.github.com/users/frewsxcv/orgs", "repos_url": "https://api.github.com/users/frewsxcv/repos", "events_url": "https://api.github.com/users/frewsxcv/events{/privacy}", "received_events_url": "https://api.github.com/users/frewsxcv/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ae774103501337ed63b42b673c6c4fdbf369e80e", "url": "https://api.github.com/repos/rust-lang/rust/commits/ae774103501337ed63b42b673c6c4fdbf369e80e", "html_url": "https://github.com/rust-lang/rust/commit/ae774103501337ed63b42b673c6c4fdbf369e80e"}], "stats": {"total": 38, "additions": 35, "deletions": 3}, "files": [{"sha": "696ce3a2a03e920da46d4b5c879349603da488f6", "filename": "src/libcollections/vec.rs", "status": "modified", "additions": 22, "deletions": 3, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/d099e30e48a20eea36a76ab968b8bd9001e0e1fa/src%2Flibcollections%2Fvec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d099e30e48a20eea36a76ab968b8bd9001e0e1fa/src%2Flibcollections%2Fvec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcollections%2Fvec.rs?ref=d099e30e48a20eea36a76ab968b8bd9001e0e1fa", "patch": "@@ -1714,6 +1714,27 @@ pub struct IntoIter<T> {\n     end: *const T,\n }\n \n+impl<T> IntoIter<T> {\n+    /// Returns the remaining items of this iterator as a slice.\n+    ///\n+    /// # Examples\n+    ///\n+    /// ```rust\n+    /// # #![feature(vec_into_iter_as_slice)]\n+    /// let vec = vec!['a', 'b', 'c'];\n+    /// let mut into_iter = vec.into_iter();\n+    /// assert_eq!(into_iter.as_slice(), &['a', 'b', 'c']);\n+    /// let _ = into_iter.next().unwrap();\n+    /// assert_eq!(into_iter.as_slice(), &['b', 'c']);\n+    /// ```\n+    #[unstable(feature = \"vec_into_iter_as_slice\", issue = \"35601\")]\n+    pub fn as_slice(&self) -> &[T] {\n+        unsafe {\n+            slice::from_raw_parts(self.ptr, self.len())\n+        }\n+    }\n+}\n+\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n unsafe impl<T: Send> Send for IntoIter<T> {}\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n@@ -1796,9 +1817,7 @@ impl<T> ExactSizeIterator for IntoIter<T> {}\n #[stable(feature = \"vec_into_iter_clone\", since = \"1.8.0\")]\n impl<T: Clone> Clone for IntoIter<T> {\n     fn clone(&self) -> IntoIter<T> {\n-        unsafe {\n-            slice::from_raw_parts(self.ptr, self.len()).to_owned().into_iter()\n-        }\n+        self.as_slice().to_owned().into_iter()\n     }\n }\n "}, {"sha": "ab3231b2b9955e693540cd5f111a5961b934c632", "filename": "src/libcollectionstest/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d099e30e48a20eea36a76ab968b8bd9001e0e1fa/src%2Flibcollectionstest%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d099e30e48a20eea36a76ab968b8bd9001e0e1fa/src%2Flibcollectionstest%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcollectionstest%2Flib.rs?ref=d099e30e48a20eea36a76ab968b8bd9001e0e1fa", "patch": "@@ -28,6 +28,7 @@\n #![feature(unboxed_closures)]\n #![feature(unicode)]\n #![feature(vec_deque_contains)]\n+#![feature(vec_into_iter_as_slice)]\n \n extern crate collections;\n extern crate test;"}, {"sha": "0302b180aff564d3e88d65aeea6543327d50ad6d", "filename": "src/libcollectionstest/vec.rs", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/d099e30e48a20eea36a76ab968b8bd9001e0e1fa/src%2Flibcollectionstest%2Fvec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d099e30e48a20eea36a76ab968b8bd9001e0e1fa/src%2Flibcollectionstest%2Fvec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcollectionstest%2Fvec.rs?ref=d099e30e48a20eea36a76ab968b8bd9001e0e1fa", "patch": "@@ -478,6 +478,18 @@ fn test_split_off() {\n     assert_eq!(vec2, [5, 6]);\n }\n \n+#[test]\n+fn test_into_iter_as_slice() {\n+    let vec = vec!['a', 'b', 'c'];\n+    let mut into_iter = vec.into_iter();\n+    assert_eq!(into_iter.as_slice(), &['a', 'b', 'c']);\n+    let _ = into_iter.next().unwrap();\n+    assert_eq!(into_iter.as_slice(), &['b', 'c']);\n+    let _ = into_iter.next().unwrap();\n+    let _ = into_iter.next().unwrap();\n+    assert_eq!(into_iter.as_slice(), &[]);\n+}\n+\n #[test]\n fn test_into_iter_count() {\n     assert_eq!(vec![1, 2, 3].into_iter().count(), 3);"}]}