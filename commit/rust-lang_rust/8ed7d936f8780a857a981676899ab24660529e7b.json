{"sha": "8ed7d936f8780a857a981676899ab24660529e7b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhlZDdkOTM2Zjg3ODBhODU3YTk4MTY3Njg5OWFiMjQ2NjA1MjllN2I=", "commit": {"author": {"name": "Joshua Nelson", "email": "jyn514@gmail.com", "date": "2021-04-05T09:01:15Z"}, "committer": {"name": "Joshua Nelson", "email": "jyn514@gmail.com", "date": "2021-04-05T18:32:13Z"}, "message": "Take `DiagnosticInfo` in `resolution_failure`", "tree": {"sha": "929a1eade7127874cbdee592ac94aa8ec7d47885", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/929a1eade7127874cbdee592ac94aa8ec7d47885"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8ed7d936f8780a857a981676899ab24660529e7b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8ed7d936f8780a857a981676899ab24660529e7b", "html_url": "https://github.com/rust-lang/rust/commit/8ed7d936f8780a857a981676899ab24660529e7b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8ed7d936f8780a857a981676899ab24660529e7b/comments", "author": {"login": "jyn514", "id": 23638587, "node_id": "MDQ6VXNlcjIzNjM4NTg3", "avatar_url": "https://avatars.githubusercontent.com/u/23638587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jyn514", "html_url": "https://github.com/jyn514", "followers_url": "https://api.github.com/users/jyn514/followers", "following_url": "https://api.github.com/users/jyn514/following{/other_user}", "gists_url": "https://api.github.com/users/jyn514/gists{/gist_id}", "starred_url": "https://api.github.com/users/jyn514/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jyn514/subscriptions", "organizations_url": "https://api.github.com/users/jyn514/orgs", "repos_url": "https://api.github.com/users/jyn514/repos", "events_url": "https://api.github.com/users/jyn514/events{/privacy}", "received_events_url": "https://api.github.com/users/jyn514/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jyn514", "id": 23638587, "node_id": "MDQ6VXNlcjIzNjM4NTg3", "avatar_url": "https://avatars.githubusercontent.com/u/23638587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jyn514", "html_url": "https://github.com/jyn514", "followers_url": "https://api.github.com/users/jyn514/followers", "following_url": "https://api.github.com/users/jyn514/following{/other_user}", "gists_url": "https://api.github.com/users/jyn514/gists{/gist_id}", "starred_url": "https://api.github.com/users/jyn514/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jyn514/subscriptions", "organizations_url": "https://api.github.com/users/jyn514/orgs", "repos_url": "https://api.github.com/users/jyn514/repos", "events_url": "https://api.github.com/users/jyn514/events{/privacy}", "received_events_url": "https://api.github.com/users/jyn514/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d4011e12708bc760f02ed27d6226e27317ed8629", "url": "https://api.github.com/repos/rust-lang/rust/commits/d4011e12708bc760f02ed27d6226e27317ed8629", "html_url": "https://github.com/rust-lang/rust/commit/d4011e12708bc760f02ed27d6226e27317ed8629"}], "stats": {"total": 36, "additions": 6, "deletions": 30}, "files": [{"sha": "496c2f57c3fc20637e478a48e830d0d3af5d834b", "filename": "src/librustdoc/passes/collect_intra_doc_links.rs", "status": "modified", "additions": 6, "deletions": 30, "changes": 36, "blob_url": "https://github.com/rust-lang/rust/blob/8ed7d936f8780a857a981676899ab24660529e7b/src%2Flibrustdoc%2Fpasses%2Fcollect_intra_doc_links.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8ed7d936f8780a857a981676899ab24660529e7b/src%2Flibrustdoc%2Fpasses%2Fcollect_intra_doc_links.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fpasses%2Fcollect_intra_doc_links.rs?ref=8ed7d936f8780a857a981676899ab24660529e7b", "patch": "@@ -1023,11 +1023,9 @@ impl LinkCollector<'_, '_> {\n             debug!(\"attempting to resolve item without parent module: {}\", path_str);\n             resolution_failure(\n                 self,\n-                &item,\n+                diag_info,\n                 path_str,\n                 disambiguator,\n-                dox,\n-                ori_link.range,\n                 smallvec![ResolutionFailure::NoParentItem],\n             );\n             return None;\n@@ -1073,11 +1071,9 @@ impl LinkCollector<'_, '_> {\n                     debug!(\"link has malformed generics: {}\", path_str);\n                     resolution_failure(\n                         self,\n-                        &item,\n+                        diag_info,\n                         path_str,\n                         disambiguator,\n-                        dox,\n-                        ori_link.range,\n                         smallvec![err_kind],\n                     );\n                     return None;\n@@ -1337,15 +1333,7 @@ impl LinkCollector<'_, '_> {\n                                 }\n                             }\n                         }\n-                        resolution_failure(\n-                            self,\n-                            diag.item,\n-                            path_str,\n-                            disambiguator,\n-                            diag.dox,\n-                            diag.link_range,\n-                            smallvec![kind],\n-                        );\n+                        resolution_failure(self, diag, path_str, disambiguator, smallvec![kind]);\n                         // This could just be a normal link or a broken link\n                         // we could potentially check if something is\n                         // \"intra-doc-link-like\" and warn in that case.\n@@ -1406,11 +1394,9 @@ impl LinkCollector<'_, '_> {\n                 if len == 0 {\n                     resolution_failure(\n                         self,\n-                        diag.item,\n+                        diag,\n                         path_str,\n                         disambiguator,\n-                        diag.dox,\n-                        diag.link_range,\n                         candidates.into_iter().filter_map(|res| res.err()).collect(),\n                     );\n                     // this could just be a normal link\n@@ -1452,15 +1438,7 @@ impl LinkCollector<'_, '_> {\n                                 break;\n                             }\n                         }\n-                        resolution_failure(\n-                            self,\n-                            diag.item,\n-                            path_str,\n-                            disambiguator,\n-                            diag.dox,\n-                            diag.link_range,\n-                            smallvec![kind],\n-                        );\n+                        resolution_failure(self, diag, path_str, disambiguator, smallvec![kind]);\n                         None\n                     }\n                 }\n@@ -1750,11 +1728,9 @@ fn report_diagnostic(\n /// `std::io::Error::x`, this will resolve `std::io::Error`.\n fn resolution_failure(\n     collector: &mut LinkCollector<'_, '_>,\n-    item: &Item,\n+    DiagnosticInfo { item, ori_link: _, dox, link_range }: DiagnosticInfo<'_>,\n     path_str: &str,\n     disambiguator: Option<Disambiguator>,\n-    dox: &str,\n-    link_range: Range<usize>,\n     kinds: SmallVec<[ResolutionFailure<'_>; 3]>,\n ) {\n     let tcx = collector.cx.tcx;"}]}