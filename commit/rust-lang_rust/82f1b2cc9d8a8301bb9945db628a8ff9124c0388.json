{"sha": "82f1b2cc9d8a8301bb9945db628a8ff9124c0388", "node_id": "MDY6Q29tbWl0NzI0NzEyOjgyZjFiMmNjOWQ4YTgzMDFiYjk5NDVkYjYyOGE4ZmY5MTI0YzAzODg=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2013-03-14T23:57:48Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2013-03-14T23:57:48Z"}, "message": "auto merge of #5366 : tedhorst/rust/threadring, r=brson", "tree": {"sha": "474c1c77ea3e6f23e82c29a90fc37ba1c9108e01", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/474c1c77ea3e6f23e82c29a90fc37ba1c9108e01"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/82f1b2cc9d8a8301bb9945db628a8ff9124c0388", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/82f1b2cc9d8a8301bb9945db628a8ff9124c0388", "html_url": "https://github.com/rust-lang/rust/commit/82f1b2cc9d8a8301bb9945db628a8ff9124c0388", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/82f1b2cc9d8a8301bb9945db628a8ff9124c0388/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0c7aeddb5fa6ed86f41363b7552ff38aa96a9482", "url": "https://api.github.com/repos/rust-lang/rust/commits/0c7aeddb5fa6ed86f41363b7552ff38aa96a9482", "html_url": "https://github.com/rust-lang/rust/commit/0c7aeddb5fa6ed86f41363b7552ff38aa96a9482"}, {"sha": "9c40ebbb9a70b14a87d09bcd873c9c788627b3dc", "url": "https://api.github.com/repos/rust-lang/rust/commits/9c40ebbb9a70b14a87d09bcd873c9c788627b3dc", "html_url": "https://github.com/rust-lang/rust/commit/9c40ebbb9a70b14a87d09bcd873c9c788627b3dc"}], "stats": {"total": 74, "additions": 74, "deletions": 0}, "files": [{"sha": "9eb8a29cec030b9661a0a961b7889be988d226d9", "filename": "src/test/bench/shootout-threadring.rs", "status": "added", "additions": 74, "deletions": 0, "changes": 74, "blob_url": "https://github.com/rust-lang/rust/blob/82f1b2cc9d8a8301bb9945db628a8ff9124c0388/src%2Ftest%2Fbench%2Fshootout-threadring.rs", "raw_url": "https://github.com/rust-lang/rust/raw/82f1b2cc9d8a8301bb9945db628a8ff9124c0388/src%2Ftest%2Fbench%2Fshootout-threadring.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fbench%2Fshootout-threadring.rs?ref=82f1b2cc9d8a8301bb9945db628a8ff9124c0388", "patch": "@@ -0,0 +1,74 @@\n+// Copyright 2012 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// Based on threadring.erlang by Jira Isa\n+\n+fn start(n_tasks: int, token: int) {\n+    let mut (p, ch1) = comm::stream();\n+    ch1.send(token);\n+    //  XXX could not get this to work with a range closure\n+    let mut i = 2;\n+    while i <= n_tasks {\n+        let (next_p, ch) = comm::stream();\n+        let imm_i = i;\n+        let imm_p = p;\n+        do task::spawn {\n+            roundtrip(imm_i, n_tasks, &imm_p, &ch);\n+        };\n+        p = next_p;\n+        i += 1;\n+    }\n+    let imm_p = p;\n+    let imm_ch = ch1;\n+    do task::spawn {\n+        roundtrip(1, n_tasks, &imm_p, &imm_ch);\n+    }\n+}\n+\n+fn roundtrip(id: int, n_tasks: int, p: &comm::Port<int>, ch: &comm::Chan<int>) {\n+    while (true) {\n+        match p.recv() {\n+          1 => {\n+            io::println(fmt!(\"%d\\n\", id));\n+            return;\n+          }\n+          token => {\n+            debug!(\"thread: %d   got token: %d\", id, token);\n+            ch.send(token - 1);\n+            if token <= n_tasks {\n+                return;\n+            }\n+          }\n+        }\n+    }\n+}\n+\n+fn main() {\n+    let args = if os::getenv(~\"RUST_BENCH\").is_some() {\n+        ~[~\"\", ~\"2000000\", ~\"503\"]\n+    }\n+    else {\n+        os::args()\n+    };\n+    let token = if args.len() > 1u {\n+        int::from_str(args[1]).get()\n+    }\n+    else {\n+        1000\n+    };\n+    let n_tasks = if args.len() > 2u {\n+        int::from_str(args[2]).get()\n+    }\n+    else {\n+        503\n+    };\n+    start(n_tasks, token);\n+\n+}"}]}