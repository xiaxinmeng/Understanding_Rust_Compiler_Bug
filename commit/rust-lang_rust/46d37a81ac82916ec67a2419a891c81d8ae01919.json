{"sha": "46d37a81ac82916ec67a2419a891c81d8ae01919", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ2ZDM3YTgxYWM4MjkxNmVjNjdhMjQxOWE4OTFjODFkOGFlMDE5MTk=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2019-12-04T22:07:11Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-12-04T22:07:11Z"}, "message": "Merge #2477\n\n2477: Run rustfmt with respect to Cargo.toml edition r=matklad a=Speedy37\n\nFixes #2146\r\nFixes #1959\n\nCo-authored-by: Vincent Rouill\u00e9 <vincent@speedy37.fr>", "tree": {"sha": "f714271189e0267324265830e4c3dc513b81cb11", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f714271189e0267324265830e4c3dc513b81cb11"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/46d37a81ac82916ec67a2419a891c81d8ae01919", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJd6C4PCRBK7hj4Ov3rIwAAdHIIADfCfNC8eYquOm0QzINrRpmV\nspCa0PWIoKmMnAmKidFFbT1IcOtj0y77VxcEc7XPrwKgUTy6JHLgNAxNpEAC2Rtz\nfRnz3+UkDBjfy7WhFn9v5ltAqX1iuyCB/T+yiKRIsw/zj97iGCr4MQOmQ9x3ONsM\noXoOM34vEYfA9N59GM3vFf4ch1lS44aJV0AiNf4/TSn6NKUP41c3TvEggq7GxeKx\nSXXo3SzwcTZvYjCVX3M40OEBYqsNOYqvW3XDJCDnehyXKjNx/KkWi25vNfQYt+Mb\n4fGRms/beIGq8ohEIDNJvb4Qe1cE8ORWdOiyfjL2Vz0HjwLLRmy0lBSdzMrUwe4=\n=boOk\n-----END PGP SIGNATURE-----\n", "payload": "tree f714271189e0267324265830e4c3dc513b81cb11\nparent 1fe0b8c03fa613262afd2d612c55cc3a11249c7e\nparent b437dca4bd100c0a7a498d5960d566a0ccd92432\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1575497231 +0000\ncommitter GitHub <noreply@github.com> 1575497231 +0000\n\nMerge #2477\n\n2477: Run rustfmt with respect to Cargo.toml edition r=matklad a=Speedy37\n\nFixes #2146\r\nFixes #1959\n\nCo-authored-by: Vincent Rouill\u00e9 <vincent@speedy37.fr>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/46d37a81ac82916ec67a2419a891c81d8ae01919", "html_url": "https://github.com/rust-lang/rust/commit/46d37a81ac82916ec67a2419a891c81d8ae01919", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/46d37a81ac82916ec67a2419a891c81d8ae01919/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1fe0b8c03fa613262afd2d612c55cc3a11249c7e", "url": "https://api.github.com/repos/rust-lang/rust/commits/1fe0b8c03fa613262afd2d612c55cc3a11249c7e", "html_url": "https://github.com/rust-lang/rust/commit/1fe0b8c03fa613262afd2d612c55cc3a11249c7e"}, {"sha": "b437dca4bd100c0a7a498d5960d566a0ccd92432", "url": "https://api.github.com/repos/rust-lang/rust/commits/b437dca4bd100c0a7a498d5960d566a0ccd92432", "html_url": "https://github.com/rust-lang/rust/commit/b437dca4bd100c0a7a498d5960d566a0ccd92432"}], "stats": {"total": 78, "additions": 78, "deletions": 0}, "files": [{"sha": "2a7ed20d1ce91b89a198cc15a7e1b15ed7af39f5", "filename": "crates/ra_db/src/input.rs", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/46d37a81ac82916ec67a2419a891c81d8ae01919/crates%2Fra_db%2Fsrc%2Finput.rs", "raw_url": "https://github.com/rust-lang/rust/raw/46d37a81ac82916ec67a2419a891c81d8ae01919/crates%2Fra_db%2Fsrc%2Finput.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_db%2Fsrc%2Finput.rs?ref=46d37a81ac82916ec67a2419a891c81d8ae01919", "patch": "@@ -235,6 +235,15 @@ impl FromStr for Edition {\n     }\n }\n \n+impl fmt::Display for Edition {\n+    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {\n+        f.write_str(match self {\n+            Edition::Edition2015 => \"2015\",\n+            Edition::Edition2018 => \"2018\",\n+        })\n+    }\n+}\n+\n impl Dependency {\n     pub fn crate_id(&self) -> CrateId {\n         self.crate_id"}, {"sha": "779a81b2c0aa0d9ee9a47a02081d05311fa6da8d", "filename": "crates/ra_ide/src/lib.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/46d37a81ac82916ec67a2419a891c81d8ae01919/crates%2Fra_ide%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/46d37a81ac82916ec67a2419a891c81d8ae01919/crates%2Fra_ide%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Flib.rs?ref=46d37a81ac82916ec67a2419a891c81d8ae01919", "patch": "@@ -422,6 +422,11 @@ impl Analysis {\n         self.with_db(|db| parent_module::crate_for(db, file_id))\n     }\n \n+    /// Returns the edition of the given crate.\n+    pub fn crate_edition(&self, crate_id: CrateId) -> Cancelable<Edition> {\n+        self.with_db(|db| db.crate_graph().edition(crate_id))\n+    }\n+\n     /// Returns the root file of the given crate.\n     pub fn crate_root(&self, crate_id: CrateId) -> Cancelable<FileId> {\n         self.with_db(|db| db.crate_graph().crate_root(crate_id))"}, {"sha": "4095836344003051b17b6f073586100fff792276", "filename": "crates/ra_lsp_server/src/main_loop/handlers.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/46d37a81ac82916ec67a2419a891c81d8ae01919/crates%2Fra_lsp_server%2Fsrc%2Fmain_loop%2Fhandlers.rs", "raw_url": "https://github.com/rust-lang/rust/raw/46d37a81ac82916ec67a2419a891c81d8ae01919/crates%2Fra_lsp_server%2Fsrc%2Fmain_loop%2Fhandlers.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_lsp_server%2Fsrc%2Fmain_loop%2Fhandlers.rs?ref=46d37a81ac82916ec67a2419a891c81d8ae01919", "patch": "@@ -555,12 +555,18 @@ pub fn handle_formatting(\n     let _p = profile(\"handle_formatting\");\n     let file_id = params.text_document.try_conv_with(&world)?;\n     let file = world.analysis().file_text(file_id)?;\n+    let crate_ids = world.analysis().crate_for(file_id)?;\n \n     let file_line_index = world.analysis().file_line_index(file_id)?;\n     let end_position = TextUnit::of_str(&file).conv_with(&file_line_index);\n \n     use std::process;\n     let mut rustfmt = process::Command::new(\"rustfmt\");\n+    if let Some(&crate_id) = crate_ids.first() {\n+        // Assume all crates are in the same edition\n+        let edition = world.analysis().crate_edition(crate_id)?;\n+        rustfmt.args(&[\"--edition\", &edition.to_string()]);\n+    }\n     rustfmt.stdin(process::Stdio::piped()).stdout(process::Stdio::piped());\n \n     if let Ok(path) = params.text_document.uri.to_file_path() {"}, {"sha": "fec50bd25c8de1bcbefab0b6e5f67b17fbcbd29a", "filename": "crates/ra_lsp_server/tests/heavy_tests/main.rs", "status": "modified", "additions": 58, "deletions": 0, "changes": 58, "blob_url": "https://github.com/rust-lang/rust/blob/46d37a81ac82916ec67a2419a891c81d8ae01919/crates%2Fra_lsp_server%2Ftests%2Fheavy_tests%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/46d37a81ac82916ec67a2419a891c81d8ae01919/crates%2Fra_lsp_server%2Ftests%2Fheavy_tests%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_lsp_server%2Ftests%2Fheavy_tests%2Fmain.rs?ref=46d37a81ac82916ec67a2419a891c81d8ae01919", "patch": "@@ -172,6 +172,7 @@ fn main() {}\n fn test_format_document() {\n     let server = project(\n         r#\"\n+//- Cargo.toml\n [package]\n name = \"foo\"\n version = \"0.0.0\"\n@@ -219,6 +220,63 @@ pub use std::collections::HashMap;\n     );\n }\n \n+#[test]\n+fn test_format_document_2018() {\n+    let server = project(\n+        r#\"\n+//- Cargo.toml\n+[package]\n+name = \"foo\"\n+version = \"0.0.0\"\n+edition = \"2018\"\n+\n+//- src/lib.rs\n+mod bar;\n+\n+async fn test() {\n+}\n+\n+fn main() {\n+}\n+\n+pub use std::collections::HashMap;\n+\"#,\n+    );\n+    server.wait_until_workspace_is_loaded();\n+\n+    server.request::<Formatting>(\n+        DocumentFormattingParams {\n+            text_document: server.doc_id(\"src/lib.rs\"),\n+            options: FormattingOptions {\n+                tab_size: 4,\n+                insert_spaces: false,\n+                properties: HashMap::new(),\n+            },\n+        },\n+        json!([\n+            {\n+                \"newText\": r#\"mod bar;\n+\n+async fn test() {}\n+\n+fn main() {}\n+\n+pub use std::collections::HashMap;\n+\"#,\n+                \"range\": {\n+                    \"end\": {\n+                        \"character\": 0,\n+                        \"line\": 10\n+                    },\n+                    \"start\": {\n+                        \"character\": 0,\n+                        \"line\": 0\n+                    }\n+                }\n+            }\n+        ]),\n+    );\n+}\n #[test]\n fn test_missing_module_code_action() {\n     let server = project("}]}