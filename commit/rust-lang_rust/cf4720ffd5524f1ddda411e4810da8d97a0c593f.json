{"sha": "cf4720ffd5524f1ddda411e4810da8d97a0c593f", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNmNDcyMGZmZDU1MjRmMWRkZGE0MTFlNDgxMGRhOGQ5N2EwYzU5M2Y=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-10-26T18:17:39Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-10-26T18:22:40Z"}, "message": "use unicode bar for drawing the cursor", "tree": {"sha": "0c7309c896b50663418f6b45a0df36336d92fc43", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0c7309c896b50663418f6b45a0df36336d92fc43"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cf4720ffd5524f1ddda411e4810da8d97a0c593f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cf4720ffd5524f1ddda411e4810da8d97a0c593f", "html_url": "https://github.com/rust-lang/rust/commit/cf4720ffd5524f1ddda411e4810da8d97a0c593f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cf4720ffd5524f1ddda411e4810da8d97a0c593f/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "106004139375b64817145d8279cd7904a477c637", "url": "https://api.github.com/repos/rust-lang/rust/commits/106004139375b64817145d8279cd7904a477c637", "html_url": "https://github.com/rust-lang/rust/commit/106004139375b64817145d8279cd7904a477c637"}], "stats": {"total": 41, "additions": 24, "deletions": 17}, "files": [{"sha": "bed3436778d740edab98d4e5980cd3d3b3ad46bf", "filename": "crates/ra_assists/src/assists/change_visibility.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/cf4720ffd5524f1ddda411e4810da8d97a0c593f/crates%2Fra_assists%2Fsrc%2Fassists%2Fchange_visibility.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cf4720ffd5524f1ddda411e4810da8d97a0c593f/crates%2Fra_assists%2Fsrc%2Fassists%2Fchange_visibility.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_assists%2Fsrc%2Fassists%2Fchange_visibility.rs?ref=cf4720ffd5524f1ddda411e4810da8d97a0c593f", "patch": "@@ -16,7 +16,7 @@ use crate::{Assist, AssistCtx, AssistId};\n // Adds or changes existing visibility specifier.\n //\n // ```\n-// fn<|> frobnicate() {}\n+// <|>fn frobnicate() {}\n // ```\n // ->\n // ```"}, {"sha": "b96d5772e09bb0254897a544e393578582a4332a", "filename": "crates/ra_assists/src/doc_tests/generated.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/cf4720ffd5524f1ddda411e4810da8d97a0c593f/crates%2Fra_assists%2Fsrc%2Fdoc_tests%2Fgenerated.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cf4720ffd5524f1ddda411e4810da8d97a0c593f/crates%2Fra_assists%2Fsrc%2Fdoc_tests%2Fgenerated.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_assists%2Fsrc%2Fdoc_tests%2Fgenerated.rs?ref=cf4720ffd5524f1ddda411e4810da8d97a0c593f", "patch": "@@ -146,7 +146,7 @@ fn doctest_change_visibility() {\n     check(\n         \"change_visibility\",\n         r#####\"\n-fn<|> frobnicate() {}\n+<|>fn frobnicate() {}\n \"#####,\n         r#####\"\n pub(crate) fn frobnicate() {}"}, {"sha": "ee1cfa142dee27b37cd894164d2d891c6da7130e", "filename": "docs/user/assists.md", "status": "modified", "additions": 16, "deletions": 13, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/cf4720ffd5524f1ddda411e4810da8d97a0c593f/docs%2Fuser%2Fassists.md", "raw_url": "https://github.com/rust-lang/rust/raw/cf4720ffd5524f1ddda411e4810da8d97a0c593f/docs%2Fuser%2Fassists.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/docs%2Fuser%2Fassists.md?ref=cf4720ffd5524f1ddda411e4810da8d97a0c593f", "patch": "@@ -1,5 +1,8 @@\n # Assists\n \n+Cursor position or selection is signified by `\u2503` character.\n+\n+\n ## `add_derive`\n \n Adds a new `#[derive()]` clause to a struct or enum.\n@@ -8,7 +11,7 @@ Adds a new `#[derive()]` clause to a struct or enum.\n // BEFORE\n struct Point {\n     x: u32,\n-    y: u32,<|>\n+    y: u32,\u2503\n }\n \n // AFTER\n@@ -26,7 +29,7 @@ Specify type for a let binding.\n ```rust\n // BEFORE\n fn main() {\n-    let x<|> = 92;\n+    let x\u2503 = 92;\n }\n \n // AFTER\n@@ -42,7 +45,7 @@ Adds a new inherent impl for a type.\n ```rust\n // BEFORE\n struct Ctx<T: Clone> {\n-     data: T,<|>\n+     data: T,\u2503\n }\n \n // AFTER\n@@ -69,7 +72,7 @@ trait T {\n \n impl T for () {\n     Type X = ();\n-    fn foo(&self) {}<|>\n+    fn foo(&self) {}\u2503\n \n }\n \n@@ -100,7 +103,7 @@ trait T {\n     fn bar(&self) {}\n }\n \n-impl T for () {<|>\n+impl T for () {\u2503\n \n }\n \n@@ -128,7 +131,7 @@ This means something of the form `!x` or `x != y`.\n ```rust\n // BEFORE\n fn main() {\n-    if x != 4 ||<|> !y {}\n+    if x != 4 ||\u2503 !y {}\n }\n \n // AFTER\n@@ -143,7 +146,7 @@ Adds or changes existing visibility specifier.\n \n ```rust\n // BEFORE\n-fn<|> frobnicate() {}\n+\u2503fn frobnicate() {}\n \n // AFTER\n pub(crate) fn frobnicate() {}\n@@ -156,7 +159,7 @@ Replace a large conditional with a guarded return.\n ```rust\n // BEFORE\n fn main() {\n-    <|>if cond {\n+    \u2503if cond {\n         foo();\n         bar();\n     }\n@@ -182,7 +185,7 @@ enum Action { Move { distance: u32 }, Stop }\n \n fn handle(action: Action) {\n     match action {\n-        <|>\n+        \u2503\n     }\n }\n \n@@ -204,7 +207,7 @@ Flips operands of a binary expression.\n ```rust\n // BEFORE\n fn main() {\n-    let _ = 90 +<|> 2;\n+    let _ = 90 +\u2503 2;\n }\n \n // AFTER\n@@ -220,7 +223,7 @@ Flips two comma-separated items.\n ```rust\n // BEFORE\n fn main() {\n-    ((1, 2),<|> (3, 4));\n+    ((1, 2),\u2503 (3, 4));\n }\n \n // AFTER\n@@ -236,7 +239,7 @@ Inlines local variable.\n ```rust\n // BEFORE\n fn main() {\n-    let x<|> = 1 + 2;\n+    let x\u2503 = 1 + 2;\n     x * 4;\n }\n \n@@ -253,7 +256,7 @@ Extracts subexpression into a variable.\n ```rust\n // BEFORE\n fn main() {\n-    <|>(1 + 2)<|> * 4;\n+    \u2503(1 + 2)\u2503 * 4;\n }\n \n // AFTER"}, {"sha": "0c4cf21529da27faa33020b5513f12e9786598ad", "filename": "xtask/src/codegen/gen_assists_docs.rs", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/cf4720ffd5524f1ddda411e4810da8d97a0c593f/xtask%2Fsrc%2Fcodegen%2Fgen_assists_docs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cf4720ffd5524f1ddda411e4810da8d97a0c593f/xtask%2Fsrc%2Fcodegen%2Fgen_assists_docs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/xtask%2Fsrc%2Fcodegen%2Fgen_assists_docs.rs?ref=cf4720ffd5524f1ddda411e4810da8d97a0c593f", "patch": "@@ -107,9 +107,13 @@ r#####\"\n }\n \n fn generate_docs(assists: &[Assist], mode: Mode) -> Result<()> {\n-    let mut buf = String::from(\"# Assists\\n\");\n+    let mut buf = String::from(\n+        \"# Assists\\n\\nCursor position or selection is signified by `\u2503` character.\\n\\n\",\n+    );\n \n     for assist in assists {\n+        let before = assist.before.replace(\"<|>\", \"\u2503\"); // Unicode pseudo-graphics bar\n+        let after = assist.after.replace(\"<|>\", \"\u2503\");\n         let docs = format!(\n             \"\n ## `{}`\n@@ -124,7 +128,7 @@ fn generate_docs(assists: &[Assist], mode: Mode) -> Result<()> {\n {}\n ```\n \",\n-            assist.id, assist.doc, assist.before, assist.after\n+            assist.id, assist.doc, before, after\n         );\n         buf.push_str(&docs);\n     }"}]}