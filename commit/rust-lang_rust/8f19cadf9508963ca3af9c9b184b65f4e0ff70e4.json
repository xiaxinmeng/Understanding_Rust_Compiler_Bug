{"sha": "8f19cadf9508963ca3af9c9b184b65f4e0ff70e4", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhmMTljYWRmOTUwODk2M2NhM2FmOWM5YjE4NGI2NWY0ZTBmZjcwZTQ=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2018-10-13T17:03:47Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2018-10-13T17:03:47Z"}, "message": "Auto merge of #55003 - zackmdavis:must_use_assoc_fn, r=varkor\n\n`#[must_use]` for associated functions is supposed to actually work\n\nIn the comments of (closed, defunct) pull request #54884, @Centril [noted that](https://github.com/rust-lang/rust/pull/54884#issuecomment-427626495) must-use annotations didn't work on an associated function (what other communities might call a \"static method\"). Subsequent logging revealed that in this case we have a `Def::Method`, whereas the lint pass was only matching on `Def::Fn`. (One could argue that those def-names are thereby misleading\u2014must-use for `self`-ful methods have always worked\u2014but documenting or reworking that can be left to another day.)\n\nr? @varkor", "tree": {"sha": "242066196644b61c9954b379ea1a07bcf0ab4048", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/242066196644b61c9954b379ea1a07bcf0ab4048"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8f19cadf9508963ca3af9c9b184b65f4e0ff70e4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8f19cadf9508963ca3af9c9b184b65f4e0ff70e4", "html_url": "https://github.com/rust-lang/rust/commit/8f19cadf9508963ca3af9c9b184b65f4e0ff70e4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8f19cadf9508963ca3af9c9b184b65f4e0ff70e4/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f51752774bbbe48d2aabe53c86e9e91ed3a73a5d", "url": "https://api.github.com/repos/rust-lang/rust/commits/f51752774bbbe48d2aabe53c86e9e91ed3a73a5d", "html_url": "https://github.com/rust-lang/rust/commit/f51752774bbbe48d2aabe53c86e9e91ed3a73a5d"}, {"sha": "ab91a6b4df04a60cf19682b1f016848d3e4784ad", "url": "https://api.github.com/repos/rust-lang/rust/commits/ab91a6b4df04a60cf19682b1f016848d3e4784ad", "html_url": "https://github.com/rust-lang/rust/commit/ab91a6b4df04a60cf19682b1f016848d3e4784ad"}], "stats": {"total": 47, "additions": 31, "deletions": 16}, "files": [{"sha": "40bb2faa3623b0f357b983fd3ac0d7d3a9461eca", "filename": "src/liballoc/rc.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/8f19cadf9508963ca3af9c9b184b65f4e0ff70e4/src%2Fliballoc%2Frc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8f19cadf9508963ca3af9c9b184b65f4e0ff70e4/src%2Fliballoc%2Frc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Frc.rs?ref=8f19cadf9508963ca3af9c9b184b65f4e0ff70e4", "patch": "@@ -867,7 +867,7 @@ impl<T: ?Sized> Clone for Rc<T> {\n     ///\n     /// let five = Rc::new(5);\n     ///\n-    /// Rc::clone(&five);\n+    /// let _ = Rc::clone(&five);\n     /// ```\n     #[inline]\n     fn clone(&self) -> Rc<T> {\n@@ -1304,7 +1304,7 @@ impl<T: ?Sized> Clone for Weak<T> {\n     ///\n     /// let weak_five = Rc::downgrade(&Rc::new(5));\n     ///\n-    /// Weak::clone(&weak_five);\n+    /// let _ = Weak::clone(&weak_five);\n     /// ```\n     #[inline]\n     fn clone(&self) -> Weak<T> {"}, {"sha": "35935861fb18297ef11646d7e26feada3b2c8356", "filename": "src/liballoc/sync.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/8f19cadf9508963ca3af9c9b184b65f4e0ff70e4/src%2Fliballoc%2Fsync.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8f19cadf9508963ca3af9c9b184b65f4e0ff70e4/src%2Fliballoc%2Fsync.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Fsync.rs?ref=8f19cadf9508963ca3af9c9b184b65f4e0ff70e4", "patch": "@@ -713,7 +713,7 @@ impl<T: ?Sized> Clone for Arc<T> {\n     ///\n     /// let five = Arc::new(5);\n     ///\n-    /// Arc::clone(&five);\n+    /// let _ = Arc::clone(&five);\n     /// ```\n     #[inline]\n     fn clone(&self) -> Arc<T> {\n@@ -1135,7 +1135,7 @@ impl<T: ?Sized> Clone for Weak<T> {\n     ///\n     /// let weak_five = Arc::downgrade(&Arc::new(5));\n     ///\n-    /// Weak::clone(&weak_five);\n+    /// let _ = Weak::clone(&weak_five);\n     /// ```\n     #[inline]\n     fn clone(&self) -> Weak<T> {"}, {"sha": "7d178d209672052da3c96d13b16611b572454cb8", "filename": "src/librustc_lint/unused.rs", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/8f19cadf9508963ca3af9c9b184b65f4e0ff70e4/src%2Flibrustc_lint%2Funused.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8f19cadf9508963ca3af9c9b184b65f4e0ff70e4/src%2Flibrustc_lint%2Funused.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_lint%2Funused.rs?ref=8f19cadf9508963ca3af9c9b184b65f4e0ff70e4", "patch": "@@ -80,10 +80,11 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for UnusedResults {\n                 match callee.node {\n                     hir::ExprKind::Path(ref qpath) => {\n                         let def = cx.tables.qpath_def(qpath, callee.hir_id);\n-                        if let Def::Fn(_) = def {\n-                            Some(def)\n-                        } else {  // `Def::Local` if it was a closure, for which we\n-                            None  // do not currently support must-use linting\n+                        match def {\n+                            Def::Fn(_) | Def::Method(_) => Some(def),\n+                            // `Def::Local` if it was a closure, for which we\n+                            // do not currently support must-use linting\n+                            _ => None\n                         }\n                     },\n                     _ => None"}, {"sha": "bf6e686bb7bb4a14d5cdda862648d4f12c571917", "filename": "src/test/run-pass/resolve-pseudo-shadowing.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8f19cadf9508963ca3af9c9b184b65f4e0ff70e4/src%2Ftest%2Frun-pass%2Fresolve-pseudo-shadowing.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8f19cadf9508963ca3af9c9b184b65f4e0ff70e4/src%2Ftest%2Frun-pass%2Fresolve-pseudo-shadowing.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fresolve-pseudo-shadowing.rs?ref=8f19cadf9508963ca3af9c9b184b65f4e0ff70e4", "patch": "@@ -12,7 +12,7 @@\n \n fn check<Clone>(_c: Clone) {\n     fn check2() {\n-        <() as std::clone::Clone>::clone(&());\n+        let _ = <() as std::clone::Clone>::clone(&());\n     }\n     check2();\n }"}, {"sha": "e3e20bc89b462694f5017f192673898e72cf7ba4", "filename": "src/test/ui/fn_must_use.rs", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/8f19cadf9508963ca3af9c9b184b65f4e0ff70e4/src%2Ftest%2Fui%2Ffn_must_use.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8f19cadf9508963ca3af9c9b184b65f4e0ff70e4/src%2Ftest%2Fui%2Ffn_must_use.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffn_must_use.rs?ref=8f19cadf9508963ca3af9c9b184b65f4e0ff70e4", "patch": "@@ -22,6 +22,11 @@ impl MyStruct {\n     fn need_to_use_this_method_value(&self) -> usize {\n         self.n\n     }\n+\n+    #[must_use]\n+    fn need_to_use_this_associated_function_value() -> isize {\n+        -1\n+    }\n }\n \n trait EvenNature {\n@@ -66,6 +71,9 @@ fn main() {\n     m.is_even(); // trait method!\n     //~^ WARN unused return value\n \n+    MyStruct::need_to_use_this_associated_function_value();\n+    //~^ WARN unused return value\n+\n     m.replace(3); // won't warn (annotation needs to be in trait definition)\n \n     // comparison methods are `must_use`"}, {"sha": "1bce8abbbf055be9f372e6e21833892738580bc6", "filename": "src/test/ui/fn_must_use.stderr", "status": "modified", "additions": 13, "deletions": 7, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/8f19cadf9508963ca3af9c9b184b65f4e0ff70e4/src%2Ftest%2Fui%2Ffn_must_use.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/8f19cadf9508963ca3af9c9b184b65f4e0ff70e4/src%2Ftest%2Fui%2Ffn_must_use.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffn_must_use.stderr?ref=8f19cadf9508963ca3af9c9b184b65f4e0ff70e4", "patch": "@@ -1,5 +1,5 @@\n warning: unused return value of `need_to_use_this_value` which must be used\n-  --> $DIR/fn_must_use.rs:60:5\n+  --> $DIR/fn_must_use.rs:65:5\n    |\n LL |     need_to_use_this_value(); //~ WARN unused return value\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -12,39 +12,45 @@ LL | #![warn(unused_must_use)]\n    = note: it's important\n \n warning: unused return value of `MyStruct::need_to_use_this_method_value` which must be used\n-  --> $DIR/fn_must_use.rs:65:5\n+  --> $DIR/fn_must_use.rs:70:5\n    |\n LL |     m.need_to_use_this_method_value(); //~ WARN unused return value\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: unused return value of `EvenNature::is_even` which must be used\n-  --> $DIR/fn_must_use.rs:66:5\n+  --> $DIR/fn_must_use.rs:71:5\n    |\n LL |     m.is_even(); // trait method!\n    |     ^^^^^^^^^^^^\n    |\n    = note: no side effects\n \n+warning: unused return value of `MyStruct::need_to_use_this_associated_function_value` which must be used\n+  --> $DIR/fn_must_use.rs:74:5\n+   |\n+LL |     MyStruct::need_to_use_this_associated_function_value();\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+\n warning: unused return value of `std::cmp::PartialEq::eq` which must be used\n-  --> $DIR/fn_must_use.rs:72:5\n+  --> $DIR/fn_must_use.rs:80:5\n    |\n LL |     2.eq(&3); //~ WARN unused return value\n    |     ^^^^^^^^^\n \n warning: unused return value of `std::cmp::PartialEq::eq` which must be used\n-  --> $DIR/fn_must_use.rs:73:5\n+  --> $DIR/fn_must_use.rs:81:5\n    |\n LL |     m.eq(&n); //~ WARN unused return value\n    |     ^^^^^^^^^\n \n warning: unused comparison which must be used\n-  --> $DIR/fn_must_use.rs:76:5\n+  --> $DIR/fn_must_use.rs:84:5\n    |\n LL |     2 == 3; //~ WARN unused comparison\n    |     ^^^^^^\n \n warning: unused comparison which must be used\n-  --> $DIR/fn_must_use.rs:77:5\n+  --> $DIR/fn_must_use.rs:85:5\n    |\n LL |     m == n; //~ WARN unused comparison\n    |     ^^^^^^"}]}