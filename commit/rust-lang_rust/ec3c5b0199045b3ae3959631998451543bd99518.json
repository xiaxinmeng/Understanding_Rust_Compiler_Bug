{"sha": "ec3c5b0199045b3ae3959631998451543bd99518", "node_id": "MDY6Q29tbWl0NzI0NzEyOmVjM2M1YjAxOTkwNDViM2FlMzk1OTYzMTk5ODQ1MTU0M2JkOTk1MTg=", "commit": {"author": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2019-01-18T05:19:30Z"}, "committer": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2019-01-18T05:19:30Z"}, "message": "Use structured suggestion to surround struct literal with parenthesis", "tree": {"sha": "1d088ee3bd398e6df8e6d54b5068103b6aa2c50e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1d088ee3bd398e6df8e6d54b5068103b6aa2c50e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ec3c5b0199045b3ae3959631998451543bd99518", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ec3c5b0199045b3ae3959631998451543bd99518", "html_url": "https://github.com/rust-lang/rust/commit/ec3c5b0199045b3ae3959631998451543bd99518", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ec3c5b0199045b3ae3959631998451543bd99518/comments", "author": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "committer": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9aee7ed335cfcaad33a6f6492497588b3d421b2d", "url": "https://api.github.com/repos/rust-lang/rust/commits/9aee7ed335cfcaad33a6f6492497588b3d421b2d", "html_url": "https://github.com/rust-lang/rust/commit/9aee7ed335cfcaad33a6f6492497588b3d421b2d"}], "stats": {"total": 54, "additions": 46, "deletions": 8}, "files": [{"sha": "430edcafae26ae97ef553a9115af722d6188525b", "filename": "src/librustc_resolve/lib.rs", "status": "modified", "additions": 37, "deletions": 5, "changes": 42, "blob_url": "https://github.com/rust-lang/rust/blob/ec3c5b0199045b3ae3959631998451543bd99518/src%2Flibrustc_resolve%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ec3c5b0199045b3ae3959631998451543bd99518/src%2Flibrustc_resolve%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Flib.rs?ref=ec3c5b0199045b3ae3959631998451543bd99518", "patch": "@@ -3369,6 +3369,29 @@ impl<'a> Resolver<'a> {\n                                 Ok(ref snippet) if snippet == \"{\" => true,\n                                 _ => false,\n                             };\n+                            // In case this could be a struct literal that needs to be surrounded\n+                            // by parenthesis, find the appropriate span.\n+                            let mut i = 0;\n+                            let mut closing_brace = None;\n+                            loop {\n+                                sp = sm.next_point(sp);\n+                                match sm.span_to_snippet(sp) {\n+                                    Ok(ref snippet) => {\n+                                        if snippet == \"}\" {\n+                                            let sp = span.to(sp);\n+                                            if let Ok(snippet) = sm.span_to_snippet(sp) {\n+                                                closing_brace = Some((sp, snippet));\n+                                            }\n+                                            break;\n+                                        }\n+                                    }\n+                                    _ => break,\n+                                }\n+                                i += 1;\n+                                if i > 100 { // The bigger the span the more likely we're\n+                                    break;   // incorrect. Bound it to 100 chars long.\n+                                }\n+                            }\n                             match source {\n                                 PathSource::Expr(Some(parent)) => {\n                                     match parent.node {\n@@ -3395,11 +3418,20 @@ impl<'a> Resolver<'a> {\n                                     }\n                                 },\n                                 PathSource::Expr(None) if followed_by_brace == true => {\n-                                    err.span_label(\n-                                        span,\n-                                        format!(\"did you mean `({} {{ /* fields */ }})`?\",\n-                                                path_str),\n-                                    );\n+                                    if let Some((sp, snippet)) = closing_brace {\n+                                        err.span_suggestion_with_applicability(\n+                                            sp,\n+                                            \"surround the struct literal with parenthesis\",\n+                                            format!(\"({})\", snippet),\n+                                            Applicability::MaybeIncorrect,\n+                                        );\n+                                    } else {\n+                                        err.span_label(\n+                                            span,\n+                                            format!(\"did you mean `({} {{ /* fields */ }})`?\",\n+                                                    path_str),\n+                                        );\n+                                    }\n                                     return (err, candidates);\n                                 },\n                                 _ => {"}, {"sha": "3f3c78c68d0979e6203d21847deb6e56084b239f", "filename": "src/test/ui/error-codes/E0423.stderr", "status": "modified", "additions": 9, "deletions": 3, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/ec3c5b0199045b3ae3959631998451543bd99518/src%2Ftest%2Fui%2Ferror-codes%2FE0423.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ec3c5b0199045b3ae3959631998451543bd99518/src%2Ftest%2Fui%2Ferror-codes%2FE0423.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ferror-codes%2FE0423.stderr?ref=ec3c5b0199045b3ae3959631998451543bd99518", "patch": "@@ -29,19 +29,25 @@ error[E0423]: expected value, found struct `S`\n   --> $DIR/E0423.rs:12:32\n    |\n LL |     if let S { x: _x, y: 2 } = S { x: 1, y: 2 } { println!(\"Ok\"); }\n-   |                                ^ did you mean `(S { /* fields */ })`?\n+   |                                ^---------------\n+   |                                |\n+   |                                help: surround the struct literal with parenthesis: `(S { x: 1, y: 2 })`\n \n error[E0423]: expected value, found struct `T`\n   --> $DIR/E0423.rs:15:8\n    |\n LL |     if T {} == T {} { println!(\"Ok\"); }\n-   |        ^ did you mean `(T { /* fields */ })`?\n+   |        ^---\n+   |        |\n+   |        help: surround the struct literal with parenthesis: `(T {})`\n \n error[E0423]: expected value, found struct `std::ops::Range`\n   --> $DIR/E0423.rs:21:14\n    |\n LL |     for _ in std::ops::Range { start: 0, end: 10 } {}\n-   |              ^^^^^^^^^^^^^^^ did you mean `(std::ops::Range { /* fields */ })`?\n+   |              ^^^^^^^^^^^^^^^----------------------\n+   |              |\n+   |              help: surround the struct literal with parenthesis: `(std::ops::Range { start: 0, end: 10 })`\n \n error: aborting due to 7 previous errors\n "}]}