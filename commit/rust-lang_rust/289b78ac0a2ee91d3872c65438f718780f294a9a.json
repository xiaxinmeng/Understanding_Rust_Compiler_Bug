{"sha": "289b78ac0a2ee91d3872c65438f718780f294a9a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI4OWI3OGFjMGEyZWU5MWQzODcyYzY1NDM4ZjcxODc4MGYyOTRhOWE=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2019-06-17T09:59:57Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2019-06-17T09:59:57Z"}, "message": "Auto merge of #58508 - Zoxc:time-crate, r=oli-obk\n\nAdd a RUSTC_TIME env var to time rust crates during bootstrap\n\nBlocked on https://github.com/rust-lang/cargo/pull/6674\n\nr? @michaelwoerister\n\nExample for rustc with https://github.com/rust-lang/rust/pull/58507:\n```\n  time: 0.460; rss: 94MB\tparsing\n  time: 0.000; rss: 94MB\tattributes injection\n  time: 0.000; rss: 94MB\trecursion limit\n  time: 0.000; rss: 94MB\tcrate injection\n  time: 0.000; rss: 94MB\tplugin loading\n  time: 0.000; rss: 94MB\tplugin registration\n  time: 0.044; rss: 94MB\tpre ast expansion lint checks\n    time: 1.999; rss: 316MB\texpand crate\n    time: 0.000; rss: 316MB\tcheck unused macros\n  time: 2.000; rss: 316MB\texpansion\n  time: 0.000; rss: 316MB\tmaybe building test harness\n  time: 0.053; rss: 316MB\tAST validation\n  time: 0.000; rss: 316MB\tmaybe creating a macro crate\n  time: 1.515; rss: 397MB\tname resolution\n  time: 0.122; rss: 397MB\tcomplete gated feature checking\n  time: 0.655; rss: 546MB\tlowering ast -> hir\n  time: 0.136; rss: 550MB\tearly lint checks\n    time: 0.117; rss: 540MB\tvalidate hir map\n  time: 0.606; rss: 540MB\tindexing hir\n  time: 0.000; rss: 480MB\tload query result cache\n  time: 0.000; rss: 478MB\tdep graph tcx init\n  time: 0.000; rss: 478MB\tlooking for entry point\n  time: 0.001; rss: 478MB\tlooking for plugin registrar\n  time: 0.001; rss: 478MB\tlooking for derive registrar\n  time: 0.049; rss: 478MB\tloop checking\n  time: 0.064; rss: 479MB\tattribute checking\n  time: 0.166; rss: 484MB\tstability checking\n  time: 0.699; rss: 566MB\ttype collecting\n  time: 0.006; rss: 566MB\toutlives testing\n  time: 0.018; rss: 568MB\timpl wf inference\n    time: 0.002; rss: 583MB\tunsafety checking\n    time: 0.005; rss: 583MB\torphan checking\n  time: 0.227; rss: 583MB\tcoherence checking\n  time: 0.006; rss: 583MB\tvariance testing\n  time: 1.546; rss: 657MB\twf checking\n  time: 0.389; rss: 665MB\titem-types checking\n  time: 13.999; rss: 837MB\titem-bodies checking\n    time: 1.692; rss: 883MB\trvalue promotion\n    time: 0.067; rss: 883MB\tintrinsic checking\n    time: 0.624; rss: 887MB\tmatch checking\n    time: 0.246; rss: 889MB\tliveness checking\n  time: 2.629; rss: 889MB\tmisc checking\n  time: 0.000; rss: 889MB\tborrow checking\n  time: 16.754; rss: 1242MB\tMIR borrow checking\n  time: 0.050; rss: 1242MB\tdumping chalk-like clauses\n  time: 0.010; rss: 1242MB\tMIR effect checking\n  time: 0.001; rss: 1242MB\tlayout testing\n    time: 0.829; rss: 1244MB\tprivacy checking\n    time: 0.183; rss: 1247MB\tdeath checking\n    time: 0.100; rss: 1248MB\tunused lib feature checking\n    time: 0.405; rss: 1250MB\tlint checking\n  time: 1.518; rss: 1250MB\tmisc checking\n  time: 0.000; rss: 1250MB\tresolving dependency formats\n    time: 2.928; rss: 1332MB\twrite metadata\n      time: 0.014; rss: 1332MB\tcollecting roots\n      time: 7.621; rss: 1488MB\tcollecting mono items\n    time: 7.635; rss: 1488MB\tmonomorphization collection\n    time: 0.557; rss: 1567MB\tcodegen unit partitioning\n    time: 27.971; rss: 2656MB\tcodegen to LLVM IR\n    time: 0.056; rss: 2656MB\tassert dep graph\n    time: 0.000; rss: 2656MB\tserialize dep graph\n  time: 195.414; rss: 2656MB\tcodegen\n  time: 0.000; rss: 329MB\tserialize work products\n    time: 1.664; rss: 331MB\trunning linker\n  time: 1.965; rss: 331MB\tlinking\n[RUSTC-TIMING] rustc test:false 950.103\n```\nIt doesn't really look like the times add up here.", "tree": {"sha": "a900a314e2f1f3d33b00b12c77e375591f3a08d5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a900a314e2f1f3d33b00b12c77e375591f3a08d5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/289b78ac0a2ee91d3872c65438f718780f294a9a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/289b78ac0a2ee91d3872c65438f718780f294a9a", "html_url": "https://github.com/rust-lang/rust/commit/289b78ac0a2ee91d3872c65438f718780f294a9a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/289b78ac0a2ee91d3872c65438f718780f294a9a/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "63f21b6ca576c8b747829d4f3f9d4eb2f94ee38b", "url": "https://api.github.com/repos/rust-lang/rust/commits/63f21b6ca576c8b747829d4f3f9d4eb2f94ee38b", "html_url": "https://github.com/rust-lang/rust/commit/63f21b6ca576c8b747829d4f3f9d4eb2f94ee38b"}, {"sha": "a0c7984fb97b6864352028b848c3240ae5b3554e", "url": "https://api.github.com/repos/rust-lang/rust/commits/a0c7984fb97b6864352028b848c3240ae5b3554e", "html_url": "https://github.com/rust-lang/rust/commit/a0c7984fb97b6864352028b848c3240ae5b3554e"}], "stats": {"total": 20, "additions": 16, "deletions": 4}, "files": [{"sha": "595deb07ec82b56a28bec40c23aa0815621e3425", "filename": "src/bootstrap/bin/rustc.rs", "status": "modified", "additions": 16, "deletions": 4, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/289b78ac0a2ee91d3872c65438f718780f294a9a/src%2Fbootstrap%2Fbin%2Frustc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/289b78ac0a2ee91d3872c65438f718780f294a9a/src%2Fbootstrap%2Fbin%2Frustc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fbin%2Frustc.rs?ref=289b78ac0a2ee91d3872c65438f718780f294a9a", "patch": "@@ -93,6 +93,21 @@ fn main() {\n              env::join_paths(&dylib_path).unwrap());\n     let mut maybe_crate = None;\n \n+    // Get the name of the crate we're compiling, if any.\n+    let maybe_crate_name = args.windows(2)\n+        .find(|a| &*a[0] == \"--crate-name\")\n+        .map(|crate_name| &*crate_name[1]);\n+\n+    if let Some(current_crate) = maybe_crate_name {\n+        if let Some(target) = env::var_os(\"RUSTC_TIME\") {\n+            if target == \"all\" ||\n+               target.into_string().unwrap().split(\",\").any(|c| c.trim() == current_crate)\n+            {\n+                cmd.arg(\"-Ztime\");\n+            }\n+        }\n+    }\n+\n     // Non-zero stages must all be treated uniformly to avoid problems when attempting to uplift\n     // compiler libraries and such from stage 1 to 2.\n     if stage == \"0\" {\n@@ -152,10 +167,7 @@ fn main() {\n             cmd.arg(format!(\"-Clinker={}\", target_linker));\n         }\n \n-        let crate_name = args.windows(2)\n-            .find(|a| &*a[0] == \"--crate-name\")\n-            .unwrap();\n-        let crate_name = &*crate_name[1];\n+        let crate_name = maybe_crate_name.unwrap();\n         maybe_crate = Some(crate_name);\n \n         // If we're compiling specifically the `panic_abort` crate then we pass"}]}