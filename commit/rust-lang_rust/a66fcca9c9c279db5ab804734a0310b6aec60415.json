{"sha": "a66fcca9c9c279db5ab804734a0310b6aec60415", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE2NmZjY2E5YzljMjc5ZGI1YWI4MDQ3MzRhMDMxMGI2YWVjNjA0MTU=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2013-12-20T03:05:11Z"}, "committer": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2013-12-26T21:01:27Z"}, "message": "librustc: De-`@mut` `destructors` in the type context", "tree": {"sha": "58a1a333073b9f65534dd4e1d8fb84496a473bbb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/58a1a333073b9f65534dd4e1d8fb84496a473bbb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a66fcca9c9c279db5ab804734a0310b6aec60415", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a66fcca9c9c279db5ab804734a0310b6aec60415", "html_url": "https://github.com/rust-lang/rust/commit/a66fcca9c9c279db5ab804734a0310b6aec60415", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a66fcca9c9c279db5ab804734a0310b6aec60415/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "daf31d2b4f35b5d125e2e354e9e9f74fe4ff52ff", "url": "https://api.github.com/repos/rust-lang/rust/commits/daf31d2b4f35b5d125e2e354e9e9f74fe4ff52ff", "html_url": "https://github.com/rust-lang/rust/commit/daf31d2b4f35b5d125e2e354e9e9f74fe4ff52ff"}], "stats": {"total": 10, "additions": 6, "deletions": 4}, "files": [{"sha": "acfe26d2817d32c1d59ba87580877089fc9fad36", "filename": "src/librustc/middle/ty.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/a66fcca9c9c279db5ab804734a0310b6aec60415/src%2Flibrustc%2Fmiddle%2Fty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a66fcca9c9c279db5ab804734a0310b6aec60415/src%2Flibrustc%2Fmiddle%2Fty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fty.rs?ref=a66fcca9c9c279db5ab804734a0310b6aec60415", "patch": "@@ -330,7 +330,7 @@ struct ctxt_ {\n     destructor_for_type: RefCell<HashMap<ast::DefId, ast::DefId>>,\n \n     // A method will be in this list if and only if it is a destructor.\n-    destructors: @mut HashSet<ast::DefId>,\n+    destructors: RefCell<HashSet<ast::DefId>>,\n \n     // Maps a trait onto a list of impls of that trait.\n     trait_impls: @mut HashMap<ast::DefId, @mut ~[@Impl]>,\n@@ -1004,7 +1004,7 @@ pub fn mk_ctxt(s: session::Session,\n         provided_method_sources: RefCell::new(HashMap::new()),\n         supertraits: RefCell::new(HashMap::new()),\n         destructor_for_type: RefCell::new(HashMap::new()),\n-        destructors: @mut HashSet::new(),\n+        destructors: RefCell::new(HashSet::new()),\n         trait_impls: @mut HashMap::new(),\n         inherent_impls:  @mut HashMap::new(),\n         impls:  @mut HashMap::new(),"}, {"sha": "524eb6282a876d1f1c14913a3c1f2249ee744e85", "filename": "src/librustc/middle/typeck/check/method.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/a66fcca9c9c279db5ab804734a0310b6aec60415/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fcheck%2Fmethod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a66fcca9c9c279db5ab804734a0310b6aec60415/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fcheck%2Fmethod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fcheck%2Fmethod.rs?ref=a66fcca9c9c279db5ab804734a0310b6aec60415", "patch": "@@ -1151,7 +1151,8 @@ impl<'a> LookupContext<'a> {\n         let bad;\n         match candidate.origin {\n             method_static(method_id) => {\n-                bad = self.tcx().destructors.contains(&method_id);\n+                let destructors = self.tcx().destructors.borrow();\n+                bad = destructors.get().contains(&method_id);\n             }\n             // XXX: does this properly enforce this on everything now\n             // that self has been merged in? -sully"}, {"sha": "aef94e2ec943f4d2563a9d448a906f3eb721f542", "filename": "src/librustc/middle/typeck/coherence.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/a66fcca9c9c279db5ab804734a0310b6aec60415/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fcoherence.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a66fcca9c9c279db5ab804734a0310b6aec60415/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fcoherence.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fcoherence.rs?ref=a66fcca9c9c279db5ab804734a0310b6aec60415", "patch": "@@ -709,7 +709,8 @@ impl CoherenceChecker {\n                                                      .borrow_mut();\n                     destructor_for_type.get().insert(type_def_id,\n                                                      method_def_id);\n-                    tcx.destructors.insert(method_def_id);\n+                    let mut destructors = tcx.destructors.borrow_mut();\n+                    destructors.get().insert(method_def_id);\n                 }\n                 _ => {\n                     // Destructors only work on nominal types."}]}