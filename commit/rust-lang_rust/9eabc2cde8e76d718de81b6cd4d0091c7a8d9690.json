{"sha": "9eabc2cde8e76d718de81b6cd4d0091c7a8d9690", "node_id": "C_kwDOAAsO6NoAKDllYWJjMmNkZThlNzZkNzE4ZGU4MWI2Y2Q0ZDAwOTFjN2E4ZDk2OTA", "commit": {"author": {"name": "unvalley", "email": "kirohi.code@gmail.com", "date": "2022-11-28T16:39:27Z"}, "committer": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2023-01-09T11:23:59Z"}, "message": "fix: add_format_like_completions to handle no exprs", "tree": {"sha": "478ce5a6b03bdd87a6ba23a5dc3d1e68f779c3d2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/478ce5a6b03bdd87a6ba23a5dc3d1e68f779c3d2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9eabc2cde8e76d718de81b6cd4d0091c7a8d9690", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9eabc2cde8e76d718de81b6cd4d0091c7a8d9690", "html_url": "https://github.com/rust-lang/rust/commit/9eabc2cde8e76d718de81b6cd4d0091c7a8d9690", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9eabc2cde8e76d718de81b6cd4d0091c7a8d9690/comments", "author": {"login": "unvalley", "id": 38400669, "node_id": "MDQ6VXNlcjM4NDAwNjY5", "avatar_url": "https://avatars.githubusercontent.com/u/38400669?v=4", "gravatar_id": "", "url": "https://api.github.com/users/unvalley", "html_url": "https://github.com/unvalley", "followers_url": "https://api.github.com/users/unvalley/followers", "following_url": "https://api.github.com/users/unvalley/following{/other_user}", "gists_url": "https://api.github.com/users/unvalley/gists{/gist_id}", "starred_url": "https://api.github.com/users/unvalley/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/unvalley/subscriptions", "organizations_url": "https://api.github.com/users/unvalley/orgs", "repos_url": "https://api.github.com/users/unvalley/repos", "events_url": "https://api.github.com/users/unvalley/events{/privacy}", "received_events_url": "https://api.github.com/users/unvalley/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a310fc0cd53ff8528ef31b5021c490fd944ab199", "url": "https://api.github.com/repos/rust-lang/rust/commits/a310fc0cd53ff8528ef31b5021c490fd944ab199", "html_url": "https://github.com/rust-lang/rust/commit/a310fc0cd53ff8528ef31b5021c490fd944ab199"}], "stats": {"total": 29, "additions": 23, "deletions": 6}, "files": [{"sha": "f4f37d77d81f37d8e4234c46280c2aed4365c408", "filename": "crates/ide-completion/src/completions/postfix.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/9eabc2cde8e76d718de81b6cd4d0091c7a8d9690/crates%2Fide-completion%2Fsrc%2Fcompletions%2Fpostfix.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9eabc2cde8e76d718de81b6cd4d0091c7a8d9690/crates%2Fide-completion%2Fsrc%2Fcompletions%2Fpostfix.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide-completion%2Fsrc%2Fcompletions%2Fpostfix.rs?ref=9eabc2cde8e76d718de81b6cd4d0091c7a8d9690", "patch": "@@ -595,12 +595,12 @@ fn main() {\n         check_edit(\n             \"format\",\n             r#\"fn main() { \"{some_var:?}\".$0 }\"#,\n-            r#\"fn main() { format!(\"{:?}\", some_var) }\"#,\n+            r#\"fn main() { format!(\"{some_var:?}\") }\"#,\n         );\n         check_edit(\n             \"panic\",\n             r#\"fn main() { \"Panic with {a}\".$0 }\"#,\n-            r#\"fn main() { panic!(\"Panic with {}\", a) }\"#,\n+            r#\"fn main() { panic!(\"Panic with {a}\") }\"#,\n         );\n         check_edit(\n             \"println\","}, {"sha": "dfcc78e92308d1679ea912610d763b029919e4f2", "filename": "crates/ide-completion/src/completions/postfix/format_like.rs", "status": "modified", "additions": 21, "deletions": 4, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/9eabc2cde8e76d718de81b6cd4d0091c7a8d9690/crates%2Fide-completion%2Fsrc%2Fcompletions%2Fpostfix%2Fformat_like.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9eabc2cde8e76d718de81b6cd4d0091c7a8d9690/crates%2Fide-completion%2Fsrc%2Fcompletions%2Fpostfix%2Fformat_like.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide-completion%2Fsrc%2Fcompletions%2Fpostfix%2Fformat_like.rs?ref=9eabc2cde8e76d718de81b6cd4d0091c7a8d9690", "patch": "@@ -54,7 +54,11 @@ pub(crate) fn add_format_like_completions(\n     if let Ok((out, exprs)) = parse_format_exprs(receiver_text.text()) {\n         let exprs = with_placeholders(exprs);\n         for (label, macro_name) in KINDS {\n-            let snippet = format!(r#\"{macro_name}({out}, {})\"#, exprs.join(\", \"));\n+            let snippet = if exprs.is_empty() {\n+                format!(r#\"{}({})\"#, macro_name, out)\n+            } else {\n+                format!(r#\"{}({}, {})\"#, macro_name, out, exprs.join(\", \"))\n+            };\n \n             postfix_snippet(label, macro_name, &snippet).add_to(acc);\n         }\n@@ -72,10 +76,9 @@ mod tests {\n             (\"eprintln!\", \"{}\", r#\"eprintln!(\"{}\", $1)\"#),\n             (\n                 \"log::info!\",\n-                \"{} {expr} {} {2 + 2}\",\n-                r#\"log::info!(\"{} {} {} {}\", $1, expr, $2, 2 + 2)\"#,\n+                \"{} {ident} {} {2 + 2}\",\n+                r#\"log::info!(\"{} {ident} {} {}\", $1, $2, 2 + 2)\"#,\n             ),\n-            (\"format!\", \"{expr:?}\", r#\"format!(\"{:?}\", expr)\"#),\n         ];\n \n         for (kind, input, output) in test_vector {\n@@ -85,4 +88,18 @@ mod tests {\n             assert_eq!(&snippet, output);\n         }\n     }\n+\n+    #[test]\n+    fn test_into_suggestion_no_epxrs() {\n+        let test_vector = &[\n+            (\"println!\", \"{ident}\", r#\"println!(\"{ident}\")\"#),\n+            (\"format!\", \"{ident:?}\", r#\"format!(\"{ident:?}\")\"#),\n+        ];\n+\n+        for (kind, input, output) in test_vector {\n+            let (parsed_string, _exprs) = parse_format_exprs(input).unwrap();\n+            let snippet = format!(r#\"{}(\"{}\")\"#, kind, parsed_string);\n+            assert_eq!(&snippet, output);\n+        }\n+    }\n }"}]}