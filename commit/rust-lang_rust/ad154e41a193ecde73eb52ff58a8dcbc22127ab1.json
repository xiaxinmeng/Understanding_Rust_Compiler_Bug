{"sha": "ad154e41a193ecde73eb52ff58a8dcbc22127ab1", "node_id": "C_kwDOAAsO6NoAKGFkMTU0ZTQxYTE5M2VjZGU3M2ViNTJmZjU4YThkY2JjMjIxMjdhYjE", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2022-09-15T06:00:11Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-09-15T06:00:11Z"}, "message": "Rollup merge of #100415 - WorksButNotTested:be8, r=wesleywiser\n\nAdd BE8 support\n\nBuilt using the following `/config.toml`\n```\nchangelog-seen = 2\n\n[llvm]\ndownload-ci-llvm = false\nskip-rebuild = true\noptimize = true\nninja = true\ntargets = \"ARM;X86\"\nclang = false\n\n[build]\ntarget = [\"x86_64-unknown-linux-gnu\", \"armeb-linux-gnueabi\"]\ndocs = false\ndocs-minification = false\ncompiler-docs = false\n[install]\nprefix = \"/home/user/x-tools/rust/\"\n\n[rust]\ndebug-logging=true\nbacktrace = true\nincremental = true\n\n[target.x86_64-unknown-linux-gnu]\n\n[dist]\n\n[target.armeb-linux-gnueabi]\ncc = \"/home/user/x-tools/armeb-linux-gnueabi/bin/armeb-linux-gnueabi-gcc\"\ncxx = \"/home/user/x-tools/armeb-linux-gnueabi/bin/armeb-linux-gnueabi-g++\"\nar = \"/home/user/x-tools/armeb-linux-gnueabi/bin/armeb-linux-gnueabi-ar\"\nranlib = \"/home/user/x-tools/armeb-linux-gnueabi/bin/armeb-linux-gnueabi-ranlib\"\nlinker = \"/home/user/x-tools/armeb-linux-gnueabi/bin/armeb-linux-gnueabi-gcc\"\nllvm-config = \"/home/user/x-tools/clang/bin/llvm-config\"\nllvm-filecheck = \"/home/user/x-tools/clang/bin/FileCheck\"\n```\n\nThe following `.cargo/config` is needed inside any project directory:\n```\n[build]\ntarget = \"armeb-linux-gnueabi\"\n\n[target.armeb-linux-gnueabi]\nlinker = \"armeb-linux-gnueabi-gcc\"\n```", "tree": {"sha": "1062a9fa9035dba2fdb7a61f7b08075351f5408e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1062a9fa9035dba2fdb7a61f7b08075351f5408e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ad154e41a193ecde73eb52ff58a8dcbc22127ab1", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJjIr9rCRBK7hj4Ov3rIwAATvYIAKXBwfuyfv6Myw6nMHxcRKZB\ndXNlQF4M2kI1jFixiXW3MPx7Q10ZvbWgbfVS3CIBZVRR+a7jcMShC6NNQzkqt2j6\n2doEFI/u6W56LgKuJFeGDA3w6ddyR5BTeMXpnH5BYqy9Ub4T2rmJVktxe1RRfuoQ\nHqnlX9YBnqUjibjfOpWHIWr0yHU1+2oe5nr7x4LG2JtQHenvC5wcXJqwuIIbveUB\nhFUQOuLoE14WTnVD3Rm6fk+FZH/kW7O8obif1+prWu1jg3eBdOvwf78Qqxug5YIr\nDODdS53wFiYLbvrNNIEVh42ZAw3AoT2FuW229RLfYKLy3t4Kc7WZaGBByh6EL8w=\n=dfti\n-----END PGP SIGNATURE-----\n", "payload": "tree 1062a9fa9035dba2fdb7a61f7b08075351f5408e\nparent c3f59295fecb9a7cb067bc4a5b50f779e159a55b\nparent 73d6dd50982ed9712f28c4cf9d5d1648c7c767df\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1663221611 +0200\ncommitter GitHub <noreply@github.com> 1663221611 +0200\n\nRollup merge of #100415 - WorksButNotTested:be8, r=wesleywiser\n\nAdd BE8 support\n\nBuilt using the following `/config.toml`\n```\nchangelog-seen = 2\n\n[llvm]\ndownload-ci-llvm = false\nskip-rebuild = true\noptimize = true\nninja = true\ntargets = \"ARM;X86\"\nclang = false\n\n[build]\ntarget = [\"x86_64-unknown-linux-gnu\", \"armeb-linux-gnueabi\"]\ndocs = false\ndocs-minification = false\ncompiler-docs = false\n[install]\nprefix = \"/home/user/x-tools/rust/\"\n\n[rust]\ndebug-logging=true\nbacktrace = true\nincremental = true\n\n[target.x86_64-unknown-linux-gnu]\n\n[dist]\n\n[target.armeb-linux-gnueabi]\ncc = \"/home/user/x-tools/armeb-linux-gnueabi/bin/armeb-linux-gnueabi-gcc\"\ncxx = \"/home/user/x-tools/armeb-linux-gnueabi/bin/armeb-linux-gnueabi-g++\"\nar = \"/home/user/x-tools/armeb-linux-gnueabi/bin/armeb-linux-gnueabi-ar\"\nranlib = \"/home/user/x-tools/armeb-linux-gnueabi/bin/armeb-linux-gnueabi-ranlib\"\nlinker = \"/home/user/x-tools/armeb-linux-gnueabi/bin/armeb-linux-gnueabi-gcc\"\nllvm-config = \"/home/user/x-tools/clang/bin/llvm-config\"\nllvm-filecheck = \"/home/user/x-tools/clang/bin/FileCheck\"\n```\n\nThe following `.cargo/config` is needed inside any project directory:\n```\n[build]\ntarget = \"armeb-linux-gnueabi\"\n\n[target.armeb-linux-gnueabi]\nlinker = \"armeb-linux-gnueabi-gcc\"\n```\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ad154e41a193ecde73eb52ff58a8dcbc22127ab1", "html_url": "https://github.com/rust-lang/rust/commit/ad154e41a193ecde73eb52ff58a8dcbc22127ab1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ad154e41a193ecde73eb52ff58a8dcbc22127ab1/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c3f59295fecb9a7cb067bc4a5b50f779e159a55b", "url": "https://api.github.com/repos/rust-lang/rust/commits/c3f59295fecb9a7cb067bc4a5b50f779e159a55b", "html_url": "https://github.com/rust-lang/rust/commit/c3f59295fecb9a7cb067bc4a5b50f779e159a55b"}, {"sha": "73d6dd50982ed9712f28c4cf9d5d1648c7c767df", "url": "https://api.github.com/repos/rust-lang/rust/commits/73d6dd50982ed9712f28c4cf9d5d1648c7c767df", "html_url": "https://github.com/rust-lang/rust/commit/73d6dd50982ed9712f28c4cf9d5d1648c7c767df"}], "stats": {"total": 96, "additions": 96, "deletions": 0}, "files": [{"sha": "4836f3cf7202b493c1827cccb19ee7f682e95f68", "filename": "compiler/rustc_target/src/spec/armeb_unknown_linux_gnueabi.rs", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/ad154e41a193ecde73eb52ff58a8dcbc22127ab1/compiler%2Frustc_target%2Fsrc%2Fspec%2Farmeb_unknown_linux_gnueabi.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ad154e41a193ecde73eb52ff58a8dcbc22127ab1/compiler%2Frustc_target%2Fsrc%2Fspec%2Farmeb_unknown_linux_gnueabi.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_target%2Fsrc%2Fspec%2Farmeb_unknown_linux_gnueabi.rs?ref=ad154e41a193ecde73eb52ff58a8dcbc22127ab1", "patch": "@@ -0,0 +1,19 @@\n+use crate::abi::Endian;\n+use crate::spec::{Target, TargetOptions};\n+\n+pub fn target() -> Target {\n+    Target {\n+        llvm_target: \"armeb-unknown-linux-gnueabi\".into(),\n+        pointer_width: 32,\n+        data_layout: \"E-m:e-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64\".into(),\n+        arch: \"arm\".into(),\n+        options: TargetOptions {\n+            abi: \"eabi\".into(),\n+            features: \"+strict-align,+v8,+crc\".into(),\n+            endian: Endian::Big,\n+            max_atomic_width: Some(64),\n+            mcount: \"\\u{1}__gnu_mcount_nc\".into(),\n+            ..super::linux_gnu_base::opts()\n+        },\n+    }\n+}"}, {"sha": "7e7f7a82e90d31311b8d78835ede9273b4a0b39a", "filename": "compiler/rustc_target/src/spec/mod.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/ad154e41a193ecde73eb52ff58a8dcbc22127ab1/compiler%2Frustc_target%2Fsrc%2Fspec%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ad154e41a193ecde73eb52ff58a8dcbc22127ab1/compiler%2Frustc_target%2Fsrc%2Fspec%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_target%2Fsrc%2Fspec%2Fmod.rs?ref=ad154e41a193ecde73eb52ff58a8dcbc22127ab1", "patch": "@@ -932,6 +932,7 @@ supported_targets! {\n     (\"sparc64-unknown-linux-gnu\", sparc64_unknown_linux_gnu),\n     (\"arm-unknown-linux-gnueabi\", arm_unknown_linux_gnueabi),\n     (\"arm-unknown-linux-gnueabihf\", arm_unknown_linux_gnueabihf),\n+    (\"armeb-unknown-linux-gnueabi\", armeb_unknown_linux_gnueabi),\n     (\"arm-unknown-linux-musleabi\", arm_unknown_linux_musleabi),\n     (\"arm-unknown-linux-musleabihf\", arm_unknown_linux_musleabihf),\n     (\"armv4t-unknown-linux-gnueabi\", armv4t_unknown_linux_gnueabi),"}, {"sha": "d9d430c2046728cc610f47cd9107f94795160dfe", "filename": "src/doc/rustc/src/SUMMARY.md", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/ad154e41a193ecde73eb52ff58a8dcbc22127ab1/src%2Fdoc%2Frustc%2Fsrc%2FSUMMARY.md", "raw_url": "https://github.com/rust-lang/rust/raw/ad154e41a193ecde73eb52ff58a8dcbc22127ab1/src%2Fdoc%2Frustc%2Fsrc%2FSUMMARY.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Frustc%2Fsrc%2FSUMMARY.md?ref=ad154e41a193ecde73eb52ff58a8dcbc22127ab1", "patch": "@@ -18,6 +18,7 @@\n     - [aarch64-apple-ios-sim](platform-support/aarch64-apple-ios-sim.md)\n     - [\\*-apple-watchos\\*](platform-support/apple-watchos.md)\n     - [aarch64-nintendo-switch-freestanding](platform-support/aarch64-nintendo-switch-freestanding.md)\n+    - [armeb-unknown-linux-gnueabi](platform-support/armeb-unknown-linux-gnueabi.md)\n     - [armv4t-none-eabi](platform-support/armv4t-none-eabi.md)\n     - [armv6k-nintendo-3ds](platform-support/armv6k-nintendo-3ds.md)\n     - [armv7-unknown-linux-uclibceabi](platform-support/armv7-unknown-linux-uclibceabi.md)"}, {"sha": "3a6963ebc87d12d01820db3659397c2ae3027f4a", "filename": "src/doc/rustc/src/platform-support.md", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/ad154e41a193ecde73eb52ff58a8dcbc22127ab1/src%2Fdoc%2Frustc%2Fsrc%2Fplatform-support.md", "raw_url": "https://github.com/rust-lang/rust/raw/ad154e41a193ecde73eb52ff58a8dcbc22127ab1/src%2Fdoc%2Frustc%2Fsrc%2Fplatform-support.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Frustc%2Fsrc%2Fplatform-support.md?ref=ad154e41a193ecde73eb52ff58a8dcbc22127ab1", "patch": "@@ -223,6 +223,7 @@ target | std | host | notes\n `aarch64_be-unknown-linux-gnu_ilp32` | \u2713 | \u2713 | ARM64 Linux (big-endian, ILP32 ABI)\n `aarch64_be-unknown-linux-gnu` | \u2713 | \u2713 | ARM64 Linux (big-endian)\n [`arm64_32-apple-watchos`](platform-support/apple-watchos.md) | \u2713 | | ARM Apple WatchOS 64-bit with 32-bit pointers\n+[`armeb-unknown-linux-gnueabi`](platform-support/armeb-unknown-linux-gnueabi.md) | \u2713 | ? | ARM BE8 the default ARM big-endian architecture since [ARMv6](https://developer.arm.com/documentation/101754/0616/armlink-Reference/armlink-Command-line-Options/--be8?lang=en).\n `armv4t-none-eabi` | * |  | ARMv4T A32\n `armv4t-unknown-linux-gnueabi` | ? |  |\n `armv5te-unknown-linux-uclibceabi` | ? |  | ARMv5TE Linux with uClibc"}, {"sha": "507631cdc540aa8fb24f418e8f9a8bcfa9b34535", "filename": "src/doc/rustc/src/platform-support/armeb-unknown-linux-gnueabi.md", "status": "added", "additions": 74, "deletions": 0, "changes": 74, "blob_url": "https://github.com/rust-lang/rust/blob/ad154e41a193ecde73eb52ff58a8dcbc22127ab1/src%2Fdoc%2Frustc%2Fsrc%2Fplatform-support%2Farmeb-unknown-linux-gnueabi.md", "raw_url": "https://github.com/rust-lang/rust/raw/ad154e41a193ecde73eb52ff58a8dcbc22127ab1/src%2Fdoc%2Frustc%2Fsrc%2Fplatform-support%2Farmeb-unknown-linux-gnueabi.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Frustc%2Fsrc%2Fplatform-support%2Farmeb-unknown-linux-gnueabi.md?ref=ad154e41a193ecde73eb52ff58a8dcbc22127ab1", "patch": "@@ -0,0 +1,74 @@\n+# armeb-unknown-linux-gnueabi\n+**Tier: 3**\n+\n+Target for cross-compiling Linux user-mode applications targetting the ARM BE8 architecture.\n+\n+## Overview\n+BE8 architecture retains the same little-endian ordered code-stream used by conventional little endian ARM systems, however the data accesses are in big-endian. BE8 is used primarily in high-performance networking applications where the ability to read packets in their native \"Network Byte Order\" is important (many network protocols transmit data in big-endian byte order for their wire formats).\n+\n+## History\n+BE8 architecture is the default big-endian architecture for ARM since [ARMv6](https://developer.arm.com/documentation/101754/0616/armlink-Reference/armlink-Command-line-Options/--be8?lang=en). It's predecessor, used for ARMv4 and ARMv5 devices was [BE32](https://developer.arm.com/documentation/dui0474/j/linker-command-line-options/--be32). On ARMv6 architecture, endianness can be configured via [system registers](https://developer.arm.com/documentation/ddi0290/g/unaligned-and-mixed-endian-data-access-support/mixed-endian-access-support/interaction-between-the-bus-protocol-and-the-core-endianness). However, BE32 was withdrawn for [ARMv7](https://developer.arm.com/documentation/ddi0406/cb/Appendixes/Deprecated-and-Obsolete-Features/Obsolete-features/Support-for-BE-32-endianness-model) onwards.\n+\n+## Target Maintainers\n+* [@WorksButNotTested](https://github.com/WorksButNotTested)\n+\n+## Requirements\n+The target is cross-compiled. This target supports `std` in the normal way (indeed only nominal changes are required from the standard ARM configuration).\n+\n+## Target definition\n+The target definition can be seen [here](https://github.com/rust-lang/rust/tree/master/compiler/rustc_target/src/spec/armeb_unknown_linux_gnueabi.rs). In particular, it should be noted that the `features` specify that this target is built for the ARMv8 core. Though this can likely be modified as required.\n+\n+## Building the target\n+Because it is Tier 3, rust does not yet ship pre-compiled artifacts for this target.\n+\n+Therefore, you can build Rust with support for the target by adding it to the target list in config.toml, a sample configuration is shown below. It is expected that the user already have a working GNU compiler toolchain and update the paths accordingly.\n+\n+```toml\n+[llvm]\n+download-ci-llvm = false\n+skip-rebuild = true\n+optimize = true\n+ninja = true\n+targets = \"ARM;X86\"\n+clang = false\n+\n+[build]\n+target = [\"x86_64-unknown-linux-gnu\", \"armeb-unknown-linux-gnueabi\"]\n+docs = false\n+docs-minification = false\n+compiler-docs = false\n+[install]\n+prefix = \"/home/user/x-tools/rust/\"\n+\n+[rust]\n+debug-logging=true\n+backtrace = true\n+incremental = true\n+\n+[target.x86_64-unknown-linux-gnu]\n+\n+[dist]\n+\n+[target.armeb-unknown-linux-gnueabi]\n+cc = \"/home/user/x-tools/armeb-unknown-linux-gnueabi/bin/armeb-unknown-linux-gnueabi-gcc\"\n+cxx = \"/home/user/x-tools/armeb-unknown-linux-gnueabi/bin/armeb-unknown-linux-gnueabi-g++\"\n+ar = \"/home/user/x-tools/armeb-unknown-linux-gnueabi/bin/armeb-unknown-linux-gnueabi-ar\"\n+ranlib = \"/home/user/x-tools/armeb-unknown-linux-gnueabi/bin/armeb-unknown-linux-gnueabi-ranlib\"\n+linker = \"/home/user/x-tools/armeb-unknown-linux-gnueabi/bin/armeb-unknown-linux-gnueabi-gcc\"\n+llvm-config = \"/home/user/x-tools/clang/bin/llvm-config\"\n+llvm-filecheck = \"/home/user/x-tools/clang/bin/FileCheck\"\n+```\n+\n+## Building Rust programs\n+\n+The following `.cargo/config` is needed inside any project directory to build for the BE8 target:\n+\n+```toml\n+[build]\n+target = \"armeb-unknown-linux-gnueabi\"\n+\n+[target.armeb-unknown-linux-gnueabi]\n+linker = \"armeb-unknown-linux-gnueabi-gcc\"\n+```\n+\n+Note that it is expected that the user has a suitable linker from the GNU toolchain."}]}