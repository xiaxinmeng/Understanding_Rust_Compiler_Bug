{"sha": "21030f1fc9510d9808c0f8352ea8a5eeacfa4ca5", "node_id": "MDY6Q29tbWl0NzI0NzEyOjIxMDMwZjFmYzk1MTBkOTgwOGMwZjgzNTJlYThhNWVlYWNmYTRjYTU=", "commit": {"author": {"name": "Ed Clarke", "email": "webmobster@gmail.com", "date": "2015-12-16T20:28:54Z"}, "committer": {"name": "Ed Clarke", "email": "webmobster@gmail.com", "date": "2015-12-17T18:40:49Z"}, "message": "Add a debug implementation to process::Output", "tree": {"sha": "533c83e15b0e333c4d2b49deec5d2b299be230d6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/533c83e15b0e333c4d2b49deec5d2b299be230d6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/21030f1fc9510d9808c0f8352ea8a5eeacfa4ca5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/21030f1fc9510d9808c0f8352ea8a5eeacfa4ca5", "html_url": "https://github.com/rust-lang/rust/commit/21030f1fc9510d9808c0f8352ea8a5eeacfa4ca5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/21030f1fc9510d9808c0f8352ea8a5eeacfa4ca5/comments", "author": {"login": "webmobster", "id": 107217190, "node_id": "U_kgDOBmQBJg", "avatar_url": "https://avatars.githubusercontent.com/u/107217190?v=4", "gravatar_id": "", "url": "https://api.github.com/users/webmobster", "html_url": "https://github.com/webmobster", "followers_url": "https://api.github.com/users/webmobster/followers", "following_url": "https://api.github.com/users/webmobster/following{/other_user}", "gists_url": "https://api.github.com/users/webmobster/gists{/gist_id}", "starred_url": "https://api.github.com/users/webmobster/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/webmobster/subscriptions", "organizations_url": "https://api.github.com/users/webmobster/orgs", "repos_url": "https://api.github.com/users/webmobster/repos", "events_url": "https://api.github.com/users/webmobster/events{/privacy}", "received_events_url": "https://api.github.com/users/webmobster/received_events", "type": "User", "site_admin": false}, "committer": {"login": "webmobster", "id": 107217190, "node_id": "U_kgDOBmQBJg", "avatar_url": "https://avatars.githubusercontent.com/u/107217190?v=4", "gravatar_id": "", "url": "https://api.github.com/users/webmobster", "html_url": "https://github.com/webmobster", "followers_url": "https://api.github.com/users/webmobster/followers", "following_url": "https://api.github.com/users/webmobster/following{/other_user}", "gists_url": "https://api.github.com/users/webmobster/gists{/gist_id}", "starred_url": "https://api.github.com/users/webmobster/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/webmobster/subscriptions", "organizations_url": "https://api.github.com/users/webmobster/orgs", "repos_url": "https://api.github.com/users/webmobster/repos", "events_url": "https://api.github.com/users/webmobster/events{/privacy}", "received_events_url": "https://api.github.com/users/webmobster/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d4ffaf6f836e6ff8260548041bd1dc9d8bd146f9", "url": "https://api.github.com/repos/rust-lang/rust/commits/d4ffaf6f836e6ff8260548041bd1dc9d8bd146f9", "html_url": "https://github.com/rust-lang/rust/commit/d4ffaf6f836e6ff8260548041bd1dc9d8bd146f9"}], "stats": {"total": 27, "additions": 27, "deletions": 0}, "files": [{"sha": "be1fe9b2a9bd7d27344379acf6638be59cbf88b3", "filename": "src/libstd/process.rs", "status": "modified", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/21030f1fc9510d9808c0f8352ea8a5eeacfa4ca5/src%2Flibstd%2Fprocess.rs", "raw_url": "https://github.com/rust-lang/rust/raw/21030f1fc9510d9808c0f8352ea8a5eeacfa4ca5/src%2Flibstd%2Fprocess.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fprocess.rs?ref=21030f1fc9510d9808c0f8352ea8a5eeacfa4ca5", "patch": "@@ -20,6 +20,7 @@ use ffi::OsStr;\n use fmt;\n use io::{self, Error, ErrorKind};\n use path;\n+use str;\n use sys::pipe::{self, AnonPipe};\n use sys::process as imp;\n use sys_common::{AsInner, AsInnerMut, FromInner, IntoInner};\n@@ -400,6 +401,32 @@ pub struct Output {\n     pub stderr: Vec<u8>,\n }\n \n+// If either stderr or stdout are valid utf8 strings it prints the valid\n+// strings, otherwise it prints the byte sequence instead\n+#[stable(feature = \"process_output_debug\", since = \"1.7.0\")]\n+impl fmt::Debug for Output {\n+    fn fmt(&self, fmt: &mut fmt::Formatter) -> fmt::Result {\n+\n+        let stdout_utf8 = str::from_utf8(&self.stdout);\n+        let stdout_debug: &fmt::Debug = match stdout_utf8 {\n+            Ok(ref str) => str,\n+            Err(_) => &self.stdout\n+        };\n+\n+        let stderr_utf8 = str::from_utf8(&self.stderr);\n+        let stderr_debug: &fmt::Debug = match stderr_utf8 {\n+            Ok(ref str) => str,\n+            Err(_) => &self.stderr\n+        };\n+\n+        fmt.debug_struct(\"Output\")\n+            .field(\"status\", &self.status)\n+            .field(\"stdout\", stdout_debug)\n+            .field(\"stderr\", stderr_debug)\n+            .finish()\n+    }\n+}\n+\n /// Describes what to do with a standard I/O stream for a child process.\n #[stable(feature = \"process\", since = \"1.0.0\")]\n pub struct Stdio(StdioImp);"}]}