{"sha": "365d1236890469cff1a55a28eeb9befaf516d552", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM2NWQxMjM2ODkwNDY5Y2ZmMWE1NWEyOGVlYjliZWZhZjUxNmQ1NTI=", "commit": {"author": {"name": "Dylan MacKenzie", "email": "ecstaticmorse@gmail.com", "date": "2019-09-18T17:27:31Z"}, "committer": {"name": "Dylan MacKenzie", "email": "ecstaticmorse@gmail.com", "date": "2019-11-21T22:19:59Z"}, "message": "Add feature gate for const `if` and `match`", "tree": {"sha": "e0c3fcba96bddd1d722b25db1a2338d9517984c1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e0c3fcba96bddd1d722b25db1a2338d9517984c1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/365d1236890469cff1a55a28eeb9befaf516d552", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/365d1236890469cff1a55a28eeb9befaf516d552", "html_url": "https://github.com/rust-lang/rust/commit/365d1236890469cff1a55a28eeb9befaf516d552", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/365d1236890469cff1a55a28eeb9befaf516d552/comments", "author": {"login": "ecstatic-morse", "id": 29463364, "node_id": "MDQ6VXNlcjI5NDYzMzY0", "avatar_url": "https://avatars.githubusercontent.com/u/29463364?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ecstatic-morse", "html_url": "https://github.com/ecstatic-morse", "followers_url": "https://api.github.com/users/ecstatic-morse/followers", "following_url": "https://api.github.com/users/ecstatic-morse/following{/other_user}", "gists_url": "https://api.github.com/users/ecstatic-morse/gists{/gist_id}", "starred_url": "https://api.github.com/users/ecstatic-morse/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ecstatic-morse/subscriptions", "organizations_url": "https://api.github.com/users/ecstatic-morse/orgs", "repos_url": "https://api.github.com/users/ecstatic-morse/repos", "events_url": "https://api.github.com/users/ecstatic-morse/events{/privacy}", "received_events_url": "https://api.github.com/users/ecstatic-morse/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ecstatic-morse", "id": 29463364, "node_id": "MDQ6VXNlcjI5NDYzMzY0", "avatar_url": "https://avatars.githubusercontent.com/u/29463364?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ecstatic-morse", "html_url": "https://github.com/ecstatic-morse", "followers_url": "https://api.github.com/users/ecstatic-morse/followers", "following_url": "https://api.github.com/users/ecstatic-morse/following{/other_user}", "gists_url": "https://api.github.com/users/ecstatic-morse/gists{/gist_id}", "starred_url": "https://api.github.com/users/ecstatic-morse/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ecstatic-morse/subscriptions", "organizations_url": "https://api.github.com/users/ecstatic-morse/orgs", "repos_url": "https://api.github.com/users/ecstatic-morse/repos", "events_url": "https://api.github.com/users/ecstatic-morse/events{/privacy}", "received_events_url": "https://api.github.com/users/ecstatic-morse/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c537f229009bcec23ac89132fd6f571acbc23c38", "url": "https://api.github.com/repos/rust-lang/rust/commits/c537f229009bcec23ac89132fd6f571acbc23c38", "html_url": "https://github.com/rust-lang/rust/commit/c537f229009bcec23ac89132fd6f571acbc23c38"}], "stats": {"total": 23, "additions": 20, "deletions": 3}, "files": [{"sha": "950f48f03cd97068dea11fa18c3c949aeebf0b00", "filename": "src/librustc_mir/transform/check_consts/ops.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/365d1236890469cff1a55a28eeb9befaf516d552/src%2Flibrustc_mir%2Ftransform%2Fcheck_consts%2Fops.rs", "raw_url": "https://github.com/rust-lang/rust/raw/365d1236890469cff1a55a28eeb9befaf516d552/src%2Flibrustc_mir%2Ftransform%2Fcheck_consts%2Fops.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Fcheck_consts%2Fops.rs?ref=365d1236890469cff1a55a28eeb9befaf516d552", "patch": "@@ -139,6 +139,10 @@ impl NonConstOp for HeapAllocation {\n #[derive(Debug)]\n pub struct IfOrMatch;\n impl NonConstOp for IfOrMatch {\n+    fn feature_gate(tcx: TyCtxt<'_>) -> Option<bool> {\n+        Some(tcx.features().const_if_match)\n+    }\n+\n     fn emit_error(&self, item: &Item<'_, '_>, span: Span) {\n         // This should be caught by the HIR const-checker.\n         item.tcx.sess.delay_span_bug("}, {"sha": "cb6f94adbf08cb7a5154eec490f260d5bc25069d", "filename": "src/librustc_mir/transform/qualify_min_const_fn.rs", "status": "modified", "additions": 11, "deletions": 2, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/365d1236890469cff1a55a28eeb9befaf516d552/src%2Flibrustc_mir%2Ftransform%2Fqualify_min_const_fn.rs", "raw_url": "https://github.com/rust-lang/rust/raw/365d1236890469cff1a55a28eeb9befaf516d552/src%2Flibrustc_mir%2Ftransform%2Fqualify_min_const_fn.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Fqualify_min_const_fn.rs?ref=365d1236890469cff1a55a28eeb9befaf516d552", "patch": "@@ -216,7 +216,9 @@ fn check_statement(\n             check_rvalue(tcx, body, def_id, rval, span)\n         }\n \n-        StatementKind::FakeRead(FakeReadCause::ForMatchedPlace, _) => {\n+        | StatementKind::FakeRead(FakeReadCause::ForMatchedPlace, _)\n+        if !tcx.features().const_if_match\n+        => {\n             Err((span, \"loops and conditional expressions are not stable in const fn\".into()))\n         }\n \n@@ -324,10 +326,17 @@ fn check_terminator(\n             check_operand(tcx, value, span, def_id, body)\n         },\n \n-        TerminatorKind::FalseEdges { .. } | TerminatorKind::SwitchInt { .. } => Err((\n+        | TerminatorKind::FalseEdges { .. }\n+        | TerminatorKind::SwitchInt { .. }\n+        if !tcx.features().const_if_match\n+        => Err((\n             span,\n             \"loops and conditional expressions are not stable in const fn\".into(),\n         )),\n+        | TerminatorKind::FalseEdges { .. }\n+        | TerminatorKind::SwitchInt { .. }\n+        => Ok(()),\n+\n         | TerminatorKind::Abort | TerminatorKind::Unreachable => {\n             Err((span, \"const fn with unreachable code is not stable\".into()))\n         }"}, {"sha": "9870a78bd447205db50123599a97fa4b210344bf", "filename": "src/librustc_passes/check_const.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/365d1236890469cff1a55a28eeb9befaf516d552/src%2Flibrustc_passes%2Fcheck_const.rs", "raw_url": "https://github.com/rust-lang/rust/raw/365d1236890469cff1a55a28eeb9befaf516d552/src%2Flibrustc_passes%2Fcheck_const.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_passes%2Fcheck_const.rs?ref=365d1236890469cff1a55a28eeb9befaf516d552", "patch": "@@ -135,7 +135,7 @@ impl<'tcx> Visitor<'tcx> for CheckConstVisitor<'tcx> {\n                 self.const_check_violated(source.name(), e.span);\n             }\n \n-            hir::ExprKind::Match(_, _, source) => {\n+            hir::ExprKind::Match(_, _, source) if !self.tcx.features().const_if_match => {\n                 use hir::MatchSource::*;\n \n                 let op = match source {"}, {"sha": "fa0ab90c702b9621b5c50c640ccc5ff3b7742bbf", "filename": "src/libsyntax/feature_gate/active.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/365d1236890469cff1a55a28eeb9befaf516d552/src%2Flibsyntax%2Ffeature_gate%2Factive.rs", "raw_url": "https://github.com/rust-lang/rust/raw/365d1236890469cff1a55a28eeb9befaf516d552/src%2Flibsyntax%2Ffeature_gate%2Factive.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Ffeature_gate%2Factive.rs?ref=365d1236890469cff1a55a28eeb9befaf516d552", "patch": "@@ -529,6 +529,9 @@ declare_features! (\n     /// Allows using the `#[register_attr]` attribute.\n     (active, register_tool, \"1.41.0\", Some(66079), None),\n \n+    /// Allows the use of `if` and `match` in constants.\n+    (active, const_if_match, \"1.41.0\", Some(49146), None),\n+\n     // -------------------------------------------------------------------------\n     // feature-group-end: actual feature gates\n     // -------------------------------------------------------------------------"}, {"sha": "e7238caca8e4b685277932d2d62730767fc429f9", "filename": "src/libsyntax_pos/symbol.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/365d1236890469cff1a55a28eeb9befaf516d552/src%2Flibsyntax_pos%2Fsymbol.rs", "raw_url": "https://github.com/rust-lang/rust/raw/365d1236890469cff1a55a28eeb9befaf516d552/src%2Flibsyntax_pos%2Fsymbol.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax_pos%2Fsymbol.rs?ref=365d1236890469cff1a55a28eeb9befaf516d552", "patch": "@@ -202,6 +202,7 @@ symbols! {\n         const_fn,\n         const_fn_union,\n         const_generics,\n+        const_if_match,\n         const_indexing,\n         const_in_array_repeat_expressions,\n         const_let,"}]}