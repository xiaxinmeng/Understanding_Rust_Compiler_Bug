{"sha": "c1a53a60e775b3eefd315ed240db6a7589266920", "node_id": "MDY6Q29tbWl0NzI0NzEyOmMxYTUzYTYwZTc3NWIzZWVmZDMxNWVkMjQwZGI2YTc1ODkyNjY5MjA=", "commit": {"author": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2016-03-23T08:24:42Z"}, "committer": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2016-03-23T20:42:54Z"}, "message": "Address nit: doc-comments on fields", "tree": {"sha": "1bb47ea8d77b99f380f1ca73d1a03a5a0a4315b6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1bb47ea8d77b99f380f1ca73d1a03a5a0a4315b6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c1a53a60e775b3eefd315ed240db6a7589266920", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c1a53a60e775b3eefd315ed240db6a7589266920", "html_url": "https://github.com/rust-lang/rust/commit/c1a53a60e775b3eefd315ed240db6a7589266920", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c1a53a60e775b3eefd315ed240db6a7589266920/comments", "author": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a2bab6f3e1f8b830b311e30a5a154a351a29e001", "url": "https://api.github.com/repos/rust-lang/rust/commits/a2bab6f3e1f8b830b311e30a5a154a351a29e001", "html_url": "https://github.com/rust-lang/rust/commit/a2bab6f3e1f8b830b311e30a5a154a351a29e001"}], "stats": {"total": 36, "additions": 22, "deletions": 14}, "files": [{"sha": "bfc1028afbe6dc3231653cd038d187affe71c35d", "filename": "src/librustc_mir/build/scope.rs", "status": "modified", "additions": 22, "deletions": 14, "changes": 36, "blob_url": "https://github.com/rust-lang/rust/blob/c1a53a60e775b3eefd315ed240db6a7589266920/src%2Flibrustc_mir%2Fbuild%2Fscope.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c1a53a60e775b3eefd315ed240db6a7589266920/src%2Flibrustc_mir%2Fbuild%2Fscope.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fbuild%2Fscope.rs?ref=c1a53a60e775b3eefd315ed240db6a7589266920", "patch": "@@ -98,20 +98,24 @@ use rustc::middle::const_eval::ConstVal;\n use rustc_const_eval::ConstInt;\n \n pub struct Scope<'tcx> {\n-    // the scope-id within the scope_data_vec\n+    /// the scope-id within the scope_data_vec\n     id: ScopeId,\n     extent: CodeExtent,\n     drops: Vec<DropData<'tcx>>,\n \n-    // A scope may only have one associated free, because:\n-    // 1. We require a `free` to only be scheduled in the scope of `EXPR` in `box EXPR`;\n-    // 2. It only makes sense to have it translated into the diverge-path.\n-    //\n-    // This kind of drop will be run *after* all the regular drops scheduled onto this scope,\n-    // because drops may have dependencies on the allocated memory.\n-    //\n-    // This is expected to go away once `box EXPR` becomes a sugar for placement protocol and gets\n-    // desugared in some earlier stage.\n+    /// A scope may only have one associated free, because:\n+    ///\n+    /// 1. We require a `free` to only be scheduled in the scope of\n+    ///    `EXPR` in `box EXPR`;\n+    /// 2. It only makes sense to have it translated into the diverge-path.\n+    ///\n+    /// This kind of drop will be run *after* all the regular drops\n+    /// scheduled onto this scope, because drops may have dependencies\n+    /// on the allocated memory.\n+    ///\n+    /// This is expected to go away once `box EXPR` becomes a sugar\n+    /// for placement protocol and gets desugared in some earlier\n+    /// stage.\n     free: Option<FreeData<'tcx>>,\n \n     /// The cached block for the cleanups-on-diverge path. This block\n@@ -123,17 +127,21 @@ pub struct Scope<'tcx> {\n }\n \n struct DropData<'tcx> {\n+    /// span where drop obligation was incurred (typically where lvalue was declared)\n     span: Span,\n+\n+    /// lvalue to drop\n     value: Lvalue<'tcx>,\n-    // NB: per-drop \u201ccache\u201d is necessary for the build_scope_drops function below.\n \n-    /// The cached block for the cleanups-on-diverge path. This block contains code to run the\n-    /// current drop and all the preceding drops (i.e. those having lower index in Drop\u2019s\n-    /// Scope drop array)\n+    /// The cached block for the cleanups-on-diverge path. This block\n+    /// contains code to run the current drop and all the preceding\n+    /// drops (i.e. those having lower index in Drop\u2019s Scope drop\n+    /// array)\n     cached_block: Option<BasicBlock>\n }\n \n struct FreeData<'tcx> {\n+    /// span where free obligation was incurred\n     span: Span,\n \n     /// Lvalue containing the allocated box."}]}