{"sha": "18b63865ce35901d9beaf7ea94f4b1408defd7ad", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE4YjYzODY1Y2UzNTkwMWQ5YmVhZjdlYTk0ZjRiMTQwOGRlZmQ3YWQ=", "commit": {"author": {"name": "Rafael \u00c1vila de Esp\u00edndola", "email": "respindola@mozilla.com", "date": "2011-06-03T18:34:19Z"}, "committer": {"name": "Rafael \u00c1vila de Esp\u00edndola", "email": "respindola@mozilla.com", "date": "2011-06-03T18:34:19Z"}, "message": "Accept *foo as a pointer to foo.\nThis is accepted everywhere, since just passing a pointer is safe.", "tree": {"sha": "c9f64405900c31e7a897061920fd14b700b5fb2c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c9f64405900c31e7a897061920fd14b700b5fb2c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/18b63865ce35901d9beaf7ea94f4b1408defd7ad", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/18b63865ce35901d9beaf7ea94f4b1408defd7ad", "html_url": "https://github.com/rust-lang/rust/commit/18b63865ce35901d9beaf7ea94f4b1408defd7ad", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/18b63865ce35901d9beaf7ea94f4b1408defd7ad/comments", "author": null, "committer": null, "parents": [{"sha": "07667d29aa24ef0189d3a340219f32bbbb1c9dee", "url": "https://api.github.com/repos/rust-lang/rust/commits/07667d29aa24ef0189d3a340219f32bbbb1c9dee", "html_url": "https://github.com/rust-lang/rust/commit/07667d29aa24ef0189d3a340219f32bbbb1c9dee"}], "stats": {"total": 12, "additions": 12, "deletions": 0}, "files": [{"sha": "85e525e88233cbb2cf61b6771c62b66cd3af10d9", "filename": "src/comp/front/ast.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/18b63865ce35901d9beaf7ea94f4b1408defd7ad/src%2Fcomp%2Ffront%2Fast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/18b63865ce35901d9beaf7ea94f4b1408defd7ad/src%2Fcomp%2Ffront%2Fast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Ffront%2Fast.rs?ref=18b63865ce35901d9beaf7ea94f4b1408defd7ad", "patch": "@@ -323,6 +323,7 @@ tag ty_ {\n     ty_str;\n     ty_box(mt);\n     ty_vec(mt);\n+    ty_ptr(mt);\n     ty_task;\n     ty_port(@ty);\n     ty_chan(@ty);"}, {"sha": "d7fecee6ca4243879c27d49b32962f5388fe2d32", "filename": "src/comp/front/parser.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/18b63865ce35901d9beaf7ea94f4b1408defd7ad/src%2Fcomp%2Ffront%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/18b63865ce35901d9beaf7ea94f4b1408defd7ad/src%2Fcomp%2Ffront%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Ffront%2Fparser.rs?ref=18b63865ce35901d9beaf7ea94f4b1408defd7ad", "patch": "@@ -511,6 +511,11 @@ fn parse_ty(&parser p) -> @ast::ty {\n         auto mt = parse_mt(p);\n         hi = mt.ty.span.hi;\n         t = ast::ty_box(mt);\n+    } else if (p.peek() == token::BINOP(token::STAR)) {\n+        p.bump();\n+        auto mt = parse_mt(p);\n+        hi = mt.ty.span.hi;\n+        t = ast::ty_ptr(mt);\n     } else if (eat_word(p, \"vec\")) {\n         expect(p, token::LBRACKET);\n         t = ast::ty_vec(parse_mt(p));"}, {"sha": "8ccbba9218de724b4688062077521ce147393d99", "filename": "src/test/run-pass/type-ptr.rs", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/18b63865ce35901d9beaf7ea94f4b1408defd7ad/src%2Ftest%2Frun-pass%2Ftype-ptr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/18b63865ce35901d9beaf7ea94f4b1408defd7ad/src%2Ftest%2Frun-pass%2Ftype-ptr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ftype-ptr.rs?ref=18b63865ce35901d9beaf7ea94f4b1408defd7ad", "patch": "@@ -0,0 +1,6 @@\n+fn f(*int a) {\n+}\n+\n+fn main(vec[str] args) {\n+  ret;\n+}"}]}