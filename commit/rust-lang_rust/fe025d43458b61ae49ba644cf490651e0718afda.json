{"sha": "fe025d43458b61ae49ba644cf490651e0718afda", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZlMDI1ZDQzNDU4YjYxYWU0OWJhNjQ0Y2Y0OTA2NTFlMDcxOGFmZGE=", "commit": {"author": {"name": "Michael Woerister", "email": "michaelwoerister@posteo.net", "date": "2017-01-16T22:54:20Z"}, "committer": {"name": "Michael Woerister", "email": "michaelwoerister@posteo.net", "date": "2017-01-16T22:54:20Z"}, "message": "incr.comp.: Delete orphaned work-products.", "tree": {"sha": "320f78e61ab4b4a6b11ed91acc12cf9266e6b051", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/320f78e61ab4b4a6b11ed91acc12cf9266e6b051"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fe025d43458b61ae49ba644cf490651e0718afda", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fe025d43458b61ae49ba644cf490651e0718afda", "html_url": "https://github.com/rust-lang/rust/commit/fe025d43458b61ae49ba644cf490651e0718afda", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fe025d43458b61ae49ba644cf490651e0718afda/comments", "author": {"login": "michaelwoerister", "id": 1825894, "node_id": "MDQ6VXNlcjE4MjU4OTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1825894?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelwoerister", "html_url": "https://github.com/michaelwoerister", "followers_url": "https://api.github.com/users/michaelwoerister/followers", "following_url": "https://api.github.com/users/michaelwoerister/following{/other_user}", "gists_url": "https://api.github.com/users/michaelwoerister/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelwoerister/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelwoerister/subscriptions", "organizations_url": "https://api.github.com/users/michaelwoerister/orgs", "repos_url": "https://api.github.com/users/michaelwoerister/repos", "events_url": "https://api.github.com/users/michaelwoerister/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelwoerister/received_events", "type": "User", "site_admin": false}, "committer": {"login": "michaelwoerister", "id": 1825894, "node_id": "MDQ6VXNlcjE4MjU4OTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1825894?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelwoerister", "html_url": "https://github.com/michaelwoerister", "followers_url": "https://api.github.com/users/michaelwoerister/followers", "following_url": "https://api.github.com/users/michaelwoerister/following{/other_user}", "gists_url": "https://api.github.com/users/michaelwoerister/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelwoerister/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelwoerister/subscriptions", "organizations_url": "https://api.github.com/users/michaelwoerister/orgs", "repos_url": "https://api.github.com/users/michaelwoerister/repos", "events_url": "https://api.github.com/users/michaelwoerister/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelwoerister/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "45b273af4a48e9625749286049326abe4fce064c", "url": "https://api.github.com/repos/rust-lang/rust/commits/45b273af4a48e9625749286049326abe4fce064c", "html_url": "https://github.com/rust-lang/rust/commit/45b273af4a48e9625749286049326abe4fce064c"}], "stats": {"total": 63, "additions": 51, "deletions": 12}, "files": [{"sha": "e6736ccafbad9271d7f799f4ac6f0d1853918d47", "filename": "src/librustc/dep_graph/graph.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/fe025d43458b61ae49ba644cf490651e0718afda/src%2Flibrustc%2Fdep_graph%2Fgraph.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fe025d43458b61ae49ba644cf490651e0718afda/src%2Flibrustc%2Fdep_graph%2Fgraph.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fdep_graph%2Fgraph.rs?ref=fe025d43458b61ae49ba644cf490651e0718afda", "patch": "@@ -126,6 +126,12 @@ impl DepGraph {\n     pub fn work_products(&self) -> Ref<FxHashMap<Arc<WorkProductId>, WorkProduct>> {\n         self.data.work_products.borrow()\n     }\n+\n+    /// Access the map of work-products created during the cached run. Only\n+    /// used during saving of the dep-graph.\n+    pub fn previous_work_products(&self) -> Ref<FxHashMap<Arc<WorkProductId>, WorkProduct>> {\n+        self.data.previous_work_products.borrow()\n+    }\n }\n \n /// A \"work product\" is an intermediate result that we save into the"}, {"sha": "e96d59774191d6acf23dbac5a101595fb4937edd", "filename": "src/librustc_incremental/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/fe025d43458b61ae49ba644cf490651e0718afda/src%2Flibrustc_incremental%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fe025d43458b61ae49ba644cf490651e0718afda/src%2Flibrustc_incremental%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_incremental%2Flib.rs?ref=fe025d43458b61ae49ba644cf490651e0718afda", "patch": "@@ -57,3 +57,4 @@ pub use persist::save_trans_partition;\n pub use persist::save_work_products;\n pub use persist::in_incr_comp_dir;\n pub use persist::finalize_session_directory;\n+pub use persist::delete_workproduct_files;"}, {"sha": "433110a2a6de04d58d582dbe5f28af2964c53f36", "filename": "src/librustc_incremental/persist/load.rs", "status": "modified", "additions": 2, "deletions": 12, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/fe025d43458b61ae49ba644cf490651e0718afda/src%2Flibrustc_incremental%2Fpersist%2Fload.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fe025d43458b61ae49ba644cf490651e0718afda/src%2Flibrustc_incremental%2Fpersist%2Fload.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_incremental%2Fpersist%2Fload.rs?ref=fe025d43458b61ae49ba644cf490651e0718afda", "patch": "@@ -18,7 +18,6 @@ use rustc::ty::TyCtxt;\n use rustc_data_structures::fx::{FxHashSet, FxHashMap};\n use rustc_serialize::Decodable as RustcDecodable;\n use rustc_serialize::opaque::Decoder;\n-use std::fs;\n use std::path::{Path};\n \n use IncrementalHashesMap;\n@@ -29,6 +28,7 @@ use super::dirty_clean;\n use super::hash::*;\n use super::fs::*;\n use super::file_format;\n+use super::work_product;\n \n pub type DirtyNodes = FxHashSet<DepNode<DefPathIndex>>;\n \n@@ -322,17 +322,7 @@ fn reconcile_work_products<'a, 'tcx>(tcx: TyCtxt<'a, 'tcx, 'tcx>,\n fn delete_dirty_work_product(tcx: TyCtxt,\n                              swp: SerializedWorkProduct) {\n     debug!(\"delete_dirty_work_product({:?})\", swp);\n-    for &(_, ref file_name) in &swp.work_product.saved_files {\n-        let path = in_incr_comp_dir_sess(tcx.sess, file_name);\n-        match fs::remove_file(&path) {\n-            Ok(()) => { }\n-            Err(err) => {\n-                tcx.sess.warn(\n-                    &format!(\"file-system error deleting outdated file `{}`: {}\",\n-                             path.display(), err));\n-            }\n-        }\n-    }\n+    work_product::delete_workproduct_files(tcx.sess, &swp.work_product);\n }\n \n fn load_prev_metadata_hashes(tcx: TyCtxt,"}, {"sha": "3ae8fcdfb51a1bd41bf6ea7a5a5c51ace06bdfec", "filename": "src/librustc_incremental/persist/mod.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/fe025d43458b61ae49ba644cf490651e0718afda/src%2Flibrustc_incremental%2Fpersist%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fe025d43458b61ae49ba644cf490651e0718afda/src%2Flibrustc_incremental%2Fpersist%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_incremental%2Fpersist%2Fmod.rs?ref=fe025d43458b61ae49ba644cf490651e0718afda", "patch": "@@ -29,3 +29,4 @@ pub use self::load::load_dep_graph;\n pub use self::save::save_dep_graph;\n pub use self::save::save_work_products;\n pub use self::work_product::save_trans_partition;\n+pub use self::work_product::delete_workproduct_files;"}, {"sha": "356eb845fed9acfcd590a6dfa3cb5221b476ec12", "filename": "src/librustc_incremental/persist/save.rs", "status": "modified", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/fe025d43458b61ae49ba644cf490651e0718afda/src%2Flibrustc_incremental%2Fpersist%2Fsave.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fe025d43458b61ae49ba644cf490651e0718afda/src%2Flibrustc_incremental%2Fpersist%2Fsave.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_incremental%2Fpersist%2Fsave.rs?ref=fe025d43458b61ae49ba644cf490651e0718afda", "patch": "@@ -30,6 +30,7 @@ use super::preds::*;\n use super::fs::*;\n use super::dirty_clean;\n use super::file_format;\n+use super::work_product;\n use calculate_svh::IchHasher;\n \n pub fn save_dep_graph<'a, 'tcx>(tcx: TyCtxt<'a, 'tcx, 'tcx>,\n@@ -84,6 +85,31 @@ pub fn save_work_products(sess: &Session) {\n     let _ignore = sess.dep_graph.in_ignore();\n     let path = work_products_path(sess);\n     save_in(sess, path, |e| encode_work_products(sess, e));\n+\n+    // We also need to clean out old work-products, as not all of them are\n+    // deleted during invalidation. Some object files don't change their\n+    // content, they are just not needed anymore.\n+    let new_work_products = sess.dep_graph.work_products();\n+    let previous_work_products = sess.dep_graph.previous_work_products();\n+\n+    for (id, wp) in previous_work_products.iter() {\n+        if !new_work_products.contains_key(id) {\n+            work_product::delete_workproduct_files(sess, wp);\n+            debug_assert!(wp.saved_files.iter().all(|&(_, ref file_name)| {\n+                !in_incr_comp_dir_sess(sess, file_name).exists()\n+            }));\n+        }\n+    }\n+\n+    // Check that we did not delete one of the current work-products:\n+    debug_assert!({\n+        new_work_products.iter()\n+                         .flat_map(|(_, wp)| wp.saved_files\n+                                               .iter()\n+                                               .map(|&(_, ref name)| name))\n+                         .map(|name| in_incr_comp_dir_sess(sess, name))\n+                         .all(|path| path.exists())\n+    });\n }\n \n fn save_in<F>(sess: &Session, path_buf: PathBuf, encode: F)"}, {"sha": "0e9f9061540191ea9c5d1b0a9613165a5d0d1284", "filename": "src/librustc_incremental/persist/work_product.rs", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/fe025d43458b61ae49ba644cf490651e0718afda/src%2Flibrustc_incremental%2Fpersist%2Fwork_product.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fe025d43458b61ae49ba644cf490651e0718afda/src%2Flibrustc_incremental%2Fpersist%2Fwork_product.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_incremental%2Fpersist%2Fwork_product.rs?ref=fe025d43458b61ae49ba644cf490651e0718afda", "patch": "@@ -17,6 +17,7 @@ use rustc::session::config::OutputType;\n use rustc::util::fs::link_or_copy;\n use std::path::PathBuf;\n use std::sync::Arc;\n+use std::fs as std_fs;\n \n pub fn save_trans_partition(sess: &Session,\n                             cgu_name: &str,\n@@ -61,3 +62,17 @@ pub fn save_trans_partition(sess: &Session,\n \n     sess.dep_graph.insert_work_product(&work_product_id, work_product);\n }\n+\n+pub fn delete_workproduct_files(sess: &Session, work_product: &WorkProduct) {\n+    for &(_, ref file_name) in &work_product.saved_files {\n+        let path = in_incr_comp_dir_sess(sess, file_name);\n+        match std_fs::remove_file(&path) {\n+            Ok(()) => { }\n+            Err(err) => {\n+                sess.warn(\n+                    &format!(\"file-system error deleting outdated file `{}`: {}\",\n+                             path.display(), err));\n+            }\n+        }\n+    }\n+}"}]}