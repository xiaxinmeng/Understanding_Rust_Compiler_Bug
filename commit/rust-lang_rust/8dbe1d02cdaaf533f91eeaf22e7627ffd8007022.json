{"sha": "8dbe1d02cdaaf533f91eeaf22e7627ffd8007022", "node_id": "C_kwDOAAsO6NoAKDhkYmUxZDAyY2RhYWY1MzNmOTFlZWFmMjJlNzYyN2ZmZDgwMDcwMjI", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2022-05-09T09:17:48Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2022-05-09T09:17:52Z"}, "message": "rustfmt", "tree": {"sha": "0d1390c455613eb3ee10a419bec7361cf66f1863", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0d1390c455613eb3ee10a419bec7361cf66f1863"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8dbe1d02cdaaf533f91eeaf22e7627ffd8007022", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8dbe1d02cdaaf533f91eeaf22e7627ffd8007022", "html_url": "https://github.com/rust-lang/rust/commit/8dbe1d02cdaaf533f91eeaf22e7627ffd8007022", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8dbe1d02cdaaf533f91eeaf22e7627ffd8007022/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f791e2ee50395f01f2b9cea0418c12ce413208ff", "url": "https://api.github.com/repos/rust-lang/rust/commits/f791e2ee50395f01f2b9cea0418c12ce413208ff", "html_url": "https://github.com/rust-lang/rust/commit/f791e2ee50395f01f2b9cea0418c12ce413208ff"}], "stats": {"total": 3, "additions": 2, "deletions": 1}, "files": [{"sha": "2d8f5855330f5737c494a657210e33f3690d009f", "filename": "src/machine.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/8dbe1d02cdaaf533f91eeaf22e7627ffd8007022/src%2Fmachine.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8dbe1d02cdaaf533f91eeaf22e7627ffd8007022/src%2Fmachine.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fmachine.rs?ref=8dbe1d02cdaaf533f91eeaf22e7627ffd8007022", "patch": "@@ -380,7 +380,8 @@ impl<'mir, 'tcx> Evaluator<'mir, 'tcx> {\n                 // Most of them are for weak symbols, which we all set to null (indicating that the\n                 // symbol is not supported, and triggering fallback code which ends up calling a\n                 // syscall that we do support).\n-                for name in &[\"__cxa_thread_atexit_impl\", \"getrandom\", \"statx\", \"__clock_gettime64\"] {\n+                for name in &[\"__cxa_thread_atexit_impl\", \"getrandom\", \"statx\", \"__clock_gettime64\"]\n+                {\n                     let layout = this.machine.layouts.usize;\n                     let place = this.allocate(layout, MiriMemoryKind::ExternStatic.into())?;\n                     this.write_scalar(Scalar::from_machine_usize(0, this), &place.into())?;"}]}