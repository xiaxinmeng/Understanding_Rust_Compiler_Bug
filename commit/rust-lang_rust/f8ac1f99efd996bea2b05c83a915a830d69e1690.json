{"sha": "f8ac1f99efd996bea2b05c83a915a830d69e1690", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY4YWMxZjk5ZWZkOTk2YmVhMmIwNWM4M2E5MTVhODMwZDY5ZTE2OTA=", "commit": {"author": {"name": "Eduardo Broto", "email": "ebroto@tutanota.com", "date": "2020-10-30T22:47:22Z"}, "committer": {"name": "Eduardo Broto", "email": "ebroto@tutanota.com", "date": "2020-10-30T22:47:22Z"}, "message": "Address suggestions in PR review", "tree": {"sha": "c76e0d57df9125c8231b3ac44f5ff98069561d6a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c76e0d57df9125c8231b3ac44f5ff98069561d6a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f8ac1f99efd996bea2b05c83a915a830d69e1690", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f8ac1f99efd996bea2b05c83a915a830d69e1690", "html_url": "https://github.com/rust-lang/rust/commit/f8ac1f99efd996bea2b05c83a915a830d69e1690", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f8ac1f99efd996bea2b05c83a915a830d69e1690/comments", "author": {"login": "ebroto", "id": 816908, "node_id": "MDQ6VXNlcjgxNjkwOA==", "avatar_url": "https://avatars.githubusercontent.com/u/816908?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ebroto", "html_url": "https://github.com/ebroto", "followers_url": "https://api.github.com/users/ebroto/followers", "following_url": "https://api.github.com/users/ebroto/following{/other_user}", "gists_url": "https://api.github.com/users/ebroto/gists{/gist_id}", "starred_url": "https://api.github.com/users/ebroto/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ebroto/subscriptions", "organizations_url": "https://api.github.com/users/ebroto/orgs", "repos_url": "https://api.github.com/users/ebroto/repos", "events_url": "https://api.github.com/users/ebroto/events{/privacy}", "received_events_url": "https://api.github.com/users/ebroto/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ebroto", "id": 816908, "node_id": "MDQ6VXNlcjgxNjkwOA==", "avatar_url": "https://avatars.githubusercontent.com/u/816908?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ebroto", "html_url": "https://github.com/ebroto", "followers_url": "https://api.github.com/users/ebroto/followers", "following_url": "https://api.github.com/users/ebroto/following{/other_user}", "gists_url": "https://api.github.com/users/ebroto/gists{/gist_id}", "starred_url": "https://api.github.com/users/ebroto/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ebroto/subscriptions", "organizations_url": "https://api.github.com/users/ebroto/orgs", "repos_url": "https://api.github.com/users/ebroto/repos", "events_url": "https://api.github.com/users/ebroto/events{/privacy}", "received_events_url": "https://api.github.com/users/ebroto/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d958269fe5afb26ee5026be5bc0cea459593bccf", "url": "https://api.github.com/repos/rust-lang/rust/commits/d958269fe5afb26ee5026be5bc0cea459593bccf", "html_url": "https://github.com/rust-lang/rust/commit/d958269fe5afb26ee5026be5bc0cea459593bccf"}], "stats": {"total": 23, "additions": 20, "deletions": 3}, "files": [{"sha": "be47eeaa07379682155b1f1e08a2350e48392c5d", "filename": "CHANGELOG.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f8ac1f99efd996bea2b05c83a915a830d69e1690/CHANGELOG.md", "raw_url": "https://github.com/rust-lang/rust/raw/f8ac1f99efd996bea2b05c83a915a830d69e1690/CHANGELOG.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/CHANGELOG.md?ref=f8ac1f99efd996bea2b05c83a915a830d69e1690", "patch": "@@ -22,7 +22,7 @@ Current beta, release 2020-11-19\n * [`map_err_ignore`] [#5998](https://github.com/rust-lang/rust-clippy/pull/5998)\n * [`rc_buffer`] [#6044](https://github.com/rust-lang/rust-clippy/pull/6044)\n * [`to_string_in_display`] [#5831](https://github.com/rust-lang/rust-clippy/pull/5831)\n-* [`single_char_push_str`] [#5881](https://github.com/rust-lang/rust-clippy/pull/5881)\n+* `single_char_push_str` [#5881](https://github.com/rust-lang/rust-clippy/pull/5881)\n \n ### Moves and Deprecations\n "}, {"sha": "9d9097002d65e0a9604dbf39e39186c4f9c0d4cd", "filename": "clippy_lints/src/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/f8ac1f99efd996bea2b05c83a915a830d69e1690/clippy_lints%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f8ac1f99efd996bea2b05c83a915a830d69e1690/clippy_lints%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flib.rs?ref=f8ac1f99efd996bea2b05c83a915a830d69e1690", "patch": "@@ -1958,6 +1958,7 @@ pub fn register_renamed(ls: &mut rustc_lint::LintStore) {\n     ls.register_renamed(\"clippy::for_loop_over_result\", \"clippy::for_loops_over_fallibles\");\n     ls.register_renamed(\"clippy::identity_conversion\", \"clippy::useless_conversion\");\n     ls.register_renamed(\"clippy::zero_width_space\", \"clippy::invisible_characters\");\n+    ls.register_renamed(\"clippy::single_char_push_str\", \"clippy::single_char_add_str\");\n }\n \n // only exists to let the dogfood integration test works."}, {"sha": "558c90249ccd305eeb727ba29a5f0fdb9bbd6984", "filename": "clippy_lints/src/methods/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f8ac1f99efd996bea2b05c83a915a830d69e1690/clippy_lints%2Fsrc%2Fmethods%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f8ac1f99efd996bea2b05c83a915a830d69e1690/clippy_lints%2Fsrc%2Fmethods%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmethods%2Fmod.rs?ref=f8ac1f99efd996bea2b05c83a915a830d69e1690", "patch": "@@ -3266,7 +3266,7 @@ fn lint_single_char_insert_string(cx: &LateContext<'_>, expr: &hir::Expr<'_>, ar\n     if let Some(extension_string) = get_hint_if_single_char_arg(cx, &args[2], &mut applicability) {\n         let base_string_snippet =\n             snippet_with_applicability(cx, args[0].span.source_callsite(), \"_\", &mut applicability);\n-        let pos_arg = snippet(cx, args[1].span, \"..\");\n+        let pos_arg = snippet_with_applicability(cx, args[1].span, \"..\", &mut applicability);\n         let sugg = format!(\"{}.insert({}, {})\", base_string_snippet, pos_arg, extension_string);\n         span_lint_and_sugg(\n             cx,"}, {"sha": "63a6d37a9cce9ddbc5346920fa865405c6219be3", "filename": "tests/ui/single_char_add_str.fixed", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f8ac1f99efd996bea2b05c83a915a830d69e1690/tests%2Fui%2Fsingle_char_add_str.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/f8ac1f99efd996bea2b05c83a915a830d69e1690/tests%2Fui%2Fsingle_char_add_str.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fsingle_char_add_str.fixed?ref=f8ac1f99efd996bea2b05c83a915a830d69e1690", "patch": "@@ -38,6 +38,8 @@ fn main() {\n     string.insert(x, 'a');\n     const Y: usize = 1;\n     string.insert(Y, 'a');\n+    string.insert(Y, '\"');\n+    string.insert(Y, '\\'');\n \n     get_string!().insert(1, '?');\n }"}, {"sha": "a799ea7d88564a188c3b4da1e2c14efeb8ff2fcf", "filename": "tests/ui/single_char_add_str.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f8ac1f99efd996bea2b05c83a915a830d69e1690/tests%2Fui%2Fsingle_char_add_str.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f8ac1f99efd996bea2b05c83a915a830d69e1690/tests%2Fui%2Fsingle_char_add_str.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fsingle_char_add_str.rs?ref=f8ac1f99efd996bea2b05c83a915a830d69e1690", "patch": "@@ -38,6 +38,8 @@ fn main() {\n     string.insert_str(x, r##\"a\"##);\n     const Y: usize = 1;\n     string.insert_str(Y, r##\"a\"##);\n+    string.insert_str(Y, r##\"\"\"##);\n+    string.insert_str(Y, r##\"'\"##);\n \n     get_string!().insert_str(1, \"?\");\n }"}, {"sha": "55d91583ad04d30d6deb01c4d5baeafc1746e292", "filename": "tests/ui/single_char_add_str.stderr", "status": "modified", "additions": 13, "deletions": 1, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/f8ac1f99efd996bea2b05c83a915a830d69e1690/tests%2Fui%2Fsingle_char_add_str.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f8ac1f99efd996bea2b05c83a915a830d69e1690/tests%2Fui%2Fsingle_char_add_str.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fsingle_char_add_str.stderr?ref=f8ac1f99efd996bea2b05c83a915a830d69e1690", "patch": "@@ -72,11 +72,23 @@ error: calling `insert_str()` using a single-character string literal\n LL |     string.insert_str(Y, r##\"a\"##);\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `insert` with a character literal: `string.insert(Y, 'a')`\n \n+error: calling `insert_str()` using a single-character string literal\n+  --> $DIR/single_char_add_str.rs:41:5\n+   |\n+LL |     string.insert_str(Y, r##\"\"\"##);\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `insert` with a character literal: `string.insert(Y, '\"')`\n+\n error: calling `insert_str()` using a single-character string literal\n   --> $DIR/single_char_add_str.rs:42:5\n    |\n+LL |     string.insert_str(Y, r##\"'\"##);\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `insert` with a character literal: `string.insert(Y, '/'')`\n+\n+error: calling `insert_str()` using a single-character string literal\n+  --> $DIR/single_char_add_str.rs:44:5\n+   |\n LL |     get_string!().insert_str(1, \"?\");\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `insert` with a character literal: `get_string!().insert(1, '?')`\n \n-error: aborting due to 13 previous errors\n+error: aborting due to 15 previous errors\n "}]}