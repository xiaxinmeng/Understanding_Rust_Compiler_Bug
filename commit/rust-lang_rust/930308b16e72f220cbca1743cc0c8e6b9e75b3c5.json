{"sha": "930308b16e72f220cbca1743cc0c8e6b9e75b3c5", "node_id": "MDY6Q29tbWl0NzI0NzEyOjkzMDMwOGIxNmU3MmYyMjBjYmNhMTc0M2NjMGM4ZTZiOWU3NWIzYzU=", "commit": {"author": {"name": "Felix S. Klock II", "email": "pnkfelix@pnkfx.org", "date": "2014-05-14T10:36:03Z"}, "committer": {"name": "Felix S. Klock II", "email": "pnkfelix@pnkfx.org", "date": "2014-05-15T09:09:26Z"}, "message": "A test case for a bug I found in the new SVH while reviewing it.\n\nNamely: non-pub `use` declarations *are* significant to the SVH\ncomputation, since they can change which traits are part of the method\nresolution step, and thus affect which methods get called from the\n(potentially inlined) code.", "tree": {"sha": "00a1b6d3f622ee49288552c9601b146f38e6c77b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/00a1b6d3f622ee49288552c9601b146f38e6c77b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/930308b16e72f220cbca1743cc0c8e6b9e75b3c5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/930308b16e72f220cbca1743cc0c8e6b9e75b3c5", "html_url": "https://github.com/rust-lang/rust/commit/930308b16e72f220cbca1743cc0c8e6b9e75b3c5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/930308b16e72f220cbca1743cc0c8e6b9e75b3c5/comments", "author": {"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a92d162026dd8696f71f95f79fc62ab8236b6fc3", "url": "https://api.github.com/repos/rust-lang/rust/commits/a92d162026dd8696f71f95f79fc62ab8236b6fc3", "html_url": "https://github.com/rust-lang/rust/commit/a92d162026dd8696f71f95f79fc62ab8236b6fc3"}], "stats": {"total": 113, "additions": 113, "deletions": 0}, "files": [{"sha": "5b4617c05ead1c4075faf8011c466f2b290d832b", "filename": "src/test/auxiliary/svh-uta-base.rs", "status": "added", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/930308b16e72f220cbca1743cc0c8e6b9e75b3c5/src%2Ftest%2Fauxiliary%2Fsvh-uta-base.rs", "raw_url": "https://github.com/rust-lang/rust/raw/930308b16e72f220cbca1743cc0c8e6b9e75b3c5/src%2Ftest%2Fauxiliary%2Fsvh-uta-base.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fauxiliary%2Fsvh-uta-base.rs?ref=930308b16e72f220cbca1743cc0c8e6b9e75b3c5", "patch": "@@ -0,0 +1,32 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+//! \"compile-fail/svh-uta-trait.rs\" is checking that we detect a\n+//! change from `use foo::TraitB` to use `foo::TraitB` in the hash\n+//! (SVH) computation (#14132), since that will affect method\n+//! resolution.\n+//!\n+//! This is the upstream crate.\n+\n+#![crate_id = \"uta\"]\n+\n+mod traits {\n+    pub trait TraitA { fn val(&self) -> int { 2 } }\n+    pub trait TraitB { fn val(&self) -> int { 3 } }\n+}\n+\n+impl traits::TraitA for () {}\n+impl traits::TraitB for () {}\n+\n+pub fn foo<T>(_: int) -> int {\n+    use traits::TraitA;\n+    let v = ();\n+    v.val()\n+}"}, {"sha": "1a2fb3cee1eae80362a97dc37b4d4eb0a61c2e7e", "filename": "src/test/auxiliary/svh-uta-change-use-trait.rs", "status": "added", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/930308b16e72f220cbca1743cc0c8e6b9e75b3c5/src%2Ftest%2Fauxiliary%2Fsvh-uta-change-use-trait.rs", "raw_url": "https://github.com/rust-lang/rust/raw/930308b16e72f220cbca1743cc0c8e6b9e75b3c5/src%2Ftest%2Fauxiliary%2Fsvh-uta-change-use-trait.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fauxiliary%2Fsvh-uta-change-use-trait.rs?ref=930308b16e72f220cbca1743cc0c8e6b9e75b3c5", "patch": "@@ -0,0 +1,32 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+//! \"compile-fail/svh-uta-trait.rs\" is checking that we detect a\n+//! change from `use foo::TraitB` to use `foo::TraitB` in the hash\n+//! (SVH) computation (#14132), since that will affect method\n+//! resolution.\n+//!\n+//! This is the upstream crate.\n+\n+#![crate_id = \"uta\"]\n+\n+mod traits {\n+    pub trait TraitA { fn val(&self) -> int { 2 } }\n+    pub trait TraitB { fn val(&self) -> int { 3 } }\n+}\n+\n+impl traits::TraitA for () {}\n+impl traits::TraitB for () {}\n+\n+pub fn foo<T>(_: int) -> int {\n+    use traits::TraitB;\n+    let v = ();\n+    v.val()\n+}"}, {"sha": "ccc0bac5150ecd107a8be6d7da43d933db9792c6", "filename": "src/test/auxiliary/svh-utb.rs", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/930308b16e72f220cbca1743cc0c8e6b9e75b3c5/src%2Ftest%2Fauxiliary%2Fsvh-utb.rs", "raw_url": "https://github.com/rust-lang/rust/raw/930308b16e72f220cbca1743cc0c8e6b9e75b3c5/src%2Ftest%2Fauxiliary%2Fsvh-utb.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fauxiliary%2Fsvh-utb.rs?ref=930308b16e72f220cbca1743cc0c8e6b9e75b3c5", "patch": "@@ -0,0 +1,22 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+//! \"compile-fail/svh-uta-trait.rs\" is checking that we detect a\n+//! change from `use foo::TraitB` to use `foo::TraitB` in the hash\n+//! (SVH) computation (#14132), since that will affect method\n+//! resolution.\n+//!\n+//! This is the downstream crate.\n+\n+#![crate_id = \"utb\"]\n+\n+extern crate uta;\n+\n+pub fn foo() { assert_eq!(uta::foo::<()>(0), 3); }"}, {"sha": "7fdbf35fc6d59c1fffda04c3424974ee4d05e55d", "filename": "src/test/compile-fail/svh-use-trait.rs", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/930308b16e72f220cbca1743cc0c8e6b9e75b3c5/src%2Ftest%2Fcompile-fail%2Fsvh-use-trait.rs", "raw_url": "https://github.com/rust-lang/rust/raw/930308b16e72f220cbca1743cc0c8e6b9e75b3c5/src%2Ftest%2Fcompile-fail%2Fsvh-use-trait.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fsvh-use-trait.rs?ref=930308b16e72f220cbca1743cc0c8e6b9e75b3c5", "patch": "@@ -0,0 +1,27 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// note that these aux-build directives must be in this order\n+// aux-build:svh-uta-base.rs\n+// aux-build:svh-utb.rs\n+// aux-build:svh-uta-change-use-trait.rs\n+\n+//! \"compile-fail/svh-uta-trait.rs\" is checking that we detect a\n+//! change from `use foo::TraitB` to use `foo::TraitB` in the hash\n+//! (SVH) computation (#14132), since that will affect method\n+//! resolution.\n+\n+extern crate uta;\n+extern crate utb; //~ ERROR: found possibly newer version of crate `uta` which `utb` depends\n+//~^ NOTE: perhaps this crate needs to be recompiled\n+\n+fn main() {\n+    utb::foo()\n+}"}]}