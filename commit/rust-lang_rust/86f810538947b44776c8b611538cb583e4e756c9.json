{"sha": "86f810538947b44776c8b611538cb583e4e756c9", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg2ZjgxMDUzODk0N2I0NDc3NmM4YjYxMTUzOGNiNTgzZTRlNzU2Yzk=", "commit": {"author": {"name": "Bastian Kauschke", "email": "bastian_kauschke@hotmail.de", "date": "2020-06-03T17:24:58Z"}, "committer": {"name": "Bastian Kauschke", "email": "bastian_kauschke@hotmail.de", "date": "2020-06-03T17:24:58Z"}, "message": "fix `AdtDef` docs", "tree": {"sha": "62076b18c260c7c3ebf08dddbedde870e0e57931", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/62076b18c260c7c3ebf08dddbedde870e0e57931"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/86f810538947b44776c8b611538cb583e4e756c9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/86f810538947b44776c8b611538cb583e4e756c9", "html_url": "https://github.com/rust-lang/rust/commit/86f810538947b44776c8b611538cb583e4e756c9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/86f810538947b44776c8b611538cb583e4e756c9/comments", "author": {"login": "lcnr", "id": 29864074, "node_id": "MDQ6VXNlcjI5ODY0MDc0", "avatar_url": "https://avatars.githubusercontent.com/u/29864074?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lcnr", "html_url": "https://github.com/lcnr", "followers_url": "https://api.github.com/users/lcnr/followers", "following_url": "https://api.github.com/users/lcnr/following{/other_user}", "gists_url": "https://api.github.com/users/lcnr/gists{/gist_id}", "starred_url": "https://api.github.com/users/lcnr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lcnr/subscriptions", "organizations_url": "https://api.github.com/users/lcnr/orgs", "repos_url": "https://api.github.com/users/lcnr/repos", "events_url": "https://api.github.com/users/lcnr/events{/privacy}", "received_events_url": "https://api.github.com/users/lcnr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "lcnr", "id": 29864074, "node_id": "MDQ6VXNlcjI5ODY0MDc0", "avatar_url": "https://avatars.githubusercontent.com/u/29864074?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lcnr", "html_url": "https://github.com/lcnr", "followers_url": "https://api.github.com/users/lcnr/followers", "following_url": "https://api.github.com/users/lcnr/following{/other_user}", "gists_url": "https://api.github.com/users/lcnr/gists{/gist_id}", "starred_url": "https://api.github.com/users/lcnr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lcnr/subscriptions", "organizations_url": "https://api.github.com/users/lcnr/orgs", "repos_url": "https://api.github.com/users/lcnr/repos", "events_url": "https://api.github.com/users/lcnr/events{/privacy}", "received_events_url": "https://api.github.com/users/lcnr/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ff4aff6ce0f216c8cb8d40f432efaacdaca8095b", "url": "https://api.github.com/repos/rust-lang/rust/commits/ff4aff6ce0f216c8cb8d40f432efaacdaca8095b", "html_url": "https://github.com/rust-lang/rust/commit/ff4aff6ce0f216c8cb8d40f432efaacdaca8095b"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "00c00a63b6b5db747849d59f5e530370af3a02a0", "filename": "src/librustc_middle/ty/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/86f810538947b44776c8b611538cb583e4e756c9/src%2Flibrustc_middle%2Fty%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/86f810538947b44776c8b611538cb583e4e756c9/src%2Flibrustc_middle%2Fty%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_middle%2Fty%2Fmod.rs?ref=86f810538947b44776c8b611538cb583e4e756c9", "patch": "@@ -1846,7 +1846,7 @@ pub struct FieldDef {\n \n /// The definition of a user-defined type, e.g., a `struct`, `enum`, or `union`.\n ///\n-/// These are all interned (by `intern_adt_def`) into the `adt_defs` table.\n+/// These are all interned (by `alloc_adt_def`) into the global arena.\n ///\n /// The initialism *ADT* stands for an [*algebraic data type (ADT)*][adt].\n /// This is slightly wrong because `union`s are not ADTs."}]}