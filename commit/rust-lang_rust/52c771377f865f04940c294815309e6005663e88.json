{"sha": "52c771377f865f04940c294815309e6005663e88", "node_id": "MDY6Q29tbWl0NzI0NzEyOjUyYzc3MTM3N2Y4NjVmMDQ5NDBjMjk0ODE1MzA5ZTYwMDU2NjNlODg=", "commit": {"author": {"name": "Yves Dorfsman", "email": "yves@zioup.com", "date": "2019-10-18T05:07:29Z"}, "committer": {"name": "Yves Dorfsman", "email": "yves@zioup.com", "date": "2019-10-18T12:55:51Z"}, "message": "Added doc on keyword break", "tree": {"sha": "6e2ebcd421b1d704c5254e3521aa31e83992ce57", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6e2ebcd421b1d704c5254e3521aa31e83992ce57"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/52c771377f865f04940c294815309e6005663e88", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/52c771377f865f04940c294815309e6005663e88", "html_url": "https://github.com/rust-lang/rust/commit/52c771377f865f04940c294815309e6005663e88", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/52c771377f865f04940c294815309e6005663e88/comments", "author": {"login": "dorfsmay", "id": 3446051, "node_id": "MDQ6VXNlcjM0NDYwNTE=", "avatar_url": "https://avatars.githubusercontent.com/u/3446051?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dorfsmay", "html_url": "https://github.com/dorfsmay", "followers_url": "https://api.github.com/users/dorfsmay/followers", "following_url": "https://api.github.com/users/dorfsmay/following{/other_user}", "gists_url": "https://api.github.com/users/dorfsmay/gists{/gist_id}", "starred_url": "https://api.github.com/users/dorfsmay/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dorfsmay/subscriptions", "organizations_url": "https://api.github.com/users/dorfsmay/orgs", "repos_url": "https://api.github.com/users/dorfsmay/repos", "events_url": "https://api.github.com/users/dorfsmay/events{/privacy}", "received_events_url": "https://api.github.com/users/dorfsmay/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dorfsmay", "id": 3446051, "node_id": "MDQ6VXNlcjM0NDYwNTE=", "avatar_url": "https://avatars.githubusercontent.com/u/3446051?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dorfsmay", "html_url": "https://github.com/dorfsmay", "followers_url": "https://api.github.com/users/dorfsmay/followers", "following_url": "https://api.github.com/users/dorfsmay/following{/other_user}", "gists_url": "https://api.github.com/users/dorfsmay/gists{/gist_id}", "starred_url": "https://api.github.com/users/dorfsmay/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dorfsmay/subscriptions", "organizations_url": "https://api.github.com/users/dorfsmay/orgs", "repos_url": "https://api.github.com/users/dorfsmay/repos", "events_url": "https://api.github.com/users/dorfsmay/events{/privacy}", "received_events_url": "https://api.github.com/users/dorfsmay/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fa0f7d0080d8e7e9eb20aa9cbf8013f96c81287f", "url": "https://api.github.com/repos/rust-lang/rust/commits/fa0f7d0080d8e7e9eb20aa9cbf8013f96c81287f", "html_url": "https://github.com/rust-lang/rust/commit/fa0f7d0080d8e7e9eb20aa9cbf8013f96c81287f"}], "stats": {"total": 66, "additions": 64, "deletions": 2}, "files": [{"sha": "7d678ee3879a0b91da4db7319bd97f31c2658684", "filename": "src/libstd/keyword_docs.rs", "status": "modified", "additions": 64, "deletions": 2, "changes": 66, "blob_url": "https://github.com/rust-lang/rust/blob/52c771377f865f04940c294815309e6005663e88/src%2Flibstd%2Fkeyword_docs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/52c771377f865f04940c294815309e6005663e88/src%2Flibstd%2Fkeyword_docs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fkeyword_docs.rs?ref=52c771377f865f04940c294815309e6005663e88", "patch": "@@ -33,9 +33,71 @@ mod as_keyword { }\n //\n /// Exit early from a loop.\n ///\n-/// The documentation for this keyword is [not yet complete]. Pull requests welcome!\n+/// When `break` is encountered, execution of the associated loop body is\n+/// immediately terminated.\n+///\n+/// ```rust\n+/// let mut last = 0;\n+///\n+/// for x in 1..100 {\n+///     if x > 12 {\n+///         break;\n+///     }\n+///     last = x;\n+/// }\n+///\n+/// assert_eq!(last, 12);\n+/// println!(\"{}\", last);\n+/// ```\n+///\n+/// A break expression is normally associated with the innermost loop enclosing the\n+/// `break` but a label can be used to specify which enclosing loop is affected.\n+///\n+///```rust\n+/// 'outer: for i in 1..=5 {\n+///     println!(\"outer iteration (i): {}\", i);\n+///\n+///     'inner: for j in 1..=200 {\n+///         println!(\"    inner iteration (j): {}\", j);\n+///         if j >= 3 {\n+///             // breaks from inner loop, let's outer loop continue.\n+///             break;\n+///         }\n+///         if i >= 2 {\n+///             // breaks from outer loop, and directly to \"Bye\".\n+///             break 'outer;\n+///         }\n+///     }\n+/// }\n+/// println!(\"Bye.\");\n+///```\n+///\n+/// When associated with `loop`, but not with any other kind of loop expression,\n+/// `break` can return a value.  When no value is specified, `break;` returns `()`.\n+/// Every `break` within a loop must return the same type.\n+///\n+/// ```rust\n+/// let (mut a, mut b) = (1, 1);\n+/// let result = loop {\n+///     if b > 10 {\n+///         break b;\n+///     }\n+///     let c = a + b;\n+///     a = b;\n+///     b = c;\n+/// };\n+/// // first number in Fibonacci sequence over 10:\n+/// assert_eq!(result, 13);\n+/// println!(\"{}\", result);\n+/// ```\n+///\n+/// For more details consult the [Reference on \"break expression\"] and the [Reference on \"break and\n+/// loop values\"].\n+///\n+/// [Reference on \"break expression\"]: ../reference/expressions/loop-expr.html#break-expressions\n+/// [Reference on \"break and loop values\"]:\n+/// ../reference/expressions/loop-expr.html#break-and-loop-values\n ///\n-/// [not yet complete]: https://github.com/rust-lang/rust/issues/34601\n mod break_keyword { }\n \n #[doc(keyword = \"const\")]"}]}