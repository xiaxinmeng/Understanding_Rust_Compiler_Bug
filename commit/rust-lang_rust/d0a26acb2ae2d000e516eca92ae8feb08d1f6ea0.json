{"sha": "d0a26acb2ae2d000e516eca92ae8feb08d1f6ea0", "node_id": "C_kwDOAAsO6NoAKGQwYTI2YWNiMmFlMmQwMDBlNTE2ZWNhOTJhZThmZWIwOGQxZjZlYTA", "commit": {"author": {"name": "Nicholas Nethercote", "email": "n.nethercote@gmail.com", "date": "2022-09-28T00:28:36Z"}, "committer": {"name": "Nicholas Nethercote", "email": "n.nethercote@gmail.com", "date": "2022-09-28T01:15:23Z"}, "message": "Address review comments.", "tree": {"sha": "eade9bfbafbc49a3c083da51d9ae0a90010dcf4b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/eade9bfbafbc49a3c083da51d9ae0a90010dcf4b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d0a26acb2ae2d000e516eca92ae8feb08d1f6ea0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d0a26acb2ae2d000e516eca92ae8feb08d1f6ea0", "html_url": "https://github.com/rust-lang/rust/commit/d0a26acb2ae2d000e516eca92ae8feb08d1f6ea0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d0a26acb2ae2d000e516eca92ae8feb08d1f6ea0/comments", "author": {"login": "nnethercote", "id": 1940286, "node_id": "MDQ6VXNlcjE5NDAyODY=", "avatar_url": "https://avatars.githubusercontent.com/u/1940286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nnethercote", "html_url": "https://github.com/nnethercote", "followers_url": "https://api.github.com/users/nnethercote/followers", "following_url": "https://api.github.com/users/nnethercote/following{/other_user}", "gists_url": "https://api.github.com/users/nnethercote/gists{/gist_id}", "starred_url": "https://api.github.com/users/nnethercote/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nnethercote/subscriptions", "organizations_url": "https://api.github.com/users/nnethercote/orgs", "repos_url": "https://api.github.com/users/nnethercote/repos", "events_url": "https://api.github.com/users/nnethercote/events{/privacy}", "received_events_url": "https://api.github.com/users/nnethercote/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nnethercote", "id": 1940286, "node_id": "MDQ6VXNlcjE5NDAyODY=", "avatar_url": "https://avatars.githubusercontent.com/u/1940286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nnethercote", "html_url": "https://github.com/nnethercote", "followers_url": "https://api.github.com/users/nnethercote/followers", "following_url": "https://api.github.com/users/nnethercote/following{/other_user}", "gists_url": "https://api.github.com/users/nnethercote/gists{/gist_id}", "starred_url": "https://api.github.com/users/nnethercote/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nnethercote/subscriptions", "organizations_url": "https://api.github.com/users/nnethercote/orgs", "repos_url": "https://api.github.com/users/nnethercote/repos", "events_url": "https://api.github.com/users/nnethercote/events{/privacy}", "received_events_url": "https://api.github.com/users/nnethercote/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7f7e2165b1f1a271c6708f2a54c940bdaa254eb2", "url": "https://api.github.com/repos/rust-lang/rust/commits/7f7e2165b1f1a271c6708f2a54c940bdaa254eb2", "html_url": "https://github.com/rust-lang/rust/commit/7f7e2165b1f1a271c6708f2a54c940bdaa254eb2"}], "stats": {"total": 24, "additions": 13, "deletions": 11}, "files": [{"sha": "c71e6ffe34d9b85dd93042c207b1d736953a8daf", "filename": "compiler/rustc_lexer/src/lib.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/d0a26acb2ae2d000e516eca92ae8feb08d1f6ea0/compiler%2Frustc_lexer%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d0a26acb2ae2d000e516eca92ae8feb08d1f6ea0/compiler%2Frustc_lexer%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_lexer%2Fsrc%2Flib.rs?ref=d0a26acb2ae2d000e516eca92ae8feb08d1f6ea0", "patch": "@@ -23,15 +23,17 @@\n // We want to be able to build this crate with a stable compiler, so no\n // `#![feature]` attributes should be added.\n \n-pub mod cursor;\n+mod cursor;\n pub mod unescape;\n \n #[cfg(test)]\n mod tests;\n \n+pub use crate::cursor::Cursor;\n+\n use self::LiteralKind::*;\n use self::TokenKind::*;\n-use crate::cursor::{Cursor, EOF_CHAR};\n+use crate::cursor::EOF_CHAR;\n use std::convert::TryFrom;\n \n /// Parsed token."}, {"sha": "bcd078a89677e9e4df7e996ee581acbab6ee36ba", "filename": "compiler/rustc_parse/src/lexer/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d0a26acb2ae2d000e516eca92ae8feb08d1f6ea0/compiler%2Frustc_parse%2Fsrc%2Flexer%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d0a26acb2ae2d000e516eca92ae8feb08d1f6ea0/compiler%2Frustc_parse%2Fsrc%2Flexer%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_parse%2Fsrc%2Flexer%2Fmod.rs?ref=d0a26acb2ae2d000e516eca92ae8feb08d1f6ea0", "patch": "@@ -4,8 +4,8 @@ use rustc_ast::token::{self, CommentKind, Delimiter, Token, TokenKind};\n use rustc_ast::tokenstream::TokenStream;\n use rustc_ast::util::unicode::contains_text_flow_control_chars;\n use rustc_errors::{error_code, Applicability, DiagnosticBuilder, ErrorGuaranteed, PResult};\n-use rustc_lexer::cursor::Cursor;\n use rustc_lexer::unescape::{self, Mode};\n+use rustc_lexer::Cursor;\n use rustc_lexer::{Base, DocStyle, RawStrError};\n use rustc_session::lint::builtin::{\n     RUST_2021_PREFIXES_INCOMPATIBLE_SYNTAX, TEXT_DIRECTION_CODEPOINT_IN_COMMENT,"}, {"sha": "364753154db0555e379d71ef30643a05e6946c45", "filename": "compiler/rustc_parse/src/lexer/tokentrees.rs", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/d0a26acb2ae2d000e516eca92ae8feb08d1f6ea0/compiler%2Frustc_parse%2Fsrc%2Flexer%2Ftokentrees.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d0a26acb2ae2d000e516eca92ae8feb08d1f6ea0/compiler%2Frustc_parse%2Fsrc%2Flexer%2Ftokentrees.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_parse%2Fsrc%2Flexer%2Ftokentrees.rs?ref=d0a26acb2ae2d000e516eca92ae8feb08d1f6ea0", "patch": "@@ -53,7 +53,7 @@ impl<'a> TokenTreesReader<'a> {\n                 token::OpenDelim(delim) => buf.push(self.parse_token_tree_open_delim(delim)),\n                 token::CloseDelim(delim) => return Err(self.close_delim_err(delim)),\n                 token::Eof => return Ok(buf.into_token_stream()),\n-                _ => buf.push(self.parse_token_tree_other()),\n+                _ => buf.push(self.parse_token_tree_non_delim_non_eof()),\n             }\n         }\n     }\n@@ -66,11 +66,10 @@ impl<'a> TokenTreesReader<'a> {\n                 token::OpenDelim(delim) => buf.push(self.parse_token_tree_open_delim(delim)),\n                 token::CloseDelim(..) => return buf.into_token_stream(),\n                 token::Eof => {\n-                    let mut err = self.eof_err();\n-                    err.emit();\n+                    self.eof_err().emit();\n                     return buf.into_token_stream();\n                 }\n-                _ => buf.push(self.parse_token_tree_other()),\n+                _ => buf.push(self.parse_token_tree_non_delim_non_eof()),\n             }\n         }\n     }\n@@ -245,9 +244,10 @@ impl<'a> TokenTreesReader<'a> {\n     }\n \n     #[inline]\n-    fn parse_token_tree_other(&mut self) -> TokenTree {\n-        // `spacing` for the returned token is determined by the next token:\n-        // its kind and its `preceded_by_whitespace` status.\n+    fn parse_token_tree_non_delim_non_eof(&mut self) -> TokenTree {\n+        // `this_spacing` for the returned token refers to whether the token is\n+        // immediately followed by another op token. It is determined by the\n+        // next token: its kind and its `preceded_by_whitespace` status.\n         let (next_tok, is_next_tok_preceded_by_whitespace) = self.string_reader.next_token();\n         let this_spacing = if is_next_tok_preceded_by_whitespace || !next_tok.is_op() {\n             Spacing::Alone"}, {"sha": "78b98431b190dad2bb36f8459239e0637c4de737", "filename": "src/librustdoc/html/highlight.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d0a26acb2ae2d000e516eca92ae8feb08d1f6ea0/src%2Flibrustdoc%2Fhtml%2Fhighlight.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d0a26acb2ae2d000e516eca92ae8feb08d1f6ea0/src%2Flibrustdoc%2Fhtml%2Fhighlight.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fhighlight.rs?ref=d0a26acb2ae2d000e516eca92ae8feb08d1f6ea0", "patch": "@@ -13,7 +13,7 @@ use std::collections::VecDeque;\n use std::fmt::{Display, Write};\n \n use rustc_data_structures::fx::FxHashMap;\n-use rustc_lexer::cursor::Cursor;\n+use rustc_lexer::Cursor;\n use rustc_lexer::{LiteralKind, TokenKind};\n use rustc_span::edition::Edition;\n use rustc_span::symbol::Symbol;"}]}