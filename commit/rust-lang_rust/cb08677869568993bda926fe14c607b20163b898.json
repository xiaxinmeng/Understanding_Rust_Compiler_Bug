{"sha": "cb08677869568993bda926fe14c607b20163b898", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNiMDg2Nzc4Njk1Njg5OTNiZGE5MjZmZTE0YzYwN2IyMDE2M2I4OTg=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-11-30T13:55:05Z"}, "committer": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-11-30T13:55:05Z"}, "message": "parse_enum_item -> parse_enum_variant", "tree": {"sha": "6ea3070ced0c9cef90fe142c4015f128ecc55601", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6ea3070ced0c9cef90fe142c4015f128ecc55601"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cb08677869568993bda926fe14c607b20163b898", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cb08677869568993bda926fe14c607b20163b898", "html_url": "https://github.com/rust-lang/rust/commit/cb08677869568993bda926fe14c607b20163b898", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cb08677869568993bda926fe14c607b20163b898/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8f1bbd69e13c9e04a4c2b75612bc0c31af972439", "url": "https://api.github.com/repos/rust-lang/rust/commits/8f1bbd69e13c9e04a4c2b75612bc0c31af972439", "html_url": "https://github.com/rust-lang/rust/commit/8f1bbd69e13c9e04a4c2b75612bc0c31af972439"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "6b3e7c0789d2f1e32684b18a8c4513693351cc6e", "filename": "src/librustc_parse/parser/item.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/cb08677869568993bda926fe14c607b20163b898/src%2Flibrustc_parse%2Fparser%2Fitem.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cb08677869568993bda926fe14c607b20163b898/src%2Flibrustc_parse%2Fparser%2Fitem.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_parse%2Fparser%2Fitem.rs?ref=cb08677869568993bda926fe14c607b20163b898", "patch": "@@ -1332,7 +1332,7 @@ impl<'a> Parser<'a> {\n \n         let (variants, _) = self.parse_delim_comma_seq(\n             token::Brace,\n-            |p| p.parse_enum_item(),\n+            |p| p.parse_enum_variant(),\n         ).map_err(|e| {\n             self.recover_stmt();\n             e\n@@ -1344,7 +1344,7 @@ impl<'a> Parser<'a> {\n         Ok((id, ItemKind::Enum(enum_definition, generics), None))\n     }\n \n-    fn parse_enum_item(&mut self) -> PResult<'a, Option<Variant>> {\n+    fn parse_enum_variant(&mut self) -> PResult<'a, Option<Variant>> {\n         let variant_attrs = self.parse_outer_attributes()?;\n         let vlo = self.token.span;\n "}]}