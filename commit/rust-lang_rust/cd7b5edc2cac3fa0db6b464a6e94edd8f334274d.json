{"sha": "cd7b5edc2cac3fa0db6b464a6e94edd8f334274d", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNkN2I1ZWRjMmNhYzNmYTBkYjZiNDY0YTZlOTRlZGQ4ZjMzNDI3NGQ=", "commit": {"author": {"name": "csmoe", "email": "csmoe@msn.com", "date": "2020-01-19T04:59:59Z"}, "committer": {"name": "csmoe", "email": "csmoe@msn.com", "date": "2020-01-19T05:22:41Z"}, "message": "update test ui for raw-ptr borrow inside generator", "tree": {"sha": "12a1c38337b68bc89453d760ea076658c990d6eb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/12a1c38337b68bc89453d760ea076658c990d6eb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cd7b5edc2cac3fa0db6b464a6e94edd8f334274d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cd7b5edc2cac3fa0db6b464a6e94edd8f334274d", "html_url": "https://github.com/rust-lang/rust/commit/cd7b5edc2cac3fa0db6b464a6e94edd8f334274d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cd7b5edc2cac3fa0db6b464a6e94edd8f334274d/comments", "author": {"login": "csmoe", "id": 35686186, "node_id": "MDQ6VXNlcjM1Njg2MTg2", "avatar_url": "https://avatars.githubusercontent.com/u/35686186?v=4", "gravatar_id": "", "url": "https://api.github.com/users/csmoe", "html_url": "https://github.com/csmoe", "followers_url": "https://api.github.com/users/csmoe/followers", "following_url": "https://api.github.com/users/csmoe/following{/other_user}", "gists_url": "https://api.github.com/users/csmoe/gists{/gist_id}", "starred_url": "https://api.github.com/users/csmoe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/csmoe/subscriptions", "organizations_url": "https://api.github.com/users/csmoe/orgs", "repos_url": "https://api.github.com/users/csmoe/repos", "events_url": "https://api.github.com/users/csmoe/events{/privacy}", "received_events_url": "https://api.github.com/users/csmoe/received_events", "type": "User", "site_admin": false}, "committer": {"login": "csmoe", "id": 35686186, "node_id": "MDQ6VXNlcjM1Njg2MTg2", "avatar_url": "https://avatars.githubusercontent.com/u/35686186?v=4", "gravatar_id": "", "url": "https://api.github.com/users/csmoe", "html_url": "https://github.com/csmoe", "followers_url": "https://api.github.com/users/csmoe/followers", "following_url": "https://api.github.com/users/csmoe/following{/other_user}", "gists_url": "https://api.github.com/users/csmoe/gists{/gist_id}", "starred_url": "https://api.github.com/users/csmoe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/csmoe/subscriptions", "organizations_url": "https://api.github.com/users/csmoe/orgs", "repos_url": "https://api.github.com/users/csmoe/repos", "events_url": "https://api.github.com/users/csmoe/events{/privacy}", "received_events_url": "https://api.github.com/users/csmoe/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "42b6ed13be779499d118af721913a66bd3d946ea", "url": "https://api.github.com/repos/rust-lang/rust/commits/42b6ed13be779499d118af721913a66bd3d946ea", "html_url": "https://github.com/rust-lang/rust/commit/42b6ed13be779499d118af721913a66bd3d946ea"}], "stats": {"total": 46, "additions": 44, "deletions": 2}, "files": [{"sha": "ce961112670ab88b4f05ac4fac885de6523e8225", "filename": "src/librustc/traits/error_reporting/suggestions.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/cd7b5edc2cac3fa0db6b464a6e94edd8f334274d/src%2Flibrustc%2Ftraits%2Ferror_reporting%2Fsuggestions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cd7b5edc2cac3fa0db6b464a6e94edd8f334274d/src%2Flibrustc%2Ftraits%2Ferror_reporting%2Fsuggestions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Ftraits%2Ferror_reporting%2Fsuggestions.rs?ref=cd7b5edc2cac3fa0db6b464a6e94edd8f334274d", "patch": "@@ -12,8 +12,8 @@ use rustc_errors::{\n     error_code, pluralize, struct_span_err, Applicability, DiagnosticBuilder, Style,\n };\n use rustc_hir as hir;\n-use rustc_hir::def_id::DefId;\n use rustc_hir::def::DefKind;\n+use rustc_hir::def_id::DefId;\n use rustc_hir::intravisit::Visitor;\n use rustc_hir::Node;\n use rustc_span::source_map::SourceMap;"}, {"sha": "1e52d74f1559c7dd3d9b766007fad3aa9b90b069", "filename": "src/test/ui/async-await/issue-64130-4-async-move.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/cd7b5edc2cac3fa0db6b464a6e94edd8f334274d/src%2Ftest%2Fui%2Fasync-await%2Fissue-64130-4-async-move.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/cd7b5edc2cac3fa0db6b464a6e94edd8f334274d/src%2Ftest%2Fui%2Fasync-await%2Fissue-64130-4-async-move.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fasync-await%2Fissue-64130-4-async-move.stderr?ref=cd7b5edc2cac3fa0db6b464a6e94edd8f334274d", "patch": "@@ -25,7 +25,7 @@ LL |                 let _x = get().await;\n ...\n LL |     }\n    |     - `client` is later dropped here\n-help: consider moving this method call into a `let` binding to create a shorter lived borrow\n+help: consider moving this into a `let` binding to create a shorter lived borrow\n   --> $DIR/issue-64130-4-async-move.rs:19:15\n    |\n LL |         match client.status() {"}, {"sha": "3a814b47517ba43885ae8f4b474d50c11d8b427a", "filename": "src/test/ui/async-await/issues/issue-65436-raw-ptr-not-send.rs", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/cd7b5edc2cac3fa0db6b464a6e94edd8f334274d/src%2Ftest%2Fui%2Fasync-await%2Fissues%2Fissue-65436-raw-ptr-not-send.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cd7b5edc2cac3fa0db6b464a6e94edd8f334274d/src%2Ftest%2Fui%2Fasync-await%2Fissues%2Fissue-65436-raw-ptr-not-send.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fasync-await%2Fissues%2Fissue-65436-raw-ptr-not-send.rs?ref=cd7b5edc2cac3fa0db6b464a6e94edd8f334274d", "patch": "@@ -0,0 +1,16 @@\n+// edition:2018\n+\n+struct Foo(*const u8);\n+\n+unsafe impl Send for Foo {}\n+\n+async fn bar(_: Foo) {}\n+\n+fn assert_send<T: Send>(_: T) {}\n+\n+fn main() {\n+    assert_send(async {\n+    //~^ ERROR future cannot be sent between threads safely\n+        bar(Foo(std::ptr::null())).await;\n+    })\n+}"}, {"sha": "7638ba1fe7de886ae90c89799e0c8bdf404b2e16", "filename": "src/test/ui/async-await/issues/issue-65436-raw-ptr-not-send.stderr", "status": "added", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/cd7b5edc2cac3fa0db6b464a6e94edd8f334274d/src%2Ftest%2Fui%2Fasync-await%2Fissues%2Fissue-65436-raw-ptr-not-send.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/cd7b5edc2cac3fa0db6b464a6e94edd8f334274d/src%2Ftest%2Fui%2Fasync-await%2Fissues%2Fissue-65436-raw-ptr-not-send.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fasync-await%2Fissues%2Fissue-65436-raw-ptr-not-send.stderr?ref=cd7b5edc2cac3fa0db6b464a6e94edd8f334274d", "patch": "@@ -0,0 +1,26 @@\n+error: future cannot be sent between threads safely\n+  --> $DIR/issue-65436-raw-ptr-not-send.rs:12:5\n+   |\n+LL | fn assert_send<T: Send>(_: T) {}\n+   |    -----------    ---- required by this bound in `assert_send`\n+...\n+LL |     assert_send(async {\n+   |     ^^^^^^^^^^^ future returned by `main` is not `Send`\n+   |\n+   = help: within `impl std::future::Future`, the trait `std::marker::Send` is not implemented for `*const u8`\n+note: future is not `Send` as this value is used across an await\n+  --> $DIR/issue-65436-raw-ptr-not-send.rs:14:9\n+   |\n+LL |         bar(Foo(std::ptr::null())).await;\n+   |         ^^^^^^^^----------------^^^^^^^^- `std::ptr::null()` is later dropped here\n+   |         |       |\n+   |         |       has type `*const u8`\n+   |         await occurs here, with `std::ptr::null()` maybe used later\n+help: consider moving this into a `let` binding to create a shorter lived borrow\n+  --> $DIR/issue-65436-raw-ptr-not-send.rs:14:13\n+   |\n+LL |         bar(Foo(std::ptr::null())).await;\n+   |             ^^^^^^^^^^^^^^^^^^^^^\n+\n+error: aborting due to previous error\n+"}]}