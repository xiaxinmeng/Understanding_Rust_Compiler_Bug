{"sha": "f3e2ccd54e785cc7120f30ad41cd8b28bb2bbcd0", "node_id": "MDY6Q29tbWl0NzI0NzEyOmYzZTJjY2Q1NGU3ODVjYzcxMjBmMzBhZDQxY2Q4YjI4YmIyYmJjZDA=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-01-31T20:35:22Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-01-31T20:35:22Z"}, "message": "Auto merge of #5116 - matthiaskrgr:rustup_29, r=flip1995\n\nupdate test stderr\n\nchangelog: none", "tree": {"sha": "9052f774bb37b95f1365e95b8ab592179b4bce44", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9052f774bb37b95f1365e95b8ab592179b4bce44"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f3e2ccd54e785cc7120f30ad41cd8b28bb2bbcd0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f3e2ccd54e785cc7120f30ad41cd8b28bb2bbcd0", "html_url": "https://github.com/rust-lang/rust/commit/f3e2ccd54e785cc7120f30ad41cd8b28bb2bbcd0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f3e2ccd54e785cc7120f30ad41cd8b28bb2bbcd0/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5826a0472dbdda1aa306a03b370f4eb65e895f20", "url": "https://api.github.com/repos/rust-lang/rust/commits/5826a0472dbdda1aa306a03b370f4eb65e895f20", "html_url": "https://github.com/rust-lang/rust/commit/5826a0472dbdda1aa306a03b370f4eb65e895f20"}, {"sha": "187983e9919fd181fba69c1d8a71a68aa45ac77b", "url": "https://api.github.com/repos/rust-lang/rust/commits/187983e9919fd181fba69c1d8a71a68aa45ac77b", "html_url": "https://github.com/rust-lang/rust/commit/187983e9919fd181fba69c1d8a71a68aa45ac77b"}], "stats": {"total": 58, "additions": 29, "deletions": 29}, "files": [{"sha": "89171ddd7c6aba2bc3a8c4ee4dfca2d03ddbc746", "filename": "tests/ui/borrow_box.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f3e2ccd54e785cc7120f30ad41cd8b28bb2bbcd0/tests%2Fui%2Fborrow_box.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f3e2ccd54e785cc7120f30ad41cd8b28bb2bbcd0/tests%2Fui%2Fborrow_box.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fborrow_box.stderr?ref=f3e2ccd54e785cc7120f30ad41cd8b28bb2bbcd0", "patch": "@@ -4,7 +4,7 @@ error: you seem to be trying to use `&Box<T>`. Consider using just `&T`\n LL | pub fn test1(foo: &mut Box<bool>) {\n    |                   ^^^^^^^^^^^^^^ help: try: `&mut bool`\n    |\n-note: lint level defined here\n+note: the lint level is defined here\n   --> $DIR/borrow_box.rs:1:9\n    |\n LL | #![deny(clippy::borrowed_box)]"}, {"sha": "436f5d86a062760926b60ad31cf8ec8211bbed06", "filename": "tests/ui/bytecount.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f3e2ccd54e785cc7120f30ad41cd8b28bb2bbcd0/tests%2Fui%2Fbytecount.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f3e2ccd54e785cc7120f30ad41cd8b28bb2bbcd0/tests%2Fui%2Fbytecount.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fbytecount.stderr?ref=f3e2ccd54e785cc7120f30ad41cd8b28bb2bbcd0", "patch": "@@ -4,7 +4,7 @@ error: You appear to be counting bytes the naive way\n LL |     let _ = x.iter().filter(|&&a| a == 0).count(); // naive byte count\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: Consider using the bytecount crate: `bytecount::count(x, 0)`\n    |\n-note: lint level defined here\n+note: the lint level is defined here\n   --> $DIR/bytecount.rs:1:8\n    |\n LL | #[deny(clippy::naive_bytecount)]"}, {"sha": "4e53bd769e270472d90a9864c858da5c6946cbef", "filename": "tests/ui/checked_unwrap/complex_conditionals.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f3e2ccd54e785cc7120f30ad41cd8b28bb2bbcd0/tests%2Fui%2Fchecked_unwrap%2Fcomplex_conditionals.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f3e2ccd54e785cc7120f30ad41cd8b28bb2bbcd0/tests%2Fui%2Fchecked_unwrap%2Fcomplex_conditionals.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fchecked_unwrap%2Fcomplex_conditionals.stderr?ref=f3e2ccd54e785cc7120f30ad41cd8b28bb2bbcd0", "patch": "@@ -6,7 +6,7 @@ LL |     if x.is_ok() && y.is_err() {\n LL |         x.unwrap(); // unnecessary\n    |         ^^^^^^^^^^\n    |\n-note: lint level defined here\n+note: the lint level is defined here\n   --> $DIR/complex_conditionals.rs:1:35\n    |\n LL | #![deny(clippy::panicking_unwrap, clippy::unnecessary_unwrap)]\n@@ -21,7 +21,7 @@ LL |         x.unwrap(); // unnecessary\n LL |         x.unwrap_err(); // will panic\n    |         ^^^^^^^^^^^^^^\n    |\n-note: lint level defined here\n+note: the lint level is defined here\n   --> $DIR/complex_conditionals.rs:1:9\n    |\n LL | #![deny(clippy::panicking_unwrap, clippy::unnecessary_unwrap)]"}, {"sha": "c25543304963c92d037e8fdd410f1e54fa152407", "filename": "tests/ui/checked_unwrap/simple_conditionals.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f3e2ccd54e785cc7120f30ad41cd8b28bb2bbcd0/tests%2Fui%2Fchecked_unwrap%2Fsimple_conditionals.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f3e2ccd54e785cc7120f30ad41cd8b28bb2bbcd0/tests%2Fui%2Fchecked_unwrap%2Fsimple_conditionals.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fchecked_unwrap%2Fsimple_conditionals.stderr?ref=f3e2ccd54e785cc7120f30ad41cd8b28bb2bbcd0", "patch": "@@ -6,7 +6,7 @@ LL |     if x.is_some() {\n LL |         x.unwrap(); // unnecessary\n    |         ^^^^^^^^^^\n    |\n-note: lint level defined here\n+note: the lint level is defined here\n   --> $DIR/simple_conditionals.rs:1:35\n    |\n LL | #![deny(clippy::panicking_unwrap, clippy::unnecessary_unwrap)]\n@@ -21,7 +21,7 @@ LL |     if x.is_some() {\n LL |         x.unwrap(); // will panic\n    |         ^^^^^^^^^^\n    |\n-note: lint level defined here\n+note: the lint level is defined here\n   --> $DIR/simple_conditionals.rs:1:9\n    |\n LL | #![deny(clippy::panicking_unwrap, clippy::unnecessary_unwrap)]"}, {"sha": "87cb29be57758a3f9679a2d95cebd4fe2caf321a", "filename": "tests/ui/cstring.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f3e2ccd54e785cc7120f30ad41cd8b28bb2bbcd0/tests%2Fui%2Fcstring.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f3e2ccd54e785cc7120f30ad41cd8b28bb2bbcd0/tests%2Fui%2Fcstring.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fcstring.stderr?ref=f3e2ccd54e785cc7120f30ad41cd8b28bb2bbcd0", "patch": "@@ -4,7 +4,7 @@ error: you are getting the inner pointer of a temporary `CString`\n LL |     CString::new(\"foo\").unwrap().as_ptr();\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n-note: lint level defined here\n+note: the lint level is defined here\n   --> $DIR/cstring.rs:1:9\n    |\n LL | #![deny(clippy::temporary_cstring_as_ptr)]"}, {"sha": "a37759db24b24f039f33040a26ea4ffac5b2aabb", "filename": "tests/ui/default_lint.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f3e2ccd54e785cc7120f30ad41cd8b28bb2bbcd0/tests%2Fui%2Fdefault_lint.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f3e2ccd54e785cc7120f30ad41cd8b28bb2bbcd0/tests%2Fui%2Fdefault_lint.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fdefault_lint.stderr?ref=f3e2ccd54e785cc7120f30ad41cd8b28bb2bbcd0", "patch": "@@ -9,7 +9,7 @@ LL | |     report_in_external_macro: true\n LL | | }\n    | |_^\n    |\n-note: lint level defined here\n+note: the lint level is defined here\n   --> $DIR/default_lint.rs:1:9\n    |\n LL | #![deny(clippy::internal)]"}, {"sha": "4142f7ede11600981682015c88e24c491c0b4fe4", "filename": "tests/ui/fallible_impl_from.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f3e2ccd54e785cc7120f30ad41cd8b28bb2bbcd0/tests%2Fui%2Ffallible_impl_from.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f3e2ccd54e785cc7120f30ad41cd8b28bb2bbcd0/tests%2Fui%2Ffallible_impl_from.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ffallible_impl_from.stderr?ref=f3e2ccd54e785cc7120f30ad41cd8b28bb2bbcd0", "patch": "@@ -8,7 +8,7 @@ LL | |     }\n LL | | }\n    | |_^\n    |\n-note: lint level defined here\n+note: the lint level is defined here\n   --> $DIR/fallible_impl_from.rs:1:9\n    |\n LL | #![deny(clippy::fallible_impl_from)]"}, {"sha": "76a098df82aa199adb0186eb098b0e540fc6ba91", "filename": "tests/ui/get_unwrap.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f3e2ccd54e785cc7120f30ad41cd8b28bb2bbcd0/tests%2Fui%2Fget_unwrap.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f3e2ccd54e785cc7120f30ad41cd8b28bb2bbcd0/tests%2Fui%2Fget_unwrap.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fget_unwrap.stderr?ref=f3e2ccd54e785cc7120f30ad41cd8b28bb2bbcd0", "patch": "@@ -4,7 +4,7 @@ error: called `.get().unwrap()` on a slice. Using `[]` is more clear and more co\n LL |         let _ = boxed_slice.get(1).unwrap();\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try this: `&boxed_slice[1]`\n    |\n-note: lint level defined here\n+note: the lint level is defined here\n   --> $DIR/get_unwrap.rs:3:9\n    |\n LL | #![deny(clippy::get_unwrap)]"}, {"sha": "57626b23795cf5ce4a0c6743998acddbc0e69491", "filename": "tests/ui/identity_conversion.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f3e2ccd54e785cc7120f30ad41cd8b28bb2bbcd0/tests%2Fui%2Fidentity_conversion.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f3e2ccd54e785cc7120f30ad41cd8b28bb2bbcd0/tests%2Fui%2Fidentity_conversion.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fidentity_conversion.stderr?ref=f3e2ccd54e785cc7120f30ad41cd8b28bb2bbcd0", "patch": "@@ -4,7 +4,7 @@ error: identical conversion\n LL |     let _ = T::from(val);\n    |             ^^^^^^^^^^^^ help: consider removing `T::from()`: `val`\n    |\n-note: lint level defined here\n+note: the lint level is defined here\n   --> $DIR/identity_conversion.rs:3:9\n    |\n LL | #![deny(clippy::identity_conversion)]"}, {"sha": "1c0490ffa44ccbbf8096ac7d360e5f5017caa1c6", "filename": "tests/ui/inefficient_to_string.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f3e2ccd54e785cc7120f30ad41cd8b28bb2bbcd0/tests%2Fui%2Finefficient_to_string.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f3e2ccd54e785cc7120f30ad41cd8b28bb2bbcd0/tests%2Fui%2Finefficient_to_string.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Finefficient_to_string.stderr?ref=f3e2ccd54e785cc7120f30ad41cd8b28bb2bbcd0", "patch": "@@ -4,7 +4,7 @@ error: calling `to_string` on `&&str`\n LL |     let _: String = rrstr.to_string();\n    |                     ^^^^^^^^^^^^^^^^^ help: try dereferencing the receiver: `(*rrstr).to_string()`\n    |\n-note: lint level defined here\n+note: the lint level is defined here\n   --> $DIR/inefficient_to_string.rs:2:9\n    |\n LL | #![deny(clippy::inefficient_to_string)]"}, {"sha": "4750316d3f4e57a6e82d449655af6dd08a3be032", "filename": "tests/ui/infinite_iter.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f3e2ccd54e785cc7120f30ad41cd8b28bb2bbcd0/tests%2Fui%2Finfinite_iter.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f3e2ccd54e785cc7120f30ad41cd8b28bb2bbcd0/tests%2Fui%2Finfinite_iter.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Finfinite_iter.stderr?ref=f3e2ccd54e785cc7120f30ad41cd8b28bb2bbcd0", "patch": "@@ -4,7 +4,7 @@ error: infinite iteration detected\n LL |     repeat(0_u8).collect::<Vec<_>>(); // infinite iter\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n-note: lint level defined here\n+note: the lint level is defined here\n   --> $DIR/infinite_iter.rs:8:8\n    |\n LL | #[deny(clippy::infinite_iter)]\n@@ -50,7 +50,7 @@ error: possible infinite iteration detected\n LL |     (0..).zip((0..).take_while(square_is_lower_64)).count(); // maybe infinite iter\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n-note: lint level defined here\n+note: the lint level is defined here\n   --> $DIR/infinite_iter.rs:29:8\n    |\n LL | #[deny(clippy::maybe_infinite_iter)]"}, {"sha": "4f331f5bec9e6fe87073d1cdb63991862db4bf28", "filename": "tests/ui/inherent_to_string.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f3e2ccd54e785cc7120f30ad41cd8b28bb2bbcd0/tests%2Fui%2Finherent_to_string.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f3e2ccd54e785cc7120f30ad41cd8b28bb2bbcd0/tests%2Fui%2Finherent_to_string.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Finherent_to_string.stderr?ref=f3e2ccd54e785cc7120f30ad41cd8b28bb2bbcd0", "patch": "@@ -17,7 +17,7 @@ LL | |         \"C.to_string()\".to_string()\n LL | |     }\n    | |_____^\n    |\n-note: lint level defined here\n+note: the lint level is defined here\n   --> $DIR/inherent_to_string.rs:2:9\n    |\n LL | #![deny(clippy::inherent_to_string_shadow_display)]"}, {"sha": "c8c00f78035cae5f265c3df3e0370d625cdf6f20", "filename": "tests/ui/issue_2356.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f3e2ccd54e785cc7120f30ad41cd8b28bb2bbcd0/tests%2Fui%2Fissue_2356.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f3e2ccd54e785cc7120f30ad41cd8b28bb2bbcd0/tests%2Fui%2Fissue_2356.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fissue_2356.stderr?ref=f3e2ccd54e785cc7120f30ad41cd8b28bb2bbcd0", "patch": "@@ -4,7 +4,7 @@ error: this loop could be written as a `for` loop\n LL |         while let Some(e) = it.next() {\n    |                             ^^^^^^^^^ help: try: `for e in it { .. }`\n    |\n-note: lint level defined here\n+note: the lint level is defined here\n   --> $DIR/issue_2356.rs:1:9\n    |\n LL | #![deny(clippy::while_let_on_iterator)]"}, {"sha": "ee7593d1b95f650c2d0e1e44b4ea54189b2b9533", "filename": "tests/ui/lint_without_lint_pass.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f3e2ccd54e785cc7120f30ad41cd8b28bb2bbcd0/tests%2Fui%2Flint_without_lint_pass.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f3e2ccd54e785cc7120f30ad41cd8b28bb2bbcd0/tests%2Fui%2Flint_without_lint_pass.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Flint_without_lint_pass.stderr?ref=f3e2ccd54e785cc7120f30ad41cd8b28bb2bbcd0", "patch": "@@ -9,7 +9,7 @@ LL | |     report_in_external_macro: true\n LL | | }\n    | |_^\n    |\n-note: lint level defined here\n+note: the lint level is defined here\n   --> $DIR/lint_without_lint_pass.rs:1:9\n    |\n LL | #![deny(clippy::internal)]"}, {"sha": "1dd6610d5a30e2eaa164eba9c6229ddd265e0208", "filename": "tests/ui/mem_discriminant.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f3e2ccd54e785cc7120f30ad41cd8b28bb2bbcd0/tests%2Fui%2Fmem_discriminant.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f3e2ccd54e785cc7120f30ad41cd8b28bb2bbcd0/tests%2Fui%2Fmem_discriminant.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmem_discriminant.stderr?ref=f3e2ccd54e785cc7120f30ad41cd8b28bb2bbcd0", "patch": "@@ -6,7 +6,7 @@ LL |     mem::discriminant(&&Some(2));\n    |                       |\n    |                       help: try dereferencing: `&Some(2)`\n    |\n-note: lint level defined here\n+note: the lint level is defined here\n   --> $DIR/mem_discriminant.rs:3:9\n    |\n LL | #![deny(clippy::mem_discriminant_non_enum)]"}, {"sha": "e2de3776f2c911ac0f4684790f5a2e9162b9fbc5", "filename": "tests/ui/mem_discriminant_unfixable.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f3e2ccd54e785cc7120f30ad41cd8b28bb2bbcd0/tests%2Fui%2Fmem_discriminant_unfixable.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f3e2ccd54e785cc7120f30ad41cd8b28bb2bbcd0/tests%2Fui%2Fmem_discriminant_unfixable.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmem_discriminant_unfixable.stderr?ref=f3e2ccd54e785cc7120f30ad41cd8b28bb2bbcd0", "patch": "@@ -4,7 +4,7 @@ error: calling `mem::discriminant` on non-enum type `&str`\n LL |     mem::discriminant(&\"hello\");\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n-note: lint level defined here\n+note: the lint level is defined here\n   --> $DIR/mem_discriminant_unfixable.rs:1:9\n    |\n LL | #![deny(clippy::mem_discriminant_non_enum)]"}, {"sha": "4782549176566e91af3710f83a50a59ea9e9f25c", "filename": "tests/ui/option_and_then_some.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f3e2ccd54e785cc7120f30ad41cd8b28bb2bbcd0/tests%2Fui%2Foption_and_then_some.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f3e2ccd54e785cc7120f30ad41cd8b28bb2bbcd0/tests%2Fui%2Foption_and_then_some.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Foption_and_then_some.stderr?ref=f3e2ccd54e785cc7120f30ad41cd8b28bb2bbcd0", "patch": "@@ -4,7 +4,7 @@ error: using `Option.and_then(Some)`, which is a no-op\n LL |     let _ = x.and_then(Some);\n    |             ^^^^^^^^^^^^^^^^ help: use the expression directly: `x`\n    |\n-note: lint level defined here\n+note: the lint level is defined here\n   --> $DIR/option_and_then_some.rs:2:9\n    |\n LL | #![deny(clippy::option_and_then_some)]"}, {"sha": "56b6ce1f78ea4de38c7f1b1d0ffb666565c1f05a", "filename": "tests/ui/outer_expn_data.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f3e2ccd54e785cc7120f30ad41cd8b28bb2bbcd0/tests%2Fui%2Fouter_expn_data.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f3e2ccd54e785cc7120f30ad41cd8b28bb2bbcd0/tests%2Fui%2Fouter_expn_data.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fouter_expn_data.stderr?ref=f3e2ccd54e785cc7120f30ad41cd8b28bb2bbcd0", "patch": "@@ -4,7 +4,7 @@ error: usage of `outer_expn().expn_data()`\n LL |         let _ = expr.span.ctxt().outer_expn().expn_data();\n    |                                  ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `outer_expn_data()`\n    |\n-note: lint level defined here\n+note: the lint level is defined here\n   --> $DIR/outer_expn_data.rs:3:9\n    |\n LL | #![deny(clippy::internal)]"}, {"sha": "458f63953efadd4c1df8e3ca4ce94f6d96704dc2", "filename": "tests/ui/replace_consts.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f3e2ccd54e785cc7120f30ad41cd8b28bb2bbcd0/tests%2Fui%2Freplace_consts.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f3e2ccd54e785cc7120f30ad41cd8b28bb2bbcd0/tests%2Fui%2Freplace_consts.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Freplace_consts.stderr?ref=f3e2ccd54e785cc7120f30ad41cd8b28bb2bbcd0", "patch": "@@ -4,7 +4,7 @@ error: using `MIN`\n LL |     { let foo = std::isize::MIN; };\n    |                 ^^^^^^^^^^^^^^^ help: try this: `isize::min_value()`\n    |\n-note: lint level defined here\n+note: the lint level is defined here\n   --> $DIR/replace_consts.rs:4:9\n    |\n LL | #![deny(clippy::replace_consts)]"}, {"sha": "21e9d4048a5887bdc49d3a0e10f1a43f4f48df2f", "filename": "tests/ui/try_err.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f3e2ccd54e785cc7120f30ad41cd8b28bb2bbcd0/tests%2Fui%2Ftry_err.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f3e2ccd54e785cc7120f30ad41cd8b28bb2bbcd0/tests%2Fui%2Ftry_err.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ftry_err.stderr?ref=f3e2ccd54e785cc7120f30ad41cd8b28bb2bbcd0", "patch": "@@ -4,7 +4,7 @@ error: returning an `Err(_)` with the `?` operator\n LL |         Err(err)?;\n    |         ^^^^^^^^^ help: try this: `return Err(err)`\n    |\n-note: lint level defined here\n+note: the lint level is defined here\n   --> $DIR/try_err.rs:4:9\n    |\n LL | #![deny(clippy::try_err)]"}, {"sha": "4264e2e10bf17ebe8978e02132323f502ab0d2e9", "filename": "tests/ui/type_repetition_in_bounds.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f3e2ccd54e785cc7120f30ad41cd8b28bb2bbcd0/tests%2Fui%2Ftype_repetition_in_bounds.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f3e2ccd54e785cc7120f30ad41cd8b28bb2bbcd0/tests%2Fui%2Ftype_repetition_in_bounds.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ftype_repetition_in_bounds.stderr?ref=f3e2ccd54e785cc7120f30ad41cd8b28bb2bbcd0", "patch": "@@ -4,7 +4,7 @@ error: this type has already been used as a bound predicate\n LL |     T: Clone,\n    |     ^^^^^^^^\n    |\n-note: lint level defined here\n+note: the lint level is defined here\n   --> $DIR/type_repetition_in_bounds.rs:1:8\n    |\n LL | #[deny(clippy::type_repetition_in_bounds)]"}, {"sha": "34ba167a947906602a4267f2a3125906f653432a", "filename": "tests/ui/unnecessary_ref.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f3e2ccd54e785cc7120f30ad41cd8b28bb2bbcd0/tests%2Fui%2Funnecessary_ref.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f3e2ccd54e785cc7120f30ad41cd8b28bb2bbcd0/tests%2Fui%2Funnecessary_ref.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Funnecessary_ref.stderr?ref=f3e2ccd54e785cc7120f30ad41cd8b28bb2bbcd0", "patch": "@@ -4,7 +4,7 @@ error: Creating a reference that is immediately dereferenced.\n LL |     let inner = (&outer).inner;\n    |                 ^^^^^^^^ help: try this: `outer`\n    |\n-note: lint level defined here\n+note: the lint level is defined here\n   --> $DIR/unnecessary_ref.rs:10:8\n    |\n LL | #[deny(clippy::ref_in_deref)]"}, {"sha": "716d9ecff89af617464eb6c57d5ca7b1546eec26", "filename": "tests/ui/unneeded_wildcard_pattern.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f3e2ccd54e785cc7120f30ad41cd8b28bb2bbcd0/tests%2Fui%2Funneeded_wildcard_pattern.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f3e2ccd54e785cc7120f30ad41cd8b28bb2bbcd0/tests%2Fui%2Funneeded_wildcard_pattern.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Funneeded_wildcard_pattern.stderr?ref=f3e2ccd54e785cc7120f30ad41cd8b28bb2bbcd0", "patch": "@@ -4,7 +4,7 @@ error: this pattern is unneeded as the `..` pattern can match that element\n LL |     if let (0, .., _) = t {};\n    |                  ^^^ help: remove it\n    |\n-note: lint level defined here\n+note: the lint level is defined here\n   --> $DIR/unneeded_wildcard_pattern.rs:3:9\n    |\n LL | #![deny(clippy::unneeded_wildcard_pattern)]"}, {"sha": "a013d2b3495ba40a4d824e042e71ce6f3d7e873e", "filename": "tests/ui/unused_unit.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f3e2ccd54e785cc7120f30ad41cd8b28bb2bbcd0/tests%2Fui%2Funused_unit.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f3e2ccd54e785cc7120f30ad41cd8b28bb2bbcd0/tests%2Fui%2Funused_unit.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Funused_unit.stderr?ref=f3e2ccd54e785cc7120f30ad41cd8b28bb2bbcd0", "patch": "@@ -6,7 +6,7 @@ LL |       pub fn get_unit<F: Fn() -> (), G>(&self, f: F, _g: G) ->\n LL | |         ()\n    | |__________^ help: remove the `-> ()`\n    |\n-note: lint level defined here\n+note: the lint level is defined here\n   --> $DIR/unused_unit.rs:12:9\n    |\n LL | #![deny(clippy::unused_unit)]"}, {"sha": "b21c67bb3645f0bee32311879842ecd86ebaf87c", "filename": "tests/ui/useless_asref.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f3e2ccd54e785cc7120f30ad41cd8b28bb2bbcd0/tests%2Fui%2Fuseless_asref.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f3e2ccd54e785cc7120f30ad41cd8b28bb2bbcd0/tests%2Fui%2Fuseless_asref.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fuseless_asref.stderr?ref=f3e2ccd54e785cc7120f30ad41cd8b28bb2bbcd0", "patch": "@@ -4,7 +4,7 @@ error: this call to `as_ref` does nothing\n LL |         foo_rstr(rstr.as_ref());\n    |                  ^^^^^^^^^^^^^ help: try this: `rstr`\n    |\n-note: lint level defined here\n+note: the lint level is defined here\n   --> $DIR/useless_asref.rs:3:9\n    |\n LL | #![deny(clippy::useless_asref)]"}, {"sha": "7151a5c5770bf3ad217c8eca4088df24cee6ecf6", "filename": "tests/ui/wildcard_enum_match_arm.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f3e2ccd54e785cc7120f30ad41cd8b28bb2bbcd0/tests%2Fui%2Fwildcard_enum_match_arm.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f3e2ccd54e785cc7120f30ad41cd8b28bb2bbcd0/tests%2Fui%2Fwildcard_enum_match_arm.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fwildcard_enum_match_arm.stderr?ref=f3e2ccd54e785cc7120f30ad41cd8b28bb2bbcd0", "patch": "@@ -4,7 +4,7 @@ error: wildcard match will miss any future added variants\n LL |         _ => eprintln!(\"Not red\"),\n    |         ^ help: try this: `Color::Green | Color::Blue | Color::Rgb(..) | Color::Cyan`\n    |\n-note: lint level defined here\n+note: the lint level is defined here\n   --> $DIR/wildcard_enum_match_arm.rs:3:9\n    |\n LL | #![deny(clippy::wildcard_enum_match_arm)]"}]}