{"sha": "1ef3598ed9da3222467d373bc02973e8ecffbaad", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFlZjM1OThlZDlkYTMyMjI0NjdkMzczYmMwMjk3M2U4ZWNmZmJhYWQ=", "commit": {"author": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2015-02-24T21:27:02Z"}, "committer": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2015-02-24T21:27:23Z"}, "message": "Merge conflicts due to eddyb's UFCS branch", "tree": {"sha": "846deaedec5537e804e9a465d27808175b11e02d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/846deaedec5537e804e9a465d27808175b11e02d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1ef3598ed9da3222467d373bc02973e8ecffbaad", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1ef3598ed9da3222467d373bc02973e8ecffbaad", "html_url": "https://github.com/rust-lang/rust/commit/1ef3598ed9da3222467d373bc02973e8ecffbaad", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1ef3598ed9da3222467d373bc02973e8ecffbaad/comments", "author": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "abdb42ba6402e5c16c10ec19643a4da1f855d653", "url": "https://api.github.com/repos/rust-lang/rust/commits/abdb42ba6402e5c16c10ec19643a4da1f855d653", "html_url": "https://github.com/rust-lang/rust/commit/abdb42ba6402e5c16c10ec19643a4da1f855d653"}], "stats": {"total": 20, "additions": 11, "deletions": 9}, "files": [{"sha": "844635117b5e988545db9576d2c9cc6d7858a428", "filename": "src/librustc_typeck/astconv.rs", "status": "modified", "additions": 9, "deletions": 7, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/1ef3598ed9da3222467d373bc02973e8ecffbaad/src%2Flibrustc_typeck%2Fastconv.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ef3598ed9da3222467d373bc02973e8ecffbaad/src%2Flibrustc_typeck%2Fastconv.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fastconv.rs?ref=1ef3598ed9da3222467d373bc02973e8ecffbaad", "patch": "@@ -688,7 +688,7 @@ fn ast_path_to_trait_ref<'a,'tcx>(\n     -> Rc<ty::TraitRef<'tcx>>\n {\n     debug!(\"ast_path_to_trait_ref {:?}\", trait_segment);\n-    let trait_def = match this.get_trait_def(path.span, trait_def_id) {\n+    let trait_def = match this.get_trait_def(span, trait_def_id) {\n         Ok(trait_def) => trait_def,\n         Err(ErrorReported) => {\n             // No convenient way to recover from a cycle here. Just bail. Sorry!\n@@ -873,17 +873,19 @@ fn ast_path_to_ty<'tcx>(\n     -> Ty<'tcx>\n {\n     let tcx = this.tcx();\n-    let substs = match this.get_item_type_scheme(path.span, did) {\n+    let (generics, decl_ty) = match this.get_item_type_scheme(span, did) {\n         Ok(ty::TypeScheme { generics,  ty: decl_ty }) => {\n-            ast_path_substs_for_ty(this, rscope,\n-                                   span, param_mode,\n-                                   &generics, item_segment)\n+            (generics, decl_ty)\n         }\n         Err(ErrorReported) => {\n-            return TypeAndSubsts { substs: Substs::empty(), ty: tcx.types.err };\n+            return tcx.types.err;\n         }\n     };\n \n+    let substs = ast_path_substs_for_ty(this, rscope,\n+                                        span, param_mode,\n+                                        &generics, item_segment);\n+\n     // FIXME(#12938): This is a hack until we have full support for DST.\n     if Some(did) == this.tcx().lang_items.owned_box() {\n         assert_eq!(substs.types.len(TypeSpace), 1);\n@@ -1020,7 +1022,7 @@ fn associated_path_def_to_ty<'tcx>(this: &AstConv<'tcx>,\n \n     // FIXME(#20300) -- search where clauses, not bounds\n     let bounds =\n-        this.get_type_parameter_bounds(ast_ty.span, ty_param_ndoe_id)\n+        this.get_type_parameter_bounds(span, ty_param_node_id)\n             .unwrap_or(Vec::new());\n \n     let mut suitable_bounds: Vec<_> ="}, {"sha": "fd6ba79ec21bb87955d3c237fa1ca707edc1a5f4", "filename": "src/librustc_typeck/check/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1ef3598ed9da3222467d373bc02973e8ecffbaad/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ef3598ed9da3222467d373bc02973e8ecffbaad/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs?ref=1ef3598ed9da3222467d373bc02973e8ecffbaad", "patch": "@@ -3637,7 +3637,7 @@ fn check_expr_with_unifier<'a, 'tcx, F>(fcx: &FnCtxt<'a, 'tcx>,\n                 }\n             } else {\n               tcx.sess.span_bug(expr.span,\n-                                &format!(\"unbound path {}\", expr.repr(tcx))[])\n+                                &format!(\"unbound path {}\", expr.repr(tcx)))\n           };\n \n           let mut def = path_res.base_def;"}, {"sha": "74fed6cbf3937364db6459f02cb83cd4b3975509", "filename": "src/librustc_typeck/collect.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1ef3598ed9da3222467d373bc02973e8ecffbaad/src%2Flibrustc_typeck%2Fcollect.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ef3598ed9da3222467d373bc02973e8ecffbaad/src%2Flibrustc_typeck%2Fcollect.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcollect.rs?ref=1ef3598ed9da3222467d373bc02973e8ecffbaad", "patch": "@@ -504,7 +504,7 @@ fn is_param<'tcx>(tcx: &ty::ctxt<'tcx>,\n                   -> bool\n {\n     if let ast::TyPath(None, _) = ast_ty.node {\n-        let path_res = ccx.tcx.def_map.borrow()[ast_ty.id];\n+        let path_res = tcx.def_map.borrow()[ast_ty.id];\n         if let def::DefTyParam(_, _, def_id, _) = path_res.base_def {\n             path_res.depth == 0 && def_id == local_def(param_id)\n         } else {"}]}