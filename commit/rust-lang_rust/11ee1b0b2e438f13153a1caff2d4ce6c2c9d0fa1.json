{"sha": "11ee1b0b2e438f13153a1caff2d4ce6c2c9d0fa1", "node_id": "MDY6Q29tbWl0NzI0NzEyOjExZWUxYjBiMmU0MzhmMTMxNTNhMWNhZmYyZDRjZTZjMmM5ZDBmYTE=", "commit": {"author": {"name": "Campbell Barton", "email": "ideasman42@gmail.com", "date": "2017-06-10T20:17:12Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2017-06-10T20:17:12Z"}, "message": "Add missing term 'disjoint' from matches, rmatches\n\nThis follows `match_indices`", "tree": {"sha": "d850fd141c05fdc0b9562efce60c45b271fec323", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d850fd141c05fdc0b9562efce60c45b271fec323"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/11ee1b0b2e438f13153a1caff2d4ce6c2c9d0fa1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/11ee1b0b2e438f13153a1caff2d4ce6c2c9d0fa1", "html_url": "https://github.com/rust-lang/rust/commit/11ee1b0b2e438f13153a1caff2d4ce6c2c9d0fa1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/11ee1b0b2e438f13153a1caff2d4ce6c2c9d0fa1/comments", "author": {"login": "ideasman42", "id": 1869379, "node_id": "MDQ6VXNlcjE4NjkzNzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1869379?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ideasman42", "html_url": "https://github.com/ideasman42", "followers_url": "https://api.github.com/users/ideasman42/followers", "following_url": "https://api.github.com/users/ideasman42/following{/other_user}", "gists_url": "https://api.github.com/users/ideasman42/gists{/gist_id}", "starred_url": "https://api.github.com/users/ideasman42/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ideasman42/subscriptions", "organizations_url": "https://api.github.com/users/ideasman42/orgs", "repos_url": "https://api.github.com/users/ideasman42/repos", "events_url": "https://api.github.com/users/ideasman42/events{/privacy}", "received_events_url": "https://api.github.com/users/ideasman42/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "995f741a0e3a57d4142c0590b3266514fa0a0e29", "url": "https://api.github.com/repos/rust-lang/rust/commits/995f741a0e3a57d4142c0590b3266514fa0a0e29", "html_url": "https://github.com/rust-lang/rust/commit/995f741a0e3a57d4142c0590b3266514fa0a0e29"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "fdb6ee42127b9163357ca879087cb38f135f59b9", "filename": "src/libcollections/str.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/11ee1b0b2e438f13153a1caff2d4ce6c2c9d0fa1/src%2Flibcollections%2Fstr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/11ee1b0b2e438f13153a1caff2d4ce6c2c9d0fa1/src%2Flibcollections%2Fstr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcollections%2Fstr.rs?ref=11ee1b0b2e438f13153a1caff2d4ce6c2c9d0fa1", "patch": "@@ -1320,7 +1320,7 @@ impl str {\n         core_str::StrExt::rsplitn(self, n, pat)\n     }\n \n-    /// An iterator over the matches of a pattern within the given string\n+    /// An iterator over the disjoint matches of a pattern within the given string\n     /// slice.\n     ///\n     /// The pattern can be a `&str`, [`char`], or a closure that\n@@ -1359,7 +1359,7 @@ impl str {\n         core_str::StrExt::matches(self, pat)\n     }\n \n-    /// An iterator over the matches of a pattern within this string slice,\n+    /// An iterator over the disjoint matches of a pattern within this string slice,\n     /// yielded in reverse order.\n     ///\n     /// The pattern can be a `&str`, [`char`], or a closure that determines if"}]}