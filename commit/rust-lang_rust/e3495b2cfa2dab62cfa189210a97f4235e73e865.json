{"sha": "e3495b2cfa2dab62cfa189210a97f4235e73e865", "node_id": "MDY6Q29tbWl0NzI0NzEyOmUzNDk1YjJjZmEyZGFiNjJjZmExODkyMTBhOTdmNDIzNWU3M2U4NjU=", "commit": {"author": {"name": "Ariel Ben-Yehuda", "email": "ariel.byd@gmail.com", "date": "2017-08-14T11:10:05Z"}, "committer": {"name": "Ariel Ben-Yehuda", "email": "ariel.byd@gmail.com", "date": "2017-08-14T11:10:05Z"}, "message": "emit StorageLive for box temporaries\n\nWe started emitting StorageDead, so we better emit the corrseponding\nStorageLive to avoid problems.", "tree": {"sha": "0b9fca7ddf93b58444eb2f8ddf53406e5a909a07", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0b9fca7ddf93b58444eb2f8ddf53406e5a909a07"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e3495b2cfa2dab62cfa189210a97f4235e73e865", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e3495b2cfa2dab62cfa189210a97f4235e73e865", "html_url": "https://github.com/rust-lang/rust/commit/e3495b2cfa2dab62cfa189210a97f4235e73e865", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e3495b2cfa2dab62cfa189210a97f4235e73e865/comments", "author": {"login": "arielb1", "id": 1830974, "node_id": "MDQ6VXNlcjE4MzA5NzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1830974?v=4", "gravatar_id": "", "url": "https://api.github.com/users/arielb1", "html_url": "https://github.com/arielb1", "followers_url": "https://api.github.com/users/arielb1/followers", "following_url": "https://api.github.com/users/arielb1/following{/other_user}", "gists_url": "https://api.github.com/users/arielb1/gists{/gist_id}", "starred_url": "https://api.github.com/users/arielb1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/arielb1/subscriptions", "organizations_url": "https://api.github.com/users/arielb1/orgs", "repos_url": "https://api.github.com/users/arielb1/repos", "events_url": "https://api.github.com/users/arielb1/events{/privacy}", "received_events_url": "https://api.github.com/users/arielb1/received_events", "type": "User", "site_admin": false}, "committer": {"login": "arielb1", "id": 1830974, "node_id": "MDQ6VXNlcjE4MzA5NzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1830974?v=4", "gravatar_id": "", "url": "https://api.github.com/users/arielb1", "html_url": "https://github.com/arielb1", "followers_url": "https://api.github.com/users/arielb1/followers", "following_url": "https://api.github.com/users/arielb1/following{/other_user}", "gists_url": "https://api.github.com/users/arielb1/gists{/gist_id}", "starred_url": "https://api.github.com/users/arielb1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/arielb1/subscriptions", "organizations_url": "https://api.github.com/users/arielb1/orgs", "repos_url": "https://api.github.com/users/arielb1/repos", "events_url": "https://api.github.com/users/arielb1/events{/privacy}", "received_events_url": "https://api.github.com/users/arielb1/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "adbce60d6f131e5b3789f01417dedb05e4489898", "url": "https://api.github.com/repos/rust-lang/rust/commits/adbce60d6f131e5b3789f01417dedb05e4489898", "html_url": "https://github.com/rust-lang/rust/commit/adbce60d6f131e5b3789f01417dedb05e4489898"}], "stats": {"total": 100, "additions": 97, "deletions": 3}, "files": [{"sha": "a625f4b04580be5fbc1acbdcaf202795f4e30c31", "filename": "src/librustc_mir/build/expr/as_rvalue.rs", "status": "modified", "additions": 9, "deletions": 3, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/e3495b2cfa2dab62cfa189210a97f4235e73e865/src%2Flibrustc_mir%2Fbuild%2Fexpr%2Fas_rvalue.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e3495b2cfa2dab62cfa189210a97f4235e73e865/src%2Flibrustc_mir%2Fbuild%2Fexpr%2Fas_rvalue.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fbuild%2Fexpr%2Fas_rvalue.rs?ref=e3495b2cfa2dab62cfa189210a97f4235e73e865", "patch": "@@ -97,13 +97,19 @@ impl<'a, 'gcx, 'tcx> Builder<'a, 'gcx, 'tcx> {\n             ExprKind::Box { value } => {\n                 let value = this.hir.mirror(value);\n                 let result = this.temp(expr.ty, expr_span);\n-                // to start, malloc some memory of suitable type (thus far, uninitialized):\n-                let box_ = Rvalue::NullaryOp(NullOp::Box, value.ty);\n-                this.cfg.push_assign(block, source_info, &result, box_);\n                 if let Some(scope) = scope {\n                     // schedule a shallow free of that memory, lest we unwind:\n+                    this.cfg.push(block, Statement {\n+                        source_info: source_info,\n+                        kind: StatementKind::StorageLive(result.clone())\n+                    });\n                     this.schedule_drop(expr_span, scope, &result, value.ty);\n                 }\n+\n+                // malloc some memory of suitable type (thus far, uninitialized):\n+                let box_ = Rvalue::NullaryOp(NullOp::Box, value.ty);\n+                this.cfg.push_assign(block, source_info, &result, box_);\n+\n                 // initialize the box contents:\n                 unpack!(block = this.into(&result.clone().deref(), block, value));\n                 block.and(Rvalue::Use(Operand::Consume(result)))"}, {"sha": "4015930ef7633139ccf413d391fbec5f0b206d44", "filename": "src/test/mir-opt/box_expr.rs", "status": "added", "additions": 88, "deletions": 0, "changes": 88, "blob_url": "https://github.com/rust-lang/rust/blob/e3495b2cfa2dab62cfa189210a97f4235e73e865/src%2Ftest%2Fmir-opt%2Fbox_expr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e3495b2cfa2dab62cfa189210a97f4235e73e865/src%2Ftest%2Fmir-opt%2Fbox_expr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fbox_expr.rs?ref=e3495b2cfa2dab62cfa189210a97f4235e73e865", "patch": "@@ -0,0 +1,88 @@\n+// Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![feature(box_syntax)]\n+\n+fn main() {\n+    let x = box S::new();\n+    drop(x);\n+}\n+\n+struct S;\n+\n+impl S {\n+    fn new() -> Self { S }\n+}\n+\n+impl Drop for S {\n+    fn drop(&mut self) {\n+        println!(\"splat!\");\n+    }\n+}\n+\n+// END RUST SOURCE\n+// START rustc.node4.ElaborateDrops.before.mir\n+//     let mut _0: ();\n+//     let _1: std::boxed::Box<S>;\n+//     let mut _2: std::boxed::Box<S>;\n+//     let mut _3: ();\n+//     let mut _4: std::boxed::Box<S>;\n+//\n+//     bb0: {\n+//         StorageLive(_1);\n+//         StorageLive(_2);\n+//         _2 = Box(S);\n+//         (*_2) = const S::new() -> [return: bb1, unwind: bb3];\n+//     }\n+//\n+//     bb1: {\n+//         _1 = _2;\n+//         drop(_2) -> bb4;\n+//     }\n+//\n+//     bb2: {\n+//         resume;\n+//     }\n+//\n+//     bb3: {\n+//         drop(_2) -> bb2;\n+//     }\n+//\n+//     bb4: {\n+//         StorageDead(_2);\n+//         StorageLive(_4);\n+//         _4 = _1;\n+//         _3 = const std::mem::drop(_4) -> [return: bb5, unwind: bb7];\n+//     }\n+//\n+//     bb5: {\n+//         drop(_4) -> [return: bb8, unwind: bb6];\n+//     }\n+//\n+//     bb6: {\n+//         drop(_1) -> bb2;\n+//     }\n+//\n+//     bb7: {\n+//         drop(_4) -> bb6;\n+//     }\n+//\n+//     bb8: {\n+//         StorageDead(_4);\n+//         _0 = ();\n+//         drop(_1) -> bb9;\n+//     }\n+//\n+//     bb9: {\n+//         StorageDead(_1);\n+//         return;\n+//     }\n+// }\n+// END rustc.node4.ElaborateDrops.before.mir"}]}