{"sha": "0e61d3ab3f6205ce0906837be25d5cf3ec1b2730", "node_id": "C_kwDOAAsO6NoAKDBlNjFkM2FiM2Y2MjA1Y2UwOTA2ODM3YmUyNWQ1Y2YzZWMxYjI3MzA", "commit": {"author": {"name": "Vadim Petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2023-02-11T18:23:17Z"}, "committer": {"name": "Vadim Petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2023-02-11T18:27:02Z"}, "message": "rustdoc: Remove cache for preprocessed markdown links", "tree": {"sha": "9de3200201471215a235fdc1cbb8871e1c76c161", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9de3200201471215a235fdc1cbb8871e1c76c161"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0e61d3ab3f6205ce0906837be25d5cf3ec1b2730", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0e61d3ab3f6205ce0906837be25d5cf3ec1b2730", "html_url": "https://github.com/rust-lang/rust/commit/0e61d3ab3f6205ce0906837be25d5cf3ec1b2730", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0e61d3ab3f6205ce0906837be25d5cf3ec1b2730/comments", "author": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "committer": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8dabf5da9e0318f8c324dc224ad49dc91472c2ec", "url": "https://api.github.com/repos/rust-lang/rust/commits/8dabf5da9e0318f8c324dc224ad49dc91472c2ec", "html_url": "https://github.com/rust-lang/rust/commit/8dabf5da9e0318f8c324dc224ad49dc91472c2ec"}], "stats": {"total": 17, "additions": 2, "deletions": 15}, "files": [{"sha": "a26c25c978277de62e5323e5c7664d5773c62aa0", "filename": "src/librustdoc/core.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0e61d3ab3f6205ce0906837be25d5cf3ec1b2730/src%2Flibrustdoc%2Fcore.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0e61d3ab3f6205ce0906837be25d5cf3ec1b2730/src%2Flibrustdoc%2Fcore.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fcore.rs?ref=0e61d3ab3f6205ce0906837be25d5cf3ec1b2730", "patch": "@@ -27,13 +27,11 @@ use crate::clean::inline::build_external_trait;\n use crate::clean::{self, ItemId};\n use crate::config::{Options as RustdocOptions, OutputFormat, RenderOptions};\n use crate::formats::cache::Cache;\n-use crate::passes::collect_intra_doc_links::PreprocessedMarkdownLink;\n use crate::passes::{self, Condition::*};\n \n pub(crate) use rustc_session::config::{Input, Options, UnstableOptions};\n \n pub(crate) struct ResolverCaches {\n-    pub(crate) markdown_links: Option<FxHashMap<String, Vec<PreprocessedMarkdownLink>>>,\n     pub(crate) all_trait_impls: Option<Vec<DefId>>,\n     pub(crate) all_macro_rules: FxHashMap<Symbol, Res<NodeId>>,\n     pub(crate) extern_doc_reachable: DefIdSet,"}, {"sha": "257ad655c902b6d38f6fe5e93dcbc000df108872", "filename": "src/librustdoc/passes/collect_intra_doc_links.rs", "status": "modified", "additions": 2, "deletions": 12, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/0e61d3ab3f6205ce0906837be25d5cf3ec1b2730/src%2Flibrustdoc%2Fpasses%2Fcollect_intra_doc_links.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0e61d3ab3f6205ce0906837be25d5cf3ec1b2730/src%2Flibrustdoc%2Fpasses%2Fcollect_intra_doc_links.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fpasses%2Fcollect_intra_doc_links.rs?ref=0e61d3ab3f6205ce0906837be25d5cf3ec1b2730", "patch": "@@ -806,22 +806,12 @@ impl<'a, 'tcx> DocVisitor for LinkCollector<'a, 'tcx> {\n             // NOTE: if there are links that start in one crate and end in another, this will not resolve them.\n             // This is a degenerate case and it's not supported by rustdoc.\n             let parent_node = parent_module.or(parent_node);\n-            let mut tmp_links = self\n-                .cx\n-                .resolver_caches\n-                .markdown_links\n-                .take()\n-                .expect(\"`markdown_links` are already borrowed\");\n-            if !tmp_links.contains_key(&doc) {\n-                tmp_links.insert(doc.clone(), preprocessed_markdown_links(&doc));\n-            }\n-            for md_link in &tmp_links[&doc] {\n-                let link = self.resolve_link(item, &doc, parent_node, md_link);\n+            for md_link in preprocessed_markdown_links(&doc) {\n+                let link = self.resolve_link(item, &doc, parent_node, &md_link);\n                 if let Some(link) = link {\n                     self.cx.cache.intra_doc_links.entry(item.item_id).or_default().push(link);\n                 }\n             }\n-            self.cx.resolver_caches.markdown_links = Some(tmp_links);\n         }\n \n         if item.is_mod() {"}, {"sha": "ec449e94ce587612be11ddbd4c768af6e9b55e81", "filename": "src/librustdoc/passes/collect_intra_doc_links/early.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/0e61d3ab3f6205ce0906837be25d5cf3ec1b2730/src%2Flibrustdoc%2Fpasses%2Fcollect_intra_doc_links%2Fearly.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0e61d3ab3f6205ce0906837be25d5cf3ec1b2730/src%2Flibrustdoc%2Fpasses%2Fcollect_intra_doc_links%2Fearly.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fpasses%2Fcollect_intra_doc_links%2Fearly.rs?ref=0e61d3ab3f6205ce0906837be25d5cf3ec1b2730", "patch": "@@ -24,7 +24,6 @@ pub(crate) fn early_resolve_intra_doc_links(\n     link_resolver.process_extern_impls();\n \n     ResolverCaches {\n-        markdown_links: Some(Default::default()),\n         all_trait_impls: Some(link_resolver.all_trait_impls),\n         all_macro_rules: link_resolver.all_macro_rules,\n         extern_doc_reachable: link_resolver.extern_doc_reachable,"}]}