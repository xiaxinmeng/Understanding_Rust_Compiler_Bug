{"sha": "acdbd0643cc3d7bd74826c0f13746c81c08d6cc1", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFjZGJkMDY0M2NjM2Q3YmQ3NDgyNmMwZjEzNzQ2YzgxYzA4ZDZjYzE=", "commit": {"author": {"name": "Vadim Petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2018-10-27T17:21:34Z"}, "committer": {"name": "Vadim Petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2018-10-27T23:56:12Z"}, "message": "resolve: More precise spans for privacy errors", "tree": {"sha": "49e4120c06a947507c142bec256d59a84c9c8b71", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/49e4120c06a947507c142bec256d59a84c9c8b71"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/acdbd0643cc3d7bd74826c0f13746c81c08d6cc1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/acdbd0643cc3d7bd74826c0f13746c81c08d6cc1", "html_url": "https://github.com/rust-lang/rust/commit/acdbd0643cc3d7bd74826c0f13746c81c08d6cc1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/acdbd0643cc3d7bd74826c0f13746c81c08d6cc1/comments", "author": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "committer": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b45b4daba75eb6d48ebd86ac56c5ff29c3637a12", "url": "https://api.github.com/repos/rust-lang/rust/commits/b45b4daba75eb6d48ebd86ac56c5ff29c3637a12", "html_url": "https://github.com/rust-lang/rust/commit/b45b4daba75eb6d48ebd86ac56c5ff29c3637a12"}], "stats": {"total": 557, "additions": 276, "deletions": 281}, "files": [{"sha": "9d3f64e5b2a421b74fda744eece0acdd42afb9b6", "filename": "src/librustc_resolve/lib.rs", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/acdbd0643cc3d7bd74826c0f13746c81c08d6cc1/src%2Flibrustc_resolve%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/acdbd0643cc3d7bd74826c0f13746c81c08d6cc1/src%2Flibrustc_resolve%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Flib.rs?ref=acdbd0643cc3d7bd74826c0f13746c81c08d6cc1", "patch": "@@ -1207,7 +1207,7 @@ enum NameBindingKind<'a> {\n     }\n }\n \n-struct PrivacyError<'a>(Span, Name, &'a NameBinding<'a>);\n+struct PrivacyError<'a>(Span, Ident, &'a NameBinding<'a>);\n \n struct UseError<'a> {\n     err: DiagnosticBuilder<'a>,\n@@ -4743,9 +4743,11 @@ impl<'a, 'crateloader: 'a> Resolver<'a, 'crateloader> {\n             }\n         }\n \n-        for &PrivacyError(span, name, binding) in &self.privacy_errors {\n-            if !reported_spans.insert(span) { continue }\n-            span_err!(self.session, span, E0603, \"{} `{}` is private\", binding.descr(), name);\n+        for &PrivacyError(dedup_span, ident, binding) in &self.privacy_errors {\n+            if reported_spans.insert(dedup_span) {\n+                span_err!(self.session, ident.span, E0603, \"{} `{}` is private\",\n+                          binding.descr(), ident.name);\n+            }\n         }\n     }\n "}, {"sha": "2ee0b564dc423a9234664eb42080a3f9c0855ecb", "filename": "src/librustc_resolve/resolve_imports.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/acdbd0643cc3d7bd74826c0f13746c81c08d6cc1/src%2Flibrustc_resolve%2Fresolve_imports.rs", "raw_url": "https://github.com/rust-lang/rust/raw/acdbd0643cc3d7bd74826c0f13746c81c08d6cc1/src%2Flibrustc_resolve%2Fresolve_imports.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Fresolve_imports.rs?ref=acdbd0643cc3d7bd74826c0f13746c81c08d6cc1", "patch": "@@ -275,7 +275,7 @@ impl<'a, 'crateloader> Resolver<'a, 'crateloader> {\n                     return Ok(self.dummy_binding);\n                 }\n                 if !self.is_accessible(binding.vis) {\n-                    self.privacy_errors.push(PrivacyError(path_span, ident.name, binding));\n+                    self.privacy_errors.push(PrivacyError(path_span, ident, binding));\n                 }\n             }\n "}, {"sha": "1159348d3db35a66338d30b5f1e27c6343cff9ab", "filename": "src/test/ui/error-codes/E0603.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/acdbd0643cc3d7bd74826c0f13746c81c08d6cc1/src%2Ftest%2Fui%2Ferror-codes%2FE0603.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/acdbd0643cc3d7bd74826c0f13746c81c08d6cc1/src%2Ftest%2Fui%2Ferror-codes%2FE0603.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ferror-codes%2FE0603.stderr?ref=acdbd0643cc3d7bd74826c0f13746c81c08d6cc1", "patch": "@@ -1,8 +1,8 @@\n error[E0603]: constant `PRIVATE` is private\n-  --> $DIR/E0603.rs:16:5\n+  --> $DIR/E0603.rs:16:17\n    |\n LL |     SomeModule::PRIVATE; //~ ERROR E0603\n-   |     ^^^^^^^^^^^^^^^^^^^\n+   |                 ^^^^^^^\n \n error: aborting due to previous error\n "}, {"sha": "5f1e677ca670848819421f746a4033b60c51cb19", "filename": "src/test/ui/error-festival.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/acdbd0643cc3d7bd74826c0f13746c81c08d6cc1/src%2Ftest%2Fui%2Ferror-festival.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/acdbd0643cc3d7bd74826c0f13746c81c08d6cc1/src%2Ftest%2Fui%2Ferror-festival.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ferror-festival.stderr?ref=acdbd0643cc3d7bd74826c0f13746c81c08d6cc1", "patch": "@@ -5,10 +5,10 @@ LL |     y = 2;\n    |     ^ did you mean `x`?\n \n error[E0603]: constant `FOO` is private\n-  --> $DIR/error-festival.rs:32:5\n+  --> $DIR/error-festival.rs:32:10\n    |\n LL |     foo::FOO;\n-   |     ^^^^^^^^\n+   |          ^^^\n \n error[E0368]: binary assignment operation `+=` cannot be applied to type `&str`\n   --> $DIR/error-festival.rs:22:5"}, {"sha": "dcadad82f29bae4a113ca24d0cdb514c8a1077e4", "filename": "src/test/ui/export-import.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/acdbd0643cc3d7bd74826c0f13746c81c08d6cc1/src%2Ftest%2Fui%2Fexport-import.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/acdbd0643cc3d7bd74826c0f13746c81c08d6cc1/src%2Ftest%2Fui%2Fexport-import.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fexport-import.stderr?ref=acdbd0643cc3d7bd74826c0f13746c81c08d6cc1", "patch": "@@ -1,8 +1,8 @@\n error[E0603]: function `unexported` is private\n-  --> $DIR/export-import.rs:11:5\n+  --> $DIR/export-import.rs:11:8\n    |\n LL | use m::unexported;\n-   |     ^^^^^^^^^^^^^\n+   |        ^^^^^^^^^^\n \n error: aborting due to previous error\n "}, {"sha": "e835c29fda34afc19729b2bc0f70af1b10979626", "filename": "src/test/ui/export-tag-variant.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/acdbd0643cc3d7bd74826c0f13746c81c08d6cc1/src%2Ftest%2Fui%2Fexport-tag-variant.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/acdbd0643cc3d7bd74826c0f13746c81c08d6cc1/src%2Ftest%2Fui%2Fexport-tag-variant.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fexport-tag-variant.stderr?ref=acdbd0643cc3d7bd74826c0f13746c81c08d6cc1", "patch": "@@ -1,8 +1,8 @@\n error[E0603]: enum `y` is private\n-  --> $DIR/export-tag-variant.rs:17:21\n+  --> $DIR/export-tag-variant.rs:17:26\n    |\n LL | fn main() { let z = foo::y::y1; } //~ ERROR: enum `y` is private\n-   |                     ^^^^^^^^^^\n+   |                          ^\n \n error: aborting due to previous error\n "}, {"sha": "bed650b8c511e1e98bf40b215381390315d1fd46", "filename": "src/test/ui/export.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/acdbd0643cc3d7bd74826c0f13746c81c08d6cc1/src%2Ftest%2Fui%2Fexport.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/acdbd0643cc3d7bd74826c0f13746c81c08d6cc1/src%2Ftest%2Fui%2Fexport.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fexport.stderr?ref=acdbd0643cc3d7bd74826c0f13746c81c08d6cc1", "patch": "@@ -23,10 +23,10 @@ LL |     fn z(y: isize) { log(debug, y); }\n    |                          ^^^^^ not found in this scope\n \n error[E0603]: function `z` is private\n-  --> $DIR/export.rs:20:13\n+  --> $DIR/export.rs:20:18\n    |\n LL | fn main() { foo::z(10); } //~ ERROR function `z` is private\n-   |             ^^^^^^\n+   |                  ^\n \n error: aborting due to 5 previous errors\n "}, {"sha": "02ecf0ce6f27cec4bf1d1bf107c49e724bcd2d3d", "filename": "src/test/ui/extern/extern-crate-visibility.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/acdbd0643cc3d7bd74826c0f13746c81c08d6cc1/src%2Ftest%2Fui%2Fextern%2Fextern-crate-visibility.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/acdbd0643cc3d7bd74826c0f13746c81c08d6cc1/src%2Ftest%2Fui%2Fextern%2Fextern-crate-visibility.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fextern%2Fextern-crate-visibility.stderr?ref=acdbd0643cc3d7bd74826c0f13746c81c08d6cc1", "patch": "@@ -1,14 +1,14 @@\n error[E0603]: extern crate `core` is private\n-  --> $DIR/extern-crate-visibility.rs:16:5\n+  --> $DIR/extern-crate-visibility.rs:16:10\n    |\n LL | use foo::core::cell; //~ ERROR extern crate `core` is private\n-   |     ^^^^^^^^^^^^^^^\n+   |          ^^^^\n \n error[E0603]: extern crate `core` is private\n-  --> $DIR/extern-crate-visibility.rs:19:5\n+  --> $DIR/extern-crate-visibility.rs:19:10\n    |\n LL |     foo::core::cell::Cell::new(0); //~ ERROR extern crate `core` is private\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |          ^^^^\n \n error: aborting due to 2 previous errors\n "}, {"sha": "b93d4da3a867bfe88de747a62e9da67ed967ffa1", "filename": "src/test/ui/hygiene/privacy.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/acdbd0643cc3d7bd74826c0f13746c81c08d6cc1/src%2Ftest%2Fui%2Fhygiene%2Fprivacy.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/acdbd0643cc3d7bd74826c0f13746c81c08d6cc1/src%2Ftest%2Fui%2Fhygiene%2Fprivacy.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fhygiene%2Fprivacy.stderr?ref=acdbd0643cc3d7bd74826c0f13746c81c08d6cc1", "patch": "@@ -1,8 +1,8 @@\n error[E0603]: function `f` is private\n-  --> $DIR/privacy.rs:26:9\n+  --> $DIR/privacy.rs:26:14\n    |\n LL |         foo::f() //~ ERROR `f` is private\n-   |         ^^^^^^\n+   |              ^\n \n error: aborting due to previous error\n "}, {"sha": "4cd559f5f4a46854ffb6f142a82533da2319b512", "filename": "src/test/ui/import.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/acdbd0643cc3d7bd74826c0f13746c81c08d6cc1/src%2Ftest%2Fui%2Fimport.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/acdbd0643cc3d7bd74826c0f13746c81c08d6cc1/src%2Ftest%2Fui%2Fimport.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimport.stderr?ref=acdbd0643cc3d7bd74826c0f13746c81c08d6cc1", "patch": "@@ -11,10 +11,10 @@ LL |     use foo; //~ ERROR unresolved import `foo` [E0432]\n    |         ^^^ no `foo` in the root\n \n error[E0603]: unresolved item `foo` is private\n-  --> $DIR/import.rs:23:5\n+  --> $DIR/import.rs:23:10\n    |\n LL |     zed::foo(); //~ ERROR `foo` is private\n-   |     ^^^^^^^^\n+   |          ^^^\n \n error: aborting due to 3 previous errors\n "}, {"sha": "9ed3b02591c2d848ebd7e1ed9966243d1ea9b12d", "filename": "src/test/ui/imports/reexports.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/acdbd0643cc3d7bd74826c0f13746c81c08d6cc1/src%2Ftest%2Fui%2Fimports%2Freexports.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/acdbd0643cc3d7bd74826c0f13746c81c08d6cc1/src%2Ftest%2Fui%2Fimports%2Freexports.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimports%2Freexports.stderr?ref=acdbd0643cc3d7bd74826c0f13746c81c08d6cc1", "patch": "@@ -17,16 +17,16 @@ LL |         pub use super::*; //~ ERROR must import something with the glob's v\n    |                 ^^^^^^^^\n \n error[E0603]: module `foo` is private\n-  --> $DIR/reexports.rs:38:9\n+  --> $DIR/reexports.rs:38:15\n    |\n LL |     use b::a::foo::S; //~ ERROR `foo`\n-   |         ^^^^^^^^^^^^\n+   |               ^^^\n \n error[E0603]: module `foo` is private\n-  --> $DIR/reexports.rs:39:9\n+  --> $DIR/reexports.rs:39:15\n    |\n LL |     use b::b::foo::S as T; //~ ERROR `foo`\n-   |         ^^^^^^^^^^^^^^^^^\n+   |               ^^^\n \n error: aborting due to 4 previous errors\n "}, {"sha": "93a098432534b542eb8056f21e6c7a5f92fa710f", "filename": "src/test/ui/issues/issue-10545.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/acdbd0643cc3d7bd74826c0f13746c81c08d6cc1/src%2Ftest%2Fui%2Fissues%2Fissue-10545.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/acdbd0643cc3d7bd74826c0f13746c81c08d6cc1/src%2Ftest%2Fui%2Fissues%2Fissue-10545.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-10545.stderr?ref=acdbd0643cc3d7bd74826c0f13746c81c08d6cc1", "patch": "@@ -1,8 +1,8 @@\n error[E0603]: struct `S` is private\n-  --> $DIR/issue-10545.rs:17:11\n+  --> $DIR/issue-10545.rs:17:14\n    |\n LL | fn foo(_: a::S) { //~ ERROR: struct `S` is private\n-   |           ^^^^\n+   |              ^\n \n error: aborting due to previous error\n "}, {"sha": "bb5303cb581a1196f3e9486d269f02a0b1c7895c", "filename": "src/test/ui/issues/issue-11593.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/acdbd0643cc3d7bd74826c0f13746c81c08d6cc1/src%2Ftest%2Fui%2Fissues%2Fissue-11593.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/acdbd0643cc3d7bd74826c0f13746c81c08d6cc1/src%2Ftest%2Fui%2Fissues%2Fissue-11593.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-11593.stderr?ref=acdbd0643cc3d7bd74826c0f13746c81c08d6cc1", "patch": "@@ -1,8 +1,8 @@\n error[E0603]: trait `Foo` is private\n-  --> $DIR/issue-11593.rs:17:6\n+  --> $DIR/issue-11593.rs:17:24\n    |\n LL | impl private_trait_xc::Foo for Bar {}\n-   |      ^^^^^^^^^^^^^^^^^^^^^\n+   |                        ^^^\n \n error: aborting due to previous error\n "}, {"sha": "4dfd0bf15b92aa5a6b8049c0d5b831583c29c0aa", "filename": "src/test/ui/issues/issue-11680.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/acdbd0643cc3d7bd74826c0f13746c81c08d6cc1/src%2Ftest%2Fui%2Fissues%2Fissue-11680.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/acdbd0643cc3d7bd74826c0f13746c81c08d6cc1/src%2Ftest%2Fui%2Fissues%2Fissue-11680.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-11680.stderr?ref=acdbd0643cc3d7bd74826c0f13746c81c08d6cc1", "patch": "@@ -1,14 +1,14 @@\n error[E0603]: enum `Foo` is private\n-  --> $DIR/issue-11680.rs:16:14\n+  --> $DIR/issue-11680.rs:16:21\n    |\n LL |     let _b = other::Foo::Bar(1);\n-   |              ^^^^^^^^^^^^^^^\n+   |                     ^^^\n \n error[E0603]: enum `Foo` is private\n-  --> $DIR/issue-11680.rs:19:14\n+  --> $DIR/issue-11680.rs:19:27\n    |\n LL |     let _b = other::test::Foo::Bar(1);\n-   |              ^^^^^^^^^^^^^^^^^^^^^\n+   |                           ^^^\n \n error: aborting due to 2 previous errors\n "}, {"sha": "90d5ca59e1e25bd11b87deecb6d723cfaa45f1e7", "filename": "src/test/ui/issues/issue-13407.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/acdbd0643cc3d7bd74826c0f13746c81c08d6cc1/src%2Ftest%2Fui%2Fissues%2Fissue-13407.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/acdbd0643cc3d7bd74826c0f13746c81c08d6cc1/src%2Ftest%2Fui%2Fissues%2Fissue-13407.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-13407.stderr?ref=acdbd0643cc3d7bd74826c0f13746c81c08d6cc1", "patch": "@@ -1,8 +1,8 @@\n error[E0603]: unit struct `C` is private\n-  --> $DIR/issue-13407.rs:16:5\n+  --> $DIR/issue-13407.rs:16:8\n    |\n LL |     A::C = 1;\n-   |     ^^^^\n+   |        ^\n \n error[E0308]: mismatched types\n   --> $DIR/issue-13407.rs:16:12"}, {"sha": "cbbceb72af39232f3306bd3b91bdbbd8172c08c1", "filename": "src/test/ui/issues/issue-13641.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/acdbd0643cc3d7bd74826c0f13746c81c08d6cc1/src%2Ftest%2Fui%2Fissues%2Fissue-13641.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/acdbd0643cc3d7bd74826c0f13746c81c08d6cc1/src%2Ftest%2Fui%2Fissues%2Fissue-13641.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-13641.stderr?ref=acdbd0643cc3d7bd74826c0f13746c81c08d6cc1", "patch": "@@ -1,14 +1,14 @@\n error[E0603]: struct `Foo` is private\n-  --> $DIR/issue-13641.rs:19:5\n+  --> $DIR/issue-13641.rs:19:8\n    |\n LL |     a::Foo::new();\n-   |     ^^^^^^^^^^^\n+   |        ^^^\n \n error[E0603]: enum `Bar` is private\n-  --> $DIR/issue-13641.rs:21:5\n+  --> $DIR/issue-13641.rs:21:8\n    |\n LL |     a::Bar::new();\n-   |     ^^^^^^^^^^^\n+   |        ^^^\n \n error: aborting due to 2 previous errors\n "}, {"sha": "ba36f9b5582e5ec9ad0d3dc9ec29eae385d24e2c", "filename": "src/test/ui/issues/issue-16725.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/acdbd0643cc3d7bd74826c0f13746c81c08d6cc1/src%2Ftest%2Fui%2Fissues%2Fissue-16725.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/acdbd0643cc3d7bd74826c0f13746c81c08d6cc1/src%2Ftest%2Fui%2Fissues%2Fissue-16725.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-16725.stderr?ref=acdbd0643cc3d7bd74826c0f13746c81c08d6cc1", "patch": "@@ -1,8 +1,8 @@\n error[E0603]: function `bar` is private\n-  --> $DIR/issue-16725.rs:16:14\n+  --> $DIR/issue-16725.rs:16:19\n    |\n LL |     unsafe { foo::bar(); }\n-   |              ^^^^^^^^\n+   |                   ^^^\n \n error: aborting due to previous error\n "}, {"sha": "7d65a97ec1d5a048f95627775038993038db3ad2", "filename": "src/test/ui/issues/issue-17718-const-privacy.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/acdbd0643cc3d7bd74826c0f13746c81c08d6cc1/src%2Ftest%2Fui%2Fissues%2Fissue-17718-const-privacy.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/acdbd0643cc3d7bd74826c0f13746c81c08d6cc1/src%2Ftest%2Fui%2Fissues%2Fissue-17718-const-privacy.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-17718-const-privacy.stderr?ref=acdbd0643cc3d7bd74826c0f13746c81c08d6cc1", "patch": "@@ -1,8 +1,8 @@\n error[E0603]: constant `B` is private\n-  --> $DIR/issue-17718-const-privacy.rs:15:5\n+  --> $DIR/issue-17718-const-privacy.rs:15:8\n    |\n LL | use a::B; //~ ERROR: constant `B` is private\n-   |     ^^^^\n+   |        ^\n \n error[E0603]: constant `BAR` is private\n   --> $DIR/issue-17718-const-privacy.rs:18:5"}, {"sha": "02ffc4b1758f6d6ec3c11eb9e5ca4e59fd2f419d", "filename": "src/test/ui/issues/issue-28388-2.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/acdbd0643cc3d7bd74826c0f13746c81c08d6cc1/src%2Ftest%2Fui%2Fissues%2Fissue-28388-2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/acdbd0643cc3d7bd74826c0f13746c81c08d6cc1/src%2Ftest%2Fui%2Fissues%2Fissue-28388-2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-28388-2.stderr?ref=acdbd0643cc3d7bd74826c0f13746c81c08d6cc1", "patch": "@@ -1,8 +1,8 @@\n error[E0603]: module `n` is private\n-  --> $DIR/issue-28388-2.rs:17:5\n+  --> $DIR/issue-28388-2.rs:17:8\n    |\n LL | use m::n::{};\n-   |     ^^^^^^^^\n+   |        ^\n \n error: aborting due to previous error\n "}, {"sha": "7d3bd03ba230be1115d72d3d3793775aa396d02a", "filename": "src/test/ui/issues/issue-29161.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/acdbd0643cc3d7bd74826c0f13746c81c08d6cc1/src%2Ftest%2Fui%2Fissues%2Fissue-29161.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/acdbd0643cc3d7bd74826c0f13746c81c08d6cc1/src%2Ftest%2Fui%2Fissues%2Fissue-29161.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-29161.stderr?ref=acdbd0643cc3d7bd74826c0f13746c81c08d6cc1", "patch": "@@ -5,10 +5,10 @@ LL |         pub fn default() -> A { //~ ERROR unnecessary visibility qualifier\n    |         ^^^ `pub` not permitted here because it's implied\n \n error[E0603]: struct `A` is private\n-  --> $DIR/issue-29161.rs:23:5\n+  --> $DIR/issue-29161.rs:23:8\n    |\n LL |     a::A::default();\n-   |     ^^^^^^^^^^^^^\n+   |        ^\n \n error: aborting due to 2 previous errors\n "}, {"sha": "f6ed3202671796faf9ae80a364ea81a5a406f9c7", "filename": "src/test/ui/issues/issue-38857.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/acdbd0643cc3d7bd74826c0f13746c81c08d6cc1/src%2Ftest%2Fui%2Fissues%2Fissue-38857.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/acdbd0643cc3d7bd74826c0f13746c81c08d6cc1/src%2Ftest%2Fui%2Fissues%2Fissue-38857.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-38857.stderr?ref=acdbd0643cc3d7bd74826c0f13746c81c08d6cc1", "patch": "@@ -5,10 +5,10 @@ LL |     let a = std::sys::imp::process::process_common::StdioPipes { ..panic!()\n    |                       ^^^ Could not find `imp` in `sys`\n \n error[E0603]: module `sys` is private\n-  --> $DIR/issue-38857.rs:12:13\n+  --> $DIR/issue-38857.rs:12:18\n    |\n LL |     let a = std::sys::imp::process::process_common::StdioPipes { ..panic!() };\n-   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |                  ^^^\n \n error: aborting due to 2 previous errors\n "}, {"sha": "52f1985c4fbf41c5e56fc4093bd68e3c90035d56", "filename": "src/test/ui/issues/issue-3993.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/acdbd0643cc3d7bd74826c0f13746c81c08d6cc1/src%2Ftest%2Fui%2Fissues%2Fissue-3993.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/acdbd0643cc3d7bd74826c0f13746c81c08d6cc1/src%2Ftest%2Fui%2Fissues%2Fissue-3993.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-3993.stderr?ref=acdbd0643cc3d7bd74826c0f13746c81c08d6cc1", "patch": "@@ -1,8 +1,8 @@\n error[E0603]: function `fly` is private\n-  --> $DIR/issue-3993.rs:11:5\n+  --> $DIR/issue-3993.rs:11:10\n    |\n LL | use zoo::fly; //~ ERROR: function `fly` is private\n-   |     ^^^^^^^^\n+   |          ^^^\n \n error: aborting due to previous error\n "}, {"sha": "b5ad50fbebab2bada8d253d381620dd638f24125", "filename": "src/test/ui/macros/macro-local-data-key-priv.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/acdbd0643cc3d7bd74826c0f13746c81c08d6cc1/src%2Ftest%2Fui%2Fmacros%2Fmacro-local-data-key-priv.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/acdbd0643cc3d7bd74826c0f13746c81c08d6cc1/src%2Ftest%2Fui%2Fmacros%2Fmacro-local-data-key-priv.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmacros%2Fmacro-local-data-key-priv.stderr?ref=acdbd0643cc3d7bd74826c0f13746c81c08d6cc1", "patch": "@@ -1,8 +1,8 @@\n error[E0603]: constant `baz` is private\n-  --> $DIR/macro-local-data-key-priv.rs:18:5\n+  --> $DIR/macro-local-data-key-priv.rs:18:10\n    |\n LL |     bar::baz.with(|_| ());\n-   |     ^^^^^^^^\n+   |          ^^^\n \n error: aborting due to previous error\n "}, {"sha": "7b72c634ebf9b84ed7f46418f410b9debc587bd3", "filename": "src/test/ui/privacy/privacy-in-paths.stderr", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/acdbd0643cc3d7bd74826c0f13746c81c08d6cc1/src%2Ftest%2Fui%2Fprivacy%2Fprivacy-in-paths.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/acdbd0643cc3d7bd74826c0f13746c81c08d6cc1/src%2Ftest%2Fui%2Fprivacy%2Fprivacy-in-paths.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fprivacy%2Fprivacy-in-paths.stderr?ref=acdbd0643cc3d7bd74826c0f13746c81c08d6cc1", "patch": "@@ -1,20 +1,20 @@\n error[E0603]: module `bar` is private\n-  --> $DIR/privacy-in-paths.rs:34:9\n+  --> $DIR/privacy-in-paths.rs:34:16\n    |\n LL |         ::foo::bar::baz::f(); //~ERROR module `bar` is private\n-   |         ^^^^^^^^^^^^^^^^^^\n+   |                ^^^\n \n error[E0603]: module `bar` is private\n-  --> $DIR/privacy-in-paths.rs:35:9\n+  --> $DIR/privacy-in-paths.rs:35:16\n    |\n LL |         ::foo::bar::S::f(); //~ERROR module `bar` is private\n-   |         ^^^^^^^^^^^^^^^^\n+   |                ^^^\n \n error[E0603]: trait `T` is private\n-  --> $DIR/privacy-in-paths.rs:36:9\n+  --> $DIR/privacy-in-paths.rs:36:23\n    |\n LL |         <() as ::foo::T>::Assoc::f(); //~ERROR trait `T` is private\n-   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |                       ^\n \n error: aborting due to 3 previous errors\n "}, {"sha": "9243bc2459f91732b74409f760623cbe9bab1fad", "filename": "src/test/ui/privacy/privacy-ns2.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/acdbd0643cc3d7bd74826c0f13746c81c08d6cc1/src%2Ftest%2Fui%2Fprivacy%2Fprivacy-ns2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/acdbd0643cc3d7bd74826c0f13746c81c08d6cc1/src%2Ftest%2Fui%2Fprivacy%2Fprivacy-ns2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fprivacy%2Fprivacy-ns2.stderr?ref=acdbd0643cc3d7bd74826c0f13746c81c08d6cc1", "patch": "@@ -55,16 +55,16 @@ LL | use foo3::Bar;\n    |\n \n error[E0603]: trait `Bar` is private\n-  --> $DIR/privacy-ns2.rs:70:9\n+  --> $DIR/privacy-ns2.rs:70:15\n    |\n LL |     use foo3::Bar;  //~ ERROR `Bar` is private\n-   |         ^^^^^^^^^\n+   |               ^^^\n \n error[E0603]: trait `Bar` is private\n-  --> $DIR/privacy-ns2.rs:74:9\n+  --> $DIR/privacy-ns2.rs:74:15\n    |\n LL |     use foo3::Bar;  //~ ERROR `Bar` is private\n-   |         ^^^^^^^^^\n+   |               ^^^\n \n error[E0603]: trait `Bar` is private\n   --> $DIR/privacy-ns2.rs:81:16"}, {"sha": "5989c79bc85d3f5cccf7ba1c484372fc64735e6a", "filename": "src/test/ui/privacy/privacy-ufcs.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/acdbd0643cc3d7bd74826c0f13746c81c08d6cc1/src%2Ftest%2Fui%2Fprivacy%2Fprivacy-ufcs.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/acdbd0643cc3d7bd74826c0f13746c81c08d6cc1/src%2Ftest%2Fui%2Fprivacy%2Fprivacy-ufcs.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fprivacy%2Fprivacy-ufcs.stderr?ref=acdbd0643cc3d7bd74826c0f13746c81c08d6cc1", "patch": "@@ -1,8 +1,8 @@\n error[E0603]: trait `Bar` is private\n-  --> $DIR/privacy-ufcs.rs:22:5\n+  --> $DIR/privacy-ufcs.rs:22:20\n    |\n LL |     <i32 as ::foo::Bar>::baz(); //~ERROR trait `Bar` is private\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^^\n+   |                    ^^^\n \n error: aborting due to previous error\n "}, {"sha": "9aff4bbc41c9c8b5378a1c9d1e2446bcc2a256ef", "filename": "src/test/ui/privacy/privacy1.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/acdbd0643cc3d7bd74826c0f13746c81c08d6cc1/src%2Ftest%2Fui%2Fprivacy%2Fprivacy1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/acdbd0643cc3d7bd74826c0f13746c81c08d6cc1/src%2Ftest%2Fui%2Fprivacy%2Fprivacy1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fprivacy%2Fprivacy1.rs?ref=acdbd0643cc3d7bd74826c0f13746c81c08d6cc1", "patch": "@@ -127,7 +127,6 @@ mod foo {\n     fn test2() {\n         use bar::baz::{foo, bar};\n         //~^ ERROR: module `baz` is private\n-        //~| ERROR: module `baz` is private\n \n         foo();\n         bar();"}, {"sha": "d6197575447e61dbd8a4aee4695f5e2688ebbad9", "filename": "src/test/ui/privacy/privacy1.stderr", "status": "modified", "additions": 25, "deletions": 31, "changes": 56, "blob_url": "https://github.com/rust-lang/rust/blob/acdbd0643cc3d7bd74826c0f13746c81c08d6cc1/src%2Ftest%2Fui%2Fprivacy%2Fprivacy1.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/acdbd0643cc3d7bd74826c0f13746c81c08d6cc1/src%2Ftest%2Fui%2Fprivacy%2Fprivacy1.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fprivacy%2Fprivacy1.stderr?ref=acdbd0643cc3d7bd74826c0f13746c81c08d6cc1", "patch": "@@ -1,80 +1,74 @@\n error[E0603]: module `baz` is private\n-  --> $DIR/privacy1.rs:128:24\n+  --> $DIR/privacy1.rs:128:18\n    |\n LL |         use bar::baz::{foo, bar};\n-   |                        ^^^\n+   |                  ^^^\n \n error[E0603]: module `baz` is private\n-  --> $DIR/privacy1.rs:128:29\n-   |\n-LL |         use bar::baz::{foo, bar};\n-   |                             ^^^\n-\n-error[E0603]: module `baz` is private\n-  --> $DIR/privacy1.rs:137:13\n+  --> $DIR/privacy1.rs:136:18\n    |\n LL |         use bar::baz;\n-   |             ^^^^^^^^\n+   |                  ^^^\n \n error[E0603]: module `i` is private\n-  --> $DIR/privacy1.rs:161:9\n+  --> $DIR/privacy1.rs:160:20\n    |\n LL |     use self::foo::i::A; //~ ERROR: module `i` is private\n-   |         ^^^^^^^^^^^^^^^\n+   |                    ^\n \n error[E0603]: module `baz` is private\n-  --> $DIR/privacy1.rs:100:9\n+  --> $DIR/privacy1.rs:100:16\n    |\n LL |         ::bar::baz::A::foo();   //~ ERROR: module `baz` is private\n-   |         ^^^^^^^^^^^^^^^^^^\n+   |                ^^^\n \n error[E0603]: module `baz` is private\n-  --> $DIR/privacy1.rs:101:9\n+  --> $DIR/privacy1.rs:101:16\n    |\n LL |         ::bar::baz::A::bar();   //~ ERROR: module `baz` is private\n-   |         ^^^^^^^^^^^^^^^^^^\n+   |                ^^^\n \n error[E0603]: module `baz` is private\n-  --> $DIR/privacy1.rs:103:9\n+  --> $DIR/privacy1.rs:103:16\n    |\n LL |         ::bar::baz::A.foo2();   //~ ERROR: module `baz` is private\n-   |         ^^^^^^^^^^^^^\n+   |                ^^^\n \n error[E0603]: module `baz` is private\n-  --> $DIR/privacy1.rs:104:9\n+  --> $DIR/privacy1.rs:104:16\n    |\n LL |         ::bar::baz::A.bar2();   //~ ERROR: module `baz` is private\n-   |         ^^^^^^^^^^^^^\n+   |                ^^^\n \n error[E0603]: trait `B` is private\n-  --> $DIR/privacy1.rs:108:9\n+  --> $DIR/privacy1.rs:108:16\n    |\n LL |         ::bar::B::foo();        //~ ERROR: trait `B` is private\n-   |         ^^^^^^^^^^^^^\n+   |                ^\n \n error[E0603]: function `epriv` is private\n-  --> $DIR/privacy1.rs:114:13\n+  --> $DIR/privacy1.rs:114:20\n    |\n LL |             ::bar::epriv(); //~ ERROR: function `epriv` is private\n-   |             ^^^^^^^^^^^^\n+   |                    ^^^^^\n \n error[E0603]: module `baz` is private\n-  --> $DIR/privacy1.rs:123:9\n+  --> $DIR/privacy1.rs:123:16\n    |\n LL |         ::bar::baz::foo(); //~ ERROR: module `baz` is private\n-   |         ^^^^^^^^^^^^^^^\n+   |                ^^^\n \n error[E0603]: module `baz` is private\n-  --> $DIR/privacy1.rs:124:9\n+  --> $DIR/privacy1.rs:124:16\n    |\n LL |         ::bar::baz::bar(); //~ ERROR: module `baz` is private\n-   |         ^^^^^^^^^^^^^^^\n+   |                ^^^\n \n error[E0603]: trait `B` is private\n-  --> $DIR/privacy1.rs:153:10\n+  --> $DIR/privacy1.rs:152:17\n    |\n LL |     impl ::bar::B for f32 { fn foo() -> f32 { 1.0 } }\n-   |          ^^^^^^^^\n+   |                 ^\n \n error[E0624]: method `bar` is private\n   --> $DIR/privacy1.rs:73:9\n@@ -106,7 +100,7 @@ error[E0624]: method `bar2` is private\n LL |         ::bar::baz::A.bar2();   //~ ERROR: module `baz` is private\n    |                       ^^^^\n \n-error: aborting due to 18 previous errors\n+error: aborting due to 17 previous errors\n \n Some errors occurred: E0603, E0624.\n For more information about an error, try `rustc --explain E0603`."}, {"sha": "fa4da7f5181b01c565cf3fd292f6db9394da89cf", "filename": "src/test/ui/privacy/privacy2.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/acdbd0643cc3d7bd74826c0f13746c81c08d6cc1/src%2Ftest%2Fui%2Fprivacy%2Fprivacy2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/acdbd0643cc3d7bd74826c0f13746c81c08d6cc1/src%2Ftest%2Fui%2Fprivacy%2Fprivacy2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fprivacy%2Fprivacy2.stderr?ref=acdbd0643cc3d7bd74826c0f13746c81c08d6cc1", "patch": "@@ -5,10 +5,10 @@ LL |     use bar::foo;\n    |         ^^^^^^^^ no `foo` in `bar`\n \n error[E0603]: function `foo` is private\n-  --> $DIR/privacy2.rs:33:9\n+  --> $DIR/privacy2.rs:33:20\n    |\n LL |     use bar::glob::foo;\n-   |         ^^^^^^^^^^^^^^\n+   |                    ^^^\n \n error: requires `sized` lang_item\n "}, {"sha": "8a4b7401de01a8567fa30812abadf0c9bb9e985f", "filename": "src/test/ui/privacy/privacy4.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/acdbd0643cc3d7bd74826c0f13746c81c08d6cc1/src%2Ftest%2Fui%2Fprivacy%2Fprivacy4.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/acdbd0643cc3d7bd74826c0f13746c81c08d6cc1/src%2Ftest%2Fui%2Fprivacy%2Fprivacy4.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fprivacy%2Fprivacy4.stderr?ref=acdbd0643cc3d7bd74826c0f13746c81c08d6cc1", "patch": "@@ -1,8 +1,8 @@\n error[E0603]: module `glob` is private\n-  --> $DIR/privacy4.rs:31:9\n+  --> $DIR/privacy4.rs:31:14\n    |\n LL |     use bar::glob::gpriv; //~ ERROR: module `glob` is private\n-   |         ^^^^^^^^^^^^^^^^\n+   |              ^^^^\n \n error: aborting due to previous error\n "}, {"sha": "23682575cf1832e1631daf0b34c2dbd5764a39ef", "filename": "src/test/ui/privacy/privacy5.stderr", "status": "modified", "additions": 96, "deletions": 96, "changes": 192, "blob_url": "https://github.com/rust-lang/rust/blob/acdbd0643cc3d7bd74826c0f13746c81c08d6cc1/src%2Ftest%2Fui%2Fprivacy%2Fprivacy5.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/acdbd0643cc3d7bd74826c0f13746c81c08d6cc1/src%2Ftest%2Fui%2Fprivacy%2Fprivacy5.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fprivacy%2Fprivacy5.stderr?ref=acdbd0643cc3d7bd74826c0f13746c81c08d6cc1", "patch": "@@ -1,290 +1,290 @@\n error[E0603]: tuple struct `A` is private\n-  --> $DIR/privacy5.rs:61:13\n+  --> $DIR/privacy5.rs:61:16\n    |\n LL |     let a = a::A(()); //~ ERROR tuple struct `A` is private\n-   |             ^^^^\n+   |                ^\n \n error[E0603]: tuple struct `B` is private\n-  --> $DIR/privacy5.rs:62:13\n+  --> $DIR/privacy5.rs:62:16\n    |\n LL |     let b = a::B(2); //~ ERROR tuple struct `B` is private\n-   |             ^^^^\n+   |                ^\n \n error[E0603]: tuple struct `C` is private\n-  --> $DIR/privacy5.rs:63:13\n+  --> $DIR/privacy5.rs:63:16\n    |\n LL |     let c = a::C(2, 3); //~ ERROR tuple struct `C` is private\n-   |             ^^^^\n+   |                ^\n \n error[E0603]: tuple struct `A` is private\n-  --> $DIR/privacy5.rs:66:9\n+  --> $DIR/privacy5.rs:66:12\n    |\n LL |     let a::A(()) = a; //~ ERROR tuple struct `A` is private\n-   |         ^^^^\n+   |            ^\n \n error[E0603]: tuple struct `A` is private\n-  --> $DIR/privacy5.rs:67:9\n+  --> $DIR/privacy5.rs:67:12\n    |\n LL |     let a::A(_) = a; //~ ERROR tuple struct `A` is private\n-   |         ^^^^\n+   |            ^\n \n error[E0603]: tuple struct `A` is private\n-  --> $DIR/privacy5.rs:68:15\n+  --> $DIR/privacy5.rs:68:18\n    |\n LL |     match a { a::A(()) => {} } //~ ERROR tuple struct `A` is private\n-   |               ^^^^\n+   |                  ^\n \n error[E0603]: tuple struct `A` is private\n-  --> $DIR/privacy5.rs:69:15\n+  --> $DIR/privacy5.rs:69:18\n    |\n LL |     match a { a::A(_) => {} } //~ ERROR tuple struct `A` is private\n-   |               ^^^^\n+   |                  ^\n \n error[E0603]: tuple struct `B` is private\n-  --> $DIR/privacy5.rs:71:9\n+  --> $DIR/privacy5.rs:71:12\n    |\n LL |     let a::B(_) = b; //~ ERROR tuple struct `B` is private\n-   |         ^^^^\n+   |            ^\n \n error[E0603]: tuple struct `B` is private\n-  --> $DIR/privacy5.rs:72:9\n+  --> $DIR/privacy5.rs:72:12\n    |\n LL |     let a::B(_b) = b; //~ ERROR tuple struct `B` is private\n-   |         ^^^^\n+   |            ^\n \n error[E0603]: tuple struct `B` is private\n-  --> $DIR/privacy5.rs:73:15\n+  --> $DIR/privacy5.rs:73:18\n    |\n LL |     match b { a::B(_) => {} } //~ ERROR tuple struct `B` is private\n-   |               ^^^^\n+   |                  ^\n \n error[E0603]: tuple struct `B` is private\n-  --> $DIR/privacy5.rs:74:15\n+  --> $DIR/privacy5.rs:74:18\n    |\n LL |     match b { a::B(_b) => {} } //~ ERROR tuple struct `B` is private\n-   |               ^^^^\n+   |                  ^\n \n error[E0603]: tuple struct `B` is private\n-  --> $DIR/privacy5.rs:75:15\n+  --> $DIR/privacy5.rs:75:18\n    |\n LL |     match b { a::B(1) => {} a::B(_) => {} } //~ ERROR tuple struct `B` is private\n-   |               ^^^^\n+   |                  ^\n \n error[E0603]: tuple struct `B` is private\n-  --> $DIR/privacy5.rs:75:29\n+  --> $DIR/privacy5.rs:75:32\n    |\n LL |     match b { a::B(1) => {} a::B(_) => {} } //~ ERROR tuple struct `B` is private\n-   |                             ^^^^\n+   |                                ^\n \n error[E0603]: tuple struct `C` is private\n-  --> $DIR/privacy5.rs:78:9\n+  --> $DIR/privacy5.rs:78:12\n    |\n LL |     let a::C(_, _) = c; //~ ERROR tuple struct `C` is private\n-   |         ^^^^\n+   |            ^\n \n error[E0603]: tuple struct `C` is private\n-  --> $DIR/privacy5.rs:79:9\n+  --> $DIR/privacy5.rs:79:12\n    |\n LL |     let a::C(_a, _) = c; //~ ERROR tuple struct `C` is private\n-   |         ^^^^\n+   |            ^\n \n error[E0603]: tuple struct `C` is private\n-  --> $DIR/privacy5.rs:80:9\n+  --> $DIR/privacy5.rs:80:12\n    |\n LL |     let a::C(_, _b) = c; //~ ERROR tuple struct `C` is private\n-   |         ^^^^\n+   |            ^\n \n error[E0603]: tuple struct `C` is private\n-  --> $DIR/privacy5.rs:81:9\n+  --> $DIR/privacy5.rs:81:12\n    |\n LL |     let a::C(_a, _b) = c; //~ ERROR tuple struct `C` is private\n-   |         ^^^^\n+   |            ^\n \n error[E0603]: tuple struct `C` is private\n-  --> $DIR/privacy5.rs:82:15\n+  --> $DIR/privacy5.rs:82:18\n    |\n LL |     match c { a::C(_, _) => {} } //~ ERROR tuple struct `C` is private\n-   |               ^^^^\n+   |                  ^\n \n error[E0603]: tuple struct `C` is private\n-  --> $DIR/privacy5.rs:83:15\n+  --> $DIR/privacy5.rs:83:18\n    |\n LL |     match c { a::C(_a, _) => {} } //~ ERROR tuple struct `C` is private\n-   |               ^^^^\n+   |                  ^\n \n error[E0603]: tuple struct `C` is private\n-  --> $DIR/privacy5.rs:84:15\n+  --> $DIR/privacy5.rs:84:18\n    |\n LL |     match c { a::C(_, _b) => {} } //~ ERROR tuple struct `C` is private\n-   |               ^^^^\n+   |                  ^\n \n error[E0603]: tuple struct `C` is private\n-  --> $DIR/privacy5.rs:85:15\n+  --> $DIR/privacy5.rs:85:18\n    |\n LL |     match c { a::C(_a, _b) => {} } //~ ERROR tuple struct `C` is private\n-   |               ^^^^\n+   |                  ^\n \n error[E0603]: tuple struct `A` is private\n-  --> $DIR/privacy5.rs:93:14\n+  --> $DIR/privacy5.rs:93:17\n    |\n LL |     let a2 = a::A; //~ ERROR tuple struct `A` is private\n-   |              ^^^^\n+   |                 ^\n \n error[E0603]: tuple struct `B` is private\n-  --> $DIR/privacy5.rs:94:14\n+  --> $DIR/privacy5.rs:94:17\n    |\n LL |     let b2 = a::B; //~ ERROR tuple struct `B` is private\n-   |              ^^^^\n+   |                 ^\n \n error[E0603]: tuple struct `C` is private\n-  --> $DIR/privacy5.rs:95:14\n+  --> $DIR/privacy5.rs:95:17\n    |\n LL |     let c2 = a::C; //~ ERROR tuple struct `C` is private\n-   |              ^^^^\n+   |                 ^\n \n error[E0603]: tuple struct `A` is private\n-  --> $DIR/privacy5.rs:100:13\n+  --> $DIR/privacy5.rs:100:20\n    |\n LL |     let a = other::A(()); //~ ERROR tuple struct `A` is private\n-   |             ^^^^^^^^\n+   |                    ^\n \n error[E0603]: tuple struct `B` is private\n-  --> $DIR/privacy5.rs:101:13\n+  --> $DIR/privacy5.rs:101:20\n    |\n LL |     let b = other::B(2); //~ ERROR tuple struct `B` is private\n-   |             ^^^^^^^^\n+   |                    ^\n \n error[E0603]: tuple struct `C` is private\n-  --> $DIR/privacy5.rs:102:13\n+  --> $DIR/privacy5.rs:102:20\n    |\n LL |     let c = other::C(2, 3); //~ ERROR tuple struct `C` is private\n-   |             ^^^^^^^^\n+   |                    ^\n \n error[E0603]: tuple struct `A` is private\n-  --> $DIR/privacy5.rs:105:9\n+  --> $DIR/privacy5.rs:105:16\n    |\n LL |     let other::A(()) = a; //~ ERROR tuple struct `A` is private\n-   |         ^^^^^^^^\n+   |                ^\n \n error[E0603]: tuple struct `A` is private\n-  --> $DIR/privacy5.rs:106:9\n+  --> $DIR/privacy5.rs:106:16\n    |\n LL |     let other::A(_) = a; //~ ERROR tuple struct `A` is private\n-   |         ^^^^^^^^\n+   |                ^\n \n error[E0603]: tuple struct `A` is private\n-  --> $DIR/privacy5.rs:107:15\n+  --> $DIR/privacy5.rs:107:22\n    |\n LL |     match a { other::A(()) => {} } //~ ERROR tuple struct `A` is private\n-   |               ^^^^^^^^\n+   |                      ^\n \n error[E0603]: tuple struct `A` is private\n-  --> $DIR/privacy5.rs:108:15\n+  --> $DIR/privacy5.rs:108:22\n    |\n LL |     match a { other::A(_) => {} } //~ ERROR tuple struct `A` is private\n-   |               ^^^^^^^^\n+   |                      ^\n \n error[E0603]: tuple struct `B` is private\n-  --> $DIR/privacy5.rs:110:9\n+  --> $DIR/privacy5.rs:110:16\n    |\n LL |     let other::B(_) = b; //~ ERROR tuple struct `B` is private\n-   |         ^^^^^^^^\n+   |                ^\n \n error[E0603]: tuple struct `B` is private\n-  --> $DIR/privacy5.rs:111:9\n+  --> $DIR/privacy5.rs:111:16\n    |\n LL |     let other::B(_b) = b; //~ ERROR tuple struct `B` is private\n-   |         ^^^^^^^^\n+   |                ^\n \n error[E0603]: tuple struct `B` is private\n-  --> $DIR/privacy5.rs:112:15\n+  --> $DIR/privacy5.rs:112:22\n    |\n LL |     match b { other::B(_) => {} } //~ ERROR tuple struct `B` is private\n-   |               ^^^^^^^^\n+   |                      ^\n \n error[E0603]: tuple struct `B` is private\n-  --> $DIR/privacy5.rs:113:15\n+  --> $DIR/privacy5.rs:113:22\n    |\n LL |     match b { other::B(_b) => {} } //~ ERROR tuple struct `B` is private\n-   |               ^^^^^^^^\n+   |                      ^\n \n error[E0603]: tuple struct `B` is private\n-  --> $DIR/privacy5.rs:114:15\n+  --> $DIR/privacy5.rs:114:22\n    |\n LL |     match b { other::B(1) => {} other::B(_) => {} } //~ ERROR tuple struct `B` is private\n-   |               ^^^^^^^^\n+   |                      ^\n \n error[E0603]: tuple struct `B` is private\n-  --> $DIR/privacy5.rs:114:33\n+  --> $DIR/privacy5.rs:114:40\n    |\n LL |     match b { other::B(1) => {} other::B(_) => {} } //~ ERROR tuple struct `B` is private\n-   |                                 ^^^^^^^^\n+   |                                        ^\n \n error[E0603]: tuple struct `C` is private\n-  --> $DIR/privacy5.rs:117:9\n+  --> $DIR/privacy5.rs:117:16\n    |\n LL |     let other::C(_, _) = c; //~ ERROR tuple struct `C` is private\n-   |         ^^^^^^^^\n+   |                ^\n \n error[E0603]: tuple struct `C` is private\n-  --> $DIR/privacy5.rs:118:9\n+  --> $DIR/privacy5.rs:118:16\n    |\n LL |     let other::C(_a, _) = c; //~ ERROR tuple struct `C` is private\n-   |         ^^^^^^^^\n+   |                ^\n \n error[E0603]: tuple struct `C` is private\n-  --> $DIR/privacy5.rs:119:9\n+  --> $DIR/privacy5.rs:119:16\n    |\n LL |     let other::C(_, _b) = c; //~ ERROR tuple struct `C` is private\n-   |         ^^^^^^^^\n+   |                ^\n \n error[E0603]: tuple struct `C` is private\n-  --> $DIR/privacy5.rs:120:9\n+  --> $DIR/privacy5.rs:120:16\n    |\n LL |     let other::C(_a, _b) = c; //~ ERROR tuple struct `C` is private\n-   |         ^^^^^^^^\n+   |                ^\n \n error[E0603]: tuple struct `C` is private\n-  --> $DIR/privacy5.rs:121:15\n+  --> $DIR/privacy5.rs:121:22\n    |\n LL |     match c { other::C(_, _) => {} } //~ ERROR tuple struct `C` is private\n-   |               ^^^^^^^^\n+   |                      ^\n \n error[E0603]: tuple struct `C` is private\n-  --> $DIR/privacy5.rs:122:15\n+  --> $DIR/privacy5.rs:122:22\n    |\n LL |     match c { other::C(_a, _) => {} } //~ ERROR tuple struct `C` is private\n-   |               ^^^^^^^^\n+   |                      ^\n \n error[E0603]: tuple struct `C` is private\n-  --> $DIR/privacy5.rs:123:15\n+  --> $DIR/privacy5.rs:123:22\n    |\n LL |     match c { other::C(_, _b) => {} } //~ ERROR tuple struct `C` is private\n-   |               ^^^^^^^^\n+   |                      ^\n \n error[E0603]: tuple struct `C` is private\n-  --> $DIR/privacy5.rs:124:15\n+  --> $DIR/privacy5.rs:124:22\n    |\n LL |     match c { other::C(_a, _b) => {} } //~ ERROR tuple struct `C` is private\n-   |               ^^^^^^^^\n+   |                      ^\n \n error[E0603]: tuple struct `A` is private\n-  --> $DIR/privacy5.rs:132:14\n+  --> $DIR/privacy5.rs:132:21\n    |\n LL |     let a2 = other::A; //~ ERROR tuple struct `A` is private\n-   |              ^^^^^^^^\n+   |                     ^\n \n error[E0603]: tuple struct `B` is private\n-  --> $DIR/privacy5.rs:133:14\n+  --> $DIR/privacy5.rs:133:21\n    |\n LL |     let b2 = other::B; //~ ERROR tuple struct `B` is private\n-   |              ^^^^^^^^\n+   |                     ^\n \n error[E0603]: tuple struct `C` is private\n-  --> $DIR/privacy5.rs:134:14\n+  --> $DIR/privacy5.rs:134:21\n    |\n LL |     let c2 = other::C; //~ ERROR tuple struct `C` is private\n-   |              ^^^^^^^^\n+   |                     ^\n \n error: aborting due to 48 previous errors\n "}, {"sha": "468bfeaf32e9d5c07d0609e523f2c26a6da0a63a", "filename": "src/test/ui/privacy/private-item-simple.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/acdbd0643cc3d7bd74826c0f13746c81c08d6cc1/src%2Ftest%2Fui%2Fprivacy%2Fprivate-item-simple.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/acdbd0643cc3d7bd74826c0f13746c81c08d6cc1/src%2Ftest%2Fui%2Fprivacy%2Fprivate-item-simple.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fprivacy%2Fprivate-item-simple.stderr?ref=acdbd0643cc3d7bd74826c0f13746c81c08d6cc1", "patch": "@@ -1,8 +1,8 @@\n error[E0603]: function `f` is private\n-  --> $DIR/private-item-simple.rs:16:5\n+  --> $DIR/private-item-simple.rs:16:8\n    |\n LL |     a::f(); //~ ERROR function `f` is private\n-   |     ^^^^\n+   |        ^\n \n error: aborting due to previous error\n "}, {"sha": "afc3ee2db4b8f1cb7b34a7175ce919b72a284927", "filename": "src/test/ui/privacy/restricted/test.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/acdbd0643cc3d7bd74826c0f13746c81c08d6cc1/src%2Ftest%2Fui%2Fprivacy%2Frestricted%2Ftest.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/acdbd0643cc3d7bd74826c0f13746c81c08d6cc1/src%2Ftest%2Fui%2Fprivacy%2Frestricted%2Ftest.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fprivacy%2Frestricted%2Ftest.stderr?ref=acdbd0643cc3d7bd74826c0f13746c81c08d6cc1", "patch": "@@ -23,16 +23,16 @@ LL |         pub(super) use foo::bar::f as g; //~ ERROR cannot be re-exported\n    |                        ^^^^^^^^^^^^^^^^\n \n error[E0603]: struct `Crate` is private\n-  --> $DIR/test.rs:48:9\n+  --> $DIR/test.rs:48:25\n    |\n LL |     use pub_restricted::Crate; //~ ERROR private\n-   |         ^^^^^^^^^^^^^^^^^^^^^\n+   |                         ^^^^^\n \n error[E0603]: function `f` is private\n-  --> $DIR/test.rs:40:9\n+  --> $DIR/test.rs:40:19\n    |\n LL |     use foo::bar::f; //~ ERROR private\n-   |         ^^^^^^^^^^^\n+   |                   ^\n \n error[E0616]: field `x` of struct `foo::bar::S` is private\n   --> $DIR/test.rs:41:5"}, {"sha": "8e08f124d6807f8fdfc9bf253cf346a128aac508", "filename": "src/test/ui/resolve/privacy-enum-ctor.stderr", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/acdbd0643cc3d7bd74826c0f13746c81c08d6cc1/src%2Ftest%2Fui%2Fresolve%2Fprivacy-enum-ctor.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/acdbd0643cc3d7bd74826c0f13746c81c08d6cc1/src%2Ftest%2Fui%2Fresolve%2Fprivacy-enum-ctor.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fresolve%2Fprivacy-enum-ctor.stderr?ref=acdbd0643cc3d7bd74826c0f13746c81c08d6cc1", "patch": "@@ -132,28 +132,28 @@ LL | use m::n::Z;\n    |\n \n error[E0603]: enum `Z` is private\n-  --> $DIR/privacy-enum-ctor.rs:67:16\n+  --> $DIR/privacy-enum-ctor.rs:67:22\n    |\n LL |     let _: Z = m::n::Z;\n-   |                ^^^^^^^\n+   |                      ^\n \n error[E0603]: enum `Z` is private\n-  --> $DIR/privacy-enum-ctor.rs:71:16\n+  --> $DIR/privacy-enum-ctor.rs:71:22\n    |\n LL |     let _: Z = m::n::Z::Fn;\n-   |                ^^^^^^^^^^^\n+   |                      ^\n \n error[E0603]: enum `Z` is private\n-  --> $DIR/privacy-enum-ctor.rs:74:16\n+  --> $DIR/privacy-enum-ctor.rs:74:22\n    |\n LL |     let _: Z = m::n::Z::Struct;\n-   |                ^^^^^^^^^^^^^^^\n+   |                      ^\n \n error[E0603]: enum `Z` is private\n-  --> $DIR/privacy-enum-ctor.rs:78:16\n+  --> $DIR/privacy-enum-ctor.rs:78:22\n    |\n LL |     let _: Z = m::n::Z::Unit {};\n-   |                ^^^^^^^^^^^^^\n+   |                      ^\n \n error[E0308]: mismatched types\n   --> $DIR/privacy-enum-ctor.rs:37:20"}, {"sha": "c4713bd77a87a70715a846d548a34e6aac372c50", "filename": "src/test/ui/resolve/privacy-struct-ctor.stderr", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/acdbd0643cc3d7bd74826c0f13746c81c08d6cc1/src%2Ftest%2Fui%2Fresolve%2Fprivacy-struct-ctor.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/acdbd0643cc3d7bd74826c0f13746c81c08d6cc1/src%2Ftest%2Fui%2Fresolve%2Fprivacy-struct-ctor.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fresolve%2Fprivacy-struct-ctor.stderr?ref=acdbd0643cc3d7bd74826c0f13746c81c08d6cc1", "patch": "@@ -38,40 +38,40 @@ LL | use m::S;\n    |\n \n error[E0603]: tuple struct `Z` is private\n-  --> $DIR/privacy-struct-ctor.rs:28:9\n+  --> $DIR/privacy-struct-ctor.rs:28:12\n    |\n LL |         n::Z;\n-   |         ^^^^\n+   |            ^\n \n error[E0603]: tuple struct `S` is private\n-  --> $DIR/privacy-struct-ctor.rs:39:5\n+  --> $DIR/privacy-struct-ctor.rs:39:8\n    |\n LL |     m::S;\n-   |     ^^^^\n+   |        ^\n \n error[E0603]: tuple struct `S` is private\n-  --> $DIR/privacy-struct-ctor.rs:41:16\n+  --> $DIR/privacy-struct-ctor.rs:41:19\n    |\n LL |     let _: S = m::S(2);\n-   |                ^^^^\n+   |                   ^\n \n error[E0603]: tuple struct `Z` is private\n-  --> $DIR/privacy-struct-ctor.rs:45:5\n+  --> $DIR/privacy-struct-ctor.rs:45:11\n    |\n LL |     m::n::Z;\n-   |     ^^^^^^^\n+   |           ^\n \n error[E0603]: tuple struct `S` is private\n-  --> $DIR/privacy-struct-ctor.rs:51:5\n+  --> $DIR/privacy-struct-ctor.rs:51:16\n    |\n LL |     xcrate::m::S;\n-   |     ^^^^^^^^^^^^\n+   |                ^\n \n error[E0603]: tuple struct `Z` is private\n-  --> $DIR/privacy-struct-ctor.rs:55:5\n+  --> $DIR/privacy-struct-ctor.rs:55:19\n    |\n LL |     xcrate::m::n::Z;\n-   |     ^^^^^^^^^^^^^^^\n+   |                   ^\n \n error: aborting due to 10 previous errors\n "}, {"sha": "141e4b73b58afb8ec7cf986fcd8f7e40cebecac2", "filename": "src/test/ui/rfc-2008-non-exhaustive/structs.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/acdbd0643cc3d7bd74826c0f13746c81c08d6cc1/src%2Ftest%2Fui%2Frfc-2008-non-exhaustive%2Fstructs.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/acdbd0643cc3d7bd74826c0f13746c81c08d6cc1/src%2Ftest%2Fui%2Frfc-2008-non-exhaustive%2Fstructs.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2008-non-exhaustive%2Fstructs.stderr?ref=acdbd0643cc3d7bd74826c0f13746c81c08d6cc1", "patch": "@@ -11,16 +11,16 @@ LL |     let us = UnitStruct;\n    |              ^^^^^^^^^^ constructor is not visible here due to private fields\n \n error[E0603]: tuple struct `TupleStruct` is private\n-  --> $DIR/structs.rs:33:23\n+  --> $DIR/structs.rs:33:32\n    |\n LL |     let ts_explicit = structs::TupleStruct(640, 480);\n-   |                       ^^^^^^^^^^^^^^^^^^^^\n+   |                                ^^^^^^^^^^^\n \n error[E0603]: unit struct `UnitStruct` is private\n-  --> $DIR/structs.rs:42:23\n+  --> $DIR/structs.rs:42:32\n    |\n LL |     let us_explicit = structs::UnitStruct;\n-   |                       ^^^^^^^^^^^^^^^^^^^\n+   |                                ^^^^^^^^^^\n \n error[E0639]: cannot create non-exhaustive struct using struct expression\n   --> $DIR/structs.rs:17:14"}, {"sha": "4faaf6cce2435de6790d5a43d57d919148ef135b", "filename": "src/test/ui/shadowed/shadowed-use-visibility.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/acdbd0643cc3d7bd74826c0f13746c81c08d6cc1/src%2Ftest%2Fui%2Fshadowed%2Fshadowed-use-visibility.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/acdbd0643cc3d7bd74826c0f13746c81c08d6cc1/src%2Ftest%2Fui%2Fshadowed%2Fshadowed-use-visibility.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fshadowed%2Fshadowed-use-visibility.stderr?ref=acdbd0643cc3d7bd74826c0f13746c81c08d6cc1", "patch": "@@ -1,14 +1,14 @@\n error[E0603]: module `bar` is private\n-  --> $DIR/shadowed-use-visibility.rs:19:9\n+  --> $DIR/shadowed-use-visibility.rs:19:14\n    |\n LL |     use foo::bar::f as g; //~ ERROR module `bar` is private\n-   |         ^^^^^^^^^^^^^^^^\n+   |              ^^^\n \n error[E0603]: module `f` is private\n-  --> $DIR/shadowed-use-visibility.rs:25:5\n+  --> $DIR/shadowed-use-visibility.rs:25:10\n    |\n LL | use bar::f::f; //~ ERROR module `f` is private\n-   |     ^^^^^^^^^\n+   |          ^\n \n error: aborting due to 2 previous errors\n "}, {"sha": "2631e99a9b77d70de0645c9707dd90db9bf13171", "filename": "src/test/ui/static/static-priv-by-default2.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/acdbd0643cc3d7bd74826c0f13746c81c08d6cc1/src%2Ftest%2Fui%2Fstatic%2Fstatic-priv-by-default2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/acdbd0643cc3d7bd74826c0f13746c81c08d6cc1/src%2Ftest%2Fui%2Fstatic%2Fstatic-priv-by-default2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fstatic%2Fstatic-priv-by-default2.stderr?ref=acdbd0643cc3d7bd74826c0f13746c81c08d6cc1", "patch": "@@ -1,14 +1,14 @@\n error[E0603]: static `private` is private\n-  --> $DIR/static-priv-by-default2.rs:25:9\n+  --> $DIR/static-priv-by-default2.rs:25:30\n    |\n LL |     use child::childs_child::private;\n-   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |                              ^^^^^^^\n \n error[E0603]: static `private` is private\n-  --> $DIR/static-priv-by-default2.rs:33:9\n+  --> $DIR/static-priv-by-default2.rs:33:33\n    |\n LL |     use static_priv_by_default::private;\n-   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |                                 ^^^^^^^\n \n error: aborting due to 2 previous errors\n "}, {"sha": "7c214f9dcea0d0b0ad66719bb4dec7d5b517997e", "filename": "src/test/ui/structs/struct-variant-privacy-xc.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/acdbd0643cc3d7bd74826c0f13746c81c08d6cc1/src%2Ftest%2Fui%2Fstructs%2Fstruct-variant-privacy-xc.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/acdbd0643cc3d7bd74826c0f13746c81c08d6cc1/src%2Ftest%2Fui%2Fstructs%2Fstruct-variant-privacy-xc.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fstructs%2Fstruct-variant-privacy-xc.stderr?ref=acdbd0643cc3d7bd74826c0f13746c81c08d6cc1", "patch": "@@ -1,14 +1,14 @@\n error[E0603]: enum `Bar` is private\n-  --> $DIR/struct-variant-privacy-xc.rs:14:9\n+  --> $DIR/struct-variant-privacy-xc.rs:14:33\n    |\n LL | fn f(b: struct_variant_privacy::Bar) { //~ ERROR enum `Bar` is private\n-   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |                                 ^^^\n \n error[E0603]: enum `Bar` is private\n-  --> $DIR/struct-variant-privacy-xc.rs:16:9\n+  --> $DIR/struct-variant-privacy-xc.rs:16:33\n    |\n LL |         struct_variant_privacy::Bar::Baz { a: _a } => {} //~ ERROR enum `Bar` is private\n-   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |                                 ^^^\n \n error: aborting due to 2 previous errors\n "}, {"sha": "ffecd880069497fe66b81391d36e885115f6e946", "filename": "src/test/ui/structs/struct-variant-privacy.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/acdbd0643cc3d7bd74826c0f13746c81c08d6cc1/src%2Ftest%2Fui%2Fstructs%2Fstruct-variant-privacy.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/acdbd0643cc3d7bd74826c0f13746c81c08d6cc1/src%2Ftest%2Fui%2Fstructs%2Fstruct-variant-privacy.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fstructs%2Fstruct-variant-privacy.stderr?ref=acdbd0643cc3d7bd74826c0f13746c81c08d6cc1", "patch": "@@ -1,14 +1,14 @@\n error[E0603]: enum `Bar` is private\n-  --> $DIR/struct-variant-privacy.rs:16:9\n+  --> $DIR/struct-variant-privacy.rs:16:14\n    |\n LL | fn f(b: foo::Bar) { //~ ERROR enum `Bar` is private\n-   |         ^^^^^^^^\n+   |              ^^^\n \n error[E0603]: enum `Bar` is private\n-  --> $DIR/struct-variant-privacy.rs:18:9\n+  --> $DIR/struct-variant-privacy.rs:18:14\n    |\n LL |         foo::Bar::Baz { a: _a } => {} //~ ERROR enum `Bar` is private\n-   |         ^^^^^^^^^^^^^\n+   |              ^^^\n \n error: aborting due to 2 previous errors\n "}, {"sha": "a998f6b0b8f22b28614a84b9623e96a8a9b8d2ee", "filename": "src/test/ui/unreachable/unreachable-variant.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/acdbd0643cc3d7bd74826c0f13746c81c08d6cc1/src%2Ftest%2Fui%2Funreachable%2Funreachable-variant.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/acdbd0643cc3d7bd74826c0f13746c81c08d6cc1/src%2Ftest%2Fui%2Funreachable%2Funreachable-variant.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Funreachable%2Funreachable-variant.stderr?ref=acdbd0643cc3d7bd74826c0f13746c81c08d6cc1", "patch": "@@ -1,8 +1,8 @@\n error[E0603]: module `super_sekrit` is private\n-  --> $DIR/unreachable-variant.rs:16:14\n+  --> $DIR/unreachable-variant.rs:16:21\n    |\n LL |     let _x = other::super_sekrit::sooper_sekrit::baz; //~ ERROR is private\n-   |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |                     ^^^^^^^^^^^^\n \n error: aborting due to previous error\n "}, {"sha": "f8e5e18097ba4ca5828eaee4fa877ba57de27243", "filename": "src/test/ui/use/use-from-trait-xc.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/acdbd0643cc3d7bd74826c0f13746c81c08d6cc1/src%2Ftest%2Fui%2Fuse%2Fuse-from-trait-xc.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/acdbd0643cc3d7bd74826c0f13746c81c08d6cc1/src%2Ftest%2Fui%2Fuse%2Fuse-from-trait-xc.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fuse%2Fuse-from-trait-xc.stderr?ref=acdbd0643cc3d7bd74826c0f13746c81c08d6cc1", "patch": "@@ -41,16 +41,16 @@ LL | use use_from_trait_xc::Baz::new as baznew;\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ no `new` in `Baz`\n \n error[E0603]: struct `Foo` is private\n-  --> $DIR/use-from-trait-xc.rs:24:5\n+  --> $DIR/use-from-trait-xc.rs:24:24\n    |\n LL | use use_from_trait_xc::Foo::new; //~ ERROR struct `Foo` is private\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |                        ^^^\n \n error[E0603]: struct `Foo` is private\n-  --> $DIR/use-from-trait-xc.rs:27:5\n+  --> $DIR/use-from-trait-xc.rs:27:24\n    |\n LL | use use_from_trait_xc::Foo::C; //~ ERROR struct `Foo` is private\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |                        ^^^\n \n error: aborting due to 9 previous errors\n "}, {"sha": "2ef5fe7947e77b51edc9d6eb9c5dbf2e27e0e76d", "filename": "src/test/ui/use/use-mod/use-mod-3.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/acdbd0643cc3d7bd74826c0f13746c81c08d6cc1/src%2Ftest%2Fui%2Fuse%2Fuse-mod%2Fuse-mod-3.rs", "raw_url": "https://github.com/rust-lang/rust/raw/acdbd0643cc3d7bd74826c0f13746c81c08d6cc1/src%2Ftest%2Fui%2Fuse%2Fuse-mod%2Fuse-mod-3.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fuse%2Fuse-mod%2Fuse-mod-3.rs?ref=acdbd0643cc3d7bd74826c0f13746c81c08d6cc1", "patch": "@@ -8,11 +8,11 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-use foo::bar::{\n-    self //~ ERROR module `bar` is private\n+use foo::bar::{ //~ ERROR module `bar` is private\n+    self\n };\n-use foo::bar::{\n-    Bar //~ ERROR module `bar` is private\n+use foo::bar::{ //~ ERROR module `bar` is private\n+    Bar\n };\n \n mod foo {"}, {"sha": "9284091dfa878f10d0bad3810a670b25d7a93a0f", "filename": "src/test/ui/use/use-mod/use-mod-3.stderr", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/acdbd0643cc3d7bd74826c0f13746c81c08d6cc1/src%2Ftest%2Fui%2Fuse%2Fuse-mod%2Fuse-mod-3.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/acdbd0643cc3d7bd74826c0f13746c81c08d6cc1/src%2Ftest%2Fui%2Fuse%2Fuse-mod%2Fuse-mod-3.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fuse%2Fuse-mod%2Fuse-mod-3.stderr?ref=acdbd0643cc3d7bd74826c0f13746c81c08d6cc1", "patch": "@@ -1,14 +1,14 @@\n error[E0603]: module `bar` is private\n-  --> $DIR/use-mod-3.rs:12:5\n+  --> $DIR/use-mod-3.rs:11:10\n    |\n-LL |     self //~ ERROR module `bar` is private\n-   |     ^^^^\n+LL | use foo::bar::{ //~ ERROR module `bar` is private\n+   |          ^^^\n \n error[E0603]: module `bar` is private\n-  --> $DIR/use-mod-3.rs:15:5\n+  --> $DIR/use-mod-3.rs:14:10\n    |\n-LL |     Bar //~ ERROR module `bar` is private\n-   |     ^^^\n+LL | use foo::bar::{ //~ ERROR module `bar` is private\n+   |          ^^^\n \n error: aborting due to 2 previous errors\n "}, {"sha": "ea1f6aaa7d2fcb604327e6a364f7c523e5684a50", "filename": "src/test/ui/xcrate/xcrate-private-by-default.stderr", "status": "modified", "additions": 20, "deletions": 20, "changes": 40, "blob_url": "https://github.com/rust-lang/rust/blob/acdbd0643cc3d7bd74826c0f13746c81c08d6cc1/src%2Ftest%2Fui%2Fxcrate%2Fxcrate-private-by-default.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/acdbd0643cc3d7bd74826c0f13746c81c08d6cc1/src%2Ftest%2Fui%2Fxcrate%2Fxcrate-private-by-default.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fxcrate%2Fxcrate-private-by-default.stderr?ref=acdbd0643cc3d7bd74826c0f13746c81c08d6cc1", "patch": "@@ -1,62 +1,62 @@\n error[E0603]: static `j` is private\n-  --> $DIR/xcrate-private-by-default.rs:33:5\n+  --> $DIR/xcrate-private-by-default.rs:33:29\n    |\n LL |     static_priv_by_default::j;\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |                             ^\n \n error[E0603]: function `k` is private\n-  --> $DIR/xcrate-private-by-default.rs:35:5\n+  --> $DIR/xcrate-private-by-default.rs:35:29\n    |\n LL |     static_priv_by_default::k;\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |                             ^\n \n error[E0603]: unit struct `l` is private\n-  --> $DIR/xcrate-private-by-default.rs:37:5\n+  --> $DIR/xcrate-private-by-default.rs:37:29\n    |\n LL |     static_priv_by_default::l;\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |                             ^\n \n error[E0603]: enum `m` is private\n-  --> $DIR/xcrate-private-by-default.rs:39:11\n+  --> $DIR/xcrate-private-by-default.rs:39:35\n    |\n LL |     foo::<static_priv_by_default::m>();\n-   |           ^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |                                   ^\n \n error[E0603]: type alias `n` is private\n-  --> $DIR/xcrate-private-by-default.rs:41:11\n+  --> $DIR/xcrate-private-by-default.rs:41:35\n    |\n LL |     foo::<static_priv_by_default::n>();\n-   |           ^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |                                   ^\n \n error[E0603]: module `foo` is private\n-  --> $DIR/xcrate-private-by-default.rs:45:5\n+  --> $DIR/xcrate-private-by-default.rs:45:29\n    |\n LL |     static_priv_by_default::foo::a;\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |                             ^^^\n \n error[E0603]: module `foo` is private\n-  --> $DIR/xcrate-private-by-default.rs:47:5\n+  --> $DIR/xcrate-private-by-default.rs:47:29\n    |\n LL |     static_priv_by_default::foo::b;\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |                             ^^^\n \n error[E0603]: module `foo` is private\n-  --> $DIR/xcrate-private-by-default.rs:49:5\n+  --> $DIR/xcrate-private-by-default.rs:49:29\n    |\n LL |     static_priv_by_default::foo::c;\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |                             ^^^\n \n error[E0603]: module `foo` is private\n-  --> $DIR/xcrate-private-by-default.rs:51:11\n+  --> $DIR/xcrate-private-by-default.rs:51:35\n    |\n LL |     foo::<static_priv_by_default::foo::d>();\n-   |           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |                                   ^^^\n \n error[E0603]: module `foo` is private\n-  --> $DIR/xcrate-private-by-default.rs:53:11\n+  --> $DIR/xcrate-private-by-default.rs:53:35\n    |\n LL |     foo::<static_priv_by_default::foo::e>();\n-   |           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |                                   ^^^\n \n error: aborting due to 10 previous errors\n "}]}