{"sha": "c8c691ff88713d6c4012ec5978d51cbe11300a94", "node_id": "C_kwDOAAsO6NoAKGM4YzY5MWZmODg3MTNkNmM0MDEyZWM1OTc4ZDUxY2JlMTEzMDBhOTQ", "commit": {"author": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2022-03-13T22:13:58Z"}, "committer": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2022-03-13T22:13:58Z"}, "message": "Update comments.", "tree": {"sha": "67563960b9b7c2dda75f5f47d93ce107f0e0bfe3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/67563960b9b7c2dda75f5f47d93ce107f0e0bfe3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c8c691ff88713d6c4012ec5978d51cbe11300a94", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c8c691ff88713d6c4012ec5978d51cbe11300a94", "html_url": "https://github.com/rust-lang/rust/commit/c8c691ff88713d6c4012ec5978d51cbe11300a94", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c8c691ff88713d6c4012ec5978d51cbe11300a94/comments", "author": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d3b7ea6c9eae104995da1e2a29d662320d30b9f1", "url": "https://api.github.com/repos/rust-lang/rust/commits/d3b7ea6c9eae104995da1e2a29d662320d30b9f1", "html_url": "https://github.com/rust-lang/rust/commit/d3b7ea6c9eae104995da1e2a29d662320d30b9f1"}], "stats": {"total": 14, "additions": 5, "deletions": 9}, "files": [{"sha": "9d973e29999afaa81f3d4c1c0cb3035a4805c747", "filename": "compiler/rustc_ast_lowering/src/lib.rs", "status": "modified", "additions": 5, "deletions": 9, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/c8c691ff88713d6c4012ec5978d51cbe11300a94/compiler%2Frustc_ast_lowering%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c8c691ff88713d6c4012ec5978d51cbe11300a94/compiler%2Frustc_ast_lowering%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_ast_lowering%2Fsrc%2Flib.rs?ref=c8c691ff88713d6c4012ec5978d51cbe11300a94", "patch": "@@ -129,19 +129,15 @@ struct LoweringContext<'a, 'hir: 'a> {\n     /// written at all (e.g., `&T` or `std::cell::Ref<T>`).\n     anonymous_lifetime_mode: AnonymousLifetimeMode,\n \n-    /// Used to create lifetime definitions from in-band lifetime usages.\n-    /// e.g., `fn foo(x: &'x u8) -> &'x u8` to `fn foo<'x>(x: &'x u8) -> &'x u8`\n-    /// When a named lifetime is encountered in a function or impl header and\n-    /// has not been defined\n-    /// (i.e., it doesn't appear in the in_scope_lifetimes list), it is added\n+    /// Used to create lifetime definitions for anonymous lifetimes.\n+    /// When an anonymous lifetime is encountered in a function or impl header and\n+    /// requires to create a fresh lifetime parameter, it is added\n     /// to this list. The results of this list are then added to the list of\n     /// lifetime definitions in the corresponding impl or function generics.\n     lifetimes_to_define: Vec<(Span, NodeId)>,\n \n-    /// `true` if in-band lifetimes are being collected. This is used to\n-    /// indicate whether or not we're in a place where new lifetimes will result\n-    /// in in-band lifetime definitions, such a function or an impl header,\n-    /// including implicit lifetimes from `impl_header_lifetime_elision`.\n+    /// If anonymous lifetimes are being collected, this field holds the parent\n+    /// `LocalDefId` to create the fresh lifetime parameters' `LocalDefId`.\n     is_collecting_anonymous_lifetimes: Option<LocalDefId>,\n \n     /// Currently in-scope lifetimes defined in impl headers, fn headers, or HRTB."}]}