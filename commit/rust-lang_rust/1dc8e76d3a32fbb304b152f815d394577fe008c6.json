{"sha": "1dc8e76d3a32fbb304b152f815d394577fe008c6", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFkYzhlNzZkM2EzMmZiYjMwNGIxNTJmODE1ZDM5NDU3N2ZlMDA4YzY=", "commit": {"author": {"name": "Michael Woerister", "email": "michaelwoerister@gmail", "date": "2013-06-20T14:45:47Z"}, "committer": {"name": "Michael Woerister", "email": "michaelwoerister@gmail", "date": "2013-06-27T17:28:17Z"}, "message": "debuginfo: Made test cases use correct naming convention for variables.", "tree": {"sha": "29c6283afc47070b8ea5c8bd9c03f24287eb4d3e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/29c6283afc47070b8ea5c8bd9c03f24287eb4d3e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1dc8e76d3a32fbb304b152f815d394577fe008c6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1dc8e76d3a32fbb304b152f815d394577fe008c6", "html_url": "https://github.com/rust-lang/rust/commit/1dc8e76d3a32fbb304b152f815d394577fe008c6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1dc8e76d3a32fbb304b152f815d394577fe008c6/comments", "author": {"login": "michaelwoerister", "id": 1825894, "node_id": "MDQ6VXNlcjE4MjU4OTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1825894?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelwoerister", "html_url": "https://github.com/michaelwoerister", "followers_url": "https://api.github.com/users/michaelwoerister/followers", "following_url": "https://api.github.com/users/michaelwoerister/following{/other_user}", "gists_url": "https://api.github.com/users/michaelwoerister/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelwoerister/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelwoerister/subscriptions", "organizations_url": "https://api.github.com/users/michaelwoerister/orgs", "repos_url": "https://api.github.com/users/michaelwoerister/repos", "events_url": "https://api.github.com/users/michaelwoerister/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelwoerister/received_events", "type": "User", "site_admin": false}, "committer": {"login": "michaelwoerister", "id": 1825894, "node_id": "MDQ6VXNlcjE4MjU4OTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1825894?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelwoerister", "html_url": "https://github.com/michaelwoerister", "followers_url": "https://api.github.com/users/michaelwoerister/followers", "following_url": "https://api.github.com/users/michaelwoerister/following{/other_user}", "gists_url": "https://api.github.com/users/michaelwoerister/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelwoerister/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelwoerister/subscriptions", "organizations_url": "https://api.github.com/users/michaelwoerister/orgs", "repos_url": "https://api.github.com/users/michaelwoerister/repos", "events_url": "https://api.github.com/users/michaelwoerister/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelwoerister/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4d8f2fd8714b983aa8ae5d697c90998424930f5b", "url": "https://api.github.com/repos/rust-lang/rust/commits/4d8f2fd8714b983aa8ae5d697c90998424930f5b", "html_url": "https://github.com/rust-lang/rust/commit/4d8f2fd8714b983aa8ae5d697c90998424930f5b"}], "stats": {"total": 128, "additions": 64, "deletions": 64}, "files": [{"sha": "49e7bc255c10ffe2df5cd5981c56fc95eb719f85", "filename": "src/test/debug-info/simple-struct.rs", "status": "modified", "additions": 14, "deletions": 14, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/1dc8e76d3a32fbb304b152f815d394577fe008c6/src%2Ftest%2Fdebug-info%2Fsimple-struct.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1dc8e76d3a32fbb304b152f815d394577fe008c6/src%2Ftest%2Fdebug-info%2Fsimple-struct.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebug-info%2Fsimple-struct.rs?ref=1dc8e76d3a32fbb304b152f815d394577fe008c6", "patch": "@@ -16,30 +16,30 @@\n // debugger:run\n // debugger:finish\n \n-// debugger:print noPadding16\n+// debugger:print no_padding16\n // check:$1 = {x = 10000, y = -10001}\n \n-// debugger:print noPadding32\n+// debugger:print no_padding32\n // check:$2 = {x = -10002, y = -10003.5, z = 10004}\n \n-// debugger:print noPadding64\n+// debugger:print no_padding64\n // check:$3 = {x = -10005.5, y = 10006, z = 10007}\n \n-// debugger:print noPadding163264\n+// debugger:print no_padding163264\n // check:$4 = {a = -10008, b = 10009, c = 10010, d = 10011}\n \n-// debugger:print internalPadding\n+// debugger:print internal_padding\n // check:$5 = {x = 10012, y = -10013}\n \n-// debugger:print paddingAtEnd\n+// debugger:print padding_at_end\n // check:$6 = {x = -10014, y = 10015}\n \n \n struct NoPadding16 {\n     x: u16,\n     y: i16\n }\n- \n+\n struct NoPadding32 {\n     x: i32,\n     y: f32,\n@@ -70,13 +70,13 @@ struct PaddingAtEnd {\n }\n \n fn main() {\n-    let noPadding16 = NoPadding16 { x: 10000, y: -10001 };\n-    let noPadding32 = NoPadding32 { x: -10002, y: -10003.5, z: 10004 };\n-    let noPadding64 = NoPadding64 { x: -10005.5, y: 10006, z: 10007 };\n-    let noPadding163264 = NoPadding163264 { a: -10008, b: 10009, c: 10010, d: 10011 };\n- \n-    let internalPadding = InternalPadding { x: 10012, y: -10013 };\n-    let paddingAtEnd = PaddingAtEnd { x: -10014, y: 10015 };\n+    let no_padding16 = NoPadding16 { x: 10000, y: -10001 };\n+    let no_padding32 = NoPadding32 { x: -10002, y: -10003.5, z: 10004 };\n+    let no_padding64 = NoPadding64 { x: -10005.5, y: 10006, z: 10007 };\n+    let no_padding163264 = NoPadding163264 { a: -10008, b: 10009, c: 10010, d: 10011 };\n+\n+    let internal_padding = InternalPadding { x: 10012, y: -10013 };\n+    let padding_at_end = PaddingAtEnd { x: -10014, y: 10015 };\n \n     zzz();\n }"}, {"sha": "cfd8c24caa21a838763d0444dea177a245a5a999", "filename": "src/test/debug-info/struct-in-struct.rs", "status": "modified", "additions": 16, "deletions": 16, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/1dc8e76d3a32fbb304b152f815d394577fe008c6/src%2Ftest%2Fdebug-info%2Fstruct-in-struct.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1dc8e76d3a32fbb304b152f815d394577fe008c6/src%2Ftest%2Fdebug-info%2Fstruct-in-struct.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebug-info%2Fstruct-in-struct.rs?ref=1dc8e76d3a32fbb304b152f815d394577fe008c6", "patch": "@@ -55,7 +55,7 @@ struct InternalPaddingParent {\n struct PaddingAtEndParent {\n     x: PaddingAtEnd,\n     y: PaddingAtEnd,\n-    z: PaddingAtEnd   \n+    z: PaddingAtEnd\n }\n \n struct Mixed {\n@@ -84,7 +84,7 @@ struct Tree {\n }\n \n fn main() {\n-   \n+\n     let three_simple_structs = ThreeSimpleStructs {\n         x: Simple { x: 1 },\n         y: Simple { x: 2 },\n@@ -100,7 +100,7 @@ fn main() {\n     let padding_at_end_parent = PaddingAtEndParent {\n         x: PaddingAtEnd { x: 10, y: 11 },\n         y: PaddingAtEnd { x: 12, y: 13 },\n-        z: PaddingAtEnd { x: 14, y: 15 }   \n+        z: PaddingAtEnd { x: 14, y: 15 }\n     };\n \n     let mixed = Mixed {\n@@ -111,22 +111,22 @@ fn main() {\n     };\n \n     let bag = Bag { x: Simple { x: 22 } };\n-    let bag_in_bag = BagInBag \n+    let bag_in_bag = BagInBag\n     {\n-        x: Bag \n+        x: Bag\n         {\n-            x: Simple { x: 23 } \n-        } \n+            x: Simple { x: 23 }\n+        }\n     };\n \n-    let tjo = ThatsJustOverkill \n+    let tjo = ThatsJustOverkill\n     {\n-        x: BagInBag \n+        x: BagInBag\n         {\n-            x: Bag \n+            x: Bag\n             {\n-                x: Simple { x: 24 } \n-            } \n+                x: Simple { x: 24 }\n+            }\n         }\n     };\n \n@@ -138,12 +138,12 @@ fn main() {\n             y: InternalPadding { x: 28, y: 29 },\n             z: InternalPadding { x: 30, y: 31 }\n         },\n-        z: BagInBag \n+        z: BagInBag\n         {\n-            x: Bag \n+            x: Bag\n             {\n-                x: Simple { x: 32 } \n-            } \n+                x: Simple { x: 32 }\n+            }\n         }\n     };\n "}, {"sha": "369c9fd28ccdf23f55b39c6cca7e950c3d2d7bb8", "filename": "src/test/debug-info/tuple-in-struct.rs", "status": "modified", "additions": 20, "deletions": 20, "changes": 40, "blob_url": "https://github.com/rust-lang/rust/blob/1dc8e76d3a32fbb304b152f815d394577fe008c6/src%2Ftest%2Fdebug-info%2Ftuple-in-struct.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1dc8e76d3a32fbb304b152f815d394577fe008c6/src%2Ftest%2Fdebug-info%2Ftuple-in-struct.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebug-info%2Ftuple-in-struct.rs?ref=1dc8e76d3a32fbb304b152f815d394577fe008c6", "patch": "@@ -16,29 +16,29 @@\n // debugger:run\n // debugger:finish\n \n-// debugger:print noPadding1\n+// debugger:print no_padding1\n // check:$1 = {x = {0, 1}, y = 2, z = {3, 4, 5}}\n-// debugger:print noPadding2\n+// debugger:print no_padding2\n // check:$2 = {x = {6, 7}, y = {{8, 9}, 10}}\n \n-// debugger:print tupleInternalPadding\n+// debugger:print tuple_internal_padding\n // check:$3 = {x = {11, 12}, y = {13, 14}}\n-// debugger:print structInternalPadding\n+// debugger:print struct_internal_padding\n // check:$4 = {x = {15, 16}, y = {17, 18}}\n-// debugger:print bothInternallyPadded\n+// debugger:print both_internally_padded\n // check:$5 = {x = {19, 20, 21}, y = {22, 23}}\n \n-// debugger:print singleTuple\n+// debugger:print single_tuple\n // check:$6 = {x = {24, 25, 26}}\n \n-// debugger:print tuplePaddedAtEnd\n+// debugger:print tuple_padded_at_end\n // check:$7 = {x = {27, 28}, y = {29, 30}}\n-// debugger:print structPaddedAtEnd\n+// debugger:print struct_padded_at_end\n // check:$8 = {x = {31, 32}, y = {33, 34}}\n-// debugger:print bothPaddedAtEnd\n+// debugger:print both_padded_at_end\n // check:$9 = {x = {35, 36, 37}, y = {38, 39}}\n \n-// debugger:print mixedPadding\n+// debugger:print mixed_padding\n // check:$10 = {x = {{40, 41, 42}, {43, 44}}, y = {45, 46, 47, 48}}\n \n struct NoPadding1 {\n@@ -95,52 +95,52 @@ struct MixedPadding {\n \n \n fn main() {\n-    let noPadding1 = NoPadding1 {\n+    let no_padding1 = NoPadding1 {\n         x: (0, 1),\n         y: 2,\n         z: (3, 4, 5)\n     };\n \n-    let noPadding2 = NoPadding2 {\n+    let no_padding2 = NoPadding2 {\n         x: (6, 7),\n         y: ((8, 9), 10)\n     };\n \n-    let tupleInternalPadding = TupleInternalPadding {\n+    let tuple_internal_padding = TupleInternalPadding {\n         x: (11, 12),\n         y: (13, 14)\n     };\n \n-    let structInternalPadding = StructInternalPadding {\n+    let struct_internal_padding = StructInternalPadding {\n         x: (15, 16),\n         y: (17, 18)\n     };\n \n-    let bothInternallyPadded = BothInternallyPadded {\n+    let both_internally_padded = BothInternallyPadded {\n         x: (19, 20, 21),\n         y: (22, 23)\n     };\n \n-    let singleTuple = SingleTuple {\n+    let single_tuple = SingleTuple {\n         x: (24, 25, 26)\n     };\n \n-    let tuplePaddedAtEnd = TuplePaddedAtEnd {\n+    let tuple_padded_at_end = TuplePaddedAtEnd {\n         x: (27, 28),\n         y: (29, 30)\n     };\n \n-    let structPaddedAtEnd = StructPaddedAtEnd {\n+    let struct_padded_at_end = StructPaddedAtEnd {\n         x: (31, 32),\n         y: (33, 34)\n     };\n \n-    let bothPaddedAtEnd = BothPaddedAtEnd {\n+    let both_padded_at_end = BothPaddedAtEnd {\n         x: (35, 36, 37),\n         y: (38, 39)\n     };\n \n-    let mixedPadding = MixedPadding {\n+    let mixed_padding = MixedPadding {\n         x: ((40, 41, 42), (43, 44)),\n         y: (45, 46, 47, 48)\n     };"}, {"sha": "13f8719694e5feb56520f8f839bae4b44dd89665", "filename": "src/test/debug-info/tuple-in-tuple.rs", "status": "modified", "additions": 14, "deletions": 14, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/1dc8e76d3a32fbb304b152f815d394577fe008c6/src%2Ftest%2Fdebug-info%2Ftuple-in-tuple.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1dc8e76d3a32fbb304b152f815d394577fe008c6/src%2Ftest%2Fdebug-info%2Ftuple-in-tuple.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebug-info%2Ftuple-in-tuple.rs?ref=1dc8e76d3a32fbb304b152f815d394577fe008c6", "patch": "@@ -16,33 +16,33 @@\n // debugger:run\n // debugger:finish\n \n-// debugger:print noPadding1\n+// debugger:print no_padding1\n // check:$1 = {{0, 1}, 2, 3}\n-// debugger:print noPadding2\n+// debugger:print no_padding2\n // check:$2 = {4, {5, 6}, 7}\n-// debugger:print noPadding3\n+// debugger:print no_padding3\n // check:$3 = {8, 9, {10, 11}}\n \n-// debugger:print internalPadding1\n+// debugger:print internal_padding1\n // check:$4 = {12, {13, 14}}\n-// debugger:print internalPadding2\n+// debugger:print internal_padding2\n // check:$5 = {15, {16, 17}}\n \n-// debugger:print paddingAtEnd1\n+// debugger:print padding_at_end1\n // check:$6 = {18, {19, 20}}\n-// debugger:print paddingAtEnd2\n+// debugger:print padding_at_end2\n // check:$7 = {{21, 22}, 23}\n \n fn main() {\n-    let noPadding1 : ((u32, u32), u32, u32) = ((0, 1), 2, 3);\n-    let noPadding2 : (u32, (u32, u32), u32) = (4, (5, 6), 7);\n-    let noPadding3 : (u32, u32, (u32, u32)) = (8, 9, (10, 11));\n+    let no_padding1 : ((u32, u32), u32, u32) = ((0, 1), 2, 3);\n+    let no_padding2 : (u32, (u32, u32), u32) = (4, (5, 6), 7);\n+    let no_padding3 : (u32, u32, (u32, u32)) = (8, 9, (10, 11));\n \n-    let internalPadding1 : (i16, (i32, i32)) = (12, (13, 14));\n-    let internalPadding2 : (i16, (i16, i32)) = (15, (16, 17));\n+    let internal_padding1 : (i16, (i32, i32)) = (12, (13, 14));\n+    let internal_padding2 : (i16, (i16, i32)) = (15, (16, 17));\n \n-    let paddingAtEnd1 : (i32, (i32, i16)) = (18, (19, 20));\n-    let paddingAtEnd2 : ((i32, i16), i32) = ((21, 22), 23);\n+    let padding_at_end1 : (i32, (i32, i16)) = (18, (19, 20));\n+    let padding_at_end2 : ((i32, i16), i32) = ((21, 22), 23);\n \n     zzz();\n }"}]}