{"sha": "388eb24b6c479088a83c1b094d79221a32dfc7ff", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM4OGViMjRiNmM0NzkwODhhODNjMWIwOTRkNzkyMjFhMzJkZmM3ZmY=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-12-12T17:24:29Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-12-12T17:24:29Z"}, "message": "Auto merge of #79969 - petrochenkov:outestidy, r=Mark-Simulacrum\n\ntidy: Re-enable check for inline unit tests\n\nIt regressed in https://github.com/rust-lang/rust/pull/73265 and compiler crates are no longer checked.", "tree": {"sha": "cc436594fb390324354c179768c3d05b907b5e42", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/cc436594fb390324354c179768c3d05b907b5e42"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/388eb24b6c479088a83c1b094d79221a32dfc7ff", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/388eb24b6c479088a83c1b094d79221a32dfc7ff", "html_url": "https://github.com/rust-lang/rust/commit/388eb24b6c479088a83c1b094d79221a32dfc7ff", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/388eb24b6c479088a83c1b094d79221a32dfc7ff/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4c5c4aa00203b6a5aa2352d16c3d8e4fb1ad23ee", "url": "https://api.github.com/repos/rust-lang/rust/commits/4c5c4aa00203b6a5aa2352d16c3d8e4fb1ad23ee", "html_url": "https://github.com/rust-lang/rust/commit/4c5c4aa00203b6a5aa2352d16c3d8e4fb1ad23ee"}, {"sha": "05b557cfc981e4fc05fb47380e471f50cd23869d", "url": "https://api.github.com/repos/rust-lang/rust/commits/05b557cfc981e4fc05fb47380e471f50cd23869d", "html_url": "https://github.com/rust-lang/rust/commit/05b557cfc981e4fc05fb47380e471f50cd23869d"}], "stats": {"total": 61, "additions": 30, "deletions": 31}, "files": [{"sha": "3b722c04cb154b19f5d938966843de8a6577bc17", "filename": "compiler/rustc_expand/src/lib.rs", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/388eb24b6c479088a83c1b094d79221a32dfc7ff/compiler%2Frustc_expand%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/388eb24b6c479088a83c1b094d79221a32dfc7ff/compiler%2Frustc_expand%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_expand%2Fsrc%2Flib.rs?ref=388eb24b6c479088a83c1b094d79221a32dfc7ff", "patch": "@@ -36,16 +36,13 @@ crate mod mbe;\n mod tests;\n #[cfg(test)]\n mod parse {\n-    #[cfg(test)]\n     mod tests;\n }\n #[cfg(test)]\n mod tokenstream {\n-    #[cfg(test)]\n     mod tests;\n }\n #[cfg(test)]\n mod mut_visit {\n-    #[cfg(test)]\n     mod tests;\n }"}, {"sha": "2a7c2a02fbaf4b5e728a16520e2fb8ac23e12f98", "filename": "compiler/rustc_feature/src/lib.rs", "status": "modified", "additions": 3, "deletions": 27, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/388eb24b6c479088a83c1b094d79221a32dfc7ff/compiler%2Frustc_feature%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/388eb24b6c479088a83c1b094d79221a32dfc7ff/compiler%2Frustc_feature%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_feature%2Fsrc%2Flib.rs?ref=388eb24b6c479088a83c1b094d79221a32dfc7ff", "patch": "@@ -18,6 +18,9 @@ mod active;\n mod builtin_attrs;\n mod removed;\n \n+#[cfg(test)]\n+mod tests;\n+\n use rustc_span::{edition::Edition, symbol::Symbol, Span};\n use std::fmt;\n use std::num::NonZeroU32;\n@@ -149,30 +152,3 @@ pub use builtin_attrs::{\n     AttributeType, BuiltinAttribute, GatedCfg, BUILTIN_ATTRIBUTES, BUILTIN_ATTRIBUTE_MAP,\n };\n pub use removed::{REMOVED_FEATURES, STABLE_REMOVED_FEATURES};\n-\n-#[cfg(test)]\n-mod test {\n-    use super::UnstableFeatures;\n-\n-    #[test]\n-    fn rustc_bootstrap_parsing() {\n-        let is_bootstrap = |env, krate| {\n-            std::env::set_var(\"RUSTC_BOOTSTRAP\", env);\n-            matches!(UnstableFeatures::from_environment(krate), UnstableFeatures::Cheat)\n-        };\n-        assert!(is_bootstrap(\"1\", None));\n-        assert!(is_bootstrap(\"1\", Some(\"x\")));\n-        // RUSTC_BOOTSTRAP allows specifying a specific crate\n-        assert!(is_bootstrap(\"x\", Some(\"x\")));\n-        // RUSTC_BOOTSTRAP allows multiple comma-delimited crates\n-        assert!(is_bootstrap(\"x,y,z\", Some(\"x\")));\n-        assert!(is_bootstrap(\"x,y,z\", Some(\"y\")));\n-        // Crate that aren't specified do not get unstable features\n-        assert!(!is_bootstrap(\"x\", Some(\"a\")));\n-        assert!(!is_bootstrap(\"x,y,z\", Some(\"a\")));\n-        assert!(!is_bootstrap(\"x,y,z\", None));\n-\n-        // this is technically a breaking change, but there are no stability guarantees for RUSTC_BOOTSTRAP\n-        assert!(!is_bootstrap(\"0\", None));\n-    }\n-}"}, {"sha": "50433e44b135051edf79266517e5bc9f0fb1265a", "filename": "compiler/rustc_feature/src/tests.rs", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/388eb24b6c479088a83c1b094d79221a32dfc7ff/compiler%2Frustc_feature%2Fsrc%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/388eb24b6c479088a83c1b094d79221a32dfc7ff/compiler%2Frustc_feature%2Fsrc%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_feature%2Fsrc%2Ftests.rs?ref=388eb24b6c479088a83c1b094d79221a32dfc7ff", "patch": "@@ -0,0 +1,23 @@\n+use super::UnstableFeatures;\n+\n+#[test]\n+fn rustc_bootstrap_parsing() {\n+    let is_bootstrap = |env, krate| {\n+        std::env::set_var(\"RUSTC_BOOTSTRAP\", env);\n+        matches!(UnstableFeatures::from_environment(krate), UnstableFeatures::Cheat)\n+    };\n+    assert!(is_bootstrap(\"1\", None));\n+    assert!(is_bootstrap(\"1\", Some(\"x\")));\n+    // RUSTC_BOOTSTRAP allows specifying a specific crate\n+    assert!(is_bootstrap(\"x\", Some(\"x\")));\n+    // RUSTC_BOOTSTRAP allows multiple comma-delimited crates\n+    assert!(is_bootstrap(\"x,y,z\", Some(\"x\")));\n+    assert!(is_bootstrap(\"x,y,z\", Some(\"y\")));\n+    // Crate that aren't specified do not get unstable features\n+    assert!(!is_bootstrap(\"x\", Some(\"a\")));\n+    assert!(!is_bootstrap(\"x,y,z\", Some(\"a\")));\n+    assert!(!is_bootstrap(\"x,y,z\", None));\n+\n+    // this is technically a breaking change, but there are no stability guarantees for RUSTC_BOOTSTRAP\n+    assert!(!is_bootstrap(\"0\", None));\n+}"}, {"sha": "080e16316242b0a7ee9932e782e5604615889a1c", "filename": "src/tools/tidy/src/main.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/388eb24b6c479088a83c1b094d79221a32dfc7ff/src%2Ftools%2Ftidy%2Fsrc%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/388eb24b6c479088a83c1b094d79221a32dfc7ff/src%2Ftools%2Ftidy%2Fsrc%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Ftidy%2Fsrc%2Fmain.rs?ref=388eb24b6c479088a83c1b094d79221a32dfc7ff", "patch": "@@ -35,9 +35,12 @@ fn main() {\n \n     // Checks that only make sense for the std libs.\n     pal::check(&library_path, &mut bad);\n-    unit_tests::check(&library_path, &mut bad);\n \n     // Checks that need to be done for both the compiler and std libraries.\n+    unit_tests::check(&src_path, &mut bad);\n+    unit_tests::check(&compiler_path, &mut bad);\n+    unit_tests::check(&library_path, &mut bad);\n+\n     bins::check(&src_path, &output_directory, &mut bad);\n     bins::check(&compiler_path, &output_directory, &mut bad);\n     bins::check(&library_path, &output_directory, &mut bad);"}]}