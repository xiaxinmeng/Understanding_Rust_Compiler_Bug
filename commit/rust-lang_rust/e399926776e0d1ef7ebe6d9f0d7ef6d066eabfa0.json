{"sha": "e399926776e0d1ef7ebe6d9f0d7ef6d066eabfa0", "node_id": "MDY6Q29tbWl0NzI0NzEyOmUzOTk5MjY3NzZlMGQxZWY3ZWJlNmQ5ZjBkN2VmNmQwNjZlYWJmYTA=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2010-11-05T18:01:47Z"}, "committer": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2010-11-05T18:02:17Z"}, "message": "rustboot: Report cyclic import errors at the right location", "tree": {"sha": "df269553088b8f7c4eb8a4103e015d8e7e8a9b7d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/df269553088b8f7c4eb8a4103e015d8e7e8a9b7d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e399926776e0d1ef7ebe6d9f0d7ef6d066eabfa0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e399926776e0d1ef7ebe6d9f0d7ef6d066eabfa0", "html_url": "https://github.com/rust-lang/rust/commit/e399926776e0d1ef7ebe6d9f0d7ef6d066eabfa0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e399926776e0d1ef7ebe6d9f0d7ef6d066eabfa0/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2fcf81cc4b132bf7d862f5144d282391b38d0c15", "url": "https://api.github.com/repos/rust-lang/rust/commits/2fcf81cc4b132bf7d862f5144d282391b38d0c15", "html_url": "https://github.com/rust-lang/rust/commit/2fcf81cc4b132bf7d862f5144d282391b38d0c15"}], "stats": {"total": 15, "additions": 9, "deletions": 6}, "files": [{"sha": "14d9cc53d6afc43cc3ccfad4cd817007a5f3d50c", "filename": "src/boot/me/resolve.ml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e399926776e0d1ef7ebe6d9f0d7ef6d066eabfa0/src%2Fboot%2Fme%2Fresolve.ml", "raw_url": "https://github.com/rust-lang/rust/raw/e399926776e0d1ef7ebe6d9f0d7ef6d066eabfa0/src%2Fboot%2Fme%2Fresolve.ml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fboot%2Fme%2Fresolve.ml?ref=e399926776e0d1ef7ebe6d9f0d7ef6d066eabfa0", "patch": "@@ -291,7 +291,7 @@ let rec lookup_type_by_name\n   iflog cx (fun _ ->\n               log cx \"+++ lookup_type_by_name %a\"\n                 Ast.sprintf_name name);\n-  match lookup_by_name cx [] scopes name with\n+  match lookup_by_name ?loc:loc cx [] scopes name with\n       RES_failed name' -> raise (Resolution_failure [ name', name ])\n     | RES_ok (scopes', id) ->\n         let ty, params ="}, {"sha": "6f442c33fdd5c3f1a4a5d50018554829c5fc1eed", "filename": "src/boot/me/semant.ml", "status": "modified", "additions": 8, "deletions": 5, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/e399926776e0d1ef7ebe6d9f0d7ef6d066eabfa0/src%2Fboot%2Fme%2Fsemant.ml", "raw_url": "https://github.com/rust-lang/rust/raw/e399926776e0d1ef7ebe6d9f0d7ef6d066eabfa0/src%2Fboot%2Fme%2Fsemant.ml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fboot%2Fme%2Fsemant.ml?ref=e399926776e0d1ef7ebe6d9f0d7ef6d066eabfa0", "patch": "@@ -1990,6 +1990,7 @@ let get_name_base_ident\n type loop_check = (node_id * Ast.ident) list;;\n \n let rec project_ident_from_items\n+    ?loc:loc\n     (cx:ctxt)\n     (lchk:loop_check)\n     (scopes:scope list)\n@@ -2009,7 +2010,7 @@ let rec project_ident_from_items\n       in\n       let lchk' = (scope_id, ident)::lchk in\n       let lchk_strs = List.map string_of_loop_check (List.rev lchk') in\n-      err (Some scope_id) \"cyclic import for ident %s (%s)\" ident\n+      err loc \"cyclic import for ident %s (%s)\" ident\n         (String.concat \" -> \" lchk_strs)\n     else (scope_id, ident)::lchk\n   in\n@@ -2047,6 +2048,7 @@ and project_name_comp_from_resolved\n           project_ident_from_items cx lchk scopes id md ident false\n \n and lookup_by_name\n+    ?loc:loc\n     (cx:ctxt)\n     (lchk:loop_check)\n     (scopes:scope list)\n@@ -2056,12 +2058,13 @@ and lookup_by_name\n   match name with\n       Ast.NAME_base nb ->\n         let ident = get_name_base_ident nb in\n-          lookup_by_ident cx lchk scopes ident\n+          lookup_by_ident ?loc:loc cx lchk scopes ident\n     | Ast.NAME_ext (name, ext) ->\n         let base_res = lookup_by_name cx lchk scopes name in\n           project_name_comp_from_resolved cx lchk base_res ext\n \n and lookup_by_ident\n+    ?loc:loc\n     (cx:ctxt)\n     (lchk:loop_check)\n     (scopes:scope list)\n@@ -2120,8 +2123,8 @@ and lookup_by_ident\n             end\n \n       | SCOPE_crate crate ->\n-          project_ident_from_items\n-            cx lchk scopes crate.id crate.node.Ast.crate_items ident true\n+          project_ident_from_items ?loc:loc cx lchk\n+            scopes crate.id crate.node.Ast.crate_items ident true\n \n       | SCOPE_obj_fn fn ->\n           would_capture (check_slots scopes fn.node.Ast.fn_input_slots)\n@@ -2137,7 +2140,7 @@ and lookup_by_ident\n                     check_slots scopes obj.Ast.obj_state\n \n                 | Ast.MOD_ITEM_mod md ->\n-                    project_ident_from_items cx lchk\n+                    project_ident_from_items ?loc:loc cx lchk\n                       scopes item.id md ident true\n \n                 | _ -> no_such_ident ident"}]}