{"sha": "83191964990e9ea62200257b81902281c03dd4e7", "node_id": "C_kwDOAAsO6NoAKDgzMTkxOTY0OTkwZTllYTYyMjAwMjU3YjgxOTAyMjgxYzAzZGQ0ZTc", "commit": {"author": {"name": "Serial", "email": "69764315+Serial-ATA@users.noreply.github.com", "date": "2022-07-27T00:23:50Z"}, "committer": {"name": "Serial", "email": "69764315+Serial-ATA@users.noreply.github.com", "date": "2022-07-27T21:59:56Z"}, "message": "Document `--type` flag", "tree": {"sha": "ee4292d1211859e17b1aa86550a097ad4acf6aad", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ee4292d1211859e17b1aa86550a097ad4acf6aad"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/83191964990e9ea62200257b81902281c03dd4e7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/83191964990e9ea62200257b81902281c03dd4e7", "html_url": "https://github.com/rust-lang/rust/commit/83191964990e9ea62200257b81902281c03dd4e7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/83191964990e9ea62200257b81902281c03dd4e7/comments", "author": {"login": "Serial-ATA", "id": 69764315, "node_id": "MDQ6VXNlcjY5NzY0MzE1", "avatar_url": "https://avatars.githubusercontent.com/u/69764315?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Serial-ATA", "html_url": "https://github.com/Serial-ATA", "followers_url": "https://api.github.com/users/Serial-ATA/followers", "following_url": "https://api.github.com/users/Serial-ATA/following{/other_user}", "gists_url": "https://api.github.com/users/Serial-ATA/gists{/gist_id}", "starred_url": "https://api.github.com/users/Serial-ATA/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Serial-ATA/subscriptions", "organizations_url": "https://api.github.com/users/Serial-ATA/orgs", "repos_url": "https://api.github.com/users/Serial-ATA/repos", "events_url": "https://api.github.com/users/Serial-ATA/events{/privacy}", "received_events_url": "https://api.github.com/users/Serial-ATA/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Serial-ATA", "id": 69764315, "node_id": "MDQ6VXNlcjY5NzY0MzE1", "avatar_url": "https://avatars.githubusercontent.com/u/69764315?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Serial-ATA", "html_url": "https://github.com/Serial-ATA", "followers_url": "https://api.github.com/users/Serial-ATA/followers", "following_url": "https://api.github.com/users/Serial-ATA/following{/other_user}", "gists_url": "https://api.github.com/users/Serial-ATA/gists{/gist_id}", "starred_url": "https://api.github.com/users/Serial-ATA/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Serial-ATA/subscriptions", "organizations_url": "https://api.github.com/users/Serial-ATA/orgs", "repos_url": "https://api.github.com/users/Serial-ATA/repos", "events_url": "https://api.github.com/users/Serial-ATA/events{/privacy}", "received_events_url": "https://api.github.com/users/Serial-ATA/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f31937043dbd8a10309ad742cd9e1a49721a09e5", "url": "https://api.github.com/repos/rust-lang/rust/commits/f31937043dbd8a10309ad742cd9e1a49721a09e5", "html_url": "https://github.com/rust-lang/rust/commit/f31937043dbd8a10309ad742cd9e1a49721a09e5"}], "stats": {"total": 45, "additions": 35, "deletions": 10}, "files": [{"sha": "da781eb970df7be3ea597eb44a296da1c51813b0", "filename": "book/src/development/adding_lints.md", "status": "modified", "additions": 35, "deletions": 10, "changes": 45, "blob_url": "https://github.com/rust-lang/rust/blob/83191964990e9ea62200257b81902281c03dd4e7/book%2Fsrc%2Fdevelopment%2Fadding_lints.md", "raw_url": "https://github.com/rust-lang/rust/raw/83191964990e9ea62200257b81902281c03dd4e7/book%2Fsrc%2Fdevelopment%2Fadding_lints.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/book%2Fsrc%2Fdevelopment%2Fadding_lints.md?ref=83191964990e9ea62200257b81902281c03dd4e7", "patch": "@@ -10,6 +10,10 @@ because that's clearly a non-descriptive name.\n - [Adding a new lint](#adding-a-new-lint)\n   - [Setup](#setup)\n   - [Getting Started](#getting-started)\n+    - [Defining Our Lint](#defining-our-lint)\n+      - [Standalone](#standalone)\n+      - [Specific Type](#specific-type)\n+      - [Tests Location](#tests-location)\n   - [Testing](#testing)\n     - [Cargo lints](#cargo-lints)\n   - [Rustfix tests](#rustfix-tests)\n@@ -36,17 +40,38 @@ See the [Basics](basics.md#get-the-code) documentation.\n ## Getting Started\n \n There is a bit of boilerplate code that needs to be set up when creating a new\n-lint. Fortunately, you can use the clippy dev tools to handle this for you. We\n+lint. Fortunately, you can use the Clippy dev tools to handle this for you. We\n are naming our new lint `foo_functions` (lints are generally written in snake\n-case), and we don't need type information so it will have an early pass type\n-(more on this later on). If you're not sure if the name you chose fits the lint,\n-take a look at our [lint naming guidelines][lint_naming]. To get started on this\n-lint you can run `cargo dev new_lint --name=foo_functions --pass=early\n---category=pedantic` (category will default to nursery if not provided). This\n-command will create two files: `tests/ui/foo_functions.rs` and\n-`clippy_lints/src/foo_functions.rs`, as well as [registering the\n-lint](#lint-registration). For cargo lints, two project hierarchies (fail/pass)\n-will be created by default under `tests/ui-cargo`.\n+case), and we don't need type information, so it will have an early pass type\n+(more on this later). If you're unsure if the name you chose fits the lint,\n+take a look at our [lint naming guidelines][lint_naming].\n+\n+## Defining Our Lint\n+To get started, there are two ways to define our lint.\n+\n+### Standalone\n+Command: `cargo dev new_lint --name=foo_functions --pass=early --category=pedantic`\n+(category will default to nursery if not provided)\n+\n+This command will create a new file: `clippy_lints/src/foo_functions.rs`, as well\n+as [register the lint](#lint-registration).\n+\n+### Specific Type\n+Command: `cargo dev new_lint --name=foo_functions --type=functions --category=pedantic`\n+\n+This command will create a new file: `clippy_lints/src/{type}/foo_functions.rs`.\n+\n+Notice how this command has a `--type` flag instead of `--pass`. Unlike a standalone\n+definition, this lint won't be registered in the traditional sense. Instead, you will\n+call your lint from within the type's lint pass, found in `clippy_lints/src/{type}/mod.rs`.\n+\n+A \"type\" is just the name of a directory in `clippy_lints/src`, like `functions` in\n+the example command. These are groupings of lints with common behaviors, so if your\n+lint falls into one, it would be best to add it to that type.\n+\n+### Tests Location\n+Both commands will create a file: `tests/ui/foo_functions.rs`. For cargo lints,\n+two project hierarchies (fail/pass) will be created by default under `tests/ui-cargo`.\n \n Next, we'll open up these files and add our lint!\n "}]}