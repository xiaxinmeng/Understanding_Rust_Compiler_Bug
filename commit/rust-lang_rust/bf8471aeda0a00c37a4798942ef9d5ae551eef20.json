{"sha": "bf8471aeda0a00c37a4798942ef9d5ae551eef20", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJmODQ3MWFlZGEwYTAwYzM3YTQ3OTg5NDJlZjlkNWFlNTUxZWVmMjA=", "commit": {"author": {"name": "Oliver Schneider", "email": "github35764891676564198441@oli-obk.de", "date": "2018-09-07T08:53:31Z"}, "committer": {"name": "Oliver Scherer", "email": "github35764891676564198441@oli-obk.de", "date": "2018-10-25T14:47:35Z"}, "message": "Rebase fallout in ui output", "tree": {"sha": "245bdf285fc27243ffb4a0b6c489f67be60cf691", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/245bdf285fc27243ffb4a0b6c489f67be60cf691"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bf8471aeda0a00c37a4798942ef9d5ae551eef20", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bf8471aeda0a00c37a4798942ef9d5ae551eef20", "html_url": "https://github.com/rust-lang/rust/commit/bf8471aeda0a00c37a4798942ef9d5ae551eef20", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bf8471aeda0a00c37a4798942ef9d5ae551eef20/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f4a3e50d782c609f0868d06fc2b03fbea6774a2f", "url": "https://api.github.com/repos/rust-lang/rust/commits/f4a3e50d782c609f0868d06fc2b03fbea6774a2f", "html_url": "https://github.com/rust-lang/rust/commit/f4a3e50d782c609f0868d06fc2b03fbea6774a2f"}], "stats": {"total": 39, "additions": 13, "deletions": 26}, "files": [{"sha": "d1b6aa7fc4280c9cfddc1486b5601a7ca2aa05ab", "filename": "src/librustc_codegen_llvm/mir/operand.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bf8471aeda0a00c37a4798942ef9d5ae551eef20/src%2Flibrustc_codegen_llvm%2Fmir%2Foperand.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bf8471aeda0a00c37a4798942ef9d5ae551eef20/src%2Flibrustc_codegen_llvm%2Fmir%2Foperand.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Fmir%2Foperand.rs?ref=bf8471aeda0a00c37a4798942ef9d5ae551eef20", "patch": "@@ -12,8 +12,6 @@ use rustc::mir::interpret::{ConstValue, ErrorHandled};\n use rustc::mir;\n use rustc::ty;\n use rustc::ty::layout::{self, Align, LayoutOf, TyLayout};\n-use rustc_data_structures::sync::Lrc;\n-use rustc_data_structures::indexed_vec::Idx;\n \n use base;\n use common::{CodegenCx, C_undef, C_usize};"}, {"sha": "50794c8f0651c3a234c42a6e2cf014c0f09ec35a", "filename": "src/test/ui/consts/const-eval/const_panic_libcore_main.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/bf8471aeda0a00c37a4798942ef9d5ae551eef20/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fconst_panic_libcore_main.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/bf8471aeda0a00c37a4798942ef9d5ae551eef20/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fconst_panic_libcore_main.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fconst_panic_libcore_main.stderr?ref=bf8471aeda0a00c37a4798942ef9d5ae551eef20", "patch": "@@ -1,5 +1,5 @@\n error: any use of this value will cause an error\n-  --> $DIR/const_panic_libcore_main.rs:20:1\n+  --> $DIR/const_panic_libcore_main.rs:19:1\n    |\n LL | const Z: () = panic!(\"cheese\");\n    | ^^^^^^^^^^^^^^----------------^\n@@ -10,7 +10,7 @@ LL | const Z: () = panic!(\"cheese\");\n    = note: this error originates in a macro outside of the current crate (in Nightly builds, run with -Z external-macro-backtrace for more info)\n \n error: any use of this value will cause an error\n-  --> $DIR/const_panic_libcore_main.rs:23:1\n+  --> $DIR/const_panic_libcore_main.rs:22:1\n    |\n LL | const Y: () = unreachable!();\n    | ^^^^^^^^^^^^^^--------------^\n@@ -20,7 +20,7 @@ LL | const Y: () = unreachable!();\n    = note: this error originates in a macro outside of the current crate (in Nightly builds, run with -Z external-macro-backtrace for more info)\n \n error: any use of this value will cause an error\n-  --> $DIR/const_panic_libcore_main.rs:26:1\n+  --> $DIR/const_panic_libcore_main.rs:25:1\n    |\n LL | const X: () = unimplemented!();\n    | ^^^^^^^^^^^^^^----------------^"}, {"sha": "b21c1827e2ba2ef4b40ebbf9fd41e3a0e4925d03", "filename": "src/test/ui/consts/const-eval/issue-52475.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/bf8471aeda0a00c37a4798942ef9d5ae551eef20/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fissue-52475.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bf8471aeda0a00c37a4798942ef9d5ae551eef20/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fissue-52475.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fissue-52475.rs?ref=bf8471aeda0a00c37a4798942ef9d5ae551eef20", "patch": "@@ -13,11 +13,10 @@\n fn main() {\n     let _ = [(); {\n         //~^ WARNING Constant evaluating a complex constant, this might take some time\n-        //~| ERROR could not evaluate repeat length\n         let mut x = &0;\n         let mut n = 0;\n         while n < 5 { //~ ERROR constant contains unimplemented expression type\n-            n = (n + 1) % 5;\n+            n = (n + 1) % 5; //~ ERROR evaluation of constant value failed\n             x = &0; // Materialize a new AllocId\n         }\n         0"}, {"sha": "c0cd98b2fca1e1f5dc58c84bbceef2affa5b64fd", "filename": "src/test/ui/consts/const-eval/issue-52475.stderr", "status": "modified", "additions": 7, "deletions": 17, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/bf8471aeda0a00c37a4798942ef9d5ae551eef20/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fissue-52475.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/bf8471aeda0a00c37a4798942ef9d5ae551eef20/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fissue-52475.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fissue-52475.stderr?ref=bf8471aeda0a00c37a4798942ef9d5ae551eef20", "patch": "@@ -1,8 +1,8 @@\n error[E0019]: constant contains unimplemented expression type\n-  --> $DIR/issue-52475.rs:19:9\n+  --> $DIR/issue-52475.rs:18:9\n    |\n LL | /         while n < 5 { //~ ERROR constant contains unimplemented expression type\n-LL | |             n = (n + 1) % 5;\n+LL | |             n = (n + 1) % 5; //~ ERROR evaluation of constant value failed\n LL | |             x = &0; // Materialize a new AllocId\n LL | |         }\n    | |_________^\n@@ -13,28 +13,18 @@ warning: Constant evaluating a complex constant, this might take some time\n LL |       let _ = [(); {\n    |  __________________^\n LL | |         //~^ WARNING Constant evaluating a complex constant, this might take some time\n-LL | |         //~| ERROR could not evaluate repeat length\n LL | |         let mut x = &0;\n+LL | |         let mut n = 0;\n ...  |\n LL | |         0\n LL | |     }];\n    | |_____^\n \n-error[E0080]: could not evaluate repeat length\n-  --> $DIR/issue-52475.rs:14:18\n+error[E0080]: evaluation of constant value failed\n+  --> $DIR/issue-52475.rs:19:17\n    |\n-LL |       let _ = [(); {\n-   |  __________________^\n-LL | |         //~^ WARNING Constant evaluating a complex constant, this might take some time\n-LL | |         //~| ERROR could not evaluate repeat length\n-LL | |         let mut x = &0;\n-...  |\n-LL | |             n = (n + 1) % 5;\n-   | |                 ----------- duplicate interpreter state observed here, const evaluation will never terminate\n-...  |\n-LL | |         0\n-LL | |     }];\n-   | |_____^\n+LL |             n = (n + 1) % 5; //~ ERROR evaluation of constant value failed\n+   |                 ^^^^^^^^^^^ duplicate interpreter state observed here, const evaluation will never terminate\n \n error: aborting due to 2 previous errors\n "}, {"sha": "314a3e488a12bd29160828d782b0cc60cf66daef", "filename": "src/test/ui/consts/const-int-unchecked.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/bf8471aeda0a00c37a4798942ef9d5ae551eef20/src%2Ftest%2Fui%2Fconsts%2Fconst-int-unchecked.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/bf8471aeda0a00c37a4798942ef9d5ae551eef20/src%2Ftest%2Fui%2Fconsts%2Fconst-int-unchecked.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst-int-unchecked.stderr?ref=bf8471aeda0a00c37a4798942ef9d5ae551eef20", "patch": "@@ -1,4 +1,4 @@\n-error: this constant cannot be used\n+error: any use of this value will cause an error\n   --> $DIR/const-int-unchecked.rs:15:1\n    |\n LL | const SHR: u8 = unsafe { intrinsics::unchecked_shr(5_u8, 8) };\n@@ -8,7 +8,7 @@ LL | const SHR: u8 = unsafe { intrinsics::unchecked_shr(5_u8, 8) };\n    |\n    = note: #[deny(const_err)] on by default\n \n-error: this constant cannot be used\n+error: any use of this value will cause an error\n   --> $DIR/const-int-unchecked.rs:17:1\n    |\n LL | const SHL: u8 = unsafe { intrinsics::unchecked_shl(5_u8, 8) };"}]}