{"sha": "a585b4e8a0ca41a2445838245f3d44358a82a4dc", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE1ODViNGU4YTBjYTQxYTI0NDU4MzgyNDVmM2Q0NDM1OGE4MmE0ZGM=", "commit": {"author": {"name": "Steven Fackler", "email": "sfackler@gmail.com", "date": "2014-10-07T02:39:01Z"}, "committer": {"name": "Steven Fackler", "email": "sfackler@gmail.com", "date": "2014-10-07T02:39:23Z"}, "message": "Properly handle cfgs in rustdoc\n\nRustdoc would previously improperly handle key=\"value\" style cfgs, which\nare notably used for Cargo features.", "tree": {"sha": "809087907c3c981feb0e6acfc9d28889f6a8ff35", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/809087907c3c981feb0e6acfc9d28889f6a8ff35"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a585b4e8a0ca41a2445838245f3d44358a82a4dc", "comment_count": 6, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a585b4e8a0ca41a2445838245f3d44358a82a4dc", "html_url": "https://github.com/rust-lang/rust/commit/a585b4e8a0ca41a2445838245f3d44358a82a4dc", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a585b4e8a0ca41a2445838245f3d44358a82a4dc/comments", "author": {"login": "sfackler", "id": 1455697, "node_id": "MDQ6VXNlcjE0NTU2OTc=", "avatar_url": "https://avatars.githubusercontent.com/u/1455697?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sfackler", "html_url": "https://github.com/sfackler", "followers_url": "https://api.github.com/users/sfackler/followers", "following_url": "https://api.github.com/users/sfackler/following{/other_user}", "gists_url": "https://api.github.com/users/sfackler/gists{/gist_id}", "starred_url": "https://api.github.com/users/sfackler/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sfackler/subscriptions", "organizations_url": "https://api.github.com/users/sfackler/orgs", "repos_url": "https://api.github.com/users/sfackler/repos", "events_url": "https://api.github.com/users/sfackler/events{/privacy}", "received_events_url": "https://api.github.com/users/sfackler/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sfackler", "id": 1455697, "node_id": "MDQ6VXNlcjE0NTU2OTc=", "avatar_url": "https://avatars.githubusercontent.com/u/1455697?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sfackler", "html_url": "https://github.com/sfackler", "followers_url": "https://api.github.com/users/sfackler/followers", "following_url": "https://api.github.com/users/sfackler/following{/other_user}", "gists_url": "https://api.github.com/users/sfackler/gists{/gist_id}", "starred_url": "https://api.github.com/users/sfackler/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sfackler/subscriptions", "organizations_url": "https://api.github.com/users/sfackler/orgs", "repos_url": "https://api.github.com/users/sfackler/repos", "events_url": "https://api.github.com/users/sfackler/events{/privacy}", "received_events_url": "https://api.github.com/users/sfackler/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6d15f28986e00e1a1b290b0f0fcf76c3f4e6e261", "url": "https://api.github.com/repos/rust-lang/rust/commits/6d15f28986e00e1a1b290b0f0fcf76c3f4e6e261", "html_url": "https://github.com/rust-lang/rust/commit/6d15f28986e00e1a1b290b0f0fcf76c3f4e6e261"}], "stats": {"total": 11, "additions": 3, "deletions": 8}, "files": [{"sha": "9ce012502446dca7f8d9fcfe3bd6efd4daf0e3e4", "filename": "src/librustc/driver/config.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a585b4e8a0ca41a2445838245f3d44358a82a4dc/src%2Flibrustc%2Fdriver%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a585b4e8a0ca41a2445838245f3d44358a82a4dc/src%2Flibrustc%2Fdriver%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fdriver%2Fconfig.rs?ref=a585b4e8a0ca41a2445838245f3d44358a82a4dc", "patch": "@@ -630,7 +630,7 @@ pub fn optgroups() -> Vec<getopts::OptGroup> {\n \n \n // Convert strings provided as --cfg [cfgspec] into a crate_cfg\n-fn parse_cfgspecs(cfgspecs: Vec<String> ) -> ast::CrateConfig {\n+pub fn parse_cfgspecs(cfgspecs: Vec<String> ) -> ast::CrateConfig {\n     cfgspecs.into_iter().map(|s| {\n         parse::parse_meta_from_source_str(\"cfgspec\".to_string(),\n                                           s.to_string(),"}, {"sha": "f0f08ff7077caf5bcea085847aafc1e4a8f33348", "filename": "src/librustdoc/core.rs", "status": "modified", "additions": 2, "deletions": 7, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/a585b4e8a0ca41a2445838245f3d44358a82a4dc/src%2Flibrustdoc%2Fcore.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a585b4e8a0ca41a2445838245f3d44358a82a4dc/src%2Flibrustdoc%2Fcore.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fcore.rs?ref=a585b4e8a0ca41a2445838245f3d44358a82a4dc", "patch": "@@ -14,8 +14,6 @@ use rustc::lint;\n use rustc::back::link;\n \n use syntax::{ast, ast_map, codemap, diagnostic};\n-use syntax::parse::token;\n-use syntax::ptr::P;\n \n use std::cell::RefCell;\n use std::os;\n@@ -95,6 +93,7 @@ pub fn run_core(libs: Vec<Path>, cfgs: Vec<String>, externs: Externs,\n         lint_opts: vec!((warning_lint, lint::Allow)),\n         externs: externs,\n         target_triple: triple.unwrap_or(driver::host_triple().to_string()),\n+        cfg: config::parse_cfgspecs(cfgs),\n         ..config::basic_options().clone()\n     };\n \n@@ -108,11 +107,7 @@ pub fn run_core(libs: Vec<Path>, cfgs: Vec<String>, externs: Externs,\n                                        Some(cpath.clone()),\n                                        span_diagnostic_handler);\n \n-    let mut cfg = config::build_configuration(&sess);\n-    for cfg_ in cfgs.into_iter() {\n-        let cfg_ = token::intern_and_get_ident(cfg_.as_slice());\n-        cfg.push(P(codemap::dummy_spanned(ast::MetaWord(cfg_))));\n-    }\n+    let cfg = config::build_configuration(&sess);\n \n     let krate = driver::phase_1_parse_input(&sess, cfg, &input);\n "}]}