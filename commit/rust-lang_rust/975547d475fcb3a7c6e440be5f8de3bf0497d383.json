{"sha": "975547d475fcb3a7c6e440be5f8de3bf0497d383", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk3NTU0N2Q0NzVmY2IzYTdjNmU0NDBiZTVmOGRlM2JmMDQ5N2QzODM=", "commit": {"author": {"name": "Ayrton", "email": "a.munoz3327@gmail.com", "date": "2020-09-04T13:45:09Z"}, "committer": {"name": "Ayrton", "email": "a.munoz3327@gmail.com", "date": "2020-10-27T15:04:03Z"}, "message": "changed lint to suggest casting to the proper function type and added a test", "tree": {"sha": "125bd1332f3c68c58af4ed445a0fb1eee70b85fe", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/125bd1332f3c68c58af4ed445a0fb1eee70b85fe"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/975547d475fcb3a7c6e440be5f8de3bf0497d383", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/975547d475fcb3a7c6e440be5f8de3bf0497d383", "html_url": "https://github.com/rust-lang/rust/commit/975547d475fcb3a7c6e440be5f8de3bf0497d383", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/975547d475fcb3a7c6e440be5f8de3bf0497d383/comments", "author": {"login": "ayrtonm", "id": 4975834, "node_id": "MDQ6VXNlcjQ5NzU4MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/4975834?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ayrtonm", "html_url": "https://github.com/ayrtonm", "followers_url": "https://api.github.com/users/ayrtonm/followers", "following_url": "https://api.github.com/users/ayrtonm/following{/other_user}", "gists_url": "https://api.github.com/users/ayrtonm/gists{/gist_id}", "starred_url": "https://api.github.com/users/ayrtonm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ayrtonm/subscriptions", "organizations_url": "https://api.github.com/users/ayrtonm/orgs", "repos_url": "https://api.github.com/users/ayrtonm/repos", "events_url": "https://api.github.com/users/ayrtonm/events{/privacy}", "received_events_url": "https://api.github.com/users/ayrtonm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ayrtonm", "id": 4975834, "node_id": "MDQ6VXNlcjQ5NzU4MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/4975834?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ayrtonm", "html_url": "https://github.com/ayrtonm", "followers_url": "https://api.github.com/users/ayrtonm/followers", "following_url": "https://api.github.com/users/ayrtonm/following{/other_user}", "gists_url": "https://api.github.com/users/ayrtonm/gists{/gist_id}", "starred_url": "https://api.github.com/users/ayrtonm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ayrtonm/subscriptions", "organizations_url": "https://api.github.com/users/ayrtonm/orgs", "repos_url": "https://api.github.com/users/ayrtonm/repos", "events_url": "https://api.github.com/users/ayrtonm/events{/privacy}", "received_events_url": "https://api.github.com/users/ayrtonm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "dd4d4e29c3295ed8e371f1dc5d1d463f56999ecb", "url": "https://api.github.com/repos/rust-lang/rust/commits/dd4d4e29c3295ed8e371f1dc5d1d463f56999ecb", "html_url": "https://github.com/rust-lang/rust/commit/dd4d4e29c3295ed8e371f1dc5d1d463f56999ecb"}], "stats": {"total": 54, "additions": 50, "deletions": 4}, "files": [{"sha": "86cf4ebb18743c66a08a20becd33aa6067fc1739", "filename": "compiler/rustc_lint/src/builtin.rs", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/975547d475fcb3a7c6e440be5f8de3bf0497d383/compiler%2Frustc_lint%2Fsrc%2Fbuiltin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/975547d475fcb3a7c6e440be5f8de3bf0497d383/compiler%2Frustc_lint%2Fsrc%2Fbuiltin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_lint%2Fsrc%2Fbuiltin.rs?ref=975547d475fcb3a7c6e440be5f8de3bf0497d383", "patch": "@@ -2957,17 +2957,19 @@ impl<'tcx> LateLintPass<'tcx> for FunctionReferences {\n             if let hir::ExprKind::Path(qpath) = &referent.kind {\n                 if let Some(def_id) = cx.qpath_res(qpath, referent.hir_id).opt_def_id() {\n                     cx.tcx.hir().get_if_local(def_id).map(|node| {\n-                        if node.fn_decl().is_some() {\n+                        node.fn_decl().map(|decl| {\n                             if let Some(ident) = node.ident() {\n                                 cx.struct_span_lint(FUNCTION_REFERENCES, referent.span, |lint| {\n+                                    let num_args = decl.inputs.len();\n                                     lint.build(&format!(\n-                                        \"cast {} with `as *const ()` to use it as a pointer\",\n-                                        ident.to_string()\n+                                        \"cast `{}` with `as *const fn({}) -> _` to use it as a pointer\",\n+                                        ident.to_string(),\n+                                        vec![\"_\"; num_args].join(\", \")\n                                     ))\n                                     .emit()\n                                 });\n                             }\n-                        }\n+                        });\n                     });\n                 }\n             }"}, {"sha": "748f2560caa3a3942bdb83a620205a6adf1f1909", "filename": "src/test/ui/lint/function-references.rs", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/975547d475fcb3a7c6e440be5f8de3bf0497d383/src%2Ftest%2Fui%2Flint%2Ffunction-references.rs", "raw_url": "https://github.com/rust-lang/rust/raw/975547d475fcb3a7c6e440be5f8de3bf0497d383/src%2Ftest%2Fui%2Flint%2Ffunction-references.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Ffunction-references.rs?ref=975547d475fcb3a7c6e440be5f8de3bf0497d383", "patch": "@@ -0,0 +1,22 @@\n+// check-pass\n+fn foo() -> usize { 42 }\n+fn bar(x: usize) -> usize { x }\n+fn baz(x: usize, y: usize) -> usize { x + y }\n+\n+fn main() {\n+    println!(\"{:p}\", &foo);\n+    //~^ WARN cast `foo` with `as *const fn() -> _` to use it as a pointer\n+    println!(\"{:p}\", &bar);\n+    //~^ WARN cast `bar` with `as *const fn(_) -> _` to use it as a pointer\n+    println!(\"{:p}\", &baz);\n+    //~^ WARN cast `baz` with `as *const fn(_, _) -> _` to use it as a pointer\n+\n+    //should not produce any warnings\n+    println!(\"{:p}\", foo as *const fn() -> usize);\n+    println!(\"{:p}\", bar as *const fn(usize) -> usize);\n+    println!(\"{:p}\", baz as *const fn(usize, usize) -> usize);\n+\n+    //should not produce any warnings\n+    let fn_thing = foo;\n+    println!(\"{:p}\", &fn_thing);\n+}"}, {"sha": "bd2da6e1167a784d88fd605e4443c71ac51b88cf", "filename": "src/test/ui/lint/function-references.stderr", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/975547d475fcb3a7c6e440be5f8de3bf0497d383/src%2Ftest%2Fui%2Flint%2Ffunction-references.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/975547d475fcb3a7c6e440be5f8de3bf0497d383/src%2Ftest%2Fui%2Flint%2Ffunction-references.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Ffunction-references.stderr?ref=975547d475fcb3a7c6e440be5f8de3bf0497d383", "patch": "@@ -0,0 +1,22 @@\n+warning: cast `foo` with `as *const fn() -> _` to use it as a pointer\n+  --> $DIR/function-references.rs:7:23\n+   |\n+LL |     println!(\"{:p}\", &foo);\n+   |                       ^^^\n+   |\n+   = note: `#[warn(function_references)]` on by default\n+\n+warning: cast `bar` with `as *const fn(_) -> _` to use it as a pointer\n+  --> $DIR/function-references.rs:9:23\n+   |\n+LL |     println!(\"{:p}\", &bar);\n+   |                       ^^^\n+\n+warning: cast `baz` with `as *const fn(_, _) -> _` to use it as a pointer\n+  --> $DIR/function-references.rs:11:23\n+   |\n+LL |     println!(\"{:p}\", &baz);\n+   |                       ^^^\n+\n+warning: 3 warnings emitted\n+"}]}