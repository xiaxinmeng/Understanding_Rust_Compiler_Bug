{"sha": "213003b8874016aadc61195f049fc2d7e773ccad", "node_id": "C_kwDOAAsO6NoAKDIxMzAwM2I4ODc0MDE2YWFkYzYxMTk1ZjA0OWZjMmQ3ZTc3M2NjYWQ", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-11-07T17:08:10Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-11-07T17:08:10Z"}, "message": "Auto merge of #9705 - jntrnr:disable_needless_collect, r=Manishearth\n\nMove needless_collect to nursery\n\n*Please write a short comment explaining your change (or \"none\" for internal only changes)*\n\nchangelog: [`needless_collect`]: Move `needless_collect` to nursery (Now allow-by-default)\n\nAfter chatting with a few folks, it seems like `needless_collect` is giving false positives pretty regularly (https://github.com/rust-lang/rust-clippy/issues?q=is%3Aissue+is%3Aopen+needless_collect). We're big supporters of clippy in Nushell, and it's one of the passes we require for CI, but we've had to disable this particular lint. Perhaps it should be moved to the nursery until it's improved?\n\n(apologies if this isn't the right approach to disabling a lint by default. I tried to follow the idea I saw other PRs doing in the past)", "tree": {"sha": "5ab6454baf7ae1d19db5d2459089d5014dd49466", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5ab6454baf7ae1d19db5d2459089d5014dd49466"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/213003b8874016aadc61195f049fc2d7e773ccad", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/213003b8874016aadc61195f049fc2d7e773ccad", "html_url": "https://github.com/rust-lang/rust/commit/213003b8874016aadc61195f049fc2d7e773ccad", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/213003b8874016aadc61195f049fc2d7e773ccad/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "927f7da20ff85a0769b9a80566d1bab9642a25d9", "url": "https://api.github.com/repos/rust-lang/rust/commits/927f7da20ff85a0769b9a80566d1bab9642a25d9", "html_url": "https://github.com/rust-lang/rust/commit/927f7da20ff85a0769b9a80566d1bab9642a25d9"}, {"sha": "4f3fb0081dfa3853f6a3a3091457dc15888ccbb8", "url": "https://api.github.com/repos/rust-lang/rust/commits/4f3fb0081dfa3853f6a3a3091457dc15888ccbb8", "html_url": "https://github.com/rust-lang/rust/commit/4f3fb0081dfa3853f6a3a3091457dc15888ccbb8"}], "stats": {"total": 35, "additions": 18, "deletions": 17}, "files": [{"sha": "821fe1730239155f1999ab707888be340be38be5", "filename": "clippy_lints/src/loops/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/213003b8874016aadc61195f049fc2d7e773ccad/clippy_lints%2Fsrc%2Floops%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/213003b8874016aadc61195f049fc2d7e773ccad/clippy_lints%2Fsrc%2Floops%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Floops%2Fmod.rs?ref=213003b8874016aadc61195f049fc2d7e773ccad", "patch": "@@ -223,7 +223,7 @@ declare_clippy_lint! {\n     /// ```\n     #[clippy::version = \"1.30.0\"]\n     pub NEEDLESS_COLLECT,\n-    perf,\n+    nursery,\n     \"collecting an iterator when collect is not needed\"\n }\n "}, {"sha": "fe4209e99b2f56ec85ea4a266bb4c72432ff85d7", "filename": "tests/ui/needless_collect_indirect.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/213003b8874016aadc61195f049fc2d7e773ccad/tests%2Fui%2Fneedless_collect_indirect.rs", "raw_url": "https://github.com/rust-lang/rust/raw/213003b8874016aadc61195f049fc2d7e773ccad/tests%2Fui%2Fneedless_collect_indirect.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fneedless_collect_indirect.rs?ref=213003b8874016aadc61195f049fc2d7e773ccad", "patch": "@@ -1,4 +1,5 @@\n #![allow(clippy::uninlined_format_args)]\n+#![warn(clippy::needless_collect)]\n \n use std::collections::{BinaryHeap, HashMap, HashSet, LinkedList, VecDeque};\n "}, {"sha": "790d725907f322d2e1d4248aa21002607b553c8f", "filename": "tests/ui/needless_collect_indirect.stderr", "status": "modified", "additions": 16, "deletions": 16, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/213003b8874016aadc61195f049fc2d7e773ccad/tests%2Fui%2Fneedless_collect_indirect.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/213003b8874016aadc61195f049fc2d7e773ccad/tests%2Fui%2Fneedless_collect_indirect.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fneedless_collect_indirect.stderr?ref=213003b8874016aadc61195f049fc2d7e773ccad", "patch": "@@ -1,5 +1,5 @@\n error: avoid using `collect()` when not needed\n-  --> $DIR/needless_collect_indirect.rs:7:39\n+  --> $DIR/needless_collect_indirect.rs:8:39\n    |\n LL |     let indirect_iter = sample.iter().collect::<Vec<_>>();\n    |                                       ^^^^^^^\n@@ -14,7 +14,7 @@ LL ~     sample.iter().map(|x| (x, x + 1)).collect::<HashMap<_, _>>();\n    |\n \n error: avoid using `collect()` when not needed\n-  --> $DIR/needless_collect_indirect.rs:9:38\n+  --> $DIR/needless_collect_indirect.rs:10:38\n    |\n LL |     let indirect_len = sample.iter().collect::<VecDeque<_>>();\n    |                                      ^^^^^^^\n@@ -28,7 +28,7 @@ LL ~     sample.iter().count();\n    |\n \n error: avoid using `collect()` when not needed\n-  --> $DIR/needless_collect_indirect.rs:11:40\n+  --> $DIR/needless_collect_indirect.rs:12:40\n    |\n LL |     let indirect_empty = sample.iter().collect::<VecDeque<_>>();\n    |                                        ^^^^^^^\n@@ -42,7 +42,7 @@ LL ~     sample.iter().next().is_none();\n    |\n \n error: avoid using `collect()` when not needed\n-  --> $DIR/needless_collect_indirect.rs:13:43\n+  --> $DIR/needless_collect_indirect.rs:14:43\n    |\n LL |     let indirect_contains = sample.iter().collect::<VecDeque<_>>();\n    |                                           ^^^^^^^\n@@ -56,7 +56,7 @@ LL ~     sample.iter().any(|x| x == &5);\n    |\n \n error: avoid using `collect()` when not needed\n-  --> $DIR/needless_collect_indirect.rs:25:48\n+  --> $DIR/needless_collect_indirect.rs:26:48\n    |\n LL |     let non_copy_contains = sample.into_iter().collect::<Vec<_>>();\n    |                                                ^^^^^^^\n@@ -70,7 +70,7 @@ LL ~     sample.into_iter().any(|x| x == a);\n    |\n \n error: avoid using `collect()` when not needed\n-  --> $DIR/needless_collect_indirect.rs:54:51\n+  --> $DIR/needless_collect_indirect.rs:55:51\n    |\n LL |         let buffer: Vec<&str> = string.split('/').collect();\n    |                                                   ^^^^^^^\n@@ -84,7 +84,7 @@ LL ~         string.split('/').count()\n    |\n \n error: avoid using `collect()` when not needed\n-  --> $DIR/needless_collect_indirect.rs:59:55\n+  --> $DIR/needless_collect_indirect.rs:60:55\n    |\n LL |         let indirect_len: VecDeque<_> = sample.iter().collect();\n    |                                                       ^^^^^^^\n@@ -98,7 +98,7 @@ LL ~         sample.iter().count()\n    |\n \n error: avoid using `collect()` when not needed\n-  --> $DIR/needless_collect_indirect.rs:64:57\n+  --> $DIR/needless_collect_indirect.rs:65:57\n    |\n LL |         let indirect_len: LinkedList<_> = sample.iter().collect();\n    |                                                         ^^^^^^^\n@@ -112,7 +112,7 @@ LL ~         sample.iter().count()\n    |\n \n error: avoid using `collect()` when not needed\n-  --> $DIR/needless_collect_indirect.rs:69:57\n+  --> $DIR/needless_collect_indirect.rs:70:57\n    |\n LL |         let indirect_len: BinaryHeap<_> = sample.iter().collect();\n    |                                                         ^^^^^^^\n@@ -126,7 +126,7 @@ LL ~         sample.iter().count()\n    |\n \n error: avoid using `collect()` when not needed\n-  --> $DIR/needless_collect_indirect.rs:129:59\n+  --> $DIR/needless_collect_indirect.rs:130:59\n    |\n LL |             let y: Vec<usize> = vec.iter().map(|k| k * k).collect();\n    |                                                           ^^^^^^^\n@@ -143,7 +143,7 @@ LL ~             vec.iter().map(|k| k * k).any(|x| x == i);\n    |\n \n error: avoid using `collect()` when not needed\n-  --> $DIR/needless_collect_indirect.rs:154:59\n+  --> $DIR/needless_collect_indirect.rs:155:59\n    |\n LL |             let y: Vec<usize> = vec.iter().map(|k| k * k).collect();\n    |                                                           ^^^^^^^\n@@ -160,7 +160,7 @@ LL ~             vec.iter().map(|k| k * k).any(|x| x == n);\n    |\n \n error: avoid using `collect()` when not needed\n-  --> $DIR/needless_collect_indirect.rs:183:63\n+  --> $DIR/needless_collect_indirect.rs:184:63\n    |\n LL |                 let y: Vec<usize> = vec.iter().map(|k| k * k).collect();\n    |                                                               ^^^^^^^\n@@ -177,7 +177,7 @@ LL ~                 vec.iter().map(|k| k * k).any(|x| x == n);\n    |\n \n error: avoid using `collect()` when not needed\n-  --> $DIR/needless_collect_indirect.rs:219:59\n+  --> $DIR/needless_collect_indirect.rs:220:59\n    |\n LL |             let y: Vec<usize> = vec.iter().map(|k| k * k).collect();\n    |                                                           ^^^^^^^\n@@ -195,7 +195,7 @@ LL ~                 vec.iter().map(|k| k * k).any(|x| x == n);\n    |\n \n error: avoid using `collect()` when not needed\n-  --> $DIR/needless_collect_indirect.rs:244:26\n+  --> $DIR/needless_collect_indirect.rs:245:26\n    |\n LL |         let w = v.iter().collect::<Vec<_>>();\n    |                          ^^^^^^^\n@@ -211,7 +211,7 @@ LL ~         for _ in 0..v.iter().count() {\n    |\n \n error: avoid using `collect()` when not needed\n-  --> $DIR/needless_collect_indirect.rs:266:30\n+  --> $DIR/needless_collect_indirect.rs:267:30\n    |\n LL |         let mut w = v.iter().collect::<Vec<_>>();\n    |                              ^^^^^^^\n@@ -227,7 +227,7 @@ LL ~         while 1 == v.iter().count() {\n    |\n \n error: avoid using `collect()` when not needed\n-  --> $DIR/needless_collect_indirect.rs:288:30\n+  --> $DIR/needless_collect_indirect.rs:289:30\n    |\n LL |         let mut w = v.iter().collect::<Vec<_>>();\n    |                              ^^^^^^^"}]}