{"sha": "550ff84ecdb16bfb059fe0fab69e6788890a5bbb", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU1MGZmODRlY2RiMTZiZmIwNTlmZTBmYWI2OWU2Nzg4ODkwYTViYmI=", "commit": {"author": {"name": "Evan Simmons", "email": "esims89@gmail.com", "date": "2018-08-07T20:01:10Z"}, "committer": {"name": "Evan Simmons", "email": "esims89@gmail.com", "date": "2018-08-07T20:01:10Z"}, "message": "Allow print/write with multiple newlines", "tree": {"sha": "7e0ad15aa741eb94948eae15ca23c222b9f55ee5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7e0ad15aa741eb94948eae15ca23c222b9f55ee5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/550ff84ecdb16bfb059fe0fab69e6788890a5bbb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/550ff84ecdb16bfb059fe0fab69e6788890a5bbb", "html_url": "https://github.com/rust-lang/rust/commit/550ff84ecdb16bfb059fe0fab69e6788890a5bbb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/550ff84ecdb16bfb059fe0fab69e6788890a5bbb/comments", "author": {"login": "estk", "id": 390090, "node_id": "MDQ6VXNlcjM5MDA5MA==", "avatar_url": "https://avatars.githubusercontent.com/u/390090?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estk", "html_url": "https://github.com/estk", "followers_url": "https://api.github.com/users/estk/followers", "following_url": "https://api.github.com/users/estk/following{/other_user}", "gists_url": "https://api.github.com/users/estk/gists{/gist_id}", "starred_url": "https://api.github.com/users/estk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estk/subscriptions", "organizations_url": "https://api.github.com/users/estk/orgs", "repos_url": "https://api.github.com/users/estk/repos", "events_url": "https://api.github.com/users/estk/events{/privacy}", "received_events_url": "https://api.github.com/users/estk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "estk", "id": 390090, "node_id": "MDQ6VXNlcjM5MDA5MA==", "avatar_url": "https://avatars.githubusercontent.com/u/390090?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estk", "html_url": "https://github.com/estk", "followers_url": "https://api.github.com/users/estk/followers", "following_url": "https://api.github.com/users/estk/following{/other_user}", "gists_url": "https://api.github.com/users/estk/gists{/gist_id}", "starred_url": "https://api.github.com/users/estk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estk/subscriptions", "organizations_url": "https://api.github.com/users/estk/orgs", "repos_url": "https://api.github.com/users/estk/repos", "events_url": "https://api.github.com/users/estk/events{/privacy}", "received_events_url": "https://api.github.com/users/estk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "77025557f9de97eeec9b740d8b5031ee4d6f6c6b", "url": "https://api.github.com/repos/rust-lang/rust/commits/77025557f9de97eeec9b740d8b5031ee4d6f6c6b", "html_url": "https://github.com/rust-lang/rust/commit/77025557f9de97eeec9b740d8b5031ee4d6f6c6b"}], "stats": {"total": 47, "additions": 26, "deletions": 21}, "files": [{"sha": "ca987eb0baedb5a3f2ef46701f1db9964c29c929", "filename": "clippy_lints/src/write.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/550ff84ecdb16bfb059fe0fab69e6788890a5bbb/clippy_lints%2Fsrc%2Fwrite.rs", "raw_url": "https://github.com/rust-lang/rust/raw/550ff84ecdb16bfb059fe0fab69e6788890a5bbb/clippy_lints%2Fsrc%2Fwrite.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fwrite.rs?ref=550ff84ecdb16bfb059fe0fab69e6788890a5bbb", "patch": "@@ -38,7 +38,7 @@ declare_clippy_lint! {\n declare_clippy_lint! {\n     pub PRINT_WITH_NEWLINE,\n     style,\n-    \"using `print!()` with a format string that ends in a newline\"\n+    \"using `print!()` with a format string that ends in a single newline\"\n }\n \n /// **What it does:** Checks for printing on *stdout*. The purpose of this lint\n@@ -127,7 +127,7 @@ declare_clippy_lint! {\n declare_clippy_lint! {\n     pub WRITE_WITH_NEWLINE,\n     style,\n-    \"using `write!()` with a format string that ends in a newline\"\n+    \"using `write!()` with a format string that ends in a single newline\"\n }\n \n /// **What it does:** This lint warns about the use of literals as `write!`/`writeln!` args.\n@@ -186,18 +186,18 @@ impl EarlyLintPass for Pass {\n         } else if mac.node.path == \"print\" {\n             span_lint(cx, PRINT_STDOUT, mac.span, \"use of `print!`\");\n             if let Some(fmtstr) = check_tts(cx, &mac.node.tts, false) {\n-                if fmtstr.ends_with(\"\\\\n\") {\n+                if fmtstr.ends_with(\"\\\\n\") && !fmtstr.ends_with(\"\\\\n\\\\n\") {\n                     span_lint(cx, PRINT_WITH_NEWLINE, mac.span,\n                             \"using `print!()` with a format string that ends in a \\\n-                            newline, consider using `println!()` instead\");\n+                            single newline, consider using `println!()` instead\");\n                 }\n             }\n         } else if mac.node.path == \"write\" {\n             if let Some(fmtstr) = check_tts(cx, &mac.node.tts, true) {\n-                if fmtstr.ends_with(\"\\\\n\") {\n+                if fmtstr.ends_with(\"\\\\n\") && !fmtstr.ends_with(\"\\\\n\\\\n\") {\n                     span_lint(cx, WRITE_WITH_NEWLINE, mac.span,\n                             \"using `write!()` with a format string that ends in a \\\n-                            newline, consider using `writeln!()` instead\");\n+                            single newline, consider using `writeln!()` instead\");\n                 }\n             }\n         } else if mac.node.path == \"writeln\" {"}, {"sha": "906fa987d17cdc610ac94f7cfa0808621dcc9b2d", "filename": "tests/ui/print_with_newline.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/550ff84ecdb16bfb059fe0fab69e6788890a5bbb/tests%2Fui%2Fprint_with_newline.rs", "raw_url": "https://github.com/rust-lang/rust/raw/550ff84ecdb16bfb059fe0fab69e6788890a5bbb/tests%2Fui%2Fprint_with_newline.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fprint_with_newline.rs?ref=550ff84ecdb16bfb059fe0fab69e6788890a5bbb", "patch": "@@ -6,7 +6,7 @@\n fn main() {\n     print!(\"Hello\\n\");\n     print!(\"Hello {}\\n\", \"world\");\n-    print!(\"Hello {} {}\\n\\n\", \"world\", \"#2\");\n+    print!(\"Hello {} {}\\n\", \"world\", \"#2\");\n     print!(\"{}\\n\", 1265);\n \n     // these are all fine\n@@ -18,4 +18,7 @@ fn main() {\n     print!(\"Issue\\n{}\", 1265);\n     print!(\"{}\", 1265);\n     print!(\"\\n{}\", 1275);\n+    print!(\"\\n\\n\");\n+    print!(\"like eof\\n\\n\");\n+    print!(\"Hello {} {}\\n\\n\", \"world\", \"#2\");\n }"}, {"sha": "58413a9b4a9a67565c79dd0323db343a2df69cfb", "filename": "tests/ui/print_with_newline.stderr", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/550ff84ecdb16bfb059fe0fab69e6788890a5bbb/tests%2Fui%2Fprint_with_newline.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/550ff84ecdb16bfb059fe0fab69e6788890a5bbb/tests%2Fui%2Fprint_with_newline.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fprint_with_newline.stderr?ref=550ff84ecdb16bfb059fe0fab69e6788890a5bbb", "patch": "@@ -1,24 +1,24 @@\n-error: using `print!()` with a format string that ends in a newline, consider using `println!()` instead\n+error: using `print!()` with a format string that ends in a single newline, consider using `println!()` instead\n  --> $DIR/print_with_newline.rs:7:5\n   |\n 7 |     print!(\"Hello/n\");\n   |     ^^^^^^^^^^^^^^^^^\n   |\n   = note: `-D print-with-newline` implied by `-D warnings`\n \n-error: using `print!()` with a format string that ends in a newline, consider using `println!()` instead\n+error: using `print!()` with a format string that ends in a single newline, consider using `println!()` instead\n  --> $DIR/print_with_newline.rs:8:5\n   |\n 8 |     print!(\"Hello {}/n\", \"world\");\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n-error: using `print!()` with a format string that ends in a newline, consider using `println!()` instead\n+error: using `print!()` with a format string that ends in a single newline, consider using `println!()` instead\n  --> $DIR/print_with_newline.rs:9:5\n   |\n-9 |     print!(\"Hello {} {}/n/n\", \"world\", \"#2\");\n-  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+9 |     print!(\"Hello {} {}/n\", \"world\", \"#2\");\n+  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n-error: using `print!()` with a format string that ends in a newline, consider using `println!()` instead\n+error: using `print!()` with a format string that ends in a single newline, consider using `println!()` instead\n   --> $DIR/print_with_newline.rs:10:5\n    |\n 10 |     print!(\"{}/n\", 1265);"}, {"sha": "8badbd6572671177f6c9bcf059342594057f43f1", "filename": "tests/ui/write_with_newline.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/550ff84ecdb16bfb059fe0fab69e6788890a5bbb/tests%2Fui%2Fwrite_with_newline.rs", "raw_url": "https://github.com/rust-lang/rust/raw/550ff84ecdb16bfb059fe0fab69e6788890a5bbb/tests%2Fui%2Fwrite_with_newline.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fwrite_with_newline.rs?ref=550ff84ecdb16bfb059fe0fab69e6788890a5bbb", "patch": "@@ -9,7 +9,7 @@ fn main() {\n     // These should fail\n     write!(&mut v, \"Hello\\n\");\n     write!(&mut v, \"Hello {}\\n\", \"world\");\n-    write!(&mut v, \"Hello {} {}\\n\\n\", \"world\", \"#2\");\n+    write!(&mut v, \"Hello {} {}\\n\", \"world\", \"#2\");\n     write!(&mut v, \"{}\\n\", 1265);\n \n     // These should be fine\n@@ -21,5 +21,7 @@ fn main() {\n     write!(&mut v, \"Issue\\n{}\", 1265);\n     write!(&mut v, \"{}\", 1265);\n     write!(&mut v, \"\\n{}\", 1275);\n-\n+    write!(&mut v, \"\\n\\n\");\n+    write!(&mut v, \"like eof\\n\\n\");\n+    write!(&mut v, \"Hello {} {}\\n\\n\", \"world\", \"#2\");\n }"}, {"sha": "a8a6039f3e1920bd72f141d8b93861ceb65774a8", "filename": "tests/ui/write_with_newline.stderr", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/550ff84ecdb16bfb059fe0fab69e6788890a5bbb/tests%2Fui%2Fwrite_with_newline.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/550ff84ecdb16bfb059fe0fab69e6788890a5bbb/tests%2Fui%2Fwrite_with_newline.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fwrite_with_newline.stderr?ref=550ff84ecdb16bfb059fe0fab69e6788890a5bbb", "patch": "@@ -1,24 +1,24 @@\n-error: using `write!()` with a format string that ends in a newline, consider using `writeln!()` instead\n+error: using `write!()` with a format string that ends in a single newline, consider using `writeln!()` instead\n   --> $DIR/write_with_newline.rs:10:5\n    |\n 10 |     write!(&mut v, \"Hello/n\");\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: `-D write-with-newline` implied by `-D warnings`\n \n-error: using `write!()` with a format string that ends in a newline, consider using `writeln!()` instead\n+error: using `write!()` with a format string that ends in a single newline, consider using `writeln!()` instead\n   --> $DIR/write_with_newline.rs:11:5\n    |\n 11 |     write!(&mut v, \"Hello {}/n\", \"world\");\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n-error: using `write!()` with a format string that ends in a newline, consider using `writeln!()` instead\n+error: using `write!()` with a format string that ends in a single newline, consider using `writeln!()` instead\n   --> $DIR/write_with_newline.rs:12:5\n    |\n-12 |     write!(&mut v, \"Hello {} {}/n/n\", \"world\", \"#2\");\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+12 |     write!(&mut v, \"Hello {} {}/n\", \"world\", \"#2\");\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n-error: using `write!()` with a format string that ends in a newline, consider using `writeln!()` instead\n+error: using `write!()` with a format string that ends in a single newline, consider using `writeln!()` instead\n   --> $DIR/write_with_newline.rs:13:5\n    |\n 13 |     write!(&mut v, \"{}/n\", 1265);"}]}