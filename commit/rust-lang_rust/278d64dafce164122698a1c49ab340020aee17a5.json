{"sha": "278d64dafce164122698a1c49ab340020aee17a5", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI3OGQ2NGRhZmNlMTY0MTIyNjk4YTFjNDlhYjM0MDAyMGFlZTE3YTU=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2011-05-16T22:19:07Z"}, "committer": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2011-05-16T22:20:11Z"}, "message": "rustc: Don't unpack annotations in trans::lval_generic_fn()", "tree": {"sha": "0f26e3a68f5cb6836cf92f13c1062b3893eb12df", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0f26e3a68f5cb6836cf92f13c1062b3893eb12df"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/278d64dafce164122698a1c49ab340020aee17a5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/278d64dafce164122698a1c49ab340020aee17a5", "html_url": "https://github.com/rust-lang/rust/commit/278d64dafce164122698a1c49ab340020aee17a5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/278d64dafce164122698a1c49ab340020aee17a5/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9ac29480cec8e9373d5ac3a1454c3a54a239f373", "url": "https://api.github.com/repos/rust-lang/rust/commits/9ac29480cec8e9373d5ac3a1454c3a54a239f373", "html_url": "https://github.com/rust-lang/rust/commit/9ac29480cec8e9373d5ac3a1454c3a54a239f373"}], "stats": {"total": 14, "additions": 2, "deletions": 12}, "files": [{"sha": "aaf65fe270eedfd7852f5316c943114a9f2c9668", "filename": "src/comp/middle/trans.rs", "status": "modified", "additions": 2, "deletions": 12, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/278d64dafce164122698a1c49ab340020aee17a5/src%2Fcomp%2Fmiddle%2Ftrans.rs", "raw_url": "https://github.com/rust-lang/rust/raw/278d64dafce164122698a1c49ab340020aee17a5/src%2Fcomp%2Fmiddle%2Ftrans.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Ftrans.rs?ref=278d64dafce164122698a1c49ab340020aee17a5", "patch": "@@ -4310,18 +4310,8 @@ fn lval_generic_fn(&@block_ctxt cx,\n         lv = trans_external_path(cx, fn_id, tpt);\n     }\n \n-    auto monoty;\n-    let vec[ty::t] tys;\n-    alt (ann) {\n-        case (ast::ann_none(_)) {\n-            cx.fcx.lcx.ccx.sess.bug(\"no type annotation for path!\");\n-            fail;\n-        }\n-        case (ast::ann_type(_, ?monoty_, ?tps, _)) {\n-            monoty = monoty_;\n-            tys = option::get[vec[ty::t]](tps);\n-        }\n-    }\n+    auto tys = ty::ann_to_type_params(cx.fcx.lcx.ccx.node_types, ann);\n+    auto monoty = ty::ann_to_type(cx.fcx.lcx.ccx.node_types, ann);\n \n     if (_vec::len[ty::t](tys) != 0u) {\n         auto bcx = lv.res.bcx;"}]}