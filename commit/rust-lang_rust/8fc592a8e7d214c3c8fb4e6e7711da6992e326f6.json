{"sha": "8fc592a8e7d214c3c8fb4e6e7711da6992e326f6", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhmYzU5MmE4ZTdkMjE0YzNjOGZiNGU2ZTc3MTFkYTY5OTJlMzI2ZjY=", "commit": {"author": {"name": "Philipp Krones", "email": "hello@philkrones.com", "date": "2020-04-08T13:50:26Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-04-08T13:50:26Z"}, "message": "Rollup merge of #5424 - jpospychala:suspicious_op_assign_impl, r=flip1995\n\nIncorrect suspicious_op_assign_impl\n\nfixes #5255\n\nchangelog: In suspicious_op_assign_impl ignore all operators in expression if it's part of AssignOp", "tree": {"sha": "27ed7b8d7f7397eb1ea6ff35bdce157d6496c887", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/27ed7b8d7f7397eb1ea6ff35bdce157d6496c887"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8fc592a8e7d214c3c8fb4e6e7711da6992e326f6", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJejdaiCRBK7hj4Ov3rIwAAdHIIAKDKE+RJSF6uKK3kfeEE5Ke+\nA25nJ3wqWzznMzvjFImKRCEB1EKp2dRFvHA/E6BpktoaOq4clyWVD4F0AIE4wqiA\nW45mImZzukI0jC98IerzywYqD7kaMBw/Kfy2Fj/voM7mhcoUlR+kXHFULteJzf2R\nTu3uwUQTYeVmBv1kTqe431lxs0zpQPcOktmUmbfO0ClRp7a9o9BOClkBrxp1gq4+\n5KuE90oBflSUijqMlZPU9RwygZEx6lYvWOaTcwIXXN59QRlsUFVtrgzh6dv/VwNN\nzUk3Dd6pE9xnSSQ218uMdvYo9LDJs5uAuir7HsRa8W96/bWe9zGWPmcNvTb5y/0=\n=SB3I\n-----END PGP SIGNATURE-----\n", "payload": "tree 27ed7b8d7f7397eb1ea6ff35bdce157d6496c887\nparent b42bd1954af0982c3656cbcb0e869e665d37b5bc\nparent 9c9af1d88525de5649375e08abf16437426349b8\nauthor Philipp Krones <hello@philkrones.com> 1586353826 +0200\ncommitter GitHub <noreply@github.com> 1586353826 +0200\n\nRollup merge of #5424 - jpospychala:suspicious_op_assign_impl, r=flip1995\n\nIncorrect suspicious_op_assign_impl\n\nfixes #5255\n\nchangelog: In suspicious_op_assign_impl ignore all operators in expression if it's part of AssignOp\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8fc592a8e7d214c3c8fb4e6e7711da6992e326f6", "html_url": "https://github.com/rust-lang/rust/commit/8fc592a8e7d214c3c8fb4e6e7711da6992e326f6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8fc592a8e7d214c3c8fb4e6e7711da6992e326f6/comments", "author": {"login": "flip1995", "id": 9744647, "node_id": "MDQ6VXNlcjk3NDQ2NDc=", "avatar_url": "https://avatars.githubusercontent.com/u/9744647?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flip1995", "html_url": "https://github.com/flip1995", "followers_url": "https://api.github.com/users/flip1995/followers", "following_url": "https://api.github.com/users/flip1995/following{/other_user}", "gists_url": "https://api.github.com/users/flip1995/gists{/gist_id}", "starred_url": "https://api.github.com/users/flip1995/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flip1995/subscriptions", "organizations_url": "https://api.github.com/users/flip1995/orgs", "repos_url": "https://api.github.com/users/flip1995/repos", "events_url": "https://api.github.com/users/flip1995/events{/privacy}", "received_events_url": "https://api.github.com/users/flip1995/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b42bd1954af0982c3656cbcb0e869e665d37b5bc", "url": "https://api.github.com/repos/rust-lang/rust/commits/b42bd1954af0982c3656cbcb0e869e665d37b5bc", "html_url": "https://github.com/rust-lang/rust/commit/b42bd1954af0982c3656cbcb0e869e665d37b5bc"}, {"sha": "9c9af1d88525de5649375e08abf16437426349b8", "url": "https://api.github.com/repos/rust-lang/rust/commits/9c9af1d88525de5649375e08abf16437426349b8", "html_url": "https://github.com/rust-lang/rust/commit/9c9af1d88525de5649375e08abf16437426349b8"}], "stats": {"total": 39, "additions": 33, "deletions": 6}, "files": [{"sha": "f1e223d9a48c65c95268893cac55b88854afcb68", "filename": "clippy_lints/src/suspicious_trait_impl.rs", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/8fc592a8e7d214c3c8fb4e6e7711da6992e326f6/clippy_lints%2Fsrc%2Fsuspicious_trait_impl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8fc592a8e7d214c3c8fb4e6e7711da6992e326f6/clippy_lints%2Fsrc%2Fsuspicious_trait_impl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fsuspicious_trait_impl.rs?ref=8fc592a8e7d214c3c8fb4e6e7711da6992e326f6", "patch": "@@ -54,7 +54,7 @@ declare_lint_pass!(SuspiciousImpl => [SUSPICIOUS_ARITHMETIC_IMPL, SUSPICIOUS_OP_\n \n impl<'a, 'tcx> LateLintPass<'a, 'tcx> for SuspiciousImpl {\n     fn check_expr(&mut self, cx: &LateContext<'a, 'tcx>, expr: &'tcx hir::Expr<'_>) {\n-        if let hir::ExprKind::Binary(binop, _, _) = expr.kind {\n+        if let hir::ExprKind::Binary(binop, _, _) | hir::ExprKind::AssignOp(binop, ..) = expr.kind {\n             match binop.node {\n                 hir::BinOpKind::Eq\n                 | hir::BinOpKind::Lt\n@@ -65,14 +65,15 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for SuspiciousImpl {\n                 _ => {},\n             }\n             // Check if the binary expression is part of another bi/unary expression\n-            // as a child node\n+            // or operator assignment as a child node\n             let mut parent_expr = cx.tcx.hir().get_parent_node(expr.hir_id);\n             while parent_expr != hir::CRATE_HIR_ID {\n                 if let hir::Node::Expr(e) = cx.tcx.hir().get(parent_expr) {\n                     match e.kind {\n                         hir::ExprKind::Binary(..)\n                         | hir::ExprKind::Unary(hir::UnOp::UnNot, _)\n-                        | hir::ExprKind::Unary(hir::UnOp::UnNeg, _) => return,\n+                        | hir::ExprKind::Unary(hir::UnOp::UnNeg, _)\n+                        | hir::ExprKind::AssignOp(..) => return,\n                         _ => {},\n                     }\n                 }\n@@ -191,7 +192,8 @@ impl<'a, 'tcx> Visitor<'tcx> for BinaryExprVisitor {\n         match expr.kind {\n             hir::ExprKind::Binary(..)\n             | hir::ExprKind::Unary(hir::UnOp::UnNot, _)\n-            | hir::ExprKind::Unary(hir::UnOp::UnNeg, _) => self.in_binary_expr = true,\n+            | hir::ExprKind::Unary(hir::UnOp::UnNeg, _)\n+            | hir::ExprKind::AssignOp(..) => self.in_binary_expr = true,\n             _ => {},\n         }\n "}, {"sha": "1f5b981188706fd579b77f761c5563a79bdaa7f6", "filename": "tests/ui/suspicious_arithmetic_impl.rs", "status": "modified", "additions": 20, "deletions": 1, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/8fc592a8e7d214c3c8fb4e6e7711da6992e326f6/tests%2Fui%2Fsuspicious_arithmetic_impl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8fc592a8e7d214c3c8fb4e6e7711da6992e326f6/tests%2Fui%2Fsuspicious_arithmetic_impl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fsuspicious_arithmetic_impl.rs?ref=8fc592a8e7d214c3c8fb4e6e7711da6992e326f6", "patch": "@@ -1,5 +1,5 @@\n #![warn(clippy::suspicious_arithmetic_impl)]\n-use std::ops::{Add, AddAssign, Div, Mul, Sub};\n+use std::ops::{Add, AddAssign, BitOrAssign, Div, DivAssign, Mul, MulAssign, Sub};\n \n #[derive(Copy, Clone)]\n struct Foo(u32);\n@@ -18,6 +18,25 @@ impl AddAssign for Foo {\n     }\n }\n \n+impl BitOrAssign for Foo {\n+    fn bitor_assign(&mut self, other: Foo) {\n+        let idx = other.0;\n+        self.0 |= 1 << idx; // OK: BinOpKind::Shl part of AssignOp as child node\n+    }\n+}\n+\n+impl MulAssign for Foo {\n+    fn mul_assign(&mut self, other: Foo) {\n+        self.0 /= other.0;\n+    }\n+}\n+\n+impl DivAssign for Foo {\n+    fn div_assign(&mut self, other: Foo) {\n+        self.0 /= other.0; // OK: BinOpKind::Div == DivAssign\n+    }\n+}\n+\n impl Mul for Foo {\n     type Output = Foo;\n "}, {"sha": "7e42d72c30b2cefd6503f6315ac316e0e372053f", "filename": "tests/ui/suspicious_arithmetic_impl.stderr", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/8fc592a8e7d214c3c8fb4e6e7711da6992e326f6/tests%2Fui%2Fsuspicious_arithmetic_impl.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/8fc592a8e7d214c3c8fb4e6e7711da6992e326f6/tests%2Fui%2Fsuspicious_arithmetic_impl.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fsuspicious_arithmetic_impl.stderr?ref=8fc592a8e7d214c3c8fb4e6e7711da6992e326f6", "patch": "@@ -14,5 +14,11 @@ LL |         *self = *self - other;\n    |\n    = note: `#[deny(clippy::suspicious_op_assign_impl)]` on by default\n \n-error: aborting due to 2 previous errors\n+error: Suspicious use of binary operator in `MulAssign` impl\n+  --> $DIR/suspicious_arithmetic_impl.rs:30:16\n+   |\n+LL |         self.0 /= other.0;\n+   |                ^^\n+\n+error: aborting due to 3 previous errors\n "}]}