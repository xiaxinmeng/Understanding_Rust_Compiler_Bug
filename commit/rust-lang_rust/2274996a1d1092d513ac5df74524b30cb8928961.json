{"sha": "2274996a1d1092d513ac5df74524b30cb8928961", "node_id": "MDY6Q29tbWl0NzI0NzEyOjIyNzQ5OTZhMWQxMDkyZDUxM2FjNWRmNzQ1MjRiMzBjYjg5Mjg5NjE=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2014-11-23T00:36:43Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2014-11-23T00:36:43Z"}, "message": "auto merge of #19137 : tbu-/rust/pr_refcell_unsafety, r=huonw", "tree": {"sha": "2d059c81f0747df973c5eea50b8b9f1d230cc774", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2d059c81f0747df973c5eea50b8b9f1d230cc774"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2274996a1d1092d513ac5df74524b30cb8928961", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2274996a1d1092d513ac5df74524b30cb8928961", "html_url": "https://github.com/rust-lang/rust/commit/2274996a1d1092d513ac5df74524b30cb8928961", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2274996a1d1092d513ac5df74524b30cb8928961/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ccc4a7cebc759b3c8295b64bd5c1fe29fdb3db8a", "url": "https://api.github.com/repos/rust-lang/rust/commits/ccc4a7cebc759b3c8295b64bd5c1fe29fdb3db8a", "html_url": "https://github.com/rust-lang/rust/commit/ccc4a7cebc759b3c8295b64bd5c1fe29fdb3db8a"}, {"sha": "f9f5c03026ebd2c5ee6f0cba3878c08d157da9cb", "url": "https://api.github.com/repos/rust-lang/rust/commits/f9f5c03026ebd2c5ee6f0cba3878c08d157da9cb", "html_url": "https://github.com/rust-lang/rust/commit/f9f5c03026ebd2c5ee6f0cba3878c08d157da9cb"}], "stats": {"total": 3, "additions": 3, "deletions": 0}, "files": [{"sha": "c4d0bec83eaa76661e7386c0db00a98602ff25ec", "filename": "src/libcore/cell.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/2274996a1d1092d513ac5df74524b30cb8928961/src%2Flibcore%2Fcell.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2274996a1d1092d513ac5df74524b30cb8928961/src%2Flibcore%2Fcell.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fcell.rs?ref=2274996a1d1092d513ac5df74524b30cb8928961", "patch": "@@ -258,6 +258,9 @@ impl<T> RefCell<T> {\n     /// Consumes the `RefCell`, returning the wrapped value.\n     #[unstable = \"may be renamed, depending on global conventions\"]\n     pub fn unwrap(self) -> T {\n+        // Since this function takes `self` (the `RefCell`) by value, the\n+        // compiler statically verifies that it is not currently borrowed.\n+        // Therefore the following assertion is just a `debug_assert!`.\n         debug_assert!(self.borrow.get() == UNUSED);\n         unsafe{self.value.unwrap()}\n     }"}]}