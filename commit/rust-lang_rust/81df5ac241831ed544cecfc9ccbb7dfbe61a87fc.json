{"sha": "81df5ac241831ed544cecfc9ccbb7dfbe61a87fc", "node_id": "MDY6Q29tbWl0NzI0NzEyOjgxZGY1YWMyNDE4MzFlZDU0NGNlY2ZjOWNjYmI3ZGZiZTYxYTg3ZmM=", "commit": {"author": {"name": "Tom Eccles", "email": "tom.eccles@codethink.co.uk", "date": "2020-05-28T16:32:12Z"}, "committer": {"name": "Tom Eccles", "email": "tom.eccles@codethink.co.uk", "date": "2020-06-02T13:00:18Z"}, "message": "compiletest: Add name directive for remote runners\n\nAllow tests to use\n// ignore-remote\nto ignore the test when using remote-test-{client,server}. In most\nsituations this would be covered by\n// ignore-cross-compile\nbut I see no reason that a non-cross compiled remote test runner\nshouldn't work.", "tree": {"sha": "dd06005878e0e4a56dd37a78afa411ec576aaff6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/dd06005878e0e4a56dd37a78afa411ec576aaff6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/81df5ac241831ed544cecfc9ccbb7dfbe61a87fc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/81df5ac241831ed544cecfc9ccbb7dfbe61a87fc", "html_url": "https://github.com/rust-lang/rust/commit/81df5ac241831ed544cecfc9ccbb7dfbe61a87fc", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/81df5ac241831ed544cecfc9ccbb7dfbe61a87fc/comments", "author": {"login": "tblah", "id": 3716681, "node_id": "MDQ6VXNlcjM3MTY2ODE=", "avatar_url": "https://avatars.githubusercontent.com/u/3716681?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tblah", "html_url": "https://github.com/tblah", "followers_url": "https://api.github.com/users/tblah/followers", "following_url": "https://api.github.com/users/tblah/following{/other_user}", "gists_url": "https://api.github.com/users/tblah/gists{/gist_id}", "starred_url": "https://api.github.com/users/tblah/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tblah/subscriptions", "organizations_url": "https://api.github.com/users/tblah/orgs", "repos_url": "https://api.github.com/users/tblah/repos", "events_url": "https://api.github.com/users/tblah/events{/privacy}", "received_events_url": "https://api.github.com/users/tblah/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tblah", "id": 3716681, "node_id": "MDQ6VXNlcjM3MTY2ODE=", "avatar_url": "https://avatars.githubusercontent.com/u/3716681?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tblah", "html_url": "https://github.com/tblah", "followers_url": "https://api.github.com/users/tblah/followers", "following_url": "https://api.github.com/users/tblah/following{/other_user}", "gists_url": "https://api.github.com/users/tblah/gists{/gist_id}", "starred_url": "https://api.github.com/users/tblah/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tblah/subscriptions", "organizations_url": "https://api.github.com/users/tblah/orgs", "repos_url": "https://api.github.com/users/tblah/repos", "events_url": "https://api.github.com/users/tblah/events{/privacy}", "received_events_url": "https://api.github.com/users/tblah/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9e137bb8b685785fce6d1bc870bc197634b3796e", "url": "https://api.github.com/repos/rust-lang/rust/commits/9e137bb8b685785fce6d1bc870bc197634b3796e", "html_url": "https://github.com/rust-lang/rust/commit/9e137bb8b685785fce6d1bc870bc197634b3796e"}], "stats": {"total": 3, "additions": 3, "deletions": 0}, "files": [{"sha": "e97dcab6ae560e7c9a3d79120914aecb3e7f2483", "filename": "src/test/ui-fulldeps/compiler-calls.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/81df5ac241831ed544cecfc9ccbb7dfbe61a87fc/src%2Ftest%2Fui-fulldeps%2Fcompiler-calls.rs", "raw_url": "https://github.com/rust-lang/rust/raw/81df5ac241831ed544cecfc9ccbb7dfbe61a87fc/src%2Ftest%2Fui-fulldeps%2Fcompiler-calls.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui-fulldeps%2Fcompiler-calls.rs?ref=81df5ac241831ed544cecfc9ccbb7dfbe61a87fc", "patch": "@@ -3,6 +3,7 @@\n \n // ignore-cross-compile\n // ignore-stage1\n+// ignore-remote\n \n #![feature(rustc_private)]\n "}, {"sha": "ff7bbafe7c212176a77b005269ea8124c8ff15b6", "filename": "src/test/ui-fulldeps/mod_dir_path_canonicalized.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/81df5ac241831ed544cecfc9ccbb7dfbe61a87fc/src%2Ftest%2Fui-fulldeps%2Fmod_dir_path_canonicalized.rs", "raw_url": "https://github.com/rust-lang/rust/raw/81df5ac241831ed544cecfc9ccbb7dfbe61a87fc/src%2Ftest%2Fui-fulldeps%2Fmod_dir_path_canonicalized.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui-fulldeps%2Fmod_dir_path_canonicalized.rs?ref=81df5ac241831ed544cecfc9ccbb7dfbe61a87fc", "patch": "@@ -1,6 +1,7 @@\n // run-pass\n // Testing that a librustc_ast can parse modules with canonicalized base path\n // ignore-cross-compile\n+// ignore-remote\n \n #![feature(rustc_private)]\n "}, {"sha": "9d1940dd4d6c20c0cc5e413ced2df891fa6232e8", "filename": "src/tools/compiletest/src/header.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/81df5ac241831ed544cecfc9ccbb7dfbe61a87fc/src%2Ftools%2Fcompiletest%2Fsrc%2Fheader.rs", "raw_url": "https://github.com/rust-lang/rust/raw/81df5ac241831ed544cecfc9ccbb7dfbe61a87fc/src%2Ftools%2Fcompiletest%2Fsrc%2Fheader.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fcompiletest%2Fsrc%2Fheader.rs?ref=81df5ac241831ed544cecfc9ccbb7dfbe61a87fc", "patch": "@@ -853,6 +853,7 @@ impl Config {\n             name == util::get_pointer_width(&self.target) ||    // pointer width\n             name == self.stage_id.split('-').next().unwrap() || // stage\n             (self.target != self.host && name == \"cross-compile\") ||\n+            (self.remote_test_client.is_some() && name == \"remote\") ||\n             match self.compare_mode {\n                 Some(CompareMode::Nll) => name == \"compare-mode-nll\",\n                 Some(CompareMode::Polonius) => name == \"compare-mode-polonius\","}]}