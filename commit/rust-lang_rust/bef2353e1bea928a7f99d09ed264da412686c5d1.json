{"sha": "bef2353e1bea928a7f99d09ed264da412686c5d1", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJlZjIzNTNlMWJlYTkyOGE3Zjk5ZDA5ZWQyNjRkYTQxMjY4NmM1ZDE=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2013-12-21T21:46:08Z"}, "committer": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2013-12-26T23:54:31Z"}, "message": "librustc: De-`@mut` `IrMaps::var_kinds`", "tree": {"sha": "c1717acbc33e7bf4f6df171a8df2b1500d78ef6f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c1717acbc33e7bf4f6df171a8df2b1500d78ef6f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bef2353e1bea928a7f99d09ed264da412686c5d1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bef2353e1bea928a7f99d09ed264da412686c5d1", "html_url": "https://github.com/rust-lang/rust/commit/bef2353e1bea928a7f99d09ed264da412686c5d1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bef2353e1bea928a7f99d09ed264da412686c5d1/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bd08889d689218d8c2e31aed6b064648e6e97f16", "url": "https://api.github.com/repos/rust-lang/rust/commits/bd08889d689218d8c2e31aed6b064648e6e97f16", "html_url": "https://github.com/rust-lang/rust/commit/bd08889d689218d8c2e31aed6b064648e6e97f16"}], "stats": {"total": 12, "additions": 8, "deletions": 4}, "files": [{"sha": "4fea07a2f8c894a19381d9f2643884f555872b74", "filename": "src/librustc/middle/liveness.rs", "status": "modified", "additions": 8, "deletions": 4, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/bef2353e1bea928a7f99d09ed264da412686c5d1/src%2Flibrustc%2Fmiddle%2Fliveness.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bef2353e1bea928a7f99d09ed264da412686c5d1/src%2Flibrustc%2Fmiddle%2Fliveness.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fliveness.rs?ref=bef2353e1bea928a7f99d09ed264da412686c5d1", "patch": "@@ -250,7 +250,7 @@ struct IrMaps {\n     live_node_map: RefCell<HashMap<NodeId, LiveNode>>,\n     variable_map: RefCell<HashMap<NodeId, Variable>>,\n     capture_info_map: RefCell<HashMap<NodeId, @~[CaptureInfo]>>,\n-    var_kinds: ~[VarKind],\n+    var_kinds: RefCell<~[VarKind]>,\n     lnks: ~[LiveNodeKind],\n }\n \n@@ -267,7 +267,7 @@ fn IrMaps(tcx: ty::ctxt,\n         live_node_map: RefCell::new(HashMap::new()),\n         variable_map: RefCell::new(HashMap::new()),\n         capture_info_map: RefCell::new(HashMap::new()),\n-        var_kinds: ~[],\n+        var_kinds: RefCell::new(~[]),\n         lnks: ~[],\n     }\n }\n@@ -297,7 +297,10 @@ impl IrMaps {\n \n     pub fn add_variable(&mut self, vk: VarKind) -> Variable {\n         let v = Variable(self.num_vars.get());\n-        self.var_kinds.push(vk);\n+        {\n+            let mut var_kinds = self.var_kinds.borrow_mut();\n+            var_kinds.get().push(vk);\n+        }\n         self.num_vars.set(self.num_vars.get() + 1);\n \n         match vk {\n@@ -325,7 +328,8 @@ impl IrMaps {\n     }\n \n     pub fn variable_name(&mut self, var: Variable) -> @str {\n-        match self.var_kinds[*var] {\n+        let var_kinds = self.var_kinds.borrow();\n+        match var_kinds.get()[*var] {\n             Local(LocalInfo { ident: nm, .. }) | Arg(_, nm) => {\n                 self.tcx.sess.str_of(nm)\n             },"}]}