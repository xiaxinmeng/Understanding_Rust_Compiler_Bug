{"sha": "39ffd9ae4aec7d908dabc9a7b1f384956e197978", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM5ZmZkOWFlNGFlYzdkOTA4ZGFiYzlhN2IxZjM4NDk1NmUxOTc5Nzg=", "commit": {"author": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2021-05-26T12:00:58Z"}, "committer": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2021-05-26T12:00:58Z"}, "message": "Allow switching the regalloc algorithm from the commandline", "tree": {"sha": "197005e7612b6fb8a6a1d3f7235267d8df85c32c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/197005e7612b6fb8a6a1d3f7235267d8df85c32c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/39ffd9ae4aec7d908dabc9a7b1f384956e197978", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/39ffd9ae4aec7d908dabc9a7b1f384956e197978", "html_url": "https://github.com/rust-lang/rust/commit/39ffd9ae4aec7d908dabc9a7b1f384956e197978", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/39ffd9ae4aec7d908dabc9a7b1f384956e197978/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f8c2a7ec00923ce12c14df5e246c665ea445fb6b", "url": "https://api.github.com/repos/rust-lang/rust/commits/f8c2a7ec00923ce12c14df5e246c665ea445fb6b", "html_url": "https://github.com/rust-lang/rust/commit/f8c2a7ec00923ce12c14df5e246c665ea445fb6b"}], "stats": {"total": 11, "additions": 11, "deletions": 0}, "files": [{"sha": "eef3c8c8d6e2b38170209854f34c5c441ad59b5b", "filename": "src/config.rs", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/39ffd9ae4aec7d908dabc9a7b1f384956e197978/src%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/39ffd9ae4aec7d908dabc9a7b1f384956e197978/src%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fconfig.rs?ref=39ffd9ae4aec7d908dabc9a7b1f384956e197978", "patch": "@@ -48,6 +48,12 @@ pub struct BackendConfig {\n     /// Can be set using `-Cllvm-args=display_cg_time=...`.\n     pub display_cg_time: bool,\n \n+    /// The register allocator to use.\n+    ///\n+    /// Defaults to the value of `CG_CLIF_REGALLOC` or `backtracking` otherwise. Can be set using\n+    /// `-Cllvm-args=regalloc=...`.\n+    pub regalloc: String,\n+\n     /// Enable the Cranelift ir verifier for all compilation passes. If not set it will only run\n     /// once before passing the clif ir to Cranelift for compilation.\n     ///\n@@ -74,6 +80,8 @@ impl Default for BackendConfig {\n                 args.split(' ').map(|arg| arg.to_string()).collect()\n             },\n             display_cg_time: bool_env_var(\"CG_CLIF_DISPLAY_CG_TIME\"),\n+            regalloc: std::env::var(\"CG_CLIF_REGALLOC\")\n+                .unwrap_or_else(|_| \"backtracking\".to_string()),\n             enable_verifier: cfg!(debug_assertions) || bool_env_var(\"CG_CLIF_ENABLE_VERIFIER\"),\n             disable_incr_cache: bool_env_var(\"CG_CLIF_DISABLE_INCR_CACHE\"),\n         }\n@@ -93,6 +101,7 @@ impl BackendConfig {\n                 match name {\n                     \"mode\" => config.codegen_mode = value.parse()?,\n                     \"display_cg_time\" => config.display_cg_time = parse_bool(name, value)?,\n+                    \"regalloc\" => config.regalloc = value.to_string(),\n                     \"enable_verifier\" => config.enable_verifier = parse_bool(name, value)?,\n                     \"disable_incr_cache\" => config.disable_incr_cache = parse_bool(name, value)?,\n                     _ => return Err(format!(\"Unknown option `{}`\", name)),"}, {"sha": "4ee887cd5afaef819a65ed333e6bbbed3e8e8b16", "filename": "src/lib.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/39ffd9ae4aec7d908dabc9a7b1f384956e197978/src%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/39ffd9ae4aec7d908dabc9a7b1f384956e197978/src%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flib.rs?ref=39ffd9ae4aec7d908dabc9a7b1f384956e197978", "patch": "@@ -256,6 +256,8 @@ fn build_isa(sess: &Session, backend_config: &BackendConfig) -> Box<dyn isa::Tar\n \n     flags_builder.set(\"enable_llvm_abi_extensions\", \"true\").unwrap();\n \n+    flags_builder.set(\"regalloc\", &backend_config.regalloc).unwrap();\n+\n     use rustc_session::config::OptLevel;\n     match sess.opts.optimize {\n         OptLevel::No => {"}]}