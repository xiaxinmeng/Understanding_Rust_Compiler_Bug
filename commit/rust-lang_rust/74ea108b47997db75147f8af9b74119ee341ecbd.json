{"sha": "74ea108b47997db75147f8af9b74119ee341ecbd", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc0ZWExMDhiNDc5OTdkYjc1MTQ3ZjhhZjliNzQxMTllZTM0MWVjYmQ=", "commit": {"author": {"name": "Andre Bogus", "email": "bogusandre@gmail.com", "date": "2020-01-08T20:12:21Z"}, "committer": {"name": "Andre Bogus", "email": "bogusandre@gmail.com", "date": "2020-01-08T22:00:33Z"}, "message": "Small improvements in lexical_region_resolve", "tree": {"sha": "314d8d640852694b135254dfc69c7d3983c27727", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/314d8d640852694b135254dfc69c7d3983c27727"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/74ea108b47997db75147f8af9b74119ee341ecbd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/74ea108b47997db75147f8af9b74119ee341ecbd", "html_url": "https://github.com/rust-lang/rust/commit/74ea108b47997db75147f8af9b74119ee341ecbd", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/74ea108b47997db75147f8af9b74119ee341ecbd/comments", "author": {"login": "llogiq", "id": 4200835, "node_id": "MDQ6VXNlcjQyMDA4MzU=", "avatar_url": "https://avatars.githubusercontent.com/u/4200835?v=4", "gravatar_id": "", "url": "https://api.github.com/users/llogiq", "html_url": "https://github.com/llogiq", "followers_url": "https://api.github.com/users/llogiq/followers", "following_url": "https://api.github.com/users/llogiq/following{/other_user}", "gists_url": "https://api.github.com/users/llogiq/gists{/gist_id}", "starred_url": "https://api.github.com/users/llogiq/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/llogiq/subscriptions", "organizations_url": "https://api.github.com/users/llogiq/orgs", "repos_url": "https://api.github.com/users/llogiq/repos", "events_url": "https://api.github.com/users/llogiq/events{/privacy}", "received_events_url": "https://api.github.com/users/llogiq/received_events", "type": "User", "site_admin": false}, "committer": {"login": "llogiq", "id": 4200835, "node_id": "MDQ6VXNlcjQyMDA4MzU=", "avatar_url": "https://avatars.githubusercontent.com/u/4200835?v=4", "gravatar_id": "", "url": "https://api.github.com/users/llogiq", "html_url": "https://github.com/llogiq", "followers_url": "https://api.github.com/users/llogiq/followers", "following_url": "https://api.github.com/users/llogiq/following{/other_user}", "gists_url": "https://api.github.com/users/llogiq/gists{/gist_id}", "starred_url": "https://api.github.com/users/llogiq/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/llogiq/subscriptions", "organizations_url": "https://api.github.com/users/llogiq/orgs", "repos_url": "https://api.github.com/users/llogiq/repos", "events_url": "https://api.github.com/users/llogiq/events{/privacy}", "received_events_url": "https://api.github.com/users/llogiq/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ed6468da160bd67a2ce0573427f09a98daff8c07", "url": "https://api.github.com/repos/rust-lang/rust/commits/ed6468da160bd67a2ce0573427f09a98daff8c07", "html_url": "https://github.com/rust-lang/rust/commit/ed6468da160bd67a2ce0573427f09a98daff8c07"}], "stats": {"total": 8, "additions": 2, "deletions": 6}, "files": [{"sha": "0bc49a290150554055f9c38bd47d6084f4014f72", "filename": "src/librustc/infer/lexical_region_resolve/mod.rs", "status": "modified", "additions": 2, "deletions": 6, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/74ea108b47997db75147f8af9b74119ee341ecbd/src%2Flibrustc%2Finfer%2Flexical_region_resolve%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/74ea108b47997db75147f8af9b74119ee341ecbd/src%2Flibrustc%2Finfer%2Flexical_region_resolve%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Finfer%2Flexical_region_resolve%2Fmod.rs?ref=74ea108b47997db75147f8af9b74119ee341ecbd", "patch": "@@ -204,9 +204,7 @@ impl<'cx, 'tcx> LexicalResolver<'cx, 'tcx> {\n         // want to stop at the first constraint that makes a change.\n         let mut any_changed = false;\n         for member_constraint in &self.data.member_constraints {\n-            if self.enforce_member_constraint(graph, member_constraint, var_values) {\n-                any_changed = true;\n-            }\n+            any_changed |= self.enforce_member_constraint(graph, member_constraint, var_values);\n         }\n         any_changed\n     }\n@@ -337,9 +335,7 @@ impl<'cx, 'tcx> LexicalResolver<'cx, 'tcx> {\n             for index in live_indices.iter() {\n                 let constraint = constraints[index];\n                 let (edge_changed, retain) = process_constraint(constraint);\n-                if edge_changed {\n-                    changed = true;\n-                }\n+                changed |= edge_changed;\n                 if !retain {\n                     let changed = killed_indices.insert(index);\n                     debug_assert!(changed);"}]}