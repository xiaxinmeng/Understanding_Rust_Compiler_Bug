{"sha": "6c2c8edac3f7aa2d2aa779d0683db7f3dd2e9887", "node_id": "C_kwDOAAsO6NoAKDZjMmM4ZWRhYzNmN2FhMmQyYWE3NzlkMDY4M2RiN2YzZGQyZTk4ODc", "commit": {"author": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2023-01-06T20:28:46Z"}, "committer": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2023-01-30T21:51:35Z"}, "message": "Tweak E0271 wording", "tree": {"sha": "f7f47609166d90b6f736844b09f8b4410b0c2089", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f7f47609166d90b6f736844b09f8b4410b0c2089"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6c2c8edac3f7aa2d2aa779d0683db7f3dd2e9887", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6c2c8edac3f7aa2d2aa779d0683db7f3dd2e9887", "html_url": "https://github.com/rust-lang/rust/commit/6c2c8edac3f7aa2d2aa779d0683db7f3dd2e9887", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6c2c8edac3f7aa2d2aa779d0683db7f3dd2e9887/comments", "author": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "committer": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5ae8e238169586d8af4bb61b980c2bd4bfb71b86", "url": "https://api.github.com/repos/rust-lang/rust/commits/5ae8e238169586d8af4bb61b980c2bd4bfb71b86", "html_url": "https://github.com/rust-lang/rust/commit/5ae8e238169586d8af4bb61b980c2bd4bfb71b86"}], "stats": {"total": 32, "additions": 18, "deletions": 14}, "files": [{"sha": "df6ce2777cfa4805e82adbd0d12e4f22f0e97c87", "filename": "compiler/rustc_trait_selection/src/traits/error_reporting/mod.rs", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/6c2c8edac3f7aa2d2aa779d0683db7f3dd2e9887/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Ferror_reporting%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6c2c8edac3f7aa2d2aa779d0683db7f3dd2e9887/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Ferror_reporting%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Ferror_reporting%2Fmod.rs?ref=6c2c8edac3f7aa2d2aa779d0683db7f3dd2e9887", "patch": "@@ -1866,10 +1866,14 @@ impl<'tcx> InferCtxtPrivExt<'tcx> for TypeErrCtxt<'_, 'tcx> {\n \n         with_forced_trimmed_paths! {\n             if Some(pred.projection_ty.def_id) == self.tcx.lang_items().fn_once_output() {\n+                let fn_kind = self_ty.prefix_string(self.tcx);\n+                let item = match self_ty.kind() {\n+                    ty::FnDef(def, _) => self.tcx.item_name(*def).to_string(),\n+                    _ => self_ty.to_string(),\n+                };\n                 Some(format!(\n-                    \"expected `{self_ty}` to be a {fn_kind} that returns `{expected_ty}`, but it \\\n+                    \"expected `{item}` to be a {fn_kind} that returns `{expected_ty}`, but it \\\n                      returns `{normalized_ty}`\",\n-                    fn_kind = self_ty.prefix_string(self.tcx)\n                 ))\n             } else if Some(trait_def_id) == self.tcx.lang_items().future_trait() {\n                 Some(format!("}, {"sha": "169cc7f9b21ea8265878c7cd06ab7ca3bbf65feb", "filename": "tests/ui/async-await/issue-98634.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/6c2c8edac3f7aa2d2aa779d0683db7f3dd2e9887/tests%2Fui%2Fasync-await%2Fissue-98634.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6c2c8edac3f7aa2d2aa779d0683db7f3dd2e9887/tests%2Fui%2Fasync-await%2Fissue-98634.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fasync-await%2Fissue-98634.rs?ref=6c2c8edac3f7aa2d2aa779d0683db7f3dd2e9887", "patch": "@@ -43,8 +43,8 @@ impl Runtime {\n fn main() {\n     Runtime.block_on(async {\n         StructAsync { callback }.await;\n-        //~^ ERROR expected `fn() -> impl Future<Output = ()> {callback}` to be a fn item that returns `Pin<Box<dyn Future<Output = ()>>>`, but it returns `impl Future<Output = ()>`\n-        //~| ERROR expected `fn() -> impl Future<Output = ()> {callback}` to be a fn item that returns `Pin<Box<dyn Future<Output = ()>>>`, but it returns `impl Future<Output = ()>`\n-        //~| ERROR expected `fn() -> impl Future<Output = ()> {callback}` to be a fn item that returns `Pin<Box<dyn Future<Output = ()>>>`, but it returns `impl Future<Output = ()>`\n+        //~^ ERROR expected `callback` to be a fn item that returns `Pin<Box<dyn Future<Output = ()>>>`, but it returns `impl Future<Output = ()>`\n+        //~| ERROR expected `callback` to be a fn item that returns `Pin<Box<dyn Future<Output = ()>>>`, but it returns `impl Future<Output = ()>`\n+        //~| ERROR expected `callback` to be a fn item that returns `Pin<Box<dyn Future<Output = ()>>>`, but it returns `impl Future<Output = ()>`\n     });\n }"}, {"sha": "08ea5bdc574fa8551ef2837986f14d9545b98f0d", "filename": "tests/ui/async-await/issue-98634.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/6c2c8edac3f7aa2d2aa779d0683db7f3dd2e9887/tests%2Fui%2Fasync-await%2Fissue-98634.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6c2c8edac3f7aa2d2aa779d0683db7f3dd2e9887/tests%2Fui%2Fasync-await%2Fissue-98634.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fasync-await%2Fissue-98634.stderr?ref=6c2c8edac3f7aa2d2aa779d0683db7f3dd2e9887", "patch": "@@ -1,4 +1,4 @@\n-error[E0271]: expected `fn() -> impl Future<Output = ()> {callback}` to be a fn item that returns `Pin<Box<dyn Future<Output = ()>>>`, but it returns `impl Future<Output = ()>`\n+error[E0271]: expected `callback` to be a fn item that returns `Pin<Box<dyn Future<Output = ()>>>`, but it returns `impl Future<Output = ()>`\n   --> $DIR/issue-98634.rs:45:23\n    |\n LL |         StructAsync { callback }.await;\n@@ -17,7 +17,7 @@ note: required by a bound in `StructAsync`\n LL | pub struct StructAsync<F: Fn() -> Pin<Box<dyn Future<Output = ()>>>> {\n    |                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ required by this bound in `StructAsync`\n \n-error[E0271]: expected `fn() -> impl Future<Output = ()> {callback}` to be a fn item that returns `Pin<Box<dyn Future<Output = ()>>>`, but it returns `impl Future<Output = ()>`\n+error[E0271]: expected `callback` to be a fn item that returns `Pin<Box<dyn Future<Output = ()>>>`, but it returns `impl Future<Output = ()>`\n   --> $DIR/issue-98634.rs:45:9\n    |\n LL |         StructAsync { callback }.await;\n@@ -36,7 +36,7 @@ note: required by a bound in `StructAsync`\n LL | pub struct StructAsync<F: Fn() -> Pin<Box<dyn Future<Output = ()>>>> {\n    |                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ required by this bound in `StructAsync`\n \n-error[E0271]: expected `fn() -> impl Future<Output = ()> {callback}` to be a fn item that returns `Pin<Box<dyn Future<Output = ()>>>`, but it returns `impl Future<Output = ()>`\n+error[E0271]: expected `callback` to be a fn item that returns `Pin<Box<dyn Future<Output = ()>>>`, but it returns `impl Future<Output = ()>`\n   --> $DIR/issue-98634.rs:45:33\n    |\n LL |         StructAsync { callback }.await;"}, {"sha": "991d1450aff994c2204799b0938fb464ab0eee0b", "filename": "tests/ui/intrinsics/const-eval-select-bad.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6c2c8edac3f7aa2d2aa779d0683db7f3dd2e9887/tests%2Fui%2Fintrinsics%2Fconst-eval-select-bad.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6c2c8edac3f7aa2d2aa779d0683db7f3dd2e9887/tests%2Fui%2Fintrinsics%2Fconst-eval-select-bad.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fintrinsics%2Fconst-eval-select-bad.rs?ref=6c2c8edac3f7aa2d2aa779d0683db7f3dd2e9887", "patch": "@@ -30,7 +30,7 @@ fn baz(n: bool) -> i32 {\n \n const fn return_ty_mismatch() {\n     const_eval_select((1,), foo, bar);\n-    //~^ ERROR expected `fn(i32) -> bool {bar}` to be a fn item that returns `i32`, but it returns `bool`\n+    //~^ ERROR expected `bar` to be a fn item that returns `i32`, but it returns `bool`\n }\n \n const fn args_ty_mismatch() {"}, {"sha": "d4507a27aeaa1286e7cd6ce2e810ee45984d962a", "filename": "tests/ui/intrinsics/const-eval-select-bad.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6c2c8edac3f7aa2d2aa779d0683db7f3dd2e9887/tests%2Fui%2Fintrinsics%2Fconst-eval-select-bad.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6c2c8edac3f7aa2d2aa779d0683db7f3dd2e9887/tests%2Fui%2Fintrinsics%2Fconst-eval-select-bad.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fintrinsics%2Fconst-eval-select-bad.stderr?ref=6c2c8edac3f7aa2d2aa779d0683db7f3dd2e9887", "patch": "@@ -60,7 +60,7 @@ LL |     const_eval_select((), 42, 0xDEADBEEF);\n note: required by a bound in `const_eval_select`\n   --> $SRC_DIR/core/src/intrinsics.rs:LL:COL\n \n-error[E0271]: expected `fn(i32) -> bool {bar}` to be a fn item that returns `i32`, but it returns `bool`\n+error[E0271]: expected `bar` to be a fn item that returns `i32`, but it returns `bool`\n   --> $DIR/const-eval-select-bad.rs:32:34\n    |\n LL |     const_eval_select((1,), foo, bar);"}, {"sha": "d07fc9822a02d9254f1bf5bd736472796220c7c1", "filename": "tests/ui/type-alias-impl-trait/issue-98604.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6c2c8edac3f7aa2d2aa779d0683db7f3dd2e9887/tests%2Fui%2Ftype-alias-impl-trait%2Fissue-98604.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6c2c8edac3f7aa2d2aa779d0683db7f3dd2e9887/tests%2Fui%2Ftype-alias-impl-trait%2Fissue-98604.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ftype-alias-impl-trait%2Fissue-98604.rs?ref=6c2c8edac3f7aa2d2aa779d0683db7f3dd2e9887", "patch": "@@ -7,5 +7,5 @@ async fn test() {}\n #[allow(unused_must_use)]\n fn main() {\n     Box::new(test) as AsyncFnPtr;\n-    //~^ ERROR expected `fn() -> impl Future<Output = ()> {test}` to be a fn item that returns `Pin<Box<dyn Future<Output = ()>>>`, but it returns `impl Future<Output = ()>\n+    //~^ ERROR expected `test` to be a fn item that returns `Pin<Box<dyn Future<Output = ()>>>`, but it returns `impl Future<Output = ()>\n }"}, {"sha": "c5a4b5217d7a0aaddfb240ceb422f3fbceb180d3", "filename": "tests/ui/type-alias-impl-trait/issue-98604.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6c2c8edac3f7aa2d2aa779d0683db7f3dd2e9887/tests%2Fui%2Ftype-alias-impl-trait%2Fissue-98604.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6c2c8edac3f7aa2d2aa779d0683db7f3dd2e9887/tests%2Fui%2Ftype-alias-impl-trait%2Fissue-98604.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ftype-alias-impl-trait%2Fissue-98604.stderr?ref=6c2c8edac3f7aa2d2aa779d0683db7f3dd2e9887", "patch": "@@ -1,4 +1,4 @@\n-error[E0271]: expected `fn() -> impl Future<Output = ()> {test}` to be a fn item that returns `Pin<Box<dyn Future<Output = ()>>>`, but it returns `impl Future<Output = ()>`\n+error[E0271]: expected `test` to be a fn item that returns `Pin<Box<dyn Future<Output = ()>>>`, but it returns `impl Future<Output = ()>`\n   --> $DIR/issue-98604.rs:9:5\n    |\n LL |     Box::new(test) as AsyncFnPtr;"}, {"sha": "5e026ea4096c30429a47ea531ca73e8ad19b3c49", "filename": "tests/ui/type-alias-impl-trait/issue-98608.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6c2c8edac3f7aa2d2aa779d0683db7f3dd2e9887/tests%2Fui%2Ftype-alias-impl-trait%2Fissue-98608.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6c2c8edac3f7aa2d2aa779d0683db7f3dd2e9887/tests%2Fui%2Ftype-alias-impl-trait%2Fissue-98608.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ftype-alias-impl-trait%2Fissue-98608.rs?ref=6c2c8edac3f7aa2d2aa779d0683db7f3dd2e9887", "patch": "@@ -4,7 +4,7 @@ fn hi() -> impl Sized {\n \n fn main() {\n     let b: Box<dyn Fn() -> Box<u8>> = Box::new(hi);\n-    //~^ ERROR expected `fn() -> impl Sized {hi}` to be a fn item that returns `Box<u8>`, but it returns `impl Sized`\n+    //~^ ERROR expected `hi` to be a fn item that returns `Box<u8>`, but it returns `impl Sized`\n     let boxed = b();\n     let null = *boxed;\n     println!(\"{null:?}\");"}, {"sha": "506d40cb7768f7426de7198330bd6e5e589800d9", "filename": "tests/ui/type-alias-impl-trait/issue-98608.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6c2c8edac3f7aa2d2aa779d0683db7f3dd2e9887/tests%2Fui%2Ftype-alias-impl-trait%2Fissue-98608.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6c2c8edac3f7aa2d2aa779d0683db7f3dd2e9887/tests%2Fui%2Ftype-alias-impl-trait%2Fissue-98608.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ftype-alias-impl-trait%2Fissue-98608.stderr?ref=6c2c8edac3f7aa2d2aa779d0683db7f3dd2e9887", "patch": "@@ -1,4 +1,4 @@\n-error[E0271]: expected `fn() -> impl Sized {hi}` to be a fn item that returns `Box<u8>`, but it returns `impl Sized`\n+error[E0271]: expected `hi` to be a fn item that returns `Box<u8>`, but it returns `impl Sized`\n   --> $DIR/issue-98608.rs:6:39\n    |\n LL | fn hi() -> impl Sized {"}]}