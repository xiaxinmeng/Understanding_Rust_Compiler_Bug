{"sha": "27c4c17684233ef98aafc53c59f6d849f3ca918f", "node_id": "C_kwDOAAsO6NoAKDI3YzRjMTc2ODQyMzNlZjk4YWFmYzUzYzU5ZjZkODQ5ZjNjYTkxOGY", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2022-11-19T14:35:23Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-11-19T14:35:23Z"}, "message": "Rollup merge of #104593 - compiler-errors:rpitit-object-safety-spans, r=fee1-dead\n\nImprove spans for RPITIT object-safety errors\n\nNo reason why we can't point at the `impl Trait` that causes the object-safety violation.\n\nAlso [drive-by: Add is_async fn to hir::IsAsync](https://github.com/rust-lang/rust/pull/104593/commits/c4165f3a965e258531928180195637455299c6f3), which touches clippy too.", "tree": {"sha": "6bd8c369c4dff585892d3edc7da353b9534d8260", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6bd8c369c4dff585892d3edc7da353b9534d8260"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/27c4c17684233ef98aafc53c59f6d849f3ca918f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/27c4c17684233ef98aafc53c59f6d849f3ca918f", "html_url": "https://github.com/rust-lang/rust/commit/27c4c17684233ef98aafc53c59f6d849f3ca918f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/27c4c17684233ef98aafc53c59f6d849f3ca918f/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f6d4ef94479db4fd35566e312a5718498fa8f1b8", "url": "https://api.github.com/repos/rust-lang/rust/commits/f6d4ef94479db4fd35566e312a5718498fa8f1b8", "html_url": "https://github.com/rust-lang/rust/commit/f6d4ef94479db4fd35566e312a5718498fa8f1b8"}, {"sha": "3a2eaa73f414105cbd8897381e4a3db672d98845", "url": "https://api.github.com/repos/rust-lang/rust/commits/3a2eaa73f414105cbd8897381e4a3db672d98845", "html_url": "https://github.com/rust-lang/rust/commit/3a2eaa73f414105cbd8897381e4a3db672d98845"}], "stats": {"total": 18, "additions": 9, "deletions": 9}, "files": [{"sha": "5c6a342b3d074221eaaa9296b06e4a89c9e8e1ae", "filename": "clippy_lints/src/manual_async_fn.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/27c4c17684233ef98aafc53c59f6d849f3ca918f/clippy_lints%2Fsrc%2Fmanual_async_fn.rs", "raw_url": "https://github.com/rust-lang/rust/raw/27c4c17684233ef98aafc53c59f6d849f3ca918f/clippy_lints%2Fsrc%2Fmanual_async_fn.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmanual_async_fn.rs?ref=27c4c17684233ef98aafc53c59f6d849f3ca918f", "patch": "@@ -6,7 +6,7 @@ use rustc_errors::Applicability;\n use rustc_hir::intravisit::FnKind;\n use rustc_hir::{\n     AsyncGeneratorKind, Block, Body, Closure, Expr, ExprKind, FnDecl, FnRetTy, GeneratorKind, GenericArg, GenericBound,\n-    HirId, IsAsync, ItemKind, LifetimeName, Term, TraitRef, Ty, TyKind, TypeBindingKind,\n+    HirId, ItemKind, LifetimeName, Term, TraitRef, Ty, TyKind, TypeBindingKind,\n };\n use rustc_lint::{LateContext, LateLintPass};\n use rustc_session::{declare_lint_pass, declare_tool_lint};\n@@ -49,7 +49,7 @@ impl<'tcx> LateLintPass<'tcx> for ManualAsyncFn {\n     ) {\n         if_chain! {\n             if let Some(header) = kind.header();\n-            if header.asyncness == IsAsync::NotAsync;\n+            if !header.asyncness.is_async();\n             // Check that this function returns `impl Future`\n             if let FnRetTy::Return(ret_ty) = decl.output;\n             if let Some((trait_ref, output_lifetimes)) = future_trait_ref(cx, ret_ty);"}, {"sha": "3538bef6e06185a13eb5a17ea1e5a9fb99816a8d", "filename": "clippy_lints/src/unused_async.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/27c4c17684233ef98aafc53c59f6d849f3ca918f/clippy_lints%2Fsrc%2Funused_async.rs", "raw_url": "https://github.com/rust-lang/rust/raw/27c4c17684233ef98aafc53c59f6d849f3ca918f/clippy_lints%2Fsrc%2Funused_async.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Funused_async.rs?ref=27c4c17684233ef98aafc53c59f6d849f3ca918f", "patch": "@@ -1,6 +1,6 @@\n use clippy_utils::diagnostics::span_lint_and_help;\n use rustc_hir::intravisit::{walk_expr, walk_fn, FnKind, Visitor};\n-use rustc_hir::{Body, Expr, ExprKind, FnDecl, HirId, IsAsync, YieldSource};\n+use rustc_hir::{Body, Expr, ExprKind, FnDecl, HirId, YieldSource};\n use rustc_lint::{LateContext, LateLintPass};\n use rustc_middle::hir::nested_filter;\n use rustc_session::{declare_lint_pass, declare_tool_lint};\n@@ -68,7 +68,7 @@ impl<'tcx> LateLintPass<'tcx> for UnusedAsync {\n         span: Span,\n         hir_id: HirId,\n     ) {\n-        if !span.from_expansion() && fn_kind.asyncness() == IsAsync::Async {\n+        if !span.from_expansion() && fn_kind.asyncness().is_async() {\n             let mut visitor = AsyncFnVisitor { cx, found_await: false };\n             walk_fn(&mut visitor, fn_kind, fn_decl, body.id(), hir_id);\n             if !visitor.found_await {"}, {"sha": "bb91317d67f5add0846404f949af346aad2fe29c", "filename": "clippy_utils/src/lib.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/27c4c17684233ef98aafc53c59f6d849f3ca918f/clippy_utils%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/27c4c17684233ef98aafc53c59f6d849f3ca918f/clippy_utils%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_utils%2Fsrc%2Flib.rs?ref=27c4c17684233ef98aafc53c59f6d849f3ca918f", "patch": "@@ -87,10 +87,10 @@ use rustc_hir::hir_id::{HirIdMap, HirIdSet};\n use rustc_hir::intravisit::{walk_expr, FnKind, Visitor};\n use rustc_hir::LangItem::{OptionNone, ResultErr, ResultOk};\n use rustc_hir::{\n-    def, Arm, ArrayLen, BindingAnnotation, Block, BlockCheckMode, Body, Closure, Constness, Destination, Expr,\n-    ExprKind, FnDecl, HirId, Impl, ImplItem, ImplItemKind, IsAsync, Item, ItemKind, LangItem, Local, MatchSource,\n-    Mutability, Node, Param, Pat, PatKind, Path, PathSegment, PrimTy, QPath, Stmt, StmtKind, TraitItem, TraitItemKind,\n-    TraitRef, TyKind, UnOp,\n+    def, Arm, ArrayLen, BindingAnnotation, Block, BlockCheckMode, Body, Closure, Constness,\n+    Destination, Expr, ExprKind, FnDecl, HirId, Impl, ImplItem, ImplItemKind, Item, ItemKind,\n+    LangItem, Local, MatchSource, Mutability, Node, Param, Pat, PatKind, Path, PathSegment, PrimTy,\n+    QPath, Stmt, StmtKind, TraitItem, TraitItemKind, TraitRef, TyKind, UnOp,\n };\n use rustc_lexer::{tokenize, TokenKind};\n use rustc_lint::{LateContext, Level, Lint, LintContext};\n@@ -1861,7 +1861,7 @@ pub fn if_sequence<'tcx>(mut expr: &'tcx Expr<'tcx>) -> (Vec<&'tcx Expr<'tcx>>,\n \n /// Checks if the given function kind is an async function.\n pub fn is_async_fn(kind: FnKind<'_>) -> bool {\n-    matches!(kind, FnKind::ItemFn(_, _, header) if header.asyncness == IsAsync::Async)\n+    matches!(kind, FnKind::ItemFn(_, _, header) if header.asyncness.is_async())\n }\n \n /// Peels away all the compiler generated code surrounding the body of an async function,"}]}