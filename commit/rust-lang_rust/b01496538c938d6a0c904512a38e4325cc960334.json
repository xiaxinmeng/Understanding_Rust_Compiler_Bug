{"sha": "b01496538c938d6a0c904512a38e4325cc960334", "node_id": "MDY6Q29tbWl0NzI0NzEyOmIwMTQ5NjUzOGM5MzhkNmEwYzkwNDUxMmEzOGU0MzI1Y2M5NjAzMzQ=", "commit": {"author": {"name": "Ryan Cumming", "email": "etaoins@gmail.com", "date": "2019-06-30T07:59:26Z"}, "committer": {"name": "Ryan Cumming", "email": "etaoins@gmail.com", "date": "2019-06-30T08:36:54Z"}, "message": "Support attributes on array members\n\nArray members are allow to have attributes such as `#[cfg]`.\n\nThis is a bit tricky as we don't know if the first expression is an\ninitializer or a member until we encounter a `;`. This reuses a trick\nfrom `stmt` where we remember if we saw an attribute and then raise an\nerror if the first expression ends up being an initializer.\n\nThis isn't perfect as the error isn't correctly located on the attribute\nor initializer; it ends up immediately after the `;`.", "tree": {"sha": "a6588dc1af1094aadac540bfe90acced3fb08fea", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a6588dc1af1094aadac540bfe90acced3fb08fea"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b01496538c938d6a0c904512a38e4325cc960334", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b01496538c938d6a0c904512a38e4325cc960334", "html_url": "https://github.com/rust-lang/rust/commit/b01496538c938d6a0c904512a38e4325cc960334", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b01496538c938d6a0c904512a38e4325cc960334/comments", "author": {"login": "etaoins", "id": 687534, "node_id": "MDQ6VXNlcjY4NzUzNA==", "avatar_url": "https://avatars.githubusercontent.com/u/687534?v=4", "gravatar_id": "", "url": "https://api.github.com/users/etaoins", "html_url": "https://github.com/etaoins", "followers_url": "https://api.github.com/users/etaoins/followers", "following_url": "https://api.github.com/users/etaoins/following{/other_user}", "gists_url": "https://api.github.com/users/etaoins/gists{/gist_id}", "starred_url": "https://api.github.com/users/etaoins/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/etaoins/subscriptions", "organizations_url": "https://api.github.com/users/etaoins/orgs", "repos_url": "https://api.github.com/users/etaoins/repos", "events_url": "https://api.github.com/users/etaoins/events{/privacy}", "received_events_url": "https://api.github.com/users/etaoins/received_events", "type": "User", "site_admin": false}, "committer": {"login": "etaoins", "id": 687534, "node_id": "MDQ6VXNlcjY4NzUzNA==", "avatar_url": "https://avatars.githubusercontent.com/u/687534?v=4", "gravatar_id": "", "url": "https://api.github.com/users/etaoins", "html_url": "https://github.com/etaoins", "followers_url": "https://api.github.com/users/etaoins/followers", "following_url": "https://api.github.com/users/etaoins/following{/other_user}", "gists_url": "https://api.github.com/users/etaoins/gists{/gist_id}", "starred_url": "https://api.github.com/users/etaoins/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/etaoins/subscriptions", "organizations_url": "https://api.github.com/users/etaoins/orgs", "repos_url": "https://api.github.com/users/etaoins/repos", "events_url": "https://api.github.com/users/etaoins/events{/privacy}", "received_events_url": "https://api.github.com/users/etaoins/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "27df89f47d5f0a6e8e62d517d98dda854efabc34", "url": "https://api.github.com/repos/rust-lang/rust/commits/27df89f47d5f0a6e8e62d517d98dda854efabc34", "html_url": "https://github.com/rust-lang/rust/commit/27df89f47d5f0a6e8e62d517d98dda854efabc34"}], "stats": {"total": 205, "additions": 205, "deletions": 0}, "files": [{"sha": "5e51d667efa8aefef3d3e231ed2e0e857d1a86b5", "filename": "crates/ra_parser/src/grammar/expressions/atom.rs", "status": "modified", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/b01496538c938d6a0c904512a38e4325cc960334/crates%2Fra_parser%2Fsrc%2Fgrammar%2Fexpressions%2Fatom.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b01496538c938d6a0c904512a38e4325cc960334/crates%2Fra_parser%2Fsrc%2Fgrammar%2Fexpressions%2Fatom.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_parser%2Fsrc%2Fgrammar%2Fexpressions%2Fatom.rs?ref=b01496538c938d6a0c904512a38e4325cc960334", "patch": "@@ -170,8 +170,28 @@ fn array_expr(p: &mut Parser) -> CompletedMarker {\n     if p.eat(T![']']) {\n         return m.complete(p, ARRAY_EXPR);\n     }\n+\n+    // test first_array_member_attributes\n+    // pub const A: &[i64] = &[\n+    //    #[cfg(test)]\n+    //    1,\n+    //    2,\n+    // ];\n+    let first_member_has_attrs = p.at(T![#]);\n+    attributes::outer_attributes(p);\n+\n     expr(p);\n     if p.eat(T![;]) {\n+        if first_member_has_attrs {\n+            // test_err array_length_attributes\n+            // pub const A: &[i64] = &[\n+            //   #[cfg(test)]\n+            //   1;\n+            //   2,\n+            // ];\n+            p.error(\"removing an expression is not supported in this position\");\n+        }\n+\n         expr(p);\n         p.expect(T![']']);\n         return m.complete(p, ARRAY_EXPR);\n@@ -181,6 +201,14 @@ fn array_expr(p: &mut Parser) -> CompletedMarker {\n         if p.at(T![']']) {\n             break;\n         }\n+\n+        // test subsequent_array_member_attributes\n+        // pub const A: &[i64] = &[\n+        //    1,\n+        //    #[cfg(test)]\n+        //    2,\n+        // ];\n+        attributes::outer_attributes(p);\n         if !p.at_ts(EXPR_FIRST) {\n             p.error(\"expected expression\");\n             break;"}, {"sha": "ba630981dad66ad1ab653f22306142ef8ed34333", "filename": "crates/ra_syntax/tests/data/parser/inline/err/0015_array_length_attributes.rs", "status": "added", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/b01496538c938d6a0c904512a38e4325cc960334/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Finline%2Ferr%2F0015_array_length_attributes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b01496538c938d6a0c904512a38e4325cc960334/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Finline%2Ferr%2F0015_array_length_attributes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Finline%2Ferr%2F0015_array_length_attributes.rs?ref=b01496538c938d6a0c904512a38e4325cc960334", "patch": "@@ -0,0 +1,5 @@\n+pub const A: &[i64] = &[\n+  #[cfg(test)]\n+  1;\n+  2,\n+];"}, {"sha": "5f0e3f22cc588f1d32f2e7cda793f886e7bdd1da", "filename": "crates/ra_syntax/tests/data/parser/inline/err/0015_array_length_attributes.txt", "status": "added", "additions": 60, "deletions": 0, "changes": 60, "blob_url": "https://github.com/rust-lang/rust/blob/b01496538c938d6a0c904512a38e4325cc960334/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Finline%2Ferr%2F0015_array_length_attributes.txt", "raw_url": "https://github.com/rust-lang/rust/raw/b01496538c938d6a0c904512a38e4325cc960334/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Finline%2Ferr%2F0015_array_length_attributes.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Finline%2Ferr%2F0015_array_length_attributes.txt?ref=b01496538c938d6a0c904512a38e4325cc960334", "patch": "@@ -0,0 +1,60 @@\n+SOURCE_FILE@[0; 53)\n+  CONST_DEF@[0; 48)\n+    VISIBILITY@[0; 3)\n+      PUB_KW@[0; 3) \"pub\"\n+    WHITESPACE@[3; 4) \" \"\n+    CONST_KW@[4; 9) \"const\"\n+    WHITESPACE@[9; 10) \" \"\n+    NAME@[10; 11)\n+      IDENT@[10; 11) \"A\"\n+    COLON@[11; 12) \":\"\n+    WHITESPACE@[12; 13) \" \"\n+    REFERENCE_TYPE@[13; 19)\n+      AMP@[13; 14) \"&\"\n+      SLICE_TYPE@[14; 19)\n+        L_BRACK@[14; 15) \"[\"\n+        PATH_TYPE@[15; 18)\n+          PATH@[15; 18)\n+            PATH_SEGMENT@[15; 18)\n+              NAME_REF@[15; 18)\n+                IDENT@[15; 18) \"i64\"\n+        R_BRACK@[18; 19) \"]\"\n+    WHITESPACE@[19; 20) \" \"\n+    EQ@[20; 21) \"=\"\n+    WHITESPACE@[21; 22) \" \"\n+    REF_EXPR@[22; 48)\n+      AMP@[22; 23) \"&\"\n+      ARRAY_EXPR@[23; 48)\n+        L_BRACK@[23; 24) \"[\"\n+        WHITESPACE@[24; 27) \"\\n  \"\n+        ATTR@[27; 39)\n+          POUND@[27; 28) \"#\"\n+          TOKEN_TREE@[28; 39)\n+            L_BRACK@[28; 29) \"[\"\n+            IDENT@[29; 32) \"cfg\"\n+            TOKEN_TREE@[32; 38)\n+              L_PAREN@[32; 33) \"(\"\n+              IDENT@[33; 37) \"test\"\n+              R_PAREN@[37; 38) \")\"\n+            R_BRACK@[38; 39) \"]\"\n+        WHITESPACE@[39; 42) \"\\n  \"\n+        LITERAL@[42; 43)\n+          INT_NUMBER@[42; 43) \"1\"\n+        SEMI@[43; 44) \";\"\n+        WHITESPACE@[44; 47) \"\\n  \"\n+        LITERAL@[47; 48)\n+          INT_NUMBER@[47; 48) \"2\"\n+  ERROR@[48; 49)\n+    COMMA@[48; 49) \",\"\n+  WHITESPACE@[49; 50) \"\\n\"\n+  ERROR@[50; 51)\n+    R_BRACK@[50; 51) \"]\"\n+  ERROR@[51; 52)\n+    SEMI@[51; 52) \";\"\n+  WHITESPACE@[52; 53) \"\\n\"\n+error 44: removing an expression is not supported in this position\n+error 48: expected R_BRACK\n+error 48: expected SEMI\n+error 48: expected an item\n+error 50: expected an item\n+error 51: expected an item"}, {"sha": "f59e1377118f41973fcccc9e9a1ff88e1746fc87", "filename": "crates/ra_syntax/tests/data/parser/inline/ok/0135_first_array_member_attributes.rs", "status": "added", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/b01496538c938d6a0c904512a38e4325cc960334/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Finline%2Fok%2F0135_first_array_member_attributes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b01496538c938d6a0c904512a38e4325cc960334/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Finline%2Fok%2F0135_first_array_member_attributes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Finline%2Fok%2F0135_first_array_member_attributes.rs?ref=b01496538c938d6a0c904512a38e4325cc960334", "patch": "@@ -0,0 +1,5 @@\n+pub const A: &[i64] = &[\n+   #[cfg(test)]\n+   1,\n+   2,\n+];"}, {"sha": "eac4f6f308581af1790a9f898088208b54e482af", "filename": "crates/ra_syntax/tests/data/parser/inline/ok/0135_first_array_member_attributes.txt", "status": "added", "additions": 51, "deletions": 0, "changes": 51, "blob_url": "https://github.com/rust-lang/rust/blob/b01496538c938d6a0c904512a38e4325cc960334/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Finline%2Fok%2F0135_first_array_member_attributes.txt", "raw_url": "https://github.com/rust-lang/rust/raw/b01496538c938d6a0c904512a38e4325cc960334/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Finline%2Fok%2F0135_first_array_member_attributes.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Finline%2Fok%2F0135_first_array_member_attributes.txt?ref=b01496538c938d6a0c904512a38e4325cc960334", "patch": "@@ -0,0 +1,51 @@\n+SOURCE_FILE@[0; 56)\n+  CONST_DEF@[0; 55)\n+    VISIBILITY@[0; 3)\n+      PUB_KW@[0; 3) \"pub\"\n+    WHITESPACE@[3; 4) \" \"\n+    CONST_KW@[4; 9) \"const\"\n+    WHITESPACE@[9; 10) \" \"\n+    NAME@[10; 11)\n+      IDENT@[10; 11) \"A\"\n+    COLON@[11; 12) \":\"\n+    WHITESPACE@[12; 13) \" \"\n+    REFERENCE_TYPE@[13; 19)\n+      AMP@[13; 14) \"&\"\n+      SLICE_TYPE@[14; 19)\n+        L_BRACK@[14; 15) \"[\"\n+        PATH_TYPE@[15; 18)\n+          PATH@[15; 18)\n+            PATH_SEGMENT@[15; 18)\n+              NAME_REF@[15; 18)\n+                IDENT@[15; 18) \"i64\"\n+        R_BRACK@[18; 19) \"]\"\n+    WHITESPACE@[19; 20) \" \"\n+    EQ@[20; 21) \"=\"\n+    WHITESPACE@[21; 22) \" \"\n+    REF_EXPR@[22; 54)\n+      AMP@[22; 23) \"&\"\n+      ARRAY_EXPR@[23; 54)\n+        L_BRACK@[23; 24) \"[\"\n+        WHITESPACE@[24; 28) \"\\n   \"\n+        ATTR@[28; 40)\n+          POUND@[28; 29) \"#\"\n+          TOKEN_TREE@[29; 40)\n+            L_BRACK@[29; 30) \"[\"\n+            IDENT@[30; 33) \"cfg\"\n+            TOKEN_TREE@[33; 39)\n+              L_PAREN@[33; 34) \"(\"\n+              IDENT@[34; 38) \"test\"\n+              R_PAREN@[38; 39) \")\"\n+            R_BRACK@[39; 40) \"]\"\n+        WHITESPACE@[40; 44) \"\\n   \"\n+        LITERAL@[44; 45)\n+          INT_NUMBER@[44; 45) \"1\"\n+        COMMA@[45; 46) \",\"\n+        WHITESPACE@[46; 50) \"\\n   \"\n+        LITERAL@[50; 51)\n+          INT_NUMBER@[50; 51) \"2\"\n+        COMMA@[51; 52) \",\"\n+        WHITESPACE@[52; 53) \"\\n\"\n+        R_BRACK@[53; 54) \"]\"\n+    SEMI@[54; 55) \";\"\n+  WHITESPACE@[55; 56) \"\\n\""}, {"sha": "1324acb3f69cf8097d33d148b87678ee85bf7eef", "filename": "crates/ra_syntax/tests/data/parser/inline/ok/0136_subsequent_array_member_attributes.rs", "status": "added", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/b01496538c938d6a0c904512a38e4325cc960334/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Finline%2Fok%2F0136_subsequent_array_member_attributes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b01496538c938d6a0c904512a38e4325cc960334/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Finline%2Fok%2F0136_subsequent_array_member_attributes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Finline%2Fok%2F0136_subsequent_array_member_attributes.rs?ref=b01496538c938d6a0c904512a38e4325cc960334", "patch": "@@ -0,0 +1,5 @@\n+pub const A: &[i64] = &[\n+   1,\n+   #[cfg(test)]\n+   2,\n+];"}, {"sha": "6fa1b42d91700f6d6e5e90fd8f586ba62253870c", "filename": "crates/ra_syntax/tests/data/parser/inline/ok/0136_subsequent_array_member_attributes.txt", "status": "added", "additions": 51, "deletions": 0, "changes": 51, "blob_url": "https://github.com/rust-lang/rust/blob/b01496538c938d6a0c904512a38e4325cc960334/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Finline%2Fok%2F0136_subsequent_array_member_attributes.txt", "raw_url": "https://github.com/rust-lang/rust/raw/b01496538c938d6a0c904512a38e4325cc960334/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Finline%2Fok%2F0136_subsequent_array_member_attributes.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Finline%2Fok%2F0136_subsequent_array_member_attributes.txt?ref=b01496538c938d6a0c904512a38e4325cc960334", "patch": "@@ -0,0 +1,51 @@\n+SOURCE_FILE@[0; 56)\n+  CONST_DEF@[0; 55)\n+    VISIBILITY@[0; 3)\n+      PUB_KW@[0; 3) \"pub\"\n+    WHITESPACE@[3; 4) \" \"\n+    CONST_KW@[4; 9) \"const\"\n+    WHITESPACE@[9; 10) \" \"\n+    NAME@[10; 11)\n+      IDENT@[10; 11) \"A\"\n+    COLON@[11; 12) \":\"\n+    WHITESPACE@[12; 13) \" \"\n+    REFERENCE_TYPE@[13; 19)\n+      AMP@[13; 14) \"&\"\n+      SLICE_TYPE@[14; 19)\n+        L_BRACK@[14; 15) \"[\"\n+        PATH_TYPE@[15; 18)\n+          PATH@[15; 18)\n+            PATH_SEGMENT@[15; 18)\n+              NAME_REF@[15; 18)\n+                IDENT@[15; 18) \"i64\"\n+        R_BRACK@[18; 19) \"]\"\n+    WHITESPACE@[19; 20) \" \"\n+    EQ@[20; 21) \"=\"\n+    WHITESPACE@[21; 22) \" \"\n+    REF_EXPR@[22; 54)\n+      AMP@[22; 23) \"&\"\n+      ARRAY_EXPR@[23; 54)\n+        L_BRACK@[23; 24) \"[\"\n+        WHITESPACE@[24; 28) \"\\n   \"\n+        LITERAL@[28; 29)\n+          INT_NUMBER@[28; 29) \"1\"\n+        COMMA@[29; 30) \",\"\n+        WHITESPACE@[30; 34) \"\\n   \"\n+        ATTR@[34; 46)\n+          POUND@[34; 35) \"#\"\n+          TOKEN_TREE@[35; 46)\n+            L_BRACK@[35; 36) \"[\"\n+            IDENT@[36; 39) \"cfg\"\n+            TOKEN_TREE@[39; 45)\n+              L_PAREN@[39; 40) \"(\"\n+              IDENT@[40; 44) \"test\"\n+              R_PAREN@[44; 45) \")\"\n+            R_BRACK@[45; 46) \"]\"\n+        WHITESPACE@[46; 50) \"\\n   \"\n+        LITERAL@[50; 51)\n+          INT_NUMBER@[50; 51) \"2\"\n+        COMMA@[51; 52) \",\"\n+        WHITESPACE@[52; 53) \"\\n\"\n+        R_BRACK@[53; 54) \"]\"\n+    SEMI@[54; 55) \";\"\n+  WHITESPACE@[55; 56) \"\\n\""}]}