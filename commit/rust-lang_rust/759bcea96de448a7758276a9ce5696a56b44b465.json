{"sha": "759bcea96de448a7758276a9ce5696a56b44b465", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc1OWJjZWE5NmRlNDQ4YTc3NTgyNzZhOWNlNTY5NmE1NmI0NGI0NjU=", "commit": {"author": {"name": "Edwin Cheng", "email": "edwin0cheng@gmail.com", "date": "2020-03-11T15:08:12Z"}, "committer": {"name": "Edwin Cheng", "email": "edwin0cheng@gmail.com", "date": "2020-03-11T15:08:12Z"}, "message": "Implement dummy assert macro", "tree": {"sha": "05d41725af5744110390becb6b813a907e685b51", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/05d41725af5744110390becb6b813a907e685b51"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/759bcea96de448a7758276a9ce5696a56b44b465", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/759bcea96de448a7758276a9ce5696a56b44b465", "html_url": "https://github.com/rust-lang/rust/commit/759bcea96de448a7758276a9ce5696a56b44b465", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/759bcea96de448a7758276a9ce5696a56b44b465/comments", "author": {"login": "edwin0cheng", "id": 11014119, "node_id": "MDQ6VXNlcjExMDE0MTE5", "avatar_url": "https://avatars.githubusercontent.com/u/11014119?v=4", "gravatar_id": "", "url": "https://api.github.com/users/edwin0cheng", "html_url": "https://github.com/edwin0cheng", "followers_url": "https://api.github.com/users/edwin0cheng/followers", "following_url": "https://api.github.com/users/edwin0cheng/following{/other_user}", "gists_url": "https://api.github.com/users/edwin0cheng/gists{/gist_id}", "starred_url": "https://api.github.com/users/edwin0cheng/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/edwin0cheng/subscriptions", "organizations_url": "https://api.github.com/users/edwin0cheng/orgs", "repos_url": "https://api.github.com/users/edwin0cheng/repos", "events_url": "https://api.github.com/users/edwin0cheng/events{/privacy}", "received_events_url": "https://api.github.com/users/edwin0cheng/received_events", "type": "User", "site_admin": false}, "committer": {"login": "edwin0cheng", "id": 11014119, "node_id": "MDQ6VXNlcjExMDE0MTE5", "avatar_url": "https://avatars.githubusercontent.com/u/11014119?v=4", "gravatar_id": "", "url": "https://api.github.com/users/edwin0cheng", "html_url": "https://github.com/edwin0cheng", "followers_url": "https://api.github.com/users/edwin0cheng/followers", "following_url": "https://api.github.com/users/edwin0cheng/following{/other_user}", "gists_url": "https://api.github.com/users/edwin0cheng/gists{/gist_id}", "starred_url": "https://api.github.com/users/edwin0cheng/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/edwin0cheng/subscriptions", "organizations_url": "https://api.github.com/users/edwin0cheng/orgs", "repos_url": "https://api.github.com/users/edwin0cheng/repos", "events_url": "https://api.github.com/users/edwin0cheng/events{/privacy}", "received_events_url": "https://api.github.com/users/edwin0cheng/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bddf6b5266997dd7e017fcb963e54a86b68afbaa", "url": "https://api.github.com/repos/rust-lang/rust/commits/bddf6b5266997dd7e017fcb963e54a86b68afbaa", "html_url": "https://github.com/rust-lang/rust/commit/bddf6b5266997dd7e017fcb963e54a86b68afbaa"}], "stats": {"total": 66, "additions": 60, "deletions": 6}, "files": [{"sha": "01f78fc7759ce00b069d98fc814cc3e38599f44f", "filename": "crates/ra_hir_expand/src/builtin_macro.rs", "status": "modified", "additions": 56, "deletions": 0, "changes": 56, "blob_url": "https://github.com/rust-lang/rust/blob/759bcea96de448a7758276a9ce5696a56b44b465/crates%2Fra_hir_expand%2Fsrc%2Fbuiltin_macro.rs", "raw_url": "https://github.com/rust-lang/rust/raw/759bcea96de448a7758276a9ce5696a56b44b465/crates%2Fra_hir_expand%2Fsrc%2Fbuiltin_macro.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_expand%2Fsrc%2Fbuiltin_macro.rs?ref=759bcea96de448a7758276a9ce5696a56b44b465", "patch": "@@ -88,6 +88,7 @@ register_builtin! {\n     (compile_error, CompileError) => compile_error_expand,\n     (file, File) => file_expand,\n     (line, Line) => line_expand,\n+    (assert, Assert) => assert_expand,\n     (stringify, Stringify) => stringify_expand,\n     (format_args, FormatArgs) => format_args_expand,\n     // format_args_nl only differs in that it adds a newline in the end,\n@@ -151,6 +152,45 @@ fn column_expand(\n     Ok(expanded)\n }\n \n+fn assert_expand(\n+    _db: &dyn AstDatabase,\n+    _id: LazyMacroId,\n+    tt: &tt::Subtree,\n+) -> Result<tt::Subtree, mbe::ExpandError> {\n+    // A hacky implementation for goto def and hover\n+    // We expand `assert!(\"\", arg1, arg2)` to\n+    // ```\n+    // {(&(arg1), &(arg2));}\n+    // ```,\n+    // which is wrong but useful.\n+\n+    let mut args = Vec::new();\n+    let mut current = Vec::new();\n+    for tt in tt.token_trees.iter().cloned() {\n+        match tt {\n+            tt::TokenTree::Leaf(tt::Leaf::Punct(p)) if p.char == ',' => {\n+                args.push(current);\n+                current = Vec::new();\n+            }\n+            _ => {\n+                current.push(tt);\n+            }\n+        }\n+    }\n+    if !current.is_empty() {\n+        args.push(current);\n+    }\n+\n+    let arg_tts = args.into_iter().flat_map(|arg| {\n+        quote! { &(##arg), }\n+    }.token_trees).collect::<Vec<_>>();\n+\n+    let expanded = quote! {\n+        { { (##arg_tts); } }\n+    };\n+    Ok(expanded)\n+}\n+\n fn file_expand(\n     _db: &dyn AstDatabase,\n     _id: LazyMacroId,\n@@ -493,6 +533,22 @@ mod tests {\n         assert_eq!(expanded, \"\\\"\\\"\");\n     }\n \n+    #[test]\n+    fn test_assert_expand() {\n+        let expanded = expand_builtin_macro(\n+            r#\"\n+            #[rustc_builtin_macro]\n+            macro_rules! assert {\n+                ($fmt:expr) => ({ /* compiler built-in */ });\n+                ($fmt:expr, $($args:tt)*) => ({ /* compiler built-in */ })\n+            }\n+            assert!(true, \"{} {:?}\", arg1(a, b, c), arg2);\n+            \"#,\n+        );\n+\n+        assert_eq!(expanded, \"{{(&(true), &(\\\"{} {:?}\\\"), &(arg1(a,b,c)), &(arg2),);}}\");\n+    }\n+\n     #[test]\n     fn test_compile_error_expand() {\n         let expanded = expand_builtin_macro("}, {"sha": "25cc1e9fcebf155cf2004cf592edd4d8e2288af1", "filename": "crates/ra_hir_expand/src/name.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/759bcea96de448a7758276a9ce5696a56b44b465/crates%2Fra_hir_expand%2Fsrc%2Fname.rs", "raw_url": "https://github.com/rust-lang/rust/raw/759bcea96de448a7758276a9ce5696a56b44b465/crates%2Fra_hir_expand%2Fsrc%2Fname.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_expand%2Fsrc%2Fname.rs?ref=759bcea96de448a7758276a9ce5696a56b44b465", "patch": "@@ -172,6 +172,7 @@ pub mod known {\n         column,\n         compile_error,\n         line,\n+        assert,\n         stringify,\n         concat,\n         include,"}, {"sha": "3fd4233da8b62c15325d6e7e4d140ed1b4d204fa", "filename": "crates/ra_hir_expand/src/quote.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/759bcea96de448a7758276a9ce5696a56b44b465/crates%2Fra_hir_expand%2Fsrc%2Fquote.rs", "raw_url": "https://github.com/rust-lang/rust/raw/759bcea96de448a7758276a9ce5696a56b44b465/crates%2Fra_hir_expand%2Fsrc%2Fquote.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_expand%2Fsrc%2Fquote.rs?ref=759bcea96de448a7758276a9ce5696a56b44b465", "patch": "@@ -99,6 +99,7 @@ macro_rules! __quote {\n     ( & ) => {$crate::__quote!(@PUNCT '&')};\n     ( , ) => {$crate::__quote!(@PUNCT ',')};\n     ( : ) => {$crate::__quote!(@PUNCT ':')};\n+    ( ; ) => {$crate::__quote!(@PUNCT ';')};\n     ( :: ) => {$crate::__quote!(@PUNCT ':', ':')};\n     ( . ) => {$crate::__quote!(@PUNCT '.')};\n     ( < ) => {$crate::__quote!(@PUNCT '<')};"}, {"sha": "89640efb626ab9acd193575f7b989877050904ff", "filename": "crates/ra_ide/src/hover.rs", "status": "modified", "additions": 2, "deletions": 6, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/759bcea96de448a7758276a9ce5696a56b44b465/crates%2Fra_ide%2Fsrc%2Fhover.rs", "raw_url": "https://github.com/rust-lang/rust/raw/759bcea96de448a7758276a9ce5696a56b44b465/crates%2Fra_ide%2Fsrc%2Fhover.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fhover.rs?ref=759bcea96de448a7758276a9ce5696a56b44b465", "patch": "@@ -838,14 +838,10 @@ fn func(foo: i32) { if true { <|>foo; }; }\n             r#\"\n             //- /lib.rs\n             #[rustc_builtin_macro]\n-            macro_rules! assert {\n-                ($cond:expr) => {{ /* compiler built-in */ }};\n-                ($cond:expr,) => {{ /* compiler built-in */ }};\n-                ($cond:expr, $($arg:tt)+) => {{ /* compiler built-in */ }};\n-            }\n+            macro_rules! format {}\n \n             fn foo() {\n-                assert!(\"hel<|>lo\");\n+                format!(\"hel<|>lo {}\", 0);\n             }\n             \"#,\n         );"}]}