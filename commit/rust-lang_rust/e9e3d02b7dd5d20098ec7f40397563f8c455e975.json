{"sha": "e9e3d02b7dd5d20098ec7f40397563f8c455e975", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU5ZTNkMDJiN2RkNWQyMDA5OGVjN2Y0MDM5NzU2M2Y4YzQ1NWU5NzU=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2012-12-08T05:52:39Z"}, "committer": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2012-12-08T05:52:39Z"}, "message": "libcore: Fix Windows-only pattern in run.rs. rs=bustage", "tree": {"sha": "6a252daa4c0fc95329485f14f7ca01185201dc0e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6a252daa4c0fc95329485f14f7ca01185201dc0e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e9e3d02b7dd5d20098ec7f40397563f8c455e975", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e9e3d02b7dd5d20098ec7f40397563f8c455e975", "html_url": "https://github.com/rust-lang/rust/commit/e9e3d02b7dd5d20098ec7f40397563f8c455e975", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e9e3d02b7dd5d20098ec7f40397563f8c455e975/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "13c7b972480182913f08c3c4d99a38c879424432", "url": "https://api.github.com/repos/rust-lang/rust/commits/13c7b972480182913f08c3c4d99a38c879424432", "html_url": "https://github.com/rust-lang/rust/commit/13c7b972480182913f08c3c4d99a38c879424432"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "ad2349e55b005b6974da150b8bbd1bb2f95fef37", "filename": "src/libcore/run.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e9e3d02b7dd5d20098ec7f40397563f8c455e975/src%2Flibcore%2Frun.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e9e3d02b7dd5d20098ec7f40397563f8c455e975/src%2Flibcore%2Frun.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Frun.rs?ref=e9e3d02b7dd5d20098ec7f40397563f8c455e975", "patch": "@@ -131,9 +131,9 @@ fn with_envp<T>(env: &Option<~[(~str,~str)]>,\n     // \\0 to terminate.\n     unsafe {\n         match *env {\n-          Some(es) if !vec::is_empty(es) => {\n+          Some(ref es) if !vec::is_empty(*es) => {\n             let mut blk : ~[u8] = ~[];\n-            for vec::each(es) |e| {\n+            for vec::each(*es) |e| {\n                 let (k,v) = *e;\n                 let t = fmt!(\"%s=%s\", k, v);\n                 let mut v : ~[u8] = ::cast::reinterpret_cast(&t);"}]}