{"sha": "72dc0f5f82efcf891581fdc3ec15eb46f38cd718", "node_id": "MDY6Q29tbWl0NzI0NzEyOjcyZGMwZjVmODJlZmNmODkxNTgxZmRjM2VjMTVlYjQ2ZjM4Y2Q3MTg=", "commit": {"author": {"name": "Brian Koropoff", "email": "bkoropoff@gmail.com", "date": "2014-10-03T02:41:42Z"}, "committer": {"name": "Brian Koropoff", "email": "bkoropoff@gmail.com", "date": "2014-10-03T04:08:45Z"}, "message": "Return correct types for capture-by-ref unboxed closure upvars\n\nTreat upvars of capture-by-reference unboxed closures as references\nwith appropriate regions and mutability.", "tree": {"sha": "24ef849cdaf6de1e2409d7fa2ffc44ebab37944a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/24ef849cdaf6de1e2409d7fa2ffc44ebab37944a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/72dc0f5f82efcf891581fdc3ec15eb46f38cd718", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/72dc0f5f82efcf891581fdc3ec15eb46f38cd718", "html_url": "https://github.com/rust-lang/rust/commit/72dc0f5f82efcf891581fdc3ec15eb46f38cd718", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/72dc0f5f82efcf891581fdc3ec15eb46f38cd718/comments", "author": {"login": "bkoropoff", "id": 2101303, "node_id": "MDQ6VXNlcjIxMDEzMDM=", "avatar_url": "https://avatars.githubusercontent.com/u/2101303?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bkoropoff", "html_url": "https://github.com/bkoropoff", "followers_url": "https://api.github.com/users/bkoropoff/followers", "following_url": "https://api.github.com/users/bkoropoff/following{/other_user}", "gists_url": "https://api.github.com/users/bkoropoff/gists{/gist_id}", "starred_url": "https://api.github.com/users/bkoropoff/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bkoropoff/subscriptions", "organizations_url": "https://api.github.com/users/bkoropoff/orgs", "repos_url": "https://api.github.com/users/bkoropoff/repos", "events_url": "https://api.github.com/users/bkoropoff/events{/privacy}", "received_events_url": "https://api.github.com/users/bkoropoff/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bkoropoff", "id": 2101303, "node_id": "MDQ6VXNlcjIxMDEzMDM=", "avatar_url": "https://avatars.githubusercontent.com/u/2101303?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bkoropoff", "html_url": "https://github.com/bkoropoff", "followers_url": "https://api.github.com/users/bkoropoff/followers", "following_url": "https://api.github.com/users/bkoropoff/following{/other_user}", "gists_url": "https://api.github.com/users/bkoropoff/gists{/gist_id}", "starred_url": "https://api.github.com/users/bkoropoff/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bkoropoff/subscriptions", "organizations_url": "https://api.github.com/users/bkoropoff/orgs", "repos_url": "https://api.github.com/users/bkoropoff/repos", "events_url": "https://api.github.com/users/bkoropoff/events{/privacy}", "received_events_url": "https://api.github.com/users/bkoropoff/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "931f59f214f68bf2a5656d605cb200f22d47cdf8", "url": "https://api.github.com/repos/rust-lang/rust/commits/931f59f214f68bf2a5656d605cb200f22d47cdf8", "html_url": "https://github.com/rust-lang/rust/commit/931f59f214f68bf2a5656d605cb200f22d47cdf8"}], "stats": {"total": 14, "additions": 13, "deletions": 1}, "files": [{"sha": "e771c3d967a7c8289ad6fffd4489fec3b475ef9e", "filename": "src/librustc/middle/ty.rs", "status": "modified", "additions": 13, "deletions": 1, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/72dc0f5f82efcf891581fdc3ec15eb46f38cd718/src%2Flibrustc%2Fmiddle%2Fty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/72dc0f5f82efcf891581fdc3ec15eb46f38cd718/src%2Flibrustc%2Fmiddle%2Fty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fty.rs?ref=72dc0f5f82efcf891581fdc3ec15eb46f38cd718", "patch": "@@ -4668,15 +4668,27 @@ pub struct UnboxedClosureUpvar {\n pub fn unboxed_closure_upvars(tcx: &ctxt, closure_id: ast::DefId)\n                               -> Vec<UnboxedClosureUpvar> {\n     if closure_id.krate == ast::LOCAL_CRATE {\n+        let capture_mode = tcx.capture_modes.borrow().get_copy(&closure_id.node);\n         match tcx.freevars.borrow().find(&closure_id.node) {\n             None => vec![],\n             Some(ref freevars) => {\n                 freevars.iter().map(|freevar| {\n                     let freevar_def_id = freevar.def.def_id();\n+                    let mut freevar_ty = node_id_to_type(tcx, freevar_def_id.node);\n+                    if capture_mode == ast::CaptureByRef {\n+                        let borrow = tcx.upvar_borrow_map.borrow().get_copy(&ty::UpvarId {\n+                            var_id: freevar_def_id.node,\n+                            closure_expr_id: closure_id.node\n+                        });\n+                        freevar_ty = mk_rptr(tcx, borrow.region, ty::mt {\n+                            ty: freevar_ty,\n+                            mutbl: borrow.kind.to_mutbl_lossy()\n+                        });\n+                    }\n                     UnboxedClosureUpvar {\n                         def: freevar.def,\n                         span: freevar.span,\n-                        ty: node_id_to_type(tcx, freevar_def_id.node),\n+                        ty: freevar_ty\n                     }\n                 }).collect()\n             }"}]}