{"sha": "eacfb330e65ad7f7a8b6bda4a0bafb09eb361396", "node_id": "MDY6Q29tbWl0NzI0NzEyOmVhY2ZiMzMwZTY1YWQ3ZjdhOGI2YmRhNGEwYmFmYjA5ZWIzNjEzOTY=", "commit": {"author": {"name": "varkor", "email": "github@varkor.com", "date": "2018-03-30T09:23:27Z"}, "committer": {"name": "varkor", "email": "github@varkor.com", "date": "2018-04-09T15:43:48Z"}, "message": "Convert sort_by_key to sort_by_cached_key", "tree": {"sha": "be2ed852a69d1aeb6cddfe01b4d6acd7c0bfbdbe", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/be2ed852a69d1aeb6cddfe01b4d6acd7c0bfbdbe"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/eacfb330e65ad7f7a8b6bda4a0bafb09eb361396", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/eacfb330e65ad7f7a8b6bda4a0bafb09eb361396", "html_url": "https://github.com/rust-lang/rust/commit/eacfb330e65ad7f7a8b6bda4a0bafb09eb361396", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/eacfb330e65ad7f7a8b6bda4a0bafb09eb361396/comments", "author": {"login": "varkor", "id": 3943692, "node_id": "MDQ6VXNlcjM5NDM2OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3943692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/varkor", "html_url": "https://github.com/varkor", "followers_url": "https://api.github.com/users/varkor/followers", "following_url": "https://api.github.com/users/varkor/following{/other_user}", "gists_url": "https://api.github.com/users/varkor/gists{/gist_id}", "starred_url": "https://api.github.com/users/varkor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/varkor/subscriptions", "organizations_url": "https://api.github.com/users/varkor/orgs", "repos_url": "https://api.github.com/users/varkor/repos", "events_url": "https://api.github.com/users/varkor/events{/privacy}", "received_events_url": "https://api.github.com/users/varkor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "varkor", "id": 3943692, "node_id": "MDQ6VXNlcjM5NDM2OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3943692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/varkor", "html_url": "https://github.com/varkor", "followers_url": "https://api.github.com/users/varkor/followers", "following_url": "https://api.github.com/users/varkor/following{/other_user}", "gists_url": "https://api.github.com/users/varkor/gists{/gist_id}", "starred_url": "https://api.github.com/users/varkor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/varkor/subscriptions", "organizations_url": "https://api.github.com/users/varkor/orgs", "repos_url": "https://api.github.com/users/varkor/repos", "events_url": "https://api.github.com/users/varkor/events{/privacy}", "received_events_url": "https://api.github.com/users/varkor/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4b9b70c394e7f341b4016fce4cbf763d404b26f9", "url": "https://api.github.com/repos/rust-lang/rust/commits/4b9b70c394e7f341b4016fce4cbf763d404b26f9", "html_url": "https://github.com/rust-lang/rust/commit/4b9b70c394e7f341b4016fce4cbf763d404b26f9"}], "stats": {"total": 19, "additions": 13, "deletions": 6}, "files": [{"sha": "0b4c3be8b7814e22317b49db29879ec0971e65fa", "filename": "src/librustc/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/eacfb330e65ad7f7a8b6bda4a0bafb09eb361396/src%2Flibrustc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eacfb330e65ad7f7a8b6bda4a0bafb09eb361396/src%2Flibrustc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Flib.rs?ref=eacfb330e65ad7f7a8b6bda4a0bafb09eb361396", "patch": "@@ -61,6 +61,7 @@\n #![feature(refcell_replace_swap)]\n #![feature(rustc_diagnostic_macros)]\n #![feature(slice_patterns)]\n+#![feature(slice_sort_by_cached_key)]\n #![feature(specialization)]\n #![feature(unboxed_closures)]\n #![feature(trace_macros)]"}, {"sha": "41334a37dbef65050cecff58c463f781c1f0db4e", "filename": "src/librustc/middle/cstore.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/eacfb330e65ad7f7a8b6bda4a0bafb09eb361396/src%2Flibrustc%2Fmiddle%2Fcstore.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eacfb330e65ad7f7a8b6bda4a0bafb09eb361396/src%2Flibrustc%2Fmiddle%2Fcstore.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fcstore.rs?ref=eacfb330e65ad7f7a8b6bda4a0bafb09eb361396", "patch": "@@ -401,7 +401,7 @@ pub fn used_crates(tcx: TyCtxt, prefer: LinkagePreference)\n         .collect::<Vec<_>>();\n     let mut ordering = tcx.postorder_cnums(LOCAL_CRATE);\n     Lrc::make_mut(&mut ordering).reverse();\n-    libs.sort_by_key(|&(a, _)| {\n+    libs.sort_by_cached_key(|&(a, _)| {\n         ordering.iter().position(|x| *x == a)\n     });\n     libs"}, {"sha": "2fe64f492dd8c00e05a8765966da5362c6e33eeb", "filename": "src/librustc_mir/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/eacfb330e65ad7f7a8b6bda4a0bafb09eb361396/src%2Flibrustc_mir%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eacfb330e65ad7f7a8b6bda4a0bafb09eb361396/src%2Flibrustc_mir%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Flib.rs?ref=eacfb330e65ad7f7a8b6bda4a0bafb09eb361396", "patch": "@@ -17,6 +17,7 @@ Rust MIR: a lowered representation of Rust. Also: an experiment!\n #![deny(warnings)]\n \n #![feature(slice_patterns)]\n+#![feature(slice_sort_by_cached_key)]\n #![feature(from_ref)]\n #![feature(box_patterns)]\n #![feature(box_syntax)]"}, {"sha": "17d1156617da559187005c1e5df399c459a6a1ee", "filename": "src/librustc_mir/monomorphize/partitioning.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/eacfb330e65ad7f7a8b6bda4a0bafb09eb361396/src%2Flibrustc_mir%2Fmonomorphize%2Fpartitioning.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eacfb330e65ad7f7a8b6bda4a0bafb09eb361396/src%2Flibrustc_mir%2Fmonomorphize%2Fpartitioning.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fmonomorphize%2Fpartitioning.rs?ref=eacfb330e65ad7f7a8b6bda4a0bafb09eb361396", "patch": "@@ -509,7 +509,7 @@ fn merge_codegen_units<'tcx>(initial_partitioning: &mut PreInliningPartitioning<\n     // Merge the two smallest codegen units until the target size is reached.\n     while codegen_units.len() > target_cgu_count {\n         // Sort small cgus to the back\n-        codegen_units.sort_by_key(|cgu| usize::MAX - cgu.size_estimate());\n+        codegen_units.sort_by_cached_key(|cgu| usize::MAX - cgu.size_estimate());\n         let mut smallest = codegen_units.pop().unwrap();\n         let second_smallest = codegen_units.last_mut().unwrap();\n "}, {"sha": "c1a7f20feff96e47cedc76120452e47619bee8d7", "filename": "src/librustc_resolve/lib.rs", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/eacfb330e65ad7f7a8b6bda4a0bafb09eb361396/src%2Flibrustc_resolve%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eacfb330e65ad7f7a8b6bda4a0bafb09eb361396/src%2Flibrustc_resolve%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Flib.rs?ref=eacfb330e65ad7f7a8b6bda4a0bafb09eb361396", "patch": "@@ -14,6 +14,7 @@\n #![deny(warnings)]\n \n #![feature(rustc_diagnostic_macros)]\n+#![feature(slice_sort_by_cached_key)]\n \n #[macro_use]\n extern crate log;\n@@ -3341,7 +3342,9 @@ impl<'a> Resolver<'a> {\n                         let is_mod = |def| match def { Def::Mod(..) => true, _ => false };\n                         let mut candidates =\n                             self.lookup_import_candidates(name, TypeNS, is_mod);\n-                        candidates.sort_by_key(|c| (c.path.segments.len(), c.path.to_string()));\n+                        candidates.sort_by_cached_key(|c| {\n+                            (c.path.segments.len(), c.path.to_string())\n+                        });\n                         if let Some(candidate) = candidates.get(0) {\n                             format!(\"Did you mean `{}`?\", candidate.path)\n                         } else {\n@@ -3579,7 +3582,7 @@ impl<'a> Resolver<'a> {\n \n         let name = path[path.len() - 1].name;\n         // Make sure error reporting is deterministic.\n-        names.sort_by_key(|name| name.as_str());\n+        names.sort_by_cached_key(|name| name.as_str());\n         match find_best_match_for_name(names.iter(), &name.as_str(), None) {\n             Some(found) if found != name => Some(found),\n             _ => None,"}, {"sha": "3e60af6ef221a59f9617616e9b6062d24fd6a314", "filename": "src/librustc_trans/base.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/eacfb330e65ad7f7a8b6bda4a0bafb09eb361396/src%2Flibrustc_trans%2Fbase.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eacfb330e65ad7f7a8b6bda4a0bafb09eb361396/src%2Flibrustc_trans%2Fbase.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Fbase.rs?ref=eacfb330e65ad7f7a8b6bda4a0bafb09eb361396", "patch": "@@ -830,7 +830,7 @@ pub fn trans_crate<'a, 'tcx>(tcx: TyCtxt<'a, 'tcx, 'tcx>,\n     // a bit more efficiently.\n     let codegen_units = {\n         let mut codegen_units = codegen_units;\n-        codegen_units.sort_by_key(|cgu| usize::MAX - cgu.size_estimate());\n+        codegen_units.sort_by_cached_key(|cgu| usize::MAX - cgu.size_estimate());\n         codegen_units\n     };\n "}, {"sha": "73c676021ec362c4b1c0ef7e191409933492822c", "filename": "src/librustc_trans/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/eacfb330e65ad7f7a8b6bda4a0bafb09eb361396/src%2Flibrustc_trans%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eacfb330e65ad7f7a8b6bda4a0bafb09eb361396/src%2Flibrustc_trans%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Flib.rs?ref=eacfb330e65ad7f7a8b6bda4a0bafb09eb361396", "patch": "@@ -27,6 +27,7 @@\n #![feature(libc)]\n #![feature(quote)]\n #![feature(rustc_diagnostic_macros)]\n+#![feature(slice_sort_by_cached_key)]\n #![feature(optin_builtin_traits)]\n #![feature(inclusive_range_fields)]\n #![feature(underscore_lifetimes)]"}, {"sha": "de5709566225c54cc595f7340155edbc9264fdf7", "filename": "src/librustc_typeck/check/method/probe.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/eacfb330e65ad7f7a8b6bda4a0bafb09eb361396/src%2Flibrustc_typeck%2Fcheck%2Fmethod%2Fprobe.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eacfb330e65ad7f7a8b6bda4a0bafb09eb361396/src%2Flibrustc_typeck%2Fcheck%2Fmethod%2Fprobe.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fmethod%2Fprobe.rs?ref=eacfb330e65ad7f7a8b6bda4a0bafb09eb361396", "patch": "@@ -799,7 +799,7 @@ impl<'a, 'gcx, 'tcx> ProbeContext<'a, 'gcx, 'tcx> {\n             .collect();\n \n         // sort them by the name so we have a stable result\n-        names.sort_by_key(|n| n.as_str());\n+        names.sort_by_cached_key(|n| n.as_str());\n         names\n     }\n "}, {"sha": "2ead5e9d91306d0795b8af82378a57876b1f23bb", "filename": "src/librustc_typeck/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/eacfb330e65ad7f7a8b6bda4a0bafb09eb361396/src%2Flibrustc_typeck%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eacfb330e65ad7f7a8b6bda4a0bafb09eb361396/src%2Flibrustc_typeck%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Flib.rs?ref=eacfb330e65ad7f7a8b6bda4a0bafb09eb361396", "patch": "@@ -82,6 +82,7 @@ This API is completely unstable and subject to change.\n #![feature(refcell_replace_swap)]\n #![feature(rustc_diagnostic_macros)]\n #![feature(slice_patterns)]\n+#![feature(slice_sort_by_cached_key)]\n #![feature(dyn_trait)]\n \n #[macro_use] extern crate log;"}]}