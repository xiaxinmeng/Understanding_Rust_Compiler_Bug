{"sha": "47501f16596d2eaac9ce1a27b43b386b8496c66f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ3NTAxZjE2NTk2ZDJlYWFjOWNlMWEyN2I0M2IzODZiODQ5NmM2NmY=", "commit": {"author": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2010-08-24T16:59:02Z"}, "committer": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2010-08-24T16:59:02Z"}, "message": "Make _str.eq suitable for map.hashmap; add _str.hash that does simple djb-hash.", "tree": {"sha": "ad7841880efbd68e14a109942b01224525bc9c07", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ad7841880efbd68e14a109942b01224525bc9c07"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/47501f16596d2eaac9ce1a27b43b386b8496c66f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/47501f16596d2eaac9ce1a27b43b386b8496c66f", "html_url": "https://github.com/rust-lang/rust/commit/47501f16596d2eaac9ce1a27b43b386b8496c66f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/47501f16596d2eaac9ce1a27b43b386b8496c66f/comments", "author": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "committer": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "10316fbfa59b66817f447ac4a35242893bc9970a", "url": "https://api.github.com/repos/rust-lang/rust/commits/10316fbfa59b66817f447ac4a35242893bc9970a", "html_url": "https://github.com/rust-lang/rust/commit/10316fbfa59b66817f447ac4a35242893bc9970a"}], "stats": {"total": 13, "additions": 12, "deletions": 1}, "files": [{"sha": "751d79cfc87f9f41b9d4dda9f013a4c2f4bcdfea", "filename": "src/lib/_str.rs", "status": "modified", "additions": 12, "deletions": 1, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/47501f16596d2eaac9ce1a27b43b386b8496c66f/src%2Flib%2F_str.rs", "raw_url": "https://github.com/rust-lang/rust/raw/47501f16596d2eaac9ce1a27b43b386b8496c66f/src%2Flib%2F_str.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flib%2F_str.rs?ref=47501f16596d2eaac9ce1a27b43b386b8496c66f", "patch": "@@ -11,7 +11,7 @@ native \"rust\" mod rustrt {\n   fn refcount[T](str s) -> uint;\n }\n \n-fn eq(str a, str b) -> bool {\n+fn eq(&str a, &str b) -> bool {\n   let uint i = byte_len(a);\n   if (byte_len(b) != i) {\n     ret false;\n@@ -27,6 +27,17 @@ fn eq(str a, str b) -> bool {\n   ret true;\n }\n \n+fn hash(&str s) -> uint {\n+  // djb hash.\n+  // FIXME: replace with murmur.\n+  let uint u = 5381u;\n+  for (u8 c in s) {\n+    u *= 33u;\n+    u += (c as uint);\n+  }\n+  ret u;\n+}\n+\n fn is_utf8(vec[u8] v) -> bool {\n   fail; // FIXME\n }"}]}