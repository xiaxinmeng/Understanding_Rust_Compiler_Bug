{"sha": "705dec11946f130faca91453886eba2108443339", "node_id": "C_kwDOAAsO6NoAKDcwNWRlYzExOTQ2ZjEzMGZhY2E5MTQ1Mzg4NmViYTIxMDg0NDMzMzk", "commit": {"author": {"name": "Noah Lev", "email": "camelidcamel@gmail.com", "date": "2021-11-01T03:00:48Z"}, "committer": {"name": "Noah Lev", "email": "camelidcamel@gmail.com", "date": "2021-11-01T03:00:48Z"}, "message": "rustdoc: Replace wildcard with explicit pattern\n\nThis simplifies the code and future-proofs it against changes to\n`Variant`.", "tree": {"sha": "0a555b115216bd34d2cb0e29f2a0ba0bb8cc5454", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0a555b115216bd34d2cb0e29f2a0ba0bb8cc5454"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/705dec11946f130faca91453886eba2108443339", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/705dec11946f130faca91453886eba2108443339", "html_url": "https://github.com/rust-lang/rust/commit/705dec11946f130faca91453886eba2108443339", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/705dec11946f130faca91453886eba2108443339/comments", "author": {"login": "camelid", "id": 37223377, "node_id": "MDQ6VXNlcjM3MjIzMzc3", "avatar_url": "https://avatars.githubusercontent.com/u/37223377?v=4", "gravatar_id": "", "url": "https://api.github.com/users/camelid", "html_url": "https://github.com/camelid", "followers_url": "https://api.github.com/users/camelid/followers", "following_url": "https://api.github.com/users/camelid/following{/other_user}", "gists_url": "https://api.github.com/users/camelid/gists{/gist_id}", "starred_url": "https://api.github.com/users/camelid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/camelid/subscriptions", "organizations_url": "https://api.github.com/users/camelid/orgs", "repos_url": "https://api.github.com/users/camelid/repos", "events_url": "https://api.github.com/users/camelid/events{/privacy}", "received_events_url": "https://api.github.com/users/camelid/received_events", "type": "User", "site_admin": false}, "committer": {"login": "camelid", "id": 37223377, "node_id": "MDQ6VXNlcjM3MjIzMzc3", "avatar_url": "https://avatars.githubusercontent.com/u/37223377?v=4", "gravatar_id": "", "url": "https://api.github.com/users/camelid", "html_url": "https://github.com/camelid", "followers_url": "https://api.github.com/users/camelid/followers", "following_url": "https://api.github.com/users/camelid/following{/other_user}", "gists_url": "https://api.github.com/users/camelid/gists{/gist_id}", "starred_url": "https://api.github.com/users/camelid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/camelid/subscriptions", "organizations_url": "https://api.github.com/users/camelid/orgs", "repos_url": "https://api.github.com/users/camelid/repos", "events_url": "https://api.github.com/users/camelid/events{/privacy}", "received_events_url": "https://api.github.com/users/camelid/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "537b82cfad55dda93592aad6538790ddbffa3dfe", "url": "https://api.github.com/repos/rust-lang/rust/commits/537b82cfad55dda93592aad6538790ddbffa3dfe", "html_url": "https://github.com/rust-lang/rust/commit/537b82cfad55dda93592aad6538790ddbffa3dfe"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "4984d9171244ee3c3b3b237fd2a86d5b6e535f9b", "filename": "src/librustdoc/fold.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/705dec11946f130faca91453886eba2108443339/src%2Flibrustdoc%2Ffold.rs", "raw_url": "https://github.com/rust-lang/rust/raw/705dec11946f130faca91453886eba2108443339/src%2Flibrustdoc%2Ffold.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Ffold.rs?ref=705dec11946f130faca91453886eba2108443339", "patch": "@@ -59,7 +59,7 @@ crate trait DocFolder: Sized {\n                         let fields = fields.into_iter().filter_map(|x| self.fold_item(x)).collect();\n                         VariantItem(Variant::Tuple(fields))\n                     }\n-                    i => VariantItem(i),\n+                    Variant::CLike => VariantItem(Variant::CLike),\n                 }\n             }\n             x => x,"}]}