{"sha": "14c002edb6a2e336dca09dca96df2b7228db95a8", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE0YzAwMmVkYjZhMmUzMzZkY2EwOWRjYTk2ZGYyYjcyMjhkYjk1YTg=", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2020-01-21T14:33:17Z"}, "committer": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2020-01-21T14:33:17Z"}, "message": "tidy: fix most clippy warnings", "tree": {"sha": "46a780c498cd5e209fbc742d0c75907ca58af4f7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/46a780c498cd5e209fbc742d0c75907ca58af4f7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/14c002edb6a2e336dca09dca96df2b7228db95a8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/14c002edb6a2e336dca09dca96df2b7228db95a8", "html_url": "https://github.com/rust-lang/rust/commit/14c002edb6a2e336dca09dca96df2b7228db95a8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/14c002edb6a2e336dca09dca96df2b7228db95a8/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ce361fb24f0896bf7d983549117cbe1f70f32dcf", "url": "https://api.github.com/repos/rust-lang/rust/commits/ce361fb24f0896bf7d983549117cbe1f70f32dcf", "html_url": "https://github.com/rust-lang/rust/commit/ce361fb24f0896bf7d983549117cbe1f70f32dcf"}], "stats": {"total": 14, "additions": 7, "deletions": 7}, "files": [{"sha": "408be83b926e2bb6c709db611cb2851d66dfe2ee", "filename": "src/tools/tidy/src/debug_artifacts.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/14c002edb6a2e336dca09dca96df2b7228db95a8/src%2Ftools%2Ftidy%2Fsrc%2Fdebug_artifacts.rs", "raw_url": "https://github.com/rust-lang/rust/raw/14c002edb6a2e336dca09dca96df2b7228db95a8/src%2Ftools%2Ftidy%2Fsrc%2Fdebug_artifacts.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Ftidy%2Fsrc%2Fdebug_artifacts.rs?ref=14c002edb6a2e336dca09dca96df2b7228db95a8", "patch": "@@ -2,7 +2,7 @@\n \n use std::path::{Path, PathBuf};\n \n-const GRAPHVIZ_POSTFLOW_MSG: &'static str = \"`borrowck_graphviz_postflow` attribute in test\";\n+const GRAPHVIZ_POSTFLOW_MSG: &str = \"`borrowck_graphviz_postflow` attribute in test\";\n \n pub fn check(path: &Path, bad: &mut bool) {\n     let test_dir: PathBuf = path.join(\"test\");"}, {"sha": "428c57d3ee82236ba3f0c707003ea9b883675080", "filename": "src/tools/tidy/src/error_codes_check.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/14c002edb6a2e336dca09dca96df2b7228db95a8/src%2Ftools%2Ftidy%2Fsrc%2Ferror_codes_check.rs", "raw_url": "https://github.com/rust-lang/rust/raw/14c002edb6a2e336dca09dca96df2b7228db95a8/src%2Ftools%2Ftidy%2Fsrc%2Ferror_codes_check.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Ftidy%2Fsrc%2Ferror_codes_check.rs?ref=14c002edb6a2e336dca09dca96df2b7228db95a8", "patch": "@@ -53,7 +53,7 @@ fn extract_error_codes(f: &str, error_codes: &mut HashMap<String, bool>, path: &\n                     error_codes.insert(err_code.clone(), false);\n                 }\n                 // Now we extract the tests from the markdown file!\n-                let md = some_or_continue!(s.splitn(2, \"include_str!(\\\"\").skip(1).next());\n+                let md = some_or_continue!(s.splitn(2, \"include_str!(\\\"\").nth(1));\n                 let md_file_name = some_or_continue!(md.splitn(2, \"\\\")\").next());\n                 let path = some_or_continue!(path.parent()).join(md_file_name);\n                 match read_to_string(&path) {\n@@ -84,7 +84,7 @@ fn extract_error_codes_from_tests(f: &str, error_codes: &mut HashMap<String, boo\n         let s = line.trim();\n         if s.starts_with(\"error[E\") || s.starts_with(\"warning[E\") {\n             if let Some(err_code) = s.splitn(2, ']').next() {\n-                if let Some(err_code) = err_code.splitn(2, '[').skip(1).next() {\n+                if let Some(err_code) = err_code.splitn(2, '[').nth(1) {\n                     let nb = error_codes.entry(err_code.to_owned()).or_insert(false);\n                     *nb = true;\n                 }"}, {"sha": "12f93a87cb1729818bccf8636ef6f907441ed553", "filename": "src/tools/tidy/src/features.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/14c002edb6a2e336dca09dca96df2b7228db95a8/src%2Ftools%2Ftidy%2Fsrc%2Ffeatures.rs", "raw_url": "https://github.com/rust-lang/rust/raw/14c002edb6a2e336dca09dca96df2b7228db95a8/src%2Ftools%2Ftidy%2Fsrc%2Ffeatures.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Ftidy%2Fsrc%2Ffeatures.rs?ref=14c002edb6a2e336dca09dca96df2b7228db95a8", "patch": "@@ -232,7 +232,7 @@ fn test_filen_gate(filen_underscore: &str, features: &mut Features) -> bool {\n             }\n         }\n     }\n-    return false;\n+    false\n }\n \n pub fn collect_lang_features(base_src_path: &Path, bad: &mut bool) -> Features {\n@@ -344,7 +344,7 @@ fn collect_lang_features_in(base: &Path, file: &str, bad: &mut bool) -> Features\n                 }\n                 None\n             } else {\n-                let s = issue_str.split('(').nth(1).unwrap().split(')').nth(0).unwrap();\n+                let s = issue_str.split('(').nth(1).unwrap().split(')').next().unwrap();\n                 Some(s.parse().unwrap())\n             };\n             Some((name.to_owned(), Feature { level, since, has_gate_test: false, tracking_issue }))"}, {"sha": "620be2f9852305d2e1bbbd08f7730b8e4324839d", "filename": "src/tools/tidy/src/features/version.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/14c002edb6a2e336dca09dca96df2b7228db95a8/src%2Ftools%2Ftidy%2Fsrc%2Ffeatures%2Fversion.rs", "raw_url": "https://github.com/rust-lang/rust/raw/14c002edb6a2e336dca09dca96df2b7228db95a8/src%2Ftools%2Ftidy%2Fsrc%2Ffeatures%2Fversion.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Ftidy%2Fsrc%2Ffeatures%2Fversion.rs?ref=14c002edb6a2e336dca09dca96df2b7228db95a8", "patch": "@@ -38,7 +38,7 @@ impl FromStr for Version {\n \n         let parts = [part()?, part()?, part()?];\n \n-        if let Some(_) = iter.next() {\n+        if iter.next().is_some() {\n             // Ensure we don't have more than 3 parts.\n             return Err(ParseVersionError::WrongNumberOfParts);\n         }"}, {"sha": "4247fcb3b7f53129ec96ca7fa7a8602beb011074", "filename": "src/tools/tidy/src/style.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/14c002edb6a2e336dca09dca96df2b7228db95a8/src%2Ftools%2Ftidy%2Fsrc%2Fstyle.rs", "raw_url": "https://github.com/rust-lang/rust/raw/14c002edb6a2e336dca09dca96df2b7228db95a8/src%2Ftools%2Ftidy%2Fsrc%2Fstyle.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Ftidy%2Fsrc%2Fstyle.rs?ref=14c002edb6a2e336dca09dca96df2b7228db95a8", "patch": "@@ -58,7 +58,7 @@ enum LIUState {\n fn line_is_url(columns: usize, line: &str) -> bool {\n     // more basic check for error_codes.rs, to avoid complexity in implementing two state machines\n     if columns == ERROR_CODE_COLS {\n-        return line.starts_with(\"[\") && line.contains(\"]:\") && line.contains(\"http\");\n+        return line.starts_with('[') && line.contains(\"]:\") && line.contains(\"http\");\n     }\n \n     use self::LIUState::*;"}]}