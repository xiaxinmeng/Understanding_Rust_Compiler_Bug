{"sha": "3f423c0933c056386fb547c33048600942d17c65", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNmNDIzYzA5MzNjMDU2Mzg2ZmI1NDdjMzMwNDg2MDA5NDJkMTdjNjU=", "commit": {"author": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2018-11-30T17:28:33Z"}, "committer": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2018-11-30T17:28:33Z"}, "message": "Implement cast C enum -> int", "tree": {"sha": "70c0792476a3c6fbf55d9f8e78933520204480ce", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/70c0792476a3c6fbf55d9f8e78933520204480ce"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3f423c0933c056386fb547c33048600942d17c65", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3f423c0933c056386fb547c33048600942d17c65", "html_url": "https://github.com/rust-lang/rust/commit/3f423c0933c056386fb547c33048600942d17c65", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3f423c0933c056386fb547c33048600942d17c65/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e49481d11227a88eabcc7e718d137f89333f286c", "url": "https://api.github.com/repos/rust-lang/rust/commits/e49481d11227a88eabcc7e718d137f89333f286c", "html_url": "https://github.com/rust-lang/rust/commit/e49481d11227a88eabcc7e718d137f89333f286c"}], "stats": {"total": 35, "additions": 5, "deletions": 30}, "files": [{"sha": "1310b95749d43682ff27ce954926b25bd1f9835d", "filename": "0004-Disable-some-more-unsupported-stuff-in-libcore.patch", "status": "modified", "additions": 1, "deletions": 30, "changes": 31, "blob_url": "https://github.com/rust-lang/rust/blob/3f423c0933c056386fb547c33048600942d17c65/0004-Disable-some-more-unsupported-stuff-in-libcore.patch", "raw_url": "https://github.com/rust-lang/rust/raw/3f423c0933c056386fb547c33048600942d17c65/0004-Disable-some-more-unsupported-stuff-in-libcore.patch", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/0004-Disable-some-more-unsupported-stuff-in-libcore.patch?ref=3f423c0933c056386fb547c33048600942d17c65", "patch": "@@ -4,37 +4,8 @@ Date: Thu, 23 Aug 2018 11:15:01 +0200\n Subject: [PATCH] Disable some more unsupported stuff in libcore\n \n ---\n- src/libcore/cmp.rs     | 5 ++++-\n  src/libcore/num/mod.rs | 8 ++++++--\n- 2 files changed, 9 insertions(+), 3 deletions(-)\n-\n-diff --git a/src/libcore/cmp.rs b/src/libcore/cmp.rs\n-index a6e6496..f9374ea 100644\n---- a/src/libcore/cmp.rs\n-+++ b/src/libcore/cmp.rs\n-@@ -496,6 +496,7 @@ pub trait Ord: Eq + PartialOrd<Self> {\n- #[stable(feature = \"rust1\", since = \"1.0.0\")]\n- impl Eq for Ordering {}\n-\n-+/*\n- #[stable(feature = \"rust1\", since = \"1.0.0\")]\n- impl Ord for Ordering {\n-     #[inline]\n-@@ -503,12 +504,14 @@ impl Ord for Ordering {\n-         (*self as i32).cmp(&(*other as i32))\n-     }\n- }\n-+*/\n-\n- #[stable(feature = \"rust1\", since = \"1.0.0\")]\n- impl PartialOrd for Ordering {\n-     #[inline]\n-     fn partial_cmp(&self, other: &Ordering) -> Option<Ordering> {\n--        (*self as i32).partial_cmp(&(*other as i32))\n-+        //(*self as i32).partial_cmp(&(*other as i32))\n-+        None\n-     }\n- }\n+ 1 files changed, 8 insertions(+), 2 deletions(-)\n \n diff --git a/src/libcore/num/mod.rs b/src/libcore/num/mod.rs\n index 5d00949..f077f1d 100644"}, {"sha": "35fbf6454e9acc36149bcf1c5621febb1b187551", "filename": "src/base.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/3f423c0933c056386fb547c33048600942d17c65/src%2Fbase.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3f423c0933c056386fb547c33048600942d17c65/src%2Fbase.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbase.rs?ref=3f423c0933c056386fb547c33048600942d17c65", "patch": "@@ -571,6 +571,10 @@ fn trans_stmt<'a, 'tcx: 'a>(\n                             };\n                             lval.write_cvalue(fx, CValue::ByVal(res, dest_layout));\n                         }\n+                        (ty::Adt(adt_def, _substs), ty::Uint(_)) | (ty::Adt(adt_def, _substs), ty::Int(_)) if adt_def.is_enum() => {\n+                            let discr = trans_get_discriminant(fx, operand, fx.layout_of(to_ty));\n+                            lval.write_cvalue(fx, discr);\n+                        }\n                         _ => unimpl!(\"rval misc {:?} {:?}\", from_ty, to_ty),\n                     }\n                 }"}]}