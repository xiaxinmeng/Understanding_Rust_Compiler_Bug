{"sha": "86734b13bb99c83333ca820e01be3aeace18af75", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg2NzM0YjEzYmI5OWM4MzMzM2NhODIwZTAxYmUzYWVhY2UxOGFmNzU=", "commit": {"author": {"name": "Dylan MacKenzie", "email": "ecstaticmorse@gmail.com", "date": "2019-11-09T17:29:57Z"}, "committer": {"name": "Dylan MacKenzie", "email": "ecstaticmorse@gmail.com", "date": "2019-11-13T18:44:14Z"}, "message": "Bless less verbose error messages\n\nThe MIR const-checker errors for if/match/loop are now delay span bugs,\nso nothing will be emitted unless the HIR checker misses something.", "tree": {"sha": "e779309119eb4200aab8e4e276386e72bac926eb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e779309119eb4200aab8e4e276386e72bac926eb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/86734b13bb99c83333ca820e01be3aeace18af75", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/86734b13bb99c83333ca820e01be3aeace18af75", "html_url": "https://github.com/rust-lang/rust/commit/86734b13bb99c83333ca820e01be3aeace18af75", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/86734b13bb99c83333ca820e01be3aeace18af75/comments", "author": {"login": "ecstatic-morse", "id": 29463364, "node_id": "MDQ6VXNlcjI5NDYzMzY0", "avatar_url": "https://avatars.githubusercontent.com/u/29463364?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ecstatic-morse", "html_url": "https://github.com/ecstatic-morse", "followers_url": "https://api.github.com/users/ecstatic-morse/followers", "following_url": "https://api.github.com/users/ecstatic-morse/following{/other_user}", "gists_url": "https://api.github.com/users/ecstatic-morse/gists{/gist_id}", "starred_url": "https://api.github.com/users/ecstatic-morse/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ecstatic-morse/subscriptions", "organizations_url": "https://api.github.com/users/ecstatic-morse/orgs", "repos_url": "https://api.github.com/users/ecstatic-morse/repos", "events_url": "https://api.github.com/users/ecstatic-morse/events{/privacy}", "received_events_url": "https://api.github.com/users/ecstatic-morse/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ecstatic-morse", "id": 29463364, "node_id": "MDQ6VXNlcjI5NDYzMzY0", "avatar_url": "https://avatars.githubusercontent.com/u/29463364?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ecstatic-morse", "html_url": "https://github.com/ecstatic-morse", "followers_url": "https://api.github.com/users/ecstatic-morse/followers", "following_url": "https://api.github.com/users/ecstatic-morse/following{/other_user}", "gists_url": "https://api.github.com/users/ecstatic-morse/gists{/gist_id}", "starred_url": "https://api.github.com/users/ecstatic-morse/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ecstatic-morse/subscriptions", "organizations_url": "https://api.github.com/users/ecstatic-morse/orgs", "repos_url": "https://api.github.com/users/ecstatic-morse/repos", "events_url": "https://api.github.com/users/ecstatic-morse/events{/privacy}", "received_events_url": "https://api.github.com/users/ecstatic-morse/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "70aa781c2d8f4ebe0e826d2cdeb8fcd371676a88", "url": "https://api.github.com/repos/rust-lang/rust/commits/70aa781c2d8f4ebe0e826d2cdeb8fcd371676a88", "html_url": "https://github.com/rust-lang/rust/commit/70aa781c2d8f4ebe0e826d2cdeb8fcd371676a88"}], "stats": {"total": 236, "additions": 68, "deletions": 168}, "files": [{"sha": "4adad16a5701068c6bb558a5a780ada45b48324d", "filename": "src/test/compile-fail/consts/const-fn-error.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/86734b13bb99c83333ca820e01be3aeace18af75/src%2Ftest%2Fcompile-fail%2Fconsts%2Fconst-fn-error.rs", "raw_url": "https://github.com/rust-lang/rust/raw/86734b13bb99c83333ca820e01be3aeace18af75/src%2Ftest%2Fcompile-fail%2Fconsts%2Fconst-fn-error.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fconsts%2Fconst-fn-error.rs?ref=86734b13bb99c83333ca820e01be3aeace18af75", "patch": "@@ -7,8 +7,6 @@ const fn f(x: usize) -> usize {\n     for i in 0..x {\n         //~^ ERROR E0015\n         //~| ERROR E0017\n-        //~| ERROR E0019\n-        //~| ERROR E0019\n         //~| ERROR E0080\n         //~| ERROR E0744\n         sum += i;"}, {"sha": "04eecb5687fd903608ff9a0694cc5da1b278791c", "filename": "src/test/compile-fail/issue-52443.rs", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/86734b13bb99c83333ca820e01be3aeace18af75/src%2Ftest%2Fcompile-fail%2Fissue-52443.rs", "raw_url": "https://github.com/rust-lang/rust/raw/86734b13bb99c83333ca820e01be3aeace18af75/src%2Ftest%2Fcompile-fail%2Fissue-52443.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-52443.rs?ref=86734b13bb99c83333ca820e01be3aeace18af75", "patch": "@@ -4,15 +4,11 @@ fn main() {\n     [(); loop { break }]; //~ ERROR mismatched types\n     //~^ ERROR `loop` is not allowed in a `const`\n     [(); {while true {break}; 0}];\n-    //~^ ERROR constant contains unimplemented expression type\n-    //~| ERROR constant contains unimplemented expression type\n-    //~| ERROR `while` is not allowed in a `const`\n+    //~^ ERROR `while` is not allowed in a `const`\n     //~| WARN denote infinite loops with\n     [(); { for _ in 0usize.. {}; 0}];\n     //~^ ERROR calls in constants are limited to constant functions\n     //~| ERROR `for` is not allowed in a `const`\n     //~| ERROR references in constants may only refer to immutable values\n-    //~| ERROR constant contains unimplemented expression type\n-    //~| ERROR constant contains unimplemented expression type\n     //~| ERROR evaluation of constant value failed\n }"}, {"sha": "af5e7658d48d2641f572ac9839d48d895d40add4", "filename": "src/test/ui/consts/const-eval/infinite_loop.rs", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/86734b13bb99c83333ca820e01be3aeace18af75/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Finfinite_loop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/86734b13bb99c83333ca820e01be3aeace18af75/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Finfinite_loop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Finfinite_loop.rs?ref=86734b13bb99c83333ca820e01be3aeace18af75", "patch": "@@ -5,9 +5,7 @@ fn main() {\n         //~^ WARNING Constant evaluating a complex constant, this might take some time\n         let mut n = 113383; // #20 in https://oeis.org/A006884\n         while n != 0 {\n-        //~^ ERROR constant contains unimplemented expression type\n-        //~| ERROR constant contains unimplemented expression type\n-        //~| ERROR `while` is not allowed in a `const`\n+        //~^ ERROR `while` is not allowed in a `const`\n             n = if n % 2 == 0 { n/2 } else { 3*n + 1 };\n             //~^ ERROR evaluation of constant value failed\n             //~| ERROR `if` is not allowed in a `const`"}, {"sha": "2af6af95c5565cd7222288e3c803d5de9b5fc360", "filename": "src/test/ui/consts/const-eval/infinite_loop.stderr", "status": "modified", "additions": 6, "deletions": 25, "changes": 31, "blob_url": "https://github.com/rust-lang/rust/blob/86734b13bb99c83333ca820e01be3aeace18af75/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Finfinite_loop.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/86734b13bb99c83333ca820e01be3aeace18af75/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Finfinite_loop.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Finfinite_loop.stderr?ref=86734b13bb99c83333ca820e01be3aeace18af75", "patch": "@@ -3,37 +3,18 @@ error[E0744]: `while` is not allowed in a `const`\n    |\n LL | /         while n != 0 {\n LL | |\n+LL | |             n = if n % 2 == 0 { n/2 } else { 3*n + 1 };\n LL | |\n LL | |\n-...  |\n-LL | |\n LL | |         }\n    | |_________^\n \n error[E0744]: `if` is not allowed in a `const`\n-  --> $DIR/infinite_loop.rs:11:17\n+  --> $DIR/infinite_loop.rs:9:17\n    |\n LL |             n = if n % 2 == 0 { n/2 } else { 3*n + 1 };\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n-error[E0019]: constant contains unimplemented expression type\n-  --> $DIR/infinite_loop.rs:7:15\n-   |\n-LL |         while n != 0 {\n-   |               ^^^^^^\n-\n-error[E0019]: constant contains unimplemented expression type\n-  --> $DIR/infinite_loop.rs:7:9\n-   |\n-LL | /         while n != 0 {\n-LL | |\n-LL | |\n-LL | |\n-...  |\n-LL | |\n-LL | |         }\n-   | |_________^\n-\n warning: Constant evaluating a complex constant, this might take some time\n   --> $DIR/infinite_loop.rs:4:18\n    |\n@@ -48,12 +29,12 @@ LL | |     }];\n    | |_____^\n \n error[E0080]: evaluation of constant value failed\n-  --> $DIR/infinite_loop.rs:11:20\n+  --> $DIR/infinite_loop.rs:9:20\n    |\n LL |             n = if n % 2 == 0 { n/2 } else { 3*n + 1 };\n    |                    ^^^^^^^^^^ duplicate interpreter state observed here, const evaluation will never terminate\n \n-error: aborting due to 5 previous errors\n+error: aborting due to 3 previous errors\n \n-Some errors have detailed explanations: E0019, E0080, E0744.\n-For more information about an error, try `rustc --explain E0019`.\n+Some errors have detailed explanations: E0080, E0744.\n+For more information about an error, try `rustc --explain E0080`."}, {"sha": "3788167f4490248f7b87b188bddc2a537b4d9417", "filename": "src/test/ui/consts/const-eval/issue-52475.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/86734b13bb99c83333ca820e01be3aeace18af75/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fissue-52475.rs", "raw_url": "https://github.com/rust-lang/rust/raw/86734b13bb99c83333ca820e01be3aeace18af75/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fissue-52475.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fissue-52475.rs?ref=86734b13bb99c83333ca820e01be3aeace18af75", "patch": "@@ -5,8 +5,6 @@ fn main() {\n         let mut n = 0;\n         while n < 5 {\n         //~^ ERROR `while` is not allowed in a `const`\n-        //~| ERROR constant contains unimplemented expression type\n-        //~| ERROR constant contains unimplemented expression type\n             n = (n + 1) % 5; //~ ERROR evaluation of constant value failed\n             x = &0; // Materialize a new AllocId\n         }"}, {"sha": "b8267f495de9421c87ba64444b1614cec3b45b0a", "filename": "src/test/ui/consts/const-eval/issue-52475.stderr", "status": "modified", "additions": 4, "deletions": 24, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/86734b13bb99c83333ca820e01be3aeace18af75/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fissue-52475.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/86734b13bb99c83333ca820e01be3aeace18af75/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fissue-52475.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fissue-52475.stderr?ref=86734b13bb99c83333ca820e01be3aeace18af75", "patch": "@@ -3,26 +3,6 @@ error[E0744]: `while` is not allowed in a `const`\n    |\n LL | /         while n < 5 {\n LL | |\n-LL | |\n-LL | |\n-LL | |             n = (n + 1) % 5;\n-LL | |             x = &0; // Materialize a new AllocId\n-LL | |         }\n-   | |_________^\n-\n-error[E0019]: constant contains unimplemented expression type\n-  --> $DIR/issue-52475.rs:6:15\n-   |\n-LL |         while n < 5 {\n-   |               ^^^^^\n-\n-error[E0019]: constant contains unimplemented expression type\n-  --> $DIR/issue-52475.rs:6:9\n-   |\n-LL | /         while n < 5 {\n-LL | |\n-LL | |\n-LL | |\n LL | |             n = (n + 1) % 5;\n LL | |             x = &0; // Materialize a new AllocId\n LL | |         }\n@@ -42,12 +22,12 @@ LL | |     }];\n    | |_____^\n \n error[E0080]: evaluation of constant value failed\n-  --> $DIR/issue-52475.rs:10:17\n+  --> $DIR/issue-52475.rs:8:17\n    |\n LL |             n = (n + 1) % 5;\n    |                 ^^^^^^^^^^^ duplicate interpreter state observed here, const evaluation will never terminate\n \n-error: aborting due to 4 previous errors\n+error: aborting due to 2 previous errors\n \n-Some errors have detailed explanations: E0019, E0080, E0744.\n-For more information about an error, try `rustc --explain E0019`.\n+Some errors have detailed explanations: E0080, E0744.\n+For more information about an error, try `rustc --explain E0080`."}, {"sha": "80494d1662987e98efbf5bf12896aeafe35a5887", "filename": "src/test/ui/consts/const-eval/match-test-ptr-null.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/86734b13bb99c83333ca820e01be3aeace18af75/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fmatch-test-ptr-null.rs", "raw_url": "https://github.com/rust-lang/rust/raw/86734b13bb99c83333ca820e01be3aeace18af75/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fmatch-test-ptr-null.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fmatch-test-ptr-null.rs?ref=86734b13bb99c83333ca820e01be3aeace18af75", "patch": "@@ -6,9 +6,8 @@ fn main() {\n         match &1 as *const i32 as usize {\n             //~^ ERROR casting pointers to integers in constants\n             //~| ERROR `match` is not allowed in a `const`\n-            //~| ERROR constant contains unimplemented expression type\n             //~| ERROR evaluation of constant value failed\n-            0 => 42, //~ ERROR constant contains unimplemented expression type\n+            0 => 42,\n             n => n,\n         }\n     }];"}, {"sha": "587dca4c1f279344937d0b5bc592555fea9ac14c", "filename": "src/test/ui/consts/const-eval/match-test-ptr-null.stderr", "status": "modified", "additions": 4, "deletions": 16, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/86734b13bb99c83333ca820e01be3aeace18af75/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fmatch-test-ptr-null.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/86734b13bb99c83333ca820e01be3aeace18af75/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fmatch-test-ptr-null.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fmatch-test-ptr-null.stderr?ref=86734b13bb99c83333ca820e01be3aeace18af75", "patch": "@@ -5,7 +5,7 @@ LL | /         match &1 as *const i32 as usize {\n LL | |\n LL | |\n LL | |\n-...  |\n+LL | |             0 => 42,\n LL | |             n => n,\n LL | |         }\n    | |_________^\n@@ -19,25 +19,13 @@ LL |         match &1 as *const i32 as usize {\n    = note: for more information, see https://github.com/rust-lang/rust/issues/51910\n    = help: add `#![feature(const_raw_ptr_to_usize_cast)]` to the crate attributes to enable\n \n-error[E0019]: constant contains unimplemented expression type\n-  --> $DIR/match-test-ptr-null.rs:6:15\n-   |\n-LL |         match &1 as *const i32 as usize {\n-   |               ^^^^^^^^^^^^^^^^^^^^^^^^^\n-\n-error[E0019]: constant contains unimplemented expression type\n-  --> $DIR/match-test-ptr-null.rs:11:13\n-   |\n-LL |             0 => 42,\n-   |             ^\n-\n error[E0080]: evaluation of constant value failed\n   --> $DIR/match-test-ptr-null.rs:6:15\n    |\n LL |         match &1 as *const i32 as usize {\n    |               ^^^^^^^^^^^^^^^^^^^^^^^^^ \"pointer-to-integer cast\" needs an rfc before being allowed inside constants\n \n-error: aborting due to 5 previous errors\n+error: aborting due to 3 previous errors\n \n-Some errors have detailed explanations: E0019, E0080, E0658, E0744.\n-For more information about an error, try `rustc --explain E0019`.\n+Some errors have detailed explanations: E0080, E0658, E0744.\n+For more information about an error, try `rustc --explain E0080`."}, {"sha": "b0fe5e320f4a6d759ef3bd9ee11970e80445f90c", "filename": "src/test/ui/consts/const-loop.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/86734b13bb99c83333ca820e01be3aeace18af75/src%2Ftest%2Fui%2Fconsts%2Fconst-loop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/86734b13bb99c83333ca820e01be3aeace18af75/src%2Ftest%2Fui%2Fconsts%2Fconst-loop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst-loop.rs?ref=86734b13bb99c83333ca820e01be3aeace18af75", "patch": "@@ -30,8 +30,6 @@ fn main() {\n     let x = [0; {\n         while false {}\n         //~^ ERROR `while` is not allowed in a `const`\n-        //~| ERROR constant contains unimplemented expression type\n-        //~| ERROR constant contains unimplemented expression type\n         4\n     }];\n }"}, {"sha": "2c96d18175983ae41bc9c66f38ec3f774f86e820", "filename": "src/test/ui/consts/const-loop.stderr", "status": "modified", "additions": 12, "deletions": 25, "changes": 37, "blob_url": "https://github.com/rust-lang/rust/blob/86734b13bb99c83333ca820e01be3aeace18af75/src%2Ftest%2Fui%2Fconsts%2Fconst-loop.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/86734b13bb99c83333ca820e01be3aeace18af75/src%2Ftest%2Fui%2Fconsts%2Fconst-loop.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst-loop.stderr?ref=86734b13bb99c83333ca820e01be3aeace18af75", "patch": "@@ -29,39 +29,39 @@ LL |         while false {}\n    |         ^^^^^^^^^^^^^^\n \n error[E0744]: `while` is not allowed in a `const`\n-  --> $DIR/const-loop.rs:42:5\n+  --> $DIR/const-loop.rs:40:5\n    |\n LL | /     while x < 4 {\n LL | |         x += 1;\n LL | |     }\n    | |_____^\n \n error[E0744]: `while` is not allowed in a `const`\n-  --> $DIR/const-loop.rs:46:5\n+  --> $DIR/const-loop.rs:44:5\n    |\n LL | /     while x < 8 {\n LL | |         x += 1;\n LL | |     }\n    | |_____^\n \n error[E0744]: `for` is not allowed in a `const`\n-  --> $DIR/const-loop.rs:56:5\n+  --> $DIR/const-loop.rs:54:5\n    |\n LL | /     for i in 0..4 {\n LL | |         x += i;\n LL | |     }\n    | |_____^\n \n error[E0744]: `for` is not allowed in a `const`\n-  --> $DIR/const-loop.rs:60:5\n+  --> $DIR/const-loop.rs:58:5\n    |\n LL | /     for i in 0..4 {\n LL | |         x += i;\n LL | |     }\n    | |_____^\n \n error[E0744]: `loop` is not allowed in a `const`\n-  --> $DIR/const-loop.rs:70:5\n+  --> $DIR/const-loop.rs:68:5\n    |\n LL | /     loop {\n LL | |         x += 1;\n@@ -72,15 +72,15 @@ LL | |     }\n    | |_____^\n \n error[E0744]: `if` is not allowed in a `const`\n-  --> $DIR/const-loop.rs:72:9\n+  --> $DIR/const-loop.rs:70:9\n    |\n LL | /         if x == 4 {\n LL | |             break;\n LL | |         }\n    | |_________^\n \n error[E0744]: `loop` is not allowed in a `const`\n-  --> $DIR/const-loop.rs:77:5\n+  --> $DIR/const-loop.rs:75:5\n    |\n LL | /     loop {\n LL | |         x += 1;\n@@ -91,21 +91,21 @@ LL | |     }\n    | |_____^\n \n error[E0744]: `if` is not allowed in a `const`\n-  --> $DIR/const-loop.rs:79:9\n+  --> $DIR/const-loop.rs:77:9\n    |\n LL | /         if x == 8 {\n LL | |             break;\n LL | |         }\n    | |_________^\n \n error[E0744]: `while let` is not allowed in a `const`\n-  --> $DIR/const-loop.rs:89:5\n+  --> $DIR/const-loop.rs:87:5\n    |\n LL |     while let None = Some(x) { }\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error[E0744]: `while let` is not allowed in a `const`\n-  --> $DIR/const-loop.rs:90:5\n+  --> $DIR/const-loop.rs:88:5\n    |\n LL |     while let None = Some(x) { }\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -122,19 +122,6 @@ error[E0744]: `loop` is not allowed in a `const`\n LL |     const BAR: i32 = loop { break 4; };\n    |                      ^^^^^^^^^^^^^^^^^\n \n-error[E0019]: constant contains unimplemented expression type\n-  --> $DIR/const-loop.rs:31:15\n-   |\n-LL |         while false {}\n-   |               ^^^^^\n-\n-error[E0019]: constant contains unimplemented expression type\n-  --> $DIR/const-loop.rs:31:9\n-   |\n-LL |         while false {}\n-   |         ^^^^^^^^^^^^^^\n-\n-error: aborting due to 19 previous errors\n+error: aborting due to 17 previous errors\n \n-Some errors have detailed explanations: E0019, E0744.\n-For more information about an error, try `rustc --explain E0019`.\n+For more information about this error, try `rustc --explain E0744`."}, {"sha": "38eeb327135aca496fcf17caf51778784c91e5ee", "filename": "src/test/ui/consts/miri_unleashed/enum_discriminants.stderr", "status": "modified", "additions": 31, "deletions": 12, "changes": 43, "blob_url": "https://github.com/rust-lang/rust/blob/86734b13bb99c83333ca820e01be3aeace18af75/src%2Ftest%2Fui%2Fconsts%2Fmiri_unleashed%2Fenum_discriminants.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/86734b13bb99c83333ca820e01be3aeace18af75/src%2Ftest%2Fui%2Fconsts%2Fmiri_unleashed%2Fenum_discriminants.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fmiri_unleashed%2Fenum_discriminants.stderr?ref=86734b13bb99c83333ca820e01be3aeace18af75", "patch": "@@ -1,24 +1,43 @@\n warning: skipping const checks\n-  --> $DIR/enum_discriminants.rs:23:13\n+  --> $DIR/enum_discriminants.rs:24:5\n    |\n-LL |     let x = Foo::B;\n-   |             ^^^^^^\n+LL | /     match x {\n+LL | |         Foo::B => 0,\n+LL | |         _ => panic!(),\n+LL | |     }\n+   | |_____^\n \n warning: skipping const checks\n-  --> $DIR/enum_discriminants.rs:25:9\n+  --> $DIR/enum_discriminants.rs:88:5\n    |\n-LL |         Foo::B => 0,\n-   |         ^^^^^^\n+LL | /     if let E1::V2 { .. } = (E1::V1 { f: true }) {\n+LL | |         unreachable!()\n+LL | |     }\n+   | |_____^\n \n warning: skipping const checks\n-  --> $DIR/enum_discriminants.rs:88:28\n+  --> $DIR/enum_discriminants.rs:91:5\n    |\n-LL |     if let E1::V2 { .. } = (E1::V1 { f: true }) {\n-   |                            ^^^^^^^^^^^^^^^^^^^^\n+LL | /     if let E1::V1 { .. } = (E1::V1 { f: true }) {\n+LL | |     } else {\n+LL | |         unreachable!()\n+LL | |     }\n+   | |_____^\n \n warning: skipping const checks\n-  --> $DIR/enum_discriminants.rs:88:12\n+  --> $DIR/enum_discriminants.rs:96:5\n    |\n-LL |     if let E1::V2 { .. } = (E1::V1 { f: true }) {\n-   |            ^^^^^^^^^^^^^\n+LL | /     if let E2::V1 { .. } = E2::V3::<Infallible> {\n+LL | |         unreachable!()\n+LL | |     }\n+   | |_____^\n+\n+warning: skipping const checks\n+  --> $DIR/enum_discriminants.rs:99:5\n+   |\n+LL | /     if let E2::V3 { .. } = E2::V3::<Infallible> {\n+LL | |     } else {\n+LL | |         unreachable!()\n+LL | |     }\n+   | |_____^\n "}, {"sha": "d5756737f1791cd9c88c221ca4f0f0f6b8f4a176", "filename": "src/test/ui/rfc-2497-if-let-chains/disallowed-positions.rs", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/86734b13bb99c83333ca820e01be3aeace18af75/src%2Ftest%2Fui%2Frfc-2497-if-let-chains%2Fdisallowed-positions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/86734b13bb99c83333ca820e01be3aeace18af75/src%2Ftest%2Fui%2Frfc-2497-if-let-chains%2Fdisallowed-positions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2497-if-let-chains%2Fdisallowed-positions.rs?ref=86734b13bb99c83333ca820e01be3aeace18af75", "patch": "@@ -216,22 +216,16 @@ fn inside_const_generic_arguments() {\n \n     if let A::<{\n         true && let 1 = 1 //~ ERROR `let` expressions are not supported here\n-        //~^ ERROR constant contains unimplemented expression type\n-        //~| ERROR constant contains unimplemented expression type\n         //~| ERROR `match` is not allowed in a `const`\n     }>::O = 5 {}\n \n     while let A::<{\n         true && let 1 = 1 //~ ERROR `let` expressions are not supported here\n-        //~^ ERROR constant contains unimplemented expression type\n-        //~| ERROR constant contains unimplemented expression type\n         //~| ERROR `match` is not allowed in a `const`\n     }>::O = 5 {}\n \n     if A::<{\n         true && let 1 = 1 //~ ERROR `let` expressions are not supported here\n-        //~^ ERROR constant contains unimplemented expression type\n-        //~| ERROR constant contains unimplemented expression type\n         //~| ERROR `match` is not allowed in a `const`\n     }>::O == 5 {}\n "}, {"sha": "aa7c342819e8030e8ce8760b69a5f291065c146e", "filename": "src/test/ui/rfc-2497-if-let-chains/disallowed-positions.stderr", "status": "modified", "additions": 8, "deletions": 44, "changes": 52, "blob_url": "https://github.com/rust-lang/rust/blob/86734b13bb99c83333ca820e01be3aeace18af75/src%2Ftest%2Fui%2Frfc-2497-if-let-chains%2Fdisallowed-positions.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/86734b13bb99c83333ca820e01be3aeace18af75/src%2Ftest%2Fui%2Frfc-2497-if-let-chains%2Fdisallowed-positions.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2497-if-let-chains%2Fdisallowed-positions.stderr?ref=86734b13bb99c83333ca820e01be3aeace18af75", "patch": "@@ -1,5 +1,5 @@\n error: expected one of `,` or `>`, found `&&`\n-  --> $DIR/disallowed-positions.rs:245:14\n+  --> $DIR/disallowed-positions.rs:239:14\n    |\n LL |         true && let 1 = 1\n    |              ^^ expected one of `,` or `>`\n@@ -482,7 +482,7 @@ LL |         true && let 1 = 1\n    = note: as well as when nested within `&&` and parenthesis in those conditions\n \n error: `let` expressions are not supported here\n-  --> $DIR/disallowed-positions.rs:225:17\n+  --> $DIR/disallowed-positions.rs:223:17\n    |\n LL |         true && let 1 = 1\n    |                 ^^^^^^^^^\n@@ -491,7 +491,7 @@ LL |         true && let 1 = 1\n    = note: as well as when nested within `&&` and parenthesis in those conditions\n \n error: `let` expressions are not supported here\n-  --> $DIR/disallowed-positions.rs:232:17\n+  --> $DIR/disallowed-positions.rs:228:17\n    |\n LL |         true && let 1 = 1\n    |                 ^^^^^^^^^\n@@ -520,13 +520,13 @@ LL |         true && let 1 = 1\n    |                 ^^^^^^^^^\n \n error[E0744]: `match` is not allowed in a `const`\n-  --> $DIR/disallowed-positions.rs:225:17\n+  --> $DIR/disallowed-positions.rs:223:17\n    |\n LL |         true && let 1 = 1\n    |                 ^^^^^^^^^\n \n error[E0744]: `match` is not allowed in a `const`\n-  --> $DIR/disallowed-positions.rs:232:17\n+  --> $DIR/disallowed-positions.rs:228:17\n    |\n LL |         true && let 1 = 1\n    |                 ^^^^^^^^^\n@@ -971,43 +971,7 @@ LL |         let 0 = 0?;\n    = help: the trait `std::ops::Try` is not implemented for `{integer}`\n    = note: required by `std::ops::Try::into_result`\n \n-error[E0019]: constant contains unimplemented expression type\n-  --> $DIR/disallowed-positions.rs:218:25\n-   |\n-LL |         true && let 1 = 1\n-   |                         ^\n-\n-error[E0019]: constant contains unimplemented expression type\n-  --> $DIR/disallowed-positions.rs:218:21\n-   |\n-LL |         true && let 1 = 1\n-   |                     ^\n-\n-error[E0019]: constant contains unimplemented expression type\n-  --> $DIR/disallowed-positions.rs:225:25\n-   |\n-LL |         true && let 1 = 1\n-   |                         ^\n-\n-error[E0019]: constant contains unimplemented expression type\n-  --> $DIR/disallowed-positions.rs:225:21\n-   |\n-LL |         true && let 1 = 1\n-   |                     ^\n-\n-error[E0019]: constant contains unimplemented expression type\n-  --> $DIR/disallowed-positions.rs:232:25\n-   |\n-LL |         true && let 1 = 1\n-   |                         ^\n-\n-error[E0019]: constant contains unimplemented expression type\n-  --> $DIR/disallowed-positions.rs:232:21\n-   |\n-LL |         true && let 1 = 1\n-   |                     ^\n-\n-error: aborting due to 112 previous errors\n+error: aborting due to 106 previous errors\n \n-Some errors have detailed explanations: E0019, E0277, E0308, E0600, E0614, E0744.\n-For more information about an error, try `rustc --explain E0019`.\n+Some errors have detailed explanations: E0277, E0308, E0600, E0614, E0744.\n+For more information about an error, try `rustc --explain E0277`."}]}