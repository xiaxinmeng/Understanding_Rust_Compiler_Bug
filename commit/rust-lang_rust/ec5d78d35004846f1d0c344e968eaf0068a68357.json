{"sha": "ec5d78d35004846f1d0c344e968eaf0068a68357", "node_id": "MDY6Q29tbWl0NzI0NzEyOmVjNWQ3OGQzNTAwNDg0NmYxZDBjMzQ0ZTk2OGVhZjAwNjhhNjgzNTc=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2020-08-07T10:27:53Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2020-08-07T10:38:55Z"}, "message": "fix feature gate and tracking issue", "tree": {"sha": "c9a726417bd37718bd41659aba56550c3fa2af8f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c9a726417bd37718bd41659aba56550c3fa2af8f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ec5d78d35004846f1d0c344e968eaf0068a68357", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ec5d78d35004846f1d0c344e968eaf0068a68357", "html_url": "https://github.com/rust-lang/rust/commit/ec5d78d35004846f1d0c344e968eaf0068a68357", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ec5d78d35004846f1d0c344e968eaf0068a68357/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0aee186723a3bb3290fd4348b92b3c1aad862fc9", "url": "https://api.github.com/repos/rust-lang/rust/commits/0aee186723a3bb3290fd4348b92b3c1aad862fc9", "html_url": "https://github.com/rust-lang/rust/commit/0aee186723a3bb3290fd4348b92b3c1aad862fc9"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "027498d3911c8fcac38383ee5df5cb0add760480", "filename": "library/core/src/mem/maybe_uninit.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ec5d78d35004846f1d0c344e968eaf0068a68357/library%2Fcore%2Fsrc%2Fmem%2Fmaybe_uninit.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ec5d78d35004846f1d0c344e968eaf0068a68357/library%2Fcore%2Fsrc%2Fmem%2Fmaybe_uninit.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fmem%2Fmaybe_uninit.rs?ref=ec5d78d35004846f1d0c344e968eaf0068a68357", "patch": "@@ -405,7 +405,7 @@ impl<T> MaybeUninit<T> {\n     /// (Notice that the rules around references to uninitialized data are not finalized yet, but\n     /// until they are, it is advisable to avoid them.)\n     #[stable(feature = \"maybe_uninit\", since = \"1.36.0\")]\n-    #[rustc_const_unstable(feature=\"maybe_uninit_as_ptr\", issue = \"none\")]\n+    #[rustc_const_unstable(feature = \"const_maybe_uninit_as_ptr\", issue = \"75251\")]\n     #[inline(always)]\n     pub const fn as_ptr(&self) -> *const T {\n         // `MaybeUninit` and `ManuallyDrop` are both `repr(transparent)` so we can cast the pointer.\n@@ -444,7 +444,7 @@ impl<T> MaybeUninit<T> {\n     /// (Notice that the rules around references to uninitialized data are not finalized yet, but\n     /// until they are, it is advisable to avoid them.)\n     #[stable(feature = \"maybe_uninit\", since = \"1.36.0\")]\n-    #[rustc_const_unstable(feature=\"maybe_uninit_as_ptr\", issue = \"none\")]\n+    #[rustc_const_unstable(feature = \"const_maybe_uninit_as_ptr\", issue = \"75251\")]\n     #[inline(always)]\n     pub const fn as_mut_ptr(&mut self) -> *mut T {\n         // `MaybeUninit` and `ManuallyDrop` are both `repr(transparent)` so we can cast the pointer."}]}