{"sha": "43651aa34fd7762058aea6920d2e401561d97076", "node_id": "C_kwDOAAsO6NoAKDQzNjUxYWEzNGZkNzc2MjA1OGFlYTY5MjBkMmU0MDE1NjFkOTcwNzY", "commit": {"author": {"name": "Mara Bos", "email": "m-ou.se@m-ou.se", "date": "2022-04-06T20:14:43Z"}, "committer": {"name": "Mara Bos", "email": "m-ou.se@m-ou.se", "date": "2022-04-12T06:44:39Z"}, "message": "Initialize thread local with const{}.", "tree": {"sha": "edd0aaf1992d03fc73646347efb0430a5c5cad03", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/edd0aaf1992d03fc73646347efb0430a5c5cad03"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/43651aa34fd7762058aea6920d2e401561d97076", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/43651aa34fd7762058aea6920d2e401561d97076", "html_url": "https://github.com/rust-lang/rust/commit/43651aa34fd7762058aea6920d2e401561d97076", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/43651aa34fd7762058aea6920d2e401561d97076/comments", "author": {"login": "m-ou-se", "id": 783247, "node_id": "MDQ6VXNlcjc4MzI0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/783247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-ou-se", "html_url": "https://github.com/m-ou-se", "followers_url": "https://api.github.com/users/m-ou-se/followers", "following_url": "https://api.github.com/users/m-ou-se/following{/other_user}", "gists_url": "https://api.github.com/users/m-ou-se/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-ou-se/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-ou-se/subscriptions", "organizations_url": "https://api.github.com/users/m-ou-se/orgs", "repos_url": "https://api.github.com/users/m-ou-se/repos", "events_url": "https://api.github.com/users/m-ou-se/events{/privacy}", "received_events_url": "https://api.github.com/users/m-ou-se/received_events", "type": "User", "site_admin": false}, "committer": {"login": "m-ou-se", "id": 783247, "node_id": "MDQ6VXNlcjc4MzI0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/783247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-ou-se", "html_url": "https://github.com/m-ou-se", "followers_url": "https://api.github.com/users/m-ou-se/followers", "following_url": "https://api.github.com/users/m-ou-se/following{/other_user}", "gists_url": "https://api.github.com/users/m-ou-se/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-ou-se/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-ou-se/subscriptions", "organizations_url": "https://api.github.com/users/m-ou-se/orgs", "repos_url": "https://api.github.com/users/m-ou-se/repos", "events_url": "https://api.github.com/users/m-ou-se/events{/privacy}", "received_events_url": "https://api.github.com/users/m-ou-se/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "319a9b0f71d21409858297357bc047fb7a6ba27f", "url": "https://api.github.com/repos/rust-lang/rust/commits/319a9b0f71d21409858297357bc047fb7a6ba27f", "html_url": "https://github.com/rust-lang/rust/commit/319a9b0f71d21409858297357bc047fb7a6ba27f"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "0c7fb098c5f634db1ca5a347cc2619be9dcdb66f", "filename": "library/std/src/sys/unix/locks/futex.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/43651aa34fd7762058aea6920d2e401561d97076/library%2Fstd%2Fsrc%2Fsys%2Funix%2Flocks%2Ffutex.rs", "raw_url": "https://github.com/rust-lang/rust/raw/43651aa34fd7762058aea6920d2e401561d97076/library%2Fstd%2Fsrc%2Fsys%2Funix%2Flocks%2Ffutex.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys%2Funix%2Flocks%2Ffutex.rs?ref=43651aa34fd7762058aea6920d2e401561d97076", "patch": "@@ -253,6 +253,6 @@ impl ReentrantMutex {\n /// This can be used as a non-null usize-sized ID.\n pub fn current_thread_unique_ptr() -> usize {\n     // Use a non-drop type to make sure it's still available during thread destruction.\n-    thread_local! { static X: u8 = 0 }\n+    thread_local! { static X: u8 = const { 0 } }\n     X.with(|x| <*const _>::addr(x))\n }"}]}