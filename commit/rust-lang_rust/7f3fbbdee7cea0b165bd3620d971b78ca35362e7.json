{"sha": "7f3fbbdee7cea0b165bd3620d971b78ca35362e7", "node_id": "C_kwDOAAsO6NoAKDdmM2ZiYmRlZTdjZWEwYjE2NWJkMzYyMGQ5NzFiNzhjYTM1MzYyZTc", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2022-06-30T22:41:32Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2022-07-01T02:24:23Z"}, "message": "allocation tracking: also print size, alignment, kind of the allocation", "tree": {"sha": "ae03e207b7925b7507f74616630b9cb14e096615", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ae03e207b7925b7507f74616630b9cb14e096615"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7f3fbbdee7cea0b165bd3620d971b78ca35362e7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7f3fbbdee7cea0b165bd3620d971b78ca35362e7", "html_url": "https://github.com/rust-lang/rust/commit/7f3fbbdee7cea0b165bd3620d971b78ca35362e7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7f3fbbdee7cea0b165bd3620d971b78ca35362e7/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "38effb37da1c5bbf95bbfe8c520e7ccfe4bd8285", "url": "https://api.github.com/repos/rust-lang/rust/commits/38effb37da1c5bbf95bbfe8c520e7ccfe4bd8285", "html_url": "https://github.com/rust-lang/rust/commit/38effb37da1c5bbf95bbfe8c520e7ccfe4bd8285"}], "stats": {"total": 18, "additions": 13, "deletions": 5}, "files": [{"sha": "1ffcdc799edf059c1cff168d30a0228c830708c7", "filename": "src/diagnostics.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/7f3fbbdee7cea0b165bd3620d971b78ca35362e7/src%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7f3fbbdee7cea0b165bd3620d971b78ca35362e7/src%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdiagnostics.rs?ref=7f3fbbdee7cea0b165bd3620d971b78ca35362e7", "patch": "@@ -6,6 +6,7 @@ use log::trace;\n \n use rustc_middle::ty;\n use rustc_span::{source_map::DUMMY_SP, Span, SpanData, Symbol};\n+use rustc_target::abi::{Align, Size};\n \n use crate::helpers::HexRange;\n use crate::stacked_borrows::{diagnostics::TagHistory, AccessKind};\n@@ -71,7 +72,7 @@ pub enum NonHaltingDiagnostic {\n     /// a deallocation when the second argument is `None`.\n     PoppedPointerTag(Item, Option<(SbTagExtra, AccessKind)>),\n     CreatedCallId(CallId),\n-    CreatedAlloc(AllocId),\n+    CreatedAlloc(AllocId, Size, Align, MemoryKind<MiriMemoryKind>),\n     FreedAlloc(AllocId),\n     RejectedIsolatedOp(String),\n     ProgressReport,\n@@ -463,7 +464,8 @@ pub trait EvalContextExt<'mir, 'tcx: 'mir>: crate::MiriEvalContextExt<'mir, 'tcx\n                             }\n                         },\n                     CreatedCallId(id) => format!(\"function call with id {id}\"),\n-                    CreatedAlloc(AllocId(id)) => format!(\"created allocation with id {id}\"),\n+                    CreatedAlloc(AllocId(id), size, align, kind) =>\n+                        format!(\"created {kind} allocation of {} bytes (alignment {} bytes) with id {id}\", size.bytes(), align.bytes()),\n                     FreedAlloc(AllocId(id)) => format!(\"freed allocation with id {id}\"),\n                     RejectedIsolatedOp(ref op) =>\n                         format!(\"{op} was made to return an error due to isolation\"),"}, {"sha": "abc55cde737eca018668abf8d76c528940a5b143", "filename": "src/machine.rs", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/7f3fbbdee7cea0b165bd3620d971b78ca35362e7/src%2Fmachine.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7f3fbbdee7cea0b165bd3620d971b78ca35362e7/src%2Fmachine.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fmachine.rs?ref=7f3fbbdee7cea0b165bd3620d971b78ca35362e7", "patch": "@@ -624,11 +624,16 @@ impl<'mir, 'tcx> Machine<'mir, 'tcx> for Evaluator<'mir, 'tcx> {\n         alloc: Cow<'b, Allocation>,\n         kind: Option<MemoryKind<Self::MemoryKind>>,\n     ) -> InterpResult<'tcx, Cow<'b, Allocation<Self::PointerTag, Self::AllocExtra>>> {\n+        let kind = kind.expect(\"we set our STATIC_KIND so this cannot be None\");\n         if ecx.machine.tracked_alloc_ids.contains(&id) {\n-            register_diagnostic(NonHaltingDiagnostic::CreatedAlloc(id));\n+            register_diagnostic(NonHaltingDiagnostic::CreatedAlloc(\n+                id,\n+                alloc.size(),\n+                alloc.align,\n+                kind,\n+            ));\n         }\n \n-        let kind = kind.expect(\"we set our STATIC_KIND so this cannot be None\");\n         let alloc = alloc.into_owned();\n         let stacks = if let Some(stacked_borrows) = &ecx.machine.stacked_borrows {\n             Some(Stacks::new_allocation("}, {"sha": "bbd88ed5d53e0cb22344fe40f727c68084ef20ab", "filename": "tests/pass/track-alloc-1.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/7f3fbbdee7cea0b165bd3620d971b78ca35362e7/tests%2Fpass%2Ftrack-alloc-1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7f3fbbdee7cea0b165bd3620d971b78ca35362e7/tests%2Fpass%2Ftrack-alloc-1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fpass%2Ftrack-alloc-1.rs?ref=7f3fbbdee7cea0b165bd3620d971b78ca35362e7", "patch": "@@ -2,4 +2,5 @@\n // Early allocations are probably part of the runtime and therefore uninteresting, but they\n // shouldn't cause a crash.\n // compile-flags: -Zmiri-track-alloc-id=1\n+// normalize-stderr-test: \"[48] bytes\" -> \"SIZE bytes\"\n fn main() {}"}, {"sha": "7206edbb7010b9cdd66ca197c98faa0ca4d1d4f2", "filename": "tests/pass/track-alloc-1.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7f3fbbdee7cea0b165bd3620d971b78ca35362e7/tests%2Fpass%2Ftrack-alloc-1.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7f3fbbdee7cea0b165bd3620d971b78ca35362e7/tests%2Fpass%2Ftrack-alloc-1.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fpass%2Ftrack-alloc-1.stderr?ref=7f3fbbdee7cea0b165bd3620d971b78ca35362e7", "patch": "@@ -1,5 +1,5 @@\n note: tracking was triggered\n    |\n-   = note: created allocation with id 1\n+   = note: created extern static allocation of SIZE bytes (alignment ALIGN bytes) with id 1\n    = note: (no span available)\n "}]}