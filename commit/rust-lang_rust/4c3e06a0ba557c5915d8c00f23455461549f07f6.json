{"sha": "4c3e06a0ba557c5915d8c00f23455461549f07f6", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRjM2UwNmEwYmE1NTdjNTkxNWQ4YzAwZjIzNDU1NDYxNTQ5ZjA3ZjY=", "commit": {"author": {"name": "Tomasz Mi\u0105sko", "email": "tomasz.miasko@gmail.com", "date": "2020-10-17T00:00:00Z"}, "committer": {"name": "Tomasz Mi\u0105sko", "email": "tomasz.miasko@gmail.com", "date": "2020-10-26T09:48:28Z"}, "message": "simplify-locals: Remove unused assignments regardless of rvalue kind", "tree": {"sha": "e0b64a5783458c55f6c30a60969b3268055bc5ba", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e0b64a5783458c55f6c30a60969b3268055bc5ba"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4c3e06a0ba557c5915d8c00f23455461549f07f6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4c3e06a0ba557c5915d8c00f23455461549f07f6", "html_url": "https://github.com/rust-lang/rust/commit/4c3e06a0ba557c5915d8c00f23455461549f07f6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4c3e06a0ba557c5915d8c00f23455461549f07f6/comments", "author": {"login": "tmiasko", "id": 51362316, "node_id": "MDQ6VXNlcjUxMzYyMzE2", "avatar_url": "https://avatars.githubusercontent.com/u/51362316?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tmiasko", "html_url": "https://github.com/tmiasko", "followers_url": "https://api.github.com/users/tmiasko/followers", "following_url": "https://api.github.com/users/tmiasko/following{/other_user}", "gists_url": "https://api.github.com/users/tmiasko/gists{/gist_id}", "starred_url": "https://api.github.com/users/tmiasko/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tmiasko/subscriptions", "organizations_url": "https://api.github.com/users/tmiasko/orgs", "repos_url": "https://api.github.com/users/tmiasko/repos", "events_url": "https://api.github.com/users/tmiasko/events{/privacy}", "received_events_url": "https://api.github.com/users/tmiasko/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tmiasko", "id": 51362316, "node_id": "MDQ6VXNlcjUxMzYyMzE2", "avatar_url": "https://avatars.githubusercontent.com/u/51362316?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tmiasko", "html_url": "https://github.com/tmiasko", "followers_url": "https://api.github.com/users/tmiasko/followers", "following_url": "https://api.github.com/users/tmiasko/following{/other_user}", "gists_url": "https://api.github.com/users/tmiasko/gists{/gist_id}", "starred_url": "https://api.github.com/users/tmiasko/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tmiasko/subscriptions", "organizations_url": "https://api.github.com/users/tmiasko/orgs", "repos_url": "https://api.github.com/users/tmiasko/repos", "events_url": "https://api.github.com/users/tmiasko/events{/privacy}", "received_events_url": "https://api.github.com/users/tmiasko/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "52d37826858ee4dad6b66a3060994f41df247770", "url": "https://api.github.com/repos/rust-lang/rust/commits/52d37826858ee4dad6b66a3060994f41df247770", "html_url": "https://github.com/rust-lang/rust/commit/52d37826858ee4dad6b66a3060994f41df247770"}], "stats": {"total": 105, "additions": 36, "deletions": 69}, "files": [{"sha": "b7c9a3a8688ec7907c976b0b5363dffbe09c09f4", "filename": "compiler/rustc_mir/src/transform/simplify.rs", "status": "modified", "additions": 1, "deletions": 25, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/4c3e06a0ba557c5915d8c00f23455461549f07f6/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Fsimplify.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4c3e06a0ba557c5915d8c00f23455461549f07f6/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Fsimplify.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Fsimplify.rs?ref=4c3e06a0ba557c5915d8c00f23455461549f07f6", "patch": "@@ -439,31 +439,7 @@ impl Visitor<'_> for UsedLocals {\n             StatementKind::StorageLive(_local) | StatementKind::StorageDead(_local) => {}\n \n             StatementKind::Assign(box (ref place, ref rvalue)) => {\n-                let can_skip = match rvalue {\n-                    Rvalue::Use(_)\n-                    | Rvalue::Discriminant(_)\n-                    | Rvalue::BinaryOp(_, _, _)\n-                    | Rvalue::CheckedBinaryOp(_, _, _)\n-                    | Rvalue::Repeat(_, _)\n-                    | Rvalue::AddressOf(_, _)\n-                    | Rvalue::Len(_)\n-                    | Rvalue::UnaryOp(_, _)\n-                    | Rvalue::Aggregate(_, _) => true,\n-\n-                    Rvalue::Ref(..)\n-                    | Rvalue::ThreadLocalRef(..)\n-                    | Rvalue::Cast(..)\n-                    | Rvalue::NullaryOp(..) => false,\n-                };\n-                if can_skip {\n-                    self.visit_lhs(place, location);\n-                } else {\n-                    self.visit_place(\n-                        place,\n-                        PlaceContext::MutatingUse(MutatingUseContext::Store),\n-                        location,\n-                    );\n-                }\n+                self.visit_lhs(place, location);\n                 self.visit_rvalue(rvalue, location);\n             }\n "}, {"sha": "ce6757a047cb363244d787560162a229e5a9a6ca", "filename": "src/test/codegen-units/item-collection/instantiation-through-vtable.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/4c3e06a0ba557c5915d8c00f23455461549f07f6/src%2Ftest%2Fcodegen-units%2Fitem-collection%2Finstantiation-through-vtable.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4c3e06a0ba557c5915d8c00f23455461549f07f6/src%2Ftest%2Fcodegen-units%2Fitem-collection%2Finstantiation-through-vtable.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcodegen-units%2Fitem-collection%2Finstantiation-through-vtable.rs?ref=4c3e06a0ba557c5915d8c00f23455461549f07f6", "patch": "@@ -1,6 +1,5 @@\n // ignore-tidy-linelength\n-// compile-flags:-Zprint-mono-items=eager\n-// compile-flags:-Zinline-in-all-cgus\n+// compile-flags:-Zprint-mono-items=eager -Zinline-in-all-cgus -Zmir-opt-level=0\n \n #![deny(dead_code)]\n #![feature(start)]"}, {"sha": "da35789ce8de79fc5e719f13f8052126f29f2c88", "filename": "src/test/codegen/lifetime_start_end.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/4c3e06a0ba557c5915d8c00f23455461549f07f6/src%2Ftest%2Fcodegen%2Flifetime_start_end.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4c3e06a0ba557c5915d8c00f23455461549f07f6/src%2Ftest%2Fcodegen%2Flifetime_start_end.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcodegen%2Flifetime_start_end.rs?ref=4c3e06a0ba557c5915d8c00f23455461549f07f6", "patch": "@@ -1,4 +1,4 @@\n-// compile-flags: -O -C no-prepopulate-passes\n+// compile-flags: -O -C no-prepopulate-passes -Zmir-opt-level=0\n \n #![crate_type = \"lib\"]\n \n@@ -18,10 +18,10 @@ pub fn test() {\n // CHECK: [[S_b:%[0-9]+]] = bitcast { i32, i32 }** %b to i8*\n // CHECK: call void @llvm.lifetime.start{{.*}}(i{{[0-9 ]+}}, i8* [[S_b]])\n \n-// CHECK: [[S__4:%[0-9]+]] = bitcast { i32, i32 }* %_4 to i8*\n+// CHECK: [[S__4:%[0-9]+]] = bitcast { i32, i32 }* %_5 to i8*\n // CHECK: call void @llvm.lifetime.start{{.*}}(i{{[0-9 ]+}}, i8* [[S__4]])\n \n-// CHECK: [[E__4:%[0-9]+]] = bitcast { i32, i32 }* %_4 to i8*\n+// CHECK: [[E__4:%[0-9]+]] = bitcast { i32, i32 }* %_5 to i8*\n // CHECK: call void @llvm.lifetime.end{{.*}}(i{{[0-9 ]+}}, i8* [[E__4]])\n \n // CHECK: [[E_b:%[0-9]+]] = bitcast { i32, i32 }** %b to i8*"}, {"sha": "3c9ecec2cbf58aee3c31f04304ae2879cb560d1c", "filename": "src/test/codegen/loads.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4c3e06a0ba557c5915d8c00f23455461549f07f6/src%2Ftest%2Fcodegen%2Floads.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4c3e06a0ba557c5915d8c00f23455461549f07f6/src%2Ftest%2Fcodegen%2Floads.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcodegen%2Floads.rs?ref=4c3e06a0ba557c5915d8c00f23455461549f07f6", "patch": "@@ -1,4 +1,4 @@\n-// compile-flags: -C no-prepopulate-passes\n+// compile-flags: -C no-prepopulate-passes -Zmir-opt-level=0\n \n #![crate_type = \"lib\"]\n "}, {"sha": "5e76f1d67e6f7ea9d7d1912fa4ffacfcd75b3fac", "filename": "src/test/codegen/naked-functions.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4c3e06a0ba557c5915d8c00f23455461549f07f6/src%2Ftest%2Fcodegen%2Fnaked-functions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4c3e06a0ba557c5915d8c00f23455461549f07f6/src%2Ftest%2Fcodegen%2Fnaked-functions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcodegen%2Fnaked-functions.rs?ref=4c3e06a0ba557c5915d8c00f23455461549f07f6", "patch": "@@ -1,4 +1,4 @@\n-// compile-flags: -C no-prepopulate-passes\n+// compile-flags: -C no-prepopulate-passes -Zmir-opt-level=0\n \n #![crate_type = \"lib\"]\n #![feature(naked_functions)]"}, {"sha": "b4cc26f3f9d79976564abfc9de8c00685fd23c0a", "filename": "src/test/codegen/refs.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4c3e06a0ba557c5915d8c00f23455461549f07f6/src%2Ftest%2Fcodegen%2Frefs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4c3e06a0ba557c5915d8c00f23455461549f07f6/src%2Ftest%2Fcodegen%2Frefs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcodegen%2Frefs.rs?ref=4c3e06a0ba557c5915d8c00f23455461549f07f6", "patch": "@@ -1,4 +1,4 @@\n-// compile-flags: -C no-prepopulate-passes\n+// compile-flags: -C no-prepopulate-passes -Zmir-opt-level=0\n \n #![crate_type = \"lib\"]\n "}, {"sha": "4a00a6c72f79ea2572b4b29bca8eea9e8b931b15", "filename": "src/test/incremental/hashes/closure_expressions.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/4c3e06a0ba557c5915d8c00f23455461549f07f6/src%2Ftest%2Fincremental%2Fhashes%2Fclosure_expressions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4c3e06a0ba557c5915d8c00f23455461549f07f6/src%2Ftest%2Fincremental%2Fhashes%2Fclosure_expressions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fincremental%2Fhashes%2Fclosure_expressions.rs?ref=4c3e06a0ba557c5915d8c00f23455461549f07f6", "patch": "@@ -7,7 +7,7 @@\n \n // build-pass (FIXME(62277): could be check-pass?)\n // revisions: cfail1 cfail2 cfail3\n-// compile-flags: -Z query-dep-graph -Zincremental-ignore-spans\n+// compile-flags: -Z query-dep-graph -Zincremental-ignore-spans -Zmir-opt-level=0\n \n #![allow(warnings)]\n #![feature(rustc_attrs)]\n@@ -53,7 +53,7 @@ pub fn change_parameter_pattern() {\n }\n \n #[cfg(not(cfail1))]\n-#[rustc_clean(cfg=\"cfail2\", except=\"hir_owner_nodes, typeck\")]\n+#[rustc_clean(cfg=\"cfail2\", except=\"hir_owner_nodes, typeck, optimized_mir\")]\n #[rustc_clean(cfg=\"cfail3\")]\n pub fn change_parameter_pattern() {\n     let _ = |(x,): (u32,)| x;"}, {"sha": "dbac7dff9e2bbb953efe360636916dbdd69e56b2", "filename": "src/test/mir-opt/simplify_locals.c.SimplifyLocals.diff", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/4c3e06a0ba557c5915d8c00f23455461549f07f6/src%2Ftest%2Fmir-opt%2Fsimplify_locals.c.SimplifyLocals.diff", "raw_url": "https://github.com/rust-lang/rust/raw/4c3e06a0ba557c5915d8c00f23455461549f07f6/src%2Ftest%2Fmir-opt%2Fsimplify_locals.c.SimplifyLocals.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fsimplify_locals.c.SimplifyLocals.diff?ref=4c3e06a0ba557c5915d8c00f23455461549f07f6", "patch": "@@ -4,8 +4,8 @@\n   fn c() -> () {\n       let mut _0: ();                      // return place in scope 0 at $DIR/simplify-locals.rs:13:8: 13:8\n       let _1: [u8; 10];                    // in scope 0 at $DIR/simplify-locals.rs:14:9: 14:14\n-      let mut _2: &[u8];                   // in scope 0 at $DIR/simplify-locals.rs:16:20: 16:26\n-      let mut _3: &[u8; 10];               // in scope 0 at $DIR/simplify-locals.rs:16:20: 16:26\n+-     let mut _2: &[u8];                   // in scope 0 at $DIR/simplify-locals.rs:16:20: 16:26\n+-     let mut _3: &[u8; 10];               // in scope 0 at $DIR/simplify-locals.rs:16:20: 16:26\n -     let _4: &[u8; 10];                   // in scope 0 at $DIR/simplify-locals.rs:16:20: 16:26\n       scope 1 {\n           debug bytes => _1;               // in scope 1 at $DIR/simplify-locals.rs:14:9: 14:14\n@@ -16,10 +16,10 @@\n       bb0: {\n           StorageLive(_1);                 // scope 0 at $DIR/simplify-locals.rs:14:9: 14:14\n           _1 = [const 0_u8; 10];           // scope 0 at $DIR/simplify-locals.rs:14:17: 14:26\n-          StorageLive(_2);                 // scope 1 at $DIR/simplify-locals.rs:16:20: 16:26\n-          _3 = &_1;                        // scope 1 at $DIR/simplify-locals.rs:16:20: 16:26\n-          _2 = move _3 as &[u8] (Pointer(Unsize)); // scope 1 at $DIR/simplify-locals.rs:16:20: 16:26\n-          StorageDead(_2);                 // scope 1 at $DIR/simplify-locals.rs:16:26: 16:27\n+-         StorageLive(_2);                 // scope 1 at $DIR/simplify-locals.rs:16:20: 16:26\n+-         _3 = &_1;                        // scope 1 at $DIR/simplify-locals.rs:16:20: 16:26\n+-         _2 = move _3 as &[u8] (Pointer(Unsize)); // scope 1 at $DIR/simplify-locals.rs:16:20: 16:26\n+-         StorageDead(_2);                 // scope 1 at $DIR/simplify-locals.rs:16:26: 16:27\n           _0 = const ();                   // scope 0 at $DIR/simplify-locals.rs:13:8: 17:2\n           StorageDead(_1);                 // scope 0 at $DIR/simplify-locals.rs:17:1: 17:2\n           return;                          // scope 0 at $DIR/simplify-locals.rs:17:2: 17:2"}, {"sha": "85cf398d316939650d99bb46100dad1cbc0ae696", "filename": "src/test/mir-opt/simplify_locals.r.SimplifyLocals.diff", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/4c3e06a0ba557c5915d8c00f23455461549f07f6/src%2Ftest%2Fmir-opt%2Fsimplify_locals.r.SimplifyLocals.diff", "raw_url": "https://github.com/rust-lang/rust/raw/4c3e06a0ba557c5915d8c00f23455461549f07f6/src%2Ftest%2Fmir-opt%2Fsimplify_locals.r.SimplifyLocals.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fsimplify_locals.r.SimplifyLocals.diff?ref=4c3e06a0ba557c5915d8c00f23455461549f07f6", "patch": "@@ -4,8 +4,8 @@\n   fn r() -> () {\n       let mut _0: ();                      // return place in scope 0 at $DIR/simplify-locals.rs:32:8: 32:8\n       let mut _1: i32;                     // in scope 0 at $DIR/simplify-locals.rs:33:9: 33:14\n-      let mut _2: &i32;                    // in scope 0 at $DIR/simplify-locals.rs:35:13: 35:15\n-      let mut _3: &mut i32;                // in scope 0 at $DIR/simplify-locals.rs:36:13: 36:19\n+-     let mut _2: &i32;                    // in scope 0 at $DIR/simplify-locals.rs:35:13: 35:15\n+-     let mut _3: &mut i32;                // in scope 0 at $DIR/simplify-locals.rs:36:13: 36:19\n       scope 1 {\n           debug a => _1;                   // in scope 1 at $DIR/simplify-locals.rs:33:9: 33:14\n           scope 2 {\n@@ -17,12 +17,12 @@\n       bb0: {\n           StorageLive(_1);                 // scope 0 at $DIR/simplify-locals.rs:33:9: 33:14\n           _1 = const 1_i32;                // scope 0 at $DIR/simplify-locals.rs:33:17: 33:18\n-          StorageLive(_2);                 // scope 1 at $DIR/simplify-locals.rs:35:13: 35:15\n-          _2 = &_1;                        // scope 1 at $DIR/simplify-locals.rs:35:13: 35:15\n-          StorageDead(_2);                 // scope 1 at $DIR/simplify-locals.rs:35:15: 35:16\n-          StorageLive(_3);                 // scope 2 at $DIR/simplify-locals.rs:36:13: 36:19\n-          _3 = &mut _1;                    // scope 2 at $DIR/simplify-locals.rs:36:13: 36:19\n-          StorageDead(_3);                 // scope 2 at $DIR/simplify-locals.rs:36:19: 36:20\n+-         StorageLive(_2);                 // scope 1 at $DIR/simplify-locals.rs:35:13: 35:15\n+-         _2 = &_1;                        // scope 1 at $DIR/simplify-locals.rs:35:13: 35:15\n+-         StorageDead(_2);                 // scope 1 at $DIR/simplify-locals.rs:35:15: 35:16\n+-         StorageLive(_3);                 // scope 2 at $DIR/simplify-locals.rs:36:13: 36:19\n+-         _3 = &mut _1;                    // scope 2 at $DIR/simplify-locals.rs:36:13: 36:19\n+-         StorageDead(_3);                 // scope 2 at $DIR/simplify-locals.rs:36:19: 36:20\n           _0 = const ();                   // scope 0 at $DIR/simplify-locals.rs:32:8: 37:2\n           StorageDead(_1);                 // scope 0 at $DIR/simplify-locals.rs:37:1: 37:2\n           return;                          // scope 0 at $DIR/simplify-locals.rs:37:2: 37:2"}, {"sha": "991a0721cca302bfaefebf1325988c555f1e2a50", "filename": "src/test/mir-opt/simplify_locals.t1.SimplifyLocals.diff", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/4c3e06a0ba557c5915d8c00f23455461549f07f6/src%2Ftest%2Fmir-opt%2Fsimplify_locals.t1.SimplifyLocals.diff", "raw_url": "https://github.com/rust-lang/rust/raw/4c3e06a0ba557c5915d8c00f23455461549f07f6/src%2Ftest%2Fmir-opt%2Fsimplify_locals.t1.SimplifyLocals.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fsimplify_locals.t1.SimplifyLocals.diff?ref=4c3e06a0ba557c5915d8c00f23455461549f07f6", "patch": "@@ -5,7 +5,6 @@\n       let mut _0: ();                      // return place in scope 0 at $DIR/simplify-locals.rs:42:9: 42:9\n -     let _1: u32;                         // in scope 0 at $DIR/simplify-locals.rs:44:14: 44:15\n -     let mut _2: *mut u32;                // in scope 0 at $DIR/simplify-locals.rs:44:14: 44:15\n-+     let mut _1: *mut u32;                // in scope 0 at $DIR/simplify-locals.rs:44:14: 44:15\n       scope 1 {\n       }\n   \n@@ -15,9 +14,7 @@\n -         _2 = &/*tls*/ mut X;             // scope 1 at $DIR/simplify-locals.rs:44:14: 44:15\n -         _1 = (*_2);                      // scope 1 at $DIR/simplify-locals.rs:44:14: 44:15\n -         StorageDead(_2);                 // scope 0 at $DIR/simplify-locals.rs:44:17: 44:18\n-+         StorageLive(_1);                 // scope 1 at $DIR/simplify-locals.rs:44:14: 44:15\n-+         _1 = &/*tls*/ mut X;             // scope 1 at $DIR/simplify-locals.rs:44:14: 44:15\n-          StorageDead(_1);                 // scope 0 at $DIR/simplify-locals.rs:44:17: 44:18\n+-         StorageDead(_1);                 // scope 0 at $DIR/simplify-locals.rs:44:17: 44:18\n           _0 = const ();                   // scope 0 at $DIR/simplify-locals.rs:42:9: 45:2\n           return;                          // scope 0 at $DIR/simplify-locals.rs:45:2: 45:2\n       }"}, {"sha": "6c9ed96e78ffe401f2668f3aec5f04d488a1112c", "filename": "src/test/mir-opt/simplify_locals.t2.SimplifyLocals.diff", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/4c3e06a0ba557c5915d8c00f23455461549f07f6/src%2Ftest%2Fmir-opt%2Fsimplify_locals.t2.SimplifyLocals.diff", "raw_url": "https://github.com/rust-lang/rust/raw/4c3e06a0ba557c5915d8c00f23455461549f07f6/src%2Ftest%2Fmir-opt%2Fsimplify_locals.t2.SimplifyLocals.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fsimplify_locals.t2.SimplifyLocals.diff?ref=4c3e06a0ba557c5915d8c00f23455461549f07f6", "patch": "@@ -3,18 +3,18 @@\n   \n   fn t2() -> () {\n       let mut _0: ();                      // return place in scope 0 at $DIR/simplify-locals.rs:48:9: 48:9\n-      let _1: &mut u32;                    // in scope 0 at $DIR/simplify-locals.rs:50:14: 50:20\n-      let mut _2: *mut u32;                // in scope 0 at $DIR/simplify-locals.rs:50:19: 50:20\n+-     let _1: &mut u32;                    // in scope 0 at $DIR/simplify-locals.rs:50:14: 50:20\n+-     let mut _2: *mut u32;                // in scope 0 at $DIR/simplify-locals.rs:50:19: 50:20\n       scope 1 {\n       }\n   \n       bb0: {\n-          StorageLive(_1);                 // scope 0 at $DIR/simplify-locals.rs:50:5: 50:22\n-          StorageLive(_2);                 // scope 1 at $DIR/simplify-locals.rs:50:19: 50:20\n-          _2 = &/*tls*/ mut X;             // scope 1 at $DIR/simplify-locals.rs:50:19: 50:20\n-          _1 = &mut (*_2);                 // scope 1 at $DIR/simplify-locals.rs:50:14: 50:20\n-          StorageDead(_2);                 // scope 0 at $DIR/simplify-locals.rs:50:22: 50:23\n-          StorageDead(_1);                 // scope 0 at $DIR/simplify-locals.rs:50:22: 50:23\n+-         StorageLive(_1);                 // scope 0 at $DIR/simplify-locals.rs:50:5: 50:22\n+-         StorageLive(_2);                 // scope 1 at $DIR/simplify-locals.rs:50:19: 50:20\n+-         _2 = &/*tls*/ mut X;             // scope 1 at $DIR/simplify-locals.rs:50:19: 50:20\n+-         _1 = &mut (*_2);                 // scope 1 at $DIR/simplify-locals.rs:50:14: 50:20\n+-         StorageDead(_2);                 // scope 0 at $DIR/simplify-locals.rs:50:22: 50:23\n+-         StorageDead(_1);                 // scope 0 at $DIR/simplify-locals.rs:50:22: 50:23\n           _0 = const ();                   // scope 0 at $DIR/simplify-locals.rs:48:9: 51:2\n           return;                          // scope 0 at $DIR/simplify-locals.rs:51:2: 51:2\n       }"}, {"sha": "2d5fb352f8be3b013602ed76b175ff5e11a1d8a9", "filename": "src/test/mir-opt/simplify_locals.t3.SimplifyLocals.diff", "status": "modified", "additions": 2, "deletions": 8, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/4c3e06a0ba557c5915d8c00f23455461549f07f6/src%2Ftest%2Fmir-opt%2Fsimplify_locals.t3.SimplifyLocals.diff", "raw_url": "https://github.com/rust-lang/rust/raw/4c3e06a0ba557c5915d8c00f23455461549f07f6/src%2Ftest%2Fmir-opt%2Fsimplify_locals.t3.SimplifyLocals.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fsimplify_locals.t3.SimplifyLocals.diff?ref=4c3e06a0ba557c5915d8c00f23455461549f07f6", "patch": "@@ -6,8 +6,6 @@\n -     let _1: u32;                         // in scope 0 at $DIR/simplify-locals.rs:56:14: 56:21\n -     let mut _2: &mut u32;                // in scope 0 at $DIR/simplify-locals.rs:56:15: 56:21\n -     let mut _3: *mut u32;                // in scope 0 at $DIR/simplify-locals.rs:56:20: 56:21\n-+     let mut _1: &mut u32;                // in scope 0 at $DIR/simplify-locals.rs:56:15: 56:21\n-+     let mut _2: *mut u32;                // in scope 0 at $DIR/simplify-locals.rs:56:20: 56:21\n       scope 1 {\n       }\n   \n@@ -19,12 +17,8 @@\n -         _2 = &mut (*_3);                 // scope 1 at $DIR/simplify-locals.rs:56:15: 56:21\n -         _1 = (*_2);                      // scope 1 at $DIR/simplify-locals.rs:56:14: 56:21\n -         StorageDead(_3);                 // scope 0 at $DIR/simplify-locals.rs:56:23: 56:24\n-+         StorageLive(_1);                 // scope 1 at $DIR/simplify-locals.rs:56:15: 56:21\n-+         StorageLive(_2);                 // scope 1 at $DIR/simplify-locals.rs:56:20: 56:21\n-+         _2 = &/*tls*/ mut X;             // scope 1 at $DIR/simplify-locals.rs:56:20: 56:21\n-+         _1 = &mut (*_2);                 // scope 1 at $DIR/simplify-locals.rs:56:15: 56:21\n-          StorageDead(_2);                 // scope 0 at $DIR/simplify-locals.rs:56:23: 56:24\n-          StorageDead(_1);                 // scope 0 at $DIR/simplify-locals.rs:56:23: 56:24\n+-         StorageDead(_2);                 // scope 0 at $DIR/simplify-locals.rs:56:23: 56:24\n+-         StorageDead(_1);                 // scope 0 at $DIR/simplify-locals.rs:56:23: 56:24\n           _0 = const ();                   // scope 0 at $DIR/simplify-locals.rs:54:9: 57:2\n           return;                          // scope 0 at $DIR/simplify-locals.rs:57:2: 57:2\n       }"}, {"sha": "c857eb459b8de0af33d9b3c94a26efdf56fa12bf", "filename": "src/test/ui/recursion/issue-38591-non-regular-dropck-recursion.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/4c3e06a0ba557c5915d8c00f23455461549f07f6/src%2Ftest%2Fui%2Frecursion%2Fissue-38591-non-regular-dropck-recursion.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4c3e06a0ba557c5915d8c00f23455461549f07f6/src%2Ftest%2Fui%2Frecursion%2Fissue-38591-non-regular-dropck-recursion.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frecursion%2Fissue-38591-non-regular-dropck-recursion.rs?ref=4c3e06a0ba557c5915d8c00f23455461549f07f6", "patch": "@@ -5,6 +5,7 @@\n \n // build-fail\n // normalize-stderr-test: \".nll/\" -> \"/\"\n+// compile-flags: -Zmir-opt-level=0\n \n struct S<T> {\n     t: T,"}]}