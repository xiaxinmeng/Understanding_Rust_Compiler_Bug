{"sha": "cb6650047b883fc70ecfd5d25f3e83a975aa66fc", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNiNjY1MDA0N2I4ODNmYzcwZWNmZDVkMjVmM2U4M2E5NzVhYTY2ZmM=", "commit": {"author": {"name": "Eduard-Mihai Burtescu", "email": "edy.burt@gmail.com", "date": "2019-08-12T16:00:47Z"}, "committer": {"name": "Eduard-Mihai Burtescu", "email": "edy.burt@gmail.com", "date": "2019-08-19T15:57:09Z"}, "message": "test: add test from #61041.", "tree": {"sha": "25d3179ce2d9d30bcf8ff42546bd8d03cff49bed", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/25d3179ce2d9d30bcf8ff42546bd8d03cff49bed"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cb6650047b883fc70ecfd5d25f3e83a975aa66fc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cb6650047b883fc70ecfd5d25f3e83a975aa66fc", "html_url": "https://github.com/rust-lang/rust/commit/cb6650047b883fc70ecfd5d25f3e83a975aa66fc", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cb6650047b883fc70ecfd5d25f3e83a975aa66fc/comments", "author": {"login": "eddyb", "id": 77424, "node_id": "MDQ6VXNlcjc3NDI0", "avatar_url": "https://avatars.githubusercontent.com/u/77424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eddyb", "html_url": "https://github.com/eddyb", "followers_url": "https://api.github.com/users/eddyb/followers", "following_url": "https://api.github.com/users/eddyb/following{/other_user}", "gists_url": "https://api.github.com/users/eddyb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eddyb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eddyb/subscriptions", "organizations_url": "https://api.github.com/users/eddyb/orgs", "repos_url": "https://api.github.com/users/eddyb/repos", "events_url": "https://api.github.com/users/eddyb/events{/privacy}", "received_events_url": "https://api.github.com/users/eddyb/received_events", "type": "User", "site_admin": false}, "committer": {"login": "eddyb", "id": 77424, "node_id": "MDQ6VXNlcjc3NDI0", "avatar_url": "https://avatars.githubusercontent.com/u/77424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eddyb", "html_url": "https://github.com/eddyb", "followers_url": "https://api.github.com/users/eddyb/followers", "following_url": "https://api.github.com/users/eddyb/following{/other_user}", "gists_url": "https://api.github.com/users/eddyb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eddyb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eddyb/subscriptions", "organizations_url": "https://api.github.com/users/eddyb/orgs", "repos_url": "https://api.github.com/users/eddyb/repos", "events_url": "https://api.github.com/users/eddyb/events{/privacy}", "received_events_url": "https://api.github.com/users/eddyb/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f4aa00b71dbb7433c408ff111c58c81788dc879f", "url": "https://api.github.com/repos/rust-lang/rust/commits/f4aa00b71dbb7433c408ff111c58c81788dc879f", "html_url": "https://github.com/rust-lang/rust/commit/f4aa00b71dbb7433c408ff111c58c81788dc879f"}], "stats": {"total": 60, "additions": 60, "deletions": 0}, "files": [{"sha": "7a299169bc4e19e59a5c0d63749140049a14fe9a", "filename": "src/test/ui/consts/too_generic_eval_ice.rs", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/cb6650047b883fc70ecfd5d25f3e83a975aa66fc/src%2Ftest%2Fui%2Fconsts%2Ftoo_generic_eval_ice.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cb6650047b883fc70ecfd5d25f3e83a975aa66fc/src%2Ftest%2Fui%2Fconsts%2Ftoo_generic_eval_ice.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Ftoo_generic_eval_ice.rs?ref=cb6650047b883fc70ecfd5d25f3e83a975aa66fc", "patch": "@@ -0,0 +1,13 @@\n+pub struct Foo<A, B>(A, B);\n+\n+impl<A, B> Foo<A, B> {\n+    const HOST_SIZE: usize = std::mem::size_of::<B>();\n+\n+    pub fn crash() -> bool {\n+        [5; Self::HOST_SIZE] == [6; 0] //~ ERROR no associated item named `HOST_SIZE`\n+        //~^ the size for values of type `A` cannot be known\n+        //~| the size for values of type `B` cannot be known\n+    }\n+}\n+\n+fn main() {}"}, {"sha": "eef79421270ce6c917c774a9ef08648acb0201ce", "filename": "src/test/ui/consts/too_generic_eval_ice.stderr", "status": "added", "additions": 47, "deletions": 0, "changes": 47, "blob_url": "https://github.com/rust-lang/rust/blob/cb6650047b883fc70ecfd5d25f3e83a975aa66fc/src%2Ftest%2Fui%2Fconsts%2Ftoo_generic_eval_ice.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/cb6650047b883fc70ecfd5d25f3e83a975aa66fc/src%2Ftest%2Fui%2Fconsts%2Ftoo_generic_eval_ice.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Ftoo_generic_eval_ice.stderr?ref=cb6650047b883fc70ecfd5d25f3e83a975aa66fc", "patch": "@@ -0,0 +1,47 @@\n+error[E0599]: no associated item named `HOST_SIZE` found for type `Foo<A, B>` in the current scope\n+  --> $DIR/too_generic_eval_ice.rs:7:19\n+   |\n+LL | pub struct Foo<A, B>(A, B);\n+   | --------------------------- associated item `HOST_SIZE` not found for this\n+...\n+LL |         [5; Self::HOST_SIZE] == [6; 0]\n+   |                   ^^^^^^^^^ associated item not found in `Foo<A, B>`\n+   |\n+   = note: the method `HOST_SIZE` exists but the following trait bounds were not satisfied:\n+           `A : std::marker::Sized`\n+           `B : std::marker::Sized`\n+\n+error[E0277]: the size for values of type `A` cannot be known at compilation time\n+  --> $DIR/too_generic_eval_ice.rs:7:13\n+   |\n+LL |         [5; Self::HOST_SIZE] == [6; 0]\n+   |             ^^^^^^^^^^^^^^^ doesn't have a size known at compile-time\n+   |\n+   = help: the trait `std::marker::Sized` is not implemented for `A`\n+   = note: to learn more, visit <https://doc.rust-lang.org/book/ch19-04-advanced-types.html#dynamically-sized-types-and-the-sized-trait>\n+   = help: consider adding a `where A: std::marker::Sized` bound\n+note: required by `Foo`\n+  --> $DIR/too_generic_eval_ice.rs:1:1\n+   |\n+LL | pub struct Foo<A, B>(A, B);\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+\n+error[E0277]: the size for values of type `B` cannot be known at compilation time\n+  --> $DIR/too_generic_eval_ice.rs:7:13\n+   |\n+LL |         [5; Self::HOST_SIZE] == [6; 0]\n+   |             ^^^^^^^^^^^^^^^ doesn't have a size known at compile-time\n+   |\n+   = help: the trait `std::marker::Sized` is not implemented for `B`\n+   = note: to learn more, visit <https://doc.rust-lang.org/book/ch19-04-advanced-types.html#dynamically-sized-types-and-the-sized-trait>\n+   = help: consider adding a `where B: std::marker::Sized` bound\n+note: required by `Foo`\n+  --> $DIR/too_generic_eval_ice.rs:1:1\n+   |\n+LL | pub struct Foo<A, B>(A, B);\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+\n+error: aborting due to 3 previous errors\n+\n+Some errors have detailed explanations: E0277, E0599.\n+For more information about an error, try `rustc --explain E0277`."}]}