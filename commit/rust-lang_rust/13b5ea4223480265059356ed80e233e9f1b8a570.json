{"sha": "13b5ea4223480265059356ed80e233e9f1b8a570", "node_id": "MDY6Q29tbWl0NzI0NzEyOjEzYjVlYTQyMjM0ODAyNjUwNTkzNTZlZDgwZTIzM2U5ZjFiOGE1NzA=", "commit": {"author": {"name": "daxpedda", "email": "daxpedda@users.noreply.github.com", "date": "2019-01-20T13:50:26Z"}, "committer": {"name": "daxpedda", "email": "daxpedda@users.noreply.github.com", "date": "2019-01-20T13:50:26Z"}, "message": "Fix automatic suggestion on `use_self`.", "tree": {"sha": "a3cf7e4d464d06b15694104838b5edddb67f9946", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a3cf7e4d464d06b15694104838b5edddb67f9946"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/13b5ea4223480265059356ed80e233e9f1b8a570", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQJWBAABCABAFiEEtfVYniVMfR+YKQUSxyLctqGR7qsFAlxEfKMiHGRheHBlZGRh\nQHVzZXJzLm5vcmVwbHkuZ2l0aHViLmNvbQAKCRDHIty2oZHuq1sGD/9SF5IL1WbQ\nIeIhwzqMOt2pFYnxUHpBUHR/+KjKb+0f1xSTfJlbvGajZr91HtWPVJDHxoaqC5q7\nS2ERDXv7ankCOJG5Q+udCny5po4NPJQ/pQDFpRbjpoEqftUNbkE9ZjEdagPSxrjD\n0huDC475nCmrz3QNdQZ1oteBclOQQimDXTTHhBNKz44n1uA2WsuTx1cmNgMDRVX1\njts9FGsUn+HVEo3kNLvzYYdxJ9b2UqRrq8d7tdgE1sUYW7925Ha0mJNWEWEqAvoC\nxgUTALff9a2qUgZEUikANrT6W1huMXKleZ8hXv4wDg0C+MCbPkOsmN6PBKde0A1E\nR5Yu+V3m9+qxifA/PhybSizAtKumwjKiYYDXNtJHGmNzXlJ5UjUdCsdoP0Bp6jwQ\nJzBdMFgNRubkN8Mi2E6uO61nepRvHc6Vu9xhUamOmsgekxrux9gOGGUGGjqPAutR\nzMCMOwU+bOw4efa4anXgzJKg/Fl+eQ2Z1QUKSprCW8qyiZWtaOWGZH5eN8VAnq/Z\njsX3zyxVAyckWlEO+f5xooMOI4SxsAuuCHn6y6+e2gLZyYU2y10tneMT5NRZuNi7\nWlmPuhyWZfMzyQzX9Jq+HTmkhljZCznfr7reJM5eH5eK/lRISQb/rjn/ee6kJ/sr\nJgfisFWVR/u8hXWtxZT5tpqzhwhAqgtFrQ==\n=iXpD\n-----END PGP SIGNATURE-----", "payload": "tree a3cf7e4d464d06b15694104838b5edddb67f9946\nparent e648adf0866a1cea7db6ce2d33ea86e442f25377\nauthor daxpedda <daxpedda@users.noreply.github.com> 1547992226 +0100\ncommitter daxpedda <daxpedda@users.noreply.github.com> 1547992226 +0100\n\nFix automatic suggestion on `use_self`.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/13b5ea4223480265059356ed80e233e9f1b8a570", "html_url": "https://github.com/rust-lang/rust/commit/13b5ea4223480265059356ed80e233e9f1b8a570", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/13b5ea4223480265059356ed80e233e9f1b8a570/comments", "author": {"login": "daxpedda", "id": 1645124, "node_id": "MDQ6VXNlcjE2NDUxMjQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1645124?v=4", "gravatar_id": "", "url": "https://api.github.com/users/daxpedda", "html_url": "https://github.com/daxpedda", "followers_url": "https://api.github.com/users/daxpedda/followers", "following_url": "https://api.github.com/users/daxpedda/following{/other_user}", "gists_url": "https://api.github.com/users/daxpedda/gists{/gist_id}", "starred_url": "https://api.github.com/users/daxpedda/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/daxpedda/subscriptions", "organizations_url": "https://api.github.com/users/daxpedda/orgs", "repos_url": "https://api.github.com/users/daxpedda/repos", "events_url": "https://api.github.com/users/daxpedda/events{/privacy}", "received_events_url": "https://api.github.com/users/daxpedda/received_events", "type": "User", "site_admin": false}, "committer": {"login": "daxpedda", "id": 1645124, "node_id": "MDQ6VXNlcjE2NDUxMjQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1645124?v=4", "gravatar_id": "", "url": "https://api.github.com/users/daxpedda", "html_url": "https://github.com/daxpedda", "followers_url": "https://api.github.com/users/daxpedda/followers", "following_url": "https://api.github.com/users/daxpedda/following{/other_user}", "gists_url": "https://api.github.com/users/daxpedda/gists{/gist_id}", "starred_url": "https://api.github.com/users/daxpedda/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/daxpedda/subscriptions", "organizations_url": "https://api.github.com/users/daxpedda/orgs", "repos_url": "https://api.github.com/users/daxpedda/repos", "events_url": "https://api.github.com/users/daxpedda/events{/privacy}", "received_events_url": "https://api.github.com/users/daxpedda/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e648adf0866a1cea7db6ce2d33ea86e442f25377", "url": "https://api.github.com/repos/rust-lang/rust/commits/e648adf0866a1cea7db6ce2d33ea86e442f25377", "html_url": "https://github.com/rust-lang/rust/commit/e648adf0866a1cea7db6ce2d33ea86e442f25377"}], "stats": {"total": 18, "additions": 9, "deletions": 9}, "files": [{"sha": "696f87854a403adc44651435d23f525c4c582052", "filename": "clippy_lints/src/use_self.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/13b5ea4223480265059356ed80e233e9f1b8a570/clippy_lints%2Fsrc%2Fuse_self.rs", "raw_url": "https://github.com/rust-lang/rust/raw/13b5ea4223480265059356ed80e233e9f1b8a570/clippy_lints%2Fsrc%2Fuse_self.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fuse_self.rs?ref=13b5ea4223480265059356ed80e233e9f1b8a570", "patch": "@@ -7,7 +7,7 @@ use rustc::lint::{in_external_macro, LateContext, LateLintPass, LintArray, LintC\n use rustc::ty;\n use rustc::{declare_tool_lint, lint_array};\n use rustc_errors::Applicability;\n-use syntax_pos::symbol::keywords::SelfUpper;\n+use syntax_pos::{symbol::keywords::SelfUpper, Span};\n \n /// **What it does:** Checks for unnecessary repetition of structure name when a\n /// replacement with `Self` is applicable.\n@@ -55,11 +55,11 @@ impl LintPass for UseSelf {\n \n const SEGMENTS_MSG: &str = \"segments should be composed of at least 1 element\";\n \n-fn span_use_self_lint(cx: &LateContext<'_, '_>, path: &Path) {\n+fn span_use_self_lint(cx: &LateContext<'_, '_>, span: Span) {\n     span_lint_and_sugg(\n         cx,\n         USE_SELF,\n-        path.span,\n+        span,\n         \"unnecessary structure name repetition\",\n         \"use the applicable keyword\",\n         \"Self\".to_owned(),\n@@ -92,7 +92,7 @@ impl<'a, 'tcx> Visitor<'tcx> for TraitImplTyVisitor<'a, 'tcx> {\n                         };\n \n                         if !is_self_ty {\n-                            span_use_self_lint(self.cx, path);\n+                            span_use_self_lint(self.cx, path.span);\n                         }\n                     }\n                 }\n@@ -221,10 +221,10 @@ impl<'a, 'tcx> Visitor<'tcx> for UseSelfVisitor<'a, 'tcx> {\n     fn visit_path(&mut self, path: &'tcx Path, _id: HirId) {\n         if path.segments.last().expect(SEGMENTS_MSG).ident.name != SelfUpper.name() {\n             if self.item_path.def == path.def {\n-                span_use_self_lint(self.cx, path);\n+                span_use_self_lint(self.cx, path.segments.first().expect(SEGMENTS_MSG).ident.span);\n             } else if let Def::StructCtor(ctor_did, CtorKind::Fn) = path.def {\n                 if self.item_path.def.opt_def_id() == self.cx.tcx.parent_def_id(ctor_did) {\n-                    span_use_self_lint(self.cx, path);\n+                    span_use_self_lint(self.cx, path.span);\n                 }\n             }\n         }"}, {"sha": "649fcdbfff958dea4f4aa8a75ef4fb55fe208d82", "filename": "tests/ui/use_self.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/13b5ea4223480265059356ed80e233e9f1b8a570/tests%2Fui%2Fuse_self.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/13b5ea4223480265059356ed80e233e9f1b8a570/tests%2Fui%2Fuse_self.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fuse_self.stderr?ref=13b5ea4223480265059356ed80e233e9f1b8a570", "patch": "@@ -22,7 +22,7 @@ error: unnecessary structure name repetition\n   --> $DIR/use_self.rs:15:13\n    |\n LL |             Foo::new()\n-   |             ^^^^^^^^ help: use the applicable keyword: `Self`\n+   |             ^^^ help: use the applicable keyword: `Self`\n \n error: unnecessary structure name repetition\n   --> $DIR/use_self.rs:20:25\n@@ -34,7 +34,7 @@ error: unnecessary structure name repetition\n   --> $DIR/use_self.rs:21:13\n    |\n LL |             Foo::new()\n-   |             ^^^^^^^^ help: use the applicable keyword: `Self`\n+   |             ^^^ help: use the applicable keyword: `Self`\n \n error: unnecessary structure name repetition\n   --> $DIR/use_self.rs:86:22\n@@ -100,7 +100,7 @@ error: unnecessary structure name repetition\n   --> $DIR/use_self.rs:101:13\n    |\n LL |             Bad::default()\n-   |             ^^^^^^^^^^^^ help: use the applicable keyword: `Self`\n+   |             ^^^ help: use the applicable keyword: `Self`\n \n error: unnecessary structure name repetition\n   --> $DIR/use_self.rs:106:23"}]}