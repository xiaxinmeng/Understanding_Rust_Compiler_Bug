{"sha": "3f4827c785858c11b1ad7c84ca7793cc916cbf26", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNmNDgyN2M3ODU4NThjMTFiMWFkN2M4NGNhNzc5M2NjOTE2Y2JmMjY=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-12-05T18:03:09Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-12-05T18:03:09Z"}, "message": "Rollup merge of #66863 - osa1:fix_66702, r=cramertj\n\nCheck break target availability when checking breaks with values\n\nFixes #66702\n\nI'll be adding a regression test.", "tree": {"sha": "3c194f8e706787f19eb47b13814a2f6e3a1631a6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3c194f8e706787f19eb47b13814a2f6e3a1631a6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3f4827c785858c11b1ad7c84ca7793cc916cbf26", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJd6UZeCRBK7hj4Ov3rIwAAdHIIAKF8NPUsrQ2qyP+zYljljDuq\naZQ28TqF7r+aHJn2h6hxjaMaoPsgim3cQtmtRMAzgR0Hy/zWNMSAbsyzivnBeOBn\nR4ejatXCrS5JtF645ujtRZ3BEbOo/f9kFH2y7S3XV4d7gip0Q6K4IaLC618SpTWU\nEXTEShsgze4L+WZGCAzLucQyHg96y+xoxvJYqD2Go72Ga4hYwubkqzM1Q1hBBRUr\nHxoPh9qG5PR0k6pC9RN0Rei9C/rl4LGqZrrHhMdEYZwCOKESEGCNhXxJ/NdpxwuG\nuYv1lCSNukg/lhhx7Fb1tXr59kOp6eBc28jq845UyZdetc5Mxbbe+Q0wuzidfW8=\n=C0F7\n-----END PGP SIGNATURE-----\n", "payload": "tree 3c194f8e706787f19eb47b13814a2f6e3a1631a6\nparent bcf992dc6c6e0e8ff81f46ed0925d274b3979251\nparent 6857c93183480ba49647bcafb103458cf4adff70\nauthor Mazdak Farrokhzad <twingoow@gmail.com> 1575568989 +0100\ncommitter GitHub <noreply@github.com> 1575568989 +0100\n\nRollup merge of #66863 - osa1:fix_66702, r=cramertj\n\nCheck break target availability when checking breaks with values\n\nFixes #66702\n\nI'll be adding a regression test.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3f4827c785858c11b1ad7c84ca7793cc916cbf26", "html_url": "https://github.com/rust-lang/rust/commit/3f4827c785858c11b1ad7c84ca7793cc916cbf26", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3f4827c785858c11b1ad7c84ca7793cc916cbf26/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bcf992dc6c6e0e8ff81f46ed0925d274b3979251", "url": "https://api.github.com/repos/rust-lang/rust/commits/bcf992dc6c6e0e8ff81f46ed0925d274b3979251", "html_url": "https://github.com/rust-lang/rust/commit/bcf992dc6c6e0e8ff81f46ed0925d274b3979251"}, {"sha": "6857c93183480ba49647bcafb103458cf4adff70", "url": "https://api.github.com/repos/rust-lang/rust/commits/6857c93183480ba49647bcafb103458cf4adff70", "html_url": "https://github.com/rust-lang/rust/commit/6857c93183480ba49647bcafb103458cf4adff70"}], "stats": {"total": 36, "additions": 32, "deletions": 4}, "files": [{"sha": "5bfc60c75406745e0c0a7ac2c2db42eca0599edf", "filename": "src/librustc_typeck/check/expr.rs", "status": "modified", "additions": 14, "deletions": 4, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/3f4827c785858c11b1ad7c84ca7793cc916cbf26/src%2Flibrustc_typeck%2Fcheck%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3f4827c785858c11b1ad7c84ca7793cc916cbf26/src%2Flibrustc_typeck%2Fcheck%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fexpr.rs?ref=3f4827c785858c11b1ad7c84ca7793cc916cbf26", "patch": "@@ -582,11 +582,21 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n                 // If this is a break with a value, we need to type-check\n                 // the expression. Get an expected type from the loop context.\n                 let opt_coerce_to = {\n+                    // We should release `enclosing_breakables` before the `check_expr_with_hint`\n+                    // below, so can't move this block of code to the enclosing scope and share\n+                    // `ctxt` with the second `encloding_breakables` borrow below.\n                     let mut enclosing_breakables = self.enclosing_breakables.borrow_mut();\n-                    enclosing_breakables.find_breakable(target_id)\n-                                        .coerce\n-                                        .as_ref()\n-                                        .map(|coerce| coerce.expected_ty())\n+                    match enclosing_breakables.opt_find_breakable(target_id) {\n+                        Some(ctxt) =>\n+                            ctxt.coerce.as_ref().map(|coerce| coerce.expected_ty()),\n+                        None => { // Avoid ICE when `break` is inside a closure (#65383).\n+                            self.tcx.sess.delay_span_bug(\n+                                expr.span,\n+                                \"break was outside loop, but no error was emitted\",\n+                            );\n+                            return tcx.types.err;\n+                        }\n+                    }\n                 };\n \n                 // If the loop context is not a `loop { }`, then break with"}, {"sha": "bd3c00d2621282576c2585ce3d483b3f3458cb3f", "filename": "src/test/ui/issues/issue-66702-break-outside-loop-val.rs", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/3f4827c785858c11b1ad7c84ca7793cc916cbf26/src%2Ftest%2Fui%2Fissues%2Fissue-66702-break-outside-loop-val.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3f4827c785858c11b1ad7c84ca7793cc916cbf26/src%2Ftest%2Fui%2Fissues%2Fissue-66702-break-outside-loop-val.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-66702-break-outside-loop-val.rs?ref=3f4827c785858c11b1ad7c84ca7793cc916cbf26", "patch": "@@ -0,0 +1,7 @@\n+// Breaks with values inside closures used to ICE (#66863)\n+\n+fn main() {\n+    'some_label: loop {\n+        || break 'some_label (); //~ ERROR: `break` inside of a closure\n+    }\n+}"}, {"sha": "83bde9775b2ec11cb53df9682a4c24717849f2cd", "filename": "src/test/ui/issues/issue-66702-break-outside-loop-val.stderr", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/3f4827c785858c11b1ad7c84ca7793cc916cbf26/src%2Ftest%2Fui%2Fissues%2Fissue-66702-break-outside-loop-val.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/3f4827c785858c11b1ad7c84ca7793cc916cbf26/src%2Ftest%2Fui%2Fissues%2Fissue-66702-break-outside-loop-val.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-66702-break-outside-loop-val.stderr?ref=3f4827c785858c11b1ad7c84ca7793cc916cbf26", "patch": "@@ -0,0 +1,11 @@\n+error[E0267]: `break` inside of a closure\n+  --> $DIR/issue-66702-break-outside-loop-val.rs:5:12\n+   |\n+LL |         || break 'some_label ();\n+   |         -- ^^^^^^^^^^^^^^^^^^^^ cannot `break` inside of a closure\n+   |         |\n+   |         enclosing closure\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0267`."}]}