{"sha": "b34ad4bc8ad368a096c14d3710239a5a2eb9ccb5", "node_id": "MDY6Q29tbWl0NzI0NzEyOmIzNGFkNGJjOGFkMzY4YTA5NmMxNGQzNzEwMjM5YTVhMmViOWNjYjU=", "commit": {"author": {"name": "Zac Pullar-Strecker", "email": "zacmps@gmail.com", "date": "2020-08-02T08:19:14Z"}, "committer": {"name": "Zac Pullar-Strecker", "email": "zacmps@gmail.com", "date": "2020-08-02T08:32:09Z"}, "message": "update & configure cmark to render three backticks", "tree": {"sha": "95a1375e90f11a09385a76dfab37494558fbc909", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/95a1375e90f11a09385a76dfab37494558fbc909"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b34ad4bc8ad368a096c14d3710239a5a2eb9ccb5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b34ad4bc8ad368a096c14d3710239a5a2eb9ccb5", "html_url": "https://github.com/rust-lang/rust/commit/b34ad4bc8ad368a096c14d3710239a5a2eb9ccb5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b34ad4bc8ad368a096c14d3710239a5a2eb9ccb5/comments", "author": {"login": "zacps", "id": 9827696, "node_id": "MDQ6VXNlcjk4Mjc2OTY=", "avatar_url": "https://avatars.githubusercontent.com/u/9827696?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zacps", "html_url": "https://github.com/zacps", "followers_url": "https://api.github.com/users/zacps/followers", "following_url": "https://api.github.com/users/zacps/following{/other_user}", "gists_url": "https://api.github.com/users/zacps/gists{/gist_id}", "starred_url": "https://api.github.com/users/zacps/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zacps/subscriptions", "organizations_url": "https://api.github.com/users/zacps/orgs", "repos_url": "https://api.github.com/users/zacps/repos", "events_url": "https://api.github.com/users/zacps/events{/privacy}", "received_events_url": "https://api.github.com/users/zacps/received_events", "type": "User", "site_admin": false}, "committer": {"login": "zacps", "id": 9827696, "node_id": "MDQ6VXNlcjk4Mjc2OTY=", "avatar_url": "https://avatars.githubusercontent.com/u/9827696?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zacps", "html_url": "https://github.com/zacps", "followers_url": "https://api.github.com/users/zacps/followers", "following_url": "https://api.github.com/users/zacps/following{/other_user}", "gists_url": "https://api.github.com/users/zacps/gists{/gist_id}", "starred_url": "https://api.github.com/users/zacps/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zacps/subscriptions", "organizations_url": "https://api.github.com/users/zacps/orgs", "repos_url": "https://api.github.com/users/zacps/repos", "events_url": "https://api.github.com/users/zacps/events{/privacy}", "received_events_url": "https://api.github.com/users/zacps/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c4d4869f23dbe481c42a8fb24d2bc43e36b88933", "url": "https://api.github.com/repos/rust-lang/rust/commits/c4d4869f23dbe481c42a8fb24d2bc43e36b88933", "html_url": "https://github.com/rust-lang/rust/commit/c4d4869f23dbe481c42a8fb24d2bc43e36b88933"}], "stats": {"total": 348, "additions": 175, "deletions": 173}, "files": [{"sha": "2e2bc9e106e025d9fc73163f7f2e7fab188512e4", "filename": "Cargo.lock", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/b34ad4bc8ad368a096c14d3710239a5a2eb9ccb5/Cargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/b34ad4bc8ad368a096c14d3710239a5a2eb9ccb5/Cargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.lock?ref=b34ad4bc8ad368a096c14d3710239a5a2eb9ccb5", "patch": "@@ -903,9 +903,9 @@ dependencies = [\n \n [[package]]\n name = \"pulldown-cmark-to-cmark\"\n-version = \"4.0.2\"\n+version = \"5.0.0\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"cffb594e453d29e238ac190362a4a291daec00396717a8d1670863121ac56958\"\n+checksum = \"32accf4473121d8c0b508ca5673363703762d6cc59cf25af1df48f653346f736\"\n dependencies = [\n  \"pulldown-cmark\",\n ]"}, {"sha": "485aa9081e9d332d8dd9f828901b202f66251989", "filename": "crates/ra_ide/Cargo.toml", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/b34ad4bc8ad368a096c14d3710239a5a2eb9ccb5/crates%2Fra_ide%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/b34ad4bc8ad368a096c14d3710239a5a2eb9ccb5/crates%2Fra_ide%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2FCargo.toml?ref=b34ad4bc8ad368a096c14d3710239a5a2eb9ccb5", "patch": "@@ -17,8 +17,8 @@ indexmap = \"1.3.2\"\n itertools = \"0.9.0\"\n log = \"0.4.8\"\n rustc-hash = \"1.1.0\"\n-url = \"*\"\n-pulldown-cmark-to-cmark = \"4.0.2\"\n+url = \"2.1.1\"\n+pulldown-cmark-to-cmark = \"5.0.0\"\n pulldown-cmark = {version = \"0.7.2\", default-features = false}\n oorandom = \"11.1.2\"\n "}, {"sha": "5aacb4c14c3b635640ee2f56b5130c1dcfca358d", "filename": "crates/ra_ide/src/hover.rs", "status": "modified", "additions": 166, "deletions": 166, "changes": 332, "blob_url": "https://github.com/rust-lang/rust/blob/b34ad4bc8ad368a096c14d3710239a5a2eb9ccb5/crates%2Fra_ide%2Fsrc%2Fhover.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b34ad4bc8ad368a096c14d3710239a5a2eb9ccb5/crates%2Fra_ide%2Fsrc%2Fhover.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fhover.rs?ref=b34ad4bc8ad368a096c14d3710239a5a2eb9ccb5", "patch": "@@ -425,9 +425,9 @@ fn main() {\n             expect![[r#\"\n                 *iter*\n \n-                ````rust\n+                ```rust\n                 Iter<Scan<OtherStruct<OtherStruct<i32>>, |&mut u32, &u32, &mut u32| -> Option<u32>, u32>>\n-                ````\n+                ```\n             \"#]],\n         );\n     }\n@@ -444,13 +444,13 @@ fn main() { let foo_test = fo<|>o(); }\n             expect![[r#\"\n                 *foo*\n \n-                ````rust\n+                ```rust\n                 test\n-                ````\n+                ```\n \n-                ````rust\n+                ```rust\n                 pub fn foo() -> u32\n-                ````\n+                ```\n             \"#]],\n         );\n \n@@ -493,13 +493,13 @@ fn main() { let foo_test = fo<|>o(); }\n             expect![[r#\"\n                 *foo*\n \n-                ````rust\n+                ```rust\n                 test\n-                ````\n+                ```\n \n-                ````rust\n+                ```rust\n                 pub fn foo<'a, T: AsRef<str>>(b: &'a T) -> &'a str\n-                ````\n+                ```\n             \"#]],\n         );\n     }\n@@ -515,13 +515,13 @@ fn main() { }\n             expect![[r#\"\n                 *foo*\n \n-                ````rust\n+                ```rust\n                 test\n-                ````\n+                ```\n \n-                ````rust\n+                ```rust\n                 pub fn foo(a: u32, b: u32) -> u32\n-                ````\n+                ```\n             \"#]],\n         );\n     }\n@@ -540,13 +540,13 @@ fn main() {\n             expect![[r#\"\n                 *field_a*\n \n-                ````rust\n+                ```rust\n                 test::Foo\n-                ````\n+                ```\n \n-                ````rust\n+                ```rust\n                 field_a: u32\n-                ````\n+                ```\n             \"#]],\n         );\n \n@@ -562,13 +562,13 @@ fn main() {\n             expect![[r#\"\n                 *field_a*\n \n-                ````rust\n+                ```rust\n                 test::Foo\n-                ````\n+                ```\n \n-                ````rust\n+                ```rust\n                 field_a: u32\n-                ````\n+                ```\n             \"#]],\n         );\n     }\n@@ -580,27 +580,27 @@ fn main() {\n             expect![[r#\"\n                 *foo*\n \n-                ````rust\n+                ```rust\n                 test\n-                ````\n+                ```\n \n-                ````rust\n+                ```rust\n                 const foo: u32\n-                ````\n+                ```\n             \"#]],\n         );\n         check(\n             r#\"static foo<|>: u32 = 0;\"#,\n             expect![[r#\"\n                 *foo*\n \n-                ````rust\n+                ```rust\n                 test\n-                ````\n+                ```\n \n-                ````rust\n+                ```rust\n                 static foo: u32\n-                ````\n+                ```\n             \"#]],\n         );\n     }\n@@ -617,9 +617,9 @@ fn main() {\n             expect![[r#\"\n                 *zz*\n \n-                ````rust\n+                ```rust\n                 Test<i32, u8>\n-                ````\n+                ```\n             \"#]],\n         );\n     }\n@@ -636,13 +636,13 @@ fn main() { So<|>me(12); }\n             expect![[r#\"\n                 *Some*\n \n-                ````rust\n+                ```rust\n                 test::Option\n-                ````\n+                ```\n \n-                ````rust\n+                ```rust\n                 Some\n-                ````\n+                ```\n             \"#]],\n         );\n \n@@ -656,9 +656,9 @@ fn main() { let b<|>ar = Some(12); }\n             expect![[r#\"\n                 *bar*\n \n-                ````rust\n+                ```rust\n                 Option<i32>\n-                ````\n+                ```\n             \"#]],\n         );\n     }\n@@ -675,13 +675,13 @@ enum Option<T> {\n             expect![[r#\"\n                 *None*\n \n-                ````rust\n+                ```rust\n                 test::Option\n-                ````\n+                ```\n \n-                ````rust\n+                ```rust\n                 None\n-                ````\n+                ```\n \n                 ---\n \n@@ -702,13 +702,13 @@ fn main() {\n             expect![[r#\"\n                 *Some*\n \n-                ````rust\n+                ```rust\n                 test::Option\n-                ````\n+                ```\n \n-                ````rust\n+                ```rust\n                 Some\n-                ````\n+                ```\n \n                 ---\n \n@@ -724,9 +724,9 @@ fn main() {\n             expect![[r#\"\n                 *foo*\n \n-                ````rust\n+                ```rust\n                 i32\n-                ````\n+                ```\n             \"#]],\n         )\n     }\n@@ -738,9 +738,9 @@ fn main() {\n             expect![[r#\"\n                 *foo*\n \n-                ````rust\n+                ```rust\n                 i32\n-                ````\n+                ```\n             \"#]],\n         )\n     }\n@@ -752,9 +752,9 @@ fn main() {\n             expect![[r#\"\n                 *foo*\n \n-                ````rust\n+                ```rust\n                 i32\n-                ````\n+                ```\n             \"#]],\n         )\n     }\n@@ -766,9 +766,9 @@ fn main() {\n             expect![[r#\"\n                 *foo*\n \n-                ````rust\n+                ```rust\n                 i32\n-                ````\n+                ```\n             \"#]],\n         )\n     }\n@@ -788,9 +788,9 @@ fn main() { let foo_<|>test = Thing::new(); }\n             expect![[r#\"\n                 *foo_test*\n \n-                ````rust\n+                ```rust\n                 Thing\n-                ````\n+                ```\n             \"#]],\n         )\n     }\n@@ -812,13 +812,13 @@ fn main() { let foo_test = wrapper::Thing::new<|>(); }\n             expect![[r#\"\n                 *new*\n \n-                ````rust\n+                ```rust\n                 test::wrapper::Thing\n-                ````\n+                ```\n \n-                ````rust\n+                ```rust\n                 fn new() -> Thing\n-                ````\n+                ```\n             \"#]],\n         )\n     }\n@@ -843,13 +843,13 @@ fn main() {\n             expect![[r#\"\n                 *C*\n \n-                ````rust\n+                ```rust\n                 test\n-                ````\n+                ```\n \n-                ````rust\n+                ```rust\n                 const C: u32\n-                ````\n+                ```\n             \"#]],\n         )\n     }\n@@ -925,9 +925,9 @@ fn y() {\n             expect![[r#\"\n                 *x*\n \n-                ````rust\n+                ```rust\n                 i32\n-                ````\n+                ```\n             \"#]],\n         )\n     }\n@@ -943,13 +943,13 @@ fn f() { fo<|>o!(); }\n             expect![[r#\"\n                 *foo*\n \n-                ````rust\n+                ```rust\n                 test\n-                ````\n+                ```\n \n-                ````rust\n+                ```rust\n                 macro_rules! foo\n-                ````\n+                ```\n             \"#]],\n         )\n     }\n@@ -978,13 +978,13 @@ id! {\n             expect![[r#\"\n                 *foo*\n \n-                ````rust\n+                ```rust\n                 test\n-                ````\n+                ```\n \n-                ````rust\n+                ```rust\n                 fn foo()\n-                ````\n+                ```\n             \"#]],\n         );\n     }\n@@ -999,9 +999,9 @@ fn foo(bar:u32) { let a = id!(ba<|>r); }\n             expect![[r#\"\n                 *bar*\n \n-                ````rust\n+                ```rust\n                 u32\n-                ````\n+                ```\n             \"#]],\n         );\n     }\n@@ -1017,9 +1017,9 @@ fn foo(bar:u32) { let a = id!(ba<|>r); }\n             expect![[r#\"\n                 *bar*\n \n-                ````rust\n+                ```rust\n                 u32\n-                ````\n+                ```\n             \"#]],\n         );\n     }\n@@ -1076,13 +1076,13 @@ fn foo() {\n             expect![[r#\"\n                 *bar*\n \n-                ````rust\n+                ```rust\n                 test\n-                ````\n+                ```\n \n-                ````rust\n+                ```rust\n                 fn bar() -> bool\n-                ````\n+                ```\n             \"#]],\n         );\n     }\n@@ -1113,13 +1113,13 @@ fn bar() { fo<|>o(); }\n             expect![[r#\"\n                 *foo*\n \n-                ````rust\n+                ```rust\n                 test\n-                ````\n+                ```\n \n-                ````rust\n+                ```rust\n                 fn foo()\n-                ````\n+                ```\n \n                 ---\n \n@@ -1135,41 +1135,41 @@ fn bar() { fo<|>o(); }\n             expect![[r#\"\n                 *foo*\n \n-                ````rust\n+                ```rust\n                 test\n-                ````\n+                ```\n \n-                ````rust\n+                ```rust\n                 async fn foo()\n-                ````\n+                ```\n             \"#]],\n         );\n         check(\n             r#\"pub const unsafe fn foo<|>() {}\"#,\n             expect![[r#\"\n                 *foo*\n \n-                ````rust\n+                ```rust\n                 test\n-                ````\n+                ```\n \n-                ````rust\n+                ```rust\n                 pub const unsafe fn foo()\n-                ````\n+                ```\n             \"#]],\n         );\n         check(\n             r#\"pub(crate) async unsafe extern \"C\" fn foo<|>() {}\"#,\n             expect![[r#\"\n                 *foo*\n \n-                ````rust\n+                ```rust\n                 test\n-                ````\n+                ```\n \n-                ````rust\n+                ```rust\n                 pub(crate) async unsafe extern \"C\" fn foo()\n-                ````\n+                ```\n             \"#]],\n         );\n     }\n@@ -1205,13 +1205,13 @@ fn my() {}\n             expect![[r#\"\n                 *my*\n \n-                ````rust\n+                ```rust\n                 test\n-                ````\n+                ```\n \n-                ````rust\n+                ```rust\n                 mod my\n-                ````\n+                ```\n             \"#]],\n         );\n     }\n@@ -1228,13 +1228,13 @@ fn foo() { let bar = Ba<|>r; }\n             expect![[r#\"\n                 *Bar*\n \n-                ````rust\n+                ```rust\n                 test\n-                ````\n+                ```\n \n-                ````rust\n+                ```rust\n                 struct Bar\n-                ````\n+                ```\n \n                 ---\n \n@@ -1255,13 +1255,13 @@ fn foo() { let bar = Ba<|>r; }\n             expect![[r#\"\n                 *Bar*\n \n-                ````rust\n+                ```rust\n                 test\n-                ````\n+                ```\n \n-                ````rust\n+                ```rust\n                 struct Bar\n-                ````\n+                ```\n \n                 ---\n \n@@ -1284,13 +1284,13 @@ fn foo() { let bar = Ba<|>r; }\n             expect![[r#\"\n                 *Bar*\n \n-                ````rust\n+                ```rust\n                 test\n-                ````\n+                ```\n \n-                ````rust\n+                ```rust\n                 struct Bar\n-                ````\n+                ```\n \n                 ---\n \n@@ -1315,13 +1315,13 @@ fn foo() { let bar = Ba<|>r; }\n             expect![[r#\"\n                 *Bar*\n \n-                ````rust\n+                ```rust\n                 test\n-                ````\n+                ```\n \n-                ````rust\n+                ```rust\n                 pub struct Bar\n-                ````\n+                ```\n \n                 ---\n \n@@ -1342,13 +1342,13 @@ fn foo() { let bar = Ba<|>r; }\n             expect![[r#\"\n                 *Bar*\n \n-                ````rust\n+                ```rust\n                 test\n-                ````\n+                ```\n \n-                ````rust\n+                ```rust\n                 pub struct Bar\n-                ````\n+                ```\n \n                 ---\n \n@@ -1371,13 +1371,13 @@ fn foo() { let bar = Ba<|>r; }\n             expect![[r#\"\n                 *Bar*\n \n-                ````rust\n+                ```rust\n                 test\n-                ````\n+                ```\n \n-                ````rust\n+                ```rust\n                 pub struct Bar\n-                ````\n+                ```\n \n                 ---\n \n@@ -1398,13 +1398,13 @@ fn foo() { let bar = Ba<|>r; }\n             expect![[r#\"\n                 *Bar*\n \n-                ````rust\n+                ```rust\n                 test\n-                ````\n+                ```\n \n-                ````rust\n+                ```rust\n                 pub struct Bar\n-                ````\n+                ```\n \n                 ---\n \n@@ -1425,13 +1425,13 @@ fn foo() { let bar = Ba<|>r; }\n             expect![[r#\"\n                 *Bar*\n \n-                ````rust\n+                ```rust\n                 test\n-                ````\n+                ```\n \n-                ````rust\n+                ```rust\n                 pub struct Bar\n-                ````\n+                ```\n \n                 ---\n \n@@ -1453,13 +1453,13 @@ fn foo() { let bar = Ba<|>r; }\n             expect![[r#\"\n                 *Bar*\n \n-                ````rust\n+                ```rust\n                 test\n-                ````\n+                ```\n \n-                ````rust\n+                ```rust\n                 pub struct Bar\n-                ````\n+                ```\n \n                 ---\n \n@@ -1480,13 +1480,13 @@ fn foo() { let bar = Ba<|>r; }\n             expect![[r#\"\n                 *Bar*\n \n-                ````rust\n+                ```rust\n                 test\n-                ````\n+                ```\n \n-                ````rust\n+                ```rust\n                 pub struct Bar\n-                ````\n+                ```\n \n                 ---\n \n@@ -1507,13 +1507,13 @@ fn foo() { let bar = Ba<|>r; }\n             expect![[r#\"\n                 *Bar*\n \n-                ````rust\n+                ```rust\n                 test\n-                ````\n+                ```\n \n-                ````rust\n+                ```rust\n                 pub struct Bar\n-                ````\n+                ```\n \n                 ---\n \n@@ -1536,13 +1536,13 @@ fn foo() { let bar = Ba<|>r; }\n             expect![[r#\"\n                 *Bar*\n \n-                ````rust\n+                ```rust\n                 test\n-                ````\n+                ```\n \n-                ````rust\n+                ```rust\n                 pub struct Bar\n-                ````\n+                ```\n \n                 ---\n \n@@ -1563,13 +1563,13 @@ fn foo() { let bar = Ba<|>r; }\n             expect![[r#\"\n                 *Bar*\n \n-                ````rust\n+                ```rust\n                 test\n-                ````\n+                ```\n \n-                ````rust\n+                ```rust\n                 pub struct Bar\n-                ````\n+                ```\n \n                 ---\n \n@@ -1591,13 +1591,13 @@ fn foo() { let bar = Ba<|>r; }\n             expect![[r#\"\n                 *Bar*\n \n-                ````rust\n+                ```rust\n                 test\n-                ````\n+                ```\n \n-                ````rust\n+                ```rust\n                 pub struct Bar\n-                ````\n+                ```\n \n                 ---\n \n@@ -1629,13 +1629,13 @@ fn foo() { let bar = Bar; bar.fo<|>o(); }\n             expect![[r#\"\n                 *foo*\n \n-                ````rust\n+                ```rust\n                 test::Bar\n-                ````\n+                ```\n \n-                ````rust\n+                ```rust\n                 fn foo(&self)\n-                ````\n+                ```\n \n                 ---\n \n@@ -1667,13 +1667,13 @@ fn foo() { let bar = Bar; bar.fo<|>o(); }\n             expect![[r#\"\n                 *foo*\n \n-                ````rust\n+                ```rust\n                 test::Bar\n-                ````\n+                ```\n \n-                ````rust\n+                ```rust\n                 fn foo(&self)\n-                ````\n+                ```\n \n                 ---\n "}, {"sha": "37d695bb88ffeeb4d39b1adfb6f0fdefacbacff6", "filename": "crates/ra_ide/src/link_rewrite.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/b34ad4bc8ad368a096c14d3710239a5a2eb9ccb5/crates%2Fra_ide%2Fsrc%2Flink_rewrite.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b34ad4bc8ad368a096c14d3710239a5a2eb9ccb5/crates%2Fra_ide%2Fsrc%2Flink_rewrite.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Flink_rewrite.rs?ref=b34ad4bc8ad368a096c14d3710239a5a2eb9ccb5", "patch": "@@ -4,7 +4,7 @@ use std::iter::once;\n \n use itertools::Itertools;\n use pulldown_cmark::{CowStr, Event, Options, Parser, Tag};\n-use pulldown_cmark_to_cmark::cmark;\n+use pulldown_cmark_to_cmark::{cmark_with_options, Options as CmarkOptions};\n use url::Url;\n \n use hir::{Adt, AsName, AttrDef, Crate, Hygiene, ItemInNs, ModPath, ModuleDef};\n@@ -42,7 +42,9 @@ pub fn rewrite_links(db: &RootDatabase, markdown: &str, definition: &Definition)\n         }\n     });\n     let mut out = String::new();\n-    cmark(doc, &mut out, None).ok();\n+    let mut options = CmarkOptions::default();\n+    options.code_block_backticks = 3;\n+    cmark_with_options(doc, &mut out, None, options).ok();\n     out\n }\n "}, {"sha": "f2a63405147baa2b5bcfce4f69ec44eca06c699f", "filename": "crates/rust-analyzer/tests/heavy_tests/main.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b34ad4bc8ad368a096c14d3710239a5a2eb9ccb5/crates%2Frust-analyzer%2Ftests%2Fheavy_tests%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b34ad4bc8ad368a096c14d3710239a5a2eb9ccb5/crates%2Frust-analyzer%2Ftests%2Fheavy_tests%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Ftests%2Fheavy_tests%2Fmain.rs?ref=b34ad4bc8ad368a096c14d3710239a5a2eb9ccb5", "patch": "@@ -680,5 +680,5 @@ pub fn foo(_input: TokenStream) -> TokenStream {\n     });\n \n     let value = res.get(\"contents\").unwrap().get(\"value\").unwrap().to_string();\n-    assert_eq!(value, r#\"\"\\n````rust\\nfoo::Bar\\n````\\n\\n````rust\\nfn bar()\\n````\"\"#)\n+    assert_eq!(value, r#\"\"\\n```rust\\nfoo::Bar\\n```\\n\\n```rust\\nfn bar()\\n```\"\"#)\n }"}]}