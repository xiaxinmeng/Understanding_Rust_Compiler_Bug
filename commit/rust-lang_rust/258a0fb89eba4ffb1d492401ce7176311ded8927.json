{"sha": "258a0fb89eba4ffb1d492401ce7176311ded8927", "node_id": "C_kwDOAAsO6NoAKDI1OGEwZmI4OWViYTRmZmIxZDQ5MjQwMWNlNzE3NjMxMWRlZDg5Mjc", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2023-01-03T16:12:10Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2023-01-03T16:12:10Z"}, "message": "Rollup merge of #104552 - DebugSteven:warn-newer-x, r=jyn514\n\nwarn newer available version of the x tool\n\nThis PR adds a check to `tidy` to assert that the installed version of `x` is equal to the version in `src/tools/x/Cargo.toml`. It adds a `--wrapper-version` argument to `x` to determine the version at runtime, .\n\nIt does not warn if `x` has not yet been installed, on the assumption that the user isn't interested in using it.", "tree": {"sha": "04949b011882cb211f47dc617f6d2c83af0d300b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/04949b011882cb211f47dc617f6d2c83af0d300b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/258a0fb89eba4ffb1d492401ce7176311ded8927", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJjtFPaCRBK7hj4Ov3rIwAA2IUIACdP2L33fjm/+GKqmiefWMLJ\nVYQLHyApUIOqbI/GDOuX3frGxufsPTsUXI8g554qS6qk7Bygl2heR27Ywr9W0m0v\nytykXtKOO/vPw9FIloNK53gUxLEXPkv9hTgocZwXLfZhyGuHFXnCXWhe1Idiffbv\nKSdW8j7u2OzM72NlMp8w6Q5RX62o9pQU0OyRDuM2LutJ5VZFDL563zlyM9UTRTH5\nWApB2CqDqMwzoGP4/iIF5ran0Gd/V3dMLej+YeLZaxIDEv0ykG0yOlkKvDKbDV7m\nt6YK3SrG6mK29jgOQw6kpaB1M6PfVfIHbjyF7Sf0z/wxp1t8B7rKPMA7ciDY8GA=\n=4knb\n-----END PGP SIGNATURE-----\n", "payload": "tree 04949b011882cb211f47dc617f6d2c83af0d300b\nparent b435960c4cfd3975651c7051be56d7f5d6c201ab\nparent 85f649fd27754cf54dff48131b87800a02edb948\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1672762330 +0100\ncommitter GitHub <noreply@github.com> 1672762330 +0100\n\nRollup merge of #104552 - DebugSteven:warn-newer-x, r=jyn514\n\nwarn newer available version of the x tool\n\nThis PR adds a check to `tidy` to assert that the installed version of `x` is equal to the version in `src/tools/x/Cargo.toml`. It adds a `--wrapper-version` argument to `x` to determine the version at runtime, .\n\nIt does not warn if `x` has not yet been installed, on the assumption that the user isn't interested in using it.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/258a0fb89eba4ffb1d492401ce7176311ded8927", "html_url": "https://github.com/rust-lang/rust/commit/258a0fb89eba4ffb1d492401ce7176311ded8927", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/258a0fb89eba4ffb1d492401ce7176311ded8927/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b435960c4cfd3975651c7051be56d7f5d6c201ab", "url": "https://api.github.com/repos/rust-lang/rust/commits/b435960c4cfd3975651c7051be56d7f5d6c201ab", "html_url": "https://github.com/rust-lang/rust/commit/b435960c4cfd3975651c7051be56d7f5d6c201ab"}, {"sha": "85f649fd27754cf54dff48131b87800a02edb948", "url": "https://api.github.com/repos/rust-lang/rust/commits/85f649fd27754cf54dff48131b87800a02edb948", "html_url": "https://github.com/rust-lang/rust/commit/85f649fd27754cf54dff48131b87800a02edb948"}], "stats": {"total": 103, "additions": 90, "deletions": 13}, "files": [{"sha": "4cb64882cb7e35f2c05a7a392621eb7965f55738", "filename": "Cargo.lock", "status": "modified", "additions": 11, "deletions": 10, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/258a0fb89eba4ffb1d492401ce7176311ded8927/Cargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/258a0fb89eba4ffb1d492401ce7176311ded8927/Cargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.lock?ref=258a0fb89eba4ffb1d492401ce7176311ded8927", "patch": "@@ -4805,18 +4805,18 @@ checksum = \"1ef965a420fe14fdac7dd018862966a4c14094f900e1650bbc71ddd7d580c8af\"\n \n [[package]]\n name = \"semver\"\n-version = \"1.0.12\"\n+version = \"1.0.14\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"a2333e6df6d6598f2b1974829f853c2b4c5f4a6e503c10af918081aa6f8564e1\"\n+checksum = \"e25dfac463d778e353db5be2449d1cce89bd6fd23c9f1ea21310ce6e5a1b29c4\"\n dependencies = [\n  \"serde\",\n ]\n \n [[package]]\n name = \"serde\"\n-version = \"1.0.147\"\n+version = \"1.0.152\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"d193d69bae983fc11a79df82342761dfbf28a99fc8d203dca4c3c1b590948965\"\n+checksum = \"bb7d1f0d3021d347a83e556fc4683dea2ea09d87bccdf88ff5c12545d89d5efb\"\n dependencies = [\n  \"serde_derive\",\n ]\n@@ -4833,9 +4833,9 @@ dependencies = [\n \n [[package]]\n name = \"serde_derive\"\n-version = \"1.0.147\"\n+version = \"1.0.152\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"4f1d362ca8fc9c3e3a7484440752472d68a6caa98f1ab81d99b5dfe517cec852\"\n+checksum = \"af487d118eecd09402d70a5d72551860e788df87b464af30e5ea6a38c75c541e\"\n dependencies = [\n  \"proc-macro2\",\n  \"quote\",\n@@ -4853,9 +4853,9 @@ dependencies = [\n \n [[package]]\n name = \"serde_json\"\n-version = \"1.0.85\"\n+version = \"1.0.91\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"e55a28e3aaef9d5ce0506d0a14dbba8054ddc7e499ef522dd8b26859ec9d4a44\"\n+checksum = \"877c235533714907a8c2464236f5c4b2a17262ef1bd71f38f35ea592c8da6883\"\n dependencies = [\n  \"indexmap\",\n  \"itoa\",\n@@ -5133,9 +5133,9 @@ dependencies = [\n \n [[package]]\n name = \"syn\"\n-version = \"1.0.102\"\n+version = \"1.0.107\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"3fcd952facd492f9be3ef0d0b7032a6e442ee9b361d4acc2b1d0c4aaa5f613a1\"\n+checksum = \"1f4064b5b16e03ae50984a5a8ed5d4f8803e6bc1fd170a3cda91a1be4b18e3f5\"\n dependencies = [\n  \"proc-macro2\",\n  \"quote\",\n@@ -5309,6 +5309,7 @@ dependencies = [\n  \"lazy_static\",\n  \"miropt-test-tools\",\n  \"regex\",\n+ \"semver\",\n  \"termcolor\",\n  \"walkdir\",\n ]"}, {"sha": "f3998e98583ecd32d564590389104cb35d95d3ff", "filename": "src/bootstrap/bootstrap.py", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/258a0fb89eba4ffb1d492401ce7176311ded8927/src%2Fbootstrap%2Fbootstrap.py", "raw_url": "https://github.com/rust-lang/rust/raw/258a0fb89eba4ffb1d492401ce7176311ded8927/src%2Fbootstrap%2Fbootstrap.py", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fbootstrap.py?ref=258a0fb89eba4ffb1d492401ce7176311ded8927", "patch": "@@ -934,8 +934,7 @@ def main():\n     if len(sys.argv) > 1 and sys.argv[1] == 'help':\n         sys.argv = [sys.argv[0], '-h'] + sys.argv[2:]\n \n-    help_triggered = (\n-        '-h' in sys.argv) or ('--help' in sys.argv) or (len(sys.argv) == 1)\n+    help_triggered = len(sys.argv) == 1 or any(x in [\"-h\", \"--help\", \"--version\"] for x in sys.argv)\n     try:\n         bootstrap(help_triggered)\n         if not help_triggered:"}, {"sha": "5f5ae3a65efa81c34498c40c6de57fd59ddd81af", "filename": "src/tools/tidy/Cargo.toml", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/258a0fb89eba4ffb1d492401ce7176311ded8927/src%2Ftools%2Ftidy%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/258a0fb89eba4ffb1d492401ce7176311ded8927/src%2Ftools%2Ftidy%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Ftidy%2FCargo.toml?ref=258a0fb89eba4ffb1d492401ce7176311ded8927", "patch": "@@ -11,6 +11,7 @@ miropt-test-tools = { path = \"../miropt-test-tools\" }\n lazy_static = \"1\"\n walkdir = \"2\"\n ignore = \"0.4.18\"\n+semver = \"1.0.14\"\n termcolor = \"1.1.3\"\n \n [[bin]]"}, {"sha": "4075f2616b0fd726739410a0cc1ac9fcffb47f72", "filename": "src/tools/tidy/src/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/258a0fb89eba4ffb1d492401ce7176311ded8927/src%2Ftools%2Ftidy%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/258a0fb89eba4ffb1d492401ce7176311ded8927/src%2Ftools%2Ftidy%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Ftidy%2Fsrc%2Flib.rs?ref=258a0fb89eba4ffb1d492401ce7176311ded8927", "patch": "@@ -69,3 +69,4 @@ pub mod ui_tests;\n pub mod unit_tests;\n pub mod unstable_book;\n pub mod walk;\n+pub mod x_version;"}, {"sha": "7bb8ddc6949ef9f61254d2a0dcd065a26443ed02", "filename": "src/tools/tidy/src/main.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/258a0fb89eba4ffb1d492401ce7176311ded8927/src%2Ftools%2Ftidy%2Fsrc%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/258a0fb89eba4ffb1d492401ce7176311ded8927/src%2Ftools%2Ftidy%2Fsrc%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Ftidy%2Fsrc%2Fmain.rs?ref=258a0fb89eba4ffb1d492401ce7176311ded8927", "patch": "@@ -58,7 +58,7 @@ fn main() {\n \n                 let handle = s.spawn(|| {\n                     let mut flag = false;\n-                    $p::check($($args),* , &mut flag);\n+                    $p::check($($args, )* &mut flag);\n                     if (flag) {\n                         bad.store(true, Ordering::Relaxed);\n                     }\n@@ -107,6 +107,8 @@ fn main() {\n         check!(alphabetical, &compiler_path);\n         check!(alphabetical, &library_path);\n \n+        check!(x_version, &root_path, &cargo);\n+\n         let collected = {\n             drain_handles(&mut handles);\n "}, {"sha": "5dc6a0588c32bc1dc10a9fba6ab0664db9699f66", "filename": "src/tools/tidy/src/x_version.rs", "status": "added", "additions": 65, "deletions": 0, "changes": 65, "blob_url": "https://github.com/rust-lang/rust/blob/258a0fb89eba4ffb1d492401ce7176311ded8927/src%2Ftools%2Ftidy%2Fsrc%2Fx_version.rs", "raw_url": "https://github.com/rust-lang/rust/raw/258a0fb89eba4ffb1d492401ce7176311ded8927/src%2Ftools%2Ftidy%2Fsrc%2Fx_version.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Ftidy%2Fsrc%2Fx_version.rs?ref=258a0fb89eba4ffb1d492401ce7176311ded8927", "patch": "@@ -0,0 +1,65 @@\n+use semver::Version;\n+use std::io::ErrorKind;\n+use std::path::Path;\n+use std::process::{Command, Stdio};\n+\n+pub fn check(root: &Path, cargo: &Path, bad: &mut bool) {\n+    let result = Command::new(\"x\").arg(\"--wrapper-version\").stdout(Stdio::piped()).spawn();\n+    // This runs the command inside a temporary directory.\n+    // This allows us to compare output of result to see if `--wrapper-version` is not a recognized argument to x.\n+    let temp_result = Command::new(\"x\")\n+        .arg(\"--wrapper-version\")\n+        .current_dir(std::env::temp_dir())\n+        .stdout(Stdio::piped())\n+        .spawn();\n+\n+    let (child, temp_child) = match (result, temp_result) {\n+        (Ok(child), Ok(temp_child)) => (child, temp_child),\n+        (Err(e), _) | (_, Err(e)) => match e.kind() {\n+            ErrorKind::NotFound => return,\n+            _ => return tidy_error!(bad, \"failed to run `x`: {}\", e),\n+        },\n+    };\n+\n+    let output = child.wait_with_output().unwrap();\n+    let temp_output = temp_child.wait_with_output().unwrap();\n+\n+    if output != temp_output {\n+        return tidy_error!(\n+            bad,\n+            \"Current version of x does not support the `--wrapper-version` argument\\nConsider updating to the newer version of x by running `cargo install --path src/tools/x`\"\n+        );\n+    }\n+\n+    if output.status.success() {\n+        let version = String::from_utf8_lossy(&output.stdout);\n+        let version = Version::parse(version.trim_end()).unwrap();\n+\n+        if let Some(expected) = get_x_wrapper_version(root, cargo) {\n+            if version < expected {\n+                return tidy_error!(\n+                    bad,\n+                    \"Current version of x is {version}, but the latest version is {expected}\\nConsider updating to the newer version of x by running `cargo install --path src/tools/x`\"\n+                );\n+            }\n+        } else {\n+            return tidy_error!(\n+                bad,\n+                \"Unable to parse the latest version of `x` at `src/tools/x/Cargo.toml`\"\n+            );\n+        }\n+    } else {\n+        return tidy_error!(bad, \"failed to check version of `x`: {}\", output.status);\n+    }\n+}\n+\n+// Parse latest version out of `x` Cargo.toml\n+fn get_x_wrapper_version(root: &Path, cargo: &Path) -> Option<Version> {\n+    let mut cmd = cargo_metadata::MetadataCommand::new();\n+    cmd.cargo_path(cargo)\n+        .manifest_path(root.join(\"src/tools/x/Cargo.toml\"))\n+        .no_deps()\n+        .features(cargo_metadata::CargoOpt::AllFeatures);\n+    let mut metadata = t!(cmd.exec());\n+    metadata.packages.pop().map(|x| x.version)\n+}"}, {"sha": "01f7187851e38d646d097b78a19f05c6564cc746", "filename": "src/tools/x/src/main.rs", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/258a0fb89eba4ffb1d492401ce7176311ded8927/src%2Ftools%2Fx%2Fsrc%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/258a0fb89eba4ffb1d492401ce7176311ded8927/src%2Ftools%2Fx%2Fsrc%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fx%2Fsrc%2Fmain.rs?ref=258a0fb89eba4ffb1d492401ce7176311ded8927", "patch": "@@ -52,6 +52,14 @@ fn exec_or_status(command: &mut Command) -> io::Result<ExitStatus> {\n }\n \n fn main() {\n+    match env::args().skip(1).next().as_deref() {\n+        Some(\"--wrapper-version\") => {\n+            let version = env!(\"CARGO_PKG_VERSION\");\n+            println!(\"{}\", version);\n+            return;\n+        }\n+        _ => {}\n+    }\n     let current = match env::current_dir() {\n         Ok(dir) => dir,\n         Err(err) => {"}]}