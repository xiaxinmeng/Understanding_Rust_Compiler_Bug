{"sha": "e6510babc786469075f76db94fedfe651072bf25", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU2NTEwYmFiYzc4NjQ2OTA3NWY3NmRiOTRmZWRmZTY1MTA3MmJmMjU=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2020-06-15T07:57:26Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-06-15T07:57:26Z"}, "message": "Rollup merge of #72584 - CAD97:stabilize-58957, r=dtolnay\n\nStabilize vec::Drain::as_slice\n\nand add `AsRef<[T]> for Drain<'_, T>`.\n\nTracking issue: #58957. Does not stabilize `slice::IterMut::as_slice` yet. cc @cuviper\nThis PR proposes stabilizing just the `vec::Drain::as_slice` part of that tracking issue.\n\nMy ultimate goal here: being able to use `for<T, I: Iterator<Item=T> + AsRef<[T]>> I` to refer to `vec::IntoIter`, `vec::Drain`, and eventually `array::IntoIter`, as an approximation of the set of by-value iterators that can be \"previewed\" as by-ref iterators. (Actually expressing that as a trait requires GAT.)", "tree": {"sha": "73103aa06ba2f5d620b24f62d4ce3d255a74b985", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/73103aa06ba2f5d620b24f62d4ce3d255a74b985"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e6510babc786469075f76db94fedfe651072bf25", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJe5ynnCRBK7hj4Ov3rIwAAdHIIAJtug5LOWcc9zcRANgHZnNVz\nrsZs8vrQ5dmuhg6Ncql7RuijqIPqHnmuUDkhCXVG7XpFpc19MyjNtsJd6qj3yBPp\n3hloZjXhPT5hxR00GGulqd7YPffwiCXfaFb/lsvqjojcfEaBNQR/SxKYjB2MTg2z\n+dG4kSVH7pMxtjBMvAq7ZB7B/MO65fxgcnmHGrJj/X76W968pFbRKHf514fEX8mV\ns9yPJgvJzJVNQxWuBqbkcC2yMSQ4n/6As178+ZTSXlGhfeC45780NR0z+eSdQeTZ\nSReBoZ1KeUJV5fYXE9UHleDdMOrr/9IU8jILbt/3S+CDUHWpns7JNQ7ddJj0EkM=\n=KgsP\n-----END PGP SIGNATURE-----\n", "payload": "tree 73103aa06ba2f5d620b24f62d4ce3d255a74b985\nparent 3d41252fcc28d9da1005f3207462e95006c232e4\nparent 738f8487fd78a7d860be4e65eee85c9a0e957c13\nauthor Ralf Jung <post@ralfj.de> 1592207846 +0200\ncommitter GitHub <noreply@github.com> 1592207846 +0200\n\nRollup merge of #72584 - CAD97:stabilize-58957, r=dtolnay\n\nStabilize vec::Drain::as_slice\n\nand add `AsRef<[T]> for Drain<'_, T>`.\n\nTracking issue: #58957. Does not stabilize `slice::IterMut::as_slice` yet. cc @cuviper\nThis PR proposes stabilizing just the `vec::Drain::as_slice` part of that tracking issue.\n\nMy ultimate goal here: being able to use `for<T, I: Iterator<Item=T> + AsRef<[T]>> I` to refer to `vec::IntoIter`, `vec::Drain`, and eventually `array::IntoIter`, as an approximation of the set of by-value iterators that can be \"previewed\" as by-ref iterators. (Actually expressing that as a trait requires GAT.)\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e6510babc786469075f76db94fedfe651072bf25", "html_url": "https://github.com/rust-lang/rust/commit/e6510babc786469075f76db94fedfe651072bf25", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e6510babc786469075f76db94fedfe651072bf25/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3d41252fcc28d9da1005f3207462e95006c232e4", "url": "https://api.github.com/repos/rust-lang/rust/commits/3d41252fcc28d9da1005f3207462e95006c232e4", "html_url": "https://github.com/rust-lang/rust/commit/3d41252fcc28d9da1005f3207462e95006c232e4"}, {"sha": "738f8487fd78a7d860be4e65eee85c9a0e957c13", "url": "https://api.github.com/repos/rust-lang/rust/commits/738f8487fd78a7d860be4e65eee85c9a0e957c13", "html_url": "https://github.com/rust-lang/rust/commit/738f8487fd78a7d860be4e65eee85c9a0e957c13"}], "stats": {"total": 10, "additions": 8, "deletions": 2}, "files": [{"sha": "06462fd96d9a9d16a2e966bbf1a58677b88887fa", "filename": "src/liballoc/vec.rs", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/e6510babc786469075f76db94fedfe651072bf25/src%2Fliballoc%2Fvec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e6510babc786469075f76db94fedfe651072bf25/src%2Fliballoc%2Fvec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Fvec.rs?ref=e6510babc786469075f76db94fedfe651072bf25", "patch": "@@ -2779,19 +2779,25 @@ impl<'a, T> Drain<'a, T> {\n     /// # Examples\n     ///\n     /// ```\n-    /// # #![feature(vec_drain_as_slice)]\n     /// let mut vec = vec!['a', 'b', 'c'];\n     /// let mut drain = vec.drain(..);\n     /// assert_eq!(drain.as_slice(), &['a', 'b', 'c']);\n     /// let _ = drain.next().unwrap();\n     /// assert_eq!(drain.as_slice(), &['b', 'c']);\n     /// ```\n-    #[unstable(feature = \"vec_drain_as_slice\", reason = \"recently added\", issue = \"58957\")]\n+    #[stable(feature = \"vec_drain_as_slice\", since = \"1.46.0\")]\n     pub fn as_slice(&self) -> &[T] {\n         self.iter.as_slice()\n     }\n }\n \n+#[stable(feature = \"vec_drain_as_slice\", since = \"1.46.0\")]\n+impl<'a, T> AsRef<[T]> for Drain<'a, T> {\n+    fn as_ref(&self) -> &[T] {\n+        self.as_slice()\n+    }\n+}\n+\n #[stable(feature = \"drain\", since = \"1.6.0\")]\n unsafe impl<T: Sync> Sync for Drain<'_, T> {}\n #[stable(feature = \"drain\", since = \"1.6.0\")]"}]}