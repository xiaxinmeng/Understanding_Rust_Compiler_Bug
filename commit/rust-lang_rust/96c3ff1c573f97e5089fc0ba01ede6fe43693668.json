{"sha": "96c3ff1c573f97e5089fc0ba01ede6fe43693668", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk2YzNmZjFjNTczZjk3ZTUwODlmYzBiYTAxZWRlNmZlNDM2OTM2Njg=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2020-07-30T12:34:38Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-07-30T12:34:38Z"}, "message": "Merge #5588\n\n5588: Print errors when failing to create a perf counter r=matklad a=matklad\n\n\n\nbors r+\n\ud83e\udd16\n\nCo-authored-by: Aleksey Kladov <aleksey.kladov@gmail.com>", "tree": {"sha": "3a01617f8b4bb867e294feff1acc10609755ef56", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3a01617f8b4bb867e294feff1acc10609755ef56"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/96c3ff1c573f97e5089fc0ba01ede6fe43693668", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJfIr5eCRBK7hj4Ov3rIwAAdHIIAD8l3rv/PGI97Ocxutsjw2wd\nfGR/RG8XGGDOdEwnEuV0hYC4xUsCa7JaRnXLMAyo9b+9o7KUpCvKG1yNBYMY7snX\nuzliJnBmUs/BczLgdgn5CENhzjCNzEvYCxupTgPa9RXGfgPcdSeR1IcYwl6TFsmf\nuxc08ztFL4ASFDLPOmmEn2fX3C9ppEjBY1Fpwd7YjS3FAG/vtu7aRmkOylaNwJvz\nBShAEyL19UumCoFJOG1X1pv0IU4K93zz/SxG2Q3G7rPkxOqbcGi/d0NfN/JY9fIu\nvm5+eFHuC97U2QPHuvx4gXAb7qGjvOM1qGChY3l8tN00yFrhGmkwA/ZddUwm0uU=\n=xQvh\n-----END PGP SIGNATURE-----\n", "payload": "tree 3a01617f8b4bb867e294feff1acc10609755ef56\nparent 5844dd0bb4e30d96156f6ee1cb7dc097a51e5610\nparent 3e1e6227ca525f8631e0bff2215fa3de1b4f4cc1\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1596112478 +0000\ncommitter GitHub <noreply@github.com> 1596112478 +0000\n\nMerge #5588\n\n5588: Print errors when failing to create a perf counter r=matklad a=matklad\n\n\n\nbors r+\n\ud83e\udd16\n\nCo-authored-by: Aleksey Kladov <aleksey.kladov@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/96c3ff1c573f97e5089fc0ba01ede6fe43693668", "html_url": "https://github.com/rust-lang/rust/commit/96c3ff1c573f97e5089fc0ba01ede6fe43693668", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/96c3ff1c573f97e5089fc0ba01ede6fe43693668/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5844dd0bb4e30d96156f6ee1cb7dc097a51e5610", "url": "https://api.github.com/repos/rust-lang/rust/commits/5844dd0bb4e30d96156f6ee1cb7dc097a51e5610", "html_url": "https://github.com/rust-lang/rust/commit/5844dd0bb4e30d96156f6ee1cb7dc097a51e5610"}, {"sha": "3e1e6227ca525f8631e0bff2215fa3de1b4f4cc1", "url": "https://api.github.com/repos/rust-lang/rust/commits/3e1e6227ca525f8631e0bff2215fa3de1b4f4cc1", "html_url": "https://github.com/rust-lang/rust/commit/3e1e6227ca525f8631e0bff2215fa3de1b4f4cc1"}], "stats": {"total": 13, "additions": 10, "deletions": 3}, "files": [{"sha": "5e276190e5c0ace0b6a087977f917fdcc0657d67", "filename": "crates/ra_prof/src/stop_watch.rs", "status": "modified", "additions": 10, "deletions": 3, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/96c3ff1c573f97e5089fc0ba01ede6fe43693668/crates%2Fra_prof%2Fsrc%2Fstop_watch.rs", "raw_url": "https://github.com/rust-lang/rust/raw/96c3ff1c573f97e5089fc0ba01ede6fe43693668/crates%2Fra_prof%2Fsrc%2Fstop_watch.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_prof%2Fsrc%2Fstop_watch.rs?ref=96c3ff1c573f97e5089fc0ba01ede6fe43693668", "patch": "@@ -23,9 +23,14 @@ impl StopWatch {\n     pub fn start() -> StopWatch {\n         #[cfg(target_os = \"linux\")]\n         let counter = {\n-            let mut counter = perf_event::Builder::new().build().ok();\n+            let mut counter = perf_event::Builder::new()\n+                .build()\n+                .map_err(|err| eprintln!(\"Failed to create perf counter: {}\", err))\n+                .ok();\n             if let Some(counter) = &mut counter {\n-                let _ = counter.enable();\n+                if let Err(err) = counter.enable() {\n+                    eprintln!(\"Failed to start perf counter: {}\", err)\n+                }\n             }\n             counter\n         };\n@@ -47,7 +52,9 @@ impl StopWatch {\n         let time = self.time.elapsed();\n \n         #[cfg(target_os = \"linux\")]\n-        let instructions = self.counter.as_mut().and_then(|it| it.read().ok());\n+        let instructions = self.counter.as_mut().and_then(|it| {\n+            it.read().map_err(|err| eprintln!(\"Failed to read perf counter: {}\", err)).ok()\n+        });\n         #[cfg(not(target_os = \"linux\"))]\n         let instructions = None;\n "}]}