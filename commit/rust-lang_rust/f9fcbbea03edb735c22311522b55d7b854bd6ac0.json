{"sha": "f9fcbbea03edb735c22311522b55d7b854bd6ac0", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY5ZmNiYmVhMDNlZGI3MzVjMjIzMTE1MjJiNTVkN2I4NTRiZDZhYzA=", "commit": {"author": {"name": "Vali Schneider", "email": "eval@fb.com", "date": "2020-08-31T20:32:05Z"}, "committer": {"name": "Vali Schneider", "email": "eval@fb.com", "date": "2020-08-31T20:32:05Z"}, "message": "fixed bug", "tree": {"sha": "bb4c9ec04d534fc9b4ada046da336dd28e75482c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bb4c9ec04d534fc9b4ada046da336dd28e75482c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f9fcbbea03edb735c22311522b55d7b854bd6ac0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f9fcbbea03edb735c22311522b55d7b854bd6ac0", "html_url": "https://github.com/rust-lang/rust/commit/f9fcbbea03edb735c22311522b55d7b854bd6ac0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f9fcbbea03edb735c22311522b55d7b854bd6ac0/comments", "author": null, "committer": null, "parents": [{"sha": "73a3288282e733bfc5893e9920d29f1de5a21591", "url": "https://api.github.com/repos/rust-lang/rust/commits/73a3288282e733bfc5893e9920d29f1de5a21591", "html_url": "https://github.com/rust-lang/rust/commit/73a3288282e733bfc5893e9920d29f1de5a21591"}], "stats": {"total": 5, "additions": 4, "deletions": 1}, "files": [{"sha": "8b8e211cb723a5b413a86608765f413cb0303080", "filename": "clippy_lints/src/panic_in_result.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/f9fcbbea03edb735c22311522b55d7b854bd6ac0/clippy_lints%2Fsrc%2Fpanic_in_result.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f9fcbbea03edb735c22311522b55d7b854bd6ac0/clippy_lints%2Fsrc%2Fpanic_in_result.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fpanic_in_result.rs?ref=f9fcbbea03edb735c22311522b55d7b854bd6ac0", "patch": "@@ -34,12 +34,15 @@ impl<'tcx> LateLintPass<'tcx> for PanicInResult {\n     fn check_fn(\n         &mut self,\n         cx: &LateContext<'tcx>,\n-        _: FnKind<'tcx>,\n+        fn_kind: FnKind<'tcx>,\n         _: &'tcx hir::FnDecl<'tcx>,\n         body: &'tcx hir::Body<'tcx>,\n         span: Span,\n         hir_id: hir::HirId,\n     ) {\n+        if let FnKind::Closure(_) = fn_kind {\n+            return;\n+        }\n         if_chain! {\n             if is_type_diagnostic_item(cx, return_ty(cx, hir_id), sym!(result_type));\n             then"}]}