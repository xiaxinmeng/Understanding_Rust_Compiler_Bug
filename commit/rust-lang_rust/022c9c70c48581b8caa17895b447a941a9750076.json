{"sha": "022c9c70c48581b8caa17895b447a941a9750076", "node_id": "MDY6Q29tbWl0NzI0NzEyOjAyMmM5YzcwYzQ4NTgxYjhjYWExNzg5NWI0NDdhOTQxYTk3NTAwNzY=", "commit": {"author": {"name": "Steven Fackler", "email": "sfackler@gmail.com", "date": "2015-12-25T19:00:40Z"}, "committer": {"name": "Steven Fackler", "email": "sfackler@gmail.com", "date": "2016-01-07T00:06:11Z"}, "message": "Add std::panic::propagate", "tree": {"sha": "37b70c488759bebaff9b5312d2829f3af5f3c804", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/37b70c488759bebaff9b5312d2829f3af5f3c804"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/022c9c70c48581b8caa17895b447a941a9750076", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/022c9c70c48581b8caa17895b447a941a9750076", "html_url": "https://github.com/rust-lang/rust/commit/022c9c70c48581b8caa17895b447a941a9750076", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/022c9c70c48581b8caa17895b447a941a9750076/comments", "author": {"login": "sfackler", "id": 1455697, "node_id": "MDQ6VXNlcjE0NTU2OTc=", "avatar_url": "https://avatars.githubusercontent.com/u/1455697?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sfackler", "html_url": "https://github.com/sfackler", "followers_url": "https://api.github.com/users/sfackler/followers", "following_url": "https://api.github.com/users/sfackler/following{/other_user}", "gists_url": "https://api.github.com/users/sfackler/gists{/gist_id}", "starred_url": "https://api.github.com/users/sfackler/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sfackler/subscriptions", "organizations_url": "https://api.github.com/users/sfackler/orgs", "repos_url": "https://api.github.com/users/sfackler/repos", "events_url": "https://api.github.com/users/sfackler/events{/privacy}", "received_events_url": "https://api.github.com/users/sfackler/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sfackler", "id": 1455697, "node_id": "MDQ6VXNlcjE0NTU2OTc=", "avatar_url": "https://avatars.githubusercontent.com/u/1455697?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sfackler", "html_url": "https://github.com/sfackler", "followers_url": "https://api.github.com/users/sfackler/followers", "following_url": "https://api.github.com/users/sfackler/following{/other_user}", "gists_url": "https://api.github.com/users/sfackler/gists{/gist_id}", "starred_url": "https://api.github.com/users/sfackler/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sfackler/subscriptions", "organizations_url": "https://api.github.com/users/sfackler/orgs", "repos_url": "https://api.github.com/users/sfackler/repos", "events_url": "https://api.github.com/users/sfackler/events{/privacy}", "received_events_url": "https://api.github.com/users/sfackler/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5b838c586c4da31395d614d9f076430314fa05ff", "url": "https://api.github.com/repos/rust-lang/rust/commits/5b838c586c4da31395d614d9f076430314fa05ff", "html_url": "https://github.com/rust-lang/rust/commit/5b838c586c4da31395d614d9f076430314fa05ff"}], "stats": {"total": 64, "additions": 63, "deletions": 1}, "files": [{"sha": "f6931f21eb9d02aea76ec20280f9cff846eb94d0", "filename": "src/libstd/panic.rs", "status": "modified", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/022c9c70c48581b8caa17895b447a941a9750076/src%2Flibstd%2Fpanic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/022c9c70c48581b8caa17895b447a941a9750076/src%2Flibstd%2Fpanic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fpanic.rs?ref=022c9c70c48581b8caa17895b447a941a9750076", "patch": "@@ -13,6 +13,8 @@\n #![unstable(feature = \"std_panic\", reason = \"awaiting feedback\",\n             issue = \"27719\")]\n \n+use any::Any;\n+use boxed::Box;\n use cell::UnsafeCell;\n use ops::{Deref, DerefMut};\n use ptr::{Unique, Shared};\n@@ -259,3 +261,28 @@ pub fn recover<F: FnOnce() -> R + RecoverSafe, R>(f: F) -> Result<R> {\n     }\n     Ok(result.unwrap())\n }\n+\n+/// Triggers a panic without invoking the panic handler.\n+///\n+/// This is designed to be used in conjunction with `recover` to, for example,\n+/// carry a panic across a layer of C code.\n+///\n+/// # Examples\n+///\n+/// ```should_panic\n+/// #![feature(std_panic, recover, panic_propagate)]\n+///\n+/// use std::panic;\n+///\n+/// let result = panic::recover(|| {\n+///     panic!(\"oh no!\");\n+/// });\n+///\n+/// if let Err(err) = result {\n+///     panic::propagate(err);\n+/// }\n+/// ```\n+#[unstable(feature = \"panic_propagate\", reason = \"awaiting feedback\", issue = \"30752\")]\n+pub fn propagate(payload: Box<Any + Send>) -> ! {\n+    unwind::rust_panic(payload)\n+}"}, {"sha": "666b2ed72adcec2ae7bfe58078c636397f2ac67f", "filename": "src/libstd/sys/common/unwind/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/022c9c70c48581b8caa17895b447a941a9750076/src%2Flibstd%2Fsys%2Fcommon%2Funwind%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/022c9c70c48581b8caa17895b447a941a9750076/src%2Flibstd%2Fsys%2Fcommon%2Funwind%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Fcommon%2Funwind%2Fmod.rs?ref=022c9c70c48581b8caa17895b447a941a9750076", "patch": "@@ -172,7 +172,7 @@ pub fn panicking() -> bool {\n #[inline(never)]\n #[no_mangle]\n #[allow(private_no_mangle_fns)]\n-fn rust_panic(cause: Box<Any + Send + 'static>) -> ! {\n+pub fn rust_panic(cause: Box<Any + Send + 'static>) -> ! {\n     unsafe {\n         imp::panic(cause)\n     }"}, {"sha": "c0b2f25d99c07aa9c20e48a368a9299739e9ae91", "filename": "src/test/run-pass/panic-recover-propagate.rs", "status": "added", "additions": 35, "deletions": 0, "changes": 35, "blob_url": "https://github.com/rust-lang/rust/blob/022c9c70c48581b8caa17895b447a941a9750076/src%2Ftest%2Frun-pass%2Fpanic-recover-propagate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/022c9c70c48581b8caa17895b447a941a9750076/src%2Ftest%2Frun-pass%2Fpanic-recover-propagate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fpanic-recover-propagate.rs?ref=022c9c70c48581b8caa17895b447a941a9750076", "patch": "@@ -0,0 +1,35 @@\n+// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![feature(std_panic, recover, panic_propagate, panic_handler, const_fn)]\n+\n+use std::sync::atomic::{AtomicUsize, Ordering};\n+use std::panic;\n+use std::thread;\n+\n+static A: AtomicUsize = AtomicUsize::new(0);\n+\n+fn main() {\n+    panic::set_handler(|_| {\n+        A.fetch_add(1, Ordering::SeqCst);\n+    });\n+\n+    let result = thread::spawn(|| {\n+        let result = panic::recover(|| {\n+            panic!(\"hi there\");\n+        });\n+\n+        panic::propagate(result.err().unwrap());\n+    }).join();\n+\n+    let msg = *result.err().unwrap().downcast::<&'static str>().unwrap();\n+    assert_eq!(\"hi there\", msg);\n+    assert_eq!(1, A.load(Ordering::SeqCst));\n+}"}]}