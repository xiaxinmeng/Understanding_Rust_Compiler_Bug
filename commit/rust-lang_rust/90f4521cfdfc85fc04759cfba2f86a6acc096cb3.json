{"sha": "90f4521cfdfc85fc04759cfba2f86a6acc096cb3", "node_id": "C_kwDOAAsO6NoAKDkwZjQ1MjFjZmRmYzg1ZmMwNDc1OWNmYmEyZjg2YTZhY2MwOTZjYjM", "commit": {"author": {"name": "Cameron Steffen", "email": "cam.steffen94@gmail.com", "date": "2021-10-14T18:28:28Z"}, "committer": {"name": "Cameron Steffen", "email": "cam.steffen94@gmail.com", "date": "2021-10-15T07:36:58Z"}, "message": "Bless tests", "tree": {"sha": "f5fdf5b627cdb8e11004d2f5417c2006e75cb80a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f5fdf5b627cdb8e11004d2f5417c2006e75cb80a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/90f4521cfdfc85fc04759cfba2f86a6acc096cb3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/90f4521cfdfc85fc04759cfba2f86a6acc096cb3", "html_url": "https://github.com/rust-lang/rust/commit/90f4521cfdfc85fc04759cfba2f86a6acc096cb3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/comments", "author": {"login": "camsteffen", "id": 5565418, "node_id": "MDQ6VXNlcjU1NjU0MTg=", "avatar_url": "https://avatars.githubusercontent.com/u/5565418?v=4", "gravatar_id": "", "url": "https://api.github.com/users/camsteffen", "html_url": "https://github.com/camsteffen", "followers_url": "https://api.github.com/users/camsteffen/followers", "following_url": "https://api.github.com/users/camsteffen/following{/other_user}", "gists_url": "https://api.github.com/users/camsteffen/gists{/gist_id}", "starred_url": "https://api.github.com/users/camsteffen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/camsteffen/subscriptions", "organizations_url": "https://api.github.com/users/camsteffen/orgs", "repos_url": "https://api.github.com/users/camsteffen/repos", "events_url": "https://api.github.com/users/camsteffen/events{/privacy}", "received_events_url": "https://api.github.com/users/camsteffen/received_events", "type": "User", "site_admin": false}, "committer": {"login": "camsteffen", "id": 5565418, "node_id": "MDQ6VXNlcjU1NjU0MTg=", "avatar_url": "https://avatars.githubusercontent.com/u/5565418?v=4", "gravatar_id": "", "url": "https://api.github.com/users/camsteffen", "html_url": "https://github.com/camsteffen", "followers_url": "https://api.github.com/users/camsteffen/followers", "following_url": "https://api.github.com/users/camsteffen/following{/other_user}", "gists_url": "https://api.github.com/users/camsteffen/gists{/gist_id}", "starred_url": "https://api.github.com/users/camsteffen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/camsteffen/subscriptions", "organizations_url": "https://api.github.com/users/camsteffen/orgs", "repos_url": "https://api.github.com/users/camsteffen/repos", "events_url": "https://api.github.com/users/camsteffen/events{/privacy}", "received_events_url": "https://api.github.com/users/camsteffen/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f005e9fe96a938947e8f8e3c85268a2b2ed686c1", "url": "https://api.github.com/repos/rust-lang/rust/commits/f005e9fe96a938947e8f8e3c85268a2b2ed686c1", "html_url": "https://github.com/rust-lang/rust/commit/f005e9fe96a938947e8f8e3c85268a2b2ed686c1"}], "stats": {"total": 1129, "additions": 575, "deletions": 554}, "files": [{"sha": "c60997be5d3c3bf5d26f24416b378db453182226", "filename": "src/test/mir-opt/unreachable_asm.main.UnreachablePropagation.diff", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fmir-opt%2Funreachable_asm.main.UnreachablePropagation.diff", "raw_url": "https://github.com/rust-lang/rust/raw/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fmir-opt%2Funreachable_asm.main.UnreachablePropagation.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Funreachable_asm.main.UnreachablePropagation.diff?ref=90f4521cfdfc85fc04759cfba2f86a6acc096cb3", "patch": "@@ -59,7 +59,7 @@\n           StorageDead(_6);                 // scope 2 at $DIR/unreachable_asm.rs:18:9: 18:10\n           StorageDead(_5);                 // scope 2 at $DIR/unreachable_asm.rs:18:9: 18:10\n           StorageLive(_7);                 // scope 2 at $DIR/unreachable_asm.rs:21:9: 21:37\n-          llvm_asm!(LlvmInlineAsmInner { asm: \"NOP\", asm_str_style: Cooked, outputs: [], inputs: [], clobbers: [], volatile: true, alignstack: false, dialect: Att } : [] : []); // scope 3 at $DIR/unreachable_asm.rs:21:18: 21:35\n+          llvm_asm!(LlvmInlineAsmInner { asm: \"NOP\", asm_str_style: Cooked, outputs: [], inputs: [], clobbers: [], volatile: true, alignstack: false, dialect: Att } : [] : []); // scope 3 at $DIR/unreachable_asm.rs:21:18: 21:34\n           _7 = const ();                   // scope 3 at $DIR/unreachable_asm.rs:21:9: 21:37\n           StorageDead(_7);                 // scope 2 at $DIR/unreachable_asm.rs:21:36: 21:37\n           StorageLive(_8);                 // scope 2 at $DIR/unreachable_asm.rs:22:9: 22:21"}, {"sha": "28c5f031dbbe9bda439052aa59b3a23b2b136665", "filename": "src/test/mir-opt/unreachable_asm_2.main.UnreachablePropagation.diff", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fmir-opt%2Funreachable_asm_2.main.UnreachablePropagation.diff", "raw_url": "https://github.com/rust-lang/rust/raw/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fmir-opt%2Funreachable_asm_2.main.UnreachablePropagation.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Funreachable_asm_2.main.UnreachablePropagation.diff?ref=90f4521cfdfc85fc04759cfba2f86a6acc096cb3", "patch": "@@ -49,7 +49,7 @@\n   \n       bb3: {\n           StorageLive(_7);                 // scope 2 at $DIR/unreachable_asm_2.rs:16:13: 16:41\n-          llvm_asm!(LlvmInlineAsmInner { asm: \"NOP\", asm_str_style: Cooked, outputs: [], inputs: [], clobbers: [], volatile: true, alignstack: false, dialect: Att } : [] : []); // scope 3 at $DIR/unreachable_asm_2.rs:16:22: 16:39\n+          llvm_asm!(LlvmInlineAsmInner { asm: \"NOP\", asm_str_style: Cooked, outputs: [], inputs: [], clobbers: [], volatile: true, alignstack: false, dialect: Att } : [] : []); // scope 3 at $DIR/unreachable_asm_2.rs:16:22: 16:38\n           _7 = const ();                   // scope 3 at $DIR/unreachable_asm_2.rs:16:13: 16:41\n           StorageDead(_7);                 // scope 2 at $DIR/unreachable_asm_2.rs:16:40: 16:41\n           _4 = const 21_i32;               // scope 2 at $DIR/unreachable_asm_2.rs:17:13: 17:20\n@@ -60,7 +60,7 @@\n   \n       bb4: {\n           StorageLive(_8);                 // scope 2 at $DIR/unreachable_asm_2.rs:20:13: 20:41\n-          llvm_asm!(LlvmInlineAsmInner { asm: \"NOP\", asm_str_style: Cooked, outputs: [], inputs: [], clobbers: [], volatile: true, alignstack: false, dialect: Att } : [] : []); // scope 4 at $DIR/unreachable_asm_2.rs:20:22: 20:39\n+          llvm_asm!(LlvmInlineAsmInner { asm: \"NOP\", asm_str_style: Cooked, outputs: [], inputs: [], clobbers: [], volatile: true, alignstack: false, dialect: Att } : [] : []); // scope 4 at $DIR/unreachable_asm_2.rs:20:22: 20:38\n           _8 = const ();                   // scope 4 at $DIR/unreachable_asm_2.rs:20:13: 20:41\n           StorageDead(_8);                 // scope 2 at $DIR/unreachable_asm_2.rs:20:40: 20:41\n           _4 = const 42_i32;               // scope 2 at $DIR/unreachable_asm_2.rs:21:13: 21:20"}, {"sha": "19399a0df5bf9932baabe5aecd75cfc52864d55b", "filename": "src/test/rustdoc-ui/intra-doc/warning.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Frustdoc-ui%2Fintra-doc%2Fwarning.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Frustdoc-ui%2Fintra-doc%2Fwarning.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2Fintra-doc%2Fwarning.stderr?ref=90f4521cfdfc85fc04759cfba2f86a6acc096cb3", "patch": "@@ -88,7 +88,7 @@ LL |         #[doc = $f]\n    |         ^^^^^^^^^^^\n ...\n LL | f!(\"Foo\\nbar [BarF] bar\\nbaz\");\n-   | ------------------------------- in this macro invocation\n+   | ------------------------------ in this macro invocation\n    |\n    = note: the link appears in this line:\n            "}, {"sha": "9df6be65eb30150a79652bfd792d35a0b22941e9", "filename": "src/test/ui-fulldeps/internal-lints/lint_pass_impl_without_macro.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui-fulldeps%2Finternal-lints%2Flint_pass_impl_without_macro.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui-fulldeps%2Finternal-lints%2Flint_pass_impl_without_macro.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui-fulldeps%2Finternal-lints%2Flint_pass_impl_without_macro.stderr?ref=90f4521cfdfc85fc04759cfba2f86a6acc096cb3", "patch": "@@ -18,7 +18,7 @@ LL |         impl LintPass for Custom {\n    |              ^^^^^^^^\n ...\n LL | custom_lint_pass_macro!();\n-   | -------------------------- in this macro invocation\n+   | ------------------------- in this macro invocation\n    |\n    = help: try using `declare_lint_pass!` or `impl_lint_pass!` instead\n    = note: this error originates in the macro `custom_lint_pass_macro` (in Nightly builds, run with -Z macro-backtrace for more info)"}, {"sha": "5cc292dbb40c5063717de74e75653cca54d77fa5", "filename": "src/test/ui-fulldeps/issue-76270-panic-in-libproc-macro.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui-fulldeps%2Fissue-76270-panic-in-libproc-macro.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui-fulldeps%2Fissue-76270-panic-in-libproc-macro.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui-fulldeps%2Fissue-76270-panic-in-libproc-macro.stderr?ref=90f4521cfdfc85fc04759cfba2f86a6acc096cb3", "patch": "@@ -2,7 +2,7 @@ error: proc macro panicked\n   --> $DIR/issue-76270-panic-in-libproc-macro.rs:15:1\n    |\n LL | proc_macro_panic::panic_in_libproc_macro!();\n-   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: message: `\"\"` is not a valid identifier\n "}, {"sha": "baed54c59a4e9f6d5d24069feccfdd9848441ff2", "filename": "src/test/ui/annotate-snippet/multispan.stderr", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fannotate-snippet%2Fmultispan.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fannotate-snippet%2Fmultispan.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fannotate-snippet%2Fmultispan.stderr?ref=90f4521cfdfc85fc04759cfba2f86a6acc096cb3", "patch": "@@ -2,41 +2,41 @@ error: hello to you, too!\n   --> $DIR/multispan.rs:15:5\n    |\n LL |     hello!(hi);\n-   |     ^^^^^^^^^^^\n+   |     ^^^^^^^^^^\n    |\n error: hello to you, too!\n   --> $DIR/multispan.rs:18:5\n    |\n LL |     hello!(hi hi);\n-   |     ^^^^^^^^^^^^^^\n+   |     ^^^^^^^^^^^^^\n    |\n error: hello to you, too!\n   --> $DIR/multispan.rs:21:5\n    |\n LL |     hello!(hi hi hi);\n-   |     ^^^^^^^^^^^^^^^^^\n+   |     ^^^^^^^^^^^^^^^^\n    |\n error: hello to you, too!\n   --> $DIR/multispan.rs:24:5\n    |\n LL |     hello!(hi hey hi yo hi beep beep hi hi);\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n error: hello to you, too!\n   --> $DIR/multispan.rs:25:5\n    |\n LL |     hello!(hi there, hi how are you? hi... hi.);\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n error: hello to you, too!\n   --> $DIR/multispan.rs:26:5\n    |\n LL |     hello!(whoah. hi di hi di ho);\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n error: hello to you, too!\n   --> $DIR/multispan.rs:27:5\n    |\n LL |     hello!(hi good hi and good bye);\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |"}, {"sha": "2df17f2e03620aad6daa5a02043989ab39d531d4", "filename": "src/test/ui/asm/aarch64/interpolated-idents.stderr", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fasm%2Faarch64%2Finterpolated-idents.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fasm%2Faarch64%2Finterpolated-idents.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fasm%2Faarch64%2Finterpolated-idents.stderr?ref=90f4521cfdfc85fc04759cfba2f86a6acc096cb3", "patch": "@@ -7,7 +7,7 @@ LL |               $options($pure, $nomem, $readonly, $preserves_flags, $noretur\n LL | /     m!(in out lateout inout inlateout const sym\n LL | |        pure nomem readonly preserves_flags\n LL | |        noreturn nostack options);\n-   | |_________________________________- in this macro invocation\n+   | |________________________________- in this macro invocation\n    |\n    = note: this error originates in the macro `m` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n@@ -20,7 +20,7 @@ LL |               $options($pure, $nomem, $readonly, $preserves_flags, $noretur\n LL | /     m!(in out lateout inout inlateout const sym\n LL | |        pure nomem readonly preserves_flags\n LL | |        noreturn nostack options);\n-   | |_________________________________- in this macro invocation\n+   | |________________________________- in this macro invocation\n    |\n    = note: this error originates in the macro `m` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n@@ -38,12 +38,12 @@ LL |       m!(in out lateout inout inlateout const sym\n    | |\n LL | |        pure nomem readonly preserves_flags\n LL | |        noreturn nostack options);\n-   | |                                 -\n-   | |_________________________________|\n-   | |_________________________________in this macro invocation\n-   | |_________________________________in this macro invocation\n-   | |_________________________________in this macro invocation\n-   |                                   in this macro invocation\n+   | |                                -\n+   | |________________________________|\n+   | |________________________________in this macro invocation\n+   | |________________________________in this macro invocation\n+   | |________________________________in this macro invocation\n+   |                                  in this macro invocation\n    |\n    = note: this error originates in the macro `m` (in Nightly builds, run with -Z macro-backtrace for more info)\n "}, {"sha": "6f318c9b9c2a172e654dc6827179a3d580143296", "filename": "src/test/ui/asm/aarch64/parse-error.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fasm%2Faarch64%2Fparse-error.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fasm%2Faarch64%2Fparse-error.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fasm%2Faarch64%2Fparse-error.stderr?ref=90f4521cfdfc85fc04759cfba2f86a6acc096cb3", "patch": "@@ -2,7 +2,7 @@ error: requires at least a template string argument\n   --> $DIR/parse-error.rs:9:9\n    |\n LL |         asm!();\n-   |         ^^^^^^^\n+   |         ^^^^^^\n \n error: asm template must be a string literal\n   --> $DIR/parse-error.rs:11:14\n@@ -236,7 +236,7 @@ error: requires at least a template string argument\n   --> $DIR/parse-error.rs:90:1\n    |\n LL | global_asm!();\n-   | ^^^^^^^^^^^^^^\n+   | ^^^^^^^^^^^^^\n \n error: asm template must be a string literal\n   --> $DIR/parse-error.rs:92:13"}, {"sha": "cea26d73ab164eede2d9380aef058aa5db6a8850", "filename": "src/test/ui/asm/aarch64/type-check-2.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fasm%2Faarch64%2Ftype-check-2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fasm%2Faarch64%2Ftype-check-2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fasm%2Faarch64%2Ftype-check-2.stderr?ref=90f4521cfdfc85fc04759cfba2f86a6acc096cb3", "patch": "@@ -77,7 +77,7 @@ error[E0381]: use of possibly-uninitialized variable: `y`\n   --> $DIR/type-check-2.rs:20:9\n    |\n LL |         asm!(\"{}\", inout(reg) y);\n-   |         ^^^^^^^^^^^^^^^^^^^^^^^^^ use of possibly-uninitialized `y`\n+   |         ^^^^^^^^^^^^^^^^^^^^^^^^ use of possibly-uninitialized `y`\n \n error[E0596]: cannot borrow `v` as mutable, as it is not declared as mutable\n   --> $DIR/type-check-2.rs:28:29"}, {"sha": "4aa27180758e28f5473152941f0f4988cbde1652", "filename": "src/test/ui/asm/bad-arch.mirunsafeck.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fasm%2Fbad-arch.mirunsafeck.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fasm%2Fbad-arch.mirunsafeck.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fasm%2Fbad-arch.mirunsafeck.stderr?ref=90f4521cfdfc85fc04759cfba2f86a6acc096cb3", "patch": "@@ -2,13 +2,13 @@ error[E0472]: inline assembly is unsupported on this target\n   --> $DIR/bad-arch.rs:22:9\n    |\n LL |         asm!(\"\");\n-   |         ^^^^^^^^^\n+   |         ^^^^^^^^\n \n error[E0472]: inline assembly is unsupported on this target\n   --> $DIR/bad-arch.rs:27:1\n    |\n LL | global_asm!(\"\");\n-   | ^^^^^^^^^^^^^^^^\n+   | ^^^^^^^^^^^^^^^\n    |\n    = note: this error originates in the macro `global_asm` (in Nightly builds, run with -Z macro-backtrace for more info)\n "}, {"sha": "4aa27180758e28f5473152941f0f4988cbde1652", "filename": "src/test/ui/asm/bad-arch.thirunsafeck.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fasm%2Fbad-arch.thirunsafeck.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fasm%2Fbad-arch.thirunsafeck.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fasm%2Fbad-arch.thirunsafeck.stderr?ref=90f4521cfdfc85fc04759cfba2f86a6acc096cb3", "patch": "@@ -2,13 +2,13 @@ error[E0472]: inline assembly is unsupported on this target\n   --> $DIR/bad-arch.rs:22:9\n    |\n LL |         asm!(\"\");\n-   |         ^^^^^^^^^\n+   |         ^^^^^^^^\n \n error[E0472]: inline assembly is unsupported on this target\n   --> $DIR/bad-arch.rs:27:1\n    |\n LL | global_asm!(\"\");\n-   | ^^^^^^^^^^^^^^^^\n+   | ^^^^^^^^^^^^^^^\n    |\n    = note: this error originates in the macro `global_asm` (in Nightly builds, run with -Z macro-backtrace for more info)\n "}, {"sha": "465db634aa2f0b84bf07c4a888150231d9521be6", "filename": "src/test/ui/asm/naked-functions.stderr", "status": "modified", "additions": 11, "deletions": 11, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fasm%2Fnaked-functions.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fasm%2Fnaked-functions.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fasm%2Fnaked-functions.stderr?ref=90f4521cfdfc85fc04759cfba2f86a6acc096cb3", "patch": "@@ -111,7 +111,7 @@ LL | |          in(reg) a,\n ...  |\n LL | |          sym G,\n LL | |     );\n-   | |______^\n+   | |_____^\n    |\n    = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n    = note: for more information, see issue #32408 <https://github.com/rust-lang/rust/issues/32408>\n@@ -156,7 +156,7 @@ warning: asm in naked functions must use `noreturn` option\n   --> $DIR/naked-functions.rs:89:5\n    |\n LL |     asm!(\"\");\n-   |     ^^^^^^^^^\n+   |     ^^^^^^^^\n    |\n    = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n    = note: for more information, see issue #32408 <https://github.com/rust-lang/rust/issues/32408>\n@@ -165,7 +165,7 @@ warning: asm in naked functions must use `noreturn` option\n   --> $DIR/naked-functions.rs:92:5\n    |\n LL |     asm!(\"\");\n-   |     ^^^^^^^^^\n+   |     ^^^^^^^^\n    |\n    = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n    = note: for more information, see issue #32408 <https://github.com/rust-lang/rust/issues/32408>\n@@ -174,7 +174,7 @@ warning: asm in naked functions must use `noreturn` option\n   --> $DIR/naked-functions.rs:95:5\n    |\n LL |     asm!(\"\");\n-   |     ^^^^^^^^^\n+   |     ^^^^^^^^\n    |\n    = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n    = note: for more information, see issue #32408 <https://github.com/rust-lang/rust/issues/32408>\n@@ -188,13 +188,13 @@ LL | |\n LL | |     asm!(\"\");\n ...  |\n LL | |     asm!(\"\");\n-   | |     --------- multiple asm blocks are unsupported in naked functions\n+   | |     -------- multiple asm blocks are unsupported in naked functions\n ...  |\n LL | |     asm!(\"\");\n-   | |     --------- multiple asm blocks are unsupported in naked functions\n+   | |     -------- multiple asm blocks are unsupported in naked functions\n ...  |\n LL | |     asm!(\"\", options(noreturn));\n-   | |     ---------------------------- multiple asm blocks are unsupported in naked functions\n+   | |     --------------------------- multiple asm blocks are unsupported in naked functions\n LL | | }\n    | |_^\n    |\n@@ -228,7 +228,7 @@ warning: the LLVM-style inline assembly is unsupported in naked functions\n   --> $DIR/naked-functions.rs:116:5\n    |\n LL |     llvm_asm!(\"\");\n-   |     ^^^^^^^^^^^^^^\n+   |     ^^^^^^^^^^^^^\n    |\n    = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n    = note: for more information, see issue #32408 <https://github.com/rust-lang/rust/issues/32408>\n@@ -255,7 +255,7 @@ warning: asm options unsupported in naked functions: `nomem`, `preserves_flags`\n   --> $DIR/naked-functions.rs:124:5\n    |\n LL |     asm!(\"\", options(nomem, preserves_flags, noreturn));\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n    = note: for more information, see issue #32408 <https://github.com/rust-lang/rust/issues/32408>\n@@ -264,7 +264,7 @@ warning: asm options unsupported in naked functions: `nostack`, `pure`, `readonl\n   --> $DIR/naked-functions.rs:131:5\n    |\n LL |     asm!(\"\", options(readonly, nostack), options(pure));\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n    = note: for more information, see issue #32408 <https://github.com/rust-lang/rust/issues/32408>\n@@ -273,7 +273,7 @@ warning: asm in naked functions must use `noreturn` option\n   --> $DIR/naked-functions.rs:131:5\n    |\n LL |     asm!(\"\", options(readonly, nostack), options(pure));\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n    = note: for more information, see issue #32408 <https://github.com/rust-lang/rust/issues/32408>"}, {"sha": "babb154ccf435a1adefd4850e91672ce0d6f449e", "filename": "src/test/ui/asm/rustfix-asm.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fasm%2Frustfix-asm.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fasm%2Frustfix-asm.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fasm%2Frustfix-asm.stderr?ref=90f4521cfdfc85fc04759cfba2f86a6acc096cb3", "patch": "@@ -2,7 +2,7 @@ error: the legacy LLVM-style asm! syntax is no longer supported\n   --> $DIR/rustfix-asm.rs:11:9\n    |\n LL |         asm!(\"\" :: \"r\" (x));\n-   |         ----^^^^^^^^^^^^^^^^\n+   |         ----^^^^^^^^^^^^^^^\n    |         |\n    |         help: replace with: `llvm_asm!`\n    |\n@@ -13,7 +13,7 @@ error: the legacy LLVM-style asm! syntax is no longer supported\n   --> $DIR/rustfix-asm.rs:13:9\n    |\n LL |         asm!(\"\" : \"=r\" (y));\n-   |         ----^^^^^^^^^^^^^^^^\n+   |         ----^^^^^^^^^^^^^^^\n    |         |\n    |         help: replace with: `llvm_asm!`\n    |"}, {"sha": "c97cd171b1e38610578588cb1c5363d142741cae", "filename": "src/test/ui/asm/type-check-4.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fasm%2Ftype-check-4.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fasm%2Ftype-check-4.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fasm%2Ftype-check-4.stderr?ref=90f4521cfdfc85fc04759cfba2f86a6acc096cb3", "patch": "@@ -4,7 +4,7 @@ error[E0506]: cannot assign to `a` because it is borrowed\n LL |         let p = &a;\n    |                 -- borrow of `a` occurs here\n LL |         asm!(\"{}\", out(reg) a);\n-   |         ^^^^^^^^^^^^^^^^^^^^^^^ assignment to borrowed `a` occurs here\n+   |         ^^^^^^^^^^^^^^^^^^^^^^ assignment to borrowed `a` occurs here\n LL |\n LL |         println!(\"{}\", p);\n    |                        - borrow later used here"}, {"sha": "6ac2ac5a77914e0df1a59c495d76d26e27597cd1", "filename": "src/test/ui/asm/x86_64/interpolated-idents.stderr", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fasm%2Fx86_64%2Finterpolated-idents.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fasm%2Fx86_64%2Finterpolated-idents.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fasm%2Fx86_64%2Finterpolated-idents.stderr?ref=90f4521cfdfc85fc04759cfba2f86a6acc096cb3", "patch": "@@ -7,7 +7,7 @@ LL |               $options($pure, $nomem, $readonly, $preserves_flags, $noretur\n LL | /     m!(in out lateout inout inlateout const sym\n LL | |        pure nomem readonly preserves_flags\n LL | |        noreturn nostack att_syntax options);\n-   | |____________________________________________- in this macro invocation\n+   | |___________________________________________- in this macro invocation\n    |\n    = note: this error originates in the macro `m` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n@@ -20,7 +20,7 @@ LL |               $options($pure, $nomem, $readonly, $preserves_flags, $noretur\n LL | /     m!(in out lateout inout inlateout const sym\n LL | |        pure nomem readonly preserves_flags\n LL | |        noreturn nostack att_syntax options);\n-   | |____________________________________________- in this macro invocation\n+   | |___________________________________________- in this macro invocation\n    |\n    = note: this error originates in the macro `m` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n@@ -38,12 +38,12 @@ LL |       m!(in out lateout inout inlateout const sym\n    | |\n LL | |        pure nomem readonly preserves_flags\n LL | |        noreturn nostack att_syntax options);\n-   | |                                            -\n-   | |____________________________________________|\n-   | |____________________________________________in this macro invocation\n-   | |____________________________________________in this macro invocation\n-   | |____________________________________________in this macro invocation\n-   |                                              in this macro invocation\n+   | |                                           -\n+   | |___________________________________________|\n+   | |___________________________________________in this macro invocation\n+   | |___________________________________________in this macro invocation\n+   | |___________________________________________in this macro invocation\n+   |                                             in this macro invocation\n    |\n    = note: this error originates in the macro `m` (in Nightly builds, run with -Z macro-backtrace for more info)\n "}, {"sha": "91a6baa4afb299e5af43cba7cf43ba893b78bb2e", "filename": "src/test/ui/asm/x86_64/parse-error.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fasm%2Fx86_64%2Fparse-error.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fasm%2Fx86_64%2Fparse-error.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fasm%2Fx86_64%2Fparse-error.stderr?ref=90f4521cfdfc85fc04759cfba2f86a6acc096cb3", "patch": "@@ -2,7 +2,7 @@ error: requires at least a template string argument\n   --> $DIR/parse-error.rs:9:9\n    |\n LL |         asm!();\n-   |         ^^^^^^^\n+   |         ^^^^^^\n \n error: asm template must be a string literal\n   --> $DIR/parse-error.rs:11:14\n@@ -236,7 +236,7 @@ error: requires at least a template string argument\n   --> $DIR/parse-error.rs:90:1\n    |\n LL | global_asm!();\n-   | ^^^^^^^^^^^^^^\n+   | ^^^^^^^^^^^^^\n \n error: asm template must be a string literal\n   --> $DIR/parse-error.rs:92:13"}, {"sha": "9e73c9a8d6a38f24f40ec71fe9053718a182f1bc", "filename": "src/test/ui/asm/x86_64/type-check-2.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fasm%2Fx86_64%2Ftype-check-2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fasm%2Fx86_64%2Ftype-check-2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fasm%2Fx86_64%2Ftype-check-2.stderr?ref=90f4521cfdfc85fc04759cfba2f86a6acc096cb3", "patch": "@@ -77,7 +77,7 @@ error[E0381]: use of possibly-uninitialized variable: `y`\n   --> $DIR/type-check-2.rs:16:9\n    |\n LL |         asm!(\"{}\", inout(reg) y);\n-   |         ^^^^^^^^^^^^^^^^^^^^^^^^^ use of possibly-uninitialized `y`\n+   |         ^^^^^^^^^^^^^^^^^^^^^^^^ use of possibly-uninitialized `y`\n \n error[E0596]: cannot borrow `v` as mutable, as it is not declared as mutable\n   --> $DIR/type-check-2.rs:24:29"}, {"sha": "7406b2ddee9b223dc22483a89c0a39be0eca88b0", "filename": "src/test/ui/associated-consts/defaults-not-assumed-fail.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fassociated-consts%2Fdefaults-not-assumed-fail.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fassociated-consts%2Fdefaults-not-assumed-fail.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fassociated-consts%2Fdefaults-not-assumed-fail.stderr?ref=90f4521cfdfc85fc04759cfba2f86a6acc096cb3", "patch": "@@ -20,7 +20,7 @@ error: erroneous constant used\n   --> $DIR/defaults-not-assumed-fail.rs:34:5\n    |\n LL |     assert_eq!(<() as Tr>::B, 0);    // causes the error above\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ referenced constant has errors\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ referenced constant has errors\n    |\n    = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n    = note: for more information, see issue #71800 <https://github.com/rust-lang/rust/issues/71800>"}, {"sha": "4c9741f6f37a0bf3eea19018a0c178065abb8933", "filename": "src/test/ui/async-await/issue-73541-2.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fasync-await%2Fissue-73541-2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fasync-await%2Fissue-73541-2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fasync-await%2Fissue-73541-2.stderr?ref=90f4521cfdfc85fc04759cfba2f86a6acc096cb3", "patch": "@@ -8,7 +8,7 @@ LL |                 continue 'a\n    |                          ^^ unreachable label `'a`\n ...\n LL |                 b!();\n-   |                 ----- in this macro invocation\n+   |                 ---- in this macro invocation\n    |\n    = note: labels are unreachable through functions, closures, async blocks and modules\n    = note: this error originates in the macro `b` (in Nightly builds, run with -Z macro-backtrace for more info)"}, {"sha": "ef59381f5f26dba34697ef81249380f21f2632e7", "filename": "src/test/ui/attributes/key-value-expansion.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fattributes%2Fkey-value-expansion.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fattributes%2Fkey-value-expansion.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fattributes%2Fkey-value-expansion.stderr?ref=90f4521cfdfc85fc04759cfba2f86a6acc096cb3", "patch": "@@ -11,7 +11,7 @@ LL |         bug!(\"bug\" + stringify!(found));\n    |              ^^^^^^^^^^^^^^^^^^^^^^^^^\n ...\n LL | bug!();\n-   | ------- in this macro invocation\n+   | ------ in this macro invocation\n    |\n    = note: this error originates in the macro `bug` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n@@ -31,7 +31,7 @@ LL |         doc_comment! {format!(\"{coor}\", coor = stringify!($t1)).as_str()}\n    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n ...\n LL | some_macro!(u8);\n-   | ---------------- in this macro invocation\n+   | --------------- in this macro invocation\n    |\n    = note: this error originates in the macro `some_macro` (in Nightly builds, run with -Z macro-backtrace for more info)\n "}, {"sha": "52376ac19119b7844e6f58d85513a90c066cff80", "filename": "src/test/ui/attributes/nonterminal-expansion.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fattributes%2Fnonterminal-expansion.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fattributes%2Fnonterminal-expansion.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fattributes%2Fnonterminal-expansion.stderr?ref=90f4521cfdfc85fc04759cfba2f86a6acc096cb3", "patch": "@@ -5,7 +5,7 @@ LL |         #[repr(align($n))]\n    |                      ^^\n ...\n LL | pass_nonterminal!(n!());\n-   | ------------------------ in this macro invocation\n+   | ----------------------- in this macro invocation\n    |\n    = note: this error originates in the macro `pass_nonterminal` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n@@ -16,7 +16,7 @@ LL |         #[repr(align($n))]\n    |                ^^^^^^^^^\n ...\n LL | pass_nonterminal!(n!());\n-   | ------------------------ in this macro invocation\n+   | ----------------------- in this macro invocation\n    |\n    = note: this error originates in the macro `pass_nonterminal` (in Nightly builds, run with -Z macro-backtrace for more info)\n "}, {"sha": "db854ae80d738ea1c87a9c6ba796197f31736f6c", "filename": "src/test/ui/binop/issue-77910-1.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fbinop%2Fissue-77910-1.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fbinop%2Fissue-77910-1.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fbinop%2Fissue-77910-1.stderr?ref=90f4521cfdfc85fc04759cfba2f86a6acc096cb3", "patch": "@@ -2,7 +2,7 @@ error[E0369]: binary operation `==` cannot be applied to type `for<'r> fn(&'r i3\n   --> $DIR/issue-77910-1.rs:8:5\n    |\n LL |     assert_eq!(foo, y);\n-   |     ^^^^^^^^^^^^^^^^^^^\n+   |     ^^^^^^^^^^^^^^^^^^\n    |     |\n    |     for<'r> fn(&'r i32) -> &'r i32 {foo}\n    |     _\n@@ -13,7 +13,7 @@ error[E0277]: `for<'r> fn(&'r i32) -> &'r i32 {foo}` doesn't implement `Debug`\n   --> $DIR/issue-77910-1.rs:8:5\n    |\n LL |     assert_eq!(foo, y);\n-   |     ^^^^^^^^^^^^^^^^^^^ `for<'r> fn(&'r i32) -> &'r i32 {foo}` cannot be formatted using `{:?}` because it doesn't implement `Debug`\n+   |     ^^^^^^^^^^^^^^^^^^ `for<'r> fn(&'r i32) -> &'r i32 {foo}` cannot be formatted using `{:?}` because it doesn't implement `Debug`\n    |\n    = help: the trait `Debug` is not implemented for `for<'r> fn(&'r i32) -> &'r i32 {foo}`\n    = note: this error originates in the macro `assert_eq` (in Nightly builds, run with -Z macro-backtrace for more info)"}, {"sha": "36a769fe5292ad8521b8490e845c685bc6f8c25d", "filename": "src/test/ui/block-result/consider-removing-last-semi.fixed", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fblock-result%2Fconsider-removing-last-semi.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fblock-result%2Fconsider-removing-last-semi.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fblock-result%2Fconsider-removing-last-semi.fixed?ref=90f4521cfdfc85fc04759cfba2f86a6acc096cb3", "patch": "@@ -10,4 +10,11 @@ pub fn g() -> String {  //~ ERROR mismatched types\n     \"removeme\".to_string()\n }\n \n+pub fn macro_tests() -> u32 {  //~ ERROR mismatched types\n+    macro_rules! mac {\n+        () => (1);\n+    }\n+    mac!()\n+}\n+\n fn main() {}"}, {"sha": "b9a73148902900cb618fce79d30eed697e367b8f", "filename": "src/test/ui/block-result/consider-removing-last-semi.rs", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fblock-result%2Fconsider-removing-last-semi.rs", "raw_url": "https://github.com/rust-lang/rust/raw/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fblock-result%2Fconsider-removing-last-semi.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fblock-result%2Fconsider-removing-last-semi.rs?ref=90f4521cfdfc85fc04759cfba2f86a6acc096cb3", "patch": "@@ -10,4 +10,11 @@ pub fn g() -> String {  //~ ERROR mismatched types\n     \"removeme\".to_string();\n }\n \n+pub fn macro_tests() -> u32 {  //~ ERROR mismatched types\n+    macro_rules! mac {\n+        () => (1);\n+    }\n+    mac!();\n+}\n+\n fn main() {}"}, {"sha": "99a367bfccdcdf0746401135f964bade172fa00b", "filename": "src/test/ui/block-result/consider-removing-last-semi.stderr", "status": "modified", "additions": 12, "deletions": 1, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fblock-result%2Fconsider-removing-last-semi.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fblock-result%2Fconsider-removing-last-semi.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fblock-result%2Fconsider-removing-last-semi.stderr?ref=90f4521cfdfc85fc04759cfba2f86a6acc096cb3", "patch": "@@ -20,6 +20,17 @@ LL |     \"this won't work\".to_string();\n LL |     \"removeme\".to_string();\n    |                           - help: consider removing this semicolon\n \n-error: aborting due to 2 previous errors\n+error[E0308]: mismatched types\n+  --> $DIR/consider-removing-last-semi.rs:13:25\n+   |\n+LL | pub fn macro_tests() -> u32 {\n+   |        -----------      ^^^ expected `u32`, found `()`\n+   |        |\n+   |        implicitly returns `()` as its body has no tail or `return` expression\n+...\n+LL |     mac!();\n+   |           - help: consider removing this semicolon\n+\n+error: aborting due to 3 previous errors\n \n For more information about this error, try `rustc --explain E0308`."}, {"sha": "2f24679cc9591bc1f2603eb7d79541c582441f1e", "filename": "src/test/ui/block-result/issue-13428.stderr", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fblock-result%2Fissue-13428.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fblock-result%2Fissue-13428.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fblock-result%2Fissue-13428.stderr?ref=90f4521cfdfc85fc04759cfba2f86a6acc096cb3", "patch": "@@ -5,9 +5,6 @@ LL | fn foo() -> String {\n    |    ---      ^^^^^^ expected struct `String`, found `()`\n    |    |\n    |    implicitly returns `()` as its body has no tail or `return` expression\n-...\n-LL |     ;\n-   |     - help: consider removing this semicolon\n \n error[E0308]: mismatched types\n   --> $DIR/issue-13428.rs:11:13"}, {"sha": "78f99e904152216e75f49d9be4b84f2d7f798fcc", "filename": "src/test/ui/borrowck/move-error-snippets.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fborrowck%2Fmove-error-snippets.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fborrowck%2Fmove-error-snippets.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fborrowck%2Fmove-error-snippets.stderr?ref=90f4521cfdfc85fc04759cfba2f86a6acc096cb3", "patch": "@@ -10,7 +10,7 @@ LL |         let a = $c;\n   ::: $DIR/move-error-snippets.rs:21:1\n    |\n LL | sss!();\n-   | ------- in this macro invocation\n+   | ------ in this macro invocation\n    |\n    = note: this error originates in the macro `aaa` (in Nightly builds, run with -Z macro-backtrace for more info)\n "}, {"sha": "675ba0313d73e59588fb28b916319f70ea0b775c", "filename": "src/test/ui/closures/2229_closure_analysis/migrations/closure-body-macro-fragment.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fclosures%2F2229_closure_analysis%2Fmigrations%2Fclosure-body-macro-fragment.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fclosures%2F2229_closure_analysis%2Fmigrations%2Fclosure-body-macro-fragment.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fclosures%2F2229_closure_analysis%2Fmigrations%2Fclosure-body-macro-fragment.stderr?ref=90f4521cfdfc85fc04759cfba2f86a6acc096cb3", "patch": "@@ -17,7 +17,7 @@ LL | |         let x = a.0;\n    | |                 --- in Rust 2018, this closure captures all of `a`, but in Rust 2021, it will only capture `a.0`\n LL | |         println!(\"{:?}\", x);\n LL | |     });\n-   | |_______- in this macro invocation\n+   | |______- in this macro invocation\n    |\n note: the lint level is defined here\n   --> $DIR/closure-body-macro-fragment.rs:4:9"}, {"sha": "ba056cccf997df025ccadf6a05e6a5d94d680ffb", "filename": "src/test/ui/codemap_tests/bad-format-args.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fcodemap_tests%2Fbad-format-args.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fcodemap_tests%2Fbad-format-args.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcodemap_tests%2Fbad-format-args.stderr?ref=90f4521cfdfc85fc04759cfba2f86a6acc096cb3", "patch": "@@ -2,7 +2,7 @@ error: requires at least a format string argument\n   --> $DIR/bad-format-args.rs:2:5\n    |\n LL |     format!();\n-   |     ^^^^^^^^^^\n+   |     ^^^^^^^^^\n    |\n    = note: this error originates in the macro `$crate::__export::format_args` (in Nightly builds, run with -Z macro-backtrace for more info)\n "}, {"sha": "7daa0510cfa1cc6ad1dce8f812bc4c4d4e8dc6ac", "filename": "src/test/ui/codemap_tests/issue-28308.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fcodemap_tests%2Fissue-28308.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fcodemap_tests%2Fissue-28308.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcodemap_tests%2Fissue-28308.stderr?ref=90f4521cfdfc85fc04759cfba2f86a6acc096cb3", "patch": "@@ -2,7 +2,7 @@ error[E0600]: cannot apply unary operator `!` to type `&'static str`\n   --> $DIR/issue-28308.rs:2:5\n    |\n LL |     assert!(\"foo\");\n-   |     ^^^^^^^^^^^^^^^ cannot apply unary operator `!`\n+   |     ^^^^^^^^^^^^^^ cannot apply unary operator `!`\n    |\n    = note: this error originates in the macro `assert` (in Nightly builds, run with -Z macro-backtrace for more info)\n "}, {"sha": "91ebcaa6e9de6d2753ef18c4a550d3a06b7e4711", "filename": "src/test/ui/compile_error_macro.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fcompile_error_macro.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fcompile_error_macro.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcompile_error_macro.stderr?ref=90f4521cfdfc85fc04759cfba2f86a6acc096cb3", "patch": "@@ -2,7 +2,7 @@ error: a very descriptive error message\n   --> $DIR/compile_error_macro.rs:2:5\n    |\n LL |     compile_error!(\"a very descriptive error message\");\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: aborting due to previous error\n "}, {"sha": "a057fd19b16b96d856be63e203c462e8589f0d45", "filename": "src/test/ui/conditional-compilation/cfg-attr-syntax-validation.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fconditional-compilation%2Fcfg-attr-syntax-validation.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fconditional-compilation%2Fcfg-attr-syntax-validation.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconditional-compilation%2Fcfg-attr-syntax-validation.stderr?ref=90f4521cfdfc85fc04759cfba2f86a6acc096cb3", "patch": "@@ -59,7 +59,7 @@ LL |         #[cfg(feature = $expr)]\n    |                         ^^^^^\n ...\n LL | generate_s10!(concat!(\"nonexistent\"));\n-   | -------------------------------------- in this macro invocation\n+   | ------------------------------------- in this macro invocation\n    |\n    = note: this error originates in the macro `generate_s10` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n@@ -70,7 +70,7 @@ LL |         #[cfg(feature = $expr)]\n    |                         ^^^^^\n ...\n LL | generate_s10!(concat!(\"nonexistent\"));\n-   | -------------------------------------- in this macro invocation\n+   | ------------------------------------- in this macro invocation\n    |\n    = note: this error originates in the macro `generate_s10` (in Nightly builds, run with -Z macro-backtrace for more info)\n "}, {"sha": "fc8df6552c3e1af600be40b87838d77bc2a90b6c", "filename": "src/test/ui/conditional-compilation/cfg-attr-unknown-attribute-macro-expansion.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fconditional-compilation%2Fcfg-attr-unknown-attribute-macro-expansion.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fconditional-compilation%2Fcfg-attr-unknown-attribute-macro-expansion.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconditional-compilation%2Fcfg-attr-unknown-attribute-macro-expansion.stderr?ref=90f4521cfdfc85fc04759cfba2f86a6acc096cb3", "patch": "@@ -5,7 +5,7 @@ LL |         #[cfg_attr(all(), unknown)]\n    |                           ^^^^^^^\n ...\n LL | foo!();\n-   | ------- in this macro invocation\n+   | ------ in this macro invocation\n    |\n    = note: this error originates in the macro `foo` (in Nightly builds, run with -Z macro-backtrace for more info)\n "}, {"sha": "a66d79a16160c19d006fb5b80c49d14841c0390a", "filename": "src/test/ui/consts/const-external-macro-const-err.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fconsts%2Fconst-external-macro-const-err.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fconsts%2Fconst-external-macro-const-err.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst-external-macro-const-err.stderr?ref=90f4521cfdfc85fc04759cfba2f86a6acc096cb3", "patch": "@@ -2,7 +2,7 @@ error: any use of this value will cause an error\n   --> $DIR/const-external-macro-const-err.rs:12:5\n    |\n LL |     static_assert!(2 + 2 == 5);\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^ index out of bounds: the length is 1 but the index is 1\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^ index out of bounds: the length is 1 but the index is 1\n    |\n    = note: `#[deny(const_err)]` on by default\n    = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!"}, {"sha": "6155c935a5f6c7e8a4675d85a94017a6f19eac94", "filename": "src/test/ui/consts/issue-32829.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fconsts%2Fissue-32829.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fconsts%2Fissue-32829.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fissue-32829.stderr?ref=90f4521cfdfc85fc04759cfba2f86a6acc096cb3", "patch": "@@ -2,7 +2,7 @@ error[E0080]: could not evaluate static initializer\n   --> $DIR/issue-32829.rs:1:22\n    |\n LL | static S : u64 = { { panic!(\"foo\"); 0 } };\n-   |                      ^^^^^^^^^^^^^^ the evaluated program panicked at 'foo', $DIR/issue-32829.rs:1:22\n+   |                      ^^^^^^^^^^^^^ the evaluated program panicked at 'foo', $DIR/issue-32829.rs:1:22\n    |\n    = note: this error originates in the macro `$crate::panic::panic_2015` (in Nightly builds, run with -Z macro-backtrace for more info)\n "}, {"sha": "3530324bda27ca03935d94732c26af10e31bbbfd", "filename": "src/test/ui/consts/issue-66693.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fconsts%2Fissue-66693.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fconsts%2Fissue-66693.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fissue-66693.stderr?ref=90f4521cfdfc85fc04759cfba2f86a6acc096cb3", "patch": "@@ -18,7 +18,7 @@ error: argument to `panic!()` in a const context must have type `&str`\n   --> $DIR/issue-66693.rs:11:5\n    |\n LL |     panic!(&1);\n-   |     ^^^^^^^^^^^\n+   |     ^^^^^^^^^^\n    |\n    = note: this error originates in the macro `$crate::panic::panic_2015` (in Nightly builds, run with -Z macro-backtrace for more info)\n "}, {"sha": "ac9191a340c2ee4bc7fc8300c3f6e45ba9603c31", "filename": "src/test/ui/consts/miri_unleashed/inline_asm.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fconsts%2Fmiri_unleashed%2Finline_asm.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fconsts%2Fmiri_unleashed%2Finline_asm.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fmiri_unleashed%2Finline_asm.stderr?ref=90f4521cfdfc85fc04759cfba2f86a6acc096cb3", "patch": "@@ -2,28 +2,28 @@ error[E0080]: could not evaluate static initializer\n   --> $DIR/inline_asm.rs:11:14\n    |\n LL |     unsafe { llvm_asm!(\"xor %eax, %eax\" ::: \"eax\"); }\n-   |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ inline assembly is not supported\n+   |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ inline assembly is not supported\n    |\n    = note: this error originates in the macro `llvm_asm` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n error[E0080]: could not evaluate static initializer\n   --> $DIR/inline_asm.rs:20:14\n    |\n LL |     unsafe { asm!(\"nop\"); }\n-   |              ^^^^^^^^^^^^ inline assembly is not supported\n+   |              ^^^^^^^^^^^ inline assembly is not supported\n \n warning: skipping const checks\n    |\n help: skipping check that does not even have a feature gate\n   --> $DIR/inline_asm.rs:11:14\n    |\n LL |     unsafe { llvm_asm!(\"xor %eax, %eax\" ::: \"eax\"); }\n-   |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n help: skipping check that does not even have a feature gate\n   --> $DIR/inline_asm.rs:20:14\n    |\n LL |     unsafe { asm!(\"nop\"); }\n-   |              ^^^^^^^^^^^^\n+   |              ^^^^^^^^^^^\n    = note: this warning originates in the macro `llvm_asm` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n error: aborting due to 2 previous errors; 1 warning emitted"}, {"sha": "6e2a1d3bbc4dff8f921ba0f65b3ca5925cab4b55", "filename": "src/test/ui/cross/cross-crate-macro-backtrace/main.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fcross%2Fcross-crate-macro-backtrace%2Fmain.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fcross%2Fcross-crate-macro-backtrace%2Fmain.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcross%2Fcross-crate-macro-backtrace%2Fmain.stderr?ref=90f4521cfdfc85fc04759cfba2f86a6acc096cb3", "patch": "@@ -2,7 +2,7 @@ error: 1 positional argument in format string, but no arguments were given\n   --> $DIR/main.rs:6:5\n    |\n LL |     myprintln!(\"{}\");\n-   |     ^^^^^^^^^^^^^^^^^\n+   |     ^^^^^^^^^^^^^^^^\n    |\n    = note: this error originates in the macro `concat` (in Nightly builds, run with -Z macro-backtrace for more info)\n "}, {"sha": "829535f9212ebb10d7e00468933162b6c98d0bce", "filename": "src/test/ui/cross/cross-file-errors/main.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fcross%2Fcross-file-errors%2Fmain.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fcross%2Fcross-file-errors%2Fmain.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcross%2Fcross-file-errors%2Fmain.stderr?ref=90f4521cfdfc85fc04759cfba2f86a6acc096cb3", "patch": "@@ -7,7 +7,7 @@ LL |         _\n   ::: $DIR/main.rs:5:5\n    |\n LL |     underscore!();\n-   |     -------------- in this macro invocation\n+   |     ------------- in this macro invocation\n    |\n    = note: see issue #71126 <https://github.com/rust-lang/rust/issues/71126> for more information\n    = help: add `#![feature(destructuring_assignment)]` to the crate attributes to enable\n@@ -22,7 +22,7 @@ LL |         _\n   ::: $DIR/main.rs:5:5\n    |\n LL |     underscore!();\n-   |     -------------- in this macro invocation\n+   |     ------------- in this macro invocation\n    |\n    = note: this error originates in the macro `underscore` (in Nightly builds, run with -Z macro-backtrace for more info)\n "}, {"sha": "a73e5605271be74c5e168af3192484083fc4dc70", "filename": "src/test/ui/deprecation/deprecation-lint-2.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fdeprecation%2Fdeprecation-lint-2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fdeprecation%2Fdeprecation-lint-2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fdeprecation%2Fdeprecation-lint-2.stderr?ref=90f4521cfdfc85fc04759cfba2f86a6acc096cb3", "patch": "@@ -2,7 +2,7 @@ error: use of deprecated function `deprecation_lint::deprecated`: text\n   --> $DIR/deprecation-lint-2.rs:12:5\n    |\n LL |     macro_test!();\n-   |     ^^^^^^^^^^^^^^\n+   |     ^^^^^^^^^^^^^\n    |\n note: the lint level is defined here\n   --> $DIR/deprecation-lint-2.rs:4:9"}, {"sha": "c295cac9aa4b27495d45b8452c6bda4d6b71afa5", "filename": "src/test/ui/did_you_mean/bad-assoc-expr.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fdid_you_mean%2Fbad-assoc-expr.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fdid_you_mean%2Fbad-assoc-expr.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fdid_you_mean%2Fbad-assoc-expr.stderr?ref=90f4521cfdfc85fc04759cfba2f86a6acc096cb3", "patch": "@@ -53,7 +53,7 @@ LL |     ($ty: ty) => ($ty::clone(&0))\n    |                   ^^^^^^^^^^ help: try: `<$ty>::clone`\n ...\n LL |     expr!(u8);\n-   |     ---------- in this macro invocation\n+   |     --------- in this macro invocation\n    |\n    = note: this error originates in the macro `expr` (in Nightly builds, run with -Z macro-backtrace for more info)\n "}, {"sha": "71855cf1e20f3f5f72740739914840d057ef9ba4", "filename": "src/test/ui/did_you_mean/recursion_limit_macro.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fdid_you_mean%2Frecursion_limit_macro.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fdid_you_mean%2Frecursion_limit_macro.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fdid_you_mean%2Frecursion_limit_macro.stderr?ref=90f4521cfdfc85fc04759cfba2f86a6acc096cb3", "patch": "@@ -5,7 +5,7 @@ LL |     ($t:tt $($tail:tt)*) => { recurse!($($tail)*) };\n    |                               ^^^^^^^^^^^^^^^^^^^\n ...\n LL |     recurse!(0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9);\n-   |     -------------------------------------------------- in this macro invocation\n+   |     ------------------------------------------------- in this macro invocation\n    |\n    = help: consider increasing the recursion limit by adding a `#![recursion_limit = \"20\"]` attribute to your crate (`recursion_limit_macro`)\n    = note: this error originates in the macro `recurse` (in Nightly builds, run with -Z macro-backtrace for more info)"}, {"sha": "8976341b1ad9748f47982ba087721b23fbff60ab", "filename": "src/test/ui/directory_ownership/macro-expanded-mod.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fdirectory_ownership%2Fmacro-expanded-mod.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fdirectory_ownership%2Fmacro-expanded-mod.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fdirectory_ownership%2Fmacro-expanded-mod.stderr?ref=90f4521cfdfc85fc04759cfba2f86a6acc096cb3", "patch": "@@ -5,7 +5,7 @@ LL |         mod $i;\n    |         ^^^^^^^\n ...\n LL |     mod_decl!(foo);\n-   |     --------------- in this macro invocation\n+   |     -------------- in this macro invocation\n    |\n    = note: this error originates in the macro `mod_decl` (in Nightly builds, run with -Z macro-backtrace for more info)\n "}, {"sha": "d46029710d6f7e0e4c2918baf6839cad7abd6d3e", "filename": "src/test/ui/dollar-crate/dollar-crate-is-keyword-2.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fdollar-crate%2Fdollar-crate-is-keyword-2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fdollar-crate%2Fdollar-crate-is-keyword-2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fdollar-crate%2Fdollar-crate-is-keyword-2.stderr?ref=90f4521cfdfc85fc04759cfba2f86a6acc096cb3", "patch": "@@ -5,7 +5,7 @@ LL |         use a::$crate::b;\n    |                ^^^^^^ `$crate` in paths can only be used in start position\n ...\n LL | m!();\n-   | ----- in this macro invocation\n+   | ---- in this macro invocation\n    |\n    = note: this error originates in the macro `m` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n@@ -16,7 +16,7 @@ LL |         use a::$crate;\n    |             ^^^^^^^^^ no `$crate` in `a`\n ...\n LL | m!();\n-   | ----- in this macro invocation\n+   | ---- in this macro invocation\n    |\n    = note: this error originates in the macro `m` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n@@ -27,7 +27,7 @@ LL |         type A = a::$crate;\n    |                     ^^^^^^ `$crate` in paths can only be used in start position\n ...\n LL | m!();\n-   | ----- in this macro invocation\n+   | ---- in this macro invocation\n    |\n    = note: this error originates in the macro `m` (in Nightly builds, run with -Z macro-backtrace for more info)\n "}, {"sha": "b02782230741782999b2432967ee38dc3f40f602", "filename": "src/test/ui/dollar-crate/dollar-crate-is-keyword.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fdollar-crate%2Fdollar-crate-is-keyword.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fdollar-crate%2Fdollar-crate-is-keyword.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fdollar-crate%2Fdollar-crate-is-keyword.stderr?ref=90f4521cfdfc85fc04759cfba2f86a6acc096cb3", "patch": "@@ -5,7 +5,7 @@ LL |             struct $crate {}\n    |                    ^^^^^^ expected identifier, found reserved identifier\n ...\n LL | m!();\n-   | ----- in this macro invocation\n+   | ---- in this macro invocation\n    |\n    = note: this error originates in the macro `m` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n@@ -16,7 +16,7 @@ LL |         use $crate as $crate;\n    |                       ^^^^^^ expected identifier, found reserved identifier\n ...\n LL | m!();\n-   | ----- in this macro invocation\n+   | ---- in this macro invocation\n    |\n    = note: this error originates in the macro `m` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n@@ -27,7 +27,7 @@ LL |         use $crate;\n    |         ^^^^^^^^^^^\n ...\n LL | m!();\n-   | ----- in this macro invocation\n+   | ---- in this macro invocation\n    |\n    = note: this error originates in the macro `m` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n@@ -38,7 +38,7 @@ LL |         use $crate as $crate;\n    |         ^^^^^^^^^^^^^^^^^^^^^\n ...\n LL | m!();\n-   | ----- in this macro invocation\n+   | ---- in this macro invocation\n    |\n    = note: this error originates in the macro `m` (in Nightly builds, run with -Z macro-backtrace for more info)\n "}, {"sha": "3f38e6f8e8036849cf579d2404bdec8faed07eae", "filename": "src/test/ui/editions/edition-imports-2015.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Feditions%2Fedition-imports-2015.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Feditions%2Fedition-imports-2015.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Feditions%2Fedition-imports-2015.stderr?ref=90f4521cfdfc85fc04759cfba2f86a6acc096cb3", "patch": "@@ -2,7 +2,7 @@ error: cannot glob-import all possible crates\n   --> $DIR/edition-imports-2015.rs:23:5\n    |\n LL |     gen_glob!();\n-   |     ^^^^^^^^^^^^\n+   |     ^^^^^^^^^^^\n    |\n    = note: this error originates in the macro `gen_glob` (in Nightly builds, run with -Z macro-backtrace for more info)\n "}, {"sha": "e7f760e49bcc0783790919f919a09b7848c41a60", "filename": "src/test/ui/editions/edition-imports-2018.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Feditions%2Fedition-imports-2018.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Feditions%2Fedition-imports-2018.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Feditions%2Fedition-imports-2018.stderr?ref=90f4521cfdfc85fc04759cfba2f86a6acc096cb3", "patch": "@@ -2,7 +2,7 @@ error: cannot glob-import all possible crates\n   --> $DIR/edition-imports-2018.rs:24:5\n    |\n LL |     gen_glob!();\n-   |     ^^^^^^^^^^^^\n+   |     ^^^^^^^^^^^\n    |\n    = note: this error originates in the macro `gen_glob` (in Nightly builds, run with -Z macro-backtrace for more info)\n "}, {"sha": "e4bdd28213ea44f292b27e24c0b3525a4e80d247", "filename": "src/test/ui/editions/edition-imports-virtual-2015-gated.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Feditions%2Fedition-imports-virtual-2015-gated.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Feditions%2Fedition-imports-virtual-2015-gated.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Feditions%2Fedition-imports-virtual-2015-gated.stderr?ref=90f4521cfdfc85fc04759cfba2f86a6acc096cb3", "patch": "@@ -2,7 +2,7 @@ error[E0432]: unresolved import `E`\n   --> $DIR/edition-imports-virtual-2015-gated.rs:8:5\n    |\n LL |     gen_gated!();\n-   |     ^^^^^^^^^^^^^ could not find `E` in the list of imported crates\n+   |     ^^^^^^^^^^^^ could not find `E` in the list of imported crates\n    |\n    = note: this error originates in the macro `gen_gated` (in Nightly builds, run with -Z macro-backtrace for more info)\n "}, {"sha": "f583dbbdc64f8e4f0d0b0274d394ca8379762427", "filename": "src/test/ui/empty/empty-comment.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fempty%2Fempty-comment.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fempty%2Fempty-comment.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fempty%2Fempty-comment.stderr?ref=90f4521cfdfc85fc04759cfba2f86a6acc096cb3", "patch": "@@ -5,7 +5,7 @@ LL | macro_rules! one_arg_macro {\n    | -------------------------- when calling this macro\n ...\n LL |     one_arg_macro!(/**/);\n-   |     ^^^^^^^^^^^^^^^^^^^^^ missing tokens in macro arguments\n+   |     ^^^^^^^^^^^^^^^^^^^^ missing tokens in macro arguments\n \n error: aborting due to previous error\n "}, {"sha": "d9d2f35251b9bfc6760e88490a5852ed0a00afcf", "filename": "src/test/ui/error-codes/E0660.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Ferror-codes%2FE0660.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Ferror-codes%2FE0660.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ferror-codes%2FE0660.stderr?ref=90f4521cfdfc85fc04759cfba2f86a6acc096cb3", "patch": "@@ -2,13 +2,13 @@ error[E0660]: malformed inline assembly\n   --> $DIR/E0660.rs:6:5\n    |\n LL |     llvm_asm!(\"nop\" \"nop\");\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^\n+   |     ^^^^^^^^^^^^^^^^^^^^^^\n \n error[E0660]: malformed inline assembly\n   --> $DIR/E0660.rs:8:5\n    |\n LL |     llvm_asm!(\"nop\" \"nop\" : \"=r\"(a));\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: aborting due to 2 previous errors\n "}, {"sha": "3f3a2245834240fe83ac6076e5858db0b5938476", "filename": "src/test/ui/expr/if/if-let.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fexpr%2Fif%2Fif-let.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fexpr%2Fif%2Fif-let.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fexpr%2Fif%2Fif-let.stderr?ref=90f4521cfdfc85fc04759cfba2f86a6acc096cb3", "patch": "@@ -7,7 +7,7 @@ LL |               if let $p = $e $b\n LL | /     foo!(a, 1, {\n LL | |         println!(\"irrefutable pattern\");\n LL | |     });\n-   | |_______- in this macro invocation\n+   | |______- in this macro invocation\n    |\n    = note: `#[warn(irrefutable_let_patterns)]` on by default\n    = note: this pattern will always match, so the `if let` is useless\n@@ -23,7 +23,7 @@ LL |               if let $p = $e $b\n LL | /     bar!(a, 1, {\n LL | |         println!(\"irrefutable pattern\");\n LL | |     });\n-   | |_______- in this macro invocation\n+   | |______- in this macro invocation\n    |\n    = note: this pattern will always match, so the `if let` is useless\n    = help: consider replacing the `if let` with a `let`"}, {"sha": "318ed635be0282926c9fddff0936cfd0b07c37a7", "filename": "src/test/ui/extenv/extenv-no-args.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fextenv%2Fextenv-no-args.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fextenv%2Fextenv-no-args.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fextenv%2Fextenv-no-args.stderr?ref=90f4521cfdfc85fc04759cfba2f86a6acc096cb3", "patch": "@@ -2,7 +2,7 @@ error: env! takes 1 or 2 arguments\n   --> $DIR/extenv-no-args.rs:1:13\n    |\n LL | fn main() { env!(); }\n-   |             ^^^^^^^\n+   |             ^^^^^^\n \n error: aborting due to previous error\n "}, {"sha": "e7da4e046ab85833e0003338beb0cc124004f777", "filename": "src/test/ui/extenv/extenv-not-defined-custom.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fextenv%2Fextenv-not-defined-custom.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fextenv%2Fextenv-not-defined-custom.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fextenv%2Fextenv-not-defined-custom.stderr?ref=90f4521cfdfc85fc04759cfba2f86a6acc096cb3", "patch": "@@ -2,7 +2,7 @@ error: my error message\n   --> $DIR/extenv-not-defined-custom.rs:1:13\n    |\n LL | fn main() { env!(\"__HOPEFULLY_NOT_DEFINED__\", \"my error message\"); }\n-   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: this error originates in the macro `env` (in Nightly builds, run with -Z macro-backtrace for more info)\n "}, {"sha": "884875dca53945e0a25e494ec3cd29fc3d4ae805", "filename": "src/test/ui/extenv/extenv-not-defined-default.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fextenv%2Fextenv-not-defined-default.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fextenv%2Fextenv-not-defined-default.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fextenv%2Fextenv-not-defined-default.stderr?ref=90f4521cfdfc85fc04759cfba2f86a6acc096cb3", "patch": "@@ -2,7 +2,7 @@ error: environment variable `__HOPEFULLY_NOT_DEFINED__` not defined\n   --> $DIR/extenv-not-defined-default.rs:2:5\n    |\n LL |     env!(\"__HOPEFULLY_NOT_DEFINED__\");\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: this error originates in the macro `env` (in Nightly builds, run with -Z macro-backtrace for more info)\n "}, {"sha": "54150a3328f923935c3a7fef4703412f38a9bfe9", "filename": "src/test/ui/extenv/extenv-too-many-args.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fextenv%2Fextenv-too-many-args.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fextenv%2Fextenv-too-many-args.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fextenv%2Fextenv-too-many-args.stderr?ref=90f4521cfdfc85fc04759cfba2f86a6acc096cb3", "patch": "@@ -2,7 +2,7 @@ error: env! takes 1 or 2 arguments\n   --> $DIR/extenv-too-many-args.rs:1:13\n    |\n LL | fn main() { env!(\"one\", \"two\", \"three\"); }\n-   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: aborting due to previous error\n "}, {"sha": "65067942b85c4a75cdc894ea07b917efd55859b1", "filename": "src/test/ui/extoption_env-no-args.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fextoption_env-no-args.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fextoption_env-no-args.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fextoption_env-no-args.stderr?ref=90f4521cfdfc85fc04759cfba2f86a6acc096cb3", "patch": "@@ -2,7 +2,7 @@ error: option_env! takes 1 argument\n   --> $DIR/extoption_env-no-args.rs:1:13\n    |\n LL | fn main() { option_env!(); }\n-   |             ^^^^^^^^^^^^^^\n+   |             ^^^^^^^^^^^^^\n \n error: aborting due to previous error\n "}, {"sha": "a34e60b6448f92e687519df80668c4665a14ce00", "filename": "src/test/ui/extoption_env-too-many-args.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fextoption_env-too-many-args.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fextoption_env-too-many-args.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fextoption_env-too-many-args.stderr?ref=90f4521cfdfc85fc04759cfba2f86a6acc096cb3", "patch": "@@ -2,7 +2,7 @@ error: option_env! takes 1 argument\n   --> $DIR/extoption_env-too-many-args.rs:1:13\n    |\n LL | fn main() { option_env!(\"one\", \"two\"); }\n-   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |             ^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: aborting due to previous error\n "}, {"sha": "4621bc0b30e53e9431d07eabdc94594ff9c56a95", "filename": "src/test/ui/feature-gates/feature-gate-allow-internal-unsafe-nested-macro.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-allow-internal-unsafe-nested-macro.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-allow-internal-unsafe-nested-macro.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-allow-internal-unsafe-nested-macro.stderr?ref=90f4521cfdfc85fc04759cfba2f86a6acc096cb3", "patch": "@@ -5,7 +5,7 @@ LL |         #[allow_internal_unsafe]\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^\n ...\n LL | bar!();\n-   | ------- in this macro invocation\n+   | ------ in this macro invocation\n    |\n    = help: add `#![feature(allow_internal_unsafe)]` to the crate attributes to enable\n    = note: this error originates in the macro `bar` (in Nightly builds, run with -Z macro-backtrace for more info)"}, {"sha": "1232d13a457a7865800a0503136c037791f7f003", "filename": "src/test/ui/feature-gates/feature-gate-allow-internal-unstable-nested-macro.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-allow-internal-unstable-nested-macro.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-allow-internal-unstable-nested-macro.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-allow-internal-unstable-nested-macro.stderr?ref=90f4521cfdfc85fc04759cfba2f86a6acc096cb3", "patch": "@@ -5,7 +5,7 @@ LL |         #[allow_internal_unstable()]\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n ...\n LL | bar!();\n-   | ------- in this macro invocation\n+   | ------ in this macro invocation\n    |\n    = help: add `#![feature(allow_internal_unstable)]` to the crate attributes to enable\n    = note: this error originates in the macro `bar` (in Nightly builds, run with -Z macro-backtrace for more info)"}, {"sha": "8663bc7ca7e77e4b0cab55ba8069ada9911afa43", "filename": "src/test/ui/feature-gates/feature-gate-concat_idents2.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-concat_idents2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-concat_idents2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-concat_idents2.stderr?ref=90f4521cfdfc85fc04759cfba2f86a6acc096cb3", "patch": "@@ -11,7 +11,7 @@ error[E0425]: cannot find value `ab` in this scope\n   --> $DIR/feature-gate-concat_idents2.rs:2:5\n    |\n LL |     concat_idents!(a, b);\n-   |     ^^^^^^^^^^^^^^^^^^^^^ not found in this scope\n+   |     ^^^^^^^^^^^^^^^^^^^^ not found in this scope\n    |\n    = note: this error originates in the macro `concat_idents` (in Nightly builds, run with -Z macro-backtrace for more info)\n "}, {"sha": "f80506831b4e8172a3c3d4a69f99e8a17ba2b12f", "filename": "src/test/ui/feature-gates/thread-local-const-init.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Ffeature-gates%2Fthread-local-const-init.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Ffeature-gates%2Fthread-local-const-init.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Fthread-local-const-init.stderr?ref=90f4521cfdfc85fc04759cfba2f86a6acc096cb3", "patch": "@@ -2,7 +2,7 @@ error[E0658]: use of unstable library feature 'thread_local_const_init'\n   --> $DIR/thread-local-const-init.rs:1:1\n    |\n LL | thread_local!(static X: u32 = const { 0 });\n-   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: see issue #84223 <https://github.com/rust-lang/rust/issues/84223> for more information\n    = help: add `#![feature(thread_local_const_init)]` to the crate attributes to enable"}, {"sha": "1ca10aeece5660647d86c2c7d8a6dff51d66f3d6", "filename": "src/test/ui/feature-gates/trace_macros-gate.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Ffeature-gates%2Ftrace_macros-gate.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Ffeature-gates%2Ftrace_macros-gate.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ftrace_macros-gate.stderr?ref=90f4521cfdfc85fc04759cfba2f86a6acc096cb3", "patch": "@@ -11,7 +11,7 @@ error: trace_macros! accepts only `true` or `false`\n   --> $DIR/trace_macros-gate.rs:4:5\n    |\n LL |     trace_macros!();\n-   |     ^^^^^^^^^^^^^^^^\n+   |     ^^^^^^^^^^^^^^^\n \n error[E0658]: use of unstable library feature 'trace_macros': `trace_macros` is not stable enough for use and is subject to change\n   --> $DIR/trace_macros-gate.rs:6:5\n@@ -38,7 +38,7 @@ LL |         ($x: ident) => { trace_macros!($x) }\n    |                          ^^^^^^^^^^^^\n ...\n LL |     expando!(true);\n-   |     --------------- in this macro invocation\n+   |     -------------- in this macro invocation\n    |\n    = note: see issue #29598 <https://github.com/rust-lang/rust/issues/29598> for more information\n    = help: add `#![feature(trace_macros)]` to the crate attributes to enable"}, {"sha": "2db280c5e2aa4735bc058de3656d5cc92bbcf372", "filename": "src/test/ui/fmt/ifmt-bad-format-args.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Ffmt%2Fifmt-bad-format-args.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Ffmt%2Fifmt-bad-format-args.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffmt%2Fifmt-bad-format-args.stderr?ref=90f4521cfdfc85fc04759cfba2f86a6acc096cb3", "patch": "@@ -2,7 +2,7 @@ error: requires at least a format string argument\n   --> $DIR/ifmt-bad-format-args.rs:2:5\n    |\n LL |     format_args!();\n-   |     ^^^^^^^^^^^^^^^\n+   |     ^^^^^^^^^^^^^^\n    |\n    = note: this error originates in the macro `format_args` (in Nightly builds, run with -Z macro-backtrace for more info)\n "}, {"sha": "da37ff3016941586715d8300e6aaa3e968584d85", "filename": "src/test/ui/half-open-range-patterns/half-open-range-pats-inclusive-dotdotdot-bad-syntax.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fhalf-open-range-patterns%2Fhalf-open-range-pats-inclusive-dotdotdot-bad-syntax.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fhalf-open-range-patterns%2Fhalf-open-range-pats-inclusive-dotdotdot-bad-syntax.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fhalf-open-range-patterns%2Fhalf-open-range-pats-inclusive-dotdotdot-bad-syntax.stderr?ref=90f4521cfdfc85fc04759cfba2f86a6acc096cb3", "patch": "@@ -29,7 +29,7 @@ LL |             let ...$e;\n    |                 ^^^ help: use `..=` instead\n ...\n LL |     mac!(0);\n-   |     -------- in this macro invocation\n+   |     ------- in this macro invocation\n    |\n    = note: this error originates in the macro `mac` (in Nightly builds, run with -Z macro-backtrace for more info)\n "}, {"sha": "5a504a90b5f07c8075c2afbd34322d4a216aacfb", "filename": "src/test/ui/half-open-range-patterns/half-open-range-pats-inclusive-no-end.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fhalf-open-range-patterns%2Fhalf-open-range-pats-inclusive-no-end.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fhalf-open-range-patterns%2Fhalf-open-range-pats-inclusive-no-end.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fhalf-open-range-patterns%2Fhalf-open-range-pats-inclusive-no-end.stderr?ref=90f4521cfdfc85fc04759cfba2f86a6acc096cb3", "patch": "@@ -37,7 +37,7 @@ LL |             let $e...;\n    |                   ^^^ help: use `..` instead\n ...\n LL |     mac!(0);\n-   |     -------- in this macro invocation\n+   |     ------- in this macro invocation\n    |\n    = note: inclusive ranges must be bounded at the end (`..=b` or `a..=b`)\n    = note: this error originates in the macro `mac` (in Nightly builds, run with -Z macro-backtrace for more info)\n@@ -49,7 +49,7 @@ LL |             let $e..=;\n    |                   ^^^ help: use `..` instead\n ...\n LL |     mac!(0);\n-   |     -------- in this macro invocation\n+   |     ------- in this macro invocation\n    |\n    = note: inclusive ranges must be bounded at the end (`..=b` or `a..=b`)\n    = note: this error originates in the macro `mac` (in Nightly builds, run with -Z macro-backtrace for more info)"}, {"sha": "d65716ec2ce61ada24f05e40f629bd61976637d9", "filename": "src/test/ui/hygiene/assoc_item_ctxt.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fhygiene%2Fassoc_item_ctxt.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fhygiene%2Fassoc_item_ctxt.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fhygiene%2Fassoc_item_ctxt.stderr?ref=90f4521cfdfc85fc04759cfba2f86a6acc096cb3", "patch": "@@ -8,7 +8,7 @@ LL |             fn method() {}\n    |             not a member of trait `Tr`\n ...\n LL |     mac_trait_impl!();\n-   |     ------------------ in this macro invocation\n+   |     ----------------- in this macro invocation\n    |\n    = note: this error originates in the macro `mac_trait_impl` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n@@ -22,7 +22,7 @@ LL |         impl Tr for u8 {\n    |         ^^^^^^^^^^^^^^ missing `method` in implementation\n ...\n LL |     mac_trait_impl!();\n-   |     ------------------ in this macro invocation\n+   |     ----------------- in this macro invocation\n    |\n    = note: this error originates in the macro `mac_trait_impl` (in Nightly builds, run with -Z macro-backtrace for more info)\n "}, {"sha": "4d41ebaa4373359c2ba8837f9bc4aa72974f1110", "filename": "src/test/ui/hygiene/duplicate_lifetimes.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fhygiene%2Fduplicate_lifetimes.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fhygiene%2Fduplicate_lifetimes.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fhygiene%2Fduplicate_lifetimes.stderr?ref=90f4521cfdfc85fc04759cfba2f86a6acc096cb3", "patch": "@@ -5,7 +5,7 @@ LL |     fn g<$a, 'a>() {}\n    |              ^^ declared twice\n ...\n LL | m!('a);\n-   | -------\n+   | ------\n    | |  |\n    | |  previous declaration here\n    | in this macro invocation\n@@ -19,7 +19,7 @@ LL |     fn h<$a, 'a>() {}\n    |              ^^ declared twice\n ...\n LL | n!('a);\n-   | -------\n+   | ------\n    | |  |\n    | |  previous declaration here\n    | in this macro invocation"}, {"sha": "e89c19b5881e54dae4dbc79fb960e0d0b3471b65", "filename": "src/test/ui/hygiene/extern-prelude-from-opaque-fail.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fhygiene%2Fextern-prelude-from-opaque-fail.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fhygiene%2Fextern-prelude-from-opaque-fail.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fhygiene%2Fextern-prelude-from-opaque-fail.stderr?ref=90f4521cfdfc85fc04759cfba2f86a6acc096cb3", "patch": "@@ -14,7 +14,7 @@ LL |         use my_core;\n    |             ^^^^^^^ no `my_core` in the root\n ...\n LL | a!();\n-   | ----- in this macro invocation\n+   | ---- in this macro invocation\n    |\n    = note: this error originates in the macro `a` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n@@ -25,7 +25,7 @@ LL |         fn f() { my_core::mem::drop(0); }\n    |                  ^^^^^^^ use of undeclared crate or module `my_core`\n ...\n LL | a!();\n-   | ----- in this macro invocation\n+   | ---- in this macro invocation\n    |\n    = note: this error originates in the macro `a` (in Nightly builds, run with -Z macro-backtrace for more info)\n "}, {"sha": "9d091cedd237dbf825cbf4e3a6d48c2908c933c6", "filename": "src/test/ui/hygiene/fields-definition.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fhygiene%2Ffields-definition.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fhygiene%2Ffields-definition.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fhygiene%2Ffields-definition.stderr?ref=90f4521cfdfc85fc04759cfba2f86a6acc096cb3", "patch": "@@ -7,7 +7,7 @@ LL |             $a: u8,\n    |             ^^^^^^ field already declared\n ...\n LL | legacy!(a);\n-   | ----------- in this macro invocation\n+   | ---------- in this macro invocation\n    |\n    = note: this error originates in the macro `legacy` (in Nightly builds, run with -Z macro-backtrace for more info)\n "}, {"sha": "32a2e145ca942bf757252d760f0ca472489ac47e", "filename": "src/test/ui/hygiene/generate-mod.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fhygiene%2Fgenerate-mod.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fhygiene%2Fgenerate-mod.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fhygiene%2Fgenerate-mod.stderr?ref=90f4521cfdfc85fc04759cfba2f86a6acc096cb3", "patch": "@@ -17,7 +17,7 @@ LL |         type A = FromOutside;\n    |                  ^^^^^^^^^^^ not found in this scope\n ...\n LL |     genmod_transparent!();\n-   |     ---------------------- in this macro invocation\n+   |     --------------------- in this macro invocation\n    |\n    = note: this error originates in the macro `genmod_transparent` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n@@ -28,7 +28,7 @@ LL |         type Inner = Outer;\n    |                      ^^^^^ not found in this scope\n ...\n LL |     genmod_transparent!();\n-   |     ---------------------- in this macro invocation\n+   |     --------------------- in this macro invocation\n    |\n    = note: this error originates in the macro `genmod_transparent` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n@@ -39,7 +39,7 @@ LL |         type A = FromOutside;\n    |                  ^^^^^^^^^^^ not found in this scope\n ...\n LL |     genmod_legacy!();\n-   |     ----------------- in this macro invocation\n+   |     ---------------- in this macro invocation\n    |\n    = note: this error originates in the macro `genmod_legacy` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n@@ -50,7 +50,7 @@ LL |         type Inner = Outer;\n    |                      ^^^^^ not found in this scope\n ...\n LL |     genmod_legacy!();\n-   |     ----------------- in this macro invocation\n+   |     ---------------- in this macro invocation\n    |\n    = note: this error originates in the macro `genmod_legacy` (in Nightly builds, run with -Z macro-backtrace for more info)\n "}, {"sha": "bcfcc28adf7767b25a3a03ebbc80ea669c89f1ec", "filename": "src/test/ui/hygiene/globs.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fhygiene%2Fglobs.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fhygiene%2Fglobs.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fhygiene%2Fglobs.stderr?ref=90f4521cfdfc85fc04759cfba2f86a6acc096cb3", "patch": "@@ -32,7 +32,7 @@ error[E0425]: cannot find function `f` in this scope\n   --> $DIR/globs.rs:61:12\n    |\n LL | n!(f);\n-   | ------ in this macro invocation\n+   | ----- in this macro invocation\n ...\n LL |         n!(f);\n    |            ^ not found in this scope\n@@ -45,7 +45,7 @@ error[E0425]: cannot find function `f` in this scope\n   --> $DIR/globs.rs:65:17\n    |\n LL | n!(f);\n-   | ------ in this macro invocation\n+   | ----- in this macro invocation\n ...\n LL |                 f\n    |                 ^ not found in this scope"}, {"sha": "deb6a205994aa66017d414959c44c53f15ef4007", "filename": "src/test/ui/hygiene/hygienic-label-1.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fhygiene%2Fhygienic-label-1.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fhygiene%2Fhygienic-label-1.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fhygiene%2Fhygienic-label-1.stderr?ref=90f4521cfdfc85fc04759cfba2f86a6acc096cb3", "patch": "@@ -5,7 +5,7 @@ LL |     () => { break 'x; }\n    |                   ^^ undeclared label `'x`\n ...\n LL |     'x: loop { foo!(); }\n-   |                ------- in this macro invocation\n+   |                ------ in this macro invocation\n    |\n    = note: this error originates in the macro `foo` (in Nightly builds, run with -Z macro-backtrace for more info)\n "}, {"sha": "cf7f78a99e81883dd4ac2cc36344feee417a41e6", "filename": "src/test/ui/hygiene/hygienic-label-3.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fhygiene%2Fhygienic-label-3.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fhygiene%2Fhygienic-label-3.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fhygiene%2Fhygienic-label-3.stderr?ref=90f4521cfdfc85fc04759cfba2f86a6acc096cb3", "patch": "@@ -5,7 +5,7 @@ LL |     () => { break 'x; }\n    |                   ^^ undeclared label `'x`\n ...\n LL |         foo!();\n-   |         ------- in this macro invocation\n+   |         ------ in this macro invocation\n    |\n    = note: this error originates in the macro `foo` (in Nightly builds, run with -Z macro-backtrace for more info)\n "}, {"sha": "519e3c0880ac66e90b8dd44447a3ec4abaca082b", "filename": "src/test/ui/hygiene/hygienic-labels-in-let.stderr", "status": "modified", "additions": 16, "deletions": 16, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fhygiene%2Fhygienic-labels-in-let.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fhygiene%2Fhygienic-labels-in-let.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fhygiene%2Fhygienic-labels-in-let.stderr?ref=90f4521cfdfc85fc04759cfba2f86a6acc096cb3", "patch": "@@ -8,7 +8,7 @@ LL |         'x: loop {\n    |         -- first declared here\n LL |             // this 'x should refer to the outer loop, lexically\n LL |             loop_x!(break 'x);\n-   |             ------------------ in this macro invocation\n+   |             ----------------- in this macro invocation\n    |\n    = note: this warning originates in the macro `loop_x` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n@@ -40,7 +40,7 @@ LL |         'x: loop {\n    |         -- first declared here\n ...\n LL |             loop_x!(break 'x);\n-   |             ------------------ in this macro invocation\n+   |             ----------------- in this macro invocation\n    |\n    = note: this warning originates in the macro `loop_x` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n@@ -54,7 +54,7 @@ LL |         'x: loop { $e }\n    |         label `'x` already in scope\n ...\n LL |             loop_x!(break 'x);\n-   |             ------------------ in this macro invocation\n+   |             ----------------- in this macro invocation\n    |\n    = note: this warning originates in the macro `loop_x` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n@@ -68,7 +68,7 @@ LL |         'x: for _ in 0..1 {\n    |         -- first declared here\n ...\n LL |             loop_x!(break 'x);\n-   |             ------------------ in this macro invocation\n+   |             ----------------- in this macro invocation\n    |\n    = note: this warning originates in the macro `loop_x` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n@@ -118,7 +118,7 @@ LL |         'x: loop {\n    |         -- first declared here\n ...\n LL |             while_true!(break 'x);\n-   |             ---------------------- in this macro invocation\n+   |             --------------------- in this macro invocation\n    |\n    = note: this warning originates in the macro `while_true` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n@@ -132,7 +132,7 @@ LL |         'x: while 1 + 1 == 2 { $e }\n    |         ^^ label `'x` already in scope\n ...\n LL |             while_true!(break 'x);\n-   |             ---------------------- in this macro invocation\n+   |             --------------------- in this macro invocation\n    |\n    = note: this warning originates in the macro `while_true` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n@@ -146,7 +146,7 @@ LL |         'x: for _ in 0..1 {\n    |         -- first declared here\n ...\n LL |             while_true!(break 'x);\n-   |             ---------------------- in this macro invocation\n+   |             --------------------- in this macro invocation\n    |\n    = note: this warning originates in the macro `while_true` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n@@ -160,7 +160,7 @@ LL |         'x: while 1 + 1 == 2 { $e }\n    |         ^^ label `'x` already in scope\n ...\n LL |             while_true!(break 'x);\n-   |             ---------------------- in this macro invocation\n+   |             --------------------- in this macro invocation\n    |\n    = note: this warning originates in the macro `while_true` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n@@ -174,7 +174,7 @@ LL |         'x: for _ in 0..1 {\n    |         -- first declared here\n ...\n LL |             while_true!(break 'x);\n-   |             ---------------------- in this macro invocation\n+   |             --------------------- in this macro invocation\n    |\n    = note: this warning originates in the macro `while_true` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n@@ -242,7 +242,7 @@ LL |         'x: loop {\n    |         -- first declared here\n ...\n LL |             run_once!(continue 'x);\n-   |             ----------------------- in this macro invocation\n+   |             ---------------------- in this macro invocation\n    |\n    = note: this warning originates in the macro `run_once` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n@@ -256,7 +256,7 @@ LL |         'x: for _ in 0..1 { $e }\n    |         ^^ label `'x` already in scope\n ...\n LL |             run_once!(continue 'x);\n-   |             ----------------------- in this macro invocation\n+   |             ---------------------- in this macro invocation\n    |\n    = note: this warning originates in the macro `run_once` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n@@ -270,7 +270,7 @@ LL |         'x: for _ in 0..1 {\n    |         -- first declared here\n ...\n LL |             run_once!(continue 'x);\n-   |             ----------------------- in this macro invocation\n+   |             ---------------------- in this macro invocation\n    |\n    = note: this warning originates in the macro `run_once` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n@@ -284,7 +284,7 @@ LL |         'x: for _ in 0..1 { $e }\n    |         ^^ label `'x` already in scope\n ...\n LL |             run_once!(continue 'x);\n-   |             ----------------------- in this macro invocation\n+   |             ---------------------- in this macro invocation\n    |\n    = note: this warning originates in the macro `run_once` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n@@ -298,7 +298,7 @@ LL |         'x: for _ in 0..1 {\n    |         -- first declared here\n ...\n LL |             run_once!(continue 'x);\n-   |             ----------------------- in this macro invocation\n+   |             ---------------------- in this macro invocation\n    |\n    = note: this warning originates in the macro `run_once` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n@@ -312,7 +312,7 @@ LL |         'x: for _ in 0..1 { $e }\n    |         ^^ label `'x` already in scope\n ...\n LL |             run_once!(continue 'x);\n-   |             ----------------------- in this macro invocation\n+   |             ---------------------- in this macro invocation\n    |\n    = note: this warning originates in the macro `run_once` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n@@ -326,7 +326,7 @@ LL |         'x: for _ in 0..1 {\n    |         -- first declared here\n ...\n LL |             run_once!(continue 'x);\n-   |             ----------------------- in this macro invocation\n+   |             ---------------------- in this macro invocation\n    |\n    = note: this warning originates in the macro `run_once` (in Nightly builds, run with -Z macro-backtrace for more info)\n "}, {"sha": "f0b891fe34979e0dd2b783f4f23e3fd9e9b331cf", "filename": "src/test/ui/hygiene/hygienic-labels.stderr", "status": "modified", "additions": 16, "deletions": 16, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fhygiene%2Fhygienic-labels.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fhygiene%2Fhygienic-labels.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fhygiene%2Fhygienic-labels.stderr?ref=90f4521cfdfc85fc04759cfba2f86a6acc096cb3", "patch": "@@ -8,7 +8,7 @@ LL |     'x: for _ in 0..1 {\n    |     -- first declared here\n LL |         // this 'x should refer to the outer loop, lexically\n LL |         loop_x!(break 'x);\n-   |         ------------------ in this macro invocation\n+   |         ----------------- in this macro invocation\n    |\n    = note: this warning originates in the macro `loop_x` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n@@ -40,7 +40,7 @@ LL |     'x: for _ in 0..1 {\n    |     -- first declared here\n ...\n LL |         loop_x!(break 'x);\n-   |         ------------------ in this macro invocation\n+   |         ----------------- in this macro invocation\n    |\n    = note: this warning originates in the macro `loop_x` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n@@ -54,7 +54,7 @@ LL |         'x: loop { $e }\n    |         label `'x` already in scope\n ...\n LL |         loop_x!(break 'x);\n-   |         ------------------ in this macro invocation\n+   |         ----------------- in this macro invocation\n    |\n    = note: this warning originates in the macro `loop_x` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n@@ -68,7 +68,7 @@ LL |     'x: loop {\n    |     -- first declared here\n ...\n LL |         loop_x!(break 'x);\n-   |         ------------------ in this macro invocation\n+   |         ----------------- in this macro invocation\n    |\n    = note: this warning originates in the macro `loop_x` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n@@ -118,7 +118,7 @@ LL |     'x: for _ in 0..1 {\n    |     -- first declared here\n ...\n LL |         while_x!(break 'x);\n-   |         ------------------- in this macro invocation\n+   |         ------------------ in this macro invocation\n    |\n    = note: this warning originates in the macro `while_x` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n@@ -132,7 +132,7 @@ LL |         'x: while 1 + 1 == 2 { $e }\n    |         ^^ label `'x` already in scope\n ...\n LL |         while_x!(break 'x);\n-   |         ------------------- in this macro invocation\n+   |         ------------------ in this macro invocation\n    |\n    = note: this warning originates in the macro `while_x` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n@@ -146,7 +146,7 @@ LL |     'x: loop {\n    |     -- first declared here\n ...\n LL |         while_x!(break 'x);\n-   |         ------------------- in this macro invocation\n+   |         ------------------ in this macro invocation\n    |\n    = note: this warning originates in the macro `while_x` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n@@ -160,7 +160,7 @@ LL |         'x: while 1 + 1 == 2 { $e }\n    |         ^^ label `'x` already in scope\n ...\n LL |         while_x!(break 'x);\n-   |         ------------------- in this macro invocation\n+   |         ------------------ in this macro invocation\n    |\n    = note: this warning originates in the macro `while_x` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n@@ -174,7 +174,7 @@ LL |     'x: while 1 + 1 == 2 {\n    |     -- first declared here\n ...\n LL |         while_x!(break 'x);\n-   |         ------------------- in this macro invocation\n+   |         ------------------ in this macro invocation\n    |\n    = note: this warning originates in the macro `while_x` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n@@ -242,7 +242,7 @@ LL |     'x: for _ in 0..1 {\n    |     -- first declared here\n ...\n LL |         run_once!(continue 'x);\n-   |         ----------------------- in this macro invocation\n+   |         ---------------------- in this macro invocation\n    |\n    = note: this warning originates in the macro `run_once` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n@@ -256,7 +256,7 @@ LL |         'x: for _ in 0..1 { $e }\n    |         ^^ label `'x` already in scope\n ...\n LL |         run_once!(continue 'x);\n-   |         ----------------------- in this macro invocation\n+   |         ---------------------- in this macro invocation\n    |\n    = note: this warning originates in the macro `run_once` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n@@ -270,7 +270,7 @@ LL |     'x: loop {\n    |     -- first declared here\n ...\n LL |         run_once!(continue 'x);\n-   |         ----------------------- in this macro invocation\n+   |         ---------------------- in this macro invocation\n    |\n    = note: this warning originates in the macro `run_once` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n@@ -284,7 +284,7 @@ LL |         'x: for _ in 0..1 { $e }\n    |         ^^ label `'x` already in scope\n ...\n LL |         run_once!(continue 'x);\n-   |         ----------------------- in this macro invocation\n+   |         ---------------------- in this macro invocation\n    |\n    = note: this warning originates in the macro `run_once` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n@@ -298,7 +298,7 @@ LL |     'x: while 1 + 1 == 2 {\n    |     -- first declared here\n ...\n LL |         run_once!(continue 'x);\n-   |         ----------------------- in this macro invocation\n+   |         ---------------------- in this macro invocation\n    |\n    = note: this warning originates in the macro `run_once` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n@@ -312,7 +312,7 @@ LL |         'x: while 1 + 1 == 2 { $e }\n    |         -- first declared here\n ...\n LL |         run_once!(continue 'x);\n-   |         ----------------------- in this macro invocation\n+   |         ---------------------- in this macro invocation\n    |\n    = note: this warning originates in the macro `run_once` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n@@ -326,7 +326,7 @@ LL |     'x: for _ in 0..1 {\n    |     -- first declared here\n ...\n LL |         run_once!(continue 'x);\n-   |         ----------------------- in this macro invocation\n+   |         ---------------------- in this macro invocation\n    |\n    = note: this warning originates in the macro `run_once` (in Nightly builds, run with -Z macro-backtrace for more info)\n "}, {"sha": "523309f432504679c4ff42c0b9e2bf7a026fb5c0", "filename": "src/test/ui/hygiene/impl_items.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fhygiene%2Fimpl_items.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fhygiene%2Fimpl_items.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fhygiene%2Fimpl_items.stderr?ref=90f4521cfdfc85fc04759cfba2f86a6acc096cb3", "patch": "@@ -5,7 +5,7 @@ LL |         let _: () = S.f();\n    |                       ^ private type\n ...\n LL |     foo::m!();\n-   |     ---------- in this macro invocation\n+   |     --------- in this macro invocation\n    |\n    = note: this error originates in the macro `foo::m` (in Nightly builds, run with -Z macro-backtrace for more info)\n "}, {"sha": "690bcd03226fb3de813e8cc5efd9aaae2a8d5417", "filename": "src/test/ui/hygiene/missing-self-diag.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fhygiene%2Fmissing-self-diag.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fhygiene%2Fmissing-self-diag.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fhygiene%2Fmissing-self-diag.stderr?ref=90f4521cfdfc85fc04759cfba2f86a6acc096cb3", "patch": "@@ -6,7 +6,7 @@ LL |           self.bar();\n ...\n LL | /     pub fn foo(&self) {\n LL | |         call_bar!();\n-   | |         ------------ in this macro invocation\n+   | |         ----------- in this macro invocation\n LL | |     }\n    | |_____- this function has a `self` parameter, but a macro invocation can only access identifiers it receives from parameters\n    |"}, {"sha": "0f2ff96b5edb6566a948f9f7ec1d880c5294e4df", "filename": "src/test/ui/hygiene/no_implicit_prelude.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fhygiene%2Fno_implicit_prelude.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fhygiene%2Fno_implicit_prelude.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fhygiene%2Fno_implicit_prelude.stderr?ref=90f4521cfdfc85fc04759cfba2f86a6acc096cb3", "patch": "@@ -2,7 +2,7 @@ error[E0433]: failed to resolve: use of undeclared type `Vec`\n   --> $DIR/no_implicit_prelude.rs:11:9\n    |\n LL |     fn f() { ::bar::m!(); }\n-   |              ------------ in this macro invocation\n+   |              ----------- in this macro invocation\n ...\n LL |         Vec::new();\n    |         ^^^ not found in this scope\n@@ -17,7 +17,7 @@ error[E0599]: no method named `clone` found for unit type `()` in the current sc\n   --> $DIR/no_implicit_prelude.rs:12:12\n    |\n LL |     fn f() { ::bar::m!(); }\n-   |              ------------ in this macro invocation\n+   |              ----------- in this macro invocation\n ...\n LL |         ().clone()\n    |            ^^^^^ method not found in `()`"}, {"sha": "0375ed56d96697b0a10a33f9c6a425e156b5c8ef", "filename": "src/test/ui/hygiene/privacy-early.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fhygiene%2Fprivacy-early.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fhygiene%2Fprivacy-early.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fhygiene%2Fprivacy-early.stderr?ref=90f4521cfdfc85fc04759cfba2f86a6acc096cb3", "patch": "@@ -5,7 +5,7 @@ LL |         use f as g;\n    |             ^^^^^^\n ...\n LL |     foo::m!();\n-   |     ---------- in this macro invocation\n+   |     --------- in this macro invocation\n    |\n note: consider marking `f` as `pub` in the imported module\n   --> $DIR/privacy-early.rs:10:13\n@@ -14,7 +14,7 @@ LL |         use f as g;\n    |             ^^^^^^\n ...\n LL |     foo::m!();\n-   |     ---------- in this macro invocation\n+   |     --------- in this macro invocation\n    = note: this error originates in the macro `foo::m` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n error: aborting due to previous error"}, {"sha": "80bdbe0e21e04d4e84e4e2f4b41eae4824b9ce9c", "filename": "src/test/ui/hygiene/trait_items.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fhygiene%2Ftrait_items.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fhygiene%2Ftrait_items.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fhygiene%2Ftrait_items.stderr?ref=90f4521cfdfc85fc04759cfba2f86a6acc096cb3", "patch": "@@ -5,7 +5,7 @@ LL |         fn f(&self) {}\n    |            - the method is available for `()` here\n ...\n LL |     fn f() { ::baz::m!(); }\n-   |              ------------ in this macro invocation\n+   |              ----------- in this macro invocation\n ...\n LL |     pub macro m() { ().f() }\n    |                        ^ method not found in `()`"}, {"sha": "f7e37449eebe53ac9c2e8d2a7e150d5cabe23ab6", "filename": "src/test/ui/imports/extern-prelude-extern-crate-fail.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fimports%2Fextern-prelude-extern-crate-fail.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fimports%2Fextern-prelude-extern-crate-fail.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimports%2Fextern-prelude-extern-crate-fail.stderr?ref=90f4521cfdfc85fc04759cfba2f86a6acc096cb3", "patch": "@@ -5,7 +5,7 @@ LL |         extern crate std as non_existent;\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n ...\n LL | define_std_as_non_existent!();\n-   | ------------------------------ in this macro invocation\n+   | ----------------------------- in this macro invocation\n    |\n    = note: this error originates in the macro `define_std_as_non_existent` (in Nightly builds, run with -Z macro-backtrace for more info)\n "}, {"sha": "472824b84f4a1eda80ced77eee008946e0368fa3", "filename": "src/test/ui/imports/extern-prelude-extern-crate-restricted-shadowing.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fimports%2Fextern-prelude-extern-crate-restricted-shadowing.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fimports%2Fextern-prelude-extern-crate-restricted-shadowing.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimports%2Fextern-prelude-extern-crate-restricted-shadowing.stderr?ref=90f4521cfdfc85fc04759cfba2f86a6acc096cb3", "patch": "@@ -5,7 +5,7 @@ LL |         extern crate std as core;\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^\n ...\n LL | define_other_core!();\n-   | --------------------- in this macro invocation\n+   | -------------------- in this macro invocation\n    |\n    = note: this error originates in the macro `define_other_core` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n@@ -22,7 +22,7 @@ LL |         extern crate std as Vec;\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^\n ...\n LL | define_vec!();\n-   | -------------- in this macro invocation\n+   | ------------- in this macro invocation\n note: `Vec` could also refer to the struct defined here\n   --> $SRC_DIR/std/src/prelude/mod.rs:LL:COL\n    |"}, {"sha": "f1f1dfbdbdbfc32612c59963c53e2f9a3882e1d9", "filename": "src/test/ui/imports/import-crate-var.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fimports%2Fimport-crate-var.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fimports%2Fimport-crate-var.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimports%2Fimport-crate-var.stderr?ref=90f4521cfdfc85fc04759cfba2f86a6acc096cb3", "patch": "@@ -2,7 +2,7 @@ error: `$crate` may not be imported\n   --> $DIR/import-crate-var.rs:6:5\n    |\n LL |     m!();\n-   |     ^^^^^\n+   |     ^^^^\n    |\n    = note: this error originates in the macro `m` (in Nightly builds, run with -Z macro-backtrace for more info)\n "}, {"sha": "f809698fe1d4d725f0ffea3baa3065aa3a4fb06a", "filename": "src/test/ui/imports/local-modularized-tricky-fail-1.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fimports%2Flocal-modularized-tricky-fail-1.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fimports%2Flocal-modularized-tricky-fail-1.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimports%2Flocal-modularized-tricky-fail-1.stderr?ref=90f4521cfdfc85fc04759cfba2f86a6acc096cb3", "patch": "@@ -13,7 +13,7 @@ LL | |     }\n    | |_____^\n ...\n LL |       define_exported!();\n-   |       ------------------- in this macro invocation\n+   |       ------------------ in this macro invocation\n note: `exported` could also refer to the macro imported here\n   --> $DIR/local-modularized-tricky-fail-1.rs:22:5\n    |\n@@ -37,7 +37,7 @@ LL | |     }\n    | |_____^\n ...\n LL |       define_exported!();\n-   |       ------------------- in this macro invocation\n+   |       ------------------ in this macro invocation\n note: `exported` could also refer to the macro imported here\n   --> $DIR/local-modularized-tricky-fail-1.rs:22:5\n    |\n@@ -62,7 +62,7 @@ LL | |     }\n    | |_____^\n ...\n LL |       define_panic!();\n-   |       ---------------- in this macro invocation\n+   |       --------------- in this macro invocation\n    = help: use `crate::panic` to refer to this macro unambiguously\n    = note: this error originates in the macro `define_panic` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n@@ -82,7 +82,7 @@ LL | |     }\n    | |_____^\n ...\n LL |       define_include!();\n-   |       ------------------ in this macro invocation\n+   |       ----------------- in this macro invocation\n    = help: use `crate::include` to refer to this macro unambiguously\n    = note: this error originates in the macro `define_include` (in Nightly builds, run with -Z macro-backtrace for more info)\n "}, {"sha": "3c20f552fdf404a4e3cfd6f13906ac5717a2c340", "filename": "src/test/ui/imports/local-modularized-tricky-fail-2.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fimports%2Flocal-modularized-tricky-fail-2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fimports%2Flocal-modularized-tricky-fail-2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimports%2Flocal-modularized-tricky-fail-2.stderr?ref=90f4521cfdfc85fc04759cfba2f86a6acc096cb3", "patch": "@@ -16,7 +16,7 @@ LL | |     }\n    | |_____^\n ...\n LL |   define_exported!();\n-   |   ------------------- in this macro invocation\n+   |   ------------------ in this macro invocation\n    = note: this error originates in the macro `define_exported` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n error: macro-expanded `macro_export` macros from the current crate cannot be referred to by absolute paths\n@@ -36,7 +36,7 @@ LL | |     }\n    | |_____^\n ...\n LL |   define_exported!();\n-   |   ------------------- in this macro invocation\n+   |   ------------------ in this macro invocation\n    = note: this error originates in the macro `define_exported` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n error: aborting due to 2 previous errors"}, {"sha": "2fcbb2a045cb32edd31d37913c0c923d71d7ae0b", "filename": "src/test/ui/imports/shadow_builtin_macros.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fimports%2Fshadow_builtin_macros.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fimports%2Fshadow_builtin_macros.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimports%2Fshadow_builtin_macros.stderr?ref=90f4521cfdfc85fc04759cfba2f86a6acc096cb3", "patch": "@@ -27,7 +27,7 @@ LL |         macro_rules! panic { () => {} }\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n LL |     } }\n LL |     m!();\n-   |     ----- in this macro invocation\n+   |     ---- in this macro invocation\n    = note: this error originates in the macro `m` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n error[E0659]: `n` is ambiguous (glob import vs any other name from outer scope during import/macro resolution)"}, {"sha": "037ce401b3cc91306acbec1f661bec0768a82ce9", "filename": "src/test/ui/in-band-lifetimes/elided-lifetimes.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fin-band-lifetimes%2Felided-lifetimes.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fin-band-lifetimes%2Felided-lifetimes.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fin-band-lifetimes%2Felided-lifetimes.stderr?ref=90f4521cfdfc85fc04759cfba2f86a6acc096cb3", "patch": "@@ -35,7 +35,7 @@ LL |         fn $fn_name(gift: &str) -> $type_name {\n    |                                    ^^^^^^^^^^- help: indicate the anonymous lifetime: `<'_>`\n ...\n LL | autowrapper!(Autowrapped, autowrap_gift, 'a);\n-   | --------------------------------------------- in this macro invocation\n+   | -------------------------------------------- in this macro invocation\n    |\n    = note: this error originates in the macro `autowrapper` (in Nightly builds, run with -Z macro-backtrace for more info)\n "}, {"sha": "da11ba204cb53870306fe67ca8d4b60231e2afc4", "filename": "src/test/ui/inference/deref-suggestion.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Finference%2Fderef-suggestion.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Finference%2Fderef-suggestion.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Finference%2Fderef-suggestion.stderr?ref=90f4521cfdfc85fc04759cfba2f86a6acc096cb3", "patch": "@@ -56,7 +56,7 @@ error[E0308]: mismatched types\n   --> $DIR/deref-suggestion.rs:36:5\n    |\n LL |     assert_eq!(3i32, &3i32);\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^^ expected `i32`, found `&i32`\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^ expected `i32`, found `&i32`\n    |\n    = note: this error originates in the macro `assert_eq` (in Nightly builds, run with -Z macro-backtrace for more info)\n "}, {"sha": "b0ceae62aba73e313035a0e0371c11ea4c1d50d4", "filename": "src/test/ui/internal/internal-unstable-noallow.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Finternal%2Finternal-unstable-noallow.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Finternal%2Finternal-unstable-noallow.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Finternal%2Finternal-unstable-noallow.stderr?ref=90f4521cfdfc85fc04759cfba2f86a6acc096cb3", "patch": "@@ -2,7 +2,7 @@ error[E0658]: use of unstable library feature 'function'\n   --> $DIR/internal-unstable-noallow.rs:16:5\n    |\n LL |     call_unstable_noallow!();\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: add `#![feature(function)]` to the crate attributes to enable\n    = note: this error originates in the macro `call_unstable_noallow` (in Nightly builds, run with -Z macro-backtrace for more info)\n@@ -11,7 +11,7 @@ error[E0658]: use of unstable library feature 'struct_field'\n   --> $DIR/internal-unstable-noallow.rs:18:5\n    |\n LL |     construct_unstable_noallow!(0);\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: add `#![feature(struct_field)]` to the crate attributes to enable\n    = note: this error originates in the macro `construct_unstable_noallow` (in Nightly builds, run with -Z macro-backtrace for more info)"}, {"sha": "b973ea67bf7a34ba21b748fb450b56fab3f8ac5e", "filename": "src/test/ui/internal/internal-unstable.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Finternal%2Finternal-unstable.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Finternal%2Finternal-unstable.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Finternal%2Finternal-unstable.stderr?ref=90f4521cfdfc85fc04759cfba2f86a6acc096cb3", "patch": "@@ -37,7 +37,7 @@ LL |         internal_unstable::unstable();\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n ...\n LL |     bar!(internal_unstable::unstable());\n-   |     ------------------------------------ in this macro invocation\n+   |     ----------------------------------- in this macro invocation\n    |\n    = help: add `#![feature(function)]` to the crate attributes to enable\n    = note: this error originates in the macro `foo` (in Nightly builds, run with -Z macro-backtrace for more info)"}, {"sha": "fbfa6e1abb2dac01410cf59ab3981db34a2c98c6", "filename": "src/test/ui/issues/issue-14091-2.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fissues%2Fissue-14091-2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fissues%2Fissue-14091-2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-14091-2.stderr?ref=90f4521cfdfc85fc04759cfba2f86a6acc096cb3", "patch": "@@ -2,7 +2,7 @@ error[E0600]: cannot apply unary operator `!` to type `BytePos`\n   --> $DIR/issue-14091-2.rs:15:5\n    |\n LL |     assert!(x, x);\n-   |     ^^^^^^^^^^^^^^ cannot apply unary operator `!`\n+   |     ^^^^^^^^^^^^^ cannot apply unary operator `!`\n    |\n note: an implementation of `Not` might be missing for `BytePos`\n   --> $DIR/issue-14091-2.rs:6:1"}, {"sha": "0a9640a9e31781de447f6b8bba27b40b7404dac1", "filename": "src/test/ui/issues/issue-14091.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fissues%2Fissue-14091.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fissues%2Fissue-14091.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-14091.stderr?ref=90f4521cfdfc85fc04759cfba2f86a6acc096cb3", "patch": "@@ -2,7 +2,7 @@ error[E0308]: mismatched types\n   --> $DIR/issue-14091.rs:2:5\n    |\n LL |     assert!(1,1);\n-   |     ^^^^^^^^^^^^^ expected `bool`, found integer\n+   |     ^^^^^^^^^^^^ expected `bool`, found integer\n \n error: aborting due to previous error\n "}, {"sha": "09e20c0c777314202c0c0fe590ae82b3de989be0", "filename": "src/test/ui/issues/issue-16966.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fissues%2Fissue-16966.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fissues%2Fissue-16966.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-16966.stderr?ref=90f4521cfdfc85fc04759cfba2f86a6acc096cb3", "patch": "@@ -2,7 +2,7 @@ error[E0282]: type annotations needed\n   --> $DIR/issue-16966.rs:2:5\n    |\n LL |     panic!(std::default::Default::default());\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ cannot infer type for type parameter `M` declared on the function `begin_panic`\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ cannot infer type for type parameter `M` declared on the function `begin_panic`\n    |\n    = note: this error originates in the macro `$crate::panic::panic_2015` (in Nightly builds, run with -Z macro-backtrace for more info)\n "}, {"sha": "ae1ae14266f705973cb757cdb0720b57519cc0be", "filename": "src/test/ui/issues/issue-19163.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fissues%2Fissue-19163.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fissues%2Fissue-19163.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-19163.stderr?ref=90f4521cfdfc85fc04759cfba2f86a6acc096cb3", "patch": "@@ -2,7 +2,7 @@ error[E0596]: cannot borrow data in a `&` reference as mutable\n   --> $DIR/issue-19163.rs:9:5\n    |\n LL |     mywrite!(&v, \"Hello world\");\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ cannot borrow as mutable\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^ cannot borrow as mutable\n    |\n    = note: this error originates in the macro `mywrite` (in Nightly builds, run with -Z macro-backtrace for more info)\n "}, {"sha": "26874faa2b9385f8c8d52273c50631f54fe9d99d", "filename": "src/test/ui/issues/issue-2150.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fissues%2Fissue-2150.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fissues%2Fissue-2150.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-2150.stderr?ref=90f4521cfdfc85fc04759cfba2f86a6acc096cb3", "patch": "@@ -2,7 +2,7 @@ error: unreachable statement\n   --> $DIR/issue-2150.rs:8:5\n    |\n LL |     panic!();\n-   |     --------- any code following this expression is unreachable\n+   |     -------- any code following this expression is unreachable\n LL |     for x in &v { i += 1; }\n    |     ^^^^^^^^^^^^^^^^^^^^^^^ unreachable statement\n    |"}, {"sha": "39dbdd753a6ff4afe2ff3d49a9827e4d45a325b2", "filename": "src/test/ui/issues/issue-25385.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fissues%2Fissue-25385.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fissues%2Fissue-25385.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-25385.stderr?ref=90f4521cfdfc85fc04759cfba2f86a6acc096cb3", "patch": "@@ -5,7 +5,7 @@ LL |     ($e:expr) => { $e.foo() }\n    |                       ^^^ method not found in `i32`\n ...\n LL |     foo!(a);\n-   |     -------- in this macro invocation\n+   |     ------- in this macro invocation\n    |\n    = note: this error originates in the macro `foo` (in Nightly builds, run with -Z macro-backtrace for more info)\n "}, {"sha": "1a08d0fef4118d8d4151d3ee3749e4196ff5b2d2", "filename": "src/test/ui/issues/issue-26093.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fissues%2Fissue-26093.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fissues%2Fissue-26093.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-26093.stderr?ref=90f4521cfdfc85fc04759cfba2f86a6acc096cb3", "patch": "@@ -5,7 +5,7 @@ LL |         $thing = 42;\n    |                ^\n ...\n LL |     not_a_place!(99);\n-   |     -----------------\n+   |     ----------------\n    |     |            |\n    |     |            cannot assign to this expression\n    |     in this macro invocation\n@@ -19,7 +19,7 @@ LL |         $thing += 42;\n    |                ^^\n ...\n LL |     not_a_place!(99);\n-   |     -----------------\n+   |     ----------------\n    |     |            |\n    |     |            cannot assign to this expression\n    |     in this macro invocation"}, {"sha": "a973e23e29e4c93e716fead16c726b718e8aebff", "filename": "src/test/ui/issues/issue-29084.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fissues%2Fissue-29084.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fissues%2Fissue-29084.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-29084.stderr?ref=90f4521cfdfc85fc04759cfba2f86a6acc096cb3", "patch": "@@ -5,7 +5,7 @@ LL |         bar(&mut $d);\n    |             ^^^^^^^ expected `u8`, found `&mut u8`\n ...\n LL |     foo!(0u8);\n-   |     ---------- in this macro invocation\n+   |     --------- in this macro invocation\n    |\n    = note: this error originates in the macro `foo` (in Nightly builds, run with -Z macro-backtrace for more info)\n "}, {"sha": "58c170409fd449944be84232fc8056982161fd4d", "filename": "src/test/ui/issues/issue-31011.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fissues%2Fissue-31011.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fissues%2Fissue-31011.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-31011.stderr?ref=90f4521cfdfc85fc04759cfba2f86a6acc096cb3", "patch": "@@ -8,7 +8,7 @@ LL | fn wrap<T>(context: &T) -> ()\n    |         - type parameter 'T' declared here\n LL | {\n LL |     log!(context, \"entered wrapper\");\n-   |     --------------------------------- in this macro invocation\n+   |     -------------------------------- in this macro invocation\n    |\n    = note: this error originates in the macro `log` (in Nightly builds, run with -Z macro-backtrace for more info)\n "}, {"sha": "2d9ce430a462dc8d7ab99ebc094d1b7678804fdb", "filename": "src/test/ui/issues/issue-32655.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fissues%2Fissue-32655.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fissues%2Fissue-32655.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-32655.stderr?ref=90f4521cfdfc85fc04759cfba2f86a6acc096cb3", "patch": "@@ -5,7 +5,7 @@ LL |         #[derive_Clone]\n    |           ^^^^^^^^^^^^\n ...\n LL | foo!();\n-   | ------- in this macro invocation\n+   | ------ in this macro invocation\n    |\n    = note: this error originates in the macro `foo` (in Nightly builds, run with -Z macro-backtrace for more info)\n "}, {"sha": "a6c55ba03fca380e412554e8ad3d2612d8822fe6", "filename": "src/test/ui/issues/issue-32782.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fissues%2Fissue-32782.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fissues%2Fissue-32782.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-32782.stderr?ref=90f4521cfdfc85fc04759cfba2f86a6acc096cb3", "patch": "@@ -5,7 +5,7 @@ LL |         #[allow_internal_unstable]\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^\n ...\n LL | foo!();\n-   | ------- in this macro invocation\n+   | ------ in this macro invocation\n    |\n    = help: add `#![feature(allow_internal_unstable)]` to the crate attributes to enable\n    = note: this error originates in the macro `foo` (in Nightly builds, run with -Z macro-backtrace for more info)"}, {"sha": "08faed24bc74523539d7d2912f8c29c4e012f68b", "filename": "src/test/ui/issues/issue-39848.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fissues%2Fissue-39848.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fissues%2Fissue-39848.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-39848.stderr?ref=90f4521cfdfc85fc04759cfba2f86a6acc096cb3", "patch": "@@ -9,7 +9,7 @@ LL |         if $tgt.has_$field() {}\n    |         this `if` expression has a condition, but no block\n ...\n LL |     get_opt!(bar, foo);\n-   |     ------------------- in this macro invocation\n+   |     ------------------ in this macro invocation\n    |\n    = note: this error originates in the macro `get_opt` (in Nightly builds, run with -Z macro-backtrace for more info)\n "}, {"sha": "396a91994eb592329f12a3653484ba3c9cc74c9e", "filename": "src/test/ui/issues/issue-42954.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fissues%2Fissue-42954.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fissues%2Fissue-42954.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-42954.stderr?ref=90f4521cfdfc85fc04759cfba2f86a6acc096cb3", "patch": "@@ -7,7 +7,7 @@ LL |         $i as u32 < 0\n    |                   not interpreted as comparison\n ...\n LL |     is_plainly_printable!(c);\n-   |     ------------------------- in this macro invocation\n+   |     ------------------------ in this macro invocation\n    |\n    = note: this error originates in the macro `is_plainly_printable` (in Nightly builds, run with -Z macro-backtrace for more info)\n help: try comparing the cast value"}, {"sha": "c25bedf37b75384798925ab38f23862f469d7ace", "filename": "src/test/ui/issues/issue-51848.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fissues%2Fissue-51848.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fissues%2Fissue-51848.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-51848.stderr?ref=90f4521cfdfc85fc04759cfba2f86a6acc096cb3", "patch": "@@ -7,7 +7,7 @@ LL |         println!(\"{\");\n    |                   because of this opening brace\n ...\n LL |     macro_with_error!();\n-   |     -------------------- in this macro invocation\n+   |     ------------------- in this macro invocation\n    |\n    = note: if you intended to print `{`, you can escape it using `{{`\n    = note: this error originates in the macro `macro_with_error` (in Nightly builds, run with -Z macro-backtrace for more info)"}, {"sha": "cee9a5deb05e175beb2350ce4f974a3205610e4f", "filename": "src/test/ui/issues/issue-53251.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fissues%2Fissue-53251.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fissues%2Fissue-53251.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-53251.stderr?ref=90f4521cfdfc85fc04759cfba2f86a6acc096cb3", "patch": "@@ -7,7 +7,7 @@ LL |                 S::f::<i64>();\n    |                    expected 0 generic arguments\n ...\n LL | impl_add!(a b);\n-   | --------------- in this macro invocation\n+   | -------------- in this macro invocation\n    |\n note: associated function defined here, with 0 generic parameters\n   --> $DIR/issue-53251.rs:4:8\n@@ -25,7 +25,7 @@ LL |                 S::f::<i64>();\n    |                    expected 0 generic arguments\n ...\n LL | impl_add!(a b);\n-   | --------------- in this macro invocation\n+   | -------------- in this macro invocation\n    |\n note: associated function defined here, with 0 generic parameters\n   --> $DIR/issue-53251.rs:4:8"}, {"sha": "f739557e001f53adc9b8792ddf582e4e27eef160", "filename": "src/test/ui/issues/issue-59488.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fissues%2Fissue-59488.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fissues%2Fissue-59488.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-59488.stderr?ref=90f4521cfdfc85fc04759cfba2f86a6acc096cb3", "patch": "@@ -72,7 +72,7 @@ error[E0369]: binary operation `==` cannot be applied to type `fn(usize) -> Foo\n   --> $DIR/issue-59488.rs:30:5\n    |\n LL |     assert_eq!(Foo::Bar, i);\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^^\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^\n    |     |\n    |     fn(usize) -> Foo {Foo::Bar}\n    |     fn(usize) -> Foo {Foo::Bar}\n@@ -83,7 +83,7 @@ error[E0277]: `fn(usize) -> Foo {Foo::Bar}` doesn't implement `Debug`\n   --> $DIR/issue-59488.rs:30:5\n    |\n LL |     assert_eq!(Foo::Bar, i);\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^^ `fn(usize) -> Foo {Foo::Bar}` cannot be formatted using `{:?}` because it doesn't implement `Debug`\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^ `fn(usize) -> Foo {Foo::Bar}` cannot be formatted using `{:?}` because it doesn't implement `Debug`\n    |\n    = help: the trait `Debug` is not implemented for `fn(usize) -> Foo {Foo::Bar}`\n    = note: this error originates in the macro `assert_eq` (in Nightly builds, run with -Z macro-backtrace for more info)"}, {"sha": "7ab3685c5cbf16e8a4382357dcef6d52507c7cac", "filename": "src/test/ui/issues/issue-6596-1.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fissues%2Fissue-6596-1.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fissues%2Fissue-6596-1.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-6596-1.stderr?ref=90f4521cfdfc85fc04759cfba2f86a6acc096cb3", "patch": "@@ -5,7 +5,7 @@ LL |         $nonexistent\n    |         ^^^^^^^^^^^^ expected expression\n ...\n LL |     e!(foo);\n-   |     -------- in this macro invocation\n+   |     ------- in this macro invocation\n    |\n    = note: this error originates in the macro `e` (in Nightly builds, run with -Z macro-backtrace for more info)\n "}, {"sha": "3fe3d4d9d67c268e82d4e92e32bc7e970289b1a5", "filename": "src/test/ui/issues/issue-6596-2.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fissues%2Fissue-6596-2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fissues%2Fissue-6596-2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-6596-2.stderr?ref=90f4521cfdfc85fc04759cfba2f86a6acc096cb3", "patch": "@@ -5,7 +5,7 @@ LL |         { $inp $nonexistent }\n    |                ^^^^^^^^^^^^ expected one of 8 possible tokens\n ...\n LL |     g!(foo);\n-   |     -------- in this macro invocation\n+   |     ------- in this macro invocation\n    |\n    = note: this error originates in the macro `g` (in Nightly builds, run with -Z macro-backtrace for more info)\n "}, {"sha": "cdd4c670500f0e1a9201b17ecae10f3ab3c5ee8f", "filename": "src/test/ui/issues/issue-68091-unicode-ident-after-if.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fissues%2Fissue-68091-unicode-ident-after-if.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fissues%2Fissue-68091-unicode-ident-after-if.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-68091-unicode-ident-after-if.stderr?ref=90f4521cfdfc85fc04759cfba2f86a6acc096cb3", "patch": "@@ -11,7 +11,7 @@ LL |         $($c)\u00f6* {}\n    |                 ^^ expected `bool`, found `()`\n ...\n LL |     x!(if);\n-   |     ------- in this macro invocation\n+   |     ------ in this macro invocation\n    |\n    = note: this error originates in the macro `x` (in Nightly builds, run with -Z macro-backtrace for more info)\n "}, {"sha": "cd4cc969200a6f5f6995b90001ae4bf3701fec48", "filename": "src/test/ui/issues/issue-70724-add_type_neq_err_label-unwrap.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fissues%2Fissue-70724-add_type_neq_err_label-unwrap.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fissues%2Fissue-70724-add_type_neq_err_label-unwrap.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-70724-add_type_neq_err_label-unwrap.stderr?ref=90f4521cfdfc85fc04759cfba2f86a6acc096cb3", "patch": "@@ -2,7 +2,7 @@ error[E0369]: binary operation `==` cannot be applied to type `fn() -> i32 {a}`\n   --> $DIR/issue-70724-add_type_neq_err_label-unwrap.rs:6:5\n    |\n LL |     assert_eq!(a, 0);\n-   |     ^^^^^^^^^^^^^^^^^\n+   |     ^^^^^^^^^^^^^^^^\n    |     |\n    |     fn() -> i32 {a}\n    |     {integer}\n@@ -14,7 +14,7 @@ error[E0308]: mismatched types\n   --> $DIR/issue-70724-add_type_neq_err_label-unwrap.rs:6:5\n    |\n LL |     assert_eq!(a, 0);\n-   |     ^^^^^^^^^^^^^^^^^ expected fn item, found integer\n+   |     ^^^^^^^^^^^^^^^^ expected fn item, found integer\n    |\n    = note: expected fn item `fn() -> i32 {a}`\n                  found type `i32`\n@@ -27,7 +27,7 @@ LL | fn a() -> i32 {\n    |    - consider calling this function\n ...\n LL |     assert_eq!(a, 0);\n-   |     ^^^^^^^^^^^^^^^^^ `fn() -> i32 {a}` cannot be formatted using `{:?}` because it doesn't implement `Debug`\n+   |     ^^^^^^^^^^^^^^^^ `fn() -> i32 {a}` cannot be formatted using `{:?}` because it doesn't implement `Debug`\n    |\n    = help: the trait `Debug` is not implemented for `fn() -> i32 {a}`\n    = help: use parentheses to call the function: `a()`"}, {"sha": "ea400d7e1917ec95a5036ed41d40b4a9aeea24ab", "filename": "src/test/ui/issues/issue-7970a.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fissues%2Fissue-7970a.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fissues%2Fissue-7970a.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-7970a.stderr?ref=90f4521cfdfc85fc04759cfba2f86a6acc096cb3", "patch": "@@ -5,7 +5,7 @@ LL | macro_rules! one_arg_macro {\n    | -------------------------- when calling this macro\n ...\n LL |     one_arg_macro!();\n-   |     ^^^^^^^^^^^^^^^^^ missing tokens in macro arguments\n+   |     ^^^^^^^^^^^^^^^^ missing tokens in macro arguments\n \n error: aborting due to previous error\n "}, {"sha": "51bdf84a321bd84139319014cbdc7b88b85f4a65", "filename": "src/test/ui/lint/lint-stability2.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Flint%2Flint-stability2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Flint%2Flint-stability2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Flint-stability2.stderr?ref=90f4521cfdfc85fc04759cfba2f86a6acc096cb3", "patch": "@@ -2,7 +2,7 @@ error: use of deprecated function `lint_stability::deprecated`: text\n   --> $DIR/lint-stability2.rs:12:5\n    |\n LL |     macro_test!();\n-   |     ^^^^^^^^^^^^^^\n+   |     ^^^^^^^^^^^^^\n    |\n note: the lint level is defined here\n   --> $DIR/lint-stability2.rs:4:9"}, {"sha": "f20e16287af0fce7c01c4dfd1f68d243762183af", "filename": "src/test/ui/lint/lints-in-foreign-macros.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Flint%2Flints-in-foreign-macros.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Flint%2Flints-in-foreign-macros.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Flints-in-foreign-macros.stderr?ref=90f4521cfdfc85fc04759cfba2f86a6acc096cb3", "patch": "@@ -5,7 +5,7 @@ LL |     () => {use std::string::ToString;}\n    |                ^^^^^^^^^^^^^^^^^^^^^\n ...\n LL | mod a { foo!(); }\n-   |         ------- in this macro invocation\n+   |         ------ in this macro invocation\n    |\n note: the lint level is defined here\n   --> $DIR/lints-in-foreign-macros.rs:4:9"}, {"sha": "f284db80ff90fcce1bddbfeec401b80791bfdaca", "filename": "src/test/ui/lint/unreachable_pub-pub_crate.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Flint%2Funreachable_pub-pub_crate.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Flint%2Funreachable_pub-pub_crate.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Funreachable_pub-pub_crate.stderr?ref=90f4521cfdfc85fc04759cfba2f86a6acc096cb3", "patch": "@@ -126,7 +126,7 @@ LL |         ($visibility: vis, $name: ident) => { $visibility struct $name {} }\n    |                                               ^^^^^^^^^^^^^^^^^^^^^^^^\n ...\n LL |     define_empty_struct_with_visibility!(pub, Fluorine);\n-   |     ----------------------------------------------------\n+   |     ---------------------------------------------------\n    |     |                                    |\n    |     |                                    help: consider restricting its visibility: `pub(crate)`\n    |     in this macro invocation"}, {"sha": "61c9582287c015ff13372a40eb6e8eee8c59adb8", "filename": "src/test/ui/lint/unreachable_pub.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Flint%2Funreachable_pub.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Flint%2Funreachable_pub.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Funreachable_pub.stderr?ref=90f4521cfdfc85fc04759cfba2f86a6acc096cb3", "patch": "@@ -126,7 +126,7 @@ LL |         ($visibility: vis, $name: ident) => { $visibility struct $name {} }\n    |                                               ^^^^^^^^^^^^^^^^^^^^^^^^\n ...\n LL |     define_empty_struct_with_visibility!(pub, Fluorine);\n-   |     ----------------------------------------------------\n+   |     ---------------------------------------------------\n    |     |                                    |\n    |     |                                    help: consider restricting its visibility: `crate`\n    |     in this macro invocation"}, {"sha": "6812a1d8f631a66301e1404786768e0a880e099a", "filename": "src/test/ui/lint/unused/unused-macro-rules.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Flint%2Funused%2Funused-macro-rules.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Flint%2Funused%2Funused-macro-rules.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Funused%2Funused-macro-rules.stderr?ref=90f4521cfdfc85fc04759cfba2f86a6acc096cb3", "patch": "@@ -21,7 +21,7 @@ LL | |         }\n    | |_________^\n ...\n LL |   create_macro!();\n-   |   ---------------- in this macro invocation\n+   |   --------------- in this macro invocation\n    |\n    = note: this error originates in the macro `create_macro` (in Nightly builds, run with -Z macro-backtrace for more info)\n "}, {"sha": "0b33d8d0a2b23911398a0ca4bf835fea56b4e86e", "filename": "src/test/ui/liveness/liveness-return-last-stmt-semi.stderr", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fliveness%2Fliveness-return-last-stmt-semi.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fliveness%2Fliveness-return-last-stmt-semi.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fliveness%2Fliveness-return-last-stmt-semi.stderr?ref=90f4521cfdfc85fc04759cfba2f86a6acc096cb3", "patch": "@@ -28,13 +28,12 @@ error[E0308]: mismatched types\n   --> $DIR/liveness-return-last-stmt-semi.rs:4:41\n    |\n LL | macro_rules! test { () => { fn foo() -> i32 { 1; } } }\n-   |                                ---      ^^^    - help: consider removing this semicolon\n-   |                                |        |\n-   |                                |        expected `i32`, found `()`\n+   |                                ---      ^^^ expected `i32`, found `()`\n+   |                                |\n    |                                implicitly returns `()` as its body has no tail or `return` expression\n ...\n LL |     test!();\n-   |     -------- in this macro invocation\n+   |     ------- in this macro invocation\n    |\n    = note: this error originates in the macro `test` (in Nightly builds, run with -Z macro-backtrace for more info)\n "}, {"sha": "a624829f149c8d4c3677cfdb100a1a27032a0d25", "filename": "src/test/ui/llvm-asm/inline-asm-bad-constraint.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fllvm-asm%2Finline-asm-bad-constraint.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fllvm-asm%2Finline-asm-bad-constraint.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fllvm-asm%2Finline-asm-bad-constraint.stderr?ref=90f4521cfdfc85fc04759cfba2f86a6acc096cb3", "patch": "@@ -18,7 +18,7 @@ error[E0668]: malformed inline assembly\n   --> $DIR/inline-asm-bad-constraint.rs:38:9\n    |\n LL |         llvm_asm!(\"addb $1, $0\" : \"={rax}\"((0i32, rax)));\n-   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: this error originates in the macro `llvm_asm` (in Nightly builds, run with -Z macro-backtrace for more info)\n "}, {"sha": "ae271afe2625efc9b0799dd6daa03c9607e47257", "filename": "src/test/ui/llvm-asm/issue-62046.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fllvm-asm%2Fissue-62046.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fllvm-asm%2Fissue-62046.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fllvm-asm%2Fissue-62046.stderr?ref=90f4521cfdfc85fc04759cfba2f86a6acc096cb3", "patch": "@@ -2,7 +2,7 @@ error[E0668]: malformed inline assembly\n   --> $DIR/issue-62046.rs:9:9\n    |\n LL |         llvm_asm!(\"nop\" : \"+r\"(\"r15\"));\n-   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: this error originates in the macro `llvm_asm` (in Nightly builds, run with -Z macro-backtrace for more info)\n "}, {"sha": "715d05beaaee923497339b093f4d72b5a50cdcd5", "filename": "src/test/ui/llvm-asm/llvm-asm-parse-errors.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fllvm-asm%2Fllvm-asm-parse-errors.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fllvm-asm%2Fllvm-asm-parse-errors.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fllvm-asm%2Fllvm-asm-parse-errors.stderr?ref=90f4521cfdfc85fc04759cfba2f86a6acc096cb3", "patch": "@@ -2,7 +2,7 @@ error: macro requires a string literal as an argument\n   --> $DIR/llvm-asm-parse-errors.rs:5:5\n    |\n LL |     llvm_asm!();\n-   |     ^^^^^^^^^^^^ string literal required\n+   |     ^^^^^^^^^^^ string literal required\n \n error: expected string literal\n   --> $DIR/llvm-asm-parse-errors.rs:6:23"}, {"sha": "1d57b32d47e86d3c541fab0b55cebe3468b7caec", "filename": "src/test/ui/macro_backtrace/main.-Zmacro-backtrace.stderr", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fmacro_backtrace%2Fmain.-Zmacro-backtrace.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fmacro_backtrace%2Fmain.-Zmacro-backtrace.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmacro_backtrace%2Fmain.-Zmacro-backtrace.stderr?ref=90f4521cfdfc85fc04759cfba2f86a6acc096cb3", "patch": "@@ -8,7 +8,7 @@ LL | | }\n    | |_- in this expansion of `pong!`\n ...\n LL |       pong!();\n-   |       -------- in this macro invocation\n+   |       ------- in this macro invocation\n \n error: expected one of `!`, `.`, `::`, `;`, `?`, `{`, `}`, or an operator, found `error`\n   --> $DIR/main.rs:10:20\n@@ -20,14 +20,14 @@ LL | |  }\n    | |__- in this expansion of `pong!` (#2)\n ...\n LL |        ping!();\n-   |        -------- in this macro invocation (#1)\n+   |        ------- in this macro invocation (#1)\n    |\n   ::: $DIR/auxiliary/ping.rs:5:1\n    |\n LL |  / macro_rules! ping {\n LL |  |     () => {\n LL |  |         pong!();\n-   |  |         -------- in this macro invocation (#2)\n+   |  |         ------- in this macro invocation (#2)\n LL |  |     }\n LL |  | }\n    |  |_- in this expansion of `ping!` (#1)\n@@ -42,38 +42,38 @@ LL | |  }\n    | |__- in this expansion of `pong!` (#5)\n ...\n LL |        deep!();\n-   |        -------- in this macro invocation (#1)\n+   |        ------- in this macro invocation (#1)\n    |\n   ::: $DIR/auxiliary/ping.rs:5:1\n    |\n LL |  / macro_rules! ping {\n LL |  |     () => {\n LL |  |         pong!();\n-   |  |         -------- in this macro invocation (#5)\n+   |  |         ------- in this macro invocation (#5)\n LL |  |     }\n LL |  | }\n    |  |_- in this expansion of `ping!` (#4)\n ...\n LL | /  macro_rules! deep {\n LL | |      () => {\n LL | |          foo!();\n-   | |          ------- in this macro invocation (#2)\n+   | |          ------ in this macro invocation (#2)\n LL | |      }\n LL | |  }\n    | |__- in this expansion of `deep!` (#1)\n ...\n LL | /  macro_rules! foo {\n LL | |      () => {\n LL | |          bar!();\n-   | |          ------- in this macro invocation (#3)\n+   | |          ------ in this macro invocation (#3)\n LL | |      }\n LL | |  }\n    | |__- in this expansion of `foo!` (#2)\n ...\n LL | /  macro_rules! bar {\n LL | |      () => {\n LL | |          ping!();\n-   | |          -------- in this macro invocation (#4)\n+   | |          ------- in this macro invocation (#4)\n LL | |      }\n LL | |  }\n    | |__- in this expansion of `bar!` (#3)"}, {"sha": "fa9b4090ddfd34e94a45c7cecc8cee66086efce1", "filename": "src/test/ui/macro_backtrace/main.default.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fmacro_backtrace%2Fmain.default.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fmacro_backtrace%2Fmain.default.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmacro_backtrace%2Fmain.default.stderr?ref=90f4521cfdfc85fc04759cfba2f86a6acc096cb3", "patch": "@@ -5,7 +5,7 @@ LL |     () => { syntax error };\n    |                    ^^^^^ expected one of 8 possible tokens\n ...\n LL |     pong!();\n-   |     -------- in this macro invocation\n+   |     ------- in this macro invocation\n    |\n    = note: this error originates in the macro `pong` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n@@ -16,7 +16,7 @@ LL |     () => { syntax error };\n    |                    ^^^^^ expected one of 8 possible tokens\n ...\n LL |     ping!();\n-   |     -------- in this macro invocation\n+   |     ------- in this macro invocation\n    |\n    = note: this error originates in the macro `pong` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n@@ -27,7 +27,7 @@ LL |     () => { syntax error };\n    |                    ^^^^^ expected one of 8 possible tokens\n ...\n LL |     deep!();\n-   |     -------- in this macro invocation\n+   |     ------- in this macro invocation\n    |\n    = note: this error originates in the macro `pong` (in Nightly builds, run with -Z macro-backtrace for more info)\n "}, {"sha": "eb001429c5522af006f4eca681a766da6e29b23a", "filename": "src/test/ui/macros/assert-trailing-junk.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fmacros%2Fassert-trailing-junk.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fmacros%2Fassert-trailing-junk.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmacros%2Fassert-trailing-junk.stderr?ref=90f4521cfdfc85fc04759cfba2f86a6acc096cb3", "patch": "@@ -38,7 +38,7 @@ error: macro requires an expression as an argument\n   --> $DIR/assert-trailing-junk.rs:19:5\n    |\n LL |     assert!(true;);\n-   |     ^^^^^^^^^^^^-^^\n+   |     ^^^^^^^^^^^^-^\n    |                 |\n    |                 help: try removing semicolon\n "}, {"sha": "57e5c77a5669295956723eb248415323f9417632", "filename": "src/test/ui/macros/assert.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fmacros%2Fassert.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fmacros%2Fassert.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmacros%2Fassert.stderr?ref=90f4521cfdfc85fc04759cfba2f86a6acc096cb3", "patch": "@@ -2,7 +2,7 @@ error: macro requires a boolean expression as an argument\n   --> $DIR/assert.rs:2:5\n    |\n LL |     assert!();\n-   |     ^^^^^^^^^^ boolean expression required\n+   |     ^^^^^^^^^ boolean expression required\n \n error: expected expression, found keyword `struct`\n   --> $DIR/assert.rs:3:13\n@@ -14,7 +14,7 @@ error: macro requires a boolean expression as an argument\n   --> $DIR/assert.rs:4:5\n    |\n LL |     debug_assert!();\n-   |     ^^^^^^^^^^^^^^^^ boolean expression required\n+   |     ^^^^^^^^^^^^^^^ boolean expression required\n    |\n    = note: this error originates in the macro `debug_assert` (in Nightly builds, run with -Z macro-backtrace for more info)\n "}, {"sha": "4785ef9aae4829b94ca7d89c21a03fb05e17680e", "filename": "src/test/ui/macros/cfg.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fmacros%2Fcfg.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fmacros%2Fcfg.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmacros%2Fcfg.stderr?ref=90f4521cfdfc85fc04759cfba2f86a6acc096cb3", "patch": "@@ -2,7 +2,7 @@ error: macro requires a cfg-pattern as an argument\n   --> $DIR/cfg.rs:2:5\n    |\n LL |     cfg!();\n-   |     ^^^^^^^ cfg-pattern required\n+   |     ^^^^^^ cfg-pattern required\n    |\n    = note: this error originates in the macro `cfg` (in Nightly builds, run with -Z macro-backtrace for more info)\n "}, {"sha": "c0e766681fed6303a0be6c5fbe984a85c43e9148", "filename": "src/test/ui/macros/format-parse-errors.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fmacros%2Fformat-parse-errors.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fmacros%2Fformat-parse-errors.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmacros%2Fformat-parse-errors.stderr?ref=90f4521cfdfc85fc04759cfba2f86a6acc096cb3", "patch": "@@ -2,7 +2,7 @@ error: requires at least a format string argument\n   --> $DIR/format-parse-errors.rs:4:5\n    |\n LL |     format!();\n-   |     ^^^^^^^^^^\n+   |     ^^^^^^^^^\n    |\n    = note: this error originates in the macro `$crate::__export::format_args` (in Nightly builds, run with -Z macro-backtrace for more info)\n "}, {"sha": "3c26ec65aa27b9abf39db94a04655ef40a68408d", "filename": "src/test/ui/macros/global-asm.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fmacros%2Fglobal-asm.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fmacros%2Fglobal-asm.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmacros%2Fglobal-asm.stderr?ref=90f4521cfdfc85fc04759cfba2f86a6acc096cb3", "patch": "@@ -2,7 +2,7 @@ error: requires at least a template string argument\n   --> $DIR/global-asm.rs:4:5\n    |\n LL |     global_asm!();\n-   |     ^^^^^^^^^^^^^^\n+   |     ^^^^^^^^^^^^^\n \n error: expected expression, found keyword `struct`\n   --> $DIR/global-asm.rs:5:17"}, {"sha": "bbbca211b8d173c5cbcebb7e782d5d9167765859", "filename": "src/test/ui/macros/issue-54441.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fmacros%2Fissue-54441.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fmacros%2Fissue-54441.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmacros%2Fissue-54441.stderr?ref=90f4521cfdfc85fc04759cfba2f86a6acc096cb3", "patch": "@@ -5,7 +5,7 @@ LL |         let\n    |         ^^^\n ...\n LL |     m!();\n-   |     ----- caused by the macro expansion here\n+   |     ---- caused by the macro expansion here\n    |\n    = note: the usage of `m!` is likely invalid in foreign item context\n "}, {"sha": "53a0a0793b262dac544e9dc85da44fbd969b3763", "filename": "src/test/ui/macros/issue-78325-inconsistent-resolution.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fmacros%2Fissue-78325-inconsistent-resolution.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fmacros%2Fissue-78325-inconsistent-resolution.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmacros%2Fissue-78325-inconsistent-resolution.stderr?ref=90f4521cfdfc85fc04759cfba2f86a6acc096cb3", "patch": "@@ -5,7 +5,7 @@ LL |         extern crate std as core;\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^\n ...\n LL | define_other_core!();\n-   | --------------------- in this macro invocation\n+   | -------------------- in this macro invocation\n    |\n    = note: this error originates in the macro `define_other_core` (in Nightly builds, run with -Z macro-backtrace for more info)\n "}, {"sha": "e266617bd2249ca123bc2fafe9d00e0c97dc4681", "filename": "src/test/ui/macros/issue-84632-eager-expansion-recursion-limit.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fmacros%2Fissue-84632-eager-expansion-recursion-limit.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fmacros%2Fissue-84632-eager-expansion-recursion-limit.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmacros%2Fissue-84632-eager-expansion-recursion-limit.stderr?ref=90f4521cfdfc85fc04759cfba2f86a6acc096cb3", "patch": "@@ -5,7 +5,7 @@ LL |     (A, $($A:ident),*) => (concat!(\"\", a!($($A),*)))\n    |                            ^^^^^^^^^^^^^^^^^^^^^^^^\n ...\n LL |     a!(A, A, A, A, A, A, A, A, A, A, A);\n-   |     ------------------------------------ in this macro invocation\n+   |     ----------------------------------- in this macro invocation\n    |\n    = help: consider increasing the recursion limit by adding a `#![recursion_limit = \"30\"]` attribute to your crate (`issue_84632_eager_expansion_recursion_limit`)\n    = note: this error originates in the macro `a` (in Nightly builds, run with -Z macro-backtrace for more info)"}, {"sha": "9a3df858e515fe6ad98eb541f69e622fdf0b189a", "filename": "src/test/ui/macros/macro-at-most-once-rep-2015.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fmacros%2Fmacro-at-most-once-rep-2015.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fmacros%2Fmacro-at-most-once-rep-2015.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmacros%2Fmacro-at-most-once-rep-2015.stderr?ref=90f4521cfdfc85fc04759cfba2f86a6acc096cb3", "patch": "@@ -38,7 +38,7 @@ LL | macro_rules! barplus {\n    | -------------------- when calling this macro\n ...\n LL |     barplus!();\n-   |     ^^^^^^^^^^^ missing tokens in macro arguments\n+   |     ^^^^^^^^^^ missing tokens in macro arguments\n \n error: unexpected end of macro invocation\n   --> $DIR/macro-at-most-once-rep-2015.rs:30:15\n@@ -74,7 +74,7 @@ LL | macro_rules! barstar {\n    | -------------------- when calling this macro\n ...\n LL |     barstar!();\n-   |     ^^^^^^^^^^^ missing tokens in macro arguments\n+   |     ^^^^^^^^^^ missing tokens in macro arguments\n \n error: unexpected end of macro invocation\n   --> $DIR/macro-at-most-once-rep-2015.rs:37:15"}, {"sha": "013fabe13e5f603543233d40d44a933babc1b130", "filename": "src/test/ui/macros/macro-at-most-once-rep-2018.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fmacros%2Fmacro-at-most-once-rep-2018.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fmacros%2Fmacro-at-most-once-rep-2018.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmacros%2Fmacro-at-most-once-rep-2018.stderr?ref=90f4521cfdfc85fc04759cfba2f86a6acc096cb3", "patch": "@@ -38,7 +38,7 @@ LL | macro_rules! barplus {\n    | -------------------- when calling this macro\n ...\n LL |     barplus!();\n-   |     ^^^^^^^^^^^ missing tokens in macro arguments\n+   |     ^^^^^^^^^^ missing tokens in macro arguments\n \n error: unexpected end of macro invocation\n   --> $DIR/macro-at-most-once-rep-2018.rs:30:15\n@@ -74,7 +74,7 @@ LL | macro_rules! barstar {\n    | -------------------- when calling this macro\n ...\n LL |     barstar!();\n-   |     ^^^^^^^^^^^ missing tokens in macro arguments\n+   |     ^^^^^^^^^^ missing tokens in macro arguments\n \n error: unexpected end of macro invocation\n   --> $DIR/macro-at-most-once-rep-2018.rs:37:15"}, {"sha": "aa8f06a0df13b4f93626e8d44ef31fcf4c3cfb37", "filename": "src/test/ui/macros/macro-backtrace-invalid-internals.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fmacros%2Fmacro-backtrace-invalid-internals.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fmacros%2Fmacro-backtrace-invalid-internals.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmacros%2Fmacro-backtrace-invalid-internals.stderr?ref=90f4521cfdfc85fc04759cfba2f86a6acc096cb3", "patch": "@@ -5,7 +5,7 @@ LL |           1.fake()\n    |             ^^^^ method not found in `{integer}`\n ...\n LL |     fake_method_stmt!();\n-   |     -------------------- in this macro invocation\n+   |     ------------------- in this macro invocation\n    |\n    = note: this error originates in the macro `fake_method_stmt` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n@@ -16,7 +16,7 @@ LL |           1.fake\n    |             ^^^^\n ...\n LL |     fake_field_stmt!();\n-   |     ------------------- in this macro invocation\n+   |     ------------------ in this macro invocation\n    |\n    = note: this error originates in the macro `fake_field_stmt` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n@@ -27,7 +27,7 @@ LL |           (1).0\n    |               ^\n ...\n LL |     fake_anon_field_stmt!();\n-   |     ------------------------ in this macro invocation\n+   |     ----------------------- in this macro invocation\n    |\n    = note: this error originates in the macro `fake_anon_field_stmt` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n@@ -38,7 +38,7 @@ LL |           2.0.neg()\n    |               ^^^\n ...\n LL |     real_method_stmt!();\n-   |     -------------------- in this macro invocation\n+   |     ------------------- in this macro invocation\n    |\n    = note: this error originates in the macro `real_method_stmt` (in Nightly builds, run with -Z macro-backtrace for more info)\n help: you must specify a concrete type for this numeric value, like `f32`"}, {"sha": "38b52e1a1290950bf5236a2621def05242db0658", "filename": "src/test/ui/macros/macro-backtrace-nested.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fmacros%2Fmacro-backtrace-nested.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fmacros%2Fmacro-backtrace-nested.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmacros%2Fmacro-backtrace-nested.stderr?ref=90f4521cfdfc85fc04759cfba2f86a6acc096cb3", "patch": "@@ -16,7 +16,7 @@ LL |     () => (fake)\n    |            ^^^^ not found in this scope\n ...\n LL |     call_nested_expr_sum!();\n-   |     ------------------------ in this macro invocation\n+   |     ----------------------- in this macro invocation\n    |\n    = note: this error originates in the macro `nested_expr` (in Nightly builds, run with -Z macro-backtrace for more info)\n "}, {"sha": "bc00e0db83ed5e80cae9fc0945cb8e7335ac40aa", "filename": "src/test/ui/macros/macro-backtrace-println.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fmacros%2Fmacro-backtrace-println.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fmacros%2Fmacro-backtrace-println.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmacros%2Fmacro-backtrace-println.stderr?ref=90f4521cfdfc85fc04759cfba2f86a6acc096cb3", "patch": "@@ -5,7 +5,7 @@ LL |     ($fmt:expr) => (myprint!(concat!($fmt, \"\\n\")));\n    |                              ^^^^^^^^^^^^^^^^^^^\n ...\n LL |     myprintln!(\"{}\");\n-   |     ----------------- in this macro invocation\n+   |     ---------------- in this macro invocation\n    |\n    = note: this error originates in the macro `concat` (in Nightly builds, run with -Z macro-backtrace for more info)\n "}, {"sha": "874efccd323f8954e14b8c5dce624d08e3dda625", "filename": "src/test/ui/macros/macro-comma-support.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fmacros%2Fmacro-comma-support.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fmacros%2Fmacro-comma-support.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmacros%2Fmacro-comma-support.stderr?ref=90f4521cfdfc85fc04759cfba2f86a6acc096cb3", "patch": "@@ -2,13 +2,13 @@ error: lel\n   --> $DIR/macro-comma-support.rs:6:5\n    |\n LL |     compile_error!(\"lel\");\n-   |     ^^^^^^^^^^^^^^^^^^^^^^\n+   |     ^^^^^^^^^^^^^^^^^^^^^\n \n error: lel\n   --> $DIR/macro-comma-support.rs:7:5\n    |\n LL |     compile_error!(\"lel\",);\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^\n+   |     ^^^^^^^^^^^^^^^^^^^^^^\n \n error: aborting due to 2 previous errors\n "}, {"sha": "5dc178070318f0e68b953aaa7db0c440b3176144", "filename": "src/test/ui/macros/macro-context.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fmacros%2Fmacro-context.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fmacros%2Fmacro-context.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmacros%2Fmacro-context.stderr?ref=90f4521cfdfc85fc04759cfba2f86a6acc096cb3", "patch": "@@ -38,7 +38,7 @@ LL |     () => ( i ; typeof );\n    |                 ^^^^^^ expected expression\n ...\n LL |     m!();\n-   |     ----- in this macro invocation\n+   |     ---- in this macro invocation\n    |\n    = note: this error originates in the macro `m` (in Nightly builds, run with -Z macro-backtrace for more info)\n "}, {"sha": "69334e21192108ee96286fe641cc1fbee1552f61", "filename": "src/test/ui/macros/macro-lifetime-used-with-labels.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fmacros%2Fmacro-lifetime-used-with-labels.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fmacros%2Fmacro-lifetime-used-with-labels.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmacros%2Fmacro-lifetime-used-with-labels.stderr?ref=90f4521cfdfc85fc04759cfba2f86a6acc096cb3", "patch": "@@ -7,7 +7,7 @@ LL |         'b: loop {\n LL |     'b: loop {\n    |     -- first declared here\n LL |         br2!('b);\n-   |         --------- in this macro invocation\n+   |         -------- in this macro invocation\n    |\n    = note: this warning originates in the macro `br2` (in Nightly builds, run with -Z macro-backtrace for more info)\n "}, {"sha": "b449e34736820c6a8f5297bfe1a1ebddbdc92459", "filename": "src/test/ui/macros/macro-local-data-key-priv.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fmacros%2Fmacro-local-data-key-priv.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fmacros%2Fmacro-local-data-key-priv.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmacros%2Fmacro-local-data-key-priv.stderr?ref=90f4521cfdfc85fc04759cfba2f86a6acc096cb3", "patch": "@@ -8,7 +8,7 @@ note: the constant `baz` is defined here\n   --> $DIR/macro-local-data-key-priv.rs:4:5\n    |\n LL |     thread_local!(static baz: f64 = 0.0);\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    = note: this error originates in the macro `$crate::__thread_local_inner` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n error: aborting due to previous error"}, {"sha": "58224b70734dac193642ad01c833409bf1e74bd6", "filename": "src/test/ui/macros/macro-shadowing.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fmacros%2Fmacro-shadowing.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fmacros%2Fmacro-shadowing.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmacros%2Fmacro-shadowing.stderr?ref=90f4521cfdfc85fc04759cfba2f86a6acc096cb3", "patch": "@@ -5,7 +5,7 @@ LL |     #[macro_use]\n    |     ^^^^^^^^^^^^\n ...\n LL | m1!();\n-   | ------ in this macro invocation\n+   | ----- in this macro invocation\n    |\n    = note: macro-expanded `#[macro_use]`s may not shadow existing macros (see RFC 1560)\n    = note: this error originates in the macro `m1` (in Nightly builds, run with -Z macro-backtrace for more info)\n@@ -23,7 +23,7 @@ LL |     macro_rules! foo { () => {} }\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n ...\n LL | m1!();\n-   | ------ in this macro invocation\n+   | ----- in this macro invocation\n note: `foo` could also refer to the macro defined here\n   --> $DIR/macro-shadowing.rs:5:1\n    |"}, {"sha": "64065cd272af958be493cd42a4a70a09cd28701c", "filename": "src/test/ui/macros/macros-nonfatal-errors.stderr", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fmacros%2Fmacros-nonfatal-errors.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fmacros%2Fmacros-nonfatal-errors.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmacros%2Fmacros-nonfatal-errors.stderr?ref=90f4521cfdfc85fc04759cfba2f86a6acc096cb3", "patch": "@@ -142,7 +142,7 @@ error: concat_idents! requires ident args\n   --> $DIR/macros-nonfatal-errors.rs:102:5\n    |\n LL |     concat_idents!(\"not\", \"idents\");\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: argument must be a string literal\n   --> $DIR/macros-nonfatal-errors.rs:104:17\n@@ -166,7 +166,7 @@ error: environment variable `RUST_HOPEFULLY_THIS_DOESNT_EXIST` not defined\n   --> $DIR/macros-nonfatal-errors.rs:107:5\n    |\n LL |     env!(\"RUST_HOPEFULLY_THIS_DOESNT_EXIST\");\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: this error originates in the macro `env` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n@@ -197,7 +197,7 @@ error: couldn't read $DIR/i'd be quite surprised if a file with this name existe\n   --> $DIR/macros-nonfatal-errors.rs:114:5\n    |\n LL |     include_str!(\"i'd be quite surprised if a file with this name existed\");\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: this error originates in the macro `include_str` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n@@ -211,15 +211,15 @@ error: couldn't read $DIR/i'd be quite surprised if a file with this name existe\n   --> $DIR/macros-nonfatal-errors.rs:116:5\n    |\n LL |     include_bytes!(\"i'd be quite surprised if a file with this name existed\");\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: this error originates in the macro `include_bytes` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n error: trace_macros! accepts only `true` or `false`\n   --> $DIR/macros-nonfatal-errors.rs:118:5\n    |\n LL |     trace_macros!(invalid);\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^\n+   |     ^^^^^^^^^^^^^^^^^^^^^^\n \n error: aborting due to 27 previous errors\n "}, {"sha": "b56b00cc7d93ca0e8d8e770a93c05565a354edd4", "filename": "src/test/ui/macros/must-use-in-macro-55516.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fmacros%2Fmust-use-in-macro-55516.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fmacros%2Fmust-use-in-macro-55516.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmacros%2Fmust-use-in-macro-55516.stderr?ref=90f4521cfdfc85fc04759cfba2f86a6acc096cb3", "patch": "@@ -2,7 +2,7 @@ warning: unused `Result` that must be used\n   --> $DIR/must-use-in-macro-55516.rs:9:5\n    |\n LL |     write!(&mut example, \"{}\", 42);\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: `-W unused-must-use` implied by `-W unused`\n    = note: this `Result` may be an `Err` variant, which should be handled"}, {"sha": "155a94251312c7951a7c5febb1d78ac7ff04cbd3", "filename": "src/test/ui/macros/nonterminal-matching.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fmacros%2Fnonterminal-matching.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fmacros%2Fnonterminal-matching.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmacros%2Fnonterminal-matching.stderr?ref=90f4521cfdfc85fc04759cfba2f86a6acc096cb3", "patch": "@@ -8,7 +8,7 @@ LL |     n!(a $nt_item b);\n    |          ^^^^^^^^ no rules expected this token in macro call\n ...\n LL | complex_nonterminal!(enum E {});\n-   | -------------------------------- in this macro invocation\n+   | ------------------------------- in this macro invocation\n    |\n    = note: this error originates in the macro `complex_nonterminal` (in Nightly builds, run with -Z macro-backtrace for more info)\n "}, {"sha": "6b1191670743382fe3725361d42b29fb5c75ae8c", "filename": "src/test/ui/macros/out-of-order-shadowing.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fmacros%2Fout-of-order-shadowing.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fmacros%2Fout-of-order-shadowing.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmacros%2Fout-of-order-shadowing.stderr?ref=90f4521cfdfc85fc04759cfba2f86a6acc096cb3", "patch": "@@ -8,7 +8,7 @@ note: `bar` could refer to the macro defined here\n   --> $DIR/out-of-order-shadowing.rs:4:1\n    |\n LL | define_macro!(bar);\n-   | ^^^^^^^^^^^^^^^^^^^\n+   | ^^^^^^^^^^^^^^^^^^\n note: `bar` could also refer to the macro defined here\n   --> $DIR/out-of-order-shadowing.rs:3:1\n    |"}, {"sha": "4912166883260164dd2d54705f4bb6d003b802f1", "filename": "src/test/ui/macros/restricted-shadowing-legacy.stderr", "status": "modified", "additions": 24, "deletions": 24, "changes": 48, "blob_url": "https://github.com/rust-lang/rust/blob/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fmacros%2Frestricted-shadowing-legacy.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fmacros%2Frestricted-shadowing-legacy.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmacros%2Frestricted-shadowing-legacy.stderr?ref=90f4521cfdfc85fc04759cfba2f86a6acc096cb3", "patch": "@@ -5,7 +5,7 @@ LL |             m!();\n    |             ^ ambiguous name\n ...\n LL | include!();\n-   | ----------- in this macro invocation\n+   | ---------- in this macro invocation\n    |\n note: `m` could refer to the macro defined here\n   --> $DIR/restricted-shadowing-legacy.rs:88:9\n@@ -14,15 +14,15 @@ LL |         macro_rules! m { () => { Right } }\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n ...\n LL | include!();\n-   | ----------- in this macro invocation\n+   | ---------- in this macro invocation\n note: `m` could also refer to the macro defined here\n   --> $DIR/restricted-shadowing-legacy.rs:97:9\n    |\n LL |         macro_rules! m { () => {} }\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n ...\n LL | include!();\n-   | ----------- in this macro invocation\n+   | ---------- in this macro invocation\n    = note: this error originates in the macro `gen_gen_inner_invoc` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n error[E0659]: `m` is ambiguous (macro-expanded name vs less macro-expanded name from outer scope during import/macro resolution)\n@@ -32,7 +32,7 @@ LL |         macro_rules! gen_invoc { () => { m!() } }\n    |                                          ^ ambiguous name\n ...\n LL | include!();\n-   | ----------- in this macro invocation\n+   | ---------- in this macro invocation\n    |\n note: `m` could refer to the macro defined here\n   --> $DIR/restricted-shadowing-legacy.rs:88:9\n@@ -41,15 +41,15 @@ LL |         macro_rules! m { () => { Right } }\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n ...\n LL | include!();\n-   | ----------- in this macro invocation\n+   | ---------- in this macro invocation\n note: `m` could also refer to the macro defined here\n   --> $DIR/restricted-shadowing-legacy.rs:135:9\n    |\n LL |         macro_rules! m { () => {} }\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n ...\n LL | include!();\n-   | ----------- in this macro invocation\n+   | ---------- in this macro invocation\n    = note: this error originates in the macro `gen_invoc` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n error[E0659]: `m` is ambiguous (macro-expanded name vs less macro-expanded name from outer scope during import/macro resolution)\n@@ -59,7 +59,7 @@ LL |         m!();\n    |         ^ ambiguous name\n ...\n LL | include!();\n-   | ----------- in this macro invocation\n+   | ---------- in this macro invocation\n    |\n note: `m` could refer to the macro defined here\n   --> $DIR/restricted-shadowing-legacy.rs:88:9\n@@ -68,15 +68,15 @@ LL |         macro_rules! m { () => { Right } }\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n ...\n LL | include!();\n-   | ----------- in this macro invocation\n+   | ---------- in this macro invocation\n note: `m` could also refer to the macro defined here\n   --> $DIR/restricted-shadowing-legacy.rs:144:9\n    |\n LL |         macro_rules! m { () => {} }\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n ...\n LL | include!();\n-   | ----------- in this macro invocation\n+   | ---------- in this macro invocation\n    = note: this error originates in the macro `include` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n error[E0659]: `m` is ambiguous (macro-expanded name vs less macro-expanded name from outer scope during import/macro resolution)\n@@ -86,7 +86,7 @@ LL |         m!();\n    |         ^ ambiguous name\n ...\n LL | include!();\n-   | ----------- in this macro invocation\n+   | ---------- in this macro invocation\n    |\n note: `m` could refer to the macro defined here\n   --> $DIR/restricted-shadowing-legacy.rs:88:9\n@@ -95,15 +95,15 @@ LL |         macro_rules! m { () => { Right } }\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n ...\n LL | include!();\n-   | ----------- in this macro invocation\n+   | ---------- in this macro invocation\n note: `m` could also refer to the macro defined here\n   --> $DIR/restricted-shadowing-legacy.rs:85:9\n    |\n LL |         macro_rules! m { () => { Wrong } }\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n ...\n LL | include!();\n-   | ----------- in this macro invocation\n+   | ---------- in this macro invocation\n    = note: this error originates in the macro `include` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n error[E0659]: `m` is ambiguous (macro-expanded name vs less macro-expanded name from outer scope during import/macro resolution)\n@@ -113,7 +113,7 @@ LL |             m!();\n    |             ^ ambiguous name\n ...\n LL | include!();\n-   | ----------- in this macro invocation\n+   | ---------- in this macro invocation\n    |\n note: `m` could refer to the macro defined here\n   --> $DIR/restricted-shadowing-legacy.rs:88:9\n@@ -122,15 +122,15 @@ LL |         macro_rules! m { () => { Right } }\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n ...\n LL | include!();\n-   | ----------- in this macro invocation\n+   | ---------- in this macro invocation\n note: `m` could also refer to the macro defined here\n   --> $DIR/restricted-shadowing-legacy.rs:85:9\n    |\n LL |         macro_rules! m { () => { Wrong } }\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n ...\n LL | include!();\n-   | ----------- in this macro invocation\n+   | ---------- in this macro invocation\n    = note: this error originates in the macro `gen_gen_inner_invoc` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n error[E0659]: `m` is ambiguous (macro-expanded name vs less macro-expanded name from outer scope during import/macro resolution)\n@@ -140,7 +140,7 @@ LL |         macro_rules! gen_invoc { () => { m!() } }\n    |                                          ^ ambiguous name\n ...\n LL | include!();\n-   | ----------- in this macro invocation\n+   | ---------- in this macro invocation\n    |\n note: `m` could refer to the macro defined here\n   --> $DIR/restricted-shadowing-legacy.rs:88:9\n@@ -149,15 +149,15 @@ LL |         macro_rules! m { () => { Right } }\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n ...\n LL | include!();\n-   | ----------- in this macro invocation\n+   | ---------- in this macro invocation\n note: `m` could also refer to the macro defined here\n   --> $DIR/restricted-shadowing-legacy.rs:85:9\n    |\n LL |         macro_rules! m { () => { Wrong } }\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n ...\n LL | include!();\n-   | ----------- in this macro invocation\n+   | ---------- in this macro invocation\n    = note: this error originates in the macro `gen_invoc` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n error[E0659]: `m` is ambiguous (macro-expanded name vs less macro-expanded name from outer scope during import/macro resolution)\n@@ -167,7 +167,7 @@ LL |         m!();\n    |         ^ ambiguous name\n ...\n LL | include!();\n-   | ----------- in this macro invocation\n+   | ---------- in this macro invocation\n    |\n note: `m` could refer to the macro defined here\n   --> $DIR/restricted-shadowing-legacy.rs:88:9\n@@ -176,15 +176,15 @@ LL |         macro_rules! m { () => { Right } }\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n ...\n LL | include!();\n-   | ----------- in this macro invocation\n+   | ---------- in this macro invocation\n note: `m` could also refer to the macro defined here\n   --> $DIR/restricted-shadowing-legacy.rs:227:13\n    |\n LL |             macro_rules! m { () => {} }\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n ...\n LL | include!();\n-   | ----------- in this macro invocation\n+   | ---------- in this macro invocation\n    = note: this error originates in the macro `include` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n error[E0659]: `m` is ambiguous (macro-expanded name vs less macro-expanded name from outer scope during import/macro resolution)\n@@ -194,7 +194,7 @@ LL |         macro_rules! gen_invoc { () => { m!() } }\n    |                                          ^ ambiguous name\n ...\n LL | include!();\n-   | ----------- in this macro invocation\n+   | ---------- in this macro invocation\n    |\n note: `m` could refer to the macro defined here\n   --> $DIR/restricted-shadowing-legacy.rs:88:9\n@@ -203,15 +203,15 @@ LL |         macro_rules! m { () => { Right } }\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n ...\n LL | include!();\n-   | ----------- in this macro invocation\n+   | ---------- in this macro invocation\n note: `m` could also refer to the macro defined here\n   --> $DIR/restricted-shadowing-legacy.rs:257:13\n    |\n LL |             macro_rules! m { () => {} }\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n ...\n LL | include!();\n-   | ----------- in this macro invocation\n+   | ---------- in this macro invocation\n    = note: this error originates in the macro `gen_invoc` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n error: aborting due to 8 previous errors"}, {"sha": "62639eeb1192a9a256babd3f71241d3551ae1c5e", "filename": "src/test/ui/macros/restricted-shadowing-modern.stderr", "status": "modified", "additions": 18, "deletions": 18, "changes": 36, "blob_url": "https://github.com/rust-lang/rust/blob/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fmacros%2Frestricted-shadowing-modern.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fmacros%2Frestricted-shadowing-modern.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmacros%2Frestricted-shadowing-modern.stderr?ref=90f4521cfdfc85fc04759cfba2f86a6acc096cb3", "patch": "@@ -5,7 +5,7 @@ LL |                 m!();\n    |                 ^ ambiguous name\n ...\n LL | include!();\n-   | ----------- in this macro invocation\n+   | ---------- in this macro invocation\n    |\n note: `m` could refer to the macro defined here\n   --> $DIR/restricted-shadowing-modern.rs:91:9\n@@ -14,15 +14,15 @@ LL |         macro m() { Right }\n    |         ^^^^^^^^^^^^^^^^^^^\n ...\n LL | include!();\n-   | ----------- in this macro invocation\n+   | ---------- in this macro invocation\n note: `m` could also refer to the macro defined here\n   --> $DIR/restricted-shadowing-modern.rs:99:9\n    |\n LL |         macro m() {}\n    |         ^^^^^^^^^^^^\n ...\n LL | include!();\n-   | ----------- in this macro invocation\n+   | ---------- in this macro invocation\n    = note: this error originates in the macro `gen_gen_inner_invoc` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n error[E0659]: `m` is ambiguous (macro-expanded name vs less macro-expanded name from outer scope during import/macro resolution)\n@@ -32,7 +32,7 @@ LL |             macro gen_invoc() { m!() }\n    |                                 ^ ambiguous name\n ...\n LL | include!();\n-   | ----------- in this macro invocation\n+   | ---------- in this macro invocation\n    |\n note: `m` could refer to the macro defined here\n   --> $DIR/restricted-shadowing-modern.rs:91:9\n@@ -41,15 +41,15 @@ LL |         macro m() { Right }\n    |         ^^^^^^^^^^^^^^^^^^^\n ...\n LL | include!();\n-   | ----------- in this macro invocation\n+   | ---------- in this macro invocation\n note: `m` could also refer to the macro defined here\n   --> $DIR/restricted-shadowing-modern.rs:143:9\n    |\n LL |         macro m() {}\n    |         ^^^^^^^^^^^^\n ...\n LL | include!();\n-   | ----------- in this macro invocation\n+   | ---------- in this macro invocation\n    = note: this error originates in the macro `gen_invoc` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n error[E0659]: `m` is ambiguous (macro-expanded name vs less macro-expanded name from outer scope during import/macro resolution)\n@@ -59,7 +59,7 @@ LL |             m!();\n    |             ^ ambiguous name\n ...\n LL | include!();\n-   | ----------- in this macro invocation\n+   | ---------- in this macro invocation\n    |\n note: `m` could refer to the macro defined here\n   --> $DIR/restricted-shadowing-modern.rs:91:9\n@@ -68,15 +68,15 @@ LL |         macro m() { Right }\n    |         ^^^^^^^^^^^^^^^^^^^\n ...\n LL | include!();\n-   | ----------- in this macro invocation\n+   | ---------- in this macro invocation\n note: `m` could also refer to the macro defined here\n   --> $DIR/restricted-shadowing-modern.rs:153:9\n    |\n LL |         macro m() {}\n    |         ^^^^^^^^^^^^\n ...\n LL | include!();\n-   | ----------- in this macro invocation\n+   | ---------- in this macro invocation\n    = note: this error originates in the macro `include` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n error[E0659]: `m` is ambiguous (macro-expanded name vs less macro-expanded name from outer scope during import/macro resolution)\n@@ -86,7 +86,7 @@ LL |             m!();\n    |             ^ ambiguous name\n ...\n LL | include!();\n-   | ----------- in this macro invocation\n+   | ---------- in this macro invocation\n    |\n note: `m` could refer to the macro defined here\n   --> $DIR/restricted-shadowing-modern.rs:91:9\n@@ -95,15 +95,15 @@ LL |         macro m() { Right }\n    |         ^^^^^^^^^^^^^^^^^^^\n ...\n LL | include!();\n-   | ----------- in this macro invocation\n+   | ---------- in this macro invocation\n note: `m` could also refer to the macro defined here\n   --> $DIR/restricted-shadowing-modern.rs:87:9\n    |\n LL |         macro m() { Wrong }\n    |         ^^^^^^^^^^^^^^^^^^^\n ...\n LL | include!();\n-   | ----------- in this macro invocation\n+   | ---------- in this macro invocation\n    = note: this error originates in the macro `include` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n error[E0659]: `m` is ambiguous (macro-expanded name vs less macro-expanded name from outer scope during import/macro resolution)\n@@ -113,7 +113,7 @@ LL |                 m!();\n    |                 ^ ambiguous name\n ...\n LL | include!();\n-   | ----------- in this macro invocation\n+   | ---------- in this macro invocation\n    |\n note: `m` could refer to the macro defined here\n   --> $DIR/restricted-shadowing-modern.rs:91:9\n@@ -122,15 +122,15 @@ LL |         macro m() { Right }\n    |         ^^^^^^^^^^^^^^^^^^^\n ...\n LL | include!();\n-   | ----------- in this macro invocation\n+   | ---------- in this macro invocation\n note: `m` could also refer to the macro defined here\n   --> $DIR/restricted-shadowing-modern.rs:87:9\n    |\n LL |         macro m() { Wrong }\n    |         ^^^^^^^^^^^^^^^^^^^\n ...\n LL | include!();\n-   | ----------- in this macro invocation\n+   | ---------- in this macro invocation\n    = note: this error originates in the macro `gen_gen_inner_invoc` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n error[E0659]: `m` is ambiguous (macro-expanded name vs less macro-expanded name from outer scope during import/macro resolution)\n@@ -140,7 +140,7 @@ LL |             macro gen_invoc() { m!() }\n    |                                 ^ ambiguous name\n ...\n LL | include!();\n-   | ----------- in this macro invocation\n+   | ---------- in this macro invocation\n    |\n note: `m` could refer to the macro defined here\n   --> $DIR/restricted-shadowing-modern.rs:91:9\n@@ -149,15 +149,15 @@ LL |         macro m() { Right }\n    |         ^^^^^^^^^^^^^^^^^^^\n ...\n LL | include!();\n-   | ----------- in this macro invocation\n+   | ---------- in this macro invocation\n note: `m` could also refer to the macro defined here\n   --> $DIR/restricted-shadowing-modern.rs:87:9\n    |\n LL |         macro m() { Wrong }\n    |         ^^^^^^^^^^^^^^^^^^^\n ...\n LL | include!();\n-   | ----------- in this macro invocation\n+   | ---------- in this macro invocation\n    = note: this error originates in the macro `gen_invoc` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n error: aborting due to 6 previous errors"}, {"sha": "bdd191e8ed6ebdc4455724c655d4f38342d314d5", "filename": "src/test/ui/macros/same-sequence-span.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fmacros%2Fsame-sequence-span.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fmacros%2Fsame-sequence-span.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmacros%2Fsame-sequence-span.stderr?ref=90f4521cfdfc85fc04759cfba2f86a6acc096cb3", "patch": "@@ -18,7 +18,7 @@ error: `$x:expr` may be followed by `$y:tt`, which is not allowed for `expr` fra\n   --> $DIR/same-sequence-span.rs:19:1\n    |\n LL |   proc_macro_sequence::make_foo!();\n-   |   ^--------------------------------\n+   |   ^-------------------------------\n    |   |\n    |  _in this macro invocation\n    | |\n@@ -34,7 +34,7 @@ error: `$x:expr` may be followed by `=`, which is not allowed for `expr` fragmen\n   --> $DIR/same-sequence-span.rs:19:1\n    |\n LL | proc_macro_sequence::make_foo!();\n-   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ not allowed after `expr` fragments\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ not allowed after `expr` fragments\n    |\n    = note: allowed there are: `=>`, `,` or `;`\n    = note: this error originates in the macro `proc_macro_sequence::make_foo` (in Nightly builds, run with -Z macro-backtrace for more info)"}, {"sha": "ce3424a8b15f07f8eb09aa870f29cdeb6e19c03a", "filename": "src/test/ui/macros/span-covering-argument-1.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fmacros%2Fspan-covering-argument-1.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fmacros%2Fspan-covering-argument-1.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmacros%2Fspan-covering-argument-1.stderr?ref=90f4521cfdfc85fc04759cfba2f86a6acc096cb3", "patch": "@@ -7,7 +7,7 @@ LL |             *&mut $s = 0;\n    |              ^^^^^^^ cannot borrow as mutable\n ...\n LL |     bad!(foo whatever);\n-   |     ------------------- in this macro invocation\n+   |     ------------------ in this macro invocation\n    |\n    = note: this error originates in the macro `bad` (in Nightly builds, run with -Z macro-backtrace for more info)\n "}, {"sha": "43272248c280eb5d6a6555efbb14695b29c1d392", "filename": "src/test/ui/macros/trace-macro.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fmacros%2Ftrace-macro.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fmacros%2Ftrace-macro.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmacros%2Ftrace-macro.stderr?ref=90f4521cfdfc85fc04759cfba2f86a6acc096cb3", "patch": "@@ -2,7 +2,7 @@ note: trace_macro\n   --> $DIR/trace-macro.rs:5:5\n    |\n LL |     println!(\"Hello, World!\");\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: expanding `println! { \"Hello, World!\" }`\n    = note: to `{ $crate :: io :: _print($crate :: format_args_nl! (\"Hello, World!\")) ; }`"}, {"sha": "d6fc694021448b47c9751d51010ddad2dc841e18", "filename": "src/test/ui/macros/trace_faulty_macros.stderr", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fmacros%2Ftrace_faulty_macros.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fmacros%2Ftrace_faulty_macros.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmacros%2Ftrace_faulty_macros.stderr?ref=90f4521cfdfc85fc04759cfba2f86a6acc096cb3", "patch": "@@ -8,15 +8,15 @@ LL |         my_faulty_macro!(bcd);\n    |                          ^^^ no rules expected this token in macro call\n ...\n LL |     my_faulty_macro!();\n-   |     ------------------- in this macro invocation\n+   |     ------------------ in this macro invocation\n    |\n    = note: this error originates in the macro `my_faulty_macro` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n note: trace_macro\n   --> $DIR/trace_faulty_macros.rs:31:5\n    |\n LL |     my_faulty_macro!();\n-   |     ^^^^^^^^^^^^^^^^^^^\n+   |     ^^^^^^^^^^^^^^^^^^\n    |\n    = note: expanding `my_faulty_macro! {  }`\n    = note: to `my_faulty_macro! (bcd) ;`\n@@ -26,10 +26,10 @@ error: recursion limit reached while expanding `my_recursive_macro!`\n   --> $DIR/trace_faulty_macros.rs:22:9\n    |\n LL |         my_recursive_macro!();\n-   |         ^^^^^^^^^^^^^^^^^^^^^^\n+   |         ^^^^^^^^^^^^^^^^^^^^^\n ...\n LL |     my_recursive_macro!();\n-   |     ---------------------- in this macro invocation\n+   |     --------------------- in this macro invocation\n    |\n    = help: consider increasing the recursion limit by adding a `#![recursion_limit = \"8\"]` attribute to your crate (`trace_faulty_macros`)\n    = note: this error originates in the macro `my_recursive_macro` (in Nightly builds, run with -Z macro-backtrace for more info)\n@@ -38,7 +38,7 @@ note: trace_macro\n   --> $DIR/trace_faulty_macros.rs:32:5\n    |\n LL |     my_recursive_macro!();\n-   |     ^^^^^^^^^^^^^^^^^^^^^^\n+   |     ^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: expanding `my_recursive_macro! {  }`\n    = note: to `my_recursive_macro! () ;`"}, {"sha": "da8a976daaf1a77f4037e1b8b35f981f51aabe2e", "filename": "src/test/ui/mismatched_types/issue-26480.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fmismatched_types%2Fissue-26480.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fmismatched_types%2Fissue-26480.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmismatched_types%2Fissue-26480.stderr?ref=90f4521cfdfc85fc04759cfba2f86a6acc096cb3", "patch": "@@ -5,7 +5,7 @@ LL |                   $arr.len() * size_of($arr[0]));\n    |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `u64`, found `usize`\n ...\n LL |     write!(hello);\n-   |     -------------- in this macro invocation\n+   |     ------------- in this macro invocation\n    |\n    = note: this error originates in the macro `write` (in Nightly builds, run with -Z macro-backtrace for more info)\n help: you can convert a `usize` to a `u64` and panic if the converted value doesn't fit\n@@ -20,7 +20,7 @@ LL |     ($x:expr) => ($x as ())\n    |                   ^^^^^^^^ an `as` expression can only be used to convert between primitive types or to coerce to a specific trait object\n ...\n LL |     cast!(2);\n-   |     --------- in this macro invocation\n+   |     -------- in this macro invocation\n    |\n    = note: this error originates in the macro `cast` (in Nightly builds, run with -Z macro-backtrace for more info)\n "}, {"sha": "5ab4542b0402bc7e4b460c31156084998183ac69", "filename": "src/test/ui/modules/issue-56411.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fmodules%2Fissue-56411.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fmodules%2Fissue-56411.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmodules%2Fissue-56411.stderr?ref=90f4521cfdfc85fc04759cfba2f86a6acc096cb3", "patch": "@@ -10,7 +10,7 @@ LL |             pub use self::$name;\n    |                     you can use `as` to change the binding name of the import\n ...\n LL | import!((\"issue-56411-aux.rs\", issue_56411_aux));\n-   | ------------------------------------------------- in this macro invocation\n+   | ------------------------------------------------ in this macro invocation\n    |\n    = note: `issue_56411_aux` must be defined only once in the type namespace of this module\n    = note: this error originates in the macro `import` (in Nightly builds, run with -Z macro-backtrace for more info)\n@@ -22,7 +22,7 @@ LL |             pub use self::$name;\n    |                     ^^^^^^^^^^^ re-export of private `issue_56411_aux`\n ...\n LL | import!((\"issue-56411-aux.rs\", issue_56411_aux));\n-   | ------------------------------------------------- in this macro invocation\n+   | ------------------------------------------------ in this macro invocation\n    |\n    = note: consider declaring type or module `issue_56411_aux` with `pub`\n    = note: this error originates in the macro `import` (in Nightly builds, run with -Z macro-backtrace for more info)"}, {"sha": "f9e6d89513630c6211ae3a3248e818718c7119ed", "filename": "src/test/ui/non-fmt-panic.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fnon-fmt-panic.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fnon-fmt-panic.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnon-fmt-panic.stderr?ref=90f4521cfdfc85fc04759cfba2f86a6acc096cb3", "patch": "@@ -199,7 +199,7 @@ warning: panic message contains braces\n   --> $DIR/non-fmt-panic.rs:31:5\n    |\n LL |     panic!(concat!(\"{\", \"{\"));\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: this message is not used as a format string, but will be in Rust 2021\n help: add a \"{}\" format string to use the message literally"}, {"sha": "77933b1bcec68529b74617099e04e89f35d16d95", "filename": "src/test/ui/parser/bad-interpolated-block.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fparser%2Fbad-interpolated-block.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fparser%2Fbad-interpolated-block.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fbad-interpolated-block.stderr?ref=90f4521cfdfc85fc04759cfba2f86a6acc096cb3", "patch": "@@ -7,7 +7,7 @@ LL |         'lab: $b;\n    |         the `block` fragment is within this context\n ...\n LL |     m!({});\n-   |     ------- in this macro invocation\n+   |     ------ in this macro invocation\n    |\n    = note: this error originates in the macro `m` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n@@ -20,7 +20,7 @@ LL |         unsafe $b;\n    |         the `block` fragment is within this context\n ...\n LL |     m!({});\n-   |     ------- in this macro invocation\n+   |     ------ in this macro invocation\n    |\n    = note: this error originates in the macro `m` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n@@ -31,7 +31,7 @@ LL |         |x: u8| -> () $b;\n    |                       ^^ the `block` fragment is within this context\n ...\n LL |     m!({});\n-   |     ------- in this macro invocation\n+   |     ------ in this macro invocation\n    |\n    = note: this error originates in the macro `m` (in Nightly builds, run with -Z macro-backtrace for more info)\n "}, {"sha": "664adb35818aa162343f6e21a7254b064e7242fa", "filename": "src/test/ui/parser/float-field-interpolated.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fparser%2Ffloat-field-interpolated.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fparser%2Ffloat-field-interpolated.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Ffloat-field-interpolated.stderr?ref=90f4521cfdfc85fc04759cfba2f86a6acc096cb3", "patch": "@@ -5,7 +5,7 @@ LL |         { s.$b; }\n    |             ^^\n ...\n LL |     generate_field_accesses!(1.1, 1.1, 1.1);\n-   |     ---------------------------------------- in this macro invocation\n+   |     --------------------------------------- in this macro invocation\n    |\n    = note: this error originates in the macro `generate_field_accesses` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n@@ -16,7 +16,7 @@ LL |         { s.$b; }\n    |             ^^ expected one of `.`, `;`, `?`, `}`, or an operator\n ...\n LL |     generate_field_accesses!(1.1, 1.1, 1.1);\n-   |     ---------------------------------------- in this macro invocation\n+   |     --------------------------------------- in this macro invocation\n    |\n    = note: this error originates in the macro `generate_field_accesses` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n@@ -27,7 +27,7 @@ LL |         { s.$c; }\n    |             ^^\n ...\n LL |     generate_field_accesses!(1.1, 1.1, 1.1);\n-   |     ---------------------------------------- in this macro invocation\n+   |     --------------------------------------- in this macro invocation\n    |\n    = note: this error originates in the macro `generate_field_accesses` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n@@ -38,7 +38,7 @@ LL |         { s.$c; }\n    |             ^^ expected one of `.`, `;`, `?`, `}`, or an operator\n ...\n LL |     generate_field_accesses!(1.1, 1.1, 1.1);\n-   |     ---------------------------------------- in this macro invocation\n+   |     --------------------------------------- in this macro invocation\n    |\n    = note: this error originates in the macro `generate_field_accesses` (in Nightly builds, run with -Z macro-backtrace for more info)\n "}, {"sha": "61419040b3381419c541dffc7ef7cd65714bb5bd", "filename": "src/test/ui/parser/issue-44406.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fparser%2Fissue-44406.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fparser%2Fissue-44406.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fissue-44406.stderr?ref=90f4521cfdfc85fc04759cfba2f86a6acc096cb3", "patch": "@@ -16,7 +16,7 @@ LL |         bar(baz: $rest)\n    |         ^^^^^^^^^^^^^^^\n ...\n LL |     foo!(true);\n-   |     ----------- in this macro invocation\n+   |     ---------- in this macro invocation\n    |\n    = note: this error originates in the macro `foo` (in Nightly builds, run with -Z macro-backtrace for more info)\n help: if `bar` is a struct, use braces as delimiters"}, {"sha": "fdef8ff6df9233ec65bcc383a874582e4eb02977", "filename": "src/test/ui/parser/issue-48137-macros-cannot-interpolate-impl-items-bad-variants.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fparser%2Fissue-48137-macros-cannot-interpolate-impl-items-bad-variants.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fparser%2Fissue-48137-macros-cannot-interpolate-impl-items-bad-variants.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fissue-48137-macros-cannot-interpolate-impl-items-bad-variants.stderr?ref=90f4521cfdfc85fc04759cfba2f86a6acc096cb3", "patch": "@@ -13,7 +13,7 @@ LL |         enum BadE {}\n    |         ^^^^^^^^^\n ...\n LL |     expand_to_enum!();\n-   |     ------------------ in this macro invocation\n+   |     ----------------- in this macro invocation\n    |\n    = help: consider moving the enum out to a nearby module scope\n    = note: this error originates in the macro `expand_to_enum` (in Nightly builds, run with -Z macro-backtrace for more info)\n@@ -33,7 +33,7 @@ LL |         enum BadE {}\n    |         ^^^^^^^^^\n ...\n LL |     expand_to_enum!();\n-   |     ------------------ in this macro invocation\n+   |     ----------------- in this macro invocation\n    |\n    = help: consider moving the enum out to a nearby module scope\n    = note: this error originates in the macro `expand_to_enum` (in Nightly builds, run with -Z macro-backtrace for more info)\n@@ -53,7 +53,7 @@ LL |         enum BadE {}\n    |         ^^^^^^^^^\n ...\n LL |     expand_to_enum!();\n-   |     ------------------ in this macro invocation\n+   |     ----------------- in this macro invocation\n    |\n    = help: consider moving the enum out to a nearby module scope\n    = note: this error originates in the macro `expand_to_enum` (in Nightly builds, run with -Z macro-backtrace for more info)"}, {"sha": "48c2b2a19d414fe6de0b6da13da228e5589c951b", "filename": "src/test/ui/parser/issue-73568-lifetime-after-mut.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fparser%2Fissue-73568-lifetime-after-mut.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fparser%2Fissue-73568-lifetime-after-mut.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fissue-73568-lifetime-after-mut.stderr?ref=90f4521cfdfc85fc04759cfba2f86a6acc096cb3", "patch": "@@ -17,7 +17,7 @@ LL |         fn w<$lt>(w: &mut $lt i32) {}\n    |                      ^^^^^^^^ help: place the lifetime before `mut`: `&$lt mut`\n ...\n LL | mac!('a);\n-   | --------- in this macro invocation\n+   | -------- in this macro invocation\n    |\n    = note: this error originates in the macro `mac` (in Nightly builds, run with -Z macro-backtrace for more info)\n "}, {"sha": "f8ee0517533c6859ad8a4a72575708faa8d138b3", "filename": "src/test/ui/parser/issue-87812-path.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fparser%2Fissue-87812-path.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fparser%2Fissue-87812-path.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fissue-87812-path.stderr?ref=90f4521cfdfc85fc04759cfba2f86a6acc096cb3", "patch": "@@ -7,7 +7,7 @@ LL |         let _: usize = $f;\n    |                expected due to this\n ...\n LL |     foo!(Baz);\n-   |     ---------- in this macro invocation\n+   |     --------- in this macro invocation\n    |\n    = note: this error originates in the macro `foo` (in Nightly builds, run with -Z macro-backtrace for more info)\n "}, {"sha": "26884dc5d745220e5255834a9ceea4c6917360e2", "filename": "src/test/ui/parser/labeled-no-colon-expr.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fparser%2Flabeled-no-colon-expr.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fparser%2Flabeled-no-colon-expr.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Flabeled-no-colon-expr.stderr?ref=90f4521cfdfc85fc04759cfba2f86a6acc096cb3", "patch": "@@ -68,7 +68,7 @@ LL |             'l5 $b;\n    |             the `block` fragment is within this context\n ...\n LL |     m!({});\n-   |     ------- in this macro invocation\n+   |     ------ in this macro invocation\n    |\n    = note: this error originates in the macro `m` (in Nightly builds, run with -Z macro-backtrace for more info)\n "}, {"sha": "0912858ddc4a69f6afcb2b27b3d5e51824beeceb", "filename": "src/test/ui/parser/macro/issue-37113.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fparser%2Fmacro%2Fissue-37113.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fparser%2Fmacro%2Fissue-37113.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fmacro%2Fissue-37113.stderr?ref=90f4521cfdfc85fc04759cfba2f86a6acc096cb3", "patch": "@@ -5,7 +5,7 @@ LL |             $( $t, )*\n    |                ^^ expected identifier\n ...\n LL |     test_macro!(String,);\n-   |     --------------------- in this macro invocation\n+   |     -------------------- in this macro invocation\n    |\n    = note: this error originates in the macro `test_macro` (in Nightly builds, run with -Z macro-backtrace for more info)\n "}, {"sha": "d7919620449f42aea1cd546adc2cbec809092e09", "filename": "src/test/ui/parser/macro/issue-37234.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fparser%2Fmacro%2Fissue-37234.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fparser%2Fmacro%2Fissue-37234.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fmacro%2Fissue-37234.stderr?ref=90f4521cfdfc85fc04759cfba2f86a6acc096cb3", "patch": "@@ -5,7 +5,7 @@ LL |         let x = 5 \"\";\n    |                   ^^ expected one of `.`, `;`, `?`, `else`, or an operator\n ...\n LL |     failed!();\n-   |     ---------- in this macro invocation\n+   |     --------- in this macro invocation\n    |\n    = note: this error originates in the macro `failed` (in Nightly builds, run with -Z macro-backtrace for more info)\n "}, {"sha": "707417b725e9fc2fc61d89968d49007006283bd0", "filename": "src/test/ui/parser/macro/macro-incomplete-parse.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fparser%2Fmacro%2Fmacro-incomplete-parse.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fparser%2Fmacro%2Fmacro-incomplete-parse.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fmacro%2Fmacro-incomplete-parse.stderr?ref=90f4521cfdfc85fc04759cfba2f86a6acc096cb3", "patch": "@@ -5,7 +5,7 @@ LL |         ,\n    |         ^\n ...\n LL | ignored_item!();\n-   | ---------------- caused by the macro expansion here\n+   | --------------- caused by the macro expansion here\n    |\n    = note: the usage of `ignored_item!` is likely invalid in item context\n \n@@ -16,7 +16,7 @@ LL |     () => ( 1,\n    |              ^ expected one of `.`, `;`, `?`, `}`, or an operator\n ...\n LL |     ignored_expr!();\n-   |     ---------------- in this macro invocation\n+   |     --------------- in this macro invocation\n    |\n    = note: this error originates in the macro `ignored_expr` (in Nightly builds, run with -Z macro-backtrace for more info)\n "}, {"sha": "4f82acf38e1090018a5f1219f408667ec8c0a9cf", "filename": "src/test/ui/parser/macro/pub-item-macro.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fparser%2Fmacro%2Fpub-item-macro.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fparser%2Fmacro%2Fpub-item-macro.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fmacro%2Fpub-item-macro.stderr?ref=90f4521cfdfc85fc04759cfba2f86a6acc096cb3", "patch": "@@ -5,7 +5,7 @@ LL |     pub priv_x!();\n    |     ^^^ help: remove the visibility\n ...\n LL |     pub_x!();\n-   |     --------- in this macro invocation\n+   |     -------- in this macro invocation\n    |\n    = help: try adjusting the macro to put `pub` inside the invocation\n    = note: this error originates in the macro `pub_x` (in Nightly builds, run with -Z macro-backtrace for more info)\n@@ -23,7 +23,7 @@ LL |         static x: u32 = 0;\n    |         ^^^^^^^^^^^^^^^^^^\n ...\n LL |     pub_x!();\n-   |     --------- in this macro invocation\n+   |     -------- in this macro invocation\n    = note: this error originates in the macro `priv_x` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n error: aborting due to 2 previous errors"}, {"sha": "db20e6b24aa036e3021b77eb20a168aa30e5e374", "filename": "src/test/ui/parser/macro/trait-non-item-macros.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fparser%2Fmacro%2Ftrait-non-item-macros.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fparser%2Fmacro%2Ftrait-non-item-macros.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fmacro%2Ftrait-non-item-macros.stderr?ref=90f4521cfdfc85fc04759cfba2f86a6acc096cb3", "patch": "@@ -5,7 +5,7 @@ LL |         $a\n    |         ^^\n ...\n LL |     bah!(2);\n-   |     -------- caused by the macro expansion here\n+   |     ------- caused by the macro expansion here\n    |\n    = note: the usage of `bah!` is likely invalid in trait item context\n "}, {"sha": "e0d5e84ec3177bf8e1467de5a65ac94e515c1f01", "filename": "src/test/ui/parser/missing-semicolon.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fparser%2Fmissing-semicolon.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fparser%2Fmissing-semicolon.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fmissing-semicolon.stderr?ref=90f4521cfdfc85fc04759cfba2f86a6acc096cb3", "patch": "@@ -5,7 +5,7 @@ LL |         $( let x = $e1 )*;\n    |            ^^^ expected one of `.`, `;`, `?`, `else`, or an operator\n ...\n LL | fn main() { m!(0, 0; 0, 0); }\n-   |             --------------- in this macro invocation\n+   |             -------------- in this macro invocation\n    |\n    = note: this error originates in the macro `m` (in Nightly builds, run with -Z macro-backtrace for more info)\n "}, {"sha": "59dba4ae216469326a7a0c66079ef88b52300a04", "filename": "src/test/ui/parser/mut-patterns.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fparser%2Fmut-patterns.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fparser%2Fmut-patterns.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fmut-patterns.stderr?ref=90f4521cfdfc85fc04759cfba2f86a6acc096cb3", "patch": "@@ -106,7 +106,7 @@ LL |             let mut $p = 0;\n    |                     ^^ expected identifier\n ...\n LL |     foo!(x);\n-   |     -------- in this macro invocation\n+   |     ------- in this macro invocation\n    |\n    = note: this error originates in the macro `foo` (in Nightly builds, run with -Z macro-backtrace for more info)\n "}, {"sha": "9296ad2e335f1727532e0bbea9ac857fb0866611", "filename": "src/test/ui/parser/recover-range-pats.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fparser%2Frecover-range-pats.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fparser%2Frecover-range-pats.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Frecover-range-pats.stderr?ref=90f4521cfdfc85fc04759cfba2f86a6acc096cb3", "patch": "@@ -165,7 +165,7 @@ LL |             let ...$e;\n    |                 ^^^ help: use `..=` instead\n ...\n LL |     mac!(0);\n-   |     -------- in this macro invocation\n+   |     ------- in this macro invocation\n    |\n    = note: this error originates in the macro `mac` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n@@ -176,7 +176,7 @@ LL |             let $e...;\n    |                   ^^^ help: use `..` instead\n ...\n LL |     mac!(0);\n-   |     -------- in this macro invocation\n+   |     ------- in this macro invocation\n    |\n    = note: inclusive ranges must be bounded at the end (`..=b` or `a..=b`)\n    = note: this error originates in the macro `mac` (in Nightly builds, run with -Z macro-backtrace for more info)\n@@ -188,7 +188,7 @@ LL |             let $e..=;\n    |                   ^^^ help: use `..` instead\n ...\n LL |     mac!(0);\n-   |     -------- in this macro invocation\n+   |     ------- in this macro invocation\n    |\n    = note: inclusive ranges must be bounded at the end (`..=b` or `a..=b`)\n    = note: this error originates in the macro `mac` (in Nightly builds, run with -Z macro-backtrace for more info)\n@@ -277,7 +277,7 @@ LL |             let $e1...$e2;\n    |                    ^^^ help: use `..=` for an inclusive range\n ...\n LL |     mac2!(0, 1);\n-   |     ------------ in this macro invocation\n+   |     ----------- in this macro invocation\n    |\n    = warning: this is accepted in the current edition (Rust 2015) but is a hard error in Rust 2021!\n    = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/warnings-promoted-to-error.html>"}, {"sha": "4478e5c2aba57406ffd8bf0b9106b64b064691b8", "filename": "src/test/ui/privacy/associated-item-privacy-inherent.stderr", "status": "modified", "additions": 21, "deletions": 21, "changes": 42, "blob_url": "https://github.com/rust-lang/rust/blob/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fprivacy%2Fassociated-item-privacy-inherent.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fprivacy%2Fassociated-item-privacy-inherent.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fprivacy%2Fassociated-item-privacy-inherent.stderr?ref=90f4521cfdfc85fc04759cfba2f86a6acc096cb3", "patch": "@@ -5,7 +5,7 @@ LL |         let value = Pub::method;\n    |                     ^^^^^^^^^^^ private type\n ...\n LL |     priv_nominal::mac!();\n-   |     --------------------- in this macro invocation\n+   |     -------------------- in this macro invocation\n    |\n    = note: this error originates in the macro `priv_nominal::mac` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n@@ -16,7 +16,7 @@ LL |         value;\n    |         ^^^^^ private type\n ...\n LL |     priv_nominal::mac!();\n-   |     --------------------- in this macro invocation\n+   |     -------------------- in this macro invocation\n    |\n    = note: this error originates in the macro `priv_nominal::mac` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n@@ -27,7 +27,7 @@ LL |         Pub.method();\n    |             ^^^^^^ private type\n ...\n LL |     priv_nominal::mac!();\n-   |     --------------------- in this macro invocation\n+   |     -------------------- in this macro invocation\n    |\n    = note: this error originates in the macro `priv_nominal::mac` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n@@ -38,7 +38,7 @@ LL |         Pub::CONST;\n    |         ^^^^^^^^^^ private associated constant\n ...\n LL |     priv_nominal::mac!();\n-   |     --------------------- in this macro invocation\n+   |     -------------------- in this macro invocation\n    |\n    = note: this error originates in the macro `priv_nominal::mac` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n@@ -49,7 +49,7 @@ LL |         let value = Pub::method;\n    |                     ^^^^^^^^^^^ private type\n ...\n LL |     priv_signature::mac!();\n-   |     ----------------------- in this macro invocation\n+   |     ---------------------- in this macro invocation\n    |\n    = note: this error originates in the macro `priv_signature::mac` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n@@ -60,7 +60,7 @@ LL |         value;\n    |         ^^^^^ private type\n ...\n LL |     priv_signature::mac!();\n-   |     ----------------------- in this macro invocation\n+   |     ---------------------- in this macro invocation\n    |\n    = note: this error originates in the macro `priv_signature::mac` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n@@ -71,7 +71,7 @@ LL |         Pub.method(loop {});\n    |             ^^^^^^ private type\n ...\n LL |     priv_signature::mac!();\n-   |     ----------------------- in this macro invocation\n+   |     ---------------------- in this macro invocation\n    |\n    = note: this error originates in the macro `priv_signature::mac` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n@@ -82,7 +82,7 @@ LL |         let value = Pub::method::<Priv>;\n    |                     ^^^^^^^^^^^^^^^^^^^ private type\n ...\n LL |     priv_substs::mac!();\n-   |     -------------------- in this macro invocation\n+   |     ------------------- in this macro invocation\n    |\n    = note: this error originates in the macro `priv_substs::mac` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n@@ -93,7 +93,7 @@ LL |         value;\n    |         ^^^^^ private type\n ...\n LL |     priv_substs::mac!();\n-   |     -------------------- in this macro invocation\n+   |     ------------------- in this macro invocation\n    |\n    = note: this error originates in the macro `priv_substs::mac` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n@@ -104,7 +104,7 @@ LL |         Pub.method::<Priv>();\n    |         ^^^^^^^^^^^^^^^^^^^^ private type\n ...\n LL |     priv_substs::mac!();\n-   |     -------------------- in this macro invocation\n+   |     ------------------- in this macro invocation\n    |\n    = note: this error originates in the macro `priv_substs::mac` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n@@ -115,7 +115,7 @@ LL |         let value = <Pub>::method;\n    |                     ^^^^^^^^^^^^^ private type\n ...\n LL |     priv_parent_substs::mac!();\n-   |     --------------------------- in this macro invocation\n+   |     -------------------------- in this macro invocation\n    |\n    = note: this error originates in the macro `priv_parent_substs::mac` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n@@ -126,7 +126,7 @@ LL |         value;\n    |         ^^^^^ private type\n ...\n LL |     priv_parent_substs::mac!();\n-   |     --------------------------- in this macro invocation\n+   |     -------------------------- in this macro invocation\n    |\n    = note: this error originates in the macro `priv_parent_substs::mac` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n@@ -137,7 +137,7 @@ LL |         let value = Pub::method;\n    |                     ^^^^^^^^^^^ private type\n ...\n LL |     priv_parent_substs::mac!();\n-   |     --------------------------- in this macro invocation\n+   |     -------------------------- in this macro invocation\n    |\n    = note: this error originates in the macro `priv_parent_substs::mac` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n@@ -148,7 +148,7 @@ LL |         value;\n    |         ^^^^^ private type\n ...\n LL |     priv_parent_substs::mac!();\n-   |     --------------------------- in this macro invocation\n+   |     -------------------------- in this macro invocation\n    |\n    = note: this error originates in the macro `priv_parent_substs::mac` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n@@ -159,7 +159,7 @@ LL |         let value = <Pub>::static_method;\n    |                     ^^^^^^^^^^^^^^^^^^^^ private type\n ...\n LL |     priv_parent_substs::mac!();\n-   |     --------------------------- in this macro invocation\n+   |     -------------------------- in this macro invocation\n    |\n    = note: this error originates in the macro `priv_parent_substs::mac` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n@@ -170,7 +170,7 @@ LL |         value;\n    |         ^^^^^ private type\n ...\n LL |     priv_parent_substs::mac!();\n-   |     --------------------------- in this macro invocation\n+   |     -------------------------- in this macro invocation\n    |\n    = note: this error originates in the macro `priv_parent_substs::mac` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n@@ -181,7 +181,7 @@ LL |         let value = Pub::static_method;\n    |                     ^^^^^^^^^^^^^^^^^^ private type\n ...\n LL |     priv_parent_substs::mac!();\n-   |     --------------------------- in this macro invocation\n+   |     -------------------------- in this macro invocation\n    |\n    = note: this error originates in the macro `priv_parent_substs::mac` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n@@ -192,7 +192,7 @@ LL |         value;\n    |         ^^^^^ private type\n ...\n LL |     priv_parent_substs::mac!();\n-   |     --------------------------- in this macro invocation\n+   |     -------------------------- in this macro invocation\n    |\n    = note: this error originates in the macro `priv_parent_substs::mac` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n@@ -203,7 +203,7 @@ LL |         Pub(Priv).method();\n    |                   ^^^^^^ private type\n ...\n LL |     priv_parent_substs::mac!();\n-   |     --------------------------- in this macro invocation\n+   |     -------------------------- in this macro invocation\n    |\n    = note: this error originates in the macro `priv_parent_substs::mac` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n@@ -214,7 +214,7 @@ LL |         <Pub>::CONST;\n    |          ^^^ private type\n ...\n LL |     priv_parent_substs::mac!();\n-   |     --------------------------- in this macro invocation\n+   |     -------------------------- in this macro invocation\n    |\n    = note: this error originates in the macro `priv_parent_substs::mac` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n@@ -225,7 +225,7 @@ LL |         Pub::CONST;\n    |         ^^^ private type\n ...\n LL |     priv_parent_substs::mac!();\n-   |     --------------------------- in this macro invocation\n+   |     -------------------------- in this macro invocation\n    |\n    = note: this error originates in the macro `priv_parent_substs::mac` (in Nightly builds, run with -Z macro-backtrace for more info)\n "}, {"sha": "6095f5f42b86d0a239598e4d6dc737ebc57c6ba6", "filename": "src/test/ui/privacy/associated-item-privacy-trait.stderr", "status": "modified", "additions": 30, "deletions": 30, "changes": 60, "blob_url": "https://github.com/rust-lang/rust/blob/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fprivacy%2Fassociated-item-privacy-trait.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fprivacy%2Fassociated-item-privacy-trait.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fprivacy%2Fassociated-item-privacy-trait.stderr?ref=90f4521cfdfc85fc04759cfba2f86a6acc096cb3", "patch": "@@ -5,7 +5,7 @@ LL |         let value = <Pub as PrivTr>::method;\n    |                     ^^^^^^^^^^^^^^^^^^^^^^^ private type\n ...\n LL |     priv_trait::mac!();\n-   |     ------------------- in this macro invocation\n+   |     ------------------ in this macro invocation\n    |\n    = note: this error originates in the macro `priv_trait::mac` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n@@ -16,7 +16,7 @@ LL |         value;\n    |         ^^^^^ private type\n ...\n LL |     priv_trait::mac!();\n-   |     ------------------- in this macro invocation\n+   |     ------------------ in this macro invocation\n    |\n    = note: this error originates in the macro `priv_trait::mac` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n@@ -27,7 +27,7 @@ LL |         Pub.method();\n    |             ^^^^^^ private type\n ...\n LL |     priv_trait::mac!();\n-   |     ------------------- in this macro invocation\n+   |     ------------------ in this macro invocation\n    |\n    = note: this error originates in the macro `priv_trait::mac` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n@@ -38,7 +38,7 @@ LL |         <Pub as PrivTr>::CONST;\n    |         ^^^^^^^^^^^^^^^^^^^^^^ private associated constant\n ...\n LL |     priv_trait::mac!();\n-   |     ------------------- in this macro invocation\n+   |     ------------------ in this macro invocation\n    |\n    = note: this error originates in the macro `priv_trait::mac` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n@@ -49,7 +49,7 @@ LL |         let _: <Pub as PrivTr>::AssocTy;\n    |                ^^^^^^^^^^^^^^^^^^^^^^^^ private associated type\n ...\n LL |     priv_trait::mac!();\n-   |     ------------------- in this macro invocation\n+   |     ------------------ in this macro invocation\n    |\n    = note: this error originates in the macro `priv_trait::mac` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n@@ -60,7 +60,7 @@ LL |         pub type InSignatureTy = <Pub as PrivTr>::AssocTy;\n    |                                  ^^^^^^^^^^^^^^^^^^^^^^^^ private trait\n ...\n LL |     priv_trait::mac!();\n-   |     ------------------- in this macro invocation\n+   |     ------------------ in this macro invocation\n    |\n    = note: this error originates in the macro `priv_trait::mac` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n@@ -71,7 +71,7 @@ LL |         pub trait InSignatureTr: PrivTr {}\n    |                                  ^^^^^^ private trait\n ...\n LL |     priv_trait::mac!();\n-   |     ------------------- in this macro invocation\n+   |     ------------------ in this macro invocation\n    |\n    = note: this error originates in the macro `priv_trait::mac` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n@@ -82,7 +82,7 @@ LL |         impl PrivTr for u8 {}\n    |              ^^^^^^ private trait\n ...\n LL |     priv_trait::mac!();\n-   |     ------------------- in this macro invocation\n+   |     ------------------ in this macro invocation\n    |\n    = note: this error originates in the macro `priv_trait::mac` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n@@ -93,7 +93,7 @@ LL |         let value = <Pub as PubTr>::method;\n    |                     ^^^^^^^^^^^^^^^^^^^^^^ private type\n ...\n LL |     priv_signature::mac!();\n-   |     ----------------------- in this macro invocation\n+   |     ---------------------- in this macro invocation\n    |\n    = note: this error originates in the macro `priv_signature::mac` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n@@ -104,7 +104,7 @@ LL |         value;\n    |         ^^^^^ private type\n ...\n LL |     priv_signature::mac!();\n-   |     ----------------------- in this macro invocation\n+   |     ---------------------- in this macro invocation\n    |\n    = note: this error originates in the macro `priv_signature::mac` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n@@ -115,7 +115,7 @@ LL |         Pub.method(loop {});\n    |             ^^^^^^ private type\n ...\n LL |     priv_signature::mac!();\n-   |     ----------------------- in this macro invocation\n+   |     ---------------------- in this macro invocation\n    |\n    = note: this error originates in the macro `priv_signature::mac` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n@@ -126,7 +126,7 @@ LL |         let value = <Pub as PubTr>::method::<Priv>;\n    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ private type\n ...\n LL |     priv_substs::mac!();\n-   |     -------------------- in this macro invocation\n+   |     ------------------- in this macro invocation\n    |\n    = note: this error originates in the macro `priv_substs::mac` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n@@ -137,7 +137,7 @@ LL |         value;\n    |         ^^^^^ private type\n ...\n LL |     priv_substs::mac!();\n-   |     -------------------- in this macro invocation\n+   |     ------------------- in this macro invocation\n    |\n    = note: this error originates in the macro `priv_substs::mac` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n@@ -148,7 +148,7 @@ LL |         Pub.method::<Priv>();\n    |         ^^^^^^^^^^^^^^^^^^^^ private type\n ...\n LL |     priv_substs::mac!();\n-   |     -------------------- in this macro invocation\n+   |     ------------------- in this macro invocation\n    |\n    = note: this error originates in the macro `priv_substs::mac` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n@@ -159,7 +159,7 @@ LL |         let value = <Pub as PubTr>::method;\n    |                     ^^^^^^^^^^^^^^^^^^^^^^ private type\n ...\n LL |     priv_parent_substs::mac!();\n-   |     --------------------------- in this macro invocation\n+   |     -------------------------- in this macro invocation\n    |\n    = note: this error originates in the macro `priv_parent_substs::mac` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n@@ -170,7 +170,7 @@ LL |         value;\n    |         ^^^^^ private type\n ...\n LL |     priv_parent_substs::mac!();\n-   |     --------------------------- in this macro invocation\n+   |     -------------------------- in this macro invocation\n    |\n    = note: this error originates in the macro `priv_parent_substs::mac` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n@@ -181,7 +181,7 @@ LL |         let value = <Pub as PubTr<_>>::method;\n    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^ private type\n ...\n LL |     priv_parent_substs::mac!();\n-   |     --------------------------- in this macro invocation\n+   |     -------------------------- in this macro invocation\n    |\n    = note: this error originates in the macro `priv_parent_substs::mac` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n@@ -192,7 +192,7 @@ LL |         value;\n    |         ^^^^^ private type\n ...\n LL |     priv_parent_substs::mac!();\n-   |     --------------------------- in this macro invocation\n+   |     -------------------------- in this macro invocation\n    |\n    = note: this error originates in the macro `priv_parent_substs::mac` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n@@ -203,7 +203,7 @@ LL |         Pub.method();\n    |         ^^^^^^^^^^^^ private type\n ...\n LL |     priv_parent_substs::mac!();\n-   |     --------------------------- in this macro invocation\n+   |     -------------------------- in this macro invocation\n    |\n    = note: this error originates in the macro `priv_parent_substs::mac` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n@@ -214,7 +214,7 @@ LL |         let value = <Priv as PubTr<_>>::method;\n    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^ private type\n ...\n LL |     priv_parent_substs::mac!();\n-   |     --------------------------- in this macro invocation\n+   |     -------------------------- in this macro invocation\n    |\n    = note: this error originates in the macro `priv_parent_substs::mac` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n@@ -225,7 +225,7 @@ LL |         value;\n    |         ^^^^^ private type\n ...\n LL |     priv_parent_substs::mac!();\n-   |     --------------------------- in this macro invocation\n+   |     -------------------------- in this macro invocation\n    |\n    = note: this error originates in the macro `priv_parent_substs::mac` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n@@ -236,7 +236,7 @@ LL |         Priv.method();\n    |         ^^^^^^^^^^^^^ private type\n ...\n LL |     priv_parent_substs::mac!();\n-   |     --------------------------- in this macro invocation\n+   |     -------------------------- in this macro invocation\n    |\n    = note: this error originates in the macro `priv_parent_substs::mac` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n@@ -247,7 +247,7 @@ LL |         <Pub as PubTr>::CONST;\n    |         ^^^^^^^^^^^^^^^^^^^^^ private type\n ...\n LL |     priv_parent_substs::mac!();\n-   |     --------------------------- in this macro invocation\n+   |     -------------------------- in this macro invocation\n    |\n    = note: this error originates in the macro `priv_parent_substs::mac` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n@@ -258,7 +258,7 @@ LL |         <Pub as PubTr<_>>::CONST;\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^ private type\n ...\n LL |     priv_parent_substs::mac!();\n-   |     --------------------------- in this macro invocation\n+   |     -------------------------- in this macro invocation\n    |\n    = note: this error originates in the macro `priv_parent_substs::mac` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n@@ -269,7 +269,7 @@ LL |         <Priv as PubTr<_>>::CONST;\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^ private type\n ...\n LL |     priv_parent_substs::mac!();\n-   |     --------------------------- in this macro invocation\n+   |     -------------------------- in this macro invocation\n    |\n    = note: this error originates in the macro `priv_parent_substs::mac` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n@@ -280,7 +280,7 @@ LL |         let _: <Pub as PubTr<_>>::AssocTy;\n    |                              ^ private type\n ...\n LL |     priv_parent_substs::mac!();\n-   |     --------------------------- in this macro invocation\n+   |     -------------------------- in this macro invocation\n    |\n    = note: this error originates in the macro `priv_parent_substs::mac` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n@@ -291,7 +291,7 @@ LL |         let _: <Priv as PubTr<_>>::AssocTy;\n    |                 ^^^^ private type\n ...\n LL |     priv_parent_substs::mac!();\n-   |     --------------------------- in this macro invocation\n+   |     -------------------------- in this macro invocation\n    |\n    = note: this error originates in the macro `priv_parent_substs::mac` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n@@ -302,7 +302,7 @@ LL |         pub type InSignatureTy1 = <Pub as PubTr>::AssocTy;\n    |                                   ^^^^^^^^^^^^^^^^^^^^^^^ private type\n ...\n LL |     priv_parent_substs::mac!();\n-   |     --------------------------- in this macro invocation\n+   |     -------------------------- in this macro invocation\n    |\n    = note: this error originates in the macro `priv_parent_substs::mac` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n@@ -313,7 +313,7 @@ LL |         pub type InSignatureTy2 = <Priv as PubTr<Pub>>::AssocTy;\n    |                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ private type\n ...\n LL |     priv_parent_substs::mac!();\n-   |     --------------------------- in this macro invocation\n+   |     -------------------------- in this macro invocation\n    |\n    = note: this error originates in the macro `priv_parent_substs::mac` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n@@ -324,7 +324,7 @@ LL |         impl PubTr for u8 {}\n    |              ^^^^^ private type\n ...\n LL |     priv_parent_substs::mac!();\n-   |     --------------------------- in this macro invocation\n+   |     -------------------------- in this macro invocation\n    |\n    = note: this error originates in the macro `priv_parent_substs::mac` (in Nightly builds, run with -Z macro-backtrace for more info)\n "}, {"sha": "de9893816fade4c4c3ea50cb85f26cb2cbffdeb6", "filename": "src/test/ui/privacy/associated-item-privacy-type-binding.stderr", "status": "modified", "additions": 16, "deletions": 16, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fprivacy%2Fassociated-item-privacy-type-binding.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fprivacy%2Fassociated-item-privacy-type-binding.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fprivacy%2Fassociated-item-privacy-type-binding.stderr?ref=90f4521cfdfc85fc04759cfba2f86a6acc096cb3", "patch": "@@ -5,7 +5,7 @@ LL |         let _: Box<dyn PubTr<AssocTy = u8>>;\n    |             ^ private trait\n ...\n LL |     priv_trait::mac1!();\n-   |     -------------------- in this macro invocation\n+   |     ------------------- in this macro invocation\n    |\n    = note: this error originates in the macro `priv_trait::mac1` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n@@ -16,7 +16,7 @@ LL |         let _: Box<dyn PubTr<AssocTy = u8>>;\n    |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ private trait\n ...\n LL |     priv_trait::mac1!();\n-   |     -------------------- in this macro invocation\n+   |     ------------------- in this macro invocation\n    |\n    = note: this error originates in the macro `priv_trait::mac1` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n@@ -27,7 +27,7 @@ LL |         type InSignatureTy2 = Box<dyn PubTr<AssocTy = u8>>;\n    |                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ private trait\n ...\n LL |     priv_trait::mac1!();\n-   |     -------------------- in this macro invocation\n+   |     ------------------- in this macro invocation\n    |\n    = note: this error originates in the macro `priv_trait::mac1` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n@@ -38,7 +38,7 @@ LL |         trait InSignatureTr2: PubTr<AssocTy = u8> {}\n    |                               ^^^^^^^^^^^^^^^^^^^ private trait\n ...\n LL |     priv_trait::mac1!();\n-   |     -------------------- in this macro invocation\n+   |     ------------------- in this macro invocation\n    |\n    = note: this error originates in the macro `priv_trait::mac1` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n@@ -49,7 +49,7 @@ LL |         let _: Box<dyn PrivTr<AssocTy = u8>>;\n    |             ^ private trait\n ...\n LL |     priv_trait::mac2!();\n-   |     -------------------- in this macro invocation\n+   |     ------------------- in this macro invocation\n    |\n    = note: this error originates in the macro `priv_trait::mac2` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n@@ -60,7 +60,7 @@ LL |         let _: Box<dyn PrivTr<AssocTy = u8>>;\n    |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ private trait\n ...\n LL |     priv_trait::mac2!();\n-   |     -------------------- in this macro invocation\n+   |     ------------------- in this macro invocation\n    |\n    = note: this error originates in the macro `priv_trait::mac2` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n@@ -71,7 +71,7 @@ LL |         type InSignatureTy1 = Box<dyn PrivTr<AssocTy = u8>>;\n    |                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ private trait\n ...\n LL |     priv_trait::mac2!();\n-   |     -------------------- in this macro invocation\n+   |     ------------------- in this macro invocation\n    |\n    = note: this error originates in the macro `priv_trait::mac2` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n@@ -82,7 +82,7 @@ LL |         trait InSignatureTr1: PrivTr<AssocTy = u8> {}\n    |                               ^^^^^^^^^^^^^^^^^^^^ private trait\n ...\n LL |     priv_trait::mac2!();\n-   |     -------------------- in this macro invocation\n+   |     ------------------- in this macro invocation\n    |\n    = note: this error originates in the macro `priv_trait::mac2` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n@@ -93,7 +93,7 @@ LL |         let _: Box<dyn PubTrWithParam<AssocTy = u8>>;\n    |             ^ private type\n ...\n LL |     priv_parent_substs::mac!();\n-   |     --------------------------- in this macro invocation\n+   |     -------------------------- in this macro invocation\n    |\n    = note: this error originates in the macro `priv_parent_substs::mac` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n@@ -104,7 +104,7 @@ LL |         let _: Box<dyn PubTrWithParam<AssocTy = u8>>;\n    |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ private type\n ...\n LL |     priv_parent_substs::mac!();\n-   |     --------------------------- in this macro invocation\n+   |     -------------------------- in this macro invocation\n    |\n    = note: this error originates in the macro `priv_parent_substs::mac` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n@@ -115,7 +115,7 @@ LL |         let _: Box<dyn PubTr<AssocTy = u8>>;\n    |             ^ private type\n ...\n LL |     priv_parent_substs::mac!();\n-   |     --------------------------- in this macro invocation\n+   |     -------------------------- in this macro invocation\n    |\n    = note: this error originates in the macro `priv_parent_substs::mac` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n@@ -126,7 +126,7 @@ LL |         let _: Box<dyn PubTr<AssocTy = u8>>;\n    |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ private type\n ...\n LL |     priv_parent_substs::mac!();\n-   |     --------------------------- in this macro invocation\n+   |     -------------------------- in this macro invocation\n    |\n    = note: this error originates in the macro `priv_parent_substs::mac` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n@@ -137,7 +137,7 @@ LL |         pub type InSignatureTy1 = Box<dyn PubTrWithParam<AssocTy = u8>>;\n    |                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ private type\n ...\n LL |     priv_parent_substs::mac!();\n-   |     --------------------------- in this macro invocation\n+   |     -------------------------- in this macro invocation\n    |\n    = note: this error originates in the macro `priv_parent_substs::mac` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n@@ -148,7 +148,7 @@ LL |         pub type InSignatureTy2 = Box<dyn PubTr<AssocTy = u8>>;\n    |                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ private type\n ...\n LL |     priv_parent_substs::mac!();\n-   |     --------------------------- in this macro invocation\n+   |     -------------------------- in this macro invocation\n    |\n    = note: this error originates in the macro `priv_parent_substs::mac` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n@@ -159,7 +159,7 @@ LL |         trait InSignatureTr1: PubTrWithParam<AssocTy = u8> {}\n    |                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ private type\n ...\n LL |     priv_parent_substs::mac!();\n-   |     --------------------------- in this macro invocation\n+   |     -------------------------- in this macro invocation\n    |\n    = note: this error originates in the macro `priv_parent_substs::mac` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n@@ -170,7 +170,7 @@ LL |         trait InSignatureTr2: PubTr<AssocTy = u8> {}\n    |                               ^^^^^^^^^^^^^^^^^^^ private type\n ...\n LL |     priv_parent_substs::mac!();\n-   |     --------------------------- in this macro invocation\n+   |     -------------------------- in this macro invocation\n    |\n    = note: this error originates in the macro `priv_parent_substs::mac` (in Nightly builds, run with -Z macro-backtrace for more info)\n "}, {"sha": "f9dd1c3d03509a719d70800a7b08625105b8b209", "filename": "src/test/ui/privacy/private-inferred-type-3.stderr", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fprivacy%2Fprivate-inferred-type-3.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fprivacy%2Fprivate-inferred-type-3.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fprivacy%2Fprivate-inferred-type-3.stderr?ref=90f4521cfdfc85fc04759cfba2f86a6acc096cb3", "patch": "@@ -2,55 +2,55 @@ error: type `fn() {ext::priv_fn}` is private\n   --> $DIR/private-inferred-type-3.rs:16:5\n    |\n LL |     ext::m!();\n-   |     ^^^^^^^^^^ private type\n+   |     ^^^^^^^^^ private type\n    |\n    = note: this error originates in the macro `ext::m` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n error: static `PRIV_STATIC` is private\n   --> $DIR/private-inferred-type-3.rs:16:5\n    |\n LL |     ext::m!();\n-   |     ^^^^^^^^^^ private static\n+   |     ^^^^^^^^^ private static\n    |\n    = note: this error originates in the macro `ext::m` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n error: type `ext::PrivEnum` is private\n   --> $DIR/private-inferred-type-3.rs:16:5\n    |\n LL |     ext::m!();\n-   |     ^^^^^^^^^^ private type\n+   |     ^^^^^^^^^ private type\n    |\n    = note: this error originates in the macro `ext::m` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n error: type `fn() {<u8 as ext::PrivTrait>::method}` is private\n   --> $DIR/private-inferred-type-3.rs:16:5\n    |\n LL |     ext::m!();\n-   |     ^^^^^^^^^^ private type\n+   |     ^^^^^^^^^ private type\n    |\n    = note: this error originates in the macro `ext::m` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n error: type `fn(u8) -> ext::PrivTupleStruct {ext::PrivTupleStruct}` is private\n   --> $DIR/private-inferred-type-3.rs:16:5\n    |\n LL |     ext::m!();\n-   |     ^^^^^^^^^^ private type\n+   |     ^^^^^^^^^ private type\n    |\n    = note: this error originates in the macro `ext::m` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n error: type `fn(u8) -> PubTupleStruct {PubTupleStruct}` is private\n   --> $DIR/private-inferred-type-3.rs:16:5\n    |\n LL |     ext::m!();\n-   |     ^^^^^^^^^^ private type\n+   |     ^^^^^^^^^ private type\n    |\n    = note: this error originates in the macro `ext::m` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n error: type `for<'r> fn(&'r Pub<u8>) {Pub::<u8>::priv_method}` is private\n   --> $DIR/private-inferred-type-3.rs:16:5\n    |\n LL |     ext::m!();\n-   |     ^^^^^^^^^^ private type\n+   |     ^^^^^^^^^ private type\n    |\n    = note: this error originates in the macro `ext::m` (in Nightly builds, run with -Z macro-backtrace for more info)\n "}, {"sha": "e7e968839b6faacee986c09cd15f508c94a01dbd", "filename": "src/test/ui/privacy/private-inferred-type.stderr", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fprivacy%2Fprivate-inferred-type.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fprivacy%2Fprivate-inferred-type.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fprivacy%2Fprivate-inferred-type.stderr?ref=90f4521cfdfc85fc04759cfba2f86a6acc096cb3", "patch": "@@ -113,7 +113,7 @@ LL |         priv_fn;\n    |         ^^^^^^^ private type\n ...\n LL |     m::m!();\n-   |     -------- in this macro invocation\n+   |     ------- in this macro invocation\n    |\n    = note: this error originates in the macro `m::m` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n@@ -124,7 +124,7 @@ LL |         PrivEnum::Variant;\n    |         ^^^^^^^^^^^^^^^^^ private type\n ...\n LL |     m::m!();\n-   |     -------- in this macro invocation\n+   |     ------- in this macro invocation\n    |\n    = note: this error originates in the macro `m::m` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n@@ -135,7 +135,7 @@ LL |         <u8 as PrivTrait>::method;\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^ private type\n ...\n LL |     m::m!();\n-   |     -------- in this macro invocation\n+   |     ------- in this macro invocation\n    |\n    = note: this error originates in the macro `m::m` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n@@ -146,7 +146,7 @@ LL |         PrivTupleStruct;\n    |         ^^^^^^^^^^^^^^^ private type\n ...\n LL |     m::m!();\n-   |     -------- in this macro invocation\n+   |     ------- in this macro invocation\n    |\n    = note: this error originates in the macro `m::m` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n@@ -157,7 +157,7 @@ LL |         PubTupleStruct;\n    |         ^^^^^^^^^^^^^^ private type\n ...\n LL |     m::m!();\n-   |     -------- in this macro invocation\n+   |     ------- in this macro invocation\n    |\n    = note: this error originates in the macro `m::m` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n@@ -168,7 +168,7 @@ LL |         Pub(0u8).priv_method();\n    |                  ^^^^^^^^^^^ private type\n ...\n LL |     m::m!();\n-   |     -------- in this macro invocation\n+   |     ------- in this macro invocation\n    |\n    = note: this error originates in the macro `m::m` (in Nightly builds, run with -Z macro-backtrace for more info)\n "}, {"sha": "df462903fc077609c8889277b92ce90be7e6aa46", "filename": "src/test/ui/proc-macro/derive-helper-shadowing.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fproc-macro%2Fderive-helper-shadowing.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fproc-macro%2Fderive-helper-shadowing.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fderive-helper-shadowing.stderr?ref=90f4521cfdfc85fc04759cfba2f86a6acc096cb3", "patch": "@@ -27,7 +27,7 @@ LL |         #[empty_helper]\n    |           ^^^^^^^^^^^^\n ...\n LL |             gen_helper_use!();\n-   |             ------------------ in this macro invocation\n+   |             ----------------- in this macro invocation\n    |\n    = note: consider importing this attribute macro:\n            crate::empty_helper"}, {"sha": "6060f872f227a990d8b00e6236a4a4bcb3e59583", "filename": "src/test/ui/proc-macro/gen-macro-rules-hygiene.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fproc-macro%2Fgen-macro-rules-hygiene.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fproc-macro%2Fgen-macro-rules-hygiene.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fgen-macro-rules-hygiene.stderr?ref=90f4521cfdfc85fc04759cfba2f86a6acc096cb3", "patch": "@@ -2,21 +2,21 @@ error[E0426]: use of undeclared label `'label_use`\n   --> $DIR/gen-macro-rules-hygiene.rs:12:1\n    |\n LL | gen_macro_rules!();\n-   | ^^^^^^^^^^^^^^^^^^^ undeclared label `'label_use`\n+   | ^^^^^^^^^^^^^^^^^^ undeclared label `'label_use`\n ...\n LL |         generated!();\n-   |         ------------- in this macro invocation\n+   |         ------------ in this macro invocation\n    |\n    = note: this error originates in the macro `generated` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n error[E0425]: cannot find value `local_use` in this scope\n   --> $DIR/gen-macro-rules-hygiene.rs:12:1\n    |\n LL | gen_macro_rules!();\n-   | ^^^^^^^^^^^^^^^^^^^ not found in this scope\n+   | ^^^^^^^^^^^^^^^^^^ not found in this scope\n ...\n LL |         generated!();\n-   |         ------------- in this macro invocation\n+   |         ------------ in this macro invocation\n    |\n    = note: this error originates in the macro `generated` (in Nightly builds, run with -Z macro-backtrace for more info)\n "}, {"sha": "be58cc40ed299036753e7ee41df2c60f3a7a7563", "filename": "src/test/ui/proc-macro/generate-mod.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fproc-macro%2Fgenerate-mod.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fproc-macro%2Fgenerate-mod.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fgenerate-mod.stderr?ref=90f4521cfdfc85fc04759cfba2f86a6acc096cb3", "patch": "@@ -2,7 +2,7 @@ error[E0412]: cannot find type `FromOutside` in this scope\n   --> $DIR/generate-mod.rs:9:1\n    |\n LL | generate_mod::check!();\n-   | ^^^^^^^^^^^^^^^^^^^^^^^ not found in this scope\n+   | ^^^^^^^^^^^^^^^^^^^^^^ not found in this scope\n    |\n    = note: consider importing this struct:\n            FromOutside\n@@ -12,7 +12,7 @@ error[E0412]: cannot find type `Outer` in this scope\n   --> $DIR/generate-mod.rs:9:1\n    |\n LL | generate_mod::check!();\n-   | ^^^^^^^^^^^^^^^^^^^^^^^ not found in this scope\n+   | ^^^^^^^^^^^^^^^^^^^^^^ not found in this scope\n    |\n    = note: consider importing this struct:\n            Outer"}, {"sha": "1a56291896c76b993a8b347193e25ebcd28e111a", "filename": "src/test/ui/proc-macro/group-compat-hack/group-compat-hack.stderr", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fproc-macro%2Fgroup-compat-hack%2Fgroup-compat-hack.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fproc-macro%2Fgroup-compat-hack%2Fgroup-compat-hack.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fgroup-compat-hack%2Fgroup-compat-hack.stderr?ref=90f4521cfdfc85fc04759cfba2f86a6acc096cb3", "patch": "@@ -7,7 +7,7 @@ LL |         #[my_macro] struct One($name);\n   ::: $DIR/group-compat-hack.rs:27:5\n    |\n LL |     impl_macros!(Foo);\n-   |     ------------------ in this macro invocation\n+   |     ----------------- in this macro invocation\n    |\n    = note: `#[warn(proc_macro_back_compat)]` on by default\n    = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n@@ -24,7 +24,7 @@ LL |         #[my_macro] struct One($name);\n   ::: $DIR/group-compat-hack.rs:44:5\n    |\n LL |     impl_macros!(Foo);\n-   |     ------------------ in this macro invocation\n+   |     ----------------- in this macro invocation\n    |\n    = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n    = note: for more information, see issue #83125 <https://github.com/rust-lang/rust/issues/83125>\n@@ -40,7 +40,7 @@ LL |         #[my_macro] struct Two($name);\n   ::: $DIR/group-compat-hack.rs:46:5\n    |\n LL |     arrays!(Foo);\n-   |     ------------- in this macro invocation\n+   |     ------------ in this macro invocation\n    |\n    = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n    = note: for more information, see issue #83125 <https://github.com/rust-lang/rust/issues/83125>\n@@ -56,7 +56,7 @@ LL |         #[my_macro] struct Three($T);\n   ::: $DIR/group-compat-hack.rs:55:5\n    |\n LL |     tuple_from_req!(Foo);\n-   |     --------------------- in this macro invocation\n+   |     -------------------- in this macro invocation\n    |\n    = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n    = note: for more information, see issue #83125 <https://github.com/rust-lang/rust/issues/83125>\n@@ -72,7 +72,7 @@ LL |         #[my_macro] struct Three($T);\n   ::: $DIR/group-compat-hack.rs:63:5\n    |\n LL |     tuple_from_req!(Foo);\n-   |     --------------------- in this macro invocation\n+   |     -------------------- in this macro invocation\n    |\n    = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n    = note: for more information, see issue #83125 <https://github.com/rust-lang/rust/issues/83125>\n@@ -91,7 +91,7 @@ LL |         #[my_macro] struct One($name);\n   ::: $DIR/group-compat-hack.rs:27:5\n    |\n LL |     impl_macros!(Foo);\n-   |     ------------------ in this macro invocation\n+   |     ----------------- in this macro invocation\n    |\n    = note: `#[warn(proc_macro_back_compat)]` on by default\n    = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n@@ -109,7 +109,7 @@ LL |         #[my_macro] struct One($name);\n   ::: $DIR/group-compat-hack.rs:44:5\n    |\n LL |     impl_macros!(Foo);\n-   |     ------------------ in this macro invocation\n+   |     ----------------- in this macro invocation\n    |\n    = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n    = note: for more information, see issue #83125 <https://github.com/rust-lang/rust/issues/83125>\n@@ -126,7 +126,7 @@ LL |         #[my_macro] struct Two($name);\n   ::: $DIR/group-compat-hack.rs:46:5\n    |\n LL |     arrays!(Foo);\n-   |     ------------- in this macro invocation\n+   |     ------------ in this macro invocation\n    |\n    = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n    = note: for more information, see issue #83125 <https://github.com/rust-lang/rust/issues/83125>\n@@ -143,7 +143,7 @@ LL |         #[my_macro] struct Three($T);\n   ::: $DIR/group-compat-hack.rs:55:5\n    |\n LL |     tuple_from_req!(Foo);\n-   |     --------------------- in this macro invocation\n+   |     -------------------- in this macro invocation\n    |\n    = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n    = note: for more information, see issue #83125 <https://github.com/rust-lang/rust/issues/83125>\n@@ -160,7 +160,7 @@ LL |         #[my_macro] struct Three($T);\n   ::: $DIR/group-compat-hack.rs:63:5\n    |\n LL |     tuple_from_req!(Foo);\n-   |     --------------------- in this macro invocation\n+   |     -------------------- in this macro invocation\n    |\n    = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n    = note: for more information, see issue #83125 <https://github.com/rust-lang/rust/issues/83125>"}, {"sha": "eaf41c080faf45f1f71192e9630aa17ce47c5052", "filename": "src/test/ui/proc-macro/invalid-punct-ident-1.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fproc-macro%2Finvalid-punct-ident-1.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fproc-macro%2Finvalid-punct-ident-1.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Finvalid-punct-ident-1.stderr?ref=90f4521cfdfc85fc04759cfba2f86a6acc096cb3", "patch": "@@ -2,7 +2,7 @@ error: proc macro panicked\n   --> $DIR/invalid-punct-ident-1.rs:19:1\n    |\n LL | invalid_punct!();\n-   | ^^^^^^^^^^^^^^^^^\n+   | ^^^^^^^^^^^^^^^^\n    |\n    = help: message: unsupported character `'`'`\n "}, {"sha": "f7e1f4bc7d361b0ef96575be6f98603a4a5d63c8", "filename": "src/test/ui/proc-macro/invalid-punct-ident-2.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fproc-macro%2Finvalid-punct-ident-2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fproc-macro%2Finvalid-punct-ident-2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Finvalid-punct-ident-2.stderr?ref=90f4521cfdfc85fc04759cfba2f86a6acc096cb3", "patch": "@@ -2,7 +2,7 @@ error: proc macro panicked\n   --> $DIR/invalid-punct-ident-2.rs:19:1\n    |\n LL | invalid_ident!();\n-   | ^^^^^^^^^^^^^^^^^\n+   | ^^^^^^^^^^^^^^^^\n    |\n    = help: message: `\"*\"` is not a valid identifier\n "}, {"sha": "541c71d74db53d763a3d904dd84bca8f0dac9ec1", "filename": "src/test/ui/proc-macro/invalid-punct-ident-3.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fproc-macro%2Finvalid-punct-ident-3.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fproc-macro%2Finvalid-punct-ident-3.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Finvalid-punct-ident-3.stderr?ref=90f4521cfdfc85fc04759cfba2f86a6acc096cb3", "patch": "@@ -2,7 +2,7 @@ error: proc macro panicked\n   --> $DIR/invalid-punct-ident-3.rs:19:1\n    |\n LL | invalid_raw_ident!();\n-   | ^^^^^^^^^^^^^^^^^^^^^\n+   | ^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: message: `self` cannot be a raw identifier\n "}, {"sha": "deb93b893685b84ce9186da524ec693472216ce1", "filename": "src/test/ui/proc-macro/invalid-punct-ident-4.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fproc-macro%2Finvalid-punct-ident-4.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fproc-macro%2Finvalid-punct-ident-4.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Finvalid-punct-ident-4.stderr?ref=90f4521cfdfc85fc04759cfba2f86a6acc096cb3", "patch": "@@ -2,15 +2,15 @@ error: unexpected closing delimiter: `)`\n   --> $DIR/invalid-punct-ident-4.rs:6:1\n    |\n LL | lexer_failure!();\n-   | ^^^^^^^^^^^^^^^^^ unexpected closing delimiter\n+   | ^^^^^^^^^^^^^^^^ unexpected closing delimiter\n    |\n    = note: this error originates in the macro `lexer_failure` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n error: proc macro panicked\n   --> $DIR/invalid-punct-ident-4.rs:6:1\n    |\n LL | lexer_failure!();\n-   | ^^^^^^^^^^^^^^^^^\n+   | ^^^^^^^^^^^^^^^^\n \n error[E0308]: mismatched types\n   --> $DIR/invalid-punct-ident-4.rs:11:33"}, {"sha": "e0628a317918b0d6b6b170e439100bb8eda55b5d", "filename": "src/test/ui/proc-macro/issue-83510.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fproc-macro%2Fissue-83510.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fproc-macro%2Fissue-83510.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fissue-83510.stderr?ref=90f4521cfdfc85fc04759cfba2f86a6acc096cb3", "patch": "@@ -2,31 +2,31 @@ error[E0412]: cannot find type `Foo` in this scope\n   --> $DIR/issue-83510.rs:5:1\n    |\n LL | issue_83510::dance_like_you_want_to_ice!();\n-   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ not found in this scope\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ not found in this scope\n    |\n    = note: this error originates in the macro `issue_83510::dance_like_you_want_to_ice` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n error[E0404]: expected trait, found struct `Box`\n   --> $DIR/issue-83510.rs:5:1\n    |\n LL | issue_83510::dance_like_you_want_to_ice!();\n-   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ not a trait\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ not a trait\n    |\n    = note: this error originates in the macro `issue_83510::dance_like_you_want_to_ice` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n error[E0405]: cannot find trait `Baz` in this scope\n   --> $DIR/issue-83510.rs:5:1\n    |\n LL | issue_83510::dance_like_you_want_to_ice!();\n-   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ not found in this scope\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ not found in this scope\n    |\n    = note: this error originates in the macro `issue_83510::dance_like_you_want_to_ice` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n error[E0658]: inherent associated types are unstable\n   --> $DIR/issue-83510.rs:5:1\n    |\n LL | issue_83510::dance_like_you_want_to_ice!();\n-   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: see issue #8995 <https://github.com/rust-lang/rust/issues/8995> for more information\n    = help: add `#![feature(inherent_associated_types)]` to the crate attributes to enable"}, {"sha": "4dd8be7d9b6ef19c6b5db5288d6a958ddc0fc235", "filename": "src/test/ui/proc-macro/lints_in_proc_macros.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fproc-macro%2Flints_in_proc_macros.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fproc-macro%2Flints_in_proc_macros.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Flints_in_proc_macros.stderr?ref=90f4521cfdfc85fc04759cfba2f86a6acc096cb3", "patch": "@@ -2,7 +2,7 @@ error[E0425]: cannot find value `foobar2` in this scope\n   --> $DIR/lints_in_proc_macros.rs:9:5\n    |\n LL |     bang_proc_macro2!();\n-   |     ^^^^^^^^^^^^^^^^^^^^ help: a local variable with a similar name exists: `foobar`\n+   |     ^^^^^^^^^^^^^^^^^^^ help: a local variable with a similar name exists: `foobar`\n    |\n    = note: this error originates in the macro `bang_proc_macro2` (in Nightly builds, run with -Z macro-backtrace for more info)\n "}, {"sha": "517cbabd5c65a439d6a1c13898a5ead314515d96", "filename": "src/test/ui/proc-macro/macro-rules-derive.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fproc-macro%2Fmacro-rules-derive.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fproc-macro%2Fmacro-rules-derive.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fmacro-rules-derive.stderr?ref=90f4521cfdfc85fc04759cfba2f86a6acc096cb3", "patch": "@@ -5,7 +5,7 @@ LL |             field: MissingType\n    |                    ^^^^^^^^^^^ not found in this scope\n ...\n LL | produce_it!(MyName);\n-   | -------------------- in this macro invocation\n+   | ------------------- in this macro invocation\n    |\n    = note: this error originates in the macro `produce_it` (in Nightly builds, run with -Z macro-backtrace for more info)\n "}, {"sha": "60f082d177a9eed86780a9f64a4d06e44a7452d8", "filename": "src/test/ui/proc-macro/mixed-site-span.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fproc-macro%2Fmixed-site-span.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fproc-macro%2Fmixed-site-span.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fmixed-site-span.stderr?ref=90f4521cfdfc85fc04759cfba2f86a6acc096cb3", "patch": "@@ -2,15 +2,15 @@ error[E0426]: use of undeclared label `'label_use`\n   --> $DIR/mixed-site-span.rs:13:9\n    |\n LL |         proc_macro_rules!();\n-   |         ^^^^^^^^^^^^^^^^^^^^ undeclared label `'label_use`\n+   |         ^^^^^^^^^^^^^^^^^^^ undeclared label `'label_use`\n    |\n    = note: this error originates in the macro `proc_macro_rules` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n error[E0425]: cannot find value `local_use` in this scope\n   --> $DIR/mixed-site-span.rs:13:9\n    |\n LL |         proc_macro_rules!();\n-   |         ^^^^^^^^^^^^^^^^^^^^ not found in this scope\n+   |         ^^^^^^^^^^^^^^^^^^^ not found in this scope\n    |\n    = note: this error originates in the macro `proc_macro_rules` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n@@ -24,7 +24,7 @@ error[E0412]: cannot find type `ItemUse` in crate `$crate`\n   --> $DIR/mixed-site-span.rs:24:1\n    |\n LL | pass_dollar_crate!();\n-   | ^^^^^^^^^^^^^^^^^^^^^ not found in `$crate`\n+   | ^^^^^^^^^^^^^^^^^^^^ not found in `$crate`\n    |\n    = note: this error originates in the macro `proc_macro_rules` (in Nightly builds, run with -Z macro-backtrace for more info)\n "}, {"sha": "0aea02bbda95645b80035fe06d1313ddf9c4bf81", "filename": "src/test/ui/proc-macro/multispan.stderr", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fproc-macro%2Fmultispan.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fproc-macro%2Fmultispan.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fmultispan.stderr?ref=90f4521cfdfc85fc04759cfba2f86a6acc096cb3", "patch": "@@ -2,7 +2,7 @@ error: hello to you, too!\n   --> $DIR/multispan.rs:12:5\n    |\n LL |     hello!(hi);\n-   |     ^^^^^^^^^^^\n+   |     ^^^^^^^^^^\n    |\n note: found these 'hi's\n   --> $DIR/multispan.rs:12:12\n@@ -15,7 +15,7 @@ error: hello to you, too!\n   --> $DIR/multispan.rs:15:5\n    |\n LL |     hello!(hi hi);\n-   |     ^^^^^^^^^^^^^^\n+   |     ^^^^^^^^^^^^^\n    |\n note: found these 'hi's\n   --> $DIR/multispan.rs:15:12\n@@ -28,7 +28,7 @@ error: hello to you, too!\n   --> $DIR/multispan.rs:18:5\n    |\n LL |     hello!(hi hi hi);\n-   |     ^^^^^^^^^^^^^^^^^\n+   |     ^^^^^^^^^^^^^^^^\n    |\n note: found these 'hi's\n   --> $DIR/multispan.rs:18:12\n@@ -41,7 +41,7 @@ error: hello to you, too!\n   --> $DIR/multispan.rs:21:5\n    |\n LL |     hello!(hi hey hi yo hi beep beep hi hi);\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n note: found these 'hi's\n   --> $DIR/multispan.rs:21:12\n@@ -54,7 +54,7 @@ error: hello to you, too!\n   --> $DIR/multispan.rs:22:5\n    |\n LL |     hello!(hi there, hi how are you? hi... hi.);\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n note: found these 'hi's\n   --> $DIR/multispan.rs:22:12\n@@ -67,7 +67,7 @@ error: hello to you, too!\n   --> $DIR/multispan.rs:23:5\n    |\n LL |     hello!(whoah. hi di hi di ho);\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n note: found these 'hi's\n   --> $DIR/multispan.rs:23:19\n@@ -80,7 +80,7 @@ error: hello to you, too!\n   --> $DIR/multispan.rs:24:5\n    |\n LL |     hello!(hi good hi and good bye);\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n note: found these 'hi's\n   --> $DIR/multispan.rs:24:12"}, {"sha": "4548269b507930fb1bd407fbca12afc4f5e9f9a8", "filename": "src/test/ui/proc-macro/parent-source-spans.stderr", "status": "modified", "additions": 22, "deletions": 22, "changes": 44, "blob_url": "https://github.com/rust-lang/rust/blob/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fproc-macro%2Fparent-source-spans.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fproc-macro%2Fparent-source-spans.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fparent-source-spans.stderr?ref=90f4521cfdfc85fc04759cfba2f86a6acc096cb3", "patch": "@@ -5,7 +5,7 @@ LL |     three!($a, $b);\n    |            ^^\n ...\n LL |     one!(\"hello\", \"world\");\n-   |     ----------------------- in this macro invocation\n+   |     ---------------------- in this macro invocation\n    |\n    = note: this error originates in the macro `two` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n@@ -16,55 +16,55 @@ LL |     three!($a, $b);\n    |                ^^\n ...\n LL |     one!(\"hello\", \"world\");\n-   |     ----------------------- in this macro invocation\n+   |     ---------------------- in this macro invocation\n    |\n    = note: this error originates in the macro `two` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n error: first parent: \"hello\"\n   --> $DIR/parent-source-spans.rs:10:5\n    |\n LL |     two!($a, $b);\n-   |     ^^^^^^^^^^^^^\n+   |     ^^^^^^^^^^^^\n ...\n LL |     one!(\"hello\", \"world\");\n-   |     ----------------------- in this macro invocation\n+   |     ---------------------- in this macro invocation\n    |\n    = note: this error originates in the macro `one` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n error: second parent: \"world\"\n   --> $DIR/parent-source-spans.rs:10:5\n    |\n LL |     two!($a, $b);\n-   |     ^^^^^^^^^^^^^\n+   |     ^^^^^^^^^^^^\n ...\n LL |     one!(\"hello\", \"world\");\n-   |     ----------------------- in this macro invocation\n+   |     ---------------------- in this macro invocation\n    |\n    = note: this error originates in the macro `one` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n error: first grandparent: \"hello\"\n   --> $DIR/parent-source-spans.rs:36:5\n    |\n LL |     one!(\"hello\", \"world\");\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^\n+   |     ^^^^^^^^^^^^^^^^^^^^^^\n \n error: second grandparent: \"world\"\n   --> $DIR/parent-source-spans.rs:36:5\n    |\n LL |     one!(\"hello\", \"world\");\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^\n+   |     ^^^^^^^^^^^^^^^^^^^^^^\n \n error: first source: \"hello\"\n   --> $DIR/parent-source-spans.rs:36:5\n    |\n LL |     one!(\"hello\", \"world\");\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^\n+   |     ^^^^^^^^^^^^^^^^^^^^^^\n \n error: second source: \"world\"\n   --> $DIR/parent-source-spans.rs:36:5\n    |\n LL |     one!(\"hello\", \"world\");\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^\n+   |     ^^^^^^^^^^^^^^^^^^^^^^\n \n error: first final: \"yay\"\n   --> $DIR/parent-source-spans.rs:16:12\n@@ -73,7 +73,7 @@ LL |     three!($a, $b);\n    |            ^^\n ...\n LL |     two!(\"yay\", \"rust\");\n-   |     -------------------- in this macro invocation\n+   |     ------------------- in this macro invocation\n    |\n    = note: this error originates in the macro `two` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n@@ -84,33 +84,33 @@ LL |     three!($a, $b);\n    |                ^^\n ...\n LL |     two!(\"yay\", \"rust\");\n-   |     -------------------- in this macro invocation\n+   |     ------------------- in this macro invocation\n    |\n    = note: this error originates in the macro `two` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n error: first parent: \"yay\"\n   --> $DIR/parent-source-spans.rs:42:5\n    |\n LL |     two!(\"yay\", \"rust\");\n-   |     ^^^^^^^^^^^^^^^^^^^^\n+   |     ^^^^^^^^^^^^^^^^^^^\n \n error: second parent: \"rust\"\n   --> $DIR/parent-source-spans.rs:42:5\n    |\n LL |     two!(\"yay\", \"rust\");\n-   |     ^^^^^^^^^^^^^^^^^^^^\n+   |     ^^^^^^^^^^^^^^^^^^^\n \n error: first source: \"yay\"\n   --> $DIR/parent-source-spans.rs:42:5\n    |\n LL |     two!(\"yay\", \"rust\");\n-   |     ^^^^^^^^^^^^^^^^^^^^\n+   |     ^^^^^^^^^^^^^^^^^^^\n \n error: second source: \"rust\"\n   --> $DIR/parent-source-spans.rs:42:5\n    |\n LL |     two!(\"yay\", \"rust\");\n-   |     ^^^^^^^^^^^^^^^^^^^^\n+   |     ^^^^^^^^^^^^^^^^^^^\n \n error: first final: \"hip\"\n   --> $DIR/parent-source-spans.rs:48:12\n@@ -140,10 +140,10 @@ error[E0425]: cannot find value `ok` in this scope\n   --> $DIR/parent-source-spans.rs:29:5\n    |\n LL |     parent_source_spans!($($tokens)*);\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: a tuple variant with a similar name exists: `Ok`\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: a tuple variant with a similar name exists: `Ok`\n ...\n LL |     one!(\"hello\", \"world\");\n-   |     ----------------------- in this macro invocation\n+   |     ---------------------- in this macro invocation\n    |\n   ::: $SRC_DIR/core/src/result.rs:LL:COL\n    |\n@@ -156,10 +156,10 @@ error[E0425]: cannot find value `ok` in this scope\n   --> $DIR/parent-source-spans.rs:29:5\n    |\n LL |     parent_source_spans!($($tokens)*);\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: a tuple variant with a similar name exists: `Ok`\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: a tuple variant with a similar name exists: `Ok`\n ...\n LL |     two!(\"yay\", \"rust\");\n-   |     -------------------- in this macro invocation\n+   |     ------------------- in this macro invocation\n    |\n   ::: $SRC_DIR/core/src/result.rs:LL:COL\n    |\n@@ -172,10 +172,10 @@ error[E0425]: cannot find value `ok` in this scope\n   --> $DIR/parent-source-spans.rs:29:5\n    |\n LL |     parent_source_spans!($($tokens)*);\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: a tuple variant with a similar name exists: `Ok`\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: a tuple variant with a similar name exists: `Ok`\n ...\n LL |     three!(\"hip\", \"hop\");\n-   |     --------------------- in this macro invocation\n+   |     -------------------- in this macro invocation\n    |\n   ::: $SRC_DIR/core/src/result.rs:LL:COL\n    |"}, {"sha": "905a5f9463af83ccccf0865ea45402afaad18f55", "filename": "src/test/ui/proc-macro/raw-ident.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fproc-macro%2Fraw-ident.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fproc-macro%2Fraw-ident.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fraw-ident.stderr?ref=90f4521cfdfc85fc04759cfba2f86a6acc096cb3", "patch": "@@ -2,7 +2,7 @@ error: expected one of `!`, `.`, `::`, `;`, `?`, `{`, `}`, or an operator, found\n   --> $DIR/raw-ident.rs:15:5\n    |\n LL |     make_bad_struct!(S);\n-   |     ^^^^^^^^^^^^^^^^^^^^ expected one of 8 possible tokens\n+   |     ^^^^^^^^^^^^^^^^^^^ expected one of 8 possible tokens\n    |\n    = note: this error originates in the macro `make_bad_struct` (in Nightly builds, run with -Z macro-backtrace for more info)\n "}, {"sha": "914ad54ed0370513b3b5c1460d96277fa17948b2", "filename": "src/test/ui/proc-macro/span-api-tests.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fproc-macro%2Fspan-api-tests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fproc-macro%2Fspan-api-tests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fspan-api-tests.rs?ref=90f4521cfdfc85fc04759cfba2f86a6acc096cb3", "patch": "@@ -41,7 +41,7 @@ fn main() {\n         reemit!(macro_stringify!(Hello, world!)),\n         \"reemit!(macro_stringify!(Hello, world!))\"\n     );\n-    let r = \"reemit!(assert_eq!(macro_stringify!(Hello, world!), r));\";\n+    let r = \"reemit!(assert_eq!(macro_stringify!(Hello, world!), r))\";\n     reemit!(assert_eq!(macro_stringify!(Hello, world!), r));\n \n     assert_eq!(macro_stringify!("}, {"sha": "7beed505a7efac718277af715f38f740021d393c", "filename": "src/test/ui/proc-macro/span-from-proc-macro.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fproc-macro%2Fspan-from-proc-macro.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fproc-macro%2Fspan-from-proc-macro.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fspan-from-proc-macro.stderr?ref=90f4521cfdfc85fc04759cfba2f86a6acc096cb3", "patch": "@@ -38,7 +38,7 @@ LL |         my_ident\n   ::: $DIR/span-from-proc-macro.rs:16:5\n    |\n LL |     other_error_from_bang!();\n-   |     ------------------------- in this macro invocation\n+   |     ------------------------ in this macro invocation\n \n error[E0308]: mismatched types\n   --> $DIR/auxiliary/span-from-proc-macro.rs:16:36\n@@ -54,7 +54,7 @@ LL | pub fn error_from_bang(_input: TokenStream) -> TokenStream {\n   ::: $DIR/span-from-proc-macro.rs:15:5\n    |\n LL |     error_from_bang!();\n-   |     ------------------- in this macro invocation\n+   |     ------------------ in this macro invocation\n \n error: aborting due to 4 previous errors\n "}, {"sha": "b5dacba0e37e027a4fb922dde5d455d110f52ba8", "filename": "src/test/ui/proc-macro/subspan.stderr", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fproc-macro%2Fsubspan.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fproc-macro%2Fsubspan.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fsubspan.stderr?ref=90f4521cfdfc85fc04759cfba2f86a6acc096cb3", "patch": "@@ -2,7 +2,7 @@ error: found 'hi's\n   --> $DIR/subspan.rs:11:1\n    |\n LL | subspan!(\"hi\");\n-   | ^^^^^^^^^^^^^^^\n+   | ^^^^^^^^^^^^^^\n    |\n note: here\n   --> $DIR/subspan.rs:11:11\n@@ -15,7 +15,7 @@ error: found 'hi's\n   --> $DIR/subspan.rs:14:1\n    |\n LL | subspan!(\"hihi\");\n-   | ^^^^^^^^^^^^^^^^^\n+   | ^^^^^^^^^^^^^^^^\n    |\n note: here\n   --> $DIR/subspan.rs:14:11\n@@ -28,7 +28,7 @@ error: found 'hi's\n   --> $DIR/subspan.rs:17:1\n    |\n LL | subspan!(\"hihihi\");\n-   | ^^^^^^^^^^^^^^^^^^^\n+   | ^^^^^^^^^^^^^^^^^^\n    |\n note: here\n   --> $DIR/subspan.rs:17:11\n@@ -41,7 +41,7 @@ error: found 'hi's\n   --> $DIR/subspan.rs:20:1\n    |\n LL | subspan!(\"why I hide? hi!\");\n-   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n note: here\n   --> $DIR/subspan.rs:20:17\n@@ -54,7 +54,7 @@ error: found 'hi's\n   --> $DIR/subspan.rs:21:1\n    |\n LL | subspan!(\"hey, hi, hidy, hidy, hi hi\");\n-   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n note: here\n   --> $DIR/subspan.rs:21:16\n@@ -67,7 +67,7 @@ error: found 'hi's\n   --> $DIR/subspan.rs:22:1\n    |\n LL | subspan!(\"this is a hi, and this is another hi\");\n-   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n note: here\n   --> $DIR/subspan.rs:22:12\n@@ -80,7 +80,7 @@ error: found 'hi's\n   --> $DIR/subspan.rs:23:1\n    |\n LL | subspan!(\"how are you this evening\");\n-   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n note: here\n   --> $DIR/subspan.rs:23:24\n@@ -93,7 +93,7 @@ error: found 'hi's\n   --> $DIR/subspan.rs:24:1\n    |\n LL | subspan!(\"this is highly eradic\");\n-   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n note: here\n   --> $DIR/subspan.rs:24:12"}, {"sha": "1ce5e02bd82f7eb5dcb8deca3e049467d3be25ab", "filename": "src/test/ui/proc-macro/three-equals.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fproc-macro%2Fthree-equals.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fproc-macro%2Fthree-equals.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fthree-equals.stderr?ref=90f4521cfdfc85fc04759cfba2f86a6acc096cb3", "patch": "@@ -2,7 +2,7 @@ error: found 2 equal signs, need exactly 3\n   --> $DIR/three-equals.rs:12:5\n    |\n LL |     three_equals!(==);\n-   |     ^^^^^^^^^^^^^^^^^^\n+   |     ^^^^^^^^^^^^^^^^^\n    |\n    = help: input must be: `===`\n    = note: this error originates in the macro `three_equals` (in Nightly builds, run with -Z macro-backtrace for more info)"}, {"sha": "b4e7fe444acce1d22425e4d4166355e7befbbd3f", "filename": "src/test/ui/proc-macro/weird-hygiene.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fproc-macro%2Fweird-hygiene.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fproc-macro%2Fweird-hygiene.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fweird-hygiene.stderr?ref=90f4521cfdfc85fc04759cfba2f86a6acc096cb3", "patch": "@@ -5,7 +5,7 @@ LL |             Value = (stringify!($tokens + hidden_ident), 1).1\n    |                                           ^^^^^^^^^^^^ not found in this scope\n ...\n LL |     other!(50);\n-   |     ----------- in this macro invocation\n+   |     ---------- in this macro invocation\n    |\n    = note: this error originates in the macro `inner` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n@@ -16,7 +16,7 @@ LL |             hidden_ident\n    |             ^^^^^^^^^^^^ not found in this scope\n ...\n LL |     invoke_it!(25);\n-   |     --------------- in this macro invocation\n+   |     -------------- in this macro invocation\n    |\n    = note: this error originates in the macro `invoke_it` (in Nightly builds, run with -Z macro-backtrace for more info)\n "}, {"sha": "a3c54e135604c590ead4d20a55a609e5a7e7a36a", "filename": "src/test/ui/reachable/expr_again.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Freachable%2Fexpr_again.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Freachable%2Fexpr_again.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Freachable%2Fexpr_again.stderr?ref=90f4521cfdfc85fc04759cfba2f86a6acc096cb3", "patch": "@@ -4,7 +4,7 @@ error: unreachable statement\n LL |         continue;\n    |         -------- any code following this expression is unreachable\n LL |         println!(\"hi\");\n-   |         ^^^^^^^^^^^^^^^ unreachable statement\n+   |         ^^^^^^^^^^^^^^ unreachable statement\n    |\n note: the lint level is defined here\n   --> $DIR/expr_again.rs:3:9"}, {"sha": "d5f248a24910ed871f416a8ed9144eeb208a2366", "filename": "src/test/ui/reachable/expr_block.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Freachable%2Fexpr_block.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Freachable%2Fexpr_block.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Freachable%2Fexpr_block.stderr?ref=90f4521cfdfc85fc04759cfba2f86a6acc096cb3", "patch": "@@ -18,7 +18,7 @@ error: unreachable statement\n LL |         return;\n    |         ------ any code following this expression is unreachable\n LL |         println!(\"foo\");\n-   |         ^^^^^^^^^^^^^^^^ unreachable statement\n+   |         ^^^^^^^^^^^^^^^ unreachable statement\n    |\n    = note: this error originates in the macro `println` (in Nightly builds, run with -Z macro-backtrace for more info)\n "}, {"sha": "ebd0b5a3ebefc3a61fc1f339ebefb56d8435be47", "filename": "src/test/ui/reachable/expr_if.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Freachable%2Fexpr_if.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Freachable%2Fexpr_if.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Freachable%2Fexpr_if.stderr?ref=90f4521cfdfc85fc04759cfba2f86a6acc096cb3", "patch": "@@ -22,7 +22,7 @@ LL |         return;\n    |         ------ any code following this expression is unreachable\n ...\n LL |     println!(\"But I am.\");\n-   |     ^^^^^^^^^^^^^^^^^^^^^^ unreachable statement\n+   |     ^^^^^^^^^^^^^^^^^^^^^ unreachable statement\n    |\n    = note: this error originates in the macro `println` (in Nightly builds, run with -Z macro-backtrace for more info)\n "}, {"sha": "9185846860507e635a65b62a31ff629d0de8f268", "filename": "src/test/ui/reachable/expr_loop.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Freachable%2Fexpr_loop.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Freachable%2Fexpr_loop.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Freachable%2Fexpr_loop.stderr?ref=90f4521cfdfc85fc04759cfba2f86a6acc096cb3", "patch": "@@ -4,7 +4,7 @@ error: unreachable statement\n LL |     loop { return; }\n    |            ------ any code following this expression is unreachable\n LL |     println!(\"I am dead.\");\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^ unreachable statement\n+   |     ^^^^^^^^^^^^^^^^^^^^^^ unreachable statement\n    |\n note: the lint level is defined here\n   --> $DIR/expr_loop.rs:4:9\n@@ -19,7 +19,7 @@ error: unreachable statement\n LL |     loop { return; }\n    |            ------ any code following this expression is unreachable\n LL |     println!(\"I am dead.\");\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^ unreachable statement\n+   |     ^^^^^^^^^^^^^^^^^^^^^^ unreachable statement\n    |\n    = note: this error originates in the macro `println` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n@@ -29,7 +29,7 @@ error: unreachable statement\n LL |     loop { 'middle: loop { loop { break 'middle; } } }\n    |     -------------------------------------------------- any code following this expression is unreachable\n LL |     println!(\"I am dead.\");\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^ unreachable statement\n+   |     ^^^^^^^^^^^^^^^^^^^^^^ unreachable statement\n    |\n    = note: this error originates in the macro `println` (in Nightly builds, run with -Z macro-backtrace for more info)\n "}, {"sha": "d15208609cff81614f62c17597a153ac097f0887", "filename": "src/test/ui/reachable/expr_match.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Freachable%2Fexpr_match.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Freachable%2Fexpr_match.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Freachable%2Fexpr_match.stderr?ref=90f4521cfdfc85fc04759cfba2f86a6acc096cb3", "patch": "@@ -4,7 +4,7 @@ error: unreachable statement\n LL |     match () { () => return }\n    |     ------------------------- any code following this `match` expression is unreachable, as all arms diverge\n LL |     println!(\"I am dead\");\n-   |     ^^^^^^^^^^^^^^^^^^^^^^ unreachable statement\n+   |     ^^^^^^^^^^^^^^^^^^^^^ unreachable statement\n    |\n note: the lint level is defined here\n   --> $DIR/expr_match.rs:4:9\n@@ -19,7 +19,7 @@ error: unreachable statement\n LL |     match () { () if false => return, () => return }\n    |     ------------------------------------------------ any code following this `match` expression is unreachable, as all arms diverge\n LL |     println!(\"I am dead\");\n-   |     ^^^^^^^^^^^^^^^^^^^^^^ unreachable statement\n+   |     ^^^^^^^^^^^^^^^^^^^^^ unreachable statement\n    |\n    = note: this error originates in the macro `println` (in Nightly builds, run with -Z macro-backtrace for more info)\n "}, {"sha": "263a1b5a960fc575743d7fdb81cf6ae02600b8a5", "filename": "src/test/ui/reachable/unreachable-code-ret.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Freachable%2Funreachable-code-ret.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Freachable%2Funreachable-code-ret.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Freachable%2Funreachable-code-ret.stderr?ref=90f4521cfdfc85fc04759cfba2f86a6acc096cb3", "patch": "@@ -4,7 +4,7 @@ error: unreachable statement\n LL |     return;\n    |     ------ any code following this expression is unreachable\n LL |     println!(\"Paul is dead\");\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^^^ unreachable statement\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^ unreachable statement\n    |\n note: the lint level is defined here\n   --> $DIR/unreachable-code-ret.rs:3:9"}, {"sha": "3a2d904cb1c218a2e4ef67e52eecd15bc0f2ca9e", "filename": "src/test/ui/recursion_limit/zero.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Frecursion_limit%2Fzero.rs", "raw_url": "https://github.com/rust-lang/rust/raw/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Frecursion_limit%2Fzero.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frecursion_limit%2Fzero.rs?ref=90f4521cfdfc85fc04759cfba2f86a6acc096cb3", "patch": "@@ -7,6 +7,6 @@ macro_rules! test {\n     ($tt:tt) => { test!(); };\n }\n \n-test!(test); //~ ERROR 10:1: 10:13: recursion limit reached while expanding `test!`\n+test!(test); //~ ERROR recursion limit reached while expanding `test!`\n \n fn main() {}"}, {"sha": "b43565909a3f4e39b5a4c9c5ccf8ec0dbe2c24ef", "filename": "src/test/ui/recursion_limit/zero.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Frecursion_limit%2Fzero.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Frecursion_limit%2Fzero.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frecursion_limit%2Fzero.stderr?ref=90f4521cfdfc85fc04759cfba2f86a6acc096cb3", "patch": "@@ -2,7 +2,7 @@ error: recursion limit reached while expanding `test!`\n   --> $DIR/zero.rs:10:1\n    |\n LL | test!(test);\n-   | ^^^^^^^^^^^^\n+   | ^^^^^^^^^^^\n    |\n    = help: consider increasing the recursion limit by adding a `#![recursion_limit = \"2\"]` attribute to your crate (`zero`)\n "}, {"sha": "476e82f046f01a7f0abe8ded74a43417a637fc06", "filename": "src/test/ui/regions/regions-var-type-out-of-scope.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fregions%2Fregions-var-type-out-of-scope.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fregions%2Fregions-var-type-out-of-scope.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fregions%2Fregions-var-type-out-of-scope.stderr?ref=90f4521cfdfc85fc04759cfba2f86a6acc096cb3", "patch": "@@ -6,7 +6,7 @@ LL |         x = &id(3);\n    |              |\n    |              creates a temporary which is freed while still in use\n LL |         assert_eq!(*x, 3);\n-   |         ------------------ borrow later used here\n+   |         ----------------- borrow later used here\n    |\n    = note: consider using a `let` binding to create a longer lived value\n "}, {"sha": "7898c2a360f1241df6b6ead0ebbc916805e34f55", "filename": "src/test/ui/resolve/issue-82865.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fresolve%2Fissue-82865.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fresolve%2Fissue-82865.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fresolve%2Fissue-82865.stderr?ref=90f4521cfdfc85fc04759cfba2f86a6acc096cb3", "patch": "@@ -11,7 +11,7 @@ LL |     Box::z\n    |          ^ function or associated item not found in `Box<_, _>`\n ...\n LL |     mac!();\n-   |     ------- in this macro invocation\n+   |     ------ in this macro invocation\n    |\n    = note: this error originates in the macro `mac` (in Nightly builds, run with -Z macro-backtrace for more info)\n "}, {"sha": "2545231a1712c2f75b59900fc8e64afaaf25d913", "filename": "src/test/ui/rust-2018/uniform-paths/ambiguity-macros-nested.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Frust-2018%2Funiform-paths%2Fambiguity-macros-nested.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Frust-2018%2Funiform-paths%2Fambiguity-macros-nested.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frust-2018%2Funiform-paths%2Fambiguity-macros-nested.stderr?ref=90f4521cfdfc85fc04759cfba2f86a6acc096cb3", "patch": "@@ -15,7 +15,7 @@ LL | |             }\n    | |_____________^\n ...\n LL |       m!();\n-   |       ----- in this macro invocation\n+   |       ---- in this macro invocation\n    = help: use `self::std` to refer to this module unambiguously\n    = note: this error originates in the macro `m` (in Nightly builds, run with -Z macro-backtrace for more info)\n "}, {"sha": "af45cd81a3b106a684e114c196cfe674f0449b55", "filename": "src/test/ui/rust-2018/uniform-paths/ambiguity-macros.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Frust-2018%2Funiform-paths%2Fambiguity-macros.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Frust-2018%2Funiform-paths%2Fambiguity-macros.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frust-2018%2Funiform-paths%2Fambiguity-macros.stderr?ref=90f4521cfdfc85fc04759cfba2f86a6acc096cb3", "patch": "@@ -15,7 +15,7 @@ LL | |         }\n    | |_________^\n ...\n LL |   m!();\n-   |   ----- in this macro invocation\n+   |   ---- in this macro invocation\n    = help: use `crate::std` to refer to this module unambiguously\n    = note: this error originates in the macro `m` (in Nightly builds, run with -Z macro-backtrace for more info)\n "}, {"sha": "ae7c5d60cbacc3cc1ac1f59f948eadfe7b542128", "filename": "src/test/ui/rust-2021/reserved-prefixes-via-macro-2.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Frust-2021%2Freserved-prefixes-via-macro-2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Frust-2021%2Freserved-prefixes-via-macro-2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frust-2021%2Freserved-prefixes-via-macro-2.stderr?ref=90f4521cfdfc85fc04759cfba2f86a6acc096cb3", "patch": "@@ -2,7 +2,7 @@ error: prefix `hey` is unknown\n   --> $DIR/reserved-prefixes-via-macro-2.rs:15:5\n    |\n LL |     m2021::number_of_tokens_in_a_prefixed_integer_literal!();\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ unknown prefix\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ unknown prefix\n    |\n    = note: prefixed identifiers and literals are reserved since Rust 2021\n    = note: this error originates in the macro `m2021::number_of_tokens_in_a_prefixed_integer_literal` (in Nightly builds, run with -Z macro-backtrace for more info)\n@@ -11,7 +11,7 @@ error: prefix `hey` is unknown\n   --> $DIR/reserved-prefixes-via-macro-2.rs:17:5\n    |\n LL |     m2021::number_of_tokens_in_a_prefixed_char_literal!();\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ unknown prefix\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ unknown prefix\n    |\n    = note: prefixed identifiers and literals are reserved since Rust 2021\n    = note: this error originates in the macro `m2021::number_of_tokens_in_a_prefixed_char_literal` (in Nightly builds, run with -Z macro-backtrace for more info)\n@@ -20,7 +20,7 @@ error: prefix `hey` is unknown\n   --> $DIR/reserved-prefixes-via-macro-2.rs:19:5\n    |\n LL |     m2021::number_of_tokens_in_a_prefixed_string_literal!();\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ unknown prefix\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ unknown prefix\n    |\n    = note: prefixed identifiers and literals are reserved since Rust 2021\n    = note: this error originates in the macro `m2021::number_of_tokens_in_a_prefixed_string_literal` (in Nightly builds, run with -Z macro-backtrace for more info)"}, {"sha": "415f04d933f25ab8fefe205b6380c8814a2d7e54", "filename": "src/test/ui/simd/shuffle-not-out-of-bounds.stderr", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fsimd%2Fshuffle-not-out-of-bounds.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fsimd%2Fshuffle-not-out-of-bounds.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsimd%2Fshuffle-not-out-of-bounds.stderr?ref=90f4521cfdfc85fc04759cfba2f86a6acc096cb3", "patch": "@@ -5,7 +5,7 @@ LL |                     $y(vec1, vec2, ARR)\n    |                     ^^^^^^^^^^^^^^^^^^^\n ...\n LL |     test_shuffle_lanes!(2, u8x2, simd_shuffle2);\n-   |     -------------------------------------------- in this macro invocation\n+   |     ------------------------------------------- in this macro invocation\n    |\n    = note: this error originates in the macro `test_shuffle_lanes` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n@@ -16,7 +16,7 @@ LL |                     $y(vec1, vec2, ARR)\n    |                     ^^^^^^^^^^^^^^^^^^^\n ...\n LL |     test_shuffle_lanes!(4, u8x4, simd_shuffle4);\n-   |     -------------------------------------------- in this macro invocation\n+   |     ------------------------------------------- in this macro invocation\n    |\n    = note: this error originates in the macro `test_shuffle_lanes` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n@@ -27,7 +27,7 @@ LL |                     $y(vec1, vec2, ARR)\n    |                     ^^^^^^^^^^^^^^^^^^^\n ...\n LL |     test_shuffle_lanes!(8, u8x8, simd_shuffle8);\n-   |     -------------------------------------------- in this macro invocation\n+   |     ------------------------------------------- in this macro invocation\n    |\n    = note: this error originates in the macro `test_shuffle_lanes` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n@@ -38,7 +38,7 @@ LL |                     $y(vec1, vec2, ARR)\n    |                     ^^^^^^^^^^^^^^^^^^^\n ...\n LL |     test_shuffle_lanes!(16, u8x16, simd_shuffle16);\n-   |     ----------------------------------------------- in this macro invocation\n+   |     ---------------------------------------------- in this macro invocation\n    |\n    = note: this error originates in the macro `test_shuffle_lanes` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n@@ -49,7 +49,7 @@ LL |                     $y(vec1, vec2, ARR)\n    |                     ^^^^^^^^^^^^^^^^^^^\n ...\n LL |     test_shuffle_lanes!(32, u8x32, simd_shuffle32);\n-   |     ----------------------------------------------- in this macro invocation\n+   |     ---------------------------------------------- in this macro invocation\n    |\n    = note: this error originates in the macro `test_shuffle_lanes` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n@@ -60,7 +60,7 @@ LL |                     $y(vec1, vec2, ARR)\n    |                     ^^^^^^^^^^^^^^^^^^^\n ...\n LL |     test_shuffle_lanes!(64, u8x64, simd_shuffle64);\n-   |     ----------------------------------------------- in this macro invocation\n+   |     ---------------------------------------------- in this macro invocation\n    |\n    = note: this error originates in the macro `test_shuffle_lanes` (in Nightly builds, run with -Z macro-backtrace for more info)\n "}, {"sha": "d08b24e9562b910f2dc6f3b9594133c75e11aa95", "filename": "src/test/ui/span/macro-span-replacement.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fspan%2Fmacro-span-replacement.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fspan%2Fmacro-span-replacement.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspan%2Fmacro-span-replacement.stderr?ref=90f4521cfdfc85fc04759cfba2f86a6acc096cb3", "patch": "@@ -5,7 +5,7 @@ LL |         $b $a;\n    |              ^\n ...\n LL |     m!(S struct);\n-   |     ------------- in this macro invocation\n+   |     ------------ in this macro invocation\n    |\n note: the lint level is defined here\n   --> $DIR/macro-span-replacement.rs:3:9"}, {"sha": "2b3dfc5c135339669f31921a99de001b72c3b98a", "filename": "src/test/ui/span/transitive-dep-span.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fspan%2Ftransitive-dep-span.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fspan%2Ftransitive-dep-span.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspan%2Ftransitive-dep-span.stderr?ref=90f4521cfdfc85fc04759cfba2f86a6acc096cb3", "patch": "@@ -10,7 +10,7 @@ LL | |         }\n   ::: $DIR/transitive-dep-span.rs:13:1\n    |\n LL |   transitive_dep_two::parse_error!();\n-   |   -----------------------------------\n+   |   ----------------------------------\n    |   |\n    |   in this macro invocation\n    |   in this macro invocation"}, {"sha": "3599d53d2a11f0f896ea999adc2c13c0af09a550", "filename": "src/test/ui/suggestions/dont-suggest-deref-inside-macro-issue-58298.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fsuggestions%2Fdont-suggest-deref-inside-macro-issue-58298.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fsuggestions%2Fdont-suggest-deref-inside-macro-issue-58298.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fdont-suggest-deref-inside-macro-issue-58298.stderr?ref=90f4521cfdfc85fc04759cfba2f86a6acc096cb3", "patch": "@@ -4,7 +4,7 @@ error[E0308]: mismatched types\n LL | /     intrinsic_match! {\n LL | |         \"abc\"\n LL | |     };\n-   | |______^ expected `&str`, found struct `String`\n+   | |_____^ expected `&str`, found struct `String`\n    |\n    = note: this error originates in the macro `format` (in Nightly builds, run with -Z macro-backtrace for more info)\n "}, {"sha": "4e21d36014c9045afc27508826558583a308670e", "filename": "src/test/ui/suggestions/dont-suggest-try_into-in-macros.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fsuggestions%2Fdont-suggest-try_into-in-macros.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fsuggestions%2Fdont-suggest-try_into-in-macros.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fdont-suggest-try_into-in-macros.stderr?ref=90f4521cfdfc85fc04759cfba2f86a6acc096cb3", "patch": "@@ -2,7 +2,7 @@ error[E0308]: mismatched types\n   --> $DIR/dont-suggest-try_into-in-macros.rs:2:5\n    |\n LL |     assert_eq!(10u64, 10usize);\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `u64`, found `usize`\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^ expected `u64`, found `usize`\n    |\n    = note: this error originates in the macro `assert_eq` (in Nightly builds, run with -Z macro-backtrace for more info)\n "}, {"sha": "5c05810e5868d83c35793fa8d8330846eb29ae94", "filename": "src/test/ui/suggestions/suggest-ref-macro.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fsuggestions%2Fsuggest-ref-macro.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fsuggestions%2Fsuggest-ref-macro.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fsuggest-ref-macro.stderr?ref=90f4521cfdfc85fc04759cfba2f86a6acc096cb3", "patch": "@@ -8,7 +8,7 @@ LL |         x(123);\n    |           help: consider mutably borrowing here: `&mut 123`\n ...\n LL |     bla!();\n-   |     ------- in this macro invocation\n+   |     ------ in this macro invocation\n    |\n    = note: this error originates in the macro `bla` (in Nightly builds, run with -Z macro-backtrace for more info)\n "}, {"sha": "45cbcecacab2d91ed58e051ada7211c0d47cd85d", "filename": "src/test/ui/symbol-names/const-generics-structural-demangling.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fsymbol-names%2Fconst-generics-structural-demangling.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fsymbol-names%2Fconst-generics-structural-demangling.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsymbol-names%2Fconst-generics-structural-demangling.stderr?ref=90f4521cfdfc85fc04759cfba2f86a6acc096cb3", "patch": "@@ -131,7 +131,7 @@ LL |     #[rustc_symbol_name]\n    |     ^^^^^^^^^^^^^^^^^^^^\n ...\n LL | duplicate_field_name_test!(x);\n-   | ------------------------------ in this macro invocation\n+   | ----------------------------- in this macro invocation\n    |\n    = note: this error originates in the macro `duplicate_field_name_test` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n@@ -142,7 +142,7 @@ LL |     #[rustc_symbol_name]\n    |     ^^^^^^^^^^^^^^^^^^^^\n ...\n LL | duplicate_field_name_test!(x);\n-   | ------------------------------ in this macro invocation\n+   | ----------------------------- in this macro invocation\n    |\n    = note: this error originates in the macro `duplicate_field_name_test` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n@@ -153,7 +153,7 @@ LL |     #[rustc_symbol_name]\n    |     ^^^^^^^^^^^^^^^^^^^^\n ...\n LL | duplicate_field_name_test!(x);\n-   | ------------------------------ in this macro invocation\n+   | ----------------------------- in this macro invocation\n    |\n    = note: this error originates in the macro `duplicate_field_name_test` (in Nightly builds, run with -Z macro-backtrace for more info)\n "}, {"sha": "c32027086aa19dfbde7eaf6c21e42313fb10c574", "filename": "src/test/ui/trace_macros-format.stderr", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Ftrace_macros-format.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Ftrace_macros-format.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftrace_macros-format.stderr?ref=90f4521cfdfc85fc04759cfba2f86a6acc096cb3", "patch": "@@ -2,37 +2,37 @@ error: trace_macros! accepts only `true` or `false`\n   --> $DIR/trace_macros-format.rs:4:5\n    |\n LL |     trace_macros!();\n-   |     ^^^^^^^^^^^^^^^^\n+   |     ^^^^^^^^^^^^^^^\n \n error: trace_macros! accepts only `true` or `false`\n   --> $DIR/trace_macros-format.rs:5:5\n    |\n LL |     trace_macros!(1);\n-   |     ^^^^^^^^^^^^^^^^^\n+   |     ^^^^^^^^^^^^^^^^\n \n error: trace_macros! accepts only `true` or `false`\n   --> $DIR/trace_macros-format.rs:6:5\n    |\n LL |     trace_macros!(ident);\n-   |     ^^^^^^^^^^^^^^^^^^^^^\n+   |     ^^^^^^^^^^^^^^^^^^^^\n \n error: trace_macros! accepts only `true` or `false`\n   --> $DIR/trace_macros-format.rs:7:5\n    |\n LL |     trace_macros!(for);\n-   |     ^^^^^^^^^^^^^^^^^^^\n+   |     ^^^^^^^^^^^^^^^^^^\n \n error: trace_macros! accepts only `true` or `false`\n   --> $DIR/trace_macros-format.rs:8:5\n    |\n LL |     trace_macros!(true,);\n-   |     ^^^^^^^^^^^^^^^^^^^^^\n+   |     ^^^^^^^^^^^^^^^^^^^^\n \n error: trace_macros! accepts only `true` or `false`\n   --> $DIR/trace_macros-format.rs:9:5\n    |\n LL |     trace_macros!(false 1);\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^\n+   |     ^^^^^^^^^^^^^^^^^^^^^^\n \n error: aborting due to 6 previous errors\n "}, {"sha": "bd145fd64e7655b5b4274aaf60438ec4a7628d42", "filename": "src/test/ui/try-block/try-block-opt-init.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Ftry-block%2Ftry-block-opt-init.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Ftry-block%2Ftry-block-opt-init.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftry-block%2Ftry-block-opt-init.stderr?ref=90f4521cfdfc85fc04759cfba2f86a6acc096cb3", "patch": "@@ -2,7 +2,7 @@ error[E0381]: borrow of possibly-uninitialized variable: `cfg_res`\n   --> $DIR/try-block-opt-init.rs:15:5\n    |\n LL |     assert_eq!(cfg_res, 5);\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^ use of possibly-uninitialized `cfg_res`\n+   |     ^^^^^^^^^^^^^^^^^^^^^^ use of possibly-uninitialized `cfg_res`\n    |\n    = note: this error originates in the macro `assert_eq` (in Nightly builds, run with -Z macro-backtrace for more info)\n "}, {"sha": "865d5cc61cadf6f9fef7e15445e166989de4dc9c", "filename": "src/test/ui/unsafe/inline_asm.mir.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Funsafe%2Finline_asm.mir.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Funsafe%2Finline_asm.mir.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Funsafe%2Finline_asm.mir.stderr?ref=90f4521cfdfc85fc04759cfba2f86a6acc096cb3", "patch": "@@ -2,15 +2,15 @@ error[E0133]: use of inline assembly is unsafe and requires unsafe function or b\n   --> $DIR/inline_asm.rs:10:5\n    |\n LL |     asm!(\"nop\");\n-   |     ^^^^^^^^^^^^ use of inline assembly\n+   |     ^^^^^^^^^^^ use of inline assembly\n    |\n    = note: inline assembly is entirely unchecked and can cause undefined behavior\n \n error[E0133]: use of inline assembly is unsafe and requires unsafe function or block\n   --> $DIR/inline_asm.rs:11:5\n    |\n LL |     llvm_asm!(\"nop\");\n-   |     ^^^^^^^^^^^^^^^^^ use of inline assembly\n+   |     ^^^^^^^^^^^^^^^^ use of inline assembly\n    |\n    = note: inline assembly is entirely unchecked and can cause undefined behavior\n    = note: this error originates in the macro `llvm_asm` (in Nightly builds, run with -Z macro-backtrace for more info)"}, {"sha": "865d5cc61cadf6f9fef7e15445e166989de4dc9c", "filename": "src/test/ui/unsafe/inline_asm.thir.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Funsafe%2Finline_asm.thir.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Funsafe%2Finline_asm.thir.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Funsafe%2Finline_asm.thir.stderr?ref=90f4521cfdfc85fc04759cfba2f86a6acc096cb3", "patch": "@@ -2,15 +2,15 @@ error[E0133]: use of inline assembly is unsafe and requires unsafe function or b\n   --> $DIR/inline_asm.rs:10:5\n    |\n LL |     asm!(\"nop\");\n-   |     ^^^^^^^^^^^^ use of inline assembly\n+   |     ^^^^^^^^^^^ use of inline assembly\n    |\n    = note: inline assembly is entirely unchecked and can cause undefined behavior\n \n error[E0133]: use of inline assembly is unsafe and requires unsafe function or block\n   --> $DIR/inline_asm.rs:11:5\n    |\n LL |     llvm_asm!(\"nop\");\n-   |     ^^^^^^^^^^^^^^^^^ use of inline assembly\n+   |     ^^^^^^^^^^^^^^^^ use of inline assembly\n    |\n    = note: inline assembly is entirely unchecked and can cause undefined behavior\n    = note: this error originates in the macro `llvm_asm` (in Nightly builds, run with -Z macro-backtrace for more info)"}, {"sha": "c5e2fd92f0441ac2e780fff3688c2546e360ec6b", "filename": "src/test/ui/while-let.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fwhile-let.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/90f4521cfdfc85fc04759cfba2f86a6acc096cb3/src%2Ftest%2Fui%2Fwhile-let.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fwhile-let.stderr?ref=90f4521cfdfc85fc04759cfba2f86a6acc096cb3", "patch": "@@ -7,7 +7,7 @@ LL |               while let $p = $e $b\n LL | /     foo!(_a, 1, {\n LL | |         println!(\"irrefutable pattern\");\n LL | |     });\n-   | |_______- in this macro invocation\n+   | |______- in this macro invocation\n    |\n    = note: `#[warn(irrefutable_let_patterns)]` on by default\n    = note: this pattern will always match, so the loop will never exit\n@@ -23,7 +23,7 @@ LL |               while let $p = $e $b\n LL | /     bar!(_a, 1, {\n LL | |         println!(\"irrefutable pattern\");\n LL | |     });\n-   | |_______- in this macro invocation\n+   | |______- in this macro invocation\n    |\n    = note: this pattern will always match, so the loop will never exit\n    = help: consider instead using a `loop { ... }` with a `let` inside it"}]}