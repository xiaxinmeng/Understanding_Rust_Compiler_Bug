{"sha": "6cdfd1c3cf3d58eee90b5034d4e2d702fdc0f8f5", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZjZGZkMWMzY2YzZDU4ZWVlOTBiNTAzNGQ0ZTJkNzAyZmRjMGY4ZjU=", "commit": {"author": {"name": "Jonas Schievink", "email": "jonasschievink@gmail.com", "date": "2020-05-18T22:39:50Z"}, "committer": {"name": "Jonas Schievink", "email": "jonasschievink@gmail.com", "date": "2020-05-20T21:54:50Z"}, "message": "Make `find_path_inner` a query\n\nThis eliminates any remaining performance problems in the\n\"Implement default members\" assist (at least that I've found).", "tree": {"sha": "d3ecd0fff9955da81d6d9b83f92ef6da9fa0b21c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d3ecd0fff9955da81d6d9b83f92ef6da9fa0b21c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6cdfd1c3cf3d58eee90b5034d4e2d702fdc0f8f5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6cdfd1c3cf3d58eee90b5034d4e2d702fdc0f8f5", "html_url": "https://github.com/rust-lang/rust/commit/6cdfd1c3cf3d58eee90b5034d4e2d702fdc0f8f5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6cdfd1c3cf3d58eee90b5034d4e2d702fdc0f8f5/comments", "author": {"login": "jonas-schievink", "id": 1786438, "node_id": "MDQ6VXNlcjE3ODY0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1786438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonas-schievink", "html_url": "https://github.com/jonas-schievink", "followers_url": "https://api.github.com/users/jonas-schievink/followers", "following_url": "https://api.github.com/users/jonas-schievink/following{/other_user}", "gists_url": "https://api.github.com/users/jonas-schievink/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonas-schievink/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonas-schievink/subscriptions", "organizations_url": "https://api.github.com/users/jonas-schievink/orgs", "repos_url": "https://api.github.com/users/jonas-schievink/repos", "events_url": "https://api.github.com/users/jonas-schievink/events{/privacy}", "received_events_url": "https://api.github.com/users/jonas-schievink/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jonas-schievink", "id": 1786438, "node_id": "MDQ6VXNlcjE3ODY0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1786438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonas-schievink", "html_url": "https://github.com/jonas-schievink", "followers_url": "https://api.github.com/users/jonas-schievink/followers", "following_url": "https://api.github.com/users/jonas-schievink/following{/other_user}", "gists_url": "https://api.github.com/users/jonas-schievink/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonas-schievink/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonas-schievink/subscriptions", "organizations_url": "https://api.github.com/users/jonas-schievink/orgs", "repos_url": "https://api.github.com/users/jonas-schievink/repos", "events_url": "https://api.github.com/users/jonas-schievink/events{/privacy}", "received_events_url": "https://api.github.com/users/jonas-schievink/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4677cea71994a593d56052767f625f46fd2e4a83", "url": "https://api.github.com/repos/rust-lang/rust/commits/4677cea71994a593d56052767f625f46fd2e4a83", "html_url": "https://github.com/rust-lang/rust/commit/4677cea71994a593d56052767f625f46fd2e4a83"}], "stats": {"total": 11, "additions": 7, "deletions": 4}, "files": [{"sha": "945a0025e504f7b71f240d9984ab6bc5344b3fbb", "filename": "crates/ra_hir_def/src/db.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/6cdfd1c3cf3d58eee90b5034d4e2d702fdc0f8f5/crates%2Fra_hir_def%2Fsrc%2Fdb.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6cdfd1c3cf3d58eee90b5034d4e2d702fdc0f8f5/crates%2Fra_hir_def%2Fsrc%2Fdb.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_def%2Fsrc%2Fdb.rs?ref=6cdfd1c3cf3d58eee90b5034d4e2d702fdc0f8f5", "patch": "@@ -17,6 +17,7 @@ use crate::{\n     item_scope::ItemInNs,\n     lang_item::{LangItemTarget, LangItems},\n     nameres::{raw::RawItems, CrateDefMap},\n+    path::ModPath,\n     visibility::Visibility,\n     AttrDefId, ConstId, ConstLoc, DefWithBodyId, EnumId, EnumLoc, FunctionId, FunctionLoc,\n     GenericDefId, ImplId, ImplLoc, ModuleId, StaticId, StaticLoc, StructId, StructLoc, TraitId,\n@@ -118,6 +119,9 @@ pub trait DefDatabase: InternDatabase + AstDatabase + Upcast<dyn AstDatabase> {\n         item: ItemInNs,\n         krate: CrateId,\n     ) -> Arc<[(ModuleId, Name, Visibility)]>;\n+\n+    #[salsa::invoke(find_path::find_path_inner_query)]\n+    fn find_path_inner(&self, item: ItemInNs, from: ModuleId, max_len: usize) -> Option<ModPath>;\n }\n \n fn crate_def_map_wait(db: &impl DefDatabase, krate: CrateId) -> Arc<CrateDefMap> {"}, {"sha": "4db7984730aa87eb281516565f57761b4083cd98", "filename": "crates/ra_hir_def/src/find_path.rs", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/6cdfd1c3cf3d58eee90b5034d4e2d702fdc0f8f5/crates%2Fra_hir_def%2Fsrc%2Ffind_path.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6cdfd1c3cf3d58eee90b5034d4e2d702fdc0f8f5/crates%2Fra_hir_def%2Fsrc%2Ffind_path.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_def%2Fsrc%2Ffind_path.rs?ref=6cdfd1c3cf3d58eee90b5034d4e2d702fdc0f8f5", "patch": "@@ -20,7 +20,7 @@ use crate::{\n /// *from where* you're referring to the item, hence the `from` parameter.\n pub fn find_path(db: &dyn DefDatabase, item: ItemInNs, from: ModuleId) -> Option<ModPath> {\n     let _p = profile(\"find_path\");\n-    find_path_inner(db, item, from, MAX_PATH_LEN)\n+    db.find_path_inner(item, from, MAX_PATH_LEN)\n }\n \n const MAX_PATH_LEN: usize = 15;\n@@ -49,7 +49,7 @@ impl ModPath {\n     }\n }\n \n-fn find_path_inner(\n+pub(crate) fn find_path_inner_query(\n     db: &dyn DefDatabase,\n     item: ItemInNs,\n     from: ModuleId,\n@@ -140,8 +140,7 @@ fn find_path_inner(\n     let mut best_path = None;\n     let mut best_path_len = max_len;\n     for (module_id, name) in importable_locations {\n-        let mut path = match find_path_inner(\n-            db,\n+        let mut path = match db.find_path_inner(\n             ItemInNs::Types(ModuleDefId::ModuleId(module_id)),\n             from,\n             best_path_len - 1,"}]}