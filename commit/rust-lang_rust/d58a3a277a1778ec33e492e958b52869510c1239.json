{"sha": "d58a3a277a1778ec33e492e958b52869510c1239", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ1OGEzYTI3N2ExNzc4ZWMzM2U0OTJlOTU4YjUyODY5NTEwYzEyMzk=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2020-08-26T13:07:06Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-08-26T13:07:06Z"}, "message": "Merge #5885\n\n5885: Make inlay hints colors more configurable r=matklad a=Veetaha\n\n**[BREAKING CHANGE]**\r\n\r\nTackles https://github.com/rust-analyzer/rust-analyzer/issues/5337#issuecomment-680018601 and generally related to #5337.\r\n\r\nAdded `foreground/background` color configurations with optional more specific overrides `foreground.(type|parameter|chaining)Hints`.\r\n\r\nOne problem I see is that the config keys are long and don't fit into the on-hover hints in the `settings.json` file entirely...\r\n\r\n<details>\r\n<summary>Demo</summary>\r\n\r\n![demo](https://user-images.githubusercontent.com/36276403/91238334-77fc3b00-e745-11ea-836b-2822015ece98.gif)\r\n\r\n</details>\n\nCo-authored-by: Veetaha <veetaha2@gmail.com>", "tree": {"sha": "101d27b02d5671aa6bd9f242be26281f13350f6c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/101d27b02d5671aa6bd9f242be26281f13350f6c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d58a3a277a1778ec33e492e958b52869510c1239", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJfRl56CRBK7hj4Ov3rIwAAdHIIAJr8iWoQUiFK+WI1Md4gjJfM\nn/KyknFTFsbcClEQB21mGARlQIaXSCQDeuPA4bnVhSHrlwMhLMnu/v0oTuawYAgE\n8JLvKp2yLqFNEiAiurIGDz4YzNRq4ZocsLr+Bjqurs6PU3mi6yQfzsXjWMJ+ZR1S\nj7+s1PlWv3DcU6rxhxN6ALg2Av8XgEBF4LX0BHEFVCoOfC7EML4LJHyjBcUGCT6n\n00hSfdZhUsVcZKLRTChnOemqBEyO7r29LN2utcWEzDPCpvT8ADaGV9kbct4KcqZr\n4W2SORdgnwMs6IiJlPdJNt78TmB/Wq0OgCy5l9zlhk3yVJO5t9CpL9dc+l1Y9j4=\n=oUWC\n-----END PGP SIGNATURE-----\n", "payload": "tree 101d27b02d5671aa6bd9f242be26281f13350f6c\nparent ad60b4e6ea1cbbb4c611f56833af90b43c4a5a3e\nparent 5b9a882edc20810641cb774240e5089e87dab82e\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1598447226 +0000\ncommitter GitHub <noreply@github.com> 1598447226 +0000\n\nMerge #5885\n\n5885: Make inlay hints colors more configurable r=matklad a=Veetaha\n\n**[BREAKING CHANGE]**\r\n\r\nTackles https://github.com/rust-analyzer/rust-analyzer/issues/5337#issuecomment-680018601 and generally related to #5337.\r\n\r\nAdded `foreground/background` color configurations with optional more specific overrides `foreground.(type|parameter|chaining)Hints`.\r\n\r\nOne problem I see is that the config keys are long and don't fit into the on-hover hints in the `settings.json` file entirely...\r\n\r\n<details>\r\n<summary>Demo</summary>\r\n\r\n![demo](https://user-images.githubusercontent.com/36276403/91238334-77fc3b00-e745-11ea-836b-2822015ece98.gif)\r\n\r\n</details>\n\nCo-authored-by: Veetaha <veetaha2@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d58a3a277a1778ec33e492e958b52869510c1239", "html_url": "https://github.com/rust-lang/rust/commit/d58a3a277a1778ec33e492e958b52869510c1239", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d58a3a277a1778ec33e492e958b52869510c1239/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ad60b4e6ea1cbbb4c611f56833af90b43c4a5a3e", "url": "https://api.github.com/repos/rust-lang/rust/commits/ad60b4e6ea1cbbb4c611f56833af90b43c4a5a3e", "html_url": "https://github.com/rust-lang/rust/commit/ad60b4e6ea1cbbb4c611f56833af90b43c4a5a3e"}, {"sha": "5b9a882edc20810641cb774240e5089e87dab82e", "url": "https://api.github.com/repos/rust-lang/rust/commits/5b9a882edc20810641cb774240e5089e87dab82e", "html_url": "https://github.com/rust-lang/rust/commit/5b9a882edc20810641cb774240e5089e87dab82e"}], "stats": {"total": 166, "additions": 117, "deletions": 49}, "files": [{"sha": "b15c9ee7f54a48aa3e72b15bf19401c5619b464a", "filename": "docs/user/manual.adoc", "status": "modified", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/d58a3a277a1778ec33e492e958b52869510c1239/docs%2Fuser%2Fmanual.adoc", "raw_url": "https://github.com/rust-lang/rust/raw/d58a3a277a1778ec33e492e958b52869510c1239/docs%2Fuser%2Fmanual.adoc", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/docs%2Fuser%2Fmanual.adoc?ref=d58a3a277a1778ec33e492e958b52869510c1239", "patch": "@@ -367,6 +367,30 @@ include::./generated_assists.adoc[]\n \n == Editor Features\n === VS Code\n+\n+==== Color configurations\n+\n+It is possible to change the foreground/background color of inlay hints. Just add this to your\n+`settings.json`:\n+\n+[source,jsonc]\n+----\n+{\n+  \"workbench.colorCustomizations\": {\n+    // Name of the theme you are currently using\n+    \"[Default Dark+]\": {\n+      \"rust_analyzer.inlayHints.foreground\": \"#868686f0\",\n+      \"rust_analyzer.inlayHints.background\": \"#3d3d3d48\",\n+\n+      // Overrides for specific kinds of inlay hints\n+      \"rust_analyzer.inlayHints.foreground.typeHints\": \"#fdb6fdf0\",\n+      \"rust_analyzer.inlayHints.foreground.paramHints\": \"#fdb6fdf0\",\n+      \"rust_analyzer.inlayHints.background.chainingHints\": \"#6b0c0c81\"\n+    }\n+  }\n+}\n+----\n+\n ==== Special `when` clause context for keybindings.\n You may use `inRustProject` context to configure keybindings for rust projects only. For example:\n [source,json]"}, {"sha": "93d94ed129c5bcb899a3505fc4f0c2fd6b3ba50a", "filename": "editors/code/package.json", "status": "modified", "additions": 65, "deletions": 2, "changes": 67, "blob_url": "https://github.com/rust-lang/rust/blob/d58a3a277a1778ec33e492e958b52869510c1239/editors%2Fcode%2Fpackage.json", "raw_url": "https://github.com/rust-lang/rust/raw/d58a3a277a1778ec33e492e958b52869510c1239/editors%2Fcode%2Fpackage.json", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fpackage.json?ref=d58a3a277a1778ec33e492e958b52869510c1239", "patch": "@@ -712,14 +712,77 @@\n         ],\n         \"colors\": [\n             {\n-                \"id\": \"rust_analyzer.inlayHint\",\n-                \"description\": \"Color for inlay hints\",\n+                \"id\": \"rust_analyzer.inlayHints.foreground\",\n+                \"description\": \"Foreground color of inlay hints (is overriden by more specific rust_analyzer.inlayHints.foreground.* configurations)\",\n                 \"defaults\": {\n                     \"dark\": \"#A0A0A0F0\",\n                     \"light\": \"#747474\",\n                     \"highContrast\": \"#BEBEBE\"\n                 }\n             },\n+            {\n+                \"id\": \"rust_analyzer.inlayHints.background\",\n+                \"description\": \"Background color of inlay hints (is overriden by more specific rust_analyzer.inlayHints.background.* configurations)\",\n+                \"defaults\": {\n+                    \"dark\": \"#11223300\",\n+                    \"light\": \"#11223300\",\n+                    \"highContrast\": \"#11223300\"\n+                }\n+            },\n+            {\n+                \"id\": \"rust_analyzer.inlayHints.foreground.typeHints\",\n+                \"description\": \"Foreground color of inlay type hints for variables (overrides rust_analyzer.inlayHints.foreground)\",\n+                \"defaults\": {\n+                    \"dark\": \"rust_analyzer.inlayHints.foreground\",\n+                    \"light\": \"rust_analyzer.inlayHints.foreground\",\n+                    \"highContrast\": \"rust_analyzer.inlayHints.foreground\"\n+                }\n+            },\n+            {\n+                \"id\": \"rust_analyzer.inlayHints.foreground.chainingHints\",\n+                \"description\": \"Foreground color of inlay type hints for method chains (overrides rust_analyzer.inlayHints.foreground)\",\n+                \"defaults\": {\n+                    \"dark\": \"rust_analyzer.inlayHints.foreground\",\n+                    \"light\": \"rust_analyzer.inlayHints.foreground\",\n+                    \"highContrast\": \"rust_analyzer.inlayHints.foreground\"\n+                }\n+            },\n+            {\n+                \"id\": \"rust_analyzer.inlayHints.foreground.parameterHints\",\n+                \"description\": \"Foreground color of function parameter name inlay hints at the call site (overrides rust_analyzer.inlayHints.foreground)\",\n+                \"defaults\": {\n+                    \"dark\": \"rust_analyzer.inlayHints.foreground\",\n+                    \"light\": \"rust_analyzer.inlayHints.foreground\",\n+                    \"highContrast\": \"rust_analyzer.inlayHints.foreground\"\n+                }\n+            },\n+            {\n+                \"id\": \"rust_analyzer.inlayHints.background.typeHints\",\n+                \"description\": \"Background color of inlay type hints for variables (overrides rust_analyzer.inlayHints.background)\",\n+                \"defaults\": {\n+                    \"dark\": \"rust_analyzer.inlayHints.background\",\n+                    \"light\": \"rust_analyzer.inlayHints.background\",\n+                    \"highContrast\": \"rust_analyzer.inlayHints.background\"\n+                }\n+            },\n+            {\n+                \"id\": \"rust_analyzer.inlayHints.background.chainingHints\",\n+                \"description\": \"Background color of inlay type hints for method chains (overrides rust_analyzer.inlayHints.background)\",\n+                \"defaults\": {\n+                    \"dark\": \"rust_analyzer.inlayHints.background\",\n+                    \"light\": \"rust_analyzer.inlayHints.background\",\n+                    \"highContrast\": \"rust_analyzer.inlayHints.background\"\n+                }\n+            },\n+            {\n+                \"id\": \"rust_analyzer.inlayHints.background.parameterHints\",\n+                \"description\": \"Background color of function parameter name inlay hints at the call site (overrides rust_analyzer.inlayHints.background)\",\n+                \"defaults\": {\n+                    \"dark\": \"rust_analyzer.inlayHints.background\",\n+                    \"light\": \"rust_analyzer.inlayHints.background\",\n+                    \"highContrast\": \"rust_analyzer.inlayHints.background\"\n+                }\n+            },\n             {\n                 \"id\": \"rust_analyzer.syntaxTreeBorder\",\n                 \"description\": \"Color of the border displayed in the Rust source code for the selected syntax node (see \\\"Show Syntax Tree\\\" command)\","}, {"sha": "7b481fc72f66caba86eace3d1995224728852907", "filename": "editors/code/src/inlay_hints.ts", "status": "modified", "additions": 28, "deletions": 47, "changes": 75, "blob_url": "https://github.com/rust-lang/rust/blob/d58a3a277a1778ec33e492e958b52869510c1239/editors%2Fcode%2Fsrc%2Finlay_hints.ts", "raw_url": "https://github.com/rust-lang/rust/raw/d58a3a277a1778ec33e492e958b52869510c1239/editors%2Fcode%2Fsrc%2Finlay_hints.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Finlay_hints.ts?ref=d58a3a277a1778ec33e492e958b52869510c1239", "patch": "@@ -39,54 +39,35 @@ export function activateInlayHints(ctx: Ctx) {\n     maybeUpdater.onConfigChange();\n }\n \n-\n-const typeHints = {\n-    decorationType: vscode.window.createTextEditorDecorationType({\n-        after: {\n-            color: new vscode.ThemeColor('rust_analyzer.inlayHint'),\n-            fontStyle: \"normal\",\n-        }\n-    }),\n-\n-    toDecoration(hint: ra.InlayHint.TypeHint, conv: lc.Protocol2CodeConverter): vscode.DecorationOptions {\n-        return {\n-            range: conv.asRange(hint.range),\n-            renderOptions: { after: { contentText: `: ${hint.label}` } }\n-        };\n-    }\n-};\n-\n-const paramHints = {\n-    decorationType: vscode.window.createTextEditorDecorationType({\n-        before: {\n-            color: new vscode.ThemeColor('rust_analyzer.inlayHint'),\n-            fontStyle: \"normal\",\n-        }\n-    }),\n-\n-    toDecoration(hint: ra.InlayHint.ParamHint, conv: lc.Protocol2CodeConverter): vscode.DecorationOptions {\n-        return {\n-            range: conv.asRange(hint.range),\n-            renderOptions: { before: { contentText: `${hint.label}: ` } }\n-        };\n-    }\n-};\n-\n-const chainingHints = {\n-    decorationType: vscode.window.createTextEditorDecorationType({\n-        after: {\n-            color: new vscode.ThemeColor('rust_analyzer.inlayHint'),\n-            fontStyle: \"normal\",\n+const typeHints = createHintStyle(\"type\");\n+const paramHints = createHintStyle(\"parameter\");\n+const chainingHints = createHintStyle(\"chaining\");\n+\n+function createHintStyle(hintKind: \"type\" | \"parameter\" | \"chaining\") {\n+    const [pos, render] = ({\n+        type: [\"after\", (label: string) => `: ${label}`],\n+        parameter: [\"before\", (label: string) => `${label}: `],\n+        chaining: [\"after\", (label: string) => `: ${label}`],\n+    } as const)[hintKind];\n+\n+    const fg = new vscode.ThemeColor(`rust_analyzer.inlayHints.foreground.${hintKind}Hints`);\n+    const bg = new vscode.ThemeColor(`rust_analyzer.inlayHints.background.${hintKind}Hints`);\n+    return {\n+        decorationType: vscode.window.createTextEditorDecorationType({\n+            [pos]: {\n+                color: fg,\n+                backgroundColor: bg,\n+                fontStyle: \"normal\",\n+            },\n+        }),\n+        toDecoration(hint: ra.InlayHint, conv: lc.Protocol2CodeConverter): vscode.DecorationOptions {\n+            return {\n+                range: conv.asRange(hint.range),\n+                renderOptions: { [pos]: { contentText: render(hint.label) } }\n+            };\n         }\n-    }),\n-\n-    toDecoration(hint: ra.InlayHint.ChainingHint, conv: lc.Protocol2CodeConverter): vscode.DecorationOptions {\n-        return {\n-            range: conv.asRange(hint.range),\n-            renderOptions: { after: { contentText: ` ${hint.label}` } }\n-        };\n-    }\n-};\n+    };\n+}\n \n class HintsUpdater implements Disposable {\n     private sourceFiles = new Map<string, RustSourceFile>(); // map Uri -> RustSourceFile"}]}