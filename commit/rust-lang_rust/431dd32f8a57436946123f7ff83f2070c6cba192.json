{"sha": "431dd32f8a57436946123f7ff83f2070c6cba192", "node_id": "C_kwDOAAsO6NoAKDQzMWRkMzJmOGE1NzQzNjk0NjEyM2Y3ZmY4M2YyMDcwYzZjYmExOTI", "commit": {"author": {"name": "hkalbasi", "email": "hamidrezakalbasi@protonmail.com", "date": "2023-05-14T17:35:33Z"}, "committer": {"name": "hkalbasi", "email": "hamidrezakalbasi@protonmail.com", "date": "2023-05-14T17:35:33Z"}, "message": "Unsized temporary is not an implementation error", "tree": {"sha": "dd7f1484722321c021121642bf48a94571856461", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/dd7f1484722321c021121642bf48a94571856461"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/431dd32f8a57436946123f7ff83f2070c6cba192", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/431dd32f8a57436946123f7ff83f2070c6cba192", "html_url": "https://github.com/rust-lang/rust/commit/431dd32f8a57436946123f7ff83f2070c6cba192", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/431dd32f8a57436946123f7ff83f2070c6cba192/comments", "author": {"login": "HKalbasi", "id": 45197576, "node_id": "MDQ6VXNlcjQ1MTk3NTc2", "avatar_url": "https://avatars.githubusercontent.com/u/45197576?v=4", "gravatar_id": "", "url": "https://api.github.com/users/HKalbasi", "html_url": "https://github.com/HKalbasi", "followers_url": "https://api.github.com/users/HKalbasi/followers", "following_url": "https://api.github.com/users/HKalbasi/following{/other_user}", "gists_url": "https://api.github.com/users/HKalbasi/gists{/gist_id}", "starred_url": "https://api.github.com/users/HKalbasi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/HKalbasi/subscriptions", "organizations_url": "https://api.github.com/users/HKalbasi/orgs", "repos_url": "https://api.github.com/users/HKalbasi/repos", "events_url": "https://api.github.com/users/HKalbasi/events{/privacy}", "received_events_url": "https://api.github.com/users/HKalbasi/received_events", "type": "User", "site_admin": false}, "committer": {"login": "HKalbasi", "id": 45197576, "node_id": "MDQ6VXNlcjQ1MTk3NTc2", "avatar_url": "https://avatars.githubusercontent.com/u/45197576?v=4", "gravatar_id": "", "url": "https://api.github.com/users/HKalbasi", "html_url": "https://github.com/HKalbasi", "followers_url": "https://api.github.com/users/HKalbasi/followers", "following_url": "https://api.github.com/users/HKalbasi/following{/other_user}", "gists_url": "https://api.github.com/users/HKalbasi/gists{/gist_id}", "starred_url": "https://api.github.com/users/HKalbasi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/HKalbasi/subscriptions", "organizations_url": "https://api.github.com/users/HKalbasi/orgs", "repos_url": "https://api.github.com/users/HKalbasi/repos", "events_url": "https://api.github.com/users/HKalbasi/events{/privacy}", "received_events_url": "https://api.github.com/users/HKalbasi/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "51e8b8ff14de3507d5e21d80b750577da52b6fdd", "url": "https://api.github.com/repos/rust-lang/rust/commits/51e8b8ff14de3507d5e21d80b750577da52b6fdd", "html_url": "https://github.com/rust-lang/rust/commit/51e8b8ff14de3507d5e21d80b750577da52b6fdd"}], "stats": {"total": 23, "additions": 22, "deletions": 1}, "files": [{"sha": "2aac1cc057d3655eda42c322f1958334fa8b6e2c", "filename": "crates/hir-ty/src/consteval/tests.rs", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/431dd32f8a57436946123f7ff83f2070c6cba192/crates%2Fhir-ty%2Fsrc%2Fconsteval%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/431dd32f8a57436946123f7ff83f2070c6cba192/crates%2Fhir-ty%2Fsrc%2Fconsteval%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir-ty%2Fsrc%2Fconsteval%2Ftests.rs?ref=431dd32f8a57436946123f7ff83f2070c6cba192", "patch": "@@ -2066,3 +2066,22 @@ fn type_error() {\n         |e| matches!(e, ConstEvalError::MirLowerError(MirLowerError::TypeMismatch(_))),\n     );\n }\n+\n+#[test]\n+fn unsized_local() {\n+    check_fail(\n+        r#\"\n+    //- minicore: coerce_unsized, index, slice\n+    const fn x() -> SomeUnknownTypeThatDereferenceToSlice {\n+        SomeUnknownTypeThatDereferenceToSlice\n+    }\n+\n+    const GOAL: u16 = {\n+        let y = x();\n+        let z: &[u16] = &y;\n+        z[1]\n+    };\n+    \"#,\n+        |e| matches!(e, ConstEvalError::MirLowerError(MirLowerError::UnsizedTemporary(_))),\n+    );\n+}"}, {"sha": "627c36dca92f0787ae0b67ab9a2091bb4929ec6f", "filename": "crates/hir-ty/src/mir/lower.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/431dd32f8a57436946123f7ff83f2070c6cba192/crates%2Fhir-ty%2Fsrc%2Fmir%2Flower.rs", "raw_url": "https://github.com/rust-lang/rust/raw/431dd32f8a57436946123f7ff83f2070c6cba192/crates%2Fhir-ty%2Fsrc%2Fmir%2Flower.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir-ty%2Fsrc%2Fmir%2Flower.rs?ref=431dd32f8a57436946123f7ff83f2070c6cba192", "patch": "@@ -75,6 +75,7 @@ pub enum MirLowerError {\n     RecordLiteralWithoutPath,\n     UnresolvedMethod(String),\n     UnresolvedField,\n+    UnsizedTemporary(Ty),\n     MissingFunctionDefinition,\n     TypeMismatch(TypeMismatch),\n     /// This should be never happen. Type mismatch should catch everything.\n@@ -108,6 +109,7 @@ impl MirLowerError {\n                 }\n             }\n             MirLowerError::LayoutError(_)\n+            | MirLowerError::UnsizedTemporary(_)\n             | MirLowerError::IncompleteExpr\n             | MirLowerError::UnaccessableLocal\n             | MirLowerError::TraitFunctionDefinition(_, _)\n@@ -199,7 +201,7 @@ impl<'ctx> MirLowerCtx<'ctx> {\n \n     fn temp(&mut self, ty: Ty) -> Result<LocalId> {\n         if matches!(ty.kind(Interner), TyKind::Slice(_) | TyKind::Dyn(_)) {\n-            implementation_error!(\"unsized temporaries\");\n+            return Err(MirLowerError::UnsizedTemporary(ty));\n         }\n         Ok(self.result.locals.alloc(Local { ty }))\n     }"}]}