{"sha": "0a0d07a1fc712241ea9215a621d3f4fa9162ee20", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBhMGQwN2ExZmM3MTIyNDFlYTkyMTVhNjIxZDNmNGZhOTE2MmVlMjA=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-11-20T11:58:30Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-11-20T11:58:30Z"}, "message": "Rollup merge of #66526 - estebank:async-fn-trait-information, r=Centril\n\nAdd more context to `async fn` trait error\n\nFollow up to #65937. Fix #65899.", "tree": {"sha": "712d01bc3c26819c7c0b924d7bf4f7a66cd5475f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/712d01bc3c26819c7c0b924d7bf4f7a66cd5475f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0a0d07a1fc712241ea9215a621d3f4fa9162ee20", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJd1SpmCRBK7hj4Ov3rIwAAdHIIAKgIwrEa599hX5cVdXG0V2g9\nXWniPM9q4Ys1T2uqVJqQ5KxRnnCXbpmYWbH03CYS1bL/6esY2YvDSdEULHrxEWEG\nEYuz54FnzQkRSiGcuccO7v28BvlUvExARhissAKTXwqSYJMQiYkYORkL/9Aquq0t\ncm4BIDxPjdR9aGw681d9fUoLXQhpZHci20yHWhShpzBrAgoZWsh8jT9bSZhlks1C\nVqSb6fYqNW1Le5oyRp4ALUCzcnQinQeFsS1/r1xPXWvQY09lETj5EedllH5KaLPp\nQaUpnDZQq4q9KYtO3xqACLYPoaI3Q6vhOz4Y7RYjXtFknFXSC/jN5dR7FwXWoDM=\n=RM4E\n-----END PGP SIGNATURE-----\n", "payload": "tree 712d01bc3c26819c7c0b924d7bf4f7a66cd5475f\nparent 2d6e3764b4e2fecf1b1a8c3a174e93906d555703\nparent a079159c64bfd7b379a9c574d21dbcedb78c5b0c\nauthor Mazdak Farrokhzad <twingoow@gmail.com> 1574251110 +0100\ncommitter GitHub <noreply@github.com> 1574251110 +0100\n\nRollup merge of #66526 - estebank:async-fn-trait-information, r=Centril\n\nAdd more context to `async fn` trait error\n\nFollow up to #65937. Fix #65899.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0a0d07a1fc712241ea9215a621d3f4fa9162ee20", "html_url": "https://github.com/rust-lang/rust/commit/0a0d07a1fc712241ea9215a621d3f4fa9162ee20", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0a0d07a1fc712241ea9215a621d3f4fa9162ee20/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2d6e3764b4e2fecf1b1a8c3a174e93906d555703", "url": "https://api.github.com/repos/rust-lang/rust/commits/2d6e3764b4e2fecf1b1a8c3a174e93906d555703", "html_url": "https://github.com/rust-lang/rust/commit/2d6e3764b4e2fecf1b1a8c3a174e93906d555703"}, {"sha": "a079159c64bfd7b379a9c574d21dbcedb78c5b0c", "url": "https://api.github.com/repos/rust-lang/rust/commits/a079159c64bfd7b379a9c574d21dbcedb78c5b0c", "html_url": "https://github.com/rust-lang/rust/commit/a079159c64bfd7b379a9c574d21dbcedb78c5b0c"}], "stats": {"total": 100, "additions": 96, "deletions": 4}, "files": [{"sha": "b11fe33880c049f495887df38e70b8c1be0de159", "filename": "src/librustc_error_codes/error_codes.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0a0d07a1fc712241ea9215a621d3f4fa9162ee20/src%2Flibrustc_error_codes%2Ferror_codes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0a0d07a1fc712241ea9215a621d3f4fa9162ee20/src%2Flibrustc_error_codes%2Ferror_codes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_error_codes%2Ferror_codes.rs?ref=0a0d07a1fc712241ea9215a621d3f4fa9162ee20", "patch": "@@ -383,6 +383,7 @@ E0700: include_str!(\"./error_codes/E0700.md\"),\n E0701: include_str!(\"./error_codes/E0701.md\"),\n E0704: include_str!(\"./error_codes/E0704.md\"),\n E0705: include_str!(\"./error_codes/E0705.md\"),\n+E0706: include_str!(\"./error_codes/E0706.md\"),\n E0712: include_str!(\"./error_codes/E0712.md\"),\n E0713: include_str!(\"./error_codes/E0713.md\"),\n E0714: include_str!(\"./error_codes/E0714.md\"),\n@@ -595,7 +596,6 @@ E0744: include_str!(\"./error_codes/E0744.md\"),\n     E0696, // `continue` pointing to a labeled block\n //  E0702, // replaced with a generic attribute input check\n     E0703, // invalid ABI\n-    E0706, // `async fn` in trait\n //  E0707, // multiple elided lifetimes used in arguments of `async fn`\n     E0708, // `async` non-`move` closures with parameters are not currently\n            // supported"}, {"sha": "bee9219af7cf60c61546840168a4e551d0b074cb", "filename": "src/librustc_error_codes/error_codes/E0706.md", "status": "added", "additions": 57, "deletions": 0, "changes": 57, "blob_url": "https://github.com/rust-lang/rust/blob/0a0d07a1fc712241ea9215a621d3f4fa9162ee20/src%2Flibrustc_error_codes%2Ferror_codes%2FE0706.md", "raw_url": "https://github.com/rust-lang/rust/raw/0a0d07a1fc712241ea9215a621d3f4fa9162ee20/src%2Flibrustc_error_codes%2Ferror_codes%2FE0706.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_error_codes%2Ferror_codes%2FE0706.md?ref=0a0d07a1fc712241ea9215a621d3f4fa9162ee20", "patch": "@@ -0,0 +1,57 @@\n+ `async fn`s are not yet supported in traits in Rust.\n+\n+Erroneous code example:\n+\n+```compile_fail,edition2018\n+trait T {\n+    // Neither case is currently supported.\n+    async fn foo() {}\n+    async fn bar(&self) {}\n+}\n+```\n+\n+`async fn`s return an `impl Future`, making the following two examples equivalent:\n+\n+```edition2018,ignore (example-of-desugaring-equivalence)\n+async fn foo() -> User {\n+    unimplemented!()\n+}\n+// The async fn above gets desugared as follows:\n+fn foo(&self) -> impl Future<Output = User> + '_ {\n+    unimplemented!()\n+}\n+```\n+\n+But when it comes to supporting this in traits, there are [a few implementation\n+issues][async-is-hard]. One of them is returning `impl Trait` in traits is not supported,\n+as it would require [Generic Associated Types] to be supported:\n+\n+```edition2018,ignore (example-of-desugaring-equivalence)\n+impl MyDatabase {\n+    async fn get_user(&self) -> User {\n+        unimplemented!()\n+    }\n+}\n+\n+impl MyDatabase {\n+    fn get_user(&self) -> impl Future<Output = User> + '_ {\n+        unimplemented!()\n+    }\n+}\n+```\n+\n+Until these issues are resolved, you can use the [`async-trait` crate], allowing you to use\n+`async fn` in traits by desugaring to \"boxed futures\"\n+(`Pin<Box<dyn Future + Send + 'async>>`).\n+\n+Note that using these trait methods will result in a heap allocation per-function-call. This is not\n+a significant cost for the vast majority of applications, but should be considered when deciding\n+whether to use this functionality in the public API of a low-level function that is expected to be\n+called millions of times a second.\n+\n+You might be interested in visiting the [async book] for further information.\n+\n+[`async-trait` crate]: https://crates.io/crates/async-trait\n+[async-is-hard]: https://smallcultfollowing.com/babysteps/blog/2019/10/26/async-fn-in-traits-are-hard/\n+[Generic Associated Types]: https://github.com/rust-lang/rust/issues/44265\n+[async book]: https://rust-lang.github.io/async-book/07_workarounds/06_async_in_traits.html"}, {"sha": "c4032ec5dd0dba67110440e051d6d1c6bc7d8bfd", "filename": "src/librustc_passes/ast_validation.rs", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/0a0d07a1fc712241ea9215a621d3f4fa9162ee20/src%2Flibrustc_passes%2Fast_validation.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0a0d07a1fc712241ea9215a621d3f4fa9162ee20/src%2Flibrustc_passes%2Fast_validation.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_passes%2Fast_validation.rs?ref=0a0d07a1fc712241ea9215a621d3f4fa9162ee20", "patch": "@@ -173,8 +173,11 @@ impl<'a> AstValidator<'a> {\n \n     fn check_trait_fn_not_async(&self, span: Span, asyncness: IsAsync) {\n         if asyncness.is_async() {\n-            struct_span_err!(self.session, span, E0706,\n-                             \"trait fns cannot be declared `async`\").emit()\n+            struct_span_err!(self.session, span, E0706, \"trait fns cannot be declared `async`\")\n+                .note(\"`async` trait functions are not currently supported\")\n+                .note(\"consider using the `async-trait` crate: \\\n+                       https://crates.io/crates/async-trait\")\n+                .emit();\n         }\n     }\n "}, {"sha": "786100e916da02ff42273a51662f8327c8168d12", "filename": "src/test/ui/async-await/async-trait-fn.rs", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/0a0d07a1fc712241ea9215a621d3f4fa9162ee20/src%2Ftest%2Fui%2Fasync-await%2Fasync-trait-fn.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0a0d07a1fc712241ea9215a621d3f4fa9162ee20/src%2Ftest%2Fui%2Fasync-await%2Fasync-trait-fn.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fasync-await%2Fasync-trait-fn.rs?ref=0a0d07a1fc712241ea9215a621d3f4fa9162ee20", "patch": "@@ -0,0 +1,7 @@\n+// edition:2018\n+trait T {\n+    async fn foo() {} //~ ERROR trait fns cannot be declared `async`\n+    async fn bar(&self) {} //~ ERROR trait fns cannot be declared `async`\n+}\n+\n+fn main() {}"}, {"sha": "9acfa2cc0691294b5de863e4bcb7d1d0aabe96b7", "filename": "src/test/ui/async-await/async-trait-fn.stderr", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/0a0d07a1fc712241ea9215a621d3f4fa9162ee20/src%2Ftest%2Fui%2Fasync-await%2Fasync-trait-fn.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/0a0d07a1fc712241ea9215a621d3f4fa9162ee20/src%2Ftest%2Fui%2Fasync-await%2Fasync-trait-fn.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fasync-await%2Fasync-trait-fn.stderr?ref=0a0d07a1fc712241ea9215a621d3f4fa9162ee20", "patch": "@@ -0,0 +1,21 @@\n+error[E0706]: trait fns cannot be declared `async`\n+  --> $DIR/async-trait-fn.rs:3:5\n+   |\n+LL |     async fn foo() {}\n+   |     ^^^^^^^^^^^^^^^^^\n+   |\n+   = note: `async` trait functions are not currently supported\n+   = note: consider using the `async-trait` crate: https://crates.io/crates/async-trait\n+\n+error[E0706]: trait fns cannot be declared `async`\n+  --> $DIR/async-trait-fn.rs:4:5\n+   |\n+LL |     async fn bar(&self) {}\n+   |     ^^^^^^^^^^^^^^^^^^^^^^\n+   |\n+   = note: `async` trait functions are not currently supported\n+   = note: consider using the `async-trait` crate: https://crates.io/crates/async-trait\n+\n+error: aborting due to 2 previous errors\n+\n+For more information about this error, try `rustc --explain E0706`."}, {"sha": "bb09ee9a9329633eac10d4738506d82582ca4d98", "filename": "src/test/ui/async-await/edition-deny-async-fns-2015.stderr", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/0a0d07a1fc712241ea9215a621d3f4fa9162ee20/src%2Ftest%2Fui%2Fasync-await%2Fedition-deny-async-fns-2015.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/0a0d07a1fc712241ea9215a621d3f4fa9162ee20/src%2Ftest%2Fui%2Fasync-await%2Fedition-deny-async-fns-2015.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fasync-await%2Fedition-deny-async-fns-2015.stderr?ref=0a0d07a1fc712241ea9215a621d3f4fa9162ee20", "patch": "@@ -57,7 +57,11 @@ error[E0706]: trait fns cannot be declared `async`\n    |\n LL |     async fn foo() {}\n    |     ^^^^^^^^^^^^^^^^^\n+   |\n+   = note: `async` trait functions are not currently supported\n+   = note: consider using the `async-trait` crate: https://crates.io/crates/async-trait\n \n error: aborting due to 10 previous errors\n \n-For more information about this error, try `rustc --explain E0670`.\n+Some errors have detailed explanations: E0670, E0706.\n+For more information about an error, try `rustc --explain E0670`."}]}