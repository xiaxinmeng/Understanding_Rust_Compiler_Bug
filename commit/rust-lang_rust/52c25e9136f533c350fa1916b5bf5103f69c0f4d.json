{"sha": "52c25e9136f533c350fa1916b5bf5103f69c0f4d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjUyYzI1ZTkxMzZmNTMzYzM1MGZhMTkxNmI1YmY1MTAzZjY5YzBmNGQ=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-03-14T15:01:01Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-03-14T15:01:01Z"}, "message": "Auto merge of #6895 - iobtl:reformat_unnecessary_cast, r=llogiq\n\nreplace span_lint with span_lint_and_sugg along with error message\n\nfixes: #6874\nchangelog: none\n\napologies if this may not be the most idiomatic way of doing it, any advice on changes (if any) would be greatly appreciated.", "tree": {"sha": "9611231d57df39fc5d472fe4f9d47e414012a876", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9611231d57df39fc5d472fe4f9d47e414012a876"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/52c25e9136f533c350fa1916b5bf5103f69c0f4d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/52c25e9136f533c350fa1916b5bf5103f69c0f4d", "html_url": "https://github.com/rust-lang/rust/commit/52c25e9136f533c350fa1916b5bf5103f69c0f4d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/52c25e9136f533c350fa1916b5bf5103f69c0f4d/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "781de34222a7606932a0485670537c1413616246", "url": "https://api.github.com/repos/rust-lang/rust/commits/781de34222a7606932a0485670537c1413616246", "html_url": "https://github.com/rust-lang/rust/commit/781de34222a7606932a0485670537c1413616246"}, {"sha": "1054eb0c853aefec9787b57e103d3a1432169263", "url": "https://api.github.com/repos/rust-lang/rust/commits/1054eb0c853aefec9787b57e103d3a1432169263", "html_url": "https://github.com/rust-lang/rust/commit/1054eb0c853aefec9787b57e103d3a1432169263"}], "stats": {"total": 26, "additions": 19, "deletions": 7}, "files": [{"sha": "c43bbf3294995d11761c89286a39a44132f4bbe5", "filename": "clippy_lints/src/casts/unnecessary_cast.rs", "status": "modified", "additions": 14, "deletions": 2, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/52c25e9136f533c350fa1916b5bf5103f69c0f4d/clippy_lints%2Fsrc%2Fcasts%2Funnecessary_cast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/52c25e9136f533c350fa1916b5bf5103f69c0f4d/clippy_lints%2Fsrc%2Fcasts%2Funnecessary_cast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fcasts%2Funnecessary_cast.rs?ref=52c25e9136f533c350fa1916b5bf5103f69c0f4d", "patch": "@@ -7,7 +7,7 @@ use rustc_middle::ty::{self, FloatTy, InferTy, Ty};\n \n use if_chain::if_chain;\n \n-use crate::utils::{numeric_literal::NumericLiteral, snippet_opt, span_lint, span_lint_and_sugg};\n+use crate::utils::{numeric_literal::NumericLiteral, snippet_opt, span_lint_and_sugg};\n \n use super::UNNECESSARY_CAST;\n \n@@ -44,16 +44,28 @@ pub(super) fn check(\n                 lint_unnecessary_cast(cx, expr, &literal_str, cast_from, cast_to);\n             },\n             LitKind::Int(_, LitIntType::Unsuffixed) | LitKind::Float(_, LitFloatType::Unsuffixed) => {},\n+            LitKind::Int(_, LitIntType::Signed(_) | LitIntType::Unsigned(_))\n+            | LitKind::Float(_, LitFloatType::Suffixed(_))\n+                if cast_from.kind() == cast_to.kind() =>\n+            {\n+                if let Some(src) = snippet_opt(cx, lit.span) {\n+                    let num_lit = NumericLiteral::from_lit_kind(&src, &lit.node).unwrap();\n+                    lint_unnecessary_cast(cx, expr, num_lit.integer, cast_from, cast_to);\n+                }\n+            },\n             _ => {\n                 if cast_from.kind() == cast_to.kind() && !in_external_macro(cx.sess(), expr.span) {\n-                    span_lint(\n+                    span_lint_and_sugg(\n                         cx,\n                         UNNECESSARY_CAST,\n                         expr.span,\n                         &format!(\n                             \"casting to the same type is unnecessary (`{}` -> `{}`)\",\n                             cast_from, cast_to\n                         ),\n+                        \"try\",\n+                        literal_str,\n+                        Applicability::MachineApplicable,\n                     );\n                     return true;\n                 }"}, {"sha": "70aa448af68ee4774dc0a0d4762f6e20bb538baa", "filename": "tests/ui/unnecessary_cast.stderr", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/52c25e9136f533c350fa1916b5bf5103f69c0f4d/tests%2Fui%2Funnecessary_cast.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/52c25e9136f533c350fa1916b5bf5103f69c0f4d/tests%2Fui%2Funnecessary_cast.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Funnecessary_cast.stderr?ref=52c25e9136f533c350fa1916b5bf5103f69c0f4d", "patch": "@@ -1,22 +1,22 @@\n-error: casting to the same type is unnecessary (`i32` -> `i32`)\n+error: casting integer literal to `i32` is unnecessary\n   --> $DIR/unnecessary_cast.rs:6:5\n    |\n LL |     1i32 as i32;\n-   |     ^^^^^^^^^^^\n+   |     ^^^^^^^^^^^ help: try: `1_i32`\n    |\n    = note: `-D clippy::unnecessary-cast` implied by `-D warnings`\n \n-error: casting to the same type is unnecessary (`f32` -> `f32`)\n+error: casting float literal to `f32` is unnecessary\n   --> $DIR/unnecessary_cast.rs:7:5\n    |\n LL |     1f32 as f32;\n-   |     ^^^^^^^^^^^\n+   |     ^^^^^^^^^^^ help: try: `1_f32`\n \n error: casting to the same type is unnecessary (`bool` -> `bool`)\n   --> $DIR/unnecessary_cast.rs:8:5\n    |\n LL |     false as bool;\n-   |     ^^^^^^^^^^^^^\n+   |     ^^^^^^^^^^^^^ help: try: `false`\n \n error: aborting due to 3 previous errors\n "}]}