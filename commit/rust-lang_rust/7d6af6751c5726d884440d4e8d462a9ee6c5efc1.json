{"sha": "7d6af6751c5726d884440d4e8d462a9ee6c5efc1", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdkNmFmNjc1MWM1NzI2ZDg4NDQ0MGQ0ZThkNDYyYTllZTZjNWVmYzE=", "commit": {"author": {"name": "Dylan DPC", "email": "dylan.dpc@gmail.com", "date": "2021-03-27T19:37:13Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-03-27T19:37:13Z"}, "message": "Rollup merge of #83555 - m-ou-se:inline-io-error-new-const, r=jackh726\n\nAdd #[inline] to io::Error methods\n\nFixes #82812", "tree": {"sha": "334eb1b9a4ec064bca2df01036caabb5d4b1ea09", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/334eb1b9a4ec064bca2df01036caabb5d4b1ea09"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7d6af6751c5726d884440d4e8d462a9ee6c5efc1", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJgX4lpCRBK7hj4Ov3rIwAAdHIIAKGVFKX21GM+9VVjLGSlMy62\n4tle1uzw1dWtaia9AMYkjZ9l57chEmr8EHW7TI2mc7d9wgAUIRLRVrHgoxFpN3dd\nNNW8ZRCiHG3WP2zAbUxWlzjntSHqmj3C0IMe1S4HAYo82q1UpJDVCb0rqIPzKVd8\nukoBdhuIp7z0d+P7RiGW+xngyRLD5deP+3mBHpvCU2nBaEIioFhaPE9NGmga65Gb\nRpWyAAYZEF0C8CbKarQ+DAFmL38WI1zHaYN/Y8dHtmKTUZGo10OrKZKI+F/0FkFJ\nf/XAtlsTFqZmDr96r57S6mp/iEWBsONu/YlRUe3SzFdirwWO2i+zvCnDKZjBU8o=\n=AL92\n-----END PGP SIGNATURE-----\n", "payload": "tree 334eb1b9a4ec064bca2df01036caabb5d4b1ea09\nparent 1115acccccd8d5e9255aebf6d787ab118687be3b\nparent ee1b33c7acd250c4b06b09096f0bef9dfd44ba9d\nauthor Dylan DPC <dylan.dpc@gmail.com> 1616873833 +0100\ncommitter GitHub <noreply@github.com> 1616873833 +0100\n\nRollup merge of #83555 - m-ou-se:inline-io-error-new-const, r=jackh726\n\nAdd #[inline] to io::Error methods\n\nFixes #82812\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7d6af6751c5726d884440d4e8d462a9ee6c5efc1", "html_url": "https://github.com/rust-lang/rust/commit/7d6af6751c5726d884440d4e8d462a9ee6c5efc1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7d6af6751c5726d884440d4e8d462a9ee6c5efc1/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1115acccccd8d5e9255aebf6d787ab118687be3b", "url": "https://api.github.com/repos/rust-lang/rust/commits/1115acccccd8d5e9255aebf6d787ab118687be3b", "html_url": "https://github.com/rust-lang/rust/commit/1115acccccd8d5e9255aebf6d787ab118687be3b"}, {"sha": "ee1b33c7acd250c4b06b09096f0bef9dfd44ba9d", "url": "https://api.github.com/repos/rust-lang/rust/commits/ee1b33c7acd250c4b06b09096f0bef9dfd44ba9d", "html_url": "https://github.com/rust-lang/rust/commit/ee1b33c7acd250c4b06b09096f0bef9dfd44ba9d"}], "stats": {"total": 8, "additions": 8, "deletions": 0}, "files": [{"sha": "97c92aa35069642012d2bcd2350985d4ad0cf553", "filename": "library/std/src/io/error.rs", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/7d6af6751c5726d884440d4e8d462a9ee6c5efc1/library%2Fstd%2Fsrc%2Fio%2Ferror.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7d6af6751c5726d884440d4e8d462a9ee6c5efc1/library%2Fstd%2Fsrc%2Fio%2Ferror.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fio%2Ferror.rs?ref=7d6af6751c5726d884440d4e8d462a9ee6c5efc1", "patch": "@@ -269,6 +269,7 @@ impl Error {\n     /// This function should maybe change to\n     /// `new_const<const MSG: &'static str>(kind: ErrorKind)`\n     /// in the future, when const generics allow that.\n+    #[inline]\n     pub(crate) const fn new_const(kind: ErrorKind, message: &'static &'static str) -> Error {\n         Self { repr: Repr::SimpleMessage(kind, message) }\n     }\n@@ -287,6 +288,7 @@ impl Error {\n     /// println!(\"last OS error: {:?}\", Error::last_os_error());\n     /// ```\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n+    #[inline]\n     pub fn last_os_error() -> Error {\n         Error::from_raw_os_error(sys::os::errno() as i32)\n     }\n@@ -317,6 +319,7 @@ impl Error {\n     /// # }\n     /// ```\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n+    #[inline]\n     pub fn from_raw_os_error(code: i32) -> Error {\n         Error { repr: Repr::Os(code) }\n     }\n@@ -351,6 +354,7 @@ impl Error {\n     /// }\n     /// ```\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n+    #[inline]\n     pub fn raw_os_error(&self) -> Option<i32> {\n         match self.repr {\n             Repr::Os(i) => Some(i),\n@@ -388,6 +392,7 @@ impl Error {\n     /// }\n     /// ```\n     #[stable(feature = \"io_error_inner\", since = \"1.3.0\")]\n+    #[inline]\n     pub fn get_ref(&self) -> Option<&(dyn error::Error + Send + Sync + 'static)> {\n         match self.repr {\n             Repr::Os(..) => None,\n@@ -460,6 +465,7 @@ impl Error {\n     /// }\n     /// ```\n     #[stable(feature = \"io_error_inner\", since = \"1.3.0\")]\n+    #[inline]\n     pub fn get_mut(&mut self) -> Option<&mut (dyn error::Error + Send + Sync + 'static)> {\n         match self.repr {\n             Repr::Os(..) => None,\n@@ -497,6 +503,7 @@ impl Error {\n     /// }\n     /// ```\n     #[stable(feature = \"io_error_inner\", since = \"1.3.0\")]\n+    #[inline]\n     pub fn into_inner(self) -> Option<Box<dyn error::Error + Send + Sync>> {\n         match self.repr {\n             Repr::Os(..) => None,\n@@ -525,6 +532,7 @@ impl Error {\n     /// }\n     /// ```\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n+    #[inline]\n     pub fn kind(&self) -> ErrorKind {\n         match self.repr {\n             Repr::Os(code) => sys::decode_error_kind(code),"}]}