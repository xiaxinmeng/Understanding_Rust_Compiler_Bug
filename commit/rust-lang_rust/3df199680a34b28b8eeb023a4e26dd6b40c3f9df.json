{"sha": "3df199680a34b28b8eeb023a4e26dd6b40c3f9df", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNkZjE5OTY4MGEzNGIyOGI4ZWViMDIzYTRlMjZkZDZiNDBjM2Y5ZGY=", "commit": {"author": {"name": "John K\u00e5re Alsaker", "email": "john.kare.alsaker@gmail.com", "date": "2018-03-03T05:19:15Z"}, "committer": {"name": "John K\u00e5re Alsaker", "email": "john.kare.alsaker@gmail.com", "date": "2018-05-12T23:28:20Z"}, "message": "Add Sync bounds to the crate store", "tree": {"sha": "369e289c01b91933e8f4ff3ba0a033d7f2a83010", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/369e289c01b91933e8f4ff3ba0a033d7f2a83010"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3df199680a34b28b8eeb023a4e26dd6b40c3f9df", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3df199680a34b28b8eeb023a4e26dd6b40c3f9df", "html_url": "https://github.com/rust-lang/rust/commit/3df199680a34b28b8eeb023a4e26dd6b40c3f9df", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3df199680a34b28b8eeb023a4e26dd6b40c3f9df/comments", "author": {"login": "Zoxc", "id": 25784, "node_id": "MDQ6VXNlcjI1Nzg0", "avatar_url": "https://avatars.githubusercontent.com/u/25784?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Zoxc", "html_url": "https://github.com/Zoxc", "followers_url": "https://api.github.com/users/Zoxc/followers", "following_url": "https://api.github.com/users/Zoxc/following{/other_user}", "gists_url": "https://api.github.com/users/Zoxc/gists{/gist_id}", "starred_url": "https://api.github.com/users/Zoxc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Zoxc/subscriptions", "organizations_url": "https://api.github.com/users/Zoxc/orgs", "repos_url": "https://api.github.com/users/Zoxc/repos", "events_url": "https://api.github.com/users/Zoxc/events{/privacy}", "received_events_url": "https://api.github.com/users/Zoxc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Zoxc", "id": 25784, "node_id": "MDQ6VXNlcjI1Nzg0", "avatar_url": "https://avatars.githubusercontent.com/u/25784?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Zoxc", "html_url": "https://github.com/Zoxc", "followers_url": "https://api.github.com/users/Zoxc/followers", "following_url": "https://api.github.com/users/Zoxc/following{/other_user}", "gists_url": "https://api.github.com/users/Zoxc/gists{/gist_id}", "starred_url": "https://api.github.com/users/Zoxc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Zoxc/subscriptions", "organizations_url": "https://api.github.com/users/Zoxc/orgs", "repos_url": "https://api.github.com/users/Zoxc/repos", "events_url": "https://api.github.com/users/Zoxc/events{/privacy}", "received_events_url": "https://api.github.com/users/Zoxc/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6968f4c8a3e5c5d987d6e7f21f3cc35bee359032", "url": "https://api.github.com/repos/rust-lang/rust/commits/6968f4c8a3e5c5d987d6e7f21f3cc35bee359032", "html_url": "https://github.com/rust-lang/rust/commit/6968f4c8a3e5c5d987d6e7f21f3cc35bee359032"}], "stats": {"total": 24, "additions": 14, "deletions": 10}, "files": [{"sha": "61c8470b616f833f2284fede138d1002232b44c2", "filename": "src/librustc/middle/cstore.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/3df199680a34b28b8eeb023a4e26dd6b40c3f9df/src%2Flibrustc%2Fmiddle%2Fcstore.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3df199680a34b28b8eeb023a4e26dd6b40c3f9df/src%2Flibrustc%2Fmiddle%2Fcstore.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fcstore.rs?ref=3df199680a34b28b8eeb023a4e26dd6b40c3f9df", "patch": "@@ -38,7 +38,7 @@ use syntax::ext::base::SyntaxExtension;\n use syntax::symbol::Symbol;\n use syntax_pos::Span;\n use rustc_target::spec::Target;\n-use rustc_data_structures::sync::{MetadataRef, Lrc};\n+use rustc_data_structures::sync::{self, MetadataRef, Lrc};\n \n pub use self::NativeLibraryKind::*;\n \n@@ -255,6 +255,8 @@ pub trait CrateStore {\n     fn metadata_encoding_version(&self) -> &[u8];\n }\n \n+pub type CrateStoreDyn = CrateStore + sync::Sync;\n+\n // FIXME: find a better place for this?\n pub fn validate_crate_name(sess: Option<&Session>, s: &str, sp: Option<Span>) {\n     let mut err_count = 0;"}, {"sha": "31639d27054329d0d4456a477b141ff6f732967b", "filename": "src/librustc/ty/context.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/3df199680a34b28b8eeb023a4e26dd6b40c3f9df/src%2Flibrustc%2Fty%2Fcontext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3df199680a34b28b8eeb023a4e26dd6b40c3f9df/src%2Flibrustc%2Fty%2Fcontext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Fcontext.rs?ref=3df199680a34b28b8eeb023a4e26dd6b40c3f9df", "patch": "@@ -26,7 +26,7 @@ use lint::{self, Lint};\n use ich::{StableHashingContext, NodeIdHashingMode};\n use infer::canonical::{CanonicalVarInfo, CanonicalVarInfos};\n use infer::outlives::free_region_map::FreeRegionMap;\n-use middle::cstore::{CrateStore, LinkMeta};\n+use middle::cstore::{CrateStoreDyn, LinkMeta};\n use middle::cstore::EncodedMetadata;\n use middle::lang_items;\n use middle::resolve_lifetime::{self, ObjectLifetimeDefault};\n@@ -852,7 +852,7 @@ pub struct GlobalCtxt<'tcx> {\n     global_arenas: &'tcx GlobalArenas<'tcx>,\n     global_interners: CtxtInterners<'tcx>,\n \n-    cstore: &'tcx dyn CrateStore,\n+    cstore: &'tcx CrateStoreDyn,\n \n     pub sess: &'tcx Session,\n \n@@ -1188,7 +1188,7 @@ impl<'a, 'gcx, 'tcx> TyCtxt<'a, 'gcx, 'tcx> {\n     /// value (types, substs, etc.) can only be used while `ty::tls` has a valid\n     /// reference to the context, to allow formatting values that need it.\n     pub fn create_and_enter<F, R>(s: &'tcx Session,\n-                                  cstore: &'tcx dyn CrateStore,\n+                                  cstore: &'tcx CrateStoreDyn,\n                                   local_providers: ty::maps::Providers<'tcx>,\n                                   extern_providers: ty::maps::Providers<'tcx>,\n                                   arenas: &'tcx AllArenas<'tcx>,"}, {"sha": "942dd771cf9a809570e92ecb8f5220df8bc32a8a", "filename": "src/librustc_driver/driver.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/3df199680a34b28b8eeb023a4e26dd6b40c3f9df/src%2Flibrustc_driver%2Fdriver.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3df199680a34b28b8eeb023a4e26dd6b40c3f9df/src%2Flibrustc_driver%2Fdriver.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_driver%2Fdriver.rs?ref=3df199680a34b28b8eeb023a4e26dd6b40c3f9df", "patch": "@@ -20,7 +20,7 @@ use rustc::session::config::{self, Input, OutputFilenames, OutputType};\n use rustc::session::search_paths::PathKind;\n use rustc::lint;\n use rustc::middle::{self, reachable, resolve_lifetime, stability};\n-use rustc::middle::cstore::CrateStore;\n+use rustc::middle::cstore::CrateStoreDyn;\n use rustc::middle::privacy::AccessLevels;\n use rustc::ty::{self, AllArenas, Resolutions, TyCtxt};\n use rustc::traits;\n@@ -1047,7 +1047,7 @@ pub fn phase_3_run_analysis_passes<'tcx, F, R>(\n     trans: &TransCrate,\n     control: &CompileController,\n     sess: &'tcx Session,\n-    cstore: &'tcx CrateStore,\n+    cstore: &'tcx CrateStoreDyn,\n     hir_map: hir_map::Map<'tcx>,\n     mut analysis: ty::CrateAnalysis,\n     resolutions: Resolutions,"}, {"sha": "ca2ae7711227b2591f75d041c4d14e2416bdb074", "filename": "src/librustc_driver/lib.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3df199680a34b28b8eeb023a4e26dd6b40c3f9df/src%2Flibrustc_driver%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3df199680a34b28b8eeb023a4e26dd6b40c3f9df/src%2Flibrustc_driver%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_driver%2Flib.rs?ref=3df199680a34b28b8eeb023a4e26dd6b40c3f9df", "patch": "@@ -27,6 +27,8 @@\n #![feature(rustc_stack_internals)]\n #![feature(no_debug)]\n \n+#![recursion_limit=\"256\"]\n+\n extern crate arena;\n extern crate getopts;\n extern crate graphviz;"}, {"sha": "108b47623383c0e3e27755fca3c4dd01f4bbd1d0", "filename": "src/librustc_driver/pretty.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/3df199680a34b28b8eeb023a4e26dd6b40c3f9df/src%2Flibrustc_driver%2Fpretty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3df199680a34b28b8eeb023a4e26dd6b40c3f9df/src%2Flibrustc_driver%2Fpretty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_driver%2Fpretty.rs?ref=3df199680a34b28b8eeb023a4e26dd6b40c3f9df", "patch": "@@ -20,7 +20,7 @@ use {abort_on_err, driver};\n use rustc::ty::{self, TyCtxt, Resolutions, AllArenas};\n use rustc::cfg;\n use rustc::cfg::graphviz::LabelledCFG;\n-use rustc::middle::cstore::CrateStore;\n+use rustc::middle::cstore::CrateStoreDyn;\n use rustc::session::Session;\n use rustc::session::config::{Input, OutputFilenames};\n use rustc_borrowck as borrowck;\n@@ -199,7 +199,7 @@ impl PpSourceMode {\n     }\n     fn call_with_pp_support_hir<'tcx, A, F>(&self,\n                                                sess: &'tcx Session,\n-                                               cstore: &'tcx CrateStore,\n+                                               cstore: &'tcx CrateStoreDyn,\n                                                hir_map: &hir_map::Map<'tcx>,\n                                                analysis: &ty::CrateAnalysis,\n                                                resolutions: &Resolutions,\n@@ -912,7 +912,7 @@ pub fn print_after_parsing(sess: &Session,\n }\n \n pub fn print_after_hir_lowering<'tcx, 'a: 'tcx>(sess: &'a Session,\n-                                                cstore: &'tcx CrateStore,\n+                                                cstore: &'tcx CrateStoreDyn,\n                                                 hir_map: &hir_map::Map<'tcx>,\n                                                 analysis: &ty::CrateAnalysis,\n                                                 resolutions: &Resolutions,\n@@ -1068,7 +1068,7 @@ pub fn print_after_hir_lowering<'tcx, 'a: 'tcx>(sess: &'a Session,\n // with a different callback than the standard driver, so that isn't easy.\n // Instead, we call that function ourselves.\n fn print_with_analysis<'tcx, 'a: 'tcx>(sess: &'a Session,\n-                                       cstore: &'a CrateStore,\n+                                       cstore: &'a CrateStoreDyn,\n                                        hir_map: &hir_map::Map<'tcx>,\n                                        analysis: &ty::CrateAnalysis,\n                                        resolutions: &Resolutions,"}]}