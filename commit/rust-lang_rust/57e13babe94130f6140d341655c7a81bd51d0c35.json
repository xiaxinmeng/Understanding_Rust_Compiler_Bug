{"sha": "57e13babe94130f6140d341655c7a81bd51d0c35", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU3ZTEzYmFiZTk0MTMwZjYxNDBkMzQxNjU1YzdhODFiZDUxZDBjMzU=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2018-08-24T11:22:11Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2018-08-24T11:22:11Z"}, "message": "Auto merge of #53653 - petrochenkov:moreregr, r=Mark-Simulacrum\n\nAddress two regressions\n\nRemove assert checking that expansion data is immutable until I have time to investigate why it's firing, cc https://github.com/rust-lang/rust/issues/52363\nTurn the error for module-relative access to macro-expanded `macro_export` macros into a deprecation lint, closes https://github.com/rust-lang/rust/issues/53495", "tree": {"sha": "88288b99e842cdd57f9f0cb935ea56ba373ec657", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/88288b99e842cdd57f9f0cb935ea56ba373ec657"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/57e13babe94130f6140d341655c7a81bd51d0c35", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/57e13babe94130f6140d341655c7a81bd51d0c35", "html_url": "https://github.com/rust-lang/rust/commit/57e13babe94130f6140d341655c7a81bd51d0c35", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/57e13babe94130f6140d341655c7a81bd51d0c35/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "63d66494aff57411bfec1dd2a3a5f1af900feab6", "url": "https://api.github.com/repos/rust-lang/rust/commits/63d66494aff57411bfec1dd2a3a5f1af900feab6", "html_url": "https://github.com/rust-lang/rust/commit/63d66494aff57411bfec1dd2a3a5f1af900feab6"}, {"sha": "77f2a2fe35e9f13048561df2373d504e1755c903", "url": "https://api.github.com/repos/rust-lang/rust/commits/77f2a2fe35e9f13048561df2373d504e1755c903", "html_url": "https://github.com/rust-lang/rust/commit/77f2a2fe35e9f13048561df2373d504e1755c903"}], "stats": {"total": 75, "additions": 62, "deletions": 13}, "files": [{"sha": "6783415619f983c1bdd3b0808d913b69c2cb1a72", "filename": "src/librustc/lint/builtin.rs", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/57e13babe94130f6140d341655c7a81bd51d0c35/src%2Flibrustc%2Flint%2Fbuiltin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/57e13babe94130f6140d341655c7a81bd51d0c35/src%2Flibrustc%2Flint%2Fbuiltin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Flint%2Fbuiltin.rs?ref=57e13babe94130f6140d341655c7a81bd51d0c35", "patch": "@@ -331,6 +331,13 @@ declare_lint! {\n      via the module system\"\n }\n \n+declare_lint! {\n+    pub MACRO_EXPANDED_MACRO_EXPORTS_ACCESSED_BY_ABSOLUTE_PATHS,\n+    Deny,\n+    \"macro-expanded `macro_export` macros from the current crate \\\n+     cannot be referred to by absolute paths\"\n+}\n+\n /// Some lints that are buffered from `libsyntax`. See `syntax::early_buffered_lints`.\n pub mod parser {\n     declare_lint! {\n@@ -398,6 +405,7 @@ impl LintPass for HardwiredLints {\n             WHERE_CLAUSES_OBJECT_SAFETY,\n             PROC_MACRO_DERIVE_RESOLUTION_FALLBACK,\n             MACRO_USE_EXTERN_CRATE,\n+            MACRO_EXPANDED_MACRO_EXPORTS_ACCESSED_BY_ABSOLUTE_PATHS,\n             parser::QUESTION_MARK_MACRO_SEP,\n         )\n     }\n@@ -412,6 +420,7 @@ pub enum BuiltinLintDiagnostics {\n     AbsPathWithModule(Span),\n     DuplicatedMacroExports(ast::Ident, Span, Span),\n     ProcMacroDeriveResolutionFallback(Span),\n+    MacroExpandedMacroExportsAccessedByAbsolutePaths(Span),\n     ElidedLifetimesInPaths(usize, Span, bool, Span, String),\n }\n \n@@ -453,6 +462,9 @@ impl BuiltinLintDiagnostics {\n                 db.span_label(span, \"names from parent modules are not \\\n                                      accessible without an explicit import\");\n             }\n+            BuiltinLintDiagnostics::MacroExpandedMacroExportsAccessedByAbsolutePaths(span_def) => {\n+                db.span_note(span_def, \"the macro is defined here\");\n+            }\n             BuiltinLintDiagnostics::ElidedLifetimesInPaths(\n                 n, path_span, incl_angl_brckt, insertion_span, anon_lts\n             ) => {"}, {"sha": "7d802787105d19fd6a71fd39a3e4d557d0643835", "filename": "src/librustc_lint/lib.rs", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/57e13babe94130f6140d341655c7a81bd51d0c35/src%2Flibrustc_lint%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/57e13babe94130f6140d341655c7a81bd51d0c35/src%2Flibrustc_lint%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_lint%2Flib.rs?ref=57e13babe94130f6140d341655c7a81bd51d0c35", "patch": "@@ -334,7 +334,12 @@ pub fn register_builtins(store: &mut lint::LintStore, sess: Option<&Session>) {\n             id: LintId::of(QUESTION_MARK_MACRO_SEP),\n             reference: \"issue #48075 <https://github.com/rust-lang/rust/issues/48075>\",\n             edition: Some(Edition::Edition2018),\n-        }\n+        },\n+        FutureIncompatibleInfo {\n+            id: LintId::of(MACRO_EXPANDED_MACRO_EXPORTS_ACCESSED_BY_ABSOLUTE_PATHS),\n+            reference: \"issue #52234 <https://github.com/rust-lang/rust/issues/52234>\",\n+            edition: None,\n+        },\n         ]);\n \n     // Register renamed and removed lints"}, {"sha": "264f5c01135815a8cd0a08d3885c83cafe95181f", "filename": "src/librustc_resolve/lib.rs", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/57e13babe94130f6140d341655c7a81bd51d0c35/src%2Flibrustc_resolve%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/57e13babe94130f6140d341655c7a81bd51d0c35/src%2Flibrustc_resolve%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Flib.rs?ref=57e13babe94130f6140d341655c7a81bd51d0c35", "patch": "@@ -4477,9 +4477,12 @@ impl<'a, 'crateloader: 'a> Resolver<'a, 'crateloader> {\n         for &(span_use, span_def) in &self.macro_expanded_macro_export_errors {\n             let msg = \"macro-expanded `macro_export` macros from the current crate \\\n                        cannot be referred to by absolute paths\";\n-            self.session.struct_span_err(span_use, msg)\n-                        .span_note(span_def, \"the macro is defined here\")\n-                        .emit();\n+            self.session.buffer_lint_with_diagnostic(\n+                lint::builtin::MACRO_EXPANDED_MACRO_EXPORTS_ACCESSED_BY_ABSOLUTE_PATHS,\n+                CRATE_NODE_ID, span_use, msg,\n+                lint::builtin::BuiltinLintDiagnostics::\n+                    MacroExpandedMacroExportsAccessedByAbsolutePaths(span_def),\n+            );\n         }\n \n         for &AmbiguityError { span, name, b1, b2, lexical } in &self.ambiguity_errors {"}, {"sha": "99342f362360b90b048d45a6bd2471f7c3ae1ebc", "filename": "src/libsyntax_pos/hygiene.rs", "status": "modified", "additions": 1, "deletions": 8, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/57e13babe94130f6140d341655c7a81bd51d0c35/src%2Flibsyntax_pos%2Fhygiene.rs", "raw_url": "https://github.com/rust-lang/rust/raw/57e13babe94130f6140d341655c7a81bd51d0c35/src%2Flibsyntax_pos%2Fhygiene.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax_pos%2Fhygiene.rs?ref=57e13babe94130f6140d341655c7a81bd51d0c35", "patch": "@@ -108,14 +108,7 @@ impl Mark {\n \n     #[inline]\n     pub fn set_expn_info(self, info: ExpnInfo) {\n-        HygieneData::with(|data| {\n-            let old_info = &mut data.marks[self.0 as usize].expn_info;\n-            if let Some(old_info) = old_info {\n-                panic!(\"expansion info is reset for the mark {}\\nold: {:#?}\\nnew: {:#?}\",\n-                       self.0, old_info, info);\n-            }\n-            *old_info = Some(info);\n-        })\n+        HygieneData::with(|data| data.marks[self.0 as usize].expn_info = Some(info))\n     }\n \n     #[inline]"}, {"sha": "d80c1129b2948631ac944a4b60f42309f9eb3f73", "filename": "src/test/ui/hygiene/expansion-info-reset.rs", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/57e13babe94130f6140d341655c7a81bd51d0c35/src%2Ftest%2Fui%2Fhygiene%2Fexpansion-info-reset.rs", "raw_url": "https://github.com/rust-lang/rust/raw/57e13babe94130f6140d341655c7a81bd51d0c35/src%2Ftest%2Fui%2Fhygiene%2Fexpansion-info-reset.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fhygiene%2Fexpansion-info-reset.rs?ref=57e13babe94130f6140d341655c7a81bd51d0c35", "patch": "@@ -0,0 +1,17 @@\n+// Copyright 2018 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// FIXME: Investigate why expansion info for a single expansion id is reset from\n+// `MacroBang(format_args)` to `MacroAttribute(derive(Clone))` (issue #52363).\n+\n+fn main() {\n+    format_args!({ #[derive(Clone)] struct S; });\n+    //~^ ERROR format argument must be a string literal\n+}"}, {"sha": "02a7b0d1b02617869f7049d86fdcdd4269f03dcd", "filename": "src/test/ui/hygiene/expansion-info-reset.stderr", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/57e13babe94130f6140d341655c7a81bd51d0c35/src%2Ftest%2Fui%2Fhygiene%2Fexpansion-info-reset.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/57e13babe94130f6140d341655c7a81bd51d0c35/src%2Ftest%2Fui%2Fhygiene%2Fexpansion-info-reset.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fhygiene%2Fexpansion-info-reset.stderr?ref=57e13babe94130f6140d341655c7a81bd51d0c35", "patch": "@@ -0,0 +1,12 @@\n+error: format argument must be a string literal\n+  --> $DIR/expansion-info-reset.rs:15:18\n+   |\n+LL |     format_args!({ #[derive(Clone)] struct S; });\n+   |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+help: you might be missing a string literal to format with\n+   |\n+LL |     format_args!(\"{}\", { #[derive(Clone)] struct S; });\n+   |                  ^^^^^\n+\n+error: aborting due to previous error\n+"}, {"sha": "1cd7cc56a400d062b8c4340c04fad22ae4e4ae34", "filename": "src/test/ui/imports/local-modularized-tricky-fail-3.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/57e13babe94130f6140d341655c7a81bd51d0c35/src%2Ftest%2Fui%2Fimports%2Flocal-modularized-tricky-fail-3.rs", "raw_url": "https://github.com/rust-lang/rust/raw/57e13babe94130f6140d341655c7a81bd51d0c35/src%2Ftest%2Fui%2Fimports%2Flocal-modularized-tricky-fail-3.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimports%2Flocal-modularized-tricky-fail-3.rs?ref=57e13babe94130f6140d341655c7a81bd51d0c35", "patch": "@@ -22,9 +22,11 @@ define_exported!();\n mod m {\n     use exported;\n     //~^ ERROR macro-expanded `macro_export` macros from the current crate cannot\n+    //~| WARN this was previously accepted\n }\n \n fn main() {\n     ::exported!();\n     //~^ ERROR macro-expanded `macro_export` macros from the current crate cannot\n+    //~| WARN this was previously accepted\n }"}, {"sha": "6c5c789e5ee8008ef37aa5c4671f13832027af75", "filename": "src/test/ui/imports/local-modularized-tricky-fail-3.stderr", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/57e13babe94130f6140d341655c7a81bd51d0c35/src%2Ftest%2Fui%2Fimports%2Flocal-modularized-tricky-fail-3.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/57e13babe94130f6140d341655c7a81bd51d0c35/src%2Ftest%2Fui%2Fimports%2Flocal-modularized-tricky-fail-3.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimports%2Flocal-modularized-tricky-fail-3.stderr?ref=57e13babe94130f6140d341655c7a81bd51d0c35", "patch": "@@ -4,6 +4,9 @@ error: macro-expanded `macro_export` macros from the current crate cannot be ref\n LL |     use exported;\n    |         ^^^^^^^^\n    |\n+   = note: #[deny(macro_expanded_macro_exports_accessed_by_absolute_paths)] on by default\n+   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n+   = note: for more information, see issue #52234 <https://github.com/rust-lang/rust/issues/52234>\n note: the macro is defined here\n   --> $DIR/local-modularized-tricky-fail-3.rs:15:5\n    |\n@@ -16,11 +19,13 @@ LL |   define_exported!();\n    |   ------------------- in this macro invocation\n \n error: macro-expanded `macro_export` macros from the current crate cannot be referred to by absolute paths\n-  --> $DIR/local-modularized-tricky-fail-3.rs:28:5\n+  --> $DIR/local-modularized-tricky-fail-3.rs:29:5\n    |\n LL |     ::exported!();\n    |     ^^^^^^^^^^\n    |\n+   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n+   = note: for more information, see issue #52234 <https://github.com/rust-lang/rust/issues/52234>\n note: the macro is defined here\n   --> $DIR/local-modularized-tricky-fail-3.rs:15:5\n    |"}]}