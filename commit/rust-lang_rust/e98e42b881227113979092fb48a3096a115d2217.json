{"sha": "e98e42b881227113979092fb48a3096a115d2217", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU5OGU0MmI4ODEyMjcxMTM5NzkwOTJmYjQ4YTMwOTZhMTE1ZDIyMTc=", "commit": {"author": {"name": "Mara Bos", "email": "m-ou.se@m-ou.se", "date": "2021-02-05T11:25:59Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-02-05T11:25:59Z"}, "message": "Rollup merge of #81500 - CraftSpider:union-kind, r=jyn514\n\nRemove struct_type from union output\n\nAlso bumps the format number and adds a test\n\nRationale: It's illegal to have unions of the form `union Union(i32, f32);`, or `union Union;`. The struct_type field was recently removed from the rustdoc Union AST, at which time this field was changed to always just read \"union\". It makes sense to completely remove it, as it provides no information.", "tree": {"sha": "57293086b546bf4ea37fd339acdb71a379dc0c2b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/57293086b546bf4ea37fd339acdb71a379dc0c2b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e98e42b881227113979092fb48a3096a115d2217", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJgHStHCRBK7hj4Ov3rIwAAdHIIAKlTenqRn7e00xMuaYo3y+Tm\n3zZy4m5xbKCFH/AwxRx+B6RQzshEyU32STK9876vLBJ4C3islF9DlTa2RSfc+g+O\nOdEei2HEWU2rKW+D+i0d+ggizZmFs8b2cgwz4Sc5dyJ8wezAARMP05bG+PN1qyuk\nE0QG9TrXk/doTKuIbk0iWJDei254c2A5ZgD4O/rCZiLBUmNWkihU0ZwsURF4EYyn\nTF9Ne/Lqgto0i5JrVZP3U6NW2t47MNNspxjXduvyvQeLIL+IbZJa33oBogVYTjcO\ng1Rt2V+ujPIj8Jski2XC3FFLfk8ItG2w3LHejaxbnuvQHgUPwcW7SapuuDLh+QQ=\n=VPRb\n-----END PGP SIGNATURE-----\n", "payload": "tree 57293086b546bf4ea37fd339acdb71a379dc0c2b\nparent 2451bf90db0b17c5f3cb8010d76730048a405c56\nparent 3106de5f2a0983f617433d6e3429ff1a90d71f8d\nauthor Mara Bos <m-ou.se@m-ou.se> 1612524359 +0100\ncommitter GitHub <noreply@github.com> 1612524359 +0100\n\nRollup merge of #81500 - CraftSpider:union-kind, r=jyn514\n\nRemove struct_type from union output\n\nAlso bumps the format number and adds a test\n\nRationale: It's illegal to have unions of the form `union Union(i32, f32);`, or `union Union;`. The struct_type field was recently removed from the rustdoc Union AST, at which time this field was changed to always just read \"union\". It makes sense to completely remove it, as it provides no information.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e98e42b881227113979092fb48a3096a115d2217", "html_url": "https://github.com/rust-lang/rust/commit/e98e42b881227113979092fb48a3096a115d2217", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e98e42b881227113979092fb48a3096a115d2217/comments", "author": {"login": "m-ou-se", "id": 783247, "node_id": "MDQ6VXNlcjc4MzI0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/783247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-ou-se", "html_url": "https://github.com/m-ou-se", "followers_url": "https://api.github.com/users/m-ou-se/followers", "following_url": "https://api.github.com/users/m-ou-se/following{/other_user}", "gists_url": "https://api.github.com/users/m-ou-se/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-ou-se/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-ou-se/subscriptions", "organizations_url": "https://api.github.com/users/m-ou-se/orgs", "repos_url": "https://api.github.com/users/m-ou-se/repos", "events_url": "https://api.github.com/users/m-ou-se/events{/privacy}", "received_events_url": "https://api.github.com/users/m-ou-se/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2451bf90db0b17c5f3cb8010d76730048a405c56", "url": "https://api.github.com/repos/rust-lang/rust/commits/2451bf90db0b17c5f3cb8010d76730048a405c56", "html_url": "https://github.com/rust-lang/rust/commit/2451bf90db0b17c5f3cb8010d76730048a405c56"}, {"sha": "3106de5f2a0983f617433d6e3429ff1a90d71f8d", "url": "https://api.github.com/repos/rust-lang/rust/commits/3106de5f2a0983f617433d6e3429ff1a90d71f8d", "html_url": "https://github.com/rust-lang/rust/commit/3106de5f2a0983f617433d6e3429ff1a90d71f8d"}], "stats": {"total": 26, "additions": 20, "deletions": 6}, "files": [{"sha": "026d8f96dee65bfb204c78980779297297c1a7db", "filename": "src/librustdoc/json/conversions.rs", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/e98e42b881227113979092fb48a3096a115d2217/src%2Flibrustdoc%2Fjson%2Fconversions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e98e42b881227113979092fb48a3096a115d2217/src%2Flibrustdoc%2Fjson%2Fconversions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fjson%2Fconversions.rs?ref=e98e42b881227113979092fb48a3096a115d2217", "patch": "@@ -154,7 +154,7 @@ impl From<clean::ItemKind> for ItemEnum {\n             }\n             ImportItem(i) => ItemEnum::ImportItem(i.into()),\n             StructItem(s) => ItemEnum::StructItem(s.into()),\n-            UnionItem(u) => ItemEnum::StructItem(u.into()),\n+            UnionItem(u) => ItemEnum::UnionItem(u.into()),\n             StructFieldItem(f) => ItemEnum::StructFieldItem(f.into()),\n             EnumItem(e) => ItemEnum::EnumItem(e.into()),\n             VariantItem(v) => ItemEnum::VariantItem(v.into()),\n@@ -205,11 +205,10 @@ impl From<clean::Struct> for Struct {\n     }\n }\n \n-impl From<clean::Union> for Struct {\n+impl From<clean::Union> for Union {\n     fn from(struct_: clean::Union) -> Self {\n         let clean::Union { generics, fields, fields_stripped } = struct_;\n-        Struct {\n-            struct_type: StructType::Union,\n+        Union {\n             generics: generics.into(),\n             fields_stripped,\n             fields: ids(fields),"}, {"sha": "876b1b56dee6d0ec240a55a02d2317ed22fa6aa3", "filename": "src/librustdoc/json/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e98e42b881227113979092fb48a3096a115d2217/src%2Flibrustdoc%2Fjson%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e98e42b881227113979092fb48a3096a115d2217/src%2Flibrustdoc%2Fjson%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fjson%2Fmod.rs?ref=e98e42b881227113979092fb48a3096a115d2217", "patch": "@@ -243,7 +243,7 @@ impl<'tcx> FormatRenderer<'tcx> for JsonRenderer<'tcx> {\n                     )\n                 })\n                 .collect(),\n-            format_version: 2,\n+            format_version: 3,\n         };\n         let mut p = self.out_path.clone();\n         p.push(output.index.get(&output.root).unwrap().name.clone().unwrap());"}, {"sha": "083f99e4a681a3d67c2f05b9bf2462cc9c521c6d", "filename": "src/rustdoc-json-types/lib.rs", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/e98e42b881227113979092fb48a3096a115d2217/src%2Frustdoc-json-types%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e98e42b881227113979092fb48a3096a115d2217/src%2Frustdoc-json-types%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustdoc-json-types%2Flib.rs?ref=e98e42b881227113979092fb48a3096a115d2217", "patch": "@@ -194,6 +194,7 @@ pub enum ItemEnum {\n     },\n     ImportItem(Import),\n \n+    UnionItem(Union),\n     StructItem(Struct),\n     StructFieldItem(Type),\n     EnumItem(Enum),\n@@ -238,6 +239,14 @@ pub struct Module {\n     pub items: Vec<Id>,\n }\n \n+#[derive(Clone, Debug, Serialize, Deserialize, PartialEq)]\n+pub struct Union {\n+    pub generics: Generics,\n+    pub fields_stripped: bool,\n+    pub fields: Vec<Id>,\n+    pub impls: Vec<Id>,\n+}\n+\n #[derive(Clone, Debug, Serialize, Deserialize, PartialEq)]\n pub struct Struct {\n     pub struct_type: StructType,\n@@ -270,7 +279,6 @@ pub enum StructType {\n     Plain,\n     Tuple,\n     Unit,\n-    Union,\n }\n \n #[derive(Clone, Debug, Serialize, Deserialize, PartialEq)]"}, {"sha": "ac2eb797791f33c52e29481a58a04451f906df7e", "filename": "src/test/rustdoc-json/unions/union.rs", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/e98e42b881227113979092fb48a3096a115d2217/src%2Ftest%2Frustdoc-json%2Funions%2Funion.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e98e42b881227113979092fb48a3096a115d2217/src%2Ftest%2Frustdoc-json%2Funions%2Funion.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-json%2Funions%2Funion.rs?ref=e98e42b881227113979092fb48a3096a115d2217", "patch": "@@ -0,0 +1,7 @@\n+// @has union.json \"$.index[*][?(@.name=='Union')].visibility\" \\\"public\\\"\n+// @has - \"$.index[*][?(@.name=='Union')].kind\" \\\"union\\\"\n+// @!has - \"$.index[*][?(@.name=='Union')].inner.struct_type\"\n+pub union Union {\n+    int: i32,\n+    float: f32,\n+}"}]}