{"sha": "812656dc9543a16c27cf0a5aad1171ea3cc01a0d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjgxMjY1NmRjOTU0M2ExNmMyN2NmMGE1YWFkMTE3MWVhM2NjMDFhMGQ=", "commit": {"author": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2018-04-02T11:20:06Z"}, "committer": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2018-04-13T21:28:03Z"}, "message": "Rename must-compile-successfully into compile-pass", "tree": {"sha": "b4e26e883a801b83584cb1a6b2278728a7efdacd", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b4e26e883a801b83584cb1a6b2278728a7efdacd"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/812656dc9543a16c27cf0a5aad1171ea3cc01a0d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/812656dc9543a16c27cf0a5aad1171ea3cc01a0d", "html_url": "https://github.com/rust-lang/rust/commit/812656dc9543a16c27cf0a5aad1171ea3cc01a0d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/812656dc9543a16c27cf0a5aad1171ea3cc01a0d/comments", "author": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "committer": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9c2bfcbea2d7fff10e608b495d76f24f441999b9", "url": "https://api.github.com/repos/rust-lang/rust/commits/9c2bfcbea2d7fff10e608b495d76f24f441999b9", "html_url": "https://github.com/rust-lang/rust/commit/9c2bfcbea2d7fff10e608b495d76f24f441999b9"}], "stats": {"total": 274, "additions": 137, "deletions": 137}, "files": [{"sha": "29f1e2e5b781e3d80e7377fce2ef6822dda61854", "filename": "src/test/COMPILER_TESTS.md", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/812656dc9543a16c27cf0a5aad1171ea3cc01a0d/src%2Ftest%2FCOMPILER_TESTS.md", "raw_url": "https://github.com/rust-lang/rust/raw/812656dc9543a16c27cf0a5aad1171ea3cc01a0d/src%2Ftest%2FCOMPILER_TESTS.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2FCOMPILER_TESTS.md?ref=812656dc9543a16c27cf0a5aad1171ea3cc01a0d", "patch": "@@ -68,7 +68,7 @@ Some examples of `X` in `ignore-X`:\n \n * `min-{gdb,lldb}-version`\n * `min-llvm-version`\n-* `must-compile-successfully` for UI tests, indicates that the test is supposed\n+* `compile-pass` for UI tests, indicates that the test is supposed\n   to compile, as opposed to the default where the test is supposed to error out.\n * `compile-flags` passes extra command-line args to the compiler,\n   e.g. `compile-flags -g` which forces debuginfo to be enabled.\n@@ -134,7 +134,7 @@ so forth.\n Normally, the test-runner checks that UI tests fail compilation. If you want\n to do a UI test for code that *compiles* (e.g. to test warnings, or if you\n have a collection of tests, only some of which error out), you can use the\n-`// must-compile-successfully` header command to have the test runner instead\n+`// compile-pass` header command to have the test runner instead\n check that the test compiles successfully.\n \n ### Editing and updating the reference files"}, {"sha": "32efb01c0fe811a7d321f3c5e7b1b63ec7611657", "filename": "src/test/compile-fail/closure-expected-type/expect-fn-supply-fn-multiple.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/812656dc9543a16c27cf0a5aad1171ea3cc01a0d/src%2Ftest%2Fcompile-fail%2Fclosure-expected-type%2Fexpect-fn-supply-fn-multiple.rs", "raw_url": "https://github.com/rust-lang/rust/raw/812656dc9543a16c27cf0a5aad1171ea3cc01a0d/src%2Ftest%2Fcompile-fail%2Fclosure-expected-type%2Fexpect-fn-supply-fn-multiple.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fclosure-expected-type%2Fexpect-fn-supply-fn-multiple.rs?ref=812656dc9543a16c27cf0a5aad1171ea3cc01a0d", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// must-compile-successfully\n+// compile-pass\n \n #![allow(warnings)]\n "}, {"sha": "6767aa62f784d461d6a81c2cf699f364acb3553c", "filename": "src/test/compile-fail/closure-expected-type/expect-infer-var-supply-ty-with-bound-region.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/812656dc9543a16c27cf0a5aad1171ea3cc01a0d/src%2Ftest%2Fcompile-fail%2Fclosure-expected-type%2Fexpect-infer-var-supply-ty-with-bound-region.rs", "raw_url": "https://github.com/rust-lang/rust/raw/812656dc9543a16c27cf0a5aad1171ea3cc01a0d/src%2Ftest%2Fcompile-fail%2Fclosure-expected-type%2Fexpect-infer-var-supply-ty-with-bound-region.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fclosure-expected-type%2Fexpect-infer-var-supply-ty-with-bound-region.rs?ref=812656dc9543a16c27cf0a5aad1171ea3cc01a0d", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// must-compile-successfully\n+// compile-pass\n \n fn with_closure<F, A>(_: F)\n     where F: FnOnce(A, &u32)"}, {"sha": "aea5cb21e635e6030411453180bcb8bb8ffec920", "filename": "src/test/compile-fail/closure-expected-type/expect-infer-var-supply-ty-with-free-region.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/812656dc9543a16c27cf0a5aad1171ea3cc01a0d/src%2Ftest%2Fcompile-fail%2Fclosure-expected-type%2Fexpect-infer-var-supply-ty-with-free-region.rs", "raw_url": "https://github.com/rust-lang/rust/raw/812656dc9543a16c27cf0a5aad1171ea3cc01a0d/src%2Ftest%2Fcompile-fail%2Fclosure-expected-type%2Fexpect-infer-var-supply-ty-with-free-region.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fclosure-expected-type%2Fexpect-infer-var-supply-ty-with-free-region.rs?ref=812656dc9543a16c27cf0a5aad1171ea3cc01a0d", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// must-compile-successfully\n+// compile-pass\n \n fn with_closure<F, A>(_: F)\n     where F: FnOnce(A, &u32)"}, {"sha": "1b9ff36f7145d8d4fcbbfd607e95bdb86189eaf2", "filename": "src/test/compile-fail/issue-47309.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/812656dc9543a16c27cf0a5aad1171ea3cc01a0d/src%2Ftest%2Fcompile-fail%2Fissue-47309.rs", "raw_url": "https://github.com/rust-lang/rust/raw/812656dc9543a16c27cf0a5aad1171ea3cc01a0d/src%2Ftest%2Fcompile-fail%2Fissue-47309.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-47309.rs?ref=812656dc9543a16c27cf0a5aad1171ea3cc01a0d", "patch": "@@ -13,7 +13,7 @@\n // See https://github.com/rust-lang/rust/issues/47309\n \n // compile-flags:-Clink-dead-code\n-// must-compile-successfully\n+// compile-pass\n \n #![crate_type=\"rlib\"]\n "}, {"sha": "2df6a659724c6add38f91bb6e601c5cfbc22806a", "filename": "src/test/compile-fail/rmeta-lib-pass.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/812656dc9543a16c27cf0a5aad1171ea3cc01a0d/src%2Ftest%2Fcompile-fail%2Frmeta-lib-pass.rs", "raw_url": "https://github.com/rust-lang/rust/raw/812656dc9543a16c27cf0a5aad1171ea3cc01a0d/src%2Ftest%2Fcompile-fail%2Frmeta-lib-pass.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Frmeta-lib-pass.rs?ref=812656dc9543a16c27cf0a5aad1171ea3cc01a0d", "patch": "@@ -11,7 +11,7 @@\n // compile-flags: --emit=metadata\n // aux-build:rmeta_rlib.rs\n // no-prefer-dynamic\n-// must-compile-successfully\n+// compile-pass\n \n // Check that building a metadata crate works with a dependent, rlib crate.\n // This is a cfail test since there is no executable to run."}, {"sha": "6ee914c5e5b1820354916701e1656d9068083d22", "filename": "src/test/compile-fail/rmeta-pass.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/812656dc9543a16c27cf0a5aad1171ea3cc01a0d/src%2Ftest%2Fcompile-fail%2Frmeta-pass.rs", "raw_url": "https://github.com/rust-lang/rust/raw/812656dc9543a16c27cf0a5aad1171ea3cc01a0d/src%2Ftest%2Fcompile-fail%2Frmeta-pass.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Frmeta-pass.rs?ref=812656dc9543a16c27cf0a5aad1171ea3cc01a0d", "patch": "@@ -11,7 +11,7 @@\n // compile-flags: --emit=metadata\n // aux-build:rmeta_meta.rs\n // no-prefer-dynamic\n-// must-compile-successfully\n+// compile-pass\n \n // Check that building a metadata crate works with a dependent, metadata-only\n // crate."}, {"sha": "bcf869c9432cb271ad16d8be4b827c3657eae209", "filename": "src/test/compile-fail/rmeta-priv-warn.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/812656dc9543a16c27cf0a5aad1171ea3cc01a0d/src%2Ftest%2Fcompile-fail%2Frmeta-priv-warn.rs", "raw_url": "https://github.com/rust-lang/rust/raw/812656dc9543a16c27cf0a5aad1171ea3cc01a0d/src%2Ftest%2Fcompile-fail%2Frmeta-priv-warn.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Frmeta-priv-warn.rs?ref=812656dc9543a16c27cf0a5aad1171ea3cc01a0d", "patch": "@@ -10,7 +10,7 @@\n \n // compile-flags: --emit=metadata\n // no-prefer-dynamic\n-// must-compile-successfully\n+// compile-pass\n \n #[deny(warnings)]\n "}, {"sha": "103ee30baba931482d59346d2163950980e515c9", "filename": "src/test/incremental-fulldeps/incremental_proc_macro.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/812656dc9543a16c27cf0a5aad1171ea3cc01a0d/src%2Ftest%2Fincremental-fulldeps%2Fincremental_proc_macro.rs", "raw_url": "https://github.com/rust-lang/rust/raw/812656dc9543a16c27cf0a5aad1171ea3cc01a0d/src%2Ftest%2Fincremental-fulldeps%2Fincremental_proc_macro.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fincremental-fulldeps%2Fincremental_proc_macro.rs?ref=812656dc9543a16c27cf0a5aad1171ea3cc01a0d", "patch": "@@ -11,7 +11,7 @@\n // aux-build:incremental_proc_macro_aux.rs\n // ignore-stage1\n // revisions: cfail1 cfail2\n-// must-compile-successfully\n+// compile-pass\n \n // This test makes sure that we still find the proc-macro registrar function\n // when we compile proc-macros incrementally (see #47292)."}, {"sha": "90a532a6cd6d4d83cf9d2361cb1defe721fe899c", "filename": "src/test/incremental/add_private_fn_at_krate_root_cc/struct_point.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/812656dc9543a16c27cf0a5aad1171ea3cc01a0d/src%2Ftest%2Fincremental%2Fadd_private_fn_at_krate_root_cc%2Fstruct_point.rs", "raw_url": "https://github.com/rust-lang/rust/raw/812656dc9543a16c27cf0a5aad1171ea3cc01a0d/src%2Ftest%2Fincremental%2Fadd_private_fn_at_krate_root_cc%2Fstruct_point.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fincremental%2Fadd_private_fn_at_krate_root_cc%2Fstruct_point.rs?ref=812656dc9543a16c27cf0a5aad1171ea3cc01a0d", "patch": "@@ -15,7 +15,7 @@\n // revisions:cfail1 cfail2\n // compile-flags: -Z query-dep-graph\n // aux-build:point.rs\n-// must-compile-successfully\n+// compile-pass\n \n #![feature(rustc_attrs)]\n #![feature(stmt_expr_attributes)]"}, {"sha": "da3b9e4d6d65fa1082a5bb5af1df334683676202", "filename": "src/test/incremental/change_add_field/struct_point.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/812656dc9543a16c27cf0a5aad1171ea3cc01a0d/src%2Ftest%2Fincremental%2Fchange_add_field%2Fstruct_point.rs", "raw_url": "https://github.com/rust-lang/rust/raw/812656dc9543a16c27cf0a5aad1171ea3cc01a0d/src%2Ftest%2Fincremental%2Fchange_add_field%2Fstruct_point.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fincremental%2Fchange_add_field%2Fstruct_point.rs?ref=812656dc9543a16c27cf0a5aad1171ea3cc01a0d", "patch": "@@ -15,7 +15,7 @@\n \n // revisions:cfail1 cfail2\n // compile-flags: -Z query-dep-graph\n-// must-compile-successfully\n+// compile-pass\n \n #![feature(rustc_attrs)]\n #![feature(stmt_expr_attributes)]"}, {"sha": "2e418cc50487555d915c322edf98528e6d04a7bf", "filename": "src/test/incremental/change_crate_dep_kind.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/812656dc9543a16c27cf0a5aad1171ea3cc01a0d/src%2Ftest%2Fincremental%2Fchange_crate_dep_kind.rs", "raw_url": "https://github.com/rust-lang/rust/raw/812656dc9543a16c27cf0a5aad1171ea3cc01a0d/src%2Ftest%2Fincremental%2Fchange_crate_dep_kind.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fincremental%2Fchange_crate_dep_kind.rs?ref=812656dc9543a16c27cf0a5aad1171ea3cc01a0d", "patch": "@@ -13,7 +13,7 @@\n \n // revisions:cfail1 cfail2\n // compile-flags: -Z query-dep-graph -Cpanic=unwind\n-// must-compile-successfully\n+// compile-pass\n \n #![feature(panic_unwind)]\n "}, {"sha": "63e137a7e0bd3212c23165dab5731931c6ebd30a", "filename": "src/test/incremental/change_private_fn/struct_point.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/812656dc9543a16c27cf0a5aad1171ea3cc01a0d/src%2Ftest%2Fincremental%2Fchange_private_fn%2Fstruct_point.rs", "raw_url": "https://github.com/rust-lang/rust/raw/812656dc9543a16c27cf0a5aad1171ea3cc01a0d/src%2Ftest%2Fincremental%2Fchange_private_fn%2Fstruct_point.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fincremental%2Fchange_private_fn%2Fstruct_point.rs?ref=812656dc9543a16c27cf0a5aad1171ea3cc01a0d", "patch": "@@ -13,7 +13,7 @@\n \n // revisions:cfail1 cfail2\n // compile-flags: -Z query-dep-graph\n-// must-compile-successfully\n+// compile-pass\n \n #![feature(rustc_attrs)]\n #![feature(stmt_expr_attributes)]"}, {"sha": "c79dc6e3418153fb3295e77b1a3cdfa05ff23c00", "filename": "src/test/incremental/change_private_fn_cc/struct_point.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/812656dc9543a16c27cf0a5aad1171ea3cc01a0d/src%2Ftest%2Fincremental%2Fchange_private_fn_cc%2Fstruct_point.rs", "raw_url": "https://github.com/rust-lang/rust/raw/812656dc9543a16c27cf0a5aad1171ea3cc01a0d/src%2Ftest%2Fincremental%2Fchange_private_fn_cc%2Fstruct_point.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fincremental%2Fchange_private_fn_cc%2Fstruct_point.rs?ref=812656dc9543a16c27cf0a5aad1171ea3cc01a0d", "patch": "@@ -14,7 +14,7 @@\n // revisions:cfail1 cfail2\n // compile-flags: -Z query-dep-graph\n // aux-build:point.rs\n-// must-compile-successfully\n+// compile-pass\n \n #![crate_type = \"rlib\"]\n #![feature(rustc_attrs)]"}, {"sha": "7f2dd81d0ea13516c55f6ee8398b4315303a2ff3", "filename": "src/test/incremental/change_private_impl_method/struct_point.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/812656dc9543a16c27cf0a5aad1171ea3cc01a0d/src%2Ftest%2Fincremental%2Fchange_private_impl_method%2Fstruct_point.rs", "raw_url": "https://github.com/rust-lang/rust/raw/812656dc9543a16c27cf0a5aad1171ea3cc01a0d/src%2Ftest%2Fincremental%2Fchange_private_impl_method%2Fstruct_point.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fincremental%2Fchange_private_impl_method%2Fstruct_point.rs?ref=812656dc9543a16c27cf0a5aad1171ea3cc01a0d", "patch": "@@ -13,7 +13,7 @@\n \n // revisions:cfail1 cfail2\n // compile-flags: -Z query-dep-graph\n-// must-compile-successfully\n+// compile-pass\n \n #![feature(rustc_attrs)]\n #![feature(stmt_expr_attributes)]"}, {"sha": "f32ef9622f0d8cf6f6dcff978a70fe8a89acbec9", "filename": "src/test/incremental/change_private_impl_method_cc/struct_point.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/812656dc9543a16c27cf0a5aad1171ea3cc01a0d/src%2Ftest%2Fincremental%2Fchange_private_impl_method_cc%2Fstruct_point.rs", "raw_url": "https://github.com/rust-lang/rust/raw/812656dc9543a16c27cf0a5aad1171ea3cc01a0d/src%2Ftest%2Fincremental%2Fchange_private_impl_method_cc%2Fstruct_point.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fincremental%2Fchange_private_impl_method_cc%2Fstruct_point.rs?ref=812656dc9543a16c27cf0a5aad1171ea3cc01a0d", "patch": "@@ -14,7 +14,7 @@\n // revisions:cfail1 cfail2\n // compile-flags: -Z query-dep-graph\n // aux-build:point.rs\n-// must-compile-successfully\n+// compile-pass\n \n #![crate_type = \"rlib\"]\n #![feature(rustc_attrs)]"}, {"sha": "412fe72e4e4bee6e02a912e914ece3140190a883", "filename": "src/test/incremental/change_pub_inherent_method_body/struct_point.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/812656dc9543a16c27cf0a5aad1171ea3cc01a0d/src%2Ftest%2Fincremental%2Fchange_pub_inherent_method_body%2Fstruct_point.rs", "raw_url": "https://github.com/rust-lang/rust/raw/812656dc9543a16c27cf0a5aad1171ea3cc01a0d/src%2Ftest%2Fincremental%2Fchange_pub_inherent_method_body%2Fstruct_point.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fincremental%2Fchange_pub_inherent_method_body%2Fstruct_point.rs?ref=812656dc9543a16c27cf0a5aad1171ea3cc01a0d", "patch": "@@ -12,7 +12,7 @@\n \n // revisions:cfail1 cfail2\n // compile-flags: -Z query-dep-graph\n-// must-compile-successfully\n+// compile-pass\n \n #![crate_type = \"rlib\"]\n #![feature(rustc_attrs)]"}, {"sha": "c82f4645caf64723739bfa0fb9c33fc1212d9cb5", "filename": "src/test/incremental/change_pub_inherent_method_sig/struct_point.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/812656dc9543a16c27cf0a5aad1171ea3cc01a0d/src%2Ftest%2Fincremental%2Fchange_pub_inherent_method_sig%2Fstruct_point.rs", "raw_url": "https://github.com/rust-lang/rust/raw/812656dc9543a16c27cf0a5aad1171ea3cc01a0d/src%2Ftest%2Fincremental%2Fchange_pub_inherent_method_sig%2Fstruct_point.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fincremental%2Fchange_pub_inherent_method_sig%2Fstruct_point.rs?ref=812656dc9543a16c27cf0a5aad1171ea3cc01a0d", "patch": "@@ -12,7 +12,7 @@\n \n // revisions:cfail1 cfail2\n // compile-flags: -Z query-dep-graph\n-// must-compile-successfully\n+// compile-pass\n \n #![crate_type = \"rlib\"]\n #![feature(rustc_attrs)]"}, {"sha": "3416669dbfa8dad5cb7928cf97c7b7e099d0b328", "filename": "src/test/incremental/hashes/call_expressions.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/812656dc9543a16c27cf0a5aad1171ea3cc01a0d/src%2Ftest%2Fincremental%2Fhashes%2Fcall_expressions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/812656dc9543a16c27cf0a5aad1171ea3cc01a0d/src%2Ftest%2Fincremental%2Fhashes%2Fcall_expressions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fincremental%2Fhashes%2Fcall_expressions.rs?ref=812656dc9543a16c27cf0a5aad1171ea3cc01a0d", "patch": "@@ -16,7 +16,7 @@\n // and make sure that the hash has changed, then change nothing between rev2 and\n // rev3 and make sure that the hash has not changed.\n \n-// must-compile-successfully\n+// compile-pass\n // revisions: cfail1 cfail2 cfail3\n // compile-flags: -Z query-dep-graph -Zincremental-ignore-spans\n "}, {"sha": "839e0ca8e01ae65e57eecc7173ab14a33ba8df2f", "filename": "src/test/incremental/hashes/closure_expressions.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/812656dc9543a16c27cf0a5aad1171ea3cc01a0d/src%2Ftest%2Fincremental%2Fhashes%2Fclosure_expressions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/812656dc9543a16c27cf0a5aad1171ea3cc01a0d/src%2Ftest%2Fincremental%2Fhashes%2Fclosure_expressions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fincremental%2Fhashes%2Fclosure_expressions.rs?ref=812656dc9543a16c27cf0a5aad1171ea3cc01a0d", "patch": "@@ -16,7 +16,7 @@\n // and make sure that the hash has changed, then change nothing between rev2 and\n // rev3 and make sure that the hash has not changed.\n \n-// must-compile-successfully\n+// compile-pass\n // revisions: cfail1 cfail2 cfail3\n // compile-flags: -Z query-dep-graph -Zincremental-ignore-spans\n "}, {"sha": "d523752c0914a54a5c8cb567d48e773d0b136df2", "filename": "src/test/incremental/hashes/consts.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/812656dc9543a16c27cf0a5aad1171ea3cc01a0d/src%2Ftest%2Fincremental%2Fhashes%2Fconsts.rs", "raw_url": "https://github.com/rust-lang/rust/raw/812656dc9543a16c27cf0a5aad1171ea3cc01a0d/src%2Ftest%2Fincremental%2Fhashes%2Fconsts.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fincremental%2Fhashes%2Fconsts.rs?ref=812656dc9543a16c27cf0a5aad1171ea3cc01a0d", "patch": "@@ -16,7 +16,7 @@\n // and make sure that the hash has changed, then change nothing between rev2 and\n // rev3 and make sure that the hash has not changed.\n \n-// must-compile-successfully\n+// compile-pass\n // revisions: cfail1 cfail2 cfail3\n // compile-flags: -Z query-dep-graph -Zincremental-ignore-spans\n "}, {"sha": "9e8a0a9027ba85207469b1762e7af0797704e3b6", "filename": "src/test/incremental/hashes/enum_constructors.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/812656dc9543a16c27cf0a5aad1171ea3cc01a0d/src%2Ftest%2Fincremental%2Fhashes%2Fenum_constructors.rs", "raw_url": "https://github.com/rust-lang/rust/raw/812656dc9543a16c27cf0a5aad1171ea3cc01a0d/src%2Ftest%2Fincremental%2Fhashes%2Fenum_constructors.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fincremental%2Fhashes%2Fenum_constructors.rs?ref=812656dc9543a16c27cf0a5aad1171ea3cc01a0d", "patch": "@@ -16,7 +16,7 @@\n // and make sure that the hash has changed, then change nothing between rev2 and\n // rev3 and make sure that the hash has not changed.\n \n-// must-compile-successfully\n+// compile-pass\n // revisions: cfail1 cfail2 cfail3\n // compile-flags: -Z query-dep-graph -Zincremental-ignore-spans\n "}, {"sha": "0181ac3a24b77c5e73035a04dcd10c7a7e7f6cab", "filename": "src/test/incremental/hashes/enum_defs.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/812656dc9543a16c27cf0a5aad1171ea3cc01a0d/src%2Ftest%2Fincremental%2Fhashes%2Fenum_defs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/812656dc9543a16c27cf0a5aad1171ea3cc01a0d/src%2Ftest%2Fincremental%2Fhashes%2Fenum_defs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fincremental%2Fhashes%2Fenum_defs.rs?ref=812656dc9543a16c27cf0a5aad1171ea3cc01a0d", "patch": "@@ -21,7 +21,7 @@\n // results in a change of the ICH for the enum's metadata, and that it stays\n // the same between rev2 and rev3.\n \n-// must-compile-successfully\n+// compile-pass\n // revisions: cfail1 cfail2 cfail3\n // compile-flags: -Z query-dep-graph -Zincremental-ignore-spans\n "}, {"sha": "f04f24a2ec7a251fb5e86b9b6d0d91c6215490a3", "filename": "src/test/incremental/hashes/exported_vs_not.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/812656dc9543a16c27cf0a5aad1171ea3cc01a0d/src%2Ftest%2Fincremental%2Fhashes%2Fexported_vs_not.rs", "raw_url": "https://github.com/rust-lang/rust/raw/812656dc9543a16c27cf0a5aad1171ea3cc01a0d/src%2Ftest%2Fincremental%2Fhashes%2Fexported_vs_not.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fincremental%2Fhashes%2Fexported_vs_not.rs?ref=812656dc9543a16c27cf0a5aad1171ea3cc01a0d", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// must-compile-successfully\n+// compile-pass\n // revisions: cfail1 cfail2 cfail3\n // compile-flags: -Z query-dep-graph -Zincremental-ignore-spans\n "}, {"sha": "0e92c717643c44e0c03d33d5cfb54d29f998e91f", "filename": "src/test/incremental/hashes/extern_mods.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/812656dc9543a16c27cf0a5aad1171ea3cc01a0d/src%2Ftest%2Fincremental%2Fhashes%2Fextern_mods.rs", "raw_url": "https://github.com/rust-lang/rust/raw/812656dc9543a16c27cf0a5aad1171ea3cc01a0d/src%2Ftest%2Fincremental%2Fhashes%2Fextern_mods.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fincremental%2Fhashes%2Fextern_mods.rs?ref=812656dc9543a16c27cf0a5aad1171ea3cc01a0d", "patch": "@@ -16,7 +16,7 @@\n // and make sure that the hash has changed, then change nothing between rev2 and\n // rev3 and make sure that the hash has not changed.\n \n-// must-compile-successfully\n+// compile-pass\n // revisions: cfail1 cfail2 cfail3\n // compile-flags: -Z query-dep-graph -Zincremental-ignore-spans\n "}, {"sha": "15546a5bacf4ab20c55846ee659eca57f3007683", "filename": "src/test/incremental/hashes/for_loops.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/812656dc9543a16c27cf0a5aad1171ea3cc01a0d/src%2Ftest%2Fincremental%2Fhashes%2Ffor_loops.rs", "raw_url": "https://github.com/rust-lang/rust/raw/812656dc9543a16c27cf0a5aad1171ea3cc01a0d/src%2Ftest%2Fincremental%2Fhashes%2Ffor_loops.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fincremental%2Fhashes%2Ffor_loops.rs?ref=812656dc9543a16c27cf0a5aad1171ea3cc01a0d", "patch": "@@ -16,7 +16,7 @@\n // and make sure that the hash has changed, then change nothing between rev2 and\n // rev3 and make sure that the hash has not changed.\n \n-// must-compile-successfully\n+// compile-pass\n // revisions: cfail1 cfail2 cfail3\n // compile-flags: -Z query-dep-graph -Zincremental-ignore-spans\n "}, {"sha": "09cc5380d276e16c55744bb44dec35cfeb4022ed", "filename": "src/test/incremental/hashes/function_interfaces.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/812656dc9543a16c27cf0a5aad1171ea3cc01a0d/src%2Ftest%2Fincremental%2Fhashes%2Ffunction_interfaces.rs", "raw_url": "https://github.com/rust-lang/rust/raw/812656dc9543a16c27cf0a5aad1171ea3cc01a0d/src%2Ftest%2Fincremental%2Fhashes%2Ffunction_interfaces.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fincremental%2Fhashes%2Ffunction_interfaces.rs?ref=812656dc9543a16c27cf0a5aad1171ea3cc01a0d", "patch": "@@ -16,7 +16,7 @@\n // and make sure that the hash has changed, then change nothing between rev2 and\n // rev3 and make sure that the hash has not changed.\n \n-// must-compile-successfully\n+// compile-pass\n // revisions: cfail1 cfail2 cfail3\n // compile-flags: -Z query-dep-graph -Zincremental-ignore-spans\n "}, {"sha": "6a1139f1e8ec19d5c3c7df519c8a3e59e678e47d", "filename": "src/test/incremental/hashes/if_expressions.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/812656dc9543a16c27cf0a5aad1171ea3cc01a0d/src%2Ftest%2Fincremental%2Fhashes%2Fif_expressions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/812656dc9543a16c27cf0a5aad1171ea3cc01a0d/src%2Ftest%2Fincremental%2Fhashes%2Fif_expressions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fincremental%2Fhashes%2Fif_expressions.rs?ref=812656dc9543a16c27cf0a5aad1171ea3cc01a0d", "patch": "@@ -16,7 +16,7 @@\n // and make sure that the hash has changed, then change nothing between rev2 and\n // rev3 and make sure that the hash has not changed.\n \n-// must-compile-successfully\n+// compile-pass\n // revisions: cfail1 cfail2 cfail3\n // compile-flags: -Z query-dep-graph -Zincremental-ignore-spans\n "}, {"sha": "fa2d707c8a19c35f97c98746123b0b5ecd2ca81e", "filename": "src/test/incremental/hashes/indexing_expressions.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/812656dc9543a16c27cf0a5aad1171ea3cc01a0d/src%2Ftest%2Fincremental%2Fhashes%2Findexing_expressions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/812656dc9543a16c27cf0a5aad1171ea3cc01a0d/src%2Ftest%2Fincremental%2Fhashes%2Findexing_expressions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fincremental%2Fhashes%2Findexing_expressions.rs?ref=812656dc9543a16c27cf0a5aad1171ea3cc01a0d", "patch": "@@ -16,7 +16,7 @@\n // and make sure that the hash has changed, then change nothing between rev2 and\n // rev3 and make sure that the hash has not changed.\n \n-// must-compile-successfully\n+// compile-pass\n // revisions: cfail1 cfail2 cfail3\n // compile-flags: -Z query-dep-graph -Zincremental-ignore-spans\n "}, {"sha": "dd12fa2192f0b5afeda4c773726b867354cd3c18", "filename": "src/test/incremental/hashes/inherent_impls.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/812656dc9543a16c27cf0a5aad1171ea3cc01a0d/src%2Ftest%2Fincremental%2Fhashes%2Finherent_impls.rs", "raw_url": "https://github.com/rust-lang/rust/raw/812656dc9543a16c27cf0a5aad1171ea3cc01a0d/src%2Ftest%2Fincremental%2Fhashes%2Finherent_impls.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fincremental%2Fhashes%2Finherent_impls.rs?ref=812656dc9543a16c27cf0a5aad1171ea3cc01a0d", "patch": "@@ -16,7 +16,7 @@\n // and make sure that the hash has changed, then change nothing between rev2 and\n // rev3 and make sure that the hash has not changed.\n \n-// must-compile-successfully\n+// compile-pass\n // revisions: cfail1 cfail2 cfail3\n // compile-flags: -Z query-dep-graph -Zincremental-ignore-spans\n "}, {"sha": "cc427f358580e84b6557bf208bd3e309b63ddad7", "filename": "src/test/incremental/hashes/inline_asm.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/812656dc9543a16c27cf0a5aad1171ea3cc01a0d/src%2Ftest%2Fincremental%2Fhashes%2Finline_asm.rs", "raw_url": "https://github.com/rust-lang/rust/raw/812656dc9543a16c27cf0a5aad1171ea3cc01a0d/src%2Ftest%2Fincremental%2Fhashes%2Finline_asm.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fincremental%2Fhashes%2Finline_asm.rs?ref=812656dc9543a16c27cf0a5aad1171ea3cc01a0d", "patch": "@@ -16,7 +16,7 @@\n // and make sure that the hash has changed, then change nothing between rev2 and\n // rev3 and make sure that the hash has not changed.\n \n-// must-compile-successfully\n+// compile-pass\n // revisions: cfail1 cfail2 cfail3\n // compile-flags: -Z query-dep-graph -Zincremental-ignore-spans\n "}, {"sha": "957cb336d9e69b57dc02c8ded15b4dcc7f85746d", "filename": "src/test/incremental/hashes/let_expressions.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/812656dc9543a16c27cf0a5aad1171ea3cc01a0d/src%2Ftest%2Fincremental%2Fhashes%2Flet_expressions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/812656dc9543a16c27cf0a5aad1171ea3cc01a0d/src%2Ftest%2Fincremental%2Fhashes%2Flet_expressions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fincremental%2Fhashes%2Flet_expressions.rs?ref=812656dc9543a16c27cf0a5aad1171ea3cc01a0d", "patch": "@@ -16,7 +16,7 @@\n // and make sure that the hash has changed, then change nothing between rev2 and\n // rev3 and make sure that the hash has not changed.\n \n-// must-compile-successfully\n+// compile-pass\n // revisions: cfail1 cfail2 cfail3\n // compile-flags: -Z query-dep-graph -Zincremental-ignore-spans\n "}, {"sha": "bda8c5f16a06a22e30a9b85c4062094d1190a94a", "filename": "src/test/incremental/hashes/loop_expressions.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/812656dc9543a16c27cf0a5aad1171ea3cc01a0d/src%2Ftest%2Fincremental%2Fhashes%2Floop_expressions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/812656dc9543a16c27cf0a5aad1171ea3cc01a0d/src%2Ftest%2Fincremental%2Fhashes%2Floop_expressions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fincremental%2Fhashes%2Floop_expressions.rs?ref=812656dc9543a16c27cf0a5aad1171ea3cc01a0d", "patch": "@@ -16,7 +16,7 @@\n // and make sure that the hash has changed, then change nothing between rev2 and\n // rev3 and make sure that the hash has not changed.\n \n-// must-compile-successfully\n+// compile-pass\n // revisions: cfail1 cfail2 cfail3\n // compile-flags: -Z query-dep-graph -Zincremental-ignore-spans\n "}, {"sha": "f21b1f31eef6a97911c26d38771c618123c0ebc6", "filename": "src/test/incremental/hashes/match_expressions.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/812656dc9543a16c27cf0a5aad1171ea3cc01a0d/src%2Ftest%2Fincremental%2Fhashes%2Fmatch_expressions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/812656dc9543a16c27cf0a5aad1171ea3cc01a0d/src%2Ftest%2Fincremental%2Fhashes%2Fmatch_expressions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fincremental%2Fhashes%2Fmatch_expressions.rs?ref=812656dc9543a16c27cf0a5aad1171ea3cc01a0d", "patch": "@@ -16,7 +16,7 @@\n // and make sure that the hash has changed, then change nothing between rev2 and\n // rev3 and make sure that the hash has not changed.\n \n-// must-compile-successfully\n+// compile-pass\n // revisions: cfail1 cfail2 cfail3\n // compile-flags: -Z query-dep-graph -Zincremental-ignore-spans\n "}, {"sha": "ffb66c29219d3454896a11d50a62c193fd449eff", "filename": "src/test/incremental/hashes/panic_exprs.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/812656dc9543a16c27cf0a5aad1171ea3cc01a0d/src%2Ftest%2Fincremental%2Fhashes%2Fpanic_exprs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/812656dc9543a16c27cf0a5aad1171ea3cc01a0d/src%2Ftest%2Fincremental%2Fhashes%2Fpanic_exprs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fincremental%2Fhashes%2Fpanic_exprs.rs?ref=812656dc9543a16c27cf0a5aad1171ea3cc01a0d", "patch": "@@ -18,7 +18,7 @@\n // and make sure that the hash has changed, then change nothing between rev2 and\n // rev3 and make sure that the hash has not changed.\n \n-// must-compile-successfully\n+// compile-pass\n // revisions: cfail1 cfail2 cfail3\n // compile-flags: -Z query-dep-graph -C debug-assertions\n "}, {"sha": "95cec734f201c61e1b9a25ca03ab91019f1518ae", "filename": "src/test/incremental/hashes/statics.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/812656dc9543a16c27cf0a5aad1171ea3cc01a0d/src%2Ftest%2Fincremental%2Fhashes%2Fstatics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/812656dc9543a16c27cf0a5aad1171ea3cc01a0d/src%2Ftest%2Fincremental%2Fhashes%2Fstatics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fincremental%2Fhashes%2Fstatics.rs?ref=812656dc9543a16c27cf0a5aad1171ea3cc01a0d", "patch": "@@ -16,7 +16,7 @@\n // and make sure that the hash has changed, then change nothing between rev2 and\n // rev3 and make sure that the hash has not changed.\n \n-// must-compile-successfully\n+// compile-pass\n // revisions: cfail1 cfail2 cfail3\n // compile-flags: -Z query-dep-graph -Zincremental-ignore-spans\n "}, {"sha": "09b661ba619f56403784c67fa85c8f365e250f52", "filename": "src/test/incremental/hashes/struct_constructors.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/812656dc9543a16c27cf0a5aad1171ea3cc01a0d/src%2Ftest%2Fincremental%2Fhashes%2Fstruct_constructors.rs", "raw_url": "https://github.com/rust-lang/rust/raw/812656dc9543a16c27cf0a5aad1171ea3cc01a0d/src%2Ftest%2Fincremental%2Fhashes%2Fstruct_constructors.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fincremental%2Fhashes%2Fstruct_constructors.rs?ref=812656dc9543a16c27cf0a5aad1171ea3cc01a0d", "patch": "@@ -16,7 +16,7 @@\n // and make sure that the hash has changed, then change nothing between rev2 and\n // rev3 and make sure that the hash has not changed.\n \n-// must-compile-successfully\n+// compile-pass\n // revisions: cfail1 cfail2 cfail3\n // compile-flags: -Z query-dep-graph -Zincremental-ignore-spans\n "}, {"sha": "10b1beb04133fbc31663064d33368350c891673e", "filename": "src/test/incremental/hashes/struct_defs.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/812656dc9543a16c27cf0a5aad1171ea3cc01a0d/src%2Ftest%2Fincremental%2Fhashes%2Fstruct_defs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/812656dc9543a16c27cf0a5aad1171ea3cc01a0d/src%2Ftest%2Fincremental%2Fhashes%2Fstruct_defs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fincremental%2Fhashes%2Fstruct_defs.rs?ref=812656dc9543a16c27cf0a5aad1171ea3cc01a0d", "patch": "@@ -21,7 +21,7 @@\n // results in a change of the ICH for the struct's metadata, and that it stays\n // the same between rev2 and rev3.\n \n-// must-compile-successfully\n+// compile-pass\n // revisions: cfail1 cfail2 cfail3\n // compile-flags: -Z query-dep-graph -Zincremental-ignore-spans\n "}, {"sha": "b089d7d1eaee1d06ca1d0c98bf07164db1ff86b3", "filename": "src/test/incremental/hashes/trait_defs.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/812656dc9543a16c27cf0a5aad1171ea3cc01a0d/src%2Ftest%2Fincremental%2Fhashes%2Ftrait_defs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/812656dc9543a16c27cf0a5aad1171ea3cc01a0d/src%2Ftest%2Fincremental%2Fhashes%2Ftrait_defs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fincremental%2Fhashes%2Ftrait_defs.rs?ref=812656dc9543a16c27cf0a5aad1171ea3cc01a0d", "patch": "@@ -21,7 +21,7 @@\n // results in a change of the ICH for the trait's metadata, and that it stays\n // the same between rev2 and rev3.\n \n-// must-compile-successfully\n+// compile-pass\n // revisions: cfail1 cfail2 cfail3\n // compile-flags: -Z query-dep-graph -Zincremental-ignore-spans\n "}, {"sha": "346d14f9392eaa8b435086ac7e0591cc8b4d961f", "filename": "src/test/incremental/hashes/trait_impls.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/812656dc9543a16c27cf0a5aad1171ea3cc01a0d/src%2Ftest%2Fincremental%2Fhashes%2Ftrait_impls.rs", "raw_url": "https://github.com/rust-lang/rust/raw/812656dc9543a16c27cf0a5aad1171ea3cc01a0d/src%2Ftest%2Fincremental%2Fhashes%2Ftrait_impls.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fincremental%2Fhashes%2Ftrait_impls.rs?ref=812656dc9543a16c27cf0a5aad1171ea3cc01a0d", "patch": "@@ -16,7 +16,7 @@\n // and make sure that the hash has changed, then change nothing between rev2 and\n // rev3 and make sure that the hash has not changed.\n \n-// must-compile-successfully\n+// compile-pass\n // revisions: cfail1 cfail2 cfail3\n // compile-flags: -Z query-dep-graph -Zincremental-ignore-spans\n "}, {"sha": "4dffaa424256a12e9b69771eb319e6402b89672b", "filename": "src/test/incremental/hashes/type_defs.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/812656dc9543a16c27cf0a5aad1171ea3cc01a0d/src%2Ftest%2Fincremental%2Fhashes%2Ftype_defs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/812656dc9543a16c27cf0a5aad1171ea3cc01a0d/src%2Ftest%2Fincremental%2Fhashes%2Ftype_defs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fincremental%2Fhashes%2Ftype_defs.rs?ref=812656dc9543a16c27cf0a5aad1171ea3cc01a0d", "patch": "@@ -21,7 +21,7 @@\n // results in a change of the ICH for the enum's metadata, and that it stays\n // the same between rev2 and rev3.\n \n-// must-compile-successfully\n+// compile-pass\n // revisions: cfail1 cfail2 cfail3\n // compile-flags: -Z query-dep-graph -Zincremental-ignore-spans\n "}, {"sha": "be995a86b0ae6734be2d6e38e2a623ded28dc9b3", "filename": "src/test/incremental/hashes/unary_and_binary_exprs.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/812656dc9543a16c27cf0a5aad1171ea3cc01a0d/src%2Ftest%2Fincremental%2Fhashes%2Funary_and_binary_exprs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/812656dc9543a16c27cf0a5aad1171ea3cc01a0d/src%2Ftest%2Fincremental%2Fhashes%2Funary_and_binary_exprs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fincremental%2Fhashes%2Funary_and_binary_exprs.rs?ref=812656dc9543a16c27cf0a5aad1171ea3cc01a0d", "patch": "@@ -16,7 +16,7 @@\n // and make sure that the hash has changed, then change nothing between rev2 and\n // rev3 and make sure that the hash has not changed.\n \n-// must-compile-successfully\n+// compile-pass\n // revisions: cfail1 cfail2 cfail3\n // compile-flags: -Z query-dep-graph -Zincremental-ignore-spans\n "}, {"sha": "a15e239a6b159e497ea756baff35e06a977c6377", "filename": "src/test/incremental/hashes/while_let_loops.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/812656dc9543a16c27cf0a5aad1171ea3cc01a0d/src%2Ftest%2Fincremental%2Fhashes%2Fwhile_let_loops.rs", "raw_url": "https://github.com/rust-lang/rust/raw/812656dc9543a16c27cf0a5aad1171ea3cc01a0d/src%2Ftest%2Fincremental%2Fhashes%2Fwhile_let_loops.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fincremental%2Fhashes%2Fwhile_let_loops.rs?ref=812656dc9543a16c27cf0a5aad1171ea3cc01a0d", "patch": "@@ -16,7 +16,7 @@\n // and make sure that the hash has changed, then change nothing between rev2 and\n // rev3 and make sure that the hash has not changed.\n \n-// must-compile-successfully\n+// compile-pass\n // revisions: cfail1 cfail2 cfail3\n // compile-flags: -Z query-dep-graph -Zincremental-ignore-spans\n "}, {"sha": "4311cef28d1423b354add1994d049539796c8781", "filename": "src/test/incremental/hashes/while_loops.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/812656dc9543a16c27cf0a5aad1171ea3cc01a0d/src%2Ftest%2Fincremental%2Fhashes%2Fwhile_loops.rs", "raw_url": "https://github.com/rust-lang/rust/raw/812656dc9543a16c27cf0a5aad1171ea3cc01a0d/src%2Ftest%2Fincremental%2Fhashes%2Fwhile_loops.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fincremental%2Fhashes%2Fwhile_loops.rs?ref=812656dc9543a16c27cf0a5aad1171ea3cc01a0d", "patch": "@@ -16,7 +16,7 @@\n // and make sure that the hash has changed, then change nothing between rev2 and\n // rev3 and make sure that the hash has not changed.\n \n-// must-compile-successfully\n+// compile-pass\n // revisions: cfail1 cfail2 cfail3\n // compile-flags: -Z query-dep-graph -Zincremental-ignore-spans\n "}, {"sha": "47369e95dceadd7deb07a0f0c9c0e96b528f7f33", "filename": "src/test/incremental/ich_nested_items.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/812656dc9543a16c27cf0a5aad1171ea3cc01a0d/src%2Ftest%2Fincremental%2Fich_nested_items.rs", "raw_url": "https://github.com/rust-lang/rust/raw/812656dc9543a16c27cf0a5aad1171ea3cc01a0d/src%2Ftest%2Fincremental%2Fich_nested_items.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fincremental%2Fich_nested_items.rs?ref=812656dc9543a16c27cf0a5aad1171ea3cc01a0d", "patch": "@@ -12,7 +12,7 @@\n // the nested items (or even added new ones).\n \n // revisions: cfail1 cfail2\n-// must-compile-successfully\n+// compile-pass\n \n #![crate_type = \"rlib\"]\n #![feature(rustc_attrs)]"}, {"sha": "921c7c25a06264a1b8a1629e8e6aa5d63d7b7925", "filename": "src/test/incremental/issue-42602.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/812656dc9543a16c27cf0a5aad1171ea3cc01a0d/src%2Ftest%2Fincremental%2Fissue-42602.rs", "raw_url": "https://github.com/rust-lang/rust/raw/812656dc9543a16c27cf0a5aad1171ea3cc01a0d/src%2Ftest%2Fincremental%2Fissue-42602.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fincremental%2Fissue-42602.rs?ref=812656dc9543a16c27cf0a5aad1171ea3cc01a0d", "patch": "@@ -18,7 +18,7 @@\n \n // revisions:cfail1 cfail2 cfail3\n // compile-flags:-Zquery-dep-graph\n-// must-compile-successfully\n+// compile-pass\n \n #![feature(rustc_attrs)]\n "}, {"sha": "a5b0101c68f22410ec07efcd24332c7fe66b7c18", "filename": "src/test/incremental/issue-49595/issue_49595.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/812656dc9543a16c27cf0a5aad1171ea3cc01a0d/src%2Ftest%2Fincremental%2Fissue-49595%2Fissue_49595.rs", "raw_url": "https://github.com/rust-lang/rust/raw/812656dc9543a16c27cf0a5aad1171ea3cc01a0d/src%2Ftest%2Fincremental%2Fissue-49595%2Fissue_49595.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fincremental%2Fissue-49595%2Fissue_49595.rs?ref=812656dc9543a16c27cf0a5aad1171ea3cc01a0d", "patch": "@@ -10,7 +10,7 @@\n \n // revisions:cfail1 cfail2 cfail3\n // compile-flags: -Z query-dep-graph --test\n-// must-compile-successfully\n+// compile-pass\n \n #![feature(rustc_attrs)]\n #![crate_type = \"rlib\"]"}, {"sha": "925538879aa3c1fe0b300689ab5e999375b2e702", "filename": "src/test/incremental/krate-inherent.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/812656dc9543a16c27cf0a5aad1171ea3cc01a0d/src%2Ftest%2Fincremental%2Fkrate-inherent.rs", "raw_url": "https://github.com/rust-lang/rust/raw/812656dc9543a16c27cf0a5aad1171ea3cc01a0d/src%2Ftest%2Fincremental%2Fkrate-inherent.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fincremental%2Fkrate-inherent.rs?ref=812656dc9543a16c27cf0a5aad1171ea3cc01a0d", "patch": "@@ -10,7 +10,7 @@\n \n // revisions: cfail1 cfail2\n // compile-flags: -Z query-dep-graph\n-// must-compile-successfully\n+// compile-pass\n \n #![allow(warnings)]\n #![feature(rustc_attrs)]"}, {"sha": "7c1a5c5c2e6beac906ac4ea31703ba6a5eb7e448", "filename": "src/test/incremental/macro_export.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/812656dc9543a16c27cf0a5aad1171ea3cc01a0d/src%2Ftest%2Fincremental%2Fmacro_export.rs", "raw_url": "https://github.com/rust-lang/rust/raw/812656dc9543a16c27cf0a5aad1171ea3cc01a0d/src%2Ftest%2Fincremental%2Fmacro_export.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fincremental%2Fmacro_export.rs?ref=812656dc9543a16c27cf0a5aad1171ea3cc01a0d", "patch": "@@ -9,7 +9,7 @@\n // except according to those terms.\n \n // revisions: cfail1 cfail2 cfail3\n-// must-compile-successfully\n+// compile-pass\n \n // This test case makes sure that we can compile with incremental compilation\n // enabled when there are macros exported from this crate. (See #37756)"}, {"sha": "a8c3f70f47beffbccf031afd7c27f78e52d1532f", "filename": "src/test/incremental/remove_source_file/main.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/812656dc9543a16c27cf0a5aad1171ea3cc01a0d/src%2Ftest%2Fincremental%2Fremove_source_file%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/812656dc9543a16c27cf0a5aad1171ea3cc01a0d/src%2Ftest%2Fincremental%2Fremove_source_file%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fincremental%2Fremove_source_file%2Fmain.rs?ref=812656dc9543a16c27cf0a5aad1171ea3cc01a0d", "patch": "@@ -16,7 +16,7 @@\n // Note that we specify -g so that the FileMaps actually get referenced by the\n // incr. comp. cache:\n // compile-flags: -Z query-dep-graph -g\n-// must-compile-successfully\n+// compile-pass\n \n #![crate_type= \"rlib\"]\n "}, {"sha": "35c906525cbffb6705ba9a574c5c389e160746ec", "filename": "src/test/incremental/string_constant.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/812656dc9543a16c27cf0a5aad1171ea3cc01a0d/src%2Ftest%2Fincremental%2Fstring_constant.rs", "raw_url": "https://github.com/rust-lang/rust/raw/812656dc9543a16c27cf0a5aad1171ea3cc01a0d/src%2Ftest%2Fincremental%2Fstring_constant.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fincremental%2Fstring_constant.rs?ref=812656dc9543a16c27cf0a5aad1171ea3cc01a0d", "patch": "@@ -10,7 +10,7 @@\n \n // revisions: cfail1 cfail2\n // compile-flags: -Z query-dep-graph\n-// must-compile-successfully\n+// compile-pass\n \n #![allow(warnings)]\n #![feature(rustc_attrs)]"}, {"sha": "d50ffff5c1e14a86f6edbe5900ab653aab18672b", "filename": "src/test/incremental/warnings-reemitted.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/812656dc9543a16c27cf0a5aad1171ea3cc01a0d/src%2Ftest%2Fincremental%2Fwarnings-reemitted.rs", "raw_url": "https://github.com/rust-lang/rust/raw/812656dc9543a16c27cf0a5aad1171ea3cc01a0d/src%2Ftest%2Fincremental%2Fwarnings-reemitted.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fincremental%2Fwarnings-reemitted.rs?ref=812656dc9543a16c27cf0a5aad1171ea3cc01a0d", "patch": "@@ -10,7 +10,7 @@\n \n // revisions: cfail1 cfail2 cfail3\n // compile-flags: -Coverflow-checks=on\n-// must-compile-successfully\n+// compile-pass\n \n #![allow(warnings)]\n "}, {"sha": "219eca6fd21e5820684b643fa9ba974f7fc48984", "filename": "src/test/run-fail/rfc-1937-termination-trait/termination-trait-for-box-dyn-error.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/812656dc9543a16c27cf0a5aad1171ea3cc01a0d/src%2Ftest%2Frun-fail%2Frfc-1937-termination-trait%2Ftermination-trait-for-box-dyn-error.rs", "raw_url": "https://github.com/rust-lang/rust/raw/812656dc9543a16c27cf0a5aad1171ea3cc01a0d/src%2Ftest%2Frun-fail%2Frfc-1937-termination-trait%2Ftermination-trait-for-box-dyn-error.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Frfc-1937-termination-trait%2Ftermination-trait-for-box-dyn-error.rs?ref=812656dc9543a16c27cf0a5aad1171ea3cc01a0d", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// must-compile-successfully\n+// compile-pass\n // failure-status: 1\n \n #![feature(dyn_trait)]"}, {"sha": "4fb7ae9c10c90b839c5daf46fb73064dd698b3f4", "filename": "src/test/run-fail/rfc-1937-termination-trait/termination-trait-for-result-box-error_err.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/812656dc9543a16c27cf0a5aad1171ea3cc01a0d/src%2Ftest%2Frun-fail%2Frfc-1937-termination-trait%2Ftermination-trait-for-result-box-error_err.rs", "raw_url": "https://github.com/rust-lang/rust/raw/812656dc9543a16c27cf0a5aad1171ea3cc01a0d/src%2Ftest%2Frun-fail%2Frfc-1937-termination-trait%2Ftermination-trait-for-result-box-error_err.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Frfc-1937-termination-trait%2Ftermination-trait-for-result-box-error_err.rs?ref=812656dc9543a16c27cf0a5aad1171ea3cc01a0d", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// must-compile-successfully\n+// compile-pass\n // failure-status: 1\n \n use std::io::{Error, ErrorKind};"}, {"sha": "a01ebb768b49b5f5cf62533d63cfdb6e3c80e0d0", "filename": "src/test/ui/check_match/issue-43253.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/812656dc9543a16c27cf0a5aad1171ea3cc01a0d/src%2Ftest%2Fui%2Fcheck_match%2Fissue-43253.rs", "raw_url": "https://github.com/rust-lang/rust/raw/812656dc9543a16c27cf0a5aad1171ea3cc01a0d/src%2Ftest%2Fui%2Fcheck_match%2Fissue-43253.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcheck_match%2Fissue-43253.rs?ref=812656dc9543a16c27cf0a5aad1171ea3cc01a0d", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// must-compile-successfully\n+// compile-pass\n \n #![feature(exclusive_range_pattern)]\n #![warn(unreachable_patterns)]"}, {"sha": "5e6dde7413bd739708fe3b246cd135135fa40790", "filename": "src/test/ui/codemap_tests/unicode_3.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/812656dc9543a16c27cf0a5aad1171ea3cc01a0d/src%2Ftest%2Fui%2Fcodemap_tests%2Funicode_3.rs", "raw_url": "https://github.com/rust-lang/rust/raw/812656dc9543a16c27cf0a5aad1171ea3cc01a0d/src%2Ftest%2Fui%2Fcodemap_tests%2Funicode_3.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcodemap_tests%2Funicode_3.rs?ref=812656dc9543a16c27cf0a5aad1171ea3cc01a0d", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// must-compile-successfully\n+// compile-pass\n \n fn main() {\n     let s = \"Z\u0368A\u0351\u0366\u0352\u034b\u0364\u0351\u031aL\u0304\u0351\u034bG\u0302\u0368\u0365\u033f\u0352\u033d\u0344O\u0365\u035b\u036d!\u030f\"; while true { break; }"}, {"sha": "e661444a7b47d4dce72f711a75351ae2aab5bd35", "filename": "src/test/ui/const-eval/const_transmute.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/812656dc9543a16c27cf0a5aad1171ea3cc01a0d/src%2Ftest%2Fui%2Fconst-eval%2Fconst_transmute.rs", "raw_url": "https://github.com/rust-lang/rust/raw/812656dc9543a16c27cf0a5aad1171ea3cc01a0d/src%2Ftest%2Fui%2Fconst-eval%2Fconst_transmute.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-eval%2Fconst_transmute.rs?ref=812656dc9543a16c27cf0a5aad1171ea3cc01a0d", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// must-compile-successfully\n+// compile-pass\n // run-pass\n \n union Transmute<T: Copy, U: Copy> {"}, {"sha": "f6a2db31d371ad6c86c54296fc12104eb4c6cc38", "filename": "src/test/ui/const-eval/issue-47971.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/812656dc9543a16c27cf0a5aad1171ea3cc01a0d/src%2Ftest%2Fui%2Fconst-eval%2Fissue-47971.rs", "raw_url": "https://github.com/rust-lang/rust/raw/812656dc9543a16c27cf0a5aad1171ea3cc01a0d/src%2Ftest%2Fui%2Fconst-eval%2Fissue-47971.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-eval%2Fissue-47971.rs?ref=812656dc9543a16c27cf0a5aad1171ea3cc01a0d", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// must-compile-successfully\n+// compile-pass\n \n #![feature(const_fn)]\n "}, {"sha": "41d5192d33db4739eb3fd65eec31cf669a220527", "filename": "src/test/ui/const-eval/no_lint_for_statically_known_error.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/812656dc9543a16c27cf0a5aad1171ea3cc01a0d/src%2Ftest%2Fui%2Fconst-eval%2Fno_lint_for_statically_known_error.rs", "raw_url": "https://github.com/rust-lang/rust/raw/812656dc9543a16c27cf0a5aad1171ea3cc01a0d/src%2Ftest%2Fui%2Fconst-eval%2Fno_lint_for_statically_known_error.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-eval%2Fno_lint_for_statically_known_error.rs?ref=812656dc9543a16c27cf0a5aad1171ea3cc01a0d", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// must-compile-successfully\n+// compile-pass\n \n // if `X` were used instead of `x`, `X - 10` would result in a lint.\n // This file should never produce a lint, no matter how the const"}, {"sha": "f51cce5d4e0538147c8ec46e024ce6c5cdb6afea", "filename": "src/test/ui/const-expr-addr-operator.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/812656dc9543a16c27cf0a5aad1171ea3cc01a0d/src%2Ftest%2Fui%2Fconst-expr-addr-operator.rs", "raw_url": "https://github.com/rust-lang/rust/raw/812656dc9543a16c27cf0a5aad1171ea3cc01a0d/src%2Ftest%2Fui%2Fconst-expr-addr-operator.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-expr-addr-operator.rs?ref=812656dc9543a16c27cf0a5aad1171ea3cc01a0d", "patch": "@@ -9,7 +9,7 @@\n // except according to those terms.\n \n // Encountered while testing #44614.\n-// must-compile-successfully\n+// compile-pass\n \n pub fn main() {\n     // Constant of generic type (int)"}, {"sha": "87d5e13df6eb30475e10794ebec02436c2d992c7", "filename": "src/test/ui/const-pattern-not-const-evaluable.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/812656dc9543a16c27cf0a5aad1171ea3cc01a0d/src%2Ftest%2Fui%2Fconst-pattern-not-const-evaluable.rs", "raw_url": "https://github.com/rust-lang/rust/raw/812656dc9543a16c27cf0a5aad1171ea3cc01a0d/src%2Ftest%2Fui%2Fconst-pattern-not-const-evaluable.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-pattern-not-const-evaluable.rs?ref=812656dc9543a16c27cf0a5aad1171ea3cc01a0d", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// must-compile-successfully\n+// compile-pass\n \n #![feature(const_fn)]\n "}, {"sha": "88fc3f7f01756727264f5313e8308b56aa982f9b", "filename": "src/test/ui/explain.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/812656dc9543a16c27cf0a5aad1171ea3cc01a0d/src%2Ftest%2Fui%2Fexplain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/812656dc9543a16c27cf0a5aad1171ea3cc01a0d/src%2Ftest%2Fui%2Fexplain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fexplain.rs?ref=812656dc9543a16c27cf0a5aad1171ea3cc01a0d", "patch": "@@ -9,4 +9,4 @@\n // except according to those terms.\n \n // compile-flags: --explain E0591\n-// must-compile-successfully\n+// compile-pass"}, {"sha": "c89cbd0420dab98ef540be8bd3f851a1c40653cf", "filename": "src/test/ui/feature-gate-const-indexing.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/812656dc9543a16c27cf0a5aad1171ea3cc01a0d/src%2Ftest%2Fui%2Ffeature-gate-const-indexing.rs", "raw_url": "https://github.com/rust-lang/rust/raw/812656dc9543a16c27cf0a5aad1171ea3cc01a0d/src%2Ftest%2Fui%2Ffeature-gate-const-indexing.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gate-const-indexing.rs?ref=812656dc9543a16c27cf0a5aad1171ea3cc01a0d", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// must-compile-successfully\n+// compile-pass\n \n fn main() {\n     const ARR: [i32; 6] = [42, 43, 44, 45, 46, 47];"}, {"sha": "620874e5c2d855c7ef2f61d5dc4c0719fb908d1d", "filename": "src/test/ui/feature-gate/issue-43106-gating-of-macro_escape.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/812656dc9543a16c27cf0a5aad1171ea3cc01a0d/src%2Ftest%2Fui%2Ffeature-gate%2Fissue-43106-gating-of-macro_escape.rs", "raw_url": "https://github.com/rust-lang/rust/raw/812656dc9543a16c27cf0a5aad1171ea3cc01a0d/src%2Ftest%2Fui%2Ffeature-gate%2Fissue-43106-gating-of-macro_escape.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gate%2Fissue-43106-gating-of-macro_escape.rs?ref=812656dc9543a16c27cf0a5aad1171ea3cc01a0d", "patch": "@@ -13,7 +13,7 @@\n // `#![macro_escape]` is incompatible with crate-level `#![macro_use]`\n // already present in issue-43106-gating-of-builtin-attrs.\n \n-// must-compile-successfully\n+// compile-pass\n \n #![macro_escape]\n //~^ WARN macro_escape is a deprecated synonym for macro_use"}, {"sha": "81113d949e17330b1b4173977d3ac791d4e3c511", "filename": "src/test/ui/generic-param-attrs.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/812656dc9543a16c27cf0a5aad1171ea3cc01a0d/src%2Ftest%2Fui%2Fgeneric-param-attrs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/812656dc9543a16c27cf0a5aad1171ea3cc01a0d/src%2Ftest%2Fui%2Fgeneric-param-attrs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fgeneric-param-attrs.rs?ref=812656dc9543a16c27cf0a5aad1171ea3cc01a0d", "patch": "@@ -16,7 +16,7 @@\n // using `rustc_attrs` feature. There is a separate compile-fail/ test\n // ensuring that the attribute feature-gating works in this context.)\n \n-// must-compile-successfully\n+// compile-pass\n \n #![feature(rustc_attrs)]\n #![allow(dead_code)]"}, {"sha": "bf6e5225124c7ec85c0af7a90e1a0013cc52ea95", "filename": "src/test/ui/hello_world/main.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/812656dc9543a16c27cf0a5aad1171ea3cc01a0d/src%2Ftest%2Fui%2Fhello_world%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/812656dc9543a16c27cf0a5aad1171ea3cc01a0d/src%2Ftest%2Fui%2Fhello_world%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fhello_world%2Fmain.rs?ref=812656dc9543a16c27cf0a5aad1171ea3cc01a0d", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// must-compile-successfully\n+// compile-pass\n \n // Test that compiling hello world succeeds with no output of any kind.\n "}, {"sha": "88dc85f1620dd55e69abe383e5528538754ade3f", "filename": "src/test/ui/inference-variable-behind-raw-pointer.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/812656dc9543a16c27cf0a5aad1171ea3cc01a0d/src%2Ftest%2Fui%2Finference-variable-behind-raw-pointer.rs", "raw_url": "https://github.com/rust-lang/rust/raw/812656dc9543a16c27cf0a5aad1171ea3cc01a0d/src%2Ftest%2Fui%2Finference-variable-behind-raw-pointer.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Finference-variable-behind-raw-pointer.rs?ref=812656dc9543a16c27cf0a5aad1171ea3cc01a0d", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// must-compile-successfully\n+// compile-pass\n \n // tests that the following code compiles, but produces a future-compatibility warning\n "}, {"sha": "d9debe34c4d5aa5ebfc94f5fad00a797659c1fba", "filename": "src/test/ui/issue-38875/issue_38875.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/812656dc9543a16c27cf0a5aad1171ea3cc01a0d/src%2Ftest%2Fui%2Fissue-38875%2Fissue_38875.rs", "raw_url": "https://github.com/rust-lang/rust/raw/812656dc9543a16c27cf0a5aad1171ea3cc01a0d/src%2Ftest%2Fui%2Fissue-38875%2Fissue_38875.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-38875%2Fissue_38875.rs?ref=812656dc9543a16c27cf0a5aad1171ea3cc01a0d", "patch": "@@ -9,7 +9,7 @@\n // except according to those terms.\n \n // aux-build:issue_38875_b.rs\n-// must-compile-successfully\n+// compile-pass\n \n extern crate issue_38875_b;\n "}, {"sha": "2b78c7d9b708d50f170b9f61f9d8e4121b8ee23f", "filename": "src/test/ui/issue-47094.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/812656dc9543a16c27cf0a5aad1171ea3cc01a0d/src%2Ftest%2Fui%2Fissue-47094.rs", "raw_url": "https://github.com/rust-lang/rust/raw/812656dc9543a16c27cf0a5aad1171ea3cc01a0d/src%2Ftest%2Fui%2Fissue-47094.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-47094.rs?ref=812656dc9543a16c27cf0a5aad1171ea3cc01a0d", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// must-compile-successfully\n+// compile-pass\n \n #[repr(C,u8)]\n enum Foo {"}, {"sha": "4e12067f9949b31437234970d5c89c7b564d626e", "filename": "src/test/ui/lint/command-line-lint-group-allow.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/812656dc9543a16c27cf0a5aad1171ea3cc01a0d/src%2Ftest%2Fui%2Flint%2Fcommand-line-lint-group-allow.rs", "raw_url": "https://github.com/rust-lang/rust/raw/812656dc9543a16c27cf0a5aad1171ea3cc01a0d/src%2Ftest%2Fui%2Flint%2Fcommand-line-lint-group-allow.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Fcommand-line-lint-group-allow.rs?ref=812656dc9543a16c27cf0a5aad1171ea3cc01a0d", "patch": "@@ -9,7 +9,7 @@\n // except according to those terms.\n \n // compile-flags: -A bad-style\n-// must-compile-successfully\n+// compile-pass\n \n fn main() {\n     let _InappropriateCamelCasing = true;"}, {"sha": "76cee225b7c18eb9cd28e3d6a0eb6411c756676d", "filename": "src/test/ui/lint/command-line-lint-group-warn.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/812656dc9543a16c27cf0a5aad1171ea3cc01a0d/src%2Ftest%2Fui%2Flint%2Fcommand-line-lint-group-warn.rs", "raw_url": "https://github.com/rust-lang/rust/raw/812656dc9543a16c27cf0a5aad1171ea3cc01a0d/src%2Ftest%2Fui%2Flint%2Fcommand-line-lint-group-warn.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Fcommand-line-lint-group-warn.rs?ref=812656dc9543a16c27cf0a5aad1171ea3cc01a0d", "patch": "@@ -9,7 +9,7 @@\n // except according to those terms.\n \n // compile-flags: -W bad-style\n-// must-compile-successfully\n+// compile-pass\n \n fn main() {\n     let _InappropriateCamelCasing = true;"}, {"sha": "18b83370355b644e8dc5ea646c1df9c64489ec8c", "filename": "src/test/ui/lint/issue-47390-unused-variable-in-struct-pattern.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/812656dc9543a16c27cf0a5aad1171ea3cc01a0d/src%2Ftest%2Fui%2Flint%2Fissue-47390-unused-variable-in-struct-pattern.rs", "raw_url": "https://github.com/rust-lang/rust/raw/812656dc9543a16c27cf0a5aad1171ea3cc01a0d/src%2Ftest%2Fui%2Flint%2Fissue-47390-unused-variable-in-struct-pattern.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Fissue-47390-unused-variable-in-struct-pattern.rs?ref=812656dc9543a16c27cf0a5aad1171ea3cc01a0d", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// must-compile-successfully\n+// compile-pass\n \n #![warn(unused)] // UI tests pass `-A unused` (#43896)\n "}, {"sha": "7f623727aac63f9a0d11e47a7b770066985335e3", "filename": "src/test/ui/lint/issue-47775-nested-macro-unnecessary-parens-arg.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/812656dc9543a16c27cf0a5aad1171ea3cc01a0d/src%2Ftest%2Fui%2Flint%2Fissue-47775-nested-macro-unnecessary-parens-arg.rs", "raw_url": "https://github.com/rust-lang/rust/raw/812656dc9543a16c27cf0a5aad1171ea3cc01a0d/src%2Ftest%2Fui%2Flint%2Fissue-47775-nested-macro-unnecessary-parens-arg.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Fissue-47775-nested-macro-unnecessary-parens-arg.rs?ref=812656dc9543a16c27cf0a5aad1171ea3cc01a0d", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// must-compile-successfully\n+// compile-pass\n \n #![warn(unused_parens)]\n "}, {"sha": "fa3b491db62251deaefca8c54ea8198bfa2845ff", "filename": "src/test/ui/lint/not_found.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/812656dc9543a16c27cf0a5aad1171ea3cc01a0d/src%2Ftest%2Fui%2Flint%2Fnot_found.rs", "raw_url": "https://github.com/rust-lang/rust/raw/812656dc9543a16c27cf0a5aad1171ea3cc01a0d/src%2Ftest%2Fui%2Flint%2Fnot_found.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Fnot_found.rs?ref=812656dc9543a16c27cf0a5aad1171ea3cc01a0d", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// must-compile-successfully\n+// compile-pass\n \n // this tests the `unknown_lint` lint, especially the suggestions\n "}, {"sha": "6e1e3ee8f437c0b0e709e35a22ec7e40d707e3b2", "filename": "src/test/ui/lint/type-overflow.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/812656dc9543a16c27cf0a5aad1171ea3cc01a0d/src%2Ftest%2Fui%2Flint%2Ftype-overflow.rs", "raw_url": "https://github.com/rust-lang/rust/raw/812656dc9543a16c27cf0a5aad1171ea3cc01a0d/src%2Ftest%2Fui%2Flint%2Ftype-overflow.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Ftype-overflow.rs?ref=812656dc9543a16c27cf0a5aad1171ea3cc01a0d", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// must-compile-successfully\n+// compile-pass\n \n fn main() {\n     let error = 255i8; //~WARNING literal out of range for i8"}, {"sha": "f5e6b4d3b48622d2a30b591490f41c3407a6ea07", "filename": "src/test/ui/lint/unreachable_pub-pub_crate.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/812656dc9543a16c27cf0a5aad1171ea3cc01a0d/src%2Ftest%2Fui%2Flint%2Funreachable_pub-pub_crate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/812656dc9543a16c27cf0a5aad1171ea3cc01a0d/src%2Ftest%2Fui%2Flint%2Funreachable_pub-pub_crate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Funreachable_pub-pub_crate.rs?ref=812656dc9543a16c27cf0a5aad1171ea3cc01a0d", "patch": "@@ -14,7 +14,7 @@\n // suggestions to use `crate` given when it is on). When that feature becomes\n // stable, this test can be deleted.\n \n-// must-compile-successfully\n+// compile-pass\n \n #![feature(macro_vis_matcher)]\n "}, {"sha": "347579c3e7bb93df13e9d262e7d6561241d1e9a1", "filename": "src/test/ui/lint/unreachable_pub.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/812656dc9543a16c27cf0a5aad1171ea3cc01a0d/src%2Ftest%2Fui%2Flint%2Funreachable_pub.rs", "raw_url": "https://github.com/rust-lang/rust/raw/812656dc9543a16c27cf0a5aad1171ea3cc01a0d/src%2Ftest%2Fui%2Flint%2Funreachable_pub.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Funreachable_pub.rs?ref=812656dc9543a16c27cf0a5aad1171ea3cc01a0d", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// must-compile-successfully\n+// compile-pass\n \n #![feature(crate_visibility_modifier)]\n #![feature(macro_vis_matcher)]"}, {"sha": "187e7f31dfd710331942a3711a2fc8a740801c40", "filename": "src/test/ui/lint/unused_parens_json_suggestion.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/812656dc9543a16c27cf0a5aad1171ea3cc01a0d/src%2Ftest%2Fui%2Flint%2Funused_parens_json_suggestion.rs", "raw_url": "https://github.com/rust-lang/rust/raw/812656dc9543a16c27cf0a5aad1171ea3cc01a0d/src%2Ftest%2Fui%2Flint%2Funused_parens_json_suggestion.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Funused_parens_json_suggestion.rs?ref=812656dc9543a16c27cf0a5aad1171ea3cc01a0d", "patch": "@@ -9,7 +9,7 @@\n // except according to those terms.\n \n // compile-flags: --error-format pretty-json -Zunstable-options\n-// must-compile-successfully\n+// compile-pass\n \n // The output for humans should just highlight the whole span without showing\n // the suggested replacement, but we also want to test that suggested"}, {"sha": "40d3758ded5c67be4e84d06fd1ba5e59e90d906f", "filename": "src/test/ui/lint/unused_parens_json_suggestion.stderr", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/812656dc9543a16c27cf0a5aad1171ea3cc01a0d/src%2Ftest%2Fui%2Flint%2Funused_parens_json_suggestion.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/812656dc9543a16c27cf0a5aad1171ea3cc01a0d/src%2Ftest%2Fui%2Flint%2Funused_parens_json_suggestion.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Funused_parens_json_suggestion.stderr?ref=812656dc9543a16c27cf0a5aad1171ea3cc01a0d", "patch": "@@ -8,8 +8,8 @@\n   \"spans\": [\n     {\n       \"file_name\": \"$DIR/unused_parens_json_suggestion.rs\",\n-      \"byte_start\": 1056,\n-      \"byte_end\": 1069,\n+      \"byte_start\": 1043,\n+      \"byte_end\": 1056,\n       \"line_start\": 25,\n       \"line_end\": 25,\n       \"column_start\": 14,\n@@ -35,8 +35,8 @@\n       \"spans\": [\n         {\n           \"file_name\": \"$DIR/unused_parens_json_suggestion.rs\",\n-          \"byte_start\": 902,\n-          \"byte_end\": 915,\n+          \"byte_start\": 889,\n+          \"byte_end\": 902,\n           \"line_start\": 20,\n           \"line_end\": 20,\n           \"column_start\": 9,\n@@ -64,8 +64,8 @@\n       \"spans\": [\n         {\n           \"file_name\": \"$DIR/unused_parens_json_suggestion.rs\",\n-          \"byte_start\": 1056,\n-          \"byte_end\": 1069,\n+          \"byte_start\": 1043,\n+          \"byte_end\": 1056,\n           \"line_start\": 25,\n           \"line_end\": 25,\n           \"column_start\": 14,"}, {"sha": "996b172c87b01f3b34a35b3a4a3c6fd962e9acc3", "filename": "src/test/ui/macros/trace-macro.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/812656dc9543a16c27cf0a5aad1171ea3cc01a0d/src%2Ftest%2Fui%2Fmacros%2Ftrace-macro.rs", "raw_url": "https://github.com/rust-lang/rust/raw/812656dc9543a16c27cf0a5aad1171ea3cc01a0d/src%2Ftest%2Fui%2Fmacros%2Ftrace-macro.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmacros%2Ftrace-macro.rs?ref=812656dc9543a16c27cf0a5aad1171ea3cc01a0d", "patch": "@@ -9,7 +9,7 @@\n // except according to those terms.\n \n // compile-flags: -Z trace-macros\n-// must-compile-successfully\n+// compile-pass\n \n fn main() {\n     println!(\"Hello, World!\");"}, {"sha": "1ccfa61f4ce4665b86869b19b0ab57b3476ed096", "filename": "src/test/ui/nll/closure-requirements/propagate-despite-same-free-region.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/812656dc9543a16c27cf0a5aad1171ea3cc01a0d/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fpropagate-despite-same-free-region.rs", "raw_url": "https://github.com/rust-lang/rust/raw/812656dc9543a16c27cf0a5aad1171ea3cc01a0d/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fpropagate-despite-same-free-region.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fpropagate-despite-same-free-region.rs?ref=812656dc9543a16c27cf0a5aad1171ea3cc01a0d", "patch": "@@ -14,7 +14,7 @@\n // regions is erased.\n \n // compile-flags:-Znll -Zborrowck=mir -Zverbose\n-// must-compile-successfully\n+// compile-pass\n \n #![feature(rustc_attrs)]\n "}, {"sha": "7454a8e71f2708c7b1a1a46b8f1bc011e4b1e93a", "filename": "src/test/ui/nll/closure-requirements/region-lbr1-does-outlive-lbr2-because-implied-bound.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/812656dc9543a16c27cf0a5aad1171ea3cc01a0d/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fregion-lbr1-does-outlive-lbr2-because-implied-bound.rs", "raw_url": "https://github.com/rust-lang/rust/raw/812656dc9543a16c27cf0a5aad1171ea3cc01a0d/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fregion-lbr1-does-outlive-lbr2-because-implied-bound.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fregion-lbr1-does-outlive-lbr2-because-implied-bound.rs?ref=812656dc9543a16c27cf0a5aad1171ea3cc01a0d", "patch": "@@ -12,7 +12,7 @@\n // report an error because of the (implied) bound that `'b: 'a`.\n \n // compile-flags:-Znll -Zborrowck=mir -Zverbose\n-// must-compile-successfully\n+// compile-pass\n \n #![allow(warnings)]\n "}, {"sha": "589d8ffd28f0b3aeeff8b301f2a36270635ec596", "filename": "src/test/ui/nll/constant.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/812656dc9543a16c27cf0a5aad1171ea3cc01a0d/src%2Ftest%2Fui%2Fnll%2Fconstant.rs", "raw_url": "https://github.com/rust-lang/rust/raw/812656dc9543a16c27cf0a5aad1171ea3cc01a0d/src%2Ftest%2Fui%2Fnll%2Fconstant.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fconstant.rs?ref=812656dc9543a16c27cf0a5aad1171ea3cc01a0d", "patch": "@@ -12,7 +12,7 @@\n // arbitrary types without ICEs.\n \n // compile-flags:-Znll -Zborrowck=mir -Zverbose\n-// must-compile-successfully\n+// compile-pass\n \n const HI: &str = \"hi\";\n "}, {"sha": "6dcbe0a528d90a3a522defa96ea87a305a3a42f0", "filename": "src/test/ui/nll/drop-may-dangle.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/812656dc9543a16c27cf0a5aad1171ea3cc01a0d/src%2Ftest%2Fui%2Fnll%2Fdrop-may-dangle.rs", "raw_url": "https://github.com/rust-lang/rust/raw/812656dc9543a16c27cf0a5aad1171ea3cc01a0d/src%2Ftest%2Fui%2Fnll%2Fdrop-may-dangle.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fdrop-may-dangle.rs?ref=812656dc9543a16c27cf0a5aad1171ea3cc01a0d", "patch": "@@ -13,7 +13,7 @@\n // including) the call to `use_x`. The `else` branch is not included.\n \n // compile-flags:-Znll -Zborrowck=mir\n-// must-compile-successfully\n+// compile-pass\n \n #![allow(warnings)]\n #![feature(dropck_eyepatch)]"}, {"sha": "64f98456991fda5140f1c5b653c2a40ea45a9454", "filename": "src/test/ui/nll/generator-distinct-lifetime.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/812656dc9543a16c27cf0a5aad1171ea3cc01a0d/src%2Ftest%2Fui%2Fnll%2Fgenerator-distinct-lifetime.rs", "raw_url": "https://github.com/rust-lang/rust/raw/812656dc9543a16c27cf0a5aad1171ea3cc01a0d/src%2Ftest%2Fui%2Fnll%2Fgenerator-distinct-lifetime.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fgenerator-distinct-lifetime.rs?ref=812656dc9543a16c27cf0a5aad1171ea3cc01a0d", "patch": "@@ -16,7 +16,7 @@\n // over a yield -- because the data that is borrowed (`*x`) is not\n // stored on the stack.\n \n-// must-compile-successfully\n+// compile-pass\n \n fn foo(x: &mut u32) {\n     move || {"}, {"sha": "b41376ef443d492d3886133eecdcf6e0c2d048db", "filename": "src/test/ui/nll/issue-16223.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/812656dc9543a16c27cf0a5aad1171ea3cc01a0d/src%2Ftest%2Fui%2Fnll%2Fissue-16223.rs", "raw_url": "https://github.com/rust-lang/rust/raw/812656dc9543a16c27cf0a5aad1171ea3cc01a0d/src%2Ftest%2Fui%2Fnll%2Fissue-16223.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fissue-16223.rs?ref=812656dc9543a16c27cf0a5aad1171ea3cc01a0d", "patch": "@@ -23,7 +23,7 @@\n //    |\n //    = note: move occurs because the value has type `A`, which does not implement the `Copy` trait\n \n-// must-compile-successfully\n+// compile-pass\n \n #![feature(nll)]\n #![feature(box_patterns)]"}, {"sha": "aeb81636daf1f409af48a21dec1a8918055e378e", "filename": "src/test/ui/nll/issue-43058.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/812656dc9543a16c27cf0a5aad1171ea3cc01a0d/src%2Ftest%2Fui%2Fnll%2Fissue-43058.rs", "raw_url": "https://github.com/rust-lang/rust/raw/812656dc9543a16c27cf0a5aad1171ea3cc01a0d/src%2Ftest%2Fui%2Fnll%2Fissue-43058.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fissue-43058.rs?ref=812656dc9543a16c27cf0a5aad1171ea3cc01a0d", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// must-compile-successfully\n+// compile-pass\n \n #![feature(nll)]\n "}, {"sha": "685823b25c6cf070bed42e1e5c69ac02b0f7afa2", "filename": "src/test/ui/nll/issue-47022.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/812656dc9543a16c27cf0a5aad1171ea3cc01a0d/src%2Ftest%2Fui%2Fnll%2Fissue-47022.rs", "raw_url": "https://github.com/rust-lang/rust/raw/812656dc9543a16c27cf0a5aad1171ea3cc01a0d/src%2Ftest%2Fui%2Fnll%2Fissue-47022.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fissue-47022.rs?ref=812656dc9543a16c27cf0a5aad1171ea3cc01a0d", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// must-compile-successfully\n+// compile-pass\n \n #![allow(warnings)]\n #![feature(nll)]"}, {"sha": "7e8a4e0ec95fc9e313f225da4128c1b6065c868f", "filename": "src/test/ui/nll/maybe-initialized-drop-uninitialized.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/812656dc9543a16c27cf0a5aad1171ea3cc01a0d/src%2Ftest%2Fui%2Fnll%2Fmaybe-initialized-drop-uninitialized.rs", "raw_url": "https://github.com/rust-lang/rust/raw/812656dc9543a16c27cf0a5aad1171ea3cc01a0d/src%2Ftest%2Fui%2Fnll%2Fmaybe-initialized-drop-uninitialized.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fmaybe-initialized-drop-uninitialized.rs?ref=812656dc9543a16c27cf0a5aad1171ea3cc01a0d", "patch": "@@ -9,7 +9,7 @@\n // except according to those terms.\n \n //compile-flags: -Z emit-end-regions -Zborrowck=mir -Z nll\n-// must-compile-successfully\n+// compile-pass\n \n #![allow(warnings)]\n "}, {"sha": "1515911fe870eb777a47e635fb7ee90e59f4f955", "filename": "src/test/ui/nll/projection-return.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/812656dc9543a16c27cf0a5aad1171ea3cc01a0d/src%2Ftest%2Fui%2Fnll%2Fprojection-return.rs", "raw_url": "https://github.com/rust-lang/rust/raw/812656dc9543a16c27cf0a5aad1171ea3cc01a0d/src%2Ftest%2Fui%2Fnll%2Fprojection-return.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fprojection-return.rs?ref=812656dc9543a16c27cf0a5aad1171ea3cc01a0d", "patch": "@@ -9,7 +9,7 @@\n // except according to those terms.\n \n // compile-flags:-Znll -Zborrowck=mir\n-// must-compile-successfully\n+// compile-pass\n \n #![feature(rustc_attrs)]\n "}, {"sha": "a1bdd1b89f9a96c06e9eab8daa8e6d8a0135efce", "filename": "src/test/ui/nll/ty-outlives/projection-one-region-trait-bound-static-closure.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/812656dc9543a16c27cf0a5aad1171ea3cc01a0d/src%2Ftest%2Fui%2Fnll%2Fty-outlives%2Fprojection-one-region-trait-bound-static-closure.rs", "raw_url": "https://github.com/rust-lang/rust/raw/812656dc9543a16c27cf0a5aad1171ea3cc01a0d/src%2Ftest%2Fui%2Fnll%2Fty-outlives%2Fprojection-one-region-trait-bound-static-closure.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fty-outlives%2Fprojection-one-region-trait-bound-static-closure.rs?ref=812656dc9543a16c27cf0a5aad1171ea3cc01a0d", "patch": "@@ -13,7 +13,7 @@\n // we don't even propagate constraints from the closures to the callers.\n \n // compile-flags:-Znll -Zborrowck=mir -Zverbose\n-// must-compile-successfully\n+// compile-pass\n \n #![allow(warnings)]\n #![feature(dyn_trait)]"}, {"sha": "d4ae9b20e56ff21e15cc3dec621d9a7fffb742fd", "filename": "src/test/ui/nll/ty-outlives/ty-param-implied-bounds.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/812656dc9543a16c27cf0a5aad1171ea3cc01a0d/src%2Ftest%2Fui%2Fnll%2Fty-outlives%2Fty-param-implied-bounds.rs", "raw_url": "https://github.com/rust-lang/rust/raw/812656dc9543a16c27cf0a5aad1171ea3cc01a0d/src%2Ftest%2Fui%2Fnll%2Fty-outlives%2Fty-param-implied-bounds.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fty-outlives%2Fty-param-implied-bounds.rs?ref=812656dc9543a16c27cf0a5aad1171ea3cc01a0d", "patch": "@@ -9,7 +9,7 @@\n // except according to those terms.\n \n // compile-flags:-Znll -Zborrowck=mir -Zverbose\n-// must-compile-successfully\n+// compile-pass\n \n // Test that we assume that universal types like `T` outlive the\n // function body."}, {"sha": "96b025128ee9ac1be8086c3a50f1245a1881a6ab", "filename": "src/test/ui/print-fuel/print-fuel.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/812656dc9543a16c27cf0a5aad1171ea3cc01a0d/src%2Ftest%2Fui%2Fprint-fuel%2Fprint-fuel.rs", "raw_url": "https://github.com/rust-lang/rust/raw/812656dc9543a16c27cf0a5aad1171ea3cc01a0d/src%2Ftest%2Fui%2Fprint-fuel%2Fprint-fuel.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fprint-fuel%2Fprint-fuel.rs?ref=812656dc9543a16c27cf0a5aad1171ea3cc01a0d", "patch": "@@ -12,7 +12,7 @@\n #![allow(dead_code)]\n \n // compile-flags: -Z print-fuel=foo\n-// must-compile-successfully\n+// compile-pass\n \n struct S1(u8, u16, u8);\n struct S2(u8, u16, u8);"}, {"sha": "aff06a20112e1d23ed187cef9580ee1ff1104313", "filename": "src/test/ui/print_type_sizes/anonymous.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/812656dc9543a16c27cf0a5aad1171ea3cc01a0d/src%2Ftest%2Fui%2Fprint_type_sizes%2Fanonymous.rs", "raw_url": "https://github.com/rust-lang/rust/raw/812656dc9543a16c27cf0a5aad1171ea3cc01a0d/src%2Ftest%2Fui%2Fprint_type_sizes%2Fanonymous.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fprint_type_sizes%2Fanonymous.rs?ref=812656dc9543a16c27cf0a5aad1171ea3cc01a0d", "patch": "@@ -9,7 +9,7 @@\n // except according to those terms.\n \n // compile-flags: -Z print-type-sizes\n-// must-compile-successfully\n+// compile-pass\n \n // All of the types that occur in this function are uninteresting, in\n // that one cannot control the sizes of these types with the same sort"}, {"sha": "fa5921cfb13439cc032ff25c4d8eb773672982af", "filename": "src/test/ui/print_type_sizes/generics.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/812656dc9543a16c27cf0a5aad1171ea3cc01a0d/src%2Ftest%2Fui%2Fprint_type_sizes%2Fgenerics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/812656dc9543a16c27cf0a5aad1171ea3cc01a0d/src%2Ftest%2Fui%2Fprint_type_sizes%2Fgenerics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fprint_type_sizes%2Fgenerics.rs?ref=812656dc9543a16c27cf0a5aad1171ea3cc01a0d", "patch": "@@ -9,7 +9,7 @@\n // except according to those terms.\n \n // compile-flags: -Z print-type-sizes\n-// must-compile-successfully\n+// compile-pass\n \n // This file illustrates how generics are handled: types have to be\n // monomorphized, in the MIR of the original function in which they"}, {"sha": "3d6cb0d5f3c6394c49ff5118bc0be02d4146c705", "filename": "src/test/ui/print_type_sizes/multiple_types.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/812656dc9543a16c27cf0a5aad1171ea3cc01a0d/src%2Ftest%2Fui%2Fprint_type_sizes%2Fmultiple_types.rs", "raw_url": "https://github.com/rust-lang/rust/raw/812656dc9543a16c27cf0a5aad1171ea3cc01a0d/src%2Ftest%2Fui%2Fprint_type_sizes%2Fmultiple_types.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fprint_type_sizes%2Fmultiple_types.rs?ref=812656dc9543a16c27cf0a5aad1171ea3cc01a0d", "patch": "@@ -9,7 +9,7 @@\n // except according to those terms.\n \n // compile-flags: -Z print-type-sizes\n-// must-compile-successfully\n+// compile-pass\n \n // This file illustrates that when multiple structural types occur in\n // a function, every one of them is included in the output."}, {"sha": "1aad0b760b17bf2c9484d3fdd9d9f446a49760c6", "filename": "src/test/ui/print_type_sizes/niche-filling.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/812656dc9543a16c27cf0a5aad1171ea3cc01a0d/src%2Ftest%2Fui%2Fprint_type_sizes%2Fniche-filling.rs", "raw_url": "https://github.com/rust-lang/rust/raw/812656dc9543a16c27cf0a5aad1171ea3cc01a0d/src%2Ftest%2Fui%2Fprint_type_sizes%2Fniche-filling.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fprint_type_sizes%2Fniche-filling.rs?ref=812656dc9543a16c27cf0a5aad1171ea3cc01a0d", "patch": "@@ -9,7 +9,7 @@\n // except according to those terms.\n \n // compile-flags: -Z print-type-sizes\n-// must-compile-successfully\n+// compile-pass\n \n // This file illustrates how niche-filling enums are handled,\n // modelled after cases like `Option<&u32>`, `Option<bool>` and such."}, {"sha": "17ba4df7f202960328e4aeee4c358e1e56adf639", "filename": "src/test/ui/print_type_sizes/no_duplicates.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/812656dc9543a16c27cf0a5aad1171ea3cc01a0d/src%2Ftest%2Fui%2Fprint_type_sizes%2Fno_duplicates.rs", "raw_url": "https://github.com/rust-lang/rust/raw/812656dc9543a16c27cf0a5aad1171ea3cc01a0d/src%2Ftest%2Fui%2Fprint_type_sizes%2Fno_duplicates.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fprint_type_sizes%2Fno_duplicates.rs?ref=812656dc9543a16c27cf0a5aad1171ea3cc01a0d", "patch": "@@ -9,7 +9,7 @@\n // except according to those terms.\n \n // compile-flags: -Z print-type-sizes\n-// must-compile-successfully\n+// compile-pass\n \n // This file illustrates that when the same type occurs repeatedly\n // (even if multiple functions), it is only printed once in the"}, {"sha": "bc11146aa85164be4c1774ad6b567aef585befbd", "filename": "src/test/ui/print_type_sizes/packed.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/812656dc9543a16c27cf0a5aad1171ea3cc01a0d/src%2Ftest%2Fui%2Fprint_type_sizes%2Fpacked.rs", "raw_url": "https://github.com/rust-lang/rust/raw/812656dc9543a16c27cf0a5aad1171ea3cc01a0d/src%2Ftest%2Fui%2Fprint_type_sizes%2Fpacked.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fprint_type_sizes%2Fpacked.rs?ref=812656dc9543a16c27cf0a5aad1171ea3cc01a0d", "patch": "@@ -9,7 +9,7 @@\n // except according to those terms.\n \n // compile-flags: -Z print-type-sizes\n-// must-compile-successfully\n+// compile-pass\n \n // This file illustrates how packing is handled; it should cause\n // the elimination of padding that would normally be introduced"}, {"sha": "335303afef96ceb286d707a3e778983955584373", "filename": "src/test/ui/print_type_sizes/padding.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/812656dc9543a16c27cf0a5aad1171ea3cc01a0d/src%2Ftest%2Fui%2Fprint_type_sizes%2Fpadding.rs", "raw_url": "https://github.com/rust-lang/rust/raw/812656dc9543a16c27cf0a5aad1171ea3cc01a0d/src%2Ftest%2Fui%2Fprint_type_sizes%2Fpadding.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fprint_type_sizes%2Fpadding.rs?ref=812656dc9543a16c27cf0a5aad1171ea3cc01a0d", "patch": "@@ -9,7 +9,7 @@\n // except according to those terms.\n \n // compile-flags: -Z print-type-sizes\n-// must-compile-successfully\n+// compile-pass\n \n // This file illustrates how padding is handled: alignment\n // requirements can lead to the introduction of padding, either before"}, {"sha": "2e4c3ade92dde28b9b460934ad5420521343dd21", "filename": "src/test/ui/print_type_sizes/repr-align.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/812656dc9543a16c27cf0a5aad1171ea3cc01a0d/src%2Ftest%2Fui%2Fprint_type_sizes%2Frepr-align.rs", "raw_url": "https://github.com/rust-lang/rust/raw/812656dc9543a16c27cf0a5aad1171ea3cc01a0d/src%2Ftest%2Fui%2Fprint_type_sizes%2Frepr-align.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fprint_type_sizes%2Frepr-align.rs?ref=812656dc9543a16c27cf0a5aad1171ea3cc01a0d", "patch": "@@ -9,7 +9,7 @@\n // except according to those terms.\n \n // compile-flags: -Z print-type-sizes\n-// must-compile-successfully\n+// compile-pass\n \n // This file illustrates how padding is handled: alignment\n // requirements can lead to the introduction of padding, either before"}, {"sha": "1908ef244cfeaec83dfab2ff8269620c995e8b6c", "filename": "src/test/ui/print_type_sizes/uninhabited.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/812656dc9543a16c27cf0a5aad1171ea3cc01a0d/src%2Ftest%2Fui%2Fprint_type_sizes%2Funinhabited.rs", "raw_url": "https://github.com/rust-lang/rust/raw/812656dc9543a16c27cf0a5aad1171ea3cc01a0d/src%2Ftest%2Fui%2Fprint_type_sizes%2Funinhabited.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fprint_type_sizes%2Funinhabited.rs?ref=812656dc9543a16c27cf0a5aad1171ea3cc01a0d", "patch": "@@ -9,7 +9,7 @@\n // except according to those terms.\n \n // compile-flags: -Z print-type-sizes\n-// must-compile-successfully\n+// compile-pass\n \n #![feature(start)]\n "}, {"sha": "52e951bd6843ab5262b82adefd32c2203c2b6b94", "filename": "src/test/ui/print_type_sizes/variants.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/812656dc9543a16c27cf0a5aad1171ea3cc01a0d/src%2Ftest%2Fui%2Fprint_type_sizes%2Fvariants.rs", "raw_url": "https://github.com/rust-lang/rust/raw/812656dc9543a16c27cf0a5aad1171ea3cc01a0d/src%2Ftest%2Fui%2Fprint_type_sizes%2Fvariants.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fprint_type_sizes%2Fvariants.rs?ref=812656dc9543a16c27cf0a5aad1171ea3cc01a0d", "patch": "@@ -9,7 +9,7 @@\n // except according to those terms.\n \n // compile-flags: -Z print-type-sizes\n-// must-compile-successfully\n+// compile-pass\n \n // This file illustrates two things:\n //"}, {"sha": "c5206eec672854b63e19396ef944194e434f6a3a", "filename": "src/test/ui/reachable/expr_andand.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/812656dc9543a16c27cf0a5aad1171ea3cc01a0d/src%2Ftest%2Fui%2Freachable%2Fexpr_andand.rs", "raw_url": "https://github.com/rust-lang/rust/raw/812656dc9543a16c27cf0a5aad1171ea3cc01a0d/src%2Ftest%2Fui%2Freachable%2Fexpr_andand.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Freachable%2Fexpr_andand.rs?ref=812656dc9543a16c27cf0a5aad1171ea3cc01a0d", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// must-compile-successfully\n+// compile-pass\n \n #![allow(unused_variables)]\n #![allow(dead_code)]"}, {"sha": "0adec9999dc9e610351c22d0d829dbfa8116c240", "filename": "src/test/ui/reachable/expr_oror.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/812656dc9543a16c27cf0a5aad1171ea3cc01a0d/src%2Ftest%2Fui%2Freachable%2Fexpr_oror.rs", "raw_url": "https://github.com/rust-lang/rust/raw/812656dc9543a16c27cf0a5aad1171ea3cc01a0d/src%2Ftest%2Fui%2Freachable%2Fexpr_oror.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Freachable%2Fexpr_oror.rs?ref=812656dc9543a16c27cf0a5aad1171ea3cc01a0d", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// must-compile-successfully\n+// compile-pass\n \n #![allow(unused_variables)]\n #![allow(dead_code)]"}, {"sha": "2a28bde78a85ace60d99f2ecb7734d9bb014a43d", "filename": "src/test/ui/rfc-2093-infer-outlives/enum-pass.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/812656dc9543a16c27cf0a5aad1171ea3cc01a0d/src%2Ftest%2Fui%2Frfc-2093-infer-outlives%2Fenum-pass.rs", "raw_url": "https://github.com/rust-lang/rust/raw/812656dc9543a16c27cf0a5aad1171ea3cc01a0d/src%2Ftest%2Fui%2Frfc-2093-infer-outlives%2Fenum-pass.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2093-infer-outlives%2Fenum-pass.rs?ref=812656dc9543a16c27cf0a5aad1171ea3cc01a0d", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// must-compile-successfully\n+// compile-pass\n \n #![feature(infer_outlives_requirements)]\n "}, {"sha": "45449fa0cf82d7906fe8a6388a182c4df7ed5739", "filename": "src/test/ui/rfc-2093-infer-outlives/explicit-impl-lifetime-pass.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/812656dc9543a16c27cf0a5aad1171ea3cc01a0d/src%2Ftest%2Fui%2Frfc-2093-infer-outlives%2Fexplicit-impl-lifetime-pass.rs", "raw_url": "https://github.com/rust-lang/rust/raw/812656dc9543a16c27cf0a5aad1171ea3cc01a0d/src%2Ftest%2Fui%2Frfc-2093-infer-outlives%2Fexplicit-impl-lifetime-pass.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2093-infer-outlives%2Fexplicit-impl-lifetime-pass.rs?ref=812656dc9543a16c27cf0a5aad1171ea3cc01a0d", "patch": "@@ -9,7 +9,7 @@\n // except according to those terms.\n \n // ignore-test\n-// must-compile-successfully\n+// compile-pass\n \n #![feature(infer_outlives_requirements)]\n // Outlives requirementes are inferred (RFC 2093)"}, {"sha": "bfd6db1eb5d4e5f74318a3eb7d9e800cdc356275", "filename": "src/test/ui/rfc-2093-infer-outlives/explicit-impl-pass.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/812656dc9543a16c27cf0a5aad1171ea3cc01a0d/src%2Ftest%2Fui%2Frfc-2093-infer-outlives%2Fexplicit-impl-pass.rs", "raw_url": "https://github.com/rust-lang/rust/raw/812656dc9543a16c27cf0a5aad1171ea3cc01a0d/src%2Ftest%2Fui%2Frfc-2093-infer-outlives%2Fexplicit-impl-pass.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2093-infer-outlives%2Fexplicit-impl-pass.rs?ref=812656dc9543a16c27cf0a5aad1171ea3cc01a0d", "patch": "@@ -9,7 +9,7 @@\n // except according to those terms.\n \n // ignore-test\n-// must-compile-successfully\n+// compile-pass\n \n #![feature(infer_outlives_requirements)]\n // Outlives requirementes are inferred (RFC 2093)"}, {"sha": "fd5fc79a2ab1e635d687a6686f413561f255027f", "filename": "src/test/ui/rfc-2093-infer-outlives/explicit-where-pass.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/812656dc9543a16c27cf0a5aad1171ea3cc01a0d/src%2Ftest%2Fui%2Frfc-2093-infer-outlives%2Fexplicit-where-pass.rs", "raw_url": "https://github.com/rust-lang/rust/raw/812656dc9543a16c27cf0a5aad1171ea3cc01a0d/src%2Ftest%2Fui%2Frfc-2093-infer-outlives%2Fexplicit-where-pass.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2093-infer-outlives%2Fexplicit-where-pass.rs?ref=812656dc9543a16c27cf0a5aad1171ea3cc01a0d", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// must-compile-successfully\n+// compile-pass\n \n #![feature(infer_outlives_requirements)]\n // Outlives requirementes are inferred (RFC 2093)"}, {"sha": "290dbd330a26c6303af7a908f16581bca3453e21", "filename": "src/test/ui/rfc-2093-infer-outlives/multiple-regions-pass.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/812656dc9543a16c27cf0a5aad1171ea3cc01a0d/src%2Ftest%2Fui%2Frfc-2093-infer-outlives%2Fmultiple-regions-pass.rs", "raw_url": "https://github.com/rust-lang/rust/raw/812656dc9543a16c27cf0a5aad1171ea3cc01a0d/src%2Ftest%2Fui%2Frfc-2093-infer-outlives%2Fmultiple-regions-pass.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2093-infer-outlives%2Fmultiple-regions-pass.rs?ref=812656dc9543a16c27cf0a5aad1171ea3cc01a0d", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// must-compile-successfully\n+// compile-pass\n \n #![feature(infer_outlives_requirements)]\n // Outlives requirementes are inferred (RFC 2093)"}, {"sha": "9432804cc42bf7dadbeabdcb794e807dbfd4b53a", "filename": "src/test/ui/rfc-2093-infer-outlives/nested-structs-pass.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/812656dc9543a16c27cf0a5aad1171ea3cc01a0d/src%2Ftest%2Fui%2Frfc-2093-infer-outlives%2Fnested-structs-pass.rs", "raw_url": "https://github.com/rust-lang/rust/raw/812656dc9543a16c27cf0a5aad1171ea3cc01a0d/src%2Ftest%2Fui%2Frfc-2093-infer-outlives%2Fnested-structs-pass.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2093-infer-outlives%2Fnested-structs-pass.rs?ref=812656dc9543a16c27cf0a5aad1171ea3cc01a0d", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// must-compile-successfully\n+// compile-pass\n \n #![feature(infer_outlives_requirements)]\n // Outlives requirementes are inferred (RFC 2093)"}, {"sha": "9c6e84cdd6e02d3cf2582f5176d108f96254558a", "filename": "src/test/ui/rfc-2093-infer-outlives/projections-pass.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/812656dc9543a16c27cf0a5aad1171ea3cc01a0d/src%2Ftest%2Fui%2Frfc-2093-infer-outlives%2Fprojections-pass.rs", "raw_url": "https://github.com/rust-lang/rust/raw/812656dc9543a16c27cf0a5aad1171ea3cc01a0d/src%2Ftest%2Fui%2Frfc-2093-infer-outlives%2Fprojections-pass.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2093-infer-outlives%2Fprojections-pass.rs?ref=812656dc9543a16c27cf0a5aad1171ea3cc01a0d", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// must-compile-successfully\n+// compile-pass\n \n #![feature(infer_outlives_requirements)]\n // Outlives requirementes are inferred (RFC 2093)"}, {"sha": "903b8a9ddbf59e834827ad80163fcee6cb700be9", "filename": "src/test/ui/rfc-2093-infer-outlives/reference-pass.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/812656dc9543a16c27cf0a5aad1171ea3cc01a0d/src%2Ftest%2Fui%2Frfc-2093-infer-outlives%2Freference-pass.rs", "raw_url": "https://github.com/rust-lang/rust/raw/812656dc9543a16c27cf0a5aad1171ea3cc01a0d/src%2Ftest%2Fui%2Frfc-2093-infer-outlives%2Freference-pass.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2093-infer-outlives%2Freference-pass.rs?ref=812656dc9543a16c27cf0a5aad1171ea3cc01a0d", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// must-compile-successfully\n+// compile-pass\n \n #![feature(infer_outlives_requirements)]\n // Outlives requirementes are inferred (RFC 2093)"}, {"sha": "5e46c2b7f5ca9f8a1d7a3c39d4793cd55d050485", "filename": "src/test/ui/rfc-2093-infer-outlives/union-pass.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/812656dc9543a16c27cf0a5aad1171ea3cc01a0d/src%2Ftest%2Fui%2Frfc-2093-infer-outlives%2Funion-pass.rs", "raw_url": "https://github.com/rust-lang/rust/raw/812656dc9543a16c27cf0a5aad1171ea3cc01a0d/src%2Ftest%2Fui%2Frfc-2093-infer-outlives%2Funion-pass.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2093-infer-outlives%2Funion-pass.rs?ref=812656dc9543a16c27cf0a5aad1171ea3cc01a0d", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// must-compile-successfully\n+// compile-pass\n \n #![feature(infer_outlives_requirements)]\n #![feature(untagged_unions)]"}, {"sha": "89771be7bc84f12a2277aad3660ea30a13fdf2fd", "filename": "src/test/ui/rfc-2166-underscore-imports/basic.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/812656dc9543a16c27cf0a5aad1171ea3cc01a0d/src%2Ftest%2Fui%2Frfc-2166-underscore-imports%2Fbasic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/812656dc9543a16c27cf0a5aad1171ea3cc01a0d/src%2Ftest%2Fui%2Frfc-2166-underscore-imports%2Fbasic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2166-underscore-imports%2Fbasic.rs?ref=812656dc9543a16c27cf0a5aad1171ea3cc01a0d", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// must-compile-successfully\n+// compile-pass\n \n #![feature(underscore_imports)]\n #![warn(unused_imports, unused_extern_crates)]"}, {"sha": "90aaddecfe79bb5f38220ed6a9e5c41422fe2946", "filename": "src/test/ui/rfc1598-generic-associated-types/parse/in-trait-impl.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/812656dc9543a16c27cf0a5aad1171ea3cc01a0d/src%2Ftest%2Fui%2Frfc1598-generic-associated-types%2Fparse%2Fin-trait-impl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/812656dc9543a16c27cf0a5aad1171ea3cc01a0d/src%2Ftest%2Fui%2Frfc1598-generic-associated-types%2Fparse%2Fin-trait-impl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc1598-generic-associated-types%2Fparse%2Fin-trait-impl.rs?ref=812656dc9543a16c27cf0a5aad1171ea3cc01a0d", "patch": "@@ -9,7 +9,7 @@\n // except according to those terms.\n \n // compile-flags: -Z parse-only\n-// must-compile-successfully\n+// compile-pass\n \n #![feature(generic_associated_types)]\n "}, {"sha": "8179bf263ed025df94171b9f50ce91be4835ec5f", "filename": "src/test/ui/rfc1598-generic-associated-types/parse/in-trait.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/812656dc9543a16c27cf0a5aad1171ea3cc01a0d/src%2Ftest%2Fui%2Frfc1598-generic-associated-types%2Fparse%2Fin-trait.rs", "raw_url": "https://github.com/rust-lang/rust/raw/812656dc9543a16c27cf0a5aad1171ea3cc01a0d/src%2Ftest%2Fui%2Frfc1598-generic-associated-types%2Fparse%2Fin-trait.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc1598-generic-associated-types%2Fparse%2Fin-trait.rs?ref=812656dc9543a16c27cf0a5aad1171ea3cc01a0d", "patch": "@@ -9,7 +9,7 @@\n // except according to those terms.\n \n // compile-flags: -Z parse-only\n-// must-compile-successfully\n+// compile-pass\n \n #![feature(generic_associated_types)]\n "}, {"sha": "d20ebf0b740429655bcb6df1f1f6f0c7c13884a6", "filename": "src/test/ui/rfc_1940-must_use_on_functions/fn_must_use.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/812656dc9543a16c27cf0a5aad1171ea3cc01a0d/src%2Ftest%2Fui%2Frfc_1940-must_use_on_functions%2Ffn_must_use.rs", "raw_url": "https://github.com/rust-lang/rust/raw/812656dc9543a16c27cf0a5aad1171ea3cc01a0d/src%2Ftest%2Fui%2Frfc_1940-must_use_on_functions%2Ffn_must_use.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc_1940-must_use_on_functions%2Ffn_must_use.rs?ref=812656dc9543a16c27cf0a5aad1171ea3cc01a0d", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// must-compile-successfully\n+// compile-pass\n \n #![feature(fn_must_use)]\n #![warn(unused_must_use)]"}, {"sha": "4fe35042300e782afaa43c080be0a78b00e08ed1", "filename": "src/test/ui/span/macro-span-replacement.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/812656dc9543a16c27cf0a5aad1171ea3cc01a0d/src%2Ftest%2Fui%2Fspan%2Fmacro-span-replacement.rs", "raw_url": "https://github.com/rust-lang/rust/raw/812656dc9543a16c27cf0a5aad1171ea3cc01a0d/src%2Ftest%2Fui%2Fspan%2Fmacro-span-replacement.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspan%2Fmacro-span-replacement.rs?ref=812656dc9543a16c27cf0a5aad1171ea3cc01a0d", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// must-compile-successfully\n+// compile-pass\n \n #![warn(unused)]\n "}, {"sha": "a94fa1c8953591668b2a6e344c2c98e1168147a9", "filename": "src/test/ui/span/multispan-import-lint.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/812656dc9543a16c27cf0a5aad1171ea3cc01a0d/src%2Ftest%2Fui%2Fspan%2Fmultispan-import-lint.rs", "raw_url": "https://github.com/rust-lang/rust/raw/812656dc9543a16c27cf0a5aad1171ea3cc01a0d/src%2Ftest%2Fui%2Fspan%2Fmultispan-import-lint.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspan%2Fmultispan-import-lint.rs?ref=812656dc9543a16c27cf0a5aad1171ea3cc01a0d", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// must-compile-successfully\n+// compile-pass\n \n #![warn(unused)]\n "}, {"sha": "a17bb9e952d3c067743de217f800caee1d0c7b59", "filename": "src/test/ui/type-alias-bounds.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/812656dc9543a16c27cf0a5aad1171ea3cc01a0d/src%2Ftest%2Fui%2Ftype-alias-bounds.rs", "raw_url": "https://github.com/rust-lang/rust/raw/812656dc9543a16c27cf0a5aad1171ea3cc01a0d/src%2Ftest%2Fui%2Ftype-alias-bounds.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftype-alias-bounds.rs?ref=812656dc9543a16c27cf0a5aad1171ea3cc01a0d", "patch": "@@ -10,7 +10,7 @@\n \n // Test ignored_generic_bounds lint warning about bounds in type aliases\n \n-// must-compile-successfully\n+// compile-pass\n #![allow(dead_code)]\n \n use std::rc::Rc;"}, {"sha": "3ae76e1a82a5c9906bf2fa42edf1194bf60bd600", "filename": "src/test/ui/union/union-const-eval.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/812656dc9543a16c27cf0a5aad1171ea3cc01a0d/src%2Ftest%2Fui%2Funion%2Funion-const-eval.rs", "raw_url": "https://github.com/rust-lang/rust/raw/812656dc9543a16c27cf0a5aad1171ea3cc01a0d/src%2Ftest%2Fui%2Funion%2Funion-const-eval.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Funion%2Funion-const-eval.rs?ref=812656dc9543a16c27cf0a5aad1171ea3cc01a0d", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// must-compile-successfully\n+// compile-pass\n \n union U {\n     a: usize,"}, {"sha": "3795704466a2372f5bea14de53b767c50386be6d", "filename": "src/tools/compiletest/src/header.rs", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/812656dc9543a16c27cf0a5aad1171ea3cc01a0d/src%2Ftools%2Fcompiletest%2Fsrc%2Fheader.rs", "raw_url": "https://github.com/rust-lang/rust/raw/812656dc9543a16c27cf0a5aad1171ea3cc01a0d/src%2Ftools%2Fcompiletest%2Fsrc%2Fheader.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fcompiletest%2Fsrc%2Fheader.rs?ref=812656dc9543a16c27cf0a5aad1171ea3cc01a0d", "patch": "@@ -223,7 +223,7 @@ pub struct TestProps {\n     // arguments. (In particular, it propagates to the aux-builds.)\n     pub incremental_dir: Option<PathBuf>,\n     // Specifies that a test must actually compile without errors.\n-    pub must_compile_successfully: bool,\n+    pub compile_pass: bool,\n     // rustdoc will test the output of the `--test` option\n     pub check_test_line_numbers_match: bool,\n     // The test must be compiled and run successfully. Only used in UI tests for now.\n@@ -257,7 +257,7 @@ impl TestProps {\n             pretty_compare_only: false,\n             forbid_output: vec![],\n             incremental_dir: None,\n-            must_compile_successfully: false,\n+            compile_pass: false,\n             check_test_line_numbers_match: false,\n             run_pass: false,\n             disable_ui_testing_normalization: false,\n@@ -375,10 +375,10 @@ impl TestProps {\n                 self.run_pass = config.parse_run_pass(ln);\n             }\n \n-            if !self.must_compile_successfully {\n+            if !self.compile_pass {\n                 // run-pass implies must_compile_sucessfully\n-                self.must_compile_successfully =\n-                    config.parse_must_compile_successfully(ln) || self.run_pass;\n+                self.compile_pass =\n+                    config.parse_compile_pass(ln) || self.run_pass;\n             }\n \n             if !self.disable_ui_testing_normalization {\n@@ -508,8 +508,8 @@ impl Config {\n         }\n     }\n \n-    fn parse_must_compile_successfully(&self, line: &str) -> bool {\n-        self.parse_name_directive(line, \"must-compile-successfully\")\n+    fn parse_compile_pass(&self, line: &str) -> bool {\n+        self.parse_name_directive(line, \"compile-pass\")\n     }\n \n     fn parse_disable_ui_testing_normalization(&self, line: &str) -> bool {"}, {"sha": "db0ac9279046ca8403f35103e4e98471460c2c39", "filename": "src/tools/compiletest/src/runtest.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/812656dc9543a16c27cf0a5aad1171ea3cc01a0d/src%2Ftools%2Fcompiletest%2Fsrc%2Fruntest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/812656dc9543a16c27cf0a5aad1171ea3cc01a0d/src%2Ftools%2Fcompiletest%2Fsrc%2Fruntest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fcompiletest%2Fsrc%2Fruntest.rs?ref=812656dc9543a16c27cf0a5aad1171ea3cc01a0d", "patch": "@@ -232,7 +232,7 @@ impl<'test> TestCx<'test> {\n     }\n \n     fn check_if_test_should_compile(&self, proc_res: &ProcRes) {\n-        if self.props.must_compile_successfully {\n+        if self.props.compile_pass {\n             if !proc_res.status.success() {\n                 self.fatal_proc_rec(\"test compilation failed although it shouldn't!\", proc_res);\n             }\n@@ -1100,7 +1100,7 @@ impl<'test> TestCx<'test> {\n \n     fn check_error_patterns(&self, output_to_check: &str, proc_res: &ProcRes) {\n         if self.props.error_patterns.is_empty() {\n-            if self.props.must_compile_successfully {\n+            if self.props.compile_pass {\n                 return;\n             } else {\n                 self.fatal(&format!("}]}