{"sha": "bbc35eada991b3256812598a555b1ef442d29c15", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJiYzM1ZWFkYTk5MWIzMjU2ODEyNTk4YTU1NWIxZWY0NDJkMjljMTU=", "commit": {"author": {"name": "Kevin Ballard", "email": "kevin@sb.org", "date": "2014-05-04T04:41:58Z"}, "committer": {"name": "Kevin Ballard", "email": "kevin@sb.org", "date": "2014-05-08T19:06:21Z"}, "message": "Handle fallout in std::strbuf", "tree": {"sha": "b2fe20f2941d0e2227470472d859b81ff7f1c463", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b2fe20f2941d0e2227470472d859b81ff7f1c463"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bbc35eada991b3256812598a555b1ef442d29c15", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bbc35eada991b3256812598a555b1ef442d29c15", "html_url": "https://github.com/rust-lang/rust/commit/bbc35eada991b3256812598a555b1ef442d29c15", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bbc35eada991b3256812598a555b1ef442d29c15/comments", "author": {"login": "lilyball", "id": 714, "node_id": "MDQ6VXNlcjcxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/714?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lilyball", "html_url": "https://github.com/lilyball", "followers_url": "https://api.github.com/users/lilyball/followers", "following_url": "https://api.github.com/users/lilyball/following{/other_user}", "gists_url": "https://api.github.com/users/lilyball/gists{/gist_id}", "starred_url": "https://api.github.com/users/lilyball/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lilyball/subscriptions", "organizations_url": "https://api.github.com/users/lilyball/orgs", "repos_url": "https://api.github.com/users/lilyball/repos", "events_url": "https://api.github.com/users/lilyball/events{/privacy}", "received_events_url": "https://api.github.com/users/lilyball/received_events", "type": "User", "site_admin": false}, "committer": {"login": "lilyball", "id": 714, "node_id": "MDQ6VXNlcjcxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/714?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lilyball", "html_url": "https://github.com/lilyball", "followers_url": "https://api.github.com/users/lilyball/followers", "following_url": "https://api.github.com/users/lilyball/following{/other_user}", "gists_url": "https://api.github.com/users/lilyball/gists{/gist_id}", "starred_url": "https://api.github.com/users/lilyball/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lilyball/subscriptions", "organizations_url": "https://api.github.com/users/lilyball/orgs", "repos_url": "https://api.github.com/users/lilyball/repos", "events_url": "https://api.github.com/users/lilyball/events{/privacy}", "received_events_url": "https://api.github.com/users/lilyball/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "44e8021b590bde58475eee8c50a21f1cb96f57e7", "url": "https://api.github.com/repos/rust-lang/rust/commits/44e8021b590bde58475eee8c50a21f1cb96f57e7", "html_url": "https://github.com/rust-lang/rust/commit/44e8021b590bde58475eee8c50a21f1cb96f57e7"}], "stats": {"total": 7, "additions": 2, "deletions": 5}, "files": [{"sha": "8e05b2f527d0830903ad9dead6ec053099906be0", "filename": "src/libstd/strbuf.rs", "status": "modified", "additions": 2, "deletions": 5, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/bbc35eada991b3256812598a555b1ef442d29c15/src%2Flibstd%2Fstrbuf.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bbc35eada991b3256812598a555b1ef442d29c15/src%2Flibstd%2Fstrbuf.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fstrbuf.rs?ref=bbc35eada991b3256812598a555b1ef442d29c15", "patch": "@@ -19,7 +19,7 @@ use io::Writer;\n use iter::{Extendable, FromIterator, Iterator, range};\n use option::{None, Option, Some};\n use ptr::RawPtr;\n-use slice::{OwnedVector, Vector};\n+use slice::{OwnedVector, Vector, CloneableVector};\n use str::{OwnedStr, Str, StrSlice, StrAllocating};\n use str;\n use vec::Vec;\n@@ -273,11 +273,8 @@ impl Str for StrBuf {\n impl StrAllocating for StrBuf {\n     #[inline]\n     fn into_owned(self) -> ~str {\n-        let StrBuf {\n-            vec: vec\n-        } = self;\n         unsafe {\n-            cast::transmute::<~[u8],~str>(vec.move_iter().collect())\n+            cast::transmute(self.vec.as_slice().to_owned())\n         }\n     }\n "}]}