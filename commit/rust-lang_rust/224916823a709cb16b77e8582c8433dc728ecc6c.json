{"sha": "224916823a709cb16b77e8582c8433dc728ecc6c", "node_id": "C_kwDOAAsO6NoAKDIyNDkxNjgyM2E3MDljYjE2Yjc3ZTg1ODJjODQzM2RjNzI4ZWNjNmM", "commit": {"author": {"name": "Miguel Guarniz", "email": "mi9uel9@gmail.com", "date": "2022-04-03T19:50:33Z"}, "committer": {"name": "Miguel Guarniz", "email": "mi9uel9@gmail.com", "date": "2022-04-08T15:59:59Z"}, "message": "Refactor HIR item-like traversal (part 1)\n\n- Create hir_crate_items query which traverses tcx.hir_crate(()).owners to return a hir::ModuleItems\n- use tcx.hir_crate_items in tcx.hir().items() to return an iterator of hir::ItemId\n- add par_items(impl Fn(hir::ItemId)) to traverse all items in parallel\n\nSigned-off-by: Miguel Guarniz <mi9uel9@gmail.com>", "tree": {"sha": "4ed4a95fe7e81f57b8f7a8674e63abb048e2dc67", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4ed4a95fe7e81f57b8f7a8674e63abb048e2dc67"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/224916823a709cb16b77e8582c8433dc728ecc6c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/224916823a709cb16b77e8582c8433dc728ecc6c", "html_url": "https://github.com/rust-lang/rust/commit/224916823a709cb16b77e8582c8433dc728ecc6c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/224916823a709cb16b77e8582c8433dc728ecc6c/comments", "author": {"login": "kckeiks", "id": 24687641, "node_id": "MDQ6VXNlcjI0Njg3NjQx", "avatar_url": "https://avatars.githubusercontent.com/u/24687641?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kckeiks", "html_url": "https://github.com/kckeiks", "followers_url": "https://api.github.com/users/kckeiks/followers", "following_url": "https://api.github.com/users/kckeiks/following{/other_user}", "gists_url": "https://api.github.com/users/kckeiks/gists{/gist_id}", "starred_url": "https://api.github.com/users/kckeiks/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kckeiks/subscriptions", "organizations_url": "https://api.github.com/users/kckeiks/orgs", "repos_url": "https://api.github.com/users/kckeiks/repos", "events_url": "https://api.github.com/users/kckeiks/events{/privacy}", "received_events_url": "https://api.github.com/users/kckeiks/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kckeiks", "id": 24687641, "node_id": "MDQ6VXNlcjI0Njg3NjQx", "avatar_url": "https://avatars.githubusercontent.com/u/24687641?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kckeiks", "html_url": "https://github.com/kckeiks", "followers_url": "https://api.github.com/users/kckeiks/followers", "following_url": "https://api.github.com/users/kckeiks/following{/other_user}", "gists_url": "https://api.github.com/users/kckeiks/gists{/gist_id}", "starred_url": "https://api.github.com/users/kckeiks/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kckeiks/subscriptions", "organizations_url": "https://api.github.com/users/kckeiks/orgs", "repos_url": "https://api.github.com/users/kckeiks/repos", "events_url": "https://api.github.com/users/kckeiks/events{/privacy}", "received_events_url": "https://api.github.com/users/kckeiks/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bb5b250fa15780dd80e025c3e7991609d996badc", "url": "https://api.github.com/repos/rust-lang/rust/commits/bb5b250fa15780dd80e025c3e7991609d996badc", "html_url": "https://github.com/rust-lang/rust/commit/bb5b250fa15780dd80e025c3e7991609d996badc"}], "stats": {"total": 29, "additions": 15, "deletions": 14}, "files": [{"sha": "c76061867145e619c242c9327899b88ac76a4af3", "filename": "clippy_lints/src/same_name_method.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/224916823a709cb16b77e8582c8433dc728ecc6c/clippy_lints%2Fsrc%2Fsame_name_method.rs", "raw_url": "https://github.com/rust-lang/rust/raw/224916823a709cb16b77e8582c8433dc728ecc6c/clippy_lints%2Fsrc%2Fsame_name_method.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fsame_name_method.rs?ref=224916823a709cb16b77e8582c8433dc728ecc6c", "patch": "@@ -50,7 +50,8 @@ impl<'tcx> LateLintPass<'tcx> for SameNameMethod {\n     fn check_crate_post(&mut self, cx: &LateContext<'tcx>) {\n         let mut map = FxHashMap::<Res, ExistingName>::default();\n \n-        for item in cx.tcx.hir().items() {\n+        for id in cx.tcx.hir().items() {\n+            let item = cx.tcx.hir().item(id);\n             if let ItemKind::Impl(Impl {\n                 items,\n                 of_trait,"}, {"sha": "cf06eb32e0c7fc041738d367cd6e6c19a4c31b85", "filename": "tests/ui/same_name_method.stderr", "status": "modified", "additions": 13, "deletions": 13, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/224916823a709cb16b77e8582c8433dc728ecc6c/tests%2Fui%2Fsame_name_method.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/224916823a709cb16b77e8582c8433dc728ecc6c/tests%2Fui%2Fsame_name_method.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fsame_name_method.stderr?ref=224916823a709cb16b77e8582c8433dc728ecc6c", "patch": "@@ -11,6 +11,19 @@ note: existing `foo` defined here\n LL |             fn foo() {}\n    |             ^^^^^^^^^^^\n \n+error: method's name is the same as an existing method in a trait\n+  --> $DIR/same_name_method.rs:34:13\n+   |\n+LL |             fn clone() {}\n+   |             ^^^^^^^^^^^^^\n+   |\n+note: existing `clone` defined here\n+  --> $DIR/same_name_method.rs:30:18\n+   |\n+LL |         #[derive(Clone)]\n+   |                  ^^^^^\n+   = note: this error originates in the derive macro `Clone` (in Nightly builds, run with -Z macro-backtrace for more info)\n+\n error: method's name is the same as an existing method in a trait\n   --> $DIR/same_name_method.rs:44:13\n    |\n@@ -47,18 +60,5 @@ note: existing `foo` defined here\n LL |         impl T1 for S {}\n    |         ^^^^^^^^^^^^^^^^\n \n-error: method's name is the same as an existing method in a trait\n-  --> $DIR/same_name_method.rs:34:13\n-   |\n-LL |             fn clone() {}\n-   |             ^^^^^^^^^^^^^\n-   |\n-note: existing `clone` defined here\n-  --> $DIR/same_name_method.rs:30:18\n-   |\n-LL |         #[derive(Clone)]\n-   |                  ^^^^^\n-   = note: this error originates in the derive macro `Clone` (in Nightly builds, run with -Z macro-backtrace for more info)\n-\n error: aborting due to 5 previous errors\n "}]}