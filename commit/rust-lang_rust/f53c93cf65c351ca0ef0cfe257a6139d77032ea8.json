{"sha": "f53c93cf65c351ca0ef0cfe257a6139d77032ea8", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY1M2M5M2NmNjVjMzUxY2EwZWYwY2ZlMjU3YTYxMzlkNzcwMzJlYTg=", "commit": {"author": {"name": "Eduard-Mihai Burtescu", "email": "eddyb@lyken.rs", "date": "2021-08-30T17:37:36Z"}, "committer": {"name": "Eduard-Mihai Burtescu", "email": "eddyb@lyken.rs", "date": "2021-09-01T22:17:14Z"}, "message": "ty::layout: split `LayoutOf` into required and (blanket) provided halves.", "tree": {"sha": "166d3fd7f40731f10b85fb3bce33e31ff33c2ba3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/166d3fd7f40731f10b85fb3bce33e31ff33c2ba3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f53c93cf65c351ca0ef0cfe257a6139d77032ea8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f53c93cf65c351ca0ef0cfe257a6139d77032ea8", "html_url": "https://github.com/rust-lang/rust/commit/f53c93cf65c351ca0ef0cfe257a6139d77032ea8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f53c93cf65c351ca0ef0cfe257a6139d77032ea8/comments", "author": {"login": "eddyb", "id": 77424, "node_id": "MDQ6VXNlcjc3NDI0", "avatar_url": "https://avatars.githubusercontent.com/u/77424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eddyb", "html_url": "https://github.com/eddyb", "followers_url": "https://api.github.com/users/eddyb/followers", "following_url": "https://api.github.com/users/eddyb/following{/other_user}", "gists_url": "https://api.github.com/users/eddyb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eddyb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eddyb/subscriptions", "organizations_url": "https://api.github.com/users/eddyb/orgs", "repos_url": "https://api.github.com/users/eddyb/repos", "events_url": "https://api.github.com/users/eddyb/events{/privacy}", "received_events_url": "https://api.github.com/users/eddyb/received_events", "type": "User", "site_admin": false}, "committer": {"login": "eddyb", "id": 77424, "node_id": "MDQ6VXNlcjc3NDI0", "avatar_url": "https://avatars.githubusercontent.com/u/77424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eddyb", "html_url": "https://github.com/eddyb", "followers_url": "https://api.github.com/users/eddyb/followers", "following_url": "https://api.github.com/users/eddyb/following{/other_user}", "gists_url": "https://api.github.com/users/eddyb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eddyb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eddyb/subscriptions", "organizations_url": "https://api.github.com/users/eddyb/orgs", "repos_url": "https://api.github.com/users/eddyb/repos", "events_url": "https://api.github.com/users/eddyb/events{/privacy}", "received_events_url": "https://api.github.com/users/eddyb/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1e02262dccadc5db13b71a69eabe5bb5bc8979d9", "url": "https://api.github.com/repos/rust-lang/rust/commits/1e02262dccadc5db13b71a69eabe5bb5bc8979d9", "html_url": "https://github.com/rust-lang/rust/commit/1e02262dccadc5db13b71a69eabe5bb5bc8979d9"}], "stats": {"total": 44, "additions": 25, "deletions": 19}, "files": [{"sha": "6f7ca51d038c0155233e9ad8dcea64cfa70a6b47", "filename": "compiler/rustc_codegen_cranelift/src/common.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/f53c93cf65c351ca0ef0cfe257a6139d77032ea8/compiler%2Frustc_codegen_cranelift%2Fsrc%2Fcommon.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f53c93cf65c351ca0ef0cfe257a6139d77032ea8/compiler%2Frustc_codegen_cranelift%2Fsrc%2Fcommon.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_cranelift%2Fsrc%2Fcommon.rs?ref=f53c93cf65c351ca0ef0cfe257a6139d77032ea8", "patch": "@@ -1,5 +1,5 @@\n use rustc_index::vec::IndexVec;\n-use rustc_middle::ty::layout::LayoutError;\n+use rustc_middle::ty::layout::{LayoutError, LayoutOfHelpers};\n use rustc_middle::ty::SymbolName;\n use rustc_target::abi::call::FnAbi;\n use rustc_target::abi::{Integer, Primitive};\n@@ -257,7 +257,7 @@ pub(crate) struct FunctionCx<'m, 'clif, 'tcx: 'm> {\n     pub(crate) inline_asm_index: u32,\n }\n \n-impl<'tcx> LayoutOf<'tcx> for FunctionCx<'_, '_, 'tcx> {\n+impl<'tcx> LayoutOfHelpers<'tcx> for FunctionCx<'_, '_, 'tcx> {\n     type LayoutOfResult = TyAndLayout<'tcx>;\n \n     #[inline]\n@@ -365,7 +365,7 @@ impl<'tcx> FunctionCx<'_, '_, 'tcx> {\n \n pub(crate) struct RevealAllLayoutCx<'tcx>(pub(crate) TyCtxt<'tcx>);\n \n-impl<'tcx> LayoutOf<'tcx> for RevealAllLayoutCx<'tcx> {\n+impl<'tcx> LayoutOfHelpers<'tcx> for RevealAllLayoutCx<'tcx> {\n     type LayoutOfResult = TyAndLayout<'tcx>;\n \n     #[inline]"}, {"sha": "da24fe08f0dfd6b7349e5290c27b216671de7678", "filename": "compiler/rustc_codegen_llvm/src/builder.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f53c93cf65c351ca0ef0cfe257a6139d77032ea8/compiler%2Frustc_codegen_llvm%2Fsrc%2Fbuilder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f53c93cf65c351ca0ef0cfe257a6139d77032ea8/compiler%2Frustc_codegen_llvm%2Fsrc%2Fbuilder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_llvm%2Fsrc%2Fbuilder.rs?ref=f53c93cf65c351ca0ef0cfe257a6139d77032ea8", "patch": "@@ -15,7 +15,7 @@ use rustc_codegen_ssa::traits::*;\n use rustc_codegen_ssa::MemFlags;\n use rustc_data_structures::small_c_str::SmallCStr;\n use rustc_hir::def_id::DefId;\n-use rustc_middle::ty::layout::{LayoutError, LayoutOf, TyAndLayout};\n+use rustc_middle::ty::layout::{LayoutError, LayoutOfHelpers, TyAndLayout};\n use rustc_middle::ty::{self, Ty, TyCtxt};\n use rustc_span::Span;\n use rustc_target::abi::{self, Align, Size};\n@@ -88,7 +88,7 @@ impl HasTargetSpec for Builder<'_, '_, 'tcx> {\n     }\n }\n \n-impl LayoutOf<'tcx> for Builder<'_, '_, 'tcx> {\n+impl LayoutOfHelpers<'tcx> for Builder<'_, '_, 'tcx> {\n     type LayoutOfResult = TyAndLayout<'tcx>;\n \n     #[inline]"}, {"sha": "2d397dc58353402fe76e6b4925e376176376a071", "filename": "compiler/rustc_codegen_llvm/src/context.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f53c93cf65c351ca0ef0cfe257a6139d77032ea8/compiler%2Frustc_codegen_llvm%2Fsrc%2Fcontext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f53c93cf65c351ca0ef0cfe257a6139d77032ea8/compiler%2Frustc_codegen_llvm%2Fsrc%2Fcontext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_llvm%2Fsrc%2Fcontext.rs?ref=f53c93cf65c351ca0ef0cfe257a6139d77032ea8", "patch": "@@ -15,7 +15,7 @@ use rustc_data_structures::base_n;\n use rustc_data_structures::fx::FxHashMap;\n use rustc_data_structures::small_c_str::SmallCStr;\n use rustc_middle::mir::mono::CodegenUnit;\n-use rustc_middle::ty::layout::{HasParamEnv, LayoutError, LayoutOf, TyAndLayout};\n+use rustc_middle::ty::layout::{HasParamEnv, LayoutError, LayoutOfHelpers, TyAndLayout};\n use rustc_middle::ty::{self, Instance, Ty, TyCtxt};\n use rustc_middle::{bug, span_bug};\n use rustc_session::config::{CFGuard, CrateType, DebugInfo};\n@@ -835,7 +835,7 @@ impl ty::layout::HasTyCtxt<'tcx> for CodegenCx<'ll, 'tcx> {\n     }\n }\n \n-impl LayoutOf<'tcx> for CodegenCx<'ll, 'tcx> {\n+impl LayoutOfHelpers<'tcx> for CodegenCx<'ll, 'tcx> {\n     type LayoutOfResult = TyAndLayout<'tcx>;\n \n     #[inline]"}, {"sha": "4c45e33db79c73976ddb1f07dc78eea6bde5d886", "filename": "compiler/rustc_lint/src/context.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f53c93cf65c351ca0ef0cfe257a6139d77032ea8/compiler%2Frustc_lint%2Fsrc%2Fcontext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f53c93cf65c351ca0ef0cfe257a6139d77032ea8/compiler%2Frustc_lint%2Fsrc%2Fcontext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_lint%2Fsrc%2Fcontext.rs?ref=f53c93cf65c351ca0ef0cfe257a6139d77032ea8", "patch": "@@ -31,7 +31,7 @@ use rustc_hir::definitions::{DefPathData, DisambiguatedDefPathData};\n use rustc_middle::lint::LintDiagnosticBuilder;\n use rustc_middle::middle::privacy::AccessLevels;\n use rustc_middle::middle::stability;\n-use rustc_middle::ty::layout::{LayoutError, LayoutOf, TyAndLayout};\n+use rustc_middle::ty::layout::{LayoutError, LayoutOfHelpers, TyAndLayout};\n use rustc_middle::ty::print::with_no_trimmed_paths;\n use rustc_middle::ty::{self, print::Printer, subst::GenericArg, Ty, TyCtxt};\n use rustc_serialize::json::Json;\n@@ -1080,7 +1080,7 @@ impl<'tcx> ty::layout::HasParamEnv<'tcx> for LateContext<'tcx> {\n     }\n }\n \n-impl<'tcx> LayoutOf<'tcx> for LateContext<'tcx> {\n+impl<'tcx> LayoutOfHelpers<'tcx> for LateContext<'tcx> {\n     type LayoutOfResult = Result<TyAndLayout<'tcx>, LayoutError<'tcx>>;\n \n     #[inline]"}, {"sha": "f7ab9dd82ac738971450a43ea912ba456ea56a8e", "filename": "compiler/rustc_middle/src/ty/layout.rs", "status": "modified", "additions": 10, "deletions": 4, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/f53c93cf65c351ca0ef0cfe257a6139d77032ea8/compiler%2Frustc_middle%2Fsrc%2Fty%2Flayout.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f53c93cf65c351ca0ef0cfe257a6139d77032ea8/compiler%2Frustc_middle%2Fsrc%2Fty%2Flayout.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fty%2Flayout.rs?ref=f53c93cf65c351ca0ef0cfe257a6139d77032ea8", "patch": "@@ -2093,8 +2093,9 @@ impl<T, E> MaybeResult<T> for Result<T, E> {\n \n pub type TyAndLayout<'tcx> = rustc_target::abi::TyAndLayout<'tcx, Ty<'tcx>>;\n \n-/// Trait for contexts that can compute layouts of types.\n-pub trait LayoutOf<'tcx>: HasDataLayout + HasTyCtxt<'tcx> + HasParamEnv<'tcx> {\n+/// Trait for contexts that want to be able to compute layouts of types.\n+/// This automatically gives access to `LayoutOf`, through a blanket `impl`.\n+pub trait LayoutOfHelpers<'tcx>: HasDataLayout + HasTyCtxt<'tcx> + HasParamEnv<'tcx> {\n     /// The `TyAndLayout`-wrapping type (or `TyAndLayout` itself), which will be\n     /// returned from `layout_of` (see also `handle_layout_err`).\n     type LayoutOfResult: MaybeResult<TyAndLayout<'tcx>>;\n@@ -2119,7 +2120,10 @@ pub trait LayoutOf<'tcx>: HasDataLayout + HasTyCtxt<'tcx> + HasParamEnv<'tcx> {\n         span: Span,\n         ty: Ty<'tcx>,\n     ) -> <Self::LayoutOfResult as MaybeResult<TyAndLayout<'tcx>>>::Error;\n+}\n \n+/// Blanket extension trait for contexts that can compute layouts of types.\n+pub trait LayoutOf<'tcx>: LayoutOfHelpers<'tcx> {\n     /// Computes the layout of a type. Note that this implicitly\n     /// executes in \"reveal all\" mode, and will normalize the input type.\n     #[inline]\n@@ -2143,7 +2147,9 @@ pub trait LayoutOf<'tcx>: HasDataLayout + HasTyCtxt<'tcx> + HasParamEnv<'tcx> {\n     }\n }\n \n-impl LayoutOf<'tcx> for LayoutCx<'tcx, TyCtxt<'tcx>> {\n+impl<C: LayoutOfHelpers<'tcx>> LayoutOf<'tcx> for C {}\n+\n+impl LayoutOfHelpers<'tcx> for LayoutCx<'tcx, TyCtxt<'tcx>> {\n     type LayoutOfResult = Result<TyAndLayout<'tcx>, LayoutError<'tcx>>;\n \n     #[inline]\n@@ -2152,7 +2158,7 @@ impl LayoutOf<'tcx> for LayoutCx<'tcx, TyCtxt<'tcx>> {\n     }\n }\n \n-impl LayoutOf<'tcx> for LayoutCx<'tcx, ty::query::TyCtxtAt<'tcx>> {\n+impl LayoutOfHelpers<'tcx> for LayoutCx<'tcx, ty::query::TyCtxtAt<'tcx>> {\n     type LayoutOfResult = Result<TyAndLayout<'tcx>, LayoutError<'tcx>>;\n \n     #[inline]"}, {"sha": "2b471415d86cc754793bc37cddbcb12c32099aa4", "filename": "compiler/rustc_mir/src/interpret/eval_context.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f53c93cf65c351ca0ef0cfe257a6139d77032ea8/compiler%2Frustc_mir%2Fsrc%2Finterpret%2Feval_context.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f53c93cf65c351ca0ef0cfe257a6139d77032ea8/compiler%2Frustc_mir%2Fsrc%2Finterpret%2Feval_context.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir%2Fsrc%2Finterpret%2Feval_context.rs?ref=f53c93cf65c351ca0ef0cfe257a6139d77032ea8", "patch": "@@ -8,7 +8,7 @@ use rustc_index::vec::IndexVec;\n use rustc_macros::HashStable;\n use rustc_middle::ich::StableHashingContext;\n use rustc_middle::mir;\n-use rustc_middle::ty::layout::{self, LayoutError, LayoutOf, TyAndLayout};\n+use rustc_middle::ty::layout::{self, LayoutError, LayoutOf, LayoutOfHelpers, TyAndLayout};\n use rustc_middle::ty::{\n     self, query::TyCtxtAt, subst::SubstsRef, ParamEnv, Ty, TyCtxt, TypeFoldable,\n };\n@@ -312,7 +312,7 @@ where\n     }\n }\n \n-impl<'mir, 'tcx: 'mir, M: Machine<'mir, 'tcx>> LayoutOf<'tcx> for InterpCx<'mir, 'tcx, M> {\n+impl<'mir, 'tcx: 'mir, M: Machine<'mir, 'tcx>> LayoutOfHelpers<'tcx> for InterpCx<'mir, 'tcx, M> {\n     type LayoutOfResult = InterpResult<'tcx, TyAndLayout<'tcx>>;\n \n     #[inline]"}, {"sha": "71c07be4c6d8de860919f58a7e51f38cc4d19e95", "filename": "compiler/rustc_mir/src/transform/const_prop.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f53c93cf65c351ca0ef0cfe257a6139d77032ea8/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Fconst_prop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f53c93cf65c351ca0ef0cfe257a6139d77032ea8/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Fconst_prop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Fconst_prop.rs?ref=f53c93cf65c351ca0ef0cfe257a6139d77032ea8", "patch": "@@ -17,7 +17,7 @@ use rustc_middle::mir::{\n     Location, Operand, Place, Rvalue, SourceInfo, SourceScope, SourceScopeData, Statement,\n     StatementKind, Terminator, TerminatorKind, UnOp, RETURN_PLACE,\n };\n-use rustc_middle::ty::layout::{LayoutError, LayoutOf, TyAndLayout};\n+use rustc_middle::ty::layout::{LayoutError, LayoutOf, LayoutOfHelpers, TyAndLayout};\n use rustc_middle::ty::subst::{InternalSubsts, Subst};\n use rustc_middle::ty::{\n     self, ConstInt, ConstKind, Instance, ParamEnv, ScalarInt, Ty, TyCtxt, TypeFoldable,\n@@ -330,7 +330,7 @@ struct ConstPropagator<'mir, 'tcx> {\n     source_info: Option<SourceInfo>,\n }\n \n-impl<'mir, 'tcx> LayoutOf<'tcx> for ConstPropagator<'mir, 'tcx> {\n+impl<'mir, 'tcx> LayoutOfHelpers<'tcx> for ConstPropagator<'mir, 'tcx> {\n     type LayoutOfResult = Result<TyAndLayout<'tcx>, LayoutError<'tcx>>;\n \n     #[inline]"}, {"sha": "aa78fcfb4b373cc42066634ba885784ac7acb44b", "filename": "compiler/rustc_passes/src/layout_test.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f53c93cf65c351ca0ef0cfe257a6139d77032ea8/compiler%2Frustc_passes%2Fsrc%2Flayout_test.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f53c93cf65c351ca0ef0cfe257a6139d77032ea8/compiler%2Frustc_passes%2Fsrc%2Flayout_test.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_passes%2Fsrc%2Flayout_test.rs?ref=f53c93cf65c351ca0ef0cfe257a6139d77032ea8", "patch": "@@ -3,7 +3,7 @@ use rustc_hir as hir;\n use rustc_hir::def_id::LocalDefId;\n use rustc_hir::itemlikevisit::ItemLikeVisitor;\n use rustc_hir::ItemKind;\n-use rustc_middle::ty::layout::{HasParamEnv, HasTyCtxt, LayoutError, LayoutOf, TyAndLayout};\n+use rustc_middle::ty::layout::{HasParamEnv, HasTyCtxt, LayoutError, LayoutOfHelpers, TyAndLayout};\n use rustc_middle::ty::{ParamEnv, Ty, TyCtxt};\n use rustc_span::symbol::sym;\n use rustc_span::Span;\n@@ -114,7 +114,7 @@ struct UnwrapLayoutCx<'tcx> {\n     param_env: ParamEnv<'tcx>,\n }\n \n-impl LayoutOf<'tcx> for UnwrapLayoutCx<'tcx> {\n+impl LayoutOfHelpers<'tcx> for UnwrapLayoutCx<'tcx> {\n     type LayoutOfResult = TyAndLayout<'tcx>;\n \n     fn handle_layout_err(&self, err: LayoutError<'tcx>, span: Span, ty: Ty<'tcx>) -> ! {"}]}