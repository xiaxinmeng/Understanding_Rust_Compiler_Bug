{"sha": "7723dd090913de991ea258bfd5b3f6c428591235", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc3MjNkZDA5MDkxM2RlOTkxZWEyNThiZmQ1YjNmNmM0Mjg1OTEyMzU=", "commit": {"author": {"name": "Jonas Schievink", "email": "jonas.schievink@ferrous-systems.com", "date": "2021-03-31T15:18:21Z"}, "committer": {"name": "Jonas Schievink", "email": "jonas.schievink@ferrous-systems.com", "date": "2021-03-31T15:18:21Z"}, "message": "Rename `convert_location` -> `location`", "tree": {"sha": "88ddcfde278a231b0a386cc3ac812adffdc7567e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/88ddcfde278a231b0a386cc3ac812adffdc7567e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7723dd090913de991ea258bfd5b3f6c428591235", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7723dd090913de991ea258bfd5b3f6c428591235", "html_url": "https://github.com/rust-lang/rust/commit/7723dd090913de991ea258bfd5b3f6c428591235", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7723dd090913de991ea258bfd5b3f6c428591235/comments", "author": {"login": "jonas-schievink", "id": 1786438, "node_id": "MDQ6VXNlcjE3ODY0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1786438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonas-schievink", "html_url": "https://github.com/jonas-schievink", "followers_url": "https://api.github.com/users/jonas-schievink/followers", "following_url": "https://api.github.com/users/jonas-schievink/following{/other_user}", "gists_url": "https://api.github.com/users/jonas-schievink/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonas-schievink/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonas-schievink/subscriptions", "organizations_url": "https://api.github.com/users/jonas-schievink/orgs", "repos_url": "https://api.github.com/users/jonas-schievink/repos", "events_url": "https://api.github.com/users/jonas-schievink/events{/privacy}", "received_events_url": "https://api.github.com/users/jonas-schievink/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jonas-schievink", "id": 1786438, "node_id": "MDQ6VXNlcjE3ODY0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1786438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonas-schievink", "html_url": "https://github.com/jonas-schievink", "followers_url": "https://api.github.com/users/jonas-schievink/followers", "following_url": "https://api.github.com/users/jonas-schievink/following{/other_user}", "gists_url": "https://api.github.com/users/jonas-schievink/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonas-schievink/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonas-schievink/subscriptions", "organizations_url": "https://api.github.com/users/jonas-schievink/orgs", "repos_url": "https://api.github.com/users/jonas-schievink/repos", "events_url": "https://api.github.com/users/jonas-schievink/events{/privacy}", "received_events_url": "https://api.github.com/users/jonas-schievink/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9b41effd076b6d845a6ac2c31af431c83af4ed42", "url": "https://api.github.com/repos/rust-lang/rust/commits/9b41effd076b6d845a6ac2c31af431c83af4ed42", "html_url": "https://github.com/rust-lang/rust/commit/9b41effd076b6d845a6ac2c31af431c83af4ed42"}], "stats": {"total": 22, "additions": 11, "deletions": 11}, "files": [{"sha": "c632630d1d30fe01b4aa7cec72a7e2bdac6a29b7", "filename": "crates/rust-analyzer/src/diagnostics/to_proto.rs", "status": "modified", "additions": 11, "deletions": 11, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/7723dd090913de991ea258bfd5b3f6c428591235/crates%2Frust-analyzer%2Fsrc%2Fdiagnostics%2Fto_proto.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7723dd090913de991ea258bfd5b3f6c428591235/crates%2Frust-analyzer%2Fsrc%2Fdiagnostics%2Fto_proto.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fdiagnostics%2Fto_proto.rs?ref=7723dd090913de991ea258bfd5b3f6c428591235", "patch": "@@ -35,7 +35,7 @@ fn diagnostic_severity(\n }\n \n /// Converts a Rust span to a LSP location\n-fn convert_location(workspace_root: &Path, span: &DiagnosticSpan) -> lsp_types::Location {\n+fn location(workspace_root: &Path, span: &DiagnosticSpan) -> lsp_types::Location {\n     let file_name = workspace_root.join(&span.file_name);\n     let uri = url_from_abs_path(&file_name);\n \n@@ -56,7 +56,7 @@ fn diagnostic_related_information(\n     span: &DiagnosticSpan,\n ) -> Option<lsp_types::DiagnosticRelatedInformation> {\n     let message = span.label.clone()?;\n-    let location = convert_location(workspace_root, span);\n+    let location = location(workspace_root, span);\n     Some(lsp_types::DiagnosticRelatedInformation { location, message })\n }\n \n@@ -84,7 +84,7 @@ fn map_rust_child_diagnostic(\n     let mut edit_map: HashMap<lsp_types::Url, Vec<lsp_types::TextEdit>> = HashMap::new();\n     for &span in &spans {\n         if let Some(suggested_replacement) = &span.suggested_replacement {\n-            let location = convert_location(workspace_root, span);\n+            let location = location(workspace_root, span);\n             let edit = lsp_types::TextEdit::new(location.range, suggested_replacement.clone());\n             edit_map.entry(location.uri).or_default().push(edit);\n         }\n@@ -93,15 +93,15 @@ fn map_rust_child_diagnostic(\n     if edit_map.is_empty() {\n         MappedRustChildDiagnostic::SubDiagnostic(SubDiagnostic {\n             related: lsp_types::DiagnosticRelatedInformation {\n-                location: convert_location(workspace_root, spans[0]),\n+                location: location(workspace_root, spans[0]),\n                 message: rd.message.clone(),\n             },\n             suggested_fix: None,\n         })\n     } else {\n         MappedRustChildDiagnostic::SubDiagnostic(SubDiagnostic {\n             related: lsp_types::DiagnosticRelatedInformation {\n-                location: convert_location(workspace_root, spans[0]),\n+                location: location(workspace_root, spans[0]),\n                 message: rd.message.clone(),\n             },\n             suggested_fix: Some(lsp_ext::CodeAction {\n@@ -217,7 +217,7 @@ pub(crate) fn map_rust_diagnostic_to_lsp(\n     primary_spans\n         .iter()\n         .flat_map(|primary_span| {\n-            let location = convert_location(workspace_root, &primary_span);\n+            let primary_location = location(workspace_root, &primary_span);\n \n             let mut message = message.clone();\n             if needs_primary_span_label {\n@@ -240,15 +240,15 @@ pub(crate) fn map_rust_diagnostic_to_lsp(\n             })\n             .skip(1);\n             for macro_span in macro_calls {\n-                let in_macro_location = convert_location(workspace_root, &macro_span);\n+                let in_macro_location = location(workspace_root, &macro_span);\n                 related_info_macro_calls.push(lsp_types::DiagnosticRelatedInformation {\n                     location: in_macro_location.clone(),\n                     message: \"Error originated from macro call here\".to_string(),\n                 });\n                 // For the additional in-macro diagnostic we add the inverse message pointing to the error location in code.\n                 let information_for_additional_diagnostic =\n                     vec![lsp_types::DiagnosticRelatedInformation {\n-                        location: location.clone(),\n+                        location: primary_location.clone(),\n                         message: \"Exact error occurred here\".to_string(),\n                     }];\n \n@@ -273,9 +273,9 @@ pub(crate) fn map_rust_diagnostic_to_lsp(\n \n             // Emit the primary diagnostic.\n             diagnostics.push(MappedRustDiagnostic {\n-                url: location.uri.clone(),\n+                url: primary_location.uri.clone(),\n                 diagnostic: lsp_types::Diagnostic {\n-                    range: location.range,\n+                    range: primary_location.range,\n                     severity,\n                     code: code.clone().map(lsp_types::NumberOrString::String),\n                     code_description: code_description.clone(),\n@@ -303,7 +303,7 @@ pub(crate) fn map_rust_diagnostic_to_lsp(\n             // This is useful because they will show up in the user's editor, unlike\n             // `related_information`, which just produces hard-to-read links, at least in VS Code.\n             let back_ref = lsp_types::DiagnosticRelatedInformation {\n-                location,\n+                location: primary_location,\n                 message: \"original diagnostic\".to_string(),\n             };\n             for sub in &subdiagnostics {"}]}