{"sha": "dcbfb9776df416c940562a1ee93e3ad4bf0fa552", "node_id": "C_kwDOAAsO6NoAKGRjYmZiOTc3NmRmNDE2Yzk0MDU2MmExZWU5M2UzYWQ0YmYwZmE1NTI", "commit": {"author": {"name": "Yuki Okushi", "email": "huyuumi.dev+love@gmail.com", "date": "2022-11-22T21:40:24Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-11-22T21:40:24Z"}, "message": "Rollup merge of #104724 - WaffleLapkin:to_def_idn't, r=compiler-errors\n\nFix `ClosureKind::to_def_id`\n\n`Fn` and `FnOnce` were mixed up in https://github.com/rust-lang/rust/pull/99131.", "tree": {"sha": "70e5bd0a415b274b56b3e992e1dbbeff51427b7d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/70e5bd0a415b274b56b3e992e1dbbeff51427b7d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/dcbfb9776df416c940562a1ee93e3ad4bf0fa552", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJjfUHICRBK7hj4Ov3rIwAAFWkIAJ/iG7vVzc8bgmegqmGQgUVm\nMYoQ5thILrTFlm9wyyzW75kJMqr4QoMdIzd1cFbIXkti9qfiM2LLdiZYJTume67x\nZzTbbguFDDn/aNva9I7k2bpInOdxHeNyGXjjJfM47uQTQ2pX8GOBJ5r5lS+5qFbs\nvrjg9zq5aQ3zwf79GYcKem/L4S6Sc1YwMJ/IRkHGkLoOyj2ux+HkPyXNeOe4jplm\nV+YRRwjsXbQZQPVvrsrEk8FxIfQDRNpyKAPnYm51nvTWaSVnBhoNWkwg3YS426IY\norKUXgwzy3zzuo7ZAk90uuOanbSsnzaAWAOFhKj4DwoWHNPg45eD6+B7PHDX6HA=\n=eTjV\n-----END PGP SIGNATURE-----\n", "payload": "tree 70e5bd0a415b274b56b3e992e1dbbeff51427b7d\nparent 0115969dd376968e535d97cd0f0d24136256d8f1\nparent 04610ad1297bb092205be59f3faf629a96067ee3\nauthor Yuki Okushi <huyuumi.dev+love@gmail.com> 1669153224 +0900\ncommitter GitHub <noreply@github.com> 1669153224 +0900\n\nRollup merge of #104724 - WaffleLapkin:to_def_idn't, r=compiler-errors\n\nFix `ClosureKind::to_def_id`\n\n`Fn` and `FnOnce` were mixed up in https://github.com/rust-lang/rust/pull/99131.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/dcbfb9776df416c940562a1ee93e3ad4bf0fa552", "html_url": "https://github.com/rust-lang/rust/commit/dcbfb9776df416c940562a1ee93e3ad4bf0fa552", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/dcbfb9776df416c940562a1ee93e3ad4bf0fa552/comments", "author": null, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0115969dd376968e535d97cd0f0d24136256d8f1", "url": "https://api.github.com/repos/rust-lang/rust/commits/0115969dd376968e535d97cd0f0d24136256d8f1", "html_url": "https://github.com/rust-lang/rust/commit/0115969dd376968e535d97cd0f0d24136256d8f1"}, {"sha": "04610ad1297bb092205be59f3faf629a96067ee3", "url": "https://api.github.com/repos/rust-lang/rust/commits/04610ad1297bb092205be59f3faf629a96067ee3", "html_url": "https://github.com/rust-lang/rust/commit/04610ad1297bb092205be59f3faf629a96067ee3"}], "stats": {"total": 55, "additions": 41, "deletions": 14}, "files": [{"sha": "273a61c966c72c08edd4e7842b33bbb81b997002", "filename": "compiler/rustc_middle/src/ty/closure.rs", "status": "modified", "additions": 9, "deletions": 5, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/dcbfb9776df416c940562a1ee93e3ad4bf0fa552/compiler%2Frustc_middle%2Fsrc%2Fty%2Fclosure.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dcbfb9776df416c940562a1ee93e3ad4bf0fa552/compiler%2Frustc_middle%2Fsrc%2Fty%2Fclosure.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fty%2Fclosure.rs?ref=dcbfb9776df416c940562a1ee93e3ad4bf0fa552", "patch": "@@ -5,6 +5,7 @@ use crate::{mir, ty};\n \n use std::fmt::Write;\n \n+use hir::LangItem;\n use rustc_data_structures::fx::{FxHashMap, FxIndexMap};\n use rustc_hir as hir;\n use rustc_hir::def_id::{DefId, LocalDefId};\n@@ -130,11 +131,14 @@ impl<'tcx> ClosureKind {\n     }\n \n     pub fn to_def_id(&self, tcx: TyCtxt<'_>) -> DefId {\n-        match self {\n-            ClosureKind::Fn => tcx.lang_items().fn_once_trait().unwrap(),\n-            ClosureKind::FnMut => tcx.lang_items().fn_mut_trait().unwrap(),\n-            ClosureKind::FnOnce => tcx.lang_items().fn_trait().unwrap(),\n-        }\n+        tcx.require_lang_item(\n+            match self {\n+                ClosureKind::Fn => LangItem::Fn,\n+                ClosureKind::FnMut => LangItem::FnMut,\n+                ClosureKind::FnOnce => LangItem::FnOnce,\n+            },\n+            None,\n+        )\n     }\n }\n "}, {"sha": "232cd2ba88cc27cbabb328a9a64d0cb6ad5f0e15", "filename": "src/test/ui/mismatched_types/overloaded-calls-bad.rs", "status": "modified", "additions": 14, "deletions": 5, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/dcbfb9776df416c940562a1ee93e3ad4bf0fa552/src%2Ftest%2Fui%2Fmismatched_types%2Foverloaded-calls-bad.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dcbfb9776df416c940562a1ee93e3ad4bf0fa552/src%2Ftest%2Fui%2Fmismatched_types%2Foverloaded-calls-bad.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmismatched_types%2Foverloaded-calls-bad.rs?ref=dcbfb9776df416c940562a1ee93e3ad4bf0fa552", "patch": "@@ -20,14 +20,23 @@ impl FnOnce<(isize,)> for S {\n     }\n }\n \n+struct F;\n+\n+impl FnOnce<(i32,)> for F {\n+    type Output = ();\n+\n+    extern \"rust-call\" fn call_once(self, args: (i32,)) -> Self::Output {}\n+}\n+\n fn main() {\n-    let mut s = S {\n-        x: 3,\n-        y: 3,\n-    };\n-    let ans = s(\"what\");    //~ ERROR mismatched types\n+    let mut s = S { x: 3, y: 3 };\n+    let ans = s(\"what\");\n+    //~^ ERROR mismatched types\n     let ans = s();\n     //~^ ERROR this function takes 1 argument but 0 arguments were supplied\n     let ans = s(\"burma\", \"shave\");\n     //~^ ERROR this function takes 1 argument but 2 arguments were supplied\n+\n+    F(\"\");\n+    //~^ ERROR mismatched types\n }"}, {"sha": "3a895acbdb5dd6ea68051b834743d86b4b51c0ed", "filename": "src/test/ui/mismatched_types/overloaded-calls-bad.stderr", "status": "modified", "additions": 18, "deletions": 4, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/dcbfb9776df416c940562a1ee93e3ad4bf0fa552/src%2Ftest%2Fui%2Fmismatched_types%2Foverloaded-calls-bad.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/dcbfb9776df416c940562a1ee93e3ad4bf0fa552/src%2Ftest%2Fui%2Fmismatched_types%2Foverloaded-calls-bad.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmismatched_types%2Foverloaded-calls-bad.stderr?ref=dcbfb9776df416c940562a1ee93e3ad4bf0fa552", "patch": "@@ -1,5 +1,5 @@\n error[E0308]: mismatched types\n-  --> $DIR/overloaded-calls-bad.rs:28:17\n+  --> $DIR/overloaded-calls-bad.rs:33:17\n    |\n LL |     let ans = s(\"what\");\n    |               - ^^^^^^ expected `isize`, found `&str`\n@@ -13,7 +13,7 @@ LL | impl FnMut<(isize,)> for S {\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error[E0057]: this function takes 1 argument but 0 arguments were supplied\n-  --> $DIR/overloaded-calls-bad.rs:29:15\n+  --> $DIR/overloaded-calls-bad.rs:35:15\n    |\n LL |     let ans = s();\n    |               ^-- an argument of type `isize` is missing\n@@ -29,7 +29,7 @@ LL |     let ans = s(/* isize */);\n    |                ~~~~~~~~~~~~~\n \n error[E0057]: this function takes 1 argument but 2 arguments were supplied\n-  --> $DIR/overloaded-calls-bad.rs:31:15\n+  --> $DIR/overloaded-calls-bad.rs:37:15\n    |\n LL |     let ans = s(\"burma\", \"shave\");\n    |               ^ -------  ------- argument of type `&'static str` unexpected\n@@ -46,7 +46,21 @@ help: remove the extra argument\n LL |     let ans = s(/* isize */);\n    |                ~~~~~~~~~~~~~\n \n-error: aborting due to 3 previous errors\n+error[E0308]: mismatched types\n+  --> $DIR/overloaded-calls-bad.rs:40:7\n+   |\n+LL |     F(\"\");\n+   |     - ^^ expected `i32`, found `&str`\n+   |     |\n+   |     arguments to this struct are incorrect\n+   |\n+note: implementation defined here\n+  --> $DIR/overloaded-calls-bad.rs:25:1\n+   |\n+LL | impl FnOnce<(i32,)> for F {\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^\n+\n+error: aborting due to 4 previous errors\n \n Some errors have detailed explanations: E0057, E0308.\n For more information about an error, try `rustc --explain E0057`."}]}