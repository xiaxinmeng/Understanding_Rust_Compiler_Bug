{"sha": "dae020d49116dc684b92b0f7d7c10b29520411f2", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRhZTAyMGQ0OTExNmRjNjg0YjkyYjBmN2Q3YzEwYjI5NTIwNDExZjI=", "commit": {"author": {"name": "Tyler Mandry", "email": "tmandry@gmail.com", "date": "2020-08-14T21:46:41Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-08-14T21:46:41Z"}, "message": "Rollup merge of #74192 - xkr47:patch-1, r=Mark-Simulacrum\n\nImprove documentation on process::Child.std* fields\n\nAs a relative beginner, it took a while for me to figure out I could just steal the references to avoid partially moving the child and thus retain ability to call functions on it (and store it in structs etc).", "tree": {"sha": "217a7181896325cfeff6839f1ba181c8c5b1e013", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/217a7181896325cfeff6839f1ba181c8c5b1e013"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/dae020d49116dc684b92b0f7d7c10b29520411f2", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJfNwZCCRBK7hj4Ov3rIwAAdHIIADjauMW5XoccjgmE5BQ7TBRX\nOJB1cd5ETInAmtbxns7socOsiWN8LG68rfoHsh5l7kMW5ARAms511x4UniKXbn3s\n8casUjxbTN0KhyDvAi+u02zrD2Eq3BAOkXSiq5ydMP6rkTpCI7NrhcdatuUbRUfQ\nXLCnlWDDVjFGUstldRZKxrbtJVGlRJN9uBursUXVbw70CYhaazXsHR4IThG/A0bZ\nwuMfEXtZ5HDudRsQR1GKWOElEFsKZEAA1pBOb5MTQKbWQ2CIJcijeC8e6KqRW00+\nv+LxzSZpYFgZfTBHMXVVE7ZbfAkmdnwmy8+DeHdpwBi2jMpbIQhBicNHsGv+3bo=\n=hO1p\n-----END PGP SIGNATURE-----\n", "payload": "tree 217a7181896325cfeff6839f1ba181c8c5b1e013\nparent 3111a8c1e2c4526d3c83c994e91530b26db28b59\nparent 90e4c905d352dc5c5de71af717200c879fec88f7\nauthor Tyler Mandry <tmandry@gmail.com> 1597441601 -0700\ncommitter GitHub <noreply@github.com> 1597441601 -0700\n\nRollup merge of #74192 - xkr47:patch-1, r=Mark-Simulacrum\n\nImprove documentation on process::Child.std* fields\n\nAs a relative beginner, it took a while for me to figure out I could just steal the references to avoid partially moving the child and thus retain ability to call functions on it (and store it in structs etc).\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/dae020d49116dc684b92b0f7d7c10b29520411f2", "html_url": "https://github.com/rust-lang/rust/commit/dae020d49116dc684b92b0f7d7c10b29520411f2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/dae020d49116dc684b92b0f7d7c10b29520411f2/comments", "author": {"login": "tmandry", "id": 2280544, "node_id": "MDQ6VXNlcjIyODA1NDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/2280544?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tmandry", "html_url": "https://github.com/tmandry", "followers_url": "https://api.github.com/users/tmandry/followers", "following_url": "https://api.github.com/users/tmandry/following{/other_user}", "gists_url": "https://api.github.com/users/tmandry/gists{/gist_id}", "starred_url": "https://api.github.com/users/tmandry/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tmandry/subscriptions", "organizations_url": "https://api.github.com/users/tmandry/orgs", "repos_url": "https://api.github.com/users/tmandry/repos", "events_url": "https://api.github.com/users/tmandry/events{/privacy}", "received_events_url": "https://api.github.com/users/tmandry/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3111a8c1e2c4526d3c83c994e91530b26db28b59", "url": "https://api.github.com/repos/rust-lang/rust/commits/3111a8c1e2c4526d3c83c994e91530b26db28b59", "html_url": "https://github.com/rust-lang/rust/commit/3111a8c1e2c4526d3c83c994e91530b26db28b59"}, {"sha": "90e4c905d352dc5c5de71af717200c879fec88f7", "url": "https://api.github.com/repos/rust-lang/rust/commits/90e4c905d352dc5c5de71af717200c879fec88f7", "html_url": "https://github.com/rust-lang/rust/commit/90e4c905d352dc5c5de71af717200c879fec88f7"}], "stats": {"total": 27, "additions": 24, "deletions": 3}, "files": [{"sha": "409a945018654257079d2d66cb4019a6d04c2eba", "filename": "library/std/src/process.rs", "status": "modified", "additions": 24, "deletions": 3, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/dae020d49116dc684b92b0f7d7c10b29520411f2/library%2Fstd%2Fsrc%2Fprocess.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dae020d49116dc684b92b0f7d7c10b29520411f2/library%2Fstd%2Fsrc%2Fprocess.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fprocess.rs?ref=dae020d49116dc684b92b0f7d7c10b29520411f2", "patch": "@@ -170,17 +170,38 @@ pub struct Child {\n     handle: imp::Process,\n \n     /// The handle for writing to the child's standard input (stdin), if it has\n-    /// been captured.\n+    /// been captured. To avoid partially moving\n+    /// the `child` and thus blocking yourself from calling\n+    /// functions on `child` while using `stdin`,\n+    /// you might find it helpful:\n+    ///\n+    /// ```compile_fail,E0425\n+    /// let stdin = child.stdin.take().unwrap();\n+    /// ```\n     #[stable(feature = \"process\", since = \"1.0.0\")]\n     pub stdin: Option<ChildStdin>,\n \n     /// The handle for reading from the child's standard output (stdout), if it\n-    /// has been captured.\n+    /// has been captured. You might find it helpful to do\n+    ///\n+    /// ```compile_fail,E0425\n+    /// let stdout = child.stdout.take().unwrap();\n+    /// ```\n+    ///\n+    /// to avoid partially moving the `child` and thus blocking yourself from calling\n+    /// functions on `child` while using `stdout`.\n     #[stable(feature = \"process\", since = \"1.0.0\")]\n     pub stdout: Option<ChildStdout>,\n \n     /// The handle for reading from the child's standard error (stderr), if it\n-    /// has been captured.\n+    /// has been captured. You might find it helpful to do\n+    ///\n+    /// ```compile_fail,E0425\n+    /// let stderr = child.stderr.take().unwrap();\n+    /// ```\n+    ///\n+    /// to avoid partially moving the `child` and thus blocking yourself from calling\n+    /// functions on `child` while using `stderr`.\n     #[stable(feature = \"process\", since = \"1.0.0\")]\n     pub stderr: Option<ChildStderr>,\n }"}]}