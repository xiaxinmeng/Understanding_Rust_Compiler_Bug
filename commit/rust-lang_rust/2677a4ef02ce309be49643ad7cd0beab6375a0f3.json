{"sha": "2677a4ef02ce309be49643ad7cd0beab6375a0f3", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI2NzdhNGVmMDJjZTMwOWJlNDk2NDNhZDdjZDBiZWFiNjM3NWEwZjM=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-01-11T20:32:51Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-01-11T20:32:51Z"}, "message": "Auto merge of #5040 - JohnTitor:rustup-0111, r=flip1995\n\nSome rustups\n\nchangelog: none", "tree": {"sha": "4a3e3c6c42858352989f47e2cd3a003eeb6302e3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4a3e3c6c42858352989f47e2cd3a003eeb6302e3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2677a4ef02ce309be49643ad7cd0beab6375a0f3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2677a4ef02ce309be49643ad7cd0beab6375a0f3", "html_url": "https://github.com/rust-lang/rust/commit/2677a4ef02ce309be49643ad7cd0beab6375a0f3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2677a4ef02ce309be49643ad7cd0beab6375a0f3/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "43ac9416d935942d6c7d2b2e0c876c551652c4ec", "url": "https://api.github.com/repos/rust-lang/rust/commits/43ac9416d935942d6c7d2b2e0c876c551652c4ec", "html_url": "https://github.com/rust-lang/rust/commit/43ac9416d935942d6c7d2b2e0c876c551652c4ec"}, {"sha": "2f4b1058631416fdfde1b8b7dc588fe16b8d522f", "url": "https://api.github.com/repos/rust-lang/rust/commits/2f4b1058631416fdfde1b8b7dc588fe16b8d522f", "html_url": "https://github.com/rust-lang/rust/commit/2f4b1058631416fdfde1b8b7dc588fe16b8d522f"}], "stats": {"total": 942, "additions": 392, "deletions": 550}, "files": [{"sha": "7c999f1755a6b79dbc794d09184e77f287d96c6a", "filename": "clippy_lints/src/approx_const.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/2677a4ef02ce309be49643ad7cd0beab6375a0f3/clippy_lints%2Fsrc%2Fapprox_const.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2677a4ef02ce309be49643ad7cd0beab6375a0f3/clippy_lints%2Fsrc%2Fapprox_const.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fapprox_const.rs?ref=2677a4ef02ce309be49643ad7cd0beab6375a0f3", "patch": "@@ -1,8 +1,7 @@\n use crate::utils::span_lint;\n-use rustc::declare_lint_pass;\n-use rustc::lint::{LateContext, LateLintPass, LintArray, LintPass};\n+use rustc::lint::{LateContext, LateLintPass};\n use rustc_hir::*;\n-use rustc_session::declare_tool_lint;\n+use rustc_session::{declare_lint_pass, declare_tool_lint};\n use rustc_span::symbol;\n use std::f64::consts as f64;\n use syntax::ast::{FloatTy, LitFloatType, LitKind};"}, {"sha": "bad8331f5af0074a1974214ff91bb6e34e59dde5", "filename": "clippy_lints/src/arithmetic.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/2677a4ef02ce309be49643ad7cd0beab6375a0f3/clippy_lints%2Fsrc%2Farithmetic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2677a4ef02ce309be49643ad7cd0beab6375a0f3/clippy_lints%2Fsrc%2Farithmetic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Farithmetic.rs?ref=2677a4ef02ce309be49643ad7cd0beab6375a0f3", "patch": "@@ -1,9 +1,8 @@\n use crate::consts::constant_simple;\n use crate::utils::span_lint;\n-use rustc::impl_lint_pass;\n-use rustc::lint::{LateContext, LateLintPass, LintArray, LintPass};\n+use rustc::lint::{LateContext, LateLintPass};\n use rustc_hir as hir;\n-use rustc_session::declare_tool_lint;\n+use rustc_session::{declare_tool_lint, impl_lint_pass};\n use rustc_span::source_map::Span;\n \n declare_clippy_lint! {"}, {"sha": "b8d805b3e94ec2d59fcc3af0a2b6521eb20a39d1", "filename": "clippy_lints/src/as_conversions.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/2677a4ef02ce309be49643ad7cd0beab6375a0f3/clippy_lints%2Fsrc%2Fas_conversions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2677a4ef02ce309be49643ad7cd0beab6375a0f3/clippy_lints%2Fsrc%2Fas_conversions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fas_conversions.rs?ref=2677a4ef02ce309be49643ad7cd0beab6375a0f3", "patch": "@@ -1,6 +1,5 @@\n-use rustc::declare_lint_pass;\n-use rustc::lint::{in_external_macro, EarlyContext, EarlyLintPass, LintArray, LintContext, LintPass};\n-use rustc_session::declare_tool_lint;\n+use rustc::lint::{in_external_macro, EarlyContext, EarlyLintPass, LintContext};\n+use rustc_session::{declare_lint_pass, declare_tool_lint};\n use syntax::ast::*;\n \n use crate::utils::span_help_and_lint;"}, {"sha": "800cd88f5bc01ad13487317f10d67ab348c0074d", "filename": "clippy_lints/src/assertions_on_constants.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/2677a4ef02ce309be49643ad7cd0beab6375a0f3/clippy_lints%2Fsrc%2Fassertions_on_constants.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2677a4ef02ce309be49643ad7cd0beab6375a0f3/clippy_lints%2Fsrc%2Fassertions_on_constants.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fassertions_on_constants.rs?ref=2677a4ef02ce309be49643ad7cd0beab6375a0f3", "patch": "@@ -2,10 +2,9 @@ use crate::consts::{constant, Constant};\n use crate::utils::paths;\n use crate::utils::{is_direct_expn_of, is_expn_of, match_function_call, snippet_opt, span_help_and_lint};\n use if_chain::if_chain;\n-use rustc::declare_lint_pass;\n-use rustc::lint::{LateContext, LateLintPass, LintArray, LintPass};\n+use rustc::lint::{LateContext, LateLintPass};\n use rustc_hir::*;\n-use rustc_session::declare_tool_lint;\n+use rustc_session::{declare_lint_pass, declare_tool_lint};\n use syntax::ast::LitKind;\n \n declare_clippy_lint! {"}, {"sha": "8fc9f56fe6dd8c78f647950bed9074b6c09d6ba1", "filename": "clippy_lints/src/assign_ops.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/2677a4ef02ce309be49643ad7cd0beab6375a0f3/clippy_lints%2Fsrc%2Fassign_ops.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2677a4ef02ce309be49643ad7cd0beab6375a0f3/clippy_lints%2Fsrc%2Fassign_ops.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fassign_ops.rs?ref=2677a4ef02ce309be49643ad7cd0beab6375a0f3", "patch": "@@ -3,13 +3,12 @@ use crate::utils::{\n };\n use crate::utils::{higher, sugg};\n use if_chain::if_chain;\n-use rustc::declare_lint_pass;\n use rustc::hir::map::Map;\n-use rustc::lint::{LateContext, LateLintPass, LintArray, LintPass};\n+use rustc::lint::{LateContext, LateLintPass};\n use rustc_errors::Applicability;\n use rustc_hir as hir;\n use rustc_hir::intravisit::{walk_expr, NestedVisitorMap, Visitor};\n-use rustc_session::declare_tool_lint;\n+use rustc_session::{declare_lint_pass, declare_tool_lint};\n \n declare_clippy_lint! {\n     /// **What it does:** Checks for `a = a op b` or `a = b commutative_op a`"}, {"sha": "94db8248ae28ab79259388fb859126dfc83e1dfb", "filename": "clippy_lints/src/atomic_ordering.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/2677a4ef02ce309be49643ad7cd0beab6375a0f3/clippy_lints%2Fsrc%2Fatomic_ordering.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2677a4ef02ce309be49643ad7cd0beab6375a0f3/clippy_lints%2Fsrc%2Fatomic_ordering.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fatomic_ordering.rs?ref=2677a4ef02ce309be49643ad7cd0beab6375a0f3", "patch": "@@ -1,11 +1,10 @@\n use crate::utils::{match_def_path, span_help_and_lint};\n use if_chain::if_chain;\n-use rustc::declare_lint_pass;\n-use rustc::lint::{LateContext, LateLintPass, LintArray, LintPass};\n+use rustc::lint::{LateContext, LateLintPass};\n use rustc::ty;\n use rustc_hir::def_id::DefId;\n use rustc_hir::*;\n-use rustc_session::declare_tool_lint;\n+use rustc_session::{declare_lint_pass, declare_tool_lint};\n \n declare_clippy_lint! {\n     /// **What it does:** Checks for usage of invalid atomic"}, {"sha": "cc326b52fe406192cdc08811197f32e101109df6", "filename": "clippy_lints/src/attrs.rs", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/2677a4ef02ce309be49643ad7cd0beab6375a0f3/clippy_lints%2Fsrc%2Fattrs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2677a4ef02ce309be49643ad7cd0beab6375a0f3/clippy_lints%2Fsrc%2Fattrs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fattrs.rs?ref=2677a4ef02ce309be49643ad7cd0beab6375a0f3", "patch": "@@ -6,15 +6,13 @@ use crate::utils::{\n     span_lint_and_then, without_block_comments,\n };\n use if_chain::if_chain;\n-use rustc::declare_lint_pass;\n use rustc::lint::{\n-    in_external_macro, CheckLintNameResult, EarlyContext, EarlyLintPass, LateContext, LateLintPass, LintArray,\n-    LintContext, LintPass,\n+    in_external_macro, CheckLintNameResult, EarlyContext, EarlyLintPass, LateContext, LateLintPass, LintContext,\n };\n use rustc::ty;\n use rustc_errors::Applicability;\n use rustc_hir::*;\n-use rustc_session::declare_tool_lint;\n+use rustc_session::{declare_lint_pass, declare_tool_lint};\n use rustc_span::source_map::Span;\n use rustc_span::symbol::Symbol;\n use semver::Version;"}, {"sha": "4ff9b6dcf49a2bf1dc01aa54a00a9ec95884766b", "filename": "clippy_lints/src/bit_mask.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/2677a4ef02ce309be49643ad7cd0beab6375a0f3/clippy_lints%2Fsrc%2Fbit_mask.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2677a4ef02ce309be49643ad7cd0beab6375a0f3/clippy_lints%2Fsrc%2Fbit_mask.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fbit_mask.rs?ref=2677a4ef02ce309be49643ad7cd0beab6375a0f3", "patch": "@@ -2,11 +2,10 @@ use crate::consts::{constant, Constant};\n use crate::utils::sugg::Sugg;\n use crate::utils::{span_lint, span_lint_and_then};\n use if_chain::if_chain;\n-use rustc::impl_lint_pass;\n-use rustc::lint::{LateContext, LateLintPass, LintArray, LintPass};\n+use rustc::lint::{LateContext, LateLintPass};\n use rustc_errors::Applicability;\n use rustc_hir::*;\n-use rustc_session::declare_tool_lint;\n+use rustc_session::{declare_tool_lint, impl_lint_pass};\n use rustc_span::source_map::Span;\n use syntax::ast::LitKind;\n "}, {"sha": "ea2384cd284960db8524048ed8507500ef00aff2", "filename": "clippy_lints/src/blacklisted_name.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/2677a4ef02ce309be49643ad7cd0beab6375a0f3/clippy_lints%2Fsrc%2Fblacklisted_name.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2677a4ef02ce309be49643ad7cd0beab6375a0f3/clippy_lints%2Fsrc%2Fblacklisted_name.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fblacklisted_name.rs?ref=2677a4ef02ce309be49643ad7cd0beab6375a0f3", "patch": "@@ -1,9 +1,8 @@\n use crate::utils::span_lint;\n-use rustc::impl_lint_pass;\n-use rustc::lint::{LateContext, LateLintPass, LintArray, LintPass};\n+use rustc::lint::{LateContext, LateLintPass};\n use rustc_data_structures::fx::FxHashSet;\n use rustc_hir::*;\n-use rustc_session::declare_tool_lint;\n+use rustc_session::{declare_tool_lint, impl_lint_pass};\n \n declare_clippy_lint! {\n     /// **What it does:** Checks for usage of blacklisted names for variables, such"}, {"sha": "470a98f19e5a15f788b2b0355920ac859fe9c1be", "filename": "clippy_lints/src/block_in_if_condition.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/2677a4ef02ce309be49643ad7cd0beab6375a0f3/clippy_lints%2Fsrc%2Fblock_in_if_condition.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2677a4ef02ce309be49643ad7cd0beab6375a0f3/clippy_lints%2Fsrc%2Fblock_in_if_condition.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fblock_in_if_condition.rs?ref=2677a4ef02ce309be49643ad7cd0beab6375a0f3", "patch": "@@ -1,11 +1,10 @@\n use crate::utils::*;\n use matches::matches;\n-use rustc::declare_lint_pass;\n use rustc::hir::map::Map;\n-use rustc::lint::{in_external_macro, LateContext, LateLintPass, LintArray, LintContext, LintPass};\n+use rustc::lint::{in_external_macro, LateContext, LateLintPass, LintContext};\n use rustc_hir::intravisit::{walk_expr, NestedVisitorMap, Visitor};\n use rustc_hir::*;\n-use rustc_session::declare_tool_lint;\n+use rustc_session::{declare_lint_pass, declare_tool_lint};\n \n declare_clippy_lint! {\n     /// **What it does:** Checks for `if` conditions that use blocks to contain an"}, {"sha": "2bff1ba48aa595ec7938dd4f55fab318a900646c", "filename": "clippy_lints/src/booleans.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/2677a4ef02ce309be49643ad7cd0beab6375a0f3/clippy_lints%2Fsrc%2Fbooleans.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2677a4ef02ce309be49643ad7cd0beab6375a0f3/clippy_lints%2Fsrc%2Fbooleans.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fbooleans.rs?ref=2677a4ef02ce309be49643ad7cd0beab6375a0f3", "patch": "@@ -3,14 +3,13 @@ use crate::utils::{\n     span_lint_and_then, SpanlessEq,\n };\n use if_chain::if_chain;\n-use rustc::declare_lint_pass;\n use rustc::hir::map::Map;\n-use rustc::lint::{LateContext, LateLintPass, LintArray, LintPass};\n+use rustc::lint::{LateContext, LateLintPass};\n use rustc_errors::Applicability;\n use rustc_hir::intravisit;\n use rustc_hir::intravisit::*;\n use rustc_hir::*;\n-use rustc_session::declare_tool_lint;\n+use rustc_session::{declare_lint_pass, declare_tool_lint};\n use rustc_span::source_map::Span;\n use syntax::ast::LitKind;\n "}, {"sha": "bab6a657b32fa5010eacc905a3863d45e214f1c4", "filename": "clippy_lints/src/bytecount.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/2677a4ef02ce309be49643ad7cd0beab6375a0f3/clippy_lints%2Fsrc%2Fbytecount.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2677a4ef02ce309be49643ad7cd0beab6375a0f3/clippy_lints%2Fsrc%2Fbytecount.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fbytecount.rs?ref=2677a4ef02ce309be49643ad7cd0beab6375a0f3", "patch": "@@ -3,12 +3,11 @@ use crate::utils::{\n     span_lint_and_sugg, walk_ptrs_ty,\n };\n use if_chain::if_chain;\n-use rustc::declare_lint_pass;\n-use rustc::lint::{LateContext, LateLintPass, LintArray, LintPass};\n+use rustc::lint::{LateContext, LateLintPass};\n use rustc::ty;\n use rustc_errors::Applicability;\n use rustc_hir::*;\n-use rustc_session::declare_tool_lint;\n+use rustc_session::{declare_lint_pass, declare_tool_lint};\n use syntax::ast::{Name, UintTy};\n \n declare_clippy_lint! {"}, {"sha": "1b8ca33e9053645a553c5e6df94b877e7d087bbc", "filename": "clippy_lints/src/cargo_common_metadata.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/2677a4ef02ce309be49643ad7cd0beab6375a0f3/clippy_lints%2Fsrc%2Fcargo_common_metadata.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2677a4ef02ce309be49643ad7cd0beab6375a0f3/clippy_lints%2Fsrc%2Fcargo_common_metadata.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fcargo_common_metadata.rs?ref=2677a4ef02ce309be49643ad7cd0beab6375a0f3", "patch": "@@ -3,9 +3,8 @@\n use std::path::PathBuf;\n \n use crate::utils::span_lint;\n-use rustc::declare_lint_pass;\n-use rustc::lint::{EarlyContext, EarlyLintPass, LintArray, LintPass};\n-use rustc_session::declare_tool_lint;\n+use rustc::lint::{EarlyContext, EarlyLintPass};\n+use rustc_session::{declare_lint_pass, declare_tool_lint};\n use rustc_span::source_map::DUMMY_SP;\n use syntax::ast::*;\n "}, {"sha": "3136310730c9a0cdb3e4d0d2fd57fc9163aacc69", "filename": "clippy_lints/src/checked_conversions.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/2677a4ef02ce309be49643ad7cd0beab6375a0f3/clippy_lints%2Fsrc%2Fchecked_conversions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2677a4ef02ce309be49643ad7cd0beab6375a0f3/clippy_lints%2Fsrc%2Fchecked_conversions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fchecked_conversions.rs?ref=2677a4ef02ce309be49643ad7cd0beab6375a0f3", "patch": "@@ -1,11 +1,10 @@\n //! lint on manually implemented checked conversions that could be transformed into `try_from`\n \n use if_chain::if_chain;\n-use rustc::declare_lint_pass;\n-use rustc::lint::{in_external_macro, LateContext, LateLintPass, LintArray, LintContext, LintPass};\n+use rustc::lint::{in_external_macro, LateContext, LateLintPass, LintContext};\n use rustc_errors::Applicability;\n use rustc_hir::*;\n-use rustc_session::declare_tool_lint;\n+use rustc_session::{declare_lint_pass, declare_tool_lint};\n use syntax::ast::LitKind;\n \n use crate::utils::{snippet_with_applicability, span_lint_and_sugg, SpanlessEq};"}, {"sha": "d884567364fa51aa25a4a2e7a1932342dd7849cf", "filename": "clippy_lints/src/cognitive_complexity.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/2677a4ef02ce309be49643ad7cd0beab6375a0f3/clippy_lints%2Fsrc%2Fcognitive_complexity.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2677a4ef02ce309be49643ad7cd0beab6375a0f3/clippy_lints%2Fsrc%2Fcognitive_complexity.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fcognitive_complexity.rs?ref=2677a4ef02ce309be49643ad7cd0beab6375a0f3", "patch": "@@ -1,11 +1,10 @@\n //! calculate cognitive complexity and warn about overly complex functions\n \n use rustc::hir::map::Map;\n-use rustc::impl_lint_pass;\n-use rustc::lint::{LateContext, LateLintPass, LintArray, LintContext, LintPass};\n+use rustc::lint::{LateContext, LateLintPass, LintContext};\n use rustc_hir::intravisit::{walk_expr, FnKind, NestedVisitorMap, Visitor};\n use rustc_hir::*;\n-use rustc_session::declare_tool_lint;\n+use rustc_session::{declare_tool_lint, impl_lint_pass};\n use rustc_span::source_map::Span;\n use rustc_span::BytePos;\n use syntax::ast::Attribute;"}, {"sha": "aaaa3eb1f6e42e4745c5814a85e53c20c60e3fdf", "filename": "clippy_lints/src/collapsible_if.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/2677a4ef02ce309be49643ad7cd0beab6375a0f3/clippy_lints%2Fsrc%2Fcollapsible_if.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2677a4ef02ce309be49643ad7cd0beab6375a0f3/clippy_lints%2Fsrc%2Fcollapsible_if.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fcollapsible_if.rs?ref=2677a4ef02ce309be49643ad7cd0beab6375a0f3", "patch": "@@ -13,9 +13,8 @@\n //! This lint is **warn** by default\n \n use if_chain::if_chain;\n-use rustc::declare_lint_pass;\n-use rustc::lint::{EarlyContext, EarlyLintPass, LintArray, LintPass};\n-use rustc_session::declare_tool_lint;\n+use rustc::lint::{EarlyContext, EarlyLintPass};\n+use rustc_session::{declare_lint_pass, declare_tool_lint};\n use syntax::ast;\n \n use crate::utils::sugg::Sugg;"}, {"sha": "60ed68f6363ebbc12f0b683497dc5ac38b3e5667", "filename": "clippy_lints/src/comparison_chain.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/2677a4ef02ce309be49643ad7cd0beab6375a0f3/clippy_lints%2Fsrc%2Fcomparison_chain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2677a4ef02ce309be49643ad7cd0beab6375a0f3/clippy_lints%2Fsrc%2Fcomparison_chain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fcomparison_chain.rs?ref=2677a4ef02ce309be49643ad7cd0beab6375a0f3", "patch": "@@ -1,10 +1,9 @@\n use crate::utils::{\n     get_trait_def_id, if_sequence, implements_trait, parent_node_is_if_expr, paths, span_help_and_lint, SpanlessEq,\n };\n-use rustc::declare_lint_pass;\n-use rustc::lint::{LateContext, LateLintPass, LintArray, LintPass};\n+use rustc::lint::{LateContext, LateLintPass};\n use rustc_hir::*;\n-use rustc_session::declare_tool_lint;\n+use rustc_session::{declare_lint_pass, declare_tool_lint};\n \n declare_clippy_lint! {\n     /// **What it does:** Checks comparison chains written with `if` that can be"}, {"sha": "e71775cf5768f6a9d050adba9c718eceb4a0098d", "filename": "clippy_lints/src/consts.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2677a4ef02ce309be49643ad7cd0beab6375a0f3/clippy_lints%2Fsrc%2Fconsts.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2677a4ef02ce309be49643ad7cd0beab6375a0f3/clippy_lints%2Fsrc%2Fconsts.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fconsts.rs?ref=2677a4ef02ce309be49643ad7cd0beab6375a0f3", "patch": "@@ -334,7 +334,7 @@ impl<'c, 'cc> ConstEvalLateContext<'c, 'cc> {\n                 let result = self\n                     .lcx\n                     .tcx\n-                    .const_eval_resolve(self.param_env, def_id, substs, None)\n+                    .const_eval_resolve(self.param_env, def_id, substs, None, None)\n                     .ok()?;\n                 let result = miri_to_const(&result);\n                 if result.is_some() {"}, {"sha": "4e576b7546bd565249c7f56c2495f00c85c9424e", "filename": "clippy_lints/src/copies.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/2677a4ef02ce309be49643ad7cd0beab6375a0f3/clippy_lints%2Fsrc%2Fcopies.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2677a4ef02ce309be49643ad7cd0beab6375a0f3/clippy_lints%2Fsrc%2Fcopies.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fcopies.rs?ref=2677a4ef02ce309be49643ad7cd0beab6375a0f3", "patch": "@@ -1,11 +1,10 @@\n use crate::utils::{get_parent_expr, higher, if_sequence, same_tys, snippet, span_lint_and_then, span_note_and_lint};\n use crate::utils::{SpanlessEq, SpanlessHash};\n-use rustc::declare_lint_pass;\n-use rustc::lint::{LateContext, LateLintPass, LintArray, LintPass};\n+use rustc::lint::{LateContext, LateLintPass};\n use rustc::ty::Ty;\n use rustc_data_structures::fx::FxHashMap;\n use rustc_hir::*;\n-use rustc_session::declare_tool_lint;\n+use rustc_session::{declare_lint_pass, declare_tool_lint};\n use rustc_span::symbol::Symbol;\n use std::collections::hash_map::Entry;\n use std::hash::BuildHasherDefault;"}, {"sha": "d3349bb3cb944bb6fc2b36659626444726508271", "filename": "clippy_lints/src/copy_iterator.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/2677a4ef02ce309be49643ad7cd0beab6375a0f3/clippy_lints%2Fsrc%2Fcopy_iterator.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2677a4ef02ce309be49643ad7cd0beab6375a0f3/clippy_lints%2Fsrc%2Fcopy_iterator.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fcopy_iterator.rs?ref=2677a4ef02ce309be49643ad7cd0beab6375a0f3", "patch": "@@ -1,8 +1,7 @@\n use crate::utils::{is_copy, match_path, paths, span_note_and_lint};\n-use rustc::declare_lint_pass;\n-use rustc::lint::{LateContext, LateLintPass, LintArray, LintPass};\n+use rustc::lint::{LateContext, LateLintPass};\n use rustc_hir::{Item, ItemKind};\n-use rustc_session::declare_tool_lint;\n+use rustc_session::{declare_lint_pass, declare_tool_lint};\n \n declare_clippy_lint! {\n     /// **What it does:** Checks for types that implement `Copy` as well as"}, {"sha": "e405c1909046a37abe022e125eb6e51915528cdc", "filename": "clippy_lints/src/dbg_macro.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/2677a4ef02ce309be49643ad7cd0beab6375a0f3/clippy_lints%2Fsrc%2Fdbg_macro.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2677a4ef02ce309be49643ad7cd0beab6375a0f3/clippy_lints%2Fsrc%2Fdbg_macro.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fdbg_macro.rs?ref=2677a4ef02ce309be49643ad7cd0beab6375a0f3", "patch": "@@ -1,8 +1,7 @@\n use crate::utils::{snippet_opt, span_help_and_lint, span_lint_and_sugg};\n-use rustc::declare_lint_pass;\n-use rustc::lint::{EarlyContext, EarlyLintPass, LintArray, LintPass};\n+use rustc::lint::{EarlyContext, EarlyLintPass};\n use rustc_errors::Applicability;\n-use rustc_session::declare_tool_lint;\n+use rustc_session::{declare_lint_pass, declare_tool_lint};\n use rustc_span::source_map::Span;\n use syntax::ast;\n use syntax::tokenstream::TokenStream;"}, {"sha": "bd3f5e81b28218b5a33c953f094df4563f998056", "filename": "clippy_lints/src/default_trait_access.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/2677a4ef02ce309be49643ad7cd0beab6375a0f3/clippy_lints%2Fsrc%2Fdefault_trait_access.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2677a4ef02ce309be49643ad7cd0beab6375a0f3/clippy_lints%2Fsrc%2Fdefault_trait_access.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fdefault_trait_access.rs?ref=2677a4ef02ce309be49643ad7cd0beab6375a0f3", "patch": "@@ -1,10 +1,9 @@\n use if_chain::if_chain;\n-use rustc::declare_lint_pass;\n-use rustc::lint::{LateContext, LateLintPass, LintArray, LintPass};\n+use rustc::lint::{LateContext, LateLintPass};\n use rustc::ty;\n use rustc_errors::Applicability;\n use rustc_hir::*;\n-use rustc_session::declare_tool_lint;\n+use rustc_session::{declare_lint_pass, declare_tool_lint};\n \n use crate::utils::{any_parent_is_automatically_derived, match_def_path, paths, span_lint_and_sugg};\n "}, {"sha": "775770a3ecf83f7ffe403b8d7a3ba6e5359fe467", "filename": "clippy_lints/src/derive.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/2677a4ef02ce309be49643ad7cd0beab6375a0f3/clippy_lints%2Fsrc%2Fderive.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2677a4ef02ce309be49643ad7cd0beab6375a0f3/clippy_lints%2Fsrc%2Fderive.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fderive.rs?ref=2677a4ef02ce309be49643ad7cd0beab6375a0f3", "patch": "@@ -1,11 +1,10 @@\n use crate::utils::paths;\n use crate::utils::{is_automatically_derived, is_copy, match_path, span_lint_and_then};\n use if_chain::if_chain;\n-use rustc::declare_lint_pass;\n-use rustc::lint::{LateContext, LateLintPass, LintArray, LintPass};\n+use rustc::lint::{LateContext, LateLintPass};\n use rustc::ty::{self, Ty};\n use rustc_hir::*;\n-use rustc_session::declare_tool_lint;\n+use rustc_session::{declare_lint_pass, declare_tool_lint};\n use rustc_span::source_map::Span;\n \n declare_clippy_lint! {"}, {"sha": "db6667908298305c677c5480d9bba68a4afb8553", "filename": "clippy_lints/src/doc.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/2677a4ef02ce309be49643ad7cd0beab6375a0f3/clippy_lints%2Fsrc%2Fdoc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2677a4ef02ce309be49643ad7cd0beab6375a0f3/clippy_lints%2Fsrc%2Fdoc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fdoc.rs?ref=2677a4ef02ce309be49643ad7cd0beab6375a0f3", "patch": "@@ -1,10 +1,9 @@\n use crate::utils::{match_type, paths, return_ty, span_lint};\n use itertools::Itertools;\n-use rustc::impl_lint_pass;\n-use rustc::lint::{in_external_macro, LateContext, LateLintPass, LintArray, LintPass};\n+use rustc::lint::{in_external_macro, LateContext, LateLintPass};\n use rustc_data_structures::fx::FxHashSet;\n use rustc_hir as hir;\n-use rustc_session::declare_tool_lint;\n+use rustc_session::{declare_tool_lint, impl_lint_pass};\n use rustc_span::source_map::{BytePos, MultiSpan, Span};\n use rustc_span::Pos;\n use std::ops::Range;"}, {"sha": "0bc038890213cbad9368432dccae94cf010394ad", "filename": "clippy_lints/src/double_comparison.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/2677a4ef02ce309be49643ad7cd0beab6375a0f3/clippy_lints%2Fsrc%2Fdouble_comparison.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2677a4ef02ce309be49643ad7cd0beab6375a0f3/clippy_lints%2Fsrc%2Fdouble_comparison.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fdouble_comparison.rs?ref=2677a4ef02ce309be49643ad7cd0beab6375a0f3", "patch": "@@ -1,10 +1,9 @@\n //! Lint on unnecessary double comparisons. Some examples:\n \n-use rustc::declare_lint_pass;\n-use rustc::lint::{LateContext, LateLintPass, LintArray, LintPass};\n+use rustc::lint::{LateContext, LateLintPass};\n use rustc_errors::Applicability;\n use rustc_hir::*;\n-use rustc_session::declare_tool_lint;\n+use rustc_session::{declare_lint_pass, declare_tool_lint};\n use rustc_span::source_map::Span;\n \n use crate::utils::{snippet_with_applicability, span_lint_and_sugg, SpanlessEq};"}, {"sha": "d6f1ced99a263ef78db32773d00a60f43f252ea6", "filename": "clippy_lints/src/double_parens.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/2677a4ef02ce309be49643ad7cd0beab6375a0f3/clippy_lints%2Fsrc%2Fdouble_parens.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2677a4ef02ce309be49643ad7cd0beab6375a0f3/clippy_lints%2Fsrc%2Fdouble_parens.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fdouble_parens.rs?ref=2677a4ef02ce309be49643ad7cd0beab6375a0f3", "patch": "@@ -1,7 +1,6 @@\n use crate::utils::span_lint;\n-use rustc::declare_lint_pass;\n-use rustc::lint::{EarlyContext, EarlyLintPass, LintArray, LintPass};\n-use rustc_session::declare_tool_lint;\n+use rustc::lint::{EarlyContext, EarlyLintPass};\n+use rustc_session::{declare_lint_pass, declare_tool_lint};\n use syntax::ast::*;\n \n declare_clippy_lint! {"}, {"sha": "df06d6d42f8282667ecb1706d99243d2fb132955", "filename": "clippy_lints/src/drop_bounds.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/2677a4ef02ce309be49643ad7cd0beab6375a0f3/clippy_lints%2Fsrc%2Fdrop_bounds.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2677a4ef02ce309be49643ad7cd0beab6375a0f3/clippy_lints%2Fsrc%2Fdrop_bounds.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fdrop_bounds.rs?ref=2677a4ef02ce309be49643ad7cd0beab6375a0f3", "patch": "@@ -1,9 +1,8 @@\n use crate::utils::{match_def_path, paths, span_lint};\n use if_chain::if_chain;\n-use rustc::declare_lint_pass;\n-use rustc::lint::{LateLintPass, LintArray, LintPass};\n+use rustc::lint::LateLintPass;\n use rustc_hir::*;\n-use rustc_session::declare_tool_lint;\n+use rustc_session::{declare_lint_pass, declare_tool_lint};\n \n declare_clippy_lint! {\n     /// **What it does:** Checks for generics with `std::ops::Drop` as bounds."}, {"sha": "d7f3722aaeedfadb9cb73c3ca4df30a0519543a9", "filename": "clippy_lints/src/drop_forget_ref.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/2677a4ef02ce309be49643ad7cd0beab6375a0f3/clippy_lints%2Fsrc%2Fdrop_forget_ref.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2677a4ef02ce309be49643ad7cd0beab6375a0f3/clippy_lints%2Fsrc%2Fdrop_forget_ref.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fdrop_forget_ref.rs?ref=2677a4ef02ce309be49643ad7cd0beab6375a0f3", "patch": "@@ -1,10 +1,9 @@\n use crate::utils::{is_copy, match_def_path, paths, qpath_res, span_note_and_lint};\n use if_chain::if_chain;\n-use rustc::declare_lint_pass;\n-use rustc::lint::{LateContext, LateLintPass, LintArray, LintPass};\n+use rustc::lint::{LateContext, LateLintPass};\n use rustc::ty;\n use rustc_hir::*;\n-use rustc_session::declare_tool_lint;\n+use rustc_session::{declare_lint_pass, declare_tool_lint};\n \n declare_clippy_lint! {\n     /// **What it does:** Checks for calls to `std::mem::drop` with a reference"}, {"sha": "85be5938651ec3fd1b438ffce4ca8b077cef7845", "filename": "clippy_lints/src/duration_subsec.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/2677a4ef02ce309be49643ad7cd0beab6375a0f3/clippy_lints%2Fsrc%2Fduration_subsec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2677a4ef02ce309be49643ad7cd0beab6375a0f3/clippy_lints%2Fsrc%2Fduration_subsec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fduration_subsec.rs?ref=2677a4ef02ce309be49643ad7cd0beab6375a0f3", "patch": "@@ -1,9 +1,8 @@\n use if_chain::if_chain;\n-use rustc::declare_lint_pass;\n-use rustc::lint::{LateContext, LateLintPass, LintArray, LintPass};\n+use rustc::lint::{LateContext, LateLintPass};\n use rustc_errors::Applicability;\n use rustc_hir::*;\n-use rustc_session::declare_tool_lint;\n+use rustc_session::{declare_lint_pass, declare_tool_lint};\n use rustc_span::source_map::Spanned;\n \n use crate::consts::{constant, Constant};"}, {"sha": "69ef27032da7c2a6427484f4cf94d992f8751fee", "filename": "clippy_lints/src/else_if_without_else.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/2677a4ef02ce309be49643ad7cd0beab6375a0f3/clippy_lints%2Fsrc%2Felse_if_without_else.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2677a4ef02ce309be49643ad7cd0beab6375a0f3/clippy_lints%2Fsrc%2Felse_if_without_else.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Felse_if_without_else.rs?ref=2677a4ef02ce309be49643ad7cd0beab6375a0f3", "patch": "@@ -1,8 +1,7 @@\n //! Lint on if expressions with an else if, but without a final else branch.\n \n-use rustc::declare_lint_pass;\n-use rustc::lint::{in_external_macro, EarlyContext, EarlyLintPass, LintArray, LintContext, LintPass};\n-use rustc_session::declare_tool_lint;\n+use rustc::lint::{in_external_macro, EarlyContext, EarlyLintPass, LintContext};\n+use rustc_session::{declare_lint_pass, declare_tool_lint};\n use syntax::ast::*;\n \n use crate::utils::span_help_and_lint;"}, {"sha": "d92db682207c6851ecf5a1a1a989c9b69ff8eff6", "filename": "clippy_lints/src/empty_enum.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/2677a4ef02ce309be49643ad7cd0beab6375a0f3/clippy_lints%2Fsrc%2Fempty_enum.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2677a4ef02ce309be49643ad7cd0beab6375a0f3/clippy_lints%2Fsrc%2Fempty_enum.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fempty_enum.rs?ref=2677a4ef02ce309be49643ad7cd0beab6375a0f3", "patch": "@@ -1,10 +1,9 @@\n //! lint when there is an enum with no variants\n \n use crate::utils::span_lint_and_then;\n-use rustc::declare_lint_pass;\n-use rustc::lint::{LateContext, LateLintPass, LintArray, LintPass};\n+use rustc::lint::{LateContext, LateLintPass};\n use rustc_hir::*;\n-use rustc_session::declare_tool_lint;\n+use rustc_session::{declare_lint_pass, declare_tool_lint};\n \n declare_clippy_lint! {\n     /// **What it does:** Checks for `enum`s with no variants."}, {"sha": "e06350d0dcc3df60f166ecb8f788d2654be0d440", "filename": "clippy_lints/src/entry.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/2677a4ef02ce309be49643ad7cd0beab6375a0f3/clippy_lints%2Fsrc%2Fentry.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2677a4ef02ce309be49643ad7cd0beab6375a0f3/clippy_lints%2Fsrc%2Fentry.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fentry.rs?ref=2677a4ef02ce309be49643ad7cd0beab6375a0f3", "patch": "@@ -2,13 +2,12 @@ use crate::utils::SpanlessEq;\n use crate::utils::{get_item_name, higher, match_type, paths, snippet, snippet_opt};\n use crate::utils::{snippet_with_applicability, span_lint_and_then, walk_ptrs_ty};\n use if_chain::if_chain;\n-use rustc::declare_lint_pass;\n use rustc::hir::map::Map;\n-use rustc::lint::{LateContext, LateLintPass, LintArray, LintPass};\n+use rustc::lint::{LateContext, LateLintPass};\n use rustc_errors::Applicability;\n use rustc_hir::intravisit::{walk_expr, NestedVisitorMap, Visitor};\n use rustc_hir::*;\n-use rustc_session::declare_tool_lint;\n+use rustc_session::{declare_lint_pass, declare_tool_lint};\n use rustc_span::source_map::Span;\n \n declare_clippy_lint! {"}, {"sha": "c7d191c03f9ff0054619c49b6197b5458dcd4f8c", "filename": "clippy_lints/src/enum_clike.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/2677a4ef02ce309be49643ad7cd0beab6375a0f3/clippy_lints%2Fsrc%2Fenum_clike.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2677a4ef02ce309be49643ad7cd0beab6375a0f3/clippy_lints%2Fsrc%2Fenum_clike.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fenum_clike.rs?ref=2677a4ef02ce309be49643ad7cd0beab6375a0f3", "patch": "@@ -3,12 +3,11 @@\n \n use crate::consts::{miri_to_const, Constant};\n use crate::utils::span_lint;\n-use rustc::declare_lint_pass;\n-use rustc::lint::{LateContext, LateLintPass, LintArray, LintPass};\n+use rustc::lint::{LateContext, LateLintPass};\n use rustc::ty;\n use rustc::ty::util::IntTypeExt;\n use rustc_hir::*;\n-use rustc_session::declare_tool_lint;\n+use rustc_session::{declare_lint_pass, declare_tool_lint};\n use std::convert::TryFrom;\n use syntax::ast::{IntTy, UintTy};\n "}, {"sha": "88065ddb1a5615588ba671112bf135298d5e1ab5", "filename": "clippy_lints/src/enum_glob_use.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/2677a4ef02ce309be49643ad7cd0beab6375a0f3/clippy_lints%2Fsrc%2Fenum_glob_use.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2677a4ef02ce309be49643ad7cd0beab6375a0f3/clippy_lints%2Fsrc%2Fenum_glob_use.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fenum_glob_use.rs?ref=2677a4ef02ce309be49643ad7cd0beab6375a0f3", "patch": "@@ -1,11 +1,10 @@\n //! lint on `use`ing all variants of an enum\n \n use crate::utils::span_lint;\n-use rustc::declare_lint_pass;\n-use rustc::lint::{LateContext, LateLintPass, LintArray, LintPass};\n+use rustc::lint::{LateContext, LateLintPass};\n use rustc_hir::def::{DefKind, Res};\n use rustc_hir::*;\n-use rustc_session::declare_tool_lint;\n+use rustc_session::{declare_lint_pass, declare_tool_lint};\n use rustc_span::source_map::Span;\n \n declare_clippy_lint! {"}, {"sha": "5b4c059f0cdc91e381f8a797cc79056d654448cc", "filename": "clippy_lints/src/enum_variants.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/2677a4ef02ce309be49643ad7cd0beab6375a0f3/clippy_lints%2Fsrc%2Fenum_variants.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2677a4ef02ce309be49643ad7cd0beab6375a0f3/clippy_lints%2Fsrc%2Fenum_variants.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fenum_variants.rs?ref=2677a4ef02ce309be49643ad7cd0beab6375a0f3", "patch": "@@ -2,9 +2,8 @@\n \n use crate::utils::{camel_case, is_present_in_source};\n use crate::utils::{span_help_and_lint, span_lint};\n-use rustc::impl_lint_pass;\n-use rustc::lint::{EarlyContext, EarlyLintPass, Lint, LintArray, LintPass};\n-use rustc_session::declare_tool_lint;\n+use rustc::lint::{EarlyContext, EarlyLintPass, Lint};\n+use rustc_session::{declare_tool_lint, impl_lint_pass};\n use rustc_span::source_map::Span;\n use rustc_span::symbol::Symbol;\n use syntax::ast::*;"}, {"sha": "b058b7f46ceb97624ee93b56af6ce7b693199445", "filename": "clippy_lints/src/eq_op.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/2677a4ef02ce309be49643ad7cd0beab6375a0f3/clippy_lints%2Fsrc%2Feq_op.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2677a4ef02ce309be49643ad7cd0beab6375a0f3/clippy_lints%2Fsrc%2Feq_op.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Feq_op.rs?ref=2677a4ef02ce309be49643ad7cd0beab6375a0f3", "patch": "@@ -1,9 +1,8 @@\n use crate::utils::{implements_trait, is_copy, multispan_sugg, snippet, span_lint, span_lint_and_then, SpanlessEq};\n-use rustc::declare_lint_pass;\n-use rustc::lint::{LateContext, LateLintPass, LintArray, LintPass};\n+use rustc::lint::{LateContext, LateLintPass};\n use rustc_errors::Applicability;\n use rustc_hir::*;\n-use rustc_session::declare_tool_lint;\n+use rustc_session::{declare_lint_pass, declare_tool_lint};\n \n declare_clippy_lint! {\n     /// **What it does:** Checks for equal operands to comparison, logical and"}, {"sha": "129314c51fbca031f1c19a7deececa42c6107ec0", "filename": "clippy_lints/src/erasing_op.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/2677a4ef02ce309be49643ad7cd0beab6375a0f3/clippy_lints%2Fsrc%2Ferasing_op.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2677a4ef02ce309be49643ad7cd0beab6375a0f3/clippy_lints%2Fsrc%2Ferasing_op.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Ferasing_op.rs?ref=2677a4ef02ce309be49643ad7cd0beab6375a0f3", "patch": "@@ -1,7 +1,6 @@\n-use rustc::declare_lint_pass;\n-use rustc::lint::{LateContext, LateLintPass, LintArray, LintPass};\n+use rustc::lint::{LateContext, LateLintPass};\n use rustc_hir::*;\n-use rustc_session::declare_tool_lint;\n+use rustc_session::{declare_lint_pass, declare_tool_lint};\n use rustc_span::source_map::Span;\n \n use crate::consts::{constant_simple, Constant};"}, {"sha": "90e57381bf8af1b392b26266e8596c48afedd7ff", "filename": "clippy_lints/src/escape.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/2677a4ef02ce309be49643ad7cd0beab6375a0f3/clippy_lints%2Fsrc%2Fescape.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2677a4ef02ce309be49643ad7cd0beab6375a0f3/clippy_lints%2Fsrc%2Fescape.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fescape.rs?ref=2677a4ef02ce309be49643ad7cd0beab6375a0f3", "patch": "@@ -1,11 +1,10 @@\n-use rustc::impl_lint_pass;\n-use rustc::lint::{LateContext, LateLintPass, LintArray, LintPass};\n+use rustc::lint::{LateContext, LateLintPass};\n use rustc::ty::layout::LayoutOf;\n use rustc::ty::{self, Ty};\n use rustc_hir::intravisit as visit;\n use rustc_hir::HirIdSet;\n use rustc_hir::{self, *};\n-use rustc_session::declare_tool_lint;\n+use rustc_session::{declare_tool_lint, impl_lint_pass};\n use rustc_span::source_map::Span;\n use rustc_typeck::expr_use_visitor::*;\n "}, {"sha": "93699e3c23dc1cc56fa0722680fa3e4097994259", "filename": "clippy_lints/src/eta_reduction.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/2677a4ef02ce309be49643ad7cd0beab6375a0f3/clippy_lints%2Fsrc%2Feta_reduction.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2677a4ef02ce309be49643ad7cd0beab6375a0f3/clippy_lints%2Fsrc%2Feta_reduction.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Feta_reduction.rs?ref=2677a4ef02ce309be49643ad7cd0beab6375a0f3", "patch": "@@ -1,11 +1,10 @@\n use if_chain::if_chain;\n use matches::matches;\n-use rustc::declare_lint_pass;\n-use rustc::lint::{in_external_macro, LateContext, LateLintPass, LintArray, LintContext, LintPass};\n+use rustc::lint::{in_external_macro, LateContext, LateLintPass, LintContext};\n use rustc::ty::{self, Ty};\n use rustc_errors::Applicability;\n use rustc_hir::*;\n-use rustc_session::declare_tool_lint;\n+use rustc_session::{declare_lint_pass, declare_tool_lint};\n \n use crate::utils::{\n     implements_trait, is_adjusted, iter_input_pats, snippet_opt, span_lint_and_then, type_is_unsafe_function,"}, {"sha": "be37c9c21541f56fc7efffd3003629748c71a8c7", "filename": "clippy_lints/src/eval_order_dependence.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/2677a4ef02ce309be49643ad7cd0beab6375a0f3/clippy_lints%2Fsrc%2Feval_order_dependence.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2677a4ef02ce309be49643ad7cd0beab6375a0f3/clippy_lints%2Fsrc%2Feval_order_dependence.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Feval_order_dependence.rs?ref=2677a4ef02ce309be49643ad7cd0beab6375a0f3", "patch": "@@ -1,12 +1,11 @@\n use crate::utils::{get_parent_expr, span_lint, span_note_and_lint};\n use if_chain::if_chain;\n-use rustc::declare_lint_pass;\n use rustc::hir::map::Map;\n-use rustc::lint::{LateContext, LateLintPass, LintArray, LintPass};\n+use rustc::lint::{LateContext, LateLintPass};\n use rustc::ty;\n use rustc_hir::intravisit::{walk_expr, NestedVisitorMap, Visitor};\n use rustc_hir::*;\n-use rustc_session::declare_tool_lint;\n+use rustc_session::{declare_lint_pass, declare_tool_lint};\n \n declare_clippy_lint! {\n     /// **What it does:** Checks for a read and a write to the same variable where"}, {"sha": "bc3983877fb2c0a8b0c1d00cd1b2db4e0c2877b3", "filename": "clippy_lints/src/excessive_precision.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/2677a4ef02ce309be49643ad7cd0beab6375a0f3/clippy_lints%2Fsrc%2Fexcessive_precision.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2677a4ef02ce309be49643ad7cd0beab6375a0f3/clippy_lints%2Fsrc%2Fexcessive_precision.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fexcessive_precision.rs?ref=2677a4ef02ce309be49643ad7cd0beab6375a0f3", "patch": "@@ -1,12 +1,11 @@\n use crate::utils::span_lint_and_sugg;\n use crate::utils::sugg::format_numeric_literal;\n use if_chain::if_chain;\n-use rustc::declare_lint_pass;\n-use rustc::lint::{LateContext, LateLintPass, LintArray, LintPass};\n+use rustc::lint::{LateContext, LateLintPass};\n use rustc::ty;\n use rustc_errors::Applicability;\n use rustc_hir as hir;\n-use rustc_session::declare_tool_lint;\n+use rustc_session::{declare_lint_pass, declare_tool_lint};\n use rustc_span::symbol::Symbol;\n use std::f32;\n use std::f64;"}, {"sha": "3d1eadd4c0072e9ca837c8b1214229ff504f1daf", "filename": "clippy_lints/src/exit.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/2677a4ef02ce309be49643ad7cd0beab6375a0f3/clippy_lints%2Fsrc%2Fexit.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2677a4ef02ce309be49643ad7cd0beab6375a0f3/clippy_lints%2Fsrc%2Fexit.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fexit.rs?ref=2677a4ef02ce309be49643ad7cd0beab6375a0f3", "patch": "@@ -1,9 +1,8 @@\n use crate::utils::{is_entrypoint_fn, match_def_path, paths, qpath_res, span_lint};\n use if_chain::if_chain;\n-use rustc::declare_lint_pass;\n-use rustc::lint::{LateContext, LateLintPass, LintArray, LintPass};\n+use rustc::lint::{LateContext, LateLintPass};\n use rustc_hir::{Expr, ExprKind, Item, ItemKind, Node};\n-use rustc_session::declare_tool_lint;\n+use rustc_session::{declare_lint_pass, declare_tool_lint};\n \n declare_clippy_lint! {\n     /// **What it does:** `exit()`  terminates the program and doesn't provide a"}, {"sha": "a96b23a87d85a16fa10857b30708fda6894e86e9", "filename": "clippy_lints/src/explicit_write.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/2677a4ef02ce309be49643ad7cd0beab6375a0f3/clippy_lints%2Fsrc%2Fexplicit_write.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2677a4ef02ce309be49643ad7cd0beab6375a0f3/clippy_lints%2Fsrc%2Fexplicit_write.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fexplicit_write.rs?ref=2677a4ef02ce309be49643ad7cd0beab6375a0f3", "patch": "@@ -1,10 +1,9 @@\n use crate::utils::{is_expn_of, match_function_call, paths, span_lint, span_lint_and_sugg};\n use if_chain::if_chain;\n-use rustc::declare_lint_pass;\n-use rustc::lint::{LateContext, LateLintPass, LintArray, LintPass};\n+use rustc::lint::{LateContext, LateLintPass};\n use rustc_errors::Applicability;\n use rustc_hir::*;\n-use rustc_session::declare_tool_lint;\n+use rustc_session::{declare_lint_pass, declare_tool_lint};\n use syntax::ast::LitKind;\n \n declare_clippy_lint! {"}, {"sha": "3da9ed5d443dd6f856d0e29276b421459eaa93d0", "filename": "clippy_lints/src/fallible_impl_from.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/2677a4ef02ce309be49643ad7cd0beab6375a0f3/clippy_lints%2Fsrc%2Ffallible_impl_from.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2677a4ef02ce309be49643ad7cd0beab6375a0f3/clippy_lints%2Fsrc%2Ffallible_impl_from.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Ffallible_impl_from.rs?ref=2677a4ef02ce309be49643ad7cd0beab6375a0f3", "patch": "@@ -1,12 +1,11 @@\n use crate::utils::paths::{BEGIN_PANIC, BEGIN_PANIC_FMT, FROM_TRAIT, OPTION, RESULT};\n use crate::utils::{is_expn_of, match_def_path, method_chain_args, span_lint_and_then, walk_ptrs_ty};\n use if_chain::if_chain;\n-use rustc::declare_lint_pass;\n use rustc::hir::map::Map;\n-use rustc::lint::{LateContext, LateLintPass, LintArray, LintPass};\n+use rustc::lint::{LateContext, LateLintPass};\n use rustc::ty::{self, Ty};\n use rustc_hir as hir;\n-use rustc_session::declare_tool_lint;\n+use rustc_session::{declare_lint_pass, declare_tool_lint};\n use rustc_span::Span;\n \n declare_clippy_lint! {"}, {"sha": "3082153fa998e5245fa59fa07d16c8308eaa5e39", "filename": "clippy_lints/src/format.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/2677a4ef02ce309be49643ad7cd0beab6375a0f3/clippy_lints%2Fsrc%2Fformat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2677a4ef02ce309be49643ad7cd0beab6375a0f3/clippy_lints%2Fsrc%2Fformat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fformat.rs?ref=2677a4ef02ce309be49643ad7cd0beab6375a0f3", "patch": "@@ -4,11 +4,10 @@ use crate::utils::{\n     walk_ptrs_ty,\n };\n use if_chain::if_chain;\n-use rustc::declare_lint_pass;\n-use rustc::lint::{LateContext, LateLintPass, LintArray, LintContext, LintPass};\n+use rustc::lint::{LateContext, LateLintPass, LintContext};\n use rustc_errors::Applicability;\n use rustc_hir::*;\n-use rustc_session::declare_tool_lint;\n+use rustc_session::{declare_lint_pass, declare_tool_lint};\n use rustc_span::source_map::Span;\n use syntax::ast::LitKind;\n "}, {"sha": "18d12fd30fbe60267fe16bd8ea66c1661bf0263e", "filename": "clippy_lints/src/formatting.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/2677a4ef02ce309be49643ad7cd0beab6375a0f3/clippy_lints%2Fsrc%2Fformatting.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2677a4ef02ce309be49643ad7cd0beab6375a0f3/clippy_lints%2Fsrc%2Fformatting.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fformatting.rs?ref=2677a4ef02ce309be49643ad7cd0beab6375a0f3", "patch": "@@ -1,8 +1,7 @@\n use crate::utils::{differing_macro_contexts, snippet_opt, span_help_and_lint, span_note_and_lint};\n use if_chain::if_chain;\n-use rustc::declare_lint_pass;\n-use rustc::lint::{in_external_macro, EarlyContext, EarlyLintPass, LintArray, LintPass};\n-use rustc_session::declare_tool_lint;\n+use rustc::lint::{in_external_macro, EarlyContext, EarlyLintPass};\n+use rustc_session::{declare_lint_pass, declare_tool_lint};\n use syntax::ast::*;\n \n declare_clippy_lint! {"}, {"sha": "77bd4a8644435ccddd48fd66d477bb39f358e971", "filename": "clippy_lints/src/functions.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/2677a4ef02ce309be49643ad7cd0beab6375a0f3/clippy_lints%2Fsrc%2Ffunctions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2677a4ef02ce309be49643ad7cd0beab6375a0f3/clippy_lints%2Fsrc%2Ffunctions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Ffunctions.rs?ref=2677a4ef02ce309be49643ad7cd0beab6375a0f3", "patch": "@@ -5,15 +5,14 @@ use crate::utils::{\n };\n use matches::matches;\n use rustc::hir::map::Map;\n-use rustc::impl_lint_pass;\n-use rustc::lint::{in_external_macro, LateContext, LateLintPass, LintArray, LintContext, LintPass};\n+use rustc::lint::{in_external_macro, LateContext, LateLintPass, LintContext};\n use rustc::ty::{self, Ty};\n use rustc_data_structures::fx::FxHashSet;\n use rustc_errors::Applicability;\n use rustc_hir as hir;\n use rustc_hir::intravisit;\n use rustc_hir::{def::Res, def_id::DefId};\n-use rustc_session::declare_tool_lint;\n+use rustc_session::{declare_tool_lint, impl_lint_pass};\n use rustc_span::source_map::Span;\n use rustc_target::spec::abi::Abi;\n use syntax::ast::Attribute;"}, {"sha": "50f9defbed3384e8b6e427c932b399c949f32f6f", "filename": "clippy_lints/src/get_last_with_len.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/2677a4ef02ce309be49643ad7cd0beab6375a0f3/clippy_lints%2Fsrc%2Fget_last_with_len.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2677a4ef02ce309be49643ad7cd0beab6375a0f3/clippy_lints%2Fsrc%2Fget_last_with_len.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fget_last_with_len.rs?ref=2677a4ef02ce309be49643ad7cd0beab6375a0f3", "patch": "@@ -2,11 +2,10 @@\n \n use crate::utils::{is_type_diagnostic_item, snippet_with_applicability, span_lint_and_sugg, SpanlessEq};\n use if_chain::if_chain;\n-use rustc::declare_lint_pass;\n-use rustc::lint::{LateContext, LateLintPass, LintArray, LintPass};\n+use rustc::lint::{LateContext, LateLintPass};\n use rustc_errors::Applicability;\n use rustc_hir::{BinOpKind, Expr, ExprKind};\n-use rustc_session::declare_tool_lint;\n+use rustc_session::{declare_lint_pass, declare_tool_lint};\n use rustc_span::source_map::Spanned;\n use rustc_span::symbol::Symbol;\n use syntax::ast::LitKind;"}, {"sha": "1720e86db871f560cfd7e8452606c32acee5f6c1", "filename": "clippy_lints/src/identity_conversion.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/2677a4ef02ce309be49643ad7cd0beab6375a0f3/clippy_lints%2Fsrc%2Fidentity_conversion.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2677a4ef02ce309be49643ad7cd0beab6375a0f3/clippy_lints%2Fsrc%2Fidentity_conversion.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fidentity_conversion.rs?ref=2677a4ef02ce309be49643ad7cd0beab6375a0f3", "patch": "@@ -1,11 +1,10 @@\n use crate::utils::{\n     match_def_path, match_trait_method, paths, same_tys, snippet, snippet_with_macro_callsite, span_lint_and_then,\n };\n-use rustc::impl_lint_pass;\n-use rustc::lint::{LateContext, LateLintPass, LintArray, LintPass};\n+use rustc::lint::{LateContext, LateLintPass};\n use rustc_errors::Applicability;\n use rustc_hir::*;\n-use rustc_session::declare_tool_lint;\n+use rustc_session::{declare_tool_lint, impl_lint_pass};\n \n declare_clippy_lint! {\n     /// **What it does:** Checks for always-identical `Into`/`From`/`IntoIter` conversions."}, {"sha": "303af53f6640d787eb8545cd1deacf3761b53615", "filename": "clippy_lints/src/identity_op.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/2677a4ef02ce309be49643ad7cd0beab6375a0f3/clippy_lints%2Fsrc%2Fidentity_op.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2677a4ef02ce309be49643ad7cd0beab6375a0f3/clippy_lints%2Fsrc%2Fidentity_op.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fidentity_op.rs?ref=2677a4ef02ce309be49643ad7cd0beab6375a0f3", "patch": "@@ -1,8 +1,7 @@\n-use rustc::declare_lint_pass;\n-use rustc::lint::{LateContext, LateLintPass, LintArray, LintPass};\n+use rustc::lint::{LateContext, LateLintPass};\n use rustc::ty;\n use rustc_hir::*;\n-use rustc_session::declare_tool_lint;\n+use rustc_session::{declare_lint_pass, declare_tool_lint};\n use rustc_span::source_map::Span;\n \n use crate::consts::{constant_simple, Constant};"}, {"sha": "add37f1c86cab4557895d77392327f81e71df802", "filename": "clippy_lints/src/if_not_else.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/2677a4ef02ce309be49643ad7cd0beab6375a0f3/clippy_lints%2Fsrc%2Fif_not_else.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2677a4ef02ce309be49643ad7cd0beab6375a0f3/clippy_lints%2Fsrc%2Fif_not_else.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fif_not_else.rs?ref=2677a4ef02ce309be49643ad7cd0beab6375a0f3", "patch": "@@ -1,9 +1,8 @@\n //! lint on if branches that could be swapped so no `!` operation is necessary\n //! on the condition\n \n-use rustc::declare_lint_pass;\n-use rustc::lint::{in_external_macro, EarlyContext, EarlyLintPass, LintArray, LintContext, LintPass};\n-use rustc_session::declare_tool_lint;\n+use rustc::lint::{in_external_macro, EarlyContext, EarlyLintPass, LintContext};\n+use rustc_session::{declare_lint_pass, declare_tool_lint};\n use syntax::ast::*;\n \n use crate::utils::span_help_and_lint;"}, {"sha": "4623b327e2628a59ed3acaeae18259dc80090c1b", "filename": "clippy_lints/src/implicit_return.rs", "status": "modified", "additions": 2, "deletions": 5, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/2677a4ef02ce309be49643ad7cd0beab6375a0f3/clippy_lints%2Fsrc%2Fimplicit_return.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2677a4ef02ce309be49643ad7cd0beab6375a0f3/clippy_lints%2Fsrc%2Fimplicit_return.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fimplicit_return.rs?ref=2677a4ef02ce309be49643ad7cd0beab6375a0f3", "patch": "@@ -4,14 +4,11 @@ use crate::utils::{\n     snippet_opt, span_lint_and_then,\n };\n use if_chain::if_chain;\n-use rustc::{\n-    declare_lint_pass,\n-    lint::{LateContext, LateLintPass, LintArray, LintPass},\n-};\n+use rustc::lint::{LateContext, LateLintPass};\n use rustc_errors::Applicability;\n use rustc_hir::intravisit::FnKind;\n use rustc_hir::{Body, Expr, ExprKind, FnDecl, HirId, MatchSource, StmtKind};\n-use rustc_session::declare_tool_lint;\n+use rustc_session::{declare_lint_pass, declare_tool_lint};\n use rustc_span::source_map::Span;\n \n declare_clippy_lint! {"}, {"sha": "f6be230cb914af6608bca340efbac97c6ec77f99", "filename": "clippy_lints/src/indexing_slicing.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/2677a4ef02ce309be49643ad7cd0beab6375a0f3/clippy_lints%2Fsrc%2Findexing_slicing.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2677a4ef02ce309be49643ad7cd0beab6375a0f3/clippy_lints%2Fsrc%2Findexing_slicing.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Findexing_slicing.rs?ref=2677a4ef02ce309be49643ad7cd0beab6375a0f3", "patch": "@@ -4,11 +4,10 @@ use crate::consts::{constant, Constant};\n use crate::utils;\n use crate::utils::higher;\n use crate::utils::higher::Range;\n-use rustc::declare_lint_pass;\n-use rustc::lint::{LateContext, LateLintPass, LintArray, LintPass};\n+use rustc::lint::{LateContext, LateLintPass};\n use rustc::ty;\n use rustc_hir::*;\n-use rustc_session::declare_tool_lint;\n+use rustc_session::{declare_lint_pass, declare_tool_lint};\n use syntax::ast::RangeLimits;\n \n declare_clippy_lint! {"}, {"sha": "93cbd88409fcc87cdcb08fb076c7d0c041e626d6", "filename": "clippy_lints/src/infallible_destructuring_match.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/2677a4ef02ce309be49643ad7cd0beab6375a0f3/clippy_lints%2Fsrc%2Finfallible_destructuring_match.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2677a4ef02ce309be49643ad7cd0beab6375a0f3/clippy_lints%2Fsrc%2Finfallible_destructuring_match.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Finfallible_destructuring_match.rs?ref=2677a4ef02ce309be49643ad7cd0beab6375a0f3", "patch": "@@ -1,10 +1,9 @@\n use super::utils::{get_arg_name, match_var, remove_blocks, snippet_with_applicability, span_lint_and_sugg};\n use if_chain::if_chain;\n-use rustc::declare_lint_pass;\n-use rustc::lint::{LateContext, LateLintPass, LintArray, LintPass};\n+use rustc::lint::{LateContext, LateLintPass};\n use rustc_errors::Applicability;\n use rustc_hir::*;\n-use rustc_session::declare_tool_lint;\n+use rustc_session::{declare_lint_pass, declare_tool_lint};\n \n declare_clippy_lint! {\n     /// **What it does:** Checks for matches being used to destructure a single-variant enum"}, {"sha": "037088e810eeed2776fd4aec759742b43a9de640", "filename": "clippy_lints/src/infinite_iter.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/2677a4ef02ce309be49643ad7cd0beab6375a0f3/clippy_lints%2Fsrc%2Finfinite_iter.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2677a4ef02ce309be49643ad7cd0beab6375a0f3/clippy_lints%2Fsrc%2Finfinite_iter.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Finfinite_iter.rs?ref=2677a4ef02ce309be49643ad7cd0beab6375a0f3", "patch": "@@ -1,7 +1,6 @@\n-use rustc::declare_lint_pass;\n-use rustc::lint::{LateContext, LateLintPass, LintArray, LintPass};\n+use rustc::lint::{LateContext, LateLintPass};\n use rustc_hir::*;\n-use rustc_session::declare_tool_lint;\n+use rustc_session::{declare_lint_pass, declare_tool_lint};\n \n use crate::utils::{get_trait_def_id, higher, implements_trait, match_qpath, match_type, paths, span_lint};\n "}, {"sha": "ed855484fe0772629c37dd2a2d0fa8e62272b1f0", "filename": "clippy_lints/src/inherent_impl.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/2677a4ef02ce309be49643ad7cd0beab6375a0f3/clippy_lints%2Fsrc%2Finherent_impl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2677a4ef02ce309be49643ad7cd0beab6375a0f3/clippy_lints%2Fsrc%2Finherent_impl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Finherent_impl.rs?ref=2677a4ef02ce309be49643ad7cd0beab6375a0f3", "patch": "@@ -1,11 +1,10 @@\n //! lint on inherent implementations\n \n use crate::utils::{in_macro, span_lint_and_then};\n-use rustc::impl_lint_pass;\n-use rustc::lint::{LateContext, LateLintPass, LintArray, LintPass};\n+use rustc::lint::{LateContext, LateLintPass};\n use rustc_data_structures::fx::FxHashMap;\n use rustc_hir::*;\n-use rustc_session::declare_tool_lint;\n+use rustc_session::{declare_tool_lint, impl_lint_pass};\n use rustc_span::Span;\n \n declare_clippy_lint! {"}, {"sha": "4bfadc34f61df2ebc81ac37201b004bfdd72c70d", "filename": "clippy_lints/src/inherent_to_string.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/2677a4ef02ce309be49643ad7cd0beab6375a0f3/clippy_lints%2Fsrc%2Finherent_to_string.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2677a4ef02ce309be49643ad7cd0beab6375a0f3/clippy_lints%2Fsrc%2Finherent_to_string.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Finherent_to_string.rs?ref=2677a4ef02ce309be49643ad7cd0beab6375a0f3", "patch": "@@ -1,8 +1,7 @@\n use if_chain::if_chain;\n-use rustc::declare_lint_pass;\n-use rustc::lint::{LateContext, LateLintPass, LintArray, LintPass};\n+use rustc::lint::{LateContext, LateLintPass};\n use rustc_hir::{ImplItem, ImplItemKind};\n-use rustc_session::declare_tool_lint;\n+use rustc_session::{declare_lint_pass, declare_tool_lint};\n \n use crate::utils::{\n     get_trait_def_id, implements_trait, match_type, paths, return_ty, span_help_and_lint, trait_ref_of_method,"}, {"sha": "54450886448f312f555e966e762258ab83c617e2", "filename": "clippy_lints/src/inline_fn_without_body.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/2677a4ef02ce309be49643ad7cd0beab6375a0f3/clippy_lints%2Fsrc%2Finline_fn_without_body.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2677a4ef02ce309be49643ad7cd0beab6375a0f3/clippy_lints%2Fsrc%2Finline_fn_without_body.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Finline_fn_without_body.rs?ref=2677a4ef02ce309be49643ad7cd0beab6375a0f3", "patch": "@@ -2,11 +2,10 @@\n \n use crate::utils::span_lint_and_then;\n use crate::utils::sugg::DiagnosticBuilderExt;\n-use rustc::declare_lint_pass;\n-use rustc::lint::{LateContext, LateLintPass, LintArray, LintPass};\n+use rustc::lint::{LateContext, LateLintPass};\n use rustc_errors::Applicability;\n use rustc_hir::*;\n-use rustc_session::declare_tool_lint;\n+use rustc_session::{declare_lint_pass, declare_tool_lint};\n use syntax::ast::{Attribute, Name};\n \n declare_clippy_lint! {"}, {"sha": "a906fccf5faae50831efc73641161f4ff56116cc", "filename": "clippy_lints/src/int_plus_one.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/2677a4ef02ce309be49643ad7cd0beab6375a0f3/clippy_lints%2Fsrc%2Fint_plus_one.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2677a4ef02ce309be49643ad7cd0beab6375a0f3/clippy_lints%2Fsrc%2Fint_plus_one.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fint_plus_one.rs?ref=2677a4ef02ce309be49643ad7cd0beab6375a0f3", "patch": "@@ -1,9 +1,8 @@\n //! lint on blocks unnecessarily using >= with a + 1 or - 1\n \n-use rustc::declare_lint_pass;\n-use rustc::lint::{EarlyContext, EarlyLintPass, LintArray, LintPass};\n+use rustc::lint::{EarlyContext, EarlyLintPass};\n use rustc_errors::Applicability;\n-use rustc_session::declare_tool_lint;\n+use rustc_session::{declare_lint_pass, declare_tool_lint};\n use syntax::ast::*;\n \n use crate::utils::{snippet_opt, span_lint_and_then};"}, {"sha": "1d3b6ae212402c59ea6970b1627ca351e846d5ae", "filename": "clippy_lints/src/integer_division.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/2677a4ef02ce309be49643ad7cd0beab6375a0f3/clippy_lints%2Fsrc%2Finteger_division.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2677a4ef02ce309be49643ad7cd0beab6375a0f3/clippy_lints%2Fsrc%2Finteger_division.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Finteger_division.rs?ref=2677a4ef02ce309be49643ad7cd0beab6375a0f3", "patch": "@@ -1,9 +1,8 @@\n use crate::utils::span_help_and_lint;\n use if_chain::if_chain;\n-use rustc::declare_lint_pass;\n-use rustc::lint::{LateContext, LateLintPass, LintArray, LintPass};\n+use rustc::lint::{LateContext, LateLintPass};\n use rustc_hir as hir;\n-use rustc_session::declare_tool_lint;\n+use rustc_session::{declare_lint_pass, declare_tool_lint};\n \n declare_clippy_lint! {\n     /// **What it does:** Checks for division of integers"}, {"sha": "cc13498ad238acaf5c144f7d766b42b7cb7a6fe7", "filename": "clippy_lints/src/items_after_statements.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/2677a4ef02ce309be49643ad7cd0beab6375a0f3/clippy_lints%2Fsrc%2Fitems_after_statements.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2677a4ef02ce309be49643ad7cd0beab6375a0f3/clippy_lints%2Fsrc%2Fitems_after_statements.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fitems_after_statements.rs?ref=2677a4ef02ce309be49643ad7cd0beab6375a0f3", "patch": "@@ -2,9 +2,8 @@\n \n use crate::utils::span_lint;\n use matches::matches;\n-use rustc::declare_lint_pass;\n-use rustc::lint::{EarlyContext, EarlyLintPass, LintArray, LintPass};\n-use rustc_session::declare_tool_lint;\n+use rustc::lint::{EarlyContext, EarlyLintPass};\n+use rustc_session::{declare_lint_pass, declare_tool_lint};\n use syntax::ast::*;\n \n declare_clippy_lint! {"}, {"sha": "148446c4196f7b839910367e34a9768e1d44b1b3", "filename": "clippy_lints/src/large_enum_variant.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/2677a4ef02ce309be49643ad7cd0beab6375a0f3/clippy_lints%2Fsrc%2Flarge_enum_variant.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2677a4ef02ce309be49643ad7cd0beab6375a0f3/clippy_lints%2Fsrc%2Flarge_enum_variant.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flarge_enum_variant.rs?ref=2677a4ef02ce309be49643ad7cd0beab6375a0f3", "patch": "@@ -1,12 +1,11 @@\n //! lint when there is a large size difference between variants on an enum\n \n use crate::utils::{snippet_opt, span_lint_and_then};\n-use rustc::impl_lint_pass;\n-use rustc::lint::{LateContext, LateLintPass, LintArray, LintPass};\n+use rustc::lint::{LateContext, LateLintPass};\n use rustc::ty::layout::LayoutOf;\n use rustc_errors::Applicability;\n use rustc_hir::*;\n-use rustc_session::declare_tool_lint;\n+use rustc_session::{declare_tool_lint, impl_lint_pass};\n \n declare_clippy_lint! {\n     /// **What it does:** Checks for large size differences between variants on"}, {"sha": "28810696cc180f992e59fa69077f6a7ca229b016", "filename": "clippy_lints/src/large_stack_arrays.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/2677a4ef02ce309be49643ad7cd0beab6375a0f3/clippy_lints%2Fsrc%2Flarge_stack_arrays.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2677a4ef02ce309be49643ad7cd0beab6375a0f3/clippy_lints%2Fsrc%2Flarge_stack_arrays.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flarge_stack_arrays.rs?ref=2677a4ef02ce309be49643ad7cd0beab6375a0f3", "patch": "@@ -1,9 +1,8 @@\n-use rustc::impl_lint_pass;\n-use rustc::lint::{LateContext, LateLintPass, LintArray, LintPass};\n+use rustc::lint::{LateContext, LateLintPass};\n use rustc::mir::interpret::ConstValue;\n use rustc::ty::{self, ConstKind};\n use rustc_hir::*;\n-use rustc_session::declare_tool_lint;\n+use rustc_session::{declare_tool_lint, impl_lint_pass};\n \n use if_chain::if_chain;\n "}, {"sha": "d2afd51fba84bcafea6d1c187995ab55af899203", "filename": "clippy_lints/src/len_zero.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/2677a4ef02ce309be49643ad7cd0beab6375a0f3/clippy_lints%2Fsrc%2Flen_zero.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2677a4ef02ce309be49643ad7cd0beab6375a0f3/clippy_lints%2Fsrc%2Flen_zero.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flen_zero.rs?ref=2677a4ef02ce309be49643ad7cd0beab6375a0f3", "patch": "@@ -1,12 +1,11 @@\n use crate::utils::{get_item_name, snippet_with_applicability, span_lint, span_lint_and_sugg, walk_ptrs_ty};\n-use rustc::declare_lint_pass;\n-use rustc::lint::{LateContext, LateLintPass, LintArray, LintPass};\n+use rustc::lint::{LateContext, LateLintPass};\n use rustc::ty;\n use rustc_data_structures::fx::FxHashSet;\n use rustc_errors::Applicability;\n use rustc_hir::def_id::DefId;\n use rustc_hir::*;\n-use rustc_session::declare_tool_lint;\n+use rustc_session::{declare_lint_pass, declare_tool_lint};\n use rustc_span::source_map::{Span, Spanned};\n use syntax::ast::{LitKind, Name};\n "}, {"sha": "27d14bbd67f28d788fd5a21f2e95f91e2d9accb2", "filename": "clippy_lints/src/let_if_seq.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/2677a4ef02ce309be49643ad7cd0beab6375a0f3/clippy_lints%2Fsrc%2Flet_if_seq.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2677a4ef02ce309be49643ad7cd0beab6375a0f3/clippy_lints%2Fsrc%2Flet_if_seq.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flet_if_seq.rs?ref=2677a4ef02ce309be49643ad7cd0beab6375a0f3", "patch": "@@ -1,14 +1,13 @@\n use crate::utils::{higher, qpath_res, snippet, span_lint_and_then};\n use if_chain::if_chain;\n-use rustc::declare_lint_pass;\n use rustc::hir::map::Map;\n-use rustc::lint::{LateContext, LateLintPass, LintArray, LintPass};\n+use rustc::lint::{LateContext, LateLintPass};\n use rustc_errors::Applicability;\n use rustc_hir as hir;\n use rustc_hir::def::Res;\n use rustc_hir::intravisit;\n use rustc_hir::BindingAnnotation;\n-use rustc_session::declare_tool_lint;\n+use rustc_session::{declare_lint_pass, declare_tool_lint};\n \n declare_clippy_lint! {\n     /// **What it does:** Checks for variable declarations immediately followed by a"}, {"sha": "62efcb6b65c599c4488adb9536801b4745aefeb1", "filename": "clippy_lints/src/let_underscore.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/2677a4ef02ce309be49643ad7cd0beab6375a0f3/clippy_lints%2Fsrc%2Flet_underscore.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2677a4ef02ce309be49643ad7cd0beab6375a0f3/clippy_lints%2Fsrc%2Flet_underscore.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flet_underscore.rs?ref=2677a4ef02ce309be49643ad7cd0beab6375a0f3", "patch": "@@ -1,8 +1,7 @@\n use if_chain::if_chain;\n-use rustc::declare_lint_pass;\n-use rustc::lint::{LateContext, LateLintPass, LintArray, LintPass};\n+use rustc::lint::{LateContext, LateLintPass};\n use rustc_hir::*;\n-use rustc_session::declare_tool_lint;\n+use rustc_session::{declare_lint_pass, declare_tool_lint};\n \n use crate::utils::{is_must_use_func_call, is_must_use_ty, span_help_and_lint};\n "}, {"sha": "2cc44a758ea5a399435a7b68f6cb6bd5d9385c86", "filename": "clippy_lints/src/lifetimes.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/2677a4ef02ce309be49643ad7cd0beab6375a0f3/clippy_lints%2Fsrc%2Flifetimes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2677a4ef02ce309be49643ad7cd0beab6375a0f3/clippy_lints%2Fsrc%2Flifetimes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flifetimes.rs?ref=2677a4ef02ce309be49643ad7cd0beab6375a0f3", "patch": "@@ -1,13 +1,12 @@\n use matches::matches;\n-use rustc::declare_lint_pass;\n use rustc::hir::map::Map;\n-use rustc::lint::{in_external_macro, LateContext, LateLintPass, LintArray, LintContext, LintPass};\n+use rustc::lint::{in_external_macro, LateContext, LateLintPass, LintContext};\n use rustc_data_structures::fx::{FxHashMap, FxHashSet};\n use rustc_hir::def::{DefKind, Res};\n use rustc_hir::intravisit::*;\n use rustc_hir::FunctionRetTy::Return;\n use rustc_hir::*;\n-use rustc_session::declare_tool_lint;\n+use rustc_session::{declare_lint_pass, declare_tool_lint};\n use rustc_span::source_map::Span;\n use rustc_span::symbol::kw;\n "}, {"sha": "edc287d24d8f4e94e3dfd46610ea6f608d415604", "filename": "clippy_lints/src/literal_representation.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/2677a4ef02ce309be49643ad7cd0beab6375a0f3/clippy_lints%2Fsrc%2Fliteral_representation.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2677a4ef02ce309be49643ad7cd0beab6375a0f3/clippy_lints%2Fsrc%2Fliteral_representation.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fliteral_representation.rs?ref=2677a4ef02ce309be49643ad7cd0beab6375a0f3", "patch": "@@ -3,10 +3,9 @@\n \n use crate::utils::{in_macro, snippet_opt, span_lint_and_sugg};\n use if_chain::if_chain;\n-use rustc::lint::{in_external_macro, EarlyContext, EarlyLintPass, LintArray, LintContext, LintPass};\n-use rustc::{declare_lint_pass, impl_lint_pass};\n+use rustc::lint::{in_external_macro, EarlyContext, EarlyLintPass, LintContext};\n use rustc_errors::Applicability;\n-use rustc_session::declare_tool_lint;\n+use rustc_session::{declare_lint_pass, declare_tool_lint, impl_lint_pass};\n use syntax::ast::*;\n \n declare_clippy_lint! {"}, {"sha": "8d7be8bca468f58e83bed636d2bb8aa62aed3ec1", "filename": "clippy_lints/src/loops.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/2677a4ef02ce309be49643ad7cd0beab6375a0f3/clippy_lints%2Fsrc%2Floops.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2677a4ef02ce309be49643ad7cd0beab6375a0f3/clippy_lints%2Fsrc%2Floops.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Floops.rs?ref=2677a4ef02ce309be49643ad7cd0beab6375a0f3", "patch": "@@ -1,14 +1,13 @@\n use crate::reexport::*;\n use if_chain::if_chain;\n use itertools::Itertools;\n-use rustc::declare_lint_pass;\n-use rustc::lint::{in_external_macro, LateContext, LateLintPass, LintArray, LintContext, LintPass};\n+use rustc::lint::{in_external_macro, LateContext, LateLintPass, LintContext};\n use rustc::middle::region;\n use rustc_hir::def::{DefKind, Res};\n use rustc_hir::def_id;\n use rustc_hir::intravisit::{walk_block, walk_expr, walk_pat, walk_stmt, NestedVisitorMap, Visitor};\n use rustc_hir::*;\n-use rustc_session::declare_tool_lint;\n+use rustc_session::{declare_lint_pass, declare_tool_lint};\n // use rustc::middle::region::CodeExtent;\n use crate::consts::{constant, Constant};\n use crate::utils::usage::mutated_variables;"}, {"sha": "0513eb8ac9e50233b71ef9c47a57b92f84a23c4c", "filename": "clippy_lints/src/main_recursion.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/2677a4ef02ce309be49643ad7cd0beab6375a0f3/clippy_lints%2Fsrc%2Fmain_recursion.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2677a4ef02ce309be49643ad7cd0beab6375a0f3/clippy_lints%2Fsrc%2Fmain_recursion.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmain_recursion.rs?ref=2677a4ef02ce309be49643ad7cd0beab6375a0f3", "patch": "@@ -1,7 +1,6 @@\n-use rustc::impl_lint_pass;\n-use rustc::lint::{LateContext, LateLintPass, LintArray, LintPass};\n+use rustc::lint::{LateContext, LateLintPass};\n use rustc_hir::{Crate, Expr, ExprKind, QPath};\n-use rustc_session::declare_tool_lint;\n+use rustc_session::{declare_tool_lint, impl_lint_pass};\n use rustc_span::symbol::sym;\n use syntax::ast::AttrKind;\n "}, {"sha": "99d7c849f84327f50aaea8c0168b98c9405a2c8f", "filename": "clippy_lints/src/map_clone.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/2677a4ef02ce309be49643ad7cd0beab6375a0f3/clippy_lints%2Fsrc%2Fmap_clone.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2677a4ef02ce309be49643ad7cd0beab6375a0f3/clippy_lints%2Fsrc%2Fmap_clone.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmap_clone.rs?ref=2677a4ef02ce309be49643ad7cd0beab6375a0f3", "patch": "@@ -3,12 +3,11 @@ use crate::utils::{\n     is_copy, match_trait_method, match_type, remove_blocks, snippet_with_applicability, span_lint_and_sugg,\n };\n use if_chain::if_chain;\n-use rustc::declare_lint_pass;\n-use rustc::lint::{LateContext, LateLintPass, LintArray, LintPass};\n+use rustc::lint::{LateContext, LateLintPass};\n use rustc::ty;\n use rustc_errors::Applicability;\n use rustc_hir as hir;\n-use rustc_session::declare_tool_lint;\n+use rustc_session::{declare_lint_pass, declare_tool_lint};\n use rustc_span::source_map::Span;\n use syntax::ast::Ident;\n "}, {"sha": "5a7950927bb4b55296b51afec48c41cc500de60b", "filename": "clippy_lints/src/map_unit_fn.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/2677a4ef02ce309be49643ad7cd0beab6375a0f3/clippy_lints%2Fsrc%2Fmap_unit_fn.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2677a4ef02ce309be49643ad7cd0beab6375a0f3/clippy_lints%2Fsrc%2Fmap_unit_fn.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmap_unit_fn.rs?ref=2677a4ef02ce309be49643ad7cd0beab6375a0f3", "patch": "@@ -1,12 +1,11 @@\n use crate::utils::paths;\n use crate::utils::{iter_input_pats, match_type, method_chain_args, snippet, span_lint_and_then};\n use if_chain::if_chain;\n-use rustc::declare_lint_pass;\n-use rustc::lint::{LateContext, LateLintPass, LintArray, LintPass};\n+use rustc::lint::{LateContext, LateLintPass};\n use rustc::ty::{self, Ty};\n use rustc_errors::Applicability;\n use rustc_hir as hir;\n-use rustc_session::declare_tool_lint;\n+use rustc_session::{declare_lint_pass, declare_tool_lint};\n use rustc_span::source_map::Span;\n \n declare_clippy_lint! {"}, {"sha": "6e89cba1627ec075f3f555e0c597588986498e35", "filename": "clippy_lints/src/matches.rs", "status": "modified", "additions": 19, "deletions": 10, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/2677a4ef02ce309be49643ad7cd0beab6375a0f3/clippy_lints%2Fsrc%2Fmatches.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2677a4ef02ce309be49643ad7cd0beab6375a0f3/clippy_lints%2Fsrc%2Fmatches.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmatches.rs?ref=2677a4ef02ce309be49643ad7cd0beab6375a0f3", "patch": "@@ -1,4 +1,4 @@\n-use crate::consts::{constant, Constant};\n+use crate::consts::{constant, miri_to_const, Constant};\n use crate::utils::paths;\n use crate::utils::sugg::Sugg;\n use crate::utils::{\n@@ -7,13 +7,12 @@ use crate::utils::{\n     walk_ptrs_ty,\n };\n use if_chain::if_chain;\n-use rustc::declare_lint_pass;\n-use rustc::lint::{in_external_macro, LateContext, LateLintPass, LintArray, LintContext, LintPass};\n+use rustc::lint::{in_external_macro, LateContext, LateLintPass, LintContext};\n use rustc::ty::{self, Ty};\n use rustc_errors::Applicability;\n use rustc_hir::def::CtorKind;\n use rustc_hir::*;\n-use rustc_session::declare_tool_lint;\n+use rustc_session::{declare_lint_pass, declare_tool_lint};\n use rustc_span::source_map::Span;\n use std::cmp::Ordering;\n use std::collections::Bound;\n@@ -444,7 +443,7 @@ fn check_match_bool(cx: &LateContext<'_, '_>, ex: &Expr<'_>, arms: &[Arm<'_>], e\n \n fn check_overlapping_arms<'a, 'tcx>(cx: &LateContext<'a, 'tcx>, ex: &'tcx Expr<'_>, arms: &'tcx [Arm<'_>]) {\n     if arms.len() >= 2 && cx.tables.expr_ty(ex).is_integral() {\n-        let ranges = all_ranges(cx, arms);\n+        let ranges = all_ranges(cx, arms, cx.tables.expr_ty(ex));\n         let type_ranges = type_ranges(&ranges);\n         if !type_ranges.is_empty() {\n             if let Some((start, end)) = overlapping(&type_ranges) {\n@@ -705,17 +704,27 @@ fn check_wild_in_or_pats(cx: &LateContext<'_, '_>, arms: &[Arm<'_>]) {\n }\n \n /// Gets all arms that are unbounded `PatRange`s.\n-fn all_ranges<'a, 'tcx>(cx: &LateContext<'a, 'tcx>, arms: &'tcx [Arm<'_>]) -> Vec<SpannedRange<Constant>> {\n+fn all_ranges<'a, 'tcx>(\n+    cx: &LateContext<'a, 'tcx>,\n+    arms: &'tcx [Arm<'_>],\n+    ty: Ty<'tcx>,\n+) -> Vec<SpannedRange<Constant>> {\n     arms.iter()\n         .flat_map(|arm| {\n             if let Arm {\n                 ref pat, guard: None, ..\n             } = *arm\n             {\n-                if let PatKind::Range(ref lhs, ref rhs, ref range_end) = pat.kind {\n-                    let lhs = constant(cx, cx.tables, lhs)?.0;\n-                    let rhs = constant(cx, cx.tables, rhs)?.0;\n-                    let rhs = match *range_end {\n+                if let PatKind::Range(ref lhs, ref rhs, range_end) = pat.kind {\n+                    let lhs = match lhs {\n+                        Some(lhs) => constant(cx, cx.tables, lhs)?.0,\n+                        None => miri_to_const(ty.numeric_min_val(cx.tcx)?)?,\n+                    };\n+                    let rhs = match rhs {\n+                        Some(rhs) => constant(cx, cx.tables, rhs)?.0,\n+                        None => miri_to_const(ty.numeric_max_val(cx.tcx)?)?,\n+                    };\n+                    let rhs = match range_end {\n                         RangeEnd::Included => Bound::Included(rhs),\n                         RangeEnd::Excluded => Bound::Excluded(rhs),\n                     };"}, {"sha": "ba231368b7682d54b631fd486f9899d5bf5a3fbb", "filename": "clippy_lints/src/mem_discriminant.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/2677a4ef02ce309be49643ad7cd0beab6375a0f3/clippy_lints%2Fsrc%2Fmem_discriminant.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2677a4ef02ce309be49643ad7cd0beab6375a0f3/clippy_lints%2Fsrc%2Fmem_discriminant.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmem_discriminant.rs?ref=2677a4ef02ce309be49643ad7cd0beab6375a0f3", "patch": "@@ -1,10 +1,9 @@\n use crate::utils::{match_def_path, paths, snippet, span_lint_and_then, walk_ptrs_ty_depth};\n use if_chain::if_chain;\n-use rustc::declare_lint_pass;\n-use rustc::lint::{LateContext, LateLintPass, LintArray, LintPass};\n+use rustc::lint::{LateContext, LateLintPass};\n use rustc_errors::Applicability;\n use rustc_hir::{BorrowKind, Expr, ExprKind};\n-use rustc_session::declare_tool_lint;\n+use rustc_session::{declare_lint_pass, declare_tool_lint};\n \n use std::iter;\n "}, {"sha": "32c784f7935cc39b82a3fb68368f046dca8fc57c", "filename": "clippy_lints/src/mem_forget.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/2677a4ef02ce309be49643ad7cd0beab6375a0f3/clippy_lints%2Fsrc%2Fmem_forget.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2677a4ef02ce309be49643ad7cd0beab6375a0f3/clippy_lints%2Fsrc%2Fmem_forget.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmem_forget.rs?ref=2677a4ef02ce309be49643ad7cd0beab6375a0f3", "patch": "@@ -1,8 +1,7 @@\n use crate::utils::{match_def_path, paths, qpath_res, span_lint};\n-use rustc::declare_lint_pass;\n-use rustc::lint::{LateContext, LateLintPass, LintArray, LintPass};\n+use rustc::lint::{LateContext, LateLintPass};\n use rustc_hir::{Expr, ExprKind};\n-use rustc_session::declare_tool_lint;\n+use rustc_session::{declare_lint_pass, declare_tool_lint};\n \n declare_clippy_lint! {\n     /// **What it does:** Checks for usage of `std::mem::forget(t)` where `t` is"}, {"sha": "d994a2eab65f86bab774458c611e0b6a0ad5e9cc", "filename": "clippy_lints/src/mem_replace.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/2677a4ef02ce309be49643ad7cd0beab6375a0f3/clippy_lints%2Fsrc%2Fmem_replace.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2677a4ef02ce309be49643ad7cd0beab6375a0f3/clippy_lints%2Fsrc%2Fmem_replace.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmem_replace.rs?ref=2677a4ef02ce309be49643ad7cd0beab6375a0f3", "patch": "@@ -3,11 +3,10 @@ use crate::utils::{\n     span_lint_and_sugg, span_lint_and_then,\n };\n use if_chain::if_chain;\n-use rustc::declare_lint_pass;\n-use rustc::lint::{in_external_macro, LateContext, LateLintPass, LintArray, LintPass};\n+use rustc::lint::{in_external_macro, LateContext, LateLintPass};\n use rustc_errors::Applicability;\n use rustc_hir::{BorrowKind, Expr, ExprKind, Mutability, QPath};\n-use rustc_session::declare_tool_lint;\n+use rustc_session::{declare_lint_pass, declare_tool_lint};\n use rustc_span::source_map::Span;\n \n declare_clippy_lint! {"}, {"sha": "073177b0f3d50bc16522302bc040aa8b7ce1fd35", "filename": "clippy_lints/src/methods/mod.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/2677a4ef02ce309be49643ad7cd0beab6375a0f3/clippy_lints%2Fsrc%2Fmethods%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2677a4ef02ce309be49643ad7cd0beab6375a0f3/clippy_lints%2Fsrc%2Fmethods%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmethods%2Fmod.rs?ref=2677a4ef02ce309be49643ad7cd0beab6375a0f3", "patch": "@@ -9,14 +9,13 @@ use std::iter;\n \n use if_chain::if_chain;\n use matches::matches;\n-use rustc::declare_lint_pass;\n use rustc::hir::map::Map;\n-use rustc::lint::{in_external_macro, LateContext, LateLintPass, Lint, LintArray, LintContext, LintPass};\n+use rustc::lint::{in_external_macro, LateContext, LateLintPass, Lint, LintContext};\n use rustc::ty::{self, Predicate, Ty};\n use rustc_errors::Applicability;\n use rustc_hir as hir;\n use rustc_hir::intravisit::{self, Visitor};\n-use rustc_session::declare_tool_lint;\n+use rustc_session::{declare_lint_pass, declare_tool_lint};\n use rustc_span::source_map::Span;\n use rustc_span::symbol::{sym, Symbol, SymbolStr};\n use syntax::ast;"}, {"sha": "956ffd61a26a135bd74bf9fff92b88a34cb6c707", "filename": "clippy_lints/src/minmax.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/2677a4ef02ce309be49643ad7cd0beab6375a0f3/clippy_lints%2Fsrc%2Fminmax.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2677a4ef02ce309be49643ad7cd0beab6375a0f3/clippy_lints%2Fsrc%2Fminmax.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fminmax.rs?ref=2677a4ef02ce309be49643ad7cd0beab6375a0f3", "patch": "@@ -1,9 +1,8 @@\n use crate::consts::{constant_simple, Constant};\n use crate::utils::{match_def_path, paths, span_lint};\n-use rustc::declare_lint_pass;\n-use rustc::lint::{LateContext, LateLintPass, LintArray, LintPass};\n+use rustc::lint::{LateContext, LateLintPass};\n use rustc_hir::*;\n-use rustc_session::declare_tool_lint;\n+use rustc_session::{declare_lint_pass, declare_tool_lint};\n use std::cmp::Ordering;\n \n declare_clippy_lint! {"}, {"sha": "9085c928a20ec9e29165575acd1c51ffba29e31f", "filename": "clippy_lints/src/misc.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/2677a4ef02ce309be49643ad7cd0beab6375a0f3/clippy_lints%2Fsrc%2Fmisc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2677a4ef02ce309be49643ad7cd0beab6375a0f3/clippy_lints%2Fsrc%2Fmisc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmisc.rs?ref=2677a4ef02ce309be49643ad7cd0beab6375a0f3", "patch": "@@ -1,12 +1,11 @@\n use if_chain::if_chain;\n use matches::matches;\n-use rustc::declare_lint_pass;\n-use rustc::lint::{LateContext, LateLintPass, LintArray, LintPass};\n+use rustc::lint::{LateContext, LateLintPass};\n use rustc::ty;\n use rustc_errors::Applicability;\n use rustc_hir::intravisit::FnKind;\n use rustc_hir::*;\n-use rustc_session::declare_tool_lint;\n+use rustc_session::{declare_lint_pass, declare_tool_lint};\n use rustc_span::source_map::{ExpnKind, Span};\n use syntax::ast::LitKind;\n "}, {"sha": "d58083486c95eee63c6581335284da33bf4a07de", "filename": "clippy_lints/src/misc_early.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/2677a4ef02ce309be49643ad7cd0beab6375a0f3/clippy_lints%2Fsrc%2Fmisc_early.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2677a4ef02ce309be49643ad7cd0beab6375a0f3/clippy_lints%2Fsrc%2Fmisc_early.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmisc_early.rs?ref=2677a4ef02ce309be49643ad7cd0beab6375a0f3", "patch": "@@ -3,11 +3,10 @@ use crate::utils::{\n     span_lint_and_then,\n };\n use if_chain::if_chain;\n-use rustc::declare_lint_pass;\n-use rustc::lint::{in_external_macro, EarlyContext, EarlyLintPass, LintArray, LintContext, LintPass};\n+use rustc::lint::{in_external_macro, EarlyContext, EarlyLintPass, LintContext};\n use rustc_data_structures::fx::FxHashMap;\n use rustc_errors::Applicability;\n-use rustc_session::declare_tool_lint;\n+use rustc_session::{declare_lint_pass, declare_tool_lint};\n use rustc_span::source_map::Span;\n use syntax::ast::*;\n use syntax::visit::{walk_expr, FnKind, Visitor};"}, {"sha": "e2fc41f41f3bc48e05e1d6d7b53a57cd0430cad6", "filename": "clippy_lints/src/missing_const_for_fn.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/2677a4ef02ce309be49643ad7cd0beab6375a0f3/clippy_lints%2Fsrc%2Fmissing_const_for_fn.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2677a4ef02ce309be49643ad7cd0beab6375a0f3/clippy_lints%2Fsrc%2Fmissing_const_for_fn.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmissing_const_for_fn.rs?ref=2677a4ef02ce309be49643ad7cd0beab6375a0f3", "patch": "@@ -1,11 +1,10 @@\n use crate::utils::{has_drop, is_entrypoint_fn, span_lint, trait_ref_of_method};\n-use rustc::declare_lint_pass;\n-use rustc::lint::{in_external_macro, LateContext, LateLintPass, LintArray, LintPass};\n+use rustc::lint::{in_external_macro, LateContext, LateLintPass};\n use rustc_hir as hir;\n use rustc_hir::intravisit::FnKind;\n use rustc_hir::{Body, Constness, FnDecl, HirId};\n use rustc_mir::transform::qualify_min_const_fn::is_min_const_fn;\n-use rustc_session::declare_tool_lint;\n+use rustc_session::{declare_lint_pass, declare_tool_lint};\n use rustc_span::Span;\n use rustc_typeck::hir_ty_to_ty;\n "}, {"sha": "eb3f17ca1bf2bb9043a2475e71336e46eeef17e1", "filename": "clippy_lints/src/missing_doc.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/2677a4ef02ce309be49643ad7cd0beab6375a0f3/clippy_lints%2Fsrc%2Fmissing_doc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2677a4ef02ce309be49643ad7cd0beab6375a0f3/clippy_lints%2Fsrc%2Fmissing_doc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmissing_doc.rs?ref=2677a4ef02ce309be49643ad7cd0beab6375a0f3", "patch": "@@ -7,11 +7,10 @@\n \n use crate::utils::span_lint;\n use if_chain::if_chain;\n-use rustc::impl_lint_pass;\n-use rustc::lint::{LateContext, LateLintPass, LintArray, LintContext, LintPass};\n+use rustc::lint::{LateContext, LateLintPass, LintContext};\n use rustc::ty;\n use rustc_hir as hir;\n-use rustc_session::declare_tool_lint;\n+use rustc_session::{declare_tool_lint, impl_lint_pass};\n use rustc_span::source_map::Span;\n use syntax::ast::{self, MetaItem, MetaItemKind};\n use syntax::attr;"}, {"sha": "2c209398ff960e5f34eb4cf9603766a06ee6eede", "filename": "clippy_lints/src/missing_inline.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/2677a4ef02ce309be49643ad7cd0beab6375a0f3/clippy_lints%2Fsrc%2Fmissing_inline.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2677a4ef02ce309be49643ad7cd0beab6375a0f3/clippy_lints%2Fsrc%2Fmissing_inline.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmissing_inline.rs?ref=2677a4ef02ce309be49643ad7cd0beab6375a0f3", "patch": "@@ -1,8 +1,7 @@\n use crate::utils::span_lint;\n-use rustc::declare_lint_pass;\n-use rustc::lint::{self, LateContext, LateLintPass, LintArray, LintContext, LintPass};\n+use rustc::lint::{self, LateContext, LateLintPass, LintContext};\n use rustc_hir as hir;\n-use rustc_session::declare_tool_lint;\n+use rustc_session::{declare_lint_pass, declare_tool_lint};\n use rustc_span::source_map::Span;\n use syntax::ast;\n "}, {"sha": "6555db36e8381cab07220e26e9c75411283da26d", "filename": "clippy_lints/src/modulo_arithmetic.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/2677a4ef02ce309be49643ad7cd0beab6375a0f3/clippy_lints%2Fsrc%2Fmodulo_arithmetic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2677a4ef02ce309be49643ad7cd0beab6375a0f3/clippy_lints%2Fsrc%2Fmodulo_arithmetic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmodulo_arithmetic.rs?ref=2677a4ef02ce309be49643ad7cd0beab6375a0f3", "patch": "@@ -1,11 +1,10 @@\n use crate::consts::{constant, Constant};\n use crate::utils::{sext, span_lint_and_then};\n use if_chain::if_chain;\n-use rustc::declare_lint_pass;\n-use rustc::lint::{LateContext, LateLintPass, LintArray, LintPass};\n+use rustc::lint::{LateContext, LateLintPass};\n use rustc::ty::{self};\n use rustc_hir::*;\n-use rustc_session::declare_tool_lint;\n+use rustc_session::{declare_lint_pass, declare_tool_lint};\n use std::fmt::Display;\n \n declare_clippy_lint! {"}, {"sha": "eb307bc4ca305aea0fb63129d74e93b5fb990a60", "filename": "clippy_lints/src/mul_add.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/2677a4ef02ce309be49643ad7cd0beab6375a0f3/clippy_lints%2Fsrc%2Fmul_add.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2677a4ef02ce309be49643ad7cd0beab6375a0f3/clippy_lints%2Fsrc%2Fmul_add.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmul_add.rs?ref=2677a4ef02ce309be49643ad7cd0beab6375a0f3", "patch": "@@ -1,8 +1,7 @@\n-use rustc::declare_lint_pass;\n-use rustc::lint::{LateContext, LateLintPass, LintArray, LintPass};\n+use rustc::lint::{LateContext, LateLintPass};\n use rustc_errors::Applicability;\n use rustc_hir::*;\n-use rustc_session::declare_tool_lint;\n+use rustc_session::{declare_lint_pass, declare_tool_lint};\n \n use crate::utils::*;\n "}, {"sha": "c3a1e58b72d1228c583c981928938b1057b3b380", "filename": "clippy_lints/src/multiple_crate_versions.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/2677a4ef02ce309be49643ad7cd0beab6375a0f3/clippy_lints%2Fsrc%2Fmultiple_crate_versions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2677a4ef02ce309be49643ad7cd0beab6375a0f3/clippy_lints%2Fsrc%2Fmultiple_crate_versions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmultiple_crate_versions.rs?ref=2677a4ef02ce309be49643ad7cd0beab6375a0f3", "patch": "@@ -1,9 +1,8 @@\n //! lint on multiple versions of a crate being used\n \n use crate::utils::span_lint;\n-use rustc::declare_lint_pass;\n-use rustc::lint::{EarlyContext, EarlyLintPass, LintArray, LintPass};\n-use rustc_session::declare_tool_lint;\n+use rustc::lint::{EarlyContext, EarlyLintPass};\n+use rustc_session::{declare_lint_pass, declare_tool_lint};\n use rustc_span::source_map::DUMMY_SP;\n use syntax::ast::*;\n "}, {"sha": "6df93e063b4409ca52606284a9e4bdbfa534f270", "filename": "clippy_lints/src/mut_key.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/2677a4ef02ce309be49643ad7cd0beab6375a0f3/clippy_lints%2Fsrc%2Fmut_key.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2677a4ef02ce309be49643ad7cd0beab6375a0f3/clippy_lints%2Fsrc%2Fmut_key.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmut_key.rs?ref=2677a4ef02ce309be49643ad7cd0beab6375a0f3", "patch": "@@ -1,9 +1,8 @@\n use crate::utils::{match_def_path, paths, span_lint, trait_ref_of_method, walk_ptrs_ty};\n-use rustc::declare_lint_pass;\n-use rustc::lint::{LateContext, LateLintPass, LintArray, LintPass};\n+use rustc::lint::{LateContext, LateLintPass};\n use rustc::ty::{Adt, Dynamic, Opaque, Param, RawPtr, Ref, Ty, TypeAndMut};\n use rustc_hir as hir;\n-use rustc_session::declare_tool_lint;\n+use rustc_session::{declare_lint_pass, declare_tool_lint};\n use rustc_span::source_map::Span;\n \n declare_clippy_lint! {"}, {"sha": "d703539ab55fa6f55a6cf7adbbbb25fbeee8cb85", "filename": "clippy_lints/src/mut_mut.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/2677a4ef02ce309be49643ad7cd0beab6375a0f3/clippy_lints%2Fsrc%2Fmut_mut.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2677a4ef02ce309be49643ad7cd0beab6375a0f3/clippy_lints%2Fsrc%2Fmut_mut.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmut_mut.rs?ref=2677a4ef02ce309be49643ad7cd0beab6375a0f3", "patch": "@@ -1,11 +1,10 @@\n use crate::utils::{higher, span_lint};\n-use rustc::declare_lint_pass;\n use rustc::hir::map::Map;\n-use rustc::lint::{in_external_macro, LateContext, LateLintPass, LintArray, LintContext, LintPass};\n+use rustc::lint::{in_external_macro, LateContext, LateLintPass, LintContext};\n use rustc::ty;\n use rustc_hir as hir;\n use rustc_hir::intravisit;\n-use rustc_session::declare_tool_lint;\n+use rustc_session::{declare_lint_pass, declare_tool_lint};\n \n declare_clippy_lint! {\n     /// **What it does:** Checks for instances of `mut mut` references."}, {"sha": "59d489a74bbaaa898fbf3fa4fa08ae403086dfe7", "filename": "clippy_lints/src/mut_reference.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/2677a4ef02ce309be49643ad7cd0beab6375a0f3/clippy_lints%2Fsrc%2Fmut_reference.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2677a4ef02ce309be49643ad7cd0beab6375a0f3/clippy_lints%2Fsrc%2Fmut_reference.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmut_reference.rs?ref=2677a4ef02ce309be49643ad7cd0beab6375a0f3", "patch": "@@ -1,10 +1,9 @@\n use crate::utils::span_lint;\n-use rustc::declare_lint_pass;\n-use rustc::lint::{LateContext, LateLintPass, LintArray, LintPass};\n+use rustc::lint::{LateContext, LateLintPass};\n use rustc::ty::subst::Subst;\n use rustc::ty::{self, Ty};\n use rustc_hir::*;\n-use rustc_session::declare_tool_lint;\n+use rustc_session::{declare_lint_pass, declare_tool_lint};\n \n declare_clippy_lint! {\n     /// **What it does:** Detects giving a mutable reference to a function that only"}, {"sha": "8815e394092c62e74d726afae0a6332b322efa6c", "filename": "clippy_lints/src/mutable_debug_assertion.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/2677a4ef02ce309be49643ad7cd0beab6375a0f3/clippy_lints%2Fsrc%2Fmutable_debug_assertion.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2677a4ef02ce309be49643ad7cd0beab6375a0f3/clippy_lints%2Fsrc%2Fmutable_debug_assertion.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmutable_debug_assertion.rs?ref=2677a4ef02ce309be49643ad7cd0beab6375a0f3", "patch": "@@ -2,11 +2,11 @@ use crate::utils::{is_direct_expn_of, span_lint};\n use if_chain::if_chain;\n use matches::matches;\n use rustc::hir::map::Map;\n-use rustc::lint::{LateContext, LateLintPass, LintArray, LintPass};\n-use rustc::{declare_lint_pass, ty};\n+use rustc::lint::{LateContext, LateLintPass};\n+use rustc::ty;\n use rustc_hir::intravisit::{walk_expr, NestedVisitorMap, Visitor};\n use rustc_hir::{BorrowKind, Expr, ExprKind, Mutability, StmtKind, UnOp};\n-use rustc_session::declare_tool_lint;\n+use rustc_session::{declare_lint_pass, declare_tool_lint};\n use rustc_span::Span;\n \n declare_clippy_lint! {"}, {"sha": "f0ef16a05bc8c678ecedbab391662793e876aebf", "filename": "clippy_lints/src/mutex_atomic.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/2677a4ef02ce309be49643ad7cd0beab6375a0f3/clippy_lints%2Fsrc%2Fmutex_atomic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2677a4ef02ce309be49643ad7cd0beab6375a0f3/clippy_lints%2Fsrc%2Fmutex_atomic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmutex_atomic.rs?ref=2677a4ef02ce309be49643ad7cd0beab6375a0f3", "patch": "@@ -3,11 +3,10 @@\n //! This lint is **warn** by default\n \n use crate::utils::{match_type, paths, span_lint};\n-use rustc::declare_lint_pass;\n-use rustc::lint::{LateContext, LateLintPass, LintArray, LintPass};\n+use rustc::lint::{LateContext, LateLintPass};\n use rustc::ty::{self, Ty};\n use rustc_hir::Expr;\n-use rustc_session::declare_tool_lint;\n+use rustc_session::{declare_lint_pass, declare_tool_lint};\n use syntax::ast;\n \n declare_clippy_lint! {"}, {"sha": "3d73c502211627d8f844d86db07fcffb5f20588e", "filename": "clippy_lints/src/needless_bool.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/2677a4ef02ce309be49643ad7cd0beab6375a0f3/clippy_lints%2Fsrc%2Fneedless_bool.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2677a4ef02ce309be49643ad7cd0beab6375a0f3/clippy_lints%2Fsrc%2Fneedless_bool.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fneedless_bool.rs?ref=2677a4ef02ce309be49643ad7cd0beab6375a0f3", "patch": "@@ -4,11 +4,10 @@\n \n use crate::utils::sugg::Sugg;\n use crate::utils::{higher, parent_node_is_if_expr, span_lint, span_lint_and_sugg};\n-use rustc::declare_lint_pass;\n-use rustc::lint::{LateContext, LateLintPass, LintArray, LintPass};\n+use rustc::lint::{LateContext, LateLintPass};\n use rustc_errors::Applicability;\n use rustc_hir::*;\n-use rustc_session::declare_tool_lint;\n+use rustc_session::{declare_lint_pass, declare_tool_lint};\n use rustc_span::source_map::Spanned;\n use syntax::ast::LitKind;\n "}, {"sha": "18e30252c475fde1536d95eadefec2d3dfb9deb1", "filename": "clippy_lints/src/needless_borrow.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/2677a4ef02ce309be49643ad7cd0beab6375a0f3/clippy_lints%2Fsrc%2Fneedless_borrow.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2677a4ef02ce309be49643ad7cd0beab6375a0f3/clippy_lints%2Fsrc%2Fneedless_borrow.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fneedless_borrow.rs?ref=2677a4ef02ce309be49643ad7cd0beab6375a0f3", "patch": "@@ -4,13 +4,12 @@\n \n use crate::utils::{snippet_opt, span_lint_and_then};\n use if_chain::if_chain;\n-use rustc::impl_lint_pass;\n-use rustc::lint::{LateContext, LateLintPass, LintArray, LintPass};\n+use rustc::lint::{LateContext, LateLintPass};\n use rustc::ty;\n use rustc::ty::adjustment::{Adjust, Adjustment};\n use rustc_errors::Applicability;\n use rustc_hir::{BindingAnnotation, BorrowKind, Expr, ExprKind, HirId, Item, Mutability, Pat, PatKind};\n-use rustc_session::declare_tool_lint;\n+use rustc_session::{declare_tool_lint, impl_lint_pass};\n \n declare_clippy_lint! {\n     /// **What it does:** Checks for address of operations (`&`) that are going to"}, {"sha": "497ce3c292714675f26bbf9d428e3299b92d6e8c", "filename": "clippy_lints/src/needless_borrowed_ref.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/2677a4ef02ce309be49643ad7cd0beab6375a0f3/clippy_lints%2Fsrc%2Fneedless_borrowed_ref.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2677a4ef02ce309be49643ad7cd0beab6375a0f3/clippy_lints%2Fsrc%2Fneedless_borrowed_ref.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fneedless_borrowed_ref.rs?ref=2677a4ef02ce309be49643ad7cd0beab6375a0f3", "patch": "@@ -4,11 +4,10 @@\n \n use crate::utils::{snippet_with_applicability, span_lint_and_then};\n use if_chain::if_chain;\n-use rustc::declare_lint_pass;\n-use rustc::lint::{LateContext, LateLintPass, LintArray, LintPass};\n+use rustc::lint::{LateContext, LateLintPass};\n use rustc_errors::Applicability;\n use rustc_hir::{BindingAnnotation, Mutability, Node, Pat, PatKind};\n-use rustc_session::declare_tool_lint;\n+use rustc_session::{declare_lint_pass, declare_tool_lint};\n \n declare_clippy_lint! {\n     /// **What it does:** Checks for useless borrowed references."}, {"sha": "81f8eb0cc52e43bc1a469547c3db7920d305e8f2", "filename": "clippy_lints/src/needless_continue.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/2677a4ef02ce309be49643ad7cd0beab6375a0f3/clippy_lints%2Fsrc%2Fneedless_continue.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2677a4ef02ce309be49643ad7cd0beab6375a0f3/clippy_lints%2Fsrc%2Fneedless_continue.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fneedless_continue.rs?ref=2677a4ef02ce309be49643ad7cd0beab6375a0f3", "patch": "@@ -33,9 +33,8 @@\n //! ```\n //!\n //! This lint is **warn** by default.\n-use rustc::declare_lint_pass;\n-use rustc::lint::{EarlyContext, EarlyLintPass, LintArray, LintPass};\n-use rustc_session::declare_tool_lint;\n+use rustc::lint::{EarlyContext, EarlyLintPass};\n+use rustc_session::{declare_lint_pass, declare_tool_lint};\n use rustc_span::source_map::{original_sp, DUMMY_SP};\n use std::borrow::Cow;\n use syntax::ast;"}, {"sha": "a223fe5732121194e3dcd28c700d5f8fafcbc103", "filename": "clippy_lints/src/needless_pass_by_value.rs", "status": "modified", "additions": 3, "deletions": 5, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/2677a4ef02ce309be49643ad7cd0beab6375a0f3/clippy_lints%2Fsrc%2Fneedless_pass_by_value.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2677a4ef02ce309be49643ad7cd0beab6375a0f3/clippy_lints%2Fsrc%2Fneedless_pass_by_value.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fneedless_pass_by_value.rs?ref=2677a4ef02ce309be49643ad7cd0beab6375a0f3", "patch": "@@ -5,22 +5,20 @@ use crate::utils::{\n };\n use if_chain::if_chain;\n use matches::matches;\n-use rustc::declare_lint_pass;\n-use rustc::lint::{LateContext, LateLintPass, LintArray, LintPass};\n+use rustc::lint::{LateContext, LateLintPass};\n use rustc::traits;\n use rustc::traits::misc::can_type_implement_copy;\n use rustc::ty::{self, RegionKind, TypeFoldable};\n use rustc_data_structures::fx::{FxHashMap, FxHashSet};\n-use rustc_errors::Applicability;\n+use rustc_errors::{Applicability, DiagnosticBuilder};\n use rustc_hir::intravisit::FnKind;\n use rustc_hir::*;\n-use rustc_session::declare_tool_lint;\n+use rustc_session::{declare_lint_pass, declare_tool_lint};\n use rustc_span::{Span, Symbol};\n use rustc_target::spec::abi::Abi;\n use rustc_typeck::expr_use_visitor as euv;\n use std::borrow::Cow;\n use syntax::ast::Attribute;\n-use syntax::errors::DiagnosticBuilder;\n \n declare_clippy_lint! {\n     /// **What it does:** Checks for functions taking arguments by value, but not"}, {"sha": "f77f0b380157d2905ea53dead0117c70ace993a9", "filename": "clippy_lints/src/needless_update.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/2677a4ef02ce309be49643ad7cd0beab6375a0f3/clippy_lints%2Fsrc%2Fneedless_update.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2677a4ef02ce309be49643ad7cd0beab6375a0f3/clippy_lints%2Fsrc%2Fneedless_update.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fneedless_update.rs?ref=2677a4ef02ce309be49643ad7cd0beab6375a0f3", "patch": "@@ -1,9 +1,8 @@\n use crate::utils::span_lint;\n-use rustc::declare_lint_pass;\n-use rustc::lint::{LateContext, LateLintPass, LintArray, LintPass};\n+use rustc::lint::{LateContext, LateLintPass};\n use rustc::ty;\n use rustc_hir::{Expr, ExprKind};\n-use rustc_session::declare_tool_lint;\n+use rustc_session::{declare_lint_pass, declare_tool_lint};\n \n declare_clippy_lint! {\n     /// **What it does:** Checks for needlessly including a base struct on update"}, {"sha": "c85ef5324279cf2ec3c47bb65d52eeb33379073a", "filename": "clippy_lints/src/neg_cmp_op_on_partial_ord.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/2677a4ef02ce309be49643ad7cd0beab6375a0f3/clippy_lints%2Fsrc%2Fneg_cmp_op_on_partial_ord.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2677a4ef02ce309be49643ad7cd0beab6375a0f3/clippy_lints%2Fsrc%2Fneg_cmp_op_on_partial_ord.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fneg_cmp_op_on_partial_ord.rs?ref=2677a4ef02ce309be49643ad7cd0beab6375a0f3", "patch": "@@ -1,8 +1,7 @@\n use if_chain::if_chain;\n-use rustc::declare_lint_pass;\n-use rustc::lint::{in_external_macro, LateContext, LateLintPass, LintArray, LintContext, LintPass};\n+use rustc::lint::{in_external_macro, LateContext, LateLintPass, LintContext};\n use rustc_hir::*;\n-use rustc_session::declare_tool_lint;\n+use rustc_session::{declare_lint_pass, declare_tool_lint};\n \n use crate::utils::{self, paths, span_lint};\n "}, {"sha": "ac1f031e19b9d5a4d5468c729ffd4102028e8e41", "filename": "clippy_lints/src/neg_multiply.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/2677a4ef02ce309be49643ad7cd0beab6375a0f3/clippy_lints%2Fsrc%2Fneg_multiply.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2677a4ef02ce309be49643ad7cd0beab6375a0f3/clippy_lints%2Fsrc%2Fneg_multiply.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fneg_multiply.rs?ref=2677a4ef02ce309be49643ad7cd0beab6375a0f3", "patch": "@@ -1,8 +1,7 @@\n use if_chain::if_chain;\n-use rustc::declare_lint_pass;\n-use rustc::lint::{LateContext, LateLintPass, LintArray, LintPass};\n+use rustc::lint::{LateContext, LateLintPass};\n use rustc_hir::*;\n-use rustc_session::declare_tool_lint;\n+use rustc_session::{declare_lint_pass, declare_tool_lint};\n use rustc_span::source_map::Span;\n \n use crate::consts::{self, Constant};"}, {"sha": "ee4b2684d30c129085ab069ce4aeef67ec1d97f6", "filename": "clippy_lints/src/new_without_default.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/2677a4ef02ce309be49643ad7cd0beab6375a0f3/clippy_lints%2Fsrc%2Fnew_without_default.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2677a4ef02ce309be49643ad7cd0beab6375a0f3/clippy_lints%2Fsrc%2Fnew_without_default.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fnew_without_default.rs?ref=2677a4ef02ce309be49643ad7cd0beab6375a0f3", "patch": "@@ -2,14 +2,13 @@ use crate::utils::paths;\n use crate::utils::sugg::DiagnosticBuilderExt;\n use crate::utils::{get_trait_def_id, implements_trait, return_ty, same_tys, span_lint_hir_and_then};\n use if_chain::if_chain;\n-use rustc::impl_lint_pass;\n-use rustc::lint::{in_external_macro, LateContext, LateLintPass, LintArray, LintContext, LintPass};\n+use rustc::lint::{in_external_macro, LateContext, LateLintPass, LintContext};\n use rustc::ty::{self, Ty};\n use rustc_errors::Applicability;\n use rustc_hir as hir;\n use rustc_hir::def_id::DefId;\n use rustc_hir::HirIdSet;\n-use rustc_session::declare_tool_lint;\n+use rustc_session::{declare_tool_lint, impl_lint_pass};\n use rustc_span::source_map::Span;\n \n declare_clippy_lint! {"}, {"sha": "409eae184ebe372269e185731d3023c9a7d46f72", "filename": "clippy_lints/src/no_effect.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/2677a4ef02ce309be49643ad7cd0beab6375a0f3/clippy_lints%2Fsrc%2Fno_effect.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2677a4ef02ce309be49643ad7cd0beab6375a0f3/clippy_lints%2Fsrc%2Fno_effect.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fno_effect.rs?ref=2677a4ef02ce309be49643ad7cd0beab6375a0f3", "patch": "@@ -1,10 +1,9 @@\n use crate::utils::{has_drop, qpath_res, snippet_opt, span_lint, span_lint_and_sugg};\n-use rustc::declare_lint_pass;\n-use rustc::lint::{LateContext, LateLintPass, LintArray, LintPass};\n+use rustc::lint::{LateContext, LateLintPass};\n use rustc_errors::Applicability;\n use rustc_hir::def::{DefKind, Res};\n use rustc_hir::{BinOpKind, BlockCheckMode, Expr, ExprKind, Stmt, StmtKind, UnsafeSource};\n-use rustc_session::declare_tool_lint;\n+use rustc_session::{declare_lint_pass, declare_tool_lint};\n use std::ops::Deref;\n \n declare_clippy_lint! {"}, {"sha": "cb668d2a3f08a6884d3ad5e08865be20a7157b9d", "filename": "clippy_lints/src/non_copy_const.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/2677a4ef02ce309be49643ad7cd0beab6375a0f3/clippy_lints%2Fsrc%2Fnon_copy_const.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2677a4ef02ce309be49643ad7cd0beab6375a0f3/clippy_lints%2Fsrc%2Fnon_copy_const.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fnon_copy_const.rs?ref=2677a4ef02ce309be49643ad7cd0beab6375a0f3", "patch": "@@ -4,13 +4,12 @@\n \n use std::ptr;\n \n-use rustc::declare_lint_pass;\n-use rustc::lint::{LateContext, LateLintPass, Lint, LintArray, LintPass};\n+use rustc::lint::{LateContext, LateLintPass, Lint};\n use rustc::ty::adjustment::Adjust;\n use rustc::ty::{Ty, TypeFlags};\n use rustc_hir::def::{DefKind, Res};\n use rustc_hir::*;\n-use rustc_session::declare_tool_lint;\n+use rustc_session::{declare_lint_pass, declare_tool_lint};\n use rustc_span::{InnerSpan, Span, DUMMY_SP};\n use rustc_typeck::hir_ty_to_ty;\n "}, {"sha": "c7a337d222b2e28789cfcd3c1e287e46e0a317b2", "filename": "clippy_lints/src/non_expressive_names.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/2677a4ef02ce309be49643ad7cd0beab6375a0f3/clippy_lints%2Fsrc%2Fnon_expressive_names.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2677a4ef02ce309be49643ad7cd0beab6375a0f3/clippy_lints%2Fsrc%2Fnon_expressive_names.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fnon_expressive_names.rs?ref=2677a4ef02ce309be49643ad7cd0beab6375a0f3", "patch": "@@ -1,7 +1,6 @@\n use crate::utils::{span_lint, span_lint_and_then};\n-use rustc::impl_lint_pass;\n-use rustc::lint::{EarlyContext, EarlyLintPass, LintArray, LintPass};\n-use rustc_session::declare_tool_lint;\n+use rustc::lint::{EarlyContext, EarlyLintPass};\n+use rustc_session::{declare_tool_lint, impl_lint_pass};\n use rustc_span::source_map::Span;\n use rustc_span::symbol::SymbolStr;\n use std::cmp::Ordering;"}, {"sha": "106a6f4bc5621fe9574929472b6156a5a9407cdd", "filename": "clippy_lints/src/ok_if_let.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/2677a4ef02ce309be49643ad7cd0beab6375a0f3/clippy_lints%2Fsrc%2Fok_if_let.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2677a4ef02ce309be49643ad7cd0beab6375a0f3/clippy_lints%2Fsrc%2Fok_if_let.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fok_if_let.rs?ref=2677a4ef02ce309be49643ad7cd0beab6375a0f3", "patch": "@@ -1,9 +1,8 @@\n use crate::utils::{match_type, method_chain_args, paths, snippet, span_help_and_lint};\n use if_chain::if_chain;\n-use rustc::declare_lint_pass;\n-use rustc::lint::{LateContext, LateLintPass, LintArray, LintPass};\n+use rustc::lint::{LateContext, LateLintPass};\n use rustc_hir::*;\n-use rustc_session::declare_tool_lint;\n+use rustc_session::{declare_lint_pass, declare_tool_lint};\n \n declare_clippy_lint! {\n     /// **What it does:*** Checks for unnecessary `ok()` in if let."}, {"sha": "0d96df1374556bd4f1ad7f1bf49b94d2741c154d", "filename": "clippy_lints/src/open_options.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/2677a4ef02ce309be49643ad7cd0beab6375a0f3/clippy_lints%2Fsrc%2Fopen_options.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2677a4ef02ce309be49643ad7cd0beab6375a0f3/clippy_lints%2Fsrc%2Fopen_options.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fopen_options.rs?ref=2677a4ef02ce309be49643ad7cd0beab6375a0f3", "patch": "@@ -1,8 +1,7 @@\n use crate::utils::{match_type, paths, span_lint, walk_ptrs_ty};\n-use rustc::declare_lint_pass;\n-use rustc::lint::{LateContext, LateLintPass, LintArray, LintPass};\n+use rustc::lint::{LateContext, LateLintPass};\n use rustc_hir::{Expr, ExprKind};\n-use rustc_session::declare_tool_lint;\n+use rustc_session::{declare_lint_pass, declare_tool_lint};\n use rustc_span::source_map::{Span, Spanned};\n use syntax::ast::LitKind;\n "}, {"sha": "42898e97e909e4e58a7f0f5d5316a668426db52a", "filename": "clippy_lints/src/overflow_check_conditional.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/2677a4ef02ce309be49643ad7cd0beab6375a0f3/clippy_lints%2Fsrc%2Foverflow_check_conditional.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2677a4ef02ce309be49643ad7cd0beab6375a0f3/clippy_lints%2Fsrc%2Foverflow_check_conditional.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Foverflow_check_conditional.rs?ref=2677a4ef02ce309be49643ad7cd0beab6375a0f3", "patch": "@@ -1,9 +1,8 @@\n use crate::utils::{span_lint, SpanlessEq};\n use if_chain::if_chain;\n-use rustc::declare_lint_pass;\n-use rustc::lint::{LateContext, LateLintPass, LintArray, LintPass};\n+use rustc::lint::{LateContext, LateLintPass};\n use rustc_hir::*;\n-use rustc_session::declare_tool_lint;\n+use rustc_session::{declare_lint_pass, declare_tool_lint};\n \n declare_clippy_lint! {\n     /// **What it does:** Detects classic underflow/overflow checks."}, {"sha": "9034a8111ef85d462e135c3de5158291a0fc1672", "filename": "clippy_lints/src/panic_unimplemented.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/2677a4ef02ce309be49643ad7cd0beab6375a0f3/clippy_lints%2Fsrc%2Fpanic_unimplemented.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2677a4ef02ce309be49643ad7cd0beab6375a0f3/clippy_lints%2Fsrc%2Fpanic_unimplemented.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fpanic_unimplemented.rs?ref=2677a4ef02ce309be49643ad7cd0beab6375a0f3", "patch": "@@ -1,9 +1,8 @@\n use crate::utils::{is_direct_expn_of, is_expn_of, match_function_call, paths, span_lint};\n use if_chain::if_chain;\n-use rustc::declare_lint_pass;\n-use rustc::lint::{LateContext, LateLintPass, LintArray, LintPass};\n+use rustc::lint::{LateContext, LateLintPass};\n use rustc_hir::*;\n-use rustc_session::declare_tool_lint;\n+use rustc_session::{declare_lint_pass, declare_tool_lint};\n use rustc_span::Span;\n use syntax::ast::LitKind;\n "}, {"sha": "140fb392149954e0612c60cd76cd3da5a137cab3", "filename": "clippy_lints/src/partialeq_ne_impl.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/2677a4ef02ce309be49643ad7cd0beab6375a0f3/clippy_lints%2Fsrc%2Fpartialeq_ne_impl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2677a4ef02ce309be49643ad7cd0beab6375a0f3/clippy_lints%2Fsrc%2Fpartialeq_ne_impl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fpartialeq_ne_impl.rs?ref=2677a4ef02ce309be49643ad7cd0beab6375a0f3", "patch": "@@ -1,9 +1,8 @@\n use crate::utils::{is_automatically_derived, span_lint_hir};\n use if_chain::if_chain;\n-use rustc::declare_lint_pass;\n-use rustc::lint::{LateContext, LateLintPass, LintArray, LintPass};\n+use rustc::lint::{LateContext, LateLintPass};\n use rustc_hir::*;\n-use rustc_session::declare_tool_lint;\n+use rustc_session::{declare_lint_pass, declare_tool_lint};\n \n declare_clippy_lint! {\n     /// **What it does:** Checks for manual re-implementations of `PartialEq::ne`."}, {"sha": "7cf1d991dd31cf1bbbdba07082118a678f25caed", "filename": "clippy_lints/src/path_buf_push_overwrite.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/2677a4ef02ce309be49643ad7cd0beab6375a0f3/clippy_lints%2Fsrc%2Fpath_buf_push_overwrite.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2677a4ef02ce309be49643ad7cd0beab6375a0f3/clippy_lints%2Fsrc%2Fpath_buf_push_overwrite.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fpath_buf_push_overwrite.rs?ref=2677a4ef02ce309be49643ad7cd0beab6375a0f3", "patch": "@@ -1,10 +1,9 @@\n use crate::utils::{match_type, paths, span_lint_and_sugg, walk_ptrs_ty};\n use if_chain::if_chain;\n-use rustc::declare_lint_pass;\n-use rustc::lint::{LateContext, LateLintPass, LintArray, LintPass};\n+use rustc::lint::{LateContext, LateLintPass};\n use rustc_errors::Applicability;\n use rustc_hir::*;\n-use rustc_session::declare_tool_lint;\n+use rustc_session::{declare_lint_pass, declare_tool_lint};\n use std::path::{Component, Path};\n use syntax::ast::LitKind;\n "}, {"sha": "6ffdf048f4e41126d65ce91596a9fb3782bc7bbf", "filename": "clippy_lints/src/precedence.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/2677a4ef02ce309be49643ad7cd0beab6375a0f3/clippy_lints%2Fsrc%2Fprecedence.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2677a4ef02ce309be49643ad7cd0beab6375a0f3/clippy_lints%2Fsrc%2Fprecedence.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fprecedence.rs?ref=2677a4ef02ce309be49643ad7cd0beab6375a0f3", "patch": "@@ -1,8 +1,7 @@\n use crate::utils::{snippet_with_applicability, span_lint_and_sugg};\n-use rustc::declare_lint_pass;\n-use rustc::lint::{EarlyContext, EarlyLintPass, LintArray, LintPass};\n+use rustc::lint::{EarlyContext, EarlyLintPass};\n use rustc_errors::Applicability;\n-use rustc_session::declare_tool_lint;\n+use rustc_session::{declare_lint_pass, declare_tool_lint};\n use rustc_span::source_map::Spanned;\n use syntax::ast::*;\n "}, {"sha": "340b6a3ccf437f0038b49698cd4e2b8745b92255", "filename": "clippy_lints/src/ptr.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/2677a4ef02ce309be49643ad7cd0beab6375a0f3/clippy_lints%2Fsrc%2Fptr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2677a4ef02ce309be49643ad7cd0beab6375a0f3/clippy_lints%2Fsrc%2Fptr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fptr.rs?ref=2677a4ef02ce309be49643ad7cd0beab6375a0f3", "patch": "@@ -6,13 +6,12 @@ use crate::utils::{\n     walk_ptrs_hir_ty,\n };\n use if_chain::if_chain;\n-use rustc::declare_lint_pass;\n-use rustc::lint::{LateContext, LateLintPass, LintArray, LintPass};\n+use rustc::lint::{LateContext, LateLintPass};\n use rustc::ty;\n use rustc_errors::Applicability;\n use rustc_hir::QPath;\n use rustc_hir::*;\n-use rustc_session::declare_tool_lint;\n+use rustc_session::{declare_lint_pass, declare_tool_lint};\n use rustc_span::source_map::Span;\n use rustc_span::{MultiSpan, Symbol};\n use std::borrow::Cow;"}, {"sha": "31791c643c4cd559b964e5a934cf107a949a7e7c", "filename": "clippy_lints/src/ptr_offset_with_cast.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/2677a4ef02ce309be49643ad7cd0beab6375a0f3/clippy_lints%2Fsrc%2Fptr_offset_with_cast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2677a4ef02ce309be49643ad7cd0beab6375a0f3/clippy_lints%2Fsrc%2Fptr_offset_with_cast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fptr_offset_with_cast.rs?ref=2677a4ef02ce309be49643ad7cd0beab6375a0f3", "patch": "@@ -1,9 +1,8 @@\n use crate::utils;\n-use rustc::declare_lint_pass;\n-use rustc::lint::{LateContext, LateLintPass, LintArray, LintPass};\n+use rustc::lint::{LateContext, LateLintPass};\n use rustc_errors::Applicability;\n use rustc_hir::{Expr, ExprKind};\n-use rustc_session::declare_tool_lint;\n+use rustc_session::{declare_lint_pass, declare_tool_lint};\n use std::fmt;\n \n declare_clippy_lint! {"}, {"sha": "4bd7812442c4f7d5e3307b416dfbab868960c4c3", "filename": "clippy_lints/src/question_mark.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/2677a4ef02ce309be49643ad7cd0beab6375a0f3/clippy_lints%2Fsrc%2Fquestion_mark.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2677a4ef02ce309be49643ad7cd0beab6375a0f3/clippy_lints%2Fsrc%2Fquestion_mark.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fquestion_mark.rs?ref=2677a4ef02ce309be49643ad7cd0beab6375a0f3", "patch": "@@ -1,10 +1,9 @@\n use if_chain::if_chain;\n-use rustc::declare_lint_pass;\n-use rustc::lint::{LateContext, LateLintPass, LintArray, LintPass};\n+use rustc::lint::{LateContext, LateLintPass};\n use rustc_errors::Applicability;\n use rustc_hir::def::{DefKind, Res};\n use rustc_hir::*;\n-use rustc_session::declare_tool_lint;\n+use rustc_session::{declare_lint_pass, declare_tool_lint};\n \n use crate::utils::paths::*;\n use crate::utils::sugg::Sugg;"}, {"sha": "1cf403f8757761dd65d24e51a058ef0f8459929a", "filename": "clippy_lints/src/ranges.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/2677a4ef02ce309be49643ad7cd0beab6375a0f3/clippy_lints%2Fsrc%2Franges.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2677a4ef02ce309be49643ad7cd0beab6375a0f3/clippy_lints%2Fsrc%2Franges.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Franges.rs?ref=2677a4ef02ce309be49643ad7cd0beab6375a0f3", "patch": "@@ -1,9 +1,8 @@\n use if_chain::if_chain;\n-use rustc::declare_lint_pass;\n-use rustc::lint::{LateContext, LateLintPass, LintArray, LintPass};\n+use rustc::lint::{LateContext, LateLintPass};\n use rustc_errors::Applicability;\n use rustc_hir::*;\n-use rustc_session::declare_tool_lint;\n+use rustc_session::{declare_lint_pass, declare_tool_lint};\n use rustc_span::source_map::Spanned;\n use syntax::ast::RangeLimits;\n "}, {"sha": "30a5b9bd2805325350c63718e7776f81fb554a00", "filename": "clippy_lints/src/redundant_clone.rs", "status": "modified", "additions": 33, "deletions": 67, "changes": 100, "blob_url": "https://github.com/rust-lang/rust/blob/2677a4ef02ce309be49643ad7cd0beab6375a0f3/clippy_lints%2Fsrc%2Fredundant_clone.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2677a4ef02ce309be49643ad7cd0beab6375a0f3/clippy_lints%2Fsrc%2Fredundant_clone.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fredundant_clone.rs?ref=2677a4ef02ce309be49643ad7cd0beab6375a0f3", "patch": "@@ -4,8 +4,7 @@ use crate::utils::{\n };\n use if_chain::if_chain;\n use matches::matches;\n-use rustc::declare_lint_pass;\n-use rustc::lint::{LateContext, LateLintPass, LintArray, LintPass};\n+use rustc::lint::{LateContext, LateLintPass};\n use rustc::mir::{\n     self, traversal,\n     visit::{MutatingUseContext, PlaceContext, Visitor as _},\n@@ -19,7 +18,7 @@ use rustc_index::bit_set::{BitSet, HybridBitSet};\n use rustc_mir::dataflow::{\n     do_dataflow, BitDenotation, BottomValue, DataflowResults, DataflowResultsCursor, DebugFormatted, GenKillSet,\n };\n-use rustc_session::declare_tool_lint;\n+use rustc_session::{declare_lint_pass, declare_tool_lint};\n use rustc_span::source_map::{BytePos, Span};\n use std::convert::TryFrom;\n \n@@ -158,7 +157,7 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for RedundantClone {\n                 let pred_arg = if_chain! {\n                     if let Some((pred_fn_def_id, pred_arg, pred_arg_ty, Some(res))) =\n                         is_call_with_ref_arg(cx, mir, &pred_terminator.kind);\n-                    if res.base == mir::PlaceBase::Local(cloned);\n+                    if res.local == cloned;\n                     if match_def_path(cx, pred_fn_def_id, &paths::DEREF_TRAIT_METHOD);\n                     if match_type(cx, pred_arg_ty, &paths::PATH_BUF)\n                         || match_type(cx, pred_arg_ty, &paths::OS_STRING);\n@@ -265,7 +264,7 @@ fn is_call_with_ref_arg<'tcx>(\n     if_chain! {\n         if let mir::TerminatorKind::Call { func, args, destination, .. } = kind;\n         if args.len() == 1;\n-        if let mir::Operand::Move(mir::Place { base: mir::PlaceBase::Local(local), .. }) = &args[0];\n+        if let mir::Operand::Move(mir::Place { local, .. }) = &args[0];\n         if let ty::FnDef(def_id, _) = func.ty(&*mir, cx.tcx).kind;\n         if let (inner_ty, 1) = walk_ptrs_ty_depth(args[0].ty(&*mir, cx.tcx));\n         if !is_copy(cx, inner_ty);\n@@ -289,14 +288,7 @@ fn find_stmt_assigns_to<'tcx>(\n     bb: mir::BasicBlock,\n ) -> Option<(mir::Local, CannotMoveOut)> {\n     let rvalue = mir.basic_blocks()[bb].statements.iter().rev().find_map(|stmt| {\n-        if let mir::StatementKind::Assign(box (\n-            mir::Place {\n-                base: mir::PlaceBase::Local(local),\n-                ..\n-            },\n-            v,\n-        )) = &stmt.kind\n-        {\n+        if let mir::StatementKind::Assign(box (mir::Place { local, .. }, v)) = &stmt.kind {\n             return if *local == to_local { Some(v) } else { None };\n         }\n \n@@ -305,11 +297,11 @@ fn find_stmt_assigns_to<'tcx>(\n \n     match (by_ref, &*rvalue) {\n         (true, mir::Rvalue::Ref(_, _, place)) | (false, mir::Rvalue::Use(mir::Operand::Copy(place))) => {\n-            base_local_and_movability(cx, mir, place)\n+            base_local_and_movability(cx, mir, *place)\n         },\n         (false, mir::Rvalue::Ref(_, _, place)) => {\n             if let [mir::ProjectionElem::Deref] = place.as_ref().projection {\n-                base_local_and_movability(cx, mir, place)\n+                base_local_and_movability(cx, mir, *place)\n             } else {\n                 None\n             }\n@@ -325,7 +317,7 @@ fn find_stmt_assigns_to<'tcx>(\n fn base_local_and_movability<'tcx>(\n     cx: &LateContext<'_, 'tcx>,\n     mir: &mir::Body<'tcx>,\n-    place: &mir::Place<'tcx>,\n+    place: mir::Place<'tcx>,\n ) -> Option<(mir::Local, CannotMoveOut)> {\n     use rustc::mir::PlaceRef;\n \n@@ -334,25 +326,15 @@ fn base_local_and_movability<'tcx>(\n     // Accessing a field of an ADT that has `Drop`. Moving the field out will cause E0509.\n     let mut field = false;\n \n-    let PlaceRef {\n-        base: place_base,\n-        mut projection,\n-    } = place.as_ref();\n-    if let mir::PlaceBase::Local(local) = place_base {\n-        while let [base @ .., elem] = projection {\n-            projection = base;\n-            deref |= matches!(elem, mir::ProjectionElem::Deref);\n-            field |= matches!(elem, mir::ProjectionElem::Field(..))\n-                && has_drop(\n-                    cx,\n-                    mir::Place::ty_from(place_base, projection, &mir.local_decls, cx.tcx).ty,\n-                );\n-        }\n-\n-        Some((*local, deref || field))\n-    } else {\n-        None\n+    let PlaceRef { local, mut projection } = place.as_ref();\n+    while let [base @ .., elem] = projection {\n+        projection = base;\n+        deref |= matches!(elem, mir::ProjectionElem::Deref);\n+        field |= matches!(elem, mir::ProjectionElem::Field(..))\n+            && has_drop(cx, mir::Place::ty_from(local, projection, &mir.local_decls, cx.tcx).ty);\n     }\n+\n+    Some((*local, deref || field))\n }\n \n struct LocalUseVisitor {\n@@ -503,38 +485,28 @@ impl<'a, 'tcx> PossibleBorrowerVisitor<'a, 'tcx> {\n \n impl<'a, 'tcx> mir::visit::Visitor<'tcx> for PossibleBorrowerVisitor<'a, 'tcx> {\n     fn visit_assign(&mut self, place: &mir::Place<'tcx>, rvalue: &mir::Rvalue<'_>, _location: mir::Location) {\n-        if let mir::PlaceBase::Local(lhs) = place.base {\n-            match rvalue {\n-                mir::Rvalue::Ref(_, _, borrowed) => {\n-                    if let mir::PlaceBase::Local(borrowed_local) = borrowed.base {\n-                        self.possible_borrower.add(borrowed_local, lhs);\n-                    }\n-                },\n-                other => {\n-                    if !ContainsRegion.visit_ty(place.ty(&self.body.local_decls, self.cx.tcx).ty) {\n-                        return;\n+        let lhs = place.local;\n+        match rvalue {\n+            mir::Rvalue::Ref(_, _, borrowed) => {\n+                self.possible_borrower.add(borrowed.local, lhs);\n+            },\n+            other => {\n+                if !ContainsRegion.visit_ty(place.ty(&self.body.local_decls, self.cx.tcx).ty) {\n+                    return;\n+                }\n+                rvalue_locals(other, |rhs| {\n+                    if lhs != rhs {\n+                        self.possible_borrower.add(rhs, lhs);\n                     }\n-                    rvalue_locals(other, |rhs| {\n-                        if lhs != rhs {\n-                            self.possible_borrower.add(rhs, lhs);\n-                        }\n-                    });\n-                },\n-            }\n+                });\n+            },\n         }\n     }\n \n     fn visit_terminator(&mut self, terminator: &mir::Terminator<'_>, _loc: mir::Location) {\n         if let mir::TerminatorKind::Call {\n             args,\n-            destination:\n-                Some((\n-                    mir::Place {\n-                        base: mir::PlaceBase::Local(dest),\n-                        ..\n-                    },\n-                    _,\n-                )),\n+            destination: Some((mir::Place { local: dest, .. }, _)),\n             ..\n         } = &terminator.kind\n         {\n@@ -548,9 +520,7 @@ impl<'a, 'tcx> mir::visit::Visitor<'tcx> for PossibleBorrowerVisitor<'a, 'tcx> {\n             for op in args {\n                 match op {\n                     mir::Operand::Copy(p) | mir::Operand::Move(p) => {\n-                        if let mir::PlaceBase::Local(arg) = p.base {\n-                            self.possible_borrower.add(arg, *dest);\n-                        }\n+                        self.possible_borrower.add(p.local, *dest);\n                     },\n                     _ => (),\n                 }\n@@ -571,11 +541,7 @@ fn rvalue_locals(rvalue: &mir::Rvalue<'_>, mut visit: impl FnMut(mir::Local)) {\n     use rustc::mir::Rvalue::*;\n \n     let mut visit_op = |op: &mir::Operand<'_>| match op {\n-        mir::Operand::Copy(p) | mir::Operand::Move(p) => {\n-            if let mir::PlaceBase::Local(l) = p.base {\n-                visit(l)\n-            }\n-        },\n+        mir::Operand::Copy(p) | mir::Operand::Move(p) => visit(p.local),\n         _ => (),\n     };\n "}, {"sha": "a970bf423298ce0cf9a711115bfdfe8c78d5f892", "filename": "clippy_lints/src/redundant_field_names.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/2677a4ef02ce309be49643ad7cd0beab6375a0f3/clippy_lints%2Fsrc%2Fredundant_field_names.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2677a4ef02ce309be49643ad7cd0beab6375a0f3/clippy_lints%2Fsrc%2Fredundant_field_names.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fredundant_field_names.rs?ref=2677a4ef02ce309be49643ad7cd0beab6375a0f3", "patch": "@@ -1,8 +1,7 @@\n use crate::utils::span_lint_and_sugg;\n-use rustc::declare_lint_pass;\n-use rustc::lint::{EarlyContext, EarlyLintPass, LintArray, LintPass};\n+use rustc::lint::{EarlyContext, EarlyLintPass};\n use rustc_errors::Applicability;\n-use rustc_session::declare_tool_lint;\n+use rustc_session::{declare_lint_pass, declare_tool_lint};\n use syntax::ast::*;\n \n declare_clippy_lint! {"}, {"sha": "7e2c7a7a33162a4f6801dcbec59d779ba4bf6abd", "filename": "clippy_lints/src/redundant_pattern_matching.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/2677a4ef02ce309be49643ad7cd0beab6375a0f3/clippy_lints%2Fsrc%2Fredundant_pattern_matching.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2677a4ef02ce309be49643ad7cd0beab6375a0f3/clippy_lints%2Fsrc%2Fredundant_pattern_matching.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fredundant_pattern_matching.rs?ref=2677a4ef02ce309be49643ad7cd0beab6375a0f3", "patch": "@@ -1,9 +1,8 @@\n use crate::utils::{match_qpath, paths, snippet, span_lint_and_then};\n-use rustc::declare_lint_pass;\n-use rustc::lint::{LateContext, LateLintPass, LintArray, LintPass};\n+use rustc::lint::{LateContext, LateLintPass};\n use rustc_errors::Applicability;\n use rustc_hir::*;\n-use rustc_session::declare_tool_lint;\n+use rustc_session::{declare_lint_pass, declare_tool_lint};\n use syntax::ast::LitKind;\n \n declare_clippy_lint! {"}, {"sha": "fd11682da6fc42895ca031949f5c3adb8b94b6a1", "filename": "clippy_lints/src/redundant_static_lifetimes.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/2677a4ef02ce309be49643ad7cd0beab6375a0f3/clippy_lints%2Fsrc%2Fredundant_static_lifetimes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2677a4ef02ce309be49643ad7cd0beab6375a0f3/clippy_lints%2Fsrc%2Fredundant_static_lifetimes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fredundant_static_lifetimes.rs?ref=2677a4ef02ce309be49643ad7cd0beab6375a0f3", "patch": "@@ -1,8 +1,7 @@\n use crate::utils::{snippet, span_lint_and_then};\n-use rustc::declare_lint_pass;\n-use rustc::lint::{EarlyContext, EarlyLintPass, LintArray, LintPass};\n+use rustc::lint::{EarlyContext, EarlyLintPass};\n use rustc_errors::Applicability;\n-use rustc_session::declare_tool_lint;\n+use rustc_session::{declare_lint_pass, declare_tool_lint};\n use syntax::ast::*;\n \n declare_clippy_lint! {"}, {"sha": "64ed9ce83872f61c7b8c8219edfc299d768af3ae", "filename": "clippy_lints/src/reference.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/2677a4ef02ce309be49643ad7cd0beab6375a0f3/clippy_lints%2Fsrc%2Freference.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2677a4ef02ce309be49643ad7cd0beab6375a0f3/clippy_lints%2Fsrc%2Freference.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Freference.rs?ref=2677a4ef02ce309be49643ad7cd0beab6375a0f3", "patch": "@@ -1,9 +1,8 @@\n use crate::utils::{in_macro, snippet_with_applicability, span_lint_and_sugg};\n use if_chain::if_chain;\n-use rustc::declare_lint_pass;\n-use rustc::lint::{EarlyContext, EarlyLintPass, LintArray, LintPass};\n+use rustc::lint::{EarlyContext, EarlyLintPass};\n use rustc_errors::Applicability;\n-use rustc_session::declare_tool_lint;\n+use rustc_session::{declare_lint_pass, declare_tool_lint};\n use syntax::ast::{Expr, ExprKind, UnOp};\n \n declare_clippy_lint! {"}, {"sha": "06874608c88418ecaa3091999696536404e38118", "filename": "clippy_lints/src/regex.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/2677a4ef02ce309be49643ad7cd0beab6375a0f3/clippy_lints%2Fsrc%2Fregex.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2677a4ef02ce309be49643ad7cd0beab6375a0f3/clippy_lints%2Fsrc%2Fregex.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fregex.rs?ref=2677a4ef02ce309be49643ad7cd0beab6375a0f3", "patch": "@@ -1,11 +1,10 @@\n use crate::consts::{constant, Constant};\n use crate::utils::{is_expn_of, match_def_path, match_type, paths, span_help_and_lint, span_lint};\n use if_chain::if_chain;\n-use rustc::impl_lint_pass;\n-use rustc::lint::{LateContext, LateLintPass, LintArray, LintPass};\n+use rustc::lint::{LateContext, LateLintPass};\n use rustc_data_structures::fx::FxHashSet;\n use rustc_hir::*;\n-use rustc_session::declare_tool_lint;\n+use rustc_session::{declare_tool_lint, impl_lint_pass};\n use rustc_span::source_map::{BytePos, Span};\n use std::convert::TryFrom;\n use syntax::ast::{LitKind, StrStyle};"}, {"sha": "7bf143009fd071a61bcf4e614bd266558935706e", "filename": "clippy_lints/src/replace_consts.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/2677a4ef02ce309be49643ad7cd0beab6375a0f3/clippy_lints%2Fsrc%2Freplace_consts.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2677a4ef02ce309be49643ad7cd0beab6375a0f3/clippy_lints%2Fsrc%2Freplace_consts.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Freplace_consts.rs?ref=2677a4ef02ce309be49643ad7cd0beab6375a0f3", "patch": "@@ -1,11 +1,10 @@\n use crate::utils::{match_def_path, span_lint_and_sugg};\n use if_chain::if_chain;\n-use rustc::declare_lint_pass;\n-use rustc::lint::{LateContext, LateLintPass, LintArray, LintPass};\n+use rustc::lint::{LateContext, LateLintPass};\n use rustc_errors::Applicability;\n use rustc_hir::def::{DefKind, Res};\n use rustc_hir::*;\n-use rustc_session::declare_tool_lint;\n+use rustc_session::{declare_lint_pass, declare_tool_lint};\n \n declare_clippy_lint! {\n     /// **What it does:** Checks for usage of standard library"}, {"sha": "a5f4f87b58b7b154fed85d1943f10aa0fe20ccdf", "filename": "clippy_lints/src/returns.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/2677a4ef02ce309be49643ad7cd0beab6375a0f3/clippy_lints%2Fsrc%2Freturns.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2677a4ef02ce309be49643ad7cd0beab6375a0f3/clippy_lints%2Fsrc%2Freturns.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Freturns.rs?ref=2677a4ef02ce309be49643ad7cd0beab6375a0f3", "patch": "@@ -1,8 +1,7 @@\n use if_chain::if_chain;\n-use rustc::declare_lint_pass;\n-use rustc::lint::{in_external_macro, EarlyContext, EarlyLintPass, LintArray, LintContext, LintPass};\n+use rustc::lint::{in_external_macro, EarlyContext, EarlyLintPass, LintContext};\n use rustc_errors::Applicability;\n-use rustc_session::declare_tool_lint;\n+use rustc_session::{declare_lint_pass, declare_tool_lint};\n use rustc_span::source_map::Span;\n use rustc_span::BytePos;\n use syntax::ast;"}, {"sha": "cb43e86e42e0a363e42691a19d8c766a9245bf08", "filename": "clippy_lints/src/serde_api.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/2677a4ef02ce309be49643ad7cd0beab6375a0f3/clippy_lints%2Fsrc%2Fserde_api.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2677a4ef02ce309be49643ad7cd0beab6375a0f3/clippy_lints%2Fsrc%2Fserde_api.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fserde_api.rs?ref=2677a4ef02ce309be49643ad7cd0beab6375a0f3", "patch": "@@ -1,8 +1,7 @@\n use crate::utils::{get_trait_def_id, paths, span_lint};\n-use rustc::declare_lint_pass;\n-use rustc::lint::{LateContext, LateLintPass, LintArray, LintPass};\n+use rustc::lint::{LateContext, LateLintPass};\n use rustc_hir::*;\n-use rustc_session::declare_tool_lint;\n+use rustc_session::{declare_lint_pass, declare_tool_lint};\n \n declare_clippy_lint! {\n     /// **What it does:** Checks for mis-uses of the serde API."}, {"sha": "eb23c5099b53f5a2a8826ad1df28f3ca7453be19", "filename": "clippy_lints/src/shadow.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/2677a4ef02ce309be49643ad7cd0beab6375a0f3/clippy_lints%2Fsrc%2Fshadow.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2677a4ef02ce309be49643ad7cd0beab6375a0f3/clippy_lints%2Fsrc%2Fshadow.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fshadow.rs?ref=2677a4ef02ce309be49643ad7cd0beab6375a0f3", "patch": "@@ -1,11 +1,10 @@\n use crate::reexport::*;\n use crate::utils::{contains_name, higher, iter_input_pats, snippet, span_lint_and_then};\n-use rustc::declare_lint_pass;\n-use rustc::lint::{in_external_macro, LateContext, LateLintPass, LintArray, LintContext, LintPass};\n+use rustc::lint::{in_external_macro, LateContext, LateLintPass, LintContext};\n use rustc::ty;\n use rustc_hir::intravisit::FnKind;\n use rustc_hir::*;\n-use rustc_session::declare_tool_lint;\n+use rustc_session::{declare_lint_pass, declare_tool_lint};\n use rustc_span::source_map::Span;\n \n declare_clippy_lint! {"}, {"sha": "9e178a705344989b48316d21bc740056ac99eb94", "filename": "clippy_lints/src/slow_vector_initialization.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/2677a4ef02ce309be49643ad7cd0beab6375a0f3/clippy_lints%2Fsrc%2Fslow_vector_initialization.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2677a4ef02ce309be49643ad7cd0beab6375a0f3/clippy_lints%2Fsrc%2Fslow_vector_initialization.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fslow_vector_initialization.rs?ref=2677a4ef02ce309be49643ad7cd0beab6375a0f3", "patch": "@@ -1,13 +1,12 @@\n use crate::utils::sugg::Sugg;\n use crate::utils::{get_enclosing_block, match_qpath, span_lint_and_then, SpanlessEq};\n use if_chain::if_chain;\n-use rustc::declare_lint_pass;\n use rustc::hir::map::Map;\n-use rustc::lint::{LateContext, LateLintPass, Lint, LintArray, LintPass};\n+use rustc::lint::{LateContext, LateLintPass, Lint};\n use rustc_errors::Applicability;\n use rustc_hir::intravisit::{walk_block, walk_expr, walk_stmt, NestedVisitorMap, Visitor};\n use rustc_hir::*;\n-use rustc_session::declare_tool_lint;\n+use rustc_session::{declare_lint_pass, declare_tool_lint};\n use rustc_span::symbol::Symbol;\n use syntax::ast::LitKind;\n "}, {"sha": "eda00d5c2f1b555d2455eb4a5bb9f5c9c081b350", "filename": "clippy_lints/src/strings.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/2677a4ef02ce309be49643ad7cd0beab6375a0f3/clippy_lints%2Fsrc%2Fstrings.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2677a4ef02ce309be49643ad7cd0beab6375a0f3/clippy_lints%2Fsrc%2Fstrings.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fstrings.rs?ref=2677a4ef02ce309be49643ad7cd0beab6375a0f3", "patch": "@@ -1,8 +1,7 @@\n-use rustc::declare_lint_pass;\n-use rustc::lint::{in_external_macro, LateContext, LateLintPass, LintArray, LintContext, LintPass};\n+use rustc::lint::{in_external_macro, LateContext, LateLintPass, LintContext};\n use rustc_errors::Applicability;\n use rustc_hir::*;\n-use rustc_session::declare_tool_lint;\n+use rustc_session::{declare_lint_pass, declare_tool_lint};\n use rustc_span::source_map::Spanned;\n \n use if_chain::if_chain;"}, {"sha": "28cf80491de5998df6b08f371d400b18106dd58c", "filename": "clippy_lints/src/suspicious_trait_impl.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/2677a4ef02ce309be49643ad7cd0beab6375a0f3/clippy_lints%2Fsrc%2Fsuspicious_trait_impl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2677a4ef02ce309be49643ad7cd0beab6375a0f3/clippy_lints%2Fsrc%2Fsuspicious_trait_impl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fsuspicious_trait_impl.rs?ref=2677a4ef02ce309be49643ad7cd0beab6375a0f3", "patch": "@@ -1,11 +1,10 @@\n use crate::utils::{get_trait_def_id, span_lint, trait_ref_of_method};\n use if_chain::if_chain;\n-use rustc::declare_lint_pass;\n use rustc::hir::map::Map;\n-use rustc::lint::{LateContext, LateLintPass, LintArray, LintPass};\n+use rustc::lint::{LateContext, LateLintPass};\n use rustc_hir as hir;\n use rustc_hir::intravisit::{walk_expr, NestedVisitorMap, Visitor};\n-use rustc_session::declare_tool_lint;\n+use rustc_session::{declare_lint_pass, declare_tool_lint};\n \n declare_clippy_lint! {\n     /// **What it does:** Lints for suspicious operations in impls of arithmetic operators, e.g."}, {"sha": "7587d1ec271b7819c9733452ffca60c0c1809ce3", "filename": "clippy_lints/src/swap.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/2677a4ef02ce309be49643ad7cd0beab6375a0f3/clippy_lints%2Fsrc%2Fswap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2677a4ef02ce309be49643ad7cd0beab6375a0f3/clippy_lints%2Fsrc%2Fswap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fswap.rs?ref=2677a4ef02ce309be49643ad7cd0beab6375a0f3", "patch": "@@ -5,12 +5,11 @@ use crate::utils::{\n };\n use if_chain::if_chain;\n use matches::matches;\n-use rustc::declare_lint_pass;\n-use rustc::lint::{LateContext, LateLintPass, LintArray, LintPass};\n+use rustc::lint::{LateContext, LateLintPass};\n use rustc::ty;\n use rustc_errors::Applicability;\n use rustc_hir::*;\n-use rustc_session::declare_tool_lint;\n+use rustc_session::{declare_lint_pass, declare_tool_lint};\n use rustc_span::Symbol;\n \n declare_clippy_lint! {"}, {"sha": "2043f307d8bf5aa08052a7b9dc0d675fdf3264fe", "filename": "clippy_lints/src/tabs_in_doc_comments.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/2677a4ef02ce309be49643ad7cd0beab6375a0f3/clippy_lints%2Fsrc%2Ftabs_in_doc_comments.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2677a4ef02ce309be49643ad7cd0beab6375a0f3/clippy_lints%2Fsrc%2Ftabs_in_doc_comments.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Ftabs_in_doc_comments.rs?ref=2677a4ef02ce309be49643ad7cd0beab6375a0f3", "patch": "@@ -1,8 +1,7 @@\n use crate::utils::span_lint_and_sugg;\n-use rustc::declare_lint_pass;\n-use rustc::lint::{EarlyContext, EarlyLintPass, LintArray, LintPass};\n+use rustc::lint::{EarlyContext, EarlyLintPass};\n use rustc_errors::Applicability;\n-use rustc_session::declare_tool_lint;\n+use rustc_session::{declare_lint_pass, declare_tool_lint};\n use rustc_span::source_map::{BytePos, Span};\n use std::convert::TryFrom;\n use syntax::ast;"}, {"sha": "5b1350bbcb90aab1c11cbd1dfed3faf1bc87a690", "filename": "clippy_lints/src/temporary_assignment.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/2677a4ef02ce309be49643ad7cd0beab6375a0f3/clippy_lints%2Fsrc%2Ftemporary_assignment.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2677a4ef02ce309be49643ad7cd0beab6375a0f3/clippy_lints%2Fsrc%2Ftemporary_assignment.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Ftemporary_assignment.rs?ref=2677a4ef02ce309be49643ad7cd0beab6375a0f3", "patch": "@@ -1,10 +1,9 @@\n use crate::utils::is_adjusted;\n use crate::utils::span_lint;\n-use rustc::declare_lint_pass;\n-use rustc::lint::{LateContext, LateLintPass, LintArray, LintPass};\n+use rustc::lint::{LateContext, LateLintPass};\n use rustc_hir::def::{DefKind, Res};\n use rustc_hir::{Expr, ExprKind};\n-use rustc_session::declare_tool_lint;\n+use rustc_session::{declare_lint_pass, declare_tool_lint};\n \n declare_clippy_lint! {\n     /// **What it does:** Checks for construction of a structure or tuple just to"}, {"sha": "c1373b24ad2a514ecc3cdaf37887a5e89779dd13", "filename": "clippy_lints/src/to_digit_is_some.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/2677a4ef02ce309be49643ad7cd0beab6375a0f3/clippy_lints%2Fsrc%2Fto_digit_is_some.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2677a4ef02ce309be49643ad7cd0beab6375a0f3/clippy_lints%2Fsrc%2Fto_digit_is_some.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fto_digit_is_some.rs?ref=2677a4ef02ce309be49643ad7cd0beab6375a0f3", "patch": "@@ -1,11 +1,10 @@\n use crate::utils::{match_def_path, snippet_with_applicability, span_lint_and_sugg};\n use if_chain::if_chain;\n-use rustc::declare_lint_pass;\n-use rustc::lint::{LateContext, LateLintPass, LintArray, LintPass};\n+use rustc::lint::{LateContext, LateLintPass};\n use rustc::ty;\n use rustc_errors::Applicability;\n use rustc_hir as hir;\n-use rustc_session::declare_tool_lint;\n+use rustc_session::{declare_lint_pass, declare_tool_lint};\n \n declare_clippy_lint! {\n     /// **What it does:** Checks for `.to_digit(..).is_some()` on `char`s."}, {"sha": "897883a1c0487d7ea2813037b5000d1d02c07b3e", "filename": "clippy_lints/src/trait_bounds.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/2677a4ef02ce309be49643ad7cd0beab6375a0f3/clippy_lints%2Fsrc%2Ftrait_bounds.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2677a4ef02ce309be49643ad7cd0beab6375a0f3/clippy_lints%2Fsrc%2Ftrait_bounds.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Ftrait_bounds.rs?ref=2677a4ef02ce309be49643ad7cd0beab6375a0f3", "patch": "@@ -1,9 +1,8 @@\n use crate::utils::{in_macro, snippet, span_help_and_lint, SpanlessHash};\n-use rustc::impl_lint_pass;\n-use rustc::lint::{LateContext, LateLintPass, LintArray, LintPass};\n+use rustc::lint::{LateContext, LateLintPass};\n use rustc_data_structures::fx::FxHashMap;\n use rustc_hir::*;\n-use rustc_session::declare_tool_lint;\n+use rustc_session::{declare_tool_lint, impl_lint_pass};\n \n #[derive(Copy, Clone)]\n pub struct TraitBounds;"}, {"sha": "667959acc388a5c37cb2461c2b807e3b1ee92de8", "filename": "clippy_lints/src/transmute.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/2677a4ef02ce309be49643ad7cd0beab6375a0f3/clippy_lints%2Fsrc%2Ftransmute.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2677a4ef02ce309be49643ad7cd0beab6375a0f3/clippy_lints%2Fsrc%2Ftransmute.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Ftransmute.rs?ref=2677a4ef02ce309be49643ad7cd0beab6375a0f3", "patch": "@@ -2,12 +2,11 @@ use crate::utils::{\n     is_normalizable, last_path_segment, match_def_path, paths, snippet, span_lint, span_lint_and_then, sugg,\n };\n use if_chain::if_chain;\n-use rustc::declare_lint_pass;\n-use rustc::lint::{LateContext, LateLintPass, LintArray, LintPass};\n+use rustc::lint::{LateContext, LateLintPass};\n use rustc::ty::{self, Ty};\n use rustc_errors::Applicability;\n use rustc_hir::*;\n-use rustc_session::declare_tool_lint;\n+use rustc_session::{declare_lint_pass, declare_tool_lint};\n use std::borrow::Cow;\n use syntax::ast;\n "}, {"sha": "056b3669bcb1af3abd31ace0f1f17b2fe165dab8", "filename": "clippy_lints/src/transmuting_null.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/2677a4ef02ce309be49643ad7cd0beab6375a0f3/clippy_lints%2Fsrc%2Ftransmuting_null.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2677a4ef02ce309be49643ad7cd0beab6375a0f3/clippy_lints%2Fsrc%2Ftransmuting_null.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Ftransmuting_null.rs?ref=2677a4ef02ce309be49643ad7cd0beab6375a0f3", "patch": "@@ -1,10 +1,9 @@\n use crate::consts::{constant_context, Constant};\n use crate::utils::{match_qpath, paths, span_lint};\n use if_chain::if_chain;\n-use rustc::declare_lint_pass;\n-use rustc::lint::{in_external_macro, LateContext, LateLintPass, LintArray, LintContext, LintPass};\n+use rustc::lint::{in_external_macro, LateContext, LateLintPass, LintContext};\n use rustc_hir::{Expr, ExprKind};\n-use rustc_session::declare_tool_lint;\n+use rustc_session::{declare_lint_pass, declare_tool_lint};\n use syntax::ast::LitKind;\n \n declare_clippy_lint! {"}, {"sha": "33738492244c3d5c4f219234de8118b6dbb058c7", "filename": "clippy_lints/src/trivially_copy_pass_by_ref.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/2677a4ef02ce309be49643ad7cd0beab6375a0f3/clippy_lints%2Fsrc%2Ftrivially_copy_pass_by_ref.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2677a4ef02ce309be49643ad7cd0beab6375a0f3/clippy_lints%2Fsrc%2Ftrivially_copy_pass_by_ref.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Ftrivially_copy_pass_by_ref.rs?ref=2677a4ef02ce309be49643ad7cd0beab6375a0f3", "patch": "@@ -3,15 +3,14 @@ use std::cmp;\n use crate::utils::{is_copy, is_self_ty, snippet, span_lint_and_sugg};\n use if_chain::if_chain;\n use matches::matches;\n-use rustc::impl_lint_pass;\n-use rustc::lint::{LateContext, LateLintPass, LintArray, LintPass};\n+use rustc::lint::{LateContext, LateLintPass};\n use rustc::session::config::Config as SessionConfig;\n use rustc::ty;\n use rustc_errors::Applicability;\n use rustc_hir as hir;\n use rustc_hir::intravisit::FnKind;\n use rustc_hir::*;\n-use rustc_session::declare_tool_lint;\n+use rustc_session::{declare_tool_lint, impl_lint_pass};\n use rustc_span::Span;\n use rustc_target::abi::LayoutOf;\n use rustc_target::spec::abi::Abi;"}, {"sha": "e407f225faad7ad3568328740a52fdda518b9713", "filename": "clippy_lints/src/try_err.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/2677a4ef02ce309be49643ad7cd0beab6375a0f3/clippy_lints%2Fsrc%2Ftry_err.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2677a4ef02ce309be49643ad7cd0beab6375a0f3/clippy_lints%2Fsrc%2Ftry_err.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Ftry_err.rs?ref=2677a4ef02ce309be49643ad7cd0beab6375a0f3", "patch": "@@ -1,11 +1,10 @@\n use crate::utils::{match_qpath, paths, snippet, snippet_with_macro_callsite, span_lint_and_sugg};\n use if_chain::if_chain;\n-use rustc::declare_lint_pass;\n-use rustc::lint::{in_external_macro, LateContext, LateLintPass, LintArray, LintPass};\n+use rustc::lint::{in_external_macro, LateContext, LateLintPass};\n use rustc::ty::Ty;\n use rustc_errors::Applicability;\n use rustc_hir::*;\n-use rustc_session::declare_tool_lint;\n+use rustc_session::{declare_lint_pass, declare_tool_lint};\n \n declare_clippy_lint! {\n     /// **What it does:** Checks for usages of `Err(x)?`."}, {"sha": "db5b6c21655a65d5310a8233e0164b1887e93416", "filename": "clippy_lints/src/types.rs", "status": "modified", "additions": 3, "deletions": 5, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/2677a4ef02ce309be49643ad7cd0beab6375a0f3/clippy_lints%2Fsrc%2Ftypes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2677a4ef02ce309be49643ad7cd0beab6375a0f3/clippy_lints%2Fsrc%2Ftypes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Ftypes.rs?ref=2677a4ef02ce309be49643ad7cd0beab6375a0f3", "patch": "@@ -6,22 +6,20 @@ use std::collections::BTreeMap;\n \n use if_chain::if_chain;\n use rustc::hir::map::Map;\n-use rustc::lint::{in_external_macro, LateContext, LateLintPass, LintArray, LintContext, LintPass};\n+use rustc::lint::{in_external_macro, LateContext, LateLintPass, LintContext};\n use rustc::ty::layout::LayoutOf;\n use rustc::ty::{self, InferTy, Ty, TyCtxt, TypeckTables};\n-use rustc::{declare_lint_pass, impl_lint_pass};\n-use rustc_errors::Applicability;\n+use rustc_errors::{Applicability, DiagnosticBuilder};\n use rustc_hir as hir;\n use rustc_hir::intravisit::{walk_body, walk_expr, walk_ty, FnKind, NestedVisitorMap, Visitor};\n use rustc_hir::*;\n-use rustc_session::declare_tool_lint;\n+use rustc_session::{declare_lint_pass, declare_tool_lint, impl_lint_pass};\n use rustc_span::hygiene::{ExpnKind, MacroKind};\n use rustc_span::source_map::Span;\n use rustc_span::symbol::{sym, Symbol};\n use rustc_target::spec::abi::Abi;\n use rustc_typeck::hir_ty_to_ty;\n use syntax::ast::{FloatTy, IntTy, LitFloatType, LitIntType, LitKind, UintTy};\n-use syntax::errors::DiagnosticBuilder;\n \n use crate::consts::{constant, Constant};\n use crate::utils::paths;"}, {"sha": "e0187e05a32ee4925a47ce450e1129c3d4e178a4", "filename": "clippy_lints/src/unicode.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/2677a4ef02ce309be49643ad7cd0beab6375a0f3/clippy_lints%2Fsrc%2Funicode.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2677a4ef02ce309be49643ad7cd0beab6375a0f3/clippy_lints%2Fsrc%2Funicode.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Funicode.rs?ref=2677a4ef02ce309be49643ad7cd0beab6375a0f3", "patch": "@@ -1,9 +1,8 @@\n use crate::utils::{is_allowed, snippet, span_lint_and_sugg};\n-use rustc::declare_lint_pass;\n-use rustc::lint::{LateContext, LateLintPass, LintArray, LintPass};\n+use rustc::lint::{LateContext, LateLintPass};\n use rustc_errors::Applicability;\n use rustc_hir::*;\n-use rustc_session::declare_tool_lint;\n+use rustc_session::{declare_lint_pass, declare_tool_lint};\n use rustc_span::source_map::Span;\n use syntax::ast::LitKind;\n use unicode_normalization::UnicodeNormalization;"}, {"sha": "6a77cb8f8180491ba88d0c619de438b32e5bf150", "filename": "clippy_lints/src/unsafe_removed_from_name.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/2677a4ef02ce309be49643ad7cd0beab6375a0f3/clippy_lints%2Fsrc%2Funsafe_removed_from_name.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2677a4ef02ce309be49643ad7cd0beab6375a0f3/clippy_lints%2Fsrc%2Funsafe_removed_from_name.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Funsafe_removed_from_name.rs?ref=2677a4ef02ce309be49643ad7cd0beab6375a0f3", "patch": "@@ -1,7 +1,6 @@\n use crate::utils::span_lint;\n-use rustc::declare_lint_pass;\n-use rustc::lint::{EarlyContext, EarlyLintPass, LintArray, LintPass};\n-use rustc_session::declare_tool_lint;\n+use rustc::lint::{EarlyContext, EarlyLintPass};\n+use rustc_session::{declare_lint_pass, declare_tool_lint};\n use rustc_span::source_map::Span;\n use rustc_span::symbol::SymbolStr;\n use syntax::ast::*;"}, {"sha": "c89e0696541f0ff9c7f4a1d468bfea38b9a84661", "filename": "clippy_lints/src/unused_io_amount.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/2677a4ef02ce309be49643ad7cd0beab6375a0f3/clippy_lints%2Fsrc%2Funused_io_amount.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2677a4ef02ce309be49643ad7cd0beab6375a0f3/clippy_lints%2Fsrc%2Funused_io_amount.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Funused_io_amount.rs?ref=2677a4ef02ce309be49643ad7cd0beab6375a0f3", "patch": "@@ -1,8 +1,7 @@\n use crate::utils::{is_try, match_qpath, match_trait_method, paths, span_lint};\n-use rustc::declare_lint_pass;\n-use rustc::lint::{LateContext, LateLintPass, LintArray, LintPass};\n+use rustc::lint::{LateContext, LateLintPass};\n use rustc_hir as hir;\n-use rustc_session::declare_tool_lint;\n+use rustc_session::{declare_lint_pass, declare_tool_lint};\n \n declare_clippy_lint! {\n     /// **What it does:** Checks for unused written/read amount."}, {"sha": "78707b30690375881aad6fa3e75b5c2c1d6f36e1", "filename": "clippy_lints/src/unused_self.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/2677a4ef02ce309be49643ad7cd0beab6375a0f3/clippy_lints%2Fsrc%2Funused_self.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2677a4ef02ce309be49643ad7cd0beab6375a0f3/clippy_lints%2Fsrc%2Funused_self.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Funused_self.rs?ref=2677a4ef02ce309be49643ad7cd0beab6375a0f3", "patch": "@@ -1,11 +1,10 @@\n use if_chain::if_chain;\n-use rustc::declare_lint_pass;\n use rustc::hir::map::Map;\n-use rustc::lint::{LateContext, LateLintPass, LintArray, LintPass};\n+use rustc::lint::{LateContext, LateLintPass};\n use rustc_hir::def::Res;\n use rustc_hir::intravisit::{walk_path, NestedVisitorMap, Visitor};\n use rustc_hir::{AssocItemKind, HirId, ImplItemKind, ImplItemRef, Item, ItemKind, Path};\n-use rustc_session::declare_tool_lint;\n+use rustc_session::{declare_lint_pass, declare_tool_lint};\n \n use crate::utils::span_help_and_lint;\n "}, {"sha": "78bb478c6a92d12a155df94f77e699724bc563e9", "filename": "clippy_lints/src/unwrap.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/2677a4ef02ce309be49643ad7cd0beab6375a0f3/clippy_lints%2Fsrc%2Funwrap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2677a4ef02ce309be49643ad7cd0beab6375a0f3/clippy_lints%2Fsrc%2Funwrap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Funwrap.rs?ref=2677a4ef02ce309be49643ad7cd0beab6375a0f3", "patch": "@@ -1,11 +1,10 @@\n use crate::utils::{higher::if_block, match_type, paths, span_lint_and_then, usage::is_potentially_mutated};\n use if_chain::if_chain;\n-use rustc::declare_lint_pass;\n use rustc::hir::map::Map;\n-use rustc::lint::{LateContext, LateLintPass, LintArray, LintPass};\n+use rustc::lint::{LateContext, LateLintPass};\n use rustc_hir::intravisit::*;\n use rustc_hir::*;\n-use rustc_session::declare_tool_lint;\n+use rustc_session::{declare_lint_pass, declare_tool_lint};\n use rustc_span::source_map::Span;\n \n declare_clippy_lint! {"}, {"sha": "2b8c51555116c7ced45ee3e9c90c80b18645f6b8", "filename": "clippy_lints/src/use_self.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/2677a4ef02ce309be49643ad7cd0beab6375a0f3/clippy_lints%2Fsrc%2Fuse_self.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2677a4ef02ce309be49643ad7cd0beab6375a0f3/clippy_lints%2Fsrc%2Fuse_self.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fuse_self.rs?ref=2677a4ef02ce309be49643ad7cd0beab6375a0f3", "patch": "@@ -1,15 +1,14 @@\n use if_chain::if_chain;\n-use rustc::declare_lint_pass;\n use rustc::hir::map::Map;\n-use rustc::lint::{in_external_macro, LateContext, LateLintPass, LintArray, LintContext, LintPass};\n+use rustc::lint::{in_external_macro, LateContext, LateLintPass, LintContext};\n use rustc::ty;\n use rustc::ty::{DefIdTree, Ty};\n use rustc_errors::Applicability;\n use rustc_hir as hir;\n use rustc_hir::def::{DefKind, Res};\n use rustc_hir::intravisit::{walk_item, walk_path, walk_ty, NestedVisitorMap, Visitor};\n use rustc_hir::*;\n-use rustc_session::declare_tool_lint;\n+use rustc_session::{declare_lint_pass, declare_tool_lint};\n use rustc_span::symbol::kw;\n \n use crate::utils::{differing_macro_contexts, span_lint_and_sugg};"}, {"sha": "591cf14b7183171d1f10819f3f50afb60d5cca86", "filename": "clippy_lints/src/utils/author.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/2677a4ef02ce309be49643ad7cd0beab6375a0f3/clippy_lints%2Fsrc%2Futils%2Fauthor.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2677a4ef02ce309be49643ad7cd0beab6375a0f3/clippy_lints%2Fsrc%2Futils%2Fauthor.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Futils%2Fauthor.rs?ref=2677a4ef02ce309be49643ad7cd0beab6375a0f3", "patch": "@@ -2,16 +2,16 @@\n //! to generate a clippy lint detecting said code automatically.\n \n use crate::utils::{get_attr, higher};\n-use rustc::declare_lint_pass;\n use rustc::hir::map::Map;\n-use rustc::lint::{LateContext, LateLintPass, LintArray, LintContext, LintPass};\n+use rustc::lint::{LateContext, LateLintPass, LintContext};\n use rustc::session::Session;\n use rustc_data_structures::fx::FxHashMap;\n use rustc_hir as hir;\n use rustc_hir::intravisit::{NestedVisitorMap, Visitor};\n use rustc_hir::{BindingAnnotation, Block, Expr, ExprKind, Pat, PatKind, QPath, Stmt, StmtKind, TyKind};\n-use rustc_session::declare_tool_lint;\n+use rustc_session::{declare_lint_pass, declare_tool_lint};\n use syntax::ast::{Attribute, LitFloatType, LitKind};\n+use syntax::walk_list;\n \n declare_clippy_lint! {\n     /// **What it does:** Generates clippy code that detects the offending pattern\n@@ -617,9 +617,9 @@ impl<'tcx> Visitor<'tcx> for PrintVisitor {\n                     start_pat, end_pat, end_kind, current\n                 );\n                 self.current = start_pat;\n-                self.visit_expr(start);\n+                walk_list!(self, visit_expr, start);\n                 self.current = end_pat;\n-                self.visit_expr(end);\n+                walk_list!(self, visit_expr, end);\n             },\n             PatKind::Slice(ref start, ref middle, ref end) => {\n                 let start_pat = self.next(\"start\");"}, {"sha": "2e586e738f62a0a40bed497a12a24bb63e5d0940", "filename": "clippy_lints/src/utils/diagnostics.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/2677a4ef02ce309be49643ad7cd0beab6375a0f3/clippy_lints%2Fsrc%2Futils%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2677a4ef02ce309be49643ad7cd0beab6375a0f3/clippy_lints%2Fsrc%2Futils%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Futils%2Fdiagnostics.rs?ref=2677a4ef02ce309be49643ad7cd0beab6375a0f3", "patch": "@@ -1,11 +1,10 @@\n //! Clippy wrappers around rustc's diagnostic functions.\n \n use rustc::lint::{LateContext, Lint, LintContext};\n-use rustc_errors::{Applicability, CodeSuggestion, Substitution, SubstitutionPart, SuggestionStyle};\n+use rustc_errors::{Applicability, CodeSuggestion, DiagnosticBuilder, Substitution, SubstitutionPart, SuggestionStyle};\n use rustc_hir::HirId;\n use rustc_span::source_map::{MultiSpan, Span};\n use std::env;\n-use syntax::errors::DiagnosticBuilder;\n \n /// Wrapper around `DiagnosticBuilder` that adds a link to Clippy documentation for the emitted lint\n struct DiagnosticWrapper<'a>(DiagnosticBuilder<'a>);"}, {"sha": "01f719f4ab88ddb9fbe5d57d76b934470235ea4a", "filename": "clippy_lints/src/utils/hir_utils.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/2677a4ef02ce309be49643ad7cd0beab6375a0f3/clippy_lints%2Fsrc%2Futils%2Fhir_utils.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2677a4ef02ce309be49643ad7cd0beab6375a0f3/clippy_lints%2Fsrc%2Futils%2Fhir_utils.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Futils%2Fhir_utils.rs?ref=2677a4ef02ce309be49643ad7cd0beab6375a0f3", "patch": "@@ -194,8 +194,8 @@ impl<'a, 'tcx> SpanlessEq<'a, 'tcx> {\n             (&PatKind::Tuple(ref l, ls), &PatKind::Tuple(ref r, rs)) => {\n                 ls == rs && over(l, r, |l, r| self.eq_pat(l, r))\n             },\n-            (&PatKind::Range(ref ls, ref le, ref li), &PatKind::Range(ref rs, ref re, ref ri)) => {\n-                self.eq_expr(ls, rs) && self.eq_expr(le, re) && (*li == *ri)\n+            (&PatKind::Range(ref ls, ref le, li), &PatKind::Range(ref rs, ref re, ri)) => {\n+                both(ls, rs, |a, b| self.eq_expr(a, b)) && both(le, re, |a, b| self.eq_expr(a, b)) && (li == ri)\n             },\n             (&PatKind::Ref(ref le, ref lm), &PatKind::Ref(ref re, ref rm)) => lm == rm && self.eq_pat(le, re),\n             (&PatKind::Slice(ref ls, ref li, ref le), &PatKind::Slice(ref rs, ref ri, ref re)) => {"}, {"sha": "3316ad6da509724d0dbe43f289885edc0d327255", "filename": "clippy_lints/src/utils/inspector.rs", "status": "modified", "additions": 8, "deletions": 5, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/2677a4ef02ce309be49643ad7cd0beab6375a0f3/clippy_lints%2Fsrc%2Futils%2Finspector.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2677a4ef02ce309be49643ad7cd0beab6375a0f3/clippy_lints%2Fsrc%2Futils%2Finspector.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Futils%2Finspector.rs?ref=2677a4ef02ce309be49643ad7cd0beab6375a0f3", "patch": "@@ -1,12 +1,11 @@\n //! checks for attributes\n \n use crate::utils::get_attr;\n-use rustc::declare_lint_pass;\n-use rustc::lint::{LateContext, LateLintPass, LintArray, LintContext, LintPass};\n+use rustc::lint::{LateContext, LateLintPass, LintContext};\n use rustc::session::Session;\n use rustc_hir as hir;\n use rustc_hir::print;\n-use rustc_session::declare_tool_lint;\n+use rustc_session::{declare_lint_pass, declare_tool_lint};\n use syntax::ast::Attribute;\n \n declare_clippy_lint! {\n@@ -483,8 +482,12 @@ fn print_pat(cx: &LateContext<'_, '_>, pat: &hir::Pat<'_>, indent: usize) {\n         },\n         hir::PatKind::Range(ref l, ref r, ref range_end) => {\n             println!(\"{}Range\", ind);\n-            print_expr(cx, l, indent + 1);\n-            print_expr(cx, r, indent + 1);\n+            if let Some(expr) = l {\n+                print_expr(cx, expr, indent + 1);\n+            }\n+            if let Some(expr) = r {\n+                print_expr(cx, expr, indent + 1);\n+            }\n             match *range_end {\n                 hir::RangeEnd::Included => println!(\"{} end included\", ind),\n                 hir::RangeEnd::Excluded => println!(\"{} end excluded\", ind),"}, {"sha": "bd5228367e68e885249fcf874a4166fc0d898302", "filename": "clippy_lints/src/utils/internal_lints.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/2677a4ef02ce309be49643ad7cd0beab6375a0f3/clippy_lints%2Fsrc%2Futils%2Finternal_lints.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2677a4ef02ce309be49643ad7cd0beab6375a0f3/clippy_lints%2Fsrc%2Futils%2Finternal_lints.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Futils%2Finternal_lints.rs?ref=2677a4ef02ce309be49643ad7cd0beab6375a0f3", "patch": "@@ -4,15 +4,15 @@ use crate::utils::{\n };\n use if_chain::if_chain;\n use rustc::hir::map::Map;\n-use rustc::lint::{EarlyContext, EarlyLintPass, LateContext, LateLintPass, LintArray, LintPass};\n-use rustc::{declare_lint_pass, impl_lint_pass};\n+use rustc::lint::{EarlyContext, EarlyLintPass, LateContext, LateLintPass};\n use rustc_data_structures::fx::{FxHashMap, FxHashSet};\n use rustc_errors::Applicability;\n use rustc_hir as hir;\n use rustc_hir::def::{DefKind, Res};\n use rustc_hir::intravisit::{walk_expr, NestedVisitorMap, Visitor};\n use rustc_hir::*;\n use rustc_session::declare_tool_lint;\n+use rustc_session::{declare_lint_pass, impl_lint_pass};\n use rustc_span::source_map::Span;\n use rustc_span::symbol::SymbolStr;\n use syntax::ast;"}, {"sha": "ef6c1359ac363f80ff83c9004ffe8e36a5717af6", "filename": "clippy_lints/src/vec.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/2677a4ef02ce309be49643ad7cd0beab6375a0f3/clippy_lints%2Fsrc%2Fvec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2677a4ef02ce309be49643ad7cd0beab6375a0f3/clippy_lints%2Fsrc%2Fvec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fvec.rs?ref=2677a4ef02ce309be49643ad7cd0beab6375a0f3", "patch": "@@ -1,12 +1,11 @@\n use crate::consts::constant;\n use crate::utils::{higher, is_copy, snippet_with_applicability, span_lint_and_sugg};\n use if_chain::if_chain;\n-use rustc::declare_lint_pass;\n-use rustc::lint::{LateContext, LateLintPass, LintArray, LintPass};\n+use rustc::lint::{LateContext, LateLintPass};\n use rustc::ty::{self, Ty};\n use rustc_errors::Applicability;\n use rustc_hir::*;\n-use rustc_session::declare_tool_lint;\n+use rustc_session::{declare_lint_pass, declare_tool_lint};\n use rustc_span::source_map::Span;\n \n declare_clippy_lint! {"}, {"sha": "3b2231cef4730d44b7687e5bdf8044472551584b", "filename": "clippy_lints/src/wildcard_dependencies.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/2677a4ef02ce309be49643ad7cd0beab6375a0f3/clippy_lints%2Fsrc%2Fwildcard_dependencies.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2677a4ef02ce309be49643ad7cd0beab6375a0f3/clippy_lints%2Fsrc%2Fwildcard_dependencies.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fwildcard_dependencies.rs?ref=2677a4ef02ce309be49643ad7cd0beab6375a0f3", "patch": "@@ -1,7 +1,6 @@\n use crate::utils::span_lint;\n-use rustc::declare_lint_pass;\n-use rustc::lint::{EarlyContext, EarlyLintPass, LintArray, LintPass};\n-use rustc_session::declare_tool_lint;\n+use rustc::lint::{EarlyContext, EarlyLintPass};\n+use rustc_session::{declare_lint_pass, declare_tool_lint};\n use rustc_span::source_map::DUMMY_SP;\n use syntax::ast::*;\n "}, {"sha": "6dfbbbc79144bd94f2833ca48604dad561f01b26", "filename": "clippy_lints/src/write.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/2677a4ef02ce309be49643ad7cd0beab6375a0f3/clippy_lints%2Fsrc%2Fwrite.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2677a4ef02ce309be49643ad7cd0beab6375a0f3/clippy_lints%2Fsrc%2Fwrite.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fwrite.rs?ref=2677a4ef02ce309be49643ad7cd0beab6375a0f3", "patch": "@@ -2,12 +2,11 @@ use std::borrow::Cow;\n use std::ops::Range;\n \n use crate::utils::{snippet_with_applicability, span_lint, span_lint_and_sugg, span_lint_and_then};\n-use rustc::declare_lint_pass;\n-use rustc::lint::{EarlyContext, EarlyLintPass, LintArray, LintPass};\n+use rustc::lint::{EarlyContext, EarlyLintPass};\n use rustc_errors::Applicability;\n use rustc_lexer::unescape::{self, EscapeError};\n use rustc_parse::parser;\n-use rustc_session::declare_tool_lint;\n+use rustc_session::{declare_lint_pass, declare_tool_lint};\n use rustc_span::symbol::Symbol;\n use rustc_span::{BytePos, Span};\n use syntax::ast::*;"}, {"sha": "c9ef09f29a13d8ef716ad267a0ae1cf295c956b0", "filename": "clippy_lints/src/zero_div_zero.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/2677a4ef02ce309be49643ad7cd0beab6375a0f3/clippy_lints%2Fsrc%2Fzero_div_zero.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2677a4ef02ce309be49643ad7cd0beab6375a0f3/clippy_lints%2Fsrc%2Fzero_div_zero.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fzero_div_zero.rs?ref=2677a4ef02ce309be49643ad7cd0beab6375a0f3", "patch": "@@ -1,10 +1,9 @@\n use crate::consts::{constant_simple, Constant};\n use crate::utils::span_help_and_lint;\n use if_chain::if_chain;\n-use rustc::declare_lint_pass;\n-use rustc::lint::{LateContext, LateLintPass, LintArray, LintPass};\n+use rustc::lint::{LateContext, LateLintPass};\n use rustc_hir::*;\n-use rustc_session::declare_tool_lint;\n+use rustc_session::{declare_lint_pass, declare_tool_lint};\n \n declare_clippy_lint! {\n     /// **What it does:** Checks for `0.0 / 0.0`."}, {"sha": "45b80a6b0c1230e38b47c3d449091112b56f7c5f", "filename": "doc/adding_lints.md", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/2677a4ef02ce309be49643ad7cd0beab6375a0f3/doc%2Fadding_lints.md", "raw_url": "https://github.com/rust-lang/rust/raw/2677a4ef02ce309be49643ad7cd0beab6375a0f3/doc%2Fadding_lints.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/doc%2Fadding_lints.md?ref=2677a4ef02ce309be49643ad7cd0beab6375a0f3", "patch": "@@ -127,8 +127,7 @@ where all the lint code is. We are going to call the file\n \n ```rust\n use rustc::lint::{LintArray, LintPass, EarlyLintPass};\n-use rustc::declare_lint_pass;\n-use rustc_session::declare_tool_lint;\n+use rustc_session::{declare_lint_pass, declare_tool_lint};\n ```\n \n The next step is to provide a lint declaration. Lints are declared using the"}, {"sha": "97789bb766f891027817d4c65204c23377adef18", "filename": "tests/ui/match_overlapping_arm.rs", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/2677a4ef02ce309be49643ad7cd0beab6375a0f3/tests%2Fui%2Fmatch_overlapping_arm.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2677a4ef02ce309be49643ad7cd0beab6375a0f3/tests%2Fui%2Fmatch_overlapping_arm.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmatch_overlapping_arm.rs?ref=2677a4ef02ce309be49643ad7cd0beab6375a0f3", "patch": "@@ -1,4 +1,5 @@\n #![feature(exclusive_range_pattern)]\n+#![feature(half_open_range_patterns)]\n #![warn(clippy::match_overlapping_arm)]\n #![allow(clippy::redundant_pattern_matching)]\n \n@@ -56,6 +57,21 @@ fn overlapping() {\n         _ => (),\n     }\n \n+    /*\n+    // FIXME(JohnTitor): uncomment this once rustfmt knows half-open patterns\n+    match 42 {\n+        0.. => println!(\"0 .. 42\"),\n+        3.. => println!(\"3 .. 42\"),\n+        _ => (),\n+    }\n+\n+    match 42 {\n+        ..=23 => println!(\"0 ... 23\"),\n+        ..26 => println!(\"0 .. 26\"),\n+        _ => (),\n+    }\n+    */\n+\n     if let None = Some(42) {\n         // nothing\n     } else if let None = Some(42) {"}, {"sha": "eb20d5405a95e984b19ab2712f13362e28b800a9", "filename": "tests/ui/match_overlapping_arm.stderr", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/2677a4ef02ce309be49643ad7cd0beab6375a0f3/tests%2Fui%2Fmatch_overlapping_arm.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/2677a4ef02ce309be49643ad7cd0beab6375a0f3/tests%2Fui%2Fmatch_overlapping_arm.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmatch_overlapping_arm.stderr?ref=2677a4ef02ce309be49643ad7cd0beab6375a0f3", "patch": "@@ -1,60 +1,60 @@\n error: some ranges overlap\n-  --> $DIR/match_overlapping_arm.rs:11:9\n+  --> $DIR/match_overlapping_arm.rs:12:9\n    |\n LL |         0..=10 => println!(\"0 ... 10\"),\n    |         ^^^^^^\n    |\n    = note: `-D clippy::match-overlapping-arm` implied by `-D warnings`\n note: overlaps with this\n-  --> $DIR/match_overlapping_arm.rs:12:9\n+  --> $DIR/match_overlapping_arm.rs:13:9\n    |\n LL |         0..=11 => println!(\"0 ... 11\"),\n    |         ^^^^^^\n \n error: some ranges overlap\n-  --> $DIR/match_overlapping_arm.rs:17:9\n+  --> $DIR/match_overlapping_arm.rs:18:9\n    |\n LL |         0..=5 => println!(\"0 ... 5\"),\n    |         ^^^^^\n    |\n note: overlaps with this\n-  --> $DIR/match_overlapping_arm.rs:19:9\n+  --> $DIR/match_overlapping_arm.rs:20:9\n    |\n LL |         FOO..=11 => println!(\"0 ... 11\"),\n    |         ^^^^^^^^\n \n error: some ranges overlap\n-  --> $DIR/match_overlapping_arm.rs:25:9\n+  --> $DIR/match_overlapping_arm.rs:26:9\n    |\n LL |         0..=5 => println!(\"0 ... 5\"),\n    |         ^^^^^\n    |\n note: overlaps with this\n-  --> $DIR/match_overlapping_arm.rs:24:9\n+  --> $DIR/match_overlapping_arm.rs:25:9\n    |\n LL |         2 => println!(\"2\"),\n    |         ^\n \n error: some ranges overlap\n-  --> $DIR/match_overlapping_arm.rs:31:9\n+  --> $DIR/match_overlapping_arm.rs:32:9\n    |\n LL |         0..=2 => println!(\"0 ... 2\"),\n    |         ^^^^^\n    |\n note: overlaps with this\n-  --> $DIR/match_overlapping_arm.rs:30:9\n+  --> $DIR/match_overlapping_arm.rs:31:9\n    |\n LL |         2 => println!(\"2\"),\n    |         ^\n \n error: some ranges overlap\n-  --> $DIR/match_overlapping_arm.rs:54:9\n+  --> $DIR/match_overlapping_arm.rs:55:9\n    |\n LL |         0..11 => println!(\"0 .. 11\"),\n    |         ^^^^^\n    |\n note: overlaps with this\n-  --> $DIR/match_overlapping_arm.rs:55:9\n+  --> $DIR/match_overlapping_arm.rs:56:9\n    |\n LL |         0..=11 => println!(\"0 ... 11\"),\n    |         ^^^^^^"}, {"sha": "4c9f1e482ae17edcd8e03b49c54b6ab0dea4571e", "filename": "tests/ui/outer_expn_data.fixed", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/2677a4ef02ce309be49643ad7cd0beab6375a0f3/tests%2Fui%2Fouter_expn_data.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/2677a4ef02ce309be49643ad7cd0beab6375a0f3/tests%2Fui%2Fouter_expn_data.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fouter_expn_data.fixed?ref=2677a4ef02ce309be49643ad7cd0beab6375a0f3", "patch": "@@ -3,12 +3,11 @@\n #![deny(clippy::internal)]\n #![feature(rustc_private)]\n \n-#[macro_use]\n extern crate rustc;\n extern crate rustc_hir;\n #[macro_use]\n extern crate rustc_session;\n-use rustc::lint::{LateContext, LateLintPass, LintArray, LintPass};\n+use rustc::lint::{LateContext, LateLintPass};\n use rustc_hir::Expr;\n \n declare_lint! {"}, {"sha": "b69525d04c119e1cffaebb54bf43b23cf88cb7f0", "filename": "tests/ui/outer_expn_data.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/2677a4ef02ce309be49643ad7cd0beab6375a0f3/tests%2Fui%2Fouter_expn_data.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2677a4ef02ce309be49643ad7cd0beab6375a0f3/tests%2Fui%2Fouter_expn_data.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fouter_expn_data.rs?ref=2677a4ef02ce309be49643ad7cd0beab6375a0f3", "patch": "@@ -3,12 +3,11 @@\n #![deny(clippy::internal)]\n #![feature(rustc_private)]\n \n-#[macro_use]\n extern crate rustc;\n extern crate rustc_hir;\n #[macro_use]\n extern crate rustc_session;\n-use rustc::lint::{LateContext, LateLintPass, LintArray, LintPass};\n+use rustc::lint::{LateContext, LateLintPass};\n use rustc_hir::Expr;\n \n declare_lint! {"}, {"sha": "514eb599b0616b0a5e8bb9de0e1205a008022dec", "filename": "tests/ui/outer_expn_data.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2677a4ef02ce309be49643ad7cd0beab6375a0f3/tests%2Fui%2Fouter_expn_data.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/2677a4ef02ce309be49643ad7cd0beab6375a0f3/tests%2Fui%2Fouter_expn_data.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fouter_expn_data.stderr?ref=2677a4ef02ce309be49643ad7cd0beab6375a0f3", "patch": "@@ -1,5 +1,5 @@\n error: usage of `outer_expn().expn_data()`\n-  --> $DIR/outer_expn_data.rs:24:34\n+  --> $DIR/outer_expn_data.rs:23:34\n    |\n LL |         let _ = expr.span.ctxt().outer_expn().expn_data();\n    |                                  ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `outer_expn_data()`"}]}