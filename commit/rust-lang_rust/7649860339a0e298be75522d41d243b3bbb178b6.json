{"sha": "7649860339a0e298be75522d41d243b3bbb178b6", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc2NDk4NjAzMzlhMGUyOThiZTc1NTIyZDQxZDI0M2IzYmJiMTc4YjY=", "commit": {"author": {"name": "Erick Tryzelaar", "email": "erick.tryzelaar@gmail.com", "date": "2012-08-30T22:54:05Z"}, "committer": {"name": "Erick Tryzelaar", "email": "erick.tryzelaar@gmail.com", "date": "2012-08-31T04:11:28Z"}, "message": "libcore: result::unwrap should use moves", "tree": {"sha": "bc41477cbefe57d00a1061963901246954f26d92", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bc41477cbefe57d00a1061963901246954f26d92"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7649860339a0e298be75522d41d243b3bbb178b6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7649860339a0e298be75522d41d243b3bbb178b6", "html_url": "https://github.com/rust-lang/rust/commit/7649860339a0e298be75522d41d243b3bbb178b6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7649860339a0e298be75522d41d243b3bbb178b6/comments", "author": {"login": "erickt", "id": 84711, "node_id": "MDQ6VXNlcjg0NzEx", "avatar_url": "https://avatars.githubusercontent.com/u/84711?v=4", "gravatar_id": "", "url": "https://api.github.com/users/erickt", "html_url": "https://github.com/erickt", "followers_url": "https://api.github.com/users/erickt/followers", "following_url": "https://api.github.com/users/erickt/following{/other_user}", "gists_url": "https://api.github.com/users/erickt/gists{/gist_id}", "starred_url": "https://api.github.com/users/erickt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/erickt/subscriptions", "organizations_url": "https://api.github.com/users/erickt/orgs", "repos_url": "https://api.github.com/users/erickt/repos", "events_url": "https://api.github.com/users/erickt/events{/privacy}", "received_events_url": "https://api.github.com/users/erickt/received_events", "type": "User", "site_admin": false}, "committer": {"login": "erickt", "id": 84711, "node_id": "MDQ6VXNlcjg0NzEx", "avatar_url": "https://avatars.githubusercontent.com/u/84711?v=4", "gravatar_id": "", "url": "https://api.github.com/users/erickt", "html_url": "https://github.com/erickt", "followers_url": "https://api.github.com/users/erickt/followers", "following_url": "https://api.github.com/users/erickt/following{/other_user}", "gists_url": "https://api.github.com/users/erickt/gists{/gist_id}", "starred_url": "https://api.github.com/users/erickt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/erickt/subscriptions", "organizations_url": "https://api.github.com/users/erickt/orgs", "repos_url": "https://api.github.com/users/erickt/repos", "events_url": "https://api.github.com/users/erickt/events{/privacy}", "received_events_url": "https://api.github.com/users/erickt/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "afeaf7d88cda883428f0b18123f164e5d5a7e4f5", "url": "https://api.github.com/repos/rust-lang/rust/commits/afeaf7d88cda883428f0b18123f164e5d5a7e4f5", "html_url": "https://github.com/rust-lang/rust/commit/afeaf7d88cda883428f0b18123f164e5d5a7e4f5"}], "stats": {"total": 13, "additions": 4, "deletions": 9}, "files": [{"sha": "b9c1d8cbc0e5ceb88de1f6f68e390a910bdf7852", "filename": "src/libcore/result.rs", "status": "modified", "additions": 4, "deletions": 9, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/7649860339a0e298be75522d41d243b3bbb178b6/src%2Flibcore%2Fresult.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7649860339a0e298be75522d41d243b3bbb178b6/src%2Flibcore%2Fresult.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fresult.rs?ref=7649860339a0e298be75522d41d243b3bbb178b6", "patch": "@@ -341,15 +341,10 @@ fn iter_vec2<S,T,U:copy>(ss: &[S], ts: &[T],\n }\n \n /// Unwraps a result, assuming it is an `ok(T)`\n-fn unwrap<T, U>(-res: Result<T, U>) -> T {\n-    unsafe {\n-        let addr = match res {\n-          Ok(x) => ptr::addr_of(x),\n-          Err(_) => fail ~\"error result\"\n-        };\n-        let liberated_value = unsafe::reinterpret_cast(*addr);\n-        unsafe::forget(res);\n-        return liberated_value;\n+fn unwrap<T, U>(+res: Result<T, U>) -> T {\n+    match move res {\n+      Ok(move t) => t,\n+      Err(_) => fail ~\"unwrap called on an err result\"\n     }\n }\n "}]}