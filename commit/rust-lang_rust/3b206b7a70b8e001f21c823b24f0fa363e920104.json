{"sha": "3b206b7a70b8e001f21c823b24f0fa363e920104", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNiMjA2YjdhNzBiOGUwMDFmMjFjODIzYjI0ZjBmYTM2M2U5MjAxMDQ=", "commit": {"author": {"name": "Ryan Levick", "email": "me@ryanlevick.com", "date": "2021-06-02T15:09:07Z"}, "committer": {"name": "Ryan Levick", "email": "me@ryanlevick.com", "date": "2021-06-02T15:09:07Z"}, "message": "Force warn on lint groups as well", "tree": {"sha": "70294e83f664550f6b60e28cef7c932827b9bb80", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/70294e83f664550f6b60e28cef7c932827b9bb80"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3b206b7a70b8e001f21c823b24f0fa363e920104", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3b206b7a70b8e001f21c823b24f0fa363e920104", "html_url": "https://github.com/rust-lang/rust/commit/3b206b7a70b8e001f21c823b24f0fa363e920104", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3b206b7a70b8e001f21c823b24f0fa363e920104/comments", "author": {"login": "rylev", "id": 1327285, "node_id": "MDQ6VXNlcjEzMjcyODU=", "avatar_url": "https://avatars.githubusercontent.com/u/1327285?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rylev", "html_url": "https://github.com/rylev", "followers_url": "https://api.github.com/users/rylev/followers", "following_url": "https://api.github.com/users/rylev/following{/other_user}", "gists_url": "https://api.github.com/users/rylev/gists{/gist_id}", "starred_url": "https://api.github.com/users/rylev/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rylev/subscriptions", "organizations_url": "https://api.github.com/users/rylev/orgs", "repos_url": "https://api.github.com/users/rylev/repos", "events_url": "https://api.github.com/users/rylev/events{/privacy}", "received_events_url": "https://api.github.com/users/rylev/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rylev", "id": 1327285, "node_id": "MDQ6VXNlcjEzMjcyODU=", "avatar_url": "https://avatars.githubusercontent.com/u/1327285?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rylev", "html_url": "https://github.com/rylev", "followers_url": "https://api.github.com/users/rylev/followers", "following_url": "https://api.github.com/users/rylev/following{/other_user}", "gists_url": "https://api.github.com/users/rylev/gists{/gist_id}", "starred_url": "https://api.github.com/users/rylev/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rylev/subscriptions", "organizations_url": "https://api.github.com/users/rylev/orgs", "repos_url": "https://api.github.com/users/rylev/repos", "events_url": "https://api.github.com/users/rylev/events{/privacy}", "received_events_url": "https://api.github.com/users/rylev/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4675690ac4022a937f6817570e06f987c2efbc61", "url": "https://api.github.com/repos/rust-lang/rust/commits/4675690ac4022a937f6817570e06f987c2efbc61", "html_url": "https://github.com/rust-lang/rust/commit/4675690ac4022a937f6817570e06f987c2efbc61"}], "stats": {"total": 138, "additions": 113, "deletions": 25}, "files": [{"sha": "5c54f06acfaceeb8681c8558343d57241f7cb00e", "filename": "compiler/rustc_lint/src/context.rs", "status": "modified", "additions": 24, "deletions": 13, "changes": 37, "blob_url": "https://github.com/rust-lang/rust/blob/3b206b7a70b8e001f21c823b24f0fa363e920104/compiler%2Frustc_lint%2Fsrc%2Fcontext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3b206b7a70b8e001f21c823b24f0fa363e920104/compiler%2Frustc_lint%2Fsrc%2Fcontext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_lint%2Fsrc%2Fcontext.rs?ref=3b206b7a70b8e001f21c823b24f0fa363e920104", "patch": "@@ -334,8 +334,14 @@ impl LintStore {\n         }\n     }\n \n-    /// Checks the validity of lint names derived from the command line\n-    pub fn check_lint_name_cmdline(&self, sess: &Session, lint_name: &str, level: Level) {\n+    /// Checks the validity of lint names derived from the command line. Returns\n+    /// true if the lint is valid, false otherwise.\n+    pub fn check_lint_name_cmdline(\n+        &self,\n+        sess: &Session,\n+        lint_name: &str,\n+        level: Option<Level>,\n+    ) -> bool {\n         let db = match self.check_lint_name(lint_name, None) {\n             CheckLintNameResult::Ok(_) => None,\n             CheckLintNameResult::Warning(ref msg, _) => Some(sess.struct_warn(msg)),\n@@ -361,18 +367,23 @@ impl LintStore {\n         };\n \n         if let Some(mut db) = db {\n-            let msg = format!(\n-                \"requested on the command line with `{} {}`\",\n-                match level {\n-                    Level::Allow => \"-A\",\n-                    Level::Warn => \"-W\",\n-                    Level::Deny => \"-D\",\n-                    Level::Forbid => \"-F\",\n-                },\n-                lint_name\n-            );\n-            db.note(&msg);\n+            if let Some(level) = level {\n+                let msg = format!(\n+                    \"requested on the command line with `{} {}`\",\n+                    match level {\n+                        Level::Allow => \"-A\",\n+                        Level::Warn => \"-W\",\n+                        Level::Deny => \"-D\",\n+                        Level::Forbid => \"-F\",\n+                    },\n+                    lint_name\n+                );\n+                db.note(&msg);\n+            }\n             db.emit();\n+            false\n+        } else {\n+            true\n         }\n     }\n "}, {"sha": "0ee434f5fb50bae3e359d986b90936c9027c1470", "filename": "compiler/rustc_lint/src/levels.rs", "status": "modified", "additions": 8, "deletions": 3, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/3b206b7a70b8e001f21c823b24f0fa363e920104/compiler%2Frustc_lint%2Fsrc%2Flevels.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3b206b7a70b8e001f21c823b24f0fa363e920104/compiler%2Frustc_lint%2Fsrc%2Flevels.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_lint%2Fsrc%2Flevels.rs?ref=3b206b7a70b8e001f21c823b24f0fa363e920104", "patch": "@@ -88,7 +88,7 @@ impl<'s> LintLevelsBuilder<'s> {\n         self.sets.lint_cap = sess.opts.lint_cap.unwrap_or(Level::Forbid);\n \n         for &(ref lint_name, level) in &sess.opts.lint_opts {\n-            store.check_lint_name_cmdline(sess, &lint_name, level);\n+            store.check_lint_name_cmdline(sess, &lint_name, Some(level));\n             let orig_level = level;\n \n             // If the cap is less than this specified level, e.g., if we've got\n@@ -110,8 +110,13 @@ impl<'s> LintLevelsBuilder<'s> {\n         }\n \n         for lint_name in &sess.opts.force_warns {\n-            store.check_lint_name_cmdline(sess, &lint_name, Level::Allow); // FIXME level is wrong\n-            self.sets.force_warns.insert(lint_name.to_uppercase());\n+            let valid = store.check_lint_name_cmdline(sess, lint_name, None);\n+            if valid {\n+                let lints = store\n+                    .find_lints(lint_name)\n+                    .unwrap_or_else(|_| bug!(\"A valid lint failed to produce a lint ids\"));\n+                self.sets.force_warns.extend(&lints);\n+            }\n         }\n \n         self.sets.list.push(LintSet::CommandLine { specs });"}, {"sha": "85080354e4d726a5d2c8839583436045ea5eee3f", "filename": "compiler/rustc_middle/src/lint.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/3b206b7a70b8e001f21c823b24f0fa363e920104/compiler%2Frustc_middle%2Fsrc%2Flint.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3b206b7a70b8e001f21c823b24f0fa363e920104/compiler%2Frustc_middle%2Fsrc%2Flint.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Flint.rs?ref=3b206b7a70b8e001f21c823b24f0fa363e920104", "patch": "@@ -60,7 +60,7 @@ pub type LevelAndSource = (Level, LintLevelSource);\n pub struct LintLevelSets {\n     pub list: Vec<LintSet>,\n     pub lint_cap: Level,\n-    pub force_warns: FxHashSet<String>,\n+    pub force_warns: FxHashSet<LintId>,\n }\n \n #[derive(Debug)]\n@@ -94,7 +94,7 @@ impl LintLevelSets {\n         sess: &Session,\n     ) -> LevelAndSource {\n         // Check whether we should always warn\n-        if self.force_warns.contains(lint.name) {\n+        if self.force_warns.contains(&LintId::of(lint)) {\n             return (Level::Warn, LintLevelSource::ForceWarn(Symbol::intern(lint.name)));\n         }\n "}, {"sha": "9306abc85ba376ec8d3cd3b7541c056686de4cc3", "filename": "compiler/rustc_session/src/config.rs", "status": "modified", "additions": 11, "deletions": 2, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/3b206b7a70b8e001f21c823b24f0fa363e920104/compiler%2Frustc_session%2Fsrc%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3b206b7a70b8e001f21c823b24f0fa363e920104/compiler%2Frustc_session%2Fsrc%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_session%2Fsrc%2Fconfig.rs?ref=3b206b7a70b8e001f21c823b24f0fa363e920104", "patch": "@@ -1164,6 +1164,7 @@ pub fn rustc_optgroups() -> Vec<RustcOptGroup> {\n pub fn get_cmd_lint_options(\n     matches: &getopts::Matches,\n     error_format: ErrorOutputType,\n+    debugging_opts: &DebuggingOptions,\n ) -> (Vec<(String, lint::Level)>, bool, Option<lint::Level>, Vec<String>) {\n     let mut lint_opts_with_position = vec![];\n     let mut describe_lints = false;\n@@ -1198,6 +1199,14 @@ pub fn get_cmd_lint_options(\n             .unwrap_or_else(|| early_error(error_format, &format!(\"unknown lint level: `{}`\", cap)))\n     });\n \n+    if !debugging_opts.unstable_options && matches.opt_present(\"force-warns\") {\n+        early_error(\n+            error_format,\n+            \"the `-Z unstable-options` flag must also be passed to enable \\\n+            the flag `--force-warns=lints`\",\n+        );\n+    }\n+\n     let force_warns = matches.opt_strs(\"force-warns\");\n \n     (lint_opts, describe_lints, lint_cap, force_warns)\n@@ -1937,10 +1946,10 @@ pub fn build_session_options(matches: &getopts::Matches) -> Options {\n     let crate_types = parse_crate_types_from_list(unparsed_crate_types)\n         .unwrap_or_else(|e| early_error(error_format, &e[..]));\n \n+    let mut debugging_opts = DebuggingOptions::build(matches, error_format);\n     let (lint_opts, describe_lints, lint_cap, force_warns) =\n-        get_cmd_lint_options(matches, error_format);\n+        get_cmd_lint_options(matches, error_format, &debugging_opts);\n \n-    let mut debugging_opts = DebuggingOptions::build(matches, error_format);\n     check_debug_option_stability(&debugging_opts, error_format, json_rendered);\n \n     if !debugging_opts.unstable_options && json_unused_externs {"}, {"sha": "29e8578d944c7c3bbfc57089ec90c56c676adc57", "filename": "src/librustdoc/config.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/3b206b7a70b8e001f21c823b24f0fa363e920104/src%2Flibrustdoc%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3b206b7a70b8e001f21c823b24f0fa363e920104/src%2Flibrustdoc%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fconfig.rs?ref=3b206b7a70b8e001f21c823b24f0fa363e920104", "patch": "@@ -635,7 +635,8 @@ impl Options {\n         let generate_redirect_map = matches.opt_present(\"generate-redirect-map\");\n         let show_type_layout = matches.opt_present(\"show-type-layout\");\n \n-        let (lint_opts, describe_lints, lint_cap) = get_cmd_lint_options(matches, error_format);\n+        let (lint_opts, describe_lints, lint_cap, _) =\n+            get_cmd_lint_options(matches, error_format, &debugging_opts);\n \n         Ok(Options {\n             input,"}, {"sha": "3ad3a53069072eeef2a24ac253eef0580664379e", "filename": "src/librustdoc/lib.rs", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/3b206b7a70b8e001f21c823b24f0fa363e920104/src%2Flibrustdoc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3b206b7a70b8e001f21c823b24f0fa363e920104/src%2Flibrustdoc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Flib.rs?ref=3b206b7a70b8e001f21c823b24f0fa363e920104", "patch": "@@ -510,6 +510,14 @@ fn opts() -> Vec<RustcOptGroup> {\n                 \"LEVEL\",\n             )\n         }),\n+        unstable(\"force-warns\", |o| {\n+            o.optopt(\n+                \"\",\n+                \"force-warns\",\n+                \"Lints that will warn even if allowed somewhere else\",\n+                \"LINTS\",\n+            )\n+        }),\n         unstable(\"index-page\", |o| {\n             o.optopt(\"\", \"index-page\", \"Markdown file to be used as index page\", \"PATH\")\n         }),"}, {"sha": "d4a5056ddf3db8f7ea12d29669c671acf988aa12", "filename": "src/test/ui/lint/force-warn/force-allowed-by-default-lint.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/3b206b7a70b8e001f21c823b24f0fa363e920104/src%2Ftest%2Fui%2Flint%2Fforce-warn%2Fforce-allowed-by-default-lint.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3b206b7a70b8e001f21c823b24f0fa363e920104/src%2Ftest%2Fui%2Flint%2Fforce-warn%2Fforce-allowed-by-default-lint.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Fforce-warn%2Fforce-allowed-by-default-lint.rs?ref=3b206b7a70b8e001f21c823b24f0fa363e920104", "previous_filename": "src/test/ui/lint/force-warn/force-allow-by-default.rs"}, {"sha": "24ccfe6107738a2e39d432ad02197fb84b7db57f", "filename": "src/test/ui/lint/force-warn/force-allowed-by-default-lint.stderr", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3b206b7a70b8e001f21c823b24f0fa363e920104/src%2Ftest%2Fui%2Flint%2Fforce-warn%2Fforce-allowed-by-default-lint.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/3b206b7a70b8e001f21c823b24f0fa363e920104/src%2Ftest%2Fui%2Flint%2Fforce-warn%2Fforce-allowed-by-default-lint.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Fforce-warn%2Fforce-allowed-by-default-lint.stderr?ref=3b206b7a70b8e001f21c823b24f0fa363e920104", "patch": "@@ -1,5 +1,5 @@\n warning: hidden lifetime parameters in types are deprecated\n-  --> $DIR/force-allow-by-default.rs:8:12\n+  --> $DIR/force-allowed-by-default-lint.rs:8:12\n    |\n LL | fn foo(x: &Foo) {}\n    |            ^^^- help: indicate the anonymous lifetime: `<'_>`", "previous_filename": "src/test/ui/lint/force-warn/force-allow-by-default.stderr"}, {"sha": "b34fb5d8b8453643bcda0620f9b7ed86b04333c3", "filename": "src/test/ui/lint/force-warn/force-allowed-deny-by-default-lint.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/3b206b7a70b8e001f21c823b24f0fa363e920104/src%2Ftest%2Fui%2Flint%2Fforce-warn%2Fforce-allowed-deny-by-default-lint.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3b206b7a70b8e001f21c823b24f0fa363e920104/src%2Ftest%2Fui%2Flint%2Fforce-warn%2Fforce-allowed-deny-by-default-lint.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Fforce-warn%2Fforce-allowed-deny-by-default-lint.rs?ref=3b206b7a70b8e001f21c823b24f0fa363e920104", "previous_filename": "src/test/ui/lint/force-warn/force-allowed-deny.rs"}, {"sha": "5501faa437aaea7bfcfabc56ed873d034b726bf4", "filename": "src/test/ui/lint/force-warn/force-lint-allow-all-warnings.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/3b206b7a70b8e001f21c823b24f0fa363e920104/src%2Ftest%2Fui%2Flint%2Fforce-warn%2Fforce-lint-allow-all-warnings.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3b206b7a70b8e001f21c823b24f0fa363e920104/src%2Ftest%2Fui%2Flint%2Fforce-warn%2Fforce-lint-allow-all-warnings.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Fforce-warn%2Fforce-lint-allow-all-warnings.rs?ref=3b206b7a70b8e001f21c823b24f0fa363e920104", "previous_filename": "src/test/ui/lint/force-warn/force-allow-all-warnings.rs"}, {"sha": "dc9af8997b28f813ae47177e8b7d8ff4e7434e19", "filename": "src/test/ui/lint/force-warn/force-lint-allow-all-warnings.stderr", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3b206b7a70b8e001f21c823b24f0fa363e920104/src%2Ftest%2Fui%2Flint%2Fforce-warn%2Fforce-lint-allow-all-warnings.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/3b206b7a70b8e001f21c823b24f0fa363e920104/src%2Ftest%2Fui%2Flint%2Fforce-warn%2Fforce-lint-allow-all-warnings.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Fforce-warn%2Fforce-lint-allow-all-warnings.stderr?ref=3b206b7a70b8e001f21c823b24f0fa363e920104", "patch": "@@ -1,5 +1,5 @@\n warning: function is never used: `dead_function`\n-  --> $DIR/force-allow-all-warnings.rs:6:4\n+  --> $DIR/force-lint-allow-all-warnings.rs:6:4\n    |\n LL | fn dead_function() {}\n    |    ^^^^^^^^^^^^^", "previous_filename": "src/test/ui/lint/force-warn/force-allow-all-warnings.stderr"}, {"sha": "9009971f0cff3544830de802ecf27021c63c1a5c", "filename": "src/test/ui/lint/force-warn/force-lint-group-allow-all-warnings.rs", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/3b206b7a70b8e001f21c823b24f0fa363e920104/src%2Ftest%2Fui%2Flint%2Fforce-warn%2Fforce-lint-group-allow-all-warnings.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3b206b7a70b8e001f21c823b24f0fa363e920104/src%2Ftest%2Fui%2Flint%2Fforce-warn%2Fforce-lint-group-allow-all-warnings.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Fforce-warn%2Fforce-lint-group-allow-all-warnings.rs?ref=3b206b7a70b8e001f21c823b24f0fa363e920104", "patch": "@@ -0,0 +1,9 @@\n+// compile-flags: --force-warns nonstandard_style\n+// check-pass\n+\n+#![allow(warnings)]\n+\n+pub fn FUNCTION() {}\n+//~^ WARN function `FUNCTION` should have a snake case name\n+\n+fn main() {}"}, {"sha": "3965d5ca2385d0bb3fcab78efc2d245161b83d1c", "filename": "src/test/ui/lint/force-warn/force-lint-group-allow-all-warnings.stderr", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/3b206b7a70b8e001f21c823b24f0fa363e920104/src%2Ftest%2Fui%2Flint%2Fforce-warn%2Fforce-lint-group-allow-all-warnings.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/3b206b7a70b8e001f21c823b24f0fa363e920104/src%2Ftest%2Fui%2Flint%2Fforce-warn%2Fforce-lint-group-allow-all-warnings.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Fforce-warn%2Fforce-lint-group-allow-all-warnings.stderr?ref=3b206b7a70b8e001f21c823b24f0fa363e920104", "patch": "@@ -0,0 +1,10 @@\n+warning: function `FUNCTION` should have a snake case name\n+  --> $DIR/force-lint-group-allow-all-warnings.rs:6:8\n+   |\n+LL | pub fn FUNCTION() {}\n+   |        ^^^^^^^^ help: convert the identifier to snake case: `function`\n+   |\n+   = note: Warning forced by `force-warns` commandline option\n+\n+warning: 1 warning emitted\n+"}, {"sha": "b68b979ca11c83ff9e74f619df43b85d81949182", "filename": "src/test/ui/lint/force-warn/force-lint-in-allowed-group.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/3b206b7a70b8e001f21c823b24f0fa363e920104/src%2Ftest%2Fui%2Flint%2Fforce-warn%2Fforce-lint-in-allowed-group.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3b206b7a70b8e001f21c823b24f0fa363e920104/src%2Ftest%2Fui%2Flint%2Fforce-warn%2Fforce-lint-in-allowed-group.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Fforce-warn%2Fforce-lint-in-allowed-group.rs?ref=3b206b7a70b8e001f21c823b24f0fa363e920104", "previous_filename": "src/test/ui/lint/force-warn/force-allowed-group.rs"}, {"sha": "a28b14ebc9b118b162d4e1975066d2e5caa0aaf7", "filename": "src/test/ui/lint/force-warn/force-lint-in-allowed-group.stderr", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/3b206b7a70b8e001f21c823b24f0fa363e920104/src%2Ftest%2Fui%2Flint%2Fforce-warn%2Fforce-lint-in-allowed-group.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/3b206b7a70b8e001f21c823b24f0fa363e920104/src%2Ftest%2Fui%2Flint%2Fforce-warn%2Fforce-lint-in-allowed-group.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Fforce-warn%2Fforce-lint-in-allowed-group.stderr?ref=3b206b7a70b8e001f21c823b24f0fa363e920104", "patch": "@@ -0,0 +1,12 @@\n+warning: trait objects without an explicit `dyn` are deprecated\n+  --> $DIR/force-lint-in-allowed-group.rs:8:25\n+   |\n+LL | pub fn function(_x: Box<SomeTrait>) {}\n+   |                         ^^^^^^^^^ help: use `dyn`: `dyn SomeTrait`\n+   |\n+   = note: Warning forced by `force-warns` commandline option\n+   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2021 edition!\n+   = note: for more information, see issue #80165 <https://github.com/rust-lang/rust/issues/80165>\n+\n+warning: 1 warning emitted\n+"}, {"sha": "357a79b383d02655339f3fd484489bb998eac743", "filename": "src/test/ui/lint/force-warn/force-warn-group-allow-warning.rs", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/3b206b7a70b8e001f21c823b24f0fa363e920104/src%2Ftest%2Fui%2Flint%2Fforce-warn%2Fforce-warn-group-allow-warning.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3b206b7a70b8e001f21c823b24f0fa363e920104/src%2Ftest%2Fui%2Flint%2Fforce-warn%2Fforce-warn-group-allow-warning.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Fforce-warn%2Fforce-warn-group-allow-warning.rs?ref=3b206b7a70b8e001f21c823b24f0fa363e920104", "patch": "@@ -0,0 +1,12 @@\n+// compile-flags: --force-warns rust_2018_idioms\n+// check-pass\n+\n+#![allow(bare_trait_objects)]\n+\n+pub trait SomeTrait {}\n+\n+pub fn function(_x: Box<SomeTrait>) {}\n+//~^ WARN trait objects without an explicit `dyn` are deprecated\n+//~| WARN this was previously accepted by the compiler\n+\n+fn main() {}"}, {"sha": "f57dd1e70dc0a073c558bb545b25ad4109bbce94", "filename": "src/test/ui/lint/force-warn/force-warn-group-allow-warning.stderr", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/3b206b7a70b8e001f21c823b24f0fa363e920104/src%2Ftest%2Fui%2Flint%2Fforce-warn%2Fforce-warn-group-allow-warning.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/3b206b7a70b8e001f21c823b24f0fa363e920104/src%2Ftest%2Fui%2Flint%2Fforce-warn%2Fforce-warn-group-allow-warning.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Fforce-warn%2Fforce-warn-group-allow-warning.stderr?ref=3b206b7a70b8e001f21c823b24f0fa363e920104", "patch": "@@ -0,0 +1,12 @@\n+warning: trait objects without an explicit `dyn` are deprecated\n+  --> $DIR/force-warn-group-allow-warning.rs:8:25\n+   |\n+LL | pub fn function(_x: Box<SomeTrait>) {}\n+   |                         ^^^^^^^^^ help: use `dyn`: `dyn SomeTrait`\n+   |\n+   = note: Warning forced by `force-warns` commandline option\n+   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2021 edition!\n+   = note: for more information, see issue #80165 <https://github.com/rust-lang/rust/issues/80165>\n+\n+warning: 1 warning emitted\n+"}, {"sha": "a4615df42de2d388d88adba1fb220fe2ce4fb4e6", "filename": "src/test/ui/lint/force-warn/force-warn-group.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/3b206b7a70b8e001f21c823b24f0fa363e920104/src%2Ftest%2Fui%2Flint%2Fforce-warn%2Fforce-warn-group.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3b206b7a70b8e001f21c823b24f0fa363e920104/src%2Ftest%2Fui%2Flint%2Fforce-warn%2Fforce-warn-group.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Fforce-warn%2Fforce-warn-group.rs?ref=3b206b7a70b8e001f21c823b24f0fa363e920104", "patch": "@@ -1,4 +1,3 @@\n-// ignore-test\n // compile-flags: --force-warns rust_2018_idioms\n // check-pass\n "}, {"sha": "f2b0ce04b541b4b45638657a3437628b5b5089c5", "filename": "src/test/ui/lint/force-warn/force-warn-group.stderr", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3b206b7a70b8e001f21c823b24f0fa363e920104/src%2Ftest%2Fui%2Flint%2Fforce-warn%2Fforce-warn-group.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/3b206b7a70b8e001f21c823b24f0fa363e920104/src%2Ftest%2Fui%2Flint%2Fforce-warn%2Fforce-warn-group.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Fforce-warn%2Fforce-warn-group.stderr?ref=3b206b7a70b8e001f21c823b24f0fa363e920104", "patch": "@@ -1,5 +1,5 @@\n warning: trait objects without an explicit `dyn` are deprecated\n-  --> $DIR/force-allowed-group.rs:8:25\n+  --> $DIR/force-warn-group.rs:8:25\n    |\n LL | pub fn function(_x: Box<SomeTrait>) {}\n    |                         ^^^^^^^^^ help: use `dyn`: `dyn SomeTrait`", "previous_filename": "src/test/ui/lint/force-warn/force-allowed-group.stderr"}]}