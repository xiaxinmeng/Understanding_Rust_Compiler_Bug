{"sha": "06c9c599ed4e602ba691a31dde4a193cf33afc91", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA2YzljNTk5ZWQ0ZTYwMmJhNjkxYTMxZGRlNGExOTNjZjMzYWZjOTE=", "commit": {"author": {"name": "Bastian Kauschke", "email": "bastian_kauschke@hotmail.de", "date": "2020-11-13T18:12:49Z"}, "committer": {"name": "Bastian Kauschke", "email": "bastian_kauschke@hotmail.de", "date": "2020-11-13T18:12:49Z"}, "message": "lessen restriction in `check_kind_count`", "tree": {"sha": "f67ec774234e87a47d657d1f84907ed081d72af3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f67ec774234e87a47d657d1f84907ed081d72af3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/06c9c599ed4e602ba691a31dde4a193cf33afc91", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/06c9c599ed4e602ba691a31dde4a193cf33afc91", "html_url": "https://github.com/rust-lang/rust/commit/06c9c599ed4e602ba691a31dde4a193cf33afc91", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/06c9c599ed4e602ba691a31dde4a193cf33afc91/comments", "author": {"login": "lcnr", "id": 29864074, "node_id": "MDQ6VXNlcjI5ODY0MDc0", "avatar_url": "https://avatars.githubusercontent.com/u/29864074?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lcnr", "html_url": "https://github.com/lcnr", "followers_url": "https://api.github.com/users/lcnr/followers", "following_url": "https://api.github.com/users/lcnr/following{/other_user}", "gists_url": "https://api.github.com/users/lcnr/gists{/gist_id}", "starred_url": "https://api.github.com/users/lcnr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lcnr/subscriptions", "organizations_url": "https://api.github.com/users/lcnr/orgs", "repos_url": "https://api.github.com/users/lcnr/repos", "events_url": "https://api.github.com/users/lcnr/events{/privacy}", "received_events_url": "https://api.github.com/users/lcnr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "lcnr", "id": 29864074, "node_id": "MDQ6VXNlcjI5ODY0MDc0", "avatar_url": "https://avatars.githubusercontent.com/u/29864074?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lcnr", "html_url": "https://github.com/lcnr", "followers_url": "https://api.github.com/users/lcnr/followers", "following_url": "https://api.github.com/users/lcnr/following{/other_user}", "gists_url": "https://api.github.com/users/lcnr/gists{/gist_id}", "starred_url": "https://api.github.com/users/lcnr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lcnr/subscriptions", "organizations_url": "https://api.github.com/users/lcnr/orgs", "repos_url": "https://api.github.com/users/lcnr/repos", "events_url": "https://api.github.com/users/lcnr/events{/privacy}", "received_events_url": "https://api.github.com/users/lcnr/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "49c0b318df372977db7986b29e993b92b328ef24", "url": "https://api.github.com/repos/rust-lang/rust/commits/49c0b318df372977db7986b29e993b92b328ef24", "html_url": "https://github.com/rust-lang/rust/commit/49c0b318df372977db7986b29e993b92b328ef24"}], "stats": {"total": 18, "additions": 9, "deletions": 9}, "files": [{"sha": "5768ed3cdca912fd70da6f4437db25893a4f797e", "filename": "compiler/rustc_typeck/src/astconv/generics.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/06c9c599ed4e602ba691a31dde4a193cf33afc91/compiler%2Frustc_typeck%2Fsrc%2Fastconv%2Fgenerics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/06c9c599ed4e602ba691a31dde4a193cf33afc91/compiler%2Frustc_typeck%2Fsrc%2Fastconv%2Fgenerics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fastconv%2Fgenerics.rs?ref=06c9c599ed4e602ba691a31dde4a193cf33afc91", "patch": "@@ -409,7 +409,7 @@ impl<'o, 'tcx> dyn AstConv<'tcx> + 'o {\n                 (required, \"\")\n             };\n \n-            let (spans, label) = if required == permitted && provided > permitted {\n+            let (spans, label) = if provided > permitted {\n                 // In the case when the user has provided too many arguments,\n                 // we want to point to the unexpected arguments.\n                 let spans: Vec<Span> = args.args[offset + permitted..offset + provided]"}, {"sha": "edaa0ab527dbbce1e1a4d1a6c7f6e66c358285a6", "filename": "src/test/ui/const-generics/invalid-enum.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/06c9c599ed4e602ba691a31dde4a193cf33afc91/src%2Ftest%2Fui%2Fconst-generics%2Finvalid-enum.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/06c9c599ed4e602ba691a31dde4a193cf33afc91/src%2Ftest%2Fui%2Fconst-generics%2Finvalid-enum.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Finvalid-enum.stderr?ref=06c9c599ed4e602ba691a31dde4a193cf33afc91", "patch": "@@ -32,10 +32,10 @@ LL |   let _: Example<CompileFlag::A, _> = Example { x: 0 };\n    |          ^^^^^^^^^^^^^^^^^^^^^^^^^^ expected 1 const argument\n \n error[E0107]: wrong number of type arguments: expected at most 1, found 2\n-  --> $DIR/invalid-enum.rs:31:10\n+  --> $DIR/invalid-enum.rs:31:34\n    |\n LL |   let _: Example<CompileFlag::A, _> = Example { x: 0 };\n-   |          ^^^^^^^^^^^^^^^^^^^^^^^^^^ expected at most 1 type argument\n+   |                                  ^ unexpected type argument\n    |\n help: If this generic argument was intended as a const parameter, try surrounding it with braces:\n    |\n@@ -49,10 +49,10 @@ LL |   let _: Example<Example::ASSOC_FLAG, _> = Example { x: 0 };\n    |          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected 1 const argument\n \n error[E0107]: wrong number of type arguments: expected at most 1, found 2\n-  --> $DIR/invalid-enum.rs:36:10\n+  --> $DIR/invalid-enum.rs:36:39\n    |\n LL |   let _: Example<Example::ASSOC_FLAG, _> = Example { x: 0 };\n-   |          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected at most 1 type argument\n+   |                                       ^ unexpected type argument\n    |\n help: If this generic argument was intended as a const parameter, try surrounding it with braces:\n    |"}, {"sha": "380e9209e6c608126f19122e1c20f24beb39c94f", "filename": "src/test/ui/generics/generic-impl-more-params-with-defaults.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/06c9c599ed4e602ba691a31dde4a193cf33afc91/src%2Ftest%2Fui%2Fgenerics%2Fgeneric-impl-more-params-with-defaults.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/06c9c599ed4e602ba691a31dde4a193cf33afc91/src%2Ftest%2Fui%2Fgenerics%2Fgeneric-impl-more-params-with-defaults.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fgenerics%2Fgeneric-impl-more-params-with-defaults.stderr?ref=06c9c599ed4e602ba691a31dde4a193cf33afc91", "patch": "@@ -1,8 +1,8 @@\n error[E0107]: wrong number of type arguments: expected at most 2, found 3\n-  --> $DIR/generic-impl-more-params-with-defaults.rs:13:5\n+  --> $DIR/generic-impl-more-params-with-defaults.rs:13:24\n    |\n LL |     Vec::<isize, Heap, bool>::new();\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected at most 2 type arguments\n+   |                        ^^^^ unexpected type argument\n \n error: aborting due to previous error\n "}, {"sha": "cc296b5105a4027aef02dd21fc54d136b06d667e", "filename": "src/test/ui/generics/generic-type-more-params-with-defaults.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/06c9c599ed4e602ba691a31dde4a193cf33afc91/src%2Ftest%2Fui%2Fgenerics%2Fgeneric-type-more-params-with-defaults.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/06c9c599ed4e602ba691a31dde4a193cf33afc91/src%2Ftest%2Fui%2Fgenerics%2Fgeneric-type-more-params-with-defaults.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fgenerics%2Fgeneric-type-more-params-with-defaults.stderr?ref=06c9c599ed4e602ba691a31dde4a193cf33afc91", "patch": "@@ -1,8 +1,8 @@\n error[E0107]: wrong number of type arguments: expected at most 2, found 3\n-  --> $DIR/generic-type-more-params-with-defaults.rs:9:12\n+  --> $DIR/generic-type-more-params-with-defaults.rs:9:29\n    |\n LL |     let _: Vec<isize, Heap, bool>;\n-   |            ^^^^^^^^^^^^^^^^^^^^^^ expected at most 2 type arguments\n+   |                             ^^^^ unexpected type argument\n \n error: aborting due to previous error\n "}]}