{"sha": "ee85704c0434e8453ee7d1113012331387cb6ee0", "node_id": "MDY6Q29tbWl0NzI0NzEyOmVlODU3MDRjMDQzNGU4NDUzZWU3ZDExMTMwMTIzMzEzODdjYjZlZTA=", "commit": {"author": {"name": "Deadbeef", "email": "ent3rm4n@gmail.com", "date": "2021-08-16T11:29:05Z"}, "committer": {"name": "Deadbeef", "email": "ent3rm4n@gmail.com", "date": "2021-08-16T12:04:01Z"}, "message": "Skip assert ICE with default_method_body_is_const\n\nfunctions marked with #[default_method_body_is_const] would\nICE when being const checked due to it not being a const function:\n`tcx.is_const_fn_raw(did)` returns false. We should skip this assert\nwhen it is marked with that attribute.", "tree": {"sha": "29322ce939ec9d3a707801f33450e115ab2e4695", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/29322ce939ec9d3a707801f33450e115ab2e4695"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ee85704c0434e8453ee7d1113012331387cb6ee0", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEQ7Fl7qPq2YcWF1dqAn35M4hird0FAmEaVDQACgkQAn35M4hi\nrd3PEw//Zq7mPDG1xb29xNGwh7IHF3ilk1cGNs98pWj6gCfOzQB6tlOUT0ezJ8je\navgT+UVQQWDbtBgWDUU+tpFF5GIViWx65eu18PePfEm/qT8hM3C+OBJjOUJgXbeb\nT6eCWbKpaSTA03aEX/6c8Ph/sWBar5bcLVfd9JJjKCGVcXFzS1xCMdGr6q4ezgpc\nLHuu8lSyQKQKoqNik0MxDX+9/yZE1wpqdnzy5jKBlZVPGUTlVkJSeXYAysvGTIv+\nBYKZzobllW3RbbIogiERY4BCLffyEN6ODT02NEd2tRtTUnNM/ONFt06lj25WFBDi\nvKJcPo34KC8r8EpEfeuFnmUG2kRKtZBU31orEP6qAI/GwIb7KjyglOBrcsr3xzVg\nUHvgBdy9v7LnU1MRVbA2f77BLfn4E9Rf9m8FIYg9AVd8Pzv5wTC1LNMFfe6E313E\nQxp993SEeTgoaZ5tA9Qbu8hS0+R4LxZ7Wz2oCsNPzFgi2GXJqQGTH/QCyoZOmacE\nwN0J+FeQJae+lnzQFqeDZCkd6IVC7CRvjkVmw0thrWuxKQw6+pICUXRrXcOpnvlc\n/GYx+tvOChMJ6AxpbY8VbIZHUuZENxQm76XYobZ/P74eeQJfS/WvTWRPVOW6oZ2j\nZemfx6xrn+EEwC95MeGNDu6GNWqKXhLY6+12JanmSru0S1jMggw=\n=GfH3\n-----END PGP SIGNATURE-----", "payload": "tree 29322ce939ec9d3a707801f33450e115ab2e4695\nparent 58d685ecb3d4711cf3d21af502ccf51e63ae289c\nauthor Deadbeef <ent3rm4n@gmail.com> 1629113345 +0000\ncommitter Deadbeef <ent3rm4n@gmail.com> 1629115441 +0000\n\nSkip assert ICE with default_method_body_is_const\n\nfunctions marked with #[default_method_body_is_const] would\nICE when being const checked due to it not being a const function:\n`tcx.is_const_fn_raw(did)` returns false. We should skip this assert\nwhen it is marked with that attribute.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ee85704c0434e8453ee7d1113012331387cb6ee0", "html_url": "https://github.com/rust-lang/rust/commit/ee85704c0434e8453ee7d1113012331387cb6ee0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ee85704c0434e8453ee7d1113012331387cb6ee0/comments", "author": {"login": "fee1-dead", "id": 43851243, "node_id": "MDQ6VXNlcjQzODUxMjQz", "avatar_url": "https://avatars.githubusercontent.com/u/43851243?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fee1-dead", "html_url": "https://github.com/fee1-dead", "followers_url": "https://api.github.com/users/fee1-dead/followers", "following_url": "https://api.github.com/users/fee1-dead/following{/other_user}", "gists_url": "https://api.github.com/users/fee1-dead/gists{/gist_id}", "starred_url": "https://api.github.com/users/fee1-dead/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fee1-dead/subscriptions", "organizations_url": "https://api.github.com/users/fee1-dead/orgs", "repos_url": "https://api.github.com/users/fee1-dead/repos", "events_url": "https://api.github.com/users/fee1-dead/events{/privacy}", "received_events_url": "https://api.github.com/users/fee1-dead/received_events", "type": "User", "site_admin": false}, "committer": {"login": "fee1-dead", "id": 43851243, "node_id": "MDQ6VXNlcjQzODUxMjQz", "avatar_url": "https://avatars.githubusercontent.com/u/43851243?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fee1-dead", "html_url": "https://github.com/fee1-dead", "followers_url": "https://api.github.com/users/fee1-dead/followers", "following_url": "https://api.github.com/users/fee1-dead/following{/other_user}", "gists_url": "https://api.github.com/users/fee1-dead/gists{/gist_id}", "starred_url": "https://api.github.com/users/fee1-dead/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fee1-dead/subscriptions", "organizations_url": "https://api.github.com/users/fee1-dead/orgs", "repos_url": "https://api.github.com/users/fee1-dead/repos", "events_url": "https://api.github.com/users/fee1-dead/events{/privacy}", "received_events_url": "https://api.github.com/users/fee1-dead/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "58d685ecb3d4711cf3d21af502ccf51e63ae289c", "url": "https://api.github.com/repos/rust-lang/rust/commits/58d685ecb3d4711cf3d21af502ccf51e63ae289c", "html_url": "https://github.com/rust-lang/rust/commit/58d685ecb3d4711cf3d21af502ccf51e63ae289c"}], "stats": {"total": 9, "additions": 8, "deletions": 1}, "files": [{"sha": "a5cb0f4e14b178547dc1c1f6ae305f748b3d8183", "filename": "compiler/rustc_mir/src/transform/check_consts/mod.rs", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/ee85704c0434e8453ee7d1113012331387cb6ee0/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Fcheck_consts%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ee85704c0434e8453ee7d1113012331387cb6ee0/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Fcheck_consts%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Fcheck_consts%2Fmod.rs?ref=ee85704c0434e8453ee7d1113012331387cb6ee0", "patch": "@@ -9,7 +9,7 @@ use rustc_hir as hir;\n use rustc_hir::def_id::{DefId, LocalDefId};\n use rustc_middle::mir;\n use rustc_middle::ty::{self, TyCtxt};\n-use rustc_span::Symbol;\n+use rustc_span::{sym, Symbol};\n \n pub use self::qualifs::Qualif;\n \n@@ -104,6 +104,13 @@ pub fn rustc_allow_const_fn_unstable(\n pub fn is_const_stable_const_fn(tcx: TyCtxt<'tcx>, def_id: DefId) -> bool {\n     use attr::{ConstStability, Stability, StabilityLevel};\n \n+    // A default body marked const is not const-stable because const\n+    // trait fns currently cannot be const-stable. We shouldn't\n+    // restrict default bodies to only call const-stable functions.\n+    if tcx.has_attr(def_id, sym::default_method_body_is_const) {\n+        return false;\n+    }\n+\n     // Const-stability is only relevant for `const fn`.\n     assert!(tcx.is_const_fn_raw(def_id));\n "}]}