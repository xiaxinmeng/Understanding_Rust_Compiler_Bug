{"sha": "8ceb283c923f83d02efb3b2ccd8296241ff1a775", "node_id": "C_kwDOAAsO6NoAKDhjZWIyODNjOTIzZjgzZDAyZWZiM2IyY2NkODI5NjI0MWZmMWE3NzU", "commit": {"author": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2023-06-02T06:07:37Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2023-06-02T06:07:37Z"}, "message": "Rollup merge of #112030 - sladyn98:item-trait-alias, r=GuillaumeGomez\n\nMigrate `item_trait_alias` to Askama\n\nThis PR migrates `item_trait_alias` to Askama\n\nRefers https://github.com/rust-lang/rust/issues/108868", "tree": {"sha": "4ca3eed4649dc6590b8eb21cf82627ee014066d2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4ca3eed4649dc6590b8eb21cf82627ee014066d2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8ceb283c923f83d02efb3b2ccd8296241ff1a775", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJkeYcpCRBK7hj4Ov3rIwAAx+oIAGzLXHqQklOSGdtVadT9NavD\n26WaghuUUhTZTmVSp8T76D0kb250EabteXs9aS9BacU4GPTbDr+6f4Jho6KD8Vj1\n0Rr+daub/DmrdpoqJ+bgYR0pwDzl2x600IQWBUdOG6cyjqhdXxrOCQhNO8pQXRPZ\nY3/9lyS+n0b4hs/zGzYibsgYH0Xflw6+SzeoEmLSP21hAA/Kgoozs25n2fZ5kqof\nbwaiWlUEkD5gDhk4w50CztIhhD4o4H52BudwC/IP1pGd1tJ+0JgECqn5NofbcaOG\ngL9BxvqrngfKlJsjUKOdciI7tZmOkCYccHiMh7J5VQUiyy7PygM2FDwB+Tum5hU=\n=cgLu\n-----END PGP SIGNATURE-----\n", "payload": "tree 4ca3eed4649dc6590b8eb21cf82627ee014066d2\nparent ceec2250a361ee3f84ba225bdbd882e0df859441\nparent 780719b2dcf1f1f229564f026310ca59a108d5e1\nauthor Michael Goulet <michael@errs.io> 1685686057 -0700\ncommitter GitHub <noreply@github.com> 1685686057 -0700\n\nRollup merge of #112030 - sladyn98:item-trait-alias, r=GuillaumeGomez\n\nMigrate `item_trait_alias` to Askama\n\nThis PR migrates `item_trait_alias` to Askama\n\nRefers https://github.com/rust-lang/rust/issues/108868\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8ceb283c923f83d02efb3b2ccd8296241ff1a775", "html_url": "https://github.com/rust-lang/rust/commit/8ceb283c923f83d02efb3b2ccd8296241ff1a775", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8ceb283c923f83d02efb3b2ccd8296241ff1a775/comments", "author": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ceec2250a361ee3f84ba225bdbd882e0df859441", "url": "https://api.github.com/repos/rust-lang/rust/commits/ceec2250a361ee3f84ba225bdbd882e0df859441", "html_url": "https://github.com/rust-lang/rust/commit/ceec2250a361ee3f84ba225bdbd882e0df859441"}, {"sha": "780719b2dcf1f1f229564f026310ca59a108d5e1", "url": "https://api.github.com/repos/rust-lang/rust/commits/780719b2dcf1f1f229564f026310ca59a108d5e1", "html_url": "https://github.com/rust-lang/rust/commit/780719b2dcf1f1f229564f026310ca59a108d5e1"}], "stats": {"total": 23, "additions": 15, "deletions": 8}, "files": [{"sha": "1d66805bd5c06e021fbb000f60e1b3c11682f746", "filename": "src/librustdoc/html/render/print_item.rs", "status": "modified", "additions": 15, "deletions": 8, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/8ceb283c923f83d02efb3b2ccd8296241ff1a775/src%2Flibrustdoc%2Fhtml%2Frender%2Fprint_item.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8ceb283c923f83d02efb3b2ccd8296241ff1a775/src%2Flibrustdoc%2Fhtml%2Frender%2Fprint_item.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender%2Fprint_item.rs?ref=8ceb283c923f83d02efb3b2ccd8296241ff1a775", "patch": "@@ -1101,7 +1101,12 @@ fn item_trait(w: &mut Buffer, cx: &mut Context<'_>, it: &clean::Item, t: &clean:\n     );\n }\n \n-fn item_trait_alias(w: &mut Buffer, cx: &mut Context<'_>, it: &clean::Item, t: &clean::TraitAlias) {\n+fn item_trait_alias(\n+    w: &mut impl fmt::Write,\n+    cx: &mut Context<'_>,\n+    it: &clean::Item,\n+    t: &clean::TraitAlias,\n+) {\n     wrap_item(w, |w| {\n         write!(\n             w,\n@@ -1111,16 +1116,17 @@ fn item_trait_alias(w: &mut Buffer, cx: &mut Context<'_>, it: &clean::Item, t: &\n             print_where_clause(&t.generics, cx, 0, Ending::Newline),\n             bounds(&t.bounds, true, cx),\n             attrs = render_attributes_in_pre(it, \"\", cx.tcx()),\n-        );\n+        )\n+        .unwrap();\n     });\n \n-    write!(w, \"{}\", document(cx, it, None, HeadingOffset::H2));\n-\n+    write!(w, \"{}\", document(cx, it, None, HeadingOffset::H2)).unwrap();\n     // Render any items associated directly to this alias, as otherwise they\n     // won't be visible anywhere in the docs. It would be nice to also show\n     // associated items from the aliased type (see discussion in #32077), but\n     // we need #14072 to make sense of the generics.\n     write!(w, \"{}\", render_assoc_items(cx, it, it.item_id.expect_def_id(), AssocItemRender::All))\n+        .unwrap();\n }\n \n fn item_opaque_ty(w: &mut Buffer, cx: &mut Context<'_>, it: &clean::Item, t: &clean::OpaqueTy) {\n@@ -1673,13 +1679,14 @@ fn bounds(t_bounds: &[clean::GenericBound], trait_alias: bool, cx: &Context<'_>)\n     bounds\n }\n \n-fn wrap_item<F>(w: &mut Buffer, f: F)\n+fn wrap_item<W, F>(w: &mut W, f: F)\n where\n-    F: FnOnce(&mut Buffer),\n+    W: fmt::Write,\n+    F: FnOnce(&mut W),\n {\n-    w.write_str(r#\"<pre class=\"rust item-decl\"><code>\"#);\n+    write!(w, r#\"<pre class=\"rust item-decl\"><code>\"#).unwrap();\n     f(w);\n-    w.write_str(\"</code></pre>\");\n+    write!(w, \"</code></pre>\").unwrap();\n }\n \n #[derive(PartialEq, Eq)]"}]}