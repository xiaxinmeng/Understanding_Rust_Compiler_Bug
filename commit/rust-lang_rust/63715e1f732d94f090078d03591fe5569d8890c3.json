{"sha": "63715e1f732d94f090078d03591fe5569d8890c3", "node_id": "MDY6Q29tbWl0NzI0NzEyOjYzNzE1ZTFmNzMyZDk0ZjA5MDA3OGQwMzU5MWZlNTU2OWQ4ODkwYzM=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2021-03-10T01:32:40Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-03-10T01:32:40Z"}, "message": "Merge #7955\n\n7955: Stop fetching ItemTrees for no reason r=jonas-schievink a=jonas-schievink\n\nbors r+\n\nCo-authored-by: Jonas Schievink <jonasschievink@gmail.com>", "tree": {"sha": "b08cace121f35753337c0c8e8bee586c8884ee44", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b08cace121f35753337c0c8e8bee586c8884ee44"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/63715e1f732d94f090078d03591fe5569d8890c3", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJgSCG4CRBK7hj4Ov3rIwAAdHIIAJCBiSHqLFdHx56AbhcBb7tF\nEh70N4e3ppu15Z6NwkQUZlSVY8TpweCujditMLSnelejvOcm2xQwHV5pudxFTq2D\nAsYK66OIh2EpeELodrDIPY2mxhAuoxsT4DBGKxPLdm3DhpAGpfdRW7qjkmuhg/VA\nSKxbSHFUV2f0yZ4he3T5lIarTGM2uVQi1mWdy85DNkGO07D8+1OWX2AzlFdnkcTA\na6O2HVKQtzk0ETRLAAmmT/vvA0SpSnTm0sDyJjjMqNBDltySQzjd0oTMZ273zSy/\noaURJ9X1+U4q7cRFjAoN95I0rJUVR/L2qewEZk2qI5dez4foKIZmwE/WWRdrRpo=\n=poGD\n-----END PGP SIGNATURE-----\n", "payload": "tree b08cace121f35753337c0c8e8bee586c8884ee44\nparent 654313dbc7fdfc839b79592c5a06dfe8597d55b3\nparent 7beec8fda186e525c0c2d660455a774eeda22e9d\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1615339960 +0000\ncommitter GitHub <noreply@github.com> 1615339960 +0000\n\nMerge #7955\n\n7955: Stop fetching ItemTrees for no reason r=jonas-schievink a=jonas-schievink\n\nbors r+\n\nCo-authored-by: Jonas Schievink <jonasschievink@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/63715e1f732d94f090078d03591fe5569d8890c3", "html_url": "https://github.com/rust-lang/rust/commit/63715e1f732d94f090078d03591fe5569d8890c3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/63715e1f732d94f090078d03591fe5569d8890c3/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "654313dbc7fdfc839b79592c5a06dfe8597d55b3", "url": "https://api.github.com/repos/rust-lang/rust/commits/654313dbc7fdfc839b79592c5a06dfe8597d55b3", "html_url": "https://github.com/rust-lang/rust/commit/654313dbc7fdfc839b79592c5a06dfe8597d55b3"}, {"sha": "7beec8fda186e525c0c2d660455a774eeda22e9d", "url": "https://api.github.com/repos/rust-lang/rust/commits/7beec8fda186e525c0c2d660455a774eeda22e9d", "html_url": "https://github.com/rust-lang/rust/commit/7beec8fda186e525c0c2d660455a774eeda22e9d"}], "stats": {"total": 15, "additions": 1, "deletions": 14}, "files": [{"sha": "8c8eb8007c7797cbb221a71df71ed05bdb08e962", "filename": "crates/hir_def/src/body/lower.rs", "status": "modified", "additions": 1, "deletions": 14, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/63715e1f732d94f090078d03591fe5569d8890c3/crates%2Fhir_def%2Fsrc%2Fbody%2Flower.rs", "raw_url": "https://github.com/rust-lang/rust/raw/63715e1f732d94f090078d03591fe5569d8890c3/crates%2Fhir_def%2Fsrc%2Fbody%2Flower.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_def%2Fsrc%2Fbody%2Flower.rs?ref=63715e1f732d94f090078d03591fe5569d8890c3", "patch": "@@ -1,7 +1,7 @@\n //! Transforms `ast::Expr` into an equivalent `hir_def::expr::Expr`\n //! representation.\n \n-use std::{mem, sync::Arc};\n+use std::mem;\n \n use either::Either;\n use hir_expand::{\n@@ -11,7 +11,6 @@ use hir_expand::{\n };\n use la_arena::Arena;\n use profile::Count;\n-use rustc_hash::FxHashMap;\n use syntax::{\n     ast::{\n         self, ArgListOwner, ArrayExprKind, AstChildren, LiteralKind, LoopBodyOwner, NameOwner,\n@@ -32,7 +31,6 @@ use crate::{\n         Statement,\n     },\n     item_scope::BuiltinShadowMode,\n-    item_tree::ItemTree,\n     path::{GenericArgs, Path},\n     type_ref::{Mutability, Rawness, TypeRef},\n     AdtId, BlockLoc, ModuleDefId,\n@@ -63,7 +61,6 @@ pub(super) fn lower(\n     params: Option<ast::ParamList>,\n     body: Option<ast::Expr>,\n ) -> (Body, BodySourceMap) {\n-    let item_tree = db.item_tree(expander.current_file_id);\n     ExprCollector {\n         db,\n         source_map: BodySourceMap::default(),\n@@ -76,11 +73,6 @@ pub(super) fn lower(\n             block_scopes: Vec::new(),\n             _c: Count::new(),\n         },\n-        item_trees: {\n-            let mut map = FxHashMap::default();\n-            map.insert(expander.current_file_id, item_tree);\n-            map\n-        },\n         expander,\n     }\n     .collect(params, body)\n@@ -91,8 +83,6 @@ struct ExprCollector<'a> {\n     expander: Expander,\n     body: Body,\n     source_map: BodySourceMap,\n-\n-    item_trees: FxHashMap<HirFileId, Arc<ItemTree>>,\n }\n \n impl ExprCollector<'_> {\n@@ -589,9 +579,6 @@ impl ExprCollector<'_> {\n                 } else {\n                     self.source_map.expansions.insert(macro_call, self.expander.current_file_id);\n \n-                    let item_tree = self.db.item_tree(self.expander.current_file_id);\n-                    self.item_trees.insert(self.expander.current_file_id, item_tree);\n-\n                     let id = collector(self, Some(expansion));\n                     self.expander.exit(self.db, mark);\n                     id"}]}