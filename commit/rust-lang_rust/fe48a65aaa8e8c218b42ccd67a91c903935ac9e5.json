{"sha": "fe48a65aaa8e8c218b42ccd67a91c903935ac9e5", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZlNDhhNjVhYWE4ZThjMjE4YjQyY2NkNjdhOTFjOTAzOTM1YWM5ZTU=", "commit": {"author": {"name": "Jorge Aparicio", "email": "japaricious@gmail.com", "date": "2014-12-09T17:09:31Z"}, "committer": {"name": "Jorge Aparicio", "email": "japaricious@gmail.com", "date": "2014-12-14T01:04:40Z"}, "message": "libstd: use tuple indexing", "tree": {"sha": "56c7b27d943983a32f729aabd8b1a133ac4d7c31", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/56c7b27d943983a32f729aabd8b1a133ac4d7c31"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fe48a65aaa8e8c218b42ccd67a91c903935ac9e5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fe48a65aaa8e8c218b42ccd67a91c903935ac9e5", "html_url": "https://github.com/rust-lang/rust/commit/fe48a65aaa8e8c218b42ccd67a91c903935ac9e5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fe48a65aaa8e8c218b42ccd67a91c903935ac9e5/comments", "author": null, "committer": null, "parents": [{"sha": "4deb27e67aa7280d6e6f9b70eb9447bca5e3c48f", "url": "https://api.github.com/repos/rust-lang/rust/commits/4deb27e67aa7280d6e6f9b70eb9447bca5e3c48f", "html_url": "https://github.com/rust-lang/rust/commit/4deb27e67aa7280d6e6f9b70eb9447bca5e3c48f"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "dfbba0f335cdd1b663f1d621689dc2018ad26a25", "filename": "src/libstd/sys/unix/process.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/fe48a65aaa8e8c218b42ccd67a91c903935ac9e5/src%2Flibstd%2Fsys%2Funix%2Fprocess.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fe48a65aaa8e8c218b42ccd67a91c903935ac9e5/src%2Flibstd%2Fsys%2Funix%2Fprocess.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Funix%2Fprocess.rs?ref=fe48a65aaa8e8c218b42ccd67a91c903935ac9e5", "patch": "@@ -379,8 +379,8 @@ impl Process {\n                 // wait indefinitely for a message to arrive.\n                 //\n                 // FIXME: sure would be nice to not have to scan the entire array\n-                let min = active.iter().map(|a| *a.ref2()).enumerate().min_by(|p| {\n-                    p.val1()\n+                let min = active.iter().map(|a| a.2).enumerate().min_by(|p| {\n+                    p.1\n                 });\n                 let (p, idx) = match min {\n                     Some((idx, deadline)) => {\n@@ -564,9 +564,9 @@ fn with_envp<K, V, T>(env: Option<&collections::HashMap<K, V>>,\n \n             for pair in env.iter() {\n                 let mut kv = Vec::new();\n-                kv.push_all(pair.ref0().container_as_bytes());\n+                kv.push_all(pair.0.container_as_bytes());\n                 kv.push('=' as u8);\n-                kv.push_all(pair.ref1().container_as_bytes());\n+                kv.push_all(pair.1.container_as_bytes());\n                 kv.push(0); // terminating null\n                 tmps.push(kv);\n             }"}]}