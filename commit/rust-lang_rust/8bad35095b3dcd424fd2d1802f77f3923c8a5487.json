{"sha": "8bad35095b3dcd424fd2d1802f77f3923c8a5487", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhiYWQzNTA5NWIzZGNkNDI0ZmQyZDE4MDJmNzdmMzkyM2M4YTU0ODc=", "commit": {"author": {"name": "Yuki Okushi", "email": "jtitor@2k36.org", "date": "2021-08-06T02:21:35Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-08-06T02:21:35Z"}, "message": "Rollup merge of #87770 - BoxyUwU:cec-drop-impl, r=lcnr\n\npermit drop impls with generic constants in where clauses\n\nFixes #79248\n\n`==` is not sufficient to check for equality between unevaluated consts which causes the above issue because the const in `[(); N - 1]:` on the impl and the const in `[(); N - 1]:` on the struct def are not seen as equal. Any predicate that can contain an unevaluated const cant use `==` here as it will cause us to incorrectly emit an error.\n\nI dont know much about chalk but it seems like we ought to be relating the `TypeWellFormedFromEnv` instead of `==` as it contains a `Ty` so I added that too...\n\nr? ``````@lcnr``````", "tree": {"sha": "fc4484d33c1bfd4b3ceee4fab22a58547c18d2cc", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fc4484d33c1bfd4b3ceee4fab22a58547c18d2cc"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8bad35095b3dcd424fd2d1802f77f3923c8a5487", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJhDJyvCRBK7hj4Ov3rIwAAk4kIAHCY1nxDcPdZBvoBQSwme7GB\nXNb9Le/TwYWCV/KaW8jNJakc2ZIXYBI/1s2evJQLH6ExTQ5dkNKj42PuY+Moo079\nNPusIRx4aGljrdJSKHTw819W0p4gqCfmwJVVkij/J18cXfmo12AwNyDuEFast9fm\nvEmJuNGrNqdt+JmosCY7bxV9fmqH3lvY+N/7ORJcODlRy2iAAs/ml8mLpILVwOUk\nWu9pSMYZnWQYsbwrgqjEUtABeykeCyoRwQ9Z+Bm3atfqA0CQqBXgU5EkCuqBYZsN\nokslUwqFcZaqwdfHq/V23o1MipzsAe0Ltk5VY/uJb2KmuenBU5jfExMNdXMOZaM=\n=vq6c\n-----END PGP SIGNATURE-----\n", "payload": "tree fc4484d33c1bfd4b3ceee4fab22a58547c18d2cc\nparent 41076a8ac94659e2f062f211f0e1b334155b72ab\nparent fa4671500273991967b293dd611e645512608d98\nauthor Yuki Okushi <jtitor@2k36.org> 1628216495 +0900\ncommitter GitHub <noreply@github.com> 1628216495 +0900\n\nRollup merge of #87770 - BoxyUwU:cec-drop-impl, r=lcnr\n\npermit drop impls with generic constants in where clauses\n\nFixes #79248\n\n`==` is not sufficient to check for equality between unevaluated consts which causes the above issue because the const in `[(); N - 1]:` on the impl and the const in `[(); N - 1]:` on the struct def are not seen as equal. Any predicate that can contain an unevaluated const cant use `==` here as it will cause us to incorrectly emit an error.\n\nI dont know much about chalk but it seems like we ought to be relating the `TypeWellFormedFromEnv` instead of `==` as it contains a `Ty` so I added that too...\n\nr? ``````@lcnr``````\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8bad35095b3dcd424fd2d1802f77f3923c8a5487", "html_url": "https://github.com/rust-lang/rust/commit/8bad35095b3dcd424fd2d1802f77f3923c8a5487", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8bad35095b3dcd424fd2d1802f77f3923c8a5487/comments", "author": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "41076a8ac94659e2f062f211f0e1b334155b72ab", "url": "https://api.github.com/repos/rust-lang/rust/commits/41076a8ac94659e2f062f211f0e1b334155b72ab", "html_url": "https://github.com/rust-lang/rust/commit/41076a8ac94659e2f062f211f0e1b334155b72ab"}, {"sha": "fa4671500273991967b293dd611e645512608d98", "url": "https://api.github.com/repos/rust-lang/rust/commits/fa4671500273991967b293dd611e645512608d98", "html_url": "https://github.com/rust-lang/rust/commit/fa4671500273991967b293dd611e645512608d98"}], "stats": {"total": 29, "additions": 26, "deletions": 3}, "files": [{"sha": "17f5020300d40c10b23af50e3198376ee2dc5a91", "filename": "compiler/rustc_typeck/src/check/dropck.rs", "status": "modified", "additions": 10, "deletions": 3, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/8bad35095b3dcd424fd2d1802f77f3923c8a5487/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fdropck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8bad35095b3dcd424fd2d1802f77f3923c8a5487/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fdropck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fdropck.rs?ref=8bad35095b3dcd424fd2d1802f77f3923c8a5487", "patch": "@@ -218,9 +218,9 @@ fn ensure_drop_predicates_are_implied_by_item_defn<'tcx>(\n \n         // This closure is a more robust way to check `Predicate` equality\n         // than simple `==` checks (which were the previous implementation).\n-        // It relies on `ty::relate` for `TraitPredicate` and `ProjectionPredicate`\n-        // (which implement the Relate trait), while delegating on simple equality\n-        // for the other `Predicate`.\n+        // It relies on `ty::relate` for `TraitPredicate`, `ProjectionPredicate`,\n+        // `ConstEvaluatable` and `TypeOutlives` (which implement the Relate trait),\n+        // while delegating on simple equality for the other `Predicate`.\n         // This implementation solves (Issue #59497) and (Issue #58311).\n         // It is unclear to me at the moment whether the approach based on `relate`\n         // could be extended easily also to the other `Predicate`.\n@@ -235,6 +235,13 @@ fn ensure_drop_predicates_are_implied_by_item_defn<'tcx>(\n                 (ty::PredicateKind::Projection(a), ty::PredicateKind::Projection(b)) => {\n                     relator.relate(predicate.rebind(a), p.rebind(b)).is_ok()\n                 }\n+                (\n+                    ty::PredicateKind::ConstEvaluatable(def_a, substs_a),\n+                    ty::PredicateKind::ConstEvaluatable(def_b, substs_b),\n+                ) => tcx.try_unify_abstract_consts(((def_a, substs_a), (def_b, substs_b))),\n+                (ty::PredicateKind::TypeOutlives(a), ty::PredicateKind::TypeOutlives(b)) => {\n+                    relator.relate(predicate.rebind(a.0), p.rebind(b.0)).is_ok()\n+                }\n                 _ => predicate == p,\n             }\n         };"}, {"sha": "41fb5d70afd6ee5a25eb4eba346f7080320e1187", "filename": "src/test/ui/const-generics/const_evaluatable_checked/drop_impl.rs", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/8bad35095b3dcd424fd2d1802f77f3923c8a5487/src%2Ftest%2Fui%2Fconst-generics%2Fconst_evaluatable_checked%2Fdrop_impl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8bad35095b3dcd424fd2d1802f77f3923c8a5487/src%2Ftest%2Fui%2Fconst-generics%2Fconst_evaluatable_checked%2Fdrop_impl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fconst_evaluatable_checked%2Fdrop_impl.rs?ref=8bad35095b3dcd424fd2d1802f77f3923c8a5487", "patch": "@@ -0,0 +1,16 @@\n+//check-pass\n+#![feature(const_generics, const_evaluatable_checked)]\n+#![allow(incomplete_features)]\n+\n+struct Foo<const N: usize>\n+where\n+    [(); N + 1]: ;\n+\n+impl<const N: usize> Drop for Foo<N>\n+where\n+    [(); N + 1]: ,\n+{\n+    fn drop(&mut self) {}\n+}\n+\n+fn main() {}"}]}