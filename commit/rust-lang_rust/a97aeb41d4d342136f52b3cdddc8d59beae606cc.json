{"sha": "a97aeb41d4d342136f52b3cdddc8d59beae606cc", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE5N2FlYjQxZDRkMzQyMTM2ZjUyYjNjZGRkYzhkNTliZWFlNjA2Y2M=", "commit": {"author": {"name": "Fabian Drinck", "email": "fabian.drinck@rwth-aachen.de", "date": "2019-03-17T12:30:42Z"}, "committer": {"name": "Fabian Drinck", "email": "fabian.drinck@rwth-aachen.de", "date": "2019-03-30T21:37:02Z"}, "message": "Fix more tests", "tree": {"sha": "1c6b558992e30724271637c514ef7aaa3ea1240b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1c6b558992e30724271637c514ef7aaa3ea1240b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a97aeb41d4d342136f52b3cdddc8d59beae606cc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a97aeb41d4d342136f52b3cdddc8d59beae606cc", "html_url": "https://github.com/rust-lang/rust/commit/a97aeb41d4d342136f52b3cdddc8d59beae606cc", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a97aeb41d4d342136f52b3cdddc8d59beae606cc/comments", "author": {"login": "fabric-and-ink", "id": 13430670, "node_id": "MDQ6VXNlcjEzNDMwNjcw", "avatar_url": "https://avatars.githubusercontent.com/u/13430670?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fabric-and-ink", "html_url": "https://github.com/fabric-and-ink", "followers_url": "https://api.github.com/users/fabric-and-ink/followers", "following_url": "https://api.github.com/users/fabric-and-ink/following{/other_user}", "gists_url": "https://api.github.com/users/fabric-and-ink/gists{/gist_id}", "starred_url": "https://api.github.com/users/fabric-and-ink/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fabric-and-ink/subscriptions", "organizations_url": "https://api.github.com/users/fabric-and-ink/orgs", "repos_url": "https://api.github.com/users/fabric-and-ink/repos", "events_url": "https://api.github.com/users/fabric-and-ink/events{/privacy}", "received_events_url": "https://api.github.com/users/fabric-and-ink/received_events", "type": "User", "site_admin": false}, "committer": {"login": "fabric-and-ink", "id": 13430670, "node_id": "MDQ6VXNlcjEzNDMwNjcw", "avatar_url": "https://avatars.githubusercontent.com/u/13430670?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fabric-and-ink", "html_url": "https://github.com/fabric-and-ink", "followers_url": "https://api.github.com/users/fabric-and-ink/followers", "following_url": "https://api.github.com/users/fabric-and-ink/following{/other_user}", "gists_url": "https://api.github.com/users/fabric-and-ink/gists{/gist_id}", "starred_url": "https://api.github.com/users/fabric-and-ink/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fabric-and-ink/subscriptions", "organizations_url": "https://api.github.com/users/fabric-and-ink/orgs", "repos_url": "https://api.github.com/users/fabric-and-ink/repos", "events_url": "https://api.github.com/users/fabric-and-ink/events{/privacy}", "received_events_url": "https://api.github.com/users/fabric-and-ink/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4a619aa1261c995abedc446226a7701c2c9e1c79", "url": "https://api.github.com/repos/rust-lang/rust/commits/4a619aa1261c995abedc446226a7701c2c9e1c79", "html_url": "https://github.com/rust-lang/rust/commit/4a619aa1261c995abedc446226a7701c2c9e1c79"}], "stats": {"total": 10, "additions": 0, "deletions": 10}, "files": [{"sha": "5f7e357eeb2a9f591c03502c1a516c64512c461c", "filename": "src/test/run-pass/binding/match-arm-statics.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a97aeb41d4d342136f52b3cdddc8d59beae606cc/src%2Ftest%2Frun-pass%2Fbinding%2Fmatch-arm-statics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a97aeb41d4d342136f52b3cdddc8d59beae606cc/src%2Ftest%2Frun-pass%2Fbinding%2Fmatch-arm-statics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fbinding%2Fmatch-arm-statics.rs?ref=a97aeb41d4d342136f52b3cdddc8d59beae606cc", "patch": "@@ -45,8 +45,6 @@ pub mod glfw {\n }\n \n fn issue_6533() {\n-    use glfw;\n-\n     fn action_to_str(state: glfw::InputState) -> &'static str {\n         use glfw::{RELEASE, PRESS, REPEAT};\n         match state {"}, {"sha": "8c17b01e2bd899da9bff7fe79cac7594920ea96a", "filename": "src/test/run-pass/ifmt.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a97aeb41d4d342136f52b3cdddc8d59beae606cc/src%2Ftest%2Frun-pass%2Fifmt.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a97aeb41d4d342136f52b3cdddc8d59beae606cc/src%2Ftest%2Frun-pass%2Fifmt.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fifmt.rs?ref=a97aeb41d4d342136f52b3cdddc8d59beae606cc", "patch": "@@ -238,7 +238,6 @@ pub fn main() {\n // Basic test to make sure that we can invoke the `write!` macro with an\n // fmt::Write instance.\n fn test_write() {\n-    use std::fmt::Write;\n     let mut buf = String::new();\n     write!(&mut buf, \"{}\", 3);\n     {\n@@ -267,7 +266,6 @@ fn test_print() {\n // Just make sure that the macros are defined, there's not really a lot that we\n // can do with them just yet (to test the output)\n fn test_format_args() {\n-    use std::fmt::Write;\n     let mut buf = String::new();\n     {\n         let w = &mut buf;"}, {"sha": "2775aac015615ed0b7fa7c4744c9a6fd1865a6ae", "filename": "src/test/run-pass/invalid_const_promotion.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/a97aeb41d4d342136f52b3cdddc8d59beae606cc/src%2Ftest%2Frun-pass%2Finvalid_const_promotion.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a97aeb41d4d342136f52b3cdddc8d59beae606cc/src%2Ftest%2Frun-pass%2Finvalid_const_promotion.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Finvalid_const_promotion.rs?ref=a97aeb41d4d342136f52b3cdddc8d59beae606cc", "patch": "@@ -25,7 +25,6 @@ fn foo() {\n #[cfg(unix)]\n fn check_status(status: std::process::ExitStatus)\n {\n-    use libc;\n     use std::os::unix::process::ExitStatusExt;\n \n     assert!(status.signal() == Some(libc::SIGILL)"}, {"sha": "63fd9db08ff2fc35797c241bac466ab03c444f5d", "filename": "src/test/run-pass/issues/issue-38556.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/a97aeb41d4d342136f52b3cdddc8d59beae606cc/src%2Ftest%2Frun-pass%2Fissues%2Fissue-38556.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a97aeb41d4d342136f52b3cdddc8d59beae606cc/src%2Ftest%2Frun-pass%2Fissues%2Fissue-38556.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissues%2Fissue-38556.rs?ref=a97aeb41d4d342136f52b3cdddc8d59beae606cc", "patch": "@@ -9,6 +9,5 @@ macro_rules! reexport {\n reexport!();\n \n fn main() {\n-    use Bar;\n     fn f(_: Bar) {}\n }"}, {"sha": "484cd782a09df6e4283b6b4f7fcb571e9f791370", "filename": "src/test/run-pass/issues/issue-39367.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/a97aeb41d4d342136f52b3cdddc8d59beae606cc/src%2Ftest%2Frun-pass%2Fissues%2Fissue-39367.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a97aeb41d4d342136f52b3cdddc8d59beae606cc/src%2Ftest%2Frun-pass%2Fissues%2Fissue-39367.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissues%2Fissue-39367.rs?ref=a97aeb41d4d342136f52b3cdddc8d59beae606cc", "patch": "@@ -15,7 +15,6 @@ fn arena() -> &'static ArenaSet<Vec<u8>> {\n         fn require_sync<T: Sync>(_: &T) { }\n         unsafe fn __stability() -> &'static ArenaSet<Vec<u8>> {\n             use std::mem::transmute;\n-            use std::boxed::Box;\n             static mut DATA: *const ArenaSet<Vec<u8>> = 0 as *const ArenaSet<Vec<u8>>;\n \n             static mut ONCE: Once = ONCE_INIT;"}, {"sha": "9f868d6e5c3e412422c8034416685f2a61a14fc5", "filename": "src/test/run-pass/out-of-stack.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/a97aeb41d4d342136f52b3cdddc8d59beae606cc/src%2Ftest%2Frun-pass%2Fout-of-stack.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a97aeb41d4d342136f52b3cdddc8d59beae606cc/src%2Ftest%2Frun-pass%2Fout-of-stack.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fout-of-stack.rs?ref=a97aeb41d4d342136f52b3cdddc8d59beae606cc", "patch": "@@ -36,7 +36,6 @@ fn loud_recurse() {\n #[cfg(unix)]\n fn check_status(status: std::process::ExitStatus)\n {\n-    use libc;\n     use std::os::unix::process::ExitStatusExt;\n \n     assert!(!status.success());"}, {"sha": "f25d81f1c9a52fbe6a6fa475fbb32ab10d379a16", "filename": "src/test/run-pass/rfcs/rfc-2126-extern-absolute-paths/basic.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/a97aeb41d4d342136f52b3cdddc8d59beae606cc/src%2Ftest%2Frun-pass%2Frfcs%2Frfc-2126-extern-absolute-paths%2Fbasic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a97aeb41d4d342136f52b3cdddc8d59beae606cc/src%2Ftest%2Frun-pass%2Frfcs%2Frfc-2126-extern-absolute-paths%2Fbasic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Frfcs%2Frfc-2126-extern-absolute-paths%2Fbasic.rs?ref=a97aeb41d4d342136f52b3cdddc8d59beae606cc", "patch": "@@ -7,7 +7,6 @@\n use xcrate::Z;\n \n fn f() {\n-    use xcrate;\n     use xcrate as ycrate;\n     let s = xcrate::S;\n     assert_eq!(format!(\"{:?}\", s), \"S\");"}, {"sha": "626e1ae71bc2fc7a7322ac392ead07e0d3c565a1", "filename": "src/test/run-pass/traits/traits-multidispatch-infer-convert-target.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/a97aeb41d4d342136f52b3cdddc8d59beae606cc/src%2Ftest%2Frun-pass%2Ftraits%2Ftraits-multidispatch-infer-convert-target.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a97aeb41d4d342136f52b3cdddc8d59beae606cc/src%2Ftest%2Frun-pass%2Ftraits%2Ftraits-multidispatch-infer-convert-target.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ftraits%2Ftraits-multidispatch-infer-convert-target.rs?ref=a97aeb41d4d342136f52b3cdddc8d59beae606cc", "patch": "@@ -28,7 +28,6 @@ where T : Convert<U>\n }\n \n fn main() {\n-    use std::default::Default;\n     // T = i16, U = u32\n     test(22_i16, Default::default(),  2, 4);\n "}]}