{"sha": "f82bf470d029cc4c998bfbe15acec8ec701c2aab", "node_id": "C_kwDOAAsO6NoAKGY4MmJmNDcwZDAyOWNjNGM5OThiZmJlMTVhY2VjOGVjNzAxYzJhYWI", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-11-15T00:50:28Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-11-15T00:50:28Z"}, "message": "Auto merge of #7957 - surechen:fix_for_7854, r=giraffate\n\nSupport suggestion for #7854\n\nI think the detection of parking_lot's mutex and rwlock is valuable, so submit this pr, please help judge and review, thank you.\n\nMake let_underscore_lock support parking_lot.(Fixes #7854)\n\nchangelog: Make let_underscore_lock support parking_lot", "tree": {"sha": "14afb966ff8321143a477ea3246f8fc9cfe4ac09", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/14afb966ff8321143a477ea3246f8fc9cfe4ac09"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f82bf470d029cc4c998bfbe15acec8ec701c2aab", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f82bf470d029cc4c998bfbe15acec8ec701c2aab", "html_url": "https://github.com/rust-lang/rust/commit/f82bf470d029cc4c998bfbe15acec8ec701c2aab", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f82bf470d029cc4c998bfbe15acec8ec701c2aab/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f51fb341dd3ff79f400ee816dceb81eb2d0c5106", "url": "https://api.github.com/repos/rust-lang/rust/commits/f51fb341dd3ff79f400ee816dceb81eb2d0c5106", "html_url": "https://github.com/rust-lang/rust/commit/f51fb341dd3ff79f400ee816dceb81eb2d0c5106"}, {"sha": "634e79c65574269a6a6dc2fec3b78848ddf2fdd0", "url": "https://api.github.com/repos/rust-lang/rust/commits/634e79c65574269a6a6dc2fec3b78848ddf2fdd0", "html_url": "https://github.com/rust-lang/rust/commit/634e79c65574269a6a6dc2fec3b78848ddf2fdd0"}], "stats": {"total": 73, "additions": 64, "deletions": 9}, "files": [{"sha": "fdafdffca6438df238d0618a3f76034d84513ce3", "filename": "Cargo.toml", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/f82bf470d029cc4c998bfbe15acec8ec701c2aab/Cargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/f82bf470d029cc4c998bfbe15acec8ec701c2aab/Cargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.toml?ref=f82bf470d029cc4c998bfbe15acec8ec701c2aab", "patch": "@@ -47,6 +47,7 @@ itertools = \"0.10\"\n quote = \"1.0\"\n serde = { version = \"1.0\", features = [\"derive\"] }\n syn = { version = \"1.0\", features = [\"full\"] }\n+parking_lot = \"0.11.2\"\n \n [build-dependencies]\n rustc_tools_util = { version = \"0.2\", path = \"rustc_tools_util\" }"}, {"sha": "d03276f7f98ba70912584d40a3256c88c0d86d58", "filename": "clippy_lints/src/let_underscore.rs", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/f82bf470d029cc4c998bfbe15acec8ec701c2aab/clippy_lints%2Fsrc%2Flet_underscore.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f82bf470d029cc4c998bfbe15acec8ec701c2aab/clippy_lints%2Fsrc%2Flet_underscore.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flet_underscore.rs?ref=f82bf470d029cc4c998bfbe15acec8ec701c2aab", "patch": "@@ -34,7 +34,8 @@ declare_clippy_lint! {\n \n declare_clippy_lint! {\n     /// ### What it does\n-    /// Checks for `let _ = sync_lock`\n+    /// Checks for `let _ = sync_lock`.\n+    /// This supports `mutex` and `rwlock` in `std::sync` and `parking_lot`.\n     ///\n     /// ### Why is this bad?\n     /// This statement immediately drops the lock instead of\n@@ -104,10 +105,12 @@ declare_clippy_lint! {\n \n declare_lint_pass!(LetUnderscore => [LET_UNDERSCORE_MUST_USE, LET_UNDERSCORE_LOCK, LET_UNDERSCORE_DROP]);\n \n-const SYNC_GUARD_PATHS: [&[&str]; 3] = [\n+const SYNC_GUARD_PATHS: [&[&str]; 5] = [\n     &paths::MUTEX_GUARD,\n     &paths::RWLOCK_READ_GUARD,\n     &paths::RWLOCK_WRITE_GUARD,\n+    &paths::PARKING_LOT_RAWMUTEX,\n+    &paths::PARKING_LOT_RAWRWLOCK,\n ];\n \n impl<'tcx> LateLintPass<'tcx> for LetUnderscore {"}, {"sha": "480923bbb02da3dbe5bb8426426ed31fef0ce4c8", "filename": "clippy_utils/src/paths.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f82bf470d029cc4c998bfbe15acec8ec701c2aab/clippy_utils%2Fsrc%2Fpaths.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f82bf470d029cc4c998bfbe15acec8ec701c2aab/clippy_utils%2Fsrc%2Fpaths.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_utils%2Fsrc%2Fpaths.rs?ref=f82bf470d029cc4c998bfbe15acec8ec701c2aab", "patch": "@@ -110,6 +110,8 @@ pub(super) const PANICKING_PANIC: [&str; 3] = [\"core\", \"panicking\", \"panic\"];\n pub(super) const PANICKING_PANIC_FMT: [&str; 3] = [\"core\", \"panicking\", \"panic_fmt\"];\n pub(super) const PANICKING_PANIC_STR: [&str; 3] = [\"core\", \"panicking\", \"panic_str\"];\n pub(super) const PANIC_ANY: [&str; 3] = [\"std\", \"panic\", \"panic_any\"];\n+pub const PARKING_LOT_RAWMUTEX: [&str; 3] = [\"parking_lot\", \"raw_mutex\", \"RawMutex\"];\n+pub const PARKING_LOT_RAWRWLOCK: [&str; 3] = [\"parking_lot\", \"raw_rwlock\", \"RawRwLock\"];\n pub const PARKING_LOT_MUTEX_GUARD: [&str; 2] = [\"parking_lot\", \"MutexGuard\"];\n pub const PARKING_LOT_RWLOCK_READ_GUARD: [&str; 2] = [\"parking_lot\", \"RwLockReadGuard\"];\n pub const PARKING_LOT_RWLOCK_WRITE_GUARD: [&str; 2] = [\"parking_lot\", \"RwLockWriteGuard\"];"}, {"sha": "a2d58491872b30813e99e0bb2685478183c6dc74", "filename": "tests/compile-test.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/f82bf470d029cc4c998bfbe15acec8ec701c2aab/tests%2Fcompile-test.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f82bf470d029cc4c998bfbe15acec8ec701c2aab/tests%2Fcompile-test.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-test.rs?ref=f82bf470d029cc4c998bfbe15acec8ec701c2aab", "patch": "@@ -28,6 +28,7 @@ static TEST_DEPENDENCIES: &[&str] = &[\n     \"serde\",\n     \"serde_derive\",\n     \"syn\",\n+    \"parking_lot\",\n ];\n \n // Test dependencies may need an `extern crate` here to ensure that they show up\n@@ -41,6 +42,8 @@ extern crate if_chain;\n #[allow(unused_extern_crates)]\n extern crate itertools;\n #[allow(unused_extern_crates)]\n+extern crate parking_lot;\n+#[allow(unused_extern_crates)]\n extern crate quote;\n #[allow(unused_extern_crates)]\n extern crate syn;"}, {"sha": "539d74d1d4c9afce30deff1105cabc8d6756c0d4", "filename": "tests/ui/let_underscore_lock.rs", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/f82bf470d029cc4c998bfbe15acec8ec701c2aab/tests%2Fui%2Flet_underscore_lock.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f82bf470d029cc4c998bfbe15acec8ec701c2aab/tests%2Fui%2Flet_underscore_lock.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Flet_underscore_lock.rs?ref=f82bf470d029cc4c998bfbe15acec8ec701c2aab", "patch": "@@ -1,5 +1,7 @@\n #![warn(clippy::let_underscore_lock)]\n \n+extern crate parking_lot;\n+\n fn main() {\n     let m = std::sync::Mutex::new(());\n     let rw = std::sync::RwLock::new(());\n@@ -10,4 +12,16 @@ fn main() {\n     let _ = m.try_lock();\n     let _ = rw.try_read();\n     let _ = rw.try_write();\n+\n+    use parking_lot::{lock_api::RawMutex, Mutex, RwLock};\n+\n+    let p_m: Mutex<()> = Mutex::const_new(RawMutex::INIT, ());\n+    let _ = p_m.lock();\n+\n+    let p_m1 = Mutex::new(0);\n+    let _ = p_m1.lock();\n+\n+    let p_rw = RwLock::new(0);\n+    let _ = p_rw.read();\n+    let _ = p_rw.write();\n }"}, {"sha": "3a2bc17bf7b20556edd6ffa07a848f3fea73effc", "filename": "tests/ui/let_underscore_lock.stderr", "status": "modified", "additions": 39, "deletions": 7, "changes": 46, "blob_url": "https://github.com/rust-lang/rust/blob/f82bf470d029cc4c998bfbe15acec8ec701c2aab/tests%2Fui%2Flet_underscore_lock.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f82bf470d029cc4c998bfbe15acec8ec701c2aab/tests%2Fui%2Flet_underscore_lock.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Flet_underscore_lock.stderr?ref=f82bf470d029cc4c998bfbe15acec8ec701c2aab", "patch": "@@ -1,5 +1,5 @@\n error: non-binding let on a synchronization lock\n-  --> $DIR/let_underscore_lock.rs:7:5\n+  --> $DIR/let_underscore_lock.rs:9:5\n    |\n LL |     let _ = m.lock();\n    |     ^^^^^^^^^^^^^^^^^\n@@ -8,44 +8,76 @@ LL |     let _ = m.lock();\n    = help: consider using an underscore-prefixed named binding or dropping explicitly with `std::mem::drop`\n \n error: non-binding let on a synchronization lock\n-  --> $DIR/let_underscore_lock.rs:8:5\n+  --> $DIR/let_underscore_lock.rs:10:5\n    |\n LL |     let _ = rw.read();\n    |     ^^^^^^^^^^^^^^^^^^\n    |\n    = help: consider using an underscore-prefixed named binding or dropping explicitly with `std::mem::drop`\n \n error: non-binding let on a synchronization lock\n-  --> $DIR/let_underscore_lock.rs:9:5\n+  --> $DIR/let_underscore_lock.rs:11:5\n    |\n LL |     let _ = rw.write();\n    |     ^^^^^^^^^^^^^^^^^^^\n    |\n    = help: consider using an underscore-prefixed named binding or dropping explicitly with `std::mem::drop`\n \n error: non-binding let on a synchronization lock\n-  --> $DIR/let_underscore_lock.rs:10:5\n+  --> $DIR/let_underscore_lock.rs:12:5\n    |\n LL |     let _ = m.try_lock();\n    |     ^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: consider using an underscore-prefixed named binding or dropping explicitly with `std::mem::drop`\n \n error: non-binding let on a synchronization lock\n-  --> $DIR/let_underscore_lock.rs:11:5\n+  --> $DIR/let_underscore_lock.rs:13:5\n    |\n LL |     let _ = rw.try_read();\n    |     ^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: consider using an underscore-prefixed named binding or dropping explicitly with `std::mem::drop`\n \n error: non-binding let on a synchronization lock\n-  --> $DIR/let_underscore_lock.rs:12:5\n+  --> $DIR/let_underscore_lock.rs:14:5\n    |\n LL |     let _ = rw.try_write();\n    |     ^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: consider using an underscore-prefixed named binding or dropping explicitly with `std::mem::drop`\n \n-error: aborting due to 6 previous errors\n+error: non-binding let on a synchronization lock\n+  --> $DIR/let_underscore_lock.rs:19:5\n+   |\n+LL |     let _ = p_m.lock();\n+   |     ^^^^^^^^^^^^^^^^^^^\n+   |\n+   = help: consider using an underscore-prefixed named binding or dropping explicitly with `std::mem::drop`\n+\n+error: non-binding let on a synchronization lock\n+  --> $DIR/let_underscore_lock.rs:22:5\n+   |\n+LL |     let _ = p_m1.lock();\n+   |     ^^^^^^^^^^^^^^^^^^^^\n+   |\n+   = help: consider using an underscore-prefixed named binding or dropping explicitly with `std::mem::drop`\n+\n+error: non-binding let on a synchronization lock\n+  --> $DIR/let_underscore_lock.rs:25:5\n+   |\n+LL |     let _ = p_rw.read();\n+   |     ^^^^^^^^^^^^^^^^^^^^\n+   |\n+   = help: consider using an underscore-prefixed named binding or dropping explicitly with `std::mem::drop`\n+\n+error: non-binding let on a synchronization lock\n+  --> $DIR/let_underscore_lock.rs:26:5\n+   |\n+LL |     let _ = p_rw.write();\n+   |     ^^^^^^^^^^^^^^^^^^^^^\n+   |\n+   = help: consider using an underscore-prefixed named binding or dropping explicitly with `std::mem::drop`\n+\n+error: aborting due to 10 previous errors\n "}]}