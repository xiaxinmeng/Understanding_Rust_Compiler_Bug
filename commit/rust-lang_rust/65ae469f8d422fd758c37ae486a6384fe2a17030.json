{"sha": "65ae469f8d422fd758c37ae486a6384fe2a17030", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY1YWU0NjlmOGQ0MjJmZDc1OGMzN2FlNDg2YTYzODRmZTJhMTcwMzA=", "commit": {"author": {"name": "Jonas Schievink", "email": "jonasschievink@gmail.com", "date": "2020-11-10T13:45:21Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-11-10T13:45:21Z"}, "message": "Rollup merge of #78875 - petrochenkov:cleantarg, r=Mark-Simulacrum\n\nrustc_target: Further cleanup use of target options\n\nFollow up to https://github.com/rust-lang/rust/pull/77729.\n\nImplements items 2 and 4 from the list in https://github.com/rust-lang/rust/pull/77729#issue-500228243.\n\nThe first commit collapses uses of `target.options.foo` into `target.foo`.\n\nThe second commit renames some target options to avoid tautology:\n`target.target_endian` -> `target.endian`\n`target.target_c_int_width` -> `target.c_int_width`\n`target.target_os` -> `target.os`\n`target.target_env` -> `target.env`\n`target.target_vendor` -> `target.vendor`\n`target.target_family` -> `target.os_family`\n`target.target_mcount` -> `target.mcount`\n\nr? `@Mark-Simulacrum`", "tree": {"sha": "479f2c42d8ae4846d903c14069888a54f938f04b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/479f2c42d8ae4846d903c14069888a54f938f04b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/65ae469f8d422fd758c37ae486a6384fe2a17030", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/65ae469f8d422fd758c37ae486a6384fe2a17030", "html_url": "https://github.com/rust-lang/rust/commit/65ae469f8d422fd758c37ae486a6384fe2a17030", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/65ae469f8d422fd758c37ae486a6384fe2a17030/comments", "author": {"login": "jonas-schievink", "id": 1786438, "node_id": "MDQ6VXNlcjE3ODY0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1786438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonas-schievink", "html_url": "https://github.com/jonas-schievink", "followers_url": "https://api.github.com/users/jonas-schievink/followers", "following_url": "https://api.github.com/users/jonas-schievink/following{/other_user}", "gists_url": "https://api.github.com/users/jonas-schievink/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonas-schievink/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonas-schievink/subscriptions", "organizations_url": "https://api.github.com/users/jonas-schievink/orgs", "repos_url": "https://api.github.com/users/jonas-schievink/repos", "events_url": "https://api.github.com/users/jonas-schievink/events{/privacy}", "received_events_url": "https://api.github.com/users/jonas-schievink/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "806538fa78c3c8ceb7c6b52b08831ed840a940f4", "url": "https://api.github.com/repos/rust-lang/rust/commits/806538fa78c3c8ceb7c6b52b08831ed840a940f4", "html_url": "https://github.com/rust-lang/rust/commit/806538fa78c3c8ceb7c6b52b08831ed840a940f4"}, {"sha": "e9c34b3cf8f368077065e7f9a658038f36e196eb", "url": "https://api.github.com/repos/rust-lang/rust/commits/e9c34b3cf8f368077065e7f9a658038f36e196eb", "html_url": "https://github.com/rust-lang/rust/commit/e9c34b3cf8f368077065e7f9a658038f36e196eb"}], "stats": {"total": 16, "additions": 8, "deletions": 8}, "files": [{"sha": "daf9fa6158f1c544fc59f3a65b2c7b8e7fe19216", "filename": "src/archive.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/65ae469f8d422fd758c37ae486a6384fe2a17030/src%2Farchive.rs", "raw_url": "https://github.com/rust-lang/rust/raw/65ae469f8d422fd758c37ae486a6384fe2a17030/src%2Farchive.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Farchive.rs?ref=65ae469f8d422fd758c37ae486a6384fe2a17030", "patch": "@@ -63,9 +63,9 @@ impl<'a> ArchiveBuilder<'a> for ArArchiveBuilder<'a> {\n             sess,\n             dst: output.to_path_buf(),\n             lib_search_paths: archive_search_paths(sess),\n-            use_gnu_style_archive: sess.target.options.archive_format == \"gnu\",\n+            use_gnu_style_archive: sess.target.archive_format == \"gnu\",\n             // FIXME fix builtin ranlib on macOS\n-            no_builtin_ranlib: sess.target.options.is_like_osx,\n+            no_builtin_ranlib: sess.target.is_like_osx,\n \n             src_archives,\n             entries,"}, {"sha": "85e8158af27ad5f9f8a6af1fde98c6c20c915006", "filename": "src/debuginfo/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/65ae469f8d422fd758c37ae486a6384fe2a17030/src%2Fdebuginfo%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/65ae469f8d422fd758c37ae486a6384fe2a17030/src%2Fdebuginfo%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdebuginfo%2Fmod.rs?ref=65ae469f8d422fd758c37ae486a6384fe2a17030", "patch": "@@ -50,7 +50,7 @@ impl<'tcx> DebugContext<'tcx> {\n             // TODO: this should be configurable\n             // macOS doesn't seem to support DWARF > 3\n             // 5 version is required for md5 file hash\n-            version: if tcx.sess.target.options.is_like_osx {\n+            version: if tcx.sess.target.is_like_osx {\n                 3\n             } else {\n                 // FIXME change to version 5 once the gdb and lldb shipping with the latest debian"}, {"sha": "c0245aa1e02138d494e5e4d955b5462f9a33f9be", "filename": "src/driver/aot.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/65ae469f8d422fd758c37ae486a6384fe2a17030/src%2Fdriver%2Faot.rs", "raw_url": "https://github.com/rust-lang/rust/raw/65ae469f8d422fd758c37ae486a6384fe2a17030/src%2Fdriver%2Faot.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdriver%2Faot.rs?ref=65ae469f8d422fd758c37ae486a6384fe2a17030", "patch": "@@ -320,8 +320,8 @@ fn codegen_global_asm(tcx: TyCtxt<'_>, cgu_name: &str, global_asm: &str) {\n     }\n \n     if cfg!(not(feature = \"inline_asm\"))\n-        || tcx.sess.target.options.is_like_osx\n-        || tcx.sess.target.options.is_like_windows\n+        || tcx.sess.target.is_like_osx\n+        || tcx.sess.target.is_like_windows\n     {\n         if global_asm.contains(\"__rust_probestack\") {\n             return;"}, {"sha": "2e3b9fb8364e493fca716d638e1d70f1a3fd3e5f", "filename": "src/metadata.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/65ae469f8d422fd758c37ae486a6384fe2a17030/src%2Fmetadata.rs", "raw_url": "https://github.com/rust-lang/rust/raw/65ae469f8d422fd758c37ae486a6384fe2a17030/src%2Fmetadata.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fmetadata.rs?ref=65ae469f8d422fd758c37ae486a6384fe2a17030", "patch": "@@ -101,7 +101,7 @@ pub(crate) fn write_metadata<P: WriteMetadata>(\n     product.add_rustc_section(\n         rustc_middle::middle::exported_symbols::metadata_symbol_name(tcx),\n         compressed,\n-        tcx.sess.target.options.is_like_osx,\n+        tcx.sess.target.is_like_osx,\n     );\n \n     metadata"}, {"sha": "735c59d70c1201a87f322b26c29c687d8fdc4796", "filename": "src/toolchain.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/65ae469f8d422fd758c37ae486a6384fe2a17030/src%2Ftoolchain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/65ae469f8d422fd758c37ae486a6384fe2a17030/src%2Ftoolchain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftoolchain.rs?ref=65ae469f8d422fd758c37ae486a6384fe2a17030", "patch": "@@ -91,7 +91,7 @@ fn linker_and_flavor(sess: &Session) -> (PathBuf, LinkerFlavor) {\n                 } else if stem == \"link\" || stem == \"lld-link\" {\n                     LinkerFlavor::Msvc\n                 } else if stem == \"lld\" || stem == \"rust-lld\" {\n-                    LinkerFlavor::Lld(sess.target.options.lld_flavor)\n+                    LinkerFlavor::Lld(sess.target.lld_flavor)\n                 } else {\n                     // fall back to the value in the target spec\n                     sess.target.linker_flavor\n@@ -115,7 +115,7 @@ fn linker_and_flavor(sess: &Session) -> (PathBuf, LinkerFlavor) {\n \n     if let Some(ret) = infer_from(\n         sess,\n-        sess.target.options.linker.clone().map(PathBuf::from),\n+        sess.target.linker.clone().map(PathBuf::from),\n         Some(sess.target.linker_flavor),\n     ) {\n         return ret;"}]}