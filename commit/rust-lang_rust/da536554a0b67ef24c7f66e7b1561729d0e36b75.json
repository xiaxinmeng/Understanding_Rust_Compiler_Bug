{"sha": "da536554a0b67ef24c7f66e7b1561729d0e36b75", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRhNTM2NTU0YTBiNjdlZjI0YzdmNjZlN2IxNTYxNzI5ZDBlMzZiNzU=", "commit": {"author": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2021-02-04T10:17:01Z"}, "committer": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2021-02-04T10:17:01Z"}, "message": "Use is_local instead of as_local", "tree": {"sha": "1712ad4ea8abf1c01caab785f7d24f3a239edb27", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1712ad4ea8abf1c01caab785f7d24f3a239edb27"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/da536554a0b67ef24c7f66e7b1561729d0e36b75", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/da536554a0b67ef24c7f66e7b1561729d0e36b75", "html_url": "https://github.com/rust-lang/rust/commit/da536554a0b67ef24c7f66e7b1561729d0e36b75", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/da536554a0b67ef24c7f66e7b1561729d0e36b75/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fbe109a2fc365087d778d2993cfa78cb2250475d", "url": "https://api.github.com/repos/rust-lang/rust/commits/fbe109a2fc365087d778d2993cfa78cb2250475d", "html_url": "https://github.com/rust-lang/rust/commit/fbe109a2fc365087d778d2993cfa78cb2250475d"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "16e1a8a1242ae32c61c6f4ec3f16d41c21dfb593", "filename": "compiler/rustc_codegen_llvm/src/consts.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/da536554a0b67ef24c7f66e7b1561729d0e36b75/compiler%2Frustc_codegen_llvm%2Fsrc%2Fconsts.rs", "raw_url": "https://github.com/rust-lang/rust/raw/da536554a0b67ef24c7f66e7b1561729d0e36b75/compiler%2Frustc_codegen_llvm%2Fsrc%2Fconsts.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_llvm%2Fsrc%2Fconsts.rs?ref=da536554a0b67ef24c7f66e7b1561729d0e36b75", "patch": "@@ -210,7 +210,7 @@ impl CodegenCx<'ll, 'tcx> {\n \n         debug!(\"get_static: sym={} instance={:?} fn_attrs={:?}\", sym, instance, fn_attrs);\n \n-        let g = if def_id.as_local().is_some() && !self.tcx.is_foreign_item(def_id) {\n+        let g = if def_id.is_local() && !self.tcx.is_foreign_item(def_id) {\n             let llty = self.layout_of(ty).llvm_type(self);\n             if let Some(g) = self.get_declared_value(sym) {\n                 if self.val_ty(g) != self.type_ptr_to(llty) {\n@@ -241,7 +241,7 @@ impl CodegenCx<'ll, 'tcx> {\n             llvm::set_thread_local_mode(g, self.tls_model);\n         }\n \n-        if def_id.as_local().is_none() {\n+        if !def_id.is_local() {\n             let needs_dll_storage_attr = self.use_dll_storage_attrs && !self.tcx.is_foreign_item(def_id) &&\n                 // ThinLTO can't handle this workaround in all cases, so we don't\n                 // emit the attrs. Instead we make them unnecessary by disallowing"}]}