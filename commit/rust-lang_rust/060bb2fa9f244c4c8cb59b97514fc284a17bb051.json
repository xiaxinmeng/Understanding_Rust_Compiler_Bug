{"sha": "060bb2fa9f244c4c8cb59b97514fc284a17bb051", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA2MGJiMmZhOWYyNDRjNGM4Y2I1OWI5NzUxNGZjMjg0YTE3YmIwNTE=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2017-09-16T10:36:28Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2017-09-16T10:36:31Z"}, "message": "use ui test mode rather than mir-opt\n\nThese tests are not run per default", "tree": {"sha": "b6cc54b597409e17ba012940281c2e8982bc6c0f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b6cc54b597409e17ba012940281c2e8982bc6c0f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/060bb2fa9f244c4c8cb59b97514fc284a17bb051", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/060bb2fa9f244c4c8cb59b97514fc284a17bb051", "html_url": "https://github.com/rust-lang/rust/commit/060bb2fa9f244c4c8cb59b97514fc284a17bb051", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/060bb2fa9f244c4c8cb59b97514fc284a17bb051/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1fc3a00c90e7d4ba53a8fb7464a7f8cbfa8470a2", "url": "https://api.github.com/repos/rust-lang/rust/commits/1fc3a00c90e7d4ba53a8fb7464a7f8cbfa8470a2", "html_url": "https://github.com/rust-lang/rust/commit/1fc3a00c90e7d4ba53a8fb7464a7f8cbfa8470a2"}], "stats": {"total": 24, "additions": 14, "deletions": 10}, "files": [{"sha": "5285d02b4f0e564890e4ae0e3275940febe7fab5", "filename": "miri/fn_call.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/060bb2fa9f244c4c8cb59b97514fc284a17bb051/miri%2Ffn_call.rs", "raw_url": "https://github.com/rust-lang/rust/raw/060bb2fa9f244c4c8cb59b97514fc284a17bb051/miri%2Ffn_call.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/miri%2Ffn_call.rs?ref=060bb2fa9f244c4c8cb59b97514fc284a17bb051", "patch": "@@ -340,7 +340,7 @@ impl<'a, 'tcx> EvalContextExt<'tcx> for EvalContext<'a, 'tcx, super::Evaluator>\n                         Err(_) => -1,\n                     }\n                 } else {\n-                    info!(\"Ignored output to FD {}\", fd);\n+                    warn!(\"Ignored output to FD {}\", fd);\n                     n as isize // pretend it all went well\n                 }; // now result is the value we return back to the program\n                 self.write_primval(\n@@ -456,7 +456,7 @@ impl<'a, 'tcx> EvalContextExt<'tcx> for EvalContext<'a, 'tcx, super::Evaluator>\n \n             // Stub out all the other pthread calls to just return 0\n             link_name if link_name.starts_with(\"pthread_\") => {\n-                warn!(\"ignoring C ABI call: {}\", link_name);\n+                info!(\"ignoring C ABI call: {}\", link_name);\n                 self.write_null(dest, dest_ty)?;\n             }\n \n@@ -616,7 +616,7 @@ impl<'a, 'tcx> EvalContextExt<'tcx> for EvalContext<'a, 'tcx, super::Evaluator>\n             // A Rust function is missing, which means we are running with MIR missing for libstd (or other dependencies).\n             // Still, we can make many things mostly work by \"emulating\" or ignoring some functions.\n             \"std::io::_print\" => {\n-                trace!(\n+                warn!(\n                     \"Ignoring output.  To run programs that print, make sure you have a libstd with full MIR.\"\n                 );\n             }"}, {"sha": "b87fd7d243469ceda47b9b51f330f28be210f564", "filename": "tests/compiletest.rs", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/060bb2fa9f244c4c8cb59b97514fc284a17bb051/tests%2Fcompiletest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/060bb2fa9f244c4c8cb59b97514fc284a17bb051/tests%2Fcompiletest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompiletest.rs?ref=060bb2fa9f244c4c8cb59b97514fc284a17bb051", "patch": "@@ -5,6 +5,7 @@ extern crate compiletest_rs as compiletest;\n use std::slice::SliceConcatExt;\n use std::path::{PathBuf, Path};\n use std::io::Write;\n+use std::env;\n \n macro_rules! eprintln {\n     ($($arg:tt)*) => {\n@@ -90,7 +91,7 @@ fn miri_pass(path: &str, target: &str, host: &str, fullmir: bool, opt: bool) {\n         opt_str\n     );\n     let mut config = compiletest::Config::default().tempdir();\n-    config.mode = \"mir-opt\".parse().expect(\"Invalid mode\");\n+    config.mode = \"ui\".parse().expect(\"Invalid mode\");\n     config.src_base = PathBuf::from(path);\n     config.target = target.to_owned();\n     config.host = host.to_owned();\n@@ -100,6 +101,9 @@ fn miri_pass(path: &str, target: &str, host: &str, fullmir: bool, opt: bool) {\n         config.compile_lib_path = rustc_lib_path();\n     }\n     let mut flags = Vec::new();\n+    // Control miri logging. This is okay despite concurrent test execution as all tests\n+    // will set this env var to the same value.\n+    env::set_var(\"MIRI_LOG\", \"warn\");\n     // if we are building as part of the rustc test suite, we already have fullmir for everything\n     if fullmir && rustc_test_suite().is_none() {\n         if host != target {\n@@ -122,9 +126,6 @@ fn miri_pass(path: &str, target: &str, host: &str, fullmir: bool, opt: bool) {\n         flags.push(\"--miri_host_target\".to_owned());\n     }\n     config.target_rustcflags = Some(flags.join(\" \"));\n-    // don't actually execute the final binary, it might be for other targets and we only care\n-    // about running miri, not the binary.\n-    config.runtool = Some(\"echo \\\"\\\" || \".to_owned());\n     compiletest::run_tests(&config);\n }\n "}, {"sha": "efcfee68eef40a4c316b9e609ed9f9ed4829e2fb", "filename": "tests/run-pass-fullmir/catch.rs", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/060bb2fa9f244c4c8cb59b97514fc284a17bb051/tests%2Frun-pass-fullmir%2Fcatch.rs", "raw_url": "https://github.com/rust-lang/rust/raw/060bb2fa9f244c4c8cb59b97514fc284a17bb051/tests%2Frun-pass-fullmir%2Fcatch.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass-fullmir%2Fcatch.rs?ref=060bb2fa9f244c4c8cb59b97514fc284a17bb051", "patch": "@@ -3,7 +3,5 @@ use std::panic::{catch_unwind, AssertUnwindSafe};\n fn main() {\n     let mut i = 3;\n     let _ = catch_unwind(AssertUnwindSafe(|| {i -= 2;} ));\n-    for _ in 0..i {\n-        println!(\"I\");\n-    }\n+    println!(\"{}\", i);\n }"}, {"sha": "d00491fd7e5bb6fa28c517a0bb32b8b506539d4d", "filename": "tests/run-pass-fullmir/catch.stdout", "status": "added", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/060bb2fa9f244c4c8cb59b97514fc284a17bb051/tests%2Frun-pass-fullmir%2Fcatch.stdout", "raw_url": "https://github.com/rust-lang/rust/raw/060bb2fa9f244c4c8cb59b97514fc284a17bb051/tests%2Frun-pass-fullmir%2Fcatch.stdout", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass-fullmir%2Fcatch.stdout?ref=060bb2fa9f244c4c8cb59b97514fc284a17bb051", "patch": "@@ -0,0 +1 @@\n+1"}, {"sha": "78729b915613af908634833702f458b9e3fe2521", "filename": "tests/run-pass-fullmir/format.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/060bb2fa9f244c4c8cb59b97514fc284a17bb051/tests%2Frun-pass-fullmir%2Fformat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/060bb2fa9f244c4c8cb59b97514fc284a17bb051/tests%2Frun-pass-fullmir%2Fformat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass-fullmir%2Fformat.rs?ref=060bb2fa9f244c4c8cb59b97514fc284a17bb051", "previous_filename": "tests/run-pass/format.rs"}, {"sha": "e193b8ae89f8f1b03bf59f94b5198d7c7508cc67", "filename": "tests/run-pass-fullmir/format.stdout", "status": "added", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/060bb2fa9f244c4c8cb59b97514fc284a17bb051/tests%2Frun-pass-fullmir%2Fformat.stdout", "raw_url": "https://github.com/rust-lang/rust/raw/060bb2fa9f244c4c8cb59b97514fc284a17bb051/tests%2Frun-pass-fullmir%2Fformat.stdout", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass-fullmir%2Fformat.stdout?ref=060bb2fa9f244c4c8cb59b97514fc284a17bb051", "patch": "@@ -0,0 +1 @@\n+Hello 13"}, {"sha": "e7a11a969c037e00a796aafeff6258501ec15e9a", "filename": "tests/run-pass-fullmir/hello.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/060bb2fa9f244c4c8cb59b97514fc284a17bb051/tests%2Frun-pass-fullmir%2Fhello.rs", "raw_url": "https://github.com/rust-lang/rust/raw/060bb2fa9f244c4c8cb59b97514fc284a17bb051/tests%2Frun-pass-fullmir%2Fhello.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass-fullmir%2Fhello.rs?ref=060bb2fa9f244c4c8cb59b97514fc284a17bb051", "previous_filename": "tests/run-pass/hello.rs"}, {"sha": "af5626b4a114abcb82d63db7c8082c3c4756e51b", "filename": "tests/run-pass-fullmir/hello.stdout", "status": "added", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/060bb2fa9f244c4c8cb59b97514fc284a17bb051/tests%2Frun-pass-fullmir%2Fhello.stdout", "raw_url": "https://github.com/rust-lang/rust/raw/060bb2fa9f244c4c8cb59b97514fc284a17bb051/tests%2Frun-pass-fullmir%2Fhello.stdout", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass-fullmir%2Fhello.stdout?ref=060bb2fa9f244c4c8cb59b97514fc284a17bb051", "patch": "@@ -0,0 +1 @@\n+Hello, world!"}, {"sha": "badb833ee800bca94c2420c3dbf2b66e97d3fe29", "filename": "tests/run-pass-fullmir/issue-3794.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/060bb2fa9f244c4c8cb59b97514fc284a17bb051/tests%2Frun-pass-fullmir%2Fissue-3794.rs", "raw_url": "https://github.com/rust-lang/rust/raw/060bb2fa9f244c4c8cb59b97514fc284a17bb051/tests%2Frun-pass-fullmir%2Fissue-3794.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass-fullmir%2Fissue-3794.rs?ref=060bb2fa9f244c4c8cb59b97514fc284a17bb051", "previous_filename": "tests/run-pass/issue-3794.rs"}, {"sha": "e4afe6fa55f15d1365fed3357bd886e509688029", "filename": "tests/run-pass-fullmir/issue-3794.stdout", "status": "added", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/060bb2fa9f244c4c8cb59b97514fc284a17bb051/tests%2Frun-pass-fullmir%2Fissue-3794.stdout", "raw_url": "https://github.com/rust-lang/rust/raw/060bb2fa9f244c4c8cb59b97514fc284a17bb051/tests%2Frun-pass-fullmir%2Fissue-3794.stdout", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass-fullmir%2Fissue-3794.stdout?ref=060bb2fa9f244c4c8cb59b97514fc284a17bb051", "patch": "@@ -0,0 +1,2 @@\n+S { s: 5 }\n+S { s: 5 }"}]}