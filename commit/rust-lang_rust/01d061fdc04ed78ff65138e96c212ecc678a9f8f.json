{"sha": "01d061fdc04ed78ff65138e96c212ecc678a9f8f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjAxZDA2MWZkYzA0ZWQ3OGZmNjUxMzhlOTZjMjEyZWNjNjc4YTlmOGY=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2016-11-18T09:47:01Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2016-11-18T09:47:01Z"}, "message": "Auto merge of #37763 - liigo:rustdoc-playground, r=alexcrichton\n\nrustdoc: add cli argument `--playground-url`\n\nAdd a new cli argument `--playground-url` for rustdoc:\n\n`rustdoc lib.rs --playground-url=\"https://play.rust-lang.org/\"`\n\n`rustdoc book.md --playground-url=\"https://play.rust-lang.org/\"`\n\nThis makes it possible for tools like https://docs.rs to generate crate docs that can submit samples code to run at https://play.rust-lang.org, even if the crate's author *forgot* putting `#![doc(html_playground_url = \"https://play.rust-lang.org/\")]` to crate root. By the way, I'd like to say, many crate authors are not aware of existing of `#![doc(html_playground_url = \"https://play.rust-lang.org/\")]`.\n\n`--playground-url` may be reset by `--markdown-playground-url` or `#![doc(html_playground_url=...)]`, so it's backward compatible.\n\n@alexcrichton since you implemented playground-url related features.", "tree": {"sha": "2b5e0151b2d33853dce12c334098ec397b84268d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2b5e0151b2d33853dce12c334098ec397b84268d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/01d061fdc04ed78ff65138e96c212ecc678a9f8f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/01d061fdc04ed78ff65138e96c212ecc678a9f8f", "html_url": "https://github.com/rust-lang/rust/commit/01d061fdc04ed78ff65138e96c212ecc678a9f8f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/01d061fdc04ed78ff65138e96c212ecc678a9f8f/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "509d14fc70d673bd01c7721481f63cb1bc503103", "url": "https://api.github.com/repos/rust-lang/rust/commits/509d14fc70d673bd01c7721481f63cb1bc503103", "html_url": "https://github.com/rust-lang/rust/commit/509d14fc70d673bd01c7721481f63cb1bc503103"}, {"sha": "dc3859d73e77a34b1a61fd4f23d18651bf515b80", "url": "https://api.github.com/repos/rust-lang/rust/commits/dc3859d73e77a34b1a61fd4f23d18651bf515b80", "html_url": "https://github.com/rust-lang/rust/commit/dc3859d73e77a34b1a61fd4f23d18651bf515b80"}], "stats": {"total": 14, "additions": 10, "deletions": 4}, "files": [{"sha": "44dadc4367b52cf411720b5bbd5514eb3445055d", "filename": "src/librustdoc/html/render.rs", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/01d061fdc04ed78ff65138e96c212ecc678a9f8f/src%2Flibrustdoc%2Fhtml%2Frender.rs", "raw_url": "https://github.com/rust-lang/rust/raw/01d061fdc04ed78ff65138e96c212ecc678a9f8f/src%2Flibrustdoc%2Fhtml%2Frender.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender.rs?ref=01d061fdc04ed78ff65138e96c212ecc678a9f8f", "patch": "@@ -467,10 +467,8 @@ pub fn run(mut krate: clean::Crate,\n                 clean::NameValue(ref x, ref s)\n                         if \"html_playground_url\" == *x => {\n                     markdown::PLAYGROUND.with(|slot| {\n-                        if slot.borrow().is_none() {\n-                            let name = krate.name.clone();\n-                            *slot.borrow_mut() = Some((Some(name), s.clone()));\n-                        }\n+                        let name = krate.name.clone();\n+                        *slot.borrow_mut() = Some((Some(name), s.clone()));\n                     });\n                 }\n                 clean::NameValue(ref x, ref s)"}, {"sha": "3af7c20c1336e91f1941e0ceb50c449b246822ff", "filename": "src/librustdoc/lib.rs", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/01d061fdc04ed78ff65138e96c212ecc678a9f8f/src%2Flibrustdoc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/01d061fdc04ed78ff65138e96c212ecc678a9f8f/src%2Flibrustdoc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Flib.rs?ref=01d061fdc04ed78ff65138e96c212ecc678a9f8f", "patch": "@@ -162,6 +162,10 @@ pub fn opts() -> Vec<RustcOptGroup> {\n         unstable(optmulti(\"Z\", \"\",\n                           \"internal and debugging options (only on nightly build)\", \"FLAG\")),\n         stable(optopt(\"\", \"sysroot\", \"Override the system root\", \"PATH\")),\n+        stable(optopt(\"\", \"playground-url\",\n+                      \"URL to send code snippets to, may be reset by --markdown-playground-url \\\n+                       or `#![doc(html_playground_url=...)]`\",\n+                      \"URL\")),\n     ]\n }\n \n@@ -230,6 +234,10 @@ pub fn main_args(args: &[String]) -> isize {\n         }\n     };\n \n+    if let Some(playground) = matches.opt_str(\"playground-url\") {\n+        html::markdown::PLAYGROUND.with(|s| { *s.borrow_mut() = Some((None, playground)); });\n+    }\n+\n     let test_args = matches.opt_strs(\"test-args\");\n     let test_args: Vec<String> = test_args.iter()\n                                           .flat_map(|s| s.split_whitespace())"}]}