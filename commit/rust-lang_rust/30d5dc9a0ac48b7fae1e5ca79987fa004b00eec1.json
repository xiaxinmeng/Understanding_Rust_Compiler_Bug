{"sha": "30d5dc9a0ac48b7fae1e5ca79987fa004b00eec1", "node_id": "MDY6Q29tbWl0NzI0NzEyOjMwZDVkYzlhMGFjNDhiN2ZhZTFlNWNhNzk5ODdmYTAwNGIwMGVlYzE=", "commit": {"author": {"name": "Vadim Petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2019-03-19T18:32:17Z"}, "committer": {"name": "Vadim Petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2019-03-19T19:50:46Z"}, "message": "Do not encode gensymed imports in metadata", "tree": {"sha": "02f1e13ad7b32c207cce52dc307c4781850da550", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/02f1e13ad7b32c207cce52dc307c4781850da550"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/30d5dc9a0ac48b7fae1e5ca79987fa004b00eec1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/30d5dc9a0ac48b7fae1e5ca79987fa004b00eec1", "html_url": "https://github.com/rust-lang/rust/commit/30d5dc9a0ac48b7fae1e5ca79987fa004b00eec1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/30d5dc9a0ac48b7fae1e5ca79987fa004b00eec1/comments", "author": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "committer": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7a4df3b53da369110984a2b57419c05a53e33b38", "url": "https://api.github.com/repos/rust-lang/rust/commits/7a4df3b53da369110984a2b57419c05a53e33b38", "html_url": "https://github.com/rust-lang/rust/commit/7a4df3b53da369110984a2b57419c05a53e33b38"}], "stats": {"total": 24, "additions": 20, "deletions": 4}, "files": [{"sha": "f312ef216822d1c74af14aa51f6fb34c7887af7d", "filename": "src/librustc_resolve/build_reduced_graph.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/30d5dc9a0ac48b7fae1e5ca79987fa004b00eec1/src%2Flibrustc_resolve%2Fbuild_reduced_graph.rs", "raw_url": "https://github.com/rust-lang/rust/raw/30d5dc9a0ac48b7fae1e5ca79987fa004b00eec1/src%2Flibrustc_resolve%2Fbuild_reduced_graph.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Fbuild_reduced_graph.rs?ref=30d5dc9a0ac48b7fae1e5ca79987fa004b00eec1", "patch": "@@ -303,7 +303,7 @@ impl<'a> Resolver<'a> {\n                 }\n \n                 // Empty groups `a::b::{}` are turned into synthetic `self` imports\n-                // `a::b::c::{self as _}`, so that their prefixes are correctly\n+                // `a::b::c::{self as __dummy}`, so that their prefixes are correctly\n                 // resolved and checked for privacy/stability/etc.\n                 if items.is_empty() && !empty_for_self(&prefix) {\n                     let new_span = prefix[prefix.len() - 1].ident.span;\n@@ -312,7 +312,7 @@ impl<'a> Resolver<'a> {\n                             Ident::new(keywords::SelfLower.name(), new_span)\n                         ),\n                         kind: ast::UseTreeKind::Simple(\n-                            Some(Ident::new(keywords::Underscore.name().gensymed(), new_span)),\n+                            Some(Ident::new(Name::gensym(\"__dummy\"), new_span)),\n                             ast::DUMMY_NODE_ID,\n                             ast::DUMMY_NODE_ID,\n                         ),"}, {"sha": "bda59c6c46c8bd2a83ac2093b53cbaf152941960", "filename": "src/librustc_resolve/resolve_imports.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/30d5dc9a0ac48b7fae1e5ca79987fa004b00eec1/src%2Flibrustc_resolve%2Fresolve_imports.rs", "raw_url": "https://github.com/rust-lang/rust/raw/30d5dc9a0ac48b7fae1e5ca79987fa004b00eec1/src%2Flibrustc_resolve%2Fresolve_imports.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Fresolve_imports.rs?ref=30d5dc9a0ac48b7fae1e5ca79987fa004b00eec1", "patch": "@@ -1295,9 +1295,11 @@ impl<'a, 'b:'a> ImportResolver<'a, 'b> {\n                 None => continue,\n             };\n \n-            // Filter away \"empty import canaries\" and ambiguous imports.\n+            // Filter away ambiguous and gensymed imports. Gensymed imports\n+            // (e.g. implicitly injected `std`) cannot be properly encoded in metadata,\n+            // so they can cause name conflict errors downstream.\n             let is_good_import = binding.is_import() && !binding.is_ambiguity() &&\n-                                 binding.vis != ty::Visibility::Invisible;\n+                                 !(ident.name.is_gensymed() && ident.name != \"_\");\n             if is_good_import || binding.is_macro_def() {\n                 let def = binding.def();\n                 if def != Def::Err {"}, {"sha": "f61aa4284d29b65030568fd0c0c8e241b78484b4", "filename": "src/libsyntax_pos/symbol.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/30d5dc9a0ac48b7fae1e5ca79987fa004b00eec1/src%2Flibsyntax_pos%2Fsymbol.rs", "raw_url": "https://github.com/rust-lang/rust/raw/30d5dc9a0ac48b7fae1e5ca79987fa004b00eec1/src%2Flibsyntax_pos%2Fsymbol.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax_pos%2Fsymbol.rs?ref=30d5dc9a0ac48b7fae1e5ca79987fa004b00eec1", "patch": "@@ -179,6 +179,10 @@ impl Symbol {\n         with_interner(|interner| interner.gensymed(self))\n     }\n \n+    pub fn is_gensymed(self) -> bool {\n+        with_interner(|interner| interner.is_gensymed(self))\n+    }\n+\n     pub fn as_str(self) -> LocalInternedString {\n         with_interner(|interner| unsafe {\n             LocalInternedString {"}, {"sha": "bbb19f5ec65199e60ca8d273f8c180a30a47eaf2", "filename": "src/test/ui/imports/auxiliary/gensymed.rs", "status": "added", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/30d5dc9a0ac48b7fae1e5ca79987fa004b00eec1/src%2Ftest%2Fui%2Fimports%2Fauxiliary%2Fgensymed.rs", "raw_url": "https://github.com/rust-lang/rust/raw/30d5dc9a0ac48b7fae1e5ca79987fa004b00eec1/src%2Ftest%2Fui%2Fimports%2Fauxiliary%2Fgensymed.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimports%2Fauxiliary%2Fgensymed.rs?ref=30d5dc9a0ac48b7fae1e5ca79987fa004b00eec1", "patch": "@@ -0,0 +1,3 @@\n+// edition:2018\n+\n+mod std {}"}, {"sha": "317441079ff87c71953eaa45dec3eefb24e28f0e", "filename": "src/test/ui/imports/gensymed.rs", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/30d5dc9a0ac48b7fae1e5ca79987fa004b00eec1/src%2Ftest%2Fui%2Fimports%2Fgensymed.rs", "raw_url": "https://github.com/rust-lang/rust/raw/30d5dc9a0ac48b7fae1e5ca79987fa004b00eec1/src%2Ftest%2Fui%2Fimports%2Fgensymed.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimports%2Fgensymed.rs?ref=30d5dc9a0ac48b7fae1e5ca79987fa004b00eec1", "patch": "@@ -0,0 +1,7 @@\n+// compile-pass\n+// edition:2018\n+// aux-build:gensymed.rs\n+\n+extern crate gensymed;\n+\n+fn main() {}"}]}