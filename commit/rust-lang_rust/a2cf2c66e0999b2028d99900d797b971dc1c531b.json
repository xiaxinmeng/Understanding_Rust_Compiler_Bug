{"sha": "a2cf2c66e0999b2028d99900d797b971dc1c531b", "node_id": "MDY6Q29tbWl0NzI0NzEyOmEyY2YyYzY2ZTA5OTliMjAyOGQ5OTkwMGQ3OTdiOTcxZGMxYzUzMWI=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2015-05-27T07:14:45Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2015-05-27T07:14:45Z"}, "message": "Auto merge of #25791 - barosl:use-paths-as-items, r=alexcrichton\n\nCurrently, for `use` declarations with multiple paths, only the `use` item itself is saved in the AST map, not the individual path nodes. This can lead to a problem when a span of a specific path node is needed.\r\n\r\nFor example, #24818 caused an ICE because of this, in `ImportResolver::check_for_conflicting_import()`.\r\n\r\nFixes #25763.", "tree": {"sha": "6060067032763033a65bf711da66f0eabf5b861e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6060067032763033a65bf711da66f0eabf5b861e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a2cf2c66e0999b2028d99900d797b971dc1c531b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a2cf2c66e0999b2028d99900d797b971dc1c531b", "html_url": "https://github.com/rust-lang/rust/commit/a2cf2c66e0999b2028d99900d797b971dc1c531b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a2cf2c66e0999b2028d99900d797b971dc1c531b/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5a2c766cdd5e8f2652b30b8b4dfa9db050e574eb", "url": "https://api.github.com/repos/rust-lang/rust/commits/5a2c766cdd5e8f2652b30b8b4dfa9db050e574eb", "html_url": "https://github.com/rust-lang/rust/commit/5a2c766cdd5e8f2652b30b8b4dfa9db050e574eb"}, {"sha": "0ae30e608c5823a195af62051bfc4e9460f4bd25", "url": "https://api.github.com/repos/rust-lang/rust/commits/0ae30e608c5823a195af62051bfc4e9460f4bd25", "html_url": "https://github.com/rust-lang/rust/commit/0ae30e608c5823a195af62051bfc4e9460f4bd25"}], "stats": {"total": 29, "additions": 29, "deletions": 0}, "files": [{"sha": "ce6c33c6ab674358454cf410c1ac78edc7654dfc", "filename": "src/libsyntax/ast_map/mod.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/a2cf2c66e0999b2028d99900d797b971dc1c531b/src%2Flibsyntax%2Fast_map%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a2cf2c66e0999b2028d99900d797b971dc1c531b/src%2Flibsyntax%2Fast_map%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fast_map%2Fmod.rs?ref=a2cf2c66e0999b2028d99900d797b971dc1c531b", "patch": "@@ -714,6 +714,16 @@ impl<'ast> Visitor<'ast> for NodeCollector<'ast> {\n                     self.insert(ti.id, NodeTraitItem(ti));\n                 }\n             }\n+            ItemUse(ref view_path) => {\n+                match view_path.node {\n+                    ViewPathList(_, ref paths) => {\n+                        for path in paths {\n+                            self.insert(path.node.id(), NodeItem(i));\n+                        }\n+                    }\n+                    _ => ()\n+                }\n+            }\n             _ => {}\n         }\n         visit::walk_item(self, i);"}, {"sha": "8a10eef60e181e4d10afb0174b39d8500aa72dc2", "filename": "src/test/compile-fail/use-paths-as-items.rs", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/a2cf2c66e0999b2028d99900d797b971dc1c531b/src%2Ftest%2Fcompile-fail%2Fuse-paths-as-items.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a2cf2c66e0999b2028d99900d797b971dc1c531b/src%2Ftest%2Fcompile-fail%2Fuse-paths-as-items.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fuse-paths-as-items.rs?ref=a2cf2c66e0999b2028d99900d797b971dc1c531b", "patch": "@@ -0,0 +1,19 @@\n+// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// Each path node in a `use` declaration must be treated as an item. If not, the following code\n+// will trigger an ICE.\n+//\n+// Related issue: #25763\n+\n+use std::{mem, ptr};\n+use std::mem; //~ ERROR has already been imported\n+\n+fn main() {}"}]}