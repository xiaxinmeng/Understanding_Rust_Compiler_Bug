{"sha": "5bac8cb16d7c2ce68a826e5b4238e545cd68d3d5", "node_id": "MDY6Q29tbWl0NzI0NzEyOjViYWM4Y2IxNmQ3YzJjZTY4YTgyNmU1YjQyMzhlNTQ1Y2Q2OGQzZDU=", "commit": {"author": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2016-05-03T13:39:07Z"}, "committer": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2016-05-03T14:24:50Z"}, "message": "Rollup merge of #33294 - timothy-mcroy:E0501, r=GuillaumeGomez\n\nAdd detailed error explanation for E0501\n\nr? @GuillaumeGomez\n\nBring on the nits!", "tree": {"sha": "f9fd6e479f3f710075da6304fb3884d3bb485ddc", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f9fd6e479f3f710075da6304fb3884d3bb485ddc"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5bac8cb16d7c2ce68a826e5b4238e545cd68d3d5", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQIcBAABAgAGBQJXKLSyAAoJEDu/TT4u95+YbV8P/2wmjLfEPpxFBiKQAwTmnKWx\nD+vKm4TxCIJ6lEy+rE40tdNShcDRdpK9zTkWxGDsSQM9k0NJ3PtyrYSC30hzF7VA\ndONovMF0wUF0Jw7BG1BA5T4YszLLUR8Ys93b2QXwtE0BVH6pTfcvp7vrWll13rCX\nVHjFy8mq+uuC3080n/4nSL/4SsVEB2gBCcauFEHbrxDqh3LMGyUTIYdF/vIaIJGI\n4SCaJPtqmfhWwN5nUfqYqMC6Kv6RCfgjkjUGUmoPNbfycZ64vVwuXh7HIztK63yT\nxshsE+R51BQiD6j9TqyWNoI3eJ3nxHUNAOwRx+3bba4N4KRUvPQPnEekQKP6Nb/p\nk4Y7SP+cbkiVzkJP/1ZGrm9T7Qzsi2IDtqBh6UwlAH9Bviy1XFMaqzPzmYS7QbFy\nbeIn6uzn6owEn6jexXES+mJWf2X5j22Unjme7+FgFSAjG1jZDuXOyB3f/8oVLorc\nSQ32Cnt1VsXzRKjc34/zy+vU29SAdi7wcYmu27MDwilPrUQjI+8LFVhMTqxuSa2G\nUkDconq4qZ4aT/ol33k85V4iNvtwrSk0wqnIHcNX3ffEP27jyJUczzglkk2wh7DU\nFRUDmb+oWigrKSx5XzsbEWWCPRc9IREGcAfEDkukf3U73aOdPq4E2uoGdZHoYNmX\nt/+pyOKSsWWU3oZzkc6D\n=g3Tv\n-----END PGP SIGNATURE-----", "payload": "tree f9fd6e479f3f710075da6304fb3884d3bb485ddc\nparent af05b568c036bf19d0f66ceb5285236a7f17b054\nparent 3f49920495c1db358e5964acf8182b96405ce435\nauthor Manish Goregaokar <manishsmail@gmail.com> 1462282747 +0530\ncommitter Manish Goregaokar <manishsmail@gmail.com> 1462285490 +0530\n\nRollup merge of #33294 - timothy-mcroy:E0501, r=GuillaumeGomez\n\nAdd detailed error explanation for E0501\n\nr? @GuillaumeGomez\n\nBring on the nits!\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5bac8cb16d7c2ce68a826e5b4238e545cd68d3d5", "html_url": "https://github.com/rust-lang/rust/commit/5bac8cb16d7c2ce68a826e5b4238e545cd68d3d5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5bac8cb16d7c2ce68a826e5b4238e545cd68d3d5/comments", "author": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "af05b568c036bf19d0f66ceb5285236a7f17b054", "url": "https://api.github.com/repos/rust-lang/rust/commits/af05b568c036bf19d0f66ceb5285236a7f17b054", "html_url": "https://github.com/rust-lang/rust/commit/af05b568c036bf19d0f66ceb5285236a7f17b054"}, {"sha": "3f49920495c1db358e5964acf8182b96405ce435", "url": "https://api.github.com/repos/rust-lang/rust/commits/3f49920495c1db358e5964acf8182b96405ce435", "html_url": "https://github.com/rust-lang/rust/commit/3f49920495c1db358e5964acf8182b96405ce435"}], "stats": {"total": 77, "additions": 76, "deletions": 1}, "files": [{"sha": "e838921a831784f224b9d4c51653e391fee48ec9", "filename": "src/librustc_borrowck/diagnostics.rs", "status": "modified", "additions": 76, "deletions": 1, "changes": 77, "blob_url": "https://github.com/rust-lang/rust/blob/5bac8cb16d7c2ce68a826e5b4238e545cd68d3d5/src%2Flibrustc_borrowck%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5bac8cb16d7c2ce68a826e5b4238e545cd68d3d5/src%2Flibrustc_borrowck%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_borrowck%2Fdiagnostics.rs?ref=5bac8cb16d7c2ce68a826e5b4238e545cd68d3d5", "patch": "@@ -314,6 +314,82 @@ let c = &i; // still ok!\n ```\n \"##,\n \n+E0501: r##\"\n+This error indicates that a mutable variable is being used while it is still\n+captured by a closure. Because the closure has borrowed the variable, it is not\n+available for use until the closure goes out of scope.\n+\n+Note that a capture will either move or borrow a variable, but in this\n+situation, the closure is borrowing the variable. Take a look at\n+http://rustbyexample.com/fn/closures/capture.html for more information about\n+capturing.\n+\n+Example of erroneous code:\n+\n+```compile_fail\n+fn inside_closure(x: &mut i32) {\n+    // Actions which require unique access\n+}\n+\n+fn outside_closure(x: &mut i32) {\n+    // Actions which require unique access\n+}\n+\n+fn foo(a: &mut i32) {\n+    let bar = || {\n+        inside_closure(a)\n+    };\n+    outside_closure(a); // error: cannot borrow `*a` as mutable because previous\n+                        //        closure requires unique access.\n+}\n+```\n+\n+To fix this error, you can place the closure in its own scope:\n+\n+```\n+fn inside_closure(x: &mut i32) {}\n+fn outside_closure(x: &mut i32) {}\n+\n+fn foo(a: &mut i32) {\n+    {\n+        let bar = || {\n+            inside_closure(a)\n+        };\n+    } // borrow on `a` ends.\n+    outside_closure(a); // ok!\n+}\n+```\n+\n+Or you can pass the variable as a parameter to the closure:\n+\n+```\n+fn inside_closure(x: &mut i32) {}\n+fn outside_closure(x: &mut i32) {}\n+\n+fn foo(a: &mut i32) {\n+    let bar = |s: &mut i32| {\n+        inside_closure(s)\n+    };\n+    outside_closure(a);\n+    bar(a);\n+}\n+```\n+\n+It may be possible to define the closure later:\n+\n+```\n+fn inside_closure(x: &mut i32) {}\n+fn outside_closure(x: &mut i32) {}\n+\n+fn foo(a: &mut i32) {\n+    outside_closure(a);\n+    let bar = || {\n+        inside_closure(a)\n+    };\n+}\n+```\n+\"##,\n+\n E0507: r##\"\n You tried to move out of a value which was borrowed. Erroneous code example:\n \n@@ -436,7 +512,6 @@ register_diagnostics! {\n     E0388, // {} in a static location\n     E0389, // {} in a `&` reference\n     E0500, // closure requires unique access to `..` but .. is already borrowed\n-    E0501, // cannot borrow `..`.. as .. because previous closure requires unique access\n     E0502, // cannot borrow `..`.. as .. because .. is also borrowed as ...\n     E0503, // cannot use `..` because it was mutably borrowed\n     E0504, // cannot move `..` into closure because it is borrowed"}]}