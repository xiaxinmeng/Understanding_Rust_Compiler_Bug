{"sha": "bdd9ee3cc7f49008fd5d0ea11c16d681910d291e", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJkZDllZTNjYzdmNDkwMDhmZDVkMGVhMTFjMTZkNjgxOTEwZDI5MWU=", "commit": {"author": {"name": "Jakub Wieczorek", "email": "jakub@jakub.cc", "date": "2014-09-16T18:11:16Z"}, "committer": {"name": "Jakub Wieczorek", "email": "jakub@jakub.cc", "date": "2014-09-16T18:34:16Z"}, "message": "Run cleanup for base struct in functional struct update expressions\n\nFixes #17302.", "tree": {"sha": "6b342dc8e9e8c7d2a4fb3020cfc4a1d53a4036f0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6b342dc8e9e8c7d2a4fb3020cfc4a1d53a4036f0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bdd9ee3cc7f49008fd5d0ea11c16d681910d291e", "comment_count": 1, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bdd9ee3cc7f49008fd5d0ea11c16d681910d291e", "html_url": "https://github.com/rust-lang/rust/commit/bdd9ee3cc7f49008fd5d0ea11c16d681910d291e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bdd9ee3cc7f49008fd5d0ea11c16d681910d291e/comments", "author": null, "committer": null, "parents": [{"sha": "946654a721d6fd5eeb91e93293cdc2cba83c78b9", "url": "https://api.github.com/repos/rust-lang/rust/commits/946654a721d6fd5eeb91e93293cdc2cba83c78b9", "html_url": "https://github.com/rust-lang/rust/commit/946654a721d6fd5eeb91e93293cdc2cba83c78b9"}], "stats": {"total": 46, "additions": 40, "deletions": 6}, "files": [{"sha": "77712570185d975df53e79ad2619010b8f803b08", "filename": "src/librustc/middle/trans/expr.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/bdd9ee3cc7f49008fd5d0ea11c16d681910d291e/src%2Flibrustc%2Fmiddle%2Ftrans%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bdd9ee3cc7f49008fd5d0ea11c16d681910d291e/src%2Flibrustc%2Fmiddle%2Ftrans%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftrans%2Fexpr.rs?ref=bdd9ee3cc7f49008fd5d0ea11c16d681910d291e", "patch": "@@ -1380,7 +1380,11 @@ pub fn trans_adt<'blk, 'tcx>(mut bcx: Block<'blk, 'tcx>,\n         assert_eq!(discr, 0);\n \n         match ty::expr_kind(bcx.tcx(), &*base.expr) {\n-            ty::LvalueExpr => {\n+            ty::RvalueDpsExpr | ty::RvalueDatumExpr if !ty::type_needs_drop(bcx.tcx(), ty) => {\n+                bcx = trans_into(bcx, &*base.expr, SaveIn(addr));\n+            },\n+            ty::RvalueStmtExpr => bcx.tcx().sess.bug(\"unexpected expr kind for struct base expr\"),\n+            _ => {\n                 let base_datum = unpack_datum!(bcx, trans_to_lvalue(bcx, &*base.expr, \"base\"));\n                 for &(i, t) in base.fields.iter() {\n                     let datum = base_datum.get_element(\n@@ -1389,11 +1393,7 @@ pub fn trans_adt<'blk, 'tcx>(mut bcx: Block<'blk, 'tcx>,\n                     let dest = adt::trans_field_ptr(bcx, &*repr, addr, discr, i);\n                     bcx = datum.store_to(bcx, dest);\n                 }\n-            },\n-            ty::RvalueDpsExpr | ty::RvalueDatumExpr => {\n-                bcx = trans_into(bcx, &*base.expr, SaveIn(addr));\n-            },\n-            ty::RvalueStmtExpr => bcx.tcx().sess.bug(\"unexpected expr kind for struct base expr\")\n+            }\n         }\n     }\n "}, {"sha": "50583c7d127d884ae9e75e8dbaf290f7f9c554d2", "filename": "src/test/run-pass/issue-17302.rs", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/bdd9ee3cc7f49008fd5d0ea11c16d681910d291e/src%2Ftest%2Frun-pass%2Fissue-17302.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bdd9ee3cc7f49008fd5d0ea11c16d681910d291e/src%2Ftest%2Frun-pass%2Fissue-17302.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-17302.rs?ref=bdd9ee3cc7f49008fd5d0ea11c16d681910d291e", "patch": "@@ -0,0 +1,34 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+static mut DROPPED: [bool, ..2] = [false, false];\n+\n+struct A(uint);\n+struct Foo { _a: A, _b: int }\n+\n+impl Drop for A {\n+    fn drop(&mut self) {\n+        let A(i) = *self;\n+        unsafe { DROPPED[i] = true; }\n+    }\n+}\n+\n+fn main() {\n+    {\n+        Foo {\n+            _a: A(0),\n+            ..Foo { _a: A(1), _b: 2 }\n+        };\n+    }\n+    unsafe {\n+        assert!(DROPPED[0]);\n+        assert!(DROPPED[1]);\n+    }\n+}"}]}