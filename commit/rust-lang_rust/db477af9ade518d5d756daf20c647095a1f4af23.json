{"sha": "db477af9ade518d5d756daf20c647095a1f4af23", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRiNDc3YWY5YWRlNTE4ZDVkNzU2ZGFmMjBjNjQ3MDk1YTFmNGFmMjM=", "commit": {"author": {"name": "Eduard-Mihai Burtescu", "email": "edy.burt@gmail.com", "date": "2019-10-29T16:39:54Z"}, "committer": {"name": "Eduard-Mihai Burtescu", "email": "edy.burt@gmail.com", "date": "2019-12-03T13:28:18Z"}, "message": "rustc_codegen_ssa: remove define_fn and define_internal_fn.", "tree": {"sha": "afa061807c15346c1f589608bfea2984adb3ba44", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/afa061807c15346c1f589608bfea2984adb3ba44"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/db477af9ade518d5d756daf20c647095a1f4af23", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/db477af9ade518d5d756daf20c647095a1f4af23", "html_url": "https://github.com/rust-lang/rust/commit/db477af9ade518d5d756daf20c647095a1f4af23", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/db477af9ade518d5d756daf20c647095a1f4af23/comments", "author": {"login": "eddyb", "id": 77424, "node_id": "MDQ6VXNlcjc3NDI0", "avatar_url": "https://avatars.githubusercontent.com/u/77424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eddyb", "html_url": "https://github.com/eddyb", "followers_url": "https://api.github.com/users/eddyb/followers", "following_url": "https://api.github.com/users/eddyb/following{/other_user}", "gists_url": "https://api.github.com/users/eddyb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eddyb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eddyb/subscriptions", "organizations_url": "https://api.github.com/users/eddyb/orgs", "repos_url": "https://api.github.com/users/eddyb/repos", "events_url": "https://api.github.com/users/eddyb/events{/privacy}", "received_events_url": "https://api.github.com/users/eddyb/received_events", "type": "User", "site_admin": false}, "committer": {"login": "eddyb", "id": 77424, "node_id": "MDQ6VXNlcjc3NDI0", "avatar_url": "https://avatars.githubusercontent.com/u/77424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eddyb", "html_url": "https://github.com/eddyb", "followers_url": "https://api.github.com/users/eddyb/followers", "following_url": "https://api.github.com/users/eddyb/following{/other_user}", "gists_url": "https://api.github.com/users/eddyb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eddyb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eddyb/subscriptions", "organizations_url": "https://api.github.com/users/eddyb/orgs", "repos_url": "https://api.github.com/users/eddyb/repos", "events_url": "https://api.github.com/users/eddyb/events{/privacy}", "received_events_url": "https://api.github.com/users/eddyb/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6a75768b33b10fde649f0dcab6ff72a7dd62b561", "url": "https://api.github.com/repos/rust-lang/rust/commits/6a75768b33b10fde649f0dcab6ff72a7dd62b561", "html_url": "https://github.com/rust-lang/rust/commit/6a75768b33b10fde649f0dcab6ff72a7dd62b561"}], "stats": {"total": 40, "additions": 3, "deletions": 37}, "files": [{"sha": "61c1e0dffe677f4f58df6d61103cf8e0f5787b1c", "filename": "src/librustc_codegen_llvm/declare.rs", "status": "modified", "additions": 0, "deletions": 22, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/db477af9ade518d5d756daf20c647095a1f4af23/src%2Flibrustc_codegen_llvm%2Fdeclare.rs", "raw_url": "https://github.com/rust-lang/rust/raw/db477af9ade518d5d756daf20c647095a1f4af23/src%2Flibrustc_codegen_llvm%2Fdeclare.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Fdeclare.rs?ref=db477af9ade518d5d756daf20c647095a1f4af23", "patch": "@@ -130,28 +130,6 @@ impl DeclareMethods<'tcx> for CodegenCx<'ll, 'tcx> {\n         }\n     }\n \n-    fn define_fn(\n-        &self,\n-        name: &str,\n-        fn_sig: PolyFnSig<'tcx>,\n-    ) -> &'ll Value {\n-        if self.get_defined_value(name).is_some() {\n-            self.sess().fatal(&format!(\"symbol `{}` already defined\", name))\n-        } else {\n-            self.declare_fn(name, fn_sig)\n-        }\n-    }\n-\n-    fn define_internal_fn(\n-        &self,\n-        name: &str,\n-        fn_sig: PolyFnSig<'tcx>,\n-    ) -> &'ll Value {\n-        let llfn = self.define_fn(name, fn_sig);\n-        unsafe { llvm::LLVMRustSetLinkage(llfn, llvm::Linkage::InternalLinkage) };\n-        llfn\n-    }\n-\n     fn get_declared_value(&self, name: &str) -> Option<&'ll Value> {\n         debug!(\"get_declared_value(name={:?})\", name);\n         let namebuf = SmallCStr::new(name);"}, {"sha": "26f3b4bbe2910de22e7097d846194443206b3eaa", "filename": "src/librustc_codegen_llvm/intrinsic.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/db477af9ade518d5d756daf20c647095a1f4af23/src%2Flibrustc_codegen_llvm%2Fintrinsic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/db477af9ade518d5d756daf20c647095a1f4af23/src%2Flibrustc_codegen_llvm%2Fintrinsic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Fintrinsic.rs?ref=db477af9ade518d5d756daf20c647095a1f4af23", "patch": "@@ -1013,7 +1013,9 @@ fn gen_fn<'ll, 'tcx>(\n         hir::Unsafety::Unsafe,\n         Abi::Rust\n     ));\n-    let llfn = cx.define_internal_fn(name, rust_fn_sig);\n+    let llfn = cx.declare_fn(name, rust_fn_sig);\n+    // FIXME(eddyb) find a nicer way to do this.\n+    unsafe { llvm::LLVMRustSetLinkage(llfn, llvm::Linkage::InternalLinkage) };\n     attributes::from_fn_attrs(cx, llfn, None, rust_fn_sig);\n     let bx = Builder::new_block(cx, llfn, \"entry-block\");\n     codegen(bx);"}, {"sha": "e6cb82c8229f3a64ea2ea5b4875a2af5dfd99418", "filename": "src/librustc_codegen_ssa/traits/declare.rs", "status": "modified", "additions": 0, "deletions": 14, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/db477af9ade518d5d756daf20c647095a1f4af23/src%2Flibrustc_codegen_ssa%2Ftraits%2Fdeclare.rs", "raw_url": "https://github.com/rust-lang/rust/raw/db477af9ade518d5d756daf20c647095a1f4af23/src%2Flibrustc_codegen_ssa%2Ftraits%2Fdeclare.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_ssa%2Ftraits%2Fdeclare.rs?ref=db477af9ade518d5d756daf20c647095a1f4af23", "patch": "@@ -38,20 +38,6 @@ pub trait DeclareMethods<'tcx>: BackendTypes {\n     /// Use this function when you intend to define a global without a name.\n     fn define_private_global(&self, ty: Self::Type) -> Self::Value;\n \n-    /// Declare a Rust function with an intention to define it.\n-    ///\n-    /// Use this function when you intend to define a function. This function will\n-    /// return panic if the name already has a definition associated with it. This\n-    /// can happen with #[no_mangle] or #[export_name], for example.\n-    fn define_fn(&self, name: &str, fn_sig: ty::PolyFnSig<'tcx>) -> Self::Value;\n-\n-    /// Declare a Rust function with an intention to define it.\n-    ///\n-    /// Use this function when you intend to define a function. This function will\n-    /// return panic if the name already has a definition associated with it. This\n-    /// can happen with #[no_mangle] or #[export_name], for example.\n-    fn define_internal_fn(&self, name: &str, fn_sig: ty::PolyFnSig<'tcx>) -> Self::Value;\n-\n     /// Gets declared value by name.\n     fn get_declared_value(&self, name: &str) -> Option<Self::Value>;\n "}]}