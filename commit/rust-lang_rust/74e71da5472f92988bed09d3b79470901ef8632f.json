{"sha": "74e71da5472f92988bed09d3b79470901ef8632f", "node_id": "C_kwDOAAsO6NoAKDc0ZTcxZGE1NDcyZjkyOTg4YmVkMDlkM2I3OTQ3MDkwMWVmODYzMmY", "commit": {"author": {"name": "Bryysen", "email": "Brukkenbrisen@gmail.com", "date": "2022-08-08T19:34:55Z"}, "committer": {"name": "Bryysen", "email": "Brukkenbrisen@gmail.com", "date": "2022-08-08T19:34:55Z"}, "message": "Fix plural form of `variant` in error message not formatting correctly\ndue to ordering, added/improved comments and removed redundant test\nalready caught by `E0081.rs`", "tree": {"sha": "2e61a69b0810e5cf12e9b6c6e217b27721967518", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2e61a69b0810e5cf12e9b6c6e217b27721967518"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/74e71da5472f92988bed09d3b79470901ef8632f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/74e71da5472f92988bed09d3b79470901ef8632f", "html_url": "https://github.com/rust-lang/rust/commit/74e71da5472f92988bed09d3b79470901ef8632f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/74e71da5472f92988bed09d3b79470901ef8632f/comments", "author": {"login": "Bryysen", "id": 20719480, "node_id": "MDQ6VXNlcjIwNzE5NDgw", "avatar_url": "https://avatars.githubusercontent.com/u/20719480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Bryysen", "html_url": "https://github.com/Bryysen", "followers_url": "https://api.github.com/users/Bryysen/followers", "following_url": "https://api.github.com/users/Bryysen/following{/other_user}", "gists_url": "https://api.github.com/users/Bryysen/gists{/gist_id}", "starred_url": "https://api.github.com/users/Bryysen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Bryysen/subscriptions", "organizations_url": "https://api.github.com/users/Bryysen/orgs", "repos_url": "https://api.github.com/users/Bryysen/repos", "events_url": "https://api.github.com/users/Bryysen/events{/privacy}", "received_events_url": "https://api.github.com/users/Bryysen/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Bryysen", "id": 20719480, "node_id": "MDQ6VXNlcjIwNzE5NDgw", "avatar_url": "https://avatars.githubusercontent.com/u/20719480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Bryysen", "html_url": "https://github.com/Bryysen", "followers_url": "https://api.github.com/users/Bryysen/followers", "following_url": "https://api.github.com/users/Bryysen/following{/other_user}", "gists_url": "https://api.github.com/users/Bryysen/gists{/gist_id}", "starred_url": "https://api.github.com/users/Bryysen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Bryysen/subscriptions", "organizations_url": "https://api.github.com/users/Bryysen/orgs", "repos_url": "https://api.github.com/users/Bryysen/repos", "events_url": "https://api.github.com/users/Bryysen/events{/privacy}", "received_events_url": "https://api.github.com/users/Bryysen/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bfd7535130692af426f1230777f313cf7610f45e", "url": "https://api.github.com/repos/rust-lang/rust/commits/bfd7535130692af426f1230777f313cf7610f45e", "html_url": "https://github.com/rust-lang/rust/commit/bfd7535130692af426f1230777f313cf7610f45e"}], "stats": {"total": 69, "additions": 32, "deletions": 37}, "files": [{"sha": "c5fa8a5db0312969132868869346d6a5ccc557c4", "filename": "compiler/rustc_typeck/src/check/check.rs", "status": "modified", "additions": 6, "deletions": 5, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/74e71da5472f92988bed09d3b79470901ef8632f/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fcheck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/74e71da5472f92988bed09d3b79470901ef8632f/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fcheck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fcheck.rs?ref=74e71da5472f92988bed09d3b79470901ef8632f", "patch": "@@ -1499,18 +1499,19 @@ fn check_enum<'tcx>(tcx: TyCtxt<'tcx>, vs: &'tcx [hir::Variant<'tcx>], def_id: L\n     check_transparent(tcx, sp, def);\n }\n \n-/// Part of enum check, errors if two or more discriminants are equal\n+/// Part of enum check. Given the discriminants of an enum, errors if two or more discriminants are equal\n fn detect_discriminant_duplicate<'tcx>(\n     tcx: TyCtxt<'tcx>,\n     mut discrs: Vec<(VariantIdx, Discr<'tcx>)>,\n     vs: &'tcx [hir::Variant<'tcx>],\n     self_span: Span,\n ) {\n-    // Helper closure to reduce duplicate code. This gets called everytime we detect a duplicate\n+    // Helper closure to reduce duplicate code. This gets called everytime we detect a duplicate.\n+    // Here `idx` refers to the order of which the discriminant appears, and its index in `vs`\n     let report = |dis: Discr<'tcx>,\n                   idx: usize,\n                   err: &mut DiagnosticBuilder<'_, ErrorGuaranteed>| {\n-        let var = &vs[idx];\n+        let var = &vs[idx]; // HIR for the duplicate discriminant\n         let (span, display_discr) = match var.disr_expr {\n             Some(ref expr) => {\n                 // In the case the discriminant is both a duplicate and overflowed, let the user know\n@@ -1533,8 +1534,8 @@ fn detect_discriminant_duplicate<'tcx>(\n                     vs[..idx].iter().rev().enumerate().find(|v| v.1.disr_expr.is_some())\n                 {\n                     let ve_ident = var.ident;\n-                    let sp = if n > 1 { \"variants\" } else { \"variant\" };\n                     let n = n + 1;\n+                    let sp = if n > 1 { \"variants\" } else { \"variant\" };\n \n                     err.span_label(\n                         *span,\n@@ -1549,7 +1550,7 @@ fn detect_discriminant_duplicate<'tcx>(\n         err.span_label(span, format!(\"{display_discr} assigned here\"));\n     };\n \n-    // Here we are loop through the discriminants, comparing each discriminant to another.\n+    // Here we loop through the discriminants, comparing each discriminant to another.\n     // When a duplicate is detected, we instatiate an error and point to both\n     // initial and duplicate value. The duplicate discriminant is then discarded by swapping\n     // it with the last element and decrementing the `vec.len` (which is why we have to evaluate"}, {"sha": "f53fda864d6558224b082fb5f454e446b7b3a977", "filename": "src/test/ui/error-codes/E0081.rs", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/74e71da5472f92988bed09d3b79470901ef8632f/src%2Ftest%2Fui%2Ferror-codes%2FE0081.rs", "raw_url": "https://github.com/rust-lang/rust/raw/74e71da5472f92988bed09d3b79470901ef8632f/src%2Ftest%2Fui%2Ferror-codes%2FE0081.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ferror-codes%2FE0081.rs?ref=74e71da5472f92988bed09d3b79470901ef8632f", "patch": "@@ -27,9 +27,9 @@ enum NegDisEnum {\n     //~^ NOTE `-1` assigned here\n }\n \n-#[repr(i32)]\n enum MultipleDuplicates {\n     //~^ ERROR discriminant value `0` assigned more than once\n+    //~^^ ERROR discriminant value `-2` assigned more than once\n     V0,\n     //~^ NOTE `0` assigned here\n     V1 = 0,\n@@ -39,10 +39,15 @@ enum MultipleDuplicates {\n     V4 = 0,\n     //~^ NOTE `0` assigned here\n     V5 = -2,\n-    //~^ NOTE discriminant for `V7` incremented from this startpoint (`V5` + 2 variant later => `V7` = 0)\n+    //~^ NOTE discriminant for `V7` incremented from this startpoint (`V5` + 2 variants later => `V7` = 0)\n+    //~^^ NOTE `-2` assigned here\n     V6,\n     V7,\n     //~^ NOTE `0` assigned here\n+    V8 = -3,\n+    //~^ NOTE discriminant for `V9` incremented from this startpoint (`V8` + 1 variant later => `V9` = -2)\n+    V9,\n+    //~^ NOTE `-2` assigned here\n }\n \n fn main() {"}, {"sha": "64562fefc866c2dc707265a34df1ba346764f5fa", "filename": "src/test/ui/error-codes/E0081.stderr", "status": "modified", "additions": 19, "deletions": 4, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/74e71da5472f92988bed09d3b79470901ef8632f/src%2Ftest%2Fui%2Ferror-codes%2FE0081.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/74e71da5472f92988bed09d3b79470901ef8632f/src%2Ftest%2Fui%2Ferror-codes%2FE0081.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ferror-codes%2FE0081.stderr?ref=74e71da5472f92988bed09d3b79470901ef8632f", "patch": "@@ -38,11 +38,11 @@ LL |     Last,\n    |     ---- `-1` assigned here\n \n error[E0081]: discriminant value `0` assigned more than once\n-  --> $DIR/E0081.rs:31:1\n+  --> $DIR/E0081.rs:30:1\n    |\n LL | enum MultipleDuplicates {\n    | ^^^^^^^^^^^^^^^^^^^^^^^\n-LL |\n+...\n LL |     V0,\n    |     -- `0` assigned here\n LL |\n@@ -53,11 +53,26 @@ LL |     V4 = 0,\n    |          - `0` assigned here\n LL |\n LL |     V5 = -2,\n-   |     ------- discriminant for `V7` incremented from this startpoint (`V5` + 2 variant later => `V7` = 0)\n+   |     ------- discriminant for `V7` incremented from this startpoint (`V5` + 2 variants later => `V7` = 0)\n ...\n LL |     V7,\n    |     -- `0` assigned here\n \n-error: aborting due to 4 previous errors\n+error[E0081]: discriminant value `-2` assigned more than once\n+  --> $DIR/E0081.rs:30:1\n+   |\n+LL | enum MultipleDuplicates {\n+   | ^^^^^^^^^^^^^^^^^^^^^^^\n+...\n+LL |     V5 = -2,\n+   |          -- `-2` assigned here\n+...\n+LL |     V8 = -3,\n+   |     ------- discriminant for `V9` incremented from this startpoint (`V8` + 1 variant later => `V9` = -2)\n+LL |\n+LL |     V9,\n+   |     -- `-2` assigned here\n+\n+error: aborting due to 5 previous errors\n \n For more information about this error, try `rustc --explain E0081`."}, {"sha": "e497f993da2801ac4b2ad2733c834c56131875ac", "filename": "src/test/ui/tag-variant-disr-dup.rs", "status": "removed", "additions": 0, "deletions": 12, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/bfd7535130692af426f1230777f313cf7610f45e/src%2Ftest%2Fui%2Ftag-variant-disr-dup.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bfd7535130692af426f1230777f313cf7610f45e/src%2Ftest%2Fui%2Ftag-variant-disr-dup.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftag-variant-disr-dup.rs?ref=bfd7535130692af426f1230777f313cf7610f45e", "patch": "@@ -1,12 +0,0 @@\n-// Black and White have the same discriminator value ...\n-\n-enum Color {\n-    //~^ ERROR discriminant value `0` assigned more than once\n-    Red = 0xff0000,\n-    Green = 0x00ff00,\n-    Blue = 0x0000ff,\n-    Black = 0x000000,\n-    White = 0x000000,\n-}\n-\n-fn main() { }"}, {"sha": "4932cde0b18f4f78e8894615c026779a91c9b811", "filename": "src/test/ui/tag-variant-disr-dup.stderr", "status": "removed", "additions": 0, "deletions": 14, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/bfd7535130692af426f1230777f313cf7610f45e/src%2Ftest%2Fui%2Ftag-variant-disr-dup.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/bfd7535130692af426f1230777f313cf7610f45e/src%2Ftest%2Fui%2Ftag-variant-disr-dup.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftag-variant-disr-dup.stderr?ref=bfd7535130692af426f1230777f313cf7610f45e", "patch": "@@ -1,14 +0,0 @@\n-error[E0081]: discriminant value `0` assigned more than once\n-  --> $DIR/tag-variant-disr-dup.rs:3:1\n-   |\n-LL | enum Color {\n-   | ^^^^^^^^^^\n-...\n-LL |     Black = 0x000000,\n-   |             -------- `0` assigned here\n-LL |     White = 0x000000,\n-   |             -------- `0` assigned here\n-\n-error: aborting due to previous error\n-\n-For more information about this error, try `rustc --explain E0081`."}]}