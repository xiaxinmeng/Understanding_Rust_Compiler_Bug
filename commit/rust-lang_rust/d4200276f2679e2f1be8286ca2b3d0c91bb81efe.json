{"sha": "d4200276f2679e2f1be8286ca2b3d0c91bb81efe", "node_id": "C_kwDOAAsO6NoAKGQ0MjAwMjc2ZjI2NzllMmYxYmU4Mjg2Y2EyYjNkMGM5MWJiODFlZmU", "commit": {"author": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2023-04-25T19:52:17Z"}, "committer": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2023-04-27T17:18:12Z"}, "message": "Make clippy happy", "tree": {"sha": "08f8529488fe9851f0ca57684724ece0c99833b0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/08f8529488fe9851f0ca57684724ece0c99833b0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d4200276f2679e2f1be8286ca2b3d0c91bb81efe", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d4200276f2679e2f1be8286ca2b3d0c91bb81efe", "html_url": "https://github.com/rust-lang/rust/commit/d4200276f2679e2f1be8286ca2b3d0c91bb81efe", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d4200276f2679e2f1be8286ca2b3d0c91bb81efe/comments", "author": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6c9249f68935c789231b89c15986795dbc95511e", "url": "https://api.github.com/repos/rust-lang/rust/commits/6c9249f68935c789231b89c15986795dbc95511e", "html_url": "https://github.com/rust-lang/rust/commit/6c9249f68935c789231b89c15986795dbc95511e"}], "stats": {"total": 28, "additions": 14, "deletions": 14}, "files": [{"sha": "e2cdc48b583c8abcf35c65ab170091f85a9e47ef", "filename": "src/tools/clippy/clippy_lints/src/suspicious_operation_groupings.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d4200276f2679e2f1be8286ca2b3d0c91bb81efe/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Fsuspicious_operation_groupings.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d4200276f2679e2f1be8286ca2b3d0c91bb81efe/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Fsuspicious_operation_groupings.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Fclippy_lints%2Fsrc%2Fsuspicious_operation_groupings.rs?ref=d4200276f2679e2f1be8286ca2b3d0c91bb81efe", "patch": "@@ -577,7 +577,7 @@ fn ident_difference_expr_with_base_location(\n         | (AssignOp(_, _, _), AssignOp(_, _, _))\n         | (Assign(_, _, _), Assign(_, _, _))\n         | (TryBlock(_), TryBlock(_))\n-        | (Await(_), Await(_))\n+        | (Await(_, _), Await(_, _))\n         | (Async(_, _), Async(_, _))\n         | (Block(_, _), Block(_, _))\n         | (Closure(_), Closure(_))"}, {"sha": "8cc01f1ef9740c68eb93140ab660773cfd47d43f", "filename": "src/tools/clippy/clippy_utils/src/ast_utils.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d4200276f2679e2f1be8286ca2b3d0c91bb81efe/src%2Ftools%2Fclippy%2Fclippy_utils%2Fsrc%2Fast_utils.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d4200276f2679e2f1be8286ca2b3d0c91bb81efe/src%2Ftools%2Fclippy%2Fclippy_utils%2Fsrc%2Fast_utils.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Fclippy_utils%2Fsrc%2Fast_utils.rs?ref=d4200276f2679e2f1be8286ca2b3d0c91bb81efe", "patch": "@@ -143,7 +143,7 @@ pub fn eq_expr(l: &Expr, r: &Expr) -> bool {\n         (Paren(l), _) => eq_expr(l, r),\n         (_, Paren(r)) => eq_expr(l, r),\n         (Err, Err) => true,\n-        (Try(l), Try(r)) | (Await(l), Await(r)) => eq_expr(l, r),\n+        (Try(l), Try(r)) | (Await(l, _), Await(r, _)) => eq_expr(l, r),\n         (Array(l), Array(r)) => over(l, r, |l, r| eq_expr(l, r)),\n         (Tup(l), Tup(r)) => over(l, r, |l, r| eq_expr(l, r)),\n         (Repeat(le, ls), Repeat(re, rs)) => eq_expr(le, re) && eq_expr(&ls.value, &rs.value),"}, {"sha": "5c6348962a5ebc6ba56034d415a0fda063f7d97a", "filename": "src/tools/clippy/tests/ui/future_not_send.stderr", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/d4200276f2679e2f1be8286ca2b3d0c91bb81efe/src%2Ftools%2Fclippy%2Ftests%2Fui%2Ffuture_not_send.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d4200276f2679e2f1be8286ca2b3d0c91bb81efe/src%2Ftools%2Fclippy%2Ftests%2Fui%2Ffuture_not_send.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui%2Ffuture_not_send.stderr?ref=d4200276f2679e2f1be8286ca2b3d0c91bb81efe", "patch": "@@ -5,22 +5,22 @@ LL | async fn private_future(rc: Rc<[u8]>, cell: &Cell<usize>) -> bool {\n    |                                                              ^^^^ future returned by `private_future` is not `Send`\n    |\n note: future is not `Send` as this value is used across an await\n-  --> $DIR/future_not_send.rs:8:19\n+  --> $DIR/future_not_send.rs:8:20\n    |\n LL | async fn private_future(rc: Rc<[u8]>, cell: &Cell<usize>) -> bool {\n    |                         -- has type `std::rc::Rc<[u8]>` which is not `Send`\n LL |     async { true }.await\n-   |                   ^^^^^^ await occurs here, with `rc` maybe used later\n+   |                    ^^^^^ await occurs here, with `rc` maybe used later\n LL | }\n    | - `rc` is later dropped here\n    = note: `std::rc::Rc<[u8]>` doesn't implement `std::marker::Send`\n note: future is not `Send` as this value is used across an await\n-  --> $DIR/future_not_send.rs:8:19\n+  --> $DIR/future_not_send.rs:8:20\n    |\n LL | async fn private_future(rc: Rc<[u8]>, cell: &Cell<usize>) -> bool {\n    |                                       ---- has type `&std::cell::Cell<usize>` which is not `Send`\n LL |     async { true }.await\n-   |                   ^^^^^^ await occurs here, with `cell` maybe used later\n+   |                    ^^^^^ await occurs here, with `cell` maybe used later\n LL | }\n    | - `cell` is later dropped here\n    = note: `std::cell::Cell<usize>` doesn't implement `std::marker::Sync`\n@@ -33,12 +33,12 @@ LL | pub async fn public_future(rc: Rc<[u8]>) {\n    |                                          ^ future returned by `public_future` is not `Send`\n    |\n note: future is not `Send` as this value is used across an await\n-  --> $DIR/future_not_send.rs:12:19\n+  --> $DIR/future_not_send.rs:12:20\n    |\n LL | pub async fn public_future(rc: Rc<[u8]>) {\n    |                            -- has type `std::rc::Rc<[u8]>` which is not `Send`\n LL |     async { true }.await;\n-   |                   ^^^^^^ await occurs here, with `rc` maybe used later\n+   |                    ^^^^^ await occurs here, with `rc` maybe used later\n LL | }\n    | - `rc` is later dropped here\n    = note: `std::rc::Rc<[u8]>` doesn't implement `std::marker::Send`\n@@ -82,12 +82,12 @@ LL |     async fn private_future(&self) -> usize {\n    |                                       ^^^^^ future returned by `private_future` is not `Send`\n    |\n note: future is not `Send` as this value is used across an await\n-  --> $DIR/future_not_send.rs:35:23\n+  --> $DIR/future_not_send.rs:35:24\n    |\n LL |     async fn private_future(&self) -> usize {\n    |                             ----- has type `&Dummy` which is not `Send`\n LL |         async { true }.await;\n-   |                       ^^^^^^ await occurs here, with `&self` maybe used later\n+   |                        ^^^^^ await occurs here, with `&self` maybe used later\n LL |         self.rc.len()\n LL |     }\n    |     - `&self` is later dropped here\n@@ -100,12 +100,12 @@ LL |     pub async fn public_future(&self) {\n    |                                       ^ future returned by `public_future` is not `Send`\n    |\n note: future is not `Send` as this value is used across an await\n-  --> $DIR/future_not_send.rs:40:30\n+  --> $DIR/future_not_send.rs:40:31\n    |\n LL |     pub async fn public_future(&self) {\n    |                                ----- has type `&Dummy` which is not `Send`\n LL |         self.private_future().await;\n-   |                              ^^^^^^ await occurs here, with `&self` maybe used later\n+   |                               ^^^^^ await occurs here, with `&self` maybe used later\n LL |     }\n    |     - `&self` is later dropped here\n    = note: `std::rc::Rc<[u8]>` doesn't implement `std::marker::Sync`\n@@ -117,12 +117,12 @@ LL | async fn generic_future<T>(t: T) -> T\n    |                                     ^ future returned by `generic_future` is not `Send`\n    |\n note: future is not `Send` as this value is used across an await\n-  --> $DIR/future_not_send.rs:54:19\n+  --> $DIR/future_not_send.rs:54:20\n    |\n LL |     let rt = &t;\n    |         -- has type `&T` which is not `Send`\n LL |     async { true }.await;\n-   |                   ^^^^^^ await occurs here, with `rt` maybe used later\n+   |                    ^^^^^ await occurs here, with `rt` maybe used later\n LL |     t\n LL | }\n    | - `rt` is later dropped here"}]}