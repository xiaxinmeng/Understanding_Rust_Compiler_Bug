{"sha": "ab86f15ff2c237ac3f4237961e4484ae71cedf00", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFiODZmMTVmZjJjMjM3YWMzZjQyMzc5NjFlNDQ4NGFlNzFjZWRmMDA=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2020-06-08T12:05:44Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-06-08T12:05:44Z"}, "message": "Merge #4794\n\n4794: Tweak release r=matklad a=matklad\n\nbors r+\n\ud83e\udd16\n\nCo-authored-by: Aleksey Kladov <aleksey.kladov@gmail.com>", "tree": {"sha": "44a5d2c0df7ee420dabea534d679792bc4acc15c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/44a5d2c0df7ee420dabea534d679792bc4acc15c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ab86f15ff2c237ac3f4237961e4484ae71cedf00", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJe3imYCRBK7hj4Ov3rIwAAdHIIAIsrEwMlf0Uvl7t2b7H+lOjP\nkAXu5gQtxl/5SnFFbsMyeaa9Znw5VQjK44hV9Yp/QUhkI3NirfaKEv24fC7L0KJH\nP/2VNV89qnlolGqPxV6d789I6a1PTP0GvUkPla+p76HShsMvwGIFqh9GnZjDkHxT\nMTIFcJPx+T6C11uUGl99ULusshHXIY2GgGY5djHRXg9MfJN0ZLWFP9BSSYrjKJrj\nVjbhmB045QMH7HE7EestiGef7GSStInSTXdfhkfN+8kUsb5z9nZdnaEuF5BmDkuF\nBTI1aMh2kfWrJFtZCpWpzRzQkiBryzB9esynvt107/EbWUulM0cxGHb2pukWRsk=\n=92TY\n-----END PGP SIGNATURE-----\n", "payload": "tree 44a5d2c0df7ee420dabea534d679792bc4acc15c\nparent 6e4fca5882bdd6d00dfcc384473c1f612e00baa2\nparent cbc5eb87386e132c63ec33ff496019fad7478fe8\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1591617944 +0000\ncommitter GitHub <noreply@github.com> 1591617944 +0000\n\nMerge #4794\n\n4794: Tweak release r=matklad a=matklad\n\nbors r+\n\ud83e\udd16\n\nCo-authored-by: Aleksey Kladov <aleksey.kladov@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ab86f15ff2c237ac3f4237961e4484ae71cedf00", "html_url": "https://github.com/rust-lang/rust/commit/ab86f15ff2c237ac3f4237961e4484ae71cedf00", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ab86f15ff2c237ac3f4237961e4484ae71cedf00/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6e4fca5882bdd6d00dfcc384473c1f612e00baa2", "url": "https://api.github.com/repos/rust-lang/rust/commits/6e4fca5882bdd6d00dfcc384473c1f612e00baa2", "html_url": "https://github.com/rust-lang/rust/commit/6e4fca5882bdd6d00dfcc384473c1f612e00baa2"}, {"sha": "cbc5eb87386e132c63ec33ff496019fad7478fe8", "url": "https://api.github.com/repos/rust-lang/rust/commits/cbc5eb87386e132c63ec33ff496019fad7478fe8", "html_url": "https://github.com/rust-lang/rust/commit/cbc5eb87386e132c63ec33ff496019fad7478fe8"}], "stats": {"total": 131, "additions": 73, "deletions": 58}, "files": [{"sha": "747654c1fcb2317058f5ad6caf4bf866d5eaa5ef", "filename": "xtask/src/lib.rs", "status": "modified", "additions": 2, "deletions": 55, "changes": 57, "blob_url": "https://github.com/rust-lang/rust/blob/ab86f15ff2c237ac3f4237961e4484ae71cedf00/xtask%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ab86f15ff2c237ac3f4237961e4484ae71cedf00/xtask%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/xtask%2Fsrc%2Flib.rs?ref=ab86f15ff2c237ac3f4237961e4484ae71cedf00", "patch": "@@ -4,6 +4,7 @@\n \n pub mod not_bash;\n pub mod install;\n+pub mod release;\n pub mod dist;\n pub mod pre_commit;\n \n@@ -19,7 +20,7 @@ use walkdir::{DirEntry, WalkDir};\n \n use crate::{\n     codegen::Mode,\n-    not_bash::{date_iso, fs2, pushd, pushenv, rm_rf, run},\n+    not_bash::{fs2, pushd, pushenv, rm_rf, run},\n };\n \n pub use anyhow::{bail, Context as _, Result};\n@@ -153,60 +154,6 @@ pub fn run_pre_cache() -> Result<()> {\n     Ok(())\n }\n \n-pub fn run_release(dry_run: bool) -> Result<()> {\n-    if !dry_run {\n-        run!(\"git switch release\")?;\n-        run!(\"git fetch upstream --tags --force\")?;\n-        run!(\"git reset --hard tags/nightly\")?;\n-        run!(\"git push\")?;\n-    }\n-    codegen::generate_assists_docs(Mode::Overwrite)?;\n-    codegen::generate_feature_docs(Mode::Overwrite)?;\n-\n-    let website_root = project_root().join(\"../rust-analyzer.github.io\");\n-    let changelog_dir = website_root.join(\"./thisweek/_posts\");\n-\n-    let today = date_iso()?;\n-    let commit = run!(\"git rev-parse HEAD\")?;\n-    let changelog_n = fs2::read_dir(changelog_dir.as_path())?.count();\n-\n-    let contents = format!(\n-        \"\\\n-= Changelog #{}\n-:sectanchors:\n-:page-layout: post\n-\n-Commit: commit:{}[] +\n-Release: release:{}[]\n-\n-== New Features\n-\n-* pr:[] .\n-\n-== Fixes\n-\n-== Internal Improvements\n-\",\n-        changelog_n, commit, today\n-    );\n-\n-    let path = changelog_dir.join(format!(\"{}-changelog-{}.adoc\", today, changelog_n));\n-    fs2::write(&path, &contents)?;\n-\n-    for &adoc in [\"manual.adoc\", \"generated_features.adoc\", \"generated_assists.adoc\"].iter() {\n-        let src = project_root().join(\"./docs/user/\").join(adoc);\n-        let dst = website_root.join(adoc);\n-        fs2::copy(src, dst)?;\n-    }\n-\n-    let tags = run!(\"git tag --list\"; echo = false)?;\n-    let prev_tag = tags.lines().filter(|line| is_release_tag(line)).last().unwrap();\n-\n-    println!(\"\\n    git log {}..HEAD --merges --reverse\", prev_tag);\n-\n-    Ok(())\n-}\n-\n fn is_release_tag(tag: &str) -> bool {\n     tag.len() == \"2020-02-24\".len() && tag.starts_with(|c: char| c.is_ascii_digit())\n }"}, {"sha": "f7a79362d95f2e3f721b926a15fdeb80f34e1c97", "filename": "xtask/src/main.rs", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/ab86f15ff2c237ac3f4237961e4484ae71cedf00/xtask%2Fsrc%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ab86f15ff2c237ac3f4237961e4484ae71cedf00/xtask%2Fsrc%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/xtask%2Fsrc%2Fmain.rs?ref=ab86f15ff2c237ac3f4237961e4484ae71cedf00", "patch": "@@ -16,8 +16,9 @@ use xtask::{\n     dist::run_dist,\n     install::{ClientOpt, InstallCmd, ServerOpt},\n     not_bash::pushd,\n-    pre_commit, project_root, run_clippy, run_fuzzer, run_pre_cache, run_release, run_rustfmt,\n-    Result,\n+    pre_commit, project_root,\n+    release::ReleaseCmd,\n+    run_clippy, run_fuzzer, run_pre_cache, run_rustfmt, Result,\n };\n \n fn main() -> Result<()> {\n@@ -102,7 +103,7 @@ FLAGS:\n         \"release\" => {\n             let dry_run = args.contains(\"--dry-run\");\n             args.finish()?;\n-            run_release(dry_run)\n+            ReleaseCmd { dry_run }.run()\n         }\n         \"dist\" => {\n             let nightly = args.contains(\"--nightly\");"}, {"sha": "36c912184f0cdd28f56deb16102e6f75bdb977f9", "filename": "xtask/src/release.rs", "status": "added", "additions": 67, "deletions": 0, "changes": 67, "blob_url": "https://github.com/rust-lang/rust/blob/ab86f15ff2c237ac3f4237961e4484ae71cedf00/xtask%2Fsrc%2Frelease.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ab86f15ff2c237ac3f4237961e4484ae71cedf00/xtask%2Fsrc%2Frelease.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/xtask%2Fsrc%2Frelease.rs?ref=ab86f15ff2c237ac3f4237961e4484ae71cedf00", "patch": "@@ -0,0 +1,67 @@\n+use crate::{\n+    codegen, is_release_tag,\n+    not_bash::{date_iso, fs2, run},\n+    project_root, Mode, Result,\n+};\n+\n+pub struct ReleaseCmd {\n+    pub dry_run: bool,\n+}\n+\n+impl ReleaseCmd {\n+    pub fn run(self) -> Result<()> {\n+        if !self.dry_run {\n+            run!(\"git switch release\")?;\n+            run!(\"git fetch upstream --tags --force\")?;\n+            run!(\"git reset --hard tags/nightly\")?;\n+            run!(\"git push\")?;\n+        }\n+        codegen::generate_assists_docs(Mode::Overwrite)?;\n+        codegen::generate_feature_docs(Mode::Overwrite)?;\n+\n+        let website_root = project_root().join(\"../rust-analyzer.github.io\");\n+        let changelog_dir = website_root.join(\"./thisweek/_posts\");\n+\n+        let today = date_iso()?;\n+        let commit = run!(\"git rev-parse HEAD\")?;\n+        let changelog_n = fs2::read_dir(changelog_dir.as_path())?.count();\n+\n+        let contents = format!(\n+            \"\\\n+    = Changelog #{}\n+    :sectanchors:\n+    :page-layout: post\n+\n+    Commit: commit:{}[] +\n+    Release: release:{}[]\n+\n+    == New Features\n+\n+    * pr:[] .\n+\n+    == Fixes\n+\n+    == Internal Improvements\n+    \",\n+            changelog_n, commit, today\n+        );\n+\n+        let path = changelog_dir.join(format!(\"{}-changelog-{}.adoc\", today, changelog_n));\n+        fs2::write(&path, &contents)?;\n+\n+        for &adoc in [\"manual.adoc\", \"generated_features.adoc\", \"generated_assists.adoc\"].iter() {\n+            let src = project_root().join(\"./docs/user/\").join(adoc);\n+            let dst = website_root.join(adoc);\n+            fs2::copy(src, dst)?;\n+        }\n+\n+        let tags = run!(\"git tag --list\"; echo = false)?;\n+        let prev_tag = tags.lines().filter(|line| is_release_tag(line)).last().unwrap();\n+\n+        let git_log = run!(\"git log {}..HEAD --merges --reverse\", prev_tag; echo = false)?;\n+        let git_log_dst = website_root.join(\"git.log\");\n+        fs2::write(git_log_dst, &git_log)?;\n+\n+        Ok(())\n+    }\n+}"}]}