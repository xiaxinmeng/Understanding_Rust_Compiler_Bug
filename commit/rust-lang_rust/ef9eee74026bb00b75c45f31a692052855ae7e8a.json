{"sha": "ef9eee74026bb00b75c45f31a692052855ae7e8a", "node_id": "MDY6Q29tbWl0NzI0NzEyOmVmOWVlZTc0MDI2YmIwMGI3NWM0NWYzMWE2OTIwNTI4NTVhZTdlOGE=", "commit": {"author": {"name": "Corey Farwell", "email": "coreyf@rwell.org", "date": "2017-04-07T13:20:04Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2017-04-07T13:20:04Z"}, "message": "Rollup merge of #41047 - cuviper:src_is_git, r=alexcrichton\n\nOnly use cargo-vendor if building from git sources\n\nThe only time we need to vendor sources is when building from git.  If one is\nbuilding from a rustc source tarball, everything should already be in place.\nThis also matters for distros which do offline builds, as they can't install\ncargo-vendor this way.\n\nThis adds a common `Build::src_is_git` flag, and then uses it in the dist-src\ntarget to decide whether to install or use `cargo-vendor` at all.\n\nFixes #41042.", "tree": {"sha": "2f6502c7009a28e7244415df2a1e9dd3183d2146", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2f6502c7009a28e7244415df2a1e9dd3183d2146"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ef9eee74026bb00b75c45f31a692052855ae7e8a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ef9eee74026bb00b75c45f31a692052855ae7e8a", "html_url": "https://github.com/rust-lang/rust/commit/ef9eee74026bb00b75c45f31a692052855ae7e8a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ef9eee74026bb00b75c45f31a692052855ae7e8a/comments", "author": {"login": "frewsxcv", "id": 416575, "node_id": "MDQ6VXNlcjQxNjU3NQ==", "avatar_url": "https://avatars.githubusercontent.com/u/416575?v=4", "gravatar_id": "", "url": "https://api.github.com/users/frewsxcv", "html_url": "https://github.com/frewsxcv", "followers_url": "https://api.github.com/users/frewsxcv/followers", "following_url": "https://api.github.com/users/frewsxcv/following{/other_user}", "gists_url": "https://api.github.com/users/frewsxcv/gists{/gist_id}", "starred_url": "https://api.github.com/users/frewsxcv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/frewsxcv/subscriptions", "organizations_url": "https://api.github.com/users/frewsxcv/orgs", "repos_url": "https://api.github.com/users/frewsxcv/repos", "events_url": "https://api.github.com/users/frewsxcv/events{/privacy}", "received_events_url": "https://api.github.com/users/frewsxcv/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d860b1c0039eca3f013362a6f59b59d27c3e51dc", "url": "https://api.github.com/repos/rust-lang/rust/commits/d860b1c0039eca3f013362a6f59b59d27c3e51dc", "html_url": "https://github.com/rust-lang/rust/commit/d860b1c0039eca3f013362a6f59b59d27c3e51dc"}, {"sha": "4d32ff4e498c391d65b44d26cfb453651dc3da7b", "url": "https://api.github.com/repos/rust-lang/rust/commits/4d32ff4e498c391d65b44d26cfb453651dc3da7b", "html_url": "https://github.com/rust-lang/rust/commit/4d32ff4e498c391d65b44d26cfb453651dc3da7b"}], "stats": {"total": 51, "additions": 27, "deletions": 24}, "files": [{"sha": "6472b1a928cafd92cd9298da7ca0ef060ac3ad5f", "filename": "src/bootstrap/dist.rs", "status": "modified", "additions": 22, "deletions": 19, "changes": 41, "blob_url": "https://github.com/rust-lang/rust/blob/ef9eee74026bb00b75c45f31a692052855ae7e8a/src%2Fbootstrap%2Fdist.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ef9eee74026bb00b75c45f31a692052855ae7e8a/src%2Fbootstrap%2Fdist.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fdist.rs?ref=ef9eee74026bb00b75c45f31a692052855ae7e8a", "patch": "@@ -433,29 +433,32 @@ pub fn rust_src(build: &Build) {\n         copy(&build.src.join(item), &dst_src.join(item));\n     }\n \n-    // Get cargo-vendor installed, if it isn't already.\n-    let mut has_cargo_vendor = false;\n-    let mut cmd = Command::new(&build.cargo);\n-    for line in output(cmd.arg(\"install\").arg(\"--list\")).lines() {\n-        has_cargo_vendor |= line.starts_with(\"cargo-vendor \");\n-    }\n-    if !has_cargo_vendor {\n+    // If we're building from git sources, we need to vendor a complete distribution.\n+    if build.src_is_git {\n+        // Get cargo-vendor installed, if it isn't already.\n+        let mut has_cargo_vendor = false;\n+        let mut cmd = Command::new(&build.cargo);\n+        for line in output(cmd.arg(\"install\").arg(\"--list\")).lines() {\n+            has_cargo_vendor |= line.starts_with(\"cargo-vendor \");\n+        }\n+        if !has_cargo_vendor {\n+            let mut cmd = Command::new(&build.cargo);\n+            cmd.arg(\"install\")\n+               .arg(\"--force\")\n+               .arg(\"--debug\")\n+               .arg(\"--vers\").arg(CARGO_VENDOR_VERSION)\n+               .arg(\"cargo-vendor\")\n+               .env(\"RUSTC\", &build.rustc);\n+            build.run(&mut cmd);\n+        }\n+\n+        // Vendor all Cargo dependencies\n         let mut cmd = Command::new(&build.cargo);\n-        cmd.arg(\"install\")\n-           .arg(\"--force\")\n-           .arg(\"--debug\")\n-           .arg(\"--vers\").arg(CARGO_VENDOR_VERSION)\n-           .arg(\"cargo-vendor\")\n-           .env(\"RUSTC\", &build.rustc);\n+        cmd.arg(\"vendor\")\n+           .current_dir(&dst_src.join(\"src\"));\n         build.run(&mut cmd);\n     }\n \n-    // Vendor all Cargo dependencies\n-    let mut cmd = Command::new(&build.cargo);\n-    cmd.arg(\"vendor\")\n-       .current_dir(&dst_src.join(\"src\"));\n-    build.run(&mut cmd);\n-\n     // Create source tarball in rust-installer format\n     let mut cmd = Command::new(SH_CMD);\n     cmd.arg(sanitize_sh(&build.src.join(\"src/rust-installer/gen-installer.sh\")))"}, {"sha": "8303a40bb6965fffc48bfa7ce4e2f3c8a485dbce", "filename": "src/bootstrap/lib.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/ef9eee74026bb00b75c45f31a692052855ae7e8a/src%2Fbootstrap%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ef9eee74026bb00b75c45f31a692052855ae7e8a/src%2Fbootstrap%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Flib.rs?ref=ef9eee74026bb00b75c45f31a692052855ae7e8a", "patch": "@@ -162,6 +162,7 @@ pub struct Build {\n     cxx: HashMap<String, gcc::Tool>,\n     crates: HashMap<String, Crate>,\n     is_sudo: bool,\n+    src_is_git: bool,\n }\n \n #[derive(Debug)]\n@@ -233,6 +234,7 @@ impl Build {\n         };\n         let rust_info = channel::GitInfo::new(&src);\n         let cargo_info = channel::GitInfo::new(&src.join(\"cargo\"));\n+        let src_is_git = src.join(\".git\").exists();\n \n         Build {\n             flags: flags,\n@@ -251,6 +253,7 @@ impl Build {\n             lldb_version: None,\n             lldb_python_dir: None,\n             is_sudo: is_sudo,\n+            src_is_git: src_is_git,\n         }\n     }\n \n@@ -307,10 +310,7 @@ impl Build {\n             OutOfSync,\n         }\n \n-        if !self.config.submodules {\n-            return\n-        }\n-        if fs::metadata(self.src.join(\".git\")).is_err() {\n+        if !self.src_is_git || !self.config.submodules {\n             return\n         }\n         let git = || {"}, {"sha": "d1b235f4691dca7e476e4f862849b1f93bfe2c88", "filename": "src/bootstrap/sanity.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ef9eee74026bb00b75c45f31a692052855ae7e8a/src%2Fbootstrap%2Fsanity.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ef9eee74026bb00b75c45f31a692052855ae7e8a/src%2Fbootstrap%2Fsanity.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fsanity.rs?ref=ef9eee74026bb00b75c45f31a692052855ae7e8a", "patch": "@@ -65,7 +65,7 @@ pub fn check(build: &mut Build) {\n \n     // If we've got a git directory we're gona need git to update\n     // submodules and learn about various other aspects.\n-    if fs::metadata(build.src.join(\".git\")).is_ok() {\n+    if build.src_is_git {\n         need_cmd(\"git\".as_ref());\n     }\n "}]}