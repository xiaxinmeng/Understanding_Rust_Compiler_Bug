{"sha": "d0c61ebc12cd22c5448a62261f45f574ea1a57c3", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQwYzYxZWJjMTJjZDIyYzU0NDhhNjIyNjFmNDVmNTc0ZWExYTU3YzM=", "commit": {"author": {"name": "Michael Woerister", "email": "michaelwoerister@posteo.net", "date": "2016-12-19T22:52:18Z"}, "committer": {"name": "Michael Woerister", "email": "michaelwoerister@posteo.net", "date": "2016-12-21T22:16:28Z"}, "message": "ICH: Add test case for extern mods.", "tree": {"sha": "51199d6aa990085eab9c4f002ba30667149a6194", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/51199d6aa990085eab9c4f002ba30667149a6194"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d0c61ebc12cd22c5448a62261f45f574ea1a57c3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d0c61ebc12cd22c5448a62261f45f574ea1a57c3", "html_url": "https://github.com/rust-lang/rust/commit/d0c61ebc12cd22c5448a62261f45f574ea1a57c3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d0c61ebc12cd22c5448a62261f45f574ea1a57c3/comments", "author": {"login": "michaelwoerister", "id": 1825894, "node_id": "MDQ6VXNlcjE4MjU4OTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1825894?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelwoerister", "html_url": "https://github.com/michaelwoerister", "followers_url": "https://api.github.com/users/michaelwoerister/followers", "following_url": "https://api.github.com/users/michaelwoerister/following{/other_user}", "gists_url": "https://api.github.com/users/michaelwoerister/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelwoerister/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelwoerister/subscriptions", "organizations_url": "https://api.github.com/users/michaelwoerister/orgs", "repos_url": "https://api.github.com/users/michaelwoerister/repos", "events_url": "https://api.github.com/users/michaelwoerister/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelwoerister/received_events", "type": "User", "site_admin": false}, "committer": {"login": "michaelwoerister", "id": 1825894, "node_id": "MDQ6VXNlcjE4MjU4OTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1825894?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelwoerister", "html_url": "https://github.com/michaelwoerister", "followers_url": "https://api.github.com/users/michaelwoerister/followers", "following_url": "https://api.github.com/users/michaelwoerister/following{/other_user}", "gists_url": "https://api.github.com/users/michaelwoerister/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelwoerister/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelwoerister/subscriptions", "organizations_url": "https://api.github.com/users/michaelwoerister/orgs", "repos_url": "https://api.github.com/users/michaelwoerister/repos", "events_url": "https://api.github.com/users/michaelwoerister/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelwoerister/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "94ae2a2e6791e0c4ab6fba836b2b09a07f2d3c8a", "url": "https://api.github.com/repos/rust-lang/rust/commits/94ae2a2e6791e0c4ab6fba836b2b09a07f2d3c8a", "html_url": "https://github.com/rust-lang/rust/commit/94ae2a2e6791e0c4ab6fba836b2b09a07f2d3c8a"}], "stats": {"total": 272, "additions": 272, "deletions": 0}, "files": [{"sha": "03e621fedbeb4d49bc3dd5a5af34c874f7dd0874", "filename": "src/test/incremental/hashes/extern_mods.rs", "status": "added", "additions": 272, "deletions": 0, "changes": 272, "blob_url": "https://github.com/rust-lang/rust/blob/d0c61ebc12cd22c5448a62261f45f574ea1a57c3/src%2Ftest%2Fincremental%2Fhashes%2Fextern_mods.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d0c61ebc12cd22c5448a62261f45f574ea1a57c3/src%2Ftest%2Fincremental%2Fhashes%2Fextern_mods.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fincremental%2Fhashes%2Fextern_mods.rs?ref=d0c61ebc12cd22c5448a62261f45f574ea1a57c3", "patch": "@@ -0,0 +1,272 @@\n+// Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+\n+// This test case tests the incremental compilation hash (ICH) implementation\n+// for `extern` modules.\n+\n+// The general pattern followed here is: Change one thing between rev1 and rev2\n+// and make sure that the hash has changed, then change nothing between rev2 and\n+// rev3 and make sure that the hash has not changed.\n+\n+// must-compile-successfully\n+// revisions: cfail1 cfail2 cfail3\n+// compile-flags: -Z query-dep-graph\n+\n+#![allow(warnings)]\n+#![feature(rustc_attrs)]\n+#![feature(unboxed_closures)]\n+#![feature(link_args)]\n+#![crate_type=\"rlib\"]\n+\n+\n+// Change function name --------------------------------------------------------\n+#[cfg(cfail1)]\n+extern {\n+    pub fn change_function_name1(c: i64) -> i32;\n+}\n+\n+#[cfg(not(cfail1))]\n+#[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n+#[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n+#[rustc_metadata_dirty(cfg=\"cfail2\")]\n+#[rustc_metadata_clean(cfg=\"cfail3\")]\n+extern {\n+    pub fn change_function_name2(c: i64) -> i32;\n+}\n+\n+\n+\n+// Change parameter name -------------------------------------------------------\n+#[cfg(cfail1)]\n+extern {\n+    pub fn change_parameter_name(c: i64) -> i32;\n+}\n+\n+#[cfg(not(cfail1))]\n+#[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n+#[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n+#[rustc_metadata_dirty(cfg=\"cfail2\")]\n+#[rustc_metadata_clean(cfg=\"cfail3\")]\n+extern {\n+    pub fn change_parameter_name(d: i64) -> i32;\n+}\n+\n+\n+\n+// Change parameter type -------------------------------------------------------\n+#[cfg(cfail1)]\n+extern {\n+    pub fn change_parameter_type(c: i64) -> i32;\n+}\n+\n+#[cfg(not(cfail1))]\n+#[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n+#[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n+#[rustc_metadata_dirty(cfg=\"cfail2\")]\n+#[rustc_metadata_clean(cfg=\"cfail3\")]\n+extern {\n+    pub fn change_parameter_type(c: i32) -> i32;\n+}\n+\n+\n+\n+// Change return type ----------------------------------------------------------\n+#[cfg(cfail1)]\n+extern {\n+    pub fn change_return_type(c: i32) -> i32;\n+}\n+\n+#[cfg(not(cfail1))]\n+#[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n+#[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n+#[rustc_metadata_dirty(cfg=\"cfail2\")]\n+#[rustc_metadata_clean(cfg=\"cfail3\")]\n+extern {\n+    pub fn change_return_type(c: i32) -> i8;\n+}\n+\n+\n+\n+// Add parameter ---------------------------------------------------------------\n+#[cfg(cfail1)]\n+extern {\n+    pub fn add_parameter(c: i32) -> i32;\n+}\n+\n+#[cfg(not(cfail1))]\n+#[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n+#[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n+#[rustc_metadata_dirty(cfg=\"cfail2\")]\n+#[rustc_metadata_clean(cfg=\"cfail3\")]\n+extern {\n+    pub fn add_parameter(c: i32, d: i32) -> i32;\n+}\n+\n+\n+\n+// Add return type -------------------------------------------------------------\n+#[cfg(cfail1)]\n+extern {\n+    pub fn add_return_type(c: i32);\n+}\n+\n+#[cfg(not(cfail1))]\n+#[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n+#[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n+#[rustc_metadata_dirty(cfg=\"cfail2\")]\n+#[rustc_metadata_clean(cfg=\"cfail3\")]\n+extern {\n+    pub fn add_return_type(c: i32) -> i32;\n+}\n+\n+\n+\n+// Make function variadic ------------------------------------------------------\n+#[cfg(cfail1)]\n+extern {\n+    pub fn make_function_variadic(c: i32);\n+}\n+\n+#[cfg(not(cfail1))]\n+#[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n+#[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n+#[rustc_metadata_dirty(cfg=\"cfail2\")]\n+#[rustc_metadata_clean(cfg=\"cfail3\")]\n+extern {\n+    pub fn make_function_variadic(c: i32, ...);\n+}\n+\n+\n+\n+// Change calling convention ---------------------------------------------------\n+#[cfg(cfail1)]\n+extern \"C\" {\n+    pub fn change_calling_convention(c: i32);\n+}\n+\n+#[cfg(not(cfail1))]\n+#[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n+#[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n+#[rustc_metadata_dirty(cfg=\"cfail2\")]\n+#[rustc_metadata_clean(cfg=\"cfail3\")]\n+extern \"rust-call\" {\n+    pub fn change_calling_convention(c: i32);\n+}\n+\n+\n+\n+// Make function public --------------------------------------------------------\n+#[cfg(cfail1)]\n+extern {\n+    fn make_function_public(c: i32);\n+}\n+\n+#[cfg(not(cfail1))]\n+#[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n+#[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n+#[rustc_metadata_dirty(cfg=\"cfail2\")]\n+#[rustc_metadata_clean(cfg=\"cfail3\")]\n+extern {\n+    pub fn make_function_public(c: i32);\n+}\n+\n+\n+\n+// Add function ----------------------------------------------------------------\n+#[cfg(cfail1)]\n+extern {\n+    pub fn add_function1(c: i32);\n+}\n+\n+#[cfg(not(cfail1))]\n+#[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n+#[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n+#[rustc_metadata_dirty(cfg=\"cfail2\")]\n+#[rustc_metadata_clean(cfg=\"cfail3\")]\n+extern {\n+    pub fn add_function1(c: i32);\n+    pub fn add_function2();\n+}\n+\n+\n+\n+// Change link-args ------------------------------------------------------------\n+#[cfg(cfail1)]\n+#[link_args = \"-foo -bar\"]\n+extern {\n+    pub fn change_link_args(c: i32);\n+}\n+\n+#[cfg(not(cfail1))]\n+#[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n+#[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n+#[rustc_metadata_dirty(cfg=\"cfail2\")]\n+#[rustc_metadata_clean(cfg=\"cfail3\")]\n+#[link_args = \"-foo -bar -baz\"]\n+extern {\n+    pub fn change_link_args(c: i32);\n+}\n+\n+\n+\n+// Change link-name ------------------------------------------------------------\n+#[cfg(cfail1)]\n+#[link(name = \"foo\")]\n+extern {\n+    pub fn change_link_name(c: i32);\n+}\n+\n+#[cfg(not(cfail1))]\n+#[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n+#[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n+#[rustc_metadata_dirty(cfg=\"cfail2\")]\n+#[rustc_metadata_clean(cfg=\"cfail3\")]\n+#[link(name = \"bar\")]\n+extern {\n+    pub fn change_link_name(c: i32);\n+}\n+\n+type c_i32 = i32;\n+type c_i64 = i64;\n+\n+// Indirectly change parameter type --------------------------------------------\n+mod indirectly_change_parameter_type {\n+    #[cfg(cfail1)]\n+    use super::c_i32 as c_int;\n+    #[cfg(not(cfail1))]\n+    use super::c_i64 as c_int;\n+\n+    #[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n+    #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n+    #[rustc_metadata_dirty(cfg=\"cfail2\")]\n+    #[rustc_metadata_clean(cfg=\"cfail3\")]\n+    extern {\n+        pub fn indirectly_change_parameter_type(c: c_int);\n+    }\n+}\n+\n+\n+\n+// Indirectly change return type --------------------------------------------\n+mod indirectly_change_return_type {\n+    #[cfg(cfail1)]\n+    use super::c_i32 as c_int;\n+    #[cfg(not(cfail1))]\n+    use super::c_i64 as c_int;\n+\n+    #[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n+    #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n+    #[rustc_metadata_dirty(cfg=\"cfail2\")]\n+    #[rustc_metadata_clean(cfg=\"cfail3\")]\n+    extern {\n+        pub fn indirectly_change_return_type() -> c_int;\n+    }\n+}"}]}