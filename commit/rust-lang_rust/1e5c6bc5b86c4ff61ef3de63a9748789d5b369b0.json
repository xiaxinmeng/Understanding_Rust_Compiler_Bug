{"sha": "1e5c6bc5b86c4ff61ef3de63a9748789d5b369b0", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFlNWM2YmM1Yjg2YzRmZjYxZWYzZGU2M2E5NzQ4Nzg5ZDViMzY5YjA=", "commit": {"author": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2018-12-14T12:58:33Z"}, "committer": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2018-12-15T15:18:03Z"}, "message": "Stop using xargo for building the sysroot\n\nIt is currently broken. (see https://github.com/japaric/xargo/issues/227)\n\nThis makes it easier to for example patch whole crates away.", "tree": {"sha": "3b534c853745f053ca9557e3da48922b91466c20", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3b534c853745f053ca9557e3da48922b91466c20"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1e5c6bc5b86c4ff61ef3de63a9748789d5b369b0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1e5c6bc5b86c4ff61ef3de63a9748789d5b369b0", "html_url": "https://github.com/rust-lang/rust/commit/1e5c6bc5b86c4ff61ef3de63a9748789d5b369b0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1e5c6bc5b86c4ff61ef3de63a9748789d5b369b0/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9351f1d0c7763ee8564e096eaa3ed607f089e5db", "url": "https://api.github.com/repos/rust-lang/rust/commits/9351f1d0c7763ee8564e096eaa3ed607f089e5db", "html_url": "https://github.com/rust-lang/rust/commit/9351f1d0c7763ee8564e096eaa3ed607f089e5db"}], "stats": {"total": 216, "additions": 121, "deletions": 95}, "files": [{"sha": "1290c0f78d61e5d93985ba36fedba9b10970a85d", "filename": ".gitignore", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/1e5c6bc5b86c4ff61ef3de63a9748789d5b369b0/.gitignore", "raw_url": "https://github.com/rust-lang/rust/raw/1e5c6bc5b86c4ff61ef3de63a9748789d5b369b0/.gitignore", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/.gitignore?ref=1e5c6bc5b86c4ff61ef3de63a9748789d5b369b0", "patch": "@@ -4,3 +4,6 @@ target\n *.o\n perf.data\n perf.data.old\n+/build_sysroot/sysroot\n+/build_sysroot/sysroot_src\n+/build_sysroot/Cargo.lock"}, {"sha": "f32a95d2d46fb8a818d6a83dc8f3548a08f29b91", "filename": ".travis.yml", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/1e5c6bc5b86c4ff61ef3de63a9748789d5b369b0/.travis.yml", "raw_url": "https://github.com/rust-lang/rust/raw/1e5c6bc5b86c4ff61ef3de63a9748789d5b369b0/.travis.yml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/.travis.yml?ref=1e5c6bc5b86c4ff61ef3de63a9748789d5b369b0", "patch": "@@ -10,11 +10,7 @@ rust:\n   - nightly\n \n script:\n-  - rustup component add rust-src\n-  - cargo install xargo || echo \"Skipping xargo install\"\n-  - cargo install hyperfine || echo \"Skipping hyperfine install\"\n-  - ./prepare_libcore.sh\n-  - ./test.sh\n+  - ./prepare.sh && ./test.sh\n \n env:\n   - RUST_BACKTRACE=1"}, {"sha": "ae146c48e3aac7a39a9b9eb9190f6b8ad1691646", "filename": "alloc_system/Cargo.toml", "status": "removed", "additions": 0, "deletions": 16, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/9351f1d0c7763ee8564e096eaa3ed607f089e5db/alloc_system%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/9351f1d0c7763ee8564e096eaa3ed607f089e5db/alloc_system%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/alloc_system%2FCargo.toml?ref=9351f1d0c7763ee8564e096eaa3ed607f089e5db", "patch": "@@ -1,16 +0,0 @@\n-[package]\n-authors = [\"The Rust Project Developers\", \"bjorn3 (edited to be usable outside the rust source)\"]\n-name = \"alloc_system\"\n-version = \"0.0.0\"\n-[lib]\n-name = \"alloc_system\"\n-path = \"lib.rs\"\n-test = false\n-doc = false\n-[dependencies]\n-core = { path = \"../libcore\" }\n-libc = { path = \"../rustc/libc_shim\" }\n-compiler_builtins = { path = \"../rustc/compiler_builtins_shim\" }\n-# See comments in the source for what this dependency is\n-[target.'cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))'.dependencies]\n-dlmalloc = { path = \"../rustc/dlmalloc_shim\" }"}, {"sha": "d4873602d4d486e4ff95d59fed7521a586456073", "filename": "build_sysroot/Cargo.toml", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/1e5c6bc5b86c4ff61ef3de63a9748789d5b369b0/build_sysroot%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/1e5c6bc5b86c4ff61ef3de63a9748789d5b369b0/build_sysroot%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/build_sysroot%2FCargo.toml?ref=1e5c6bc5b86c4ff61ef3de63a9748789d5b369b0", "patch": "@@ -0,0 +1,15 @@\n+[package]\n+authors = [\"bjorn3 <bjorn3@users.noreply.github.com>\"]\n+name = \"sysroot\"\n+version = \"0.0.0\"\n+\n+[dependencies]\n+core = { path = \"./sysroot_src/src/libcore\" }\n+compiler_builtins = \"0.1\"\n+alloc = { path = \"./sysroot_src/src/liballoc\" }\n+\n+alloc_system = { path = \"./alloc_system\" }\n+\n+[patch.crates-io]\n+rustc-std-workspace-core = { path = \"./sysroot_src/src/tools/rustc-std-workspace-core\" }\n+compiler_builtins = { path = \"./compiler_builtins\" }"}, {"sha": "221faab32bd83dd9a1f46843f1d41ceadd0d38c0", "filename": "build_sysroot/alloc_system/Cargo.toml", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/1e5c6bc5b86c4ff61ef3de63a9748789d5b369b0/build_sysroot%2Falloc_system%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/1e5c6bc5b86c4ff61ef3de63a9748789d5b369b0/build_sysroot%2Falloc_system%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/build_sysroot%2Falloc_system%2FCargo.toml?ref=1e5c6bc5b86c4ff61ef3de63a9748789d5b369b0", "patch": "@@ -0,0 +1,13 @@\n+[package]\n+authors = [\"The Rust Project Developers\", \"bjorn3 (edited to be usable outside the rust source)\"]\n+name = \"alloc_system\"\n+version = \"0.0.0\"\n+[lib]\n+name = \"alloc_system\"\n+path = \"lib.rs\"\n+test = false\n+doc = false\n+[dependencies]\n+core = { path = \"../sysroot_src/src/libcore\" }\n+libc = { version = \"0.2.43\", features = ['rustc-dep-of-std'], default-features = false }\n+compiler_builtins = \"0.1\""}, {"sha": "74b52a6497e17af74e69ab486b7b0c865ed2a9c6", "filename": "build_sysroot/alloc_system/lib.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/1e5c6bc5b86c4ff61ef3de63a9748789d5b369b0/build_sysroot%2Falloc_system%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1e5c6bc5b86c4ff61ef3de63a9748789d5b369b0/build_sysroot%2Falloc_system%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/build_sysroot%2Falloc_system%2Flib.rs?ref=1e5c6bc5b86c4ff61ef3de63a9748789d5b369b0", "previous_filename": "alloc_system/lib.rs"}, {"sha": "38608e02163b0e117880bd16784f11f6f04aea97", "filename": "build_sysroot/build_sysroot.sh", "status": "added", "additions": 33, "deletions": 0, "changes": 33, "blob_url": "https://github.com/rust-lang/rust/blob/1e5c6bc5b86c4ff61ef3de63a9748789d5b369b0/build_sysroot%2Fbuild_sysroot.sh", "raw_url": "https://github.com/rust-lang/rust/raw/1e5c6bc5b86c4ff61ef3de63a9748789d5b369b0/build_sysroot%2Fbuild_sysroot.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/build_sysroot%2Fbuild_sysroot.sh?ref=1e5c6bc5b86c4ff61ef3de63a9748789d5b369b0", "patch": "@@ -0,0 +1,33 @@\n+#!/bin/bash\n+set -e\n+cd $(dirname \"$0\")\n+\n+# Cleanup for previous run\n+cargo clean\n+rm Cargo.lock 2>/dev/null || true\n+rm -r sysroot 2>/dev/null || true\n+\n+# FIXME find a better way to get the target triple\n+unamestr=`uname`\n+if [[ \"$unamestr\" == 'Linux' ]]; then\n+   TARGET_TRIPLE='x86_64-unknown-linux-gnu'\n+elif [[ \"$unamestr\" == 'Darwin' ]]; then\n+   TARGET_TRIPLE='x86_64-apple-darwin'\n+else\n+   echo \"Unsupported os\"\n+   exit 1\n+fi\n+\n+# Build libs\n+export RUSTFLAGS=\"$RUSTFLAGS -Z force-unstable-if-unmarked --sysroot ../\"\n+if [[ \"$1\" == \"--release\" ]]; then\n+    channel='release'\n+    RUSTFLAGS=\"$RUSTFLAGS -Zmir-opt-level=3\" cargo build --target $TARGET_TRIPLE --release\n+else\n+    channel='debug'\n+    cargo build --target $TARGET_TRIPLE\n+fi\n+\n+# Copy files to sysroot\n+mkdir -p sysroot/lib/rustlib/$TARGET_TRIPLE/lib/\n+cp target/$TARGET_TRIPLE/$channel/deps/*.rlib sysroot/lib/rustlib/$TARGET_TRIPLE/lib/"}, {"sha": "724a637a2013514608beeaf9f094a64771f20394", "filename": "build_sysroot/compiler_builtins/Cargo.toml", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/1e5c6bc5b86c4ff61ef3de63a9748789d5b369b0/build_sysroot%2Fcompiler_builtins%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/1e5c6bc5b86c4ff61ef3de63a9748789d5b369b0/build_sysroot%2Fcompiler_builtins%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/build_sysroot%2Fcompiler_builtins%2FCargo.toml?ref=1e5c6bc5b86c4ff61ef3de63a9748789d5b369b0", "patch": "@@ -0,0 +1,20 @@\n+[package]\n+name = \"compiler_builtins\"\n+# Make sure the `compiler_builtins` from crates.io doesn't take precedence over this\n+# replacement by specifying a higher version than the one on crates.io.\n+version = \"0.1.100\"\n+authors = [\"bjorn3 <bjorn3@users.noreply.github.com>\"]\n+edition = \"2018\"\n+\n+[lib]\n+name = \"compiler_builtins\"\n+path = \"lib.rs\"\n+test = false\n+doc = false\n+\n+[dependencies]\n+core = { path = \"../sysroot_src/src/libcore\" }\n+\n+[features]\n+rustc-dep-of-std = []\n+c = []"}, {"sha": "90a118deeef755c72ae372d5bf504d7747933f61", "filename": "build_sysroot/compiler_builtins/lib.rs", "status": "added", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/1e5c6bc5b86c4ff61ef3de63a9748789d5b369b0/build_sysroot%2Fcompiler_builtins%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1e5c6bc5b86c4ff61ef3de63a9748789d5b369b0/build_sysroot%2Fcompiler_builtins%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/build_sysroot%2Fcompiler_builtins%2Flib.rs?ref=1e5c6bc5b86c4ff61ef3de63a9748789d5b369b0", "patch": "@@ -0,0 +1,3 @@\n+#![feature(compiler_builtins)]\n+#![compiler_builtins]\n+#![no_std]"}, {"sha": "fceccdb4deaa625a7327747afc866e994cc3a52a", "filename": "build_sysroot/prepare_sysroot_src.sh", "status": "renamed", "additions": 11, "deletions": 7, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/1e5c6bc5b86c4ff61ef3de63a9748789d5b369b0/build_sysroot%2Fprepare_sysroot_src.sh", "raw_url": "https://github.com/rust-lang/rust/raw/1e5c6bc5b86c4ff61ef3de63a9748789d5b369b0/build_sysroot%2Fprepare_sysroot_src.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/build_sysroot%2Fprepare_sysroot_src.sh?ref=1e5c6bc5b86c4ff61ef3de63a9748789d5b369b0", "patch": "@@ -1,8 +1,9 @@\n-#!/bin/bash --verbose\n+#!/bin/bash\n set -e\n+cd $(dirname \"$0\")\n \n SRC_DIR=$(dirname $(rustup which rustc))\"/../lib/rustlib/src/rust/\"\n-DST_DIR=\"target/libcore\"\n+DST_DIR=\"sysroot_src\"\n \n if [ ! -e $SRC_DIR ]; then\n     echo \"Please install rust-src component\"\n@@ -14,14 +15,17 @@ mkdir -p $DST_DIR/src\n cp -r $SRC_DIR/src $DST_DIR/\n \n pushd $DST_DIR\n+echo \"[GIT] init\"\n git init\n+echo \"[GIT] add\"\n git add .\n+echo \"[GIT] commit\"\n git commit -m \"Initial commit\" -q\n-git apply ../../patches/*.patch\n+for file in $(ls ../../patches/ | grep -v patcha); do\n+echo \"[GIT] apply\" $file\n+git apply ../../patches/$file\n+git commit -am \"Patch $file\"\n+done\n popd\n \n-# `alloc_system` has been merged with libstd, which doesn't build yet.\n-# This copies the original source to the sysroot source dir to simplify building it\n-cp -r alloc_system $DST_DIR/src/liballoc_system\n-\n echo \"Successfully prepared libcore for building\"", "previous_filename": "prepare_libcore.sh"}, {"sha": "0c9ac1ac8e4bd702086402213af792ae0636d192", "filename": "build_sysroot/src/lib.rs", "status": "added", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1e5c6bc5b86c4ff61ef3de63a9748789d5b369b0/build_sysroot%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1e5c6bc5b86c4ff61ef3de63a9748789d5b369b0/build_sysroot%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/build_sysroot%2Fsrc%2Flib.rs?ref=1e5c6bc5b86c4ff61ef3de63a9748789d5b369b0", "patch": "@@ -0,0 +1 @@\n+#![no_std]"}, {"sha": "f768bb50c73f624da5abc9230ee8d3367b0163b6", "filename": "clean_all.sh", "status": "added", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1e5c6bc5b86c4ff61ef3de63a9748789d5b369b0/clean_all.sh", "raw_url": "https://github.com/rust-lang/rust/raw/1e5c6bc5b86c4ff61ef3de63a9748789d5b369b0/clean_all.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clean_all.sh?ref=1e5c6bc5b86c4ff61ef3de63a9748789d5b369b0", "patch": "@@ -0,0 +1,4 @@\n+#!/bin/bash --verbose\n+set -e\n+\n+rm -rf target/ build_sysroot/{sysroot/,sysroot_src/,target/,Cargo.lock} perf.data{,.old}"}, {"sha": "5508acf870cfa694790d09e34f14a54e82bbf6bb", "filename": "config.sh", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1e5c6bc5b86c4ff61ef3de63a9748789d5b369b0/config.sh", "raw_url": "https://github.com/rust-lang/rust/raw/1e5c6bc5b86c4ff61ef3de63a9748789d5b369b0/config.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/config.sh?ref=1e5c6bc5b86c4ff61ef3de63a9748789d5b369b0", "patch": "@@ -19,5 +19,4 @@ else\n fi\n \n export RUSTFLAGS='-Zalways-encode-mir -Cpanic=abort -Zcodegen-backend='$(pwd)'/target/'$channel'/librustc_codegen_cranelift.'$dylib_ext\n-export XARGO_RUST_SRC=$(pwd)'/target/libcore/src'\n RUSTC=\"rustc $RUSTFLAGS -L crate=target/out --out-dir target/out\""}, {"sha": "ce095483ce93d41d948a78b785a5fa3907029eb7", "filename": "flamegraph.sh", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/1e5c6bc5b86c4ff61ef3de63a9748789d5b369b0/flamegraph.sh", "raw_url": "https://github.com/rust-lang/rust/raw/1e5c6bc5b86c4ff61ef3de63a9748789d5b369b0/flamegraph.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/flamegraph.sh?ref=1e5c6bc5b86c4ff61ef3de63a9748789d5b369b0", "patch": "@@ -5,7 +5,8 @@ source config.sh\n rm perf.data* || true\n \n # Profile compiling libcore\n-perf record -F 9000 --call-graph dwarf -- $RUSTC --crate-type lib target/libcore/src/libcore/lib.rs --crate-name core\n+perf record -F 9000 --call-graph dwarf \\\n+    -- $RUSTC --crate-type lib build_sysroot/sysroot_src/src/libcore/lib.rs --crate-name core\n \n # Generate the flamegraph\n perf script | ../FlameGraph/stackcollapse-perf.pl | grep cranelift | ../FlameGraph/flamegraph.pl > abc.svg"}, {"sha": "8ffb00cff42c2d04f9906ef0d42d68aef32cffd5", "filename": "patches/0005-Disable-compiler_builtins.patch", "status": "removed", "additions": 0, "deletions": 29, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/9351f1d0c7763ee8564e096eaa3ed607f089e5db/patches%2F0005-Disable-compiler_builtins.patch", "raw_url": "https://github.com/rust-lang/rust/raw/9351f1d0c7763ee8564e096eaa3ed607f089e5db/patches%2F0005-Disable-compiler_builtins.patch", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/patches%2F0005-Disable-compiler_builtins.patch?ref=9351f1d0c7763ee8564e096eaa3ed607f089e5db", "patch": "@@ -1,29 +0,0 @@\n-From d873311b7bd16bac383d71d49f93d0448cfcb0b1 Mon Sep 17 00:00:00 2001\n-From: bjorn3 <bjorn3@users.noreply.github.com>\n-Date: Sun, 30 Sep 2018 18:32:50 +0200\n-Subject: [PATCH] Disable compiler_builtins\n-\n----\n- src/libcompiler_builtins/src/lib.rs | 2 ++\n- 1 file changed, 2 insertions(+)\n-\n-diff --git a/src/libcompiler_builtins/src/lib.rs b/src/libcompiler_builtins/src/lib.rs\n-index 9f1dd15..b1eed26 100644\n---- a/src/libcompiler_builtins/src/lib.rs\n-+++ b/src/libcompiler_builtins/src/lib.rs\n-@@ -34,6 +34,7 @@\n- // that follow \"x86 naming convention\" (e.g. addsf3). Those aeabi intrinsics must adhere to the\n- // AAPCS calling convention (`extern \"aapcs\"`) because that's how LLVM will call them.\n- \n-+/*\n- #[cfg(test)]\n- extern crate core;\n- \n-@@ -68,3 +69,4 @@ pub mod x86;\n- pub mod x86_64;\n- \n- pub mod probestack;\n-+*/\n--- \n-2.17.1 (Apple Git-112)\n-"}, {"sha": "be3388aac555f7b14c91193873eaeab396d095cb", "filename": "prepare.sh", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/1e5c6bc5b86c4ff61ef3de63a9748789d5b369b0/prepare.sh", "raw_url": "https://github.com/rust-lang/rust/raw/1e5c6bc5b86c4ff61ef3de63a9748789d5b369b0/prepare.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/prepare.sh?ref=1e5c6bc5b86c4ff61ef3de63a9748789d5b369b0", "patch": "@@ -0,0 +1,6 @@\n+#!/bin/bash --verbose\n+set -e\n+\n+rustup component add rust-src\n+./build_sysroot/prepare_sysroot_src.sh\n+cargo install hyperfine || echo \"Skipping hyperfine install\""}, {"sha": "6c742298cf82d614a207156659f5efbdb4b12e21", "filename": "test.sh", "status": "modified", "additions": 9, "deletions": 14, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/1e5c6bc5b86c4ff61ef3de63a9748789d5b369b0/test.sh", "raw_url": "https://github.com/rust-lang/rust/raw/1e5c6bc5b86c4ff61ef3de63a9748789d5b369b0/test.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/test.sh?ref=1e5c6bc5b86c4ff61ef3de63a9748789d5b369b0", "patch": "@@ -21,26 +21,21 @@ SHOULD_RUN=1 $RUSTC --crate-type bin example/mini_core_hello_world.rs --cfg jit\n echo \"[AOT] mini_core_hello_world\"\n build_example_bin mini_core_hello_world example/mini_core_hello_world.rs\n \n-pushd xargo\n-rm -r ~/.xargo/HOST || true\n-rm -r target || true\n-time xargo build\n-popd\n+echo \"[BUILD] sysroot\"\n+time ./build_sysroot/build_sysroot.sh\n \n # TODO linux linker doesn't accept duplicate definitions\n-#$RUSTC --sysroot ~/.xargo/HOST example/alloc_example.rs --crate-type bin\n+# echo \"[BUILD+RUN] alloc_example\"\n+#$RUSTC --sysroot ./build_sysroot/sysroot example/alloc_example.rs --crate-type bin\n #./target/out/alloc_example\n \n-$RUSTC --sysroot ~/.xargo/HOST example/mod_bench.rs --crate-type bin\n+echo \"[BUILD] mod_bench\"\n+$RUSTC --sysroot ./build_sysroot/sysroot example/mod_bench.rs --crate-type bin\n \n-echo \"[BUILD] RUSTFLAGS=-Zmir-opt-level=3\"\n-pushd xargo\n-rm -r ~/.xargo/HOST || true\n-rm -r target || true\n-time RUSTFLAGS=\"-Zmir-opt-level=3 $RUSTFLAGS\" xargo build\n-popd\n+echo \"[BUILD] sysroot in release mode\"\n+./build_sysroot/build_sysroot.sh --release\n \n-COMPILE_MOD_BENCH_INLINE=\"$RUSTC --sysroot ~/.xargo/HOST example/mod_bench.rs --crate-type bin -Zmir-opt-level=3 -Og --crate-name mod_bench_inline\"\n+COMPILE_MOD_BENCH_INLINE=\"$RUSTC --sysroot ./build_sysroot/sysroot example/mod_bench.rs --crate-type bin -Zmir-opt-level=3 -Og --crate-name mod_bench_inline\"\n COMPILE_MOD_BENCH_LLVM_0=\"rustc example/mod_bench.rs --crate-type bin -Copt-level=0 -o target/out/mod_bench_llvm_0 -Cpanic=abort\"\n COMPILE_MOD_BENCH_LLVM_1=\"rustc example/mod_bench.rs --crate-type bin -Copt-level=1 -o target/out/mod_bench_llvm_1 -Cpanic=abort\"\n COMPILE_MOD_BENCH_LLVM_2=\"rustc example/mod_bench.rs --crate-type bin -Copt-level=2 -o target/out/mod_bench_llvm_2 -Cpanic=abort\""}, {"sha": "6bcf3b8bc5285b9a68948328fe15310a0aa0ae6e", "filename": "xargo/Cargo.lock", "status": "removed", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/9351f1d0c7763ee8564e096eaa3ed607f089e5db/xargo%2FCargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/9351f1d0c7763ee8564e096eaa3ed607f089e5db/xargo%2FCargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/xargo%2FCargo.lock?ref=9351f1d0c7763ee8564e096eaa3ed607f089e5db", "patch": "@@ -1,4 +0,0 @@\n-[[package]]\n-name = \"xargo\"\n-version = \"0.1.0\"\n-"}, {"sha": "9498cce26287f8de9635472f06b805654d7f0829", "filename": "xargo/Cargo.toml", "status": "removed", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/9351f1d0c7763ee8564e096eaa3ed607f089e5db/xargo%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/9351f1d0c7763ee8564e096eaa3ed607f089e5db/xargo%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/xargo%2FCargo.toml?ref=9351f1d0c7763ee8564e096eaa3ed607f089e5db", "patch": "@@ -1,6 +0,0 @@\n-[package]\n-name = \"xargo\"\n-version = \"0.1.0\"\n-authors = [\"bjorn3 <bjorn3@users.noreply.github.com>\"]\n-\n-[dependencies]"}, {"sha": "2fef2be4c0283eab390582f786d2bb17ffcb7599", "filename": "xargo/Xargo.toml", "status": "removed", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/9351f1d0c7763ee8564e096eaa3ed607f089e5db/xargo%2FXargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/9351f1d0c7763ee8564e096eaa3ed607f089e5db/xargo%2FXargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/xargo%2FXargo.toml?ref=9351f1d0c7763ee8564e096eaa3ed607f089e5db", "patch": "@@ -1,7 +0,0 @@\n-[dependencies]\n-core = {}\n-alloc = {}\n-alloc_system = {}\n-\n-# Disabled due to missing support for many things (intrinsics, etc) in rustc_codegen_cranelift\n-#std = {}"}, {"sha": "1b5eb57bb460a68b6b1d4e215325885299b8fb8e", "filename": "xargo/src/lib.rs", "status": "removed", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/9351f1d0c7763ee8564e096eaa3ed607f089e5db/xargo%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9351f1d0c7763ee8564e096eaa3ed607f089e5db/xargo%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/xargo%2Fsrc%2Flib.rs?ref=9351f1d0c7763ee8564e096eaa3ed607f089e5db", "patch": "@@ -1,5 +0,0 @@\n-#![feature(compiler_builtins)]\n-\n-#![no_std]\n-#![compiler_builtins] // Don't link to compiler builtins\n-// Just a dummy"}]}