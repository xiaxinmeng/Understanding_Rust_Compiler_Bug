{"sha": "749dec64519b5bdfe688cb945eeee5afd6ab68d0", "node_id": "C_kwDOAAsO6NoAKDc0OWRlYzY0NTE5YjViZGZlNjg4Y2I5NDVlZWVlNWFmZDZhYjY4ZDA", "commit": {"author": {"name": "Joshua Nelson", "email": "jnelson@cloudflare.com", "date": "2022-09-20T01:57:37Z"}, "committer": {"name": "Joshua Nelson", "email": "jnelson@cloudflare.com", "date": "2022-09-20T03:14:39Z"}, "message": "Make `OUT` an associated type instead of a generic parameter\n\nThis avoids toil when changing other functions in `ObligationForest` to take an `OUT` parameter.", "tree": {"sha": "82b1406741efd312ccfda0a29fe6236764ae2a5b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/82b1406741efd312ccfda0a29fe6236764ae2a5b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/749dec64519b5bdfe688cb945eeee5afd6ab68d0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/749dec64519b5bdfe688cb945eeee5afd6ab68d0", "html_url": "https://github.com/rust-lang/rust/commit/749dec64519b5bdfe688cb945eeee5afd6ab68d0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/749dec64519b5bdfe688cb945eeee5afd6ab68d0/comments", "author": {"login": "jyn514", "id": 23638587, "node_id": "MDQ6VXNlcjIzNjM4NTg3", "avatar_url": "https://avatars.githubusercontent.com/u/23638587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jyn514", "html_url": "https://github.com/jyn514", "followers_url": "https://api.github.com/users/jyn514/followers", "following_url": "https://api.github.com/users/jyn514/following{/other_user}", "gists_url": "https://api.github.com/users/jyn514/gists{/gist_id}", "starred_url": "https://api.github.com/users/jyn514/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jyn514/subscriptions", "organizations_url": "https://api.github.com/users/jyn514/orgs", "repos_url": "https://api.github.com/users/jyn514/repos", "events_url": "https://api.github.com/users/jyn514/events{/privacy}", "received_events_url": "https://api.github.com/users/jyn514/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jyn514", "id": 23638587, "node_id": "MDQ6VXNlcjIzNjM4NTg3", "avatar_url": "https://avatars.githubusercontent.com/u/23638587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jyn514", "html_url": "https://github.com/jyn514", "followers_url": "https://api.github.com/users/jyn514/followers", "following_url": "https://api.github.com/users/jyn514/following{/other_user}", "gists_url": "https://api.github.com/users/jyn514/gists{/gist_id}", "starred_url": "https://api.github.com/users/jyn514/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jyn514/subscriptions", "organizations_url": "https://api.github.com/users/jyn514/orgs", "repos_url": "https://api.github.com/users/jyn514/repos", "events_url": "https://api.github.com/users/jyn514/events{/privacy}", "received_events_url": "https://api.github.com/users/jyn514/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5922d6cf60169ad0fd792581c9da11bd633533da", "url": "https://api.github.com/repos/rust-lang/rust/commits/5922d6cf60169ad0fd792581c9da11bd633533da", "html_url": "https://github.com/rust-lang/rust/commit/5922d6cf60169ad0fd792581c9da11bd633533da"}], "stats": {"total": 6, "additions": 6, "deletions": 0}, "files": [{"sha": "f2d72647a66868779abc5e2135a10d4e5a5a1a22", "filename": "compiler/rustc_data_structures/src/obligation_forest/mod.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/749dec64519b5bdfe688cb945eeee5afd6ab68d0/compiler%2Frustc_data_structures%2Fsrc%2Fobligation_forest%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/749dec64519b5bdfe688cb945eeee5afd6ab68d0/compiler%2Frustc_data_structures%2Fsrc%2Fobligation_forest%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_data_structures%2Fsrc%2Fobligation_forest%2Fmod.rs?ref=749dec64519b5bdfe688cb945eeee5afd6ab68d0", "patch": "@@ -95,6 +95,10 @@ pub trait ForestObligation: Clone + Debug {\n pub trait ObligationProcessor {\n     type Obligation: ForestObligation;\n     type Error: Debug;\n+    type OUT: OutcomeTrait<\n+        Obligation = Self::Obligation,\n+        Error = Error<Self::Obligation, Self::Error>,\n+    >;\n \n     fn needs_process_obligation(&self, obligation: &Self::Obligation) -> bool;\n "}, {"sha": "f2a04796691acfba95a04781e5ee0a96da8155d6", "filename": "compiler/rustc_data_structures/src/obligation_forest/tests.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/749dec64519b5bdfe688cb945eeee5afd6ab68d0/compiler%2Frustc_data_structures%2Fsrc%2Fobligation_forest%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/749dec64519b5bdfe688cb945eeee5afd6ab68d0/compiler%2Frustc_data_structures%2Fsrc%2Fobligation_forest%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_data_structures%2Fsrc%2Fobligation_forest%2Ftests.rs?ref=749dec64519b5bdfe688cb945eeee5afd6ab68d0", "patch": "@@ -64,6 +64,7 @@ where\n {\n     type Obligation = O;\n     type Error = E;\n+    type OUT = TestOutcome<O, E>;\n \n     fn needs_process_obligation(&self, _obligation: &Self::Obligation) -> bool {\n         true"}, {"sha": "0ea2b6ce885fd5dbdf4f829268eb00a79ea4ada1", "filename": "compiler/rustc_trait_selection/src/traits/fulfill.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/749dec64519b5bdfe688cb945eeee5afd6ab68d0/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Ffulfill.rs", "raw_url": "https://github.com/rust-lang/rust/raw/749dec64519b5bdfe688cb945eeee5afd6ab68d0/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Ffulfill.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Ffulfill.rs?ref=749dec64519b5bdfe688cb945eeee5afd6ab68d0", "patch": "@@ -224,6 +224,7 @@ fn mk_pending(os: Vec<PredicateObligation<'_>>) -> Vec<PendingPredicateObligatio\n impl<'a, 'b, 'tcx> ObligationProcessor for FulfillProcessor<'a, 'b, 'tcx> {\n     type Obligation = PendingPredicateObligation<'tcx>;\n     type Error = FulfillmentErrorCode<'tcx>;\n+    type OUT = Outcome<Self::Obligation, Self::Error>;\n \n     /// Identifies whether a predicate obligation needs processing.\n     ///"}]}