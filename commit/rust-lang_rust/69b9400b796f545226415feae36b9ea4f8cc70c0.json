{"sha": "69b9400b796f545226415feae36b9ea4f8cc70c0", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY5Yjk0MDBiNzk2ZjU0NTIyNjQxNWZlYWUzNmI5ZWE0ZjhjYzcwYzA=", "commit": {"author": {"name": "Ulrik Sverdrup", "email": "bluss@users.noreply.github.com", "date": "2016-10-20T12:34:34Z"}, "committer": {"name": "Ulrik Sverdrup", "email": "bluss@users.noreply.github.com", "date": "2016-10-20T12:40:09Z"}, "message": "Implement TrustedLen for more iterators", "tree": {"sha": "f37e16a590159d2e8ecdff491c8ea565a258f4c1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f37e16a590159d2e8ecdff491c8ea565a258f4c1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/69b9400b796f545226415feae36b9ea4f8cc70c0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/69b9400b796f545226415feae36b9ea4f8cc70c0", "html_url": "https://github.com/rust-lang/rust/commit/69b9400b796f545226415feae36b9ea4f8cc70c0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/69b9400b796f545226415feae36b9ea4f8cc70c0/comments", "author": {"login": "bluss", "id": 3209739, "node_id": "MDQ6VXNlcjMyMDk3Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/3209739?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bluss", "html_url": "https://github.com/bluss", "followers_url": "https://api.github.com/users/bluss/followers", "following_url": "https://api.github.com/users/bluss/following{/other_user}", "gists_url": "https://api.github.com/users/bluss/gists{/gist_id}", "starred_url": "https://api.github.com/users/bluss/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bluss/subscriptions", "organizations_url": "https://api.github.com/users/bluss/orgs", "repos_url": "https://api.github.com/users/bluss/repos", "events_url": "https://api.github.com/users/bluss/events{/privacy}", "received_events_url": "https://api.github.com/users/bluss/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bluss", "id": 3209739, "node_id": "MDQ6VXNlcjMyMDk3Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/3209739?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bluss", "html_url": "https://github.com/bluss", "followers_url": "https://api.github.com/users/bluss/followers", "following_url": "https://api.github.com/users/bluss/following{/other_user}", "gists_url": "https://api.github.com/users/bluss/gists{/gist_id}", "starred_url": "https://api.github.com/users/bluss/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bluss/subscriptions", "organizations_url": "https://api.github.com/users/bluss/orgs", "repos_url": "https://api.github.com/users/bluss/repos", "events_url": "https://api.github.com/users/bluss/events{/privacy}", "received_events_url": "https://api.github.com/users/bluss/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "49557112d64f5877093bfe43acaf5dc8d5b947a7", "url": "https://api.github.com/repos/rust-lang/rust/commits/49557112d64f5877093bfe43acaf5dc8d5b947a7", "html_url": "https://github.com/rust-lang/rust/commit/49557112d64f5877093bfe43acaf5dc8d5b947a7"}], "stats": {"total": 48, "additions": 43, "deletions": 5}, "files": [{"sha": "ab55ee9d9d7b0dea3f1edf6aa1c5ad8783a350c3", "filename": "src/libcore/iter/range.rs", "status": "modified", "additions": 23, "deletions": 3, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/69b9400b796f545226415feae36b9ea4f8cc70c0/src%2Flibcore%2Fiter%2Frange.rs", "raw_url": "https://github.com/rust-lang/rust/raw/69b9400b796f545226415feae36b9ea4f8cc70c0/src%2Flibcore%2Fiter%2Frange.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fiter%2Frange.rs?ref=69b9400b796f545226415feae36b9ea4f8cc70c0", "patch": "@@ -480,6 +480,22 @@ macro_rules! range_incl_exact_iter_impl {\n     )*)\n }\n \n+macro_rules! range_trusted_len_impl {\n+    ($($t:ty)*) => ($(\n+        #[unstable(feature = \"trusted_len\", issue = \"0\")]\n+        unsafe impl TrustedLen for ops::Range<$t> { }\n+    )*)\n+}\n+\n+macro_rules! range_incl_trusted_len_impl {\n+    ($($t:ty)*) => ($(\n+        #[unstable(feature = \"inclusive_range\",\n+                   reason = \"recently added, follows RFC\",\n+                   issue = \"28237\")]\n+        unsafe impl TrustedLen for ops::RangeInclusive<$t> { }\n+    )*)\n+}\n+\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n impl<A: Step> Iterator for ops::Range<A> where\n     for<'a> &'a A: Add<&'a A, Output = A>\n@@ -513,6 +529,13 @@ impl<A: Step> Iterator for ops::Range<A> where\n range_exact_iter_impl!(usize u8 u16 u32 isize i8 i16 i32);\n range_incl_exact_iter_impl!(u8 u16 i8 i16);\n \n+// These macros generate `TrustedLen` impls.\n+//\n+// They need to guarantee that .size_hint() is either exact, or that\n+// the upper bound is None when it does not fit the type limits.\n+range_trusted_len_impl!(usize isize u8 i8 u16 i16 u32 i32 i64 u64);\n+range_incl_trusted_len_impl!(usize isize u8 i8 u16 i16 u32 i32 i64 u64);\n+\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n impl<A: Step + Clone> DoubleEndedIterator for ops::Range<A> where\n     for<'a> &'a A: Add<&'a A, Output = A>,\n@@ -533,9 +556,6 @@ impl<A: Step + Clone> DoubleEndedIterator for ops::Range<A> where\n impl<A> FusedIterator for ops::Range<A>\n     where A: Step, for<'a> &'a A: Add<&'a A, Output = A> {}\n \n-#[unstable(feature = \"trusted_len\", issue = \"0\")]\n-unsafe impl TrustedLen for ops::Range<usize> { }\n-\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n impl<A: Step> Iterator for ops::RangeFrom<A> where\n     for<'a> &'a A: Add<&'a A, Output = A>"}, {"sha": "28845ef5e8c114e63f657753e60c2cfc213bda12", "filename": "src/libcore/option.rs", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/69b9400b796f545226415feae36b9ea4f8cc70c0/src%2Flibcore%2Foption.rs", "raw_url": "https://github.com/rust-lang/rust/raw/69b9400b796f545226415feae36b9ea4f8cc70c0/src%2Flibcore%2Foption.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Foption.rs?ref=69b9400b796f545226415feae36b9ea4f8cc70c0", "patch": "@@ -145,7 +145,7 @@\n \n #![stable(feature = \"rust1\", since = \"1.0.0\")]\n \n-use iter::{FromIterator, FusedIterator};\n+use iter::{FromIterator, FusedIterator, TrustedLen};\n use mem;\n \n // Note that this is not a lang item per se, but it has a hidden dependency on\n@@ -803,6 +803,7 @@ impl<A> DoubleEndedIterator for Item<A> {\n \n impl<A> ExactSizeIterator for Item<A> {}\n impl<A> FusedIterator for Item<A> {}\n+unsafe impl<A> TrustedLen for Item<A> {}\n \n /// An iterator over a reference of the contained item in an [`Option`].\n ///\n@@ -833,6 +834,9 @@ impl<'a, A> ExactSizeIterator for Iter<'a, A> {}\n #[unstable(feature = \"fused\", issue = \"35602\")]\n impl<'a, A> FusedIterator for Iter<'a, A> {}\n \n+#[unstable(feature = \"trusted_len\", issue = \"0\")]\n+unsafe impl<'a, A> TrustedLen for Iter<'a, A> {}\n+\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n impl<'a, A> Clone for Iter<'a, A> {\n     fn clone(&self) -> Iter<'a, A> {\n@@ -868,6 +872,8 @@ impl<'a, A> ExactSizeIterator for IterMut<'a, A> {}\n \n #[unstable(feature = \"fused\", issue = \"35602\")]\n impl<'a, A> FusedIterator for IterMut<'a, A> {}\n+#[unstable(feature = \"trusted_len\", issue = \"0\")]\n+unsafe impl<'a, A> TrustedLen for IterMut<'a, A> {}\n \n /// An iterator over the item contained inside an [`Option`].\n ///\n@@ -898,6 +904,9 @@ impl<A> ExactSizeIterator for IntoIter<A> {}\n #[unstable(feature = \"fused\", issue = \"35602\")]\n impl<A> FusedIterator for IntoIter<A> {}\n \n+#[unstable(feature = \"trusted_len\", issue = \"0\")]\n+unsafe impl<A> TrustedLen for IntoIter<A> {}\n+\n /////////////////////////////////////////////////////////////////////////////\n // FromIterator\n /////////////////////////////////////////////////////////////////////////////"}, {"sha": "8985e7c8251e171973aec3d2bb69cf848a94239c", "filename": "src/libcore/result.rs", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/69b9400b796f545226415feae36b9ea4f8cc70c0/src%2Flibcore%2Fresult.rs", "raw_url": "https://github.com/rust-lang/rust/raw/69b9400b796f545226415feae36b9ea4f8cc70c0/src%2Flibcore%2Fresult.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fresult.rs?ref=69b9400b796f545226415feae36b9ea4f8cc70c0", "patch": "@@ -249,7 +249,7 @@\n #![stable(feature = \"rust1\", since = \"1.0.0\")]\n \n use fmt;\n-use iter::{FromIterator, FusedIterator};\n+use iter::{FromIterator, FusedIterator, TrustedLen};\n \n /// `Result` is a type that represents either success (`Ok`) or failure (`Err`).\n ///\n@@ -886,6 +886,9 @@ impl<'a, T> ExactSizeIterator for Iter<'a, T> {}\n #[unstable(feature = \"fused\", issue = \"35602\")]\n impl<'a, T> FusedIterator for Iter<'a, T> {}\n \n+#[unstable(feature = \"trusted_len\", issue = \"0\")]\n+unsafe impl<'a, A> TrustedLen for Iter<'a, A> {}\n+\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n impl<'a, T> Clone for Iter<'a, T> {\n     fn clone(&self) -> Iter<'a, T> { Iter { inner: self.inner } }\n@@ -924,6 +927,9 @@ impl<'a, T> ExactSizeIterator for IterMut<'a, T> {}\n #[unstable(feature = \"fused\", issue = \"35602\")]\n impl<'a, T> FusedIterator for IterMut<'a, T> {}\n \n+#[unstable(feature = \"trusted_len\", issue = \"0\")]\n+unsafe impl<'a, A> TrustedLen for IterMut<'a, A> {}\n+\n /// An iterator over the value in a [`Ok`] variant of a [`Result`]. This struct is\n /// created by the [`into_iter`] method on [`Result`][`Result`] (provided by\n /// the [`IntoIterator`] trait).\n@@ -961,6 +967,9 @@ impl<T> ExactSizeIterator for IntoIter<T> {}\n #[unstable(feature = \"fused\", issue = \"35602\")]\n impl<T> FusedIterator for IntoIter<T> {}\n \n+#[unstable(feature = \"trusted_len\", issue = \"0\")]\n+unsafe impl<A> TrustedLen for IntoIter<A> {}\n+\n /////////////////////////////////////////////////////////////////////////////\n // FromIterator\n /////////////////////////////////////////////////////////////////////////////"}]}