{"sha": "b592d5731186d6df6eb1494b37e069f9aff34eaf", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI1OTJkNTczMTE4NmQ2ZGY2ZWIxNDk0YjM3ZTA2OWY5YWZmMzRlYWY=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2012-08-17T00:19:01Z"}, "committer": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2012-08-17T00:20:08Z"}, "message": "libsyntax: Make include_bin! generate fixed-length vectors.\n\nThis is so that we don't generate 170,000-line LLVM functions in Servo.", "tree": {"sha": "217a8779cbfe0f31d289d57972b643e7fe3ebf03", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/217a8779cbfe0f31d289d57972b643e7fe3ebf03"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b592d5731186d6df6eb1494b37e069f9aff34eaf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b592d5731186d6df6eb1494b37e069f9aff34eaf", "html_url": "https://github.com/rust-lang/rust/commit/b592d5731186d6df6eb1494b37e069f9aff34eaf", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b592d5731186d6df6eb1494b37e069f9aff34eaf/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ca0607051a01e691f62752f68ecc08fb24f2d3b2", "url": "https://api.github.com/repos/rust-lang/rust/commits/ca0607051a01e691f62752f68ecc08fb24f2d3b2", "html_url": "https://github.com/rust-lang/rust/commit/ca0607051a01e691f62752f68ecc08fb24f2d3b2"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "e05a713165ba57f726cb7869853e8a9dad02db2b", "filename": "src/libsyntax/ext/source_util.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/b592d5731186d6df6eb1494b37e069f9aff34eaf/src%2Flibsyntax%2Fext%2Fsource_util.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b592d5731186d6df6eb1494b37e069f9aff34eaf/src%2Flibsyntax%2Fext%2Fsource_util.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fsource_util.rs?ref=b592d5731186d6df6eb1494b37e069f9aff34eaf", "patch": "@@ -2,7 +2,7 @@ import base::*;\n import ast;\n import codemap::span;\n import print::pprust;\n-import build::{mk_uint,mk_u8,mk_uniq_str,mk_uniq_vec_e};\n+import build::{mk_base_vec_e,mk_uint,mk_u8,mk_uniq_str};\n \n export expand_line;\n export expand_col;\n@@ -91,7 +91,7 @@ fn expand_include_bin(cx: ext_ctxt, sp: codemap::span, arg: ast::mac_arg,\n         let u8_exprs = vec::map(src, |char: u8| {\n             mk_u8(cx, sp, char)\n         });\n-        return mk_uniq_vec_e(cx, sp, u8_exprs);\n+        return mk_base_vec_e(cx, sp, u8_exprs);\n       }\n       result::err(e) => {\n         cx.parse_sess().span_diagnostic.handler().fatal(e)"}]}