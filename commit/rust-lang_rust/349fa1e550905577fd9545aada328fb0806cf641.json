{"sha": "349fa1e550905577fd9545aada328fb0806cf641", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM0OWZhMWU1NTA5MDU1NzdmZDk1NDVhYWRhMzI4ZmIwODA2Y2Y2NDE=", "commit": {"author": {"name": "Jed Davis", "email": "jld@panix.com", "date": "2012-12-31T04:51:53Z"}, "committer": {"name": "Jed Davis", "email": "jld@panix.com", "date": "2013-01-12T07:42:51Z"}, "message": "Omit needless zeroes for C-like variants of non-C-like enums", "tree": {"sha": "fccb1183b6c5bca6d8eadcf79e52d8416a0700a2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fccb1183b6c5bca6d8eadcf79e52d8416a0700a2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/349fa1e550905577fd9545aada328fb0806cf641", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/349fa1e550905577fd9545aada328fb0806cf641", "html_url": "https://github.com/rust-lang/rust/commit/349fa1e550905577fd9545aada328fb0806cf641", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/349fa1e550905577fd9545aada328fb0806cf641/comments", "author": {"login": "jld", "id": 254973, "node_id": "MDQ6VXNlcjI1NDk3Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/254973?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jld", "html_url": "https://github.com/jld", "followers_url": "https://api.github.com/users/jld/followers", "following_url": "https://api.github.com/users/jld/following{/other_user}", "gists_url": "https://api.github.com/users/jld/gists{/gist_id}", "starred_url": "https://api.github.com/users/jld/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jld/subscriptions", "organizations_url": "https://api.github.com/users/jld/orgs", "repos_url": "https://api.github.com/users/jld/repos", "events_url": "https://api.github.com/users/jld/events{/privacy}", "received_events_url": "https://api.github.com/users/jld/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jld", "id": 254973, "node_id": "MDQ6VXNlcjI1NDk3Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/254973?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jld", "html_url": "https://github.com/jld", "followers_url": "https://api.github.com/users/jld/followers", "following_url": "https://api.github.com/users/jld/following{/other_user}", "gists_url": "https://api.github.com/users/jld/gists{/gist_id}", "starred_url": "https://api.github.com/users/jld/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jld/subscriptions", "organizations_url": "https://api.github.com/users/jld/orgs", "repos_url": "https://api.github.com/users/jld/repos", "events_url": "https://api.github.com/users/jld/events{/privacy}", "received_events_url": "https://api.github.com/users/jld/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "abae61257c4d866bb321bfb80ad16b7531736f7e", "url": "https://api.github.com/repos/rust-lang/rust/commits/abae61257c4d866bb321bfb80ad16b7531736f7e", "html_url": "https://github.com/rust-lang/rust/commit/abae61257c4d866bb321bfb80ad16b7531736f7e"}], "stats": {"total": 13, "additions": 1, "deletions": 12}, "files": [{"sha": "74aaec0d7e73f89d8c49717efae3be787990322c", "filename": "src/librustc/middle/trans/consts.rs", "status": "modified", "additions": 1, "deletions": 12, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/349fa1e550905577fd9545aada328fb0806cf641/src%2Flibrustc%2Fmiddle%2Ftrans%2Fconsts.rs", "raw_url": "https://github.com/rust-lang/rust/raw/349fa1e550905577fd9545aada328fb0806cf641/src%2Flibrustc%2Fmiddle%2Ftrans%2Fconsts.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftrans%2Fconsts.rs?ref=349fa1e550905577fd9545aada328fb0806cf641", "patch": "@@ -414,21 +414,10 @@ fn const_expr(cx: @crate_ctxt, e: @ast::expr) -> ValueRef {\n                     // variant or we wouldn't have gotten here -- the constant\n                     // checker forbids paths that don't map to C-like enum\n                     // variants.\n-                    let ety = ty::expr_ty(cx.tcx, e);\n-                    let llty = type_of::type_of(cx, ety);\n                     let lldiscrim = base::get_discrim_val(cx, e.span,\n                                                           enum_did,\n                                                           variant_did);\n-\n-                    let fields = if ty::enum_is_univariant(cx.tcx, enum_did) {\n-                        ~[lldiscrim]\n-                    } else {\n-                        let llstructtys =\n-                            lib::llvm::struct_element_types(llty);\n-                        ~[lldiscrim, C_null(llstructtys[1])]\n-                    };\n-\n-                    C_named_struct(llty, fields)\n+                    C_struct(~[lldiscrim])\n                 }\n                 Some(ast::def_struct(_)) => {\n                     let ety = ty::expr_ty(cx.tcx, e);"}]}