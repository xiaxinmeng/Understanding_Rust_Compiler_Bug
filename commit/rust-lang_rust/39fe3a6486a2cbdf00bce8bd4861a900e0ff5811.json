{"sha": "39fe3a6486a2cbdf00bce8bd4861a900e0ff5811", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM5ZmUzYTY0ODZhMmNiZGYwMGJjZThiZDQ4NjFhOTAwZTBmZjU4MTE=", "commit": {"author": {"name": "Florian Diebold", "email": "flodiebold@gmail.com", "date": "2020-04-13T09:55:34Z"}, "committer": {"name": "Florian Diebold", "email": "flodiebold@gmail.com", "date": "2020-04-16T11:06:23Z"}, "message": "Test for non-working proc macro server assoc types", "tree": {"sha": "266feed101e657c3cc494f19843c65e19f29fe31", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/266feed101e657c3cc494f19843c65e19f29fe31"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/39fe3a6486a2cbdf00bce8bd4861a900e0ff5811", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/39fe3a6486a2cbdf00bce8bd4861a900e0ff5811", "html_url": "https://github.com/rust-lang/rust/commit/39fe3a6486a2cbdf00bce8bd4861a900e0ff5811", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/39fe3a6486a2cbdf00bce8bd4861a900e0ff5811/comments", "author": {"login": "flodiebold", "id": 906069, "node_id": "MDQ6VXNlcjkwNjA2OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/906069?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flodiebold", "html_url": "https://github.com/flodiebold", "followers_url": "https://api.github.com/users/flodiebold/followers", "following_url": "https://api.github.com/users/flodiebold/following{/other_user}", "gists_url": "https://api.github.com/users/flodiebold/gists{/gist_id}", "starred_url": "https://api.github.com/users/flodiebold/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flodiebold/subscriptions", "organizations_url": "https://api.github.com/users/flodiebold/orgs", "repos_url": "https://api.github.com/users/flodiebold/repos", "events_url": "https://api.github.com/users/flodiebold/events{/privacy}", "received_events_url": "https://api.github.com/users/flodiebold/received_events", "type": "User", "site_admin": false}, "committer": {"login": "flodiebold", "id": 906069, "node_id": "MDQ6VXNlcjkwNjA2OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/906069?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flodiebold", "html_url": "https://github.com/flodiebold", "followers_url": "https://api.github.com/users/flodiebold/followers", "following_url": "https://api.github.com/users/flodiebold/following{/other_user}", "gists_url": "https://api.github.com/users/flodiebold/gists{/gist_id}", "starred_url": "https://api.github.com/users/flodiebold/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flodiebold/subscriptions", "organizations_url": "https://api.github.com/users/flodiebold/orgs", "repos_url": "https://api.github.com/users/flodiebold/repos", "events_url": "https://api.github.com/users/flodiebold/events{/privacy}", "received_events_url": "https://api.github.com/users/flodiebold/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "14570df015d1641d1e382c9898e7c6d981b99e97", "url": "https://api.github.com/repos/rust-lang/rust/commits/14570df015d1641d1e382c9898e7c6d981b99e97", "html_url": "https://github.com/rust-lang/rust/commit/14570df015d1641d1e382c9898e7c6d981b99e97"}], "stats": {"total": 68, "additions": 68, "deletions": 0}, "files": [{"sha": "0a889f8057e60eeebed77041d6c89cef394f0109", "filename": "crates/ra_hir_ty/src/tests/traits.rs", "status": "modified", "additions": 68, "deletions": 0, "changes": 68, "blob_url": "https://github.com/rust-lang/rust/blob/39fe3a6486a2cbdf00bce8bd4861a900e0ff5811/crates%2Fra_hir_ty%2Fsrc%2Ftests%2Ftraits.rs", "raw_url": "https://github.com/rust-lang/rust/raw/39fe3a6486a2cbdf00bce8bd4861a900e0ff5811/crates%2Fra_hir_ty%2Fsrc%2Ftests%2Ftraits.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_ty%2Fsrc%2Ftests%2Ftraits.rs?ref=39fe3a6486a2cbdf00bce8bd4861a900e0ff5811", "patch": "@@ -1986,6 +1986,74 @@ fn test<I: Iterator<Item: Iterator<Item = u32>>>() {\n     assert_eq!(t, \"u32\");\n }\n \n+#[test]\n+fn proc_macro_server_types() {\n+    assert_snapshot!(\n+        infer_with_mismatches(r#\"\n+macro_rules! with_api {\n+    ($S:ident, $self:ident, $m:ident) => {\n+        $m! {\n+            TokenStream {\n+                fn new() -> $S::TokenStream;\n+            },\n+            Group {\n+            },\n+        }\n+    };\n+}\n+macro_rules! associated_item {\n+    (type TokenStream) =>\n+        (type TokenStream: 'static + Clone;);\n+    (type Group) =>\n+        (type Group: 'static + Clone;);\n+    ($($item:tt)*) => ($($item)*;)\n+}\n+macro_rules! declare_server_traits {\n+    ($($name:ident {\n+        $(fn $method:ident($($arg:ident: $arg_ty:ty),* $(,)?) $(-> $ret_ty:ty)?;)*\n+    }),* $(,)?) => {\n+        pub trait Types {\n+            $(associated_item!(type $name);)*\n+        }\n+\n+        $(pub trait $name: Types {\n+            $(associated_item!(fn $method(&mut self, $($arg: $arg_ty),*) $(-> $ret_ty)?);)*\n+        })*\n+\n+        pub trait Server: Types $(+ $name)* {}\n+        impl<S: Types $(+ $name)*> Server for S {}\n+    }\n+}\n+with_api!(Self, self_, declare_server_traits);\n+struct Group {}\n+struct TokenStream {}\n+struct Rustc;\n+impl Types for Rustc {\n+    type TokenStream = TokenStream;\n+    type Group = Group;\n+}\n+fn make<T>() -> T { loop {} }\n+impl TokenStream for Rustc {\n+    fn new() -> Self::TokenStream {\n+        let group: Self::Group = make();\n+        make()\n+    }\n+}\n+\"#, true),\n+        @r###\"\n+    [1115; 1126) '{ loop {} }': T\n+    [1117; 1124) 'loop {}': !\n+    [1122; 1124) '{}': ()\n+    [1190; 1253) '{     ...     }': {unknown}\n+    [1204; 1209) 'group': {unknown}\n+    [1225; 1229) 'make': fn make<{unknown}>() -> {unknown}\n+    [1225; 1231) 'make()': {unknown}\n+    [1241; 1245) 'make': fn make<{unknown}>() -> {unknown}\n+    [1241; 1247) 'make()': {unknown}\n+    \"###\n+    );\n+}\n+\n #[test]\n fn unify_impl_trait() {\n     assert_snapshot!("}]}