{"sha": "699986d192a90313cb1fdaf1a650247689a13cee", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY5OTk4NmQxOTJhOTAzMTNjYjFmZGFmMWE2NTAyNDc2ODlhMTNjZWU=", "commit": {"author": {"name": "Brian Anderson", "email": "andersrb@gmail.com", "date": "2011-05-21T01:06:05Z"}, "committer": {"name": "Brian Anderson", "email": "andersrb@gmail.com", "date": "2011-05-21T02:32:41Z"}, "message": "fuzzer: Begin writing main", "tree": {"sha": "972156b83fb853ae73de08d98dfeefc29fa7eb7d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/972156b83fb853ae73de08d98dfeefc29fa7eb7d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/699986d192a90313cb1fdaf1a650247689a13cee", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/699986d192a90313cb1fdaf1a650247689a13cee", "html_url": "https://github.com/rust-lang/rust/commit/699986d192a90313cb1fdaf1a650247689a13cee", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/699986d192a90313cb1fdaf1a650247689a13cee/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "01c13a3878d31b15cf6e5373d01604a706a71211", "url": "https://api.github.com/repos/rust-lang/rust/commits/01c13a3878d31b15cf6e5373d01604a706a71211", "html_url": "https://github.com/rust-lang/rust/commit/01c13a3878d31b15cf6e5373d01604a706a71211"}], "stats": {"total": 70, "additions": 68, "deletions": 2}, "files": [{"sha": "09872431831eec342ad8a299bc0f179ad7687ccf", "filename": "src/fuzzer/fuzzer.rs", "status": "modified", "additions": 68, "deletions": 2, "changes": 70, "blob_url": "https://github.com/rust-lang/rust/blob/699986d192a90313cb1fdaf1a650247689a13cee/src%2Ffuzzer%2Ffuzzer.rs", "raw_url": "https://github.com/rust-lang/rust/raw/699986d192a90313cb1fdaf1a650247689a13cee/src%2Ffuzzer%2Ffuzzer.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ffuzzer%2Ffuzzer.rs?ref=699986d192a90313cb1fdaf1a650247689a13cee", "patch": "@@ -1,3 +1,69 @@\n+import std::fs;\n+import std::getopts;\n+import std::getopts::optopt;\n+import std::getopts::opt_present;\n+import std::getopts::opt_str;\n+import std::io;\n+import std::vec;\n+\n+import rustc::front::ast;\n+\n+type src_gen = iter() -> str;\n+\n+iter dir_src_gen(str dir) -> str {\n+}\n+\n+fn usage(str binary) {\n+    io::stdout().write_line(\"usage\");\n+}\n+\n+type session = rec(str srcdir);\n+\n+fn make_session(vec[str] args) -> session {\n+    // Directory of rust source files to use as input\n+    auto opt_src = \"src\";\n+\n+    auto binary = vec::shift[str](args);\n+    auto opts  = [optopt(opt_src)];\n+    auto match;\n+    alt (getopts::getopts(args, opts)) {\n+        case (getopts::failure(?f)) {\n+            log_err #fmt(\"error: %s\", getopts::fail_str(f));\n+            fail;\n+        }\n+        case (getopts::success(?m)) {\n+            match = m;\n+        }\n+    };\n+\n+    if (!opt_present(match, opt_src)) {\n+        usage(binary);\n+        fail;\n+    }\n+\n+    auto srcdir = opt_str(match, opt_src);\n+\n+    ret rec(srcdir = srcdir);\n+}\n+\n+fn log_session(session sess) {\n+    log #fmt(\"srcdir: %s\", sess.srcdir);\n+}\n+\n+fn run_session(session sess) {\n+}\n+\n fn main(vec[str] args) {\n-  rustc::driver::rustc::main(args);\n-}\n\\ No newline at end of file\n+    auto sess = make_session(args);\n+    log_session(sess);\n+    run_session(sess);\n+}\n+\n+// Local Variables:\n+// mode: rust;\n+// fill-column: 78;\n+// indent-tabs-mode: nil\n+// c-basic-offset: 4\n+// buffer-file-coding-system: utf-8-unix\n+// compile-command: \"make -k -C $RBUILD 2>&1 | sed -e 's/\\\\/x\\\\//x:\\\\//g'\";\n+// End:"}]}