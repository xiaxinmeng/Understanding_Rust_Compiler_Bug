{"sha": "3238c06a5a122b7e7b9b6871484c700b7947fae1", "node_id": "MDY6Q29tbWl0NzI0NzEyOjMyMzhjMDZhNWExMjJiN2U3YjliNjg3MTQ4NGM3MDBiNzk0N2ZhZTE=", "commit": {"author": {"name": "Marcus Klaas de Vries", "email": "mail@marcusklaas.nl", "date": "2019-01-07T18:03:25Z"}, "committer": {"name": "Marcus Klaas de Vries", "email": "mail@marcusklaas.nl", "date": "2019-01-07T18:04:25Z"}, "message": "Add remaining binary operations to AST", "tree": {"sha": "829a00153ca95b145f0c7e8db77a79866945645d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/829a00153ca95b145f0c7e8db77a79866945645d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3238c06a5a122b7e7b9b6871484c700b7947fae1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3238c06a5a122b7e7b9b6871484c700b7947fae1", "html_url": "https://github.com/rust-lang/rust/commit/3238c06a5a122b7e7b9b6871484c700b7947fae1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3238c06a5a122b7e7b9b6871484c700b7947fae1/comments", "author": {"login": "marcusklaas", "id": 1255413, "node_id": "MDQ6VXNlcjEyNTU0MTM=", "avatar_url": "https://avatars.githubusercontent.com/u/1255413?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marcusklaas", "html_url": "https://github.com/marcusklaas", "followers_url": "https://api.github.com/users/marcusklaas/followers", "following_url": "https://api.github.com/users/marcusklaas/following{/other_user}", "gists_url": "https://api.github.com/users/marcusklaas/gists{/gist_id}", "starred_url": "https://api.github.com/users/marcusklaas/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marcusklaas/subscriptions", "organizations_url": "https://api.github.com/users/marcusklaas/orgs", "repos_url": "https://api.github.com/users/marcusklaas/repos", "events_url": "https://api.github.com/users/marcusklaas/events{/privacy}", "received_events_url": "https://api.github.com/users/marcusklaas/received_events", "type": "User", "site_admin": false}, "committer": {"login": "marcusklaas", "id": 1255413, "node_id": "MDQ6VXNlcjEyNTU0MTM=", "avatar_url": "https://avatars.githubusercontent.com/u/1255413?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marcusklaas", "html_url": "https://github.com/marcusklaas", "followers_url": "https://api.github.com/users/marcusklaas/followers", "following_url": "https://api.github.com/users/marcusklaas/following{/other_user}", "gists_url": "https://api.github.com/users/marcusklaas/gists{/gist_id}", "starred_url": "https://api.github.com/users/marcusklaas/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marcusklaas/subscriptions", "organizations_url": "https://api.github.com/users/marcusklaas/orgs", "repos_url": "https://api.github.com/users/marcusklaas/repos", "events_url": "https://api.github.com/users/marcusklaas/events{/privacy}", "received_events_url": "https://api.github.com/users/marcusklaas/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e2592cf09087ae0a6cad5b588cbf1ab1161440e9", "url": "https://api.github.com/repos/rust-lang/rust/commits/e2592cf09087ae0a6cad5b588cbf1ab1161440e9", "html_url": "https://github.com/rust-lang/rust/commit/e2592cf09087ae0a6cad5b588cbf1ab1161440e9"}], "stats": {"total": 74, "additions": 73, "deletions": 1}, "files": [{"sha": "23ee76f4efe016fc99784667fa581d51b367e338", "filename": "crates/ra_hir/src/ty.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/3238c06a5a122b7e7b9b6871484c700b7947fae1/crates%2Fra_hir%2Fsrc%2Fty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3238c06a5a122b7e7b9b6871484c700b7947fae1/crates%2Fra_hir%2Fsrc%2Fty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fty.rs?ref=3238c06a5a122b7e7b9b6871484c700b7947fae1", "patch": "@@ -538,6 +538,7 @@ fn is_boolean_operator(op: BinaryOp) -> bool {\n         | BinaryOp::GreaterEqualTest\n         | BinaryOp::LesserTest\n         | BinaryOp::GreaterTest => true,\n+        _ => false,\n     }\n }\n "}, {"sha": "d8e18751479be0cc2b9225a5fb2058ac0fef074f", "filename": "crates/ra_syntax/src/ast.rs", "status": "modified", "additions": 69, "deletions": 1, "changes": 70, "blob_url": "https://github.com/rust-lang/rust/blob/3238c06a5a122b7e7b9b6871484c700b7947fae1/crates%2Fra_syntax%2Fsrc%2Fast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3238c06a5a122b7e7b9b6871484c700b7947fae1/crates%2Fra_syntax%2Fsrc%2Fast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Fsrc%2Fast.rs?ref=3238c06a5a122b7e7b9b6871484c700b7947fae1", "patch": "@@ -504,7 +504,52 @@ pub enum BinOp {\n     LesserTest,\n     /// The `>` operator for comparison\n     GreaterTest,\n-    // TODO: lots of others\n+    /// The `+` operator for addition\n+    Addition,\n+    /// The `*` operator for multiplication\n+    Multiplication,\n+    /// The `-` operator for subtraction\n+    Subtraction,\n+    /// The `/` operator for division\n+    Division,\n+    /// The `%` operator for remainder after division\n+    Remainder,\n+    /// The `<<` operator for left shift\n+    LeftShift,\n+    /// The `>>` operator for right shift\n+    RightShift,\n+    /// The `^` operator for bitwise XOR\n+    BitwiseXor,\n+    /// The `|` operator for bitwise OR\n+    BitwiseOr,\n+    /// The `&` operator for bitwise AND\n+    BitwiseAnd,\n+    /// The `..` operator for right-open ranges\n+    RangeRightOpen,\n+    /// The `..=` operator for right-closed ranges\n+    RangeRightClosed,\n+    /// The `=` operator for assignment\n+    Assignment,\n+    /// The `+=` operator for assignment after additon\n+    AddAssign,\n+    /// The `/=` operator for assignment after division\n+    DivAssign,\n+    /// The `*=` operator for assignment after multiplication\n+    MulAssign,\n+    /// The `%=` operator for assignment after remainders\n+    RemAssign,\n+    /// The `>>=` operator for assignment after shifting right\n+    ShrAssign,\n+    /// The `<<=` operator for assignment after shifting left\n+    ShlAssign,\n+    /// The `-=` operator for assignment after subtraction\n+    SubAssign,\n+    /// The `|=` operator for assignment after bitwise OR\n+    BitOrAssign,\n+    /// The `&=` operator for assignment after bitwise AND\n+    BitAndAssign,\n+    /// The `^=` operator for assignment after bitwise XOR\n+    BitXorAssin,\n }\n \n impl<'a> BinExpr<'a> {\n@@ -519,6 +564,29 @@ impl<'a> BinExpr<'a> {\n                 GTEQ => Some(BinOp::GreaterEqualTest),\n                 L_ANGLE => Some(BinOp::LesserTest),\n                 R_ANGLE => Some(BinOp::GreaterTest),\n+                PLUS => Some(BinOp::Addition),\n+                STAR => Some(BinOp::Multiplication),\n+                MINUS => Some(BinOp::Subtraction),\n+                SLASH => Some(BinOp::Division),\n+                PERCENT => Some(BinOp::Remainder),\n+                SHL => Some(BinOp::LeftShift),\n+                SHR => Some(BinOp::RightShift),\n+                CARET => Some(BinOp::BitwiseXor),\n+                PIPE => Some(BinOp::BitwiseOr),\n+                AMP => Some(BinOp::BitwiseAnd),\n+                DOTDOT => Some(BinOp::RangeRightOpen),\n+                DOTDOTEQ => Some(BinOp::RangeRightClosed),\n+                EQ => Some(BinOp::Assignment),\n+                PLUSEQ => Some(BinOp::AddAssign),\n+                SLASHEQ => Some(BinOp::DivAssign),\n+                STAREQ => Some(BinOp::MulAssign),\n+                PERCENTEQ => Some(BinOp::RemAssign),\n+                SHREQ => Some(BinOp::ShrAssign),\n+                SHLEQ => Some(BinOp::ShlAssign),\n+                MINUSEQ => Some(BinOp::SubAssign),\n+                PIPEEQ => Some(BinOp::BitOrAssign),\n+                AMPEQ => Some(BinOp::BitAndAssign),\n+                CARETEQ =>  Some(BinOp::BitXorAssin),\n                 _ => None,\n             })\n             .next()"}, {"sha": "d7505ea06d3132f2717a914da18d24d773d350c9", "filename": "crates/ra_syntax/src/grammar.ron", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/3238c06a5a122b7e7b9b6871484c700b7947fae1/crates%2Fra_syntax%2Fsrc%2Fgrammar.ron", "raw_url": "https://github.com/rust-lang/rust/raw/3238c06a5a122b7e7b9b6871484c700b7947fae1/crates%2Fra_syntax%2Fsrc%2Fgrammar.ron", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Fsrc%2Fgrammar.ron?ref=3238c06a5a122b7e7b9b6871484c700b7947fae1", "patch": "@@ -49,6 +49,7 @@ Grammar(\n         [\"^=\", \"CARETEQ\"],\n         [\"/=\", \"SLASHEQ\"],\n         [\"*=\", \"STAREQ\"],\n+        [\"%=\", \"PERCENTEQ\"],\n         [\"&&\", \"AMPAMP\"],\n         [\"||\", \"PIPEPIPE\"],\n         [\"<<\", \"SHL\"],"}, {"sha": "830fac9f4baaafdff12a85f4ef560cbaf31b9138", "filename": "crates/ra_syntax/src/syntax_kinds/generated.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3238c06a5a122b7e7b9b6871484c700b7947fae1/crates%2Fra_syntax%2Fsrc%2Fsyntax_kinds%2Fgenerated.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3238c06a5a122b7e7b9b6871484c700b7947fae1/crates%2Fra_syntax%2Fsrc%2Fsyntax_kinds%2Fgenerated.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Fsrc%2Fsyntax_kinds%2Fgenerated.rs?ref=3238c06a5a122b7e7b9b6871484c700b7947fae1", "patch": "@@ -58,6 +58,7 @@ pub enum SyntaxKind {\n     CARETEQ,\n     SLASHEQ,\n     STAREQ,\n+    PERCENTEQ,\n     AMPAMP,\n     PIPEPIPE,\n     SHL,\n@@ -319,6 +320,7 @@ impl SyntaxKind {\n             CARETEQ => &SyntaxInfo { name: \"CARETEQ\" },\n             SLASHEQ => &SyntaxInfo { name: \"SLASHEQ\" },\n             STAREQ => &SyntaxInfo { name: \"STAREQ\" },\n+            PERCENTEQ => &SyntaxInfo { name: \"PERCENTEQ\" },\n             AMPAMP => &SyntaxInfo { name: \"AMPAMP\" },\n             PIPEPIPE => &SyntaxInfo { name: \"PIPEPIPE\" },\n             SHL => &SyntaxInfo { name: \"SHL\" },"}]}