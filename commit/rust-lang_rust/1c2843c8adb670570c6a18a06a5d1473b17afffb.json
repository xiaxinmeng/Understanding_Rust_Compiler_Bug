{"sha": "1c2843c8adb670570c6a18a06a5d1473b17afffb", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFjMjg0M2M4YWRiNjcwNTcwYzZhMThhMDZhNWQxNDczYjE3YWZmZmI=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2012-07-03T18:23:12Z"}, "committer": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2012-07-03T18:24:01Z"}, "message": "core: Eliminate some overloading of the name \"future\" in future.rs", "tree": {"sha": "8e23ba72162c2bb962116995c963ce470d950463", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8e23ba72162c2bb962116995c963ce470d950463"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1c2843c8adb670570c6a18a06a5d1473b17afffb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1c2843c8adb670570c6a18a06a5d1473b17afffb", "html_url": "https://github.com/rust-lang/rust/commit/1c2843c8adb670570c6a18a06a5d1473b17afffb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1c2843c8adb670570c6a18a06a5d1473b17afffb/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d52f0f79bcfd86b689d88a2edfcdb4aafac2e8af", "url": "https://api.github.com/repos/rust-lang/rust/commits/d52f0f79bcfd86b689d88a2edfcdb4aafac2e8af", "html_url": "https://github.com/rust-lang/rust/commit/d52f0f79bcfd86b689d88a2edfcdb4aafac2e8af"}], "stats": {"total": 11, "additions": 6, "deletions": 5}, "files": [{"sha": "c70d123d4affd6cd7248d26dfcb0b44ae338837c", "filename": "src/libcore/future.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/1c2843c8adb670570c6a18a06a5d1473b17afffb/src%2Flibcore%2Ffuture.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1c2843c8adb670570c6a18a06a5d1473b17afffb/src%2Flibcore%2Ffuture.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Ffuture.rs?ref=1c2843c8adb670570c6a18a06a5d1473b17afffb", "patch": "@@ -14,6 +14,7 @@ io::println(#fmt(\\\"fib(5000) = %?\\\", delayed_fib.get()))\n import either::either;\n \n export future;\n+export extensions;\n export from_value;\n export from_port;\n export from_fn;\n@@ -27,7 +28,7 @@ enum future<A> = {\n };\n \n #[doc = \"Methods on the `future` type\"]\n-impl future<A:copy send> for future<A> {\n+impl extensions<A:copy send> for future<A> {\n \n     fn get() -> A {\n         #[doc = \"Get the value of the future\"];"}, {"sha": "cfae6a3ba13ba9757a7667788f660b32483fe7a3", "filename": "src/libstd/net_tcp.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/1c2843c8adb670570c6a18a06a5d1473b17afffb/src%2Flibstd%2Fnet_tcp.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1c2843c8adb670570c6a18a06a5d1473b17afffb/src%2Flibstd%2Fnet_tcp.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fnet_tcp.rs?ref=1c2843c8adb670570c6a18a06a5d1473b17afffb", "patch": "@@ -6,8 +6,8 @@ import ip = net_ip;\n import uv::iotask;\n import uv::iotask::iotask;\n import comm::methods;\n-import future::future;\n import future_spawn = future::spawn;\n+import future::extensions;\n // FIXME #1935\n // should be able to, but can't atm, replace w/ result::{result, extensions};\n import result::*;\n@@ -303,7 +303,7 @@ A `future` value that, once the `write` operation completes, resolves to a\n value as the `err` variant\n \"]\n fn write_future(sock: tcp_socket, raw_write_data: ~[u8])\n-    -> future<result::result<(), tcp_err_data>> unsafe {\n+    -> future::future<result::result<(), tcp_err_data>> unsafe {\n     let socket_data_ptr = ptr::addr_of(*(sock.socket_data));\n     do future_spawn || {\n         let data_copy = copy(raw_write_data);\n@@ -395,7 +395,7 @@ Otherwise, use the blocking `tcp::read` function instead.\n read attempt. Pass `0u` to wait indefinitely\n \"]\n fn read_future(sock: tcp_socket, timeout_msecs: uint)\n-    -> future<result::result<~[u8],tcp_err_data>> {\n+    -> future::future<result::result<~[u8],tcp_err_data>> {\n     let socket_data = ptr::addr_of(*(sock.socket_data));\n     do future_spawn || {\n         read_common_impl(socket_data, timeout_msecs)"}, {"sha": "167eded03cbac34f201fefa16457540a50f1dd7f", "filename": "src/libstd/par.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1c2843c8adb670570c6a18a06a5d1473b17afffb/src%2Flibstd%2Fpar.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1c2843c8adb670570c6a18a06a5d1473b17afffb/src%2Flibstd%2Fpar.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fpar.rs?ref=1c2843c8adb670570c6a18a06a5d1473b17afffb", "patch": "@@ -3,7 +3,7 @@ import comm::chan;\n import comm::send;\n import comm::recv;\n import future_spawn = future::spawn;\n-import future::future;\n+import future::extensions;\n import core::vec::extensions;\n \n export map, mapi, alli, any, mapi_factory;"}]}