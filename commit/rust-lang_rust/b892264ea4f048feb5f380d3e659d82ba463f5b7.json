{"sha": "b892264ea4f048feb5f380d3e659d82ba463f5b7", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI4OTIyNjRlYTRmMDQ4ZmViNWYzODBkM2U2NTlkODJiYTQ2M2Y1Yjc=", "commit": {"author": {"name": "Felix S. Klock II", "email": "pnkfelix@pnkfx.org", "date": "2015-04-28T15:47:16Z"}, "committer": {"name": "Felix S. Klock II", "email": "pnkfelix@pnkfx.org", "date": "2015-04-28T15:47:16Z"}, "message": "Fix #24895.\n\n[breaking-change]\n\nWhat does this break?  Basically, code that implements `Drop` and is\nusing `T:Copy` for one of its type parameters and is relying on the\nDrop Check rule not applying to it.\n\nHere is an example:\n\n```rust\n#![allow(dead_code,unused_variables,unused_assignments)]\nstruct D<T:Copy>(T);\nimpl<T:Copy> Drop for D<T> { fn drop(&mut self) { } }\n\ntrait UserT { fn c(&self) { } }\nimpl<T:Copy> UserT for T { }\nstruct E<T:UserT>(T);\nimpl<T:UserT> Drop for E<T> { fn drop(&mut self) { } }\n\n// This one will start breaking.\nfn foo() { let (d2, d1); d1 = D(34); d2 = D(&d1); }\n\n#[cfg(this_one_does_and_should_always_break)]\nfn bar() { let (e2, e1); e1 = E(34); e2 = E(&e1); }\n\nfn main() {\n    foo();\n}\n```", "tree": {"sha": "31076c11488b4ec5e43a584b7db33d4d6bd30e20", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/31076c11488b4ec5e43a584b7db33d4d6bd30e20"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b892264ea4f048feb5f380d3e659d82ba463f5b7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b892264ea4f048feb5f380d3e659d82ba463f5b7", "html_url": "https://github.com/rust-lang/rust/commit/b892264ea4f048feb5f380d3e659d82ba463f5b7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b892264ea4f048feb5f380d3e659d82ba463f5b7/comments", "author": {"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "da2276e293359708b62bb489801cb9872d19d32f", "url": "https://api.github.com/repos/rust-lang/rust/commits/da2276e293359708b62bb489801cb9872d19d32f", "html_url": "https://github.com/rust-lang/rust/commit/da2276e293359708b62bb489801cb9872d19d32f"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "008ba1c6bf83e3a3a9b30b1a3275eb8dee1a5bb5", "filename": "src/librustc_typeck/check/dropck.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b892264ea4f048feb5f380d3e659d82ba463f5b7/src%2Flibrustc_typeck%2Fcheck%2Fdropck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b892264ea4f048feb5f380d3e659d82ba463f5b7/src%2Flibrustc_typeck%2Fcheck%2Fdropck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fdropck.rs?ref=b892264ea4f048feb5f380d3e659d82ba463f5b7", "patch": "@@ -464,9 +464,9 @@ fn iterate_over_potentially_unsafe_regions_in_type<'a, 'tcx>(\n                     ty::Predicate::Trait(ty::Binder(ref t_pred)) => {\n                         let def_id = t_pred.trait_ref.def_id;\n                         match rcx.tcx().lang_items.to_builtin_kind(def_id) {\n+                            // Issue 24895: deliberately do not include `BoundCopy` here.\n                             Some(ty::BoundSend) |\n                             Some(ty::BoundSized) |\n-                            Some(ty::BoundCopy) |\n                             Some(ty::BoundSync) => false,\n                             _ => true,\n                         }"}]}