{"sha": "4fc17e7fafcc59223fd9047b18829e052e074226", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRmYzE3ZTdmYWZjYzU5MjIzZmQ5MDQ3YjE4ODI5ZTA1MmUwNzQyMjY=", "commit": {"author": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2015-09-30T14:24:41Z"}, "committer": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2015-09-30T14:24:41Z"}, "message": "rustup to rustc 1.5.0-nightly (65d5c0833 2015-09-29)", "tree": {"sha": "6c45d34f5b453dc09ccb1f29bc7c5180780b6294", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6c45d34f5b453dc09ccb1f29bc7c5180780b6294"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4fc17e7fafcc59223fd9047b18829e052e074226", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4fc17e7fafcc59223fd9047b18829e052e074226", "html_url": "https://github.com/rust-lang/rust/commit/4fc17e7fafcc59223fd9047b18829e052e074226", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4fc17e7fafcc59223fd9047b18829e052e074226/comments", "author": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e8f875813d75f5547c2e1e8b139c89a6275c0ccb", "url": "https://api.github.com/repos/rust-lang/rust/commits/e8f875813d75f5547c2e1e8b139c89a6275c0ccb", "html_url": "https://github.com/rust-lang/rust/commit/e8f875813d75f5547c2e1e8b139c89a6275c0ccb"}], "stats": {"total": 10, "additions": 1, "deletions": 9}, "files": [{"sha": "e39a41316a0339869a5851bd74a805db714a30a2", "filename": "src/lifetimes.rs", "status": "modified", "additions": 1, "deletions": 9, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/4fc17e7fafcc59223fd9047b18829e052e074226/src%2Flifetimes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4fc17e7fafcc59223fd9047b18829e052e074226/src%2Flifetimes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flifetimes.rs?ref=4fc17e7fafcc59223fd9047b18829e052e074226", "patch": "@@ -177,18 +177,10 @@ impl RefVisitor {\n }\n \n impl<'v> Visitor<'v> for RefVisitor {\n-    // for lifetimes of references\n-    fn visit_opt_lifetime_ref(&mut self, _: Span, lifetime: &'v Option<Lifetime>) {\n-        self.record(lifetime);\n-    }\n-\n     // for lifetimes as parameters of generics\n-    fn visit_lifetime_ref(&mut self, lifetime: &'v Lifetime) {\n+    fn visit_lifetime(&mut self, lifetime: &'v Lifetime) {\n         self.record(&Some(*lifetime));\n     }\n-\n-    // for lifetime bounds; the default impl calls visit_lifetime_ref\n-    fn visit_lifetime_bound(&mut self, _: &'v Lifetime) { }\n }\n \n /// Are any lifetimes mentioned in the `where` clause? If yes, we don't try to"}]}