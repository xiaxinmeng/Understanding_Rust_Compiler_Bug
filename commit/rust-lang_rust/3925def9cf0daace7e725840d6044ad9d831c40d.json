{"sha": "3925def9cf0daace7e725840d6044ad9d831c40d", "node_id": "C_kwDOAAsO6NoAKDM5MjVkZWY5Y2YwZGFhY2U3ZTcyNTg0MGQ2MDQ0YWQ5ZDgzMWM0MGQ", "commit": {"author": {"name": "Jason Newcomb", "email": "jsnewcomb@pm.me", "date": "2022-01-05T17:35:35Z"}, "committer": {"name": "Jason Newcomb", "email": "jsnewcomb@pm.me", "date": "2022-01-05T17:35:35Z"}, "message": "Suggest `copy_from_slice` for `manual_memcpy` when possible", "tree": {"sha": "1d93901e39b9fc834ee3872e2223a1d161a882a7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1d93901e39b9fc834ee3872e2223a1d161a882a7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3925def9cf0daace7e725840d6044ad9d831c40d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3925def9cf0daace7e725840d6044ad9d831c40d", "html_url": "https://github.com/rust-lang/rust/commit/3925def9cf0daace7e725840d6044ad9d831c40d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3925def9cf0daace7e725840d6044ad9d831c40d/comments", "author": {"login": "Jarcho", "id": 7761774, "node_id": "MDQ6VXNlcjc3NjE3NzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/7761774?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Jarcho", "html_url": "https://github.com/Jarcho", "followers_url": "https://api.github.com/users/Jarcho/followers", "following_url": "https://api.github.com/users/Jarcho/following{/other_user}", "gists_url": "https://api.github.com/users/Jarcho/gists{/gist_id}", "starred_url": "https://api.github.com/users/Jarcho/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Jarcho/subscriptions", "organizations_url": "https://api.github.com/users/Jarcho/orgs", "repos_url": "https://api.github.com/users/Jarcho/repos", "events_url": "https://api.github.com/users/Jarcho/events{/privacy}", "received_events_url": "https://api.github.com/users/Jarcho/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Jarcho", "id": 7761774, "node_id": "MDQ6VXNlcjc3NjE3NzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/7761774?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Jarcho", "html_url": "https://github.com/Jarcho", "followers_url": "https://api.github.com/users/Jarcho/followers", "following_url": "https://api.github.com/users/Jarcho/following{/other_user}", "gists_url": "https://api.github.com/users/Jarcho/gists{/gist_id}", "starred_url": "https://api.github.com/users/Jarcho/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Jarcho/subscriptions", "organizations_url": "https://api.github.com/users/Jarcho/orgs", "repos_url": "https://api.github.com/users/Jarcho/repos", "events_url": "https://api.github.com/users/Jarcho/events{/privacy}", "received_events_url": "https://api.github.com/users/Jarcho/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "14f34454b04e6fd578ccbeaed99d8d3ad3ba1bc9", "url": "https://api.github.com/repos/rust-lang/rust/commits/14f34454b04e6fd578ccbeaed99d8d3ad3ba1bc9", "html_url": "https://github.com/rust-lang/rust/commit/14f34454b04e6fd578ccbeaed99d8d3ad3ba1bc9"}], "stats": {"total": 79, "additions": 44, "deletions": 35}, "files": [{"sha": "17302f43c324cba5678c6bc2816f95e2e99f24b1", "filename": "clippy_lints/src/loops/manual_memcpy.rs", "status": "modified", "additions": 19, "deletions": 10, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/3925def9cf0daace7e725840d6044ad9d831c40d/clippy_lints%2Fsrc%2Floops%2Fmanual_memcpy.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3925def9cf0daace7e725840d6044ad9d831c40d/clippy_lints%2Fsrc%2Floops%2Fmanual_memcpy.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Floops%2Fmanual_memcpy.rs?ref=3925def9cf0daace7e725840d6044ad9d831c40d", "patch": "@@ -2,6 +2,7 @@ use super::{IncrementVisitor, InitializeVisitor, MANUAL_MEMCPY};\n use clippy_utils::diagnostics::span_lint_and_sugg;\n use clippy_utils::source::snippet;\n use clippy_utils::sugg::Sugg;\n+use clippy_utils::ty::is_copy;\n use clippy_utils::{get_enclosing_block, higher, path_to_local, sugg};\n use if_chain::if_chain;\n use rustc_ast::ast;\n@@ -61,23 +62,23 @@ pub(super) fn check<'tcx>(\n                         if_chain! {\n                             if let ExprKind::Index(base_left, idx_left) = lhs.kind;\n                             if let ExprKind::Index(base_right, idx_right) = rhs.kind;\n-                            if is_slice_like(cx, cx.typeck_results().expr_ty(base_left));\n-                            if is_slice_like(cx, cx.typeck_results().expr_ty(base_right));\n+                            if let Some(ty) = get_slice_like_element_ty(cx, cx.typeck_results().expr_ty(base_left));\n+                            if get_slice_like_element_ty(cx, cx.typeck_results().expr_ty(base_right)).is_some();\n                             if let Some((start_left, offset_left)) = get_details_from_idx(cx, idx_left, &starts);\n                             if let Some((start_right, offset_right)) = get_details_from_idx(cx, idx_right, &starts);\n \n                             // Source and destination must be different\n                             if path_to_local(base_left) != path_to_local(base_right);\n                             then {\n-                                Some((IndexExpr { base: base_left, idx: start_left, idx_offset: offset_left },\n+                                Some((ty, IndexExpr { base: base_left, idx: start_left, idx_offset: offset_left },\n                                     IndexExpr { base: base_right, idx: start_right, idx_offset: offset_right }))\n                             } else {\n                                 None\n                             }\n                         }\n                     })\n                 })\n-                .map(|o| o.map(|(dst, src)| build_manual_memcpy_suggestion(cx, start, end, limits, &dst, &src)))\n+                .map(|o| o.map(|(ty, dst, src)| build_manual_memcpy_suggestion(cx, start, end, limits, ty, &dst, &src)))\n                 .collect::<Option<Vec<_>>>()\n                 .filter(|v| !v.is_empty())\n                 .map(|v| v.join(\"\\n    \"));\n@@ -104,6 +105,7 @@ fn build_manual_memcpy_suggestion<'tcx>(\n     start: &Expr<'_>,\n     end: &Expr<'_>,\n     limits: ast::RangeLimits,\n+    elem_ty: Ty<'tcx>,\n     dst: &IndexExpr<'_>,\n     src: &IndexExpr<'_>,\n ) -> String {\n@@ -186,9 +188,16 @@ fn build_manual_memcpy_suggestion<'tcx>(\n         .into()\n     };\n \n+    let method_str = if is_copy(cx, elem_ty) {\n+        \"copy_from_slice\"\n+    } else {\n+        \"clone_from_slice\"\n+    };\n+\n     format!(\n-        \"{}.clone_from_slice(&{}[{}..{}]);\",\n+        \"{}.{}(&{}[{}..{}]);\",\n         dst,\n+        method_str,\n         src_base_str,\n         src_offset.maybe_par(),\n         src_limit.maybe_par()\n@@ -323,12 +332,12 @@ struct Start<'hir> {\n     kind: StartKind<'hir>,\n }\n \n-fn is_slice_like<'tcx>(cx: &LateContext<'tcx>, ty: Ty<'_>) -> bool {\n+fn get_slice_like_element_ty<'tcx>(cx: &LateContext<'tcx>, ty: Ty<'tcx>) -> Option<Ty<'tcx>> {\n     match ty.kind() {\n-        ty::Adt(adt, _) => cx.tcx.is_diagnostic_item(sym::Vec, adt.did),\n-        ty::Ref(_, subty, _) => is_slice_like(cx, subty),\n-        ty::Slice(..) | ty::Array(..) => true,\n-        _ => false,\n+        ty::Adt(adt, subs) if cx.tcx.is_diagnostic_item(sym::Vec, adt.did) => Some(subs.type_at(0)),\n+        ty::Ref(_, subty, _) => get_slice_like_element_ty(cx, subty),\n+        ty::Slice(ty) | ty::Array(ty, _) => Some(ty),\n+        _ => None,\n     }\n }\n "}, {"sha": "79d40c0bcb1d984d12415e109ad711e2d2d02103", "filename": "tests/ui/manual_memcpy/with_loop_counters.stderr", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/3925def9cf0daace7e725840d6044ad9d831c40d/tests%2Fui%2Fmanual_memcpy%2Fwith_loop_counters.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/3925def9cf0daace7e725840d6044ad9d831c40d/tests%2Fui%2Fmanual_memcpy%2Fwith_loop_counters.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmanual_memcpy%2Fwith_loop_counters.stderr?ref=3925def9cf0daace7e725840d6044ad9d831c40d", "patch": "@@ -5,7 +5,7 @@ LL | /     for i in 3..src.len() {\n LL | |         dst[i] = src[count];\n LL | |         count += 1;\n LL | |     }\n-   | |_____^ help: try replacing the loop by: `dst[3..src.len()].clone_from_slice(&src[..(src.len() - 3)]);`\n+   | |_____^ help: try replacing the loop by: `dst[3..src.len()].copy_from_slice(&src[..(src.len() - 3)]);`\n    |\n    = note: `-D clippy::manual-memcpy` implied by `-D warnings`\n \n@@ -16,7 +16,7 @@ LL | /     for i in 3..src.len() {\n LL | |         dst[count] = src[i];\n LL | |         count += 1;\n LL | |     }\n-   | |_____^ help: try replacing the loop by: `dst[..(src.len() - 3)].clone_from_slice(&src[3..]);`\n+   | |_____^ help: try replacing the loop by: `dst[..(src.len() - 3)].copy_from_slice(&src[3..]);`\n \n error: it looks like you're manually copying between slices\n   --> $DIR/with_loop_counters.rs:17:5\n@@ -25,7 +25,7 @@ LL | /     for i in 0..src.len() {\n LL | |         dst[count] = src[i];\n LL | |         count += 1;\n LL | |     }\n-   | |_____^ help: try replacing the loop by: `dst[3..(src.len() + 3)].clone_from_slice(&src[..]);`\n+   | |_____^ help: try replacing the loop by: `dst[3..(src.len() + 3)].copy_from_slice(&src[..]);`\n \n error: it looks like you're manually copying between slices\n   --> $DIR/with_loop_counters.rs:23:5\n@@ -34,7 +34,7 @@ LL | /     for i in 0..src.len() {\n LL | |         dst[i] = src[count];\n LL | |         count += 1;\n LL | |     }\n-   | |_____^ help: try replacing the loop by: `dst[..src.len()].clone_from_slice(&src[3..(src.len() + 3)]);`\n+   | |_____^ help: try replacing the loop by: `dst[..src.len()].copy_from_slice(&src[3..(src.len() + 3)]);`\n \n error: it looks like you're manually copying between slices\n   --> $DIR/with_loop_counters.rs:29:5\n@@ -43,7 +43,7 @@ LL | /     for i in 3..(3 + src.len()) {\n LL | |         dst[i] = src[count];\n LL | |         count += 1;\n LL | |     }\n-   | |_____^ help: try replacing the loop by: `dst[3..(3 + src.len())].clone_from_slice(&src[..(3 + src.len() - 3)]);`\n+   | |_____^ help: try replacing the loop by: `dst[3..(3 + src.len())].copy_from_slice(&src[..(3 + src.len() - 3)]);`\n \n error: it looks like you're manually copying between slices\n   --> $DIR/with_loop_counters.rs:35:5\n@@ -52,7 +52,7 @@ LL | /     for i in 5..src.len() {\n LL | |         dst[i] = src[count - 2];\n LL | |         count += 1;\n LL | |     }\n-   | |_____^ help: try replacing the loop by: `dst[5..src.len()].clone_from_slice(&src[(3 - 2)..((src.len() - 2) + 3 - 5)]);`\n+   | |_____^ help: try replacing the loop by: `dst[5..src.len()].copy_from_slice(&src[(3 - 2)..((src.len() - 2) + 3 - 5)]);`\n \n error: it looks like you're manually copying between slices\n   --> $DIR/with_loop_counters.rs:41:5\n@@ -61,7 +61,7 @@ LL | /     for i in 0..dst.len() {\n LL | |         dst[i] = src[count];\n LL | |         count += 1;\n LL | |     }\n-   | |_____^ help: try replacing the loop by: `dst.clone_from_slice(&src[2..(dst.len() + 2)]);`\n+   | |_____^ help: try replacing the loop by: `dst.copy_from_slice(&src[2..(dst.len() + 2)]);`\n \n error: it looks like you're manually copying between slices\n   --> $DIR/with_loop_counters.rs:47:5\n@@ -70,7 +70,7 @@ LL | /     for i in 3..10 {\n LL | |         dst[i] = src[count];\n LL | |         count += 1;\n LL | |     }\n-   | |_____^ help: try replacing the loop by: `dst[3..10].clone_from_slice(&src[5..(10 + 5 - 3)]);`\n+   | |_____^ help: try replacing the loop by: `dst[3..10].copy_from_slice(&src[5..(10 + 5 - 3)]);`\n \n error: it looks like you're manually copying between slices\n   --> $DIR/with_loop_counters.rs:54:5\n@@ -85,8 +85,8 @@ LL | |     }\n    |\n help: try replacing the loop by\n    |\n-LL ~     dst[3..(src.len() + 3)].clone_from_slice(&src[..]);\n-LL +     dst2[30..(src.len() + 30)].clone_from_slice(&src[..]);\n+LL ~     dst[3..(src.len() + 3)].copy_from_slice(&src[..]);\n+LL +     dst2[30..(src.len() + 30)].copy_from_slice(&src[..]);\n    |\n \n error: it looks like you're manually copying between slices\n@@ -96,7 +96,7 @@ LL | /     for i in 0..1 << 1 {\n LL | |         dst[count] = src[i + 2];\n LL | |         count += 1;\n LL | |     }\n-   | |_____^ help: try replacing the loop by: `dst[(0 << 1)..((1 << 1) + (0 << 1))].clone_from_slice(&src[2..((1 << 1) + 2)]);`\n+   | |_____^ help: try replacing the loop by: `dst[(0 << 1)..((1 << 1) + (0 << 1))].copy_from_slice(&src[2..((1 << 1) + 2)]);`\n \n error: it looks like you're manually copying between slices\n   --> $DIR/with_loop_counters.rs:71:5\n@@ -105,7 +105,7 @@ LL | /     for i in 3..src.len() {\n LL | |         dst[i] = src[count];\n LL | |         count += 1\n LL | |     }\n-   | |_____^ help: try replacing the loop by: `dst[3..src.len()].clone_from_slice(&src[..(src.len() - 3)]);`\n+   | |_____^ help: try replacing the loop by: `dst[3..src.len()].copy_from_slice(&src[..(src.len() - 3)]);`\n \n error: aborting due to 11 previous errors\n "}, {"sha": "654dee32a1e845f5e3be000aeb09d86b92335714", "filename": "tests/ui/manual_memcpy/without_loop_counters.stderr", "status": "modified", "additions": 13, "deletions": 13, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/3925def9cf0daace7e725840d6044ad9d831c40d/tests%2Fui%2Fmanual_memcpy%2Fwithout_loop_counters.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/3925def9cf0daace7e725840d6044ad9d831c40d/tests%2Fui%2Fmanual_memcpy%2Fwithout_loop_counters.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmanual_memcpy%2Fwithout_loop_counters.stderr?ref=3925def9cf0daace7e725840d6044ad9d831c40d", "patch": "@@ -4,7 +4,7 @@ error: it looks like you're manually copying between slices\n LL | /     for i in 0..src.len() {\n LL | |         dst[i] = src[i];\n LL | |     }\n-   | |_____^ help: try replacing the loop by: `dst[..src.len()].clone_from_slice(&src[..]);`\n+   | |_____^ help: try replacing the loop by: `dst[..src.len()].copy_from_slice(&src[..]);`\n    |\n    = note: `-D clippy::manual-memcpy` implied by `-D warnings`\n \n@@ -14,31 +14,31 @@ error: it looks like you're manually copying between slices\n LL | /     for i in 0..src.len() {\n LL | |         dst[i + 10] = src[i];\n LL | |     }\n-   | |_____^ help: try replacing the loop by: `dst[10..(src.len() + 10)].clone_from_slice(&src[..]);`\n+   | |_____^ help: try replacing the loop by: `dst[10..(src.len() + 10)].copy_from_slice(&src[..]);`\n \n error: it looks like you're manually copying between slices\n   --> $DIR/without_loop_counters.rs:17:5\n    |\n LL | /     for i in 0..src.len() {\n LL | |         dst[i] = src[i + 10];\n LL | |     }\n-   | |_____^ help: try replacing the loop by: `dst[..src.len()].clone_from_slice(&src[10..(src.len() + 10)]);`\n+   | |_____^ help: try replacing the loop by: `dst[..src.len()].copy_from_slice(&src[10..(src.len() + 10)]);`\n \n error: it looks like you're manually copying between slices\n   --> $DIR/without_loop_counters.rs:22:5\n    |\n LL | /     for i in 11..src.len() {\n LL | |         dst[i] = src[i - 10];\n LL | |     }\n-   | |_____^ help: try replacing the loop by: `dst[11..src.len()].clone_from_slice(&src[(11 - 10)..(src.len() - 10)]);`\n+   | |_____^ help: try replacing the loop by: `dst[11..src.len()].copy_from_slice(&src[(11 - 10)..(src.len() - 10)]);`\n \n error: it looks like you're manually copying between slices\n   --> $DIR/without_loop_counters.rs:27:5\n    |\n LL | /     for i in 0..dst.len() {\n LL | |         dst[i] = src[i];\n LL | |     }\n-   | |_____^ help: try replacing the loop by: `dst.clone_from_slice(&src[..dst.len()]);`\n+   | |_____^ help: try replacing the loop by: `dst.copy_from_slice(&src[..dst.len()]);`\n \n error: it looks like you're manually copying between slices\n   --> $DIR/without_loop_counters.rs:40:5\n@@ -51,8 +51,8 @@ LL | |     }\n    |\n help: try replacing the loop by\n    |\n-LL ~     dst[10..256].clone_from_slice(&src[(10 - 5)..(256 - 5)]);\n-LL +     dst2[(10 + 500)..(256 + 500)].clone_from_slice(&src[10..256]);\n+LL ~     dst[10..256].copy_from_slice(&src[(10 - 5)..(256 - 5)]);\n+LL +     dst2[(10 + 500)..(256 + 500)].copy_from_slice(&src[10..256]);\n    |\n \n error: it looks like you're manually copying between slices\n@@ -61,47 +61,47 @@ error: it looks like you're manually copying between slices\n LL | /     for i in 10..LOOP_OFFSET {\n LL | |         dst[i + LOOP_OFFSET] = src[i - some_var];\n LL | |     }\n-   | |_____^ help: try replacing the loop by: `dst[(10 + LOOP_OFFSET)..(LOOP_OFFSET + LOOP_OFFSET)].clone_from_slice(&src[(10 - some_var)..(LOOP_OFFSET - some_var)]);`\n+   | |_____^ help: try replacing the loop by: `dst[(10 + LOOP_OFFSET)..(LOOP_OFFSET + LOOP_OFFSET)].copy_from_slice(&src[(10 - some_var)..(LOOP_OFFSET - some_var)]);`\n \n error: it looks like you're manually copying between slices\n   --> $DIR/without_loop_counters.rs:65:5\n    |\n LL | /     for i in 0..src_vec.len() {\n LL | |         dst_vec[i] = src_vec[i];\n LL | |     }\n-   | |_____^ help: try replacing the loop by: `dst_vec[..src_vec.len()].clone_from_slice(&src_vec[..]);`\n+   | |_____^ help: try replacing the loop by: `dst_vec[..src_vec.len()].copy_from_slice(&src_vec[..]);`\n \n error: it looks like you're manually copying between slices\n   --> $DIR/without_loop_counters.rs:94:5\n    |\n LL | /     for i in from..from + src.len() {\n LL | |         dst[i] = src[i - from];\n LL | |     }\n-   | |_____^ help: try replacing the loop by: `dst[from..(from + src.len())].clone_from_slice(&src[..(from + src.len() - from)]);`\n+   | |_____^ help: try replacing the loop by: `dst[from..(from + src.len())].copy_from_slice(&src[..(from + src.len() - from)]);`\n \n error: it looks like you're manually copying between slices\n   --> $DIR/without_loop_counters.rs:98:5\n    |\n LL | /     for i in from..from + 3 {\n LL | |         dst[i] = src[i - from];\n LL | |     }\n-   | |_____^ help: try replacing the loop by: `dst[from..(from + 3)].clone_from_slice(&src[..(from + 3 - from)]);`\n+   | |_____^ help: try replacing the loop by: `dst[from..(from + 3)].copy_from_slice(&src[..(from + 3 - from)]);`\n \n error: it looks like you're manually copying between slices\n   --> $DIR/without_loop_counters.rs:103:5\n    |\n LL | /     for i in 0..5 {\n LL | |         dst[i - 0] = src[i];\n LL | |     }\n-   | |_____^ help: try replacing the loop by: `dst[..5].clone_from_slice(&src[..5]);`\n+   | |_____^ help: try replacing the loop by: `dst[..5].copy_from_slice(&src[..5]);`\n \n error: it looks like you're manually copying between slices\n   --> $DIR/without_loop_counters.rs:108:5\n    |\n LL | /     for i in 0..0 {\n LL | |         dst[i] = src[i];\n LL | |     }\n-   | |_____^ help: try replacing the loop by: `dst[..0].clone_from_slice(&src[..0]);`\n+   | |_____^ help: try replacing the loop by: `dst[..0].copy_from_slice(&src[..0]);`\n \n error: it looks like you're manually copying between slices\n   --> $DIR/without_loop_counters.rs:120:5"}]}