{"sha": "0e2e1795714b50f764bac56e3ce857bbc85568be", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBlMmUxNzk1NzE0YjUwZjc2NGJhYzU2ZTNjZTg1N2JiYzg1NTY4YmU=", "commit": {"author": {"name": "Santiago Pastorino", "email": "spastorino@gmail.com", "date": "2018-04-11T22:11:31Z"}, "committer": {"name": "Santiago Pastorino", "email": "spastorino@gmail.com", "date": "2018-04-11T23:02:14Z"}, "message": "Make prove_predicates take an Iterator", "tree": {"sha": "4e7b732f1d226800cde978a994b08914b219458e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4e7b732f1d226800cde978a994b08914b219458e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0e2e1795714b50f764bac56e3ce857bbc85568be", "comment_count": 0, "verification": {"verified": false, "reason": "unknown_key", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEmNHc6jmXzkUyxd4xiMlBzaHUZDIFAlrOk/YACgkQiMlBzaHU\nZDI9lQ//eMk6sLgJAhart08sRg1nhBjq7nyIckanAgiQhLLfA6DpXF1zjyqtci9t\nW74Xni/i0klu+c7Dq3Ayxii6lNeUCek5ZjVn0xX7ZQRgEMIKZUfO5o6MRJz9rCr/\nLQLwU31wdcOq5XM5Vo9Fv0lYOKqeLDls7TUBEz3W8hFLKgDrenFeiBfYhrH1u0Z9\n4nNJiFpKoLisn98xul3GG5yKtIWRR0aBSlpffNlqpbkBqGSLRR5U4Z62G+mgUUYD\nM9adlgoSfoViLgcN261be97NhbhdgQ1MzCMMAfZIdammAOE54empjqc+i92fynpS\nkkvLCZizaK37XlJEb3tHCIlv/2q4nMfnrCs/D/JgItmt8BIJZ42XLDDBvau3oQ58\nHHR0MD2RiTtsHNfJ2FoDbpUT10fsUNeaYL453+95xfB6RL85WmNIT7L8WdBCPL0j\nDinQyEnOTPs2XB2+icxvEOkWWwZkHfA9nNV256bz8qwEYTMtAtSlpIF+9P2pp/aB\no4C5rh9Ehk0RBVNNijpaT/dGOC1Vu8thtAYq3xAk1/BMkKnYKSw/WT0K29WsjxcX\nnmmPlyEC21l1eJYMURXNn0tt17pTNple2eppZLA9ViDtN8DQyAvZPVQPc1ozDQdV\n+9uvWa3DuuAmKaXmcjeW8Hb/MwDVY4Bmrt0dGLYPa8dUJa3R0HM=\n=FIuT\n-----END PGP SIGNATURE-----", "payload": "tree 4e7b732f1d226800cde978a994b08914b219458e\nparent 9ec7aa256aaf92650a609d7df335014bf9f29bcd\nauthor Santiago Pastorino <spastorino@gmail.com> 1523484691 -0300\ncommitter Santiago Pastorino <spastorino@gmail.com> 1523487734 -0300\n\nMake prove_predicates take an Iterator\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0e2e1795714b50f764bac56e3ce857bbc85568be", "html_url": "https://github.com/rust-lang/rust/commit/0e2e1795714b50f764bac56e3ce857bbc85568be", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0e2e1795714b50f764bac56e3ce857bbc85568be/comments", "author": {"login": "spastorino", "id": 52642, "node_id": "MDQ6VXNlcjUyNjQy", "avatar_url": "https://avatars.githubusercontent.com/u/52642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spastorino", "html_url": "https://github.com/spastorino", "followers_url": "https://api.github.com/users/spastorino/followers", "following_url": "https://api.github.com/users/spastorino/following{/other_user}", "gists_url": "https://api.github.com/users/spastorino/gists{/gist_id}", "starred_url": "https://api.github.com/users/spastorino/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spastorino/subscriptions", "organizations_url": "https://api.github.com/users/spastorino/orgs", "repos_url": "https://api.github.com/users/spastorino/repos", "events_url": "https://api.github.com/users/spastorino/events{/privacy}", "received_events_url": "https://api.github.com/users/spastorino/received_events", "type": "User", "site_admin": false}, "committer": {"login": "spastorino", "id": 52642, "node_id": "MDQ6VXNlcjUyNjQy", "avatar_url": "https://avatars.githubusercontent.com/u/52642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spastorino", "html_url": "https://github.com/spastorino", "followers_url": "https://api.github.com/users/spastorino/followers", "following_url": "https://api.github.com/users/spastorino/following{/other_user}", "gists_url": "https://api.github.com/users/spastorino/gists{/gist_id}", "starred_url": "https://api.github.com/users/spastorino/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spastorino/subscriptions", "organizations_url": "https://api.github.com/users/spastorino/orgs", "repos_url": "https://api.github.com/users/spastorino/repos", "events_url": "https://api.github.com/users/spastorino/events{/privacy}", "received_events_url": "https://api.github.com/users/spastorino/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9ec7aa256aaf92650a609d7df335014bf9f29bcd", "url": "https://api.github.com/repos/rust-lang/rust/commits/9ec7aa256aaf92650a609d7df335014bf9f29bcd", "html_url": "https://github.com/rust-lang/rust/commit/9ec7aa256aaf92650a609d7df335014bf9f29bcd"}], "stats": {"total": 25, "additions": 16, "deletions": 9}, "files": [{"sha": "d68175de9ddc9b346e75c392ea03af09ddc74dcb", "filename": "src/librustc_mir/borrow_check/nll/type_check/mod.rs", "status": "modified", "additions": 16, "deletions": 9, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/0e2e1795714b50f764bac56e3ce857bbc85568be/src%2Flibrustc_mir%2Fborrow_check%2Fnll%2Ftype_check%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0e2e1795714b50f764bac56e3ce857bbc85568be/src%2Flibrustc_mir%2Fborrow_check%2Fnll%2Ftype_check%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Fnll%2Ftype_check%2Fmod.rs?ref=0e2e1795714b50f764bac56e3ce857bbc85568be", "patch": "@@ -275,7 +275,7 @@ impl<'a, 'b, 'gcx, 'tcx> TypeVerifier<'a, 'b, 'gcx, 'tcx> {\n                         tcx.predicates_of(def_id).instantiate(tcx, substs);\n                     let predicates =\n                         type_checker.normalize(&instantiated_predicates.predicates, location);\n-                    type_checker.prove_predicates(&predicates, location);\n+                    type_checker.prove_predicates(predicates.iter().cloned(), location);\n                 }\n \n                 value.ty\n@@ -1511,28 +1511,35 @@ impl<'a, 'gcx, 'tcx> TypeChecker<'a, 'gcx, 'tcx> {\n \n         let predicates = self.normalize(&instantiated_predicates.predicates, location);\n         debug!(\"prove_aggregate_predicates: predicates={:?}\", predicates);\n-        self.prove_predicates(&predicates, location);\n+        self.prove_predicates(predicates.iter().cloned(), location);\n     }\n \n     fn prove_trait_ref(&mut self, trait_ref: ty::TraitRef<'tcx>, location: Location) {\n         self.prove_predicates(\n-            &[ty::Predicate::Trait(\n+            [ty::Predicate::Trait(\n                 trait_ref.to_poly_trait_ref().to_poly_trait_predicate(),\n-            )],\n+            )].iter()\n+                .cloned(),\n             location,\n         );\n     }\n \n-    fn prove_predicates(&mut self, predicates: &[ty::Predicate<'tcx>], location: Location) {\n+    fn prove_predicates(\n+        &mut self,\n+        predicates: impl IntoIterator<Item = ty::Predicate<'tcx>>,\n+        location: Location,\n+    ) {\n+        let mut predicates_iter = predicates.into_iter();\n+\n         debug!(\n             \"prove_predicates(predicates={:?}, location={:?})\",\n-            predicates, location\n+            predicates_iter.by_ref().collect::<Vec<_>>(),\n+            location\n         );\n         self.fully_perform_op(location.at_self(), |this| {\n             let cause = this.misc(this.last_span);\n-            let obligations = predicates\n-                .iter()\n-                .map(|&p| traits::Obligation::new(cause.clone(), this.param_env, p))\n+            let obligations = predicates_iter\n+                .map(|p| traits::Obligation::new(cause.clone(), this.param_env, p))\n                 .collect();\n             Ok(InferOk {\n                 value: (),"}]}