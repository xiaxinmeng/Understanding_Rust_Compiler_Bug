{"sha": "8cbbbaae6c1956d2c070e7f7447a9478adbf0dcd", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhjYmJiYWFlNmMxOTU2ZDJjMDcwZTdmNzQ0N2E5NDc4YWRiZjBkY2Q=", "commit": {"author": {"name": "varkor", "email": "github@varkor.com", "date": "2019-02-20T01:10:11Z"}, "committer": {"name": "varkor", "email": "github@varkor.com", "date": "2019-03-05T22:07:37Z"}, "message": "Add InferConst\n\nCo-Authored-By: Gabriel Smith <yodaldevoid@users.noreply.github.com>", "tree": {"sha": "18414637407d505c08676d03e5600f0febdade50", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/18414637407d505c08676d03e5600f0febdade50"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8cbbbaae6c1956d2c070e7f7447a9478adbf0dcd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8cbbbaae6c1956d2c070e7f7447a9478adbf0dcd", "html_url": "https://github.com/rust-lang/rust/commit/8cbbbaae6c1956d2c070e7f7447a9478adbf0dcd", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8cbbbaae6c1956d2c070e7f7447a9478adbf0dcd/comments", "author": {"login": "varkor", "id": 3943692, "node_id": "MDQ6VXNlcjM5NDM2OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3943692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/varkor", "html_url": "https://github.com/varkor", "followers_url": "https://api.github.com/users/varkor/followers", "following_url": "https://api.github.com/users/varkor/following{/other_user}", "gists_url": "https://api.github.com/users/varkor/gists{/gist_id}", "starred_url": "https://api.github.com/users/varkor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/varkor/subscriptions", "organizations_url": "https://api.github.com/users/varkor/orgs", "repos_url": "https://api.github.com/users/varkor/repos", "events_url": "https://api.github.com/users/varkor/events{/privacy}", "received_events_url": "https://api.github.com/users/varkor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "varkor", "id": 3943692, "node_id": "MDQ6VXNlcjM5NDM2OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3943692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/varkor", "html_url": "https://github.com/varkor", "followers_url": "https://api.github.com/users/varkor/followers", "following_url": "https://api.github.com/users/varkor/following{/other_user}", "gists_url": "https://api.github.com/users/varkor/gists{/gist_id}", "starred_url": "https://api.github.com/users/varkor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/varkor/subscriptions", "organizations_url": "https://api.github.com/users/varkor/orgs", "repos_url": "https://api.github.com/users/varkor/repos", "events_url": "https://api.github.com/users/varkor/events{/privacy}", "received_events_url": "https://api.github.com/users/varkor/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a36d386c6d08b6afbaf8316242218d9644b2ab82", "url": "https://api.github.com/repos/rust-lang/rust/commits/a36d386c6d08b6afbaf8316242218d9644b2ab82", "html_url": "https://github.com/rust-lang/rust/commit/a36d386c6d08b6afbaf8316242218d9644b2ab82"}], "stats": {"total": 11, "additions": 11, "deletions": 0}, "files": [{"sha": "3b58cca38dd1178bab4df2b0cf5468e49c2b994e", "filename": "src/librustc/ty/sty.rs", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/8cbbbaae6c1956d2c070e7f7447a9478adbf0dcd/src%2Flibrustc%2Fty%2Fsty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8cbbbaae6c1956d2c070e7f7447a9478adbf0dcd/src%2Flibrustc%2Fty%2Fsty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Fsty.rs?ref=8cbbbaae6c1956d2c070e7f7447a9478adbf0dcd", "patch": "@@ -2228,3 +2228,14 @@ impl<'tcx> Const<'tcx> {\n }\n \n impl<'tcx> serialize::UseSpecializedDecodable for &'tcx LazyConst<'tcx> {}\n+\n+/// An inference variable for a const, for use in const generics.\n+#[derive(Copy, Clone, Debug, Eq, PartialEq, PartialOrd, Ord, RustcEncodable, RustcDecodable, Hash)]\n+pub enum InferConst<'tcx> {\n+    /// Infer the value of the const.\n+    Var(ConstVid<'tcx>),\n+    /// A fresh const variable. See `infer::freshen` for more details.\n+    Fresh(u32),\n+    /// Canonicalized const variable, used only when preparing a trait query.\n+    Canonical(DebruijnIndex, BoundVar),\n+}"}]}