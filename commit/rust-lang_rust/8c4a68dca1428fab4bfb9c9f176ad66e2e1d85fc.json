{"sha": "8c4a68dca1428fab4bfb9c9f176ad66e2e1d85fc", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhjNGE2OGRjYTE0MjhmYWI0YmZiOWM5ZjE3NmFkNjZlMmUxZDg1ZmM=", "commit": {"author": {"name": "Pirh", "email": "pirh.badger@gmail.com", "date": "2017-10-13T17:18:09Z"}, "committer": {"name": "Pirh", "email": "pirh.badger@gmail.com", "date": "2017-10-13T17:18:09Z"}, "message": "Add line break after summary of process::Output", "tree": {"sha": "36fbc77c69ef58b6d900fbcf228a7d3efcf4ad07", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/36fbc77c69ef58b6d900fbcf228a7d3efcf4ad07"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8c4a68dca1428fab4bfb9c9f176ad66e2e1d85fc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8c4a68dca1428fab4bfb9c9f176ad66e2e1d85fc", "html_url": "https://github.com/rust-lang/rust/commit/8c4a68dca1428fab4bfb9c9f176ad66e2e1d85fc", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8c4a68dca1428fab4bfb9c9f176ad66e2e1d85fc/comments", "author": null, "committer": null, "parents": [{"sha": "32c4b714715338e82711e3611681aada3f28cf39", "url": "https://api.github.com/repos/rust-lang/rust/commits/32c4b714715338e82711e3611681aada3f28cf39", "html_url": "https://github.com/rust-lang/rust/commit/32c4b714715338e82711e3611681aada3f28cf39"}], "stats": {"total": 8, "additions": 5, "deletions": 3}, "files": [{"sha": "8287c43ba969ae22d6f5f4e169c7b067e83998ef", "filename": "src/libstd/process.rs", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/8c4a68dca1428fab4bfb9c9f176ad66e2e1d85fc/src%2Flibstd%2Fprocess.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8c4a68dca1428fab4bfb9c9f176ad66e2e1d85fc/src%2Flibstd%2Fprocess.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fprocess.rs?ref=8c4a68dca1428fab4bfb9c9f176ad66e2e1d85fc", "patch": "@@ -701,9 +701,11 @@ impl AsInnerMut<imp::Command> for Command {\n     fn as_inner_mut(&mut self) -> &mut imp::Command { &mut self.inner }\n }\n \n-/// The output of a finished process. This is returned in a Result by\n-/// either the [`output`] method of a [`Command`], or the\n-/// [`wait_with_output`] method of a [`Child`] process.\n+/// The output of a finished process.\n+///\n+/// This is returned in a Result by either the [`output`] method of a\n+/// [`Command`], or the [`wait_with_output`] method of a [`Child`]\n+/// process.\n ///\n /// [`Command`]: struct.Command.html\n /// [`Child`]: struct.Child.html"}]}