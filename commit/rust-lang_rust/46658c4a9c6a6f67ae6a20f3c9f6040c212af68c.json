{"sha": "46658c4a9c6a6f67ae6a20f3c9f6040c212af68c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ2NjU4YzRhOWM2YTZmNjdhZTZhMjBmM2M5ZjYwNDBjMjEyYWY2OGM=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2011-08-15T22:36:05Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2011-08-16T17:29:09Z"}, "message": "Revert \"Revert \"Make [] and ~[] both construct ivecs\"\"\n\nThis reverts commit 28bf19021981bd41a365aaa684c71afd2cf079d7.\n\nShould work now that tests are all using ivecs", "tree": {"sha": "0bed61a7b7b7422a22ad7ef6205216680f3fc0b8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0bed61a7b7b7422a22ad7ef6205216680f3fc0b8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/46658c4a9c6a6f67ae6a20f3c9f6040c212af68c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/46658c4a9c6a6f67ae6a20f3c9f6040c212af68c", "html_url": "https://github.com/rust-lang/rust/commit/46658c4a9c6a6f67ae6a20f3c9f6040c212af68c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/46658c4a9c6a6f67ae6a20f3c9f6040c212af68c/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f32079f7c0f7bb2b5b2c90c7564e3ba87d0fc5af", "url": "https://api.github.com/repos/rust-lang/rust/commits/f32079f7c0f7bb2b5b2c90c7564e3ba87d0fc5af", "html_url": "https://github.com/rust-lang/rust/commit/f32079f7c0f7bb2b5b2c90c7564e3ba87d0fc5af"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "4569fe7d48582579a0c14484efac2b209b5052e4", "filename": "src/comp/syntax/parse/parser.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/46658c4a9c6a6f67ae6a20f3c9f6040c212af68c/src%2Fcomp%2Fsyntax%2Fparse%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/46658c4a9c6a6f67ae6a20f3c9f6040c212af68c/src%2Fcomp%2Fsyntax%2Fparse%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fsyntax%2Fparse%2Fparser.rs?ref=46658c4a9c6a6f67ae6a20f3c9f6040c212af68c", "patch": "@@ -842,7 +842,7 @@ fn parse_bottom_expr(p: &parser) -> @ast::expr {\n         let es =\n             parse_seq_to_end(token::RBRACKET, some(token::COMMA), parse_expr,\n                              p);\n-        ex = ast::expr_vec(es, mut, ast::sk_rc);\n+        ex = ast::expr_vec(es, mut, ast::sk_unique);\n     } else if (p.peek() == token::POUND_LT) {\n         p.bump();\n         let ty = parse_ty(p, false);"}]}