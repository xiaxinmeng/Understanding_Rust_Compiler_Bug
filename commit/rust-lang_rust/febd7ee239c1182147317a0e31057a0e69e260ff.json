{"sha": "febd7ee239c1182147317a0e31057a0e69e260ff", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZlYmQ3ZWUyMzljMTE4MjE0NzMxN2EwZTMxMDU3YTBlNjllMjYwZmY=", "commit": {"author": {"name": "Tim Chevalier", "email": "chevalier@alum.wellesley.edu", "date": "2012-08-08T22:36:38Z"}, "committer": {"name": "Tim Chevalier", "email": "chevalier@alum.wellesley.edu", "date": "2012-08-08T22:37:45Z"}, "message": "Make let _ = e; have the same semantics as e;\n\nThe first case was getting treated like a variable binding, meaning that\nif e had a destructor, it wouldn't run until the end of the enclosing scope.\nTo me it seems less confusing for let _ = e; and e; to work exactly the same\nway, so now, the destructor for e runs immediately in both cases.", "tree": {"sha": "d8219a413d16f712a7c88ba39e519a6af96e8821", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d8219a413d16f712a7c88ba39e519a6af96e8821"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/febd7ee239c1182147317a0e31057a0e69e260ff", "comment_count": 2, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/febd7ee239c1182147317a0e31057a0e69e260ff", "html_url": "https://github.com/rust-lang/rust/commit/febd7ee239c1182147317a0e31057a0e69e260ff", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/febd7ee239c1182147317a0e31057a0e69e260ff/comments", "author": {"login": "catamorphism", "id": 427212, "node_id": "MDQ6VXNlcjQyNzIxMg==", "avatar_url": "https://avatars.githubusercontent.com/u/427212?v=4", "gravatar_id": "", "url": "https://api.github.com/users/catamorphism", "html_url": "https://github.com/catamorphism", "followers_url": "https://api.github.com/users/catamorphism/followers", "following_url": "https://api.github.com/users/catamorphism/following{/other_user}", "gists_url": "https://api.github.com/users/catamorphism/gists{/gist_id}", "starred_url": "https://api.github.com/users/catamorphism/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/catamorphism/subscriptions", "organizations_url": "https://api.github.com/users/catamorphism/orgs", "repos_url": "https://api.github.com/users/catamorphism/repos", "events_url": "https://api.github.com/users/catamorphism/events{/privacy}", "received_events_url": "https://api.github.com/users/catamorphism/received_events", "type": "User", "site_admin": false}, "committer": {"login": "catamorphism", "id": 427212, "node_id": "MDQ6VXNlcjQyNzIxMg==", "avatar_url": "https://avatars.githubusercontent.com/u/427212?v=4", "gravatar_id": "", "url": "https://api.github.com/users/catamorphism", "html_url": "https://github.com/catamorphism", "followers_url": "https://api.github.com/users/catamorphism/followers", "following_url": "https://api.github.com/users/catamorphism/following{/other_user}", "gists_url": "https://api.github.com/users/catamorphism/gists{/gist_id}", "starred_url": "https://api.github.com/users/catamorphism/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/catamorphism/subscriptions", "organizations_url": "https://api.github.com/users/catamorphism/orgs", "repos_url": "https://api.github.com/users/catamorphism/repos", "events_url": "https://api.github.com/users/catamorphism/events{/privacy}", "received_events_url": "https://api.github.com/users/catamorphism/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d99ca69cf7207e31d7ddffe849a4235cc63899d7", "url": "https://api.github.com/repos/rust-lang/rust/commits/d99ca69cf7207e31d7ddffe849a4235cc63899d7", "html_url": "https://github.com/rust-lang/rust/commit/d99ca69cf7207e31d7ddffe849a4235cc63899d7"}], "stats": {"total": 45, "additions": 45, "deletions": 0}, "files": [{"sha": "1c668d30e99a6516ed1de1f25d7b93cc4f30d2a3", "filename": "src/rustc/middle/trans/base.rs", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/febd7ee239c1182147317a0e31057a0e69e260ff/src%2Frustc%2Fmiddle%2Ftrans%2Fbase.rs", "raw_url": "https://github.com/rust-lang/rust/raw/febd7ee239c1182147317a0e31057a0e69e260ff/src%2Frustc%2Fmiddle%2Ftrans%2Fbase.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustc%2Fmiddle%2Ftrans%2Fbase.rs?ref=febd7ee239c1182147317a0e31057a0e69e260ff", "patch": "@@ -4206,9 +4206,26 @@ fn build_return(bcx: block) {\n     Br(bcx, bcx.fcx.llreturn);\n }\n \n+fn ignore_lhs(_bcx: block, local: @ast::local) -> bool {\n+    match local.node.pat.node {\n+        ast::pat_wild => true, _ => false\n+    }\n+}\n+\n fn init_local(bcx: block, local: @ast::local) -> block {\n     let _icx = bcx.insn_ctxt(~\"init_local\");\n     let ty = node_id_type(bcx, local.node.id);\n+\n+    if ignore_lhs(bcx, local) {\n+        // Handle let _ = e; just like e;\n+        match local.node.init {\n+            some(init) => {\n+              return trans_expr(bcx, init.expr, ignore);\n+            }\n+            none => { return bcx; }\n+        }\n+    }\n+\n     let llptr = match bcx.fcx.lllocals.find(local.node.id) {\n       some(local_mem(v)) => v,\n       _ => { bcx.tcx().sess.span_bug(local.span,"}, {"sha": "aa9537c7259cf8108b607c716e4dade05f735b97", "filename": "src/test/run-pass/issue-2735-2.rs", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/febd7ee239c1182147317a0e31057a0e69e260ff/src%2Ftest%2Frun-pass%2Fissue-2735-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/febd7ee239c1182147317a0e31057a0e69e260ff/src%2Ftest%2Frun-pass%2Fissue-2735-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-2735-2.rs?ref=febd7ee239c1182147317a0e31057a0e69e260ff", "patch": "@@ -0,0 +1,14 @@\n+// This test should behave exactly like issue-2735-3\n+class defer {\n+    let b: &mut bool;\n+    new(b: &mut bool) {\n+        self.b = b;\n+    }   \n+    drop { *(self.b) = true; }\n+}\n+\n+fn main() {\n+    let mut dtor_ran = false;\n+    let _  = defer(&mut dtor_ran);\n+    assert(dtor_ran);\n+}"}, {"sha": "876158d08b24d806f2b471e713efc92113cf6e73", "filename": "src/test/run-pass/issue-2735-3.rs", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/febd7ee239c1182147317a0e31057a0e69e260ff/src%2Ftest%2Frun-pass%2Fissue-2735-3.rs", "raw_url": "https://github.com/rust-lang/rust/raw/febd7ee239c1182147317a0e31057a0e69e260ff/src%2Ftest%2Frun-pass%2Fissue-2735-3.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-2735-3.rs?ref=febd7ee239c1182147317a0e31057a0e69e260ff", "patch": "@@ -0,0 +1,14 @@\n+// This test should behave exactly like issue-2735-2\n+class defer {\n+    let b: &mut bool;\n+    new(b: &mut bool) {\n+        self.b = b;\n+    }   \n+    drop { *(self.b) = true; }\n+}\n+\n+fn main() {\n+    let mut dtor_ran = false;\n+    defer(&mut dtor_ran);\n+    assert(dtor_ran);\n+}"}]}