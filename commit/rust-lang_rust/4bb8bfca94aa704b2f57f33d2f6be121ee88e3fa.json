{"sha": "4bb8bfca94aa704b2f57f33d2f6be121ee88e3fa", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRiYjhiZmNhOTRhYTcwNGIyZjU3ZjMzZDJmNmJlMTIxZWU4OGUzZmE=", "commit": {"author": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2019-02-11T18:11:55Z"}, "committer": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2019-02-11T18:11:55Z"}, "message": "Disable macOS debuginfo and on all platforms optimizations", "tree": {"sha": "eb2000d4c580f6e8549fd89da1ffd82083197735", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/eb2000d4c580f6e8549fd89da1ffd82083197735"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4bb8bfca94aa704b2f57f33d2f6be121ee88e3fa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4bb8bfca94aa704b2f57f33d2f6be121ee88e3fa", "html_url": "https://github.com/rust-lang/rust/commit/4bb8bfca94aa704b2f57f33d2f6be121ee88e3fa", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4bb8bfca94aa704b2f57f33d2f6be121ee88e3fa/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5b3867430ff4490830a8cd735af93a92984a54ea", "url": "https://api.github.com/repos/rust-lang/rust/commits/5b3867430ff4490830a8cd735af93a92984a54ea", "html_url": "https://github.com/rust-lang/rust/commit/5b3867430ff4490830a8cd735af93a92984a54ea"}], "stats": {"total": 9, "additions": 6, "deletions": 3}, "files": [{"sha": "5863f730bcace6432b299eb4fa8866833c8abc21", "filename": "src/lib.rs", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/4bb8bfca94aa704b2f57f33d2f6be121ee88e3fa/src%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4bb8bfca94aa704b2f57f33d2f6be121ee88e3fa/src%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flib.rs?ref=4bb8bfca94aa704b2f57f33d2f6be121ee88e3fa", "patch": "@@ -296,7 +296,9 @@ impl CodegenBackend for CraneliftCodegenBackend {\n \n             let mut faerie_module = new_module(\"some_file\".to_string());\n \n-            let mut debug = if tcx.sess.opts.debuginfo != DebugInfo::None {\n+            let mut debug = if tcx.sess.opts.debuginfo != DebugInfo::None\n+                && !tcx.sess.target.target.options.is_like_osx // macOS debuginfo doesn't work yet (see #303)\n+            {\n                 let debug = DebugContext::new(tcx, faerie_module.target_config().pointer_type().bytes() as u8);\n                 Some(debug)\n             } else {\n@@ -372,7 +374,8 @@ fn build_isa(sess: &Session) -> Box<isa::TargetIsa + 'static> {\n         \"false\"\n     }).unwrap();\n \n-    match sess.opts.optimize {\n+    // FIXME enable again when https://github.com/CraneStation/cranelift/issues/664 is fixed\n+    /*match sess.opts.optimize {\n         OptLevel::No => {\n             flags_builder.set(\"opt_level\", \"fastest\").unwrap();\n         }\n@@ -383,7 +386,7 @@ fn build_isa(sess: &Session) -> Box<isa::TargetIsa + 'static> {\n         OptLevel::Size | OptLevel::SizeMin => {\n             sess.warn(\"Optimizing for size is not supported. Just ignoring the request\");\n         }\n-    }\n+    }*/\n \n     let flags = settings::Flags::new(flags_builder);\n     cranelift::codegen::isa::lookup(sess.target.target.llvm_target.parse().unwrap())"}]}