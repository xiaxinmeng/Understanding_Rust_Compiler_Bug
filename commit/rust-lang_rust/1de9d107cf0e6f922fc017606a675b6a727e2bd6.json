{"sha": "1de9d107cf0e6f922fc017606a675b6a727e2bd6", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFkZTlkMTA3Y2YwZTZmOTIyZmMwMTc2MDZhNjc1YjZhNzI3ZTJiZDY=", "commit": {"author": {"name": "David Cook", "email": "divergentdave@gmail.com", "date": "2020-01-31T00:31:34Z"}, "committer": {"name": "David Cook", "email": "divergentdave@gmail.com", "date": "2020-02-18T04:24:33Z"}, "message": "Style fixes", "tree": {"sha": "ab5ce7636ba43a88a4206b14b899ae1ebbce9556", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ab5ce7636ba43a88a4206b14b899ae1ebbce9556"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1de9d107cf0e6f922fc017606a675b6a727e2bd6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1de9d107cf0e6f922fc017606a675b6a727e2bd6", "html_url": "https://github.com/rust-lang/rust/commit/1de9d107cf0e6f922fc017606a675b6a727e2bd6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1de9d107cf0e6f922fc017606a675b6a727e2bd6/comments", "author": {"login": "divergentdave", "id": 181772, "node_id": "MDQ6VXNlcjE4MTc3Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/181772?v=4", "gravatar_id": "", "url": "https://api.github.com/users/divergentdave", "html_url": "https://github.com/divergentdave", "followers_url": "https://api.github.com/users/divergentdave/followers", "following_url": "https://api.github.com/users/divergentdave/following{/other_user}", "gists_url": "https://api.github.com/users/divergentdave/gists{/gist_id}", "starred_url": "https://api.github.com/users/divergentdave/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/divergentdave/subscriptions", "organizations_url": "https://api.github.com/users/divergentdave/orgs", "repos_url": "https://api.github.com/users/divergentdave/repos", "events_url": "https://api.github.com/users/divergentdave/events{/privacy}", "received_events_url": "https://api.github.com/users/divergentdave/received_events", "type": "User", "site_admin": false}, "committer": {"login": "divergentdave", "id": 181772, "node_id": "MDQ6VXNlcjE4MTc3Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/181772?v=4", "gravatar_id": "", "url": "https://api.github.com/users/divergentdave", "html_url": "https://github.com/divergentdave", "followers_url": "https://api.github.com/users/divergentdave/followers", "following_url": "https://api.github.com/users/divergentdave/following{/other_user}", "gists_url": "https://api.github.com/users/divergentdave/gists{/gist_id}", "starred_url": "https://api.github.com/users/divergentdave/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/divergentdave/subscriptions", "organizations_url": "https://api.github.com/users/divergentdave/orgs", "repos_url": "https://api.github.com/users/divergentdave/repos", "events_url": "https://api.github.com/users/divergentdave/events{/privacy}", "received_events_url": "https://api.github.com/users/divergentdave/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3aff8038685e60c453182ec169babedeab19c606", "url": "https://api.github.com/repos/rust-lang/rust/commits/3aff8038685e60c453182ec169babedeab19c606", "html_url": "https://github.com/rust-lang/rust/commit/3aff8038685e60c453182ec169babedeab19c606"}], "stats": {"total": 9, "additions": 4, "deletions": 5}, "files": [{"sha": "d17ef79f0eed3c8423129a9736f7f58d2e2315e8", "filename": "src/shims/fs.rs", "status": "modified", "additions": 4, "deletions": 5, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/1de9d107cf0e6f922fc017606a675b6a727e2bd6/src%2Fshims%2Ffs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1de9d107cf0e6f922fc017606a675b6a727e2bd6/src%2Fshims%2Ffs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fshims%2Ffs.rs?ref=1de9d107cf0e6f922fc017606a675b6a727e2bd6", "patch": "@@ -142,12 +142,11 @@ pub trait EvalContextExt<'mir, 'tcx: 'mir>: crate::MiriEvalContextExt<'mir, 'tcx\n         } else if cmd == this.eval_libc_i32(\"F_DUPFD\")? || cmd == this.eval_libc_i32(\"F_DUPFD_CLOEXEC\")? {\n             // Note that we always assume the FD_CLOEXEC flag is set for every open file, in part\n             // because exec() isn't supported. The F_DUPFD and F_DUPFD_CLOEXEC commands only\n-            // differ in whether the FD_CLOEXEC flag is pre-set on the duplicated file descriptor,\n+            // differ in whether the FD_CLOEXEC flag is pre-set on the new file descriptor,\n             // thus they can share the same implementation here.\n-            let arg = match arg_op {\n-                Some(arg_op) => this.read_scalar(arg_op)?.to_i32()?,\n-                None => throw_unsup_format!(\"fcntl with command F_DUPFD or F_DUPFD_CLOEXEC requires a third argument\"),\n-            };\n+            let arg_op = arg_op\n+                .ok_or_else(|| err_unsup_format!(\"fcntl with command F_DUPFD or F_DUPFD_CLOEXEC requires a third argument\"))?;\n+            let arg = this.read_scalar(arg_op)?.to_i32()?;\n             let fh = &mut this.machine.file_handler;\n             let (file_result, writable) = match fh.handles.get(&fd) {\n                 Some(original) => (original.file.try_clone(), original.writable),"}]}