{"sha": "07cf2a90059f46bc00586eebd0737e7432b83734", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA3Y2YyYTkwMDU5ZjQ2YmMwMDU4NmVlYmQwNzM3ZTc0MzJiODM3MzQ=", "commit": {"author": {"name": "Mark Simulacrum", "email": "mark.simulacrum@gmail.com", "date": "2016-12-20T02:57:39Z"}, "committer": {"name": "Mark Simulacrum", "email": "mark.simulacrum@gmail.com", "date": "2016-12-21T03:04:45Z"}, "message": "Simplify callee by removing is_indirect branch.", "tree": {"sha": "eee90704f142dca3f17a268d69173eea0355b48d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/eee90704f142dca3f17a268d69173eea0355b48d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/07cf2a90059f46bc00586eebd0737e7432b83734", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/07cf2a90059f46bc00586eebd0737e7432b83734", "html_url": "https://github.com/rust-lang/rust/commit/07cf2a90059f46bc00586eebd0737e7432b83734", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/07cf2a90059f46bc00586eebd0737e7432b83734/comments", "author": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "57914f626b32d924ad183e250459ce278dd0b20b", "url": "https://api.github.com/repos/rust-lang/rust/commits/57914f626b32d924ad183e250459ce278dd0b20b", "html_url": "https://github.com/rust-lang/rust/commit/57914f626b32d924ad183e250459ce278dd0b20b"}], "stats": {"total": 19, "additions": 6, "deletions": 13}, "files": [{"sha": "ac832b6f746fd7262a037623af2e99e97800da46", "filename": "src/librustc_trans/callee.rs", "status": "modified", "additions": 6, "deletions": 13, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/07cf2a90059f46bc00586eebd0737e7432b83734/src%2Flibrustc_trans%2Fcallee.rs", "raw_url": "https://github.com/rust-lang/rust/raw/07cf2a90059f46bc00586eebd0737e7432b83734/src%2Flibrustc_trans%2Fcallee.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Fcallee.rs?ref=07cf2a90059f46bc00586eebd0737e7432b83734", "patch": "@@ -16,7 +16,7 @@\n \n pub use self::CalleeData::*;\n \n-use llvm::{self, ValueRef, get_param, get_params};\n+use llvm::{self, ValueRef, get_params};\n use rustc::hir::def_id::DefId;\n use rustc::ty::subst::Substs;\n use rustc::traits;\n@@ -342,13 +342,13 @@ fn trans_fn_once_adapter_shim<'a, 'tcx>(\n     let mut llargs = get_params(fcx.llfn);\n     let fn_ret = callee.ty.fn_ret();\n     let fn_ty = callee.direct_fn_type(bcx.ccx, &[]);\n-    let idx = fn_ty.ret.is_indirect() as usize;\n+    let self_idx = fn_ty.ret.is_indirect() as usize;\n     let env_arg = &orig_fn_ty.args[0];\n     let llenv = if env_arg.is_indirect() {\n-        llargs[idx]\n+        llargs[self_idx]\n     } else {\n         let scratch = alloc_ty(&bcx, closure_ty, \"self\");\n-        let mut llarg_idx = idx;\n+        let mut llarg_idx = self_idx;\n         env_arg.store_fn_arg(&bcx, &mut llarg_idx, scratch);\n         scratch\n     };\n@@ -357,22 +357,15 @@ fn trans_fn_once_adapter_shim<'a, 'tcx>(\n     // Adjust llargs such that llargs[self_idx..] has the call arguments.\n     // For zero-sized closures that means sneaking in a new argument.\n     if env_arg.is_ignore() {\n-        if fn_ty.ret.is_indirect() {\n-            llargs[0] = llenv;\n-        } else {\n-            llargs.insert(0, llenv);\n-        }\n+        llargs.insert(self_idx, llenv);\n     } else {\n-        llargs[idx] = llenv;\n+        llargs[self_idx] = llenv;\n     }\n \n     // Call the by-ref closure body with `self` in a cleanup scope,\n     // to drop `self` when the body returns, or in case it unwinds.\n     let self_scope = fcx.schedule_drop_mem(llenv, closure_ty);\n \n-    if fn_ty.ret.is_indirect() {\n-        llargs.insert(0, get_param(fcx.llfn, 0));\n-    }\n     let llfn = callee.reify(bcx.ccx);\n     let llret;\n     if let Some(landing_pad) = self_scope.landing_pad {"}]}