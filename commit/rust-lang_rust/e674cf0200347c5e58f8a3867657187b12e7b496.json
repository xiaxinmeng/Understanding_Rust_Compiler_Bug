{"sha": "e674cf0200347c5e58f8a3867657187b12e7b496", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU2NzRjZjAyMDAzNDdjNWU1OGY4YTM4Njc2NTcxODdiMTJlN2I0OTY=", "commit": {"author": {"name": "Matthew Jasper", "email": "mjjasper1@gmail.com", "date": "2020-08-14T20:51:28Z"}, "committer": {"name": "Matthew Jasper", "email": "mjjasper1@gmail.com", "date": "2020-10-06T10:19:32Z"}, "message": "Normalize super trait bounds when confirming object candidates", "tree": {"sha": "6e5cf10ce84c56e13349cc2024b82eebcc1f87eb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6e5cf10ce84c56e13349cc2024b82eebcc1f87eb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e674cf0200347c5e58f8a3867657187b12e7b496", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e674cf0200347c5e58f8a3867657187b12e7b496", "html_url": "https://github.com/rust-lang/rust/commit/e674cf0200347c5e58f8a3867657187b12e7b496", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e674cf0200347c5e58f8a3867657187b12e7b496/comments", "author": {"login": "matthewjasper", "id": 20113453, "node_id": "MDQ6VXNlcjIwMTEzNDUz", "avatar_url": "https://avatars.githubusercontent.com/u/20113453?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthewjasper", "html_url": "https://github.com/matthewjasper", "followers_url": "https://api.github.com/users/matthewjasper/followers", "following_url": "https://api.github.com/users/matthewjasper/following{/other_user}", "gists_url": "https://api.github.com/users/matthewjasper/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthewjasper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthewjasper/subscriptions", "organizations_url": "https://api.github.com/users/matthewjasper/orgs", "repos_url": "https://api.github.com/users/matthewjasper/repos", "events_url": "https://api.github.com/users/matthewjasper/events{/privacy}", "received_events_url": "https://api.github.com/users/matthewjasper/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matthewjasper", "id": 20113453, "node_id": "MDQ6VXNlcjIwMTEzNDUz", "avatar_url": "https://avatars.githubusercontent.com/u/20113453?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthewjasper", "html_url": "https://github.com/matthewjasper", "followers_url": "https://api.github.com/users/matthewjasper/followers", "following_url": "https://api.github.com/users/matthewjasper/following{/other_user}", "gists_url": "https://api.github.com/users/matthewjasper/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthewjasper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthewjasper/subscriptions", "organizations_url": "https://api.github.com/users/matthewjasper/orgs", "repos_url": "https://api.github.com/users/matthewjasper/repos", "events_url": "https://api.github.com/users/matthewjasper/events{/privacy}", "received_events_url": "https://api.github.com/users/matthewjasper/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d08ab945de8ede93366c6ffc12ed58068a73b4a0", "url": "https://api.github.com/repos/rust-lang/rust/commits/d08ab945de8ede93366c6ffc12ed58068a73b4a0", "html_url": "https://github.com/rust-lang/rust/commit/d08ab945de8ede93366c6ffc12ed58068a73b4a0"}], "stats": {"total": 55, "additions": 46, "deletions": 9}, "files": [{"sha": "8c58d4191c5af6902a3cdd7eb704166a7f5a3b9f", "filename": "compiler/rustc_trait_selection/src/traits/select/confirmation.rs", "status": "modified", "additions": 20, "deletions": 9, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/e674cf0200347c5e58f8a3867657187b12e7b496/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fselect%2Fconfirmation.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e674cf0200347c5e58f8a3867657187b12e7b496/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fselect%2Fconfirmation.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fselect%2Fconfirmation.rs?ref=e674cf0200347c5e58f8a3867657187b12e7b496", "patch": "@@ -440,15 +440,26 @@ impl<'cx, 'tcx> SelectionContext<'cx, 'tcx> {\n         let upcast_trait_ref = upcast_trait_ref.unwrap();\n \n         // Check supertraits hold\n-        nested.extend(\n-            tcx.super_predicates_of(trait_predicate.def_id())\n-                .instantiate(tcx, trait_predicate.trait_ref.substs)\n-                .predicates\n-                .into_iter()\n-                .map(|super_trait| {\n-                    Obligation::new(obligation.cause.clone(), obligation.param_env, super_trait)\n-                }),\n-        );\n+        for super_trait in tcx\n+            .super_predicates_of(trait_predicate.def_id())\n+            .instantiate(tcx, trait_predicate.trait_ref.substs)\n+            .predicates\n+            .into_iter()\n+        {\n+            let normalized_super_trait = normalize_with_depth_to(\n+                self,\n+                obligation.param_env,\n+                obligation.cause.clone(),\n+                obligation.recursion_depth + 1,\n+                &super_trait,\n+                &mut nested,\n+            );\n+            nested.push(Obligation::new(\n+                obligation.cause.clone(),\n+                obligation.param_env.clone(),\n+                normalized_super_trait,\n+            ));\n+        }\n \n         let assoc_types: Vec<_> = tcx\n             .associated_items(trait_predicate.def_id())"}, {"sha": "1f93248e10ec475416d45034720c235ab8fec85c", "filename": "src/test/ui/associated-types/object-normalization.rs", "status": "added", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/e674cf0200347c5e58f8a3867657187b12e7b496/src%2Ftest%2Fui%2Fassociated-types%2Fobject-normalization.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e674cf0200347c5e58f8a3867657187b12e7b496/src%2Ftest%2Fui%2Fassociated-types%2Fobject-normalization.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fassociated-types%2Fobject-normalization.rs?ref=e674cf0200347c5e58f8a3867657187b12e7b496", "patch": "@@ -0,0 +1,26 @@\n+// ignore-tidy-linelength\n+\n+// Check that we normalize super predicates for object candidates.\n+\n+// check-pass\n+\n+use std::ops::Index;\n+\n+fn next<'a, T>(s: &'a mut dyn SVec<Item = T, Output = T>) {\n+    // To prove\n+    // `dyn SVec<Item = T, Output = T>: SVec`\n+    // we need to show\n+    // `dyn SVec<Item = T, Output = T> as Index>::Output == <dyn SVec<Item = T, Output = T> as SVec>::Item`\n+    // which, with the current normalization strategy, has to be eagerly\n+    // normalized to:\n+    // `dyn SVec<Item = T, Output = T> as Index>::Output == T`.\n+    let _ = s.len();\n+}\n+\n+trait SVec: Index<usize, Output = <Self as SVec>::Item> {\n+    type Item;\n+\n+    fn len(&self) -> usize;\n+}\n+\n+fn main() {}"}]}