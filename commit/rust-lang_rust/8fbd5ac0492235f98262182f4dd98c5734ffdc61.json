{"sha": "8fbd5ac0492235f98262182f4dd98c5734ffdc61", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhmYmQ1YWMwNDkyMjM1Zjk4MjYyMTgyZjRkZDk4YzU3MzRmZmRjNjE=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-06-03T06:42:20Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-06-03T06:42:20Z"}, "message": "core: Add str::is_alphanumeric fn and method", "tree": {"sha": "df73157cce54034e555c16532acd82fc9beb776b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/df73157cce54034e555c16532acd82fc9beb776b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8fbd5ac0492235f98262182f4dd98c5734ffdc61", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8fbd5ac0492235f98262182f4dd98c5734ffdc61", "html_url": "https://github.com/rust-lang/rust/commit/8fbd5ac0492235f98262182f4dd98c5734ffdc61", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8fbd5ac0492235f98262182f4dd98c5734ffdc61/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "07461908268c9901dcd7a6ded109733fac4c86c6", "url": "https://api.github.com/repos/rust-lang/rust/commits/07461908268c9901dcd7a6ded109733fac4c86c6", "html_url": "https://github.com/rust-lang/rust/commit/07461908268c9901dcd7a6ded109733fac4c86c6"}], "stats": {"total": 16, "additions": 16, "deletions": 0}, "files": [{"sha": "7bcad0817419e6f466a7e0a7e8eb4a6823ca7dc4", "filename": "src/libcore/str.rs", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/8fbd5ac0492235f98262182f4dd98c5734ffdc61/src%2Flibcore%2Fstr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8fbd5ac0492235f98262182f4dd98c5734ffdc61/src%2Flibcore%2Fstr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fstr.rs?ref=8fbd5ac0492235f98262182f4dd98c5734ffdc61", "patch": "@@ -1169,6 +1169,15 @@ fn is_whitespace(s: str) -> bool {\n     ret all(s, char::is_whitespace);\n }\n \n+#[doc = \"\n+Returns true if the string contains only alphanumerics\n+\n+Alphanumeric characters are determined by `char::is_alphanumeric`\n+\"]\n+fn is_alphanumeric(s: str) -> bool {\n+    ret all(s, char::is_alphanumeric);\n+}\n+\n #[doc = \"\n Returns the string length/size in bytes not counting the null terminator\n \"]\n@@ -1833,6 +1842,13 @@ impl extensions for str {\n     \"]\n     #[inline]\n     fn is_whitespace() -> bool { is_whitespace(self) }\n+    #[doc = \"\n+    Returns true if the string contains only alphanumerics\n+\n+    Alphanumeric characters are determined by `char::is_alphanumeric`\n+    \"]\n+    #[inlune]\n+    fn is_alphanumeric() -> bool { is_alphanumeric(self) }\n     #[inline]\n     #[doc =\"Returns the size in bytes not counting the null terminator\"]\n     fn len() -> uint { len(self) }"}]}