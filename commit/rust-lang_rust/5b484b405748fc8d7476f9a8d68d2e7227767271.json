{"sha": "5b484b405748fc8d7476f9a8d68d2e7227767271", "node_id": "MDY6Q29tbWl0NzI0NzEyOjViNDg0YjQwNTc0OGZjOGQ3NDc2ZjlhOGQ2OGQyZTcyMjc3NjcyNzE=", "commit": {"author": {"name": "Takayuki Nakata", "email": "f.seasons017@gmail.com", "date": "2020-09-25T14:32:18Z"}, "committer": {"name": "Takayuki Nakata", "email": "f.seasons017@gmail.com", "date": "2020-09-25T14:32:18Z"}, "message": "Fix the detection of build scripts", "tree": {"sha": "3f6a0836ae4aed10623e4a21f8207d13f633c380", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3f6a0836ae4aed10623e4a21f8207d13f633c380"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5b484b405748fc8d7476f9a8d68d2e7227767271", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5b484b405748fc8d7476f9a8d68d2e7227767271", "html_url": "https://github.com/rust-lang/rust/commit/5b484b405748fc8d7476f9a8d68d2e7227767271", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5b484b405748fc8d7476f9a8d68d2e7227767271/comments", "author": {"login": "giraffate", "id": 17407489, "node_id": "MDQ6VXNlcjE3NDA3NDg5", "avatar_url": "https://avatars.githubusercontent.com/u/17407489?v=4", "gravatar_id": "", "url": "https://api.github.com/users/giraffate", "html_url": "https://github.com/giraffate", "followers_url": "https://api.github.com/users/giraffate/followers", "following_url": "https://api.github.com/users/giraffate/following{/other_user}", "gists_url": "https://api.github.com/users/giraffate/gists{/gist_id}", "starred_url": "https://api.github.com/users/giraffate/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/giraffate/subscriptions", "organizations_url": "https://api.github.com/users/giraffate/orgs", "repos_url": "https://api.github.com/users/giraffate/repos", "events_url": "https://api.github.com/users/giraffate/events{/privacy}", "received_events_url": "https://api.github.com/users/giraffate/received_events", "type": "User", "site_admin": false}, "committer": {"login": "giraffate", "id": 17407489, "node_id": "MDQ6VXNlcjE3NDA3NDg5", "avatar_url": "https://avatars.githubusercontent.com/u/17407489?v=4", "gravatar_id": "", "url": "https://api.github.com/users/giraffate", "html_url": "https://github.com/giraffate", "followers_url": "https://api.github.com/users/giraffate/followers", "following_url": "https://api.github.com/users/giraffate/following{/other_user}", "gists_url": "https://api.github.com/users/giraffate/gists{/gist_id}", "starred_url": "https://api.github.com/users/giraffate/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/giraffate/subscriptions", "organizations_url": "https://api.github.com/users/giraffate/orgs", "repos_url": "https://api.github.com/users/giraffate/repos", "events_url": "https://api.github.com/users/giraffate/events{/privacy}", "received_events_url": "https://api.github.com/users/giraffate/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2892a2b0f578edd290b3be6f5e5c3280bc160f24", "url": "https://api.github.com/repos/rust-lang/rust/commits/2892a2b0f578edd290b3be6f5e5c3280bc160f24", "html_url": "https://github.com/rust-lang/rust/commit/2892a2b0f578edd290b3be6f5e5c3280bc160f24"}], "stats": {"total": 35, "additions": 17, "deletions": 18}, "files": [{"sha": "0e9c7098af89dfb0a97da2b84206e81a952808ab", "filename": "clippy_lints/src/write.rs", "status": "modified", "additions": 15, "deletions": 18, "changes": 33, "blob_url": "https://github.com/rust-lang/rust/blob/5b484b405748fc8d7476f9a8d68d2e7227767271/clippy_lints%2Fsrc%2Fwrite.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5b484b405748fc8d7476f9a8d68d2e7227767271/clippy_lints%2Fsrc%2Fwrite.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fwrite.rs?ref=5b484b405748fc8d7476f9a8d68d2e7227767271", "patch": "@@ -2,7 +2,6 @@ use std::borrow::Cow;\n use std::ops::Range;\n \n use crate::utils::{snippet_with_applicability, span_lint, span_lint_and_sugg, span_lint_and_then};\n-use if_chain::if_chain;\n use rustc_ast::ast::{Expr, ExprKind, Item, ItemKind, MacCall, StrLit, StrStyle};\n use rustc_ast::token;\n use rustc_ast::tokenstream::TokenStream;\n@@ -12,7 +11,7 @@ use rustc_lint::{EarlyContext, EarlyLintPass};\n use rustc_parse::parser;\n use rustc_session::{declare_tool_lint, impl_lint_pass};\n use rustc_span::symbol::Symbol;\n-use rustc_span::{BytePos, FileName, Span};\n+use rustc_span::{BytePos, Span};\n \n declare_clippy_lint! {\n     /// **What it does:** This lint warns when you use `println!(\"\")` to\n@@ -236,15 +235,19 @@ impl EarlyLintPass for Write {\n     }\n \n     fn check_mac(&mut self, cx: &EarlyContext<'_>, mac: &MacCall) {\n+        fn is_build_scripts(cx: &EarlyContext<'_>) -> bool {\n+            // We could leverage the fact that Cargo sets the crate name\n+            // for build scripts to `build_script_build`.\n+            cx.sess\n+                .opts\n+                .crate_name\n+                .as_ref()\n+                .map_or(false, |crate_name| crate_name == \"build_script_build\")\n+        }\n+\n         if mac.path == sym!(println) {\n-            let filename = cx.sess.source_map().span_to_filename(mac.span());\n-            if_chain! {\n-                if let FileName::Real(filename) = filename;\n-                if let Some(filename) = filename.local_path().file_name();\n-                if filename != \"build.rs\";\n-                then {\n-                    span_lint(cx, PRINT_STDOUT, mac.span(), \"use of `println!`\");\n-                }\n+            if !is_build_scripts(cx) {\n+                span_lint(cx, PRINT_STDOUT, mac.span(), \"use of `println!`\");\n             }\n             if let (Some(fmt_str), _) = self.check_tts(cx, mac.args.inner_tokens(), false) {\n                 if fmt_str.symbol == Symbol::intern(\"\") {\n@@ -260,14 +263,8 @@ impl EarlyLintPass for Write {\n                 }\n             }\n         } else if mac.path == sym!(print) {\n-            if_chain! {\n-                let filename = cx.sess.source_map().span_to_filename(mac.span());\n-                if let FileName::Real(filename) = filename;\n-                if let Some(filename) = filename.local_path().file_name();\n-                if filename != \"build.rs\";\n-                then {\n-                    span_lint(cx, PRINT_STDOUT, mac.span(), \"use of `print!`\");\n-                }\n+            if !is_build_scripts(cx) {\n+                span_lint(cx, PRINT_STDOUT, mac.span(), \"use of `print!`\");\n             }\n             if let (Some(fmt_str), _) = self.check_tts(cx, mac.args.inner_tokens(), false) {\n                 if check_newlines(&fmt_str) {"}, {"sha": "b84bf9124fc8646c075319b7bf736e5ebac3133c", "filename": "tests/ui/print_stdout_build_script.rs", "status": "renamed", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5b484b405748fc8d7476f9a8d68d2e7227767271/tests%2Fui%2Fprint_stdout_build_script.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5b484b405748fc8d7476f9a8d68d2e7227767271/tests%2Fui%2Fprint_stdout_build_script.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fprint_stdout_build_script.rs?ref=5b484b405748fc8d7476f9a8d68d2e7227767271", "patch": "@@ -1,3 +1,5 @@\n+// compile-flags: --crate-name=build_script_build\n+\n #![warn(clippy::print_stdout)]\n \n fn main() {", "previous_filename": "tests/ui/build.rs"}, {"sha": "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391", "filename": "tests/ui/print_stdout_build_script.stderr", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/5b484b405748fc8d7476f9a8d68d2e7227767271/tests%2Fui%2Fprint_stdout_build_script.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/5b484b405748fc8d7476f9a8d68d2e7227767271/tests%2Fui%2Fprint_stdout_build_script.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fprint_stdout_build_script.stderr?ref=5b484b405748fc8d7476f9a8d68d2e7227767271", "previous_filename": "tests/ui/build.stderr"}]}