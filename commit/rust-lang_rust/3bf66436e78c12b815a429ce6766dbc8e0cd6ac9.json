{"sha": "3bf66436e78c12b815a429ce6766dbc8e0cd6ac9", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNiZjY2NDM2ZTc4YzEyYjgxNWE0MjljZTY3NjZkYmM4ZTBjZDZhYzk=", "commit": {"author": {"name": "topecongiro", "email": "seuchida@gmail.com", "date": "2017-07-13T09:43:35Z"}, "committer": {"name": "topecongiro", "email": "seuchida@gmail.com", "date": "2017-07-13T09:43:35Z"}, "message": "Update tests", "tree": {"sha": "06ced48ae61affbd0f1b4c86e1e7832822b88f5f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/06ced48ae61affbd0f1b4c86e1e7832822b88f5f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3bf66436e78c12b815a429ce6766dbc8e0cd6ac9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3bf66436e78c12b815a429ce6766dbc8e0cd6ac9", "html_url": "https://github.com/rust-lang/rust/commit/3bf66436e78c12b815a429ce6766dbc8e0cd6ac9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3bf66436e78c12b815a429ce6766dbc8e0cd6ac9/comments", "author": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "committer": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d9dc13efe1db413c92fa460544d1282a285700a5", "url": "https://api.github.com/repos/rust-lang/rust/commits/d9dc13efe1db413c92fa460544d1282a285700a5", "html_url": "https://github.com/rust-lang/rust/commit/d9dc13efe1db413c92fa460544d1282a285700a5"}], "stats": {"total": 36, "additions": 18, "deletions": 18}, "files": [{"sha": "18e389b0ba713dbd3aec38f91f00627043260f7d", "filename": "tests/system.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3bf66436e78c12b815a429ce6766dbc8e0cd6ac9/tests%2Fsystem.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3bf66436e78c12b815a429ce6766dbc8e0cd6ac9/tests%2Fsystem.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsystem.rs?ref=3bf66436e78c12b815a429ce6766dbc8e0cd6ac9", "patch": "@@ -15,7 +15,7 @@ extern crate term;\n \n use std::collections::HashMap;\n use std::fs;\n-use std::io::{self, Read, BufRead, BufReader};\n+use std::io::{self, BufRead, BufReader, Read};\n use std::path::{Path, PathBuf};\n \n use rustfmt::*;"}, {"sha": "3695d6b4913cf41d47618b4b22a4e625d52e00de", "filename": "tests/target/imports-reorder-lines.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/3bf66436e78c12b815a429ce6766dbc8e0cd6ac9/tests%2Ftarget%2Fimports-reorder-lines.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3bf66436e78c12b815a429ce6766dbc8e0cd6ac9/tests%2Ftarget%2Fimports-reorder-lines.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fimports-reorder-lines.rs?ref=3bf66436e78c12b815a429ce6766dbc8e0cd6ac9", "patch": "@@ -1,7 +1,7 @@\n // rustfmt-reorder_imports: true\n \n-use std::cmp::{d, c, b, a};\n-use std::cmp::{b, e, g, f};\n+use std::cmp::{a, b, c, d};\n+use std::cmp::{b, e, f, g};\n // This comment should stay with `use std::ddd;`\n use std::ddd;\n use std::ddd::aaa;"}, {"sha": "fbb56e3aa0c1eed15f36c2d40e19bfc651096afb", "filename": "tests/target/imports-reorder.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3bf66436e78c12b815a429ce6766dbc8e0cd6ac9/tests%2Ftarget%2Fimports-reorder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3bf66436e78c12b815a429ce6766dbc8e0cd6ac9/tests%2Ftarget%2Fimports-reorder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fimports-reorder.rs?ref=3bf66436e78c12b815a429ce6766dbc8e0cd6ac9", "patch": "@@ -3,4 +3,4 @@\n \n use path::{self /* self */, /* A */ A, B /* B */, C};\n \n-use {Z, aa, ab, ac, b};\n+use {aa, ab, ac, b, Z};"}, {"sha": "ed176e4300203994a4fde1dc609fbde85aed29df", "filename": "tests/target/imports.rs", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/3bf66436e78c12b815a429ce6766dbc8e0cd6ac9/tests%2Ftarget%2Fimports.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3bf66436e78c12b815a429ce6766dbc8e0cd6ac9/tests%2Ftarget%2Fimports.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fimports.rs?ref=3bf66436e78c12b815a429ce6766dbc8e0cd6ac9", "patch": "@@ -4,36 +4,36 @@\n // Imports.\n \n // Long import.\n-use syntax::ast::{ItemForeignMod, ItemImpl, ItemMac, ItemMod, ItemStatic, ItemDefaultImpl};\n+use syntax::ast::{ItemDefaultImpl, ItemForeignMod, ItemImpl, ItemMac, ItemMod, ItemStatic};\n use exceedingly::looooooooooooooooooooooooooooooooooooooooooooooooooooooooooong::import::path::{ItemA,\n                                                                                                 ItemB};\n use exceedingly::loooooooooooooooooooooooooooooooooooooooooooooooooooooooong::import::path::{ItemA,\n                                                                                              ItemB};\n \n-use list::{// Some item\n-           SomeItem, // Comment\n-           // Another item\n+use list::{// Another item\n            AnotherItem, // Another Comment\n            // Last Item\n-           LastItem};\n+           LastItem,\n+           // Some item\n+           SomeItem /* Comment */};\n \n use test::{/* A */ self /* B */, Other /* C */};\n \n use syntax;\n-use {/* Pre-comment! */ Foo, Bar /* comment */};\n+use {Bar /* comment */, /* Pre-comment! */ Foo};\n use Foo::{Bar, Baz};\n-pub use syntax::ast::{Expr_, Expr, ExprAssign, ExprCall, ExprMethodCall, ExprPath};\n+pub use syntax::ast::{Expr, ExprAssign, ExprCall, ExprMethodCall, ExprPath, Expr_};\n \n use self;\n use std::io;\n use std::io;\n \n mod Foo {\n-    pub use syntax::ast::{ItemForeignMod, ItemImpl, ItemMac, ItemMod, ItemStatic, ItemDefaultImpl};\n+    pub use syntax::ast::{ItemDefaultImpl, ItemForeignMod, ItemImpl, ItemMac, ItemMod, ItemStatic};\n \n     mod Foo2 {\n-        pub use syntax::ast::{self, ItemForeignMod, ItemImpl, ItemMac, ItemMod, ItemStatic,\n-                              ItemDefaultImpl};\n+        pub use syntax::ast::{self, ItemDefaultImpl, ItemForeignMod, ItemImpl, ItemMac, ItemMod,\n+                              ItemStatic};\n     }\n }\n "}, {"sha": "a7d7957b4787c2b734cdcb17a59d2cd46f6175a9", "filename": "tests/target/multiple.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/3bf66436e78c12b815a429ce6766dbc8e0cd6ac9/tests%2Ftarget%2Fmultiple.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3bf66436e78c12b815a429ce6766dbc8e0cd6ac9/tests%2Ftarget%2Fmultiple.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fmultiple.rs?ref=3bf66436e78c12b815a429ce6766dbc8e0cd6ac9", "patch": "@@ -17,9 +17,9 @@ extern crate foo;\n extern crate foo;\n \n use std::cell::*;\n-use std::{self, any, ascii, borrow, boxed, char, borrow, boxed, char, borrow, borrow, boxed, char,\n-          borrow, boxed, char, borrow, boxed, char, borrow, boxed, char, borrow, boxed, char,\n-          borrow, boxed, char, borrow, boxed, char, borrow, boxed, char};\n+use std::{self, any, ascii, borrow, borrow, borrow, borrow, borrow, borrow, borrow, borrow,\n+          borrow, borrow, borrow, boxed, boxed, boxed, boxed, boxed, boxed, boxed, boxed, boxed,\n+          boxed, char, char, char, char, char, char, char, char, char, char};\n \n mod doc;\n mod other;"}, {"sha": "ead395b2384a86cb296ef06deb830007f1b2d36c", "filename": "tests/target/nestedmod/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3bf66436e78c12b815a429ce6766dbc8e0cd6ac9/tests%2Ftarget%2Fnestedmod%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3bf66436e78c12b815a429ce6766dbc8e0cd6ac9/tests%2Ftarget%2Fnestedmod%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fnestedmod%2Fmod.rs?ref=3bf66436e78c12b815a429ce6766dbc8e0cd6ac9", "patch": "@@ -3,7 +3,7 @@ mod mod2a;\n mod mod2b;\n \n mod mymod1 {\n-    use mod2a::{Foo, Bar};\n+    use mod2a::{Bar, Foo};\n     mod mod3a;\n }\n "}]}