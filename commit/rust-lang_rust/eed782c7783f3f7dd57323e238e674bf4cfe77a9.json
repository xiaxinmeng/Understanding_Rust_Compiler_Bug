{"sha": "eed782c7783f3f7dd57323e238e674bf4cfe77a9", "node_id": "MDY6Q29tbWl0NzI0NzEyOmVlZDc4MmM3NzgzZjNmN2RkNTczMjNlMjM4ZTY3NGJmNGNmZTc3YTk=", "commit": {"author": {"name": "Marijn Haverbeke", "email": "marijnh@gmail.com", "date": "2011-11-02T18:03:33Z"}, "committer": {"name": "Marijn Haverbeke", "email": "marijnh@gmail.com", "date": "2011-11-02T18:03:49Z"}, "message": "Fix confusing sentence in tutorial.", "tree": {"sha": "55d68e06c8c14463ad0590134e93ad6ba8503210", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/55d68e06c8c14463ad0590134e93ad6ba8503210"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/eed782c7783f3f7dd57323e238e674bf4cfe77a9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/eed782c7783f3f7dd57323e238e674bf4cfe77a9", "html_url": "https://github.com/rust-lang/rust/commit/eed782c7783f3f7dd57323e238e674bf4cfe77a9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/eed782c7783f3f7dd57323e238e674bf4cfe77a9/comments", "author": {"login": "marijnh", "id": 144427, "node_id": "MDQ6VXNlcjE0NDQyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/144427?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marijnh", "html_url": "https://github.com/marijnh", "followers_url": "https://api.github.com/users/marijnh/followers", "following_url": "https://api.github.com/users/marijnh/following{/other_user}", "gists_url": "https://api.github.com/users/marijnh/gists{/gist_id}", "starred_url": "https://api.github.com/users/marijnh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marijnh/subscriptions", "organizations_url": "https://api.github.com/users/marijnh/orgs", "repos_url": "https://api.github.com/users/marijnh/repos", "events_url": "https://api.github.com/users/marijnh/events{/privacy}", "received_events_url": "https://api.github.com/users/marijnh/received_events", "type": "User", "site_admin": false}, "committer": {"login": "marijnh", "id": 144427, "node_id": "MDQ6VXNlcjE0NDQyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/144427?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marijnh", "html_url": "https://github.com/marijnh", "followers_url": "https://api.github.com/users/marijnh/followers", "following_url": "https://api.github.com/users/marijnh/following{/other_user}", "gists_url": "https://api.github.com/users/marijnh/gists{/gist_id}", "starred_url": "https://api.github.com/users/marijnh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marijnh/subscriptions", "organizations_url": "https://api.github.com/users/marijnh/orgs", "repos_url": "https://api.github.com/users/marijnh/repos", "events_url": "https://api.github.com/users/marijnh/events{/privacy}", "received_events_url": "https://api.github.com/users/marijnh/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "eef9a0bd3941a6d2d25db4635295198903575e6b", "url": "https://api.github.com/repos/rust-lang/rust/commits/eef9a0bd3941a6d2d25db4635295198903575e6b", "html_url": "https://github.com/rust-lang/rust/commit/eef9a0bd3941a6d2d25db4635295198903575e6b"}], "stats": {"total": 11, "additions": 6, "deletions": 5}, "files": [{"sha": "75bcb2df4cd5c8f3b39f26c67dba83f5752baef2", "filename": "doc/tutorial/syntax.md", "status": "modified", "additions": 6, "deletions": 5, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/eed782c7783f3f7dd57323e238e674bf4cfe77a9/doc%2Ftutorial%2Fsyntax.md", "raw_url": "https://github.com/rust-lang/rust/raw/eed782c7783f3f7dd57323e238e674bf4cfe77a9/doc%2Ftutorial%2Fsyntax.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/doc%2Ftutorial%2Fsyntax.md?ref=eed782c7783f3f7dd57323e238e674bf4cfe77a9", "patch": "@@ -109,11 +109,12 @@ constants can be defined with `const`:\n \n ## Types\n \n-The `-> bool` in the last example is the way a function's return type\n-is written. For functions that do not return a meaningful value (these\n-conceptually return nil in Rust), you can optionally say `-> ()` (`()`\n-is how nil is written), but usually the return annotation is simply\n-left off, as in the `fn main() { ... }` examples we've seen earlier.\n+The `-> bool` in the `is_four` example is the way a function's return\n+type is written. For functions that do not return a meaningful value\n+(these conceptually return nil in Rust), you can optionally say `->\n+()` (`()` is how nil is written), but usually the return annotation is\n+simply left off, as in the `fn main() { ... }` examples we've seen\n+earlier.\n \n Every argument to a function must have its type declared (for example,\n `x: int`). Inside the function, type inference will be able to"}]}